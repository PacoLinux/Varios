

CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=1  
        1         1             /* LLgen generated code from source zbc$declar:c.:ZBC3TOU */
        2         2             /* $Header: incl,v 2.2 87/02/16 21:35:40 ceriel Exp $ */
        3         3             #ifdef LL_DEBUG
        4         4   *S*       #define LL_assert(x) if(!(x)) LL_badassertion("x",__FILE__,__LINE__)
        5         5   *S*       #else
        6         6             #define LL_assert(x)  /* nothing */
        7         7             #endif
        8         8
        9         9             extern int LLsymb;
       10        10             extern char LLsets[];
       11        11
       12        12             #define LL_SAFE(x) /* Nothing */
       13        13             #define LL_SSCANDONE(x)  if (LLsymb != x) LLerror(x); else
       14        14             #define LL_SCANDONE(x)   if (LLsymb != x) LLerror(x); else
       15        15             #define LL_T_NOSCANDONE(x)  LLscan(x)
       16        16
       17        17             # include "Lpars:h"
       18        18
       19        19             extern unsigned int LLscnt[];
       20        20             extern unsigned int LLtcnt[];
       21        21             extern int LLcsymb;
       22        22             extern int LL_symb;
       23        23
       24        24             #define LLsdecr(d) {LL_assert(LLscnt[d] > 0); LLscnt[d]--;}
       25        25             #define LLtdecr(d) {LL_assert(LLtcnt[d] > 0); LLtcnt[d]--;}
       26        26             #define LLsincr(d) LLscnt[d]++
       27        27             #define LLtincr(d) LLtcnt[d]++
       28        28
       29        29             #define param_type_specifier(x) LLfirst((x), 0)
       30        30             # line 8 "zbc$declar:g.:ZBC3TOU"
       31        31
       32        32             #include <alloc:h>
       33        33             #include "nobitfield:h"
       34        34             #include "debug:h"
       35        35             #include "arith:h"
       36        36             #include "LLlex:h"
       37        37             #include "idf:h"
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=2  
       38        38             #include "type:h"
       39        39             #include "struct:h"
       40        40             #include "field:h"
       41        41             #include "decspecs:h"
       42        42             #include "def:h"
       43        43             #include "declar:h"
       44        44             #include "label:h"
       45        45             #include "expr:h"
       46        46             #include "sizes:h"
       47        47             #include "level:h"
       48        48
       49        49             extern char options[];
       50        50             L0_declaration (
       51        51             ) {
       52        52    1        # line 31 "zbc$declar:g.:ZBC3TOU"
       53        53    1        struct decspecs Ds;
       54        54    1        LLsincr(1);
       55        55    1        LLtincr(89);
       56        56    1        # line 33 "zbc$declar:g.:ZBC3TOU"
       57        57    1        {Ds = null_decspecs;}
       58        58    1        L1_decl_specifiers(
       59        59    1        # line 34 "zbc$declar:g.:ZBC3TOU"
       60        60    1        &Ds);
       61        61    1        L_2:
       62        62    1        switch(LLcsymb) {
       63        63    2        case /*  IDENTIFIER  */ 1 : ;
       64        64    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
       65        65    2        case /* '(' */ 92 : ;
       66        66    2        case /* '*' */ 94 : ;
       67        67    2        LLsdecr(1);
       68        68    2        L2_init_declarator_list(
       69        69    2        # line 36 "zbc$declar:g.:ZBC3TOU"
       70        70    2        &Ds);
       71        71    2        break;
       72        72    2        default: if (LLskip()) goto L_2;
       73        73    2        goto L_3;
       74        74    2        case /* ';' */ 89 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=3  
       75        75    2        L_3: ;
       76        76    2        LLsdecr(1);
       77        77    2        # line 39 "zbc$declar:g.:ZBC3TOU"
       78        78    2        {
       79        79    3                int fund = Ds.ds_type->tp_fund;
       80        80    3                if (fund != UNION && fund != STRUCT && fund != ENUM)
       81        81    3                   warning("declaration must declare a variable");
       82        82    3             }
       83        83    2        break;
       84        84    2        }
       85        85    1        LLtdecr(89);
       86        86    1        LL_SCANDONE(';');
       87        87    1        }
       88        88             L1_decl_specifiers (
       89        89             # line 73 "zbc$declar:g.:ZBC3TOU"
       90        90              ds) register struct decspecs *ds; {
       91        91    1        LLsincr(0);
       92        92    1        L_2:
       93        93    1        switch(LLcsymb) {
       94        94    2        case /*  AUTO  */ 19 : ;
       95        95    2        case /*  EXTERN  */ 27 : ;
       96        96    2        case /*  LONG  */ 31 : ;
       97        97    2        case /*  REGISTER  */ 32 : ;
       98        98    2        case /*  SHORT  */ 34 : ;
       99        99    2        case /*  STATIC  */ 37 : ;
      100       100    2        case /*  TYPEDEF  */ 40 : ;
      101       101    2        case /*  UNSIGNED  */ 42 : ;
      102       102    2        case /*  SIGNED  */ 44 : ;
      103       103    2        case /*  CONST  */ 45 : ;
      104       104    2        case /*  VOLATILE  */ 46 : ;
      105       105    2        LLsdecr(0);
      106       106    2        LLsincr(2);
      107       107    2        LLsincr(3);
      108       108    2        for (;;) {
      109       109    3        L4_other_specifier(
      110       110    3        # line 79 "zbc$declar:g.:ZBC3TOU"
      111       111    3        ds);
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=4  
      112       112    3        LLread();
      113       113    3        L_4 : switch(LLcsymb) {
      114       114    4        case /*  IDENTIFIER  */ 1 : ;
      115       115    4        case /*  TYPE_IDENTIFIER  */ 2 : ;
      116       116    4        case /*  ENUM  */ 26 : ;
      117       117    4        case /*  STRUCT  */ 38 : ;
      118       118    4        case /*  UNION  */ 41 : ;
      119       119    4        case /* ';' */ 89 : ;
      120       120    4        case /* ',' */ 90 : ;
      121       121    4        case /* '(' */ 92 : ;
      122       122    4        case /* ')' */ 93 : ;
      123       123    4        case /* '*' */ 94 : ;
      124       124    4        case /* '[' */ 95 : ;
      125       125    4        case /* ':' */ 99 : ;
      126       126    4        break;
      127       127    4        default:{int LL_1=LLnext(-30);
      128       128    5        ;if (!LL_1) {
      129       129    6        break;
      130       130    6        }
      131       131    5        else if (LL_1 & 1) goto L_4;}
      132       132    4        case /*  AUTO  */ 19 : ;
      133       133    4        case /*  EXTERN  */ 27 : ;
      134       134    4        case /*  LONG  */ 31 : ;
      135       135    4        case /*  REGISTER  */ 32 : ;
      136       136    4        case /*  SHORT  */ 34 : ;
      137       137    4        case /*  STATIC  */ 37 : ;
      138       138    4        case /*  TYPEDEF  */ 40 : ;
      139       139    4        case /*  UNSIGNED  */ 42 : ;
      140       140    4        case /*  SIGNED  */ 44 : ;
      141       141    4        case /*  CONST  */ 45 : ;
      142       142    4        case /*  VOLATILE  */ 46 : ;
      143       143    4        continue;
      144       144    4        }
      145       145    3        LLsdecr(2);
      146       146    3        break;
      147       147    3        }
      148       148    2        LLsdecr(3);
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=5  
      149       149    2        switch(LLcsymb) {
      150       150    3        case /*  TYPE_IDENTIFIER  */ 2 : ;
      151       151    3        case /*  ENUM  */ 26 : ;
      152       152    3        case /*  STRUCT  */ 38 : ;
      153       153    3        case /*  UNION  */ 41 : ;
      154       154    3        LLsincr(2);
      155       155    3        L5_single_type_specifier(
      156       156    3        # line 81 "zbc$declar:g.:ZBC3TOU"
      157       157    3        ds);
      158       158    3        for (;;) {
      159       159    4        L_8 : switch(LLcsymb) {
      160       160    5        case /*  IDENTIFIER  */ 1 : ;
      161       161    5        case /*  TYPE_IDENTIFIER  */ 2 : ;
      162       162    5        case /* ';' */ 89 : ;
      163       163    5        case /* ',' */ 90 : ;
      164       164    5        case /* '(' */ 92 : ;
      165       165    5        case /* ')' */ 93 : ;
      166       166    5        case /* '*' */ 94 : ;
      167       167    5        case /* '[' */ 95 : ;
      168       168    5        case /* ':' */ 99 : ;
      169       169    5        break;
      170       170    5        default:{int LL_2=LLnext(-30);
      171       171    6        ;if (!LL_2) {
      172       172    7        break;
      173       173    7        }
      174       174    6        else if (LL_2 & 1) goto L_8;}
      175       175    5        case /*  AUTO  */ 19 : ;
      176       176    5        case /*  EXTERN  */ 27 : ;
      177       177    5        case /*  LONG  */ 31 : ;
      178       178    5        case /*  REGISTER  */ 32 : ;
      179       179    5        case /*  SHORT  */ 34 : ;
      180       180    5        case /*  STATIC  */ 37 : ;
      181       181    5        case /*  TYPEDEF  */ 40 : ;
      182       182    5        case /*  UNSIGNED  */ 42 : ;
      183       183    5        case /*  SIGNED  */ 44 : ;
      184       184    5        case /*  CONST  */ 45 : ;
      185       185    5        case /*  VOLATILE  */ 46 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=6  
      186       186    5        L4_other_specifier(
      187       187    5        # line 81 "zbc$declar:g.:ZBC3TOU"
      188       188    5        ds);
      189       189    5        LLread();
      190       190    5        continue;
      191       191    5        }
      192       192    4        LLsdecr(2);
      193       193    4        break;
      194       194    4        }
      195       195    3        break;
      196       196    3        default:
      197       197    3        break;
      198       198    3        }
      199       199    2        break;
      200       200    2        default: if (LLskip()) goto L_2;
      201       201    2        goto L_3;
      202       202    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
      203       203    2        case /*  ENUM  */ 26 : ;
      204       204    2        case /*  STRUCT  */ 38 : ;
      205       205    2        case /*  UNION  */ 41 : ;
      206       206    2        L_3: ;
      207       207    2        LLsdecr(0);
      208       208    2        LLsincr(2);
      209       209    2        L5_single_type_specifier(
      210       210    2        # line 86 "zbc$declar:g.:ZBC3TOU"
      211       211    2        ds);
      212       212    2        for (;;) {
      213       213    3        L_9 : switch(LLcsymb) {
      214       214    4        case /*  IDENTIFIER  */ 1 : ;
      215       215    4        case /*  TYPE_IDENTIFIER  */ 2 : ;
      216       216    4        case /* ';' */ 89 : ;
      217       217    4        case /* ',' */ 90 : ;
      218       218    4        case /* '(' */ 92 : ;
      219       219    4        case /* ')' */ 93 : ;
      220       220    4        case /* '*' */ 94 : ;
      221       221    4        case /* '[' */ 95 : ;
      222       222    4        case /* ':' */ 99 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=7  
      223       223    4        break;
      224       224    4        default:{int LL_3=LLnext(-30);
      225       225    5        ;if (!LL_3) {
      226       226    6        break;
      227       227    6        }
      228       228    5        else if (LL_3 & 1) goto L_9;}
      229       229    4        case /*  AUTO  */ 19 : ;
      230       230    4        case /*  EXTERN  */ 27 : ;
      231       231    4        case /*  LONG  */ 31 : ;
      232       232    4        case /*  REGISTER  */ 32 : ;
      233       233    4        case /*  SHORT  */ 34 : ;
      234       234    4        case /*  STATIC  */ 37 : ;
      235       235    4        case /*  TYPEDEF  */ 40 : ;
      236       236    4        case /*  UNSIGNED  */ 42 : ;
      237       237    4        case /*  SIGNED  */ 44 : ;
      238       238    4        case /*  CONST  */ 45 : ;
      239       239    4        case /*  VOLATILE  */ 46 : ;
      240       240    4        L4_other_specifier(
      241       241    4        # line 86 "zbc$declar:g.:ZBC3TOU"
      242       242    4        ds);
      243       243    4        LLread();
      244       244    4        continue;
      245       245    4        }
      246       246    3        LLsdecr(2);
      247       247    3        break;
      248       248    3        }
      249       249    2        break;
      250       250    2        }
      251       251    1        # line 88 "zbc$declar:g.:ZBC3TOU"
      252       252    1        {do_decspecs(ds);}
      253       253    1        }
      254       254             L4_other_specifier (
      255       255             # line 92 "zbc$declar:g.:ZBC3TOU"
      256       256              ds) register struct decspecs *ds; {
      257       257    1        switch(LLcsymb) {
      258       258    2        default:
      259       259    2        switch(LLcsymb) {
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=8  
      260       260    3        default:
      261       261    3        LL_SAFE(AUTO);
      262       262    3        break;
      263       263    3        case /*  STATIC  */ 37 : ;
      264       264    3        LL_SAFE(STATIC);
      265       265    3        break;
      266       266    3        case /*  EXTERN  */ 27 : ;
      267       267    3        LL_SAFE(EXTERN);
      268       268    3        break;
      269       269    3        case /*  TYPEDEF  */ 40 : ;
      270       270    3        LL_SAFE(TYPEDEF);
      271       271    3        break;
      272       272    3        case /*  REGISTER  */ 32 : ;
      273       273    3        LL_SAFE(REGISTER);
      274       274    3        break;
      275       275    3        }
      276       276    2        # line 94 "zbc$declar:g.:ZBC3TOU"
      277       277    2        {  if (ds->ds_sc_given)
      278       278    3               error("repeated storage class specifier");
      279       279    3            ds->ds_sc_given = 1;
      280       280    3            ds->ds_sc = DOT;
      281       281    3         }
      282       282    2        break;
      283       283    2        case /*  LONG  */ 31 : ;
      284       284    2        case /*  SHORT  */ 34 : ;
      285       285    2        switch(LLcsymb) {
      286       286    3        case /*  SHORT  */ 34 : ;
      287       287    3        LL_SAFE(SHORT);
      288       288    3        break;
      289       289    3        default:
      290       290    3        LL_SAFE(LONG);
      291       291    3        break;
      292       292    3        }
      293       293    2        # line 101 "zbc$declar:g.:ZBC3TOU"
      294       294    2        {  if (ds->ds_size)
      295       295    3               error("repeated size specifier");
      296       296    3            ds->ds_size = DOT;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=9  
      297       297    3         }
      298       298    2        break;
      299       299    2        case /*  UNSIGNED  */ 42 : ;
      300       300    2        case /*  SIGNED  */ 44 : ;
      301       301    2        switch(LLcsymb) {
      302       302    3        default:
      303       303    3        LL_SAFE(UNSIGNED);
      304       304    3        break;
      305       305    3        case /*  SIGNED  */ 44 : ;
      306       306    3        LL_SAFE(SIGNED);
      307       307    3        break;
      308       308    3        }
      309       309    2        # line 107 "zbc$declar:g.:ZBC3TOU"
      310       310    2        {  if (ds->ds_unsigned)
      311       311    3               error("sign attribute specified twice");
      312       312    3            ds->ds_unsigned = DOT;
      313       313    3         }
      314       314    2        break;
      315       315    2        case /*  CONST  */ 45 : ;
      316       316    2        LL_SAFE(CONST);
      317       317    2        # line 113 "zbc$declar:g.:ZBC3TOU"
      318       318    2        {  if (ds->ds_const)
      319       319    3               error("const attribute specified twice");
      320       320    3            ds->ds_const = DOT;
      321       321    3         }
      322       322    2        break;
      323       323    2        case /*  VOLATILE  */ 46 : ;
      324       324    2        LL_SAFE(VOLATILE);
      325       325    2        # line 119 "zbc$declar:g.:ZBC3TOU"
      326       326    2        {  if (ds->ds_volatile)
      327       327    3               error("volatile attribute specified twice");
      328       328    3            ds->ds_volatile = DOT;
      329       329    3         }
      330       330    2        break;
      331       331    2        }
      332       332    1        }
      333       333             L6_type_specifier (
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=10 
      334       334             # line 126 "zbc$declar:g.:ZBC3TOU"
      335       335              tpp) struct type **tpp; {
      336       336    1        # line 130 "zbc$declar:g.:ZBC3TOU"
      337       337    1        struct decspecs Ds; Ds = null_decspecs;
      338       338    1        L1_decl_specifiers(
      339       339    1        # line 132 "zbc$declar:g.:ZBC3TOU"
      340       340    1        &Ds);
      341       341    1        # line 133 "zbc$declar:g.:ZBC3TOU"
      342       342    1        {
      343       343    2            if (Ds.ds_sc_given)
      344       344    2               warning("storage class \"%s\" ignored",symbol2str(Ds.ds_sc));
      345       345    2            if (Ds.ds_sc == REGISTER)
      346       346    2               warning("register ignored");
      347       347    2         }
      348       348    1        # line 139 "zbc$declar:g.:ZBC3TOU"
      349       349    1        {*tpp = Ds.ds_type;}
      350       350    1        }
      351       351             L5_single_type_specifier (
      352       352             # line 142 "zbc$declar:g.:ZBC3TOU"
      353       353              ds) register struct decspecs *ds; {
      354       354    1        switch(LLcsymb) {
      355       355    2        default:
      356       356    2        LL_SSCANDONE(TYPE_IDENTIFIER);
      357       357    2        # line 144 "zbc$declar:g.:ZBC3TOU"
      358       358    2        {
      359       359    3            idf2type(dot.tk_idf, &ds->ds_type);
      360       360    3            ds->ds_tplvl = dot.tk_idf->id_def->df_level;
      361       361    3         }
      362       362    2        LLread();
      363       363    2        break;
      364       364    2        case /*  STRUCT  */ 38 : ;
      365       365    2        case /*  UNION  */ 41 : ;
      366       366    2        L7_struct_or_union_specifier(
      367       367    2        # line 149 "zbc$declar:g.:ZBC3TOU"
      368       368    2        &ds->ds_type);
      369       369    2        break;
      370       370    2        case /*  ENUM  */ 26 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=11 
      371       371    2        L8_enum_specifier(
      372       372    2        # line 151 "zbc$declar:g.:ZBC3TOU"
      373       373    2        &ds->ds_type);
      374       374    2        break;
      375       375    2        }
      376       376    1        }
      377       377             L2_init_declarator_list (
      378       378             # line 155 "zbc$declar:g.:ZBC3TOU"
      379       379              ds) struct decspecs *ds; {
      380       380    1        LLtincr(90);
      381       381    1        L9_init_declarator(
      382       382    1        # line 156 "zbc$declar:g.:ZBC3TOU"
      383       383    1        ds);
      384       384    1        for (;;) {
      385       385    2        L_1 : switch(LLcsymb) {
      386       386    3        case /* ';' */ 89 : ;
      387       387    3        break;
      388       388    3        default:{int LL_4=LLnext(44);
      389       389    4        ;if (!LL_4) {
      390       390    5        break;
      391       391    5        }
      392       392    4        else if (LL_4 & 1) goto L_1;}
      393       393    3        case /* ',' */ 90 : ;
      394       394    3        LL_SAFE(',');
      395       395    3        LLread();
      396       396    3        L9_init_declarator(
      397       397    3        # line 157 "zbc$declar:g.:ZBC3TOU"
      398       398    3        ds);
      399       399    3        continue;
      400       400    3        }
      401       401    2        LLtdecr(90);
      402       402    2        break;
      403       403    2        }
      404       404    1        }
      405       405             L9_init_declarator (
      406       406             # line 160 "zbc$declar:g.:ZBC3TOU"
      407       407              ds) register struct decspecs *ds; {
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=12 
      408       408    1        # line 161 "zbc$declar:g.:ZBC3TOU"
      409       409    1
      410       410    1            struct declarator Dc;
      411       411    1            int must_init;
      412       412    1
      413       413    1        LLsincr(4);
      414       414    1        # line 166 "zbc$declar:g.:ZBC3TOU"
      415       415    1        {
      416       416    2            Dc = null_declarator;
      417       417    2         }
      418       418    1        LLsdecr(4);
      419       419    1        LLsincr(5);
      420       420    1        LLsincr(6);
      421       421    1        L10_declarator(
      422       422    1        # line 170 "zbc$declar:g.:ZBC3TOU"
      423       423    1        &Dc);
      424       424    1        # line 171 "zbc$declar:g.:ZBC3TOU"
      425       425    1        {
      426       426    2            reject_params(&Dc, 1);
      427       427    2            must_init = declare_idf(ds, &Dc, level);
      428       428    2         }
      429       429    1        L_2:
      430       430    1        switch(LLcsymb) {
      431       431    2        case /*  IDENTIFIER  */ 1 : ;
      432       432    2        case /*  STRING  */ 3 : ;
      433       433    2        case /*  INTEGER  */ 5 : ;
      434       434    2        case /*  FLOATING  */ 6 : ;
      435       435    2        case /*  PLUSPLUS  */ 9 : ;
      436       436    2        case /*  MINMIN  */ 10 : ;
      437       437    2        case /*  SIZEOF  */ 35 : ;
      438       438    2        case /*  ALIGNOF  */ 36 : ;
      439       439    2        case /* '=' */ 91 : ;
      440       440    2        case /* '(' */ 92 : ;
      441       441    2        case /* '*' */ 94 : ;
      442       442    2        case /* '{' */ 97 : ;
      443       443    2        case /* '&' */ 102 : ;
      444       444    2        case /* '-' */ 103 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=13 
      445       445    2        case /* '+' */ 104 : ;
      446       446    2        case /* '!' */ 105 : ;
      447       447    2        case /* '~' */ 106 : ;
      448       448    2        LLsdecr(6);
      449       449    2        L11_initializer(
      450       450    2        # line 176 "zbc$declar:g.:ZBC3TOU"
      451       451    2        Dc.dc_idf, ds->ds_sc, must_init);
      452       452    2        break;
      453       453    2        default: if (LLskip()) goto L_2;
      454       454    2        goto L_3;
      455       455    2        case /* ';' */ 89 : ;
      456       456    2        case /* ',' */ 90 : ;
      457       457    2        L_3: ;
      458       458    2        LLsdecr(6);
      459       459    2        # line 178 "zbc$declar:g.:ZBC3TOU"
      460       460    2        {
      461       461    3             if (must_init)
      462       462    3                error("size of local %s is unknown",Dc.dc_idf->id_text);
      463       463    3             code_declaration(Dc.dc_idf, (struct expr *) 0, level, ds->ds_sc);
      464       464    3            }
      465       465    2        break;
      466       466    2        }
      467       467    1        # line 185 "zbc$declar:g.:ZBC3TOU"
      468       468    1        {remove_declarator(&Dc);}
      469       469    1        }
      470       470             L11_initializer (
      471       471             # line 189 "zbc$declar:g.:ZBC3TOU"
      472       472              idf,sc,must_init) struct idf *idf; int sc;int must_init; {
      473       473    1        # line 190 "zbc$declar:g.:ZBC3TOU"
      474       474    1
      475       475    1            struct expr *expr = (struct expr *) 0;
      476       476    1            int fund = idf->id_def->df_type->tp_fund;
      477       477    1            int labelflag = level >= L_LOCAL && (sc==AUTO || sc==0 || sc==REGISTER) &&

      478       478    1                        (fund==STRUCT || fund==UNION || fund==ARRAY);
      479       479    1            int globalflag = level == L_GLOBAL ||
      480       480    1                   (level >= L_LOCAL && sc == STATIC);
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=14 
      481       481    1
      482       482    1        LLsincr(7);
      483       483    1        # line 199 "zbc$declar:g.:ZBC3TOU"
      484       484    1        {  if (idf->id_def->df_type->tp_fund == FUNCTION)  {
      485       485    3               error("illegal initialization of function");
      486       486    3            }
      487       487    2         }
      488       488    1        switch(LLcsymb) {
      489       489    2        case /* '=' */ 91 : ;
      490       490    2        LL_SAFE('=');
      491       491    2        LLread();
      492       492    2        break;
      493       493    2        default:
      494       494    2        # line 207 "zbc$declar:g.:ZBC3TOU"
      495       495    2        {warning("old-fashioned initialization, insert =");}
      496       496    2        break;
      497       497    2        }
      498       498    1        # line 212 "zbc$declar:g.:ZBC3TOU"
      499       499    1        {  if (globalflag || labelflag) {
      500       500    3               struct expr ex;
      501       501    3               code_declaration(idf, &ex, level, sc);
      502       502    3            }
      503       503    2         }
      504       504    1        LLsdecr(7);
      505       505    1        L12_initial_value(
      506       506    1        # line 217 "zbc$declar:g.:ZBC3TOU"
      507       507    1        (globalflag || labelflag) ? &(idf->id_def->df_type) : (struct type **)0,
      508       508    1               &expr, labelflag);
      509       509    1        # line 219 "zbc$declar:g.:ZBC3TOU"
      510       510    1        {  if (! globalflag) {
      511       511    3               if (idf->id_def->df_type->tp_fund == FUNCTION)  {
      512       512    4                  free_expression(expr);
      513       513    4                  expr = 0;
      514       514    4               }
      515       515    3               if (!labelflag)
      516       516    3                  code_declaration(idf, expr, level, sc);
      517       517    3               else init_auto_aggregate(idf, must_init);
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=15 
      518       518    3        #ifdef DEBUG
      519       519    3               print_expr("initializer-expression", expr);
      520       520    3        #endif DEBUG
      521       521    3            }
      522       522    2            init_idf(idf);
      523       523    2         }
      524       524    1        }
      525       525             L10_declarator (
      526       526             # line 245 "zbc$declar:g.:ZBC3TOU"
      527       527              dc) register struct declarator *dc; {
      528       528    1        # line 246 "zbc$declar:g.:ZBC3TOU"
      529       529    1
      530       530    1            arith count;
      531       531    1            struct formal *fm = 0;
      532       532    1            int elipsis = 0;
      533       533    1            int t_const = 0;
      534       534    1            int t_vol = 0;
      535       535    1
      536       536    1        L_2:
      537       537    1        switch(LLcsymb) {
      538       538    2        default: if (LLskip()) goto L_2;
      539       539    2        goto L_3;
      540       540    2        case /*  IDENTIFIER  */ 1 : ;
      541       541    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
      542       542    2        case /* '(' */ 92 : ;
      543       543    2        L_3: ;
      544       544    2        LLsdecr(5);
      545       545    2        LLsincr(8);
      546       546    2        L13_primary_declarator(
      547       547    2        # line 254 "zbc$declar:g.:ZBC3TOU"
      548       548    2        dc);
      549       549    2        LLread();
      550       550    2        for (;;) {
      551       551    3        L_4 : switch(LLcsymb) {
      552       552    4        case /* '(' */ 92 : ;
      553       553    4        # line 255 "zbc$declar:g.:ZBC3TOU"
      554       554    4        if ((1)) goto L_5;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=16 
      555       555    4        case /*  IDENTIFIER  */ 1 : ;
      556       556    4        case /*  TYPE_IDENTIFIER  */ 2 : ;
      557       557    4        case /*  STRING  */ 3 : ;
      558       558    4        case /*  INTEGER  */ 5 : ;
      559       559    4        case /*  FLOATING  */ 6 : ;
      560       560    4        case /*  PLUSPLUS  */ 9 : ;
      561       561    4        case /*  MINMIN  */ 10 : ;
      562       562    4        case /*  AUTO  */ 19 : ;
      563       563    4        case /*  ENUM  */ 26 : ;
      564       564    4        case /*  EXTERN  */ 27 : ;
      565       565    4        case /*  LONG  */ 31 : ;
      566       566    4        case /*  REGISTER  */ 32 : ;
      567       567    4        case /*  SHORT  */ 34 : ;
      568       568    4        case /*  SIZEOF  */ 35 : ;
      569       569    4        case /*  ALIGNOF  */ 36 : ;
      570       570    4        case /*  STATIC  */ 37 : ;
      571       571    4        case /*  STRUCT  */ 38 : ;
      572       572    4        case /*  TYPEDEF  */ 40 : ;
      573       573    4        case /*  UNION  */ 41 : ;
      574       574    4        case /*  UNSIGNED  */ 42 : ;
      575       575    4        case /*  SIGNED  */ 44 : ;
      576       576    4        case /*  CONST  */ 45 : ;
      577       577    4        case /*  VOLATILE  */ 46 : ;
      578       578    4        case /* ';' */ 89 : ;
      579       579    4        case /* ',' */ 90 : ;
      580       580    4        case /* '=' */ 91 : ;
      581       581    4        case /* ')' */ 93 : ;
      582       582    4        case /* '*' */ 94 : ;
      583       583    4        case /* '{' */ 97 : ;
      584       584    4        case /* '}' */ 98 : ;
      585       585    4        case /* ':' */ 99 : ;
      586       586    4        case /* '&' */ 102 : ;
      587       587    4        case /* '-' */ 103 : ;
      588       588    4        case /* '+' */ 104 : ;
      589       589    4        case /* '!' */ 105 : ;
      590       590    4        case /* '~' */ 106 : ;
      591       591    4        break;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=17 
      592       592    4        default:{int LL_5=LLnext(-120);
      593       593    5        ;if (!LL_5) {
      594       594    6        break;
      595       595    6        }
      596       596    5        else if (LL_5 & 1) goto L_4;}
      597       597    4        case /* '[' */ 95 : ;
      598       598    4        L_5 : ;
      599       599    4        switch(LLcsymb) {
      600       600    5        default:
      601       601    5        LLsincr(9);
      602       602    5        LLtincr(93);
      603       603    5        LL_SAFE('(');
      604       604    5        LLread();
      605       605    5        L_10:
      606       606    5        switch(LLcsymb) {
      607       607    6        default: if (LLskip()) goto L_10;
      608       608    6        goto L_11;
      609       609    6        case /*  TYPE_IDENTIFIER  */ 2 : ;
      610       610    6        case /* ')' */ 93 : ;
      611       611    6        # line 261 "zbc$declar:g.:ZBC3TOU"
      612       612    6        if (!(param_type_specifier(DOT))) goto L_9;
      613       613    6        case /*  AUTO  */ 19 : ;
      614       614    6        case /*  ENUM  */ 26 : ;
      615       615    6        case /*  EXTERN  */ 27 : ;
      616       616    6        case /*  LONG  */ 31 : ;
      617       617    6        case /*  REGISTER  */ 32 : ;
      618       618    6        case /*  SHORT  */ 34 : ;
      619       619    6        case /*  STATIC  */ 37 : ;
      620       620    6        case /*  STRUCT  */ 38 : ;
      621       621    6        case /*  TYPEDEF  */ 40 : ;
      622       622    6        case /*  UNION  */ 41 : ;
      623       623    6        case /*  UNSIGNED  */ 42 : ;
      624       624    6        case /*  SIGNED  */ 44 : ;
      625       625    6        case /*  CONST  */ 45 : ;
      626       626    6        case /*  VOLATILE  */ 46 : ;
      627       627    6        L_11: ;
      628       628    6        LLsdecr(9);
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=18 
      629       629    6        # line 262 "zbc$declar:g.:ZBC3TOU"
      630       630    6        {
      631       631    7                  stack_level();
      632       632    7                  if (level == L_FORMAL1)
      633       633    7                     stack_level();
      634       634    7               }
      635       635    6        L_12 : switch(LLcsymb) {
"zbc$declar:g.:ZBC3TOU", line 267: (warning) label L_12 is not used
      636       636    7        default:
      637       637    7        break;
      638       638    7        case /*  TYPE_IDENTIFIER  */ 2 : ;
      639       639    7        case /*  AUTO  */ 19 : ;
      640       640    7        case /*  ENUM  */ 26 : ;
      641       641    7        case /*  EXTERN  */ 27 : ;
      642       642    7        case /*  LONG  */ 31 : ;
      643       643    7        case /*  REGISTER  */ 32 : ;
      644       644    7        case /*  SHORT  */ 34 : ;
      645       645    7        case /*  STATIC  */ 37 : ;
      646       646    7        case /*  STRUCT  */ 38 : ;
      647       647    7        case /*  TYPEDEF  */ 40 : ;
      648       648    7        case /*  UNION  */ 41 : ;
      649       649    7        case /*  UNSIGNED  */ 42 : ;
      650       650    7        case /*  SIGNED  */ 44 : ;
      651       651    7        case /*  CONST  */ 45 : ;
      652       652    7        case /*  VOLATILE  */ 46 : ;
      653       653    7        L14_parameter_dec_list(
      654       654    7        # line 267 "zbc$declar:g.:ZBC3TOU"
      655       655    7        &fm,&elipsis);
      656       656    7        }
      657       657    6        break;
      658       658    6        L_9 : ;
      659       659    6        case /*  IDENTIFIER  */ 1 : ;
      660       660    6        LLsdecr(9);
      661       661    6        L_13 : switch(LLcsymb) {
"zbc$declar:g.:ZBC3TOU", line 273: (warning) label L_13 is not used
      662       662    7        default:
      663       663    7        break;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=19 
      664       664    7        case /*  IDENTIFIER  */ 1 : ;
      665       665    7        case /*  TYPE_IDENTIFIER  */ 2 : ;
      666       666    7        L15_formal_list(
      667       667    7        # line 269 "zbc$declar:g.:ZBC3TOU"
      668       668    7        &fm);
      669       669    7        }
      670       670    6        break;
      671       671    6        }
      672       672    5        LLtdecr(93);
      673       673    5        LL_SCANDONE(')');
      674       674    5        # line 272 "zbc$declar:g.:ZBC3TOU"
      675       675    5        {
      676       676    6               if (fm && dc->dc_formal)   {
      677       677    7                  if (fm->fm_type) {
      678       678    8                     unstack_level();
      679       679    8                     if (level == L_FORMAL1) unstack_level();
      680       680    8                     }
      681       681    7                  else error("formal arguments must be absent or declared with types")
                               ;
      682       682    7                  }
      683       683    6               add_decl_unary(dc, FUNCTION, (arith)0, fm);
      684       684    6               fm = 0;
      685       685    6            }
      686       686    5        break;
      687       687    5        case /* '[' */ 95 : ;
      688       688    5        L16_arrayer(
      689       689    5        # line 284 "zbc$declar:g.:ZBC3TOU"
      690       690    5        &count);
      691       691    5        # line 285 "zbc$declar:g.:ZBC3TOU"
      692       692    5        {add_decl_unary(dc, ARRAY, count, NO_PARAMS);}
      693       693    5        break;
      694       694    5        }
      695       695    4        LLread();
      696       696    4        continue;
      697       697    4        }
      698       698    3        LLsdecr(8);
      699       699    3        break;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=20 
      700       700    3        }
      701       701    2        break;
      702       702    2        case /* '*' */ 94 : ;
      703       703    2        LLsdecr(5);
      704       704    2        LLsincr(10);
      705       705    2        LL_SAFE('*');
      706       706    2        L17_pointer_type_qualifier(
      707       707    2        # line 288 "zbc$declar:g.:ZBC3TOU"
      708       708    2        dc, &t_const, &t_vol);
      709       709    2        # line 289 "zbc$declar:g.:ZBC3TOU"
      710       710    2        {
      711       711    3          add_decl_unary(dc, POINTER, (arith)(t_const*2+t_vol), NO_PARAMS);
      712       712    3         }
      713       713    2        break;
      714       714    2        }
      715       715    1        }
      716       716             L13_primary_declarator (
      717       717             # line 294 "zbc$declar:g.:ZBC3TOU"
      718       718              dc) register struct declarator *dc; {
      719       719    1        switch(LLcsymb) {
      720       720    2        default:
      721       721    2        L18_identifier(
      722       722    2        # line 295 "zbc$declar:g.:ZBC3TOU"
      723       723    2        &dc->dc_idf);
      724       724    2        break;
      725       725    2        case /* '(' */ 92 : ;
      726       726    2        LLsincr(5);
      727       727    2        LLtincr(93);
      728       728    2        LL_SAFE('(');
      729       729    2        LLread();
      730       730    2        L10_declarator(
      731       731    2        # line 297 "zbc$declar:g.:ZBC3TOU"
      732       732    2        dc);
      733       733    2        LLtdecr(93);
      734       734    2        LL_SCANDONE(')');
      735       735    2        break;
      736       736    2        }
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=21 
      737       737    1        }
      738       738             L16_arrayer (
      739       739             # line 300 "zbc$declar:g.:ZBC3TOU"
      740       740              sizep) arith *sizep; {
      741       741    1        # line 301 "zbc$declar:g.:ZBC3TOU"
      742       742    1         struct expr *expr;
      743       743    1        LLsincr(11);
      744       744    1        LLtincr(96);
      745       745    1        LL_SAFE('[');
      746       746    1        LLread();
      747       747    1        L_2:
      748       748    1        switch(LLcsymb) {
      749       749    2        case /*  IDENTIFIER  */ 1 : ;
      750       750    2        case /*  STRING  */ 3 : ;
      751       751    2        case /*  INTEGER  */ 5 : ;
      752       752    2        case /*  FLOATING  */ 6 : ;
      753       753    2        case /*  PLUSPLUS  */ 9 : ;
      754       754    2        case /*  MINMIN  */ 10 : ;
      755       755    2        case /*  SIZEOF  */ 35 : ;
      756       756    2        case /*  ALIGNOF  */ 36 : ;
      757       757    2        case /* '(' */ 92 : ;
      758       758    2        case /* '*' */ 94 : ;
      759       759    2        case /* '&' */ 102 : ;
      760       760    2        case /* '-' */ 103 : ;
      761       761    2        case /* '+' */ 104 : ;
      762       762    2        case /* '!' */ 105 : ;
      763       763    2        case /* '~' */ 106 : ;
      764       764    2        LLsdecr(11);
      765       765    2        L19_constant_expression(
      766       766    2        # line 305 "zbc$declar:g.:ZBC3TOU"
      767       767    2        &expr);
      768       768    2        # line 306 "zbc$declar:g.:ZBC3TOU"
      769       769    2        {
      770       770    3                  check_array_subscript(expr);
      771       771    3                  *sizep = expr->VL_VALUE;
      772       772    3                  free_expression(expr);
      773       773    3               }
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=22 
      774       774    2        break;
      775       775    2        default: if (LLskip()) goto L_2;
      776       776    2        goto L_3;
      777       777    2        case /* ']' */ 96 : ;
      778       778    2        L_3: ;
      779       779    2        LLsdecr(11);
      780       780    2        # line 313 "zbc$declar:g.:ZBC3TOU"
      781       781    2        { *sizep = (arith)-1; }
      782       782    2        break;
      783       783    2        }
      784       784    1        LLtdecr(96);
      785       785    1        LL_SCANDONE(']');
      786       786    1        }
      787       787             L15_formal_list (
      788       788             # line 318 "zbc$declar:g.:ZBC3TOU"
      789       789              fmp) struct formal **fmp; {
      790       790    1        LLtincr(90);
      791       791    1        L20_formal(
      792       792    1        # line 320 "zbc$declar:g.:ZBC3TOU"
      793       793    1        fmp);
      794       794    1        LLread();
      795       795    1        for (;;) {
      796       796    2        L_1 : switch(LLcsymb) {
      797       797    3        case /* ')' */ 93 : ;
      798       798    3        break;
      799       799    3        default:{int LL_6=LLnext(44);
      800       800    4        ;if (!LL_6) {
      801       801    5        break;
      802       802    5        }
      803       803    4        else if (LL_6 & 1) goto L_1;}
      804       804    3        case /* ',' */ 90 : ;
      805       805    3        LL_SAFE(',');
      806       806    3        LLread();
      807       807    3        L20_formal(
      808       808    3        # line 320 "zbc$declar:g.:ZBC3TOU"
      809       809    3        fmp);
      810       810    3        LLread();
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=23 
      811       811    3        continue;
      812       812    3        }
      813       813    2        LLtdecr(90);
      814       814    2        break;
      815       815    2        }
      816       816    1        }
      817       817             L20_formal (
      818       818             # line 323 "zbc$declar:g.:ZBC3TOU"
      819       819              fmp) struct formal **fmp; {
      820       820    1        # line 324 "zbc$declar:g.:ZBC3TOU"
      821       821    1        struct idf *idf;
      822       822    1        L18_identifier(
      823       823    1        # line 326 "zbc$declar:g.:ZBC3TOU"
      824       824    1        &idf);
      825       825    1        # line 327 "zbc$declar:g.:ZBC3TOU"
      826       826    1        {
      827       827    2            register struct formal *new = new_formal();
      828       828    2
      829       829    2            new->fm_idf = idf;
      830       830    2            new->fm_type = (struct type *) 0;
      831       831    2            new->fm_elips = 0;
      832       832    2            new->next = *fmp;
      833       833    2            *fmp = new;
      834       834    2         }
      835       835    1        }
      836       836             L14_parameter_dec_list (
      837       837             # line 338 "zbc$declar:g.:ZBC3TOU"
      838       838              fmp,elipsis) struct formal **fmp; int *elipsis;  {
      839       839    1        # line 339 "zbc$declar:g.:ZBC3TOU"
      840       840    1        int nparam = 0;
      841       841    1        LLtincr(90);
      842       842    1        LLtincr(90);
      843       843    1        L21_parameter_declaration(
      844       844    1        # line 341 "zbc$declar:g.:ZBC3TOU"
      845       845    1        fmp,nparam);
      846       846    1        for (;;) {
      847       847    2        L_1 : switch(LLcsymb) {
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=24 
      848       848    3        case /* ',' */ 90 : ;
      849       849    3        # line 342 "zbc$declar:g.:ZBC3TOU"
      850       850    3        if ((param_type_specifier(AHEAD))) goto L_2;
      851       851    3        case /* ')' */ 93 : ;
      852       852    3        break;
      853       853    3        default:{int LL_7=LLnext(44);
      854       854    4        ;if (!LL_7) {
      855       855    5        break;
      856       856    5        }
      857       857    4        else if (LL_7 & 1) goto L_1;}
      858       858    3        L_2 : ;
      859       859    3        LL_SAFE(',');
      860       860    3        LLread();
      861       861    3        L21_parameter_declaration(
      862       862    3        # line 343 "zbc$declar:g.:ZBC3TOU"
      863       863    3        fmp,++nparam);
      864       864    3        continue;
      865       865    3        }
      866       866    2        LLtdecr(90);
      867       867    2        break;
      868       868    2        }
      869       869    1        LLtdecr(90);
      870       870    1        L_3 : switch(LLcsymb) {
"zbc$declar:g.:ZBC3TOU", line 350: (warning) label L_3 is not used
      871       871    2        default:
      872       872    2        break;
      873       873    2        case /* ',' */ 90 : ;
      874       874    2        LL_SAFE(',');
      875       875    2        LL_T_NOSCANDONE(ELIPSIS);
      876       876    2        # line 347 "zbc$declar:g.:ZBC3TOU"
      877       877    2        {
      878       878    3                (*fmp)->fm_elips = 1;
      879       879    3                *elipsis   = 1;
      880       880    3             }
      881       881    2        LLread();
      882       882    2        }
      883       883    1        }
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=25 
      884       884             L21_parameter_declaration (
      885       885             # line 354 "zbc$declar:g.:ZBC3TOU"
      886       886              fmp,pnum) struct formal **fmp; int pnum; {
      887       887    1        # line 355 "zbc$declar:g.:ZBC3TOU"
      888       888    1         struct type *tp; struct declarator Dc; struct decspecs Ds;
      889       889    1        LLsincr(5);
      890       890    1        # line 357 "zbc$declar:g.:ZBC3TOU"
      891       891    1        {Dc = null_declarator; Ds = null_decspecs;}
      892       892    1        L1_decl_specifiers(
      893       893    1        # line 358 "zbc$declar:g.:ZBC3TOU"
      894       894    1        &Ds);
      895       895    1        # line 359 "zbc$declar:g.:ZBC3TOU"
      896       896    1        {
      897       897    2             if (Ds.ds_sc_given && Ds.ds_sc != REGISTER)
      898       898    2                warning("parameter %d storage class \"%s\" ignored",pnum,symbol2str(Ds
                               .ds_sc));
      899       899    2             tp = Ds.ds_type;
      900       900    2          }
      901       901    1        LLsdecr(5);
      902       902    1        L22_parameter_declarator(
      903       903    1        # line 364 "zbc$declar:g.:ZBC3TOU"
      904       904    1        fmp, tp, &Dc, pnum);
      905       905    1        }
      906       906             L22_parameter_declarator (
      907       907             # line 367 "zbc$declar:g.:ZBC3TOU"
      908       908              fmp,tp,dc,pnum) struct formal **fmp; struct type *tp; struct declarator *dc;
                               int pnum; {
      909       909    1        LLsincr(5);
      910       910    1        L23_param_declarator(
      911       911    1        # line 369 "zbc$declar:g.:ZBC3TOU"
      912       912    1        dc);
      913       913    1        # line 370 "zbc$declar:g.:ZBC3TOU"
      914       914    1        {register struct formal *new = new_formal();
      915       915    2           new->fm_idf   = dc->dc_idf;
      916       916    2           new->fm_type  = tp = declare_type(tp,dc);
      917       917    2           new->fm_elips = 0;
      918       918    2           new->next     = *fmp;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=26 
      919       919    2           new->fm_num   = pnum;
      920       920    2           *fmp          = new;
      921       921    2           if (tp->tp_fund == FUNCTION)   {
      922       922    3             if (dc->dc_idf)
      923       923    3             warning("%s is declared to be a pointer to a function",dc->dc_idf->id_tex
                               t);
      924       924    3             else warning("parameter %d is declared a pointer to a function",pnum);
      925       925    3             new->fm_type = tp = construct_type(POINTER, tp,(arith)0);
      926       926    3             }
      927       927    2          else if (tp->tp_fund == ARRAY) {
      928       928    3             new->fm_type = tp = construct_type(POINTER, tp->tp_up, (arith)0);
      929       929    3             }
      930       930    2          }
      931       931    1        # line 387 "zbc$declar:g.:ZBC3TOU"
      932       932    1        {
      933       933    2           if (dc->dc_formal) free_formals(dc->dc_formal);
      934       934    2           remove_declarator(dc);
      935       935    2          }
      936       936    1        }
      937       937             L23_param_declarator (
      938       938             # line 393 "zbc$declar:g.:ZBC3TOU"
      939       939              dc) register struct declarator *dc; {
      940       940    1        # line 394 "zbc$declar:g.:ZBC3TOU"
      941       941    1        arith count;
      942       942    1           struct formal *fmx = 0;
      943       943    1           int elipsix = 0, t_const=0, t_vol=0;
      944       944    1
      945       945    1        L_2:
      946       946    1        switch(LLcsymb) {
      947       947    2        default: if (LLskip()) goto L_2;
      948       948    2        goto L_3;
      949       949    2        case /*  IDENTIFIER  */ 1 : ;
      950       950    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
      951       951    2        case /* ',' */ 90 : ;
      952       952    2        case /* '(' */ 92 : ;
      953       953    2        case /* ')' */ 93 : ;
      954       954    2        case /* '[' */ 95 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=27 
      955       955    2        L_3: ;
      956       956    2        LLsdecr(5);
      957       957    2        LLsincr(8);
      958       958    2        L24_primary_param_declarator(
      959       959    2        # line 399 "zbc$declar:g.:ZBC3TOU"
      960       960    2        dc);
      961       961    2        for (;;) {
      962       962    3        L_4 : switch(LLcsymb) {
      963       963    4        case /* ',' */ 90 : ;
      964       964    4        case /* ')' */ 93 : ;
      965       965    4        break;
      966       966    4        default:{int LL_8=LLnext(-120);
      967       967    5        ;if (!LL_8) {
      968       968    6        break;
      969       969    6        }
      970       970    5        else if (LL_8 & 1) goto L_4;}
      971       971    4        case /* '(' */ 92 : ;
      972       972    4        case /* '[' */ 95 : ;
      973       973    4        switch(LLcsymb) {
      974       974    5        default:
      975       975    5        LLsincr(0);
      976       976    5        LLtincr(93);
      977       977    5        LL_SAFE('(');
      978       978    5        LLread();
      979       979    5        L_8 : switch(LLcsymb) {
      980       980    6        case /* ')' */ 93 : ;
      981       981    6        LLsdecr(0);
      982       982    6        break;
      983       983    6        default:{int LL_9=LLnext(0);
      984       984    7        ;if (!LL_9) {
      985       985    8        LLsdecr(0);
      986       986    8        break;
      987       987    8        }
      988       988    7        else if (LL_9 & 1) goto L_8;}
      989       989    6        case /*  TYPE_IDENTIFIER  */ 2 : ;
      990       990    6        case /*  AUTO  */ 19 : ;
      991       991    6        case /*  ENUM  */ 26 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=28 
      992       992    6        case /*  EXTERN  */ 27 : ;
      993       993    6        case /*  LONG  */ 31 : ;
      994       994    6        case /*  REGISTER  */ 32 : ;
      995       995    6        case /*  SHORT  */ 34 : ;
      996       996    6        case /*  STATIC  */ 37 : ;
      997       997    6        case /*  STRUCT  */ 38 : ;
      998       998    6        case /*  TYPEDEF  */ 40 : ;
      999       999    6        case /*  UNION  */ 41 : ;
     1000      1000    6        case /*  UNSIGNED  */ 42 : ;
     1001      1001    6        case /*  SIGNED  */ 44 : ;
     1002      1002    6        case /*  CONST  */ 45 : ;
     1003      1003    6        case /*  VOLATILE  */ 46 : ;
     1004      1004    6        LLsdecr(0);
     1005      1005    6        # line 402 "zbc$declar:g.:ZBC3TOU"
     1006      1006    6        {
     1007      1007    7                  stack_level();
     1008      1008    7                  if (level == L_FORMAL1)
     1009      1009    7                   stack_level();
     1010      1010    7                 }
     1011      1011    6        L14_parameter_dec_list(
     1012      1012    6        # line 407 "zbc$declar:g.:ZBC3TOU"
     1013      1013    6        &fmx, &elipsix);
     1014      1014    6        }
     1015      1015    5        LLtdecr(93);
     1016      1016    5        LL_SCANDONE(')');
     1017      1017    5        # line 410 "zbc$declar:g.:ZBC3TOU"
     1018      1018    5        {add_decl_unary(dc, FUNCTION, (arith)0, fmx);
     1019      1019    6              if (fmx) {
     1020      1020    7               if (fmx->fm_type) {
     1021      1021    8                  unstack_level();
     1022      1022    8                  if (level == L_FORMAL1) unstack_level();
     1023      1023    8                  }
     1024      1024    7               else error("formal arguments must be absent or declared with types");
     1025      1025    7               }
     1026      1026    6              }
     1027      1027    5        break;
     1028      1028    5        case /* '[' */ 95 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=29 
     1029      1029    5        L16_arrayer(
     1030      1030    5        # line 420 "zbc$declar:g.:ZBC3TOU"
     1031      1031    5        &count);
     1032      1032    5        # line 421 "zbc$declar:g.:ZBC3TOU"
     1033      1033    5        {add_decl_unary(dc, ARRAY, count, NO_PARAMS);}
     1034      1034    5        break;
     1035      1035    5        }
     1036      1036    4        LLread();
     1037      1037    4        continue;
     1038      1038    4        }
     1039      1039    3        LLsdecr(8);
     1040      1040    3        break;
     1041      1041    3        }
     1042      1042    2        break;
     1043      1043    2        case /* '*' */ 94 : ;
     1044      1044    2        LLsdecr(5);
     1045      1045    2        LLsincr(10);
     1046      1046    2        LL_SAFE('*');
     1047      1047    2        L25_param_pointer_qualifier(
     1048      1048    2        # line 424 "zbc$declar:g.:ZBC3TOU"
     1049      1049    2        dc, &t_const, &t_vol);
     1050      1050    2        # line 425 "zbc$declar:g.:ZBC3TOU"
     1051      1051    2        {add_decl_unary(dc, POINTER, (arith)t_const*2 + t_vol, NO_PARAMS);}
     1052      1052    2        break;
     1053      1053    2        }
     1054      1054    1        }
     1055      1055             L24_primary_param_declarator (
     1056      1056             # line 428 "zbc$declar:g.:ZBC3TOU"
     1057      1057              dc) register struct declarator *dc; {
     1058      1058    1        switch(LLcsymb) {
     1059      1059    2        case /* '(' */ 92 : ;
     1060      1060    2        # line 430 "zbc$declar:g.:ZBC3TOU"
     1061      1061    2        if (!((AHEAD == ')') || (AHEAD == ','))) goto L_1;
     1062      1062    2        default:
     1063      1063    2        break;
     1064      1064    2        L_1 : ;
     1065      1065    2        case /*  IDENTIFIER  */ 1 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=30 
     1066      1066    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1067      1067    2        switch(LLcsymb) {
     1068      1068    3        case /*  IDENTIFIER  */ 1 : ;
     1069      1069    3        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1070      1070    3        L18_identifier(
     1071      1071    3        # line 432 "zbc$declar:g.:ZBC3TOU"
     1072      1072    3        &dc->dc_idf);
     1073      1073    3        LLread();
     1074      1074    3        break;
     1075      1075    3        case /* '(' */ 92 : ;
     1076      1076    3        LLsincr(5);
     1077      1077    3        LLtincr(93);
     1078      1078    3        LL_SAFE('(');
     1079      1079    3        LLread();
     1080      1080    3        L23_param_declarator(
     1081      1081    3        # line 433 "zbc$declar:g.:ZBC3TOU"
     1082      1082    3        dc);
     1083      1083    3        LLtdecr(93);
     1084      1084    3        LL_SCANDONE(')');
     1085      1085    3        LLread();
     1086      1086    3        break;
     1087      1087    3        }
     1088      1088    2        }
     1089      1089    1        }
     1090      1090             L17_pointer_type_qualifier (
     1091      1091             # line 437 "zbc$declar:g.:ZBC3TOU"
     1092      1092              dc,tp_const,tp_vol) struct declarator *dc; int *tp_const; int *tp_vol; {
     1093      1093    1        LLread();
     1094      1094    1        L_2:
     1095      1095    1        switch(LLcsymb) {
     1096      1096    2        case /*  CONST  */ 45 : ;
     1097      1097    2        LL_SAFE(CONST);
     1098      1098    2        L17_pointer_type_qualifier(
     1099      1099    2        # line 439 "zbc$declar:g.:ZBC3TOU"
     1100      1100    2        dc,tp_const,tp_vol);
     1101      1101    2        # line 440 "zbc$declar:g.:ZBC3TOU"
     1102      1102    2        {  if (*tp_const)
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=31 
     1103      1103    3                error("repeated \"const\" type qualifier");
     1104      1104    3             *tp_const = 1;
     1105      1105    3          }
     1106      1106    2        break;
     1107      1107    2        case /*  VOLATILE  */ 46 : ;
     1108      1108    2        LL_SAFE(VOLATILE);
     1109      1109    2        L17_pointer_type_qualifier(
     1110      1110    2        # line 444 "zbc$declar:g.:ZBC3TOU"
     1111      1111    2        dc,tp_const,tp_vol);
     1112      1112    2        # line 445 "zbc$declar:g.:ZBC3TOU"
     1113      1113    2        {  if (*tp_vol) error("repeated \"volatile\" type qualifier");
     1114      1114    3             *tp_vol = 1;
     1115      1115    3          }
     1116      1116    2        break;
     1117      1117    2        default: if (LLskip()) goto L_2;
     1118      1118    2        goto L_3;
     1119      1119    2        case /*  IDENTIFIER  */ 1 : ;
     1120      1120    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1121      1121    2        case /* '(' */ 92 : ;
     1122      1122    2        case /* '*' */ 94 : ;
     1123      1123    2        L_3: ;
     1124      1124    2        LLsdecr(10);
     1125      1125    2        LLsincr(5);
     1126      1126    2        L10_declarator(
     1127      1127    2        # line 448 "zbc$declar:g.:ZBC3TOU"
     1128      1128    2        dc);
     1129      1129    2        break;
     1130      1130    2        }
     1131      1131    1        }
     1132      1132             L8_enum_specifier (
     1133      1133             # line 453 "zbc$declar:g.:ZBC3TOU"
     1134      1134              tpp) register struct type **tpp; {
     1135      1135    1        # line 454 "zbc$declar:g.:ZBC3TOU"
     1136      1136    1
     1137      1137    1            struct idf *idf;
     1138      1138    1            arith l = (arith)0;
     1139      1139    1
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=32 
     1140      1140    1        LLsincr(12);
     1141      1141    1        LL_SAFE(ENUM);
     1142      1142    1        LLread();
     1143      1143    1        L_2:
     1144      1144    1        switch(LLcsymb) {
     1145      1145    2        case /* '{' */ 97 : ;
     1146      1146    2        LLsdecr(12);
     1147      1147    2        # line 461 "zbc$declar:g.:ZBC3TOU"
     1148      1148    2        {declare_struct(ENUM, (struct idf *) 0, tpp);}
     1149      1149    2        L26_enumerator_pack(
     1150      1150    2        # line 462 "zbc$declar:g.:ZBC3TOU"
     1151      1151    2        *tpp, &l);
     1152      1152    2        LLread();
     1153      1153    2        break;
     1154      1154    2        default: if (LLskip()) goto L_2;
     1155      1155    2        goto L_3;
     1156      1156    2        case /*  IDENTIFIER  */ 1 : ;
     1157      1157    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1158      1158    2        L_3: ;
     1159      1159    2        LLsdecr(12);
     1160      1160    2        LLtincr(97);
     1161      1161    2        L18_identifier(
     1162      1162    2        # line 464 "zbc$declar:g.:ZBC3TOU"
     1163      1163    2        &idf);
     1164      1164    2        LLread();
     1165      1165    2        L_5:
     1166      1166    2        switch(LLcsymb) {
     1167      1167    3        case /* '{' */ 97 : ;
     1168      1168    3        LLtdecr(97);
     1169      1169    3        # line 466 "zbc$declar:g.:ZBC3TOU"
     1170      1170    3        {declare_struct(ENUM, idf, tpp);}
     1171      1171    3        L26_enumerator_pack(
     1172      1172    3        # line 467 "zbc$declar:g.:ZBC3TOU"
     1173      1173    3        *tpp, &l);
     1174      1174    3        LLread();
     1175      1175    3        break;
     1176      1176    3        default: if (LLskip()) goto L_5;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=33 
     1177      1177    3        goto L_6;
     1178      1178    3        case /*  IDENTIFIER  */ 1 : ;
     1179      1179    3        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1180      1180    3        case /*  AUTO  */ 19 : ;
     1181      1181    3        case /*  EXTERN  */ 27 : ;
     1182      1182    3        case /*  LONG  */ 31 : ;
     1183      1183    3        case /*  REGISTER  */ 32 : ;
     1184      1184    3        case /*  SHORT  */ 34 : ;
     1185      1185    3        case /*  STATIC  */ 37 : ;
     1186      1186    3        case /*  TYPEDEF  */ 40 : ;
     1187      1187    3        case /*  UNSIGNED  */ 42 : ;
     1188      1188    3        case /*  SIGNED  */ 44 : ;
     1189      1189    3        case /*  CONST  */ 45 : ;
     1190      1190    3        case /*  VOLATILE  */ 46 : ;
     1191      1191    3        case /* ';' */ 89 : ;
     1192      1192    3        case /* ',' */ 90 : ;
     1193      1193    3        case /* '(' */ 92 : ;
     1194      1194    3        case /* ')' */ 93 : ;
     1195      1195    3        case /* '*' */ 94 : ;
     1196      1196    3        case /* '[' */ 95 : ;
     1197      1197    3        case /* ':' */ 99 : ;
     1198      1198    3        L_6: ;
     1199      1199    3        LLtdecr(97);
     1200      1200    3        # line 469 "zbc$declar:g.:ZBC3TOU"
     1201      1201    3        {apply_struct(ENUM, idf, tpp);}
     1202      1202    3        break;
     1203      1203    3        }
     1204      1204    2        break;
     1205      1205    2        }
     1206      1206    1        }
     1207      1207             L26_enumerator_pack (
     1208      1208             # line 475 "zbc$declar:g.:ZBC3TOU"
     1209      1209              tp,lp) register struct type *tp; arith *lp; {
     1210      1210    1        LLtincr(90);
     1211      1211    1        LLtincr(90);
     1212      1212    1        LLtincr(98);
     1213      1213    1        LL_SAFE('{');
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=34 
     1214      1214    1        L27_enumerator(
     1215      1215    1        # line 477 "zbc$declar:g.:ZBC3TOU"
     1216      1216    1        tp, lp);
     1217      1217    1        for (;;) {
     1218      1218    2        L_1 : switch(LLcsymb) {
     1219      1219    3        case /* ',' */ 90 : ;
     1220      1220    3        # line 478 "zbc$declar:g.:ZBC3TOU"
     1221      1221    3        if ((AHEAD != '}')) goto L_2;
     1222      1222    3        case /* '}' */ 98 : ;
     1223      1223    3        break;
     1224      1224    3        default:{int LL_10=LLnext(44);
     1225      1225    4        ;if (!LL_10) {
     1226      1226    5        break;
     1227      1227    5        }
     1228      1228    4        else if (LL_10 & 1) goto L_1;}
     1229      1229    3        L_2 : ;
     1230      1230    3        LL_SAFE(',');
     1231      1231    3        L27_enumerator(
     1232      1232    3        # line 480 "zbc$declar:g.:ZBC3TOU"
     1233      1233    3        tp, lp);
     1234      1234    3        continue;
     1235      1235    3        }
     1236      1236    2        LLtdecr(90);
     1237      1237    2        break;
     1238      1238    2        }
     1239      1239    1        LLtdecr(90);
     1240      1240    1        L_3 : switch(LLcsymb) {
"zbc$declar:g.:ZBC3TOU", line 487: (warning) label L_3 is not used
     1241      1241    2        default:
     1242      1242    2        break;
     1243      1243    2        case /* ',' */ 90 : ;
     1244      1244    2        LL_SAFE(',');
     1245      1245    2        LLread();
     1246      1246    2        }
     1247      1247    1        LLtdecr(98);
     1248      1248    1        LL_SCANDONE('}');
     1249      1249    1        # line 484 "zbc$declar:g.:ZBC3TOU"
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=35 
     1250      1250    1        {tp->tp_size = int_size;}
     1251      1251    1        }
     1252      1252             L27_enumerator (
     1253      1253             # line 490 "zbc$declar:g.:ZBC3TOU"
     1254      1254              tp,lp) struct type *tp; arith *lp; {
     1255      1255    1        # line 491 "zbc$declar:g.:ZBC3TOU"
     1256      1256    1
     1257      1257    1            struct idf *idf;
     1258      1258    1            struct expr *expr;
     1259      1259    1
     1260      1260    1        LLtincr(91);
     1261      1261    1        LLread();
     1262      1262    1        L18_identifier(
     1263      1263    1        # line 496 "zbc$declar:g.:ZBC3TOU"
     1264      1264    1        &idf);
     1265      1265    1        LLread();
     1266      1266    1        L_1 : switch(LLcsymb) {
     1267      1267    2        case /* ',' */ 90 : ;
     1268      1268    2        case /* '}' */ 98 : ;
     1269      1269    2        LLtdecr(91);
     1270      1270    2        break;
     1271      1271    2        default:{int LL_11=LLnext(61);
     1272      1272    3        ;if (!LL_11) {
     1273      1273    4        LLtdecr(91);
     1274      1274    4        break;
     1275      1275    4        }
     1276      1276    3        else if (LL_11 & 1) goto L_1;}
     1277      1277    2        case /* '=' */ 91 : ;
     1278      1278    2        LLtdecr(91);
     1279      1279    2        LL_SAFE('=');
     1280      1280    2        LLread();
     1281      1281    2        L19_constant_expression(
     1282      1282    2        # line 499 "zbc$declar:g.:ZBC3TOU"
     1283      1283    2        &expr);
     1284      1284    2        # line 500 "zbc$declar:g.:ZBC3TOU"
     1285      1285    2        {
     1286      1286    3               *lp = expr->VL_VALUE;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=36 
     1287      1287    3               free_expression(expr);
     1288      1288    3            }
     1289      1289    2        }
     1290      1290    1        # line 505 "zbc$declar:g.:ZBC3TOU"
     1291      1291    1        {declare_enum(tp, idf, (*lp)++);}
     1292      1292    1        }
     1293      1293             L7_struct_or_union_specifier (
     1294      1294             # line 509 "zbc$declar:g.:ZBC3TOU"
     1295      1295              tpp) register struct type **tpp; {
     1296      1296    1        # line 510 "zbc$declar:g.:ZBC3TOU"
     1297      1297    1
     1298      1298    1            int fund;
     1299      1299    1            struct idf *idfX;
     1300      1300    1            register struct idf *idf;
     1301      1301    1
     1302      1302    1        LLsincr(12);
     1303      1303    1        switch(LLcsymb) {
     1304      1304    2        default:
     1305      1305    2        LL_SAFE(STRUCT);
     1306      1306    2        break;
     1307      1307    2        case /*  UNION  */ 41 : ;
     1308      1308    2        LL_SAFE(UNION);
     1309      1309    2        break;
     1310      1310    2        }
     1311      1311    1        # line 517 "zbc$declar:g.:ZBC3TOU"
     1312      1312    1        {fund = DOT;}
     1313      1313    1        LLread();
     1314      1314    1        L_5:
     1315      1315    1        switch(LLcsymb) {
     1316      1316    2        case /* '{' */ 97 : ;
     1317      1317    2        LLsdecr(12);
     1318      1318    2        # line 519 "zbc$declar:g.:ZBC3TOU"
     1319      1319    2        {
     1320      1320    3               declare_struct(fund, (struct idf *)0, tpp);
     1321      1321    3            }
     1322      1322    2        L28_struct_declaration_pack(
     1323      1323    2        # line 522 "zbc$declar:g.:ZBC3TOU"
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=37 
     1324      1324    2        *tpp);
     1325      1325    2        LLread();
     1326      1326    2        break;
     1327      1327    2        default: if (LLskip()) goto L_5;
     1328      1328    2        goto L_6;
     1329      1329    2        case /*  IDENTIFIER  */ 1 : ;
     1330      1330    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1331      1331    2        L_6: ;
     1332      1332    2        LLsdecr(12);
     1333      1333    2        LLtincr(97);
     1334      1334    2        L18_identifier(
     1335      1335    2        # line 524 "zbc$declar:g.:ZBC3TOU"
     1336      1336    2        &idfX);
     1337      1337    2        # line 524 "zbc$declar:g.:ZBC3TOU"
     1338      1338    2        { idf = idfX; }
     1339      1339    2        LLread();
     1340      1340    2        L_8:
     1341      1341    2        switch(LLcsymb) {
     1342      1342    3        case /* '{' */ 97 : ;
     1343      1343    3        LLtdecr(97);
     1344      1344    3        # line 526 "zbc$declar:g.:ZBC3TOU"
     1345      1345    3        {
     1346      1346    4                  declare_struct(fund, idf, tpp);
     1347      1347    4                  (idf->id_struct->tg_busy)++;
     1348      1348    4               }
     1349      1349    3        L28_struct_declaration_pack(
     1350      1350    3        # line 530 "zbc$declar:g.:ZBC3TOU"
     1351      1351    3        *tpp);
     1352      1352    3        # line 531 "zbc$declar:g.:ZBC3TOU"
     1353      1353    3        {
     1354      1354    4                  (idf->id_struct->tg_busy)--;
     1355      1355    4               }
     1356      1356    3        LLread();
     1357      1357    3        break;
     1358      1358    3        default: if (LLskip()) goto L_8;
     1359      1359    3        goto L_9;
     1360      1360    3        case /*  IDENTIFIER  */ 1 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=38 
     1361      1361    3        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1362      1362    3        case /*  AUTO  */ 19 : ;
     1363      1363    3        case /*  EXTERN  */ 27 : ;
     1364      1364    3        case /*  LONG  */ 31 : ;
     1365      1365    3        case /*  REGISTER  */ 32 : ;
     1366      1366    3        case /*  SHORT  */ 34 : ;
     1367      1367    3        case /*  STATIC  */ 37 : ;
     1368      1368    3        case /*  TYPEDEF  */ 40 : ;
     1369      1369    3        case /*  UNSIGNED  */ 42 : ;
     1370      1370    3        case /*  SIGNED  */ 44 : ;
     1371      1371    3        case /*  CONST  */ 45 : ;
     1372      1372    3        case /*  VOLATILE  */ 46 : ;
     1373      1373    3        case /* ';' */ 89 : ;
     1374      1374    3        case /* ',' */ 90 : ;
     1375      1375    3        case /* '(' */ 92 : ;
     1376      1376    3        case /* ')' */ 93 : ;
     1377      1377    3        case /* '*' */ 94 : ;
     1378      1378    3        case /* '[' */ 95 : ;
     1379      1379    3        case /* ':' */ 99 : ;
     1380      1380    3        L_9: ;
     1381      1381    3        LLtdecr(97);
     1382      1382    3        # line 535 "zbc$declar:g.:ZBC3TOU"
     1383      1383    3        {apply_struct(fund, idf, tpp);}
     1384      1384    3        break;
     1385      1385    3        }
     1386      1386    2        break;
     1387      1387    2        }
     1388      1388    1        }
     1389      1389             L28_struct_declaration_pack (
     1390      1390             # line 541 "zbc$declar:g.:ZBC3TOU"
     1391      1391              stp) register struct type *stp; {
     1392      1392    1        # line 542 "zbc$declar:g.:ZBC3TOU"
     1393      1393    1
     1394      1394    1            struct sdef **sdefp = &stp->tp_sdef;
     1395      1395    1            arith size = (arith)0;
     1396      1396    1
     1397      1397    1        LLsincr(13);
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=39 
     1398      1398    1        LLtincr(98);
     1399      1399    1        LL_SAFE('{');
     1400      1400    1        LLread();
     1401      1401    1        LLsdecr(13);
     1402      1402    1        LLsincr(0);
     1403      1403    1        for (;;) {
     1404      1404    2        L29_struct_declaration(
     1405      1405    2        # line 551 "zbc$declar:g.:ZBC3TOU"
     1406      1406    2        stp, &sdefp, &size);
     1407      1407    2        L_1 : switch(LLcsymb) {
     1408      1408    3        case /* '}' */ 98 : ;
     1409      1409    3        break;
     1410      1410    3        default:{int LL_12=LLnext(0);
     1411      1411    4        ;if (!LL_12) {
     1412      1412    5        break;
     1413      1413    5        }
     1414      1414    4        else if (LL_12 & 1) goto L_1;}
     1415      1415    3        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1416      1416    3        case /*  AUTO  */ 19 : ;
     1417      1417    3        case /*  ENUM  */ 26 : ;
     1418      1418    3        case /*  EXTERN  */ 27 : ;
     1419      1419    3        case /*  LONG  */ 31 : ;
     1420      1420    3        case /*  REGISTER  */ 32 : ;
     1421      1421    3        case /*  SHORT  */ 34 : ;
     1422      1422    3        case /*  STATIC  */ 37 : ;
     1423      1423    3        case /*  STRUCT  */ 38 : ;
     1424      1424    3        case /*  TYPEDEF  */ 40 : ;
     1425      1425    3        case /*  UNION  */ 41 : ;
     1426      1426    3        case /*  UNSIGNED  */ 42 : ;
     1427      1427    3        case /*  SIGNED  */ 44 : ;
     1428      1428    3        case /*  CONST  */ 45 : ;
     1429      1429    3        case /*  VOLATILE  */ 46 : ;
     1430      1430    3        continue;
     1431      1431    3        }
     1432      1432    2        LLsdecr(0);
     1433      1433    2        break;
     1434      1434    2        }
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=40 
     1435      1435    1        LLtdecr(98);
     1436      1436    1        LL_SSCANDONE('}');
     1437      1437    1        # line 553 "zbc$declar:g.:ZBC3TOU"
     1438      1438    1        {stp->tp_size = align(size, stp->tp_align);}
     1439      1439    1        }
     1440      1440             L29_struct_declaration (
     1441      1441             # line 556 "zbc$declar:g.:ZBC3TOU"
     1442      1442              stp,sdefpp,szp) struct type *stp; struct sdef ***sdefpp; arith *szp; {
     1443      1443    1        # line 557 "zbc$declar:g.:ZBC3TOU"
     1444      1444    1        struct type *tp;
     1445      1445    1        LLsincr(14);
     1446      1446    1        LLtincr(89);
     1447      1447    1        L6_type_specifier(
     1448      1448    1        # line 559 "zbc$declar:g.:ZBC3TOU"
     1449      1449    1        &tp);
     1450      1450    1        LLsdecr(14);
     1451      1451    1        L30_struct_declarator_list(
     1452      1452    1        # line 560 "zbc$declar:g.:ZBC3TOU"
     1453      1453    1        tp, stp, sdefpp, szp);
     1454      1454    1        L_2:
     1455      1455    1        switch(LLcsymb) {
     1456      1456    2        case /* ';' */ 89 : ;
     1457      1457    2        LLtdecr(89);
     1458      1458    2        LL_SAFE(';');
     1459      1459    2        LLread();
     1460      1460    2        break;
     1461      1461    2        default: if (LLskip()) goto L_2;
     1462      1462    2        goto L_3;
     1463      1463    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1464      1464    2        case /*  AUTO  */ 19 : ;
     1465      1465    2        case /*  ENUM  */ 26 : ;
     1466      1466    2        case /*  EXTERN  */ 27 : ;
     1467      1467    2        case /*  LONG  */ 31 : ;
     1468      1468    2        case /*  REGISTER  */ 32 : ;
     1469      1469    2        case /*  SHORT  */ 34 : ;
     1470      1470    2        case /*  STATIC  */ 37 : ;
     1471      1471    2        case /*  STRUCT  */ 38 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=41 
     1472      1472    2        case /*  TYPEDEF  */ 40 : ;
     1473      1473    2        case /*  UNION  */ 41 : ;
     1474      1474    2        case /*  UNSIGNED  */ 42 : ;
     1475      1475    2        case /*  SIGNED  */ 44 : ;
     1476      1476    2        case /*  CONST  */ 45 : ;
     1477      1477    2        case /*  VOLATILE  */ 46 : ;
     1478      1478    2        case /* '}' */ 98 : ;
     1479      1479    2        L_3: ;
     1480      1480    2        LLtdecr(89);
     1481      1481    2        # line 567 "zbc$declar:g.:ZBC3TOU"
     1482      1482    2        {warning("no semicolon after declarator");}
     1483      1483    2        break;
     1484      1484    2        }
     1485      1485    1        }
     1486      1486             L30_struct_declarator_list (
     1487      1487             # line 571 "zbc$declar:g.:ZBC3TOU"
     1488      1488              tp,stp,sdefpp,szp) struct type *tp, *stp;
     1489      1489                    struct sdef ***sdefpp; arith *szp; {
     1490      1490    1        LLtincr(90);
     1491      1491    1        L31_struct_declarator(
     1492      1492    1        # line 574 "zbc$declar:g.:ZBC3TOU"
     1493      1493    1        tp, stp, sdefpp, szp);
     1494      1494    1        for (;;) {
     1495      1495    2        L_1 : switch(LLcsymb) {
     1496      1496    3        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1497      1497    3        case /*  AUTO  */ 19 : ;
     1498      1498    3        case /*  ENUM  */ 26 : ;
     1499      1499    3        case /*  EXTERN  */ 27 : ;
     1500      1500    3        case /*  LONG  */ 31 : ;
     1501      1501    3        case /*  REGISTER  */ 32 : ;
     1502      1502    3        case /*  SHORT  */ 34 : ;
     1503      1503    3        case /*  STATIC  */ 37 : ;
     1504      1504    3        case /*  STRUCT  */ 38 : ;
     1505      1505    3        case /*  TYPEDEF  */ 40 : ;
     1506      1506    3        case /*  UNION  */ 41 : ;
     1507      1507    3        case /*  UNSIGNED  */ 42 : ;
     1508      1508    3        case /*  SIGNED  */ 44 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=42 
     1509      1509    3        case /*  CONST  */ 45 : ;
     1510      1510    3        case /*  VOLATILE  */ 46 : ;
     1511      1511    3        case /* ';' */ 89 : ;
     1512      1512    3        case /* '}' */ 98 : ;
     1513      1513    3        break;
     1514      1514    3        default:{int LL_13=LLnext(44);
     1515      1515    4        ;if (!LL_13) {
     1516      1516    5        break;
     1517      1517    5        }
     1518      1518    4        else if (LL_13 & 1) goto L_1;}
     1519      1519    3        case /* ',' */ 90 : ;
     1520      1520    3        LL_SAFE(',');
     1521      1521    3        LLread();
     1522      1522    3        L31_struct_declarator(
     1523      1523    3        # line 575 "zbc$declar:g.:ZBC3TOU"
     1524      1524    3        tp, stp, sdefpp, szp);
     1525      1525    3        continue;
     1526      1526    3        }
     1527      1527    2        LLtdecr(90);
     1528      1528    2        break;
     1529      1529    2        }
     1530      1530    1        }
     1531      1531             L31_struct_declarator (
     1532      1532             # line 578 "zbc$declar:g.:ZBC3TOU"
     1533      1533              tp,stp,sdefpp,szp) struct type *tp; struct type *stp;
     1534      1534                    struct sdef ***sdefpp; arith *szp; {
     1535      1535    1        # line 580 "zbc$declar:g.:ZBC3TOU"
     1536      1536    1
     1537      1537    1            struct declarator Dc;
     1538      1538    1            struct field *fd = 0;
     1539      1539    1
     1540      1540    1        LLsincr(15);
     1541      1541    1        # line 585 "zbc$declar:g.:ZBC3TOU"
     1542      1542    1        {
     1543      1543    2            Dc = null_declarator;
     1544      1544    2         }
     1545      1545    1        L_2:
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=43 
     1546      1546    1        switch(LLcsymb) {
     1547      1547    2        default: if (LLskip()) goto L_2;
     1548      1548    2        goto L_3;
     1549      1549    2        case /*  IDENTIFIER  */ 1 : ;
     1550      1550    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1551      1551    2        case /* '(' */ 92 : ;
     1552      1552    2        case /* '*' */ 94 : ;
     1553      1553    2        L_3: ;
     1554      1554    2        LLsdecr(15);
     1555      1555    2        LLsincr(5);
     1556      1556    2        LLtincr(99);
     1557      1557    2        L10_declarator(
     1558      1558    2        # line 589 "zbc$declar:g.:ZBC3TOU"
     1559      1559    2        &Dc);
     1560      1560    2        # line 590 "zbc$declar:g.:ZBC3TOU"
     1561      1561    2        {reject_params(&Dc, 1);}
     1562      1562    2        L_4 : switch(LLcsymb) {
     1563      1563    3        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1564      1564    3        case /*  AUTO  */ 19 : ;
     1565      1565    3        case /*  ENUM  */ 26 : ;
     1566      1566    3        case /*  EXTERN  */ 27 : ;
     1567      1567    3        case /*  LONG  */ 31 : ;
     1568      1568    3        case /*  REGISTER  */ 32 : ;
     1569      1569    3        case /*  SHORT  */ 34 : ;
     1570      1570    3        case /*  STATIC  */ 37 : ;
     1571      1571    3        case /*  STRUCT  */ 38 : ;
     1572      1572    3        case /*  TYPEDEF  */ 40 : ;
     1573      1573    3        case /*  UNION  */ 41 : ;
     1574      1574    3        case /*  UNSIGNED  */ 42 : ;
     1575      1575    3        case /*  SIGNED  */ 44 : ;
     1576      1576    3        case /*  CONST  */ 45 : ;
     1577      1577    3        case /*  VOLATILE  */ 46 : ;
     1578      1578    3        case /* ';' */ 89 : ;
     1579      1579    3        case /* ',' */ 90 : ;
     1580      1580    3        case /* '}' */ 98 : ;
     1581      1581    3        LLtdecr(99);
     1582      1582    3        break;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=44 
     1583      1583    3        default:{int LL_14=LLnext(58);
     1584      1584    4        ;if (!LL_14) {
     1585      1585    5        LLtdecr(99);
     1586      1586    5        break;
     1587      1587    5        }
     1588      1588    4        else if (LL_14 & 1) goto L_4;}
     1589      1589    3        case /* ':' */ 99 : ;
     1590      1590    3        LLtdecr(99);
     1591      1591    3        L32_bit_expression(
     1592      1592    3        # line 591 "zbc$declar:g.:ZBC3TOU"
     1593      1593    3        &fd);
     1594      1594    3        }
     1595      1595    2        break;
     1596      1596    2        case /* ':' */ 99 : ;
     1597      1597    2        LLsdecr(15);
     1598      1598    2        # line 593 "zbc$declar:g.:ZBC3TOU"
     1599      1599    2        {Dc.dc_idf = gen_idf();}
     1600      1600    2        L32_bit_expression(
     1601      1601    2        # line 594 "zbc$declar:g.:ZBC3TOU"
     1602      1602    2        &fd);
     1603      1603    2        break;
     1604      1604    2        }
     1605      1605    1        # line 596 "zbc$declar:g.:ZBC3TOU"
     1606      1606    1        {add_sel(stp, declare_type(tp, &Dc), Dc.dc_idf, sdefpp, szp, fd);}
     1607      1607    1        # line 597 "zbc$declar:g.:ZBC3TOU"
     1608      1608    1        {remove_declarator(&Dc);}
     1609      1609    1        }
     1610      1610             L32_bit_expression (
     1611      1611             # line 600 "zbc$declar:g.:ZBC3TOU"
     1612      1612              fd) struct field **fd; {
     1613      1613    1        # line 601 "zbc$declar:g.:ZBC3TOU"
     1614      1614    1         struct expr *expr;
     1615      1615    1        # line 603 "zbc$declar:g.:ZBC3TOU"
     1616      1616    1        {
     1617      1617    2            *fd = new_field();
     1618      1618    2         }
     1619      1619    1        LL_SAFE(':');
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=45 
     1620      1620    1        LLread();
     1621      1621    1        L19_constant_expression(
     1622      1622    1        # line 607 "zbc$declar:g.:ZBC3TOU"
     1623      1623    1        &expr);
     1624      1624    1        # line 608 "zbc$declar:g.:ZBC3TOU"
     1625      1625    1        {
     1626      1626    2            (*fd)->fd_width = expr->VL_VALUE;
     1627      1627    2            free_expression(expr);
     1628      1628    2        #ifdef NOBITFIELD
     1629      1629   *S*           error("bitfields are not implemented");
     1630      1630   *S*       #endif NOBITFIELD
     1631      1631    2         }
     1632      1632    1        }
     1633      1633             L33_cast (
     1634      1634             # line 618 "zbc$declar:g.:ZBC3TOU"
     1635      1635              tpp) struct type **tpp; {
     1636      1636    1        # line 618 "zbc$declar:g.:ZBC3TOU"
     1637      1637    1        struct declarator Dc;
     1638      1638    1        LLsincr(16);
     1639      1639    1        LLtincr(93);
     1640      1640    1        # line 619 "zbc$declar:g.:ZBC3TOU"
     1641      1641    1        {Dc = null_declarator;}
     1642      1642    1        LL_SAFE('(');
     1643      1643    1        LLread();
     1644      1644    1        L6_type_specifier(
     1645      1645    1        # line 621 "zbc$declar:g.:ZBC3TOU"
     1646      1646    1        tpp);
     1647      1647    1        L34_abstract_declarator(
     1648      1648    1        # line 622 "zbc$declar:g.:ZBC3TOU"
     1649      1649    1        &Dc);
     1650      1650    1        LLtdecr(93);
     1651      1651    1        LL_SCANDONE(')');
     1652      1652    1        # line 624 "zbc$declar:g.:ZBC3TOU"
     1653      1653    1        {*tpp = declare_type(*tpp, &Dc);}
     1654      1654    1        # line 625 "zbc$declar:g.:ZBC3TOU"
     1655      1655    1        {if (Dc.dc_formal) free_formals(Dc.dc_formal);
     1656      1656    2          remove_declarator(&Dc);}
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=46 
     1657      1657    1        }
     1658      1658             L34_abstract_declarator (
     1659      1659             # line 632 "zbc$declar:g.:ZBC3TOU"
     1660      1660              dc) register struct declarator *dc; {
     1661      1661    1        # line 633 "zbc$declar:g.:ZBC3TOU"
     1662      1662    1        arith count; int t_const = 0, t_vol = 0;
     1663      1663    1         struct formal *fmx = 0;
     1664      1664    1         int elipsix        = 0;
     1665      1665    1
     1666      1666    1        L_2:
     1667      1667    1        switch(LLcsymb) {
     1668      1668    2        default: if (LLskip()) goto L_2;
     1669      1669    2        goto L_3;
     1670      1670    2        case /* '(' */ 92 : ;
     1671      1671    2        case /* ')' */ 93 : ;
     1672      1672    2        case /* '[' */ 95 : ;
     1673      1673    2        L_3: ;
     1674      1674    2        LLsdecr(16);
     1675      1675    2        LLsincr(8);
     1676      1676    2        L35_primary_abstract_declarator(
     1677      1677    2        # line 638 "zbc$declar:g.:ZBC3TOU"
     1678      1678    2        dc);
     1679      1679    2        for (;;) {
     1680      1680    3        L_4 : switch(LLcsymb) {
     1681      1681    4        case /* ')' */ 93 : ;
     1682      1682    4        break;
     1683      1683    4        default:{int LL_15=LLnext(-120);
     1684      1684    5        ;if (!LL_15) {
     1685      1685    6        break;
     1686      1686    6        }
     1687      1687    5        else if (LL_15 & 1) goto L_4;}
     1688      1688    4        case /* '(' */ 92 : ;
     1689      1689    4        case /* '[' */ 95 : ;
     1690      1690    4        switch(LLcsymb) {
     1691      1691    5        default:
     1692      1692    5        LLsincr(0);
     1693      1693    5        LLtincr(93);
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=47 
     1694      1694    5        LL_SAFE('(');
     1695      1695    5        LLread();
     1696      1696    5        L_8 : switch(LLcsymb) {
     1697      1697    6        case /* ')' */ 93 : ;
     1698      1698    6        LLsdecr(0);
     1699      1699    6        break;
     1700      1700    6        default:{int LL_16=LLnext(0);
     1701      1701    7        ;if (!LL_16) {
     1702      1702    8        LLsdecr(0);
     1703      1703    8        break;
     1704      1704    8        }
     1705      1705    7        else if (LL_16 & 1) goto L_8;}
     1706      1706    6        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1707      1707    6        case /*  AUTO  */ 19 : ;
     1708      1708    6        case /*  ENUM  */ 26 : ;
     1709      1709    6        case /*  EXTERN  */ 27 : ;
     1710      1710    6        case /*  LONG  */ 31 : ;
     1711      1711    6        case /*  REGISTER  */ 32 : ;
     1712      1712    6        case /*  SHORT  */ 34 : ;
     1713      1713    6        case /*  STATIC  */ 37 : ;
     1714      1714    6        case /*  STRUCT  */ 38 : ;
     1715      1715    6        case /*  TYPEDEF  */ 40 : ;
     1716      1716    6        case /*  UNION  */ 41 : ;
     1717      1717    6        case /*  UNSIGNED  */ 42 : ;
     1718      1718    6        case /*  SIGNED  */ 44 : ;
     1719      1719    6        case /*  CONST  */ 45 : ;
     1720      1720    6        case /*  VOLATILE  */ 46 : ;
     1721      1721    6        LLsdecr(0);
     1722      1722    6        # line 641 "zbc$declar:g.:ZBC3TOU"
     1723      1723    6        {  stack_level();
     1724      1724    7                     if (level == L_FORMAL1) stack_level();
     1725      1725    7                  }
     1726      1726    6        L14_parameter_dec_list(
     1727      1727    6        # line 644 "zbc$declar:g.:ZBC3TOU"
     1728      1728    6         &fmx, &elipsix);
     1729      1729    6        }
     1730      1730    5        LLtdecr(93);
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=48 
     1731      1731    5        LL_SCANDONE(')');
     1732      1732    5        # line 647 "zbc$declar:g.:ZBC3TOU"
     1733      1733    5        {add_decl_unary(dc, FUNCTION, (arith)0, fmx);
     1734      1734    6             if (fmx) {
     1735      1735    7                if (fmx->fm_type) {
     1736      1736    8                   unstack_level();
     1737      1737    8                   if (level == L_FORMAL1) unstack_level();
     1738      1738    8                   }
     1739      1739    7                else error("Formal arguments must be absent or declared with type");
     1740      1740    7                }
     1741      1741    6            }
     1742      1742    5        break;
     1743      1743    5        case /* '[' */ 95 : ;
     1744      1744    5        L16_arrayer(
     1745      1745    5        # line 657 "zbc$declar:g.:ZBC3TOU"
     1746      1746    5        &count);
     1747      1747    5        # line 658 "zbc$declar:g.:ZBC3TOU"
     1748      1748    5        {add_decl_unary(dc, ARRAY, count, NO_PARAMS);}
     1749      1749    5        break;
     1750      1750    5        }
     1751      1751    4        LLread();
     1752      1752    4        continue;
     1753      1753    4        }
     1754      1754    3        LLsdecr(8);
     1755      1755    3        break;
     1756      1756    3        }
     1757      1757    2        break;
     1758      1758    2        case /* '*' */ 94 : ;
     1759      1759    2        LLsdecr(16);
     1760      1760    2        LLsincr(17);
     1761      1761    2        LL_SAFE('*');
     1762      1762    2        L36_abs_pointer_qualifier(
     1763      1763    2        # line 661 "zbc$declar:g.:ZBC3TOU"
     1764      1764    2        dc, &t_const, &t_vol);
     1765      1765    2        # line 662 "zbc$declar:g.:ZBC3TOU"
     1766      1766    2        {add_decl_unary(dc, POINTER, (arith)t_const*2+t_vol, NO_PARAMS);}
     1767      1767    2        break;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=49 
     1768      1768    2        }
     1769      1769    1        }
     1770      1770             L36_abs_pointer_qualifier (
     1771      1771             # line 665 "zbc$declar:g.:ZBC3TOU"
     1772      1772              dc,tp_const,tp_vol) struct declarator *dc; int *tp_const; int *tp_vol; {
     1773      1773    1        LLread();
     1774      1774    1        L_2:
     1775      1775    1        switch(LLcsymb) {
     1776      1776    2        case /*  CONST  */ 45 : ;
     1777      1777    2        LL_SAFE(CONST);
     1778      1778    2        L36_abs_pointer_qualifier(
     1779      1779    2        # line 667 "zbc$declar:g.:ZBC3TOU"
     1780      1780    2        dc,tp_const,tp_vol);
     1781      1781    2        # line 668 "zbc$declar:g.:ZBC3TOU"
     1782      1782    2        {  if (*tp_const)
     1783      1783    3                error("repeated \"const\" type qualifier");
     1784      1784    3             *tp_const = 1;
     1785      1785    3          }
     1786      1786    2        break;
     1787      1787    2        case /*  VOLATILE  */ 46 : ;
     1788      1788    2        LL_SAFE(VOLATILE);
     1789      1789    2        L36_abs_pointer_qualifier(
     1790      1790    2        # line 672 "zbc$declar:g.:ZBC3TOU"
     1791      1791    2        dc,tp_const,tp_vol);
     1792      1792    2        # line 673 "zbc$declar:g.:ZBC3TOU"
     1793      1793    2        {  if (*tp_vol) error("repeated \"volatile\" type qualifier");
     1794      1794    3             *tp_vol = 1;
     1795      1795    3          }
     1796      1796    2        break;
     1797      1797    2        default: if (LLskip()) goto L_2;
     1798      1798    2        goto L_3;
     1799      1799    2        case /* '(' */ 92 : ;
     1800      1800    2        case /* ')' */ 93 : ;
     1801      1801    2        case /* '*' */ 94 : ;
     1802      1802    2        case /* '[' */ 95 : ;
     1803      1803    2        L_3: ;
     1804      1804    2        LLsdecr(17);
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=50 
     1805      1805    2        LLsincr(16);
     1806      1806    2        L34_abstract_declarator(
     1807      1807    2        # line 676 "zbc$declar:g.:ZBC3TOU"
     1808      1808    2        dc);
     1809      1809    2        break;
     1810      1810    2        }
     1811      1811    1        }
     1812      1812             L25_param_pointer_qualifier (
     1813      1813             # line 680 "zbc$declar:g.:ZBC3TOU"
     1814      1814              dc,tp_const,tp_vol) struct declarator *dc; int *tp_const; int *tp_vol; {
     1815      1815    1        LLread();
     1816      1816    1        L_2:
     1817      1817    1        switch(LLcsymb) {
     1818      1818    2        case /*  CONST  */ 45 : ;
     1819      1819    2        LL_SAFE(CONST);
     1820      1820    2        L25_param_pointer_qualifier(
     1821      1821    2        # line 682 "zbc$declar:g.:ZBC3TOU"
     1822      1822    2        dc,tp_const,tp_vol);
     1823      1823    2        # line 683 "zbc$declar:g.:ZBC3TOU"
     1824      1824    2        {  if (*tp_const)
     1825      1825    3                error("repeated \"const\" type qualifier");
     1826      1826    3             *tp_const = 1;
     1827      1827    3          }
     1828      1828    2        break;
     1829      1829    2        case /*  VOLATILE  */ 46 : ;
     1830      1830    2        LL_SAFE(VOLATILE);
     1831      1831    2        L25_param_pointer_qualifier(
     1832      1832    2        # line 687 "zbc$declar:g.:ZBC3TOU"
     1833      1833    2        dc,tp_const,tp_vol);
     1834      1834    2        # line 688 "zbc$declar:g.:ZBC3TOU"
     1835      1835    2        {  if (*tp_vol) error("repeated \"volatile\" type qualifier");
     1836      1836    3             *tp_vol = 1;
     1837      1837    3          }
     1838      1838    2        break;
     1839      1839    2        default: if (LLskip()) goto L_2;
     1840      1840    2        goto L_3;
     1841      1841    2        case /*  IDENTIFIER  */ 1 : ;
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=51 
     1842      1842    2        case /*  TYPE_IDENTIFIER  */ 2 : ;
     1843      1843    2        case /* ',' */ 90 : ;
     1844      1844    2        case /* '(' */ 92 : ;
     1845      1845    2        case /* ')' */ 93 : ;
     1846      1846    2        case /* '*' */ 94 : ;
     1847      1847    2        case /* '[' */ 95 : ;
     1848      1848    2        L_3: ;
     1849      1849    2        LLsdecr(10);
     1850      1850    2        LLsincr(5);
     1851      1851    2        L23_param_declarator(
     1852      1852    2        # line 691 "zbc$declar:g.:ZBC3TOU"
     1853      1853    2        dc);
     1854      1854    2        break;
     1855      1855    2        }
     1856      1856    1        }
     1857      1857             L35_primary_abstract_declarator (
     1858      1858             # line 695 "zbc$declar:g.:ZBC3TOU"
     1859      1859              dc) struct declarator *dc; {
     1860      1860    1        switch(LLcsymb) {
     1861      1861    2        case /* '(' */ 92 : ;
     1862      1862    2        # line 696 "zbc$declar:g.:ZBC3TOU"
     1863      1863    2        if (!(AHEAD == ')')) goto L_1;
     1864      1864    2        default:
     1865      1865    2        break;
     1866      1866    2        L_1 : ;
     1867      1867    2        LLsincr(16);
     1868      1868    2        LLtincr(93);
     1869      1869    2        LL_SAFE('(');
     1870      1870    2        LLread();
     1871      1871    2        L34_abstract_declarator(
     1872      1872    2        # line 699 "zbc$declar:g.:ZBC3TOU"
     1873      1873    2        dc);
     1874      1874    2        LLtdecr(93);
     1875      1875    2        LL_SCANDONE(')');
     1876      1876    2        LLread();
     1877      1877    2        break;
     1878      1878    2        }
CC.C03    File=zbc$declar:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=52 
     1879      1879    1        }
     1880      1880             L3_empty (
     1881      1881             ) {
     1882      1882    1        }
     1883      1883
     1884      1884
---  Include file information  ---

   zbc$Lpars:h.:ZBC3TOU. is referenced
   alloc:h.:ZBC3TOU. is referenced
   zbc$nobitfield:h.:ZBC3TOU. is referenced
   zbc$debug:h.:ZBC3TOU. is referenced
   zbc$arith:h.:ZBC3TOU. is referenced
   zbc$spec_arith:h.:ZBC3TOU. is referenced
   em_arith:h.:ZBC3TOU. is referenced
   zbc$LLlex:h.:ZBC3TOU. is referenced
   zbc$nofloat:h.:ZBC3TOU. is referenced
   zbc$file_info:h.:ZBC3TOU. is referenced
   zbc$nopp:h.:ZBC3TOU. is referenced
   zbc$idf:h.:ZBC3TOU. is referenced
   zbc$type:h.:ZBC3TOU. is referenced
   zbc$struct:h.:ZBC3TOU. is referenced
   zbc$field:h.:ZBC3TOU. is referenced
   zbc$decspecs:h.:ZBC3TOU. is referenced
   zbc$def:h.:ZBC3TOU. is referenced
   zbc$declar:h.:ZBC3TOU. is referenced
   zbc$label:h.:ZBC3TOU. is referenced
   em_label:h.:ZBC3TOU. is referenced
   zbc$expr:h.:ZBC3TOU. is referenced
   zbc$sizes:h.:ZBC3TOU. is referenced
   zbc$nocross:h.:ZBC3TOU. is referenced
   zbc$target_sizes:h.:ZBC3TOU. is referenced
   zbc$level:h.:ZBC3TOU. is referenced

4 warnings were detected in the file zbc$declar:c.:ZBC3TOU
