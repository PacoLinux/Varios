VERSION E05

PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:1    
        1        1        /*M* GFM$MCL   Handler for the LCP-6 GF Monitor Services                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,IND=5,ECU=0,ENU=0   */
        9        9        GFM$MCL: PROC(GFD_PARAMS);
       10       10
       11       11        %INCLUDE B_ERRORS_C;
       12     1138 S      %INCLUDE GF_LCP6_M;
       13     1139        %INCLUDE GH_GATE_M;
       14     1180 S      %INCLUDE GH_LCP6_M;
       15     1181        %INCLUDE GM_VIRTUAL_E;
       16     1391 S      %INCLUDE GU_LCP6_M;
       17     1392        %INCLUDE GU_MACROS_M;
       18     1551        %INCLUDE G_JIT_M;
       19     1816 S      %INCLUDE G_LCP6_E;
       20     1817        %INCLUDE G_ROS_M;
       21     1899 S      %INCLUDE KI_CP6;
       22     1900        %INCLUDE KV$VDO;
       23     2915        %KV_VDO_ALL_E;
       24     2994        %INCLUDE KV_PRMID_E;
       25     3168        %KV_PRMID_E;
       26     3324        %INCLUDE NK_VFC_C;
       27     3398        %INCLUDE UD_SCODE_C;
       28     3410
       29     3411                                                /* Input Parameters                   */
       30     3412        %GUD_HAND_PARAMS (FPTN=GFD_PARAMS);
       31     3488                                                /* SYMREFS                            */
       32     3489    1   DCL G$ASDT_MCL$ PTR SYMREF READONLY;
       33     3490    1   DCL G$ASDT_MON$ PTR SYMREF READONLY;
       34     3491    1   DCL G$BPAR1$ PTR SYMREF READONLY;
       35     3492    1   DCL G$JIT$ PTR SYMREF READONLY;
       36     3493    1   DCL G$ROS$ PTR SYMREF READONLY;
       37     3494
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:2    
       38     3495        %GATE (FPTN=GM_MEATLOCK,STCLASS=SYMREF);
       39     3514                                                /* ENTRYS                             */
       40     3515    1   DCL GFS$GSP ENTRY(3) ALTRET;
       41     3516    1   DCL GFS$RDCB ENTRY(1);
       42     3517    1   DCL GHH$ASD ENTRY(2);
       43     3518    1   DCL KNA$CLOSE ENTRY(2) ALTRET;
       44     3519    1   DCL KNA$FCNOU ENTRY(4) ALTRET;
       45     3520    1   DCL KNA$MCL ENTRY(1);
       46     3521    1   DCL KNA$OPEN ENTRY(4) ALTRET;
       47     3522    1   DCL KNA$USERIO ENTRY(4) ALTRET;
       48     3523    1   DCL KNH$CLOSE ENTRY ALTRET;
       49     3524    1   DCL KNH$OPEN ENTRY(2) ALTRET;
       50     3525    1   DCL KNH$SCAN ENTRY(2) ALTRET;
       51     3526    1   DCL KNH$WRITE ENTRY(2) ALTRET;
       52     3527    1   DCL SCREECH ENTRY(1);
       53     3528
       54     3529                                                /* BASED Structures                   */
       55     3530        %G$ASDT_MCL (STCLASS="BASED(G$ASDT_MCL$)");
       56     4224        %G$ASDT_MON (STCLASS="BASED(G$ASDT_MON$)");
       57     4918        %G$DCBTABLE(STCLASS="BASED(DCBTABLE$)");
       58     4929        %G$ROS(FULL=YES,STCLASS="BASED(G$ROS$)");
       59     5880        %M$DCB (DCBN=MYDCB,STCLASS="BASED(DCB$)");
       60     5931        %M$DCB (DCBN=G$DCB,STCLASS=BASED,FULL=NO);
       61     5982        %FPT_DEVICE (FPTN=FPT$DEVICE, VECTORS=NO, STCLASS="BASED(V$)");
       62     6009        %FPT_OPEN(VECTORS=NO,STCLASS="BASED(V$)");
       63     6037        %FPT_READ(VECTORS=NO,STCLASS="BASED(V$)");
       64     6063        %FPT_WRITE(VECTORS=NO,STCLASS="BASED(V$)");
       65     6087        %FPT_CLOSE(VECTORS=NO,STCLASS="BASED(V$)");
       66     6107        %FPT_WRTMLT(VECTORS=NO,STCLASS="BASED(V$)");
       67     6127        %FPT_GETDCB(VECTORS=NO,STCLASS="BASED(V$)");
       68     6147        %FPT_RELDCB(VECTORS=NO,STCLASS="BASED(V$)");
       69     6166        %NK$VFC(STCLASS=BASED);
       70     6184        %VLP_HMI(STCLASS="BASED(HMI$)");
       71     6200        %VLP_TAB (FPTN=VLP$TAB,STCLASS=BASED);
       72     6214        %VLP_WINDOW(FPTN=VLP$WINDOW,STCLASS=BASED);
       73     6258        %VLP_HDR (FPTN=VLP$HDR,STCLASS=BASED,LEN=160);
       74     6274    1   DCL CHARI CHAR(I) BASED;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:3    
       75     6275
       76     6276    1   DCL B$DCB# UBIN BASED;
       77     6277    1   DCL 1 B$DCBNAME BASED WALIGNED,
       78     6278    1         2 L UBIN BYTE CALIGNED,
       79     6279    1         2 NAME CHAR(B$DCBNAME.L) CALIGNED;
       80     6280                                                /* EQUATES                            */
       81     6281        %GF_MCL_E;
       82     6291                                                /* AUTO                               */
       83     6292    1   DCL LGN_ VECTOR;
       84     6293    1   DCL DCBTABLE$ PTR;
       85     6294    1   DCL DCB# UBIN;
       86     6295    1   DCL ENTRYSIZE UBIN;
       87     6296    1   DCL HMI$ PTR;
       88     6297    1   DCL I SBIN;
       89     6298    1   DCL 1 PRM,
       90     6299    1         2 TL CALIGNED,
       91     6300    1           3 TYPE UBIN BYTE CALIGNED,
       92     6301    1           3 LENGTH UBIN BYTE CALIGNED;
       93     6302    1   DCL V$ PTR;
       94     6303    1   DCL DCB$ PTR;
       95     6304    1   DCL T$ PTR;
       96     6305    1   DCL NAME_SZ UBIN;
       97     6306                                                /*   CONSTANT                         */
       98     6307        %VLP_ERRCODE(FPTN=E$BADVECT1,ERR#=%E$BADVECT1,SEV=%G_SEV_ERR#,
       99     6308                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      100     6354        %VLP_ERRCODE(FPTN=E$DCBOPEN,ERR#=%E$DCBOPEN,SEV=%G_SEV_ERR#,
      101     6355                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      102     6401        %VLP_ERRCODE(FPTN=E$READ,ERR#=%E$READ,SEV=%G_SEV_ERR#,
      103     6402                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      104     6448        %VLP_ERRCODE(FPTN=E$UNIMPL,ERR#=%E$UNIMP,SEV=%G_SEV_ERR#,
      105     6449                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      106     6495        %VLP_ERRCODE(FPTN=E$DCBCLOSED,ERR#=%E$DCBCLOSED,SEV=%G_SEV_ERR#,
      107     6496                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      108     6542        %VLP_ERRCODE(FPTN=E$INVASN,ERR#=%E$INVASN,SEV=%G_SEV_ERR#,
      109     6543                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      110     6589        %VLP_ERRCODE(FPTN=E$NOSLOTS,ERR#=%E$NOSLOTS,SEV=%G_SEV_ERR#,
      111     6590                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:4    
      112     6636        %VLP_ERRCODE(FPTN=E$MEMLIMIT,ERR#=%E$MEMLIMIT,SEV=%G_SEV_ERR#,
      113     6637                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      114     6683        %VLP_ERRCODE(FPTN=E$BADDCB#,ERR#=%E$BADDCB#,SEV=%G_SEV_ERR#,
      115     6684                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      116     6730        %VLP_ERRCODE(FPTN=E$BADCODE,ERR#=%E$BADCODE,SEV=%G_SEV_ERR#,
      117     6731                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      118     6777        %VLP_ERRCODE(FPTN=E$BADDCBNAME,ERR#=%E$BADDCBNAME,SEV=%G_SEV_ERR#,
      119     6778                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      120     6824
      121     6825        %VLP_SCODE(FPTN=S$MCL_TABLE,ERR#=%S$MCL_TABLE,SEV=G_SEV_SNAP#,
      122     6826                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      123     6887
      124     6888    1   DCL 1 NONAME CONSTANT WALIGNED,
      125     6889    1         2 L UBIN BYTE CALIGNED INIT(1),
      126     6890    1         2 NAME CHAR(1) CALIGNED INIT(' ');
      127     6891
      128     6892        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:5    
      129     6893        /*F*   NAME:  GFM$MCL
      130     6894
      131     6895               PURPOSE:  GFM$MCL is the MCL handler for the monitor
      132     6896                         services belonging to the GF Functional
      133     6897                         Code Group.
      134     6898        */
      135     6899
      136     6900    1      DCBTABLE$ = G$ROS.DCBPTR$;
      137     6901    1      V$ = GFD_PARAMS.PTRS.PAR1$;
      138     6902
      139     6903        /*   Verify that the DCB number in the FPT is valid.
      140     6904        */
      141     6905    1      IF GFD_PARAMS.MCL.CODE ~= %G_MCL_GETDCB#
      142     6906    2      THEN DO;
      143     6907    2           DCB# = FPT_OPEN.V.DCB#;
      144     6908    2           IF (DCB# = 0)  OR  (DCB# > G$ROS.NUMDCBS)
      145     6909    2             OR (G$DCBTABLE(DCB#) = ADDR(NIL) )
      146     6910    3           THEN DO;
      147     6911    3                GFD_PARAMS.ERR = E$BADDCB#;
      148     6912    3                RETURN;
      149     6913    3                END;
      150     6914
      151     6915    2           ELSE DCB$ = G$DCBTABLE(DCB#);
      152     6916    2           END;
      153     6917
      154     6918        /*E*  ERROR:GFM-E$BADDCB#-E
      155     6919              MESSAGE: The DCB# in your LCP-6 FPT is bad.
      156     6920        */
      157     6921
      158     6922        /*    Now call routines to handle the different MCLs
      159     6923        */
      160     6924    2      DO CASE (GFD_PARAMS.MCL.CODE);
      161     6925
      162     6926        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:6    
      163     6927        /*F*   NAME:  M$OPEN.
      164     6928
      165     6929             OPEN processing at this point merely consists of moving 2 sets
      166     6930             of info from the user's FPT into the DCB.  The first set is common
      167     6931             regardless of ASN/ORG.  The second will be done as individual cases
      168     6932             before calling the lower level handlers.
      169     6933        */
      170     6934
      171     6935    2       CASE (%G_MCL_OPEN#);
      172     6936    2         IF MYDCB.FCD
      173     6937    3         THEN DO;
      174     6938    3              GFD_PARAMS.ERR = E$DCBOPEN;
      175     6939    3              RETURN;
      176     6940    3              END;
      177     6941
      178     6942        /*E*   ERROR: GFM-E$DCBOPEN-E
      179     6943               MESSAGE: The DCB on M$OPEN is already opened.
      180     6944        */
      181     6945
      182     6946    2         IF FPT_OPEN.V.RES ~= ' ' THEN MYDCB.RES = FPT_OPEN.V.RES;
      183     6947    2         IF FPT_OPEN.V.ORG ~= 0 THEN MYDCB.ORG = FPT_OPEN.V.ORG;
      184     6948    2         IF FPT_OPEN.V.ASN ~= 0 THEN MYDCB.ASN = FPT_OPEN.V.ASN;
      185     6949        /*N*  IF FPT_OPEN.V.STRM ~= 0 THEN MYDCB.STRM = FPT_OPEN.V.STRM; */
      186     6950    2         IF FPT_OPEN.V.DISP ~= 0 THEN MYDCB.DISP = FPT_OPEN.V.DISP;
      187     6951    2         IF FPT_OPEN.V.EVENT ~= 0 THEN MYDCB.EVENT = FPT_OPEN.V.EVENT;
      188     6952    2         IF FPT_OPEN.V.KEYTYPE ~= 0 THEN MYDCB.KEYTYPE = FPT_OPEN.V.KEYTYPE;
      189     6953    2         IF FPT_OPEN.V.DVFC ~= BINASC(0) THEN MYDCB.DVFC = FPT_OPEN.V.DVFC;
      190     6954
      191     6955        /*N*  What to d with VLPs, SCRUB, ACCT, WSN, etc.  */
      192     6956        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:7    
      193     6957        /*
      194     6958             Now handle the OPEN by DCB ASN.
      195     6959        */
      196     6960
      197     6961        /*
      198     6962             ASN=DEVICE for now just means a communications connection is
      199     6963             being established between the user and the device.
      200     6964        */
      201     6965
      202     6966    3         DO CASE (MYDCB.ASN);
      203     6967
      204     6968    3          CASE (%G_ASN_DEVICE#);
      205     6969
      206     6970    3            IF MYDCB.ORG = %G_ORG_CQ#
      207     6971    4            THEN DO;
      208     6972    4                 HMI$ = GFD_PARAMS.PTRS.PAR2$;
      209     6973    4                 IF HMI$ ~= ADDR(NIL)
      210     6974    5                 THEN DO;
      211     6975    5                      MYDCB.RES = 'CQ';
      212     6976    5                      CALL KNH$OPEN(VLP_HMI,GFD_PARAMS.ERR)
      213     6977    6                      WHENRETURN DO;
      214     6978    6                           MYDCB.FCD = '1'B;
      215     6979    6                           MYDCB.FCI = '1'B;
      216     6980    6                           END;
      217     6981    5                      END;
      218     6982
      219     6983    5                 ELSE DO;
      220     6984    5                      GFD_PARAMS.ERR = E$BADVECT1;
      221     6985    5                      RETURN;
      222     6986    5                      END;
      223     6987
      224     6988        /*E*     ERROR: GFM-E$BADVECT1-E
      225     6989                 MESSAGE: On a OPEN ORG=CQ a VLP describing the circular queue
      226     6990                          must be supplied.
      227     6991        */
      228     6992
      229     6993    4                 END;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:8    
      230     6994
      231     6995
      232     6996    4            ELSE DO;
      233     6997    4                 IF GFD_PARAMS.PTRS.PAR3$ = ADDR(NIL)
      234     6998    4                 THEN CALL KNA$OPEN(DCB#,GFD_PARAMS.ERR,,GFD_PARAMS.PTRS.PAR4$->
              6998                          VLP$WINDOW);
      235     6999    5                 ELSE DO;
      236     7000    5                      VBASE(LGN_) = GFD_PARAMS.PTRS.PAR3$;
      237     7001    5                      VBOUND(LGN_) = GFD_PARAMS.BND.PAR3;
      238     7002    5                      CALL KNA$OPEN(DCB#,GFD_PARAMS.ERR,LGN_);
      239     7003    5                      END;
      240     7004    4                 END/*do if not ORG_CQ*/;
      241     7005
      242     7006        /*
      243     7007             No other ASN is currently supported.
      244     7008        */
      245     7009
      246     7010    3          CASE(ELSE);
      247     7011    3   MUST_BE_DEVICE: ;
      248     7012    3            GFD_PARAMS.ERR = E$INVASN;
      249     7013
      250     7014        /*E* ERROR: GFM-E$INVASN-E
      251     7015             MESSAGE: ASN in your DCB is not DEVICE.
      252     7016             MESSAGE1: Only ASN=DEVICE is currently supported by LCP-6.
      253     7017        */
      254     7018
      255     7019    3            END/* do case(MYDCB.ASN) */;
      256     7020
      257     7021        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:9    
      258     7022        /*F*   NAME:  M$READ.
      259     7023
      260     7024        */
      261     7025
      262     7026    2       CASE (%G_MCL_READ#);
      263     7027    2         MYDCB.DVBYTE = FPT_READ.V.DVBYTE;
      264     7028
      265     7029    3         DO CASE (MYDCB.ASN);
      266     7030
      267     7031    3          CASE (%G_ASN_DEVICE#);
      268     7032    3            IF MYDCB.ORG = %G_ORG_CQ#
      269     7033    4            THEN DO;
      270     7034    4                 GFD_PARAMS.ERR = E$READ;
      271     7035    4                 RETURN;
      272     7036    4                 END;
      273     7037
      274     7038        /*E*   ERROR: GFM-E$READ-E
      275     7039               MESSAGE: An M$READ has been attempted on a ORG=CQ DCB.
      276     7040        */
      277     7041
      278     7042    3            CALL KNA$USERIO(DCB#,,GFD_PARAMS.ERR,GFD_PARAMS);
      279     7043
      280     7044    3          CASE (ELSE);
      281     7045    3            GOTO MUST_BE_DEVICE;
      282     7046    3            END/* do case(MYDCB.ASN) */;
      283     7047
      284     7048        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:10   
      285     7049        /*F*   NAME:  M$WRITE.
      286     7050
      287     7051        */
      288     7052    2       CASE (%G_MCL_WRITE#);
      289     7053    2         MYDCB.DVBYTE = FPT_WRITE.V.DVBYTE;
      290     7054
      291     7055    3         DO CASE (MYDCB.ASN);
      292     7056
      293     7057    3          CASE (%G_ASN_DEVICE#);
      294     7058    3            IF MYDCB.ORG = %G_ORG_CQ#
      295     7059    3            THEN CALL KNH$WRITE(GFD_PARAMS.PTRS.PAR3$,GFD_PARAMS.ERR);
      296     7060    3            ELSE CALL KNA$USERIO(DCB#,,GFD_PARAMS.ERR,GFD_PARAMS);
      297     7061
      298     7062    3          CASE (ELSE);
      299     7063    3            GOTO MUST_BE_DEVICE;
      300     7064    3            END;                           /* DO CASE (MYDCB.ASN)                */
      301     7065
      302     7066        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:11   
      303     7067        /*F*   NAME:  M$WRTMLT.
      304     7068
      305     7069        */
      306     7070
      307     7071    2       CASE (%G_MCL_WRTMLT#);
      308     7072    2         IF MYDCB.ORG = %G_ORG_CQ#
      309     7073    2         THEN
      310     7074    2              CALL KNH$SCAN(,GFD_PARAMS.ERR);
      311     7075    3         ELSE DO;
      312     7076    3              IF SUBSTR(MYDCB.RES,0,2) ~= 'UC'
      313     7077    4              THEN DO;
      314     7078    4                   GFD_PARAMS.ERR = E$UNIMPL;
      315     7079                       /*E* ERROR: KNA-E$UNIMPL
      316     7080                            MESSAGE: M$WRTMLT is only implemented for ORG=CQ or RES='UC'.
      317     7081                        */
      318     7082    4                   RETURN;
      319     7083    4                   END;
      320     7084    3              CALL KNA$MCL(GFD_PARAMS);
      321     7085    3              END;
      322     7086
      323     7087        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:12   
      324     7088        /*F*   NAME:  M$CLOSE.
      325     7089
      326     7090        */
      327     7091
      328     7092    2       CASE (%G_MCL_CLOSE#);
      329     7093    2         IF MYDCB.FCD
      330     7094    3         THEN DO;
      331     7095    3              IF FPT_CLOSE.V.DISP~=0
      332     7096    3              THEN MYDCB.DISP = FPT_CLOSE.V.DISP;
      333     7097    3              IF MYDCB.ORG = %G_ORG_CQ#
      334     7098    3              THEN CALL KNH$CLOSE;
      335     7099    3              ELSE CALL KNA$CLOSE(DCB#,GFD_PARAMS.ERR);
      336     7100
      337     7101    3              MYDCB.FCD = '0'B;
      338     7102    3              END;
      339     7103
      340     7104    3         ELSE DO;
      341     7105    3              GFD_PARAMS.ERR = E$DCBCLOSED;
      342     7106    3              RETURN;
      343     7107    3              END;
      344     7108
      345     7109        /*E*     ERROR: GFM-E$DCBCLOSED-E
      346     7110                 MESSAGE: A CLOSE on a DCB which isn't open was attempted
      347     7111        */
      348     7112
      349     7113
      350     7114        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:13   
      351     7115        /*F*   NAME:  M$GETDCB.
      352     7116
      353     7117        */
      354     7118    2       CASE(%G_MCL_GETDCB#);
      355     7119
      356     7120    2         NAME_SZ = 0;
      357     7121    2         DCB$ = ADDR(NIL);
      358     7122    2         DCB# = 0;
      359     7123
      360     7124        /*N* If a need for Special Shared Processors and DCBs 5->9
      361     7125             that logic will be added here.  For now, ignore all options
      362     7126             in the V Block of the FPT.
      363     7127        */
      364     7128
      365     7129        /* If the user supplied a DCB name, verify it's length.
      366     7130        */
      367     7131    2         IF GFD_PARAMS.PTRS.PAR2$ ~= ADDR(NIL)
      368     7132    3         THEN DO;
      369     7133    3              NAME_SZ = GFD_PARAMS.PTRS.PAR2$->B$DCBNAME.L;
      370     7134
      371     7135    3              IF (NAME_SZ = 0) OR (NAME_SZ > 31)
      372     7136    4              THEN DO;
      373     7137    4                   GFD_PARAMS.ERR =E$BADDCBNAME;
      374     7138    4                   RETURN;
      375     7139    4                   END;
      376     7140
      377     7141        /*E* ERROR:  GFM-E$BADDCBNAME-E
      378     7142             MESSAGE:  DCBNAME more than 31 characters on LCP-6 M$GETDCB.
      379     7143        */
      380     7144
      381     7145        /* Verify that a DCB of the same name does not already exist.
      382     7146        */
      383     7147
      384     7148    4              DO DCB# = 1 TO G$ROS.NUMDCBS;
      385     7149    4                   IF G$DCBTABLE(DCB#) ~= ADDR(NIL)
      386     7150    5                   THEN DO;
      387     7151    5                        DCB$ = G$DCBTABLE(DCB#);
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:14   
      388     7152    5                        IF MYDCB.DCBNAME.L = NAME_SZ
      389     7153    5                          AND MYDCB.DCBNAME.NAME=GFD_PARAMS.PTRS.PAR2$->B$DCBNAME.NAME
      390     7154    5                        THEN GOTO RETURN_DCB#;
      391     7155    5                        END/* do if dcb$ ~= nil */;
      392     7156    4                   END/* do till DCB# = NUMDCBS */;
      393     7157    3              END/* do if user supplied name */;
      394     7158
      395     7159        /* If the user didn't supply a name, use a phoney one.
      396     7160        */
      397     7161    2         ELSE GFD_PARAMS.PTRS.PAR2$ = ADDR(NONAME);
      398     7162
      399     7163        /* Verify that a DCB slot is available in the Read Only Segment.
      400     7164        */
      401     7165    3         DO DCB# = %G_FRST_USR_DCB# TO G$ROS.NUMDCBS;
      402     7166    3              IF G$DCBTABLE(DCB#)=ADDR(NIL)
      403     7167    3              THEN GOTO GOT_SLOT;
      404     7168    3              END;
      405     7169
      406     7170    2         GFD_PARAMS.ERR=E$NOSLOTS;
      407     7171    2         RETURN;
      408     7172        /*E* ERROR: GFM-E$NOSLOTS-E
      409     7173             MESSAGE:  No more user slots available for this DCB.
      410     7174        */
      411     7175
      412     7176        /* Call the Read Only Segment space manager to allocate the space.
      413     7177        */
      414     7178    2   GOT_SLOT: ;
      415     7179    2         ENTRYSIZE=SIZEW(G$DCB)
      416     7180    2           +SIZEW(GFD_PARAMS.PTRS.PAR2$->B$DCBNAME);
      417     7181    2         DCB$=ADDR(NIL);
      418     7182
      419     7183    2         CALL GFS$GSP(ENTRYSIZE,DCB$,GFD_PARAMS.ERR) ALTRET(NOSPACE);
      420     7184
      421     7185    2         IF DCB$ = ADDR(NIL)
      422     7186    3         THEN DO;
      423     7187    3              GFD_PARAMS.ERR=E$MEMLIMIT;
      424     7188    3   NOSPACE:   ;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:15   
      425     7189    3              RETURN;
      426     7190    3              END;
      427     7191        /*E* ERROR:  GFM-E$MEMLIMIT-E
      428     7192             MESSAGE:  User has no space for this DCB
      429     7193        */
      430     7194
      431     7195        /* Move a copy of an initialized DCB to the area allocated and
      432     7196           initialize its name and number.
      433     7197        */
      434     7198              %LOCK (G=GM_MEATLOCK);
      435     7205    2         G$ASDT_MCL.BPAR1 = G$ASDT_MCL.ROS;
      436     7206    2         G$ASDT_MCL.BPAR1.BASE = G$ASDT_MON.ROS.BASE;
      437     7207              %UNLOCK (G=GM_MEATLOCK);
      438     7214
      439     7215    2         CALL GHH$ASD(G$BPAR1$,G$ASDT_MCL.BPAR1);
      440     7216
      441     7217    2         T$ = ADDR(G$BPAR1$->G$ROS.M$DO);
      442     7218    2         DCB$->G$DCB = T$->G$DCB;
      443     7219
      444     7220    2         DCB$->MYDCB.DCB# = DCB#;
      445     7221    2         DCB$->MYDCB.DCBNAME.L = NAME_SZ;
      446     7222    2         DCB$->MYDCB.DCBNAME.NAME = GFD_PARAMS.PTRS.PAR2$->B$DCBNAME.NAME;
      447     7223
      448     7224    2         G$DCBTABLE(DCB#) = DCB$;
      449     7225
      450     7226    2   RETURN_DCB#: ;
      451     7227    2         GFD_PARAMS.PTRS.PAR3$->B$DCB#=DCB#;
      452     7228        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:16   
      453     7229        /*F*   NAME:  M$RELDCB.
      454     7230
      455     7231        */
      456     7232    2       CASE(%G_MCL_RELDCB#);
      457     7233
      458     7234        /* Verify that the user owns the DCB and it is not open.
      459     7235        */
      460     7236
      461     7237    2         IF FPT_RELDCB.V.DCB# < %G_FRST_USR_DCB# OR
      462     7238    2           G$DCBTABLE(FPT_RELDCB.V.DCB#) = ADDR(NIL)
      463     7239    2         THEN GFD_PARAMS.ERR=E$BADDCB#;
      464     7240
      465     7241    2         ELSE IF G$DCBTABLE(FPT_RELDCB.V.DCB#)->MYDCB.FCD
      466     7242    2              THEN GFD_PARAMS.ERR=E$DCBOPEN;
      467     7243
      468     7244
      469     7245        /* Call the Read Only Segment space manager to release the space.
      470     7246        */
      471     7247    3              ELSE DO;
      472     7248    3                   DCB$ = G$DCBTABLE(FPT_RELDCB.V.DCB#);
      473     7249
      474     7250    3                   CALL GFS$RDCB(DCB$);
      475     7251
      476     7252    3                   G$DCBTABLE(FPT_RELDCB.V.DCB#) = ADDR(NIL);
      477     7253
      478     7254    3                   END;
      479     7255        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:17   
      480     7256    2       CASE (%G_MCL_DEVICE#);
      481     7257
      482     7258    2         CALL KNA$MCL(GFD_PARAMS);
      483     7259        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:18   
      484     7260    2       CASE (ELSE);
      485     7261    2         CALL SCREECH(S$MCL_TABLE);
      486     7262    2         GFD_PARAMS.ERR = E$BADCODE;
      487     7263
      488     7264        /*S* SCREECH_CODE: GFM-S$MCL_TABLE
      489     7265             TYPE: SNAP
      490     7266             MESSAGE: Unknown MCL code passed to GMF$MCL.
      491     7267        */
      492     7268
      493     7269        /*E*   ERROR: GFM-E$BADCODE-E
      494     7270               MESSAGE: Unknown MCL code passed to GMF$MCL.
      495     7271        */
      496     7272    2         END /* DO CASE (GFD_PARAMS.MCL.CODE) */;
      497     7273    1   END GFM$MCL;

PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:19   
--  Include file information  --

   UD_SCODE_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV$VDO.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GFM$MCL.

   Procedure GFM$MCL requires 932 words for executable code.
   Procedure GFM$MCL requires 32 words of local(AUTO) storage.

    No errors detected in file GFM$MCL.:E05TSI    .

PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:20   

 Object Unit name= GFM$MCL                                    File name= GFM$MCL.:E05TOU
 UTS= JUL 29 '97 21:32:21.72 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     28     1C  GFM$MCL
    1   Proc  even  none   932    3A4  GFM$MCL
    2  RoData even  none     5      5  GFM$MCL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GFM$MCL
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:21   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KNH$OPEN
 yes     yes           Std       4 KNA$USERIO
 yes     yes           Std       0 KNH$CLOSE
 yes     yes           Std       1 GHH$UNLOCK
 yes     yes           Std       2 KNH$WRITE
 yes     yes           Std       2 KNH$SCAN
         yes           Std       2 GHH$ASD
         yes           Std       1 SCREECH
 yes     yes           Std       3 GFS$GSP
 yes     yes           Std       4 KNA$OPEN
         yes           Std       1 KNA$MCL
 yes     yes           Std       1 GHH$LOCK
         yes           Std       1 GFS$RDCB
 yes     yes           Std       2 KNA$CLOSE
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ASDT_MCL$                      r    G$ASDT_MON$                      r    G$BPAR1$
r    G$ROS$                                GM_MEATLOCK                      r    G$ROS$
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:22   


        1        1        /*M* GFM$MCL   Handler for the LCP-6 GF Monitor Services                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,IND=5,ECU=0,ENU=0   */
        9        9        GFM$MCL: PROC(GFD_PARAMS);

      9   1 000000  D380 0000 0000  xent GFM$MCL         LNJ,B5   X6A_AUTO_1
          1 000003       0020 0001                       DC       32,1

       10       10
       11       11        %INCLUDE B_ERRORS_C;
       12     1138 S      %INCLUDE GF_LCP6_M;
       13     1139        %INCLUDE GH_GATE_M;
       14     1180 S      %INCLUDE GH_LCP6_M;
       15     1181        %INCLUDE GM_VIRTUAL_E;
       16     1391 S      %INCLUDE GU_LCP6_M;
       17     1392        %INCLUDE GU_MACROS_M;
       18     1551        %INCLUDE G_JIT_M;
       19     1816 S      %INCLUDE G_LCP6_E;
       20     1817        %INCLUDE G_ROS_M;
       21     1899 S      %INCLUDE KI_CP6;
       22     1900        %INCLUDE KV$VDO;
       23     2915        %KV_VDO_ALL_E;
       24     2994        %INCLUDE KV_PRMID_E;
       25     3168        %KV_PRMID_E;
       26     3324        %INCLUDE NK_VFC_C;
       27     3398        %INCLUDE UD_SCODE_C;
       28     3410
       29     3411                                                /* Input Parameters                   */
       30     3412        %GUD_HAND_PARAMS (FPTN=GFD_PARAMS);
       31     3488                                                /* SYMREFS                            */
       32     3489    1   DCL G$ASDT_MCL$ PTR SYMREF READONLY;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:23   
       33     3490    1   DCL G$ASDT_MON$ PTR SYMREF READONLY;
       34     3491    1   DCL G$BPAR1$ PTR SYMREF READONLY;
       35     3492    1   DCL G$JIT$ PTR SYMREF READONLY;
       36     3493    1   DCL G$ROS$ PTR SYMREF READONLY;
       37     3494
       38     3495        %GATE (FPTN=GM_MEATLOCK,STCLASS=SYMREF);
       39     3514                                                /* ENTRYS                             */
       40     3515    1   DCL GFS$GSP ENTRY(3) ALTRET;
       41     3516    1   DCL GFS$RDCB ENTRY(1);
       42     3517    1   DCL GHH$ASD ENTRY(2);
       43     3518    1   DCL KNA$CLOSE ENTRY(2) ALTRET;
       44     3519    1   DCL KNA$FCNOU ENTRY(4) ALTRET;
       45     3520    1   DCL KNA$MCL ENTRY(1);
       46     3521    1   DCL KNA$OPEN ENTRY(4) ALTRET;
       47     3522    1   DCL KNA$USERIO ENTRY(4) ALTRET;
       48     3523    1   DCL KNH$CLOSE ENTRY ALTRET;
       49     3524    1   DCL KNH$OPEN ENTRY(2) ALTRET;
       50     3525    1   DCL KNH$SCAN ENTRY(2) ALTRET;
       51     3526    1   DCL KNH$WRITE ENTRY(2) ALTRET;
       52     3527    1   DCL SCREECH ENTRY(1);
       53     3528
       54     3529                                                /* BASED Structures                   */
       55     3530        %G$ASDT_MCL (STCLASS="BASED(G$ASDT_MCL$)");
       56     4224        %G$ASDT_MON (STCLASS="BASED(G$ASDT_MON$)");
       57     4918        %G$DCBTABLE(STCLASS="BASED(DCBTABLE$)");
       58     4929        %G$ROS(FULL=YES,STCLASS="BASED(G$ROS$)");
       59     5880        %M$DCB (DCBN=MYDCB,STCLASS="BASED(DCB$)");
       60     5931        %M$DCB (DCBN=G$DCB,STCLASS=BASED,FULL=NO);
       61     5982        %FPT_DEVICE (FPTN=FPT$DEVICE, VECTORS=NO, STCLASS="BASED(V$)");
       62     6009        %FPT_OPEN(VECTORS=NO,STCLASS="BASED(V$)");
       63     6037        %FPT_READ(VECTORS=NO,STCLASS="BASED(V$)");
       64     6063        %FPT_WRITE(VECTORS=NO,STCLASS="BASED(V$)");
       65     6087        %FPT_CLOSE(VECTORS=NO,STCLASS="BASED(V$)");
       66     6107        %FPT_WRTMLT(VECTORS=NO,STCLASS="BASED(V$)");
       67     6127        %FPT_GETDCB(VECTORS=NO,STCLASS="BASED(V$)");
       68     6147        %FPT_RELDCB(VECTORS=NO,STCLASS="BASED(V$)");
       69     6166        %NK$VFC(STCLASS=BASED);
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:24   
       70     6184        %VLP_HMI(STCLASS="BASED(HMI$)");
       71     6200        %VLP_TAB (FPTN=VLP$TAB,STCLASS=BASED);
       72     6214        %VLP_WINDOW(FPTN=VLP$WINDOW,STCLASS=BASED);
       73     6258        %VLP_HDR (FPTN=VLP$HDR,STCLASS=BASED,LEN=160);
       74     6274    1   DCL CHARI CHAR(I) BASED;
       75     6275
       76     6276    1   DCL B$DCB# UBIN BASED;
       77     6277    1   DCL 1 B$DCBNAME BASED WALIGNED,
       78     6278    1         2 L UBIN BYTE CALIGNED,
       79     6279    1         2 NAME CHAR(B$DCBNAME.L) CALIGNED;
       80     6280                                                /* EQUATES                            */
       81     6281        %GF_MCL_E;
       82     6291                                                /* AUTO                               */
       83     6292    1   DCL LGN_ VECTOR;
       84     6293    1   DCL DCBTABLE$ PTR;
       85     6294    1   DCL DCB# UBIN;
       86     6295    1   DCL ENTRYSIZE UBIN;
       87     6296    1   DCL HMI$ PTR;
       88     6297    1   DCL I SBIN;
       89     6298    1   DCL 1 PRM,
       90     6299    1         2 TL CALIGNED,
       91     6300    1           3 TYPE UBIN BYTE CALIGNED,
       92     6301    1           3 LENGTH UBIN BYTE CALIGNED;
       93     6302    1   DCL V$ PTR;
       94     6303    1   DCL DCB$ PTR;
       95     6304    1   DCL T$ PTR;
       96     6305    1   DCL NAME_SZ UBIN;
       97     6306                                                /*   CONSTANT                         */
       98     6307        %VLP_ERRCODE(FPTN=E$BADVECT1,ERR#=%E$BADVECT1,SEV=%G_SEV_ERR#,
       99     6308                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      100     6354        %VLP_ERRCODE(FPTN=E$DCBOPEN,ERR#=%E$DCBOPEN,SEV=%G_SEV_ERR#,
      101     6355                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      102     6401        %VLP_ERRCODE(FPTN=E$READ,ERR#=%E$READ,SEV=%G_SEV_ERR#,
      103     6402                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      104     6448        %VLP_ERRCODE(FPTN=E$UNIMPL,ERR#=%E$UNIMP,SEV=%G_SEV_ERR#,
      105     6449                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      106     6495        %VLP_ERRCODE(FPTN=E$DCBCLOSED,ERR#=%E$DCBCLOSED,SEV=%G_SEV_ERR#,
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:25   
      107     6496                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      108     6542        %VLP_ERRCODE(FPTN=E$INVASN,ERR#=%E$INVASN,SEV=%G_SEV_ERR#,
      109     6543                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      110     6589        %VLP_ERRCODE(FPTN=E$NOSLOTS,ERR#=%E$NOSLOTS,SEV=%G_SEV_ERR#,
      111     6590                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      112     6636        %VLP_ERRCODE(FPTN=E$MEMLIMIT,ERR#=%E$MEMLIMIT,SEV=%G_SEV_ERR#,
      113     6637                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      114     6683        %VLP_ERRCODE(FPTN=E$BADDCB#,ERR#=%E$BADDCB#,SEV=%G_SEV_ERR#,
      115     6684                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      116     6730        %VLP_ERRCODE(FPTN=E$BADCODE,ERR#=%E$BADCODE,SEV=%G_SEV_ERR#,
      117     6731                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      118     6777        %VLP_ERRCODE(FPTN=E$BADDCBNAME,ERR#=%E$BADDCBNAME,SEV=%G_SEV_ERR#,
      119     6778                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      120     6824
      121     6825        %VLP_SCODE(FPTN=S$MCL_TABLE,ERR#=%S$MCL_TABLE,SEV=G_SEV_SNAP#,
      122     6826                     STCLASS=CONSTANT,FCG=GF,MID=M,MON='1'B);
      123     6887
      124     6888    1   DCL 1 NONAME CONSTANT WALIGNED,
      125     6889    1         2 L UBIN BYTE CALIGNED INIT(1),
      126     6890    1         2 NAME CHAR(1) CALIGNED INIT(' ');
      127     6891
      128     6892        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:26   
      129     6893        /*F*   NAME:  GFM$MCL
      130     6894
      131     6895               PURPOSE:  GFM$MCL is the MCL handler for the monitor
      132     6896                         services belonging to the GF Functional
      133     6897                         Code Group.
      134     6898        */
      135     6899
      136     6900    1      DCBTABLE$ = G$ROS.DCBPTR$;

   6900   1 000005  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          1 000008  DC86                                 LDB,B5   ,B6
          1 000009  DFC7 0009                            STB,B5   DCBTABLE$,AUTO

      137     6901    1      V$ = GFD_PARAMS.PTRS.PAR1$;

   6901   1 00000B  CCC7 0004                            LDB,B4   @GFD_PARAMS,AUTO
          1 00000D  BCC4 0006                            LDB,B3   6,B4
          1 00000F  BFC7 0011                            STB,B3   V$,AUTO

      138     6902
      139     6903        /*   Verify that the DCB number in the FPT is valid.
      140     6904        */
      141     6905    1      IF GFD_PARAMS.MCL.CODE ~= %G_MCL_GETDCB#

   6905   1 000011  E804                                 LDR,R6   ,B4
          1 000012  E570 03FF                            AND,R6   1023,IMO
          1 000014  E970 0145                            CMR,R6   325,IMO
          1 000016  0901 0019                            BE       s:6924,PREL

      142     6906    2      THEN DO;

      143     6907    2           DCB# = FPT_OPEN.V.DCB#;

   6907   1 000018  D283                                 LLH,R5   ,B3
          1 000019  DF47 000B                            STR,R5   DCB#,AUTO

      144     6908    2           IF (DCB# = 0)  OR  (DCB# > G$ROS.NUMDCBS)
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:27   

   6908   1 00001B  5901 0009                            BEZ,R5   s:6911,PREL
          1 00001D  D946 0014                            CMR,R5   20,B6
          1 00001F  0301 0005                            BG       s:6911,PREL
          1 000021  B855                                 LDR,R3   R5
          1 000022  8DB5                                 CMN      ,B5,R3
          1 000023  0981 0009                            BNE      s:6915,PREL

      145     6909    2             OR (G$DCBTABLE(DCB#) = ADDR(NIL) )
      146     6910    3           THEN DO;

      147     6911    3                GFD_PARAMS.ERR = E$BADDCB#;

   6911   1 000025  8C80 0000 0010  00                   LDI      E$BADDCB#
          1 000028  8D44 0003                            SDI      3,B4

      148     6912    3                RETURN;

   6912   1 00002A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      149     6913    3                END;
      150     6914
      151     6915    2           ELSE DCB$ = G$DCBTABLE(DCB#);

   6915   1 00002D  ACB5                                 LDB,B2   ,B5,R3
          1 00002E  AFC7 0013                            STB,B2   DCB$,AUTO

      152     6916    2           END;

      153     6917
      154     6918        /*E*  ERROR:GFM-E$BADDCB#-E
      155     6919              MESSAGE: The DCB# in your LCP-6 FPT is bad.
      156     6920        */
      157     6921
      158     6922        /*    Now call routines to handle the different MCLs
      159     6923        */
      160     6924    2      DO CASE (GFD_PARAMS.MCL.CODE);
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:28   

   6924   1 000030  B804                                 LDR,R3   ,B4
          1 000031  B570 03FF                            AND,R3   1023,IMO
          1 000033  BA70 FEC0                            ADD,R3   -320,IMO
          1 000035  3D08                                 CMV,R3   8
          1 000036  0281 035A                            BGE      s:7261,PREL
          1 000038  A830 0000 003E  01                   LDR,R2   s:6924+14,R3
          1 00003B  83A0 0000 0046  01                   JMP      s:6936,R2
          1 00003E       0000                            DC       s:6936,PREL
          1 00003F       01BD                            DC       s:7093,PREL
          1 000040       00F3                            DC       s:7027,PREL
          1 000041       0137                            DC       s:7053,PREL
          1 000042       0185                            DC       s:7072,PREL
          1 000043       01FB                            DC       s:7120,PREL
          1 000044       030C                            DC       s:7237,PREL
          1 000045       0341                            DC       s:7258,PREL

      161     6925
      162     6926        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:29   
      163     6927        /*F*   NAME:  M$OPEN.
      164     6928
      165     6929             OPEN processing at this point merely consists of moving 2 sets
      166     6930             of info from the user's FPT into the DCB.  The first set is common
      167     6931             regardless of ASN/ORG.  The second will be done as individual cases
      168     6932             before calling the lower level handlers.
      169     6933        */
      170     6934
      171     6935    2       CASE (%G_MCL_OPEN#);

      172     6936    2         IF MYDCB.FCD

   6936   1 000046  ACC7 0013                            LDB,B2   DCB$,AUTO
          1 000048  82C2 001F                            LB,'4000'X        31,B2
          1 00004A       4000
          1 00004B  0581 0009                            BBF      s:6946,PREL

      173     6937    3         THEN DO;

      174     6938    3              GFD_PARAMS.ERR = E$DCBOPEN;

   6938   1 00004D  8C80 0000 0002  00                   LDI      E$DCBOPEN
          1 000050  8D44 0003                            SDI      3,B4

      175     6939    3              RETURN;

   6939   1 000052  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      176     6940    3              END;
      177     6941
      178     6942        /*E*   ERROR: GFM-E$DCBOPEN-E
      179     6943               MESSAGE: The DCB on M$OPEN is already opened.
      180     6944        */
      181     6945
      182     6946    2         IF FPT_OPEN.V.RES ~= ' ' THEN MYDCB.RES = FPT_OPEN.V.RES;

   6946   1 000055  9B80 0000 0000  02                   LAB,B1   0
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:30   
          1 000058  0022                                 ACM      ;
          1 000059       4403 0003                                ALPHANUM(3,B3,,4,FILL),;
          1 00005B       4101 0000                                ALPHANUM(0,B1,,1,FILL)
          1 00005D  5381 0008                            CBE      s:6947,PREL

   6946   1 00005F  AB83                                 LAB,B2   ,B3
          1 000060  2C06                                 LDV,R2   6
          1 000061  6C04                                 LDV,R6   4
          1 000062  BCC7 0013                            LDB,B3   DCB$,AUTO
          1 000064  3C32                                 LDV,R3   50
          1 000065  0008                                 MMM

      183     6947    2         IF FPT_OPEN.V.ORG ~= 0 THEN MYDCB.ORG = FPT_OPEN.V.ORG;

   6947   1 000066  DCC7 0011                            LDB,B5   V$,AUTO
          1 000068  E2C5 0002                            LLH,R6   2,B5
          1 00006A  6901 0006                            BEZ,R6   s:6948,PREL

   6947   1 00006C  BCC7 0013                            LDB,B3   DCB$,AUTO
          1 00006E  EAC3 001F                            SRM,R6,'00FF'X    31,B3
          1 000070       00FF

      184     6948    2         IF FPT_OPEN.V.ASN ~= 0 THEN MYDCB.ASN = FPT_OPEN.V.ASN;

   6948   1 000071  E2C5 0001                            LLH,R6   1,B5
          1 000073  6901 0007                            BEZ,R6   s:6950,PREL

   6948   1 000075  6008                                 SOL,R6   8
          1 000076  BCC7 0013                            LDB,B3   DCB$,AUTO
          1 000078  EAC3 0020                            SRM,R6,'0F00'X    32,B3
          1 00007A       0F00

      185     6949        /*N*  IF FPT_OPEN.V.STRM ~= 0 THEN MYDCB.STRM = FPT_OPEN.V.STRM; */
      186     6950    2         IF FPT_OPEN.V.DISP ~= 0 THEN MYDCB.DISP = FPT_OPEN.V.DISP;

   6950   1 00007B  8285                                 LB,'000F'X        ,B5
   6950   1 00007C       000F
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:31   
          1 00007D  0581 0008                            BBF      s:6951,PREL

   6950   1 00007F  BCC7 0013                            LDB,B3   DCB$,AUTO
          1 000081  E805                                 LDR,R6   ,B5
          1 000082  6008                                 SOL,R6   8
          1 000083  EAC3 001F                            SRM,R6,'0F00'X    31,B3
          1 000085       0F00

      187     6951    2         IF FPT_OPEN.V.EVENT ~= 0 THEN MYDCB.EVENT = FPT_OPEN.V.EVENT;

   6951   1 000086  E845 0007                            LDR,R6   7,B5
          1 000088  6901 0005                            BEZ,R6   s:6952,PREL

   6951   1 00008A  BCC7 0013                            LDB,B3   DCB$,AUTO
          1 00008C  EF43 0025                            STR,R6   37,B3

      188     6952    2         IF FPT_OPEN.V.KEYTYPE ~= 0 THEN MYDCB.KEYTYPE = FPT_OPEN.V.KEYTYPE;

   6952   1 00008E  82C5 0001                            LB,'00FF'X        1,B5
   6952   1 000090       00FF
          1 000091  0581 0009                            BBF      s:6953,PREL

   6952   1 000093  E845 0001                            LDR,R6   1,B5
          1 000095  E570 00FF                            AND,R6   255,IMO
          1 000097  BCC7 0013                            LDB,B3   DCB$,AUTO
          1 000099  E7C3 0024                            STH,R6   36,B3

      189     6953    2         IF FPT_OPEN.V.DVFC ~= BINASC(0) THEN MYDCB.DVFC = FPT_OPEN.V.DVFC;

   6953   1 00009B  E845 0002                            LDR,R6   2,B5
          1 00009D  6008                                 SOL,R6   8
          1 00009E  6068                                 SAR,R6   8
          1 00009F  6D00                                 CMV,R6   0
          1 0000A0  0901 0008                            BE       s:6966,PREL

   6953   1 0000A2  D845 0002                            LDR,R5   2,B5
          1 0000A4  BCC7 0013                            LDB,B3   DCB$,AUTO
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:32   
          1 0000A6  DAC3 0024                            SRM,R5,'00FF'X    36,B3
          1 0000A8       00FF

      190     6954
      191     6955        /*N*  What to d with VLPs, SCRUB, ACCT, WSN, etc.  */
      192     6956        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:33   
      193     6957        /*
      194     6958             Now handle the OPEN by DCB ASN.
      195     6959        */
      196     6960
      197     6961        /*
      198     6962             ASN=DEVICE for now just means a communications connection is
      199     6963             being established between the user and the device.
      200     6964        */
      201     6965
      202     6966    3         DO CASE (MYDCB.ASN);

   6966   1 0000A9  BCC7 0013                            LDB,B3   DCB$,AUTO
          1 0000AB  B843 0020                            LDR,R3   32,B3
          1 0000AD  3048                                 SOR,R3   8
          1 0000AE  B570 000F                            AND,R3   15,IMO
          1 0000B0  3D02                                 CMV,R3   2
          1 0000B1  0281 007E                            BGE      s:7010,PREL
          1 0000B3  A830 0000 00B9  01                   LDR,R2   s:6966+16,R3
          1 0000B6  83A0 0000 00BB  01                   JMP      s:6970,R2
          1 0000B9       0075                            DC       s:7010,PREL
          1 0000BA       0000                            DC       s:6970,PREL

      203     6967
      204     6968    3          CASE (%G_ASN_DEVICE#);

      205     6969
      206     6970    3            IF MYDCB.ORG = %G_ORG_CQ#

   6970   1 0000BB  E843 001F                            LDR,R6   31,B3
          1 0000BD  E570 00FF                            AND,R6   255,IMO
          1 0000BF  6D05                                 CMV,R6   5
          1 0000C0  0981 0032                            BNE      s:6997,PREL

      207     6971    4            THEN DO;

      208     6972    4                 HMI$ = GFD_PARAMS.PTRS.PAR2$;

PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:34   
   6972   1 0000C2  ACC4 0008                            LDB,B2   8,B4
          1 0000C4  AFC7 000D                            STB,B2   HMI$,AUTO

      209     6973    4                 IF HMI$ ~= ADDR(NIL)

   6973   1 0000C6  8DC7 000D                            CMN      HMI$,AUTO
          1 0000C8  0901 0022                            BE       s:6984,PREL

      210     6974    5                 THEN DO;

      211     6975    5                      MYDCB.RES = 'CQ';

   6975   1 0000CA  9B80 0000 0000  00                   LAB,B1   E$BADVECT1
          1 0000CD  0021                                 ALR      ;
          1 0000CE       4201 001A                                ALPHANUM(26,B1,,2),;
          1 0000D0       4403 0019                                ALPHANUM(25,B3,,4,FILL)

      212     6976    5                      CALL KNH$OPEN(VLP_HMI,GFD_PARAMS.ERR)

   6976   1 0000D2  9BC4 0003                            LAB,B1   3,B4
          1 0000D4  437F                                 CSYNC    s:6976+1,SPREL
          1 0000D5  9FC7 001A                            STB,B1   NAME_SZ+3,AUTO
          1 0000D7  AFC7 0018                            STB,B2   NAME_SZ+1,AUTO
          1 0000D9  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 0000DB  CBF0 0200                            LAB,B4   512,IMO
          1 0000DD  E380 0000 0000  xent                 LNJ,B6   KNH$OPEN
          1 0000E0       0009                            DC       s:6981,PREL

      213     6977    6                      WHENRETURN DO;

      214     6978    6                           MYDCB.FCD = '1'B;

   6978   1 0000E1  ECC7 0013                            LDB,B6   DCB$,AUTO
          1 0000E3  8946 001F                            LBT,'4000'X       31,B6
          1 0000E5       4000

      215     6979    6                           MYDCB.FCI = '1'B;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:35   

   6979   1 0000E6  8946 001F                            LBT,'8000'X       31,B6
   6979   1 0000E8       8000

      216     6980    6                           END;

      217     6981    5                      END;

   6981   1 0000E9  0F81 02B7                            B        s:7273,PREL

      218     6982
      219     6983    5                 ELSE DO;

      220     6984    5                      GFD_PARAMS.ERR = E$BADVECT1;

   6984   1 0000EB  8C80 0000 0000  00                   LDI      E$BADVECT1
          1 0000EE  8D44 0003                            SDI      3,B4

      221     6985    5                      RETURN;

   6985   1 0000F0  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      222     6986    5                      END;
      223     6987
      224     6988        /*E*     ERROR: GFM-E$BADVECT1-E
      225     6989                 MESSAGE: On a OPEN ORG=CQ a VLP describing the circular queue
      226     6990                          must be supplied.
      227     6991        */
      228     6992
      229     6993    4                 END;
      230     6994
      231     6995
      232     6996    4            ELSE DO;

      233     6997    4                 IF GFD_PARAMS.PTRS.PAR3$ = ADDR(NIL)

   6997   1 0000F3  8DC4 000A                            CMN      10,B4
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:36   
          1 0000F5  0981 001C                            BNE      s:7000,PREL

      234     6998    4                 THEN CALL KNA$OPEN(DCB#,GFD_PARAMS.ERR,,GFD_PARAMS.PTRS.PAR4$->
              6998                          VLP$WINDOW);

   6998   1 0000F7  ACC4 000C                            LDB,B2   12,B4
          1 0000F9  AFC7 001E                            STB,B2   NAME_SZ+7,AUTO
          1 0000FB  9B80 0000 0000                       LAB,B1   0
          1 0000FE  9FC7 001C                            STB,B1   NAME_SZ+5,AUTO
          1 000100  EBC4 0003                            LAB,B6   3,B4
          1 000102  EFC7 001A                            STB,B6   NAME_SZ+3,AUTO
          1 000104  EBC7 000B                            LAB,B6   DCB#,AUTO
          1 000106  EFC7 0018                            STB,B6   NAME_SZ+1,AUTO
          1 000108  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 00010A  CBF0 0400                            LAB,B4   1024,IMO
          1 00010C  E380 0000 0000  xent                 LNJ,B6   KNA$OPEN
          1 00010F       0001                            DC       s:6998+25,PREL
          1 000110  0F81 0290                            B        s:7273,PREL

      235     6999    5                 ELSE DO;

      236     7000    5                      VBASE(LGN_) = GFD_PARAMS.PTRS.PAR3$;

   7000   1 000112  ACC4 000A                            LDB,B2   10,B4
          1 000114  AFC7 0007                            STB,B2   LGN_+1,AUTO

      237     7001    5                      VBOUND(LGN_) = GFD_PARAMS.BND.PAR3;

   7001   1 000116  D844 0028                            LDR,R5   40,B4
          1 000118  DF47 0006                            STR,R5   LGN_,AUTO

      238     7002    5                      CALL KNA$OPEN(DCB#,GFD_PARAMS.ERR,LGN_);

   7002   1 00011A  9BC7 0006                            LAB,B1   LGN_,AUTO
          1 00011C  9FC7 001C                            STB,B1   NAME_SZ+5,AUTO
          1 00011E  EBC4 0003                            LAB,B6   3,B4
          1 000120  EFC7 001A                            STB,B6   NAME_SZ+3,AUTO
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:37   
          1 000122  EBC7 000B                            LAB,B6   DCB#,AUTO
          1 000124  EFC7 0018                            STB,B6   NAME_SZ+1,AUTO
          1 000126  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 000128  CBF0 0300                            LAB,B4   768,IMO
          1 00012A  E380 0000 0000  xent                 LNJ,B6   KNA$OPEN
          1 00012D       0001                            DC       s:7004,PREL

      239     7003    5                      END;

      240     7004    4                 END/*do if not ORG_CQ*/;

   7004   1 00012E  0F81 0272                            B        s:7273,PREL

      241     7005
      242     7006        /*
      243     7007             No other ASN is currently supported.
      244     7008        */
      245     7009
      246     7010    3          CASE(ELSE);

   6998   1                              MUST_BE_DEVICE  null
      247     7011    3   MUST_BE_DEVICE: ;
      248     7012    3            GFD_PARAMS.ERR = E$INVASN;

   7012   1 000130  8C80 0000 000A  00   MUST_BE_DEVICE  LDI      E$INVASN
          1 000133  ECC7 0004                            LDB,B6   @GFD_PARAMS,AUTO
          1 000135  8D46 0003                            SDI      3,B6

      249     7013
      250     7014        /*E* ERROR: GFM-E$INVASN-E
      251     7015             MESSAGE: ASN in your DCB is not DEVICE.
      252     7016             MESSAGE1: Only ASN=DEVICE is currently supported by LCP-6.
      253     7017        */
      254     7018
      255     7019    3            END/* do case(MYDCB.ASN) */;

   7019   1 000137  0F81 0269                            B        s:7273,PREL
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:38   

      256     7020
      257     7021        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:39   
      258     7022        /*F*   NAME:  M$READ.
      259     7023
      260     7024        */
      261     7025
      262     7026    2       CASE (%G_MCL_READ#);

      263     7027    2         MYDCB.DVBYTE = FPT_READ.V.DVBYTE;

   7027   1 000139  E2C3 0002                            LLH,R6   2,B3
          1 00013B  6008                                 SOL,R6   8
          1 00013C  6048                                 SOR,R6   8
          1 00013D  ACC7 0013                            LDB,B2   DCB$,AUTO
          1 00013F  E7C2 0002                            STH,R6   2,B2

      264     7028
      265     7029    3         DO CASE (MYDCB.ASN);

   7029   1 000141  ACC7 0013                            LDB,B2   DCB$,AUTO
          1 000143  B842 0020                            LDR,R3   32,B2
          1 000145  3048                                 SOR,R3   8
          1 000146  B570 000F                            AND,R3   15,IMO
          1 000148  3D02                                 CMV,R3   2
          1 000149  0281 0031                            BGE      s:7045,PREL
          1 00014B  A830 0000 0151  01                   LDR,R2   s:7029+16,R3
          1 00014E  83A0 0000 0153  01                   JMP      s:7032,R2
          1 000151       0028                            DC       s:7045,PREL
          1 000152       0000                            DC       s:7032,PREL

      266     7030
      267     7031    3          CASE (%G_ASN_DEVICE#);

      268     7032    3            IF MYDCB.ORG = %G_ORG_CQ#

   7032   1 000153  E842 001F                            LDR,R6   31,B2
          1 000155  E570 00FF                            AND,R6   255,IMO
          1 000157  6D05                                 CMV,R6   5
          1 000158  0981 0009                            BNE      s:7042,PREL
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:40   

      269     7033    4            THEN DO;

      270     7034    4                 GFD_PARAMS.ERR = E$READ;

   7034   1 00015A  8C80 0000 0004  00                   LDI      E$READ
          1 00015D  8D44 0003                            SDI      3,B4

      271     7035    4                 RETURN;

   7035   1 00015F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      272     7036    4                 END;
      273     7037
      274     7038        /*E*   ERROR: GFM-E$READ-E
      275     7039               MESSAGE: An M$READ has been attempted on a ORG=CQ DCB.
      276     7040        */
      277     7041
      278     7042    3            CALL KNA$USERIO(DCB#,,GFD_PARAMS.ERR,GFD_PARAMS);

   7042   1 000162  CFC7 001E                            STB,B4   NAME_SZ+7,AUTO
          1 000164  9BC4 0003                            LAB,B1   3,B4
          1 000166  9FC7 001C                            STB,B1   NAME_SZ+5,AUTO
          1 000168  EB80 0000 0000                       LAB,B6   0
          1 00016B  EFC7 001A                            STB,B6   NAME_SZ+3,AUTO
          1 00016D  EBC7 000B                            LAB,B6   DCB#,AUTO
          1 00016F  EFC7 0018                            STB,B6   NAME_SZ+1,AUTO
          1 000171  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 000173  CBF0 0400                            LAB,B4   1024,IMO
          1 000175  E380 0000 0000  xent                 LNJ,B6   KNA$USERIO
          1 000178       0001                            DC       s:7042+23,PREL
          1 000179  0F81 0227                            B        s:7273,PREL

      279     7043
      280     7044    3          CASE (ELSE);

      281     7045    3            GOTO MUST_BE_DEVICE;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:41   

   7045   1 00017B  0F81 FFB4                            B        s:7010,PREL

      282     7046    3            END/* do case(MYDCB.ASN) */;

      283     7047
      284     7048        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:42   
      285     7049        /*F*   NAME:  M$WRITE.
      286     7050
      287     7051        */
      288     7052    2       CASE (%G_MCL_WRITE#);

      289     7053    2         MYDCB.DVBYTE = FPT_WRITE.V.DVBYTE;

   7053   1 00017D  E2C3 0002                            LLH,R6   2,B3
          1 00017F  6008                                 SOL,R6   8
          1 000180  6048                                 SOR,R6   8
          1 000181  ACC7 0013                            LDB,B2   DCB$,AUTO
          1 000183  E7C2 0002                            STH,R6   2,B2

      290     7054
      291     7055    3         DO CASE (MYDCB.ASN);

   7055   1 000185  ACC7 0013                            LDB,B2   DCB$,AUTO
          1 000187  B842 0020                            LDR,R3   32,B2
          1 000189  3048                                 SOR,R3   8
          1 00018A  B570 000F                            AND,R3   15,IMO
          1 00018C  3D02                                 CMV,R3   2
          1 00018D  0281 003B                            BGE      s:7063,PREL
          1 00018F  A830 0000 0195  01                   LDR,R2   s:7055+16,R3
          1 000192  83A0 0000 0197  01                   JMP      s:7058,R2
          1 000195       0032                            DC       s:7063,PREL
          1 000196       0000                            DC       s:7058,PREL

      292     7056
      293     7057    3          CASE (%G_ASN_DEVICE#);

      294     7058    3            IF MYDCB.ORG = %G_ORG_CQ#

   7058   1 000197  E842 001F                            LDR,R6   31,B2
          1 000199  E570 00FF                            AND,R6   255,IMO
          1 00019B  6D05                                 CMV,R6   5
          1 00019C  0981 0013                            BNE      s:7060,PREL

PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:43   
      295     7059    3            THEN CALL KNH$WRITE(GFD_PARAMS.PTRS.PAR3$,GFD_PARAMS.ERR);

   7059   1 00019E  9BC4 0003                            LAB,B1   3,B4
          1 0001A0  9FC7 001A                            STB,B1   NAME_SZ+3,AUTO
          1 0001A2  EBC4 000A                            LAB,B6   10,B4
          1 0001A4  EFC7 0018                            STB,B6   NAME_SZ+1,AUTO
          1 0001A6  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 0001A8  CBF0 0200                            LAB,B4   512,IMO
          1 0001AA  E380 0000 0000  xent                 LNJ,B6   KNH$WRITE
          1 0001AD       0001                            DC       s:7059+16,PREL
          1 0001AE  0F81 01F2                            B        s:7273,PREL

      296     7060    3            ELSE CALL KNA$USERIO(DCB#,,GFD_PARAMS.ERR,GFD_PARAMS);

   7060   1 0001B0  CFC7 001E                            STB,B4   NAME_SZ+7,AUTO
          1 0001B2  9BC4 0003                            LAB,B1   3,B4
          1 0001B4  9FC7 001C                            STB,B1   NAME_SZ+5,AUTO
          1 0001B6  EB80 0000 0000                       LAB,B6   0
          1 0001B9  EFC7 001A                            STB,B6   NAME_SZ+3,AUTO
          1 0001BB  EBC7 000B                            LAB,B6   DCB#,AUTO
          1 0001BD  EFC7 0018                            STB,B6   NAME_SZ+1,AUTO
          1 0001BF  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 0001C1  CBF0 0400                            LAB,B4   1024,IMO
          1 0001C3  E380 0000 0000  xent                 LNJ,B6   KNA$USERIO
          1 0001C6       0001                            DC       s:7060+23,PREL
          1 0001C7  0F81 01D9                            B        s:7273,PREL

      297     7061
      298     7062    3          CASE (ELSE);

      299     7063    3            GOTO MUST_BE_DEVICE;

   7063   1 0001C9  0F81 FF66                            B        s:7010,PREL

      300     7064    3            END;                           /* DO CASE (MYDCB.ASN)                */

      301     7065
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:44   
      302     7066        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:45   
      303     7067        /*F*   NAME:  M$WRTMLT.
      304     7068
      305     7069        */
      306     7070
      307     7071    2       CASE (%G_MCL_WRTMLT#);

      308     7072    2         IF MYDCB.ORG = %G_ORG_CQ#

   7072   1 0001CB  ACC7 0013                            LDB,B2   DCB$,AUTO
          1 0001CD  E842 001F                            LDR,R6   31,B2
          1 0001CF  E570 00FF                            AND,R6   255,IMO
          1 0001D1  6D05                                 CMV,R6   5
          1 0001D2  0981 0014                            BNE      s:7076,PREL

      309     7073    2         THEN
      310     7074    2              CALL KNH$SCAN(,GFD_PARAMS.ERR);

   7074   1 0001D4  9BC4 0003                            LAB,B1   3,B4
          1 0001D6  9FC7 001A                            STB,B1   NAME_SZ+3,AUTO
          1 0001D8  EB80 0000 0000                       LAB,B6   0
          1 0001DB  EFC7 0018                            STB,B6   NAME_SZ+1,AUTO
          1 0001DD  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 0001DF  CBF0 0200                            LAB,B4   512,IMO
          1 0001E1  E380 0000 0000  xent                 LNJ,B6   KNH$SCAN
          1 0001E4       0001                            DC       s:7074+17,PREL
          1 0001E5  0F81 01BB                            B        s:7273,PREL

      311     7075    3         ELSE DO;

      312     7076    3              IF SUBSTR(MYDCB.RES,0,2) ~= 'UC'

   7076   1 0001E7  9B80 0000 0000  00                   LAB,B1   E$BADVECT1
          1 0001EA  0022                                 ACM      ;
          1 0001EB       4202 0019                                ALPHANUM(25,B2,,2,FILL),;
          1 0001ED       4201 001B                                ALPHANUM(27,B1,,2,FILL)
          1 0001EF  5381 0009                            CBE      s:7084,PREL

PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:46   
      313     7077    4              THEN DO;

      314     7078    4                   GFD_PARAMS.ERR = E$UNIMPL;

   7078   1 0001F1  8C80 0000 0006  00                   LDI      E$UNIMPL
          1 0001F4  8D44 0003                            SDI      3,B4

      315     7079                       /*E* ERROR: KNA-E$UNIMPL
      316     7080                            MESSAGE: M$WRTMLT is only implemented for ORG=CQ or RES='UC'.
      317     7081                        */
      318     7082    4                   RETURN;

   7082   1 0001F6  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      319     7083    4                   END;
      320     7084    3              CALL KNA$MCL(GFD_PARAMS);

   7084   1 0001F9  BBC7 0004                            LAB,B3   @GFD_PARAMS,AUTO
          1 0001FB  CBF0 0100                            LAB,B4   256,IMO
          1 0001FD  E380 0000 0000  xent                 LNJ,B6   KNA$MCL
          1 000200       0001                            DC       s:7085,PREL

      321     7085    3              END;

   7085   1 000201  0F81 019F                            B        s:7273,PREL

      322     7086
      323     7087        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:47   
      324     7088        /*F*   NAME:  M$CLOSE.
      325     7089
      326     7090        */
      327     7091
      328     7092    2       CASE (%G_MCL_CLOSE#);

      329     7093    2         IF MYDCB.FCD

   7093   1 000203  ACC7 0013                            LDB,B2   DCB$,AUTO
          1 000205  82C2 001F                            LB,'4000'X        31,B2
          1 000207       4000
          1 000208  0581 0030                            BBF      s:7105,PREL

      330     7094    3         THEN DO;

      331     7095    3              IF FPT_CLOSE.V.DISP~=0

   7095   1 00020A  8283                                 LB,'00FF'X        ,B3
   7095   1 00020B       00FF
          1 00020C  0581 0006                            BBF      s:7097,PREL

      332     7096    3              THEN MYDCB.DISP = FPT_CLOSE.V.DISP;

   7096   1 00020E  E803                                 LDR,R6   ,B3
          1 00020F  6008                                 SOL,R6   8
          1 000210  EAC2 001F                            SRM,R6,'0F00'X    31,B2
          1 000212       0F00

      333     7097    3              IF MYDCB.ORG = %G_ORG_CQ#

   7097   1 000213  E842 001F                            LDR,R6   31,B2
          1 000215  E570 00FF                            AND,R6   255,IMO
          1 000217  6D05                                 CMV,R6   5
          1 000218  0981 0009                            BNE      s:7099,PREL

      334     7098    3              THEN CALL KNH$CLOSE;

PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:48   
   7098   1 00021A  CBF0 0000                            LAB,B4   0,IMO
          1 00021C  E380 0000 0000  xent                 LNJ,B6   KNH$CLOSE
          1 00021F       0001                            DC       s:7098+6,PREL
          1 000220  0F81 0011                            B        s:7101,PREL

      335     7099    3              ELSE CALL KNA$CLOSE(DCB#,GFD_PARAMS.ERR);

   7099   1 000222  9BC4 0003                            LAB,B1   3,B4
          1 000224  9FC7 001A                            STB,B1   NAME_SZ+3,AUTO
          1 000226  EBC7 000B                            LAB,B6   DCB#,AUTO
          1 000228  EFC7 0018                            STB,B6   NAME_SZ+1,AUTO
          1 00022A  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 00022C  CBF0 0200                            LAB,B4   512,IMO
          1 00022E  E380 0000 0000  xent                 LNJ,B6   KNA$CLOSE
          1 000231       0001                            DC       s:7101,PREL

      336     7100
      337     7101    3              MYDCB.FCD = '0'B;

   7101   1 000232  ECC7 0013                            LDB,B6   DCB$,AUTO
          1 000234  8846 001F                            LBF,'4000'X       31,B6
          1 000236       4000

      338     7102    3              END;

   7102   1 000237  0F81 0169                            B        s:7273,PREL

      339     7103
      340     7104    3         ELSE DO;

      341     7105    3              GFD_PARAMS.ERR = E$DCBCLOSED;

   7105   1 000239  8C80 0000 0008  00                   LDI      E$DCBCLOSED
          1 00023C  8D44 0003                            SDI      3,B4

      342     7106    3              RETURN;

PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:49   
   7106   1 00023E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      343     7107    3              END;
      344     7108
      345     7109        /*E*     ERROR: GFM-E$DCBCLOSED-E
      346     7110                 MESSAGE: A CLOSE on a DCB which isn't open was attempted
      347     7111        */
      348     7112
      349     7113
      350     7114        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:50   
      351     7115        /*F*   NAME:  M$GETDCB.
      352     7116
      353     7117        */
      354     7118    2       CASE(%G_MCL_GETDCB#);

      355     7119
      356     7120    2         NAME_SZ = 0;

   7120   1 000241  8747 0017                            CL       NAME_SZ,AUTO

      357     7121    2         DCB$ = ADDR(NIL);

   7121   1 000243  AB80 0000 0000                       LAB,B2   0
          1 000246  AFC7 0013                            STB,B2   DCB$,AUTO

      358     7122    2         DCB# = 0;

   7122   1 000248  8747 000B                            CL       DCB#,AUTO

      359     7123
      360     7124        /*N* If a need for Special Shared Processors and DCBs 5->9
      361     7125             that logic will be added here.  For now, ignore all options
      362     7126             in the V Block of the FPT.
      363     7127        */
      364     7128
      365     7129        /* If the user supplied a DCB name, verify it's length.
      366     7130        */
      367     7131    2         IF GFD_PARAMS.PTRS.PAR2$ ~= ADDR(NIL)

   7131   1 00024A  8DC4 0008                            CMN      8,B4
          1 00024C  0901 0043                            BE       s:7161,PREL

      368     7132    3         THEN DO;

      369     7133    3              NAME_SZ = GFD_PARAMS.PTRS.PAR2$->B$DCBNAME.L;

   7133   1 00024E  9CC4 0008                            LDB,B1   8,B4
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:51   
          1 000250  E281                                 LLH,R6   ,B1
          1 000251  EF47 0017                            STR,R6   NAME_SZ,AUTO

      370     7134
      371     7135    3              IF (NAME_SZ = 0) OR (NAME_SZ > 31)

   7135   1 000253  6901 0004                            BEZ,R6   s:7137,PREL
          1 000255  6D1F                                 CMV,R6   31
          1 000256  0381 0009                            BLE      s:7148,PREL

      372     7136    4              THEN DO;

      373     7137    4                   GFD_PARAMS.ERR =E$BADDCBNAME;

   7137   1 000258  8C80 0000 0014  00                   LDI      E$BADDCBNAME
          1 00025B  8D44 0003                            SDI      3,B4

      374     7138    4                   RETURN;

   7138   1 00025D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      375     7139    4                   END;
      376     7140
      377     7141        /*E* ERROR:  GFM-E$BADDCBNAME-E
      378     7142             MESSAGE:  DCBNAME more than 31 characters on LCP-6 M$GETDCB.
      379     7143        */
      380     7144
      381     7145        /* Verify that a DCB of the same name does not already exist.
      382     7146        */
      383     7147
      384     7148    4              DO DCB# = 1 TO G$ROS.NUMDCBS;

   7148   1 000260  5C01                                 LDV,R5   1
          1 000261  DF47 000B                            STR,R5   DCB#,AUTO
          1 000263  0F81 0022                            B        s:7156+2,PREL

      385     7149    4                   IF G$DCBTABLE(DCB#) ~= ADDR(NIL)
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:52   

   7149   1 000265  ECC7 0009                            LDB,B6   DCBTABLE$,AUTO
          1 000267  B847 000B                            LDR,R3   DCB#,AUTO
          1 000269  8DB6                                 CMN      ,B6,R3
          1 00026A  0901 0019                            BE       s:7156,PREL

      386     7150    5                   THEN DO;

      387     7151    5                        DCB$ = G$DCBTABLE(DCB#);

   7151   1 00026C  DCB6                                 LDB,B5   ,B6,R3
          1 00026D  DFC7 0013                            STB,B5   DCB$,AUTO

      388     7152    5                        IF MYDCB.DCBNAME.L = NAME_SZ

   7152   1 00026F  E2C5 0032                            LLH,R6   50,B5
          1 000271  E947 0017                            CMR,R6   NAME_SZ,AUTO
          1 000273  0981 0010                            BNE      s:7156,PREL
          1 000275  CCC7 0004                            LDB,B4   @GFD_PARAMS,AUTO
          1 000277  BCC4 0008                            LDB,B3   8,B4
          1 000279  D283                                 LLH,R5   ,B3
          1 00027A  C856                                 LDR,R4   R6
          1 00027B  DA70 2000                            ADD,R5   8192,IMO
          1 00027D  0022                                 ACM      ;
          1 00027E       C005 0032                                ALPHANUM(50,B5,1,R4,FILL),;
          1 000280       C003 0000                                ALPHANUM(0,B3,1,R5,FILL)
          1 000282  5381 00C6                            CBE      s:7224,PREL

      389     7153    5                          AND MYDCB.DCBNAME.NAME=GFD_PARAMS.PTRS.PAR2$->B$DCBNAME.NAME
      390     7154    5                        THEN GOTO RETURN_DCB#;
      391     7155    5                        END/* do if dcb$ ~= nil */;

      392     7156    4                   END/* do till DCB# = NUMDCBS */;

   7156   1 000284  8AC7 000B                            INC      DCB#,AUTO
          1 000286  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          1 000289  E847 000B                            LDR,R6   DCB#,AUTO
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:53   
          1 00028B  E946 0014                            CMR,R6   20,B6
          1 00028D  03D8                                 BLE      s:7149,SPREL

      393     7157    3              END/* do if user supplied name */;

   7157   1 00028E  0F81 0006                            B        s:7165,PREL

      394     7158
      395     7159        /* If the user didn't supply a name, use a phoney one.
      396     7160        */
      397     7161    2         ELSE GFD_PARAMS.PTRS.PAR2$ = ADDR(NONAME);

   7161   1 000290  9B80 0000 0019  00                   LAB,B1   NONAME
          1 000293  9FC4 0008                            STB,B1   8,B4

      398     7162
      399     7163        /* Verify that a DCB slot is available in the Read Only Segment.
      400     7164        */
      401     7165    3         DO DCB# = %G_FRST_USR_DCB# TO G$ROS.NUMDCBS;

   7165   1 000295  6C0A                                 LDV,R6   10
          1 000296  EF47 000B                            STR,R6   DCB#,AUTO
          1 000298  0F81 000A                            B        s:7168+2,PREL

      402     7166    3              IF G$DCBTABLE(DCB#)=ADDR(NIL)

   7166   1 00029A  ECC7 0009                            LDB,B6   DCBTABLE$,AUTO
          1 00029C  B847 000B                            LDR,R3   DCB#,AUTO
          1 00029E  8DB6                                 CMN      ,B6,R3
          1 00029F  0901 0015                            BE       s:7170,PREL

      403     7167    3              THEN GOTO GOT_SLOT;
      404     7168    3              END;

   7168   1 0002A1  8AC7 000B                            INC      DCB#,AUTO
          1 0002A3  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          1 0002A6  E847 000B                            LDR,R6   DCB#,AUTO
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:54   
          1 0002A8  E946 0014                            CMR,R6   20,B6
          1 0002AA  03F0                                 BLE      s:7166,SPREL

      405     7169
      406     7170    2         GFD_PARAMS.ERR=E$NOSLOTS;

   7170   1 0002AB  8C80 0000 000C  00                   LDI      E$NOSLOTS
          1 0002AE  DCC7 0004                            LDB,B5   @GFD_PARAMS,AUTO
          1 0002B0  8D45 0003                            SDI      3,B5

      407     7171    2         RETURN;

   7171   1 0002B2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   7170   1                              GOT_SLOT        null
      408     7172        /*E* ERROR: GFM-E$NOSLOTS-E
      409     7173             MESSAGE:  No more user slots available for this DCB.
      410     7174        */
      411     7175
      412     7176        /* Call the Read Only Segment space manager to allocate the space.
      413     7177        */
      414     7178    2   GOT_SLOT: ;
      415     7179    2         ENTRYSIZE=SIZEW(G$DCB)

   7179   1 0002B5  DCC7 0004            GOT_SLOT        LDB,B5   @GFD_PARAMS,AUTO
          1 0002B7  CCC5 0008                            LDB,B4   8,B5
          1 0002B9  E284                                 LLH,R6   ,B4
          1 0002BA  6003                                 SOL,R6   3
          1 0002BB  6E17                                 ADV,R6   23
          1 0002BC  6044                                 SOR,R6   4
          1 0002BD  6E32                                 ADV,R6   50
          1 0002BE  EF47 000C                            STR,R6   ENTRYSIZE,AUTO

      416     7180    2           +SIZEW(GFD_PARAMS.PTRS.PAR2$->B$DCBNAME);
      417     7181    2         DCB$=ADDR(NIL);

   7181   1 0002C0  CB80 0000 0000                       LAB,B4   0
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:55   
          1 0002C3  CFC7 0013                            STB,B4   DCB$,AUTO

      418     7182
      419     7183    2         CALL GFS$GSP(ENTRYSIZE,DCB$,GFD_PARAMS.ERR) ALTRET(NOSPACE);

   7183   1 0002C5  BBC5 0003                            LAB,B3   3,B5
          1 0002C7  BFC7 001C                            STB,B3   NAME_SZ+5,AUTO
          1 0002C9  ABC7 0013                            LAB,B2   DCB$,AUTO
          1 0002CB  AFC7 001A                            STB,B2   NAME_SZ+3,AUTO
          1 0002CD  9BC7 000C                            LAB,B1   ENTRYSIZE,AUTO
          1 0002CF  9FC7 0018                            STB,B1   NAME_SZ+1,AUTO
          1 0002D1  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 0002D3  CBF0 0300                            LAB,B4   768,IMO
          1 0002D5  E380 0000 0000  xent                 LNJ,B6   GFS$GSP
          1 0002D8       000C                            DC       s:7187,PREL

      420     7184
      421     7185    2         IF DCB$ = ADDR(NIL)

   7185   1 0002D9  8DC7 0013                            CMN      DCB$,AUTO
          1 0002DB  0981 000B                            BNE      s:7203,PREL

      422     7186    3         THEN DO;

      423     7187    3              GFD_PARAMS.ERR=E$MEMLIMIT;

   7187   1 0002DD  8C80 0000 000E  00                   LDI      E$MEMLIMIT
          1 0002E0  ECC7 0004                            LDB,B6   @GFD_PARAMS,AUTO
          1 0002E2  8D46 0003                            SDI      3,B6

   7187   1                              NOSPACE         null
      424     7188    3   NOSPACE:   ;
      425     7189    3              RETURN;

   7189   1 0002E4  C380 0000 0000  xent NOSPACE         LNJ,B4   X6A_ARET

      426     7190    3              END;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:56   
      427     7191        /*E* ERROR:  GFM-E$MEMLIMIT-E
      428     7192             MESSAGE:  User has no space for this DCB
      429     7193        */
      430     7194
      431     7195        /* Move a copy of an initialized DCB to the area allocated and
      432     7196           initialize its name and number.
      433     7197        */
      434     7198              %LOCK (G=GM_MEATLOCK);

   7203   1 0002E7  BB80 0000 0001  02                   LAB,B3   +1
          1 0002EA  CBF0 0100                            LAB,B4   256,IMO
          1 0002EC  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 0002EF       0001                            DC       s:7205,PREL

      435     7205    2         G$ASDT_MCL.BPAR1 = G$ASDT_MCL.ROS;

   7205   1 0002F0  EC80 0000 0000  xsym                 LDB,B6   G$ASDT_MCL$
          1 0002F3  8CC6 0002                            LDI      2,B6
          1 0002F5  8D46 002A                            SDI      42,B6

      436     7206    2         G$ASDT_MCL.BPAR1.BASE = G$ASDT_MON.ROS.BASE;

   7206   1 0002F7  DC80 0000 0000  xsym                 LDB,B5   G$ASDT_MON$
          1 0002FA  D845 0002                            LDR,R5   2,B5
          1 0002FC  DAC6 002A                            SRM,R5,'7FFF'X    42,B6
          1 0002FE       7FFF

      437     7207              %UNLOCK (G=GM_MEATLOCK);

   7212   1 0002FF  BB80 0000 0001  02                   LAB,B3   +1
          1 000302  CBF0 0100                            LAB,B4   256,IMO
          1 000304  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000307       0001                            DC       s:7215,PREL

      438     7214
      439     7215    2         CALL GHH$ASD(G$BPAR1$,G$ASDT_MCL.BPAR1);

PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:57   
   7215   1 000308  EC80 0000 0000  xsym                 LDB,B6   G$ASDT_MCL$
          1 00030B  DBC6 002A                            LAB,B5   42,B6
          1 00030D  DFC7 001A                            STB,B5   NAME_SZ+3,AUTO
          1 00030F  CB80 0000 0000  xsym                 LAB,B4   G$BPAR1$
          1 000312  CFC7 0018                            STB,B4   NAME_SZ+1,AUTO
          1 000314  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 000316  CBF0 0200                            LAB,B4   512,IMO
          1 000318  E380 0000 0000  xent                 LNJ,B6   GHH$ASD
          1 00031B       0001                            DC       s:7217,PREL

      440     7216
      441     7217    2         T$ = ADDR(G$BPAR1$->G$ROS.M$DO);

   7217   1 00031C  EC80 0000 0000  xsym                 LDB,B6   G$BPAR1$
          1 00031F  DBC6 02A2                            LAB,B5   674,B6
          1 000321  DFC7 0015                            STB,B5   T$,AUTO

      442     7218    2         DCB$->G$DCB = T$->G$DCB;

   7218   1 000323  AB85                                 LAB,B2   ,B5
          1 000324  2C00                                 LDV,R2   0
          1 000325  6C64                                 LDV,R6   100
          1 000326  BCC7 0013                            LDB,B3   DCB$,AUTO
          1 000328  3C00                                 LDV,R3   0
          1 000329  0008                                 MMM

      443     7219
      444     7220    2         DCB$->MYDCB.DCB# = DCB#;

   7220   1 00032A  E847 000B                            LDR,R6   DCB#,AUTO
          1 00032C  CCC7 0013                            LDB,B4   DCB$,AUTO
          1 00032E  EAC4 0020                            SRM,R6,'00FF'X    32,B4
          1 000330       00FF

      445     7221    2         DCB$->MYDCB.DCBNAME.L = NAME_SZ;

   7221   1 000331  D847 0017                            LDR,R5   NAME_SZ,AUTO
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:58   
          1 000333  D7C4 0032                            STH,R5   50,B4

      446     7222    2         DCB$->MYDCB.DCBNAME.NAME = GFD_PARAMS.PTRS.PAR2$->B$DCBNAME.NAME;

   7222   1 000335  C2C4 0032                            LLH,R4   50,B4
          1 000337  BCC7 0004                            LDB,B3   @GFD_PARAMS,AUTO
          1 000339  9CC3 0008                            LDB,B1   8,B3
          1 00033B  B281                                 LLH,R3   ,B1
          1 00033C  AB81                                 LAB,B2   ,B1
          1 00033D  2C01                                 LDV,R2   1
          1 00033E  E853                                 LDR,R6   R3
          1 00033F  BB84                                 LAB,B3   ,B4
          1 000340  3C65                                 LDV,R3   101
          1 000341  0008                                 MMM

      447     7223
      448     7224    2         G$DCBTABLE(DCB#) = DCB$;

   7224   1 000342  ECC7 0013                            LDB,B6   DCB$,AUTO
          1 000344  DCC7 0009                            LDB,B5   DCBTABLE$,AUTO
          1 000346  B847 000B                            LDR,R3   DCB#,AUTO
          1 000348  EFB5                                 STB,B6   ,B5,R3

   7224   1                              RETURN_DCB#     null
      449     7225
      450     7226    2   RETURN_DCB#: ;
      451     7227    2         GFD_PARAMS.PTRS.PAR3$->B$DCB#=DCB#;

   7227   1 000349  ECC7 0004            RETURN_DCB#     LDB,B6   @GFD_PARAMS,AUTO
          1 00034B  DCC6 000A                            LDB,B5   10,B6
          1 00034D  E847 000B                            LDR,R6   DCB#,AUTO
          1 00034F  EF05                                 STR,R6   ,B5
          1 000350  0F81 0050                            B        s:7273,PREL

      452     7228        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:59   
      453     7229        /*F*   NAME:  M$RELDCB.
      454     7230
      455     7231        */
      456     7232    2       CASE(%G_MCL_RELDCB#);

      457     7233
      458     7234        /* Verify that the user owns the DCB and it is not open.
      459     7235        */
      460     7236
      461     7237    2         IF FPT_RELDCB.V.DCB# < %G_FRST_USR_DCB# OR

   7237   1 000352  E283                                 LLH,R6   ,B3
          1 000353  6D0A                                 CMV,R6   10
          1 000354  0201 0005                            BL       s:7239,PREL
          1 000356  9856                                 LDR,R1   R6
          1 000357  8D95                                 CMN      ,B5,R1
          1 000358  0981 0008                            BNE      s:7241,PREL

      462     7238    2           G$DCBTABLE(FPT_RELDCB.V.DCB#) = ADDR(NIL)
      463     7239    2         THEN GFD_PARAMS.ERR=E$BADDCB#;

   7239   1 00035A  8C80 0000 0010  00                   LDI      E$BADDCB#
          1 00035D  8D44 0003                            SDI      3,B4
          1 00035F  0F81 0041                            B        s:7273,PREL

      464     7240
      465     7241    2         ELSE IF G$DCBTABLE(FPT_RELDCB.V.DCB#)->MYDCB.FCD

   7241   1 000361  AC95                                 LDB,B2   ,B5,R1
          1 000362  82C2 001F                            LB,'4000'X        31,B2
          1 000364       4000
          1 000365  0581 0008                            BBF      s:7248,PREL

      466     7242    2              THEN GFD_PARAMS.ERR=E$DCBOPEN;

   7242   1 000367  8C80 0000 0002  00                   LDI      E$DCBOPEN
          1 00036A  8D44 0003                            SDI      3,B4
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:60   
          1 00036C  0F81 0034                            B        s:7273,PREL

      467     7243
      468     7244
      469     7245        /* Call the Read Only Segment space manager to release the space.
      470     7246        */
      471     7247    3              ELSE DO;

      472     7248    3                   DCB$ = G$DCBTABLE(FPT_RELDCB.V.DCB#);

   7248   1 00036E  AFC7 0013                            STB,B2   DCB$,AUTO

      473     7249
      474     7250    3                   CALL GFS$RDCB(DCB$);

   7250   1 000370  9BC7 0013                            LAB,B1   DCB$,AUTO
          1 000372  9FC7 0018                            STB,B1   NAME_SZ+1,AUTO
          1 000374  BBC7 0018                            LAB,B3   NAME_SZ+1,AUTO
          1 000376  CBF0 0100                            LAB,B4   256,IMO
          1 000378  E380 0000 0000  xent                 LNJ,B6   GFS$RDCB
          1 00037B       0001                            DC       s:7252,PREL

      475     7251
      476     7252    3                   G$DCBTABLE(FPT_RELDCB.V.DCB#) = ADDR(NIL);

   7252   1 00037C  ECC7 0011                            LDB,B6   V$,AUTO
          1 00037E  B286                                 LLH,R3   ,B6
          1 00037F  DB80 0000 0000                       LAB,B5   0
          1 000382  CCC7 0009                            LDB,B4   DCBTABLE$,AUTO
          1 000384  DFB4                                 STB,B5   ,B4,R3

      477     7253
      478     7254    3                   END;

   7254   1 000385  0F81 001B                            B        s:7273,PREL

      479     7255        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:61   
      480     7256    2       CASE (%G_MCL_DEVICE#);

      481     7257
      482     7258    2         CALL KNA$MCL(GFD_PARAMS);

   7258   1 000387  BBC7 0004                            LAB,B3   @GFD_PARAMS,AUTO
          1 000389  CBF0 0100                            LAB,B4   256,IMO
          1 00038B  E380 0000 0000  xent                 LNJ,B6   KNA$MCL
          1 00038E       0001                            DC       s:7258+8,PREL
          1 00038F  0F81 0011                            B        s:7273,PREL

      483     7259        %EJECT;
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:62   
      484     7260    2       CASE (ELSE);

      485     7261    2         CALL SCREECH(S$MCL_TABLE);

   7261   1 000391  BB80 0000 0003  02                   LAB,B3   +3
          1 000394  CBF0 0100                            LAB,B4   256,IMO
          1 000396  E380 0000 0000  xent                 LNJ,B6   SCREECH
          1 000399       0001                            DC       s:7262,PREL

      486     7262    2         GFD_PARAMS.ERR = E$BADCODE;

   7262   1 00039A  8C80 0000 0012  00                   LDI      E$BADCODE
          1 00039D  ECC7 0004                            LDB,B6   @GFD_PARAMS,AUTO
          1 00039F  8D46 0003                            SDI      3,B6

      487     7263
      488     7264        /*S* SCREECH_CODE: GFM-S$MCL_TABLE
      489     7265             TYPE: SNAP
      490     7266             MESSAGE: Unknown MCL code passed to GMF$MCL.
      491     7267        */
      492     7268
      493     7269        /*E*   ERROR: GFM-E$BADCODE-E
      494     7270               MESSAGE: Unknown MCL code passed to GMF$MCL.
      495     7271        */
      496     7272    2         END /* DO CASE (GFD_PARAMS.MCL.CODE) */;

      497     7273    1   END GFM$MCL;

   7273   1 0003A1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:63   
--  Include file information  --

   UD_SCODE_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   KV$VDO.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   GU_MACROS_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GFM$MCL.
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:64   

 **** Variables and constants ****

  ****  Section 000 RoData GFM$MCL

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    12-0-0/w STRC(32)    r     1 E$BADCODE                 10-0-0/w STRC(32)    r     1 E$BADDCB#
    14-0-0/w STRC(32)    r     1 E$BADDCBNAME               0-0-0/w STRC(32)    r     1 E$BADVECT1
     8-0-0/w STRC(32)    r     1 E$DCBCLOSED                2-0-0/w STRC(32)    r     1 E$DCBOPEN
     A-0-0/w STRC(32)    r     1 E$INVASN                   E-0-0/w STRC(32)    r     1 E$MEMLIMIT
     C-0-0/w STRC(32)    r     1 E$NOSLOTS                  4-0-0/w STRC(32)    r     1 E$READ
     6-0-0/w STRC(32)    r     1 E$UNIMPL                  19-0-0/w STRC(16)    r     1 NONAME
    16-0-0/w STRC(48)    r     1 S$MCL_TABLE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @GFD_PARAMS                B-0-0/w UBIN(16)    r     1 DCB#
    13-0-0/w PTR         r     1 DCB$                       9-0-0/w PTR         r     1 DCBTABLE$
     C-0-0/w UBIN(16)    r     1 ENTRYSIZE                 *0-0-0/w STRC(1280)  r     1 GFD_PARAMS
     D-0-0/w PTR         r     1 HMI$                       F-0-0/w SBIN(16)    r     1 I
     6-0-0/w VECT        r     1 LGN_                      17-0-0/w UBIN(16)    r     1 NAME_SZ
    15-0-0/w PTR         r     1 T$                        11-0-0/w PTR         r     1 V$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$ASDT_MCL$                0-0-0/w PTR         r     1 G$ASDT_MON$
     0-0-0/w PTR         r     1 G$BPAR1$                   0-0-0/w PTR         r     1 G$ROS$
     0-0-0/w STRC(48)    r     1 GM_MEATLOCK

  ****  BASED and DCB variables  ****
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:65   

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 B$DCB#                     0-0-0/w ASTR(8)     r     1 B$DCBNAME
     0-0-0/w STRC(16)    r     1 FPT_CLOSE                  0-0-0/w STRC(128)   r     1 FPT_OPEN
     0-0-0/w STRC(48)    r     1 FPT_READ                   0-0-0/w STRC(48)    r     1 FPT_RELDCB
     0-0-0/w STRC(48)    r     1 FPT_WRITE                  0-0-0/w STRC(992)   r     1 G$ASDT_MCL
     0-0-0/w STRC(992)   r     1 G$ASDT_MON                 0-0-0/w STRC(800)   r     1 G$DCB
     0-0-0/w PTR         r     1 G$DCBTABLE(0:0)
     0-0-0/w STRC(12000) r     1 G$ROS                      0-0-0/w ASTR(808)   r     1 MYDCB
     0-0-0/w STRC(256)   r     1 VLP$WINDOW                 0-0-0/w STRC(64)    r     1 VLP_HMI


   Procedure GFM$MCL requires 932 words for executable code.
   Procedure GFM$MCL requires 32 words of local(AUTO) storage.

    No errors detected in file GFM$MCL.:E05TSI    .
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:66   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:67   
          MINI XREF LISTING

B$DCB#
      6276**DCL      7227<<ASSIGN
B$DCBNAME
      6277**DCL      7179--ASSIGN
B$DCBNAME.L
      6278**DCL      6279--IMP-SIZ  7133>>ASSIGN   7152>>IF       7179>>ASSIGN   7222>>ASSIGN
B$DCBNAME.NAME
      6279**DCL      7152>>IF       7222>>ASSIGN
DCB#
      6294**DCL      6907<<ASSIGN   6908>>IF       6908>>IF       6908>>IF       6915>>ASSIGN   6998<>CALL
      7002<>CALL     7042<>CALL     7060<>CALL     7099<>CALL     7122<<ASSIGN   7148<<DOINDEX  7149>>IF
      7151>>ASSIGN   7165<<DOINDEX  7166>>IF       7220>>ASSIGN   7224>>ASSIGN   7227>>ASSIGN
DCB$
      6303**DCL      5900--IMP-PTR  6915<<ASSIGN   6936>>IF       6946>>ASSIGN   6947>>ASSIGN   6948>>ASSIGN
      6950>>ASSIGN   6951>>ASSIGN   6952>>ASSIGN   6953>>ASSIGN   6966>>DOCASE   6970>>IF       6975>>ASSIGN
      6978>>ASSIGN   6979>>ASSIGN   7027>>ASSIGN   7029>>DOCASE   7032>>IF       7053>>ASSIGN   7055>>DOCASE
      7058>>IF       7072>>IF       7076>>IF       7093>>IF       7096>>ASSIGN   7097>>IF       7101>>ASSIGN
      7121<<ASSIGN   7151<<ASSIGN   7152>>IF       7152>>IF       7152>>IF       7181<<ASSIGN   7183<>CALL
      7185>>IF       7218>>ASSIGN   7220>>ASSIGN   7221>>ASSIGN   7222>>ASSIGN   7222>>ASSIGN   7224>>ASSIGN
      7248<<ASSIGN   7250<>CALL
DCBTABLE$
      6293**DCL      4924--IMP-PTR  6900<<ASSIGN   6908>>IF       6915>>ASSIGN   7149>>IF       7151>>ASSIGN
      7166>>IF       7224>>ASSIGN   7237>>IF       7241>>IF       7248>>ASSIGN   7252>>ASSIGN
E$BADCODE
      6745**DCL      7262>>ASSIGN
E$BADDCB#
      6698**DCL      6911>>ASSIGN   7239>>ASSIGN
E$BADDCBNAME
      6792**DCL      7137>>ASSIGN
E$BADVECT1
      6322**DCL      6984>>ASSIGN
E$DCBCLOSED
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:68   
      6510**DCL      7105>>ASSIGN
E$DCBOPEN
      6369**DCL      6938>>ASSIGN   7242>>ASSIGN
E$INVASN
      6557**DCL      7012>>ASSIGN
E$MEMLIMIT
      6651**DCL      7187>>ASSIGN
E$NOSLOTS
      6604**DCL      7170>>ASSIGN
E$READ
      6416**DCL      7034>>ASSIGN
E$UNIMPL
      6463**DCL      7078>>ASSIGN
ENTRYSIZE
      6295**DCL      7179<<ASSIGN   7183<>CALL
FPT_CLOSE.V.DISP
      6105**DCL      7095>>IF       7096>>ASSIGN
FPT_OPEN.V.ASN
      6032**DCL      6948>>IF       6948>>ASSIGN
FPT_OPEN.V.DCB#
      6030**DCL      6907>>ASSIGN
FPT_OPEN.V.DISP
      6031**DCL      6950>>IF       6950>>ASSIGN
FPT_OPEN.V.DVFC
      6033**DCL      6953>>IF       6953>>ASSIGN
FPT_OPEN.V.EVENT
      6034**DCL      6951>>IF       6951>>ASSIGN
FPT_OPEN.V.KEYTYPE
      6032**DCL      6952>>IF       6952>>ASSIGN
FPT_OPEN.V.ORG
      6032**DCL      6947>>IF       6947>>ASSIGN
FPT_OPEN.V.RES
      6033**DCL      6946>>IF       6946>>ASSIGN
FPT_READ.V.DVBYTE
      6057**DCL      7027>>ASSIGN
FPT_RELDCB.V.DCB#
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:69   
      6164**DCL      7237>>IF       7237>>IF       7241>>IF       7248>>ASSIGN   7252>>ASSIGN
FPT_WRITE.V.DVBYTE
      6082**DCL      7053>>ASSIGN
G$ASDT_MCL.BPAR1
      4019**DCL      7205<<ASSIGN   7215<>CALL
G$ASDT_MCL.BPAR1.BASE
      4021**DCL      7206<<ASSIGN
G$ASDT_MCL.ROS
      3579**DCL      7205>>ASSIGN
G$ASDT_MCL$
      3489**DCL      3536--IMP-PTR  7205>>ASSIGN   7205>>ASSIGN   7206>>ASSIGN   7215>>CALL
G$ASDT_MON.ROS.BASE
      4275**DCL      7206>>ASSIGN
G$ASDT_MON$
      3490**DCL      4230--IMP-PTR  7206>>ASSIGN
G$BPAR1$
      3491**DCL      7215<>CALL     7217>>ASSIGN
G$DCB
      5951**DCL      7179--ASSIGN   7218<<ASSIGN   7218>>ASSIGN
G$DCB.EOMCHAR
      5969**DCL      5969--REDEF    5970--REDEF
G$DCB.FLDID
      5968**DCL      5968--REDEF
G$DCB.RES
      5963**DCL      5964--REDEF
G$DCBTABLE
      4924**DCL      6908>>IF       6915>>ASSIGN   7149>>IF       7151>>ASSIGN   7166>>IF       7224<<ASSIGN
      7237>>IF       7241>>IF       7248>>ASSIGN   7252<<ASSIGN
G$ROS.AUTO_DS$
      4952**DCL      4953--REDEF
G$ROS.AUTO_T$
      4953**DCL      4953--REDEF
G$ROS.CP_ECCB.FLTFLG
      5567**DCL      5598--REDEF
G$ROS.DB_ECCB.FLTFLG
      5491**DCL      5522--REDEF
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:70   
G$ROS.DCBPTR$
      4948**DCL      6900>>ASSIGN
G$ROS.JIT.ERRLOG
      5302**DCL      5305--REDEF
G$ROS.JIT.JSUNIT
      5041**DCL      5042--REDEF
G$ROS.JIT.MCLS
      5040**DCL      5040--REDEF
G$ROS.JIT.TMRZ
      5309**DCL      5310--REDEF
G$ROS.JIT.USER_EXTIME
      5033**DCL      5034--REDEF
G$ROS.JIT.USER_MEMTIME
      5036**DCL      5036--REDEF
G$ROS.JIT.USER_SVTIME
      5035**DCL      5035--REDEF
G$ROS.M$DEBUG.EOMCHAR
      5638**DCL      5638--REDEF    5639--REDEF
G$ROS.M$DEBUG.FLDID
      5637**DCL      5637--REDEF
G$ROS.M$DEBUG.RES
      5632**DCL      5633--REDEF
G$ROS.M$DO
      5827**DCL      7217--ASSIGN
G$ROS.M$DO.EOMCHAR
      5843**DCL      5843--REDEF    5844--REDEF
G$ROS.M$DO.FLDID
      5842**DCL      5842--REDEF
G$ROS.M$DO.RES
      5837**DCL      5838--REDEF
G$ROS.M$HOST.EOMCHAR
      5792**DCL      5792--REDEF    5793--REDEF
G$ROS.M$HOST.FLDID
      5791**DCL      5791--REDEF
G$ROS.M$HOST.RES
      5786**DCL      5787--REDEF
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:71   
G$ROS.M$LM.EOMCHAR
      5689**DCL      5689--REDEF    5690--REDEF
G$ROS.M$LM.FLDID
      5688**DCL      5688--REDEF
G$ROS.M$LM.RES
      5683**DCL      5684--REDEF
G$ROS.M$ME.EOMCHAR
      5741**DCL      5741--REDEF    5742--REDEF
G$ROS.M$ME.FLDID
      5740**DCL      5740--REDEF
G$ROS.M$ME.RES
      5735**DCL      5736--REDEF
G$ROS.NUMDCBS
      4952**DCL      6908>>IF       7148>>DOINDEX  7165>>DOINDEX
G$ROS.U_ECCB.FLTFLG
      5415**DCL      5446--REDEF
G$ROS$
      3493**DCL      4943--IMP-PTR  6900>>ASSIGN   6908>>IF       7148>>DOINDEX  7165>>DOINDEX
GFD_PARAMS
      3413**DCL         9--PROC     7042<>CALL     7060<>CALL     7084<>CALL     7258<>CALL
GFD_PARAMS.BND
      3473**DCL      3474--REDEF
GFD_PARAMS.BND.PAR3
      3473**DCL      7001>>ASSIGN
GFD_PARAMS.DESC
      3475**DCL      3476--REDEF
GFD_PARAMS.ERR
      3439**DCL      6911<<ASSIGN   6938<<ASSIGN   6976<>CALL     6984<<ASSIGN   6998<>CALL     7002<>CALL
      7012<<ASSIGN   7034<<ASSIGN   7042<>CALL     7059<>CALL     7060<>CALL     7074<>CALL     7078<<ASSIGN
      7099<>CALL     7105<<ASSIGN   7137<<ASSIGN   7170<<ASSIGN   7183<>CALL     7187<<ASSIGN   7239<<ASSIGN
      7242<<ASSIGN   7262<<ASSIGN
GFD_PARAMS.MCL.CODE
      3420**DCL      3420--REDEF    6905>>IF       6924>>DOCASE
GFD_PARAMS.PTRS
      3469**DCL      3470--REDEF    3472--REDEF    3472--REDEF    3472--REDEF
GFD_PARAMS.PTRS.PAR1$
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:72   
      3469**DCL      6901>>ASSIGN
GFD_PARAMS.PTRS.PAR2$
      3469**DCL      6972>>ASSIGN   7131>>IF       7133>>ASSIGN   7152>>IF       7152>>IF       7161<<ASSIGN
      7179>>ASSIGN   7179>>ASSIGN   7222>>ASSIGN   7222>>ASSIGN
GFD_PARAMS.PTRS.PAR3$
      3469**DCL      6997>>IF       7000>>ASSIGN   7059<>CALL     7227>>ASSIGN
GFD_PARAMS.PTRS.PAR4$
      3469**DCL      6998>>CALL
GFS$GSP
      3515**DCL-ENT  7183--CALL
GFS$RDCB
      3516**DCL-ENT  7250--CALL
GHH$ASD
      3517**DCL-ENT  7215--CALL
GHH$LOCK
      1179**DCL-ENT  7203--CALL
GHH$UNLOCK
      1179**DCL-ENT  7212--CALL
GM_MEATLOCK
      3507**DCL      7203<>CALL     7212<>CALL
GOT_SLOT
      7170**LABEL    7167--GOTO
HMI$
      6296**DCL      6197--IMP-PTR  6972<<ASSIGN   6973>>IF       6976>>CALL
I
      6297**DCL      6274--IMP-SIZ
KNA$CLOSE
      3518**DCL-ENT  7099--CALL
KNA$MCL
      3520**DCL-ENT  7084--CALL     7258--CALL
KNA$OPEN
      3521**DCL-ENT  6998--CALL     7002--CALL
KNA$USERIO
      3522**DCL-ENT  7042--CALL     7060--CALL
KNH$CLOSE
      3523**DCL-ENT  7098--CALL
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:73   
KNH$OPEN
      3524**DCL-ENT  6976--CALL
KNH$SCAN
      3525**DCL-ENT  7074--CALL
KNH$WRITE
      3526**DCL-ENT  7059--CALL
LGN_
      6292**DCL      7000<<ASSIGN   7001<<ASSIGN   7002<>CALL
MUST_BE_DEVICE
      6998**LABEL    7045--GOTO     7063--GOTO
MYDCB.ASN
      5916**DCL      6948<<ASSIGN   6966>>DOCASE   7029>>DOCASE   7055>>DOCASE
MYDCB.DCB#
      5916**DCL      7220<<ASSIGN
MYDCB.DCBNAME.L
      5927**DCL      5927--IMP-SIZ  7152>>IF       7152>>IF       7221<<ASSIGN   7222>>ASSIGN
MYDCB.DCBNAME.NAME
      5927**DCL      7152>>IF       7222<<ASSIGN
MYDCB.DISP
      5915**DCL      6950<<ASSIGN   7096<<ASSIGN
MYDCB.DVBYTE
      5905**DCL      7027<<ASSIGN   7053<<ASSIGN
MYDCB.DVFC
      5920**DCL      6953<<ASSIGN
MYDCB.EOMCHAR
      5918**DCL      5918--REDEF    5919--REDEF
MYDCB.EVENT
      5920**DCL      6951<<ASSIGN
MYDCB.FCD
      5914**DCL      6936>>IF       6978<<ASSIGN   7093>>IF       7101<<ASSIGN   7241>>IF
MYDCB.FCI
      5914**DCL      6979<<ASSIGN
MYDCB.FLDID
      5917**DCL      5917--REDEF
MYDCB.KEYTYPE
      5920**DCL      6952<<ASSIGN
PL6.E3A0      #001=GFM$MCL File=GFM$MCL.:E05TSI                                  TUE 07/29/97 21:32 Page:74   
MYDCB.ORG
      5915**DCL      6947<<ASSIGN   6970>>IF       7032>>IF       7058>>IF       7072>>IF       7097>>IF
MYDCB.RES
      5912**DCL      5913--REDEF    6946<<ASSIGN   6975<<ASSIGN   7076>>IF
NAME_SZ
      6305**DCL      7120<<ASSIGN   7133<<ASSIGN   7135>>IF       7135>>IF       7152>>IF       7221>>ASSIGN
NONAME
      6888**DCL      7161--ASSIGN
NOSPACE
      7187**LABEL    7183--CALLALT
RETURN_DCB#
      7224**LABEL    7154--GOTO
S$MCL_TABLE
      6853**DCL      7261<>CALL
SCREECH
      3527**DCL-ENT  7261--CALL
T$
      6304**DCL      7217<<ASSIGN   7218>>ASSIGN
V$
      6302**DCL      5999--IMP-PTR  6022--IMP-PTR  6050--IMP-PTR  6076--IMP-PTR  6100--IMP-PTR  6120--IMP-PTR
      6140--IMP-PTR  6160--IMP-PTR  6901<<ASSIGN   6907>>ASSIGN   6946>>IF       6946>>ASSIGN   6947>>IF
      6947>>ASSIGN   6948>>IF       6948>>ASSIGN   6950>>IF       6950>>ASSIGN   6951>>IF       6951>>ASSIGN
      6952>>IF       6952>>ASSIGN   6953>>IF       6953>>ASSIGN   7027>>ASSIGN   7053>>ASSIGN   7095>>IF
      7096>>ASSIGN   7237>>IF       7237>>IF       7241>>IF       7248>>ASSIGN   7252>>ASSIGN
VLP$WINDOW
      6232**DCL      6998<>CALL
VLP$WINDOW.FWINDOW
      6232**DCL      6232--REDEF    6233--REDEF
VLP_HMI
      6197**DCL      6976<>CALL
