
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:1    
        1        1        /*M* ZIU$VALSET   IDSII UTILITIES    DRIVER FOR SET VALIDATION */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8           NAME: ZIU$VALSET
        9        9        PURPOSE: ZIU$VALSET Is driver for the validation of sets utility.
       10       10                 This utility checks for bad sets in the data base, builds
       11       11                 a list of bad sets within each record type, extracts
       12       12                 those records and their set pointers, sorts them and
       13       13                 applies a decision table to locate at what records the
       14       14                 sets were broken at.
       15       15
       16       16                    ZIU$VALID SPECIFICATIONS / EXPLANATION
       17       17
       18       18           The validate set processor is used to locate record occurrances in
       19       19        which set chains are somehow malformed. Broken sets are found using
       20       20        the check processor and validate is used to find out where the sets
       21       21        are broken.
       22       22
       23       23           The first process in validate is to invoke a check on the data
       24       24        base and mark all the sets that are bad. Then also mark and sets
       25       25        the user may have specified in addition to the results of check.
       26       26
       27       27           Now that the sets to be validated are known, we will create a
       28       28        list of records that are members of those sets and place that
       29       29        list in RECLIST indexed by RECINDX. Creation of this list is done
       30       30        by using the tables built by ZIU$XREF. The MSTR_REF table list
       31       31        record types/record names/PA rec info and a pointer to SET_XREF table
       32       32        where set EIS descriptors are stored for the sets in that record.
       33       33        MSTR_REF list immediately after the records - set names with assigned
       34       34        set types starting at 5000/ a set flag and a pointer to REC_XREF table
       35       35        which provides information about the records that are a member of
       36       36        the set.
       37       37
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:2    
       38       38           Now a new setlist is made. This list is strictly an array of
       39       39        indexes to the SET_XREF table to where the set information resides.
       40       40        Appended to each record in the reclist is a pointer to this set list,
       41       41        so that for any given record, one may quickly find all the sets that
       42       42        are to be extracted. Since more than one is possible the indexs
       43       43        are stored together and the end of the set chain is marked with a
       44       44        "-1". ie.
       45       45
       46       46                 RECLIST                 SETLIST
       47       47                 -----------             -----------
       48       48                 |mstr| set|             |set_xref |
       49       49                 | ref|    |             |---------|0
       50       50                 |---------|             |---------|1
       51       51         mstr <--| 10 |  2 | __________->|---------|2
       52       52         ref for |---------|             |     16  | -----
       53       53         record  | 12 |  5 |             |---------|3     ----> SET_XREF entry
       54       54                 |---------|             |     23  | -----
       55       55                 |    |    |             |---------|4
       56       56                 |---------|             |     -1  | --> end of set list for
       57       57                 |    |    |             |---------|5    this record
       58       58                 |---------|             |     15  |
       59       59                                         |---------|6
       60       60
       61       61        SORT PROCESS.
       62       62            The next process is accomplished by using X$SORT, with an input
       63       63        and an output procedure. The records to be sorted are records
       64       64        created as references to the physical data base records for validating
       65       65        purposes. The output procedure returns the sorted records and applies
       66       66        the validating descision process.
       67       67
       68       68        INPUT PROCEDURE.
       69       69
       70       70           The input procedure reads the data base cover to cover extracting
       71       71        each record that is listed in the RECLIST. Then, for each set within
       72       72        that record that is to be validated, two validating records are
       73       73        created. An EG record (Extract record) and a PT record (Pointer T0).
       74       74        The EG record contains the DBK, rec type, set type, prior and owner
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:3    
       75       75        pointer. The PT record contains the rec type,set type,DBK, owner and
       76       76        next pointer. Sort sorts the PT record file by next pointer and set
       77       77        such that after sorting, each record in the EG file will have the
       78       78        record logically before it in the data base, physically next to it in
       79       79        the PT file.
       80       80
       81       81        OUTPUT PROCEDURE.
       82       82
       83       83           This procedure reads the EG and PT files a record at a time and
       84       84        applies a descision table which will determine where any set
       85       85        problems occurr. IE. Several records may point to the same record
       86       86        within a set, some records may have no other records pointing to
       87       87        it, a prior pointer may not point back to the record that points
       88       88        to it, etc. A report of all such problems is printed through M$LO.
       89       89
       90       90
       91       91        PA RECORDS
       92       92
       93       93           The validation of pointer arrays (PA) records presents a couple of
       94       94        problems. With PA records it is common to have more than 1 next pointer
       95       95        pointing to the same record. One pointer from a PA entry to the next lower
       96       96        level PA record and also another PA record next pointer at the same level
       97       97        will point to the same record. To get around this problem I will make
       98       98        the decision table believe there are two different sets. During record
       99       99        generation, if a PA record points to a lower level PA record then I
      100      100        subtract 5000 off the set value (since the record types will start with
      101      101        the value of 5000, this ensures a unique set value). When to records
      102      102        pointing to the same PA record are encountered in the validation process,
      103      103        one will be treated as a different set.
      104      104
      105      105           Another problem with pointer arrays is that they are tree structured
      106      106        instead of network. Prior pointers do not exist for PA entries, only
      107      107        owner pointers, and these are not always pointing to the same record
      108      108        at a given level making what appeares to be inconsistant owner pointers
      109      109        to the validation decision tree. To get around this I use the owner pointer
      110      110        as the prior pointer and do not validate owner pointers at all, but instead
      111      111        but the PA record entry and group number in the owner pointer slot. If
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:4    
      112      112        an error occurrs with a PA entry pointer, I will find the exact entry pointer
      113      113        which is bad in the owner pointer slot. In order to know that I have this
      114      114        information in the owner pointer slot (as opposed to having an owner pointer)
      115      115        I will invert (multiply by -1) the record type as a flag. When reporting
      116      116        errors, if the record type is < 0 then I know I'm dealing with a PA entry
      117      117        pointer.
      118      118                                                                            */
      119      119        ZIU$VALSET: PROC ALTRET;
      120      120
      121      121
      122      122    1   DCL 1 PTREC STATIC SYMDEF CALIGNED,
      123      123    1         2 NEXT UBIN WORD UNAL,
      124      124    1         2 SETTYPE SBIN HALF UNAL,
      125      125    1         2 RECTYPE SBIN HALF UNAL,
      126      126    1         2 DBK UBIN WORD UNAL,
      127      127    1         2 OWNER UBIN WORD UNAL;
      128      128    1   DCL 1 PTSIZE UBIN WORD STATIC SYMDEF ALIGNED;
      129      129
      130      130
      131      131    1   DCL 1 SORT_PT STATIC ALIGNED,
      132      132    1         2 COUNT UBIN WORD INIT(1),
      133      133    1         2 ITEM (0:0),
      134      134    1           3 POSITION CHAR(2) UNAL INIT('01'),
      135      135    1           3 KEY_TYPE CHAR(2) UNAL INIT('AN'),
      136      136    1           3 STARTING UBIN WORD INIT(1),
      137      137    1           3 LENGTH UBIN WORD INIT(6),
      138      138    1           3 START_CODE UBIN(5) UNAL INIT(0),
      139      139    1           3 LENGTH_CODE UBIN(4) UNAL INIT(0),
      140      140    1           3 ORDERING CHAR(1) UNAL INIT('A'),
      141      141    1           3 TRANS_CODE CHAR(2) UNAL INIT('  ');
      142      142
      143      143    1   DCL 1 SORT_ERRS STATIC ALIGNED,
      144      144    1         2 COUNT UBIN WORD INIT(1),
      145      145    1         2 ITEM (0:0),
      146      146    1           3 POSITION CHAR(2) UNAL INIT('01'),
      147      147    1           3 KEY_TYPE CHAR(2) UNAL INIT('AN'),
      148      148    1           3 STARTING UBIN WORD INIT(1),
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:5    
      149      149    1           3 LENGTH UBIN WORD INIT(6),
      150      150    1           3 START_CODE UBIN(5) UNAL INIT(0),
      151      151    1           3 LENGTH_CODE UBIN(4) UNAL INIT(0),
      152      152    1           3 ORDERING CHAR(1) UNAL INIT('A'),
      153      153    1           3 TRANS_CODE CHAR(2) UNAL INIT('  ');
      154      154
      155      155    1   DCL RBUF CHAR(256) SYMREF; /* Used to pass set cmd to SYSCTL */
      156      156    1   DCL INITIAL_SORT_CALL BIT(1) STATIC SYMDEF UNAL;
      157      157
      158      158         %INCLUDE CP_6_SUBS;
      159      698         %INCLUDE CP_6;
      160      779         %F$DCB;
      161      836         %INCLUDE ZI$DIR;
      162      993         %DIR;
      163     1137         %INCLUDE ZI_DBU_XREF;
      164     1304         %XREF_TBLS;
      165     1379         %INCLUDE ZI_GLOBAL_DBUTIL;
      166     1557         %SYS_FUNC;
      167     1649         %MISC_DCLS;
      168     1702         %INCLUDE ZI_DBU_VALDTE;
      169     1970         %VALID_LIST(STCLASS="STATIC SYMDEF");
      170     2110         %INCLUDE ZL_MACRO_C;
      171     2760         %SORT_TABLE(FPTN=SORT_PTFILE,
      172     2761         INSIZ=16,
      173     2762         OUTSIZ=16,
      174     2763         PARTSIZ=6,
      175     2764         ICE=ZIU$GENRCD,
      176     2765         OCE=ZIU$VALDTE,
      177     2766         KEYS=SORT_PT,
      178     2767         STAT=YES,
      179     2768         DMP='D');
      180     2877
      181     2878         %SORT_TABLE(FPTN=SORT_ERRFILE,
      182     2879         INSIZ=30,
      183     2880         OUTSIZ=30,
      184     2881         PARTSIZ=9,
      185     2882         KEYS=SORT_ERRS,
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:6    
      186     2883         STAT=YES,
      187     2884         DMP='D');
      188     2993
      189     2994    1   DCL X$SORT ENTRY(1) ALTRET;
      190     2995    1   DCL ZIU$VALDTE ENTRY(2) ALTRET;
      191     2996    1   DCL ZIU$SRTDCB ENTRY; /* Set up a sort colliation dcb */
      192     2997    1   DCL ZIU$CHKVAL ENTRY ALTRET;
      193     2998    1   DCL ZIU$GENRCD ENTRY(2) ALTRET;
      194     2999    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
      195     3000    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      196     3001    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
      197     3002    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
      198     3003    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      199     3004    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      200     3005    1   DCL ZIU$RPTVAL ENTRY ALTRET;
      201     3006    1   DCL BUILD_MSTR_TBL ENTRY ALTRET;
      202     3007    1   DCL BUILD_SETXREF ENTRY ALTRET;
      203     3008    1   DCL BUILD_RECXREF ENTRY ALTRET;
      204     3009    1   DCL ZIU$SYSCTL ENTRY ALTRET;
      205     3010    1   DCL SET_BUFS ENTRY(2) ALTRET;
      206     3011
      207     3012    1       REMEMBER VALID_BREAK IN BREAK_LOCAT;
      208     3013    1       CALL SET_BUFS(,32); /* Get rid of all but 32 buffers */
      209     3014
      210     3015    1       IF XREF_BUILT = %NO# THEN
      211     3016    2       DO;
      212     3017    2           CALL BUILD_MSTR_TBL ALTRET(ALT_VALID);
      213     3018    2           CALL BUILD_SETXREF ALTRET(ALT_VALID);
      214     3019    2           CALL BUILD_RECXREF ALTRET(ALT_VALID);
      215     3020    2           END;
      216     3021
      217     3022    1       IF ZI$DIR.REPRT_ERRS = %YES# THEN
      218     3023    1           GOTO RESULTS; /* Report error file only */
      219     3024
      220     3025    1       CALL ZIU$CHKVAL ALTRET(ALT_VALID);
      221     3026
      222     3027    1       CALL INIT_EG_FILE;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:7    
      223     3028    1       CALL INIT_PT_FILE;
      224     3029    1       CALL ZIU$SRTDCB;
      225     3030    1       CALL OPEN_ERRFILE ALTRET(ALT_VALID);
      226     3031    1       INITIAL_SORT_CALL = %YES#;
      227     3032
      228     3033    1       IF SETINDX > 0 THEN /* Bad sets found or selected by user */
      229     3034    1           CALL X$SORT(SORT_PTFILE) ALTRET(ALT_VALID);
      230     3035
      231     3036    1       CALL CLOSE_ERRFILE;
      232     3037
      233     3038         /*     Set up sort dcbs and sort errfile - if any problems then
      234     3039            just go directly to printing the validation report. */
      235     3040    1       IF NO_ERRORS > 0 THEN /* Are there errors to be sorted */
      236     3041    2       DO;
      237     3042    2           CALL SET_SORT('F$SORTIN  ') ALTRET(RESULTS);
      238     3043    2           CALL SET_SORT('F$SORTOUT ') ALTRET(RESULTS);
      239     3044    2           CALL X$SORT(SORT_ERRFILE) ALTRET(RESULTS);
      240     3045    2           END;
      241     3046    1   RESULTS:
      242     3047    1       CALL ZIU$RPTVAL ALTRET(ALT_VALID); /* PRINT REPORT */
      243     3048    1       RETURN;
      244     3049        %EJECT;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:8    
      245     3050        /*
      246     3051           This procedure initializes the EG dcb and opens the file, as
      247     3052           well as initializes the EG parameters.
      248     3053        */
      249     3054    1   INIT_EG_FILE: PROC ALTRET;
      250     3055
      251     3056    2   /**/ DCBNMSF = VECTOR(EGFILE);
      252     3057    2       CALL SYS_FUNC_GETDCB ALTRET(ALTRTN);
      253     3058    2       EGFILE.DCB# = DCBSF;
      254     3059
      255     3060    2   /**/ ORGSF = %CONSEC#;
      256     3061    2       ACSSF = %SEQUEN#;
      257     3062    2       FUNSF = %CREATE#;
      258     3063    2       ASNSF = %FILE#;
      259     3064    2       SHARESF = %NONE#;
      260     3065    2       FIDSF = '*EGFILE';
      261     3066    2       EXISTSF = %NEWFILE#;
      262     3067    2       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);
      263     3068
      264     3069    2       EGREC$ = ADDR(I_O_BUF(16));
      265     3070    2       NO_EGRECS = 0;
      266     3071    2       NO_EGBUFS = 0;
      267     3072    2       EGINDX = 0;
      268     3073
      269     3074    2       RETURN;
      270     3075
      271     3076    2   ALTRTN:
      272     3077    2       ALTRETURN;
      273     3078    2   END INIT_EG_FILE;
      274     3079        %EJECT;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:9    
      275     3080        /*
      276     3081           This procedure initializes the EG dcb and opens the file, as
      277     3082           well as initializes the EG parameters.
      278     3083        */
      279     3084    1   INIT_PT_FILE: PROC ALTRET;
      280     3085
      281     3086    2   DCL 1 PTFILE STATIC SYMDEF ALIGNED,
      282     3087    2         2 N,
      283     3088    2           3 C UBIN BYTE UNAL INIT(4),
      284     3089    2           3 L CHAR(4) UNAL INIT('M$PT'),
      285     3090    2         2 DCB# UBIN HALF UNAL;
      286     3091
      287     3092    2   /**/ DCBNMSF = VECTOR(PTFILE);
      288     3093    2       CALL SYS_FUNC_GETDCB ALTRET(ALTRTN);
      289     3094    2       PTFILE.DCB# = DCBSF;
      290     3095
      291     3096    2   /**/ ORGSF = %CONSEC#;
      292     3097    2       ACSSF = %SEQUEN#;
      293     3098    2       FUNSF = %CREATE#;
      294     3099    2       ASNSF = %FILE#;
      295     3100    2       SHARESF = %NONE#;
      296     3101    2       FIDSF = '*PTFILE';
      297     3102    2       EXISTSF = %NEWFILE#;
      298     3103    2       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);
      299     3104
      300     3105
      301     3106    2       RETURN;
      302     3107
      303     3108    2   ALTRTN:
      304     3109    2       ALTRETURN;
      305     3110    2   END INIT_PT_FILE;
      306     3111        %EJECT;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:10   
      307     3112    1   OPEN_ERRFILE: PROC ALTRET;
      308     3113
      309     3114    2   /**/ DCBNMSF = VECTOR(ERRFILE.N);
      310     3115    2       CALL SYS_FUNC_GETDCB ALTRET(ALTERR);
      311     3116    2       ERRFILE.DCB# = DCBSF;
      312     3117
      313     3118    2   /**/ ORGSF = %CONSEC#;
      314     3119    2       ACSSF = %SEQUEN#;
      315     3120    2       FUNSF = %CREATE#;
      316     3121    2       ASNSF = %FILE#;
      317     3122    2       EXISTSF = %NEWFILE#;
      318     3123    2       FIDSF = '*ERRFILE';
      319     3124    2       CALL SYS_FUNC_OPEN ALTRET(ALTERR);
      320     3125    2       RETURN;
      321     3126    2   ALTERR:
      322     3127    2       ALTRETURN;
      323     3128    2   END OPEN_ERRFILE;
      324     3129
      325     3130    1   CLOSE_ERRFILE: PROC;
      326     3131    2   /**/ DCBSF = ERRFILE.DCB#;
      327     3132    2       CALL SYS_FUNC_CLOS;
      328     3133    2       RETURN;
      329     3134    2   END CLOSE_ERRFILE;
      330     3135        %EJECT;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:11   
      331     3136        /*
      332     3137              Set F$SORTIN AND F$SORTOUT for sorting the errfile.
      333     3138        */
      334     3139    1   SET_SORT: PROC(DCBNM) ALTRET;
      335     3140
      336     3141    2   DCL DCBNM CHAR(10);
      337     3142    2   DCL K SBIN;
      338     3143    2   DCL DCB$ PTR;
      339     3144
      340     3145    2       DCB$ = DCBADDR(ERRFILE.DCB#);
      341     3146    2       CALL CONCAT(RBUF,'SET ',DCBNM);
      342     3147    2       J = 14;
      343     3148    2       IF DCB$->F$DCB.PSN# ~= ' '
      344     3149    3       THEN DO;
      345     3150    3           CALL INDEX(K,' ',DCB$->F$DCB.PSN#);
      346     3151    3           CALL INSERT(RBUF,J,,'DP#',SUBSTR(DCB$->F$DCB.PSN#,0,K),'/');
      347     3152    3           J = J + K + 4;
      348     3153    3           END;
      349     3154    2       CALL INSERT(RBUF,J,,DCB$->F$DCB.NAME#.C);
      350     3155    2       J = J + DCB$->F$DCB.NAME#.L;
      351     3156    2       CALL INSERT(RBUF,J,,'.',DCB$->F$DCB.ACCT#);
      352     3157    2       CALL ZIU$SYSCTL ALTRET(ALTSET);
      353     3158    2       RETURN;
      354     3159    2   ALTSET:
      355     3160    2       ALTRETURN;
      356     3161    2   END SET_SORT;
      357     3162        %EJECT;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:12   
      358     3163        /*
      359     3164                      BREAK CONTROL LOCATION TO CLOSE FILES
      360     3165        */
      361     3166    1   VALID_BREAK:
      362     3167    1       DCBSF = ZI$DIR.AREA_NM.DCB#;
      363     3168    1       IF DCBADDR(DCBSF) -> F$DCB.FCD# = %YES# THEN
      364     3169    2       DO;
      365     3170    2           CALL SYS_FUNC_CLOS;
      366     3171    2           CALL SYS_FUNC_RELDCB;
      367     3172    2           END;
      368     3173
      369     3174    1       DCBSF = ERRFILE.DCB#;
      370     3175    1       IF DCBSF < 100 THEN /* INIT'ED AT 1000 */
      371     3176    1           IF DCBADDR(DCBSF) -> F$DCB.FCD# = %YES# THEN
      372     3177    2           DO;
      373     3178    2               CALL SYS_FUNC_CLOS;
      374     3179    2               CALL SYS_FUNC_RELDCB;
      375     3180    2               END;
      376     3181
      377     3182    1       IF BREAK_FLAG>0 THEN /* IF ABORT BECAUSE BREAK HIT */
      378     3183    1           RETURN; /* RETURN NORMALLY */
      379     3184
      380     3185    1   ALT_VALID:
      381     3186    1       ALTRETURN;
      382     3187    1   END ZIU$VALSET;
      383     3188        %EOD;

PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:13   
--  Include file information  --

   ZL_MACRO_C.:TOOLE05  is referenced.
   ZI_DBU_VALDTE.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$VALSET.

   Procedure ZIU$VALSET requires 291 words for executable code.
   Procedure ZIU$VALSET requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:14   

 Object Unit name= ZIU$VALSET                                 File name= ZIU$VALSET.:ZIC0TOU
 UTS= SEP 05 '97 13:33:16.20 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   572   1074  ZIU$VALSET
    1   DCB   even  none     0      0  M$UC
    2   DCB   even  none     0      0  M$LO
    3  RoData even  UTS     14     16  ZIU$VALSET
    4   Proc  even  none   291    443  ZIU$VALSET
    5  RoData even  none    20     24  ZIU$VALSET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        0  ZIU$VALSET
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:15   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  PTREC                              0      4  PTSIZE
    0     17  INITIAL_SORT_CALL                  0     20  BREAK_LOCAT
    0     22  RECLIST                            0    332  SETLIST
    0    724  SETINDX                            0    725  RECINDX
    0    726  HIGH_RECINDX                       0    727  EGREC$
    0    730  EGINDX                             0    731  NO_EGRECS
    0    732  NO_EGBUFS                          0    733  LAST_EGINDX
    0    734  CURREG                             0    740  CURRPT
    0    744  EGFILE                             0    746  ERRFILE
    0    750  NO_ERRORS                          0    751  ERROR_BUF
    0    761  ERRBUF$                            0   1072  PTFILE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 ZIU$GENRCD
 yes     yes           Std       2 ZIU$VALDTE
 yes     yes           Std       2 SET_BUFS
 yes     yes           Std       0 ZIU$RPTVAL
 yes     yes           Std       0 BUILD_MSTR_TBL
 yes     yes           Std       0 SYS_FUNC_RELDCB
 yes     yes           Std       0 BUILD_SETXREF
 yes     yes           Std       0 SYS_FUNC_CLOS
 yes     yes           Std       0 ZIU$CHKVAL
 yes     yes           Std       1 X$SORT
 yes     yes           Std       0 BUILD_RECXREF
         yes           Std       0 ZIU$SRTDCB
 yes     yes           Std       0 SYS_FUNC_GETDCB
 yes     yes           Std       0 SYS_FUNC_OPEN
 yes     yes           Std       0 ZIU$SYSCTL
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:16   
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     RBUF                                  M$UC                                  ZI$DIR
     SCHEMA_ACTIVE                         RECORD_LIST                           SET_LIST
     RETAIN_LIST                           DUMP_FID                              ALTKY
     INIT_RG                               KEY_RNG                               ITEM_LIST
     TYPE                                  MSTR$                                 NXT_MSLOT
     MAX_MSLOT                             MSTR_INDX                             HASHTBL
     HASHINDX                              LOC_MODE                              AREA_KEY$
     NO_AREAS                              GLBL_PTR_SZ                           SET_XREF$
     NXT_SSLOT                             MAX_SSLOT                             REC_XREF$
     NXT_RSLOT                             MAX_RSLOT                             NO_RECS
     NO_SETS                               XREF_BUILT                            TYPESET
     TYPEREC                               BLKLSF                                KEYLSF
     KEYXSF                                DCBSF                                 ORGSF
     KEYSF                                 KEYVSF                                ACSSF
     NOTIMESF                              FUNSF                                 ASNSF
     TESTSF                                XTENSIZESF                            DISPSF
     WAITSF                                VFCSF                                 FULLSF
     BKUPSF                                BUFLNSF                               BUFSF
     SOURCESF                              DESTSF                                DATESF
     TIMESF                                UTSSF                                 DAYSF
     TSTAMPSF                              ENCRP_SEEDSF                          ERRCODESF
     MSGCODE                               INCL_ERR                              ERR_INSERT
     FIDSF_RD                              ACNT                                  EXISTSF
     SHARESF                               DCBNMSF                               KEYRSF
     NO_KEYSF                              REASGNSF                              CARRY_ATTRIBUTESF
     SUBMESSF                              SPKY_OPNSF                            POSSF
     ERRFLGSF                              MERGESF                               FSA_FLAG
     RELGSF                                UNUSED                                HELPCODE
     COUNTSF                               INDEXSF                               GAP
     PSNSF                                 ACNTSF                                KEY_SHADWSF
     REC$                                  RB                                    RE
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:17   
     IE                                    IB                                    CNT
     ICNT                                  RCNT                                  SCNT
     FIRST_SET                             RETCNT                                DMPCNT
     KCNT                                  ACNT_IDX                              I
     J                                     K                                     X
     STEPCC                                I_O_BUF$                              OUT_INDX
     I_O_SIZE                              REC_DATA_LN                           M$LO
     B$TCB$                                B$ROS$                                B$JIT$
     KEYFID                                I_O_KEY                               RESTART
     BREAK_FLAG                            ICHKSUM                               ITMCNT
     GAP1

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:18   


        1        1        /*M* ZIU$VALSET   IDSII UTILITIES    DRIVER FOR SET VALIDATION */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8           NAME: ZIU$VALSET
        9        9        PURPOSE: ZIU$VALSET Is driver for the validation of sets utility.
       10       10                 This utility checks for bad sets in the data base, builds
       11       11                 a list of bad sets within each record type, extracts
       12       12                 those records and their set pointers, sorts them and
       13       13                 applies a decision table to locate at what records the
       14       14                 sets were broken at.
       15       15
       16       16                    ZIU$VALID SPECIFICATIONS / EXPLANATION
       17       17
       18       18           The validate set processor is used to locate record occurrances in
       19       19        which set chains are somehow malformed. Broken sets are found using
       20       20        the check processor and validate is used to find out where the sets
       21       21        are broken.
       22       22
       23       23           The first process in validate is to invoke a check on the data
       24       24        base and mark all the sets that are bad. Then also mark and sets
       25       25        the user may have specified in addition to the results of check.
       26       26
       27       27           Now that the sets to be validated are known, we will create a
       28       28        list of records that are members of those sets and place that
       29       29        list in RECLIST indexed by RECINDX. Creation of this list is done
       30       30        by using the tables built by ZIU$XREF. The MSTR_REF table list
       31       31        record types/record names/PA rec info and a pointer to SET_XREF table
       32       32        where set EIS descriptors are stored for the sets in that record.
       33       33        MSTR_REF list immediately after the records - set names with assigned
       34       34        set types starting at 5000/ a set flag and a pointer to REC_XREF table
       35       35        which provides information about the records that are a member of
       36       36        the set.
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:19   
       37       37
       38       38           Now a new setlist is made. This list is strictly an array of
       39       39        indexes to the SET_XREF table to where the set information resides.
       40       40        Appended to each record in the reclist is a pointer to this set list,
       41       41        so that for any given record, one may quickly find all the sets that
       42       42        are to be extracted. Since more than one is possible the indexs
       43       43        are stored together and the end of the set chain is marked with a
       44       44        "-1". ie.
       45       45
       46       46                 RECLIST                 SETLIST
       47       47                 -----------             -----------
       48       48                 |mstr| set|             |set_xref |
       49       49                 | ref|    |             |---------|0
       50       50                 |---------|             |---------|1
       51       51         mstr <--| 10 |  2 | __________->|---------|2
       52       52         ref for |---------|             |     16  | -----
       53       53         record  | 12 |  5 |             |---------|3     ----> SET_XREF entry
       54       54                 |---------|             |     23  | -----
       55       55                 |    |    |             |---------|4
       56       56                 |---------|             |     -1  | --> end of set list for
       57       57                 |    |    |             |---------|5    this record
       58       58                 |---------|             |     15  |
       59       59                                         |---------|6
       60       60
       61       61        SORT PROCESS.
       62       62            The next process is accomplished by using X$SORT, with an input
       63       63        and an output procedure. The records to be sorted are records
       64       64        created as references to the physical data base records for validating
       65       65        purposes. The output procedure returns the sorted records and applies
       66       66        the validating descision process.
       67       67
       68       68        INPUT PROCEDURE.
       69       69
       70       70           The input procedure reads the data base cover to cover extracting
       71       71        each record that is listed in the RECLIST. Then, for each set within
       72       72        that record that is to be validated, two validating records are
       73       73        created. An EG record (Extract record) and a PT record (Pointer T0).
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:20   
       74       74        The EG record contains the DBK, rec type, set type, prior and owner
       75       75        pointer. The PT record contains the rec type,set type,DBK, owner and
       76       76        next pointer. Sort sorts the PT record file by next pointer and set
       77       77        such that after sorting, each record in the EG file will have the
       78       78        record logically before it in the data base, physically next to it in
       79       79        the PT file.
       80       80
       81       81        OUTPUT PROCEDURE.
       82       82
       83       83           This procedure reads the EG and PT files a record at a time and
       84       84        applies a descision table which will determine where any set
       85       85        problems occurr. IE. Several records may point to the same record
       86       86        within a set, some records may have no other records pointing to
       87       87        it, a prior pointer may not point back to the record that points
       88       88        to it, etc. A report of all such problems is printed through M$LO.
       89       89
       90       90
       91       91        PA RECORDS
       92       92
       93       93           The validation of pointer arrays (PA) records presents a couple of
       94       94        problems. With PA records it is common to have more than 1 next pointer
       95       95        pointing to the same record. One pointer from a PA entry to the next lower
       96       96        level PA record and also another PA record next pointer at the same level
       97       97        will point to the same record. To get around this problem I will make
       98       98        the decision table believe there are two different sets. During record
       99       99        generation, if a PA record points to a lower level PA record then I
      100      100        subtract 5000 off the set value (since the record types will start with
      101      101        the value of 5000, this ensures a unique set value). When to records
      102      102        pointing to the same PA record are encountered in the validation process,
      103      103        one will be treated as a different set.
      104      104
      105      105           Another problem with pointer arrays is that they are tree structured
      106      106        instead of network. Prior pointers do not exist for PA entries, only
      107      107        owner pointers, and these are not always pointing to the same record
      108      108        at a given level making what appeares to be inconsistant owner pointers
      109      109        to the validation decision tree. To get around this I use the owner pointer
      110      110        as the prior pointer and do not validate owner pointers at all, but instead
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:21   
      111      111        but the PA record entry and group number in the owner pointer slot. If
      112      112        an error occurrs with a PA entry pointer, I will find the exact entry pointer
      113      113        which is bad in the owner pointer slot. In order to know that I have this
      114      114        information in the owner pointer slot (as opposed to having an owner pointer)
      115      115        I will invert (multiply by -1) the record type as a flag. When reporting
      116      116        errors, if the record type is < 0 then I know I'm dealing with a PA entry
      117      117        pointer.
      118      118                                                                            */
      119      119        ZIU$VALSET: PROC ALTRET;

    119  4 000000   000000 700200 xent  ZIU$VALSET   TSX0  ! X66_AUTO_0
         4 000001   000012 000000                    ZERO    10,0

      120      120
      121      121
      122      122    1   DCL 1 PTREC STATIC SYMDEF CALIGNED,
      123      123    1         2 NEXT UBIN WORD UNAL,
      124      124    1         2 SETTYPE SBIN HALF UNAL,
      125      125    1         2 RECTYPE SBIN HALF UNAL,
      126      126    1         2 DBK UBIN WORD UNAL,
      127      127    1         2 OWNER UBIN WORD UNAL;
      128      128    1   DCL 1 PTSIZE UBIN WORD STATIC SYMDEF ALIGNED;
      129      129
      130      130
      131      131    1   DCL 1 SORT_PT STATIC ALIGNED,
      132      132    1         2 COUNT UBIN WORD INIT(1),
      133      133    1         2 ITEM (0:0),
      134      134    1           3 POSITION CHAR(2) UNAL INIT('01'),
      135      135    1           3 KEY_TYPE CHAR(2) UNAL INIT('AN'),
      136      136    1           3 STARTING UBIN WORD INIT(1),
      137      137    1           3 LENGTH UBIN WORD INIT(6),
      138      138    1           3 START_CODE UBIN(5) UNAL INIT(0),
      139      139    1           3 LENGTH_CODE UBIN(4) UNAL INIT(0),
      140      140    1           3 ORDERING CHAR(1) UNAL INIT('A'),
      141      141    1           3 TRANS_CODE CHAR(2) UNAL INIT('  ');
      142      142
      143      143    1   DCL 1 SORT_ERRS STATIC ALIGNED,
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:22   
      144      144    1         2 COUNT UBIN WORD INIT(1),
      145      145    1         2 ITEM (0:0),
      146      146    1           3 POSITION CHAR(2) UNAL INIT('01'),
      147      147    1           3 KEY_TYPE CHAR(2) UNAL INIT('AN'),
      148      148    1           3 STARTING UBIN WORD INIT(1),
      149      149    1           3 LENGTH UBIN WORD INIT(6),
      150      150    1           3 START_CODE UBIN(5) UNAL INIT(0),
      151      151    1           3 LENGTH_CODE UBIN(4) UNAL INIT(0),
      152      152    1           3 ORDERING CHAR(1) UNAL INIT('A'),
      153      153    1           3 TRANS_CODE CHAR(2) UNAL INIT('  ');
      154      154
      155      155    1   DCL RBUF CHAR(256) SYMREF; /* Used to pass set cmd to SYSCTL */
      156      156    1   DCL INITIAL_SORT_CALL BIT(1) STATIC SYMDEF UNAL;
      157      157
      158      158         %INCLUDE CP_6_SUBS;
      159      698         %INCLUDE CP_6;
      160      779         %F$DCB;
      161      836         %INCLUDE ZI$DIR;
      162      993         %DIR;
      163     1137         %INCLUDE ZI_DBU_XREF;
      164     1304         %XREF_TBLS;
      165     1379         %INCLUDE ZI_GLOBAL_DBUTIL;
      166     1557         %SYS_FUNC;
      167     1649         %MISC_DCLS;
      168     1702         %INCLUDE ZI_DBU_VALDTE;
      169     1970         %VALID_LIST(STCLASS="STATIC SYMDEF");
      170     2110         %INCLUDE ZL_MACRO_C;
      171     2760         %SORT_TABLE(FPTN=SORT_PTFILE,
      172     2761         INSIZ=16,
      173     2762         OUTSIZ=16,
      174     2763         PARTSIZ=6,
      175     2764         ICE=ZIU$GENRCD,
      176     2765         OCE=ZIU$VALDTE,
      177     2766         KEYS=SORT_PT,
      178     2767         STAT=YES,
      179     2768         DMP='D');
      180     2877
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:23   
      181     2878         %SORT_TABLE(FPTN=SORT_ERRFILE,
      182     2879         INSIZ=30,
      183     2880         OUTSIZ=30,
      184     2881         PARTSIZ=9,
      185     2882         KEYS=SORT_ERRS,
      186     2883         STAT=YES,
      187     2884         DMP='D');
      188     2993
      189     2994    1   DCL X$SORT ENTRY(1) ALTRET;
      190     2995    1   DCL ZIU$VALDTE ENTRY(2) ALTRET;
      191     2996    1   DCL ZIU$SRTDCB ENTRY; /* Set up a sort colliation dcb */
      192     2997    1   DCL ZIU$CHKVAL ENTRY ALTRET;
      193     2998    1   DCL ZIU$GENRCD ENTRY(2) ALTRET;
      194     2999    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
      195     3000    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      196     3001    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
      197     3002    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
      198     3003    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      199     3004    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      200     3005    1   DCL ZIU$RPTVAL ENTRY ALTRET;
      201     3006    1   DCL BUILD_MSTR_TBL ENTRY ALTRET;
      202     3007    1   DCL BUILD_SETXREF ENTRY ALTRET;
      203     3008    1   DCL BUILD_RECXREF ENTRY ALTRET;
      204     3009    1   DCL ZIU$SYSCTL ENTRY ALTRET;
      205     3010    1   DCL SET_BUFS ENTRY(2) ALTRET;
      206     3011
      207     3012    1       REMEMBER VALID_BREAK IN BREAK_LOCAT;

   3012  4 000002   000376 635000 4                  EAA     VALID_BREAK
         4 000003   000020 452400 0                  STP2    BREAK_LOCAT
         4 000004   000021 755000 0                  STA     BREAK_LOCAT+1

      208     3013    1       CALL SET_BUFS(,32); /* Get rid of all but 32 buffers */

   3013  4 000005   000003 236000 5                  LDQ     3
         4 000006   000001 235000 5                  LDA     1
         4 000007   200010 757100                    STAQ    DCB$+1,,AUTO
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:24   
         4 000010   200010 630500                    EPPR0   DCB$+1,,AUTO
         4 000011   000000 631400 5                  EPPR1   0
         4 000012   000000 701000 xent               TSX1    SET_BUFS
         4 000013   000000 011000                    NOP     0

      209     3014
      210     3015    1       IF XREF_BUILT = %NO# THEN

   3015  4 000014   000000 234000 xsym               SZN     XREF_BUILT
         4 000015   000027 604000 4                  TMI     s:3022

      211     3016    2       DO;

      212     3017    2           CALL BUILD_MSTR_TBL ALTRET(ALT_VALID);

   3017  4 000016   000004 631400 5                  EPPR1   4
         4 000017   000000 701000 xent               TSX1    BUILD_MSTR_TBL
         4 000020   000442 702000 4                  TSX2    ALT_VALID

      213     3018    2           CALL BUILD_SETXREF ALTRET(ALT_VALID);

   3018  4 000021   000004 631400 5                  EPPR1   4
         4 000022   000000 701000 xent               TSX1    BUILD_SETXREF
         4 000023   000442 702000 4                  TSX2    ALT_VALID

      214     3019    2           CALL BUILD_RECXREF ALTRET(ALT_VALID);

   3019  4 000024   000004 631400 5                  EPPR1   4
         4 000025   000000 701000 xent               TSX1    BUILD_RECXREF
         4 000026   000442 702000 4                  TSX2    ALT_VALID

      215     3020    2           END;

      216     3021
      217     3022    1       IF ZI$DIR.REPRT_ERRS = %YES# THEN

   3022  4 000027   000125 236000 xsym               LDQ     ZI$DIR+85
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:25   
         4 000030   000040 316007                    CANQ    32,DL
         4 000031   000076 601000 4                  TNZ     RESULTS

      218     3023    1           GOTO RESULTS; /* Report error file only */
      219     3024
      220     3025    1       CALL ZIU$CHKVAL ALTRET(ALT_VALID);

   3025  4 000032   000004 631400 5                  EPPR1   4
         4 000033   000000 701000 xent               TSX1    ZIU$CHKVAL
         4 000034   000442 702000 4                  TSX2    ALT_VALID

      221     3026
      222     3027    1       CALL INIT_EG_FILE;

   3027  4 000035   000102 701000 4                  TSX1    INIT_EG_FILE
         4 000036   000000 011000                    NOP     0

      223     3028    1       CALL INIT_PT_FILE;

   3028  4 000037   000145 701000 4                  TSX1    INIT_PT_FILE
         4 000040   000000 011000                    NOP     0

      224     3029    1       CALL ZIU$SRTDCB;

   3029  4 000041   000004 631400 5                  EPPR1   4
         4 000042   000000 701000 xent               TSX1    ZIU$SRTDCB
         4 000043   000000 011000                    NOP     0

      225     3030    1       CALL OPEN_ERRFILE ALTRET(ALT_VALID);

   3030  4 000044   000202 701000 4                  TSX1    OPEN_ERRFILE
         4 000045   000442 702000 4                  TSX2    ALT_VALID

      226     3031    1       INITIAL_SORT_CALL = %YES#;

   3031  4 000046   400000 236003                    LDQ     -131072,DU
         4 000047   000017 756000 0                  STQ     INITIAL_SORT_CALL
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:26   

      227     3032
      228     3033    1       IF SETINDX > 0 THEN /* Bad sets found or selected by user */

   3033  4 000050   000724 235000 0                  LDA     SETINDX
         4 000051   000056 604400 4                  TMOZ    s:3036

      229     3034    1           CALL X$SORT(SORT_PTFILE) ALTRET(ALT_VALID);

   3034  4 000052   000006 630400 5                  EPPR0   6
         4 000053   000005 631400 5                  EPPR1   5
         4 000054   000000 701000 xent               TSX1    X$SORT
         4 000055   000442 702000 4                  TSX2    ALT_VALID

      230     3035
      231     3036    1       CALL CLOSE_ERRFILE;

   3036  4 000056   000236 701000 4                  TSX1    CLOSE_ERRFILE
         4 000057   000000 011000                    NOP     0

      232     3037
      233     3038         /*     Set up sort dcbs and sort errfile - if any problems then
      234     3039            just go directly to printing the validation report. */
      235     3040    1       IF NO_ERRORS > 0 THEN /* Are there errors to be sorted */

   3040  4 000060   000750 235000 0                  LDA     NO_ERRORS
         4 000061   000076 604400 4                  TMOZ    RESULTS

      236     3041    2       DO;

      237     3042    2           CALL SET_SORT('F$SORTIN  ') ALTRET(RESULTS);

   3042  4 000062   000007 236000 5                  LDQ     7
         4 000063   200005 756100                    STQ     5,,AUTO
         4 000064   000251 701000 4                  TSX1    SET_SORT
         4 000065   000076 702000 4                  TSX2    RESULTS

PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:27   
      238     3043    2           CALL SET_SORT('F$SORTOUT ') ALTRET(RESULTS);

   3043  4 000066   000010 236000 5                  LDQ     8
         4 000067   200005 756100                    STQ     5,,AUTO
         4 000070   000251 701000 4                  TSX1    SET_SORT
         4 000071   000076 702000 4                  TSX2    RESULTS

      239     3044    2           CALL X$SORT(SORT_ERRFILE) ALTRET(RESULTS);

   3044  4 000072   000011 630400 5                  EPPR0   9
         4 000073   000005 631400 5                  EPPR1   5
         4 000074   000000 701000 xent               TSX1    X$SORT
         4 000075   000076 702000 4                  TSX2    RESULTS

      240     3045    2           END;

      241     3046    1   RESULTS:
      242     3047    1       CALL ZIU$RPTVAL ALTRET(ALT_VALID); /* PRINT REPORT */

   3047  4 000076   000004 631400 5     RESULTS      EPPR1   4
         4 000077   000000 701000 xent               TSX1    ZIU$RPTVAL
         4 000100   000442 702000 4                  TSX2    ALT_VALID

      243     3048    1       RETURN;

   3048  4 000101   000000 702200 xent               TSX2  ! X66_ARET

      244     3049        %EJECT;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:28   
      245     3050        /*
      246     3051           This procedure initializes the EG dcb and opens the file, as
      247     3052           well as initializes the EG parameters.
      248     3053        */
      249     3054    1   INIT_EG_FILE: PROC ALTRET;

   3054  4 000102   200004 741300       INIT_EG_FILE STX1  ! 4,,AUTO

      250     3055
      251     3056    2   /**/ DCBNMSF = VECTOR(EGFILE);

   3056  4 000103   000012 237000 5                  LDAQ    10
         4 000104   000000 755000 xsym               STA     DCBNMSF
         4 000105   000001 756000 xsym               STQ     DCBNMSF+1

      252     3057    2       CALL SYS_FUNC_GETDCB ALTRET(ALTRTN);

   3057  4 000106   000004 631400 5                  EPPR1   4
         4 000107   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         4 000110   000143 702000 4                  TSX2    ALTRTN

      253     3058    2       EGFILE.DCB# = DCBSF;

   3058  4 000111   000000 236000 xsym               LDQ     DCBSF
         4 000112   000011 772000                    QRL     9
         4 000113   000745 552030 0                  STBQ    EGFILE+1,'30'O

      254     3059
      255     3060    2   /**/ ORGSF = %CONSEC#;

   3060  4 000114   000001 235007                    LDA     1,DL
         4 000115   000000 755000 xsym               STA     ORGSF

      256     3061    2       ACSSF = %SEQUEN#;

   3061  4 000116   000000 755000 xsym               STA     ACSSF

PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:29   
      257     3062    2       FUNSF = %CREATE#;

   3062  4 000117   000003 236007                    LDQ     3,DL
         4 000120   000000 756000 xsym               STQ     FUNSF

      258     3063    2       ASNSF = %FILE#;

   3063  4 000121   000000 755000 xsym               STA     ASNSF

      259     3064    2       SHARESF = %NONE#;

   3064  4 000122   600000 236003                    LDQ     -65536,DU
         4 000123   000000 756000 xsym               STQ     SHARESF

      260     3065    2       FIDSF = '*EGFILE';

   3065  4 000124   040000 100400                    MLR     fill='040'O
         4 000125   000006 000007 3                  ADSC9   6                        cn=0,n=7
         4 000126   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      261     3066    2       EXISTSF = %NEWFILE#;

   3066  4 000127   000000 756000 xsym               STQ     EXISTSF

      262     3067    2       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);

   3067  4 000130   000004 631400 5                  EPPR1   4
         4 000131   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000132   000143 702000 4                  TSX2    ALTRTN

      263     3068
      264     3069    2       EGREC$ = ADDR(I_O_BUF(16));

   3069  4 000133   000000 236000 xsym               LDQ     I_O_BUF$
         4 000134   040000 036003                    ADLQ    16384,DU
         4 000135   000727 756000 0                  STQ     EGREC$

PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:30   
      265     3070    2       NO_EGRECS = 0;

   3070  4 000136   000731 450000 0                  STZ     NO_EGRECS

      266     3071    2       NO_EGBUFS = 0;

   3071  4 000137   000732 450000 0                  STZ     NO_EGBUFS

      267     3072    2       EGINDX = 0;

   3072  4 000140   000730 450000 0                  STZ     EGINDX

      268     3073
      269     3074    2       RETURN;

   3074  4 000141   200004 221300                    LDX1  ! 4,,AUTO
         4 000142   000001 702211                    TSX2  ! 1,X1

      270     3075
      271     3076    2   ALTRTN:
      272     3077    2       ALTRETURN;

   3077  4 000143   200004 221300       ALTRTN       LDX1  ! 4,,AUTO
         4 000144   000000 702211                    TSX2  ! 0,X1

      273     3078    2   END INIT_EG_FILE;
      274     3079        %EJECT;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:31   
      275     3080        /*
      276     3081           This procedure initializes the EG dcb and opens the file, as
      277     3082           well as initializes the EG parameters.
      278     3083        */
      279     3084    1   INIT_PT_FILE: PROC ALTRET;

   3084  4 000145   200004 741300       INIT_PT_FILE STX1  ! 4,,AUTO

      280     3085
      281     3086    2   DCL 1 PTFILE STATIC SYMDEF ALIGNED,
      282     3087    2         2 N,
      283     3088    2           3 C UBIN BYTE UNAL INIT(4),
      284     3089    2           3 L CHAR(4) UNAL INIT('M$PT'),
      285     3090    2         2 DCB# UBIN HALF UNAL;
      286     3091
      287     3092    2   /**/ DCBNMSF = VECTOR(PTFILE);

   3092  4 000146   000014 237000 5                  LDAQ    12
         4 000147   000000 755000 xsym               STA     DCBNMSF
         4 000150   000001 756000 xsym               STQ     DCBNMSF+1

      288     3093    2       CALL SYS_FUNC_GETDCB ALTRET(ALTRTN);

   3093  4 000151   000004 631400 5                  EPPR1   4
         4 000152   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         4 000153   000200 702000 4                  TSX2    ALTRTN

      289     3094    2       PTFILE.DCB# = DCBSF;

   3094  4 000154   000000 236000 xsym               LDQ     DCBSF
         4 000155   000011 772000                    QRL     9
         4 000156   001073 552030 0                  STBQ    PTFILE+1,'30'O

      290     3095
      291     3096    2   /**/ ORGSF = %CONSEC#;

   3096  4 000157   000001 235007                    LDA     1,DL
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:32   
         4 000160   000000 755000 xsym               STA     ORGSF

      292     3097    2       ACSSF = %SEQUEN#;

   3097  4 000161   000000 755000 xsym               STA     ACSSF

      293     3098    2       FUNSF = %CREATE#;

   3098  4 000162   000003 236007                    LDQ     3,DL
         4 000163   000000 756000 xsym               STQ     FUNSF

      294     3099    2       ASNSF = %FILE#;

   3099  4 000164   000000 755000 xsym               STA     ASNSF

      295     3100    2       SHARESF = %NONE#;

   3100  4 000165   600000 236003                    LDQ     -65536,DU
         4 000166   000000 756000 xsym               STQ     SHARESF

      296     3101    2       FIDSF = '*PTFILE';

   3101  4 000167   040000 100400                    MLR     fill='040'O
         4 000170   000010 000007 3                  ADSC9   8                        cn=0,n=7
         4 000171   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      297     3102    2       EXISTSF = %NEWFILE#;

   3102  4 000172   000000 756000 xsym               STQ     EXISTSF

      298     3103    2       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);

   3103  4 000173   000004 631400 5                  EPPR1   4
         4 000174   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000175   000200 702000 4                  TSX2    ALTRTN

      299     3104
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:33   
      300     3105
      301     3106    2       RETURN;

   3106  4 000176   200004 221300                    LDX1  ! 4,,AUTO
         4 000177   000001 702211                    TSX2  ! 1,X1

      302     3107
      303     3108    2   ALTRTN:
      304     3109    2       ALTRETURN;

   3109  4 000200   200004 221300       ALTRTN       LDX1  ! 4,,AUTO
         4 000201   000000 702211                    TSX2  ! 0,X1

      305     3110    2   END INIT_PT_FILE;
      306     3111        %EJECT;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:34   
      307     3112    1   OPEN_ERRFILE: PROC ALTRET;

   3112  4 000202   200004 741300       OPEN_ERRFILE STX1  ! 4,,AUTO

      308     3113
      309     3114    2   /**/ DCBNMSF = VECTOR(ERRFILE.N);

   3114  4 000203   000016 237000 5                  LDAQ    14
         4 000204   000000 755000 xsym               STA     DCBNMSF
         4 000205   000001 756000 xsym               STQ     DCBNMSF+1

      310     3115    2       CALL SYS_FUNC_GETDCB ALTRET(ALTERR);

   3115  4 000206   000004 631400 5                  EPPR1   4
         4 000207   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         4 000210   000234 702000 4                  TSX2    ALTERR

      311     3116    2       ERRFILE.DCB# = DCBSF;

   3116  4 000211   000000 236000 xsym               LDQ     DCBSF
         4 000212   000011 772000                    QRL     9
         4 000213   000747 552030 0                  STBQ    ERRFILE+1,'30'O

      312     3117
      313     3118    2   /**/ ORGSF = %CONSEC#;

   3118  4 000214   000001 235007                    LDA     1,DL
         4 000215   000000 755000 xsym               STA     ORGSF

      314     3119    2       ACSSF = %SEQUEN#;

   3119  4 000216   000000 755000 xsym               STA     ACSSF

      315     3120    2       FUNSF = %CREATE#;

   3120  4 000217   000003 236007                    LDQ     3,DL
         4 000220   000000 756000 xsym               STQ     FUNSF
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:35   

      316     3121    2       ASNSF = %FILE#;

   3121  4 000221   000000 755000 xsym               STA     ASNSF

      317     3122    2       EXISTSF = %NEWFILE#;

   3122  4 000222   600000 236003                    LDQ     -65536,DU
         4 000223   000000 756000 xsym               STQ     EXISTSF

      318     3123    2       FIDSF = '*ERRFILE';

   3123  4 000224   040000 100400                    MLR     fill='040'O
         4 000225   000012 000010 3                  ADSC9   10                       cn=0,n=8
         4 000226   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      319     3124    2       CALL SYS_FUNC_OPEN ALTRET(ALTERR);

   3124  4 000227   000004 631400 5                  EPPR1   4
         4 000230   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000231   000234 702000 4                  TSX2    ALTERR

      320     3125    2       RETURN;

   3125  4 000232   200004 221300                    LDX1  ! 4,,AUTO
         4 000233   000001 702211                    TSX2  ! 1,X1

      321     3126    2   ALTERR:
      322     3127    2       ALTRETURN;

   3127  4 000234   200004 221300       ALTERR       LDX1  ! 4,,AUTO
         4 000235   000000 702211                    TSX2  ! 0,X1

      323     3128    2   END OPEN_ERRFILE;
      324     3129
      325     3130    1   CLOSE_ERRFILE: PROC;

PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:36   
   3130  4 000236   200004 741300       CLOSE_ERRFI* STX1  ! 4,,AUTO

      326     3131    2   /**/ DCBSF = ERRFILE.DCB#;

   3131  4 000237   000747 236000 0                  LDQ     ERRFILE+1
         4 000240   000011 772000                    QRL     9
         4 000241   777777 376007                    ANQ     -1,DL
         4 000242   000000 620006                    EAX0    0,QL
         4 000243   000000 740000 xsym               STX0    DCBSF

      327     3132    2       CALL SYS_FUNC_CLOS;

   3132  4 000244   000004 631400 5                  EPPR1   4
         4 000245   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000246   000000 011000                    NOP     0

      328     3133    2       RETURN;

   3133  4 000247   200004 221300                    LDX1  ! 4,,AUTO
         4 000250   000001 702211                    TSX2  ! 1,X1

      329     3134    2   END CLOSE_ERRFILE;
      330     3135        %EJECT;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:37   
      331     3136        /*
      332     3137              Set F$SORTIN AND F$SORTOUT for sorting the errfile.
      333     3138        */
      334     3139    1   SET_SORT: PROC(DCBNM) ALTRET;

   3139  4 000251   200004 741300       SET_SORT     STX1  ! 4,,AUTO

      335     3140
      336     3141    2   DCL DCBNM CHAR(10);
      337     3142    2   DCL K SBIN;
      338     3143    2   DCL DCB$ PTR;
      339     3144
      340     3145    2       DCB$ = DCBADDR(ERRFILE.DCB#);

   3145  4 000252   000020 470400 5                  LDP0    16
         4 000253   000000 471500                    LDP1    0,,PR0
         4 000254   000747 236000 0                  LDQ     ERRFILE+1
         4 000255   000011 772000                    QRL     9
         4 000256   777777 376007                    ANQ     -1,DL
         4 000257   100000 236106                    LDQ     0,QL,PR1
         4 000260   200007 756100                    STQ     DCB$,,AUTO

      341     3146    2       CALL CONCAT(RBUF,'SET ',DCBNM);

   3146  4 000261   000014 236000 3                  LDQ     12
         4 000262   000000 756000 xsym               STQ     RBUF
         4 000263   200005 473500                    LDP3    @DCBNM,,AUTO
         4 000264   040000 100500                    MLR     fill='040'O
         4 000265   300000 000012                    ADSC9   0,,PR3                   cn=0,n=10
         4 000266   000001 000374 xsym               ADSC9   RBUF+1                   cn=0,n=252

      342     3147    2       J = 14;

   3147  4 000267   000016 235007                    LDA     14,DL
         4 000270   000000 755000 xsym               STA     J

      343     3148    2       IF DCB$->F$DCB.PSN# ~= ' '
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:38   

   3148  4 000271   200007 470500                    LDP0    DCB$,,AUTO
         4 000272   040000 106500                    CMPC    fill='040'O
         4 000273   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         4 000274   000021 000001 5                  ADSC9   17                       cn=0,n=1
         4 000275   000340 600000 4                  TZE     s:3154

      344     3149    3       THEN DO;

      345     3150    3           CALL INDEX(K,' ',DCB$->F$DCB.PSN#);

   3150  4 000276   000000 124500                    SCM     mask='000'O
         4 000277   000024 000006                    ADSC9   20,,PR0                  cn=0,n=6
         4 000300   000021 000001 5                  ADSC9   17                       cn=0,n=1
         4 000301   200006 000100                    ARG     K,,AUTO

      346     3151    3           CALL INSERT(RBUF,J,,'DP#',SUBSTR(DCB$->F$DCB.PSN#,0,K),'/');

   3151  4 000302   777377 620005                    EAX0    -257,AL
         4 000303   777777 660003                    ERX0    -1,DU
         4 000304   040045 100400                    MLR     fill='040'O
         4 000305   000015 000003 3                  ADSC9   13                       cn=0,n=3
         4 000306   000000 000010 xsym               ADSC9   RBUF,A                   cn=0,n=*X0
         4 000307   000000 236000 xsym               LDQ     J
         4 000310   000375 116007                    CMPQ    253,DL
         4 000311   000334 605000 4                  TPL     s:3152
         4 000312   777402 621006                    EAX1    -254,QL
         4 000313   777777 661003                    ERX1    -1,DU
         4 000314   200006 722100                    LXL2    K,,AUTO
         4 000315   040046 100540                    MLR     fill='040'O
         4 000316   000024 000012                    ADSC9   20,,PR0                  cn=0,n=*X2
         4 000317   000000 600011 xsym               ADSC9   RBUF,Q                   cn=3,n=*X1
         4 000320   200006 036100                    ADLQ    K,,AUTO
         4 000321   000375 116007                    CMPQ    253,DL
         4 000322   000334 605000 4                  TPL     s:3152
         4 000323   200010 756100                    STQ     DCB$+1,,AUTO
         4 000324   000000 236000 xsym               LDQ     J
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:39   
         4 000325   200006 036100                    ADLQ    K,,AUTO
         4 000326   200010 723100                    LXL3    DCB$+1,,AUTO
         4 000327   777402 623013                    EAX3    -254,X3
         4 000330   777777 663003                    ERX3    -1,DU
         4 000331   040046 100400                    MLR     fill='040'O
         4 000332   000022 000001 5                  ADSC9   18                       cn=0,n=1
         4 000333   000000 600013 xsym               ADSC9   RBUF,Q                   cn=3,n=*X3

      347     3152    3           J = J + K + 4;

   3152  4 000334   000000 236000 xsym               LDQ     J
         4 000335   200006 036100                    ADLQ    K,,AUTO
         4 000336   000004 036007                    ADLQ    4,DL
         4 000337   000000 756000 xsym               STQ     J

      348     3153    3           END;

      349     3154    2       CALL INSERT(RBUF,J,,DCB$->F$DCB.NAME#.C);

   3154  4 000340   000000 720000 xsym               LXL0    J
         4 000341   777377 620010                    EAX0    -257,X0
         4 000342   777777 660003                    ERX0    -1,DU
         4 000343   000000 236000 xsym               LDQ     J
         4 000344   040046 100500                    MLR     fill='040'O
         4 000345   000010 200037                    ADSC9   8,,PR0                   cn=1,n=31
         4 000346   000000 000010 xsym               ADSC9   RBUF,Q                   cn=0,n=*X0

      350     3155    2       J = J + DCB$->F$DCB.NAME#.L;

   3155  4 000347   000010 236100                    LDQ     8,,PR0
         4 000350   000033 772000                    QRL     27
         4 000351   000000 036000 xsym               ADLQ    J
         4 000352   000000 756000 xsym               STQ     J

      351     3156    2       CALL INSERT(RBUF,J,,'.',DCB$->F$DCB.ACCT#);

   3156  4 000353   777377 620006                    EAX0    -257,QL
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:40   
         4 000354   777777 660003                    ERX0    -1,DU
         4 000355   040046 100400                    MLR     fill='040'O
         4 000356   000023 000001 5                  ADSC9   19                       cn=0,n=1
         4 000357   000000 000010 xsym               ADSC9   RBUF,Q                   cn=0,n=*X0
         4 000360   000377 116007                    CMPQ    255,DL
         4 000361   000367 605000 4                  TPL     s:3157
         4 000362   777400 621006                    EAX1    -256,QL
         4 000363   777777 661003                    ERX1    -1,DU
         4 000364   040046 100500                    MLR     fill='040'O
         4 000365   000020 000010                    ADSC9   16,,PR0                  cn=0,n=8
         4 000366   000000 200011 xsym               ADSC9   RBUF,Q                   cn=1,n=*X1

      352     3157    2       CALL ZIU$SYSCTL ALTRET(ALTSET);

   3157  4 000367   000004 631400 5                  EPPR1   4
         4 000370   000000 701000 xent               TSX1    ZIU$SYSCTL
         4 000371   000374 702000 4                  TSX2    ALTSET

      353     3158    2       RETURN;

   3158  4 000372   200004 221300                    LDX1  ! 4,,AUTO
         4 000373   000001 702211                    TSX2  ! 1,X1

      354     3159    2   ALTSET:
      355     3160    2       ALTRETURN;

   3160  4 000374   200004 221300       ALTSET       LDX1  ! 4,,AUTO
         4 000375   000000 702211                    TSX2  ! 0,X1

      356     3161    2   END SET_SORT;
      357     3162        %EJECT;
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:41   
      358     3163        /*
      359     3164                      BREAK CONTROL LOCATION TO CLOSE FILES
      360     3165        */
      361     3166    1   VALID_BREAK:
      362     3167    1       DCBSF = ZI$DIR.AREA_NM.DCB#;

   3167  4 000376   000244 220000 xsym  VALID_BREAK  LDX0    ZI$DIR+164
         4 000377   000000 740000 xsym               STX0    DCBSF

      363     3168    1       IF DCBADDR(DCBSF) -> F$DCB.FCD# = %YES# THEN

   3168  4 000400   000020 470400 5                  LDP0    16
         4 000401   000000 471500                    LDP1    0,,PR0
         4 000402   100000 473510                    LDP3    0,X0,PR1
         4 000403   300031 236100                    LDQ     25,,PR3
         4 000404   020000 316007                    CANQ    8192,DL
         4 000405   000414 600000 4                  TZE     s:3174

      364     3169    2       DO;

      365     3170    2           CALL SYS_FUNC_CLOS;

   3170  4 000406   000004 631400 5                  EPPR1   4
         4 000407   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000410   000000 011000                    NOP     0

      366     3171    2           CALL SYS_FUNC_RELDCB;

   3171  4 000411   000004 631400 5                  EPPR1   4
         4 000412   000000 701000 xent               TSX1    SYS_FUNC_RELDCB
         4 000413   000000 011000                    NOP     0

      367     3172    2           END;

      368     3173
      369     3174    1       DCBSF = ERRFILE.DCB#;

PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:42   
   3174  4 000414   000747 236000 0                  LDQ     ERRFILE+1
         4 000415   000011 772000                    QRL     9
         4 000416   777777 376007                    ANQ     -1,DL
         4 000417   000000 620006                    EAX0    0,QL
         4 000420   000000 740000 xsym               STX0    DCBSF

      370     3175    1       IF DCBSF < 100 THEN /* INIT'ED AT 1000 */

   3175  4 000421   000144 100003                    CMPX0   100,DU
         4 000422   000437 603000 4                  TRC     s:3182

      371     3176    1           IF DCBADDR(DCBSF) -> F$DCB.FCD# = %YES# THEN

   3176  4 000423   000020 470400 5                  LDP0    16
         4 000424   000000 471500                    LDP1    0,,PR0
         4 000425   100000 473510                    LDP3    0,X0,PR1
         4 000426   300031 236100                    LDQ     25,,PR3
         4 000427   020000 316007                    CANQ    8192,DL
         4 000430   000437 600000 4                  TZE     s:3182

      372     3177    2           DO;

      373     3178    2               CALL SYS_FUNC_CLOS;

   3178  4 000431   000004 631400 5                  EPPR1   4
         4 000432   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000433   000000 011000                    NOP     0

      374     3179    2               CALL SYS_FUNC_RELDCB;

   3179  4 000434   000004 631400 5                  EPPR1   4
         4 000435   000000 701000 xent               TSX1    SYS_FUNC_RELDCB
         4 000436   000000 011000                    NOP     0

      375     3180    2               END;

      376     3181
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:43   
      377     3182    1       IF BREAK_FLAG>0 THEN /* IF ABORT BECAUSE BREAK HIT */

   3182  4 000437   000000 235000 xsym               LDA     BREAK_FLAG
         4 000440   000442 604400 4                  TMOZ    ALT_VALID

      378     3183    1           RETURN; /* RETURN NORMALLY */

   3183  4 000441   000000 702200 xent               TSX2  ! X66_ARET

      379     3184
      380     3185    1   ALT_VALID:
      381     3186    1       ALTRETURN;

   3186  4 000442   000000 702200 xent  ALT_VALID    TSX2  ! X66_AALT

SORT_PT
 Sect OctLoc
   0     005   000000 000001   060061 101116   000000 000001   000000 000006    ....01AN........
   0     011   000101 040040                                                    .A

SORT_ERRS
 Sect OctLoc
   0     012   000000 000001   060061 101116   000000 000001   000000 000006    ....01AN........
   0     016   000101 040040                                                    .A

RECLIST
 Sect OctLoc
   0     022   ****** ******   ****** ******   ****** ******   ****** ******    ................

SETLIST
 Sect OctLoc
   0     332   ****** ******   ****** ******   ****** ******   ****** ******    ................

EGFILE
 Sect OctLoc
   0     744   004115 044105   107001 750***                                    .M$EG...

PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:44   
ERRFILE
 Sect OctLoc
   0     746   004115 044105   122001 750***                                    .M$ER...

NO_ERRORS
 Sect OctLoc
   0     750   000000 000000                                                    ....

ERROR_BUF
 Sect OctLoc
   0     751   ****** ******   ****** ******   ****** ******   ****** ******    ................

ERRBUF$
 Sect OctLoc
   0     761   000751 006000                                                    ....

SORT_PTFILE
 Sect OctLoc
   0     762   000000 000020   000000 000000   000000 000020   040000 104040    ............ .D
   0     766   000005 006000   000000 006014   000000 006014   000000 006014    ................
   0     772   000000 006014   000000 006014   000000 000000   000001 000000    ................
   0     776   000000 000006   000000 000000   000000 000000   000000 000000    ................
   0    1002   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0    1022*  000000 000000   000000 000000   000000 000000   000000 000000    ................

SORT_ERRFILE
 Sect OctLoc
   0    1026   000000 000036   000000 000000   000000 000036   040000 104040    ............ .D
   0    1032   000012 006000   000000 006014   000000 006014   000000 006014    ................
   0    1036   000000 006014   000000 006014   000000 000000   000001 000000    ................
   0    1042   000000 000011   000000 000000   000000 000000   000000 000000    ................
   0    1046   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0    1066*  000000 000000   000000 000000   000000 000000   000000 000000    ................

PTFILE
 Sect OctLoc
   0    1072   004115 044120   124*** ******                                    .M$PT...
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:45   

(unnamed)
 Sect OctLoc
   3     000   106044 123117   122124 111116   040040 040040   106044 123117    F$SORTIN    F$SO
   3     004   122124 117125   124040 040040   052105 107106   111114 105040    RTOUT   *EGFILE
   3     010   052120 124106   111114 105040   052105 122122   106111 114105    *PTFILE *ERRFILE
   3     014   123105 124040   104120 043040                                    SET DP#

(unnamed)
 Sect OctLoc
   5     000   000002 000000   000000 006014   000000 000040   000002 006000    ........... ....
   5     004   000000 000000   000001 000000   000762 006000   000000 006000    ................
   5     010   000003 006000   001026 006000   000001 777640   000744 006000    ................
   5     014   000001 777640   001072 006000   000001 177640   000746 006000    .....:..........
   5     020   000000 006003   040040 040040   057040 040040   056040 040040    ....    /   .
      382     3187    1   END ZIU$VALSET;
      383     3188        %EOD;

PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:46   
--  Include file information  --

   ZL_MACRO_C.:TOOLE05  is referenced.
   ZI_DBU_VALDTE.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$VALSET.

   Procedure ZIU$VALSET requires 291 words for executable code.
   Procedure ZIU$VALSET requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:47   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:48   
          MINI XREF LISTING

ACSSF
      1576**DCL      3061<<ASSIGN   3097<<ASSIGN   3119<<ASSIGN
ALTERR IN PROCEDURE OPEN_ERRFILE
      3127**LABEL    3115--CALLALT  3124--CALLALT
ALTRTN IN PROCEDURE INIT_EG_FILE
      3077**LABEL    3057--CALLALT  3067--CALLALT
ALTRTN IN PROCEDURE INIT_PT_FILE
      3109**LABEL    3093--CALLALT  3103--CALLALT
ALTSET IN PROCEDURE SET_SORT
      3160**LABEL    3157--CALLALT
ALT_VALID
      3186**LABEL    3017--CALLALT  3018--CALLALT  3019--CALLALT  3025--CALLALT  3030--CALLALT  3034--CALLALT
      3047--CALLALT
AREA_KEY$
      1342**DCL      1345--IMP-PTR
ASNSF
      1579**DCL      3063<<ASSIGN   3099<<ASSIGN   3121<<ASSIGN
BREAK_FLAG
      1696**DCL      3182>>IF
BREAK_LOCAT
      1977**DCL      3012<<REMEMBR
BUILD_MSTR_TBL
      3006**DCL-ENT  3017--CALL
BUILD_RECXREF
      3008**DCL-ENT  3019--CALL
BUILD_SETXREF
      3007**DCL-ENT  3018--CALL
CLOSE_ERRFILE
      3130**PROC     3036--CALL
COUNTSF
      1638**DCL      1639--REDEF
CURRPT.OWNER
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:49   
      2008**DCL      2009--REDEF
DCB$ IN PROCEDURE SET_SORT
      3143**DCL      3145<<ASSIGN   3148>>IF       3150>>CALLBLT  3151>>CALLBLT  3154>>CALLBLT  3155>>ASSIGN
      3156>>CALLBLT
DCBNM IN PROCEDURE SET_SORT
      3141**DCL      3139--PROC     3146>>CALLBLT
DCBNMSF
      1619**DCL      3056<<ASSIGN   3092<<ASSIGN   3114<<ASSIGN
DCBSF
      1567**DCL      3058>>ASSIGN   3094>>ASSIGN   3116>>ASSIGN   3131<<ASSIGN   3167<<ASSIGN   3168--IF
      3174<<ASSIGN   3175>>IF       3176--IF
EGFILE
      2012**DCL      3056--ASSIGN
EGFILE.DCB#
      2016**DCL      3058<<ASSIGN
EGINDX
      1987**DCL      3072<<ASSIGN
EGREC$
      1986**DCL      1991--IMP-PTR  3069<<ASSIGN
ENCRP_SEEDSF
      1596**DCL      1597--REDEF
ERRBUF$
      2024**DCL      2025--IMP-PTR  2030--IMP-PTR  2037--IMP-PTR  2045--IMP-PTR  2051--IMP-PTR  2057--IMP-PTR
      2065--IMP-PTR  2076--IMP-PTR
ERRCODESF
      1598**DCL      1603--REDEF
ERRFILE.DCB#
      2021**DCL      3116<<ASSIGN   3131>>ASSIGN   3145--ASSIGN   3174>>ASSIGN
ERRFILE.N
      2018**DCL      3114--ASSIGN
ERROR_BUF
      2023**DCL      2024--DCLINIT
EXISTSF
      1617**DCL      3066<<ASSIGN   3102<<ASSIGN   3122<<ASSIGN
F$DCB.ACCT#
       796**DCL      3156>>CALLBLT
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:50   
F$DCB.ACTPOS
       812**DCL       812--REDEF
F$DCB.ARS#
       786**DCL       786--REDEF
F$DCB.ATTR
       805**DCL       806--REDEF
F$DCB.BORROW
       820**DCL       820--REDEF     820--REDEF     820--REDEF
F$DCB.DCBNAME.L
       834**DCL       834--IMP-SIZ
F$DCB.EOMCHAR#
       790**DCL       790--REDEF
F$DCB.FCD#
       799**DCL      3168>>IF       3176>>IF
F$DCB.FLDID
       815**DCL       815--REDEF
F$DCB.FORM$
       809**DCL       809--REDEF
F$DCB.FSECT
       825**DCL       825--REDEF
F$DCB.FSN#
       802**DCL       802--REDEF     802--REDEF     803--REDEF
F$DCB.HEADER$
       808**DCL       808--REDEF
F$DCB.IXTNSIZE#
       806**DCL       806--REDEF
F$DCB.LASTSTA$
       795**DCL       795--REDEF
F$DCB.LVL
       821**DCL       821--REDEF
F$DCB.NAME#.C
       796**DCL       796--REDEF    3154>>CALLBLT
F$DCB.NAME#.L
       796**DCL      3155>>ASSIGN
F$DCB.NOEOF
       818**DCL       818--REDEF
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:51   
F$DCB.NRECS#
       807**DCL       807--REDEF
F$DCB.NRECX
       826**DCL       826--REDEF
F$DCB.OHDR
       818**DCL       818--REDEF
F$DCB.ORG#
       801**DCL       801--REDEF
F$DCB.PRECNO
       824**DCL       824--REDEF
F$DCB.PSN#
       796**DCL      3148>>IF       3150>>CALLBLT  3151>>CALLBLT
F$DCB.RCSZ
       830**DCL       830--REDEF
F$DCB.RES#
       797**DCL       797--REDEF
F$DCB.SETX
       809**DCL       809--REDEF
F$DCB.TAB$
       809**DCL       809--REDEF
F$DCB.TDA
       823**DCL       824--REDEF
F$DCB.WSN#
       797**DCL       797--REDEF
FIDSF
      1615**DCL      3065<<ASSIGN   3101<<ASSIGN   3123<<ASSIGN
FIDSF_RD
      1614**DCL      1615--REDEF
FUNSF
      1578**DCL      3062<<ASSIGN   3098<<ASSIGN   3120<<ASSIGN
HELPCODE
      1632**DCL      1637--REDEF
ICHKSUM
      1697**DCL      1698--REDEF
INITIAL_SORT_CALL
       156**DCL      3031<<ASSIGN
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:52   
INIT_EG_FILE
      3054**PROC     3027--CALL
INIT_PT_FILE
      3084**PROC     3028--CALL
I_O_BUF
      1676**DCL      3069--ASSIGN
I_O_BUF$
      1675**DCL      1676--IMP-PTR  3069>>ASSIGN
J
      1671**DCL      3147<<ASSIGN   3151>>CALLBLT  3152<<ASSIGN   3152>>ASSIGN   3154>>CALLBLT  3155<<ASSIGN
      3155>>ASSIGN   3156>>CALLBLT
K IN PROCEDURE SET_SORT
      3142**DCL      3150<<CALLBLT  3151>>CALLBLT  3152>>ASSIGN
KEYVSF
      1570**DCL      1575--REDEF
KEYVSF.WD_ONE
      1572**DCL      1573--REDEF
MSGCODE
      1604**DCL      1605--REDEF
MSTR$
      1311**DCL      1314--IMP-PTR
MSTR_REF.NXTHSH
      1317**DCL      1318--REDEF
MSTR_REF.PAENT
      1323**DCL      1324--REDEF
MSTR_REF.PAOFF
      1320**DCL      1321--REDEF
NO_EGBUFS
      1989**DCL      3071<<ASSIGN
NO_EGRECS
      1988**DCL      3070<<ASSIGN
NO_ERRORS
      2022**DCL      3040>>IF
OPEN_ERRFILE
      3112**PROC     3030--CALL
ORGSF
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:53   
      1568**DCL      3060<<ASSIGN   3096<<ASSIGN   3118<<ASSIGN
PTFILE IN PROCEDURE INIT_PT_FILE
      3086**DCL      3092--ASSIGN
PTFILE.DCB# IN PROCEDURE INIT_PT_FILE
      3090**DCL      3094<<ASSIGN
RBUF
       155**DCL      3146<<CALLBLT  3151<<CALLBLT  3154<<CALLBLT  3156<<CALLBLT
REC$
      1656**DCL      1679--IMP-PTR
REC_DATA_LN
      1684**DCL      1683--IMP-SIZ
REC_XREF$
      1366**DCL      1367--IMP-PTR
RESULTS
      3047**LABEL    3023--GOTO     3042--CALLALT  3043--CALLALT  3044--CALLALT
SETINDX
      1983**DCL      3033>>IF
SET_BUFS
      3010**DCL-ENT  3013--CALL
SET_SORT
      3139**PROC     3042--CALL     3043--CALL
SET_XREF$
      1355**DCL      1356--IMP-PTR
SHARESF
      1618**DCL      3064<<ASSIGN   3100<<ASSIGN
SORT_ERRFILE
      2895**DCL      3044<>CALL
SORT_ERRS
       143**DCL      2924--DCLINIT
SORT_PT
       131**DCL      2808--DCLINIT
SORT_PTFILE
      2779**DCL      3034<>CALL
SYS_FUNC_CLOS
      3000**DCL-ENT  3132--CALL     3170--CALL     3178--CALL
SYS_FUNC_GETDCB
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:54   
      3001**DCL-ENT  3057--CALL     3093--CALL     3115--CALL
SYS_FUNC_OPEN
      2999**DCL-ENT  3067--CALL     3103--CALL     3124--CALL
SYS_FUNC_RELDCB
      3002**DCL-ENT  3171--CALL     3179--CALL
VALID_BREAK
      3167**LABEL    3012--REMEMBR
X$SORT
      2994**DCL-ENT  3034--CALL     3044--CALL
XREF_BUILT
      1375**DCL      3015>>IF
ZI$DIR.ALTKEY
      1065**DCL      1066--REDEF    1067--REDEF
ZI$DIR.AREAFID
      1031**DCL      1032--REDEF
ZI$DIR.AREA_NM.DCB#
      1098**DCL      3167>>ASSIGN
ZI$DIR.DATE
      1070**DCL      1074--REDEF
ZI$DIR.DEST_SEED
      1026**DCL      1027--REDEF    1028--REDEF
ZI$DIR.ENCP_SEED
      1023**DCL      1024--REDEF    1025--REDEF
ZI$DIR.REPRT_ERRS
      1056**DCL      3022>>IF
ZI$DIR.REPRT_ZERO
      1057**DCL      1058--REDEF
ZI$DIR.SCHFID
      1029**DCL      1030--REDEF
ZI$DIR.TIME
      1075**DCL      1080--REDEF
ZIU$CHKVAL
      2997**DCL-ENT  3025--CALL
ZIU$GENRCD
      2998**DCL-ENT  2861--DCLINIT
ZIU$RPTVAL
PL6.E3A0      #001=ZIU$VALSET File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:55   
      3005**DCL-ENT  3047--CALL
ZIU$SRTDCB
      2996**DCL-ENT  3029--CALL
ZIU$SYSCTL
      3009**DCL-ENT  3157--CALL
ZIU$VALDTE
      2995**DCL-ENT  2863--DCLINIT

PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:56   
      384        1        /*T***********************************************************/
      385        2        /*T*                                                         */
      386        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      387        4        /*T*                                                         */
      388        5        /*T***********************************************************/
      389        6        /*P*
      390        7           NAME: ZIU$CHKVAL
      391        8        PURPOSE: This routine figures out which sets need to be validated and
      392        9                 builds link list tables to connect those records to only the
      393       10                 sets to be validated.
      394       11        */
      395       12        ZIU$CHKVAL: PROC ALTRET;
      396       13
      397       14
      398       15    1   DCL AREANO SBIN WORD STATIC SYMDEF ALIGNED;
      399       16    1   DCL INDX SBIN WORD STATIC ALIGNED;
      400       17    1   DCL TEMP SBIN WORD STATIC ALIGNED;
      401       18
      402       19    1   DCL PRIVAL SBIN WORD SYMREF ALIGNED;
      403       20    1   DCL NXTVAL SBIN WORD SYMREF ALIGNED;
      404       21    1   DCL 1 SETCNT (0:499) SYMREF ALIGNED,
      405       22    1         2 PR UBIN WORD ALIGNED,
      406       23    1         2 NXT UBIN WORD ALIGNED,
      407       24    1         2 DBK UBIN WORD ALIGNED;
      408       25
      409       26    1   DCL TYPE_PA BIT(1) STATIC ALIGNED;
      410       27
      411       28         %INCLUDE ZI_DBU_VALDTE;
      412      296         %VALID_LIST;
      413      436         %INCLUDE ZI_GLOBAL_DBUTIL;
      414      614         %SYS_FUNC;
      415      706         %MISC_DCLS;
      416      759         %INCLUDE ZI$PG_STRUCTS;
      417      862         %ATBLK_PG;
      418      918         %DATA_PG;
      419      937         %INCLUDE ZI_DBU_XREF;
      420     1104         %XREF_TBLS;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:57   
      421     1179         %INCLUDE ZI_ERRORS_SUBS;
      422     1699         %INCLUDE CP_6;
      423     1780         %F$DCB;
      424     1837         %INCLUDE CP_6_SUBS;
      425     2377         %INCLUDE ZI$DIR;
      426     2534         %DIR;
      427     2678
      428     2679
      429     2680    1   DCL BUILD_MSTR_TBL ENTRY ALTRET;
      430     2681    1   DCL BUILD_SETXREF ENTRY ALTRET;
      431     2682    1   DCL BUILD_RECXREF ENTRY ALTRET;
      432     2683    1   DCL FIND_MSTR_ENTRY ENTRY(2);
      433     2684    1   DCL GET_DCB ENTRY(1) ALTRET;
      434     2685    1   DCL ZIU$CHECK ENTRY ALTRET;
      435     2686    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      436     2687    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      437     2688    1   DCL REPORT_CHK ENTRY ALTRET;
      438     2689
      439     2690        %EJECT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:58   
      440     2691
      441     2692    1       IF ZI$DIR.CHECK ~= %YES# THEN
      442     2693    2       DO;
      443     2694    2           ZI$DIR.CHECK = %YES#; /* Default a check on the area */
      444     2695    2           IF RCNT ~= -1 AND /* 'VAL' option was specified if true */
      445     2696    2              ITMCNT = -1 THEN /* 'NOVAL' option not used if true */
      446     2697    2               ZI$DIR.CHECK = %NO#;
      447     2698    2           END;
      448     2699
      449     2700        /*
      450     2701           Check area for broken chains and mark the mastr table with the
      451     2702           sets that don't check ok.
      452     2703        */
      453     2704
      454     2705    2       DO I = NO_RECS TO (NO_RECS+NO_SETS-1);
      455     2706    2           MSTR_REF.SET.FLG(I) = %NO#;
      456     2707    2           END;
      457     2708
      458     2709    1       IF ZI$DIR.CHECK = %YES# THEN
      459     2710    2       DO;
      460     2711    3           DO AREANO = 0 TO NO_AREAS-1;
      461     2712    3               ZI$DIR.AREA_NM.NAME.TEXT = AREA_KEY_XREF.NAME(AREANO);
      462     2713    3               ZI$DIR.CHECK_ALL = '1'B;
      463     2714    3               CALL GET_DCB(ZI$DIR.AREA_NM) ALTRET(ALT_CHK);
      464     2715    3               CALL ZIU$CHECK ALTRET(ALT_CHK);
      465     2716    3               END;
      466     2717
      467     2718    3           DO I = NO_RECS TO (NO_RECS+NO_SETS-1); /* Mark bad sets */
      468     2719    3               PRIVAL = SETCNT.PR(I-NO_RECS) - SETCNT.DBK(I-NO_RECS);
      469     2720    3               NXTVAL = SETCNT.NXT(I-NO_RECS) - SETCNT.DBK(I-NO_RECS);
      470     2721    3               IF PRIVAL ~= 0 OR NXTVAL ~= 0 THEN
      471     2722    3                   IF (MSTR_REF.SET.INMODE(I) OR MSTR_REF.SET.RETYPE(I)) AND
      472     2723    3                      PRIVAL=NXTVAL THEN; /* disconnected member; just a warning */
      473     2724    3                   ELSE MSTR_REF.SET.FLG(I) = '1'B;
      474     2725    3               IF MSTR_REF.SET.PATYPE(I) = '1'B AND NXTVAL ~= 0 THEN
      475     2726    3                   MSTR_REF.SET.FLG(I) = '1'B;
      476     2727    3               END;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:59   
      477     2728         /* Print report of bad sets found by check */
      478     2729    2           CALL REPORT_CHK ALTRET(ALT_CHK);
      479     2730    2           END;
      480     2731        /*
      481     2732           Merge in set selection from the 'VAL' option in the directive.
      482     2733        */
      483     2734    2       DO I = 0 TO RCNT; /* RECORD_LIST used to store validate set list */
      484     2735    2           CALL FIND_MSTR_ENTRY(RECORD_LIST.NAME(I),MSTR_INDX);
      485     2736    2           IF MSTR_INDX ~= -1 THEN
      486     2737    3           DO;
      487     2738    3               MSTR_REF.SET.FLG(MSTR_INDX) = '1'B;
      488     2739    3               END;
      489     2740    3           ELSE DO;
      490     2741    3               CALL SET_ERROR(RECORD_LIST.NAME(I));
      491     2742    3               ALTRETURN;
      492     2743    3               END;
      493     2744    2           END;
      494     2745        /*
      495     2746           Merge in set selection from the 'NOVAL' option in directive.
      496     2747        */
      497     2748    2       DO I = 0 TO ITMCNT; /* ITEM_LIST used to store noval set list*/
      498     2749    2           CALL FIND_MSTR_ENTRY(ITEM_LIST.NAME(I),MSTR_INDX);
      499     2750    2           IF MSTR_INDX ~= -1 THEN
      500     2751    3           DO;
      501     2752    3               MSTR_REF.SET.FLG(MSTR_INDX) = '0'B;
      502     2753    3               END;
      503     2754    3           ELSE DO;
      504     2755    3               CALL SET_ERROR(ITEM_LIST.NAME(I));
      505     2756    3               ALTRETURN;
      506     2757    3               END;
      507     2758    2           END;
      508     2759        %EJECT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:60   
      509     2760        /*
      510     2761           Build a list of records that are participants in the sets to
      511     2762           be validated.
      512     2763        */
      513     2764    1       RECINDX = -1;
      514     2765    2       DO I = NO_RECS TO (NO_RECS + NO_SETS -1);
      515     2766    2           IF MSTR_REF.SET.FLG(I) = %YES# THEN /* validate = yes */
      516     2767    3           DO;
      517     2768    3               INDX = MSTR_REF.NEXT(I); /* Follow record chain */
      518     2769    4               DO WHILE(INDX ~= -1);
      519     2770         /* Add rec's mstrindx to reclist unless previously done */
      520     2771    4                   X = 0;
      521     2772    5                   DO WHILE(X <= RECINDX AND
      522     2773    5                      RECLIST.MSTRINDX(X) ~= REC_XREF.MSTRINDX(INDX));
      523     2774    5                       X = X+1;
      524     2775    5                       END;
      525     2776    4                   IF X > RECINDX THEN
      526     2777    5                   DO; /* Rec not prev entered in list */
      527     2778    5                       RECINDX = RECINDX + 1;
      528     2779    5                       RECLIST.MSTRINDX(RECINDX) = REC_XREF.MSTRINDX(INDX);
      529     2780    5                       END;
      530     2781    4                   INDX = REC_XREF.NEXT(INDX);
      531     2782    4                   END;
      532     2783    3               END;
      533     2784    2           END;
      534     2785        %EJECT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:61   
      535     2786        /*
      536     2787           Now that a list of records has been made - create a link list
      537     2788           of records to set members for each record type. Each record entry
      538     2789           will point to a list of sets the record is owner or member and
      539     2790           are also being validated. The sets must be linked in sorted (by
      540     2791           set number) order for proper application of EG-PT decision table.
      541     2792        */
      542     2793    1       SETINDX = 0;
      543     2794    1       HIGH_RECINDX = RECINDX;
      544     2795    2       DO I = 0 TO RECINDX;
      545     2796    2           RECLIST.SETINDX(I) = SETINDX;
      546     2797         /*   Determine if this record is a PA record and if so
      547     2798            only accept one set description from the tables. */
      548     2799    2           INDX = RECLIST.MSTRINDX(I);
      549     2800    2           IF MSTR_REF.PAOFF(INDX)>0 THEN /* PA_REC */
      550     2801    2               TYPE_PA = %YES#;
      551     2802    2           ELSE
      552     2803    2               TYPE_PA = %NO#;
      553     2804    2           INDX = MSTR_REF.NEXT(INDX);
      554     2805    3           DO WHILE(INDX ~= -1);
      555     2806    3               IF MSTR_REF.SET.FLG(SET_XREF.MSTRINDX(INDX)) = %YES# THEN
      556     2807    4               DO;
      557     2808    4                   SETLIST(SETINDX) = INDX;
      558     2809    4                   SETINDX = SETINDX + 1;
      559     2810    4                   END;
      560     2811    3               IF TYPE_PA = %YES# THEN
      561     2812    3                   INDX = -1; /* Terminate set extractions to */
      562     2813    3               ELSE /* avoid duplicate PA entries. */
      563     2814    3                   INDX = SET_XREF.NEXT(INDX);
      564     2815    3               END;
      565     2816         /*
      566     2817            Sort the set indexs in assending order.
      567     2818         */
      568     2819    2           J = RECLIST.SETINDX(I);
      569     2820    2   STRTSORT:
      570     2821    2           IF SETINDX - J = 1 THEN /* Only 1 set entry (no sort needed) */
      571     2822    2               GOTO CMPLTSORT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:62   
      572     2823    2           IF SET_XREF.MSTRINDX(SETLIST(J)) > SET_XREF.MSTRINDX(SETLIST(J+1)) THEN
      573     2824    3           DO;
      574     2825    3               TEMP = SETLIST(J);
      575     2826    3               SETLIST(J) = SETLIST(J+1);
      576     2827    3               SETLIST(J+1) = TEMP;
      577     2828    3               J = RECLIST.SETINDX(I);
      578     2829    3               END;
      579     2830    3           ELSE DO;
      580     2831    3               J = J+1;
      581     2832    3               IF J = SETINDX -1 THEN
      582     2833    3                   GOTO CMPLTSORT;
      583     2834    3               END;
      584     2835    2           GOTO STRTSORT;
      585     2836    2   CMPLTSORT:
      586     2837    2           SETLIST(SETINDX) = -1;
      587     2838    2           SETINDX = SETINDX +1;
      588     2839    2           END;
      589     2840
      590     2841    1       IF SETINDX > 0 THEN /* Bad sets found or selected by CHKVAL */
      591     2842    1           CALL PRINT_REPORT ALTRET(ALT_CHK);
      592     2843
      593     2844    1       RETURN;
      594     2845        %EJECT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:63   
      595     2846        /*
      596     2847           Print a report on sets and records to be validated.
      597     2848        */
      598     2849    1   PRINT_REPORT: PROC ALTRET;
      599     2850
      600     2851    2   DCL
      601     2852    2    1 REPRTHEAD STATIC CALIGNED,
      602     2853    2    2 VFC CHAR(1) CALIGNED INIT('A'),
      603     2854    2    2 * CHAR(69) CALIGNED INIT
      604     2855    2    ('The following records will participate in this validation process:');
      605     2856    2   DCL
      606     2857    2    1 REPRTHEAD2 STATIC CALIGNED,
      607     2858    2    2 VFC CHAR(1) CALIGNED INIT('A'),
      608     2859    2    2 * CHAR(60) CALIGNED INIT
      609     2860    2    ('            RECORD NAME                    SET NAME');
      610     2861    2   DCL
      611     2862    2    1 REPRTHEAD3 STATIC CALIGNED,
      612     2863    2    2 VFC CHAR(1) CALIGNED INIT('A'),
      613     2864    2    2 * CHAR(60) CALIGNED INIT
      614     2865    2    ('            -----------                    --------');
      615     2866    2   DCL
      616     2867    2    1 DETAILINE STATIC CALIGNED,
      617     2868    2    2 VFC CHAR(1) CALIGNED INIT('A'),
      618     2869    2    2 FIL CHAR(12) CALIGNED INIT(' '),
      619     2870    2    2 REC CHAR(31) CALIGNED,
      620     2871    2    2 SET CHAR(31) CALIGNED;
      621     2872
      622     2873    2       DCBSF = DCBNUM(M$LO);
      623     2874    2       BUFLNSF = 67;
      624     2875    2       BUFSF = VECTOR(REPRTHEAD);
      625     2876    2       CALL SYS_FUNC_WRIT;
      626     2877    2       BUFLNSF = 1;
      627     2878    2       CALL SYS_FUNC_WRIT; /* Write a blank link */
      628     2879
      629     2880    2       BUFLNSF = 60;
      630     2881    2       BUFSF = VECTOR(REPRTHEAD2);
      631     2882    2       CALL SYS_FUNC_WRIT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:64   
      632     2883
      633     2884    2       BUFSF = VECTOR(REPRTHEAD3);
      634     2885    2       CALL SYS_FUNC_WRIT;
      635     2886
      636     2887    3       DO I = 0 TO RECINDX;
      637     2888    3           DETAILINE.REC = MSTR_REF.NAME(RECLIST.MSTRINDX(I));
      638     2889    3           DETAILINE.SET =
      639     2890    3              MSTR_REF.NAME(SET_XREF.MSTRINDX(SETLIST(RECLIST.SETINDX(I))));
      640     2891
      641     2892    3           BUFLNSF = 72;
      642     2893    3           BUFSF = VECTOR(DETAILINE);
      643     2894    3           CALL SYS_FUNC_WRIT;
      644     2895    3           DETAILINE.REC = ' ';
      645     2896    3           INDX = RECLIST.SETINDX(I) + 1;
      646     2897
      647     2898    4           DO WHILE(SETLIST(INDX) ~= -1);
      648     2899    4               DETAILINE.SET = MSTR_REF.NAME(SET_XREF.MSTRINDX(SETLIST(INDX)));
      649     2900    4               CALL SYS_FUNC_WRIT;
      650     2901    4               INDX = INDX +1;
      651     2902    4               END;
      652     2903
      653     2904    3           BUFLNSF = 60;
      654     2905    3           BUFSF = VECTOR(REPRTHEAD3);
      655     2906    3           CALL SYS_FUNC_WRIT;
      656     2907    3           END;
      657     2908
      658     2909    2       RETURN;
      659     2910
      660     2911    2   END PRINT_REPORT;
      661     2912
      662     2913        %EJECT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:65   
      663     2914    1   SET_ERROR: PROC(SETNAME);
      664     2915    2   DCL SETNAME CHAR(30);
      665     2916
      666     2917         /*E* ERROR: ZIU-DBU#NSETNM-C
      667     2918              MESSAGE: Set name "%U1" does not exist.     */
      668     2919    2       ERR_INSERT.TEXT(0) = SETNAME;
      669     2920    2       CALL INDEX(INDX,' ',SETNAME);
      670     2921    2       ERR_INSERT.CNT(0) = INDX;
      671     2922    2       ERRCODESF.ERR# = DBU#NSETNM;
      672     2923    2       MSGCODE = ERRCODE_RDEF;
      673     2924    2       CALL SYS_FUNC_ERRMSG;
      674     2925    2       RETURN;
      675     2926
      676     2927    2   END SET_ERROR;
      677     2928    1   ALT_CHK:
      678     2929    1       ALTRETURN;
      679     2930    1   END ZIU$CHKVAL;
      680     2931        %EOD;

PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:66   
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_VALDTE.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$CHKVAL.

   Procedure ZIU$CHKVAL requires 516 words for executable code.
   Procedure ZIU$CHKVAL requires 8 words of local(AUTO) storage.

PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:67   

 Object Unit name= ZIU$CHKVAL                                 File name= ZIU$VALSET.:ZIC0TOU
 UTS= SEP 05 '97 13:33:31.88 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    73    111  ZIU$CHKVAL
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$UC
    3   Proc  even  none   516   1004  ZIU$CHKVAL
    4  RoData even  none    20     24  ZIU$CHKVAL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        0  ZIU$CHKVAL

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  AREANO
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:68   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GET_DCB
 yes     yes           Std       0 ZIU$CHECK
         yes           Std       2 FIND_MSTR_ENTRY
 yes     yes           Std       0 REPORT_CHK
 yes     yes           Std       0 SYS_FUNC_WRIT
 yes     yes           Std       0 SYS_FUNC_ERRMSG
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     PRIVAL                                NXTVAL                                SETCNT
     BREAK_LOCAT                           RECLIST                               SETLIST
     SETINDX                               RECINDX                               HIGH_RECINDX
     EGREC$                                EGINDX                                NO_EGRECS
     NO_EGBUFS                             LAST_EGINDX                           CURREG
     CURRPT                                EGFILE                                ERRFILE
     NO_ERRORS                             ERROR_BUF                             ERRBUF$
     BLKLSF                                KEYLSF                                KEYXSF
     DCBSF                                 ORGSF                                 KEYSF
     KEYVSF                                ACSSF                                 NOTIMESF
     FUNSF                                 ASNSF                                 TESTSF
     XTENSIZESF                            DISPSF                                WAITSF
     VFCSF                                 FULLSF                                BKUPSF
     BUFLNSF                               BUFSF                                 SOURCESF
     DESTSF                                DATESF                                TIMESF
     UTSSF                                 DAYSF                                 TSTAMPSF
     ENCRP_SEEDSF                          ERRCODESF                             MSGCODE
     INCL_ERR                              ERR_INSERT                            FIDSF_RD
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:69   
     ACNT                                  EXISTSF                               SHARESF
     DCBNMSF                               KEYRSF                                NO_KEYSF
     REASGNSF                              CARRY_ATTRIBUTESF                     SUBMESSF
     SPKY_OPNSF                            POSSF                                 ERRFLGSF
     MERGESF                               FSA_FLAG                              RELGSF
     UNUSED                                HELPCODE                              COUNTSF
     INDEXSF                               GAP                                   PSNSF
     ACNTSF                                KEY_SHADWSF                           REC$
     RB                                    RE                                    IE
     IB                                    CNT                                   ICNT
     RCNT                                  SCNT                                  FIRST_SET
     RETCNT                                DMPCNT                                KCNT
     ACNT_IDX                              I                                     J
     K                                     X                                     STEPCC
     I_O_BUF$                              OUT_INDX                              I_O_SIZE
     REC_DATA_LN                           M$LO                                  B$TCB$
     B$ROS$                                B$JIT$                                KEYFID
     I_O_KEY                               RESTART                               BREAK_FLAG
     ICHKSUM                               ITMCNT                                GAP1
     ATBLK$                                DATA$                                 TYPE
     MSTR$                                 NXT_MSLOT                             MAX_MSLOT
     MSTR_INDX                             HASHTBL                               HASHINDX
     LOC_MODE                              AREA_KEY$                             NO_AREAS
     GLBL_PTR_SZ                           SET_XREF$                             NXT_SSLOT
     MAX_SSLOT                             REC_XREF$                             NXT_RSLOT
     MAX_RSLOT                             NO_RECS                               NO_SETS
     XREF_BUILT                            TYPESET                               TYPEREC
     M$UC                                  ZI$DIR                                SCHEMA_ACTIVE
     RECORD_LIST                           SET_LIST                              RETAIN_LIST
     DUMP_FID                              ALTKY                                 INIT_RG
     KEY_RNG                               ITEM_LIST
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:70   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:71   


      384        1        /*T***********************************************************/
      385        2        /*T*                                                         */
      386        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      387        4        /*T*                                                         */
      388        5        /*T***********************************************************/
      389        6        /*P*
      390        7           NAME: ZIU$CHKVAL
      391        8        PURPOSE: This routine figures out which sets need to be validated and
      392        9                 builds link list tables to connect those records to only the
      393       10                 sets to be validated.
      394       11        */
      395       12        ZIU$CHKVAL: PROC ALTRET;

     12  3 000000   000000 700200 xent  ZIU$CHKVAL   TSX0  ! X66_AUTO_0
         3 000001   000010 000000                    ZERO    8,0

      396       13
      397       14
      398       15    1   DCL AREANO SBIN WORD STATIC SYMDEF ALIGNED;
      399       16    1   DCL INDX SBIN WORD STATIC ALIGNED;
      400       17    1   DCL TEMP SBIN WORD STATIC ALIGNED;
      401       18
      402       19    1   DCL PRIVAL SBIN WORD SYMREF ALIGNED;
      403       20    1   DCL NXTVAL SBIN WORD SYMREF ALIGNED;
      404       21    1   DCL 1 SETCNT (0:499) SYMREF ALIGNED,
      405       22    1         2 PR UBIN WORD ALIGNED,
      406       23    1         2 NXT UBIN WORD ALIGNED,
      407       24    1         2 DBK UBIN WORD ALIGNED;
      408       25
      409       26    1   DCL TYPE_PA BIT(1) STATIC ALIGNED;
      410       27
      411       28         %INCLUDE ZI_DBU_VALDTE;
      412      296         %VALID_LIST;
      413      436         %INCLUDE ZI_GLOBAL_DBUTIL;
      414      614         %SYS_FUNC;
      415      706         %MISC_DCLS;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:72   
      416      759         %INCLUDE ZI$PG_STRUCTS;
      417      862         %ATBLK_PG;
      418      918         %DATA_PG;
      419      937         %INCLUDE ZI_DBU_XREF;
      420     1104         %XREF_TBLS;
      421     1179         %INCLUDE ZI_ERRORS_SUBS;
      422     1699         %INCLUDE CP_6;
      423     1780         %F$DCB;
      424     1837         %INCLUDE CP_6_SUBS;
      425     2377         %INCLUDE ZI$DIR;
      426     2534         %DIR;
      427     2678
      428     2679
      429     2680    1   DCL BUILD_MSTR_TBL ENTRY ALTRET;
      430     2681    1   DCL BUILD_SETXREF ENTRY ALTRET;
      431     2682    1   DCL BUILD_RECXREF ENTRY ALTRET;
      432     2683    1   DCL FIND_MSTR_ENTRY ENTRY(2);
      433     2684    1   DCL GET_DCB ENTRY(1) ALTRET;
      434     2685    1   DCL ZIU$CHECK ENTRY ALTRET;
      435     2686    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      436     2687    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      437     2688    1   DCL REPORT_CHK ENTRY ALTRET;
      438     2689
      439     2690        %EJECT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:73   
      440     2691
      441     2692    1       IF ZI$DIR.CHECK ~= %YES# THEN

   2692  3 000002   000125 430000 xsym               FSZN    ZI$DIR+85
         3 000003   000016 604000 3                  TMI     s:2705

      442     2693    2       DO;

      443     2694    2           ZI$DIR.CHECK = %YES#; /* Default a check on the area */

   2694  3 000004   001000 236003                    LDQ     512,DU
         3 000005   000125 256000 xsym               ORSQ    ZI$DIR+85

      444     2695    2           IF RCNT ~= -1 AND /* 'VAL' option was specified if true */

   2695  3 000006   000000 235000 xsym               LDA     RCNT
         3 000007   000000 115000 4                  CMPA    0
         3 000010   000016 600000 3                  TZE     s:2705
         3 000011   000000 235000 xsym               LDA     ITMCNT
         3 000012   000000 115000 4                  CMPA    0
         3 000013   000016 601000 3                  TNZ     s:2705

      445     2696    2              ITMCNT = -1 THEN /* 'NOVAL' option not used if true */
      446     2697    2               ZI$DIR.CHECK = %NO#;

   2697  3 000014   000001 236000 4                  LDQ     1
         3 000015   000125 356000 xsym               ANSQ    ZI$DIR+85

      447     2698    2           END;

      448     2699
      449     2700        /*
      450     2701           Check area for broken chains and mark the mastr table with the
      451     2702           sets that don't check ok.
      452     2703        */
      453     2704
      454     2705    2       DO I = NO_RECS TO (NO_RECS+NO_SETS-1);
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:74   

   2705  3 000016   000000 235000 xsym               LDA     NO_RECS
         3 000017   000000 755000 xsym               STA     I
         3 000020   000030 710000 3                  TRA     s:2707+1

      455     2706    2           MSTR_REF.SET.FLG(I) = %NO#;

   2706  3 000021   000000 236000 xsym               LDQ     I
         3 000022   000012 402007                    MPY     10,DL
         3 000023   000000 470400 xsym               LDP0    MSTR$
         3 000024   000000 620006                    EAX0    0,QL
         3 000025   000002 236000 4                  LDQ     2
         3 000026   000011 356110                    ANSQ    9,X0,PR0

      456     2707    2           END;

   2707  3 000027   000000 054000 xsym               AOS     I
         3 000030   000000 236000 xsym               LDQ     NO_RECS
         3 000031   000000 036000 xsym               ADLQ    NO_SETS
         3 000032   000000 116000 xsym               CMPQ    I
         3 000033   000021 605400 3                  TPNZ    s:2706

      457     2708
      458     2709    1       IF ZI$DIR.CHECK = %YES# THEN

   2709  3 000034   000125 430000 xsym               FSZN    ZI$DIR+85
         3 000035   000172 605000 3                  TPL     s:2734

      459     2710    2       DO;

      460     2711    3           DO AREANO = 0 TO NO_AREAS-1;

   2711  3 000036   000000 450000 0                  STZ     AREANO
         3 000037   000060 710000 3                  TRA     s:2716+1

      461     2712    3               ZI$DIR.AREA_NM.NAME.TEXT = AREA_KEY_XREF.NAME(AREANO);

PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:75   
   2712  3 000040   000000 236000 0                  LDQ     AREANO
         3 000041   000050 402007                    MPY     40,DL
         3 000042   000000 470400 xsym               LDP0    AREA_KEY$
         3 000043   040000 100506                    MLR     fill='040'O
         3 000044   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         3 000045   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30

      462     2713    3               ZI$DIR.CHECK_ALL = '1'B;

   2713  3 000046   400000 236007                    LDQ     -131072,DL
         3 000047   000141 256000 xsym               ORSQ    ZI$DIR+97

      463     2714    3               CALL GET_DCB(ZI$DIR.AREA_NM) ALTRET(ALT_CHK);

   2714  3 000050   000004 630400 4                  EPPR0   4
         3 000051   000003 631400 4                  EPPR1   3
         3 000052   000000 701000 xent               TSX1    GET_DCB
         3 000053   001003 702000 3                  TSX2    ALT_CHK

      464     2715    3               CALL ZIU$CHECK ALTRET(ALT_CHK);

   2715  3 000054   000005 631400 4                  EPPR1   5
         3 000055   000000 701000 xent               TSX1    ZIU$CHECK
         3 000056   001003 702000 3                  TSX2    ALT_CHK

      465     2716    3               END;

   2716  3 000057   000000 054000 0                  AOS     AREANO
         3 000060   000000 236000 0                  LDQ     AREANO
         3 000061   000000 116000 xsym               CMPQ    NO_AREAS
         3 000062   000040 604000 3                  TMI     s:2712

      466     2717
      467     2718    3           DO I = NO_RECS TO (NO_RECS+NO_SETS-1); /* Mark bad sets */

   2718  3 000063   000000 235000 xsym               LDA     NO_RECS
         3 000064   000000 755000 xsym               STA     I
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:76   
         3 000065   000163 710000 3                  TRA     s:2727+1

      468     2719    3               PRIVAL = SETCNT.PR(I-NO_RECS) - SETCNT.DBK(I-NO_RECS);

   2719  3 000066   000000 236000 xsym               LDQ     I
         3 000067   000000 136000 xsym               SBLQ    NO_RECS
         3 000070   200006 756100                    STQ     @SETNAME+1,,AUTO
         3 000071   000000 236000 xsym               LDQ     I
         3 000072   000000 136000 xsym               SBLQ    NO_RECS
         3 000073   000003 402007                    MPY     3,DL
         3 000074   000000 620006                    EAX0    0,QL
         3 000075   200006 236100                    LDQ     @SETNAME+1,,AUTO
         3 000076   000003 402007                    MPY     3,DL
         3 000077   000000 236006 xsym               LDQ     SETCNT,QL
         3 000100   000002 136010 xsym               SBLQ    SETCNT+2,X0
         3 000101   000000 756000 xsym               STQ     PRIVAL

      469     2720    3               NXTVAL = SETCNT.NXT(I-NO_RECS) - SETCNT.DBK(I-NO_RECS);

   2720  3 000102   000000 236000 xsym               LDQ     I
         3 000103   000000 136000 xsym               SBLQ    NO_RECS
         3 000104   200006 756100                    STQ     @SETNAME+1,,AUTO
         3 000105   000000 236000 xsym               LDQ     I
         3 000106   000000 136000 xsym               SBLQ    NO_RECS
         3 000107   000003 402007                    MPY     3,DL
         3 000110   000000 620006                    EAX0    0,QL
         3 000111   200006 236100                    LDQ     @SETNAME+1,,AUTO
         3 000112   000003 402007                    MPY     3,DL
         3 000113   000001 236006 xsym               LDQ     SETCNT+1,QL
         3 000114   000002 136010 xsym               SBLQ    SETCNT+2,X0
         3 000115   000000 756000 xsym               STQ     NXTVAL

      470     2721    3               IF PRIVAL ~= 0 OR NXTVAL ~= 0 THEN

   2721  3 000116   000000 235000 xsym               LDA     PRIVAL
         3 000117   000122 601000 3                  TNZ     s:2722
         3 000120   000000 116003                    CMPQ    0,DU
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:77   
         3 000121   000145 600000 3                  TZE     s:2725

      471     2722    3                   IF (MSTR_REF.SET.INMODE(I) OR MSTR_REF.SET.RETYPE(I)) AND

   2722  3 000122   000000 236000 xsym               LDQ     I
         3 000123   000012 402007                    MPY     10,DL
         3 000124   000000 470400 xsym               LDP0    MSTR$
         3 000125   000011 236106                    LDQ     9,QL,PR0
         3 000126   000010 316003                    CANQ    8,DU
         3 000127   000135 601000 3                  TNZ     s:2722+11
         3 000130   000000 236000 xsym               LDQ     I
         3 000131   000012 402007                    MPY     10,DL
         3 000132   000011 236106                    LDQ     9,QL,PR0
         3 000133   000004 316003                    CANQ    4,DU
         3 000134   000140 600000 3                  TZE     s:2724
         3 000135   000000 236000 xsym               LDQ     PRIVAL
         3 000136   000000 116000 xsym               CMPQ    NXTVAL
         3 000137   000145 600000 3                  TZE     s:2725

      472     2723    3                      PRIVAL=NXTVAL THEN; /* disconnected member; just a warning */
      473     2724    3                   ELSE MSTR_REF.SET.FLG(I) = '1'B;

   2724  3 000140   000000 236000 xsym               LDQ     I
         3 000141   000012 402007                    MPY     10,DL
         3 000142   000000 620006                    EAX0    0,QL
         3 000143   000040 236003                    LDQ     32,DU
         3 000144   000011 256110                    ORSQ    9,X0,PR0

      474     2725    3               IF MSTR_REF.SET.PATYPE(I) = '1'B AND NXTVAL ~= 0 THEN

   2725  3 000145   000000 236000 xsym               LDQ     I
         3 000146   000012 402007                    MPY     10,DL
         3 000147   000000 470400 xsym               LDP0    MSTR$
         3 000150   000011 236106                    LDQ     9,QL,PR0
         3 000151   000002 316003                    CANQ    2,DU
         3 000152   000162 600000 3                  TZE     s:2727
         3 000153   000000 235000 xsym               LDA     NXTVAL
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:78   
         3 000154   000162 600000 3                  TZE     s:2727

      475     2726    3                   MSTR_REF.SET.FLG(I) = '1'B;

   2726  3 000155   000000 236000 xsym               LDQ     I
         3 000156   000012 402007                    MPY     10,DL
         3 000157   000000 620006                    EAX0    0,QL
         3 000160   000040 236003                    LDQ     32,DU
         3 000161   000011 256110                    ORSQ    9,X0,PR0

      476     2727    3               END;

   2727  3 000162   000000 054000 xsym               AOS     I
         3 000163   000000 236000 xsym               LDQ     NO_RECS
         3 000164   000000 036000 xsym               ADLQ    NO_SETS
         3 000165   000000 116000 xsym               CMPQ    I
         3 000166   000066 605400 3                  TPNZ    s:2719

      477     2728         /* Print report of bad sets found by check */
      478     2729    2           CALL REPORT_CHK ALTRET(ALT_CHK);

   2729  3 000167   000005 631400 4                  EPPR1   5
         3 000170   000000 701000 xent               TSX1    REPORT_CHK
         3 000171   001003 702000 3                  TSX2    ALT_CHK

      479     2730    2           END;

      480     2731        /*
      481     2732           Merge in set selection from the 'VAL' option in the directive.
      482     2733        */
      483     2734    2       DO I = 0 TO RCNT; /* RECORD_LIST used to store validate set list */

   2734  3 000172   000000 450000 xsym               STZ     I
         3 000173   000230 710000 3                  TRA     s:2744+1

      484     2735    2           CALL FIND_MSTR_ENTRY(RECORD_LIST.NAME(I),MSTR_INDX);

PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:79   
   2735  3 000174   000007 236000 4                  LDQ     7
         3 000175   200007 756100                    STQ     @SETNAME+2,,AUTO
         3 000176   000000 236000 xsym               LDQ     I
         3 000177   000025 736000                    QLS     21
         3 000200   000010 036000 4                  ADLQ    8
         3 000201   200006 756100                    STQ     @SETNAME+1,,AUTO
         3 000202   200006 630500                    EPPR0   @SETNAME+1,,AUTO
         3 000203   000006 631400 4                  EPPR1   6
         3 000204   000000 701000 xent               TSX1    FIND_MSTR_ENTRY
         3 000205   000000 011000                    NOP     0

      485     2736    2           IF MSTR_INDX ~= -1 THEN

   2736  3 000206   000000 235000 xsym               LDA     MSTR_INDX
         3 000207   000000 115000 4                  CMPA    0
         3 000210   000220 600000 3                  TZE     s:2741

      486     2737    3           DO;

      487     2738    3               MSTR_REF.SET.FLG(MSTR_INDX) = '1'B;

   2738  3 000211   000000 236000 xsym               LDQ     MSTR_INDX
         3 000212   000012 402007                    MPY     10,DL
         3 000213   000000 470400 xsym               LDP0    MSTR$
         3 000214   000000 620006                    EAX0    0,QL
         3 000215   000040 236003                    LDQ     32,DU
         3 000216   000011 256110                    ORSQ    9,X0,PR0

      488     2739    3               END;

   2739  3 000217   000227 710000 3                  TRA     s:2744

      489     2740    3           ELSE DO;

      490     2741    3               CALL SET_ERROR(RECORD_LIST.NAME(I));

   2741  3 000220   000000 236000 xsym               LDQ     I
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:80   
         3 000221   000025 736000                    QLS     21
         3 000222   000010 036000 4                  ADLQ    8
         3 000223   200005 756100                    STQ     5,,AUTO
         3 000224   000755 701000 3                  TSX1    SET_ERROR
         3 000225   000000 011000                    NOP     0

      491     2742    3               ALTRETURN;

   2742  3 000226   000000 702200 xent               TSX2  ! X66_AALT

      492     2743    3               END;
      493     2744    2           END;

   2744  3 000227   000000 054000 xsym               AOS     I
         3 000230   000000 236000 xsym               LDQ     I
         3 000231   000000 116000 xsym               CMPQ    RCNT
         3 000232   000174 604400 3                  TMOZ    s:2735

      494     2745        /*
      495     2746           Merge in set selection from the 'NOVAL' option in directive.
      496     2747        */
      497     2748    2       DO I = 0 TO ITMCNT; /* ITEM_LIST used to store noval set list*/

   2748  3 000233   000000 450000 xsym               STZ     I
         3 000234   000271 710000 3                  TRA     s:2758+1

      498     2749    2           CALL FIND_MSTR_ENTRY(ITEM_LIST.NAME(I),MSTR_INDX);

   2749  3 000235   000007 236000 4                  LDQ     7
         3 000236   200007 756100                    STQ     @SETNAME+2,,AUTO
         3 000237   000000 236000 xsym               LDQ     I
         3 000240   000025 736000                    QLS     21
         3 000241   000011 036000 4                  ADLQ    9
         3 000242   200006 756100                    STQ     @SETNAME+1,,AUTO
         3 000243   200006 630500                    EPPR0   @SETNAME+1,,AUTO
         3 000244   000006 631400 4                  EPPR1   6
         3 000245   000000 701000 xent               TSX1    FIND_MSTR_ENTRY
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:81   
         3 000246   000000 011000                    NOP     0

      499     2750    2           IF MSTR_INDX ~= -1 THEN

   2750  3 000247   000000 235000 xsym               LDA     MSTR_INDX
         3 000250   000000 115000 4                  CMPA    0
         3 000251   000261 600000 3                  TZE     s:2755

      500     2751    3           DO;

      501     2752    3               MSTR_REF.SET.FLG(MSTR_INDX) = '0'B;

   2752  3 000252   000000 236000 xsym               LDQ     MSTR_INDX
         3 000253   000012 402007                    MPY     10,DL
         3 000254   000000 470400 xsym               LDP0    MSTR$
         3 000255   000000 620006                    EAX0    0,QL
         3 000256   000002 236000 4                  LDQ     2
         3 000257   000011 356110                    ANSQ    9,X0,PR0

      502     2753    3               END;

   2753  3 000260   000270 710000 3                  TRA     s:2758

      503     2754    3           ELSE DO;

      504     2755    3               CALL SET_ERROR(ITEM_LIST.NAME(I));

   2755  3 000261   000000 236000 xsym               LDQ     I
         3 000262   000025 736000                    QLS     21
         3 000263   000011 036000 4                  ADLQ    9
         3 000264   200005 756100                    STQ     5,,AUTO
         3 000265   000755 701000 3                  TSX1    SET_ERROR
         3 000266   000000 011000                    NOP     0

      505     2756    3               ALTRETURN;

   2756  3 000267   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:82   

      506     2757    3               END;
      507     2758    2           END;

   2758  3 000270   000000 054000 xsym               AOS     I
         3 000271   000000 236000 xsym               LDQ     I
         3 000272   000000 116000 xsym               CMPQ    ITMCNT
         3 000273   000235 604400 3                  TMOZ    s:2749

      508     2759        %EJECT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:83   
      509     2760        /*
      510     2761           Build a list of records that are participants in the sets to
      511     2762           be validated.
      512     2763        */
      513     2764    1       RECINDX = -1;

   2764  3 000274   000001 335007                    LCA     1,DL
         3 000275   000000 755000 xsym               STA     RECINDX

      514     2765    2       DO I = NO_RECS TO (NO_RECS + NO_SETS -1);

   2765  3 000276   000000 235000 xsym               LDA     NO_RECS
         3 000277   000000 755000 xsym               STA     I
         3 000300   000363 710000 3                  TRA     s:2784+1

      515     2766    2           IF MSTR_REF.SET.FLG(I) = %YES# THEN /* validate = yes */

   2766  3 000301   000000 236000 xsym               LDQ     I
         3 000302   000012 402007                    MPY     10,DL
         3 000303   000000 470400 xsym               LDP0    MSTR$
         3 000304   000011 236106                    LDQ     9,QL,PR0
         3 000305   000040 316003                    CANQ    32,DU
         3 000306   000362 600000 3                  TZE     s:2784

      516     2767    3           DO;

      517     2768    3               INDX = MSTR_REF.NEXT(I); /* Follow record chain */

   2768  3 000307   000000 236000 xsym               LDQ     I
         3 000310   000012 402007                    MPY     10,DL
         3 000311   000000 236106                    LDQ     0,QL,PR0
         3 000312   000022 736000                    QLS     18
         3 000313   000022 732000                    QRS     18
         3 000314   000001 756000 0                  STQ     INDX

      518     2769    4               DO WHILE(INDX ~= -1);

PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:84   
   2769  3 000315   000360 710000 3                  TRA     s:2782

      519     2770         /* Add rec's mstrindx to reclist unless previously done */
      520     2771    4                   X = 0;

   2771  3 000316   000000 450000 xsym               STZ     X

      521     2772    5                   DO WHILE(X <= RECINDX AND

   2772  3 000317   000321 710000 3                  TRA     s:2775

      522     2773    5                      RECLIST.MSTRINDX(X) ~= REC_XREF.MSTRINDX(INDX));
      523     2774    5                       X = X+1;

   2774  3 000320   000000 054000 xsym               AOS     X

      524     2775    5                       END;

   2775  3 000321   000000 236000 xsym               LDQ     X
         3 000322   000000 116000 xsym               CMPQ    RECINDX
         3 000323   000337 605400 3                  TPNZ    s:2776
         3 000324   000000 470400 xsym               LDP0    REC_XREF$
         3 000325   000001 720000 0                  LXL0    INDX
         3 000326   000000 236110                    LDQ     0,X0,PR0
         3 000327   000001 772000                    QRL     1
         3 000330   377777 376007                    ANQ     131071,DL
         3 000331   200006 756100                    STQ     @SETNAME+1,,AUTO
         3 000332   000000 721000 xsym               LXL1    X
         3 000333   000000 236011 xsym               LDQ     RECLIST,X1
         3 000334   000022 732000                    QRS     18
         3 000335   200006 116100                    CMPQ    @SETNAME+1,,AUTO
         3 000336   000320 601000 3                  TNZ     s:2774

      525     2776    4                   IF X > RECINDX THEN

   2776  3 000337   000000 236000 xsym               LDQ     X
         3 000340   000000 116000 xsym               CMPQ    RECINDX
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:85   
         3 000341   000353 604400 3                  TMOZ    s:2781

      526     2777    5                   DO; /* Rec not prev entered in list */

      527     2778    5                       RECINDX = RECINDX + 1;

   2778  3 000342   000000 054000 xsym               AOS     RECINDX

      528     2779    5                       RECLIST.MSTRINDX(RECINDX) = REC_XREF.MSTRINDX(INDX);

   2779  3 000343   000000 470400 xsym               LDP0    REC_XREF$
         3 000344   000001 720000 0                  LXL0    INDX
         3 000345   000000 236110                    LDQ     0,X0,PR0
         3 000346   000001 772000                    QRL     1
         3 000347   377777 376007                    ANQ     131071,DL
         3 000350   000000 621006                    EAX1    0,QL
         3 000351   000000 722000 xsym               LXL2    RECINDX
         3 000352   000000 741012 xsym               STX1    RECLIST,X2

      529     2780    5                       END;

      530     2781    4                   INDX = REC_XREF.NEXT(INDX);

   2781  3 000353   000000 470400 xsym               LDP0    REC_XREF$
         3 000354   000001 720000 0                  LXL0    INDX
         3 000355   000000 236110                    LDQ     0,X0,PR0
         3 000356   000022 732000                    QRS     18
         3 000357   000001 756000 0                  STQ     INDX

      531     2782    4                   END;

   2782  3 000360   000000 116000 4                  CMPQ    0
         3 000361   000316 601000 3                  TNZ     s:2771

      532     2783    3               END;

      533     2784    2           END;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:86   

   2784  3 000362   000000 054000 xsym               AOS     I
         3 000363   000000 236000 xsym               LDQ     NO_RECS
         3 000364   000000 036000 xsym               ADLQ    NO_SETS
         3 000365   000000 116000 xsym               CMPQ    I
         3 000366   000301 605400 3                  TPNZ    s:2766

      534     2785        %EJECT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:87   
      535     2786        /*
      536     2787           Now that a list of records has been made - create a link list
      537     2788           of records to set members for each record type. Each record entry
      538     2789           will point to a list of sets the record is owner or member and
      539     2790           are also being validated. The sets must be linked in sorted (by
      540     2791           set number) order for proper application of EG-PT decision table.
      541     2792        */
      542     2793    1       SETINDX = 0;

   2793  3 000367   000000 450000 xsym               STZ     SETINDX

      543     2794    1       HIGH_RECINDX = RECINDX;

   2794  3 000370   000000 235000 xsym               LDA     RECINDX
         3 000371   000000 755000 xsym               STA     HIGH_RECINDX

      544     2795    2       DO I = 0 TO RECINDX;

   2795  3 000372   000000 450000 xsym               STZ     I
         3 000373   000553 710000 3                  TRA     s:2839+1

      545     2796    2           RECLIST.SETINDX(I) = SETINDX;

   2796  3 000374   000000 720000 xsym               LXL0    SETINDX
         3 000375   000000 721000 xsym               LXL1    I
         3 000376   000000 440011 xsym               SXL0    RECLIST,X1

      546     2797         /*   Determine if this record is a PA record and if so
      547     2798            only accept one set description from the tables. */
      548     2799    2           INDX = RECLIST.MSTRINDX(I);

   2799  3 000377   000000 236011 xsym               LDQ     RECLIST,X1
         3 000400   000022 732000                    QRS     18
         3 000401   000001 756000 0                  STQ     INDX

      549     2800    2           IF MSTR_REF.PAOFF(INDX)>0 THEN /* PA_REC */

PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:88   
   2800  3 000402   000012 402007                    MPY     10,DL
         3 000403   000000 470400 xsym               LDP0    MSTR$
         3 000404   000011 236106                    LDQ     9,QL,PR0
         3 000405   777000 316003                    CANQ    -512,DU
         3 000406   000412 600000 3                  TZE     s:2803

      550     2801    2               TYPE_PA = %YES#;

   2801  3 000407   400000 236003                    LDQ     -131072,DU
         3 000410   000003 756000 0                  STQ     TYPE_PA
         3 000411   000413 710000 3                  TRA     s:2804

      551     2802    2           ELSE
      552     2803    2               TYPE_PA = %NO#;

   2803  3 000412   000003 450000 0                  STZ     TYPE_PA

      553     2804    2           INDX = MSTR_REF.NEXT(INDX);

   2804  3 000413   000001 236000 0                  LDQ     INDX
         3 000414   000012 402007                    MPY     10,DL
         3 000415   000000 236106                    LDQ     0,QL,PR0
         3 000416   000022 736000                    QLS     18
         3 000417   000022 732000                    QRS     18
         3 000420   000001 756000 0                  STQ     INDX

      554     2805    3           DO WHILE(INDX ~= -1);

   2805  3 000421   000455 710000 3                  TRA     s:2815

      555     2806    3               IF MSTR_REF.SET.FLG(SET_XREF.MSTRINDX(INDX)) = %YES# THEN

   2806  3 000422   000001 235000 0                  LDA     INDX
         3 000423   000002 735000                    ALS     2
         3 000424   000000 470400 xsym               LDP0    SET_XREF$
         3 000425   000000 236105                    LDQ     0,AL,PR0
         3 000426   000022 732000                    QRS     18
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:89   
         3 000427   000012 402007                    MPY     10,DL
         3 000430   000000 471400 xsym               LDP1    MSTR$
         3 000431   100011 236106                    LDQ     9,QL,PR1
         3 000432   000040 316003                    CANQ    32,DU
         3 000433   000442 600000 3                  TZE     s:2811

      556     2807    4               DO;

      557     2808    4                   SETLIST(SETINDX) = INDX;

   2808  3 000434   000000 235000 xsym               LDA     SETINDX
         3 000435   000001 735000                    ALS     1
         3 000436   000005 101400                    MRL     fill='000'O
         3 000437   000001 000004 0                  ADSC9   INDX                     cn=0,n=4
         3 000440   000000 000002 xsym               ADSC9   SETLIST,A                cn=0,n=2

      558     2809    4                   SETINDX = SETINDX + 1;

   2809  3 000441   000000 054000 xsym               AOS     SETINDX

      559     2810    4                   END;

      560     2811    3               IF TYPE_PA = %YES# THEN

   2811  3 000442   000003 234000 0                  SZN     TYPE_PA
         3 000443   000447 605000 3                  TPL     s:2814

      561     2812    3                   INDX = -1; /* Terminate set extractions to */

   2812  3 000444   000001 335007                    LCA     1,DL
         3 000445   000001 755000 0                  STA     INDX
         3 000446   000455 710000 3                  TRA     s:2815

      562     2813    3               ELSE /* avoid duplicate PA entries. */
      563     2814    3                   INDX = SET_XREF.NEXT(INDX);

   2814  3 000447   000001 235000 0                  LDA     INDX
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:90   
         3 000450   000002 735000                    ALS     2
         3 000451   000000 236105                    LDQ     0,AL,PR0
         3 000452   000022 736000                    QLS     18
         3 000453   000022 732000                    QRS     18
         3 000454   000001 756000 0                  STQ     INDX

      564     2815    3               END;

   2815  3 000455   000001 235000 0                  LDA     INDX
         3 000456   000000 115000 4                  CMPA    0
         3 000457   000422 601000 3                  TNZ     s:2806

      565     2816         /*
      566     2817            Sort the set indexs in assending order.
      567     2818         */
      568     2819    2           J = RECLIST.SETINDX(I);

   2819  3 000460   000000 720000 xsym               LXL0    I
         3 000461   000000 236010 xsym               LDQ     RECLIST,X0
         3 000462   000022 736000                    QLS     18
         3 000463   000022 732000                    QRS     18
         3 000464   000000 756000 xsym               STQ     J

      569     2820    2   STRTSORT:
      570     2821    2           IF SETINDX - J = 1 THEN /* Only 1 set entry (no sort needed) */

   2821  3 000465   000000 236000 xsym  STRTSORT     LDQ     SETINDX
         3 000466   000000 136000 xsym               SBLQ    J
         3 000467   000001 116007                    CMPQ    1,DL
         3 000470   000544 600000 3                  TZE     CMPLTSORT

      571     2822    2               GOTO CMPLTSORT;
      572     2823    2           IF SET_XREF.MSTRINDX(SETLIST(J)) > SET_XREF.MSTRINDX(SETLIST(J+1)) THEN

   2823  3 000471   000000 235000 xsym               LDA     J
         3 000472   000001 735000                    ALS     1
         3 000473   000100 100405                    MLR     fill='000'O
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:91   
         3 000474   000000 000002 xsym               ADSC9   SETLIST,A                cn=0,n=2
         3 000475   200006 000004                    ADSC9   @SETNAME+1,,AUTO         cn=0,n=4
         3 000476   200006 236100                    LDQ     @SETNAME+1,,AUTO
         3 000477   000022 732000                    QRS     18
         3 000500   000002 736000                    QLS     2
         3 000501   000100 100405                    MLR     fill='000'O
         3 000502   000000 400002 xsym               ADSC9   SETLIST,A                cn=2,n=2
         3 000503   200007 000004                    ADSC9   @SETNAME+2,,AUTO         cn=0,n=4
         3 000504   000000 620006                    EAX0    0,QL
         3 000505   200007 236100                    LDQ     @SETNAME+2,,AUTO
         3 000506   000022 732000                    QRS     18
         3 000507   000002 736000                    QLS     2
         3 000510   000000 470400 xsym               LDP0    SET_XREF$
         3 000511   000000 221110                    LDX1    0,X0,PR0
         3 000512   000000 101106                    CMPX1   0,QL,PR0
         3 000513   000536 604400 3                  TMOZ    s:2831

      573     2824    3           DO;

      574     2825    3               TEMP = SETLIST(J);

   2825  3 000514   000100 100405                    MLR     fill='000'O
         3 000515   000000 000002 xsym               ADSC9   SETLIST,A                cn=0,n=2
         3 000516   200006 000004                    ADSC9   @SETNAME+1,,AUTO         cn=0,n=4
         3 000517   200006 236100                    LDQ     @SETNAME+1,,AUTO
         3 000520   000022 732000                    QRS     18
         3 000521   000002 756000 0                  STQ     TEMP

      575     2826    3               SETLIST(J) = SETLIST(J+1);

   2826  3 000522   000005 100405                    MLR     fill='000'O
         3 000523   000000 400002 xsym               ADSC9   SETLIST,A                cn=2,n=2
         3 000524   000000 000002 xsym               ADSC9   SETLIST,A                cn=0,n=2

      576     2827    3               SETLIST(J+1) = TEMP;

   2827  3 000525   000005 101400                    MRL     fill='000'O
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:92   
         3 000526   000002 000004 0                  ADSC9   TEMP                     cn=0,n=4
         3 000527   000000 400002 xsym               ADSC9   SETLIST,A                cn=2,n=2

      577     2828    3               J = RECLIST.SETINDX(I);

   2828  3 000530   000000 720000 xsym               LXL0    I
         3 000531   000000 236010 xsym               LDQ     RECLIST,X0
         3 000532   000022 736000                    QLS     18
         3 000533   000022 732000                    QRS     18
         3 000534   000000 756000 xsym               STQ     J

      578     2829    3               END;

   2829  3 000535   000543 710000 3                  TRA     s:2835

      579     2830    3           ELSE DO;

      580     2831    3               J = J+1;

   2831  3 000536   000000 054000 xsym               AOS     J

      581     2832    3               IF J = SETINDX -1 THEN

   2832  3 000537   000000 236000 xsym               LDQ     SETINDX
         3 000540   000001 136007                    SBLQ    1,DL
         3 000541   000000 116000 xsym               CMPQ    J
         3 000542   000544 600000 3                  TZE     CMPLTSORT

      582     2833    3                   GOTO CMPLTSORT;
      583     2834    3               END;

      584     2835    2           GOTO STRTSORT;

   2835  3 000543   000465 710000 3                  TRA     STRTSORT

      585     2836    2   CMPLTSORT:
      586     2837    2           SETLIST(SETINDX) = -1;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:93   

   2837  3 000544   000000 235000 xsym  CMPLTSORT    LDA     SETINDX
         3 000545   000001 735000                    ALS     1
         3 000546   000005 101400                    MRL     fill='000'O
         3 000547   000000 000004 4                  ADSC9   0                        cn=0,n=4
         3 000550   000000 000002 xsym               ADSC9   SETLIST,A                cn=0,n=2

      587     2838    2           SETINDX = SETINDX +1;

   2838  3 000551   000000 054000 xsym               AOS     SETINDX

      588     2839    2           END;

   2839  3 000552   000000 054000 xsym               AOS     I
         3 000553   000000 236000 xsym               LDQ     I
         3 000554   000000 116000 xsym               CMPQ    RECINDX
         3 000555   000374 604400 3                  TMOZ    s:2796

      589     2840
      590     2841    1       IF SETINDX > 0 THEN /* Bad sets found or selected by CHKVAL */

   2841  3 000556   000000 235000 xsym               LDA     SETINDX
         3 000557   000562 604400 3                  TMOZ    s:2844

      591     2842    1           CALL PRINT_REPORT ALTRET(ALT_CHK);

   2842  3 000560   000563 701000 3                  TSX1    PRINT_REPORT
         3 000561   001003 702000 3                  TSX2    ALT_CHK

      592     2843
      593     2844    1       RETURN;

   2844  3 000562   000000 702200 xent               TSX2  ! X66_ARET

      594     2845        %EJECT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:94   
      595     2846        /*
      596     2847           Print a report on sets and records to be validated.
      597     2848        */
      598     2849    1   PRINT_REPORT: PROC ALTRET;

   2849  3 000563   200004 741300       PRINT_REPORT STX1  ! 4,,AUTO

      599     2850
      600     2851    2   DCL
      601     2852    2    1 REPRTHEAD STATIC CALIGNED,
      602     2853    2    2 VFC CHAR(1) CALIGNED INIT('A'),
      603     2854    2    2 * CHAR(69) CALIGNED INIT
      604     2855    2    ('The following records will participate in this validation process:');
      605     2856    2   DCL
      606     2857    2    1 REPRTHEAD2 STATIC CALIGNED,
      607     2858    2    2 VFC CHAR(1) CALIGNED INIT('A'),
      608     2859    2    2 * CHAR(60) CALIGNED INIT
      609     2860    2    ('            RECORD NAME                    SET NAME');
      610     2861    2   DCL
      611     2862    2    1 REPRTHEAD3 STATIC CALIGNED,
      612     2863    2    2 VFC CHAR(1) CALIGNED INIT('A'),
      613     2864    2    2 * CHAR(60) CALIGNED INIT
      614     2865    2    ('            -----------                    --------');
      615     2866    2   DCL
      616     2867    2    1 DETAILINE STATIC CALIGNED,
      617     2868    2    2 VFC CHAR(1) CALIGNED INIT('A'),
      618     2869    2    2 FIL CHAR(12) CALIGNED INIT(' '),
      619     2870    2    2 REC CHAR(31) CALIGNED,
      620     2871    2    2 SET CHAR(31) CALIGNED;
      621     2872
      622     2873    2       DCBSF = DCBNUM(M$LO);

   2873  3 000564   000000 236007 xsym               LDQ     M$LO,DL
         3 000565   000000 620006                    EAX0    0,QL
         3 000566   000000 740000 xsym               STX0    DCBSF

      623     2874    2       BUFLNSF = 67;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:95   

   2874  3 000567   000103 235007                    LDA     67,DL
         3 000570   000000 755000 xsym               STA     BUFLNSF

      624     2875    2       BUFSF = VECTOR(REPRTHEAD);

   2875  3 000571   000012 237000 4                  LDAQ    10
         3 000572   000000 755000 xsym               STA     BUFSF
         3 000573   000001 756000 xsym               STQ     BUFSF+1

      625     2876    2       CALL SYS_FUNC_WRIT;

   2876  3 000574   000005 631400 4                  EPPR1   5
         3 000575   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000576   000000 011000                    NOP     0

      626     2877    2       BUFLNSF = 1;

   2877  3 000577   000001 235007                    LDA     1,DL
         3 000600   000000 755000 xsym               STA     BUFLNSF

      627     2878    2       CALL SYS_FUNC_WRIT; /* Write a blank link */

   2878  3 000601   000005 631400 4                  EPPR1   5
         3 000602   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000603   000000 011000                    NOP     0

      628     2879
      629     2880    2       BUFLNSF = 60;

   2880  3 000604   000074 235007                    LDA     60,DL
         3 000605   000000 755000 xsym               STA     BUFLNSF

      630     2881    2       BUFSF = VECTOR(REPRTHEAD2);

   2881  3 000606   000014 237000 4                  LDAQ    12
         3 000607   000000 755000 xsym               STA     BUFSF
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:96   
         3 000610   000001 756000 xsym               STQ     BUFSF+1

      631     2882    2       CALL SYS_FUNC_WRIT;

   2882  3 000611   000005 631400 4                  EPPR1   5
         3 000612   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000613   000000 011000                    NOP     0

      632     2883
      633     2884    2       BUFSF = VECTOR(REPRTHEAD3);

   2884  3 000614   000016 237000 4                  LDAQ    14
         3 000615   000000 755000 xsym               STA     BUFSF
         3 000616   000001 756000 xsym               STQ     BUFSF+1

      634     2885    2       CALL SYS_FUNC_WRIT;

   2885  3 000617   000005 631400 4                  EPPR1   5
         3 000620   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000621   000000 011000                    NOP     0

      635     2886
      636     2887    3       DO I = 0 TO RECINDX;

   2887  3 000622   000000 450000 xsym               STZ     I
         3 000623   000750 710000 3                  TRA     s:2907+1

      637     2888    3           DETAILINE.REC = MSTR_REF.NAME(RECLIST.MSTRINDX(I));

   2888  3 000624   000000 720000 xsym               LXL0    I
         3 000625   000000 236010 xsym               LDQ     RECLIST,X0
         3 000626   000022 732000                    QRS     18
         3 000627   000012 402007                    MPY     10,DL
         3 000630   000002 736000                    QLS     2
         3 000631   000000 470400 xsym               LDP0    MSTR$
         3 000632   040000 100506                    MLR     fill='040'O
         3 000633   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:97   
         3 000634   000071 200037 0                  ADSC9   DETAILINE+3              cn=1,n=31

      638     2889    3           DETAILINE.SET =

   2889  3 000635   000000 236010 xsym               LDQ     RECLIST,X0
         3 000636   000022 736000                    QLS     18
         3 000637   000022 732000                    QRS     18
         3 000640   000001 736000                    QLS     1
         3 000641   000100 100406                    MLR     fill='000'O
         3 000642   000000 000002 xsym               ADSC9   SETLIST,Q                cn=0,n=2
         3 000643   200006 000004                    ADSC9   @SETNAME+1,,AUTO         cn=0,n=4
         3 000644   200006 236100                    LDQ     @SETNAME+1,,AUTO
         3 000645   000022 732000                    QRS     18
         3 000646   000002 736000                    QLS     2
         3 000647   000000 471400 xsym               LDP1    SET_XREF$
         3 000650   100000 236106                    LDQ     0,QL,PR1
         3 000651   000022 732000                    QRS     18
         3 000652   000012 402007                    MPY     10,DL
         3 000653   000002 736000                    QLS     2
         3 000654   040000 100506                    MLR     fill='040'O
         3 000655   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         3 000656   000101 000037 0                  ADSC9   DETAILINE+11             cn=0,n=31

      639     2890    3              MSTR_REF.NAME(SET_XREF.MSTRINDX(SETLIST(RECLIST.SETINDX(I))));
      640     2891
      641     2892    3           BUFLNSF = 72;

   2892  3 000657   000110 235007                    LDA     72,DL
         3 000660   000000 755000 xsym               STA     BUFLNSF

      642     2893    3           BUFSF = VECTOR(DETAILINE);

   2893  3 000661   000020 237000 4                  LDAQ    16
         3 000662   000000 755000 xsym               STA     BUFSF
         3 000663   000001 756000 xsym               STQ     BUFSF+1

      643     2894    3           CALL SYS_FUNC_WRIT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:98   

   2894  3 000664   000005 631400 4                  EPPR1   5
         3 000665   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000666   000000 011000                    NOP     0

      644     2895    3           DETAILINE.REC = ' ';

   2895  3 000667   040000 100400                    MLR     fill='040'O
         3 000670   000022 000001 4                  ADSC9   18                       cn=0,n=1
         3 000671   000071 200037 0                  ADSC9   DETAILINE+3              cn=1,n=31

      645     2896    3           INDX = RECLIST.SETINDX(I) + 1;

   2896  3 000672   000000 720000 xsym               LXL0    I
         3 000673   000000 236010 xsym               LDQ     RECLIST,X0
         3 000674   000022 736000                    QLS     18
         3 000675   000022 732000                    QRS     18
         3 000676   000001 036007                    ADLQ    1,DL
         3 000677   000001 756000 0                  STQ     INDX

      646     2897
      647     2898    4           DO WHILE(SETLIST(INDX) ~= -1);

   2898  3 000700   000726 710000 3                  TRA     s:2902

      648     2899    4               DETAILINE.SET = MSTR_REF.NAME(SET_XREF.MSTRINDX(SETLIST(INDX)));

   2899  3 000701   000001 235000 0                  LDA     INDX
         3 000702   000001 735000                    ALS     1
         3 000703   000100 100405                    MLR     fill='000'O
         3 000704   000000 000002 xsym               ADSC9   SETLIST,A                cn=0,n=2
         3 000705   200006 000004                    ADSC9   @SETNAME+1,,AUTO         cn=0,n=4
         3 000706   200006 236100                    LDQ     @SETNAME+1,,AUTO
         3 000707   000022 732000                    QRS     18
         3 000710   000002 736000                    QLS     2
         3 000711   000000 470400 xsym               LDP0    SET_XREF$
         3 000712   000000 236106                    LDQ     0,QL,PR0
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:99   
         3 000713   000022 732000                    QRS     18
         3 000714   000012 402007                    MPY     10,DL
         3 000715   000002 736000                    QLS     2
         3 000716   000000 471400 xsym               LDP1    MSTR$
         3 000717   040000 100506                    MLR     fill='040'O
         3 000720   100001 400036                    ADSC9   1,Q,PR1                  cn=2,n=30
         3 000721   000101 000037 0                  ADSC9   DETAILINE+11             cn=0,n=31

      649     2900    4               CALL SYS_FUNC_WRIT;

   2900  3 000722   000005 631400 4                  EPPR1   5
         3 000723   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000724   000000 011000                    NOP     0

      650     2901    4               INDX = INDX +1;

   2901  3 000725   000001 054000 0                  AOS     INDX

      651     2902    4               END;

   2902  3 000726   000001 235000 0                  LDA     INDX
         3 000727   000001 735000                    ALS     1
         3 000730   000100 100405                    MLR     fill='000'O
         3 000731   000000 000002 xsym               ADSC9   SETLIST,A                cn=0,n=2
         3 000732   200006 000004                    ADSC9   @SETNAME+1,,AUTO         cn=0,n=4
         3 000733   200006 236100                    LDQ     @SETNAME+1,,AUTO
         3 000734   000022 732000                    QRS     18
         3 000735   000000 116000 4                  CMPQ    0
         3 000736   000701 601000 3                  TNZ     s:2899

      652     2903
      653     2904    3           BUFLNSF = 60;

   2904  3 000737   000074 236007                    LDQ     60,DL
         3 000740   000000 756000 xsym               STQ     BUFLNSF

      654     2905    3           BUFSF = VECTOR(REPRTHEAD3);
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:100  

   2905  3 000741   000016 237000 4                  LDAQ    14
         3 000742   000000 755000 xsym               STA     BUFSF
         3 000743   000001 756000 xsym               STQ     BUFSF+1

      655     2906    3           CALL SYS_FUNC_WRIT;

   2906  3 000744   000005 631400 4                  EPPR1   5
         3 000745   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000746   000000 011000                    NOP     0

      656     2907    3           END;

   2907  3 000747   000000 054000 xsym               AOS     I
         3 000750   000000 236000 xsym               LDQ     I
         3 000751   000000 116000 xsym               CMPQ    RECINDX
         3 000752   000624 604400 3                  TMOZ    s:2888

      657     2908
      658     2909    2       RETURN;

   2909  3 000753   200004 221300                    LDX1  ! 4,,AUTO
         3 000754   000001 702211                    TSX2  ! 1,X1

      659     2910
      660     2911    2   END PRINT_REPORT;
      661     2912
      662     2913        %EJECT;
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:101  
      663     2914    1   SET_ERROR: PROC(SETNAME);

   2914  3 000755   200004 741300       SET_ERROR    STX1  ! 4,,AUTO

      664     2915    2   DCL SETNAME CHAR(30);
      665     2916
      666     2917         /*E* ERROR: ZIU-DBU#NSETNM-C
      667     2918              MESSAGE: Set name "%U1" does not exist.     */
      668     2919    2       ERR_INSERT.TEXT(0) = SETNAME;

   2919  3 000756   200005 470500                    LDP0    @SETNAME,,AUTO
         3 000757   040000 100500                    MLR     fill='040'O
         3 000760   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30
         3 000761   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      669     2920    2       CALL INDEX(INDX,' ',SETNAME);

   2920  3 000762   000000 124500                    SCM     mask='000'O
         3 000763   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30
         3 000764   000022 000001 4                  ADSC9   18                       cn=0,n=1
         3 000765   000001 000000 0                  ARG     INDX

      670     2921    2       ERR_INSERT.CNT(0) = INDX;

   2921  3 000766   000001 236000 0                  LDQ     INDX
         3 000767   000033 736000                    QLS     27
         3 000770   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      671     2922    2       ERRCODESF.ERR# = DBU#NSETNM;

   2922  3 000771   000000 236000 xsym               LDQ     ERRCODESF
         3 000772   000023 376000 4                  ANQ     19
         3 000773   215560 276007                    ORQ     72560,DL
         3 000774   000000 756000 xsym               STQ     ERRCODESF

      672     2923    2       MSGCODE = ERRCODE_RDEF;

PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:102  
   2923  3 000775   000000 756000 xsym               STQ     MSGCODE

      673     2924    2       CALL SYS_FUNC_ERRMSG;

   2924  3 000776   000005 631400 4                  EPPR1   5
         3 000777   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         3 001000   000000 011000                    NOP     0

      674     2925    2       RETURN;

   2925  3 001001   200004 221300                    LDX1  ! 4,,AUTO
         3 001002   000001 702211                    TSX2  ! 1,X1

      675     2926
      676     2927    2   END SET_ERROR;
      677     2928    1   ALT_CHK:
      678     2929    1       ALTRETURN;

   2929  3 001003   000000 702200 xent  ALT_CHK      TSX2  ! X66_AALT

REPRTHEAD
 Sect OctLoc
   0     004   101124 150145   040146 157154   154157 167151   156147 040162    AThe following r
   0     010   145143 157162   144163 040167   151154 154040   160141 162164    ecords will part
   0     014   151143 151160   141164 145040   151156 040164   150151 163040    icipate in this
   0     020   166141 154151   144141 164151   157156 040160   162157 143145    validation proce
   0     024   163163 072040   040040 ******                                    ss:   ..

REPRTHEAD2
 Sect OctLoc
   0     026   101040 040040   040040 040040   040040 040040   040122 105103    A            REC
   0     032   117122 104040   116101 115105   040040 040040   040040 040040    ORD NAME
   0     036   040040 040040   040040 040040   040040 040040   123105 124040                SET
   0     042   116101 115105   040040 040040   040040 040040   040*** ******    NAME         ...

REPRTHEAD3
 Sect OctLoc
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:103  
   0     046   101040 040040   040040 040040   040040 040040   040055 055055    A            ---
   0     052   055055 055055   055055 055055   040040 040040   040040 040040    --------
   0     056   040040 040040   040040 040040   040040 040040   055055 055055                ----
   0     062   055055 055055   040040 040040   040040 040040   040*** ******    ----         ...

DETAILINE
 Sect OctLoc
   0     066   101040 040040   040040 040040   040040 040040   040*** ******    A            ...
   0     106*  ****** ******   ****** ******   ****** ******                    ............

(unnamed)
 Sect OctLoc
   4     000   777777 777777   776777 777777   777737 777777   000001 000000    ................
   4     004   000234 006000   000000 000000   000002 000000   000000 006000    ................
   4     010   000000 006000   000000 006000   000021 377640   000004 006000    ................
   4     014   000017 177640   000026 006000   000017 177640   000046 006000    .............&..
   4     020   000022 577640   000066 006000   040040 040040   777777 400007    .....6..    ....
      679     2930    1   END ZIU$CHKVAL;
      680     2931        %EOD;

PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:104  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_VALDTE.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$CHKVAL.

   Procedure ZIU$CHKVAL requires 516 words for executable code.
   Procedure ZIU$CHKVAL requires 8 words of local(AUTO) storage.
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:105  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:106  
          MINI XREF LISTING

ALT_CHK
      2929**LABEL    2714--CALLALT  2715--CALLALT  2729--CALLALT  2842--CALLALT
AREANO
        15**DCL      2711<<DOINDEX  2712>>ASSIGN
AREA_KEY$
      1142**DCL      1145--IMP-PTR  2712>>ASSIGN
AREA_KEY_XREF.NAME
      1148**DCL      2712>>ASSIGN
ATBLK$
       863**DCL       864--IMP-PTR
ATBLK_PG.AREA_NM
       889**DCL       890--REDEF
ATBLK_PG.STATUS
       898**DCL       906--REDEF
BUFLNSF
       644**DCL      2874<<ASSIGN   2877<<ASSIGN   2880<<ASSIGN   2892<<ASSIGN   2904<<ASSIGN
BUFSF
       645**DCL      2875<<ASSIGN   2881<<ASSIGN   2884<<ASSIGN   2893<<ASSIGN   2905<<ASSIGN
CMPLTSORT
      2837**LABEL    2822--GOTO     2833--GOTO
COUNTSF
       695**DCL       696--REDEF
CURRPT.OWNER
       334**DCL       335--REDEF
DATA$
       919**DCL       920--IMP-PTR
DATA_PG.ACT_DATA
       932**DCL       933--REDEF     934--REDEF     935--REDEF
DCBSF
       624**DCL      2873<<ASSIGN
DETAILINE IN PROCEDURE PRINT_REPORT
      2866**DCL      2893--ASSIGN
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:107  
DETAILINE.REC IN PROCEDURE PRINT_REPORT
      2870**DCL      2888<<ASSIGN   2895<<ASSIGN
DETAILINE.SET IN PROCEDURE PRINT_REPORT
      2871**DCL      2889<<ASSIGN   2899<<ASSIGN
EGREC$
       312**DCL       317--IMP-PTR
ENCRP_SEEDSF
       653**DCL       654--REDEF
ERRBUF$
       350**DCL       351--IMP-PTR   356--IMP-PTR   363--IMP-PTR   371--IMP-PTR   377--IMP-PTR   383--IMP-PTR
       391--IMP-PTR   402--IMP-PTR
ERRCODESF
       655**DCL       660--REDEF
ERRCODESF.ERR#
       658**DCL      2922<<ASSIGN
ERRCODE_RDEF
       660**DCL      2923>>ASSIGN
ERR_INSERT.CNT
       669**DCL      2921<<ASSIGN
ERR_INSERT.TEXT
       670**DCL      2919<<ASSIGN
F$DCB.ACTPOS
      1813**DCL      1813--REDEF
F$DCB.ARS#
      1787**DCL      1787--REDEF
F$DCB.ATTR
      1806**DCL      1807--REDEF
F$DCB.BORROW
      1821**DCL      1821--REDEF    1821--REDEF    1821--REDEF
F$DCB.DCBNAME.L
      1835**DCL      1835--IMP-SIZ
F$DCB.EOMCHAR#
      1791**DCL      1791--REDEF
F$DCB.FLDID
      1816**DCL      1816--REDEF
F$DCB.FORM$
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:108  
      1810**DCL      1810--REDEF
F$DCB.FSECT
      1826**DCL      1826--REDEF
F$DCB.FSN#
      1803**DCL      1803--REDEF    1803--REDEF    1804--REDEF
F$DCB.HEADER$
      1809**DCL      1809--REDEF
F$DCB.IXTNSIZE#
      1807**DCL      1807--REDEF
F$DCB.LASTSTA$
      1796**DCL      1796--REDEF
F$DCB.LVL
      1822**DCL      1822--REDEF
F$DCB.NAME#.C
      1797**DCL      1797--REDEF
F$DCB.NOEOF
      1819**DCL      1819--REDEF
F$DCB.NRECS#
      1808**DCL      1808--REDEF
F$DCB.NRECX
      1827**DCL      1827--REDEF
F$DCB.OHDR
      1819**DCL      1819--REDEF
F$DCB.ORG#
      1802**DCL      1802--REDEF
F$DCB.PRECNO
      1825**DCL      1825--REDEF
F$DCB.RCSZ
      1831**DCL      1831--REDEF
F$DCB.RES#
      1798**DCL      1798--REDEF
F$DCB.SETX
      1810**DCL      1810--REDEF
F$DCB.TAB$
      1810**DCL      1810--REDEF
F$DCB.TDA
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:109  
      1824**DCL      1825--REDEF
F$DCB.WSN#
      1798**DCL      1798--REDEF
FIDSF_RD
       671**DCL       672--REDEF
FIND_MSTR_ENTRY
      2683**DCL-ENT  2735--CALL     2749--CALL
GET_DCB
      2684**DCL-ENT  2714--CALL
HELPCODE
       689**DCL       694--REDEF
HIGH_RECINDX
       311**DCL      2794<<ASSIGN
I
       727**DCL      2705<<DOINDEX  2706>>ASSIGN   2718<<DOINDEX  2719>>ASSIGN   2719>>ASSIGN   2720>>ASSIGN
      2720>>ASSIGN   2722>>IF       2722>>IF       2724>>ASSIGN   2725>>IF       2726>>ASSIGN   2734<<DOINDEX
      2735>>CALL     2741>>CALL     2748<<DOINDEX  2749>>CALL     2755>>CALL     2765<<DOINDEX  2766>>IF
      2768>>ASSIGN   2795<<DOINDEX  2796>>ASSIGN   2799>>ASSIGN   2819>>ASSIGN   2828>>ASSIGN   2887<<DOINDEX
      2888>>ASSIGN   2889>>ASSIGN   2896>>ASSIGN
ICHKSUM
       754**DCL       755--REDEF
INDX
        16**DCL      2768<<ASSIGN   2769>>DOWHILE  2772>>DOWHILE  2779>>ASSIGN   2781<<ASSIGN   2781>>ASSIGN
      2799<<ASSIGN   2800>>IF       2804<<ASSIGN   2804>>ASSIGN   2805>>DOWHILE  2806>>IF       2808>>ASSIGN
      2812<<ASSIGN   2814<<ASSIGN   2814>>ASSIGN   2896<<ASSIGN   2898>>DOWHILE  2899>>ASSIGN   2901<<ASSIGN
      2901>>ASSIGN   2920<<CALLBLT  2921>>ASSIGN
ITEM_LIST.NAME
      2674**DCL      2749<>CALL     2755<>CALL
ITMCNT
       756**DCL      2695>>IF       2748>>DOINDEX
I_O_BUF$
       732**DCL       733--IMP-PTR
J
       728**DCL      2819<<ASSIGN   2821>>IF       2823>>IF       2823>>IF       2825>>ASSIGN   2826>>ASSIGN
      2826>>ASSIGN   2827>>ASSIGN   2828<<ASSIGN   2831<<ASSIGN   2831>>ASSIGN   2832>>IF
KEYVSF
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:110  
       627**DCL       632--REDEF
KEYVSF.WD_ONE
       629**DCL       630--REDEF
M$LO
       742**DCL      2873>>ASSIGN
MSGCODE
       661**DCL       662--REDEF    2923<<ASSIGN
MSTR$
      1111**DCL      1114--IMP-PTR  2706>>ASSIGN   2722>>IF       2722>>IF       2724>>ASSIGN   2725>>IF
      2726>>ASSIGN   2738>>ASSIGN   2752>>ASSIGN   2766>>IF       2768>>ASSIGN   2800>>IF       2804>>ASSIGN
      2806>>IF       2888>>ASSIGN   2889>>ASSIGN   2899>>ASSIGN
MSTR_INDX
      1137**DCL      2735<>CALL     2736>>IF       2738>>ASSIGN   2749<>CALL     2750>>IF       2752>>ASSIGN
MSTR_REF.NAME
      1119**DCL      2888>>ASSIGN   2889>>ASSIGN   2899>>ASSIGN
MSTR_REF.NEXT
      1116**DCL      2768>>ASSIGN   2804>>ASSIGN
MSTR_REF.NXTHSH
      1117**DCL      1118--REDEF
MSTR_REF.PAENT
      1123**DCL      1124--REDEF
MSTR_REF.PAOFF
      1120**DCL      1121--REDEF    2800>>IF
MSTR_REF.SET.FLG
      1125**DCL      2706<<ASSIGN   2724<<ASSIGN   2726<<ASSIGN   2738<<ASSIGN   2752<<ASSIGN   2766>>IF
      2806>>IF
MSTR_REF.SET.INMODE
      1127**DCL      2722>>IF
MSTR_REF.SET.PATYPE
      1129**DCL      2725>>IF
MSTR_REF.SET.RETYPE
      1128**DCL      2722>>IF
NO_AREAS
      1153**DCL      2711>>DOINDEX
NO_RECS
      1173**DCL      2705>>DOINDEX  2705>>DOINDEX  2718>>DOINDEX  2718>>DOINDEX  2719>>ASSIGN   2719>>ASSIGN
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:111  
      2720>>ASSIGN   2720>>ASSIGN   2765>>DOINDEX  2765>>DOINDEX
NO_SETS
      1174**DCL      2705>>DOINDEX  2718>>DOINDEX  2765>>DOINDEX
NXTVAL
        20**DCL      2720<<ASSIGN   2721>>IF       2722>>IF       2725>>IF
PRINT_REPORT
      2849**PROC     2842--CALL
PRIVAL
        19**DCL      2719<<ASSIGN   2721>>IF       2722>>IF
RCNT
       720**DCL      2695>>IF       2734>>DOINDEX
REC$
       713**DCL       736--IMP-PTR
RECINDX
       310**DCL      2764<<ASSIGN   2772>>DOWHILE  2776>>IF       2778<<ASSIGN   2778>>ASSIGN   2779>>ASSIGN
      2794>>ASSIGN   2795>>DOINDEX  2887>>DOINDEX
RECLIST.MSTRINDX
       306**DCL      2772>>DOWHILE  2779<<ASSIGN   2799>>ASSIGN   2888>>ASSIGN
RECLIST.SETINDX
       307**DCL      2796<<ASSIGN   2819>>ASSIGN   2828>>ASSIGN   2889>>ASSIGN   2896>>ASSIGN
RECORD_LIST.NAME
      2653**DCL      2735<>CALL     2741<>CALL
REC_DATA_LN
       741**DCL       740--IMP-SIZ
REC_XREF.MSTRINDX
      1169**DCL      2772>>DOWHILE  2779>>ASSIGN
REC_XREF.NEXT
      1168**DCL      2781>>ASSIGN
REC_XREF$
      1166**DCL      1167--IMP-PTR  2772>>DOWHILE  2779>>ASSIGN   2781>>ASSIGN
REPORT_CHK
      2688**DCL-ENT  2729--CALL
REPRTHEAD IN PROCEDURE PRINT_REPORT
      2851**DCL      2875--ASSIGN
REPRTHEAD2 IN PROCEDURE PRINT_REPORT
      2856**DCL      2881--ASSIGN
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:112  
REPRTHEAD3 IN PROCEDURE PRINT_REPORT
      2861**DCL      2884--ASSIGN   2905--ASSIGN
SETCNT.DBK
        24**DCL      2719>>ASSIGN   2720>>ASSIGN
SETCNT.NXT
        23**DCL      2720>>ASSIGN
SETCNT.PR
        22**DCL      2719>>ASSIGN
SETINDX
       309**DCL      2793<<ASSIGN   2796>>ASSIGN   2808>>ASSIGN   2809<<ASSIGN   2809>>ASSIGN   2821>>IF
      2832>>IF       2837>>ASSIGN   2838<<ASSIGN   2838>>ASSIGN   2841>>IF
SETLIST
       308**DCL      2808<<ASSIGN   2823>>IF       2823>>IF       2825>>ASSIGN   2826<<ASSIGN   2826>>ASSIGN
      2827<<ASSIGN   2837<<ASSIGN   2889>>ASSIGN   2898>>DOWHILE  2899>>ASSIGN
SETNAME IN PROCEDURE SET_ERROR
      2915**DCL      2914--PROC     2919>>ASSIGN   2920>>CALLBLT
SET_ERROR
      2914**PROC     2741--CALL     2755--CALL
SET_XREF.MSTRINDX
      1157**DCL      2806>>IF       2823>>IF       2823>>IF       2889>>ASSIGN   2899>>ASSIGN
SET_XREF.NEXT
      1158**DCL      2814>>ASSIGN
SET_XREF$
      1155**DCL      1156--IMP-PTR  2806>>IF       2814>>ASSIGN   2823>>IF       2823>>IF       2889>>ASSIGN
      2899>>ASSIGN
STRTSORT
      2821**LABEL    2835--GOTO
SYS_FUNC_ERRMSG
      2687**DCL-ENT  2924--CALL
SYS_FUNC_WRIT
      2686**DCL-ENT  2876--CALL     2878--CALL     2882--CALL     2885--CALL     2894--CALL     2900--CALL
      2906--CALL
TEMP
        17**DCL      2825<<ASSIGN   2827>>ASSIGN
TYPE_PA
        26**DCL      2801<<ASSIGN   2803<<ASSIGN   2811>>IF
PL6.E3A0      #002=ZIU$CHKVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:113  
X
       730**DCL      2771<<ASSIGN   2772>>DOWHILE  2772>>DOWHILE  2774<<ASSIGN   2774>>ASSIGN   2776>>IF
ZI$DIR.ALTKEY
      2606**DCL      2607--REDEF    2608--REDEF
ZI$DIR.AREAFID
      2572**DCL      2573--REDEF
ZI$DIR.AREA_NM
      2635**DCL      2714<>CALL
ZI$DIR.AREA_NM.NAME.TEXT
      2638**DCL      2712<<ASSIGN
ZI$DIR.CHECK
      2581**DCL      2692>>IF       2694<<ASSIGN   2697<<ASSIGN   2709>>IF
ZI$DIR.CHECK_ALL
      2624**DCL      2713<<ASSIGN
ZI$DIR.DATE
      2611**DCL      2615--REDEF
ZI$DIR.DEST_SEED
      2567**DCL      2568--REDEF    2569--REDEF
ZI$DIR.ENCP_SEED
      2564**DCL      2565--REDEF    2566--REDEF
ZI$DIR.REPRT_ZERO
      2598**DCL      2599--REDEF
ZI$DIR.SCHFID
      2570**DCL      2571--REDEF
ZI$DIR.TIME
      2616**DCL      2621--REDEF
ZIU$CHECK
      2685**DCL-ENT  2715--CALL

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:114  
      681        1        /*M*  ZIU$GENRCD  IDSII UTILITIES      SET VALIDATION RECORD GENERATION */
      682        2        /*T***********************************************************/
      683        3        /*T*                                                         */
      684        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      685        5        /*T*                                                         */
      686        6        /*T***********************************************************/
      687        7        /*P*
      688        8           NAME: ZIU$GENRCD
      689        9        PURPOSE: This procedure is the input routine for X$SORT used in the
      690       10                 set pointer validation routine. It generates special records
      691       11                 for each set in the data base data records to validate the
      692       12                 sets with.
      693       13        */
      694       14        ZIU$GENRCD: PROC(PTREC,PTSIZE) ALTRET;
      695       15
      696       16    1   DCL AREANO SBIN WORD SYMREF;
      697       17    1   DCL LOW_DBK UBIN WORD SYMREF; /* DEFED IN CHECK */
      698       18    1   DCL HIGH_DATA_PG UBIN WORD SYMREF;
      699       19    1   DCL LPP UBIN WORD SYMREF;
      700       20
      701       21    1   DCL I_O_INDX SBIN WORD STATIC ALIGNED;
      702       22    1   DCL LINE_NO SBIN WORD STATIC ALIGNED;
      703       23    1   DCL CURR_DBK UBIN WORD STATIC ALIGNED;
      704       24    1   DCL SET_LN SBIN WORD STATIC ALIGNED;
      705       25    1   DCL HIGH_LINE SBIN WORD STATIC ALIGNED;
      706       26    1   DCL ENTRYNO SBIN WORD STATIC ALIGNED;
      707       27    1   DCL NO_ENTRIES SBIN WORD STATIC ALIGNED;
      708       28    1   DCL NO_PTRS SBIN WORD STATIC ALIGNED;
      709       29    1   DCL RETURNCODE SBIN WORD STATIC ALIGNED;
      710       30    1   DCL SETNUM SBIN WORD STATIC ALIGNED;
      711       31    1   DCL SETVAL SBIN WORD STATIC ALIGNED;
      712       32    1   DCL CHARN CHAR(PTR_LEN) BASED;
      713       33
      714       34
      715       35
      716       36
      717       37
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:115  
      718       38
      719       39    1   DCL 1 PTREC CALIGNED, /* PARAM */
      720       40    1         2 NEXT UBIN WORD UNAL, /* SORT FIELD */
      721       41    1         2 SETTYPE SBIN HALF UNAL, /* SORT FIELD */
      722       42    1         2 RECTYPE SBIN HALF UNAL,
      723       43    1         2 DBK UBIN WORD UNAL,
      724       44    1         2 OWNER UBIN WORD UNAL,
      725       45    1         2 PA REDEF OWNER,
      726       46    1           3 ENTRY# UBIN HALF UNAL,
      727       47    1           3 GROUP# UBIN HALF UNAL;
      728       48    1   DCL PTSIZE UBIN WORD; /* PARAM */
      729       49
      730       50    1   DCL SZ2 UBIN(18) BASED CALIGNED;
      731       51    1   DCL SZ3 UBIN(27) BASED CALIGNED;
      732       52    1   DCL SZ4 UBIN(36) BASED CALIGNED;
      733       53    1   DCL SETNXT$ PTR STATIC ALIGNED;
      734       54    1   DCL SETPR$ PTR STATIC ALIGNED;
      735       55    1   DCL SETOWN$ PTR STATIC ALIGNED;
      736       56
      737       57    1   DCL 1 REC STATIC ALIGNED,
      738       58    1         2 TYPE UBIN HALF HALIGNED,
      739       59    1         2 LEN UBIN HALF HALIGNED;
      740       60    1   DCL 1 RECSTUFF REDEF REC UBIN WORD ALIGNED;
      741       61    1   DCL EISOWN UBIN WORD STATIC ALIGNED;
      742       62    1   DCL 1 OWNPT REDEF EISOWN,
      743       63    1         2 * UBIN(3) UNAL,
      744       64    1         2 BYT_OFF UBIN(17) UNAL,
      745       65    1         2 TN UBIN(2) UNAL,
      746       66    1         2 SIGN UBIN(2) UNAL,
      747       67    1         2 SCAL UBIN(6) UNAL,
      748       68    1         2 SIZE UBIN(6) UNAL;
      749       69    1   DCL EISPR UBIN WORD STATIC ALIGNED;
      750       70    1   DCL 1 PRIPT REDEF EISPR ALIGNED,
      751       71    1         2 * UBIN(3) UNAL,
      752       72    1         2 BYT_OFF UBIN(17) UNAL,
      753       73    1         2 TN UBIN(2) UNAL,
      754       74    1         2 SIGN UBIN(2) UNAL,
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:116  
      755       75    1         2 SCAL UBIN(6) UNAL,
      756       76    1         2 SIZE UBIN(6) UNAL;
      757       77    1   DCL EISNXT UBIN WORD STATIC ALIGNED;
      758       78    1   DCL 1 NXTPT REDEF EISNXT ALIGNED,
      759       79    1         2 * UBIN(3) UNAL,
      760       80    1         2 BYT_OFF UBIN(17) UNAL,
      761       81    1         2 TN UBIN(2) UNAL,
      762       82    1         2 SIGN UBIN(2) UNAL,
      763       83    1         2 SCAL UBIN(6) UNAL,
      764       84    1         2 SIZE UBIN(6) UNAL;
      765       85
      766       86    1   DCL LAST_PAGE BIT(1) STATIC UNAL;
      767       87    1   DCL INITIAL_SORT_CALL BIT(1) SYMREF UNAL;
      768       88    1   DCL TYPE_PA BIT(1) STATIC UNAL;
      769       89
      770       90         %SUB #BUFS = 16;
      771       91         %SUB OFFSET# = "2035 -";
      772       92         %EQU STANDRD = 0;
      773       93         %EQU PACODE1 = 1;
      774       94         %EQU PACODE2 = 2;
      775       95
      776       96         %INCLUDE ZI_DBU_VALDTE;
      777      364         %VALID_LIST;
      778      504         %INCLUDE ZI_GLOBAL_DBUTIL;
      779      682         %SYS_FUNC;
      780      774         %MISC_DCLS;
      781      827         %PAREC;
      782      854         %INCLUDE ZI$PG_STRUCTS;
      783      957         %ATBLK_PG;
      784     1013         %DATA_PG;
      785     1032         %INCLUDE ZI_DBU_XREF;
      786     1199         %XREF_TBLS;
      787     1274         %INCLUDE ZI_ERRORS_SUBS;
      788     1794         %INCLUDE CP_6;
      789     1875         %F$DCB;
      790     1932         %INCLUDE CP_6_SUBS;
      791     2472         %INCLUDE ZI$DIR;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:117  
      792     2629         %DIR;
      793     2773
      794     2774    1   DCL PAGE_RANGE ENTRY(6);
      795     2775    1   DCL ZERO_SUP ENTRY(3);
      796     2776    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      797     2777    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
      798     2778    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      799     2779    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      800     2780    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
      801     2781    1   DCL GET_DCB ENTRY(1) ALTRET;
      802     2782    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      803     2783
      804     2784
      805     2785        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:118  
      806     2786        /*
      807     2787           Initial call to sort will start loops - reentries will continue
      808     2788           where left off. each normal return, returns a record to sort.
      809     2789        */
      810     2790    1       IF INITIAL_SORT_CALL THEN
      811     2791    2       DO;
      812     2792    2           PTSIZE = 16;
      813     2793    2           INITIAL_SORT_CALL = %NO#;
      814     2794    2           RETURNCODE = %STANDRD;
      815     2795    2           END;
      816     2796    1       ELSE
      817     2797    1           IF RETURNCODE = %STANDRD THEN GOTO RE_ENTRY;
      818     2798    1           ELSE
      819     2799    1               IF RETURNCODE = %PACODE1 THEN GOTO PA_RTN1;
      820     2800    1               ELSE
      821     2801    1                   GOTO PA_RTN2;
      822     2802
      823     2803
      824     2804    2       DO AREANO = 0 TO NO_AREAS - 1;
      825     2805    2           IF AREA_KEY_XREF.MAX_KEY(AREANO)=0 THEN GOTO NEXT_AREA; /* SKIP NON-IDS */
      826     2806    2           ZI$DIR.AREA_NM.NAME.TEXT = AREA_KEY_XREF.NAME(AREANO);
      827     2807    2           CALL OPEN_AREA ALTRET(ALT_GEN);
      828     2808
      829     2809    2           IF DCBADDR(DCBSF)->F$DCB.ORG# ~= %IDS# THEN
      830     2810    3           DO;
      831     2811    3               ERRCODESF.ERR# = DBU#CHKIDS;
      832     2812    3               MSGCODE = ERRCODE_RDEF;
      833     2813    3               ERRFLGSF = 3;
      834     2814    3               CALL SYS_FUNC_ERRMSG;
      835     2815    3               UNWIND TO BREAK_LOCAT; /* ABORT THE JOB, AND DO CLOSE DCBS */
      836     2816    3               END;
      837     2817
      838     2818    2           CALL GET_ATBLK ALTRET(ALT_GEN);
      839     2819    2           LAST_PAGE = %NO#;
      840     2820    2           CALL PAGE_RANGE(RB,RE,#BUFS,I_O_SIZE,HIGH_DATA_PG,LAST_PAGE);
      841     2821
      842     2822    3           DO WHILE(~LAST_PAGE);
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:119  
      843     2823    3               I_O_INDX = 0;
      844     2824    3               CALL READ_DB ALTRET(ALT_GEN);
      845     2825    3               IF BREAK_FLAG>0 THEN UNWIND TO BREAK_LOCAT;
      846     2826
      847     2827    4               DO RB = RB TO RE;
      848     2828    4                   DATA$ = ADDR(I_O_BUF(I_O_INDX));
      849     2829    4                   HIGH_LINE = DATA_PG.OFF_LN.SEC;
      850     2830
      851     2831    5                   DO LINE_NO = 0 TO HIGH_LINE;
      852     2832
      853     2833    5                       IF DATA_PG.ACT_DATA_18(OFFSET# LINE_NO) > 0 THEN
      854     2834    6                       DO;
      855     2835         /*
      856     2836            Check if rec type is one which is being validated.
      857     2837            If so, set RECINDX to the RECLIST entry else altrtn.
      858     2838         */
      859     2839    6                           REC$ = PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(OFFSET# LINE_NO))
              2839                                    ;
      860     2840    6                           RECSTUFF = REC$ -> SZ4; /* Set rec first word of record. */
      861     2841    6                           CALL FIND_REC_ENTRY ALTRET(NO_RECORD);
      862     2842         /*
      863     2843            Extract DBK and set pointers from this record.
      864     2844         */
      865     2845    6                           CURR_DBK = DATA_PG.CON_INTRVAL*LPP + LINE_NO + LOW_DBK - LPP
              2845                                    ;
      866     2846    6                           SETINDX = RECLIST.SETINDX(RECINDX);
      867     2847    6                           IF MSTR_REF.PAOFF(MSTR_INDX)>0 THEN /* PA REC */
      868     2848    6                               TYPE_PA = %YES#;
      869     2849    6                           ELSE
      870     2850    6                               TYPE_PA = %NO#;
      871     2851
      872     2852    7                           DO WHILE(SETLIST(SETINDX) ~= -1);
      873     2853
      874     2854    7                               SETNUM = SET_XREF.MSTRINDX(SETLIST(SETINDX));
              2854                                        /* MSTR_XREF index */
      875     2855    7                               CALL PULL_PTRS ALTRET(RE_ENTRY);
      876     2856    7                               CALL WRITE_EG;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:120  
      877     2857    7                               RETURN; /* Return PTREC to sort */
      878     2858    7   RE_ENTRY:                   ; IF TYPE_PA THEN
      879     2859    8                               DO; /* PTR_LEN,KEY_LEN & NO_ENTRIES already found */
      880     2860         /*  For this PA record - process entries */
      881     2861    8                                   PTREC.RECTYPE = REC.TYPE * -1;
      882     2862    8                                   PTREC.DBK = CURR_DBK;
      883     2863    8                                   PTREC.SETTYPE = MSTR_REF.TYPE(SETNUM);
      884     2864    8                                   IF PA_REC.NOT_LOWEST_LEVEL THEN
      885     2865    8                                       PTREC.SETTYPE = PTREC.SETTYPE - 5000;
      886     2866    8                                   ENTRY$ = PINCRC(REC$,MSTR_REF.PAOFF(MSTR_INDX));
      887     2867         /*  In processing the PA entry ptrs, I multiply the */
      888     2868         /*  record type by -1. This is to indicate latter */
      889     2869         /*  that these pointers refer to pa entries and that*/
      890     2870         /* the entry nmbr is stored in the ownr ptr position */
      891     2871    9                                   DO ENTRYNO = 1 TO NO_ENTRIES;
      892     2872    9                                       PTREC.PA.ENTRY# = ENTRYNO;
      893     2873    9                                       PTREC.PA.GROUP# = 0;
      894     2874    9                                       IF PA_ENTRY.C = 1 THEN
      895     2875   10                                       DO;
      896     2876   10                                           ENTRY$ = PINCRC(ENTRY$,2);
      897     2877   10                                           CALL GETPTR(SETVAL,ENTRY$);
      898     2878   10                                           IF MSTR_REF.GLOBAL(SETNUM) ~= 1 THEN
      899     2879   10                                               SETVAL = SETVAL - LOW_DBK +1;
      900     2880         /* Was not a real rec ptr so dont unexpand value */
      901     2881   10                                           GROUP$ = PINCRC(REC$,SETVAL);
      902     2882   10                                           NO_PTRS = PA_GROUP.NO_GROUPS;
      903     2883   10                                           GROUP$ = PINCRW(GROUP$,1);
      904     2884   11                                           DO X = 1 TO NO_PTRS;
      905     2885   11                                               CALL GETPTR(SETVAL,GROUP$);
      906     2886   11                                               PTREC.PA.GROUP# = X;
      907     2887   11                                               PTREC.NEXT = SETVAL;
      908     2888   11                                               RETURNCODE = %PACODE1;
      909     2889   11                                               RETURN; /* Return PT to sort */
      910     2890   11   PA_RTN1:                                    ; PTREC.PA.ENTRY# = ENTRYNO;
      911     2891   11                                               PTREC.SETTYPE = MSTR_REF.TYPE(SETNUM);
      912     2892   11                                               IF PA_REC.NOT_LOWEST_LEVEL THEN
      913     2893   11                                                   PTREC.SETTYPE = PTREC.SETTYPE - 5000
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:121  
              2893                                                            ;
      914     2894   11                                               PTREC.RECTYPE = REC.TYPE * -1;
      915     2895   11                                               PTREC.DBK = CURR_DBK;
      916     2896   11                                               GROUP$ = PINCRC(GROUP$,2+PTR_LEN);
      917     2897   11                                               END;
      918     2898   10                                           END;
      919     2899   10                                       ELSE DO;
      920     2900   10                                           ENTRY$ = PINCRC(ENTRY$,2);
      921     2901   10                                           CALL GETPTR(SETVAL,ENTRY$);
      922     2902   10                                           PTREC.NEXT = SETVAL;
      923     2903   10                                           RETURNCODE = %PACODE2;
      924     2904   10                                           RETURN; /* Return PT to sort */
      925     2905   10   PA_RTN2:                                ; PTREC.PA.ENTRY# = ENTRYNO;
      926     2906   10                                           PTREC.SETTYPE = MSTR_REF.TYPE(SETNUM);
      927     2907   10                                           IF PA_REC.NOT_LOWEST_LEVEL THEN
      928     2908   10                                               PTREC.SETTYPE = PTREC.SETTYPE - 5000;
      929     2909   10                                           PTREC.RECTYPE = REC.TYPE * -1;
      930     2910   10                                           PTREC.DBK = CURR_DBK;
      931     2911   10                                           END;
      932     2912    9                                       ENTRY$ = PINCRC(ENTRY$,KEY_LEN + PTR_LEN);
      933     2913    9                                       END;
      934     2914    8                                   RETURNCODE = %STANDRD;
      935     2915    8                                   END;
      936     2916    7                               SETINDX = SETINDX + 1;
      937     2917    7                               END;
      938     2918    6   NO_RECORD:              END;
      939     2919    5                       END;
      940     2920    4                   I_O_INDX = I_O_INDX + 1;
      941     2921    4                   END;
      942     2922    3               CALL PAGE_RANGE(RB,RE,#BUFS,I_O_SIZE,HIGH_DATA_PG,LAST_PAGE);
      943     2923    3               END;
      944     2924
      945     2925    2   CLOSE_FILE:
      946     2926    2           DCBSF = ZI$DIR.AREA_NM.DCB#;
      947     2927    2           CALL SYS_FUNC_CLOS;
      948     2928    2           CALL SYS_FUNC_RELDCB;
      949     2929    2   NEXT_AREA:
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:122  
      950     2930    2           END;
      951     2931
      952     2932    1       CALL FLUSH_EG ALTRET(ALT_GEN); /* Write remaining EG recs */
      953     2933    1       ALTRETURN; /* Indicate to sort completion */
      954     2934
      955     2935        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:123  
      956     2936        /*
      957     2937                    Data base I/O routines. (OPEN/READ ATBLK/READ #BUFS)
      958     2938        */
      959     2939    1   OPEN_AREA: PROC ALTRET;
      960     2940    2       CALL GET_DCB(ZI$DIR.AREA_NM) ALTRET(ALTRTN);
      961     2941
      962     2942    2   /**/ FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;
      963     2943    2       FUNSF = %IN#;
      964     2944    2       SHARESF = %IN#;
      965     2945    2       ORGSF = %IDS#;
      966     2946    2       ACSSF = %DIRECT#;
      967     2947    2       ASNSF = %FILE#;
      968     2948    2       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);
      969     2949    2       RETURN;
      970     2950    2   ALTRTN:
      971     2951    2       ALTRETURN;
      972     2952    2   END OPEN_AREA;
      973     2953
      974     2954    1   READ_DB: PROC ALTRET;
      975     2955
      976     2956    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;
      977     2957    2   /**/ BUFSF = VECTOR(I_O_BUF(0));
      978     2958    2   /**/ BUFLNSF = I_O_SIZE * 4096;
      979     2959    2   /**/ FULLSF = %YES#;
      980     2960    2   /**/ ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
      981     2961    2   /**/ KEYSF = %YES#;
      982     2962    2   /**/ KEYVSF.IDSKEY = RB;
      983     2963    2       CALL SYS_FUNC_READ ALTRET(ALTRTN);
      984     2964    2       RETURN;
      985     2965    2   ALTRTN:
      986     2966    2       ALTRETURN;
      987     2967
      988     2968    2   END READ_DB;
      989     2969
      990     2970        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:124  
      991     2971    1   GET_ATBLK: PROC ALTRET;
      992     2972        /*
      993     2973           Evaluate high data page and number of inventory pages according
      994     2974           to attribute block information.
      995     2975        */
      996     2976
      997     2977    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;
      998     2978    2   /**/ BUFSF = VECTOR(I_O_BUF(0));
      999     2979    2   /**/ BUFLNSF = 4096;
     1000     2980    2   /**/ FULLSF = %YES#;
     1001     2981    2   /**/ ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
     1002     2982    2   /**/ KEYSF = %YES#;
     1003     2983    2   /**/ KEYVSF.IDSKEY = 0;
     1004     2984    2       CALL SYS_FUNC_READ ALTRET(ALT_ATBLK);
     1005     2985    2       ATBLK$ = ADDR(I_O_BUF(0));
     1006     2986    2       IF ATBLK_PG.FIR_INV_PGNO = 0 THEN
     1007     2987    3       DO;
     1008     2988    3           HIGH_DATA_PG = ATBLK_PG.NUM_DBPG;
     1009     2989    3           END;
     1010     2990    3       ELSE DO;
     1011     2991    3           HIGH_DATA_PG = ATBLK_PG.NUM_DBPG - ((ATBLK_PG.NUM_DBPG -
     1012     2992    3              ATBLK_PG.FIR_INV_PGNO)+1);
     1013     2993    3           END;
     1014     2994    2       LOW_DBK = ATBLK_PG.LOW_DBK;
     1015     2995    2       LPP = ATBLK_PG.LINE_INFO.LPP;
     1016     2996    2       RETURN;
     1017     2997        /**/
     1018     2998    2   ALT_ATBLK:
     1019     2999    2       ALTRETURN;
     1020     3000    2   END GET_ATBLK;
     1021     3001        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:125  
     1022     3002        /*
     1023     3003           This routine looks at the record type pointed to by rec$ and
     1024     3004           searches RECLIST for that record entry. If found - RECINDX is
     1025     3005           set and normal return is taken. If no entry is found the altretun
     1026     3006           is taken.
     1027     3007        */
     1028     3008    1   FIND_REC_ENTRY: PROC ALTRET;
     1029     3009
     1030     3010    3       DO RECINDX = 0 TO HIGH_RECINDX;
     1031     3011    3           IF MSTR_REF.TYPE(RECLIST.MSTRINDX(RECINDX)) = REC.TYPE THEN
     1032     3012    4           DO;
     1033     3013    4               MSTR_INDX = RECLIST.MSTRINDX(RECINDX);
     1034     3014    4               RETURN;
     1035     3015    4               END;
     1036     3016    3           END;
     1037     3017    2       ALTRETURN;
     1038     3018    2   END FIND_REC_ENTRY;
     1039     3019        /*
     1040     3020              EXTRACT THE POINTER VALUE POINTED TO BY PTR$
     1041     3021        */
     1042     3022    1   GETPTR: PROC(VAL,PTR$);
     1043     3023    2   DCL VAL UBIN;
     1044     3024    2   DCL PTR$ PTR;
     1045     3025
     1046     3026    3       DO CASE(PTR_LEN);
     1047     3027    3       CASE(2);
     1048     3028    3           VAL = PTR$ -> SZ2;
     1049     3029    3       CASE(3);
     1050     3030    3           VAL = PTR$ -> SZ3;
     1051     3031    3       CASE(4);
     1052     3032    3           VAL = PTR$ -> SZ4;
     1053     3033    3           END;
     1054     3034    2       IF MSTR_REF.GLOBAL(SETNUM)=0 AND VAL~= 0 THEN
     1055     3035    2           VAL = VAL + LOW_DBK -1; /* PROCESS LOCAL POINTER */
     1056     3036
     1057     3037    2       RETURN;
     1058     3038    2   END GETPTR;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:126  
     1059     3039        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:127  
     1060     3040        /*
     1061     3041          This procedure removes the pointers of the current set (SET_XREF(I))
     1062     3042          and puts the pointer values into the proper PT/EG records.
     1063     3043        */
     1064     3044    1   PULL_PTRS: PROC ALTRET;
     1065     3045
     1066     3046    2   DCL MSGBUF CHAR(120) STATIC ALIGNED;
     1067     3047    2   DCL MSGHDR CHAR(0) STATIC CALIGNED INIT('e+  Record ');
     1068     3048    2   DCL R1 SBIN STATIC ALIGNED;
     1069     3049    2   DCL D1 SBIN STATIC ALIGNED;
     1070     3050    2   DCL S1 SBIN STATIC ALIGNED;
     1071     3051    2   DCL R_V CHAR(R1) BASED CALIGNED;
     1072     3052    2   DCL D_V CHAR(D1) BASED CALIGNED;
     1073     3053    2   DCL S_V CHAR(S1) BASED CALIGNED;
     1074     3054    2   DCL CHAR10 CHAR(10) STATIC ALIGNED;
     1075     3055
     1076     3056    2       EISNXT = SET_XREF.EIS.NEXT(SETLIST(SETINDX));
     1077     3057    2       EISPR = SET_XREF.EIS.PRIOR(SETLIST(SETINDX));
     1078     3058    2       EISOWN = SET_XREF.EIS.OWNR(SETLIST(SETINDX));
     1079     3059
     1080     3060    2       IF EISOWN ~= 0 THEN
     1081     3061    2           SETOWN$ = PINCRC(REC$,OWNPT.BYT_OFF);
     1082     3062    2       SETNXT$ = PINCRC(REC$,NXTPT.BYT_OFF);
     1083     3063    2       SETPR$ = PINCRC(REC$,PRIPT.BYT_OFF);
     1084     3064
     1085     3065    2       IF TYPE_PA THEN /* Check if this is a PA record */
     1086     3066    3       DO;
     1087     3067    3           PTR_LEN = (MSTR_REF.PAOFF(MSTR_INDX)-2*4)/3;
     1088     3068    3           KEY_LEN = MSTR_REF.PAENT(MSTR_INDX)-2-PTR_LEN;
     1089     3069    3           NO_ENTRIES = PA_REC.ENTRIES;
     1090     3070    3           IF SETOWN$ -> CHARN ~= SETNXT$ -> CHARN THEN
     1091     3071    4           DO; /* Not highest level PA record */
     1092     3072    4               CALL GETPTR(SETVAL,SETOWN$);
     1093     3073    4               EGREC.DBK(EGINDX) = CURR_DBK;
     1094     3074    4               EGREC.PRIOR(EGINDX) = SETVAL;
     1095     3075    4               EGREC.OWNER(EGINDX) = 0;
     1096     3076    4               EGREC.SETTYPE(EGINDX) = MSTR_REF.TYPE(SETNUM) - 5000;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:128  
     1097     3077    4               EGREC.RECTYPE(EGINDX) = REC.TYPE;
     1098     3078    4               CALL WRITE_EG;
     1099     3079    4               END;
     1100     3080    3           END;
     1101     3081    2       ELSE
     1102     3082    2           IF EISPR = 0 THEN /* NO PRIOR PTR -> PA MEMBERS */
     1103     3083    3           DO; /* Process PA membrs writing EG records only */
     1104     3084    3               PTR_LEN = NXTPT.SIZE;
     1105     3085    3               EGREC.DBK(EGINDX) = CURR_DBK;
     1106     3086    3               EGREC.OWNER(EGINDX) = 0;
     1107     3087    3               EGREC.SETTYPE(EGINDX) = MSTR_REF.TYPE(SETNUM);
     1108     3088    3               EGREC.RECTYPE(EGINDX) = REC.TYPE;
     1109     3089    3               CALL GETPTR(SETVAL,SETNXT$);
     1110     3090    3               IF SETVAL=0 THEN /* CHK IF IT IS UNCONNECT */
     1111     3091    4               DO;
     1112     3092    4                   SETNXT$=PINCRC(SETNXT$,PTR_LEN);
     1113     3093    4                   CALL GETPTR(SETVAL,SETNXT$);
     1114     3094    4                   IF SETVAL=0 AND (MSTR_REF.SET.INMODE(SETNUM) OR
     1115     3095    4                      MSTR_REF.SET.RETYPE(SETNUM)) THEN
     1116     3096    5                   DO; /* UNCONNECTED MEMBER FOUND */
     1117     3097    5                       IF ZI$DIR.REPRT_ZERO THEN
     1118     3098    5                           GOTO REPORT_ZERO;
     1119     3099    5                       ALTRETURN; /* DONT DO ANYTHING */
     1120     3100    5                       END;
     1121     3101    4                   SETVAL = 0; /* RESTORE NEXT PTR */
     1122     3102    4                   END;
     1123     3103    3               EGREC.PRIOR(EGINDX) = SETVAL; /* Use owner ptr for prior */
     1124     3104    3               CALL WRITE_EG;
     1125     3105    3               ALTRETURN; /* ALTRET so no PT record will be written */
     1126     3106    3               END;
     1127     3107        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:129  
     1128     3108        /*
     1129     3109                 PROCESS THE STANDARD  SET  POINTERS  FOR NON-PA RECORDS
     1130     3110        */
     1131     3111
     1132     3112
     1133     3113    2       SET_LN = NXTPT.SIZE;
     1134     3114    2       PTREC.OWNER = CURR_DBK; /* Init owner pointers to themselves */
     1135     3115    2       EGREC.OWNER(EGINDX) = CURR_DBK;
     1136     3116    2       PTREC.SETTYPE = MSTR_REF.TYPE(SETNUM);
     1137     3117    2       EGREC.SETTYPE(EGINDX) = MSTR_REF.TYPE(SETNUM);
     1138     3118    2       PTREC.DBK = CURR_DBK;
     1139     3119    2       EGREC.DBK(EGINDX) = CURR_DBK;
     1140     3120    2       PTREC.RECTYPE = REC.TYPE;
     1141     3121    2       EGREC.RECTYPE(EGINDX) = REC.TYPE;
     1142     3122
     1143     3123    3       DO CASE(SET_LN);
     1144     3124    3       CASE(2);
     1145     3125    3           PTREC.NEXT = SETNXT$ -> SZ2;
     1146     3126    3           EGREC.PRIOR(EGINDX) = SETPR$ -> SZ2;
     1147     3127    3           IF EISOWN ~= 0 THEN
     1148     3128    4           DO;
     1149     3129    4               PTREC.OWNER = SETOWN$ -> SZ2;
     1150     3130    4               EGREC.OWNER(EGINDX) = SETOWN$ -> SZ2;
     1151     3131    4               END;
     1152     3132
     1153     3133    3       CASE(3);
     1154     3134    3           PTREC.NEXT = SETNXT$ -> SZ3;
     1155     3135    3           EGREC.PRIOR(EGINDX) = SETPR$ -> SZ3;
     1156     3136    3           IF EISOWN ~= 0 THEN
     1157     3137    4           DO;
     1158     3138    4               PTREC.OWNER = SETOWN$ -> SZ3;
     1159     3139    4               EGREC.OWNER(EGINDX) = SETOWN$ -> SZ3;
     1160     3140    4               END;
     1161     3141
     1162     3142    3       CASE(4);
     1163     3143    3           PTREC.NEXT = SETNXT$ -> SZ4;
     1164     3144    3           EGREC.PRIOR(EGINDX) = SETPR$ -> SZ4;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:130  
     1165     3145    3           IF EISOWN ~= 0 THEN
     1166     3146    4           DO;
     1167     3147    4               PTREC.OWNER = SETOWN$ -> SZ4;
     1168     3148    4               EGREC.OWNER(EGINDX) = SETOWN$ -> SZ4;
     1169     3149    4               END;
     1170     3150
     1171     3151    3           END;
     1172     3152    2       IF PTREC.NEXT=0 AND PTREC.OWNER=0 AND EGREC.PRIOR(EGINDX)=0 THEN
     1173     3153    3       DO; /* UN-CONNECTED MEMBER FOUND */
     1174     3154    3           IF MSTR_REF.SET.INMODE(SETNUM) OR /* INSERTION MANUAL */
     1175     3155    3              MSTR_REF.SET.RETYPE(SETNUM) THEN /* RETENTION OPTIONAL */
     1176     3156    4           DO; /* THIS IS A LEGAL UNCONNECTED MEMBER */
     1177     3157    4               IF ZI$DIR.REPRT_ZERO THEN
     1178     3158    4                   GOTO REPORT_ZERO;
     1179     3159    4               ALTRETURN; /* NOT REPORT ZERO, SKIP THIS SET MEMBER */
     1180     3160    4               END;
     1181     3161    3           END;
     1182     3162    2       IF MSTR_REF.GLOBAL(SETNUM) = 0 THEN /* LOCAL SET */
     1183     3163    3       DO;
     1184     3164    3           IF EGREC.PRIOR(EGINDX)~=0 THEN
     1185     3165    3               EGREC.PRIOR(EGINDX) = EGREC.PRIOR(EGINDX) + LOW_DBK -1;
     1186     3166    3           IF PTREC.NEXT~=0 THEN
     1187     3167    3               PTREC.NEXT = PTREC.NEXT + LOW_DBK -1;
     1188     3168    3           IF EISOWN~=0 AND PTREC.OWNER~=0 THEN
     1189     3169    4           DO;
     1190     3170    4               EGREC.OWNER(EGINDX) = EGREC.OWNER(EGINDX) + LOW_DBK -1;
     1191     3171    4               PTREC.OWNER = PTREC.OWNER + LOW_DBK -1;
     1192     3172    4               END;
     1193     3173    3           END;
     1194     3174
     1195     3175    2       RETURN;
     1196     3176    2   REPORT_ZERO:
     1197     3177    2       CALL INDEX1(R1,' ',MSTR_REF.NAME(MSTR_INDX));
     1198     3178    2       CALL INDEX1(S1,' ',MSTR_REF.NAME(SETNUM));
     1199     3179    2       CALL BINCHAR(CHAR10,CURR_DBK);
     1200     3180    2       CALL ZERO_SUP(CHAR10,LENGTHC(CHAR10),'1'B);
     1201     3181    2       CALL INDEX1(D1,' ',CHAR10);
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:131  
     1202     3182    2       CALL CONCAT(MSGBUF,MSGHDR,ADDR(MSTR_REF.NAME(MSTR_INDX))->R_V,
     1203     3183    2          ' at DBK ',ADDR(CHAR10)->D_V,
     1204     3184    2          ' is an unconnected member of ',
     1205     3185    2          ADDR(MSTR_REF.NAME(SETNUM))->S_V);
     1206     3186    2       DCBSF = DCBNUM(M$LO);
     1207     3187    2       BUFSF = VECTOR(MSGBUF);
     1208     3188    2       BUFLNSF = LENGTHC(MSGBUF);
     1209     3189    2       VFCSF = '1'B;
     1210     3190    2       CALL SYS_FUNC_WRIT;
     1211     3191    2       SUBSTR(MSGHDR,0,1)='a';
     1212     3192    2       ALTRETURN;
     1213     3193    2   END PULL_PTRS;
     1214     3194        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:132  
     1215     3195        /*
     1216     3196           This procedure does logical writes of up to 16k of 4 word EG
     1217     3197           records, then writes them out to the EG file. It uses half of
     1218     3198           the data base I_O_BUF area for buffering.
     1219     3199        */
     1220     3200    1   WRITE_EG: PROC ALTRET;
     1221     3201
     1222     3202    2       NO_EGRECS = NO_EGRECS + 1;
     1223     3203    2       IF EGINDX = 4095 THEN
     1224     3204    3       DO;
     1225     3205         /* EG buf full so write it out and restart filling buffer */
     1226     3206    3    /**/   DCBSF = EGFILE.DCB#;
     1227     3207    3           KEYSF = %NO#;
     1228     3208    3           BUFSF = VECTOR(EGREC);
     1229     3209    3           BUFLNSF = (EGINDX+1) * 16; /* 16 bytes per entry */
     1230     3210    3           VFCSF = %NO#;
     1231     3211    3           CALL SYS_FUNC_WRIT ALTRET(ALT_WREG);
     1232     3212    3           NO_EGBUFS = NO_EGBUFS + 1;
     1233     3213    3           EGINDX = -1;
     1234     3214    3           END;
     1235     3215    2       EGINDX = EGINDX + 1;
     1236     3216    2       RETURN;
     1237     3217
     1238     3218    2   ALT_WREG:
     1239     3219    2       ALTRETURN;
     1240     3220    2   END WRITE_EG;
     1241     3221
     1242     3222    1   FLUSH_EG: PROC ALTRET;
     1243     3223
     1244     3224    2       IF EGINDX ~= -1 THEN
     1245     3225    3       DO;
     1246     3226    3    /**/   DCBSF = EGFILE.DCB#;
     1247     3227    3           KEYSF = %NO#;
     1248     3228    3           BUFSF = VECTOR(EGREC);
     1249     3229    3           BUFLNSF = EGINDX * 16; /* 16 bytes per entry */
     1250     3230    3           VFCSF = %NO#;
     1251     3231    3           CALL SYS_FUNC_WRIT ALTRET(ALT_FLUSH);
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:133  
     1252     3232    3           END;
     1253     3233
     1254     3234    2       CALL SYS_FUNC_CLOS ALTRET(ALT_FLUSH);
     1255     3235    2       LAST_EGINDX = EGINDX;
     1256     3236    2       RETURN;
     1257     3237
     1258     3238    2   ALT_FLUSH:
     1259     3239    2       ALTRETURN;
     1260     3240    2   END FLUSH_EG;
     1261     3241
     1262     3242    1   ALT_GEN:
     1263     3243    1       ALTRETURN;
     1264     3244
     1265     3245    1   END ZIU$GENRCD;
     1266     3246        %EOD;

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:134  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_VALDTE.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$GENRCD.

   Procedure ZIU$GENRCD requires 1152 words for executable code.
   Procedure ZIU$GENRCD requires 14 words of local(AUTO) storage.

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:135  

 Object Unit name= ZIU$GENRCD                                 File name= ZIU$VALSET.:ZIC0TOU
 UTS= SEP 05 '97 13:33:48.16 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    59     73  ZIU$GENRCD
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$UC
    3  RoData even  UTS     10     12  ZIU$GENRCD
    4   Proc  even  none  1152   2200  ZIU$GENRCD
    5  RoData even  none    31     37  ZIU$GENRCD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        2  ZIU$GENRCD
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:136  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 SYS_FUNC_ERRMSG
         yes           Std       6 PAGE_RANGE
 yes     yes           Std       0 SYS_FUNC_RELDCB
 yes     yes           Std       0 SYS_FUNC_CLOS
 yes     yes           Std       1 GET_DCB
 yes     yes           Std       0 SYS_FUNC_OPEN
 yes     yes           Std       0 SYS_FUNC_READ
         yes           Std       3 ZERO_SUP
 yes     yes           Std       0 SYS_FUNC_WRIT
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:137  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     AREANO                                LOW_DBK                               HIGH_DATA_PG
     LPP                                   INITIAL_SORT_CALL                     BREAK_LOCAT
     RECLIST                               SETLIST                               SETINDX
     RECINDX                               HIGH_RECINDX                          EGREC$
     EGINDX                                NO_EGRECS                             NO_EGBUFS
     LAST_EGINDX                           CURREG                                CURRPT
     EGFILE                                ERRFILE                               NO_ERRORS
     ERROR_BUF                             ERRBUF$                               BLKLSF
     KEYLSF                                KEYXSF                                DCBSF
     ORGSF                                 KEYSF                                 KEYVSF
     ACSSF                                 NOTIMESF                              FUNSF
     ASNSF                                 TESTSF                                XTENSIZESF
     DISPSF                                WAITSF                                VFCSF
     FULLSF                                BKUPSF                                BUFLNSF
     BUFSF                                 SOURCESF                              DESTSF
     DATESF                                TIMESF                                UTSSF
     DAYSF                                 TSTAMPSF                              ENCRP_SEEDSF
     ERRCODESF                             MSGCODE                               INCL_ERR
     ERR_INSERT                            FIDSF_RD                              ACNT
     EXISTSF                               SHARESF                               DCBNMSF
     KEYRSF                                NO_KEYSF                              REASGNSF
     CARRY_ATTRIBUTESF                     SUBMESSF                              SPKY_OPNSF
     POSSF                                 ERRFLGSF                              MERGESF
     FSA_FLAG                              RELGSF                                UNUSED
     HELPCODE                              COUNTSF                               INDEXSF
     GAP                                   PSNSF                                 ACNTSF
     KEY_SHADWSF                           REC$                                  RB
     RE                                    IE                                    IB
     CNT                                   ICNT                                  RCNT
     SCNT                                  FIRST_SET                             RETCNT
     DMPCNT                                KCNT                                  ACNT_IDX
     I                                     J                                     K
     X                                     STEPCC                                I_O_BUF$
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:138  
     OUT_INDX                              I_O_SIZE                              REC_DATA_LN
     M$LO                                  B$TCB$                                B$ROS$
     B$JIT$                                KEYFID                                I_O_KEY
     RESTART                               BREAK_FLAG                            ICHKSUM
     ITMCNT                                GAP1                                  ENTRY$
     GROUP$                                PTR_LEN                               KEY_LEN
     ATBLK$                                DATA$                                 TYPE
     MSTR$                                 NXT_MSLOT                             MAX_MSLOT
     MSTR_INDX                             HASHTBL                               HASHINDX
     LOC_MODE                              AREA_KEY$                             NO_AREAS
     GLBL_PTR_SZ                           SET_XREF$                             NXT_SSLOT
     MAX_SSLOT                             REC_XREF$                             NXT_RSLOT
     MAX_RSLOT                             NO_RECS                               NO_SETS
     XREF_BUILT                            TYPESET                               TYPEREC
     M$UC                                  ZI$DIR                                SCHEMA_ACTIVE
     RECORD_LIST                           SET_LIST                              RETAIN_LIST
     DUMP_FID                              ALTKY                                 INIT_RG
     KEY_RNG                               ITEM_LIST

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 ISSID
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:139  


      681        1        /*M*  ZIU$GENRCD  IDSII UTILITIES      SET VALIDATION RECORD GENERATION */
      682        2        /*T***********************************************************/
      683        3        /*T*                                                         */
      684        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      685        5        /*T*                                                         */
      686        6        /*T***********************************************************/
      687        7        /*P*
      688        8           NAME: ZIU$GENRCD
      689        9        PURPOSE: This procedure is the input routine for X$SORT used in the
      690       10                 set pointer validation routine. It generates special records
      691       11                 for each set in the data base data records to validate the
      692       12                 sets with.
      693       13        */
      694       14        ZIU$GENRCD: PROC(PTREC,PTSIZE) ALTRET;

     14  4 000000   000000 700200 xent  ZIU$GENRCD   TSX0  ! X66_AUTO_2
         4 000001   000016 000002                    ZERO    14,2

      695       15
      696       16    1   DCL AREANO SBIN WORD SYMREF;
      697       17    1   DCL LOW_DBK UBIN WORD SYMREF; /* DEFED IN CHECK */
      698       18    1   DCL HIGH_DATA_PG UBIN WORD SYMREF;
      699       19    1   DCL LPP UBIN WORD SYMREF;
      700       20
      701       21    1   DCL I_O_INDX SBIN WORD STATIC ALIGNED;
      702       22    1   DCL LINE_NO SBIN WORD STATIC ALIGNED;
      703       23    1   DCL CURR_DBK UBIN WORD STATIC ALIGNED;
      704       24    1   DCL SET_LN SBIN WORD STATIC ALIGNED;
      705       25    1   DCL HIGH_LINE SBIN WORD STATIC ALIGNED;
      706       26    1   DCL ENTRYNO SBIN WORD STATIC ALIGNED;
      707       27    1   DCL NO_ENTRIES SBIN WORD STATIC ALIGNED;
      708       28    1   DCL NO_PTRS SBIN WORD STATIC ALIGNED;
      709       29    1   DCL RETURNCODE SBIN WORD STATIC ALIGNED;
      710       30    1   DCL SETNUM SBIN WORD STATIC ALIGNED;
      711       31    1   DCL SETVAL SBIN WORD STATIC ALIGNED;
      712       32    1   DCL CHARN CHAR(PTR_LEN) BASED;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:140  
      713       33
      714       34
      715       35
      716       36
      717       37
      718       38
      719       39    1   DCL 1 PTREC CALIGNED, /* PARAM */
      720       40    1         2 NEXT UBIN WORD UNAL, /* SORT FIELD */
      721       41    1         2 SETTYPE SBIN HALF UNAL, /* SORT FIELD */
      722       42    1         2 RECTYPE SBIN HALF UNAL,
      723       43    1         2 DBK UBIN WORD UNAL,
      724       44    1         2 OWNER UBIN WORD UNAL,
      725       45    1         2 PA REDEF OWNER,
      726       46    1           3 ENTRY# UBIN HALF UNAL,
      727       47    1           3 GROUP# UBIN HALF UNAL;
      728       48    1   DCL PTSIZE UBIN WORD; /* PARAM */
      729       49
      730       50    1   DCL SZ2 UBIN(18) BASED CALIGNED;
      731       51    1   DCL SZ3 UBIN(27) BASED CALIGNED;
      732       52    1   DCL SZ4 UBIN(36) BASED CALIGNED;
      733       53    1   DCL SETNXT$ PTR STATIC ALIGNED;
      734       54    1   DCL SETPR$ PTR STATIC ALIGNED;
      735       55    1   DCL SETOWN$ PTR STATIC ALIGNED;
      736       56
      737       57    1   DCL 1 REC STATIC ALIGNED,
      738       58    1         2 TYPE UBIN HALF HALIGNED,
      739       59    1         2 LEN UBIN HALF HALIGNED;
      740       60    1   DCL 1 RECSTUFF REDEF REC UBIN WORD ALIGNED;
      741       61    1   DCL EISOWN UBIN WORD STATIC ALIGNED;
      742       62    1   DCL 1 OWNPT REDEF EISOWN,
      743       63    1         2 * UBIN(3) UNAL,
      744       64    1         2 BYT_OFF UBIN(17) UNAL,
      745       65    1         2 TN UBIN(2) UNAL,
      746       66    1         2 SIGN UBIN(2) UNAL,
      747       67    1         2 SCAL UBIN(6) UNAL,
      748       68    1         2 SIZE UBIN(6) UNAL;
      749       69    1   DCL EISPR UBIN WORD STATIC ALIGNED;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:141  
      750       70    1   DCL 1 PRIPT REDEF EISPR ALIGNED,
      751       71    1         2 * UBIN(3) UNAL,
      752       72    1         2 BYT_OFF UBIN(17) UNAL,
      753       73    1         2 TN UBIN(2) UNAL,
      754       74    1         2 SIGN UBIN(2) UNAL,
      755       75    1         2 SCAL UBIN(6) UNAL,
      756       76    1         2 SIZE UBIN(6) UNAL;
      757       77    1   DCL EISNXT UBIN WORD STATIC ALIGNED;
      758       78    1   DCL 1 NXTPT REDEF EISNXT ALIGNED,
      759       79    1         2 * UBIN(3) UNAL,
      760       80    1         2 BYT_OFF UBIN(17) UNAL,
      761       81    1         2 TN UBIN(2) UNAL,
      762       82    1         2 SIGN UBIN(2) UNAL,
      763       83    1         2 SCAL UBIN(6) UNAL,
      764       84    1         2 SIZE UBIN(6) UNAL;
      765       85
      766       86    1   DCL LAST_PAGE BIT(1) STATIC UNAL;
      767       87    1   DCL INITIAL_SORT_CALL BIT(1) SYMREF UNAL;
      768       88    1   DCL TYPE_PA BIT(1) STATIC UNAL;
      769       89
      770       90         %SUB #BUFS = 16;
      771       91         %SUB OFFSET# = "2035 -";
      772       92         %EQU STANDRD = 0;
      773       93         %EQU PACODE1 = 1;
      774       94         %EQU PACODE2 = 2;
      775       95
      776       96         %INCLUDE ZI_DBU_VALDTE;
      777      364         %VALID_LIST;
      778      504         %INCLUDE ZI_GLOBAL_DBUTIL;
      779      682         %SYS_FUNC;
      780      774         %MISC_DCLS;
      781      827         %PAREC;
      782      854         %INCLUDE ZI$PG_STRUCTS;
      783      957         %ATBLK_PG;
      784     1013         %DATA_PG;
      785     1032         %INCLUDE ZI_DBU_XREF;
      786     1199         %XREF_TBLS;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:142  
      787     1274         %INCLUDE ZI_ERRORS_SUBS;
      788     1794         %INCLUDE CP_6;
      789     1875         %F$DCB;
      790     1932         %INCLUDE CP_6_SUBS;
      791     2472         %INCLUDE ZI$DIR;
      792     2629         %DIR;
      793     2773
      794     2774    1   DCL PAGE_RANGE ENTRY(6);
      795     2775    1   DCL ZERO_SUP ENTRY(3);
      796     2776    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      797     2777    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
      798     2778    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      799     2779    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      800     2780    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
      801     2781    1   DCL GET_DCB ENTRY(1) ALTRET;
      802     2782    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      803     2783
      804     2784
      805     2785        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:143  
      806     2786        /*
      807     2787           Initial call to sort will start loops - reentries will continue
      808     2788           where left off. each normal return, returns a record to sort.
      809     2789        */
      810     2790    1       IF INITIAL_SORT_CALL THEN

   2790  4 000002   000000 234000 xsym               SZN     INITIAL_SORT_CALL
         4 000003   000012 605000 4                  TPL     s:2797

      811     2791    2       DO;

      812     2792    2           PTSIZE = 16;

   2792  4 000004   000020 235007                    LDA     16,DL
         4 000005   200004 470500                    LDP0    @PTSIZE,,AUTO
         4 000006   000000 755100                    STA     0,,PR0

      813     2793    2           INITIAL_SORT_CALL = %NO#;

   2793  4 000007   000000 450000 xsym               STZ     INITIAL_SORT_CALL

      814     2794    2           RETURNCODE = %STANDRD;

   2794  4 000010   000010 450000 0                  STZ     RETURNCODE

      815     2795    2           END;

   2795  4 000011   000017 710000 4                  TRA     s:2804

      816     2796    1       ELSE
      817     2797    1           IF RETURNCODE = %STANDRD THEN GOTO RE_ENTRY;

   2797  4 000012   000010 235000 0                  LDA     RETURNCODE
         4 000013   000227 600000 4                  TZE     RE_ENTRY

      818     2798    1           ELSE
      819     2799    1               IF RETURNCODE = %PACODE1 THEN GOTO PA_RTN1;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:144  

   2799  4 000014   000001 115007                    CMPA    1,DL
         4 000015   000403 600000 4                  TZE     PA_RTN1

      820     2800    1               ELSE
      821     2801    1                   GOTO PA_RTN2;

   2801  4 000016   000501 710000 4                  TRA     PA_RTN2

      822     2802
      823     2803
      824     2804    2       DO AREANO = 0 TO NO_AREAS - 1;

   2804  4 000017   000000 450000 xsym               STZ     AREANO
         4 000020   000625 710000 4                  TRA     NEXT_AREA+1

      825     2805    2           IF AREA_KEY_XREF.MAX_KEY(AREANO)=0 THEN GOTO NEXT_AREA; /* SKIP NON-IDS */

   2805  4 000021   000000 236000 xsym               LDQ     AREANO
         4 000022   000012 402007                    MPY     10,DL
         4 000023   000000 470400 xsym               LDP0    AREA_KEY$
         4 000024   000000 235106                    LDA     0,QL,PR0
         4 000025   000001 236106                    LDQ     1,QL,PR0
         4 000026   000022 773000                    LRL     18
         4 000027   000000 116003                    CMPQ    0,DU
         4 000030   000624 600000 4                  TZE     NEXT_AREA

      826     2806    2           ZI$DIR.AREA_NM.NAME.TEXT = AREA_KEY_XREF.NAME(AREANO);

   2806  4 000031   000000 236000 xsym               LDQ     AREANO
         4 000032   000050 402007                    MPY     40,DL
         4 000033   040000 100506                    MLR     fill='040'O
         4 000034   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 000035   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30

      827     2807    2           CALL OPEN_AREA ALTRET(ALT_GEN);

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:145  
   2807  4 000036   000633 701000 4                  TSX1    OPEN_AREA
         4 000037   002177 702000 4                  TSX2    ALT_GEN

      828     2808
      829     2809    2           IF DCBADDR(DCBSF)->F$DCB.ORG# ~= %IDS# THEN

   2809  4 000040   000000 470400 5                  LDP0    0
         4 000041   000000 471500                    LDP1    0,,PR0
         4 000042   000000 220000 xsym               LDX0    DCBSF
         4 000043   100000 473510                    LDP3    0,X0,PR1
         4 000044   300032 236100                    LDQ     26,,PR3
         4 000045   777000 376003                    ANQ     -512,DU
         4 000046   007000 116003                    CMPQ    3584,DU
         4 000047   000070 600000 4                  TZE     s:2818

      830     2810    3           DO;

      831     2811    3               ERRCODESF.ERR# = DBU#CHKIDS;

   2811  4 000050   000000 236000 xsym               LDQ     ERRCODESF
         4 000051   000001 376000 5                  ANQ     1
         4 000052   215460 276007                    ORQ     72496,DL
         4 000053   000000 756000 xsym               STQ     ERRCODESF

      832     2812    3               MSGCODE = ERRCODE_RDEF;

   2812  4 000054   000000 756000 xsym               STQ     MSGCODE

      833     2813    3               ERRFLGSF = 3;

   2813  4 000055   003000 236003                    LDQ     1536,DU
         4 000056   000000 756000 xsym               STQ     ERRFLGSF

      834     2814    3               CALL SYS_FUNC_ERRMSG;

   2814  4 000057   000002 631400 5                  EPPR1   2
         4 000060   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:146  
         4 000061   000000 011000                    NOP     0

      835     2815    3               UNWIND TO BREAK_LOCAT; /* ABORT THE JOB, AND DO CLOSE DCBS */

   2815  4 000062   000100 100600                    MLR   ! fill='000'O
         4 000063   000000 000010 xsym               ADSC9   BREAK_LOCAT              cn=0,n=8
         4 000064   200014 000010                    ADSC9   @PTR$+2,,AUTO            cn=0,n=8
         4 000065   200014 237300                    LDAQ  ! @PTR$+2,,AUTO
         4 000066   000000 700200 xent               TSX0  ! X66_AUNWIND
         4 000067   000000 000200                    ZERO    0,128

      836     2816    3               END;
      837     2817
      838     2818    2           CALL GET_ATBLK ALTRET(ALT_GEN);

   2818  4 000070   000716 701000 4                  TSX1    GET_ATBLK
         4 000071   002177 702000 4                  TSX2    ALT_GEN

      839     2819    2           LAST_PAGE = %NO#;

   2819  4 000072   000022 450000 0                  STZ     LAST_PAGE

      840     2820    2           CALL PAGE_RANGE(RB,RE,#BUFS,I_O_SIZE,HIGH_DATA_PG,LAST_PAGE);

   2820  4 000073   000005 630400 5                  EPPR0   5
         4 000074   000003 631400 5                  EPPR1   3
         4 000075   000000 701000 xent               TSX1    PAGE_RANGE
         4 000076   000000 011000                    NOP     0

      841     2821
      842     2822    3           DO WHILE(~LAST_PAGE);

   2822  4 000077   000610 710000 4                  TRA     s:2923

      843     2823    3               I_O_INDX = 0;

   2823  4 000100   000000 450000 0                  STZ     I_O_INDX
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:147  

      844     2824    3               CALL READ_DB ALTRET(ALT_GEN);

   2824  4 000101   000664 701000 4                  TSX1    READ_DB
         4 000102   002177 702000 4                  TSX2    ALT_GEN

      845     2825    3               IF BREAK_FLAG>0 THEN UNWIND TO BREAK_LOCAT;

   2825  4 000103   000000 235000 xsym               LDA     BREAK_FLAG
         4 000104   000113 604400 4                  TMOZ    s:2827

   2825  4 000105   000100 100600                    MLR   ! fill='000'O
         4 000106   000000 000010 xsym               ADSC9   BREAK_LOCAT              cn=0,n=8
         4 000107   200014 000010                    ADSC9   @PTR$+2,,AUTO            cn=0,n=8
         4 000110   200014 237300                    LDAQ  ! @PTR$+2,,AUTO
         4 000111   000000 700200 xent               TSX0  ! X66_AUNWIND
         4 000112   000000 000200                    ZERO    0,128

      846     2826
      847     2827    4               DO RB = RB TO RE;

   2827  4 000113   000601 710000 4                  TRA     s:2921+3

      848     2828    4                   DATA$ = ADDR(I_O_BUF(I_O_INDX));

   2828  4 000114   000000 236000 0                  LDQ     I_O_INDX
         4 000115   000034 736000                    QLS     28
         4 000116   000000 036000 xsym               ADLQ    I_O_BUF$
         4 000117   000000 756000 xsym               STQ     DATA$

      849     2829    4                   HIGH_LINE = DATA_PG.OFF_LN.SEC;

   2829  4 000120   000000 470400 xsym               LDP0    DATA$
         4 000121   000005 236100                    LDQ     5,,PR0
         4 000122   777777 376007                    ANQ     -1,DL
         4 000123   000004 756000 0                  STQ     HIGH_LINE

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:148  
      850     2830
      851     2831    5                   DO LINE_NO = 0 TO HIGH_LINE;

   2831  4 000124   000001 450000 0                  STZ     LINE_NO
         4 000125   000572 710000 4                  TRA     NO_RECORD+1

      852     2832
      853     2833    5                       IF DATA_PG.ACT_DATA_18(OFFSET# LINE_NO) > 0 THEN

   2833  4 000126   000001 335000 0                  LCA     LINE_NO
         4 000127   000001 735000                    ALS     1
         4 000130   000000 470400 xsym               LDP0    DATA$
         4 000131   000100 100505                    MLR     fill='000'O
         4 000132   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         4 000133   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 000134   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 000135   000022 732000                    QRS     18
         4 000136   000000 116003                    CMPQ    0,DU
         4 000137   000571 604400 4                  TMOZ    NO_RECORD

      854     2834    6                       DO;

      855     2835         /*
      856     2836            Check if rec type is one which is being validated.
      857     2837            If so, set RECINDX to the RECLIST entry else altrtn.
      858     2838         */
      859     2839    6                          REC$ = PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(OFFSET# LINE_NO))
              2839                                    ;

   2839  4 000140   000100 100505                    MLR     fill='000'O
         4 000141   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         4 000142   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 000143   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 000144   000022 732000                    QRS     18
         4 000145   000020 736000                    QLS     16
         4 000146   000003 036003                    ADLQ    3,DU
         4 000147   000000 036000 xsym               ADLQ    DATA$
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:149  
         4 000150   000000 756000 xsym               STQ     REC$

      860     2840    6                           RECSTUFF = REC$ -> SZ4; /* Set rec first word of record. */

   2840  4 000151   000000 471400 xsym               LDP1    REC$
         4 000152   000000 100500                    MLR     fill='000'O
         4 000153   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         4 000154   000016 000004 0                  ADSC9   REC                      cn=0,n=4

      861     2841    6                           CALL FIND_REC_ENTRY ALTRET(NO_RECORD);

   2841  4 000155   000773 701000 4                  TSX1    FIND_REC_ENTRY
         4 000156   000571 702000 4                  TSX2    NO_RECORD

      862     2842         /*
      863     2843            Extract DBK and set pointers from this record.
      864     2844         */
      865     2845    6                          CURR_DBK = DATA_PG.CON_INTRVAL*LPP + LINE_NO + LOW_DBK - LPP
              2845                                    ;

   2845  4 000157   000000 470400 xsym               LDP0    DATA$
         4 000160   000004 236100                    LDQ     4,,PR0
         4 000161   000000 402000 xsym               MPY     LPP
         4 000162   000001 036000 0                  ADLQ    LINE_NO
         4 000163   000000 036000 xsym               ADLQ    LOW_DBK
         4 000164   000000 136000 xsym               SBLQ    LPP
         4 000165   000002 756000 0                  STQ     CURR_DBK

      866     2846    6                           SETINDX = RECLIST.SETINDX(RECINDX);

   2846  4 000166   000000 720000 xsym               LXL0    RECINDX
         4 000167   000000 236010 xsym               LDQ     RECLIST,X0
         4 000170   000022 736000                    QLS     18
         4 000171   000022 732000                    QRS     18
         4 000172   000000 756000 xsym               STQ     SETINDX

      867     2847    6                           IF MSTR_REF.PAOFF(MSTR_INDX)>0 THEN /* PA REC */
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:150  

   2847  4 000173   000000 236000 xsym               LDQ     MSTR_INDX
         4 000174   000012 402007                    MPY     10,DL
         4 000175   000000 471400 xsym               LDP1    MSTR$
         4 000176   100011 236106                    LDQ     9,QL,PR1
         4 000177   777000 316003                    CANQ    -512,DU
         4 000200   000204 600000 4                  TZE     s:2850

      868     2848    6                               TYPE_PA = %YES#;

   2848  4 000201   400000 236003                    LDQ     -131072,DU
         4 000202   000023 756000 0                  STQ     TYPE_PA
         4 000203   000205 710000 4                  TRA     s:2852

      869     2849    6                           ELSE
      870     2850    6                               TYPE_PA = %NO#;

   2850  4 000204   000023 450000 0                  STZ     TYPE_PA

      871     2851
      872     2852    7                           DO WHILE(SETLIST(SETINDX) ~= -1);

   2852  4 000205   000560 710000 4                  TRA     s:2917

      873     2853
      874     2854    7                               SETNUM = SET_XREF.MSTRINDX(SETLIST(SETINDX));
              2854                                        /* MSTR_XREF index */

   2854  4 000206   000000 235000 xsym               LDA     SETINDX
         4 000207   000001 735000                    ALS     1
         4 000210   000100 100405                    MLR     fill='000'O
         4 000211   000000 000002 xsym               ADSC9   SETLIST,A                cn=0,n=2
         4 000212   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 000213   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 000214   000022 732000                    QRS     18
         4 000215   000002 736000                    QLS     2
         4 000216   000000 470400 xsym               LDP0    SET_XREF$
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:151  
         4 000217   000000 236106                    LDQ     0,QL,PR0
         4 000220   000022 732000                    QRS     18
         4 000221   000011 756000 0                  STQ     SETNUM

      875     2855    7                               CALL PULL_PTRS ALTRET(RE_ENTRY);

   2855  4 000222   001102 701000 4                  TSX1    PULL_PTRS
         4 000223   000227 702000 4                  TSX2    RE_ENTRY

      876     2856    7                               CALL WRITE_EG;

   2856  4 000224   002102 701000 4                  TSX1    WRITE_EG
         4 000225   000000 011000                    NOP     0

      877     2857    7                               RETURN; /* Return PTREC to sort */

   2857  4 000226   000000 702200 xent               TSX2  ! X66_ARET

   2854  4 000227                       RE_ENTRY     null
      878     2858    7   RE_ENTRY:                   ; IF TYPE_PA THEN

   2858  4 000227   000023 234000 0                  SZN     TYPE_PA
         4 000230   000557 605000 4                  TPL     s:2916

      879     2859    8                               DO; /* PTR_LEN,KEY_LEN & NO_ENTRIES already found */

      880     2860         /*  For this PA record - process entries */
      881     2861    8                                   PTREC.RECTYPE = REC.TYPE * -1;

   2861  4 000231   000016 236000 0                  LDQ     REC
         4 000232   000022 772000                    QRL     18
         4 000233   000013 676000 5                  ERQ     11
         4 000234   000001 036007                    ADLQ    1,DL
         4 000235   200014 756100                    STQ     @PTR$+2,,AUTO
         4 000236   200003 470500                    LDP0    @PTREC,,AUTO
         4 000237   000100 101500                    MRL     fill='000'O
         4 000240   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:152  
         4 000241   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2

      882     2862    8                                   PTREC.DBK = CURR_DBK;

   2862  4 000242   000100 100400                    MLR     fill='000'O
         4 000243   000002 000004 0                  ADSC9   CURR_DBK                 cn=0,n=4
         4 000244   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4

      883     2863    8                                   PTREC.SETTYPE = MSTR_REF.TYPE(SETNUM);

   2863  4 000245   000011 236000 0                  LDQ     SETNUM
         4 000246   000050 402007                    MPY     40,DL
         4 000247   000000 471400 xsym               LDP1    MSTR$
         4 000250   000100 100506                    MLR     fill='000'O
         4 000251   100000 000002                    ADSC9   0,Q,PR1                  cn=0,n=2
         4 000252   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2

      884     2864    8                                   IF PA_REC.NOT_LOWEST_LEVEL THEN

   2864  4 000253   000000 473400 xsym               LDP3    REC$
         4 000254   000000 066500                    CMPB    filb='1'B
         4 000255   300001 000001                    BDSC    1,,PR3                   by=0,bit=0,n=1
         4 000256   000002 000022 5                  BDSC    2                        by=0,bit=0,n=18
         4 000257   000272 600000 4                  TZE     s:2866

      885     2865    8                                       PTREC.SETTYPE = PTREC.SETTYPE - 5000;

   2865  4 000260   000100 100500                    MLR     fill='000'O
         4 000261   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
         4 000262   200015 000004                    ADSC9   @PTR$+3,,AUTO            cn=0,n=4
         4 000263   200015 236100                    LDQ     @PTR$+3,,AUTO
         4 000264   000022 732000                    QRS     18
         4 000265   011610 136007                    SBLQ    5000,DL
         4 000266   200014 756100                    STQ     @PTR$+2,,AUTO
         4 000267   000100 101500                    MRL     fill='000'O
         4 000270   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 000271   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:153  

      886     2866    8                                   ENTRY$ = PINCRC(REC$,MSTR_REF.PAOFF(MSTR_INDX));

   2866  4 000272   000000 236000 xsym               LDQ     MSTR_INDX
         4 000273   000012 402007                    MPY     10,DL
         4 000274   100011 236106                    LDQ     9,QL,PR1
         4 000275   000033 772000                    QRL     27
         4 000276   000020 736000                    QLS     16
         4 000277   000000 036000 xsym               ADLQ    REC$
         4 000300   000000 756000 xsym               STQ     ENTRY$

      887     2867         /*  In processing the PA entry ptrs, I multiply the */
      888     2868         /*  record type by -1. This is to indicate latter */
      889     2869         /*  that these pointers refer to pa entries and that*/
      890     2870         /* the entry nmbr is stored in the ownr ptr position */
      891     2871    9                                   DO ENTRYNO = 1 TO NO_ENTRIES;

   2871  4 000301   000001 235007                    LDA     1,DL
         4 000302   000005 755000 0                  STA     ENTRYNO
         4 000303   000553 710000 4                  TRA     s:2913+1

      892     2872    9                                       PTREC.PA.ENTRY# = ENTRYNO;

   2872  4 000304   200003 470500                    LDP0    @PTREC,,AUTO
         4 000305   000100 101400                    MRL     fill='000'O
         4 000306   000005 000004 0                  ADSC9   ENTRYNO                  cn=0,n=4
         4 000307   000003 000002                    ADSC9   3,,PR0                   cn=0,n=2

      893     2873    9                                       PTREC.PA.GROUP# = 0;

   2873  4 000310   000100 101400                    MRL     fill='000'O
         4 000311   000002 000004 5                  ADSC9   2                        cn=0,n=4
         4 000312   000003 400002                    ADSC9   3,,PR0                   cn=2,n=2

      894     2874    9                                       IF PA_ENTRY.C = 1 THEN

   2874  4 000313   000000 471400 xsym               LDP1    ENTRY$
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:154  
         4 000314   003100 061500                    CSR     bolr='003'O
         4 000315   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1
         4 000316   200014 000044                    BDSC    @PTR$+2,,AUTO            by=0,bit=0,n=36
         4 000317   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 000320   000001 116007                    CMPQ    1,DL
         4 000321   000461 601000 4                  TNZ     s:2900

      895     2875   10                                       DO;

      896     2876   10                                           ENTRY$ = PINCRC(ENTRY$,2);

   2876  4 000322   000000 236000 xsym               LDQ     ENTRY$
         4 000323   400000 036007                    ADLQ    -131072,DL
         4 000324   000000 756000 xsym               STQ     ENTRY$

      897     2877   10                                           CALL GETPTR(SETVAL,ENTRY$);

   2877  4 000325   000014 236000 5                  LDQ     12
         4 000326   200012 756100                    STQ     @VAL+1,,AUTO
         4 000327   000015 236000 5                  LDQ     13
         4 000330   200011 756100                    STQ     @PTSIZE+5,,AUTO
         4 000331   001025 701000 4                  TSX1    GETPTR
         4 000332   000000 011000                    NOP     0

      898     2878   10                                           IF MSTR_REF.GLOBAL(SETNUM) ~= 1 THEN

   2878  4 000333   000011 236000 0                  LDQ     SETNUM
         4 000334   000012 402007                    MPY     10,DL
         4 000335   000000 470400 xsym               LDP0    MSTR$
         4 000336   000011 236106                    LDQ     9,QL,PR0
         4 000337   777000 376003                    ANQ     -512,DU
         4 000340   001000 116003                    CMPQ    512,DU
         4 000341   000346 600000 4                  TZE     s:2881

      899     2879   10                                               SETVAL = SETVAL - LOW_DBK +1;

   2879  4 000342   000012 236000 0                  LDQ     SETVAL
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:155  
         4 000343   000000 136000 xsym               SBLQ    LOW_DBK
         4 000344   000001 036007                    ADLQ    1,DL
         4 000345   000012 756000 0                  STQ     SETVAL

      900     2880         /* Was not a real rec ptr so dont unexpand value */
      901     2881   10                                           GROUP$ = PINCRC(REC$,SETVAL);

   2881  4 000346   000012 236000 0                  LDQ     SETVAL
         4 000347   000020 736000                    QLS     16
         4 000350   000000 036000 xsym               ADLQ    REC$
         4 000351   000000 756000 xsym               STQ     GROUP$

      902     2882   10                                           NO_PTRS = PA_GROUP.NO_GROUPS;

   2882  4 000352   000000 471400 xsym               LDP1    GROUP$
         4 000353   000000 101500                    MRL     fill='000'O
         4 000354   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         4 000355   000007 000004 0                  ADSC9   NO_PTRS                  cn=0,n=4

      903     2883   10                                           GROUP$ = PINCRW(GROUP$,1);

   2883  4 000356   000001 036003                    ADLQ    1,DU
         4 000357   000000 756000 xsym               STQ     GROUP$

      904     2884   11                                           DO X = 1 TO NO_PTRS;

   2884  4 000360   000001 235007                    LDA     1,DL
         4 000361   000000 755000 xsym               STA     X
         4 000362   000455 710000 4                  TRA     s:2897+1

      905     2885   11                                               CALL GETPTR(SETVAL,GROUP$);

   2885  4 000363   000016 236000 5                  LDQ     14
         4 000364   200012 756100                    STQ     @VAL+1,,AUTO
         4 000365   000015 236000 5                  LDQ     13
         4 000366   200011 756100                    STQ     @PTSIZE+5,,AUTO
         4 000367   001025 701000 4                  TSX1    GETPTR
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:156  
         4 000370   000000 011000                    NOP     0

      906     2886   11                                               PTREC.PA.GROUP# = X;

   2886  4 000371   200003 470500                    LDP0    @PTREC,,AUTO
         4 000372   000100 101400                    MRL     fill='000'O
         4 000373   000000 000004 xsym               ADSC9   X                        cn=0,n=4
         4 000374   000003 400002                    ADSC9   3,,PR0                   cn=2,n=2

      907     2887   11                                               PTREC.NEXT = SETVAL;

   2887  4 000375   000100 100400                    MLR     fill='000'O
         4 000376   000012 000004 0                  ADSC9   SETVAL                   cn=0,n=4
         4 000377   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      908     2888   11                                               RETURNCODE = %PACODE1;

   2888  4 000400   000001 235007                    LDA     1,DL
         4 000401   000010 755000 0                  STA     RETURNCODE

      909     2889   11                                               RETURN; /* Return PT to sort */

   2889  4 000402   000000 702200 xent               TSX2  ! X66_ARET

   2888  4 000403                       PA_RTN1      null
      910     2890   11   PA_RTN1:                                    ; PTREC.PA.ENTRY# = ENTRYNO;

   2890  4 000403   200003 470500                    LDP0    @PTREC,,AUTO
         4 000404   000100 101400                    MRL     fill='000'O
         4 000405   000005 000004 0                  ADSC9   ENTRYNO                  cn=0,n=4
         4 000406   000003 000002                    ADSC9   3,,PR0                   cn=0,n=2

      911     2891   11                                               PTREC.SETTYPE = MSTR_REF.TYPE(SETNUM);

   2891  4 000407   000011 236000 0                  LDQ     SETNUM
         4 000410   000050 402007                    MPY     40,DL
         4 000411   000000 471400 xsym               LDP1    MSTR$
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:157  
         4 000412   000100 100506                    MLR     fill='000'O
         4 000413   100000 000002                    ADSC9   0,Q,PR1                  cn=0,n=2
         4 000414   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2

      912     2892   11                                               IF PA_REC.NOT_LOWEST_LEVEL THEN

   2892  4 000415   000000 473400 xsym               LDP3    REC$
         4 000416   000000 066500                    CMPB    filb='1'B
         4 000417   300001 000001                    BDSC    1,,PR3                   by=0,bit=0,n=1
         4 000420   000002 000022 5                  BDSC    2                        by=0,bit=0,n=18
         4 000421   000434 600000 4                  TZE     s:2894

      913     2893   11                                                  PTREC.SETTYPE = PTREC.SETTYPE - 5000
              2893                                                            ;

   2893  4 000422   000100 100500                    MLR     fill='000'O
         4 000423   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
         4 000424   200015 000004                    ADSC9   @PTR$+3,,AUTO            cn=0,n=4
         4 000425   200015 236100                    LDQ     @PTR$+3,,AUTO
         4 000426   000022 732000                    QRS     18
         4 000427   011610 136007                    SBLQ    5000,DL
         4 000430   200014 756100                    STQ     @PTR$+2,,AUTO
         4 000431   000100 101500                    MRL     fill='000'O
         4 000432   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 000433   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2

      914     2894   11                                               PTREC.RECTYPE = REC.TYPE * -1;

   2894  4 000434   000016 236000 0                  LDQ     REC
         4 000435   000022 772000                    QRL     18
         4 000436   000013 676000 5                  ERQ     11
         4 000437   000001 036007                    ADLQ    1,DL
         4 000440   200014 756100                    STQ     @PTR$+2,,AUTO
         4 000441   000100 101500                    MRL     fill='000'O
         4 000442   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 000443   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:158  
      915     2895   11                                               PTREC.DBK = CURR_DBK;

   2895  4 000444   000100 100400                    MLR     fill='000'O
         4 000445   000002 000004 0                  ADSC9   CURR_DBK                 cn=0,n=4
         4 000446   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4

      916     2896   11                                               GROUP$ = PINCRC(GROUP$,2+PTR_LEN);

   2896  4 000447   000000 236000 xsym               LDQ     PTR_LEN
         4 000450   000020 736000                    QLS     16
         4 000451   400000 036007                    ADLQ    -131072,DL
         4 000452   000000 036000 xsym               ADLQ    GROUP$
         4 000453   000000 756000 xsym               STQ     GROUP$

      917     2897   11                                               END;

   2897  4 000454   000000 054000 xsym               AOS     X
         4 000455   000000 236000 xsym               LDQ     X
         4 000456   000007 116000 0                  CMPQ    NO_PTRS
         4 000457   000363 604400 4                  TMOZ    s:2885

      918     2898   10                                           END;

   2898  4 000460   000545 710000 4                  TRA     s:2912

      919     2899   10                                       ELSE DO;

      920     2900   10                                           ENTRY$ = PINCRC(ENTRY$,2);

   2900  4 000461   000000 236000 xsym               LDQ     ENTRY$
         4 000462   400000 036007                    ADLQ    -131072,DL
         4 000463   000000 756000 xsym               STQ     ENTRY$

      921     2901   10                                           CALL GETPTR(SETVAL,ENTRY$);

   2901  4 000464   000014 236000 5                  LDQ     12
         4 000465   200012 756100                    STQ     @VAL+1,,AUTO
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:159  
         4 000466   000015 236000 5                  LDQ     13
         4 000467   200011 756100                    STQ     @PTSIZE+5,,AUTO
         4 000470   001025 701000 4                  TSX1    GETPTR
         4 000471   000000 011000                    NOP     0

      922     2902   10                                           PTREC.NEXT = SETVAL;

   2902  4 000472   200003 470500                    LDP0    @PTREC,,AUTO
         4 000473   000100 100400                    MLR     fill='000'O
         4 000474   000012 000004 0                  ADSC9   SETVAL                   cn=0,n=4
         4 000475   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      923     2903   10                                           RETURNCODE = %PACODE2;

   2903  4 000476   000002 235007                    LDA     2,DL
         4 000477   000010 755000 0                  STA     RETURNCODE

      924     2904   10                                           RETURN; /* Return PT to sort */

   2904  4 000500   000000 702200 xent               TSX2  ! X66_ARET

   2903  4 000501                       PA_RTN2      null
      925     2905   10   PA_RTN2:                                ; PTREC.PA.ENTRY# = ENTRYNO;

   2905  4 000501   200003 470500                    LDP0    @PTREC,,AUTO
         4 000502   000100 101400                    MRL     fill='000'O
         4 000503   000005 000004 0                  ADSC9   ENTRYNO                  cn=0,n=4
         4 000504   000003 000002                    ADSC9   3,,PR0                   cn=0,n=2

      926     2906   10                                           PTREC.SETTYPE = MSTR_REF.TYPE(SETNUM);

   2906  4 000505   000011 236000 0                  LDQ     SETNUM
         4 000506   000050 402007                    MPY     40,DL
         4 000507   000000 471400 xsym               LDP1    MSTR$
         4 000510   000100 100506                    MLR     fill='000'O
         4 000511   100000 000002                    ADSC9   0,Q,PR1                  cn=0,n=2
         4 000512   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:160  

      927     2907   10                                           IF PA_REC.NOT_LOWEST_LEVEL THEN

   2907  4 000513   000000 473400 xsym               LDP3    REC$
         4 000514   000000 066500                    CMPB    filb='1'B
         4 000515   300001 000001                    BDSC    1,,PR3                   by=0,bit=0,n=1
         4 000516   000002 000022 5                  BDSC    2                        by=0,bit=0,n=18
         4 000517   000532 600000 4                  TZE     s:2909

      928     2908   10                                               PTREC.SETTYPE = PTREC.SETTYPE - 5000;

   2908  4 000520   000100 100500                    MLR     fill='000'O
         4 000521   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
         4 000522   200015 000004                    ADSC9   @PTR$+3,,AUTO            cn=0,n=4
         4 000523   200015 236100                    LDQ     @PTR$+3,,AUTO
         4 000524   000022 732000                    QRS     18
         4 000525   011610 136007                    SBLQ    5000,DL
         4 000526   200014 756100                    STQ     @PTR$+2,,AUTO
         4 000527   000100 101500                    MRL     fill='000'O
         4 000530   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 000531   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2

      929     2909   10                                           PTREC.RECTYPE = REC.TYPE * -1;

   2909  4 000532   000016 236000 0                  LDQ     REC
         4 000533   000022 772000                    QRL     18
         4 000534   000013 676000 5                  ERQ     11
         4 000535   000001 036007                    ADLQ    1,DL
         4 000536   200014 756100                    STQ     @PTR$+2,,AUTO
         4 000537   000100 101500                    MRL     fill='000'O
         4 000540   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 000541   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2

      930     2910   10                                           PTREC.DBK = CURR_DBK;

   2910  4 000542   000100 100400                    MLR     fill='000'O
         4 000543   000002 000004 0                  ADSC9   CURR_DBK                 cn=0,n=4
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:161  
         4 000544   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4

      931     2911   10                                           END;

      932     2912    9                                       ENTRY$ = PINCRC(ENTRY$,KEY_LEN + PTR_LEN);

   2912  4 000545   000000 236000 xsym               LDQ     KEY_LEN
         4 000546   000000 036000 xsym               ADLQ    PTR_LEN
         4 000547   000020 736000                    QLS     16
         4 000550   000000 036000 xsym               ADLQ    ENTRY$
         4 000551   000000 756000 xsym               STQ     ENTRY$

      933     2913    9                                       END;

   2913  4 000552   000005 054000 0                  AOS     ENTRYNO
         4 000553   000005 236000 0                  LDQ     ENTRYNO
         4 000554   000006 116000 0                  CMPQ    NO_ENTRIES
         4 000555   000304 604400 4                  TMOZ    s:2872

      934     2914    8                                   RETURNCODE = %STANDRD;

   2914  4 000556   000010 450000 0                  STZ     RETURNCODE

      935     2915    8                                   END;

      936     2916    7                               SETINDX = SETINDX + 1;

   2916  4 000557   000000 054000 xsym               AOS     SETINDX

      937     2917    7                               END;

   2917  4 000560   000000 235000 xsym               LDA     SETINDX
         4 000561   000001 735000                    ALS     1
         4 000562   000100 100405                    MLR     fill='000'O
         4 000563   000000 000002 xsym               ADSC9   SETLIST,A                cn=0,n=2
         4 000564   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 000565   200014 236100                    LDQ     @PTR$+2,,AUTO
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:162  
         4 000566   000022 732000                    QRS     18
         4 000567   000013 116000 5                  CMPQ    11
         4 000570   000206 601000 4                  TNZ     s:2854

      938     2918    6   NO_RECORD:              END;

   2918  4 000571                       NO_RECORD    null
      939     2919    5                       END;

   2919  4 000571   000001 054000 0                  AOS     LINE_NO
         4 000572   000001 236000 0                  LDQ     LINE_NO
         4 000573   000004 116000 0                  CMPQ    HIGH_LINE
         4 000574   000126 604400 4                  TMOZ    s:2833

      940     2920    4                   I_O_INDX = I_O_INDX + 1;

   2920  4 000575   000000 054000 0                  AOS     I_O_INDX

      941     2921    4                   END;

   2921  4 000576   000000 235000 xsym               LDA     RB
         4 000577   000001 035007                    ADLA    1,DL
         4 000600   000000 755000 xsym               STA     RB
         4 000601   000000 236000 xsym               LDQ     RE
         4 000602   000000 116000 xsym               CMPQ    RB
         4 000603   000114 603000 4                  TRC     s:2828

      942     2922    3               CALL PAGE_RANGE(RB,RE,#BUFS,I_O_SIZE,HIGH_DATA_PG,LAST_PAGE);

   2922  4 000604   000005 630400 5                  EPPR0   5
         4 000605   000003 631400 5                  EPPR1   3
         4 000606   000000 701000 xent               TSX1    PAGE_RANGE
         4 000607   000000 011000                    NOP     0

      943     2923    3               END;

   2923  4 000610   000022 236000 0                  LDQ     LAST_PAGE
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:163  
         4 000611   400000 376003                    ANQ     -131072,DU
         4 000612   400000 676003                    ERQ     -131072,DU
         4 000613   000100 601000 4                  TNZ     s:2823

      944     2924
      945     2925    2   CLOSE_FILE:
      946     2926    2           DCBSF = ZI$DIR.AREA_NM.DCB#;

   2926  4 000614   000244 220000 xsym  CLOSE_FILE   LDX0    ZI$DIR+164
         4 000615   000000 740000 xsym               STX0    DCBSF

      947     2927    2           CALL SYS_FUNC_CLOS;

   2927  4 000616   000002 631400 5                  EPPR1   2
         4 000617   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000620   000000 011000                    NOP     0

      948     2928    2           CALL SYS_FUNC_RELDCB;

   2928  4 000621   000002 631400 5                  EPPR1   2
         4 000622   000000 701000 xent               TSX1    SYS_FUNC_RELDCB
         4 000623   000000 011000                    NOP     0

      949     2929    2   NEXT_AREA:
      950     2930    2           END;

   2930  4 000624   000000 054000 xsym  NEXT_AREA    AOS     AREANO
         4 000625   000000 236000 xsym               LDQ     AREANO
         4 000626   000000 116000 xsym               CMPQ    NO_AREAS
         4 000627   000021 604000 4                  TMI     s:2805

      951     2931
      952     2932    1       CALL FLUSH_EG ALTRET(ALT_GEN); /* Write remaining EG recs */

   2932  4 000630   002141 701000 4                  TSX1    FLUSH_EG
         4 000631   002177 702000 4                  TSX2    ALT_GEN

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:164  
      953     2933    1       ALTRETURN; /* Indicate to sort completion */

   2933  4 000632   000000 702200 xent               TSX2  ! X66_AALT

      954     2934
      955     2935        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:165  
      956     2936        /*
      957     2937                    Data base I/O routines. (OPEN/READ ATBLK/READ #BUFS)
      958     2938        */
      959     2939    1   OPEN_AREA: PROC ALTRET;

   2939  4 000633   200006 741300       OPEN_AREA    STX1  ! @PTSIZE+2,,AUTO

      960     2940    2       CALL GET_DCB(ZI$DIR.AREA_NM) ALTRET(ALTRTN);

   2940  4 000634   000020 630400 5                  EPPR0   16
         4 000635   000017 631400 5                  EPPR1   15
         4 000636   000000 701000 xent               TSX1    GET_DCB
         4 000637   000662 702000 4                  TSX2    ALTRTN

      961     2941
      962     2942    2   /**/ FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;

   2942  4 000640   040000 100400                    MLR     fill='040'O
         4 000641   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000642   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      963     2943    2       FUNSF = %IN#;

   2943  4 000643   000002 235007                    LDA     2,DL
         4 000644   000000 755000 xsym               STA     FUNSF

      964     2944    2       SHARESF = %IN#;

   2944  4 000645   400000 236003                    LDQ     -131072,DU
         4 000646   000000 756000 xsym               STQ     SHARESF

      965     2945    2       ORGSF = %IDS#;

   2945  4 000647   000007 235007                    LDA     7,DL
         4 000650   000000 755000 xsym               STA     ORGSF

      966     2946    2       ACSSF = %DIRECT#;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:166  

   2946  4 000651   000002 235007                    LDA     2,DL
         4 000652   000000 755000 xsym               STA     ACSSF

      967     2947    2       ASNSF = %FILE#;

   2947  4 000653   000001 235007                    LDA     1,DL
         4 000654   000000 755000 xsym               STA     ASNSF

      968     2948    2       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);

   2948  4 000655   000002 631400 5                  EPPR1   2
         4 000656   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000657   000662 702000 4                  TSX2    ALTRTN

      969     2949    2       RETURN;

   2949  4 000660   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 000661   000001 702211                    TSX2  ! 1,X1

      970     2950    2   ALTRTN:
      971     2951    2       ALTRETURN;

   2951  4 000662   200006 221300       ALTRTN       LDX1  ! @PTSIZE+2,,AUTO
         4 000663   000000 702211                    TSX2  ! 0,X1

      972     2952    2   END OPEN_AREA;
      973     2953
      974     2954    1   READ_DB: PROC ALTRET;

   2954  4 000664   200006 741300       READ_DB      STX1  ! @PTSIZE+2,,AUTO

      975     2955
      976     2956    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;

   2956  4 000665   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000666   000000 740000 xsym               STX0    DCBSF
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:167  

      977     2957    2   /**/ BUFSF = VECTOR(I_O_BUF(0));

   2957  4 000667   000021 235000 5                  LDA     17
         4 000670   000000 236000 xsym               LDQ     I_O_BUF$
         4 000671   000000 755000 xsym               STA     BUFSF
         4 000672   000001 756000 xsym               STQ     BUFSF+1

      978     2958    2   /**/ BUFLNSF = I_O_SIZE * 4096;

   2958  4 000673   000000 235000 xsym               LDA     I_O_SIZE
         4 000674   000014 735000                    ALS     12
         4 000675   000000 755000 xsym               STA     BUFLNSF

      979     2959    2   /**/ FULLSF = %YES#;

   2959  4 000676   400000 236003                    LDQ     -131072,DU
         4 000677   000000 756000 xsym               STQ     FULLSF

      980     2960    2   /**/ ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;

   2960  4 000700   000027 236000 xsym               LDQ     ZI$DIR+23
         4 000701   000000 756000 xsym               STQ     ENCRP_SEEDSF

      981     2961    2   /**/ KEYSF = %YES#;

   2961  4 000702   400000 236003                    LDQ     -131072,DU
         4 000703   000000 756000 xsym               STQ     KEYSF

      982     2962    2   /**/ KEYVSF.IDSKEY = RB;

   2962  4 000704   000000 100400                    MLR     fill='000'O
         4 000705   000000 000004 xsym               ADSC9   RB                       cn=0,n=4
         4 000706   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

      983     2963    2       CALL SYS_FUNC_READ ALTRET(ALTRTN);

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:168  
   2963  4 000707   000002 631400 5                  EPPR1   2
         4 000710   000000 701000 xent               TSX1    SYS_FUNC_READ
         4 000711   000714 702000 4                  TSX2    ALTRTN

      984     2964    2       RETURN;

   2964  4 000712   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 000713   000001 702211                    TSX2  ! 1,X1

      985     2965    2   ALTRTN:
      986     2966    2       ALTRETURN;

   2966  4 000714   200006 221300       ALTRTN       LDX1  ! @PTSIZE+2,,AUTO
         4 000715   000000 702211                    TSX2  ! 0,X1

      987     2967
      988     2968    2   END READ_DB;
      989     2969
      990     2970        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:169  
      991     2971    1   GET_ATBLK: PROC ALTRET;

   2971  4 000716   200006 741300       GET_ATBLK    STX1  ! @PTSIZE+2,,AUTO

      992     2972        /*
      993     2973           Evaluate high data page and number of inventory pages according
      994     2974           to attribute block information.
      995     2975        */
      996     2976
      997     2977    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;

   2977  4 000717   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000720   000000 740000 xsym               STX0    DCBSF

      998     2978    2   /**/ BUFSF = VECTOR(I_O_BUF(0));

   2978  4 000721   000021 235000 5                  LDA     17
         4 000722   000000 236000 xsym               LDQ     I_O_BUF$
         4 000723   000000 755000 xsym               STA     BUFSF
         4 000724   000001 756000 xsym               STQ     BUFSF+1

      999     2979    2   /**/ BUFLNSF = 4096;

   2979  4 000725   010000 235007                    LDA     4096,DL
         4 000726   000000 755000 xsym               STA     BUFLNSF

     1000     2980    2   /**/ FULLSF = %YES#;

   2980  4 000727   400000 236003                    LDQ     -131072,DU
         4 000730   000000 756000 xsym               STQ     FULLSF

     1001     2981    2   /**/ ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;

   2981  4 000731   000027 236000 xsym               LDQ     ZI$DIR+23
         4 000732   000000 756000 xsym               STQ     ENCRP_SEEDSF

     1002     2982    2   /**/ KEYSF = %YES#;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:170  

   2982  4 000733   400000 236003                    LDQ     -131072,DU
         4 000734   000000 756000 xsym               STQ     KEYSF

     1003     2983    2   /**/ KEYVSF.IDSKEY = 0;

   2983  4 000735   000000 100400                    MLR     fill='000'O
         4 000736   000002 000004 5                  ADSC9   2                        cn=0,n=4
         4 000737   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

     1004     2984    2       CALL SYS_FUNC_READ ALTRET(ALT_ATBLK);

   2984  4 000740   000002 631400 5                  EPPR1   2
         4 000741   000000 701000 xent               TSX1    SYS_FUNC_READ
         4 000742   000771 702000 4                  TSX2    ALT_ATBLK

     1005     2985    2       ATBLK$ = ADDR(I_O_BUF(0));

   2985  4 000743   000000 236000 xsym               LDQ     I_O_BUF$
         4 000744   000000 756000 xsym               STQ     ATBLK$

     1006     2986    2       IF ATBLK_PG.FIR_INV_PGNO = 0 THEN

   2986  4 000745   000000 470400 xsym               LDP0    ATBLK$
         4 000746   000014 235100                    LDA     12,,PR0
         4 000747   000753 601000 4                  TNZ     s:2991

     1007     2987    3       DO;

     1008     2988    3           HIGH_DATA_PG = ATBLK_PG.NUM_DBPG;

   2988  4 000750   000005 235100                    LDA     5,,PR0
         4 000751   000000 755000 xsym               STA     HIGH_DATA_PG

     1009     2989    3           END;

   2989  4 000752   000762 710000 4                  TRA     s:2994
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:171  

     1010     2990    3       ELSE DO;

     1011     2991    3           HIGH_DATA_PG = ATBLK_PG.NUM_DBPG - ((ATBLK_PG.NUM_DBPG -

   2991  4 000753   000005 236100                    LDQ     5,,PR0
         4 000754   000014 136100                    SBLQ    12,,PR0
         4 000755   200014 756100                    STQ     @PTR$+2,,AUTO
         4 000756   000005 236100                    LDQ     5,,PR0
         4 000757   200014 136100                    SBLQ    @PTR$+2,,AUTO
         4 000760   000001 136007                    SBLQ    1,DL
         4 000761   000000 756000 xsym               STQ     HIGH_DATA_PG

     1012     2992    3              ATBLK_PG.FIR_INV_PGNO)+1);
     1013     2993    3           END;

     1014     2994    2       LOW_DBK = ATBLK_PG.LOW_DBK;

   2994  4 000762   000015 235100                    LDA     13,,PR0
         4 000763   000000 755000 xsym               STA     LOW_DBK

     1015     2995    2       LPP = ATBLK_PG.LINE_INFO.LPP;

   2995  4 000764   000012 236100                    LDQ     10,,PR0
         4 000765   777777 376007                    ANQ     -1,DL
         4 000766   000000 756000 xsym               STQ     LPP

     1016     2996    2       RETURN;

   2996  4 000767   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 000770   000001 702211                    TSX2  ! 1,X1

     1017     2997        /**/
     1018     2998    2   ALT_ATBLK:
     1019     2999    2       ALTRETURN;

   2999  4 000771   200006 221300       ALT_ATBLK    LDX1  ! @PTSIZE+2,,AUTO
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:172  
         4 000772   000000 702211                    TSX2  ! 0,X1

     1020     3000    2   END GET_ATBLK;
     1021     3001        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:173  
     1022     3002        /*
     1023     3003           This routine looks at the record type pointed to by rec$ and
     1024     3004           searches RECLIST for that record entry. If found - RECINDX is
     1025     3005           set and normal return is taken. If no entry is found the altretun
     1026     3006           is taken.
     1027     3007        */
     1028     3008    1   FIND_REC_ENTRY: PROC ALTRET;

   3008  4 000773   200006 741300       FIND_REC_EN* STX1  ! @PTSIZE+2,,AUTO

     1029     3009
     1030     3010    3       DO RECINDX = 0 TO HIGH_RECINDX;

   3010  4 000774   000000 450000 xsym               STZ     RECINDX
         4 000775   001020 710000 4                  TRA     s:3016+1

     1031     3011    3           IF MSTR_REF.TYPE(RECLIST.MSTRINDX(RECINDX)) = REC.TYPE THEN

   3011  4 000776   000000 720000 xsym               LXL0    RECINDX
         4 000777   000000 236010 xsym               LDQ     RECLIST,X0
         4 001000   000022 732000                    QRS     18
         4 001001   000012 402007                    MPY     10,DL
         4 001002   000016 235000 0                  LDA     REC
         4 001003   000022 771000                    ARL     18
         4 001004   200014 755100                    STA     @PTR$+2,,AUTO
         4 001005   000000 470400 xsym               LDP0    MSTR$
         4 001006   000000 236106                    LDQ     0,QL,PR0
         4 001007   000022 732000                    QRS     18
         4 001010   200014 116100                    CMPQ    @PTR$+2,,AUTO
         4 001011   001017 601000 4                  TNZ     s:3016

     1032     3012    4           DO;

     1033     3013    4               MSTR_INDX = RECLIST.MSTRINDX(RECINDX);

   3013  4 001012   000000 236010 xsym               LDQ     RECLIST,X0
         4 001013   000022 732000                    QRS     18
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:174  
         4 001014   000000 756000 xsym               STQ     MSTR_INDX

     1034     3014    4               RETURN;

   3014  4 001015   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 001016   000001 702211                    TSX2  ! 1,X1

     1035     3015    4               END;
     1036     3016    3           END;

   3016  4 001017   000000 054000 xsym               AOS     RECINDX
         4 001020   000000 236000 xsym               LDQ     RECINDX
         4 001021   000000 116000 xsym               CMPQ    HIGH_RECINDX
         4 001022   000776 604400 4                  TMOZ    s:3011

     1037     3017    2       ALTRETURN;

   3017  4 001023   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 001024   000000 702211                    TSX2  ! 0,X1

     1038     3018    2   END FIND_REC_ENTRY;
     1039     3019        /*
     1040     3020              EXTRACT THE POINTER VALUE POINTED TO BY PTR$
     1041     3021        */
     1042     3022    1   GETPTR: PROC(VAL,PTR$);

   3022  4 001025   200010 741300       GETPTR       STX1  ! @PTSIZE+4,,AUTO

     1043     3023    2   DCL VAL UBIN;
     1044     3024    2   DCL PTR$ PTR;
     1045     3025
     1046     3026    3       DO CASE(PTR_LEN);

   3026  4 001026   000000 235000 xsym               LDA     PTR_LEN
         4 001027   000005 115007                    CMPA    5,DL
         4 001030   001032 602005 4                  TNC     s:3026+4,AL
         4 001031   001063 710000 4                  TRA     s:3034
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:175  
         4 001032   001063 710000 4                  TRA     s:3034
         4 001033   001063 710000 4                  TRA     s:3034
         4 001034   001037 710000 4                  TRA     s:3028
         4 001035   001046 710000 4                  TRA     s:3030
         4 001036   001055 710000 4                  TRA     s:3032

     1047     3027    3       CASE(2);

     1048     3028    3           VAL = PTR$ -> SZ2;

   3028  4 001037   200012 470500                    LDP0    @PTR$,,AUTO
         4 001040   000000 471500                    LDP1    0,,PR0
         4 001041   200011 473500                    LDP3    @VAL,,AUTO
         4 001042   000100 101500                    MRL     fill='000'O
         4 001043   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         4 001044   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         4 001045   001063 710000 4                  TRA     s:3034

     1049     3029    3       CASE(3);

     1050     3030    3           VAL = PTR$ -> SZ3;

   3030  4 001046   200012 470500                    LDP0    @PTR$,,AUTO
         4 001047   000000 471500                    LDP1    0,,PR0
         4 001050   200011 473500                    LDP3    @VAL,,AUTO
         4 001051   000100 101500                    MRL     fill='000'O
         4 001052   100000 000003                    ADSC9   0,,PR1                   cn=0,n=3
         4 001053   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         4 001054   001063 710000 4                  TRA     s:3034

     1051     3031    3       CASE(4);

     1052     3032    3           VAL = PTR$ -> SZ4;

   3032  4 001055   200012 470500                    LDP0    @PTR$,,AUTO
         4 001056   000000 471500                    LDP1    0,,PR0
         4 001057   200011 473500                    LDP3    @VAL,,AUTO
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:176  
         4 001060   000100 100500                    MLR     fill='000'O
         4 001061   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         4 001062   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4

     1053     3033    3           END;

     1054     3034    2       IF MSTR_REF.GLOBAL(SETNUM)=0 AND VAL~= 0 THEN

   3034  4 001063   000011 236000 0                  LDQ     SETNUM
         4 001064   000012 402007                    MPY     10,DL
         4 001065   000000 470400 xsym               LDP0    MSTR$
         4 001066   000011 236106                    LDQ     9,QL,PR0
         4 001067   777000 316003                    CANQ    -512,DU
         4 001070   001100 601000 4                  TNZ     s:3037
         4 001071   200011 471500                    LDP1    @VAL,,AUTO
         4 001072   100000 235100                    LDA     0,,PR1
         4 001073   001100 600000 4                  TZE     s:3037

     1055     3035    2           VAL = VAL + LOW_DBK -1; /* PROCESS LOCAL POINTER */

   3035  4 001074   100000 236100                    LDQ     0,,PR1
         4 001075   000000 036000 xsym               ADLQ    LOW_DBK
         4 001076   000001 136007                    SBLQ    1,DL
         4 001077   100000 756100                    STQ     0,,PR1

     1056     3036
     1057     3037    2       RETURN;

   3037  4 001100   200010 221300                    LDX1  ! @PTSIZE+4,,AUTO
         4 001101   000001 702211                    TSX2  ! 1,X1

     1058     3038    2   END GETPTR;
     1059     3039        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:177  
     1060     3040        /*
     1061     3041          This procedure removes the pointers of the current set (SET_XREF(I))
     1062     3042          and puts the pointer values into the proper PT/EG records.
     1063     3043        */
     1064     3044    1   PULL_PTRS: PROC ALTRET;

   3044  4 001102   200006 741300       PULL_PTRS    STX1  ! @PTSIZE+2,,AUTO

     1065     3045
     1066     3046    2   DCL MSGBUF CHAR(120) STATIC ALIGNED;
     1067     3047    2   DCL MSGHDR CHAR(0) STATIC CALIGNED INIT('e+  Record ');
     1068     3048    2   DCL R1 SBIN STATIC ALIGNED;
     1069     3049    2   DCL D1 SBIN STATIC ALIGNED;
     1070     3050    2   DCL S1 SBIN STATIC ALIGNED;
     1071     3051    2   DCL R_V CHAR(R1) BASED CALIGNED;
     1072     3052    2   DCL D_V CHAR(D1) BASED CALIGNED;
     1073     3053    2   DCL S_V CHAR(S1) BASED CALIGNED;
     1074     3054    2   DCL CHAR10 CHAR(10) STATIC ALIGNED;
     1075     3055
     1076     3056    2       EISNXT = SET_XREF.EIS.NEXT(SETLIST(SETINDX));

   3056  4 001103   000000 235000 xsym               LDA     SETINDX
         4 001104   000001 735000                    ALS     1
         4 001105   000100 100405                    MLR     fill='000'O
         4 001106   000000 000002 xsym               ADSC9   SETLIST,A                cn=0,n=2
         4 001107   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 001110   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 001111   000022 732000                    QRS     18
         4 001112   000002 736000                    QLS     2
         4 001113   000000 470400 xsym               LDP0    SET_XREF$
         4 001114   000003 235106                    LDA     3,QL,PR0
         4 001115   000021 755000 0                  STA     EISNXT

     1077     3057    2       EISPR = SET_XREF.EIS.PRIOR(SETLIST(SETINDX));

   3057  4 001116   000000 236000 xsym               LDQ     SETINDX
         4 001117   000001 736000                    QLS     1
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:178  
         4 001120   000100 100406                    MLR     fill='000'O
         4 001121   000000 000002 xsym               ADSC9   SETLIST,Q                cn=0,n=2
         4 001122   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 001123   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 001124   000022 732000                    QRS     18
         4 001125   000002 736000                    QLS     2
         4 001126   000001 235106                    LDA     1,QL,PR0
         4 001127   000020 755000 0                  STA     EISPR

     1078     3058    2       EISOWN = SET_XREF.EIS.OWNR(SETLIST(SETINDX));

   3058  4 001130   000000 236000 xsym               LDQ     SETINDX
         4 001131   000001 736000                    QLS     1
         4 001132   000100 100406                    MLR     fill='000'O
         4 001133   000000 000002 xsym               ADSC9   SETLIST,Q                cn=0,n=2
         4 001134   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 001135   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 001136   000022 732000                    QRS     18
         4 001137   000002 736000                    QLS     2
         4 001140   000002 235106                    LDA     2,QL,PR0
         4 001141   000017 755000 0                  STA     EISOWN

     1079     3059
     1080     3060    2       IF EISOWN ~= 0 THEN

   3060  4 001142   001151 600000 4                  TZE     s:3062

     1081     3061    2           SETOWN$ = PINCRC(REC$,OWNPT.BYT_OFF);

   3061  4 001143   000017 236000 0                  LDQ     EISOWN
         4 001144   000020 772000                    QRL     16
         4 001145   377777 376007                    ANQ     131071,DL
         4 001146   000020 736000                    QLS     16
         4 001147   000000 036000 xsym               ADLQ    REC$
         4 001150   000015 756000 0                  STQ     SETOWN$

     1082     3062    2       SETNXT$ = PINCRC(REC$,NXTPT.BYT_OFF);
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:179  

   3062  4 001151   000021 236000 0                  LDQ     EISNXT
         4 001152   000020 772000                    QRL     16
         4 001153   377777 376007                    ANQ     131071,DL
         4 001154   000020 736000                    QLS     16
         4 001155   000000 036000 xsym               ADLQ    REC$
         4 001156   000013 756000 0                  STQ     SETNXT$

     1083     3063    2       SETPR$ = PINCRC(REC$,PRIPT.BYT_OFF);

   3063  4 001157   000020 236000 0                  LDQ     EISPR
         4 001160   000020 772000                    QRL     16
         4 001161   377777 376007                    ANQ     131071,DL
         4 001162   000020 736000                    QLS     16
         4 001163   000000 036000 xsym               ADLQ    REC$
         4 001164   000014 756000 0                  STQ     SETPR$

     1084     3064
     1085     3065    2       IF TYPE_PA THEN /* Check if this is a PA record */

   3065  4 001165   000023 234000 0                  SZN     TYPE_PA
         4 001166   001267 605000 4                  TPL     s:3082

     1086     3066    3       DO;

     1087     3067    3           PTR_LEN = (MSTR_REF.PAOFF(MSTR_INDX)-2*4)/3;

   3067  4 001167   000000 236000 xsym               LDQ     MSTR_INDX
         4 001170   000012 402007                    MPY     10,DL
         4 001171   000000 471400 xsym               LDP1    MSTR$
         4 001172   100011 236106                    LDQ     9,QL,PR1
         4 001173   000033 772000                    QRL     27
         4 001174   000010 136007                    SBLQ    8,DL
         4 001175   000003 506007                    DIV     3,DL
         4 001176   000000 756000 xsym               STQ     PTR_LEN

     1088     3068    3           KEY_LEN = MSTR_REF.PAENT(MSTR_INDX)-2-PTR_LEN;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:180  

   3068  4 001177   000000 236000 xsym               LDQ     MSTR_INDX
         4 001200   000012 402007                    MPY     10,DL
         4 001201   100011 236106                    LDQ     9,QL,PR1
         4 001202   000022 376000 5                  ANQ     18
         4 001203   000000 136000 xsym               SBLQ    PTR_LEN
         4 001204   000002 136007                    SBLQ    2,DL
         4 001205   000000 756000 xsym               STQ     KEY_LEN

     1089     3069    3           NO_ENTRIES = PA_REC.ENTRIES;

   3069  4 001206   000000 473400 xsym               LDP3    REC$
         4 001207   003000 061500                    CSR     bolr='003'O
         4 001210   300001 060014                    BDSC    1,,PR3                   by=0,bit=6,n=12
         4 001211   000006 000044 0                  BDSC    NO_ENTRIES               by=0,bit=0,n=36

     1090     3070    3           IF SETOWN$ -> CHARN ~= SETNXT$ -> CHARN THEN

   3070  4 001212   000015 474400 0                  LDP4    SETOWN$
         4 001213   000000 720000 xsym               LXL0    PTR_LEN
         4 001214   000013 475400 0                  LDP5    SETNXT$
         4 001215   040140 106540                    CMPC    fill='040'O
         4 001216   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0
         4 001217   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         4 001220   001401 600000 4                  TZE     s:3113

     1091     3071    4           DO; /* Not highest level PA record */

     1092     3072    4               CALL GETPTR(SETVAL,SETOWN$);

   3072  4 001221   000023 236000 5                  LDQ     19
         4 001222   200012 756100                    STQ     @PTR$,,AUTO
         4 001223   000015 236000 5                  LDQ     13
         4 001224   200011 756100                    STQ     @VAL,,AUTO
         4 001225   001025 701000 4                  TSX1    GETPTR
         4 001226   000000 011000                    NOP     0

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:181  
     1093     3073    4               EGREC.DBK(EGINDX) = CURR_DBK;

   3073  4 001227   000000 235000 xsym               LDA     EGINDX
         4 001230   000002 735000                    ALS     2
         4 001231   000000 470400 xsym               LDP0    EGREC$
         4 001232   000002 236000 0                  LDQ     CURR_DBK
         4 001233   000000 756105                    STQ     0,AL,PR0

     1094     3074    4               EGREC.PRIOR(EGINDX) = SETVAL;

   3074  4 001234   000000 235000 xsym               LDA     EGINDX
         4 001235   000002 735000                    ALS     2
         4 001236   000012 236000 0                  LDQ     SETVAL
         4 001237   000000 470400 xsym               LDP0    EGREC$
         4 001240   000002 756105                    STQ     2,AL,PR0

     1095     3075    4               EGREC.OWNER(EGINDX) = 0;

   3075  4 001241   000000 235000 xsym               LDA     EGINDX
         4 001242   000002 735000                    ALS     2
         4 001243   000000 470400 xsym               LDP0    EGREC$
         4 001244   000003 450105                    STZ     3,AL,PR0

     1096     3076    4               EGREC.SETTYPE(EGINDX) = MSTR_REF.TYPE(SETNUM) - 5000;

   3076  4 001245   000000 235000 xsym               LDA     EGINDX
         4 001246   000002 735000                    ALS     2
         4 001247   000011 236000 0                  LDQ     SETNUM
         4 001250   000000 620005                    EAX0    0,AL
         4 001251   000012 402007                    MPY     10,DL
         4 001252   000000 470400 xsym               LDP0    MSTR$
         4 001253   000000 221106                    LDX1    0,QL,PR0
         4 001254   766170 622011                    EAX2    -5000,X1
         4 001255   000000 471400 xsym               LDP1    EGREC$
         4 001256   100001 742110                    STX2    1,X0,PR1

     1097     3077    4               EGREC.RECTYPE(EGINDX) = REC.TYPE;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:182  

   3077  4 001257   000000 235000 xsym               LDA     EGINDX
         4 001260   000002 735000                    ALS     2
         4 001261   000016 220000 0                  LDX0    REC
         4 001262   000000 470400 xsym               LDP0    EGREC$
         4 001263   000001 440105                    SXL0    1,AL,PR0

     1098     3078    4               CALL WRITE_EG;

   3078  4 001264   002102 701000 4                  TSX1    WRITE_EG
         4 001265   000000 011000                    NOP     0

     1099     3079    4               END;

     1100     3080    3           END;

   3080  4 001266   001401 710000 4                  TRA     s:3113

     1101     3081    2       ELSE
     1102     3082    2           IF EISPR = 0 THEN /* NO PRIOR PTR -> PA MEMBERS */

   3082  4 001267   000020 235000 0                  LDA     EISPR
         4 001270   001401 601000 4                  TNZ     s:3113

     1103     3083    3           DO; /* Process PA membrs writing EG records only */

     1104     3084    3               PTR_LEN = NXTPT.SIZE;

   3084  4 001271   000021 236000 0                  LDQ     EISNXT
         4 001272   000077 376007                    ANQ     63,DL
         4 001273   000000 756000 xsym               STQ     PTR_LEN

     1105     3085    3               EGREC.DBK(EGINDX) = CURR_DBK;

   3085  4 001274   000000 235000 xsym               LDA     EGINDX
         4 001275   000002 735000                    ALS     2
         4 001276   000000 471400 xsym               LDP1    EGREC$
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:183  
         4 001277   000002 236000 0                  LDQ     CURR_DBK
         4 001300   100000 756105                    STQ     0,AL,PR1

     1106     3086    3               EGREC.OWNER(EGINDX) = 0;

   3086  4 001301   000000 235000 xsym               LDA     EGINDX
         4 001302   000002 735000                    ALS     2
         4 001303   000000 470400 xsym               LDP0    EGREC$
         4 001304   000003 450105                    STZ     3,AL,PR0

     1107     3087    3               EGREC.SETTYPE(EGINDX) = MSTR_REF.TYPE(SETNUM);

   3087  4 001305   000000 235000 xsym               LDA     EGINDX
         4 001306   000002 735000                    ALS     2
         4 001307   000011 236000 0                  LDQ     SETNUM
         4 001310   000000 620005                    EAX0    0,AL
         4 001311   000012 402007                    MPY     10,DL
         4 001312   000000 470400 xsym               LDP0    MSTR$
         4 001313   000000 221106                    LDX1    0,QL,PR0
         4 001314   000000 471400 xsym               LDP1    EGREC$
         4 001315   100001 741110                    STX1    1,X0,PR1

     1108     3088    3               EGREC.RECTYPE(EGINDX) = REC.TYPE;

   3088  4 001316   000000 235000 xsym               LDA     EGINDX
         4 001317   000002 735000                    ALS     2
         4 001320   000016 220000 0                  LDX0    REC
         4 001321   000000 470400 xsym               LDP0    EGREC$
         4 001322   000001 440105                    SXL0    1,AL,PR0

     1109     3089    3               CALL GETPTR(SETVAL,SETNXT$);

   3089  4 001323   000024 236000 5                  LDQ     20
         4 001324   200012 756100                    STQ     @PTR$,,AUTO
         4 001325   000015 236000 5                  LDQ     13
         4 001326   200011 756100                    STQ     @VAL,,AUTO
         4 001327   001025 701000 4                  TSX1    GETPTR
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:184  
         4 001330   000000 011000                    NOP     0

     1110     3090    3               IF SETVAL=0 THEN /* CHK IF IT IS UNCONNECT */

   3090  4 001331   000012 235000 0                  LDA     SETVAL
         4 001332   001370 601000 4                  TNZ     s:3103

     1111     3091    4               DO;

     1112     3092    4                   SETNXT$=PINCRC(SETNXT$,PTR_LEN);

   3092  4 001333   000000 236000 xsym               LDQ     PTR_LEN
         4 001334   000020 736000                    QLS     16
         4 001335   000013 036000 0                  ADLQ    SETNXT$
         4 001336   000013 756000 0                  STQ     SETNXT$

     1113     3093    4                   CALL GETPTR(SETVAL,SETNXT$);

   3093  4 001337   000024 236000 5                  LDQ     20
         4 001340   200012 756100                    STQ     @PTR$,,AUTO
         4 001341   000015 236000 5                  LDQ     13
         4 001342   200011 756100                    STQ     @VAL,,AUTO
         4 001343   001025 701000 4                  TSX1    GETPTR
         4 001344   000000 011000                    NOP     0

     1114     3094    4                   IF SETVAL=0 AND (MSTR_REF.SET.INMODE(SETNUM) OR

   3094  4 001345   000012 235000 0                  LDA     SETVAL
         4 001346   001367 601000 4                  TNZ     s:3101
         4 001347   000011 236000 0                  LDQ     SETNUM
         4 001350   000012 402007                    MPY     10,DL
         4 001351   000000 470400 xsym               LDP0    MSTR$
         4 001352   000011 236106                    LDQ     9,QL,PR0
         4 001353   000010 316003                    CANQ    8,DU
         4 001354   001362 601000 4                  TNZ     s:3097
         4 001355   000011 236000 0                  LDQ     SETNUM
         4 001356   000012 402007                    MPY     10,DL
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:185  
         4 001357   000011 236106                    LDQ     9,QL,PR0
         4 001360   000004 316003                    CANQ    4,DU
         4 001361   001367 600000 4                  TZE     s:3101

     1115     3095    4                      MSTR_REF.SET.RETYPE(SETNUM)) THEN
     1116     3096    5                   DO; /* UNCONNECTED MEMBER FOUND */

     1117     3097    5                       IF ZI$DIR.REPRT_ZERO THEN

   3097  4 001362   000125 236000 xsym               LDQ     ZI$DIR+85
         4 001363   000020 316007                    CANQ    16,DL
         4 001364   001742 601000 4                  TNZ     REPORT_ZERO

     1118     3098    5                           GOTO REPORT_ZERO;
     1119     3099    5                       ALTRETURN; /* DONT DO ANYTHING */

   3099  4 001365   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 001366   000000 702211                    TSX2  ! 0,X1

     1120     3100    5                       END;
     1121     3101    4                   SETVAL = 0; /* RESTORE NEXT PTR */

   3101  4 001367   000012 450000 0                  STZ     SETVAL

     1122     3102    4                   END;

     1123     3103    3               EGREC.PRIOR(EGINDX) = SETVAL; /* Use owner ptr for prior */

   3103  4 001370   000000 235000 xsym               LDA     EGINDX
         4 001371   000002 735000                    ALS     2
         4 001372   000012 236000 0                  LDQ     SETVAL
         4 001373   000000 470400 xsym               LDP0    EGREC$
         4 001374   000002 756105                    STQ     2,AL,PR0

     1124     3104    3               CALL WRITE_EG;

   3104  4 001375   002102 701000 4                  TSX1    WRITE_EG
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:186  
         4 001376   000000 011000                    NOP     0

     1125     3105    3               ALTRETURN; /* ALTRET so no PT record will be written */

   3105  4 001377   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 001400   000000 702211                    TSX2  ! 0,X1

     1126     3106    3               END;
     1127     3107        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:187  
     1128     3108        /*
     1129     3109                 PROCESS THE STANDARD  SET  POINTERS  FOR NON-PA RECORDS
     1130     3110        */
     1131     3111
     1132     3112
     1133     3113    2       SET_LN = NXTPT.SIZE;

   3113  4 001401   000021 236000 0                  LDQ     EISNXT
         4 001402   000077 376007                    ANQ     63,DL
         4 001403   000003 756000 0                  STQ     SET_LN

     1134     3114    2       PTREC.OWNER = CURR_DBK; /* Init owner pointers to themselves */

   3114  4 001404   200003 470500                    LDP0    @PTREC,,AUTO
         4 001405   000100 100400                    MLR     fill='000'O
         4 001406   000002 000004 0                  ADSC9   CURR_DBK                 cn=0,n=4
         4 001407   000003 000004                    ADSC9   3,,PR0                   cn=0,n=4

     1135     3115    2       EGREC.OWNER(EGINDX) = CURR_DBK;

   3115  4 001410   000000 235000 xsym               LDA     EGINDX
         4 001411   000002 735000                    ALS     2
         4 001412   000000 471400 xsym               LDP1    EGREC$
         4 001413   000002 236000 0                  LDQ     CURR_DBK
         4 001414   100003 756105                    STQ     3,AL,PR1

     1136     3116    2       PTREC.SETTYPE = MSTR_REF.TYPE(SETNUM);

   3116  4 001415   000011 236000 0                  LDQ     SETNUM
         4 001416   000050 402007                    MPY     40,DL
         4 001417   000000 471400 xsym               LDP1    MSTR$
         4 001420   000100 100506                    MLR     fill='000'O
         4 001421   100000 000002                    ADSC9   0,Q,PR1                  cn=0,n=2
         4 001422   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2

     1137     3117    2       EGREC.SETTYPE(EGINDX) = MSTR_REF.TYPE(SETNUM);

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:188  
   3117  4 001423   000000 235000 xsym               LDA     EGINDX
         4 001424   000002 735000                    ALS     2
         4 001425   000011 236000 0                  LDQ     SETNUM
         4 001426   000000 620005                    EAX0    0,AL
         4 001427   000012 402007                    MPY     10,DL
         4 001430   100000 221106                    LDX1    0,QL,PR1
         4 001431   000000 473400 xsym               LDP3    EGREC$
         4 001432   300001 741110                    STX1    1,X0,PR3

     1138     3118    2       PTREC.DBK = CURR_DBK;

   3118  4 001433   000100 100400                    MLR     fill='000'O
         4 001434   000002 000004 0                  ADSC9   CURR_DBK                 cn=0,n=4
         4 001435   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4

     1139     3119    2       EGREC.DBK(EGINDX) = CURR_DBK;

   3119  4 001436   000000 235000 xsym               LDA     EGINDX
         4 001437   000002 735000                    ALS     2
         4 001440   000000 471400 xsym               LDP1    EGREC$
         4 001441   000002 236000 0                  LDQ     CURR_DBK
         4 001442   100000 756105                    STQ     0,AL,PR1

     1140     3120    2       PTREC.RECTYPE = REC.TYPE;

   3120  4 001443   000100 100400                    MLR     fill='000'O
         4 001444   000016 000002 0                  ADSC9   REC                      cn=0,n=2
         4 001445   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2

     1141     3121    2       EGREC.RECTYPE(EGINDX) = REC.TYPE;

   3121  4 001446   000000 235000 xsym               LDA     EGINDX
         4 001447   000002 735000                    ALS     2
         4 001450   000016 220000 0                  LDX0    REC
         4 001451   000000 471400 xsym               LDP1    EGREC$
         4 001452   100001 440105                    SXL0    1,AL,PR1

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:189  
     1142     3122
     1143     3123    3       DO CASE(SET_LN);

   3123  4 001453   000003 235000 0                  LDA     SET_LN
         4 001454   000005 115007                    CMPA    5,DL
         4 001455   001457 602005 4                  TNC     s:3123+4,AL
         4 001456   001604 710000 4                  TRA     s:3152
         4 001457   001604 710000 4                  TRA     s:3152
         4 001460   001604 710000 4                  TRA     s:3152
         4 001461   001464 710000 4                  TRA     s:3125
         4 001462   001517 710000 4                  TRA     s:3134
         4 001463   001552 710000 4                  TRA     s:3143

     1144     3124    3       CASE(2);

     1145     3125    3           PTREC.NEXT = SETNXT$ -> SZ2;

   3125  4 001464   000013 471400 0                  LDP1    SETNXT$
         4 001465   000100 101500                    MRL     fill='000'O
         4 001466   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         4 001467   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

     1146     3126    3           EGREC.PRIOR(EGINDX) = SETPR$ -> SZ2;

   3126  4 001470   000000 235000 xsym               LDA     EGINDX
         4 001471   000002 735000                    ALS     2
         4 001472   000002 735000                    ALS     2
         4 001473   000014 471400 0                  LDP1    SETPR$
         4 001474   000000 473400 xsym               LDP3    EGREC$
         4 001475   000105 101500                    MRL     fill='000'O
         4 001476   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         4 001477   300002 000004                    ADSC9   2,A,PR3                  cn=0,n=4

     1147     3127    3           IF EISOWN ~= 0 THEN

   3127  4 001500   000017 235000 0                  LDA     EISOWN
         4 001501   001604 600000 4                  TZE     s:3152
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:190  

     1148     3128    4           DO;

     1149     3129    4               PTREC.OWNER = SETOWN$ -> SZ2;

   3129  4 001502   000015 473400 0                  LDP3    SETOWN$
         4 001503   000100 101500                    MRL     fill='000'O
         4 001504   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         4 001505   000003 000004                    ADSC9   3,,PR0                   cn=0,n=4

     1150     3130    4               EGREC.OWNER(EGINDX) = SETOWN$ -> SZ2;

   3130  4 001506   000000 235000 xsym               LDA     EGINDX
         4 001507   000002 735000                    ALS     2
         4 001510   000002 735000                    ALS     2
         4 001511   000015 473400 0                  LDP3    SETOWN$
         4 001512   000000 474400 xsym               LDP4    EGREC$
         4 001513   000105 101500                    MRL     fill='000'O
         4 001514   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         4 001515   400003 000004                    ADSC9   3,A,PR4                  cn=0,n=4

     1151     3131    4               END;

   3131  4 001516   001604 710000 4                  TRA     s:3152

     1152     3132
     1153     3133    3       CASE(3);

     1154     3134    3           PTREC.NEXT = SETNXT$ -> SZ3;

   3134  4 001517   000013 471400 0                  LDP1    SETNXT$
         4 001520   000100 101500                    MRL     fill='000'O
         4 001521   100000 000003                    ADSC9   0,,PR1                   cn=0,n=3
         4 001522   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

     1155     3135    3           EGREC.PRIOR(EGINDX) = SETPR$ -> SZ3;

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:191  
   3135  4 001523   000000 235000 xsym               LDA     EGINDX
         4 001524   000002 735000                    ALS     2
         4 001525   000002 735000                    ALS     2
         4 001526   000014 471400 0                  LDP1    SETPR$
         4 001527   000000 473400 xsym               LDP3    EGREC$
         4 001530   000105 101500                    MRL     fill='000'O
         4 001531   100000 000003                    ADSC9   0,,PR1                   cn=0,n=3
         4 001532   300002 000004                    ADSC9   2,A,PR3                  cn=0,n=4

     1156     3136    3           IF EISOWN ~= 0 THEN

   3136  4 001533   000017 235000 0                  LDA     EISOWN
         4 001534   001604 600000 4                  TZE     s:3152

     1157     3137    4           DO;

     1158     3138    4               PTREC.OWNER = SETOWN$ -> SZ3;

   3138  4 001535   000015 473400 0                  LDP3    SETOWN$
         4 001536   000100 101500                    MRL     fill='000'O
         4 001537   300000 000003                    ADSC9   0,,PR3                   cn=0,n=3
         4 001540   000003 000004                    ADSC9   3,,PR0                   cn=0,n=4

     1159     3139    4               EGREC.OWNER(EGINDX) = SETOWN$ -> SZ3;

   3139  4 001541   000000 235000 xsym               LDA     EGINDX
         4 001542   000002 735000                    ALS     2
         4 001543   000002 735000                    ALS     2
         4 001544   000015 473400 0                  LDP3    SETOWN$
         4 001545   000000 474400 xsym               LDP4    EGREC$
         4 001546   000105 101500                    MRL     fill='000'O
         4 001547   300000 000003                    ADSC9   0,,PR3                   cn=0,n=3
         4 001550   400003 000004                    ADSC9   3,A,PR4                  cn=0,n=4

     1160     3140    4               END;

   3140  4 001551   001604 710000 4                  TRA     s:3152
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:192  

     1161     3141
     1162     3142    3       CASE(4);

     1163     3143    3           PTREC.NEXT = SETNXT$ -> SZ4;

   3143  4 001552   000013 471400 0                  LDP1    SETNXT$
         4 001553   000100 100500                    MLR     fill='000'O
         4 001554   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         4 001555   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

     1164     3144    3           EGREC.PRIOR(EGINDX) = SETPR$ -> SZ4;

   3144  4 001556   000000 235000 xsym               LDA     EGINDX
         4 001557   000002 735000                    ALS     2
         4 001560   000002 735000                    ALS     2
         4 001561   000014 471400 0                  LDP1    SETPR$
         4 001562   000000 473400 xsym               LDP3    EGREC$
         4 001563   000105 100500                    MLR     fill='000'O
         4 001564   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         4 001565   300002 000004                    ADSC9   2,A,PR3                  cn=0,n=4

     1165     3145    3           IF EISOWN ~= 0 THEN

   3145  4 001566   000017 235000 0                  LDA     EISOWN
         4 001567   001604 600000 4                  TZE     s:3152

     1166     3146    4           DO;

     1167     3147    4               PTREC.OWNER = SETOWN$ -> SZ4;

   3147  4 001570   000015 473400 0                  LDP3    SETOWN$
         4 001571   000100 100500                    MLR     fill='000'O
         4 001572   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         4 001573   000003 000004                    ADSC9   3,,PR0                   cn=0,n=4

     1168     3148    4               EGREC.OWNER(EGINDX) = SETOWN$ -> SZ4;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:193  

   3148  4 001574   000000 235000 xsym               LDA     EGINDX
         4 001575   000002 735000                    ALS     2
         4 001576   000002 735000                    ALS     2
         4 001577   000015 473400 0                  LDP3    SETOWN$
         4 001600   000000 474400 xsym               LDP4    EGREC$
         4 001601   000105 100500                    MLR     fill='000'O
         4 001602   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         4 001603   400003 000004                    ADSC9   3,A,PR4                  cn=0,n=4

     1169     3149    4               END;

     1170     3150
     1171     3151    3           END;

     1172     3152    2       IF PTREC.NEXT=0 AND PTREC.OWNER=0 AND EGREC.PRIOR(EGINDX)=0 THEN

   3152  4 001604   000100 100500                    MLR     fill='000'O
         4 001605   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         4 001606   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 001607   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 001610   000000 116003                    CMPQ    0,DU
         4 001611   001645 601000 4                  TNZ     s:3162
         4 001612   000100 100500                    MLR     fill='000'O
         4 001613   000003 000004                    ADSC9   3,,PR0                   cn=0,n=4
         4 001614   200015 000004                    ADSC9   @PTR$+3,,AUTO            cn=0,n=4
         4 001615   200015 236100                    LDQ     @PTR$+3,,AUTO
         4 001616   000000 116003                    CMPQ    0,DU
         4 001617   001645 601000 4                  TNZ     s:3162
         4 001620   000000 235000 xsym               LDA     EGINDX
         4 001621   000002 735000                    ALS     2
         4 001622   000000 471400 xsym               LDP1    EGREC$
         4 001623   100002 235105                    LDA     2,AL,PR1
         4 001624   001645 601000 4                  TNZ     s:3162

     1173     3153    3       DO; /* UN-CONNECTED MEMBER FOUND */

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:194  
     1174     3154    3           IF MSTR_REF.SET.INMODE(SETNUM) OR /* INSERTION MANUAL */

   3154  4 001625   000011 236000 0                  LDQ     SETNUM
         4 001626   000012 402007                    MPY     10,DL
         4 001627   000000 473400 xsym               LDP3    MSTR$
         4 001630   300011 236106                    LDQ     9,QL,PR3
         4 001631   000010 316003                    CANQ    8,DU
         4 001632   001640 601000 4                  TNZ     s:3157
         4 001633   000011 236000 0                  LDQ     SETNUM
         4 001634   000012 402007                    MPY     10,DL
         4 001635   300011 236106                    LDQ     9,QL,PR3
         4 001636   000004 316003                    CANQ    4,DU
         4 001637   001645 600000 4                  TZE     s:3162

     1175     3155    3              MSTR_REF.SET.RETYPE(SETNUM) THEN /* RETENTION OPTIONAL */
     1176     3156    4           DO; /* THIS IS A LEGAL UNCONNECTED MEMBER */

     1177     3157    4               IF ZI$DIR.REPRT_ZERO THEN

   3157  4 001640   000125 236000 xsym               LDQ     ZI$DIR+85
         4 001641   000020 316007                    CANQ    16,DL
         4 001642   001742 601000 4                  TNZ     REPORT_ZERO

     1178     3158    4                   GOTO REPORT_ZERO;
     1179     3159    4               ALTRETURN; /* NOT REPORT ZERO, SKIP THIS SET MEMBER */

   3159  4 001643   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 001644   000000 702211                    TSX2  ! 0,X1

     1180     3160    4               END;
     1181     3161    3           END;
     1182     3162    2       IF MSTR_REF.GLOBAL(SETNUM) = 0 THEN /* LOCAL SET */

   3162  4 001645   000011 236000 0                  LDQ     SETNUM
         4 001646   000012 402007                    MPY     10,DL
         4 001647   000000 471400 xsym               LDP1    MSTR$
         4 001650   100011 236106                    LDQ     9,QL,PR1
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:195  
         4 001651   777000 316003                    CANQ    -512,DU
         4 001652   001740 601000 4                  TNZ     s:3175

     1183     3163    3       DO;

     1184     3164    3           IF EGREC.PRIOR(EGINDX)~=0 THEN

   3164  4 001653   000000 235000 xsym               LDA     EGINDX
         4 001654   000002 735000                    ALS     2
         4 001655   000000 473400 xsym               LDP3    EGREC$
         4 001656   300002 235105                    LDA     2,AL,PR3
         4 001657   001666 600000 4                  TZE     s:3166

     1185     3165    3               EGREC.PRIOR(EGINDX) = EGREC.PRIOR(EGINDX) + LOW_DBK -1;

   3165  4 001660   000000 235000 xsym               LDA     EGINDX
         4 001661   000002 735000                    ALS     2
         4 001662   300002 236105                    LDQ     2,AL,PR3
         4 001663   000000 036000 xsym               ADLQ    LOW_DBK
         4 001664   000001 136007                    SBLQ    1,DL
         4 001665   300002 756105                    STQ     2,AL,PR3

     1186     3166    3           IF PTREC.NEXT~=0 THEN

   3166  4 001666   000100 100500                    MLR     fill='000'O
         4 001667   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         4 001670   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 001671   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 001672   000000 116003                    CMPQ    0,DU
         4 001673   001706 600000 4                  TZE     s:3168

     1187     3167    3               PTREC.NEXT = PTREC.NEXT + LOW_DBK -1;

   3167  4 001674   000100 100500                    MLR     fill='000'O
         4 001675   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         4 001676   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 001677   200014 236100                    LDQ     @PTR$+2,,AUTO
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:196  
         4 001700   000000 036000 xsym               ADLQ    LOW_DBK
         4 001701   000001 136007                    SBLQ    1,DL
         4 001702   200015 756100                    STQ     @PTR$+3,,AUTO
         4 001703   000100 100500                    MLR     fill='000'O
         4 001704   200015 000004                    ADSC9   @PTR$+3,,AUTO            cn=0,n=4
         4 001705   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

     1188     3168    3           IF EISOWN~=0 AND PTREC.OWNER~=0 THEN

   3168  4 001706   000017 235000 0                  LDA     EISOWN
         4 001707   001740 600000 4                  TZE     s:3175
         4 001710   000100 100500                    MLR     fill='000'O
         4 001711   000003 000004                    ADSC9   3,,PR0                   cn=0,n=4
         4 001712   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 001713   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 001714   000000 116003                    CMPQ    0,DU
         4 001715   001740 600000 4                  TZE     s:3175

     1189     3169    4           DO;

     1190     3170    4               EGREC.OWNER(EGINDX) = EGREC.OWNER(EGINDX) + LOW_DBK -1;

   3170  4 001716   000000 236000 xsym               LDQ     EGINDX
         4 001717   000002 736000                    QLS     2
         4 001720   000000 471400 xsym               LDP1    EGREC$
         4 001721   000000 621006                    EAX1    0,QL
         4 001722   100003 236106                    LDQ     3,QL,PR1
         4 001723   000000 036000 xsym               ADLQ    LOW_DBK
         4 001724   000001 136007                    SBLQ    1,DL
         4 001725   100003 756111                    STQ     3,X1,PR1

     1191     3171    4               PTREC.OWNER = PTREC.OWNER + LOW_DBK -1;

   3171  4 001726   000100 100500                    MLR     fill='000'O
         4 001727   000003 000004                    ADSC9   3,,PR0                   cn=0,n=4
         4 001730   200014 000004                    ADSC9   @PTR$+2,,AUTO            cn=0,n=4
         4 001731   200014 236100                    LDQ     @PTR$+2,,AUTO
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:197  
         4 001732   000000 036000 xsym               ADLQ    LOW_DBK
         4 001733   000001 136007                    SBLQ    1,DL
         4 001734   200015 756100                    STQ     @PTR$+3,,AUTO
         4 001735   000100 100500                    MLR     fill='000'O
         4 001736   200015 000004                    ADSC9   @PTR$+3,,AUTO            cn=0,n=4
         4 001737   000003 000004                    ADSC9   3,,PR0                   cn=0,n=4

     1192     3172    4               END;

     1193     3173    3           END;

     1194     3174
     1195     3175    2       RETURN;

   3175  4 001740   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 001741   000001 702211                    TSX2  ! 1,X1

     1196     3176    2   REPORT_ZERO:
     1197     3177    2       CALL INDEX1(R1,' ',MSTR_REF.NAME(MSTR_INDX));

   3177  4 001742   000000 236000 xsym  REPORT_ZERO  LDQ     MSTR_INDX
         4 001743   000050 402007                    MPY     40,DL
         4 001744   000000 470400 xsym               LDP0    MSTR$
         4 001745   000000 124506                    SCM     mask='000'O
         4 001746   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 001747   000025 000001 5                  ADSC9   21                       cn=0,n=1
         4 001750   000065 000000 0                  ARG     R1

     1198     3178    2       CALL INDEX1(S1,' ',MSTR_REF.NAME(SETNUM));

   3178  4 001751   000011 236000 0                  LDQ     SETNUM
         4 001752   000050 402007                    MPY     40,DL
         4 001753   000000 124506                    SCM     mask='000'O
         4 001754   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 001755   000025 000001 5                  ADSC9   21                       cn=0,n=1
         4 001756   000067 000000 0                  ARG     S1

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:198  
     1199     3179    2       CALL BINCHAR(CHAR10,CURR_DBK);

   3179  4 001757   000002 235000 0                  LDA     CURR_DBK
         4 001760   000044 773000                    LRL     36
         4 001761   200014 757100                    STAQ    @PTR$+2,,AUTO
         4 001762   000000 301500                    BTD
         4 001763   200014 000010                    NDSC9   @PTR$+2,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         4 001764   000070 030012 0                  NDSC9   CHAR10                   cn=0,s=nosgn,sf=0,n=10

     1200     3180    2       CALL ZERO_SUP(CHAR10,LENGTHC(CHAR10),'1'B);

   3180  4 001765   000031 630400 5                  EPPR0   25
         4 001766   000026 631400 5                  EPPR1   22
         4 001767   000000 701000 xent               TSX1    ZERO_SUP
         4 001770   000000 011000                    NOP     0

     1201     3181    2       CALL INDEX1(D1,' ',CHAR10);

   3181  4 001771   000000 124400                    SCM     mask='000'O
         4 001772   000070 000012 0                  ADSC9   CHAR10                   cn=0,n=10
         4 001773   000025 000001 5                  ADSC9   21                       cn=0,n=1
         4 001774   000066 000000 0                  ARG     D1

     1202     3182    2       CALL CONCAT(MSGBUF,MSGHDR,ADDR(MSTR_REF.NAME(MSTR_INDX))->R_V,

   3182  4 001775   040000 100400                    MLR     fill='040'O
         4 001776   000062 000013 0                  ADSC9   MSGHDR                   cn=0,n=11
         4 001777   000024 000013 0                  ADSC9   MSGBUF                   cn=0,n=11
         4 002000   000000 236000 xsym               LDQ     MSTR_INDX
         4 002001   000050 402007                    MPY     40,DL
         4 002002   000000 470400 xsym               LDP0    MSTR$
         4 002003   000065 720000 0                  LXL0    R1
         4 002004   040000 100546                    MLR     fill='040'O
         4 002005   000001 400010                    ADSC9   1,Q,PR0                  cn=2,n=*X0
         4 002006   000026 600155 0                  ADSC9   MSGBUF+2                 cn=3,n=109
         4 002007   000065 236000 0                  LDQ     R1
         4 002010   000155 116007                    CMPQ    109,DL
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:199  
         4 002011   002061 605000 4                  TPL     s:3186
         4 002012   777622 621006                    EAX1    -110,QL
         4 002013   777777 661003                    ERX1    -1,DU
         4 002014   040046 100400                    MLR     fill='040'O
         4 002015   000000 000010 3                  ADSC9   0                        cn=0,n=8
         4 002016   000026 600011 0                  ADSC9   MSGBUF+2,Q               cn=3,n=*X1
         4 002017   000145 116007                    CMPQ    101,DL
         4 002020   002061 605000 4                  TPL     s:3186
         4 002021   777632 622006                    EAX2    -102,QL
         4 002022   777777 662003                    ERX2    -1,DU
         4 002023   000066 723000 0                  LXL3    D1
         4 002024   040046 100440                    MLR     fill='040'O
         4 002025   000070 000013 0                  ADSC9   CHAR10                   cn=0,n=*X3
         4 002026   000030 600012 0                  ADSC9   MSGBUF+4,Q               cn=3,n=*X2
         4 002027   000066 036000 0                  ADLQ    D1
         4 002030   000145 116007                    CMPQ    101,DL
         4 002031   002061 605000 4                  TPL     s:3186
         4 002032   200014 756100                    STQ     @PTR$+2,,AUTO
         4 002033   000065 236000 0                  LDQ     R1
         4 002034   000066 036000 0                  ADLQ    D1
         4 002035   200014 724100                    LXL4    @PTR$+2,,AUTO
         4 002036   777632 624014                    EAX4    -102,X4
         4 002037   777777 664003                    ERX4    -1,DU
         4 002040   040046 100400                    MLR     fill='040'O
         4 002041   000002 000035 3                  ADSC9   2                        cn=0,n=29
         4 002042   000030 600014 0                  ADSC9   MSGBUF+4,Q               cn=3,n=*X4
         4 002043   200015 756100                    STQ     @PTR$+3,,AUTO
         4 002044   200014 236100                    LDQ     @PTR$+2,,AUTO
         4 002045   000110 116007                    CMPQ    72,DL
         4 002046   002061 605000 4                  TPL     s:3186
         4 002047   000011 236000 0                  LDQ     SETNUM
         4 002050   000050 402007                    MPY     40,DL
         4 002051   200014 725100                    LXL5    @PTR$+2,,AUTO
         4 002052   777667 625015                    EAX5    -73,X5
         4 002053   777777 665003                    ERX5    -1,DU
         4 002054   000067 726000 0                  LXL6    S1
         4 002055   200015 235100                    LDA     @PTR$+3,,AUTO
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:200  
         4 002056   040045 100546                    MLR     fill='040'O
         4 002057   000001 400016                    ADSC9   1,Q,PR0                  cn=2,n=*X6
         4 002060   000040 000015 0                  ADSC9   MSGBUF+12,A              cn=0,n=*X5

     1203     3183    2          ' at DBK ',ADDR(CHAR10)->D_V,
     1204     3184    2          ' is an unconnected member of ',
     1205     3185    2          ADDR(MSTR_REF.NAME(SETNUM))->S_V);
     1206     3186    2       DCBSF = DCBNUM(M$LO);

   3186  4 002061   000000 236007 xsym               LDQ     M$LO,DL
         4 002062   000000 621006                    EAX1    0,QL
         4 002063   000000 741000 xsym               STX1    DCBSF

     1207     3187    2       BUFSF = VECTOR(MSGBUF);

   3187  4 002064   000034 237000 5                  LDAQ    28
         4 002065   000000 755000 xsym               STA     BUFSF
         4 002066   000001 756000 xsym               STQ     BUFSF+1

     1208     3188    2       BUFLNSF = LENGTHC(MSGBUF);

   3188  4 002067   000170 235007                    LDA     120,DL
         4 002070   000000 755000 xsym               STA     BUFLNSF

     1209     3189    2       VFCSF = '1'B;

   3189  4 002071   400000 236003                    LDQ     -131072,DU
         4 002072   000000 756000 xsym               STQ     VFCSF

     1210     3190    2       CALL SYS_FUNC_WRIT;

   3190  4 002073   000002 631400 5                  EPPR1   2
         4 002074   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 002075   000000 011000                    NOP     0

     1211     3191    2       SUBSTR(MSGHDR,0,1)='a';

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:201  
   3191  4 002076   141000 236003                    LDQ     49664,DU
         4 002077   000062 552040 0                  STBQ    MSGHDR,'40'O

     1212     3192    2       ALTRETURN;

   3192  4 002100   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 002101   000000 702211                    TSX2  ! 0,X1

     1213     3193    2   END PULL_PTRS;
     1214     3194        %EJECT;
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:202  
     1215     3195        /*
     1216     3196           This procedure does logical writes of up to 16k of 4 word EG
     1217     3197           records, then writes them out to the EG file. It uses half of
     1218     3198           the data base I_O_BUF area for buffering.
     1219     3199        */
     1220     3200    1   WRITE_EG: PROC ALTRET;

   3200  4 002102   200010 741300       WRITE_EG     STX1  ! @PTSIZE+4,,AUTO

     1221     3201
     1222     3202    2       NO_EGRECS = NO_EGRECS + 1;

   3202  4 002103   000000 054000 xsym               AOS     NO_EGRECS

     1223     3203    2       IF EGINDX = 4095 THEN

   3203  4 002104   000000 235000 xsym               LDA     EGINDX
         4 002105   007777 115007                    CMPA    4095,DL
         4 002106   002134 601000 4                  TNZ     s:3215

     1224     3204    3       DO;

     1225     3205         /* EG buf full so write it out and restart filling buffer */
     1226     3206    3    /**/   DCBSF = EGFILE.DCB#;

   3206  4 002107   000001 236000 xsym               LDQ     EGFILE+1
         4 002110   000011 772000                    QRL     9
         4 002111   777777 376007                    ANQ     -1,DL
         4 002112   000000 620006                    EAX0    0,QL
         4 002113   000000 740000 xsym               STX0    DCBSF

     1227     3207    3           KEYSF = %NO#;

   3207  4 002114   000000 450000 xsym               STZ     KEYSF

     1228     3208    3           BUFSF = VECTOR(EGREC);

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:203  
   3208  4 002115   000036 235000 5                  LDA     30
         4 002116   000000 236000 xsym               LDQ     EGREC$
         4 002117   000000 755000 xsym               STA     BUFSF
         4 002120   000001 756000 xsym               STQ     BUFSF+1

     1229     3209    3           BUFLNSF = (EGINDX+1) * 16; /* 16 bytes per entry */

   3209  4 002121   000000 235000 xsym               LDA     EGINDX
         4 002122   000004 735000                    ALS     4
         4 002123   000020 035007                    ADLA    16,DL
         4 002124   000000 755000 xsym               STA     BUFLNSF

     1230     3210    3           VFCSF = %NO#;

   3210  4 002125   000000 450000 xsym               STZ     VFCSF

     1231     3211    3           CALL SYS_FUNC_WRIT ALTRET(ALT_WREG);

   3211  4 002126   000002 631400 5                  EPPR1   2
         4 002127   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 002130   002137 702000 4                  TSX2    ALT_WREG

     1232     3212    3           NO_EGBUFS = NO_EGBUFS + 1;

   3212  4 002131   000000 054000 xsym               AOS     NO_EGBUFS

     1233     3213    3           EGINDX = -1;

   3213  4 002132   000001 335007                    LCA     1,DL
         4 002133   000000 755000 xsym               STA     EGINDX

     1234     3214    3           END;

     1235     3215    2       EGINDX = EGINDX + 1;

   3215  4 002134   000000 054000 xsym               AOS     EGINDX

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:204  
     1236     3216    2       RETURN;

   3216  4 002135   200010 221300                    LDX1  ! @PTSIZE+4,,AUTO
         4 002136   000001 702211                    TSX2  ! 1,X1

     1237     3217
     1238     3218    2   ALT_WREG:
     1239     3219    2       ALTRETURN;

   3219  4 002137   200010 221300       ALT_WREG     LDX1  ! @PTSIZE+4,,AUTO
         4 002140   000000 702211                    TSX2  ! 0,X1

     1240     3220    2   END WRITE_EG;
     1241     3221
     1242     3222    1   FLUSH_EG: PROC ALTRET;

   3222  4 002141   200006 741300       FLUSH_EG     STX1  ! @PTSIZE+2,,AUTO

     1243     3223
     1244     3224    2       IF EGINDX ~= -1 THEN

   3224  4 002142   000000 235000 xsym               LDA     EGINDX
         4 002143   000013 115000 5                  CMPA    11
         4 002144   002166 600000 4                  TZE     s:3234

     1245     3225    3       DO;

     1246     3226    3    /**/   DCBSF = EGFILE.DCB#;

   3226  4 002145   000001 236000 xsym               LDQ     EGFILE+1
         4 002146   000011 772000                    QRL     9
         4 002147   777777 376007                    ANQ     -1,DL
         4 002150   000000 620006                    EAX0    0,QL
         4 002151   000000 740000 xsym               STX0    DCBSF

     1247     3227    3           KEYSF = %NO#;

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:205  
   3227  4 002152   000000 450000 xsym               STZ     KEYSF

     1248     3228    3           BUFSF = VECTOR(EGREC);

   3228  4 002153   000036 235000 5                  LDA     30
         4 002154   000000 236000 xsym               LDQ     EGREC$
         4 002155   000000 755000 xsym               STA     BUFSF
         4 002156   000001 756000 xsym               STQ     BUFSF+1

     1249     3229    3           BUFLNSF = EGINDX * 16; /* 16 bytes per entry */

   3229  4 002157   000000 235000 xsym               LDA     EGINDX
         4 002160   000004 735000                    ALS     4
         4 002161   000000 755000 xsym               STA     BUFLNSF

     1250     3230    3           VFCSF = %NO#;

   3230  4 002162   000000 450000 xsym               STZ     VFCSF

     1251     3231    3           CALL SYS_FUNC_WRIT ALTRET(ALT_FLUSH);

   3231  4 002163   000002 631400 5                  EPPR1   2
         4 002164   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 002165   002175 702000 4                  TSX2    ALT_FLUSH

     1252     3232    3           END;

     1253     3233
     1254     3234    2       CALL SYS_FUNC_CLOS ALTRET(ALT_FLUSH);

   3234  4 002166   000002 631400 5                  EPPR1   2
         4 002167   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 002170   002175 702000 4                  TSX2    ALT_FLUSH

     1255     3235    2       LAST_EGINDX = EGINDX;

   3235  4 002171   000000 235000 xsym               LDA     EGINDX
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:206  
         4 002172   000000 755000 xsym               STA     LAST_EGINDX

     1256     3236    2       RETURN;

   3236  4 002173   200006 221300                    LDX1  ! @PTSIZE+2,,AUTO
         4 002174   000001 702211                    TSX2  ! 1,X1

     1257     3237
     1258     3238    2   ALT_FLUSH:
     1259     3239    2       ALTRETURN;

   3239  4 002175   200006 221300       ALT_FLUSH    LDX1  ! @PTSIZE+2,,AUTO
         4 002176   000000 702211                    TSX2  ! 0,X1

     1260     3240    2   END FLUSH_EG;
     1261     3241
     1262     3242    1   ALT_GEN:
     1263     3243    1       ALTRETURN;

   3243  4 002177   000000 702200 xent  ALT_GEN      TSX2  ! X66_AALT

MSGBUF
 Sect OctLoc
   0     024   ****** ******   ****** ******   ****** ******   ****** ******    ................

MSGHDR
 Sect OctLoc
   0     062   145053 040040   122145 143157   162144 040***                    e+  Record .

(unnamed)
 Sect OctLoc
   3     000   040141 164040   104102 113040   040151 163040   141156 040165     at DBK  is an u
   3     004   156143 157156   156145 143164   145144 040155   145155 142145    nconnected membe
   3     010   162040 157146   040040 040040                                    r of

(unnamed)
 Sect OctLoc
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:207  
   5     000   000000 006003   777777 400007   000000 000000   000006 000000    ................
   5     004   000000 000020   000000 006000   000000 006000   000004 006000    ................
   5     010   000000 006000   000000 006000   000022 006000   777777 777777    ................
   5     014   000000 006000   000012 006000   000000 006000   000001 000000    ................
   5     020   000234 006000   001777 777640   000077 777777   000015 006000    .........?......
   5     024   000013 006000   040040 040040   000003 000000   000000 000012    ....    ........
   5     030   400000 000000   000070 006000   000027 006000   000030 006000    .....8..........
   5     034   000035 777640   000024 006000   000003 777640                    ............
     1264     3244
     1265     3245    1   END ZIU$GENRCD;
     1266     3246        %EOD;

PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:208  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_VALDTE.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$GENRCD.

   Procedure ZIU$GENRCD requires 1152 words for executable code.
   Procedure ZIU$GENRCD requires 14 words of local(AUTO) storage.
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:209  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:210  
          MINI XREF LISTING

ACSSF
       701**DCL      2946<<ASSIGN
ALTRTN IN PROCEDURE OPEN_AREA
      2951**LABEL    2940--CALLALT  2948--CALLALT
ALTRTN IN PROCEDURE READ_DB
      2966**LABEL    2963--CALLALT
ALT_ATBLK IN PROCEDURE GET_ATBLK
      2999**LABEL    2984--CALLALT
ALT_FLUSH IN PROCEDURE FLUSH_EG
      3239**LABEL    3231--CALLALT  3234--CALLALT
ALT_GEN
      3243**LABEL    2807--CALLALT  2818--CALLALT  2824--CALLALT  2932--CALLALT
ALT_WREG IN PROCEDURE WRITE_EG
      3219**LABEL    3211--CALLALT
AREANO
        16**DCL      2804<<DOINDEX  2805>>IF       2806>>ASSIGN
AREA_KEY$
      1237**DCL      1240--IMP-PTR  2805>>IF       2806>>ASSIGN
AREA_KEY_XREF.MAX_KEY
      1242**DCL      2805>>IF
AREA_KEY_XREF.NAME
      1243**DCL      2806>>ASSIGN
ASNSF
       704**DCL      2947<<ASSIGN
ATBLK$
       958**DCL       959--IMP-PTR  2985<<ASSIGN   2986>>IF       2988>>ASSIGN   2991>>ASSIGN   2991>>ASSIGN
      2991>>ASSIGN   2994>>ASSIGN   2995>>ASSIGN
ATBLK_PG.AREA_NM
       984**DCL       985--REDEF
ATBLK_PG.FIR_INV_PGNO
       981**DCL      2986>>IF       2991>>ASSIGN
ATBLK_PG.LINE_INFO.LPP
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:211  
       979**DCL      2995>>ASSIGN
ATBLK_PG.LOW_DBK
       982**DCL      2994>>ASSIGN
ATBLK_PG.NUM_DBPG
       966**DCL      2988>>ASSIGN   2991>>ASSIGN   2991>>ASSIGN
ATBLK_PG.STATUS
       993**DCL      1001--REDEF
BREAK_FLAG
       821**DCL      2825>>IF
BREAK_LOCAT
       371**DCL      2815>>UNWIND   2825>>UNWIND
BUFLNSF
       712**DCL      2958<<ASSIGN   2979<<ASSIGN   3188<<ASSIGN   3209<<ASSIGN   3229<<ASSIGN
BUFSF
       713**DCL      2957<<ASSIGN   2978<<ASSIGN   3187<<ASSIGN   3208<<ASSIGN   3228<<ASSIGN
CHAR10 IN PROCEDURE PULL_PTRS
      3054**DCL      3179<<CALLBLT  3180<>CALL     3180--CALL     3181>>CALLBLT  3182--CALLBLT
CHARN
        32**DCL      3070>>IF       3070>>IF
COUNTSF
       763**DCL       764--REDEF
CURRPT.OWNER
       402**DCL       403--REDEF
CURR_DBK
        23**DCL      2845<<ASSIGN   2862>>ASSIGN   2895>>ASSIGN   2910>>ASSIGN   3073>>ASSIGN   3085>>ASSIGN
      3114>>ASSIGN   3115>>ASSIGN   3118>>ASSIGN   3119>>ASSIGN   3179>>CALLBLT
D1 IN PROCEDURE PULL_PTRS
      3049**DCL      3052--IMP-SIZ  3181<<CALLBLT  3182>>CALLBLT
DATA$
      1014**DCL      1015--IMP-PTR  2828<<ASSIGN   2829>>ASSIGN   2833>>IF       2839>>ASSIGN   2839>>ASSIGN
      2845>>ASSIGN
DATA_PG.ACT_DATA
      1027**DCL      1028--REDEF    1029--REDEF    1030--REDEF
DATA_PG.ACT_DATA_18
      1028**DCL      2833>>IF       2839>>ASSIGN
DATA_PG.CON_INTRVAL
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:212  
      1023**DCL      2845>>ASSIGN
DATA_PG.OFF_LN.SEC
      1026**DCL      2829>>ASSIGN
DCBSF
       692**DCL      2809--IF       2926<<ASSIGN   2956<<ASSIGN   2977<<ASSIGN   3186<<ASSIGN   3206<<ASSIGN
      3226<<ASSIGN
D_V IN PROCEDURE PULL_PTRS
      3052**DCL      3182>>CALLBLT
EGFILE.DCB#
       410**DCL      3206>>ASSIGN   3226>>ASSIGN
EGINDX
       381**DCL      3073>>ASSIGN   3074>>ASSIGN   3075>>ASSIGN   3076>>ASSIGN   3077>>ASSIGN   3085>>ASSIGN
      3086>>ASSIGN   3087>>ASSIGN   3088>>ASSIGN   3103>>ASSIGN   3115>>ASSIGN   3117>>ASSIGN   3119>>ASSIGN
      3121>>ASSIGN   3126>>ASSIGN   3130>>ASSIGN   3135>>ASSIGN   3139>>ASSIGN   3144>>ASSIGN   3148>>ASSIGN
      3152>>IF       3164>>IF       3165>>ASSIGN   3165>>ASSIGN   3170>>ASSIGN   3170>>ASSIGN   3203>>IF
      3209>>ASSIGN   3213<<ASSIGN   3215<<ASSIGN   3215>>ASSIGN   3224>>IF       3229>>ASSIGN   3235>>ASSIGN
EGREC
       385**DCL      3208--ASSIGN   3228--ASSIGN
EGREC.DBK
       386**DCL      3073<<ASSIGN   3085<<ASSIGN   3119<<ASSIGN
EGREC.OWNER
       390**DCL      3075<<ASSIGN   3086<<ASSIGN   3115<<ASSIGN   3130<<ASSIGN   3139<<ASSIGN   3148<<ASSIGN
      3170<<ASSIGN   3170>>ASSIGN
EGREC.PRIOR
       389**DCL      3074<<ASSIGN   3103<<ASSIGN   3126<<ASSIGN   3135<<ASSIGN   3144<<ASSIGN   3152>>IF
      3164>>IF       3165<<ASSIGN   3165>>ASSIGN
EGREC.RECTYPE
       388**DCL      3077<<ASSIGN   3088<<ASSIGN   3121<<ASSIGN
EGREC.SETTYPE
       387**DCL      3076<<ASSIGN   3087<<ASSIGN   3117<<ASSIGN
EGREC$
       380**DCL       385--IMP-PTR  3073>>ASSIGN   3074>>ASSIGN   3075>>ASSIGN   3076>>ASSIGN   3077>>ASSIGN
      3085>>ASSIGN   3086>>ASSIGN   3087>>ASSIGN   3088>>ASSIGN   3103>>ASSIGN   3115>>ASSIGN   3117>>ASSIGN
      3119>>ASSIGN   3121>>ASSIGN   3126>>ASSIGN   3130>>ASSIGN   3135>>ASSIGN   3139>>ASSIGN   3144>>ASSIGN
      3148>>ASSIGN   3152>>IF       3164>>IF       3165>>ASSIGN   3165>>ASSIGN   3170>>ASSIGN   3170>>ASSIGN
      3208>>ASSIGN   3228>>ASSIGN
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:213  
EISNXT
        77**DCL        78--REDEF    3056<<ASSIGN
EISOWN
        61**DCL        62--REDEF    3058<<ASSIGN   3060>>IF       3127>>IF       3136>>IF       3145>>IF
      3168>>IF
EISPR
        69**DCL        70--REDEF    3057<<ASSIGN   3082>>IF
ENCRP_SEEDSF
       721**DCL       722--REDEF    2960<<ASSIGN   2981<<ASSIGN
ENTRY$
       849**DCL       840--IMP-PTR  2866<<ASSIGN   2874>>IF       2876<<ASSIGN   2876>>ASSIGN   2877<>CALL
      2900<<ASSIGN   2900>>ASSIGN   2901<>CALL     2912<<ASSIGN   2912>>ASSIGN
ENTRYNO
        26**DCL      2871<<DOINDEX  2872>>ASSIGN   2890>>ASSIGN   2905>>ASSIGN
ERRBUF$
       418**DCL       419--IMP-PTR   424--IMP-PTR   431--IMP-PTR   439--IMP-PTR   445--IMP-PTR   451--IMP-PTR
       459--IMP-PTR   470--IMP-PTR
ERRCODESF
       723**DCL       728--REDEF
ERRCODESF.ERR#
       726**DCL      2811<<ASSIGN
ERRCODE_RDEF
       728**DCL      2812>>ASSIGN
ERRFLGSF
       752**DCL      2813<<ASSIGN
F$DCB.ACTPOS
      1908**DCL      1908--REDEF
F$DCB.ARS#
      1882**DCL      1882--REDEF
F$DCB.ATTR
      1901**DCL      1902--REDEF
F$DCB.BORROW
      1916**DCL      1916--REDEF    1916--REDEF    1916--REDEF
F$DCB.DCBNAME.L
      1930**DCL      1930--IMP-SIZ
F$DCB.EOMCHAR#
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:214  
      1886**DCL      1886--REDEF
F$DCB.FLDID
      1911**DCL      1911--REDEF
F$DCB.FORM$
      1905**DCL      1905--REDEF
F$DCB.FSECT
      1921**DCL      1921--REDEF
F$DCB.FSN#
      1898**DCL      1898--REDEF    1898--REDEF    1899--REDEF
F$DCB.HEADER$
      1904**DCL      1904--REDEF
F$DCB.IXTNSIZE#
      1902**DCL      1902--REDEF
F$DCB.LASTSTA$
      1891**DCL      1891--REDEF
F$DCB.LVL
      1917**DCL      1917--REDEF
F$DCB.NAME#.C
      1892**DCL      1892--REDEF
F$DCB.NOEOF
      1914**DCL      1914--REDEF
F$DCB.NRECS#
      1903**DCL      1903--REDEF
F$DCB.NRECX
      1922**DCL      1922--REDEF
F$DCB.OHDR
      1914**DCL      1914--REDEF
F$DCB.ORG#
      1897**DCL      1897--REDEF    2809>>IF
F$DCB.PRECNO
      1920**DCL      1920--REDEF
F$DCB.RCSZ
      1926**DCL      1926--REDEF
F$DCB.RES#
      1893**DCL      1893--REDEF
F$DCB.SETX
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:215  
      1905**DCL      1905--REDEF
F$DCB.TAB$
      1905**DCL      1905--REDEF
F$DCB.TDA
      1919**DCL      1920--REDEF
F$DCB.WSN#
      1893**DCL      1893--REDEF
FIDSF
       740**DCL      2942<<ASSIGN
FIDSF_RD
       739**DCL       740--REDEF
FIND_REC_ENTRY
      3008**PROC     2841--CALL
FLUSH_EG
      3222**PROC     2932--CALL
FULLSF
       710**DCL      2959<<ASSIGN   2980<<ASSIGN
FUNSF
       703**DCL      2943<<ASSIGN
GETPTR
      3022**PROC     2877--CALL     2885--CALL     2901--CALL     3072--CALL     3089--CALL     3093--CALL
GET_ATBLK
      2971**PROC     2818--CALL
GET_DCB
      2781**DCL-ENT  2940--CALL
GROUP$
       850**DCL       845--IMP-PTR  2881<<ASSIGN   2882>>ASSIGN   2883<<ASSIGN   2883>>ASSIGN   2885<>CALL
      2896<<ASSIGN   2896>>ASSIGN
HELPCODE
       757**DCL       762--REDEF
HIGH_DATA_PG
        18**DCL      2820<>CALL     2922<>CALL     2988<<ASSIGN   2991<<ASSIGN
HIGH_LINE
        25**DCL      2829<<ASSIGN   2831>>DOINDEX
HIGH_RECINDX
       379**DCL      3010>>DOINDEX
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:216  
ICHKSUM
       822**DCL       823--REDEF
INITIAL_SORT_CALL
        87**DCL      2790>>IF       2793<<ASSIGN
I_O_BUF
       801**DCL      2828--ASSIGN   2957--ASSIGN   2978--ASSIGN   2985--ASSIGN
I_O_BUF$
       800**DCL       801--IMP-PTR  2828>>ASSIGN   2957>>ASSIGN   2978>>ASSIGN   2985>>ASSIGN
I_O_INDX
        21**DCL      2823<<ASSIGN   2828>>ASSIGN   2920<<ASSIGN   2920>>ASSIGN
I_O_SIZE
       803**DCL      2820<>CALL     2922<>CALL     2958>>ASSIGN
KEYSF
       694**DCL      2961<<ASSIGN   2982<<ASSIGN   3207<<ASSIGN   3227<<ASSIGN
KEYVSF
       695**DCL       700--REDEF
KEYVSF.IDSKEY
       698**DCL      2962<<ASSIGN   2983<<ASSIGN
KEYVSF.WD_ONE
       697**DCL       698--REDEF
KEY_LEN
       852**DCL      2912>>ASSIGN   3068<<ASSIGN
LAST_EGINDX
       384**DCL      3235<<ASSIGN
LAST_PAGE
        86**DCL      2819<<ASSIGN   2820<>CALL     2822>>DOWHILE  2922<>CALL
LINE_NO
        22**DCL      2831<<DOINDEX  2833>>IF       2839>>ASSIGN   2845>>ASSIGN
LOW_DBK
        17**DCL      2845>>ASSIGN   2879>>ASSIGN   2994<<ASSIGN   3035>>ASSIGN   3165>>ASSIGN   3167>>ASSIGN
      3170>>ASSIGN   3171>>ASSIGN
LPP
        19**DCL      2845>>ASSIGN   2845>>ASSIGN   2995<<ASSIGN
M$LO
       810**DCL      3186>>ASSIGN
MSGBUF IN PROCEDURE PULL_PTRS
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:217  
      3046**DCL      3182<<CALLBLT  3187--ASSIGN   3188--ASSIGN
MSGCODE
       729**DCL       730--REDEF    2812<<ASSIGN
MSGHDR IN PROCEDURE PULL_PTRS
      3047**DCL      3182>>CALLBLT  3191<<ASSIGN
MSTR$
      1206**DCL      1209--IMP-PTR  2847>>IF       2863>>ASSIGN   2866>>ASSIGN   2878>>IF       2891>>ASSIGN
      2906>>ASSIGN   3011>>IF       3034>>IF       3067>>ASSIGN   3068>>ASSIGN   3076>>ASSIGN   3087>>ASSIGN
      3094>>IF       3094>>IF       3116>>ASSIGN   3117>>ASSIGN   3154>>IF       3154>>IF       3162>>IF
      3177>>CALLBLT  3178>>CALLBLT  3182>>CALLBLT  3182>>CALLBLT
MSTR_INDX
      1232**DCL      2847>>IF       2866>>ASSIGN   3013<<ASSIGN   3067>>ASSIGN   3068>>ASSIGN   3177>>CALLBLT
      3182>>CALLBLT
MSTR_REF.GLOBAL
      1216**DCL      2878>>IF       3034>>IF       3162>>IF
MSTR_REF.NAME
      1214**DCL      3177>>CALLBLT  3178>>CALLBLT  3182--CALLBLT  3182--CALLBLT
MSTR_REF.NXTHSH
      1212**DCL      1213--REDEF
MSTR_REF.PAENT
      1218**DCL      1219--REDEF    3068>>ASSIGN
MSTR_REF.PAOFF
      1215**DCL      1216--REDEF    2847>>IF       2866>>ASSIGN   3067>>ASSIGN
MSTR_REF.SET.INMODE
      1222**DCL      3094>>IF       3154>>IF
MSTR_REF.SET.RETYPE
      1223**DCL      3094>>IF       3154>>IF
MSTR_REF.TYPE
      1210**DCL      2863>>ASSIGN   2891>>ASSIGN   2906>>ASSIGN   3011>>IF       3076>>ASSIGN   3087>>ASSIGN
      3116>>ASSIGN   3117>>ASSIGN
NEXT_AREA
      2930**LABEL    2805--GOTO
NO_AREAS
      1248**DCL      2804>>DOINDEX
NO_EGBUFS
       383**DCL      3212<<ASSIGN   3212>>ASSIGN
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:218  
NO_EGRECS
       382**DCL      3202<<ASSIGN   3202>>ASSIGN
NO_ENTRIES
        27**DCL      2871>>DOINDEX  3069<<ASSIGN
NO_PTRS
        28**DCL      2882<<ASSIGN   2884>>DOINDEX
NO_RECORD
      2918**LABEL    2841--CALLALT
NXTPT.BYT_OFF
        80**DCL      3062>>ASSIGN
NXTPT.SIZE
        84**DCL      3084>>ASSIGN   3113>>ASSIGN
OPEN_AREA
      2939**PROC     2807--CALL
ORGSF
       693**DCL      2945<<ASSIGN
OWNPT.BYT_OFF
        64**DCL      3061>>ASSIGN
PAGE_RANGE
      2774**DCL-ENT  2820--CALL     2922--CALL
PA_ENTRY.C
       841**DCL      2874>>IF
PA_GROUP.NO_GROUPS
       846**DCL      2882>>ASSIGN
PA_REC.ENTRIES
       838**DCL      3069>>ASSIGN
PA_REC.NOT_LOWEST_LEVEL
       832**DCL      2864>>IF       2892>>IF       2907>>IF
PA_RTN1
      2888**LABEL    2799--GOTO
PA_RTN2
      2903**LABEL    2801--GOTO
PRIPT.BYT_OFF
        72**DCL      3063>>ASSIGN
PTR$ IN PROCEDURE GETPTR
      3024**DCL      3022--PROC     3028>>ASSIGN   3030>>ASSIGN   3032>>ASSIGN
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:219  
PTREC
        39**DCL        14--PROC
PTREC.DBK
        43**DCL      2862<<ASSIGN   2895<<ASSIGN   2910<<ASSIGN   3118<<ASSIGN
PTREC.NEXT
        40**DCL      2887<<ASSIGN   2902<<ASSIGN   3125<<ASSIGN   3134<<ASSIGN   3143<<ASSIGN   3152>>IF
      3166>>IF       3167<<ASSIGN   3167>>ASSIGN
PTREC.OWNER
        44**DCL        45--REDEF    3114<<ASSIGN   3129<<ASSIGN   3138<<ASSIGN   3147<<ASSIGN   3152>>IF
      3168>>IF       3171<<ASSIGN   3171>>ASSIGN
PTREC.PA.ENTRY#
        46**DCL      2872<<ASSIGN   2890<<ASSIGN   2905<<ASSIGN
PTREC.PA.GROUP#
        47**DCL      2873<<ASSIGN   2886<<ASSIGN
PTREC.RECTYPE
        42**DCL      2861<<ASSIGN   2894<<ASSIGN   2909<<ASSIGN   3120<<ASSIGN
PTREC.SETTYPE
        41**DCL      2863<<ASSIGN   2865<<ASSIGN   2865>>ASSIGN   2891<<ASSIGN   2893<<ASSIGN   2893>>ASSIGN
      2906<<ASSIGN   2908<<ASSIGN   2908>>ASSIGN   3116<<ASSIGN
PTR_LEN
       851**DCL        32--IMP-SIZ   844--IMP-SIZ   848--IMP-SIZ  2896>>ASSIGN   2912>>ASSIGN   3026>>DOCASE
      3067<<ASSIGN   3068>>ASSIGN   3070>>IF       3070>>IF       3084<<ASSIGN   3092>>ASSIGN
PTSIZE
        48**DCL        14--PROC     2792<<ASSIGN
PULL_PTRS
      3044**PROC     2855--CALL
R1 IN PROCEDURE PULL_PTRS
      3048**DCL      3051--IMP-SIZ  3177<<CALLBLT  3182>>CALLBLT
RB
       782**DCL      2820<>CALL     2827<<DOINDEX  2827>>DOINDEX  2922<>CALL     2962>>ASSIGN
RE
       783**DCL      2820<>CALL     2827>>DOINDEX  2922<>CALL
READ_DB
      2954**PROC     2824--CALL
REC
        57**DCL        60--REDEF
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:220  
REC.TYPE
        58**DCL      2861>>ASSIGN   2894>>ASSIGN   2909>>ASSIGN   3011>>IF       3077>>ASSIGN   3088>>ASSIGN
      3120>>ASSIGN   3121>>ASSIGN
REC$
       781**DCL       804--IMP-PTR   828--IMP-PTR  2839<<ASSIGN   2840>>ASSIGN   2864>>IF       2866>>ASSIGN
      2881>>ASSIGN   2892>>IF       2907>>IF       3061>>ASSIGN   3062>>ASSIGN   3063>>ASSIGN   3069>>ASSIGN
RECINDX
       378**DCL      2846>>ASSIGN   3010<<DOINDEX  3011>>IF       3013>>ASSIGN
RECLIST.MSTRINDX
       374**DCL      3011>>IF       3013>>ASSIGN
RECLIST.SETINDX
       375**DCL      2846>>ASSIGN
RECSTUFF
        60**DCL      2840<<ASSIGN
REC_DATA_LN
       809**DCL       808--IMP-SIZ
REC_XREF$
      1261**DCL      1262--IMP-PTR
REPORT_ZERO IN PROCEDURE PULL_PTRS
      3177**LABEL    3098--GOTO     3158--GOTO
RETURNCODE
        29**DCL      2794<<ASSIGN   2797>>IF       2799>>IF       2888<<ASSIGN   2903<<ASSIGN   2914<<ASSIGN
RE_ENTRY
      2854**LABEL    2797--GOTO     2855--CALLALT
R_V IN PROCEDURE PULL_PTRS
      3051**DCL      3182>>CALLBLT
S1 IN PROCEDURE PULL_PTRS
      3050**DCL      3053--IMP-SIZ  3178<<CALLBLT  3182>>CALLBLT
SETINDX
       377**DCL      2846<<ASSIGN   2852>>DOWHILE  2854>>ASSIGN   2916<<ASSIGN   2916>>ASSIGN   3056>>ASSIGN
      3057>>ASSIGN   3058>>ASSIGN
SETLIST
       376**DCL      2852>>DOWHILE  2854>>ASSIGN   3056>>ASSIGN   3057>>ASSIGN   3058>>ASSIGN
SETNUM
        30**DCL      2854<<ASSIGN   2863>>ASSIGN   2878>>IF       2891>>ASSIGN   2906>>ASSIGN   3034>>IF
      3076>>ASSIGN   3087>>ASSIGN   3094>>IF       3094>>IF       3116>>ASSIGN   3117>>ASSIGN   3154>>IF
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:221  
      3154>>IF       3162>>IF       3178>>CALLBLT  3182>>CALLBLT
SETNXT$
        53**DCL      3062<<ASSIGN   3070>>IF       3089<>CALL     3092<<ASSIGN   3092>>ASSIGN   3093<>CALL
      3125>>ASSIGN   3134>>ASSIGN   3143>>ASSIGN
SETOWN$
        55**DCL      3061<<ASSIGN   3070>>IF       3072<>CALL     3129>>ASSIGN   3130>>ASSIGN   3138>>ASSIGN
      3139>>ASSIGN   3147>>ASSIGN   3148>>ASSIGN
SETPR$
        54**DCL      3063<<ASSIGN   3126>>ASSIGN   3135>>ASSIGN   3144>>ASSIGN
SETVAL
        31**DCL      2877<>CALL     2879<<ASSIGN   2879>>ASSIGN   2881>>ASSIGN   2885<>CALL     2887>>ASSIGN
      2901<>CALL     2902>>ASSIGN   3072<>CALL     3074>>ASSIGN   3089<>CALL     3090>>IF       3093<>CALL
      3094>>IF       3101<<ASSIGN   3103>>ASSIGN
SET_LN
        24**DCL      3113<<ASSIGN   3123>>DOCASE
SET_XREF.EIS.NEXT
      1257**DCL      3056>>ASSIGN
SET_XREF.EIS.OWNR
      1256**DCL      3058>>ASSIGN
SET_XREF.EIS.PRIOR
      1255**DCL      3057>>ASSIGN
SET_XREF.MSTRINDX
      1252**DCL      2854>>ASSIGN
SET_XREF$
      1250**DCL      1251--IMP-PTR  2854>>ASSIGN   3056>>ASSIGN   3057>>ASSIGN   3058>>ASSIGN
SHARESF
       743**DCL      2944<<ASSIGN
SYS_FUNC_CLOS
      2776**DCL-ENT  2927--CALL     3234--CALL
SYS_FUNC_ERRMSG
      2782**DCL-ENT  2814--CALL
SYS_FUNC_OPEN
      2777**DCL-ENT  2948--CALL
SYS_FUNC_READ
      2778**DCL-ENT  2963--CALL     2984--CALL
SYS_FUNC_RELDCB
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:222  
      2780**DCL-ENT  2928--CALL
SYS_FUNC_WRIT
      2779**DCL-ENT  3190--CALL     3211--CALL     3231--CALL
SZ2
        50**DCL      3028>>ASSIGN   3125>>ASSIGN   3126>>ASSIGN   3129>>ASSIGN   3130>>ASSIGN
SZ3
        51**DCL      3030>>ASSIGN   3134>>ASSIGN   3135>>ASSIGN   3138>>ASSIGN   3139>>ASSIGN
SZ4
        52**DCL      2840>>ASSIGN   3032>>ASSIGN   3143>>ASSIGN   3144>>ASSIGN   3147>>ASSIGN   3148>>ASSIGN
S_V IN PROCEDURE PULL_PTRS
      3053**DCL      3182>>CALLBLT
TYPE_PA
        88**DCL      2848<<ASSIGN   2850<<ASSIGN   2858>>IF       3065>>IF
VAL IN PROCEDURE GETPTR
      3023**DCL      3022--PROC     3028<<ASSIGN   3030<<ASSIGN   3032<<ASSIGN   3034>>IF       3035<<ASSIGN
      3035>>ASSIGN
VFCSF
       709**DCL      3189<<ASSIGN   3210<<ASSIGN   3230<<ASSIGN
WRITE_EG
      3200**PROC     2856--CALL     3078--CALL     3104--CALL
X
       798**DCL      2884<<DOINDEX  2886>>ASSIGN
ZERO_SUP
      2775**DCL-ENT  3180--CALL
ZI$DIR.ALTKEY
      2701**DCL      2702--REDEF    2703--REDEF
ZI$DIR.AREAFID
      2667**DCL      2668--REDEF
ZI$DIR.AREA_NM
      2730**DCL      2940<>CALL
ZI$DIR.AREA_NM.DCB#
      2734**DCL      2926>>ASSIGN   2956>>ASSIGN   2977>>ASSIGN
ZI$DIR.AREA_NM.NAME.TEXT
      2733**DCL      2806<<ASSIGN   2942>>ASSIGN
ZI$DIR.DATE
      2706**DCL      2710--REDEF
PL6.E3A0      #003=ZIU$GENRCD File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:33 Page:223  
ZI$DIR.DEST_SEED
      2662**DCL      2663--REDEF    2664--REDEF
ZI$DIR.ENCP_SEED
      2659**DCL      2660--REDEF    2661--REDEF    2960>>ASSIGN   2981>>ASSIGN
ZI$DIR.REPRT_ZERO
      2693**DCL      2694--REDEF    3097>>IF       3157>>IF
ZI$DIR.SCHFID
      2665**DCL      2666--REDEF
ZI$DIR.TIME
      2711**DCL      2716--REDEF

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:224  
     1267        1        /*M*  ZIU$VALDTE  IDSII  UTILITIES  SET VALIDATION OUTPUT PROC */
     1268        2        /*T***********************************************************/
     1269        3        /*T*                                                         */
     1270        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1271        5        /*T*                                                         */
     1272        6        /*T***********************************************************/
     1273        7        ZIU$VALDTE: PROC(PT,PT_SIZE) ALTRET;
     1274        8
     1275        9    1   DCL 1 PT CHAR(PT_SIZE);
     1276       10    1   DCL PT_SIZE UBIN WORD;
     1277       11
     1278       12    1   DCL RETURN_CODE SBIN WORD STATIC INIT(0); /* Reentry code */
     1279       13    1   DCL LASTEG SBIN WORD STATIC INIT(0);
     1280       14    1   DCL LASTPT SBIN WORD STATIC INIT(0);
     1281       15    1   DCL PRINTPT SBIN WORD STATIC INIT(0);
     1282       16
     1283       17    1   DCL 1 PTFILE SYMREF,
     1284       18    1         2 * CHAR(5) UNAL,
     1285       19    1         2 DCB# UBIN HALF UNAL;
     1286       20
     1287       21    1   DCL 1 NXTPT STATIC CALIGNED,
     1288       22    1         2 NEXT UBIN WORD UNAL,
     1289       23    1         2 SETYP SBIN HALF UNAL,
     1290       24    1         2 RECTYPE SBIN HALF UNAL,
     1291       25    1         2 DBK UBIN WORD UNAL,
     1292       26    1         2 OWNER UBIN WORD UNAL;
     1293       27    1   DCL 1 PTREDF REDEF NXTPT CHAR(16) CALIGNED;
     1294       28    1   DCL PTSIZE UBIN WORD UNAL STATIC;
     1295       29
     1296       30    1   DCL 1 PTSAVE (0:9) STATIC SYMDEF ALIGNED,
     1297       31    1         2 NEXT UBIN WORD UNAL,
     1298       32    1         2 SETYP SBIN HALF UNAL,
     1299       33    1         2 RECTYP SBIN HALF UNAL,
     1300       34    1         2 DBK UBIN WORD UNAL,
     1301       35    1         2 OWNER UBIN WORD UNAL;
     1302       36    1   DCL PTSVCNT SBIN WORD STATIC SYMDEF ALIGNED;
     1303       37
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:225  
     1304       38    1   DCL CASE# SBIN WORD STATIC ALIGNED;
     1305       39    1   DCL PPTSTY SBIN WORD STATIC ALIGNED INIT(0);
     1306       40    1   DCL NEXTEG SBIN WORD STATIC ALIGNED;
     1307       41
     1308       42         %INCLUDE CP_6_SUBS;
     1309      582         %INCLUDE ZI_GLOBAL_DBUTIL;
     1310      760         %SYS_FUNC;
     1311      852         %MISC_DCLS;
     1312      905         %INCLUDE ZI_DBU_VALDTE;
     1313     1173         %VALID_LIST;
     1314     1313         %INCLUDE ZI_DBU_XREF;
     1315     1480         %XREF_TBLS;
     1316     1555         %INCLUDE ZI$DIR;
     1317     1712         %DIR;
     1318     1856
     1319     1857         %EQU PTINIT# = 1;
     1320     1858         %EQU NXTPT# = 2;
     1321     1859
     1322     1860        /*
     1323     1861                 DECISION TABLE FLAGS FOR PT AND EG RECORDS.
     1324     1862        */
     1325     1863    1   DCL EGRECNO SBIN WORD STATIC INIT(0); /* Curr eg recs processed */
     1326     1864    1   DCL PTRECNO SBIN WORD STATIC INIT(0); /* Curr pt recs processed */
     1327     1865    1   DCL EGLIDBK BIT(1) STATIC UNAL; /* EG is last in DBK */
     1328     1866    1   DCL PTLIDBK BIT(1) STATIC UNAL; /* PT is last in DBK */
     1329     1867    1   DCL EGLSTR BIT(1) STATIC UNAL; /* Next EG is last record */
     1330     1868    1   DCL PTLSTR BIT(1) STATIC UNAL; /* Next PT is last record */
     1331     1869    1   DCL EGEOD BIT(1) STATIC UNAL; /* Next DBK has diff value */
     1332     1870    1   DCL PTEOD BIT(1) STATIC UNAL; /* Next DBK has diff value */
     1333     1871    1   DCL EGEOF BIT(1) STATIC UNAL; /* End of file on EG */
     1334     1872    1   DCL PTEOF BIT(1) STATIC UNAL; /* End of file on PT */
     1335     1873
     1336     1874    1   DCL INTERACT BIT(1) STATIC UNAL; /* Rec and Set interact */
     1337     1875    1   DCL OWNER BIT(1) STATIC UNAL;
     1338     1876
     1339     1877    1   DCL HASNXT BIT(1) STATIC UNAL;
     1340     1878    1   DCL MLTNXT BIT(1) STATIC UNAL;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:226  
     1341     1879
     1342     1880
     1343     1881    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
     1344     1882    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
     1345     1883    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
     1346     1884    1   DCL SYS_FUNC_READ ENTRY ALTRET;
     1347     1885    1   DCL ZIU$INTERACT ENTRY(4);
     1348     1886
     1349     1887
     1350     1888    1       PTREDF = PT;
     1351     1889    1       PTSIZE = PT_SIZE;
     1352     1890    1   /**/ DCBSF = PTFILE.DCB#;
     1353     1891
     1354     1892    1       IF PT_SIZE = 0 THEN
     1355     1893    2       DO;
     1356     1894    2           PTLSTR = %TRUE#; /* No more records after the current */
     1357     1895    2           PTLIDBK = %TRUE#; /* Current is the last in the DBK */
     1358     1896    2           CALL SYS_FUNC_CLOS;
     1359     1897    2           END;
     1360     1898
     1361     1899    1       ELSE IF PRINTPT= 1 THEN
     1362     1900    2           DO;
     1363     1901    2               BUFSF = VECTOR(PT);
     1364     1902    2               BUFLNSF = 16;
     1365     1903    2               VFCSF = %NO#;
     1366     1904    2               KEYSF = %NO#;
     1367     1905    2               CALL SYS_FUNC_WRIT ALTRET(ALT_VALDTE);
     1368     1906    2               END;
     1369     1907    1       IF RETURN_CODE = %NXTPT# THEN
     1370     1908    1           GOTO NXTPT;
     1371     1909    1       ELSE
     1372     1910    1           IF RETURN_CODE = %PTINIT# THEN
     1373     1911    1               GOTO PTINIT;
     1374     1912        /*
     1375     1913                 Initialize  EGbuffer and PTbuffer with first record of each
     1376     1914                 and set the proper data flags for decision table.
     1377     1915        */
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:227  
     1378     1916
     1379     1917    1       HASNXT = %FALSE#; /* CURR PT NEXT COUNTED FOR AGAINST EG */
     1380     1918    1       MLTNXT= %FALSE#;
     1381     1919    1       CALL INIT_EG ALTRET(ALT_VALDTE);
     1382     1920    1       CALL INIT_PT;
     1383     1921    1       NO_ERRORS = 0;
     1384     1922    1       RETURN_CODE = %PTINIT#;
     1385     1923    1       RETURN;
     1386     1924    1   PTINIT:
     1387     1925    1       IF CURRPT.NEXT ~= NXTPT.NEXT THEN
     1388     1926    1           PTLIDBK = %TRUE#;
     1389     1927
     1390     1928    1       CALL CHECK_CASE(CASE#); /* Call decision table routine
     1391     1929         to examine the records. */
     1392     1930    2       DO WHILE(CASE# ~= %PT_AND_EG_EOF);
     1393     1931
     1394     1932    2           IF BREAK_FLAG > 0 THEN
     1395     1933    2               UNWIND TO BREAK_LOCAT;
     1396     1934
     1397     1935
     1398     1936    3           DO CASE(CASE#);
     1399     1937    3           CASE(%EOF_EG,%EGDBK_GT_PTNXT);
     1400     1938    3               CALL WRITE_VALERR(%GRBGNXT#);
     1401     1939    3               PPTSTY = 0;
     1402     1940    3               RETURN_CODE = %NXTPT#;
     1403     1941    3               CALL RDPTREC ALTRET(REREAD);
     1404     1942    3               RETURN;
     1405     1943
     1406     1944    3           CASE(%EOF_PT,%EGDBK_LT_PTNXT);
     1407     1945    3               IF MLTNXT THEN /* Multiple next pointers = true*/
     1408     1946    4               DO;
     1409     1947    4                   CALL WRITE_VALERR(%MULTNXT#);
     1410     1948    4                   MLTNXT = %FALSE#; /* Clear multnxt flag */
     1411     1949    4                   END;
     1412     1950    3               PPTSTY = 0;
     1413     1951    3               IF ~HASNXT THEN
     1414     1952    3                   CALL WRITE_VALERR(%MISGNXT#) ALTRET(ALT_VALDTE);
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:228  
     1415     1953    3               CALL RDEGREC ALTRET(ALT_VALDTE);
     1416     1954    3               IF EGEOD = %TRUE# THEN /* Lst dbk in set on read */
     1417     1955    3                   CALL RDEGREC ALTRET(ALT_VALDTE);
     1418     1956    3               HASNXT = %NO#;
     1419     1957
     1420     1958
     1421     1959    3           CASE(%CHNG_PT_DBK,%EGSET_LT_PTSET);
     1422     1960    3               IF MLTNXT THEN /* Multiple next pointers = true*/
     1423     1961    4               DO;
     1424     1962    4                   CALL WRITE_VALERR(%MULTNXT#);
     1425     1963    4                   MLTNXT = %FALSE#; /* Clear multnxt flag */
     1426     1964    4                   END;
     1427     1965    3               IF ~HASNXT THEN
     1428     1966    4               DO;
     1429     1967    4                   CALL WRITE_VALERR(%MISGNXT#) ALTRET(ALT_VALDTE);
     1430     1968    4                   END;
     1431     1969    3               CALL RDEGREC ALTRET(ALT_VALDTE);
     1432     1970    3               HASNXT = EGEOD;
     1433     1971
     1434     1972    3           CASE(%CHNG_EG_PT_DBK);
     1435     1973    3               PPTSTY = 0;
     1436     1974    3               RETURN_CODE = %NXTPT#;
     1437     1975    3               CALL RDPTREC ALTRET(NOREAD);
     1438     1976    3               RETURN;
     1439     1977
     1440     1978    3           CASE(%CHNG_EG_DBK,%EGSET_GT_PTSET);
     1441     1979    3               CALL WRITE_VALERR(%DANGNXT#) ALTRET(ALT_VALDTE);
     1442     1980    3               RETURN_CODE = %NXTPT#;
     1443     1981    3               CALL RDPTREC ALTRET(NOREAD);
     1444     1982    3               RETURN;
     1445     1983
     1446     1984    3           CASE(%MULTNXT);
     1447     1985    3               MLTNXT = %TRUE#;
     1448     1986    3               HASNXT = %TRUE#;
     1449     1987    3               PTSVCNT = PTSVCNT+1;
     1450     1988    3               PTSAVE(PTSVCNT) = CURRPT; /* Save the current pt */
     1451     1989    3               PPTSTY = CURRPT.SETYP;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:229  
     1452     1990    3               CALL CHECK_PTRS ALTRET(ALT_VALDTE);
     1453     1991    3               RETURN_CODE = %NXTPT#;
     1454     1992    3               CALL RDPTREC ALTRET(NOREAD);
     1455     1993    3               RETURN;
     1456     1994
     1457     1995    3           CASE(ELSE);
     1458     1996    3               IF MLTNXT = %TRUE# THEN
     1459     1997    4               DO;
     1460     1998    4                   CALL WRITE_VALERR(%MULTNXT#);
     1461     1999    4                   MLTNXT = %FALSE#;
     1462     2000    4                   END;
     1463     2001    3               PTSVCNT = 0;
     1464     2002    3               HASNXT = %TRUE#;
     1465     2003    3               PTSAVE(0) = CURRPT;
     1466     2004    3               PPTSTY = CURRPT.SETYP;
     1467     2005    3               CALL CHECK_PTRS ALTRET(ALT_VALDTE);
     1468     2006    3               RETURN_CODE = %NXTPT#;
     1469     2007    3               CALL RDPTREC ALTRET(NOREAD);
     1470     2008    3               RETURN;
     1471     2009
     1472     2010
     1473     2011    3               END; /* END CASE */
     1474     2012
     1475     2013    2   REREAD:
     1476     2014    2           IF PTEOD = %YES# THEN
     1477     2015    3           DO;
     1478     2016    3               CALL RDPTREC ALTRET(NOREAD);
     1479     2017    3               RETURN;
     1480     2018    3               END;
     1481     2019
     1482     2020    2   NXTPT:
     1483     2021    2           IF CURRPT.NEXT ~= NXTPT.NEXT THEN
     1484     2022    2               PTLIDBK = %TRUE#;
     1485     2023    2   NOREAD:
     1486     2024         /* No reading of a PT rec was required */
     1487     2025
     1488     2026    2           CALL CHECK_CASE(CASE#);
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:230  
     1489     2027
     1490     2028    2           END; /* END DO WHILE */
     1491     2029
     1492     2030    1       DCBSF = EGFILE.DCB#; /* CLOSE *EGFILE */
     1493     2031    1       CALL SYS_FUNC_CLOS;
     1494     2032    1       RETURN_CODE = 0;
     1495     2033    1       RETURN;
     1496     2034         %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:231  
     1497     2035    1   CHECK_CASE: PROC(CASE#);
     1498     2036    2   DCL CASE# SBIN;
     1499     2037
     1500     2038    2       IF EGEOF AND PTEOF THEN
     1501     2039    2           CASE# = %PT_AND_EG_EOF;
     1502     2040    2       ELSE
     1503     2041    2           IF EGEOF THEN
     1504     2042    2               CASE# = %EOF_EG;
     1505     2043    2           ELSE
     1506     2044    2               IF PTEOF THEN
     1507     2045    2                   CASE# = %EOF_PT;
     1508     2046    2               ELSE
     1509     2047    2                   IF CURREG.DBK > CURRPT.NEXT THEN
     1510     2048    2                       CASE# = %EGDBK_GT_PTNXT;
     1511     2049    2                   ELSE
     1512     2050    2                       IF CURREG.DBK < CURRPT.NEXT THEN
     1513     2051    2                           CASE# = %EGDBK_LT_PTNXT;
     1514     2052    2                       ELSE
     1515     2053    2                           IF EGEOD = %TRUE# AND /* Last set in curr eg dbk */
     1516     2054    2                              PTEOD = %TRUE# THEN /* Last set in curr pt dbk */
     1517     2055    2                               CASE# = %CHNG_EG_PT_DBK;
     1518     2056    2                           ELSE
     1519     2057    2                               IF EGEOD = %TRUE# THEN
     1520     2058    2                                   CASE# = %CHNG_EG_DBK;
     1521     2059    2                               ELSE
     1522     2060    2                                   IF PTEOD = %TRUE# THEN
     1523     2061    2                                       CASE# = %CHNG_PT_DBK;
     1524     2062    2                                   ELSE
     1525     2063    2                                       IF CURREG.SETYP < CURRPT.SETYP THEN
     1526     2064    2                                           CASE# = %EGSET_LT_PTSET;
     1527     2065    2                                       ELSE
     1528     2066    2                                           IF CURREG.SETYP > CURRPT.SETYP THEN
     1529     2067    2                                               CASE# = %EGSET_GT_PTSET;
     1530     2068    2                                           ELSE
     1531     2069    2                                               IF CURRPT.SETYP = PPTSTY THEN
     1532     2070    2                                                   CASE# = %MULTNXT;
     1533     2071    2                                               ELSE
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:232  
     1534     2072    2                                                   CASE# = 0;
     1535     2073
     1536     2074    2       RETURN;
     1537     2075
     1538     2076    2   END CHECK_CASE;
     1539     2077        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:233  
     1540     2078        /*
     1541     2079              Check pointers routine.
     1542     2080        */
     1543     2081    1   CHECK_PTRS: PROC ALTRET;
     1544     2082    2       HASNXT = %YES#;
     1545     2083    2       CALL ZIU$INTERACT(CURREG.RECTYP,CURREG.SETYP,INTERACT,OWNER);
     1546     2084    2       IF CASE# ~= %MULTNXT THEN
     1547     2085    3       DO;
     1548     2086    3           CALL CHKPRI ALTRET(ALT_PTRS);
     1549     2087    3           CALL CHKOWN ALTRET(ALT_PTRS);
     1550     2088    3           END;
     1551     2089    2       CALL CHKNXT ALTRET(ALT_PTRS);
     1552     2090    2       RETURN;
     1553     2091
     1554     2092    2   ALT_PTRS:
     1555     2093    2       ALTRETURN;
     1556     2094    2   END CHECK_PTRS;
     1557     2095
     1558     2096
     1559     2097    1   CHKNXT: PROC ALTRET;
     1560     2098        /*
     1561     2099           Does record point to itself? if so it better be the set owner.
     1562     2100        */
     1563     2101    2       IF CURREG.DBK ~= CURRPT.DBK THEN
     1564     2102    2           RETURN;
     1565     2103    2       IF OWNER = %YES# THEN
     1566     2104    2           RETURN;
     1567     2105    2       CALL WRITE_VALERR(%MMBRNXT#) ALTRET(ALTNXT);
     1568     2106    2       RETURN;
     1569     2107    2   ALTNXT:
     1570     2108    2       LASTEG = NO_EGRECS;
     1571     2109    2       LASTPT = PTRECNO;
     1572     2110    2       ALTRETURN;
     1573     2111    2   END CHKNXT;
     1574     2112
     1575     2113
     1576     2114    1   CHKPRI: PROC ALTRET;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:234  
     1577     2115
     1578     2116    2       IF CURREG.PRIOR = CURREG.DBK THEN
     1579     2117    3       DO;
     1580     2118    3           IF OWNER = %NO# THEN
     1581     2119    3               CALL WRITE_VALERR(%MMBRPRI#) ALTRET(ALTPRI);
     1582     2120    3           END;
     1583     2121
     1584     2122    2       IF CURREG.PRIOR ~= CURRPT.DBK THEN
     1585     2123    2           CALL WRITE_VALERR(%DBKPRIOR#);
     1586     2124    2       RETURN;
     1587     2125    2   ALTPRI:
     1588     2126    2       ALTRETURN;
     1589     2127    2   END CHKPRI;
     1590     2128
     1591     2129
     1592     2130    1   CHKOWN: PROC ALTRET;
     1593     2131
     1594     2132    2       IF CURREG.SETYP < 5000 OR CURRPT.SETYP < 5000 THEN
     1595     2133    2           RETURN; /*  Special PA -> PA pointers (no owner ptrs )*/
     1596     2134
     1597     2135    2       IF MSTR_REF.NAME(CURREG.SETYP-5000+NO_RECS) = '*CALC' THEN
     1598     2136    2           RETURN; /* Calc recs have no owners */
     1599     2137
     1600     2138    2       IF CURREG.OWNER ~= CURRPT.OWNER AND
     1601     2139    2          CURREG.OWNER ~= 0 AND CURRPT.OWNER ~= 0 THEN
     1602     2140    2           IF MSTR_REF.SET.PATYPE(CURREG.SETYP-5000+NO_RECS) ~= '1'B THEN
     1603     2141    2               CALL WRITE_VALERR(%INCNOWN#) ALTRET(ALTOWN);
     1604     2142    2       IF CURRPT.OWNER = 0 AND CURRPT.NEXT ~= 0 THEN
     1605     2143    2           CALL WRITE_VALERR(%GRBGOWN#) ALTRET(ALTOWN);
     1606     2144
     1607     2145    2       RETURN;
     1608     2146    2   ALTOWN:
     1609     2147    2       ALTRETURN;
     1610     2148    2   END CHKOWN;
     1611     2149        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:235  
     1612     2150
     1613     2151    1   INIT_EG: PROC ALTRET;
     1614     2152
     1615     2153    2       EGRECNO = 0;
     1616     2154    2       EGLIDBK = %FALSE#;
     1617     2155    2       EGLSTR = %FALSE#;
     1618     2156    2       EGEOD = %FALSE#;
     1619     2157    2       EGEOF = %FALSE#;
     1620     2158
     1621     2159    2       IF NO_EGRECS = 0 THEN
     1622     2160    3       DO;
     1623     2161    3           EGEOF = %YES#;
     1624     2162    3           RETURN;
     1625     2163    3           END;
     1626     2164
     1627     2165         /*       Close and reopen EGFILE for input. */
     1628     2166    2   /**/ DCBSF = EGFILE.DCB#;
     1629     2167    2       CALL SYS_FUNC_CLOS;
     1630     2168    2       FUNSF = %IN#;
     1631     2169    2       ACSSF = %SEQUEN#;
     1632     2170    2       ORGSF = %CONSEC#;
     1633     2171    2       ASNSF = %FILE#;
     1634     2172    2       FIDSF = '*EGFILE';
     1635     2173    2       CALL SYS_FUNC_OPEN ALTRET(ALT_EGINIT);
     1636     2174
     1637     2175
     1638     2176    2       CALL RDEGBUF ALTRET(ALT_EGINIT);
     1639     2177
     1640     2178    2       CURREG = EGREC(0);
     1641     2179    2       NEXTEG = 1;
     1642     2180
     1643     2181    2       IF NO_EGRECS = 1 THEN
     1644     2182    3       DO;
     1645     2183    3           EGLSTR = %TRUE#;
     1646     2184    3           EGLIDBK= %TRUE#;
     1647     2185    3           RETURN;
     1648     2186    3           END;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:236  
     1649     2187
     1650     2188    2       IF CURREG.DBK ~= EGREC.DBK(NEXTEG) THEN
     1651     2189    2           EGLIDBK = %TRUE#;
     1652     2190
     1653     2191    2       RETURN;
     1654     2192
     1655     2193    2   ALT_EGINIT:
     1656     2194    2       ALTRETURN;
     1657     2195    2   END INIT_EG;
     1658     2196        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:237  
     1659     2197        /*
     1660     2198                     Read EG file and set flags
     1661     2199        */
     1662     2200    1   RDEGREC: PROC ALTRET;
     1663     2201
     1664     2202    2       EGEOD = %NO#;
     1665     2203    2       EGEOF = %NO#;
     1666     2204
     1667     2205    2       IF EGLIDBK = %TRUE# THEN
     1668     2206    3       DO;
     1669     2207    3           EGLIDBK = %FALSE#;
     1670     2208    3           EGEOD = %TRUE#;
     1671     2209    3           RETURN;
     1672     2210    3           END;
     1673     2211
     1674     2212    2       CURREG = EGREC(NEXTEG);
     1675     2213    2       EGRECNO = EGRECNO +1;
     1676     2214    2       NEXTEG = NEXTEG +1;
     1677     2215
     1678     2216    2       IF EGLSTR = %TRUE# THEN /* This is the last record in EG file */
     1679     2217    3       DO;
     1680     2218    3           EGEOF = %TRUE#;
     1681     2219    3           RETURN;
     1682     2220    3           END;
     1683     2221
     1684     2222    2       IF NEXTEG > 4095 AND EGRECNO < NO_EGRECS THEN
     1685     2223    3       DO;
     1686     2224    3           CALL RDEGBUF ALTRET(ALT_RDEG);
     1687     2225    3           NEXTEG = 0;
     1688     2226    3           END;
     1689     2227
     1690     2228    2       IF EGRECNO+1 = NO_EGRECS THEN
     1691     2229    3       DO;
     1692     2230    3           EGLSTR = %TRUE#;
     1693     2231    3           EGLIDBK = %TRUE#;
     1694     2232    3           END;
     1695     2233
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:238  
     1696     2234    2       IF CURREG.DBK ~= EGREC.DBK(NEXTEG) THEN
     1697     2235    2           EGLIDBK = %TRUE#;
     1698     2236
     1699     2237    2       RETURN;
     1700     2238
     1701     2239    2   ALT_RDEG:
     1702     2240    2       ALTRETURN;
     1703     2241    2   END RDEGREC;
     1704     2242        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:239  
     1705     2243        /*
     1706     2244                     PHYSICAL READ OF EG FILE
     1707     2245        */
     1708     2246    1   RDEGBUF: PROC ALTRET;
     1709     2247
     1710     2248    2   /**/ DCBSF = EGFILE.DCB#;
     1711     2249    2       BUFSF = VECTOR(EGREC);
     1712     2250    2       BUFLNSF = 16*4096;
     1713     2251    2       KEYSF = %NO#;
     1714     2252    2       FULLSF = %NO#;
     1715     2253    2       CALL SYS_FUNC_READ ALTRET(ALT_READ);
     1716     2254    2       RETURN;
     1717     2255    2   ALT_READ:
     1718     2256    2       ALTRETURN;
     1719     2257    2   END RDEGBUF;
     1720     2258        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:240  
     1721     2259
     1722     2260        /*
     1723     2261                         P T    I N I T
     1724     2262        */
     1725     2263    1   INIT_PT: PROC ALTRET;
     1726     2264
     1727     2265    2       PTLIDBK = %NO#;
     1728     2266    2       PTLSTR = %NO#;
     1729     2267    2       PTEOD = %FALSE#;
     1730     2268    2       PTEOF = %FALSE#;
     1731     2269    2       PTRECNO = 0;
     1732     2270    2       PTSVCNT = -1; /* Index for PTSAVE used for MULTNXT error */
     1733     2271
     1734     2272    2       IF PTSIZE = 0 THEN
     1735     2273    3       DO;
     1736     2274    3           PTEOF = %YES#;
     1737     2275    3           ALTRETURN;
     1738     2276    3           END;
     1739     2277
     1740     2278    2       CURRPT = NXTPT;
     1741     2279
     1742     2280    2       IF NO_EGRECS = 1 THEN
     1743     2281    3       DO;
     1744     2282    3           PTLSTR = %TRUE#;
     1745     2283    3           PTLIDBK= %TRUE#;
     1746     2284    3           RETURN;
     1747     2285    3           END;
     1748     2286
     1749     2287    2       RETURN;
     1750     2288
     1751     2289    2   END INIT_PT;
     1752     2290        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:241  
     1753     2291        /*
     1754     2292                      READ   PT   RECORD
     1755     2293           This procedure will altreturn if it is found that no real read
     1756     2294           is to take place. This is how the calling location will no
     1757     2295           wether or not to return to sort.
     1758     2296        */
     1759     2297    1   RDPTREC: PROC ALTRET;
     1760     2298
     1761     2299    2       PTEOF = %FALSE#;
     1762     2300    2       PTEOD = %FALSE#;
     1763     2301
     1764     2302    2       IF PTLIDBK = %YES# THEN
     1765     2303    3       DO;
     1766     2304    3           PTLIDBK = %NO#;
     1767     2305    3           PTEOD = %YES#;
     1768     2306    3           ALTRETURN;
     1769     2307    3           END;
     1770     2308
     1771     2309    2       CURRPT = NXTPT;
     1772     2310
     1773     2311    2       IF PTLSTR = %TRUE# THEN
     1774     2312    3       DO;
     1775     2313    3           PTEOF = %TRUE#;
     1776     2314    3           ALTRETURN;
     1777     2315    3           END;
     1778     2316
     1779     2317    2       PTRECNO = PTRECNO +1;
     1780     2318
     1781     2319    2       RETURN;
     1782     2320    2   END RDPTREC;
     1783     2321        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:242  
     1784     2322
     1785     2323        /*
     1786     2324           This routine writes to the errfile the errors found by the
     1787     2325           set validation routine. The type of error is identified by
     1788     2326           ERRCODE which is used by the error reporting routine for
     1789     2327           displaying the error. The error file may and will be sorted
     1790     2328           to get problems with common dbks together.
     1791     2329        */
     1792     2330    1   WRITE_VALERR: PROC(ERRCODE) ALTRET;
     1793     2331
     1794     2332    2   DCL ERRCODE SBIN WORD ALIGNED;
     1795     2333
     1796     2334    2       NO_ERRORS = NO_ERRORS+1;
     1797     2335    3       DO CASE(ERRCODE);
     1798     2336
     1799     2337    3       CASE(%GRBGNXT#,%GRBGOWN#);
     1800     2338    3           GRBGNXT.CODE = ERRCODE;
     1801     2339    3           GRBGNXT.BADDBK = CURRPT.DBK;
     1802     2340    3           GRBGNXT.SETYP = CURRPT.SETYP;
     1803     2341    3           GRBGNXT.RECTYP = CURRPT.RECTYP;
     1804     2342    3           GRBGNXT.NXTVAL = CURRPT.NEXT;
     1805     2343    3           GRBGNXT.OWNER = CURRPT.OWNER;
     1806     2344    3           IF ERRCODE = %GRBGOWN# THEN
     1807     2345    3               GRBGNXT.NXTVAL = CURRPT.OWNER;
     1808     2346    3           BUFLNSF = 17;
     1809     2347
     1810     2348    3       CASE(%MULTNXT#);
     1811     2349    4           DO I = 0 TO PTSVCNT;
     1812     2350    4               MULTNXT.CODE = ERRCODE;
     1813     2351    4               MULTNXT.BADNXT = PTSAVE.NEXT(I);
     1814     2352    4               MULTNXT.SETYP = PTSAVE.SETYP(I);
     1815     2353    4               MULTNXT.BADDBK = PTSAVE.DBK(I);
     1816     2354    4               MULTNXT.RECTYP = PTSAVE.RECTYP(I);
     1817     2355    4               MULTNXT.PTCNT = PTSVCNT;
     1818     2356    4               MULTNXT.OWNER = PTSAVE.OWNER(I);
     1819     2357    4               BUFLNSF = 18;
     1820     2358
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:243  
     1821     2359
     1822     2360         /*   Since the PA -> PA  record set pointers had 5000 subtracted
     1823     2361            off thier set values make the decision table think there
     1824     2362            are two separate sets (to avoid mult next ptr conflicts) -
     1825     2363            we will now restore the values. */
     1826     2364    4               IF ERROR.SETYP < 5000 THEN
     1827     2365    4                   ERROR.SETYP = ERROR.SETYP + 5000;
     1828     2366    4    /**/       DCBSF = ERRFILE.DCB#;
     1829     2367    4    /**/       DCBSF = ERRFILE.DCB#;
     1830     2368    4               BUFSF = VECTOR(ERROR_BUF);
     1831     2369    4               VFCSF = %NO#;
     1832     2370    4               FULLSF =%NO#;
     1833     2371    4               CALL SYS_FUNC_WRIT ALTRET(ALT_ERR);
     1834     2372    4               END;
     1835     2373    3           PTSVCNT = -1;
     1836     2374    3           RETURN;
     1837     2375
     1838     2376    3       CASE(%MMBRNXT#);
     1839     2377    3           MMBR.BADDBK = CURRPT.DBK;
     1840     2378    3           MMBR.SETYP = CURRPT.SETYP;
     1841     2379    3           MMBR.CODE = ERRCODE;
     1842     2380    3           MMBR.RECTYP = CURRPT.RECTYP;
     1843     2381    3           MMBR.OWNER = CURRPT.OWNER;
     1844     2382    3           BUFLNSF = 13;
     1845     2383
     1846     2384    3       CASE(%MMBRPRI#);
     1847     2385    3           MMBR.BADDBK = CURREG.DBK;
     1848     2386    3           MMBR.SETYP = CURREG.SETYP;
     1849     2387    3           MMBR.CODE = ERRCODE;
     1850     2388    3           MMBR.RECTYP = CURREG.RECTYP;
     1851     2389    3           BUFLNSF = 9;
     1852     2390
     1853     2391    3       CASE(%MISGNXT#);
     1854     2392    3           MISGNXT.BADDBK = CURREG.DBK;
     1855     2393    3           MISGNXT.SETYP = CURREG.SETYP;
     1856     2394    3           MISGNXT.CODE = ERRCODE;
     1857     2395    3           MISGNXT.RECTYP = CURREG.RECTYP;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:244  
     1858     2396    3           MISGNXT.PRI_VAL = CURREG.PRIOR;
     1859     2397    3           BUFLNSF = 13;
     1860     2398
     1861     2399    3       CASE(%DANGNXT#);
     1862     2400    3           DANGNXT.BADDBK = CURRPT.DBK;
     1863     2401    3           DANGNXT.SETYP = CURRPT.SETYP;
     1864     2402    3           DANGNXT.CODE = ERRCODE;
     1865     2403    3           DANGNXT.RECTYP = CURRPT.RECTYP;
     1866     2404    3           DANGNXT.BADPRI = CURREG.DBK;
     1867     2405    3           DANGNXT.PRI_RECTYP = CURREG.RECTYP;
     1868     2406    3           DANGNXT.OWNER = CURRPT.OWNER;
     1869     2407    3           BUFLNSF = 19;
     1870     2408
     1871     2409    3       CASE(%INCNOWN#);
     1872     2410    3           INCNOWN.DBK1 = CURREG.DBK;
     1873     2411    3           INCNOWN.SETYP = CURREG.SETYP;
     1874     2412    3           INCNOWN.CODE = ERRCODE;
     1875     2413    3           INCNOWN.RECTYP1= CURREG.RECTYP;
     1876     2414    3           INCNOWN.OWNDBK1= CURREG.OWNER;
     1877     2415    3           INCNOWN.DBK2 = CURRPT.DBK;
     1878     2416    3           INCNOWN.OWNDBK2= CURRPT.OWNER;
     1879     2417    3           INCNOWN.RECTYP2= CURRPT.RECTYP;
     1880     2418    3           BUFLNSF = 23;
     1881     2419
     1882     2420    3       CASE(%DBKPRIOR#);
     1883     2421    3           DBKPRIOR.BADDBK = CURREG.DBK;
     1884     2422    3           DBKPRIOR.SETYP = CURREG.SETYP;
     1885     2423    3           DBKPRIOR.CODE = ERRCODE;
     1886     2424    3           DBKPRIOR.RECTYP = CURREG.RECTYP;
     1887     2425    3           DBKPRIOR.EXP_PRI = CURRPT.DBK;
     1888     2426    3           DBKPRIOR.PRI_VAL = CURREG.PRIOR;
     1889     2427    3           BUFLNSF = 17;
     1890     2428
     1891     2429    3           END; /* CASE */
     1892     2430
     1893     2431         /*   Since the PA -> PA  record set pointers had 5000 subtracted
     1894     2432            off their set values make the decision table think there
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:245  
     1895     2433            are two separate sets (to avoid mult next ptr conflicts) -
     1896     2434            we will now restore the values. */
     1897     2435    2       IF ERROR.SETYP < 5000 THEN
     1898     2436    2           ERROR.SETYP = ERROR.SETYP + 5000;
     1899     2437
     1900     2438    2   /**/ DCBSF = ERRFILE.DCB#;
     1901     2439    2       BUFSF = VECTOR(ERROR_BUF);
     1902     2440    2       VFCSF = %NO#;
     1903     2441    2       FULLSF =%NO#;
     1904     2442    2       CALL SYS_FUNC_WRIT ALTRET(ALT_ERR);
     1905     2443
     1906     2444
     1907     2445    2       RETURN;
     1908     2446    2   ALT_ERR:
     1909     2447    2       ALTRETURN;
     1910     2448    2   END WRITE_VALERR;
     1911     2449
     1912     2450    1   ALT_VALDTE:
     1913     2451    1       ALTRETURN;
     1914     2452
     1915     2453    1   END ZIU$VALDTE;
     1916     2454        %EOD;

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:246  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_DBU_VALDTE.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$VALDTE.

   Procedure ZIU$VALDTE requires 854 words for executable code.
   Procedure ZIU$VALDTE requires 14 words of local(AUTO) storage.

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:247  

 Object Unit name= ZIU$VALDTE                                 File name= ZIU$VALSET.:ZIC0TOU
 UTS= SEP 05 '97 13:34:21.04 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    67    103  ZIU$VALDTE
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS      4      4  ZIU$VALDTE
    3   Proc  even  none   854   1526  ZIU$VALDTE
    4  RoData even  none    28     34  ZIU$VALDTE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        2  ZIU$VALDTE

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0     11  PTSAVE                             0     61  PTSVCNT
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:248  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 SYS_FUNC_CLOS
 yes     yes           Std       0 SYS_FUNC_WRIT
         yes           Std       4 ZIU$INTERACT
 yes     yes           Std       0 SYS_FUNC_OPEN
 yes     yes           Std       0 SYS_FUNC_READ
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     PTFILE                                BLKLSF                                KEYLSF
     KEYXSF                                DCBSF                                 ORGSF
     KEYSF                                 KEYVSF                                ACSSF
     NOTIMESF                              FUNSF                                 ASNSF
     TESTSF                                XTENSIZESF                            DISPSF
     WAITSF                                VFCSF                                 FULLSF
     BKUPSF                                BUFLNSF                               BUFSF
     SOURCESF                              DESTSF                                DATESF
     TIMESF                                UTSSF                                 DAYSF
     TSTAMPSF                              ENCRP_SEEDSF                          ERRCODESF
     MSGCODE                               INCL_ERR                              ERR_INSERT
     FIDSF_RD                              ACNT                                  EXISTSF
     SHARESF                               DCBNMSF                               KEYRSF
     NO_KEYSF                              REASGNSF                              CARRY_ATTRIBUTESF
     SUBMESSF                              SPKY_OPNSF                            POSSF
     ERRFLGSF                              MERGESF                               FSA_FLAG
     RELGSF                                UNUSED                                HELPCODE
     COUNTSF                               INDEXSF                               GAP
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:249  
     PSNSF                                 ACNTSF                                KEY_SHADWSF
     REC$                                  RB                                    RE
     IE                                    IB                                    CNT
     ICNT                                  RCNT                                  SCNT
     FIRST_SET                             RETCNT                                DMPCNT
     KCNT                                  ACNT_IDX                              I
     J                                     K                                     X
     STEPCC                                I_O_BUF$                              OUT_INDX
     I_O_SIZE                              REC_DATA_LN                           M$LO
     B$TCB$                                B$ROS$                                B$JIT$
     KEYFID                                I_O_KEY                               RESTART
     BREAK_FLAG                            ICHKSUM                               ITMCNT
     GAP1                                  BREAK_LOCAT                           RECLIST
     SETLIST                               SETINDX                               RECINDX
     HIGH_RECINDX                          EGREC$                                EGINDX
     NO_EGRECS                             NO_EGBUFS                             LAST_EGINDX
     CURREG                                CURRPT                                EGFILE
     ERRFILE                               NO_ERRORS                             ERROR_BUF
     ERRBUF$                               TYPE                                  MSTR$
     NXT_MSLOT                             MAX_MSLOT                             MSTR_INDX
     HASHTBL                               HASHINDX                              LOC_MODE
     AREA_KEY$                             NO_AREAS                              GLBL_PTR_SZ
     SET_XREF$                             NXT_SSLOT                             MAX_SSLOT
     REC_XREF$                             NXT_RSLOT                             MAX_RSLOT
     NO_RECS                               NO_SETS                               XREF_BUILT
     TYPESET                               TYPEREC                               ZI$DIR
     SCHEMA_ACTIVE                         RECORD_LIST                           SET_LIST
     RETAIN_LIST                           DUMP_FID                              ALTKY
     INIT_RG                               KEY_RNG                               ITEM_LIST

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:250  


     1267        1        /*M*  ZIU$VALDTE  IDSII  UTILITIES  SET VALIDATION OUTPUT PROC */
     1268        2        /*T***********************************************************/
     1269        3        /*T*                                                         */
     1270        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1271        5        /*T*                                                         */
     1272        6        /*T***********************************************************/
     1273        7        ZIU$VALDTE: PROC(PT,PT_SIZE) ALTRET;

      7  3 000000   000000 700200 xent  ZIU$VALDTE   TSX0  ! X66_AUTO_2
         3 000001   000016 000002                    ZERO    14,2

     1274        8
     1275        9    1   DCL 1 PT CHAR(PT_SIZE);
     1276       10    1   DCL PT_SIZE UBIN WORD;
     1277       11
     1278       12    1   DCL RETURN_CODE SBIN WORD STATIC INIT(0); /* Reentry code */
     1279       13    1   DCL LASTEG SBIN WORD STATIC INIT(0);
     1280       14    1   DCL LASTPT SBIN WORD STATIC INIT(0);
     1281       15    1   DCL PRINTPT SBIN WORD STATIC INIT(0);
     1282       16
     1283       17    1   DCL 1 PTFILE SYMREF,
     1284       18    1         2 * CHAR(5) UNAL,
     1285       19    1         2 DCB# UBIN HALF UNAL;
     1286       20
     1287       21    1   DCL 1 NXTPT STATIC CALIGNED,
     1288       22    1         2 NEXT UBIN WORD UNAL,
     1289       23    1         2 SETYP SBIN HALF UNAL,
     1290       24    1         2 RECTYPE SBIN HALF UNAL,
     1291       25    1         2 DBK UBIN WORD UNAL,
     1292       26    1         2 OWNER UBIN WORD UNAL;
     1293       27    1   DCL 1 PTREDF REDEF NXTPT CHAR(16) CALIGNED;
     1294       28    1   DCL PTSIZE UBIN WORD UNAL STATIC;
     1295       29
     1296       30    1   DCL 1 PTSAVE (0:9) STATIC SYMDEF ALIGNED,
     1297       31    1         2 NEXT UBIN WORD UNAL,
     1298       32    1         2 SETYP SBIN HALF UNAL,
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:251  
     1299       33    1         2 RECTYP SBIN HALF UNAL,
     1300       34    1         2 DBK UBIN WORD UNAL,
     1301       35    1         2 OWNER UBIN WORD UNAL;
     1302       36    1   DCL PTSVCNT SBIN WORD STATIC SYMDEF ALIGNED;
     1303       37
     1304       38    1   DCL CASE# SBIN WORD STATIC ALIGNED;
     1305       39    1   DCL PPTSTY SBIN WORD STATIC ALIGNED INIT(0);
     1306       40    1   DCL NEXTEG SBIN WORD STATIC ALIGNED;
     1307       41
     1308       42         %INCLUDE CP_6_SUBS;
     1309      582         %INCLUDE ZI_GLOBAL_DBUTIL;
     1310      760         %SYS_FUNC;
     1311      852         %MISC_DCLS;
     1312      905         %INCLUDE ZI_DBU_VALDTE;
     1313     1173         %VALID_LIST;
     1314     1313         %INCLUDE ZI_DBU_XREF;
     1315     1480         %XREF_TBLS;
     1316     1555         %INCLUDE ZI$DIR;
     1317     1712         %DIR;
     1318     1856
     1319     1857         %EQU PTINIT# = 1;
     1320     1858         %EQU NXTPT# = 2;
     1321     1859
     1322     1860        /*
     1323     1861                 DECISION TABLE FLAGS FOR PT AND EG RECORDS.
     1324     1862        */
     1325     1863    1   DCL EGRECNO SBIN WORD STATIC INIT(0); /* Curr eg recs processed */
     1326     1864    1   DCL PTRECNO SBIN WORD STATIC INIT(0); /* Curr pt recs processed */
     1327     1865    1   DCL EGLIDBK BIT(1) STATIC UNAL; /* EG is last in DBK */
     1328     1866    1   DCL PTLIDBK BIT(1) STATIC UNAL; /* PT is last in DBK */
     1329     1867    1   DCL EGLSTR BIT(1) STATIC UNAL; /* Next EG is last record */
     1330     1868    1   DCL PTLSTR BIT(1) STATIC UNAL; /* Next PT is last record */
     1331     1869    1   DCL EGEOD BIT(1) STATIC UNAL; /* Next DBK has diff value */
     1332     1870    1   DCL PTEOD BIT(1) STATIC UNAL; /* Next DBK has diff value */
     1333     1871    1   DCL EGEOF BIT(1) STATIC UNAL; /* End of file on EG */
     1334     1872    1   DCL PTEOF BIT(1) STATIC UNAL; /* End of file on PT */
     1335     1873
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:252  
     1336     1874    1   DCL INTERACT BIT(1) STATIC UNAL; /* Rec and Set interact */
     1337     1875    1   DCL OWNER BIT(1) STATIC UNAL;
     1338     1876
     1339     1877    1   DCL HASNXT BIT(1) STATIC UNAL;
     1340     1878    1   DCL MLTNXT BIT(1) STATIC UNAL;
     1341     1879
     1342     1880
     1343     1881    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
     1344     1882    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
     1345     1883    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
     1346     1884    1   DCL SYS_FUNC_READ ENTRY ALTRET;
     1347     1885    1   DCL ZIU$INTERACT ENTRY(4);
     1348     1886
     1349     1887
     1350     1888    1       PTREDF = PT;

   1888  3 000002   200004 470500                    LDP0    @PT_SIZE,,AUTO
         3 000003   000000 720100                    LXL0    0,,PR0
         3 000004   200003 471500                    LDP1    @PT,,AUTO
         3 000005   040000 100540                    MLR     fill='040'O
         3 000006   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         3 000007   000004 000020 0                  ADSC9   NXTPT                    cn=0,n=16

     1351     1889    1       PTSIZE = PT_SIZE;

   1889  3 000010   000000 235100                    LDA     0,,PR0
         3 000011   000010 755000 0                  STA     PTSIZE

     1352     1890    1   /**/ DCBSF = PTFILE.DCB#;

   1890  3 000012   000001 236000 xsym               LDQ     PTFILE+1
         3 000013   000011 772000                    QRL     9
         3 000014   777777 376007                    ANQ     -1,DL
         3 000015   000000 621006                    EAX1    0,QL
         3 000016   000000 741000 xsym               STX1    DCBSF

     1353     1891
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:253  
     1354     1892    1       IF PT_SIZE = 0 THEN

   1892  3 000017   000000 235100                    LDA     0,,PR0
         3 000020   000030 601000 3                  TNZ     s:1899

     1355     1893    2       DO;

     1356     1894    2           PTLSTR = %TRUE#; /* No more records after the current */

   1894  3 000021   400000 236003                    LDQ     -131072,DU
         3 000022   000072 756000 0                  STQ     PTLSTR

     1357     1895    2           PTLIDBK = %TRUE#; /* Current is the last in the DBK */

   1895  3 000023   000070 756000 0                  STQ     PTLIDBK

     1358     1896    2           CALL SYS_FUNC_CLOS;

   1896  3 000024   000000 631400 4                  EPPR1   0
         3 000025   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         3 000026   000000 011000                    NOP     0

     1359     1897    2           END;

   1897  3 000027   000051 710000 3                  TRA     s:1907

     1360     1898
     1361     1899    1       ELSE IF PRINTPT= 1 THEN

   1899  3 000030   000003 235000 0                  LDA     PRINTPT
         3 000031   000001 115007                    CMPA    1,DL
         3 000032   000051 601000 3                  TNZ     s:1907

     1362     1900    2           DO;

     1363     1901    2               BUFSF = VECTOR(PT);

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:254  
   1901  3 000033   000000 722100                    LXL2    0,,PR0
         3 000034   000000 635012                    EAA     0,X2
         3 000035   000002 771000                    ARL     2
         3 000036   000140 135007                    SBLA    96,DL
         3 000037   200003 236100                    LDQ     @PT,,AUTO
         3 000040   000000 755000 xsym               STA     BUFSF
         3 000041   000001 756000 xsym               STQ     BUFSF+1

     1364     1902    2               BUFLNSF = 16;

   1902  3 000042   000020 235007                    LDA     16,DL
         3 000043   000000 755000 xsym               STA     BUFLNSF

     1365     1903    2               VFCSF = %NO#;

   1903  3 000044   000000 450000 xsym               STZ     VFCSF

     1366     1904    2               KEYSF = %NO#;

   1904  3 000045   000000 450000 xsym               STZ     KEYSF

     1367     1905    2               CALL SYS_FUNC_WRIT ALTRET(ALT_VALDTE);

   1905  3 000046   000000 631400 4                  EPPR1   0
         3 000047   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000050   001525 702000 3                  TSX2    ALT_VALDTE

     1368     1906    2               END;

     1369     1907    1       IF RETURN_CODE = %NXTPT# THEN

   1907  3 000051   000000 235000 0                  LDA     RETURN_CODE
         3 000052   000002 115007                    CMPA    2,DL
         3 000053   000321 600000 3                  TZE     NXTPT

     1370     1908    1           GOTO NXTPT;
     1371     1909    1       ELSE
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:255  
     1372     1910    1           IF RETURN_CODE = %PTINIT# THEN

   1910  3 000054   000001 115007                    CMPA    1,DL
         3 000055   000070 600000 3                  TZE     PTINIT

     1373     1911    1               GOTO PTINIT;
     1374     1912        /*
     1375     1913                 Initialize  EGbuffer and PTbuffer with first record of each
     1376     1914                 and set the proper data flags for decision table.
     1377     1915        */
     1378     1916
     1379     1917    1       HASNXT = %FALSE#; /* CURR PT NEXT COUNTED FOR AGAINST EG */

   1917  3 000056   000101 450000 0                  STZ     HASNXT

     1380     1918    1       MLTNXT= %FALSE#;

   1918  3 000057   000102 450000 0                  STZ     MLTNXT

     1381     1919    1       CALL INIT_EG ALTRET(ALT_VALDTE);

   1919  3 000060   000644 701000 3                  TSX1    INIT_EG
         3 000061   001525 702000 3                  TSX2    ALT_VALDTE

     1382     1920    1       CALL INIT_PT;

   1920  3 000062   001044 701000 3                  TSX1    INIT_PT
         3 000063   000000 011000                    NOP     0

     1383     1921    1       NO_ERRORS = 0;

   1921  3 000064   000000 450000 xsym               STZ     NO_ERRORS

     1384     1922    1       RETURN_CODE = %PTINIT#;

   1922  3 000065   000001 235007                    LDA     1,DL
         3 000066   000000 755000 0                  STA     RETURN_CODE
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:256  

     1385     1923    1       RETURN;

   1923  3 000067   000000 702200 xent               TSX2  ! X66_ARET

     1386     1924    1   PTINIT:
     1387     1925    1       IF CURRPT.NEXT ~= NXTPT.NEXT THEN

   1925  3 000070   000000 236000 xsym  PTINIT       LDQ     CURRPT
         3 000071   000004 116000 0                  CMPQ    NXTPT
         3 000072   000075 600000 3                  TZE     s:1928

     1388     1926    1           PTLIDBK = %TRUE#;

   1926  3 000073   400000 236003                    LDQ     -131072,DU
         3 000074   000070 756000 0                  STQ     PTLIDBK

     1389     1927
     1390     1928    1       CALL CHECK_CASE(CASE#); /* Call decision table routine

   1928  3 000075   000001 236000 4                  LDQ     1
         3 000076   200007 756100                    STQ     @PT_SIZE+3,,AUTO
         3 000077   000347 701000 3                  TSX1    CHECK_CASE
         3 000100   000000 011000                    NOP     0

     1391     1929         to examine the records. */
     1392     1930    2       DO WHILE(CASE# ~= %PT_AND_EG_EOF);

   1930  3 000101   000062 235000 0                  LDA     CASE#
         3 000102   000001 115007                    CMPA    1,DL
         3 000103   000335 600000 3                  TZE     s:2030

     1393     1931
     1394     1932    2           IF BREAK_FLAG > 0 THEN

   1932  3 000104   000000 235000 xsym               LDA     BREAK_FLAG
         3 000105   000114 604400 3                  TMOZ    s:1936
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:257  

     1395     1933    2               UNWIND TO BREAK_LOCAT;

   1933  3 000106   000100 100600                    MLR   ! fill='000'O
         3 000107   000000 000010 xsym               ADSC9   BREAK_LOCAT              cn=0,n=8
         3 000110   200014 000010                    ADSC9   @ERRCODE+1,,AUTO         cn=0,n=8
         3 000111   200014 237300                    LDAQ  ! @ERRCODE+1,,AUTO
         3 000112   000000 700200 xent               TSX0  ! X66_AUNWIND
         3 000113   000000 000200                    ZERO    0,128

     1396     1934
     1397     1935
     1398     1936    3           DO CASE(CASE#);

   1936  3 000114   000062 236000 0                  LDQ     CASE#
         3 000115   000014 116007                    CMPQ    12,DL
         3 000116   000120 602006 3                  TNC     s:1936+4,QL
         3 000117   000265 710000 3                  TRA     s:1996
         3 000120   000265 710000 3                  TRA     s:1996
         3 000121   000265 710000 3                  TRA     s:1996
         3 000122   000134 710000 3                  TRA     s:1938
         3 000123   000134 710000 3                  TRA     s:1938
         3 000124   000146 710000 3                  TRA     s:1945
         3 000125   000146 710000 3                  TRA     s:1945
         3 000126   000231 710000 3                  TRA     s:1979
         3 000127   000176 710000 3                  TRA     s:1960
         3 000130   000231 710000 3                  TRA     s:1979
         3 000131   000223 710000 3                  TRA     s:1973
         3 000132   000176 710000 3                  TRA     s:1960
         3 000133   000242 710000 3                  TRA     s:1985

     1399     1937    3           CASE(%EOF_EG,%EGDBK_GT_PTNXT);

     1400     1938    3               CALL WRITE_VALERR(%GRBGNXT#);

   1938  3 000134   000003 236000 4                  LDQ     3
         3 000135   200013 756100                    STQ     @CASE#+4,,AUTO
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:258  
         3 000136   001117 701000 3                  TSX1    WRITE_VALERR
         3 000137   000000 011000                    NOP     0

     1401     1939    3               PPTSTY = 0;

   1939  3 000140   000063 450000 0                  STZ     PPTSTY

     1402     1940    3               RETURN_CODE = %NXTPT#;

   1940  3 000141   000002 235007                    LDA     2,DL
         3 000142   000000 755000 0                  STA     RETURN_CODE

     1403     1941    3               CALL RDPTREC ALTRET(REREAD);

   1941  3 000143   001074 701000 3                  TSX1    RDPTREC
         3 000144   000314 702000 3                  TSX2    REREAD

     1404     1942    3               RETURN;

   1942  3 000145   000000 702200 xent               TSX2  ! X66_ARET

     1405     1943
     1406     1944    3           CASE(%EOF_PT,%EGDBK_LT_PTNXT);

     1407     1945    3               IF MLTNXT THEN /* Multiple next pointers = true*/

   1945  3 000146   000102 234000 0                  SZN     MLTNXT
         3 000147   000155 605000 3                  TPL     s:1950

     1408     1946    4               DO;

     1409     1947    4                   CALL WRITE_VALERR(%MULTNXT#);

   1947  3 000150   000005 236000 4                  LDQ     5
         3 000151   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000152   001117 701000 3                  TSX1    WRITE_VALERR
         3 000153   000000 011000                    NOP     0
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:259  

     1410     1948    4                   MLTNXT = %FALSE#; /* Clear multnxt flag */

   1948  3 000154   000102 450000 0                  STZ     MLTNXT

     1411     1949    4                   END;

     1412     1950    3               PPTSTY = 0;

   1950  3 000155   000063 450000 0                  STZ     PPTSTY

     1413     1951    3               IF ~HASNXT THEN

   1951  3 000156   000101 236000 0                  LDQ     HASNXT
         3 000157   400000 376003                    ANQ     -131072,DU
         3 000160   400000 676003                    ERQ     -131072,DU
         3 000161   000166 600000 3                  TZE     s:1953

     1414     1952    3                   CALL WRITE_VALERR(%MISGNXT#) ALTRET(ALT_VALDTE);

   1952  3 000162   000007 236000 4                  LDQ     7
         3 000163   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000164   001117 701000 3                  TSX1    WRITE_VALERR
         3 000165   001525 702000 3                  TSX2    ALT_VALDTE

     1415     1953    3               CALL RDEGREC ALTRET(ALT_VALDTE);

   1953  3 000166   000735 701000 3                  TSX1    RDEGREC
         3 000167   001525 702000 3                  TSX2    ALT_VALDTE

     1416     1954    3               IF EGEOD = %TRUE# THEN /* Lst dbk in set on read */

   1954  3 000170   000073 234000 0                  SZN     EGEOD
         3 000171   000174 605000 3                  TPL     s:1956

     1417     1955    3                   CALL RDEGREC ALTRET(ALT_VALDTE);

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:260  
   1955  3 000172   000735 701000 3                  TSX1    RDEGREC
         3 000173   001525 702000 3                  TSX2    ALT_VALDTE

     1418     1956    3               HASNXT = %NO#;

   1956  3 000174   000101 450000 0                  STZ     HASNXT
         3 000175   000314 710000 3                  TRA     REREAD

     1419     1957
     1420     1958
     1421     1959    3           CASE(%CHNG_PT_DBK,%EGSET_LT_PTSET);

     1422     1960    3               IF MLTNXT THEN /* Multiple next pointers = true*/

   1960  3 000176   000102 234000 0                  SZN     MLTNXT
         3 000177   000205 605000 3                  TPL     s:1965

     1423     1961    4               DO;

     1424     1962    4                   CALL WRITE_VALERR(%MULTNXT#);

   1962  3 000200   000005 236000 4                  LDQ     5
         3 000201   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000202   001117 701000 3                  TSX1    WRITE_VALERR
         3 000203   000000 011000                    NOP     0

     1425     1963    4                   MLTNXT = %FALSE#; /* Clear multnxt flag */

   1963  3 000204   000102 450000 0                  STZ     MLTNXT

     1426     1964    4                   END;

     1427     1965    3               IF ~HASNXT THEN

   1965  3 000205   000101 236000 0                  LDQ     HASNXT
         3 000206   400000 376003                    ANQ     -131072,DU
         3 000207   400000 676003                    ERQ     -131072,DU
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:261  
         3 000210   000215 600000 3                  TZE     s:1969

     1428     1966    4               DO;

     1429     1967    4                   CALL WRITE_VALERR(%MISGNXT#) ALTRET(ALT_VALDTE);

   1967  3 000211   000007 236000 4                  LDQ     7
         3 000212   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000213   001117 701000 3                  TSX1    WRITE_VALERR
         3 000214   001525 702000 3                  TSX2    ALT_VALDTE

     1430     1968    4                   END;

     1431     1969    3               CALL RDEGREC ALTRET(ALT_VALDTE);

   1969  3 000215   000735 701000 3                  TSX1    RDEGREC
         3 000216   001525 702000 3                  TSX2    ALT_VALDTE

     1432     1970    3               HASNXT = EGEOD;

   1970  3 000217   000073 236000 0                  LDQ     EGEOD
         3 000220   400000 376003                    ANQ     -131072,DU
         3 000221   000101 756000 0                  STQ     HASNXT
         3 000222   000314 710000 3                  TRA     REREAD

     1433     1971
     1434     1972    3           CASE(%CHNG_EG_PT_DBK);

     1435     1973    3               PPTSTY = 0;

   1973  3 000223   000063 450000 0                  STZ     PPTSTY

     1436     1974    3               RETURN_CODE = %NXTPT#;

   1974  3 000224   000002 235007                    LDA     2,DL
         3 000225   000000 755000 0                  STA     RETURN_CODE

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:262  
     1437     1975    3               CALL RDPTREC ALTRET(NOREAD);

   1975  3 000226   001074 701000 3                  TSX1    RDPTREC
         3 000227   000326 702000 3                  TSX2    NOREAD

     1438     1976    3               RETURN;

   1976  3 000230   000000 702200 xent               TSX2  ! X66_ARET

     1439     1977
     1440     1978    3           CASE(%CHNG_EG_DBK,%EGSET_GT_PTSET);

     1441     1979    3               CALL WRITE_VALERR(%DANGNXT#) ALTRET(ALT_VALDTE);

   1979  3 000231   000011 236000 4                  LDQ     9
         3 000232   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000233   001117 701000 3                  TSX1    WRITE_VALERR
         3 000234   001525 702000 3                  TSX2    ALT_VALDTE

     1442     1980    3               RETURN_CODE = %NXTPT#;

   1980  3 000235   000002 235007                    LDA     2,DL
         3 000236   000000 755000 0                  STA     RETURN_CODE

     1443     1981    3               CALL RDPTREC ALTRET(NOREAD);

   1981  3 000237   001074 701000 3                  TSX1    RDPTREC
         3 000240   000326 702000 3                  TSX2    NOREAD

     1444     1982    3               RETURN;

   1982  3 000241   000000 702200 xent               TSX2  ! X66_ARET

     1445     1983
     1446     1984    3           CASE(%MULTNXT);

     1447     1985    3               MLTNXT = %TRUE#;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:263  

   1985  3 000242   400000 236003                    LDQ     -131072,DU
         3 000243   000102 756000 0                  STQ     MLTNXT

     1448     1986    3               HASNXT = %TRUE#;

   1986  3 000244   000101 756000 0                  STQ     HASNXT

     1449     1987    3               PTSVCNT = PTSVCNT+1;

   1987  3 000245   000061 054000 0                  AOS     PTSVCNT

     1450     1988    3               PTSAVE(PTSVCNT) = CURRPT; /* Save the current pt */

   1988  3 000246   000061 235000 0                  LDA     PTSVCNT
         3 000247   000004 735000                    ALS     4
         3 000250   000005 100400                    MLR     fill='000'O
         3 000251   000000 000020 xsym               ADSC9   CURRPT                   cn=0,n=16
         3 000252   000011 000020 0                  ADSC9   PTSAVE,A                 cn=0,n=16

     1451     1989    3               PPTSTY = CURRPT.SETYP;

   1989  3 000253   000001 235000 xsym               LDA     CURRPT+1
         3 000254   000022 731000                    ARS     18
         3 000255   000063 755000 0                  STA     PPTSTY

     1452     1990    3               CALL CHECK_PTRS ALTRET(ALT_VALDTE);

   1990  3 000256   000465 701000 3                  TSX1    CHECK_PTRS
         3 000257   001525 702000 3                  TSX2    ALT_VALDTE

     1453     1991    3               RETURN_CODE = %NXTPT#;

   1991  3 000260   000002 235007                    LDA     2,DL
         3 000261   000000 755000 0                  STA     RETURN_CODE

     1454     1992    3               CALL RDPTREC ALTRET(NOREAD);
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:264  

   1992  3 000262   001074 701000 3                  TSX1    RDPTREC
         3 000263   000326 702000 3                  TSX2    NOREAD

     1455     1993    3               RETURN;

   1993  3 000264   000000 702200 xent               TSX2  ! X66_ARET

     1456     1994
     1457     1995    3           CASE(ELSE);

     1458     1996    3               IF MLTNXT = %TRUE# THEN

   1996  3 000265   000102 234000 0                  SZN     MLTNXT
         3 000266   000274 605000 3                  TPL     s:2001

     1459     1997    4               DO;

     1460     1998    4                   CALL WRITE_VALERR(%MULTNXT#);

   1998  3 000267   000005 236000 4                  LDQ     5
         3 000270   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000271   001117 701000 3                  TSX1    WRITE_VALERR
         3 000272   000000 011000                    NOP     0

     1461     1999    4                   MLTNXT = %FALSE#;

   1999  3 000273   000102 450000 0                  STZ     MLTNXT

     1462     2000    4                   END;

     1463     2001    3               PTSVCNT = 0;

   2001  3 000274   000061 450000 0                  STZ     PTSVCNT

     1464     2002    3               HASNXT = %TRUE#;

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:265  
   2002  3 000275   400000 236003                    LDQ     -131072,DU
         3 000276   000101 756000 0                  STQ     HASNXT

     1465     2003    3               PTSAVE(0) = CURRPT;

   2003  3 000277   000000 100400                    MLR     fill='000'O
         3 000300   000000 000020 xsym               ADSC9   CURRPT                   cn=0,n=16
         3 000301   000011 000020 0                  ADSC9   PTSAVE                   cn=0,n=16

     1466     2004    3               PPTSTY = CURRPT.SETYP;

   2004  3 000302   000001 235000 xsym               LDA     CURRPT+1
         3 000303   000022 731000                    ARS     18
         3 000304   000063 755000 0                  STA     PPTSTY

     1467     2005    3               CALL CHECK_PTRS ALTRET(ALT_VALDTE);

   2005  3 000305   000465 701000 3                  TSX1    CHECK_PTRS
         3 000306   001525 702000 3                  TSX2    ALT_VALDTE

     1468     2006    3               RETURN_CODE = %NXTPT#;

   2006  3 000307   000002 235007                    LDA     2,DL
         3 000310   000000 755000 0                  STA     RETURN_CODE

     1469     2007    3               CALL RDPTREC ALTRET(NOREAD);

   2007  3 000311   001074 701000 3                  TSX1    RDPTREC
         3 000312   000326 702000 3                  TSX2    NOREAD

     1470     2008    3               RETURN;

   2008  3 000313   000000 702200 xent               TSX2  ! X66_ARET

     1471     2009
     1472     2010
     1473     2011    3               END; /* END CASE */
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:266  

     1474     2012
     1475     2013    2   REREAD:
     1476     2014    2           IF PTEOD = %YES# THEN

   2014  3 000314   000074 234000 0     REREAD       SZN     PTEOD
         3 000315   000321 605000 3                  TPL     NXTPT

     1477     2015    3           DO;

     1478     2016    3               CALL RDPTREC ALTRET(NOREAD);

   2016  3 000316   001074 701000 3                  TSX1    RDPTREC
         3 000317   000326 702000 3                  TSX2    NOREAD

     1479     2017    3               RETURN;

   2017  3 000320   000000 702200 xent               TSX2  ! X66_ARET

     1480     2018    3               END;
     1481     2019
     1482     2020    2   NXTPT:
     1483     2021    2           IF CURRPT.NEXT ~= NXTPT.NEXT THEN

   2021  3 000321   000000 236000 xsym  NXTPT        LDQ     CURRPT
         3 000322   000004 116000 0                  CMPQ    NXTPT
         3 000323   000326 600000 3                  TZE     NOREAD

     1484     2022    2               PTLIDBK = %TRUE#;

   2022  3 000324   400000 236003                    LDQ     -131072,DU
         3 000325   000070 756000 0                  STQ     PTLIDBK

     1485     2023    2   NOREAD:
     1486     2024         /* No reading of a PT rec was required */
     1487     2025
     1488     2026    2           CALL CHECK_CASE(CASE#);
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:267  

   2026  3 000326   000001 236000 4     NOREAD       LDQ     1
         3 000327   200007 756100                    STQ     @PT_SIZE+3,,AUTO
         3 000330   000347 701000 3                  TSX1    CHECK_CASE
         3 000331   000000 011000                    NOP     0

     1489     2027
     1490     2028    2           END; /* END DO WHILE */

   2028  3 000332   000062 235000 0                  LDA     CASE#
         3 000333   000001 115007                    CMPA    1,DL
         3 000334   000104 601000 3                  TNZ     s:1932

     1491     2029
     1492     2030    1       DCBSF = EGFILE.DCB#; /* CLOSE *EGFILE */

   2030  3 000335   000001 236000 xsym               LDQ     EGFILE+1
         3 000336   000011 772000                    QRL     9
         3 000337   777777 376007                    ANQ     -1,DL
         3 000340   000000 620006                    EAX0    0,QL
         3 000341   000000 740000 xsym               STX0    DCBSF

     1493     2031    1       CALL SYS_FUNC_CLOS;

   2031  3 000342   000000 631400 4                  EPPR1   0
         3 000343   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         3 000344   000000 011000                    NOP     0

     1494     2032    1       RETURN_CODE = 0;

   2032  3 000345   000000 450000 0                  STZ     RETURN_CODE

     1495     2033    1       RETURN;

   2033  3 000346   000000 702200 xent               TSX2  ! X66_ARET

     1496     2034         %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:268  
     1497     2035    1   CHECK_CASE: PROC(CASE#);

   2035  3 000347   200006 741300       CHECK_CASE   STX1  ! @PT_SIZE+2,,AUTO

     1498     2036    2   DCL CASE# SBIN;
     1499     2037
     1500     2038    2       IF EGEOF AND PTEOF THEN

   2038  3 000350   000075 234000 0                  SZN     EGEOF
         3 000351   000360 605000 3                  TPL     s:2041
         3 000352   000076 234000 0                  SZN     PTEOF
         3 000353   000360 605000 3                  TPL     s:2041

     1501     2039    2           CASE# = %PT_AND_EG_EOF;

   2039  3 000354   000001 235007                    LDA     1,DL
         3 000355   200007 470500                    LDP0    @CASE#,,AUTO
         3 000356   000000 755100                    STA     0,,PR0
         3 000357   000463 710000 3                  TRA     s:2074

     1502     2040    2       ELSE
     1503     2041    2           IF EGEOF THEN

   2041  3 000360   000075 234000 0                  SZN     EGEOF
         3 000361   000366 605000 3                  TPL     s:2044

     1504     2042    2               CASE# = %EOF_EG;

   2042  3 000362   000002 235007                    LDA     2,DL
         3 000363   200007 470500                    LDP0    @CASE#,,AUTO
         3 000364   000000 755100                    STA     0,,PR0
         3 000365   000463 710000 3                  TRA     s:2074

     1505     2043    2           ELSE
     1506     2044    2               IF PTEOF THEN

   2044  3 000366   000076 234000 0                  SZN     PTEOF
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:269  
         3 000367   000374 605000 3                  TPL     s:2047

     1507     2045    2                   CASE# = %EOF_PT;

   2045  3 000370   000004 235007                    LDA     4,DL
         3 000371   200007 470500                    LDP0    @CASE#,,AUTO
         3 000372   000000 755100                    STA     0,,PR0
         3 000373   000463 710000 3                  TRA     s:2074

     1508     2046    2               ELSE
     1509     2047    2                   IF CURREG.DBK > CURRPT.NEXT THEN

   2047  3 000374   000000 236000 xsym               LDQ     CURRPT
         3 000375   000000 116000 xsym               CMPQ    CURREG
         3 000376   000403 603000 3                  TRC     s:2050

     1510     2048    2                       CASE# = %EGDBK_GT_PTNXT;

   2048  3 000377   000003 235007                    LDA     3,DL
         3 000400   200007 470500                    LDP0    @CASE#,,AUTO
         3 000401   000000 755100                    STA     0,,PR0
         3 000402   000463 710000 3                  TRA     s:2074

     1511     2049    2                   ELSE
     1512     2050    2                       IF CURREG.DBK < CURRPT.NEXT THEN

   2050  3 000403   000411 602000 3                  TNC     s:2053
         3 000404   000411 600000 3                  TZE     s:2053

     1513     2051    2                           CASE# = %EGDBK_LT_PTNXT;

   2051  3 000405   000005 235007                    LDA     5,DL
         3 000406   200007 470500                    LDP0    @CASE#,,AUTO
         3 000407   000000 755100                    STA     0,,PR0
         3 000410   000463 710000 3                  TRA     s:2074

     1514     2052    2                       ELSE
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:270  
     1515     2053    2                           IF EGEOD = %TRUE# AND /* Last set in curr eg dbk */

   2053  3 000411   000073 234000 0                  SZN     EGEOD
         3 000412   000421 605000 3                  TPL     s:2057
         3 000413   000074 234000 0                  SZN     PTEOD
         3 000414   000421 605000 3                  TPL     s:2057

     1516     2054    2                              PTEOD = %TRUE# THEN /* Last set in curr pt dbk */
     1517     2055    2                               CASE# = %CHNG_EG_PT_DBK;

   2055  3 000415   000011 235007                    LDA     9,DL
         3 000416   200007 470500                    LDP0    @CASE#,,AUTO
         3 000417   000000 755100                    STA     0,,PR0
         3 000420   000463 710000 3                  TRA     s:2074

     1518     2056    2                           ELSE
     1519     2057    2                               IF EGEOD = %TRUE# THEN

   2057  3 000421   000073 234000 0                  SZN     EGEOD
         3 000422   000427 605000 3                  TPL     s:2060

     1520     2058    2                                   CASE# = %CHNG_EG_DBK;

   2058  3 000423   000006 235007                    LDA     6,DL
         3 000424   200007 470500                    LDP0    @CASE#,,AUTO
         3 000425   000000 755100                    STA     0,,PR0
         3 000426   000463 710000 3                  TRA     s:2074

     1521     2059    2                               ELSE
     1522     2060    2                                   IF PTEOD = %TRUE# THEN

   2060  3 000427   000074 234000 0                  SZN     PTEOD
         3 000430   000435 605000 3                  TPL     s:2063

     1523     2061    2                                       CASE# = %CHNG_PT_DBK;

   2061  3 000431   000012 235007                    LDA     10,DL
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:271  
         3 000432   200007 470500                    LDP0    @CASE#,,AUTO
         3 000433   000000 755100                    STA     0,,PR0
         3 000434   000463 710000 3                  TRA     s:2074

     1524     2062    2                                   ELSE
     1525     2063    2                                       IF CURREG.SETYP < CURRPT.SETYP THEN

   2063  3 000435   000001 220000 xsym               LDX0    CURREG+1
         3 000436   000001 100000 xsym               CMPX0   CURRPT+1
         3 000437   000444 605000 3                  TPL     s:2066

     1526     2064    2                                           CASE# = %EGSET_LT_PTSET;

   2064  3 000440   000007 235007                    LDA     7,DL
         3 000441   200007 470500                    LDP0    @CASE#,,AUTO
         3 000442   000000 755100                    STA     0,,PR0
         3 000443   000463 710000 3                  TRA     s:2074

     1527     2065    2                                       ELSE
     1528     2066    2                                           IF CURREG.SETYP > CURRPT.SETYP THEN

   2066  3 000444   000451 604400 3                  TMOZ    s:2069

     1529     2067    2                                               CASE# = %EGSET_GT_PTSET;

   2067  3 000445   000010 235007                    LDA     8,DL
         3 000446   200007 470500                    LDP0    @CASE#,,AUTO
         3 000447   000000 755100                    STA     0,,PR0
         3 000450   000463 710000 3                  TRA     s:2074

     1530     2068    2                                           ELSE
     1531     2069    2                                               IF CURRPT.SETYP = PPTSTY THEN

   2069  3 000451   000001 236000 xsym               LDQ     CURRPT+1
         3 000452   000022 732000                    QRS     18
         3 000453   000063 116000 0                  CMPQ    PPTSTY
         3 000454   000461 601000 3                  TNZ     s:2072
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:272  

     1532     2070    2                                                   CASE# = %MULTNXT;

   2070  3 000455   000013 235007                    LDA     11,DL
         3 000456   200007 470500                    LDP0    @CASE#,,AUTO
         3 000457   000000 755100                    STA     0,,PR0
         3 000460   000463 710000 3                  TRA     s:2074

     1533     2071    2                                               ELSE
     1534     2072    2                                                   CASE# = 0;

   2072  3 000461   200007 470500                    LDP0    @CASE#,,AUTO
         3 000462   000000 450100                    STZ     0,,PR0

     1535     2073
     1536     2074    2       RETURN;

   2074  3 000463   200006 221300                    LDX1  ! @PT_SIZE+2,,AUTO
         3 000464   000001 702211                    TSX2  ! 1,X1

     1537     2075
     1538     2076    2   END CHECK_CASE;
     1539     2077        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:273  
     1540     2078        /*
     1541     2079              Check pointers routine.
     1542     2080        */
     1543     2081    1   CHECK_PTRS: PROC ALTRET;

   2081  3 000465   200006 741300       CHECK_PTRS   STX1  ! @PT_SIZE+2,,AUTO

     1544     2082    2       HASNXT = %YES#;

   2082  3 000466   400000 236003                    LDQ     -131072,DU
         3 000467   000101 756000 0                  STQ     HASNXT

     1545     2083    2       CALL ZIU$INTERACT(CURREG.RECTYP,CURREG.SETYP,INTERACT,OWNER);

   2083  3 000470   000013 630400 4                  EPPR0   11
         3 000471   000012 631400 4                  EPPR1   10
         3 000472   000000 701000 xent               TSX1    ZIU$INTERACT
         3 000473   000000 011000                    NOP     0

     1546     2084    2       IF CASE# ~= %MULTNXT THEN

   2084  3 000474   000062 235000 0                  LDA     CASE#
         3 000475   000013 115007                    CMPA    11,DL
         3 000476   000503 600000 3                  TZE     s:2089

     1547     2085    3       DO;

     1548     2086    3           CALL CHKPRI ALTRET(ALT_PTRS);

   2086  3 000477   000535 701000 3                  TSX1    CHKPRI
         3 000500   000507 702000 3                  TSX2    ALT_PTRS

     1549     2087    3           CALL CHKOWN ALTRET(ALT_PTRS);

   2087  3 000501   000562 701000 3                  TSX1    CHKOWN
         3 000502   000507 702000 3                  TSX2    ALT_PTRS

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:274  
     1550     2088    3           END;

     1551     2089    2       CALL CHKNXT ALTRET(ALT_PTRS);

   2089  3 000503   000511 701000 3                  TSX1    CHKNXT
         3 000504   000507 702000 3                  TSX2    ALT_PTRS

     1552     2090    2       RETURN;

   2090  3 000505   200006 221300                    LDX1  ! @PT_SIZE+2,,AUTO
         3 000506   000001 702211                    TSX2  ! 1,X1

     1553     2091
     1554     2092    2   ALT_PTRS:
     1555     2093    2       ALTRETURN;

   2093  3 000507   200006 221300       ALT_PTRS     LDX1  ! @PT_SIZE+2,,AUTO
         3 000510   000000 702211                    TSX2  ! 0,X1

     1556     2094    2   END CHECK_PTRS;
     1557     2095
     1558     2096
     1559     2097    1   CHKNXT: PROC ALTRET;

   2097  3 000511   200010 741300       CHKNXT       STX1  ! @CASE#+1,,AUTO

     1560     2098        /*
     1561     2099           Does record point to itself? if so it better be the set owner.
     1562     2100        */
     1563     2101    2       IF CURREG.DBK ~= CURRPT.DBK THEN

   2101  3 000512   000000 236000 xsym               LDQ     CURREG
         3 000513   000002 116000 xsym               CMPQ    CURRPT+2
         3 000514   000516 600000 3                  TZE     s:2103

     1564     2102    2           RETURN;

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:275  
   2102  3 000515   000001 702211                    TSX2  ! 1,X1

     1565     2103    2       IF OWNER = %YES# THEN

   2103  3 000516   000100 234000 0                  SZN     OWNER
         3 000517   000521 605000 3                  TPL     s:2105

     1566     2104    2           RETURN;

   2104  3 000520   000001 702211                    TSX2  ! 1,X1

     1567     2105    2       CALL WRITE_VALERR(%MMBRNXT#) ALTRET(ALTNXT);

   2105  3 000521   000020 236000 4                  LDQ     16
         3 000522   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000523   001117 701000 3                  TSX1    WRITE_VALERR
         3 000524   000527 702000 3                  TSX2    ALTNXT

     1568     2106    2       RETURN;

   2106  3 000525   200010 221300                    LDX1  ! @CASE#+1,,AUTO
         3 000526   000001 702211                    TSX2  ! 1,X1

     1569     2107    2   ALTNXT:
     1570     2108    2       LASTEG = NO_EGRECS;

   2108  3 000527   000000 235000 xsym  ALTNXT       LDA     NO_EGRECS
         3 000530   000001 755000 0                  STA     LASTEG

     1571     2109    2       LASTPT = PTRECNO;

   2109  3 000531   000066 236000 0                  LDQ     PTRECNO
         3 000532   000002 756000 0                  STQ     LASTPT

     1572     2110    2       ALTRETURN;

   2110  3 000533   200010 221300                    LDX1  ! @CASE#+1,,AUTO
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:276  
         3 000534   000000 702211                    TSX2  ! 0,X1

     1573     2111    2   END CHKNXT;
     1574     2112
     1575     2113
     1576     2114    1   CHKPRI: PROC ALTRET;

   2114  3 000535   200010 741300       CHKPRI       STX1  ! @CASE#+1,,AUTO

     1577     2115
     1578     2116    2       IF CURREG.PRIOR = CURREG.DBK THEN

   2116  3 000536   000002 236000 xsym               LDQ     CURREG+2
         3 000537   000000 116000 xsym               CMPQ    CURREG
         3 000540   000547 601000 3                  TNZ     s:2122

     1579     2117    3       DO;

     1580     2118    3           IF OWNER = %NO# THEN

   2118  3 000541   000100 234000 0                  SZN     OWNER
         3 000542   000547 604000 3                  TMI     s:2122

     1581     2119    3               CALL WRITE_VALERR(%MMBRPRI#) ALTRET(ALTPRI);

   2119  3 000543   000022 236000 4                  LDQ     18
         3 000544   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000545   001117 701000 3                  TSX1    WRITE_VALERR
         3 000546   000560 702000 3                  TSX2    ALTPRI

     1582     2120    3           END;

     1583     2121
     1584     2122    2       IF CURREG.PRIOR ~= CURRPT.DBK THEN

   2122  3 000547   000002 236000 xsym               LDQ     CURREG+2
         3 000550   000002 116000 xsym               CMPQ    CURRPT+2
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:277  
         3 000551   000556 600000 3                  TZE     s:2124

     1585     2123    2           CALL WRITE_VALERR(%DBKPRIOR#);

   2123  3 000552   000024 236000 4                  LDQ     20
         3 000553   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000554   001117 701000 3                  TSX1    WRITE_VALERR
         3 000555   000000 011000                    NOP     0

     1586     2124    2       RETURN;

   2124  3 000556   200010 221300                    LDX1  ! @CASE#+1,,AUTO
         3 000557   000001 702211                    TSX2  ! 1,X1

     1587     2125    2   ALTPRI:
     1588     2126    2       ALTRETURN;

   2126  3 000560   200010 221300       ALTPRI       LDX1  ! @CASE#+1,,AUTO
         3 000561   000000 702211                    TSX2  ! 0,X1

     1589     2127    2   END CHKPRI;
     1590     2128
     1591     2129
     1592     2130    1   CHKOWN: PROC ALTRET;

   2130  3 000562   200010 741300       CHKOWN       STX1  ! @CASE#+1,,AUTO

     1593     2131
     1594     2132    2       IF CURREG.SETYP < 5000 OR CURRPT.SETYP < 5000 THEN

   2132  3 000563   000001 220000 xsym               LDX0    CURREG+1
         3 000564   011610 100003                    CMPX0   5000,DU
         3 000565   000571 604000 3                  TMI     s:2133
         3 000566   000001 222000 xsym               LDX2    CURRPT+1
         3 000567   011610 102003                    CMPX2   5000,DU
         3 000570   000572 605000 3                  TPL     s:2135

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:278  
     1595     2133    2           RETURN; /*  Special PA -> PA pointers (no owner ptrs )*/

   2133  3 000571   000001 702211                    TSX2  ! 1,X1

     1596     2134
     1597     2135    2       IF MSTR_REF.NAME(CURREG.SETYP-5000+NO_RECS) = '*CALC' THEN

   2135  3 000572   000001 236000 xsym               LDQ     CURREG+1
         3 000573   000022 732000                    QRS     18
         3 000574   000000 036000 xsym               ADLQ    NO_RECS
         3 000575   000050 402007                    MPY     40,DL
         3 000576   000000 470400 xsym               LDP0    MSTR$
         3 000577   600000 136007                    SBLQ    -65536,DL
         3 000600   040000 106506                    CMPC    fill='040'O
         3 000601   076261 400036                    ADSC9   -847,Q,PR0               cn=2,n=30
         3 000602   000000 000005 2                  ADSC9   0                        cn=0,n=5
         3 000603   000605 601000 3                  TNZ     s:2138

     1598     2136    2           RETURN; /* Calc recs have no owners */

   2136  3 000604   000001 702211                    TSX2  ! 1,X1

     1599     2137
     1600     2138    2       IF CURREG.OWNER ~= CURRPT.OWNER AND

   2138  3 000605   000003 236000 xsym               LDQ     CURREG+3
         3 000606   000003 116000 xsym               CMPQ    CURRPT+3
         3 000607   000630 600000 3                  TZE     s:2142
         3 000610   000000 116003                    CMPQ    0,DU
         3 000611   000630 600000 3                  TZE     s:2142
         3 000612   000003 235000 xsym               LDA     CURRPT+3
         3 000613   000630 600000 3                  TZE     s:2142

     1601     2139    2          CURREG.OWNER ~= 0 AND CURRPT.OWNER ~= 0 THEN
     1602     2140    2           IF MSTR_REF.SET.PATYPE(CURREG.SETYP-5000+NO_RECS) ~= '1'B THEN

   2140  3 000614   000001 236000 xsym               LDQ     CURREG+1
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:279  
         3 000615   000022 732000                    QRS     18
         3 000616   000000 036000 xsym               ADLQ    NO_RECS
         3 000617   000012 402007                    MPY     10,DL
         3 000620   640000 623006                    EAX3    -49152,QL
         3 000621   076271 236113                    LDQ     -839,X3,PR0
         3 000622   000002 316003                    CANQ    2,DU
         3 000623   000630 601000 3                  TNZ     s:2142

     1603     2141    2               CALL WRITE_VALERR(%INCNOWN#) ALTRET(ALTOWN);

   2141  3 000624   000026 236000 4                  LDQ     22
         3 000625   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000626   001117 701000 3                  TSX1    WRITE_VALERR
         3 000627   000642 702000 3                  TSX2    ALTOWN

     1604     2142    2       IF CURRPT.OWNER = 0 AND CURRPT.NEXT ~= 0 THEN

   2142  3 000630   000003 235000 xsym               LDA     CURRPT+3
         3 000631   000640 601000 3                  TNZ     s:2145
         3 000632   000000 236000 xsym               LDQ     CURRPT
         3 000633   000640 600000 3                  TZE     s:2145

     1605     2143    2           CALL WRITE_VALERR(%GRBGOWN#) ALTRET(ALTOWN);

   2143  3 000634   000030 236000 4                  LDQ     24
         3 000635   200013 756100                    STQ     @CASE#+4,,AUTO
         3 000636   001117 701000 3                  TSX1    WRITE_VALERR
         3 000637   000642 702000 3                  TSX2    ALTOWN

     1606     2144
     1607     2145    2       RETURN;

   2145  3 000640   200010 221300                    LDX1  ! @CASE#+1,,AUTO
         3 000641   000001 702211                    TSX2  ! 1,X1

     1608     2146    2   ALTOWN:
     1609     2147    2       ALTRETURN;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:280  

   2147  3 000642   200010 221300       ALTOWN       LDX1  ! @CASE#+1,,AUTO
         3 000643   000000 702211                    TSX2  ! 0,X1

     1610     2148    2   END CHKOWN;
     1611     2149        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:281  
     1612     2150
     1613     2151    1   INIT_EG: PROC ALTRET;

   2151  3 000644   200006 741300       INIT_EG      STX1  ! @PT_SIZE+2,,AUTO

     1614     2152
     1615     2153    2       EGRECNO = 0;

   2153  3 000645   000065 450000 0                  STZ     EGRECNO

     1616     2154    2       EGLIDBK = %FALSE#;

   2154  3 000646   000067 450000 0                  STZ     EGLIDBK

     1617     2155    2       EGLSTR = %FALSE#;

   2155  3 000647   000071 450000 0                  STZ     EGLSTR

     1618     2156    2       EGEOD = %FALSE#;

   2156  3 000650   000073 450000 0                  STZ     EGEOD

     1619     2157    2       EGEOF = %FALSE#;

   2157  3 000651   000075 450000 0                  STZ     EGEOF

     1620     2158
     1621     2159    2       IF NO_EGRECS = 0 THEN

   2159  3 000652   000000 235000 xsym               LDA     NO_EGRECS
         3 000653   000657 601000 3                  TNZ     s:2166

     1622     2160    3       DO;

     1623     2161    3           EGEOF = %YES#;

   2161  3 000654   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:282  
         3 000655   000075 756000 0                  STQ     EGEOF

     1624     2162    3           RETURN;

   2162  3 000656   000001 702211                    TSX2  ! 1,X1

     1625     2163    3           END;
     1626     2164
     1627     2165         /*       Close and reopen EGFILE for input. */
     1628     2166    2   /**/ DCBSF = EGFILE.DCB#;

   2166  3 000657   000001 236000 xsym               LDQ     EGFILE+1
         3 000660   000011 772000                    QRL     9
         3 000661   777777 376007                    ANQ     -1,DL
         3 000662   000000 620006                    EAX0    0,QL
         3 000663   000000 740000 xsym               STX0    DCBSF

     1629     2167    2       CALL SYS_FUNC_CLOS;

   2167  3 000664   000000 631400 4                  EPPR1   0
         3 000665   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         3 000666   000000 011000                    NOP     0

     1630     2168    2       FUNSF = %IN#;

   2168  3 000667   000002 235007                    LDA     2,DL
         3 000670   000000 755000 xsym               STA     FUNSF

     1631     2169    2       ACSSF = %SEQUEN#;

   2169  3 000671   000001 236007                    LDQ     1,DL
         3 000672   000000 756000 xsym               STQ     ACSSF

     1632     2170    2       ORGSF = %CONSEC#;

   2170  3 000673   000000 756000 xsym               STQ     ORGSF

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:283  
     1633     2171    2       ASNSF = %FILE#;

   2171  3 000674   000000 756000 xsym               STQ     ASNSF

     1634     2172    2       FIDSF = '*EGFILE';

   2172  3 000675   040000 100400                    MLR     fill='040'O
         3 000676   000002 000007 2                  ADSC9   2                        cn=0,n=7
         3 000677   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

     1635     2173    2       CALL SYS_FUNC_OPEN ALTRET(ALT_EGINIT);

   2173  3 000700   000000 631400 4                  EPPR1   0
         3 000701   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         3 000702   000733 702000 3                  TSX2    ALT_EGINIT

     1636     2174
     1637     2175
     1638     2176    2       CALL RDEGBUF ALTRET(ALT_EGINIT);

   2176  3 000703   001017 701000 3                  TSX1    RDEGBUF
         3 000704   000733 702000 3                  TSX2    ALT_EGINIT

     1639     2177
     1640     2178    2       CURREG = EGREC(0);

   2178  3 000705   000000 470400 xsym               LDP0    EGREC$
         3 000706   000000 100500                    MLR     fill='000'O
         3 000707   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16
         3 000710   000000 000020 xsym               ADSC9   CURREG                   cn=0,n=16

     1641     2179    2       NEXTEG = 1;

   2179  3 000711   000001 235007                    LDA     1,DL
         3 000712   000064 755000 0                  STA     NEXTEG

     1642     2180
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:284  
     1643     2181    2       IF NO_EGRECS = 1 THEN

   2181  3 000713   000000 236000 xsym               LDQ     NO_EGRECS
         3 000714   000001 116007                    CMPQ    1,DL
         3 000715   000723 601000 3                  TNZ     s:2188

     1644     2182    3       DO;

     1645     2183    3           EGLSTR = %TRUE#;

   2183  3 000716   400000 236003                    LDQ     -131072,DU
         3 000717   000071 756000 0                  STQ     EGLSTR

     1646     2184    3           EGLIDBK= %TRUE#;

   2184  3 000720   000067 756000 0                  STQ     EGLIDBK

     1647     2185    3           RETURN;

   2185  3 000721   200006 221300                    LDX1  ! @PT_SIZE+2,,AUTO
         3 000722   000001 702211                    TSX2  ! 1,X1

     1648     2186    3           END;
     1649     2187
     1650     2188    2       IF CURREG.DBK ~= EGREC.DBK(NEXTEG) THEN

   2188  3 000723   000002 735000                    ALS     2
         3 000724   000000 236000 xsym               LDQ     CURREG
         3 000725   000000 116105                    CMPQ    0,AL,PR0
         3 000726   000731 600000 3                  TZE     s:2191

     1651     2189    2           EGLIDBK = %TRUE#;

   2189  3 000727   400000 236003                    LDQ     -131072,DU
         3 000730   000067 756000 0                  STQ     EGLIDBK

     1652     2190
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:285  
     1653     2191    2       RETURN;

   2191  3 000731   200006 221300                    LDX1  ! @PT_SIZE+2,,AUTO
         3 000732   000001 702211                    TSX2  ! 1,X1

     1654     2192
     1655     2193    2   ALT_EGINIT:
     1656     2194    2       ALTRETURN;

   2194  3 000733   200006 221300       ALT_EGINIT   LDX1  ! @PT_SIZE+2,,AUTO
         3 000734   000000 702211                    TSX2  ! 0,X1

     1657     2195    2   END INIT_EG;
     1658     2196        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:286  
     1659     2197        /*
     1660     2198                     Read EG file and set flags
     1661     2199        */
     1662     2200    1   RDEGREC: PROC ALTRET;

   2200  3 000735   200006 741300       RDEGREC      STX1  ! @PT_SIZE+2,,AUTO

     1663     2201
     1664     2202    2       EGEOD = %NO#;

   2202  3 000736   000073 450000 0                  STZ     EGEOD

     1665     2203    2       EGEOF = %NO#;

   2203  3 000737   000075 450000 0                  STZ     EGEOF

     1666     2204
     1667     2205    2       IF EGLIDBK = %TRUE# THEN

   2205  3 000740   000067 234000 0                  SZN     EGLIDBK
         3 000741   000746 605000 3                  TPL     s:2212

     1668     2206    3       DO;

     1669     2207    3           EGLIDBK = %FALSE#;

   2207  3 000742   000067 450000 0                  STZ     EGLIDBK

     1670     2208    3           EGEOD = %TRUE#;

   2208  3 000743   400000 236003                    LDQ     -131072,DU
         3 000744   000073 756000 0                  STQ     EGEOD

     1671     2209    3           RETURN;

   2209  3 000745   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:287  
     1672     2210    3           END;
     1673     2211
     1674     2212    2       CURREG = EGREC(NEXTEG);

   2212  3 000746   000064 235000 0                  LDA     NEXTEG
         3 000747   000004 735000                    ALS     4
         3 000750   000000 470400 xsym               LDP0    EGREC$
         3 000751   000000 100505                    MLR     fill='000'O
         3 000752   000000 000020                    ADSC9   0,A,PR0                  cn=0,n=16
         3 000753   000000 000020 xsym               ADSC9   CURREG                   cn=0,n=16

     1675     2213    2       EGRECNO = EGRECNO +1;

   2213  3 000754   000065 054000 0                  AOS     EGRECNO

     1676     2214    2       NEXTEG = NEXTEG +1;

   2214  3 000755   000064 054000 0                  AOS     NEXTEG

     1677     2215
     1678     2216    2       IF EGLSTR = %TRUE# THEN /* This is the last record in EG file */

   2216  3 000756   000071 234000 0                  SZN     EGLSTR
         3 000757   000763 605000 3                  TPL     s:2222

     1679     2217    3       DO;

     1680     2218    3           EGEOF = %TRUE#;

   2218  3 000760   400000 236003                    LDQ     -131072,DU
         3 000761   000075 756000 0                  STQ     EGEOF

     1681     2219    3           RETURN;

   2219  3 000762   000001 702211                    TSX2  ! 1,X1

     1682     2220    3           END;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:288  
     1683     2221
     1684     2222    2       IF NEXTEG > 4095 AND EGRECNO < NO_EGRECS THEN

   2222  3 000763   000064 235000 0                  LDA     NEXTEG
         3 000764   007777 115007                    CMPA    4095,DL
         3 000765   000774 604400 3                  TMOZ    s:2228
         3 000766   000065 236000 0                  LDQ     EGRECNO
         3 000767   000000 116000 xsym               CMPQ    NO_EGRECS
         3 000770   000774 605000 3                  TPL     s:2228

     1685     2223    3       DO;

     1686     2224    3           CALL RDEGBUF ALTRET(ALT_RDEG);

   2224  3 000771   001017 701000 3                  TSX1    RDEGBUF
         3 000772   001015 702000 3                  TSX2    ALT_RDEG

     1687     2225    3           NEXTEG = 0;

   2225  3 000773   000064 450000 0                  STZ     NEXTEG

     1688     2226    3           END;

     1689     2227
     1690     2228    2       IF EGRECNO+1 = NO_EGRECS THEN

   2228  3 000774   000065 236000 0                  LDQ     EGRECNO
         3 000775   000001 036007                    ADLQ    1,DL
         3 000776   000000 116000 xsym               CMPQ    NO_EGRECS
         3 000777   001003 601000 3                  TNZ     s:2234

     1691     2229    3       DO;

     1692     2230    3           EGLSTR = %TRUE#;

   2230  3 001000   400000 236003                    LDQ     -131072,DU
         3 001001   000071 756000 0                  STQ     EGLSTR
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:289  

     1693     2231    3           EGLIDBK = %TRUE#;

   2231  3 001002   000067 756000 0                  STQ     EGLIDBK

     1694     2232    3           END;

     1695     2233
     1696     2234    2       IF CURREG.DBK ~= EGREC.DBK(NEXTEG) THEN

   2234  3 001003   000064 235000 0                  LDA     NEXTEG
         3 001004   000002 735000                    ALS     2
         3 001005   000000 470400 xsym               LDP0    EGREC$
         3 001006   000000 236000 xsym               LDQ     CURREG
         3 001007   000000 116105                    CMPQ    0,AL,PR0
         3 001010   001013 600000 3                  TZE     s:2237

     1697     2235    2           EGLIDBK = %TRUE#;

   2235  3 001011   400000 236003                    LDQ     -131072,DU
         3 001012   000067 756000 0                  STQ     EGLIDBK

     1698     2236
     1699     2237    2       RETURN;

   2237  3 001013   200006 221300                    LDX1  ! @PT_SIZE+2,,AUTO
         3 001014   000001 702211                    TSX2  ! 1,X1

     1700     2238
     1701     2239    2   ALT_RDEG:
     1702     2240    2       ALTRETURN;

   2240  3 001015   200006 221300       ALT_RDEG     LDX1  ! @PT_SIZE+2,,AUTO
         3 001016   000000 702211                    TSX2  ! 0,X1

     1703     2241    2   END RDEGREC;
     1704     2242        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:290  
     1705     2243        /*
     1706     2244                     PHYSICAL READ OF EG FILE
     1707     2245        */
     1708     2246    1   RDEGBUF: PROC ALTRET;

   2246  3 001017   200010 741300       RDEGBUF      STX1  ! @CASE#+1,,AUTO

     1709     2247
     1710     2248    2   /**/ DCBSF = EGFILE.DCB#;

   2248  3 001020   000001 236000 xsym               LDQ     EGFILE+1
         3 001021   000011 772000                    QRL     9
         3 001022   777777 376007                    ANQ     -1,DL
         3 001023   000000 620006                    EAX0    0,QL
         3 001024   000000 740000 xsym               STX0    DCBSF

     1711     2249    2       BUFSF = VECTOR(EGREC);

   2249  3 001025   000031 235000 4                  LDA     25
         3 001026   000000 236000 xsym               LDQ     EGREC$
         3 001027   000000 755000 xsym               STA     BUFSF
         3 001030   000001 756000 xsym               STQ     BUFSF+1

     1712     2250    2       BUFLNSF = 16*4096;

   2250  3 001031   200000 235007                    LDA     65536,DL
         3 001032   000000 755000 xsym               STA     BUFLNSF

     1713     2251    2       KEYSF = %NO#;

   2251  3 001033   000000 450000 xsym               STZ     KEYSF

     1714     2252    2       FULLSF = %NO#;

   2252  3 001034   000000 450000 xsym               STZ     FULLSF

     1715     2253    2       CALL SYS_FUNC_READ ALTRET(ALT_READ);
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:291  

   2253  3 001035   000000 631400 4                  EPPR1   0
         3 001036   000000 701000 xent               TSX1    SYS_FUNC_READ
         3 001037   001042 702000 3                  TSX2    ALT_READ

     1716     2254    2       RETURN;

   2254  3 001040   200010 221300                    LDX1  ! @CASE#+1,,AUTO
         3 001041   000001 702211                    TSX2  ! 1,X1

     1717     2255    2   ALT_READ:
     1718     2256    2       ALTRETURN;

   2256  3 001042   200010 221300       ALT_READ     LDX1  ! @CASE#+1,,AUTO
         3 001043   000000 702211                    TSX2  ! 0,X1

     1719     2257    2   END RDEGBUF;
     1720     2258        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:292  
     1721     2259
     1722     2260        /*
     1723     2261                         P T    I N I T
     1724     2262        */
     1725     2263    1   INIT_PT: PROC ALTRET;

   2263  3 001044   200006 741300       INIT_PT      STX1  ! @PT_SIZE+2,,AUTO

     1726     2264
     1727     2265    2       PTLIDBK = %NO#;

   2265  3 001045   000070 450000 0                  STZ     PTLIDBK

     1728     2266    2       PTLSTR = %NO#;

   2266  3 001046   000072 450000 0                  STZ     PTLSTR

     1729     2267    2       PTEOD = %FALSE#;

   2267  3 001047   000074 450000 0                  STZ     PTEOD

     1730     2268    2       PTEOF = %FALSE#;

   2268  3 001050   000076 450000 0                  STZ     PTEOF

     1731     2269    2       PTRECNO = 0;

   2269  3 001051   000066 450000 0                  STZ     PTRECNO

     1732     2270    2       PTSVCNT = -1; /* Index for PTSAVE used for MULTNXT error */

   2270  3 001052   000001 335007                    LCA     1,DL
         3 001053   000061 755000 0                  STA     PTSVCNT

     1733     2271
     1734     2272    2       IF PTSIZE = 0 THEN

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:293  
   2272  3 001054   000010 236000 0                  LDQ     PTSIZE
         3 001055   001061 601000 3                  TNZ     s:2278

     1735     2273    3       DO;

     1736     2274    3           PTEOF = %YES#;

   2274  3 001056   400000 236003                    LDQ     -131072,DU
         3 001057   000076 756000 0                  STQ     PTEOF

     1737     2275    3           ALTRETURN;

   2275  3 001060   000000 702211                    TSX2  ! 0,X1

     1738     2276    3           END;
     1739     2277
     1740     2278    2       CURRPT = NXTPT;

   2278  3 001061   000000 100400                    MLR     fill='000'O
         3 001062   000004 000020 0                  ADSC9   NXTPT                    cn=0,n=16
         3 001063   000000 000020 xsym               ADSC9   CURRPT                   cn=0,n=16

     1741     2279
     1742     2280    2       IF NO_EGRECS = 1 THEN

   2280  3 001064   000000 235000 xsym               LDA     NO_EGRECS
         3 001065   000001 115007                    CMPA    1,DL
         3 001066   001073 601000 3                  TNZ     s:2287

     1743     2281    3       DO;

     1744     2282    3           PTLSTR = %TRUE#;

   2282  3 001067   400000 236003                    LDQ     -131072,DU
         3 001070   000072 756000 0                  STQ     PTLSTR

     1745     2283    3           PTLIDBK= %TRUE#;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:294  

   2283  3 001071   000070 756000 0                  STQ     PTLIDBK

     1746     2284    3           RETURN;

   2284  3 001072   000001 702211                    TSX2  ! 1,X1

     1747     2285    3           END;
     1748     2286
     1749     2287    2       RETURN;

   2287  3 001073   000001 702211                    TSX2  ! 1,X1

     1750     2288
     1751     2289    2   END INIT_PT;
     1752     2290        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:295  
     1753     2291        /*
     1754     2292                      READ   PT   RECORD
     1755     2293           This procedure will altreturn if it is found that no real read
     1756     2294           is to take place. This is how the calling location will no
     1757     2295           wether or not to return to sort.
     1758     2296        */
     1759     2297    1   RDPTREC: PROC ALTRET;

   2297  3 001074   200006 741300       RDPTREC      STX1  ! @PT_SIZE+2,,AUTO

     1760     2298
     1761     2299    2       PTEOF = %FALSE#;

   2299  3 001075   000076 450000 0                  STZ     PTEOF

     1762     2300    2       PTEOD = %FALSE#;

   2300  3 001076   000074 450000 0                  STZ     PTEOD

     1763     2301
     1764     2302    2       IF PTLIDBK = %YES# THEN

   2302  3 001077   000070 234000 0                  SZN     PTLIDBK
         3 001100   001105 605000 3                  TPL     s:2309

     1765     2303    3       DO;

     1766     2304    3           PTLIDBK = %NO#;

   2304  3 001101   000070 450000 0                  STZ     PTLIDBK

     1767     2305    3           PTEOD = %YES#;

   2305  3 001102   400000 236003                    LDQ     -131072,DU
         3 001103   000074 756000 0                  STQ     PTEOD

     1768     2306    3           ALTRETURN;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:296  

   2306  3 001104   000000 702211                    TSX2  ! 0,X1

     1769     2307    3           END;
     1770     2308
     1771     2309    2       CURRPT = NXTPT;

   2309  3 001105   000000 100400                    MLR     fill='000'O
         3 001106   000004 000020 0                  ADSC9   NXTPT                    cn=0,n=16
         3 001107   000000 000020 xsym               ADSC9   CURRPT                   cn=0,n=16

     1772     2310
     1773     2311    2       IF PTLSTR = %TRUE# THEN

   2311  3 001110   000072 234000 0                  SZN     PTLSTR
         3 001111   001115 605000 3                  TPL     s:2317

     1774     2312    3       DO;

     1775     2313    3           PTEOF = %TRUE#;

   2313  3 001112   400000 236003                    LDQ     -131072,DU
         3 001113   000076 756000 0                  STQ     PTEOF

     1776     2314    3           ALTRETURN;

   2314  3 001114   000000 702211                    TSX2  ! 0,X1

     1777     2315    3           END;
     1778     2316
     1779     2317    2       PTRECNO = PTRECNO +1;

   2317  3 001115   000066 054000 0                  AOS     PTRECNO

     1780     2318
     1781     2319    2       RETURN;

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:297  
   2319  3 001116   000001 702211                    TSX2  ! 1,X1

     1782     2320    2   END RDPTREC;
     1783     2321        %EJECT;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:298  
     1784     2322
     1785     2323        /*
     1786     2324           This routine writes to the errfile the errors found by the
     1787     2325           set validation routine. The type of error is identified by
     1788     2326           ERRCODE which is used by the error reporting routine for
     1789     2327           displaying the error. The error file may and will be sorted
     1790     2328           to get problems with common dbks together.
     1791     2329        */
     1792     2330    1   WRITE_VALERR: PROC(ERRCODE) ALTRET;

   2330  3 001117   200012 741300       WRITE_VALERR STX1  ! @CASE#+3,,AUTO

     1793     2331
     1794     2332    2   DCL ERRCODE SBIN WORD ALIGNED;
     1795     2333
     1796     2334    2       NO_ERRORS = NO_ERRORS+1;

   2334  3 001120   000000 054000 xsym               AOS     NO_ERRORS

     1797     2335    3       DO CASE(ERRCODE);

   2335  3 001121   200013 470500                    LDP0    @ERRCODE,,AUTO
         3 001122   000000 235100                    LDA     0,,PR0
         3 001123   000012 115007                    CMPA    10,DL
         3 001124   001126 602005 3                  TNC     s:2335+5,AL
         3 001125   001476 710000 3                  TRA     s:2435
         3 001126   001476 710000 3                  TRA     s:2435
         3 001127   001140 710000 3                  TRA     s:2338
         3 001130   001174 710000 3                  TRA     s:2349
         3 001131   001276 710000 3                  TRA     s:2377
         3 001132   001341 710000 3                  TRA     s:2392
         3 001133   001364 710000 3                  TRA     s:2400
         3 001134   001415 710000 3                  TRA     s:2410
         3 001135   001451 710000 3                  TRA     s:2421
         3 001136   001321 710000 3                  TRA     s:2385
         3 001137   001140 710000 3                  TRA     s:2338

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:299  
     1798     2336
     1799     2337    3       CASE(%GRBGNXT#,%GRBGOWN#);

     1800     2338    3           GRBGNXT.CODE = ERRCODE;

   2338  3 001140   000000 471400 xsym               LDP1    ERRBUF$
         3 001141   000000 236100                    LDQ     0,,PR0
         3 001142   000033 736000                    QLS     27
         3 001143   100002 552140                    STBQ    2,'40'O,PR1

     1801     2339    3           GRBGNXT.BADDBK = CURRPT.DBK;

   2339  3 001144   000100 100400                    MLR     fill='000'O
         3 001145   000002 000004 xsym               ADSC9   CURRPT+2                 cn=0,n=4
         3 001146   100000 400004                    ADSC9   0,,PR1                   cn=2,n=4

     1802     2340    3           GRBGNXT.SETYP = CURRPT.SETYP;

   2340  3 001147   000001 220000 xsym               LDX0    CURRPT+1
         3 001150   000000 471400 xsym               LDP1    ERRBUF$
         3 001151   100000 740100                    STX0    0,,PR1

     1803     2341    3           GRBGNXT.RECTYP = CURRPT.RECTYP;

   2341  3 001152   000001 720000 xsym               LXL0    CURRPT+1
         3 001153   000000 471400 xsym               LDP1    ERRBUF$
         3 001154   100001 440100                    SXL0    1,,PR1

     1804     2342    3           GRBGNXT.NXTVAL = CURRPT.NEXT;

   2342  3 001155   000100 100400                    MLR     fill='000'O
         3 001156   000000 000004 xsym               ADSC9   CURRPT                   cn=0,n=4
         3 001157   100002 200004                    ADSC9   2,,PR1                   cn=1,n=4

     1805     2343    3           GRBGNXT.OWNER = CURRPT.OWNER;

   2343  3 001160   000100 100400                    MLR     fill='000'O
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:300  
         3 001161   000003 000004 xsym               ADSC9   CURRPT+3                 cn=0,n=4
         3 001162   100003 200004                    ADSC9   3,,PR1                   cn=1,n=4

     1806     2344    3           IF ERRCODE = %GRBGOWN# THEN

   2344  3 001163   000000 235100                    LDA     0,,PR0
         3 001164   000011 115007                    CMPA    9,DL
         3 001165   001171 601000 3                  TNZ     s:2346

     1807     2345    3               GRBGNXT.NXTVAL = CURRPT.OWNER;

   2345  3 001166   000100 100400                    MLR     fill='000'O
         3 001167   000003 000004 xsym               ADSC9   CURRPT+3                 cn=0,n=4
         3 001170   100002 200004                    ADSC9   2,,PR1                   cn=1,n=4

     1808     2346    3           BUFLNSF = 17;

   2346  3 001171   000021 235007                    LDA     17,DL
         3 001172   000000 755000 xsym               STA     BUFLNSF
         3 001173   001476 710000 3                  TRA     s:2435

     1809     2347
     1810     2348    3       CASE(%MULTNXT#);

     1811     2349    4           DO I = 0 TO PTSVCNT;

   2349  3 001174   000000 450000 xsym               STZ     I
         3 001175   001267 710000 3                  TRA     s:2372+1

     1812     2350    4               MULTNXT.CODE = ERRCODE;

   2350  3 001176   000000 470400 xsym               LDP0    ERRBUF$
         3 001177   200013 471500                    LDP1    @ERRCODE,,AUTO
         3 001200   100000 236100                    LDQ     0,,PR1
         3 001201   000033 736000                    QLS     27
         3 001202   000002 552140                    STBQ    2,'40'O,PR0

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:301  
     1813     2351    4               MULTNXT.BADNXT = PTSAVE.NEXT(I);

   2351  3 001203   000000 235000 xsym               LDA     I
         3 001204   000002 735000                    ALS     2
         3 001205   000002 735000                    ALS     2
         3 001206   000100 100405                    MLR     fill='000'O
         3 001207   000011 000004 0                  ADSC9   PTSAVE,A                 cn=0,n=4
         3 001210   000000 400004                    ADSC9   0,,PR0                   cn=2,n=4

     1814     2352    4               MULTNXT.SETYP = PTSAVE.SETYP(I);

   2352  3 001211   000000 235000 xsym               LDA     I
         3 001212   000002 735000                    ALS     2
         3 001213   000012 220005 0                  LDX0    PTSAVE+1,AL
         3 001214   000000 470400 xsym               LDP0    ERRBUF$
         3 001215   000000 740100                    STX0    0,,PR0

     1815     2353    4               MULTNXT.BADDBK = PTSAVE.DBK(I);

   2353  3 001216   000000 235000 xsym               LDA     I
         3 001217   000002 735000                    ALS     2
         3 001220   000000 470400 xsym               LDP0    ERRBUF$
         3 001221   000002 735000                    ALS     2
         3 001222   000100 100405                    MLR     fill='000'O
         3 001223   000013 000004 0                  ADSC9   PTSAVE+2,A               cn=0,n=4
         3 001224   000002 200004                    ADSC9   2,,PR0                   cn=1,n=4

     1816     2354    4               MULTNXT.RECTYP = PTSAVE.RECTYP(I);

   2354  3 001225   000000 235000 xsym               LDA     I
         3 001226   000002 735000                    ALS     2
         3 001227   000012 720005 0                  LXL0    PTSAVE+1,AL
         3 001230   000001 440100                    SXL0    1,,PR0

     1817     2355    4               MULTNXT.PTCNT = PTSVCNT;

   2355  3 001231   000061 236000 0                  LDQ     PTSVCNT
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:302  
         3 001232   000022 736000                    QLS     18
         3 001233   000003 552120                    STBQ    3,'20'O,PR0

     1818     2356    4               MULTNXT.OWNER = PTSAVE.OWNER(I);

   2356  3 001234   000000 236000 xsym               LDQ     I
         3 001235   000004 736000                    QLS     4
         3 001236   000100 100406                    MLR     fill='000'O
         3 001237   000014 000004 0                  ADSC9   PTSAVE+3,Q               cn=0,n=4
         3 001240   000003 400004                    ADSC9   3,,PR0                   cn=2,n=4

     1819     2357    4               BUFLNSF = 18;

   2357  3 001241   000022 235007                    LDA     18,DL
         3 001242   000000 755000 xsym               STA     BUFLNSF

     1820     2358
     1821     2359
     1822     2360         /*   Since the PA -> PA  record set pointers had 5000 subtracted
     1823     2361            off thier set values make the decision table think there
     1824     2362            are two separate sets (to avoid mult next ptr conflicts) -
     1825     2363            we will now restore the values. */
     1826     2364    4               IF ERROR.SETYP < 5000 THEN

   2364  3 001243   000000 221100                    LDX1    0,,PR0
         3 001244   011610 101003                    CMPX1   5000,DU
         3 001245   001250 605000 3                  TPL     s:2366

     1827     2365    4                   ERROR.SETYP = ERROR.SETYP + 5000;

   2365  3 001246   011610 622011                    EAX2    5000,X1
         3 001247   000000 742100                    STX2    0,,PR0

     1828     2366    4    /**/       DCBSF = ERRFILE.DCB#;

   2366  3 001250   000001 236000 xsym               LDQ     ERRFILE+1
         3 001251   000011 772000                    QRL     9
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:303  
         3 001252   777777 376007                    ANQ     -1,DL
         3 001253   000000 620006                    EAX0    0,QL
         3 001254   000000 740000 xsym               STX0    DCBSF

     1829     2367    4    /**/       DCBSF = ERRFILE.DCB#;

   2367  3 001255   000000 740000 xsym               STX0    DCBSF

     1830     2368    4               BUFSF = VECTOR(ERROR_BUF);

   2368  3 001256   000032 237000 4                  LDAQ    26
         3 001257   000000 755000 xsym               STA     BUFSF
         3 001260   000001 756000 xsym               STQ     BUFSF+1

     1831     2369    4               VFCSF = %NO#;

   2369  3 001261   000000 450000 xsym               STZ     VFCSF

     1832     2370    4               FULLSF =%NO#;

   2370  3 001262   000000 450000 xsym               STZ     FULLSF

     1833     2371    4               CALL SYS_FUNC_WRIT ALTRET(ALT_ERR);

   2371  3 001263   000000 631400 4                  EPPR1   0
         3 001264   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 001265   001523 702000 3                  TSX2    ALT_ERR

     1834     2372    4               END;

   2372  3 001266   000000 054000 xsym               AOS     I
         3 001267   000000 236000 xsym               LDQ     I
         3 001270   000061 116000 0                  CMPQ    PTSVCNT
         3 001271   001176 604400 3                  TMOZ    s:2350

     1835     2373    3           PTSVCNT = -1;

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:304  
   2373  3 001272   000001 335007                    LCA     1,DL
         3 001273   000061 755000 0                  STA     PTSVCNT

     1836     2374    3           RETURN;

   2374  3 001274   200012 221300                    LDX1  ! @CASE#+3,,AUTO
         3 001275   000001 702211                    TSX2  ! 1,X1

     1837     2375
     1838     2376    3       CASE(%MMBRNXT#);

     1839     2377    3           MMBR.BADDBK = CURRPT.DBK;

   2377  3 001276   000000 471400 xsym               LDP1    ERRBUF$
         3 001277   000100 100400                    MLR     fill='000'O
         3 001300   000002 000004 xsym               ADSC9   CURRPT+2                 cn=0,n=4
         3 001301   100000 400004                    ADSC9   0,,PR1                   cn=2,n=4

     1840     2378    3           MMBR.SETYP = CURRPT.SETYP;

   2378  3 001302   000001 220000 xsym               LDX0    CURRPT+1
         3 001303   000000 471400 xsym               LDP1    ERRBUF$
         3 001304   100000 740100                    STX0    0,,PR1

     1841     2379    3           MMBR.CODE = ERRCODE;

   2379  3 001305   000000 471400 xsym               LDP1    ERRBUF$
         3 001306   000000 236100                    LDQ     0,,PR0
         3 001307   000033 736000                    QLS     27
         3 001310   100002 552140                    STBQ    2,'40'O,PR1

     1842     2380    3           MMBR.RECTYP = CURRPT.RECTYP;

   2380  3 001311   000001 720000 xsym               LXL0    CURRPT+1
         3 001312   100001 440100                    SXL0    1,,PR1

     1843     2381    3           MMBR.OWNER = CURRPT.OWNER;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:305  

   2381  3 001313   000100 100400                    MLR     fill='000'O
         3 001314   000003 000004 xsym               ADSC9   CURRPT+3                 cn=0,n=4
         3 001315   100002 200004                    ADSC9   2,,PR1                   cn=1,n=4

     1844     2382    3           BUFLNSF = 13;

   2382  3 001316   000015 235007                    LDA     13,DL
         3 001317   000000 755000 xsym               STA     BUFLNSF
         3 001320   001476 710000 3                  TRA     s:2435

     1845     2383
     1846     2384    3       CASE(%MMBRPRI#);

     1847     2385    3           MMBR.BADDBK = CURREG.DBK;

   2385  3 001321   000000 471400 xsym               LDP1    ERRBUF$
         3 001322   000100 100400                    MLR     fill='000'O
         3 001323   000000 000004 xsym               ADSC9   CURREG                   cn=0,n=4
         3 001324   100000 400004                    ADSC9   0,,PR1                   cn=2,n=4

     1848     2386    3           MMBR.SETYP = CURREG.SETYP;

   2386  3 001325   000001 220000 xsym               LDX0    CURREG+1
         3 001326   000000 471400 xsym               LDP1    ERRBUF$
         3 001327   100000 740100                    STX0    0,,PR1

     1849     2387    3           MMBR.CODE = ERRCODE;

   2387  3 001330   000000 471400 xsym               LDP1    ERRBUF$
         3 001331   000000 236100                    LDQ     0,,PR0
         3 001332   000033 736000                    QLS     27
         3 001333   100002 552140                    STBQ    2,'40'O,PR1

     1850     2388    3           MMBR.RECTYP = CURREG.RECTYP;

   2388  3 001334   000001 720000 xsym               LXL0    CURREG+1
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:306  
         3 001335   100001 440100                    SXL0    1,,PR1

     1851     2389    3           BUFLNSF = 9;

   2389  3 001336   000011 235007                    LDA     9,DL
         3 001337   000000 755000 xsym               STA     BUFLNSF
         3 001340   001476 710000 3                  TRA     s:2435

     1852     2390
     1853     2391    3       CASE(%MISGNXT#);

     1854     2392    3           MISGNXT.BADDBK = CURREG.DBK;

   2392  3 001341   000000 471400 xsym               LDP1    ERRBUF$
         3 001342   000100 100400                    MLR     fill='000'O
         3 001343   000000 000004 xsym               ADSC9   CURREG                   cn=0,n=4
         3 001344   100000 400004                    ADSC9   0,,PR1                   cn=2,n=4

     1855     2393    3           MISGNXT.SETYP = CURREG.SETYP;

   2393  3 001345   000001 220000 xsym               LDX0    CURREG+1
         3 001346   000000 471400 xsym               LDP1    ERRBUF$
         3 001347   100000 740100                    STX0    0,,PR1

     1856     2394    3           MISGNXT.CODE = ERRCODE;

   2394  3 001350   000000 471400 xsym               LDP1    ERRBUF$
         3 001351   000000 236100                    LDQ     0,,PR0
         3 001352   000033 736000                    QLS     27
         3 001353   100002 552140                    STBQ    2,'40'O,PR1

     1857     2395    3           MISGNXT.RECTYP = CURREG.RECTYP;

   2395  3 001354   000001 720000 xsym               LXL0    CURREG+1
         3 001355   100001 440100                    SXL0    1,,PR1

     1858     2396    3           MISGNXT.PRI_VAL = CURREG.PRIOR;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:307  

   2396  3 001356   000100 100400                    MLR     fill='000'O
         3 001357   000002 000004 xsym               ADSC9   CURREG+2                 cn=0,n=4
         3 001360   100002 200004                    ADSC9   2,,PR1                   cn=1,n=4

     1859     2397    3           BUFLNSF = 13;

   2397  3 001361   000015 235007                    LDA     13,DL
         3 001362   000000 755000 xsym               STA     BUFLNSF
         3 001363   001476 710000 3                  TRA     s:2435

     1860     2398
     1861     2399    3       CASE(%DANGNXT#);

     1862     2400    3           DANGNXT.BADDBK = CURRPT.DBK;

   2400  3 001364   000000 471400 xsym               LDP1    ERRBUF$
         3 001365   000100 100400                    MLR     fill='000'O
         3 001366   000002 000004 xsym               ADSC9   CURRPT+2                 cn=0,n=4
         3 001367   100000 400004                    ADSC9   0,,PR1                   cn=2,n=4

     1863     2401    3           DANGNXT.SETYP = CURRPT.SETYP;

   2401  3 001370   000001 220000 xsym               LDX0    CURRPT+1
         3 001371   000000 471400 xsym               LDP1    ERRBUF$
         3 001372   100000 740100                    STX0    0,,PR1

     1864     2402    3           DANGNXT.CODE = ERRCODE;

   2402  3 001373   000000 471400 xsym               LDP1    ERRBUF$
         3 001374   000000 236100                    LDQ     0,,PR0
         3 001375   000033 736000                    QLS     27
         3 001376   100002 552140                    STBQ    2,'40'O,PR1

     1865     2403    3           DANGNXT.RECTYP = CURRPT.RECTYP;

   2403  3 001377   000001 720000 xsym               LXL0    CURRPT+1
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:308  
         3 001400   100001 440100                    SXL0    1,,PR1

     1866     2404    3           DANGNXT.BADPRI = CURREG.DBK;

   2404  3 001401   000100 100400                    MLR     fill='000'O
         3 001402   000000 000004 xsym               ADSC9   CURREG                   cn=0,n=4
         3 001403   100002 200004                    ADSC9   2,,PR1                   cn=1,n=4

     1867     2405    3           DANGNXT.PRI_RECTYP = CURREG.RECTYP;

   2405  3 001404   000001 236000 xsym               LDQ     CURREG+1
         3 001405   000011 736000                    QLS     9
         3 001406   100003 552130                    STBQ    3,'30'O,PR1

     1868     2406    3           DANGNXT.OWNER = CURRPT.OWNER;

   2406  3 001407   000100 100400                    MLR     fill='000'O
         3 001410   000003 000004 xsym               ADSC9   CURRPT+3                 cn=0,n=4
         3 001411   100003 600004                    ADSC9   3,,PR1                   cn=3,n=4

     1869     2407    3           BUFLNSF = 19;

   2407  3 001412   000023 235007                    LDA     19,DL
         3 001413   000000 755000 xsym               STA     BUFLNSF
         3 001414   001476 710000 3                  TRA     s:2435

     1870     2408
     1871     2409    3       CASE(%INCNOWN#);

     1872     2410    3           INCNOWN.DBK1 = CURREG.DBK;

   2410  3 001415   000000 471400 xsym               LDP1    ERRBUF$
         3 001416   000100 100400                    MLR     fill='000'O
         3 001417   000000 000004 xsym               ADSC9   CURREG                   cn=0,n=4
         3 001420   100000 400004                    ADSC9   0,,PR1                   cn=2,n=4

     1873     2411    3           INCNOWN.SETYP = CURREG.SETYP;
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:309  

   2411  3 001421   000001 220000 xsym               LDX0    CURREG+1
         3 001422   000000 471400 xsym               LDP1    ERRBUF$
         3 001423   100000 740100                    STX0    0,,PR1

     1874     2412    3           INCNOWN.CODE = ERRCODE;

   2412  3 001424   000000 471400 xsym               LDP1    ERRBUF$
         3 001425   000000 236100                    LDQ     0,,PR0
         3 001426   000033 736000                    QLS     27
         3 001427   100002 552140                    STBQ    2,'40'O,PR1

     1875     2413    3           INCNOWN.RECTYP1= CURREG.RECTYP;

   2413  3 001430   000001 720000 xsym               LXL0    CURREG+1
         3 001431   100001 440100                    SXL0    1,,PR1

     1876     2414    3           INCNOWN.OWNDBK1= CURREG.OWNER;

   2414  3 001432   000100 100400                    MLR     fill='000'O
         3 001433   000003 000004 xsym               ADSC9   CURREG+3                 cn=0,n=4
         3 001434   100002 200004                    ADSC9   2,,PR1                   cn=1,n=4

     1877     2415    3           INCNOWN.DBK2 = CURRPT.DBK;

   2415  3 001435   000100 100400                    MLR     fill='000'O
         3 001436   000002 000004 xsym               ADSC9   CURRPT+2                 cn=0,n=4
         3 001437   100003 600004                    ADSC9   3,,PR1                   cn=3,n=4

     1878     2416    3           INCNOWN.OWNDBK2= CURRPT.OWNER;

   2416  3 001440   000100 100400                    MLR     fill='000'O
         3 001441   000003 000004 xsym               ADSC9   CURRPT+3                 cn=0,n=4
         3 001442   100004 600004                    ADSC9   4,,PR1                   cn=3,n=4

     1879     2417    3           INCNOWN.RECTYP2= CURRPT.RECTYP;

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:310  
   2417  3 001443   000100 100400                    MLR     fill='000'O
         3 001444   000001 400002 xsym               ADSC9   CURRPT+1                 cn=2,n=2
         3 001445   100005 600002                    ADSC9   5,,PR1                   cn=3,n=2

     1880     2418    3           BUFLNSF = 23;

   2418  3 001446   000027 235007                    LDA     23,DL
         3 001447   000000 755000 xsym               STA     BUFLNSF
         3 001450   001476 710000 3                  TRA     s:2435

     1881     2419
     1882     2420    3       CASE(%DBKPRIOR#);

     1883     2421    3           DBKPRIOR.BADDBK = CURREG.DBK;

   2421  3 001451   000000 471400 xsym               LDP1    ERRBUF$
         3 001452   000100 100400                    MLR     fill='000'O
         3 001453   000000 000004 xsym               ADSC9   CURREG                   cn=0,n=4
         3 001454   100000 400004                    ADSC9   0,,PR1                   cn=2,n=4

     1884     2422    3           DBKPRIOR.SETYP = CURREG.SETYP;

   2422  3 001455   000001 220000 xsym               LDX0    CURREG+1
         3 001456   000000 471400 xsym               LDP1    ERRBUF$
         3 001457   100000 740100                    STX0    0,,PR1

     1885     2423    3           DBKPRIOR.CODE = ERRCODE;

   2423  3 001460   000000 471400 xsym               LDP1    ERRBUF$
         3 001461   000000 236100                    LDQ     0,,PR0
         3 001462   000033 736000                    QLS     27
         3 001463   100002 552140                    STBQ    2,'40'O,PR1

     1886     2424    3           DBKPRIOR.RECTYP = CURREG.RECTYP;

   2424  3 001464   000001 720000 xsym               LXL0    CURREG+1
         3 001465   100001 440100                    SXL0    1,,PR1
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:311  

     1887     2425    3           DBKPRIOR.EXP_PRI = CURRPT.DBK;

   2425  3 001466   000100 100400                    MLR     fill='000'O
         3 001467   000002 000004 xsym               ADSC9   CURRPT+2                 cn=0,n=4
         3 001470   100002 200004                    ADSC9   2,,PR1                   cn=1,n=4

     1888     2426    3           DBKPRIOR.PRI_VAL = CURREG.PRIOR;

   2426  3 001471   000100 100400                    MLR     fill='000'O
         3 001472   000002 000004 xsym               ADSC9   CURREG+2                 cn=0,n=4
         3 001473   100003 200004                    ADSC9   3,,PR1                   cn=1,n=4

     1889     2427    3           BUFLNSF = 17;

   2427  3 001474   000021 235007                    LDA     17,DL
         3 001475   000000 755000 xsym               STA     BUFLNSF

     1890     2428
     1891     2429    3           END; /* CASE */

     1892     2430
     1893     2431         /*   Since the PA -> PA  record set pointers had 5000 subtracted
     1894     2432            off their set values make the decision table think there
     1895     2433            are two separate sets (to avoid mult next ptr conflicts) -
     1896     2434            we will now restore the values. */
     1897     2435    2       IF ERROR.SETYP < 5000 THEN

   2435  3 001476   000000 471400 xsym               LDP1    ERRBUF$
         3 001477   100000 220100                    LDX0    0,,PR1
         3 001500   011610 100003                    CMPX0   5000,DU
         3 001501   001504 605000 3                  TPL     s:2438

     1898     2436    2           ERROR.SETYP = ERROR.SETYP + 5000;

   2436  3 001502   011610 621010                    EAX1    5000,X0
         3 001503   100000 741100                    STX1    0,,PR1
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:312  

     1899     2437
     1900     2438    2   /**/ DCBSF = ERRFILE.DCB#;

   2438  3 001504   000001 236000 xsym               LDQ     ERRFILE+1
         3 001505   000011 772000                    QRL     9
         3 001506   777777 376007                    ANQ     -1,DL
         3 001507   000000 620006                    EAX0    0,QL
         3 001510   000000 740000 xsym               STX0    DCBSF

     1901     2439    2       BUFSF = VECTOR(ERROR_BUF);

   2439  3 001511   000032 237000 4                  LDAQ    26
         3 001512   000000 755000 xsym               STA     BUFSF
         3 001513   000001 756000 xsym               STQ     BUFSF+1

     1902     2440    2       VFCSF = %NO#;

   2440  3 001514   000000 450000 xsym               STZ     VFCSF

     1903     2441    2       FULLSF =%NO#;

   2441  3 001515   000000 450000 xsym               STZ     FULLSF

     1904     2442    2       CALL SYS_FUNC_WRIT ALTRET(ALT_ERR);

   2442  3 001516   000000 631400 4                  EPPR1   0
         3 001517   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 001520   001523 702000 3                  TSX2    ALT_ERR

     1905     2443
     1906     2444
     1907     2445    2       RETURN;

   2445  3 001521   200012 221300                    LDX1  ! @CASE#+3,,AUTO
         3 001522   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:313  
     1908     2446    2   ALT_ERR:
     1909     2447    2       ALTRETURN;

   2447  3 001523   200012 221300       ALT_ERR      LDX1  ! @CASE#+3,,AUTO
         3 001524   000000 702211                    TSX2  ! 0,X1

     1910     2448    2   END WRITE_VALERR;
     1911     2449
     1912     2450    1   ALT_VALDTE:
     1913     2451    1       ALTRETURN;

   2451  3 001525   000000 702200 xent  ALT_VALDTE   TSX2  ! X66_AALT

RETURN_CODE
 Sect OctLoc
   0     000   000000 000000                                                    ....

LASTEG
 Sect OctLoc
   0     001   000000 000000                                                    ....

LASTPT
 Sect OctLoc
   0     002   000000 000000                                                    ....

PRINTPT
 Sect OctLoc
   0     003   000000 000000                                                    ....

PTSAVE
 Sect OctLoc
   0     011   ****** ******   ****** ******   ****** ******   ****** ******    ................

PPTSTY
 Sect OctLoc
   0     063   000000 000000                                                    ....

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:314  
EGRECNO
 Sect OctLoc
   0     065   000000 000000                                                    ....

PTRECNO
 Sect OctLoc
   0     066   000000 000000                                                    ....

(unnamed)
 Sect OctLoc
   2     000   052103 101114   103040 040040   052105 107106   111114 105040    *CALC   *EGFILE

(unnamed)
 Sect OctLoc
   4     000   000000 000000   000062 006000   000000 000001   000002 006000    .....2..........
   4     004   000000 000002   000004 006000   000000 000004   000006 006000    ................
   4     010   000000 000005   000010 006000   000004 000000   000001 406000    ................
   4     014   000001 006000   000077 006000   000100 006000   000000 000003    .....?...@......
   4     020   000017 006000   000000 000010   000021 006000   000000 000007    ................
   4     024   000023 006000   000000 000006   000025 006000   000000 000011    ................
   4     030   000027 006000   000003 777640   000007 777640   000000 006000    ................
     1914     2452
     1915     2453    1   END ZIU$VALDTE;
     1916     2454        %EOD;

PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:315  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_DBU_VALDTE.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$VALDTE.

   Procedure ZIU$VALDTE requires 854 words for executable code.
   Procedure ZIU$VALDTE requires 14 words of local(AUTO) storage.
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:316  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:317  
          MINI XREF LISTING

ACSSF
       779**DCL      2169<<ASSIGN
ALTNXT IN PROCEDURE CHKNXT
      2108**LABEL    2105--CALLALT
ALTOWN IN PROCEDURE CHKOWN
      2147**LABEL    2141--CALLALT  2143--CALLALT
ALTPRI IN PROCEDURE CHKPRI
      2126**LABEL    2119--CALLALT
ALT_EGINIT IN PROCEDURE INIT_EG
      2194**LABEL    2173--CALLALT  2176--CALLALT
ALT_ERR IN PROCEDURE WRITE_VALERR
      2447**LABEL    2371--CALLALT  2442--CALLALT
ALT_PTRS IN PROCEDURE CHECK_PTRS
      2093**LABEL    2086--CALLALT  2087--CALLALT  2089--CALLALT
ALT_RDEG IN PROCEDURE RDEGREC
      2240**LABEL    2224--CALLALT
ALT_READ IN PROCEDURE RDEGBUF
      2256**LABEL    2253--CALLALT
ALT_VALDTE
      2451**LABEL    1905--CALLALT  1919--CALLALT  1952--CALLALT  1953--CALLALT  1955--CALLALT  1967--CALLALT
      1969--CALLALT  1979--CALLALT  1990--CALLALT  2005--CALLALT
AREA_KEY$
      1518**DCL      1521--IMP-PTR
ASNSF
       782**DCL      2171<<ASSIGN
BREAK_FLAG
       899**DCL      1932>>IF
BREAK_LOCAT
      1180**DCL      1933>>UNWIND
BUFLNSF
       790**DCL      1902<<ASSIGN   2250<<ASSIGN   2346<<ASSIGN   2357<<ASSIGN   2382<<ASSIGN   2389<<ASSIGN
      2397<<ASSIGN   2407<<ASSIGN   2418<<ASSIGN   2427<<ASSIGN
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:318  
BUFSF
       791**DCL      1901<<ASSIGN   2249<<ASSIGN   2368<<ASSIGN   2439<<ASSIGN
CASE#
        38**DCL      1928<>CALL     1930>>DOWHILE  1936>>DOCASE   2026<>CALL     2084>>IF
CASE# IN PROCEDURE CHECK_CASE
      2036**DCL      2035--PROC     2039<<ASSIGN   2042<<ASSIGN   2045<<ASSIGN   2048<<ASSIGN   2051<<ASSIGN
      2055<<ASSIGN   2058<<ASSIGN   2061<<ASSIGN   2064<<ASSIGN   2067<<ASSIGN   2070<<ASSIGN   2072<<ASSIGN
CHECK_CASE
      2035**PROC     1928--CALL     2026--CALL
CHECK_PTRS
      2081**PROC     1990--CALL     2005--CALL
CHKNXT
      2097**PROC     2089--CALL
CHKOWN
      2130**PROC     2087--CALL
CHKPRI
      2114**PROC     2086--CALL
COUNTSF
       841**DCL       842--REDEF
CURREG
      1200**DCL      2178<<ASSIGN   2212<<ASSIGN
CURREG.DBK
      1201**DCL      2047>>IF       2050>>IF       2101>>IF       2116>>IF       2188>>IF       2234>>IF
      2385>>ASSIGN   2392>>ASSIGN   2404>>ASSIGN   2410>>ASSIGN   2421>>ASSIGN
CURREG.OWNER
      1205**DCL      2138>>IF       2138>>IF       2414>>ASSIGN
CURREG.PRIOR
      1204**DCL      2116>>IF       2122>>IF       2396>>ASSIGN   2426>>ASSIGN
CURREG.RECTYP
      1203**DCL      2083<>CALL     2388>>ASSIGN   2395>>ASSIGN   2405>>ASSIGN   2413>>ASSIGN   2424>>ASSIGN
CURREG.SETYP
      1202**DCL      2063>>IF       2066>>IF       2083<>CALL     2132>>IF       2135>>IF       2140>>IF
      2386>>ASSIGN   2393>>ASSIGN   2411>>ASSIGN   2422>>ASSIGN
CURRPT
      1206**DCL      1988>>ASSIGN   2003>>ASSIGN   2278<<ASSIGN   2309<<ASSIGN
CURRPT.DBK
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:319  
      1210**DCL      2101>>IF       2122>>IF       2339>>ASSIGN   2377>>ASSIGN   2400>>ASSIGN   2415>>ASSIGN
      2425>>ASSIGN
CURRPT.NEXT
      1207**DCL      1925>>IF       2021>>IF       2047>>IF       2050>>IF       2142>>IF       2342>>ASSIGN
CURRPT.OWNER
      1211**DCL      1212--REDEF    2138>>IF       2138>>IF       2142>>IF       2343>>ASSIGN   2345>>ASSIGN
      2381>>ASSIGN   2406>>ASSIGN   2416>>ASSIGN
CURRPT.RECTYP
      1209**DCL      2341>>ASSIGN   2380>>ASSIGN   2403>>ASSIGN   2417>>ASSIGN
CURRPT.SETYP
      1208**DCL      1989>>ASSIGN   2004>>ASSIGN   2063>>IF       2066>>IF       2069>>IF       2132>>IF
      2340>>ASSIGN   2378>>ASSIGN   2401>>ASSIGN
DANGNXT.BADDBK
      1262**DCL      2400<<ASSIGN
DANGNXT.BADPRI
      1265**DCL      2404<<ASSIGN
DANGNXT.CODE
      1264**DCL      2402<<ASSIGN
DANGNXT.OWNER
      1267**DCL      2406<<ASSIGN
DANGNXT.PRI_RECTYP
      1266**DCL      2405<<ASSIGN
DANGNXT.RECTYP
      1263**DCL      2403<<ASSIGN
DANGNXT.SETYP
      1261**DCL      2401<<ASSIGN
DBKPRIOR.BADDBK
      1281**DCL      2421<<ASSIGN
DBKPRIOR.CODE
      1283**DCL      2423<<ASSIGN
DBKPRIOR.EXP_PRI
      1284**DCL      2425<<ASSIGN
DBKPRIOR.PRI_VAL
      1285**DCL      2426<<ASSIGN
DBKPRIOR.RECTYP
      1282**DCL      2424<<ASSIGN
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:320  
DBKPRIOR.SETYP
      1280**DCL      2422<<ASSIGN
DCBSF
       770**DCL      1890<<ASSIGN   2030<<ASSIGN   2166<<ASSIGN   2248<<ASSIGN   2366<<ASSIGN   2367<<ASSIGN
      2438<<ASSIGN
EGEOD
      1869**DCL      1954>>IF       1970>>ASSIGN   2053>>IF       2057>>IF       2156<<ASSIGN   2202<<ASSIGN
      2208<<ASSIGN
EGEOF
      1871**DCL      2038>>IF       2041>>IF       2157<<ASSIGN   2161<<ASSIGN   2203<<ASSIGN   2218<<ASSIGN
EGFILE.DCB#
      1219**DCL      2030>>ASSIGN   2166>>ASSIGN   2248>>ASSIGN
EGLIDBK
      1865**DCL      2154<<ASSIGN   2184<<ASSIGN   2189<<ASSIGN   2205>>IF       2207<<ASSIGN   2231<<ASSIGN
      2235<<ASSIGN
EGLSTR
      1867**DCL      2155<<ASSIGN   2183<<ASSIGN   2216>>IF       2230<<ASSIGN
EGREC
      1194**DCL      2178>>ASSIGN   2212>>ASSIGN   2249--ASSIGN
EGREC.DBK
      1195**DCL      2188>>IF       2234>>IF
EGREC$
      1189**DCL      1194--IMP-PTR  2178>>ASSIGN   2188>>IF       2212>>ASSIGN   2234>>IF       2249>>ASSIGN
EGRECNO
      1863**DCL      2153<<ASSIGN   2213<<ASSIGN   2213>>ASSIGN   2222>>IF       2228>>IF
ENCRP_SEEDSF
       799**DCL       800--REDEF
ERRBUF$
      1227**DCL      1228--IMP-PTR  1233--IMP-PTR  1240--IMP-PTR  1248--IMP-PTR  1254--IMP-PTR  1260--IMP-PTR
      1268--IMP-PTR  1279--IMP-PTR  2338>>ASSIGN   2339>>ASSIGN   2340>>ASSIGN   2341>>ASSIGN   2342>>ASSIGN
      2343>>ASSIGN   2345>>ASSIGN   2350>>ASSIGN   2351>>ASSIGN   2352>>ASSIGN   2353>>ASSIGN   2354>>ASSIGN
      2355>>ASSIGN   2356>>ASSIGN   2364>>IF       2365>>ASSIGN   2365>>ASSIGN   2377>>ASSIGN   2378>>ASSIGN
      2379>>ASSIGN   2380>>ASSIGN   2381>>ASSIGN   2385>>ASSIGN   2386>>ASSIGN   2387>>ASSIGN   2388>>ASSIGN
      2392>>ASSIGN   2393>>ASSIGN   2394>>ASSIGN   2395>>ASSIGN   2396>>ASSIGN   2400>>ASSIGN   2401>>ASSIGN
      2402>>ASSIGN   2403>>ASSIGN   2404>>ASSIGN   2405>>ASSIGN   2406>>ASSIGN   2410>>ASSIGN   2411>>ASSIGN
      2412>>ASSIGN   2413>>ASSIGN   2414>>ASSIGN   2415>>ASSIGN   2416>>ASSIGN   2417>>ASSIGN   2421>>ASSIGN
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:321  
      2422>>ASSIGN   2423>>ASSIGN   2424>>ASSIGN   2425>>ASSIGN   2426>>ASSIGN   2435>>IF       2436>>ASSIGN
      2436>>ASSIGN
ERRCODE IN PROCEDURE WRITE_VALERR
      2332**DCL      2330--PROC     2335>>DOCASE   2338>>ASSIGN   2344>>IF       2350>>ASSIGN   2379>>ASSIGN
      2387>>ASSIGN   2394>>ASSIGN   2402>>ASSIGN   2412>>ASSIGN   2423>>ASSIGN
ERRCODESF
       801**DCL       806--REDEF
ERRFILE.DCB#
      1224**DCL      2366>>ASSIGN   2367>>ASSIGN   2438>>ASSIGN
ERROR.SETYP
      1229**DCL      2364>>IF       2365<<ASSIGN   2365>>ASSIGN   2435>>IF       2436<<ASSIGN   2436>>ASSIGN
ERROR_BUF
      1226**DCL      2368--ASSIGN   2439--ASSIGN
FIDSF
       818**DCL      2172<<ASSIGN
FIDSF_RD
       817**DCL       818--REDEF
FULLSF
       788**DCL      2252<<ASSIGN   2370<<ASSIGN   2441<<ASSIGN
FUNSF
       781**DCL      2168<<ASSIGN
GRBGNXT.BADDBK
      1235**DCL      2339<<ASSIGN
GRBGNXT.CODE
      1237**DCL      2338<<ASSIGN
GRBGNXT.NXTVAL
      1238**DCL      2342<<ASSIGN   2345<<ASSIGN
GRBGNXT.OWNER
      1239**DCL      2343<<ASSIGN
GRBGNXT.RECTYP
      1236**DCL      2341<<ASSIGN
GRBGNXT.SETYP
      1234**DCL      2340<<ASSIGN
HASNXT
      1877**DCL      1917<<ASSIGN   1951>>IF       1956<<ASSIGN   1965>>IF       1970<<ASSIGN   1986<<ASSIGN
      2002<<ASSIGN   2082<<ASSIGN
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:322  
HELPCODE
       835**DCL       840--REDEF
I
       873**DCL      2349<<DOINDEX  2351>>ASSIGN   2352>>ASSIGN   2353>>ASSIGN   2354>>ASSIGN   2356>>ASSIGN
ICHKSUM
       900**DCL       901--REDEF
INCNOWN.CODE
      1272**DCL      2412<<ASSIGN
INCNOWN.DBK1
      1270**DCL      2410<<ASSIGN
INCNOWN.DBK2
      1275**DCL      2415<<ASSIGN
INCNOWN.OWNDBK1
      1273**DCL      2414<<ASSIGN
INCNOWN.OWNDBK2
      1276**DCL      2416<<ASSIGN
INCNOWN.RECTYP1
      1271**DCL      2413<<ASSIGN
INCNOWN.RECTYP2
      1277**DCL      2417<<ASSIGN
INCNOWN.SETYP
      1269**DCL      2411<<ASSIGN
INIT_EG
      2151**PROC     1919--CALL
INIT_PT
      2263**PROC     1920--CALL
INTERACT
      1874**DCL      2083<>CALL
I_O_BUF$
       878**DCL       879--IMP-PTR
KEYSF
       772**DCL      1904<<ASSIGN   2251<<ASSIGN
KEYVSF
       773**DCL       778--REDEF
KEYVSF.WD_ONE
       775**DCL       776--REDEF
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:323  
LASTEG
        13**DCL      2108<<ASSIGN
LASTPT
        14**DCL      2109<<ASSIGN
MISGNXT.BADDBK
      1256**DCL      2392<<ASSIGN
MISGNXT.CODE
      1258**DCL      2394<<ASSIGN
MISGNXT.PRI_VAL
      1259**DCL      2396<<ASSIGN
MISGNXT.RECTYP
      1257**DCL      2395<<ASSIGN
MISGNXT.SETYP
      1255**DCL      2393<<ASSIGN
MLTNXT
      1878**DCL      1918<<ASSIGN   1945>>IF       1948<<ASSIGN   1960>>IF       1963<<ASSIGN   1985<<ASSIGN
      1996>>IF       1999<<ASSIGN
MMBR.BADDBK
      1250**DCL      2377<<ASSIGN   2385<<ASSIGN
MMBR.CODE
      1252**DCL      2379<<ASSIGN   2387<<ASSIGN
MMBR.OWNER
      1253**DCL      2381<<ASSIGN
MMBR.RECTYP
      1251**DCL      2380<<ASSIGN   2388<<ASSIGN
MMBR.SETYP
      1249**DCL      2378<<ASSIGN   2386<<ASSIGN
MSGCODE
       807**DCL       808--REDEF
MSTR$
      1487**DCL      1490--IMP-PTR  2135>>IF       2140>>IF
MSTR_REF.NAME
      1495**DCL      2135>>IF
MSTR_REF.NXTHSH
      1493**DCL      1494--REDEF
MSTR_REF.PAENT
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:324  
      1499**DCL      1500--REDEF
MSTR_REF.PAOFF
      1496**DCL      1497--REDEF
MSTR_REF.SET.PATYPE
      1505**DCL      2140>>IF
MULTNXT.BADDBK
      1245**DCL      2353<<ASSIGN
MULTNXT.BADNXT
      1242**DCL      2351<<ASSIGN
MULTNXT.CODE
      1244**DCL      2350<<ASSIGN
MULTNXT.OWNER
      1247**DCL      2356<<ASSIGN
MULTNXT.PTCNT
      1246**DCL      2355<<ASSIGN
MULTNXT.RECTYP
      1243**DCL      2354<<ASSIGN
MULTNXT.SETYP
      1241**DCL      2352<<ASSIGN
NEXTEG
        40**DCL      2179<<ASSIGN   2188>>IF       2212>>ASSIGN   2214<<ASSIGN   2214>>ASSIGN   2222>>IF
      2225<<ASSIGN   2234>>IF
NOREAD
      2026**LABEL    1975--CALLALT  1981--CALLALT  1992--CALLALT  2007--CALLALT  2016--CALLALT
NO_EGRECS
      1191**DCL      2108>>ASSIGN   2159>>IF       2181>>IF       2222>>IF       2228>>IF       2280>>IF
NO_ERRORS
      1225**DCL      1921<<ASSIGN   2334<<ASSIGN   2334>>ASSIGN
NO_RECS
      1549**DCL      2135>>IF       2140>>IF
NXTPT
      2021**LABEL      27--REDEF    1908--GOTO     2278>>ASSIGN   2309>>ASSIGN
NXTPT.NEXT
        22**DCL      1925>>IF       2021>>IF
ORGSF
       771**DCL      2170<<ASSIGN
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:325  
OWNER
      1875**DCL      2083<>CALL     2103>>IF       2118>>IF
PPTSTY
        39**DCL      1939<<ASSIGN   1950<<ASSIGN   1973<<ASSIGN   1989<<ASSIGN   2004<<ASSIGN   2069>>IF
PRINTPT
        15**DCL      1899>>IF
PT
         9**DCL         7--PROC     1888>>ASSIGN   1901--ASSIGN
PTEOD
      1870**DCL      2014>>IF       2053>>IF       2060>>IF       2267<<ASSIGN   2300<<ASSIGN   2305<<ASSIGN
PTEOF
      1872**DCL      2038>>IF       2044>>IF       2268<<ASSIGN   2274<<ASSIGN   2299<<ASSIGN   2313<<ASSIGN
PTFILE.DCB#
        19**DCL      1890>>ASSIGN
PTINIT
      1925**LABEL    1911--GOTO
PTLIDBK
      1866**DCL      1895<<ASSIGN   1926<<ASSIGN   2022<<ASSIGN   2265<<ASSIGN   2283<<ASSIGN   2302>>IF
      2304<<ASSIGN
PTLSTR
      1868**DCL      1894<<ASSIGN   2266<<ASSIGN   2282<<ASSIGN   2311>>IF
PTRECNO
      1864**DCL      2109>>ASSIGN   2269<<ASSIGN   2317<<ASSIGN   2317>>ASSIGN
PTREDF
        27**DCL      1888<<ASSIGN
PTSAVE
        30**DCL      1988<<ASSIGN   2003<<ASSIGN
PTSAVE.DBK
        34**DCL      2353>>ASSIGN
PTSAVE.NEXT
        31**DCL      2351>>ASSIGN
PTSAVE.OWNER
        35**DCL      2356>>ASSIGN
PTSAVE.RECTYP
        33**DCL      2354>>ASSIGN
PTSAVE.SETYP
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:326  
        32**DCL      2352>>ASSIGN
PTSIZE
        28**DCL      1889<<ASSIGN   2272>>IF
PTSVCNT
        36**DCL      1987<<ASSIGN   1987>>ASSIGN   1988>>ASSIGN   2001<<ASSIGN   2270<<ASSIGN   2349>>DOINDEX
      2355>>ASSIGN   2373<<ASSIGN
PT_SIZE
        10**DCL         7--PROC        9--IMP-SIZ  1888>>ASSIGN   1889>>ASSIGN   1892>>IF       1901>>ASSIGN
RDEGBUF
      2246**PROC     2176--CALL     2224--CALL
RDEGREC
      2200**PROC     1953--CALL     1955--CALL     1969--CALL
RDPTREC
      2297**PROC     1941--CALL     1975--CALL     1981--CALL     1992--CALL     2007--CALL     2016--CALL
REC$
       859**DCL       882--IMP-PTR
REC_DATA_LN
       887**DCL       886--IMP-SIZ
REC_XREF$
      1542**DCL      1543--IMP-PTR
REREAD
      2014**LABEL    1941--CALLALT
RETURN_CODE
        12**DCL      1907>>IF       1910>>IF       1922<<ASSIGN   1940<<ASSIGN   1974<<ASSIGN   1980<<ASSIGN
      1991<<ASSIGN   2006<<ASSIGN   2032<<ASSIGN
SET_XREF$
      1531**DCL      1532--IMP-PTR
SYS_FUNC_CLOS
      1882**DCL-ENT  1896--CALL     2031--CALL     2167--CALL
SYS_FUNC_OPEN
      1883**DCL-ENT  2173--CALL
SYS_FUNC_READ
      1884**DCL-ENT  2253--CALL
SYS_FUNC_WRIT
      1881**DCL-ENT  1905--CALL     2371--CALL     2442--CALL
VFCSF
PL6.E3A0      #004=ZIU$VALDTE File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:327  
       787**DCL      1903<<ASSIGN   2369<<ASSIGN   2440<<ASSIGN
WRITE_VALERR
      2330**PROC     1938--CALL     1947--CALL     1952--CALL     1962--CALL     1967--CALL     1979--CALL
      1998--CALL     2105--CALL     2119--CALL     2123--CALL     2141--CALL     2143--CALL
ZI$DIR.ALTKEY
      1784**DCL      1785--REDEF    1786--REDEF
ZI$DIR.AREAFID
      1750**DCL      1751--REDEF
ZI$DIR.DATE
      1789**DCL      1793--REDEF
ZI$DIR.DEST_SEED
      1745**DCL      1746--REDEF    1747--REDEF
ZI$DIR.ENCP_SEED
      1742**DCL      1743--REDEF    1744--REDEF
ZI$DIR.REPRT_ZERO
      1776**DCL      1777--REDEF
ZI$DIR.SCHFID
      1748**DCL      1749--REDEF
ZI$DIR.TIME
      1794**DCL      1799--REDEF
ZIU$INTERACT
      1885**DCL-ENT  2083--CALL

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:328  
     1917        1        /*M* ZIU$RPTVAL   IDSII    UTILITIES SET VALIDATION REPORT         */
     1918        2        /*T***********************************************************/
     1919        3        /*T*                                                         */
     1920        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1921        5        /*T*                                                         */
     1922        6        /*T***********************************************************/
     1923        7        ZIU$RPTVAL: PROC ALTRET;
     1924        8
     1925        9
     1926       10    1   DCL ERRCODE SBIN WORD STATIC ALIGNED;
     1927       11    1   DCL PAPTRS BIT(1) STATIC ALIGNED;
     1928       12    1   DCL PTSVCNT SBIN WORD SYMREF ALIGNED;
     1929       13
     1930       14    1   DCL PA_ENTRY CHAR(3) STATIC ALIGNED;
     1931       15    1   DCL PA_GROUP CHAR(3) STATIC ALIGNED;
     1932       16    1   DCL PA_INFO CHAR(7) STATIC ALIGNED;
     1933       17
     1934       18         %INCLUDE CP_6_SUBS;
     1935      558         %INCLUDE ZI_GLOBAL_DBUTIL;
     1936      736         %MISC_DCLS;
     1937      789         %SYS_FUNC;
     1938      881         %INCLUDE ZI_DBU_VALDTE;
     1939     1149         %VALID_LIST;
     1940     1289         %VALID_REPT(STCLASS="STATIC SYMDEF");
     1941     1373         %INCLUDE ZI_DBU_XREF;
     1942     1540         %XREF_TBLS;
     1943     1615         %INCLUDE ZI$DIR;
     1944     1772         %DIR;
     1945     1916
     1946     1917
     1947     1918         %SUB FOREVER = "WHILE('1'B)";
     1948     1919    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
     1949     1920    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
     1950     1921    1   DCL SYS_FUNC_READ ENTRY ALTRET;
     1951     1922    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
     1952     1923    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
     1953     1924    1   DCL ZERO_SUP ENTRY(3);
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:329  
     1954     1925
     1955     1926    1       CALL OPEN_ERRFILE ALTRET(ALT_REPT);
     1956     1927    1       CALL WRITE_HEADER ALTRET(EOF); /* IF NO ERRORS,RETURN */
     1957     1928
     1958     1929
     1959     1930    2       DO FOREVER;
     1960     1931
     1961     1932    2           IF BREAK_FLAG > 0 THEN
     1962     1933    3           DO;
     1963     1934    3               DCBSF = ERRFILE.DCB#;
     1964     1935    3               CALL SYS_FUNC_CLOS;
     1965     1936    3               ALTRETURN;
     1966     1937    3               END;
     1967     1938    2           CALL READ_ERRFILE ALTRET(EOF);
     1968     1939
     1969     1940    2           CALL BINCHAR(ERR.DBK,ERROR.DBK);
     1970     1941    2           CALL ZERO_SUP(ERR.DBK,12,'1'B);
     1971     1942
     1972     1943    2           IF ERROR.RECTYP < 0 THEN
     1973     1944    3           DO; /* PA INFO IN OWNER PNTR */
     1974     1945    3               ERROR.RECTYP = ERROR.RECTYP * -1;
     1975     1946    3               PAPTRS = %YES#;
     1976     1947    3               END;
     1977     1948    2           ELSE
     1978     1949    2               PAPTRS = %NO#;
     1979     1950    2           CALL FILL_RECNAME(ERR.RECNME,ERROR.RECTYP);
     1980     1951    2           ERR.SETNME = MSTR_REF.NAME(ERROR.SETYP-5000+NO_RECS);
     1981     1952
     1982     1953    3           DO CASE(ERRCODE);
     1983     1954    3           CASE(%GRBGNXT#,%GRBGOWN#);
     1984     1955    3               CALL REPT_GRBG;
     1985     1956    3           CASE(%MULTNXT#);
     1986     1957    3               CALL REPT_MULT ALTRET(EOF);
     1987     1958
     1988     1959    3           CASE(%MMBRNXT#,%MMBRPRI#);
     1989     1960    3               CALL REPT_MMBR;
     1990     1961
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:330  
     1991     1962    3           CASE(%MISGNXT#);
     1992     1963    3               CALL REPT_MISG;
     1993     1964
     1994     1965    3           CASE(%DANGNXT#);
     1995     1966    3               CALL REPT_DANG;
     1996     1967
     1997     1968    3           CASE(%INCNOWN#);
     1998     1969    3               CALL REPT_OWN;
     1999     1970
     2000     1971    3           CASE(%DBKPRIOR#);
     2001     1972    3               CALL REPT_DBK;
     2002     1973
     2003     1974    3               END;
     2004     1975    2           END;
     2005     1976
     2006     1977    1   EOF:
     2007     1978    1       DCBSF = ERRFILE.DCB#;
     2008     1979    1       CALL SYS_FUNC_CLOS;
     2009     1980    1       RETURN;
     2010     1981
     2011     1982    1   ALT_REPT:
     2012     1983    1       ALTRETURN;
     2013     1984        /*
     2014     1985              FILL IN PA POINTER INFORMATION IN THE POINTER SLOT
     2015     1986        */
     2016     1987    1   FILL_PAINFO: PROC(PAPTR);
     2017     1988
     2018     1989    2   DCL 1 PAPTR,
     2019     1990    2         2 ENT UBIN HALF UNAL,
     2020     1991    2         2 GRP UBIN HALF UNAL;
     2021     1992    2   DCL V1 SBIN STATIC ALIGNED;
     2022     1993    2   DCL CV1 CHAR(V1) BASED CALIGNED;
     2023     1994
     2024     1995    2       CALL BINCHAR(PA_ENTRY,PAPTR.ENT);
     2025     1996    2       CALL ZERO_SUP(PA_ENTRY,3,'1'B); /* CONVERT ENTRY NUMBER TO TEXT */
     2026     1997    2       IF PAPTR.GRP=0 THEN /* NO PA GROUP PROSENTS */
     2027     1998    2           CALL CONCAT(PA_INFO,'.',PA_ENTRY);
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:331  
     2028     1999    2       ELSE
     2029     2000    3       DO; /* PA_GROUP PRESENTS, TYPE AS   .ENTNO.GRPNO */
     2030     2001    3           CALL INDEX1(V1,' ',PA_ENTRY); /* GET LENGTHC ENTRYNO */
     2031     2002    3           CALL BINCHAR(PA_GROUP,PAPTR.GRP);
     2032     2003    3           CALL ZERO_SUP(PA_GROUP,3,'1'B);
     2033     2004    3           CALL CONCAT(PA_INFO,'.',ADDR(PA_ENTRY)->CV1,'.',PA_GROUP);
     2034     2005    3           END;
     2035     2006    2   END FILL_PAINFO;
     2036     2007        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:332  
     2037     2008        /*
     2038     2009                    ERRFILE HANDLING ROUTINES
     2039     2010        */
     2040     2011    1   OPEN_ERRFILE: PROC ALTRET;
     2041     2012
     2042     2013    2   /**/ DCBNMSF = VECTOR(ERRFILE.N);
     2043     2014    2       CALL SYS_FUNC_GETDCB ALTRET(ALT);
     2044     2015    2       ERRFILE.DCB# = DCBSF;
     2045     2016
     2046     2017    2       ORGSF = %CONSEC#;
     2047     2018    2       ACSSF = %SEQUEN#;
     2048     2019    2       FUNSF = %IN#;
     2049     2020    2       FIDSF = '*ERRFILE';
     2050     2021    2       CALL SYS_FUNC_OPEN ALTRET(ALT);
     2051     2022    2       RETURN;
     2052     2023    2   ALT:
     2053     2024    2       ALTRETURN;
     2054     2025    2   END OPEN_ERRFILE;
     2055     2026
     2056     2027    1   READ_ERRFILE: PROC ALTRET;
     2057     2028
     2058     2029    2       ERROR_BUF = ' ';
     2059     2030    2   /**/ DCBSF = ERRFILE.DCB#;
     2060     2031    2       BUFSF = VECTOR(ERROR_BUF);
     2061     2032    2       BUFLNSF = 31;
     2062     2033    2       KEYSF = %NO#;
     2063     2034    2       CALL SYS_FUNC_READ ALTRET(ALTRD);
     2064     2035    2       ERRCODE = GRBGNXT.CODE; /* Code is the 7th Byte in buf */
     2065     2036
     2066     2037    2       RETURN;
     2067     2038    2   ALTRD:
     2068     2039    2       ALTRETURN;
     2069     2040    2   END READ_ERRFILE;
     2070     2041        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:333  
     2071     2042        /*
     2072     2043                    WRITE OUT HEADER FOR REPORT
     2073     2044        */
     2074     2045    1   WRITE_HEADER: PROC ALTRET;
     2075     2046
     2076     2047    2   /**/ DCBSF = DCBNUM(M$LO);
     2077     2048    2       VFCSF = %YES#;
     2078     2049    2       BUFLNSF = 30;
     2079     2050    2       BUFSF = VECTOR(VALHDR);
     2080     2051
     2081     2052    2       IF NO_ERRORS = 0 AND ZI$DIR.REPRT_ERRS = %NO# THEN
     2082     2053    3       DO;
     2083     2054    3           VALHDR.REPT = '   No  Validation  Errors';
     2084     2055    3           CALL SYS_FUNC_WRIT ALTRET(ALTWRT);
     2085     2056    3           ALTRETURN;
     2086     2057    3           END;
     2087     2058
     2088     2059    2       CALL SYS_FUNC_WRIT ALTRET(ALTWRT);
     2089     2060
     2090     2061    2       BUFSF = VECTOR(HDR);
     2091     2062    2       BUFLNSF = 81;
     2092     2063    2       CALL SYS_FUNC_WRIT;
     2093     2064
     2094     2065    2       BUFSF = VECTOR(UNDR);
     2095     2066    2       CALL SYS_FUNC_WRIT;
     2096     2067
     2097     2068    2       RETURN;
     2098     2069
     2099     2070    2   ALTWRT:
     2100     2071    2       ALTRETURN;
     2101     2072    2   END WRITE_HEADER;
     2102     2073        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:334  
     2103     2074    1   REPT_MULT: PROC ALTRET;
     2104     2075
     2105     2076    2       DCBSF = DCBNUM(M$LO);
     2106     2077    2       PTSVCNT = MULTNXT.PTCNT;
     2107     2078    3       DO I = 0 TO PTSVCNT;
     2108     2079
     2109     2080    3           CALL BINCHAR(ERR.DBK,MULTNXT.BADDBK);
     2110     2081    3           CALL ZERO_SUP(ERR.DBK,12,'1'B);
     2111     2082    3           CALL FILL_RECNAME(ERR.RECNME,MULTNXT.RECTYP);
     2112     2083    3           ERR.SETNME = MSTR_REF.NAME(MULTNXT.SETYP-5000+NO_RECS);
     2113     2084    3           IF PAPTRS = %YES# THEN
     2114     2085    4           DO; /*  GET PA INFO */
     2115     2086    4               CALL FILL_PAINFO(MULTNXT.OWNER);
     2116     2087    4               IF MULTNXT.RECTYP < 0 THEN
     2117     2088    5               DO;
     2118     2089    5                   MULTNXT.RECTYP = MULTNXT.RECTYP * -1;
     2119     2090    5                   CALL FILL_RECNAME(ERR.RECNME,MULTNXT.RECTYP);
     2120     2091    5                   END;
     2121     2092    4               ERR.PNTR = PA_INFO;
     2122     2093    4               END;
     2123     2094    3           ELSE
     2124     2095    3               ERR.PNTR = 'NEXT';
     2125     2096
     2126     2097    3           BUFSF = VECTOR(ERR);
     2127     2098    3           BUFLNSF = 81;
     2128     2099    3           CALL SYS_FUNC_WRIT ALTRET(LSTREC);
     2129     2100    3           IF I < PTSVCNT THEN /* Dont read next error yet */
     2130     2101    3               CALL READ_ERRFILE ALTRET(LASTREC);
     2131     2102    3           DCBSF = DCBNUM(M$LO);
     2132     2103    3           END;
     2133     2104    2   LASTREC:
     2134     2105    2       CALL FILL_VAL(ERRMULT.VAL,MULTNXT.BADNXT);
     2135     2106    2       DCBSF = DCBNUM(M$LO);
     2136     2107    2       BUFSF = VECTOR(ERRMULT);
     2137     2108    2       BUFLNSF = 70;
     2138     2109    2       CALL SYS_FUNC_WRIT;
     2139     2110
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:335  
     2140     2111    2       RETURN;
     2141     2112    2   LSTREC:
     2142     2113    2       CALL FILL_VAL(ERRMULT.VAL,MULTNXT.BADDBK);
     2143     2114    2       DCBSF = DCBNUM(M$LO);
     2144     2115    2       BUFSF = VECTOR(ERRMULT);
     2145     2116    2       BUFLNSF = 70;
     2146     2117    2       CALL SYS_FUNC_WRIT;
     2147     2118
     2148     2119    2       ALTRETURN;
     2149     2120    2   END REPT_MULT;
     2150     2121        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:336  
     2151     2122    1   REPT_MISG: PROC;
     2152     2123
     2153     2124    2       ERR.PNTR = '****';
     2154     2125
     2155     2126    2       DCBSF = DCBNUM(M$LO);
     2156     2127    2       BUFSF = VECTOR(ERR);
     2157     2128    2       BUFLNSF = 81;
     2158     2129    2       CALL SYS_FUNC_WRIT;
     2159     2130
     2160     2131    2       BUFSF = VECTOR(ERRMISG);
     2161     2132    2       BUFLNSF = 63;
     2162     2133    2       CALL SYS_FUNC_WRIT;
     2163     2134
     2164     2135    2       CALL BINCHAR(ERRMISG2.VAL,MISGNXT.PRI_VAL);
     2165     2136    2       CALL ZERO_SUP(ERRMISG2.VAL,12,'1'B);
     2166     2137
     2167     2138    2       BUFSF = VECTOR(ERRMISG2);
     2168     2139    2       BUFLNSF = 59;
     2169     2140    2       CALL SYS_FUNC_WRIT;
     2170     2141
     2171     2142    2       RETURN;
     2172     2143    2   END REPT_MISG;
     2173     2144        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:337  
     2174     2145        /*
     2175     2146                    REPORT PRIOR POINTER DISAGREES WITH THE PT POINTER
     2176     2147        */
     2177     2148    1   REPT_DBK: PROC;
     2178     2149
     2179     2150    2       IF PAPTRS = %YES# THEN
     2180     2151    3       DO; /*  GET PA INFO */
     2181     2152    3           CALL FILL_PAINFO(DBKPRIOR.OWNER);
     2182     2153    3           ERR.PNTR = PA_INFO;
     2183     2154    3           END;
     2184     2155    2       ELSE
     2185     2156    2           ERR.PNTR = 'PRIOR';
     2186     2157
     2187     2158    2       DCBSF = DCBNUM(M$LO);
     2188     2159    2       BUFSF = VECTOR(ERR);
     2189     2160    2       BUFLNSF = 81;
     2190     2161    2       CALL SYS_FUNC_WRIT;
     2191     2162
     2192     2163    2       CALL BINCHAR(BADPRI.VAL,DBKPRIOR.PRI_VAL);
     2193     2164    2       CALL ZERO_SUP(BADPRI.VAL,12,'1'B);
     2194     2165    2       BUFSF = VECTOR(BADPRI);
     2195     2166    2       BUFLNSF = 72;
     2196     2167    2       CALL SYS_FUNC_WRIT;
     2197     2168
     2198     2169    2       CALL BINCHAR(BADPRI2.VAL,DBKPRIOR.EXP_PRI);
     2199     2170    2       CALL ZERO_SUP(BADPRI2.VAL,12,'1'B);
     2200     2171    2       BUFSF = VECTOR(BADPRI2);
     2201     2172    2       BUFLNSF = 65;
     2202     2173    2       CALL SYS_FUNC_WRIT;
     2203     2174
     2204     2175    2       RETURN;
     2205     2176    2   END REPT_DBK;
     2206     2177        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:338  
     2207     2178
     2208     2179        /*
     2209     2180           Report inconsistant owner pointers.
     2210     2181        */
     2211     2182    1   REPT_OWN: PROC;
     2212     2183
     2213     2184    2       ERR.PNTR = 'OWNER';
     2214     2185
     2215     2186    2       DCBSF = DCBNUM(M$LO);
     2216     2187    2       BUFSF = VECTOR(ERR);
     2217     2188    2       BUFLNSF = 81;
     2218     2189    2       CALL SYS_FUNC_WRIT;
     2219     2190
     2220     2191    2       BUFSF = VECTOR(ERROWN);
     2221     2192    2       BUFLNSF = 64;
     2222     2193    2       CALL SYS_FUNC_WRIT;
     2223     2194
     2224     2195    2       CALL FILL_OWNTEXT(INCNOWN.DBK1,INCNOWN.OWNDBK1);
     2225     2196    2       ERROWN2.VFC = SKIP1;
     2226     2197    2       BUFSF = VECTOR(ERROWN2);
     2227     2198    2       BUFLNSF = 83;
     2228     2199    2       CALL SYS_FUNC_WRIT;
     2229     2200
     2230     2201    2       ERROWN2.VFC = SKIP2;
     2231     2202    2       CALL FILL_OWNTEXT(INCNOWN.DBK2,INCNOWN.OWNDBK2);
     2232     2203    2       CALL SYS_FUNC_WRIT;
     2233     2204
     2234     2205    2       RETURN;
     2235     2206    2   END REPT_OWN;
     2236     2207        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:339  
     2237     2208
     2238     2209        /*
     2239     2210                 REPORT A NEXT POINTER WHICH APPEARS TO BE GARBAGE
     2240     2211        */
     2241     2212    1   REPT_GRBG: PROC;
     2242     2213
     2243     2214    2       IF PAPTRS = %YES# THEN
     2244     2215    3       DO; /*  GET PA INFO */
     2245     2216    3           CALL FILL_PAINFO(GRBGNXT.OWNER);
     2246     2217    3           ERR.PNTR = PA_INFO;
     2247     2218    3           END;
     2248     2219    2       ELSE
     2249     2220    2           ERR.PNTR = 'NEXT';
     2250     2221    2       IF ERRCODE = %GRBGOWN# THEN
     2251     2222    2           ERR.PNTR = 'OWNER';
     2252     2223    2       DCBSF = DCBNUM(M$LO);
     2253     2224    2       BUFSF = VECTOR(ERR);
     2254     2225    2       BUFLNSF = 81;
     2255     2226    2       CALL SYS_FUNC_WRIT;
     2256     2227
     2257     2228    2       CALL FILL_VAL(ERRGRBG.VAL,GRBGNXT.NXTVAL);
     2258     2229    2       BUFSF = VECTOR(ERRGRBG);
     2259     2230    2       BUFLNSF = 71;
     2260     2231    2       CALL SYS_FUNC_WRIT;
     2261     2232
     2262     2233    2       RETURN;
     2263     2234    2   END REPT_GRBG;
     2264     2235         %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:340  
     2265     2236        /*
     2266     2237                 REPORT  DANGLING NEXT POINTER.
     2267     2238        */
     2268     2239    1   REPT_DANG: PROC;
     2269     2240
     2270     2241    2       IF PAPTRS = %YES# THEN
     2271     2242    3       DO; /*  GET PA INFO */
     2272     2243    3           CALL FILL_PAINFO(DANGNXT.OWNER);
     2273     2244    3           ERR.PNTR = PA_INFO;
     2274     2245    3           END;
     2275     2246    2       ELSE
     2276     2247    2           ERR.PNTR = 'NEXT';
     2277     2248    2       DCBSF = DCBNUM(M$LO);
     2278     2249    2       BUFSF = VECTOR(ERR);
     2279     2250    2       BUFLNSF = 81;
     2280     2251    2       CALL SYS_FUNC_WRIT;
     2281     2252
     2282     2253    2       CALL FILL_RECKEY(ERRDANG.VAL,DANGNXT.PRI_RECTYP,DANGNXT.BADPRI);
     2283     2254    2       BUFSF = VECTOR(ERRDANG);
     2284     2255    2       BUFLNSF = 83;
     2285     2256    2       CALL SYS_FUNC_WRIT;
     2286     2257
     2287     2258    2       RETURN;
     2288     2259    2   END REPT_DANG;
     2289     2260        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:341  
     2290     2261
     2291     2262        /*
     2292     2263              Report a member record pointing to itself thry prior or next.
     2293     2264        */
     2294     2265    1   REPT_MMBR: PROC;
     2295     2266
     2296     2267    2       IF PAPTRS = %YES# THEN
     2297     2268    3       DO; /*  GET PA INFO */
     2298     2269    3           CALL FILL_PAINFO(MMBR.OWNER);
     2299     2270    3           ERR.PNTR = PA_INFO;
     2300     2271    3           END;
     2301     2272    3       ELSE DO;
     2302     2273    3           IF ERRCODE = %MMBRNXT# THEN
     2303     2274    3               ERR.PNTR = 'NEXT';
     2304     2275    3           ELSE
     2305     2276    3               ERR.PNTR = 'PRIOR';
     2306     2277    3           END;
     2307     2278    2       DCBSF = DCBNUM(M$LO);
     2308     2279    2       BUFSF = VECTOR(ERR);
     2309     2280    2       BUFLNSF = 81;
     2310     2281    2       CALL SYS_FUNC_WRIT;
     2311     2282
     2312     2283    2       BUFSF = VECTOR(ERRMMBR);
     2313     2284    2       BUFLNSF = 51;
     2314     2285    2       CALL SYS_FUNC_WRIT;
     2315     2286
     2316     2287    2       RETURN;
     2317     2288    2   END REPT_MMBR;
     2318     2289        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:342  
     2319     2290
     2320     2291
     2321     2292    1   FILL_RECNAME: PROC(NAME,TYPE);
     2322     2293
     2323     2294    2   DCL NAME CHAR(30) CALIGNED;
     2324     2295    2   DCL TYPE SBIN HALF CALIGNED;
     2325     2296
     2326     2297    2       X=0;
     2327     2298    3       DO WHILE(MSTR_REF.TYPE(X) ~= TYPE AND X < NO_RECS);
     2328     2299    3           X = X+1;
     2329     2300    3           END;
     2330     2301
     2331     2302    2       IF X < NO_RECS THEN
     2332     2303    2           NAME = MSTR_REF.NAME(X);
     2333     2304    2       ELSE
     2334     2305    2           NAME = '*********';
     2335     2306
     2336     2307    2       RETURN;
     2337     2308    2   END FILL_RECNAME;
     2338     2309        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:343  
     2339     2310    1   FILL_VAL: PROC(BUF,KEY);
     2340     2311
     2341     2312    2   DCL BUF CHAR(20) CALIGNED;
     2342     2313    2   DCL KEY UBIN WORD CALIGNED;
     2343     2314
     2344     2315    2   DCL TMP CHAR(12) STATIC ALIGNED;
     2345     2316    2   DCL FIL$ PTR STATIC INIT(ADDR(TMP));
     2346     2317    2   DCL FILL BASED(FIL$) CHAR(J);
     2347     2318
     2348     2319    2       CALL BINCHAR(TMP,KEY);
     2349     2320    2       CALL ZERO_SUP(TMP,12,'1'B);
     2350     2321    2       CALL INDEX(J,' ',TMP);
     2351     2322
     2352     2323
     2353     2324    2       CALL CONCAT(BUF,'(DBK# ',FILL,')');
     2354     2325
     2355     2326    2       RETURN;
     2356     2327    2   END FILL_VAL;
     2357     2328
     2358     2329        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:344  
     2359     2330    1   FILL_RECKEY: PROC(BUF,RECTYPE,KEY);
     2360     2331
     2361     2332    2   DCL BUF CHAR(60) CALIGNED;
     2362     2333    2   DCL RECTYPE SBIN HALF CALIGNED;
     2363     2334    2   DCL KEY UBIN WORD CALIGNED;
     2364     2335    2   DCL BUF$ PTR STATIC ALIGNED;
     2365     2336    2   DCL BUFER CHAR(J) BASED(BUF$);
     2366     2337
     2367     2338    2       J= 60;
     2368     2339    2       BUF$ = ADDR(BUF);
     2369     2340    2       BUFER = ' ';
     2370     2341    2       J= 30; /* SIZE OF POSSIBLE NAME FIELD */
     2371     2342    2       CALL FILL_RECNAME(BUFER,RECTYPE);
     2372     2343    2       CALL INDEX(J,' ',BUFER);
     2373     2344    2       BUF$ = PINCRC(BUF$,J+1);
     2374     2345
     2375     2346    2       J = 7;
     2376     2347    2       BUF$ -> BUFER = 'RECORD ';
     2377     2348    2       BUF$ = PINCRC(BUF$,7);
     2378     2349
     2379     2350    2       J = 20; /* SIZE REQUIRED FOR FILL_VAL */
     2380     2351    2       CALL FILL_VAL(BUF$ -> BUFER,KEY);
     2381     2352
     2382     2353    2       RETURN;
     2383     2354    2   END FILL_RECKEY;
     2384     2355        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:345  
     2385     2356        /*
     2386     2357              Concat key info for reporting inconsistant owners.
     2387     2358        */
     2388     2359    1   FILL_OWNTEXT: PROC(KEY1,KEY2);
     2389     2360
     2390     2361    2   DCL KEY1 UBIN WORD CALIGNED;
     2391     2362    2   DCL KEY2 UBIN WORD CALIGNED;
     2392     2363
     2393     2364    2   DCL STRING BASED(STR$) CHAR(J) CALIGNED;
     2394     2365    2   DCL STR$ PTR STATIC ALIGNED;
     2395     2366    2   DCL TMP CHAR(12) STATIC CALIGNED;
     2396     2367
     2397     2368    2       ERROWN2.TEXT = '  ';
     2398     2369    2       J=5;
     2399     2370    2       STR$ = ADDR(ERROWN2.TEXT);
     2400     2371    2       STR$->STRING = 'DBK# ';
     2401     2372    2       STR$ = PINCRC(STR$,5);
     2402     2373
     2403     2374    2       CALL BINCHAR(TMP,KEY1);
     2404     2375    2       CALL ZERO_SUP(TMP,12,'1'B);
     2405     2376    2       CALL INDEX(J,' ',TMP); /* FIND SIZE OF DBK IN CHAR FORMAT */
     2406     2377    2       J = J+1;
     2407     2378    2       STR$->STRING = TMP;
     2408     2379
     2409     2380    2       STR$ = PINCRC(STR$,J);
     2410     2381    2       J = 18;
     2411     2382    2       STR$->STRING = ' IS OWNED BY DBK# ';
     2412     2383    2       STR$ = PINCRC(STR$,18);
     2413     2384
     2414     2385    2       CALL BINCHAR(TMP,KEY2);
     2415     2386    2       CALL ZERO_SUP(TMP,12,'1'B);
     2416     2387    2       CALL INDEX(J,' ',TMP);
     2417     2388    2       J = J+1;
     2418     2389    2       STR$->STRING = TMP;
     2419     2390
     2420     2391    2       RETURN;
     2421     2392    2   END FILL_OWNTEXT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:346  
     2422     2393        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:347  
     2423     2394
     2424     2395
     2425     2396    1   END ZIU$RPTVAL;

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:348  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_DBU_VALDTE.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$RPTVAL.

   Procedure ZIU$RPTVAL requires 906 words for executable code.
   Procedure ZIU$RPTVAL requires 18 words of local(AUTO) storage.

    No errors detected in file ZIU$VALSET.:ZIC0TSI    .

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:349  

 Object Unit name= ZIU$RPTVAL                                 File name= ZIU$VALSET.:ZIC0TOU
 UTS= SEP 05 '97 13:34:43.72 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   265    411  ZIU$RPTVAL
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS     29     35  ZIU$RPTVAL
    3   Proc  even  none   906   1612  ZIU$RPTVAL
    4  RoData even  none    83    123  ZIU$RPTVAL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        0  ZIU$RPTVAL
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:350  

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      6  VALHDR                             0     16  HDR
    0     43  UNDR                               0     70  ERR
    0    115  ERRGRBG                            0    137  ERRDANG
    0    171  ERRMULT                            0    213  ERRMMBR
    0    230  ERRMISG                            0    250  ERRMISG2
    0    267  BADPRI                             0    311  BADPRI2
    0    332  ERROWN                             0    352  ERROWN2

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 SYS_FUNC_CLOS
         yes           Std       3 ZERO_SUP
 yes     yes           Std       0 SYS_FUNC_GETDCB
 yes     yes           Std       0 SYS_FUNC_OPEN
 yes     yes           Std       0 SYS_FUNC_READ
 yes     yes           Std       0 SYS_FUNC_WRIT
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:351  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     PTSVCNT                               REC$                                  RB
     RE                                    IE                                    IB
     CNT                                   ICNT                                  RCNT
     SCNT                                  FIRST_SET                             RETCNT
     DMPCNT                                KCNT                                  ACNT_IDX
     I                                     J                                     K
     X                                     STEPCC                                I_O_BUF$
     OUT_INDX                              I_O_SIZE                              REC_DATA_LN
     M$LO                                  B$TCB$                                B$ROS$
     B$JIT$                                KEYFID                                I_O_KEY
     RESTART                               BREAK_FLAG                            ICHKSUM
     ITMCNT                                GAP1                                  BLKLSF
     KEYLSF                                KEYXSF                                DCBSF
     ORGSF                                 KEYSF                                 KEYVSF
     ACSSF                                 NOTIMESF                              FUNSF
     ASNSF                                 TESTSF                                XTENSIZESF
     DISPSF                                WAITSF                                VFCSF
     FULLSF                                BKUPSF                                BUFLNSF
     BUFSF                                 SOURCESF                              DESTSF
     DATESF                                TIMESF                                UTSSF
     DAYSF                                 TSTAMPSF                              ENCRP_SEEDSF
     ERRCODESF                             MSGCODE                               INCL_ERR
     ERR_INSERT                            FIDSF_RD                              ACNT
     EXISTSF                               SHARESF                               DCBNMSF
     KEYRSF                                NO_KEYSF                              REASGNSF
     CARRY_ATTRIBUTESF                     SUBMESSF                              SPKY_OPNSF
     POSSF                                 ERRFLGSF                              MERGESF
     FSA_FLAG                              RELGSF                                UNUSED
     HELPCODE                              COUNTSF                               INDEXSF
     GAP                                   PSNSF                                 ACNTSF
     KEY_SHADWSF                           BREAK_LOCAT                           RECLIST
     SETLIST                               SETINDX                               RECINDX
     HIGH_RECINDX                          EGREC$                                EGINDX
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:352  
     NO_EGRECS                             NO_EGBUFS                             LAST_EGINDX
     CURREG                                CURRPT                                EGFILE
     ERRFILE                               NO_ERRORS                             ERROR_BUF
     ERRBUF$                               TYPE                                  MSTR$
     NXT_MSLOT                             MAX_MSLOT                             MSTR_INDX
     HASHTBL                               HASHINDX                              LOC_MODE
     AREA_KEY$                             NO_AREAS                              GLBL_PTR_SZ
     SET_XREF$                             NXT_SSLOT                             MAX_SSLOT
     REC_XREF$                             NXT_RSLOT                             MAX_RSLOT
     NO_RECS                               NO_SETS                               XREF_BUILT
     TYPESET                               TYPEREC                               ZI$DIR
     SCHEMA_ACTIVE                         RECORD_LIST                           SET_LIST
     RETAIN_LIST                           DUMP_FID                              ALTKY
     INIT_RG                               KEY_RNG                               ITEM_LIST

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:353  


     1917        1        /*M* ZIU$RPTVAL   IDSII    UTILITIES SET VALIDATION REPORT         */
     1918        2        /*T***********************************************************/
     1919        3        /*T*                                                         */
     1920        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1921        5        /*T*                                                         */
     1922        6        /*T***********************************************************/
     1923        7        ZIU$RPTVAL: PROC ALTRET;

      7  3 000000   000000 700200 xent  ZIU$RPTVAL   TSX0  ! X66_AUTO_0
         3 000001   000022 000000                    ZERO    18,0

     1924        8
     1925        9
     1926       10    1   DCL ERRCODE SBIN WORD STATIC ALIGNED;
     1927       11    1   DCL PAPTRS BIT(1) STATIC ALIGNED;
     1928       12    1   DCL PTSVCNT SBIN WORD SYMREF ALIGNED;
     1929       13
     1930       14    1   DCL PA_ENTRY CHAR(3) STATIC ALIGNED;
     1931       15    1   DCL PA_GROUP CHAR(3) STATIC ALIGNED;
     1932       16    1   DCL PA_INFO CHAR(7) STATIC ALIGNED;
     1933       17
     1934       18         %INCLUDE CP_6_SUBS;
     1935      558         %INCLUDE ZI_GLOBAL_DBUTIL;
     1936      736         %MISC_DCLS;
     1937      789         %SYS_FUNC;
     1938      881         %INCLUDE ZI_DBU_VALDTE;
     1939     1149         %VALID_LIST;
     1940     1289         %VALID_REPT(STCLASS="STATIC SYMDEF");
     1941     1373         %INCLUDE ZI_DBU_XREF;
     1942     1540         %XREF_TBLS;
     1943     1615         %INCLUDE ZI$DIR;
     1944     1772         %DIR;
     1945     1916
     1946     1917
     1947     1918         %SUB FOREVER = "WHILE('1'B)";
     1948     1919    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:354  
     1949     1920    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
     1950     1921    1   DCL SYS_FUNC_READ ENTRY ALTRET;
     1951     1922    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
     1952     1923    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
     1953     1924    1   DCL ZERO_SUP ENTRY(3);
     1954     1925
     1955     1926    1       CALL OPEN_ERRFILE ALTRET(ALT_REPT);

   1926  3 000002   000254 701000 3                  TSX1    OPEN_ERRFILE
         3 000003   000147 702000 3                  TSX2    ALT_REPT

     1956     1927    1       CALL WRITE_HEADER ALTRET(EOF); /* IF NO ERRORS,RETURN */

   1927  3 000004   000337 701000 3                  TSX1    WRITE_HEADER
         3 000005   000136 702000 3                  TSX2    EOF

     1957     1928
     1958     1929
     1959     1930    2       DO FOREVER;

     1960     1931
     1961     1932    2           IF BREAK_FLAG > 0 THEN

   1932  3 000006   000000 235000 xsym               LDA     BREAK_FLAG
         3 000007   000021 604400 3                  TMOZ    s:1938

     1962     1933    3           DO;

     1963     1934    3               DCBSF = ERRFILE.DCB#;

   1934  3 000010   000001 236000 xsym               LDQ     ERRFILE+1
         3 000011   000011 772000                    QRL     9
         3 000012   777777 376007                    ANQ     -1,DL
         3 000013   000000 620006                    EAX0    0,QL
         3 000014   000000 740000 xsym               STX0    DCBSF

     1964     1935    3               CALL SYS_FUNC_CLOS;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:355  

   1935  3 000015   000000 631400 4                  EPPR1   0
         3 000016   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         3 000017   000000 011000                    NOP     0

     1965     1936    3               ALTRETURN;

   1936  3 000020   000000 702200 xent               TSX2  ! X66_AALT

     1966     1937    3               END;
     1967     1938    2           CALL READ_ERRFILE ALTRET(EOF);

   1938  3 000021   000305 701000 3                  TSX1    READ_ERRFILE
         3 000022   000136 702000 3                  TSX2    EOF

     1968     1939
     1969     1940    2           CALL BINCHAR(ERR.DBK,ERROR.DBK);

   1940  3 000023   000000 470400 xsym               LDP0    ERRBUF$
         3 000024   000000 235100                    LDA     0,,PR0
         3 000025   000001 236100                    LDQ     1,,PR0
         3 000026   000022 773000                    LRL     18
         3 000027   000000 235003                    LDA     0,DU
         3 000030   200016 757100                    STAQ    @KEY+2,,AUTO
         3 000031   000000 301500                    BTD
         3 000032   200016 000010                    NDSC9   @KEY+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000033   000070 230014 0                  NDSC9   ERR                      cn=1,s=nosgn,sf=0,n=12

     1970     1941    2           CALL ZERO_SUP(ERR.DBK,12,'1'B);

   1941  3 000034   000004 630400 4                  EPPR0   4
         3 000035   000001 631400 4                  EPPR1   1
         3 000036   000000 701000 xent               TSX1    ZERO_SUP
         3 000037   000000 011000                    NOP     0

     1971     1942
     1972     1943    2           IF ERROR.RECTYP < 0 THEN
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:356  

   1943  3 000040   000000 470400 xsym               LDP0    ERRBUF$
         3 000041   000001 720100                    LXL0    1,,PR0
         3 000042   000051 605000 3                  TPL     s:1949

     1973     1944    3           DO; /* PA INFO IN OWNER PNTR */

     1974     1945    3               ERROR.RECTYP = ERROR.RECTYP * -1;

   1945  3 000043   777777 620010                    EAX0    -1,X0
         3 000044   777777 660003                    ERX0    -1,DU
         3 000045   000001 440100                    SXL0    1,,PR0

     1975     1946    3               PAPTRS = %YES#;

   1946  3 000046   400000 236003                    LDQ     -131072,DU
         3 000047   000001 756000 0                  STQ     PAPTRS

     1976     1947    3               END;

   1947  3 000050   000052 710000 3                  TRA     s:1950

     1977     1948    2           ELSE
     1978     1949    2               PAPTRS = %NO#;

   1949  3 000051   000001 450000 0                  STZ     PAPTRS

     1979     1950    2           CALL FILL_RECNAME(ERR.RECNME,ERROR.RECTYP);

   1950  3 000052   000000 236000 xsym               LDQ     ERRBUF$
         3 000053   000007 036000 4                  ADLQ    7
         3 000054   200014 756100                    STQ     @BUF+1,,AUTO
         3 000055   000010 236000 4                  LDQ     8
         3 000056   200013 756100                    STQ     @KEY+2,,AUTO
         3 000057   001302 701000 3                  TSX1    FILL_RECNAME
         3 000060   000000 011000                    NOP     0

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:357  
     1980     1951    2           ERR.SETNME = MSTR_REF.NAME(ERROR.SETYP-5000+NO_RECS);

   1951  3 000061   000000 470400 xsym               LDP0    ERRBUF$
         3 000062   000000 236100                    LDQ     0,,PR0
         3 000063   000022 732000                    QRS     18
         3 000064   000000 036000 xsym               ADLQ    NO_RECS
         3 000065   000050 402007                    MPY     40,DL
         3 000066   000000 471400 xsym               LDP1    MSTR$
         3 000067   600000 136007                    SBLQ    -65536,DL
         3 000070   040000 100506                    MLR     fill='040'O
         3 000071   176261 400036                    ADSC9   -847,Q,PR1               cn=2,n=30
         3 000072   000104 600036 0                  ADSC9   ERR+12                   cn=3,n=30

     1981     1952
     1982     1953    3           DO CASE(ERRCODE);

   1953  3 000073   000000 235000 0                  LDA     ERRCODE
         3 000074   000012 115007                    CMPA    10,DL
         3 000075   000077 602005 3                  TNC     s:1953+4,AL
         3 000076   000006 710000 3                  TRA     s:1932
         3 000077   000135 710000 3                  TRA     s:1975
         3 000100   000111 710000 3                  TRA     s:1955
         3 000101   000114 710000 3                  TRA     s:1957
         3 000102   000117 710000 3                  TRA     s:1960
         3 000103   000122 710000 3                  TRA     s:1963
         3 000104   000125 710000 3                  TRA     s:1966
         3 000105   000130 710000 3                  TRA     s:1969
         3 000106   000133 710000 3                  TRA     s:1972
         3 000107   000117 710000 3                  TRA     s:1960
         3 000110   000111 710000 3                  TRA     s:1955

     1983     1954    3           CASE(%GRBGNXT#,%GRBGOWN#);

     1984     1955    3               CALL REPT_GRBG;

   1955  3 000111   001070 701000 3                  TSX1    REPT_GRBG
         3 000112   000000 011000                    NOP     0
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:358  
         3 000113   000006 710000 3                  TRA     s:1932

     1985     1956    3           CASE(%MULTNXT#);

     1986     1957    3               CALL REPT_MULT ALTRET(EOF);

   1957  3 000114   000414 701000 3                  TSX1    REPT_MULT
         3 000115   000136 702000 3                  TSX2    EOF
         3 000116   000006 710000 3                  TRA     s:1932

     1987     1958
     1988     1959    3           CASE(%MMBRNXT#,%MMBRPRI#);

     1989     1960    3               CALL REPT_MMBR;

   1960  3 000117   001227 701000 3                  TSX1    REPT_MMBR
         3 000120   000000 011000                    NOP     0
         3 000121   000006 710000 3                  TRA     s:1932

     1990     1961
     1991     1962    3           CASE(%MISGNXT#);

     1992     1963    3               CALL REPT_MISG;

   1963  3 000122   000614 701000 3                  TSX1    REPT_MISG
         3 000123   000000 011000                    NOP     0
         3 000124   000006 710000 3                  TRA     s:1932

     1993     1964
     1994     1965    3           CASE(%DANGNXT#);

     1995     1966    3               CALL REPT_DANG;

   1966  3 000125   001151 701000 3                  TSX1    REPT_DANG
         3 000126   000000 011000                    NOP     0
         3 000127   000006 710000 3                  TRA     s:1932

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:359  
     1996     1967
     1997     1968    3           CASE(%INCNOWN#);

     1998     1969    3               CALL REPT_OWN;

   1969  3 000130   001000 701000 3                  TSX1    REPT_OWN
         3 000131   000000 011000                    NOP     0
         3 000132   000006 710000 3                  TRA     s:1932

     1999     1970
     2000     1971    3           CASE(%DBKPRIOR#);

     2001     1972    3               CALL REPT_DBK;

   1972  3 000133   000672 701000 3                  TSX1    REPT_DBK
         3 000134   000000 011000                    NOP     0

     2002     1973
     2003     1974    3               END;

     2004     1975    2           END;

   1975  3 000135   000006 710000 3                  TRA     s:1932

     2005     1976
     2006     1977    1   EOF:
     2007     1978    1       DCBSF = ERRFILE.DCB#;

   1978  3 000136   000001 236000 xsym  EOF          LDQ     ERRFILE+1
         3 000137   000011 772000                    QRL     9
         3 000140   777777 376007                    ANQ     -1,DL
         3 000141   000000 620006                    EAX0    0,QL
         3 000142   000000 740000 xsym               STX0    DCBSF

     2008     1979    1       CALL SYS_FUNC_CLOS;

   1979  3 000143   000000 631400 4                  EPPR1   0
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:360  
         3 000144   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         3 000145   000000 011000                    NOP     0

     2009     1980    1       RETURN;

   1980  3 000146   000000 702200 xent               TSX2  ! X66_ARET

     2010     1981
     2011     1982    1   ALT_REPT:
     2012     1983    1       ALTRETURN;

   1983  3 000147   000000 702200 xent  ALT_REPT     TSX2  ! X66_AALT

     2013     1984        /*
     2014     1985              FILL IN PA POINTER INFORMATION IN THE POINTER SLOT
     2015     1986        */
     2016     1987    1   FILL_PAINFO: PROC(PAPTR);

   1987  3 000150   200006 741300       FILL_PAINFO  STX1  ! 6,,AUTO

     2017     1988
     2018     1989    2   DCL 1 PAPTR,
     2019     1990    2         2 ENT UBIN HALF UNAL,
     2020     1991    2         2 GRP UBIN HALF UNAL;
     2021     1992    2   DCL V1 SBIN STATIC ALIGNED;
     2022     1993    2   DCL CV1 CHAR(V1) BASED CALIGNED;
     2023     1994
     2024     1995    2       CALL BINCHAR(PA_ENTRY,PAPTR.ENT);

   1995  3 000151   200007 470500                    LDP0    @PAPTR,,AUTO
         3 000152   003100 061500                    CSR     bolr='003'O
         3 000153   000000 000022                    BDSC    0,,PR0                   by=0,bit=0,n=18
         3 000154   200016 000044                    BDSC    @KEY+2,,AUTO             by=0,bit=0,n=36
         3 000155   200016 236100                    LDQ     @KEY+2,,AUTO
         3 000156   000000 235003                    LDA     0,DU
         3 000157   200020 757100                    STAQ    @KEY+4,,AUTO
         3 000160   000000 301500                    BTD
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:361  
         3 000161   200020 000010                    NDSC9   @KEY+4,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000162   000002 030003 0                  NDSC9   PA_ENTRY                 cn=0,s=nosgn,sf=0,n=3

     2025     1996    2       CALL ZERO_SUP(PA_ENTRY,3,'1'B); /* CONVERT ENTRY NUMBER TO TEXT */

   1996  3 000163   000012 630400 4                  EPPR0   10
         3 000164   000001 631400 4                  EPPR1   1
         3 000165   000000 701000 xent               TSX1    ZERO_SUP
         3 000166   000000 011000                    NOP     0

     2026     1997    2       IF PAPTR.GRP=0 THEN /* NO PA GROUP PROSENTS */

   1997  3 000167   200007 470500                    LDP0    @PAPTR,,AUTO
         3 000170   003100 061500                    CSR     bolr='003'O
         3 000171   000000 400022                    BDSC    0,,PR0                   by=2,bit=0,n=18
         3 000172   200016 000044                    BDSC    @KEY+2,,AUTO             by=0,bit=0,n=36
         3 000173   200016 236100                    LDQ     @KEY+2,,AUTO
         3 000174   000000 116003                    CMPQ    0,DU
         3 000175   000204 601000 3                  TNZ     s:2001

     2027     1998    2           CALL CONCAT(PA_INFO,'.',PA_ENTRY);

   1998  3 000176   056000 236003                    LDQ     23552,DU
         3 000177   000004 756000 0                  STQ     PA_INFO
         3 000200   040000 100400                    MLR     fill='040'O
         3 000201   000002 000003 0                  ADSC9   PA_ENTRY                 cn=0,n=3
         3 000202   000004 200006 0                  ADSC9   PA_INFO                  cn=1,n=6
         3 000203   000252 710000 3                  TRA     s:2006

     2028     1999    2       ELSE
     2029     2000    3       DO; /* PA_GROUP PRESENTS, TYPE AS   .ENTNO.GRPNO */

     2030     2001    3           CALL INDEX1(V1,' ',PA_ENTRY); /* GET LENGTHC ENTRYNO */

   2001  3 000204   000000 124400                    SCM     mask='000'O
         3 000205   000002 000003 0                  ADSC9   PA_ENTRY                 cn=0,n=3
         3 000206   000015 000001 4                  ADSC9   13                       cn=0,n=1
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:362  
         3 000207   000377 000000 0                  ARG     V1

     2031     2002    3           CALL BINCHAR(PA_GROUP,PAPTR.GRP);

   2002  3 000210   003100 061500                    CSR     bolr='003'O
         3 000211   000000 400022                    BDSC    0,,PR0                   by=2,bit=0,n=18
         3 000212   200016 000044                    BDSC    @KEY+2,,AUTO             by=0,bit=0,n=36
         3 000213   200016 236100                    LDQ     @KEY+2,,AUTO
         3 000214   000000 235003                    LDA     0,DU
         3 000215   200020 757100                    STAQ    @KEY+4,,AUTO
         3 000216   000000 301500                    BTD
         3 000217   200020 000010                    NDSC9   @KEY+4,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000220   000003 030003 0                  NDSC9   PA_GROUP                 cn=0,s=nosgn,sf=0,n=3

     2032     2003    3           CALL ZERO_SUP(PA_GROUP,3,'1'B);

   2003  3 000221   000016 630400 4                  EPPR0   14
         3 000222   000001 631400 4                  EPPR1   1
         3 000223   000000 701000 xent               TSX1    ZERO_SUP
         3 000224   000000 011000                    NOP     0

     2033     2004    3           CALL CONCAT(PA_INFO,'.',ADDR(PA_ENTRY)->CV1,'.',PA_GROUP);

   2004  3 000225   056000 236003                    LDQ     23552,DU
         3 000226   000004 756000 0                  STQ     PA_INFO
         3 000227   000377 720000 0                  LXL0    V1
         3 000230   040000 100440                    MLR     fill='040'O
         3 000231   000002 000010 0                  ADSC9   PA_ENTRY                 cn=0,n=*X0
         3 000232   000004 200006 0                  ADSC9   PA_INFO                  cn=1,n=6
         3 000233   000377 236000 0                  LDQ     V1
         3 000234   000006 116007                    CMPQ    6,DL
         3 000235   000252 605000 3                  TPL     s:2006
         3 000236   777771 621006                    EAX1    -7,QL
         3 000237   777777 661003                    ERX1    -1,DU
         3 000240   040046 100400                    MLR     fill='040'O
         3 000241   000021 000001 4                  ADSC9   17                       cn=0,n=1
         3 000242   000004 200011 0                  ADSC9   PA_INFO,Q                cn=1,n=*X1
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:363  
         3 000243   000005 116007                    CMPQ    5,DL
         3 000244   000252 605000 3                  TPL     s:2006
         3 000245   777772 622006                    EAX2    -6,QL
         3 000246   777777 662003                    ERX2    -1,DU
         3 000247   040046 100400                    MLR     fill='040'O
         3 000250   000003 000003 0                  ADSC9   PA_GROUP                 cn=0,n=3
         3 000251   000004 400012 0                  ADSC9   PA_INFO,Q                cn=2,n=*X2

     2034     2005    3           END;

     2035     2006    2   END FILL_PAINFO;

   2006  3 000252   200006 221300                    LDX1  ! 6,,AUTO
         3 000253   000001 702211                    TSX2  ! 1,X1

     2036     2007        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:364  
     2037     2008        /*
     2038     2009                    ERRFILE HANDLING ROUTINES
     2039     2010        */
     2040     2011    1   OPEN_ERRFILE: PROC ALTRET;

   2011  3 000254   200004 741300       OPEN_ERRFILE STX1  ! 4,,AUTO

     2041     2012
     2042     2013    2   /**/ DCBNMSF = VECTOR(ERRFILE.N);

   2013  3 000255   000022 237000 4                  LDAQ    18
         3 000256   000000 755000 xsym               STA     DCBNMSF
         3 000257   000001 756000 xsym               STQ     DCBNMSF+1

     2043     2014    2       CALL SYS_FUNC_GETDCB ALTRET(ALT);

   2014  3 000260   000000 631400 4                  EPPR1   0
         3 000261   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         3 000262   000303 702000 3                  TSX2    ALT

     2044     2015    2       ERRFILE.DCB# = DCBSF;

   2015  3 000263   000000 236000 xsym               LDQ     DCBSF
         3 000264   000011 772000                    QRL     9
         3 000265   000001 552030 xsym               STBQ    ERRFILE+1,'30'O

     2045     2016
     2046     2017    2       ORGSF = %CONSEC#;

   2017  3 000266   000001 235007                    LDA     1,DL
         3 000267   000000 755000 xsym               STA     ORGSF

     2047     2018    2       ACSSF = %SEQUEN#;

   2018  3 000270   000000 755000 xsym               STA     ACSSF

     2048     2019    2       FUNSF = %IN#;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:365  

   2019  3 000271   000002 236007                    LDQ     2,DL
         3 000272   000000 756000 xsym               STQ     FUNSF

     2049     2020    2       FIDSF = '*ERRFILE';

   2020  3 000273   040000 100400                    MLR     fill='040'O
         3 000274   000000 000010 2                  ADSC9   0                        cn=0,n=8
         3 000275   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

     2050     2021    2       CALL SYS_FUNC_OPEN ALTRET(ALT);

   2021  3 000276   000000 631400 4                  EPPR1   0
         3 000277   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         3 000300   000303 702000 3                  TSX2    ALT

     2051     2022    2       RETURN;

   2022  3 000301   200004 221300                    LDX1  ! 4,,AUTO
         3 000302   000001 702211                    TSX2  ! 1,X1

     2052     2023    2   ALT:
     2053     2024    2       ALTRETURN;

   2024  3 000303   200004 221300       ALT          LDX1  ! 4,,AUTO
         3 000304   000000 702211                    TSX2  ! 0,X1

     2054     2025    2   END OPEN_ERRFILE;
     2055     2026
     2056     2027    1   READ_ERRFILE: PROC ALTRET;

   2027  3 000305   200006 741300       READ_ERRFILE STX1  ! 6,,AUTO

     2057     2028
     2058     2029    2       ERROR_BUF = ' ';

   2029  3 000306   040000 100400                    MLR     fill='040'O
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:366  
         3 000307   000015 000001 4                  ADSC9   13                       cn=0,n=1
         3 000310   000000 000036 xsym               ADSC9   ERROR_BUF                cn=0,n=30

     2059     2030    2   /**/ DCBSF = ERRFILE.DCB#;

   2030  3 000311   000001 236000 xsym               LDQ     ERRFILE+1
         3 000312   000011 772000                    QRL     9
         3 000313   777777 376007                    ANQ     -1,DL
         3 000314   000000 620006                    EAX0    0,QL
         3 000315   000000 740000 xsym               STX0    DCBSF

     2060     2031    2       BUFSF = VECTOR(ERROR_BUF);

   2031  3 000316   000024 237000 4                  LDAQ    20
         3 000317   000000 755000 xsym               STA     BUFSF
         3 000320   000001 756000 xsym               STQ     BUFSF+1

     2061     2032    2       BUFLNSF = 31;

   2032  3 000321   000037 235007                    LDA     31,DL
         3 000322   000000 755000 xsym               STA     BUFLNSF

     2062     2033    2       KEYSF = %NO#;

   2033  3 000323   000000 450000 xsym               STZ     KEYSF

     2063     2034    2       CALL SYS_FUNC_READ ALTRET(ALTRD);

   2034  3 000324   000000 631400 4                  EPPR1   0
         3 000325   000000 701000 xent               TSX1    SYS_FUNC_READ
         3 000326   000335 702000 3                  TSX2    ALTRD

     2064     2035    2       ERRCODE = GRBGNXT.CODE; /* Code is the 7th Byte in buf */

   2035  3 000327   000000 470400 xsym               LDP0    ERRBUF$
         3 000330   000002 236100                    LDQ     2,,PR0
         3 000331   000033 772000                    QRL     27
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:367  
         3 000332   000000 756000 0                  STQ     ERRCODE

     2065     2036
     2066     2037    2       RETURN;

   2037  3 000333   200006 221300                    LDX1  ! 6,,AUTO
         3 000334   000001 702211                    TSX2  ! 1,X1

     2067     2038    2   ALTRD:
     2068     2039    2       ALTRETURN;

   2039  3 000335   200006 221300       ALTRD        LDX1  ! 6,,AUTO
         3 000336   000000 702211                    TSX2  ! 0,X1

     2069     2040    2   END READ_ERRFILE;
     2070     2041        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:368  
     2071     2042        /*
     2072     2043                    WRITE OUT HEADER FOR REPORT
     2073     2044        */
     2074     2045    1   WRITE_HEADER: PROC ALTRET;

   2045  3 000337   200004 741300       WRITE_HEADER STX1  ! 4,,AUTO

     2075     2046
     2076     2047    2   /**/ DCBSF = DCBNUM(M$LO);

   2047  3 000340   000000 236007 xsym               LDQ     M$LO,DL
         3 000341   000000 620006                    EAX0    0,QL
         3 000342   000000 740000 xsym               STX0    DCBSF

     2077     2048    2       VFCSF = %YES#;

   2048  3 000343   400000 236003                    LDQ     -131072,DU
         3 000344   000000 756000 xsym               STQ     VFCSF

     2078     2049    2       BUFLNSF = 30;

   2049  3 000345   000036 235007                    LDA     30,DL
         3 000346   000000 755000 xsym               STA     BUFLNSF

     2079     2050    2       BUFSF = VECTOR(VALHDR);

   2050  3 000347   000026 237000 4                  LDAQ    22
         3 000350   000000 755000 xsym               STA     BUFSF
         3 000351   000001 756000 xsym               STQ     BUFSF+1

     2080     2051
     2081     2052    2       IF NO_ERRORS = 0 AND ZI$DIR.REPRT_ERRS = %NO# THEN

   2052  3 000352   000000 235000 xsym               LDA     NO_ERRORS
         3 000353   000367 601000 3                  TNZ     s:2059
         3 000354   000125 236000 xsym               LDQ     ZI$DIR+85
         3 000355   000040 316007                    CANQ    32,DL
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:369  
         3 000356   000367 601000 3                  TNZ     s:2059

     2082     2053    3       DO;

     2083     2054    3           VALHDR.REPT = '   No  Validation  Errors';

   2054  3 000357   040000 100400                    MLR     fill='040'O
         3 000360   000002 000031 2                  ADSC9   2                        cn=0,n=25
         3 000361   000006 200035 0                  ADSC9   VALHDR                   cn=1,n=29

     2084     2055    3           CALL SYS_FUNC_WRIT ALTRET(ALTWRT);

   2055  3 000362   000000 631400 4                  EPPR1   0
         3 000363   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000364   000412 702000 3                  TSX2    ALTWRT

     2085     2056    3           ALTRETURN;

   2056  3 000365   200004 221300                    LDX1  ! 4,,AUTO
         3 000366   000000 702211                    TSX2  ! 0,X1

     2086     2057    3           END;
     2087     2058
     2088     2059    2       CALL SYS_FUNC_WRIT ALTRET(ALTWRT);

   2059  3 000367   000000 631400 4                  EPPR1   0
         3 000370   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000371   000412 702000 3                  TSX2    ALTWRT

     2089     2060
     2090     2061    2       BUFSF = VECTOR(HDR);

   2061  3 000372   000030 237000 4                  LDAQ    24
         3 000373   000000 755000 xsym               STA     BUFSF
         3 000374   000001 756000 xsym               STQ     BUFSF+1

     2091     2062    2       BUFLNSF = 81;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:370  

   2062  3 000375   000121 235007                    LDA     81,DL
         3 000376   000000 755000 xsym               STA     BUFLNSF

     2092     2063    2       CALL SYS_FUNC_WRIT;

   2063  3 000377   000000 631400 4                  EPPR1   0
         3 000400   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000401   000000 011000                    NOP     0

     2093     2064
     2094     2065    2       BUFSF = VECTOR(UNDR);

   2065  3 000402   000032 237000 4                  LDAQ    26
         3 000403   000000 755000 xsym               STA     BUFSF
         3 000404   000001 756000 xsym               STQ     BUFSF+1

     2095     2066    2       CALL SYS_FUNC_WRIT;

   2066  3 000405   000000 631400 4                  EPPR1   0
         3 000406   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000407   000000 011000                    NOP     0

     2096     2067
     2097     2068    2       RETURN;

   2068  3 000410   200004 221300                    LDX1  ! 4,,AUTO
         3 000411   000001 702211                    TSX2  ! 1,X1

     2098     2069
     2099     2070    2   ALTWRT:
     2100     2071    2       ALTRETURN;

   2071  3 000412   200004 221300       ALTWRT       LDX1  ! 4,,AUTO
         3 000413   000000 702211                    TSX2  ! 0,X1

     2101     2072    2   END WRITE_HEADER;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:371  
     2102     2073        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:372  
     2103     2074    1   REPT_MULT: PROC ALTRET;

   2074  3 000414   200004 741300       REPT_MULT    STX1  ! 4,,AUTO

     2104     2075
     2105     2076    2       DCBSF = DCBNUM(M$LO);

   2076  3 000415   000000 236007 xsym               LDQ     M$LO,DL
         3 000416   000000 620006                    EAX0    0,QL
         3 000417   000000 740000 xsym               STX0    DCBSF

     2106     2077    2       PTSVCNT = MULTNXT.PTCNT;

   2077  3 000420   000000 470400 xsym               LDP0    ERRBUF$
         3 000421   000003 236100                    LDQ     3,,PR0
         3 000422   000011 736000                    QLS     9
         3 000423   000033 732000                    QRS     27
         3 000424   000000 756000 xsym               STQ     PTSVCNT

     2107     2078    3       DO I = 0 TO PTSVCNT;

   2078  3 000425   000000 450000 xsym               STZ     I
         3 000426   000541 710000 3                  TRA     s:2103+1

     2108     2079
     2109     2080    3           CALL BINCHAR(ERR.DBK,MULTNXT.BADDBK);

   2080  3 000427   000000 470400 xsym               LDP0    ERRBUF$
         3 000430   000002 235100                    LDA     2,,PR0
         3 000431   000003 236100                    LDQ     3,,PR0
         3 000432   000033 773000                    LRL     27
         3 000433   000000 235003                    LDA     0,DU
         3 000434   200016 757100                    STAQ    @KEY+2,,AUTO
         3 000435   000000 301500                    BTD
         3 000436   200016 000010                    NDSC9   @KEY+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000437   000070 230014 0                  NDSC9   ERR                      cn=1,s=nosgn,sf=0,n=12

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:373  
     2110     2081    3           CALL ZERO_SUP(ERR.DBK,12,'1'B);

   2081  3 000440   000004 630400 4                  EPPR0   4
         3 000441   000001 631400 4                  EPPR1   1
         3 000442   000000 701000 xent               TSX1    ZERO_SUP
         3 000443   000000 011000                    NOP     0

     2111     2082    3           CALL FILL_RECNAME(ERR.RECNME,MULTNXT.RECTYP);

   2082  3 000444   000000 236000 xsym               LDQ     ERRBUF$
         3 000445   000007 036000 4                  ADLQ    7
         3 000446   200014 756100                    STQ     @BUF+1,,AUTO
         3 000447   000010 236000 4                  LDQ     8
         3 000450   200013 756100                    STQ     @KEY+2,,AUTO
         3 000451   001302 701000 3                  TSX1    FILL_RECNAME
         3 000452   000000 011000                    NOP     0

     2112     2083    3           ERR.SETNME = MSTR_REF.NAME(MULTNXT.SETYP-5000+NO_RECS);

   2083  3 000453   000000 470400 xsym               LDP0    ERRBUF$
         3 000454   000000 236100                    LDQ     0,,PR0
         3 000455   000022 732000                    QRS     18
         3 000456   000000 036000 xsym               ADLQ    NO_RECS
         3 000457   000050 402007                    MPY     40,DL
         3 000460   000000 471400 xsym               LDP1    MSTR$
         3 000461   600000 136007                    SBLQ    -65536,DL
         3 000462   040000 100506                    MLR     fill='040'O
         3 000463   176261 400036                    ADSC9   -847,Q,PR1               cn=2,n=30
         3 000464   000104 600036 0                  ADSC9   ERR+12                   cn=3,n=30

     2113     2084    3           IF PAPTRS = %YES# THEN

   2084  3 000465   000001 234000 0                  SZN     PAPTRS
         3 000466   000515 605000 3                  TPL     s:2095

     2114     2085    4           DO; /*  GET PA INFO */

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:374  
     2115     2086    4               CALL FILL_PAINFO(MULTNXT.OWNER);

   2086  3 000467   000000 236000 xsym               LDQ     ERRBUF$
         3 000470   000034 036000 4                  ADLQ    28
         3 000471   200007 756100                    STQ     @PAPTR,,AUTO
         3 000472   000150 701000 3                  TSX1    FILL_PAINFO
         3 000473   000000 011000                    NOP     0

     2116     2087    4               IF MULTNXT.RECTYP < 0 THEN

   2087  3 000474   000000 470400 xsym               LDP0    ERRBUF$
         3 000475   000001 720100                    LXL0    1,,PR0
         3 000476   000511 605000 3                  TPL     s:2092

     2117     2088    5               DO;

     2118     2089    5                   MULTNXT.RECTYP = MULTNXT.RECTYP * -1;

   2089  3 000477   777777 620010                    EAX0    -1,X0
         3 000500   777777 660003                    ERX0    -1,DU
         3 000501   000001 440100                    SXL0    1,,PR0

     2119     2090    5                   CALL FILL_RECNAME(ERR.RECNME,MULTNXT.RECTYP);

   2090  3 000502   000000 236000 xsym               LDQ     ERRBUF$
         3 000503   000007 036000 4                  ADLQ    7
         3 000504   200014 756100                    STQ     @BUF+1,,AUTO
         3 000505   000010 236000 4                  LDQ     8
         3 000506   200013 756100                    STQ     @KEY+2,,AUTO
         3 000507   001302 701000 3                  TSX1    FILL_RECNAME
         3 000510   000000 011000                    NOP     0

     2120     2091    5                   END;

     2121     2092    4               ERR.PNTR = PA_INFO;

   2092  3 000511   040000 100400                    MLR     fill='040'O
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:375  
         3 000512   000004 000007 0                  ADSC9   PA_INFO                  cn=0,n=7
         3 000513   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2122     2093    4               END;

   2093  3 000514   000520 710000 3                  TRA     s:2097

     2123     2094    3           ELSE
     2124     2095    3               ERR.PNTR = 'NEXT';

   2095  3 000515   040000 100400                    MLR     fill='040'O
         3 000516   000011 000004 2                  ADSC9   9                        cn=0,n=4
         3 000517   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2125     2096
     2126     2097    3           BUFSF = VECTOR(ERR);

   2097  3 000520   000036 237000 4                  LDAQ    30
         3 000521   000000 755000 xsym               STA     BUFSF
         3 000522   000001 756000 xsym               STQ     BUFSF+1

     2127     2098    3           BUFLNSF = 81;

   2098  3 000523   000121 235007                    LDA     81,DL
         3 000524   000000 755000 xsym               STA     BUFLNSF

     2128     2099    3           CALL SYS_FUNC_WRIT ALTRET(LSTREC);

   2099  3 000525   000000 631400 4                  EPPR1   0
         3 000526   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000527   000570 702000 3                  TSX2    LSTREC

     2129     2100    3           IF I < PTSVCNT THEN /* Dont read next error yet */

   2100  3 000530   000000 236000 xsym               LDQ     I
         3 000531   000000 116000 xsym               CMPQ    PTSVCNT
         3 000532   000535 605000 3                  TPL     s:2102
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:376  

     2130     2101    3               CALL READ_ERRFILE ALTRET(LASTREC);

   2101  3 000533   000305 701000 3                  TSX1    READ_ERRFILE
         3 000534   000544 702000 3                  TSX2    LASTREC

     2131     2102    3           DCBSF = DCBNUM(M$LO);

   2102  3 000535   000000 236007 xsym               LDQ     M$LO,DL
         3 000536   000000 620006                    EAX0    0,QL
         3 000537   000000 740000 xsym               STX0    DCBSF

     2132     2103    3           END;

   2103  3 000540   000000 054000 xsym               AOS     I
         3 000541   000000 236000 xsym               LDQ     I
         3 000542   000000 116000 xsym               CMPQ    PTSVCNT
         3 000543   000427 604400 3                  TMOZ    s:2080

     2133     2104    2   LASTREC:
     2134     2105    2       CALL FILL_VAL(ERRMULT.VAL,MULTNXT.BADNXT);

   2105  3 000544   000000 236000 xsym  LASTREC      LDQ     ERRBUF$
         3 000545   400000 036007                    ADLQ    -131072,DL
         3 000546   200014 756100                    STQ     @BUF+1,,AUTO
         3 000547   000035 236000 4                  LDQ     29
         3 000550   200013 756100                    STQ     @KEY+2,,AUTO
         3 000551   001346 701000 3                  TSX1    FILL_VAL
         3 000552   000000 011000                    NOP     0

     2135     2106    2       DCBSF = DCBNUM(M$LO);

   2106  3 000553   000000 236007 xsym               LDQ     M$LO,DL
         3 000554   000000 620006                    EAX0    0,QL
         3 000555   000000 740000 xsym               STX0    DCBSF

     2136     2107    2       BUFSF = VECTOR(ERRMULT);
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:377  

   2107  3 000556   000040 237000 4                  LDAQ    32
         3 000557   000000 755000 xsym               STA     BUFSF
         3 000560   000001 756000 xsym               STQ     BUFSF+1

     2137     2108    2       BUFLNSF = 70;

   2108  3 000561   000106 235007                    LDA     70,DL
         3 000562   000000 755000 xsym               STA     BUFLNSF

     2138     2109    2       CALL SYS_FUNC_WRIT;

   2109  3 000563   000000 631400 4                  EPPR1   0
         3 000564   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000565   000000 011000                    NOP     0

     2139     2110
     2140     2111    2       RETURN;

   2111  3 000566   200004 221300                    LDX1  ! 4,,AUTO
         3 000567   000001 702211                    TSX2  ! 1,X1

     2141     2112    2   LSTREC:
     2142     2113    2       CALL FILL_VAL(ERRMULT.VAL,MULTNXT.BADDBK);

   2113  3 000570   000000 236000 xsym  LSTREC       LDQ     ERRBUF$
         3 000571   000042 036000 4                  ADLQ    34
         3 000572   200014 756100                    STQ     @BUF+1,,AUTO
         3 000573   000035 236000 4                  LDQ     29
         3 000574   200013 756100                    STQ     @KEY+2,,AUTO
         3 000575   001346 701000 3                  TSX1    FILL_VAL
         3 000576   000000 011000                    NOP     0

     2143     2114    2       DCBSF = DCBNUM(M$LO);

   2114  3 000577   000000 236007 xsym               LDQ     M$LO,DL
         3 000600   000000 620006                    EAX0    0,QL
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:378  
         3 000601   000000 740000 xsym               STX0    DCBSF

     2144     2115    2       BUFSF = VECTOR(ERRMULT);

   2115  3 000602   000040 237000 4                  LDAQ    32
         3 000603   000000 755000 xsym               STA     BUFSF
         3 000604   000001 756000 xsym               STQ     BUFSF+1

     2145     2116    2       BUFLNSF = 70;

   2116  3 000605   000106 235007                    LDA     70,DL
         3 000606   000000 755000 xsym               STA     BUFLNSF

     2146     2117    2       CALL SYS_FUNC_WRIT;

   2117  3 000607   000000 631400 4                  EPPR1   0
         3 000610   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000611   000000 011000                    NOP     0

     2147     2118
     2148     2119    2       ALTRETURN;

   2119  3 000612   200004 221300                    LDX1  ! 4,,AUTO
         3 000613   000000 702211                    TSX2  ! 0,X1

     2149     2120    2   END REPT_MULT;
     2150     2121        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:379  
     2151     2122    1   REPT_MISG: PROC;

   2122  3 000614   200004 741300       REPT_MISG    STX1  ! 4,,AUTO

     2152     2123
     2153     2124    2       ERR.PNTR = '****';

   2124  3 000615   040000 100400                    MLR     fill='040'O
         3 000616   000012 000004 2                  ADSC9   10                       cn=0,n=4
         3 000617   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2154     2125
     2155     2126    2       DCBSF = DCBNUM(M$LO);

   2126  3 000620   000000 236007 xsym               LDQ     M$LO,DL
         3 000621   000000 620006                    EAX0    0,QL
         3 000622   000000 740000 xsym               STX0    DCBSF

     2156     2127    2       BUFSF = VECTOR(ERR);

   2127  3 000623   000036 237000 4                  LDAQ    30
         3 000624   000000 755000 xsym               STA     BUFSF
         3 000625   000001 756000 xsym               STQ     BUFSF+1

     2157     2128    2       BUFLNSF = 81;

   2128  3 000626   000121 235007                    LDA     81,DL
         3 000627   000000 755000 xsym               STA     BUFLNSF

     2158     2129    2       CALL SYS_FUNC_WRIT;

   2129  3 000630   000000 631400 4                  EPPR1   0
         3 000631   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000632   000000 011000                    NOP     0

     2159     2130
     2160     2131    2       BUFSF = VECTOR(ERRMISG);
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:380  

   2131  3 000633   000044 237000 4                  LDAQ    36
         3 000634   000000 755000 xsym               STA     BUFSF
         3 000635   000001 756000 xsym               STQ     BUFSF+1

     2161     2132    2       BUFLNSF = 63;

   2132  3 000636   000077 235007                    LDA     63,DL
         3 000637   000000 755000 xsym               STA     BUFLNSF

     2162     2133    2       CALL SYS_FUNC_WRIT;

   2133  3 000640   000000 631400 4                  EPPR1   0
         3 000641   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000642   000000 011000                    NOP     0

     2163     2134
     2164     2135    2       CALL BINCHAR(ERRMISG2.VAL,MISGNXT.PRI_VAL);

   2135  3 000643   000000 470400 xsym               LDP0    ERRBUF$
         3 000644   000002 235100                    LDA     2,,PR0
         3 000645   000003 236100                    LDQ     3,,PR0
         3 000646   000033 773000                    LRL     27
         3 000647   000000 235003                    LDA     0,DU
         3 000650   200016 757100                    STAQ    @KEY+2,,AUTO
         3 000651   000000 301500                    BTD
         3 000652   200016 000010                    NDSC9   @KEY+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000653   000263 630014 0                  NDSC9   ERRMISG2+11              cn=3,s=nosgn,sf=0,n=12

     2165     2136    2       CALL ZERO_SUP(ERRMISG2.VAL,12,'1'B);

   2136  3 000654   000046 630400 4                  EPPR0   38
         3 000655   000001 631400 4                  EPPR1   1
         3 000656   000000 701000 xent               TSX1    ZERO_SUP
         3 000657   000000 011000                    NOP     0

     2166     2137
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:381  
     2167     2138    2       BUFSF = VECTOR(ERRMISG2);

   2138  3 000660   000052 237000 4                  LDAQ    42
         3 000661   000000 755000 xsym               STA     BUFSF
         3 000662   000001 756000 xsym               STQ     BUFSF+1

     2168     2139    2       BUFLNSF = 59;

   2139  3 000663   000073 235007                    LDA     59,DL
         3 000664   000000 755000 xsym               STA     BUFLNSF

     2169     2140    2       CALL SYS_FUNC_WRIT;

   2140  3 000665   000000 631400 4                  EPPR1   0
         3 000666   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000667   000000 011000                    NOP     0

     2170     2141
     2171     2142    2       RETURN;

   2142  3 000670   200004 221300                    LDX1  ! 4,,AUTO
         3 000671   000001 702211                    TSX2  ! 1,X1

     2172     2143    2   END REPT_MISG;
     2173     2144        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:382  
     2174     2145        /*
     2175     2146                    REPORT PRIOR POINTER DISAGREES WITH THE PT POINTER
     2176     2147        */
     2177     2148    1   REPT_DBK: PROC;

   2148  3 000672   200004 741300       REPT_DBK     STX1  ! 4,,AUTO

     2178     2149
     2179     2150    2       IF PAPTRS = %YES# THEN

   2150  3 000673   000001 234000 0                  SZN     PAPTRS
         3 000674   000706 605000 3                  TPL     s:2156

     2180     2151    3       DO; /*  GET PA INFO */

     2181     2152    3           CALL FILL_PAINFO(DBKPRIOR.OWNER);

   2152  3 000675   000000 236000 xsym               LDQ     ERRBUF$
         3 000676   000043 036000 4                  ADLQ    35
         3 000677   200007 756100                    STQ     @PAPTR,,AUTO
         3 000700   000150 701000 3                  TSX1    FILL_PAINFO
         3 000701   000000 011000                    NOP     0

     2182     2153    3           ERR.PNTR = PA_INFO;

   2153  3 000702   040000 100400                    MLR     fill='040'O
         3 000703   000004 000007 0                  ADSC9   PA_INFO                  cn=0,n=7
         3 000704   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2183     2154    3           END;

   2154  3 000705   000711 710000 3                  TRA     s:2158

     2184     2155    2       ELSE
     2185     2156    2           ERR.PNTR = 'PRIOR';

   2156  3 000706   040000 100400                    MLR     fill='040'O
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:383  
         3 000707   000013 000005 2                  ADSC9   11                       cn=0,n=5
         3 000710   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2186     2157
     2187     2158    2       DCBSF = DCBNUM(M$LO);

   2158  3 000711   000000 236007 xsym               LDQ     M$LO,DL
         3 000712   000000 620006                    EAX0    0,QL
         3 000713   000000 740000 xsym               STX0    DCBSF

     2188     2159    2       BUFSF = VECTOR(ERR);

   2159  3 000714   000036 237000 4                  LDAQ    30
         3 000715   000000 755000 xsym               STA     BUFSF
         3 000716   000001 756000 xsym               STQ     BUFSF+1

     2189     2160    2       BUFLNSF = 81;

   2160  3 000717   000121 235007                    LDA     81,DL
         3 000720   000000 755000 xsym               STA     BUFLNSF

     2190     2161    2       CALL SYS_FUNC_WRIT;

   2161  3 000721   000000 631400 4                  EPPR1   0
         3 000722   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000723   000000 011000                    NOP     0

     2191     2162
     2192     2163    2       CALL BINCHAR(BADPRI.VAL,DBKPRIOR.PRI_VAL);

   2163  3 000724   000000 470400 xsym               LDP0    ERRBUF$
         3 000725   000003 235100                    LDA     3,,PR0
         3 000726   000004 236100                    LDQ     4,,PR0
         3 000727   000033 773000                    LRL     27
         3 000730   000000 235003                    LDA     0,DU
         3 000731   200016 757100                    STAQ    @KEY+2,,AUTO
         3 000732   000000 301500                    BTD
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:384  
         3 000733   200016 000010                    NDSC9   @KEY+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000734   000306 030014 0                  NDSC9   BADPRI+15                cn=0,s=nosgn,sf=0,n=12

     2193     2164    2       CALL ZERO_SUP(BADPRI.VAL,12,'1'B);

   2164  3 000735   000054 630400 4                  EPPR0   44
         3 000736   000001 631400 4                  EPPR1   1
         3 000737   000000 701000 xent               TSX1    ZERO_SUP
         3 000740   000000 011000                    NOP     0

     2194     2165    2       BUFSF = VECTOR(BADPRI);

   2165  3 000741   000060 237000 4                  LDAQ    48
         3 000742   000000 755000 xsym               STA     BUFSF
         3 000743   000001 756000 xsym               STQ     BUFSF+1

     2195     2166    2       BUFLNSF = 72;

   2166  3 000744   000110 235007                    LDA     72,DL
         3 000745   000000 755000 xsym               STA     BUFLNSF

     2196     2167    2       CALL SYS_FUNC_WRIT;

   2167  3 000746   000000 631400 4                  EPPR1   0
         3 000747   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000750   000000 011000                    NOP     0

     2197     2168
     2198     2169    2       CALL BINCHAR(BADPRI2.VAL,DBKPRIOR.EXP_PRI);

   2169  3 000751   000000 470400 xsym               LDP0    ERRBUF$
         3 000752   000002 235100                    LDA     2,,PR0
         3 000753   000003 236100                    LDQ     3,,PR0
         3 000754   000033 773000                    LRL     27
         3 000755   000000 235003                    LDA     0,DU
         3 000756   200016 757100                    STAQ    @KEY+2,,AUTO
         3 000757   000000 301500                    BTD
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:385  
         3 000760   200016 000010                    NDSC9   @KEY+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 000761   000326 230014 0                  NDSC9   BADPRI2+13               cn=1,s=nosgn,sf=0,n=12

     2199     2170    2       CALL ZERO_SUP(BADPRI2.VAL,12,'1'B);

   2170  3 000762   000062 630400 4                  EPPR0   50
         3 000763   000001 631400 4                  EPPR1   1
         3 000764   000000 701000 xent               TSX1    ZERO_SUP
         3 000765   000000 011000                    NOP     0

     2200     2171    2       BUFSF = VECTOR(BADPRI2);

   2171  3 000766   000066 237000 4                  LDAQ    54
         3 000767   000000 755000 xsym               STA     BUFSF
         3 000770   000001 756000 xsym               STQ     BUFSF+1

     2201     2172    2       BUFLNSF = 65;

   2172  3 000771   000101 235007                    LDA     65,DL
         3 000772   000000 755000 xsym               STA     BUFLNSF

     2202     2173    2       CALL SYS_FUNC_WRIT;

   2173  3 000773   000000 631400 4                  EPPR1   0
         3 000774   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 000775   000000 011000                    NOP     0

     2203     2174
     2204     2175    2       RETURN;

   2175  3 000776   200004 221300                    LDX1  ! 4,,AUTO
         3 000777   000001 702211                    TSX2  ! 1,X1

     2205     2176    2   END REPT_DBK;
     2206     2177        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:386  
     2207     2178
     2208     2179        /*
     2209     2180           Report inconsistant owner pointers.
     2210     2181        */
     2211     2182    1   REPT_OWN: PROC;

   2182  3 001000   200004 741300       REPT_OWN     STX1  ! 4,,AUTO

     2212     2183
     2213     2184    2       ERR.PNTR = 'OWNER';

   2184  3 001001   040000 100400                    MLR     fill='040'O
         3 001002   000015 000005 2                  ADSC9   13                       cn=0,n=5
         3 001003   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2214     2185
     2215     2186    2       DCBSF = DCBNUM(M$LO);

   2186  3 001004   000000 236007 xsym               LDQ     M$LO,DL
         3 001005   000000 620006                    EAX0    0,QL
         3 001006   000000 740000 xsym               STX0    DCBSF

     2216     2187    2       BUFSF = VECTOR(ERR);

   2187  3 001007   000036 237000 4                  LDAQ    30
         3 001010   000000 755000 xsym               STA     BUFSF
         3 001011   000001 756000 xsym               STQ     BUFSF+1

     2217     2188    2       BUFLNSF = 81;

   2188  3 001012   000121 235007                    LDA     81,DL
         3 001013   000000 755000 xsym               STA     BUFLNSF

     2218     2189    2       CALL SYS_FUNC_WRIT;

   2189  3 001014   000000 631400 4                  EPPR1   0
         3 001015   000000 701000 xent               TSX1    SYS_FUNC_WRIT
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:387  
         3 001016   000000 011000                    NOP     0

     2219     2190
     2220     2191    2       BUFSF = VECTOR(ERROWN);

   2191  3 001017   000070 237000 4                  LDAQ    56
         3 001020   000000 755000 xsym               STA     BUFSF
         3 001021   000001 756000 xsym               STQ     BUFSF+1

     2221     2192    2       BUFLNSF = 64;

   2192  3 001022   000100 235007                    LDA     64,DL
         3 001023   000000 755000 xsym               STA     BUFLNSF

     2222     2193    2       CALL SYS_FUNC_WRIT;

   2193  3 001024   000000 631400 4                  EPPR1   0
         3 001025   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 001026   000000 011000                    NOP     0

     2223     2194
     2224     2195    2       CALL FILL_OWNTEXT(INCNOWN.DBK1,INCNOWN.OWNDBK1);

   2195  3 001027   000000 236000 xsym               LDQ     ERRBUF$
         3 001030   000042 036000 4                  ADLQ    34
         3 001031   200010 756100                    STQ     @KEY1+1,,AUTO
         3 001032   000000 236000 xsym               LDQ     ERRBUF$
         3 001033   400000 036007                    ADLQ    -131072,DL
         3 001034   200007 756100                    STQ     @PAPTR,,AUTO
         3 001035   001474 701000 3                  TSX1    FILL_OWNTEXT
         3 001036   000000 011000                    NOP     0

     2225     2196    2       ERROWN2.VFC = SKIP1;

   2196  3 001037   101000 236003                    LDQ     33280,DU
         3 001040   000352 552040 0                  STBQ    ERROWN2,'40'O

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:388  
     2226     2197    2       BUFSF = VECTOR(ERROWN2);

   2197  3 001041   000072 237000 4                  LDAQ    58
         3 001042   000000 755000 xsym               STA     BUFSF
         3 001043   000001 756000 xsym               STQ     BUFSF+1

     2227     2198    2       BUFLNSF = 83;

   2198  3 001044   000123 235007                    LDA     83,DL
         3 001045   000000 755000 xsym               STA     BUFLNSF

     2228     2199    2       CALL SYS_FUNC_WRIT;

   2199  3 001046   000000 631400 4                  EPPR1   0
         3 001047   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 001050   000000 011000                    NOP     0

     2229     2200
     2230     2201    2       ERROWN2.VFC = SKIP2;

   2201  3 001051   102000 236003                    LDQ     33792,DU
         3 001052   000352 552040 0                  STBQ    ERROWN2,'40'O

     2231     2202    2       CALL FILL_OWNTEXT(INCNOWN.DBK2,INCNOWN.OWNDBK2);

   2202  3 001053   000000 236000 xsym               LDQ     ERRBUF$
         3 001054   000074 036000 4                  ADLQ    60
         3 001055   200010 756100                    STQ     @KEY1+1,,AUTO
         3 001056   000000 236000 xsym               LDQ     ERRBUF$
         3 001057   000075 036000 4                  ADLQ    61
         3 001060   200007 756100                    STQ     @PAPTR,,AUTO
         3 001061   001474 701000 3                  TSX1    FILL_OWNTEXT
         3 001062   000000 011000                    NOP     0

     2232     2203    2       CALL SYS_FUNC_WRIT;

   2203  3 001063   000000 631400 4                  EPPR1   0
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:389  
         3 001064   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 001065   000000 011000                    NOP     0

     2233     2204
     2234     2205    2       RETURN;

   2205  3 001066   200004 221300                    LDX1  ! 4,,AUTO
         3 001067   000001 702211                    TSX2  ! 1,X1

     2235     2206    2   END REPT_OWN;
     2236     2207        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:390  
     2237     2208
     2238     2209        /*
     2239     2210                 REPORT A NEXT POINTER WHICH APPEARS TO BE GARBAGE
     2240     2211        */
     2241     2212    1   REPT_GRBG: PROC;

   2212  3 001070   200004 741300       REPT_GRBG    STX1  ! 4,,AUTO

     2242     2213
     2243     2214    2       IF PAPTRS = %YES# THEN

   2214  3 001071   000001 234000 0                  SZN     PAPTRS
         3 001072   001104 605000 3                  TPL     s:2220

     2244     2215    3       DO; /*  GET PA INFO */

     2245     2216    3           CALL FILL_PAINFO(GRBGNXT.OWNER);

   2216  3 001073   000000 236000 xsym               LDQ     ERRBUF$
         3 001074   000076 036000 4                  ADLQ    62
         3 001075   200007 756100                    STQ     @PAPTR,,AUTO
         3 001076   000150 701000 3                  TSX1    FILL_PAINFO
         3 001077   000000 011000                    NOP     0

     2246     2217    3           ERR.PNTR = PA_INFO;

   2217  3 001100   040000 100400                    MLR     fill='040'O
         3 001101   000004 000007 0                  ADSC9   PA_INFO                  cn=0,n=7
         3 001102   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2247     2218    3           END;

   2218  3 001103   001107 710000 3                  TRA     s:2221

     2248     2219    2       ELSE
     2249     2220    2           ERR.PNTR = 'NEXT';

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:391  
   2220  3 001104   040000 100400                    MLR     fill='040'O
         3 001105   000011 000004 2                  ADSC9   9                        cn=0,n=4
         3 001106   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2250     2221    2       IF ERRCODE = %GRBGOWN# THEN

   2221  3 001107   000000 235000 0                  LDA     ERRCODE
         3 001110   000011 115007                    CMPA    9,DL
         3 001111   001115 601000 3                  TNZ     s:2223

     2251     2222    2           ERR.PNTR = 'OWNER';

   2222  3 001112   040000 100400                    MLR     fill='040'O
         3 001113   000015 000005 2                  ADSC9   13                       cn=0,n=5
         3 001114   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2252     2223    2       DCBSF = DCBNUM(M$LO);

   2223  3 001115   000000 236007 xsym               LDQ     M$LO,DL
         3 001116   000000 620006                    EAX0    0,QL
         3 001117   000000 740000 xsym               STX0    DCBSF

     2253     2224    2       BUFSF = VECTOR(ERR);

   2224  3 001120   000036 237000 4                  LDAQ    30
         3 001121   000000 755000 xsym               STA     BUFSF
         3 001122   000001 756000 xsym               STQ     BUFSF+1

     2254     2225    2       BUFLNSF = 81;

   2225  3 001123   000121 235007                    LDA     81,DL
         3 001124   000000 755000 xsym               STA     BUFLNSF

     2255     2226    2       CALL SYS_FUNC_WRIT;

   2226  3 001125   000000 631400 4                  EPPR1   0
         3 001126   000000 701000 xent               TSX1    SYS_FUNC_WRIT
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:392  
         3 001127   000000 011000                    NOP     0

     2256     2227
     2257     2228    2       CALL FILL_VAL(ERRGRBG.VAL,GRBGNXT.NXTVAL);

   2228  3 001130   000000 236000 xsym               LDQ     ERRBUF$
         3 001131   000042 036000 4                  ADLQ    34
         3 001132   200014 756100                    STQ     @BUF+1,,AUTO
         3 001133   000077 236000 4                  LDQ     63
         3 001134   200013 756100                    STQ     @KEY+2,,AUTO
         3 001135   001346 701000 3                  TSX1    FILL_VAL
         3 001136   000000 011000                    NOP     0

     2258     2229    2       BUFSF = VECTOR(ERRGRBG);

   2229  3 001137   000100 237000 4                  LDAQ    64
         3 001140   000000 755000 xsym               STA     BUFSF
         3 001141   000001 756000 xsym               STQ     BUFSF+1

     2259     2230    2       BUFLNSF = 71;

   2230  3 001142   000107 235007                    LDA     71,DL
         3 001143   000000 755000 xsym               STA     BUFLNSF

     2260     2231    2       CALL SYS_FUNC_WRIT;

   2231  3 001144   000000 631400 4                  EPPR1   0
         3 001145   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 001146   000000 011000                    NOP     0

     2261     2232
     2262     2233    2       RETURN;

   2233  3 001147   200004 221300                    LDX1  ! 4,,AUTO
         3 001150   000001 702211                    TSX2  ! 1,X1

     2263     2234    2   END REPT_GRBG;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:393  
     2264     2235         %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:394  
     2265     2236        /*
     2266     2237                 REPORT  DANGLING NEXT POINTER.
     2267     2238        */
     2268     2239    1   REPT_DANG: PROC;

   2239  3 001151   200004 741300       REPT_DANG    STX1  ! 4,,AUTO

     2269     2240
     2270     2241    2       IF PAPTRS = %YES# THEN

   2241  3 001152   000001 234000 0                  SZN     PAPTRS
         3 001153   001165 605000 3                  TPL     s:2247

     2271     2242    3       DO; /*  GET PA INFO */

     2272     2243    3           CALL FILL_PAINFO(DANGNXT.OWNER);

   2243  3 001154   000000 236000 xsym               LDQ     ERRBUF$
         3 001155   000075 036000 4                  ADLQ    61
         3 001156   200007 756100                    STQ     @PAPTR,,AUTO
         3 001157   000150 701000 3                  TSX1    FILL_PAINFO
         3 001160   000000 011000                    NOP     0

     2273     2244    3           ERR.PNTR = PA_INFO;

   2244  3 001161   040000 100400                    MLR     fill='040'O
         3 001162   000004 000007 0                  ADSC9   PA_INFO                  cn=0,n=7
         3 001163   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2274     2245    3           END;

   2245  3 001164   001170 710000 3                  TRA     s:2248

     2275     2246    2       ELSE
     2276     2247    2           ERR.PNTR = 'NEXT';

   2247  3 001165   040000 100400                    MLR     fill='040'O
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:395  
         3 001166   000011 000004 2                  ADSC9   9                        cn=0,n=4
         3 001167   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2277     2248    2       DCBSF = DCBNUM(M$LO);

   2248  3 001170   000000 236007 xsym               LDQ     M$LO,DL
         3 001171   000000 620006                    EAX0    0,QL
         3 001172   000000 740000 xsym               STX0    DCBSF

     2278     2249    2       BUFSF = VECTOR(ERR);

   2249  3 001173   000036 237000 4                  LDAQ    30
         3 001174   000000 755000 xsym               STA     BUFSF
         3 001175   000001 756000 xsym               STQ     BUFSF+1

     2279     2250    2       BUFLNSF = 81;

   2250  3 001176   000121 235007                    LDA     81,DL
         3 001177   000000 755000 xsym               STA     BUFLNSF

     2280     2251    2       CALL SYS_FUNC_WRIT;

   2251  3 001200   000000 631400 4                  EPPR1   0
         3 001201   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 001202   000000 011000                    NOP     0

     2281     2252
     2282     2253    2       CALL FILL_RECKEY(ERRDANG.VAL,DANGNXT.PRI_RECTYP,DANGNXT.BADPRI);

   2253  3 001203   000000 236000 xsym               LDQ     ERRBUF$
         3 001204   000042 036000 4                  ADLQ    34
         3 001205   200011 756100                    STQ     @KEY2+1,,AUTO
         3 001206   000000 236000 xsym               LDQ     ERRBUF$
         3 001207   000076 036000 4                  ADLQ    62
         3 001210   200010 756100                    STQ     @KEY1+1,,AUTO
         3 001211   000102 236000 4                  LDQ     66
         3 001212   200007 756100                    STQ     @PAPTR,,AUTO
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:396  
         3 001213   001414 701000 3                  TSX1    FILL_RECKEY
         3 001214   000000 011000                    NOP     0

     2283     2254    2       BUFSF = VECTOR(ERRDANG);

   2254  3 001215   000104 237000 4                  LDAQ    68
         3 001216   000000 755000 xsym               STA     BUFSF
         3 001217   000001 756000 xsym               STQ     BUFSF+1

     2284     2255    2       BUFLNSF = 83;

   2255  3 001220   000123 235007                    LDA     83,DL
         3 001221   000000 755000 xsym               STA     BUFLNSF

     2285     2256    2       CALL SYS_FUNC_WRIT;

   2256  3 001222   000000 631400 4                  EPPR1   0
         3 001223   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 001224   000000 011000                    NOP     0

     2286     2257
     2287     2258    2       RETURN;

   2258  3 001225   200004 221300                    LDX1  ! 4,,AUTO
         3 001226   000001 702211                    TSX2  ! 1,X1

     2288     2259    2   END REPT_DANG;
     2289     2260        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:397  
     2290     2261
     2291     2262        /*
     2292     2263              Report a member record pointing to itself thry prior or next.
     2293     2264        */
     2294     2265    1   REPT_MMBR: PROC;

   2265  3 001227   200004 741300       REPT_MMBR    STX1  ! 4,,AUTO

     2295     2266
     2296     2267    2       IF PAPTRS = %YES# THEN

   2267  3 001230   000001 234000 0                  SZN     PAPTRS
         3 001231   001243 605000 3                  TPL     s:2273

     2297     2268    3       DO; /*  GET PA INFO */

     2298     2269    3           CALL FILL_PAINFO(MMBR.OWNER);

   2269  3 001232   000000 236000 xsym               LDQ     ERRBUF$
         3 001233   000042 036000 4                  ADLQ    34
         3 001234   200007 756100                    STQ     @PAPTR,,AUTO
         3 001235   000150 701000 3                  TSX1    FILL_PAINFO
         3 001236   000000 011000                    NOP     0

     2299     2270    3           ERR.PNTR = PA_INFO;

   2270  3 001237   040000 100400                    MLR     fill='040'O
         3 001240   000004 000007 0                  ADSC9   PA_INFO                  cn=0,n=7
         3 001241   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2300     2271    3           END;

   2271  3 001242   001255 710000 3                  TRA     s:2278

     2301     2272    3       ELSE DO;

     2302     2273    3           IF ERRCODE = %MMBRNXT# THEN
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:398  

   2273  3 001243   000000 235000 0                  LDA     ERRCODE
         3 001244   000003 115007                    CMPA    3,DL
         3 001245   001252 601000 3                  TNZ     s:2276

     2303     2274    3               ERR.PNTR = 'NEXT';

   2274  3 001246   040000 100400                    MLR     fill='040'O
         3 001247   000011 000004 2                  ADSC9   9                        cn=0,n=4
         3 001250   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8
         3 001251   001255 710000 3                  TRA     s:2278

     2304     2275    3           ELSE
     2305     2276    3               ERR.PNTR = 'PRIOR';

   2276  3 001252   040000 100400                    MLR     fill='040'O
         3 001253   000013 000005 2                  ADSC9   11                       cn=0,n=5
         3 001254   000073 200010 0                  ADSC9   ERR+3                    cn=1,n=8

     2306     2277    3           END;

     2307     2278    2       DCBSF = DCBNUM(M$LO);

   2278  3 001255   000000 236007 xsym               LDQ     M$LO,DL
         3 001256   000000 620006                    EAX0    0,QL
         3 001257   000000 740000 xsym               STX0    DCBSF

     2308     2279    2       BUFSF = VECTOR(ERR);

   2279  3 001260   000036 237000 4                  LDAQ    30
         3 001261   000000 755000 xsym               STA     BUFSF
         3 001262   000001 756000 xsym               STQ     BUFSF+1

     2309     2280    2       BUFLNSF = 81;

   2280  3 001263   000121 235007                    LDA     81,DL
         3 001264   000000 755000 xsym               STA     BUFLNSF
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:399  

     2310     2281    2       CALL SYS_FUNC_WRIT;

   2281  3 001265   000000 631400 4                  EPPR1   0
         3 001266   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 001267   000000 011000                    NOP     0

     2311     2282
     2312     2283    2       BUFSF = VECTOR(ERRMMBR);

   2283  3 001270   000106 237000 4                  LDAQ    70
         3 001271   000000 755000 xsym               STA     BUFSF
         3 001272   000001 756000 xsym               STQ     BUFSF+1

     2313     2284    2       BUFLNSF = 51;

   2284  3 001273   000063 235007                    LDA     51,DL
         3 001274   000000 755000 xsym               STA     BUFLNSF

     2314     2285    2       CALL SYS_FUNC_WRIT;

   2285  3 001275   000000 631400 4                  EPPR1   0
         3 001276   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         3 001277   000000 011000                    NOP     0

     2315     2286
     2316     2287    2       RETURN;

   2287  3 001300   200004 221300                    LDX1  ! 4,,AUTO
         3 001301   000001 702211                    TSX2  ! 1,X1

     2317     2288    2   END REPT_MMBR;
     2318     2289        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:400  
     2319     2290
     2320     2291
     2321     2292    1   FILL_RECNAME: PROC(NAME,TYPE);

   2292  3 001302   200012 741300       FILL_RECNAME STX1  ! @KEY+1,,AUTO

     2322     2293
     2323     2294    2   DCL NAME CHAR(30) CALIGNED;
     2324     2295    2   DCL TYPE SBIN HALF CALIGNED;
     2325     2296
     2326     2297    2       X=0;

   2297  3 001303   000000 450000 xsym               STZ     X

     2327     2298    3       DO WHILE(MSTR_REF.TYPE(X) ~= TYPE AND X < NO_RECS);

   2298  3 001304   001306 710000 3                  TRA     s:2300

     2328     2299    3           X = X+1;

   2299  3 001305   000000 054000 xsym               AOS     X

     2329     2300    3           END;

   2300  3 001306   200014 470500                    LDP0    @TYPE,,AUTO
         3 001307   000100 100500                    MLR     fill='000'O
         3 001310   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         3 001311   200016 000004                    ADSC9   @KEY+2,,AUTO             cn=0,n=4
         3 001312   200016 236100                    LDQ     @KEY+2,,AUTO
         3 001313   000022 732000                    QRS     18
         3 001314   200017 756100                    STQ     @KEY+3,,AUTO
         3 001315   000000 236000 xsym               LDQ     X
         3 001316   000012 402007                    MPY     10,DL
         3 001317   000000 471400 xsym               LDP1    MSTR$
         3 001320   100000 236106                    LDQ     0,QL,PR1
         3 001321   000022 732000                    QRS     18
         3 001322   200017 116100                    CMPQ    @KEY+3,,AUTO
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:401  
         3 001323   001327 600000 3                  TZE     s:2302
         3 001324   000000 236000 xsym               LDQ     X
         3 001325   000000 116000 xsym               CMPQ    NO_RECS
         3 001326   001305 604000 3                  TMI     s:2299

     2330     2301
     2331     2302    2       IF X < NO_RECS THEN

   2302  3 001327   000000 236000 xsym               LDQ     X
         3 001330   000000 116000 xsym               CMPQ    NO_RECS
         3 001331   001340 605000 3                  TPL     s:2305

     2332     2303    2           NAME = MSTR_REF.NAME(X);

   2303  3 001332   000050 402007                    MPY     40,DL
         3 001333   200013 473500                    LDP3    @NAME,,AUTO
         3 001334   040100 100506                    MLR     fill='040'O
         3 001335   100001 400036                    ADSC9   1,Q,PR1                  cn=2,n=30
         3 001336   300000 000036                    ADSC9   0,,PR3                   cn=0,n=30
         3 001337   001344 710000 3                  TRA     s:2307

     2333     2304    2       ELSE
     2334     2305    2           NAME = '*********';

   2305  3 001340   200013 473500                    LDP3    @NAME,,AUTO
         3 001341   040100 100400                    MLR     fill='040'O
         3 001342   000017 000011 2                  ADSC9   15                       cn=0,n=9
         3 001343   300000 000036                    ADSC9   0,,PR3                   cn=0,n=30

     2335     2306
     2336     2307    2       RETURN;

   2307  3 001344   200012 221300                    LDX1  ! @KEY+1,,AUTO
         3 001345   000001 702211                    TSX2  ! 1,X1

     2337     2308    2   END FILL_RECNAME;
     2338     2309        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:402  
     2339     2310    1   FILL_VAL: PROC(BUF,KEY);

   2310  3 001346   200012 741300       FILL_VAL     STX1  ! @KEY+1,,AUTO

     2340     2311
     2341     2312    2   DCL BUF CHAR(20) CALIGNED;
     2342     2313    2   DCL KEY UBIN WORD CALIGNED;
     2343     2314
     2344     2315    2   DCL TMP CHAR(12) STATIC ALIGNED;
     2345     2316    2   DCL FIL$ PTR STATIC INIT(ADDR(TMP));
     2346     2317    2   DCL FILL BASED(FIL$) CHAR(J);
     2347     2318
     2348     2319    2       CALL BINCHAR(TMP,KEY);

   2319  3 001347   200014 470500                    LDP0    @KEY,,AUTO
         3 001350   000100 100500                    MLR     fill='000'O
         3 001351   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         3 001352   200016 000004                    ADSC9   @KEY+2,,AUTO             cn=0,n=4
         3 001353   200016 236100                    LDQ     @KEY+2,,AUTO
         3 001354   000000 235003                    LDA     0,DU
         3 001355   200020 757100                    STAQ    @KEY+4,,AUTO
         3 001356   000000 301500                    BTD
         3 001357   200020 000010                    NDSC9   @KEY+4,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 001360   000400 030014 0                  NDSC9   TMP                      cn=0,s=nosgn,sf=0,n=12

     2349     2320    2       CALL ZERO_SUP(TMP,12,'1'B);

   2320  3 001361   000110 630400 4                  EPPR0   72
         3 001362   000001 631400 4                  EPPR1   1
         3 001363   000000 701000 xent               TSX1    ZERO_SUP
         3 001364   000000 011000                    NOP     0

     2350     2321    2       CALL INDEX(J,' ',TMP);

   2321  3 001365   000000 124400                    SCM     mask='000'O
         3 001366   000400 000014 0                  ADSC9   TMP                      cn=0,n=12
         3 001367   000015 000001 4                  ADSC9   13                       cn=0,n=1
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:403  
         3 001370   000000 000000 xsym               ARG     J

     2351     2322
     2352     2323
     2353     2324    2       CALL CONCAT(BUF,'(DBK# ',FILL,')');

   2324  3 001371   200013 470500                    LDP0    @BUF,,AUTO
         3 001372   040100 100400                    MLR     fill='040'O
         3 001373   000022 000006 2                  ADSC9   18                       cn=0,n=6
         3 001374   000000 000006                    ADSC9   0,,PR0                   cn=0,n=6
         3 001375   000403 471400 0                  LDP1    FIL$
         3 001376   000000 720000 xsym               LXL0    J
         3 001377   040100 100540                    MLR     fill='040'O
         3 001400   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         3 001401   000001 400016                    ADSC9   1,,PR0                   cn=2,n=14
         3 001402   000000 236000 xsym               LDQ     J
         3 001403   000016 116007                    CMPQ    14,DL
         3 001404   001412 605000 3                  TPL     s:2326
         3 001405   777761 621006                    EAX1    -15,QL
         3 001406   777777 661003                    ERX1    -1,DU
         3 001407   040146 100400                    MLR     fill='040'O
         3 001410   000113 000001 4                  ADSC9   75                       cn=0,n=1
         3 001411   000001 400011                    ADSC9   1,Q,PR0                  cn=2,n=*X1

     2354     2325
     2355     2326    2       RETURN;

   2326  3 001412   200012 221300                    LDX1  ! @KEY+1,,AUTO
         3 001413   000001 702211                    TSX2  ! 1,X1

     2356     2327    2   END FILL_VAL;
     2357     2328
     2358     2329        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:404  
     2359     2330    1   FILL_RECKEY: PROC(BUF,RECTYPE,KEY);

   2330  3 001414   200006 741300       FILL_RECKEY  STX1  ! 6,,AUTO

     2360     2331
     2361     2332    2   DCL BUF CHAR(60) CALIGNED;
     2362     2333    2   DCL RECTYPE SBIN HALF CALIGNED;
     2363     2334    2   DCL KEY UBIN WORD CALIGNED;
     2364     2335    2   DCL BUF$ PTR STATIC ALIGNED;
     2365     2336    2   DCL BUFER CHAR(J) BASED(BUF$);
     2366     2337
     2367     2338    2       J= 60;

   2338  3 001415   000074 235007                    LDA     60,DL
         3 001416   000000 755000 xsym               STA     J

     2368     2339    2       BUF$ = ADDR(BUF);

   2339  3 001417   200007 236100                    LDQ     @BUF,,AUTO
         3 001420   000404 756000 0                  STQ     BUF$

     2369     2340    2       BUFER = ' ';

   2340  3 001421   000404 470400 0                  LDP0    BUF$
         3 001422   000000 620005                    EAX0    0,AL
         3 001423   040140 100400                    MLR     fill='040'O
         3 001424   000015 000001 4                  ADSC9   13                       cn=0,n=1
         3 001425   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     2370     2341    2       J= 30; /* SIZE OF POSSIBLE NAME FIELD */

   2341  3 001426   000036 235007                    LDA     30,DL
         3 001427   000000 755000 xsym               STA     J

     2371     2342    2       CALL FILL_RECNAME(BUFER,RECTYPE);

   2342  3 001430   200010 236100                    LDQ     @RECTYPE,,AUTO
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:405  
         3 001431   200014 756100                    STQ     @KEY,,AUTO
         3 001432   000404 236000 0                  LDQ     BUF$
         3 001433   200013 756100                    STQ     @BUF,,AUTO
         3 001434   001302 701000 3                  TSX1    FILL_RECNAME
         3 001435   000000 011000                    NOP     0

     2372     2343    2       CALL INDEX(J,' ',BUFER);

   2343  3 001436   000404 470400 0                  LDP0    BUF$
         3 001437   000000 720000 xsym               LXL0    J
         3 001440   000000 124540                    SCM     mask='000'O
         3 001441   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         3 001442   000015 000001 4                  ADSC9   13                       cn=0,n=1
         3 001443   000000 000000 xsym               ARG     J

     2373     2344    2       BUF$ = PINCRC(BUF$,J+1);

   2344  3 001444   000000 236000 xsym               LDQ     J
         3 001445   000020 736000                    QLS     16
         3 001446   200000 036007                    ADLQ    65536,DL
         3 001447   000404 036000 0                  ADLQ    BUF$
         3 001450   000404 756000 0                  STQ     BUF$

     2374     2345
     2375     2346    2       J = 7;

   2346  3 001451   000007 235007                    LDA     7,DL
         3 001452   000000 755000 xsym               STA     J

     2376     2347    2       BUF$ -> BUFER = 'RECORD ';

   2347  3 001453   000404 470400 0                  LDP0    BUF$
         3 001454   000000 620005                    EAX0    0,AL
         3 001455   040140 100400                    MLR     fill='040'O
         3 001456   000024 000007 2                  ADSC9   20                       cn=0,n=7
         3 001457   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:406  
     2377     2348    2       BUF$ = PINCRC(BUF$,7);

   2348  3 001460   000114 036000 4                  ADLQ    76
         3 001461   000404 756000 0                  STQ     BUF$

     2378     2349
     2379     2350    2       J = 20; /* SIZE REQUIRED FOR FILL_VAL */

   2350  3 001462   000024 235007                    LDA     20,DL
         3 001463   000000 755000 xsym               STA     J

     2380     2351    2       CALL FILL_VAL(BUF$ -> BUFER,KEY);

   2351  3 001464   200011 236100                    LDQ     @KEY,,AUTO
         3 001465   200014 756100                    STQ     @KEY,,AUTO
         3 001466   000404 236000 0                  LDQ     BUF$
         3 001467   200013 756100                    STQ     @BUF,,AUTO
         3 001470   001346 701000 3                  TSX1    FILL_VAL
         3 001471   000000 011000                    NOP     0

     2381     2352
     2382     2353    2       RETURN;

   2353  3 001472   200006 221300                    LDX1  ! 6,,AUTO
         3 001473   000001 702211                    TSX2  ! 1,X1

     2383     2354    2   END FILL_RECKEY;
     2384     2355        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:407  
     2385     2356        /*
     2386     2357              Concat key info for reporting inconsistant owners.
     2387     2358        */
     2388     2359    1   FILL_OWNTEXT: PROC(KEY1,KEY2);

   2359  3 001474   200006 741300       FILL_OWNTEXT STX1  ! 6,,AUTO

     2389     2360
     2390     2361    2   DCL KEY1 UBIN WORD CALIGNED;
     2391     2362    2   DCL KEY2 UBIN WORD CALIGNED;
     2392     2363
     2393     2364    2   DCL STRING BASED(STR$) CHAR(J) CALIGNED;
     2394     2365    2   DCL STR$ PTR STATIC ALIGNED;
     2395     2366    2   DCL TMP CHAR(12) STATIC CALIGNED;
     2396     2367
     2397     2368    2       ERROWN2.TEXT = '  ';

   2368  3 001475   040000 100400                    MLR     fill='040'O
         3 001476   000002 000002 2                  ADSC9   2                        cn=0,n=2
         3 001477   000357 600074 0                  ADSC9   ERROWN2+5                cn=3,n=60

     2398     2369    2       J=5;

   2369  3 001500   000005 235007                    LDA     5,DL
         3 001501   000000 755000 xsym               STA     J

     2399     2370    2       STR$ = ADDR(ERROWN2.TEXT);

   2370  3 001502   000115 236000 4                  LDQ     77
         3 001503   000405 756000 0                  STQ     STR$

     2400     2371    2       STR$->STRING = 'DBK# ';

   2371  3 001504   000405 470400 0                  LDP0    STR$
         3 001505   000000 620005                    EAX0    0,AL
         3 001506   040140 100400                    MLR     fill='040'O
         3 001507   000026 000005 2                  ADSC9   22                       cn=0,n=5
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:408  
         3 001510   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     2401     2372    2       STR$ = PINCRC(STR$,5);

   2372  3 001511   000116 036000 4                  ADLQ    78
         3 001512   000405 756000 0                  STQ     STR$

     2402     2373
     2403     2374    2       CALL BINCHAR(TMP,KEY1);

   2374  3 001513   200007 470500                    LDP0    @KEY1,,AUTO
         3 001514   000100 100500                    MLR     fill='000'O
         3 001515   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         3 001516   200016 000004                    ADSC9   @KEY+2,,AUTO             cn=0,n=4
         3 001517   200016 236100                    LDQ     @KEY+2,,AUTO
         3 001520   000000 235003                    LDA     0,DU
         3 001521   200020 757100                    STAQ    @KEY+4,,AUTO
         3 001522   000000 301500                    BTD
         3 001523   200020 000010                    NDSC9   @KEY+4,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 001524   000406 030014 0                  NDSC9   TMP                      cn=0,s=nosgn,sf=0,n=12

     2404     2375    2       CALL ZERO_SUP(TMP,12,'1'B);

   2375  3 001525   000117 630400 4                  EPPR0   79
         3 001526   000001 631400 4                  EPPR1   1
         3 001527   000000 701000 xent               TSX1    ZERO_SUP
         3 001530   000000 011000                    NOP     0

     2405     2376    2       CALL INDEX(J,' ',TMP); /* FIND SIZE OF DBK IN CHAR FORMAT */

   2376  3 001531   000000 124400                    SCM     mask='000'O
         3 001532   000406 000014 0                  ADSC9   TMP                      cn=0,n=12
         3 001533   000015 000001 4                  ADSC9   13                       cn=0,n=1
         3 001534   000000 000000 xsym               ARG     J

     2406     2377    2       J = J+1;

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:409  
   2377  3 001535   000000 054000 xsym               AOS     J

     2407     2378    2       STR$->STRING = TMP;

   2378  3 001536   000405 470400 0                  LDP0    STR$
         3 001537   000000 720000 xsym               LXL0    J
         3 001540   040140 100400                    MLR     fill='040'O
         3 001541   000406 000014 0                  ADSC9   TMP                      cn=0,n=12
         3 001542   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     2408     2379
     2409     2380    2       STR$ = PINCRC(STR$,J);

   2380  3 001543   000000 236000 xsym               LDQ     J
         3 001544   000020 736000                    QLS     16
         3 001545   000405 036000 0                  ADLQ    STR$
         3 001546   000405 756000 0                  STQ     STR$

     2410     2381    2       J = 18;

   2381  3 001547   000022 235007                    LDA     18,DL
         3 001550   000000 755000 xsym               STA     J

     2411     2382    2       STR$->STRING = ' IS OWNED BY DBK# ';

   2382  3 001551   000405 470400 0                  LDP0    STR$
         3 001552   000000 620005                    EAX0    0,AL
         3 001553   040140 100400                    MLR     fill='040'O
         3 001554   000030 000022 2                  ADSC9   24                       cn=0,n=18
         3 001555   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     2412     2383    2       STR$ = PINCRC(STR$,18);

   2383  3 001556   000122 036000 4                  ADLQ    82
         3 001557   000405 756000 0                  STQ     STR$

     2413     2384
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:410  
     2414     2385    2       CALL BINCHAR(TMP,KEY2);

   2385  3 001560   200010 470500                    LDP0    @KEY2,,AUTO
         3 001561   000100 100500                    MLR     fill='000'O
         3 001562   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         3 001563   200016 000004                    ADSC9   @KEY+2,,AUTO             cn=0,n=4
         3 001564   200016 236100                    LDQ     @KEY+2,,AUTO
         3 001565   000000 235003                    LDA     0,DU
         3 001566   200020 757100                    STAQ    @KEY+4,,AUTO
         3 001567   000000 301500                    BTD
         3 001570   200020 000010                    NDSC9   @KEY+4,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         3 001571   000406 030014 0                  NDSC9   TMP                      cn=0,s=nosgn,sf=0,n=12

     2415     2386    2       CALL ZERO_SUP(TMP,12,'1'B);

   2386  3 001572   000117 630400 4                  EPPR0   79
         3 001573   000001 631400 4                  EPPR1   1
         3 001574   000000 701000 xent               TSX1    ZERO_SUP
         3 001575   000000 011000                    NOP     0

     2416     2387    2       CALL INDEX(J,' ',TMP);

   2387  3 001576   000000 124400                    SCM     mask='000'O
         3 001577   000406 000014 0                  ADSC9   TMP                      cn=0,n=12
         3 001600   000015 000001 4                  ADSC9   13                       cn=0,n=1
         3 001601   000000 000000 xsym               ARG     J

     2417     2388    2       J = J+1;

   2388  3 001602   000000 054000 xsym               AOS     J

     2418     2389    2       STR$->STRING = TMP;

   2389  3 001603   000405 470400 0                  LDP0    STR$
         3 001604   000000 720000 xsym               LXL0    J
         3 001605   040140 100400                    MLR     fill='040'O
         3 001606   000406 000014 0                  ADSC9   TMP                      cn=0,n=12
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:411  
         3 001607   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     2419     2390
     2420     2391    2       RETURN;

   2391  3 001610   200006 221300                    LDX1  ! 6,,AUTO
         3 001611   000001 702211                    TSX2  ! 1,X1

VALHDR
 Sect OctLoc
   0     006   162126 101114   111104 101124   111117 116040   104111 101107    rVALIDATION DIAG
   0     012   116117 123124   111103 040122   105120 117122   124040 ******    NOSTIC REPORT ..

HDR
 Sect OctLoc
   0     016   101104 102113   040040 040040   040040 040040   040120 117111    ADBK         POI
   0     022   116124 105122   040122 105103   117122 104040   116101 115105    NTER RECORD NAME
   0     026   040040 040040   040040 040040   040040 040040   040040 040040
   0     032   040040 040123   105124 040116   101115 105040   040040 040040       SET NAME
   0     036   040040 040040   040040 040040   040040 040040   040040 040040
   0     042   040*** ******                                                     ...

UNDR
 Sect OctLoc
   0     043   101055 055055   040040 040040   040040 040040   040055 055055    A---         ---
   0     047   055055 055055   040055 055055   055055 055055   055055 055055    ---- -----------
   0     053   040040 040040   040040 040040   040040 040040   040040 040040
   0     057   040040 040055   055055 055055   055055 055040   040040 040040       --------
   0     063   040040 040040   040040 040040   040040 040040   040040 040040
   0     067   040*** ******                                                     ...

ERR
 Sect OctLoc
   0     070   101*** ******   ****** ******   ****** ******   ****** ******    A...............
   0     114*  ****** ******                                                    ....

ERRGRBG
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:412  
 Sect OctLoc
   0     115   102040 040040   040040 040040   040040 040040   040040 040040    B
   0     121   040040 040040   040120 117111   116124 123040   124117 040116         POINTS TO N
   0     125   117116 055105   130111 123124   101116 124040   122105 103117    ON-EXISTANT RECO
   0     131   122104 040***   ****** ******   ****** ******   ****** ******    RD .............
   0     135   ****** ******   ****** ******                                    ........

ERRDANG
 Sect OctLoc
   0     137   102040 040040   040040 040040   040040 040040   040040 040040    B
   0     143   040040 040040   040104 101116   107114 111116   107040 116105         DANGLING NE
   0     147   130124 040120   124122 040124   117040 ******   ****** ******    XT PTR TO ......
   0     167*  ****** ******   ****** ******                                    ........

ERRMULT
 Sect OctLoc
   0     171   102040 040040   040040 040040   040040 040040   040040 040040    B
   0     175   040040 040040   040101 114114   040120 117111   116124 040124         ALL POINT T
   0     201   117040 124110   105040 123101   115105 040122   105103 117122    O THE SAME RECOR
   0     205   104040 ******   ****** ******   ****** ******   ****** ******    D ..............
   0     211   ****** ******   ****** ******                                    ........

ERRMMBR
 Sect OctLoc
   0     213   102040 040040   040040 040040   040040 040040   040040 040040    B
   0     217   040040 040040   040115 105115   102105 122040   122105 103117         MEMBER RECO
   0     223   122104 040120   117111 116124   123040 124117   040111 124123    RD POINTS TO ITS
   0     227   105114 106***                                                    ELF.

ERRMISG
 Sect OctLoc
   0     230   101040 040040   040040 040040   040040 040040   040040 040040    A
   0     234   040040 040040   040116 117040   122105 103117   122104 040117         NO RECORD O
   0     240   103103 125122   122105 116103   105040 120117   111116 124123    CCURRENCE POINTS
   0     244   040124 117040   124110 111123   040122 105103   117122 104***     TO THIS RECORD.

ERRMISG2
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:413  
 Sect OctLoc
   0     250   102040 040040   040040 040040   040040 040040   040040 040040    B
   0     254   040040 040040   040040 040040   120122 111117   122040 120117            PRIOR PO
   0     260   111116 124105   122040 126101   114125 105040   111123 040***    INTER VALUE IS .
   0     264   ****** ******   ****** ******   ****** ******                    ............

BADPRI
 Sect OctLoc
   0     267   101040 040040   040040 040040   040040 040040   040040 040040    A
   0     273   040040 040040   040102 101104   040120 122111   117122 040120         BAD PRIOR P
   0     277   117111 116124   105122 040055   040120 122111   117122 040126    OINTER - PRIOR V
   0     303   101114 125105   040075 040104   102113 043040   ****** ******    ALUE = DBK# ....
   0     307   ****** ******   ****** ******                                    ........

BADPRI2
 Sect OctLoc
   0     311   102040 040040   040040 040040   040040 040040   040040 040040    B
   0     315   040040 040040   040040 040040   040105 130120   105103 124105             EXPECTE
   0     321   104040 120122   111117 122040   126101 114125   105040 075040    D PRIOR VALUE =
   0     325   104102 113043   040*** ******   ****** ******   ****** ******    DBK# ...........
   0     331   ****** ******                                                    ....

ERROWN
 Sect OctLoc
   0     332   101040 040040   040040 040040   040040 040040   040040 040040    A
   0     336   040040 040040   040111 116103   117116 123111   123124 101116         INCONSISTAN
   0     342   124040 117127   116105 122123   040127 111124   110111 116040    T OWNERS WITHIN
   0     346   101040 123105   124040 117103   103125 122122   105116 103105    A SET OCCURRENCE

ERROWN2
 Sect OctLoc
   0     352   101040 040040   040040 040040   040040 040040   040040 040040    A
   0     356   040040 040040   040040 040***   ****** ******   ****** ******           .........
   0     376*  ****** ******                                                    ....

FIL$
 Sect OctLoc
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:414  
   0     403   000400 006000                                                    ....

(unnamed)
 Sect OctLoc
   2     000   052105 122122   106111 114105   040040 040116   157040 040126    *ERRFILE   No  V
   2     004   141154 151144   141164 151157   156040 040105   162162 157162    alidation  Error
   2     010   163040 040040   116105 130124   052052 052052   120122 111117    s   NEXT****PRIO
   2     014   122040 040040   117127 116105   122040 040040   052052 052052    R   OWNER   ****
   2     020   052052 052052   052040 040040   050104 102113   043040 040040    *****   (DBK#
   2     024   122105 103117   122104 040040   104102 113043   040040 040040    RECORD  DBK#
   2     030   040111 123040   117127 116105   104040 102131   040104 102113     IS OWNED BY DBK
   2     034   043040 040040                                                    #

(unnamed)
 Sect OctLoc
   4     000   000000 000000   000003 000000   000000 000014   400000 000000    ................
   4     004   000070 206000   000002 006000   000003 006000   000001 400000    .8..............
   4     010   000075 206000   000000 000003   000002 006000   000011 006000    .=..............
   4     014   000003 006000   040040 040040   000003 006000   000011 006000    ....    ........
   4     020   000003 006000   056040 040040   000001 177640   000000 006000    .....   ........
   4     024   000007 777640   000000 006000   000007 377640   000006 006000    ................
   4     030   000024 177640   000016 006000   000024 177640   000043 006000    .............#..
   4     034   000003 400000   000205 406000   000024 177640   000070 006000    .............8..
   4     040   000021 377640   000171 006000   000002 200000   000004 200000    .....y..........
   4     044   000017 577640   000230 006000   000263 606000   000002 006000    ................
   4     050   000003 006000   000000 000000   000016 577640   000250 006000    ................
   4     054   000306 006000   000002 006000   000003 006000   000000 000000    ................
   4     060   000021 777640   000267 006000   000326 206000   000002 006000    ................
   4     064   000003 006000   000000 000000   000020 177640   000311 006000    ................
   4     070   000017 777640   000332 006000   000024 577640   000352 006000    ................
   4     074   000004 600000   000003 600000   000003 200000   000131 606000    .............Y..
   4     100   000021 577640   000115 006000   000151 406000   000000 000000    .....M...i......
   4     104   000031 377640   000137 006000   000014 577640   000213 006000    ....._..........
   4     110   000400 006000   000002 006000   000003 006000   051040 040040    ............)
   4     114   000001 600000   000357 606000   000001 200000   000406 006000    ................
   4     120   000002 006000   000003 006000   000004 400000                    ............
     2421     2392    2   END FILL_OWNTEXT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:415  
     2422     2393        %EJECT;
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:416  
     2423     2394
     2424     2395
     2425     2396    1   END ZIU$RPTVAL;

PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:417  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_DBU_VALDTE.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$RPTVAL.

   Procedure ZIU$RPTVAL requires 906 words for executable code.
   Procedure ZIU$RPTVAL requires 18 words of local(AUTO) storage.

    No errors detected in file ZIU$VALSET.:ZIC0TSI    .
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:418  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:419  
          MINI XREF LISTING

ACSSF
       808**DCL      2018<<ASSIGN
ALT IN PROCEDURE OPEN_ERRFILE
      2024**LABEL    2014--CALLALT  2021--CALLALT
ALTRD IN PROCEDURE READ_ERRFILE
      2039**LABEL    2034--CALLALT
ALTWRT IN PROCEDURE WRITE_HEADER
      2071**LABEL    2055--CALLALT  2059--CALLALT
ALT_REPT
      1983**LABEL    1926--CALLALT
AREA_KEY$
      1578**DCL      1581--IMP-PTR
BADPRI
      1351**DCL      2165--ASSIGN
BADPRI.VAL
      1356**DCL      2163<<CALLBLT  2164<>CALL
BADPRI2
      1357**DCL      2171--ASSIGN
BADPRI2.VAL
      1362**DCL      2169<<CALLBLT  2170<>CALL
BREAK_FLAG
       783**DCL      1932>>IF
BUF IN PROCEDURE FILL_RECKEY
      2332**DCL      2330--PROC     2339--ASSIGN
BUF IN PROCEDURE FILL_VAL
      2312**DCL      2310--PROC     2324<<CALLBLT
BUF$ IN PROCEDURE FILL_RECKEY
      2335**DCL      2336--IMP-PTR  2339<<ASSIGN   2340>>ASSIGN   2342>>CALL     2343>>CALLBLT  2344<<ASSIGN
      2344>>ASSIGN   2347>>ASSIGN   2348<<ASSIGN   2348>>ASSIGN   2351>>CALL
BUFER IN PROCEDURE FILL_RECKEY
      2336**DCL      2340<<ASSIGN   2342<>CALL     2343>>CALLBLT  2347<<ASSIGN   2351<>CALL
BUFLNSF
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:420  
       819**DCL      2032<<ASSIGN   2049<<ASSIGN   2062<<ASSIGN   2098<<ASSIGN   2108<<ASSIGN   2116<<ASSIGN
      2128<<ASSIGN   2132<<ASSIGN   2139<<ASSIGN   2160<<ASSIGN   2166<<ASSIGN   2172<<ASSIGN   2188<<ASSIGN
      2192<<ASSIGN   2198<<ASSIGN   2225<<ASSIGN   2230<<ASSIGN   2250<<ASSIGN   2255<<ASSIGN   2280<<ASSIGN
      2284<<ASSIGN
BUFSF
       820**DCL      2031<<ASSIGN   2050<<ASSIGN   2061<<ASSIGN   2065<<ASSIGN   2097<<ASSIGN   2107<<ASSIGN
      2115<<ASSIGN   2127<<ASSIGN   2131<<ASSIGN   2138<<ASSIGN   2159<<ASSIGN   2165<<ASSIGN   2171<<ASSIGN
      2187<<ASSIGN   2191<<ASSIGN   2197<<ASSIGN   2224<<ASSIGN   2229<<ASSIGN   2249<<ASSIGN   2254<<ASSIGN
      2279<<ASSIGN   2283<<ASSIGN
COUNTSF
       870**DCL       871--REDEF
CURRPT.OWNER
      1187**DCL      1188--REDEF
CV1 IN PROCEDURE FILL_PAINFO
      1993**DCL      2004>>CALLBLT
DANGNXT.BADPRI
      1241**DCL      2253<>CALL
DANGNXT.OWNER
      1243**DCL      2243<>CALL
DANGNXT.PRI_RECTYP
      1242**DCL      2253<>CALL
DBKPRIOR.EXP_PRI
      1260**DCL      2169>>CALLBLT
DBKPRIOR.OWNER
      1262**DCL      2152<>CALL
DBKPRIOR.PRI_VAL
      1261**DCL      2163>>CALLBLT
DCBNMSF
       851**DCL      2013<<ASSIGN
DCBSF
       799**DCL      1934<<ASSIGN   1978<<ASSIGN   2015>>ASSIGN   2030<<ASSIGN   2047<<ASSIGN   2076<<ASSIGN
      2102<<ASSIGN   2106<<ASSIGN   2114<<ASSIGN   2126<<ASSIGN   2158<<ASSIGN   2186<<ASSIGN   2223<<ASSIGN
      2248<<ASSIGN   2278<<ASSIGN
EGREC$
      1165**DCL      1170--IMP-PTR
ENCRP_SEEDSF
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:421  
       828**DCL       829--REDEF
EOF
      1978**LABEL    1927--CALLALT  1938--CALLALT  1957--CALLALT
ERR
      1311**DCL      2097--ASSIGN   2127--ASSIGN   2159--ASSIGN   2187--ASSIGN   2224--ASSIGN   2249--ASSIGN
      2279--ASSIGN
ERR.DBK
      1313**DCL      1940<<CALLBLT  1941<>CALL     2080<<CALLBLT  2081<>CALL
ERR.PNTR
      1314**DCL      2092<<ASSIGN   2095<<ASSIGN   2124<<ASSIGN   2153<<ASSIGN   2156<<ASSIGN   2184<<ASSIGN
      2217<<ASSIGN   2220<<ASSIGN   2222<<ASSIGN   2244<<ASSIGN   2247<<ASSIGN   2270<<ASSIGN   2274<<ASSIGN
      2276<<ASSIGN
ERR.RECNME
      1315**DCL      1950<>CALL     2082<>CALL     2090<>CALL
ERR.SETNME
      1316**DCL      1951<<ASSIGN   2083<<ASSIGN
ERRBUF$
      1203**DCL      1204--IMP-PTR  1209--IMP-PTR  1216--IMP-PTR  1224--IMP-PTR  1230--IMP-PTR  1236--IMP-PTR
      1244--IMP-PTR  1255--IMP-PTR  1940>>CALLBLT  1943>>IF       1945>>ASSIGN   1945>>ASSIGN   1950>>CALL
      1951>>ASSIGN   2035>>ASSIGN   2077>>ASSIGN   2080>>CALLBLT  2082>>CALL     2083>>ASSIGN   2086>>CALL
      2087>>IF       2089>>ASSIGN   2089>>ASSIGN   2090>>CALL     2105>>CALL     2113>>CALL     2135>>CALLBLT
      2152>>CALL     2163>>CALLBLT  2169>>CALLBLT  2195>>CALL     2195>>CALL     2202>>CALL     2202>>CALL
      2216>>CALL     2228>>CALL     2243>>CALL     2253>>CALL     2253>>CALL     2269>>CALL
ERRCODE
        10**DCL      1953>>DOCASE   2035<<ASSIGN   2221>>IF       2273>>IF
ERRCODESF
       830**DCL       835--REDEF
ERRDANG
      1323**DCL      2254--ASSIGN
ERRDANG.VAL
      1328**DCL      2253<>CALL
ERRFILE.DCB#
      1200**DCL      1934>>ASSIGN   1978>>ASSIGN   2015<<ASSIGN   2030>>ASSIGN
ERRFILE.N
      1197**DCL      2013--ASSIGN
ERRGRBG
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:422  
      1317**DCL      2229--ASSIGN
ERRGRBG.VAL
      1322**DCL      2228<>CALL
ERRMISG
      1340**DCL      2131--ASSIGN
ERRMISG2
      1345**DCL      2138--ASSIGN
ERRMISG2.VAL
      1350**DCL      2135<<CALLBLT  2136<>CALL
ERRMMBR
      1335**DCL      2283--ASSIGN
ERRMULT
      1329**DCL      2107--ASSIGN   2115--ASSIGN
ERRMULT.VAL
      1334**DCL      2105<>CALL     2113<>CALL
ERROR.DBK
      1206**DCL      1940>>CALLBLT
ERROR.RECTYP
      1207**DCL      1943>>IF       1945<<ASSIGN   1945>>ASSIGN   1950<>CALL
ERROR.SETYP
      1205**DCL      1951>>ASSIGN
ERROR_BUF
      1202**DCL      2029<<ASSIGN   2031--ASSIGN
ERROWN
      1363**DCL      2191--ASSIGN
ERROWN2
      1368**DCL      2197--ASSIGN
ERROWN2.TEXT
      1371**DCL      2368<<ASSIGN   2370--ASSIGN
ERROWN2.VFC
      1369**DCL      2196<<ASSIGN   2201<<ASSIGN
FIDSF
       847**DCL      2020<<ASSIGN
FIDSF_RD
       846**DCL       847--REDEF
FIL$ IN PROCEDURE FILL_VAL
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:423  
      2316**DCL      2317--IMP-PTR  2324>>CALLBLT
FILL IN PROCEDURE FILL_VAL
      2317**DCL      2324>>CALLBLT
FILL_OWNTEXT
      2359**PROC     2195--CALL     2202--CALL
FILL_PAINFO
      1987**PROC     2086--CALL     2152--CALL     2216--CALL     2243--CALL     2269--CALL
FILL_RECKEY
      2330**PROC     2253--CALL
FILL_RECNAME
      2292**PROC     1950--CALL     2082--CALL     2090--CALL     2342--CALL
FILL_VAL
      2310**PROC     2105--CALL     2113--CALL     2228--CALL     2351--CALL
FUNSF
       810**DCL      2019<<ASSIGN
GRBGNXT.CODE
      1213**DCL      2035>>ASSIGN
GRBGNXT.NXTVAL
      1214**DCL      2228<>CALL
GRBGNXT.OWNER
      1215**DCL      2216<>CALL
HDR
      1303**DCL      2061--ASSIGN
HELPCODE
       864**DCL       869--REDEF
I
       757**DCL      2078<<DOINDEX  2100>>IF
ICHKSUM
       784**DCL       785--REDEF
INCNOWN.DBK1
      1246**DCL      2195<>CALL
INCNOWN.DBK2
      1251**DCL      2202<>CALL
INCNOWN.OWNDBK1
      1249**DCL      2195<>CALL
INCNOWN.OWNDBK2
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:424  
      1252**DCL      2202<>CALL
I_O_BUF$
       762**DCL       763--IMP-PTR
J
       758**DCL      2317--IMP-SIZ  2321<<CALLBLT  2324>>CALLBLT  2336--IMP-SIZ  2338<<ASSIGN   2340>>ASSIGN
      2341<<ASSIGN   2342>>CALL     2343<<CALLBLT  2343>>CALLBLT  2344>>ASSIGN   2346<<ASSIGN   2347>>ASSIGN
      2350<<ASSIGN   2351>>CALL     2364--IMP-SIZ  2369<<ASSIGN   2371>>ASSIGN   2376<<CALLBLT  2377<<ASSIGN
      2377>>ASSIGN   2378>>ASSIGN   2380>>ASSIGN   2381<<ASSIGN   2382>>ASSIGN   2387<<CALLBLT  2388<<ASSIGN
      2388>>ASSIGN   2389>>ASSIGN
KEY IN PROCEDURE FILL_RECKEY
      2334**DCL      2330--PROC     2351<>CALL
KEY IN PROCEDURE FILL_VAL
      2313**DCL      2310--PROC     2319>>CALLBLT
KEY1 IN PROCEDURE FILL_OWNTEXT
      2361**DCL      2359--PROC     2374>>CALLBLT
KEY2 IN PROCEDURE FILL_OWNTEXT
      2362**DCL      2359--PROC     2385>>CALLBLT
KEYSF
       801**DCL      2033<<ASSIGN
KEYVSF
       802**DCL       807--REDEF
KEYVSF.WD_ONE
       804**DCL       805--REDEF
LASTREC IN PROCEDURE REPT_MULT
      2105**LABEL    2101--CALLALT
LSTREC IN PROCEDURE REPT_MULT
      2113**LABEL    2099--CALLALT
M$LO
       772**DCL      2047>>ASSIGN   2076>>ASSIGN   2102>>ASSIGN   2106>>ASSIGN   2114>>ASSIGN   2126>>ASSIGN
      2158>>ASSIGN   2186>>ASSIGN   2223>>ASSIGN   2248>>ASSIGN   2278>>ASSIGN
MISGNXT.PRI_VAL
      1235**DCL      2135>>CALLBLT
MMBR.OWNER
      1229**DCL      2269<>CALL
MSGCODE
       836**DCL       837--REDEF
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:425  
MSTR$
      1547**DCL      1550--IMP-PTR  1951>>ASSIGN   2083>>ASSIGN   2298>>DOWHILE  2303>>ASSIGN
MSTR_REF.NAME
      1555**DCL      1951>>ASSIGN   2083>>ASSIGN   2303>>ASSIGN
MSTR_REF.NXTHSH
      1553**DCL      1554--REDEF
MSTR_REF.PAENT
      1559**DCL      1560--REDEF
MSTR_REF.PAOFF
      1556**DCL      1557--REDEF
MSTR_REF.TYPE
      1551**DCL      2298>>DOWHILE
MULTNXT.BADDBK
      1221**DCL      2080>>CALLBLT  2113<>CALL
MULTNXT.BADNXT
      1218**DCL      2105<>CALL
MULTNXT.OWNER
      1223**DCL      2086<>CALL
MULTNXT.PTCNT
      1222**DCL      2077>>ASSIGN
MULTNXT.RECTYP
      1219**DCL      2082<>CALL     2087>>IF       2089<<ASSIGN   2089>>ASSIGN   2090<>CALL
MULTNXT.SETYP
      1217**DCL      2083>>ASSIGN
NAME IN PROCEDURE FILL_RECNAME
      2294**DCL      2292--PROC     2303<<ASSIGN   2305<<ASSIGN
NO_ERRORS
      1201**DCL      2052>>IF
NO_RECS
      1609**DCL      1951>>ASSIGN   2083>>ASSIGN   2298>>DOWHILE  2302>>IF
OPEN_ERRFILE
      2011**PROC     1926--CALL
ORGSF
       800**DCL      2017<<ASSIGN
PAPTR IN PROCEDURE FILL_PAINFO
      1989**DCL      1987--PROC
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:426  
PAPTR.ENT IN PROCEDURE FILL_PAINFO
      1990**DCL      1995>>CALLBLT
PAPTR.GRP IN PROCEDURE FILL_PAINFO
      1991**DCL      1997>>IF       2002>>CALLBLT
PAPTRS
        11**DCL      1946<<ASSIGN   1949<<ASSIGN   2084>>IF       2150>>IF       2214>>IF       2241>>IF
      2267>>IF
PA_ENTRY
        14**DCL      1995<<CALLBLT  1996<>CALL     1998>>CALLBLT  2001>>CALLBLT  2004--CALLBLT
PA_GROUP
        15**DCL      2002<<CALLBLT  2003<>CALL     2004>>CALLBLT
PA_INFO
        16**DCL      1998<<CALLBLT  2004<<CALLBLT  2092>>ASSIGN   2153>>ASSIGN   2217>>ASSIGN   2244>>ASSIGN
      2270>>ASSIGN
PTSVCNT
        12**DCL      2077<<ASSIGN   2078>>DOINDEX  2100>>IF
READ_ERRFILE
      2027**PROC     1938--CALL     2101--CALL
REC$
       743**DCL       766--IMP-PTR
RECTYPE IN PROCEDURE FILL_RECKEY
      2333**DCL      2330--PROC     2342<>CALL
REC_DATA_LN
       771**DCL       770--IMP-SIZ
REC_XREF$
      1602**DCL      1603--IMP-PTR
REPT_DANG
      2239**PROC     1966--CALL
REPT_DBK
      2148**PROC     1972--CALL
REPT_GRBG
      2212**PROC     1955--CALL
REPT_MISG
      2122**PROC     1963--CALL
REPT_MMBR
      2265**PROC     1960--CALL
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:427  
REPT_MULT
      2074**PROC     1957--CALL
REPT_OWN
      2182**PROC     1969--CALL
SET_XREF$
      1591**DCL      1592--IMP-PTR
STR$ IN PROCEDURE FILL_OWNTEXT
      2365**DCL      2364--IMP-PTR  2370<<ASSIGN   2371>>ASSIGN   2372<<ASSIGN   2372>>ASSIGN   2378>>ASSIGN
      2380<<ASSIGN   2380>>ASSIGN   2382>>ASSIGN   2383<<ASSIGN   2383>>ASSIGN   2389>>ASSIGN
STRING IN PROCEDURE FILL_OWNTEXT
      2364**DCL      2371<<ASSIGN   2378<<ASSIGN   2382<<ASSIGN   2389<<ASSIGN
SYS_FUNC_CLOS
      1920**DCL-ENT  1935--CALL     1979--CALL
SYS_FUNC_GETDCB
      1923**DCL-ENT  2014--CALL
SYS_FUNC_OPEN
      1919**DCL-ENT  2021--CALL
SYS_FUNC_READ
      1921**DCL-ENT  2034--CALL
SYS_FUNC_WRIT
      1922**DCL-ENT  2055--CALL     2059--CALL     2063--CALL     2066--CALL     2099--CALL     2109--CALL
      2117--CALL     2129--CALL     2133--CALL     2140--CALL     2161--CALL     2167--CALL     2173--CALL
      2189--CALL     2193--CALL     2199--CALL     2203--CALL     2226--CALL     2231--CALL     2251--CALL
      2256--CALL     2281--CALL     2285--CALL
TMP IN PROCEDURE FILL_OWNTEXT
      2366**DCL      2374<<CALLBLT  2375<>CALL     2376>>CALLBLT  2378>>ASSIGN   2385<<CALLBLT  2386<>CALL
      2387>>CALLBLT  2389>>ASSIGN
TMP IN PROCEDURE FILL_VAL
      2315**DCL      2316--DCLINIT  2319<<CALLBLT  2320<>CALL     2321>>CALLBLT
TYPE IN PROCEDURE FILL_RECNAME
      2295**DCL      2292--PROC     2298>>DOWHILE
UNDR
      1307**DCL      2065--ASSIGN
V1 IN PROCEDURE FILL_PAINFO
      1992**DCL      1993--IMP-SIZ  2001<<CALLBLT  2004>>CALLBLT
VALHDR
PL6.E3A0      #005=ZIU$RPTVAL File=ZIU$VALSET.:ZIC0TSI                           FRI 09/05/97 13:34 Page:428  
      1299**DCL      2050--ASSIGN
VALHDR.REPT
      1301**DCL      2054<<ASSIGN
VFCSF
       816**DCL      2048<<ASSIGN
WRITE_HEADER
      2045**PROC     1927--CALL
X
       760**DCL      2297<<ASSIGN   2298>>DOWHILE  2298>>DOWHILE  2299<<ASSIGN   2299>>ASSIGN   2302>>IF
      2303>>ASSIGN
ZERO_SUP
      1924**DCL-ENT  1941--CALL     1996--CALL     2003--CALL     2081--CALL     2136--CALL     2164--CALL
      2170--CALL     2320--CALL     2375--CALL     2386--CALL
ZI$DIR.ALTKEY
      1844**DCL      1845--REDEF    1846--REDEF
ZI$DIR.AREAFID
      1810**DCL      1811--REDEF
ZI$DIR.DATE
      1849**DCL      1853--REDEF
ZI$DIR.DEST_SEED
      1805**DCL      1806--REDEF    1807--REDEF
ZI$DIR.ENCP_SEED
      1802**DCL      1803--REDEF    1804--REDEF
ZI$DIR.REPRT_ERRS
      1835**DCL      2052>>IF
ZI$DIR.REPRT_ZERO
      1836**DCL      1837--REDEF
ZI$DIR.SCHFID
      1808**DCL      1809--REDEF
ZI$DIR.TIME
      1854**DCL      1859--REDEF
