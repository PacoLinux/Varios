VERSION E05

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:1    
        1        1        /*M* KVO$GNRPST VDH HANDLER POSITIONING CHARACTER GENERATION ROUTINES         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVO$GNRPST: PROC (PARM);
        9        9
       10       10        %INCLUDE KL_AFCN_C;
       11      111        %INCLUDE KL_MACRO_C;
       12     3463        %INCLUDE K_ID_E;
       13     3513        %K#ENTID_E;
       14     3532        %K#LYRID_E;
       15     3539
       16     3540 S      %INCLUDE KV$GLB;
       17     3541 S      %INCLUDE KV$GLBCTX;
       18     3542 S      %INCLUDE KV$INT;
       19     3543 S      %INCLUDE KV$USR;
       20     3544 S      %INCLUDE KV_GLBCNS_E;
       21     3545        %KV_PHSPSTMOD_E;
       22     3552        %KV_DVCCTR_E;
       23     3567        %KV_USR_FNC_E;
       24     3583        %INCLUDE KV_ASCCHR_E;              /*                 Equ's for ASCII chr's   */
       25     3720        %INCLUDE KV_ERD_E;            /*               Equs for disps into KV$ERD     */
       26     3807        %KV$USR_EVT;                            /*             VDI-user event         */
       27     3842        %KV$MRD (STCLASS="BASED(MRD$)"); /*                   VDH master real device  */
       28     3889        %EQU KV_MRD = CHARTEXT ('KV$MRD');
       29     3890        %KV$PTR;                           /*                 VDH pointers, status    */
       30     3933        %KV$SRD (STCLASS="BASED(SRD$)"); /*              VDH subordinate real device  */
       31     4208        %EQU KV_SRD = CHARTEXT ('KV$SRD');
       32     4209        %KV$VDI;                 /*                 VDI (VDH <-> VDH user interface)  */
       33     4280        %KV$USRPRM;
       34     4331        %KV$SHRBFR (STCLASS="BASED(B4)");  /*     VDH miscellaneous buffer definition */
       35     4363    1   DCL KV$SHRBFR_BYT(0:7) REDEF KV$SHRBFR UBIN(8) CALIGNED;
       36     4364        %KV$ERD (STCLASS="BASED(ERD$)");   /*                 VDH device definition   */
       37     4448        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:2    
       38     4449        /* external procs. */
       39     4450    1   DCL KVO$OTPLCL ENTRY(1);
       40     4451    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
       41     4452    1   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
       42     4453        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:3    
       43     4454        /* Parameter and its various interpretations. */
       44     4455    1   DCL PARM CHAR(DVCCTRX);
       45     4456
       46     4457        /* Redefed for KVO$DVCCTR. */
       47     4458    1   DCL DVCCTRX REDEF PARM SBIN;
       48     4459
       49     4460        /* Redef for KVO$GNRPST. */
       50     4461        %KV$USR_PST (NAME=USR_PST, STCLASS=REDEF PARM);
       51     4531        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:4    
       52     4532
       53     4533        /* Define the function values.                                                */
       54     4534
       55     4535        %EQU NODFNC_JMP=0;
       56     4536        %SET NODFNCCHR=' ';
       57     4537        %EQU NODFNC_BS=LENGTHC(NODFNCCHR);      /* (backspace)                        */
       58     4538        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIIBS));
       59     4539        %EQU NODFNC_CR=LENGTHC(NODFNCCHR);      /* (carriage return)                  */
       60     4540        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIICR));
       61     4541        %EQU NODFNC_CR_NEWLIN=LENGTHC(NODFNCCHR); /* (CR as new-line)                 */
       62     4542        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIICR));
       63     4543        %EQU NODFNC_CR_NO_OPT=LENGTHC(NODFNCCHR); /* (CR, no optimization)            */
       64     4544        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIICR));
       65     4545        %EQU NODFNC_CUB=LENGTHC(NODFNCCHR);     /* (cursor back)                      */
       66     4546        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_CUB_CHR#/8));
       67     4547        %EQU NODFNC_CUD=LENGTHC(NODFNCCHR);     /* (cursor down)                      */
       68     4548        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_CUD_CHR#/8));
       69     4549        %EQU NODFNC_CUF=LENGTHC(NODFNCCHR);     /* (cursor forward)                   */
       70     4550        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_CUF_CHR#/8));
       71     4551        %EQU NODFNC_CUP=LENGTHC(NODFNCCHR);     /* (cursor position)                  */
       72     4552        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_CUP_CHR#/8));
       73     4553        %EQU NODFNC_CUU=LENGTHC(NODFNCCHR);     /* (cursor up)                        */
       74     4554        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_CUU_CHR#/8));
       75     4555        %EQU NODFNC_FF=LENGTHC(NODFNCCHR);      /* (form feed)                        */
       76     4556        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_FRMFED_CHR#/8));
       77     4557        %EQU NODFNC_HPA=LENGTHC(NODFNCCHR);     /* (horizontal position absolute)     */
       78     4558        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_HPA_ALG#/8));
       79     4559        %EQU NODFNC_HT=LENGTHC(NODFNCCHR);      /* (horizontal tab)                   */
       80     4560        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIIHT));
       81     4561        %EQU NODFNC_LF=LENGTHC(NODFNCCHR);      /* (line feed)                        */
       82     4562        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIILF));
       83     4563        %EQU NODFNC_LF_NEWLIN=LENGTHC(NODFNCCHR); /* (LF as new-line)                 */
       84     4564        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIILF));
       85     4565        %EQU NODFNC_NXTHT=LENGTHC(NODFNCCHR);   /* (horizontal tab then BS)           */
       86     4566        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIIHT));
       87     4567        %EQU NODFNC_SP=LENGTHC(NODFNCCHR);      /* (space)                            */
       88     4568        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIISP));
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:5    
       89     4569        %EQU NODFNC_VPA=LENGTHC(NODFNCCHR);     /* (vertical position absolute)       */
       90     4570        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIIVT));
       91     4571        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:6    
       92     4572
       93     4573        /* Characters associated with the above functions.                            */
       94     4574
       95     4575    1   DCL NODFNCDAT CHAR(0) CONSTANT INIT(%NODFNCCHR);
       96     4576    1   DCL NODFNCCHR(0:%(LENGTHC(NODFNCCHR)-1)) REDEF NODFNCDAT CHAR(1);
       97     4577    1   DCL NODFNCOFS(0:%(LENGTHC(NODFNCCHR)-1)) REDEF NODFNCDAT UBIN BYTE UNAL;
       98     4578
       99     4579        /* Table to convert from characters to seconds (indexed by LINSPD). */
      100     4580    1   DCL KV_100MCRSCNPRDPERCHR(0:15) CONSTANT SYMDEF UBIN INIT(
      101     4581    1    %(100000/70),                          /*    50 BAUD                         */
      102     4582    1    %(100000/100),                         /*    75 BAUD                         */
      103     4583    1    %(100000/100),                         /*   110 BAUD                         */
      104     4584    1    %(100000/150),                         /*   134 BAUD                         */
      105     4585    1    %(100000/150),                         /*   150 BAUD                         */
      106     4586    1    %(100000/200),                         /*   200 BAUD                         */
      107     4587    1    %(100000/300),                         /*   300 BAUD                         */
      108     4588    1    %(100000/600),                         /*   600 BAUD                         */
      109     4589    1    %(100000/1050),                        /*  1050 BAUD                         */
      110     4590    1    %(100000/1200),                        /*  1200 BAUD                         */
      111     4591    1    %(100000/1800),                        /*  1800 BAUD                         */
      112     4592    1    %(100000/2000),                        /*  2000 BAUD                         */
      113     4593    1    %(100000/2400),                        /*  2400 BAUD                         */
      114     4594    1    %(100000/4800),                        /*  4800 BAUD                         */
      115     4595    1    %(100000/9600),                        /*  9600 BAUD                         */
      116     4596    1    %(100000/19200)) /* 19200 BAUD */ ;
      117     4597
      118     4598        /* Maximum HPA column.  Indexed by KV$ERD.HPA_ALG, yields the                 */
      119     4599        /* Maximum column that HPA (horizontal position absolute) can                 */
      120     4600        /* Position to.                                                               */
      121     4601
      122     4602        %ERROR (KV_HPA_ALG_ANS~=1 OR KV_HPA_ALG_DBL~=2 OR KV_HPA_ALG_NEC~=3,,
      123     4603         'These HPA tables are out of order.');
      124     4604    1   DCL MAXHPACLM(0:7) CONSTANT UBIN INIT(0,32767,126,163,32767,0*0);
      125     4605
      126     4606        /* Average HPA size.  Indexed by KV$ERD.HPA_ALG, yields the                   */
      127     4607        /* Average length of the HPA sequence.                                        */
      128     4608
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:7    
      129     4609    1   DCL AVRHPASIZ(0:7) CONSTANT UBIN BYTE UNAL INIT(0,5,3,3,5,0*0);
      130     4610
      131     4611        /* Maximum HPA size.  Indexed by KV$ERD.HPA_ALG, yields the                   */
      132     4612        /* Maximum length of the HPA sequence.                                        */
      133     4613
      134     4614    1   DCL MAXHPASIZ(0:7) CONSTANT UBIN BYTE UNAL INIT(0,8,3,3,8,0*0);
      135     4615
      136     4616        /* Average CUP size.  Indexed by KV$ERD.CUP_ALG, yields the                   */
      137     4617        /* Average length of the CUP sequence.                                        */
      138     4618
      139     4619        %ERROR (KV_CUP_ALG_ANS~=1 OR KV_CUP_ALG_TBL~=2,,
      140     4620         'These CUP tables are out of order.');
      141     4621    1   DCL AVRCUPSIZ(0:3) CONSTANT UBIN BYTE UNAL INIT(0,8,4,0);
      142     4622
      143     4623        /* Maximum CUP size.  Indexed by KV$ERD.CUP_ALG, yields the                   */
      144     4624        /* Maximum length of the CUP sequence.                                        */
      145     4625
      146     4626    1   DCL MAXCUPSIZ(0:3) CONSTANT UBIN BYTE UNAL INIT(0,10,5,0);
      147     4627
      148     4628        /* Positioning error count.  Number of times we could find                    */
      149     4629        /* No path thru the tree that would get us from the current device            */
      150     4630        /* Position to the desired destination position.  This failure                */
      151     4631        /* Occurs when a request to move up is issued to a device that                */
      152     4632        /* Can't move up, for example.                                                */
      153     4633
      154     4634    1   DCL KV_PSTERRCNT UBIN SYMREF;
      155     4635
      156     4636        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:8    
      157     4637        %MACRO TREE (NEXT=0, NAME=, SPARE=, FNC=0, ALT=NO, OPT=NO);
      158     4638        %LSET LISTDIR='0'B;
      159     4639        %LSET LISTEXP='1'B;
      160     4640        %IF LENGTHC(TEXTCHAR(NAME))~=0;
      161     4641        DCL 1 NAME CONSTANT,2 * UBIN INIT(0),
      162     4642        %SET TREX=1;
      163     4643        %ENDIF;
      164     4644               2 * BIT(16) INIT(%CONCAT(TEXTCHAR(ALT)~='NO', TEXTCHAR(OPT)~='NO',
      165     4645         BINBIT(FNC,6),BINBIT(NEXT,8))),
      166     4646        %SET TREX=TREX+1;
      167     4647        %IF LENGTHC(TEXTCHAR(SPARE))~=0;
      168     4648             2 *(0:SPARE) UBIN INIT(0*0);
      169     4649        %SET TREX=TREX+SPARE+1;
      170     4650        %ENDIF;
      171     4651        %MEND;
      172     4652
      173     4653        /* First we need labelled nodes, since the macro can't do forward refs */
      174     4654
      175     4655         %TREE (FNC=NODFNC_SP, NAME=Y_TREDAT);
      176     4670        %EQU TRE_SP = TREX-1;
      177     4671
      178     4672        %EQU TRE_BS = TREX;
      179     4673         %TREE (FNC=NODFNC_BS);
      180     4688
      181     4689        %EQU TRE_LF = TREX;
      182     4690         %TREE (FNC=NODFNC_LF);
      183     4705
      184     4706        %EQU TRE_CUF = TREX;
      185     4707         %TREE (FNC=NODFNC_CUF);
      186     4722
      187     4723        /* Now a subnode for the UNK_PST/NO_OPT tree */
      188     4724
      189     4725        %EQU TRE_LF_SP = TREX;
      190     4726         %TREE (FNC=NODFNC_LF, NEXT=TRE_SP);
      191     4741
      192     4742        /* Tree for unknown starting position. */
      193     4743
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:9    
      194     4744        %EQU TRE_UNK_PST = TREX;
      195     4745         %TREE (ALT=, FNC=NODFNC_CUP, NEXT=TRE_LF);
      196     4760        /*                       Drop into NO_OPT for non-crts                        */
      197     4761
      198     4762        /* Tree for no optimization.  This tree is used if KV$MRD.NOOPTMIZ
      199     4763           is set.  It is intended for outputing to devices such as
      200     4764           paper tape punches and computers.                                          */
      201     4765
      202     4766        %EQU TRE_NO_OPT = TREX;
      203     4767         %TREE (ALT=, FNC=NODFNC_CR_NO_OPT, NEXT=TRE_LF_SP);
      204     4782         %TREE (ALT=, FNC=NODFNC_SP);
      205     4797         %TREE (ALT=, FNC=NODFNC_BS);
      206     4812         %TREE (ALT=, FNC=NODFNC_CR, NEXT=TRE_SP);
      207     4827         %TREE (FNC=NODFNC_CR_NEWLIN, NEXT=TRE_SP);
      208     4842
      209     4843        /* Basic tree using any positioning.  Used for most hard-copy
      210     4844           devices.                                                                   */
      211     4845
      212     4846        %EQU TRE_ANY_HRZ = TREX;
      213     4847         %TREE (OPT=, FNC=NODFNC_HPA, NEXT=TREX+1);
      214     4862         %TREE (ALT=, FNC=NODFNC_SP);
      215     4877         %TREE (ALT=, FNC=NODFNC_HT, NEXT=TRE_SP);
      216     4892         %TREE (OPT=, FNC=NODFNC_NXTHT, NEXT=TRE_BS);
      217     4907
      218     4908        %EQU TRE_BSC_ANY = TREX;
      219     4909         %TREE (ALT=, FNC=NODFNC_CR, NEXT=TREX+1);
      220     4924         %TREE (ALT=, OPT=, FNC=NODFNC_LF, NEXT=TRE_ANY_HRZ);
      221     4939         %TREE (ALT=, FNC=NODFNC_CR_NEWLIN, NEXT=TRE_ANY_HRZ);
      222     4954         %TREE (FNC=NODFNC_CUU, NEXT=TRE_ANY_HRZ);
      223     4969
      224     4970        /* Tree for CRT using any positioning.                                        */
      225     4971
      226     4972        %EQU TRE_CRT_ANY = TREX;
      227     4973         %TREE (ALT=, FNC=NODFNC_CUP, NEXT=TRE_LF);
      228     4988         %TREE (ALT=, FNC=NODFNC_CR, NEXT=TREX+1);
      229     5003         %TREE (ALT=, OPT=, FNC=NODFNC_LF, NEXT=TRE_ANY_HRZ);
      230     5018         %TREE (ALT=, FNC=NODFNC_CR_NEWLIN, NEXT=TRE_ANY_HRZ);
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:10   
      231     5033         %TREE (FNC=NODFNC_CUU, NEXT=TRE_ANY_HRZ);
      232     5048
      233     5049        /* Tree for CRT using skipping positioning.                                   */
      234     5050
      235     5051        %EQU TRE_CRT_SKP = TREX;
      236     5052         %TREE (ALT=, FNC=NODFNC_CUP, NEXT=TRE_LF);
      237     5067         %TREE (ALT=, FNC=NODFNC_BS, NEXT=TRE_LF);
      238     5082         %TREE (ALT=, FNC=NODFNC_CR, NEXT=TREX+2);
      239     5097        %EQU TRE_SKP_HRZ = TREX+3;
      240     5098         %TREE (ALT=, FNC=NODFNC_CR_NEWLIN, NEXT=TRE_SKP_HRZ);
      241     5113         %TREE (ALT=, OPT=, FNC=NODFNC_LF, NEXT=TRE_SKP_HRZ);
      242     5128         %TREE (ALT=, FNC=NODFNC_CUU, NEXT=TRE_SKP_HRZ);
      243     5143         %TREE (OPT=, FNC=NODFNC_HPA, NEXT=TREX+1);
      244     5158         %TREE (ALT=, OPT=, FNC=NODFNC_HT, NEXT=TRE_CUF);
      245     5173         %TREE (FNC=NODFNC_NXTHT, NEXT=TRE_BS);
      246     5188
      247     5189        /* Tree for CRT using blanking positioning.                                   */
      248     5190
      249     5191        %EQU TRE_CRT_BLN = TRE_SP;
      250     5192
      251     5193         %TREE (SPARE=20);
      252     5208
      253     5209        /* Structure defining an optimizing tree entry (a node).                      */
      254     5210
      255     5211    1   DCL 1 Y_TRE(0:%(TREX-1)) REDEF Y_TREDAT,
      256     5212
      257     5213        /* Flag indicating that there is an alternative node for this node.           */
      258     5214
      259     5215    1          2 ALT BIT(1),
      260     5216        %EQU TRE_ALT_MSK = '8000'X;
      261     5217
      262     5218        /* Flag indicating that this node is optional. */
      263     5219
      264     5220    1          2 OPT BIT(1),
      265     5221        %EQU TRE_OPT_MSK = '4000'X;
      266     5222
      267     5223        /* Function for this node (e.g., CR, LF, SP, CUP, etc)                        */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:11   
      268     5224
      269     5225    1          2 FNC UBIN(6) UNAL,
      270     5226
      271     5227        /* Next index*                                                                */
      272     5228    1          2 NXTX UBIN BYTE UNAL;
      273     5229
      274     5230    1   DCL PSTTREX_CRT(0:9) CONSTANT UBIN BYTE CALIGNED
      275     5231    1    INIT(%TRE_CRT_SKP*2,%TRE_CRT_BLN,%TRE_CRT_ANY,%TRE_CRT_SKP*0);
      276     5232
      277     5233         %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:12   
      278     5234        /* Structure for a node entry, which is used to keep track of our
      279     5235           path thru the optimization trees.                                          */
      280     5236
      281     5237    1   DCL 1 Y$NOD BASED(NOD$) ALIGNED,
      282     5238
      283     5239        /* Function to perform.                                                       */
      284     5240    1          2 FNC UBIN BYTE UNAL,
      285     5241
      286     5242        /* Positioning required. */
      287     5243    1          2 PSTRQR UNAL,
      288     5244
      289     5245        /* Horizontal positioning isn't done.                                            */
      290     5246    1             3 HRZ BIT(1),
      291     5247
      292     5248        /* Vertical positioning isn't done. */
      293     5249    1             3 VRT BIT(1),
      294     5250
      295     5251        /* Optimization tree index.                                                   */
      296     5252    1          2 TREX UBIN(6) UNAL,
      297     5253
      298     5254        /* Device line.                                                               */
      299     5255    1          2 DVCLIN SBIN,
      300     5256
      301     5257        /* Device column.                                                             */
      302     5258    1          2 DVCCLM UBIN,
      303     5259
      304     5260        /* Device line bias.  Device line = physical line + device line bias.         */
      305     5261    1          2 DVCLINBIS SBIN,
      306     5262
      307     5263        /* Time (in character time units) for all nodes from the top
      308     5264           thru this node.                                                            */
      309     5265    1          2 TIM UBIN,
      310     5266
      311     5267        /* Time fill required before the function.                                    */
      312     5268    1          2 TIMBFR UBIN,
      313     5269
      314     5270        /* Time fill required after the function.                                     */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:13   
      315     5271    1          2 TIMAFT UBIN,
      316     5272
      317     5273        /* Function count.                                                            */
      318     5274    1          2 FNCCNT UBIN;
      319     5275
      320     5276    1   DCL 1 Y$NODMOV REDEF Y$NOD,
      321     5277
      322     5278        /* Portion to copy to begin a new one */
      323     5279
      324     5280    1          2 COPDWN(0:4) UBIN,
      325     5281
      326     5282        /* Portion to clear to begin a new one */
      327     5283
      328     5284    1          2 CLR(0:2) UBIN;
      329     5285
      330     5286        /* Structure for moving several Y$NODs around. */
      331     5287
      332     5288    1   DCL Y$NODS CHAR(R2) BASED;
      333     5289
      334     5290        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:14   
      335     5291        /* Local storage */
      336     5292
      337     5293        /* ERD$ points to KV$ERD */
      338     5294
      339     5295    1   DCL ERD$ PTR;
      340     5296
      341     5297        /* NOD$ points to current node */
      342     5298
      343     5299    1   DCL NOD$ PTR;
      344     5300
      345     5301        /* MRD$ points to KV$MRD. */
      346     5302
      347     5303    1   DCL MRD$ PTR;
      348     5304
      349     5305        /* SRD$ points to KV$SRD. */
      350     5306
      351     5307    1   DCL SRD$ PTR;
      352     5308
      353     5309        /* Temp pointer */
      354     5310
      355     5311    1   DCL B4 PTR;
      356     5312        /* Current path top pointer - one below the saved path.                       */
      357     5313
      358     5314    1   DCL CRNPTHBGN$ PTR;
      359     5315
      360     5316        /* Previous node pointer - saved since a path may not be contiguous.          */
      361     5317
      362     5318    1   DCL PRVNOD$ PTR;
      363     5319
      364     5320        /* Saved path alternate - saved path node for which CRNPTH is an alternate. */
      365     5321
      366     5322    1   DCL SVDPTHALT$ PTR;
      367     5323
      368     5324        /* Saved path bottom pointer -end of the saved path.                         */
      369     5325
      370     5326    1   DCL SVDPTHEND$ PTR;
      371     5327
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:15   
      372     5328        /* Time (100 microsecond units) per character.                                */
      373     5329
      374     5330    1   DCL TIMPERCHR SBIN;
      375     5331
      376     5332        /* Immediate stop time - give up when a path's time beats this.               */
      377     5333
      378     5334    1   DCL IMDSTPTIM SBIN;
      379     5335
      380     5336        /* Current index into Y_TRE.                                                  */
      381     5337
      382     5338    1   DCL TREX UBIN;
      383     5339
      384     5340        /* Last tab physical column.  Refers to the last horizontal tabbing
      385     5341           situation analyzed.  The columns involved and number
      386     5342           of tabs are saved in case we analyze the same situation later.             */
      387     5343
      388     5344    1   DCL LSTTABPHSCLM SBIN;
      389     5345
      390     5346        /* Last tab device column.                                                    */
      391     5347
      392     5348    1   DCL LSTTABDVCCLM SBIN;
      393     5349
      394     5350        /* Tab column for the last tab situation analyzed.                           */
      395     5351
      396     5352    1   DCL TABCLM SBIN;
      397     5353
      398     5354        /* Next tab column.  Where the first tab after the last normally-usable
      399     5355           (for this situation) tab is.  This is used in case we decide
      400     5356           to tab beyond the desired position, and backspace or CUB back.             */
      401     5357
      402     5358    1   DCL NXTTABCLM SBIN;
      403     5359
      404     5360        /* Tab count.  Number of tabs required to get from the current device
      405     5361           column to the last normally-usable tab.                                    */
      406     5362
      407     5363    1   DCL TABCNT SBIN;
      408     5364
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:16   
      409     5365        /* Max tab size (in character positions). Used to compute timing porperly. */
      410     5366
      411     5367    1   DCL MAXTAB SBIN;
      412     5368
      413     5369        /* Requested position.                                                        */
      414     5370        %KV$PST (NAME=RQS, STCLASS=);
      415     5404    1   DCL RQS_PST REDEF RQS SBIN(32);
      416     5405
      417     5406        /* Device position converted to logical position (dvclinbis subtracted) */
      418     5407        %KV$PST (NAME=DVC, STCLASS=);
      419     5441    1   DCL DVC_PST REDEF DVC SBIN(32);
      420     5442
      421     5443        /* High non-blank logical position                                           */
      422     5444        %KV$PST (NAME=HI_NONBLN, STCLASS=);
      423     5478    1   DCL HI_NONBLN_PST REDEF HI_NONBLN SBIN(32);
      424     5479
      425     5480        /* Original high non-blank logical position                                  */
      426     5481        %KV$PST (NAME=ORGHI_NONBLN, STCLASS=);
      427     5515    1   DCL ORGHI_NONBLN_PST REDEF ORGHI_NONBLN SBIN(32);
      428     5516
      429     5517        /* Physical positioning mode, from KV$USR_PST.PHSPSTMOD.                      */
      430     5518
      431     5519    1   DCL PHSPSTMOD SBIN;
      432     5520
      433     5521        /* Scroll count.  From SCRCNT or computed for scrolling windows. */
      434     5522
      435     5523    1   DCL SCRCNT SBIN;
      436     5524
      437     5525        /* Flags                                                                      */
      438     5526
      439     5527    1   DCL 1 FLG,
      440     5528
      441     5529        /* Lop. After generating intermediate positioning, loop back up to the top. */
      442     5530
      443     5531    1          2 LOP BIT(1),
      444     5532
      445     5533        /* Flag. We've set the high non-blank physical position.                      */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:17   
      446     5534
      447     5535    1          2 SETHI_NONBLN_PST BIT(1),
      448     5536
      449     5537        /* Erred.  Couldn't find a way to do it. */
      450     5538
      451     5539    1          2 ERRED BIT(1),
      452     5540
      453     5541        /* Broke.  Erred with PSTMOD_ANY - give up if UN_KNWPST fails too */
      454     5542
      455     5543    1          2 BROKE BIT(1);
      456     5544
      457     5545        %EQU MAXNMBNOD=10*8;
      458     5546        /* Current and saved paths.                                                   */
      459     5547
      460     5548    1   DCL CRNPTH(0:%(MAXNMBNOD-1)) SBIN;
      461     5549    1   DCL CHRBFR REDEF CRNPTH CHAR(%(MAXNMBNOD*2));
      462     5550    1   DCL CHRBFRA(0:%(MAXNMBNOD*2-1)) REDEF CRNPTH UBIN BYTE CALIGNED;
      463     5551    1   DCL CHRBFRD(0:%(MAXNMBNOD/2-1)) REDEF CRNPTH UBIN(32);
      464     5552
      465     5553        %KV$USR_EVT(NAME=USR_EVT,STCLASS=AUTO);
      466     5588        %KV$USR_EVT (NAME=KV_USR_EVT, STCLASS=SYMREF);
      467     5623
      468     5624        %KV$USR_OTPRPTCHR (NAME=USR_OTPRPTCHR, STCLASS=AUTO);
      469     5659
      470     5660    1   DCL R2 SBIN;
      471     5661    1   DCL R2U REDEF R2 UBIN;
      472     5662    1   DCL 1 R2H REDEF R2,
      473     5663    1          2 U UBIN(8) UNAL,2 * BIT(8);
      474     5664        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:18   
      475     5665    1      MRD$ = KV$PTR.MRD$;
      476     5666    1      SRD$ = KV$PTR.SRD$;
      477     5667    1      ERD$ = %KV_MRD.ERD$;
      478     5668
      479     5669        /* Generate positioning characters to make the device position
      480     5670           match up with the requested position.                                      */
      481     5671
      482     5672    1      USR_EVT = KV_USR_EVT;
      483     5673    1      PHSPSTMOD = USR_PST.PHSPSTMOD;
      484     5674    1      SCRCNT =USR_PST.SCRCNT;
      485     5675    1      ORGHI_NONBLN_PST = %KV_SRD.HI_NONBLN_PST;
      486     5676    1      HI_NONBLN_PST = ORGHI_NONBLN_PST;
      487     5677    1      LSTTABPHSCLM = 0;
      488     5678    1      TIMPERCHR = KV_100MCRSCNPRDPERCHR(%KV_VDI.LINSPD);
      489     5679    2      IF NOT %KV_SRD.NOOPTMIZ THEN DO;
      490     5680    2         IMDSTPTIM = %KV_MRD.MINSP_FORPST;
      491     5681    2      END; ELSE DO;
      492     5682    2         IMDSTPTIM = BITBIN('7FFF'X);
      493     5683    2      END /* If */;
      494     5684    1      FLG = '0'B;
      495     5685    2      IF %KV_MRD.AUTONL AND %KV_MRD.DVCCLM>%KV_MRD.WDT THEN DO;
      496     5686
      497     5687        /* The terminal has done a CR-LF for us. Account for its position
      498     5688           and send out the timing.                                                   */
      499     5689
      500     5690    2         CALL AUTONLTMN;
      501     5691    3         IF USR_OTPRPTCHR.CNT>0 THEN DO;
      502     5692    3            USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;
      503     5693    3            CALL OTPRPTCHR;
      504     5694    3         END /* If */;
      505     5695    2         %KV_MRD.DVCCLM = 1;
      506     5696    3         IF %KV_SRD.SCROLL AND %KV_MRD.DVCLIN>=%KV_MRD.LNG THEN DO;
      507     5697    3            %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS-1;
      508     5698    3         END; ELSE DO;
      509     5699    3            IF %KV_SRD.SCROLL AND %KV_MRD.DVCLIN=%KV_SRD.BTMRHT.LIN
      510     5700    3              AND USR_PST.PHSPST.LIN=%KV_MRD.DVCLIN-%KV_SRD.DVCLINBIS+1
      511     5701    3            THEN %KV_MRD.DVCCLM = 0;       /* Make position fail to match        */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:19   
      512     5702    3            %KV_MRD.DVCLIN = %KV_MRD.DVCLIN+1;
      513     5703    3         END /* If */;
      514     5704    2      END /* If */;
      515     5705    2      IF USR_PST.TOPPAGCNT~=0 THEN DO;
      516     5706
      517     5707        /* We're to top the page.                                                     */
      518     5708
      519     5709    3         IF KV$ERD.FRMFED_CHR~=0 THEN DO TREX=0 TO USR_PST.TOPPAGCNT-1;
      520     5710
      521     5711        /* This device has a form-feed character.  Use it to go to the
      522     5712           top of the page.                                                           */
      523     5713
      524     5714        /* Position is no longer unknown. */
      525     5715    3            %KV_VDI.UN_KNWPST = '0'B;
      526     5716
      527     5717        /* This loop is traversed for each form feed sent.                            */
      528     5718
      529     5719    3            CALL DVCCTR (%KV$ERD_FRMFED_CHR#/8);
      530     5720
      531     5721    4            IF %KV_MRD.DVCFLWCTRALG=0 THEN DO;
      532     5722
      533     5723        /* There is no flow control algorithm, so generate the timing characters. */
      534     5724
      535     5725        /* Time = (KV$ERD.TMNALG_PRM6 x movement-in-lines) + KV$ERD.TMNALG_PRM7       */
      536     5726
      537     5727    4               USR_OTPRPTCHR.CNT =
      538     5728    4                 ((%KV_MRD.LNG-%KV_MRD.DVCLIN+1)*KV$ERD.TMNALG_PRM6+
      539     5729    4                 KV$ERD.TMNALG_PRM7)/TIMPERCHR;
      540     5730    5               IF USR_OTPRPTCHR.CNT>0 THEN DO;
      541     5731    5                  USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;
      542     5732    5                  CALL OTPRPTCHR;
      543     5733    5               END /* If */;
      544     5734    4            END /* If */;
      545     5735    3            %KV_MRD.DVCLIN = 1;
      546     5736    3            IF %KV_MRD.FF_INCCR THEN %KV_MRD.DVCCLM = 1;
      547     5737    3         END /* Do index */;
      548     5738    3         ELSE DO;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:20   
      549     5739
      550     5740        /* This device doesn't have a form feed character sequence.
      551     5741           Adjust the current device line back.                                       */
      552     5742
      553     5743    3            %KV_MRD.DVCLIN = %KV_MRD.DVCLIN-%KV_MRD.LNG*USR_PST.TOPPAGCNT;
      554     5744    3         END /* If */;
      555     5745    2      END /* If */;
      556     5746        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:21   
      557     5747        /* This loop is traversed for each segment of positioning.
      558     5748           It is only traversed when processing blanking positioning on
      559     5749           a device which destructively spaces.
      560     5750           A segment of positioning is either a new-line (CR/LF) or a
      561     5751           series of spaces.                                                          */
      562     5752
      563     5753    2   MAIN_LOOP: DO WHILE ('1'B);             /* Loop start                         */
      564     5754    3         IF %KV_VDI.UN_KNWPST THEN DO;
      565     5755
      566     5756        /* We're starting from ?,?. Assume it's the worst possible place from
      567     5757           a timing standpoint, i.e., the last column of the previous line. */
      568     5758
      569     5759    3            %KV_MRD.DVCCLM = %KV_MRD.WDT;
      570     5760    3            %KV_MRD.DVCLIN = %KV_SRD.DVCLINBIS+USR_PST.PHSPST.LIN-1;
      571     5761    3            PHSPSTMOD = %KV_PHSPSTMOD_ANY;
      572     5762
      573     5763        /* And take the first path that works                                         */
      574     5764
      575     5765    3            IMDSTPTIM = BITBIN('7FFE'X);
      576     5766    3         END /* If */;
      577     5767
      578     5768    2         FLG.LOP = '0'B;
      579     5769    3         IF PHSPSTMOD>%KV_PHSPSTMOD_ANY THEN DO;
      580     5770    3            IF %KV_SRD.BTMRHT.LIN = %KV_MRD.LNG AND (SCRCNT>0
      581     5771    3              AND PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR AND NOT KV$ERD.ILNRQRDLN
      582     5772    3              OR PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR+2 AND SCRCNT<0)
      583     5773    3              OR %KV_SRD.BTMRHT.CLM=%KV_MRD.WDT AND (SCRCNT>0
      584     5774    3              AND PHSPSTMOD=%KV_PHSPSTMOD_HRZSCR AND NOT KV$ERD.ICHRQRDCH
      585     5775    4              OR PHSPSTMOD=%KV_PHSPSTMOD_HRZSCR+2 AND SCRCNT<0) THEN DO;
      586     5776    4               IF PHSPSTMOD=%KV_PHSPSTMOD_HRZSCR+2
      587     5777    4               THEN %KV_SRD.CRT.CLM = %KV_SRD.BTMRHT.CLM+1+SCRCNT;
      588     5778    4               PHSPSTMOD = PHSPSTMOD+2;
      589     5779    4            END;
      590     5780    4            IF PHSPSTMOD>%KV_PHSPSTMOD_ANY+4 THEN DO;
      591     5781    4               IF PHSPSTMOD=%KV_PHSPSTMOD_HRZSCR+4
      592     5782    4                 AND %KV_SRD.CRT.LIN=%KV_SRD.HI_NONBLN.LIN
      593     5783    4               THEN %KV_SRD.HI_NONBLN.CLM =
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:22   
      594     5784    4                 MINIMUM(%KV_SRD.HI_NONBLN.CLM+SCRCNT,%KV_SRD.BTMRHT.CLM);
      595     5785    4               IF USR_PST.PHSPSTMOD<=%KV_PHSPSTMOD_ANY THEN EXIT;
      596     5786    4               %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;
      597     5787    4               RETURN;
      598     5788    4            END;
      599     5789    3            RQS_PST = USR_PST.PHSPST_PST;
      600     5790    3            IF PHSPSTMOD<=%KV_PHSPSTMOD_ANY+2 AND SCRCNT>0
      601     5791    3            THEN IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR
      602     5792    3            THEN RQS.LIN = %KV_SRD.BTMRHT.LIN-%KV_SRD.DVCLINBIS+1-SCRCNT;
      603     5793    3            ELSE RQS.CLM = %KV_SRD.BTMRHT.CLM+1-SCRCNT;
      604     5794    3            ELSE IF PHSPSTMOD>%KV_PHSPSTMOD_ANY+2 AND SCRCNT<0
      605     5795    3            THEN IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR+2
      606     5796    3            THEN RQS.LIN = %KV_SRD.BTMRHT.LIN-%KV_SRD.DVCLINBIS+1+SCRCNT;
      607     5797    3            ELSE RQS.CLM = %KV_SRD.BTMRHT.CLM+1+SCRCNT;
      608     5798    3            FLG.LOP = '1'B;
      609     5799    4            IF USR_PST.PHSPSTMOD<=%KV_PHSPSTMOD_ANY THEN DO;
      610     5800
      611     5801        /* For pseudo-scroll, tweak things up a bit. */
      612     5802
      613     5803    4               IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR AND SCRCNT<0
      614     5804    4               THEN RQS.LIN = %KV_SRD.TOPLFT.LIN-%KV_SRD.DVCLINBIS;
      615     5805    5               ELSE IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR+4 THEN DO;
      616     5806    5                  PHSPSTMOD = %KV_PHSPSTMOD_SKP;
      617     5807    5                  RQS_PST = USR_PST.PHSPST_PST;
      618     5808    5                  FLG.LOP = '0'B;
      619     5809    5               END;
      620     5810    4            END;
      621     5811    4            IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR AND KV$ERD.RGNSCR THEN DO;
      622     5812        /*
      623     5813           For scrolling regions, we need to position to the edge of the region
      624     5814           to do the scrolling.  We may also have to set the region limits.
      625     5815        */
      626     5816    4               IF SCRCNT<0 THEN RQS.LIN = %KV_SRD.BTMRHT.LIN-%KV_SRD.DVCLINBIS;
      627     5817    4               ELSE RQS.LIN = USR_PST.PHSPST.LIN;
      628     5818    4               PHSPSTMOD = %KV_PHSPSTMOD_VRTSCR+2;
      629     5819    4               IF NOT %KV_SRD.SCROLL
      630     5820    4                 AND USR_PST.PHSPST.LIN~=%KV_SRD.TOPLFT.LIN
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:23   
      631     5821    4               THEN %KV_SRD.UNKRGN = '1'B;
      632     5822    4            END;
      633     5823    3            %KV_SRD.CRT_PST = RQS_PST;
      634     5824    3         END;
      635     5825    2         ELSE RQS_PST = USR_PST.PHSPST_PST;
      636     5826    2         IF %KV_SRD.UNKRGN
      637     5827    2         THEN IF NOT KV$ERD.RGNSCR OR %KV_SRD.LNG=0 THEN %KV_SRD.UNKRGN = '0'B;
      638     5828    3         ELSE DO;
      639     5829        /*
      640     5830           If the scrolling region needs to be set, the cursor goes home.
      641     5831        */
      642     5832    3            %KV_MRD.DVCLIN = 1;
      643     5833    3            %KV_MRD.DVCCLM = 1;
      644     5834    3            IF USR_PST.PHSPSTMOD~=%KV_PHSPSTMOD_VRTSCR
      645     5835    3            THEN CRNPTH(5) = %KV_SRD.TOPLFT.LIN;
      646     5836    3            ELSE CRNPTH(5) = USR_PST.PHSPST.LIN;
      647     5837    3            CHRBFRD(0) = %BITBIN (CONCAT ('03'X, ASCIIESC, ASCIICSI7, ASCIILCR));
      648     5838    3            IF CRNPTH(5)=%KV_SRD.TOPLFT.LIN THEN %KV_SRD.UNKRGN='0'B;
      649     5839    3            IF (CRNPTH(5)~=%KV_SRD.TOPLFT.LIN OR %KV_SRD.LNG~=%KV_MRD.DSPHEIGHT)
      650     5840    3              AND CRNPTH(5)<%KV_SRD.BTMRHT.LIN AND %KV_SRD.WDT=%KV_MRD.WDT
      651     5841    4            THEN DO;
      652     5842        /*
      653     5843           Only put in the numbers if needed.
      654     5844        */
      655     5845    4               CALL OTPANSPN (CRNPTH(5));
      656     5846    4               CHRBFRA(CHRBFRA(0)) = %BITBIN(ASCIISEMCLN);
      657     5847    4               CHRBFRA(0) = CHRBFRA(0)+1;
      658     5848    4               CALL OTPANSPN (%KV_SRD.BTMRHT.LIN);
      659     5849    4               CHRBFRA(CHRBFRA(0)) = %BITBIN(ASCIILCR);
      660     5850    4            END;
      661     5851    3            ELSE %KV_SRD.UNKRGN = '0'B;
      662     5852    3            CALL DVCCTR (0);
      663     5853    3         END;
      664     5854    2         NOD$ = ADDR(CRNPTH(0));
      665     5855    2         Y$NOD = '0'B;
      666     5856    2         DVC.CLM = %KV_MRD.DVCCLM;
      667     5857    2         DVC.LIN = %KV_MRD.DVCLIN-%KV_SRD.DVCLINBIS;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:24   
      668     5858    2         IF RQS_PST~=DVC_PST OR %KV_MRD.DVCLIN>%KV_SRD.BTMRHT.LIN
      669     5859    3           OR %KV_MRD.DVCLIN<%KV_SRD.TOPLFT.LIN THEN DO;
      670     5860
      671     5861        /* We need to do horizontal and/or vertical positioning.                      */
      672     5862    3            Y$NOD.DVCCLM = DVC.CLM;
      673     5863    3            Y$NOD.DVCLIN = %KV_MRD.DVCLIN;
      674     5864    3            Y$NOD.DVCLINBIS = %KV_SRD.DVCLINBIS;
      675     5865    4            IF %KV_MRD.BLANKERASES THEN DO;
      676     5866
      677     5867        /* This terminal destructively spaces.                                        */
      678     5868
      679     5869    4               IF PHSPSTMOD=%KV_PHSPSTMOD_BLN AND DVC_PST<RQS_PST
      680     5870        /* We are to blank (erase) any characters encountered from the
      681     5871           starting position (inclusive) to the destination position (exclusive),
      682     5872           and we're going forward. */
      683     5873
      684     5874    5               THEN IF ORGHI_NONBLN_PST<DVC_PST THEN DO;
      685     5875        /* We're moving forward, but there's nothing to erase. */
      686     5876
      687     5877    5                  PHSPSTMOD = %KV_PHSPSTMOD_ANY;
      688     5878    5               END /* If */;
      689     5879    5               ELSE DO;
      690     5880    6                  IF ORGHI_NONBLN_PST<RQS_PST THEN DO;
      691     5881        /* The highest non-blank character is before the physical (destination)
      692     5882           position.  Blank thru the highest non-blank position, then
      693     5883           use any positioning.                                                       */
      694     5884
      695     5885    7                     IF NOT FLG.SETHI_NONBLN_PST THEN DO;
      696     5886        /* We haven't yet set the highest non-blank physical position
      697     5887           to a new value.  Set it to the point where we started blanking.            */
      698     5888
      699     5889    7                        HI_NONBLN_PST = DVC_PST;
      700     5890    7                        FLG.SETHI_NONBLN_PST = '1'B;
      701     5891    8                        IF HI_NONBLN.CLM<=%KV_SRD.TOPLFT.CLM THEN DO;
      702     5892    8                           HI_NONBLN.LIN = HI_NONBLN.LIN-1;
      703     5893    8                           HI_NONBLN.CLM = %KV_SRD.BTMRHT.CLM;
      704     5894    8                        END; ELSE DO;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:25   
      705     5895    8                           HI_NONBLN.CLM = HI_NONBLN.CLM-1;
      706     5896    8                        END /* If */;
      707     5897    7                     END /* If */;
      708     5898    6                     FLG.LOP = '1'B;
      709     5899    6                     RQS_PST = ORGHI_NONBLN_PST;
      710     5900    6                     RQS.CLM = RQS.CLM+1;
      711     5901    6                  END /* If */;
      712     5902    6                  IF RQS.LIN>DVC.LIN THEN DO;
      713     5903        /* The destination (physical) line is below our current (device) line.
      714     5904           Blank to the end of the current line, then do a new-line
      715     5905           (CR/LF), and continue.                                                     */
      716     5906
      717     5907    7                     IF %KV_MRD.DVCCLM>%KV_SRD.BTMRHT.CLM THEN DO;
      718     5908        /* We're beyond the right margin.  There's no blanking to
      719     5909           do on this line, so do a new-line (CR/LF).                                 */
      720     5910
      721     5911    7                        RQS.LIN = DVC.LIN+1;
      722     5912    7                        RQS.CLM = %KV_SRD.TOPLFT.CLM;
      723     5913    7                     END /* If */;
      724     5914    7                     ELSE DO;
      725     5915    7                        RQS.LIN = DVC.LIN;
      726     5916    7                        RQS.CLM = %KV_SRD.BTMRHT.CLM+1;
      727     5917    7                     END;
      728     5918    6                     FLG.LOP = '1'B;
      729     5919    6                  END /* If */;
      730     5920    5               END /* If */;
      731     5921    5               ELSE IF PHSPSTMOD=%KV_PHSPSTMOD_BLN THEN DO;
      732     5922        /* If we're asked to erase, but backwards, use skip mode.                         */
      733     5923
      734     5924    5                  PHSPSTMOD = %KV_PHSPSTMOD_SKP;
      735     5925    5               END /* If */;
      736     5926    4               ELSE IF PHSPSTMOD=%KV_PHSPSTMOD_SKP
      737     5927    5                 AND DVC_PST<RQS_PST AND ORGHI_NONBLN_PST<DVC_PST THEN DO;
      738     5928        /* A forward SKP request past hinonbln can use any mode (and might need to).  */
      739     5929
      740     5930    5                  PHSPSTMOD = %KV_PHSPSTMOD_ANY;
      741     5931    5               END /* If */;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:26   
      742     5932    4               IF PHSPSTMOD~=%KV_PHSPSTMOD_SKP AND %KV_SRD.TOPLFT.CLM~=1
      743     5933    4                 AND NOT FLG.ERRED
      744     5934    5               THEN IF RQS.LIN>DVC.LIN OR DVC.CLM<%KV_SRD.TOPLFT.CLM THEN DO;
      745     5935        /* Never use blanks outside this SRD */
      746     5936
      747     5937    6                  IF PHSPSTMOD=%KV_PHSPSTMOD_BLN THEN DO;
      748     5938    6                     RQS.CLM = %KV_SRD.TOPLFT.CLM;
      749     5939    6                     FLG.LOP = '1'B;
      750     5940    6                  END;
      751     5941    5                  ELSE IF PHSPSTMOD=%KV_PHSPSTMOD_ANY
      752     5942    5                  THEN PHSPSTMOD = %KV_PHSPSTMOD_SKP;
      753     5943    5               END;
      754     5944    4            END /* If */;
      755     5945
      756     5946    3            TREX = RQS.LIN+%KV_SRD.DVCLINBIS;
      757     5947    3            IF (TREX>%KV_SRD.BTMRHT.LIN AND %KV_SRD.LNG<%KV_MRD.DSPHEIGHT
      758     5948    3              OR TREX<%KV_SRD.TOPLFT.LIN)
      759     5949    4              AND %KV_SRD.SCROLL AND %KV_SRD.LNG>0 THEN DO;
      760     5950
      761     5951        /* For scrolling in windows, use ILN and DLN. */
      762     5952
      763     5953    4               PHSPSTMOD = %KV_PHSPSTMOD_VRTSCR;
      764     5954    4               IF TREX>%KV_SRD.BTMRHT.LIN
      765     5955    4               THEN SCRCNT = %KV_SRD.BTMRHT.LIN-TREX;
      766     5956    4               ELSE SCRCNT = %KV_SRD.TOPLFT.LIN-TREX;
      767     5957    4               %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS+SCRCNT;
      768     5958    4               IF %KV_SRD.LNG<SCRCNT THEN SCRCNT = %KV_SRD.LNG;
      769     5959    4               IF -%KV_SRD.LNG>SCRCNT THEN SCRCNT = -%KV_SRD.LNG;
      770     5960        /*
      771     5961           Ignore scrolling more than a full window - it's just wasted motion,
      772     5962           and it hangs the Fep trying to find the place to spread out the hole.
      773     5963        */
      774     5964    4               %KV_VDI.UN_KNWPST = '0'B;   /* Dont loop on this one              */
      775     5965    4               GOTO MAIN_LOOP;
      776     5966    4            END;
      777     5967    4            IF NOT %KV_MRD.LIMBOCLM AND %KV_MRD.DVCCLM>%KV_MRD.WDT THEN DO;
      778     5968        /* The dumb thing is still in the last column.                                */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:27   
      779     5969
      780     5970    4               DVC.CLM = %KV_MRD.WDT;
      781     5971    4               %KV_MRD.DVCCLM = DVC.CLM;
      782     5972    4               Y$NOD.DVCCLM = DVC.CLM;
      783     5973    4            END /* If */;
      784     5974        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:28   
      785     5975    3            IF RQS.CLM~=DVC.CLM THEN Y$NOD.PSTRQR.HRZ = '1'B;
      786     5976        /* The horizontal position is not yet correct.                                */
      787     5977    3            IF DVC.LIN~=RQS.LIN THEN Y$NOD.PSTRQR.VRT = '1'B;
      788     5978        /* The vertical position is not yet correct.                                  */
      789     5979    3            IF NOT Y$NOD.PSTRQR THEN EXIT; /* Already done                       */
      790     5980    3            SVDPTHALT$ = PINCRW(NOD$,SIZEW(Y$NOD));
      791     5981    3            SVDPTHEND$ = SVDPTHALT$;
      792     5982    3            SVDPTHEND$->Y$NOD = Y$NOD;
      793     5983    3            SVDPTHEND$->Y$NOD.TIM = BITBIN('7FFF'X);
      794     5984    3            CRNPTHBGN$ = PINCRW(NOD$,SIZEC(Y$NOD));
      795     5985    4            IF IMDSTPTIM=BITBIN('7FFE'X) THEN DO;
      796     5986
      797     5987        /* Special value for unknown staring position                                 */
      798     5988
      799     5989    4               %KV_VDI.UN_KNWPST = '0'B;
      800     5990    4               TREX = %TRE_UNK_PST;
      801     5991    4            END;
      802     5992    3            ELSE IF IMDSTPTIM = BITBIN('7FFF'X)
      803     5993
      804     5994        /*  Special value for no-optimize. */
      805     5995    3            THEN TREX = %TRE_NO_OPT;
      806     5996    3            ELSE IF NOT %KV_MRD.BLANKERASES THEN TREX = %TRE_BSC_ANY;
      807     5997    3            ELSE TREX = PSTTREX_CRT(PHSPSTMOD);
      808     5998    4            IF TREX=%TRE_CRT_BLN AND RQS.CLM=%KV_SRD.TOPLFT.CLM THEN DO;
      809     5999        /* Trying to blank to a new line - use skip mode                              */
      810     6000
      811     6001    4               TREX = %TRE_CRT_SKP;
      812     6002    4            END /* If */;
      813     6003    3            PRVNOD$ = NOD$;
      814     6004    3            NOD$ = CRNPTHBGN$;
      815     6005    3            Y$NOD = PRVNOD$->Y$NOD;
      816     6006    4   LOOP:    DO WHILE ('1'B);               /* Loop start                         */
      817     6007        /* This loop is traversed for each node processed.                            */
      818     6008
      819     6009    4               Y$NOD.FNC = Y_TRE.FNC(TREX);
      820     6010    4               Y$NOD.TREX = TREX;
      821     6011    5   CASE1:      DO CASE (Y$NOD.FNC);
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:29   
      822     6012        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:30   
      823     6013    5               CASE (%NODFNC_BS);
      824     6014        /* Process BS (backspace)                                                     */
      825     6015
      826     6016    6                  IF NOT %KV_MRD.DEVICEBS THEN DO;
      827     6017
      828     6018        /* This device doesn't have the BS  function.                                 */
      829     6019
      830     6020    7                     IF KV$ERD.CUB_CHR~=0 THEN DO;
      831     6021    7                        Y$NOD.FNC = %NODFNC_CUB;
      832     6022    6                     END; ELSE EXIT CASE1;
      833     6023    6                  END /* If */;
      834     6024    5                  IF Y$NOD.DVCCLM<=RQS.CLM THEN EXIT CASE1;
      835     6025        /* We are not positioning to the left.                                        */
      836     6026    5                  Y$NOD.FNCCNT = Y$NOD.DVCCLM-RQS.CLM;
      837     6027    6                  IF Y$NOD.FNC=%NODFNC_BS THEN DO;
      838     6028    6                     Y$NOD.TIM = Y$NOD.TIM+Y$NOD.FNCCNT;
      839     6029    6                     Y$NOD.TIMAFT = KV$ERD.BS_TIM/TIMPERCHR;
      840     6030    6                     IF Y$NOD.TIMAFT~=0
      841     6031    6                     THEN Y$NOD.TIM = Y$NOD.TIM +Y$NOD.FNCCNT*Y$NOD.TIMAFT;
      842     6032    6                  END; ELSE DO;
      843     6033    6                     Y$NOD.TIM = Y$NOD.TIM+
      844     6034    6                       Y$NOD.FNCCNT *KV$ERD.CNT(KV$ERD.CUB_CHR);
      845     6035    6                  END /* If */;
      846     6036    5                  Y$NOD.DVCCLM = RQS.CLM;
      847     6037    5                  Y$NOD.PSTRQR.HRZ = '0'B;
      848     6038        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:31   
      849     6039    5               CASE (%NODFNC_CR);
      850     6040        /* Process CR (carriage return)                                               */
      851     6041
      852     6042    5                  IF RQS.CLM>=Y$NOD.DVCCLM
      853     6043        /* We're not to move to the left.                                             */
      854     6044    5                    OR NOT %KV_MRD.DEVICECR THEN EXIT CASE1;
      855     6045        /* This device doesn't have the CR function.                                  */
      856     6046
      857     6047    5                  Y$NOD.FNCCNT = 1;
      858     6048    5                  Y$NOD.TIM = Y$NOD.TIM+1;
      859     6049    5                  Y$NOD.DVCCLM = 1;
      860     6050    5                  Y$NOD.TIMBFR = KV$ERD.TMNALG_BFRCR;
      861     6051    6                  IF Y$NOD.TIMBFR>0 THEN DO;
      862     6052    6                     CALL CMPTMN (Y$NOD.TIMBFR);
      863     6053    6                  END /* If */;
      864     6054    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTCR;
      865     6055    6                  IF Y$NOD.TIMAFT>0 THEN DO;
      866     6056    6                     CALL CMPTMN (Y$NOD.TIMAFT);
      867     6057    6                  END /* If */;
      868     6058    6                  IF RQS.CLM=1 THEN DO;
      869     6059
      870     6060    6                     Y$NOD.PSTRQR.HRZ = '0'B;
      871     6061    6                  END /* If */;
      872     6062        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:32   
      873     6063    5               CASE (%NODFNC_CR_NO_OPT);
      874     6064        /* Process CR_NO_OPT (carriage return, no optimization).                      */
      875     6065
      876     6066    5                  IF RQS.LIN<=Y$NOD.DVCLIN-Y$NOD.DVCLINBIS
      877     6067    5                    AND RQS.CLM>=Y$NOD.DVCCLM
      878     6068        /* We're not to move to the left, and aren't moving down. CR won't help. */
      879     6069
      880     6070    5                    OR NOT %KV_MRD.DEVICECR THEN EXIT CASE1;
      881     6071        /* This device doesn't have the CR function.                                  */
      882     6072
      883     6073    6                  IF RQS.LIN>Y$NOD.DVCLIN-Y$NOD.DVCLINBIS+1 THEN DO;
      884     6074        /* We're going more than one line down.  Do it one at a time. */
      885     6075
      886     6076    6                     RQS.LIN = Y$NOD.DVCLIN-Y$NOD.DVCLINBIS+1;
      887     6077    6                     RQS.CLM = 1; /* Don't bother with clm until the last one    */
      888     6078    6                     FLG.LOP = '1'B;
      889     6079    6                  END;
      890     6080    5                  Y$NOD.FNCCNT = 1;
      891     6081    5                  Y$NOD.TIM = Y$NOD.TIM+1;
      892     6082    5                  Y$NOD.DVCCLM = 1;
      893     6083    5                  Y$NOD.TIMBFR = KV$ERD.TMNALG_BFRCR;
      894     6084    6                  IF Y$NOD.TIMBFR>0 THEN DO;
      895     6085    6                     CALL CMPTMN (Y$NOD.TIMBFR);
      896     6086    6                  END /* If */;
      897     6087    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTCR;
      898     6088    6                  IF Y$NOD.TIMAFT>0 THEN DO;
      899     6089    6                     CALL CMPTMN (Y$NOD.TIMAFT);
      900     6090    6                  END /* If */;
      901     6091    6                  IF RQS.CLM=1 THEN DO;
      902     6092    6                     Y$NOD.PSTRQR.HRZ = '0'B;
      903     6093    6                  END; ELSE DO;
      904     6094        /* The destination column wasn't column 1.  Before we started
      905     6095           on this node horizontal positioning may have be done (Y$NOD.PSTRQR.HRZ),
      906     6096           but no longer is.  Don't go on with the previous setting
      907     6097           of Y$NOD.PSTRQR.HRZ, as it clearly isn't done now.                             */
      908     6098
      909     6099    6                     Y$NOD.PSTRQR.HRZ = '1'B;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:33   
      910     6100    6                  END /* If */;
      911     6101        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:34   
      912     6102    5               CASE (%NODFNC_CUF);
      913     6103        /* Process CUF (cursor forward)                                               */
      914     6104
      915     6105    5                  IF KV$ERD.CUF_CHR=0
      916     6106        /* This device doesn't have the CUF function.                                 */
      917     6107
      918     6108    5                    OR RQS.CLM<=Y$NOD.DVCCLM THEN EXIT CASE1;
      919     6109        /* We are not positioning to the right, CUF doesn't help.                     */
      920     6110    5                  Y$NOD.FNCCNT = RQS.CLM-Y$NOD.DVCCLM;
      921     6111    5                  Y$NOD.TIM = Y$NOD.TIM+
      922     6112    5                    Y$NOD.FNCCNT *KV$ERD.CNT(KV$ERD.CUF_CHR);
      923     6113    5                  Y$NOD.DVCCLM = RQS.CLM;
      924     6114    5                  Y$NOD.PSTRQR.HRZ = '0'B;
      925     6115        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:35   
      926     6116    5               CASE (%NODFNC_CUP);
      927     6117        /* Process CUP (cursor position).                                             */
      928     6118
      929     6119    5                  IF RQS.CLM>%KV_MRD.WDT
      930     6120    6                    AND (%KV_MRD.AUTONL OR NOT %KV_MRD.LIMBOCLM) THEN DO;
      931     6121        /* Dont even try to position past width on a device without a limbocolumn.
      932     6122           Change the request to simulate "no limboclm".                             */
      933     6123
      934     6124    6                     RQS.CLM = %KV_MRD.WDT;
      935     6125    6                  END /* If */;
      936     6126    5                  IF KV$ERD.CUP_ALG=0 THEN EXIT CASE1;
      937     6127        /* This device doesn't have the CUP function.                                 */
      938     6128
      939     6129    6                  IF RQS.LIN+Y$NOD.DVCLINBIS>%KV_MRD.LNG THEN DO;
      940     6130        /* The destination position is beyond the bottom of the screen.
      941     6131           CUP won't get past the bottom. We'll probably need LF. */
      942     6132
      943     6133    6                     IF NOT Y$NOD.PSTRQR.HRZ
      944     6134    6                       AND Y$NOD.DVCLIN=%KV_MRD.LNG THEN EXIT CASE1;
      945     6135        /* The horizontal positioning was already done, and we are on the
      946     6136           bottom line and want to go down. CUP wont help.                            */
      947     6137
      948     6138    6                     Y$NOD.DVCLIN = %KV_MRD.LNG;
      949     6139    6                  END; ELSE DO;
      950     6140        /* The destination isn't beyond the bottom of the screen.                     */
      951     6141    6                     Y$NOD.PSTRQR.VRT = '0'B;
      952     6142    6                     Y$NOD.DVCLIN = RQS.LIN+Y$NOD.DVCLINBIS;
      953     6143    6                  END /* If */;
      954     6144    5                  Y$NOD.FNCCNT = 1;
      955     6145    5                  Y$NOD.TIM = Y$NOD.TIM+AVRCUPSIZ(KV$ERD.CUP_ALG);
      956     6146    5                  Y$NOD.DVCCLM = RQS.CLM;
      957     6147        /*N* NEED LIMIT CHECK FOR GOING ABOVE TOP OF SCREEN                           */
      958     6148    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTCUP;
      959     6149    6                  IF Y$NOD.TIMAFT>0 THEN DO;
      960     6150    6                     CALL CMPTMN (Y$NOD.TIMAFT);
      961     6151    6                  END /* If */;
      962     6152    5                  Y$NOD.PSTRQR.HRZ = '0'B;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:36   
      963     6153        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:37   
      964     6154    5               CASE (%NODFNC_CUU);
      965     6155        /* Process CUU (cursor up)                                                    */
      966     6156
      967     6157    5                  IF KV$ERD.CUU_CHR=0 THEN EXIT CASE1;
      968     6158        /* This device doesn't have the CUU function.                                 */
      969     6159
      970     6160        /* If the destination position is beyond the top of the screen,
      971     6161           just go to the top line. */
      972     6162
      973     6163    5                  IF RQS.LIN+Y$NOD.DVCLINBIS>=Y$NOD.DVCLIN
      974     6164    5                    OR Y$NOD.DVCLIN=1 THEN EXIT CASE1;
      975     6165        /* We're not to (or can't) move up, CUU won't help.                           */
      976     6166
      977     6167    5                  Y$NOD.PSTRQR.VRT = '0'B;
      978     6168    5                  Y$NOD.FNCCNT = Y$NOD.DVCLIN-MAXIMUM(RQS.LIN+Y$NOD.DVCLINBIS,1);
      979     6169    5                  Y$NOD.DVCLIN = Y$NOD.DVCLIN-Y$NOD.FNCCNT;
      980     6170    5                  Y$NOD.TIM = Y$NOD.TIM+
      981     6171    5                    Y$NOD.FNCCNT *KV$ERD.CNT(KV$ERD.CUU_CHR);
      982     6172        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:38   
      983     6173    5               CASE (%NODFNC_HPA);
      984     6174        /* Process HPA (horizontal position absolute).                                */
      985     6175
      986     6176    5                  IF KV$ERD.HPA_ALG=0
      987     6177        /* This device doesn't have the HPA function.                                 */
      988     6178
      989     6179    5                    OR Y$NOD.DVCCLM>=MAXHPACLM(KV$ERD.HPA_ALG)
      990     6180        /* We're already too far to the right. */
      991     6181
      992     6182    5                    OR NOT Y$NOD.PSTRQR.HRZ THEN EXIT CASE1;
      993     6183        /* The horizontal positioning is already done.                                */
      994     6184
      995     6185    5                  Y$NOD.FNCCNT = 1;
      996     6186    5                  Y$NOD.TIM = Y$NOD.TIM+AVRHPASIZ(KV$ERD.HPA_ALG);
      997     6187    5                  Y$NOD.DVCCLM = RQS.CLM;
      998     6188    6                  IF Y$NOD.DVCCLM>MAXHPACLM(KV$ERD.HPA_ALG) THEN DO;
      999     6189        /* The destination column is greater than the maximum allowed
     1000     6190           by this HPA sequence.  Position to the max.                                */
     1001     6191
     1002     6192    6                     Y$NOD.DVCCLM = MAXHPACLM(KV$ERD.HPA_ALG);
     1003     6193    6                  END; ELSE DO;
     1004     6194
     1005     6195        /* The destination column is in the range of HPA positioning.                 */
     1006     6196
     1007     6197    6                     Y$NOD.PSTRQR.HRZ = '0'B;
     1008     6198    6                  END /* If */;
     1009     6199    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTHPA;
     1010     6200    6                  IF Y$NOD.TIMAFT>0 THEN DO;
     1011     6201    6                     CALL CMPTMN (Y$NOD.TIMAFT);
     1012     6202    6                  END /* If */;
     1013     6203        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:39   
     1014     6204    5               CASE (%NODFNC_HT,%NODFNC_NXTHT);
     1015     6205        /* Process HT (horizontal tab) and next HT (first HT to the right
     1016     6206           of the ultimate destination column).                                       */
     1017     6207
     1018     6208    5                  IF RQS.CLM<=Y$NOD.DVCCLM
     1019     6209        /* We're not to move to the right.                                            */
     1020     6210    5                    OR NOT %KV_MRD.TRMTABSET
     1021     6211    5                    OR %KV_MRD.TRMTAB$=ADDR(NIL) THEN EXIT CASE1;
     1022     6212        /* Either device tabs aren't set, or there are no device tab stops. */
     1023     6213
     1024     6214    6                  IF RQS.CLM~=LSTTABPHSCLM OR Y$NOD.DVCCLM~=LSTTABDVCCLM THEN DO;
     1025     6215        /* We need to check for usable tab stops.                                     */
     1026     6216
     1027     6217    6                     B4 = %KV_MRD.TRMTAB$;
     1028     6218    6                     LSTTABPHSCLM = RQS.CLM;
     1029     6219    6                     MAXTAB = 0;
     1030     6220    6                     LSTTABDVCCLM = Y$NOD.DVCCLM;
     1031     6221    6                     TABCLM = LSTTABDVCCLM;
     1032     6222    6                     NXTTABCLM = 0;
     1033     6223    6                     TABCNT = 0;
     1034     6224    6                     R2 = SIZEC(KV$SHRBFR); /* Index into tabs.                  */
     1035     6225    7                     DO WHILE R2<KV$SHRBFR.BYTSIZ;
     1036     6226        /* This loop is traversed for each tab stop in the tab buffer, until
     1037     6227           a tab stop is found that is to the right of the current device position.   */
     1038     6228
     1039     6229    7                        IF KV$SHRBFR_BYT(R2)>Y$NOD.DVCCLM THEN EXIT;
     1040     6230        /* We've found the first tab to the right of the device's current position.   */
     1041     6231    7                        R2 = R2+1;
     1042     6232    7                     END /* Loop */;
     1043     6233    7                     DO WHILE R2<KV$SHRBFR.BYTSIZ AND NXTTABCLM=0;
     1044     6234        /* This loop is traversed for each tab stop in the tab buffer,
     1045     6235           starting with the first tab to the right of the current position,
     1046     6236           continuing on thru the first tab to the right of the desired position.     */
     1047     6237
     1048     6238    8                        IF KV$SHRBFR_BYT(R2)<=RQS.CLM THEN DO;
     1049     6239        /* The current tab stop doesn't exceed the desired position; it is usable. */
     1050     6240
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:40   
     1051     6241    8                           TABCNT = TABCNT+1;
     1052     6242    8                           IF MAXTAB<KV$SHRBFR_BYT(R2)-TABCLM
     1053     6243    8                           THEN MAXTAB = KV$SHRBFR_BYT(R2)-TABCLM;
     1054     6244    8                           TABCLM = KV$SHRBFR_BYT(R2);
     1055     6245    8                        END;
     1056     6246    8                        ELSE IF KV$SHRBFR_BYT(R2)<=%KV_MRD.WDT THEN DO;
     1057     6247        /* The current tab stop is to the right of the desired position, but
     1058     6248           to the left of or at the right edge of the device.  This stop
     1059     6249           is the one to use if it is fastest to position via tabbing to the
     1060     6250           right of the desired position, and then position back to the left.         */
     1061     6251
     1062     6252    8                           NXTTABCLM = KV$SHRBFR_BYT(R2);
     1063     6253    8                        END /* If */;
     1064     6254    7                        R2 = R2+1;
     1065     6255    7                     END /* Loop */;
     1066     6256    6                  END /* If */;
     1067     6257    6                  IF Y$NOD.FNC=%NODFNC_HT THEN DO;
     1068     6258        /* We're processing the HT (horizontal tab) node, as opposed to
     1069     6259           the next-HT node.                                                          */
     1070     6260
     1071     6261    6                     IF TABCNT=0 THEN EXIT CASE1;
     1072     6262    6                     Y$NOD.DVCCLM = TABCLM;
     1073     6263    6                     Y$NOD.FNCCNT = TABCNT;
     1074     6264    6                  END; ELSE DO;
     1075     6265        /* We're processing the next HT node.                                         */
     1076     6266
     1077     6267    6                     IF NXTTABCLM=0 THEN EXIT CASE1;
     1078     6268    6                     IF MAXTAB<NXTTABCLM-TABCLM
     1079     6269    6                     THEN MAXTAB = NXTTABCLM-TABCLM;
     1080     6270    6                     Y$NOD.DVCCLM = NXTTABCLM;
     1081     6271    6                     Y$NOD.FNCCNT = TABCNT+1;
     1082     6272    6                  END /* If */;
     1083     6273    5                  Y$NOD.TIM = Y$NOD.TIM+Y$NOD.FNCCNT;
     1084     6274    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTHT;
     1085     6275    6                  IF Y$NOD.TIMAFT~=0 THEN DO;
     1086     6276    6                     CALL CMPTMN (Y$NOD.TIMAFT);
     1087     6277    6                  END /* If */;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:41   
     1088     6278    6                  IF RQS.CLM=Y$NOD.DVCCLM THEN DO;
     1089     6279        /* The last tab stop we're going to is right at the desired position.         */
     1090     6280
     1091     6281    6                     Y$NOD.PSTRQR.HRZ = '0'B;
     1092     6282    6                  END /* If */;
     1093     6283        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:42   
     1094     6284    5               CASE (%NODFNC_LF);
     1095     6285        /* Process LF (line feed).                                                    */
     1096     6286
     1097     6287    5                  IF RQS.LIN+Y$NOD.DVCLINBIS<=Y$NOD.DVCLIN
     1098     6288        /* We're not to move down, LF won't help.                                     */
     1099     6289    5                    OR %KV_MRD.DEVICELF='0'B
     1100     6290        /* This device doesn't have the LF function.                                  */
     1101     6291
     1102     6292    5                    AND KV$ERD.CUD_CHR=0 THEN EXIT CASE1;
     1103     6293         /* It has no way to do LFs. */
     1104     6294
     1105     6295    6                  IF NOT %KV_MRD.DEVICELF THEN DO;
     1106     6296        /* There's no LF, but there is cursor down, use it instead.                   */
     1107     6297
     1108     6298    6                     Y$NOD.FNC = %NODFNC_CUD;
     1109     6299    6                  END;
     1110     6300    5                  Y$NOD.FNCCNT = RQS.LIN+Y$NOD.DVCLINBIS-Y$NOD.DVCLIN;
     1111     6301    5                  IF %KV_SRD.SCROLL
     1112     6302        /* This device is being operated in scroll mode                               */
     1113     6303
     1114     6304    6                    AND Y$NOD.DVCLINBIS+RQS.LIN>%KV_SRD.BTMRHT.LIN THEN DO;
     1115     6305        /* We're causing scrolling, adjust DVCLINBIS by the number of lines scrolled. */
     1116     6306
     1117     6307    7                     IF Y$NOD.FNC=%NODFNC_CUD THEN DO;
     1118     6308        /* Cursor-down wont work                                                      */
     1119     6309
     1120     6310    7                        Y$NOD.FNCCNT = 0;
     1121     6311    7                        EXIT CASE1;
     1122     6312    7                     END /* If */;
     1123     6313    6                     Y$NOD.DVCLINBIS = %KV_SRD.BTMRHT.LIN-RQS.LIN;
     1124     6314    6                  END /* If */;
     1125     6315    6                  IF Y$NOD.FNC=%NODFNC_CUD THEN DO;
     1126     6316    6                     Y$NOD.TIM = Y$NOD.TIM+
     1127     6317    6                       Y$NOD.FNCCNT *KV$ERD.CNT(KV$ERD.CUD_CHR);
     1128     6318    6                  END /* If */;
     1129     6319    5                  ELSE Y$NOD.TIM = Y$NOD.TIM+Y$NOD.FNCCNT;
     1130     6320    5                  Y$NOD.DVCLIN = RQS.LIN+Y$NOD.DVCLINBIS;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:43   
     1131     6321    5                  Y$NOD.TIMBFR = KV$ERD.TMNALG_BFRLF;
     1132     6322    6                  IF Y$NOD.TIMBFR>0 THEN DO;
     1133     6323    6                     CALL CMPTMN (Y$NOD.TIMBFR);
     1134     6324    6                  END /* If */;
     1135     6325    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTLF;
     1136     6326    6                  IF Y$NOD.TIMAFT>0 THEN DO;
     1137     6327    6                     CALL CMPTMN (Y$NOD.TIMAFT);
     1138     6328    6                  END /* If */;
     1139     6329    5                  Y$NOD.PSTRQR.VRT = '0'B;
     1140     6330        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:44   
     1141     6331    5               CASE (%NODFNC_CR_NEWLIN);
     1142     6332        /* Process newlin (new line).                                                 */
     1143     6333
     1144     6334    5                  IF RQS.LIN+Y$NOD.DVCLINBIS<=Y$NOD.DVCLIN
     1145     6335        /* We're not to move down, newline won't help.                                */
     1146     6336    5                    OR NOT %KV_MRD.CRISNL AND NOT %KV_MRD.LFISNL THEN EXIT CASE1;
     1147     6337        /* This device doesn't have a new-line function.                              */
     1148     6338
     1149     6339    5                  Y$NOD.FNCCNT = RQS.LIN+Y$NOD.DVCLINBIS-Y$NOD.DVCLIN;
     1150     6340    6                  IF %KV_MRD.LFISNL THEN DO;
     1151     6341        /* This device interprets LF as new-line.                                     */
     1152     6342
     1153     6343    6                     Y$NOD.FNC = %NODFNC_LF_NEWLIN;
     1154     6344    6                  END /* If */;
     1155     6345    5                  Y$NOD.DVCCLM = 1;
     1156     6346    5                  IF %KV_SRD.SCROLL
     1157     6347        /* This device is being operated in scroll mode                               */
     1158     6348
     1159     6349    6                    AND Y$NOD.DVCLINBIS>RQS.LIN-%KV_SRD.BTMRHT.LIN THEN DO;
     1160     6350        /* We're causing scrolling, adjust DVCLINBIS by the number of lines scrolled. */
     1161     6351
     1162     6352    6                     Y$NOD.DVCLINBIS = %KV_SRD.BTMRHT.LIN-RQS.LIN;
     1163     6353    6                  END /* If */;
     1164     6354    5                  Y$NOD.TIM = Y$NOD.TIM+Y$NOD.FNCCNT;
     1165     6355    5                  Y$NOD.DVCLIN = RQS.LIN+Y$NOD.DVCLINBIS;
     1166     6356    5                  Y$NOD.TIMBFR = KV$ERD.TMNALG_BFRLF;
     1167     6357    6                  IF Y$NOD.TIMBFR>0 THEN DO;
     1168     6358    6                     CALL CMPTMN (Y$NOD.TIMBFR);
     1169     6359    6                  END /* If */;
     1170     6360    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTLF;
     1171     6361    6                  IF Y$NOD.TIMAFT>0 THEN DO;
     1172     6362    6                     CALL CMPTMN (Y$NOD.TIMAFT);
     1173     6363    6                  END /* If */;
     1174     6364    5                  Y$NOD.PSTRQR.VRT = '0'B;
     1175     6365    6                  IF RQS.CLM=1 THEN DO;
     1176     6366    6                     Y$NOD.PSTRQR.HRZ = '0'B;
     1177     6367    6                  END; ELSE DO;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:45   
     1178     6368        /* The destination column wasn't column 1.  Before we started
     1179     6369           on this node horizontal positioning may have be done (Y$NOD.PSTRQR.HRZ),
     1180     6370           but no longer is.  Don't go on with the previous setting
     1181     6371           of Y$NOD.PSTRQR.HRZ, as it clearly isn't done now.                             */
     1182     6372
     1183     6373    6                     Y$NOD.PSTRQR.HRZ = '1'B;
     1184     6374    6                  END /* If */;
     1185     6375        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:46   
     1186     6376    5               CASE (%NODFNC_SP);
     1187     6377        /* Process SP (space)                                                         */
     1188     6378
     1189     6379    5                  IF RQS.CLM<=Y$NOD.DVCCLM THEN EXIT CASE1;
     1190     6380        /* We are not positioning to the right, space won't help.                     */
     1191     6381
     1192     6382    5                  Y$NOD.FNCCNT = RQS.CLM-Y$NOD.DVCCLM;
     1193     6383    5                  Y$NOD.TIM = Y$NOD.TIM+Y$NOD.FNCCNT;
     1194     6384    5                  Y$NOD.DVCCLM = RQS.CLM;
     1195     6385    5                  Y$NOD.PSTRQR.HRZ = '0'B;
     1196     6386    5               END /* Case */;
     1197     6387        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:47   
     1198     6388        /* Now we must decide whether to use the current path or try another.         */
     1199     6389
     1200     6390    4               IF Y$NOD.TIM<SVDPTHEND$->Y$NOD.TIM
     1201     6391        /* The current path is faster than the saved path.                            */
     1202     6392
     1203     6393    5                 AND (Y$NOD.FNCCNT~=0 OR Y_TRE(TREX)&%TRE_OPT_MSK) THEN DO;
     1204     6394        /* We made some progress, or the branch continues. */
     1205     6395
     1206     6396    6                  IF NOT Y$NOD.PSTRQR THEN DO;
     1207     6397        /* The current path completes the positioning request.
     1208     6398           Copy the current path to the save area.                                    */
     1209     6399
     1210     6400    6                     R2 = POFFW(NOD$,SVDPTHEND$)*2;
     1211     6401    6                     SVDPTHALT$->Y$NODS = CRNPTHBGN$->Y$NODS;
     1212     6402    6                     CRNPTHBGN$ = PINCRW(SVDPTHALT$,R2U/2);
     1213     6403    6                     SVDPTHEND$ = PINCRW(CRNPTHBGN$,-SIZEW(Y$NOD));
     1214     6404    6                     NOD$ = SVDPTHEND$;
     1215     6405    6                     IF Y$NOD.TIM<=IMDSTPTIM THEN EXIT LOOP;
     1216     6406        /* The current time is less than or equal to the
     1217     6407           immediate stop time.  Stop without trying other possibilities.             */
     1218     6408
     1219     6409    6                     ELSE GOTO ALT_NODE;
     1220     6410    6                  END /* If */;
     1221     6411    6                  ELSE DO;
     1222     6412        /* The current path doesn't complete the positioning request.                 */
     1223     6413
     1224     6414    7                     IF Y_TRE.NXTX(TREX)~=0 THEN DO;
     1225     6415        /* There is a node under this one in the tree. */
     1226     6416
     1227     6417    8                        IF Y$NOD.FNCCNT~=0 OR Y_TRE(TREX)&%TRE_ALT_MSK THEN DO;
     1228     6418        /* Make a new node if we need to look at this one again. */
     1229     6419
     1230     6420    8                           TREX = Y_TRE.NXTX(TREX);
     1231     6421    8                           PRVNOD$ = NOD$;
     1232     6422    8                           NOD$ = PINCRW(NOD$,SIZEW(Y$NOD));
     1233     6423    8                           Y$NOD = PRVNOD$->Y$NODMOV.COPDWN;
     1234     6424    8                        END;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:48   
     1235     6425    7                        ELSE TREX = Y_TRE.NXTX(TREX);
     1236     6426    7                     END /* If */;
     1237     6427    6                     ELSE GOTO ALT_NODE;
     1238     6428        /* There is no continuation, try for an alternate. */
     1239     6429
     1240     6430    6                  END /* If */;
     1241     6431    5               END /* If */;
     1242     6432        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:49   
     1243     6433    5               ELSE DO;
     1244     6434        /* This branch is slower or wont work. Try something else. */
     1245     6435
     1246     6436    6   ALT_NODE:      DO WHILE TREX~=0 AND NOT Y_TRE(TREX)&%TRE_ALT_MSK;
     1247     6437    7                     IF NOD$=CRNPTHBGN$ THEN DO;
     1248     6438        /* We're back up to the top of the current trial branch.                      */
     1249     6439    7                        NOD$=SVDPTHALT$;
     1250     6440    7                     END;
     1251     6441    6                     NOD$ = PINCRW(NOD$, -SIZEW(Y$NOD));
     1252     6442    6                     TREX = Y$NOD.TREX;
     1253     6443    6                  END /* While */;
     1254     6444    5                  IF TREX=0 THEN EXIT LOOP;
     1255     6445        /* If we've run out of alternatives, use whatever we've found. */
     1256     6446
     1257     6447    5                  TREX = TREX+1;
     1258     6448    6                  IF NOD$<CRNPTHBGN$ THEN DO;
     1259     6449        /* We're trying an alternative to the saved path. Set up accordingly. */
     1260     6450
     1261     6451    6                     SVDPTHALT$ = NOD$;
     1262     6452    6                     PRVNOD$ = PINCRW(NOD$, -SIZEW(Y$NOD));
     1263     6453    6                     NOD$ = CRNPTHBGN$;
     1264     6454    6                     Y$NOD = PRVNOD$->Y$NODMOV.COPDWN;
     1265     6455    6                  END; ELSE DO;
     1266     6456        /* We're just trying to find an alternate path that works. */
     1267     6457
     1268     6458    6                     IF NOD$>CRNPTHBGN$ THEN PRVNOD$ = PINCRW(NOD$, -SIZEW(Y$NOD));
     1269     6459    6                     ELSE PRVNOD$ = PINCRW(SVDPTHALT$, -SIZEW(Y$NOD));
     1270     6460    6                     IF Y$NOD.FNCCNT~=0
     1271     6461        /* Make a new copy if this one has been used. */
     1272     6462
     1273     6463    6                     THEN Y$NOD = PRVNOD$->Y$NODMOV.COPDWN;
     1274     6464    6                  END /* If */;
     1275     6465    5               END /* If */;
     1276     6466    4            END LOOP;
     1277     6467        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:50   
     1278     6468    4            IF SVDPTHEND$->Y$NOD.TIM~=BITBIN('7FFF'X) THEN DO;
     1279     6469        /* The bottom node doesn't have the initial (dummy) time value in it,
     1280     6470           so we found a path that does the required positioning.                     */
     1281     6471
     1282     6472    4               NOD$ = ADDR(CRNPTH(0));
     1283     6473    5               DO WHILE NOD$<SVDPTHEND$;
     1284     6474        /* This loop is traversed for each node in the path we are processing.        */
     1285     6475
     1286     6476    5                  NOD$ = PINCRW(NOD$, SIZEW(Y$NOD));
     1287     6477    6                  DO WHILE Y$NOD.FNCCNT~=0; /* Loop start                        */
     1288     6478        /* This loop is traversed once for each occurence of the specified
     1289     6479           function, unless the function processing resets the count.                 */
     1290     6480
     1291     6481    7                     DO CASE (Y$NOD.FNC);
     1292     6482        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:51   
     1293     6483    7                     CASE (%NODFNC_BS, %NODFNC_SP, %NODFNC_HT, %NODFNC_NXTHT);
     1294     6484        /* Generate characters for BS (backspace), SP (space), HT, and NXTHT (tab).   */
     1295     6485
     1296     6486    8                        IF Y$NOD.TIMAFT=0 THEN DO;
     1297     6487    8                           USR_OTPRPTCHR.CNT = Y$NOD.FNCCNT;
     1298     6488    8                           Y$NOD.FNCCNT = 1;
     1299     6489    8                        END; ELSE DO;
     1300     6490    8                           USR_OTPRPTCHR.CNT = 1;
     1301     6491    8                        END;
     1302     6492    7                        USR_OTPRPTCHR.CHR = NODFNCCHR(Y$NOD.FNC);
     1303     6493    7                        CALL OTPRPTCHR;
     1304     6494    8                        IF %KV_MRD.AUTONL AND Y$NOD.DVCCLM>%KV_MRD.WDT THEN DO;
     1305     6495        /* We just put a blank in the right margin,
     1306     6496           but the terminal added a newline. Account for it.                          */
     1307     6497
     1308     6498    8                           Y$NOD.DVCCLM = 1;
     1309     6499    8                           Y$NOD.DVCLIN = Y$NOD.DVCLIN+1;
     1310     6500        /* Not to worry about PSTRQR, it they were cleared, the request cant be
     1311     6501           accomplished on this device.                                               */
     1312     6502
     1313     6503    8                           CALL AUTONLTMN;
     1314     6504    8                           Y$NOD.TIMAFT = USR_OTPRPTCHR.CNT;
     1315     6505    8                        END /* If */;
     1316     6506        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:52   
     1317     6507    7                     CASE (%NODFNC_CUB,%NODFNC_CUD,%NODFNC_CUF,%NODFNC_CUU);
     1318     6508        /* Generate characters for:
     1319     6509           CUB (cursor back)
     1320     6510           CUD (cursor down)
     1321     6511           CUF (cursor forward)
     1322     6512           CUU (cursor up)                                                            */
     1323     6513
     1324     6514    7                        CRNPTH(0) = NODFNCOFS(Y$NOD.FNC);
     1325     6515    7                        CALL DVCCTR (CRNPTH(0));
     1326     6516        /*N* TIMING?? (MIN FOR FNC ON FAST LINE)                                      */
     1327     6517        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:53   
     1328     6518    7                     CASE (%NODFNC_CR, %NODFNC_CR_NO_OPT);
     1329     6519        /* Generate characters for CR (carriage return).                              */
     1330     6520
     1331     6521    8                        IF %KV_MRD.DVCFLWCTRALG=0 THEN DO;
     1332     6522        /* There is no flow control algorithm, so generate the timing characters. */
     1333     6523
     1334     6524    9                           IF Y$NOD.TIMBFR>0 THEN DO;
     1335     6525        /* We're to send timing characters before the CR.                             */
     1336     6526
     1337     6527    9                              USR_OTPRPTCHR.CNT = Y$NOD.TIMBFR;
     1338     6528    9                              USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;
     1339     6529    9                              CALL OTPRPTCHR;
     1340     6530    9                           END /* If */;
     1341     6531    8                        END /* If */;
     1342     6532    7                        USR_OTPRPTCHR.CNT = 1;
     1343     6533    7                        USR_OTPRPTCHR.CHR = BITASC(%ASCIICR);
     1344     6534    7                        CALL OTPRPTCHR;
     1345     6535    8                        IF NOD$<SVDPTHEND$ THEN DO;
     1346     6536        /* There is a node below the current node. See if it's a line feed.           */
     1347     6537
     1348     6538    8                           B4 = PINCRW(NOD$,SIZEW(Y$NOD));
     1349     6539    9                           IF B4->Y$NOD.FNC=%NODFNC_LF THEN DO;
     1350     6540        /* The node below is a line feed.  Subtract the time for it from
     1351     6541           the time-after for the CR.                                                 */
     1352     6542
     1353     6543    9                              Y$NOD.TIMAFT = MAXIMUM(0,
     1354     6544    9                                Y$NOD.TIMAFT+Y$NOD.TIM- B4->Y$NOD.TIM);
     1355     6545    9                           END /* If */;
     1356     6546    8                        END /* If */;
     1357     6547        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:54   
     1358     6548    7                     CASE (%NODFNC_CUP);
     1359     6549        /* Generate characters for CUP (cursor position).                             */
     1360     6550
     1361     6551    8                        IF KV$ERD.CUP_ALG=%KV_CUP_ALG_ANS THEN DO;
     1362     6552        /* Generate cursor position characters for the ANS X3.64 algorithm.           */
     1363     6553
     1364     6554    8                           CHRBFRD(0) =
     1365     6555    8                             %BITBIN (CONCAT('03'X, ASCIIESC, ASCIICSI7, '00'X));
     1366     6556    8                           CALL OTPANSPN (Y$NOD.DVCLIN);
     1367     6557    8                           CHRBFRA(CHRBFRA(0)) = %BITBIN(ASCIISEMCLN);
     1368     6558    8                           CHRBFRA(0) = CHRBFRA(0)+1;
     1369     6559    8                           CALL OTPANSPN (Y$NOD.DVCCLM);
     1370     6560    8                           CHRBFRA(CHRBFRA(0)) = %BITBIN(ASCIIH);
     1371     6561    8                           CALL DVCCTR (0);
     1372     6562    8                        END /* If */;
     1373     6563        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:55   
     1374     6564    8                        ELSE IF KV$ERD.CUP_ALG=%KV_CUP_ALG_TBL THEN DO;
     1375     6565        /* Generate cursor positioning characters for the table-driven algorithm.     */
     1376     6566
     1377     6567    8                           CHRBFRA(0) = KV$ERD.CNT(KV$ERD.CUP_CHR);
     1378     6568    8                           CRNPTH(5) = Y$NOD.DVCCLM+KV$ERD.CUP_BIS;
     1379     6569    8                           CRNPTH(4) = Y$NOD.DVCLIN+KV$ERD.CUP_BIS;
     1380     6570    9                           IF KV$ERD.CUP_CMP THEN DO;
     1381     6571        /* The position values are to be complemented first. */
     1382     6572    9                              CRNPTH(5) = -CRNPTH(5);
     1383     6573    9                              CRNPTH(4) = -CRNPTH(4);
     1384     6574    9                           END;
     1385     6575    9                           IF KV$ERD.CUP_CLMFRS THEN DO;
     1386     6576        /* We are to send the column first.                                        */
     1387     6577    9                              CHRBFRA (CHRBFRA(0)+1) = CRNPTH(5);
     1388     6578    9                              CHRBFRA (CHRBFRA(0)+2) = CRNPTH(4);
     1389     6579    9                           END /* If */;
     1390     6580    9                           ELSE DO;
     1391     6581    9                              CHRBFRA (CHRBFRA(0)+1) = CRNPTH(4);
     1392     6582    9                              CHRBFRA (CHRBFRA(0)+2) = CRNPTH(5);
     1393     6583    9                           END /* If */;
     1394     6584    8                           CALL INSERT (CHRBFR,1,CHRBFRA(0),
     1395     6585    8                             SUBSTR(KV$ERD.TXT,KV$ERD.CUP_CHR+1,CHRBFRA(0)));
     1396     6586    8                           CHRBFRA(0) = CHRBFRA(0)+2;
     1397     6587    8                           CALL DVCCTR (0);
     1398     6588    8                        END /* If */;
     1399     6589        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:56   
     1400     6590    7                     CASE (%NODFNC_HPA);
     1401     6591        /* Generate characters for HPA (horizontal position absolute).                */
     1402     6592
     1403     6593    8                        DO CASE (KV$ERD.HPA_ALG);
     1404     6594    8                        CASE (%KV_HPA_ALG_ANS, %KV_HPA_ALG_CHA);
     1405     6595
     1406     6596        /* Generate horizontal position absolute characters for ANS X3.64 algorithm. */
     1407     6597
     1408     6598    8                           CHRBFRD(0) =
     1409     6599    8                             %BITBIN (CONCAT('03'X, ASCIIESC, ASCIICSI7, '00'X));
     1410     6600    8                           CALL OTPANSPN (Y$NOD.DVCCLM);
     1411     6601    8                           IF KV$ERD.HPA_ALG=%KV_HPA_ALG_ANS
     1412     6602    8                           THEN CALL INSERT (CHRBFR,CHRBFRA(0),1, BITASC('60'X));
     1413     6603    8                           ELSE CALL INSERT (CHRBFR,CHRBFRA(0),1, 'G');
     1414     6604    8                           CALL DVCCTR (0);
     1415     6605        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:57   
     1416     6606    8                        CASE (%KV_HPA_ALG_DBL);
     1417     6607
     1418     6608        /* Generate horizontal position absolute characters for
     1419     6609           the Diablo-compatible algorithm.
     1420     6610
     1421     6611           The characters to generate are:
     1422     6612              1st - ESC
     1423     6613              2nd - HT
     1424     6614              3rd - Column (in binary)                                                */
     1425     6615
     1426     6616    8                           CHRBFRD(0) =
     1427     6617    8                             %BITBIN (CONCAT('03'X, ASCIIESC, ASCIIHT, '00'X));
     1428     6618    8                           CHRBFRA(3) = Y$NOD.DVCCLM;
     1429     6619    8                           CALL DVCCTR (0);
     1430     6620        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:58   
     1431     6621    8                        CASE (%KV_HPA_ALG_NEC);
     1432     6622
     1433     6623        /* Generate horizontal position absolute characters for
     1434     6624           The NEC-compatible (5510/5520) algorithm.
     1435     6625
     1436     6626           The characters to generate are:
     1437     6627              1st - ESC
     1438     6628              2nd - column/32 + '50'X
     1439     6629              3rd - MOD(column,32) + X'3F'                                      */
     1440     6630
     1441     6631    8                           CRNPTH(0) = %BITBIN (CONCAT('03'X, ASCIIESC));
     1442     6632    8                           CHRBFRA(2) = Y$NOD.DVCCLM/32+BITBIN('50'X);
     1443     6633    8                           CHRBFRA(3) = MOD(Y$NOD.DVCCLM,32)+BITBIN('3F'X);
     1444     6634    8                           CALL DVCCTR (0);
     1445     6635    8                        END /* Case */;
     1446     6636        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:59   
     1447     6637    7                     CASE (%NODFNC_LF, %NODFNC_CR_NEWLIN, %NODFNC_LF_NEWLIN);
     1448     6638        /* Generate characters for LF (line feed).                                    */
     1449     6639        /* Generate characters for CR_NEWLIN (CR interpreted as new-line).            */
     1450     6640        /* Generate characters for LF_NEWLIN (LF interpreted as new-line).            */
     1451     6641
     1452     6642    8                        IF %KV_MRD.DVCFLWCTRALG=0 THEN DO;
     1453     6643        /* There is no flow control algorithm, so generate the timing characters.     */
     1454     6644
     1455     6645    9                           IF Y$NOD.TIMBFR>0 THEN DO;
     1456     6646        /* We're to send timing characters before the LF.                             */
     1457     6647
     1458     6648    9                              USR_OTPRPTCHR.CNT = Y$NOD.TIMBFR;
     1459     6649    9                              USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;
     1460     6650    9                              CALL OTPRPTCHR;
     1461     6651    9                              IF KV$ERD.TMNALG_BFRLF=3 THEN Y$NOD.TIMBFR = 0;
     1462     6652    9                           END /* If */;
     1463     6653    8                        END /* If */;
     1464     6654        /*N* PROBLEMS ON MOD 40 - SHORT LINE, LF, LF, LINE STARTING TO RIGHT OF SHORT */
     1465     6655        /*N* LINE - WRONG TIMING.  FIX UP LF TIMING FOR 40                            */
     1466     6656    7                        USR_OTPRPTCHR.CHR = NODFNCCHR(Y$NOD.FNC);
     1467     6657    7                        USR_OTPRPTCHR.CNT = 1;
     1468     6658    7                        CALL OTPRPTCHR;
     1469     6659    7                        %KV_VDI.OTPCHRCNTAFTLF = 0-%KV_VDI.TMPOTPCHRCNT;
     1470     6660        /*N* THIS REALLY ISN'T IN THE RIGHT PLACE - SHOULD CARRY DOWN                 */
     1471     6661        /*N* CNTAFTLF IN Y$NOD - CONTIGUOUS LF'S... MAY NOT MAKE A                    */
     1472     6662        /*N* SIGNIFICANT DIFFERENCE.  WOULD FIT IN A BYTE...                          */
     1473     6663    7                     END /* Case */;
     1474     6664    6                     IF Y$NOD.TIMAFT>0
     1475     6665        /* We're to send timing characters after the function.                        */
     1476     6666
     1477     6667    7                       AND %KV_MRD.DVCFLWCTRALG=0 THEN DO;
     1478     6668        /* There is no flow control algorithm, so generate the timing characters.     */
     1479     6669
     1480     6670    7                        USR_OTPRPTCHR.CNT = Y$NOD.TIMAFT;
     1481     6671    7                        USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;
     1482     6672    7                        CALL OTPRPTCHR;
     1483     6673    7                     END /* If */;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:60   
     1484     6674    6                     Y$NOD.FNCCNT = Y$NOD.FNCCNT-1;
     1485     6675    6                  END /* Loop on FNCCNT */;
     1486     6676    5               END /* Loop on NOD$ */;
     1487     6677    4               %KV_SRD.DVCLINBIS = Y$NOD.DVCLINBIS;
     1488     6678    4               %KV_MRD.DVCLIN = Y$NOD.DVCLIN;
     1489     6679    4               %KV_MRD.DVCCLM = Y$NOD.DVCCLM;
     1490     6680    4            END;
     1491     6681        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:61   
     1492     6682    4            ELSE IF NOT FLG.BROKE THEN DO;
     1493     6683        /* There is no path thru the tree that will get us from
     1494     6684           our current position to the desired position.
     1495     6685
     1496     6686           Try (once) changing the request to get to the next line,
     1497     6687
     1498     6688           but only after trying once with "any" positioning mode.                    */
     1499     6689
     1500     6690    5               IF NOT FLG.ERRED THEN DO;
     1501     6691    5                  FLG.ERRED = '1'B;
     1502     6692    5                  PHSPSTMOD = %KV_PHSPSTMOD_ANY;
     1503     6693    5               END; ELSE DO;
     1504     6694    5                  FLG.BROKE = '1'B;
     1505     6695    5                  %KV_VDI.UN_KNWPST = '1'B;
     1506     6696    5               END /* If */;
     1507     6697    4               FLG.LOP = '1'B;
     1508     6698    4               KV_PSTERRCNT = KV_PSTERRCNT+1;
     1509     6699    4            END; ELSE DO;
     1510     6700        /* We tried and failed, even with the unknown position tree, give up. */
     1511     6701
     1512     6702    4               FLG.LOP = '0'B;
     1513     6703    4               %KV_MRD.DVCCLM = USR_PST.PHSPST.CLM;
     1514     6704    4               %KV_MRD.DVCLIN = USR_PST.PHSPST.LIN+%KV_SRD.DVCLINBIS;
     1515     6705    5               IF %KV_MRD.DVCLIN>%KV_SRD.BTMRHT.LIN AND %KV_SRD.SCROLL THEN DO;
     1516     6706        /* We're in scrolling mode, the device is capable of scrolling,
     1517     6707           and the computed device line is illegal. Fix it.                               */
     1518     6708    5                  %KV_SRD.DVCLINBIS = %KV_MRD.DVCLIN-%KV_SRD.BTMRHT.LIN;
     1519     6709    5                  %KV_MRD.DVCLIN = %KV_SRD.BTMRHT.LIN;
     1520     6710    5               END /* If */;
     1521     6711    4            END /* If */;
     1522     6712        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:62   
     1523     6713    3         END /* If */;
     1524     6714    2         IF NOT FLG.LOP THEN EXIT;
     1525     6715    3         IF PHSPSTMOD>%KV_PHSPSTMOD_ANY THEN DO;
     1526     6716    3            IF SCRCNT>0 THEN USR_OTPRPTCHR.CNT = SCRCNT;
     1527     6717    3            ELSE USR_OTPRPTCHR.CNT = -SCRCNT;
     1528     6718    3            IF PHSPSTMOD>=%KV_PHSPSTMOD_VRTSCR+2
     1529     6719    3            THEN IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR+2
     1530     6720    3            THEN IF NOT KV$ERD.RGNSCR OR SCRCNT>0
     1531     6721    3            THEN CALL DVCCTRCNT (%KV$ERD_ILN_CHR#/8);
     1532     6722    3            ELSE CALL DVCCTRCNT (%KV$ERD_DLN_CHR#/8);
     1533     6723    4            ELSE DO;
     1534     6724    5               IF KV$ERD.RSTINSMOD_CHR~=0 THEN DO;
     1535     6725    5                  CALL DVCCTR (%KV$ERD_ICH_CHR#/8);
     1536     6726    5                  USR_OTPRPTCHR.CHR = ' ';
     1537     6727    5                  %KV_MRD.DVCCLM = %KV_MRD.DVCCLM+USR_OTPRPTCHR.CNT;
     1538     6728    5                  CALL OTPRPTCHR;
     1539     6729    5                  CALL DVCCTR (%KV$ERD_RSTINSMOD_CHR#/8);
     1540     6730    5               END;
     1541     6731    4               ELSE CALL DVCCTRCNT (%KV$ERD_ICH_CHR#/8);
     1542     6732    4            END;
     1543     6733    3            ELSE IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR
     1544     6734    3            THEN CALL DVCCTRCNT (%KV$ERD_DLN_CHR#/8);
     1545     6735    3            ELSE CALL DVCCTRCNT (%KV$ERD_DCH_CHR#/8);
     1546     6736    3            PHSPSTMOD = PHSPSTMOD+2;
     1547     6737    3         END;
     1548     6738    2      END /* Loop */;
     1549     6739    1      %KV_SRD.HI_NONBLN_PST = HI_NONBLN_PST;
     1550     6740    1      RETURN;
     1551     6741        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:63   
     1552     6742    1   AUTONLTMN: PROC;
     1553     6743    2   DCL KV$ERD_WRD(0:0) UBIN BASED(ERD$) ALIGNED;
     1554     6744    2      USR_OTPRPTCHR.CNT = 0;
     1555     6745    2      IF %KV_MRD.DVCFLWCTRALG~=0 THEN RETURN;
     1556     6746
     1557     6747        /* Get the max the timing for CR, LF, or CUP from the right margin.           */
     1558     6748
     1559     6749    2      R2 = %KV$ERD_TMNALG_AFTCUP#/16;
     1560     6750    3      DO WHILE ('1'B);                     /* Loop start                         */
     1561     6751    4         DO CASE (KV$ERD_WRD(R2));
     1562     6752    4         CASE (1);
     1563     6753
     1564     6754        /* Horizontal algorithm - PRM1*WDT+PRM2                                       */
     1565     6755
     1566     6756    4            USR_OTPRPTCHR.CNT = MAXIMUM (USR_OTPRPTCHR.CNT,
     1567     6757    4              KV$ERD.TMNALG_PRM1*%KV_MRD.WDT+KV$ERD.TMNALG_PRM2);
     1568     6758    4         CASE (2);
     1569     6759        /* Vertical algorithm - PRM6(*1)+PRM7                                         */
     1570     6760
     1571     6761    4            USR_OTPRPTCHR.CNT = MAXIMUM (USR_OTPRPTCHR.CNT,
     1572     6762    4              KV$ERD.TMNALG_PRM6+KV$ERD.TMNALG_PRM7);
     1573     6763    4         CASE (3);
     1574     6764        /* S&m - PRM8?                                                                */
     1575     6765
     1576     6766    4            USR_OTPRPTCHR.CNT = MAXIMUM (USR_OTPRPTCHR.CNT, KV$ERD.TMNALG_PRM8);
     1577     6767    4         END /* Case */;
     1578     6768    3         IF R2=%KV$ERD_TMNALG_AFTCUP#/16
     1579     6769    3         THEN IF KV$ERD.CUP_ALG~=0 AND %KV_MRD.DVCLIN<%KV_MRD.LNG THEN EXIT;
     1580     6770        /* The device can position directly, and we're not
     1581     6771           scrolling - just do the CUP timing                                         */
     1582     6772
     1583     6773    3         ELSE R2 = %KV$ERD_TMNALG_AFTLF#/16;
     1584     6774    3         ELSE IF R2=%KV$ERD_TMNALG_AFTCR#/16 THEN EXIT;
     1585     6775    3         ELSE R2 = %KV$ERD_TMNALG_AFTCR#/16;
     1586     6776    3      END /* Loop */;
     1587     6777    2      IF USR_OTPRPTCHR.CNT~=0
     1588     6778    2      THEN USR_OTPRPTCHR.CNT = USR_OTPRPTCHR.CNT/TIMPERCHR;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:64   
     1589     6779    2      RETURN;
     1590     6780    2   END AUTONLTMN;
     1591     6781        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:65   
     1592     6782        /* Compute the timing for this function.                                      */
     1593     6783
     1594     6784    1   CMPTMN: PROC (TMN);
     1595     6785    2   DCL TMN SBIN;
     1596     6786    2   DCL TIM SBIN;
     1597     6787        /*N* When PL6 does divide sensibly: DCL TIM SBIN(32); */
     1598     6788    2   DCL 1 TST REDEF TIM,
     1599     6789        /*N* See above. 2 S SBIN,*/
     1600     6790    2          2 U UBIN;
     1601     6791    3      DO CASE (TMN);
     1602     6792    3      CASE (1);
     1603     6793        /* Algorithm used after horizontal movement on terminals with
     1604     6794           moving carriages and on CRT's at high speeds.
     1605     6795
     1606     6796           Time = TMNALG_PRM1 * Columns-moved + TMNALG_PRM2
     1607     6797
     1608     6798           If the time computed is less than the cross-over point KV$ERD.TMNALG_PRM3,
     1609     6799           then the time is re-computed with:
     1610     6800
     1611     6801           Time = TMNALG_PRM4 * Square-root (10 * Columns-moved) + TMNALG_PRM5 */
     1612     6802
     1613     6803    4         IF Y$NOD.FNC~=%NODFNC_HT AND Y$NOD.FNC~=%NODFNC_NXTHT THEN DO;
     1614     6804    4            R2 = PRVNOD$->Y$NOD.DVCCLM-Y$NOD.DVCCLM;
     1615     6805    4            IF R2<0 THEN R2 = -R2;
     1616     6806    3         END; ELSE R2 = MAXTAB;
     1617     6807    3         TIM = R2*KV$ERD.TMNALG_PRM1+KV$ERD.TMNALG_PRM2;
     1618     6808    4         IF TIM<KV$ERD.TMNALG_PRM3 THEN DO;
     1619     6809        /* The computed time is less than the cross-over point time.
     1620     6810           Re-compute the time using the alternate expression.                        */
     1621     6811
     1622     6812    4            R2 = R2*10;
     1623     6813    4            TST.U = R2/3;
     1624     6814    5            DO WHILE TST.U*TST.U>R2U;      /* Loop start                         */
     1625     6815        /* This loop is traversed until the square root is found,
     1626     6816           by averaging a test value and its inverse. */
     1627     6817
     1628     6818    5               TST.U = (R2U/TST.U+TST.U)/2;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:66   
     1629     6819    5            END /* Loop */;
     1630     6820    4            TIM = TST.U*KV$ERD.TMNALG_PRM4+KV$ERD.TMNALG_PRM5;
     1631     6821    4         END /* If */;
     1632     6822    3         TMN = TIM/TIMPERCHR;
     1633     6823    3         Y$NOD.TIM = TMN*Y$NOD.FNCCNT+Y$NOD.TIM;
     1634     6824    3      CASE (2);
     1635     6825        /* Algorithm used after a line feed on terminals with
     1636     6826           moving carriages and on CRT's at high speeds.
     1637     6827
     1638     6828           Time = (TMNALG_PRM6 x movement-in-lines) + TMNALG_PRM7       */
     1639     6829
     1640     6830    4         IF Y$NOD.FNC=%NODFNC_FF OR Y$NOD.FNC=%NODFNC_VPA THEN DO;
     1641     6831    4            R2 = Y$NOD.DVCLIN-PRVNOD$->Y$NOD.DVCLIN;
     1642     6832    4            IF R2<0 THEN R2 = -R2;
     1643     6833    4            TIM = R2*KV$ERD.TMNALG_PRM6+KV$ERD.TMNALG_PRM7;
     1644     6834    4            TMN = TIM/TIMPERCHR;
     1645     6835    3         END; ELSE TMN = (KV$ERD.TMNALG_PRM6+KV$ERD.TMNALG_PRM7)/TIMPERCHR;
     1646     6836    3         Y$NOD.TIM = TMN*Y$NOD.FNCCNT+Y$NOD.TIM;
     1647     6837    3      CASE (3);
     1648     6838        /* Algorithm used before a line feed on belt and chain printers.
     1649     6839
     1650     6840           Time = MAX (0, TMNALG_PRM8 - time_since_last_line_feed)
     1651     6841
     1652     6842           If time_since_last_line_feed is 0, then no fill is generated.             */
     1653     6843
     1654     6844    4         IF %KV_VDI.OTPCHRCNTAFTLF+%KV_VDI.TMPOTPCHRCNT>0 THEN DO;
     1655     6845        /* There have been characters output since the last line feed.                */
     1656     6846
     1657     6847    4            TMN = KV$ERD.TMNALG_PRM8/TIMPERCHR-Y$NOD.TIM
     1658     6848    4              -%KV_VDI.OTPCHRCNTAFTLF+%KV_VDI.TMPOTPCHRCNT;
     1659     6849    4            IF TMN<0 THEN TMN=0;
     1660     6850    4            ELSE Y$NOD.TIM = TMN+Y$NOD.TIM;
     1661     6851    4         END /* If */;
     1662     6852    3         ELSE TMN = 0;
     1663     6853    3      END /* Case */;
     1664     6854    2   END CMPTMN;
     1665     6855        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:67   
     1666     6856        /*I* NAME: OTPRPTCHR.
     1667     6857             PURPOSE: Simulate the USR_OTPRPTCHR function for users that don't
     1668     6858                      do it, and for small count for which it isn't worth it.
     1669     6859        */
     1670     6860    1   OTPRPTCHR: PROC;
     1671     6861        %KV$MVD;
     1672     6905        %KV$TRNTBL;
     1673     6963        %KV$STT;
     1674     7357        %KV$SSN;
     1675     7436        %KV$VDI (STCLASS="BASED(B4)");
     1676     7507    2   DCL Y$BIN(0:0) BASED UBIN(8) CALIGNED;
     1677     7508        %KV$USR_GETOTPBFR (NAME=USR_GETOTPBFR);
     1678     7543        %EQU USR_GETOTPBFR = CHARTEXT(CONCAT('ADDR(CRNPTH(',BINCHAR(MAXNMBNOD-4),
              7543            '))->USR_GETOTPBFR'));
     1679     7544
     1680     7545    3      IF %KV_MRD.CALUSR_OTPRPTCHR AND USR_OTPRPTCHR.CNT>3 THEN DO;
     1681     7546        /* The user knows how to do this, and it is probably worth it. */
     1682     7547
     1683     7548    3         USR_OTPRPTCHR.FNC = %KV_USR_FNC_OTPRPTCHR;
     1684     7549    3         CALL KVV$CALUSR (USR_OTPRPTCHR);
     1685     7550    3         RETURN;
     1686     7551    3      END;
     1687     7552
     1688     7553    2      B4 = KV$PTR.VDI$;
     1689     7554    3      IF ASCBIN(USR_OTPRPTCHR.CHR)=%KV_MVD.TRNTBL$->KV$TRNTBL.OTPESCCHR THEN DO;
     1690     7555        /* We may need to buffer two chars for each real one. */
     1691     7556
     1692     7557    3         USR_OTPRPTCHR.CHR = %KV_MVD.TRNTBL$->KV$TRNTBL.OTPESCCHRBFR1;
     1693     7558    3         USR_OTPRPTCHR.FNC = ASCBIN(%KV_MVD.TRNTBL$->KV$TRNTBL.OTPESCCHRBFR1);
     1694     7559    3         IF USR_OTPRPTCHR.FNC~=0 THEN USR_OTPRPTCHR.CNT = USR_OTPRPTCHR.CNT*2;
     1695     7560    3      END;
     1696     7561    2      ELSE USR_OTPRPTCHR.FNC = 0;
     1697     7562
     1698     7563    3      DO WHILE USR_OTPRPTCHR.CNT>0;
     1699     7564    3         IF KV$VDI.OTPBFR_.BYTSIZ=0
     1700     7565    4           OR USR_OTPRPTCHR.FNC~=0 AND KV$VDI.OTPBFR_.BYTSIZ=1 THEN DO;
     1701     7566        /* We need more buffering space. */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:68   
     1702     7567
     1703     7568    4            %USR_GETOTPBFR.FNC = %KV_USR_FNC_GETOTPBFR;
     1704     7569    4            %USR_GETOTPBFR.ESTBYTSIZ = USR_OTPRPTCHR.CNT;
     1705     7570    4            CALL KVV$CALUSR (%USR_GETOTPBFR)
     1706     7571    5            WHENALTRETURN DO;
     1707     7572        /* The user was unable to get more space. Forget it. */
     1708     7573    5               RETURN;
     1709     7574    5            END;
     1710     7575    4         END;
     1711     7576
     1712     7577    3         R2 = MINIMUM (USR_OTPRPTCHR.CNT, KV$VDI.OTPBFR_.BYTSIZ);
     1713     7578    3         IF USR_OTPRPTCHR.FNC~=0 THEN R2U = R2U/2;
     1714     7579        /* Only put complete pairs of OTPESCCHRBFRs in any given output buffer. */
     1715     7580
     1716     7581    3         %KV_STT.OTPCHRCNT = %KV_STT.OTPCHRCNT+R2;
     1717     7582    3         %KV_SSN.OTPCHRCNT = %KV_SSN.OTPCHRCNT+R2;
     1718     7583    3         KV$VDI.TMPOTPCHRCNT = KV$VDI.TMPOTPCHRCNT+R2;
     1719     7584    3         KV$VDI.OTPBFR_.BYTSIZ = KV$VDI.OTPBFR_.BYTSIZ-R2;
     1720     7585    3         USR_OTPRPTCHR.CNT = USR_OTPRPTCHR.CNT-R2;
     1721     7586    3         KV$VDI.OTPBFR_.BYTX = KV$VDI.OTPBFR_.BYTX+R2;
     1722     7587    3         R2 = KV$VDI.OTPBFR_.BYTX-R2;
     1723     7588
     1724     7589    4         DO WHILE R2<KV$VDI.OTPBFR_.BYTX;
     1725     7590        /* Stuff the characters. */
     1726     7591
     1727     7592    4            KV$VDI.OTPBFR_.ADR$->Y$BIN(R2) = ASCBIN(USR_OTPRPTCHR.CHR);
     1728     7593    4            R2 = R2+1;
     1729     7594    5            IF USR_OTPRPTCHR.FNC~=0 THEN DO;
     1730     7595        /* We're doing the OTPESCCHRBFR thing. Stuff the second character. */
     1731     7596
     1732     7597    5               KV$VDI.OTPBFR_.BYTX = KV$VDI.OTPBFR_.BYTX+1;
     1733     7598    5               KV$VDI.OTPBFR_.BYTSIZ = KV$VDI.OTPBFR_.BYTSIZ-1;
     1734     7599    5               USR_OTPRPTCHR.CNT = USR_OTPRPTCHR.CNT-1;
     1735     7600    5               KV$VDI.OTPBFR_.ADR$->Y$BIN(R2) = USR_OTPRPTCHR.FNC;
     1736     7601    5               R2 = R2+1;
     1737     7602    5            END;
     1738     7603    4         END;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:69   
     1739     7604    3      END;
     1740     7605    2      RETURN;
     1741     7606    2   END OTPRPTCHR;
     1742     7607        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:70   
     1743     7608        /*I* NAME: OTPANSPN
     1744     7609             PURPOSE: To stuff the ASCII representation of the UBIN parameter
     1745     7610                      into CHRBFR at CHRBFRA(0), incrementing said index
     1746     7611                      by the number of characters stuffed.
     1747     7612        */
     1748     7613    1   OTPANSPN: PROC(NUM);
     1749     7614    2   DCL NUM UBIN ALIGNED;
     1750     7615    2      IF NUM<10 THEN R2H.U=1;
     1751     7616    2      ELSE IF NUM<100 THEN R2H.U=2;
     1752     7617    2      ELSE IF NUM<1000 THEN R2H.U=3;
     1753     7618    2      ELSE R2H.U=4;
     1754     7619    2      CALL BINCHAR (SUBSTR(CHRBFR,CHRBFRA(0),R2H.U), NUM);
     1755     7620    2      CHRBFRA(0) = CHRBFRA(0)+R2H.U;
     1756     7621    2      RETURN;
     1757     7622    2   END OTPANSPN;
     1758     7623        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:71   
     1759     7624        /*I* NAME: DVCCTR
     1760     7625             PURPOSE: To send the TEXTC character string located by means of the
     1761     7626                      UBIN parameter to the device, without possibility of interruption.
     1762     7627             INPUT: The parameter is 0 if the string is in CHRBFR, otherwise it is
     1763     7628                    the offset from ERD$ to the byte containing the offset into
     1764     7629                    KV$ERD.TXT.
     1765     7630        */
     1766     7631    1   DVCCTR: PROC (PRM);
     1767     7632    2   DCL PRM SBIN;
     1768     7633    2   DCL 1 PRMTXT REDEF PRM,
     1769     7634    2          2 SIZ UBIN BYTE CALIGNED,
     1770     7635    2          2 TXT CHAR(1);
     1771     7636    2   DCL CNT SBIN ALIGNED;
     1772     7637    2   DCL Y$BIN(0:0) UBIN(8) CALIGNED BASED;
     1773     7638        %KV$VDH_OTPLCL (NAME=V_O);
     1774     7711        %EQU VDH_OTPLCL=CHARTEXT(CONCAT('ADDR(CRNPTH(',BINCHAR(MAXNMBNOD-8),'))->V_O'));
     1775     7712        %KV$VDH_OTPLCL (NAME=Y_OTPLCL, STCLASS=CONSTANT, BYTX=1, TRN=YES);
     1776     7785        %KV_USR_EVT_ID_E;
     1777     7805
     1778     7806    2      CNT = 0;
     1779     7807    2      GOTO DVCCTRCMN;
     1780     7808
     1781     7809    2   DVCCTRCNT: ENTRY (PRM);
     1782     7810
     1783     7811    2      CNT = USR_OTPRPTCHR.CNT;
     1784     7812    3      IF PRM=%KV$ERD_ILN_CHR#/8 OR PRM=%KV$ERD_DLN_CHR#/8 THEN DO;
     1785     7813    3         %KV_MRD.DVCCLM=1;
     1786     7814    3         IF KV$ERD.ERSTIM=0 OR %KV_MRD.DVCFLWCTRALG~=0 THEN EXIT;
     1787     7815        /* Send one at a time to get the timing inserted. */
     1788     7816    3         USR_OTPRPTCHR.CNT = KV$ERD.ERSTIM/TIMPERCHR;
     1789     7817    3         USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;
     1790     7818    3         CNT = -CNT;
     1791     7819    3      END;
     1792     7820    2   DVCCTRCMN:;
     1793     7821    2      USR_EVT.ID = %KV_USR_EVT_ID_INHDLTOTP;
     1794     7822    2      %VDH_OTPLCL = Y_OTPLCL;
     1795     7823    3      IF PRM=0 THEN DO;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:72   
     1796     7824    3         %VDH_OTPLCL.BFR_.ADR$ = ADDR(CHRBFR);
     1797     7825    3         %VDH_OTPLCL.BFR_.BYTSIZ = CHRBFRA(0);
     1798     7826    3      END;
     1799     7827    3      ELSE IF PRMTXT.SIZ~=0 THEN DO;
     1800     7828    3         %VDH_OTPLCL.BFR_.ADR$ = ADDR(PRM);
     1801     7829    3         %VDH_OTPLCL.BFR_.BYTSIZ = PRMTXT.SIZ;
     1802     7830    3      END;
     1803     7831    3      ELSE DO;
     1804     7832    3         %VDH_OTPLCL.BFR_.ADR$ = ERD$;
     1805     7833    3         %VDH_OTPLCL.BFR_.BYTX = ERD$->Y$BIN(PRM)+%KV$ERD_CNT#/8+1;
     1806     7834    3         %VDH_OTPLCL.BFR_.BYTSIZ = ERD$->Y$BIN(%VDH_OTPLCL.BFR_.BYTX-1);
     1807     7835    3         IF CNT=1 THEN CNT=0;
     1808     7836    4         ELSE IF CNT>1 THEN DO;
     1809     7837    4            SUBSTR(CHRBFR,0,%VDH_OTPLCL.BFR_.BYTSIZ) = SUBSTR(%VDH_OTPLCL.BFR_.ADR$
     1810     7838    4              ->Y$NODS,%VDH_OTPLCL.BFR_.BYTX,%VDH_OTPLCL.BFR_.BYTSIZ);
     1811     7839    4            R2 = %VDH_OTPLCL.BFR_.BYTSIZ;
     1812     7840        /*
     1813     7841           Only put in as much as will fit in CHRBFR.
     1814     7842        */
     1815     7843    4            %VDH_OTPLCL.BFR_.BYTX = R2*MINIMUM(CNT,%MIN(MAXNMBNOD*2-16,63)/R2);
     1816     7844    4            CNT = CNT*R2;                  /* Total chars to send                */
     1817     7845    5            DO WHILE R2<%VDH_OTPLCL.BFR_.BYTX;
     1818     7846    5               CHRBFRA(R2) = CHRBFRA(R2-%VDH_OTPLCL.BFR_.BYTSIZ);
     1819     7847    5               R2 = R2+1;
     1820     7848    5            END;
     1821     7849    4            %VDH_OTPLCL.BFR_.BYTSIZ = R2;
     1822     7850    4            %VDH_OTPLCL.BFR_.BYTX = 0;
     1823     7851    4            %VDH_OTPLCL.BFR_.ADR$ = ADDR(CHRBFR);
     1824     7852    4         END;
     1825     7853    3      END;
     1826     7854    2   SEND_AGAIN:;
     1827     7855    2      USR_EVT.PRM = %VDH_OTPLCL.BFR_.BYTSIZ;
     1828     7856    2      IF %KV_VDI.USREVTENB(%KV_USR_EVT_ID_INHDLTOTP) AND USR_EVT.PRM>1
     1829     7857    2      THEN CALL KVV$CALUSR_EVT (USR_EVT);
     1830     7858    2      CALL KVO$OTPLCL (%VDH_OTPLCL);
     1831     7859    3      IF CNT>USR_EVT.PRM THEN DO;
     1832     7860    3         CNT = CNT-USR_EVT.PRM;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:73   
     1833     7861    3         IF CNT<%VDH_OTPLCL.BFR_.BYTSIZ THEN %VDH_OTPLCL.BFR_.BYTSIZ = CNT;
     1834     7862    3         GOTO SEND_AGAIN;
     1835     7863    3      END;
     1836     7864    3      IF CNT<0 THEN DO;          /* Need to insert timing for each repetition    */
     1837     7865    3         CALL OTPRPTCHR;
     1838     7866    3         CNT = CNT+1;
     1839     7867    3         IF CNT<0 THEN GOTO DVCCTRCMN;
     1840     7868    3      END;
     1841     7869    2      RETURN;
     1842     7870    2   END DVCCTR;
     1843     7871        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:74   
     1844     7872        /*F* NAME: KVO$DVCCTR.
     1845     7873             PURPOSE: To send the control sequence indicated by the parameter,
     1846     7874                      disallowing output deletion during the sequence.  Timing
     1847     7875                      is added for ED0 and ED2.
     1848     7876             INPUT: The UBIN parameter is the byte offset into KV$ERD of the
     1849     7877                    appropriate xxx_CHR value. Include KV_ERD_E and spell it like
     1850     7878                    %KV$ERD_xxx_CHR#/8.
     1851     7879        */
     1852     7880    1   KVO$DVCCTR: ENTRY(PARM);
     1853     7881    1      IF DVCCTRX<%KV$ERD_ICH_CHR#/8
     1854     7882    1        OR DVCCTRX>%KV$ERD_TXT#/8 AND DVCCTRX<256 THEN RETURN;
     1855     7883    1      MRD$ = KV$PTR.MRD$;
     1856     7884    1      ERD$ = %KV_MRD.ERD$;
     1857     7885    1      USR_EVT = KV_USR_EVT;
     1858     7886    1      CALL DVCCTR (DVCCTRX);
     1859     7887    1      IF DVCCTRX=%KV$ERD_ED0_CHR#/8
     1860     7888    1        OR DVCCTRX=%KV$ERD_ED2_CHR#/8
     1861     7889    1        OR DVCCTRX=%KV$ERD_ILN_CHR#/8
     1862     7890    1        OR DVCCTRX=%KV$ERD_DLN_CHR#/8
     1863     7891        /* This is erasing, send some timing if appropriate. */
     1864     7892
     1865     7893    2        AND %KV_MRD.DVCFLWCTRALG=0 THEN DO;
     1866     7894    2         USR_OTPRPTCHR.CNT = KV$ERD.ERSTIM/KV_100MCRSCNPRDPERCHR(%KV_VDI.LINSPD);
     1867     7895    2         USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;
     1868     7896    2         IF USR_OTPRPTCHR.CNT~=0 THEN CALL OTPRPTCHR;
     1869     7897    2      END;
     1870     7898    1      RETURN;
     1871     7899    1   END KVO$GNRPST;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:75   
--  Include file information  --

   KV_ERD_E.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$GNRPST.

   Procedure KVO$GNRPST requires 4079 words for executable code.
   Procedure KVO$GNRPST requires 140 words of local(AUTO) storage.

    No errors detected in file KVO$GNRPST.:E05TSI    .

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:76   

 Object Unit name= KVO$GNRPST                                 File name= KVO$GNRPST.:E05TOU
 UTS= JUL 30 '97 02:08:57.84 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS    111     6F  KVO$GNRPST
    1   Proc  even  none  4079    FEF  KVO$GNRPST

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  KVO$GNRPST
     1    F91                  yes      Std        1  KVO$DVCCTR

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      9  KV_100MCRSCNPRDPERCHR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVV$CALUSR
 yes     yes           Std       1 KVV$CALUSR_EVT
         yes           Std       1 KVO$OTPLCL
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:77   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV_PSTERRCNT                          KV_USR_EVT
r    G$ROS$
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:78   


        1        1        /*M* KVO$GNRPST VDH HANDLER POSITIONING CHARACTER GENERATION ROUTINES         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IND=0,IAD=3 */
        8        8        KVO$GNRPST: PROC (PARM);

      8   1 000000  D380 0000 0000  xent KVO$GNRPST      LNJ,B5   X6A_AUTO_1
          1 000003       008C 0001                       DC       140,1

        9        9
       10       10        %INCLUDE KL_AFCN_C;
       11      111        %INCLUDE KL_MACRO_C;
       12     3463        %INCLUDE K_ID_E;
       13     3513        %K#ENTID_E;
       14     3532        %K#LYRID_E;
       15     3539
       16     3540 S      %INCLUDE KV$GLB;
       17     3541 S      %INCLUDE KV$GLBCTX;
       18     3542 S      %INCLUDE KV$INT;
       19     3543 S      %INCLUDE KV$USR;
       20     3544 S      %INCLUDE KV_GLBCNS_E;
       21     3545        %KV_PHSPSTMOD_E;
       22     3552        %KV_DVCCTR_E;
       23     3567        %KV_USR_FNC_E;
       24     3583        %INCLUDE KV_ASCCHR_E;              /*                 Equ's for ASCII chr's   */
       25     3720        %INCLUDE KV_ERD_E;            /*               Equs for disps into KV$ERD     */
       26     3807        %KV$USR_EVT;                            /*             VDI-user event         */
       27     3842        %KV$MRD (STCLASS="BASED(MRD$)"); /*                   VDH master real device  */
       28     3889        %EQU KV_MRD = CHARTEXT ('KV$MRD');
       29     3890        %KV$PTR;                           /*                 VDH pointers, status    */
       30     3933        %KV$SRD (STCLASS="BASED(SRD$)"); /*              VDH subordinate real device  */
       31     4208        %EQU KV_SRD = CHARTEXT ('KV$SRD');
       32     4209        %KV$VDI;                 /*                 VDI (VDH <-> VDH user interface)  */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:79   
       33     4280        %KV$USRPRM;
       34     4331        %KV$SHRBFR (STCLASS="BASED(B4)");  /*     VDH miscellaneous buffer definition */
       35     4363    1   DCL KV$SHRBFR_BYT(0:7) REDEF KV$SHRBFR UBIN(8) CALIGNED;
       36     4364        %KV$ERD (STCLASS="BASED(ERD$)");   /*                 VDH device definition   */
       37     4448        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:80   
       38     4449        /* external procs. */
       39     4450    1   DCL KVO$OTPLCL ENTRY(1);
       40     4451    1   DCL KVV$CALUSR ENTRY(1) ALTRET;
       41     4452    1   DCL KVV$CALUSR_EVT ENTRY(1) ALTRET;
       42     4453        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:81   
       43     4454        /* Parameter and its various interpretations. */
       44     4455    1   DCL PARM CHAR(DVCCTRX);
       45     4456
       46     4457        /* Redefed for KVO$DVCCTR. */
       47     4458    1   DCL DVCCTRX REDEF PARM SBIN;
       48     4459
       49     4460        /* Redef for KVO$GNRPST. */
       50     4461        %KV$USR_PST (NAME=USR_PST, STCLASS=REDEF PARM);
       51     4531        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:82   
       52     4532
       53     4533        /* Define the function values.                                                */
       54     4534
       55     4535        %EQU NODFNC_JMP=0;
       56     4536        %SET NODFNCCHR=' ';
       57     4537        %EQU NODFNC_BS=LENGTHC(NODFNCCHR);      /* (backspace)                        */
       58     4538        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIIBS));
       59     4539        %EQU NODFNC_CR=LENGTHC(NODFNCCHR);      /* (carriage return)                  */
       60     4540        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIICR));
       61     4541        %EQU NODFNC_CR_NEWLIN=LENGTHC(NODFNCCHR); /* (CR as new-line)                 */
       62     4542        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIICR));
       63     4543        %EQU NODFNC_CR_NO_OPT=LENGTHC(NODFNCCHR); /* (CR, no optimization)            */
       64     4544        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIICR));
       65     4545        %EQU NODFNC_CUB=LENGTHC(NODFNCCHR);     /* (cursor back)                      */
       66     4546        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_CUB_CHR#/8));
       67     4547        %EQU NODFNC_CUD=LENGTHC(NODFNCCHR);     /* (cursor down)                      */
       68     4548        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_CUD_CHR#/8));
       69     4549        %EQU NODFNC_CUF=LENGTHC(NODFNCCHR);     /* (cursor forward)                   */
       70     4550        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_CUF_CHR#/8));
       71     4551        %EQU NODFNC_CUP=LENGTHC(NODFNCCHR);     /* (cursor position)                  */
       72     4552        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_CUP_CHR#/8));
       73     4553        %EQU NODFNC_CUU=LENGTHC(NODFNCCHR);     /* (cursor up)                        */
       74     4554        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_CUU_CHR#/8));
       75     4555        %EQU NODFNC_FF=LENGTHC(NODFNCCHR);      /* (form feed)                        */
       76     4556        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_FRMFED_CHR#/8));
       77     4557        %EQU NODFNC_HPA=LENGTHC(NODFNCCHR);     /* (horizontal position absolute)     */
       78     4558        %SET NODFNCCHR=CONCAT (NODFNCCHR, BINASC(KV$ERD_HPA_ALG#/8));
       79     4559        %EQU NODFNC_HT=LENGTHC(NODFNCCHR);      /* (horizontal tab)                   */
       80     4560        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIIHT));
       81     4561        %EQU NODFNC_LF=LENGTHC(NODFNCCHR);      /* (line feed)                        */
       82     4562        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIILF));
       83     4563        %EQU NODFNC_LF_NEWLIN=LENGTHC(NODFNCCHR); /* (LF as new-line)                 */
       84     4564        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIILF));
       85     4565        %EQU NODFNC_NXTHT=LENGTHC(NODFNCCHR);   /* (horizontal tab then BS)           */
       86     4566        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIIHT));
       87     4567        %EQU NODFNC_SP=LENGTHC(NODFNCCHR);      /* (space)                            */
       88     4568        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIISP));
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:83   
       89     4569        %EQU NODFNC_VPA=LENGTHC(NODFNCCHR);     /* (vertical position absolute)       */
       90     4570        %SET NODFNCCHR=CONCAT (NODFNCCHR, BITASC(ASCIIVT));
       91     4571        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:84   
       92     4572
       93     4573        /* Characters associated with the above functions.                            */
       94     4574
       95     4575    1   DCL NODFNCDAT CHAR(0) CONSTANT INIT(%NODFNCCHR);
       96     4576    1   DCL NODFNCCHR(0:%(LENGTHC(NODFNCCHR)-1)) REDEF NODFNCDAT CHAR(1);
       97     4577    1   DCL NODFNCOFS(0:%(LENGTHC(NODFNCCHR)-1)) REDEF NODFNCDAT UBIN BYTE UNAL;
       98     4578
       99     4579        /* Table to convert from characters to seconds (indexed by LINSPD). */
      100     4580    1   DCL KV_100MCRSCNPRDPERCHR(0:15) CONSTANT SYMDEF UBIN INIT(
      101     4581    1    %(100000/70),                          /*    50 BAUD                         */
      102     4582    1    %(100000/100),                         /*    75 BAUD                         */
      103     4583    1    %(100000/100),                         /*   110 BAUD                         */
      104     4584    1    %(100000/150),                         /*   134 BAUD                         */
      105     4585    1    %(100000/150),                         /*   150 BAUD                         */
      106     4586    1    %(100000/200),                         /*   200 BAUD                         */
      107     4587    1    %(100000/300),                         /*   300 BAUD                         */
      108     4588    1    %(100000/600),                         /*   600 BAUD                         */
      109     4589    1    %(100000/1050),                        /*  1050 BAUD                         */
      110     4590    1    %(100000/1200),                        /*  1200 BAUD                         */
      111     4591    1    %(100000/1800),                        /*  1800 BAUD                         */
      112     4592    1    %(100000/2000),                        /*  2000 BAUD                         */
      113     4593    1    %(100000/2400),                        /*  2400 BAUD                         */
      114     4594    1    %(100000/4800),                        /*  4800 BAUD                         */
      115     4595    1    %(100000/9600),                        /*  9600 BAUD                         */
      116     4596    1    %(100000/19200)) /* 19200 BAUD */ ;
      117     4597
      118     4598        /* Maximum HPA column.  Indexed by KV$ERD.HPA_ALG, yields the                 */
      119     4599        /* Maximum column that HPA (horizontal position absolute) can                 */
      120     4600        /* Position to.                                                               */
      121     4601
      122     4602        %ERROR (KV_HPA_ALG_ANS~=1 OR KV_HPA_ALG_DBL~=2 OR KV_HPA_ALG_NEC~=3,,
      123     4603         'These HPA tables are out of order.');
      124     4604    1   DCL MAXHPACLM(0:7) CONSTANT UBIN INIT(0,32767,126,163,32767,0*0);
      125     4605
      126     4606        /* Average HPA size.  Indexed by KV$ERD.HPA_ALG, yields the                   */
      127     4607        /* Average length of the HPA sequence.                                        */
      128     4608
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:85   
      129     4609    1   DCL AVRHPASIZ(0:7) CONSTANT UBIN BYTE UNAL INIT(0,5,3,3,5,0*0);
      130     4610
      131     4611        /* Maximum HPA size.  Indexed by KV$ERD.HPA_ALG, yields the                   */
      132     4612        /* Maximum length of the HPA sequence.                                        */
      133     4613
      134     4614    1   DCL MAXHPASIZ(0:7) CONSTANT UBIN BYTE UNAL INIT(0,8,3,3,8,0*0);
      135     4615
      136     4616        /* Average CUP size.  Indexed by KV$ERD.CUP_ALG, yields the                   */
      137     4617        /* Average length of the CUP sequence.                                        */
      138     4618
      139     4619        %ERROR (KV_CUP_ALG_ANS~=1 OR KV_CUP_ALG_TBL~=2,,
      140     4620         'These CUP tables are out of order.');
      141     4621    1   DCL AVRCUPSIZ(0:3) CONSTANT UBIN BYTE UNAL INIT(0,8,4,0);
      142     4622
      143     4623        /* Maximum CUP size.  Indexed by KV$ERD.CUP_ALG, yields the                   */
      144     4624        /* Maximum length of the CUP sequence.                                        */
      145     4625
      146     4626    1   DCL MAXCUPSIZ(0:3) CONSTANT UBIN BYTE UNAL INIT(0,10,5,0);
      147     4627
      148     4628        /* Positioning error count.  Number of times we could find                    */
      149     4629        /* No path thru the tree that would get us from the current device            */
      150     4630        /* Position to the desired destination position.  This failure                */
      151     4631        /* Occurs when a request to move up is issued to a device that                */
      152     4632        /* Can't move up, for example.                                                */
      153     4633
      154     4634    1   DCL KV_PSTERRCNT UBIN SYMREF;
      155     4635
      156     4636        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:86   
      157     4637        %MACRO TREE (NEXT=0, NAME=, SPARE=, FNC=0, ALT=NO, OPT=NO);
      158     4638        %LSET LISTDIR='0'B;
      159     4639        %LSET LISTEXP='1'B;
      160     4640        %IF LENGTHC(TEXTCHAR(NAME))~=0;
      161     4641        DCL 1 NAME CONSTANT,2 * UBIN INIT(0),
      162     4642        %SET TREX=1;
      163     4643        %ENDIF;
      164     4644               2 * BIT(16) INIT(%CONCAT(TEXTCHAR(ALT)~='NO', TEXTCHAR(OPT)~='NO',
      165     4645         BINBIT(FNC,6),BINBIT(NEXT,8))),
      166     4646        %SET TREX=TREX+1;
      167     4647        %IF LENGTHC(TEXTCHAR(SPARE))~=0;
      168     4648             2 *(0:SPARE) UBIN INIT(0*0);
      169     4649        %SET TREX=TREX+SPARE+1;
      170     4650        %ENDIF;
      171     4651        %MEND;
      172     4652
      173     4653        /* First we need labelled nodes, since the macro can't do forward refs */
      174     4654
      175     4655         %TREE (FNC=NODFNC_SP, NAME=Y_TREDAT);
      176     4670        %EQU TRE_SP = TREX-1;
      177     4671
      178     4672        %EQU TRE_BS = TREX;
      179     4673         %TREE (FNC=NODFNC_BS);
      180     4688
      181     4689        %EQU TRE_LF = TREX;
      182     4690         %TREE (FNC=NODFNC_LF);
      183     4705
      184     4706        %EQU TRE_CUF = TREX;
      185     4707         %TREE (FNC=NODFNC_CUF);
      186     4722
      187     4723        /* Now a subnode for the UNK_PST/NO_OPT tree */
      188     4724
      189     4725        %EQU TRE_LF_SP = TREX;
      190     4726         %TREE (FNC=NODFNC_LF, NEXT=TRE_SP);
      191     4741
      192     4742        /* Tree for unknown starting position. */
      193     4743
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:87   
      194     4744        %EQU TRE_UNK_PST = TREX;
      195     4745         %TREE (ALT=, FNC=NODFNC_CUP, NEXT=TRE_LF);
      196     4760        /*                       Drop into NO_OPT for non-crts                        */
      197     4761
      198     4762        /* Tree for no optimization.  This tree is used if KV$MRD.NOOPTMIZ
      199     4763           is set.  It is intended for outputing to devices such as
      200     4764           paper tape punches and computers.                                          */
      201     4765
      202     4766        %EQU TRE_NO_OPT = TREX;
      203     4767         %TREE (ALT=, FNC=NODFNC_CR_NO_OPT, NEXT=TRE_LF_SP);
      204     4782         %TREE (ALT=, FNC=NODFNC_SP);
      205     4797         %TREE (ALT=, FNC=NODFNC_BS);
      206     4812         %TREE (ALT=, FNC=NODFNC_CR, NEXT=TRE_SP);
      207     4827         %TREE (FNC=NODFNC_CR_NEWLIN, NEXT=TRE_SP);
      208     4842
      209     4843        /* Basic tree using any positioning.  Used for most hard-copy
      210     4844           devices.                                                                   */
      211     4845
      212     4846        %EQU TRE_ANY_HRZ = TREX;
      213     4847         %TREE (OPT=, FNC=NODFNC_HPA, NEXT=TREX+1);
      214     4862         %TREE (ALT=, FNC=NODFNC_SP);
      215     4877         %TREE (ALT=, FNC=NODFNC_HT, NEXT=TRE_SP);
      216     4892         %TREE (OPT=, FNC=NODFNC_NXTHT, NEXT=TRE_BS);
      217     4907
      218     4908        %EQU TRE_BSC_ANY = TREX;
      219     4909         %TREE (ALT=, FNC=NODFNC_CR, NEXT=TREX+1);
      220     4924         %TREE (ALT=, OPT=, FNC=NODFNC_LF, NEXT=TRE_ANY_HRZ);
      221     4939         %TREE (ALT=, FNC=NODFNC_CR_NEWLIN, NEXT=TRE_ANY_HRZ);
      222     4954         %TREE (FNC=NODFNC_CUU, NEXT=TRE_ANY_HRZ);
      223     4969
      224     4970        /* Tree for CRT using any positioning.                                        */
      225     4971
      226     4972        %EQU TRE_CRT_ANY = TREX;
      227     4973         %TREE (ALT=, FNC=NODFNC_CUP, NEXT=TRE_LF);
      228     4988         %TREE (ALT=, FNC=NODFNC_CR, NEXT=TREX+1);
      229     5003         %TREE (ALT=, OPT=, FNC=NODFNC_LF, NEXT=TRE_ANY_HRZ);
      230     5018         %TREE (ALT=, FNC=NODFNC_CR_NEWLIN, NEXT=TRE_ANY_HRZ);
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:88   
      231     5033         %TREE (FNC=NODFNC_CUU, NEXT=TRE_ANY_HRZ);
      232     5048
      233     5049        /* Tree for CRT using skipping positioning.                                   */
      234     5050
      235     5051        %EQU TRE_CRT_SKP = TREX;
      236     5052         %TREE (ALT=, FNC=NODFNC_CUP, NEXT=TRE_LF);
      237     5067         %TREE (ALT=, FNC=NODFNC_BS, NEXT=TRE_LF);
      238     5082         %TREE (ALT=, FNC=NODFNC_CR, NEXT=TREX+2);
      239     5097        %EQU TRE_SKP_HRZ = TREX+3;
      240     5098         %TREE (ALT=, FNC=NODFNC_CR_NEWLIN, NEXT=TRE_SKP_HRZ);
      241     5113         %TREE (ALT=, OPT=, FNC=NODFNC_LF, NEXT=TRE_SKP_HRZ);
      242     5128         %TREE (ALT=, FNC=NODFNC_CUU, NEXT=TRE_SKP_HRZ);
      243     5143         %TREE (OPT=, FNC=NODFNC_HPA, NEXT=TREX+1);
      244     5158         %TREE (ALT=, OPT=, FNC=NODFNC_HT, NEXT=TRE_CUF);
      245     5173         %TREE (FNC=NODFNC_NXTHT, NEXT=TRE_BS);
      246     5188
      247     5189        /* Tree for CRT using blanking positioning.                                   */
      248     5190
      249     5191        %EQU TRE_CRT_BLN = TRE_SP;
      250     5192
      251     5193         %TREE (SPARE=20);
      252     5208
      253     5209        /* Structure defining an optimizing tree entry (a node).                      */
      254     5210
      255     5211    1   DCL 1 Y_TRE(0:%(TREX-1)) REDEF Y_TREDAT,
      256     5212
      257     5213        /* Flag indicating that there is an alternative node for this node.           */
      258     5214
      259     5215    1          2 ALT BIT(1),
      260     5216        %EQU TRE_ALT_MSK = '8000'X;
      261     5217
      262     5218        /* Flag indicating that this node is optional. */
      263     5219
      264     5220    1          2 OPT BIT(1),
      265     5221        %EQU TRE_OPT_MSK = '4000'X;
      266     5222
      267     5223        /* Function for this node (e.g., CR, LF, SP, CUP, etc)                        */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:89   
      268     5224
      269     5225    1          2 FNC UBIN(6) UNAL,
      270     5226
      271     5227        /* Next index*                                                                */
      272     5228    1          2 NXTX UBIN BYTE UNAL;
      273     5229
      274     5230    1   DCL PSTTREX_CRT(0:9) CONSTANT UBIN BYTE CALIGNED
      275     5231    1    INIT(%TRE_CRT_SKP*2,%TRE_CRT_BLN,%TRE_CRT_ANY,%TRE_CRT_SKP*0);
      276     5232
      277     5233         %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:90   
      278     5234        /* Structure for a node entry, which is used to keep track of our
      279     5235           path thru the optimization trees.                                          */
      280     5236
      281     5237    1   DCL 1 Y$NOD BASED(NOD$) ALIGNED,
      282     5238
      283     5239        /* Function to perform.                                                       */
      284     5240    1          2 FNC UBIN BYTE UNAL,
      285     5241
      286     5242        /* Positioning required. */
      287     5243    1          2 PSTRQR UNAL,
      288     5244
      289     5245        /* Horizontal positioning isn't done.                                            */
      290     5246    1             3 HRZ BIT(1),
      291     5247
      292     5248        /* Vertical positioning isn't done. */
      293     5249    1             3 VRT BIT(1),
      294     5250
      295     5251        /* Optimization tree index.                                                   */
      296     5252    1          2 TREX UBIN(6) UNAL,
      297     5253
      298     5254        /* Device line.                                                               */
      299     5255    1          2 DVCLIN SBIN,
      300     5256
      301     5257        /* Device column.                                                             */
      302     5258    1          2 DVCCLM UBIN,
      303     5259
      304     5260        /* Device line bias.  Device line = physical line + device line bias.         */
      305     5261    1          2 DVCLINBIS SBIN,
      306     5262
      307     5263        /* Time (in character time units) for all nodes from the top
      308     5264           thru this node.                                                            */
      309     5265    1          2 TIM UBIN,
      310     5266
      311     5267        /* Time fill required before the function.                                    */
      312     5268    1          2 TIMBFR UBIN,
      313     5269
      314     5270        /* Time fill required after the function.                                     */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:91   
      315     5271    1          2 TIMAFT UBIN,
      316     5272
      317     5273        /* Function count.                                                            */
      318     5274    1          2 FNCCNT UBIN;
      319     5275
      320     5276    1   DCL 1 Y$NODMOV REDEF Y$NOD,
      321     5277
      322     5278        /* Portion to copy to begin a new one */
      323     5279
      324     5280    1          2 COPDWN(0:4) UBIN,
      325     5281
      326     5282        /* Portion to clear to begin a new one */
      327     5283
      328     5284    1          2 CLR(0:2) UBIN;
      329     5285
      330     5286        /* Structure for moving several Y$NODs around. */
      331     5287
      332     5288    1   DCL Y$NODS CHAR(R2) BASED;
      333     5289
      334     5290        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:92   
      335     5291        /* Local storage */
      336     5292
      337     5293        /* ERD$ points to KV$ERD */
      338     5294
      339     5295    1   DCL ERD$ PTR;
      340     5296
      341     5297        /* NOD$ points to current node */
      342     5298
      343     5299    1   DCL NOD$ PTR;
      344     5300
      345     5301        /* MRD$ points to KV$MRD. */
      346     5302
      347     5303    1   DCL MRD$ PTR;
      348     5304
      349     5305        /* SRD$ points to KV$SRD. */
      350     5306
      351     5307    1   DCL SRD$ PTR;
      352     5308
      353     5309        /* Temp pointer */
      354     5310
      355     5311    1   DCL B4 PTR;
      356     5312        /* Current path top pointer - one below the saved path.                       */
      357     5313
      358     5314    1   DCL CRNPTHBGN$ PTR;
      359     5315
      360     5316        /* Previous node pointer - saved since a path may not be contiguous.          */
      361     5317
      362     5318    1   DCL PRVNOD$ PTR;
      363     5319
      364     5320        /* Saved path alternate - saved path node for which CRNPTH is an alternate. */
      365     5321
      366     5322    1   DCL SVDPTHALT$ PTR;
      367     5323
      368     5324        /* Saved path bottom pointer -end of the saved path.                         */
      369     5325
      370     5326    1   DCL SVDPTHEND$ PTR;
      371     5327
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:93   
      372     5328        /* Time (100 microsecond units) per character.                                */
      373     5329
      374     5330    1   DCL TIMPERCHR SBIN;
      375     5331
      376     5332        /* Immediate stop time - give up when a path's time beats this.               */
      377     5333
      378     5334    1   DCL IMDSTPTIM SBIN;
      379     5335
      380     5336        /* Current index into Y_TRE.                                                  */
      381     5337
      382     5338    1   DCL TREX UBIN;
      383     5339
      384     5340        /* Last tab physical column.  Refers to the last horizontal tabbing
      385     5341           situation analyzed.  The columns involved and number
      386     5342           of tabs are saved in case we analyze the same situation later.             */
      387     5343
      388     5344    1   DCL LSTTABPHSCLM SBIN;
      389     5345
      390     5346        /* Last tab device column.                                                    */
      391     5347
      392     5348    1   DCL LSTTABDVCCLM SBIN;
      393     5349
      394     5350        /* Tab column for the last tab situation analyzed.                           */
      395     5351
      396     5352    1   DCL TABCLM SBIN;
      397     5353
      398     5354        /* Next tab column.  Where the first tab after the last normally-usable
      399     5355           (for this situation) tab is.  This is used in case we decide
      400     5356           to tab beyond the desired position, and backspace or CUB back.             */
      401     5357
      402     5358    1   DCL NXTTABCLM SBIN;
      403     5359
      404     5360        /* Tab count.  Number of tabs required to get from the current device
      405     5361           column to the last normally-usable tab.                                    */
      406     5362
      407     5363    1   DCL TABCNT SBIN;
      408     5364
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:94   
      409     5365        /* Max tab size (in character positions). Used to compute timing porperly. */
      410     5366
      411     5367    1   DCL MAXTAB SBIN;
      412     5368
      413     5369        /* Requested position.                                                        */
      414     5370        %KV$PST (NAME=RQS, STCLASS=);
      415     5404    1   DCL RQS_PST REDEF RQS SBIN(32);
      416     5405
      417     5406        /* Device position converted to logical position (dvclinbis subtracted) */
      418     5407        %KV$PST (NAME=DVC, STCLASS=);
      419     5441    1   DCL DVC_PST REDEF DVC SBIN(32);
      420     5442
      421     5443        /* High non-blank logical position                                           */
      422     5444        %KV$PST (NAME=HI_NONBLN, STCLASS=);
      423     5478    1   DCL HI_NONBLN_PST REDEF HI_NONBLN SBIN(32);
      424     5479
      425     5480        /* Original high non-blank logical position                                  */
      426     5481        %KV$PST (NAME=ORGHI_NONBLN, STCLASS=);
      427     5515    1   DCL ORGHI_NONBLN_PST REDEF ORGHI_NONBLN SBIN(32);
      428     5516
      429     5517        /* Physical positioning mode, from KV$USR_PST.PHSPSTMOD.                      */
      430     5518
      431     5519    1   DCL PHSPSTMOD SBIN;
      432     5520
      433     5521        /* Scroll count.  From SCRCNT or computed for scrolling windows. */
      434     5522
      435     5523    1   DCL SCRCNT SBIN;
      436     5524
      437     5525        /* Flags                                                                      */
      438     5526
      439     5527    1   DCL 1 FLG,
      440     5528
      441     5529        /* Lop. After generating intermediate positioning, loop back up to the top. */
      442     5530
      443     5531    1          2 LOP BIT(1),
      444     5532
      445     5533        /* Flag. We've set the high non-blank physical position.                      */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:95   
      446     5534
      447     5535    1          2 SETHI_NONBLN_PST BIT(1),
      448     5536
      449     5537        /* Erred.  Couldn't find a way to do it. */
      450     5538
      451     5539    1          2 ERRED BIT(1),
      452     5540
      453     5541        /* Broke.  Erred with PSTMOD_ANY - give up if UN_KNWPST fails too */
      454     5542
      455     5543    1          2 BROKE BIT(1);
      456     5544
      457     5545        %EQU MAXNMBNOD=10*8;
      458     5546        /* Current and saved paths.                                                   */
      459     5547
      460     5548    1   DCL CRNPTH(0:%(MAXNMBNOD-1)) SBIN;
      461     5549    1   DCL CHRBFR REDEF CRNPTH CHAR(%(MAXNMBNOD*2));
      462     5550    1   DCL CHRBFRA(0:%(MAXNMBNOD*2-1)) REDEF CRNPTH UBIN BYTE CALIGNED;
      463     5551    1   DCL CHRBFRD(0:%(MAXNMBNOD/2-1)) REDEF CRNPTH UBIN(32);
      464     5552
      465     5553        %KV$USR_EVT(NAME=USR_EVT,STCLASS=AUTO);
      466     5588        %KV$USR_EVT (NAME=KV_USR_EVT, STCLASS=SYMREF);
      467     5623
      468     5624        %KV$USR_OTPRPTCHR (NAME=USR_OTPRPTCHR, STCLASS=AUTO);
      469     5659
      470     5660    1   DCL R2 SBIN;
      471     5661    1   DCL R2U REDEF R2 UBIN;
      472     5662    1   DCL 1 R2H REDEF R2,
      473     5663    1          2 U UBIN(8) UNAL,2 * BIT(8);
      474     5664        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:96   
      475     5665    1      MRD$ = KV$PTR.MRD$;

   5665   1 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000008  DCC6 0008                            LDB,B5   8,B6
          1 00000A  DFC7 000A                            STB,B5   MRD$,AUTO

      476     5666    1      SRD$ = KV$PTR.SRD$;

   5666   1 00000C  CCC6 000A                            LDB,B4   10,B6
          1 00000E  CFC7 000C                            STB,B4   SRD$,AUTO

      477     5667    1      ERD$ = %KV_MRD.ERD$;

   5667   1 000010  BCC5 0008                            LDB,B3   8,B5
          1 000012  BFC7 0006                            STB,B3   ERD$,AUTO

      478     5668
      479     5669        /* Generate positioning characters to make the device position
      480     5670           match up with the requested position.                                      */
      481     5671
      482     5672    1      USR_EVT = KV_USR_EVT;

   5672   1 000014  8C80 0000 0000  xsym                 LDI      KV_USR_EVT
          1 000017  8D47 007C                            SDI      USR_EVT,AUTO

      483     5673    1      PHSPSTMOD = USR_PST.PHSPSTMOD;

   5673   1 000019  ACC7 0004                            LDB,B2   @PARM,AUTO
          1 00001B  D2C2 0003                            LLH,R5   3,B2
          1 00001D  DF47 0029                            STR,R5   PHSPSTMOD,AUTO

      484     5674    1      SCRCNT =USR_PST.SCRCNT;

   5674   1 00001F  C842 0003                            LDR,R4   3,B2
          1 000021  4008                                 SOL,R4   8
          1 000022  4068                                 SAR,R4   8
          1 000023  CF47 002A                            STR,R4   SCRCNT,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:97   

      485     5675    1      ORGHI_NONBLN_PST = %KV_SRD.HI_NONBLN_PST;

   5675   1 000025  8CC4 0017                            LDI      23,B4
          1 000027  8D47 0027                            SDI      ORGHI_NONBLN,AUTO

      486     5676    1      HI_NONBLN_PST = ORGHI_NONBLN_PST;

   5676   1 000029  8D47 0025                            SDI      HI_NONBLN,AUTO

      487     5677    1      LSTTABPHSCLM = 0;

   5677   1 00002B  8747 001B                            CL       LSTTABPHSCLM,AUTO

      488     5678    1      TIMPERCHR = KV_100MCRSCNPRDPERCHR(%KV_VDI.LINSPD);

   5678   1 00002D  9C86                                 LDB,B1   ,B6
          1 00002E  B2C1 001E                            LLH,R3   30,B1
          1 000030  A830 0000 0009  00                   LDR,R2   KV_100MCRSCNPRDPERCHR,R3
          1 000033  AF47 0018                            STR,R2   TIMPERCHR,AUTO

      489     5679    2      IF NOT %KV_SRD.NOOPTMIZ THEN DO;

   5679   1 000035  89C4 001D                            CMZ      29,B4
          1 000037  0801 0007                            BAL      s:5682,PREL

      490     5680    2         IMDSTPTIM = %KV_MRD.MINSP_FORPST;

   5680   1 000039  92C5 000C                            LLH,R1   12,B5
          1 00003B  9F47 0019                            STR,R1   IMDSTPTIM,AUTO

      491     5681    2      END; ELSE DO;

   5681   1 00003D  0F81 0005                            B        s:5684,PREL

      492     5682    2         IMDSTPTIM = BITBIN('7FFF'X);

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:98   
   5682   1 00003F  9870 7FFF                            LDR,R1   32767,IMO
          1 000041  9F47 0019                            STR,R1   IMDSTPTIM,AUTO

      493     5683    2      END /* If */;

      494     5684    1      FLG = '0'B;

   5684   1 000043  8747 002B                            CL       FLG,AUTO

      495     5685    2      IF %KV_MRD.AUTONL AND %KV_MRD.DVCCLM>%KV_MRD.WDT THEN DO;

   5685   1 000045  82C5 0017                            LB,'1000'X        23,B5
   5685   1 000047       1000
          1 000048  0581 0043                            BBF      s:5705,PREL
          1 00004A  E845 001E                            LDR,R6   30,B5
          1 00004C  E945 000B                            CMR,R6   11,B5
          1 00004E  0381 003D                            BLE      s:5705,PREL

      496     5686
      497     5687        /* The terminal has done a CR-LF for us. Account for its position
      498     5688           and send out the timing.                                                   */
      499     5689
      500     5690    2         CALL AUTONLTMN;

   5690   1 000050  E3C0 0BCB                            LNJ,B6   s:0,PREL
          1 000052       0001                            DC       s:5691,PREL

      501     5691    3         IF USR_OTPRPTCHR.CNT>0 THEN DO;

   5691   1 000053  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 000055  6901 000B                            BEZ,R6   s:5695,PREL

      502     5692    3            USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;

   5692   1 000057  ECC7 0006                            LDB,B6   ERD$,AUTO
          1 000059  D846 0007                            LDR,R5   7,B6
          1 00005B  DAC7 007E                            SRM,R5,'00FF'X    USR_OTPRPTCHR,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:99   
          1 00005D       00FF

      503     5693    3            CALL OTPRPTCHR;

   5693   1 00005E  E3C0 0D08                            LNJ,B6   s:0,PREL
          1 000060       0001                            DC       s:5695,PREL

      504     5694    3         END /* If */;

      505     5695    2         %KV_MRD.DVCCLM = 1;

   5695   1 000061  ECC7 000A                            LDB,B6   MRD$,AUTO
          1 000063  6C01                                 LDV,R6   1
          1 000064  EF46 001E                            STR,R6   30,B6

      506     5696    3         IF %KV_SRD.SCROLL AND %KV_MRD.DVCLIN>=%KV_MRD.LNG THEN DO;

   5696   1 000066  DCC7 000C                            LDB,B5   SRD$,AUTO
          1 000068  82C5 000E                            LB,'0008'X        14,B5
          1 00006A       0008
          1 00006B  0581 000B                            BBF      s:5699,PREL
          1 00006D  D2C6 0015                            LLH,R5   21,B6
          1 00006F  D946 001D                            CMR,R5   29,B6
          1 000071  0A01 0005                            BAG      s:5699,PREL

      507     5697    3            %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS-1;

   5697   1 000073  88C5 0019                            DEC      25,B5

      508     5698    3         END; ELSE DO;

   5698   1 000075  0F81 0016                            B        s:5705,PREL

      509     5699    3            IF %KV_SRD.SCROLL AND %KV_MRD.DVCLIN=%KV_SRD.BTMRHT.LIN

   5699   1 000077  0581 0012                            BBF      s:5702,PREL
          1 000079  D846 001D                            LDR,R5   29,B6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:100  
          1 00007B  D945 000B                            CMR,R5   11,B5
          1 00007D  0981 000C                            BNE      s:5702,PREL
          1 00007F  D245 0019                            SUB,R5   25,B5
          1 000081  CCC7 0004                            LDB,B4   @PARM,AUTO
          1 000083  5E01                                 ADV,R5   1
          1 000084  D944 0001                            CMR,R5   1,B4
          1 000086  0981 0003                            BNE      s:5702,PREL

      510     5700    3              AND USR_PST.PHSPST.LIN=%KV_MRD.DVCLIN-%KV_SRD.DVCLINBIS+1
      511     5701    3            THEN %KV_MRD.DVCCLM = 0;       /* Make position fail to match        */

   5701   1 000088  8746 001E                            CL       30,B6

      512     5702    3            %KV_MRD.DVCLIN = %KV_MRD.DVCLIN+1;

   5702   1 00008A  8AC6 001D                            INC      29,B6

      513     5703    3         END /* If */;

      514     5704    2      END /* If */;

      515     5705    2      IF USR_PST.TOPPAGCNT~=0 THEN DO;

   5705   1 00008C  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 00008E  8286                                 LB,'00FF'X        ,B6
          1 00008F       00FF
          1 000090  0581 0061                            BBF      s:5745,PREL

      516     5706
      517     5707        /* We're to top the page.                                                     */
      518     5708
      519     5709    3         IF KV$ERD.FRMFED_CHR~=0 THEN DO TREX=0 TO USR_PST.TOPPAGCNT-1;

   5709   1 000092  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 000094  82C5 0026                            LB,'00FF'X        38,B5
          1 000096       00FF
          1 000097  0581 004C                            BBF      s:5743,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:101  

   5709   1 000099  8747 001A                            CL       TREX,AUTO
          1 00009B  0F81 003D                            B        s:5737+2,PREL

      520     5710
      521     5711        /* This device has a form-feed character.  Use it to go to the
      522     5712           top of the page.                                                           */
      523     5713
      524     5714        /* Position is no longer unknown. */
      525     5715    3            %KV_VDI.UN_KNWPST = '0'B;

   5715   1 00009D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 0000A0  DC86                                 LDB,B5   ,B6
          1 0000A1  8845 001D                            LBF,'1000'X       29,B5
          1 0000A3       1000

      526     5716
      527     5717        /* This loop is traversed for each form feed sent.                            */
      528     5718
      529     5719    3            CALL DVCCTR (%KV$ERD_FRMFED_CHR#/8);

   5719   1 0000A4  DBF0 004D                            LAB,B5   77,IMO
          1 0000A6  DFC7 0084                            STB,B5   R2+4,AUTO
          1 0000A8  E3C0 0DE9                            LNJ,B6   s:0,PREL
          1 0000AA       0001                            DC       s:5721,PREL

      530     5720
      531     5721    4            IF %KV_MRD.DVCFLWCTRALG=0 THEN DO;

   5721   1 0000AB  ECC7 000A                            LDB,B6   MRD$,AUTO
          1 0000AD  82C6 0015                            LB,'00FF'X        21,B6
          1 0000AF       00FF
          1 0000B0  0501 001A                            BBT      s:5735,PREL

      532     5722
      533     5723        /* There is no flow control algorithm, so generate the timing characters. */
      534     5724
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:102  
      535     5725        /* Time = (KV$ERD.TMNALG_PRM6 x movement-in-lines) + KV$ERD.TMNALG_PRM7       */
      536     5726
      537     5727    4               USR_OTPRPTCHR.CNT =

   5727   1 0000B2  E2C6 0015                            LLH,R6   21,B6
          1 0000B4  E246 001D                            SUB,R6   29,B6
          1 0000B6  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 0000B8  6E01                                 ADV,R6   1
          1 0000B9  EB45 0010                            MUL,R6   16,B5
          1 0000BB  EA45 0011                            ADD,R6   17,B5
          1 0000BD  E347 0018                            DIV,R6   TIMPERCHR,AUTO
          1 0000BF  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO

      538     5728    4                 ((%KV_MRD.LNG-%KV_MRD.DVCLIN+1)*KV$ERD.TMNALG_PRM6+
      539     5729    4                 KV$ERD.TMNALG_PRM7)/TIMPERCHR;
      540     5730    5               IF USR_OTPRPTCHR.CNT>0 THEN DO;

   5730   1 0000C1  6901 0009                            BEZ,R6   s:5735,PREL

      541     5731    5                  USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;

   5731   1 0000C3  D845 0007                            LDR,R5   7,B5
          1 0000C5  DAC7 007E                            SRM,R5,'00FF'X    USR_OTPRPTCHR,AUTO
          1 0000C7       00FF

      542     5732    5                  CALL OTPRPTCHR;

   5732   1 0000C8  E3C0 0C9E                            LNJ,B6   s:0,PREL
          1 0000CA       0001                            DC       s:5735,PREL

      543     5733    5               END /* If */;

      544     5734    4            END /* If */;

      545     5735    3            %KV_MRD.DVCLIN = 1;

   5735   1 0000CB  ECC7 000A                            LDB,B6   MRD$,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:103  
          1 0000CD  6C01                                 LDV,R6   1
          1 0000CE  EF46 001D                            STR,R6   29,B6

      546     5736    3            IF %KV_MRD.FF_INCCR THEN %KV_MRD.DVCCLM = 1;

   5736   1 0000D0  82C6 0018                            LB,'0002'X        24,B6
   5736   1 0000D2       0002
          1 0000D3  0581 0003                            BBF      s:5737,PREL

   5736   1 0000D5  EF46 001E                            STR,R6   30,B6

      547     5737    3         END /* Do index */;

   5737   1 0000D7  8AC7 001A                            INC      TREX,AUTO
          1 0000D9  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 0000DB  E806                                 LDR,R6   ,B6
          1 0000DC  E570 00FF                            AND,R6   255,IMO
          1 0000DE  E947 001A                            CMR,R6   TREX,AUTO
          1 0000E0  0301 FFBC                            BG       s:5715,PREL
          1 0000E2  0F81 000F                            B        s:5745,PREL

      548     5738    3         ELSE DO;

      549     5739
      550     5740        /* This device doesn't have a form feed character sequence.
      551     5741           Adjust the current device line back.                                       */
      552     5742
      553     5743    3            %KV_MRD.DVCLIN = %KV_MRD.DVCLIN-%KV_MRD.LNG*USR_PST.TOPPAGCNT;

   5743   1 0000E4  CCC7 000A                            LDB,B4   MRD$,AUTO
          1 0000E6  F2C4 0015                            LLH,R7   21,B4
          1 0000E8  E806                                 LDR,R6   ,B6
          1 0000E9  E570 00FF                            AND,R6   255,IMO
          1 0000EB  FB56                                 MUL,R7   R6
          1 0000EC  E857                                 LDR,R6   R7
          1 0000ED  E244 001D                            SUB,R6   29,B4
          1 0000EF  8256                                 NEG      R6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:104  
          1 0000F0  EF44 001D                            STR,R6   29,B4

      554     5744    3         END /* If */;

      555     5745    2      END /* If */;

      556     5746        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:105  
      557     5747        /* This loop is traversed for each segment of positioning.
      558     5748           It is only traversed when processing blanking positioning on
      559     5749           a device which destructively spaces.
      560     5750           A segment of positioning is either a new-line (CR/LF) or a
      561     5751           series of spaces.                                                          */
      562     5752
      563     5753    2   MAIN_LOOP: DO WHILE ('1'B);             /* Loop start                         */

   5753   1                              MAIN_LOOP       null
      564     5754    3         IF %KV_VDI.UN_KNWPST THEN DO;

   5754   1 0000F2  EC80 0000 0000  xsym MAIN_LOOP       LDB,B6   KV$PTR$
          1 0000F5  DC86                                 LDB,B5   ,B6
          1 0000F6  82C5 001D                            LB,'1000'X        29,B5
          1 0000F8       1000
          1 0000F9  0581 0019                            BBF      s:5768,PREL

      565     5755
      566     5756        /* We're starting from ?,?. Assume it's the worst possible place from
      567     5757           a timing standpoint, i.e., the last column of the previous line. */
      568     5758
      569     5759    3            %KV_MRD.DVCCLM = %KV_MRD.WDT;

   5759   1 0000FB  CCC7 000A                            LDB,B4   MRD$,AUTO
          1 0000FD  E844 000B                            LDR,R6   11,B4
          1 0000FF  EF44 001E                            STR,R6   30,B4

      570     5760    3            %KV_MRD.DVCLIN = %KV_SRD.DVCLINBIS+USR_PST.PHSPST.LIN-1;

   5760   1 000101  DCC7 000C                            LDB,B5   SRD$,AUTO
          1 000103  BCC7 0004                            LDB,B3   @PARM,AUTO
          1 000105  D845 0019                            LDR,R5   25,B5
          1 000107  DA43 0001                            ADD,R5   1,B3
          1 000109  5EFF                                 ADV,R5   -1
          1 00010A  DF44 001D                            STR,R5   29,B4

      571     5761    3            PHSPSTMOD = %KV_PHSPSTMOD_ANY;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:106  

   5761   1 00010C  4C03                                 LDV,R4   3
          1 00010D  CF47 0029                            STR,R4   PHSPSTMOD,AUTO

      572     5762
      573     5763        /* And take the first path that works                                         */
      574     5764
      575     5765    3            IMDSTPTIM = BITBIN('7FFE'X);

   5765   1 00010F  B870 7FFE                            LDR,R3   32766,IMO
          1 000111  BF47 0019                            STR,R3   IMDSTPTIM,AUTO

      576     5766    3         END /* If */;

      577     5767
      578     5768    2         FLG.LOP = '0'B;

   5768   1 000113  8847 002B                            LBF,'8000'X       FLG,AUTO
   5768   1 000115       8000

      579     5769    3         IF PHSPSTMOD>%KV_PHSPSTMOD_ANY THEN DO;

   5769   1 000116  E847 0029                            LDR,R6   PHSPSTMOD,AUTO
          1 000118  6D03                                 CMV,R6   3
          1 000119  0A81 00FB                            BALE     s:5825,PREL

      580     5770    3            IF %KV_SRD.BTMRHT.LIN = %KV_MRD.LNG AND (SCRCNT>0

   5770   1 00011B  DCC7 000C                            LDB,B5   SRD$,AUTO
          1 00011D  CCC7 000A                            LDB,B4   MRD$,AUTO
          1 00011F  D2C4 0015                            LLH,R5   21,B4
          1 000121  D945 000B                            CMR,R5   11,B5
          1 000123  0981 0014                            BNE      s:5770+29,PREL
          1 000125  C847 002A                            LDR,R4   SCRCNT,AUTO
          1 000127  4A81 000B                            BLEZ,R4  s:5770+24,PREL
          1 000129  6D04                                 CMV,R6   4
          1 00012A  0981 0008                            BNE      s:5770+24,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:107  
          1 00012C  BCC7 0006                            LDB,B3   ERD$,AUTO
          1 00012E  82C3 0016                            LB,'1000'X        22,B3
          1 000130       1000
          1 000131  0581 0021                            BBF      s:5776,PREL
          1 000133  6D06                                 CMV,R6   6
          1 000134  0981 0003                            BNE      s:5770+29,PREL
          1 000136  4801 001C                            BLZ,R4   s:5776,PREL
          1 000138  C845 000C                            LDR,R4   12,B5
          1 00013A  4801 0025                            BLZ,R4   s:5780,PREL
          1 00013C  C944 000B                            CMR,R4   11,B4
          1 00013E  0981 0021                            BNE      s:5780,PREL
          1 000140  B847 002A                            LDR,R3   SCRCNT,AUTO
          1 000142  3A81 000B                            BLEZ,R3  s:5770+51,PREL
          1 000144  6D05                                 CMV,R6   5
          1 000145  0981 0008                            BNE      s:5770+51,PREL
          1 000147  BCC7 0006                            LDB,B3   ERD$,AUTO
          1 000149  82C3 0016                            LB,'2000'X        22,B3
          1 00014B       2000
          1 00014C  0581 0006                            BBF      s:5776,PREL
          1 00014E  6D07                                 CMV,R6   7
          1 00014F  0981 0010                            BNE      s:5780,PREL
          1 000151  3881 000E                            BGEZ,R3  s:5780,PREL

      581     5771    3              AND PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR AND NOT KV$ERD.ILNRQRDLN
      582     5772    3              OR PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR+2 AND SCRCNT<0)
      583     5773    3              OR %KV_SRD.BTMRHT.CLM=%KV_MRD.WDT AND (SCRCNT>0
      584     5774    3              AND PHSPSTMOD=%KV_PHSPSTMOD_HRZSCR AND NOT KV$ERD.ICHRQRDCH
      585     5775    4              OR PHSPSTMOD=%KV_PHSPSTMOD_HRZSCR+2 AND SCRCNT<0) THEN DO;

      586     5776    4               IF PHSPSTMOD=%KV_PHSPSTMOD_HRZSCR+2

   5776   1 000153  6D07                                 CMV,R6   7
          1 000154  0981 0008                            BNE      s:5778,PREL

      587     5777    4               THEN %KV_SRD.CRT.CLM = %KV_SRD.BTMRHT.CLM+1+SCRCNT;

   5777   1 000156  C845 000C                            LDR,R4   12,B5
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:108  
          1 000158  CA47 002A                            ADD,R4   SCRCNT,AUTO
          1 00015A  4E01                                 ADV,R4   1
          1 00015B  CF45 0016                            STR,R4   22,B5

      588     5778    4               PHSPSTMOD = PHSPSTMOD+2;

   5778   1 00015D  6E02                                 ADV,R6   2
          1 00015E  EF47 0029                            STR,R6   PHSPSTMOD,AUTO

      589     5779    4            END;

      590     5780    4            IF PHSPSTMOD>%KV_PHSPSTMOD_ANY+4 THEN DO;

   5780   1 000160  6D07                                 CMV,R6   7
          1 000161  0A81 0024                            BALE     s:5789,PREL

      591     5781    4               IF PHSPSTMOD=%KV_PHSPSTMOD_HRZSCR+4

   5781   1 000163  6D09                                 CMV,R6   9
          1 000164  0981 0013                            BNE      s:5785,PREL
          1 000166  D845 0015                            LDR,R5   21,B5
          1 000168  D945 0017                            CMR,R5   23,B5
          1 00016A  0981 000D                            BNE      s:5785,PREL

      592     5782    4                 AND %KV_SRD.CRT.LIN=%KV_SRD.HI_NONBLN.LIN
      593     5783    4               THEN %KV_SRD.HI_NONBLN.CLM =

   5783   1 00016C  C845 0018                            LDR,R4   24,B5
          1 00016E  CA47 002A                            ADD,R4   SCRCNT,AUTO
          1 000170  C945 000C                            CMR,R4   12,B5
          1 000172  0A81 0003                            BALE     s:5783+10,PREL
          1 000174  C845 000C                            LDR,R4   12,B5
          1 000176  CF45 0018                            STR,R4   24,B5

      594     5784    4                 MINIMUM(%KV_SRD.HI_NONBLN.CLM+SCRCNT,%KV_SRD.BTMRHT.CLM);
      595     5785    4               IF USR_PST.PHSPSTMOD<=%KV_PHSPSTMOD_ANY THEN EXIT;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:109  
   5785   1 000178  BCC7 0004                            LDB,B3   @PARM,AUTO
          1 00017A  D2C3 0003                            LLH,R5   3,B3
          1 00017C  5D03                                 CMV,R5   3
          1 00017D  0381 0008                            BLE      s:5789,PREL

      596     5786    4               %KV_VDI.OTPCNDPND.PST = %KV_PHSPSTMOD_SKP;

   5786   1 00017F  AC86                                 LDB,B2   ,B6
          1 000180  4C01                                 LDV,R4   1
          1 000181  CF42 001A                            STR,R4   26,B2

      597     5787    4               RETURN;

   5787   1 000183  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      598     5788    4            END;
      599     5789    3            RQS_PST = USR_PST.PHSPST_PST;

   5789   1 000186  BCC7 0004                            LDB,B3   @PARM,AUTO
          1 000188  8CC3 0001                            LDI      1,B3
          1 00018A  8D47 0021                            SDI      RQS,AUTO

      600     5790    3            IF PHSPSTMOD<=%KV_PHSPSTMOD_ANY+2 AND SCRCNT>0

   5790   1 00018C  D847 0029                            LDR,R5   PHSPSTMOD,AUTO
          1 00018E  5D05                                 CMV,R5   5
          1 00018F  0A01 001A                            BAG      s:5794,PREL
          1 000191  C847 002A                            LDR,R4   SCRCNT,AUTO
          1 000193  4A81 0016                            BLEZ,R4  s:5794,PREL

      601     5791    3            THEN IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR

   5791   1 000195  5D04                                 CMV,R5   4
          1 000196  0981 000B                            BNE      s:5793,PREL

      602     5792    3            THEN RQS.LIN = %KV_SRD.BTMRHT.LIN-%KV_SRD.DVCLINBIS+1-SCRCNT;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:110  
   5792   1 000198  B845 000B                            LDR,R3   11,B5
          1 00019A  B245 0019                            SUB,R3   25,B5
          1 00019C  B254                                 SUB,R3   R4
          1 00019D  3E01                                 ADV,R3   1
          1 00019E  BF47 0021                            STR,R3   RQS,AUTO
          1 0001A0  0F81 0021                            B        s:5798,PREL

      603     5793    3            ELSE RQS.CLM = %KV_SRD.BTMRHT.CLM+1-SCRCNT;

   5793   1 0001A2  C245 000C                            SUB,R4   12,B5
          1 0001A4  8254                                 NEG      R4
          1 0001A5  4E01                                 ADV,R4   1
          1 0001A6  CF47 0022                            STR,R4   RQS+1,AUTO
          1 0001A8  0F81 0019                            B        s:5798,PREL

      604     5794    3            ELSE IF PHSPSTMOD>%KV_PHSPSTMOD_ANY+2 AND SCRCNT<0

   5794   1 0001AA  0A81 0017                            BALE     s:5798,PREL
          1 0001AC  C847 002A                            LDR,R4   SCRCNT,AUTO
          1 0001AE  4881 0013                            BGEZ,R4  s:5798,PREL

      605     5795    3            THEN IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR+2

   5795   1 0001B0  5D06                                 CMV,R5   6
          1 0001B1  0981 000B                            BNE      s:5797,PREL

      606     5796    3            THEN RQS.LIN = %KV_SRD.BTMRHT.LIN-%KV_SRD.DVCLINBIS+1+SCRCNT;

   5796   1 0001B3  B845 000B                            LDR,R3   11,B5
          1 0001B5  B245 0019                            SUB,R3   25,B5
          1 0001B7  BA54                                 ADD,R3   R4
          1 0001B8  3E01                                 ADV,R3   1
          1 0001B9  BF47 0021                            STR,R3   RQS,AUTO
          1 0001BB  0F81 0006                            B        s:5798,PREL

      607     5797    3            ELSE RQS.CLM = %KV_SRD.BTMRHT.CLM+1+SCRCNT;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:111  
   5797   1 0001BD  CA45 000C                            ADD,R4   12,B5
          1 0001BF  4E01                                 ADV,R4   1
          1 0001C0  CF47 0022                            STR,R4   RQS+1,AUTO

      608     5798    3            FLG.LOP = '1'B;

   5798   1 0001C2  8947 002B                            LBT,'8000'X       FLG,AUTO
   5798   1 0001C4       8000

      609     5799    4            IF USR_PST.PHSPSTMOD<=%KV_PHSPSTMOD_ANY THEN DO;

   5799   1 0001C5  C2C3 0003                            LLH,R4   3,B3
          1 0001C7  4D03                                 CMV,R4   3
          1 0001C8  0301 001B                            BG       s:5811,PREL

      610     5800
      611     5801        /* For pseudo-scroll, tweak things up a bit. */
      612     5802
      613     5803    4               IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR AND SCRCNT<0

   5803   1 0001CA  5D04                                 CMV,R5   4
          1 0001CB  0981 000D                            BNE      s:5805,PREL
          1 0001CD  B847 002A                            LDR,R3   SCRCNT,AUTO
          1 0001CF  3881 0009                            BGEZ,R3  s:5805,PREL

      614     5804    4               THEN RQS.LIN = %KV_SRD.TOPLFT.LIN-%KV_SRD.DVCLINBIS;

   5804   1 0001D1  A845 0009                            LDR,R2   9,B5
          1 0001D3  A245 0019                            SUB,R2   25,B5
          1 0001D5  AF47 0021                            STR,R2   RQS,AUTO
          1 0001D7  0F81 000C                            B        s:5811,PREL

      615     5805    5               ELSE IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR+4 THEN DO;

   5805   1 0001D9  5D08                                 CMV,R5   8
          1 0001DA  0981 0009                            BNE      s:5811,PREL

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:112  
      616     5806    5                  PHSPSTMOD = %KV_PHSPSTMOD_SKP;

   5806   1 0001DC  5C01                                 LDV,R5   1
          1 0001DD  DF47 0029                            STR,R5   PHSPSTMOD,AUTO

      617     5807    5                  RQS_PST = USR_PST.PHSPST_PST;

   5807   1 0001DF  8D47 0021                            SDI      RQS,AUTO

      618     5808    5                  FLG.LOP = '0'B;

   5808   1 0001E1  8847 002B                            LBF,'8000'X       FLG,AUTO
   5808   1 0001E3       8000

      619     5809    5               END;

      620     5810    4            END;

      621     5811    4            IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR AND KV$ERD.RGNSCR THEN DO;

   5811   1 0001E4  5D04                                 CMV,R5   4
          1 0001E5  0981 0029                            BNE      s:5823,PREL
          1 0001E7  ACC7 0006                            LDB,B2   ERD$,AUTO
          1 0001E9  82C2 0016                            LB,'0008'X        22,B2
          1 0001EB       0008
          1 0001EC  0581 0022                            BBF      s:5823,PREL

      622     5812        /*
      623     5813           For scrolling regions, we need to position to the edge of the region
      624     5814           to do the scrolling.  We may also have to set the region limits.
      625     5815        */
      626     5816    4               IF SCRCNT<0 THEN RQS.LIN = %KV_SRD.BTMRHT.LIN-%KV_SRD.DVCLINBIS;

   5816   1 0001EE  B847 002A                            LDR,R3   SCRCNT,AUTO
          1 0001F0  3881 0009                            BGEZ,R3  s:5817,PREL

   5816   1 0001F2  A845 000B                            LDR,R2   11,B5
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:113  
          1 0001F4  A245 0019                            SUB,R2   25,B5
          1 0001F6  AF47 0021                            STR,R2   RQS,AUTO
          1 0001F8  0F81 0005                            B        s:5818,PREL

      627     5817    4               ELSE RQS.LIN = USR_PST.PHSPST.LIN;

   5817   1 0001FA  A843 0001                            LDR,R2   1,B3
          1 0001FC  AF47 0021                            STR,R2   RQS,AUTO

      628     5818    4               PHSPSTMOD = %KV_PHSPSTMOD_VRTSCR+2;

   5818   1 0001FE  5C06                                 LDV,R5   6
          1 0001FF  DF47 0029                            STR,R5   PHSPSTMOD,AUTO

      629     5819    4               IF NOT %KV_SRD.SCROLL

   5819   1 000201  82C5 000E                            LB,'0008'X        14,B5
   5819   1 000203       0008
          1 000204  0501 000A                            BBT      s:5823,PREL
          1 000206  9843 0001                            LDR,R1   1,B3
          1 000208  9945 0009                            CMR,R1   9,B5
          1 00020A  0901 0004                            BE       s:5823,PREL

      630     5820    4                 AND USR_PST.PHSPST.LIN~=%KV_SRD.TOPLFT.LIN
      631     5821    4               THEN %KV_SRD.UNKRGN = '1'B;

   5821   1 00020C  8945 000F                            LBT,'0002'X       15,B5
   5821   1 00020E       0002

      632     5822    4            END;

      633     5823    3            %KV_SRD.CRT_PST = RQS_PST;

   5823   1 00020F  8CC7 0021                            LDI      RQS,AUTO
          1 000211  8D45 0015                            SDI      21,B5

      634     5824    3         END;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:114  

   5824   1 000213  0F81 0007                            B        s:5826,PREL

      635     5825    2         ELSE RQS_PST = USR_PST.PHSPST_PST;

   5825   1 000215  DCC7 0004                            LDB,B5   @PARM,AUTO
          1 000217  8CC5 0001                            LDI      1,B5
          1 000219  8D47 0021                            SDI      RQS,AUTO

      636     5826    2         IF %KV_SRD.UNKRGN

   5826   1 00021B  DCC7 000C                            LDB,B5   SRD$,AUTO
          1 00021D  82C5 000F                            LB,'0002'X        15,B5
          1 00021F       0002
          1 000220  0581 0077                            BBF      s:5854,PREL

      637     5827    2         THEN IF NOT KV$ERD.RGNSCR OR %KV_SRD.LNG=0 THEN %KV_SRD.UNKRGN = '0'B;

   5827   1 000222  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 000224  82C4 0016                            LB,'0008'X        22,B4
          1 000226       0008
          1 000227  0581 0005                            BBF      s:5827+11,PREL
          1 000229  D2C5 000E                            LLH,R5   14,B5
          1 00022B  5981 0006                            BNEZ,R5  s:5832,PREL

   5827   1 00022D  8845 000F                            LBF,'0002'X       15,B5
   5827   1 00022F       0002
          1 000230  0F81 0067                            B        s:5854,PREL

      638     5828    3         ELSE DO;

      639     5829        /*
      640     5830           If the scrolling region needs to be set, the cursor goes home.
      641     5831        */
      642     5832    3            %KV_MRD.DVCLIN = 1;

   5832   1 000232  BCC7 000A                            LDB,B3   MRD$,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:115  
          1 000234  4C01                                 LDV,R4   1
          1 000235  CF43 001D                            STR,R4   29,B3

      643     5833    3            %KV_MRD.DVCCLM = 1;

   5833   1 000237  CF43 001E                            STR,R4   30,B3

      644     5834    3            IF USR_PST.PHSPSTMOD~=%KV_PHSPSTMOD_VRTSCR

   5834   1 000239  ACC7 0004                            LDB,B2   @PARM,AUTO
          1 00023B  D2C2 0003                            LLH,R5   3,B2
          1 00023D  5D04                                 CMV,R5   4
          1 00023E  0901 0007                            BE       s:5836,PREL

      645     5835    3            THEN CRNPTH(5) = %KV_SRD.TOPLFT.LIN;

   5835   1 000240  B845 0009                            LDR,R3   9,B5
          1 000242  BF47 0031                            STR,R3   CRNPTH+5,AUTO
          1 000244  0F81 0005                            B        s:5837,PREL

      646     5836    3            ELSE CRNPTH(5) = USR_PST.PHSPST.LIN;

   5836   1 000246  B842 0001                            LDR,R3   1,B2
          1 000248  BF47 0031                            STR,R3   CRNPTH+5,AUTO

      647     5837    3            CHRBFRD(0) = %BITBIN (CONCAT ('03'X, ASCIIESC, ASCIICSI7, ASCIILCR));

   5837   1 00024A  8CF0 031B 5B72                       LDI      52124530,IMO
          1 00024D  8D47 002C                            SDI      CRNPTH,AUTO

      648     5838    3            IF CRNPTH(5)=%KV_SRD.TOPLFT.LIN THEN %KV_SRD.UNKRGN='0'B;

   5838   1 00024F  B945 0009                            CMR,R3   9,B5
          1 000251  0981 0004                            BNE      s:5839,PREL

   5838   1 000253  8845 000F                            LBF,'0002'X       15,B5
   5838   1 000255       0002
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:116  

      649     5839    3            IF (CRNPTH(5)~=%KV_SRD.TOPLFT.LIN OR %KV_SRD.LNG~=%KV_MRD.DSPHEIGHT)

   5839   1 000256  D847 0031                            LDR,R5   CRNPTH+5,AUTO
          1 000258  D945 0009                            CMR,R5   9,B5
          1 00025A  0981 0008                            BNE      s:5839+13,PREL
          1 00025C  B2C5 000E                            LLH,R3   14,B5
          1 00025E  A2C3 000A                            LLH,R2   10,B3
          1 000260  B952                                 CMR,R3   R2
          1 000261  0901 002C                            BE       s:5851,PREL
          1 000263  D945 000B                            CMR,R5   11,B5
          1 000265  0881 0028                            BAGE     s:5851,PREL
          1 000267  B845 000D                            LDR,R3   13,B5
          1 000269  B943 000B                            CMR,R3   11,B3
          1 00026B  0981 0022                            BNE      s:5851,PREL

      650     5840    3              AND CRNPTH(5)<%KV_SRD.BTMRHT.LIN AND %KV_SRD.WDT=%KV_MRD.WDT
      651     5841    4            THEN DO;

      652     5842        /*
      653     5843           Only put in the numbers if needed.
      654     5844        */
      655     5845    4               CALL OTPANSPN (CRNPTH(5));

   5845   1 00026D  9BC7 0031                            LAB,B1   CRNPTH+5,AUTO
          1 00026F  9FC7 0084                            STB,B1   R2+4,AUTO
          1 000271  E3C0 0BE6                            LNJ,B6   s:0,PREL
          1 000273       0001                            DC       s:5846,PREL

      656     5846    4               CHRBFRA(CHRBFRA(0)) = %BITBIN(ASCIISEMCLN);

   5846   1 000274  6C3B                                 LDV,R6   59
          1 000275  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 000277  3E58                                 ADV,R3   88
          1 000278  E7B7                                 STH,R6   ,AUTO,R3

      657     5847    4               CHRBFRA(0) = CHRBFRA(0)+1;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:117  

   5847   1 000279  D2C7 002C                            LLH,R5   CRNPTH,AUTO
          1 00027B  5E01                                 ADV,R5   1
          1 00027C  D7C7 002C                            STH,R5   CRNPTH,AUTO

      658     5848    4               CALL OTPANSPN (%KV_SRD.BTMRHT.LIN);

   5848   1 00027E  ECC7 000C                            LDB,B6   SRD$,AUTO
          1 000280  DBC6 000B                            LAB,B5   11,B6
          1 000282  DFC7 0084                            STB,B5   R2+4,AUTO
          1 000284  E3C0 0BD3                            LNJ,B6   s:0,PREL
          1 000286       0001                            DC       s:5849,PREL

      659     5849    4               CHRBFRA(CHRBFRA(0)) = %BITBIN(ASCIILCR);

   5849   1 000287  6C72                                 LDV,R6   114
          1 000288  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 00028A  3E58                                 ADV,R3   88
          1 00028B  E7B7                                 STH,R6   ,AUTO,R3

      660     5850    4            END;

   5850   1 00028C  0F81 0004                            B        s:5852,PREL

      661     5851    3            ELSE %KV_SRD.UNKRGN = '0'B;

   5851   1 00028E  8845 000F                            LBF,'0002'X       15,B5
   5851   1 000290       0002

      662     5852    3            CALL DVCCTR (0);

   5852   1 000291  EBF0 0000                            LAB,B6   0,IMO
          1 000293  EFC7 0084                            STB,B6   R2+4,AUTO
          1 000295  E3C0 0BFC                            LNJ,B6   s:0,PREL
          1 000297       0001                            DC       s:5854,PREL

      663     5853    3         END;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:118  

      664     5854    2         NOD$ = ADDR(CRNPTH(0));

   5854   1 000298  EBC7 002C                            LAB,B6   CRNPTH,AUTO
          1 00029A  EFC7 0008                            STB,B6   NOD$,AUTO

      665     5855    2         Y$NOD = '0'B;

   5855   1 00029C  5C10                                 LDV,R5   16
          1 00029D  0021                                 ALR      ;
          1 00029E       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0002A0       4006 0000                                ALPHANUM(0,B6,,R5,FILL)

      666     5856    2         DVC.CLM = %KV_MRD.DVCCLM;

   5856   1 0002A2  437F                                 CSYNC    s:5855+5,SPREL
          1 0002A3  ECC7 000A                            LDB,B6   MRD$,AUTO
          1 0002A5  E846 001E                            LDR,R6   30,B6
          1 0002A7  EF47 0024                            STR,R6   DVC+1,AUTO

      667     5857    2         DVC.LIN = %KV_MRD.DVCLIN-%KV_SRD.DVCLINBIS;

   5857   1 0002A9  DCC7 000C                            LDB,B5   SRD$,AUTO
          1 0002AB  C846 001D                            LDR,R4   29,B6
          1 0002AD  C245 0019                            SUB,R4   25,B5
          1 0002AF  CF47 0023                            STR,R4   DVC,AUTO

      668     5858    2         IF RQS_PST~=DVC_PST OR %KV_MRD.DVCLIN>%KV_SRD.BTMRHT.LIN

   5858   1 0002B1  8CC7 0021                            LDI      RQS,AUTO
          1 0002B3  84C7 0023                            SID      DVC,AUTO
          1 0002B5  6981 000D                            BNEZ,R6  s:5862,PREL
          1 0002B7  7981 000B                            BNEZ,R7  s:5862,PREL
          1 0002B9  E846 001D                            LDR,R6   29,B6
          1 0002BB  E945 000B                            CMR,R6   11,B5
          1 0002BD  0A01 0005                            BAG      s:5862,PREL
          1 0002BF  E945 0009                            CMR,R6   9,B5
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:119  
          1 0002C1  0881 08D3                            BAGE     s:6714,PREL

      669     5859    3           OR %KV_MRD.DVCLIN<%KV_SRD.TOPLFT.LIN THEN DO;

      670     5860
      671     5861        /* We need to do horizontal and/or vertical positioning.                      */
      672     5862    3            Y$NOD.DVCCLM = DVC.CLM;

   5862   1 0002C3  CCC7 0008                            LDB,B4   NOD$,AUTO
          1 0002C5  E847 0024                            LDR,R6   DVC+1,AUTO
          1 0002C7  EF44 0002                            STR,R6   2,B4

      673     5863    3            Y$NOD.DVCLIN = %KV_MRD.DVCLIN;

   5863   1 0002C9  B846 001D                            LDR,R3   29,B6
          1 0002CB  BF44 0001                            STR,R3   1,B4

      674     5864    3            Y$NOD.DVCLINBIS = %KV_SRD.DVCLINBIS;

   5864   1 0002CD  A845 0019                            LDR,R2   25,B5
          1 0002CF  AF44 0003                            STR,R2   3,B4

      675     5865    4            IF %KV_MRD.BLANKERASES THEN DO;

   5865   1 0002D1  82C6 0016                            LB,'0002'X        22,B6
   5865   1 0002D3       0002
          1 0002D4  0581 00A3                            BBF      s:5946,PREL

      676     5866
      677     5867        /* This terminal destructively spaces.                                        */
      678     5868
      679     5869    4               IF PHSPSTMOD=%KV_PHSPSTMOD_BLN AND DVC_PST<RQS_PST

   5869   1 0002D6  9847 0029                            LDR,R1   PHSPSTMOD,AUTO
          1 0002D8  1D02                                 CMV,R1   2
          1 0002D9  0981 005E                            BNE      s:5921,PREL
          1 0002DB  8CC7 0023                            LDI      DVC,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:120  
          1 0002DD  84C7 0021                            SID      RQS,AUTO
          1 0002DF  6881 0058                            BGEZ,R6  s:5921,PREL

      680     5870        /* We are to blank (erase) any characters encountered from the
      681     5871           starting position (inclusive) to the destination position (exclusive),
      682     5872           and we're going forward. */
      683     5873
      684     5874    5               THEN IF ORGHI_NONBLN_PST<DVC_PST THEN DO;

   5874   1 0002E1  8CC7 0027                            LDI      ORGHI_NONBLN,AUTO
          1 0002E3  84C7 0023                            SID      DVC,AUTO
          1 0002E5  6881 0006                            BGEZ,R6  s:5880,PREL

      685     5875        /* We're moving forward, but there's nothing to erase. */
      686     5876
      687     5877    5                  PHSPSTMOD = %KV_PHSPSTMOD_ANY;

   5877   1 0002E7  1C03                                 LDV,R1   3
          1 0002E8  9F47 0029                            STR,R1   PHSPSTMOD,AUTO

      688     5878    5               END /* If */;

   5878   1 0002EA  0F81 0066                            B        s:5932,PREL

      689     5879    5               ELSE DO;

      690     5880    6                  IF ORGHI_NONBLN_PST<RQS_PST THEN DO;

   5880   1 0002EC  8CC7 0027                            LDI      ORGHI_NONBLN,AUTO
          1 0002EE  84C7 0021                            SID      RQS,AUTO
          1 0002F0  6881 0026                            BGEZ,R6  s:5902,PREL

      691     5881        /* The highest non-blank character is before the physical (destination)
      692     5882           position.  Blank thru the highest non-blank position, then
      693     5883           use any positioning.                                                       */
      694     5884
      695     5885    7                     IF NOT FLG.SETHI_NONBLN_PST THEN DO;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:121  

   5885   1 0002F2  82C7 002B                            LB,'4000'X        FLG,AUTO
   5885   1 0002F4       4000
          1 0002F5  0501 0018                            BBT      s:5898,PREL

      696     5886        /* We haven't yet set the highest non-blank physical position
      697     5887           to a new value.  Set it to the point where we started blanking.            */
      698     5888
      699     5889    7                        HI_NONBLN_PST = DVC_PST;

   5889   1 0002F7  8CC7 0023                            LDI      DVC,AUTO
          1 0002F9  8D47 0025                            SDI      HI_NONBLN,AUTO

      700     5890    7                        FLG.SETHI_NONBLN_PST = '1'B;

   5890   1 0002FB  8947 002B                            LBT,'4000'X       FLG,AUTO
   5890   1 0002FD       4000

      701     5891    8                        IF HI_NONBLN.CLM<=%KV_SRD.TOPLFT.CLM THEN DO;

   5891   1 0002FE  E847 0026                            LDR,R6   HI_NONBLN+1,AUTO
          1 000300  E945 000A                            CMR,R6   10,B5
          1 000302  0A01 0009                            BAG      s:5895,PREL

      702     5892    8                           HI_NONBLN.LIN = HI_NONBLN.LIN-1;

   5892   1 000304  88C7 0025                            DEC      HI_NONBLN,AUTO

      703     5893    8                           HI_NONBLN.CLM = %KV_SRD.BTMRHT.CLM;

   5893   1 000306  E845 000C                            LDR,R6   12,B5
          1 000308  EF47 0026                            STR,R6   HI_NONBLN+1,AUTO

      704     5894    8                        END; ELSE DO;

   5894   1 00030A  0F81 0003                            B        s:5898,PREL

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:122  
      705     5895    8                           HI_NONBLN.CLM = HI_NONBLN.CLM-1;

   5895   1 00030C  88C7 0026                            DEC      HI_NONBLN+1,AUTO

      706     5896    8                        END /* If */;

      707     5897    7                     END /* If */;

      708     5898    6                     FLG.LOP = '1'B;

   5898   1 00030E  8947 002B                            LBT,'8000'X       FLG,AUTO
   5898   1 000310       8000

      709     5899    6                     RQS_PST = ORGHI_NONBLN_PST;

   5899   1 000311  8CC7 0027                            LDI      ORGHI_NONBLN,AUTO
          1 000313  8D47 0021                            SDI      RQS,AUTO

      710     5900    6                     RQS.CLM = RQS.CLM+1;

   5900   1 000315  8AC7 0022                            INC      RQS+1,AUTO

      711     5901    6                  END /* If */;

      712     5902    6                  IF RQS.LIN>DVC.LIN THEN DO;

   5902   1 000317  C947 0021                            CMR,R4   RQS,AUTO
          1 000319  0881 0037                            BAGE     s:5932,PREL

      713     5903        /* The destination (physical) line is below our current (device) line.
      714     5904           Blank to the end of the current line, then do a new-line
      715     5905           (CR/LF), and continue.                                                     */
      716     5906
      717     5907    7                     IF %KV_MRD.DVCCLM>%KV_SRD.BTMRHT.CLM THEN DO;

   5907   1 00031B  E846 001E                            LDR,R6   30,B6
          1 00031D  6801 0005                            BLZ,R6   s:5911,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:123  
          1 00031F  E945 000C                            CMR,R6   12,B5
          1 000321  0A81 000A                            BALE     s:5915,PREL

      718     5908        /* We're beyond the right margin.  There's no blanking to
      719     5909           do on this line, so do a new-line (CR/LF).                                 */
      720     5910
      721     5911    7                        RQS.LIN = DVC.LIN+1;

   5911   1 000323  4E01                                 ADV,R4   1
          1 000324  CF47 0021                            STR,R4   RQS,AUTO

      722     5912    7                        RQS.CLM = %KV_SRD.TOPLFT.CLM;

   5912   1 000326  E845 000A                            LDR,R6   10,B5
          1 000328  EF47 0022                            STR,R6   RQS+1,AUTO

      723     5913    7                     END /* If */;

   5913   1 00032A  0F81 0008                            B        s:5918,PREL

      724     5914    7                     ELSE DO;

      725     5915    7                        RQS.LIN = DVC.LIN;

   5915   1 00032C  CF47 0021                            STR,R4   RQS,AUTO

      726     5916    7                        RQS.CLM = %KV_SRD.BTMRHT.CLM+1;

   5916   1 00032E  E845 000C                            LDR,R6   12,B5
          1 000330  6E01                                 ADV,R6   1
          1 000331  EF47 0022                            STR,R6   RQS+1,AUTO

      727     5917    7                     END;

      728     5918    6                     FLG.LOP = '1'B;

   5918   1 000333  8947 002B                            LBT,'8000'X       FLG,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:124  
   5918   1 000335       8000

      729     5919    6                  END /* If */;

      730     5920    5               END /* If */;

   5920   1 000336  0F81 001A                            B        s:5932,PREL

      731     5921    5               ELSE IF PHSPSTMOD=%KV_PHSPSTMOD_BLN THEN DO;

   5921   1 000338  0981 0006                            BNE      s:5926,PREL

      732     5922        /* If we're asked to erase, but backwards, use skip mode.                        */
      733     5923
      734     5924    5                  PHSPSTMOD = %KV_PHSPSTMOD_SKP;

   5924   1 00033A  1C01                                 LDV,R1   1
          1 00033B  9F47 0029                            STR,R1   PHSPSTMOD,AUTO

      735     5925    5               END /* If */;

   5925   1 00033D  0F81 0013                            B        s:5932,PREL

      736     5926    4               ELSE IF PHSPSTMOD=%KV_PHSPSTMOD_SKP

   5926   1 00033F  1D01                                 CMV,R1   1
          1 000340  0981 0010                            BNE      s:5932,PREL
          1 000342  8CC7 0023                            LDI      DVC,AUTO
          1 000344  84C7 0021                            SID      RQS,AUTO
          1 000346  6881 000A                            BGEZ,R6  s:5932,PREL
          1 000348  8CC7 0027                            LDI      ORGHI_NONBLN,AUTO
          1 00034A  84C7 0023                            SID      DVC,AUTO
          1 00034C  6881 0004                            BGEZ,R6  s:5932,PREL

      737     5927    5                 AND DVC_PST<RQS_PST AND ORGHI_NONBLN_PST<DVC_PST THEN DO;

      738     5928        /* A forward SKP request past hinonbln can use any mode (and might need to).  */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:125  
      739     5929
      740     5930    5                  PHSPSTMOD = %KV_PHSPSTMOD_ANY;

   5930   1 00034E  1C03                                 LDV,R1   3
          1 00034F  9F47 0029                            STR,R1   PHSPSTMOD,AUTO

      741     5931    5               END /* If */;

      742     5932    4               IF PHSPSTMOD~=%KV_PHSPSTMOD_SKP AND %KV_SRD.TOPLFT.CLM~=1

   5932   1 000351  1D01                                 CMV,R1   1
          1 000352  0901 0025                            BE       s:5946,PREL
          1 000354  E845 000A                            LDR,R6   10,B5
          1 000356  6D01                                 CMV,R6   1
          1 000357  0901 0020                            BE       s:5946,PREL
          1 000359  82C7 002B                            LB,'2000'X        FLG,AUTO
          1 00035B       2000
          1 00035C  0501 001B                            BBT      s:5946,PREL

      743     5933    4                 AND NOT FLG.ERRED
      744     5934    5               THEN IF RQS.LIN>DVC.LIN OR DVC.CLM<%KV_SRD.TOPLFT.CLM THEN DO;

   5934   1 00035E  C847 0021                            LDR,R4   RQS,AUTO
          1 000360  C947 0023                            CMR,R4   DVC,AUTO
          1 000362  0A01 0005                            BAG      s:5937,PREL
          1 000364  E947 0024                            CMR,R6   DVC+1,AUTO
          1 000366  0A81 0011                            BALE     s:5946,PREL

      745     5935        /* Never use blanks outside this SRD */
      746     5936
      747     5937    6                  IF PHSPSTMOD=%KV_PHSPSTMOD_BLN THEN DO;

   5937   1 000368  1D02                                 CMV,R1   2
          1 000369  0981 0008                            BNE      s:5941,PREL

      748     5938    6                     RQS.CLM = %KV_SRD.TOPLFT.CLM;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:126  
   5938   1 00036B  EF47 0022                            STR,R6   RQS+1,AUTO

      749     5939    6                     FLG.LOP = '1'B;

   5939   1 00036D  8947 002B                            LBT,'8000'X       FLG,AUTO
   5939   1 00036F       8000

      750     5940    6                  END;

   5940   1 000370  0F81 0007                            B        s:5946,PREL

      751     5941    5                  ELSE IF PHSPSTMOD=%KV_PHSPSTMOD_ANY

   5941   1 000372  1D03                                 CMV,R1   3
          1 000373  0981 0004                            BNE      s:5946,PREL

      752     5942    5                  THEN PHSPSTMOD = %KV_PHSPSTMOD_SKP;

   5942   1 000375  1C01                                 LDV,R1   1
          1 000376  9F47 0029                            STR,R1   PHSPSTMOD,AUTO

      753     5943    5               END;

      754     5944    4            END /* If */;

      755     5945
      756     5946    3            TREX = RQS.LIN+%KV_SRD.DVCLINBIS;

   5946   1 000378  E847 0021                            LDR,R6   RQS,AUTO
          1 00037A  EA45 0019                            ADD,R6   25,B5
          1 00037C  EF47 001A                            STR,R6   TREX,AUTO

      757     5947    3            IF (TREX>%KV_SRD.BTMRHT.LIN AND %KV_SRD.LNG<%KV_MRD.DSPHEIGHT

   5947   1 00037E  6801 0005                            BLZ,R6   s:5947+6,PREL
          1 000380  E945 000B                            CMR,R6   11,B5
          1 000382  0A81 0008                            BALE     s:5947+13,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:127  
          1 000384  C2C5 000E                            LLH,R4   14,B5
          1 000386  92C6 000A                            LLH,R1   10,B6
          1 000388  C951                                 CMR,R4   R1
          1 000389  0801 0007                            BAL      s:5947+19,PREL
          1 00038B  6801 003D                            BLZ,R6   s:5967,PREL
          1 00038D  E945 0009                            CMR,R6   9,B5
          1 00038F  0881 0039                            BAGE     s:5967,PREL
          1 000391  82C5 000E                            LB,'0008'X        14,B5
          1 000393       0008
          1 000394  0581 0034                            BBF      s:5967,PREL
          1 000396  C2C5 000E                            LLH,R4   14,B5
          1 000398  4901 0030                            BEZ,R4   s:5967,PREL

      758     5948    3              OR TREX<%KV_SRD.TOPLFT.LIN)
      759     5949    4              AND %KV_SRD.SCROLL AND %KV_SRD.LNG>0 THEN DO;

      760     5950
      761     5951        /* For scrolling in windows, use ILN and DLN. */
      762     5952
      763     5953    4               PHSPSTMOD = %KV_PHSPSTMOD_VRTSCR;

   5953   1 00039A  1C04                                 LDV,R1   4
          1 00039B  9F47 0029                            STR,R1   PHSPSTMOD,AUTO

      764     5954    4               IF TREX>%KV_SRD.BTMRHT.LIN

   5954   1 00039D  6801 0005                            BLZ,R6   s:5955,PREL
          1 00039F  E945 000B                            CMR,R6   11,B5
          1 0003A1  0A81 0008                            BALE     s:5956,PREL

      765     5955    4               THEN SCRCNT = %KV_SRD.BTMRHT.LIN-TREX;

   5955   1 0003A3  E245 000B                            SUB,R6   11,B5
          1 0003A5  8256                                 NEG      R6
          1 0003A6  EF47 002A                            STR,R6   SCRCNT,AUTO
          1 0003A8  0F81 0006                            B        s:5957,PREL

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:128  
      766     5956    4               ELSE SCRCNT = %KV_SRD.TOPLFT.LIN-TREX;

   5956   1 0003AA  E245 0009                            SUB,R6   9,B5
          1 0003AC  8256                                 NEG      R6
          1 0003AD  EF47 002A                            STR,R6   SCRCNT,AUTO

      767     5957    4               %KV_SRD.DVCLINBIS = %KV_SRD.DVCLINBIS+SCRCNT;

   5957   1 0003AF  EA45 0019                            ADD,R6   25,B5
          1 0003B1  EF45 0019                            STR,R6   25,B5

      768     5958    4               IF %KV_SRD.LNG<SCRCNT THEN SCRCNT = %KV_SRD.LNG;

   5958   1 0003B3  C947 002A                            CMR,R4   SCRCNT,AUTO
          1 0003B5  0881 0003                            BAGE     s:5959,PREL

   5958   1 0003B7  CF47 002A                            STR,R4   SCRCNT,AUTO

      769     5959    4               IF -%KV_SRD.LNG>SCRCNT THEN SCRCNT = -%KV_SRD.LNG;

   5959   1 0003B9  8254                                 NEG      R4
          1 0003BA  C947 002A                            CMR,R4   SCRCNT,AUTO
          1 0003BC  0A81 0003                            BALE     s:5964,PREL

   5959   1 0003BE  CF47 002A                            STR,R4   SCRCNT,AUTO

      770     5960        /*
      771     5961           Ignore scrolling more than a full window - it's just wasted motion,
      772     5962           and it hangs the Fep trying to find the place to spread out the hole.
      773     5963        */
      774     5964    4               %KV_VDI.UN_KNWPST = '0'B;   /* Dont loop on this one              */

   5964   1 0003C0  BC80 0000 0000  xsym                 LDB,B3   KV$PTR$
          1 0003C3  AC83                                 LDB,B2   ,B3
          1 0003C4  8842 001D                            LBF,'1000'X       29,B2
          1 0003C6       1000

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:129  
      775     5965    4               GOTO MAIN_LOOP;

   5965   1 0003C7  0F81 FD2A                            B        s:5745,PREL

      776     5966    4            END;
      777     5967    4            IF NOT %KV_MRD.LIMBOCLM AND %KV_MRD.DVCCLM>%KV_MRD.WDT THEN DO;

   5967   1 0003C9  82C6 0018                            LB,'0080'X        24,B6
   5967   1 0003CB       0080
          1 0003CC  0501 0010                            BBT      s:5975,PREL
          1 0003CE  C846 001E                            LDR,R4   30,B6
          1 0003D0  C946 000B                            CMR,R4   11,B6
          1 0003D2  0381 000A                            BLE      s:5975,PREL

      778     5968        /* The dumb thing is still in the last column.                                */
      779     5969
      780     5970    4               DVC.CLM = %KV_MRD.WDT;

   5970   1 0003D4  9846 000B                            LDR,R1   11,B6
          1 0003D6  9F47 0024                            STR,R1   DVC+1,AUTO

      781     5971    4               %KV_MRD.DVCCLM = DVC.CLM;

   5971   1 0003D8  C851                                 LDR,R4   R1
          1 0003D9  CF46 001E                            STR,R4   30,B6

      782     5972    4               Y$NOD.DVCCLM = DVC.CLM;

   5972   1 0003DB  9F44 0002                            STR,R1   2,B4

      783     5973    4            END /* If */;

      784     5974        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:130  
      785     5975    3            IF RQS.CLM~=DVC.CLM THEN Y$NOD.PSTRQR.HRZ = '1'B;

   5975   1 0003DD  C847 0022                            LDR,R4   RQS+1,AUTO
          1 0003DF  C947 0024                            CMR,R4   DVC+1,AUTO
          1 0003E1  0901 0003                            BE       s:5977,PREL

   5975   1 0003E3  8904                                 LBT,'0080'X       ,B4
   5975   1 0003E4       0080

      786     5976        /* The horizontal position is not yet correct.                                */
      787     5977    3            IF DVC.LIN~=RQS.LIN THEN Y$NOD.PSTRQR.VRT = '1'B;

   5977   1 0003E5  B847 0023                            LDR,R3   DVC,AUTO
          1 0003E7  B947 0021                            CMR,R3   RQS,AUTO
          1 0003E9  0901 0003                            BE       s:5979,PREL

   5977   1 0003EB  8904                                 LBT,'0040'X       ,B4
   5977   1 0003EC       0040

      788     5978        /* The vertical position is not yet correct.                                  */
      789     5979    3            IF NOT Y$NOD.PSTRQR THEN EXIT; /* Already done                       */

   5979   1 0003ED  8284                                 LB,'00C0'X        ,B4
   5979   1 0003EE       00C0
          1 0003EF  0581 07A5                            BBF      s:6714,PREL

      790     5980    3            SVDPTHALT$ = PINCRW(NOD$,SIZEW(Y$NOD));

   5980   1 0003F1  BBC4 0008                            LAB,B3   8,B4
          1 0003F3  BFC7 0014                            STB,B3   SVDPTHALT$,AUTO

      791     5981    3            SVDPTHEND$ = SVDPTHALT$;

   5981   1 0003F5  BFC7 0016                            STB,B3   SVDPTHEND$,AUTO

      792     5982    3            SVDPTHEND$->Y$NOD = Y$NOD;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:131  
   5982   1 0003F7  AB84                                 LAB,B2   ,B4
          1 0003F8  2C00                                 LDV,R2   0
          1 0003F9  6C10                                 LDV,R6   16
          1 0003FA  3C00                                 LDV,R3   0
          1 0003FB  0008                                 MMM

      793     5983    3            SVDPTHEND$->Y$NOD.TIM = BITBIN('7FFF'X);

   5983   1 0003FC  ECC7 0016                            LDB,B6   SVDPTHEND$,AUTO
          1 0003FE  E870 7FFF                            LDR,R6   32767,IMO
          1 000400  EF46 0004                            STR,R6   4,B6

      794     5984    3            CRNPTHBGN$ = PINCRW(NOD$,SIZEC(Y$NOD));

   5984   1 000402  DCC7 0008                            LDB,B5   NOD$,AUTO
          1 000404  BBC5 0010                            LAB,B3   16,B5
          1 000406  BFC7 0010                            STB,B3   CRNPTHBGN$,AUTO

      795     5985    4            IF IMDSTPTIM=BITBIN('7FFE'X) THEN DO;

   5985   1 000408  C847 0019                            LDR,R4   IMDSTPTIM,AUTO
          1 00040A  C970 7FFE                            CMR,R4   32766,IMO
          1 00040C  0981 000D                            BNE      s:5992,PREL

      796     5986
      797     5987        /* Special value for unknown staring position                                 */
      798     5988
      799     5989    4               %KV_VDI.UN_KNWPST = '0'B;

   5989   1 00040E  9C80 0000 0000  xsym                 LDB,B1   KV$PTR$
          1 000411  EC81                                 LDB,B6   ,B1
          1 000412  8846 001D                            LBF,'1000'X       29,B6
          1 000414       1000

      800     5990    4               TREX = %TRE_UNK_PST;

   5990   1 000415  3C06                                 LDV,R3   6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:132  
          1 000416  BF47 001A                            STR,R3   TREX,AUTO

      801     5991    4            END;

   5991   1 000418  0F81 001C                            B        s:5998,PREL

      802     5992    3            ELSE IF IMDSTPTIM = BITBIN('7FFF'X)

   5992   1 00041A  C970 7FFF                            CMR,R4   32767,IMO
          1 00041C  0981 0006                            BNE      s:5996,PREL

      803     5993
      804     5994        /*  Special value for no-optimize. */
      805     5995    3            THEN TREX = %TRE_NO_OPT;

   5995   1 00041E  3C07                                 LDV,R3   7
          1 00041F  BF47 001A                            STR,R3   TREX,AUTO
          1 000421  0F81 0013                            B        s:5998,PREL

      806     5996    3            ELSE IF NOT %KV_MRD.BLANKERASES THEN TREX = %TRE_BSC_ANY;

   5996   1 000423  9CC7 000A                            LDB,B1   MRD$,AUTO
          1 000425  82C1 0016                            LB,'0002'X        22,B1
          1 000427       0002
          1 000428  0501 0005                            BBT      s:5997,PREL

   5996   1 00042A  DF47 001A                            STR,R5   TREX,AUTO
          1 00042C  0F81 0008                            B        s:5998,PREL

      807     5997    3            ELSE TREX = PSTTREX_CRT(PHSPSTMOD);

   5997   1 00042E  B847 0029                            LDR,R3   PHSPSTMOD,AUTO
          1 000430  A2B0 0000 0065  00                   LLH,R2   PSTTREX_CRT,R3
          1 000433  AF47 001A                            STR,R2   TREX,AUTO

      808     5998    4            IF TREX=%TRE_CRT_BLN AND RQS.CLM=%KV_SRD.TOPLFT.CLM THEN DO;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:133  
   5998   1 000435  B847 001A                            LDR,R3   TREX,AUTO
          1 000437  3D01                                 CMV,R3   1
          1 000438  0981 000C                            BNE      s:6003,PREL
          1 00043A  ECC7 000C                            LDB,B6   SRD$,AUTO
          1 00043C  A847 0022                            LDR,R2   RQS+1,AUTO
          1 00043E  A946 000A                            CMR,R2   10,B6
          1 000440  0981 0004                            BNE      s:6003,PREL

      809     5999        /* Trying to blank to a new line - use skip mode                              */
      810     6000
      811     6001    4               TREX = %TRE_CRT_SKP;

   6001   1 000442  3C19                                 LDV,R3   25
          1 000443  BF47 001A                            STR,R3   TREX,AUTO

      812     6002    4            END /* If */;

      813     6003    3            PRVNOD$ = NOD$;

   6003   1 000445  DFC7 0012                            STB,B5   PRVNOD$,AUTO

      814     6004    3            NOD$ = CRNPTHBGN$;

   6004   1 000447  BFC7 0008                            STB,B3   NOD$,AUTO

      815     6005    3            Y$NOD = PRVNOD$->Y$NOD;

   6005   1 000449  AB85                                 LAB,B2   ,B5
          1 00044A  2C00                                 LDV,R2   0
          1 00044B  6C10                                 LDV,R6   16
          1 00044C  3C00                                 LDV,R3   0
          1 00044D  0008                                 MMM

      816     6006    4   LOOP:    DO WHILE ('1'B);               /* Loop start                         */

   6006   1                              LOOP            null
      817     6007        /* This loop is traversed for each node processed.                            */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:134  
      818     6008
      819     6009    4               Y$NOD.FNC = Y_TRE.FNC(TREX);

   6009   1 00044E  B847 001A            LOOP            LDR,R3   TREX,AUTO
          1 000450  E830 0000 002D  00                   LDR,R6   Y_TREDAT,R3
          1 000453  6048                                 SOR,R6   8
          1 000454  E570 003F                            AND,R6   63,IMO
          1 000456  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000458  E786                                 STH,R6   ,B6

      820     6010    4               Y$NOD.TREX = TREX;

   6010   1 000459  BA86                                 SRM,R3,'003F'X    ,B6
   6010   1 00045A       003F

      821     6011    5   CASE1:      DO CASE (Y$NOD.FNC);

   6011   1 00045B  A286                 CASE1           LLH,R2   ,B6
          1 00045C  2D11                                 CMV,R2   17
          1 00045D  0281 03F5                            BGE      s:6390,PREL
          1 00045F  9820 0000 0465  01                   LDR,R1   CASE1+10,R2
          1 000462  8390 0000 0476  01                   JMP      s:6016,R1
          1 000465       03DD                            DC       s:6390,PREL
          1 000466       0000                            DC       s:6016,PREL
          1 000467       004F                            DC       s:6042,PREL
          1 000468       034F                            DC       s:6334,PREL
          1 000469       0091                            DC       s:6066,PREL
          1 00046A       03DD                            DC       s:6390,PREL
          1 00046B       03DD                            DC       s:6390,PREL
          1 00046C       00F7                            DC       s:6105,PREL
          1 00046D       011E                            DC       s:6119,PREL
          1 00046E       017E                            DC       s:6157,PREL
          1 00046F       03DD                            DC       s:6390,PREL
          1 000470       01AF                            DC       s:6176,PREL
          1 000471       01F8                            DC       s:6208,PREL
          1 000472       02C7                            DC       s:6287,PREL
          1 000473       03DD                            DC       s:6390,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:135  
          1 000474       01F8                            DC       s:6208,PREL
          1 000475       03C7                            DC       s:6379,PREL

      822     6012        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:136  
      823     6013    5               CASE (%NODFNC_BS);

      824     6014        /* Process BS (backspace)                                                     */
      825     6015
      826     6016    6                  IF NOT %KV_MRD.DEVICEBS THEN DO;

   6016   1 000476  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000478  82C5 0016                            LB,'0001'X        22,B5
          1 00047A       0001
          1 00047B  0501 000B                            BBT      s:6024,PREL

      827     6017
      828     6018        /* This device doesn't have the BS  function.                                 */
      829     6019
      830     6020    7                     IF KV$ERD.CUB_CHR~=0 THEN DO;

   6020   1 00047D  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 00047F  D2C4 0022                            LLH,R5   34,B4
          1 000481  5901 03D1                            BEZ,R5   s:6390,PREL

      831     6021    7                        Y$NOD.FNC = %NODFNC_CUB;

   6021   1 000483  4C05                                 LDV,R4   5
          1 000484  C786                                 STH,R4   ,B6

      832     6022    6                     END; ELSE EXIT CASE1;

   6022   1 000485  0F81 0001                            B        s:6024,PREL

      833     6023    6                  END /* If */;
      834     6024    5                  IF Y$NOD.DVCCLM<=RQS.CLM THEN EXIT CASE1;

   6024   1 000487  D846 0002                            LDR,R5   2,B6
          1 000489  5801 0005                            BLZ,R5   s:6026,PREL
          1 00048B  D947 0022                            CMR,R5   RQS+1,AUTO
          1 00048D  0A81 03C5                            BALE     s:6390,PREL

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:137  
      835     6025        /* We are not positioning to the left.                                        */
      836     6026    5                  Y$NOD.FNCCNT = Y$NOD.DVCCLM-RQS.CLM;

   6026   1 00048F  D247 0022                            SUB,R5   RQS+1,AUTO
          1 000491  DF46 0007                            STR,R5   7,B6

      837     6027    6                  IF Y$NOD.FNC=%NODFNC_BS THEN DO;

   6027   1 000493  C286                                 LLH,R4   ,B6
          1 000494  4D01                                 CMV,R4   1
          1 000495  0981 001B                            BNE      s:6033,PREL

      838     6028    6                     Y$NOD.TIM = Y$NOD.TIM+Y$NOD.FNCCNT;

   6028   1 000497  DA46 0004                            ADD,R5   4,B6
          1 000499  DF46 0004                            STR,R5   4,B6

      839     6029    6                     Y$NOD.TIMAFT = KV$ERD.BS_TIM/TIMPERCHR;

   6029   1 00049B  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 00049D  F844 0009                            LDR,R7   9,B4
          1 00049F  6C00                                 LDV,R6   0
          1 0004A0  F347 0018                            DIV,R7   TIMPERCHR,AUTO
          1 0004A2  E857                                 LDR,R6   R7
          1 0004A3  EF46 0006                            STR,R6   6,B6

      840     6030    6                     IF Y$NOD.TIMAFT~=0

   6030   1 0004A5  6901 0017                            BEZ,R6   s:6036,PREL

      841     6031    6                     THEN Y$NOD.TIM = Y$NOD.TIM +Y$NOD.FNCCNT*Y$NOD.TIMAFT;

   6031   1 0004A7  F856                                 LDR,R7   R6
          1 0004A8  FB46 0007                            MUL,R7   7,B6
          1 0004AA  E857                                 LDR,R6   R7
          1 0004AB  EA55                                 ADD,R6   R5
          1 0004AC  D856                                 LDR,R5   R6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:138  
          1 0004AD  DF46 0004                            STR,R5   4,B6

      842     6032    6                  END; ELSE DO;

   6032   1 0004AF  0F81 000D                            B        s:6036,PREL

      843     6033    6                     Y$NOD.TIM = Y$NOD.TIM+

   6033   1 0004B1  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 0004B3  A2C4 0022                            LLH,R2   34,B4
          1 0004B5  2E5A                                 ADV,R2   90
          1 0004B6  F2A4                                 LLH,R7   ,B4,R2
          1 0004B7  FB55                                 MUL,R7   R5
          1 0004B8  E857                                 LDR,R6   R7
          1 0004B9  EA46 0004                            ADD,R6   4,B6
          1 0004BB  EF46 0004                            STR,R6   4,B6

      844     6034    6                       Y$NOD.FNCCNT *KV$ERD.CNT(KV$ERD.CUB_CHR);
      845     6035    6                  END /* If */;

      846     6036    5                  Y$NOD.DVCCLM = RQS.CLM;

   6036   1 0004BD  E847 0022                            LDR,R6   RQS+1,AUTO
          1 0004BF  EF46 0002                            STR,R6   2,B6

      847     6037    5                  Y$NOD.PSTRQR.HRZ = '0'B;

   6037   1 0004C1  8806                                 LBF,'0080'X       ,B6
   6037   1 0004C2       0080
          1 0004C3  0F81 038F                            B        s:6390,PREL

      848     6038        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:139  
      849     6039    5               CASE (%NODFNC_CR);

      850     6040        /* Process CR (carriage return)                                               */
      851     6041
      852     6042    5                  IF RQS.CLM>=Y$NOD.DVCCLM

   6042   1 0004C5  D847 0022                            LDR,R5   RQS+1,AUTO
          1 0004C7  5801 0005                            BLZ,R5   s:6042+8,PREL
          1 0004C9  D946 0002                            CMR,R5   2,B6
          1 0004CB  0281 0387                            BGE      s:6390,PREL
          1 0004CD  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 0004CF  89C5 0017                            CMZ      23,B5
          1 0004D1  0881 0381                            BAGE     s:6390,PREL

      853     6043        /* We're not to move to the left.                                             */
      854     6044    5                    OR NOT %KV_MRD.DEVICECR THEN EXIT CASE1;
      855     6045        /* This device doesn't have the CR function.                                  */
      856     6046
      857     6047    5                  Y$NOD.FNCCNT = 1;

   6047   1 0004D3  4C01                                 LDV,R4   1
          1 0004D4  CF46 0007                            STR,R4   7,B6

      858     6048    5                  Y$NOD.TIM = Y$NOD.TIM+1;

   6048   1 0004D6  8AC6 0004                            INC      4,B6

      859     6049    5                  Y$NOD.DVCCLM = 1;

   6049   1 0004D8  CF46 0002                            STR,R4   2,B6

      860     6050    5                  Y$NOD.TIMBFR = KV$ERD.TMNALG_BFRCR;

   6050   1 0004DA  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 0004DC  9844 0004                            LDR,R1   4,B4
          1 0004DE  9570 00FF                            AND,R1   255,IMO
          1 0004E0  9F46 0005                            STR,R1   5,B6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:140  

      861     6051    6                  IF Y$NOD.TIMBFR>0 THEN DO;

   6051   1 0004E2  1901 0008                            BEZ,R1   s:6054,PREL

      862     6052    6                     CALL CMPTMN (Y$NOD.TIMBFR);

   6052   1 0004E4  BBC6 0005                            LAB,B3   5,B6
          1 0004E6  BFC7 0084                            STB,B3   R2+4,AUTO
          1 0004E8  E3C0 07AC                            LNJ,B6   s:0,PREL
          1 0004EA       0001                            DC       s:6054,PREL

      863     6053    6                  END /* If */;

      864     6054    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTCR;

   6054   1 0004EB  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0004ED  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 0004EF  E2C5 0004                            LLH,R6   4,B5
          1 0004F1  EF46 0006                            STR,R6   6,B6

      865     6055    6                  IF Y$NOD.TIMAFT>0 THEN DO;

   6055   1 0004F3  6901 0008                            BEZ,R6   s:6058,PREL

      866     6056    6                     CALL CMPTMN (Y$NOD.TIMAFT);

   6056   1 0004F5  CBC6 0006                            LAB,B4   6,B6
          1 0004F7  CFC7 0084                            STB,B4   R2+4,AUTO
          1 0004F9  E3C0 079B                            LNJ,B6   s:0,PREL
          1 0004FB       0001                            DC       s:6058,PREL

      867     6057    6                  END /* If */;

      868     6058    6                  IF RQS.CLM=1 THEN DO;

   6058   1 0004FC  E847 0022                            LDR,R6   RQS+1,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:141  
          1 0004FE  6D01                                 CMV,R6   1
          1 0004FF  0981 0353                            BNE      s:6390,PREL

      869     6059
      870     6060    6                     Y$NOD.PSTRQR.HRZ = '0'B;

   6060   1 000501  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000503  8806                                 LBF,'0080'X       ,B6
          1 000504       0080

      871     6061    6                  END /* If */;

   6061   1 000505  0F81 034D                            B        s:6390,PREL

      872     6062        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:142  
      873     6063    5               CASE (%NODFNC_CR_NO_OPT);

      874     6064        /* Process CR_NO_OPT (carriage return, no optimization).                      */
      875     6065
      876     6066    5                  IF RQS.LIN<=Y$NOD.DVCLIN-Y$NOD.DVCLINBIS

   6066   1 000507  D846 0001                            LDR,R5   1,B6
          1 000509  D246 0003                            SUB,R5   3,B6
          1 00050B  D947 0021                            CMR,R5   RQS,AUTO
          1 00050D  0801 0009                            BAL      s:6066+16,PREL
          1 00050F  D847 0022                            LDR,R5   RQS+1,AUTO
          1 000511  5801 0005                            BLZ,R5   s:6066+16,PREL
          1 000513  D946 0002                            CMR,R5   2,B6
          1 000515  0281 033D                            BGE      s:6390,PREL
          1 000517  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000519  89C5 0017                            CMZ      23,B5
          1 00051B  0881 0337                            BAGE     s:6390,PREL

      877     6067    5                    AND RQS.CLM>=Y$NOD.DVCCLM
      878     6068        /* We're not to move to the left, and aren't moving down. CR won't help. */
      879     6069
      880     6070    5                    OR NOT %KV_MRD.DEVICECR THEN EXIT CASE1;
      881     6071        /* This device doesn't have the CR function.                                  */
      882     6072
      883     6073    6                  IF RQS.LIN>Y$NOD.DVCLIN-Y$NOD.DVCLINBIS+1 THEN DO;

   6073   1 00051D  D846 0001                            LDR,R5   1,B6
          1 00051F  D246 0003                            SUB,R5   3,B6
          1 000521  5E01                                 ADV,R5   1
          1 000522  D947 0021                            CMR,R5   RQS,AUTO
          1 000524  0881 000E                            BAGE     s:6080,PREL

      884     6074        /* We're going more than one line down.  Do it one at a time. */
      885     6075
      886     6076    6                     RQS.LIN = Y$NOD.DVCLIN-Y$NOD.DVCLINBIS+1;

   6076   1 000526  D846 0001                            LDR,R5   1,B6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:143  
          1 000528  D246 0003                            SUB,R5   3,B6
          1 00052A  5E01                                 ADV,R5   1
          1 00052B  DF47 0021                            STR,R5   RQS,AUTO

      887     6077    6                     RQS.CLM = 1; /* Don't bother with clm until the last one    */

   6077   1 00052D  4C01                                 LDV,R4   1
          1 00052E  CF47 0022                            STR,R4   RQS+1,AUTO

      888     6078    6                     FLG.LOP = '1'B;

   6078   1 000530  8947 002B                            LBT,'8000'X       FLG,AUTO
   6078   1 000532       8000

      889     6079    6                  END;

      890     6080    5                  Y$NOD.FNCCNT = 1;

   6080   1 000533  5C01                                 LDV,R5   1
          1 000534  DF46 0007                            STR,R5   7,B6

      891     6081    5                  Y$NOD.TIM = Y$NOD.TIM+1;

   6081   1 000536  8AC6 0004                            INC      4,B6

      892     6082    5                  Y$NOD.DVCCLM = 1;

   6082   1 000538  DF46 0002                            STR,R5   2,B6

      893     6083    5                  Y$NOD.TIMBFR = KV$ERD.TMNALG_BFRCR;

   6083   1 00053A  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 00053C  C844 0004                            LDR,R4   4,B4
          1 00053E  C570 00FF                            AND,R4   255,IMO
          1 000540  CF46 0005                            STR,R4   5,B6

      894     6084    6                  IF Y$NOD.TIMBFR>0 THEN DO;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:144  

   6084   1 000542  4901 0008                            BEZ,R4   s:6087,PREL

      895     6085    6                     CALL CMPTMN (Y$NOD.TIMBFR);

   6085   1 000544  BBC6 0005                            LAB,B3   5,B6
          1 000546  BFC7 0084                            STB,B3   R2+4,AUTO
          1 000548  E3C0 074C                            LNJ,B6   s:0,PREL
          1 00054A       0001                            DC       s:6087,PREL

      896     6086    6                  END /* If */;

      897     6087    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTCR;

   6087   1 00054B  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 00054D  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 00054F  E2C5 0004                            LLH,R6   4,B5
          1 000551  EF46 0006                            STR,R6   6,B6

      898     6088    6                  IF Y$NOD.TIMAFT>0 THEN DO;

   6088   1 000553  6901 0008                            BEZ,R6   s:6091,PREL

      899     6089    6                     CALL CMPTMN (Y$NOD.TIMAFT);

   6089   1 000555  CBC6 0006                            LAB,B4   6,B6
          1 000557  CFC7 0084                            STB,B4   R2+4,AUTO
          1 000559  E3C0 073B                            LNJ,B6   s:0,PREL
          1 00055B       0001                            DC       s:6091,PREL

      900     6090    6                  END /* If */;

      901     6091    6                  IF RQS.CLM=1 THEN DO;

   6091   1 00055C  E847 0022                            LDR,R6   RQS+1,AUTO
          1 00055E  6D01                                 CMV,R6   1
          1 00055F  0981 0007                            BNE      s:6099,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:145  

      902     6092    6                     Y$NOD.PSTRQR.HRZ = '0'B;

   6092   1 000561  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000563  8806                                 LBF,'0080'X       ,B6
          1 000564       0080

      903     6093    6                  END; ELSE DO;

   6093   1 000565  0F81 02ED                            B        s:6390,PREL

      904     6094        /* The destination column wasn't column 1.  Before we started
      905     6095           on this node horizontal positioning may have be done (Y$NOD.PSTRQR.HRZ),
      906     6096           but no longer is.  Don't go on with the previous setting
      907     6097           of Y$NOD.PSTRQR.HRZ, as it clearly isn't done now.                            */
      908     6098
      909     6099    6                     Y$NOD.PSTRQR.HRZ = '1'B;

   6099   1 000567  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000569  8906                                 LBT,'0080'X       ,B6
          1 00056A       0080

      910     6100    6                  END /* If */;

   6100   1 00056B  0F81 02E7                            B        s:6390,PREL

      911     6101        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:146  
      912     6102    5               CASE (%NODFNC_CUF);

      913     6103        /* Process CUF (cursor forward)                                               */
      914     6104
      915     6105    5                  IF KV$ERD.CUF_CHR=0

   6105   1 00056D  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 00056F  82C5 0022                            LB,'00FF'X        34,B5
          1 000571       00FF
          1 000572  0581 02E0                            BBF      s:6390,PREL
          1 000574  D847 0022                            LDR,R5   RQS+1,AUTO
          1 000576  5801 02DC                            BLZ,R5   s:6390,PREL
          1 000578  D946 0002                            CMR,R5   2,B6
          1 00057A  0381 02D8                            BLE      s:6390,PREL

      916     6106        /* This device doesn't have the CUF function.                                 */
      917     6107
      918     6108    5                    OR RQS.CLM<=Y$NOD.DVCCLM THEN EXIT CASE1;
      919     6109        /* We are not positioning to the right, CUF doesn't help.                     */
      920     6110    5                  Y$NOD.FNCCNT = RQS.CLM-Y$NOD.DVCCLM;

   6110   1 00057C  D246 0002                            SUB,R5   2,B6
          1 00057E  DF46 0007                            STR,R5   7,B6

      921     6111    5                  Y$NOD.TIM = Y$NOD.TIM+

   6111   1 000580  9845 0022                            LDR,R1   34,B5
          1 000582  9570 00FF                            AND,R1   255,IMO
          1 000584  1E5A                                 ADV,R1   90
          1 000585  F295                                 LLH,R7   ,B5,R1
          1 000586  FB55                                 MUL,R7   R5
          1 000587  E857                                 LDR,R6   R7
          1 000588  EA46 0004                            ADD,R6   4,B6
          1 00058A  EF46 0004                            STR,R6   4,B6

      922     6112    5                    Y$NOD.FNCCNT *KV$ERD.CNT(KV$ERD.CUF_CHR);
      923     6113    5                  Y$NOD.DVCCLM = RQS.CLM;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:147  

   6113   1 00058C  C847 0022                            LDR,R4   RQS+1,AUTO
          1 00058E  CF46 0002                            STR,R4   2,B6

      924     6114    5                  Y$NOD.PSTRQR.HRZ = '0'B;

   6114   1 000590  8806                                 LBF,'0080'X       ,B6
   6114   1 000591       0080
          1 000592  0F81 02C0                            B        s:6390,PREL

      925     6115        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:148  
      926     6116    5               CASE (%NODFNC_CUP);

      927     6117        /* Process CUP (cursor position).                                             */
      928     6118
      929     6119    5                  IF RQS.CLM>%KV_MRD.WDT

   6119   1 000594  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000596  D847 0022                            LDR,R5   RQS+1,AUTO
          1 000598  5801 0013                            BLZ,R5   s:6126,PREL
          1 00059A  D945 000B                            CMR,R5   11,B5
          1 00059C  0381 000F                            BLE      s:6126,PREL
          1 00059E  82C5 0017                            LB,'1000'X        23,B5
          1 0005A0       1000
          1 0005A1  0501 0006                            BBT      s:6124,PREL
          1 0005A3  82C5 0018                            LB,'0080'X        24,B5
          1 0005A5       0080
          1 0005A6  0501 0005                            BBT      s:6126,PREL

      930     6120    6                    AND (%KV_MRD.AUTONL OR NOT %KV_MRD.LIMBOCLM) THEN DO;

      931     6121        /* Dont even try to position past width on a device without a limbocolumn.
      932     6122           Change the request to simulate "no limboclm".                             */
      933     6123
      934     6124    6                     RQS.CLM = %KV_MRD.WDT;

   6124   1 0005A8  D845 000B                            LDR,R5   11,B5
          1 0005AA  DF47 0022                            STR,R5   RQS+1,AUTO

      935     6125    6                  END /* If */;

      936     6126    5                  IF KV$ERD.CUP_ALG=0 THEN EXIT CASE1;

   6126   1 0005AC  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 0005AE  C2C4 0015                            LLH,R4   21,B4
          1 0005B0  4901 02A2                            BEZ,R4   s:6390,PREL

      937     6127        /* This device doesn't have the CUP function.                                 */
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:149  
      938     6128
      939     6129    6                  IF RQS.LIN+Y$NOD.DVCLINBIS>%KV_MRD.LNG THEN DO;

   6129   1 0005B2  E847 0021                            LDR,R6   RQS,AUTO
          1 0005B4  EA46 0003                            ADD,R6   3,B6
          1 0005B6  D2C5 0015                            LLH,R5   21,B5
          1 0005B8  D956                                 CMR,R5   R6
          1 0005B9  0881 000D                            BAGE     s:6141,PREL

      940     6130        /* The destination position is beyond the bottom of the screen.
      941     6131           CUP won't get past the bottom. We'll probably need LF. */
      942     6132
      943     6133    6                     IF NOT Y$NOD.PSTRQR.HRZ

   6133   1 0005BB  8286                                 LB,'0080'X        ,B6
   6133   1 0005BC       0080
          1 0005BD  0501 0005                            BBT      s:6138,PREL
          1 0005BF  D946 0001                            CMR,R5   1,B6
          1 0005C1  0901 0291                            BE       s:6390,PREL

      944     6134    6                       AND Y$NOD.DVCLIN=%KV_MRD.LNG THEN EXIT CASE1;
      945     6135        /* The horizontal positioning was already done, and we are on the
      946     6136           bottom line and want to go down. CUP wont help.                            */
      947     6137
      948     6138    6                     Y$NOD.DVCLIN = %KV_MRD.LNG;

   6138   1 0005C3  DF46 0001                            STR,R5   1,B6

      949     6139    6                  END; ELSE DO;

   6139   1 0005C5  0F81 0009                            B        s:6144,PREL

      950     6140        /* The destination isn't beyond the bottom of the screen.                     */
      951     6141    6                     Y$NOD.PSTRQR.VRT = '0'B;

   6141   1 0005C7  8806                                 LBF,'0040'X       ,B6
   6141   1 0005C8       0040
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:150  

      952     6142    6                     Y$NOD.DVCLIN = RQS.LIN+Y$NOD.DVCLINBIS;

   6142   1 0005C9  E847 0021                            LDR,R6   RQS,AUTO
          1 0005CB  EA46 0003                            ADD,R6   3,B6
          1 0005CD  EF46 0001                            STR,R6   1,B6

      953     6143    6                  END /* If */;

      954     6144    5                  Y$NOD.FNCCNT = 1;

   6144   1 0005CF  6C01                                 LDV,R6   1
          1 0005D0  EF46 0007                            STR,R6   7,B6

      955     6145    5                  Y$NOD.TIM = Y$NOD.TIM+AVRCUPSIZ(KV$ERD.CUP_ALG);

   6145   1 0005D2  92C4 0015                            LLH,R1   21,B4
          1 0005D4  D290 0000 0029  00                   LLH,R5   AVRCUPSIZ,R1
          1 0005D7  DA46 0004                            ADD,R5   4,B6
          1 0005D9  DF46 0004                            STR,R5   4,B6

      956     6146    5                  Y$NOD.DVCCLM = RQS.CLM;

   6146   1 0005DB  C847 0022                            LDR,R4   RQS+1,AUTO
          1 0005DD  CF46 0002                            STR,R4   2,B6

      957     6147        /*N* NEED LIMIT CHECK FOR GOING ABOVE TOP OF SCREEN                           */
      958     6148    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTCUP;

   6148   1 0005DF  9844 0006                            LDR,R1   6,B4
          1 0005E1  9570 00FF                            AND,R1   255,IMO
          1 0005E3  9F46 0006                            STR,R1   6,B6

      959     6149    6                  IF Y$NOD.TIMAFT>0 THEN DO;

   6149   1 0005E5  1901 0008                            BEZ,R1   s:6152,PREL

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:151  
      960     6150    6                     CALL CMPTMN (Y$NOD.TIMAFT);

   6150   1 0005E7  BBC6 0006                            LAB,B3   6,B6
          1 0005E9  BFC7 0084                            STB,B3   R2+4,AUTO
          1 0005EB  E3C0 06A9                            LNJ,B6   s:0,PREL
          1 0005ED       0001                            DC       s:6152,PREL

      961     6151    6                  END /* If */;

      962     6152    5                  Y$NOD.PSTRQR.HRZ = '0'B;

   6152   1 0005EE  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0005F0  8806                                 LBF,'0080'X       ,B6
          1 0005F1       0080
          1 0005F2  0F81 0260                            B        s:6390,PREL

      963     6153        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:152  
      964     6154    5               CASE (%NODFNC_CUU);

      965     6155        /* Process CUU (cursor up)                                                    */
      966     6156
      967     6157    5                  IF KV$ERD.CUU_CHR=0 THEN EXIT CASE1;

   6157   1 0005F4  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 0005F6  D2C5 0023                            LLH,R5   35,B5
          1 0005F8  5901 025A                            BEZ,R5   s:6390,PREL

      968     6158        /* This device doesn't have the CUU function.                                 */
      969     6159
      970     6160        /* If the destination position is beyond the top of the screen,
      971     6161           just go to the top line. */
      972     6162
      973     6163    5                  IF RQS.LIN+Y$NOD.DVCLINBIS>=Y$NOD.DVCLIN

   6163   1 0005FA  C847 0021                            LDR,R4   RQS,AUTO
          1 0005FC  CA46 0003                            ADD,R4   3,B6
          1 0005FE  C946 0001                            CMR,R4   1,B6
          1 000600  0881 0252                            BAGE     s:6390,PREL
          1 000602  C846 0001                            LDR,R4   1,B6
          1 000604  4D01                                 CMV,R4   1
          1 000605  0901 024D                            BE       s:6390,PREL

      974     6164    5                    OR Y$NOD.DVCLIN=1 THEN EXIT CASE1;
      975     6165        /* We're not to (or can't) move up, CUU won't help.                           */
      976     6166
      977     6167    5                  Y$NOD.PSTRQR.VRT = '0'B;

   6167   1 000607  8806                                 LBF,'0040'X       ,B6
   6167   1 000608       0040

      978     6168    5                  Y$NOD.FNCCNT = Y$NOD.DVCLIN-MAXIMUM(RQS.LIN+Y$NOD.DVCLINBIS,1);

   6168   1 000609  D847 0021                            LDR,R5   RQS,AUTO
          1 00060B  DA46 0003                            ADD,R5   3,B6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:153  
          1 00060D  D970 0001                            CMR,R5   1,IMO
          1 00060F  0881 0002                            BAGE     s:6168+9,PREL
          1 000611  5C01                                 LDV,R5   1
          1 000612  D254                                 SUB,R5   R4
          1 000613  8255                                 NEG      R5
          1 000614  DF46 0007                            STR,R5   7,B6

      979     6169    5                  Y$NOD.DVCLIN = Y$NOD.DVCLIN-Y$NOD.FNCCNT;

   6169   1 000616  C255                                 SUB,R4   R5
          1 000617  CF46 0001                            STR,R4   1,B6

      980     6170    5                  Y$NOD.TIM = Y$NOD.TIM+

   6170   1 000619  92C5 0023                            LLH,R1   35,B5
          1 00061B  1E5A                                 ADV,R1   90
          1 00061C  F295                                 LLH,R7   ,B5,R1
          1 00061D  FB55                                 MUL,R7   R5
          1 00061E  E857                                 LDR,R6   R7
          1 00061F  EA46 0004                            ADD,R6   4,B6
          1 000621  EF46 0004                            STR,R6   4,B6
          1 000623  0F81 022F                            B        s:6390,PREL

      981     6171    5                    Y$NOD.FNCCNT *KV$ERD.CNT(KV$ERD.CUU_CHR);
      982     6172        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:154  
      983     6173    5               CASE (%NODFNC_HPA);

      984     6174        /* Process HPA (horizontal position absolute).                                */
      985     6175
      986     6176    5                  IF KV$ERD.HPA_ALG=0

   6176   1 000625  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 000627  82C5 0014                            LB,'00FF'X        20,B5
          1 000629       00FF
          1 00062A  0581 0228                            BBF      s:6390,PREL
          1 00062C  B845 0014                            LDR,R3   20,B5
          1 00062E  B570 00FF                            AND,R3   255,IMO
          1 000630  E846 0002                            LDR,R6   2,B6
          1 000632  E930 0000 0019  00                   CMR,R6   MAXHPACLM,R3
          1 000635  0281 021D                            BGE      s:6390,PREL
          1 000637  8286                                 LB,'0080'X        ,B6
          1 000638       0080
          1 000639  0581 0219                            BBF      s:6390,PREL

      987     6177        /* This device doesn't have the HPA function.                                 */
      988     6178
      989     6179    5                    OR Y$NOD.DVCCLM>=MAXHPACLM(KV$ERD.HPA_ALG)
      990     6180        /* We're already too far to the right. */
      991     6181
      992     6182    5                    OR NOT Y$NOD.PSTRQR.HRZ THEN EXIT CASE1;
      993     6183        /* The horizontal positioning is already done.                                */
      994     6184
      995     6185    5                  Y$NOD.FNCCNT = 1;

   6185   1 00063B  5C01                                 LDV,R5   1
          1 00063C  DF46 0007                            STR,R5   7,B6

      996     6186    5                  Y$NOD.TIM = Y$NOD.TIM+AVRHPASIZ(KV$ERD.HPA_ALG);

   6186   1 00063E  B845 0014                            LDR,R3   20,B5
          1 000640  B570 00FF                            AND,R3   255,IMO
          1 000642  C2B0 0000 0021  00                   LLH,R4   AVRHPASIZ,R3
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:155  
          1 000645  CA46 0004                            ADD,R4   4,B6
          1 000647  CF46 0004                            STR,R4   4,B6

      997     6187    5                  Y$NOD.DVCCLM = RQS.CLM;

   6187   1 000649  E847 0022                            LDR,R6   RQS+1,AUTO
          1 00064B  EF46 0002                            STR,R6   2,B6

      998     6188    6                  IF Y$NOD.DVCCLM>MAXHPACLM(KV$ERD.HPA_ALG) THEN DO;

   6188   1 00064D  B845 0014                            LDR,R3   20,B5
          1 00064F  B570 00FF                            AND,R3   255,IMO
          1 000651  E930 0000 0019  00                   CMR,R6   MAXHPACLM,R3
          1 000654  0381 0008                            BLE      s:6197,PREL

      999     6189        /* The destination column is greater than the maximum allowed
     1000     6190           by this HPA sequence.  Position to the max.                                */
     1001     6191
     1002     6192    6                     Y$NOD.DVCCLM = MAXHPACLM(KV$ERD.HPA_ALG);

   6192   1 000656  E830 0000 0019  00                   LDR,R6   MAXHPACLM,R3
          1 000659  EF46 0002                            STR,R6   2,B6

     1003     6193    6                  END; ELSE DO;

   6193   1 00065B  0F81 0003                            B        s:6199,PREL

     1004     6194
     1005     6195        /* The destination column is in the range of HPA positioning.                 */
     1006     6196
     1007     6197    6                     Y$NOD.PSTRQR.HRZ = '0'B;

   6197   1 00065D  8806                                 LBF,'0080'X       ,B6
   6197   1 00065E       0080

     1008     6198    6                  END /* If */;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:156  
     1009     6199    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTHPA;

   6199   1 00065F  B2C5 0007                            LLH,R3   7,B5
          1 000661  BF46 0006                            STR,R3   6,B6

     1010     6200    6                  IF Y$NOD.TIMAFT>0 THEN DO;

   6200   1 000663  3901 01EF                            BEZ,R3   s:6390,PREL

     1011     6201    6                     CALL CMPTMN (Y$NOD.TIMAFT);

   6201   1 000665  CBC6 0006                            LAB,B4   6,B6
          1 000667  CFC7 0084                            STB,B4   R2+4,AUTO
          1 000669  E3C0 062B                            LNJ,B6   s:0,PREL
          1 00066B       0001                            DC       s:6202,PREL

     1012     6202    6                  END /* If */;

   6202   1 00066C  0F81 01E6                            B        s:6390,PREL

     1013     6203        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:157  
     1014     6204    5               CASE (%NODFNC_HT,%NODFNC_NXTHT);

     1015     6205        /* Process HT (horizontal tab) and next HT (first HT to the right
     1016     6206           of the ultimate destination column).                                       */
     1017     6207
     1018     6208    5                  IF RQS.CLM<=Y$NOD.DVCCLM

   6208   1 00066E  D847 0022                            LDR,R5   RQS+1,AUTO
          1 000670  5801 01E2                            BLZ,R5   s:6390,PREL
          1 000672  D946 0002                            CMR,R5   2,B6
          1 000674  0381 01DE                            BLE      s:6390,PREL
          1 000676  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000678  82C5 0016                            LB,'0004'X        22,B5
          1 00067A       0004
          1 00067B  0581 01D7                            BBF      s:6390,PREL
          1 00067D  8DC5 0004                            CMN      4,B5
          1 00067F  0901 01D3                            BE       s:6390,PREL

     1019     6209        /* We're not to move to the right.                                            */
     1020     6210    5                    OR NOT %KV_MRD.TRMTABSET
     1021     6211    5                    OR %KV_MRD.TRMTAB$=ADDR(NIL) THEN EXIT CASE1;
     1022     6212        /* Either device tabs aren't set, or there are no device tab stops. */
     1023     6213
     1024     6214    6                  IF RQS.CLM~=LSTTABPHSCLM OR Y$NOD.DVCCLM~=LSTTABDVCCLM THEN DO;

   6214   1 000681  D947 001B                            CMR,R5   LSTTABPHSCLM,AUTO
          1 000683  0981 0009                            BNE      s:6217,PREL
          1 000685  C846 0002                            LDR,R4   2,B6
          1 000687  4801 0005                            BLZ,R4   s:6217,PREL
          1 000689  C947 001C                            CMR,R4   LSTTABDVCCLM,AUTO
          1 00068B  0901 0063                            BE       s:6257,PREL

     1025     6215        /* We need to check for usable tab stops.                                     */
     1026     6216
     1027     6217    6                     B4 = %KV_MRD.TRMTAB$;

   6217   1 00068D  CCC5 0004                            LDB,B4   4,B5
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:158  
          1 00068F  CFC7 000E                            STB,B4   B4,AUTO

     1028     6218    6                     LSTTABPHSCLM = RQS.CLM;

   6218   1 000691  DF47 001B                            STR,R5   LSTTABPHSCLM,AUTO

     1029     6219    6                     MAXTAB = 0;

   6219   1 000693  8747 0020                            CL       MAXTAB,AUTO

     1030     6220    6                     LSTTABDVCCLM = Y$NOD.DVCCLM;

   6220   1 000695  C846 0002                            LDR,R4   2,B6
          1 000697  CF47 001C                            STR,R4   LSTTABDVCCLM,AUTO

     1031     6221    6                     TABCLM = LSTTABDVCCLM;

   6221   1 000699  CF47 001D                            STR,R4   TABCLM,AUTO

     1032     6222    6                     NXTTABCLM = 0;

   6222   1 00069B  8747 001E                            CL       NXTTABCLM,AUTO

     1033     6223    6                     TABCNT = 0;

   6223   1 00069D  8747 001F                            CL       TABCNT,AUTO

     1034     6224    6                     R2 = SIZEC(KV$SHRBFR); /* Index into tabs.                  */

   6224   1 00069F  6C08                                 LDV,R6   8
          1 0006A0  EF47 0080                            STR,R6   R2,AUTO

     1035     6225    7                     DO WHILE R2<KV$SHRBFR.BYTSIZ;

   6225   1 0006A2  6801 0005                            BLZ,R6   s:6229,PREL
          1 0006A4  E944 0002                            CMR,R6   2,B4
          1 0006A6  0281 0014                            BGE      s:6233,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:159  

     1036     6226        /* This loop is traversed for each tab stop in the tab buffer, until
     1037     6227           a tab stop is found that is to the right of the current device position.   */
     1038     6228
     1039     6229    7                        IF KV$SHRBFR_BYT(R2)>Y$NOD.DVCCLM THEN EXIT;

   6229   1 0006A8  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0006AA  DCC7 000E                            LDB,B5   B4,AUTO
          1 0006AC  B847 0080                            LDR,R3   R2,AUTO
          1 0006AE  E2B5                                 LLH,R6   ,B5,R3
          1 0006AF  E946 0002                            CMR,R6   2,B6
          1 0006B1  0301 0009                            BG       s:6233,PREL

     1040     6230        /* We've found the first tab to the right of the device's current position.   */
     1041     6231    7                        R2 = R2+1;

   6231   1 0006B3  8AC7 0080                            INC      R2,AUTO

     1042     6232    7                     END /* Loop */;

   6232   1 0006B5  E847 0080                            LDR,R6   R2,AUTO
          1 0006B7  6871                                 BLZ,R6   s:6229,SPREL
          1 0006B8  E945 0002                            CMR,R6   2,B5
          1 0006BA  026E                                 BL       s:6229,SPREL

     1043     6233    7                     DO WHILE R2<KV$SHRBFR.BYTSIZ AND NXTTABCLM=0;

   6233   1 0006BB  0F81 0026                            B        s:6255,PREL

     1044     6234        /* This loop is traversed for each tab stop in the tab buffer,
     1045     6235           starting with the first tab to the right of the current position,
     1046     6236           continuing on thru the first tab to the right of the desired position.     */
     1047     6237
     1048     6238    8                        IF KV$SHRBFR_BYT(R2)<=RQS.CLM THEN DO;

   6238   1 0006BD  ECC7 000E                            LDB,B6   B4,AUTO
          1 0006BF  B847 0080                            LDR,R3   R2,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:160  
          1 0006C1  E2B6                                 LLH,R6   ,B6,R3
          1 0006C2  E947 0022                            CMR,R6   RQS+1,AUTO
          1 0006C4  0A01 0013                            BAG      s:6246,PREL

     1049     6239        /* The current tab stop doesn't exceed the desired position; it is usable. */
     1050     6240
     1051     6241    8                           TABCNT = TABCNT+1;

   6241   1 0006C6  8AC7 001F                            INC      TABCNT,AUTO

     1052     6242    8                           IF MAXTAB<KV$SHRBFR_BYT(R2)-TABCLM

   6242   1 0006C8  E247 001D                            SUB,R6   TABCLM,AUTO
          1 0006CA  E947 0020                            CMR,R6   MAXTAB,AUTO
          1 0006CC  0A81 0006                            BALE     s:6244,PREL

     1053     6243    8                           THEN MAXTAB = KV$SHRBFR_BYT(R2)-TABCLM;

   6243   1 0006CE  E2B6                                 LLH,R6   ,B6,R3
          1 0006CF  E247 001D                            SUB,R6   TABCLM,AUTO
          1 0006D1  EF47 0020                            STR,R6   MAXTAB,AUTO

     1054     6244    8                           TABCLM = KV$SHRBFR_BYT(R2);

   6244   1 0006D3  E2B6                                 LLH,R6   ,B6,R3
          1 0006D4  EF47 001D                            STR,R6   TABCLM,AUTO

     1055     6245    8                        END;

   6245   1 0006D6  0F81 0009                            B        s:6254,PREL

     1056     6246    8                        ELSE IF KV$SHRBFR_BYT(R2)<=%KV_MRD.WDT THEN DO;

   6246   1 0006D8  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 0006DA  E945 000B                            CMR,R6   11,B5
          1 0006DC  0301 0003                            BG       s:6254,PREL

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:161  
     1057     6247        /* The current tab stop is to the right of the desired position, but
     1058     6248           to the left of or at the right edge of the device.  This stop
     1059     6249           is the one to use if it is fastest to position via tabbing to the
     1060     6250           right of the desired position, and then position back to the left.         */
     1061     6251
     1062     6252    8                           NXTTABCLM = KV$SHRBFR_BYT(R2);

   6252   1 0006DE  EF47 001E                            STR,R6   NXTTABCLM,AUTO

     1063     6253    8                        END /* If */;

     1064     6254    7                        R2 = R2+1;

   6254   1 0006E0  8AC7 0080                            INC      R2,AUTO

     1065     6255    7                     END /* Loop */;

   6255   1 0006E2  ECC7 000E                            LDB,B6   B4,AUTO
          1 0006E4  E847 0080                            LDR,R6   R2,AUTO
          1 0006E6  6801 0005                            BLZ,R6   s:6255+10,PREL
          1 0006E8  E946 0002                            CMR,R6   2,B6
          1 0006EA  0281 0004                            BGE      s:6257,PREL
          1 0006EC  D847 001E                            LDR,R5   NXTTABCLM,AUTO
          1 0006EE  594F                                 BEZ,R5   s:6238,SPREL

     1066     6256    6                  END /* If */;

     1067     6257    6                  IF Y$NOD.FNC=%NODFNC_HT THEN DO;

   6257   1 0006EF  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0006F1  E286                                 LLH,R6   ,B6
          1 0006F2  6D0C                                 CMV,R6   12
          1 0006F3  0981 000D                            BNE      s:6267,PREL

     1068     6258        /* We're processing the HT (horizontal tab) node, as opposed to
     1069     6259           the next-HT node.                                                          */
     1070     6260
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:162  
     1071     6261    6                     IF TABCNT=0 THEN EXIT CASE1;

   6261   1 0006F5  D847 001F                            LDR,R5   TABCNT,AUTO
          1 0006F7  5901 015B                            BEZ,R5   s:6390,PREL

     1072     6262    6                     Y$NOD.DVCCLM = TABCLM;

   6262   1 0006F9  C847 001D                            LDR,R4   TABCLM,AUTO
          1 0006FB  CF46 0002                            STR,R4   2,B6

     1073     6263    6                     Y$NOD.FNCCNT = TABCNT;

   6263   1 0006FD  DF46 0007                            STR,R5   7,B6

     1074     6264    6                  END; ELSE DO;

   6264   1 0006FF  0F81 001A                            B        s:6273,PREL

     1075     6265        /* We're processing the next HT node.                                         */
     1076     6266
     1077     6267    6                     IF NXTTABCLM=0 THEN EXIT CASE1;

   6267   1 000701  D847 001E                            LDR,R5   NXTTABCLM,AUTO
          1 000703  5901 014F                            BEZ,R5   s:6390,PREL

     1078     6268    6                     IF MAXTAB<NXTTABCLM-TABCLM

   6268   1 000705  D247 001D                            SUB,R5   TABCLM,AUTO
          1 000707  D947 0020                            CMR,R5   MAXTAB,AUTO
          1 000709  0A81 0007                            BALE     s:6270,PREL

     1079     6269    6                     THEN MAXTAB = NXTTABCLM-TABCLM;

   6269   1 00070B  D847 001E                            LDR,R5   NXTTABCLM,AUTO
          1 00070D  D247 001D                            SUB,R5   TABCLM,AUTO
          1 00070F  DF47 0020                            STR,R5   MAXTAB,AUTO

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:163  
     1080     6270    6                     Y$NOD.DVCCLM = NXTTABCLM;

   6270   1 000711  D847 001E                            LDR,R5   NXTTABCLM,AUTO
          1 000713  DF46 0002                            STR,R5   2,B6

     1081     6271    6                     Y$NOD.FNCCNT = TABCNT+1;

   6271   1 000715  C847 001F                            LDR,R4   TABCNT,AUTO
          1 000717  4E01                                 ADV,R4   1
          1 000718  CF46 0007                            STR,R4   7,B6

     1082     6272    6                  END /* If */;

     1083     6273    5                  Y$NOD.TIM = Y$NOD.TIM+Y$NOD.FNCCNT;

   6273   1 00071A  D846 0004                            LDR,R5   4,B6
          1 00071C  DA46 0007                            ADD,R5   7,B6
          1 00071E  DF46 0004                            STR,R5   4,B6

     1084     6274    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTHT;

   6274   1 000720  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 000722  C2C5 0006                            LLH,R4   6,B5
          1 000724  CF46 0006                            STR,R4   6,B6

     1085     6275    6                  IF Y$NOD.TIMAFT~=0 THEN DO;

   6275   1 000726  4901 0008                            BEZ,R4   s:6278,PREL

     1086     6276    6                     CALL CMPTMN (Y$NOD.TIMAFT);

   6276   1 000728  CBC6 0006                            LAB,B4   6,B6
          1 00072A  CFC7 0084                            STB,B4   R2+4,AUTO
          1 00072C  E3C0 0568                            LNJ,B6   s:0,PREL
          1 00072E       0001                            DC       s:6278,PREL

     1087     6277    6                  END /* If */;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:164  

     1088     6278    6                  IF RQS.CLM=Y$NOD.DVCCLM THEN DO;

   6278   1 00072F  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000731  E847 0022                            LDR,R6   RQS+1,AUTO
          1 000733  6801 011F                            BLZ,R6   s:6390,PREL
          1 000735  E946 0002                            CMR,R6   2,B6
          1 000737  0981 011B                            BNE      s:6390,PREL

     1089     6279        /* The last tab stop we're going to is right at the desired position.         */
     1090     6280
     1091     6281    6                     Y$NOD.PSTRQR.HRZ = '0'B;

   6281   1 000739  8806                                 LBF,'0080'X       ,B6
   6281   1 00073A       0080

     1092     6282    6                  END /* If */;

   6282   1 00073B  0F81 0117                            B        s:6390,PREL

     1093     6283        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:165  
     1094     6284    5               CASE (%NODFNC_LF);

     1095     6285        /* Process LF (line feed).                                                    */
     1096     6286
     1097     6287    5                  IF RQS.LIN+Y$NOD.DVCLINBIS<=Y$NOD.DVCLIN

   6287   1 00073D  D847 0021                            LDR,R5   RQS,AUTO
          1 00073F  DA46 0003                            ADD,R5   3,B6
          1 000741  D946 0001                            CMR,R5   1,B6
          1 000743  0A81 010F                            BALE     s:6390,PREL
          1 000745  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000747  82C5 0017                            LB,'4000'X        23,B5
          1 000749       4000
          1 00074A  0501 0008                            BBT      s:6295,PREL
          1 00074C  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 00074E  82C4 0023                            LB,'00FF'X        35,B4
          1 000750       00FF
          1 000751  0581 0101                            BBF      s:6390,PREL

     1098     6288        /* We're not to move down, LF won't help.                                     */
     1099     6289    5                    OR %KV_MRD.DEVICELF='0'B
     1100     6290        /* This device doesn't have the LF function.                                  */
     1101     6291
     1102     6292    5                    AND KV$ERD.CUD_CHR=0 THEN EXIT CASE1;
     1103     6293         /* It has no way to do LFs. */
     1104     6294
     1105     6295    6                  IF NOT %KV_MRD.DEVICELF THEN DO;

   6295   1 000753  82C5 0017                            LB,'4000'X        23,B5
   6295   1 000755       4000
          1 000756  0501 0003                            BBT      s:6300,PREL

     1106     6296        /* There's no LF, but there is cursor down, use it instead.                   */
     1107     6297
     1108     6298    6                     Y$NOD.FNC = %NODFNC_CUD;

   6298   1 000758  5C06                                 LDV,R5   6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:166  
          1 000759  D786                                 STH,R5   ,B6

     1109     6299    6                  END;

     1110     6300    5                  Y$NOD.FNCCNT = RQS.LIN+Y$NOD.DVCLINBIS-Y$NOD.DVCLIN;

   6300   1 00075A  D847 0021                            LDR,R5   RQS,AUTO
          1 00075C  DA46 0003                            ADD,R5   3,B6
          1 00075E  D246 0001                            SUB,R5   1,B6
          1 000760  DF46 0007                            STR,R5   7,B6

     1111     6301    5                  IF %KV_SRD.SCROLL

   6301   1 000762  CCC7 000C                            LDB,B4   SRD$,AUTO
          1 000764  82C4 000E                            LB,'0008'X        14,B4
          1 000766       0008
          1 000767  0581 0017                            BBF      s:6315,PREL
          1 000769  C846 0003                            LDR,R4   3,B6
          1 00076B  CA47 0021                            ADD,R4   RQS,AUTO
          1 00076D  C944 000B                            CMR,R4   11,B4
          1 00076F  0A81 000F                            BALE     s:6315,PREL

     1112     6302        /* This device is being operated in scroll mode                               */
     1113     6303
     1114     6304    6                    AND Y$NOD.DVCLINBIS+RQS.LIN>%KV_SRD.BTMRHT.LIN THEN DO;

     1115     6305        /* We're causing scrolling, adjust DVCLINBIS by the number of lines scrolled. */
     1116     6306
     1117     6307    7                     IF Y$NOD.FNC=%NODFNC_CUD THEN DO;

   6307   1 000771  C286                                 LLH,R4   ,B6
          1 000772  4D06                                 CMV,R4   6
          1 000773  0981 0005                            BNE      s:6313,PREL

     1118     6308        /* Cursor-down wont work                                                      */
     1119     6309
     1120     6310    7                        Y$NOD.FNCCNT = 0;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:167  

   6310   1 000775  8746 0007                            CL       7,B6

     1121     6311    7                        EXIT CASE1;

   6311   1 000777  0F81 00DB                            B        s:6390,PREL

     1122     6312    7                     END /* If */;
     1123     6313    6                     Y$NOD.DVCLINBIS = %KV_SRD.BTMRHT.LIN-RQS.LIN;

   6313   1 000779  A844 000B                            LDR,R2   11,B4
          1 00077B  A247 0021                            SUB,R2   RQS,AUTO
          1 00077D  AF46 0003                            STR,R2   3,B6

     1124     6314    6                  END /* If */;

     1125     6315    6                  IF Y$NOD.FNC=%NODFNC_CUD THEN DO;

   6315   1 00077F  C286                                 LLH,R4   ,B6
          1 000780  4D06                                 CMV,R4   6
          1 000781  0981 0011                            BNE      s:6319,PREL

     1126     6316    6                     Y$NOD.TIM = Y$NOD.TIM+

   6316   1 000783  BCC7 0006                            LDB,B3   ERD$,AUTO
          1 000785  A843 0023                            LDR,R2   35,B3
          1 000787  A570 00FF                            AND,R2   255,IMO
          1 000789  2E5A                                 ADV,R2   90
          1 00078A  F2A3                                 LLH,R7   ,B3,R2
          1 00078B  FB55                                 MUL,R7   R5
          1 00078C  E857                                 LDR,R6   R7
          1 00078D  EA46 0004                            ADD,R6   4,B6
          1 00078F  EF46 0004                            STR,R6   4,B6

     1127     6317    6                       Y$NOD.FNCCNT *KV$ERD.CNT(KV$ERD.CUD_CHR);
     1128     6318    6                  END /* If */;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:168  
   6318   1 000791  0F81 0005                            B        s:6320,PREL

     1129     6319    5                  ELSE Y$NOD.TIM = Y$NOD.TIM+Y$NOD.FNCCNT;

   6319   1 000793  DA46 0004                            ADD,R5   4,B6
          1 000795  DF46 0004                            STR,R5   4,B6

     1130     6320    5                  Y$NOD.DVCLIN = RQS.LIN+Y$NOD.DVCLINBIS;

   6320   1 000797  E847 0021                            LDR,R6   RQS,AUTO
          1 000799  EA46 0003                            ADD,R6   3,B6
          1 00079B  EF46 0001                            STR,R6   1,B6

     1131     6321    5                  Y$NOD.TIMBFR = KV$ERD.TMNALG_BFRLF;

   6321   1 00079D  BCC7 0006                            LDB,B3   ERD$,AUTO
          1 00079F  D843 0005                            LDR,R5   5,B3
          1 0007A1  D570 00FF                            AND,R5   255,IMO
          1 0007A3  DF46 0005                            STR,R5   5,B6

     1132     6322    6                  IF Y$NOD.TIMBFR>0 THEN DO;

   6322   1 0007A5  5901 0008                            BEZ,R5   s:6325,PREL

     1133     6323    6                     CALL CMPTMN (Y$NOD.TIMBFR);

   6323   1 0007A7  ABC6 0005                            LAB,B2   5,B6
          1 0007A9  AFC7 0084                            STB,B2   R2+4,AUTO
          1 0007AB  E3C0 04E9                            LNJ,B6   s:0,PREL
          1 0007AD       0001                            DC       s:6325,PREL

     1134     6324    6                  END /* If */;

     1135     6325    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTLF;

   6325   1 0007AE  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0007B0  DCC7 0006                            LDB,B5   ERD$,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:169  
          1 0007B2  E2C5 0005                            LLH,R6   5,B5
          1 0007B4  EF46 0006                            STR,R6   6,B6

     1136     6326    6                  IF Y$NOD.TIMAFT>0 THEN DO;

   6326   1 0007B6  6901 0008                            BEZ,R6   s:6329,PREL

     1137     6327    6                     CALL CMPTMN (Y$NOD.TIMAFT);

   6327   1 0007B8  CBC6 0006                            LAB,B4   6,B6
          1 0007BA  CFC7 0084                            STB,B4   R2+4,AUTO
          1 0007BC  E3C0 04D8                            LNJ,B6   s:0,PREL
          1 0007BE       0001                            DC       s:6329,PREL

     1138     6328    6                  END /* If */;

     1139     6329    5                  Y$NOD.PSTRQR.VRT = '0'B;

   6329   1 0007BF  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0007C1  8806                                 LBF,'0040'X       ,B6
          1 0007C2       0040
          1 0007C3  0F81 008F                            B        s:6390,PREL

     1140     6330        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:170  
     1141     6331    5               CASE (%NODFNC_CR_NEWLIN);

     1142     6332        /* Process newlin (new line).                                                 */
     1143     6333
     1144     6334    5                  IF RQS.LIN+Y$NOD.DVCLINBIS<=Y$NOD.DVCLIN

   6334   1 0007C5  D847 0021                            LDR,R5   RQS,AUTO
          1 0007C7  DA46 0003                            ADD,R5   3,B6
          1 0007C9  D946 0001                            CMR,R5   1,B6
          1 0007CB  0A81 0087                            BALE     s:6390,PREL
          1 0007CD  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 0007CF  82C5 0017                            LB,'2000'X        23,B5
          1 0007D1       2000
          1 0007D2  0501 0006                            BBT      s:6339,PREL
          1 0007D4  82C5 0017                            LB,'0100'X        23,B5
          1 0007D6       0100
          1 0007D7  0581 007B                            BBF      s:6390,PREL

     1145     6335        /* We're not to move down, newline won't help.                                */
     1146     6336    5                    OR NOT %KV_MRD.CRISNL AND NOT %KV_MRD.LFISNL THEN EXIT CASE1;
     1147     6337        /* This device doesn't have a new-line function.                              */
     1148     6338
     1149     6339    5                  Y$NOD.FNCCNT = RQS.LIN+Y$NOD.DVCLINBIS-Y$NOD.DVCLIN;

   6339   1 0007D9  D847 0021                            LDR,R5   RQS,AUTO
          1 0007DB  DA46 0003                            ADD,R5   3,B6
          1 0007DD  D246 0001                            SUB,R5   1,B6
          1 0007DF  DF46 0007                            STR,R5   7,B6

     1150     6340    6                  IF %KV_MRD.LFISNL THEN DO;

   6340   1 0007E1  82C5 0017                            LB,'0100'X        23,B5
   6340   1 0007E3       0100
          1 0007E4  0581 0003                            BBF      s:6345,PREL

     1151     6341        /* This device interprets LF as new-line.                                     */
     1152     6342
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:171  
     1153     6343    6                     Y$NOD.FNC = %NODFNC_LF_NEWLIN;

   6343   1 0007E6  4C0E                                 LDV,R4   14
          1 0007E7  C786                                 STH,R4   ,B6

     1154     6344    6                  END /* If */;

     1155     6345    5                  Y$NOD.DVCCLM = 1;

   6345   1 0007E8  4C01                                 LDV,R4   1
          1 0007E9  CF46 0002                            STR,R4   2,B6

     1156     6346    5                  IF %KV_SRD.SCROLL

   6346   1 0007EB  CCC7 000C                            LDB,B4   SRD$,AUTO
          1 0007ED  82C4 000E                            LB,'0008'X        14,B4
          1 0007EF       0008
          1 0007F0  0581 000F                            BBF      s:6354,PREL
          1 0007F2  A847 0021                            LDR,R2   RQS,AUTO
          1 0007F4  A244 000B                            SUB,R2   11,B4
          1 0007F6  A946 0003                            CMR,R2   3,B6
          1 0007F8  0881 0007                            BAGE     s:6354,PREL

     1157     6347        /* This device is being operated in scroll mode                               */
     1158     6348
     1159     6349    6                    AND Y$NOD.DVCLINBIS>RQS.LIN-%KV_SRD.BTMRHT.LIN THEN DO;

     1160     6350        /* We're causing scrolling, adjust DVCLINBIS by the number of lines scrolled. */
     1161     6351
     1162     6352    6                     Y$NOD.DVCLINBIS = %KV_SRD.BTMRHT.LIN-RQS.LIN;

   6352   1 0007FA  A844 000B                            LDR,R2   11,B4
          1 0007FC  A247 0021                            SUB,R2   RQS,AUTO
          1 0007FE  AF46 0003                            STR,R2   3,B6

     1163     6353    6                  END /* If */;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:172  
     1164     6354    5                  Y$NOD.TIM = Y$NOD.TIM+Y$NOD.FNCCNT;

   6354   1 000800  DA46 0004                            ADD,R5   4,B6
          1 000802  DF46 0004                            STR,R5   4,B6

     1165     6355    5                  Y$NOD.DVCLIN = RQS.LIN+Y$NOD.DVCLINBIS;

   6355   1 000804  A847 0021                            LDR,R2   RQS,AUTO
          1 000806  AA46 0003                            ADD,R2   3,B6
          1 000808  AF46 0001                            STR,R2   1,B6

     1166     6356    5                  Y$NOD.TIMBFR = KV$ERD.TMNALG_BFRLF;

   6356   1 00080A  BCC7 0006                            LDB,B3   ERD$,AUTO
          1 00080C  9843 0005                            LDR,R1   5,B3
          1 00080E  9570 00FF                            AND,R1   255,IMO
          1 000810  9F46 0005                            STR,R1   5,B6

     1167     6357    6                  IF Y$NOD.TIMBFR>0 THEN DO;

   6357   1 000812  1901 0008                            BEZ,R1   s:6360,PREL

     1168     6358    6                     CALL CMPTMN (Y$NOD.TIMBFR);

   6358   1 000814  ABC6 0005                            LAB,B2   5,B6
          1 000816  AFC7 0084                            STB,B2   R2+4,AUTO
          1 000818  E3C0 047C                            LNJ,B6   s:0,PREL
          1 00081A       0001                            DC       s:6360,PREL

     1169     6359    6                  END /* If */;

     1170     6360    5                  Y$NOD.TIMAFT = KV$ERD.TMNALG_AFTLF;

   6360   1 00081B  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 00081D  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 00081F  E2C5 0005                            LLH,R6   5,B5
          1 000821  EF46 0006                            STR,R6   6,B6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:173  

     1171     6361    6                  IF Y$NOD.TIMAFT>0 THEN DO;

   6361   1 000823  6901 0008                            BEZ,R6   s:6364,PREL

     1172     6362    6                     CALL CMPTMN (Y$NOD.TIMAFT);

   6362   1 000825  CBC6 0006                            LAB,B4   6,B6
          1 000827  CFC7 0084                            STB,B4   R2+4,AUTO
          1 000829  E3C0 046B                            LNJ,B6   s:0,PREL
          1 00082B       0001                            DC       s:6364,PREL

     1173     6363    6                  END /* If */;

     1174     6364    5                  Y$NOD.PSTRQR.VRT = '0'B;

   6364   1 00082C  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 00082E  8806                                 LBF,'0040'X       ,B6
          1 00082F       0040

     1175     6365    6                  IF RQS.CLM=1 THEN DO;

   6365   1 000830  E847 0022                            LDR,R6   RQS+1,AUTO
          1 000832  6D01                                 CMV,R6   1
          1 000833  0981 0005                            BNE      s:6373,PREL

     1176     6366    6                     Y$NOD.PSTRQR.HRZ = '0'B;

   6366   1 000835  8806                                 LBF,'0080'X       ,B6
   6366   1 000836       0080

     1177     6367    6                  END; ELSE DO;

   6367   1 000837  0F81 001B                            B        s:6390,PREL

     1178     6368        /* The destination column wasn't column 1.  Before we started
     1179     6369           on this node horizontal positioning may have be done (Y$NOD.PSTRQR.HRZ),
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:174  
     1180     6370           but no longer is.  Don't go on with the previous setting
     1181     6371           of Y$NOD.PSTRQR.HRZ, as it clearly isn't done now.                            */
     1182     6372
     1183     6373    6                     Y$NOD.PSTRQR.HRZ = '1'B;

   6373   1 000839  8906                                 LBT,'0080'X       ,B6
   6373   1 00083A       0080

     1184     6374    6                  END /* If */;

   6374   1 00083B  0F81 0017                            B        s:6390,PREL

     1185     6375        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:175  
     1186     6376    5               CASE (%NODFNC_SP);

     1187     6377        /* Process SP (space)                                                         */
     1188     6378
     1189     6379    5                  IF RQS.CLM<=Y$NOD.DVCCLM THEN EXIT CASE1;

   6379   1 00083D  D847 0022                            LDR,R5   RQS+1,AUTO
          1 00083F  5801 0013                            BLZ,R5   s:6390,PREL
          1 000841  D946 0002                            CMR,R5   2,B6
          1 000843  0381 000F                            BLE      s:6390,PREL

     1190     6380        /* We are not positioning to the right, space won't help.                     */
     1191     6381
     1192     6382    5                  Y$NOD.FNCCNT = RQS.CLM-Y$NOD.DVCCLM;

   6382   1 000845  D246 0002                            SUB,R5   2,B6
          1 000847  DF46 0007                            STR,R5   7,B6

     1193     6383    5                  Y$NOD.TIM = Y$NOD.TIM+Y$NOD.FNCCNT;

   6383   1 000849  DA46 0004                            ADD,R5   4,B6
          1 00084B  DF46 0004                            STR,R5   4,B6

     1194     6384    5                  Y$NOD.DVCCLM = RQS.CLM;

   6384   1 00084D  C847 0022                            LDR,R4   RQS+1,AUTO
          1 00084F  CF46 0002                            STR,R4   2,B6

     1195     6385    5                  Y$NOD.PSTRQR.HRZ = '0'B;

   6385   1 000851  8806                                 LBF,'0080'X       ,B6
   6385   1 000852       0080

     1196     6386    5               END /* Case */;

     1197     6387        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:176  
     1198     6388        /* Now we must decide whether to use the current path or try another.         */
     1199     6389
     1200     6390    4               IF Y$NOD.TIM<SVDPTHEND$->Y$NOD.TIM

   6390   1 000853  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000855  DCC7 0016                            LDB,B5   SVDPTHEND$,AUTO
          1 000857  E846 0004                            LDR,R6   4,B6
          1 000859  E945 0004                            CMR,R6   4,B5
          1 00085B  0281 0066                            BGE      s:6433,PREL
          1 00085D  D846 0007                            LDR,R5   7,B6
          1 00085F  5981 000A                            BNEZ,R5  s:6396,PREL
          1 000861  B847 001A                            LDR,R3   TREX,AUTO
          1 000863  C830 0000 002D  00                   LDR,R4   Y_TREDAT,R3
          1 000866  C570 4000                            AND,R4   16384,IMO
          1 000868  4901 0059                            BEZ,R4   s:6433,PREL

     1201     6391        /* The current path is faster than the saved path.                            */
     1202     6392
     1203     6393    5                 AND (Y$NOD.FNCCNT~=0 OR Y_TRE(TREX)&%TRE_OPT_MSK) THEN DO;

     1204     6394        /* We made some progress, or the branch continues. */
     1205     6395
     1206     6396    6                  IF NOT Y$NOD.PSTRQR THEN DO;

   6396   1 00086A  8286                                 LB,'00C0'X        ,B6
   6396   1 00086B       00C0
          1 00086C  0501 002B                            BBT      s:6414,PREL

     1207     6397        /* The current path completes the positioning request.
     1208     6398           Copy the current path to the save area.                                    */
     1209     6399
     1210     6400    6                     R2 = POFFW(NOD$,SVDPTHEND$)*2;

   6400   1 00086E  8CC7 0008                            LDI      NOD$,AUTO
          1 000870  84C7 0016                            SID      SVDPTHEND$,AUTO
          1 000872  7081                                 DOL,R7   1
          1 000873  E857                                 LDR,R6   R7
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:177  
          1 000874  EF47 0080                            STR,R6   R2,AUTO

     1211     6401    6                     SVDPTHALT$->Y$NODS = CRNPTHBGN$->Y$NODS;

   6401   1 000876  ACC7 0010                            LDB,B2   CRNPTHBGN$,AUTO
          1 000878  2C00                                 LDV,R2   0
          1 000879  BCC7 0014                            LDB,B3   SVDPTHALT$,AUTO
          1 00087B  3C00                                 LDV,R3   0
          1 00087C  0008                                 MMM

     1212     6402    6                     CRNPTHBGN$ = PINCRW(SVDPTHALT$,R2U/2);

   6402   1 00087D  E847 0080                            LDR,R6   R2,AUTO
          1 00087F  6041                                 SOR,R6   1
          1 000880  F856                                 LDR,R7   R6
          1 000881  6C00                                 LDV,R6   0
          1 000882  8447 0014                            AID      SVDPTHALT$,AUTO
          1 000884  8D47 0010                            SDI      CRNPTHBGN$,AUTO

     1213     6403    6                     SVDPTHEND$ = PINCRW(CRNPTHBGN$,-SIZEW(Y$NOD));

   6403   1 000886  ECC7 0010                            LDB,B6   CRNPTHBGN$,AUTO
          1 000888  DBC6 FFF8                            LAB,B5   -8,B6
          1 00088A  DFC7 0016                            STB,B5   SVDPTHEND$,AUTO

     1214     6404    6                     NOD$ = SVDPTHEND$;

   6404   1 00088C  DFC7 0008                            STB,B5   NOD$,AUTO

     1215     6405    6                     IF Y$NOD.TIM<=IMDSTPTIM THEN EXIT LOOP;

   6405   1 00088E  D845 0004                            LDR,R5   4,B5
          1 000890  5801 0005                            BLZ,R5   s:6409,PREL
          1 000892  D947 0019                            CMR,R5   IMDSTPTIM,AUTO
          1 000894  0A81 008B                            BALE     s:6468,PREL

     1216     6406        /* The current time is less than or equal to the
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:178  
     1217     6407           immediate stop time.  Stop without trying other possibilities.             */
     1218     6408
     1219     6409    6                     ELSE GOTO ALT_NODE;

   6409   1 000896  0F81 002B                            B        s:6433,PREL

     1220     6410    6                  END /* If */;
     1221     6411    6                  ELSE DO;

     1222     6412        /* The current path doesn't complete the positioning request.                 */
     1223     6413
     1224     6414    7                     IF Y_TRE.NXTX(TREX)~=0 THEN DO;

   6414   1 000898  B847 001A                            LDR,R3   TREX,AUTO
          1 00089A  3001                                 SOL,R3   1
          1 00089B  3E01                                 ADV,R3   1
          1 00089C  C2B0 0000 002D  00                   LLH,R4   Y_TREDAT,R3
          1 00089F  4901 0022                            BEZ,R4   s:6433,PREL

     1225     6415        /* There is a node under this one in the tree. */
     1226     6416
     1227     6417    8                        IF Y$NOD.FNCCNT~=0 OR Y_TRE(TREX)&%TRE_ALT_MSK THEN DO;

   6417   1 0008A1  5981 000A                            BNEZ,R5  s:6420,PREL
          1 0008A3  A847 001A                            LDR,R2   TREX,AUTO
          1 0008A5  9820 0000 002D  00                   LDR,R1   Y_TREDAT,R2
          1 0008A8  9570 8000                            AND,R1   -32768,IMO
          1 0008AA  1901 0012                            BEZ,R1   s:6425,PREL

     1228     6418        /* Make a new node if we need to look at this one again. */
     1229     6419
     1230     6420    8                           TREX = Y_TRE.NXTX(TREX);

   6420   1 0008AC  CF47 001A                            STR,R4   TREX,AUTO

     1231     6421    8                           PRVNOD$ = NOD$;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:179  
   6421   1 0008AE  EFC7 0012                            STB,B6   PRVNOD$,AUTO

     1232     6422    8                           NOD$ = PINCRW(NOD$,SIZEW(Y$NOD));

   6422   1 0008B0  CBC6 0008                            LAB,B4   8,B6
          1 0008B2  CFC7 0008                            STB,B4   NOD$,AUTO

     1233     6423    8                           Y$NOD = PRVNOD$->Y$NODMOV.COPDWN;

   6423   1 0008B4  5C10                                 LDV,R5   16
          1 0008B5  0021                                 ALR      ;
          1 0008B6       4A06 0000                                ALPHANUM(0,B6,,10),;
          1 0008B8       4004 0000                                ALPHANUM(0,B4,,R5,FILL)

     1234     6424    8                        END;

   6424   1 0008BA  437F                                 CSYNC    s:6423+5,SPREL
          1 0008BB  0F81 FB92                            B        s:6006,PREL

     1235     6425    7                        ELSE TREX = Y_TRE.NXTX(TREX);

   6425   1 0008BD  A854                                 LDR,R2   R4
          1 0008BE  AF47 001A                            STR,R2   TREX,AUTO

     1236     6426    7                     END /* If */;

   6426   1 0008C0  0F81 FB8D                            B        s:6006,PREL

     1237     6427    6                     ELSE GOTO ALT_NODE;
     1238     6428        /* There is no continuation, try for an alternate. */
     1239     6429
     1240     6430    6                  END /* If */;
     1241     6431    5               END /* If */;
     1242     6432        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:180  
     1243     6433    5               ELSE DO;

     1244     6434        /* This branch is slower or wont work. Try something else. */
     1245     6435
     1246     6436    6   ALT_NODE:      DO WHILE TREX~=0 AND NOT Y_TRE(TREX)&%TRE_ALT_MSK;

   6436   1 0008C2  0F81 0016            ALT_NODE        B        s:6443,PREL

     1247     6437    7                     IF NOD$=CRNPTHBGN$ THEN DO;

   6437   1 0008C4  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0008C6  EDC7 0010                            CMB,B6   CRNPTHBGN$,AUTO
          1 0008C8  0981 0005                            BNE      s:6441,PREL

     1248     6438        /* We're back up to the top of the current trial branch.                      */
     1249     6439    7                        NOD$=SVDPTHALT$;

   6439   1 0008CA  DCC7 0014                            LDB,B5   SVDPTHALT$,AUTO
          1 0008CC  DFC7 0008                            STB,B5   NOD$,AUTO

     1250     6440    7                     END;

     1251     6441    6                     NOD$ = PINCRW(NOD$, -SIZEW(Y$NOD));

   6441   1 0008CE  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0008D0  DBC6 FFF8                            LAB,B5   -8,B6
          1 0008D2  DFC7 0008                            STB,B5   NOD$,AUTO

     1252     6442    6                     TREX = Y$NOD.TREX;

   6442   1 0008D4  E805                                 LDR,R6   ,B5
          1 0008D5  E570 003F                            AND,R6   63,IMO
          1 0008D7  EF47 001A                            STR,R6   TREX,AUTO

     1253     6443    6                  END /* While */;

   6443   1 0008D9  E847 001A                            LDR,R6   TREX,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:181  
          1 0008DB  6901 0008                            BEZ,R6   s:6444,PREL
          1 0008DD  B856                                 LDR,R3   R6
          1 0008DE  D830 0000 002D  00                   LDR,R5   Y_TREDAT,R3
          1 0008E1  D570 8000                            AND,R5   -32768,IMO
          1 0008E3  5961                                 BEZ,R5   s:6437,SPREL

     1254     6444    5                  IF TREX=0 THEN EXIT LOOP;

   6444   1 0008E4  6901 003B                            BEZ,R6   s:6468,PREL

     1255     6445        /* If we've run out of alternatives, use whatever we've found. */
     1256     6446
     1257     6447    5                  TREX = TREX+1;

   6447   1 0008E6  8AC7 001A                            INC      TREX,AUTO

     1258     6448    6                  IF NOD$<CRNPTHBGN$ THEN DO;

   6448   1 0008E8  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0008EA  EDC7 0010                            CMB,B6   CRNPTHBGN$,AUTO
          1 0008EC  0281 0014                            BGE      s:6458,PREL

     1259     6449        /* We're trying an alternative to the saved path. Set up accordingly. */
     1260     6450
     1261     6451    6                     SVDPTHALT$ = NOD$;

   6451   1 0008EE  EFC7 0014                            STB,B6   SVDPTHALT$,AUTO

     1262     6452    6                     PRVNOD$ = PINCRW(NOD$, -SIZEW(Y$NOD));

   6452   1 0008F0  DBC6 FFF8                            LAB,B5   -8,B6
          1 0008F2  DFC7 0012                            STB,B5   PRVNOD$,AUTO

     1263     6453    6                     NOD$ = CRNPTHBGN$;

   6453   1 0008F4  CCC7 0010                            LDB,B4   CRNPTHBGN$,AUTO
          1 0008F6  CFC7 0008                            STB,B4   NOD$,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:182  

     1264     6454    6                     Y$NOD = PRVNOD$->Y$NODMOV.COPDWN;

   6454   1 0008F8  5C10                                 LDV,R5   16
          1 0008F9  0021                                 ALR      ;
          1 0008FA       4A05 0000                                ALPHANUM(0,B5,,10),;
          1 0008FC       4004 0000                                ALPHANUM(0,B4,,R5,FILL)

     1265     6455    6                  END; ELSE DO;

   6455   1 0008FE  437F                                 CSYNC    s:6454+5,SPREL
          1 0008FF  0F81 FB4E                            B        s:6006,PREL

     1266     6456        /* We're just trying to find an alternate path that works. */
     1267     6457
     1268     6458    6                     IF NOD$>CRNPTHBGN$ THEN PRVNOD$ = PINCRW(NOD$, -SIZEW(Y$NOD));

   6458   1 000901  EDC7 0010                            CMB,B6   CRNPTHBGN$,AUTO
          1 000903  0381 0007                            BLE      s:6459,PREL

   6458   1 000905  DBC6 FFF8                            LAB,B5   -8,B6
          1 000907  DFC7 0012                            STB,B5   PRVNOD$,AUTO
          1 000909  0F81 0007                            B        s:6460,PREL

     1269     6459    6                     ELSE PRVNOD$ = PINCRW(SVDPTHALT$, -SIZEW(Y$NOD));

   6459   1 00090B  DCC7 0014                            LDB,B5   SVDPTHALT$,AUTO
          1 00090D  CBC5 FFF8                            LAB,B4   -8,B5
          1 00090F  CFC7 0012                            STB,B4   PRVNOD$,AUTO

     1270     6460    6                     IF Y$NOD.FNCCNT~=0

   6460   1 000911  E846 0007                            LDR,R6   7,B6
          1 000913  6901 FB3A                            BEZ,R6   s:6006,PREL

     1271     6461        /* Make a new copy if this one has been used. */
     1272     6462
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:183  
     1273     6463    6                     THEN Y$NOD = PRVNOD$->Y$NODMOV.COPDWN;

   6463   1 000915  DCC7 0012                            LDB,B5   PRVNOD$,AUTO
          1 000917  5C10                                 LDV,R5   16
          1 000918  0021                                 ALR      ;
          1 000919       4A05 0000                                ALPHANUM(0,B5,,10),;
          1 00091B       4006 0000                                ALPHANUM(0,B6,,R5,FILL)

     1274     6464    6                  END /* If */;

     1275     6465    5               END /* If */;

     1276     6466    4            END LOOP;

   6466   1 00091D  437F                                 CSYNC    s:6463+7,SPREL
          1 00091E  0F81 FB2F                            B        s:6006,PREL

     1277     6467        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:184  
     1278     6468    4            IF SVDPTHEND$->Y$NOD.TIM~=BITBIN('7FFF'X) THEN DO;

   6468   1 000920  ECC7 0016                            LDB,B6   SVDPTHEND$,AUTO
          1 000922  E846 0004                            LDR,R6   4,B6
          1 000924  E970 7FFF                            CMR,R6   32767,IMO
          1 000926  0901 0226                            BE       s:6682,PREL

     1279     6469        /* The bottom node doesn't have the initial (dummy) time value in it,
     1280     6470           so we found a path that does the required positioning.                     */
     1281     6471
     1282     6472    4               NOD$ = ADDR(CRNPTH(0));

   6472   1 000928  DBC7 002C                            LAB,B5   CRNPTH,AUTO
          1 00092A  DFC7 0008                            STB,B5   NOD$,AUTO

     1283     6473    5               DO WHILE NOD$<SVDPTHEND$;

   6473   1 00092C  DDC7 0016                            CMB,B5   SVDPTHEND$,AUTO
          1 00092E  0281 020A                            BGE      s:6677,PREL

     1284     6474        /* This loop is traversed for each node in the path we are processing.        */
     1285     6475
     1286     6476    5                  NOD$ = PINCRW(NOD$, SIZEW(Y$NOD));

   6476   1 000930  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000932  DBC6 0008                            LAB,B5   8,B6
          1 000934  DFC7 0008                            STB,B5   NOD$,AUTO

     1287     6477    6                  DO WHILE Y$NOD.FNCCNT~=0; /* Loop start                        */

   6477   1 000936  E845 0007                            LDR,R6   7,B5
          1 000938  6901 01FA                            BEZ,R6   s:6676,PREL

     1288     6478        /* This loop is traversed once for each occurence of the specified
     1289     6479           function, unless the function processing resets the count.                 */
     1290     6480
     1291     6481    7                     DO CASE (Y$NOD.FNC);
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:185  

   6481   1 00093A  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 00093C  B286                                 LLH,R3   ,B6
          1 00093D  3D11                                 CMV,R3   17
          1 00093E  0281 01D3                            BGE      s:6664,PREL
          1 000940  A830 0000 0946  01                   LDR,R2   s:6481+12,R3
          1 000943  83A0 0000 0957  01                   JMP      s:6486,R2
          1 000946       01BB                            DC       s:6664,PREL
          1 000947       0000                            DC       s:6486,PREL
          1 000948       0047                            DC       s:6521,PREL
          1 000949       017F                            DC       s:6642,PREL
          1 00094A       0047                            DC       s:6521,PREL
          1 00094B       0039                            DC       s:6514,PREL
          1 00094C       0039                            DC       s:6514,PREL
          1 00094D       0039                            DC       s:6514,PREL
          1 00094E       0085                            DC       s:6551,PREL
          1 00094F       0039                            DC       s:6514,PREL
          1 000950       01BB                            DC       s:6664,PREL
          1 000951       0113                            DC       s:6593,PREL
          1 000952       0000                            DC       s:6486,PREL
          1 000953       017F                            DC       s:6642,PREL
          1 000954       017F                            DC       s:6642,PREL
          1 000955       0000                            DC       s:6486,PREL
          1 000956       0000                            DC       s:6486,PREL

     1292     6482        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:186  
     1293     6483    7                     CASE (%NODFNC_BS, %NODFNC_SP, %NODFNC_HT, %NODFNC_NXTHT);

     1294     6484        /* Generate characters for BS (backspace), SP (space), HT, and NXTHT (tab).   */
     1295     6485
     1296     6486    8                        IF Y$NOD.TIMAFT=0 THEN DO;

   6486   1 000957  E846 0006                            LDR,R6   6,B6
          1 000959  6981 000A                            BNEZ,R6  s:6490,PREL

     1297     6487    8                           USR_OTPRPTCHR.CNT = Y$NOD.FNCCNT;

   6487   1 00095B  D846 0007                            LDR,R5   7,B6
          1 00095D  DF47 007F                            STR,R5   USR_OTPRPTCHR+1,AUTO

     1298     6488    8                           Y$NOD.FNCCNT = 1;

   6488   1 00095F  6C01                                 LDV,R6   1
          1 000960  EF46 0007                            STR,R6   7,B6

     1299     6489    8                        END; ELSE DO;

   6489   1 000962  0F81 0004                            B        s:6492,PREL

     1300     6490    8                           USR_OTPRPTCHR.CNT = 1;

   6490   1 000964  5C01                                 LDV,R5   1
          1 000965  DF47 007F                            STR,R5   USR_OTPRPTCHR+1,AUTO

     1301     6491    8                        END;

     1302     6492    7                        USR_OTPRPTCHR.CHR = NODFNCCHR(Y$NOD.FNC);

   6492   1 000967  B286                                 LLH,R3   ,B6
          1 000968  E0B0 0000 0000  00                   LDH,R6   NODFNCDAT,R3
          1 00096B  EAC7 007E                            SRM,R6,'00FF'X    USR_OTPRPTCHR,AUTO
          1 00096D       00FF

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:187  
     1303     6493    7                        CALL OTPRPTCHR;

   6493   1 00096E  E3C0 03F8                            LNJ,B6   s:0,PREL
          1 000970       0001                            DC       s:6494,PREL

     1304     6494    8                        IF %KV_MRD.AUTONL AND Y$NOD.DVCCLM>%KV_MRD.WDT THEN DO;

   6494   1 000971  ECC7 000A                            LDB,B6   MRD$,AUTO
          1 000973  82C6 0017                            LB,'1000'X        23,B6
          1 000975       1000
          1 000976  0581 019B                            BBF      s:6664,PREL
          1 000978  DCC7 0008                            LDB,B5   NOD$,AUTO
          1 00097A  E845 0002                            LDR,R6   2,B5
          1 00097C  E946 000B                            CMR,R6   11,B6
          1 00097E  0381 0193                            BLE      s:6664,PREL

     1305     6495        /* We just put a blank in the right margin,
     1306     6496           but the terminal added a newline. Account for it.                          */
     1307     6497
     1308     6498    8                           Y$NOD.DVCCLM = 1;

   6498   1 000980  6C01                                 LDV,R6   1
          1 000981  EF45 0002                            STR,R6   2,B5

     1309     6499    8                           Y$NOD.DVCLIN = Y$NOD.DVCLIN+1;

   6499   1 000983  8AC5 0001                            INC      1,B5

     1310     6500        /* Not to worry about PSTRQR, it they were cleared, the request cant be
     1311     6501           accomplished on this device.                                               */
     1312     6502
     1313     6503    8                           CALL AUTONLTMN;

   6503   1 000985  E3C0 0296                            LNJ,B6   s:0,PREL
          1 000987       0001                            DC       s:6504,PREL

     1314     6504    8                           Y$NOD.TIMAFT = USR_OTPRPTCHR.CNT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:188  

   6504   1 000988  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 00098A  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 00098C  EF46 0006                            STR,R6   6,B6

     1315     6505    8                        END /* If */;

   6505   1 00098E  0F81 0183                            B        s:6664,PREL

     1316     6506        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:189  
     1317     6507    7                     CASE (%NODFNC_CUB,%NODFNC_CUD,%NODFNC_CUF,%NODFNC_CUU);

     1318     6508        /* Generate characters for:
     1319     6509           CUB (cursor back)
     1320     6510           CUD (cursor down)
     1321     6511           CUF (cursor forward)
     1322     6512           CUU (cursor up)                                                            */
     1323     6513
     1324     6514    7                        CRNPTH(0) = NODFNCOFS(Y$NOD.FNC);

   6514   1 000990  E2B0 0000 0000  00                   LLH,R6   NODFNCDAT,R3
          1 000993  EF47 002C                            STR,R6   CRNPTH,AUTO

     1325     6515    7                        CALL DVCCTR (CRNPTH(0));

   6515   1 000995  DBC7 002C                            LAB,B5   CRNPTH,AUTO
          1 000997  DFC7 0084                            STB,B5   R2+4,AUTO
          1 000999  E3C0 04F8                            LNJ,B6   s:0,PREL
          1 00099B       0001                            DC       s:6515+7,PREL
          1 00099C  0F81 0175                            B        s:6664,PREL

     1326     6516        /*N* TIMING?? (MIN FOR FNC ON FAST LINE)                                      */
     1327     6517        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:190  
     1328     6518    7                     CASE (%NODFNC_CR, %NODFNC_CR_NO_OPT);

     1329     6519        /* Generate characters for CR (carriage return).                              */
     1330     6520
     1331     6521    8                        IF %KV_MRD.DVCFLWCTRALG=0 THEN DO;

   6521   1 00099E  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 0009A0  82C5 0015                            LB,'00FF'X        21,B5
          1 0009A2       00FF
          1 0009A3  0501 0011                            BBT      s:6532,PREL

     1332     6522        /* There is no flow control algorithm, so generate the timing characters. */
     1333     6523
     1334     6524    9                           IF Y$NOD.TIMBFR>0 THEN DO;

   6524   1 0009A5  E846 0005                            LDR,R6   5,B6
          1 0009A7  6901 000D                            BEZ,R6   s:6532,PREL

     1335     6525        /* We're to send timing characters before the CR.                             */
     1336     6526
     1337     6527    9                              USR_OTPRPTCHR.CNT = Y$NOD.TIMBFR;

   6527   1 0009A9  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO

     1338     6528    9                              USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;

   6528   1 0009AB  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 0009AD  D844 0007                            LDR,R5   7,B4
          1 0009AF  DAC7 007E                            SRM,R5,'00FF'X    USR_OTPRPTCHR,AUTO
          1 0009B1       00FF

     1339     6529    9                              CALL OTPRPTCHR;

   6529   1 0009B2  E3C0 03B4                            LNJ,B6   s:0,PREL
          1 0009B4       0001                            DC       s:6532,PREL

     1340     6530    9                           END /* If */;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:191  

     1341     6531    8                        END /* If */;

     1342     6532    7                        USR_OTPRPTCHR.CNT = 1;

   6532   1 0009B5  6C01                                 LDV,R6   1
          1 0009B6  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO

     1343     6533    7                        USR_OTPRPTCHR.CHR = BITASC(%ASCIICR);

   6533   1 0009B8  5C0D                                 LDV,R5   13
          1 0009B9  DAC7 007E                            SRM,R5,'00FF'X    USR_OTPRPTCHR,AUTO
          1 0009BB       00FF

     1344     6534    7                        CALL OTPRPTCHR;

   6534   1 0009BC  E3C0 03AA                            LNJ,B6   s:0,PREL
          1 0009BE       0001                            DC       s:6535,PREL

     1345     6535    8                        IF NOD$<SVDPTHEND$ THEN DO;

   6535   1 0009BF  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0009C1  EDC7 0016                            CMB,B6   SVDPTHEND$,AUTO
          1 0009C3  0381 014E                            BLE      s:6664,PREL

     1346     6536        /* There is a node below the current node. See if it's a line feed.           */
     1347     6537
     1348     6538    8                           B4 = PINCRW(NOD$,SIZEW(Y$NOD));

   6538   1 0009C5  DBC6 0008                            LAB,B5   8,B6
          1 0009C7  DFC7 000E                            STB,B5   B4,AUTO

     1349     6539    9                           IF B4->Y$NOD.FNC=%NODFNC_LF THEN DO;

   6539   1 0009C9  E285                                 LLH,R6   ,B5
          1 0009CA  6D0D                                 CMV,R6   13
          1 0009CB  0981 0146                            BNE      s:6664,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:192  

     1350     6540        /* The node below is a line feed.  Subtract the time for it from
     1351     6541           the time-after for the CR.                                                 */
     1352     6542
     1353     6543    9                              Y$NOD.TIMAFT = MAXIMUM(0,

   6543   1 0009CD  D846 0006                            LDR,R5   6,B6
          1 0009CF  DA46 0004                            ADD,R5   4,B6
          1 0009D1  D245 0004                            SUB,R5   4,B5
          1 0009D3  D970 0000                            CMR,R5   0,IMO
          1 0009D5  0881 0002                            BAGE     s:6543+11,PREL
          1 0009D7  5C00                                 LDV,R5   0
          1 0009D8  DF46 0006                            STR,R5   6,B6

     1354     6544    9                                Y$NOD.TIMAFT+Y$NOD.TIM- B4->Y$NOD.TIM);
     1355     6545    9                           END /* If */;

     1356     6546    8                        END /* If */;

   6546   1 0009DA  0F81 0137                            B        s:6664,PREL

     1357     6547        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:193  
     1358     6548    7                     CASE (%NODFNC_CUP);

     1359     6549        /* Generate characters for CUP (cursor position).                             */
     1360     6550
     1361     6551    8                        IF KV$ERD.CUP_ALG=%KV_CUP_ALG_ANS THEN DO;

   6551   1 0009DC  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 0009DE  E2C5 0015                            LLH,R6   21,B5
          1 0009E0  6D01                                 CMV,R6   1
          1 0009E1  0981 002E                            BNE      s:6564,PREL

     1362     6552        /* Generate cursor position characters for the ANS X3.64 algorithm.           */
     1363     6553
     1364     6554    8                           CHRBFRD(0) =

   6554   1 0009E3  8CF0 031B 5B00                       LDI      52124416,IMO
          1 0009E6  8D47 002C                            SDI      CRNPTH,AUTO

     1365     6555    8                             %BITBIN (CONCAT('03'X, ASCIIESC, ASCIICSI7, '00'X));
     1366     6556    8                           CALL OTPANSPN (Y$NOD.DVCLIN);

   6556   1 0009E8  CBC6 0001                            LAB,B4   1,B6
          1 0009EA  CFC7 0084                            STB,B4   R2+4,AUTO
          1 0009EC  E3C0 046B                            LNJ,B6   s:0,PREL
          1 0009EE       0001                            DC       s:6557,PREL

     1367     6557    8                           CHRBFRA(CHRBFRA(0)) = %BITBIN(ASCIISEMCLN);

   6557   1 0009EF  6C3B                                 LDV,R6   59
          1 0009F0  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 0009F2  3E58                                 ADV,R3   88
          1 0009F3  E7B7                                 STH,R6   ,AUTO,R3

     1368     6558    8                           CHRBFRA(0) = CHRBFRA(0)+1;

   6558   1 0009F4  D2C7 002C                            LLH,R5   CRNPTH,AUTO
          1 0009F6  5E01                                 ADV,R5   1
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:194  
          1 0009F7  D7C7 002C                            STH,R5   CRNPTH,AUTO

     1369     6559    8                           CALL OTPANSPN (Y$NOD.DVCCLM);

   6559   1 0009F9  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 0009FB  DBC6 0002                            LAB,B5   2,B6
          1 0009FD  DFC7 0084                            STB,B5   R2+4,AUTO
          1 0009FF  E3C0 0458                            LNJ,B6   s:0,PREL
          1 000A01       0001                            DC       s:6560,PREL

     1370     6560    8                           CHRBFRA(CHRBFRA(0)) = %BITBIN(ASCIIH);

   6560   1 000A02  6C48                                 LDV,R6   72
          1 000A03  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 000A05  3E58                                 ADV,R3   88
          1 000A06  E7B7                                 STH,R6   ,AUTO,R3

     1371     6561    8                           CALL DVCCTR (0);

   6561   1 000A07  EBF0 0000                            LAB,B6   0,IMO
          1 000A09  EFC7 0084                            STB,B6   R2+4,AUTO
          1 000A0B  E3C0 0486                            LNJ,B6   s:0,PREL
          1 000A0D       0001                            DC       s:6562,PREL

     1372     6562    8                        END /* If */;

   6562   1 000A0E  0F81 0103                            B        s:6664,PREL

     1373     6563        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:195  
     1374     6564    8                        ELSE IF KV$ERD.CUP_ALG=%KV_CUP_ALG_TBL THEN DO;

   6564   1 000A10  6D02                                 CMV,R6   2
          1 000A11  0981 0100                            BNE      s:6664,PREL

     1375     6565        /* Generate cursor positioning characters for the table-driven algorithm.     */
     1376     6566
     1377     6567    8                           CHRBFRA(0) = KV$ERD.CNT(KV$ERD.CUP_CHR);

   6567   1 000A13  9845 0020                            LDR,R1   32,B5
          1 000A15  9570 00FF                            AND,R1   255,IMO
          1 000A17  1E5A                                 ADV,R1   90
          1 000A18  D295                                 LLH,R5   ,B5,R1
          1 000A19  D7C7 002C                            STH,R5   CRNPTH,AUTO

     1378     6568    8                           CRNPTH(5) = Y$NOD.DVCCLM+KV$ERD.CUP_BIS;

   6568   1 000A1B  E845 0015                            LDR,R6   21,B5
          1 000A1D  E570 00FF                            AND,R6   255,IMO
          1 000A1F  EA46 0002                            ADD,R6   2,B6
          1 000A21  EF47 0031                            STR,R6   CRNPTH+5,AUTO

     1379     6569    8                           CRNPTH(4) = Y$NOD.DVCLIN+KV$ERD.CUP_BIS;

   6569   1 000A23  D845 0015                            LDR,R5   21,B5
          1 000A25  D570 00FF                            AND,R5   255,IMO
          1 000A27  DA46 0001                            ADD,R5   1,B6
          1 000A29  DF47 0030                            STR,R5   CRNPTH+4,AUTO

     1380     6570    9                           IF KV$ERD.CUP_CMP THEN DO;

   6570   1 000A2B  82C5 0016                            LB,'4000'X        22,B5
   6570   1 000A2D       4000
          1 000A2E  0581 0007                            BBF      s:6575,PREL

     1381     6571        /* The position values are to be complemented first. */
     1382     6572    9                              CRNPTH(5) = -CRNPTH(5);
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:196  

   6572   1 000A30  8256                                 NEG      R6
          1 000A31  EF47 0031                            STR,R6   CRNPTH+5,AUTO

     1383     6573    9                              CRNPTH(4) = -CRNPTH(4);

   6573   1 000A33  8255                                 NEG      R5
          1 000A34  DF47 0030                            STR,R5   CRNPTH+4,AUTO

     1384     6574    9                           END;

     1385     6575    9                           IF KV$ERD.CUP_CLMFRS THEN DO;

   6575   1 000A36  89C5 0016                            CMZ      22,B5
          1 000A38  0881 000D                            BAGE     s:6581,PREL

     1386     6576        /* We are to send the column first.                                        */
     1387     6577    9                              CHRBFRA (CHRBFRA(0)+1) = CRNPTH(5);

   6577   1 000A3A  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 000A3C  3E59                                 ADV,R3   89
          1 000A3D  E7B7                                 STH,R6   ,AUTO,R3

     1388     6578    9                              CHRBFRA (CHRBFRA(0)+2) = CRNPTH(4);

   6578   1 000A3E  E847 0030                            LDR,R6   CRNPTH+4,AUTO
          1 000A40  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 000A42  3E5A                                 ADV,R3   90
          1 000A43  E7B7                                 STH,R6   ,AUTO,R3

     1389     6579    9                           END /* If */;

   6579   1 000A44  0F81 000B                            B        s:6584,PREL

     1390     6580    9                           ELSE DO;

     1391     6581    9                              CHRBFRA (CHRBFRA(0)+1) = CRNPTH(4);
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:197  

   6581   1 000A46  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 000A48  3E59                                 ADV,R3   89
          1 000A49  D7B7                                 STH,R5   ,AUTO,R3

     1392     6582    9                              CHRBFRA (CHRBFRA(0)+2) = CRNPTH(5);

   6582   1 000A4A  E847 0031                            LDR,R6   CRNPTH+5,AUTO
          1 000A4C  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 000A4E  3E5A                                 ADV,R3   90
          1 000A4F  E7B7                                 STH,R6   ,AUTO,R3

     1393     6583    9                           END /* If */;

     1394     6584    8                           CALL INSERT (CHRBFR,1,CHRBFRA(0),

   6584   1 000A50  E845 0020                            LDR,R6   32,B5
          1 000A52  E570 00FF                            AND,R6   255,IMO
          1 000A54  AB85                                 LAB,B2   ,B5
          1 000A55  A856                                 LDR,R2   R6
          1 000A56  2E5B                                 ADV,R2   91
          1 000A57  E2C7 002C                            LLH,R6   CRNPTH,AUTO
          1 000A59  BB87                                 LAB,B3   ,AUTO
          1 000A5A  3C59                                 LDV,R3   89
          1 000A5B  0008                                 MMM

     1395     6585    8                             SUBSTR(KV$ERD.TXT,KV$ERD.CUP_CHR+1,CHRBFRA(0)));
     1396     6586    8                           CHRBFRA(0) = CHRBFRA(0)+2;

   6586   1 000A5C  E2C7 002C                            LLH,R6   CRNPTH,AUTO
          1 000A5E  6E02                                 ADV,R6   2
          1 000A5F  E7C7 002C                            STH,R6   CRNPTH,AUTO

     1397     6587    8                           CALL DVCCTR (0);

   6587   1 000A61  EBF0 0000                            LAB,B6   0,IMO
          1 000A63  EFC7 0084                            STB,B6   R2+4,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:198  
          1 000A65  E3C0 042C                            LNJ,B6   s:0,PREL
          1 000A67       0001                            DC       s:6588,PREL

     1398     6588    8                        END /* If */;

   6588   1 000A68  0F81 00A9                            B        s:6664,PREL

     1399     6589        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:199  
     1400     6590    7                     CASE (%NODFNC_HPA);

     1401     6591        /* Generate characters for HPA (horizontal position absolute).                */
     1402     6592
     1403     6593    8                        DO CASE (KV$ERD.HPA_ALG);

   6593   1 000A6A  DCC7 0006                            LDB,B5   ERD$,AUTO
          1 000A6C  9845 0014                            LDR,R1   20,B5
          1 000A6E  9570 00FF                            AND,R1   255,IMO
          1 000A70  1D05                                 CMV,R1   5
          1 000A71  0281 00A0                            BGE      s:6664,PREL
          1 000A73  B810 0000 0A79  01                   LDR,R3   s:6593+15,R1
          1 000A76  83B0 0000 0A7E  01                   JMP      s:6598,R3
          1 000A79       0056                            DC       s:6635,PREL
          1 000A7A       0000                            DC       s:6598,PREL
          1 000A7B       002A                            DC       s:6616,PREL
          1 000A7C       003D                            DC       s:6631,PREL
          1 000A7D       0000                            DC       s:6598,PREL

     1404     6594    8                        CASE (%KV_HPA_ALG_ANS, %KV_HPA_ALG_CHA);

     1405     6595
     1406     6596        /* Generate horizontal position absolute characters for ANS X3.64 algorithm. */
     1407     6597
     1408     6598    8                           CHRBFRD(0) =

   6598   1 000A7E  8CF0 031B 5B00                       LDI      52124416,IMO
          1 000A81  8D47 002C                            SDI      CRNPTH,AUTO

     1409     6599    8                             %BITBIN (CONCAT('03'X, ASCIIESC, ASCIICSI7, '00'X));
     1410     6600    8                           CALL OTPANSPN (Y$NOD.DVCCLM);

   6600   1 000A83  CBC6 0002                            LAB,B4   2,B6
          1 000A85  CFC7 0084                            STB,B4   R2+4,AUTO
          1 000A87  E3C0 03D0                            LNJ,B6   s:0,PREL
          1 000A89       0001                            DC       s:6601,PREL

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:200  
     1411     6601    8                           IF KV$ERD.HPA_ALG=%KV_HPA_ALG_ANS

   6601   1 000A8A  ECC7 0006                            LDB,B6   ERD$,AUTO
          1 000A8C  E846 0014                            LDR,R6   20,B6
          1 000A8E  E570 00FF                            AND,R6   255,IMO
          1 000A90  6D01                                 CMV,R6   1
          1 000A91  0981 0008                            BNE      s:6603,PREL

     1412     6602    8                           THEN CALL INSERT (CHRBFR,CHRBFRA(0),1, BITASC('60'X));

   6602   1 000A93  5C60                                 LDV,R5   96
          1 000A94  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 000A96  3E58                                 ADV,R3   88
          1 000A97  D7B7                                 STH,R5   ,AUTO,R3
          1 000A98  0F81 0006                            B        s:6604,PREL

     1413     6603    8                           ELSE CALL INSERT (CHRBFR,CHRBFRA(0),1, 'G');

   6603   1 000A9A  5C47                                 LDV,R5   71
          1 000A9B  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 000A9D  3E58                                 ADV,R3   88
          1 000A9E  D7B7                                 STH,R5   ,AUTO,R3

     1414     6604    8                           CALL DVCCTR (0);

   6604   1 000A9F  DBF0 0000                            LAB,B5   0,IMO
          1 000AA1  DFC7 0084                            STB,B5   R2+4,AUTO
          1 000AA3  E3C0 03EE                            LNJ,B6   s:0,PREL
          1 000AA5       0001                            DC       s:6604+7,PREL
          1 000AA6  0F81 006B                            B        s:6664,PREL

     1415     6605        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:201  
     1416     6606    8                        CASE (%KV_HPA_ALG_DBL);

     1417     6607
     1418     6608        /* Generate horizontal position absolute characters for
     1419     6609           the Diablo-compatible algorithm.
     1420     6610
     1421     6611           The characters to generate are:
     1422     6612              1st - ESC
     1423     6613              2nd - HT
     1424     6614              3rd - Column (in binary)                                                */
     1425     6615
     1426     6616    8                           CHRBFRD(0) =

   6616   1 000AA8  8CF0 031B 0900                       LDI      52103424,IMO
          1 000AAB  8D47 002C                            SDI      CRNPTH,AUTO

     1427     6617    8                             %BITBIN (CONCAT('03'X, ASCIIESC, ASCIIHT, '00'X));
     1428     6618    8                           CHRBFRA(3) = Y$NOD.DVCCLM;

   6618   1 000AAD  D846 0002                            LDR,R5   2,B6
          1 000AAF  DAC7 002D                            SRM,R5,'00FF'X    CRNPTH+1,AUTO
          1 000AB1       00FF

     1429     6619    8                           CALL DVCCTR (0);

   6619   1 000AB2  CBF0 0000                            LAB,B4   0,IMO
          1 000AB4  CFC7 0084                            STB,B4   R2+4,AUTO
          1 000AB6  E3C0 03DB                            LNJ,B6   s:0,PREL
          1 000AB8       0001                            DC       s:6619+7,PREL
          1 000AB9  0F81 0058                            B        s:6664,PREL

     1430     6620        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:202  
     1431     6621    8                        CASE (%KV_HPA_ALG_NEC);

     1432     6622
     1433     6623        /* Generate horizontal position absolute characters for
     1434     6624           The NEC-compatible (5510/5520) algorithm.
     1435     6625
     1436     6626           The characters to generate are:
     1437     6627              1st - ESC
     1438     6628              2nd - column/32 + '50'X
     1439     6629              3rd - MOD(column,32) + X'3F'                                      */
     1440     6630
     1441     6631    8                           CRNPTH(0) = %BITBIN (CONCAT('03'X, ASCIIESC));

   6631   1 000ABB  E870 031B                            LDR,R6   795,IMO
          1 000ABD  EF47 002C                            STR,R6   CRNPTH,AUTO

     1442     6632    8                           CHRBFRA(2) = Y$NOD.DVCCLM/32+BITBIN('50'X);

   6632   1 000ABF  D846 0002                            LDR,R5   2,B6
          1 000AC1  5045                                 SOR,R5   5
          1 000AC2  5E50                                 ADV,R5   80
          1 000AC3  D7C7 002D                            STH,R5   CRNPTH+1,AUTO

     1443     6633    8                           CHRBFRA(3) = MOD(Y$NOD.DVCCLM,32)+BITBIN('3F'X);

   6633   1 000AC5  D846 0002                            LDR,R5   2,B6
          1 000AC7  D570 001F                            AND,R5   31,IMO
          1 000AC9  5E3F                                 ADV,R5   63
          1 000ACA  DAC7 002D                            SRM,R5,'00FF'X    CRNPTH+1,AUTO
          1 000ACC       00FF

     1444     6634    8                           CALL DVCCTR (0);

   6634   1 000ACD  CBF0 0000                            LAB,B4   0,IMO
          1 000ACF  CFC7 0084                            STB,B4   R2+4,AUTO
          1 000AD1  E3C0 03C0                            LNJ,B6   s:0,PREL
          1 000AD3       0001                            DC       s:6635,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:203  

     1445     6635    8                        END /* Case */;

   6635   1 000AD4  0F81 003D                            B        s:6664,PREL

     1446     6636        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:204  
     1447     6637    7                     CASE (%NODFNC_LF, %NODFNC_CR_NEWLIN, %NODFNC_LF_NEWLIN);

     1448     6638        /* Generate characters for LF (line feed).                                    */
     1449     6639        /* Generate characters for CR_NEWLIN (CR interpreted as new-line).            */
     1450     6640        /* Generate characters for LF_NEWLIN (LF interpreted as new-line).            */
     1451     6641
     1452     6642    8                        IF %KV_MRD.DVCFLWCTRALG=0 THEN DO;

   6642   1 000AD6  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000AD8  82C5 0015                            LB,'00FF'X        21,B5
          1 000ADA       00FF
          1 000ADB  0501 001E                            BBT      s:6656,PREL

     1453     6643        /* There is no flow control algorithm, so generate the timing characters.     */
     1454     6644
     1455     6645    9                           IF Y$NOD.TIMBFR>0 THEN DO;

   6645   1 000ADD  E846 0005                            LDR,R6   5,B6
          1 000ADF  6901 001A                            BEZ,R6   s:6656,PREL

     1456     6646        /* We're to send timing characters before the LF.                             */
     1457     6647
     1458     6648    9                              USR_OTPRPTCHR.CNT = Y$NOD.TIMBFR;

   6648   1 000AE1  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO

     1459     6649    9                              USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;

   6649   1 000AE3  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 000AE5  D844 0007                            LDR,R5   7,B4
          1 000AE7  DAC7 007E                            SRM,R5,'00FF'X    USR_OTPRPTCHR,AUTO
          1 000AE9       00FF

     1460     6650    9                              CALL OTPRPTCHR;

   6650   1 000AEA  E3C0 027C                            LNJ,B6   s:0,PREL
          1 000AEC       0001                            DC       s:6651,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:205  

     1461     6651    9                              IF KV$ERD.TMNALG_BFRLF=3 THEN Y$NOD.TIMBFR = 0;

   6651   1 000AED  ECC7 0006                            LDB,B6   ERD$,AUTO
          1 000AEF  E846 0005                            LDR,R6   5,B6
          1 000AF1  E570 00FF                            AND,R6   255,IMO
          1 000AF3  6D03                                 CMV,R6   3
          1 000AF4  0981 0005                            BNE      s:6656,PREL

   6651   1 000AF6  DCC7 0008                            LDB,B5   NOD$,AUTO
          1 000AF8  8745 0005                            CL       5,B5

     1462     6652    9                           END /* If */;

     1463     6653    8                        END /* If */;

     1464     6654        /*N* PROBLEMS ON MOD 40 - SHORT LINE, LF, LF, LINE STARTING TO RIGHT OF SHORT */
     1465     6655        /*N* LINE - WRONG TIMING.  FIX UP LF TIMING FOR 40                            */
     1466     6656    7                        USR_OTPRPTCHR.CHR = NODFNCCHR(Y$NOD.FNC);

   6656   1 000AFA  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000AFC  B286                                 LLH,R3   ,B6
          1 000AFD  E0B0 0000 0000  00                   LDH,R6   NODFNCDAT,R3
          1 000B00  EAC7 007E                            SRM,R6,'00FF'X    USR_OTPRPTCHR,AUTO
          1 000B02       00FF

     1467     6657    7                        USR_OTPRPTCHR.CNT = 1;

   6657   1 000B03  6C01                                 LDV,R6   1
          1 000B04  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO

     1468     6658    7                        CALL OTPRPTCHR;

   6658   1 000B06  E3C0 0260                            LNJ,B6   s:0,PREL
          1 000B08       0001                            DC       s:6659,PREL

     1469     6659    7                        %KV_VDI.OTPCHRCNTAFTLF = 0-%KV_VDI.TMPOTPCHRCNT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:206  

   6659   1 000B09  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000B0C  DC86                                 LDB,B5   ,B6
          1 000B0D  E845 0015                            LDR,R6   21,B5
          1 000B0F  8256                                 NEG      R6
          1 000B10  EF45 001C                            STR,R6   28,B5

     1470     6660        /*N* THIS REALLY ISN'T IN THE RIGHT PLACE - SHOULD CARRY DOWN                 */
     1471     6661        /*N* CNTAFTLF IN Y$NOD - CONTIGUOUS LF'S... MAY NOT MAKE A                    */
     1472     6662        /*N* SIGNIFICANT DIFFERENCE.  WOULD FIT IN A BYTE...                          */
     1473     6663    7                     END /* Case */;

     1474     6664    6                     IF Y$NOD.TIMAFT>0

   6664   1 000B12  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000B14  E846 0006                            LDR,R6   6,B6
          1 000B16  6901 0014                            BEZ,R6   s:6674,PREL
          1 000B18  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000B1A  82C5 0015                            LB,'00FF'X        21,B5
          1 000B1C       00FF
          1 000B1D  0501 000D                            BBT      s:6674,PREL

     1475     6665        /* We're to send timing characters after the function.                        */
     1476     6666
     1477     6667    7                       AND %KV_MRD.DVCFLWCTRALG=0 THEN DO;

     1478     6668        /* There is no flow control algorithm, so generate the timing characters.     */
     1479     6669
     1480     6670    7                        USR_OTPRPTCHR.CNT = Y$NOD.TIMAFT;

   6670   1 000B1F  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO

     1481     6671    7                        USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;

   6671   1 000B21  CCC7 0006                            LDB,B4   ERD$,AUTO
          1 000B23  D844 0007                            LDR,R5   7,B4
          1 000B25  DAC7 007E                            SRM,R5,'00FF'X    USR_OTPRPTCHR,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:207  
          1 000B27       00FF

     1482     6672    7                        CALL OTPRPTCHR;

   6672   1 000B28  E3C0 023E                            LNJ,B6   s:0,PREL
          1 000B2A       0001                            DC       s:6674,PREL

     1483     6673    7                     END /* If */;

     1484     6674    6                     Y$NOD.FNCCNT = Y$NOD.FNCCNT-1;

   6674   1 000B2B  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000B2D  88C6 0007                            DEC      7,B6

     1485     6675    6                  END /* Loop on FNCCNT */;

   6675   1 000B2F  E846 0007                            LDR,R6   7,B6
          1 000B31  6981 FE08                            BNEZ,R6  s:6481,PREL

     1486     6676    5               END /* Loop on NOD$ */;

   6676   1 000B33  ECC7 0008                            LDB,B6   NOD$,AUTO
          1 000B35  EDC7 0016                            CMB,B6   SVDPTHEND$,AUTO
          1 000B37  0201 FDF8                            BL       s:6476,PREL

     1487     6677    4               %KV_SRD.DVCLINBIS = Y$NOD.DVCLINBIS;

   6677   1 000B39  ECC7 000C                            LDB,B6   SRD$,AUTO
          1 000B3B  DCC7 0008                            LDB,B5   NOD$,AUTO
          1 000B3D  E845 0003                            LDR,R6   3,B5
          1 000B3F  EF46 0019                            STR,R6   25,B6

     1488     6678    4               %KV_MRD.DVCLIN = Y$NOD.DVCLIN;

   6678   1 000B41  CCC7 000A                            LDB,B4   MRD$,AUTO
          1 000B43  D845 0001                            LDR,R5   1,B5
          1 000B45  DF44 001D                            STR,R5   29,B4
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:208  

     1489     6679    4               %KV_MRD.DVCCLM = Y$NOD.DVCCLM;

   6679   1 000B47  E845 0002                            LDR,R6   2,B5
          1 000B49  EF44 001E                            STR,R6   30,B4

     1490     6680    4            END;

   6680   1 000B4B  0F81 0049                            B        s:6714,PREL

     1491     6681        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:209  
     1492     6682    4            ELSE IF NOT FLG.BROKE THEN DO;

   6682   1 000B4D  82C7 002B                            LB,'1000'X        FLG,AUTO
   6682   1 000B4F       1000
          1 000B50  0501 0020                            BBT      s:6702,PREL

     1493     6683        /* There is no path thru the tree that will get us from
     1494     6684           our current position to the desired position.
     1495     6685
     1496     6686           Try (once) changing the request to get to the next line,
     1497     6687
     1498     6688           but only after trying once with "any" positioning mode.                    */
     1499     6689
     1500     6690    5               IF NOT FLG.ERRED THEN DO;

   6690   1 000B52  82C7 002B                            LB,'2000'X        FLG,AUTO
   6690   1 000B54       2000
          1 000B55  0501 0009                            BBT      s:6694,PREL

     1501     6691    5                  FLG.ERRED = '1'B;

   6691   1 000B57  8947 002B                            LBT,'2000'X       FLG,AUTO
   6691   1 000B59       2000

     1502     6692    5                  PHSPSTMOD = %KV_PHSPSTMOD_ANY;

   6692   1 000B5A  5C03                                 LDV,R5   3
          1 000B5B  DF47 0029                            STR,R5   PHSPSTMOD,AUTO

     1503     6693    5               END; ELSE DO;

   6693   1 000B5D  0F81 000B                            B        s:6697,PREL

     1504     6694    5                  FLG.BROKE = '1'B;

   6694   1 000B5F  8947 002B                            LBT,'1000'X       FLG,AUTO
   6694   1 000B61       1000
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:210  

     1505     6695    5                  %KV_VDI.UN_KNWPST = '1'B;

   6695   1 000B62  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000B65  CC85                                 LDB,B4   ,B5
          1 000B66  8944 001D                            LBT,'1000'X       29,B4
          1 000B68       1000

     1506     6696    5               END /* If */;

     1507     6697    4               FLG.LOP = '1'B;

   6697   1 000B69  8947 002B                            LBT,'8000'X       FLG,AUTO
   6697   1 000B6B       8000

     1508     6698    4               KV_PSTERRCNT = KV_PSTERRCNT+1;

   6698   1 000B6C  8A80 0000 0000  xsym                 INC      KV_PSTERRCNT

     1509     6699    4            END; ELSE DO;

   6699   1 000B6F  0F81 0025                            B        s:6714,PREL

     1510     6700        /* We tried and failed, even with the unknown position tree, give up. */
     1511     6701
     1512     6702    4               FLG.LOP = '0'B;

   6702   1 000B71  8847 002B                            LBF,'8000'X       FLG,AUTO
   6702   1 000B73       8000

     1513     6703    4               %KV_MRD.DVCCLM = USR_PST.PHSPST.CLM;

   6703   1 000B74  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000B76  CCC7 0004                            LDB,B4   @PARM,AUTO
          1 000B78  D844 0002                            LDR,R5   2,B4
          1 000B7A  DF45 001E                            STR,R5   30,B5

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:211  
     1514     6704    4               %KV_MRD.DVCLIN = USR_PST.PHSPST.LIN+%KV_SRD.DVCLINBIS;

   6704   1 000B7C  BCC7 000C                            LDB,B3   SRD$,AUTO
          1 000B7E  E844 0001                            LDR,R6   1,B4
          1 000B80  EA43 0019                            ADD,R6   25,B3
          1 000B82  EF45 001D                            STR,R6   29,B5

     1515     6705    5               IF %KV_MRD.DVCLIN>%KV_SRD.BTMRHT.LIN AND %KV_SRD.SCROLL THEN DO;

   6705   1 000B84  E943 000B                            CMR,R6   11,B3
          1 000B86  0A81 000E                            BALE     s:6714,PREL
          1 000B88  82C3 000E                            LB,'0008'X        14,B3
          1 000B8A       0008
          1 000B8B  0581 0009                            BBF      s:6714,PREL

     1516     6706        /* We're in scrolling mode, the device is capable of scrolling,
     1517     6707           and the computed device line is illegal. Fix it.                              */
     1518     6708    5                  %KV_SRD.DVCLINBIS = %KV_MRD.DVCLIN-%KV_SRD.BTMRHT.LIN;

   6708   1 000B8D  E243 000B                            SUB,R6   11,B3
          1 000B8F  EF43 0019                            STR,R6   25,B3

     1519     6709    5                  %KV_MRD.DVCLIN = %KV_SRD.BTMRHT.LIN;

   6709   1 000B91  D843 000B                            LDR,R5   11,B3
          1 000B93  DF45 001D                            STR,R5   29,B5

     1520     6710    5               END /* If */;

     1521     6711    4            END /* If */;

     1522     6712        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:212  
     1523     6713    3         END /* If */;

     1524     6714    2         IF NOT FLG.LOP THEN EXIT;

   6714   1 000B95  89C7 002B                            CMZ      FLG,AUTO
          1 000B97  0881 007B                            BAGE     s:6739,PREL

     1525     6715    3         IF PHSPSTMOD>%KV_PHSPSTMOD_ANY THEN DO;

   6715   1 000B99  E847 0029                            LDR,R6   PHSPSTMOD,AUTO
          1 000B9B  6D03                                 CMV,R6   3
          1 000B9C  0A81 F555                            BALE     s:5745,PREL

     1526     6716    3            IF SCRCNT>0 THEN USR_OTPRPTCHR.CNT = SCRCNT;

   6716   1 000B9E  D847 002A                            LDR,R5   SCRCNT,AUTO
          1 000BA0  5A81 0005                            BLEZ,R5  s:6717,PREL

   6716   1 000BA2  DF47 007F                            STR,R5   USR_OTPRPTCHR+1,AUTO
          1 000BA4  0F81 0004                            B        s:6718,PREL

     1527     6717    3            ELSE USR_OTPRPTCHR.CNT = -SCRCNT;

   6717   1 000BA6  8255                                 NEG      R5
          1 000BA7  DF47 007F                            STR,R5   USR_OTPRPTCHR+1,AUTO

     1528     6718    3            IF PHSPSTMOD>=%KV_PHSPSTMOD_VRTSCR+2

   6718   1 000BA9  6D06                                 CMV,R6   6
          1 000BAA  0801 004E                            BAL      s:6733,PREL

     1529     6719    3            THEN IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR+2

   6719   1 000BAC  0981 001E                            BNE      s:6724,PREL

     1530     6720    3            THEN IF NOT KV$ERD.RGNSCR OR SCRCNT>0

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:213  
   6720   1 000BAE  ECC7 0006                            LDB,B6   ERD$,AUTO
          1 000BB0  82C6 0016                            LB,'0008'X        22,B6
          1 000BB2       0008
          1 000BB3  0581 0005                            BBF      s:6721,PREL
          1 000BB5  C847 002A                            LDR,R4   SCRCNT,AUTO
          1 000BB7  4A81 000A                            BLEZ,R4  s:6722,PREL

     1531     6721    3            THEN CALL DVCCTRCNT (%KV$ERD_ILN_CHR#/8);

   6721   1 000BB9  DBF0 0054                            LAB,B5   84,IMO
          1 000BBB  DFC7 0084                            STB,B5   R2+4,AUTO
          1 000BBD  E3C0 02DA                            LNJ,B6   s:0,PREL
          1 000BBF       0001                            DC       s:6721+7,PREL
          1 000BC0  0F81 004B                            B        s:6736,PREL

     1532     6722    3            ELSE CALL DVCCTRCNT (%KV$ERD_DLN_CHR#/8);

   6722   1 000BC2  DBF0 0055                            LAB,B5   85,IMO
          1 000BC4  DFC7 0084                            STB,B5   R2+4,AUTO
          1 000BC6  E3C0 02D1                            LNJ,B6   s:0,PREL
          1 000BC8       0001                            DC       s:6722+7,PREL
          1 000BC9  0F81 0042                            B        s:6736,PREL

     1533     6723    4            ELSE DO;

     1534     6724    5               IF KV$ERD.RSTINSMOD_CHR~=0 THEN DO;

   6724   1 000BCB  ECC7 0006                            LDB,B6   ERD$,AUTO
          1 000BCD  C2C6 0020                            LLH,R4   32,B6
          1 000BCF  4901 0020                            BEZ,R4   s:6731,PREL

     1535     6725    5                  CALL DVCCTR (%KV$ERD_ICH_CHR#/8);

   6725   1 000BD1  DBF0 003E                            LAB,B5   62,IMO
          1 000BD3  DFC7 0084                            STB,B5   R2+4,AUTO
          1 000BD5  E3C0 02BC                            LNJ,B6   s:0,PREL
          1 000BD7       0001                            DC       s:6726,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:214  

     1536     6726    5                  USR_OTPRPTCHR.CHR = ' ';

   6726   1 000BD8  6C20                                 LDV,R6   32
          1 000BD9  EAC7 007E                            SRM,R6,'00FF'X    USR_OTPRPTCHR,AUTO
          1 000BDB       00FF

     1537     6727    5                  %KV_MRD.DVCCLM = %KV_MRD.DVCCLM+USR_OTPRPTCHR.CNT;

   6727   1 000BDC  ECC7 000A                            LDB,B6   MRD$,AUTO
          1 000BDE  D846 001E                            LDR,R5   30,B6
          1 000BE0  DA47 007F                            ADD,R5   USR_OTPRPTCHR+1,AUTO
          1 000BE2  DF46 001E                            STR,R5   30,B6

     1538     6728    5                  CALL OTPRPTCHR;

   6728   1 000BE4  E3C0 0182                            LNJ,B6   s:0,PREL
          1 000BE6       0001                            DC       s:6729,PREL

     1539     6729    5                  CALL DVCCTR (%KV$ERD_RSTINSMOD_CHR#/8);

   6729   1 000BE7  EBF0 0040                            LAB,B6   64,IMO
          1 000BE9  EFC7 0084                            STB,B6   R2+4,AUTO
          1 000BEB  E3C0 02A6                            LNJ,B6   s:0,PREL
          1 000BED       0001                            DC       s:6730,PREL

     1540     6730    5               END;

   6730   1 000BEE  0F81 001D                            B        s:6736,PREL

     1541     6731    4               ELSE CALL DVCCTRCNT (%KV$ERD_ICH_CHR#/8);

   6731   1 000BF0  DBF0 003E                            LAB,B5   62,IMO
          1 000BF2  DFC7 0084                            STB,B5   R2+4,AUTO
          1 000BF4  E3C0 02A3                            LNJ,B6   s:0,PREL
          1 000BF6       0001                            DC       s:6732,PREL

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:215  
     1542     6732    4            END;

   6732   1 000BF7  0F81 0014                            B        s:6736,PREL

     1543     6733    3            ELSE IF PHSPSTMOD=%KV_PHSPSTMOD_VRTSCR

   6733   1 000BF9  6D04                                 CMV,R6   4
          1 000BFA  0981 000A                            BNE      s:6735,PREL

     1544     6734    3            THEN CALL DVCCTRCNT (%KV$ERD_DLN_CHR#/8);

   6734   1 000BFC  EBF0 0055                            LAB,B6   85,IMO
          1 000BFE  EFC7 0084                            STB,B6   R2+4,AUTO
          1 000C00  E3C0 0297                            LNJ,B6   s:0,PREL
          1 000C02       0001                            DC       s:6734+7,PREL
          1 000C03  0F81 0008                            B        s:6736,PREL

     1545     6735    3            ELSE CALL DVCCTRCNT (%KV$ERD_DCH_CHR#/8);

   6735   1 000C05  EBF0 003F                            LAB,B6   63,IMO
          1 000C07  EFC7 0084                            STB,B6   R2+4,AUTO
          1 000C09  E3C0 028E                            LNJ,B6   s:0,PREL
          1 000C0B       0001                            DC       s:6736,PREL

     1546     6736    3            PHSPSTMOD = PHSPSTMOD+2;

   6736   1 000C0C  E847 0029                            LDR,R6   PHSPSTMOD,AUTO
          1 000C0E  6E02                                 ADV,R6   2
          1 000C0F  EF47 0029                            STR,R6   PHSPSTMOD,AUTO

     1547     6737    3         END;

     1548     6738    2      END /* Loop */;

   6738   1 000C11  0F81 F4E0                            B        s:5745,PREL

     1549     6739    1      %KV_SRD.HI_NONBLN_PST = HI_NONBLN_PST;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:216  

   6739   1 000C13  8CC7 0025                            LDI      HI_NONBLN,AUTO
          1 000C15  ECC7 000C                            LDB,B6   SRD$,AUTO
          1 000C17  8D46 0017                            SDI      23,B6

     1550     6740    1      RETURN;

   6740   1 000C19  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1551     6741        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:217  
     1552     6742    1   AUTONLTMN: PROC;

   6742   1 000C1C  EFC7 0082            AUTONLTMN       STB,B6   R2+2,AUTO

     1553     6743    2   DCL KV$ERD_WRD(0:0) UBIN BASED(ERD$) ALIGNED;
     1554     6744    2      USR_OTPRPTCHR.CNT = 0;

   6744   1 000C1E  8747 007F                            CL       USR_OTPRPTCHR+1,AUTO

     1555     6745    2      IF %KV_MRD.DVCFLWCTRALG~=0 THEN RETURN;

   6745   1 000C20  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000C22  82C5 0015                            LB,'00FF'X        21,B5
          1 000C24       00FF
          1 000C25  0581 0005                            BBF      s:6749,PREL

   6745   1 000C27  ECC7 0082                            LDB,B6   R2+2,AUTO
          1 000C29  C3C6 0001                            LNJ,B4   1,B6

     1556     6746
     1557     6747        /* Get the max the timing for CR, LF, or CUP from the right margin.           */
     1558     6748
     1559     6749    2      R2 = %KV$ERD_TMNALG_AFTCUP#/16;

   6749   1 000C2B  6C06                                 LDV,R6   6
          1 000C2C  EF47 0080                            STR,R6   R2,AUTO

     1560     6750    3      DO WHILE ('1'B);                     /* Loop start                         */

     1561     6751    4         DO CASE (KV$ERD_WRD(R2));

   6751   1 000C2E  ECC7 0006                            LDB,B6   ERD$,AUTO
          1 000C30  B847 0080                            LDR,R3   R2,AUTO
          1 000C32  A836                                 LDR,R2   ,B6,R3
          1 000C33  2D04                                 CMV,R2   4
          1 000C34  0281 0035                            BGE      s:6768,PREL
          1 000C36  9820 0000 0C3C  01                   LDR,R1   s:6751+14,R2
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:218  
          1 000C39  8390 0000 0C40  01                   JMP      s:6756,R1
          1 000C3C       002A                            DC       s:6768,PREL
          1 000C3D       0000                            DC       s:6756,PREL
          1 000C3E       0012                            DC       s:6761,PREL
          1 000C3F       0020                            DC       s:6766,PREL

     1562     6752    4         CASE (1);

     1563     6753
     1564     6754        /* Horizontal algorithm - PRM1*WDT+PRM2                                       */
     1565     6755
     1566     6756    4            USR_OTPRPTCHR.CNT = MAXIMUM (USR_OTPRPTCHR.CNT,

   6756   1 000C40  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000C42  E846 000B                            LDR,R6   11,B6
          1 000C44  EB45 000B                            MUL,R6   11,B5
          1 000C46  EA46 000C                            ADD,R6   12,B6
          1 000C48  E947 007F                            CMR,R6   USR_OTPRPTCHR+1,AUTO
          1 000C4A  0881 0003                            BAGE     s:6756+14,PREL
          1 000C4C  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 000C4E  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO
          1 000C50  0F81 0019                            B        s:6768,PREL

     1567     6757    4              KV$ERD.TMNALG_PRM1*%KV_MRD.WDT+KV$ERD.TMNALG_PRM2);
     1568     6758    4         CASE (2);

     1569     6759        /* Vertical algorithm - PRM6(*1)+PRM7                                         */
     1570     6760
     1571     6761    4            USR_OTPRPTCHR.CNT = MAXIMUM (USR_OTPRPTCHR.CNT,

   6761   1 000C52  E846 0010                            LDR,R6   16,B6
          1 000C54  EA46 0011                            ADD,R6   17,B6
          1 000C56  E947 007F                            CMR,R6   USR_OTPRPTCHR+1,AUTO
          1 000C58  0881 0003                            BAGE     s:6761+10,PREL
          1 000C5A  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 000C5C  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO
          1 000C5E  0F81 000B                            B        s:6768,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:219  

     1572     6762    4              KV$ERD.TMNALG_PRM6+KV$ERD.TMNALG_PRM7);
     1573     6763    4         CASE (3);

     1574     6764        /* S&m - PRM8?                                                                */
     1575     6765
     1576     6766    4            USR_OTPRPTCHR.CNT = MAXIMUM (USR_OTPRPTCHR.CNT, KV$ERD.TMNALG_PRM8);

   6766   1 000C60  E846 0012                            LDR,R6   18,B6
          1 000C62  E947 007F                            CMR,R6   USR_OTPRPTCHR+1,AUTO
          1 000C64  0881 0003                            BAGE     s:6766+8,PREL
          1 000C66  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 000C68  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO

     1577     6767    4         END /* Case */;

     1578     6768    3         IF R2=%KV$ERD_TMNALG_AFTCUP#/16

   6768   1 000C6A  3D06                                 CMV,R3   6
          1 000C6B  0981 0012                            BNE      s:6774,PREL

     1579     6769    3         THEN IF KV$ERD.CUP_ALG~=0 AND %KV_MRD.DVCLIN<%KV_MRD.LNG THEN EXIT;

   6769   1 000C6D  E2C6 0015                            LLH,R6   21,B6
          1 000C6F  6901 0009                            BEZ,R6   s:6773,PREL
          1 000C71  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000C73  D2C5 0015                            LLH,R5   21,B5
          1 000C75  D945 001D                            CMR,R5   29,B5
          1 000C77  0A01 000E                            BAG      s:6777,PREL

     1580     6770        /* The device can position directly, and we're not
     1581     6771           scrolling - just do the CUP timing                                         */
     1582     6772
     1583     6773    3         ELSE R2 = %KV$ERD_TMNALG_AFTLF#/16;

   6773   1 000C79  3C05                                 LDV,R3   5
          1 000C7A  BF47 0080                            STR,R3   R2,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:220  
          1 000C7C  0F81 FFB1                            B        s:6751,PREL

     1584     6774    3         ELSE IF R2=%KV$ERD_TMNALG_AFTCR#/16 THEN EXIT;

   6774   1 000C7E  3D04                                 CMV,R3   4
          1 000C7F  0901 0006                            BE       s:6777,PREL

     1585     6775    3         ELSE R2 = %KV$ERD_TMNALG_AFTCR#/16;

   6775   1 000C81  3C04                                 LDV,R3   4
          1 000C82  BF47 0080                            STR,R3   R2,AUTO

     1586     6776    3      END /* Loop */;

   6776   1 000C84  0F81 FFA9                            B        s:6751,PREL

     1587     6777    2      IF USR_OTPRPTCHR.CNT~=0

   6777   1 000C86  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 000C88  6901 0008                            BEZ,R6   s:6779,PREL

     1588     6778    2      THEN USR_OTPRPTCHR.CNT = USR_OTPRPTCHR.CNT/TIMPERCHR;

   6778   1 000C8A  F856                                 LDR,R7   R6
          1 000C8B  6C00                                 LDV,R6   0
          1 000C8C  F347 0018                            DIV,R7   TIMPERCHR,AUTO
          1 000C8E  E857                                 LDR,R6   R7
          1 000C8F  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO

     1589     6779    2      RETURN;

   6779   1 000C91  ECC7 0082                            LDB,B6   R2+2,AUTO
          1 000C93  C3C6 0001                            LNJ,B4   1,B6

     1590     6780    2   END AUTONLTMN;
     1591     6781        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:221  
     1592     6782        /* Compute the timing for this function.                                      */
     1593     6783
     1594     6784    1   CMPTMN: PROC (TMN);

   6784   1 000C95  EFC7 0082            CMPTMN          STB,B6   R2+2,AUTO

     1595     6785    2   DCL TMN SBIN;
     1596     6786    2   DCL TIM SBIN;
     1597     6787        /*N* When PL6 does divide sensibly: DCL TIM SBIN(32); */
     1598     6788    2   DCL 1 TST REDEF TIM,
     1599     6789        /*N* See above. 2 S SBIN,*/
     1600     6790    2          2 U UBIN;
     1601     6791    3      DO CASE (TMN);

   6791   1 000C97  DCC7 0084                            LDB,B5   @TMN,AUTO
          1 000C99  B805                                 LDR,R3   ,B5
          1 000C9A  3D04                                 CMV,R3   4
          1 000C9B  0281 00C7                            BGE      s:6854,PREL
          1 000C9D  A830 0000 0CA3  01                   LDR,R2   s:6791+12,R3
          1 000CA0  83A0 0000 0CA7  01                   JMP      s:6803,R2
          1 000CA3       00BC                            DC       s:6854,PREL
          1 000CA4       0000                            DC       s:6803,PREL
          1 000CA5       0060                            DC       s:6830,PREL
          1 000CA6       0096                            DC       s:6844,PREL

     1602     6792    3      CASE (1);

     1603     6793        /* Algorithm used after horizontal movement on terminals with
     1604     6794           moving carriages and on CRT's at high speeds.
     1605     6795
     1606     6796           Time = TMNALG_PRM1 * Columns-moved + TMNALG_PRM2
     1607     6797
     1608     6798           If the time computed is less than the cross-over point KV$ERD.TMNALG_PRM3,
     1609     6799           then the time is re-computed with:
     1610     6800
     1611     6801           Time = TMNALG_PRM4 * Square-root (10 * Columns-moved) + TMNALG_PRM5 */
     1612     6802
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:222  
     1613     6803    4         IF Y$NOD.FNC~=%NODFNC_HT AND Y$NOD.FNC~=%NODFNC_NXTHT THEN DO;

   6803   1 000CA7  CCC7 0008                            LDB,B4   NOD$,AUTO
          1 000CA9  E284                                 LLH,R6   ,B4
          1 000CAA  6D0C                                 CMV,R6   12
          1 000CAB  0901 0013                            BE       s:6806+2,PREL
          1 000CAD  6D0F                                 CMV,R6   15
          1 000CAE  0901 0010                            BE       s:6806+2,PREL

     1614     6804    4            R2 = PRVNOD$->Y$NOD.DVCCLM-Y$NOD.DVCCLM;

   6804   1 000CB0  BCC7 0012                            LDB,B3   PRVNOD$,AUTO
          1 000CB2  D843 0002                            LDR,R5   2,B3
          1 000CB4  D244 0002                            SUB,R5   2,B4
          1 000CB6  DF47 0080                            STR,R5   R2,AUTO

     1615     6805    4            IF R2<0 THEN R2 = -R2;

   6805   1 000CB8  5881 000A                            BGEZ,R5  s:6807,PREL

   6805   1 000CBA  8255                                 NEG      R5
          1 000CBB  DF47 0080                            STR,R5   R2,AUTO

     1616     6806    3         END; ELSE R2 = MAXTAB;

   6806   1 000CBD  0F81 0005                            B        s:6807,PREL

   6806   1 000CBF  D847 0020                            LDR,R5   MAXTAB,AUTO
          1 000CC1  DF47 0080                            STR,R5   R2,AUTO

     1617     6807    3         TIM = R2*KV$ERD.TMNALG_PRM1+KV$ERD.TMNALG_PRM2;

   6807   1 000CC3  BCC7 0006                            LDB,B3   ERD$,AUTO
          1 000CC5  DB43 000B                            MUL,R5   11,B3
          1 000CC7  DA43 000C                            ADD,R5   12,B3
          1 000CC9  DF47 0086                            STR,R5   TIM,AUTO

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:223  
     1618     6808    4         IF TIM<KV$ERD.TMNALG_PRM3 THEN DO;

   6808   1 000CCB  D943 000D                            CMR,R5   13,B3
          1 000CCD  0881 0028                            BAGE     s:6822,PREL

     1619     6809        /* The computed time is less than the cross-over point time.
     1620     6810           Re-compute the time using the alternate expression.                        */
     1621     6811
     1622     6812    4            R2 = R2*10;

   6812   1 000CCF  C847 0080                            LDR,R4   R2,AUTO
          1 000CD1  4F0A                                 MLV,R4   10
          1 000CD2  CF47 0080                            STR,R4   R2,AUTO

     1623     6813    4            TST.U = R2/3;

   6813   1 000CD4  C370 0003                            DIV,R4   3,IMO
          1 000CD6  CF47 0086                            STR,R4   TIM,AUTO

     1624     6814    5            DO WHILE TST.U*TST.U>R2U;      /* Loop start                         */

   6814   1 000CD8  0F81 000C                            B        s:6819,PREL

     1625     6815        /* This loop is traversed until the square root is found,
     1626     6816           by averaging a test value and its inverse. */
     1627     6817
     1628     6818    5               TST.U = (R2U/TST.U+TST.U)/2;

   6818   1 000CDA  F847 0080                            LDR,R7   R2,AUTO
          1 000CDC  6C00                                 LDV,R6   0
          1 000CDD  F347 0086                            DIV,R7   TIM,AUTO
          1 000CDF  E857                                 LDR,R6   R7
          1 000CE0  EA47 0086                            ADD,R6   TIM,AUTO
          1 000CE2  6041                                 SOR,R6   1
          1 000CE3  EF47 0086                            STR,R6   TIM,AUTO

     1629     6819    5            END /* Loop */;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:224  

   6819   1 000CE5  F847 0086                            LDR,R7   TIM,AUTO
          1 000CE7  FB57                                 MUL,R7   R7
          1 000CE8  E857                                 LDR,R6   R7
          1 000CE9  E947 0080                            CMR,R6   R2,AUTO
          1 000CEB  036F                                 BG       s:6818,SPREL

     1630     6820    4            TIM = TST.U*KV$ERD.TMNALG_PRM4+KV$ERD.TMNALG_PRM5;

   6820   1 000CEC  ECC7 0006                            LDB,B6   ERD$,AUTO
          1 000CEE  E847 0086                            LDR,R6   TIM,AUTO
          1 000CF0  EB46 000E                            MUL,R6   14,B6
          1 000CF2  EA46 000F                            ADD,R6   15,B6
          1 000CF4  EF47 0086                            STR,R6   TIM,AUTO

     1631     6821    4         END /* If */;

     1632     6822    3         TMN = TIM/TIMPERCHR;

   6822   1 000CF6  E847 0086                            LDR,R6   TIM,AUTO
          1 000CF8  E347 0018                            DIV,R6   TIMPERCHR,AUTO
          1 000CFA  ECC7 0084                            LDB,B6   @TMN,AUTO
          1 000CFC  EF06                                 STR,R6   ,B6

     1633     6823    3         Y$NOD.TIM = TMN*Y$NOD.FNCCNT+Y$NOD.TIM;

   6823   1 000CFD  DCC7 0008                            LDB,B5   NOD$,AUTO
          1 000CFF  EB45 0007                            MUL,R6   7,B5
          1 000D01  EA45 0004                            ADD,R6   4,B5
          1 000D03  EF45 0004                            STR,R6   4,B5
          1 000D05  0F81 005D                            B        s:6854,PREL

     1634     6824    3      CASE (2);

     1635     6825        /* Algorithm used after a line feed on terminals with
     1636     6826           moving carriages and on CRT's at high speeds.
     1637     6827
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:225  
     1638     6828           Time = (TMNALG_PRM6 x movement-in-lines) + TMNALG_PRM7       */
     1639     6829
     1640     6830    4         IF Y$NOD.FNC=%NODFNC_FF OR Y$NOD.FNC=%NODFNC_VPA THEN DO;

   6830   1 000D07  CCC7 0008                            LDB,B4   NOD$,AUTO
          1 000D09  E284                                 LLH,R6   ,B4
          1 000D0A  6D0A                                 CMV,R6   10
          1 000D0B  0901 0004                            BE       s:6831,PREL
          1 000D0D  6D11                                 CMV,R6   17
          1 000D0E  0981 001C                            BNE      s:6835+2,PREL

     1641     6831    4            R2 = Y$NOD.DVCLIN-PRVNOD$->Y$NOD.DVCLIN;

   6831   1 000D10  BCC7 0012                            LDB,B3   PRVNOD$,AUTO
          1 000D12  D844 0001                            LDR,R5   1,B4
          1 000D14  D243 0001                            SUB,R5   1,B3
          1 000D16  DF47 0080                            STR,R5   R2,AUTO

     1642     6832    4            IF R2<0 THEN R2 = -R2;

   6832   1 000D18  5881 0004                            BGEZ,R5  s:6833,PREL

   6832   1 000D1A  8255                                 NEG      R5
          1 000D1B  DF47 0080                            STR,R5   R2,AUTO

     1643     6833    4            TIM = R2*KV$ERD.TMNALG_PRM6+KV$ERD.TMNALG_PRM7;

   6833   1 000D1D  ACC7 0006                            LDB,B2   ERD$,AUTO
          1 000D1F  DB42 0010                            MUL,R5   16,B2
          1 000D21  DA42 0011                            ADD,R5   17,B2
          1 000D23  DF47 0086                            STR,R5   TIM,AUTO

     1644     6834    4            TMN = TIM/TIMPERCHR;

   6834   1 000D25  D347 0018                            DIV,R5   TIMPERCHR,AUTO
          1 000D27  B855                                 LDR,R3   R5
          1 000D28  BF05                                 STR,R3   ,B5
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:226  

     1645     6835    3         END; ELSE TMN = (KV$ERD.TMNALG_PRM6+KV$ERD.TMNALG_PRM7)/TIMPERCHR;

   6835   1 000D29  0F81 000B                            B        s:6836,PREL

   6835   1 000D2B  BCC7 0006                            LDB,B3   ERD$,AUTO
          1 000D2D  D843 0010                            LDR,R5   16,B3
          1 000D2F  DA43 0011                            ADD,R5   17,B3
          1 000D31  D347 0018                            DIV,R5   TIMPERCHR,AUTO
          1 000D33  B855                                 LDR,R3   R5
          1 000D34  BF05                                 STR,R3   ,B5

     1646     6836    3         Y$NOD.TIM = TMN*Y$NOD.FNCCNT+Y$NOD.TIM;

   6836   1 000D35  BB44 0007                            MUL,R3   7,B4
          1 000D37  BA44 0004                            ADD,R3   4,B4
          1 000D39  BF44 0004                            STR,R3   4,B4
          1 000D3B  0F81 0027                            B        s:6854,PREL

     1647     6837    3      CASE (3);

     1648     6838        /* Algorithm used before a line feed on belt and chain printers.
     1649     6839
     1650     6840           Time = MAX (0, TMNALG_PRM8 - time_since_last_line_feed)
     1651     6841
     1652     6842           If time_since_last_line_feed is 0, then no fill is generated.             */
     1653     6843
     1654     6844    4         IF %KV_VDI.OTPCHRCNTAFTLF+%KV_VDI.TMPOTPCHRCNT>0 THEN DO;

   6844   1 000D3D  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 000D40  BC84                                 LDB,B3   ,B4
          1 000D41  E843 001C                            LDR,R6   28,B3
          1 000D43  EA43 0015                            ADD,R6   21,B3
          1 000D45  6A81 001C                            BLEZ,R6  s:6852,PREL

     1655     6845        /* There have been characters output since the last line feed.                */
     1656     6846
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:227  
     1657     6847    4            TMN = KV$ERD.TMNALG_PRM8/TIMPERCHR-Y$NOD.TIM

   6847   1 000D47  ACC7 0006                            LDB,B2   ERD$,AUTO
          1 000D49  E842 0012                            LDR,R6   18,B2
          1 000D4B  E347 0018                            DIV,R6   TIMPERCHR,AUTO
          1 000D4D  9CC7 0008                            LDB,B1   NOD$,AUTO
          1 000D4F  E241 0004                            SUB,R6   4,B1
          1 000D51  E243 001C                            SUB,R6   28,B3
          1 000D53  EA43 0015                            ADD,R6   21,B3
          1 000D55  B856                                 LDR,R3   R6
          1 000D56  BF05                                 STR,R3   ,B5

     1658     6848    4              -%KV_VDI.OTPCHRCNTAFTLF+%KV_VDI.TMPOTPCHRCNT;
     1659     6849    4            IF TMN<0 THEN TMN=0;

   6849   1 000D57  3881 0004                            BGEZ,R3  s:6850,PREL

   6849   1 000D59  8705                                 CL       ,B5
          1 000D5A  0F81 0008                            B        s:6854,PREL

     1660     6850    4            ELSE Y$NOD.TIM = TMN+Y$NOD.TIM;

   6850   1 000D5C  BA41 0004                            ADD,R3   4,B1
          1 000D5E  BF41 0004                            STR,R3   4,B1

     1661     6851    4         END /* If */;

   6851   1 000D60  0F81 0002                            B        s:6854,PREL

     1662     6852    3         ELSE TMN = 0;

   6852   1 000D62  8705                                 CL       ,B5

     1663     6853    3      END /* Case */;

     1664     6854    2   END CMPTMN;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:228  
   6854   1 000D63  ECC7 0082                            LDB,B6   R2+2,AUTO
          1 000D65  C3C6 0001                            LNJ,B4   1,B6

     1665     6855        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:229  
     1666     6856        /*I* NAME: OTPRPTCHR.
     1667     6857             PURPOSE: Simulate the USR_OTPRPTCHR function for users that don't
     1668     6858                      do it, and for small count for which it isn't worth it.
     1669     6859        */
     1670     6860    1   OTPRPTCHR: PROC;

   6860   1 000D67  EFC7 0088            OTPRPTCHR       STB,B6   CNT+2,AUTO

     1671     6861        %KV$MVD;
     1672     6905        %KV$TRNTBL;
     1673     6963        %KV$STT;
     1674     7357        %KV$SSN;
     1675     7436        %KV$VDI (STCLASS="BASED(B4)");
     1676     7507    2   DCL Y$BIN(0:0) BASED UBIN(8) CALIGNED;
     1677     7508        %KV$USR_GETOTPBFR (NAME=USR_GETOTPBFR);
     1678     7543        %EQU USR_GETOTPBFR = CHARTEXT(CONCAT('ADDR(CRNPTH(',BINCHAR(MAXNMBNOD-4),
              7543            '))->USR_GETOTPBFR'));
     1679     7544
     1680     7545    3      IF %KV_MRD.CALUSR_OTPRPTCHR AND USR_OTPRPTCHR.CNT>3 THEN DO;

   7545   1 000D69  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000D6B  82C5 0018                            LB,'0100'X        24,B5
          1 000D6D       0100
          1 000D6E  0581 0019                            BBF      s:7553,PREL
          1 000D70  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 000D72  6D03                                 CMV,R6   3
          1 000D73  0381 0014                            BLE      s:7553,PREL

     1681     7546        /* The user knows how to do this, and it is probably worth it. */
     1682     7547
     1683     7548    3         USR_OTPRPTCHR.FNC = %KV_USR_FNC_OTPRPTCHR;

   7548   1 000D75  5C0B                                 LDV,R5   11
          1 000D76  D7C7 007E                            STH,R5   USR_OTPRPTCHR,AUTO

     1684     7549    3         CALL KVV$CALUSR (USR_OTPRPTCHR);

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:230  
   7549   1 000D78  CBC7 007E                            LAB,B4   USR_OTPRPTCHR,AUTO
          1 000D7A  CFC7 008A                            STB,B4   CNT+4,AUTO
          1 000D7C  BBC7 008A                            LAB,B3   CNT+4,AUTO
          1 000D7E  CBF0 0100                            LAB,B4   256,IMO
          1 000D80  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          1 000D83       0001                            DC       s:7550,PREL

     1685     7550    3         RETURN;

   7550   1 000D84  ECC7 0088                            LDB,B6   CNT+2,AUTO
          1 000D86  C3C6 0001                            LNJ,B4   1,B6

     1686     7551    3      END;
     1687     7552
     1688     7553    2      B4 = KV$PTR.VDI$;

   7553   1 000D88  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          1 000D8B  BC84                                 LDB,B3   ,B4
          1 000D8C  BFC7 000E                            STB,B3   B4,AUTO

     1689     7554    3      IF ASCBIN(USR_OTPRPTCHR.CHR)=%KV_MVD.TRNTBL$->KV$TRNTBL.OTPESCCHR THEN DO;

   7554   1 000D8E  E847 007E                            LDR,R6   USR_OTPRPTCHR,AUTO
          1 000D90  E570 00FF                            AND,R6   255,IMO
          1 000D92  ACC4 0006                            LDB,B2   6,B4
          1 000D94  9CC2 000E                            LDB,B1   14,B2
          1 000D96  E941 001B                            CMR,R6   27,B1
          1 000D98  0981 0019                            BNE      s:7561,PREL

     1690     7555        /* We may need to buffer two chars for each real one. */
     1691     7556
     1692     7557    3         USR_OTPRPTCHR.CHR = %KV_MVD.TRNTBL$->KV$TRNTBL.OTPESCCHRBFR1;

   7557   1 000D9A  D0C1 001C                            LDH,R5   28,B1
          1 000D9C  DAC7 007E                            SRM,R5,'00FF'X    USR_OTPRPTCHR,AUTO
          1 000D9E       00FF

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:231  
     1693     7558    3         USR_OTPRPTCHR.FNC = ASCBIN(%KV_MVD.TRNTBL$->KV$TRNTBL.OTPESCCHRBFR1);

   7558   1 000D9F  ACC4 0006                            LDB,B2   6,B4
          1 000DA1  9CC2 000E                            LDB,B1   14,B2
          1 000DA3  E2C1 001C                            LLH,R6   28,B1
          1 000DA5  E7C7 007E                            STH,R6   USR_OTPRPTCHR,AUTO

     1694     7559    3         IF USR_OTPRPTCHR.FNC~=0 THEN USR_OTPRPTCHR.CNT = USR_OTPRPTCHR.CNT*2;

   7559   1 000DA7  E2C7 007E                            LLH,R6   USR_OTPRPTCHR,AUTO
          1 000DA9  6901 000A                            BEZ,R6   s:7563,PREL

   7559   1 000DAB  D847 007F                            LDR,R5   USR_OTPRPTCHR+1,AUTO
          1 000DAD  5001                                 SOL,R5   1
          1 000DAE  DF47 007F                            STR,R5   USR_OTPRPTCHR+1,AUTO

     1695     7560    3      END;

   7560   1 000DB0  0F81 0003                            B        s:7563,PREL

     1696     7561    2      ELSE USR_OTPRPTCHR.FNC = 0;

   7561   1 000DB2  87C7 007E                            CLH      USR_OTPRPTCHR,AUTO

     1697     7562
     1698     7563    3      DO WHILE USR_OTPRPTCHR.CNT>0;

   7563   1 000DB4  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 000DB6  6901 009D                            BEZ,R6   s:7605,PREL

     1699     7564    3         IF KV$VDI.OTPBFR_.BYTSIZ=0

   7564   1 000DB8  ECC7 000E                            LDB,B6   B4,AUTO
          1 000DBA  E846 000D                            LDR,R6   13,B6
          1 000DBC  6901 0008                            BEZ,R6   s:7568,PREL
          1 000DBE  D2C7 007E                            LLH,R5   USR_OTPRPTCHR,AUTO
          1 000DC0  5901 001D                            BEZ,R5   s:7577,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:232  
          1 000DC2  6D01                                 CMV,R6   1
          1 000DC3  0981 001A                            BNE      s:7577,PREL

     1700     7565    4           OR USR_OTPRPTCHR.FNC~=0 AND KV$VDI.OTPBFR_.BYTSIZ=1 THEN DO;

     1701     7566        /* We need more buffering space. */
     1702     7567
     1703     7568    4            %USR_GETOTPBFR.FNC = %KV_USR_FNC_GETOTPBFR;

   7568   1 000DC5  5C07                                 LDV,R5   7
          1 000DC6  D7C7 0078                            STH,R5   CRNPTH+76,AUTO

     1704     7569    4            %USR_GETOTPBFR.ESTBYTSIZ = USR_OTPRPTCHR.CNT;

   7569   1 000DC8  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 000DCA  EF47 0079                            STR,R6   CRNPTH+77,AUTO

     1705     7570    4            CALL KVV$CALUSR (%USR_GETOTPBFR)

   7570   1 000DCC  DBC7 0078                            LAB,B5   CRNPTH+76,AUTO
          1 000DCE  DFC7 008A                            STB,B5   CNT+4,AUTO
          1 000DD0  BBC7 008A                            LAB,B3   CNT+4,AUTO
          1 000DD2  CBF0 0100                            LAB,B4   256,IMO
          1 000DD4  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR
          1 000DD7       0003                            DC       s:7573,PREL
          1 000DD8  0F81 0005                            B        s:7577,PREL

     1706     7571    5            WHENALTRETURN DO;

     1707     7572        /* The user was unable to get more space. Forget it. */
     1708     7573    5               RETURN;

   7573   1 000DDA  ECC7 0088                            LDB,B6   CNT+2,AUTO
          1 000DDC  C3C6 0001                            LNJ,B4   1,B6

     1709     7574    5            END;
     1710     7575    4         END;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:233  

     1711     7576
     1712     7577    3         R2 = MINIMUM (USR_OTPRPTCHR.CNT, KV$VDI.OTPBFR_.BYTSIZ);

   7577   1 000DDE  ECC7 000E                            LDB,B6   B4,AUTO
          1 000DE0  E846 000D                            LDR,R6   13,B6
          1 000DE2  E947 007F                            CMR,R6   USR_OTPRPTCHR+1,AUTO
          1 000DE4  0381 0003                            BLE      s:7577+10,PREL
          1 000DE6  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 000DE8  EF47 0080                            STR,R6   R2,AUTO

     1713     7578    3         IF USR_OTPRPTCHR.FNC~=0 THEN R2U = R2U/2;

   7578   1 000DEA  D2C7 007E                            LLH,R5   USR_OTPRPTCHR,AUTO
          1 000DEC  5901 0006                            BEZ,R5   s:7581,PREL

   7578   1 000DEE  C847 0080                            LDR,R4   R2,AUTO
          1 000DF0  4041                                 SOR,R4   1
          1 000DF1  CF47 0080                            STR,R4   R2,AUTO

     1714     7579        /* Only put complete pairs of OTPESCCHRBFRs in any given output buffer. */
     1715     7580
     1716     7581    3         %KV_STT.OTPCHRCNT = %KV_STT.OTPCHRCNT+R2;

   7581   1 000DF3  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000DF6  CC85                                 LDB,B4   ,B5
          1 000DF7  BCC4 0008                            LDB,B3   8,B4
          1 000DF9  ACC3 0033                            LDB,B2   51,B3
          1 000DFB  E847 0080                            LDR,R6   R2,AUTO
          1 000DFD  70F0                                 DAR,R7   16
          1 000DFE  8442 0034                            AID      52,B2
          1 000E00  8D42 0034                            SDI      52,B2

     1717     7582    3         %KV_SSN.OTPCHRCNT = %KV_SSN.OTPCHRCNT+R2;

   7582   1 000E02  CCC5 0002                            LDB,B4   2,B5
          1 000E04  E847 0080                            LDR,R6   R2,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:234  
          1 000E06  70F0                                 DAR,R7   16
          1 000E07  8444 0018                            AID      24,B4
          1 000E09  8D44 0018                            SDI      24,B4

     1718     7583    3         KV$VDI.TMPOTPCHRCNT = KV$VDI.TMPOTPCHRCNT+R2;

   7583   1 000E0B  E846 0015                            LDR,R6   21,B6
          1 000E0D  EA47 0080                            ADD,R6   R2,AUTO
          1 000E0F  EF46 0015                            STR,R6   21,B6

     1719     7584    3         KV$VDI.OTPBFR_.BYTSIZ = KV$VDI.OTPBFR_.BYTSIZ-R2;

   7584   1 000E11  D846 000D                            LDR,R5   13,B6
          1 000E13  D247 0080                            SUB,R5   R2,AUTO
          1 000E15  DF46 000D                            STR,R5   13,B6

     1720     7585    3         USR_OTPRPTCHR.CNT = USR_OTPRPTCHR.CNT-R2;

   7585   1 000E17  C847 007F                            LDR,R4   USR_OTPRPTCHR+1,AUTO
          1 000E19  C247 0080                            SUB,R4   R2,AUTO
          1 000E1B  CF47 007F                            STR,R4   USR_OTPRPTCHR+1,AUTO

     1721     7586    3         KV$VDI.OTPBFR_.BYTX = KV$VDI.OTPBFR_.BYTX+R2;

   7586   1 000E1D  E846 000C                            LDR,R6   12,B6
          1 000E1F  EA47 0080                            ADD,R6   R2,AUTO
          1 000E21  EF46 000C                            STR,R6   12,B6

     1722     7587    3         R2 = KV$VDI.OTPBFR_.BYTX-R2;

   7587   1 000E23  E247 0080                            SUB,R6   R2,AUTO
          1 000E25  EF47 0080                            STR,R6   R2,AUTO

     1723     7588
     1724     7589    4         DO WHILE R2<KV$VDI.OTPBFR_.BYTX;

   7589   1 000E27  E946 000C                            CMR,R6   12,B6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:235  
          1 000E29  0881 0026                            BAGE     s:7604,PREL

     1725     7590        /* Stuff the characters. */
     1726     7591
     1727     7592    4            KV$VDI.OTPBFR_.ADR$->Y$BIN(R2) = ASCBIN(USR_OTPRPTCHR.CHR);

   7592   1 000E2B  ECC7 000E                            LDB,B6   B4,AUTO
          1 000E2D  DCC6 000A                            LDB,B5   10,B6
          1 000E2F  E847 007E                            LDR,R6   USR_OTPRPTCHR,AUTO
          1 000E31  E570 00FF                            AND,R6   255,IMO
          1 000E33  B847 0080                            LDR,R3   R2,AUTO
          1 000E35  E7B5                                 STH,R6   ,B5,R3

     1728     7593    4            R2 = R2+1;

   7593   1 000E36  8AC7 0080                            INC      R2,AUTO

     1729     7594    5            IF USR_OTPRPTCHR.FNC~=0 THEN DO;

   7594   1 000E38  E2C7 007E                            LLH,R6   USR_OTPRPTCHR,AUTO
          1 000E3A  6901 0010                            BEZ,R6   s:7603,PREL

     1730     7595        /* We're doing the OTPESCCHRBFR thing. Stuff the second character. */
     1731     7596
     1732     7597    5               KV$VDI.OTPBFR_.BYTX = KV$VDI.OTPBFR_.BYTX+1;

   7597   1 000E3C  8AC6 000C                            INC      12,B6

     1733     7598    5               KV$VDI.OTPBFR_.BYTSIZ = KV$VDI.OTPBFR_.BYTSIZ-1;

   7598   1 000E3E  88C6 000D                            DEC      13,B6

     1734     7599    5               USR_OTPRPTCHR.CNT = USR_OTPRPTCHR.CNT-1;

   7599   1 000E40  88C7 007F                            DEC      USR_OTPRPTCHR+1,AUTO

     1735     7600    5               KV$VDI.OTPBFR_.ADR$->Y$BIN(R2) = USR_OTPRPTCHR.FNC;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:236  

   7600   1 000E42  DCC6 000A                            LDB,B5   10,B6
          1 000E44  E2C7 007E                            LLH,R6   USR_OTPRPTCHR,AUTO
          1 000E46  B847 0080                            LDR,R3   R2,AUTO
          1 000E48  E7B5                                 STH,R6   ,B5,R3

     1736     7601    5               R2 = R2+1;

   7601   1 000E49  8AC7 0080                            INC      R2,AUTO

     1737     7602    5            END;

     1738     7603    4         END;

   7603   1 000E4B  E847 0080                            LDR,R6   R2,AUTO
          1 000E4D  E946 000C                            CMR,R6   12,B6
          1 000E4F  085C                                 BAL      s:7592,SPREL

     1739     7604    3      END;

   7604   1 000E50  D847 007F                            LDR,R5   USR_OTPRPTCHR+1,AUTO
          1 000E52  5981 FF65                            BNEZ,R5  s:7564,PREL

     1740     7605    2      RETURN;

   7605   1 000E54  ECC7 0088                            LDB,B6   CNT+2,AUTO
          1 000E56  C3C6 0001                            LNJ,B4   1,B6

     1741     7606    2   END OTPRPTCHR;
     1742     7607        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:237  
     1743     7608        /*I* NAME: OTPANSPN
     1744     7609             PURPOSE: To stuff the ASCII representation of the UBIN parameter
     1745     7610                      into CHRBFR at CHRBFRA(0), incrementing said index
     1746     7611                      by the number of characters stuffed.
     1747     7612        */
     1748     7613    1   OTPANSPN: PROC(NUM);

   7613   1 000E58  EFC7 0082            OTPANSPN        STB,B6   R2+2,AUTO

     1749     7614    2   DCL NUM UBIN ALIGNED;
     1750     7615    2      IF NUM<10 THEN R2H.U=1;

   7615   1 000E5A  DCC7 0084                            LDB,B5   @NUM,AUTO
          1 000E5C  E805                                 LDR,R6   ,B5
          1 000E5D  6D0A                                 CMV,R6   10
          1 000E5E  0281 0006                            BGE      s:7616,PREL

   7615   1 000E60  5C01                                 LDV,R5   1
          1 000E61  D7C7 0080                            STH,R5   R2,AUTO
          1 000E63  0F81 0015                            B        s:7619,PREL

     1751     7616    2      ELSE IF NUM<100 THEN R2H.U=2;

   7616   1 000E65  6D64                                 CMV,R6   100
          1 000E66  0281 0006                            BGE      s:7617,PREL

   7616   1 000E68  5C02                                 LDV,R5   2
          1 000E69  D7C7 0080                            STH,R5   R2,AUTO
          1 000E6B  0F81 000D                            B        s:7619,PREL

     1752     7617    2      ELSE IF NUM<1000 THEN R2H.U=3;

   7617   1 000E6D  E970 03E8                            CMR,R6   1000,IMO
          1 000E6F  0281 0006                            BGE      s:7618,PREL

   7617   1 000E71  5C03                                 LDV,R5   3
          1 000E72  D7C7 0080                            STH,R5   R2,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:238  
          1 000E74  0F81 0004                            B        s:7619,PREL

     1753     7618    2      ELSE R2H.U=4;

   7618   1 000E76  5C04                                 LDV,R5   4
          1 000E77  D7C7 0080                            STH,R5   R2,AUTO

     1754     7619    2      CALL BINCHAR (SUBSTR(CHRBFR,CHRBFRA(0),R2H.U), NUM);

   7619   1 000E79  F856                                 LDR,R7   R6
          1 000E7A  6C00                                 LDV,R6   0
          1 000E7B  8D47 008A                            SDI      CNT+4,AUTO
          1 000E7D  B2C7 002C                            LLH,R3   CRNPTH,AUTO
          1 000E7F  D2C7 0080                            LLH,R5   R2,AUTO
          1 000E81  0027                                 CBD      ;
          1 000E82       0407 008A                                BINARY(CNT+4,AUTO,,4),;
          1 000E84       0037 002C                                UNPACKED(CRNPTH,AUTO,R3,,R5,UNSIGNED)

     1755     7620    2      CHRBFRA(0) = CHRBFRA(0)+R2H.U;

   7620   1 000E86  437F                                 CSYNC    s:7619+12,SPREL
          1 000E87  E2C7 002C                            LLH,R6   CRNPTH,AUTO
          1 000E89  D2C7 0080                            LLH,R5   R2,AUTO
          1 000E8B  EA55                                 ADD,R6   R5
          1 000E8C  E7C7 002C                            STH,R6   CRNPTH,AUTO

     1756     7621    2      RETURN;

   7621   1 000E8E  ECC7 0082                            LDB,B6   R2+2,AUTO
          1 000E90  C3C6 0001                            LNJ,B4   1,B6

     1757     7622    2   END OTPANSPN;
     1758     7623        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:239  
     1759     7624        /*I* NAME: DVCCTR
     1760     7625             PURPOSE: To send the TEXTC character string located by means of the
     1761     7626                      UBIN parameter to the device, without possibility of interruption.
     1762     7627             INPUT: The parameter is 0 if the string is in CHRBFR, otherwise it is
     1763     7628                    the offset from ERD$ to the byte containing the offset into
     1764     7629                    KV$ERD.TXT.
     1765     7630        */
     1766     7631    1   DVCCTR: PROC (PRM);

   7631   1 000E92  EFC7 0082            DVCCTR          STB,B6   R2+2,AUTO

     1767     7632    2   DCL PRM SBIN;
     1768     7633    2   DCL 1 PRMTXT REDEF PRM,
     1769     7634    2          2 SIZ UBIN BYTE CALIGNED,
     1770     7635    2          2 TXT CHAR(1);
     1771     7636    2   DCL CNT SBIN ALIGNED;
     1772     7637    2   DCL Y$BIN(0:0) UBIN(8) CALIGNED BASED;
     1773     7638        %KV$VDH_OTPLCL (NAME=V_O);
     1774     7711        %EQU VDH_OTPLCL=CHARTEXT(CONCAT('ADDR(CRNPTH(',BINCHAR(MAXNMBNOD-8),'))->V_O'));
     1775     7712        %KV$VDH_OTPLCL (NAME=Y_OTPLCL, STCLASS=CONSTANT, BYTX=1, TRN=YES);
     1776     7785        %KV_USR_EVT_ID_E;
     1777     7805
     1778     7806    2      CNT = 0;

   7806   1 000E94  8747 0086                            CL       CNT,AUTO

     1779     7807    2      GOTO DVCCTRCMN;

   7807   1 000E96  0F81 0031                            B        s:7819,PREL

     1780     7808
     1781     7809    2   DVCCTRCNT: ENTRY (PRM);

   7809   1 000E98  EFC7 0082            DVCCTRCNT       STB,B6   R2+2,AUTO

     1782     7810
     1783     7811    2      CNT = USR_OTPRPTCHR.CNT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:240  

   7811   1 000E9A  E847 007F                            LDR,R6   USR_OTPRPTCHR+1,AUTO
          1 000E9C  EF47 0086                            STR,R6   CNT,AUTO

     1784     7812    3      IF PRM=%KV$ERD_ILN_CHR#/8 OR PRM=%KV$ERD_DLN_CHR#/8 THEN DO;

   7812   1 000E9E  DCC7 0084                            LDB,B5   @PRM,AUTO
          1 000EA0  D805                                 LDR,R5   ,B5
          1 000EA1  5D54                                 CMV,R5   84
          1 000EA2  0901 0004                            BE       s:7813,PREL
          1 000EA4  5D55                                 CMV,R5   85
          1 000EA5  0981 0022                            BNE      s:7819,PREL

     1785     7813    3         %KV_MRD.DVCCLM=1;

   7813   1 000EA7  CCC7 000A                            LDB,B4   MRD$,AUTO
          1 000EA9  4C01                                 LDV,R4   1
          1 000EAA  CF44 001E                            STR,R4   30,B4

     1786     7814    3         IF KV$ERD.ERSTIM=0 OR %KV_MRD.DVCFLWCTRALG~=0 THEN EXIT;

   7814   1 000EAC  ECC7 0006                            LDB,B6   ERD$,AUTO
          1 000EAE  D846 000A                            LDR,R5   10,B6
          1 000EB0  5901 0017                            BEZ,R5   s:7819,PREL
          1 000EB2  82C4 0015                            LB,'00FF'X        21,B4
          1 000EB4       00FF
          1 000EB5  0501 0012                            BBT      s:7819,PREL

     1787     7815        /* Send one at a time to get the timing inserted. */
     1788     7816    3         USR_OTPRPTCHR.CNT = KV$ERD.ERSTIM/TIMPERCHR;

   7816   1 000EB7  F855                                 LDR,R7   R5
          1 000EB8  6C00                                 LDV,R6   0
          1 000EB9  F347 0018                            DIV,R7   TIMPERCHR,AUTO
          1 000EBB  E857                                 LDR,R6   R7
          1 000EBC  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:241  
     1789     7817    3         USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;

   7817   1 000EBE  B846 0007                            LDR,R3   7,B6
          1 000EC0  BAC7 007E                            SRM,R3,'00FF'X    USR_OTPRPTCHR,AUTO
          1 000EC2       00FF

     1790     7818    3         CNT = -CNT;

   7818   1 000EC3  B847 0086                            LDR,R3   CNT,AUTO
          1 000EC5  8253                                 NEG      R3
          1 000EC6  BF47 0086                            STR,R3   CNT,AUTO

     1791     7819    3      END;

   7817   1                              DVCCTRCMN       null
     1792     7820    2   DVCCTRCMN:;
     1793     7821    2      USR_EVT.ID = %KV_USR_EVT_ID_INHDLTOTP;

   7821   1 000EC8  6C11                 DVCCTRCMN       LDV,R6   17
          1 000EC9  EAC7 007C                            SRM,R6,'007F'X    USR_EVT,AUTO
          1 000ECB       007F

     1794     7822    2      %VDH_OTPLCL = Y_OTPLCL;

   7822   1 000ECC  AB80 0000 006A  00                   LAB,B2   Y_OTPLCL
          1 000ECF  2C00                                 LDV,R2   0
          1 000ED0  6C0A                                 LDV,R6   10
          1 000ED1  BBC7 0074                            LAB,B3   CRNPTH+72,AUTO
          1 000ED3  3C00                                 LDV,R3   0
          1 000ED4  0008                                 MMM

     1795     7823    3      IF PRM=0 THEN DO;

   7823   1 000ED5  ECC7 0084                            LDB,B6   @PRM,AUTO
          1 000ED7  E806                                 LDR,R6   ,B6
          1 000ED8  6981 000B                            BNEZ,R6  s:7827,PREL

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:242  
     1796     7824    3         %VDH_OTPLCL.BFR_.ADR$ = ADDR(CHRBFR);

   7824   1 000EDA  DBC7 002C                            LAB,B5   CRNPTH,AUTO
          1 000EDC  DFC7 0075                            STB,B5   CRNPTH+73,AUTO

     1797     7825    3         %VDH_OTPLCL.BFR_.BYTSIZ = CHRBFRA(0);

   7825   1 000EDE  E2C7 002C                            LLH,R6   CRNPTH,AUTO
          1 000EE0  EF47 0078                            STR,R6   CRNPTH+76,AUTO

     1798     7826    3      END;

   7826   1 000EE2  0F81 0064                            B        s:7853,PREL

     1799     7827    3      ELSE IF PRMTXT.SIZ~=0 THEN DO;

   7827   1 000EE4  D286                                 LLH,R5   ,B6
          1 000EE5  5901 0008                            BEZ,R5   s:7832,PREL

     1800     7828    3         %VDH_OTPLCL.BFR_.ADR$ = ADDR(PRM);

   7828   1 000EE7  EFC7 0075                            STB,B6   CRNPTH+73,AUTO

     1801     7829    3         %VDH_OTPLCL.BFR_.BYTSIZ = PRMTXT.SIZ;

   7829   1 000EE9  E286                                 LLH,R6   ,B6
          1 000EEA  EF47 0078                            STR,R6   CRNPTH+76,AUTO

     1802     7830    3      END;

   7830   1 000EEC  0F81 005A                            B        s:7853,PREL

     1803     7831    3      ELSE DO;

     1804     7832    3         %VDH_OTPLCL.BFR_.ADR$ = ERD$;

   7832   1 000EEE  DCC7 0006                            LDB,B5   ERD$,AUTO
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:243  
          1 000EF0  DFC7 0075                            STB,B5   CRNPTH+73,AUTO

     1805     7833    3         %VDH_OTPLCL.BFR_.BYTX = ERD$->Y$BIN(PRM)+%KV$ERD_CNT#/8+1;

   7833   1 000EF2  B806                                 LDR,R3   ,B6
          1 000EF3  E2B5                                 LLH,R6   ,B5,R3
          1 000EF4  6E5B                                 ADV,R6   91
          1 000EF5  EF47 0077                            STR,R6   CRNPTH+75,AUTO

     1806     7834    3         %VDH_OTPLCL.BFR_.BYTSIZ = ERD$->Y$BIN(%VDH_OTPLCL.BFR_.BYTX-1);

   7834   1 000EF7  B856                                 LDR,R3   R6
          1 000EF8  3EFF                                 ADV,R3   -1
          1 000EF9  D2B5                                 LLH,R5   ,B5,R3
          1 000EFA  DF47 0078                            STR,R5   CRNPTH+76,AUTO

     1807     7835    3         IF CNT=1 THEN CNT=0;

   7835   1 000EFC  C847 0086                            LDR,R4   CNT,AUTO
          1 000EFE  4D01                                 CMV,R4   1
          1 000EFF  0981 0005                            BNE      s:7836,PREL

   7835   1 000F01  8747 0086                            CL       CNT,AUTO
          1 000F03  0F81 0043                            B        s:7853,PREL

     1808     7836    4         ELSE IF CNT>1 THEN DO;

   7836   1 000F05  0A81 0041                            BALE     s:7853,PREL

     1809     7837    4            SUBSTR(CHRBFR,0,%VDH_OTPLCL.BFR_.BYTSIZ) = SUBSTR(%VDH_OTPLCL.BFR_.ADR$

   7837   1 000F07  AB85                                 LAB,B2   ,B5
          1 000F08  A856                                 LDR,R2   R6
          1 000F09  E855                                 LDR,R6   R5
          1 000F0A  BB87                                 LAB,B3   ,AUTO
          1 000F0B  3C58                                 LDV,R3   88
          1 000F0C  0008                                 MMM
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:244  

     1810     7838    4              ->Y$NODS,%VDH_OTPLCL.BFR_.BYTX,%VDH_OTPLCL.BFR_.BYTSIZ);
     1811     7839    4            R2 = %VDH_OTPLCL.BFR_.BYTSIZ;

   7839   1 000F0D  E847 0078                            LDR,R6   CRNPTH+76,AUTO
          1 000F0F  EF47 0080                            STR,R6   R2,AUTO

     1812     7840        /*
     1813     7841           Only put in as much as will fit in CHRBFR.
     1814     7842        */
     1815     7843    4            %VDH_OTPLCL.BFR_.BYTX = R2*MINIMUM(CNT,%MIN(MAXNMBNOD*2-16,63)/R2);

   7843   1 000F11  8CF0 0000 003F                       LDI      63,IMO
          1 000F14  F347 0080                            DIV,R7   R2,AUTO
          1 000F16  E857                                 LDR,R6   R7
          1 000F17  E947 0086                            CMR,R6   CNT,AUTO
          1 000F19  0A81 0003                            BALE     s:7843+12,PREL
          1 000F1B  E847 0086                            LDR,R6   CNT,AUTO
          1 000F1D  EB47 0080                            MUL,R6   R2,AUTO
          1 000F1F  EF47 0077                            STR,R6   CRNPTH+75,AUTO

     1816     7844    4            CNT = CNT*R2;                  /* Total chars to send                */

   7844   1 000F21  C847 0086                            LDR,R4   CNT,AUTO
          1 000F23  CB47 0080                            MUL,R4   R2,AUTO
          1 000F25  CF47 0086                            STR,R4   CNT,AUTO

     1817     7845    5            DO WHILE R2<%VDH_OTPLCL.BFR_.BYTX;

   7845   1 000F27  E947 0080                            CMR,R6   R2,AUTO
          1 000F29  0A81 0013                            BALE     s:7849,PREL

     1818     7846    5               CHRBFRA(R2) = CHRBFRA(R2-%VDH_OTPLCL.BFR_.BYTSIZ);

   7846   1 000F2B  E847 0080                            LDR,R6   R2,AUTO
          1 000F2D  E247 0078                            SUB,R6   CRNPTH+76,AUTO
          1 000F2F  B856                                 LDR,R3   R6
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:245  
          1 000F30  3E58                                 ADV,R3   88
          1 000F31  E2B7                                 LLH,R6   ,AUTO,R3
          1 000F32  B847 0080                            LDR,R3   R2,AUTO
          1 000F34  3E58                                 ADV,R3   88
          1 000F35  E7B7                                 STH,R6   ,AUTO,R3

     1819     7847    5               R2 = R2+1;

   7847   1 000F36  8AC7 0080                            INC      R2,AUTO

     1820     7848    5            END;

   7848   1 000F38  E847 0080                            LDR,R6   R2,AUTO
          1 000F3A  E947 0077                            CMR,R6   CRNPTH+75,AUTO
          1 000F3C  086F                                 BAL      s:7846,SPREL

     1821     7849    4            %VDH_OTPLCL.BFR_.BYTSIZ = R2;

   7849   1 000F3D  E847 0080                            LDR,R6   R2,AUTO
          1 000F3F  EF47 0078                            STR,R6   CRNPTH+76,AUTO

     1822     7850    4            %VDH_OTPLCL.BFR_.BYTX = 0;

   7850   1 000F41  8747 0077                            CL       CRNPTH+75,AUTO

     1823     7851    4            %VDH_OTPLCL.BFR_.ADR$ = ADDR(CHRBFR);

   7851   1 000F43  EBC7 002C                            LAB,B6   CRNPTH,AUTO
          1 000F45  EFC7 0075                            STB,B6   CRNPTH+73,AUTO

     1824     7852    4         END;

     1825     7853    3      END;

   7851   1                              SEND_AGAIN      null
     1826     7854    2   SEND_AGAIN:;
     1827     7855    2      USR_EVT.PRM = %VDH_OTPLCL.BFR_.BYTSIZ;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:246  

   7855   1 000F47  E847 0078            SEND_AGAIN      LDR,R6   CRNPTH+76,AUTO
          1 000F49  EF47 007D                            STR,R6   USR_EVT+1,AUTO

     1828     7856    2      IF %KV_VDI.USREVTENB(%KV_USR_EVT_ID_INHDLTOTP) AND USR_EVT.PRM>1

   7856   1 000F4B  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          1 000F4E  DC86                                 LDB,B5   ,B6
          1 000F4F  82C5 001F                            LB,'0040'X        31,B5
          1 000F51       0040
          1 000F52  0581 0010                            BBF      s:7858,PREL
          1 000F54  6D01                                 CMV,R6   1
          1 000F55  0A81 000D                            BALE     s:7858,PREL

     1829     7857    2      THEN CALL KVV$CALUSR_EVT (USR_EVT);

   7857   1 000F57  CBC7 007C                            LAB,B4   USR_EVT,AUTO
          1 000F59  CFC7 008A                            STB,B4   CNT+4,AUTO
          1 000F5B  BBC7 008A                            LAB,B3   CNT+4,AUTO
          1 000F5D  CBF0 0100                            LAB,B4   256,IMO
          1 000F5F  E380 0000 0000  xent                 LNJ,B6   KVV$CALUSR_EVT
          1 000F62       0001                            DC       s:7858,PREL

     1830     7858    2      CALL KVO$OTPLCL (%VDH_OTPLCL);

   7858   1 000F63  EBC7 0074                            LAB,B6   CRNPTH+72,AUTO
          1 000F65  EFC7 008A                            STB,B6   CNT+4,AUTO
          1 000F67  BBC7 008A                            LAB,B3   CNT+4,AUTO
          1 000F69  CBF0 0100                            LAB,B4   256,IMO
          1 000F6B  E380 0000 0000  xent                 LNJ,B6   KVO$OTPLCL
          1 000F6E       0001                            DC       s:7859,PREL

     1831     7859    3      IF CNT>USR_EVT.PRM THEN DO;

   7859   1 000F6F  E847 0086                            LDR,R6   CNT,AUTO
          1 000F71  E947 007D                            CMR,R6   USR_EVT+1,AUTO
          1 000F73  0A81 000E                            BALE     s:7864,PREL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:247  

     1832     7860    3         CNT = CNT-USR_EVT.PRM;

   7860   1 000F75  E247 007D                            SUB,R6   USR_EVT+1,AUTO
          1 000F77  EF47 0086                            STR,R6   CNT,AUTO

     1833     7861    3         IF CNT<%VDH_OTPLCL.BFR_.BYTSIZ THEN %VDH_OTPLCL.BFR_.BYTSIZ = CNT;

   7861   1 000F79  6801 0005                            BLZ,R6   s:7861+6,PREL
          1 000F7B  E947 0078                            CMR,R6   CRNPTH+76,AUTO
          1 000F7D  0281 0003                            BGE      s:7862,PREL

   7861   1 000F7F  EF47 0078                            STR,R6   CRNPTH+76,AUTO

     1834     7862    3         GOTO SEND_AGAIN;

   7862   1 000F81  0FC6                                 B        s:7853,SPREL

     1835     7863    3      END;
     1836     7864    3      IF CNT<0 THEN DO;          /* Need to insert timing for each repetition    */

   7864   1 000F82  6881 000A                            BGEZ,R6  s:7869,PREL

     1837     7865    3         CALL OTPRPTCHR;

   7865   1 000F84  E3C0 FDE2                            LNJ,B6   s:0,PREL
          1 000F86       0001                            DC       s:7866,PREL

     1838     7866    3         CNT = CNT+1;

   7866   1 000F87  8AC7 0086                            INC      CNT,AUTO

     1839     7867    3         IF CNT<0 THEN GOTO DVCCTRCMN;

   7867   1 000F89  E847 0086                            LDR,R6   CNT,AUTO
          1 000F8B  6801 FF3C                            BLZ,R6   s:7819,PREL

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:248  
     1840     7868    3      END;

     1841     7869    2      RETURN;

   7869   1 000F8D  ECC7 0082                            LDB,B6   R2+2,AUTO
          1 000F8F  C3C6 0001                            LNJ,B4   1,B6

     1842     7870    2   END DVCCTR;
     1843     7871        %EJECT;
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:249  
     1844     7872        /*F* NAME: KVO$DVCCTR.
     1845     7873             PURPOSE: To send the control sequence indicated by the parameter,
     1846     7874                      disallowing output deletion during the sequence.  Timing
     1847     7875                      is added for ED0 and ED2.
     1848     7876             INPUT: The UBIN parameter is the byte offset into KV$ERD of the
     1849     7877                    appropriate xxx_CHR value. Include KV_ERD_E and spell it like
     1850     7878                    %KV$ERD_xxx_CHR#/8.
     1851     7879        */
     1852     7880    1   KVO$DVCCTR: ENTRY(PARM);

   7880   1 000F91  D380 0000 0000  xent KVO$DVCCTR      LNJ,B5   X6A_AUTO_1
          1 000F94       008C 0001                       DC       140,1

     1853     7881    1      IF DVCCTRX<%KV$ERD_ICH_CHR#/8

   7881   1 000F96  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 000F98  E806                                 LDR,R6   ,B6
          1 000F99  6D3E                                 CMV,R6   62
          1 000F9A  0801 0008                            BAL      s:7882,PREL
          1 000F9C  6D5A                                 CMV,R6   90
          1 000F9D  0A81 0008                            BALE     s:7883,PREL
          1 000F9F  E970 0100                            CMR,R6   256,IMO
          1 000FA1  0881 0004                            BAGE     s:7883,PREL

     1854     7882    1        OR DVCCTRX>%KV$ERD_TXT#/8 AND DVCCTRX<256 THEN RETURN;

   7882   1 000FA3  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1855     7883    1      MRD$ = KV$PTR.MRD$;

   7883   1 000FA6  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000FA9  CCC5 0008                            LDB,B4   8,B5
          1 000FAB  CFC7 000A                            STB,B4   MRD$,AUTO

     1856     7884    1      ERD$ = %KV_MRD.ERD$;

   7884   1 000FAD  BCC4 0008                            LDB,B3   8,B4
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:250  
          1 000FAF  BFC7 0006                            STB,B3   ERD$,AUTO

     1857     7885    1      USR_EVT = KV_USR_EVT;

   7885   1 000FB1  8C80 0000 0000  xsym                 LDI      KV_USR_EVT
          1 000FB4  8D47 007C                            SDI      USR_EVT,AUTO

     1858     7886    1      CALL DVCCTR (DVCCTRX);

   7886   1 000FB6  EFC7 0084                            STB,B6   R2+4,AUTO
          1 000FB8  E3C0 FED9                            LNJ,B6   s:0,PREL
          1 000FBA       0001                            DC       s:7887,PREL

     1859     7887    1      IF DVCCTRX=%KV$ERD_ED0_CHR#/8

   7887   1 000FBB  ECC7 0004                            LDB,B6   @PARM,AUTO
          1 000FBD  E806                                 LDR,R6   ,B6
          1 000FBE  6D42                                 CMV,R6   66
          1 000FBF  0901 0011                            BE       s:7894,PREL
          1 000FC1  6D48                                 CMV,R6   72
          1 000FC2  0901 000E                            BE       s:7894,PREL
          1 000FC4  6D54                                 CMV,R6   84
          1 000FC5  0901 000B                            BE       s:7894,PREL
          1 000FC7  6D55                                 CMV,R6   85
          1 000FC8  0981 0023                            BNE      s:7898,PREL
          1 000FCA  DCC7 000A                            LDB,B5   MRD$,AUTO
          1 000FCC  82C5 0015                            LB,'00FF'X        21,B5
          1 000FCE       00FF
          1 000FCF  0501 001C                            BBT      s:7898,PREL

     1860     7888    1        OR DVCCTRX=%KV$ERD_ED2_CHR#/8
     1861     7889    1        OR DVCCTRX=%KV$ERD_ILN_CHR#/8
     1862     7890    1        OR DVCCTRX=%KV$ERD_DLN_CHR#/8
     1863     7891        /* This is erasing, send some timing if appropriate. */
     1864     7892
     1865     7893    2        AND %KV_MRD.DVCFLWCTRALG=0 THEN DO;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:251  
     1866     7894    2         USR_OTPRPTCHR.CNT = KV$ERD.ERSTIM/KV_100MCRSCNPRDPERCHR(%KV_VDI.LINSPD);

   7894   1 000FD1  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          1 000FD4  CC85                                 LDB,B4   ,B5
          1 000FD5  B2C4 001E                            LLH,R3   30,B4
          1 000FD7  BCC7 0006                            LDB,B3   ERD$,AUTO
          1 000FD9  F843 000A                            LDR,R7   10,B3
          1 000FDB  6C00                                 LDV,R6   0
          1 000FDC  F330 0000 0009  00                   DIV,R7   KV_100MCRSCNPRDPERCHR,R3
          1 000FDF  E857                                 LDR,R6   R7
          1 000FE0  EF47 007F                            STR,R6   USR_OTPRPTCHR+1,AUTO

     1867     7895    2         USR_OTPRPTCHR.CHR = KV$ERD.TMNALG_FILCHR;

   7895   1 000FE2  D843 0007                            LDR,R5   7,B3
          1 000FE4  DAC7 007E                            SRM,R5,'00FF'X    USR_OTPRPTCHR,AUTO
          1 000FE6       00FF

     1868     7896    2         IF USR_OTPRPTCHR.CNT~=0 THEN CALL OTPRPTCHR;

   7896   1 000FE7  6901 0004                            BEZ,R6   s:7898,PREL

   7896   1 000FE9  E3C0 FD7D                            LNJ,B6   s:0,PREL
          1 000FEB       0001                            DC       s:7898,PREL

     1869     7897    2      END;

     1870     7898    1      RETURN;

   7898   1 000FEC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1871     7899    1   END KVO$GNRPST;

PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:252  
--  Include file information  --

   KV_ERD_E.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is never referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is never referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KVO$GNRPST.
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:253  

 **** Variables and constants ****

  ****  Section 000 RoData KVO$GNRPST

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    29-0-0/b UBIN(8)     r     1 AVRCUPSIZ(0:3)
    21-0-0/b UBIN(8)     r     1 AVRHPASIZ(0:7)
     9-0-0/w UBIN(16)    r     1 KV_100MCRSCNPRDPERCHR(0:15)
    19-0-0/w UBIN(16)    r     1 MAXHPACLM(0:7)
     0-0-0/c CHAR        r     1 NODFNCCHR(0:17)
     0-0-0/c CHAR(18)    r     1 NODFNCDAT
     0-0-0/c UBIN(8)     r     1 NODFNCOFS(0:17)
    65-0-0/c UBIN(8)     r     1 PSTTREX_CRT(0:9)
    6A-0-0/w STRC(80)    r     1 Y_OTPLCL                  2D-0-0/w STRC(16)    r     1 Y_TRE(0:55)
    2D-0-0/w STRC(896)   r     1 Y_TREDAT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    84-0-0/w PTR         r     1 @NUM                       4-0-0/w PTR         r     1 @PARM
    84-0-0/w PTR         r     1 @PRM                      84-0-0/w PTR         r     1 @TMN
     E-0-0/w PTR         r     1 B4                        2C-0-0/w CHAR(160)   r     1 CHRBFR
    2C-0-0/w UBIN(8)     r     1 CHRBFRA(0:159)            2C-0-0/w UBIN(32)    r     1 CHRBFRD(0:39)
    86-0-0/w SBIN(16)    r     1 CNT                       2C-0-0/w SBIN(16)    r     1 CRNPTH(0:79)
    10-0-0/w PTR         r     1 CRNPTHBGN$                23-0-0/w STRC(32)    r     1 DVC
    *0-0-0/w SBIN(16)    r     1 DVCCTRX                   23-0-0/w SBIN(32)    r     1 DVC_PST
     6-0-0/w PTR         r     1 ERD$                      2B-0-0/b STRC(4)     r     1 FLG
    25-0-0/w STRC(32)    r     1 HI_NONBLN                 25-0-0/w SBIN(32)    r     1 HI_NONBLN_PST
    19-0-0/w SBIN(16)    r     1 IMDSTPTIM                 1C-0-0/w SBIN(16)    r     1 LSTTABDVCCLM
    1B-0-0/w SBIN(16)    r     1 LSTTABPHSCLM              20-0-0/w SBIN(16)    r     1 MAXTAB
     A-0-0/w PTR         r     1 MRD$                       8-0-0/w PTR         r     1 NOD$
    *0-0-0/w UBIN(16)    r     1 NUM                       1E-0-0/w SBIN(16)    r     1 NXTTABCLM
    27-0-0/w STRC(32)    r     1 ORGHI_NONBLN              27-0-0/w SBIN(32)    r     1 ORGHI_NONBLN_PST
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:254  
    *0-0-0/w ACHR        r     1 PARM                      29-0-0/w SBIN(16)    r     1 PHSPSTMOD
    *0-0-0/w SBIN(16)    r     1 PRM                       *0-0-0/w STRC(16)    r     1 PRMTXT
    12-0-0/w PTR         r     1 PRVNOD$                   80-0-0/w SBIN(16)    r     1 R2
    80-0-0/w STRC(16)    r     1 R2H                       80-0-0/w UBIN(16)    r     1 R2U
    21-0-0/w STRC(32)    r     1 RQS                       21-0-0/w SBIN(32)    r     1 RQS_PST
    2A-0-0/w SBIN(16)    r     1 SCRCNT                     C-0-0/w PTR         r     1 SRD$
    14-0-0/w PTR         r     1 SVDPTHALT$                16-0-0/w PTR         r     1 SVDPTHEND$
    1D-0-0/w SBIN(16)    r     1 TABCLM                    1F-0-0/w SBIN(16)    r     1 TABCNT
    86-0-0/w SBIN(16)    r     1 TIM                       18-0-0/w SBIN(16)    r     1 TIMPERCHR
    *0-0-0/w SBIN(16)    r     1 TMN                       1A-0-0/w UBIN(16)    r     1 TREX
    86-0-0/w STRC(16)    r     1 TST                       7C-0-0/w STRC(32)    r     1 USR_EVT
    7E-0-0/w STRC(32)    r     1 USR_OTPRPTCHR             *0-0-0/w STRC(64)    r     1 USR_PST

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w UBIN(16)    r     1 KV_PSTERRCNT
     0-0-0/w STRC(32)    r     1 KV_USR_EVT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(728)   r     1 KV$ERD
     0-0-0/w UBIN(16)    r     1 KV$ERD_WRD(0:0)
     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(64)    r     1 KV$SHRBFR
     0-0-0/w UBIN(8)     r     1 KV$SHRBFR_BYT(0:7)
     0-0-0/w STRC(496)   r     1 KV$SRD                     0-0-0/w STRC(1024)  r     1 KV$SSN
     0-0-0/w STRC(8960)  r     1 KV$STT                     0-0-0/w STRC(499)   r     1 KV$TRNTBL
     0-0-0/w STRC(912)   r     1 KV$USRPRM                  0-0-0/w STRC(512)   r     1 KV$VDI
     0-0-0/w STRC(512)   r     1 KV$VDI                     0-0-0/w STRC(32)    r     1 USR_GETOTPBFR
     0-0-0/w STRC(80)    r     1 V_O                        0-0-0/c UBIN(8)     r     1 Y$BIN(0:0)
     0-0-0/c UBIN(8)     r     1 Y$BIN(0:0)                 0-0-0/w STRC(128)   r     1 Y$NOD
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:255  
     0-0-0/w STRC(128)   r     1 Y$NODMOV                   0-0-0/c ACHR        r     1 Y$NODS


   Procedure KVO$GNRPST requires 4079 words for executable code.
   Procedure KVO$GNRPST requires 140 words of local(AUTO) storage.

    No errors detected in file KVO$GNRPST.:E05TSI    .
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:256  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:257  
          MINI XREF LISTING

ALT_NODE
      6436**LABEL    6409--GOTO     6427--GOTO
AUTONLTMN
      6742**PROC     5690--CALL     6503--CALL
AVRCUPSIZ
      4621**DCL      6145>>ASSIGN
AVRHPASIZ
      4609**DCL      6186>>ASSIGN
B4
      5311**DCL      4348--IMP-PTR  4363--IMP-PTR  6217<<ASSIGN   6225>>DOWHILE  6229>>IF       6233>>DOWHILE
      6238>>IF       6242>>IF       6243>>ASSIGN   6244>>ASSIGN   6246>>IF       6252>>ASSIGN   6538<<ASSIGN
      6539>>IF       6543>>ASSIGN   7457--IMP-PTR  7553<<ASSIGN   7564>>IF       7564>>IF       7577>>ASSIGN
      7583>>ASSIGN   7583>>ASSIGN   7584>>ASSIGN   7584>>ASSIGN   7586>>ASSIGN   7586>>ASSIGN   7587>>ASSIGN
      7589>>DOWHILE  7592>>ASSIGN   7597>>ASSIGN   7597>>ASSIGN   7598>>ASSIGN   7598>>ASSIGN   7600>>ASSIGN
CASE1
      6011**LABEL    6022--EXIT     6024--EXIT     6044--EXIT     6070--EXIT     6108--EXIT     6126--EXIT
      6134--EXIT     6157--EXIT     6164--EXIT     6182--EXIT     6211--EXIT     6261--EXIT     6267--EXIT
      6292--EXIT     6311--EXIT     6336--EXIT     6379--EXIT
CHRBFR
      5549**DCL      6584<<CALLBLT  6602<<CALLBLT  6603<<CALLBLT  7619<<CALLBLT  7824--ASSIGN   7837<<ASSIGN
      7851--ASSIGN
CHRBFRA
      5550**DCL      5846>>ASSIGN   5846<<ASSIGN   5847<<ASSIGN   5847>>ASSIGN   5849>>ASSIGN   5849<<ASSIGN
      6557>>ASSIGN   6557<<ASSIGN   6558<<ASSIGN   6558>>ASSIGN   6560>>ASSIGN   6560<<ASSIGN   6567<<ASSIGN
      6577>>ASSIGN   6577<<ASSIGN   6578>>ASSIGN   6578<<ASSIGN   6581>>ASSIGN   6581<<ASSIGN   6582>>ASSIGN
      6582<<ASSIGN   6584>>CALLBLT  6584>>CALLBLT  6586<<ASSIGN   6586>>ASSIGN   6602>>CALLBLT  6603>>CALLBLT
      6618<<ASSIGN   6632<<ASSIGN   6633<<ASSIGN   7619>>CALLBLT  7620<<ASSIGN   7620>>ASSIGN   7825>>ASSIGN
      7846<<ASSIGN   7846>>ASSIGN
CHRBFRD
      5551**DCL      5837<<ASSIGN   6554<<ASSIGN   6598<<ASSIGN   6616<<ASSIGN
CMPTMN
      6784**PROC     6052--CALL     6056--CALL     6085--CALL     6089--CALL     6150--CALL     6201--CALL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:258  
      6276--CALL     6323--CALL     6327--CALL     6358--CALL     6362--CALL
CNT IN PROCEDURE DVCCTR
      7636**DCL      7806<<ASSIGN   7811<<ASSIGN   7818<<ASSIGN   7818>>ASSIGN   7835>>IF       7835<<ASSIGN
      7836>>IF       7843>>ASSIGN   7844<<ASSIGN   7844>>ASSIGN   7859>>IF       7860<<ASSIGN   7860>>ASSIGN
      7861>>IF       7861>>ASSIGN   7864>>IF       7866<<ASSIGN   7866>>ASSIGN   7867>>IF
CRNPTH
      5548**DCL      5549--REDEF    5550--REDEF    5551--REDEF    5835<<ASSIGN   5836<<ASSIGN   5838>>IF
      5839>>IF       5839>>IF       5845<>CALL     5854--ASSIGN   6472--ASSIGN   6514<<ASSIGN   6515<>CALL
      6568<<ASSIGN   6569<<ASSIGN   6572<<ASSIGN   6572>>ASSIGN   6573<<ASSIGN   6573>>ASSIGN   6577>>ASSIGN
      6578>>ASSIGN   6581>>ASSIGN   6582>>ASSIGN   6631<<ASSIGN   7568--ASSIGN   7569--ASSIGN   7570--CALL
      7822--ASSIGN   7824--ASSIGN   7825--ASSIGN   7828--ASSIGN   7829--ASSIGN   7832--ASSIGN   7833--ASSIGN
      7834--ASSIGN   7834--ASSIGN   7837--ASSIGN   7837--ASSIGN   7837--ASSIGN   7837--ASSIGN   7839--ASSIGN
      7843--ASSIGN   7845--DOWHILE  7846--ASSIGN   7849--ASSIGN   7850--ASSIGN   7851--ASSIGN   7855--ASSIGN
      7858--CALL     7861--IF       7861--ASSIGN
CRNPTHBGN$
      5314**DCL      5984<<ASSIGN   6004>>ASSIGN   6401>>ASSIGN   6402<<ASSIGN   6403>>ASSIGN   6437>>IF
      6448>>IF       6453>>ASSIGN   6458>>IF
DVC
      5431**DCL      5441--REDEF
DVC.CLM
      5435**DCL      5856<<ASSIGN   5862>>ASSIGN   5934>>IF       5970<<ASSIGN   5971>>ASSIGN   5972>>ASSIGN
      5975>>IF
DVC.LIN
      5435**DCL      5857<<ASSIGN   5902>>IF       5911>>ASSIGN   5915>>ASSIGN   5934>>IF       5977>>IF
DVCCTR
      7631**PROC     5719--CALL     5852--CALL     6515--CALL     6561--CALL     6587--CALL     6604--CALL
      6619--CALL     6634--CALL     6725--CALL     6729--CALL     7886--CALL
DVCCTRCMN IN PROCEDURE DVCCTR
      7817**LABEL    7807--GOTO     7867--GOTO
DVCCTRCNT IN PROCEDURE DVCCTR
      7809**ENTRY    6721--CALL     6722--CALL     6731--CALL     6734--CALL     6735--CALL
DVCCTRX
      4458**DCL      4455--IMP-SIZ  7881>>IF       7881>>IF       7881>>IF       7886<>CALL     7887>>IF
      7887>>IF       7887>>IF       7887>>IF
DVC_PST
      5441**DCL      5858>>IF       5869>>IF       5874>>IF       5889>>ASSIGN   5926>>IF       5926>>IF
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:259  
ERD$
      5295**DCL      4399--IMP-PTR  5667<<ASSIGN   5692>>ASSIGN   5709>>IF       5727>>ASSIGN   5727>>ASSIGN
      5731>>ASSIGN   5770>>IF       5770>>IF       5811>>IF       5827>>IF       6020>>IF       6029>>ASSIGN
      6033>>ASSIGN   6033>>ASSIGN   6050>>ASSIGN   6054>>ASSIGN   6083>>ASSIGN   6087>>ASSIGN   6105>>IF
      6111>>ASSIGN   6111>>ASSIGN   6126>>IF       6145>>ASSIGN   6148>>ASSIGN   6157>>IF       6170>>ASSIGN
      6170>>ASSIGN   6176>>IF       6176>>IF       6186>>ASSIGN   6188>>IF       6192>>ASSIGN   6199>>ASSIGN
      6274>>ASSIGN   6287>>IF       6316>>ASSIGN   6316>>ASSIGN   6321>>ASSIGN   6325>>ASSIGN   6356>>ASSIGN
      6360>>ASSIGN   6528>>ASSIGN   6551>>IF       6564>>IF       6567>>ASSIGN   6567>>ASSIGN   6568>>ASSIGN
      6569>>ASSIGN   6570>>IF       6575>>IF       6584>>CALLBLT  6584>>CALLBLT  6593>>DOCASE   6601>>IF
      6649>>ASSIGN   6651>>IF       6671>>ASSIGN   6720>>IF       6724>>IF       6743--IMP-PTR  6751>>DOCASE
      6756>>ASSIGN   6756>>ASSIGN   6761>>ASSIGN   6761>>ASSIGN   6766>>ASSIGN   6769>>IF       6807>>ASSIGN
      6807>>ASSIGN   6808>>IF       6820>>ASSIGN   6820>>ASSIGN   6833>>ASSIGN   6833>>ASSIGN   6835>>ASSIGN
      6835>>ASSIGN   6847>>ASSIGN   7814>>IF       7816>>ASSIGN   7817>>ASSIGN   7832>>ASSIGN   7833>>ASSIGN
      7834>>ASSIGN   7884<<ASSIGN   7894>>ASSIGN   7895>>ASSIGN
FLG
      5527**DCL      5684<<ASSIGN
FLG.BROKE
      5543**DCL      6682>>IF       6694<<ASSIGN
FLG.ERRED
      5539**DCL      5932>>IF       6690>>IF       6691<<ASSIGN
FLG.LOP
      5531**DCL      5768<<ASSIGN   5798<<ASSIGN   5808<<ASSIGN   5898<<ASSIGN   5918<<ASSIGN   5939<<ASSIGN
      6078<<ASSIGN   6697<<ASSIGN   6702<<ASSIGN   6714>>IF
FLG.SETHI_NONBLN_PST
      5535**DCL      5885>>IF       5890<<ASSIGN
HI_NONBLN
      5468**DCL      5478--REDEF
HI_NONBLN.CLM
      5472**DCL      5891>>IF       5893<<ASSIGN   5895<<ASSIGN   5895>>ASSIGN
HI_NONBLN.LIN
      5472**DCL      5892<<ASSIGN   5892>>ASSIGN
HI_NONBLN_PST
      5478**DCL      5676<<ASSIGN   5889<<ASSIGN   6739>>ASSIGN
IMDSTPTIM
      5334**DCL      5680<<ASSIGN   5682<<ASSIGN   5765<<ASSIGN   5985>>IF       5992>>IF       6405>>IF
KV$ERD.BS_TIM
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:260  
      4417**DCL      6029>>ASSIGN
KV$ERD.CNT
      4443**DCL      6033>>ASSIGN   6111>>ASSIGN   6170>>ASSIGN   6316>>ASSIGN   6567>>ASSIGN
KV$ERD.CUB_CHR
      4434**DCL      6020>>IF       6033>>ASSIGN
KV$ERD.CUD_CHR
      4435**DCL      6287>>IF       6316>>ASSIGN
KV$ERD.CUF_CHR
      4435**DCL      6105>>IF       6111>>ASSIGN
KV$ERD.CUP_ALG
      4422**DCL      6126>>IF       6145>>ASSIGN   6551>>IF       6564>>IF       6769>>IF
KV$ERD.CUP_BIS
      4423**DCL      6568>>ASSIGN   6569>>ASSIGN
KV$ERD.CUP_CHR
      4433**DCL      6567>>ASSIGN   6584>>CALLBLT
KV$ERD.CUP_CLMFRS
      4423**DCL      6575>>IF
KV$ERD.CUP_CMP
      4423**DCL      6570>>IF
KV$ERD.CUU_CHR
      4435**DCL      6157>>IF       6170>>ASSIGN
KV$ERD.ERSTIM
      4417**DCL      7814>>IF       7816>>ASSIGN   7894>>ASSIGN
KV$ERD.EXTSRD_CHR
      4442**DCL      4442--REDEF    4443--REDEF
KV$ERD.FRMFED_CHR
      4437**DCL      5709>>IF
KV$ERD.HPA_ALG
      4422**DCL      6176>>IF       6176>>IF       6186>>ASSIGN   6188>>IF       6192>>ASSIGN   6593>>DOCASE
      6601>>IF
KV$ERD.ICHRQRDCH
      4424**DCL      5770>>IF
KV$ERD.ILNRQRDLN
      4424**DCL      5770>>IF
KV$ERD.RGNSCR
      4426**DCL      5811>>IF       5827>>IF       6720>>IF
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:261  
KV$ERD.RSTINSMOD_CHR
      4433**DCL      6724>>IF
KV$ERD.TMNALG_AFTCR
      4414**DCL      6054>>ASSIGN   6087>>ASSIGN
KV$ERD.TMNALG_AFTCUP
      4415**DCL      6148>>ASSIGN
KV$ERD.TMNALG_AFTHPA
      4416**DCL      6199>>ASSIGN
KV$ERD.TMNALG_AFTHT
      4415**DCL      6274>>ASSIGN
KV$ERD.TMNALG_AFTLF
      4414**DCL      6325>>ASSIGN   6360>>ASSIGN
KV$ERD.TMNALG_BFRCR
      4414**DCL      6050>>ASSIGN   6083>>ASSIGN
KV$ERD.TMNALG_BFRLF
      4415**DCL      6321>>ASSIGN   6356>>ASSIGN   6651>>IF
KV$ERD.TMNALG_FILCHR
      4416**DCL      5692>>ASSIGN   5731>>ASSIGN   6528>>ASSIGN   6649>>ASSIGN   6671>>ASSIGN   7817>>ASSIGN
      7895>>ASSIGN
KV$ERD.TMNALG_PRM1
      4418**DCL      6756>>ASSIGN   6807>>ASSIGN
KV$ERD.TMNALG_PRM2
      4418**DCL      6756>>ASSIGN   6807>>ASSIGN
KV$ERD.TMNALG_PRM3
      4419**DCL      6808>>IF
KV$ERD.TMNALG_PRM4
      4419**DCL      6820>>ASSIGN
KV$ERD.TMNALG_PRM5
      4420**DCL      6820>>ASSIGN
KV$ERD.TMNALG_PRM6
      4420**DCL      5727>>ASSIGN   6761>>ASSIGN   6833>>ASSIGN   6835>>ASSIGN
KV$ERD.TMNALG_PRM7
      4421**DCL      5727>>ASSIGN   6761>>ASSIGN   6833>>ASSIGN   6835>>ASSIGN
KV$ERD.TMNALG_PRM8
      4421**DCL      6766>>ASSIGN   6847>>ASSIGN
KV$ERD.TXT
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:262  
      4442**DCL      6584>>CALLBLT
KV$ERD_WRD IN PROCEDURE AUTONLTMN
      6743**DCL      6751>>DOCASE
KV$MRD.AUTONL
      3872**DCL      5685>>IF       6119>>IF       6494>>IF
KV$MRD.BLANKERASES
      3871**DCL      5865>>IF       5996>>IF
KV$MRD.CALUSR_OTPRPTCHR
      3878**DCL      7545>>IF
KV$MRD.CRISNL
      3872**DCL      6334>>IF
KV$MRD.DEVICEBS
      3871**DCL      6016>>IF
KV$MRD.DEVICECR
      3871**DCL      6042>>IF       6066>>IF
KV$MRD.DEVICELF
      3872**DCL      6287>>IF       6295>>IF
KV$MRD.DSPHEIGHT
      3865**DCL      5839>>IF       5947>>IF
KV$MRD.DVCCLM
      3886**DCL      5685>>IF       5695<<ASSIGN   5701<<ASSIGN   5736<<ASSIGN   5759<<ASSIGN   5833<<ASSIGN
      5856>>ASSIGN   5907>>IF       5967>>IF       5971<<ASSIGN   6679<<ASSIGN   6703<<ASSIGN   6727<<ASSIGN
      6727>>ASSIGN   7813<<ASSIGN
KV$MRD.DVCFLWCTRALG
      3868**DCL      5721>>IF       6521>>IF       6642>>IF       6664>>IF       6745>>IF       7814>>IF
      7887>>IF
KV$MRD.DVCLIN
      3886**DCL      5696>>IF       5699>>IF       5699>>IF       5702<<ASSIGN   5702>>ASSIGN   5727>>ASSIGN
      5735<<ASSIGN   5743<<ASSIGN   5743>>ASSIGN   5760<<ASSIGN   5832<<ASSIGN   5857>>ASSIGN   5858>>IF
      5858>>IF       5863>>ASSIGN   6678<<ASSIGN   6704<<ASSIGN   6705>>IF       6708>>ASSIGN   6709<<ASSIGN
      6769>>IF
KV$MRD.ERD$
      3864**DCL      5667>>ASSIGN   7884>>ASSIGN
KV$MRD.FF_INCCR
      3879**DCL      5736>>IF
KV$MRD.LFISNL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:263  
      3873**DCL      6334>>IF       6340>>IF
KV$MRD.LIMBOCLM
      3878**DCL      5967>>IF       6119>>IF
KV$MRD.LNG
      3868**DCL      5696>>IF       5727>>ASSIGN   5743>>ASSIGN   5770>>IF       6129>>IF       6133>>IF
      6138>>ASSIGN   6769>>IF
KV$MRD.MINSP_FORPST
      3866**DCL      5680>>ASSIGN
KV$MRD.TRMTAB$
      3863**DCL      6208>>IF       6217>>ASSIGN
KV$MRD.TRMTABSET
      3871**DCL      6208>>IF
KV$MRD.WDT
      3865**DCL      5685>>IF       5759>>ASSIGN   5770>>IF       5839>>IF       5967>>IF       5970>>ASSIGN
      6119>>IF       6124>>ASSIGN   6246>>IF       6494>>IF       6756>>ASSIGN
KV$MVD.TRNTBL$ IN PROCEDURE OTPRPTCHR
      6885**DCL      7554>>IF       7557>>ASSIGN   7558>>ASSIGN
KV$PTR.INPCNDPND
      3917**DCL      3926--REDEF    3930--REDEF
KV$PTR.LINLST$
      3913**DCL      3914--REDEF
KV$PTR.MRD$
      3912**DCL      5665>>ASSIGN   7883>>ASSIGN
KV$PTR.MVD$
      3912**DCL      7554>>IF       7557>>ASSIGN   7558>>ASSIGN
KV$PTR.SRD$
      3913**DCL      5666>>ASSIGN
KV$PTR.SSN$
      3911**DCL      7582>>ASSIGN   7582>>ASSIGN
KV$PTR.VDI$
      3911**DCL      5678>>ASSIGN   5715>>ASSIGN   5754>>IF       5786>>ASSIGN   5964>>ASSIGN   5989>>ASSIGN
      6659>>ASSIGN   6659>>ASSIGN   6695>>ASSIGN   6844>>IF       6844>>IF       6847>>ASSIGN   6847>>ASSIGN
      7553>>ASSIGN   7581>>ASSIGN   7581>>ASSIGN   7856>>IF       7894>>ASSIGN
KV$PTR$
      3905**DCL      3911--IMP-PTR  5665>>ASSIGN   5666>>ASSIGN   5678>>ASSIGN   5715>>ASSIGN   5754>>IF
      5786>>ASSIGN   5964>>ASSIGN   5989>>ASSIGN   6659>>ASSIGN   6659>>ASSIGN   6695>>ASSIGN   6844>>IF
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:264  
      6844>>IF       6847>>ASSIGN   6847>>ASSIGN   7553>>ASSIGN   7554>>IF       7557>>ASSIGN   7558>>ASSIGN
      7581>>ASSIGN   7581>>ASSIGN   7582>>ASSIGN   7582>>ASSIGN   7856>>IF       7883>>ASSIGN   7894>>ASSIGN
KV$SHRBFR
      4348**DCL      4363--REDEF    6224--ASSIGN
KV$SHRBFR.BYTSIZ
      4357**DCL      6225>>DOWHILE  6233>>DOWHILE
KV$SHRBFR_BYT
      4363**DCL      6229>>IF       6238>>IF       6242>>IF       6243>>ASSIGN   6244>>ASSIGN   6246>>IF
      6252>>ASSIGN
KV$SRD.BTMRHT
      4050**DCL      4055--REDEF
KV$SRD.BTMRHT.CLM
      4052**DCL      5770>>IF       5777>>ASSIGN   5783>>ASSIGN   5793>>ASSIGN   5797>>ASSIGN   5893>>ASSIGN
      5907>>IF       5916>>ASSIGN
KV$SRD.BTMRHT.LIN
      4052**DCL      5699>>IF       5770>>IF       5792>>ASSIGN   5796>>ASSIGN   5816>>ASSIGN   5839>>IF
      5848<>CALL     5858>>IF       5947>>IF       5954>>IF       5955>>ASSIGN   6301>>IF       6313>>ASSIGN
      6346>>IF       6352>>ASSIGN   6705>>IF       6708>>ASSIGN   6709>>ASSIGN
KV$SRD.CRT
      4126**DCL      4131--REDEF
KV$SRD.CRT.CLM
      4128**DCL      5777<<ASSIGN
KV$SRD.CRT.LIN
      4128**DCL      5781>>IF
KV$SRD.CRT_PST
      4131**DCL      5823<<ASSIGN
KV$SRD.DVCLINBIS
      4168**DCL      5697<<ASSIGN   5697>>ASSIGN   5699>>IF       5760>>ASSIGN   5792>>ASSIGN   5796>>ASSIGN
      5804>>ASSIGN   5816>>ASSIGN   5857>>ASSIGN   5864>>ASSIGN   5946>>ASSIGN   5957<<ASSIGN   5957>>ASSIGN
      6677<<ASSIGN   6704>>ASSIGN   6708<<ASSIGN
KV$SRD.FLDEND
      4090**DCL      4095--REDEF
KV$SRD.HI_NONBLN
      4160**DCL      4165--REDEF
KV$SRD.HI_NONBLN.CLM
      4162**DCL      5783<<ASSIGN   5783>>ASSIGN
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:265  
KV$SRD.HI_NONBLN.LIN
      4162**DCL      5781>>IF
KV$SRD.HI_NONBLN_PST
      4165**DCL      5675>>ASSIGN   6739<<ASSIGN
KV$SRD.LNG
      4058**DCL      5827>>IF       5839>>IF       5947>>IF       5947>>IF       5958>>IF       5958>>ASSIGN
      5959>>IF       5959>>ASSIGN
KV$SRD.NOOPTMIZ
      4204**DCL      5679>>IF
KV$SRD.ORG
      3982**DCL      3987--REDEF
KV$SRD.SCROLL
      4059**DCL      5696>>IF       5699>>IF       5819>>IF       5947>>IF       6301>>IF       6346>>IF
      6705>>IF
KV$SRD.SRDEND
      4195**DCL      4200--REDEF
KV$SRD.TOPLFT
      4016**DCL      4021--REDEF
KV$SRD.TOPLFT.CLM
      4018**DCL      5891>>IF       5912>>ASSIGN   5932>>IF       5934>>IF       5938>>ASSIGN   5998>>IF
KV$SRD.TOPLFT.LIN
      4018**DCL      5804>>ASSIGN   5819>>IF       5835>>ASSIGN   5838>>IF       5839>>IF       5858>>IF
      5947>>IF       5956>>ASSIGN
KV$SRD.UNKRGN
      4062**DCL      5821<<ASSIGN   5826>>IF       5827<<ASSIGN   5838<<ASSIGN   5851<<ASSIGN
KV$SRD.WDT
      4058**DCL      5839>>IF
KV$SSN.OTPCHRCNT IN PROCEDURE OTPRPTCHR
      7386**DCL      7582<<ASSIGN   7582>>ASSIGN
KV$SSN.REDRSPCNT IN PROCEDURE OTPRPTCHR
      7386**DCL      7387--REDEF
KV$STT.OTPCHRCNT IN PROCEDURE OTPRPTCHR
      7345**DCL      7581<<ASSIGN   7581>>ASSIGN
KV$STT.REQSTATS.DSPMSK IN PROCEDURE OTPRPTCHR
      7236**DCL      7242--REDEF
KV$STT.REQSTATS.SLCMSK IN PROCEDURE OTPRPTCHR
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:266  
      7277**DCL      7284--REDEF
KV$TRNTBL.OTPESCCHR IN PROCEDURE OTPRPTCHR
      6956**DCL      6956--REDEF    7554>>IF
KV$TRNTBL.OTPESCCHRBFR1 IN PROCEDURE OTPRPTCHR
      6957**DCL      7557>>ASSIGN   7558>>ASSIGN
KV$USRPRM.STT$
      4328**DCL      7581>>ASSIGN   7581>>ASSIGN
KV$VDI.LINSPD
      4272**DCL      5678>>ASSIGN   7894>>ASSIGN
KV$VDI.OTPCHRCNTAFTLF
      4268**DCL      6659<<ASSIGN   6844>>IF       6847>>ASSIGN
KV$VDI.OTPCNDPND.PST
      4267**DCL      5786<<ASSIGN
KV$VDI.TMPOTPCHRCNT
      4261**DCL      6659>>ASSIGN   6844>>IF       6847>>ASSIGN
KV$VDI.UN_KNWPST
      4269**DCL      5715<<ASSIGN   5754>>IF       5964<<ASSIGN   5989<<ASSIGN   6695<<ASSIGN
KV$VDI.USREVTENB
      4273**DCL      7856>>IF
KV$VDI.OTPBFR_.ADR$ IN PROCEDURE OTPRPTCHR
      7483**DCL      7592>>ASSIGN   7600>>ASSIGN
KV$VDI.OTPBFR_.BYTSIZ IN PROCEDURE OTPRPTCHR
      7483**DCL      7564>>IF       7564>>IF       7577>>ASSIGN   7584<<ASSIGN   7584>>ASSIGN   7598<<ASSIGN
      7598>>ASSIGN
KV$VDI.OTPBFR_.BYTX IN PROCEDURE OTPRPTCHR
      7483**DCL      7586<<ASSIGN   7586>>ASSIGN   7587>>ASSIGN   7589>>DOWHILE  7597<<ASSIGN   7597>>ASSIGN
KV$VDI.TMPOTPCHRCNT IN PROCEDURE OTPRPTCHR
      7488**DCL      7583<<ASSIGN   7583>>ASSIGN
KV$VDI.USRPRM$ IN PROCEDURE OTPRPTCHR
      7458**DCL      7581>>ASSIGN   7581>>ASSIGN
KVO$OTPLCL
      4450**DCL-ENT  7858--CALL
KVV$CALUSR
      4451**DCL-ENT  7549--CALL     7570--CALL
KVV$CALUSR_EVT
      4452**DCL-ENT  7857--CALL
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:267  
KV_100MCRSCNPRDPERCHR
      4580**DCL      5678>>ASSIGN   7894>>ASSIGN
KV_PSTERRCNT
      4634**DCL      6698<<ASSIGN   6698>>ASSIGN
KV_USR_EVT
      5615**DCL      5672>>ASSIGN   7885>>ASSIGN
LOOP
      6006**LABEL    6405--EXIT     6444--EXIT
LSTTABDVCCLM
      5348**DCL      6214>>IF       6220<<ASSIGN   6221>>ASSIGN
LSTTABPHSCLM
      5344**DCL      5677<<ASSIGN   6214>>IF       6218<<ASSIGN
MAIN_LOOP
      5753**LABEL    5965--GOTO
MAXHPACLM
      4604**DCL      6176>>IF       6188>>IF       6192>>ASSIGN
MAXTAB
      5367**DCL      6219<<ASSIGN   6242>>IF       6243<<ASSIGN   6268>>IF       6269<<ASSIGN   6806>>ASSIGN
MRD$
      5303**DCL      3863--IMP-PTR  5665<<ASSIGN   5667>>ASSIGN   5680>>ASSIGN   5685>>IF       5685>>IF
      5685>>IF       5695>>ASSIGN   5696>>IF       5696>>IF       5699>>IF       5699>>IF       5701>>ASSIGN
      5702>>ASSIGN   5702>>ASSIGN   5721>>IF       5727>>ASSIGN   5727>>ASSIGN   5735>>ASSIGN   5736>>IF
      5736>>ASSIGN   5743>>ASSIGN   5743>>ASSIGN   5743>>ASSIGN   5759>>ASSIGN   5759>>ASSIGN   5760>>ASSIGN
      5770>>IF       5770>>IF       5832>>ASSIGN   5833>>ASSIGN   5839>>IF       5839>>IF       5856>>ASSIGN
      5857>>ASSIGN   5858>>IF       5858>>IF       5863>>ASSIGN   5865>>IF       5907>>IF       5947>>IF
      5967>>IF       5967>>IF       5967>>IF       5970>>ASSIGN   5971>>ASSIGN   5996>>IF       6016>>IF
      6042>>IF       6066>>IF       6119>>IF       6119>>IF       6119>>IF       6124>>ASSIGN   6129>>IF
      6133>>IF       6138>>ASSIGN   6208>>IF       6208>>IF       6217>>ASSIGN   6246>>IF       6287>>IF
      6295>>IF       6334>>IF       6334>>IF       6340>>IF       6494>>IF       6494>>IF       6521>>IF
      6642>>IF       6664>>IF       6678>>ASSIGN   6679>>ASSIGN   6703>>ASSIGN   6704>>ASSIGN   6705>>IF
      6708>>ASSIGN   6709>>ASSIGN   6727>>ASSIGN   6727>>ASSIGN   6745>>IF       6756>>ASSIGN   6769>>IF
      6769>>IF       7545>>IF       7813>>ASSIGN   7814>>IF       7883<<ASSIGN   7884>>ASSIGN   7887>>IF
NOD$
      5299**DCL      5237--IMP-PTR  5276--IMP-PTR  5854<<ASSIGN   5855>>ASSIGN   5862>>ASSIGN   5863>>ASSIGN
      5864>>ASSIGN   5972>>ASSIGN   5975>>ASSIGN   5977>>ASSIGN   5979>>IF       5980>>ASSIGN   5982>>ASSIGN
      5984>>ASSIGN   6003>>ASSIGN   6004<<ASSIGN   6005>>ASSIGN   6009>>ASSIGN   6010>>ASSIGN   6011>>DOCASE
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:268  
      6021>>ASSIGN   6024>>IF       6026>>ASSIGN   6026>>ASSIGN   6027>>IF       6028>>ASSIGN   6028>>ASSIGN
      6028>>ASSIGN   6029>>ASSIGN   6030>>IF       6031>>ASSIGN   6031>>ASSIGN   6031>>ASSIGN   6031>>ASSIGN
      6033>>ASSIGN   6033>>ASSIGN   6033>>ASSIGN   6036>>ASSIGN   6037>>ASSIGN   6042>>IF       6047>>ASSIGN
      6048>>ASSIGN   6048>>ASSIGN   6049>>ASSIGN   6050>>ASSIGN   6051>>IF       6052>>CALL     6054>>ASSIGN
      6055>>IF       6056>>CALL     6060>>ASSIGN   6066>>IF       6066>>IF       6066>>IF       6073>>IF
      6073>>IF       6076>>ASSIGN   6076>>ASSIGN   6080>>ASSIGN   6081>>ASSIGN   6081>>ASSIGN   6082>>ASSIGN
      6083>>ASSIGN   6084>>IF       6085>>CALL     6087>>ASSIGN   6088>>IF       6089>>CALL     6092>>ASSIGN
      6099>>ASSIGN   6105>>IF       6110>>ASSIGN   6110>>ASSIGN   6111>>ASSIGN   6111>>ASSIGN   6111>>ASSIGN
      6113>>ASSIGN   6114>>ASSIGN   6129>>IF       6133>>IF       6133>>IF       6138>>ASSIGN   6141>>ASSIGN
      6142>>ASSIGN   6142>>ASSIGN   6144>>ASSIGN   6145>>ASSIGN   6145>>ASSIGN   6146>>ASSIGN   6148>>ASSIGN
      6149>>IF       6150>>CALL     6152>>ASSIGN   6163>>IF       6163>>IF       6163>>IF       6167>>ASSIGN
      6168>>ASSIGN   6168>>ASSIGN   6168>>ASSIGN   6169>>ASSIGN   6169>>ASSIGN   6169>>ASSIGN   6170>>ASSIGN
      6170>>ASSIGN   6170>>ASSIGN   6176>>IF       6176>>IF       6185>>ASSIGN   6186>>ASSIGN   6186>>ASSIGN
      6187>>ASSIGN   6188>>IF       6192>>ASSIGN   6197>>ASSIGN   6199>>ASSIGN   6200>>IF       6201>>CALL
      6208>>IF       6214>>IF       6220>>ASSIGN   6229>>IF       6257>>IF       6262>>ASSIGN   6263>>ASSIGN
      6270>>ASSIGN   6271>>ASSIGN   6273>>ASSIGN   6273>>ASSIGN   6273>>ASSIGN   6274>>ASSIGN   6275>>IF
      6276>>CALL     6278>>IF       6281>>ASSIGN   6287>>IF       6287>>IF       6298>>ASSIGN   6300>>ASSIGN
      6300>>ASSIGN   6300>>ASSIGN   6301>>IF       6307>>IF       6310>>ASSIGN   6313>>ASSIGN   6315>>IF
      6316>>ASSIGN   6316>>ASSIGN   6316>>ASSIGN   6319>>ASSIGN   6319>>ASSIGN   6319>>ASSIGN   6320>>ASSIGN
      6320>>ASSIGN   6321>>ASSIGN   6322>>IF       6323>>CALL     6325>>ASSIGN   6326>>IF       6327>>CALL
      6329>>ASSIGN   6334>>IF       6334>>IF       6339>>ASSIGN   6339>>ASSIGN   6339>>ASSIGN   6343>>ASSIGN
      6345>>ASSIGN   6346>>IF       6352>>ASSIGN   6354>>ASSIGN   6354>>ASSIGN   6354>>ASSIGN   6355>>ASSIGN
      6355>>ASSIGN   6356>>ASSIGN   6357>>IF       6358>>CALL     6360>>ASSIGN   6361>>IF       6362>>CALL
      6364>>ASSIGN   6366>>ASSIGN   6373>>ASSIGN   6379>>IF       6382>>ASSIGN   6382>>ASSIGN   6383>>ASSIGN
      6383>>ASSIGN   6383>>ASSIGN   6384>>ASSIGN   6385>>ASSIGN   6390>>IF       6390>>IF       6396>>IF
      6400>>ASSIGN   6404<<ASSIGN   6405>>IF       6417>>IF       6421>>ASSIGN   6422<<ASSIGN   6422>>ASSIGN
      6423>>ASSIGN   6437>>IF       6439<<ASSIGN   6441<<ASSIGN   6441>>ASSIGN   6442>>ASSIGN   6448>>IF
      6451>>ASSIGN   6452>>ASSIGN   6453<<ASSIGN   6454>>ASSIGN   6458>>IF       6458>>ASSIGN   6460>>IF
      6463>>ASSIGN   6472<<ASSIGN   6473>>DOWHILE  6476<<ASSIGN   6476>>ASSIGN   6477>>DOWHILE  6481>>DOCASE
      6486>>IF       6487>>ASSIGN   6488>>ASSIGN   6492>>ASSIGN   6494>>IF       6498>>ASSIGN   6499>>ASSIGN
      6499>>ASSIGN   6504>>ASSIGN   6514>>ASSIGN   6524>>IF       6527>>ASSIGN   6535>>IF       6538>>ASSIGN
      6543>>ASSIGN   6543>>ASSIGN   6543>>ASSIGN   6556>>CALL     6559>>CALL     6568>>ASSIGN   6569>>ASSIGN
      6600>>CALL     6618>>ASSIGN   6632>>ASSIGN   6633>>ASSIGN   6645>>IF       6648>>ASSIGN   6651>>ASSIGN
      6656>>ASSIGN   6664>>IF       6670>>ASSIGN   6674>>ASSIGN   6674>>ASSIGN   6677>>ASSIGN   6678>>ASSIGN
      6679>>ASSIGN   6803>>IF       6803>>IF       6804>>ASSIGN   6823>>ASSIGN   6823>>ASSIGN   6823>>ASSIGN
      6830>>IF       6830>>IF       6831>>ASSIGN   6836>>ASSIGN   6836>>ASSIGN   6836>>ASSIGN   6847>>ASSIGN
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:269  
      6850>>ASSIGN   6850>>ASSIGN
NODFNCCHR
      4576**DCL      6492>>ASSIGN   6656>>ASSIGN
NODFNCDAT
      4575**DCL      4576--REDEF    4577--REDEF
NODFNCOFS
      4577**DCL      6514>>ASSIGN
NUM IN PROCEDURE OTPANSPN
      7614**DCL      7613--PROC     7615>>IF       7616>>IF       7617>>IF       7619>>CALLBLT
NXTTABCLM
      5358**DCL      6222<<ASSIGN   6233>>DOWHILE  6252<<ASSIGN   6267>>IF       6268>>IF       6269>>ASSIGN
      6270>>ASSIGN
ORGHI_NONBLN
      5505**DCL      5515--REDEF
ORGHI_NONBLN_PST
      5515**DCL      5675<<ASSIGN   5676>>ASSIGN   5874>>IF       5880>>IF       5899>>ASSIGN   5926>>IF
OTPANSPN
      7613**PROC     5845--CALL     5848--CALL     6556--CALL     6559--CALL     6600--CALL
OTPRPTCHR
      6860**PROC     5693--CALL     5732--CALL     6493--CALL     6529--CALL     6534--CALL     6650--CALL
      6658--CALL     6672--CALL     6728--CALL     7865--CALL     7896--CALL
PARM
      4455**DCL         8--PROC     4458--REDEF    4488--REDEF    7880--ENTRY
PHSPSTMOD
      5519**DCL      5673<<ASSIGN   5761<<ASSIGN   5769>>IF       5770>>IF       5770>>IF       5770>>IF
      5770>>IF       5776>>IF       5778<<ASSIGN   5778>>ASSIGN   5780>>IF       5781>>IF       5790>>IF
      5791>>IF       5794>>IF       5795>>IF       5803>>IF       5805>>IF       5806<<ASSIGN   5811>>IF
      5818<<ASSIGN   5869>>IF       5877<<ASSIGN   5921>>IF       5924<<ASSIGN   5926>>IF       5930<<ASSIGN
      5932>>IF       5937>>IF       5941>>IF       5942<<ASSIGN   5953<<ASSIGN   5997>>ASSIGN   6692<<ASSIGN
      6715>>IF       6718>>IF       6719>>IF       6733>>IF       6736<<ASSIGN   6736>>ASSIGN
PRM IN PROCEDURE DVCCTR
      7632**DCL      7631--PROC     7633--REDEF    7809--ENTRY    7812>>IF       7812>>IF       7823>>IF
      7828--ASSIGN   7833>>ASSIGN
PRMTXT.SIZ IN PROCEDURE DVCCTR
      7634**DCL      7827>>IF       7829>>ASSIGN
PRVNOD$
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:270  
      5318**DCL      6003<<ASSIGN   6005>>ASSIGN   6421<<ASSIGN   6423>>ASSIGN   6452<<ASSIGN   6454>>ASSIGN
      6458<<ASSIGN   6459<<ASSIGN   6463>>ASSIGN   6804>>ASSIGN   6831>>ASSIGN
PSTTREX_CRT
      5230**DCL      5997>>ASSIGN
R2
      5660**DCL      5288--IMP-SIZ  5661--REDEF    5662--REDEF    6224<<ASSIGN   6225>>DOWHILE  6229>>IF
      6231<<ASSIGN   6231>>ASSIGN   6233>>DOWHILE  6238>>IF       6242>>IF       6243>>ASSIGN   6244>>ASSIGN
      6246>>IF       6252>>ASSIGN   6254<<ASSIGN   6254>>ASSIGN   6400<<ASSIGN   6401>>ASSIGN   6401>>ASSIGN
      6749<<ASSIGN   6751>>DOCASE   6768>>IF       6773<<ASSIGN   6774>>IF       6775<<ASSIGN   6804<<ASSIGN
      6805>>IF       6805<<ASSIGN   6805>>ASSIGN   6806<<ASSIGN   6807>>ASSIGN   6812<<ASSIGN   6812>>ASSIGN
      6813>>ASSIGN   6831<<ASSIGN   6832>>IF       6832<<ASSIGN   6832>>ASSIGN   6833>>ASSIGN   7577<<ASSIGN
      7581>>ASSIGN   7582>>ASSIGN   7583>>ASSIGN   7584>>ASSIGN   7585>>ASSIGN   7586>>ASSIGN   7587<<ASSIGN
      7587>>ASSIGN   7589>>DOWHILE  7592>>ASSIGN   7593<<ASSIGN   7593>>ASSIGN   7600>>ASSIGN   7601<<ASSIGN
      7601>>ASSIGN   7837>>ASSIGN   7839<<ASSIGN   7843>>ASSIGN   7843>>ASSIGN   7844>>ASSIGN   7845>>DOWHILE
      7846>>ASSIGN   7846>>ASSIGN   7847<<ASSIGN   7847>>ASSIGN   7849>>ASSIGN
R2H.U
      5663**DCL      7615<<ASSIGN   7616<<ASSIGN   7617<<ASSIGN   7618<<ASSIGN   7619>>CALLBLT  7620>>ASSIGN
R2U
      5661**DCL      6402>>ASSIGN   6814>>DOWHILE  6818>>ASSIGN   7578<<ASSIGN   7578>>ASSIGN
RQS
      5394**DCL      5404--REDEF
RQS.CLM
      5398**DCL      5793<<ASSIGN   5797<<ASSIGN   5900<<ASSIGN   5900>>ASSIGN   5912<<ASSIGN   5916<<ASSIGN
      5938<<ASSIGN   5975>>IF       5998>>IF       6024>>IF       6026>>ASSIGN   6036>>ASSIGN   6042>>IF
      6058>>IF       6066>>IF       6077<<ASSIGN   6091>>IF       6105>>IF       6110>>ASSIGN   6113>>ASSIGN
      6119>>IF       6124<<ASSIGN   6146>>ASSIGN   6187>>ASSIGN   6208>>IF       6214>>IF       6218>>ASSIGN
      6238>>IF       6278>>IF       6365>>IF       6379>>IF       6382>>ASSIGN   6384>>ASSIGN
RQS.LIN
      5398**DCL      5792<<ASSIGN   5796<<ASSIGN   5804<<ASSIGN   5816<<ASSIGN   5817<<ASSIGN   5902>>IF
      5911<<ASSIGN   5915<<ASSIGN   5934>>IF       5946>>ASSIGN   5977>>IF       6066>>IF       6073>>IF
      6076<<ASSIGN   6129>>IF       6142>>ASSIGN   6163>>IF       6168>>ASSIGN   6287>>IF       6300>>ASSIGN
      6301>>IF       6313>>ASSIGN   6320>>ASSIGN   6334>>IF       6339>>ASSIGN   6346>>IF       6352>>ASSIGN
      6355>>ASSIGN
RQS_PST
      5404**DCL      5789<<ASSIGN   5807<<ASSIGN   5823>>ASSIGN   5825<<ASSIGN   5858>>IF       5869>>IF
      5880>>IF       5899<<ASSIGN   5926>>IF
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:271  
SCRCNT
      5523**DCL      5674<<ASSIGN   5770>>IF       5770>>IF       5770>>IF       5770>>IF       5777>>ASSIGN
      5783>>ASSIGN   5790>>IF       5792>>ASSIGN   5793>>ASSIGN   5794>>IF       5796>>ASSIGN   5797>>ASSIGN
      5803>>IF       5816>>IF       5955<<ASSIGN   5956<<ASSIGN   5957>>ASSIGN   5958>>IF       5958<<ASSIGN
      5959>>IF       5959<<ASSIGN   6716>>IF       6716>>ASSIGN   6717>>ASSIGN   6720>>IF
SEND_AGAIN IN PROCEDURE DVCCTR
      7851**LABEL    7862--GOTO
SRD$
      5307**DCL      3954--IMP-PTR  5666<<ASSIGN   5675>>ASSIGN   5679>>IF       5696>>IF       5697>>ASSIGN
      5697>>ASSIGN   5699>>IF       5699>>IF       5699>>IF       5760>>ASSIGN   5770>>IF       5770>>IF
      5777>>ASSIGN   5777>>ASSIGN   5781>>IF       5781>>IF       5783>>ASSIGN   5783>>ASSIGN   5783>>ASSIGN
      5792>>ASSIGN   5792>>ASSIGN   5793>>ASSIGN   5796>>ASSIGN   5796>>ASSIGN   5797>>ASSIGN   5804>>ASSIGN
      5804>>ASSIGN   5816>>ASSIGN   5816>>ASSIGN   5819>>IF       5819>>IF       5821>>ASSIGN   5823>>ASSIGN
      5826>>IF       5827>>IF       5827>>ASSIGN   5835>>ASSIGN   5838>>IF       5838>>ASSIGN   5839>>IF
      5839>>IF       5839>>IF       5839>>IF       5848>>CALL     5851>>ASSIGN   5857>>ASSIGN   5858>>IF
      5858>>IF       5864>>ASSIGN   5891>>IF       5893>>ASSIGN   5907>>IF       5912>>ASSIGN   5916>>ASSIGN
      5932>>IF       5934>>IF       5938>>ASSIGN   5946>>ASSIGN   5947>>IF       5947>>IF       5947>>IF
      5947>>IF       5947>>IF       5954>>IF       5955>>ASSIGN   5956>>ASSIGN   5957>>ASSIGN   5957>>ASSIGN
      5958>>IF       5958>>ASSIGN   5959>>IF       5959>>ASSIGN   5998>>IF       6301>>IF       6301>>IF
      6313>>ASSIGN   6346>>IF       6346>>IF       6352>>ASSIGN   6677>>ASSIGN   6704>>ASSIGN   6705>>IF
      6705>>IF       6708>>ASSIGN   6708>>ASSIGN   6709>>ASSIGN   6739>>ASSIGN
SVDPTHALT$
      5322**DCL      5980<<ASSIGN   5981>>ASSIGN   6401>>ASSIGN   6402>>ASSIGN   6439>>ASSIGN   6451<<ASSIGN
      6459>>ASSIGN
SVDPTHEND$
      5326**DCL      5981<<ASSIGN   5982>>ASSIGN   5983>>ASSIGN   6390>>IF       6400>>ASSIGN   6403<<ASSIGN
      6404>>ASSIGN   6468>>IF       6473>>DOWHILE  6535>>IF
TABCLM
      5352**DCL      6221<<ASSIGN   6242>>IF       6243>>ASSIGN   6244<<ASSIGN   6262>>ASSIGN   6268>>IF
      6269>>ASSIGN
TABCNT
      5363**DCL      6223<<ASSIGN   6241<<ASSIGN   6241>>ASSIGN   6261>>IF       6263>>ASSIGN   6271>>ASSIGN
TIM IN PROCEDURE CMPTMN
      6786**DCL      6788--REDEF    6807<<ASSIGN   6808>>IF       6820<<ASSIGN   6822>>ASSIGN   6833<<ASSIGN
      6834>>ASSIGN
TIMPERCHR
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:272  
      5330**DCL      5678<<ASSIGN   5727>>ASSIGN   6029>>ASSIGN   6778>>ASSIGN   6822>>ASSIGN   6834>>ASSIGN
      6835>>ASSIGN   6847>>ASSIGN   7816>>ASSIGN
TMN IN PROCEDURE CMPTMN
      6785**DCL      6784--PROC     6791>>DOCASE   6822<<ASSIGN   6823>>ASSIGN   6834<<ASSIGN   6835<<ASSIGN
      6836>>ASSIGN   6847<<ASSIGN   6849>>IF       6849<<ASSIGN   6850>>ASSIGN   6852<<ASSIGN
TREX
      5338**DCL      5709<<DOINDEX  5946<<ASSIGN   5947>>IF       5947>>IF       5954>>IF       5955>>ASSIGN
      5956>>ASSIGN   5990<<ASSIGN   5995<<ASSIGN   5996<<ASSIGN   5997<<ASSIGN   5998>>IF       6001<<ASSIGN
      6009>>ASSIGN   6010>>ASSIGN   6390>>IF       6414>>IF       6417>>IF       6420<<ASSIGN   6420>>ASSIGN
      6425<<ASSIGN   6425>>ASSIGN   6436>>DOWHILE  6436>>DOWHILE  6442<<ASSIGN   6444>>IF       6447<<ASSIGN
      6447>>ASSIGN
TST.U IN PROCEDURE CMPTMN
      6790**DCL      6813<<ASSIGN   6814>>DOWHILE  6814>>DOWHILE  6818<<ASSIGN   6818>>ASSIGN   6818>>ASSIGN
      6820>>ASSIGN
USR_EVT
      5580**DCL      5672<<ASSIGN   7857<>CALL     7885<<ASSIGN
USR_EVT.ID
      5586**DCL      7821<<ASSIGN
USR_EVT.PRM
      5586**DCL      7855<<ASSIGN   7856>>IF       7859>>IF       7860>>ASSIGN
USR_GETOTPBFR IN PROCEDURE OTPRPTCHR
      7535**DCL      7570<>CALL
USR_GETOTPBFR.ESTBYTSIZ IN PROCEDURE OTPRPTCHR
      7541**DCL      7569<<ASSIGN
USR_GETOTPBFR.FNC IN PROCEDURE OTPRPTCHR
      7539**DCL      7568<<ASSIGN
USR_OTPRPTCHR
      5651**DCL      7549<>CALL
USR_OTPRPTCHR.CHR
      5657**DCL      5692<<ASSIGN   5731<<ASSIGN   6492<<ASSIGN   6528<<ASSIGN   6533<<ASSIGN   6649<<ASSIGN
      6656<<ASSIGN   6671<<ASSIGN   6726<<ASSIGN   7554>>IF       7557<<ASSIGN   7592>>ASSIGN   7817<<ASSIGN
      7895<<ASSIGN
USR_OTPRPTCHR.CNT
      5657**DCL      5691>>IF       5727<<ASSIGN   5730>>IF       6487<<ASSIGN   6490<<ASSIGN   6504>>ASSIGN
      6527<<ASSIGN   6532<<ASSIGN   6648<<ASSIGN   6657<<ASSIGN   6670<<ASSIGN   6716<<ASSIGN   6717<<ASSIGN
      6727>>ASSIGN   6744<<ASSIGN   6756<<ASSIGN   6756>>ASSIGN   6761<<ASSIGN   6761>>ASSIGN   6766<<ASSIGN
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:273  
      6766>>ASSIGN   6777>>IF       6778<<ASSIGN   6778>>ASSIGN   7545>>IF       7559<<ASSIGN   7559>>ASSIGN
      7563>>DOWHILE  7569>>ASSIGN   7577>>ASSIGN   7585<<ASSIGN   7585>>ASSIGN   7599<<ASSIGN   7599>>ASSIGN
      7811>>ASSIGN   7816<<ASSIGN   7894<<ASSIGN   7896>>IF
USR_OTPRPTCHR.FNC
      5655**DCL      7548<<ASSIGN   7558<<ASSIGN   7559>>IF       7561<<ASSIGN   7564>>IF       7578>>IF
      7594>>IF       7600>>ASSIGN
USR_PST.PHSPST
      4521**DCL      4526--REDEF
USR_PST.PHSPST.CLM
      4523**DCL      6703>>ASSIGN
USR_PST.PHSPST.LIN
      4523**DCL      5699>>IF       5760>>ASSIGN   5817>>ASSIGN   5819>>IF       5836>>ASSIGN   6704>>ASSIGN
USR_PST.PHSPSTMOD
      4529**DCL      5673>>ASSIGN   5785>>IF       5799>>IF       5834>>IF
USR_PST.PHSPST_PST
      4526**DCL      5789>>ASSIGN   5807>>ASSIGN   5825>>ASSIGN
USR_PST.SCRCNT
      4529**DCL      5674>>ASSIGN
USR_PST.TOPPAGCNT
      4494**DCL      5705>>IF       5709>>DOINDEX  5743>>ASSIGN
V_O IN PROCEDURE DVCCTR
      7674**DCL      7822<<ASSIGN   7858<>CALL
V_O.BFR_.ADR$ IN PROCEDURE DVCCTR
      7707**DCL      7824<<ASSIGN   7828<<ASSIGN   7832<<ASSIGN   7837>>ASSIGN   7851<<ASSIGN
V_O.BFR_.BYTSIZ IN PROCEDURE DVCCTR
      7707**DCL      7825<<ASSIGN   7829<<ASSIGN   7834<<ASSIGN   7837>>ASSIGN   7837>>ASSIGN   7839>>ASSIGN
      7846>>ASSIGN   7849<<ASSIGN   7855>>ASSIGN   7861>>IF       7861<<ASSIGN
V_O.BFR_.BYTX IN PROCEDURE DVCCTR
      7707**DCL      7833<<ASSIGN   7834>>ASSIGN   7837>>ASSIGN   7843<<ASSIGN   7845>>DOWHILE  7850<<ASSIGN
Y$BIN IN PROCEDURE DVCCTR
      7637**DCL      7833>>ASSIGN   7834>>ASSIGN
Y$BIN IN PROCEDURE OTPRPTCHR
      7507**DCL      7592<<ASSIGN   7600<<ASSIGN
Y$NOD
      5237**DCL      5276--REDEF    5855<<ASSIGN   5980--ASSIGN   5982<<ASSIGN   5982>>ASSIGN   5984--ASSIGN
      6005<<ASSIGN   6005>>ASSIGN   6403--ASSIGN   6422--ASSIGN   6423<<ASSIGN   6441--ASSIGN   6452--ASSIGN
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:274  
      6454<<ASSIGN   6458--ASSIGN   6459--ASSIGN   6463<<ASSIGN   6476--ASSIGN   6538--ASSIGN
Y$NOD.DVCCLM
      5258**DCL      5862<<ASSIGN   5972<<ASSIGN   6024>>IF       6026>>ASSIGN   6036<<ASSIGN   6042>>IF
      6049<<ASSIGN   6066>>IF       6082<<ASSIGN   6105>>IF       6110>>ASSIGN   6113<<ASSIGN   6146<<ASSIGN
      6176>>IF       6187<<ASSIGN   6188>>IF       6192<<ASSIGN   6208>>IF       6214>>IF       6220>>ASSIGN
      6229>>IF       6262<<ASSIGN   6270<<ASSIGN   6278>>IF       6345<<ASSIGN   6379>>IF       6382>>ASSIGN
      6384<<ASSIGN   6494>>IF       6498<<ASSIGN   6559<>CALL     6568>>ASSIGN   6600<>CALL     6618>>ASSIGN
      6632>>ASSIGN   6633>>ASSIGN   6679>>ASSIGN   6804>>ASSIGN   6804>>ASSIGN
Y$NOD.DVCLIN
      5255**DCL      5863<<ASSIGN   6066>>IF       6073>>IF       6076>>ASSIGN   6133>>IF       6138<<ASSIGN
      6142<<ASSIGN   6163>>IF       6163>>IF       6168>>ASSIGN   6169<<ASSIGN   6169>>ASSIGN   6287>>IF
      6300>>ASSIGN   6320<<ASSIGN   6334>>IF       6339>>ASSIGN   6355<<ASSIGN   6499<<ASSIGN   6499>>ASSIGN
      6556<>CALL     6569>>ASSIGN   6678>>ASSIGN   6831>>ASSIGN   6831>>ASSIGN
Y$NOD.DVCLINBIS
      5261**DCL      5864<<ASSIGN   6066>>IF       6073>>IF       6076>>ASSIGN   6129>>IF       6142>>ASSIGN
      6163>>IF       6168>>ASSIGN   6287>>IF       6300>>ASSIGN   6301>>IF       6313<<ASSIGN   6320>>ASSIGN
      6334>>IF       6339>>ASSIGN   6346>>IF       6352<<ASSIGN   6355>>ASSIGN   6677>>ASSIGN
Y$NOD.FNC
      5240**DCL      6009<<ASSIGN   6011>>DOCASE   6021<<ASSIGN   6027>>IF       6257>>IF       6298<<ASSIGN
      6307>>IF       6315>>IF       6343<<ASSIGN   6481>>DOCASE   6492>>ASSIGN   6514>>ASSIGN   6539>>IF
      6656>>ASSIGN   6803>>IF       6803>>IF       6830>>IF       6830>>IF
Y$NOD.FNCCNT
      5274**DCL      6026<<ASSIGN   6028>>ASSIGN   6031>>ASSIGN   6033>>ASSIGN   6047<<ASSIGN   6080<<ASSIGN
      6110<<ASSIGN   6111>>ASSIGN   6144<<ASSIGN   6168<<ASSIGN   6169>>ASSIGN   6170>>ASSIGN   6185<<ASSIGN
      6263<<ASSIGN   6271<<ASSIGN   6273>>ASSIGN   6300<<ASSIGN   6310<<ASSIGN   6316>>ASSIGN   6319>>ASSIGN
      6339<<ASSIGN   6354>>ASSIGN   6382<<ASSIGN   6383>>ASSIGN   6390>>IF       6417>>IF       6460>>IF
      6477>>DOWHILE  6487>>ASSIGN   6488<<ASSIGN   6674<<ASSIGN   6674>>ASSIGN   6823>>ASSIGN   6836>>ASSIGN
Y$NOD.PSTRQR
      5243**DCL      5979>>IF       6396>>IF
Y$NOD.PSTRQR.HRZ
      5246**DCL      5975<<ASSIGN   6037<<ASSIGN   6060<<ASSIGN   6092<<ASSIGN   6099<<ASSIGN   6114<<ASSIGN
      6133>>IF       6152<<ASSIGN   6176>>IF       6197<<ASSIGN   6281<<ASSIGN   6366<<ASSIGN   6373<<ASSIGN
      6385<<ASSIGN
Y$NOD.PSTRQR.VRT
      5249**DCL      5977<<ASSIGN   6141<<ASSIGN   6167<<ASSIGN   6329<<ASSIGN   6364<<ASSIGN
Y$NOD.TIM
PL6.E3A0      #001=KVO$GNRPST File=KVO$GNRPST.:E05TSI                            WED 07/30/97 02:08 Page:275  
      5265**DCL      5983<<ASSIGN   6028<<ASSIGN   6028>>ASSIGN   6031<<ASSIGN   6031>>ASSIGN   6033<<ASSIGN
      6033>>ASSIGN   6048<<ASSIGN   6048>>ASSIGN   6081<<ASSIGN   6081>>ASSIGN   6111<<ASSIGN   6111>>ASSIGN
      6145<<ASSIGN   6145>>ASSIGN   6170<<ASSIGN   6170>>ASSIGN   6186<<ASSIGN   6186>>ASSIGN   6273<<ASSIGN
      6273>>ASSIGN   6316<<ASSIGN   6316>>ASSIGN   6319<<ASSIGN   6319>>ASSIGN   6354<<ASSIGN   6354>>ASSIGN
      6383<<ASSIGN   6383>>ASSIGN   6390>>IF       6390>>IF       6405>>IF       6468>>IF       6543>>ASSIGN
      6543>>ASSIGN   6823<<ASSIGN   6823>>ASSIGN   6836<<ASSIGN   6836>>ASSIGN   6847>>ASSIGN   6850<<ASSIGN
      6850>>ASSIGN
Y$NOD.TIMAFT
      5271**DCL      6029<<ASSIGN   6030>>IF       6031>>ASSIGN   6054<<ASSIGN   6055>>IF       6056<>CALL
      6087<<ASSIGN   6088>>IF       6089<>CALL     6148<<ASSIGN   6149>>IF       6150<>CALL     6199<<ASSIGN
      6200>>IF       6201<>CALL     6274<<ASSIGN   6275>>IF       6276<>CALL     6325<<ASSIGN   6326>>IF
      6327<>CALL     6360<<ASSIGN   6361>>IF       6362<>CALL     6486>>IF       6504<<ASSIGN   6543<<ASSIGN
      6543>>ASSIGN   6664>>IF       6670>>ASSIGN
Y$NOD.TIMBFR
      5268**DCL      6050<<ASSIGN   6051>>IF       6052<>CALL     6083<<ASSIGN   6084>>IF       6085<>CALL
      6321<<ASSIGN   6322>>IF       6323<>CALL     6356<<ASSIGN   6357>>IF       6358<>CALL     6524>>IF
      6527>>ASSIGN   6645>>IF       6648>>ASSIGN   6651<<ASSIGN
Y$NOD.TREX
      5252**DCL      6010<<ASSIGN   6442>>ASSIGN
Y$NODMOV.COPDWN
      5280**DCL      6423>>ASSIGN   6454>>ASSIGN   6463>>ASSIGN
Y$NODS
      5288**DCL      6401<<ASSIGN   6401>>ASSIGN   7837>>ASSIGN
Y_OTPLCL IN PROCEDURE DVCCTR
      7748**DCL      7822>>ASSIGN
Y_TRE
      5211**DCL      6390>>IF       6417>>IF       6436>>DOWHILE
Y_TRE.FNC
      5225**DCL      6009>>ASSIGN
Y_TRE.NXTX
      5228**DCL      6414>>IF       6420>>ASSIGN   6425>>ASSIGN
Y_TREDAT
      4659**DCL      5211--REDEF
