

CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=1  
        1         1             /* LLgen generated code from source zbl$tokens:c.:ZBC3TOU */
        2         2             /* $Header: incl,v 2.2 87/02/16 21:35:40 ceriel Exp $ */
        3         3             #ifdef LL_DEBUG
        4         4   *S*       #define LL_assert(x) if(!(x)) LL_badassertion("x",__FILE__,__LINE__)
        5         5   *S*       #else
        6         6             #define LL_assert(x)  /* nothing */
        7         7             #endif
        8         8
        9         9             extern int LLsymb;
       10        10             extern char LLsets[];
       11        11
       12        12             #define LL_SAFE(x) /* Nothing */
       13        13             #define LL_SSCANDONE(x)  if (LLsymb != x) LLerror(x); else
       14        14             #define LL_SCANDONE(x)   if (LLsymb != x) LLerror(x); else
       15        15             #define LL_T_NOSCANDONE(x)  LLscan(x)
       16        16
       17        17             # include "Lpars:h"
       18        18
       19        19             extern unsigned int LLscnt[];
       20        20             extern unsigned int LLtcnt[];
       21        21             extern int LLcsymb;
       22        22             extern int LL_symb;
       23        23
       24        24             #define LLsdecr(d) {LL_assert(LLscnt[d] > 0); LLscnt[d]--;}
       25        25             #define LLtdecr(d) {LL_assert(LLtcnt[d] > 0); LLtcnt[d]--;}
       26        26             #define LLsincr(d) LLscnt[d]++
       27        27             #define LLtincr(d) LLtcnt[d]++
       28        28
       29        29
       30        30             # line 21 "zbl$tokens:g.:ZBC3TOU"
       31        31
       32        32             # include "types:h"
       33        33             # include "io:h"
       34        34             # include "extern:h"
       35        35             # include "assert:h"
       36        36             # include "cclass:h"
       37        37
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=2  
       38        38             # ifndef NORCSID
       39        39             static string   rcsidc = "$Header: tokens.g,v 2.6 87/03/10 01:16:49 ceriel Exp
                                $";
       40        40             # endif
       41        41
       42        42
       43        43             extern int   scanner();
       44        44             extern       LLmessage();
       45        45             extern int   input();
       46        46             extern    unput();
       47        47             extern    skipcomment();
       48        48             # ifdef LINE_DIRECTIVE
       49        49   *S*       STATIC    linedirective();
       50        50   *S*       # endif
       51        51             STATIC string   cpy();
       52        52             STATIC string   vallookup();
       53        53             # line 66 "zbl$tokens:g.:ZBC3TOU"
       54        54
       55        55
       56        56
       57        57
       58        58
       59        59
       60        60             typedef struct keyword {
       61        61    1         string   w_word;
       62        62    1         int   w_value;
       63        63    1        } t_keyw, *p_keyw;
       64        64
       65        65
       66        66
       67        67
       68        68
       69        69
       70        70             static t_keyw resword[] = {
       71        71    1         { "token",  C_TOKEN  },
       72        72    1         { "avoid",  C_AVOID  },
       73        73    1         { "prefer", C_PREFER },
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=3  
       74        74    1         { "persistent", C_PERSISTENT  },
       75        75    1         { "default",   C_DEFAULT   },
       76        76    1         { "if",     C_IF  },
       77        77    1         { "while",  C_WHILE  },
       78        78    1         { "first",  C_FIRST  },
       79        79    1         { "start",  C_START  },
       80        80    1         { "lexical",   C_LEXICAL   },
       81        81    1         { "onerror",   C_ONERROR   },
       82        82    1         { 0,     0  }
       83        83    1        };
       84        84
       85        85             static t_token  savedtok;
       86        86             # ifdef LINE_DIRECTIVE
       87        87   *S*       static  int  nostartline;
       88        88   *S*       # endif
       89        89
       90        90             scanner() {
       91        91    1
       92        92    1
       93        93    1
       94        94    1         register int   ch;
       95        95    1         register char *p = ltext;
       96        96    1         int      reserved = 0;
       97        97    1         char     *max = &ltext[LTEXTSZ - 1];
       98        98    1
       99        99    1         if (savedtok.t_tokno) {
      100       100    2
      101       101    2
      102       102    2
      103       103    2            lextoken = savedtok;
      104       104    2            savedtok.t_tokno = 0;
      105       105    2            return lextoken.t_tokno;
      106       106    2         }
      107       107    1         for (;;) {
      108       108    2            ch = input();
      109       109    2            if (ch == EOF) return ch;
      110       110    2        # ifdef LINE_DIRECTIVE
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=4  
      111       111   *S*           if (ch == '#' && !nostartline) {
      112       112   *S*              linedirective();
      113       113   *S*              continue;
      114       114   *S*           }
      115       115   *S*       # endif
      116       116    2            switch(c_class[ch]) {
      117       117    3              case ISLIT :
      118       118    3               for (;;) {
      119       119    4                  ch = input();
      120       120    4                  if (ch == '\n' || ch == EOF) {
      121       121    5                     error(linecount,"missing '");
      122       122    5                     break;
      123       123    5                  }
      124       124    4                  if (ch == '\'') break;
      125       125    4                  if (ch == '\\') {
      126       126    5                     *p++ = ch;
      127       127    5                     ch = input();
      128       128    5                  }
      129       129    4                  *p++ = ch;
      130       130    4                  if (p > max) p--;
      131       131    4               }
      132       132    3               *p = '\0';
      133       133    3               lextoken.t_string = ltext;
      134       134    3               return C_LITERAL;
      135       135    3              case ISCOM :
      136       136    3               skipcomment(0);
      137       137    3
      138       138    3              case ISSPA :
      139       139    3               continue;
      140       140    3              case ISDIG : {
      141       141    4               register i = 0;
      142       142    4               do {
      143       143    5                  i = 10 * i + (ch - '0');
      144       144    5                  ch= input();
      145       145    5               } while (c_class[ch] == ISDIG);
      146       146    4               lextoken.t_num = i;
      147       147    4               unput(ch);
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=5  
      148       148    4               return C_NUMBER; }
      149       149    3              default:
      150       150    3               return ch;
      151       151    3              case ISKEY :
      152       152    3               reserved = 1;
      153       153    3               ch = input();
      154       154    3
      155       155    3              case ISLET :
      156       156    3               do {
      157       157    4                  if (reserved && ch >= 'A' && ch <= 'Z') {
      158       158    5                     ch += 'a' - 'A';
      159       159    5                  }
      160       160    4                  *p++ = ch;
      161       161    4                  if (p > max) p--;
      162       162    4                  ch = input();
      163       163    4               } while (c_class[ch] == ISDIG || c_class[ch] == ISLET);
      164       164    3               unput(ch);
      165       165    3               *p = '\0';
      166       166    3               if (reserved) {
      167       167    4
      168       168    4
      169       169    4                  register p_keyw w;
      170       170    4
      171       171    4                  w = resword;
      172       172    4                  while (w->w_word) {
      173       173    5                     if (! strcmp(ltext,w->w_word)) {
      174       174    6
      175       175    6
      176       176    6
      177       177    6                        return w->w_value;
      178       178    6                     }
      179       179    5                     w++;
      180       180    5                  }
      181       181    4                  error(linecount,"illegal reserved word");
      182       182    4               }
      183       183    3               lextoken.t_string = ltext;
      184       184    3               return C_IDENT;
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=6  
      185       185    3            }
      186       186    2         }
      187       187    1        }
      188       188
      189       189             static int   backupc;
      190       190             static int   nonline;
      191       191
      192       192             input() {
      193       193    1
      194       194    1
      195       195    1
      196       196    1         register c;
      197       197    1
      198       198    1                if (c = backupc) {
      199       199    2
      200       200    2
      201       201    2            backupc = 0;
      202       202    2                        return c;
      203       203    2         }
      204       204    1         if ((c = getc(finput)) == EOF) return c;
      205       205    1        # ifdef LINE_DIRECTIVE
      206       206   *S*        nostartline = 1;
      207       207   *S*       # endif
      208       208    1         if (!nonline) {
      209       209    2            linecount++;
      210       210    2        # ifdef LINE_DIRECTIVE
      211       211   *S*           nostartline = 0;
      212       212   *S*       # endif
      213       213    2            nonline = 1;
      214       214    2         }
      215       215    1         if (c == '\n') nonline = 0;
      216       216    1         return c;
      217       217    1        }
      218       218
      219       219             unput(c) {
      220       220    1
      221       221    1
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=7  
      222       222    1
      223       223    1         backupc = c;
      224       224    1        }
      225       225
      226       226             skipcomment(flag) {
      227       227    1
      228       228    1
      229       229    1
      230       230    1
      231       231    1
      232       232    1         register int   ch;
      233       233    1         int      saved;
      234       234    1
      235       235    1         saved = linecount;
      236       236    1         if (input() != '*') error(linecount,"illegal comment");
      237       237    1         do {
      238       238    2            ch = input();
      239       239    2            while (ch == '*') {
      240       240    3               if ((ch = input()) == '/') return;
      241       241    3            }
      242       242    2            if (flag && ch == '\n') putc(ch,fact);
      243       243    2         } while (ch != EOF);
      244       244    1         error(saved,"Comment does not terminate");
      245       245    1        }
      246       246
      247       247             # ifdef LINE_DIRECTIVE
      248       248   *S*       STATIC
      249       249   *S*       linedirective() {
      250       250   *S*
      251       251   *S*
      252       252   *S*
      253       253   *S*        register int   ch;
      254       254   *S*        register int   i;
      255       255   *S*        string      s_error = "Illegal line directive";
      256       256   *S*        string      store();
      257       257   *S*        register string   c;
      258       258   *S*
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=8  
      259       259   *S*        do {
      260       260   *S*
      261       261   *S*
      262       262   *S*
      263       263   *S*           ch = input();
      264       264   *S*        } while (ch != '\n' && c_class[ch] != ISDIG);
      265       265   *S*        if (ch == '\n') {
      266       266   *S*           error(linecount,s_error);
      267       267   *S*           return;
      268       268   *S*        }
      269       269   *S*        i = 0;
      270       270   *S*        do  {
      271       271   *S*           i = i*10 + (ch - '0');
      272       272   *S*           ch = input();
      273       273   *S*        } while (c_class[ch] == ISDIG);
      274       274   *S*        while (ch != '\n' && ch != '"') ch = input();
      275       275   *S*        if (ch == '"') {
      276       276   *S*           c = ltext;
      277       277   *S*           do {
      278       278   *S*              *c++ = ch = input();
      279       279   *S*           } while (ch != '"' && ch != '\n');
      280       280   *S*           if (ch == '\n') {
      281       281   *S*              error(linecount,s_error);
      282       282   *S*              return;
      283       283   *S*           }
      284       284   *S*           *--c = '\0';
      285       285   *S*           do {
      286       286   *S*              ch = input();
      287       287   *S*           } while (ch != '\n');
      288       288   *S*
      289       289   *S*
      290       290   *S*
      291       291   *S*           if (strcmp(f_input,ltext)) f_input = store(ltext);
      292       292   *S*        }
      293       293   *S*        linecount = i;
      294       294   *S*       }
      295       295   *S*       # endif
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=9  
      296       296
      297       297             STATIC string
      298       298             vallookup(s) {
      299       299    1
      300       300    1
      301       301    1
      302       302    1         register p_keyw p = resword;
      303       303    1
      304       304    1         while (p->w_value) {
      305       305    2            if (p->w_value == s) return p->w_word;
      306       306    2            p++;
      307       307    2         }
      308       308    1         return 0;
      309       309    1        }
      310       310
      311       311             STATIC string
      312       312             cpy(s,p,inserted) register string p; {
      313       313    1
      314       314    1
      315       315    1
      316       316    1
      317       317    1
      318       318    1         register string t = 0;
      319       319    1
      320       320    1         switch(s) {
      321       321    2           case C_IDENT :
      322       322    2            if (!inserted) t = lextoken.t_string;
      323       323    2            else t = "identifier";
      324       324    2            break;
      325       325    2           case C_NUMBER :
      326       326    2            t = "number";
      327       327    2            break;
      328       328    2           case C_LITERAL :
      329       329    2            if (!inserted) {
      330       330    3               *p++ = '\'';
      331       331    3               t = lextoken.t_string;
      332       332    3               break;
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=10 
      333       333    3            }
      334       334    2            t = "literal";
      335       335    2            break;
      336       336    2           case EOFILE :
      337       337    2            t = "endoffile";
      338       338    2            break;
      339       339    2         }
      340       340    1         if (!t && (t = vallookup(s))) {
      341       341    2            *p++ = '%';
      342       342    2         }
      343       343    1         if (t) {
      344       344    2
      345       345    2
      346       346    2            while (*t) *p++ = *t++;
      347       347    2            if (s == C_LITERAL && !inserted) {
      348       348    3               *p++ = '\'';
      349       349    3            }
      350       350    2            return p;
      351       351    2         }
      352       352    1
      353       353    1
      354       354    1
      355       355    1         *p++ = '\'';
      356       356    1         if (s >= 040 && s <= 0176) *p++ = s;
      357       357    1         else {
      358       358    2             *p++ = '\\';
      359       359    2             switch(s) {
      360       360    3               case '\b' : *p++ = 'b'; break;
      361       361    3               case '\f' : *p++ = 'f'; break;
      362       362    3               case '\n' : *p++ = 'n'; break;
      363       363    3               case '\r' : *p++ = 'r'; break;
      364       364    3               case '\t' : *p++ = 't'; break;
      365       365    3               default : *p++='0'+((s&0377)>>6); *p++='0'+((s>>3)&07);
      366       366    3                    *p++='0'+(s&07);
      367       367    3             }
      368       368    2         }
      369       369    1         *p++ = '\'';
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=11 
      370       370    1         return p;
      371       371    1        }
      372       372
      373       373             LLmessage(d) {
      374       374    1
      375       375    1
      376       376    1
      377       377    1
      378       378    1
      379       379    1         register string   s,t;
      380       380    1         char     buf[128];
      381       381    1
      382       382    1         nerrors++;
      383       383    1         s = buf;
      384       384    1         if (d == 0) {
      385       385    2            s = cpy(LLsymb,s,0);
      386       386    2            t = " deleted";
      387       387    2            do *s++ = *t; while (*t++);
      388       388    2         } else {
      389       389    2            s = cpy(d,s,1);
      390       390    2            t = " inserted in front of ";
      391       391    2            do *s++ = *t++; while (*t);
      392       392    2            s = cpy(LLsymb,s,0);
      393       393    2            *s = '\0';
      394       394    2         }
      395       395    1         error(linecount, "%s", buf);
      396       396    1
      397       397    1
      398       398    1
      399       399    1
      400       400    1         if (d) {
      401       401    2
      402       402    2
      403       403    2
      404       404    2            savedtok = lextoken;
      405       405    2            savedtok.t_tokno = LLsymb;
      406       406    2            if (d == C_IDENT) lextoken.t_string = "dummy_identifier";
CC.C03    File=zbl$tokens:c.:ZBC3TOU                                                Fri Aug 22 1997  Page=12 
      407       407    2            else if (d == C_LITERAL) lextoken.t_string = "dummy_literal";
      408       408    2            else if (d == C_NUMBER) lextoken.t_num = 1;
      409       409    2         }
      410       410    1        }
      411       411
---  Include file information  ---

   zbl$Lpars:h.:ZBC3TOU. is referenced
   zbl$types:h.:ZBC3TOU. is referenced
   zbl$io:h.:ZBC3TOU. is referenced
   stdio:h.:LIB_E05. is referenced
   zbl$extern:h.:ZBC3TOU. is referenced
   zbl$assert:h.:ZBC3TOU. is referenced
   zbl$cclass:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbl$tokens:c.:ZBC3TOU
