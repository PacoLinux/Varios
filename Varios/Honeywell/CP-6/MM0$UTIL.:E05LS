VERSION E05

PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:1    
        1        1        /*M* Memory Management Utility Routines.                           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        /* This module contains a group of routines of more-or-less        */
        9        9        /* general utility to mm.                                          */
       10       10
       11       11        /*F*   NAME:   MM0$FINDLS                                          */
       12       12        /*F*   PURPOSE: To return a pointer to the Linkage Segment accessed */
       13       13        /*,*           by the EWSQ.                                        */
       14       14        MM0$FINDLS: PROC(EWSQ,PTR$);
       15       15    1   DCL EWSQ SBIN;                     /* Wsq for which to get lseg     pointer   */
       16       16    1   DCL PTR$ BIT (36) ALIGNED;              /* Returned pointer to linkage seg    */
       17       17
       18       18        %INCLUDE B_STRINGS_C;                   /* System-wide string substitutions   */
       19      147        %INCLUDE B_SEGIDS_C;                    /* System-wide string substitutions   */
       20      686        %INCLUDE M_INFO_C;
       21      826
       22      827        %EQU VS1OFFPT = 0;
       23      828        %EQU VS2OFFPT = (%VS2PGTBL-%VS1PGTBL) * 1024;
       24      829        %EQU VS3OFFPT = (%VS3PGTBL-%VS1PGTBL) * 1024;
       25      830
       26      831    1   DCL 1 MM_PTPTRS$ (0:%B_CWSQ16) CONSTANT SYMDEF,
       27      832    1         2 WOFFSET UBIN (18) UNAL INIT(0*9,%VS1OFFPT,%VS2OFFPT,%VS3OFFPT,
       28      833    1                                0*0),
       29      834    1         2 OFFSET UBIN(6) UNAL INIT (0*0),
       30      835    1         2 SEGID BIT (12) INIT (
       31      836    1           %MPTSID , %MPTSID , %NULLSID , %NULLSID ,
       32      837    1           %UPTSID , %UPTSID , %UPTSID , %IOENDSID ,
       33      838    1           %UPTSID , %VPTSID , %VPTSID , %VPTSID ,
       34      839    1           %NULLSID , %CPGT1SID , %CPGT2SID , %CPGT3SID ,
       35      840    1           %CPGT4SID , %CPGT5SID , %CPGT6SID , %CPGT7SID ,
       36      841    1           %CPGT8SID , %CPGT9SID , %CPGT10SID , %CPGT11SID ,
       37      842    1           %CPGT12SID , %CPGT13SID , %CPGT14SID ,%CPGT15SID,
PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:2    
       38      843    1           %CPGT16SID );
       39      844
       40      845
       41      846    1   DCL 1 MM_LSPTRS$ (0:%VS3WSQ) CONSTANT SYMDEF,
       42      847    1         2 OFFSET UBIN (24) UNAL INIT (0*0),
       43      848    1         2 SEGID BIT(12) INIT (
       44      849    1           %LSSID , %LSSID , %NULLSID , %NULLSID ,
       45      850    1           %CPLSSID , %DBLSSID , %ASLLSSID , %NULLSID ,
       46      851    1            %USERLSSID , %USERLSSID, %USERLSSID, %USERLSSID);
       47      852
       48      853    1           PTR$ = MM_LSPTRS$ (EWSQ);
       49      854    1   END MM0$FINDLS;
       50      855
       51      856        %EOD;

PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:3    
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure MM0$FINDLS.

   Procedure MM0$FINDLS requires 8 words for executable code.
   Procedure MM0$FINDLS requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:4    

 Object Unit name= MM0$FINDLS                                 File name= MM0$UTIL.:E05TOU
 UTS= JUL 30 '97 03:18:55.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     41     51  MM0$FINDLS
    1   Proc  even  none     8     10  MM0$FINDLS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  MM0$FINDLS

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  MM_PTPTRS$                         0     35  MM_LSPTRS$

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:5    


        1        1        /*M* Memory Management Utility Routines.                           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        /* This module contains a group of routines of more-or-less        */
        9        9        /* general utility to mm.                                          */
       10       10
       11       11        /*F*   NAME:   MM0$FINDLS                                          */
       12       12        /*F*   PURPOSE: To return a pointer to the Linkage Segment accessed */
       13       13        /*,*           by the EWSQ.                                        */
       14       14        MM0$FINDLS: PROC(EWSQ,PTR$);

     14  1 000000   000000 700200 xent  MM0$FINDLS   TSX0  ! X66_AUTO_2
         1 000001   000006 000002                    ZERO    6,2

       15       15    1   DCL EWSQ SBIN;                     /* Wsq for which to get lseg     pointer   */
       16       16    1   DCL PTR$ BIT (36) ALIGNED;              /* Returned pointer to linkage seg    */
       17       17
       18       18        %INCLUDE B_STRINGS_C;                   /* System-wide string substitutions   */
       19      147        %INCLUDE B_SEGIDS_C;                    /* System-wide string substitutions   */
       20      686        %INCLUDE M_INFO_C;
       21      826
       22      827        %EQU VS1OFFPT = 0;
       23      828        %EQU VS2OFFPT = (%VS2PGTBL-%VS1PGTBL) * 1024;
       24      829        %EQU VS3OFFPT = (%VS3PGTBL-%VS1PGTBL) * 1024;
       25      830
       26      831    1   DCL 1 MM_PTPTRS$ (0:%B_CWSQ16) CONSTANT SYMDEF,
       27      832    1         2 WOFFSET UBIN (18) UNAL INIT(0*9,%VS1OFFPT,%VS2OFFPT,%VS3OFFPT,
       28      833    1                                0*0),
       29      834    1         2 OFFSET UBIN(6) UNAL INIT (0*0),
       30      835    1         2 SEGID BIT (12) INIT (
       31      836    1           %MPTSID , %MPTSID , %NULLSID , %NULLSID ,
       32      837    1           %UPTSID , %UPTSID , %UPTSID , %IOENDSID ,
PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:6    
       33      838    1           %UPTSID , %VPTSID , %VPTSID , %VPTSID ,
       34      839    1           %NULLSID , %CPGT1SID , %CPGT2SID , %CPGT3SID ,
       35      840    1           %CPGT4SID , %CPGT5SID , %CPGT6SID , %CPGT7SID ,
       36      841    1           %CPGT8SID , %CPGT9SID , %CPGT10SID , %CPGT11SID ,
       37      842    1           %CPGT12SID , %CPGT13SID , %CPGT14SID ,%CPGT15SID,
       38      843    1           %CPGT16SID );
       39      844
       40      845
       41      846    1   DCL 1 MM_LSPTRS$ (0:%VS3WSQ) CONSTANT SYMDEF,
       42      847    1         2 OFFSET UBIN (24) UNAL INIT (0*0),
       43      848    1         2 SEGID BIT(12) INIT (
       44      849    1           %LSSID , %LSSID , %NULLSID , %NULLSID ,
       45      850    1           %CPLSSID , %DBLSSID , %ASLLSSID , %NULLSID ,
       46      851    1            %USERLSSID , %USERLSSID, %USERLSSID, %USERLSSID);
       47      852
       48      853    1           PTR$ = MM_LSPTRS$ (EWSQ);

    853  1 000002   200003 470500                    LDP0    @EWSQ,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
         1 000004   000035 236005 0                  LDQ     MM_LSPTRS$,AL
         1 000005   200004 471500                    LDP1    @PTR$,,AUTO
         1 000006   100000 756100                    STQ     0,,PR1

       49      854    1   END MM0$FINDLS;

    854  1 000007   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   000000 006037   000000 006037   000000 006014   000000 006014    ................
   0     004   000000 006036   000000 006036   000000 006036   000000 006122    ...............R
   0     010   000000 006036   000000 006117   040000 006117   100000 006117    .......O ..O@..O
   0     014   000000 006014   000000 006075   000000 006076   000000 006077    .......=...>...?
   0     020   000000 006100   000000 006101   000000 006102   000000 006103    ...@...A...B...C
   0     024   000000 006104   000000 006105   000000 006106   000000 006107    ...D...E...F...G
   0     030   000000 006110   000000 006111   000000 006112   000000 006113    ...H...I...J...K
   0     034   000000 006114                                                    ...L
PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:7    

MM_LSPTRS$
 Sect OctLoc
   0     035   000000 006035   000000 006035   000000 006014   000000 006014    ................
   0     041   000000 006034   000000 006032   000000 006033   000000 006014    ................
   0     045   000000 006031   000000 006031   000000 006031   000000 006031    ................
       50      855
       51      856        %EOD;

PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:8    
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure MM0$FINDLS.
PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:9    

 **** Variables and constants ****

  ****  Section 000 RoData MM0$FINDLS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    35-0-0/b STRC        r     1 MM_LSPTRS$(0:11)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @EWSQ                      4-0-0/w PTR         r     1 @PTR$
    *0-0-0/w SBIN        r     1 EWSQ                      *0-0-0/w BIT         r     1 PTR$


   Procedure MM0$FINDLS requires 8 words for executable code.
   Procedure MM0$FINDLS requires 6 words of local(AUTO) storage.
PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:10   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=MM0$FINDLS File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:18 Page:11   
          MINI XREF LISTING

EWSQ
        15**DCL        14--PROC      853>>ASSIGN
MM_LSPTRS$
       846**DCL       853>>ASSIGN
PTR$
        16**DCL        14--PROC      853<<ASSIGN

PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:12   
       52        1        /*T***********************************************************/
       53        2        /*T*                                                         */
       54        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       55        4        /*T*                                                         */
       56        5        /*T***********************************************************/
       57        6
       58        7        /*F*   NAME:   MM0$CHKPCNT                                         */
       59        8        /*F*   PURPOSE: To validate the page chain whose head, tail, and   */
       60        9        /*F*           count are passed.                                   */
       61       10        MM0$CHKPCNT: PROC(HEAD,TAIL,COUNT);
       62       11    1   DCL HEAD SBIN;                          /* Head of page chain to be checked   */
       63       12    1   DCL TAIL SBIN;                          /* Tail                               */
       64       13    1   DCL COUNT SBIN;                         /* Count                              */
       65       14    1   DCL NXT SBIN;
       66       15    1   DCL CUR SBIN;
       67       16    1   DCL I SBIN;
       68       17    1   DCL B$PPUT$ PTR SYMREF;
       69       18
       70       19    1   DCL SC_MM10_0 ENTRY CONV(2,0);
       71       20
       72       21        %INCLUDE MM_DATA_R;                     /* Include all mm data references     */
       73      541    1   DCL MMA$LOCKBP ENTRY;
       74      542    1   DCL MMA$UNLOCKBP ENTRY;
       75      543        /**/
       76      544    1           CALL MMA$LOCKBP;
       77      545    1   CHEKAGIN:
       78      546    1           NXT = HEAD;                     /* Start at the HEAD...               */
       79      547    1           IF NXT = 0 AND COUNT = 0
       80      548    1             THEN
       81      549    1             GOTO ENB_RET;
       82      550    2           DO I = 1 TO COUNT;              /* And run the CHAIN...               */
       83      551    2             IF NXT = 0
       84      552    2               THEN
       85      553    2               GOTO SCR;
       86      554    2             CUR = NXT;
       87      555    2             NXT = B$PPUT$->MM$PPUT.PPNO(CUR);
       88      556    2           END;
PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:13   
       89      557        /* Now, see if we're somewhere reasonable (like at the tail) */
       90      558    1           IF TAIL = CUR THEN
       91      559    1             IF NXT = 0                    /* Really at end?                     */
       92      560    1               THEN
       93      561    2   ENB_RET:      DO;
       94      562    2                   CALL MMA$UNLOCKBP;
       95      563    2                   RETURN;
       96      564    2                 END;
       97      565
       98      566        /*S*    SCREECH_CODE: MM0-S$MM10                                   */
       99      567        /*S*   TYPE:   SCREECH                                             */
      100      568        /*S*   MESSAGE: Page chain inconsistant.                           */
      101      569
      102      570    1   SCR:    CALL SC_MM10_0;
      103      571    1           GOTO CHEKAGIN;
      104      572    1   END MM0$CHKPCNT;
      105      573
      106      574        %EOD;

PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:14   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MM0$CHKPCNT.

   Procedure MM0$CHKPCNT requires 40 words for executable code.
   Procedure MM0$CHKPCNT requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:15   

 Object Unit name= MM0$CHKPCNT                                File name= MM0$UTIL.:E05TOU
 UTS= JUL 30 '97 03:19:03.16 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    40     50  MM0$CHKPCNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  MM0$CHKPCNT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 MMA$LOCKBP
         yes           Std       0 MMA$UNLOCKBP
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_MM10_0                             B$PPUT$                          r    MM_BYP$
     B_VECTNIL
PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:16   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID
PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:17   


       52        1        /*T***********************************************************/
       53        2        /*T*                                                         */
       54        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       55        4        /*T*                                                         */
       56        5        /*T***********************************************************/
       57        6
       58        7        /*F*   NAME:   MM0$CHKPCNT                                         */
       59        8        /*F*   PURPOSE: To validate the page chain whose head, tail, and   */
       60        9        /*F*           count are passed.                                   */
       61       10        MM0$CHKPCNT: PROC(HEAD,TAIL,COUNT);

     10  0 000000   000000 700200 xent  MM0$CHKPCNT  TSX0  ! X66_AUTO_3
         0 000001   000012 000003                    ZERO    10,3

       62       11    1   DCL HEAD SBIN;                          /* Head of page chain to be checked   */
       63       12    1   DCL TAIL SBIN;                          /* Tail                               */
       64       13    1   DCL COUNT SBIN;                         /* Count                              */
       65       14    1   DCL NXT SBIN;
       66       15    1   DCL CUR SBIN;
       67       16    1   DCL I SBIN;
       68       17    1   DCL B$PPUT$ PTR SYMREF;
       69       18
       70       19    1   DCL SC_MM10_0 ENTRY CONV(2,0);
       71       20
       72       21        %INCLUDE MM_DATA_R;                     /* Include all mm data references     */
       73      541    1   DCL MMA$LOCKBP ENTRY;
       74      542    1   DCL MMA$UNLOCKBP ENTRY;
       75      543        /**/
       76      544    1           CALL MMA$LOCKBP;

    544  0 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000003   000000 701000 xent               TSX1    MMA$LOCKBP
         0 000004   000000 011000                    NOP     0

       77      545    1   CHEKAGIN:
       78      546    1           NXT = HEAD;                     /* Start at the HEAD...               */
PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:18   

    546  0 000005   200003 470500       CHEKAGIN     LDP0    @HEAD,,AUTO
         0 000006   000000 235100                    LDA     0,,PR0
         0 000007   200006 755100                    STA     NXT,,AUTO

       79      547    1           IF NXT = 0 AND COUNT = 0

    547  0 000010   000014 601000 0                  TNZ     s:550
         0 000011   200005 471500                    LDP1    @COUNT,,AUTO
         0 000012   100000 235100                    LDA     0,,PR1
         0 000013   000041 600000 0                  TZE     ENB_RET

       80      548    1             THEN
       81      549    1             GOTO ENB_RET;
       82      550    2           DO I = 1 TO COUNT;              /* And run the CHAIN...               */

    550  0 000014   000001 235007                    LDA     1,DL
         0 000015   200010 755100                    STA     I,,AUTO
         0 000016   000027 710000 0                  TRA     s:556+1

       83      551    2             IF NXT = 0

    551  0 000017   200006 235100                    LDA     NXT,,AUTO
         0 000020   000045 600000 0                  TZE     SCR

       84      552    2               THEN
       85      553    2               GOTO SCR;
       86      554    2             CUR = NXT;

    554  0 000021   200007 755100                    STA     CUR,,AUTO

       87      555    2             NXT = B$PPUT$->MM$PPUT.PPNO(CUR);

    555  0 000022   000000 470400 xsym               LDP0    B$PPUT$
         0 000023   000000 236105                    LDQ     0,AL,PR0
         0 000024   777777 376007                    ANQ     -1,DL
         0 000025   200006 756100                    STQ     NXT,,AUTO
PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:19   

       88      556    2           END;

    556  0 000026   200010 054100                    AOS     I,,AUTO
         0 000027   200005 470500                    LDP0    @COUNT,,AUTO
         0 000030   200010 236100                    LDQ     I,,AUTO
         0 000031   000000 116100                    CMPQ    0,,PR0
         0 000032   000017 604400 0                  TMOZ    s:551

       89      557        /* Now, see if we're somewhere reasonable (like at the tail) */
       90      558    1           IF TAIL = CUR THEN

    558  0 000033   200004 471500                    LDP1    @TAIL,,AUTO
         0 000034   100000 236100                    LDQ     0,,PR1
         0 000035   200007 116100                    CMPQ    CUR,,AUTO
         0 000036   000045 601000 0                  TNZ     SCR

       91      559    1             IF NXT = 0                    /* Really at end?                     */

    559  0 000037   200006 235100                    LDA     NXT,,AUTO
         0 000040   000045 601000 0                  TNZ     SCR

       92      560    1               THEN
       93      561    2   ENB_RET:      DO;

    561  0 000041                       ENB_RET      null
       94      562    2                   CALL MMA$UNLOCKBP;

    562  0 000041   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000042   000000 701000 xent               TSX1    MMA$UNLOCKBP
         0 000043   000000 011000                    NOP     0

       95      563    2                   RETURN;

    563  0 000044   000000 702200 xent               TSX2  ! X66_ARET

       96      564    2                 END;
PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:20   
       97      565
       98      566        /*S*    SCREECH_CODE: MM0-S$MM10                                   */
       99      567        /*S*   TYPE:   SCREECH                                             */
      100      568        /*S*   MESSAGE: Page chain inconsistant.                           */
      101      569
      102      570    1   SCR:    CALL SC_MM10_0;

    570  0 000045   000000 713400 xsym  SCR          CLIMB   SC_MM10_0
         0 000046   000000 600000 xsid               climb   nvectors=         0

      103      571    1           GOTO CHEKAGIN;

    571  0 000047   000005 710000 0                  TRA     CHEKAGIN
      104      572    1   END MM0$CHKPCNT;
      105      573
      106      574        %EOD;

PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:21   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MM0$CHKPCNT.
PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:22   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @COUNT                     3-0-0/w PTR         r     1 @HEAD
     4-0-0/w PTR         r     1 @TAIL                     *0-0-0/w SBIN        r     1 COUNT
     7-0-0/w SBIN        r     1 CUR                       *0-0-0/w SBIN        r     1 HEAD
    10-0-0/w SBIN        r     1 I                          6-0-0/w SBIN        r     1 NXT
    *0-0-0/w SBIN        r     1 TAIL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 MM_BYP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure MM0$CHKPCNT requires 40 words for executable code.
   Procedure MM0$CHKPCNT requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:23   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:24   
          MINI XREF LISTING

B$PPUT$
        17**DCL       555>>ASSIGN
CHEKAGIN
       546**LABEL     571--GOTO
COUNT
        13**DCL        10--PROC      547>>IF        550>>DOINDEX
CUR
        15**DCL       554<<ASSIGN    555>>ASSIGN    558>>IF
ENB_RET
       561**LABEL     549--GOTO
HEAD
        11**DCL        10--PROC      546>>ASSIGN
I
        16**DCL       550<<DOINDEX
MM$DESC.BOUND
       492**DCL       493--REDEF
MM$DESC.FLGS
       493**DCL       493--REDEF
MM$PPUT.PPNO
       481**DCL       555>>ASSIGN
MM$PPUT.USER#
       481**DCL       481--REDEF
MMA$LOCKBP
       541**DCL-ENT   544--CALL
MMA$UNLOCKBP
       542**DCL-ENT   562--CALL
MM_BYP$
       412**DCL       412--IMP-PTR
NXT
        14**DCL       546<<ASSIGN    547>>IF        551>>IF        554>>ASSIGN    555<<ASSIGN    559>>IF
SCR
       570**LABEL     553--GOTO
PL6.E3A0      #002=MM0$CHKPCNT File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:25   
SC_MM10_0
        19**DCL-ENT   570--CALL
TAIL
        12**DCL        10--PROC      558>>IF

PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:26   
      107        1        /*T***********************************************************/
      108        2        /*T*                                                         */
      109        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      110        4        /*T*                                                         */
      111        5        /*T***********************************************************/
      112        6
      113        7        /*F*   NAME:   MM0$FINDPG                                          */
      114        8        /*F*   PURPOSE: To search a page chain for a particular page no.   */
      115        9        /*,*           and return the page number of its predecessor on the*/
      116       10        /*,*           page chain. Returns -1 if page no. is head of chain  */
      117       11        /*,*           or if page no. is not in the chain.                  */
      118       12        MM0$FINDPG: PROC(PNO,HEAD,TAIL,COUNT,PRED);
      119       13    1   DCL PNO SBIN;                           /* Page no. To find                   */
      120       14    1   DCL HEAD SBIN;                          /* Head of page chain to search       */
      121       15    1   DCL TAIL SBIN;                          /* Tail of page chain                 */
      122       16    1   DCL COUNT SBIN;                         /* Page chain count                   */
      123       17    1   DCL PRED SBIN;                     /* Predecessor of pno in chain (returned)  */
      124       18
      125       19    1   DCL I SBIN;
      126       20    1   DCL TEMP SBIN;
      127       21    1   DCL B$PPUT$ PTR SYMREF;
      128       22    1   DCL PAGE_COUNT SBIN;
      129       23    1   DCL B$IS$ PTR SYMREF;
      130       24    1   DCL B$ISB$ PTR SYMREF;
      131       25    1   DCL B$WORD SBIN BASED;
      132       26
      133       27        %INCLUDE MM_DATA_R;                     /* Include mm data references         */
      134      547        /**/
      135      548    1           TEMP = PINCRW(B$ISB$,POFFW(ADDR(HEAD),B$IS$))->B$WORD;
      136      549    1           PAGE_COUNT = PINCRW(B$ISB$,POFFW(ADDR(COUNT),B$IS$))->B$WORD;
      137      550    2           DO I = 1 TO PAGE_COUNT;
      138      551    2             PRED = TEMP;                  /* GET NEXT                           */
      139      552    2             TEMP = B$PPUT$->MM$PPUT.PPNO(PRED);
      140      553    2             IF TEMP = PNO
      141      554    3               THEN DO;                    /* Found it                           */
      142      555    3                   RETURN;
      143      556    3                 END;
PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:27   
      144      557    2           END;
      145      558    1           PRED = -1;                      /* Return bad index to SHOW...        */
      146      559    1           RETURN;                         /* Didn't find page on chain          */
      147      560    1   END MM0$FINDPG;
      148      561
      149      562        %EOD;

PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:28   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MM0$FINDPG.

   Procedure MM0$FINDPG requires 41 words for executable code.
   Procedure MM0$FINDPG requires 14 words of local(AUTO) storage.

PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:29   

 Object Unit name= MM0$FINDPG                                 File name= MM0$UTIL.:E05TOU
 UTS= JUL 30 '97 03:19:12.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    41     51  MM0$FINDPG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        5  MM0$FINDPG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$PPUT$                               B$IS$                                 B$ISB$
r    MM_BYP$
PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:30   


      107        1        /*T***********************************************************/
      108        2        /*T*                                                         */
      109        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      110        4        /*T*                                                         */
      111        5        /*T***********************************************************/
      112        6
      113        7        /*F*   NAME:   MM0$FINDPG                                          */
      114        8        /*F*   PURPOSE: To search a page chain for a particular page no.   */
      115        9        /*,*           and return the page number of its predecessor on the*/
      116       10        /*,*           page chain. Returns -1 if page no. is head of chain  */
      117       11        /*,*           or if page no. is not in the chain.                  */
      118       12        MM0$FINDPG: PROC(PNO,HEAD,TAIL,COUNT,PRED);

     12  0 000000   000000 700200 xent  MM0$FINDPG   TSX0  ! X66_AUTO_5
         0 000001   000016 000005                    ZERO    14,5

      119       13    1   DCL PNO SBIN;                           /* Page no. To find                   */
      120       14    1   DCL HEAD SBIN;                          /* Head of page chain to search       */
      121       15    1   DCL TAIL SBIN;                          /* Tail of page chain                 */
      122       16    1   DCL COUNT SBIN;                         /* Page chain count                   */
      123       17    1   DCL PRED SBIN;                     /* Predecessor of pno in chain (returned)  */
      124       18
      125       19    1   DCL I SBIN;
      126       20    1   DCL TEMP SBIN;
      127       21    1   DCL B$PPUT$ PTR SYMREF;
      128       22    1   DCL PAGE_COUNT SBIN;
      129       23    1   DCL B$IS$ PTR SYMREF;
      130       24    1   DCL B$ISB$ PTR SYMREF;
      131       25    1   DCL B$WORD SBIN BASED;
      132       26
      133       27        %INCLUDE MM_DATA_R;                     /* Include mm data references         */
      134      547        /**/
      135      548    1           TEMP = PINCRW(B$ISB$,POFFW(ADDR(HEAD),B$IS$))->B$WORD;

    548  0 000002   200004 236100                    LDQ     @HEAD,,AUTO
         0 000003   000022 772000                    QRL     18
PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:31   
         0 000004   000000 235000 xsym               LDA     B$IS$
         0 000005   000022 771000                    ARL     18
         0 000006   200014 755100                    STA     PAGE_COUNT+2,,AUTO
         0 000007   200014 136100                    SBLQ    PAGE_COUNT+2,,AUTO
         0 000010   000000 470400 xsym               LDP0    B$ISB$
         0 000011   000000 235106                    LDA     0,QL,PR0
         0 000012   200011 755100                    STA     TEMP,,AUTO

      136      549    1           PAGE_COUNT = PINCRW(B$ISB$,POFFW(ADDR(COUNT),B$IS$))->B$WORD;

    549  0 000013   200006 236100                    LDQ     @COUNT,,AUTO
         0 000014   000022 772000                    QRL     18
         0 000015   000000 235000 xsym               LDA     B$IS$
         0 000016   000022 771000                    ARL     18
         0 000017   200014 755100                    STA     PAGE_COUNT+2,,AUTO
         0 000020   200014 136100                    SBLQ    PAGE_COUNT+2,,AUTO
         0 000021   000000 235106                    LDA     0,QL,PR0
         0 000022   200012 755100                    STA     PAGE_COUNT,,AUTO

      137      550    2           DO I = 1 TO PAGE_COUNT;

    550  0 000023   000001 236007                    LDQ     1,DL
         0 000024   200010 756100                    STQ     I,,AUTO
         0 000025   000042 710000 0                  TRA     s:557+1

      138      551    2             PRED = TEMP;                  /* GET NEXT                           */

    551  0 000026   200007 470500                    LDP0    @PRED,,AUTO
         0 000027   200011 235100                    LDA     TEMP,,AUTO
         0 000030   000000 755100                    STA     0,,PR0

      139      552    2             TEMP = B$PPUT$->MM$PPUT.PPNO(PRED);

    552  0 000031   000000 471400 xsym               LDP1    B$PPUT$
         0 000032   100000 236105                    LDQ     0,AL,PR1
         0 000033   777777 376007                    ANQ     -1,DL
         0 000034   200011 756100                    STQ     TEMP,,AUTO
PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:32   

      140      553    2             IF TEMP = PNO

    553  0 000035   200003 473500                    LDP3    @PNO,,AUTO
         0 000036   300000 116100                    CMPQ    0,,PR3
         0 000037   000041 601000 0                  TNZ     s:557

      141      554    3               THEN DO;                    /* Found it                           */

      142      555    3                   RETURN;

    555  0 000040   000000 702200 xent               TSX2  ! X66_ARET

      143      556    3                 END;
      144      557    2           END;

    557  0 000041   200010 054100                    AOS     I,,AUTO
         0 000042   200010 236100                    LDQ     I,,AUTO
         0 000043   200012 116100                    CMPQ    PAGE_COUNT,,AUTO
         0 000044   000026 604400 0                  TMOZ    s:551

      145      558    1           PRED = -1;                      /* Return bad index to SHOW...        */

    558  0 000045   000001 335007                    LCA     1,DL
         0 000046   200007 470500                    LDP0    @PRED,,AUTO
         0 000047   000000 755100                    STA     0,,PR0

      146      559    1           RETURN;                         /* Didn't find page on chain          */

    559  0 000050   000000 702200 xent               TSX2  ! X66_ARET
      147      560    1   END MM0$FINDPG;
      148      561
      149      562        %EOD;

PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:33   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MM0$FINDPG.
PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:34   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @COUNT                     4-0-0/w PTR         r     1 @HEAD
     3-0-0/w PTR         r     1 @PNO                       7-0-0/w PTR         r     1 @PRED
     5-0-0/w PTR         r     1 @TAIL                     *0-0-0/w SBIN        r     1 COUNT
    *0-0-0/w SBIN        r     1 HEAD                      10-0-0/w SBIN        r     1 I
    12-0-0/w SBIN        r     1 PAGE_COUNT                *0-0-0/w SBIN        r     1 PNO
    *0-0-0/w SBIN        r     1 PRED                      *0-0-0/w SBIN        r     1 TAIL
    11-0-0/w SBIN        r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IS$                      0-0-0/w PTR         r     1 B$ISB$
     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 MM_BYP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 B$WORD
     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure MM0$FINDPG requires 41 words for executable code.
   Procedure MM0$FINDPG requires 14 words of local(AUTO) storage.
PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:36   
          MINI XREF LISTING

B$IS$
        23**DCL       548>>ASSIGN    549>>ASSIGN
B$ISB$
        24**DCL       548>>ASSIGN    549>>ASSIGN
B$PPUT$
        21**DCL       552>>ASSIGN
B$WORD
        25**DCL       548>>ASSIGN    549>>ASSIGN
COUNT
        16**DCL        12--PROC      549--ASSIGN
HEAD
        14**DCL        12--PROC      548--ASSIGN
I
        19**DCL       550<<DOINDEX
MM$DESC.BOUND
       498**DCL       499--REDEF
MM$DESC.FLGS
       499**DCL       499--REDEF
MM$PPUT.PPNO
       487**DCL       552>>ASSIGN
MM$PPUT.USER#
       487**DCL       487--REDEF
MM_BYP$
       418**DCL       418--IMP-PTR
PAGE_COUNT
        22**DCL       549<<ASSIGN    550>>DOINDEX
PNO
        13**DCL        12--PROC      553>>IF
PRED
        17**DCL        12--PROC      551<<ASSIGN    552>>ASSIGN    558<<ASSIGN
TAIL
        15**DCL        12--PROC
PL6.E3A0      #003=MM0$FINDPG File=MM0$UTIL.:E05TSI                              WED 07/30/97 03:19 Page:37   
TEMP
        20**DCL       548<<ASSIGN    551>>ASSIGN    552<<ASSIGN    553>>IF

PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:38   
      150        1        /*T***********************************************************/
      151        2        /*T*                                                         */
      152        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      153        4        /*T*                                                         */
      154        5        /*T***********************************************************/
      155        6
      156        7        /*F*   NAME:   MM0$CHKSIZE                                         */
      157        8        /*F*   PURPOSE: To determine whether or not a user is currently at */
      158        9        /*,*           his maximum allowable size, after holding back for  */
      159       10        /*,*           unallocated buffers & program overlays, based upon  */
      160       11        /*,*           his max core allocation.                            */
      161       12        MM0$CHKSIZE: PROC(WSQ,VPNO,USIZE,RSIZE) ALTRET;
      162       13    1   DCL WSQ UBIN;                           /* WSQ making allocation request      */
      163       14    1   DCL VPNO UBIN;                          /* VP we're going for                 */
      164       15    1   DCL USIZE SBIN;                    /* Set to user size (not counting context) */
      165       16    1   DCL RSIZE SBIN;                    /* Current mem. reserved by user program.  */
      166       17    1   DCL TEMP SBIN;
      167       18
      168       19    1   DCL  B$JIT$ PTR SYMREF READONLY;
      169       20    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      170       21
      171       22        %SUB   IN_FMSEG ="((VPNO >= %FMSEGLO) AND (VPNO <= %FMSEGHI))";
      172       23
      173       24        %INCLUDE MM_DATA_R;                     /* Mm data references                 */
      174      544        %INCLUDE M$JIT_C;                       /* Mm jit definitions                 */
      175     1064        %INCLUDE B$USER;
      176     1280        %B$USERREFS;
      177     1284        %INCLUDE B$ROSEG;                       /* Read-only seg. Definitions         */
      178     1347        %INCLUDE B$P;
      179     1431        %SUB B_P=B$P$->B$P;
      180     1432
      181     1433    1           IF WSQ <= %MONWSQ THEN
      182     1434    2               DO;                         /* Do if monitor allocation request   */
      183     1435    2                 USIZE = 0;
      184     1436    2                 RETURN;                   /* Return 0 as monitor size.          */
      185     1437    2               END;
      186     1438
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:39   
      187     1439                                 /* Calculate user size from page counts in the jit   */
      188     1440
      189     1441    1           TEMP  =         B$JIT.PCDD ;    /* Dynamic data                       */
      190     1442    1           TEMP  = TEMP  + B$JIT.PCDS ;    /* User data segments                 */
      191     1443    1           TEMP  = TEMP  + B$JIT.PCDDS ;   /* Debuger data segments              */
      192     1444    1           TEMP  = TEMP  + B$JIT.PCADS ;   /* ASL data segments                  */
      193     1445                                           /* Context.  THIS AND NEXT ARE IGNORED     */
      194     1446                                                /* File management buffers            */
      195     1447    1           TEMP  = TEMP  + B$JIT.PCL ;     /* NONSHARED LIBRARY PROCEDURE        */
      196     1448    1           TEMP  = TEMP  + B$JIT.PCROS ;   /* RO segment. SEE -1 Below           */
      197     1449    1           TEMP  = TEMP  + B$JIT.PCV ;     /* Virtual pages.                     */
      198     1450
      199     1451                                 /* Only charge user for procedure page if necessary  */
      200     1452
      201     1453    1           RSIZE = B$JIT.DUL - B$JIT.DLL ; /* Data  ( -1 BALANCED BY PCROS       */
      202     1454    1           USIZE = B$JIT.PCD - 1         ; /* Data  ( -1 BALANCED BY PCROS       */
      203     1455    1           IF NOT B$JIT.MMFLGS.FREE_PPGS   /* Flag set if free procedure         */
      204     1456    2             THEN DO;
      205     1457    2                 USIZE = USIZE + B$JIT.PCP;
      206     1458    2                 RSIZE = B$JIT.PUL - B$JIT.DLL; /* -1 balanced by PCROS*/
      207     1459    2               END;
      208     1460    1           USIZE = USIZE + TEMP;
      209     1461    1           RSIZE = RSIZE + TEMP;
      210     1462
      211     1463        /* Compute the current number of pages this user has RESERVED. This
      212     1464           will only be different from USIZE if the user is running an over-
      213     1465           laid program and the longest overlay path is not currently in.  */
      214     1466
      215     1467        /* If user not allowed max memory  */
      216     1468        /* test against the user's allocation max in jit.       */
      217     1469
      218     1470    1           IF NOT (B$JIT.PRIV.ACTIVE & %PR_MAXMEM#)
      219     1471
      220     1472    1             THEN IF RSIZE >= B$JIT.MAXCORE THEN
      221     1473    1               IF NOT IN_FMSEG % %             /* OK if going for file buffer        */
      222     1474    1                 AND VPNO ~= %SBUF1PG AND VPNO ~= %SBUF2PG
      223     1475    1                 AND WSQ ~= %CPWSQ
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:40   
      224     1476    1                 THEN ALTRETURN ;          /* Otherwise he's too big             */
      225     1477    1           B$JIT.CURRCORE = USIZE;
      226     1478    1           IF USIZE > B$JIT.SPEAK
      227     1479    1             THEN B$JIT.SPEAK = USIZE;
      228     1480    1           IF RSIZE > B$JIT.SRESPEAK
      229     1481    1             THEN B$JIT.SRESPEAK = RSIZE;
      230     1482
      231     1483        /*E*   ERROR:     -E$MEMLIMIT-0
      232     1484                MESSAGE: User- or installation-set memory limit reached.   */
      233     1485    1   END MM0$CHKSIZE;
      234     1486
      235     1487
      236     1488        /* End of mm utility routines */

PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:41   
--  Include file information  --

   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MM0$CHKSIZE.

   Procedure MM0$CHKSIZE requires 105 words for executable code.
   Procedure MM0$CHKSIZE requires 10 words of local(AUTO) storage.

    No errors detected in file MM0$UTIL.:E05TSI    .

PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:42   

 Object Unit name= MM0$CHKSIZE                                File name= MM0$UTIL.:E05TOU
 UTS= JUL 30 '97 03:19:20.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   105    151  MM0$CHKSIZE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        4  MM0$CHKSIZE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                           r    MM_BYP$                               B_VECTNIL
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:43   


      150        1        /*T***********************************************************/
      151        2        /*T*                                                         */
      152        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      153        4        /*T*                                                         */
      154        5        /*T***********************************************************/
      155        6
      156        7        /*F*   NAME:   MM0$CHKSIZE                                         */
      157        8        /*F*   PURPOSE: To determine whether or not a user is currently at */
      158        9        /*,*           his maximum allowable size, after holding back for  */
      159       10        /*,*           unallocated buffers & program overlays, based upon  */
      160       11        /*,*           his max core allocation.                            */
      161       12        MM0$CHKSIZE: PROC(WSQ,VPNO,USIZE,RSIZE) ALTRET;

     12  0 000000   000000 700200 xent  MM0$CHKSIZE  TSX0  ! X66_AUTO_4
         0 000001   000012 000004                    ZERO    10,4

      162       13    1   DCL WSQ UBIN;                           /* WSQ making allocation request      */
      163       14    1   DCL VPNO UBIN;                          /* VP we're going for                 */
      164       15    1   DCL USIZE SBIN;                    /* Set to user size (not counting context) */
      165       16    1   DCL RSIZE SBIN;                    /* Current mem. reserved by user program.  */
      166       17    1   DCL TEMP SBIN;
      167       18
      168       19    1   DCL  B$JIT$ PTR SYMREF READONLY;
      169       20    1   DCL B$ROSEG$ PTR SYMREF READONLY;
      170       21
      171       22        %SUB   IN_FMSEG ="((VPNO >= %FMSEGLO) AND (VPNO <= %FMSEGHI))";
      172       23
      173       24        %INCLUDE MM_DATA_R;                     /* Mm data references                 */
      174      544        %INCLUDE M$JIT_C;                       /* Mm jit definitions                 */
      175     1064        %INCLUDE B$USER;
      176     1280        %B$USERREFS;
      177     1284        %INCLUDE B$ROSEG;                       /* Read-only seg. Definitions         */
      178     1347        %INCLUDE B$P;
      179     1431        %SUB B_P=B$P$->B$P;
      180     1432
      181     1433    1           IF WSQ <= %MONWSQ THEN
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:44   

   1433  0 000002   200003 470500                    LDP0    @WSQ,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000002 115007                    CMPA    2,DL
         0 000005   000011 603000 0                  TRC     s:1441

      182     1434    2               DO;                         /* Do if monitor allocation request   */

      183     1435    2                 USIZE = 0;

   1435  0 000006   200005 471500                    LDP1    @USIZE,,AUTO
         0 000007   100000 450100                    STZ     0,,PR1

      184     1436    2                 RETURN;                   /* Return 0 as monitor size.          */

   1436  0 000010   000000 702200 xent               TSX2  ! X66_ARET

      185     1437    2               END;
      186     1438
      187     1439                                 /* Calculate user size from page counts in the jit   */
      188     1440
      189     1441    1           TEMP  =         B$JIT.PCDD ;    /* Dynamic data                       */

   1441  0 000011   000000 471400 xsym               LDP1    B$JIT$
         0 000012   100203 236100                    LDQ     131,,PR1
         0 000013   777777 376007                    ANQ     -1,DL
         0 000014   200007 756100                    STQ     TEMP,,AUTO

      190     1442    1           TEMP  = TEMP  + B$JIT.PCDS ;    /* User data segments                 */

   1442  0 000015   100202 236100                    LDQ     130,,PR1
         0 000016   000022 772000                    QRL     18
         0 000017   200007 036100                    ADLQ    TEMP,,AUTO
         0 000020   200007 756100                    STQ     TEMP,,AUTO

      191     1443    1           TEMP  = TEMP  + B$JIT.PCDDS ;   /* Debuger data segments              */

PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:45   
   1443  0 000021   100213 236100                    LDQ     139,,PR1
         0 000022   777777 376007                    ANQ     -1,DL
         0 000023   200007 036100                    ADLQ    TEMP,,AUTO
         0 000024   200007 756100                    STQ     TEMP,,AUTO

      192     1444    1           TEMP  = TEMP  + B$JIT.PCADS ;   /* ASL data segments                  */

   1444  0 000025   100214 236100                    LDQ     140,,PR1
         0 000026   000022 772000                    QRL     18
         0 000027   200007 036100                    ADLQ    TEMP,,AUTO
         0 000030   200007 756100                    STQ     TEMP,,AUTO

      193     1445                                           /* Context.  THIS AND NEXT ARE IGNORED     */
      194     1446                                                /* File management buffers            */
      195     1447    1           TEMP  = TEMP  + B$JIT.PCL ;     /* NONSHARED LIBRARY PROCEDURE        */

   1447  0 000031   100215 236100                    LDQ     141,,PR1
         0 000032   777777 376007                    ANQ     -1,DL
         0 000033   200007 036100                    ADLQ    TEMP,,AUTO
         0 000034   200007 756100                    STQ     TEMP,,AUTO

      196     1448    1           TEMP  = TEMP  + B$JIT.PCROS ;   /* RO segment. SEE -1 Below           */

   1448  0 000035   100203 236100                    LDQ     131,,PR1
         0 000036   000022 772000                    QRL     18
         0 000037   200007 036100                    ADLQ    TEMP,,AUTO
         0 000040   200007 756100                    STQ     TEMP,,AUTO

      197     1449    1           TEMP  = TEMP  + B$JIT.PCV ;     /* Virtual pages.                     */

   1449  0 000041   100216 236100                    LDQ     142,,PR1
         0 000042   000022 772000                    QRL     18
         0 000043   200007 036100                    ADLQ    TEMP,,AUTO
         0 000044   200007 756100                    STQ     TEMP,,AUTO

      198     1450
      199     1451                                 /* Only charge user for procedure page if necessary  */
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:46   
      200     1452
      201     1453    1           RSIZE = B$JIT.DUL - B$JIT.DLL ; /* Data  ( -1 BALANCED BY PCROS       */

   1453  0 000045   100177 236100                    LDQ     127,,PR1
         0 000046   000022 772000                    QRL     18
         0 000047   200010 756100                    STQ     TEMP+1,,AUTO
         0 000050   100177 236100                    LDQ     127,,PR1
         0 000051   777777 376007                    ANQ     -1,DL
         0 000052   200010 136100                    SBLQ    TEMP+1,,AUTO
         0 000053   200006 473500                    LDP3    @RSIZE,,AUTO
         0 000054   300000 756100                    STQ     0,,PR3

      202     1454    1           USIZE = B$JIT.PCD - 1         ; /* Data  ( -1 BALANCED BY PCROS       */

   1454  0 000055   100201 236100                    LDQ     129,,PR1
         0 000056   777777 376007                    ANQ     -1,DL
         0 000057   000001 136007                    SBLQ    1,DL
         0 000060   200005 474500                    LDP4    @USIZE,,AUTO
         0 000061   400000 756100                    STQ     0,,PR4

      203     1455    1           IF NOT B$JIT.MMFLGS.FREE_PPGS   /* Flag set if free procedure         */

   1455  0 000062   100206 234100                    SZN     134,,PR1
         0 000063   000077 604000 0                  TMI     s:1460

      204     1456    2             THEN DO;

      205     1457    2                 USIZE = USIZE + B$JIT.PCP;

   1457  0 000064   100201 236100                    LDQ     129,,PR1
         0 000065   000022 772000                    QRL     18
         0 000066   400000 036100                    ADLQ    0,,PR4
         0 000067   400000 756100                    STQ     0,,PR4

      206     1458    2                 RSIZE = B$JIT.PUL - B$JIT.DLL; /* -1 balanced by PCROS*/

   1458  0 000070   100177 236100                    LDQ     127,,PR1
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:47   
         0 000071   000022 772000                    QRL     18
         0 000072   200010 756100                    STQ     TEMP+1,,AUTO
         0 000073   100176 236100                    LDQ     126,,PR1
         0 000074   777777 376007                    ANQ     -1,DL
         0 000075   200010 136100                    SBLQ    TEMP+1,,AUTO
         0 000076   300000 756100                    STQ     0,,PR3

      207     1459    2               END;

      208     1460    1           USIZE = USIZE + TEMP;

   1460  0 000077   400000 236100                    LDQ     0,,PR4
         0 000100   200007 036100                    ADLQ    TEMP,,AUTO
         0 000101   400000 756100                    STQ     0,,PR4

      209     1461    1           RSIZE = RSIZE + TEMP;

   1461  0 000102   300000 236100                    LDQ     0,,PR3
         0 000103   200007 036100                    ADLQ    TEMP,,AUTO
         0 000104   300000 756100                    STQ     0,,PR3

      210     1462
      211     1463        /* Compute the current number of pages this user has RESERVED. This
      212     1464           will only be different from USIZE if the user is running an over-
      213     1465           laid program and the longest overlay path is not currently in.  */
      214     1466
      215     1467        /* If user not allowed max memory  */
      216     1468        /* test against the user's allocation max in jit.       */
      217     1469
      218     1470    1           IF NOT (B$JIT.PRIV.ACTIVE & %PR_MAXMEM#)

   1470  0 000105   100013 236100                    LDQ     11,,PR1
         0 000106   000006 376000 xsym               ANQ     B_VECTNIL+6
         0 000107   000132 601000 0                  TNZ     s:1477

      219     1471
      220     1472    1             THEN IF RSIZE >= B$JIT.MAXCORE THEN
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:48   

   1472  0 000110   100210 236100                    LDQ     136,,PR1
         0 000111   000022 772000                    QRL     18
         0 000112   300000 116100                    CMPQ    0,,PR3
         0 000113   000132 605400 0                  TPNZ    s:1477

      221     1473    1               IF NOT IN_FMSEG % %             /* OK if going for file buffer       */

   1473  0 000114   200004 475500                    LDP5    @VPNO,,AUTO
         0 000115   500000 235100                    LDA     0,,PR5
         0 000116   000020 115007                    CMPA    16,DL
         0 000117   000122 602000 0                  TNC     s:1473+6
         0 000120   000057 115007                    CMPA    47,DL
         0 000121   000132 602000 0                  TNC     s:1477
         0 000122   000501 115007                    CMPA    321,DL
         0 000123   000132 600000 0                  TZE     s:1477
         0 000124   000500 115007                    CMPA    320,DL
         0 000125   000132 600000 0                  TZE     s:1477
         0 000126   000000 235100                    LDA     0,,PR0
         0 000127   000004 115007                    CMPA    4,DL
         0 000130   000132 600000 0                  TZE     s:1477

      222     1474    1                 AND VPNO ~= %SBUF1PG AND VPNO ~= %SBUF2PG
      223     1475    1                 AND WSQ ~= %CPWSQ
      224     1476    1                 THEN ALTRETURN ;          /* Otherwise he's too big             */

   1476  0 000131   000000 702200 xent               TSX2  ! X66_AALT

      225     1477    1           B$JIT.CURRCORE = USIZE;

   1477  0 000132   400000 720100                    LXL0    0,,PR4
         0 000133   100210 440100                    SXL0    136,,PR1

      226     1478    1           IF USIZE > B$JIT.SPEAK

   1478  0 000134   100211 236100                    LDQ     137,,PR1
         0 000135   000022 772000                    QRL     18
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:49   
         0 000136   400000 116100                    CMPQ    0,,PR4
         0 000137   000142 605000 0                  TPL     s:1480

      227     1479    1             THEN B$JIT.SPEAK = USIZE;

   1479  0 000140   400000 721100                    LXL1    0,,PR4
         0 000141   100211 741100                    STX1    137,,PR1

      228     1480    1           IF RSIZE > B$JIT.SRESPEAK

   1480  0 000142   100213 236100                    LDQ     139,,PR1
         0 000143   000022 772000                    QRL     18
         0 000144   300000 116100                    CMPQ    0,,PR3
         0 000145   000150 605000 0                  TPL     s:1485

      229     1481    1             THEN B$JIT.SRESPEAK = RSIZE;

   1481  0 000146   300000 721100                    LXL1    0,,PR3
         0 000147   100213 741100                    STX1    139,,PR1

      230     1482
      231     1483        /*E*   ERROR:     -E$MEMLIMIT-0
      232     1484                MESSAGE: User- or installation-set memory limit reached.   */
      233     1485    1   END MM0$CHKSIZE;

   1485  0 000150   000000 702200 xent               TSX2  ! X66_ARET
      234     1486
      235     1487
      236     1488        /* End of mm utility routines */

PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:50   
--  Include file information  --

   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$ROSEG.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MM0$CHKSIZE.
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:51   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @RSIZE                     5-0-0/w PTR         r     1 @USIZE
     4-0-0/w PTR         r     1 @VPNO                      3-0-0/w PTR         r     1 @WSQ
    *0-0-0/w SBIN        r     1 RSIZE                      7-0-0/w SBIN        r     1 TEMP
    *0-0-0/w SBIN        r     1 USIZE                     *0-0-0/w UBIN        r     1 VPNO
    *0-0-0/w UBIN        r     1 WSQ

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 MM_BYP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT


   Procedure MM0$CHKSIZE requires 105 words for executable code.
   Procedure MM0$CHKSIZE requires 10 words of local(AUTO) storage.

    No errors detected in file MM0$UTIL.:E05TSI    .
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:52   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:53   
          MINI XREF LISTING

B$DO.ECCINFO
      1215**DCL      1216--REDEF
B$JIT.CURRCORE
       962**DCL      1477<<ASSIGN
B$JIT.DLL
       958**DCL      1453>>ASSIGN   1458>>ASSIGN
B$JIT.DUL
       958**DCL      1453>>ASSIGN
B$JIT.ERR.MID
       872**DCL       872--REDEF
B$JIT.JRESPEAK
       962**DCL       963--REDEF
B$JIT.MAXCORE
       961**DCL      1472>>IF
B$JIT.MMFLGS.FREE_PPGS
       961**DCL      1455>>IF
B$JIT.PCADS
       964**DCL      1444>>ASSIGN
B$JIT.PCD
       959**DCL      1454>>ASSIGN
B$JIT.PCDD
       960**DCL      1441>>ASSIGN
B$JIT.PCDDS
       963**DCL      1443>>ASSIGN
B$JIT.PCDS
       959**DCL      1442>>ASSIGN
B$JIT.PCL
       964**DCL      1447>>ASSIGN
B$JIT.PCP
       959**DCL      1457>>ASSIGN
B$JIT.PCROS
       959**DCL      1448>>ASSIGN
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:54   
B$JIT.PCV
       964**DCL      1449>>ASSIGN
B$JIT.PRIV.ACTIVE
       872**DCL      1470>>IF
B$JIT.PUL
       958**DCL      1458>>ASSIGN
B$JIT.SPEAK
       962**DCL      1478>>IF       1479<<ASSIGN
B$JIT.SRESPEAK
       963**DCL      1480>>IF       1481<<ASSIGN
B$JIT$
        19**DCL       866--IMP-PTR  1441>>ASSIGN   1442>>ASSIGN   1443>>ASSIGN   1444>>ASSIGN   1447>>ASSIGN
      1448>>ASSIGN   1449>>ASSIGN   1453>>ASSIGN   1453>>ASSIGN   1454>>ASSIGN   1455>>IF       1457>>ASSIGN
      1458>>ASSIGN   1458>>ASSIGN   1470>>IF       1472>>IF       1477>>ASSIGN   1478>>IF       1479>>ASSIGN
      1480>>IF       1481>>ASSIGN
B$U.MISC
      1194**DCL      1195--REDEF
B$USER.MISC
      1270**DCL      1271--REDEF
MM$DESC.BOUND
       495**DCL       496--REDEF
MM$DESC.FLGS
       496**DCL       496--REDEF
MM$PPUT.USER#
       484**DCL       484--REDEF
MM_BYP$
       415**DCL       415--IMP-PTR
RSIZE
        16**DCL        12--PROC     1453<<ASSIGN   1458<<ASSIGN   1461<<ASSIGN   1461>>ASSIGN   1472>>IF
      1480>>IF       1481>>ASSIGN
TEMP
        17**DCL      1441<<ASSIGN   1442<<ASSIGN   1442>>ASSIGN   1443<<ASSIGN   1443>>ASSIGN   1444<<ASSIGN
      1444>>ASSIGN   1447<<ASSIGN   1447>>ASSIGN   1448<<ASSIGN   1448>>ASSIGN   1449<<ASSIGN   1449>>ASSIGN
      1460>>ASSIGN   1461>>ASSIGN
USIZE
        15**DCL        12--PROC     1435<<ASSIGN   1454<<ASSIGN   1457<<ASSIGN   1457>>ASSIGN   1460<<ASSIGN
PL6.E3A0      #004=MM0$CHKSIZE File=MM0$UTIL.:E05TSI                             WED 07/30/97 03:19 Page:55   
      1460>>ASSIGN   1477>>ASSIGN   1478>>IF       1479>>ASSIGN
VPNO
        14**DCL        12--PROC     1473>>IF       1473>>IF       1473>>IF       1473>>IF
WSQ
        13**DCL        12--PROC     1433>>IF       1473>>IF
