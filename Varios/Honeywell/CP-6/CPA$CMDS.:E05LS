VERSION E05

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:1    
        1        1        /*M*  IBEX rununit commands  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        CPA$CMDS:
        9        9          PROC(P$PCB) ALTRET;
       10       10        /*******************************************************************************
       11       11        *                                Include files                                 *
       12       12        *******************************************************************************/
       13       13                %INCLUDE AZ_MACRO_C;
       14     2600                %INCLUDE AZ_SUBS_C;
       15     2669                %INCLUDE B$JIT;
       16     2959                %INCLUDE B_MACROS_C;
       17     3070                %INCLUDE CP_6;
       18     3151                %INCLUDE CP_MACROS_C;
       19     3903                %INCLUDE CP_PERR_C;
       20     4241                %INCLUDE CP_SUBS_C;
       21     5158                %INCLUDE CP_6_SUBS;
       22     5698                %INCLUDE F_ERRORS_C;
       23     5938                %INCLUDE OC_SUBS_C;
       24     6669                %INCLUDE XU_MACRO_C;
       25     9775                %INCLUDE AS_SUPER_C;
       26    10210                %INCLUDE CP_DATA_R;
       27    12773                %INCLUDE XUH_MACRO_C ;
       28    12857                %INCLUDE B$TABLES_C ;
       29    12965                %INCLUDE CX_MACROS_M ;
       30    13016    1   DCL     AZA$LOGOFF     ENTRY(1)    ALTRET;
       31    13017    1   DCL     CXB$BLDAM      ENTRY(4) ;
       32    13018    1   DCL     CXB$DELAM      ENTRY(4) ;
       33    13019    1   DCL     CPC$EXIT       ENTRY       ALTRET;
       34    13020    1   DCL     CPC$QUIT       ENTRY       ALTRET;
       35    13021    1   DCL     CXC$WRITEAM    ENTRY(3) ;
       36    13022    1   DCL     CPC$WRITEMSGE  ENTRY(6);
       37    13023    1   DCL     CPE$GENRUAM    ENTRY(5)    ALTRET;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:2    
       38    13024    1   DCL     CXP$POSTERR    ENTRY(5);
       39    13025    1   DCL     CPJ$ESTCUM     ENTRY(2)   ALTRET;
       40    13026    1   DCL     CPC$OPEN_LL    ENTRY;
       41    13027    1   DCL     CPC$RDUSERS    ENTRY(2) ALTRET;
       42    13028    1   DCL BLK$ PTR;                           /*Parse output block pointer*/
       43    13029    1   DCL FID$ PTR;                           /*Fid pointer*/
       44    13030    1   DCL TA$ PTR;                            /*Temp. Pointer*/
       45    13031    1   DCL TB$ PTR;                            /*Temp. Pointer*/
       46    13032    1   DCL I SBIN;                             /*Temp. Loc for indexes*/
       47    13033    1   DCL J SBIN;
       48    13034    1   DCL CPOS UBIN WORD AUTO;
       49    13035    1   DCL BLANKS CHAR(8) CONSTANT INIT('        ');
       50    13036    1   DCL 1 PRFLAGS,
       51    13037    1          2 OU BIT(1) UNAL,
       52    13038    1          2 LS BIT(1) UNAL;
       53    13039    1   DCL FEXTSAVE (0:35) BIT(1) UNAL;        /*Jit file exten. Bits*/
       54    13040    1   DCL FID_ASN UBIN(9);                    /*Run unit asn*/
       55    13041    1   DCL FID_RES CHAR(4);                    /*Run unit res*/
       56    13042    1   DCL SYSTXT CHAR(8) CONSTANT INIT(':SYS    ');
       57    13043        %B$XL_UPPER (NAME=TRANSTBL) ;
       58    13047        /**/
       59    13048        /**/
       60    13049        %P$PCB(NAME=P$PCB,STCLASS="");
       61    13250        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=AUTO) ;
       62    13268        %SEG$2;
       63    13328        %ERR_BLK (NAME=ERR$BLK,STCLASS=BASED);
       64    13353        %B$TCB (STCLASS="BASED(B$TCB$)");
       65    13356        %B$ALT;
       66    13364        %B$EXCFR ;
       67    13382        %AS_USERS(STR_NAME=AS$USERS,STCLASS=BASED);
       68    13560        %FPT_FID(FPTN=FPT_FID,STCLASS=AUTO);
       69    13583        %FPT_CPEXIT(FPTN=FPT$CPEXIT,STCLASS=BASED);
       70    13609        %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(SEG3$)",PFMT="PTR");
       71    13718        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
       72    13827        %FPT_OCMSG(FPTN=FPT_OCMSG,STCLASS=AUTO);
       73    13843        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
       74    13885        %FPT_XFLUSH(FPTN=FPT_XFLUSH,STCLASS=CONSTANT,ONELEVEL=YES);
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:3    
       75    13899        %F$DCB;
       76    13956        %PARSE$OUT (NAME=P$B);
       77    14001        %PARSE$SYM(NAME=P$S);
       78    14039        %XUG_GETCMD (NAME=GET$CMD, STCLASS=BASED) ;
       79    14377        %XUG_PARAMS (NAME=XUG$PARAMS, STCLASS=BASED) ;
       80    14821        %XUG_INIT (NAME=XUG$INIT, STCLASS=BASED) ;
       81    15234        %XUG_RLT (NAME=XUG$RLT) ;
       82    15241        %LOGOFF$PARAM(NAME=LOGOFF,STCLASS=AUTO);
       83    15282        %VLP_NAME (FPTN=DELTATXTC,LEN=5,NAME='DELTA',STCLASS=CONSTANT);
       84    15309        %VLP_NAME (FPTN=EDITTXTC,LEN=4,NAME='EDIT',STCLASS=CONSTANT);
       85    15336        %VLP_NAME (FPTN=SIXEDITTXTC,LEN=5,NAME='6EDIT',STCLASS=CONSTANT);
       86    15363        %VLP_NAME (FPTN=PCLTXTC,LEN=3,NAME='PCL',STCLASS=CONSTANT);
       87    15390        %VLP_NAME (FPTN=LINKTXTC,LEN=4,NAME='LINK',STCLASS=CONSTANT);
       88    15417    1   DCL 1 EFTTXTC CALIGNED CONSTANT,
       89    15418    1       2 L# UBIN(9) CALIGNED INIT (3),
       90    15419    1       2 NAME# CHAR(11) CALIGNED INIT ('EFT');
       91    15420        %VLP_NAME (FPTN=FEPLINKTXTC,LEN=7,NAME='FEPLINK',STCLASS=CONSTANT);
       92    15447        %VLP_NAME (FPTN=IBEXTEXTC,LEN=4,NAME='IBEX',STCLASS=CONSTANT);
       93    15474        %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
       94    15501        %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
       95    15514        %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
       96    15527        %VLP_SN (FPTN=FID_SN,N=4,STCLASS=AUTO);
       97    15540        %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
       98    15553        %VLR_FID(FPTN=FID_RESULTS,STCLASS=AUTO);
       99    15572        %TEXTC(NAME=TEXT$C);
      100    15577        %CP$BUFF (NAME=CP$BUFF,STCLASS=BASED);
      101    15580        %ERR_CODE (NAME=E_BACKDISKONLY,MID#=CPA$IBEXMID,CODE#=E$BACKDISKONLY,STCLASS=
             15580            CONSTANT);
      102    15600        %ERR_CODE (NAME=E_CANTBACKUP,MID#=CPA$IBEXMID,CODE#=E$CANTBACKUP,STCLASS=CONSTANT);
      103    15620        %ERR_CODE (NAME=E_OPABORT,MID#=CPA$IBEXMID,CODE#=E$OPABORT,STCLASS=CONSTANT);
      104    15640        %ERR_CODE (NAME=E_ONEXIST,MID#=CPA$IBEXMID,CODE#=E$ONEXIST,STCLASS=CONSTANT);
      105    15660                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:4    
      106    15661        /**********************************************************************/
      107    15662        /*F*    NAME:    CPA$BACKUP
      108    15663                PURPOSE: To process the BACKUP command - set backup bit in file.
      109    15664                DESCRIPTION: CPA$BACKUP when called will set the bit in a
      110    15665                         a files FIT that tells EFT to back the file up on tape.
      111    15666                REFERENCE: Programmers Reference Manual
      112    15667        */
      113    15668        /*D*    NAME:    CPA$BACKUP
      114    15669                CALL:    CALL CPA$BACKUP(PCB$)
      115    15670                INTERFACE: M$FID,M$OPEN,M$CLOSE,CPC$WRITEMSGE
      116    15671                DESCRIPTION: CPA$BACKUP first calls M$FID to process the passed
      117    15672                         file name. If it is a disk file it is opened and if
      118    15673                         this file is eligible for backup then the backup bit
      119    15674                         is set via M$CLOSE to tell EFT to do its thing.
      120    15675        */
      121    15676        /**********************************************************************/
      122    15677    1   CPA$BACKUP: ENTRY(P$PCB) ALTRET;
      123    15678        /*
      124    15679          ***  Do M$FID on passed fid.
      125    15680        */
      126    15681    1     CALL EXIT_SETUP(P$PCB.OUT$ -> P$B.SUBLK$(0) -> P$S) ALTRET (BACKUP20);
      127    15682    1     IF (FID_ASN ~= %FILE#)
      128    15683    1        THEN
      129    15684    2           DO;
      130    15685    2              CALL CPC$WRITEMSGE (E_BACKDISKONLY,,,,,%YES#);
      131    15686    2              ALTRETURN;
      132    15687    2           END;
      133    15688        /*E*    ERROR:   CPA-E$BACKDISKONLY-0
      134    15689                MESSAGE: Only disk files may be backed up.
      135    15690                DESCRIPTION: IT IS NOT POSSIBLE TO BACKUP NON DISK FILES
      136    15691        */
      137    15692        /**/
      138    15693    1     B$JIT.PRIV.ACTIVE = B$JIT.PRIV.ACTIVE | %PR_FMEFT#;
      139    15694        /**/
      140    15695    1     FPT_OPEN = CFPT_OPEN;
      141    15696    1     FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);
      142    15697    1     FPT_OPEN.NAME_ = VECTOR(FID_NAME);
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:5    
      143    15698    1     FPT_OPEN.ACCT_ = VECTOR(FID_ACCT);
      144    15699    1     FPT_OPEN.PASS_ = VECTOR(FID_PASS);
      145    15700    1     FPT_OPEN.V.ASN# = FID_ASN;
      146    15701    1     FPT_OPEN.V.DCB# = M$IBEX1_NUM;
      147    15702    1     FPT_OPEN.SN_ = VECTOR(FID_SN);
      148    15703    1     FPT_OPEN.WSN_ = VECTOR(FID_WSN);
      149    15704    1     FPT_OPEN.V.FUN# = %IN#;
      150    15705    1     CALL M$OPEN(FPT_OPEN) ALTRET(BACKUP10);
      151    15706        /**/
      152    15707    1     IF (DCBADDR(M$IBEX1_NUM) -> F$DCB.BUPF ~= %YES#)
      153    15708    1        THEN
      154    15709    2           DO;
      155    15710    2              CALL CPC$WRITEMSGE(E_CANTBACKUP,,,,,%YES#);
      156    15711    2              GOTO BACKUP20;
      157    15712    2           END;
      158    15713        /*E*    ERROR: CPA-E$CANTBACKUP-0
      159    15714                MESSAGE: BACKUP is not allowed on this file.
      160    15715                DESCRIPTION: THIS FILE IS NOT ALLOWED TO BE BACKED UP.
      161    15716        */
      162    15717    1     FPT_CLOSE = CFPT_CLOSE;
      163    15718    1     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);
      164    15719    1     FPT_CLOSE.V.DCB#=M$IBEX1_NUM;
      165    15720    1     FPT_CLOSE.V.DISP#=%SAVE#;
      166    15721    1     FPT_CLOSE.V.EFTOPER.UPDDESC# = %YES#;
      167    15722    1     FPT_CLOSE.V.DESC = DCBADDR(M$IBEX1_NUM) -> F$DCB.DESC;
      168    15723    1     FPT_CLOSE.V.DESC.BUF# = %YES#;
      169    15724    1     CALL M$CLOSE(FPT_CLOSE) ALTRET (BACKUP20);
      170    15725        /**/
      171    15726    1     IF NOT(B$JIT.PRIV.JOB & %PR_FMEFT#)
      172    15727    1        THEN
      173    15728    1           B$JIT.PRIV.ACTIVE = B$JIT.PRIV.ACTIVE & ~%PR_FMEFT#;
      174    15729    1     RETURN;
      175    15730        /**/
      176    15731    1   BACKUP10:
      177    15732    1     CPOS = P$PCB.OUT$ -> P$B.SUBLK$(0) -> P$S.CPOS;
      178    15733    1     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$TCB.ALT$ -> B$ALT.ERR,,
      179    15734    1           B$TCB.ALT$ -> B$ALT.DCB#);
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:6    
      180    15735    1   BACKUP20:
      181    15736    1     IF NOT(B$JIT.PRIV.JOB & %PR_FMEFT#)
      182    15737    1        THEN
      183    15738    1           B$JIT.PRIV.ACTIVE = B$JIT.PRIV.ACTIVE & ~%PR_FMEFT#;
      184    15739        /*
      185    15740          ****  Make sure the dcb is closed
      186    15741        */
      187    15742    1     IF DCBADDR(M$IBEX1_NUM) -> F$DCB.FCD# = %YES#
      188    15743
      189    15744    1        THEN
      190    15745    2           DO;
      191    15746    2              FPT_CLOSE = CFPT_CLOSE;
      192    15747    2              FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);
      193    15748    2              FPT_CLOSE.V.DCB# = M$IBEX1_NUM;
      194    15749    2              FPT_CLOSE.V.DISP#=%SAVE#;
      195    15750    2              CALL M$CLOSE(FPT_CLOSE);
      196    15751    2           END;
      197    15752    1     ALTRETURN;
      198    15753        %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:7    
      199    15754        /**********************************************************************/
      200    15755        /*F*   NAME:   CPA$BYE
      201    15756               PURPOSE: To process the OFF and BYE commands and log     a user
      202    15757                       off the system.
      203    15758               DESCRIPTION: CPA$BYE is called when an OFF or BYE command is encountered
      204    15759                       or when a user is to be logged off the system.
      205    15760               REFERENCE: Programmers Reference Manual
      206    15761        */
      207    15762        /*D*   NAME:   CPA$BYE
      208    15763               CALL:   CALL CPA$BYE(BLK$)
      209    15764               INTERFACE: RUEXIT,CPC$BLDMSGE,CPC$WRITEMSGE
      210    15765               INPUT:  BLK$= Pointer to parse output block
      211    15766               OUTPUT: M$CPEXIT PMME initialized with exit information
      212    15767               DESCRIPTION: CPA$BYE is called to log a user off the system. Termination
      213    15768                       of the previous job step is implied  if the user is not
      214    15769                       at job step. Otherwise initiate the logoff process: exit
      215    15770                       to the last processor if specified or just run down the user.
      216    15771        */
      217    15772        /************************************************************************/
      218    15773    1   CPA$BYE:
      219    15774    1     ENTRY(P$PCB)   ALTRET;
      220    15775        /*
      221    15776             *****     Begin procedure
      222    15777        */
      223    15778    1     IF (B$JIT.RNST & %RS_XKEY#)
      224    15779    1        THEN
      225    15780                                                /*Aborted by operator*/
      226    15781    2           DO;
      227    15782        /*E*   ERROR: CPA-E$OPABORT-A
      228    15783               MESSAGE: Job/user aborted by operator
      229    15784               DESCRIPTION: Job or user was aborted by operator.
      230    15785        */
      231    15786    2              CALL CPC$WRITEMSGE(E_OPABORT); /*Write MSGE.*/
      232    15787    2              B$JIT.RNST = B$JIT.RNST & ~%RS_XKEY#;
      233    15788    2           END;
      234    15789    1     IF NOT(B$JIT.CPFLAGS1 & %CP_JSTEP#)
      235    15790
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:8    
      236    15791    1        THEN
      237    15792    2           DO; /* rundown the user */
      238    15793    2              IF ADDR(P$PCB) ~= ADDR(NIL)
      239    15794
      240    15795    2                 THEN
      241    15796    3                    DO;
      242    15797    3                       IF SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#
      243    15798    3                         THEN /* Insert ! into first position */
      244    15799    4                           DO ;
      245    15800    4                             CALL CONCAT (B$JIT.CCBUF,'!', SEG$2.CPBUFF$ ->
      246    15801    4                                             CP$BUFF) ;
      247    15802    4                             B$JIT.CCARS = P$PCB.NCHARS + 1;
      248    15803    4                             IF B$JIT.CCARS > %CPBUFFSIZE
      249    15804    4                               THEN
      250    15805    4                                 B$JIT.CCARS = %CPBUFFSIZE ;
      251    15806    4                             B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_CFREAD#;
      252    15807    4                           END ; /* Then Do */
      253    15808    3                         ELSE
      254    15809    4                           DO ;
      255    15810    4                             B$JIT.CCBUF = SEG$2.CPBUFF$ -> CP$BUFF ;
      256    15811    4                             B$JIT.CCARS = P$PCB.NCHARS ;
      257    15812    4                           END ; /* Else Do */
      258    15813    3                       B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_BUFFULL#;
      259    15814    3                    END;
      260    15815    2                 ELSE /* set the job termination flag */
      261    15816    2                    B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_TRMNATE#;
      262    15817    2              CALL CPC$QUIT; /* run down the user */
      263    15818    2           END;
      264    15819        /*
      265    15820        *****   The call to CPC$QUIT will bring the user to job step with a bye
      266    15821        *****   command in B$JIT.CCBUF; this permits normal termination of the
      267    15822        *****   job or on-line session.  Control logically resumes below.
      268    15823        */
      269    15824        /*
      270    15825        *****   Establish cumulative service limit values in the jit
      271    15826        *****   Reflecting total used for the job/session.
      272    15827        */
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:9    
      273    15828        /*
      274    15829             ***** Write the logoff msg on the administrative colsole
      275    15830                   and the communication console. UNLESS...
      276    15831                   the user is running from a colsole.
      277    15832        */
      278    15833    1     FPT_OCMSG = CFPT_OCMSG;
      279    15834    1     FPT_OCMSG.V_ = VECTOR(FPT_OCMSG.V);
      280    15835    1     FPT_OCMSG.V.MSG# = OFF_MSG#;
      281    15836    1     FPT_OCMSG.V.SUBC# = BITBIN(B$JIT.USRRNST);
      282    15837    1     IF B$JIT.MODE = %M_INT#
      283    15838    1          AND DCBADDR(%M$UC#) -> F$DCB.ASN# ~= %DEVICE#
      284    15839
      285    15840    1        THEN /* not a console ghost */
      286    15841    1           FPT_OCMSG.V.OCTYPE# = 0;
      287    15842    1     CALL M$OCMSG (FPT_OCMSG) ALTRET(E_OCMSG);
      288    15843    1   E_OCMSG: /* dont do anything */
      289    15844        /*
      290    15845        *****  Get M$LL and close M$IBEX befors calling accounting.
      291    15846        */
      292    15847    1     IF DCBADDR(M$IBEX_NUM)->F$DCB.FCD# = %YES#
      293    15848    1        THEN
      294    15849    2           DO;
      295    15850    2              FPT_CLOSE = CFPT_CLOSE;
      296    15851    2              FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);
      297    15852    2              FPT_CLOSE.V.DISP# = %SAVE#;
      298    15853    2              FPT_CLOSE.V.DCB# = M$IBEX_NUM;
      299    15854    2              CALL M$CLOSE(FPT_CLOSE) ALTRET(CPA$BYE45);
      300    15855    2           END;
      301    15856        /*
      302    15857             ***** If M$LL is currently open then close it.
      303    15858                   This is necessary for proper accounting for forms...
      304    15859        */
      305    15860    1     IF SEG$2.LLDCB# ~= 0
      306    15861    1     AND DCBADDR(SEG$2.LLDCB#) -> F$DCB.FCD# = %YES#
      307    15862    1        THEN
      308    15863    2           DO;
      309    15864    2              FPT_CLOSE = CFPT_CLOSE;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:10   
      310    15865    2              FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);
      311    15866    2              FPT_CLOSE.V.DISP# = %SAVE#;
      312    15867    2              FPT_CLOSE.V.DCB# = SEG$2.LLDCB#;
      313    15868    2              CALL M$CLOSE(FPT_CLOSE) ALTRET(CPA$BYE45);
      314    15869    2              I = SEG$2.LLDCB#;
      315    15870    2           END;
      316    15871        /**/
      317    15872    1     CALL CPC$OPEN_LL;
      318    15873        /**/
      319    15874    1     IF ADDR(P$PCB) ~= ADDR(NIL)
      320    15875
      321    15876    1        THEN /* Pcb passed to us */
      322    15877    2           DO;
      323    15878    2              IF P$PCB.OUT$ -> P$B.NSUBLKS ~= 0
      324    15879
      325    15880    2                 THEN
      326    15881    3                    DO CASE (P$PCB.OUT$->P$B.SUBLK$(0)->P$B.CODE);
      327    15882    3                     CASE (RE_FULL);
      328    15883    3                       B$JIT.JSLEV = %AZ_ALL#;
      329    15884    3                     CASE (RE_SUMMARY);
      330    15885    3                       B$JIT.JSLEV = %AZ_SUMMARY#;
      331    15886    3                     CASE (RE_NONE);
      332    15887    3                       B$JIT.JSLEV = %AZ_NONE#;
      333    15888    3                     END;
      334    15889    2           END;
      335    15890    1     LOGOFF.CODE = %AZ$JOBEND;
      336    15891    1     LOGOFF.ERR = 0;
      337    15892    1     LOGOFF.DCB1 = M$IBEX_NUM;
      338    15893    1     LOGOFF.DCB_LL = SEG$2.LLDCB#;
      339    15894    1     CALL AZA$LOGOFF(LOGOFF) ALTRET(CPA$BYE40);
      340    15895    2     DO WHILE(%NO#);
      341    15896    2   CPA$BYE40:
      342    15897    2         CALL CPC$WRITEMSGE(B$JIT.USRERR,B$JIT.USRDCB);
      343    15898    2     END;
      344    15899    1   CPA$BYE45:
      345    15900        /*
      346    15901        *****  Exit to last processor if one exists. Otherwise, delete the user.
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:11   
      347    15902        *****  If last processor happens to be IBEX, also delete the user.
      348    15903        */
      349    15904    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      350    15905    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      351    15906    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      352    15907    1     IF ((B$JIT.CPFLAGS1 & %CP_LASTCPEXISTS#) AND NOT(B$JIT.CPFLAGS1
      353    15908    1          & %CP_LASTCP#))
      354    15909    1        THEN
      355    15910    2           DO;
      356    15911    2              IF SEG$2.FLAGS.USERS = %NO#  THEN
      357    15912    2                 CALL CPC$RDUSERS(M$IBEX_NUM,%IN#) ALTRET(CPA$BYE50);
      358    15913    2              TB$ = ADDR(SEG$2.USERS$ -> AS$USERS.LASTCPROC.NAME(B$JIT.MODE-1));
      359    15914    2              IF TB$ -> TEXT$C ~= IBEXTEXTC  THEN
      360    15915    3                 DO;
      361    15916    3                    SEG$2.FPT_CPEXIT$ -> FPT$CPEXIT.NAME_ = VECTOR(SEG$2.USERS$
      362    15917    3                         ->AS$USERS.LASTCPROC.NAME(B$JIT.MODE-1));
      363    15918    3                    B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_LASTCP#;
      364    15919    3                 END;
      365    15920    2              ELSE
      366    15921    2                 SEG$2.FPT_CPEXIT$ -> FPT$CPEXIT.NAME_ = VECTOR(NIL);
      367    15922    2           END;
      368    15923    1        ELSE
      369    15924    1           SEG$2.FPT_CPEXIT$ -> FPT$CPEXIT.NAME_ = VECTOR(NIL);
      370    15925    1     CALL CPC$EXIT ALTRET(CPA$BYE50);
      371    15926    1     RETURN;
      372    15927    1   CPA$BYE50:
      373    15928    1     ALTRETURN;
      374    15929                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:12   
      375    15930        /**********************************************************************/
      376    15931        /*F*   NAME:   CPA$DEBUG
      377    15932               PURPOSE: To process debug type run unit calls
      378    15933               DESCRIPTION: CPA$DEBUG is called whenever the specified run unit
      379    15934                        in :SYS is a debugger or a RUM command is executed.
      380    15935        */
      381    15936        /*D*   NAME:   CPA$DEBUG
      382    15937               CALL:   CALL CPA$DEBUG(P$PCB)
      383    15938               INPUT:  BLK$= Pointer to parse output block
      384    15939               OUTPUT: M$CPEXIT PMME initialized with exit information
      385    15940                       CP_DELTA flag set in JIT
      386    15941               DESCRIPTION: If a user is at job step and the previous job step has
      387    15942                       been run down, the debugger is called as a processor. Otherwise it
      388    15943                       is called as a debugger to be associated with the current job
      389    15944                       step.
      390    15945        */
      391    15946    1   CPA$DEBUG:
      392    15947    1     ENTRY(P$PCB)   ALTRET;
      393    15948    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      394    15949    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      395    15950    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      396    15951    1     BLK$ = P$PCB.OUT$;
      397    15952    1     IF BLK$->P$S.CODE = RUMCMND
      398    15953    1        THEN
      399    15954    1           FID_NAME = DELTATXTC;
      400    15955    1        ELSE
      401    15956    1           FID_NAME = BLK$->P$B.SUBLK$(0)->P$B.SUBLK$(0)->TEXT$C;
      402    15957    1     IF B$JIT.CPFLAGS1 & %CP_JSTEP#
      403    15958    2     THEN DO;
      404    15959    2        SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(FID_NAME);   /*Calculator mode*/
      405    15960    2        B$JIT.CCDISP = P$PCB.NCHARS;
      406    15961    2        END;
      407    15962    2     ELSE DO;                             /*User interrupted job step*/
      408    15963    2        B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DELTA#;
      409    15964    2        SEG$2.DBUG_NAME=FID_NAME;
      410    15965    2        SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.CONT#=%YES#; /*Or look at previous step*/
      411    15966    2        END;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:13   
      412    15967    1     CALL RUEXIT ALTRET(CPA$DEBUG50);
      413    15968    1   CPA$DEBUG50:;
      414    15969    1     ALTRETURN;
      415    15970                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:14   
      416    15971        /**********************************************************************/
      417    15972        /*F*   NAME:   CPA$EDIT
      418    15973               PURPOSE: To process the E[DIT] and B[UILD] control commands.
      419    15974               DESCRIPTION: The EDIT processor is called to process the
      420    15975                       various EDIT commands.
      421    15976               REFERENCE: Programmers Reference Manual
      422    15977        */
      423    15978        /*D*   NAME:   CPA$EDIT
      424    15979               CALL:   CALL CPA$EDIT(BLK$)
      425    15980               INTERFACE: CPC$IQUIT,RUEXIT
      426    15981               INPUT:  BLK$ - pointer to parsed output
      427    15982                       CPFLAGS1 - implied quit flag set or reset
      428    15983               OUTPUT: M$CPEXIT fpt initialized with exit information
      429    15984               DESCRIPTION: If a user is at job step and the previous job
      430    15985                       step has been run down, the command is moved to CCBUF
      431    15986                       in the JIT and the EDIT processor called.
      432    15987        */
      433    15988        /************************************************************************/
      434    15989    1   CPA$EDIT:
      435    15990    1     ENTRY(P$PCB)   ALTRET;
      436    15991        /*
      437    15992           **** Set up exit fpt and exit to edit processor
      438    15993        */
      439    15994    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      440    15995    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      441    15996    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      442    15997    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(EDITTXTC);
      443    15998    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);
      444    15999    1     B$JIT.CCDISP = P$PCB.NCHARS;
      445    16000    1     CALL RUEXIT ALTRET(EDIT50);
      446    16001    1   EDIT50: ;
      447    16002    1     ALTRETURN;
      448    16003                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:15   
      449    16004        /**********************************************************************/
      450    16005        /*F*   NAME:   CPA$EFT
      451    16006               PURPOSE: To process the FETCH,STOW,UNSTOW,UNFETCH,UNARCHIVE commands
      452    16007               DESCRIPTION: The EFT processor is called to process the
      453    16008                       various EFT commands.
      454    16009               REFERENCE: Programmers Reference Manual
      455    16010        */
      456    16011        /*D*   NAME:   CPA$EFT
      457    16012               CALL:   CALL CPA$EFT(BLK$)
      458    16013               INTERFACE: RUEXIT
      459    16014               INPUT:  BLK$ - pointer to parsed output
      460    16015               OUTPUT: M$CPEXIT fpt initialized with exit information
      461    16016               DESCRIPTION: If a user is at job step and the previous job
      462    16017                       step has been run down, the command is moved to CCBUF
      463    16018                       in the JIT and the EFT processor called.
      464    16019        */
      465    16020        /************************************************************************/
      466    16021    1   CPA$EFT:
      467    16022    1     ENTRY(P$PCB)   ALTRET;
      468    16023        /*
      469    16024           **** Set up exit fpt and exit to eft processor
      470    16025        */
      471    16026    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      472    16027    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      473    16028    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      474    16029    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(EFTTXTC);
      475    16030    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);
      476    16031    1     B$JIT.CCDISP = P$PCB.NCHARS;
      477    16032    1     CALL RUEXIT ALTRET(EFT50);
      478    16033    1   EFT50: ;
      479    16034    1     ALTRETURN;
      480    16035                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:16   
      481    16036        /***********************************************************************/
      482    16037        /*F*   NAME:   CPA$EXIT
      483    16038               PURPOSE: To process the EXIT command.
      484    16039               DESCRIPTION: IBEX will call X$FLUSH to flush the command stream
      485    16040                       for this XEQ file.  Only one file will be flushed rather
      486    16041                       than the whole command stream.
      487    16042               REFERENCE: Programmer's Reference Manual
      488    16043        */
      489    16044        /*D*   NAME:   CPA$EXIT
      490    16045               CALL:   CALL CPA$EXIT(P$PCB)
      491    16046               INTERFACE: X$FLUSH
      492    16047               INPUT:  none
      493    16048               OUTPUT: none
      494    16049               DESCRIPTION: IBEX calls X$FLUSH to flush the command stream for this
      495    16050                       XEQ file.  Only one XEQ file will be flushed rather than the
      496    16051                       whole command stream.
      497    16052        */
      498    16053        /***********************************************************************/
      499    16054    1   CPA$EXIT:
      500    16055    1     ENTRY(P$PCB)   ALTRET;
      501    16056
      502    16057    1     CALL M$XFLUSH(FPT_XFLUSH) ALTRET(EXIT_ALT) ;
      503    16058    1     RETURN ;
      504    16059
      505    16060    1   EXIT_ALT:
      506    16061    1     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,B$TCB.ALT$->B$ALT.ERR) ;
      507    16062    1     ALTRETURN ;
      508    16063        %EJECT ;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:17   
      509    16064        /***********************************************************************/
      510    16065        /*F*   NAME:   CPA$FEPLINK
      511    16066               PURPOSE: To process the FEPLINK or FEPMAP commands.
      512    16067               DESCRIPTION: The FEPLINK processor is called to process the various
      513    16068                       commands.
      514    16069               REFERENCE: System Support Manual
      515    16070        */
      516    16071        /*D*   NAME:   CPA$FEPLINK
      517    16072               CALL:   CALL CPA$FEPLINK(P$PCB)
      518    16073               INTERFACE: RUEXIT
      519    16074               INPUT:  BLK$ - pointer to parsed output
      520    16075               OUTPUT: M$CPEXIT fpt initialized with exit information
      521    16076               DESCRIPTION: The command is moved into CCBUF in
      522    16077                       the JIT. The FEPLINK processor is called whenever the
      523    16078                       FEPLINK or FEPMAP command is encountered.
      524    16079        */
      525    16080        /***********************************************************************/
      526    16081    1   CPA$FEPLINK:
      527    16082    1     ENTRY(P$PCB)   ALTRET;
      528    16083        /*
      529    16084          ****     Set up exit fpt and exit to link processor
      530    16085        */
      531    16086    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      532    16087    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      533    16088    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      534    16089    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(FEPLINKTXTC);
      535    16090    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);
      536    16091    1     B$JIT.CCDISP = P$PCB.NCHARS;
      537    16092    1     CALL RUEXIT ALTRET(FEPLINK50);
      538    16093    1   FEPLINK50: ;
      539    16094    1     ALTRETURN;
      540    16095                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:18   
      541    16096        /*F*   NAME: CPA$GET
      542    16097               PURPOSE: To process the GET command.
      543    16098        */
      544    16099    1   CPA$GET:
      545    16100    1     ENTRY(P$PCB)   ALTRET;
      546    16101    1     BLK$ = P$PCB.OUT$;
      547    16102    1     CALL EXIT_SETUP(BLK$->P$B.SUBLK$(0)->P$S) ALTRET(E_GET_SETUP);
      548    16103    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.GETFLG# = %YES#;
      549    16104    1     CALL CPC$EXIT ALTRET(E_GET_C$EXIT);
      550    16105    1   E_GET_SETUP:
      551    16106    1     ALTRETURN;
      552    16107    1   E_GET_C$EXIT:
      553    16108    1     ALTRETURN;
      554    16109        %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:19   
      555    16110        /*F*   NAME:   CPA$GO
      556    16111               PURPOSE: To process the GO,CONTINUE and PROCEED commands.
      557    16112               DESCRIPTION: CPA$GO is called whenever a GO,CONTINUE or PROCEED
      558    16113                       command is encountered.
      559    16114               REFERENCE: Programmers Reference Manual
      560    16115        */
      561    16116        /*D*   NAME:   CPA$GO
      562    16117               INTERFACE: RUEXIT,CPC$WRITEMSGE
      563    16118               INPUT:  BLK$= Pointer to parse output block
      564    16119               OUTPUT: M$CPEXIT PMME initialized with exit information
      565    16120               DESCRIPTION: If not at job step, the continuation bit is set in the
      566    16121                       M$CPEXIT FPT and a call made to RUEXIT to continue execution
      567    16122                       of the interrupted run unit.
      568    16123                       If at job step, there is no run unit to return to. So a
      569    16124                       message is output to the user and a return made to read the
      570    16125                       next command.
      571    16126        */
      572    16127        /**********************************************************************/
      573    16128    1   CPA$GO:
      574    16129    1     ENTRY(P$PCB)   ALTRET;
      575    16130        /**/
      576    16131    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      577    16132    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      578    16133    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      579    16134    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.CONT# = %YES#;
      580    16135    1     CALL CPC$EXIT  ALTRET(E_GO_C$EXIT);
      581    16136        /*
      582    16137        *****   Control has been returned to the interrupted process.
      583    16138        */
      584    16139    1   E_GO_C$EXIT:
      585    16140    1     ALTRETURN;
      586    16141                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:20   
      587    16142    1   CPA$JOB:
      588    16143    1     ENTRY(P$PCB)   ALTRET;
      589    16144    1     RETURN;
      590    16145    1   CPA$JOIN:
      591    16146    1     ENTRY(P$PCB)   ALTRET;
      592    16147    1     RETURN;
      593    16148                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:21   
      594    16149        /***********************************************************************/
      595    16150        /*F*   NAME:   CPA$LINK
      596    16151               PURPOSE: To process the LINK,LOAD,LYNX,MAP and RUN commands.
      597    16152               DESCRIPTION: The LINK processor is called to process the various
      598    16153                       commands.
      599    16154               REFERENCE: Programmers Reference Manual
      600    16155        */
      601    16156        /*D*   NAME:   CPA$LINK
      602    16157               CALL:   CALL CPA$LINK(BLK$)
      603    16158               INTERFACE: RUEXIT
      604    16159               INPUT:  BLK$ - pointer to parsed output
      605    16160               OUTPUT: M$CPEXIT fpt initialized with exit information
      606    16161               DESCRIPTION: If a user is at job step and the previous job
      607    16162                       step has been run down, the command is moved to CCBUF in
      608    16163                       the JIT. The LINK processor is called whenever the LINK,
      609    16164                       LOAD,LYNX,MAP or RUN command is encountered.
      610    16165        */
      611    16166        /***********************************************************************/
      612    16167    1   CPA$LINK:
      613    16168    1     ENTRY(P$PCB)   ALTRET;
      614    16169        /*
      615    16170          ****     Set up exit fpt and exit to link processor
      616    16171        */
      617    16172    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      618    16173    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      619    16174    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      620    16175    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(LINKTXTC);
      621    16176    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);
      622    16177    1     B$JIT.CCDISP = P$PCB.NCHARS;
      623    16178    1     CALL RUEXIT ALTRET(LINK50);
      624    16179    1   LINK50: ;
      625    16180    1     ALTRETURN;
      626    16181                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:22   
      627    16182        /**********************************************************************/
      628    16183        /*F*   NAME:   CPA$PCL
      629    16184               PURPOSE: To process the C[OPY],D[ELETE] and L control commands.
      630    16185               DESCRIPTION: The PCL processor is called to process the various
      631    16186                       PCL commands.
      632    16187               REFERENCE: Programmers Reference Manual
      633    16188        */
      634    16189        /*D*   NAME:   CPA$PCL
      635    16190               CALL:   CALL CPA$PCL(BLK$)
      636    16191               INTERFACE: CPC$IQUIT,RUEXIT
      637    16192               INPUT:  BLK$ - pointer to parsed output
      638    16193                       CPFLAGS1 - implied quit flag set or reset
      639    16194               OUTPUT: M$CPEXIT fpt initialized with exit information
      640    16195               DESCRIPTION: If a user is at job step and the previous job step
      641    16196                       has been run down, the command is moved to CCBUF in the
      642    16197                       JIT and the PCL processor called.
      643    16198        */
      644    16199        /**********************************************************************/
      645    16200    1   CPA$PCL:
      646    16201    1     ENTRY(P$PCB)   ALTRET;
      647    16202        /*
      648    16203          **** Set up exit fpt and exit to pcl processor
      649    16204        */
      650    16205    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      651    16206    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      652    16207    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      653    16208    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(PCLTXTC);
      654    16209    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);
      655    16210    1     B$JIT.CCDISP = P$PCB.NCHARS;
      656    16211    1     CALL RUEXIT ALTRET(PCL50);
      657    16212    1   PCL50: ;
      658    16213    1     ALTRETURN;
      659    16214                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:23   
      660    16215        /***********************************************************************/
      661    16216        /*F*   NAME:   CPA$PMD
      662    16217               PURPOSE: To process the PMD control command
      663    16218               DESCRIPTION: The DELTA procesor is called to process the PMD
      664    16219                       command.
      665    16220               REFERENCE: Programmers Reference Manual
      666    16221        */
      667    16222        /*D*   NAME:   CPA$PMD
      668    16223               CALL:   CALL CPA$PMD(BLK$)
      669    16224               INTERFACE: RUEXIT
      670    16225               INPUT:  BLK$ - pointer to parsed output
      671    16226               OUTPUT: M$CPEXIT fpt initialized with exit information
      672    16227               DESCRIPTION: DELTA is called as a debugger for the purpose of
      673    16228                       processing the PMD command.
      674    16229        */
      675    16230        /***********************************************************************/
      676    16231    1   CPA$PMD:
      677    16232    1     ENTRY(P$PCB)   ALTRET;
      678    16233    1     IF B$JIT.USRRNST = %RS_EXIT#
      679    16234
      680    16235    1        THEN
      681    16236    1           RETURN;
      682    16237        /*
      683    16238          ****     Set up cpexit fpt and exit to delta processor
      684    16239        */
      685    16240    1     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DELTA#;
      686    16241    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
      687    16242    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
      688    16243    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      689    16244    1     SEG$2.DBUG_NAME=DELTATXTC;
      690    16245    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.CONT#=%YES#;
      691    16246    1     B$JIT.CCDISP = P$PCB.NCHARS;
      692    16247    1     CALL RUEXIT ALTRET(PMD50);
      693    16248    1   PMD50: ;
      694    16249    1     ALTRETURN;
      695    16250                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:24   
      696    16251        /**********************************************************************/
      697    16252        /*F*   NAME:   CPA$RUNIT
      698    16253               PURPOSE: To process all unrecognized run units
      699    16254               DESCRIPTION: CPA$RUNIT is called whenever a unrecognized run unit is
      700    16255                       encountered. The run unit, consisting of a fid, is scanned
      701    16256                       and an FPT initialized with the exit information. If an
      702    16257                       account is unspecified, it's default is established. Parameters
      703    16258                       are scanned and DCB assignments generated for the run unit.
      704    16259                       CCDISP is set in the JIT to inform processors of the
      705    16260                       first character position of options specified on the
      706    16261                       command.
      707    16262               REFERENCE: Programmers Reference Manual
      708    16263        */
      709    16264        /*D*   NAME:   CPA$RUNIT
      710    16265               PURPOSE: To process an unrecognized run unit specified in the
      711    16266                       command processor buffer(CPBUFF).
      712    16267               CALL:   CALL CPA$RUNIT(P$PCB)
      713    16268               INTERFACE: RUEXIT,CXC$WRITEAM,CXB$BLDAM,CPE$GENRUAM
      714    16269               INPUT:  P$PCB - parse block
      715    16270               OUTPUT: CPEXIT FPT initialized with run unit name, account, password
      716    16271                       and pack set identification
      717    16272                       assign merge records generated for assignments
      718    16273                          B$JIT.CCDISP - index to ist character of option i.e. '(option,..)'
      719    16274                                      character immediately following left paren.
      720    16275                                    - set to CCARS if no options
      721    16276               DESCRIPTION: The run unit specified in CPBUFF is broken up with the
      722    16277                       the FPT initialized with the specified name, account,
      723    16278                       password and pack set id. If the run unit specified is
      724    16279                       followed by a period, the user's account is utilized as the
      725    16280                       the default account. If the run unit specified isn't followed
      726    16281                       by a period, the :sys account is utilized as the default
      727    16282                       account. DCB assignments are made for the parameters
      728    16283                       specified and written to the assign-merge record. If an
      729    16284                       error is encountered, the appropriate error message is output
      730    16285                       and the ALTRET taken. tThe specified run unit is put into
      731    16286                       execution by calling a routine which executes a M$CPEXIT PMME.
      732    16287                       If any errors occur, source and update assignments are
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:25   
      733    16288                         reset. Object and list assignments and file extension bits
      734    16289                         are reset only if assignments were made for the respective.
      735    16290                         dcbs on the command.
      736    16291        */
      737    16292        /**********************************************************************/
      738    16293    1   CPA$RUNIT:
      739    16294    1     ENTRY(P$PCB)   ALTRET;
      740    16295        /*
      741    16296             *****    Begin procedure
      742    16297        */
      743    16298    1     BLK$ = P$PCB.OUT$;
      744    16299        /*  ****   Save flags for restoration in case problem occurs during
      745    16300                   command processing                    */
      746    16301    1     PRFLAGS.OU = %NO#;
      747    16302    1     PRFLAGS.LS = %NO#;
      748    16303    1     B$JIT.CCDISP = P$PCB.NCHARS;
      749    16304    1     I=1;
      750    16305    2   RUNIT10: DO WHILE(I<BLK$->P$B.NSUBLKS);
      751    16306    2        TA$=BLK$->P$B.SUBLK$(I); /*Bld ptr to sublk*/
      752    16307    2        CPOS = TA$ -> P$B.CPOS;
      753    16308    2        CPSL_PARAM = %NO# ;
      754    16309    3   RUNIT15: DO CASE(TA$->P$B.CODE);
      755    16310                                                                                    /**/
      756    16311    3         CASE(SOURCEOPT);
      757    16312        /* ****        Build a/m record for source input */
      758    16313    3           FID$=TA$->P$B.SUBLK$(0);   /*Ptr to fid*/
      759    16314    3           CPSL_PARAM = %NO# ;
      760    16315    3           CALL CXB$BLDAM(BLK$,FID$,SEG$2.GETCMD$->GET$CMD,CPSL_PARAM) ;
      761    16316    3           IF CPSL_PARAM.ERRCODE ~= %NO#
      762    16317    3             THEN
      763    16318    3               IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      764    16319    3                 THEN
      765    16320    3                   GOTO RUNIT80 ;
      766    16321    3                 ELSE
      767    16322    4                   DO ;
      768    16323    4                     B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;
      769    16324    4                     GOTO RUNIT75 ;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:26   
      770    16325    4                   END ;
      771    16326    3           AMR$REC$.V.FUN#=%IN#;
      772    16327    3           CALL CXC$WRITEAM(ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;
      773    16328    3           IF CPSL_PARAM.ERRCODE ~= %NO#
      774    16329    3             THEN
      775    16330    3               IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      776    16331    3                 THEN
      777    16332    3                   GOTO RUNIT80 ;
      778    16333    3                 ELSE
      779    16334    4                   DO ;
      780    16335    4                     B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;
      781    16336    4                     GOTO RUNIT75 ;
      782    16337    4                   END ;
      783    16338    3           B$JIT.PRFLAGS.SI=%YES#; /*Source assigned*/
      784    16339                                                                                    /**/
      785    16340    3         CASE(UPDATEOPT);
      786    16341        /* ****        Build a/m record for update input */
      787    16342    3           FID$=TA$->P$B.SUBLK$(0);   /*Ptr to fid*/
      788    16343    3           CPSL_PARAM = %NO# ;
      789    16344    3           CALL CXB$BLDAM(BLK$,FID$,SEG$2.GETCMD$->GET$CMD,CPSL_PARAM) ;
      790    16345    3           IF CPSL_PARAM.ERRCODE ~= %NO#
      791    16346    3             THEN
      792    16347    3               IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      793    16348    3                 THEN
      794    16349    3                   GOTO RUNIT80 ;
      795    16350    3                 ELSE
      796    16351    4                   DO ;
      797    16352    4                     B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;
      798    16353    4                     GOTO RUNIT75 ;
      799    16354    4                   END ;
      800    16355    3           AMR$REC$.V.FUN#=%IN#;
      801    16356    3           CALL CXC$WRITEAM(ADDR(UPDATEDCB),M$IBEX1_NUM,CPSL_PARAM) ;
      802    16357    3           IF CPSL_PARAM.ERRCODE ~= %NO#
      803    16358    3             THEN
      804    16359    3               IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      805    16360    3                 THEN
      806    16361    3                   GOTO RUNIT80 ;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:27   
      807    16362    3                 ELSE
      808    16363    4                   DO ;
      809    16364    4                     B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;
      810    16365    4                     GOTO RUNIT75 ;
      811    16366    4                   END ;
      812    16367    3           B$JIT.PRFLAGS.UI=%YES#; /*Update assigned*/
      813    16368                                                                                    /**/
      814    16369    3         CASE(ONOPT,OVEROPT,INTOOPT);
      815    16370        /* ****        Save ptr to keyword ... Need subsequently for creating
      816    16371                       object and list assignments       */
      817    16372    3           TB$=TA$;
      818    16373                                                                                    /**/
      819    16374    3         CASE(OBJECTOPT);
      820    16375        /* ****        Build a/m record for object output */
      821    16376    3           FID$=TA$->P$B.SUBLK$(0);
      822    16377    3           CALL CPE$GENRUAM(BLK$,TB$,FID$,ADDR(OBJECTDCB),%NO#) ALTRET(RUNIT75);
      823    16378    3           B$JIT.PRFLAGS.OU=%YES#; /*Object assigned*/
      824    16379    3           B$JIT.PRFLAGS.OUTPUT=%YES#; /*Set object cmnd flag*/
      825    16380        /* ****        Reset file extension for     object */
      826    16381    3           B$JIT.FEXT(FEXT_OBJECT)=%NO#;
      827    16382    3           PRFLAGS.OU = %YES#;
      828    16383                                                                                    /**/
      829    16384    3         CASE(LISTOPT);
      830    16385        /* ****        Build a/m record for list output  */
      831    16386    3           FID$=TA$->P$B.SUBLK$(0);
      832    16387    3           CALL CPE$GENRUAM(BLK$,TB$,FID$,ADDR(LISTDCB),%NO#) ALTRET(RUNIT75);
      833    16388    3           B$JIT.PRFLAGS.LS=%YES#; /*List assigned*/
      834    16389    3           B$JIT.PRFLAGS.LIST=%YES#; /*Set list command flag*/
      835    16390        /* ****        Reset file extension for list     */
      836    16391    3           B$JIT.FEXT(FEXT_LIST)=%NO#;
      837    16392                                                                                    /**/
      838    16393    3         CASE(PARENOPT);
      839    16394        /* ****        Set index to first character of first option following the
      840    16395                       left parentheses*/
      841    16396    3           B$JIT.CCDISP = TA$->P$B.CPOS;
      842    16397    3         CASE(FIDLISTOPT);
      843    16398        /* ****       Inform run unit of non-standard syntax on invocation line.
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:28   
      844    16399                      Don't process remainder of cmnd or make #1-#4 assignments.
      845    16400        */
      846    16401    3           B$JIT.PRFLAGS.NSSYNTAX = %YES#;
      847    16402    3           PRFLAGS.LS = %YES#;
      848    16403    3           I = 9999;
      849    16404    3         END RUNIT15;
      850    16405    2        I=I+1;                       /*Get next option*/
      851    16406    2     END RUNIT10;
      852    16407        /*
      853    16408            ****   Get run unit name and prepare to do cpexit
      854    16409        */
      855    16410    1     CALL EXIT_SETUP(BLK$->P$B.SUBLK$(0)->P$S) ALTRET(RUNIT75);
      856    16411        /*
      857    16412          ****  Translate all :SYS run unit names to upper case
      858    16413        */
      859    16414    1     IF (FID_RESULTS.ACCT=%NO#)
      860    16415    1        THEN /*If ru and no PERI0D*/
      861    16416    2           DO;
      862    16417    2              SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);   /*:SYS infrd*/
      863    16418    2              CALL XLATE(FID_NAME.NAME#,TRANSTBL,FID_NAME.NAME#);
      864    16419    2           END;
      865    16420    1        ELSE
      866    16421    1           IF (FID_ACCT.ACCT#=BLANKS)
      867    16422    1              THEN    /*If ru.  Get accn from jit*/
      868    16423    1                 SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(BLANKS);
      869    16424    1              ELSE
      870    16425    2                 DO;
      871    16426    2                    SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(FID_ACCT);
      872    16427    2                    IF FID_ACCT.ACCT# = SYSTXT
      873    16428    2                       THEN
      874    16429    2                          CALL XLATE(FID_NAME.NAME#,TRANSTBL,FID_NAME.NAME#);
      875    16430    2                 END;
      876    16431                                                /*Accn was spec'd*/
      877    16432    1     CALL RUEXIT ALTRET(RUNIT75);
      878    16433    1     RETURN;
      879    16434    1   RUNIT75:;
      880    16435        /*
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:29   
      881    16436             ***** Post all errors ...
      882    16437        */
      883    16438    1     IF B$JIT.USRERR.CODE ~= 0
      884    16439    1        THEN
      885    16440    1           CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$JIT.USRERR);
      886    16441    1     B$JIT.USRERR = '0'B;   /* Throw away B$JIT.USRERR */
      887    16442        /*
      888    16443          **** Always reset dcb assignments for source and update dcbs
      889    16444        */
      890    16445    1     IF (B$JIT.PRFLAGS.SI)
      891    16446    1        THEN
      892    16447    2           DO;           /*Reset #1*/
      893    16448    2              CALL CXB$DELAM(ADDR(SOURCEDCB),ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;
      894    16449    2              IF CPSL_PARAM.ERRCODE ~= %NO#
      895    16450    2                 THEN
      896    16451    2                   IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      897    16452    2                     THEN
      898    16453    2                       GOTO RUNIT80 ;
      899    16454    2                     ELSE
      900    16455    3                       DO ;
      901    16456    3                         B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;
      902    16457    3                         GOTO RUNIT75 ;
      903    16458    3                       END ;
      904    16459    2              B$JIT.PRFLAGS.SI = %NO#;
      905    16460    2           END;
      906    16461    1     IF (B$JIT.PRFLAGS.UI)
      907    16462    1        THEN
      908    16463    2           DO;           /*Reset #2*/
      909    16464    2              CALL CXB$DELAM(ADDR(SOURCEDCB),ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;
      910    16465    2              IF CPSL_PARAM.ERRCODE ~= %NO#
      911    16466    2                 THEN
      912    16467    2                   IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      913    16468    2                     THEN
      914    16469    2                       GOTO RUNIT80 ;
      915    16470    2                     ELSE
      916    16471    3                       DO ;
      917    16472    3                         B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:30   
      918    16473    3                         GOTO RUNIT75 ;
      919    16474    3                       END ;
      920    16475    2              B$JIT.PRFLAGS.UI = %NO#;
      921    16476    2           END;
      922    16477        /*
      923    16478          **** Reset dcb assignments for object and list if made on this command
      924    16479        */
      925    16480    1     IF PRFLAGS.OU
      926    16481    1        THEN
      927    16482    2           DO;                   /*Reset #3*/
      928    16483    2              CALL CXB$DELAM(ADDR(SOURCEDCB),ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;
      929    16484    2              IF CPSL_PARAM.ERRCODE ~= %NO#
      930    16485    2                 THEN
      931    16486    2                   IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      932    16487    2                     THEN
      933    16488    2                       GOTO RUNIT80 ;
      934    16489    2                     ELSE
      935    16490    3                       DO ;
      936    16491    3                         B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;
      937    16492    3                         GOTO RUNIT75 ;
      938    16493    3                       END ;
      939    16494    2              B$JIT.PRFLAGS.OU = %NO#;
      940    16495    2              B$JIT.PRFLAGS.OUTPUT = %NO#;
      941    16496    2              B$JIT.FEXT(FEXT_OBJECT) = %NO#;
      942    16497    2           END;
      943    16498    1     IF PRFLAGS.LS
      944    16499    1        THEN
      945    16500    2           DO;                   /*Reset #4*/
      946    16501    2              CALL CXB$DELAM(ADDR(SOURCEDCB),ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;
      947    16502    2              IF CPSL_PARAM.ERRCODE ~= %NO#
      948    16503    2                 THEN
      949    16504    2                   IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
      950    16505    2                     THEN
      951    16506    2                       GOTO RUNIT80 ;
      952    16507    2                     ELSE
      953    16508    3                       DO ;
      954    16509    3                         B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:31   
      955    16510    3                         GOTO RUNIT75 ;
      956    16511    3                       END ;
      957    16512    2              B$JIT.PRFLAGS.LS = %NO#;
      958    16513    2              B$JIT.PRFLAGS.LIST = %NO#;
      959    16514    2              B$JIT.FEXT(FEXT_LIST) = %NO#;
      960    16515    2           END;
      961    16516    1     B$JIT.PRFLAGS.NSSYNTAX = %NO#;
      962    16517    1   RUNIT80:;
      963    16518    1     IF B$JIT.USRERR.CODE ~= 0
      964    16519    1        THEN   /* Something to report */
      965    16520    2           DO;
      966    16521    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$JIT.USRERR);
      967    16522    2              B$JIT.USRERR = '0'B;
      968    16523    2           END;
      969    16524    1     ALTRETURN;
      970    16525                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:32   
      971    16526        /*F*   NAME: CPA$SAVE
      972    16527               PURPOSE: To process the SAVE command.
      973    16528        */
      974    16529    1   CPA$SAVE:
      975    16530    1     ENTRY(P$PCB)   ALTRET;
      976    16531        /*
      977    16532        *****  Begin procedure
      978    16533        */
      979    16534    1     BLK$ = P$PCB.OUT$;
      980    16535    1     CPOS = BLK$ -> P$B.SUBLK$(1) -> P$S.CPOS;
      981    16536    1     CALL EXIT_SETUP(BLK$->P$B.SUBLK$(1)->P$S) ALTRET(E_SAVE_SETUP);
      982    16537    1     IF BLK$->P$B.SUBLK$(0)->P$B.CODE = ONOPT
      983    16538    1        THEN
      984    16539    2           DO;
      985    16540    2              FPT_OPEN = CFPT_OPEN;
      986    16541    2              FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);
      987    16542    2              FPT_OPEN.NAME_ = VECTOR(FID_NAME);
      988    16543    2              FPT_OPEN.ACCT_ = VECTOR(FID_ACCT);
      989    16544    2              FPT_OPEN.PASS_ = VECTOR(FID_PASS);
      990    16545    2              FPT_OPEN.V.ASN# = FID_ASN;
      991    16546    2              FPT_OPEN.V.DCB# = M$IBEX1_NUM;
      992    16547    2              FPT_OPEN.V.OPER.TEST# = %YES# ;
      993    16548    2              CALL M$OPEN(FPT_OPEN) ALTRET(E_SAVE_M$OPEN);
      994    16549    2   FILE_EXISTS:
      995    16550    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,E_ONEXIST);
      996    16551        /*E*    ERROR:   CPA-E$ONEXIST-C
      997    16552                MESSAGE:    File exists.
      998    16553                MESSAGE1:   The file named for the SAVE image already exists.
      999    16554        */
     1000    16555    2              ALTRETURN;
     1001    16556        /**/
     1002    16557    2   E_SAVE_M$OPEN:
     1003    16558    2              IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOFILE
     1004    16559    2                 THEN
     1005    16560    2                    GOTO CNTU_SAVE;
     1006    16561    2                 ELSE
     1007    16562    2                    CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$TCB.ALT$ ->
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:33   
     1008    16563    2                          B$ALT.ERR,,B$TCB.ALT$ -> B$ALT.DCB#);
     1009    16564    2              ALTRETURN;
     1010    16565    2           END;
     1011    16566    1   CNTU_SAVE:
     1012    16567    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.SAVEFLG# = %YES#;
     1013    16568    1     CALL CPC$EXIT  ALTRET(E_SAVE_C$EXIT);
     1014    16569    1   E_SAVE_SETUP:
     1015    16570    1     ALTRETURN;
     1016    16571    1   E_SAVE_C$EXIT:
     1017    16572    1     ALTRETURN;
     1018    16573        %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:34   
     1019    16574        /**********************************************************************/
     1020    16575        /*F*   NAME:   CPA$SIXEDIT
     1021    16576               PURPOSE: To process the 6X, 6E[DIT], and 6B[UILD] control commands.
     1022    16577               DESCRIPTION: The 6EDIT processor is called to process the
     1023    16578                       various 6EDIT commands.
     1024    16579               REFERENCE: 6EDIT Reference Manual
     1025    16580        */
     1026    16581        /*D*   NAME:   CPA$SIXEDIT
     1027    16582               CALL:   CALL CPA$SIXEDIT(BLK$)
     1028    16583               INTERFACE: CPC$IQUIT,RUEXIT
     1029    16584               INPUT:  P$PCB - control block for parsed output
     1030    16585                       CPFLAGS1 - implied quit flag set or reset
     1031    16586               OUTPUT: M$CPEXIT fpt initialized with exit information
     1032    16587               DESCRIPTION: If a user is at job step and the previous job
     1033    16588                       step has been run down, the command is moved to CCBUF
     1034    16589                       in the JIT and the 6EDIT processor called.
     1035    16590        */
     1036    16591        /************************************************************************/
     1037    16592    1   CPA$SIXEDIT:
     1038    16593    1     ENTRY(P$PCB)   ALTRET;
     1039    16594        /*
     1040    16595           **** Set up exit fpt and exit to 6edit processor
     1041    16596        */
     1042    16597    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
     1043    16598    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
     1044    16599    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
     1045    16600    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(SIXEDITTXTC);
     1046    16601    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);
     1047    16602    1     B$JIT.CCDISP = P$PCB.NCHARS;
     1048    16603    1     CALL RUEXIT ALTRET(SIXEDIT50);
     1049    16604    1   SIXEDIT50: ;
     1050    16605    1     ALTRETURN;
     1051    16606                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:35   
     1052    16607        /**********************************************************************/
     1053    16608        /*F*   NAME:   CPA$START
     1054    16609               PURPOSE: To process the START control command.
     1055    16610               DESCRIPTION: CPA$START is called whenever a START command is encountered.
     1056    16611                       The command is scanned and interpretive exit information
     1057    16612                       generated for performing an interpretive exit to the specified
     1058    16613                       run unit.
     1059    16614               REFERENCE: Programmers reference manual
     1060    16615        */
     1061    16616        /*D*   NAME:   CPA$START
     1062    16617               CALL:   CALL CPA$START(BLK$)
     1063    16618               INTERFACE: CPC$WRITEMSGE,CPA$IQUIT,RUEXIT
     1064    16619               INPUT:  BLK$ - Pointer to parsed output
     1065    16620                       CP_IQUIT# - Flag in JIT indicating whether an implied quit
     1066    16621                       should be performed.
     1067    16622               OUTPUT: CPEXIT FPT initialized with run unit name, account, password,
     1068    16623                       debugger name, and pack set identification.
     1069    16624                       B$JIT.CPFLAGS1.DELTA - delta flag set
     1070    16625               DESCRIPTION: The following forms of the START command are acceptable:
     1071    16626                       1. START fid
     1072    16627                       2. START fid U
     1073    16628                       3. START fid U[NDER  debugger]
     1074    16629                       The command in CPBUFF is scanned for the run unit name. If
     1075    16630                       the run unit specified does not include an account, the
     1076    16631                       running account is utilized as the default account. If an error
     1077    16632                       is encountered, the appropriate error message is output and
     1078    16633                       the ALTRET taken. The specified run unit is put into execution
     1079    16634                       by calling a routine which executes a M$CPEXIT PMME.
     1080    16635                       If execution of a run unit is attempted when not at job step
     1081    16636                       , the 'QUIT?' message is output to the user and a return
     1082    16637                       made for the user's response. If the implied quit flag is
     1083    16638                       set(set when not at job step), the previous job step will
     1084    16639                       be run down before the previously mentioned functions are
     1085    16640                       performed. The debugger named DELTA is assumed by
     1086    16641                       default if UNDER is specified without a debugger name.
     1087    16642        */
     1088    16643        /**********************************************************************/
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:36   
     1089    16644    1   CPA$START:
     1090    16645    1     ENTRY(P$PCB)   ALTRET;
     1091    16646        /*
     1092    16647             *****    Begin procedure
     1093    16648        */
     1094    16649    1     BLK$=P$PCB.OUT$;
     1095    16650    1     B$JIT.CCDISP = P$PCB.NCHARS;
     1096    16651    1     CALL EXIT_SETUP(BLK$->P$B.SUBLK$(0)->P$S) ALTRET(CPA$START55);
     1097    16652        /*
     1098    16653          ****  Translate all :SYS run unit names to upper case
     1099    16654        */
     1100    16655    1     IF (FID_RESULTS.ACCT=%YES#)
     1101    16656    1        THEN
     1102    16657    2           DO;
     1103    16658    2              IF FID_ACCT.ACCT# = SYSTXT
     1104    16659    2                 THEN
     1105    16660    2                    CALL XLATE(FID_NAME.NAME#,TRANSTBL,FID_NAME.NAME#);
     1106    16661    2           END;
     1107    16662                                                /*Accn was spec'd*/
     1108    16663    1     IF BLK$->P$B.NSUBLKS > 1
     1109    16664    1        THEN
     1110    16665    2           DO CASE(BLK$->P$B.SUBLK$(1)->P$B.CODE);
     1111    16666    2            CASE(SDEBUGOPT);
     1112    16667    2              SEG$2.DBUG_NAME=BLK$->P$B.SUBLK$(1)->
     1113    16668    2                   P$S.TEXTC$->TEXT$C;
     1114    16669    2              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DELTA#;
     1115    16670    2            CASE(SUOPT);
     1116    16671    2              SEG$2.DBUG_NAME=DELTATXTC;
     1117    16672    2              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DELTA#;
     1118    16673    2            END;
     1119    16674    1     CALL RUEXIT ALTRET(CPA$START55);
     1120    16675    1     RETURN;
     1121    16676    1   CPA$START55:;
     1122    16677    1     ALTRETURN;
     1123    16678                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:37   
     1124    16679        /**********************************************************************/
     1125    16680        /*F*   NAME:   CPA$UNDER
     1126    16681               PURPOSE: The UNDER command is utilized to associate a debugger
     1127    16682                       with a run unit specified on the next command.
     1128    16683               DESCRIPTION: The debugger DELTA is associated by default if a
     1129    16684                       debugger isn't specified. This command only remains in
     1130    16685                       effect for the command which immediately follows and
     1131    16686                       which must be a run unit.
     1132    16687               REFERENCE: Programmers Reference Manual
     1133    16688        */
     1134    16689        /*     NAME:   CPA$UNDER
     1135    16690               CALL:   Call CPA$UNDER(P$PCB)
     1136    16691               interface:
     1137    16692               INPUT:  P$PCB - parse control block
     1138    16693               OUTPUT: B$JIT.CPFLAGS1.CP_DELTA# - set
     1139    16694                       cpexit fpt - init. with debugger name if specified
     1140    16695               DESCRIPTION: If a sub-block is not found, the default debugger
     1141    16696                       name 'DELTA' is eventually framed in the cpexit fpt.
     1142    16697                       Otherwise, the debugger name in the sub-block is framed
     1143    16698                       in the cpexit fpt.
     1144    16699        */
     1145    16700        /**********************************************************************/
     1146    16701    1   CPA$UNDER: ENTRY(P$PCB) ALTRET;
     1147    16702    1     BLK$=P$PCB.OUT$;
     1148    16703    1     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DELTA#;
     1149    16704    1     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_BUFFULL#;
     1150    16705    1     IF BLK$->P$B.NSUBLKS > 0
     1151    16706    1        THEN
     1152    16707    1           SEG$2.DBUG_NAME=BLK$->P$B.SUBLK$(0)->
     1153    16708    1                P$S.TEXTC$->TEXT$C;
     1154    16709    1        ELSE
     1155    16710    1           SEG$2.DBUG_NAME=DELTATXTC;
     1156    16711    1     RETURN;
     1157    16712                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:38   
     1158    16713        /*
     1159    16714           *****   Local subroutines
     1160    16715        */
     1161    16716        /**********************************************************************/
     1162    16717        /*I*   NAME: RUEXIT
     1163    16718               PURPOSE: To provide a common exit for all run units to be executed.
     1164    16719               CALL:   CALL RUEXIT
     1165    16720               INTERFACE: CPC$EXIT,CPC$WRITEMSGE
     1166    16721               INPUT:  FPT_CPEXIT -  Initialized with run unit information
     1167    16722               OUTPUT: FPT_CPEXIT - Initialized with debugger name if CP_DELTA set
     1168    16723                       B$JIT.CCARS - record size
     1169    16724                       B$JIT.CCDISP - displacemennt to (
     1170    16725                       B$JIT.CCBUF - control command
     1171    16726               DESCRIPTION: RUEXIT performs general cleanup operations required
     1172    16727                       before an exit from IBEX is performed.
     1173    16728        */
     1174    16729        /***********************************************************************/
     1175    16730    1   RUEXIT: PROC ALTRET;
     1176    16731                                                                                    /**/
     1177    16732    2     IF (B$JIT.CPFLAGS1 & %CP_DELTA#)
     1178    16733    2        THEN
     1179    16734    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.DEBUG_=VECTOR(SEG$2.DBUG_NAME);
     1180    16735    2        ELSE
     1181    16736    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.DEBUG_=VECTOR(NIL);
     1182    16737    2     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_DELTA#;
     1183    16738    2     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_BUFFULL#;
     1184    16739        /*
     1185    16740        *****   The ccbuf filed of B$JIT is now set up for the receiving program;
     1186    16741        *****   the command line is moved to the jit after stripping the leading '!',
     1187    16742        *****   if any.  In addition, if the run-unit call was preceded by a label,
     1188    16743        *****   the label is over-written with blanks.  Once all of this is done, the
     1189    16744        *****   B$JIT.CCARS and B$JIT.CCDISP fields are set accordingly.
     1190    16745        */
     1191    16746    2     IF B$JIT.CPFLAGS1.JSTEP
     1192    16747    2         OR B$JIT.CPFLAGS1.LNKPMME
     1193    16748    2           OR (P$PCB.OUT$ -> P$B.CODE = PMDCMND)  /* PMD ALWAYS EXPECTED IN CCBUF */
     1194    16749    2        THEN
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:39   
     1195    16750    3           DO;
     1196    16751    3              B$JIT.CCARS = P$PCB.NCHARS;
     1197    16752    3              CALL INDEX (I,': ',SEG$2.CPBUFF$ -> CP$BUFF) ALTRET(NO_LABEL);
     1198    16753    3              CALL INDEX (J,' ',SUBSTR(SEG$2.CPBUFF$ -> CP$BUFF,0,I))
     1199    16754    4                                         WHENRETURN DO;
     1200    16755    4                                           GOTO NO_LABEL;     /* Found a blank */
     1201    16756    4                                         END ; /* Whenreturn Do */
     1202    16757    3              CALL INDEX (J,'(',SUBSTR(SEG$2.CPBUFF$ -> CP$BUFF,0,I))
     1203    16758    4                                         WHENRETURN DO;
     1204    16759    4                                           GOTO NO_LABEL; /* Found a left paren */
     1205    16760    4                                         END ; /* Whenreturn Do */
     1206    16761        /**/
     1207    16762    3              CALL INSERT (SEG$2.CPBUFF$ -> CP$BUFF,0,I+1,' ');
     1208    16763        /**/
     1209    16764    3   NO_LABEL:
     1210    16765    3              B$JIT.CCBUF = SEG$2.CPBUFF$ -> CP$BUFF;
     1211    16766    3              IF SEG$2.GETCMD$->GET$CMD.CONTINUED#
     1212    16767    3               THEN
     1213    16768    4                 DO ;
     1214    16769    4                   J = VBASE(SEG$2.XUG_INIT$->XUG$INIT.PARAMS$->XUG$PARAMS.RLTVEC)
     1215    16770    4                             ->XUG$RLT(1) - 1 ;
     1216    16771    4                   CALL INSERT(B$JIT.CCBUF, J, 1, ';') ;
     1217    16772    4                 END ; /* Then Do */
     1218    16773    3           END;
     1219    16774    2     CALL CPC$EXIT  ALTRET(E_RUEXIT_C$EXIT);
     1220    16775    2   E_RUEXIT_C$EXIT:
     1221    16776    2     SEG$2.GETCMD$->GET$CMD.ERR_CODE = B$TCB.ALT$->B$EXCFR.ERR ;
     1222    16777    2     SEG$2.GETCMD$->GET$CMD.ERRDCB# = 0 ;
     1223    16778    2     ALTRETURN;
     1224    16779    2   END RUEXIT;
     1225    16780        %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:40   
     1226    16781        /*I*   NAME:    EXIT_SETUP
     1227    16782               PURPOSE:    To set up the M$CPEXIT FPT from the text name passed
     1228    16783                        to the routine.
     1229    16784               CALL:    CALL EXIT_SETUP(P$S) ALTRET(error address);
     1230    16785        */
     1231    16786    1   EXIT_SETUP: PROC(P$S)    ALTRET;
     1232    16787        /**/
     1233    16788               %PARSE$SYM(NAME=P$S,STCLASS="");
     1234    16826        /*
     1235    16827        *****  Begin procedure
     1236    16828        */
     1237    16829    2     FPT_FID = CFPT_FID;
     1238    16830    2     FPT_FID.V_ = VECTOR(FPT_FID.V);
     1239    16831    2     FPT_FID.TEXTFID_ = VECTOR(P$S.TEXT);
     1240    16832    2     FPT_FID.NAME_ = VECTOR(FID_NAME);
     1241    16833    2     FPT_FID.ACCT_ = VECTOR(FID_ACCT);
     1242    16834    2     FPT_FID.PASS_ = VECTOR(FID_PASS);
     1243    16835    2     FPT_FID.SN_ = VECTOR(FID_SN);
     1244    16836    2     FPT_FID.WSN_ = VECTOR(FID_WSN);
     1245    16837    2     FPT_FID.ASN_ = VECTOR(FID_ASN);
     1246    16838    2     FPT_FID.RES_ = VECTOR(FID_RES);
     1247    16839    2     FPT_FID.RESULTS_ = VECTOR(FID_RESULTS);
     1248    16840    2     CALL M$FID(FPT_FID) ALTRET(ERR_SETUP);
     1249    16841        /**/
     1250    16842    2     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;
     1251    16843    2     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =
     1252    16844    2          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
     1253    16845    2     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_ = VECTOR(FID_NAME);
     1254    16846    2     IF FID_RESULTS.ACCT = %YES#
     1255    16847    2        THEN
     1256    16848    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_ = VECTOR(FID_ACCT);
     1257    16849    2        ELSE
     1258    16850    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_ = VECTOR(BLANKS);
     1259    16851    2     IF FID_RESULTS.PASS = %YES#
     1260    16852    2        THEN
     1261    16853    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.PASS_ = VECTOR(FID_PASS);
     1262    16854    2     IF FID_RESULTS.SN = %YES#
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:41   
     1263    16855    2        THEN
     1264    16856    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.PSID_ = VECTOR(FID_SN.SN#(0));
     1265    16857    2     RETURN;
     1266    16858        /**/
     1267    16859    2   ERR_SETUP:
     1268    16860    2     CPOS = P$S.CPOS;
     1269    16861    2     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$TCB.ALT$->B$ALT.ERR);
     1270    16862    2     ALTRETURN;
     1271    16863    2   END EXIT_SETUP;
     1272    16864    1   END CPA$CMDS;

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:42   
--  Include file information  --

   CX_MACROS_M.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AZ_SUBS_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   AZ_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPA$CMDS.

   Procedure CPA$CMDS requires 1658 words for executable code.
   Procedure CPA$CMDS requires 188 words of local(AUTO) storage.

    No errors detected in file CPA$CMDS.:E05TSI    .

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:43   

 Object Unit name= CPA$CMDS                                   File name= CPA$CMDS.:E05TOU
 UTS= JUL 29 '97 11:13:29.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     33     41  CPA$CMDS
    2   Proc  even  none  1658   3172  CPA$CMDS
    3  RoData even  none    52     64  CPA$CMDS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  CPA$CMDS
     2      3          yes     yes      Std        1  CPA$BACKUP
     2    265          yes     yes      Std        1  CPA$BYE
     2    711          yes     yes      Std        1  CPA$DEBUG
     2   1004          yes     yes      Std        1  CPA$EDIT
     2   1036          yes     yes      Std        1  CPA$EFT
     2   1070          yes     yes      Std        1  CPA$EXIT
     2   1117          yes     yes      Std        1  CPA$FEPLINK
     2   1151          yes     yes      Std        1  CPA$GET
     2   1174          yes     yes      Std        1  CPA$GO
     2   1220          yes     yes      Std        1  CPA$JOB
     2   1223          yes     yes      Std        1  CPA$JOIN
     2   1226          yes     yes      Std        1  CPA$LINK
     2   1260          yes     yes      Std        1  CPA$PCL
     2   1312          yes     yes      Std        1  CPA$PMD
     2   1353          yes     yes      Std        1  CPA$RUNIT
     2   2263          yes     yes      Std        1  CPA$SAVE
     2   2426          yes     yes      Std        1  CPA$SIXEDIT
     2   2460          yes     yes      Std        1  CPA$START
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:44   
     2   2560          yes     yes      Std        1  CPA$UNDER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes           Std       4 CXB$DELAM
         yes           Std       6 CPC$WRITEMSGE
 yes     yes           Std       0 CPC$QUIT
         yes           Std       4 CXB$BLDAM
 yes     yes           Std       2 CPC$RDUSERS
         yes           Std       5 CXP$POSTERR
         yes           Std       0 CPC$OPEN_LL
 yes     yes           Std       1 AZA$LOGOFF
         yes           Std       3 CXC$WRITEAM
 yes     yes           Std       0 CPC$EXIT
 yes     yes           Std       5 CPE$GENRUAM
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_OPEN                             CFPT_CLOSE
     CFPT_CPEXIT                           CFPT_FID                              CFPT_OCMSG
r    SEG2$                            r    SEG3$                            r    B$JIT$
r    B$TCB$                                M$IBEX_NUM                            M$IBEX1_NUM
     SOURCEDCB                             UPDATEDCB                             OBJECTDCB
     LISTDCB                          r    B$XL_UPPER$                           B_VECTNIL
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:45   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 ROSID                                 NULLSID
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:46   


        1        1        /*M*  IBEX rununit commands  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        CPA$CMDS:
        9        9          PROC(P$PCB) ALTRET;

      9  2 000000   000000 700200 xent  CPA$CMDS     TSX0  ! X66_AUTO_1
         2 000001   000274 000001                    ZERO    188,1
         2 000002   000005 710000 2                  TRA     s:15681

       10       10        /*******************************************************************************
       11       11        *                                Include files                                 *
       12       12        *******************************************************************************/
       13       13                %INCLUDE AZ_MACRO_C;
       14     2600                %INCLUDE AZ_SUBS_C;
       15     2669                %INCLUDE B$JIT;
       16     2959                %INCLUDE B_MACROS_C;
       17     3070                %INCLUDE CP_6;
       18     3151                %INCLUDE CP_MACROS_C;
       19     3903                %INCLUDE CP_PERR_C;
       20     4241                %INCLUDE CP_SUBS_C;
       21     5158                %INCLUDE CP_6_SUBS;
       22     5698                %INCLUDE F_ERRORS_C;
       23     5938                %INCLUDE OC_SUBS_C;
       24     6669                %INCLUDE XU_MACRO_C;
       25     9775                %INCLUDE AS_SUPER_C;
       26    10210                %INCLUDE CP_DATA_R;
       27    12773                %INCLUDE XUH_MACRO_C ;
       28    12857                %INCLUDE B$TABLES_C ;
       29    12965                %INCLUDE CX_MACROS_M ;
       30    13016    1   DCL     AZA$LOGOFF     ENTRY(1)    ALTRET;
       31    13017    1   DCL     CXB$BLDAM      ENTRY(4) ;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:47   
       32    13018    1   DCL     CXB$DELAM      ENTRY(4) ;
       33    13019    1   DCL     CPC$EXIT       ENTRY       ALTRET;
       34    13020    1   DCL     CPC$QUIT       ENTRY       ALTRET;
       35    13021    1   DCL     CXC$WRITEAM    ENTRY(3) ;
       36    13022    1   DCL     CPC$WRITEMSGE  ENTRY(6);
       37    13023    1   DCL     CPE$GENRUAM    ENTRY(5)    ALTRET;
       38    13024    1   DCL     CXP$POSTERR    ENTRY(5);
       39    13025    1   DCL     CPJ$ESTCUM     ENTRY(2)   ALTRET;
       40    13026    1   DCL     CPC$OPEN_LL    ENTRY;
       41    13027    1   DCL     CPC$RDUSERS    ENTRY(2) ALTRET;
       42    13028    1   DCL BLK$ PTR;                           /*Parse output block pointer*/
       43    13029    1   DCL FID$ PTR;                           /*Fid pointer*/
       44    13030    1   DCL TA$ PTR;                            /*Temp. Pointer*/
       45    13031    1   DCL TB$ PTR;                            /*Temp. Pointer*/
       46    13032    1   DCL I SBIN;                             /*Temp. Loc for indexes*/
       47    13033    1   DCL J SBIN;
       48    13034    1   DCL CPOS UBIN WORD AUTO;
       49    13035    1   DCL BLANKS CHAR(8) CONSTANT INIT('        ');
       50    13036    1   DCL 1 PRFLAGS,
       51    13037    1          2 OU BIT(1) UNAL,
       52    13038    1          2 LS BIT(1) UNAL;
       53    13039    1   DCL FEXTSAVE (0:35) BIT(1) UNAL;        /*Jit file exten. Bits*/
       54    13040    1   DCL FID_ASN UBIN(9);                    /*Run unit asn*/
       55    13041    1   DCL FID_RES CHAR(4);                    /*Run unit res*/
       56    13042    1   DCL SYSTXT CHAR(8) CONSTANT INIT(':SYS    ');
       57    13043        %B$XL_UPPER (NAME=TRANSTBL) ;
       58    13047        /**/
       59    13048        /**/
       60    13049        %P$PCB(NAME=P$PCB,STCLASS="");
       61    13250        %CPSL_COMMAND_PARAMETERS (NAME=CPSL_PARAM, STCLASS=AUTO) ;
       62    13268        %SEG$2;
       63    13328        %ERR_BLK (NAME=ERR$BLK,STCLASS=BASED);
       64    13353        %B$TCB (STCLASS="BASED(B$TCB$)");
       65    13356        %B$ALT;
       66    13364        %B$EXCFR ;
       67    13382        %AS_USERS(STR_NAME=AS$USERS,STCLASS=BASED);
       68    13560        %FPT_FID(FPTN=FPT_FID,STCLASS=AUTO);
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:48   
       69    13583        %FPT_CPEXIT(FPTN=FPT$CPEXIT,STCLASS=BASED);
       70    13609        %FPT_OPEN(FPTN=AMR$REC$,STCLASS="BASED(SEG3$)",PFMT="PTR");
       71    13718        %FPT_OPEN(FPTN=FPT_OPEN,STCLASS=AUTO);
       72    13827        %FPT_OCMSG(FPTN=FPT_OCMSG,STCLASS=AUTO);
       73    13843        %FPT_CLOSE(FPTN=FPT_CLOSE,STCLASS=AUTO);
       74    13885        %FPT_XFLUSH(FPTN=FPT_XFLUSH,STCLASS=CONSTANT,ONELEVEL=YES);
       75    13899        %F$DCB;
       76    13956        %PARSE$OUT (NAME=P$B);
       77    14001        %PARSE$SYM(NAME=P$S);
       78    14039        %XUG_GETCMD (NAME=GET$CMD, STCLASS=BASED) ;
       79    14377        %XUG_PARAMS (NAME=XUG$PARAMS, STCLASS=BASED) ;
       80    14821        %XUG_INIT (NAME=XUG$INIT, STCLASS=BASED) ;
       81    15234        %XUG_RLT (NAME=XUG$RLT) ;
       82    15241        %LOGOFF$PARAM(NAME=LOGOFF,STCLASS=AUTO);
       83    15282        %VLP_NAME (FPTN=DELTATXTC,LEN=5,NAME='DELTA',STCLASS=CONSTANT);
       84    15309        %VLP_NAME (FPTN=EDITTXTC,LEN=4,NAME='EDIT',STCLASS=CONSTANT);
       85    15336        %VLP_NAME (FPTN=SIXEDITTXTC,LEN=5,NAME='6EDIT',STCLASS=CONSTANT);
       86    15363        %VLP_NAME (FPTN=PCLTXTC,LEN=3,NAME='PCL',STCLASS=CONSTANT);
       87    15390        %VLP_NAME (FPTN=LINKTXTC,LEN=4,NAME='LINK',STCLASS=CONSTANT);
       88    15417    1   DCL 1 EFTTXTC CALIGNED CONSTANT,
       89    15418    1       2 L# UBIN(9) CALIGNED INIT (3),
       90    15419    1       2 NAME# CHAR(11) CALIGNED INIT ('EFT');
       91    15420        %VLP_NAME (FPTN=FEPLINKTXTC,LEN=7,NAME='FEPLINK',STCLASS=CONSTANT);
       92    15447        %VLP_NAME (FPTN=IBEXTEXTC,LEN=4,NAME='IBEX',STCLASS=CONSTANT);
       93    15474        %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
       94    15501        %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
       95    15514        %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
       96    15527        %VLP_SN (FPTN=FID_SN,N=4,STCLASS=AUTO);
       97    15540        %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
       98    15553        %VLR_FID(FPTN=FID_RESULTS,STCLASS=AUTO);
       99    15572        %TEXTC(NAME=TEXT$C);
      100    15577        %CP$BUFF (NAME=CP$BUFF,STCLASS=BASED);
      101    15580        %ERR_CODE (NAME=E_BACKDISKONLY,MID#=CPA$IBEXMID,CODE#=E$BACKDISKONLY,STCLASS=
             15580            CONSTANT);
      102    15600        %ERR_CODE (NAME=E_CANTBACKUP,MID#=CPA$IBEXMID,CODE#=E$CANTBACKUP,STCLASS=CONSTANT);
      103    15620        %ERR_CODE (NAME=E_OPABORT,MID#=CPA$IBEXMID,CODE#=E$OPABORT,STCLASS=CONSTANT);
      104    15640        %ERR_CODE (NAME=E_ONEXIST,MID#=CPA$IBEXMID,CODE#=E$ONEXIST,STCLASS=CONSTANT);
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:49   
      105    15660                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:50   
      106    15661        /**********************************************************************/
      107    15662        /*F*    NAME:    CPA$BACKUP
      108    15663                PURPOSE: To process the BACKUP command - set backup bit in file.
      109    15664                DESCRIPTION: CPA$BACKUP when called will set the bit in a
      110    15665                         a files FIT that tells EFT to back the file up on tape.
      111    15666                REFERENCE: Programmers Reference Manual
      112    15667        */
      113    15668        /*D*    NAME:    CPA$BACKUP
      114    15669                CALL:    CALL CPA$BACKUP(PCB$)
      115    15670                INTERFACE: M$FID,M$OPEN,M$CLOSE,CPC$WRITEMSGE
      116    15671                DESCRIPTION: CPA$BACKUP first calls M$FID to process the passed
      117    15672                         file name. If it is a disk file it is opened and if
      118    15673                         this file is eligible for backup then the backup bit
      119    15674                         is set via M$CLOSE to tell EFT to do its thing.
      120    15675        */
      121    15676        /**********************************************************************/
      122    15677    1   CPA$BACKUP: ENTRY(P$PCB) ALTRET;

  15677  2 000003   000000 700200 xent  CPA$BACKUP   TSX0  ! X66_AUTO_1
         2 000004   000274 000001                    ZERO    188,1

      123    15678        /*
      124    15679          ***  Do M$FID on passed fid.
      125    15680        */
      126    15681    1     CALL EXIT_SETUP(P$PCB.OUT$ -> P$B.SUBLK$(0) -> P$S) ALTRET (BACKUP20);

  15681  2 000005   200003 470500                    LDP0    @P$PCB,,AUTO
         2 000006   000003 471500                    LDP1    3,,PR0
         2 000007   100003 473500                    LDP3    3,,PR1
         2 000010   200265 453500                    STP3    FID_RESULTS+11,,AUTO
         2 000011   002767 701000 2                  TSX1    EXIT_SETUP
         2 000012   000227 702000 2                  TSX2    BACKUP20

      127    15682    1     IF (FID_ASN ~= %FILE#)

  15682  2 000013   200015 236100                    LDQ     FID_ASN,,AUTO
         2 000014   777000 376003                    ANQ     -512,DU
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:51   
         2 000015   001000 116003                    CMPQ    512,DU
         2 000016   000035 600000 2                  TZE     s:15693

      128    15683    1        THEN
      129    15684    2           DO;

      130    15685    2              CALL CPC$WRITEMSGE (E_BACKDISKONLY,,,,,%YES#);

  15685  2 000017   000000 236000 3                  LDQ     0
         2 000020   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000021   200272 757100                    STAQ    @P$S+5,,AUTO
         2 000022   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000023   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000024   200270 757100                    STAQ    @P$S+3,,AUTO
         2 000025   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000026   000001 235000 3                  LDA     1
         2 000027   200266 757100                    STAQ    @P$S+1,,AUTO
         2 000030   200266 630500                    EPPR0   @P$S+1,,AUTO
         2 000031   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000032   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000033   000000 011000                    NOP     0

      131    15686    2              ALTRETURN;

  15686  2 000034   000000 702200 xent               TSX2  ! X66_AALT

      132    15687    2           END;
      133    15688        /*E*    ERROR:   CPA-E$BACKDISKONLY-0
      134    15689                MESSAGE: Only disk files may be backed up.
      135    15690                DESCRIPTION: IT IS NOT POSSIBLE TO BACKUP NON DISK FILES
      136    15691        */
      137    15692        /**/
      138    15693    1     B$JIT.PRIV.ACTIVE = B$JIT.PRIV.ACTIVE | %PR_FMEFT#;

  15693  2 000035   000000 470400 xsym               LDP0    B$JIT$
         2 000036   000013 236100                    LDQ     11,,PR0
         2 000037   000030 276000 xsym               ORQ     B_VECTNIL+24
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:52   
         2 000040   000013 756100                    STQ     11,,PR0

      139    15694        /**/
      140    15695    1     FPT_OPEN = CFPT_OPEN;

  15695  2 000041   000100 100400                    MLR     fill='000'O
         2 000042   000000 000350 xsym               ADSC9   CFPT_OPEN                cn=0,n=232
         2 000043   200054 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      141    15696    1     FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);

  15696  2 000044   000002 235000 3                  LDA     2
         2 000045   200266 452500                    STP2    @P$S+1,,AUTO
         2 000046   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000047   000120 036003                    ADLQ    80,DU
         2 000050   200054 757100                    STAQ    FPT_OPEN,,AUTO

      142    15697    1     FPT_OPEN.NAME_ = VECTOR(FID_NAME);

  15697  2 000051   000003 235000 3                  LDA     3
         2 000052   200266 452500                    STP2    @P$S+1,,AUTO
         2 000053   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000054   000224 036003                    ADLQ    148,DU
         2 000055   200062 757100                    STAQ    FPT_OPEN+6,,AUTO

      143    15698    1     FPT_OPEN.ACCT_ = VECTOR(FID_ACCT);

  15698  2 000056   000004 235000 3                  LDA     4
         2 000057   200266 452500                    STP2    @P$S+1,,AUTO
         2 000060   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000061   000234 036003                    ADLQ    156,DU
         2 000062   200100 757100                    STAQ    FPT_OPEN+20,,AUTO

      144    15699    1     FPT_OPEN.PASS_ = VECTOR(FID_PASS);

  15699  2 000063   000004 235000 3                  LDA     4
         2 000064   200266 452500                    STP2    @P$S+1,,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:53   
         2 000065   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000066   000236 036003                    ADLQ    158,DU
         2 000067   200064 757100                    STAQ    FPT_OPEN+8,,AUTO

      145    15700    1     FPT_OPEN.V.ASN# = FID_ASN;

  15700  2 000070   200015 236100                    LDQ     FID_ASN,,AUTO
         2 000071   000033 772000                    QRL     27
         2 000072   200121 552104                    STBQ    FPT_OPEN+37,'04'O,AUTO

      146    15701    1     FPT_OPEN.V.DCB# = M$IBEX1_NUM;

  15701  2 000073   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 000074   200120 740100                    STX0    FPT_OPEN+36,,AUTO

      147    15702    1     FPT_OPEN.SN_ = VECTOR(FID_SN);

  15702  2 000075   000003 235000 3                  LDA     3
         2 000076   200266 452500                    STP2    @P$S+1,,AUTO
         2 000077   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000100   000240 036003                    ADLQ    160,DU
         2 000101   200056 757100                    STAQ    FPT_OPEN+2,,AUTO

      148    15703    1     FPT_OPEN.WSN_ = VECTOR(FID_WSN);

  15703  2 000102   000004 235000 3                  LDA     4
         2 000103   200266 452500                    STP2    @P$S+1,,AUTO
         2 000104   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000105   000250 036003                    ADLQ    168,DU
         2 000106   200106 757100                    STAQ    FPT_OPEN+26,,AUTO

      149    15704    1     FPT_OPEN.V.FUN# = %IN#;

  15704  2 000107   002000 236007                    LDQ     1024,DL
         2 000110   200121 552110                    STBQ    FPT_OPEN+37,'10'O,AUTO

      150    15705    1     CALL M$OPEN(FPT_OPEN) ALTRET(BACKUP10);
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:54   

  15705  2 000111   200054 630500                    EPPR0   FPT_OPEN,,AUTO
         2 000112   450000 713400                    CLIMB   alt,open
         2 000113   410400 401760                    pmme    nvectors=18
         2 000114   000177 702000 2                  TSX2    BACKUP10

      151    15706        /**/
      152    15707    1     IF (DCBADDR(M$IBEX1_NUM) -> F$DCB.BUPF ~= %YES#)

  15707  2 000115   000005 470400 3                  LDP0    5
         2 000116   000000 471500                    LDP1    0,,PR0
         2 000117   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 000120   100000 473510                    LDP3    0,X0,PR1
         2 000121   300003 430100                    FSZN    3,,PR3
         2 000122   000141 604000 2                  TMI     s:15717

      153    15708    1        THEN
      154    15709    2           DO;

      155    15710    2              CALL CPC$WRITEMSGE(E_CANTBACKUP,,,,,%YES#);

  15710  2 000123   000000 236000 3                  LDQ     0
         2 000124   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000125   200272 757100                    STAQ    @P$S+5,,AUTO
         2 000126   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000127   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000130   200270 757100                    STAQ    @P$S+3,,AUTO
         2 000131   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000132   000006 235000 3                  LDA     6
         2 000133   200266 757100                    STAQ    @P$S+1,,AUTO
         2 000134   200266 630500                    EPPR0   @P$S+1,,AUTO
         2 000135   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000136   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000137   000000 011000                    NOP     0

      156    15711    2              GOTO BACKUP20;

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:55   
  15711  2 000140   000227 710000 2                  TRA     BACKUP20

      157    15712    2           END;
      158    15713        /*E*    ERROR: CPA-E$CANTBACKUP-0
      159    15714                MESSAGE: BACKUP is not allowed on this file.
      160    15715                DESCRIPTION: THIS FILE IS NOT ALLOWED TO BE BACKED UP.
      161    15716        */
      162    15717    1     FPT_CLOSE = CFPT_CLOSE;

  15717  2 000141   000100 100400                    MLR     fill='000'O
         2 000142   000000 000170 xsym               ADSC9   CFPT_CLOSE               cn=0,n=120
         2 000143   200160 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      163    15718    1     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);

  15718  2 000144   000007 235000 3                  LDA     7
         2 000145   200266 452500                    STP2    @P$S+1,,AUTO
         2 000146   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000147   000212 036003                    ADLQ    138,DU
         2 000150   200160 757100                    STAQ    FPT_CLOSE,,AUTO

      164    15719    1     FPT_CLOSE.V.DCB#=M$IBEX1_NUM;

  15719  2 000151   200212 740100                    STX0    FPT_CLOSE+26,,AUTO

      165    15720    1     FPT_CLOSE.V.DISP#=%SAVE#;

  15720  2 000152   000002 236007                    LDQ     2,DL
         2 000153   200212 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      166    15721    1     FPT_CLOSE.V.EFTOPER.UPDDESC# = %YES#;

  15721  2 000154   004000 236007                    LDQ     2048,DL
         2 000155   200212 256100                    ORSQ    FPT_CLOSE+26,,AUTO

      167    15722    1     FPT_CLOSE.V.DESC = DCBADDR(M$IBEX1_NUM) -> F$DCB.DESC;

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:56   
  15722  2 000156   300005 721100                    LXL1    5,,PR3
         2 000157   200213 741100                    STX1    FPT_CLOSE+27,,AUTO

      168    15723    1     FPT_CLOSE.V.DESC.BUF# = %YES#;

  15723  2 000160   100000 236003                    LDQ     32768,DU
         2 000161   200213 256100                    ORSQ    FPT_CLOSE+27,,AUTO

      169    15724    1     CALL M$CLOSE(FPT_CLOSE) ALTRET (BACKUP20);

  15724  2 000162   200160 630500                    EPPR0   FPT_CLOSE,,AUTO
         2 000163   450001 713400                    CLIMB   alt,close
         2 000164   406000 401760                    pmme    nvectors=13
         2 000165   000227 702000 2                  TSX2    BACKUP20

      170    15725        /**/
      171    15726    1     IF NOT(B$JIT.PRIV.JOB & %PR_FMEFT#)

  15726  2 000166   000000 470400 xsym               LDP0    B$JIT$
         2 000167   000015 236100                    LDQ     13,,PR0
         2 000170   000030 376000 xsym               ANQ     B_VECTNIL+24
         2 000171   000176 601000 2                  TNZ     s:15729

      172    15727    1        THEN
      173    15728    1           B$JIT.PRIV.ACTIVE = B$JIT.PRIV.ACTIVE & ~%PR_FMEFT#;

  15728  2 000172   000030 236000 xsym               LDQ     B_VECTNIL+24
         2 000173   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 000174   000013 376100                    ANQ     11,,PR0
         2 000175   000013 756100                    STQ     11,,PR0

      174    15729    1     RETURN;

  15729  2 000176   000000 702200 xent               TSX2  ! X66_ARET

      175    15730        /**/
      176    15731    1   BACKUP10:
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:57   
      177    15732    1     CPOS = P$PCB.OUT$ -> P$B.SUBLK$(0) -> P$S.CPOS;

  15732  2 000177   200003 470500       BACKUP10     LDP0    @P$PCB,,AUTO
         2 000200   000003 471500                    LDP1    3,,PR0
         2 000201   100003 473500                    LDP3    3,,PR1
         2 000202   300002 235100                    LDA     2,,PR3
         2 000203   200012 755100                    STA     CPOS,,AUTO

      178    15733    1     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$TCB.ALT$ -> B$ALT.ERR,,

  15733  2 000204   000000 471400 xsym               LDP1    B$TCB$
         2 000205   100000 473500                    LDP3    0,,PR1
         2 000206   000000 236000 xsym               LDQ     SEG2$
         2 000207   000003 036003                    ADLQ    3,DU
         2 000210   200266 756100                    STQ     @P$S+1,,AUTO
         2 000211   300101 634500                    EPPR4   65,,PR3
         2 000212   200273 454500                    STP4    @P$S+6,,AUTO
         2 000213   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000214   200272 756100                    STQ     @P$S+5,,AUTO
         2 000215   300102 635500                    EPPR5   66,,PR3
         2 000216   200271 455500                    STP5    @P$S+4,,AUTO
         2 000217   200012 633500                    EPPR3   CPOS,,AUTO
         2 000220   200270 453500                    STP3    @P$S+3,,AUTO
         2 000221   200266 636500                    EPPR6   @P$S+1,,AUTO
         2 000222   200267 456500                    STP6    @P$S+2,,AUTO
         2 000223   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 000224   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 000225   000000 701000 xent               TSX1    CXP$POSTERR
         2 000226   000000 011000                    NOP     0

      179    15734    1           B$TCB.ALT$ -> B$ALT.DCB#);
      180    15735    1   BACKUP20:
      181    15736    1     IF NOT(B$JIT.PRIV.JOB & %PR_FMEFT#)

  15736  2 000227   000000 470400 xsym  BACKUP20     LDP0    B$JIT$
         2 000230   000015 236100                    LDQ     13,,PR0
         2 000231   000030 376000 xsym               ANQ     B_VECTNIL+24
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:58   
         2 000232   000237 601000 2                  TNZ     s:15742

      182    15737    1        THEN
      183    15738    1           B$JIT.PRIV.ACTIVE = B$JIT.PRIV.ACTIVE & ~%PR_FMEFT#;

  15738  2 000233   000030 236000 xsym               LDQ     B_VECTNIL+24
         2 000234   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 000235   000013 376100                    ANQ     11,,PR0
         2 000236   000013 756100                    STQ     11,,PR0

      184    15739        /*
      185    15740          ****  Make sure the dcb is closed
      186    15741        */
      187    15742    1     IF DCBADDR(M$IBEX1_NUM) -> F$DCB.FCD# = %YES#

  15742  2 000237   000005 471400 3                  LDP1    5
         2 000240   100000 473500                    LDP3    0,,PR1
         2 000241   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 000242   300000 474510                    LDP4    0,X0,PR3
         2 000243   400031 236100                    LDQ     25,,PR4
         2 000244   020000 316007                    CANQ    8192,DL
         2 000245   000264 600000 2                  TZE     s:15752

      188    15743
      189    15744    1        THEN
      190    15745    2           DO;

      191    15746    2              FPT_CLOSE = CFPT_CLOSE;

  15746  2 000246   000100 100400                    MLR     fill='000'O
         2 000247   000000 000170 xsym               ADSC9   CFPT_CLOSE               cn=0,n=120
         2 000250   200160 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      192    15747    2              FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);

  15747  2 000251   000007 235000 3                  LDA     7
         2 000252   200266 452500                    STP2    @P$S+1,,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:59   
         2 000253   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000254   000212 036003                    ADLQ    138,DU
         2 000255   200160 757100                    STAQ    FPT_CLOSE,,AUTO

      193    15748    2              FPT_CLOSE.V.DCB# = M$IBEX1_NUM;

  15748  2 000256   200212 740100                    STX0    FPT_CLOSE+26,,AUTO

      194    15749    2              FPT_CLOSE.V.DISP#=%SAVE#;

  15749  2 000257   000002 236007                    LDQ     2,DL
         2 000260   200212 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      195    15750    2              CALL M$CLOSE(FPT_CLOSE);

  15750  2 000261   200160 630500                    EPPR0   FPT_CLOSE,,AUTO
         2 000262   050001 713400                    CLIMB   close
         2 000263   406000 401760                    pmme    nvectors=13

      196    15751    2           END;

      197    15752    1     ALTRETURN;

  15752  2 000264   000000 702200 xent               TSX2  ! X66_AALT

      198    15753        %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:60   
      199    15754        /**********************************************************************/
      200    15755        /*F*   NAME:   CPA$BYE
      201    15756               PURPOSE: To process the OFF and BYE commands and log     a user
      202    15757                       off the system.
      203    15758               DESCRIPTION: CPA$BYE is called when an OFF or BYE command is encountered
      204    15759                       or when a user is to be logged off the system.
      205    15760               REFERENCE: Programmers Reference Manual
      206    15761        */
      207    15762        /*D*   NAME:   CPA$BYE
      208    15763               CALL:   CALL CPA$BYE(BLK$)
      209    15764               INTERFACE: RUEXIT,CPC$BLDMSGE,CPC$WRITEMSGE
      210    15765               INPUT:  BLK$= Pointer to parse output block
      211    15766               OUTPUT: M$CPEXIT PMME initialized with exit information
      212    15767               DESCRIPTION: CPA$BYE is called to log a user off the system. Termination
      213    15768                       of the previous job step is implied  if the user is not
      214    15769                       at job step. Otherwise initiate the logoff process: exit
      215    15770                       to the last processor if specified or just run down the user.
      216    15771        */
      217    15772        /************************************************************************/
      218    15773    1   CPA$BYE:
      219    15774    1     ENTRY(P$PCB)   ALTRET;

  15774  2 000265   000000 700200 xent  CPA$BYE      TSX0  ! X66_AUTO_1
         2 000266   000274 000001                    ZERO    188,1

      220    15775        /*
      221    15776             *****     Begin procedure
      222    15777        */
      223    15778    1     IF (B$JIT.RNST & %RS_XKEY#)

  15778  2 000267   000000 470400 xsym               LDP0    B$JIT$
         2 000270   000314 236100                    LDQ     204,,PR0
         2 000271   777000 376003                    ANQ     -512,DU
         2 000272   400000 376003                    ANQ     -131072,DU
         2 000273   000305 600000 2                  TZE     s:15789

      224    15779    1        THEN
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:61   
      225    15780                                                /*Aborted by operator*/
      226    15781    2           DO;

      227    15782        /*E*   ERROR: CPA-E$OPABORT-A
      228    15783               MESSAGE: Job/user aborted by operator
      229    15784               DESCRIPTION: Job or user was aborted by operator.
      230    15785        */
      231    15786    2              CALL CPC$WRITEMSGE(E_OPABORT); /*Write MSGE.*/

  15786  2 000274   000010 630400 3                  EPPR0   8
         2 000275   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000276   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000277   000000 011000                    NOP     0

      232    15787    2              B$JIT.RNST = B$JIT.RNST & ~%RS_XKEY#;

  15787  2 000300   000000 470400 xsym               LDP0    B$JIT$
         2 000301   000314 236100                    LDQ     204,,PR0
         2 000302   777000 376003                    ANQ     -512,DU
         2 000303   377000 376003                    ANQ     130560,DU
         2 000304   000314 552140                    STBQ    204,'40'O,PR0

      233    15788    2           END;

      234    15789    1     IF NOT(B$JIT.CPFLAGS1 & %CP_JSTEP#)

  15789  2 000305   000143 236100                    LDQ     99,,PR0
         2 000306   000034 376000 1                  ANQ     E_ONEXIST+1
         2 000307   000365 601000 2                  TNZ     s:15833

      235    15790
      236    15791    1        THEN
      237    15792    2           DO; /* rundown the user */

      238    15793    2              IF ADDR(P$PCB) ~= ADDR(NIL)

  15793  2 000310   200003 236100                    LDQ     @P$PCB,,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:62   
         2 000311   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000312   000357 600000 2                  TZE     s:15816

      239    15794
      240    15795    2                 THEN
      241    15796    3                    DO;

      242    15797    3                       IF SEG$2.GETCMD$->GET$CMD.RCVD_PROMPT#

  15797  2 000313   000000 471400 xsym               LDP1    SEG2$
         2 000314   100173 473500                    LDP3    123,,PR1
         2 000315   300006 236100                    LDQ     6,,PR3
         2 000316   020000 316003                    CANQ    8192,DU
         2 000317   000343 600000 2                  TZE     s:15810

      243    15798    3                         THEN /* Insert ! into first position */
      244    15799    4                           DO ;

      245    15800    4                             CALL CONCAT (B$JIT.CCBUF,'!', SEG$2.CPBUFF$ ->

  15800  2 000320   100171 474500                    LDP4    121,,PR1
         2 000321   041000 236003                    LDQ     16896,DU
         2 000322   000033 552140                    STBQ    27,'40'O,PR0
         2 000323   040100 100500                    MLR     fill='040'O
         2 000324   400000 000377                    ADSC9   0,,PR4                   cn=0,n=255
         2 000325   000033 200377                    ADSC9   27,,PR0                  cn=1,n=255

      246    15801    4                                             CP$BUFF) ;
      247    15802    4                             B$JIT.CCARS = P$PCB.NCHARS + 1;

  15802  2 000326   200003 470500                    LDP0    @P$PCB,,AUTO
         2 000327   000011 720100                    LXL0    9,,PR0
         2 000330   000001 621010                    EAX1    1,X0
         2 000331   000000 471400 xsym               LDP1    B$JIT$
         2 000332   100032 741100                    STX1    26,,PR1

      248    15803    4                             IF B$JIT.CCARS > %CPBUFFSIZE
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:63   

  15803  2 000333   000400 101003                    CMPX1   256,DU
         2 000334   000337 604400 2                  TMOZ    s:15806

      249    15804    4                               THEN
      250    15805    4                                 B$JIT.CCARS = %CPBUFFSIZE ;

  15805  2 000335   000400 220003                    LDX0    256,DU
         2 000336   100032 740100                    STX0    26,,PR1

      251    15806    4                             B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_CFREAD#;

  15806  2 000337   100143 236100                    LDQ     99,,PR1
         2 000340   000035 276000 1                  ORQ     E_ONEXIST+2
         2 000341   100143 756100                    STQ     99,,PR1

      252    15807    4                           END ; /* Then Do */

  15807  2 000342   000352 710000 2                  TRA     s:15813

      253    15808    3                         ELSE
      254    15809    4                           DO ;

      255    15810    4                             B$JIT.CCBUF = SEG$2.CPBUFF$ -> CP$BUFF ;

  15810  2 000343   100171 474500                    LDP4    121,,PR1
         2 000344   040100 100500                    MLR     fill='040'O
         2 000345   400000 000400                    ADSC9   0,,PR4                   cn=0,n=256
         2 000346   000033 000400                    ADSC9   27,,PR0                  cn=0,n=256

      256    15811    4                             B$JIT.CCARS = P$PCB.NCHARS ;

  15811  2 000347   200003 473500                    LDP3    @P$PCB,,AUTO
         2 000350   300011 720100                    LXL0    9,,PR3
         2 000351   000032 740100                    STX0    26,,PR0

      257    15812    4                           END ; /* Else Do */
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:64   

      258    15813    3                       B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_BUFFULL#;

  15813  2 000352   000000 470400 xsym               LDP0    B$JIT$
         2 000353   000143 236100                    LDQ     99,,PR0
         2 000354   000036 276000 1                  ORQ     E_ONEXIST+3
         2 000355   000143 756100                    STQ     99,,PR0

      259    15814    3                    END;

  15814  2 000356   000362 710000 2                  TRA     s:15817

      260    15815    2                 ELSE /* set the job termination flag */
      261    15816    2                    B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_TRMNATE#;

  15816  2 000357   000143 236100                    LDQ     99,,PR0
         2 000360   000037 276000 1                  ORQ     E_ONEXIST+4
         2 000361   000143 756100                    STQ     99,,PR0

      262    15817    2              CALL CPC$QUIT; /* run down the user */

  15817  2 000362   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000363   000000 701000 xent               TSX1    CPC$QUIT
         2 000364   000000 011000                    NOP     0

      263    15818    2           END;

      264    15819        /*
      265    15820        *****   The call to CPC$QUIT will bring the user to job step with a bye
      266    15821        *****   command in B$JIT.CCBUF; this permits normal termination of the
      267    15822        *****   job or on-line session.  Control logically resumes below.
      268    15823        */
      269    15824        /*
      270    15825        *****   Establish cumulative service limit values in the jit
      271    15826        *****   Reflecting total used for the job/session.
      272    15827        */
      273    15828        /*
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:65   
      274    15829             ***** Write the logoff msg on the administrative colsole
      275    15830                   and the communication console. UNLESS...
      276    15831                   the user is running from a colsole.
      277    15832        */
      278    15833    1     FPT_OCMSG = CFPT_OCMSG;

  15833  2 000365   000100 100400                    MLR     fill='000'O
         2 000366   000000 000050 xsym               ADSC9   CFPT_OCMSG               cn=0,n=40
         2 000367   200146 000050                    ADSC9   FPT_OCMSG,,AUTO          cn=0,n=40

      279    15834    1     FPT_OCMSG.V_ = VECTOR(FPT_OCMSG.V);

  15834  2 000370   000007 235000 3                  LDA     7
         2 000371   200266 452500                    STP2    @P$S+1,,AUTO
         2 000372   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000373   000154 036003                    ADLQ    108,DU
         2 000374   200146 757100                    STAQ    FPT_OCMSG,,AUTO

      280    15835    1     FPT_OCMSG.V.MSG# = OFF_MSG#;

  15835  2 000375   000051 235007                    LDA     41,DL
         2 000376   200154 755100                    STA     FPT_OCMSG+6,,AUTO

      281    15836    1     FPT_OCMSG.V.SUBC# = BITBIN(B$JIT.USRRNST);

  15836  2 000377   000000 470400 xsym               LDP0    B$JIT$
         2 000400   000145 236100                    LDQ     101,,PR0
         2 000401   000011 772000                    QRL     9
         2 000402   000777 376007                    ANQ     511,DL
         2 000403   000022 736000                    QLS     18
         2 000404   200155 552120                    STBQ    FPT_OCMSG+7,'20'O,AUTO

      282    15837    1     IF B$JIT.MODE = %M_INT#

  15837  2 000405   000000 236100                    LDQ     0,,PR0
         2 000406   740000 376003                    ANQ     -16384,DU
         2 000407   140000 116003                    CMPQ    49152,DU
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:66   
         2 000410   000422 601000 2                  TNZ     s:15842
         2 000411   000005 471400 3                  LDP1    5
         2 000412   100000 473500                    LDP3    0,,PR1
         2 000413   300003 474500                    LDP4    3,,PR3
         2 000414   400032 236100                    LDQ     26,,PR4
         2 000415   777000 376007                    ANQ     -512,DL
         2 000416   003000 116007                    CMPQ    1536,DL
         2 000417   000422 600000 2                  TZE     s:15842

      283    15838    1          AND DCBADDR(%M$UC#) -> F$DCB.ASN# ~= %DEVICE#
      284    15839
      285    15840    1        THEN /* not a console ghost */
      286    15841    1           FPT_OCMSG.V.OCTYPE# = 0;

  15841  2 000420   000011 236000 3                  LDQ     9
         2 000421   200155 356100                    ANSQ    FPT_OCMSG+7,,AUTO

      287    15842    1     CALL M$OCMSG (FPT_OCMSG) ALTRET(E_OCMSG);

  15842  2 000422   200146 630500                    EPPR0   FPT_OCMSG,,AUTO
         2 000423   520001 713400                    CLIMB   alt,+40961
         2 000424   401000 401760                    pmme    nvectors=3
         2 000425   000426 702000 2                  TSX2    E_OCMSG

      288    15843    1   E_OCMSG: /* dont do anything */
      289    15844        /*
      290    15845        *****  Get M$LL and close M$IBEX befors calling accounting.
      291    15846        */
      292    15847    1     IF DCBADDR(M$IBEX_NUM)->F$DCB.FCD# = %YES#

  15847  2 000426   000005 470400 3     E_OCMSG      LDP0    5
         2 000427   000000 471500                    LDP1    0,,PR0
         2 000430   000000 720000 xsym               LXL0    M$IBEX_NUM
         2 000431   100000 473510                    LDP3    0,X0,PR1
         2 000432   300031 236100                    LDQ     25,,PR3
         2 000433   020000 316007                    CANQ    8192,DL
         2 000434   000454 600000 2                  TZE     s:15860
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:67   

      293    15848    1        THEN
      294    15849    2           DO;

      295    15850    2              FPT_CLOSE = CFPT_CLOSE;

  15850  2 000435   000100 100400                    MLR     fill='000'O
         2 000436   000000 000170 xsym               ADSC9   CFPT_CLOSE               cn=0,n=120
         2 000437   200160 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      296    15851    2              FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);

  15851  2 000440   000007 235000 3                  LDA     7
         2 000441   200266 452500                    STP2    @P$S+1,,AUTO
         2 000442   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000443   000212 036003                    ADLQ    138,DU
         2 000444   200160 757100                    STAQ    FPT_CLOSE,,AUTO

      297    15852    2              FPT_CLOSE.V.DISP# = %SAVE#;

  15852  2 000445   000002 236007                    LDQ     2,DL
         2 000446   200212 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      298    15853    2              FPT_CLOSE.V.DCB# = M$IBEX_NUM;

  15853  2 000447   200212 740100                    STX0    FPT_CLOSE+26,,AUTO

      299    15854    2              CALL M$CLOSE(FPT_CLOSE) ALTRET(CPA$BYE45);

  15854  2 000450   200160 630500                    EPPR0   FPT_CLOSE,,AUTO
         2 000451   450001 713400                    CLIMB   alt,close
         2 000452   406000 401760                    pmme    nvectors=13
         2 000453   000606 702000 2                  TSX2    CPA$BYE45

      300    15855    2           END;

      301    15856        /*
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:68   
      302    15857             ***** If M$LL is currently open then close it.
      303    15858                   This is necessary for proper accounting for forms...
      304    15859        */
      305    15860    1     IF SEG$2.LLDCB# ~= 0

  15860  2 000454   000000 470400 xsym               LDP0    SEG2$
         2 000455   000000 720100                    LXL0    0,,PR0
         2 000456   000511 600000 2                  TZE     s:15872
         2 000457   000005 471400 3                  LDP1    5
         2 000460   100000 473500                    LDP3    0,,PR1
         2 000461   300000 474510                    LDP4    0,X0,PR3
         2 000462   400031 236100                    LDQ     25,,PR4
         2 000463   020000 316007                    CANQ    8192,DL
         2 000464   000511 600000 2                  TZE     s:15872

      306    15861    1     AND DCBADDR(SEG$2.LLDCB#) -> F$DCB.FCD# = %YES#
      307    15862    1        THEN
      308    15863    2           DO;

      309    15864    2              FPT_CLOSE = CFPT_CLOSE;

  15864  2 000465   000100 100400                    MLR     fill='000'O
         2 000466   000000 000170 xsym               ADSC9   CFPT_CLOSE               cn=0,n=120
         2 000467   200160 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      310    15865    2              FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);

  15865  2 000470   000007 235000 3                  LDA     7
         2 000471   200266 452500                    STP2    @P$S+1,,AUTO
         2 000472   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000473   000212 036003                    ADLQ    138,DU
         2 000474   200160 757100                    STAQ    FPT_CLOSE,,AUTO

      311    15866    2              FPT_CLOSE.V.DISP# = %SAVE#;

  15866  2 000475   000002 236007                    LDQ     2,DL
         2 000476   200212 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:69   

      312    15867    2              FPT_CLOSE.V.DCB# = SEG$2.LLDCB#;

  15867  2 000477   000000 720100                    LXL0    0,,PR0
         2 000500   200212 740100                    STX0    FPT_CLOSE+26,,AUTO

      313    15868    2              CALL M$CLOSE(FPT_CLOSE) ALTRET(CPA$BYE45);

  15868  2 000501   200160 630500                    EPPR0   FPT_CLOSE,,AUTO
         2 000502   450001 713400                    CLIMB   alt,close
         2 000503   406000 401760                    pmme    nvectors=13
         2 000504   000606 702000 2                  TSX2    CPA$BYE45

      314    15869    2              I = SEG$2.LLDCB#;

  15869  2 000505   000000 470400 xsym               LDP0    SEG2$
         2 000506   000000 236100                    LDQ     0,,PR0
         2 000507   777777 376007                    ANQ     -1,DL
         2 000510   200010 756100                    STQ     I,,AUTO

      315    15870    2           END;

      316    15871        /**/
      317    15872    1     CALL CPC$OPEN_LL;

  15872  2 000511   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000512   000000 701000 xent               TSX1    CPC$OPEN_LL
         2 000513   000000 011000                    NOP     0

      318    15873        /**/
      319    15874    1     IF ADDR(P$PCB) ~= ADDR(NIL)

  15874  2 000514   200003 236100                    LDQ     @P$PCB,,AUTO
         2 000515   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000516   000555 600000 2                  TZE     s:15890

      320    15875
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:70   
      321    15876    1        THEN /* Pcb passed to us */
      322    15877    2           DO;

      323    15878    2              IF P$PCB.OUT$ -> P$B.NSUBLKS ~= 0

  15878  2 000517   200003 470500                    LDP0    @P$PCB,,AUTO
         2 000520   000003 471500                    LDP1    3,,PR0
         2 000521   100001 220100                    LDX0    1,,PR1
         2 000522   000555 600000 2                  TZE     s:15890

      324    15879
      325    15880    2                 THEN
      326    15881    3                    DO CASE (P$PCB.OUT$->P$B.SUBLK$(0)->P$B.CODE);

  15881  2 000523   100003 473500                    LDP3    3,,PR1
         2 000524   300000 721100                    LXL1    0,,PR3
         2 000525   000004 101003                    CMPX1   4,DU
         2 000526   000530 602011 2                  TNC     s:15881+5,X1
         2 000527   000555 710000 2                  TRA     s:15890
         2 000530   000555 710000 2                  TRA     s:15890
         2 000531   000534 710000 2                  TRA     s:15883
         2 000532   000542 710000 2                  TRA     s:15885
         2 000533   000550 710000 2                  TRA     s:15887

      327    15882    3                     CASE (RE_FULL);

      328    15883    3                       B$JIT.JSLEV = %AZ_ALL#;

  15883  2 000534   000000 474400 xsym               LDP4    B$JIT$
         2 000535   400151 236100                    LDQ     105,,PR4
         2 000536   000012 376000 3                  ANQ     10
         2 000537   100000 276003                    ORQ     32768,DU
         2 000540   400151 756100                    STQ     105,,PR4
         2 000541   000555 710000 2                  TRA     s:15890

      329    15884    3                     CASE (RE_SUMMARY);

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:71   
      330    15885    3                       B$JIT.JSLEV = %AZ_SUMMARY#;

  15885  2 000542   000000 474400 xsym               LDP4    B$JIT$
         2 000543   400151 236100                    LDQ     105,,PR4
         2 000544   000012 376000 3                  ANQ     10
         2 000545   200000 276003                    ORQ     65536,DU
         2 000546   400151 756100                    STQ     105,,PR4
         2 000547   000555 710000 2                  TRA     s:15890

      331    15886    3                     CASE (RE_NONE);

      332    15887    3                       B$JIT.JSLEV = %AZ_NONE#;

  15887  2 000550   000000 474400 xsym               LDP4    B$JIT$
         2 000551   400151 236100                    LDQ     105,,PR4
         2 000552   000012 376000 3                  ANQ     10
         2 000553   300000 276003                    ORQ     98304,DU
         2 000554   400151 756100                    STQ     105,,PR4

      333    15888    3                     END;

      334    15889    2           END;

      335    15890    1     LOGOFF.CODE = %AZ$JOBEND;

  15890  2 000555   000002 235007                    LDA     2,DL
         2 000556   200216 755100                    STA     LOGOFF,,AUTO

      336    15891    1     LOGOFF.ERR = 0;

  15891  2 000557   200217 450100                    STZ     LOGOFF+1,,AUTO

      337    15892    1     LOGOFF.DCB1 = M$IBEX_NUM;

  15892  2 000560   000000 720000 xsym               LXL0    M$IBEX_NUM
         2 000561   200220 740100                    STX0    LOGOFF+2,,AUTO

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:72   
      338    15893    1     LOGOFF.DCB_LL = SEG$2.LLDCB#;

  15893  2 000562   000000 470400 xsym               LDP0    SEG2$
         2 000563   000000 721100                    LXL1    0,,PR0
         2 000564   200220 441100                    SXL1    LOGOFF+2,,AUTO

      339    15894    1     CALL AZA$LOGOFF(LOGOFF) ALTRET(CPA$BYE40);

  15894  2 000565   200216 631500                    EPPR1   LOGOFF,,AUTO
         2 000566   200266 451500                    STP1    @P$S+1,,AUTO
         2 000567   200266 630500                    EPPR0   @P$S+1,,AUTO
         2 000570   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000571   000000 701000 xent               TSX1    AZA$LOGOFF
         2 000572   000574 702000 2                  TSX2    CPA$BYE40

      340    15895    2     DO WHILE(%NO#);

  15895  2 000573   000606 710000 2                  TRA     CPA$BYE45

      341    15896    2   CPA$BYE40:
      342    15897    2         CALL CPC$WRITEMSGE(B$JIT.USRERR,B$JIT.USRDCB);

  15897  2 000574   000000 236000 xsym  CPA$BYE40    LDQ     B$JIT$
         2 000575   000013 036000 3                  ADLQ    11
         2 000576   200267 756100                    STQ     @P$S+2,,AUTO
         2 000577   000000 236000 xsym               LDQ     B$JIT$
         2 000600   000144 036003                    ADLQ    100,DU
         2 000601   200266 756100                    STQ     @P$S+1,,AUTO
         2 000602   200266 630500                    EPPR0   @P$S+1,,AUTO
         2 000603   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000604   000000 701000 xent               TSX1    CPC$WRITEMSGE
         2 000605   000000 011000                    NOP     0

      343    15898    2     END;

      344    15899    1   CPA$BYE45:
      345    15900        /*
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:73   
      346    15901        *****  Exit to last processor if one exists. Otherwise, delete the user.
      347    15902        *****  If last processor happens to be IBEX, also delete the user.
      348    15903        */
      349    15904    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  15904  2 000606   000000 470400 xsym  CPA$BYE45    LDP0    SEG2$
         2 000607   000166 471500                    LDP1    118,,PR0
         2 000610   000100 100400                    MLR     fill='000'O
         2 000611   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 000612   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

      350    15905    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

  15905  2 000613   000166 471500                    LDP1    118,,PR0
         2 000614   000004 235000 3                  LDA     4
         2 000615   200266 451500                    STP1    @P$S+1,,AUTO
         2 000616   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000617   000014 036003                    ADLQ    12,DU
         2 000620   100012 757100                    STAQ    10,,PR1

      351    15906    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      352    15907    1     IF ((B$JIT.CPFLAGS1 & %CP_LASTCPEXISTS#) AND NOT(B$JIT.CPFLAGS1

  15907  2 000621   000000 471400 xsym               LDP1    B$JIT$
         2 000622   100143 236100                    LDQ     99,,PR1
         2 000623   000026 376000 xsym               ANQ     B_VECTNIL+22
         2 000624   000701 600000 2                  TZE     s:15924
         2 000625   100143 236100                    LDQ     99,,PR1
         2 000626   000022 376000 xsym               ANQ     B_VECTNIL+18
         2 000627   000701 601000 2                  TNZ     s:15924

      353    15908    1          & %CP_LASTCP#))
      354    15909    1        THEN
      355    15910    2           DO;

      356    15911    2              IF SEG$2.FLAGS.USERS = %NO#  THEN

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:74   
  15911  2 000630   000000 234100                    SZN     0,,PR0
         2 000631   000636 604000 2                  TMI     s:15913

      357    15912    2                 CALL CPC$RDUSERS(M$IBEX_NUM,%IN#) ALTRET(CPA$BYE50);

  15912  2 000632   000014 630400 3                  EPPR0   12
         2 000633   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000634   000000 701000 xent               TSX1    CPC$RDUSERS
         2 000635   000710 702000 2                  TSX2    CPA$BYE50

      358    15913    2              TB$ = ADDR(SEG$2.USERS$ -> AS$USERS.LASTCPROC.NAME(B$JIT.MODE-1));

  15913  2 000636   000000 470400 xsym               LDP0    SEG2$
         2 000637   000152 471500                    LDP1    106,,PR0
         2 000640   000000 473400 xsym               LDP3    B$JIT$
         2 000641   300000 236100                    LDQ     0,,PR3
         2 000642   000035 772000                    QRL     29
         2 000643   000170 376007                    ANQ     120,DL
         2 000644   100155 634506                    EPPR4   109,QL,PR1
         2 000645   200007 454500                    STP4    TB$,,AUTO

      359    15914    2              IF TB$ -> TEXT$C ~= IBEXTEXTC  THEN

  15914  2 000646   000100 101500                    MRL     fill='000'O
         2 000647   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1
         2 000650   200266 000002                    ADSC9   @P$S+1,,AUTO             cn=0,n=2
         2 000651   200266 220100                    LDX0    @P$S+1,,AUTO
         2 000652   000001 621010                    EAX1    1,X0
         2 000653   000000 106540                    CMPC    fill='000'O
         2 000654   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
         2 000655   000026 000005 1                  ADSC9   IBEXTEXTC                cn=0,n=5
         2 000656   000675 600000 2                  TZE     s:15921

      360    15915    3                 DO;

      361    15916    3                    SEG$2.FPT_CPEXIT$ -> FPT$CPEXIT.NAME_ = VECTOR(SEG$2.USERS$

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:75   
  15916  2 000657   000166 471500                    LDP1    118,,PR0
         2 000660   000152 475500                    LDP5    106,,PR0
         2 000661   300000 236100                    LDQ     0,,PR3
         2 000662   000035 772000                    QRL     29
         2 000663   000170 376007                    ANQ     120,DL
         2 000664   000003 235000 3                  LDA     3
         2 000665   500155 636506                    EPPR6   109,QL,PR5
         2 000666   200266 456500                    STP6    @P$S+1,,AUTO
         2 000667   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000670   100000 757100                    STAQ    0,,PR1

      362    15917    3                         ->AS$USERS.LASTCPROC.NAME(B$JIT.MODE-1));
      363    15918    3                    B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_LASTCP#;

  15918  2 000671   300143 236100                    LDQ     99,,PR3
         2 000672   000022 276000 xsym               ORQ     B_VECTNIL+18
         2 000673   300143 756100                    STQ     99,,PR3

      364    15919    3                 END;

  15919  2 000674   000704 710000 2                  TRA     s:15925

      365    15920    2              ELSE
      366    15921    2                 SEG$2.FPT_CPEXIT$ -> FPT$CPEXIT.NAME_ = VECTOR(NIL);

  15921  2 000675   000166 471500                    LDP1    118,,PR0
         2 000676   000016 237000 3                  LDAQ    14
         2 000677   100000 757100                    STAQ    0,,PR1

      367    15922    2           END;

  15922  2 000700   000704 710000 2                  TRA     s:15925

      368    15923    1        ELSE
      369    15924    1           SEG$2.FPT_CPEXIT$ -> FPT$CPEXIT.NAME_ = VECTOR(NIL);

  15924  2 000701   000166 473500                    LDP3    118,,PR0
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:76   
         2 000702   000016 237000 3                  LDAQ    14
         2 000703   300000 757100                    STAQ    0,,PR3

      370    15925    1     CALL CPC$EXIT ALTRET(CPA$BYE50);

  15925  2 000704   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000705   000000 701000 xent               TSX1    CPC$EXIT
         2 000706   000710 702000 2                  TSX2    CPA$BYE50

      371    15926    1     RETURN;

  15926  2 000707   000000 702200 xent               TSX2  ! X66_ARET

      372    15927    1   CPA$BYE50:
      373    15928    1     ALTRETURN;

  15928  2 000710   000000 702200 xent  CPA$BYE50    TSX2  ! X66_AALT

      374    15929                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:77   
      375    15930        /**********************************************************************/
      376    15931        /*F*   NAME:   CPA$DEBUG
      377    15932               PURPOSE: To process debug type run unit calls
      378    15933               DESCRIPTION: CPA$DEBUG is called whenever the specified run unit
      379    15934                        in :SYS is a debugger or a RUM command is executed.
      380    15935        */
      381    15936        /*D*   NAME:   CPA$DEBUG
      382    15937               CALL:   CALL CPA$DEBUG(P$PCB)
      383    15938               INPUT:  BLK$= Pointer to parse output block
      384    15939               OUTPUT: M$CPEXIT PMME initialized with exit information
      385    15940                       CP_DELTA flag set in JIT
      386    15941               DESCRIPTION: If a user is at job step and the previous job step has
      387    15942                       been run down, the debugger is called as a processor. Otherwise it
      388    15943                       is called as a debugger to be associated with the current job
      389    15944                       step.
      390    15945        */
      391    15946    1   CPA$DEBUG:
      392    15947    1     ENTRY(P$PCB)   ALTRET;

  15947  2 000711   000000 700200 xent  CPA$DEBUG    TSX0  ! X66_AUTO_1
         2 000712   000274 000001                    ZERO    188,1

      393    15948    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  15948  2 000713   000000 470400 xsym               LDP0    SEG2$
         2 000714   000166 471500                    LDP1    118,,PR0
         2 000715   000100 100400                    MLR     fill='000'O
         2 000716   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 000717   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

      394    15949    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

  15949  2 000720   000166 471500                    LDP1    118,,PR0
         2 000721   000004 235000 3                  LDA     4
         2 000722   200266 451500                    STP1    @P$S+1,,AUTO
         2 000723   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000724   000014 036003                    ADLQ    12,DU
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:78   
         2 000725   100012 757100                    STAQ    10,,PR1

      395    15950    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      396    15951    1     BLK$ = P$PCB.OUT$;

  15951  2 000726   200003 471500                    LDP1    @P$PCB,,AUTO
         2 000727   100003 236100                    LDQ     3,,PR1
         2 000730   200004 756100                    STQ     BLK$,,AUTO

      397    15952    1     IF BLK$->P$S.CODE = RUMCMND

  15952  2 000731   200004 473500                    LDP3    BLK$,,AUTO
         2 000732   300000 720100                    LXL0    0,,PR3
         2 000733   000074 100003                    CMPX0   60,DU
         2 000734   000741 601000 2                  TNZ     s:15956

      398    15953    1        THEN
      399    15954    1           FID_NAME = DELTATXTC;

  15954  2 000735   000100 100400                    MLR     fill='000'O
         2 000736   000010 000006 1                  ADSC9   DELTATXTC                cn=0,n=6
         2 000737   200224 000040                    ADSC9   FID_NAME,,AUTO           cn=0,n=32
         2 000740   000753 710000 2                  TRA     s:15957

      400    15955    1        ELSE
      401    15956    1           FID_NAME = BLK$->P$B.SUBLK$(0)->P$B.SUBLK$(0)->TEXT$C;

  15956  2 000741   300003 474500                    LDP4    3,,PR3
         2 000742   400003 475500                    LDP5    3,,PR4
         2 000743   000100 101500                    MRL     fill='000'O
         2 000744   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         2 000745   200266 000002                    ADSC9   @P$S+1,,AUTO             cn=0,n=2
         2 000746   200266 220100                    LDX0    @P$S+1,,AUTO
         2 000747   000001 621010                    EAX1    1,X0
         2 000750   000100 100540                    MLR     fill='000'O
         2 000751   500000 000011                    ADSC9   0,,PR5                   cn=0,n=*X1
         2 000752   200224 000040                    ADSC9   FID_NAME,,AUTO           cn=0,n=32
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:79   

      402    15957    1     IF B$JIT.CPFLAGS1 & %CP_JSTEP#

  15957  2 000753   000000 474400 xsym               LDP4    B$JIT$
         2 000754   400143 236100                    LDQ     99,,PR4
         2 000755   000034 376000 1                  ANQ     E_ONEXIST+1
         2 000756   000770 600000 2                  TZE     s:15963

      403    15958    2     THEN DO;

      404    15959    2        SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(FID_NAME);   /*Calculator mode*/

  15959  2 000757   000166 475500                    LDP5    118,,PR0
         2 000760   000003 235000 3                  LDA     3
         2 000761   200266 452500                    STP2    @P$S+1,,AUTO
         2 000762   200266 236100                    LDQ     @P$S+1,,AUTO
         2 000763   000224 036003                    ADLQ    148,DU
         2 000764   500000 757100                    STAQ    0,,PR5

      405    15960    2        B$JIT.CCDISP = P$PCB.NCHARS;

  15960  2 000765   100011 720100                    LXL0    9,,PR1
         2 000766   400032 440100                    SXL0    26,,PR4

      406    15961    2        END;

  15961  2 000767   001001 710000 2                  TRA     s:15967

      407    15962    2     ELSE DO;                             /*User interrupted job step*/

      408    15963    2        B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DELTA#;

  15963  2 000770   400143 236100                    LDQ     99,,PR4
         2 000771   000003 276000 xsym               ORQ     B_VECTNIL+3
         2 000772   400143 756100                    STQ     99,,PR4

      409    15964    2        SEG$2.DBUG_NAME=FID_NAME;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:80   

  15964  2 000773   000100 100500                    MLR     fill='000'O
         2 000774   200224 000014                    ADSC9   FID_NAME,,AUTO           cn=0,n=12
         2 000775   000147 000014                    ADSC9   103,,PR0                 cn=0,n=12

      410    15965    2        SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.CONT#=%YES#; /*Or look at previous step*/

  15965  2 000776   000166 475500                    LDP5    118,,PR0
         2 000777   400000 236003                    LDQ     -131072,DU
         2 001000   500014 256100                    ORSQ    12,,PR5

      411    15966    2        END;

      412    15967    1     CALL RUEXIT ALTRET(CPA$DEBUG50);

  15967  2 001001   002621 701000 2                  TSX1    RUEXIT
         2 001002   001003 702000 2                  TSX2    CPA$DEBUG50

  15965  2 001003                       CPA$DEBUG50  null
      413    15968    1   CPA$DEBUG50:;
      414    15969    1     ALTRETURN;

  15969  2 001003   000000 702200 xent               TSX2  ! X66_AALT

      415    15970                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:81   
      416    15971        /**********************************************************************/
      417    15972        /*F*   NAME:   CPA$EDIT
      418    15973               PURPOSE: To process the E[DIT] and B[UILD] control commands.
      419    15974               DESCRIPTION: The EDIT processor is called to process the
      420    15975                       various EDIT commands.
      421    15976               REFERENCE: Programmers Reference Manual
      422    15977        */
      423    15978        /*D*   NAME:   CPA$EDIT
      424    15979               CALL:   CALL CPA$EDIT(BLK$)
      425    15980               INTERFACE: CPC$IQUIT,RUEXIT
      426    15981               INPUT:  BLK$ - pointer to parsed output
      427    15982                       CPFLAGS1 - implied quit flag set or reset
      428    15983               OUTPUT: M$CPEXIT fpt initialized with exit information
      429    15984               DESCRIPTION: If a user is at job step and the previous job
      430    15985                       step has been run down, the command is moved to CCBUF
      431    15986                       in the JIT and the EDIT processor called.
      432    15987        */
      433    15988        /************************************************************************/
      434    15989    1   CPA$EDIT:
      435    15990    1     ENTRY(P$PCB)   ALTRET;

  15990  2 001004   000000 700200 xent  CPA$EDIT     TSX0  ! X66_AUTO_1
         2 001005   000274 000001                    ZERO    188,1

      436    15991        /*
      437    15992           **** Set up exit fpt and exit to edit processor
      438    15993        */
      439    15994    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  15994  2 001006   000000 470400 xsym               LDP0    SEG2$
         2 001007   000166 471500                    LDP1    118,,PR0
         2 001010   000100 100400                    MLR     fill='000'O
         2 001011   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 001012   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

      440    15995    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:82   
  15995  2 001013   000166 471500                    LDP1    118,,PR0
         2 001014   000004 235000 3                  LDA     4
         2 001015   200266 451500                    STP1    @P$S+1,,AUTO
         2 001016   200266 236100                    LDQ     @P$S+1,,AUTO
         2 001017   000014 036003                    ADLQ    12,DU
         2 001020   100012 757100                    STAQ    10,,PR1

      441    15996    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      442    15997    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(EDITTXTC);

  15997  2 001021   000166 471500                    LDP1    118,,PR0
         2 001022   000020 237000 3                  LDAQ    16
         2 001023   100000 757100                    STAQ    0,,PR1

      443    15998    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);

  15998  2 001024   000166 471500                    LDP1    118,,PR0
         2 001025   000022 237000 3                  LDAQ    18
         2 001026   100002 757100                    STAQ    2,,PR1

      444    15999    1     B$JIT.CCDISP = P$PCB.NCHARS;

  15999  2 001027   200003 471500                    LDP1    @P$PCB,,AUTO
         2 001030   100011 720100                    LXL0    9,,PR1
         2 001031   000000 473400 xsym               LDP3    B$JIT$
         2 001032   300032 440100                    SXL0    26,,PR3

      445    16000    1     CALL RUEXIT ALTRET(EDIT50);

  16000  2 001033   002621 701000 2                  TSX1    RUEXIT
         2 001034   001035 702000 2                  TSX2    EDIT50

  15999  2 001035                       EDIT50       null
      446    16001    1   EDIT50: ;
      447    16002    1     ALTRETURN;

  16002  2 001035   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:83   

      448    16003                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:84   
      449    16004        /**********************************************************************/
      450    16005        /*F*   NAME:   CPA$EFT
      451    16006               PURPOSE: To process the FETCH,STOW,UNSTOW,UNFETCH,UNARCHIVE commands
      452    16007               DESCRIPTION: The EFT processor is called to process the
      453    16008                       various EFT commands.
      454    16009               REFERENCE: Programmers Reference Manual
      455    16010        */
      456    16011        /*D*   NAME:   CPA$EFT
      457    16012               CALL:   CALL CPA$EFT(BLK$)
      458    16013               INTERFACE: RUEXIT
      459    16014               INPUT:  BLK$ - pointer to parsed output
      460    16015               OUTPUT: M$CPEXIT fpt initialized with exit information
      461    16016               DESCRIPTION: If a user is at job step and the previous job
      462    16017                       step has been run down, the command is moved to CCBUF
      463    16018                       in the JIT and the EFT processor called.
      464    16019        */
      465    16020        /************************************************************************/
      466    16021    1   CPA$EFT:
      467    16022    1     ENTRY(P$PCB)   ALTRET;

  16022  2 001036   000000 700200 xent  CPA$EFT      TSX0  ! X66_AUTO_1
         2 001037   000274 000001                    ZERO    188,1

      468    16023        /*
      469    16024           **** Set up exit fpt and exit to eft processor
      470    16025        */
      471    16026    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  16026  2 001040   000000 470400 xsym               LDP0    SEG2$
         2 001041   000166 471500                    LDP1    118,,PR0
         2 001042   000100 100400                    MLR     fill='000'O
         2 001043   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 001044   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

      472    16027    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

  16027  2 001045   000166 471500                    LDP1    118,,PR0
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:85   
         2 001046   000004 235000 3                  LDA     4
         2 001047   200266 451500                    STP1    @P$S+1,,AUTO
         2 001050   200266 236100                    LDQ     @P$S+1,,AUTO
         2 001051   000014 036003                    ADLQ    12,DU
         2 001052   100012 757100                    STAQ    10,,PR1

      473    16028    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      474    16029    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(EFTTXTC);

  16029  2 001053   000166 471500                    LDP1    118,,PR0
         2 001054   000024 237000 3                  LDAQ    20
         2 001055   100000 757100                    STAQ    0,,PR1

      475    16030    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);

  16030  2 001056   000166 471500                    LDP1    118,,PR0
         2 001057   000022 237000 3                  LDAQ    18
         2 001060   100002 757100                    STAQ    2,,PR1

      476    16031    1     B$JIT.CCDISP = P$PCB.NCHARS;

  16031  2 001061   200003 471500                    LDP1    @P$PCB,,AUTO
         2 001062   100011 720100                    LXL0    9,,PR1
         2 001063   000000 473400 xsym               LDP3    B$JIT$
         2 001064   300032 440100                    SXL0    26,,PR3

      477    16032    1     CALL RUEXIT ALTRET(EFT50);

  16032  2 001065   002621 701000 2                  TSX1    RUEXIT
         2 001066   001067 702000 2                  TSX2    EFT50

  16031  2 001067                       EFT50        null
      478    16033    1   EFT50: ;
      479    16034    1     ALTRETURN;

  16034  2 001067   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:86   
      480    16035                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:87   
      481    16036        /***********************************************************************/
      482    16037        /*F*   NAME:   CPA$EXIT
      483    16038               PURPOSE: To process the EXIT command.
      484    16039               DESCRIPTION: IBEX will call X$FLUSH to flush the command stream
      485    16040                       for this XEQ file.  Only one file will be flushed rather
      486    16041                       than the whole command stream.
      487    16042               REFERENCE: Programmer's Reference Manual
      488    16043        */
      489    16044        /*D*   NAME:   CPA$EXIT
      490    16045               CALL:   CALL CPA$EXIT(P$PCB)
      491    16046               INTERFACE: X$FLUSH
      492    16047               INPUT:  none
      493    16048               OUTPUT: none
      494    16049               DESCRIPTION: IBEX calls X$FLUSH to flush the command stream for this
      495    16050                       XEQ file.  Only one XEQ file will be flushed rather than the
      496    16051                       whole command stream.
      497    16052        */
      498    16053        /***********************************************************************/
      499    16054    1   CPA$EXIT:
      500    16055    1     ENTRY(P$PCB)   ALTRET;

  16055  2 001070   000000 700200 xent  CPA$EXIT     TSX0  ! X66_AUTO_1
         2 001071   000274 000001                    ZERO    188,1

      501    16056
      502    16057    1     CALL M$XFLUSH(FPT_XFLUSH) ALTRET(EXIT_ALT) ;

  16057  2 001072   000004 630400 1                  EPPR0   FPT_XFLUSH
         2 001073   460007 713400                    CLIMB   alt,+24583
         2 001074   400000 401760                    pmme    nvectors=1
         2 001075   001077 702000 2                  TSX2    EXIT_ALT

      503    16058    1     RETURN ;

  16058  2 001076   000000 702200 xent               TSX2  ! X66_ARET

      504    16059
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:88   
      505    16060    1   EXIT_ALT:
      506    16061    1     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),511,B$TCB.ALT$->B$ALT.ERR) ;

  16061  2 001077   000000 470400 xsym  EXIT_ALT     LDP0    B$TCB$
         2 001100   000000 471500                    LDP1    0,,PR0
         2 001101   000000 236000 xsym               LDQ     SEG2$
         2 001102   000003 036003                    ADLQ    3,DU
         2 001103   200266 756100                    STQ     @P$S+1,,AUTO
         2 001104   100102 633500                    EPPR3   66,,PR1
         2 001105   200271 453500                    STP3    @P$S+4,,AUTO
         2 001106   000027 236000 3                  LDQ     23
         2 001107   200270 756100                    STQ     @P$S+3,,AUTO
         2 001110   200266 631500                    EPPR1   @P$S+1,,AUTO
         2 001111   200267 451500                    STP1    @P$S+2,,AUTO
         2 001112   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 001113   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001114   000000 701000 xent               TSX1    CXP$POSTERR
         2 001115   000000 011000                    NOP     0

      507    16062    1     ALTRETURN ;

  16062  2 001116   000000 702200 xent               TSX2  ! X66_AALT

      508    16063        %EJECT ;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:89   
      509    16064        /***********************************************************************/
      510    16065        /*F*   NAME:   CPA$FEPLINK
      511    16066               PURPOSE: To process the FEPLINK or FEPMAP commands.
      512    16067               DESCRIPTION: The FEPLINK processor is called to process the various
      513    16068                       commands.
      514    16069               REFERENCE: System Support Manual
      515    16070        */
      516    16071        /*D*   NAME:   CPA$FEPLINK
      517    16072               CALL:   CALL CPA$FEPLINK(P$PCB)
      518    16073               INTERFACE: RUEXIT
      519    16074               INPUT:  BLK$ - pointer to parsed output
      520    16075               OUTPUT: M$CPEXIT fpt initialized with exit information
      521    16076               DESCRIPTION: The command is moved into CCBUF in
      522    16077                       the JIT. The FEPLINK processor is called whenever the
      523    16078                       FEPLINK or FEPMAP command is encountered.
      524    16079        */
      525    16080        /***********************************************************************/
      526    16081    1   CPA$FEPLINK:
      527    16082    1     ENTRY(P$PCB)   ALTRET;

  16082  2 001117   000000 700200 xent  CPA$FEPLINK  TSX0  ! X66_AUTO_1
         2 001120   000274 000001                    ZERO    188,1

      528    16083        /*
      529    16084          ****     Set up exit fpt and exit to link processor
      530    16085        */
      531    16086    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  16086  2 001121   000000 470400 xsym               LDP0    SEG2$
         2 001122   000166 471500                    LDP1    118,,PR0
         2 001123   000100 100400                    MLR     fill='000'O
         2 001124   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 001125   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

      532    16087    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

  16087  2 001126   000166 471500                    LDP1    118,,PR0
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:90   
         2 001127   000004 235000 3                  LDA     4
         2 001130   200266 451500                    STP1    @P$S+1,,AUTO
         2 001131   200266 236100                    LDQ     @P$S+1,,AUTO
         2 001132   000014 036003                    ADLQ    12,DU
         2 001133   100012 757100                    STAQ    10,,PR1

      533    16088    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      534    16089    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(FEPLINKTXTC);

  16089  2 001134   000166 471500                    LDP1    118,,PR0
         2 001135   000030 237000 3                  LDAQ    24
         2 001136   100000 757100                    STAQ    0,,PR1

      535    16090    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);

  16090  2 001137   000166 471500                    LDP1    118,,PR0
         2 001140   000022 237000 3                  LDAQ    18
         2 001141   100002 757100                    STAQ    2,,PR1

      536    16091    1     B$JIT.CCDISP = P$PCB.NCHARS;

  16091  2 001142   200003 471500                    LDP1    @P$PCB,,AUTO
         2 001143   100011 720100                    LXL0    9,,PR1
         2 001144   000000 473400 xsym               LDP3    B$JIT$
         2 001145   300032 440100                    SXL0    26,,PR3

      537    16092    1     CALL RUEXIT ALTRET(FEPLINK50);

  16092  2 001146   002621 701000 2                  TSX1    RUEXIT
         2 001147   001150 702000 2                  TSX2    FEPLINK50

  16091  2 001150                       FEPLINK50    null
      538    16093    1   FEPLINK50: ;
      539    16094    1     ALTRETURN;

  16094  2 001150   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:91   
      540    16095                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:92   
      541    16096        /*F*   NAME: CPA$GET
      542    16097               PURPOSE: To process the GET command.
      543    16098        */
      544    16099    1   CPA$GET:
      545    16100    1     ENTRY(P$PCB)   ALTRET;

  16100  2 001151   000000 700200 xent  CPA$GET      TSX0  ! X66_AUTO_1
         2 001152   000274 000001                    ZERO    188,1

      546    16101    1     BLK$ = P$PCB.OUT$;

  16101  2 001153   200003 470500                    LDP0    @P$PCB,,AUTO
         2 001154   000003 236100                    LDQ     3,,PR0
         2 001155   200004 756100                    STQ     BLK$,,AUTO

      547    16102    1     CALL EXIT_SETUP(BLK$->P$B.SUBLK$(0)->P$S) ALTRET(E_GET_SETUP);

  16102  2 001156   200004 471500                    LDP1    BLK$,,AUTO
         2 001157   100003 473500                    LDP3    3,,PR1
         2 001160   200265 453500                    STP3    FID_RESULTS+11,,AUTO
         2 001161   002767 701000 2                  TSX1    EXIT_SETUP
         2 001162   001172 702000 2                  TSX2    E_GET_SETUP

      548    16103    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.GETFLG# = %YES#;

  16103  2 001163   000000 470400 xsym               LDP0    SEG2$
         2 001164   000166 471500                    LDP1    118,,PR0
         2 001165   020000 236003                    LDQ     8192,DU
         2 001166   100014 256100                    ORSQ    12,,PR1

      549    16104    1     CALL CPC$EXIT ALTRET(E_GET_C$EXIT);

  16104  2 001167   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001170   000000 701000 xent               TSX1    CPC$EXIT
         2 001171   001173 702000 2                  TSX2    E_GET_C$EXIT

      550    16105    1   E_GET_SETUP:
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:93   
      551    16106    1     ALTRETURN;

  16106  2 001172   000000 702200 xent  E_GET_SETUP  TSX2  ! X66_AALT

      552    16107    1   E_GET_C$EXIT:
      553    16108    1     ALTRETURN;

  16108  2 001173   000000 702200 xent  E_GET_C$EXIT TSX2  ! X66_AALT

      554    16109        %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:94   
      555    16110        /*F*   NAME:   CPA$GO
      556    16111               PURPOSE: To process the GO,CONTINUE and PROCEED commands.
      557    16112               DESCRIPTION: CPA$GO is called whenever a GO,CONTINUE or PROCEED
      558    16113                       command is encountered.
      559    16114               REFERENCE: Programmers Reference Manual
      560    16115        */
      561    16116        /*D*   NAME:   CPA$GO
      562    16117               INTERFACE: RUEXIT,CPC$WRITEMSGE
      563    16118               INPUT:  BLK$= Pointer to parse output block
      564    16119               OUTPUT: M$CPEXIT PMME initialized with exit information
      565    16120               DESCRIPTION: If not at job step, the continuation bit is set in the
      566    16121                       M$CPEXIT FPT and a call made to RUEXIT to continue execution
      567    16122                       of the interrupted run unit.
      568    16123                       If at job step, there is no run unit to return to. So a
      569    16124                       message is output to the user and a return made to read the
      570    16125                       next command.
      571    16126        */
      572    16127        /**********************************************************************/
      573    16128    1   CPA$GO:
      574    16129    1     ENTRY(P$PCB)   ALTRET;

  16129  2 001174   000000 700200 xent  CPA$GO       TSX0  ! X66_AUTO_1
         2 001175   000274 000001                    ZERO    188,1

      575    16130        /**/
      576    16131    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  16131  2 001176   000000 470400 xsym               LDP0    SEG2$
         2 001177   000166 471500                    LDP1    118,,PR0
         2 001200   000100 100400                    MLR     fill='000'O
         2 001201   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 001202   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

      577    16132    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

  16132  2 001203   000166 471500                    LDP1    118,,PR0
         2 001204   000004 235000 3                  LDA     4
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:95   
         2 001205   200266 451500                    STP1    @P$S+1,,AUTO
         2 001206   200266 236100                    LDQ     @P$S+1,,AUTO
         2 001207   000014 036003                    ADLQ    12,DU
         2 001210   100012 757100                    STAQ    10,,PR1

      578    16133    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      579    16134    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.CONT# = %YES#;

  16134  2 001211   000166 471500                    LDP1    118,,PR0
         2 001212   400000 236003                    LDQ     -131072,DU
         2 001213   100014 256100                    ORSQ    12,,PR1

      580    16135    1     CALL CPC$EXIT  ALTRET(E_GO_C$EXIT);

  16135  2 001214   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 001215   000000 701000 xent               TSX1    CPC$EXIT
         2 001216   001217 702000 2                  TSX2    E_GO_C$EXIT

      581    16136        /*
      582    16137        *****   Control has been returned to the interrupted process.
      583    16138        */
      584    16139    1   E_GO_C$EXIT:
      585    16140    1     ALTRETURN;

  16140  2 001217   000000 702200 xent  E_GO_C$EXIT  TSX2  ! X66_AALT

      586    16141                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:96   
      587    16142    1   CPA$JOB:
      588    16143    1     ENTRY(P$PCB)   ALTRET;

  16143  2 001220   000000 700200 xent  CPA$JOB      TSX0  ! X66_AUTO_1
         2 001221   000274 000001                    ZERO    188,1

      589    16144    1     RETURN;

  16144  2 001222   000000 702200 xent               TSX2  ! X66_ARET

      590    16145    1   CPA$JOIN:
      591    16146    1     ENTRY(P$PCB)   ALTRET;

  16146  2 001223   000000 700200 xent  CPA$JOIN     TSX0  ! X66_AUTO_1
         2 001224   000274 000001                    ZERO    188,1

      592    16147    1     RETURN;

  16147  2 001225   000000 702200 xent               TSX2  ! X66_ARET

      593    16148                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:97   
      594    16149        /***********************************************************************/
      595    16150        /*F*   NAME:   CPA$LINK
      596    16151               PURPOSE: To process the LINK,LOAD,LYNX,MAP and RUN commands.
      597    16152               DESCRIPTION: The LINK processor is called to process the various
      598    16153                       commands.
      599    16154               REFERENCE: Programmers Reference Manual
      600    16155        */
      601    16156        /*D*   NAME:   CPA$LINK
      602    16157               CALL:   CALL CPA$LINK(BLK$)
      603    16158               INTERFACE: RUEXIT
      604    16159               INPUT:  BLK$ - pointer to parsed output
      605    16160               OUTPUT: M$CPEXIT fpt initialized with exit information
      606    16161               DESCRIPTION: If a user is at job step and the previous job
      607    16162                       step has been run down, the command is moved to CCBUF in
      608    16163                       the JIT. The LINK processor is called whenever the LINK,
      609    16164                       LOAD,LYNX,MAP or RUN command is encountered.
      610    16165        */
      611    16166        /***********************************************************************/
      612    16167    1   CPA$LINK:
      613    16168    1     ENTRY(P$PCB)   ALTRET;

  16168  2 001226   000000 700200 xent  CPA$LINK     TSX0  ! X66_AUTO_1
         2 001227   000274 000001                    ZERO    188,1

      614    16169        /*
      615    16170          ****     Set up exit fpt and exit to link processor
      616    16171        */
      617    16172    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  16172  2 001230   000000 470400 xsym               LDP0    SEG2$
         2 001231   000166 471500                    LDP1    118,,PR0
         2 001232   000100 100400                    MLR     fill='000'O
         2 001233   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 001234   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

      618    16173    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:98   
  16173  2 001235   000166 471500                    LDP1    118,,PR0
         2 001236   000004 235000 3                  LDA     4
         2 001237   200266 451500                    STP1    @P$S+1,,AUTO
         2 001240   200266 236100                    LDQ     @P$S+1,,AUTO
         2 001241   000014 036003                    ADLQ    12,DU
         2 001242   100012 757100                    STAQ    10,,PR1

      619    16174    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      620    16175    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(LINKTXTC);

  16175  2 001243   000166 471500                    LDP1    118,,PR0
         2 001244   000032 237000 3                  LDAQ    26
         2 001245   100000 757100                    STAQ    0,,PR1

      621    16176    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);

  16176  2 001246   000166 471500                    LDP1    118,,PR0
         2 001247   000022 237000 3                  LDAQ    18
         2 001250   100002 757100                    STAQ    2,,PR1

      622    16177    1     B$JIT.CCDISP = P$PCB.NCHARS;

  16177  2 001251   200003 471500                    LDP1    @P$PCB,,AUTO
         2 001252   100011 720100                    LXL0    9,,PR1
         2 001253   000000 473400 xsym               LDP3    B$JIT$
         2 001254   300032 440100                    SXL0    26,,PR3

      623    16178    1     CALL RUEXIT ALTRET(LINK50);

  16178  2 001255   002621 701000 2                  TSX1    RUEXIT
         2 001256   001257 702000 2                  TSX2    LINK50

  16177  2 001257                       LINK50       null
      624    16179    1   LINK50: ;
      625    16180    1     ALTRETURN;

  16180  2 001257   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:99   

      626    16181                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:100  
      627    16182        /**********************************************************************/
      628    16183        /*F*   NAME:   CPA$PCL
      629    16184               PURPOSE: To process the C[OPY],D[ELETE] and L control commands.
      630    16185               DESCRIPTION: The PCL processor is called to process the various
      631    16186                       PCL commands.
      632    16187               REFERENCE: Programmers Reference Manual
      633    16188        */
      634    16189        /*D*   NAME:   CPA$PCL
      635    16190               CALL:   CALL CPA$PCL(BLK$)
      636    16191               INTERFACE: CPC$IQUIT,RUEXIT
      637    16192               INPUT:  BLK$ - pointer to parsed output
      638    16193                       CPFLAGS1 - implied quit flag set or reset
      639    16194               OUTPUT: M$CPEXIT fpt initialized with exit information
      640    16195               DESCRIPTION: If a user is at job step and the previous job step
      641    16196                       has been run down, the command is moved to CCBUF in the
      642    16197                       JIT and the PCL processor called.
      643    16198        */
      644    16199        /**********************************************************************/
      645    16200    1   CPA$PCL:
      646    16201    1     ENTRY(P$PCB)   ALTRET;

  16201  2 001260   000000 700200 xent  CPA$PCL      TSX0  ! X66_AUTO_1
         2 001261   000274 000001                    ZERO    188,1

      647    16202        /*
      648    16203          **** Set up exit fpt and exit to pcl processor
      649    16204        */
      650    16205    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  16205  2 001262   000000 470400 xsym               LDP0    SEG2$
         2 001263   000166 471500                    LDP1    118,,PR0
         2 001264   000100 100400                    MLR     fill='000'O
         2 001265   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 001266   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

      651    16206    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:101  
  16206  2 001267   000166 471500                    LDP1    118,,PR0
         2 001270   000004 235000 3                  LDA     4
         2 001271   200266 451500                    STP1    @P$S+1,,AUTO
         2 001272   200266 236100                    LDQ     @P$S+1,,AUTO
         2 001273   000014 036003                    ADLQ    12,DU
         2 001274   100012 757100                    STAQ    10,,PR1

      652    16207    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      653    16208    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(PCLTXTC);

  16208  2 001275   000166 471500                    LDP1    118,,PR0
         2 001276   000034 237000 3                  LDAQ    28
         2 001277   100000 757100                    STAQ    0,,PR1

      654    16209    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);

  16209  2 001300   000166 471500                    LDP1    118,,PR0
         2 001301   000022 237000 3                  LDAQ    18
         2 001302   100002 757100                    STAQ    2,,PR1

      655    16210    1     B$JIT.CCDISP = P$PCB.NCHARS;

  16210  2 001303   200003 471500                    LDP1    @P$PCB,,AUTO
         2 001304   100011 720100                    LXL0    9,,PR1
         2 001305   000000 473400 xsym               LDP3    B$JIT$
         2 001306   300032 440100                    SXL0    26,,PR3

      656    16211    1     CALL RUEXIT ALTRET(PCL50);

  16211  2 001307   002621 701000 2                  TSX1    RUEXIT
         2 001310   001311 702000 2                  TSX2    PCL50

  16210  2 001311                       PCL50        null
      657    16212    1   PCL50: ;
      658    16213    1     ALTRETURN;

  16213  2 001311   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:102  

      659    16214                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:103  
      660    16215        /***********************************************************************/
      661    16216        /*F*   NAME:   CPA$PMD
      662    16217               PURPOSE: To process the PMD control command
      663    16218               DESCRIPTION: The DELTA procesor is called to process the PMD
      664    16219                       command.
      665    16220               REFERENCE: Programmers Reference Manual
      666    16221        */
      667    16222        /*D*   NAME:   CPA$PMD
      668    16223               CALL:   CALL CPA$PMD(BLK$)
      669    16224               INTERFACE: RUEXIT
      670    16225               INPUT:  BLK$ - pointer to parsed output
      671    16226               OUTPUT: M$CPEXIT fpt initialized with exit information
      672    16227               DESCRIPTION: DELTA is called as a debugger for the purpose of
      673    16228                       processing the PMD command.
      674    16229        */
      675    16230        /***********************************************************************/
      676    16231    1   CPA$PMD:
      677    16232    1     ENTRY(P$PCB)   ALTRET;

  16232  2 001312   000000 700200 xent  CPA$PMD      TSX0  ! X66_AUTO_1
         2 001313   000274 000001                    ZERO    188,1

      678    16233    1     IF B$JIT.USRRNST = %RS_EXIT#

  16233  2 001314   000000 470400 xsym               LDP0    B$JIT$
         2 001315   000145 236100                    LDQ     101,,PR0
         2 001316   777000 316007                    CANQ    -512,DL
         2 001317   001321 601000 2                  TNZ     s:16240

      679    16234
      680    16235    1        THEN
      681    16236    1           RETURN;

  16236  2 001320   000000 702200 xent               TSX2  ! X66_ARET

      682    16237        /*
      683    16238          ****     Set up cpexit fpt and exit to delta processor
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:104  
      684    16239        */
      685    16240    1     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DELTA#;

  16240  2 001321   000143 236100                    LDQ     99,,PR0
         2 001322   000003 276000 xsym               ORQ     B_VECTNIL+3
         2 001323   000143 756100                    STQ     99,,PR0

      686    16241    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  16241  2 001324   000000 471400 xsym               LDP1    SEG2$
         2 001325   100166 473500                    LDP3    118,,PR1
         2 001326   000100 100400                    MLR     fill='000'O
         2 001327   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 001330   300000 000070                    ADSC9   0,,PR3                   cn=0,n=56

      687    16242    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

  16242  2 001331   100166 473500                    LDP3    118,,PR1
         2 001332   000004 235000 3                  LDA     4
         2 001333   200266 453500                    STP3    @P$S+1,,AUTO
         2 001334   200266 236100                    LDQ     @P$S+1,,AUTO
         2 001335   000014 036003                    ADLQ    12,DU
         2 001336   300012 757100                    STAQ    10,,PR3

      688    16243    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
      689    16244    1     SEG$2.DBUG_NAME=DELTATXTC;

  16244  2 001337   000100 100400                    MLR     fill='000'O
         2 001340   000010 000006 1                  ADSC9   DELTATXTC                cn=0,n=6
         2 001341   100147 000014                    ADSC9   103,,PR1                 cn=0,n=12

      690    16245    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.CONT#=%YES#;

  16245  2 001342   100166 473500                    LDP3    118,,PR1
         2 001343   400000 236003                    LDQ     -131072,DU
         2 001344   300014 256100                    ORSQ    12,,PR3

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:105  
      691    16246    1     B$JIT.CCDISP = P$PCB.NCHARS;

  16246  2 001345   200003 473500                    LDP3    @P$PCB,,AUTO
         2 001346   300011 720100                    LXL0    9,,PR3
         2 001347   000032 440100                    SXL0    26,,PR0

      692    16247    1     CALL RUEXIT ALTRET(PMD50);

  16247  2 001350   002621 701000 2                  TSX1    RUEXIT
         2 001351   001352 702000 2                  TSX2    PMD50

  16246  2 001352                       PMD50        null
      693    16248    1   PMD50: ;
      694    16249    1     ALTRETURN;

  16249  2 001352   000000 702200 xent               TSX2  ! X66_AALT

      695    16250                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:106  
      696    16251        /**********************************************************************/
      697    16252        /*F*   NAME:   CPA$RUNIT
      698    16253               PURPOSE: To process all unrecognized run units
      699    16254               DESCRIPTION: CPA$RUNIT is called whenever a unrecognized run unit is
      700    16255                       encountered. The run unit, consisting of a fid, is scanned
      701    16256                       and an FPT initialized with the exit information. If an
      702    16257                       account is unspecified, it's default is established. Parameters
      703    16258                       are scanned and DCB assignments generated for the run unit.
      704    16259                       CCDISP is set in the JIT to inform processors of the
      705    16260                       first character position of options specified on the
      706    16261                       command.
      707    16262               REFERENCE: Programmers Reference Manual
      708    16263        */
      709    16264        /*D*   NAME:   CPA$RUNIT
      710    16265               PURPOSE: To process an unrecognized run unit specified in the
      711    16266                       command processor buffer(CPBUFF).
      712    16267               CALL:   CALL CPA$RUNIT(P$PCB)
      713    16268               INTERFACE: RUEXIT,CXC$WRITEAM,CXB$BLDAM,CPE$GENRUAM
      714    16269               INPUT:  P$PCB - parse block
      715    16270               OUTPUT: CPEXIT FPT initialized with run unit name, account, password
      716    16271                       and pack set identification
      717    16272                       assign merge records generated for assignments
      718    16273                         B$JIT.CCDISP - index to ist character of option i.e. '(option,..)'
      719    16274                                      character immediately following left paren.
      720    16275                                    - set to CCARS if no options
      721    16276               DESCRIPTION: The run unit specified in CPBUFF is broken up with the
      722    16277                       the FPT initialized with the specified name, account,
      723    16278                       password and pack set id. If the run unit specified is
      724    16279                       followed by a period, the user's account is utilized as the
      725    16280                       the default account. If the run unit specified isn't followed
      726    16281                       by a period, the :sys account is utilized as the default
      727    16282                       account. DCB assignments are made for the parameters
      728    16283                       specified and written to the assign-merge record. If an
      729    16284                       error is encountered, the appropriate error message is output
      730    16285                       and the ALTRET taken. tThe specified run unit is put into
      731    16286                       execution by calling a routine which executes a M$CPEXIT PMME.
      732    16287                       If any errors occur, source and update assignments are
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:107  
      733    16288                         reset. Object and list assignments and file extension bits
      734    16289                         are reset only if assignments were made for the respective.
      735    16290                         dcbs on the command.
      736    16291        */
      737    16292        /**********************************************************************/
      738    16293    1   CPA$RUNIT:
      739    16294    1     ENTRY(P$PCB)   ALTRET;

  16294  2 001353   000000 700200 xent  CPA$RUNIT    TSX0  ! X66_AUTO_1
         2 001354   000274 000001                    ZERO    188,1

      740    16295        /*
      741    16296             *****    Begin procedure
      742    16297        */
      743    16298    1     BLK$ = P$PCB.OUT$;

  16298  2 001355   200003 470500                    LDP0    @P$PCB,,AUTO
         2 001356   000003 236100                    LDQ     3,,PR0
         2 001357   200004 756100                    STQ     BLK$,,AUTO

      744    16299        /*  ****   Save flags for restoration in case problem occurs during
      745    16300                   command processing                    */
      746    16301    1     PRFLAGS.OU = %NO#;

  16301  2 001360   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 001361   200013 356100                    ANSQ    PRFLAGS,,AUTO

      747    16302    1     PRFLAGS.LS = %NO#;

  16302  2 001362   000036 236000 3                  LDQ     30
         2 001363   200013 356100                    ANSQ    PRFLAGS,,AUTO

      748    16303    1     B$JIT.CCDISP = P$PCB.NCHARS;

  16303  2 001364   000011 720100                    LXL0    9,,PR0
         2 001365   000000 471400 xsym               LDP1    B$JIT$
         2 001366   100032 440100                    SXL0    26,,PR1
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:108  

      749    16304    1     I=1;

  16304  2 001367   000001 235007                    LDA     1,DL
         2 001370   200010 755100                    STA     I,,AUTO

      750    16305    2   RUNIT10: DO WHILE(I<BLK$->P$B.NSUBLKS);

  16305  2 001371   200004 473500       RUNIT10      LDP3    BLK$,,AUTO
         2 001372   300001 236100                    LDQ     1,,PR3
         2 001373   000022 772000                    QRL     18
         2 001374   200010 116100                    CMPQ    I,,AUTO
         2 001375   001726 604400 2                  TMOZ    s:16410

      751    16306    2        TA$=BLK$->P$B.SUBLK$(I); /*Bld ptr to sublk*/

  16306  2 001376   200004 470500                    LDP0    BLK$,,AUTO
         2 001377   200010 720100                    LXL0    I,,AUTO
         2 001400   000003 236110                    LDQ     3,X0,PR0
         2 001401   200006 756100                    STQ     TA$,,AUTO

      752    16307    2        CPOS = TA$ -> P$B.CPOS;

  16307  2 001402   200006 471500                    LDP1    TA$,,AUTO
         2 001403   100002 235100                    LDA     2,,PR1
         2 001404   200012 755100                    STA     CPOS,,AUTO

      753    16308    2        CPSL_PARAM = %NO# ;

  16308  2 001405   000100 100400                    MLR     fill='000'O
         2 001406   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 001407   200017 000024                    ADSC9   CPSL_PARAM,,AUTO         cn=0,n=20

      754    16309    3   RUNIT15: DO CASE(TA$->P$B.CODE);

  16309  2 001410   100000 721100       RUNIT15      LXL1    0,,PR1
         2 001411   000013 101003                    CMPX1   11,DU
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:109  
         2 001412   001414 602011 2                  TNC     RUNIT15+4,X1
         2 001413   001720 710000 2                  TRA     s:16405
         2 001414   001720 710000 2                  TRA     s:16405
         2 001415   001720 710000 2                  TRA     s:16405
         2 001416   001427 710000 2                  TRA     s:16313
         2 001417   001522 710000 2                  TRA     s:16342
         2 001420   001615 710000 2                  TRA     s:16372
         2 001421   001615 710000 2                  TRA     s:16372
         2 001422   001615 710000 2                  TRA     s:16372
         2 001423   001617 710000 2                  TRA     s:16376
         2 001424   001653 710000 2                  TRA     s:16386
         2 001425   001705 710000 2                  TRA     s:16396
         2 001426   001711 710000 2                  TRA     s:16401

      755    16310                                                                                    /**/
      756    16311    3         CASE(SOURCEOPT);

      757    16312        /* ****        Build a/m record for source input */
      758    16313    3           FID$=TA$->P$B.SUBLK$(0);   /*Ptr to fid*/

  16313  2 001427   100003 236100                    LDQ     3,,PR1
         2 001430   200005 756100                    STQ     FID$,,AUTO

      759    16314    3           CPSL_PARAM = %NO# ;

  16314  2 001431   000100 100400                    MLR     fill='000'O
         2 001432   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 001433   200017 000024                    ADSC9   CPSL_PARAM,,AUTO         cn=0,n=20

      760    16315    3           CALL CXB$BLDAM(BLK$,FID$,SEG$2.GETCMD$->GET$CMD,CPSL_PARAM) ;

  16315  2 001434   000000 473400 xsym               LDP3    SEG2$
         2 001435   300173 474500                    LDP4    123,,PR3
         2 001436   200017 635500                    EPPR5   CPSL_PARAM,,AUTO
         2 001437   200271 455500                    STP5    @P$S+4,,AUTO
         2 001440   200270 454500                    STP4    @P$S+3,,AUTO
         2 001441   200005 636500                    EPPR6   FID$,,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:110  
         2 001442   200267 456500                    STP6    @P$S+2,,AUTO
         2 001443   200004 637500                    EPPR7   BLK$,,AUTO
         2 001444   200266 457500                    STP7    @P$S+1,,AUTO
         2 001445   200266 630500                    EPPR0   @P$S+1,,AUTO
         2 001446   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001447   000000 701000 xent               TSX1    CXB$BLDAM
         2 001450   000000 011000                    NOP     0

      761    16316    3           IF CPSL_PARAM.ERRCODE ~= %NO#

  16316  2 001451   200021 235100                    LDA     CPSL_PARAM+2,,AUTO
         2 001452   001464 600000 2                  TZE     s:16326

      762    16317    3             THEN
      763    16318    3               IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  16318  2 001453   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 001454   100000 316003                    CANQ    32768,DU
         2 001455   002236 601000 2                  TNZ     RUNIT80

      764    16319    3                 THEN
      765    16320    3                   GOTO RUNIT80 ;
      766    16321    3                 ELSE
      767    16322    4                   DO ;

      768    16323    4                     B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;

  16323  2 001456   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 001457   000002 736000                    QLS     2
         2 001460   400000 376003                    ANQ     -131072,DU
         2 001461   000000 470400 xsym               LDP0    B$JIT$
         2 001462   000144 756100                    STQ     100,,PR0

      769    16324    4                     GOTO RUNIT75 ;

  16324  2 001463   002002 710000 2                  TRA     RUNIT75

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:111  
      770    16325    4                   END ;
      771    16326    3           AMR$REC$.V.FUN#=%IN#;

  16326  2 001464   000000 470400 xsym               LDP0    SEG3$
         2 001465   002000 236007                    LDQ     1024,DL
         2 001466   000023 552110                    STBQ    19,'10'O,PR0

      772    16327    3           CALL CXC$WRITEAM(ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;

  16327  2 001467   000037 236000 3                  LDQ     31
         2 001470   200266 756100                    STQ     @P$S+1,,AUTO
         2 001471   200017 631500                    EPPR1   CPSL_PARAM,,AUTO
         2 001472   200271 451500                    STP1    @P$S+4,,AUTO
         2 001473   000040 236000 3                  LDQ     32
         2 001474   200270 756100                    STQ     @P$S+3,,AUTO
         2 001475   200266 633500                    EPPR3   @P$S+1,,AUTO
         2 001476   200267 453500                    STP3    @P$S+2,,AUTO
         2 001477   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 001500   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001501   000000 701000 xent               TSX1    CXC$WRITEAM
         2 001502   000000 011000                    NOP     0

      773    16328    3           IF CPSL_PARAM.ERRCODE ~= %NO#

  16328  2 001503   200021 235100                    LDA     CPSL_PARAM+2,,AUTO
         2 001504   001516 600000 2                  TZE     s:16338

      774    16329    3             THEN
      775    16330    3               IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  16330  2 001505   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 001506   100000 316003                    CANQ    32768,DU
         2 001507   002236 601000 2                  TNZ     RUNIT80

      776    16331    3                 THEN
      777    16332    3                   GOTO RUNIT80 ;
      778    16333    3                 ELSE
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:112  
      779    16334    4                   DO ;

      780    16335    4                     B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;

  16335  2 001510   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 001511   000002 736000                    QLS     2
         2 001512   400000 376003                    ANQ     -131072,DU
         2 001513   000000 470400 xsym               LDP0    B$JIT$
         2 001514   000144 756100                    STQ     100,,PR0

      781    16336    4                     GOTO RUNIT75 ;

  16336  2 001515   002002 710000 2                  TRA     RUNIT75

      782    16337    4                   END ;
      783    16338    3           B$JIT.PRFLAGS.SI=%YES#; /*Source assigned*/

  16338  2 001516   000000 470400 xsym               LDP0    B$JIT$
         2 001517   400000 236003                    LDQ     -131072,DU
         2 001520   000030 256100                    ORSQ    24,,PR0
         2 001521   001720 710000 2                  TRA     s:16405

      784    16339                                                                                    /**/
      785    16340    3         CASE(UPDATEOPT);

      786    16341        /* ****        Build a/m record for update input */
      787    16342    3           FID$=TA$->P$B.SUBLK$(0);   /*Ptr to fid*/

  16342  2 001522   100003 236100                    LDQ     3,,PR1
         2 001523   200005 756100                    STQ     FID$,,AUTO

      788    16343    3           CPSL_PARAM = %NO# ;

  16343  2 001524   000100 100400                    MLR     fill='000'O
         2 001525   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 001526   200017 000024                    ADSC9   CPSL_PARAM,,AUTO         cn=0,n=20

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:113  
      789    16344    3           CALL CXB$BLDAM(BLK$,FID$,SEG$2.GETCMD$->GET$CMD,CPSL_PARAM) ;

  16344  2 001527   000000 473400 xsym               LDP3    SEG2$
         2 001530   300173 474500                    LDP4    123,,PR3
         2 001531   200017 635500                    EPPR5   CPSL_PARAM,,AUTO
         2 001532   200271 455500                    STP5    @P$S+4,,AUTO
         2 001533   200270 454500                    STP4    @P$S+3,,AUTO
         2 001534   200005 636500                    EPPR6   FID$,,AUTO
         2 001535   200267 456500                    STP6    @P$S+2,,AUTO
         2 001536   200004 637500                    EPPR7   BLK$,,AUTO
         2 001537   200266 457500                    STP7    @P$S+1,,AUTO
         2 001540   200266 630500                    EPPR0   @P$S+1,,AUTO
         2 001541   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 001542   000000 701000 xent               TSX1    CXB$BLDAM
         2 001543   000000 011000                    NOP     0

      790    16345    3           IF CPSL_PARAM.ERRCODE ~= %NO#

  16345  2 001544   200021 235100                    LDA     CPSL_PARAM+2,,AUTO
         2 001545   001557 600000 2                  TZE     s:16355

      791    16346    3             THEN
      792    16347    3               IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  16347  2 001546   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 001547   100000 316003                    CANQ    32768,DU
         2 001550   002236 601000 2                  TNZ     RUNIT80

      793    16348    3                 THEN
      794    16349    3                   GOTO RUNIT80 ;
      795    16350    3                 ELSE
      796    16351    4                   DO ;

      797    16352    4                     B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;

  16352  2 001551   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 001552   000002 736000                    QLS     2
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:114  
         2 001553   400000 376003                    ANQ     -131072,DU
         2 001554   000000 470400 xsym               LDP0    B$JIT$
         2 001555   000144 756100                    STQ     100,,PR0

      798    16353    4                     GOTO RUNIT75 ;

  16353  2 001556   002002 710000 2                  TRA     RUNIT75

      799    16354    4                   END ;
      800    16355    3           AMR$REC$.V.FUN#=%IN#;

  16355  2 001557   000000 470400 xsym               LDP0    SEG3$
         2 001560   002000 236007                    LDQ     1024,DL
         2 001561   000023 552110                    STBQ    19,'10'O,PR0

      801    16356    3           CALL CXC$WRITEAM(ADDR(UPDATEDCB),M$IBEX1_NUM,CPSL_PARAM) ;

  16356  2 001562   000041 236000 3                  LDQ     33
         2 001563   200266 756100                    STQ     @P$S+1,,AUTO
         2 001564   200017 631500                    EPPR1   CPSL_PARAM,,AUTO
         2 001565   200271 451500                    STP1    @P$S+4,,AUTO
         2 001566   000040 236000 3                  LDQ     32
         2 001567   200270 756100                    STQ     @P$S+3,,AUTO
         2 001570   200266 633500                    EPPR3   @P$S+1,,AUTO
         2 001571   200267 453500                    STP3    @P$S+2,,AUTO
         2 001572   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 001573   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001574   000000 701000 xent               TSX1    CXC$WRITEAM
         2 001575   000000 011000                    NOP     0

      802    16357    3           IF CPSL_PARAM.ERRCODE ~= %NO#

  16357  2 001576   200021 235100                    LDA     CPSL_PARAM+2,,AUTO
         2 001577   001611 600000 2                  TZE     s:16367

      803    16358    3             THEN
      804    16359    3               IF CPSL_PARAM.FLAGS.REPORTED_TO_USER
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:115  

  16359  2 001600   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 001601   100000 316003                    CANQ    32768,DU
         2 001602   002236 601000 2                  TNZ     RUNIT80

      805    16360    3                 THEN
      806    16361    3                   GOTO RUNIT80 ;
      807    16362    3                 ELSE
      808    16363    4                   DO ;

      809    16364    4                     B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;

  16364  2 001603   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 001604   000002 736000                    QLS     2
         2 001605   400000 376003                    ANQ     -131072,DU
         2 001606   000000 470400 xsym               LDP0    B$JIT$
         2 001607   000144 756100                    STQ     100,,PR0

      810    16365    4                     GOTO RUNIT75 ;

  16365  2 001610   002002 710000 2                  TRA     RUNIT75

      811    16366    4                   END ;
      812    16367    3           B$JIT.PRFLAGS.UI=%YES#; /*Update assigned*/

  16367  2 001611   000000 470400 xsym               LDP0    B$JIT$
         2 001612   200000 236003                    LDQ     65536,DU
         2 001613   000030 256100                    ORSQ    24,,PR0
         2 001614   001720 710000 2                  TRA     s:16405

      813    16368                                                                                    /**/
      814    16369    3         CASE(ONOPT,OVEROPT,INTOOPT);

      815    16370        /* ****        Save ptr to keyword ... Need subsequently for creating
      816    16371                       object and list assignments       */
      817    16372    3           TB$=TA$;

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:116  
  16372  2 001615   200007 756100                    STQ     TB$,,AUTO
         2 001616   001720 710000 2                  TRA     s:16405

      818    16373                                                                                    /**/
      819    16374    3         CASE(OBJECTOPT);

      820    16375        /* ****        Build a/m record for object output */
      821    16376    3           FID$=TA$->P$B.SUBLK$(0);

  16376  2 001617   100003 236100                    LDQ     3,,PR1
         2 001620   200005 756100                    STQ     FID$,,AUTO

      822    16377    3           CALL CPE$GENRUAM(BLK$,TB$,FID$,ADDR(OBJECTDCB),%NO#) ALTRET(RUNIT75);

  16377  2 001621   000042 236000 3                  LDQ     34
         2 001622   200266 756100                    STQ     @P$S+1,,AUTO
         2 001623   000043 236000 3                  LDQ     35
         2 001624   200273 756100                    STQ     @P$S+6,,AUTO
         2 001625   200266 633500                    EPPR3   @P$S+1,,AUTO
         2 001626   200272 453500                    STP3    @P$S+5,,AUTO
         2 001627   200005 634500                    EPPR4   FID$,,AUTO
         2 001630   200271 454500                    STP4    @P$S+4,,AUTO
         2 001631   200007 635500                    EPPR5   TB$,,AUTO
         2 001632   200270 455500                    STP5    @P$S+3,,AUTO
         2 001633   200004 636500                    EPPR6   BLK$,,AUTO
         2 001634   200267 456500                    STP6    @P$S+2,,AUTO
         2 001635   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 001636   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 001637   000000 701000 xent               TSX1    CPE$GENRUAM
         2 001640   002002 702000 2                  TSX2    RUNIT75

      823    16378    3           B$JIT.PRFLAGS.OU=%YES#; /*Object assigned*/

  16378  2 001641   000000 470400 xsym               LDP0    B$JIT$
         2 001642   100000 236003                    LDQ     32768,DU
         2 001643   000030 256100                    ORSQ    24,,PR0

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:117  
      824    16379    3           B$JIT.PRFLAGS.OUTPUT=%YES#; /*Set object cmnd flag*/

  16379  2 001644   004000 236003                    LDQ     2048,DU
         2 001645   000030 256100                    ORSQ    24,,PR0

      825    16380        /* ****        Reset file extension for     object */
      826    16381    3           B$JIT.FEXT(FEXT_OBJECT)=%NO#;

  16381  2 001646   000044 236000 3                  LDQ     36
         2 001647   000220 356100                    ANSQ    144,,PR0

      827    16382    3           PRFLAGS.OU = %YES#;

  16382  2 001650   400000 236003                    LDQ     -131072,DU
         2 001651   200013 256100                    ORSQ    PRFLAGS,,AUTO
         2 001652   001720 710000 2                  TRA     s:16405

      828    16383                                                                                    /**/
      829    16384    3         CASE(LISTOPT);

      830    16385        /* ****        Build a/m record for list output  */
      831    16386    3           FID$=TA$->P$B.SUBLK$(0);

  16386  2 001653   100003 236100                    LDQ     3,,PR1
         2 001654   200005 756100                    STQ     FID$,,AUTO

      832    16387    3           CALL CPE$GENRUAM(BLK$,TB$,FID$,ADDR(LISTDCB),%NO#) ALTRET(RUNIT75);

  16387  2 001655   000045 236000 3                  LDQ     37
         2 001656   200266 756100                    STQ     @P$S+1,,AUTO
         2 001657   000043 236000 3                  LDQ     35
         2 001660   200273 756100                    STQ     @P$S+6,,AUTO
         2 001661   200266 633500                    EPPR3   @P$S+1,,AUTO
         2 001662   200272 453500                    STP3    @P$S+5,,AUTO
         2 001663   200005 634500                    EPPR4   FID$,,AUTO
         2 001664   200271 454500                    STP4    @P$S+4,,AUTO
         2 001665   200007 635500                    EPPR5   TB$,,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:118  
         2 001666   200270 455500                    STP5    @P$S+3,,AUTO
         2 001667   200004 636500                    EPPR6   BLK$,,AUTO
         2 001670   200267 456500                    STP6    @P$S+2,,AUTO
         2 001671   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 001672   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 001673   000000 701000 xent               TSX1    CPE$GENRUAM
         2 001674   002002 702000 2                  TSX2    RUNIT75

      833    16388    3           B$JIT.PRFLAGS.LS=%YES#; /*List assigned*/

  16388  2 001675   000000 470400 xsym               LDP0    B$JIT$
         2 001676   040000 236003                    LDQ     16384,DU
         2 001677   000030 256100                    ORSQ    24,,PR0

      834    16389    3           B$JIT.PRFLAGS.LIST=%YES#; /*Set list command flag*/

  16389  2 001700   010000 236003                    LDQ     4096,DU
         2 001701   000030 256100                    ORSQ    24,,PR0

      835    16390        /* ****        Reset file extension for list     */
      836    16391    3           B$JIT.FEXT(FEXT_LIST)=%NO#;

  16391  2 001702   000046 236000 3                  LDQ     38
         2 001703   000220 356100                    ANSQ    144,,PR0
         2 001704   001720 710000 2                  TRA     s:16405

      837    16392                                                                                    /**/
      838    16393    3         CASE(PARENOPT);

      839    16394        /* ****        Set index to first character of first option following the
      840    16395                       left parentheses*/
      841    16396    3           B$JIT.CCDISP = TA$->P$B.CPOS;

  16396  2 001705   100002 722100                    LXL2    2,,PR1
         2 001706   000000 473400 xsym               LDP3    B$JIT$
         2 001707   300032 442100                    SXL2    26,,PR3
         2 001710   001720 710000 2                  TRA     s:16405
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:119  

      842    16397    3         CASE(FIDLISTOPT);

      843    16398        /* ****       Inform run unit of non-standard syntax on invocation line.
      844    16399                      Don't process remainder of cmnd or make #1-#4 assignments.
      845    16400        */
      846    16401    3           B$JIT.PRFLAGS.NSSYNTAX = %YES#;

  16401  2 001711   000000 473400 xsym               LDP3    B$JIT$
         2 001712   002000 236003                    LDQ     1024,DU
         2 001713   300030 256100                    ORSQ    24,,PR3

      847    16402    3           PRFLAGS.LS = %YES#;

  16402  2 001714   200000 236003                    LDQ     65536,DU
         2 001715   200013 256100                    ORSQ    PRFLAGS,,AUTO

      848    16403    3           I = 9999;

  16403  2 001716   023417 235007                    LDA     9999,DL
         2 001717   200010 755100                    STA     I,,AUTO

      849    16404    3         END RUNIT15;

      850    16405    2        I=I+1;                       /*Get next option*/

  16405  2 001720   200010 054100                    AOS     I,,AUTO

      851    16406    2     END RUNIT10;

  16406  2 001721   200004 470500                    LDP0    BLK$,,AUTO
         2 001722   000001 236100                    LDQ     1,,PR0
         2 001723   000022 772000                    QRL     18
         2 001724   200010 116100                    CMPQ    I,,AUTO
         2 001725   001376 605400 2                  TPNZ    s:16306

      852    16407        /*
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:120  
      853    16408            ****   Get run unit name and prepare to do cpexit
      854    16409        */
      855    16410    1     CALL EXIT_SETUP(BLK$->P$B.SUBLK$(0)->P$S) ALTRET(RUNIT75);

  16410  2 001726   200004 470500                    LDP0    BLK$,,AUTO
         2 001727   000003 471500                    LDP1    3,,PR0
         2 001730   200265 451500                    STP1    FID_RESULTS+11,,AUTO
         2 001731   002767 701000 2                  TSX1    EXIT_SETUP
         2 001732   002002 702000 2                  TSX2    RUNIT75

      856    16411        /*
      857    16412          ****  Translate all :SYS run unit names to upper case
      858    16413        */
      859    16414    1     IF (FID_RESULTS.ACCT=%NO#)

  16414  2 001733   200252 236100                    LDQ     FID_RESULTS,,AUTO
         2 001734   200000 316003                    CANQ    65536,DU
         2 001735   001750 601000 2                  TNZ     s:16421

      860    16415    1        THEN /*If ru and no PERI0D*/
      861    16416    2           DO;

      862    16417    2              SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);   /*:SYS infrd*/

  16417  2 001736   000000 470400 xsym               LDP0    SEG2$
         2 001737   000166 471500                    LDP1    118,,PR0
         2 001740   000022 237000 3                  LDAQ    18
         2 001741   100002 757100                    STAQ    2,,PR1

      863    16418    2              CALL XLATE(FID_NAME.NAME#,TRANSTBL,FID_NAME.NAME#);

  16418  2 001742   000000 471400 xsym               LDP1    B$XL_UPPER$
         2 001743   040100 160500                    MVT     fill='040'O
         2 001744   200224 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
         2 001745   200224 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
         2 001746   100000 000100                    ARG     0,,PR1

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:121  
      864    16419    2           END;

  16419  2 001747   001777 710000 2                  TRA     s:16432

      865    16420    1        ELSE
      866    16421    1           IF (FID_ACCT.ACCT#=BLANKS)

  16421  2 001750   200234 237100                    LDAQ    FID_ACCT,,AUTO
         2 001751   000000 117000 1                  CMPAQ   BLANKS
         2 001752   001760 601000 2                  TNZ     s:16426

      867    16422    1              THEN    /*If ru.  Get accn from jit*/
      868    16423    1                 SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(BLANKS);

  16423  2 001753   000000 470400 xsym               LDP0    SEG2$
         2 001754   000166 471500                    LDP1    118,,PR0
         2 001755   000050 237000 3                  LDAQ    40
         2 001756   100002 757100                    STAQ    2,,PR1
         2 001757   001777 710000 2                  TRA     s:16432

      869    16424    1              ELSE
      870    16425    2                 DO;

      871    16426    2                    SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(FID_ACCT);

  16426  2 001760   000000 470400 xsym               LDP0    SEG2$
         2 001761   000166 471500                    LDP1    118,,PR0
         2 001762   000004 235000 3                  LDA     4
         2 001763   200266 452500                    STP2    @P$S+1,,AUTO
         2 001764   200266 236100                    LDQ     @P$S+1,,AUTO
         2 001765   000234 036003                    ADLQ    156,DU
         2 001766   100002 757100                    STAQ    2,,PR1

      872    16427    2                    IF FID_ACCT.ACCT# = SYSTXT

  16427  2 001767   200234 237100                    LDAQ    FID_ACCT,,AUTO
         2 001770   000002 117000 1                  CMPAQ   SYSTXT
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:122  
         2 001771   001777 601000 2                  TNZ     s:16432

      873    16428    2                       THEN
      874    16429    2                          CALL XLATE(FID_NAME.NAME#,TRANSTBL,FID_NAME.NAME#);

  16429  2 001772   000000 471400 xsym               LDP1    B$XL_UPPER$
         2 001773   040100 160500                    MVT     fill='040'O
         2 001774   200224 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
         2 001775   200224 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
         2 001776   100000 000100                    ARG     0,,PR1

      875    16430    2                 END;

      876    16431                                                /*Accn was spec'd*/
      877    16432    1     CALL RUEXIT ALTRET(RUNIT75);

  16432  2 001777   002621 701000 2                  TSX1    RUEXIT
         2 002000   002002 702000 2                  TSX2    RUNIT75

      878    16433    1     RETURN;

  16433  2 002001   000000 702200 xent               TSX2  ! X66_ARET

  16432  2 002002                       RUNIT75      null
      879    16434    1   RUNIT75:;
      880    16435        /*
      881    16436             ***** Post all errors ...
      882    16437        */
      883    16438    1     IF B$JIT.USRERR.CODE ~= 0

  16438  2 002002   000000 470400 xsym               LDP0    B$JIT$
         2 002003   000144 236100                    LDQ     100,,PR0
         2 002004   377770 316007                    CANQ    131064,DL
         2 002005   002024 600000 2                  TZE     s:16441

      884    16439    1        THEN
      885    16440    1           CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$JIT.USRERR);
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:123  

  16440  2 002006   000000 236000 xsym               LDQ     SEG2$
         2 002007   000003 036003                    ADLQ    3,DU
         2 002010   200266 756100                    STQ     @P$S+1,,AUTO
         2 002011   000000 236000 xsym               LDQ     B$JIT$
         2 002012   000144 036003                    ADLQ    100,DU
         2 002013   200271 756100                    STQ     @P$S+4,,AUTO
         2 002014   200012 631500                    EPPR1   CPOS,,AUTO
         2 002015   200270 451500                    STP1    @P$S+3,,AUTO
         2 002016   200266 633500                    EPPR3   @P$S+1,,AUTO
         2 002017   200267 453500                    STP3    @P$S+2,,AUTO
         2 002020   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 002021   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002022   000000 701000 xent               TSX1    CXP$POSTERR
         2 002023   000000 011000                    NOP     0

      886    16441    1     B$JIT.USRERR = '0'B;   /* Throw away B$JIT.USRERR */

  16441  2 002024   000000 470400 xsym               LDP0    B$JIT$
         2 002025   000144 450100                    STZ     100,,PR0

      887    16442        /*
      888    16443          **** Always reset dcb assignments for source and update dcbs
      889    16444        */
      890    16445    1     IF (B$JIT.PRFLAGS.SI)

  16445  2 002026   000030 234100                    SZN     24,,PR0
         2 002027   002065 605000 2                  TPL     s:16461

      891    16446    1        THEN
      892    16447    2           DO;           /*Reset #1*/

      893    16448    2              CALL CXB$DELAM(ADDR(SOURCEDCB),ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;

  16448  2 002030   000037 236000 3                  LDQ     31
         2 002031   200266 756100                    STQ     @P$S+1,,AUTO
         2 002032   200267 756100                    STQ     @P$S+2,,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:124  
         2 002033   200017 631500                    EPPR1   CPSL_PARAM,,AUTO
         2 002034   200273 451500                    STP1    @P$S+6,,AUTO
         2 002035   000040 236000 3                  LDQ     32
         2 002036   200272 756100                    STQ     @P$S+5,,AUTO
         2 002037   200267 633500                    EPPR3   @P$S+2,,AUTO
         2 002040   200271 453500                    STP3    @P$S+4,,AUTO
         2 002041   200266 634500                    EPPR4   @P$S+1,,AUTO
         2 002042   200270 454500                    STP4    @P$S+3,,AUTO
         2 002043   200270 630500                    EPPR0   @P$S+3,,AUTO
         2 002044   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 002045   000000 701000 xent               TSX1    CXB$DELAM
         2 002046   000000 011000                    NOP     0

      894    16449    2              IF CPSL_PARAM.ERRCODE ~= %NO#

  16449  2 002047   200021 235100                    LDA     CPSL_PARAM+2,,AUTO
         2 002050   002062 600000 2                  TZE     s:16459

      895    16450    2                 THEN
      896    16451    2                   IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  16451  2 002051   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 002052   100000 316003                    CANQ    32768,DU
         2 002053   002236 601000 2                  TNZ     RUNIT80

      897    16452    2                     THEN
      898    16453    2                       GOTO RUNIT80 ;
      899    16454    2                     ELSE
      900    16455    3                       DO ;

      901    16456    3                         B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;

  16456  2 002054   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 002055   000002 736000                    QLS     2
         2 002056   400000 376003                    ANQ     -131072,DU
         2 002057   000000 470400 xsym               LDP0    B$JIT$
         2 002060   000144 756100                    STQ     100,,PR0
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:125  

      902    16457    3                         GOTO RUNIT75 ;

  16457  2 002061   002002 710000 2                  TRA     RUNIT75

      903    16458    3                       END ;
      904    16459    2              B$JIT.PRFLAGS.SI = %NO#;

  16459  2 002062   000000 470400 xsym               LDP0    B$JIT$
         2 002063   000031 236000 xsym               LDQ     B_VECTNIL+25
         2 002064   000030 356100                    ANSQ    24,,PR0

      905    16460    2           END;

      906    16461    1     IF (B$JIT.PRFLAGS.UI)

  16461  2 002065   000030 236100                    LDQ     24,,PR0
         2 002066   200000 316003                    CANQ    65536,DU
         2 002067   002125 600000 2                  TZE     s:16480

      907    16462    1        THEN
      908    16463    2           DO;           /*Reset #2*/

      909    16464    2              CALL CXB$DELAM(ADDR(SOURCEDCB),ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;

  16464  2 002070   000037 236000 3                  LDQ     31
         2 002071   200266 756100                    STQ     @P$S+1,,AUTO
         2 002072   200267 756100                    STQ     @P$S+2,,AUTO
         2 002073   200017 631500                    EPPR1   CPSL_PARAM,,AUTO
         2 002074   200273 451500                    STP1    @P$S+6,,AUTO
         2 002075   000040 236000 3                  LDQ     32
         2 002076   200272 756100                    STQ     @P$S+5,,AUTO
         2 002077   200267 633500                    EPPR3   @P$S+2,,AUTO
         2 002100   200271 453500                    STP3    @P$S+4,,AUTO
         2 002101   200266 634500                    EPPR4   @P$S+1,,AUTO
         2 002102   200270 454500                    STP4    @P$S+3,,AUTO
         2 002103   200270 630500                    EPPR0   @P$S+3,,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:126  
         2 002104   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 002105   000000 701000 xent               TSX1    CXB$DELAM
         2 002106   000000 011000                    NOP     0

      910    16465    2              IF CPSL_PARAM.ERRCODE ~= %NO#

  16465  2 002107   200021 235100                    LDA     CPSL_PARAM+2,,AUTO
         2 002110   002122 600000 2                  TZE     s:16475

      911    16466    2                 THEN
      912    16467    2                   IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  16467  2 002111   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 002112   100000 316003                    CANQ    32768,DU
         2 002113   002236 601000 2                  TNZ     RUNIT80

      913    16468    2                     THEN
      914    16469    2                       GOTO RUNIT80 ;
      915    16470    2                     ELSE
      916    16471    3                       DO ;

      917    16472    3                         B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;

  16472  2 002114   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 002115   000002 736000                    QLS     2
         2 002116   400000 376003                    ANQ     -131072,DU
         2 002117   000000 470400 xsym               LDP0    B$JIT$
         2 002120   000144 756100                    STQ     100,,PR0

      918    16473    3                         GOTO RUNIT75 ;

  16473  2 002121   002002 710000 2                  TRA     RUNIT75

      919    16474    3                       END ;
      920    16475    2              B$JIT.PRFLAGS.UI = %NO#;

  16475  2 002122   000000 470400 xsym               LDP0    B$JIT$
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:127  
         2 002123   000036 236000 3                  LDQ     30
         2 002124   000030 356100                    ANSQ    24,,PR0

      921    16476    2           END;

      922    16477        /*
      923    16478          **** Reset dcb assignments for object and list if made on this command
      924    16479        */
      925    16480    1     IF PRFLAGS.OU

  16480  2 002125   200013 234100                    SZN     PRFLAGS,,AUTO
         2 002126   002170 605000 2                  TPL     s:16498

      926    16481    1        THEN
      927    16482    2           DO;                   /*Reset #3*/

      928    16483    2              CALL CXB$DELAM(ADDR(SOURCEDCB),ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;

  16483  2 002127   000037 236000 3                  LDQ     31
         2 002130   200266 756100                    STQ     @P$S+1,,AUTO
         2 002131   200267 756100                    STQ     @P$S+2,,AUTO
         2 002132   200017 631500                    EPPR1   CPSL_PARAM,,AUTO
         2 002133   200273 451500                    STP1    @P$S+6,,AUTO
         2 002134   000040 236000 3                  LDQ     32
         2 002135   200272 756100                    STQ     @P$S+5,,AUTO
         2 002136   200267 633500                    EPPR3   @P$S+2,,AUTO
         2 002137   200271 453500                    STP3    @P$S+4,,AUTO
         2 002140   200266 634500                    EPPR4   @P$S+1,,AUTO
         2 002141   200270 454500                    STP4    @P$S+3,,AUTO
         2 002142   200270 630500                    EPPR0   @P$S+3,,AUTO
         2 002143   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 002144   000000 701000 xent               TSX1    CXB$DELAM
         2 002145   000000 011000                    NOP     0

      929    16484    2              IF CPSL_PARAM.ERRCODE ~= %NO#

  16484  2 002146   200021 235100                    LDA     CPSL_PARAM+2,,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:128  
         2 002147   002161 600000 2                  TZE     s:16494

      930    16485    2                 THEN
      931    16486    2                   IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  16486  2 002150   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 002151   100000 316003                    CANQ    32768,DU
         2 002152   002236 601000 2                  TNZ     RUNIT80

      932    16487    2                     THEN
      933    16488    2                       GOTO RUNIT80 ;
      934    16489    2                     ELSE
      935    16490    3                       DO ;

      936    16491    3                         B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;

  16491  2 002153   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 002154   000002 736000                    QLS     2
         2 002155   400000 376003                    ANQ     -131072,DU
         2 002156   000000 470400 xsym               LDP0    B$JIT$
         2 002157   000144 756100                    STQ     100,,PR0

      937    16492    3                         GOTO RUNIT75 ;

  16492  2 002160   002002 710000 2                  TRA     RUNIT75

      938    16493    3                       END ;
      939    16494    2              B$JIT.PRFLAGS.OU = %NO#;

  16494  2 002161   000000 470400 xsym               LDP0    B$JIT$
         2 002162   000047 236000 3                  LDQ     39
         2 002163   000030 356100                    ANSQ    24,,PR0

      940    16495    2              B$JIT.PRFLAGS.OUTPUT = %NO#;

  16495  2 002164   000052 236000 3                  LDQ     42
         2 002165   000030 356100                    ANSQ    24,,PR0
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:129  

      941    16496    2              B$JIT.FEXT(FEXT_OBJECT) = %NO#;

  16496  2 002166   000044 236000 3                  LDQ     36
         2 002167   000220 356100                    ANSQ    144,,PR0

      942    16497    2           END;

      943    16498    1     IF PRFLAGS.LS

  16498  2 002170   200013 236100                    LDQ     PRFLAGS,,AUTO
         2 002171   200000 316003                    CANQ    65536,DU
         2 002172   002234 600000 2                  TZE     s:16516

      944    16499    1        THEN
      945    16500    2           DO;                   /*Reset #4*/

      946    16501    2              CALL CXB$DELAM(ADDR(SOURCEDCB),ADDR(SOURCEDCB),M$IBEX1_NUM,CPSL_PARAM) ;

  16501  2 002173   000037 236000 3                  LDQ     31
         2 002174   200266 756100                    STQ     @P$S+1,,AUTO
         2 002175   200267 756100                    STQ     @P$S+2,,AUTO
         2 002176   200017 631500                    EPPR1   CPSL_PARAM,,AUTO
         2 002177   200273 451500                    STP1    @P$S+6,,AUTO
         2 002200   000040 236000 3                  LDQ     32
         2 002201   200272 756100                    STQ     @P$S+5,,AUTO
         2 002202   200267 633500                    EPPR3   @P$S+2,,AUTO
         2 002203   200271 453500                    STP3    @P$S+4,,AUTO
         2 002204   200266 634500                    EPPR4   @P$S+1,,AUTO
         2 002205   200270 454500                    STP4    @P$S+3,,AUTO
         2 002206   200270 630500                    EPPR0   @P$S+3,,AUTO
         2 002207   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 002210   000000 701000 xent               TSX1    CXB$DELAM
         2 002211   000000 011000                    NOP     0

      947    16502    2              IF CPSL_PARAM.ERRCODE ~= %NO#

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:130  
  16502  2 002212   200021 235100                    LDA     CPSL_PARAM+2,,AUTO
         2 002213   002225 600000 2                  TZE     s:16512

      948    16503    2                 THEN
      949    16504    2                   IF CPSL_PARAM.FLAGS.REPORTED_TO_USER

  16504  2 002214   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 002215   100000 316003                    CANQ    32768,DU
         2 002216   002236 601000 2                  TNZ     RUNIT80

      950    16505    2                     THEN
      951    16506    2                       GOTO RUNIT80 ;
      952    16507    2                     ELSE
      953    16508    3                       DO ;

      954    16509    3                         B$JIT.USRERR = CPSL_PARAM.FLAGS.REPORTED_TO_USER ;

  16509  2 002217   200020 236100                    LDQ     CPSL_PARAM+1,,AUTO
         2 002220   000002 736000                    QLS     2
         2 002221   400000 376003                    ANQ     -131072,DU
         2 002222   000000 470400 xsym               LDP0    B$JIT$
         2 002223   000144 756100                    STQ     100,,PR0

      955    16510    3                         GOTO RUNIT75 ;

  16510  2 002224   002002 710000 2                  TRA     RUNIT75

      956    16511    3                       END ;
      957    16512    2              B$JIT.PRFLAGS.LS = %NO#;

  16512  2 002225   000000 470400 xsym               LDP0    B$JIT$
         2 002226   000044 236000 3                  LDQ     36
         2 002227   000030 356100                    ANSQ    24,,PR0

      958    16513    2              B$JIT.PRFLAGS.LIST = %NO#;

  16513  2 002230   000053 236000 3                  LDQ     43
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:131  
         2 002231   000030 356100                    ANSQ    24,,PR0

      959    16514    2              B$JIT.FEXT(FEXT_LIST) = %NO#;

  16514  2 002232   000046 236000 3                  LDQ     38
         2 002233   000220 356100                    ANSQ    144,,PR0

      960    16515    2           END;

      961    16516    1     B$JIT.PRFLAGS.NSSYNTAX = %NO#;

  16516  2 002234   000054 236000 3                  LDQ     44
         2 002235   000030 356100                    ANSQ    24,,PR0

  16516  2 002236                       RUNIT80      null
      962    16517    1   RUNIT80:;
      963    16518    1     IF B$JIT.USRERR.CODE ~= 0

  16518  2 002236   000000 470400 xsym               LDP0    B$JIT$
         2 002237   000144 236100                    LDQ     100,,PR0
         2 002240   377770 316007                    CANQ    131064,DL
         2 002241   002262 600000 2                  TZE     s:16524

      964    16519    1        THEN   /* Something to report */
      965    16520    2           DO;

      966    16521    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$JIT.USRERR);

  16521  2 002242   000000 236000 xsym               LDQ     SEG2$
         2 002243   000003 036003                    ADLQ    3,DU
         2 002244   200266 756100                    STQ     @P$S+1,,AUTO
         2 002245   000000 236000 xsym               LDQ     B$JIT$
         2 002246   000144 036003                    ADLQ    100,DU
         2 002247   200271 756100                    STQ     @P$S+4,,AUTO
         2 002250   200012 631500                    EPPR1   CPOS,,AUTO
         2 002251   200270 451500                    STP1    @P$S+3,,AUTO
         2 002252   200266 633500                    EPPR3   @P$S+1,,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:132  
         2 002253   200267 453500                    STP3    @P$S+2,,AUTO
         2 002254   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 002255   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002256   000000 701000 xent               TSX1    CXP$POSTERR
         2 002257   000000 011000                    NOP     0

      967    16522    2              B$JIT.USRERR = '0'B;

  16522  2 002260   000000 470400 xsym               LDP0    B$JIT$
         2 002261   000144 450100                    STZ     100,,PR0

      968    16523    2           END;

      969    16524    1     ALTRETURN;

  16524  2 002262   000000 702200 xent               TSX2  ! X66_AALT

      970    16525                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:133  
      971    16526        /*F*   NAME: CPA$SAVE
      972    16527               PURPOSE: To process the SAVE command.
      973    16528        */
      974    16529    1   CPA$SAVE:
      975    16530    1     ENTRY(P$PCB)   ALTRET;

  16530  2 002263   000000 700200 xent  CPA$SAVE     TSX0  ! X66_AUTO_1
         2 002264   000274 000001                    ZERO    188,1

      976    16531        /*
      977    16532        *****  Begin procedure
      978    16533        */
      979    16534    1     BLK$ = P$PCB.OUT$;

  16534  2 002265   200003 470500                    LDP0    @P$PCB,,AUTO
         2 002266   000003 236100                    LDQ     3,,PR0
         2 002267   200004 756100                    STQ     BLK$,,AUTO

      980    16535    1     CPOS = BLK$ -> P$B.SUBLK$(1) -> P$S.CPOS;

  16535  2 002270   200004 471500                    LDP1    BLK$,,AUTO
         2 002271   100004 473500                    LDP3    4,,PR1
         2 002272   300002 235100                    LDA     2,,PR3
         2 002273   200012 755100                    STA     CPOS,,AUTO

      981    16536    1     CALL EXIT_SETUP(BLK$->P$B.SUBLK$(1)->P$S) ALTRET(E_SAVE_SETUP);

  16536  2 002274   100004 473500                    LDP3    4,,PR1
         2 002275   200265 453500                    STP3    FID_RESULTS+11,,AUTO
         2 002276   002767 701000 2                  TSX1    EXIT_SETUP
         2 002277   002424 702000 2                  TSX2    E_SAVE_SETUP

      982    16537    1     IF BLK$->P$B.SUBLK$(0)->P$B.CODE = ONOPT

  16537  2 002300   200004 470500                    LDP0    BLK$,,AUTO
         2 002301   000003 471500                    LDP1    3,,PR0
         2 002302   100000 720100                    LXL0    0,,PR1
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:134  
         2 002303   000004 100003                    CMPX0   4,DU
         2 002304   002415 601000 2                  TNZ     CNTU_SAVE

      983    16538    1        THEN
      984    16539    2           DO;

      985    16540    2              FPT_OPEN = CFPT_OPEN;

  16540  2 002305   000100 100400                    MLR     fill='000'O
         2 002306   000000 000350 xsym               ADSC9   CFPT_OPEN                cn=0,n=232
         2 002307   200054 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

      986    16541    2              FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);

  16541  2 002310   000002 235000 3                  LDA     2
         2 002311   200266 452500                    STP2    @P$S+1,,AUTO
         2 002312   200266 236100                    LDQ     @P$S+1,,AUTO
         2 002313   000120 036003                    ADLQ    80,DU
         2 002314   200054 757100                    STAQ    FPT_OPEN,,AUTO

      987    16542    2              FPT_OPEN.NAME_ = VECTOR(FID_NAME);

  16542  2 002315   000003 235000 3                  LDA     3
         2 002316   200266 452500                    STP2    @P$S+1,,AUTO
         2 002317   200266 236100                    LDQ     @P$S+1,,AUTO
         2 002320   000224 036003                    ADLQ    148,DU
         2 002321   200062 757100                    STAQ    FPT_OPEN+6,,AUTO

      988    16543    2              FPT_OPEN.ACCT_ = VECTOR(FID_ACCT);

  16543  2 002322   000004 235000 3                  LDA     4
         2 002323   200266 452500                    STP2    @P$S+1,,AUTO
         2 002324   200266 236100                    LDQ     @P$S+1,,AUTO
         2 002325   000234 036003                    ADLQ    156,DU
         2 002326   200100 757100                    STAQ    FPT_OPEN+20,,AUTO

      989    16544    2              FPT_OPEN.PASS_ = VECTOR(FID_PASS);
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:135  

  16544  2 002327   000004 235000 3                  LDA     4
         2 002330   200266 452500                    STP2    @P$S+1,,AUTO
         2 002331   200266 236100                    LDQ     @P$S+1,,AUTO
         2 002332   000236 036003                    ADLQ    158,DU
         2 002333   200064 757100                    STAQ    FPT_OPEN+8,,AUTO

      990    16545    2              FPT_OPEN.V.ASN# = FID_ASN;

  16545  2 002334   200015 236100                    LDQ     FID_ASN,,AUTO
         2 002335   000033 772000                    QRL     27
         2 002336   200121 552104                    STBQ    FPT_OPEN+37,'04'O,AUTO

      991    16546    2              FPT_OPEN.V.DCB# = M$IBEX1_NUM;

  16546  2 002337   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 002340   200120 740100                    STX0    FPT_OPEN+36,,AUTO

      992    16547    2              FPT_OPEN.V.OPER.TEST# = %YES# ;

  16547  2 002341   020000 236007                    LDQ     8192,DL
         2 002342   200120 256100                    ORSQ    FPT_OPEN+36,,AUTO

      993    16548    2              CALL M$OPEN(FPT_OPEN) ALTRET(E_SAVE_M$OPEN);

  16548  2 002343   200054 630500                    EPPR0   FPT_OPEN,,AUTO
         2 002344   450000 713400                    CLIMB   alt,open
         2 002345   410400 401760                    pmme    nvectors=18
         2 002346   002365 702000 2                  TSX2    E_SAVE_M$OPEN

      994    16549    2   FILE_EXISTS:
      995    16550    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,E_ONEXIST);

  16550  2 002347   000000 236000 xsym  FILE_EXISTS  LDQ     SEG2$
         2 002350   000003 036003                    ADLQ    3,DU
         2 002351   200266 756100                    STQ     @P$S+1,,AUTO
         2 002352   000055 236000 3                  LDQ     45
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:136  
         2 002353   200271 756100                    STQ     @P$S+4,,AUTO
         2 002354   200012 630500                    EPPR0   CPOS,,AUTO
         2 002355   200270 450500                    STP0    @P$S+3,,AUTO
         2 002356   200266 631500                    EPPR1   @P$S+1,,AUTO
         2 002357   200267 451500                    STP1    @P$S+2,,AUTO
         2 002360   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 002361   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 002362   000000 701000 xent               TSX1    CXP$POSTERR
         2 002363   000000 011000                    NOP     0

      996    16551        /*E*    ERROR:   CPA-E$ONEXIST-C
      997    16552                MESSAGE:    File exists.
      998    16553                MESSAGE1:   The file named for the SAVE image already exists.
      999    16554        */
     1000    16555    2              ALTRETURN;

  16555  2 002364   000000 702200 xent               TSX2  ! X66_AALT

     1001    16556        /**/
     1002    16557    2   E_SAVE_M$OPEN:
     1003    16558    2              IF B$TCB.ALT$ -> B$ALT.ERR.CODE = %E$NOFILE

  16558  2 002365   000000 470400 xsym  E_SAVE_M$OP* LDP0    B$TCB$
         2 002366   000000 471500                    LDP1    0,,PR0
         2 002367   100102 236100                    LDQ     66,,PR1
         2 002370   377770 376007                    ANQ     131064,DL
         2 002371   001610 116007                    CMPQ    904,DL
         2 002372   002415 600000 2                  TZE     CNTU_SAVE

     1004    16559    2                 THEN
     1005    16560    2                    GOTO CNTU_SAVE;
     1006    16561    2                 ELSE
     1007    16562    2                    CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$TCB.ALT$ ->

  16562  2 002373   000000 236000 xsym               LDQ     SEG2$
         2 002374   000003 036003                    ADLQ    3,DU
         2 002375   200266 756100                    STQ     @P$S+1,,AUTO
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:137  
         2 002376   100101 633500                    EPPR3   65,,PR1
         2 002377   200273 453500                    STP3    @P$S+6,,AUTO
         2 002400   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 002401   200272 756100                    STQ     @P$S+5,,AUTO
         2 002402   100102 634500                    EPPR4   66,,PR1
         2 002403   200271 454500                    STP4    @P$S+4,,AUTO
         2 002404   200012 631500                    EPPR1   CPOS,,AUTO
         2 002405   200270 451500                    STP1    @P$S+3,,AUTO
         2 002406   200266 635500                    EPPR5   @P$S+1,,AUTO
         2 002407   200267 455500                    STP5    @P$S+2,,AUTO
         2 002410   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 002411   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 002412   000000 701000 xent               TSX1    CXP$POSTERR
         2 002413   000000 011000                    NOP     0

     1008    16563    2                          B$ALT.ERR,,B$TCB.ALT$ -> B$ALT.DCB#);
     1009    16564    2              ALTRETURN;

  16564  2 002414   000000 702200 xent               TSX2  ! X66_AALT

     1010    16565    2           END;
     1011    16566    1   CNTU_SAVE:
     1012    16567    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V.SAVEFLG# = %YES#;

  16567  2 002415   000000 470400 xsym  CNTU_SAVE    LDP0    SEG2$
         2 002416   000166 471500                    LDP1    118,,PR0
         2 002417   040000 236003                    LDQ     16384,DU
         2 002420   100014 256100                    ORSQ    12,,PR1

     1013    16568    1     CALL CPC$EXIT  ALTRET(E_SAVE_C$EXIT);

  16568  2 002421   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002422   000000 701000 xent               TSX1    CPC$EXIT
         2 002423   002425 702000 2                  TSX2    E_SAVE_C$EXIT

     1014    16569    1   E_SAVE_SETUP:
     1015    16570    1     ALTRETURN;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:138  

  16570  2 002424   000000 702200 xent  E_SAVE_SETUP TSX2  ! X66_AALT

     1016    16571    1   E_SAVE_C$EXIT:
     1017    16572    1     ALTRETURN;

  16572  2 002425   000000 702200 xent  E_SAVE_C$EX* TSX2  ! X66_AALT

     1018    16573        %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:139  
     1019    16574        /**********************************************************************/
     1020    16575        /*F*   NAME:   CPA$SIXEDIT
     1021    16576               PURPOSE: To process the 6X, 6E[DIT], and 6B[UILD] control commands.
     1022    16577               DESCRIPTION: The 6EDIT processor is called to process the
     1023    16578                       various 6EDIT commands.
     1024    16579               REFERENCE: 6EDIT Reference Manual
     1025    16580        */
     1026    16581        /*D*   NAME:   CPA$SIXEDIT
     1027    16582               CALL:   CALL CPA$SIXEDIT(BLK$)
     1028    16583               INTERFACE: CPC$IQUIT,RUEXIT
     1029    16584               INPUT:  P$PCB - control block for parsed output
     1030    16585                       CPFLAGS1 - implied quit flag set or reset
     1031    16586               OUTPUT: M$CPEXIT fpt initialized with exit information
     1032    16587               DESCRIPTION: If a user is at job step and the previous job
     1033    16588                       step has been run down, the command is moved to CCBUF
     1034    16589                       in the JIT and the 6EDIT processor called.
     1035    16590        */
     1036    16591        /************************************************************************/
     1037    16592    1   CPA$SIXEDIT:
     1038    16593    1     ENTRY(P$PCB)   ALTRET;

  16593  2 002426   000000 700200 xent  CPA$SIXEDIT  TSX0  ! X66_AUTO_1
         2 002427   000274 000001                    ZERO    188,1

     1039    16594        /*
     1040    16595           **** Set up exit fpt and exit to 6edit processor
     1041    16596        */
     1042    16597    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  16597  2 002430   000000 470400 xsym               LDP0    SEG2$
         2 002431   000166 471500                    LDP1    118,,PR0
         2 002432   000100 100400                    MLR     fill='000'O
         2 002433   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 002434   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

     1043    16598    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:140  
  16598  2 002435   000166 471500                    LDP1    118,,PR0
         2 002436   000004 235000 3                  LDA     4
         2 002437   200266 451500                    STP1    @P$S+1,,AUTO
         2 002440   200266 236100                    LDQ     @P$S+1,,AUTO
         2 002441   000014 036003                    ADLQ    12,DU
         2 002442   100012 757100                    STAQ    10,,PR1

     1044    16599    1          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
     1045    16600    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_=VECTOR(SIXEDITTXTC);

  16600  2 002443   000166 471500                    LDP1    118,,PR0
         2 002444   000056 237000 3                  LDAQ    46
         2 002445   100000 757100                    STAQ    0,,PR1

     1046    16601    1     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_=VECTOR(SYSTXT);

  16601  2 002446   000166 471500                    LDP1    118,,PR0
         2 002447   000022 237000 3                  LDAQ    18
         2 002450   100002 757100                    STAQ    2,,PR1

     1047    16602    1     B$JIT.CCDISP = P$PCB.NCHARS;

  16602  2 002451   200003 471500                    LDP1    @P$PCB,,AUTO
         2 002452   100011 720100                    LXL0    9,,PR1
         2 002453   000000 473400 xsym               LDP3    B$JIT$
         2 002454   300032 440100                    SXL0    26,,PR3

     1048    16603    1     CALL RUEXIT ALTRET(SIXEDIT50);

  16603  2 002455   002621 701000 2                  TSX1    RUEXIT
         2 002456   002457 702000 2                  TSX2    SIXEDIT50

  16602  2 002457                       SIXEDIT50    null
     1049    16604    1   SIXEDIT50: ;
     1050    16605    1     ALTRETURN;

  16605  2 002457   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:141  

     1051    16606                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:142  
     1052    16607        /**********************************************************************/
     1053    16608        /*F*   NAME:   CPA$START
     1054    16609               PURPOSE: To process the START control command.
     1055    16610               DESCRIPTION: CPA$START is called whenever a START command is encountered.
     1056    16611                       The command is scanned and interpretive exit information
     1057    16612                       generated for performing an interpretive exit to the specified
     1058    16613                       run unit.
     1059    16614               REFERENCE: Programmers reference manual
     1060    16615        */
     1061    16616        /*D*   NAME:   CPA$START
     1062    16617               CALL:   CALL CPA$START(BLK$)
     1063    16618               INTERFACE: CPC$WRITEMSGE,CPA$IQUIT,RUEXIT
     1064    16619               INPUT:  BLK$ - Pointer to parsed output
     1065    16620                       CP_IQUIT# - Flag in JIT indicating whether an implied quit
     1066    16621                       should be performed.
     1067    16622               OUTPUT: CPEXIT FPT initialized with run unit name, account, password,
     1068    16623                       debugger name, and pack set identification.
     1069    16624                       B$JIT.CPFLAGS1.DELTA - delta flag set
     1070    16625               DESCRIPTION: The following forms of the START command are acceptable:
     1071    16626                       1. START fid
     1072    16627                       2. START fid U
     1073    16628                       3. START fid U[NDER  debugger]
     1074    16629                       The command in CPBUFF is scanned for the run unit name. If
     1075    16630                       the run unit specified does not include an account, the
     1076    16631                       running account is utilized as the default account. If an error
     1077    16632                       is encountered, the appropriate error message is output and
     1078    16633                       the ALTRET taken. The specified run unit is put into execution
     1079    16634                       by calling a routine which executes a M$CPEXIT PMME.
     1080    16635                       If execution of a run unit is attempted when not at job step
     1081    16636                       , the 'QUIT?' message is output to the user and a return
     1082    16637                       made for the user's response. If the implied quit flag is
     1083    16638                       set(set when not at job step), the previous job step will
     1084    16639                       be run down before the previously mentioned functions are
     1085    16640                       performed. The debugger named DELTA is assumed by
     1086    16641                       default if UNDER is specified without a debugger name.
     1087    16642        */
     1088    16643        /**********************************************************************/
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:143  
     1089    16644    1   CPA$START:
     1090    16645    1     ENTRY(P$PCB)   ALTRET;

  16645  2 002460   000000 700200 xent  CPA$START    TSX0  ! X66_AUTO_1
         2 002461   000274 000001                    ZERO    188,1

     1091    16646        /*
     1092    16647             *****    Begin procedure
     1093    16648        */
     1094    16649    1     BLK$=P$PCB.OUT$;

  16649  2 002462   200003 470500                    LDP0    @P$PCB,,AUTO
         2 002463   000003 236100                    LDQ     3,,PR0
         2 002464   200004 756100                    STQ     BLK$,,AUTO

     1095    16650    1     B$JIT.CCDISP = P$PCB.NCHARS;

  16650  2 002465   000011 720100                    LXL0    9,,PR0
         2 002466   000000 471400 xsym               LDP1    B$JIT$
         2 002467   100032 440100                    SXL0    26,,PR1

     1096    16651    1     CALL EXIT_SETUP(BLK$->P$B.SUBLK$(0)->P$S) ALTRET(CPA$START55);

  16651  2 002470   200004 473500                    LDP3    BLK$,,AUTO
         2 002471   300003 474500                    LDP4    3,,PR3
         2 002472   200265 454500                    STP4    FID_RESULTS+11,,AUTO
         2 002473   002767 701000 2                  TSX1    EXIT_SETUP
         2 002474   002557 702000 2                  TSX2    CPA$START55

     1097    16652        /*
     1098    16653          ****  Translate all :SYS run unit names to upper case
     1099    16654        */
     1100    16655    1     IF (FID_RESULTS.ACCT=%YES#)

  16655  2 002475   200252 236100                    LDQ     FID_RESULTS,,AUTO
         2 002476   200000 316003                    CANQ    65536,DU
         2 002477   002510 600000 2                  TZE     s:16663
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:144  

     1101    16656    1        THEN
     1102    16657    2           DO;

     1103    16658    2              IF FID_ACCT.ACCT# = SYSTXT

  16658  2 002500   200234 237100                    LDAQ    FID_ACCT,,AUTO
         2 002501   000002 117000 1                  CMPAQ   SYSTXT
         2 002502   002510 601000 2                  TNZ     s:16663

     1104    16659    2                 THEN
     1105    16660    2                    CALL XLATE(FID_NAME.NAME#,TRANSTBL,FID_NAME.NAME#);

  16660  2 002503   000000 470400 xsym               LDP0    B$XL_UPPER$
         2 002504   040100 160500                    MVT     fill='040'O
         2 002505   200224 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
         2 002506   200224 200037                    ADSC9   FID_NAME,,AUTO           cn=1,n=31
         2 002507   000000 000100                    ARG     0,,PR0

     1106    16661    2           END;

     1107    16662                                                /*Accn was spec'd*/
     1108    16663    1     IF BLK$->P$B.NSUBLKS > 1

  16663  2 002510   200004 470500                    LDP0    BLK$,,AUTO
         2 002511   000001 220100                    LDX0    1,,PR0
         2 002512   000002 100003                    CMPX0   2,DU
         2 002513   002554 602000 2                  TNC     s:16674

     1109    16664    1        THEN
     1110    16665    2           DO CASE(BLK$->P$B.SUBLK$(1)->P$B.CODE);

  16665  2 002514   000004 471500                    LDP1    4,,PR0
         2 002515   100000 721100                    LXL1    0,,PR1
         2 002516   000004 101003                    CMPX1   4,DU
         2 002517   002521 602011 2                  TNC     s:16665+5,X1
         2 002520   002554 710000 2                  TRA     s:16674
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:145  
         2 002521   002554 710000 2                  TRA     s:16674
         2 002522   002554 710000 2                  TRA     s:16674
         2 002523   002525 710000 2                  TRA     s:16667
         2 002524   002544 710000 2                  TRA     s:16671

     1111    16666    2            CASE(SDEBUGOPT);

     1112    16667    2              SEG$2.DBUG_NAME=BLK$->P$B.SUBLK$(1)->

  16667  2 002525   100003 473500                    LDP3    3,,PR1
         2 002526   000100 101500                    MRL     fill='000'O
         2 002527   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 002530   200266 000002                    ADSC9   @P$S+1,,AUTO             cn=0,n=2
         2 002531   200266 220100                    LDX0    @P$S+1,,AUTO
         2 002532   000001 621010                    EAX1    1,X0
         2 002533   000000 471400 xsym               LDP1    SEG2$
         2 002534   000100 100540                    MLR     fill='000'O
         2 002535   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
         2 002536   100147 000014                    ADSC9   103,,PR1                 cn=0,n=12

     1113    16668    2                   P$S.TEXTC$->TEXT$C;
     1114    16669    2              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DELTA#;

  16669  2 002537   000000 473400 xsym               LDP3    B$JIT$
         2 002540   300143 236100                    LDQ     99,,PR3
         2 002541   000003 276000 xsym               ORQ     B_VECTNIL+3
         2 002542   300143 756100                    STQ     99,,PR3
         2 002543   002554 710000 2                  TRA     s:16674

     1115    16670    2            CASE(SUOPT);

     1116    16671    2              SEG$2.DBUG_NAME=DELTATXTC;

  16671  2 002544   000000 473400 xsym               LDP3    SEG2$
         2 002545   000100 100400                    MLR     fill='000'O
         2 002546   000010 000006 1                  ADSC9   DELTATXTC                cn=0,n=6
         2 002547   300147 000014                    ADSC9   103,,PR3                 cn=0,n=12
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:146  

     1117    16672    2              B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DELTA#;

  16672  2 002550   000000 471400 xsym               LDP1    B$JIT$
         2 002551   100143 236100                    LDQ     99,,PR1
         2 002552   000003 276000 xsym               ORQ     B_VECTNIL+3
         2 002553   100143 756100                    STQ     99,,PR1

     1118    16673    2            END;

     1119    16674    1     CALL RUEXIT ALTRET(CPA$START55);

  16674  2 002554   002621 701000 2                  TSX1    RUEXIT
         2 002555   002557 702000 2                  TSX2    CPA$START55

     1120    16675    1     RETURN;

  16675  2 002556   000000 702200 xent               TSX2  ! X66_ARET

  16669  2 002557                       CPA$START55  null
     1121    16676    1   CPA$START55:;
     1122    16677    1     ALTRETURN;

  16677  2 002557   000000 702200 xent               TSX2  ! X66_AALT

     1123    16678                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:147  
     1124    16679        /**********************************************************************/
     1125    16680        /*F*   NAME:   CPA$UNDER
     1126    16681               PURPOSE: The UNDER command is utilized to associate a debugger
     1127    16682                       with a run unit specified on the next command.
     1128    16683               DESCRIPTION: The debugger DELTA is associated by default if a
     1129    16684                       debugger isn't specified. This command only remains in
     1130    16685                       effect for the command which immediately follows and
     1131    16686                       which must be a run unit.
     1132    16687               REFERENCE: Programmers Reference Manual
     1133    16688        */
     1134    16689        /*     NAME:   CPA$UNDER
     1135    16690               CALL:   Call CPA$UNDER(P$PCB)
     1136    16691               interface:
     1137    16692               INPUT:  P$PCB - parse control block
     1138    16693               OUTPUT: B$JIT.CPFLAGS1.CP_DELTA# - set
     1139    16694                       cpexit fpt - init. with debugger name if specified
     1140    16695               DESCRIPTION: If a sub-block is not found, the default debugger
     1141    16696                       name 'DELTA' is eventually framed in the cpexit fpt.
     1142    16697                       Otherwise, the debugger name in the sub-block is framed
     1143    16698                       in the cpexit fpt.
     1144    16699        */
     1145    16700        /**********************************************************************/
     1146    16701    1   CPA$UNDER: ENTRY(P$PCB) ALTRET;

  16701  2 002560   000000 700200 xent  CPA$UNDER    TSX0  ! X66_AUTO_1
         2 002561   000274 000001                    ZERO    188,1

     1147    16702    1     BLK$=P$PCB.OUT$;

  16702  2 002562   200003 470500                    LDP0    @P$PCB,,AUTO
         2 002563   000003 236100                    LDQ     3,,PR0
         2 002564   200004 756100                    STQ     BLK$,,AUTO

     1148    16703    1     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_DELTA#;

  16703  2 002565   000000 471400 xsym               LDP1    B$JIT$
         2 002566   100143 236100                    LDQ     99,,PR1
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:148  
         2 002567   000003 276000 xsym               ORQ     B_VECTNIL+3
         2 002570   100143 756100                    STQ     99,,PR1

     1149    16704    1     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_BUFFULL#;

  16704  2 002571   000036 236000 1                  LDQ     E_ONEXIST+3
         2 002572   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 002573   100143 376100                    ANQ     99,,PR1
         2 002574   100143 756100                    STQ     99,,PR1

     1150    16705    1     IF BLK$->P$B.NSUBLKS > 0

  16705  2 002575   200004 473500                    LDP3    BLK$,,AUTO
         2 002576   300001 220100                    LDX0    1,,PR3
         2 002577   002614 600000 2                  TZE     s:16710

     1151    16706    1        THEN
     1152    16707    1           SEG$2.DBUG_NAME=BLK$->P$B.SUBLK$(0)->

  16707  2 002600   300003 474500                    LDP4    3,,PR3
         2 002601   400003 475500                    LDP5    3,,PR4
         2 002602   000100 101500                    MRL     fill='000'O
         2 002603   500000 000001                    ADSC9   0,,PR5                   cn=0,n=1
         2 002604   200266 000002                    ADSC9   @P$S+1,,AUTO             cn=0,n=2
         2 002605   200266 220100                    LDX0    @P$S+1,,AUTO
         2 002606   000001 621010                    EAX1    1,X0
         2 002607   000000 474400 xsym               LDP4    SEG2$
         2 002610   000100 100540                    MLR     fill='000'O
         2 002611   500000 000011                    ADSC9   0,,PR5                   cn=0,n=*X1
         2 002612   400147 000014                    ADSC9   103,,PR4                 cn=0,n=12
         2 002613   002620 710000 2                  TRA     s:16711

     1153    16708    1                P$S.TEXTC$->TEXT$C;
     1154    16709    1        ELSE
     1155    16710    1           SEG$2.DBUG_NAME=DELTATXTC;

  16710  2 002614   000000 474400 xsym               LDP4    SEG2$
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:149  
         2 002615   000100 100400                    MLR     fill='000'O
         2 002616   000010 000006 1                  ADSC9   DELTATXTC                cn=0,n=6
         2 002617   400147 000014                    ADSC9   103,,PR4                 cn=0,n=12

     1156    16711    1     RETURN;

  16711  2 002620   000000 702200 xent               TSX2  ! X66_ARET

     1157    16712                   %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:150  
     1158    16713        /*
     1159    16714           *****   Local subroutines
     1160    16715        */
     1161    16716        /**********************************************************************/
     1162    16717        /*I*   NAME: RUEXIT
     1163    16718               PURPOSE: To provide a common exit for all run units to be executed.
     1164    16719               CALL:   CALL RUEXIT
     1165    16720               INTERFACE: CPC$EXIT,CPC$WRITEMSGE
     1166    16721               INPUT:  FPT_CPEXIT -  Initialized with run unit information
     1167    16722               OUTPUT: FPT_CPEXIT - Initialized with debugger name if CP_DELTA set
     1168    16723                       B$JIT.CCARS - record size
     1169    16724                       B$JIT.CCDISP - displacemennt to (
     1170    16725                       B$JIT.CCBUF - control command
     1171    16726               DESCRIPTION: RUEXIT performs general cleanup operations required
     1172    16727                       before an exit from IBEX is performed.
     1173    16728        */
     1174    16729        /***********************************************************************/
     1175    16730    1   RUEXIT: PROC ALTRET;

  16730  2 002621   200264 741300       RUEXIT       STX1  ! FID_RESULTS+10,,AUTO

     1176    16731                                                                                    /**/
     1177    16732    2     IF (B$JIT.CPFLAGS1 & %CP_DELTA#)

  16732  2 002622   000000 470400 xsym               LDP0    B$JIT$
         2 002623   000143 236100                    LDQ     99,,PR0
         2 002624   000003 376000 xsym               ANQ     B_VECTNIL+3
         2 002625   002635 600000 2                  TZE     s:16736

     1178    16733    2        THEN
     1179    16734    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.DEBUG_=VECTOR(SEG$2.DBUG_NAME);

  16734  2 002626   000000 471400 xsym               LDP1    SEG2$
         2 002627   100166 473500                    LDP3    118,,PR1
         2 002630   000024 235000 3                  LDA     20
         2 002631   000000 236000 xsym               LDQ     SEG2$
         2 002632   000147 036003                    ADLQ    103,DU
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:151  
         2 002633   300010 757100                    STAQ    8,,PR3
         2 002634   002641 710000 2                  TRA     s:16737

     1180    16735    2        ELSE
     1181    16736    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.DEBUG_=VECTOR(NIL);

  16736  2 002635   000000 471400 xsym               LDP1    SEG2$
         2 002636   100166 473500                    LDP3    118,,PR1
         2 002637   000016 237000 3                  LDAQ    14
         2 002640   300010 757100                    STAQ    8,,PR3

     1182    16737    2     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_DELTA#;

  16737  2 002641   000003 236000 xsym               LDQ     B_VECTNIL+3
         2 002642   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 002643   000143 376100                    ANQ     99,,PR0
         2 002644   000143 756100                    STQ     99,,PR0

     1183    16738    2     B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 & ~%CP_BUFFULL#;

  16738  2 002645   000036 236000 1                  LDQ     E_ONEXIST+3
         2 002646   000027 676000 xsym               ERQ     B_VECTNIL+23
         2 002647   000143 376100                    ANQ     99,,PR0
         2 002650   000143 756100                    STQ     99,,PR0

     1184    16739        /*
     1185    16740        *****   The ccbuf filed of B$JIT is now set up for the receiving program;
     1186    16741        *****   the command line is moved to the jit after stripping the leading '!',
     1187    16742        *****   if any.  In addition, if the run-unit call was preceded by a label,
     1188    16743        *****   the label is over-written with blanks.  Once all of this is done, the
     1189    16744        *****   B$JIT.CCARS and B$JIT.CCDISP fields are set accordingly.
     1190    16745        */
     1191    16746    2     IF B$JIT.CPFLAGS1.JSTEP

  16746  2 002651   200000 316003                    CANQ    65536,DU
         2 002652   002662 601000 2                  TNZ     s:16751
         2 002653   004000 316003                    CANQ    2048,DU
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:152  
         2 002654   002662 601000 2                  TNZ     s:16751
         2 002655   200003 473500                    LDP3    @P$PCB,,AUTO
         2 002656   300003 474500                    LDP4    3,,PR3
         2 002657   400000 720100                    LXL0    0,,PR4
         2 002660   000057 100003                    CMPX0   47,DU
         2 002661   002752 601000 2                  TNZ     s:16774

     1192    16747    2         OR B$JIT.CPFLAGS1.LNKPMME
     1193    16748    2           OR (P$PCB.OUT$ -> P$B.CODE = PMDCMND)  /* PMD ALWAYS EXPECTED IN CCBUF */
     1194    16749    2        THEN
     1195    16750    3           DO;

     1196    16751    3              B$JIT.CCARS = P$PCB.NCHARS;

  16751  2 002662   200003 473500                    LDP3    @P$PCB,,AUTO
         2 002663   300011 720100                    LXL0    9,,PR3
         2 002664   000032 740100                    STX0    26,,PR0

     1197    16752    3              CALL INDEX (I,': ',SEG$2.CPBUFF$ -> CP$BUFF) ALTRET(NO_LABEL);

  16752  2 002665   100171 474500                    LDP4    121,,PR1
         2 002666   000000 120500                    SCD
         2 002667   400000 000400                    ADSC9   0,,PR4                   cn=0,n=256
         2 002670   000040 000002 1                  ADSC9   E_ONEXIST+5              cn=0,n=2
         2 002671   200010 000100                    ARG     I,,AUTO
         2 002672   002675 607000 2                  TTF     s:16753
         2 002673   200010 054100                    AOS     I,,AUTO
         2 002674   002724 710000 2                  TRA     NO_LABEL

     1198    16753    3              CALL INDEX (J,' ',SUBSTR(SEG$2.CPBUFF$ -> CP$BUFF,0,I))

  16753  2 002675   200010 721100                    LXL1    I,,AUTO
         2 002676   000000 124540                    SCM     mask='000'O
         2 002677   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
         2 002700   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 002701   200011 000100                    ARG     J,,AUTO
         2 002702   002704 606400 2                  TTN     s:16757
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:153  

     1199    16754    4                                         WHENRETURN DO;

     1200    16755    4                                           GOTO NO_LABEL;     /* Found a blank */

  16755  2 002703   002724 710000 2                  TRA     NO_LABEL

     1201    16756    4                                         END ; /* Whenreturn Do */
     1202    16757    3              CALL INDEX (J,'(',SUBSTR(SEG$2.CPBUFF$ -> CP$BUFF,0,I))

  16757  2 002704   000000 470400 xsym               LDP0    SEG2$
         2 002705   000171 471500                    LDP1    121,,PR0
         2 002706   200010 720100                    LXL0    I,,AUTO
         2 002707   000000 124540                    SCM     mask='000'O
         2 002710   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 002711   000060 000001 3                  ADSC9   48                       cn=0,n=1
         2 002712   200011 000100                    ARG     J,,AUTO
         2 002713   002715 606400 2                  TTN     s:16762

     1203    16758    4                                         WHENRETURN DO;

     1204    16759    4                                           GOTO NO_LABEL; /* Found a left paren */

  16759  2 002714   002724 710000 2                  TRA     NO_LABEL

     1205    16760    4                                         END ; /* Whenreturn Do */
     1206    16761        /**/
     1207    16762    3              CALL INSERT (SEG$2.CPBUFF$ -> CP$BUFF,0,I+1,' ');

  16762  2 002715   000000 470400 xsym               LDP0    SEG2$
         2 002716   000171 471500                    LDP1    121,,PR0
         2 002717   200010 720100                    LXL0    I,,AUTO
         2 002720   000001 621010                    EAX1    1,X0
         2 002721   040140 100400                    MLR     fill='040'O
         2 002722   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 002723   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:154  
     1208    16763        /**/
     1209    16764    3   NO_LABEL:
     1210    16765    3              B$JIT.CCBUF = SEG$2.CPBUFF$ -> CP$BUFF;

  16765  2 002724   000000 470400 xsym  NO_LABEL     LDP0    SEG2$
         2 002725   000171 471500                    LDP1    121,,PR0
         2 002726   000000 473400 xsym               LDP3    B$JIT$
         2 002727   040100 100500                    MLR     fill='040'O
         2 002730   100000 000400                    ADSC9   0,,PR1                   cn=0,n=256
         2 002731   300033 000400                    ADSC9   27,,PR3                  cn=0,n=256

     1211    16766    3              IF SEG$2.GETCMD$->GET$CMD.CONTINUED#

  16766  2 002732   000173 471500                    LDP1    123,,PR0
         2 002733   100006 236100                    LDQ     6,,PR1
         2 002734   100000 316003                    CANQ    32768,DU
         2 002735   002752 600000 2                  TZE     s:16774

     1212    16767    3               THEN
     1213    16768    4                 DO ;

     1214    16769    4                   J = VBASE(SEG$2.XUG_INIT$->XUG$INIT.PARAMS$->XUG$PARAMS.RLTVEC)

  16769  2 002736   000172 474500                    LDP4    122,,PR0
         2 002737   400014 475500                    LDP5    12,,PR4
         2 002740   500013 476500                    LDP6    11,,PR5
         2 002741   000100 101500                    MRL     fill='000'O
         2 002742   600000 200001                    ADSC9   0,,PR6                   cn=1,n=1
         2 002743   200266 000004                    ADSC9   @P$S+1,,AUTO             cn=0,n=4
         2 002744   200266 236100                    LDQ     @P$S+1,,AUTO
         2 002745   000001 136007                    SBLQ    1,DL
         2 002746   200011 756100                    STQ     J,,AUTO

     1215    16770    4                             ->XUG$RLT(1) - 1 ;
     1216    16771    4                   CALL INSERT(B$JIT.CCBUF, J, 1, ';') ;

  16771  2 002747   040106 100400                    MLR     fill='040'O
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:155  
         2 002750   000061 000001 3                  ADSC9   49                       cn=0,n=1
         2 002751   300033 000001                    ADSC9   27,Q,PR3                 cn=0,n=1

     1217    16772    4                 END ; /* Then Do */

     1218    16773    3           END;

     1219    16774    2     CALL CPC$EXIT  ALTRET(E_RUEXIT_C$EXIT);

  16774  2 002752   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 002753   000000 701000 xent               TSX1    CPC$EXIT
         2 002754   002755 702000 2                  TSX2    E_RUEXIT_C$EXIT

     1220    16775    2   E_RUEXIT_C$EXIT:
     1221    16776    2     SEG$2.GETCMD$->GET$CMD.ERR_CODE = B$TCB.ALT$->B$EXCFR.ERR ;

  16776  2 002755   000000 470400 xsym  E_RUEXIT_C$* LDP0    SEG2$
         2 002756   000173 471500                    LDP1    123,,PR0
         2 002757   000000 473400 xsym               LDP3    B$TCB$
         2 002760   300000 474500                    LDP4    0,,PR3
         2 002761   400102 236100                    LDQ     66,,PR4
         2 002762   100010 756100                    STQ     8,,PR1

     1222    16777    2     SEG$2.GETCMD$->GET$CMD.ERRDCB# = 0 ;

  16777  2 002763   000173 471500                    LDP1    123,,PR0
         2 002764   100011 450100                    STZ     9,,PR1

     1223    16778    2     ALTRETURN;

  16778  2 002765   200264 221300                    LDX1  ! FID_RESULTS+10,,AUTO
         2 002766   000000 702211                    TSX2  ! 0,X1

     1224    16779    2   END RUEXIT;
     1225    16780        %EJECT;
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:156  
     1226    16781        /*I*   NAME:    EXIT_SETUP
     1227    16782               PURPOSE:    To set up the M$CPEXIT FPT from the text name passed
     1228    16783                        to the routine.
     1229    16784               CALL:    CALL EXIT_SETUP(P$S) ALTRET(error address);
     1230    16785        */
     1231    16786    1   EXIT_SETUP: PROC(P$S)    ALTRET;

  16786  2 002767   200264 741300       EXIT_SETUP   STX1  ! FID_RESULTS+10,,AUTO

     1232    16787        /**/
     1233    16788               %PARSE$SYM(NAME=P$S,STCLASS="");
     1234    16826        /*
     1235    16827        *****  Begin procedure
     1236    16828        */
     1237    16829    2     FPT_FID = CFPT_FID;

  16829  2 002770   000100 100400                    MLR     fill='000'O
         2 002771   000000 000140 xsym               ADSC9   CFPT_FID                 cn=0,n=96
         2 002772   200024 000140                    ADSC9   FPT_FID,,AUTO            cn=0,n=96

     1238    16830    2     FPT_FID.V_ = VECTOR(FPT_FID.V);

  16830  2 002773   000007 235000 3                  LDA     7
         2 002774   200266 452500                    STP2    @P$S+1,,AUTO
         2 002775   200266 236100                    LDQ     @P$S+1,,AUTO
         2 002776   000050 036003                    ADLQ    40,DU
         2 002777   200024 757100                    STAQ    FPT_FID,,AUTO

     1239    16831    2     FPT_FID.TEXTFID_ = VECTOR(P$S.TEXT);

  16831  2 003000   200265 470500                    LDP0    @P$S,,AUTO
         2 003001   000004 236100                    LDQ     4,,PR0
         2 003002   000033 772000                    QRL     27
         2 003003   000064 737000                    LLS     52
         2 003004   000140 135007                    SBLA    96,DL
         2 003005   200265 236100                    LDQ     @P$S,,AUTO
         2 003006   000062 036000 3                  ADLQ    50
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:157  
         2 003007   200026 757100                    STAQ    FPT_FID+2,,AUTO

     1240    16832    2     FPT_FID.NAME_ = VECTOR(FID_NAME);

  16832  2 003010   000003 235000 3                  LDA     3
         2 003011   200266 452500                    STP2    @P$S+1,,AUTO
         2 003012   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003013   000224 036003                    ADLQ    148,DU
         2 003014   200030 757100                    STAQ    FPT_FID+4,,AUTO

     1241    16833    2     FPT_FID.ACCT_ = VECTOR(FID_ACCT);

  16833  2 003015   000004 235000 3                  LDA     4
         2 003016   200266 452500                    STP2    @P$S+1,,AUTO
         2 003017   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003020   000234 036003                    ADLQ    156,DU
         2 003021   200032 757100                    STAQ    FPT_FID+6,,AUTO

     1242    16834    2     FPT_FID.PASS_ = VECTOR(FID_PASS);

  16834  2 003022   000004 235000 3                  LDA     4
         2 003023   200266 452500                    STP2    @P$S+1,,AUTO
         2 003024   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003025   000236 036003                    ADLQ    158,DU
         2 003026   200034 757100                    STAQ    FPT_FID+8,,AUTO

     1243    16835    2     FPT_FID.SN_ = VECTOR(FID_SN);

  16835  2 003027   000003 235000 3                  LDA     3
         2 003030   200266 452500                    STP2    @P$S+1,,AUTO
         2 003031   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003032   000240 036003                    ADLQ    160,DU
         2 003033   200036 757100                    STAQ    FPT_FID+10,,AUTO

     1244    16836    2     FPT_FID.WSN_ = VECTOR(FID_WSN);

  16836  2 003034   000004 235000 3                  LDA     4
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:158  
         2 003035   200266 452500                    STP2    @P$S+1,,AUTO
         2 003036   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003037   000250 036003                    ADLQ    168,DU
         2 003040   200040 757100                    STAQ    FPT_FID+12,,AUTO

     1245    16837    2     FPT_FID.ASN_ = VECTOR(FID_ASN);

  16837  2 003041   777640 235007                    LDA     -96,DL
         2 003042   200266 452500                    STP2    @P$S+1,,AUTO
         2 003043   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003044   000015 036003                    ADLQ    13,DU
         2 003045   200042 757100                    STAQ    FPT_FID+14,,AUTO

     1246    16838    2     FPT_FID.RES_ = VECTOR(FID_RES);

  16838  2 003046   777640 235007                    LDA     -96,DL
         2 003047   200266 452500                    STP2    @P$S+1,,AUTO
         2 003050   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003051   000016 036003                    ADLQ    14,DU
         2 003052   200044 757100                    STAQ    FPT_FID+16,,AUTO

     1247    16839    2     FPT_FID.RESULTS_ = VECTOR(FID_RESULTS);

  16839  2 003053   000063 235000 3                  LDA     51
         2 003054   200266 452500                    STP2    @P$S+1,,AUTO
         2 003055   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003056   000252 036003                    ADLQ    170,DU
         2 003057   200046 757100                    STAQ    FPT_FID+18,,AUTO

     1248    16840    2     CALL M$FID(FPT_FID) ALTRET(ERR_SETUP);

  16840  2 003060   200024 630500                    EPPR0   FPT_FID,,AUTO
         2 003061   420001 713400                    CLIMB   alt,+8193
         2 003062   404400 401760                    pmme    nvectors=10
         2 003063   003146 702000 2                  TSX2    ERR_SETUP

     1249    16841        /**/
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:159  
     1250    16842    2     SEG$2.FPT_CPEXIT$->FPT$CPEXIT = CFPT_CPEXIT;

  16842  2 003064   000000 470400 xsym               LDP0    SEG2$
         2 003065   000166 471500                    LDP1    118,,PR0
         2 003066   000100 100400                    MLR     fill='000'O
         2 003067   000000 000070 xsym               ADSC9   CFPT_CPEXIT              cn=0,n=56
         2 003070   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

     1251    16843    2     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V_ =

  16843  2 003071   000166 471500                    LDP1    118,,PR0
         2 003072   000004 235000 3                  LDA     4
         2 003073   200266 451500                    STP1    @P$S+1,,AUTO
         2 003074   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003075   000014 036003                    ADLQ    12,DU
         2 003076   100012 757100                    STAQ    10,,PR1

     1252    16844    2          VECTOR(SEG$2.FPT_CPEXIT$->FPT$CPEXIT.V);
     1253    16845    2     SEG$2.FPT_CPEXIT$->FPT$CPEXIT.NAME_ = VECTOR(FID_NAME);

  16845  2 003077   000166 471500                    LDP1    118,,PR0
         2 003100   000003 235000 3                  LDA     3
         2 003101   200266 452500                    STP2    @P$S+1,,AUTO
         2 003102   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003103   000224 036003                    ADLQ    148,DU
         2 003104   100000 757100                    STAQ    0,,PR1

     1254    16846    2     IF FID_RESULTS.ACCT = %YES#

  16846  2 003105   200252 236100                    LDQ     FID_RESULTS,,AUTO
         2 003106   200000 316003                    CANQ    65536,DU
         2 003107   003117 600000 2                  TZE     s:16850

     1255    16847    2        THEN
     1256    16848    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_ = VECTOR(FID_ACCT);

  16848  2 003110   000166 471500                    LDP1    118,,PR0
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:160  
         2 003111   000004 235000 3                  LDA     4
         2 003112   200266 452500                    STP2    @P$S+1,,AUTO
         2 003113   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003114   000234 036003                    ADLQ    156,DU
         2 003115   100002 757100                    STAQ    2,,PR1
         2 003116   003122 710000 2                  TRA     s:16851

     1257    16849    2        ELSE
     1258    16850    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.ACCT_ = VECTOR(BLANKS);

  16850  2 003117   000166 471500                    LDP1    118,,PR0
         2 003120   000050 237000 3                  LDAQ    40
         2 003121   100002 757100                    STAQ    2,,PR1

     1259    16851    2     IF FID_RESULTS.PASS = %YES#

  16851  2 003122   200252 236100                    LDQ     FID_RESULTS,,AUTO
         2 003123   100000 316003                    CANQ    32768,DU
         2 003124   003133 600000 2                  TZE     s:16854

     1260    16852    2        THEN
     1261    16853    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.PASS_ = VECTOR(FID_PASS);

  16853  2 003125   000166 471500                    LDP1    118,,PR0
         2 003126   000004 235000 3                  LDA     4
         2 003127   200266 452500                    STP2    @P$S+1,,AUTO
         2 003130   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003131   000236 036003                    ADLQ    158,DU
         2 003132   100004 757100                    STAQ    4,,PR1

     1262    16854    2     IF FID_RESULTS.SN = %YES#

  16854  2 003133   200252 236100                    LDQ     FID_RESULTS,,AUTO
         2 003134   040000 316003                    CANQ    16384,DU
         2 003135   003144 600000 2                  TZE     s:16857

     1263    16855    2        THEN
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:161  
     1264    16856    2           SEG$2.FPT_CPEXIT$->FPT$CPEXIT.PSID_ = VECTOR(FID_SN.SN#(0));

  16856  2 003136   000166 471500                    LDP1    118,,PR0
         2 003137   000056 235000 3                  LDA     46
         2 003140   200266 452500                    STP2    @P$S+1,,AUTO
         2 003141   200266 236100                    LDQ     @P$S+1,,AUTO
         2 003142   000241 036003                    ADLQ    161,DU
         2 003143   100006 757100                    STAQ    6,,PR1

     1265    16857    2     RETURN;

  16857  2 003144   200264 221300                    LDX1  ! FID_RESULTS+10,,AUTO
         2 003145   000001 702211                    TSX2  ! 1,X1

     1266    16858        /**/
     1267    16859    2   ERR_SETUP:
     1268    16860    2     CPOS = P$S.CPOS;

  16860  2 003146   200265 470500       ERR_SETUP    LDP0    @P$S,,AUTO
         2 003147   000002 235100                    LDA     2,,PR0
         2 003150   200012 755100                    STA     CPOS,,AUTO

     1269    16861    2     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$TCB.ALT$->B$ALT.ERR);

  16861  2 003151   000000 471400 xsym               LDP1    B$TCB$
         2 003152   100000 473500                    LDP3    0,,PR1
         2 003153   000000 236000 xsym               LDQ     SEG2$
         2 003154   000003 036003                    ADLQ    3,DU
         2 003155   200266 756100                    STQ     @P$S+1,,AUTO
         2 003156   300102 634500                    EPPR4   66,,PR3
         2 003157   200271 454500                    STP4    @P$S+4,,AUTO
         2 003160   200012 633500                    EPPR3   CPOS,,AUTO
         2 003161   200270 453500                    STP3    @P$S+3,,AUTO
         2 003162   200266 635500                    EPPR5   @P$S+1,,AUTO
         2 003163   200267 455500                    STP5    @P$S+2,,AUTO
         2 003164   200267 630500                    EPPR0   @P$S+2,,AUTO
         2 003165   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:162  
         2 003166   000000 701000 xent               TSX1    CXP$POSTERR
         2 003167   000000 011000                    NOP     0

     1270    16862    2     ALTRETURN;

  16862  2 003170   200264 221300                    LDX1  ! FID_RESULTS+10,,AUTO
         2 003171   000000 702211                    TSX2  ! 0,X1
     1271    16863    2   END EXIT_SETUP;
     1272    16864    1   END CPA$CMDS;

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:163  
--  Include file information  --

   CX_MACROS_M.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AZ_SUBS_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   AZ_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPA$CMDS.
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:164  

 **** Variables and constants ****

  ****  Section 001 RoData CPA$CMDS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)     r     1 BLANKS                    10-0-0/c STRC(54)    r     1 DELTATXTC
    12-0-0/c STRC(45)    r     1 EDITTXTC                  21-0-0/c STRC(108)   r     1 EFTTXTC
    30-0-0/w STRC        r     1 E_BACKDISKONLY            31-0-0/w STRC        r     1 E_CANTBACKUP
    33-0-0/w STRC        r     1 E_ONEXIST                 32-0-0/w STRC        r     1 E_OPABORT
    24-0-0/c STRC(72)    r     1 FEPLINKTXTC                4-0-0/d STRC(144)   r     1 FPT_XFLUSH
    26-0-0/c STRC(45)    r     1 IBEXTEXTC                 17-0-0/c STRC(45)    r     1 LINKTXTC
    16-0-0/c STRC        r     1 PCLTXTC                   14-0-0/c STRC(54)    r     1 SIXEDITTXTC
     2-0-0/c CHAR(8)     r     1 SYSTXT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P$PCB                   265-0-0/w PTR         r     1 @P$S
     4-0-0/w PTR         r     1 BLK$                      12-0-0/w UBIN        r     1 CPOS
    17-0-0/w STRC(180)   r     1 CPSL_PARAM                 5-0-0/w PTR         r     1 FID$
   234-0-0/c STRC(72)    r     1 FID_ACCT                  15-0-0/w UBIN(9)     r     1 FID_ASN
   224-0-0/c STRC(288)   r     1 FID_NAME                 236-0-0/c STRC(72)    r     1 FID_PASS
    16-0-0/c CHAR(4)     r     1 FID_RES                  252-0-0/d STRC(324)   r     1 FID_RESULTS
   240-0-0/d STRC(252)   r     1 FID_SN                   250-0-0/c STRC(72)    r     1 FID_WSN
   160-0-0/d STRC(1080)  r     1 FPT_CLOSE                 24-0-0/d STRC(864)   r     1 FPT_FID
   146-0-0/d STRC(360)   r     1 FPT_OCMSG                 54-0-0/d STRC(2088)  r     1 FPT_OPEN
    10-0-0/w SBIN        r     1 I                         11-0-0/w SBIN        r     1 J
   216-0-0/w STRC(216)   r     1 LOGOFF                    *0-0-0/w STRC(504)   r     1 P$PCB
    *0-0-0/w ASTR(153)   r     1 P$S                       13-0-0/b STRC(2)     r     1 PRFLAGS
     6-0-0/w PTR         r     1 TA$                        7-0-0/w PTR         r     1 TB$

  ****  SYMREF variables  ****

PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:165  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 B$XL_UPPER$                0-0-0/d STRC(1080)  r     1 CFPT_CLOSE
     0-0-0/d STRC(504)   r     1 CFPT_CPEXIT                0-0-0/d STRC(864)   r     1 CFPT_FID
     0-0-0/d STRC(360)   r     1 CFPT_OCMSG                 0-0-0/d STRC(2088)  r     1 CFPT_OPEN
     0-0-0/d STRC(27)    r     1 LISTDCB                    0-0-0/w UBIN        r     1 M$IBEX1_NUM
     0-0-0/w UBIN        r     1 M$IBEX_NUM                 0-0-0/d STRC(27)    r     1 OBJECTDCB
     0-0-0/w PTR         r     1 SEG2$                      0-0-0/w PTR         r     1 SEG3$
     0-0-0/d STRC(27)    r     1 SOURCEDCB                  0-0-0/d STRC(27)    r     1 UPDATEDCB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1440)  r     1 AMR$REC$                   0-0-0/w STRC(18576) r     1 AS$USERS
     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(2448)  r     1 B$EXCFR
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w CHAR(256)   r     1 CP$BUFF                    0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/d STRC(504)   r     1 FPT$CPEXIT                 0-0-0/d STRC(1512)  r     1 GET$CMD
     0-0-0/w STRC(144)   r     1 P$B                        0-0-0/w ASTR(153)   r     1 P$S
     0-0-0/w STRC(6264)  r     1 SEG$2                      0-0-0/c ASTR(9)     r     1 TEXT$C
     0-0-0/d STRC(4608)  r     1 TRANSTBL                   0-0-0/d STRC(1296)  r     1 XUG$INIT
     0-0-0/d STRC(9612)  r     1 XUG$PARAMS
     0-0-0/c UBIN(9)     r     1 XUG$RLT(0:0)


   Procedure CPA$CMDS requires 1658 words for executable code.
   Procedure CPA$CMDS requires 188 words of local(AUTO) storage.

    No errors detected in file CPA$CMDS.:E05TSI    .
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:166  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:167  
          MINI XREF LISTING

AMR$REC$.ACSVEH_
     13676**DCL     13677--REDEF
AMR$REC$.ALTKEYS_
     13682**DCL     13683--REDEF   13683--REDEF
AMR$REC$.HDR_
     13681**DCL     13682--REDEF
AMR$REC$.TAB_
     13680**DCL     13681--REDEF
AMR$REC$.UHL_
     13674**DCL     13675--REDEF   13675--REDEF
AMR$REC$.V.FSN#
     13714**DCL     13714--REDEF   13714--REDEF
AMR$REC$.V.FUN#
     13693**DCL     16326<<ASSIGN  16355<<ASSIGN
AMR$REC$.WSN_
     13680**DCL     13680--REDEF
AS$USERS.BANNER_PERM
     13510**DCL     13511--REDEF
AS$USERS.BUDGET.MACCT
     13415**DCL     13419--REDEF
AS$USERS.BUDGET.MAX_PROJECTS
     13428**DCL     13431--REDEF
AS$USERS.BUDGET.PACCUM
     13411**DCL     13413--REDEF
AS$USERS.BUDGET.PMAXC
     13406**DCL     13408--REDEF
AS$USERS.LASTCPROC.NAME
     13469**DCL     15913--ASSIGN  15916--ASSIGN
AS$USERS.SETUP_CHRA.TXT
     13526**DCL     13527--REDEF   13528--REDEF
AZA$LOGOFF
     13016**DCL-ENT 15894--CALL
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:168  
B$ALT.CODE
     13358**DCL     13358--REDEF   13359--REDEF   13359--REDEF
B$ALT.DCB#
     13359**DCL     15733<>CALL    16562<>CALL
B$ALT.ERR
     13359**DCL     15733<>CALL    16061<>CALL    16562<>CALL    16861<>CALL
B$ALT.ERR.CODE
     13360**DCL     16558>>IF
B$ALT.ERR.ERR#
     13360**DCL     13360--REDEF
B$ALT.EVID
     13359**DCL     13359--REDEF   13359--REDEF
B$EXCFR.ASL
     13365**DCL     13365--REDEF
B$EXCFR.ERR
     13379**DCL     16776>>ASSIGN
B$EXCFR.ERR.ERR#
     13379**DCL     13379--REDEF
B$EXCFR.EVID
     13378**DCL     13378--REDEF   13379--REDEF
B$EXCFR.IR
     13366**DCL     13366--REDEF
B$EXCFR.PREVSZ
     13365**DCL     13365--REDEF
B$EXCFR.SUBC
     13377**DCL     13377--REDEF   13378--REDEF   13378--REDEF
B$JIT.CCARS
      2771**DCL     15802<<ASSIGN  15803>>IF      15805<<ASSIGN  15811<<ASSIGN  16751<<ASSIGN
B$JIT.CCBUF
      2771**DCL     15800<<CALLBLT 15810<<ASSIGN  16765<<ASSIGN  16771<<CALLBLT
B$JIT.CCDISP
      2771**DCL     15960<<ASSIGN  15999<<ASSIGN  16031<<ASSIGN  16091<<ASSIGN  16177<<ASSIGN  16210<<ASSIGN
     16246<<ASSIGN  16303<<ASSIGN  16396<<ASSIGN  16602<<ASSIGN  16650<<ASSIGN
B$JIT.CPFLAGS1
      2772**DCL     15789>>IF      15806<<ASSIGN  15806>>ASSIGN  15813<<ASSIGN  15813>>ASSIGN  15816<<ASSIGN
     15816>>ASSIGN  15907>>IF      15907>>IF      15918<<ASSIGN  15918>>ASSIGN  15957>>IF      15963<<ASSIGN
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:169  
     15963>>ASSIGN  16240<<ASSIGN  16240>>ASSIGN  16669<<ASSIGN  16669>>ASSIGN  16672<<ASSIGN  16672>>ASSIGN
     16703<<ASSIGN  16703>>ASSIGN  16704<<ASSIGN  16704>>ASSIGN  16732>>IF      16737<<ASSIGN  16737>>ASSIGN
     16738<<ASSIGN  16738>>ASSIGN
B$JIT.CPFLAGS1.JSTEP
      2772**DCL     16746>>IF
B$JIT.CPFLAGS1.LNKPMME
      2773**DCL     16746>>IF
B$JIT.CPFLAGS1.SLEAZE
      2777**DCL      2777--REDEF
B$JIT.ERR.MID
      2684**DCL      2684--REDEF
B$JIT.FEXT
      2851**DCL     16381<<ASSIGN  16391<<ASSIGN  16496<<ASSIGN  16514<<ASSIGN
B$JIT.JRESPEAK
      2845**DCL      2846--REDEF
B$JIT.JSLEV
      2820**DCL     15883<<ASSIGN  15885<<ASSIGN  15887<<ASSIGN
B$JIT.MODE
      2678**DCL     15837>>IF      15913>>ASSIGN  15916>>ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
      2954**DCL      2954--REDEF    2955--REDEF
B$JIT.PNR
      2858**DCL      2858--REDEF
B$JIT.PRFLAGS.LIST
      2767**DCL     16389<<ASSIGN  16513<<ASSIGN
B$JIT.PRFLAGS.LS
      2767**DCL     16388<<ASSIGN  16512<<ASSIGN
B$JIT.PRFLAGS.NSSYNTAX
      2767**DCL     16401<<ASSIGN  16516<<ASSIGN
B$JIT.PRFLAGS.OU
      2767**DCL     16378<<ASSIGN  16494<<ASSIGN
B$JIT.PRFLAGS.OUTPUT
      2767**DCL     16379<<ASSIGN  16495<<ASSIGN
B$JIT.PRFLAGS.SI
      2767**DCL     16338<<ASSIGN  16445>>IF      16459<<ASSIGN
B$JIT.PRFLAGS.UI
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:170  
      2767**DCL     16367<<ASSIGN  16461>>IF      16475<<ASSIGN
B$JIT.PRIV.ACTIVE
      2684**DCL     15693<<ASSIGN  15693>>ASSIGN  15728<<ASSIGN  15728>>ASSIGN  15738<<ASSIGN  15738>>ASSIGN
B$JIT.PRIV.JOB
      2727**DCL     15726>>IF      15736>>IF
B$JIT.RNST
      2862**DCL     15778>>IF      15787<<ASSIGN  15787>>ASSIGN
B$JIT.TSLINE
      2952**DCL      2953--REDEF
B$JIT.USRDCB
      2832**DCL     15897<>CALL
B$JIT.USRERR
      2819**DCL     15897<>CALL    16323<<ASSIGN  16335<<ASSIGN  16352<<ASSIGN  16364<<ASSIGN  16440<>CALL
     16441<<ASSIGN  16456<<ASSIGN  16472<<ASSIGN  16491<<ASSIGN  16509<<ASSIGN  16521<>CALL    16522<<ASSIGN
B$JIT.USRERR.CODE
      2819**DCL     16438>>IF      16518>>IF
B$JIT.USRRNST
      2819**DCL     15836>>ASSIGN  16233>>IF
B$JIT$
     12706**DCL      2678--IMP-PTR 15693>>ASSIGN  15693>>ASSIGN  15726>>IF      15728>>ASSIGN  15728>>ASSIGN
     15736>>IF      15738>>ASSIGN  15738>>ASSIGN  15778>>IF      15787>>ASSIGN  15787>>ASSIGN  15789>>IF
     15800>>CALLBLT 15802>>ASSIGN  15803>>IF      15805>>ASSIGN  15806>>ASSIGN  15806>>ASSIGN  15810>>ASSIGN
     15811>>ASSIGN  15813>>ASSIGN  15813>>ASSIGN  15816>>ASSIGN  15816>>ASSIGN  15836>>ASSIGN  15837>>IF
     15883>>ASSIGN  15885>>ASSIGN  15887>>ASSIGN  15897>>CALL    15897>>CALL    15907>>IF      15907>>IF
     15913>>ASSIGN  15916>>ASSIGN  15918>>ASSIGN  15918>>ASSIGN  15957>>IF      15960>>ASSIGN  15963>>ASSIGN
     15963>>ASSIGN  15999>>ASSIGN  16031>>ASSIGN  16091>>ASSIGN  16177>>ASSIGN  16210>>ASSIGN  16233>>IF
     16240>>ASSIGN  16240>>ASSIGN  16246>>ASSIGN  16303>>ASSIGN  16323>>ASSIGN  16335>>ASSIGN  16338>>ASSIGN
     16352>>ASSIGN  16364>>ASSIGN  16367>>ASSIGN  16378>>ASSIGN  16379>>ASSIGN  16381>>ASSIGN  16388>>ASSIGN
     16389>>ASSIGN  16391>>ASSIGN  16396>>ASSIGN  16401>>ASSIGN  16438>>IF      16440>>CALL    16441>>ASSIGN
     16445>>IF      16456>>ASSIGN  16459>>ASSIGN  16461>>IF      16472>>ASSIGN  16475>>ASSIGN  16491>>ASSIGN
     16494>>ASSIGN  16495>>ASSIGN  16496>>ASSIGN  16509>>ASSIGN  16512>>ASSIGN  16513>>ASSIGN  16514>>ASSIGN
     16516>>ASSIGN  16518>>IF      16521>>CALL    16522>>ASSIGN  16602>>ASSIGN  16650>>ASSIGN  16669>>ASSIGN
     16669>>ASSIGN  16672>>ASSIGN  16672>>ASSIGN  16703>>ASSIGN  16703>>ASSIGN  16704>>ASSIGN  16704>>ASSIGN
     16732>>IF      16737>>ASSIGN  16737>>ASSIGN  16738>>ASSIGN  16738>>ASSIGN  16746>>IF      16746>>IF
     16751>>ASSIGN  16765>>ASSIGN  16771>>CALLBLT
B$TCB.ALT$
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:171  
     13354**DCL     15733>>CALL    15733>>CALL    16061>>CALL    16558>>IF      16562>>CALL    16562>>CALL
     16776>>ASSIGN  16861>>CALL
B$TCB$
     12708**DCL     13354--IMP-PTR 15733>>CALL    15733>>CALL    16061>>CALL    16558>>IF      16562>>CALL
     16562>>CALL    16776>>ASSIGN  16861>>CALL
B$XL_UPPER$
     13044**DCL     13045--IMP-PTR 16418>>CALLBLT 16429>>CALLBLT 16660>>CALLBLT
BACKUP10
     15732**LABEL   15705--CALLALT
BACKUP20
     15736**LABEL   15681--CALLALT 15711--GOTO    15724--CALLALT
BLANKS
     13035**DCL     16421>>IF      16423--ASSIGN  16850--ASSIGN
BLK$
     13028**DCL     13962--IMP-PTR 14008--IMP-PTR 15951<<ASSIGN  15952>>IF      15956>>ASSIGN  15956>>ASSIGN
     16101<<ASSIGN  16102>>CALL    16102>>CALL    16298<<ASSIGN  16305>>DOWHILE 16306>>ASSIGN  16315<>CALL
     16344<>CALL    16377<>CALL    16387<>CALL    16410>>CALL    16410>>CALL    16534<<ASSIGN  16535>>ASSIGN
     16536>>CALL    16536>>CALL    16537>>IF      16649<<ASSIGN  16651>>CALL    16651>>CALL    16663>>IF
     16665>>DOCASE  16667>>ASSIGN  16667>>ASSIGN  16702<<ASSIGN  16705>>IF      16707>>ASSIGN  16707>>ASSIGN
CAMR_REC.ACSVEH_
     11745**DCL     11746--REDEF
CAMR_REC.ALTKEYS_
     11751**DCL     11752--REDEF   11752--REDEF
CAMR_REC.HDR_
     11750**DCL     11751--REDEF
CAMR_REC.TAB_
     11749**DCL     11750--REDEF
CAMR_REC.UHL_
     11743**DCL     11744--REDEF   11744--REDEF
CAMR_REC.V.FSN#
     11783**DCL     11783--REDEF   11783--REDEF
CAMR_REC.WSN_
     11749**DCL     11749--REDEF
CFPT_CLOSE
     10587**DCL     15717>>ASSIGN  15746>>ASSIGN  15850>>ASSIGN  15864>>ASSIGN
CFPT_CLOSE.SN_
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:172  
     10587**DCL     10587--REDEF
CFPT_CLOSE.UTL_
     10588**DCL     10588--REDEF
CFPT_CLOSE.V.EXPIRE#
     10602**DCL     10602--REDEF
CFPT_CLOSE.V.TYPE#
     10600**DCL     10600--REDEF
CFPT_CLOSE.V.XTNSIZE#
     10597**DCL     10597--REDEF   10599--REDEF
CFPT_CPEXIT
     10870**DCL     15904>>ASSIGN  15948>>ASSIGN  15994>>ASSIGN  16026>>ASSIGN  16086>>ASSIGN  16131>>ASSIGN
     16172>>ASSIGN  16205>>ASSIGN  16241>>ASSIGN  16597>>ASSIGN  16842>>ASSIGN
CFPT_FID
     10894**DCL     16829>>ASSIGN
CFPT_OCMSG
     11173**DCL     15833>>ASSIGN
CFPT_OPEN
     10520**DCL     15695>>ASSIGN  16540>>ASSIGN
CFPT_OPEN.ACSVEH_
     10522**DCL     10523--REDEF
CFPT_OPEN.ALTKEYS_
     10528**DCL     10529--REDEF   10529--REDEF
CFPT_OPEN.HDR_
     10527**DCL     10528--REDEF
CFPT_OPEN.TAB_
     10526**DCL     10527--REDEF
CFPT_OPEN.UHL_
     10520**DCL     10521--REDEF   10521--REDEF
CFPT_OPEN.V.FSN#
     10560**DCL     10560--REDEF   10560--REDEF
CFPT_OPEN.WSN_
     10526**DCL     10526--REDEF
CFPT_READ.STATION_
     10626**DCL     10627--REDEF
CFPT_READ.V.DVBYTE.REREAD#
     10638**DCL     10638--REDEF
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:173  
CFPT_READ.V.INDX#
     10636**DCL     10636--REDEF
CFPT_READUC.STATION_
     10996**DCL     10997--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
     11008**DCL     11008--REDEF
CFPT_READUC.V.INDX#
     11006**DCL     11006--REDEF
CFPT_TRTN.V.IR#
     11232**DCL     11233--REDEF
CFPT_WRITE.STATION_
     10664**DCL     10664--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
     10671**DCL     10671--REDEF
CFPT_WRITEUC.STATION_
     10964**DCL     10964--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
     10971**DCL     10971--REDEF
CFPT_XXX.V.STEPCC#
     11944**DCL     11944--REDEF
CGETCMD.OUT$
     11965**DCL     11971--REDEF
CNTU_SAVE
     16567**LABEL   16560--GOTO
CP$BUFF
     15578**DCL     15800>>CALLBLT 15810>>ASSIGN  16752>>CALLBLT 16753>>CALLBLT 16757>>CALLBLT 16762<<CALLBLT
     16765>>ASSIGN
CPA$BYE40
     15897**LABEL   15894--CALLALT
CPA$BYE45
     15904**LABEL   15854--CALLALT 15868--CALLALT
CPA$BYE50
     15928**LABEL   15912--CALLALT 15925--CALLALT
CPA$DEBUG50
     15965**LABEL   15967--CALLALT
CPA$START55
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:174  
     16669**LABEL   16651--CALLALT 16674--CALLALT
CPC$EXIT
     13019**DCL-ENT 15925--CALL    16104--CALL    16135--CALL    16568--CALL    16774--CALL
CPC$OPEN_LL
     13026**DCL-ENT 15872--CALL
CPC$QUIT
     13020**DCL-ENT 15817--CALL
CPC$RDUSERS
     13027**DCL-ENT 15912--CALL
CPC$WRITEMSGE
     13022**DCL-ENT 15685--CALL    15710--CALL    15786--CALL    15897--CALL
CPE$GENRUAM
     13023**DCL-ENT 16377--CALL    16387--CALL
CPOS
     13034**DCL     15732<<ASSIGN  15733<>CALL    16307<<ASSIGN  16440<>CALL    16521<>CALL    16535<<ASSIGN
     16550<>CALL    16562<>CALL    16860<<ASSIGN  16861<>CALL
CPSL_PARAM
     13251**DCL     16308<<ASSIGN  16314<<ASSIGN  16315<>CALL    16327<>CALL    16343<<ASSIGN  16344<>CALL
     16356<>CALL    16448<>CALL    16464<>CALL    16483<>CALL    16501<>CALL
CPSL_PARAM.ERRCODE
     13259**DCL     16316>>IF      16328>>IF      16345>>IF      16357>>IF      16449>>IF      16465>>IF
     16484>>IF      16502>>IF
CPSL_PARAM.FLAGS.REPORTED_TO_USER
     13256**DCL     16318>>IF      16323>>ASSIGN  16330>>IF      16335>>ASSIGN  16347>>IF      16352>>ASSIGN
     16359>>IF      16364>>ASSIGN  16451>>IF      16456>>ASSIGN  16467>>IF      16472>>ASSIGN  16486>>IF
     16491>>ASSIGN  16504>>IF      16509>>ASSIGN
CVLP_TRMCTL.BREAKCOUNT
     11556**DCL     11557--REDEF
CVLP_WINDOW.FWINDOW#
     11652**DCL     11652--REDEF   11653--REDEF
CXB$BLDAM
     13017**DCL-ENT 16315--CALL    16344--CALL
CXB$DELAM
     13018**DCL-ENT 16448--CALL    16464--CALL    16483--CALL    16501--CALL
CXC$WRITEAM
     13021**DCL-ENT 16327--CALL    16356--CALL
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:175  
CXP$POSTERR
     13024**DCL-ENT 15733--CALL    16061--CALL    16440--CALL    16521--CALL    16550--CALL    16562--CALL
     16861--CALL
DELTATXTC
     15307**DCL     15954>>ASSIGN  16244>>ASSIGN  16671>>ASSIGN  16710>>ASSIGN
EDIT50
     15999**LABEL   16000--CALLALT
EDITTXTC
     15334**DCL     15997--ASSIGN
EFT50
     16031**LABEL   16032--CALLALT
EFTTXTC
     15417**DCL     16029--ASSIGN
ERR_SETUP IN PROCEDURE EXIT_SETUP
     16860**LABEL   16840--CALLALT
EXIT_ALT
     16061**LABEL   16057--CALLALT
EXIT_SETUP
     16786**PROC    15681--CALL    16102--CALL    16410--CALL    16536--CALL    16651--CALL
E_BACKDISKONLY
     15593**DCL     15685<>CALL
E_CANTBACKUP
     15613**DCL     15710<>CALL
E_GET_C$EXIT
     16108**LABEL   16104--CALLALT
E_GET_SETUP
     16106**LABEL   16102--CALLALT
E_GO_C$EXIT
     16140**LABEL   16135--CALLALT
E_OCMSG
     15847**LABEL   15842--CALLALT
E_ONEXIST
     15653**DCL     16550<>CALL
E_OPABORT
     15633**DCL     15786<>CALL
E_RUEXIT_C$EXIT IN PROCEDURE RUEXIT
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:176  
     16776**LABEL   16774--CALLALT
E_SAVE_C$EXIT
     16572**LABEL   16568--CALLALT
E_SAVE_M$OPEN
     16558**LABEL   16548--CALLALT
E_SAVE_SETUP
     16570**LABEL   16536--CALLALT
F$DCB.ACTPOS
     13932**DCL     13932--REDEF
F$DCB.ARS#
     13906**DCL     13906--REDEF
F$DCB.ASN#
     13921**DCL     15837>>IF
F$DCB.ATTR
     13925**DCL     13926--REDEF
F$DCB.BORROW
     13940**DCL     13940--REDEF   13940--REDEF   13940--REDEF
F$DCB.BUPF
     13910**DCL     15707>>IF
F$DCB.DCBNAME.L
     13954**DCL     13954--IMP-SIZ
F$DCB.DESC
     13913**DCL     15722>>ASSIGN
F$DCB.EOMCHAR#
     13910**DCL     13910--REDEF
F$DCB.FCD#
     13919**DCL     15742>>IF      15847>>IF      15860>>IF
F$DCB.FLDID
     13935**DCL     13935--REDEF
F$DCB.FORM$
     13929**DCL     13929--REDEF
F$DCB.FSECT
     13945**DCL     13945--REDEF
F$DCB.FSN#
     13922**DCL     13922--REDEF   13922--REDEF   13923--REDEF
F$DCB.HEADER$
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:177  
     13928**DCL     13928--REDEF
F$DCB.IXTNSIZE#
     13926**DCL     13926--REDEF
F$DCB.LASTSTA$
     13915**DCL     13915--REDEF
F$DCB.LVL
     13941**DCL     13941--REDEF
F$DCB.NAME#.C
     13916**DCL     13916--REDEF
F$DCB.NOEOF
     13938**DCL     13938--REDEF
F$DCB.NRECS#
     13927**DCL     13927--REDEF
F$DCB.NRECX
     13946**DCL     13946--REDEF
F$DCB.OHDR
     13938**DCL     13938--REDEF
F$DCB.ORG#
     13921**DCL     13921--REDEF
F$DCB.PRECNO
     13944**DCL     13944--REDEF
F$DCB.RCSZ
     13950**DCL     13950--REDEF
F$DCB.RES#
     13917**DCL     13917--REDEF
F$DCB.SETX
     13929**DCL     13929--REDEF
F$DCB.TAB$
     13929**DCL     13929--REDEF
F$DCB.TDA
     13943**DCL     13944--REDEF
F$DCB.WSN#
     13917**DCL     13917--REDEF
FEPLINK50
     16091**LABEL   16092--CALLALT
FEPLINKTXTC
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:178  
     15445**DCL     16089--ASSIGN
FID$
     13029**DCL     16313<<ASSIGN  16315<>CALL    16342<<ASSIGN  16344<>CALL    16376<<ASSIGN  16377<>CALL
     16386<<ASSIGN  16387<>CALL
FID_ACCT
     15512**DCL     15698--ASSIGN  16426--ASSIGN  16543--ASSIGN  16833--ASSIGN  16848--ASSIGN
FID_ACCT.ACCT#
     15512**DCL     16421>>IF      16427>>IF      16658>>IF
FID_ASN
     13040**DCL     15682>>IF      15700>>ASSIGN  16545>>ASSIGN  16837--ASSIGN
FID_NAME
     15499**DCL     15697--ASSIGN  15954<<ASSIGN  15956<<ASSIGN  15959--ASSIGN  15964>>ASSIGN  16542--ASSIGN
     16832--ASSIGN  16845--ASSIGN
FID_NAME.NAME#
     15499**DCL     16418<<CALLBLT 16418>>CALLBLT 16429<<CALLBLT 16429>>CALLBLT 16660<<CALLBLT 16660>>CALLBLT
FID_PASS
     15525**DCL     15699--ASSIGN  16544--ASSIGN  16834--ASSIGN  16853--ASSIGN
FID_RES
     13041**DCL     16838--ASSIGN
FID_RESULTS
     15564**DCL     16839--ASSIGN
FID_RESULTS.ACCT
     15564**DCL     16414>>IF      16655>>IF      16846>>IF
FID_RESULTS.PASS
     15564**DCL     16851>>IF
FID_RESULTS.SN
     15564**DCL     16854>>IF
FID_SN
     15538**DCL     15702--ASSIGN  16835--ASSIGN
FID_SN.SN#
     15538**DCL     16856--ASSIGN
FID_WSN
     15551**DCL     15703--ASSIGN  16836--ASSIGN
FPT$CPEXIT
     13596**DCL     15904<<ASSIGN  15948<<ASSIGN  15994<<ASSIGN  16026<<ASSIGN  16086<<ASSIGN  16131<<ASSIGN
     16172<<ASSIGN  16205<<ASSIGN  16241<<ASSIGN  16597<<ASSIGN  16842<<ASSIGN
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:179  
FPT$CPEXIT.ACCT_
     13598**DCL     15998<<ASSIGN  16030<<ASSIGN  16090<<ASSIGN  16176<<ASSIGN  16209<<ASSIGN  16417<<ASSIGN
     16423<<ASSIGN  16426<<ASSIGN  16601<<ASSIGN  16848<<ASSIGN  16850<<ASSIGN
FPT$CPEXIT.DEBUG_
     13599**DCL     16734<<ASSIGN  16736<<ASSIGN
FPT$CPEXIT.NAME_
     13598**DCL     15916<<ASSIGN  15921<<ASSIGN  15924<<ASSIGN  15959<<ASSIGN  15997<<ASSIGN  16029<<ASSIGN
     16089<<ASSIGN  16175<<ASSIGN  16208<<ASSIGN  16600<<ASSIGN  16845<<ASSIGN
FPT$CPEXIT.PASS_
     13598**DCL     16853<<ASSIGN
FPT$CPEXIT.PSID_
     13598**DCL     16856<<ASSIGN
FPT$CPEXIT.V
     13599**DCL     15905--ASSIGN  15949--ASSIGN  15995--ASSIGN  16027--ASSIGN  16087--ASSIGN  16132--ASSIGN
     16173--ASSIGN  16206--ASSIGN  16242--ASSIGN  16598--ASSIGN  16843--ASSIGN
FPT$CPEXIT.V.CONT#
     13604**DCL     15965<<ASSIGN  16134<<ASSIGN  16245<<ASSIGN
FPT$CPEXIT.V.GETFLG#
     13605**DCL     16103<<ASSIGN
FPT$CPEXIT.V.SAVEFLG#
     13604**DCL     16567<<ASSIGN
FPT$CPEXIT.V_
     13599**DCL     15905<<ASSIGN  15949<<ASSIGN  15995<<ASSIGN  16027<<ASSIGN  16087<<ASSIGN  16132<<ASSIGN
     16173<<ASSIGN  16206<<ASSIGN  16242<<ASSIGN  16598<<ASSIGN  16843<<ASSIGN
FPT_CLOSE
     13866**DCL     15717<<ASSIGN  15724<>CALL    15746<<ASSIGN  15750<>CALL    15850<<ASSIGN  15854<>CALL
     15864<<ASSIGN  15868<>CALL
FPT_CLOSE.SN_
     13866**DCL     13866--REDEF
FPT_CLOSE.UTL_
     13867**DCL     13867--REDEF
FPT_CLOSE.V
     13871**DCL     15718--ASSIGN  15747--ASSIGN  15851--ASSIGN  15865--ASSIGN
FPT_CLOSE.V.DCB#
     13872**DCL     15719<<ASSIGN  15748<<ASSIGN  15853<<ASSIGN  15867<<ASSIGN
FPT_CLOSE.V.DESC
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:180  
     13876**DCL     15722<<ASSIGN
FPT_CLOSE.V.DESC.BUF#
     13877**DCL     15723<<ASSIGN
FPT_CLOSE.V.DISP#
     13875**DCL     15720<<ASSIGN  15749<<ASSIGN  15852<<ASSIGN  15866<<ASSIGN
FPT_CLOSE.V.EFTOPER.UPDDESC#
     13874**DCL     15721<<ASSIGN
FPT_CLOSE.V.EXPIRE#
     13881**DCL     13881--REDEF
FPT_CLOSE.V.TYPE#
     13879**DCL     13879--REDEF
FPT_CLOSE.V.XTNSIZE#
     13876**DCL     13876--REDEF   13878--REDEF
FPT_CLOSE.V_
     13866**DCL     15718<<ASSIGN  15747<<ASSIGN  15851<<ASSIGN  15865<<ASSIGN
FPT_FID
     13571**DCL     16829<<ASSIGN  16840<>CALL
FPT_FID.ACCT_
     13572**DCL     16833<<ASSIGN
FPT_FID.ASN_
     13574**DCL     16837<<ASSIGN
FPT_FID.NAME_
     13572**DCL     16832<<ASSIGN
FPT_FID.PASS_
     13572**DCL     16834<<ASSIGN
FPT_FID.RESULTS_
     13574**DCL     16839<<ASSIGN
FPT_FID.RES_
     13574**DCL     16838<<ASSIGN
FPT_FID.SN_
     13573**DCL     16835<<ASSIGN
FPT_FID.TEXTFID_
     13571**DCL     16831<<ASSIGN
FPT_FID.V
     13575**DCL     16830--ASSIGN
FPT_FID.V_
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:181  
     13571**DCL     16830<<ASSIGN
FPT_FID.WSN_
     13573**DCL     16836<<ASSIGN
FPT_OCMSG
     13838**DCL     15833<<ASSIGN  15842<>CALL
FPT_OCMSG.V
     13839**DCL     15834--ASSIGN
FPT_OCMSG.V.MSG#
     13839**DCL     15835<<ASSIGN
FPT_OCMSG.V.OCTYPE#
     13840**DCL     15841<<ASSIGN
FPT_OCMSG.V.SUBC#
     13840**DCL     15836<<ASSIGN
FPT_OCMSG.V_
     13838**DCL     15834<<ASSIGN
FPT_OPEN
     13783**DCL     15695<<ASSIGN  15705<>CALL    16540<<ASSIGN  16548<>CALL
FPT_OPEN.ACCT_
     13787**DCL     15698<<ASSIGN  16543<<ASSIGN
FPT_OPEN.ACSVEH_
     13785**DCL     13786--REDEF
FPT_OPEN.ALTKEYS_
     13791**DCL     13792--REDEF   13792--REDEF
FPT_OPEN.HDR_
     13790**DCL     13791--REDEF
FPT_OPEN.NAME_
     13784**DCL     15697<<ASSIGN  16542<<ASSIGN
FPT_OPEN.PASS_
     13785**DCL     15699<<ASSIGN  16544<<ASSIGN
FPT_OPEN.SN_
     13783**DCL     15702<<ASSIGN
FPT_OPEN.TAB_
     13789**DCL     13790--REDEF
FPT_OPEN.UHL_
     13783**DCL     13784--REDEF   13784--REDEF
FPT_OPEN.V
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:182  
     13792**DCL     15696--ASSIGN  16541--ASSIGN
FPT_OPEN.V.ASN#
     13802**DCL     15700<<ASSIGN  16545<<ASSIGN
FPT_OPEN.V.DCB#
     13792**DCL     15701<<ASSIGN  16546<<ASSIGN
FPT_OPEN.V.FSN#
     13823**DCL     13823--REDEF   13823--REDEF
FPT_OPEN.V.FUN#
     13802**DCL     15704<<ASSIGN
FPT_OPEN.V.OPER.TEST#
     13794**DCL     16547<<ASSIGN
FPT_OPEN.V_
     13783**DCL     15696<<ASSIGN  16541<<ASSIGN
FPT_OPEN.WSN_
     13789**DCL     13789--REDEF   15703<<ASSIGN
FPT_XFLUSH
     13896**DCL     16057<>CALL
FPT_XFLUSH.V
     13896**DCL     13896--DCLINIT
GET$CMD
     14052**DCL     16315<>CALL    16344<>CALL
GET$CMD.CONTINUED#
     14112**DCL     16766>>IF
GET$CMD.ERRDCB#
     14211**DCL     16777<<ASSIGN
GET$CMD.ERR_CODE
     14200**DCL     16776<<ASSIGN
GET$CMD.OUT$
     14057**DCL     14063--REDEF
GET$CMD.RCVD_PROMPT#
     14122**DCL     15797>>IF
I
     13032**DCL     15869<<ASSIGN  16304<<ASSIGN  16305>>DOWHILE 16306>>ASSIGN  16403<<ASSIGN  16405<<ASSIGN
     16405>>ASSIGN  16752<<CALLBLT 16753>>CALLBLT 16757>>CALLBLT 16762>>CALLBLT
IBEXTEXTC
     15472**DCL     15914>>IF
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:183  
J
     13033**DCL     16753<<CALLBLT 16757<<CALLBLT 16769<<ASSIGN  16771>>CALLBLT
LINK50
     16177**LABEL   16178--CALLALT
LINKTXTC
     15415**DCL     16175--ASSIGN
LISTDCB
     12761**DCL     16387--CALL
LOGOFF
     15246**DCL     15894<>CALL
LOGOFF.CODE
     15247**DCL     15890<<ASSIGN
LOGOFF.DCB1
     15258**DCL     15892<<ASSIGN
LOGOFF.DCB_LL
     15262**DCL     15893<<ASSIGN
LOGOFF.ERR
     15252**DCL     15891<<ASSIGN
M$CLOSE
      3079**DCL-ENT 15724--CALL    15750--CALL    15854--CALL    15868--CALL
M$FID
      3142**DCL-ENT 16840--CALL
M$IBEX1_NUM
     12712**DCL     15701>>ASSIGN  15707--IF      15719>>ASSIGN  15722--ASSIGN  15742--IF      15748>>ASSIGN
     16327<>CALL    16356<>CALL    16448<>CALL    16464<>CALL    16483<>CALL    16501<>CALL    16546>>ASSIGN
M$IBEX_NUM
     12711**DCL     15847--IF      15853>>ASSIGN  15892>>ASSIGN  15912<>CALL
M$OCMSG
      3143**DCL-ENT 15842--CALL
M$OPEN
      3079**DCL-ENT 15705--CALL    16548--CALL
M$XFLUSH
      3088**DCL-ENT 16057--CALL
NO_LABEL IN PROCEDURE RUEXIT
     16765**LABEL   16752--CALLALT 16755--GOTO    16759--GOTO
OBJECTDCB
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:184  
     12758**DCL     16377--CALL
P$B.CODE
     13970**DCL     15881>>DOCASE  16309>>DOCASE  16537>>IF      16665>>DOCASE  16746>>IF
P$B.CPOS
     13988**DCL     16307>>ASSIGN  16396>>ASSIGN
P$B.NSUBLKS
     13974**DCL     15878>>IF      16305>>DOWHILE 16663>>IF      16705>>IF
P$B.SUBLK$
     13995**DCL     15681>>CALL    15681>>CALL    15732>>ASSIGN  15881>>DOCASE  15956>>ASSIGN  15956>>ASSIGN
     15956>>ASSIGN  15956>>ASSIGN  16102>>CALL    16102>>CALL    16306>>ASSIGN  16313>>ASSIGN  16342>>ASSIGN
     16376>>ASSIGN  16386>>ASSIGN  16410>>CALL    16410>>CALL    16535>>ASSIGN  16536>>CALL    16536>>CALL
     16537>>IF      16651>>CALL    16651>>CALL    16665>>DOCASE  16667>>ASSIGN  16667>>ASSIGN  16707>>ASSIGN
     16707>>ASSIGN
P$PCB
     13068**DCL         8--PROC    15677--ENTRY   15773--ENTRY   15793--IF      15874--IF      15946--ENTRY
     15989--ENTRY   16021--ENTRY   16054--ENTRY   16081--ENTRY   16099--ENTRY   16128--ENTRY   16142--ENTRY
     16145--ENTRY   16167--ENTRY   16200--ENTRY   16231--ENTRY   16293--ENTRY   16529--ENTRY   16592--ENTRY
     16644--ENTRY   16701--ENTRY
P$PCB.NCHARS
     13215**DCL     15802>>ASSIGN  15811>>ASSIGN  15960>>ASSIGN  15999>>ASSIGN  16031>>ASSIGN  16091>>ASSIGN
     16177>>ASSIGN  16210>>ASSIGN  16246>>ASSIGN  16303>>ASSIGN  16602>>ASSIGN  16650>>ASSIGN  16751>>ASSIGN
P$PCB.OUT$
     13081**DCL     15681>>CALL    15681>>CALL    15732>>ASSIGN  15878>>IF      15881>>DOCASE  15951>>ASSIGN
     16101>>ASSIGN  16298>>ASSIGN  16534>>ASSIGN  16649>>ASSIGN  16702>>ASSIGN  16746>>IF
P$S
     14008**DCL     15681<>CALL    16102<>CALL    16410<>CALL    16536<>CALL    16651<>CALL
P$S.CODE
     14014**DCL     15952>>IF
P$S.COUNT
     14031**DCL     14034--IMP-SIZ 15681>>CALL    16102>>CALL    16410>>CALL    16536>>CALL    16651>>CALL
P$S.CPOS
     14023**DCL     15732>>ASSIGN  16535>>ASSIGN
P$S.TEXTC$
     14026**DCL     16667>>ASSIGN  16667>>ASSIGN  16707>>ASSIGN  16707>>ASSIGN
P$S IN PROCEDURE EXIT_SETUP
     16795**DCL     16786--PROC
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:185  
P$S.COUNT IN PROCEDURE EXIT_SETUP
     16818**DCL     16821--IMP-SIZ 16831>>ASSIGN
P$S.CPOS IN PROCEDURE EXIT_SETUP
     16810**DCL     16860>>ASSIGN
P$S.TEXT IN PROCEDURE EXIT_SETUP
     16821**DCL     16831--ASSIGN
PCL50
     16210**LABEL   16211--CALLALT
PCLTXTC
     15388**DCL     16208--ASSIGN
PMD50
     16246**LABEL   16247--CALLALT
PRFLAGS.LS
     13038**DCL     16302<<ASSIGN  16402<<ASSIGN  16498>>IF
PRFLAGS.OU
     13037**DCL     16301<<ASSIGN  16382<<ASSIGN  16480>>IF
RUEXIT
     16730**PROC    15967--CALL    16000--CALL    16032--CALL    16092--CALL    16178--CALL    16211--CALL
     16247--CALL    16432--CALL    16603--CALL    16674--CALL
RUNIT75
     16432**LABEL   16324--GOTO    16336--GOTO    16353--GOTO    16365--GOTO    16377--CALLALT 16387--CALLALT
     16410--CALLALT 16432--CALLALT 16457--GOTO    16473--GOTO    16492--GOTO    16510--GOTO
RUNIT80
     16516**LABEL   16320--GOTO    16332--GOTO    16349--GOTO    16361--GOTO    16453--GOTO    16469--GOTO
     16488--GOTO    16506--GOTO
SEG$2.CPBUFF$
     13313**DCL     15800>>CALLBLT 15810>>ASSIGN  16752>>CALLBLT 16753>>CALLBLT 16757>>CALLBLT 16762>>CALLBLT
     16765>>ASSIGN
SEG$2.DBUG_NAME
     13295**DCL     15964<<ASSIGN  16244<<ASSIGN  16667<<ASSIGN  16671<<ASSIGN  16707<<ASSIGN  16710<<ASSIGN
     16734--ASSIGN
SEG$2.ERRBUF
     13294**DCL     15733--CALL    16061--CALL    16440--CALL    16521--CALL    16550--CALL    16562--CALL
     16861--CALL
SEG$2.FLAGS.USERS
     13271**DCL     15911>>IF
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:186  
SEG$2.FPT_CPEXIT$
     13310**DCL     15904>>ASSIGN  15905>>ASSIGN  15905>>ASSIGN  15916>>ASSIGN  15921>>ASSIGN  15924>>ASSIGN
     15948>>ASSIGN  15949>>ASSIGN  15949>>ASSIGN  15959>>ASSIGN  15965>>ASSIGN  15994>>ASSIGN  15995>>ASSIGN
     15995>>ASSIGN  15997>>ASSIGN  15998>>ASSIGN  16026>>ASSIGN  16027>>ASSIGN  16027>>ASSIGN  16029>>ASSIGN
     16030>>ASSIGN  16086>>ASSIGN  16087>>ASSIGN  16087>>ASSIGN  16089>>ASSIGN  16090>>ASSIGN  16103>>ASSIGN
     16131>>ASSIGN  16132>>ASSIGN  16132>>ASSIGN  16134>>ASSIGN  16172>>ASSIGN  16173>>ASSIGN  16173>>ASSIGN
     16175>>ASSIGN  16176>>ASSIGN  16205>>ASSIGN  16206>>ASSIGN  16206>>ASSIGN  16208>>ASSIGN  16209>>ASSIGN
     16241>>ASSIGN  16242>>ASSIGN  16242>>ASSIGN  16245>>ASSIGN  16417>>ASSIGN  16423>>ASSIGN  16426>>ASSIGN
     16567>>ASSIGN  16597>>ASSIGN  16598>>ASSIGN  16598>>ASSIGN  16600>>ASSIGN  16601>>ASSIGN  16734>>ASSIGN
     16736>>ASSIGN  16842>>ASSIGN  16843>>ASSIGN  16843>>ASSIGN  16845>>ASSIGN  16848>>ASSIGN  16850>>ASSIGN
     16853>>ASSIGN  16856>>ASSIGN
SEG$2.GETCMD$
     13315**DCL     15797>>IF      16315>>CALL    16344>>CALL    16766>>IF      16776>>ASSIGN  16777>>ASSIGN
SEG$2.LLDCB#
     13289**DCL     15860>>IF      15860--IF      15867>>ASSIGN  15869>>ASSIGN  15893>>ASSIGN
SEG$2.USERS$
     13298**DCL     15913>>ASSIGN  15916>>ASSIGN
SEG$2.XUG_INIT$
     13314**DCL     16769>>ASSIGN
SEG2$
     12699**DCL     13269--IMP-PTR 15733>>CALL    15797>>IF      15800>>CALLBLT 15810>>ASSIGN  15860>>IF
     15860>>IF      15867>>ASSIGN  15869>>ASSIGN  15893>>ASSIGN  15904>>ASSIGN  15905>>ASSIGN  15905>>ASSIGN
     15911>>IF      15913>>ASSIGN  15916>>ASSIGN  15916>>ASSIGN  15921>>ASSIGN  15924>>ASSIGN  15948>>ASSIGN
     15949>>ASSIGN  15949>>ASSIGN  15959>>ASSIGN  15964>>ASSIGN  15965>>ASSIGN  15994>>ASSIGN  15995>>ASSIGN
     15995>>ASSIGN  15997>>ASSIGN  15998>>ASSIGN  16026>>ASSIGN  16027>>ASSIGN  16027>>ASSIGN  16029>>ASSIGN
     16030>>ASSIGN  16061>>CALL    16086>>ASSIGN  16087>>ASSIGN  16087>>ASSIGN  16089>>ASSIGN  16090>>ASSIGN
     16103>>ASSIGN  16131>>ASSIGN  16132>>ASSIGN  16132>>ASSIGN  16134>>ASSIGN  16172>>ASSIGN  16173>>ASSIGN
     16173>>ASSIGN  16175>>ASSIGN  16176>>ASSIGN  16205>>ASSIGN  16206>>ASSIGN  16206>>ASSIGN  16208>>ASSIGN
     16209>>ASSIGN  16241>>ASSIGN  16242>>ASSIGN  16242>>ASSIGN  16244>>ASSIGN  16245>>ASSIGN  16315>>CALL
     16344>>CALL    16417>>ASSIGN  16423>>ASSIGN  16426>>ASSIGN  16440>>CALL    16521>>CALL    16550>>CALL
     16562>>CALL    16567>>ASSIGN  16597>>ASSIGN  16598>>ASSIGN  16598>>ASSIGN  16600>>ASSIGN  16601>>ASSIGN
     16667>>ASSIGN  16671>>ASSIGN  16707>>ASSIGN  16710>>ASSIGN  16734>>ASSIGN  16734>>ASSIGN  16736>>ASSIGN
     16752>>CALLBLT 16753>>CALLBLT 16757>>CALLBLT 16762>>CALLBLT 16765>>ASSIGN  16766>>IF      16769>>ASSIGN
     16776>>ASSIGN  16777>>ASSIGN  16842>>ASSIGN  16843>>ASSIGN  16843>>ASSIGN  16845>>ASSIGN  16848>>ASSIGN
     16850>>ASSIGN  16853>>ASSIGN  16856>>ASSIGN  16861>>CALL
SEG3$
PL6.E3A0      #001=CPA$CMDS File=CPA$CMDS.:E05TSI                                TUE 07/29/97 11:13 Page:187  
     12700**DCL     13674--IMP-PTR 16326>>ASSIGN  16355>>ASSIGN
SIXEDIT50
     16602**LABEL   16603--CALLALT
SIXEDITTXTC
     15361**DCL     16600--ASSIGN
SOURCEDCB
     12752**DCL     16327--CALL    16448--CALL    16448--CALL    16464--CALL    16464--CALL    16483--CALL
     16483--CALL    16501--CALL    16501--CALL
SYSTXT
     13042**DCL     15998--ASSIGN  16030--ASSIGN  16090--ASSIGN  16176--ASSIGN  16209--ASSIGN  16417--ASSIGN
     16427>>IF      16601--ASSIGN  16658>>IF
TA$
     13030**DCL     16306<<ASSIGN  16307>>ASSIGN  16309>>DOCASE  16313>>ASSIGN  16342>>ASSIGN  16372>>ASSIGN
     16376>>ASSIGN  16386>>ASSIGN  16396>>ASSIGN
TB$
     13031**DCL     15913<<ASSIGN  15914>>IF      15914>>IF      16372<<ASSIGN  16377<>CALL    16387<>CALL
TEXT$C
     15573**DCL     15914>>IF      15956>>ASSIGN  16667>>ASSIGN  16707>>ASSIGN
TEXT$C.SIZ
     15574**DCL     15575--IMP-SIZ 15914>>IF      15956>>ASSIGN  16667>>ASSIGN  16707>>ASSIGN
TRANSTBL
     13045**DCL     16418>>CALLBLT 16429>>CALLBLT 16660>>CALLBLT
UPDATEDCB
     12755**DCL     16356--CALL
XUG$INIT.PARAMS$
     14959**DCL     16769>>ASSIGN
XUG$PARAMS.BUF
     14816**DCL     14819--REDEF
XUG$PARAMS.RLTVEC
     14398**DCL     16769>>ASSIGN
XUG$RLT
     15237**DCL     16769>>ASSIGN
