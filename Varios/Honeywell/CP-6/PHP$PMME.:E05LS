VERSION E05

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:1    
        1        1        /*M* PHP$PMME  PMME monitoring code                                   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F* NAME:     PHP$PMME
        8        8             PURPOSE:  Record PMME-start events in the user's JIT.
        9        9                       Record PMME-end events by updating MOUSE tables.      */
       10       10        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
       11       11        PHP$PMME: PROC;
       12       12
       13       13        %PLIST;
       14       14
       15       15        %INCLUDE B$SS;
       16      194        %INCLUDE UD_EQU_E;
       17      583        %INCLUDE P_PMDAT_R;
       18      891        %INCLUDE F$DCB;
       19      940        %INCLUDE B_SEGIDS_C;
       20     1479        %INCLUDE B_MAGIC_C;
       21     1597        %SET LISTMAC='1'B;
       22     1598        %SET LISTSUB='1'B;
       23     1599        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
              1600         %LSET LISTDIR='0'B;
              1621    1   DCL 1 B_MPT SYMREF DALIGNED,
              1625    1       2 SS ALIGNED,
              1626    1       3 * UBIN(24) UNAL /*(0)/**/,
              1627    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1628    1       2 SS$ REDEF SS PTR,
              1630    1       2 LS ALIGNED,
              1631    1       3 * UBIN(24) UNAL /*(0)/**/,
              1632    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1633    1       2 LS$ REDEF LS PTR,
              1635    1       2 AS ALIGNED,
              1636    1       3 * UBIN(24) UNAL /*(0)/**/,
              1637    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1638    1       2 AS$ REDEF AS PTR,
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:2    
              1640    1       2 PS ALIGNED,
              1641    1       3 * UBIN(24) UNAL /*(0)/**/,
              1642    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1643    1       2 PS$ REDEF PS PTR,
              1645    1       2 TCB ALIGNED,
              1646    1       3 * UBIN(24) UNAL /*(0)/**/,
              1647    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1648    1       2 TCB$ REDEF TCB PTR,
              1650    1       2 ECCB ALIGNED,
              1651    1       3 * UBIN(24) UNAL /*(0)/**/,
              1652    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1653    1       2 ECCB$ REDEF ECCB PTR,
              1655    1       2 SSDESC ALIGNED,
              1656    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1657    1       3 * UBIN(6) UNAL /*(0)/**/,
              1658    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1659    1       2 SSDESC$ REDEF SSDESC PTR,
              1661    1       2 LSDESC ALIGNED,
              1662    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1663    1       3 * UBIN(6) UNAL /*(0)/**/,
              1664    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1665    1       2 LSDESC$ REDEF LSDESC PTR,
              1667    1       2 ASDESC ALIGNED,
              1668    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1669    1       3 * UBIN(6) UNAL /*(0)/**/,
              1670    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1671    1       2 ASDESC$ REDEF ASDESC PTR,
              1673    1       2 PSDESC ALIGNED,
              1674    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1675    1       3 * UBIN(6) UNAL /*(0)/**/,
              1676    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1677    1       2 PSDESC$ REDEF PSDESC PTR,
              1679    1       2 TCBDESC ALIGNED,
              1680    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1681    1       3 * UBIN(6) UNAL /*(0)/**/,
              1682    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1683    1       2 TCBDESC$ REDEF TCBDESC PTR,
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:3    
              1685    1       2 ECCBDESC ALIGNED,
              1686    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1687    1       3 * UBIN(6) UNAL /*(0)/**/,
              1688    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1689    1       2 ECCBDESC$ REDEF ECCBDESC PTR ;
       24     1692        %INCLUDE B_STRINGS_C;
       25     1821        %INCLUDE M_INFO_C;
       26     1961        %INCLUDE CP_6_SUBS;
       27     2501        %INCLUDE B$JIT;
       28     3104        %INCLUDE HF_LOCK_C;
       29     3118        %INCLUDE PM_BUCKET_C;
       30     3203        %DUMMY_BUCKET (NAME=P_PMME_TIME, STCLASS=SYMREF);
              3204    1   DCL 1 P_PMME_TIME SYMREF DALIGNED,
              3205    1         2 SIZE UBIN WORD,
              3206    1         2 * UBIN WORD,
              3207    1         2 DATA (0:0) SBIN WORD;
       31     3209        %MOUSE_REF;
              3210    1   DCL
              3211    1       1 PH_MOUSE_TBL BASED (B$MOUSE$),
              3212    1         2 TABLE_SIZE UBIN WORD,           /* # of words in table                */
              3213    1         2 FCGS UBIN WORD,                 /* # of FC groups                     */
              3214    1         2 FCG (0:%MAX_FCG#) ALIGNED,         /* Indexed by FCG                     */
              3215    1           3 OFFSET UBIN HALF UNAL,        /* Offset into table                  */
              3216    1           3 BREAKDOWN BIT(1),             /* Needs breaking down                */
              3217    1           3 MAX_FPT SBIN (17) UNAL,       /* Maximum FPT code                   */
              3218    1         2 VALID (0:511 /* Max user # */) BIT(1),
              3218                  /* ='1'B if PMME data good            */
              3219    1         2 PMME (0:0),                     /* PMME data                          */
              3220    1           3 COUNT UBIN WORD,              /* # of PMMEs                         */
              3221    1           3 CPU UBIN WORD,                /* Time for PMMEs                     */
              3222    1           3 I_O UBIN WORD;                /* # of I/Os performed                */
       32     3224        %SUB B$SS = B_MPT.SS$->B$SS;
       33     3225    1   DCL B$MOUSE$ PTR SYMREF;
       34     3226    1   DCL B$JIT$ PTR SYMREF;
       35     3227    1   DCL P$ PTR;
       36     3228    1   DCL Q$ PTR;
       37     3229    1   DCL I SBIN WORD;
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:4    
       38     3230    1   DCL J SBIN WORD;
       39     3231    1   DCL S_PNO UBIN WORD SYMREF;
       40     3232    1   DCL OFFSET SBIN WORD;
       41     3233    1   DCL ERROR UBIN WORD;
       42     3234    1   DCL FCG UBIN;
       43     3235    1   DCL CODE UBIN;
       44     3236    1   DCL DELTA_T SBIN;
       45     3237    1   DCL S_CUN UBIN WORD SYMREF;
       46     3238    1   DCL UD_MAXTAB (0:%MAX_FCG#) SBIN WORD UNAL SYMREF;
       47     3239    1   DCL SC_PHP215 ENTRY CONV (2, 0);                /* Screech 215 - unknown PMME */
       48     3240    1   DCL SSC$SERV ENTRY;                                   /* Compute service time */
       49     3241    1   DCL SSS$CACHEBP ENTRY;                                      /* turn cache off */
       50     3242    1   DCL SSS$CACHE ENTRY;                                         /* turn cache on */
       51     3243    1   DCL MME$CVM ENTRY (4) ALTRET;         /* map MOUSE page(s) into proper window */
       52     3244    1   DCL SC_PHP212 ENTRY CONV (2, 0);                  /* Screech 212 - CVM failed */
       53     3245        %EJECT;
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:5    
       54     3246    1   MAP_THE_PAGES: PROC;
       55     3247
       56     3248    2   DCL I UBIN;
       57     3249    2   DCL ERROR BIT(36);
       58     3250
       59     3251    2      CALL SSS$CACHE;
       60     3252
       61     3253    3      DO I = 0 TO 0 /* Highest MOUSE page */;
       62     3254
       63     3255    3         CALL MME$CVM(%MONWSQ, %MOUSELO + I, PH_MUS_PAGES(I), ERROR)
       64     3256    3          ALTRET(CVM_ERROR);
       65     3257
       66     3258    3         END;
       67     3259
       68     3260    2      PH_CPU_MOUSED(S_PNO) = %YES#;
       69     3261
       70     3262    2      RETURN;
       71     3263
       72     3264    2   CVM_ERROR: ;
       73     3265
       74     3266    2      B$JIT.ERR = ERROR;
       75     3267
       76     3268    2      CALL SC_PHP212;
       77     3269
       78     3270    2   END MAP_THE_PAGES;
       79     3271        %EJECT;
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:6    
       80     3272    1   PHP$START_PMME: ENTRY;
       81     3273
       82     3274    1      CALL SSS$CACHEBP;
       83     3275
       84     3276    1      IF PH_MOUSE_USERS <= 0
       85     3277    1       OR (PH_MOUSE_USER_NUMBER ~= 0 AND PH_MOUSE_USER_NUMBER ~= B$JIT.SYSID)
       86     3278    2        THEN DO;
       87     3279
       88     3280    2         CALL SSS$CACHE;
       89     3281    2         RETURN;
       90     3282    2         END;
       91     3283
       92     3284    1      IF NOT PH_CPU_MOUSED(S_PNO)
       93     3285    2        THEN DO;
       94     3286
       95     3287    2         CALL MAP_THE_PAGES;
       96     3288    2         CALL SSC$SERV;
       97     3289    2         END;
       98     3290
       99     3291    1      CALL SSS$CACHE;
      100     3292
      101     3293    1      IF S_CUN > 511 /* Max user # */ THEN RETURN;
      102     3294
      103     3295    1      P$ = B$MOUSE$;
      104     3296
      105     3297    1      IF B_MPT.SS$->B$SS.ISR.WSR < 2
      106     3298    2        THEN DO;
      107     3299
      108     3300    2         IF NOT P$ -> PH_MOUSE_TBL.VALID(S_CUN)
      109     3301    2           THEN RETURN;
      110     3302
      111     3303    2         END;
      112     3304
      113     3305    2        ELSE DO;
      114     3306
      115     3307    2         B$JIT.PMME_COUNT = 0;
      116     3308
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:7    
      117     3309    2         P$ -> PH_MOUSE_TBL.VALID(S_CUN) = '1'B;
      118     3310
      119     3311    2         END;
      120     3312
      121     3313    1      I = B$JIT.PMME_COUNT;
      122     3314
      123     3315    1      IF I > 3
      124     3316    2        THEN DO;
      125     3317
      126     3318    2         P$ -> PH_MOUSE_TBL.VALID(S_CUN) = '0'B;
      127     3319
      128     3320    2         RETURN;
      129     3321
      130     3322    2         END;
      131     3323
      132     3324    1      P$ = ADDR(B$JIT.PMME_DATA(I));
      133     3325
      134     3326    1      P$ -> PH_JIT_ENTRY.CPU = B$JIT.STIME;
      135     3327
      136     3328    1      P$ -> PH_JIT_ENTRY.I_O = B$JIT.ACCESS.TAPES +
      137     3329    1       B$JIT.ACCESS.PACKS + B$JIT.ACCESS.FORMS;
      138     3330
      139     3331    1      B$JIT.PMME_COUNT = I + 1;
      140     3332
      141     3333    1      RETURN;
      142     3334
      143     3335        %EJECT;
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:8    
      144     3336
      145     3337    1   PHP$END_PMME: ENTRY;
      146     3338
      147     3339    1      CALL SSC$SERV;                                        /* Update JIT fields */
      148     3340
      149     3341    1   START_ENDING_STUFF:
      150     3342           %LOCK (G#=PH_MOUSE_LOCK);
              3343    1   CALL HFC$LOCK(PH_MOUSE_LOCK);
      151     3345
      152     3346    1      CALL SSS$CACHEBP;
      153     3347
      154     3348    1      IF PH_MOUSE_USERS <= 0
      155     3349    1       OR S_CUN > 511
      156     3350    1       OR (PH_MOUSE_USER_NUMBER ~= 0 AND PH_MOUSE_USER_NUMBER ~= B$JIT.SYSID)
      157     3351    1        THEN GOTO CLOSE_UP;
      158     3352
      159     3353    1      IF NOT PH_CPU_MOUSED(S_PNO)
      160     3354    2        THEN DO;
      161     3355              %UNLOCK (G#=PH_MOUSE_LOCK);
              3356    2   CALL HFC$UNLOCK(PH_MOUSE_LOCK);
      162     3358    2         CALL MAP_THE_PAGES;
      163     3359    2         GOTO START_ENDING_STUFF;
      164     3360    2         END;
      165     3361
      166     3362    1      IF NOT PH_MOUSE_TBL.VALID(S_CUN)
      167     3363    1        THEN
      168     3364    1         GOTO CLOSE_UP;
      169     3365
      170     3366    1      CALL SSS$CACHE;
      171     3367
      172     3368    1      B$JIT.PMME_COUNT = B$JIT.PMME_COUNT - 1;
      173     3369
      174     3370    1      FCG = B_MPT.SS$->B$SS.FPT.FCG;
      175     3371
      176     3372    1      CODE = MOD(B_MPT.SS$->B$SS.FPT.CODE, 1024);     /* remove top 2 bits (special) */
      177     3373
      178     3374    1      IF FCG > PH_MOUSE_TBL.FCGS
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:9    
      179     3375    1       OR CODE > PH_MOUSE_TBL.FCG.MAX_FPT(FCG)
      180     3376    2        THEN DO;
      181     3377
      182     3378    2         PH_MOUSE_USERS = 0;
      183     3379    2         CALL SC_PHP215;
      184     3380    2         GOTO CLOSE_UP;
      185     3381    2         END;
      186     3382
      187     3383        /*S*  SCREECH_CODE:  PHP-S$SC215
      188     3384              TYPE:          SNAP
      189     3385              MESSAGE: A seemingly valid PMME was issued, and was passed to
      190     3386                       PHP$PMME for performance analysis, which is outside
      191     3387                       of the range of PMME FCGs and/or FPT codes known to
      192     3388                       PHP$PMME.  Either a new FCG has been added to UD_MAXTAB,
      193     3389                       or the performance monitor's data pages have been
      194     3390                       clobbered.  In the prior case, the PHA$ERS module must
      195     3391                       be recompiled with the new UD_EQU_E %INCLUDE file.  In
      196     3392                       any case, PMME monitoring is turned off (by zeroing the
      197     3393                       "monitoring in progress" cell;  the pages used by the
      198     3394                       monitoring feature are not returned to the free page pool,
      199     3395                       and can if desired be dumped via XDELTA.
      200     3396                                                                                      */
      201     3397
      202     3398    1      IF B_MPT.SS$->B$SS.ISR.WSR = 2
      203     3399    1        THEN
      204     3400    1         GOTO CLOSE_UP;
      205     3401
      206     3402    1      IF PH_MOUSE_TBL.FCG.BREAKDOWN(FCG)
      207     3403    2        THEN DO;
      208     3404    2         OFFSET = CODE * (7 /* Max ASN */ + 1);
      209     3405    2         IF B$JIT.DCB$ ~= ADDR(NIL)
      210     3406    2           THEN OFFSET = OFFSET + B$JIT.DCB$ -> F$DCB.ASN;
      211     3407    2         END;
      212     3408    1        ELSE OFFSET = CODE;
      213     3409
      214     3410    1      J = B$JIT.PMME_COUNT;
      215     3411
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:10   
      216     3412    1      P$ = PINCRW(B$MOUSE$, (OFFSET * SIZEW(PH_MOUSE_ENTRY)) +
      217     3413    1       PH_MOUSE_TBL.FCG.OFFSET(FCG));
      218     3414
      219     3415    1      Q$ = ADDR(B$JIT.PMME_DATA(J));
      220     3416
      221     3417    1      P$ -> PH_MOUSE_ENTRY.COUNT = P$ -> PH_MOUSE_ENTRY.COUNT + 1;
      222     3418
      223     3419    1      DELTA_T = B$JIT.STIME - Q$ -> PH_JIT_ENTRY.CPU;
      224     3420
      225     3421    1      IF DELTA_T > 0
      226     3422    1       AND DELTA_T < 1000000
      227     3423    2        THEN DO;
      228     3424
      229     3425    2         P$ -> PH_MOUSE_ENTRY.CPU = P$ -> PH_MOUSE_ENTRY.CPU + DELTA_T;
      230     3426
      231     3427              %UPDATE_BUCKET (BUCKET=P_PMME_TIME,
      232     3428              DIST_VAL=DELTA_T,
      233     3429              SCRATCH=J);
              3430    2      J = 0;
              3431    3      DO WHILE (J < P_PMME_TIME.SIZE AND
              3432    3          DELTA_T > P_PMME_TIME.DATA(J));
              3433    3         J = J + 1;
              3434    3         END;
              3435    2      P_PMME_TIME.DATA(J + P_PMME_TIME.SIZE + 1) =
              3436    2       P_PMME_TIME.DATA(J + P_PMME_TIME.SIZE + 1) + 1;
      234     3438
      235     3439    2         P$ -> PH_MOUSE_ENTRY.I_O = P$ -> PH_MOUSE_ENTRY.I_O +
      236     3440    2          B$JIT.ACCESS.TAPES + B$JIT.ACCESS.PACKS +
      237     3441    2          B$JIT.ACCESS.FORMS - Q$ -> PH_JIT_ENTRY.I_O;
      238     3442
      239     3443    2         END;
      240     3444
      241     3445    1   CLOSE_UP:
      242     3446
      243     3447           %UNLOCK (G#=PH_MOUSE_LOCK);
              3448    1   CALL HFC$UNLOCK(PH_MOUSE_LOCK);
      244     3450    1      CALL SSS$CACHE;
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:11   
      245     3451
      246     3452    1      RETURN;
      247     3453
      248     3454    1   END PHP$PMME;

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:12   
--  Include file information  --

   PM_BUCKET_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   UD_EQU_E.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure PHP$PMME.

   Procedure PHP$PMME requires 281 words for executable code.
   Procedure PHP$PMME requires 22 words of local(AUTO) storage.

    No errors detected in file PHP$PMME.:E05TSI    .

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:13   

 Object Unit name= PHP$PMME                                   File name= PHP$PMME.:E05TOU
 UTS= JUL 30 '97 04:24:13.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   281    431  PHP$PMME
    1  RoData even  none     3      3  PHP$PMME

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  PHP$PMME
     0     51                  yes      Std        0  PHP$START_PMME
     0    171                  yes      Std        0  PHP$END_PMME

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 SSS$CACHEBP
         yes           Std       1 HFC$UNLOCK
         yes           Std       0 SSS$CACHE
         yes           Std       0 SSC$SERV
         yes           Std       1 HFC$LOCK
 yes     yes           Std       4 MME$CVM
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:14   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_PHP215                             SC_PHP212                             P_RESOURCE$
     P_UPTIME                              P_NSCPU                               PH_MOUSE_USERS
     PH_MUS_PAGES                          PH_MOUSE_LOCK                         PH_CPU_MOUSED
     PH_MOUSE_USER_NUMBER                  B_MPT                                 P_PMME_TIME
     B$MOUSE$                              B$JIT$                                S_PNO
     S_CUN                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:15   


        1        1        /*M* PHP$PMME  PMME monitoring code                                   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F* NAME:     PHP$PMME
        8        8             PURPOSE:  Record PMME-start events in the user's JIT.
        9        9                       Record PMME-end events by updating MOUSE tables.      */
       10       10        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
       11       11        PHP$PMME: PROC;

     11  0 000000   000000 700200 xent  PHP$PMME     TSX0  ! X66_AUTO_0
         0 000001   000026 000000                    ZERO    22,0
         0 000002   000050 710000 0                  TRA     s:3270+2

       12       12
       13       13        %PLIST;
       14       14
       15       15        %INCLUDE B$SS;
       16      194        %INCLUDE UD_EQU_E;
       17      583        %INCLUDE P_PMDAT_R;
       18      891        %INCLUDE F$DCB;
       19      940        %INCLUDE B_SEGIDS_C;
       20     1479        %INCLUDE B_MAGIC_C;
       21     1597        %SET LISTMAC='1'B;
       22     1598        %SET LISTSUB='1'B;
       23     1599        %B_MPT (FPTN=B_MPT,STCLASS=SYMREF);
              1600         %LSET LISTDIR='0'B;
              1621    1   DCL 1 B_MPT SYMREF DALIGNED,
              1625    1       2 SS ALIGNED,
              1626    1       3 * UBIN(24) UNAL /*(0)/**/,
              1627    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1628    1       2 SS$ REDEF SS PTR,
              1630    1       2 LS ALIGNED,
              1631    1       3 * UBIN(24) UNAL /*(0)/**/,
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:16   
              1632    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1633    1       2 LS$ REDEF LS PTR,
              1635    1       2 AS ALIGNED,
              1636    1       3 * UBIN(24) UNAL /*(0)/**/,
              1637    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1638    1       2 AS$ REDEF AS PTR,
              1640    1       2 PS ALIGNED,
              1641    1       3 * UBIN(24) UNAL /*(0)/**/,
              1642    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1643    1       2 PS$ REDEF PS PTR,
              1645    1       2 TCB ALIGNED,
              1646    1       3 * UBIN(24) UNAL /*(0)/**/,
              1647    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1648    1       2 TCB$ REDEF TCB PTR,
              1650    1       2 ECCB ALIGNED,
              1651    1       3 * UBIN(24) UNAL /*(0)/**/,
              1652    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1653    1       2 ECCB$ REDEF ECCB PTR,
              1655    1       2 SSDESC ALIGNED,
              1656    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1657    1       3 * UBIN(6) UNAL /*(0)/**/,
              1658    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1659    1       2 SSDESC$ REDEF SSDESC PTR,
              1661    1       2 LSDESC ALIGNED,
              1662    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1663    1       3 * UBIN(6) UNAL /*(0)/**/,
              1664    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1665    1       2 LSDESC$ REDEF LSDESC PTR,
              1667    1       2 ASDESC ALIGNED,
              1668    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1669    1       3 * UBIN(6) UNAL /*(0)/**/,
              1670    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1671    1       2 ASDESC$ REDEF ASDESC PTR,
              1673    1       2 PSDESC ALIGNED,
              1674    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1675    1       3 * UBIN(6) UNAL /*(0)/**/,
              1676    1       3 * BIT(12) UNAL /*('0'B)/**/,
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:17   
              1677    1       2 PSDESC$ REDEF PSDESC PTR,
              1679    1       2 TCBDESC ALIGNED,
              1680    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1681    1       3 * UBIN(6) UNAL /*(0)/**/,
              1682    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1683    1       2 TCBDESC$ REDEF TCBDESC PTR,
              1685    1       2 ECCBDESC ALIGNED,
              1686    1       3 * UBIN HALF UNAL /*(-6144)/**/,
              1687    1       3 * UBIN(6) UNAL /*(0)/**/,
              1688    1       3 * BIT(12) UNAL /*('0'B)/**/,
              1689    1       2 ECCBDESC$ REDEF ECCBDESC PTR ;
       24     1692        %INCLUDE B_STRINGS_C;
       25     1821        %INCLUDE M_INFO_C;
       26     1961        %INCLUDE CP_6_SUBS;
       27     2501        %INCLUDE B$JIT;
       28     3104        %INCLUDE HF_LOCK_C;
       29     3118        %INCLUDE PM_BUCKET_C;
       30     3203        %DUMMY_BUCKET (NAME=P_PMME_TIME, STCLASS=SYMREF);
              3204    1   DCL 1 P_PMME_TIME SYMREF DALIGNED,
              3205    1         2 SIZE UBIN WORD,
              3206    1         2 * UBIN WORD,
              3207    1         2 DATA (0:0) SBIN WORD;
       31     3209        %MOUSE_REF;
              3210    1   DCL
              3211    1       1 PH_MOUSE_TBL BASED (B$MOUSE$),
              3212    1         2 TABLE_SIZE UBIN WORD,           /* # of words in table                */
              3213    1         2 FCGS UBIN WORD,                 /* # of FC groups                     */
              3214    1         2 FCG (0:%MAX_FCG#) ALIGNED,         /* Indexed by FCG                     */
              3215    1           3 OFFSET UBIN HALF UNAL,        /* Offset into table                  */
              3216    1           3 BREAKDOWN BIT(1),             /* Needs breaking down                */
              3217    1           3 MAX_FPT SBIN (17) UNAL,       /* Maximum FPT code                   */
              3218    1         2 VALID (0:511 /* Max user # */) BIT(1),
              3218                  /* ='1'B if PMME data good            */
              3219    1         2 PMME (0:0),                     /* PMME data                          */
              3220    1           3 COUNT UBIN WORD,              /* # of PMMEs                         */
              3221    1           3 CPU UBIN WORD,                /* Time for PMMEs                     */
              3222    1           3 I_O UBIN WORD;                /* # of I/Os performed                */
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:18   
       32     3224        %SUB B$SS = B_MPT.SS$->B$SS;
       33     3225    1   DCL B$MOUSE$ PTR SYMREF;
       34     3226    1   DCL B$JIT$ PTR SYMREF;
       35     3227    1   DCL P$ PTR;
       36     3228    1   DCL Q$ PTR;
       37     3229    1   DCL I SBIN WORD;
       38     3230    1   DCL J SBIN WORD;
       39     3231    1   DCL S_PNO UBIN WORD SYMREF;
       40     3232    1   DCL OFFSET SBIN WORD;
       41     3233    1   DCL ERROR UBIN WORD;
       42     3234    1   DCL FCG UBIN;
       43     3235    1   DCL CODE UBIN;
       44     3236    1   DCL DELTA_T SBIN;
       45     3237    1   DCL S_CUN UBIN WORD SYMREF;
       46     3238    1   DCL UD_MAXTAB (0:%MAX_FCG#) SBIN WORD UNAL SYMREF;
       47     3239    1   DCL SC_PHP215 ENTRY CONV (2, 0);                /* Screech 215 - unknown PMME */
       48     3240    1   DCL SSC$SERV ENTRY;                                   /* Compute service time */
       49     3241    1   DCL SSS$CACHEBP ENTRY;                                      /* turn cache off */
       50     3242    1   DCL SSS$CACHE ENTRY;                                         /* turn cache on */
       51     3243    1   DCL MME$CVM ENTRY (4) ALTRET;         /* map MOUSE page(s) into proper window */
       52     3244    1   DCL SC_PHP212 ENTRY CONV (2, 0);                  /* Screech 212 - CVM failed */
       53     3245        %EJECT;
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:19   
       54     3246    1   MAP_THE_PAGES: PROC;

   3246  0 000003   200014 741300       MAP_THE_PAG* STX1  ! DELTA_T+1,,AUTO

       55     3247
       56     3248    2   DCL I UBIN;
       57     3249    2   DCL ERROR BIT(36);
       58     3250
       59     3251    2      CALL SSS$CACHE;

   3251  0 000004   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000005   000000 701000 xent               TSX1    SSS$CACHE
         0 000006   000000 011000                    NOP     0

       60     3252
       61     3253    3      DO I = 0 TO 0 /* Highest MOUSE page */;

   3253  0 000007   200015 450100                    STZ     I,,AUTO

       62     3254
       63     3255    3         CALL MME$CVM(%MONWSQ, %MOUSELO + I, PH_MUS_PAGES(I), ERROR)

   3255  0 000010   200015 235100                    LDA     I,,AUTO
         0 000011   000540 035007                    ADLA    352,DL
         0 000012   200020 755100                    STA     ERROR+2,,AUTO
         0 000013   200016 630500                    EPPR0   ERROR,,AUTO
         0 000014   200025 450500                    STP0    ERROR+7,,AUTO
         0 000015   200015 720100                    LXL0    I,,AUTO
         0 000016   000000 631410 xsym               EPPR1   PH_MUS_PAGES,X0
         0 000017   200024 451500                    STP1    ERROR+6,,AUTO
         0 000020   200020 633500                    EPPR3   ERROR+2,,AUTO
         0 000021   200023 453500                    STP3    ERROR+5,,AUTO
         0 000022   000000 236000 1                  LDQ     0
         0 000023   200022 756100                    STQ     ERROR+4,,AUTO
         0 000024   200022 630500                    EPPR0   ERROR+4,,AUTO
         0 000025   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000026   000000 701000 xent               TSX1    MME$CVM
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:20   
         0 000027   000041 702000 0                  TSX2    CVM_ERROR

       64     3256    3          ALTRET(CVM_ERROR);
       65     3257
       66     3258    3         END;

   3258  0 000030   200015 235100                    LDA     I,,AUTO
         0 000031   000001 035007                    ADLA    1,DL
         0 000032   200015 755100                    STA     I,,AUTO
         0 000033   000010 600000 0                  TZE     s:3255

       67     3259
       68     3260    2      PH_CPU_MOUSED(S_PNO) = %YES#;

   3260  0 000034   400000 236003                    LDQ     -131072,DU
         0 000035   000000 720000 xsym               LXL0    S_PNO
         0 000036   000000 756010 xsym               STQ     PH_CPU_MOUSED,X0

       69     3261
       70     3262    2      RETURN;

   3262  0 000037   200014 221300                    LDX1  ! DELTA_T+1,,AUTO
         0 000040   000001 702211                    TSX2  ! 1,X1

   3260  0 000041                       CVM_ERROR    null
       71     3263
       72     3264    2   CVM_ERROR: ;
       73     3265
       74     3266    2      B$JIT.ERR = ERROR;

   3266  0 000041   200016 236100                    LDQ     ERROR,,AUTO
         0 000042   000000 470400 xsym               LDP0    B$JIT$
         0 000043   000012 756100                    STQ     10,,PR0

       75     3267
       76     3268    2      CALL SC_PHP212;

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:21   
   3268  0 000044   000000 713400 xsym               CLIMB   SC_PHP212
         0 000045   000000 600000 xsid               climb   nvectors=         0

       77     3269
       78     3270    2   END MAP_THE_PAGES;

   3270  0 000046   200014 221300                    LDX1  ! DELTA_T+1,,AUTO
         0 000047   000001 702211                    TSX2  ! 1,X1
         0 000050   000053 710000 0                  TRA     s:3274

       79     3271        %EJECT;
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:22   
       80     3272    1   PHP$START_PMME: ENTRY;

   3272  0 000051   000000 700200 xent  PHP$START_P* TSX0  ! X66_AUTO_0
         0 000052   000026 000000                    ZERO    22,0

       81     3273
       82     3274    1      CALL SSS$CACHEBP;

   3274  0 000053   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000054   000000 701000 xent               TSX1    SSS$CACHEBP
         0 000055   000000 011000                    NOP     0

       83     3275
       84     3276    1      IF PH_MOUSE_USERS <= 0

   3276  0 000056   000000 235000 xsym               LDA     PH_MOUSE_USERS
         0 000057   000067 604400 0                  TMOZ    s:3280
         0 000060   000000 236000 xsym               LDQ     PH_MOUSE_USER_NUMBER
         0 000061   000073 600000 0                  TZE     s:3284
         0 000062   000000 470400 xsym               LDP0    B$JIT$
         0 000063   000000 236100                    LDQ     0,,PR0
         0 000064   777777 376007                    ANQ     -1,DL
         0 000065   000000 116000 xsym               CMPQ    PH_MOUSE_USER_NUMBER
         0 000066   000073 600000 0                  TZE     s:3284

       85     3277    1       OR (PH_MOUSE_USER_NUMBER ~= 0 AND PH_MOUSE_USER_NUMBER ~= B$JIT.SYSID)
       86     3278    2        THEN DO;

       87     3279
       88     3280    2         CALL SSS$CACHE;

   3280  0 000067   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000070   000000 701000 xent               TSX1    SSS$CACHE
         0 000071   000000 011000                    NOP     0

       89     3281    2         RETURN;

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:23   
   3281  0 000072   000000 702200 xent               TSX2  ! X66_ARET

       90     3282    2         END;
       91     3283
       92     3284    1      IF NOT PH_CPU_MOUSED(S_PNO)

   3284  0 000073   000000 720000 xsym               LXL0    S_PNO
         0 000074   000000 235010 xsym               LDA     PH_CPU_MOUSED,X0
         0 000075   000103 601000 0                  TNZ     s:3291

       93     3285    2        THEN DO;

       94     3286
       95     3287    2         CALL MAP_THE_PAGES;

   3287  0 000076   000003 701000 0                  TSX1    MAP_THE_PAGES
         0 000077   000000 011000                    NOP     0

       96     3288    2         CALL SSC$SERV;

   3288  0 000100   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000101   000000 701000 xent               TSX1    SSC$SERV
         0 000102   000000 011000                    NOP     0

       97     3289    2         END;

       98     3290
       99     3291    1      CALL SSS$CACHE;

   3291  0 000103   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000104   000000 701000 xent               TSX1    SSS$CACHE
         0 000105   000000 011000                    NOP     0

      100     3292
      101     3293    1      IF S_CUN > 511 /* Max user # */ THEN RETURN;

   3293  0 000106   000000 235000 xsym               LDA     S_CUN
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:24   
         0 000107   001000 115007                    CMPA    512,DL
         0 000110   000112 602000 0                  TNC     s:3295

   3293  0 000111   000000 702200 xent               TSX2  ! X66_ARET

      102     3294
      103     3295    1      P$ = B$MOUSE$;

   3295  0 000112   000000 236000 xsym               LDQ     B$MOUSE$
         0 000113   200003 756100                    STQ     P$,,AUTO

      104     3296
      105     3297    1      IF B_MPT.SS$->B$SS.ISR.WSR < 2

   3297  0 000114   000000 470400 xsym               LDP0    B_MPT
         0 000115   000010 236100                    LDQ     8,,PR0
         0 000116   000160 376007                    ANQ     112,DL
         0 000117   000040 116007                    CMPQ    32,DL
         0 000120   000127 603000 0                  TRC     s:3307

      106     3298    2        THEN DO;

      107     3299
      108     3300    2         IF NOT P$ -> PH_MOUSE_TBL.VALID(S_CUN)

   3300  0 000121   200003 471500                    LDP1    P$,,AUTO
         0 000122   000000 066505                    CMPB    filb='0'B
         0 000123   100022 000001                    BDSC    18,A,PR1                 by=0,bit=0,n=1
         0 000124   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         0 000125   000135 601000 0                  TNZ     s:3313

      109     3301    2           THEN RETURN;

   3301  0 000126   000000 702200 xent               TSX2  ! X66_ARET

      110     3302
      111     3303    2         END;
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:25   
      112     3304
      113     3305    2        ELSE DO;

      114     3306
      115     3307    2         B$JIT.PMME_COUNT = 0;

   3307  0 000127   000000 471400 xsym               LDP1    B$JIT$
         0 000130   100342 450100                    STZ     226,,PR1

      116     3308
      117     3309    2         P$ -> PH_MOUSE_TBL.VALID(S_CUN) = '1'B;

   3309  0 000131   200003 473500                    LDP3    P$,,AUTO
         0 000132   003105 060400                    CSL     bolr='003'O
         0 000133   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         0 000134   300022 000001                    BDSC    18,A,PR3                 by=0,bit=0,n=1

      118     3310
      119     3311    2         END;

      120     3312
      121     3313    1      I = B$JIT.PMME_COUNT;

   3313  0 000135   000000 470400 xsym               LDP0    B$JIT$
         0 000136   000342 235100                    LDA     226,,PR0
         0 000137   200005 755100                    STA     I,,AUTO

      122     3314
      123     3315    1      IF I > 3

   3315  0 000140   000003 115007                    CMPA    3,DL
         0 000141   000150 604400 0                  TMOZ    s:3324

      124     3316    2        THEN DO;

      125     3317
      126     3318    2         P$ -> PH_MOUSE_TBL.VALID(S_CUN) = '0'B;
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:26   

   3318  0 000142   200003 471500                    LDP1    P$,,AUTO
         0 000143   000000 236000 xsym               LDQ     S_CUN
         0 000144   003106 060400                    CSL     bolr='003'O
         0 000145   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         0 000146   100022 000001                    BDSC    18,Q,PR1                 by=0,bit=0,n=1

      127     3319
      128     3320    2         RETURN;

   3320  0 000147   000000 702200 xent               TSX2  ! X66_ARET

      129     3321
      130     3322    2         END;
      131     3323
      132     3324    1      P$ = ADDR(B$JIT.PMME_DATA(I));

   3324  0 000150   200005 236100                    LDQ     I,,AUTO
         0 000151   000024 736000                    QLS     20
         0 000152   000343 036003                    ADLQ    227,DU
         0 000153   000000 036000 xsym               ADLQ    B$JIT$
         0 000154   200003 756100                    STQ     P$,,AUTO

      133     3325
      134     3326    1      P$ -> PH_JIT_ENTRY.CPU = B$JIT.STIME;

   3326  0 000155   000261 235100                    LDA     177,,PR0
         0 000156   200003 471500                    LDP1    P$,,AUTO
         0 000157   100000 755100                    STA     0,,PR1

      135     3327
      136     3328    1      P$ -> PH_JIT_ENTRY.I_O = B$JIT.ACCESS.TAPES +

   3328  0 000160   000000 470400 xsym               LDP0    B$JIT$
         0 000161   000330 236100                    LDQ     216,,PR0
         0 000162   000327 036100                    ADLQ    215,,PR0
         0 000163   000331 036100                    ADLQ    217,,PR0
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:27   
         0 000164   100001 756100                    STQ     1,,PR1

      137     3329    1       B$JIT.ACCESS.PACKS + B$JIT.ACCESS.FORMS;
      138     3330
      139     3331    1      B$JIT.PMME_COUNT = I + 1;

   3331  0 000165   200005 235100                    LDA     I,,AUTO
         0 000166   000001 035007                    ADLA    1,DL
         0 000167   000342 755100                    STA     226,,PR0

      140     3332
      141     3333    1      RETURN;

   3333  0 000170   000000 702200 xent               TSX2  ! X66_ARET

      142     3334
      143     3335        %EJECT;
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:28   
      144     3336
      145     3337    1   PHP$END_PMME: ENTRY;

   3337  0 000171   000000 700200 xent  PHP$END_PMME TSX0  ! X66_AUTO_0
         0 000172   000026 000000                    ZERO    22,0

      146     3338
      147     3339    1      CALL SSC$SERV;                                        /* Update JIT fields */

   3339  0 000173   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000174   000000 701000 xent               TSX1    SSC$SERV
         0 000175   000000 011000                    NOP     0

      148     3340
      149     3341    1   START_ENDING_STUFF:
      150     3342           %LOCK (G#=PH_MOUSE_LOCK);
              3343    1   CALL HFC$LOCK(PH_MOUSE_LOCK);

   3343  0 000176   000001 630400 1     START_ENDIN* EPPR0   1
         0 000177   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000200   000000 701000 xent               TSX1    HFC$LOCK
         0 000201   000000 011000                    NOP     0

      151     3345
      152     3346    1      CALL SSS$CACHEBP;

   3346  0 000202   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000203   000000 701000 xent               TSX1    SSS$CACHEBP
         0 000204   000000 011000                    NOP     0

      153     3347
      154     3348    1      IF PH_MOUSE_USERS <= 0

   3348  0 000205   000000 235000 xsym               LDA     PH_MOUSE_USERS
         0 000206   000421 604400 0                  TMOZ    CLOSE_UP
         0 000207   000000 236000 xsym               LDQ     S_CUN
         0 000210   001000 116007                    CMPQ    512,DL
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:29   
         0 000211   000421 603000 0                  TRC     CLOSE_UP
         0 000212   000000 235000 xsym               LDA     PH_MOUSE_USER_NUMBER
         0 000213   000221 600000 0                  TZE     s:3353
         0 000214   000000 470400 xsym               LDP0    B$JIT$
         0 000215   000000 236100                    LDQ     0,,PR0
         0 000216   777777 376007                    ANQ     -1,DL
         0 000217   000000 116000 xsym               CMPQ    PH_MOUSE_USER_NUMBER
         0 000220   000421 601000 0                  TNZ     CLOSE_UP

      155     3349    1       OR S_CUN > 511
      156     3350    1       OR (PH_MOUSE_USER_NUMBER ~= 0 AND PH_MOUSE_USER_NUMBER ~= B$JIT.SYSID)
      157     3351    1        THEN GOTO CLOSE_UP;
      158     3352
      159     3353    1      IF NOT PH_CPU_MOUSED(S_PNO)

   3353  0 000221   000000 720000 xsym               LXL0    S_PNO
         0 000222   000000 235010 xsym               LDA     PH_CPU_MOUSED,X0
         0 000223   000233 601000 0                  TNZ     s:3362

      160     3354    2        THEN DO;

      161     3355              %UNLOCK (G#=PH_MOUSE_LOCK);
              3356    2   CALL HFC$UNLOCK(PH_MOUSE_LOCK);

   3356  0 000224   000001 630400 1                  EPPR0   1
         0 000225   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000226   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000227   000000 011000                    NOP     0

      162     3358    2         CALL MAP_THE_PAGES;

   3358  0 000230   000003 701000 0                  TSX1    MAP_THE_PAGES
         0 000231   000000 011000                    NOP     0

      163     3359    2         GOTO START_ENDING_STUFF;

   3359  0 000232   000176 710000 0                  TRA     START_ENDING_STUFF
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:30   

      164     3360    2         END;
      165     3361
      166     3362    1      IF NOT PH_MOUSE_TBL.VALID(S_CUN)

   3362  0 000233   000000 470400 xsym               LDP0    B$MOUSE$
         0 000234   000000 236000 xsym               LDQ     S_CUN
         0 000235   000000 066506                    CMPB    filb='0'B
         0 000236   000022 000001                    BDSC    18,Q,PR0                 by=0,bit=0,n=1
         0 000237   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         0 000240   000421 600000 0                  TZE     CLOSE_UP

      167     3363    1        THEN
      168     3364    1         GOTO CLOSE_UP;
      169     3365
      170     3366    1      CALL SSS$CACHE;

   3366  0 000241   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000242   000000 701000 xent               TSX1    SSS$CACHE
         0 000243   000000 011000                    NOP     0

      171     3367
      172     3368    1      B$JIT.PMME_COUNT = B$JIT.PMME_COUNT - 1;

   3368  0 000244   000000 470400 xsym               LDP0    B$JIT$
         0 000245   000001 336007                    LCQ     1,DL
         0 000246   000342 056100                    ASQ     226,,PR0

      173     3369
      174     3370    1      FCG = B_MPT.SS$->B$SS.FPT.FCG;

   3370  0 000247   000000 471400 xsym               LDP1    B_MPT
         0 000250   100001 236100                    LDQ     1,,PR1
         0 000251   000036 772000                    QRL     30
         0 000252   000037 376007                    ANQ     31,DL
         0 000253   200011 756100                    STQ     FCG,,AUTO

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:31   
      175     3371
      176     3372    1      CODE = MOD(B_MPT.SS$->B$SS.FPT.CODE, 1024);    /* remove top 2 bits (special) */

   3372  0 000254   100001 236100                    LDQ     1,,PR1
         0 000255   000022 772000                    QRL     18
         0 000256   007777 376007                    ANQ     4095,DL
         0 000257   001777 376007                    ANQ     1023,DL
         0 000260   200012 756100                    STQ     CODE,,AUTO

      177     3373
      178     3374    1      IF FCG > PH_MOUSE_TBL.FCGS

   3374  0 000261   000000 473400 xsym               LDP3    B$MOUSE$
         0 000262   300001 236100                    LDQ     1,,PR3
         0 000263   200011 116100                    CMPQ    FCG,,AUTO
         0 000264   000274 602000 0                  TNC     s:3378
         0 000265   200011 720100                    LXL0    FCG,,AUTO
         0 000266   300002 236110                    LDQ     2,X0,PR3
         0 000267   000023 736000                    QLS     19
         0 000270   000023 732000                    QRS     19
         0 000271   000274 604000 0                  TMI     s:3378
         0 000272   200012 116100                    CMPQ    CODE,,AUTO
         0 000273   000300 603000 0                  TRC     s:3398

      179     3375    1       OR CODE > PH_MOUSE_TBL.FCG.MAX_FPT(FCG)
      180     3376    2        THEN DO;

      181     3377
      182     3378    2         PH_MOUSE_USERS = 0;

   3378  0 000274   000000 450000 xsym               STZ     PH_MOUSE_USERS

      183     3379    2         CALL SC_PHP215;

   3379  0 000275   000000 713400 xsym               CLIMB   SC_PHP215
         0 000276   000000 600000 xsid               climb   nvectors=         0

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:32   
      184     3380    2         GOTO CLOSE_UP;

   3380  0 000277   000421 710000 0                  TRA     CLOSE_UP

      185     3381    2         END;
      186     3382
      187     3383        /*S*  SCREECH_CODE:  PHP-S$SC215
      188     3384              TYPE:          SNAP
      189     3385              MESSAGE: A seemingly valid PMME was issued, and was passed to
      190     3386                       PHP$PMME for performance analysis, which is outside
      191     3387                       of the range of PMME FCGs and/or FPT codes known to
      192     3388                       PHP$PMME.  Either a new FCG has been added to UD_MAXTAB,
      193     3389                       or the performance monitor's data pages have been
      194     3390                       clobbered.  In the prior case, the PHA$ERS module must
      195     3391                       be recompiled with the new UD_EQU_E %INCLUDE file.  In
      196     3392                       any case, PMME monitoring is turned off (by zeroing the
      197     3393                       "monitoring in progress" cell;  the pages used by the
      198     3394                       monitoring feature are not returned to the free page pool,
      199     3395                       and can if desired be dumped via XDELTA.
      200     3396                                                                                      */
      201     3397
      202     3398    1      IF B_MPT.SS$->B$SS.ISR.WSR = 2

   3398  0 000300   100010 236100                    LDQ     8,,PR1
         0 000301   000160 376007                    ANQ     112,DL
         0 000302   000040 116007                    CMPQ    32,DL
         0 000303   000421 600000 0                  TZE     CLOSE_UP

      203     3399    1        THEN
      204     3400    1         GOTO CLOSE_UP;
      205     3401
      206     3402    1      IF PH_MOUSE_TBL.FCG.BREAKDOWN(FCG)

   3402  0 000304   300002 236110                    LDQ     2,X0,PR3
         0 000305   400000 316007                    CANQ    -131072,DL
         0 000306   000324 600000 0                  TZE     s:3408

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:33   
      207     3403    2        THEN DO;

      208     3404    2         OFFSET = CODE * (7 /* Max ASN */ + 1);

   3404  0 000307   200012 235100                    LDA     CODE,,AUTO
         0 000310   000003 735000                    ALS     3
         0 000311   200007 755100                    STA     OFFSET,,AUTO

      209     3405    2         IF B$JIT.DCB$ ~= ADDR(NIL)

   3405  0 000312   000232 236100                    LDQ     154,,PR0
         0 000313   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000314   000326 600000 0                  TZE     s:3410

      210     3406    2           THEN OFFSET = OFFSET + B$JIT.DCB$ -> F$DCB.ASN;

   3406  0 000315   000232 474500                    LDP4    154,,PR0
         0 000316   400032 236100                    LDQ     26,,PR4
         0 000317   000011 772000                    QRL     9
         0 000320   000777 376007                    ANQ     511,DL
         0 000321   200007 036100                    ADLQ    OFFSET,,AUTO
         0 000322   200007 756100                    STQ     OFFSET,,AUTO

      211     3407    2         END;

   3407  0 000323   000326 710000 0                  TRA     s:3410

      212     3408    1        ELSE OFFSET = CODE;

   3408  0 000324   200012 235100                    LDA     CODE,,AUTO
         0 000325   200007 755100                    STA     OFFSET,,AUTO

      213     3409
      214     3410    1      J = B$JIT.PMME_COUNT;

   3410  0 000326   000342 235100                    LDA     226,,PR0
         0 000327   200006 755100                    STA     J,,AUTO
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:34   

      215     3411
      216     3412    1      P$ = PINCRW(B$MOUSE$, (OFFSET * SIZEW(PH_MOUSE_ENTRY)) +

   3412  0 000330   300002 236110                    LDQ     2,X0,PR3
         0 000331   000022 772000                    QRL     18
         0 000332   200020 756100                    STQ     ERROR+2,,AUTO
         0 000333   200007 236100                    LDQ     OFFSET,,AUTO
         0 000334   000003 402007                    MPY     3,DL
         0 000335   200020 036100                    ADLQ    ERROR+2,,AUTO
         0 000336   000022 736000                    QLS     18
         0 000337   000000 036000 xsym               ADLQ    B$MOUSE$
         0 000340   200003 756100                    STQ     P$,,AUTO

      217     3413    1       PH_MOUSE_TBL.FCG.OFFSET(FCG));
      218     3414
      219     3415    1      Q$ = ADDR(B$JIT.PMME_DATA(J));

   3415  0 000341   200006 236100                    LDQ     J,,AUTO
         0 000342   000024 736000                    QLS     20
         0 000343   000343 036003                    ADLQ    227,DU
         0 000344   000000 036000 xsym               ADLQ    B$JIT$
         0 000345   200004 756100                    STQ     Q$,,AUTO

      220     3416
      221     3417    1      P$ -> PH_MOUSE_ENTRY.COUNT = P$ -> PH_MOUSE_ENTRY.COUNT + 1;

   3417  0 000346   200003 474500                    LDP4    P$,,AUTO
         0 000347   400000 235100                    LDA     0,,PR4
         0 000350   000001 035007                    ADLA    1,DL
         0 000351   400000 755100                    STA     0,,PR4

      222     3418
      223     3419    1      DELTA_T = B$JIT.STIME - Q$ -> PH_JIT_ENTRY.CPU;

   3419  0 000352   200004 470500                    LDP0    Q$,,AUTO
         0 000353   000000 471400 xsym               LDP1    B$JIT$
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:35   
         0 000354   100261 236100                    LDQ     177,,PR1
         0 000355   000000 136100                    SBLQ    0,,PR0
         0 000356   200013 756100                    STQ     DELTA_T,,AUTO

      224     3420
      225     3421    1      IF DELTA_T > 0

   3421  0 000357   000421 604400 0                  TMOZ    CLOSE_UP
         0 000360   000002 116000 1                  CMPQ    2
         0 000361   000421 605000 0                  TPL     CLOSE_UP

      226     3422    1       AND DELTA_T < 1000000
      227     3423    2        THEN DO;

      228     3424
      229     3425    2         P$ -> PH_MOUSE_ENTRY.CPU = P$ -> PH_MOUSE_ENTRY.CPU + DELTA_T;

   3425  0 000362   400001 036100                    ADLQ    1,,PR4
         0 000363   400001 756100                    STQ     1,,PR4

      230     3426
      231     3427              %UPDATE_BUCKET (BUCKET=P_PMME_TIME,
      232     3428              DIST_VAL=DELTA_T,
      233     3429              SCRATCH=J);
              3430    2      J = 0;

   3430  0 000364   200006 450100                    STZ     J,,AUTO

              3431    3      DO WHILE (J < P_PMME_TIME.SIZE AND

   3431  0 000365   000367 710000 0                  TRA     s:3434

              3432    3          DELTA_T > P_PMME_TIME.DATA(J));
              3433    3         J = J + 1;

   3433  0 000366   200006 054100                    AOS     J,,AUTO

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:36   
              3434    3         END;

   3434  0 000367   200006 236100                    LDQ     J,,AUTO
         0 000370   000373 604000 0                  TMI     s:3434+4
         0 000371   000000 116000 xsym               CMPQ    P_PMME_TIME
         0 000372   000377 603000 0                  TRC     s:3435
         0 000373   000000 620006                    EAX0    0,QL
         0 000374   200013 236100                    LDQ     DELTA_T,,AUTO
         0 000375   000002 116010 xsym               CMPQ    P_PMME_TIME+2,X0
         0 000376   000366 605400 0                  TPNZ    s:3433

              3435    2      P_PMME_TIME.DATA(J + P_PMME_TIME.SIZE + 1) =

   3435  0 000377   200006 236100                    LDQ     J,,AUTO
         0 000400   000000 036000 xsym               ADLQ    P_PMME_TIME
         0 000401   200020 756100                    STQ     ERROR+2,,AUTO
         0 000402   200006 236100                    LDQ     J,,AUTO
         0 000403   000000 036000 xsym               ADLQ    P_PMME_TIME
         0 000404   200020 720100                    LXL0    ERROR+2,,AUTO
         0 000405   000003 235006 xsym               LDA     P_PMME_TIME+3,QL
         0 000406   000001 035007                    ADLA    1,DL
         0 000407   000003 755010 xsym               STA     P_PMME_TIME+3,X0

              3436    2       P_PMME_TIME.DATA(J + P_PMME_TIME.SIZE + 1) + 1;
      234     3438
      235     3439    2         P$ -> PH_MOUSE_ENTRY.I_O = P$ -> PH_MOUSE_ENTRY.I_O +

   3439  0 000410   200003 470500                    LDP0    P$,,AUTO
         0 000411   000000 471400 xsym               LDP1    B$JIT$
         0 000412   000002 236100                    LDQ     2,,PR0
         0 000413   100330 036100                    ADLQ    216,,PR1
         0 000414   100327 036100                    ADLQ    215,,PR1
         0 000415   100331 036100                    ADLQ    217,,PR1
         0 000416   200004 473500                    LDP3    Q$,,AUTO
         0 000417   300001 136100                    SBLQ    1,,PR3
         0 000420   000002 756100                    STQ     2,,PR0

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:37   
      236     3440    2          B$JIT.ACCESS.TAPES + B$JIT.ACCESS.PACKS +
      237     3441    2          B$JIT.ACCESS.FORMS - Q$ -> PH_JIT_ENTRY.I_O;
      238     3442
      239     3443    2         END;

      240     3444
      241     3445    1   CLOSE_UP:
      242     3446
      243     3447           %UNLOCK (G#=PH_MOUSE_LOCK);
              3448    1   CALL HFC$UNLOCK(PH_MOUSE_LOCK);

   3448  0 000421   000001 630400 1     CLOSE_UP     EPPR0   1
         0 000422   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000423   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000424   000000 011000                    NOP     0

      244     3450    1      CALL SSS$CACHE;

   3450  0 000425   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000426   000000 701000 xent               TSX1    SSS$CACHE
         0 000427   000000 011000                    NOP     0

      245     3451
      246     3452    1      RETURN;

   3452  0 000430   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000003 006000   000000 006000   000003 641100                    ...........@
      247     3453
      248     3454    1   END PHP$PMME;

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:38   
--  Include file information  --

   PM_BUCKET_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_MAGIC_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   P_PMDAT_R.:E05TOU  cannot be made into a system file and is referenced.
   UD_EQU_E.:E05TOU  is referenced.
   B$SS.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure PHP$PMME.
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:39   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    12-0-0/w UBIN        r     1 CODE                      13-0-0/w SBIN        r     1 DELTA_T
    16-0-0/b BIT         r     1 ERROR                     11-0-0/w UBIN        r     1 FCG
     5-0-0/w SBIN        r     1 I                         15-0-0/w UBIN        r     1 I
     6-0-0/w SBIN        r     1 J                          7-0-0/w SBIN        r     1 OFFSET
     3-0-0/w PTR         r     1 P$                         4-0-0/w PTR         r     1 Q$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$MOUSE$
     0-0-0/d STRC(432)   r     1 B_MPT
     0-0-0/w BIT         r     1 PH_CPU_MOUSED(0:3)
     0-0-0/b BIT (72)    r     1 PH_MOUSE_LOCK              0-0-0/w SBIN        r     1 PH_MOUSE_USERS
     0-0-0/w UBIN        r     1 PH_MOUSE_USER_NUMBER
     0-0-0/w UBIN        r     1 PH_MUS_PAGES(0:0)
     0-0-0/d STRC(108)   r     1 P_PMME_TIME                0-0-0/w PTR         r     1 P_RESOURCE$
     0-0-0/w UBIN        r     1 S_CUN                      0-0-0/w UBIN        r     1 S_PNO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(2304)  r     1 B$SS
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(72)    r     1 PH_JIT_ENTRY
     0-0-0/w STRC(108)   r     1 PH_MOUSE_ENTRY             0-0-0/w STRC(1296)  r     1 PH_MOUSE_TBL

PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:40   

   Procedure PHP$PMME requires 281 words for executable code.
   Procedure PHP$PMME requires 22 words of local(AUTO) storage.

    No errors detected in file PHP$PMME.:E05TSI    .
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:41   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:42   
          MINI XREF LISTING

B$JIT.ACCESS.FORMS
      3096**DCL      3328>>ASSIGN   3439>>ASSIGN
B$JIT.ACCESS.PACKS
      3096**DCL      3328>>ASSIGN   3439>>ASSIGN
B$JIT.ACCESS.TAPES
      3096**DCL      3328>>ASSIGN   3439>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      2922**DCL      2922--REDEF
B$JIT.DCB$
      2996**DCL      3405>>IF       3406>>ASSIGN
B$JIT.ERR
      2828**DCL      3266<<ASSIGN
B$JIT.ERR.MID
      2829**DCL      2829--REDEF
B$JIT.JRESPEAK
      2990**DCL      2991--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      3099**DCL      3099--REDEF    3100--REDEF
B$JIT.PMME_COUNT
      3100**DCL      3307<<ASSIGN   3313>>ASSIGN   3331<<ASSIGN   3368<<ASSIGN   3368>>ASSIGN   3410>>ASSIGN
B$JIT.PMME_DATA
      3100**DCL      3324--ASSIGN   3415--ASSIGN
B$JIT.PNR
      3003**DCL      3003--REDEF
B$JIT.STIME
      3001**DCL      3326>>ASSIGN   3419>>ASSIGN
B$JIT.SYSID
      2828**DCL      3276>>IF       3348>>IF
B$JIT.TSLINE
      3097**DCL      3098--REDEF
B$JIT$
      3226**DCL      2823--IMP-PTR  3266>>ASSIGN   3276>>IF       3307>>ASSIGN   3313>>ASSIGN   3324>>ASSIGN
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:43   
      3326>>ASSIGN   3328>>ASSIGN   3328>>ASSIGN   3328>>ASSIGN   3331>>ASSIGN   3348>>IF       3368>>ASSIGN
      3368>>ASSIGN   3405>>IF       3406>>ASSIGN   3410>>ASSIGN   3415>>ASSIGN   3419>>ASSIGN   3439>>ASSIGN
      3439>>ASSIGN   3439>>ASSIGN
B$MOUSE$
      3225**DCL      3210--IMP-PTR  3295>>ASSIGN   3362>>IF       3374>>IF       3374>>IF       3402>>IF
      3412>>ASSIGN   3412>>ASSIGN
B$SS.FPT.CODE
        29**DCL      3372>>ASSIGN
B$SS.FPT.FCG
        28**DCL      3370>>ASSIGN
B$SS.ISR.WSR
        72**DCL      3297>>IF       3398>>IF
B$SS.RVA
        67**DCL        68--REDEF
B_MPT.AS
      1635**DCL      1638--REDEF
B_MPT.ASDESC
      1667**DCL      1671--REDEF
B_MPT.ECCB
      1650**DCL      1653--REDEF
B_MPT.ECCBDESC
      1685**DCL      1689--REDEF
B_MPT.LS
      1630**DCL      1633--REDEF
B_MPT.LSDESC
      1661**DCL      1665--REDEF
B_MPT.PS
      1640**DCL      1643--REDEF
B_MPT.PSDESC
      1673**DCL      1677--REDEF
B_MPT.SS
      1625**DCL      1628--REDEF
B_MPT.SS$
      1628**DCL      3297>>IF       3370>>ASSIGN   3372>>ASSIGN   3398>>IF
B_MPT.SSDESC
      1655**DCL      1659--REDEF
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:44   
B_MPT.TCB
      1645**DCL      1648--REDEF
B_MPT.TCBDESC
      1679**DCL      1683--REDEF
CLOSE_UP
      3448**LABEL    3351--GOTO     3364--GOTO     3380--GOTO     3400--GOTO
CODE
      3235**DCL      3372<<ASSIGN   3374>>IF       3404>>ASSIGN   3408>>ASSIGN
CVM_ERROR IN PROCEDURE MAP_THE_PAGES
      3260**LABEL    3255--CALLALT
DELTA_T
      3236**DCL      3419<<ASSIGN   3421>>IF       3421>>IF       3425>>ASSIGN   3431>>DOWHILE
ERROR IN PROCEDURE MAP_THE_PAGES
      3249**DCL      3255<>CALL     3266>>ASSIGN
F$DCB.ACTPOS
       917**DCL       917--REDEF
F$DCB.ARS
       892**DCL       892--REDEF
F$DCB.ASN
       907**DCL      3406>>ASSIGN
F$DCB.ATTR
       910**DCL       911--REDEF
F$DCB.BORROW
       925**DCL       925--REDEF     925--REDEF     925--REDEF
F$DCB.DCBNAME.L
       939**DCL       939--IMP-SIZ
F$DCB.EOMCHAR
       896**DCL       896--REDEF
F$DCB.FLDID
       920**DCL       920--REDEF
F$DCB.FORM$
       914**DCL       914--REDEF
F$DCB.FSECT
       930**DCL       930--REDEF
F$DCB.FSN
       907**DCL       907--REDEF     907--REDEF     908--REDEF
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:45   
F$DCB.HEADER$
       913**DCL       913--REDEF
F$DCB.IXTNSIZE
       911**DCL       911--REDEF
F$DCB.LASTSTA$
       901**DCL       901--REDEF
F$DCB.LVL
       926**DCL       926--REDEF
F$DCB.NAME.C
       901**DCL       901--REDEF
F$DCB.NOEOF
       922**DCL       922--REDEF
F$DCB.NRECS
       912**DCL       912--REDEF
F$DCB.NRECX
       931**DCL       931--REDEF
F$DCB.OHDR
       923**DCL       923--REDEF
F$DCB.ORG
       906**DCL       906--REDEF
F$DCB.PRECNO
       929**DCL       929--REDEF
F$DCB.RCSZ
       934**DCL       934--REDEF
F$DCB.RES
       902**DCL       902--REDEF
F$DCB.SETX
       914**DCL       914--REDEF
F$DCB.TAB$
       913**DCL       914--REDEF
F$DCB.TDA
       928**DCL       928--REDEF
F$DCB.WSN
       903**DCL       903--REDEF
FCG
      3234**DCL      3370<<ASSIGN   3374>>IF       3374>>IF       3402>>IF       3412>>ASSIGN
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:46   
HFC$LOCK
      3117**DCL-ENT  3343--CALL
HFC$UNLOCK
      3117**DCL-ENT  3356--CALL     3448--CALL
I
      3229**DCL      3313<<ASSIGN   3315>>IF       3324>>ASSIGN   3331>>ASSIGN
I IN PROCEDURE MAP_THE_PAGES
      3248**DCL      3253<<DOINDEX  3255>>CALL     3255>>CALL
J
      3230**DCL      3410<<ASSIGN   3415>>ASSIGN   3430<<ASSIGN   3431>>DOWHILE  3431>>DOWHILE  3433<<ASSIGN
      3433>>ASSIGN   3435>>ASSIGN   3435>>ASSIGN
MAP_THE_PAGES
      3246**PROC     3287--CALL     3358--CALL
MME$CVM
      3243**DCL-ENT  3255--CALL
OFFSET
      3232**DCL      3404<<ASSIGN   3406<<ASSIGN   3406>>ASSIGN   3408<<ASSIGN   3412>>ASSIGN
P$
      3227**DCL      3295<<ASSIGN   3300>>IF       3309>>ASSIGN   3318>>ASSIGN   3324<<ASSIGN   3326>>ASSIGN
      3328>>ASSIGN   3412<<ASSIGN   3417>>ASSIGN   3417>>ASSIGN   3425>>ASSIGN   3425>>ASSIGN   3439>>ASSIGN
      3439>>ASSIGN
PH_CPU_MOUSED
       889**DCL      3260<<ASSIGN   3284>>IF       3353>>IF
PH_JIT_ENTRY.CPU
       886**DCL      3326<<ASSIGN   3419>>ASSIGN
PH_JIT_ENTRY.I_O
       887**DCL      3328<<ASSIGN   3439>>ASSIGN
PH_MOUSE_ENTRY
       881**DCL      3412--ASSIGN
PH_MOUSE_ENTRY.COUNT
       882**DCL      3417<<ASSIGN   3417>>ASSIGN
PH_MOUSE_ENTRY.CPU
       883**DCL      3425<<ASSIGN   3425>>ASSIGN
PH_MOUSE_ENTRY.I_O
       884**DCL      3439<<ASSIGN   3439>>ASSIGN
PH_MOUSE_LOCK
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:47   
       888**DCL      3343<>CALL     3356<>CALL     3448<>CALL
PH_MOUSE_TBL.FCG.BREAKDOWN
      3216**DCL      3402>>IF
PH_MOUSE_TBL.FCG.MAX_FPT
      3217**DCL      3374>>IF
PH_MOUSE_TBL.FCG.OFFSET
      3215**DCL      3412>>ASSIGN
PH_MOUSE_TBL.FCGS
      3213**DCL      3374>>IF
PH_MOUSE_TBL.VALID
      3218**DCL      3300>>IF       3309<<ASSIGN   3318<<ASSIGN   3362>>IF
PH_MOUSE_USERS
       878**DCL      3276>>IF       3348>>IF       3378<<ASSIGN
PH_MOUSE_USER_NUMBER
       890**DCL      3276>>IF       3276>>IF       3348>>IF       3348>>IF
PH_MUS_PAGES
       880**DCL      3255<>CALL
P_NSCPU
       871**DCL       872--REDEF
P_PMME_TIME.DATA
      3207**DCL      3431>>DOWHILE  3435<<ASSIGN   3435>>ASSIGN
P_PMME_TIME.SIZE
      3205**DCL      3431>>DOWHILE  3435>>ASSIGN   3435>>ASSIGN
P_RESOURCE.RES
       744**DCL       811--REDEF
P_RESOURCE$
       824**DCL       712--IMP-PTR
P_UPTIME
       860**DCL       861--REDEF
Q$
      3228**DCL      3415<<ASSIGN   3419>>ASSIGN   3439>>ASSIGN
SC_PHP212
      3244**DCL-ENT  3268--CALL
SC_PHP215
      3239**DCL-ENT  3379--CALL
SSC$SERV
PL6.E3A0      #001=PHP$PMME File=PHP$PMME.:E05TSI                                WED 07/30/97 04:24 Page:48   
      3240**DCL-ENT  3288--CALL     3339--CALL
SSS$CACHE
      3242**DCL-ENT  3251--CALL     3280--CALL     3291--CALL     3366--CALL     3450--CALL
SSS$CACHEBP
      3241**DCL-ENT  3274--CALL     3346--CALL
START_ENDING_STUFF
      3343**LABEL    3359--GOTO
S_CUN
      3237**DCL      3293>>IF       3300>>IF       3309>>ASSIGN   3318>>ASSIGN   3348>>IF       3362>>IF
S_PNO
      3231**DCL      3260>>ASSIGN   3284>>IF       3353>>IF
