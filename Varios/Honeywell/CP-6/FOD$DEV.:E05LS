VERSION E05

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:1    
        1        1        /*M* FOD$DEV Device scheduling routines for OUTSYM ghost */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         FOD$DEV
       10       10             PURPOSE:      To handle devices for OUTSYM
       11       11             DESCRIPTION:  FOD$DEV contains all of the device-specific
       12       12                           logic for the OUTSYM ghost, except for
       13       13                           stuff specific to forms mounting, which
       14       14                           is handled in FOR$FORM. */
       15       15        /**/
       16       16        /**/
       17       17        FOD$DEV: PROC (EVENT,DINFO) ALTRET;
       18       18
       19       19
       20       20
       21       21        /**/
       22       22        /* PARAMETERS */
       23       23        /**/
       24       24    1   DCL EVENT UBIN WORD;
       25       25    1   DCL DINFO UBIN WORD;
       26       26    1   DCL PREVLEXT$ REDEF DINFO PTR;
       27       27    1   DCL INFO REDEF DINFO UBIN WORD;
       28       28    1   DCL 1 INFOB REDEF DINFO,
       29       29    1         2 BLK# UBIN(18) UNAL,
       30       30    1         2 REC# UBIN(18) UNAL;
       31       31    1   DCL KEYIN$ REDEF DINFO PTR;
       32       32    1   DCL NOSTART REDEF DINFO UBIN WORD;
       33       33
       34       34
       35       35
       36       36        /**/
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:2    
       37       37        /* INCLUDES */
       38       38        /**/
       39       39        %INCLUDE CP_6;
       40      120        %INCLUDE FM$GRAN;
       41      189        %INCLUDE B$JIT;
       42      479        %INCLUDE EL$TABLES;
       43      802        %INCLUDE EL_SUBS_C;
       44      886        %INCLUDE FO_ERRORS_C;
       45      918        %INCLUDE F_ERRORS_C;
       46     1158        %INCLUDE KC_ERRORS_C;
       47     1205        %INCLUDE KC_SUBS_C;
       48     1221        %INCLUDE OC_SUBS_C;
       49     1952        %INCLUDE FOM_SUBS_C;
       50     2015        %INCLUDE FOO_SUBS_C;
       51     2251        %INCLUDE FS$FIT;
       52     2294        %INCLUDE FOO_MAC_C;
       53     3042        %INCLUDE FOO_DATA_R;
       54     4208        %INCLUDE FOM$STRUCT;
       55     4269        %INCLUDE FO_SCODE_C;
       56     4297        %INCLUDE OC_MESSHD_C;
       57     4350        %INCLUDE M_ERRORS_C;
       58     4414
       59     4415
       60     4416
       61     4417        /**/
       62     4418        /*  BASED STRUCTURES */
       63     4419        /**/
       64     4420        %B$TCB (STCLASS="BASED(B$TCB$)");
       65     4423        %B$ALT;
       66     4431        %FM$GRAN;
       67     4435        %FOM$SBUF;
       68     4439    1   DCL B$CHARS CHAR(I) BASED UNAL;
       69     4440
       70     4441
       71     4442
       72     4443        /**/
       73     4444        /*  AUTO */
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:3    
       74     4445        /**/
       75     4446    1   DCL I UBIN WORD;
       76     4447    1   DCL P$ PTR;
       77     4448    1   DCL PP$ PTR;
       78     4449    1   DCL WSN$ PTR;
       79     4450    1   DCL P_WSN$ PTR;
       80     4451    1   DCL J UBIN WORD;
       81     4452    1   DCL WSN_MATCH BIT(1);
       82     4453    1   DCL WSN CHAR(8) UNAL;
       83     4454    1   DCL LNK_WSN$ PTR;
       84     4455    1   DCL WSN_TOTAL UBIN WORD;
       85     4456    1   DCL WSN_TALLY UBIN WORD;
       86     4457    1   DCL FIL_CNUM UBIN WORD;
       87     4458    1   DCL JOB_SYSID UBIN WORD;
       88     4459    1   DCL QUITRSN UBIN WORD;
       89     4460    1   DCL OLDQUITRSN UBIN WORD;
       90     4461    1   DCL PRIO UBIN WORD;
       91     4462    1   DCL KERR UBIN WORD;
       92     4463    1   DCL FRDAD UBIN WORD;
       93     4464    1   DCL BLK# UBIN WORD;
       94     4465    1   DCL HASH UBIN WORD;
       95     4466    1   DCL SAVFIL$ PTR;
       96     4467    1   DCL BLOCK UBIN WORD;
       97     4468    1   DCL GRANS UBIN WORD;
       98     4469    1   DCL DAD UBIN WORD;
       99     4470    1   DCL GRAN$ PTR;
      100     4471    1   DCL TOKERSN UBIN WORD;
      101     4472    1   DCL REC$ PTR;
      102     4473    1   DCL EXTBLNK$ PTR;
      103     4474    1   DCL 1 STAMP ALIGNED,
      104     4475    1         2 HASH UBIN(27) UNAL,
      105     4476    1         2 FRDAD UBIN(9) UNAL;
      106     4477    1   DCL PAGES SBIN WORD;
      107     4478    1   DCL STATE UBIN WORD;
      108     4479    1   DCL EXT$ PTR;
      109     4480    1   DCL LOGIT UBIN WORD;
      110     4481    1   DCL ACKTYP UBIN WORD;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:4    
      111     4482    1   DCL 1 ALSTAT ALIGNED,
      112     4483    1         2 STAT UBIN WORD UNAL,
      113     4484    1         2 ERRC UBIN WORD UNAL;
      114     4485    1   DCL SAVE_ACCN CHAR(8) ALIGNED;
      115     4486    1   DCL SAVE_UNAME CHAR(12) ALIGNED;
      116     4487
      117     4488
      118     4489
      119     4490        /**/
      120     4491        /*  STATIC */
      121     4492        /**/
      122     4493    1   DCL DEVNAME CHAR(8) STATIC DALIGNED;
      123     4494    1   DCL 1 DEVNAMER REDEF DEVNAME DALIGNED,
      124     4495    1         2 TYP CHAR(2) UNAL,
      125     4496    1         2 NUM CHAR(2) UNAL,
      126     4497    1         2 TWSN# CHAR(4) UNAL;
      127     4498    1   DCL FABTMSG CHAR(32) CONSTANT INIT('c****LAST RECORD SUPPLIED BY CP6');
      128     4499    1   DCL ABTMSGS (0:11) CHAR(40) CONSTANT ALIGNED INIT(
      129     4500    1    ': OUTPUT ABORTED BY OPERATOR',
      130     4501    1    ': OUTPUT TRUNCATED - FILE INCONSISTENCY',
      131     4502    1    ': CONCURRENT MODE FILE ABORT',
      132     4503    1    ': OUTPUT DELETED BY OPERATOR',
      133     4504    1    ' RECOVERY',
      134     4505    1    ': CONCURRENT MODE FILE ABORT',
      135     4506    1    ': OUTPUT TRUNCATED - BAD DISK ADDRESS',
      136     4507    1    ': OUTPUT CANCELLED BY USER',
      137     4508    1    ': OUTPUT STOPPED - SAVE KEYIN ',
      138     4509    1    ': OUTPUT STOPPED - JOB BEING RERUN',
      139     4510    1    ': OUTPUT STOPPED - ZAP KEYIN',
      140     4511    1    ': OUTPUT ERASED BY USER');
      141     4512    1   DCL DO_ONMSG UBIN WORD STATIC INIT(0);
      142     4513        %VLP_SYMBEXTENT (FPTN=EXTENT,STCLASS=STATIC);
      143     4526    1   DCL 1 CHKPREC STATIC ALIGNED,
      144     4527    1         2 *      CHAR(01) UNAL INIT('A'),
      145     4528    1         2 *      (0:12) CHAR(1) UNAL INIT('*'*0),
      146     4529    1         2 *      CHAR(20) UNAL INIT('PARTIAL FILE: SYSID '),
      147     4530    1         2 SYSID  CHAR(06) UNAL,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:5    
      148     4531    1         2 *      CHAR(1) UNAL INIT(' '),
      149     4532    1         2 *      (0:48) CHAR(1) UNAL INIT('*'*0);
      150     4533    1   DCL CHKPRECR REDEF CHKPREC CHAR(90) ALIGNED;
      151     4534        %FO_DKEYIN                             (FPTN=SPKEYIN,
      152     4535                 IKIN#     = KEY_SPACE#,
      153     4536                 STCLASS   = STATIC);
      154     4568        %EL$OSFI (NAME=LOG_ERR_BUF,STCLASS=STATIC);
      155     4575        %FO_DKEYIN                             (FPTN=ALKEYIN,
      156     4576                 IKIN#     = KEY_ALIGN#,
      157     4577                 STCLASS   = STATIC);
      158     4609        %OC_MESSHD_D            (NAME=OPMSG_SUSP,
      159     4610                 NPARMS    = 4,
      160     4611                 MSG       = FO_SUSP_MSG#,
      161     4612                 ATR       = M_UR,
      162     4613                 STCLASS   = STATIC);
      163     4626    1         2 * UBIN BYTE UNAL INIT(1),
      164     4627    1         2 * UBIN BYTE UNAL INIT(2),
      165     4628    1         2 * UBIN BYTE UNAL INIT(8),
      166     4629    1         2 * UBIN BYTE UNAL INIT(1),
      167     4630    1         2 SUBC UBIN BYTE UNAL,
      168     4631    1         2 NUM UBIN HALF UNAL,
      169     4632    1         2 ACCT CHAR(8) UNAL,
      170     4633    1         2 QUITRSN UBIN BYTE UNAL;
      171     4634        %OC_MESSHD_D            (NAME=OPMSG_TDSC,
      172     4635                 NPARMS    = 1,
      173     4636                 MSG       = FO_TDSC_MSG#,
      174     4637                 ATR       = M_UR,
      175     4638                 STCLASS   = STATIC);
      176     4651    1         2 * UBIN BYTE UNAL INIT(1),
      177     4652    1         2 SUBC UBIN BYTE UNAL INIT(FOTD_NRML#);
      178     4653        %OC_MESSHD_D            (NAME=OPMSG_RESP,
      179     4654                 NPARMS    = 2,
      180     4655                 MSG       = FO_RESP_MSG#,
      181     4656                 ATR       = M_UR,
      182     4657                 STCLASS   = STATIC);
      183     4670    1         2 * UBIN BYTE UNAL INIT(1),
      184     4671    1         2 * UBIN BYTE UNAL INIT(8),
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:6    
      185     4672    1         2 SUBC UBIN BYTE UNAL,
      186     4673    1         2 ACCT CHAR(8) UNAL,
      187     4674    1         2 WSN REDEF ACCT CHAR(8) UNAL,
      188     4675    1         2 FORM REDEF ACCT CHAR(8) UNAL;
      189     4676        %OC_MESSHD_D            (NAME=OPMSG_ANY,
      190     4677                 NPARMS    = 2,
      191     4678                 MSG       = 0,
      192     4679                 ATR       = M_UR,
      193     4680                 STCLASS   = STATIC);
      194     4693    1         2 * UBIN BYTE UNAL INIT(1),
      195     4694    1         2 * UBIN BYTE UNAL INIT(6),
      196     4695    1         2 SUBC UBIN BYTE UNAL,
      197     4696    1         2 FORM CHAR(6) UNAL;
      198     4697        %OC_MESSHD_D            (NAME=OPMSG_KERR,
      199     4698                 NPARMS    = 2,
      200     4699                 MSG       = FO_KERR_MSG#,
      201     4700                 ATR       = M_UR,
      202     4701                 STCLASS   = STATIC);
      203     4714    1         2 * UBIN BYTE UNAL INIT(1),
      204     4715    1         2 * UBIN BYTE UNAL INIT(4),
      205     4716    1         2 SUBC UBIN BYTE UNAL,
      206     4717    1         2 ERRCODE BIT(36) UNAL;
      207     4718        %OC_MESSHD_D            (NAME=OPMSG_ONOFF,
      208     4719                 NPARMS    = 3,
      209     4720                 MSG       = 0,
      210     4721                 ATR       = M_UR,
      211     4722                 STCLASS   = STATIC);
      212     4735    1         2 * UBIN BYTE UNAL INIT(2),
      213     4736    1         2 * UBIN BYTE UNAL INIT(1),
      214     4737    1         2 * UBIN BYTE UNAL INIT(1),
      215     4738    1         2 NUM UBIN HALF UNAL,
      216     4739    1         2 COMMODE UBIN BYTE UNAL,
      217     4740    1         2 CHKPTD UBIN BYTE UNAL;
      218     4741        %OC_MESSHD_D            (NAME=OPMSG_AERR,
      219     4742                 NPARMS    = 2,
      220     4743                 MSG       = FO_AERR_MSG#,
      221     4744                 ATR       = M_UR,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:7    
      222     4745                 STCLASS   = STATIC);
      223     4758    1         2 * UBIN BYTE UNAL INIT(1),
      224     4759    1         2 * UBIN BYTE UNAL INIT(2),
      225     4760    1         2 SUBC UBIN BYTE UNAL,
      226     4761    1         2 ERRC UBIN HALF UNAL;
      227     4762        %OC_MESSHD_D            (NAME=OPMSG_IALN,
      228     4763                 NPARMS    = 5,
      229     4764                 MSG       = FO_IALN_MSG#,
      230     4765                 ATR       = M_UR,
      231     4766                 STCLASS   = STATIC);
      232     4779    1         2 * UBIN BYTE UNAL INIT(1),
      233     4780    1         2 * UBIN BYTE UNAL INIT(1),
      234     4781    1         2 * UBIN BYTE UNAL INIT(1),
      235     4782    1         2 * UBIN BYTE UNAL INIT(6),
      236     4783    1         2 * UBIN BYTE UNAL INIT(8),
      237     4784    1         2 FORM_FLAG UBIN BYTE UNAL,
      238     4785    1         2 RACCT_FLAG UBIN BYTE UNAL,
      239     4786    1         2 SUBC UBIN BYTE UNAL,
      240     4787    1         2 FORM CHAR(6) UNAL,
      241     4788    1         2 RACCT CHAR(8) UNAL;
      242     4789        %OC_MESSHD_D            (NAME=OPMSG_FPERR,
      243     4790                 NPARMS    = 5,
      244     4791                 MSG       = FO_FPERR_MSG#,
      245     4792                 ATR       = M_UR,
      246     4793                 STCLASS   = STATIC);
      247     4806    1         2 * UBIN BYTE UNAL INIT(1),
      248     4807    1         2 * UBIN BYTE UNAL INIT(36),
      249     4808    1         2 * UBIN BYTE UNAL INIT(1),
      250     4809    1         2 * UBIN BYTE UNAL INIT(8),
      251     4810    1         2 NL UBIN BYTE UNAL INIT(31),
      252     4811    1         2 SUBC UBIN BYTE UNAL,
      253     4812    1         2 ERRCODE BIT(36) UNAL,
      254     4813    1         2 LDBYPRO UBIN BYTE UNAL,
      255     4814    1         2 ACCT CHAR(8) UNAL,
      256     4815    1         2 NAME CHAR(31) UNAL;
      257     4816        %OC_MESSHD_D            (NAME=OPMSG_UNIMP,
      258     4817                 NPARMS    = 0,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:8    
      259     4818                 MSG       = UNIMP_MSG#,
      260     4819                 DELIM     =";",
      261     4820                 STCLASS   = STATIC);
      262     4833
      263     4834
      264     4835
      265     4836        /**/
      266     4837        /*  DCBS */
      267     4838        /**/
      268     4839    1   DCL M$CSCG DCB;
      269     4840    1   DCL M$OSCG DCB;
      270     4841    1   DCL M$FPRG DCB;
      271     4842
      272     4843
      273     4844
      274     4845        /**/
      275     4846        /* REFS */
      276     4847        /**/
      277     4848    1   DCL B$TCB$ PTR SYMREF;
      278     4849    1   DCL B$JIT$ PTR SYMREF;
      279     4850    1   DCL FOF$CHAIN     ENTRY    ALTRET;
      280     4851    1   DCL FOF$DELETE    ENTRY    ALTRET;
      281     4852    1   DCL FOF$FITUPD    ENTRY(3) ALTRET;
      282     4853    1   DCL FOF$LASTEXT   ENTRY(1) ALTRET;
      283     4854    1   DCL FOF$REMOVE    ENTRY    ALTRET;
      284     4855    1   DCL FOF$REPRIO    ENTRY    ALTRET;
      285     4856    1   DCL FOF$UNCHAIN   ENTRY    ALTRET;
      286     4857    1   DCL FOI$GBUF      ENTRY(2) ALTRET;
      287     4858    1   DCL FOI$RBUF      ENTRY(2) ALTRET;
      288     4859    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
      289     4860    1   DCL FOR$CALIGN    ENTRY(2) ALTRET;
      290     4861    1   DCL FOR$DEVWR     ENTRY    ALTRET;
      291     4862    1   DCL FOR$MOUNT     ENTRY    ALTRET;
      292     4863    1   DCL FOR$SALIGN    ENTRY(2) ALTRET;
      293     4864    1   DCL FOR$GALIGN    ENTRY(2) ALTRET;
      294     4865    1   DCL XSF$LOCCODP   ENTRY(2) ALTRET;
      295     4866
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:9    
      296     4867
      297     4868
      298     4869        /**/
      299     4870        /* PMME FPTS */
      300     4871        /**/
      301     4872        %FPT_ACTIVATE                          (FPTN=DISCT_DEV,
      302     4873                 STCLASS   = CONSTANT,
      303     4874                 DCB       = M$OSCG,
      304     4875                 STATION   = DEVNAME,
      305     4876                 DISCONNECT= YES);
      306     4899        %FPT_ACTIVATE                         (FPTN=DSCGO_DEV,
      307     4900                 STCLASS   = CONSTANT,
      308     4901                 DCB       = M$OSCG,
      309     4902                 STATION   = DEVNAME,
      310     4903                 DSCGO     = YES,
      311     4904                 DISCONNECT= NO);
      312     4927        %FPT_ACTIVATE                         (FPTN=ACT_FPRG,
      313     4928                 STCLASS   = CONSTANT,
      314     4929                 DCB       = M$OSCG,
      315     4930                 STATION   = DEVNAME,
      316     4931                 MAKEFPRG  = YES);
      317     4954        %FPT_ACTIVATE                         (FPTN=DEA_FPRG,
      318     4955                 STCLASS   = CONSTANT,
      319     4956                 DCB       = M$OSCG,
      320     4957                 STATION   = DEVNAME);
      321     4980        %FPT_WRITE                             (FPTN=OCMSG_ANY,
      322     4981                 STCLASS   = CONSTANT,
      323     4982                 DCB       = M$CSCG,
      324     4983                 BUF       = OPMSG_ANY);
      325     5014        %FPT_WRITE                             (FPTN=OCMSG_SUSP,
      326     5015                 STCLASS   = CONSTANT,
      327     5016                 DCB       = M$CSCG,
      328     5017                 BUF       = OPMSG_SUSP);
      329     5048        %FPT_WRITE                             (FPTN=OCMSG_RESP,
      330     5049                 STCLASS   = CONSTANT,
      331     5050                 DCB       = M$CSCG,
      332     5051                 BUF       = OPMSG_RESP);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:10   
      333     5082        %FPT_WRITE                             (FPTN=OCMSG_AERR,
      334     5083                 STCLASS   = CONSTANT,
      335     5084                 DCB       = M$CSCG,
      336     5085                 BUF       = OPMSG_AERR);
      337     5116        %FPT_WRITE                             (FPTN=OCMSG_TDSC,
      338     5117                 STCLASS   = CONSTANT,
      339     5118                 DCB       = M$CSCG,
      340     5119                 BUF       = OPMSG_TDSC);
      341     5150        %FPT_WRITE                             (FPTN=OCMSG_ONOFF,
      342     5151                 STCLASS   = CONSTANT,
      343     5152                 DCB       = M$CSCG,
      344     5153                 BUF       = OPMSG_ONOFF);
      345     5184        %FPT_WRITE                             (FPTN=OCMSG_KERR,
      346     5185                 STCLASS   = CONSTANT,
      347     5186                 DCB       = M$CSCG,
      348     5187                 BUF       = OPMSG_KERR);
      349     5218        %FPT_WRITE                             (FPTN=OCMSG_IALN,
      350     5219                 STCLASS   = CONSTANT,
      351     5220                 DCB       = M$CSCG,
      352     5221                 BUF       = OPMSG_IALN);
      353     5252        %FPT_WRITE                             (FPTN=OCMSG_FPERR,
      354     5253                 STCLASS   = CONSTANT,
      355     5254                 DCB       = M$CSCG,
      356     5255                 BUF       = OPMSG_FPERR);
      357     5286        %FPT_WRITE                             (FPTN=OCMSG_UNIMP,
      358     5287                 STCLASS   = CONSTANT,
      359     5288                 DCB       = M$CSCG,
      360     5289                 BUF       = OPMSG_UNIMP);
      361     5320        %FPT_SYMBIO                            (FPTN=START_SYMB,
      362     5321                 DCB       = M$OSCG,
      363     5322                 STCLASS   = STATIC,
      364     5323                 BUF       = DEVNAME,
      365     5324                 STATION   = DEVNAME,
      366     5325                 ORDER     = FOMO_SOPEN#,
      367     5326                 NXEXT     = EXTENT);
      368     5350        %FPT_SYMBIO                            (FPTN=NXTEXT_SYMB,
      369     5351                 DCB       = M$OSCG,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:11   
      370     5352                 STCLASS   = CONSTANT,
      371     5353                 STATION   = DEVNAME,
      372     5354                 ORDER     = FOMO_NXEXT#,
      373     5355                 NXEXT     = EXTENT);
      374     5379        %FPT_SYMBIO                            (FPTN=CLOSE_SYMB,
      375     5380                 DCB       = M$OSCG,
      376     5381                 STCLASS   = CONSTANT,
      377     5382                 STATION   = DEVNAME,
      378     5383                 ORDER     = FOMO_SCLOS#);
      379     5407        %FPT_SYMBIO                            (FPTN=CONT_SYMB,
      380     5408                 DCB       = M$OSCG,
      381     5409                 STCLASS   = STATIC,
      382     5410                 STATION   = DEVNAME,
      383     5411                 BUF       = DEVNAME,
      384     5412                 NXEXT     = EXTENT,
      385     5413                 ORDER     = FOMO_SCONT#);
      386     5437        %FPT_SYMBIO                            (FPTN=SPACE_SYMB,
      387     5438                 DCB       = M$OSCG,
      388     5439                 STCLASS   = STATIC,
      389     5440                 STATION   = DEVNAME,
      390     5441                 BUF       = DEVNAME,
      391     5442                 NXEXT     = EXTENT,
      392     5443                 ORDER     = FOMO_SSPAC#);
      393     5467        %FPT_SYMBIO                            (FPTN=SPACEBLKS_SYMB,
      394     5468                 DCB       = M$OSCG,
      395     5469                 STCLASS   = STATIC,
      396     5470                 STATION   = DEVNAME,
      397     5471                 BUF       = DEVNAME,
      398     5472                 NXEXT     = EXTENT,
      399     5473                 ORDER     = FOMO_SSBLK#);
      400     5497        %FPT_SYMBIO                            (FPTN=WLR_SYMB,
      401     5498                 DCB       = M$OSCG,
      402     5499                 STCLASS   = STATIC,
      403     5500                 STATION   = DEVNAME,
      404     5501                 BUF       = DEVNAME,
      405     5502                 RECORD    = WLR_REC,
      406     5503                 ORDER     = FOMO_WRITE#);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:12   
      407     5527        %FPT_SYMBIO                            (FPTN=WCB_SYMB,
      408     5528                 DCB       = M$OSCG,
      409     5529                 STCLASS   = STATIC,
      410     5530                 STATION   = DEVNAME,
      411     5531                 BUF       = DEVNAME,
      412     5532                 RECORD    = WCB_REC,
      413     5533                 ORDER     = FOMO_WRITE#);
      414     5557        %VLP_SYMBWRITE                         (FPTN=WCB_REC,
      415     5558                 TOF       = YES,
      416     5559                 REPEATS   = 1,
      417     5560                 STCLASS   = STATIC);
      418     5575        %VLP_SYMBWRITE                         (FPTN=WLR_REC,
      419     5576                 TOF       = NO,
      420     5577                 REPEATS   = 1,
      421     5578                 STCLASS   = STATIC);
      422     5593        %FPT_SYMBIO                            (FPTN=WGR_SYMB,
      423     5594                 DCB       = M$OSCG,
      424     5595                 STCLASS   = STATIC,
      425     5596                 STATION   = DEVNAME,
      426     5597                 BUF       = DEVNAME,
      427     5598                 RECORD    = NIL,
      428     5599                 ORDER     = FOMO_WRITE#);
      429     5623        %FPT_SYMBIO                            (FPTN=SUSP_SYMB,
      430     5624                 DCB       = M$OSCG,
      431     5625                 STCLASS   = CONSTANT,
      432     5626                 STATION   = DEVNAME,
      433     5627                 ORDER     = FOMO_SHALT#);
      434     5651        %FPT_SYMBIO                            (FPTN=TOKEN_SYMB,
      435     5652                 DCB       = M$OSCG,
      436     5653                 STCLASS   = CONSTANT,
      437     5654                 STATION   = DEVNAME,
      438     5655                 ORDER     = FOMO_STOKN#);
      439     5679        %FPT_WRSYSLOG                          (FPTN=LOG_ERR,
      440     5680                 ENTRY     = LOG_ERR_BUF,
      441     5681                 FILENUM   = 1,
      442     5682                 MMINHIB   = NO,
      443     5683                 SIZE      ="SIZEW(LOG_ERR_BUF)",
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:13   
      444     5684                 TYPE      = EL_OSFI);
      445     5699
      446     5700        %FPT_SETFP                             (FPTN=START_FPRG,
      447     5701                 DCB       = M$FPRG,
      448     5702                 FPRG      = SYMB_FPRG,
      449     5703                 STATION   = SYMB_STA,
      450     5704                 STCLASS   = CONSTANT);
      451     5717
      452     5718        %VLP_FPRG                              (FPTN=SYMB_FPRG,
      453     5719                 STCLASS   = STATIC);
      454     5740
      455     5741        %VLP_STATION                           (FPTN=SYMB_STA,
      456     5742                 STCLASS   = STATIC);
      457     5769        %FPT_PRIV                              (FPTN=RESET_PRIVS);
      458     5784
      459     5785
      460     5786
      461     5787        /**/
      462     5788        /* SUBS */
      463     5789        /**/
      464     5790        %SUB FIL$=FO_FIL$;
      465     5791        %SUB DEV$=FO_DEV$;
      466     5792        %SUB JOB$=FO_JOB$;
      467     5793        %SUB B$ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
      468     5794        %SUB FOREVER="WHILE ('1'B)";
      469     5795        %EQU_CG;
      470     5843        %SUB F_FO='0617'O;
      471     5844        %SUB M_D='04';
      472     5845        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:14   
      473     5846        /*
      474     5847
      475     5848               ####    #####   #   #    ###     ###    #####
      476     5849               #   #   #       #   #     #     #   #   #
      477     5850               #   #   #       #   #     #     #       #
      478     5851               #   #   ####    #   #     #     #       ####
      479     5852               #   #   #       #   #     #     #       #
      480     5853               #   #   #        # #      #     #   #   #
      481     5854               ####    #####     #      ###     ###    #####
      482     5855
      483     5856
      484     5857                    #####   #   #   #####   #   #   #####
      485     5858                    #       #   #   #       #   #     #
      486     5859                    #       #   #   #       ##  #     #
      487     5860                    ####    #   #   ####    # # #     #
      488     5861                    #       #   #   #       #  ##     #
      489     5862                    #        # #    #       #   #     #
      490     5863                    #####     #     #####   #   #     #
      491     5864
      492     5865        */
      493     5866        /*F* NAME:         FOD$EVENT
      494     5867             PURPOSE:      To schedule output symbiont devices
      495     5868             DESCRIPTION:  FOD$EVENT takes the form of an event-reporting
      496     5869                           routine.  All events applicable to output
      497     5870                           symbiont devices are reported here, with the
      498     5871                           result that the appropriate scheduling functions
      499     5872                           are performed.
      500     5873
      501     5874                           The parameters are the event code (EVENT) and
      502     5875                           information specific to some events (DINFO).
      503     5876                           An implicit parameter for all events is the
      504     5877                           pointer to the device for which the event is
      505     5878                           being reported (FO_DEV$).
      506     5879
      507     5880                           The ALTRET is taken if it is determined that
      508     5881                           a device (other that the one evented) may need
      509     5882                           to be scheduled.  This is done by reporting
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:15   
      510     5883                           the IDLE event on all idle devices.  This is
      511     5884                           the only help that FOD$EVENT needs in doing
      512     5885                           his scheduling.
      513     5886        */
      514     5887
      515     5888    1   FOD$EVENT: ENTRY (EVENT,DINFO) ALTRET;
      516     5889                                /* IF DEVICE EVENT TRACER IS TURNED ON,
      517     5890                                   TRACE THE EVENT */
      518     5891    1         IF FO_DET ~= 0 THEN
      519     5892    2           DO;
      520     5893    2           FO_DETL.CODE(FO_DETX)=EVENT;
      521     5894    2           IF ADDR(DINFO) ~= ADDR(NIL) THEN
      522     5895    2            FO_DETL.INFO(FO_DETX)=DINFO;
      523     5896    2           FO_DETL.DEVF(FO_DETX)=DEV$->FO$DEV;
      524     5897    2           FO_DETX=FO_DETX+1;
      525     5898    2           IF FO_DETX > FOMI_DTMX# THEN FO_DETX=0;
      526     5899    2           END;
      527     5900        /* PICK UP DEVICE STATE */
      528     5901    1         STATE=DEV$->FO$DEV.STATE;
      529     5902    1         DEVNAME=DEV$->FO$DEV.NAME;
      530     5903    1         FIL$ = DEV$->FO$DEV.CFIL$;
      531     5904        /***
      532     5905         ***
      533     5906         ***
      534     5907         ***
      535     5908         ***     VECTOR ON EVENT CODE
      536     5909         ***
      537     5910         ***
      538     5911         ***
      539     5912         ***/
      540     5913    2           DO CASE (EVENT);
      541     5914        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:16   
      542     5915        /*
      543     5916                            #####    ###     ###    #   #
      544     5917                              #     #   #   #   #   #   #
      545     5918                              #     #       #   #   ##  #
      546     5919                              #     #       #   #   # # #
      547     5920                              #     #       #   #   #  ##
      548     5921                              #     #   #   #   #   #   #
      549     5922                              #      ###     ###    #   #
      550     5923        */
      551     5924        /**
      552     5925         **
      553     5926         **
      554     5927         **      TERMINAL CONNECT EVENT
      555     5928         **
      556     5929         **
      557     5930         **/
      558     5931    2             CASE (FODE_TCON#);
      559     5932    3                 DO CASE (STATE);
      560     5933    3                   CASE (FOS_IDLE#);
      561     5934                                      /* MATCHDEV altrets if we find a device */
      562     5935    3                     CALL MATCHDEV ALTRET(TCON0);
      563     5936                                      /* Set LPAVAIL to 1 if there's now a
      564     5937                                         device for it */
      565     5938    3                     CALL AVAIL;
      566     5939    3   TCON0:            ;
      567     5940    3                     CALL TCONMSG_DEV;
      568     5941    3                     IF DEV$->FO$DEV.FORM ~= ' ' THEN
      569     5942    4                       DO;
      570     5943    4                       CALL FOR$MOUNT ALTRET(DEV_EVRTN);
      571     5944    4                       IF NOSTART = 0 THEN
      572     5945                                      /* Go to the call to SCHED_DEV */
      573     5946    4                        GOTO DEV_NXTF;
      574     5947    4                       END;
      575     5948    3                   CASE (ELSE);
      576     5949    3                     CALL DEV_EVSCREECH;
      577     5950    3                 END;
      578     5951        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:17   
      579     5952        /*
      580     5953                            #####   ####     ###     ###
      581     5954                              #     #   #   #   #   #   #
      582     5955                              #     #   #   #       #
      583     5956                              #     #   #    ###    #
      584     5957                              #     #   #       #   #
      585     5958                              #     #   #   #   #   #   #
      586     5959                              #     ####     ###     ###
      587     5960        */
      588     5961        /**
      589     5962         **
      590     5963         **
      591     5964         **      TERMINAL DISCONNECT EVENT
      592     5965         **
      593     5966         **
      594     5967         **/
      595     5968    2             CASE (FODE_TDSC#);
      596     5969    3                 DO CASE (STATE);
      597     5970    3                   CASE (FOS_IDLE#);
      598     5971    3   DEV_GONE:         ;
      599     5972    3                     OPMSG_TDSC.DEVNM=DEVNAME;
      600     5973    3                     CALL M$WRITE (OCMSG_TDSC);
      601     5974    3                     CALL MATCHDEV ALTRET(TDSC0);
      602     5975    3                     CALL UNAVAIL;
      603     5976    3   TDSC0:            ;
      604     5977    3                     CALL REM_DEV;
      605     5978    3                     GOTO DEV_EVALT;
      606     5979    3                   CASE (ELSE);
      607     5980    3                     CALL DEV_EVSCREECH;
      608     5981    3                     CALL FIN_DEV;
      609     5982    3                     GOTO DEV_GONE;
      610     5983
      611     5984    3                 END;
      612     5985        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:18   
      613     5986        /*
      614     5987                            TTTTT  DDDD   RRRR    QQQ
      615     5988                              T    D   D  R   R  Q   Q
      616     5989                              T    D   D  R   R  Q   Q
      617     5990                              T    D   D  RRRR   Q   Q
      618     5991                              T    D   D  R R    Q Q Q
      619     5992                              T    D   D  R  R   Q  QQ
      620     5993                              T    DDDD   R   R   QQQ
      621     5994        */
      622     5995        /**
      623     5996         **
      624     5997         **
      625     5998         **      TERMINAL DISCONNECT REQUEST EVENT
      626     5999         **
      627     6000         **
      628     6001         **/
      629     6002    2             CASE (FODE_TDRQ#);
      630     6003    2               CALL M$DEACTIVATE (DSCGO_DEV) ALTRET(DEV_EVRTN);
      631     6004                                           /*
      632     6005                                           Make sure we don't try to start
      633     6006                                           any files on this device while
      634     6007                                           we're expecting a disconnect,
      635     6008                                           otherwise we could get a TDSC
      636     6009                                           on a symbiont device.
      637     6010                                           */
      638     6011    2               DEV$->FO$DEV.FLG.IDSC = '1'B;
      639     6012        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:19   
      640     6013        /*
      641     6014                            #####   ####    ####    #   #
      642     6015                              #     #   #   #   #   #  #
      643     6016                              #     #   #   #   #   # #
      644     6017                              #     ####    ####    ##
      645     6018                              #     #   #   # #     # #
      646     6019                              #     #   #   #  #    #  #
      647     6020                              #     ####    #   #   #   #
      648     6021        */
      649     6022        /**
      650     6023         **
      651     6024         **
      652     6025         **      TERMINAL BREAK EVENT
      653     6026         **
      654     6027         **
      655     6028         **/
      656     6029    2             CASE (FODE_TBRK#);
      657     6030    2               IF INFO = %CG_TBRK_BRK# THEN
      658     6031    3                 DO CASE (STATE);
      659     6032    3                   CASE (FOS_BUSY#);
      660     6033    3                     DEV$->FO$DEV.SUSRSN=FOSR_TBRK#;
      661     6034    3                     GOTO DEV_SUSPEND;
      662     6035    3                   CASE (FOS_SUSP#);
      663     6036    3                     IF DEV$->FO$DEV.SUSRSN=FOSR_TBRK# THEN GOTO DEV_CONTINUE;
      664     6037    3                 END;
      665     6038    2               ELSE
      666     6039    2                IF INFO = %CG_TBRK_EC# THEN
      667     6040    2                 CALL M$DEACTIVATE (DISCT_DEV) ALTRET(DEV_EVRTN);
      668     6041        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:20   
      669     6042        /*
      670     6043                             ###    #####   ####     ###     ###
      671     6044                            #   #     #     #   #   #   #   #   #
      672     6045                            #         #     #   #   #       #
      673     6046                             ###      #     #   #    ###    #
      674     6047                                #     #     #   #       #   #
      675     6048                            #   #     #     #   #   #   #   #   #
      676     6049                             ###      #     ####     ###     ###
      677     6050        */
      678     6051        /**
      679     6052         **
      680     6053         **
      681     6054         **      SYMBIONT TERMINAL DISCONNECT EVENT
      682     6055         **
      683     6056         **
      684     6057         **/
      685     6058    2             CASE (FODE_STDSC#);
      686     6059    3                 DO CASE (STATE);
      687     6060    3                   CASE (FOS_BUSY#,FOS_SUSP#,FOS_SPRQ#);
      688     6061                                           /*
      689     6062                                           This only needs to be set on a TDSC.
      690     6063                                           Make sure its off.
      691     6064                                           */
      692     6065    3                     DEV$->FO$DEV.FLG.IDSC = '0'B;
      693     6066    3                     CALL FIN_DEV;
      694     6067    3                     IF DEV$->FO$DEV.FLG.QUIT THEN CALL QUIT_DEV;
      695     6068    3                   CASE (FOS_IALN#);
      696     6069    3                   CASE (ELSE);
      697     6070    3                     CALL DEV_EVSCREECH;
      698     6071    3                 END;
      699     6072                                      /* Go up to terminal disconnect case
      700     6073                                         (for an idle device) */
      701     6074    2               GOTO DEV_GONE;
      702     6075        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:21   
      703     6076        /*
      704     6077                             ###    #####   #   #   #       ####
      705     6078                            #   #     #     #   #   #       #   #
      706     6079                            #         #     #   #   #       #   #
      707     6080                             ###      #     #####   #       #   #
      708     6081                                #     #     #   #   #       #   #
      709     6082                            #   #     #     #   #   #       #   #
      710     6083                             ###      #     #   #   #####   ####
      711     6084        */
      712     6085        /**
      713     6086         **
      714     6087         **
      715     6088         **      SYMBIONT TERMINAL HALTED EVENT
      716     6089         **
      717     6090         **
      718     6091         **/
      719     6092    2             CASE (FODE_STHLD#);
      720     6093    3                 DO CASE (STATE);
      721     6094    3                   CASE (FOS_BUSY#);
      722     6095    3                     DEV$->FO$DEV.SUSRSN=FOSR_MANU#;
      723     6096    3                     GOTO DEV_SUSPENDED;
      724     6097    3                   CASE (FOS_SPRQ#);
      725     6098    3                     GOTO DEV_SUSPENDED;
      726     6099    3                   CASE (ELSE);
      727     6100    3                     CALL DEV_EVSCREECH;
      728     6101    3                 END;
      729     6102        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:22   
      730     6103        /*
      731     6104                             ###    #####   #####   ####    ####
      732     6105                            #   #   #       #       #   #   #   #
      733     6106                            #       #       #       #   #   #   #
      734     6107                             ###    ####    ####    ####    ####
      735     6108                                #   #       #       # #     # #
      736     6109                            #   #   #       #       #  #    #  #
      737     6110                             ###    #       #####   #   #   #   #
      738     6111        */
      739     6112        /**
      740     6113         **
      741     6114         **
      742     6115         **      SYMBIONT FILE ERROR EVENT
      743     6116         **
      744     6117         **
      745     6118         **/
      746     6119    2             CASE (FODE_SFERR#);
      747     6120    3                 DO CASE (STATE);
      748     6121    3                   CASE (FOS_BUSY#,FOS_SPRQ#);
      749     6122    3                   CASE (ELSE);
      750     6123    3                     CALL DEV_EVSCREECH;
      751     6124    3                     GOTO DEV_EVRTN;
      752     6125    3                 END;
      753     6126                                /* MOOS PASSES THE ERRANT BLOCK NUMBER,
      754     6127                                   AND THE ERROR CODE, IN THE SYMBIONT
      755     6128                                   BUFFER PAGE ITSELF.  AT THIS POINT
      756     6129                                   MOOS HAS SUSPENDED THE DEVICE. */
      757     6130    2               DEV$->FO$DEV.STATE=FOS_SUSP#;
      758     6131    2               GRAN$=DEV$->FO$DEV.SPG$;
      759     6132    2               BLK#=GRAN$->FO$SBUF.FERR.BLK#;
      760     6133                                /* FIGURE OUT WHAT TO DO BASED ON THE
      761     6134                                   ERROR CODE */
      762     6135    2               LOGIT=0;
      763     6136    3                 DO CASE (GRAN$->FO$SBUF.FERR.CODE);
      764     6137
      765     6138                                /* DISK ERROR */
      766     6139    3                   CASE (FOME_DSKERR#);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:23   
      767     6140    3                     DEV$->FO$DEV.SUSRSN=FOSR_FERR#;
      768     6141    3                     GOTO DEV_SUSPENDED;
      769     6142
      770     6143                                /* FILE INCONSISTENCY - BAD STAMP IN GRAN */
      771     6144    3                   CASE (FOME_STAMP#);
      772     6145    3                     LOG_ERR_BUF.SUBC=EL_OSFI_STAMP#;
      773     6146    3                     STAMP=GRAN$->FO$SBUF.FERR.EXPSTAMP;
      774     6147    3                     LOG_ERR_BUF.EXPSTAMP=STAMP;
      775     6148    3                     GOTO FERR1;
      776     6149
      777     6150                                /* FILE INCONSISTENCY - BAD GRANULE FORMAT */
      778     6151    3                   CASE (FOME_GRNFMT#);
      779     6152    3                     LOG_ERR_BUF.SUBC=EL_OSFI_FMT#;
      780     6153    3                     LOG_ERR_BUF.AVAIL=GRAN$->FO$SBUF.FERR.AVAIL;
      781     6154    3                     LOG_ERR_BUF.NAVX=GRAN$->FO$SBUF.FERR.NAVX;
      782     6155    3                     STAMP=GRAN$->FO$SBUF.FERR.STAMP;
      783     6156    3   FERR1:            ;
      784     6157    3                     LOG_ERR_BUF.STAMP=GRAN$->FO$SBUF.FERR.STAMP;
      785     6158    3                     LOG_ERR_BUF.SYSID=FIL$->FO$FIL.SYSID;
      786     6159    3                     LOG_ERR_BUF.NUM  =FIL$->FO$FIL.NUM;
      787     6160    3                     LOGIT=1;
      788     6161
      789     6162                                /* BAD DISK ADDRESS IN MOOS - REMOVE FILE
      790     6163                                   FROM DEVICE AND WE'LL TRY TO PRINT IT
      791     6164                                   AFTER NEXT BOOT.  THIS ERROR SHOULD
      792     6165                                   NEVER HAPPEN BECAUSE WE CHECK ALL EXTENTS
      793     6166                                   AS WE PICK 'EM OUT OF THE FIT, SO IT
      794     6167                                   MUST BE THAT THE EXTENT THAT WAS BAD
      795     6168                                   WENT BAD IN CORE AFTER WE CHECKED IT.
      796     6169                                   HENCE THERE IS NOTHING WRONG WITH THE
      797     6170                                   FILE ITSELF, SO WE'LL TRY ANOTHER DAY. */
      798     6171    3                   CASE (FOME_DSKADD#);
      799     6172    3                     LOGIT=0;
      800     6173
      801     6174    3                   CASE (ELSE);
      802     6175    3                     CALL DEV_EVSCREECH;
      803     6176    3                     GOTO DEV_EVRTN;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:24   
      804     6177
      805     6178    3                 END;
      806     6179                                /* LOGIT = 0 MEANS SOMETHING WRONG WITH
      807     6180                                               THE FILE SO DELETE IT.
      808     6181                                   LOGIT = 1 MEANS REMOVE THE FILE BUT
      809     6182                                               DON'T DELETE IT. */
      810     6183    2               EXT$ = FIL$->FO$FIL.EXT$;
      811     6184                                /* ERROR WAS IN THE FILE ITSELF.  JERK
      812     6185                                   THE FILE OFF THE DEVICE AND THEN EITHER
      813     6186                                   REMOVE OR DELETE IT, DEPENDING ON THE
      814     6187                                   NATURE OF THE ERROR. */
      815     6188    2               IF LOGIT = 1 THEN
      816     6189    3                 DO;
      817     6190    3                 FRDAD = 0;
      818     6191    3                 FIL_CNUM = 0;
      819     6192    3                 GRANS = 0;
      820     6193    3                 HASH = EXT$->FO$EXT.STAMP.HASH;
      821     6194    3   NXTEXT:       ;
      822     6195    3                 IF EXT$->FO$EXT.STAMP.HASH ~= HASH THEN
      823     6196    4                   DO;
      824     6197    4                   FIL_CNUM = FIL_CNUM + 1;
      825     6198    4                   HASH = EXT$->FO$EXT.STAMP.HASH;
      826     6199    4                   FRDAD = 0;
      827     6200    4                   END;
      828     6201    3                 IF GRANS + EXT$->FO$EXT.GRANS <= BLK# THEN
      829     6202    4                   DO;
      830     6203    4                   FRDAD = FRDAD + EXT$->FO$EXT.GRANS;
      831     6204    4                   GRANS = GRANS + EXT$->FO$EXT.GRANS;
      832     6205    4                   EXT$=EXT$->FO$EXT.LNK$;
      833     6206    4                   IF EXT$ ~= ADDR(NIL) THEN
      834     6207    4                    GOTO NXTEXT;
      835     6208    4                   END;
      836     6209    3                 ELSE FRDAD = FRDAD + BLK# - GRANS;
      837     6210
      838     6211    3                 LOG_ERR_BUF.FRDAD = FRDAD;
      839     6212    3                 CALL M$WRSYSLOG (LOG_ERR) ALTRET(A31);
      840     6213    3   A31:          ;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:25   
      841     6214
      842     6215    3                 CALL FOF$FITUPD (FOFU_FINC#,,FIL_CNUM);
      843     6216    3                 QUITRSN=FOQR_FINC#;
      844     6217    3                 GOTO DEV_QUIT;
      845     6218    3                 END;
      846     6219
      847     6220                                /* BAD DISK ADDRESS. */
      848     6221    2               QUITRSN=FOQR_BDDA#;
      849     6222    2               GOTO DEV_QUIT;
      850     6223        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:26   
      851     6224        /*
      852     6225                             #####   ####       #     ####    ####    #####
      853     6226                             #       #   #     # #    #   #   #   #     #
      854     6227                             #       #   #    #   #   #   #   #   #     #
      855     6228                             ####    ####     #####   ####    ####      #
      856     6229                             #       #        #   #   #   #   #   #     #
      857     6230                             #       #        #   #   #   #   #   #     #
      858     6231                             #       #        #   #   ####    #   #     #
      859     6232        */
      860     6233        /**
      861     6234         **
      862     6235         **
      863     6236         **      FORMS PROGRAM ABORT EVENT
      864     6237         **
      865     6238         **
      866     6239         **/
      867     6240                                          /* This event is sent from MOOS
      868     6241                                          when MOOS gets an FPRG abort
      869     6242                                          message from the FEP. */
      870     6243    2             CASE (FODE_FPABRT#,FODE_FPEXIT#);
      871     6244    2               IF DEV$ -> FO$DEV.FLG.IDSC = '1'B
      872     6245    2               THEN
      873     6246    2                GOTO DEV_EVRTN;
      874     6247
      875     6248    3                 DO CASE (STATE);
      876     6249    3                   CASE (FOS_BUSY#,FOS_SPRQ#,FOS_SUSP#);
      877     6250    3                     QUITRSN = FOQR_FPABRT#;
      878     6251    3                     GOTO DEV_QUIT;
      879     6252    3                   CASE (ELSE);
      880     6253    3                     GOTO DEV_EVRTN;
      881     6254    3                 END;
      882     6255        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:27   
      883     6256        /*
      884     6257                             ###    #####   #####   ####    ####
      885     6258                            #   #     #     #       #   #   #   #
      886     6259                            #         #     #       #   #   #   #
      887     6260                             ###      #     ####    ####    ####
      888     6261                                #     #     #       # #     # #
      889     6262                            #   #     #     #       #  #    #  #
      890     6263                             ###      #     #####   #   #   #   #
      891     6264        */
      892     6265        /**
      893     6266         **
      894     6267         **
      895     6268         **      SYMBIONT TERMINAL ERROR EVENT
      896     6269         **
      897     6270         **
      898     6271         **/
      899     6272                                           /* This event is sent from MOOS
      900     6273                                           when MOOS gets a bad TYC from
      901     6274                                           the IO system in its device
      902     6275                                           endaction routine.  For example,
      903     6276                                           an ERROR keyin will always result
      904     6277                                           in a bad tyc. */
      905     6278    2             CASE (FODE_STERR#);
      906     6279    3                 DO CASE (STATE);
      907     6280    3                   CASE (FOS_BUSY#,FOS_SPRQ#);
      908     6281    3                     DEV$->FO$DEV.SUSRSN=FOSR_DERR#;
      909     6282    3                     DEV$->FO$DEV.FLG.TERR='1'B;
      910     6283    3                     DEV$->FO$DEV.FLG.ALGNED='0'B;
      911     6284    3                     GOTO DEV_SUSPENDED;
      912     6285    3                   CASE (FOS_IALN#);
      913     6286    3                     GOTO CLEANUP_IALN;
      914     6287    3                   CASE (ELSE);
      915     6288    3                     CALL DEV_EVSCREECH;
      916     6289    3                     GOTO DEV_EVRTN;
      917     6290    3                 END;
      918     6291    2   DEV_SUSPENDED:;
      919     6292    2               IF NOT DEV$->FO$DEV.FLG.AIP THEN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:28   
      920     6293    3                 DO CASE (DEV$->FO$DEV.SUSRSN);
      921     6294
      922     6295    3                   CASE (FOSR_FALN#,FOSR_VFUL#);
      923     6296
      924     6297    3                   CASE (ELSE);
      925     6298
      926     6299    3                     IF      INFOB.BLK# > DEV$->FO$DEV.BR.BLK#
      927     6300    3                     OR (    INFOB.BLK# = DEV$->FO$DEV.BR.BLK#
      928     6301    3                     AND INFOB.REC# > DEV$->FO$DEV.BR.REC#) THEN DEV$->FO$DEV.BR=INFOB;
      929     6302
      930     6303    3                 END;
      931     6304    2   DEV_SUSPENDED1:;
      932     6305    2               DEV$->FO$DEV.STATE=FOS_SUSP#;
      933     6306    2               DEV$->FO$DEV.FLG=DEV$->FO$DEV.FLG&(~(FODF_ACKEXP#|FODF_LASTEXT#|
              6306                        FODF_SIP#|FODF_CHIDLE#));
      934     6307    2               DEV$->FO$DEV.TOKERSN=0;
      935     6308    2               IF DEV$->FO$DEV.FLG.AIP THEN
      936     6309    3                 DO;
      937     6310    3                 DEV$->FO$DEV.FLG.AIP='0'B;
      938     6311    3                 CALL REL_ALR;
      939     6312    3                 END;
      940     6313    2               IF DEV$->FO$DEV.FLG.QUIT THEN DEV$->FO$DEV.SUSRSN = FOSR_QUIT#;
      941     6314    2               OPMSG_SUSP.DEVNM=DEVNAME;
      942     6315    2               OPMSG_SUSP.SYSID=FIL$->FO$FIL.SYSID;
      943     6316    2               OPMSG_SUSP.ACCT=FIL$->FO$FIL.OJOB$->FO$JOB.ACCT;
      944     6317    2               OPMSG_SUSP.NUM=FIL$->FO$FIL.NUM;
      945     6318    2   RESUSP:     ;
      946     6319    2               OPMSG_SUSP.QUITRSN=DEV$->FO$DEV.QUITRSN;
      947     6320    2               OPMSG_SUSP.SUBC=DEV$->FO$DEV.SUSRSN;
      948     6321    2               CALL M$WRITE (OCMSG_SUSP);
      949     6322
      950     6323    3                 DO CASE (DEV$->FO$DEV.SUSRSN);
      951     6324
      952     6325        /***********************************************************
      953     6326         *                                                         *
      954     6327         *           VARIOUS REASONS - LEAVE SUSPENDED             *
      955     6328         *                                                         *
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:29   
      956     6329         ***********************************************************/
      957     6330    3                   CASE (FOSR_MANU#,FOSR_DERR#,FOSR_FERR#,
      958     6331    3               FOSR_KSUS#,FOSR_TBRK#,FOSR_SBEF#,FOSR_AEOF#);
      959     6332
      960     6333        /***********************************************************
      961     6334         *                                                         *
      962     6335         *                 VFU LOADED                              *
      963     6336         *                                                         *
      964     6337         ***********************************************************/
      965     6338    3                   CASE (FOSR_VFUL#, FOSR_DLIM#);
      966     6339    3                     DEV$->FO$DEV.FLG.ALGNED='1'B;
      967     6340    3                     GOTO DEV_CONTVFU;                                       /*#8.362*/
      968     6341
      969     6342        /***********************************************************
      970     6343         *                                                         *
      971     6344         *               FINISHED ALIGN                            *
      972     6345         *                                                         *
      973     6346         ***********************************************************/
      974     6347    3                   CASE (FOSR_FALN#);
      975     6348    3                     DEV$->FO$DEV.FLG.ALGNED='1'B;
      976     6349    3                     GOTO DEV_EVRTN;
      977     6350
      978     6351        /***********************************************************
      979     6352         *                                                         *
      980     6353         *               DO A QUIT                                 *
      981     6354         *                                                         *
      982     6355         ***********************************************************/
      983     6356
      984     6357    3                   CASE (FOSR_QUIT#);
      985     6358                                /* FOR SOME CASES OF QUIT, WE WISH TO PRINT
      986     6359                                   A MESSAGE AT THE END OF THE LISTING, IF
      987     6360                                   IT'S A PRINTER OR PUNCH.  TO DO THIS,
      988     6361                                   WE ISSUE A WRITE FUNCTION TO THE SYMB,
      989     6362                                   FOLLOWED BY A TOKEN REQUEST.  WHEN THE
      990     6363                                   TOKEN COMES BACK, WE KNOW THE DATA HAS
      991     6364                                   BEEN WRITTEN, AND CAN THUS GO TO DOQUIT1
      992     6365                                   AND CLOSE THE PATH. */
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:30   
      993     6366    3   DEV_DOQUIT:       ;
      994     6367    3                     IF  NOT DEV$->FO$DEV.FLG.QUITMSG
      995     6368    3                     AND (DEV$->FO$DEV.NAMER.TYP = 'LP' OR DEV$->FO$DEV.NAMER.TYP =
              6368                              'CP') THEN
      996     6369    4                       DO CASE (DEV$->FO$DEV.QUITRSN);
      997     6370
      998     6371    4                         CASE (FOQR_KZAP#,FOQR_KSAV#);
      999     6372    4                           IF NOT DEV$->FO$DEV.FLG.TERR THEN GOTO DOQUIT0;
     1000     6373                                /* We're doing a ZAP or SAVE, and the event that
     1001     6374                                   got the device suspended was a device error.
     1002     6375                                   Don't bother to write the QUITMSG since the
     1003     6376                                   device is probably broken & we'll just annoy
     1004     6377                                   the operator. */
     1005     6378
     1006     6379    4                         CASE (ELSE);
     1007     6380
     1008     6381    4                           IF NOT DEV$->FO$DEV.FLG.TERR
     1009     6382    5                           THEN DO;
     1010     6383    5   DOQUIT0:                  ;
     1011     6384    5                             REC$=ADDR(WLR_REC.REC#);
     1012     6385    5                             I=LENGTHC(FABTMSG);
     1013     6386    5                             REC$->B$CHARS=FABTMSG;
     1014     6387    5                             WLR_REC.RECL#=I;
     1015     6388    5                             I=LENGTHC(ABTMSGS(DEV$->FO$DEV.QUITRSN));
     1016     6389    5                             PINCRC(REC$,LENGTHC(FABTMSG))->B$CHARS=ABTMSGS(DEV$->
              6389                                      FO$DEV.QUITRSN);
     1017     6390    5                             WLR_REC.RECL#=WLR_REC.RECL#+I;
     1018     6391    5                             DEV$->FO$DEV.FLG.QUITMSG='1'B;
     1019     6392    5                             WLR_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;
     1020     6393    5                             WLR_SYMB.V.ACK#='1'B;                          /*#15.169*/
     1021     6394    5                             CALL M$SYMBIO (WLR_SYMB) ALTRET(DEV_DOQUIT1);
     1022     6395    5                             DEV$->FO$DEV.STATE=FOS_BUSY#;
     1023     6396    5                             DEV$->FO$DEV.FLG.ACKEXP='1'B;
     1024     6397    5                             DEV$->FO$DEV.TOKERSN=FOTR_WLREC#;
     1025     6398    5                             GOTO DEV_EVRTN;
     1026     6399    5                             END;
     1027     6400
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:31   
     1028     6401    4                       END;
     1029     6402    3   DEV_DOQUIT1:      ;
     1030     6403                          %JLOCK; /* Keep M$JOBSTATS out while we delete the file */
     1031     6406    3                     CALL END_DEV ALTRET(DOQUIT2);
     1032     6407    3                     CALL QUIT_DEV;
     1033     6408                          %JUNLOCK;
     1034     6411    3                     CALL SCHED_DEV ALTRET(DEV_EVALT);
     1035     6412    3                     GOTO DEV_EVRTN;
     1036     6413    3   DOQUIT2:          ;
     1037     6414                          %JUNLOCK;
     1038     6417
     1039     6418        /***********************************************************
     1040     6419         *                                                         *
     1041     6420         *               REPRINT                                   *
     1042     6421         *                                                         *
     1043     6422         ***********************************************************/
     1044     6423    3                   CASE (FOSR_KRPR#);
     1045     6424    3                     DEV$->FO$DEV.BR='0'B;
     1046     6425    3                     GOTO DEV_CONTINUE;
     1047     6426
     1048     6427        /***********************************************************
     1049     6428         *                                                         *
     1050     6429         *               START SPACING                             *
     1051     6430         *                                                         *
     1052     6431         ***********************************************************/
     1053     6432    3                   CASE (FOSR_KSPA#);
     1054     6433
     1055     6434    3   DEV_SPACE:
     1056     6435    4                       DO CASE (DEV$->FO$DEV.SPACEFROM);
     1057     6436
     1058     6437    4                         CASE (SPACEFROM_HERE#);
     1059     6438
     1060     6439    4                         CASE (SPACEFROM_EOF#);
     1061     6440    4                           DEV$->FO$DEV.BR='777770777770'O;
     1062     6441
     1063     6442    4                         CASE (SPACEFROM_BOF#);
     1064     6443    4                           DEV$->FO$DEV.BR='0'B;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:32   
     1065     6444
     1066     6445    4                         CASE (ELSE);
     1067     6446    4                           CALL DEV_EVSCREECH;
     1068     6447    4                           GOTO DEV_EVRTN;
     1069     6448
     1070     6449    4                       END;
     1071     6450    3                     CALL SET_BLKREC ALTRET(NOSPACE);
     1072     6451    3   START_SPACE1:     ;
     1073     6452    3                     IF DEV$->FO$DEV.SPACEPAGES < 0 THEN
     1074     6453    4                       DO;
     1075     6454    4                       EXTENT.GRANS#=EXT$->FO$EXT.GRANS-EXTENT.GRANS#+1;
     1076     6455    4                       CALL SET_EXTBLNK;
     1077     6456    4                       FIL$->FO$FIL.NXTEXT$=EXTBLNK$;
     1078     6457    4                       END;
     1079     6458    3                     SPACE_SYMB.V.BLKREC=DEV$->FO$DEV.BR;
     1080     6459    3                     SPACE_SYMB.V.BLKREC.REC#=SPACE_SYMB.V.BLKREC.REC#+1;
     1081     6460    3                     SPACE_SYMB.V.SPACEPAGES# = DEV$->FO$DEV.SPACEPAGES;
     1082     6461    3                     SPACE_SYMB.V.PAGES#=FIL$->FO$FIL.FLG.PAGES;
     1083     6462    3                     SPACE_SYMB.V.CPVFC#=FIL$->FO$FIL.FLG.CPVFC;
     1084     6463    3                     SPACE_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;
     1085     6464    3                     CALL M$SYMBIO (SPACE_SYMB) ALTRET(DEV_EVRTN);
     1086     6465    3                     DEV$->FO$DEV.STATE=FOS_BUSY#;
     1087     6466    3                     DEV$->FO$DEV.FLG.SIP='1'B;
     1088     6467    3                     IF DEV$->FO$DEV.SPACEPAGES<0 THEN DEV$->FO$DEV.FLG.DIRECTION='0'B;
     1089     6468    3                     GOTO DEV_EVRTN;
     1090     6469    3   NOSPACE:
     1091     6470    3                     IF DEV$->FO$DEV.SPACEPAGES<0 THEN
     1092     6471    3                      GOTO START_SPACE1;
     1093     6472    3                     DEV$->FO$DEV.SUSRSN=FOSR_SBEF#;
     1094     6473    3                     GOTO RESUSP;
     1095     6474
     1096     6475        /***********************************************************
     1097     6476         *                                                         *
     1098     6477         *               START ALIGN                               *
     1099     6478         *                                                         *
     1100     6479         ***********************************************************/
     1101     6480    3                   CASE (FOSR_KALN#);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:33   
     1102     6481    3   ALIGN_IDLE_DEVICE:;
     1103     6482    3                     DEV$->FO$DEV.FLG.JVFU='0'B;
     1104     6483    3                     DEV$->FO$DEV.FLG.JDEVLIMIT='0'B;
     1105     6484    3                     DEV$->FO$DEV.FLG.ALGNED='0'B;
     1106     6485    3                     CALL FOI$GBUF (FO_FFRSCB,DEV$->FO$DEV.ALR$) ALTRET(ALIGN0);
     1107     6486    3                     GOTO ALIGN1;
     1108     6487    3   ALIGN0:           ;
     1109     6488    3                     OPMSG_AERR.SUBC=FOAE_NOPG#;
     1110     6489    3   ALIGN01:          ;
     1111     6490    3                     OPMSG_AERR.DEVNM=DEVNAME;
     1112     6491    3                     CALL M$WRITE (OCMSG_AERR);
     1113     6492    3                     IF DEV$->FO$DEV.STATE = FOS_IALN#
     1114     6493    4                     THEN DO;
     1115     6494    4                       DEV$->FO$DEV.FLG.ALGNED = '0'B;
     1116     6495    4                       GOTO CLEANUP_IALN;
     1117     6496    4                       END;
     1118     6497    3                     GOTO DEV_EVRTN;
     1119     6498
     1120     6499    3   ALIGN1:           ;
     1121     6500
     1122     6501    3                     CALL FOR$SALIGN (,ALSTAT);
     1123     6502
     1124     6503    3   ALIGN2:           ;
     1125     6504    4                       DO CASE (ALSTAT.STAT);
     1126     6505
     1127     6506    4                         CASE (FOAS_FERR#);
     1128     6507    4                           OPMSG_AERR.SUBC=FOAE_FERR#;
     1129     6508    4                           OPMSG_AERR.ERRC=ALSTAT.ERRC;
     1130     6509    4   ALIGN20:                ;
     1131     6510    4                           CALL REL_ALR;
     1132     6511    4                           GOTO ALIGN01;
     1133     6512
     1134     6513    4                         CASE (FOAS_NTTD#);
     1135     6514    4   ALIGN21:                ;
     1136     6515    4                           DEV$->FO$DEV.FLG.ALGNED='1'B;
     1137     6516    4                           CALL REL_ALR;
     1138     6517    4                           IF DEV$->FO$DEV.STATE = FOS_IALN#
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:34   
     1139     6518    5                           THEN DO;
     1140     6519    5                             GOTO CLEANUP_IALN;
     1141     6520    5                             END;
     1142     6521    4                           IF FIL$->FO$FIL.FLG.CHKPTD THEN CALL START_CHKPF;
     1143     6522    4                           ELSE CALL START_FIRSTEXT;
     1144     6523    4                           GOTO DEV_EVRTN;
     1145     6524
     1146     6525    4                         CASE (FOAS_JVFU#);
     1147     6526    4                           DEV$->FO$DEV.FLG.JVFU='1'B;
     1148     6527    4                           GOTO ALIGN22;
     1149     6528
     1150     6529    4                         CASE (FOAS_JDLM#);
     1151     6530    4                           DEV$->FO$DEV.FLG.JDEVLIMIT='1'B;
     1152     6531    4                           GOTO ALIGN22;
     1153     6532
     1154     6533    4                         CASE (FOAS_LAST#);
     1155     6534    4   ALIGN22:                ;
     1156     6535    4                           ACKTYP=1;
     1157     6536    4                           GOTO ALIGN3;
     1158     6537
     1159     6538    4                         CASE (FOAS_GRAN#);
     1160     6539    4                           ACKTYP=0;
     1161     6540    4   ALIGN3:                 ;
     1162     6541    4                           WGR_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;
     1163     6542    4                           WGR_SYMB.V.ACK#='1'B;
     1164     6543    4                           CALL M$SYMBIO (WGR_SYMB) ALTRET(ALIGN31);
     1165     6544    4                           IF DEV$->FO$DEV.STATE ~= FOS_IALN#
     1166     6545    4                           THEN
     1167     6546    4                            DEV$->FO$DEV.STATE=FOS_BUSY#;
     1168     6547    4                           DEV$->FO$DEV.FLG.ACKEXP='1'B;
     1169     6548    4                           IF ACKTYP ~= 0 THEN
     1170     6549    4                            DEV$->FO$DEV.TOKERSN=FOTR_LALGR#;
     1171     6550    4                           ELSE DEV$->FO$DEV.TOKERSN=0;                     /*#15.169*/
     1172     6551    4                           DEV$->FO$DEV.FLG.AIP='1'B;
     1173     6552    4                           GOTO DEV_EVRTN;
     1174     6553    4   ALIGN31:                ;
     1175     6554    4                           IF DEV$->FO$DEV.STATE = FOS_IALN#
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:35   
     1176     6555    4                           THEN
     1177     6556    4                            GOTO CLEANUP_IALN;
     1178     6557                                                     /**/
     1179     6558                                      /* If the device disconnected during
     1180     6559                                         the alignment sequence, release
     1181     6560                                         alignment granule, return, and
     1182     6561                                         await disconnect message from
     1183     6562                                         the comgroup. */
     1184     6563                                                     /**/
     1185     6564    4                           IF B$ERRCODE = %E$ALGNDSC
     1186     6565    4                           THEN
     1187     6566    5                             DO;
     1188     6567    5                             DEV$ -> FO$DEV.FLG.IDSC = '1'B;
     1189     6568    5                             CALL REL_ALR;
     1190     6569    5                             GOTO DEV_EVRTN;
     1191     6570    5                             END;
     1192     6571                                                     /**/
     1193     6572
     1194     6573    4                           IF B$ERRCODE = %E$FPABRT
     1195     6574    5                           THEN DO;
     1196     6575    5                             CALL REL_ALR;
     1197     6576    5                             GOTO DEV_EVRTN;
     1198     6577    5                             END;
     1199     6578
     1200     6579    4                           IF B$ERRCODE ~= %E$NOSTA THEN CALL BAD_SYMBIO;
     1201     6580    4                           GOTO DEV_EVRTN;
     1202     6581
     1203     6582    4                         CASE (FOAS_BDIM#);
     1204     6583    4                           OPMSG_AERR.SUBC=FOAE_BDIM#;
     1205     6584    4                           IF DEV$->FO$DEV.FLG.AIP = '0'B THEN GOTO ALIGN20;
     1206     6585    4                           OPMSG_AERR.DEVNM=DEVNAME;
     1207     6586    4                           CALL M$WRITE (OCMSG_AERR);
     1208     6587    4                           DEV$->FO$DEV.SUSRSN=FOSR_FALN#;
     1209     6588    4                           IF DEV$->FO$DEV.STATE = FOS_IALN#
     1210     6589    4                           THEN
     1211     6590    4                            GOTO CLEANUP_IALN;
     1212     6591    4                           GOTO DEV_SUSPEND;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:36   
     1213     6592
     1214     6593    4                       END; /* CASE ALSTAT.STAT */
     1215     6594
     1216     6595
     1217     6596    3                   CASE (ELSE);
     1218     6597    3                     CALL DEV_EVSCREECH;
     1219     6598    3                 END; /* CASE SUSRSN */
     1220     6599        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:37   
     1221     6600        /*
     1222     6601                             ###    #####   #####   #   #   #####
     1223     6602                            #   #   #       #       #   #     #
     1224     6603                            #       #       #        # #      #
     1225     6604                             ###    ####    ####      #       #
     1226     6605                                #   #       #        # #      #
     1227     6606                            #   #   #       #       #   #     #
     1228     6607                             ###    #       #####   #   #     #
     1229     6608        */
     1230     6609        /**
     1231     6610         **
     1232     6611         **
     1233     6612         **      SYMBIONT FINISHED EXTENT EVENT
     1234     6613         **
     1235     6614         **
     1236     6615         **/
     1237     6616    2             CASE (FODE_SFEXT#);
     1238     6617    3                 DO CASE (STATE);
     1239     6618    3                   CASE (FOS_BUSY#);
     1240     6619    3                     IF INFO = 0 THEN
     1241     6620        /***********************************************************
     1242     6621         *                                                         *
     1243     6622         *               ASKING FOR NEXT EXTENT                    *
     1244     6623         *                                                         *
     1245     6624         ***********************************************************/
     1246     6625    4                       DO;
     1247     6626    4                       IF DEV$->FO$DEV.FLG.LASTEXT THEN GOTO DEV_EVRTN;
     1248     6627    4                       EXT$=FIL$->FO$FIL.NXTEXT$;
     1249     6628                                      /* Are we at the end of the file? */
     1250     6629                                           /* If we are, then MOOS has already
     1251     6630                                              prompted us for a new extent. */
     1252     6631    4                       IF EXT$=ADDR(NIL) THEN
     1253     6632    5                         DO;
     1254     6633    5                         IF (NOT FIL$->FO$FIL.FLG.GLC) AND DEV$->FO$DEV.FLG.DIRECTION
              6633                                  THEN
     1255     6634    6                           DO;
     1256     6635    6                           DEV$->FO$DEV.FLG.CHIDLE = '1'B;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:38   
     1257     6636    6                           GOTO DEV_EVRTN;
     1258     6637    6                           END;
     1259     6638    5                         ELSE
     1260     6639    6                           DO;
     1261     6640    6                           EXTENT.GRANS#=0;
     1262     6641    6                           EXTENT.DAD#=1;
     1263     6642    6                           END;
     1264     6643    5                         END;
     1265     6644    4                       ELSE
     1266     6645                                      /* More chunks are coming */
     1267     6646    5                         DO;
     1268     6647    5                         EXTENT.GRANS#=EXT$->FO$EXT.GRANS;
     1269     6648    5                         EXTENT.DAD#=EXT$->FO$EXT.DAD;
     1270     6649    5                         EXTENT.STAMP=EXT$->FO$EXT.STAMP;
     1271     6650    5                         IF NOT DEV$->FO$DEV.FLG.DIRECTION THEN
     1272     6651    6                           DO;
     1273     6652    6                           EXTENT.DAD#=EXTENT.DAD#+EXTENT.GRANS#-1;
     1274     6653    6                           EXTENT.STAMP.FRDAD#=EXTENT.STAMP.FRDAD#+EXTENT.GRANS#-1;
     1275     6654    6                           END;
     1276     6655    5                         END;
     1277     6656    4                       CALL M$SYMBIO (NXTEXT_SYMB) ALTRET(A6);
     1278     6657    4                       IF EXT$ ~= ADDR(NIL) THEN
     1279     6658    5                         DO;
     1280     6659    5                         IF DEV$->FO$DEV.FLG.DIRECTION THEN
     1281     6660    5                          FIL$->FO$FIL.NXTEXT$=EXT$->FO$EXT.LNK$;
     1282     6661    5                         ELSE
     1283     6662    6                           DO;
     1284     6663    6                           CALL SET_EXTBLNK;
     1285     6664                                      /* Set extent backlink */
     1286     6665    6                           FIL$->FO$FIL.NXTEXT$=EXTBLNK$;
     1287     6666    6                           END;
     1288     6667    5                         END;
     1289     6668    4                       ELSE DEV$->FO$DEV.FLG.LASTEXT='1'B;
     1290     6669    4                       GOTO DEV_EVRTN;
     1291     6670    4   A6:                 IF B$ERRCODE ~= %E$NOSTA THEN CALL BAD_SYMBIO;
     1292     6671    4                       GOTO DEV_EVRTN;
     1293     6672    4                       END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:39   
     1294     6673
     1295     6674    3                     ELSE
     1296     6675        /***********************************************************
     1297     6676         *                                                         *
     1298     6677         *               FINISHED LAST EXTENT                      *
     1299     6678         *                                                         *
     1300     6679         ***********************************************************/
     1301     6680
     1302     6681    4                       DO;
     1303     6682    4                       IF NOT DEV$->FO$DEV.FLG.LASTEXT
     1304     6683    4                       OR DEV$->FO$DEV.FLG.SIP THEN
     1305     6684    5                         DO;
     1306     6685    5                         CALL DEV_EVSCREECH;
     1307     6686    5                         GOTO DEV_EVRTN;
     1308     6687    5                         END;
     1309     6688
     1310     6689    4                       CALL M$SYMBIO(TOKEN_SYMB) ALTRET(A7);
     1311     6690    4                       DEV$->FO$DEV.TOKERSN=FOTR_CLOSE#;
     1312     6691    4                       GOTO DEV_EVRTN;
     1313     6692    4   A7:                 IF B$ERRCODE = %E$NOSTA THEN GOTO DEV_EVRTN;
     1314     6693    4   DEV_GCLTOKE:        ;
     1315     6694
     1316     6695    4                       IF DEV$->FO$DEV.FLG.FWDSPC THEN
     1317     6696    5                         DO;
     1318     6697    5                         DEV$->FO$DEV.SUSRSN = FOSR_AEOF#;
     1319     6698    5                         GOTO DEV_SUSPEND;
     1320     6699    5                         END;
     1321     6700
     1322     6701    4   DEV_FINCOPY:        ;
     1323     6702    4                       FIL$->FO$FIL.COPIES=FIL$->FO$FIL.COPIES-1;
     1324     6703    4                       IF FIL$->FO$FIL.FLG.SAP THEN FIL$->FO$FIL.SAPCOPIES=FIL$->FO$FIL
              6703                                .SAPCOPIES-1;
     1325     6704
     1326     6705    4                       IF FIL$->FO$FIL.COPIES ~= 0 THEN
     1327     6706    5                         DO;
     1328     6707    5                         FIL_CNUM=FIL$->FO$FIL.HICNUM;
     1329     6708    5                         CALL FOF$FITUPD (FOFU_COPY#,,FIL_CNUM);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:40   
     1330     6709    5                         FIL$->FO$FIL.FLG.CHKPTD = '0'B;
     1331     6710    5                         CALL FOF$REPRIO;
     1332     6711    5                         END;
     1333     6712
     1334     6713    4                       QUITRSN=FOQR_COPY#;
     1335     6714    4                       GOTO DEV_QUIT;
     1336     6715    4                       END;
     1337     6716
     1338     6717
     1339     6718    3                   CASE (FOS_SPRQ#);
     1340     6719
     1341     6720    3                   CASE (ELSE);
     1342     6721    3                     CALL DEV_EVSCREECH;
     1343     6722    3                 END; /* CASE STATE */
     1344     6723        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:41   
     1345     6724        /*
     1346     6725
     1347     6726                           SSS   TTTTT   AAA    CCC   K   K
     1348     6727                          S   S    T    A   A  C   C  K  K
     1349     6728                          S        T    A   A  C      K K
     1350     6729                           SSS     T    AAAAA  C      KK
     1351     6730                              S    T    A   A  C      K K
     1352     6731                          S   S    T    A   A  C   C  K  K
     1353     6732                           SSS     T    A   A   CCC   K   K
     1354     6733
     1355     6734        */
     1356     6735        /**
     1357     6736         **
     1358     6737         **
     1359     6738         **      SYMBIONT ACK RESPONSE (ACK TO M$SYMBIO WRITE )
     1360     6739         **
     1361     6740         **
     1362     6741         **/
     1363     6742    2             CASE (FODE_STACK#);
     1364     6743    2               IF DEV$->FO$DEV.FLG.ACKEXP THEN
     1365     6744    3                 DO;
     1366     6745    3                 IF DEV$->FO$DEV.TOKERSN ~= 0 THEN                          /*#15.169*/
     1367     6746    3                  CALL M$SYMBIO (TOKEN_SYMB)
     1368     6747    4                  WHENALTRETURN DO;
     1369     6748    4                    IF B$ERRCODE = %E$ALGNDSC
     1370     6749    5                    THEN DO;
     1371     6750    5                      DEV$ -> FO$DEV.FLG.IDSC = '1'B;
     1372     6751    5                      CALL REL_ALR;
     1373     6752    5                      END;
     1374     6753    4                    GOTO DEV_EVRTN;
     1375     6754    4                    END;
     1376     6755    3                 ELSE
     1377     6756    3                  IF DEV$->FO$DEV.FLG.AIP THEN
     1378     6757    4                    DO;
     1379     6758    4                    IF DEV$ -> FO$DEV.FLG.IDSC
     1380     6759    4                    THEN
     1381     6760    4                     GOTO DEV_EVRTN;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:42   
     1382     6761    4                    IF DEV$ -> FO$DEV.FLG.MODE = FOMD_GRAPHIC#
     1383     6762    4                    THEN
     1384     6763    4                     CALL FOR$GALIGN (,ALSTAT);
     1385     6764    4                    ELSE
     1386     6765    4                     CALL FOR$CALIGN (,ALSTAT);
     1387     6766    4                    GOTO ALIGN2;
     1388     6767    4                    END;
     1389     6768    3                 END;
     1390     6769
     1391     6770        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:43   
     1392     6771        /*
     1393     6772                             ###    #####    ###    #   #   #   #
     1394     6773                            #   #     #     #   #   #  #    #   #
     1395     6774                            #         #     #   #   # #     ##  #
     1396     6775                             ###      #     #   #   ##      # # #
     1397     6776                                #     #     #   #   # #     #  ##
     1398     6777                            #   #     #     #   #   #  #    #   #
     1399     6778                             ###      #      ###    #   #   #   #
     1400     6779        */
     1401     6780        /**
     1402     6781         **
     1403     6782         **
     1404     6783         **      SYMBIONT TOKE RESPONSE (TO M$SYMBIO WRITE )
     1405     6784         **
     1406     6785         **
     1407     6786         **/
     1408     6787    2             CASE (FODE_STOKN#);
     1409     6788    2               TOKERSN=DEV$->FO$DEV.TOKERSN;                          /*#15.169#B00CG*/
     1410     6789    2               DEV$->FO$DEV.TOKERSN=0;                                /*#15.169#B00CG*/
     1411     6790    2               IF DEV$ -> FO$DEV.FLG.IDSC
     1412     6791    2               THEN
     1413     6792    2                GOTO DEV_EVRTN; /* Ignore markers if disconnecting */
     1414     6793    3                 DO CASE (STATE);
     1415     6794    3                   CASE (FOS_BUSY#);
     1416     6795    4                       DO CASE (TOKERSN);
     1417     6796    4                         CASE (FOTR_CLOSE#);
     1418     6797    4                           GOTO DEV_GCLTOKE;
     1419     6798    4                         CASE (FOTR_LALGR#);
     1420     6799    4                           IF DEV$->FO$DEV.FLG.AIP THEN
     1421     6800    5                             DO;
     1422     6801    5                             DEV$ -> FO$DEV.SUSRSN = FOSR_FALN#;
     1423     6802    5                             IF DEV$ -> FO$DEV.FLG.JVFU
     1424     6803    5                             THEN
     1425     6804    5                              DEV$ -> FO$DEV.SUSRSN = FOSR_VFUL#;
     1426     6805    6                             ELSE DO;
     1427     6806    6                               IF DEV$ -> FO$DEV.FLG.JDEVLIMIT
     1428     6807    6                               THEN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:44   
     1429     6808    6                                DEV$ -> FO$DEV.SUSRSN = FOSR_DLIM#;
     1430     6809    6                               END;
     1431     6810    5                             DEV$->FO$DEV.FLG.ALGNED='1'B;
     1432     6811    5                             GOTO DEV_SUSPEND;
     1433     6812    5                             END;
     1434     6813    4                         CASE (FOTR_WLREC#);
     1435     6814                                      /* Must we write a quit record at EOF? */
     1436     6815    4                           IF DEV$->FO$DEV.FLG.QUIT AND DEV$->FO$DEV.FLG.QUITMSG
     1437     6816    4                           THEN GOTO DEV_DOQUIT1;
     1438     6817    4                         CASE (FOTR_CHKPB#);
     1439     6818    4                           DEV$->FO$DEV.BR=FIL$->FO$FIL.CHKPBR;
     1440     6819    4                           DEV$->FO$DEV.FLG.CBD='1'B;
     1441     6820    4   SPACEBACK:              ;
     1442     6821    4                           DEV$->FO$DEV.FLG.SEND_VFU='1'B;
     1443     6822    4                           CALL SPACE_BACK;                                  /*#8.362*/
     1444     6823
     1445     6824    4                       END; /* CASE TOKERSN */
     1446     6825    3                   CASE (FOS_IALN#);
     1447     6826    4                       DO CASE (TOKERSN);
     1448     6827    4                         CASE (FOTR_LALGR#);
     1449     6828    4   CLEANUP_IALN:           ;
     1450     6829
     1451     6830    4                           IF DEV$ -> FO$DEV.FLG.MODE = FOMD_GRAPHIC#
     1452     6831    4                           THEN
     1453     6832    4                            CALL M$DEACTIVATE (DEA_FPRG)
     1454     6833    5                            WHENALTRETURN DO;
     1455     6834    5                              END;
     1456     6835
     1457     6836    4                           CALL M$SYMBIO (CLOSE_SYMB)
     1458     6837    5                           WHENALTRETURN DO;
     1459     6838    5                             IF B$ERRCODE = %E$ALGNDSC
     1460     6839    5                             THEN
     1461     6840    5                              DEV$ -> FO$DEV.FLG.IDSC = '1'B;
     1462     6841    5                             ELSE
     1463     6842    5                              CALL DEV_EVSCREECH;
     1464     6843    5                             END;
     1465     6844    4                           DEV$->FO$DEV.FLG.AIP = '0'B;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:45   
     1466     6845    4                           IF DEV$->FO$DEV.FLG.AEF
     1467     6846    4                           THEN
     1468     6847    4                            DEV$->FO$DEV.FLG.ALGNED = '0'B;
     1469     6848    4                           ELSE
     1470     6849    4                            DEV$->FO$DEV.FLG.ALGNED = '1'B;
     1471     6850    4                           CALL FOI$RBUF (FO_SPGSCB, DEV$->FO$DEV.SPG$);
     1472     6851    4                           DEV$->FO$DEV.SPG$ = ADDR(NIL);
     1473     6852    4                           CALL REL_ALR;
     1474     6853    4                           IF DEV$->FO$DEV.FLG.IDSC THEN EXIT;
     1475     6854    4                           DEV$->FO$DEV.STATE = FOS_IDLE#;
     1476     6855    4                           IF DEV$->FO$DEV.FORM = ' '
     1477     6856    5                           THEN DO;
     1478     6857    5                             OPMSG_IALN.FORM_FLAG = 0;
     1479     6858    5                             END;
     1480     6859    5                           ELSE DO;
     1481     6860    5                             OPMSG_IALN.FORM_FLAG = 1;
     1482     6861    5                             OPMSG_IALN.FORM = DEV$->FO$DEV.FORM;
     1483     6862    5                             END;
     1484     6863
     1485     6864    4                           IF DEV$->FO$DEV.RACCTL = 0
     1486     6865    5                           THEN DO;
     1487     6866    5                             OPMSG_IALN.RACCT_FLAG = 0;
     1488     6867    5                             END;
     1489     6868    5                           ELSE DO;
     1490     6869    5                             OPMSG_IALN.RACCT_FLAG = 1;
     1491     6870    5                             OPMSG_IALN.RACCT = DEV$->FO$DEV.RACCT;
     1492     6871    5                             END;
     1493     6872
     1494     6873    4                           IF DEV$->FO$DEV.FLG.JVFU
     1495     6874    5                           THEN DO;
     1496     6875    5                             OPMSG_IALN.SUBC = 2;
     1497     6876    5                             CALL M$WRITE (OCMSG_IALN);
     1498     6877    5                             END;
     1499     6878    5                           ELSE DO;
     1500     6879    5                             IF DEV$->FO$DEV.FLG.JDEVLIMIT
     1501     6880    6                             THEN DO;
     1502     6881    6                               OPMSG_IALN.SUBC = 4;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:46   
     1503     6882    6                               CALL M$WRITE (OCMSG_IALN);
     1504     6883    6                               END;
     1505     6884    6                             ELSE DO;
     1506     6885    6                               IF TOKERSN = FOTR_LALGR#
     1507     6886    6                               OR DEV$->FO$DEV.SUSRSN = FOSR_FALN#
     1508     6887    7                               THEN DO;
     1509     6888    7                                 OPMSG_IALN.SUBC = 3;
     1510     6889    7                                 CALL M$WRITE (OCMSG_IALN);
     1511     6890    7                                 END;
     1512     6891    6                               END;
     1513     6892    5                             END;
     1514     6893    4                         CASE (ELSE);
     1515     6894    4                       END;
     1516     6895    3                   CASE (FOS_SPRQ#);
     1517     6896
     1518     6897    3                   CASE (ELSE);
     1519     6898    3                     CALL DEV_EVSCREECH;
     1520     6899    3                 END; /* CASE STATE */
     1521     6900        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:47   
     1522     6901        /*
     1523     6902                            #   #   #   #   #####    ###    #   #
     1524     6903                            #   #   #   #     #     #   #   #   #
     1525     6904                            ##  #    # #      #     #       #   #
     1526     6905                            # # #     #       #     #       #####
     1527     6906                            #  ##    # #      #     #       #   #
     1528     6907                            #   #   #   #     #     #   #   #   #
     1529     6908                            #   #   #   #     #      ###    #   #
     1530     6909        */
     1531     6910        /**
     1532     6911         **
     1533     6912         **
     1534     6913         **      NEXT COMMODE CHUNK AVAILABLE EVENT
     1535     6914         **
     1536     6915         **
     1537     6916         **/
     1538     6917    2             CASE (FODE_NXTCH#);
     1539     6918    3                 DO CASE (STATE);
     1540     6919    3                   CASE (FOS_BUSY#);
     1541     6920    3                     IF DEV$->FO$DEV.FLG.CHIDLE THEN
     1542     6921    4                       DO;
     1543     6922    4                       DEV$->FO$DEV.FLG.CHIDLE = '0'B;
     1544     6923    4                       EXT$ = PREVLEXT$;
     1545     6924    4                       FIL$->FO$FIL.NXTEXT$ = EXT$->FO$EXT.LNK$;
     1546     6925    4                       CALL FOD$EVENT (FODE_SFEXT#,0);
     1547     6926    4                       END;
     1548     6927    4                     ELSE DO;
     1549     6928    4                       IF FIL$ -> FO$FIL.NXTEXT$ = ADDR(NIL)
     1550     6929    5                       THEN DO;
     1551     6930    5                         EXT$ = PREVLEXT$;
     1552     6931    5                         FIL$ -> FO$FIL.NXTEXT$ = EXT$ -> FO$EXT.LNK$;
     1553     6932    5                         END;
     1554     6933    4                       END;
     1555     6934    3                 END; /* CASE STATE */
     1556     6935        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:48   
     1557     6936        /*
     1558     6937                                     ###    #   #    ###    #####
     1559     6938                                    #   #   #   #     #       #
     1560     6939                                    #   #   #   #     #       #
     1561     6940                                    #   #   #   #     #       #
     1562     6941                                    # # #   #   #     #       #
     1563     6942                                    #  ##   #   #     #       #
     1564     6943                                     ###     ###     ###      #
     1565     6944        */
     1566     6945        /**
     1567     6946         **
     1568     6947         **
     1569     6948         **      QUIT (GET FILE OFF DEVICE TO MESS WITH AFTER)
     1570     6949         **
     1571     6950         **
     1572     6951         **/
     1573     6952
     1574     6953        /*D* NAME:         DEV_QUIT
     1575     6954
     1576     6955             PURPOSE:      To remove a file from a device
     1577     6956
     1578     6957             DESCRIPTION:  Come here as an event (FODE_QUIT) reported to
     1579     6958                           FOD$EVENT, or from within the scheduler, to in-
     1580     6959                           stigate removal of a file from a device.  This
     1581     6960                           routine is used to ensure that removal, and the
     1582     6961                           follow-up associated with the removal, are both
     1583     6962                           done regardless of what may happen to the device
     1584     6963                           meanwhile (e.g. disconnect or manual suspend).
     1585     6964
     1586     6965                           For example, a file inconsistency might get for-
     1587     6966                           gotten if the device disconnected, because the
     1588     6967                           M$SYMBIO CLOSE PMME will fail due to MOOS having
     1589     6968                           seen disconnect, and when the disconnect event
     1590     6969                           is reported to FOD$EVENT, the inconsistency might
     1591     6970                           get forgotten, with the file being put back in the
     1592     6971                           awaiting-print queue.
     1593     6972
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:49   
     1594     6973                           This routine also takes care, in a well-defined
     1595     6974                           manner, of multple quit conditions occuring
     1596     6975                           'simultaneously', e.g. the operator keys in ABORT,
     1597     6976                           and the device is 'busy' (from OUTSYM's point of
     1598     6977                           view) but MOOS has just detected an inconsistency
     1599     6978                           in the file.  In this case the inconsistency takes
     1600     6979                           precedence in the sense that the file is to be rem-
     1601     6980                           oved from the device, but not deleted (as would be
     1602     6981                           the case with ABORT) because we want to preserve
     1603     6982                           the file to let the system manager try to find
     1604     6983                           out how the inconsistency occurred.
     1605     6984
     1606     6985                           The basic idea is to get the device suspended if
     1607     6986                           it is not suspended already, or already at end of
     1608     6987                           file, or already idle from MOOS's point of view
     1609     6988                           (as is the case for a finished copy), and rem-
     1610     6989                           ember  the reason for the quit, so that when suspend
     1611     6990                           complete is reported, we can take the appropriate
     1612     6991                           action.
     1613     6992
     1614     6993                           Once suspend (if required) is achieved, the symbiont
     1615     6994                           is closed.  If the close ALTRETs, this means either
     1616     6995                           that the device disconnected, or that we didn't bo-
     1617     6996                           ther to suspend it, and the remote handler has
     1618     6997                           suspended it.  In either case we just exit, and
     1619     6998                           later the suspend/disconnect is reported, at which
     1620     6999                           time the fact that we were quitting is remembered,
     1621     7000                           and the correct action taken (for disconnect,
     1622     7001                           this consists of completing the quit sequence; for
     1623     7002                           suspend, retrying the close - which will now ALTRET
     1624     7003                           only due to disconnect and this is handled as above).
     1625     7004                           If the close succeeds, the file is removed from the
     1626     7005                           device, and QUIT_DEV is called to complete the quit
     1627     7006                           sequence (by deleting the file, or whatever).
     1628     7007                                */
     1629     7008
     1630     7009    2             CASE (FODE_QUIT#);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:50   
     1631     7010    2               IF DEV$->FO$DEV.STATE = FOS_IALN#
     1632     7011    2               THEN
     1633     7012    2                GOTO DEV_EVRTN;
     1634     7013    2               QUITRSN=DINFO;
     1635     7014    2   DEV_QUIT:   ;
     1636     7015    2               IF DEV$->FO$DEV.FLG.QUIT THEN
     1637     7016    3                 DO;
     1638     7017    3                 OLDQUITRSN=DEV$->FO$DEV.QUITRSN;
     1639     7018                                /* THE QUIT FLAG IS ALREADY SET.
     1640     7019                                   DECIDE WHETHER TO REMEMBER THE OLD
     1641     7020                                   QUIT REASON, OR THE NEW ONE, BUT IN
     1642     7021                                   ANY CASE JUST EXIT. */
     1643     7022    4                   DO CASE (QUITRSN);
     1644     7023
     1645     7024                                /* ABORT KEYIN, DEL KEYIN, SAVE KEYIN, CANCEL,
     1646     7025                                  RERUN, ZAP KEYIN */
     1647     7026    4                     CASE (FOQR_KABT#,FOQR_DEL#,FOQR_CNCL#,FOQR_KSAV#,FOQR_CDEL#,
     1648     7027    4                 FOQR_RRUN#,FOQR_KZAP#);
     1649     7028    5                         DO CASE(OLDQUITRSN);
     1650     7029    5                           CASE (FOQR_COPY#,FOQR_CHRM#,FOQR_BDDA#,FOQR_FPABRT#);
     1651     7030    5   NEW_QUITRSN:              ;
     1652     7031    5                             DEV$->FO$DEV.QUITRSN=QUITRSN;
     1653     7032    5                         END;
     1654     7033                                /* FILE INCONSISTENCY */
     1655     7034    4                     CASE (FOQR_FINC#);
     1656     7035    5                         DO CASE (OLDQUITRSN);
     1657     7036    5                           CASE (FOQR_KABT#,FOQR_DEL#,FOQR_CHAB#,FOQR_CHRM#,FOQR_KSAV#,
              7036                                    FOQR_CDEL#,
     1658     7037    5                       FOQR_CNCL#,FOQR_RRUN#,FOQR_KZAP#,FOQR_FPABRT#);
     1659     7038    5                             GOTO NEW_QUITRSN;
     1660     7039    5                           CASE (ELSE);
     1661     7040    5                             CALL DEV_EVSCREECH;
     1662     7041    5                         END;
     1663     7042                                /* ABORT FOR BAD COMMODE CHUNK */
     1664     7043    4                     CASE (FOQR_CHAB#);
     1665     7044    5                         DO CASE (OLDQUITRSN);
     1666     7045    5                           CASE (FOQR_KABT#,FOQR_DEL#,FOQR_KSAV#,FOQR_CNCL#,FOQR_CDEL#,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:51   
     1667     7046    5                       FOQR_RRUN#,FOQR_KZAP#);
     1668     7047    5                             GOTO NEW_QUITRSN;
     1669     7048    5                           CASE (FOQR_FINC#,FOQR_BDDA#,FOQR_FPABRT#);
     1670     7049    5                           CASE (ELSE);
     1671     7050    5                             CALL DEV_EVSCREECH;
     1672     7051    5                         END;
     1673     7052                                /* FINISHED ONE COPY - DEVICE LOCKED OR ETC */
     1674     7053    4                     CASE (FOQR_COPY#);
     1675     7054    5                         DO CASE (OLDQUITRSN);
     1676     7055    5                           CASE (FOQR_KABT#,FOQR_CHAB#,FOQR_DEL#,FOQR_KSAV#,FOQR_CNCL#,
              7055                                    FOQR_CDEL#,
     1677     7056    5                       FOQR_RRUN#,FOQR_KZAP#);
     1678     7057    5                           CASE (ELSE);
     1679     7058    5                             CALL DEV_EVSCREECH;
     1680     7059    5                         END;
     1681     7060                                /* COMMODE CHUNK PROBLEMS - REMOVE FILE */
     1682     7061    4                     CASE (FOQR_CHRM#);
     1683     7062    5                         DO CASE (OLDQUITRSN);
     1684     7063    5                           CASE (FOQR_KABT#,FOQR_DEL#,FOQR_BDDA#,FOQR_FINC#,FOQR_KSAV#,
              7063                                    FOQR_CNCL#,FOQR_CDEL#,
     1685     7064    5                       FOQR_RRUN#,FOQR_KZAP#,FOQR_FPABRT#);
     1686     7065    5                           CASE (ELSE);
     1687     7066    5                             CALL DEV_EVSCREECH;
     1688     7067    5                         END;
     1689     7068                                /* BAD DISK ADDRESS IN MOOS */
     1690     7069    4                     CASE (FOQR_BDDA#);
     1691     7070    5                         DO CASE (OLDQUITRSN);
     1692     7071    5                           CASE (FOQR_KABT#,FOQR_DEL#,FOQR_CHAB#,FOQR_CHRM#,FOQR_KSAV#,
              7071                                    FOQR_CDEL#,
     1693     7072    5                       FOQR_CNCL#,FOQR_RRUN#,FOQR_KZAP#,FOQR_FPABRT#);
     1694     7073    5                           CASE (ELSE);
     1695     7074    5                             CALL DEV_EVSCREECH;
     1696     7075    5                         END;
     1697     7076    4                   END; /* DO CASE QUITRSN */
     1698     7077    3                 GOTO DEV_EVRTN;
     1699     7078    3                 END;
     1700     7079                                /* QUIT FLAG NOT ALREADY SET.
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:52   
     1701     7080                                   INITIATE THE QUIT SEQUENCE */
     1702     7081    2               DEV$->FO$DEV.QUITRSN=QUITRSN;
     1703     7082    2               DEV$->FO$DEV.FLG.QUIT='1'B;
     1704     7083    3                 DO CASE (QUITRSN);
     1705     7084    3                   CASE (FOQR_KABT#,FOQR_DEL#,FOQR_CHAB#,FOQR_CHRM#,FOQR_KSAV#,
              7084                            FOQR_CDEL#,
     1706     7085    3               FOQR_CNCL#,FOQR_RRUN#,FOQR_KZAP#,FOQR_FPABRT#);
     1707     7086    4                       DO CASE (DEV$->FO$DEV.STATE);
     1708     7087    4                         CASE (FOS_BUSY#);
     1709     7088    4                           DEV$->FO$DEV.SUSRSN=FOSR_QUIT#;
     1710     7089    4                           GOTO DEV_SUSPEND;
     1711     7090    4                         CASE (FOS_SPRQ#);
     1712     7091    4                           DEV$->FO$DEV.SUSRSN=FOSR_QUIT#;
     1713     7092    4                         CASE (FOS_SUSP#);
     1714     7093    4                           DEV$->FO$DEV.SUSRSN=FOSR_QUIT#;
     1715     7094    4                           GOTO DEV_SUSPENDED1;
     1716     7095    4                         CASE (ELSE);
     1717     7096    4                           CALL DEV_EVSCREECH;
     1718     7097    4                       END;
     1719     7098    3                   CASE (FOQR_COPY#);
     1720     7099                                /* IF FILE WAS CAUGHT IN A CRASH, PRINT
     1721     7100                                   'LAST RECORD SUPPLIED BY CP6 RECOVERY'
     1722     7101                                   ON END OF LISTING */
     1723     7102    3                     IF FIL$->FO$FIL.FLG.CRASHED THEN GOTO DEV_DOQUIT;
     1724     7103    3                     GOTO DEV_DOQUIT1;
     1725     7104    3                   CASE (FOQR_FINC#,FOQR_BDDA#);
     1726     7105    3                     DEV$->FO$DEV.SUSRSN=FOSR_QUIT#;
     1727     7106    3                     GOTO DEV_SUSPENDED1;
     1728     7107    3                   CASE (ELSE);
     1729     7108    3                     CALL DEV_EVSCREECH;
     1730     7109    3                 END; /* CASE QUITRSN */
     1731     7110        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:53   
     1732     7111        /*
     1733     7112                             ###    #####    ###    ####     ###
     1734     7113                            #   #   #       #   #   #   #   #   #
     1735     7114                            #       #       #       #   #   #   #
     1736     7115                             ###    ####     ###    ####    #####
     1737     7116                                #   #           #   #       #   #
     1738     7117                            #   #   #       #   #   #       #   #
     1739     7118                             ###    #        ###    #       #   #
     1740     7119        */
     1741     7120        /**
     1742     7121         **
     1743     7122         **
     1744     7123         **      SYMBIONT FINISHED SPACING EVENT
     1745     7124         **
     1746     7125         **
     1747     7126         **/
     1748     7127    2             CASE (FODE_SFSPA#);
     1749     7128    3                 DO CASE (STATE);
     1750     7129    3                   CASE (FOS_BUSY#);
     1751     7130    3                     IF DEV$->FO$DEV.FLG.SIP = '0'B THEN
     1752     7131    4                       DO;
     1753     7132    4                       CALL DEV_EVSCREECH;
     1754     7133    4                       GOTO DEV_EVRTN;
     1755     7134    4                       END;
     1756     7135    3                     DEV$->FO$DEV.STATE=FOS_SUSP#;
     1757     7136    3                     DEV$->FO$DEV.FLG.LASTEXT='0'B;
     1758     7137    3                     DEV$->FO$DEV.FLG.SIP='0'B;
     1759     7138    3                     DEV$->FO$DEV.FLG.DIRECTION='1'B;
     1760     7139    3                     DEV$->FO$DEV.BR=INFOB;
     1761     7140    3                     IF (DEV$->FO$DEV.SPACEFROM = SPACEFROM_EOF#
     1762     7141    3                     AND DEV$->FO$DEV.BR)
     1763     7142    3                     OR DEV$->FO$DEV.FLG.SEND_VFU='1'B
     1764     7143    3                     THEN
     1765     7144    4                       DO;
     1766     7145                                /* HERE AFTER SPACING BACKWARD FROM EOF,
     1767     7146                                   HAVING FOUND THE BLKREC CORRESPONDING TO
     1768     7147                                   THE REQUIRED NUMBER OF PAGES OR CARDS.
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:54   
     1769     7148                                   THE PROBLEM IS THAT THE DEVICE MAY NOT
     1770     7149                                   HAVE THE CORRECT TAB SETTINGS GIVEN WHERE
     1771     7150                                   WE NOW WANT TO BEGIN PRINTING.  THE ONLY
     1772     7151                                   SOLUTION TO THIS IS TO NOW SPACE FORWARD
     1773     7152                                   FROM BOF TO THE BLKREC WE HAVE NOW, THUS
     1774     7153                                   GATHERING UP THE CORRECT TAB SETTINGS.
     1775     7154                                   WHEN THAT SPACING STOPS, MOOS WILL HAVE
     1776     7155                                   THE RIGHT TABS IN HIS HAND, AND WILL
     1777     7156                                   EMIT THEM TO THE DEVICE WHEN WE SAY
     1778     7157                                   CONTINUE. */
     1779     7158    4                       DEV$->FO$DEV.FLG.SEND_VFU='0'B;
     1780     7159    4                       DEV$->FO$DEV.SPACEFROM=SPACEFROM_BOF#;
     1781     7160    4                       CALL SBLKS_DEV;
     1782     7161    4                       GOTO DEV_EVRTN;
     1783     7162    4                       END;
     1784     7163    3                     DEV$->FO$DEV.BR.REC# = DEV$->FO$DEV.BR.REC#-1;
     1785     7164    3                     CALL SET_BLKREC ALTRET(SPACED_EOF);
     1786     7165    3                     GOTO DEV_CONTINUE;
     1787     7166    3   SPACED_EOF:
     1788     7167    3                     DEV$->FO$DEV.SUSRSN=FOSR_SBEF#;
     1789     7168    3                     GOTO DEV_SUSPENDED1;
     1790     7169    3                   CASE (FOS_SPRQ#);
     1791     7170
     1792     7171    3                   CASE (ELSE);
     1793     7172    3                     CALL DEV_EVSCREECH;
     1794     7173    3                 END; /* CASE STATE */
     1795     7174        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:55   
     1796     7175        /*
     1797     7176                            #   #   #####   #   #   #   #
     1798     7177                            #  #    #       #   #   #   #
     1799     7178                            # #     #        # #    ##  #
     1800     7179                            ##      ####      #     # # #
     1801     7180                            # #     #         #     #  ##
     1802     7181                            #  #    #         #     #   #
     1803     7182                            #   #   #####     #     #   #
     1804     7183        */
     1805     7184        /**
     1806     7185         **
     1807     7186         **
     1808     7187         **      DEVICE KEYIN EVENT
     1809     7188         **
     1810     7189         **
     1811     7190         **/
     1812     7191        /*   Order: SUSPEND
     1813     7192                    ABORT
     1814     7193                    CONTINUE
     1815     7194                    SAVE
     1816     7195                    REPRINT
     1817     7196                    LOCK
     1818     7197                    START
     1819     7198                    ALIGN
     1820     7199                    SPACE
     1821     7200                    RESTRICT */
     1822     7201    2             CASE (FODE_KEYN#);
     1823     7202    2               OPMSG_RESP.CADDR=M_UR;
     1824     7203    2               OPMSG_RESP.DEVNM=DEVNAME;
     1825     7204        /* VECTOR ON KEYIN CODE */
     1826     7205    3                 DO CASE (KEYIN$->FO$DKEYIN.KIN#);
     1827     7206        /**
     1828     7207         **
     1829     7208         **  SUSPEND KEYIN
     1830     7209         **
     1831     7210         **/
     1832     7211    3                   CASE (KEY_SUSPEND#);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:56   
     1833     7212    3                     CALL CHK_AIP ALTRET(DEV_KERR);
     1834     7213    4                       DO CASE (STATE);
     1835     7214    4                         CASE (FOS_BUSY#);
     1836     7215    4                           IF DEV$->FO$DEV.FLG.SIP THEN
     1837     7216    5                             DO;
     1838     7217    5                             KERR=FOKE_NSSPC#;
     1839     7218    5                             GOTO DEV_KERR;
     1840     7219    5                             END;
     1841     7220    4                           DEV$->FO$DEV.SUSRSN=FOSR_KSUS#;
     1842     7221    4   DEV_SUSPEND:
     1843     7222    4                           CALL SUSP_DEV;
     1844     7223    4                         CASE (FOS_SUSP#);
     1845     7224    4                           KERR=FOKE_ASUSP#;
     1846     7225    4                           GOTO DEV_KERR;
     1847     7226    4                         CASE (FOS_SPRQ#);
     1848     7227    4                           KERR=FOKE_ASUSI#;
     1849     7228    4                           GOTO DEV_KERR;
     1850     7229    4                         CASE (ELSE);
     1851     7230    4   DEV_NOTBUSY:            ;
     1852     7231    4                           KERR=FOKE_NBUSY#;
     1853     7232    4                           GOTO DEV_KERR;
     1854     7233    4                       END; /* CASE STATE */
     1855     7234        /**
     1856     7235         **
     1857     7236         **  ABORT KEYIN
     1858     7237         **
     1859     7238         **/
     1860     7239    3                   CASE (KEY_ABORT#);
     1861     7240    3                     CALL CHK_AIP ALTRET(DEV_KERR);
     1862     7241    4                       DO CASE (STATE);
     1863     7242    4                         CASE (FOS_BUSY#,FOS_SUSP#,FOS_SPRQ#);
     1864     7243    4                           CALL CHK_KSYSID ALTRET(BAD_KSYSID);
     1865     7244    4                           QUITRSN=FOQR_KABT#;
     1866     7245    4                           GOTO DEV_QUIT;
     1867     7246    4                         CASE (ELSE);
     1868     7247    4                           GOTO DEV_NOTBUSY;
     1869     7248    4                       END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:57   
     1870     7249
     1871     7250        /**
     1872     7251         **
     1873     7252         **  CONTINUE KEYIN
     1874     7253         **
     1875     7254         **/
     1876     7255    3                   CASE (KEY_CONTINUE#);
     1877     7256                                           /* If the device is susp and we just
     1878     7257                                              did an align, set align_tabs and
     1879     7258                                              space back to beginning of page.
     1880     7259                                              When we get the SFSPA event, check
     1881     7260                                              if align_tabs is set.  If it is,
     1882     7261                                              we must space from BOF to pick up
     1883     7262                                              all previously written tabs (tabs
     1884     7263                                              were zeroed in the align record).
     1885     7264                                              When we receive the 2nd SFSPA event,
     1886     7265                                              we continue. */
     1887     7266    4                       DO CASE (STATE);
     1888     7267    4                         CASE (FOS_SUSP#);
     1889     7268    4                           CALL CHK_ALG ALTRET(DEV_KERR);
     1890     7269    4                           IF DEV$->FO$DEV.SUSRSN = FOSR_AEOF# THEN
     1891     7270    4                            GOTO DEV_FINCOPY;
     1892     7271    4                           IF DEV$->FO$DEV.SUSRSN = FOSR_FALN# THEN
     1893     7272    5                             DO;
     1894     7273    5   DEV_CONTVFU:              ;                                               /*#8.362*/
     1895     7274    5                             IF FIL$->FO$FIL.FLG.CHKPTD = '1'B
     1896     7275    5                             AND DEV$->FO$DEV.FLG.CBD = '0'B THEN
     1897     7276    6                               DO;
     1898     7277    6                               CALL START_CHKPF;
     1899     7278    6                               GOTO DEV_EVRTN;
     1900     7279    6                               END;
     1901     7280    5                             IF (DEV$->FO$DEV.NAMER.TYP = 'LP' OR DEV$->FO$DEV.NAMER.
              7280                                      TYP = 'CP')
     1902     7281    5                             AND DEV$->FO$DEV.BR
     1903     7282    5                             THEN
     1904     7283    6                               DO;
     1905     7284    6                               GOTO SPACEBACK;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:58   
     1906     7285    6                               END;
     1907     7286    5                             END;
     1908     7287    4                           IF DEV$ -> FO$DEV.SUSRSN = FOSR_SBEF#
     1909     7288    5                           THEN DO;
     1910     7289    5                             GOTO SPACEBACK;
     1911     7290    5                             END;
     1912     7291    4                           GOTO DEV_CONT;
     1913     7292        /**/
     1914     7293        /* EXTERNAL ENTRY */
     1915     7294        /**/
     1916     7295    4   DEV_CONTINUE:           ;
     1917     7296    4                           CALL SET_BLKREC ALTRET(DEV_CONT0);
     1918     7297    4                           GOTO DEV_CONT;
     1919     7298    4   DEV_CONT0:              ;
     1920     7299    4                           DEV$->FO$DEV.BR='0'B; /* IF BAD, REPRINT */
     1921     7300    4   DEV_CONT:               ;
     1922     7301    4                           CONT_SYMB.V.BLKREC=DEV$->FO$DEV.BR;
     1923     7302    4                           CONT_SYMB.V.BLKREC.REC#=CONT_SYMB.V.BLKREC.REC#+1;
     1924     7303    4                           CONT_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;
     1925     7304    4                           CALL SET_BLKREC ALTRET(DEV_CPBEF);
     1926     7305    4                           CALL M$SYMBIO (CONT_SYMB) ALTRET(DEV_EVRTN);
     1927     7306    4                           DEV$->FO$DEV.STATE=FOS_BUSY#;
     1928     7307    4                           DEV$->FO$DEV.FLG.TERR='0'B;
     1929     7308    4                           GOTO DEV_EVRTN;
     1930     7309    4   DEV_CPBEF:
     1931     7310    4                           IF DEV$->FO$DEV.SUSRSN~=FOSR_TBRK# THEN
     1932     7311    5                             DO;
     1933     7312    5                             KERR=FOKE_CPBEF#;
     1934     7313    5                             GOTO DEV_KERR;
     1935     7314    5                             END;
     1936     7315    4                           CALL BDBCMSG_DEV;
     1937     7316    4                         CASE (ELSE);
     1938     7317    4                           KERR=FOKE_NSUSP#;
     1939     7318    4                           GOTO DEV_KERR;
     1940     7319    4                       END;
     1941     7320        /**
     1942     7321         **
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:59   
     1943     7322         **  SAVE KEYIN
     1944     7323         **
     1945     7324         **/
     1946     7325    3                   CASE (KEY_SAVE#);
     1947     7326    3                     CALL CHK_KSYSID ALTRET(BAD_KSYSID);
     1948     7327    3                     CALL CHK_AIP ALTRET(DEV_KERR);
     1949     7328    4                       DO CASE (STATE);
     1950     7329    4                         CASE (FOS_BUSY#,FOS_SPRQ#,FOS_SUSP#);
     1951     7330    4                           CALL LOCK_DEV;
     1952     7331    4                           QUITRSN=FOQR_KSAV#;
     1953     7332    4                           IF KEYIN$->FO$DKEYIN.CHKP ~= 0 THEN DEV$->FO$DEV.FLG.CHKP=
              7332                                    '1'B;
     1954     7333    4                           GOTO DEV_QUIT;
     1955     7334    4                         CASE (ELSE);
     1956     7335    4                           GOTO DEV_NOTBUSY;
     1957     7336    4                       END;
     1958     7337        /**
     1959     7338         **
     1960     7339         **  REPRINT KEYIN
     1961     7340         **
     1962     7341         **/
     1963     7342    3                   CASE (KEY_REPRINT#);
     1964     7343    3                     CALL CHK_KSYSID ALTRET(BAD_KSYSID);
     1965     7344    3                     CALL CHK_AIP ALTRET(DEV_KERR);
     1966     7345    3                     CALL CHK_ALG ALTRET(DEV_KERR);
     1967     7346    4                       DO CASE (STATE);
     1968     7347    4                         CASE (FOS_BUSY#);
     1969     7348    4                           DEV$->FO$DEV.SUSRSN=FOSR_KRPR#;
     1970     7349    4                           GOTO DEV_SUSPEND;
     1971     7350    4                         CASE (FOS_SPRQ#);
     1972     7351    4                           DEV$->FO$DEV.SUSRSN=FOSR_KRPR#;
     1973     7352    4                         CASE (FOS_SUSP#);
     1974     7353    4                           DEV$->FO$DEV.SUSRSN=FOSR_KRPR#;
     1975     7354    4                           GOTO DEV_SUSPENDED1;
     1976     7355    4                         CASE (ELSE);
     1977     7356    4                           GOTO DEV_NOTBUSY;
     1978     7357    4                       END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:60   
     1979     7358        /**
     1980     7359         **
     1981     7360         **  LOCK KEYIN
     1982     7361         **
     1983     7362         **/
     1984     7363    3                   CASE (KEY_LOCK#);
     1985     7364    3                     CALL LOCK_DEV;
     1986     7365        /**
     1987     7366         **
     1988     7367         **  START KEYIN
     1989     7368         **
     1990     7369         **/
     1991     7370    3                   CASE (KEY_START#);
     1992     7371    3                     IF DEV$->FO$DEV.FORM = ' ' THEN
     1993     7372    4                       DO;
     1994     7373    4                       KERR=FOKE_NSFRM#;
     1995     7374    4                       GOTO DEV_KERR;
     1996     7375    4                       END;
     1997     7376    3                     IF DEV$->FO$DEV.FLG.LOCK THEN
     1998     7377    4                       DO;
     1999     7378                                  /* UNLOCK DEVICE EVEN IF BUSY */
     2000     7379    4                       DEV$->FO$DEV.FLG.LOCK='0'B;
     2001     7380    4                       OPMSG_RESP.SUBC=FOKR_START#;
     2002     7381    4                       CALL M$WRITE (OCMSG_RESP);
     2003     7382    4                       CALL FOR$DEVWR;
     2004     7383    4                       END;
     2005     7384    4                       DO CASE (STATE);
     2006     7385    4                         CASE (FOS_IDLE#);
     2007     7386    4                           IF DEV$->FO$DEV.FLG.IDSC
     2008     7387    4                           THEN
     2009     7388    5                             DO;
     2010     7389    5                             KERR = FOKE_DVDSC#;
     2011     7390    5                             GOTO DEV_KERR;
     2012     7391    5                             END;
     2013     7392                                %JLOCK;
     2014     7395    4                           CALL GETFIL_DEV ALTRET(DEV_NOFIL);
     2015     7396    4                           DO_ONMSG=1;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:61   
     2016     7397    4                           CALL START_DEV ALTRET(DEV_NOSTRT);
     2017     7398                                %JUNLOCK;
     2018     7401    4                           DO_ONMSG=0;
     2019     7402    4                           GOTO DEV_EVRTN;
     2020     7403    4   DEV_NOFIL:              ;
     2021     7404                                %JUNLOCK;
     2022     7407    4                           KERR=FOKE_NOFDV#;
     2023     7408    4                           GOTO DEV_KERR;
     2024     7409    4   DEV_NOSTRT:             ;
     2025     7410                                %JUNLOCK;
     2026     7413    4                           DO_ONMSG=0;
     2027     7414    4                           KERR=FOKE_NSTRT#;
     2028     7415    4                           GOTO DEV_KERR;
     2029     7416    4                         CASE (ELSE);
     2030     7417    4                           KERR=FOKE_NIDLE#;
     2031     7418    4   DEV_KERR:               ;
     2032     7419        /* KEYIN ERRORS COME HERE */
     2033     7420    4                           OPMSG_KERR.DEVNM=DEVNAME;
     2034     7421    4                           IF EVENT = FODE_KEYN#
     2035     7422    4                           THEN
     2036     7423    4                            OPMSG_KERR.CADDR=KEYIN$->FO$DKEYIN.CADDR;
     2037     7424    4                           ELSE
     2038     7425    4                            OPMSG_KERR.CADDR = M_UR;
     2039     7426    4                           OPMSG_KERR.SUBC=KERR;
     2040     7427    4                           CALL M$WRITE (OCMSG_KERR);
     2041     7428    4                           GOTO DEV_EVRTN;
     2042     7429    4   BAD_KSYSID:             ;
     2043     7430    4                           KERR=FOKE_SYSID#;
     2044     7431    4                           OPMSG_KERR.SYSID=KEYIN$->FO$DKEYIN.SYSID;
     2045     7432    4                           GOTO DEV_KERR;
     2046     7433    4                       END;
     2047     7434        /**
     2048     7435         **
     2049     7436         **  ALIGN KEYIN
     2050     7437         **
     2051     7438         **/
     2052     7439    3                   CASE (KEY_ALIGN#);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:62   
     2053     7440                                           /* Initiate an align sequence.  Once
     2054     7441                                              we receive the STHLD event (from
     2055     7442                                              FEP devices only), we go to label
     2056     7443                                              DEV_SUSPENDED.  The next step is
     2057     7444                                              to do case on susrsn which is now
     2058     7445                                              KALN.  Here we get a block for the
     2059     7446                                              alignment record, call FOR$SALGN
     2060     7447                                           to get the VFU, set JVFU, write
     2061     7448                                           the VFU gran, and get STACK.
     2062     7449                                           Upon receipt of the ACK we build
     2063     7450                                           the next part of the granule
     2064     7451                                           (via FOR$CALIGN) & write it.  This
     2065     7452                                           process continues until we complete
     2066     7453                                           the alignment image at which point
     2067     7454                                           TOKERSN is set to LALGR.  When the
     2068     7455                                           ACK is received from the last
     2069     7456                                           granule we issue a token response
     2070     7457                                           from MOOS.  This response places
     2071     7458                                           us in STOKN where we have a case
     2072     7459                                           for LALGR.  Here we suspend the
     2073     7460                                           device again.  Upon receipt of the
     2074     7461                                           STHLD we release the alignment
     2075     7462                                           granule, set AIP='0'B, and await
     2076     7463                                           continue.  Continuing causes us
     2077     7464                                           to backup 1 page, simulate a space
     2078     7465                                           from BOF (to pick up VFU and TABs),
     2079     7466                                           and commence printing. */
     2080     7467    3                     CALL CHK_AIP ALTRET(DEV_KERR);
     2081     7468    4                       DO CASE (STATE);
     2082     7469    4                         CASE (FOS_BUSY#);
     2083     7470    4                           DEV$->FO$DEV.SUSRSN=FOSR_KALN#;
     2084     7471    4                           GOTO DEV_SUSPEND;
     2085     7472    4                         CASE (FOS_SPRQ#);
     2086     7473    4                           DEV$->FO$DEV.SUSRSN=FOSR_KALN#;
     2087     7474    4                         CASE (FOS_SUSP#);
     2088     7475    4                           DEV$->FO$DEV.SUSRSN=FOSR_KALN#;
     2089     7476    4                           GOTO DEV_SUSPENDED1;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:63   
     2090     7477    4                         CASE (FOS_IDLE#);
     2091     7478
     2092     7479    4                           IF DEV$->FO$DEV.FLG.LOCK = '0'B
     2093     7480    4                           THEN
     2094     7481    4                            CALL LOCK_DEV;
     2095     7482
     2096     7483
     2097     7484                                %JLOCK;
     2098     7487    4                           CALL FOI$GBUF (FO_SPGSCB, DEV$->FO$DEV.SPG$)
     2099     7488    5                           WHENALTRETURN DO;
     2100     7489                     /* CONSOLE MSG */
     2101     7490                                  %JUNLOCK;
     2102     7493    5                             GOTO DEV_EVRTN;
     2103     7494    5                             END;
     2104     7495
     2105     7496    4                           OPMSG_IALN.DEVNM = DEVNAME;
     2106     7497    4                           OPMSG_IALN.CADDR = M_UR;
     2107     7498    4                           OPMSG_IALN.SUBC = 1;
     2108     7499    4                           CALL M$WRITE (OCMSG_IALN);
     2109     7500    4                           DEVNAME = DEV$->FO$DEV.NAME;
     2110     7501    4                           START_SYMB.V.ORDER# = FOMO_SOPEN#;
     2111     7502    4                           IF DEV$ -> FO$DEV.FLG.MODE = FOMD_GRAPHIC#
     2112     7503    5                           THEN DO;
     2113     7504    5                             CALL M$DEACTIVATE (DEA_FPRG)
     2114     7505    6                             WHENALTRETURN DO;
     2115     7506    6                               END;
     2116     7507    5                             CALL M$ACTIVATE (ACT_FPRG)
     2117     7508    6                             WHENALTRETURN DO;
     2118     7509    6                               END;
     2119     7510    5                             SYMB_FPRG.LDBYPRO# = 1;
     2120     7511    5                             SYMB_STA.STATION# = DEVNAME;
     2121     7512    5                             CALL M$SETFP ( START_FPRG )
     2122     7513    6                             WHENALTRETURN DO;
     2123     7514    6                               CALL M$DEACTIVATE (DEA_FPRG)
     2124     7515    7                               WHENALTRETURN DO;
     2125     7516    7                                 END;
     2126     7517    6                               SYMB_FPRG.LDBYPRO# = 0;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:64   
     2127     7518    6                               OPMSG_FPERR.DEVNM = DEVNAME;
     2128     7519    6                               OPMSG_FPERR.CADDR = M_UR;
     2129     7520    6                               OPMSG_FPERR.SUBC = 2;
     2130     7521    6                               OPMSG_FPERR.ERRCODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
     2131     7522    6                               OPMSG_FPERR.LDBYPRO = 1;
     2132     7523    6                               CALL M$WRITE (OCMSG_FPERR);
     2133     7524    6                               GOTO DEV_EVRTN;
     2134     7525    6                               END;
     2135     7526
     2136     7527    5                             START_SYMB.V.ORDER# = FOMO_LOAD#;
     2137     7528    5                             SYMB_FPRG.LDBYPRO# = 0;
     2138     7529    5                             END;
     2139     7530    4                           EXTENT = '0'B;
     2140     7531    4                           DEV$->FO$DEV.BR = '0'B;
     2141     7532    4                           START_SYMB.V.BLKREC = '0'B;
     2142     7533    4                           START_SYMB.BUF_.BUF$ = DEV$->FO$DEV.SPG$;
     2143     7534    4                           START_SYMB.V.SETX# = 0;
     2144     7535    4                           CALL M$SYMBIO (START_SYMB)
     2145     7536    5                           WHENALTRETURN DO;
     2146     7537    5                             CALL FOI$RBUF (FO_SPGSCB, DEV$->FO$DEV.SPG$);
     2147     7538    5                             DEV$->FO$DEV.SPG$ = ADDR(NIL);
     2148     7539                                  %JUNLOCK;
     2149     7542    5                             GOTO DEV_EVRTN;
     2150     7543    5                             END;
     2151     7544    4                           DEV$->FO$DEV.STATE = FOS_IALN#;
     2152     7545    4                           DEV$->FO$DEV.CFIL$ = ADDR(NIL);
     2153     7546    4                           DEV$->FO$DEV.SUSRSN = 0;
     2154     7547                                %JUNLOCK;
     2155     7550
     2156     7551    4                           DEV$->FO$DEV.TOKERSN = 0;
     2157     7552    4                           GOTO ALIGN_IDLE_DEVICE;
     2158     7553    4                       END;
     2159     7554        /**
     2160     7555         **
     2161     7556         **  SPACE KEYIN
     2162     7557         **
     2163     7558         **/
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:65   
     2164     7559    3                   CASE (KEY_SPACE#);
     2165     7560                                /* A WORD ABOUT SPACING :
     2166     7561                                   SPACING IS INITIATED AFTER THE DEVICE
     2167     7562                                   GETS SUSPENDED. ALTHOUGH THE DEVICE IS
     2168     7563                                   MARKED BUSY IN OUR TABLES, AND MARKED
     2169     7564                                   SPACING IN MOOS'S TABLES, NOTE THAT
     2170     7565                                   THE FEP (IF THE DEVICE IS REMOTE) NEVER
     2171     7566                                   KNOWS THAT WE ARE SPACING.  THUS,
     2172     7567                                   FOR EXAMPLE, UNILATERAL SUSPEND FROM
     2173     7568                                   THE FEP DURING SPACING IS AN ERROR AND
     2174     7569                                   CAUSES THE FEP TO BE RE-BOOTED.  ALSO
     2175     7570                                   THIS MEANS WE CAN CHANGE STATE RIGHT
     2176     7571                                   BACK TO FOS_SUSP# IF WE SPACE PAST EOF,
     2177     7572                                   WITHOUT HAVING TO DO M$SYMBIO SUSPEND. */
     2178     7573    3                     PAGES=KEYIN$->FO$DKEYIN.NPAGES;
     2179     7574    3                     IF PAGES > FOMI_MXSPC#
     2180     7575    3                     OR PAGES < (-FOMI_MXSPC#)
     2181     7576    3                     OR PAGES = 0 THEN
     2182     7577    4                       DO;
     2183     7578    4                       KERR=FOKE_ILSPC#;
     2184     7579    4                       GOTO DEV_KERR;
     2185     7580    4                       END;
     2186     7581    4                       DO CASE (KEYIN$->FO$DKEYIN.SPACEFROM);
     2187     7582    4                         CASE (SPACEFROM_HERE#);
     2188     7583    4                         CASE (SPACEFROM_BOF#);
     2189     7584    4                           IF PAGES < 0 THEN
     2190     7585    5                             DO;
     2191     7586    5                             KERR=FOKE_SBBOF#;
     2192     7587    5                             GOTO DEV_KERR;
     2193     7588    5                             END;
     2194     7589    4                         CASE (SPACEFROM_EOF#);
     2195     7590    4                           IF PAGES > 0 THEN
     2196     7591    5                             DO;
     2197     7592    5                             KERR=FOKE_SFEOF#;
     2198     7593    5                             GOTO DEV_KERR;
     2199     7594    5                             END;
     2200     7595    4                           IF DEV$->FO$DEV.CFIL$ ~= ADDR(NIL) THEN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:66   
     2201     7596    4                            IF DEV$->FO$DEV.CFIL$->FO$FIL.FLG.GLC = '0'B THEN
     2202     7597    5                              DO;
     2203     7598    5                              KERR=FOKE_SPEOF#;
     2204     7599    5                              GOTO DEV_KERR;
     2205     7600    5                              END;
     2206     7601    4                         CASE (ELSE);
     2207     7602    4                           GOTO ILLKEY;
     2208     7603    4                       END;
     2209     7604    3                     CALL CHK_KSYSID ALTRET(BAD_KSYSID);
     2210     7605    3                     CALL CHK_AIP ALTRET(DEV_KERR);
     2211     7606    3                     CALL CHK_ALG ALTRET(DEV_KERR);
     2212     7607    3                     DEV$->FO$DEV.SPACEPAGES=KEYIN$->FO$DKEYIN.NPAGES;
     2213     7608    3                     DEV$->FO$DEV.SPACEFROM=KEYIN$->FO$DKEYIN.SPACEFROM;
     2214     7609                                      /* Have we spaced forward? FWDSPC = '1'B
     2215     7610                                         says we have, therefore if we reach
     2216     7611                                         the EOF we know to space back to get
     2217     7612                                         the compile summary */
     2218     7613    3                     IF DEV$->FO$DEV.SPACEPAGES > 0
     2219     7614    3                     OR DEV$->FO$DEV.SPACEFROM = SPACEFROM_EOF# THEN
     2220     7615    3                      IF KEYIN$->FO$DKEYIN.CONTINUE = 0 THEN
     2221     7616    3                       DEV$->FO$DEV.FLG.FWDSPC='1'B;
     2222     7617    3                      ELSE DEV$->FO$DEV.FLG.FWDSPC='0'B;
     2223     7618    4                       DO CASE (STATE);
     2224     7619    4                         CASE (FOS_BUSY#);
     2225     7620    4                           IF DEV$->FO$DEV.FLG.SIP THEN
     2226     7621    5                             DO;
     2227     7622    5                             KERR=FOKE_NSSPC#;
     2228     7623    5                             GOTO DEV_KERR;
     2229     7624    5                             END;
     2230     7625    4                           DEV$->FO$DEV.SUSRSN=FOSR_KSPA#;
     2231     7626    4                           GOTO DEV_SUSPEND;
     2232     7627    4                         CASE (FOS_SPRQ#);
     2233     7628    4                           DEV$->FO$DEV.SUSRSN=FOSR_KSPA#;
     2234     7629    4                         CASE (FOS_SUSP#);
     2235     7630    4                           DEV$->FO$DEV.SUSRSN=FOSR_KSPA#;
     2236     7631    4                           GOTO DEV_SUSPENDED1;
     2237     7632    4                         CASE (ELSE);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:67   
     2238     7633    4                           GOTO DEV_NOTBUSY;
     2239     7634    4                       END;
     2240     7635        /**
     2241     7636         **
     2242     7637         **  RESTRICT KEYIN
     2243     7638         **
     2244     7639         **/
     2245     7640    3                   CASE (KEY_RESTRICT#);
     2246     7641                                              /* RESTRICT by ACCT */
     2247     7642    3                     DEV$->FO$DEV.RWSNL=0;
     2248     7643    3                     DEV$->FO$DEV.RACCT=KEYIN$->FO$DKEYIN.RACCT;
     2249     7644    3                     IF DEV$->FO$DEV.RACCT = ' ' THEN DEV$->FO$DEV.RACCTL=0;
     2250     7645    3                     ELSE IF SUBSTR(DEV$->FO$DEV.RACCT,0,1) = '?' THEN
     2251     7646    4                        DO;
     2252     7647    4                        CALL INDEX (I,' ',DEV$->FO$DEV.RACCT);
     2253     7648    4                        DEV$->FO$DEV.RACCTL=-(I-1);
     2254     7649    4                        END;
     2255     7650    3                      ELSE
     2256     7651    4                        DO;
     2257     7652    4                        CALL INDEX (I,'?',DEV$->FO$DEV.RACCT);
     2258     7653    4                        DEV$->FO$DEV.RACCTL=I;
     2259     7654    4                        END;
     2260     7655    3                     OPMSG_RESP.ACCT=DEV$->FO$DEV.RACCT;
     2261     7656    3                     OPMSG_RESP.SUBC=FOKR_RESTRICTA#;
     2262     7657    3                     CALL M$WRITE (OCMSG_RESP);
     2263     7658    3                     GOTO DEV_EVALT;
     2264     7659
     2265     7660    3                   CASE (KEY_RESTRICTW#);
     2266     7661                                              /* RESTRICT by WSN */
     2267     7662    3                     WSN$ = DEV$ -> FO$DEV.WSN$;
     2268     7663    4                       DO WHILE (WSN$ ~= ADDR(NIL));
     2269     7664    5                         DO I = 0 TO (WSN$ -> FO$WSN.NWSNS - 1);
     2270     7665    5                         IF (KEYIN$ -> FO$DKEYIN.RWSN
     2271     7666    5                         = WSN$ -> FO$WSN.WSN.WSN_NAME(I))
     2272     7667    5                         AND WSN$ -> FO$WSN.WSN.NOT_USED(I) = '0'B
     2273     7668    5                         AND WSN$ -> FO$WSN.WSN.ROUTED_OUT(I) = '0'B
     2274     7669    5                         THEN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:68   
     2275     7670    5                          GOTO RESTRICT_WSN;
     2276     7671    5                         END;
     2277     7672    4                       WSN$ = WSN$ -> FO$WSN.LNK$;
     2278     7673    4                       END;
     2279     7674        /*N* WSN NOT ASSOCIATED WITH LPNN */
     2280     7675    3                     OPMSG_RESP.WSN = KEYIN$ -> FO$DKEYIN.RWSN;
     2281     7676    3                     OPMSG_RESP.SUBC = FOKR_NORESTRICTW#;
     2282     7677    3                     CALL M$WRITE (OCMSG_RESP);
     2283     7678    3                     RETURN;
     2284     7679    3   RESTRICT_WSN:     ;
     2285     7680    3                     DEV$->FO$DEV.RACCTL=0;
     2286     7681    3                     DEV$->FO$DEV.RWSN=KEYIN$->FO$DKEYIN.RWSN;
     2287     7682    3                     IF DEV$->FO$DEV.RWSN = ' ' THEN DEV$->FO$DEV.RWSNL=0;
     2288     7683    3                     ELSE IF SUBSTR(DEV$->FO$DEV.RWSN,0,1) = '?' THEN
     2289     7684    4                        DO;
     2290     7685    4                        CALL INDEX (I,' ',DEV$->FO$DEV.RWSN);
     2291     7686    4                        DEV$->FO$DEV.RWSNL=-(I-1);
     2292     7687    4                        END;
     2293     7688    3                      ELSE
     2294     7689    4                        DO;
     2295     7690    4                        CALL INDEX (I,'?',DEV$->FO$DEV.RWSN);
     2296     7691    4                        DEV$->FO$DEV.RWSNL=I;
     2297     7692    4                        END;
     2298     7693    3                     OPMSG_RESP.WSN=DEV$->FO$DEV.RWSN;
     2299     7694    3                     OPMSG_RESP.SUBC=FOKR_RESTRICTW#;
     2300     7695    3                     CALL M$WRITE (OCMSG_RESP);
     2301     7696    3                     GOTO DEV_EVALT;
     2302     7697        /**
     2303     7698         **
     2304     7699         **  !!UNKNOWN KEYIN!!
     2305     7700         **
     2306     7701         **/
     2307     7702    3                   CASE (ELSE);                  /* !!UNKN  KEYIN */
     2308     7703    3   ILLKEY:           OPMSG_UNIMP.CADDR=KEYIN$->FO$DKEYIN.CADDR;
     2309     7704    3                     CALL M$WRITE (OCMSG_UNIMP);
     2310     7705    3                 END; /* CASE KIN# */
     2311     7706        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:69   
     2312     7707        /*
     2313     7708                             ###    ####    #       #####
     2314     7709                              #     #   #   #       #
     2315     7710                              #     #   #   #       #
     2316     7711                              #     #   #   #       ####
     2317     7712                              #     #   #   #       #
     2318     7713                              #     #   #   #       #
     2319     7714                             ###    ####    #####   #####
     2320     7715        */
     2321     7716        /**
     2322     7717         **
     2323     7718         **
     2324     7719         **      DEVICE WENT IDLE EVENT
     2325     7720         **
     2326     7721         **
     2327     7722         **/
     2328     7723    2             CASE (FODE_IDLE#);
     2329     7724    3                 DO CASE (STATE);
     2330     7725    3                   CASE (FOS_IDLE#);
     2331     7726    3   DEV_NXTF:         ;
     2332     7727    3                     CALL SCHED_DEV;
     2333     7728    3                   CASE (ELSE);
     2334     7729    3                     CALL DEV_EVSCREECH;
     2335     7730    3                 END;
     2336     7731        /**
     2337     7732         **
     2338     7733         **
     2339     7734         **      END OF MAIN EVENT CODE DO CASE
     2340     7735         **
     2341     7736         **
     2342     7737         **/
     2343     7738    2           END;
     2344     7739    1   DEV_EVRTN:;
     2345     7740    1         RETURN;
     2346     7741    1   DEV_EVALT:;
     2347     7742    1         ALTRETURN;
     2348     7743        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:70   
     2349     7744        /*F* NAME:         FOD$AVAIL
     2350     7745             PURPOSE:      To set LPAVAIL for a file
     2351     7746             DESCRIPTION:  Set FLG.LPAVAIL in the file frame according as there
     2352     7747                           is an appropriate device for the file.
     2353     7748        */
     2354     7749    1   FOD$AVAIL: ENTRY ALTRET;
     2355     7750        /**/
     2356     7751    1         FIL$->FO$FIL.FLG.LPAVAIL='0'B;
     2357     7752    1         DEV$=FO_Q.DEVHD$;
     2358     7753    2           DO WHILE (DEV$ ~= ADDR(NIL));
     2359     7754    2           CALL MATCHEM2 ALTRET(NAVAIL);
     2360     7755    2           FIL$->FO$FIL.FLG.LPAVAIL='1'B;
     2361     7756    2           RETURN;
     2362     7757    2   NAVAIL: ;
     2363     7758    2           DEV$=DEV$->FO$DEV.LNK$;
     2364     7759    2           END;
     2365     7760    1         ALTRETURN;
     2366     7761        /**/
     2367     7762        /*F* NAME:         FOD$FSCHK
     2368     7763             PURPOSE:      To print setup suggestions for all printers
     2369     7764             DESCRIPTION:  For each device print form setup suggestions
     2370     7765                           as appropriate.
     2371     7766        */
     2372     7767    1   FOD$FSCHK: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     2373     7768        /**/
     2374     7769    1         DEV$=FO_Q.DEVHD$;
     2375     7770    2           DO WHILE (DEV$ ~= ADDR(NIL));
     2376     7771    2           IF DEV$->FO$DEV.CFIL$ ~= ADDR(NIL)
     2377     7772    2           OR DEV$->FO$DEV.FLG.LOCK THEN GOTO NXTDEV;
     2378     7773    2           PRIO=FOPR_P15#;
     2379     7774    3             DO WHILE (PRIO > FOPR_P0#);
     2380     7775    3             FIL$=FO_Q.FILHD$(PRIO);
     2381     7776    4               DO WHILE (FIL$ ~= ADDR(NIL));
     2382     7777    4               IF FIL$->FO$FIL.CDEV$ ~= ADDR(NIL) THEN GOTO FSCHK0;
     2383     7778    4               CALL MATCHEM11 ALTRET(FSCHK0);
     2384     7779    4               CALL MATCHDEVR ALTRET(FSCHK0);
     2385     7780    4               IF DEV$->FO$DEV.FORM ~= FIL$->FO$FIL.FORM THEN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:71   
     2386     7781    5                 DO;
     2387     7782    5                 OPMSG_RESP.DEVNM=DEV$->FO$DEV.NAME;
     2388     7783    5                 OPMSG_RESP.FORM=FIL$->FO$FIL.FORM;
     2389     7784    5                 OPMSG_RESP.SUBC=FOKR_DCUF#;
     2390     7785    5                 OPMSG_RESP.CADDR=M_UR;
     2391     7786    5                 CALL M$WRITE (OCMSG_RESP);
     2392     7787    5                 GOTO NXTDEV;
     2393     7788    5                 END;
     2394     7789    4   FSCHK0:     ;
     2395     7790    4               FIL$=FIL$->FO$FIL.LNK$;
     2396     7791    4               END;
     2397     7792    3             PRIO=PRIO-1;
     2398     7793    3             END;
     2399     7794    2   NXTDEV: ;
     2400     7795    2           DEV$=DEV$->FO$DEV.LNK$;
     2401     7796    2           END;
     2402     7797    1         RETURN;
     2403     7798        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:72   
     2404     7799        /*
     2405     7800
     2406     7801                             ###    #   #   ####
     2407     7802                            #   #   #   #   #   #
     2408     7803                            #       #   #   #   #
     2409     7804                             ###    #   #   ####
     2410     7805                                #   #   #   #   #
     2411     7806                            #   #   #   #   #   #
     2412     7807                             ###     ###    ####
     2413     7808
     2414     7809
     2415     7810
     2416     7811
     2417     7812            ####     ###    #   #   #####    ###    #   #   #####    ###
     2418     7813            #   #   #   #   #   #     #       #     #   #   #       #   #
     2419     7814            #   #   #   #   #   #     #       #     ##  #   #       #
     2420     7815            ####    #   #   #   #     #       #     # # #   ####     ###
     2421     7816            # #     #   #   #   #     #       #     #  ##   #           #
     2422     7817            #  #    #   #   #   #     #       #     #   #   #       #   #
     2423     7818            #   #    ###     ###      #      ###    #   #   #####    ###
     2424     7819
     2425     7820        */
     2426     7821        /*  Order: SCHED_DEV         Start a device, altret if no symb page
     2427     7822                                     available or M$SYMBIO altrets
     2428     7823                   GETFIL_DEV        Find a file for a device
     2429     7824                   MATCHDEVR         Look for a device we can restrict
     2430     7825                   SET_EXT           Set up 1st file extent for a device
     2431     7826                   REL_ALR           Release device's alignment buffer
     2432     7827                   START_CHKPF       Start printing a checkpointed file
     2433     7828                   SPACE_BACK        Space back 1 line from "here"
     2434     7829                   START_FIRSTEXT    Give file's 1st extents to idle device
     2435     7830                   SBLKS_DEV         Start spacing by blocks
     2436     7831                   END_DEV - FIN_DEV Remove a file from a device
     2437     7832                   QUIT_DEV          To complete a quit sequence on a device
     2438     7833                   BAD_SYMBIO        Do a FOD snap
     2439     7834                   SET_BLKREC        To translate blk#-rec# to starting extent
     2440     7835                   SET_EXTBLNK       Set extent back-link pointer
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:73   
     2441     7836                   MATCHEM           Match a file to an available device
     2442     7837                   MATCHEMR          Match a file to a restricted device
     2443     7838                   LOCK_DEV          Lock a symbiont device
     2444     7839                   SUSP_DEV          Do a suspend request of a symbiond device
     2445     7840                   DEV_EVSCREECH     Cause a snap due to bad state/event
     2446     7841                   CHK_ALG           Check if a device is aligned
     2447     7842                   CHK_AIP           Check if a form alignment is in progress
     2448     7843                   CHK_KSYSID        Verify SYSID on certain device keyins
     2449     7844                   TCONMSG_DEV, BDBCMSG_DEV, FONMSG_DEV, FOFFMSG_DEV
     2450     7845                   REM_DEV           Remove a device entry from device chain
     2451     7846                   MATCHDEV          Match a device to those on device chain
     2452     7847                   AVAIL             Reset LPAVAIL flag on files when a device
     2453     7848                                     connects
     2454     7849                   UNAVAIL           Reset LPAVAIL flag on files when a device
     2455     7850                                     disconnects
     2456     7851        */
     2457     7852        /**************************************
     2458     7853         **************************************
     2459     7854                    SCHED_DEV
     2460     7855         **************************************
     2461     7856         **************************************/
     2462     7857        /*D* NAME:         SCHED_DEV
     2463     7858             PURPOSE:      To start a device, if possible
     2464     7859             DESCRIPTION:  The device is FO_DEV$.  GETFIL_DEV is used to
     2465     7860                           find a file for it, and if successful, we start
     2466     7861                           the device from BOF.  The routine ALTRETs if
     2467     7862                           the device is locked, or no file is found, or
     2468     7863                           if the start fails. */
     2469     7864    1   SCHED_DEV: PROC ALTRET;
     2470     7865        %JLOCK;
     2471     7868                                           /*
     2472     7869                                           If we're expecting a disconnect on
     2473     7870                                           this device, don't try to send a
     2474     7871                                           file to it.  If we do, we'll end
     2475     7872                                           up with a FOD-278.
     2476     7873                                           */
     2477     7874    2         IF DEV$->FO$DEV.FLG.IDSC
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:74   
     2478     7875    2         THEN
     2479     7876    3           DO;
     2480     7877                %JUNLOCK;
     2481     7880    3           RETURN;
     2482     7881    3           END;
     2483     7882    2         CALL GETFIL_DEV ALTRET(ALTRT);
     2484     7883    2         GOTO SCHDEV0;
     2485     7884    2   START_DEV: ENTRY ALTRET;
     2486     7885        /*D* NAME:         START_DEV
     2487     7886             PURPOSE:      To start a device, given a file
     2488     7887             DESCRIPTION:  The device to start is FO_DEV$, the file to use
     2489     7888                           is FO_FIL$ */
     2490     7889
     2491     7890              %JLOCK;
     2492     7893    2   SCHDEV0:;
     2493     7894                                      /* Get symbiont page segment control block */
     2494     7895    2         CALL FOI$GBUF (FO_SPGSCB,DEV$->FO$DEV.SPG$) ALTRET(ALTRT);
     2495     7896    2         DEVNAME=DEV$->FO$DEV.NAME;
     2496     7897    2         START_SYMB.V.ORDER# = FOMO_SOPEN#;
     2497     7898
     2498     7899    2         IF DEV$ -> FO$DEV.FLG.MODE = FOMD_GRAPHIC#
     2499     7900    3         THEN DO;
     2500     7901
     2501     7902
     2502     7903    3           CALL M$DEACTIVATE (DEA_FPRG)
     2503     7904    4           WHENALTRETURN DO;
     2504     7905    4             END;
     2505     7906    3           CALL M$ACTIVATE (ACT_FPRG) ALTRET (SCHDEV2);
     2506     7907    3           RESET_PRIVS.V.PRIV# = B$JIT$ -> B$JIT.PRIV.JOB;
     2507     7908    3           CALL M$RPRIV (RESET_PRIVS)
     2508     7909    4           WHENALTRETURN DO;
     2509     7910    4             END;
     2510     7911    3           SYMB_FPRG = FIL$ -> FO$FIL.VLP_FPRG;
     2511     7912    3           SYMB_STA.STATION# = DEVNAME;
     2512     7913    3           CALL M$SETFP (START_FPRG) ALTRET (SCHDEV1);
     2513     7914    3           CALL M$SPRIV (RESET_PRIVS)
     2514     7915    4           WHENALTRETURN DO;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:75   
     2515     7916    4             END;
     2516     7917    3           START_SYMB.V.ORDER# = FOMO_LOAD#;
     2517     7918    3           END;
     2518     7919    2         IF DEV$->FO$DEV.FLG.ALGNED = '0'B
     2519     7920    2         OR FIL$->FO$FIL.FLG.CHKPTD = '1'B THEN EXTENT='0'B;
     2520     7921                                      /* Set up first file extent for device
     2521     7922                                         and set pointer to next one */
     2522     7923    2         ELSE CALL SET_EXT;
     2523     7924    2         START_SYMB.V.BLKREC='0'B;
     2524     7925    2         DEV$->FO$DEV.BR='0'B;
     2525     7926    2         START_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;
     2526     7927                                      /* Get packset index */
     2527     7928    2         START_SYMB.V.SETX#=FIL$->FO$FIL.SETX;
     2528     7929    2         CALL M$SYMBIO  (START_SYMB) ALTRET(SCHDEV3);
     2529     7930    2         DEV$->FO$DEV.STATE=FOS_BUSY#;
     2530     7931                                      /* Set current device and current file */
     2531     7932    2         FIL$->FO$FIL.CDEV$=DEV$;
     2532     7933    2         DEV$->FO$DEV.CFIL$=FIL$;
     2533     7934                                      /* AEF means align at EOF */
     2534     7935    2         DEV$->FO$DEV.FLG=DEV$->FO$DEV.FLG&(FODF_ALGNED#|FODF_AEF#
     2535     7936    2         |FODF_LOCAL#|FODF_GRAPHIC#);
     2536     7937                                      /* Set spacing direction (1 = forward) */
     2537     7938    2         DEV$->FO$DEV.FLG.DIRECTION='1'B;
     2538     7939    2         CALL FONMSG_DEV;
     2539     7940    2         JOB$ = FIL$->FO$FIL.OJOB$;
     2540     7941    2         JOB$->FO$JOB.NFIL_PRINTING=JOB$->FO$JOB.NFIL_PRINTING+1;
     2541     7942              %JUNLOCK;
     2542     7945                                      /* If align is to be done on every file,
     2543     7946                                         do a keyin (simulation) to handle it */
     2544     7947    2         IF DEV$->FO$DEV.FLG.ALGNED = '0'B THEN
     2545     7948    3           DO;
     2546     7949    3           ALKEYIN.DEVNM=DEV$->FO$DEV.NAME;
     2547     7950    3           CALL FOD$EVENT (FODE_KEYN#,ADDR(ALKEYIN));
     2548     7951    3           END;
     2549     7952    2         ELSE IF FIL$->FO$FIL.FLG.CHKPTD = '1'B THEN CALL START_CHKPF;
     2550     7953    2         RETURN;
     2551     7954    2   SCHDEV1:;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:76   
     2552     7955    2         CALL M$SPRIV (RESET_PRIVS)
     2553     7956    3         WHENALTRETURN DO;
     2554     7957    3           END;
     2555     7958    2         CALL M$DEACTIVATE (DEA_FPRG)
     2556     7959    3         WHENALTRETURN DO;
     2557     7960    3           END;
     2558     7961    2         OPMSG_FPERR.DEVNM = DEVNAME;
     2559     7962    2         OPMSG_FPERR.CADDR = M_UR;
     2560     7963    2         OPMSG_FPERR.SUBC = 1;
     2561     7964    2         OPMSG_FPERR.ERRCODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
     2562     7965    2         OPMSG_FPERR.LDBYPRO = SYMB_FPRG.LDBYPRO#;
     2563     7966    2         OPMSG_FPERR.NAME = SYMB_FPRG.NAME.C#;
     2564     7967    2         OPMSG_FPERR.NL = SYMB_FPRG.NAME.L#;
     2565     7968    2         OPMSG_FPERR.ACCT = SYMB_FPRG.ACCT#;
     2566     7969    2         CALL M$WRITE (OCMSG_FPERR);
     2567     7970    2         GOTO SCHDEV4;
     2568     7971    2   SCHDEV2:;
     2569     7972    2         CALL M$DEACTIVATE (DEA_FPRG)
     2570     7973    3         WHENALTRETURN DO;
     2571     7974    3           END;
     2572     7975    2         CALL LOCK_DEV;
     2573     7976    2   SCHDEV3:;
     2574     7977    2         OPMSG_KERR.ERRCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     2575     7978    2         IF B$ERRCODE=%E$NSBLK
     2576     7979    2         OR B$ERRCODE=%E$NOSTA
     2577     7980    2         OR B$ERRCODE=%E$NVMEM
     2578     7981    2         OR B$ERRCODE=%E$FPABRT
     2579     7982    2         OR B$ERRCODE=%E$MODE_MEMLIMIT
     2580     7983    2         THEN GOTO SCHDEV4;
     2581     7984    2         CALL BAD_SYMBIO;
     2582     7985    2   SCHDEV4:;
     2583     7986    2         IF B$ERRCODE = %E$FPABRT
     2584     7987    3         THEN DO;
     2585     7988    3           CALL FOF$FITUPD (FOFU_PRIO0#,,0);
     2586     7989    3           CALL FOF$REPRIO;
     2587     7990    3           END;
     2588     7991    2         CALL FOI$RBUF (FO_SPGSCB,DEV$->FO$DEV.SPG$);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:77   
     2589     7992    2         DEV$->FO$DEV.SPG$=ADDR(NIL);
     2590     7993    2   ALTRT:;
     2591     7994              %JUNLOCK;
     2592     7997    2         ALTRETURN;
     2593     7998    2   END SCHED_DEV;
     2594     7999        /**************************************
     2595     8000         **************************************
     2596     8001                    GETFIL_DEV
     2597     8002         **************************************
     2598     8003         **************************************/
     2599     8004        /*D* NAME:         GETFIL_DEV
     2600     8005             PURPOSE:      To find a file for a device
     2601     8006             DESCRIPTION:  The desired device is FO_DEV$.  The routine
     2602     8007                           searches the file chains (from prio 15 to 1)
     2603     8008                           to find a file we can print.  Commode files
     2604     8009                           which are still being built are skipped unless
     2605     8010                           they are the only choice.  ALTRET if no file
     2606     8011                           found, else FO_FIL$ points to file. */
     2607     8012    1   GETFIL_DEV: PROC ALTRET;
     2608     8013
     2609     8014    2         IF DEV$->FO$DEV.FORM = ' '
     2610     8015    2         OR DEV$->FO$DEV.FLG.LOCK THEN ALTRETURN;
     2611     8016    2         SAVFIL$ = ADDR(NIL);
     2612     8017    2         PRIO=FOPR_P15#;
     2613     8018        /* RUN THE FILE PRIO CHAINS */
     2614     8019    3           DO WHILE (PRIO > FOPR_P0#);
     2615     8020    3           FIL$=FO_Q.FILHD$(PRIO);
     2616     8021    4             DO WHILE (FIL$~=ADDR(NIL));
     2617     8022    4             IF FIL$->FO$FIL.CDEV$ = ADDR(NIL) THEN
     2618     8023    5               DO;
     2619     8024    5               CALL MATCHEM1 ALTRET(SCHDEV1); /* GOOD FILE FOR THIS DEV? */
     2620     8025    5               CALL MATCHDEVR ALTRET(SCHDEV1);
     2621     8026    5               IF FIL$->FO$FIL.FLG.GLC OR PRIO = FOPR_P15# THEN RETURN;
     2622     8027    5               IF SAVFIL$ = ADDR(NIL) THEN SAVFIL$=FIL$;
     2623     8028    5               END;
     2624     8029    4   SCHDEV1:  ;
     2625     8030    4             FIL$=FIL$->FO$FIL.LNK$;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:78   
     2626     8031    4             END;
     2627     8032    3           PRIO=PRIO-1;
     2628     8033    3           END;
     2629     8034    2         IF SAVFIL$ = ADDR(NIL) THEN ALTRETURN;
     2630     8035    2         FIL$ = SAVFIL$;
     2631     8036    2         RETURN;
     2632     8037    2   END GETFIL_DEV;
     2633     8038        /**/
     2634     8039        /*D* NAME:         MATCHDEVR
     2635     8040             PURPOSE:      To find a restricted device which preempts
     2636     8041                           this one
     2637     8042             DESCRIPTION:  Devices are only preempted if they are unrestricted.
     2638     8043                           Thus we RETURN if DEV$ is a restricted device.  Else
     2639     8044                           the chain of devices is searched for one which
     2640     8045                           has the following relationship to the device
     2641     8046                           pointed to by DEV$:
     2642     8047
     2643     8048                           o its TNAME is the same
     2644     8049                           o its TYP   is the same
     2645     8050                           o its ATTRs allow it to print the file FIL$
     2646     8051                           o it is a restricted device
     2647     8052                           o the file pointed to by FIL$ has an account
     2648     8053                             falling under the device's restrict list.
     2649     8054
     2650     8055
     2651     8056                           If such a device is found, we ALTRET, else return.
     2652     8057                           Thus we are looking for a device whose restrict
     2653     8058                           account should prevent us from printing FIL$ on
     2654     8059                           DEV$.
     2655     8060        */
     2656     8061    1   MATCHDEVR: PROC ALTRET;
     2657     8062        /**/
     2658     8063    2   DCL P$ PTR;
     2659     8064        /**/
     2660     8065    2         IF DEV$->FO$DEV.RACCTL ~= 0
     2661     8066    2         THEN
     2662     8067    2          RETURN;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:79   
     2663     8068    2         P$=FO_Q.DEVHD$;
     2664     8069    3           DO WHILE (P$ ~= ADDR(NIL));
     2665     8070    3           IF P$ ~= DEV$ THEN
     2666     8071    3            IF  (P$->FO$DEV.NATTR & FIL$->FO$FIL.ATTR) = '0'B
     2667     8072    3            AND P$->FO$DEV.NAMER.TYP = DEV$->FO$DEV.NAMER.TYP
     2668     8073    3            AND (P$->FO$DEV.RACCTL ~= 0 OR P$->FO$DEV.RWSNL ~= 0)
     2669     8074    3            THEN
     2670     8075    4              DO;
     2671     8076    4              CALL MATCHEMR (P$->FO$DEV,FIL$->FO$FIL) ALTRET(NXT);
     2672     8077    4              IF P$ -> FO$DEV.RACCTL ~= 0
     2673     8078    4              THEN
     2674     8079    4               ALTRETURN;        /* This file must print on RACCT dev */
     2675     8080    4              IF DEV$ -> FO$DEV.RWSNL = 0
     2676     8081    4              AND P$ -> FO$DEV.RWSNL ~= 0
     2677     8082    4              THEN
     2678     8083    4               ALTRETURN;         /* This file must print on RWSN dev */
     2679     8084    4              END;
     2680     8085    3   NXT:    P$=P$->FO$DEV.LNK$;
     2681     8086    3           END;
     2682     8087    2         RETURN;
     2683     8088    2   END MATCHDEVR;
     2684     8089        /**************************************
     2685     8090         **************************************
     2686     8091                    SET_EXT
     2687     8092         **************************************
     2688     8093         **************************************/
     2689     8094        /*D* NAME:         SET_EXT
     2690     8095             PURPOSE:      To set up the first extent for starting a dev
     2691     8096             DESCRIPTION:  FO_FIL$ points to the file, whose first extent
     2692     8097                           is shoved into EXTENT, and whose NXTEXT$ is set
     2693     8098                           to point to the second extent. */
     2694     8099    1   SET_EXT: PROC;
     2695     8100    2         EXT$=FIL$->FO$FIL.EXT$;
     2696     8101    2         EXTENT.GRANS#=EXT$->FO$EXT.GRANS;
     2697     8102    2         EXTENT.DAD#=EXT$->FO$EXT.DAD;
     2698     8103    2         EXTENT.STAMP=EXT$->FO$EXT.STAMP;
     2699     8104    2         FIL$->FO$FIL.NXTEXT$=EXT$->FO$EXT.LNK$;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:80   
     2700     8105    2         RETURN;
     2701     8106    2   END SET_EXT;
     2702     8107        /**************************************
     2703     8108         **************************************
     2704     8109                    REL_ALR
     2705     8110         **************************************
     2706     8111         **************************************/
     2707     8112        /*D* NAME:         REL_ALR
     2708     8113             PURPOSE:      To release a device's alignment buffer. */
     2709     8114    1   REL_ALR: PROC;
     2710     8115    2         IF DEV$->FO$DEV.ALR$ ~= ADDR(NIL) THEN
     2711     8116    2          CALL FOI$RBUF (FO_FFRSCB,DEV$->FO$DEV.ALR$);
     2712     8117    2         DEV$->FO$DEV.ALR$=ADDR(NIL);
     2713     8118    2         RETURN;
     2714     8119    2   END REL_ALR;
     2715     8120        /**************************************
     2716     8121         **************************************
     2717     8122                    START_CHKPF
     2718     8123         **************************************
     2719     8124         **************************************/
     2720     8125        /*D* NAME:         START_CHKPF
     2721     8126             PURPOSE:      To start printing a checkpointed file
     2722     8127             DESCRIPTION:  Called after the device has been started, if
     2723     8128                           the device was aligned, or after alignment has
     2724     8129                           been completed.  If the device needs no checkpoint
     2725     8130                           banner, then set the saved BR, and space -1.
     2726     8131                           Otherwise, write the checkpoint banner
     2727     8132                           and wait for a token. */
     2728     8133    1   START_CHKPF: PROC ALTRET;
     2729     8134    2         IF DEV$->FO$DEV.FLG.CBD = '0'B THEN
     2730     8135    3           DO;
     2731     8136                           /* ONLY IF CHK BANNER NOT ALREADY WRITTEN:
     2732     8137                              WE CAN END UP HERE WITH FLAG SET AFTER
     2733     8138                              AN ALIGN COMPLETES. */
     2734     8139    3           IF DEV$->FO$DEV.NAMER.TYP = 'LP'
     2735     8140    3           OR DEV$->FO$DEV.NAMER.TYP = 'CP' THEN
     2736     8141    4             DO;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:81   
     2737     8142    4             WCB_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;
     2738     8143    4             WCB_SYMB.V.ACK#='1'B;
     2739     8144    4             I=FIL$->FO$FIL.SYSID;
     2740     8145    4             CALL BINCHAR(CHKPREC.SYSID,I);
     2741     8146    4             WCB_REC.RECL#=LENGTHC(CHKPREC);
     2742     8147    4             WCB_REC.REC#=CHKPRECR;
     2743     8148    4             IF DEV$->FO$DEV.FLEN ~= 0 THEN
     2744     8149    4              WCB_REC.REPEATS#=DEV$->FO$DEV.FLEN;
     2745     8150    4             ELSE WCB_REC.REPEATS#=4;
     2746     8151    4             CALL M$SYMBIO (WCB_SYMB) ALTRET(A1);
     2747     8152    4             DEV$->FO$DEV.TOKERSN=FOTR_CHKPB#;
     2748     8153    4             DEV$->FO$DEV.STATE=FOS_BUSY#;
     2749     8154    4             DEV$->FO$DEV.FLG.ACKEXP='1'B;
     2750     8155    4             RETURN;
     2751     8156    4             END;
     2752     8157    3           DEV$->FO$DEV.FLG.CBD='1'B;
     2753     8158    3           DEV$->FO$DEV.BR=FIL$->FO$FIL.CHKPBR;
     2754     8159    3           DEV$->FO$DEV.FLG.SEND_VFU='1'B;
     2755     8160    3           CALL SPACE_BACK;
     2756     8161    3           END;
     2757     8162    2         RETURN;
     2758     8163    2   A1:   ;
     2759     8164    2         IF B$ERRCODE ~= %E$NOSTA THEN CALL BAD_SYMBIO;
     2760     8165    2         ALTRETURN;
     2761     8166    2   END START_CHKPF;
     2762     8167        /*D* NAME:         SPACE_BACK                                                    #8.
              8167        362
     2763     8168             PURPOSE:      To simulate a SPACE -1 FROM HERE keyin */
     2764     8169    1   SPACE_BACK: PROC;
     2765     8170    2         SPKEYIN.DEVNM=DEV$->FO$DEV.NAME;
     2766     8171    2         SPKEYIN.NPAGES=-1;
     2767     8172    2         SPKEYIN.SPACEFROM=SPACEFROM_HERE#;
     2768     8173    2         CALL FOD$EVENT (FODE_KEYN#,ADDR(SPKEYIN));
     2769     8174    2         RETURN;
     2770     8175    2   END SPACE_BACK;
     2771     8176        /*D* NAME:         START_FIRSTEXT
     2772     8177             PURPOSE:      To provide the first extents of a file to
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:82   
     2773     8178                           an idle symbiont device. */
     2774     8179    1   START_FIRSTEXT: PROC ALTRET;
     2775     8180    2         CALL SET_EXT;
     2776     8181    2         CALL M$SYMBIO (NXTEXT_SYMB) ALTRET(A1);
     2777     8182    2         DEV$->FO$DEV.STATE=FOS_BUSY#;
     2778     8183    2         CALL FOD$EVENT (FODE_SFEXT#,0);
     2779     8184    2         RETURN;
     2780     8185    2   A1:   ;
     2781     8186    2         IF B$ERRCODE ~= %E$NOSTA THEN CALL BAD_SYMBIO;
     2782     8187    2         ALTRETURN;
     2783     8188    2   END START_FIRSTEXT;
     2784     8189        /**************************************
     2785     8190         **************************************
     2786     8191                    SBLKS_DEV
     2787     8192         **************************************
     2788     8193         **************************************/
     2789     8194        /*D* NAME:         SBLKS_DEV
     2790     8195             PURPOSE:      To start spacing a device by blocks
     2791     8196             DESCRIPTION:  FO_DEV$ is the device, and its FO$DEV.BR is the
     2792     8197                           place to space to, starting from the beginning
     2793     8198                           of the file.  This routine starts MOOS spacing
     2794     8199                           in block mode, and ALTRETs if it cannot. */
     2795     8200    1   SBLKS_DEV: PROC ALTRET;
     2796     8201    2         CALL SET_EXT;
     2797     8202    2         SPACEBLKS_SYMB.V.BLKREC='0'B;
     2798     8203    2         SPACEBLKS_SYMB.V.SPACEPAGES#=DEV$->FO$DEV.BR.BLK#+1;
     2799     8204    2         SPACEBLKS_SYMB.V.SPACEREC#=DEV$->FO$DEV.BR.REC#;
     2800     8205    2         SPACEBLKS_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;
     2801     8206    2         CALL M$SYMBIO (SPACEBLKS_SYMB) ALTRET(ALTRT);
     2802     8207    2         DEV$->FO$DEV.FLG.SIP='1'B;
     2803     8208    2         DEV$->FO$DEV.STATE=FOS_BUSY#;
     2804     8209    2         RETURN;
     2805     8210    2   ALTRT:;
     2806     8211    2         ALTRETURN;
     2807     8212    2   END SBLKS_DEV;
     2808     8213        /**************************************
     2809     8214         **************************************
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:83   
     2810     8215                    END_DEV
     2811     8216                    FIN_DEV
     2812     8217         **************************************
     2813     8218         **************************************/
     2814     8219        /*D* NAME:         END_DEV, FIN_DEV
     2815     8220             PURPOSE:      To remove a file from a device
     2816     8221             DESCRIPTION:  This routine is called when a file is to be
     2817     8222                           removed from a device.
     2818     8223
     2819     8224                           END_DEV attempts to execute a symbiont close,
     2820     8225                           and ALTRETs if it fails.  This entry is used
     2821     8226                           when the symbiont is open.  FIN_DEV does not do
     2822     8227                           a close, and is only used when the device has
     2823     8228                           disconnected and thus a close is not required.
     2824     8229
     2825     8230                           The device state is set IDLE, the cross-link
     2826     8231                           pointers between the file and device are set
     2827     8232                           ADDR(NIL), the symbiont buffer page for the device
     2828     8233                           is released, the 'LP01 SYSID N OFF' message is
     2829     8234                           printed (because this routine is the only place
     2830     8235                           where a device and file become disassociated),
     2831     8236                           and the job status (if any) is updated to reflect
     2832     8237                           the fact that one less file is now printing. */
     2833     8238    1   END_DEV: PROC ALTRET;
     2834     8239    2         CALL M$SYMBIO (CLOSE_SYMB) ALTRET(ALTRT);
     2835     8240    2   FIN_DEV: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     2836     8241    2         CALL FOFFMSG_DEV;
     2837     8242    2         DEV$->FO$DEV.STATE=FOS_IDLE#;
     2838     8243    2         DEV$->FO$DEV.CFIL$=ADDR(NIL);
     2839     8244    2         IF DEV$->FO$DEV.FLG.AEF THEN DEV$->FO$DEV.FLG.ALGNED='0'B;
     2840     8245    2         IF DEV$->FO$DEV.FLG.TERR THEN DEV$->FO$DEV.FLG.TERR='0'B;
     2841     8246    2         FIL$->FO$FIL.CDEV$=ADDR(NIL);
     2842     8247    2         CALL FOI$RBUF (FO_SPGSCB,DEV$->FO$DEV.SPG$);
     2843     8248    2         DEV$->FO$DEV.SPG$=ADDR(NIL);
     2844     8249
     2845     8250    2         JOB$=FIL$->FO$FIL.OJOB$;
     2846     8251    2         JOB$->FO$JOB.NFIL_PRINTING=JOB$->FO$JOB.NFIL_PRINTING-1;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:84   
     2847     8252    2         RETURN;
     2848     8253    2   ALTRT:;
     2849     8254    2         ALTRETURN;
     2850     8255    2   END END_DEV;
     2851     8256        /**************************************
     2852     8257         **************************************
     2853     8258                    QUIT_DEV
     2854     8259         **************************************
     2855     8260         **************************************/
     2856     8261        /*D* NAME:         QUIT_DEV
     2857     8262             PURPOSE:      To complete a quit sequence on a device
     2858     8263             DESCRIPTION:  This routine is called after END_DEV/FIN_DEV,
     2859     8264                           to do to the file that which is required by
     2860     8265                           the reason we initiated the quit.  This can
     2861     8266                           be delete the file, remove the file from our
     2862     8267                           tables without deleting it, set the file into
     2863     8268                           the hold queue, or nothing (as is the case if
     2864     8269                           one copy of a multi-copy file completes print
     2865     8270                           on a locked device, in which case the file goes
     2866     8271                           back to looking for a device to print on.). */
     2867     8272    1   QUIT_DEV: PROC;
     2868     8273
     2869     8274
     2870     8275    3           DO CASE (DEV$->FO$DEV.QUITRSN);
     2871     8276
     2872     8277    3             CASE (FOQR_KABT#,FOQR_CHAB#,FOQR_DEL#,FOQR_CDEL#,
     2873     8278    3         FOQR_FINC#,FOQR_CNCL#,FOQR_RRUN#);
     2874     8279    3               CALL FOF$DELETE;
     2875     8280
     2876     8281    3             CASE (FOQR_BDDA#,FOQR_CHRM#);
     2877     8282    3               CALL FOF$REMOVE;
     2878     8283
     2879     8284    3             CASE (FOQR_FPABRT#);
     2880     8285    3               CALL FOF$FITUPD (FOFU_PRIO0#,,0);
     2881     8286    3               CALL FOF$REPRIO;
     2882     8287
     2883     8288
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:85   
     2884     8289    3             CASE (FOQR_COPY#);
     2885     8290    3               IF FIL$->FO$FIL.COPIES = 0 THEN CALL FOF$DELETE;
     2886     8291    3               ELSE IF (FIL$->FO$FIL.FLG.SAP AND FIL$->FO$FIL.SAPCOPIES = 0
     2887     8292    3                AND NOT FIL$->FO$FIL.FLG.UNHELD) THEN
     2888     8293    4                  DO;
     2889     8294    4                  CALL FOF$UNCHAIN;
     2890     8295    4                  FIL$->FO$FIL.PRIO=FOPR_HOLD#;
     2891     8296    4                  CALL FOF$CHAIN;
     2892     8297    4                  END;
     2893     8298
     2894     8299    3             CASE (FOQR_KSAV#);
     2895     8300    3               IF DEV$->FO$DEV.FLG.CHKP THEN
     2896     8301    4                 DO;
     2897     8302    4                 FIL$->FO$FIL.CHKPBR=DEV$->FO$DEV.BR;
     2898     8303    4                 FIL$->FO$FIL.FLG.CHKPTD='1'B;
     2899     8304    4                 CALL FOF$FITUPD (FOFU_CHKP#,,0);
     2900     8305    4                 DEV$->FO$DEV.FLG.CHKP = '0'B;
     2901     8306    4                 END;
     2902     8307
     2903     8308
     2904     8309    3           END;
     2905     8310
     2906     8311
     2907     8312    2         RETURN;
     2908     8313    2   END QUIT_DEV;
     2909     8314        /**************************************
     2910     8315         **************************************
     2911     8316                    BAD_SYMBIO
     2912     8317         **************************************
     2913     8318         **************************************/
     2914     8319    1   BAD_SYMBIO: PROC;
     2915     8320    2         CALL FOI$SNAP (%S$BADSYMBIO,F_FO,M_D);
     2916     8321        /*S* SCREECH_CODE: FOD-S$BADSYMBIO
     2917     8322             TYPE:         SNAP
     2918     8323             MESSAGE:      OUTSYM received impossible altret on M$SYMBIO
     2919     8324             REMARKS:      The error code received from an M$SYMBIO PMME
     2920     8325                           should not have occurred.  The bad status was
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:86   
     2921     8326                           given to the caller of BAD_SYMBIO.   */
     2922     8327    2         RETURN;
     2923     8328    2   END BAD_SYMBIO;
     2924     8329        /**************************************
     2925     8330         **************************************
     2926     8331                    SET_BLKREC
     2927     8332         **************************************
     2928     8333         **************************************/
     2929     8334        /*D* NAME:         SET_BLKREC
     2930     8335             PURPOSE:      To translate blk#-rec# to starting extent
     2931     8336             DESCRIPTION:  When a CONTINUE operation is undertaken on a
     2932     8337                           device, we are to begin at a specific blk#-rec#.
     2933     8338                           Blk# is the granule number (counting from zero)
     2934     8339                           within the logical file.  Note that this is not
     2935     8340                           nescessarily file-relative granule number, for
     2936     8341                           in a commode file, the logical file consists of
     2937     8342                           several file-management files, and the extent list
     2938     8343                           for the logical file consists of the concatenated
     2939     8344                           extent lists of these files, and if separate ban-
     2940     8345                           ner files are being used, a bannered logical
     2941     8346                           file's first extent is the extent of the banner file,
     2942     8347                           not the first extent of the file management file.
     2943     8348
     2944     8349                           Rec# is record number (counting from 1) within a
     2945     8350                           granule.
     2946     8351
     2947     8352                           This routine sets up 2 things: an  extent descrip-
     2948     8353                           tor describing the place to start in the extent
     2949     8354                           list (i.e. it finds the extent in which the granule
     2950     8355                           described by BLK# lives, and shrinks that extent
     2951     8356                           appropriately), and a pointer (NXTEXT$) to the next
     2952     8357                           extent to be passed.  Note that the sense of each
     2953     8358                           of these depends upon the direction (forward or
     2954     8359                           backward) in which we are to proceed within the
     2955     8360                           file, however the backward direction is only taken
     2956     8361                           during space backward operations, and the SPACE in-
     2957     8362                           itiator, after calling this routine, makes the ap-
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:87   
     2958     8363                           propriate changes.
     2959     8364
     2960     8365                           The only anomaly occurs if the given blk# is beyond
     2961     8366                           the end of the file.  In this case, the routine will
     2962     8367                           ALTRET, but after setting up the device blk#-rec#,
     2963     8368                           and the extent, and NXTEXT$, such that they can
     2964     8369                           be handed to MOOS directly if we want to space
     2965     8370                           backward from the very end of the file. */
     2966     8371    1   SET_BLKREC: PROC ALTRET;
     2967     8372    2         BLOCK=DEV$->FO$DEV.BR.BLK#;
     2968     8373    2         EXT$=FIL$->FO$FIL.EXT$;
     2969     8374    3           DO WHILE (EXT$  ~= ADDR(NIL));
     2970     8375    3           GRANS=EXT$->FO$EXT.GRANS;
     2971     8376    3           IF BLOCK<GRANS THEN
     2972     8377    4             DO;
     2973     8378    4             EXTENT.GRANS#=GRANS-BLOCK;
     2974     8379    4             EXTENT.DAD#=EXT$->FO$EXT.DAD+BLOCK;
     2975     8380    4             EXTENT.STAMP=EXT$->FO$EXT.STAMP;
     2976     8381    4             EXTENT.STAMP.FRDAD#=EXTENT.STAMP.FRDAD#+BLOCK;
     2977     8382    4             FIL$->FO$FIL.NXTEXT$=EXT$->FO$EXT.LNK$;
     2978     8383    4             RETURN;
     2979     8384    4             END;
     2980     8385    3           ELSE
     2981     8386    4             DO;
     2982     8387    4             BLOCK=BLOCK-GRANS;
     2983     8388    4             EXT$=EXT$->FO$EXT.LNK$;
     2984     8389    4             END;
     2985     8390    3           END;
     2986     8391    2         DEV$->FO$DEV.BR.BLK#=DEV$->FO$DEV.BR.BLK#-BLOCK-1;
     2987     8392    2         DEV$->FO$DEV.BR.REC#=9999;
     2988     8393    2         EXTENT.GRANS#=1;
     2989     8394    2         CALL FOF$LASTEXT (EXT$);
     2990     8395    2         EXTENT.DAD#=EXT$->FO$EXT.DAD+EXT$->FO$EXT.GRANS-1;
     2991     8396    2         EXTENT.STAMP=EXT$->FO$EXT.STAMP;
     2992     8397    2         EXTENT.STAMP.FRDAD#=EXTENT.STAMP.FRDAD#+EXT$->FO$EXT.GRANS-1;
     2993     8398    2         CALL SET_EXTBLNK;
     2994     8399    2         FIL$->FO$FIL.NXTEXT$=EXTBLNK$;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:88   
     2995     8400    2         ALTRETURN;
     2996     8401    2   END SET_BLKREC;
     2997     8402        /**************************************
     2998     8403         **************************************
     2999     8404                    SET_EXTBLNK
     3000     8405         **************************************
     3001     8406         **************************************/
     3002     8407        /*D* NAME:         SET_EXTBLNK
     3003     8408             PURPOSE:      To set EXTBLNK$ to point to the extent before
     3004     8409                           that which EXT$ points to. */
     3005     8410    1   SET_EXTBLNK: PROC;
     3006     8411
     3007     8412    2         EXTBLNK$=FIL$->FO$FIL.EXT$;
     3008     8413    2         IF EXTBLNK$=EXT$ THEN
     3009     8414    2          EXTBLNK$=ADDR(NIL);
     3010     8415    2         ELSE
     3011     8416    3           DO WHILE (EXTBLNK$->FO$EXT.LNK$ ~= EXT$);
     3012     8417    3           EXTBLNK$=EXTBLNK$->FO$EXT.LNK$;
     3013     8418    3           END;
     3014     8419    2         RETURN;
     3015     8420    2   END SET_EXTBLNK;
     3016     8421        /**************************************
     3017     8422         **************************************
     3018     8423                    MATCHEM
     3019     8424         **************************************
     3020     8425         **************************************/
     3021     8426    1   MATCHEM: PROC ALTRET;
     3022     8427    2         IF FIL$->FO$FIL.PRIO = FOPR_P0#
     3023     8428    2         OR FIL$->FO$FIL.PRIO = FOPR_SPILLED#
     3024     8429    2         OR FIL$->FO$FIL.PRIO = FOPR_MFW#
     3025     8430    2         OR DEV$->FO$DEV.FLG.LOCK
     3026     8431    2         OR FIL$->FO$FIL.PRIO = FOPR_HOLD#
     3027     8432    2         THEN ALTRETURN;
     3028     8433    2   MATCHEM1: ENTRY ALTRET;
     3029     8434    2         IF DEV$->FO$DEV.FORM ~= FIL$->FO$FIL.FORM THEN ALTRETURN;
     3030     8435    2   MATCHEM11: ENTRY ALTRET;
     3031     8436    2         IF DEV$->FO$DEV.RACCTL ~= 0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:89   
     3032     8437    2         OR DEV$->FO$DEV.RWSNL ~= 0
     3033     8438    2         THEN
     3034     8439    2          CALL MATCHEMR (DEV$->FO$DEV,FIL$->FO$FIL) ALTRET(ALTRT);
     3035     8440    2   MATCHEM2: ENTRY ALTRET;
     3036     8441    2         CALL MATCHWSN (DEV$->FO$DEV, FIL$->FO$FIL) ALTRET (ALTRT);
     3037     8442    2         IF FIL$->FO$FIL.DESTR.TYP ~= DEV$->FO$DEV.NAMER.TYP
     3038     8443    2         OR FIL$->FO$FIL.ATTR & DEV$->FO$DEV.NATTR
     3039     8444    2         OR FIL$->FO$FIL.FLG.SPILL THEN
     3040     8445    2   ALTRT: ALTRETURN;
     3041     8446    2         RETURN;
     3042     8447    2   END MATCHEM;
     3043     8448        /*D* NAME:         MATCHEMR
     3044     8449             PURPOSE:      To match a device and file for ACCT
     3045     8450             CALL:         MATCHEMR (FO$DEV,FO$FIL)
     3046     8451             DESCRIPTION:  RETURNs if the device's RACCT matches the file's
     3047     8452                           account; else ALTRETs.
     3048     8453        */
     3049     8454    1   MATCHEMR: PROC (FO$DEV,FO$FIL) ALTRET;
     3050     8455        /**/
     3051     8456        %FO_DEV (FPTN=FO$DEV,STCLASS="");
     3052     8555        %FO_DEV (FPTN=DEV,STCLASS=BASED);
     3053     8654        %FO_FIL (FPTN=FO$FIL,STCLASS="");
     3054     8754    2   DCL ACCT CHAR(8);
     3055     8755        /**/
     3056     8756    2         IF FO$DEV.RACCTL = 0 AND FO$DEV.RWSNL = 0
     3057     8757    2         THEN
     3058     8758    2          RETURN;
     3059     8759
     3060     8760    2         IF FO$DEV.RACCTL ~= 0
     3061     8761    3         THEN DO;
     3062     8762                                           /* If the device is restricted to
     3063     8763                                           an account, make sure the device
     3064     8764                                           can print the file's dest wsn */
     3065     8765    3           CALL MATCHACCT (FO$DEV,FO$FIL)
     3066     8766    4           WHENRETURN DO;
     3067     8767    4             RETURN;
     3068     8768    4             END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:90   
     3069     8769    4           WHENALTRETURN DO;
     3070     8770    4             ALTRETURN;
     3071     8771    4             END;
     3072     8772    3           END;
     3073     8773    2         ELSE
     3074     8774    3           DO;                        /* RWSNL ~= 0 */
     3075     8775                                           /* See if there's another device
     3076     8776                                           whose acct restriction is the same
     3077     8777                                           this file, and whose wsn list can
     3078     8778                                           handle this file. */
     3079     8779                                           /* Restrict accounts take
     3080     8780                                           precedence over restrict wsns */
     3081     8781    3           WSN = FO$FIL.DESTR.WSN;
     3082     8782    3           IF FO$DEV.RWSNL > 0
     3083     8783    4           THEN DO;
     3084     8784    4             I = FO$DEV.RWSNL;
     3085     8785    4             IF ADDR(FO$DEV.RWSN) -> B$CHARS
     3086     8786    4             = ADDR(WSN) -> B$CHARS
     3087     8787    4             THEN
     3088     8788    4              CALL MATCHWSN (FO$DEV,FO$FIL)
     3089     8789    5              WHENRETURN DO;
     3090     8790    5                RETURN;
     3091     8791    5                END;
     3092     8792    4             END;
     3093     8793    3           ELSE
     3094     8794    4             DO;
     3095     8795    4             I = -FO$DEV.RWSNL;
     3096     8796    4             IF I <= FO$DEV.RWSNL
     3097     8797    4             THEN
     3098     8798    4              IF SUBSTR(FO$DEV.RWSN, 1, I)
     3099     8799    4              = SUBSTR(WSN, FO$DEV.RWSNL-I, I)
     3100     8800    4              THEN
     3101     8801    4               CALL MATCHWSN (FO$DEV,FO$FIL)
     3102     8802    5               WHENRETURN DO;
     3103     8803    5                 RETURN;
     3104     8804    5                 END;
     3105     8805    4             END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:91   
     3106     8806    3           ALTRETURN;
     3107     8807    3           END;
     3108     8808    2   END MATCHEMR;
     3109     8809    1   MATCHACCT: PROC (FO$DEV, FO$FIL) ALTRET;
     3110     8810        /**/
     3111     8811        %FO_DEV (FPTN=FO$DEV,STCLASS="");
     3112     8910        %FO_FIL (FPTN=FO$FIL,STCLASS="");
     3113     9010    2   DCL ACCT CHAR(8);
     3114     9011    2         ACCT = FO$FIL.OJOB$ -> FO$JOB.ACCT;
     3115     9012    2         IF FO$DEV.RACCTL > 0 THEN
     3116     9013    3           DO;
     3117     9014    3           I=FO$DEV.RACCTL;
     3118     9015    3           IF ADDR(FO$DEV.RACCT)->B$CHARS = ADDR(ACCT)->B$CHARS
     3119     9016    4           THEN DO;
     3120     9017    4             CALL MATCHWSN (FO$DEV,FO$FIL)
     3121     9018    5             WHENRETURN DO;
     3122     9019    5               RETURN;
     3123     9020    5               END;
     3124     9021    4             END;
     3125     9022    3           END;
     3126     9023    2         ELSE
     3127     9024    3           DO;
     3128     9025    3           I=-FO$DEV.RACCTL;
     3129     9026    3           IF I <= FO$FIL.OJOB$->FO$JOB.ACCTL THEN
     3130     9027    3            IF SUBSTR(FO$DEV.RACCT,1,I) = SUBSTR(ACCT,FO$FIL.OJOB$->FO$JOB.ACCTL-I,I)
     3131     9028    4            THEN DO;
     3132     9029    4              CALL MATCHWSN (FO$DEV,FO$FIL)
     3133     9030    5              WHENRETURN DO;
     3134     9031    5                RETURN;
     3135     9032    5                END;
     3136     9033    4              END;
     3137     9034    3           END;
     3138     9035    2         ALTRETURN;
     3139     9036    2   END MATCHACCT;
     3140     9037    1   MATCHWSN: PROC (FO$DEV, FO$FIL) ALTRET;
     3141     9038        /**/
     3142     9039        %FO_DEV (FPTN=FO$DEV,STCLASS="");
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:92   
     3143     9138        %FO_FIL (FPTN=FO$FIL,STCLASS="");
     3144     9238
     3145     9239    2         WSN$ = FO$DEV.WSN$;
     3146     9240    3           DO WHILE (WSN$ ~= ADDR(NIL));
     3147     9241    4             DO J = 0 TO (WSN$ -> FO$WSN.NWSNS - 1);
     3148     9242    4             IF FO$FIL.DESTR.WSN = WSN$ -> FO$WSN.WSN.WSN_NAME(J)
     3149     9243    4             AND WSN$ -> FO$WSN.WSN.NOT_USED(J) = '0'B
     3150     9244    4             AND WSN$ -> FO$WSN.WSN.ROUTED_OUT(J) = '0'B
     3151     9245    4             THEN
     3152     9246    4              RETURN;
     3153     9247    4             END;
     3154     9248    3           WSN$ = WSN$ -> FO$WSN.LNK$;
     3155     9249    3           END;
     3156     9250    2         ALTRETURN;
     3157     9251    2   END MATCHWSN;
     3158     9252        /**************************************
     3159     9253         **************************************
     3160     9254                    LOCK_DEV
     3161     9255         **************************************
     3162     9256         **************************************/
     3163     9257        /*D* NAME:         LOCK_DEV
     3164     9258             PURPOSE:      To lock a symbiont device
     3165     9259             DESCRIPTION:  The device is locked and the appropriate consoles
     3166     9260                           informed. */
     3167     9261    1   LOCK_DEV: PROC;
     3168     9262    2         DEV$->FO$DEV.FLG.LOCK='1'B;
     3169     9263    2         OPMSG_RESP.SUBC=FOKR_LOCK#;
     3170     9264    2         OPMSG_RESP.DEVNM=DEVNAME;
     3171     9265    2         OPMSG_RESP.CADDR=M_UR;
     3172     9266    2         CALL M$WRITE (OCMSG_RESP);
     3173     9267    2         CALL FOR$DEVWR;
     3174     9268    2         RETURN;
     3175     9269    2   END LOCK_DEV;
     3176     9270        /**************************************
     3177     9271         **************************************
     3178     9272                    SUSP_DEV
     3179     9273         **************************************
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:93   
     3180     9274         **************************************/
     3181     9275    1   SUSP_DEV: PROC ALTRET;
     3182     9276    2         CALL M$SYMBIO (SUSP_SYMB) ALTRET(ALTRT);
     3183     9277    2         DEV$->FO$DEV.TOKERSN=0;
     3184     9278    2         DEV$->FO$DEV.FLG.ACKEXP='0'B;
     3185     9279    2         DEV$->FO$DEV.STATE=FOS_SPRQ#;
     3186     9280    2         RETURN;
     3187     9281    2   ALTRT:;
     3188     9282    2         ALTRETURN;
     3189     9283    2   END SUSP_DEV;
     3190     9284        /**************************************
     3191     9285         **************************************
     3192     9286                    DEV_EVSCREECH
     3193     9287         **************************************
     3194     9288         **************************************/
     3195     9289        /*D* NAME:         DEV_EVSCREECH
     3196     9290             PURPOSE:      To cause a SNAP due to bad event/state in FOD$EVENT
     3197     9291             DESCRIPTION:  This SNAP occurs when
     3198     9292                           1) an invalid event-state combination occurs
     3199     9293                           2) an invalid internal event subcode is reported
     3200     9294                              (e.g. bad quit code to DEV_QUIT)
     3201     9295
     3202     9296                           The cause can be determined by examining who called
     3203     9297                           FOD$EVENT and why, and also which part of FOD$EVENT
     3204     9298                           called the SNAP issuing routine - DEV_EVSCREECH. */
     3205     9299    1   DEV_EVSCREECH: PROC;
     3206     9300
     3207     9301    2         CALL FOI$SNAP (%S$BADEVS,F_FO,M_D);
     3208     9302        /*S* SCREECH_CODE: FOD-S$BADEVS
     3209     9303             TYPE:         SNAP
     3210     9304             MESSAGE:      Bad event/state in OUTSYM device scheduler
     3211     9305             REMARKS:      This SNAP occurs when
     3212     9306                           1) an invalid event-state combination occurs
     3213     9307                           2) an invalid internal event subcode is reported
     3214     9308                              (e.g. bad quit code to DEV_QUIT)
     3215     9309
     3216     9310                           The cause can be determined by examining who called
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:94   
     3217     9311                           FOD$EVENT and why, and also which part of FOD$EVENT
     3218     9312                           called the SNAP issuing routine - DEV_EVSCREECH. */
     3219     9313    2         RETURN;
     3220     9314    2   END DEV_EVSCREECH;
     3221     9315        /**************************************
     3222     9316         **************************************
     3223     9317                    CHK_ALG
     3224     9318         **************************************
     3225     9319         **************************************/
     3226     9320        /*D* NAME:         CHK_ALG
     3227     9321             PURPOSE:      To check if a device is aligned
     3228     9322             DESCRIPTION:  ALTRETs if no with KERR = FOKE_DNALG */
     3229     9323    1   CHK_ALG: PROC ALTRET;
     3230     9324    2         IF DEV$->FO$DEV.FLG.ALGNED = '1'B THEN RETURN;
     3231     9325    2         KERR=FOKE_DNALG#;
     3232     9326    2         ALTRETURN;
     3233     9327    2   END CHK_ALG;
     3234     9328        /**************************************
     3235     9329         **************************************
     3236     9330                    CHK_AIP
     3237     9331         **************************************
     3238     9332         **************************************/
     3239     9333        /*D* NAME:         CHK_AIP
     3240     9334             PURPOSE:      To check if a device is doing a form alignment
     3241     9335             DESCRIPTION:  ALTRETs if yes with KERR = FOKE_DBALG */
     3242     9336    1   CHK_AIP: PROC ALTRET;
     3243     9337    2         IF DEV$->FO$DEV.FLG.AIP = '0'B THEN RETURN;
     3244     9338    2         KERR=FOKE_DBALG#;
     3245     9339    2         ALTRETURN;
     3246     9340    2   END CHK_AIP;
     3247     9341        /**************************************
     3248     9342         **************************************
     3249     9343                    CHK_KSYSID
     3250     9344         **************************************
     3251     9345         **************************************/
     3252     9346        /*D* NAME:         CHK_KSYSID
     3253     9347             PURPOSE:      To verify SYSID on certain device keyins
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:95   
     3254     9348             DESCRIPTION:  Certain scary device keyins (e.g. ABORT) allow
     3255     9349                           the oper to type in the sysid he thinks is currently
     3256     9350                           on the device, such that if he is wrong about the
     3257     9351                           device's current file sysid, we will not perform
     3258     9352                           the operation.  This routine performs the check
     3259     9353                           and ALTRETs if he specified sysid and was wrong. */
     3260     9354    1   CHK_KSYSID: PROC ALTRET;
     3261     9355    2         IF KEYIN$->FO$DKEYIN.SYSID = 0 THEN RETURN;
     3262     9356    2         IF DEV$->FO$DEV.CFIL$ = ADDR(NIL) THEN RETURN;
     3263     9357    2         IF DEV$->FO$DEV.CFIL$->FO$FIL.SYSID = KEYIN$->FO$DKEYIN.SYSID THEN RETURN;
     3264     9358    2         ALTRETURN;
     3265     9359    2   END CHK_KSYSID;
     3266     9360        /**************************************
     3267     9361         **************************************
     3268     9362                    TCONMSG_DEV
     3269     9363                    BDBCMSG_DEV
     3270     9364                    FONMSG _DEV
     3271     9365                    FOFFMSG_DEV
     3272     9366         **************************************
     3273     9367         **************************************/
     3274     9368    1   TCONMSG_DEV: PROC;
     3275     9369    2         OPMSG_ANY.SUBC=BITBIN(DEV$->FO$DEV.FLG.LOCK);
     3276     9370    2         OPMSG_ANY.FORM=DEV$->FO$DEV.FORM;
     3277     9371    2         OPMSG_ANY.MSG#=FO_TCON_MSG#;
     3278     9372    2         GOTO DOMSG;
     3279     9373    2   BDBCMSG_DEV: ENTRY;
     3280     9374    2         OPMSG_ANY.MSG#=FO_BDBC_MSG#;
     3281     9375    2         GOTO DOMSG;
     3282     9376    2   FONMSG_DEV: ENTRY;
     3283     9377    2         OPMSG_ONOFF.MSG#=FO_FON_MSG#;
     3284     9378    2         GOTO DOFMSG;
     3285     9379    2   FOFFMSG_DEV: ENTRY;
     3286     9380    2         OPMSG_ONOFF.MSG#=FO_FOFF_MSG#;
     3287     9381    2   DOFMSG:
     3288     9382    2         IF NOT FO_SYMBINFO.WATCH# THEN
     3289     9383    3           DO;
     3290     9384    3           IF FIL$->FO$FIL.FLG.GLC
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:96   
     3291     9385    3           AND (NOT FIL$->FO$FIL.FLG.CHKPTD)
     3292     9386    3           AND DO_ONMSG = 0 THEN RETURN;
     3293     9387    3           END;
     3294     9388    2         OPMSG_ONOFF.SYSID=FIL$->FO$FIL.SYSID;
     3295     9389    2         OPMSG_ONOFF.NUM=FIL$->FO$FIL.NUM;
     3296     9390    2         OPMSG_ONOFF.COMMODE = BITBIN ( ~  FIL$->FO$FIL.FLG.GLC     );
     3297     9391    2         OPMSG_ONOFF.CHKPTD=BITBIN(FIL$->FO$FIL.FLG.CHKPTD);
     3298     9392    2         OPMSG_ONOFF.DEVNM=DEVNAME;
     3299     9393    2         CALL M$WRITE (OCMSG_ONOFF);
     3300     9394    2         RETURN;
     3301     9395
     3302     9396    2   DOMSG:;
     3303     9397    2         OPMSG_ANY.DEVNM=DEVNAME;
     3304     9398    2         CALL M$WRITE (OCMSG_ANY);
     3305     9399    2         RETURN;
     3306     9400    2   END TCONMSG_DEV;
     3307     9401        /**************************************
     3308     9402         **************************************
     3309     9403                    REM_DEV
     3310     9404         **************************************
     3311     9405         **************************************/
     3312     9406    1   REM_DEV: PROC;
     3313     9407
     3314     9408    2         CALL REL_ALR;
     3315     9409
     3316     9410    2         P$=FO_Q.DEVHD$;
     3317     9411              %JLOCK;
     3318     9414    2         IF DEV$=P$ THEN
     3319     9415    3           DO;
     3320     9416    3           FO_Q.DEVHD$=DEV$->FO$DEV.LNK$;
     3321     9417    3           GOTO DONE;
     3322     9418    3           END;
     3323     9419
     3324     9420
     3325     9421    3           DO FOREVER;
     3326     9422    3           IF P$->FO$DEV.LNK$=DEV$ THEN
     3327     9423    4             DO;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:97   
     3328     9424    4             P$->FO$DEV.LNK$=DEV$->FO$DEV.LNK$;
     3329     9425    4   DONE:     ;
     3330     9426    4             WSN$ = DEV$ -> FO$DEV.WSN$;
     3331     9427    5               DO WHILE (WSN$ ~= ADDR(NIL));
     3332     9428    5               LNK_WSN$ = WSN$ -> FO$WSN.LNK$;
     3333     9429    5               CALL FOI$RBUF (FO_DEVSCB,WSN$);
     3334     9430    5               WSN$ = LNK_WSN$;
     3335     9431    5               END;
     3336     9432    4             CALL FOI$RBUF (FO_DEVSCB,DEV$);
     3337     9433                  %JUNLOCK;
     3338     9436    4             RETURN;
     3339     9437    4             END;
     3340     9438    3           P$=P$->FO$DEV.LNK$;
     3341     9439    3           END;
     3342     9440    2   END REM_DEV;
     3343     9441        /**************************************
     3344     9442         **************************************
     3345     9443                    MATCHDEV
     3346     9444         **************************************
     3347     9445         **************************************/
     3348     9446    1   MATCHDEV: PROC ALTRET;
     3349     9447    2         WSN_TOTAL = 0;
     3350     9448    2         WSN$ = DEV$ -> FO$DEV.WSN$;
     3351     9449    3           DO WHILE (WSN$ ~= ADDR(NIL));
     3352     9450    4             DO I = 0 TO (WSN$ -> FO$WSN.NWSNS - 1);
     3353     9451    4             IF WSN$ -> FO$WSN.WSN.ORIGINAL(I) = '1'B
     3354     9452    4             OR WSN$ -> FO$WSN.WSN.ADD_ON(I) = '1'B
     3355     9453    4             THEN
     3356     9454    4              WSN_TOTAL = WSN_TOTAL + 1;
     3357     9455    4             END;
     3358     9456    3           WSN$ = WSN$ -> FO$WSN.LNK$;
     3359     9457    3           END;
     3360     9458
     3361     9459    2         WSN_TALLY = 0;
     3362     9460    2         WSN$ = DEV$ -> FO$DEV.WSN$;
     3363     9461    3           DO WHILE (WSN$ ~= ADDR(NIL));
     3364     9462    4             DO I = 0 TO (WSN$ -> FO$WSN.NWSNS - 1);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:98   
     3365     9463    4             IF WSN$ -> FO$WSN.WSN.ROUTED_OUT(I) = '1'B
     3366     9464    4             OR WSN$ -> FO$WSN.WSN.NOT_USED(I) = '1'B
     3367     9465    4             THEN
     3368     9466    4              GOTO NEXT_WSN;
     3369     9467    4             P$ = FO_Q.DEVHD$;
     3370     9468    5               DO WHILE (P$ ~= ADDR(NIL));
     3371     9469    5               IF P$ ~= DEV$
     3372     9470    6               THEN DO;
     3373     9471    6                 IF P$ -> FO$DEV.NATTR = DEV$ -> FO$DEV.NATTR
     3374     9472    6                 AND P$ -> FO$DEV.NAMER.TYP = DEV$ -> FO$DEV.NAMER.TYP
     3375     9473    7                 THEN DO;
     3376     9474    7                   P_WSN$ = P$ -> FO$DEV.WSN$;
     3377     9475    8                     DO WHILE (P_WSN$ ~= ADDR(NIL));
     3378     9476    9                       DO J = 0 TO (P_WSN$ -> FO$WSN.NWSNS - 1);
     3379     9477    9                       IF WSN$ -> FO$WSN.WSN.WSN_NAME(I)
     3380     9478    9                       = P_WSN$ -> FO$WSN.WSN.WSN_NAME(J)
     3381     9479   10                       THEN DO;
     3382     9480   10                         WSN_TALLY = WSN_TALLY + 1;
     3383     9481   10                         GOTO NEXT_WSN;
     3384     9482   10                         END;
     3385     9483    9                       END; /* J = 0 */
     3386     9484    8                     P_WSN$ = P_WSN$ -> FO$WSN.LNK$;
     3387     9485    8                     END;   /* DO WHILE */
     3388     9486    7                   END;     /* IF P$ */
     3389     9487    6                 END;       /* IF P$ */
     3390     9488    5               P$ = P$ -> FO$DEV.LNK$;
     3391     9489    5               END;         /* DO WHILE P$ */
     3392     9490    4   NEXT_WSN: ;
     3393     9491    4             END;           /* DO I = 0 */
     3394     9492    3           WSN$ = WSN$ -> FO$WSN.LNK$;
     3395     9493    3           END;
     3396     9494
     3397     9495    2         IF WSN_TOTAL = WSN_TALLY
     3398     9496    2         THEN
     3399     9497    2          ALTRETURN;
     3400     9498    2         ELSE
     3401     9499    2          RETURN;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:99   
     3402     9500    2   END MATCHDEV;
     3403     9501        /**************************************
     3404     9502         **************************************
     3405     9503                    AVAIL
     3406     9504         **************************************
     3407     9505         **************************************/
     3408     9506        /*D* NAME:         AVAIL
     3409     9507             PURPOSE:      To re-set FLG.LPAVAIL for all files when
     3410     9508                           a new device connects.
     3411     9509        */
     3412     9510    1   AVAIL: PROC;
     3413     9511    3           DO I = 0 TO FOPR_MAX#;
     3414     9512    3           FIL$=FO_Q.FILHD$(I);
     3415     9513    4             DO WHILE (FIL$ ~= ADDR(NIL));
     3416     9514    4             IF FIL$->FO$FIL.FLG.LPAVAIL = '0'B THEN
     3417     9515    4              CALL MATCHEM2 ALTRET(NXTFIL);
     3418     9516    4             FIL$->FO$FIL.FLG.LPAVAIL='1'B;
     3419     9517    4   NXTFIL:   FIL$=FIL$->FO$FIL.LNK$;
     3420     9518    4             END;
     3421     9519    3           END;
     3422     9520    2         RETURN;
     3423     9521    2   END AVAIL;
     3424     9522        /**************************************
     3425     9523         **************************************
     3426     9524                    UNAVAIL
     3427     9525         **************************************
     3428     9526         **************************************/
     3429     9527        /*D* NAME:         UNAVAIL
     3430     9528             PURPOSE:      To re-set FLG.LPAVAIL for all files when
     3431     9529                           a device disconnects.
     3432     9530        */
     3433     9531    1   UNAVAIL: PROC;
     3434     9532        /**/
     3435     9533    2   DCL SAV$ PTR;
     3436     9534        /**/
     3437     9535    2         SAV$=DEV$;
     3438     9536    3           DO I = 0 TO FOPR_MAX#;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:100  
     3439     9537    3           FIL$=FO_Q.FILHD$(I);
     3440     9538    4             DO WHILE (FIL$ ~= ADDR(NIL));
     3441     9539    4             IF FIL$->FO$FIL.FLG.LPAVAIL THEN
     3442     9540    4              CALL FOD$AVAIL;
     3443     9541    4             FIL$=FIL$->FO$FIL.LNK$;
     3444     9542    4             END;
     3445     9543    3           END;
     3446     9544    2         DEV$=SAV$;
     3447     9545    2         RETURN;
     3448     9546    2   END UNAVAIL;
     3449     9547        /**/
     3450     9548    1   END FOD$DEV;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:101  
--  Include file information  --

   M_ERRORS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   FO_SCODE_C.:E05TOU  is referenced.
   FOM$STRUCT.:E05TOU  is referenced.
   FOO_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   FS$FIT.:E05TOU  is referenced.
   FOO_SUBS_C.:E05TOU  is referenced.
   FOM_SUBS_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   KC_SUBS_C.:E05TOU  is referenced.
   KC_ERRORS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FO_ERRORS_C.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   FM$GRAN.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FOD$DEV.

   Procedure FOD$DEV requires 3690 words for executable code.
   Procedure FOD$DEV requires 74 words of local(AUTO) storage.

    No errors detected in file FOD$DEV.:E05TSI    .

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:102  

 Object Unit name= FOD$DEV                                    File name= FOD$DEV.:E05TOU
 UTS= JUL 29 '97 17:04:58.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   460    714  FOD$DEV
    2  RoData even  UTS    453    705  FOD$DEV
    3   DCB   even  none     0      0  M$CSCG
    4   DCB   even  none     0      0  M$OSCG
    5   DCB   even  none     0      0  M$FPRG
    6   Proc  even  none  3690   7152  FOD$DEV
    7  RoData even  none    43     53  FOD$DEV

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes    yes     yes      Std        2  FOD$DEV
     6      3          yes     yes      Std        2  FOD$EVENT
     6   4241          yes     yes      Std        0  FOD$AVAIL
     6   4265          yes     yes      Std        0  FOD$FSCHK
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:103  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 FOR$DEVWR
 yes     yes           Std       2 FOI$GBUF
 yes     yes           Std       2 FOR$CALIGN
 yes     yes           Std       2 FOR$GALIGN
 yes     yes           Std       0 FOR$MOUNT
 yes     yes           Std       3 FOF$FITUPD
 yes     yes           Std       2 FOI$RBUF
 yes     yes           Std       0 FOF$REPRIO
 yes     yes           Std       2 FOR$SALIGN
 yes     yes           Std       0 FOF$DELETE
 yes     yes           Std       0 FOF$REMOVE
 yes     yes           Std       0 FOF$CHAIN
 yes     yes           Std       0 FOF$UNCHAIN
 yes     yes           Std       4 FOI$SNAP
 yes     yes           Std       1 FOF$LASTEXT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FO_FIL$                               FO_DEV$
     FO_JOB$                               FO_SYMBINFO                           FO_DET
     FO_DETX                               FO_DETL                               FO_Q
     FO_FFRSCB                             FO_DEVSCB                             FO_SPGSCB
     M$CSCG                                M$OSCG                                M$FPRG
     B$TCB$                                B$JIT$                                B_VECTNIL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:104  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:105  


        1        1        /*M* FOD$DEV Device scheduling routines for OUTSYM ghost */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         FOD$DEV
       10       10             PURPOSE:      To handle devices for OUTSYM
       11       11             DESCRIPTION:  FOD$DEV contains all of the device-specific
       12       12                           logic for the OUTSYM ghost, except for
       13       13                           stuff specific to forms mounting, which
       14       14                           is handled in FOR$FORM. */
       15       15        /**/
       16       16        /**/
       17       17        FOD$DEV: PROC (EVENT,DINFO) ALTRET;

     17  6 000000   000000 700200 xent  FOD$DEV      TSX0  ! X66_AUTO_2
         6 000001   000112 000002                    ZERO    74,2
         6 000002   000005 710000 6                  TRA     s:5891

       18       18
       19       19
       20       20
       21       21        /**/
       22       22        /* PARAMETERS */
       23       23        /**/
       24       24    1   DCL EVENT UBIN WORD;
       25       25    1   DCL DINFO UBIN WORD;
       26       26    1   DCL PREVLEXT$ REDEF DINFO PTR;
       27       27    1   DCL INFO REDEF DINFO UBIN WORD;
       28       28    1   DCL 1 INFOB REDEF DINFO,
       29       29    1         2 BLK# UBIN(18) UNAL,
       30       30    1         2 REC# UBIN(18) UNAL;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:106  
       31       31    1   DCL KEYIN$ REDEF DINFO PTR;
       32       32    1   DCL NOSTART REDEF DINFO UBIN WORD;
       33       33
       34       34
       35       35
       36       36        /**/
       37       37        /* INCLUDES */
       38       38        /**/
       39       39        %INCLUDE CP_6;
       40      120        %INCLUDE FM$GRAN;
       41      189        %INCLUDE B$JIT;
       42      479        %INCLUDE EL$TABLES;
       43      802        %INCLUDE EL_SUBS_C;
       44      886        %INCLUDE FO_ERRORS_C;
       45      918        %INCLUDE F_ERRORS_C;
       46     1158        %INCLUDE KC_ERRORS_C;
       47     1205        %INCLUDE KC_SUBS_C;
       48     1221        %INCLUDE OC_SUBS_C;
       49     1952        %INCLUDE FOM_SUBS_C;
       50     2015        %INCLUDE FOO_SUBS_C;
       51     2251        %INCLUDE FS$FIT;
       52     2294        %INCLUDE FOO_MAC_C;
       53     3042        %INCLUDE FOO_DATA_R;
       54     4208        %INCLUDE FOM$STRUCT;
       55     4269        %INCLUDE FO_SCODE_C;
       56     4297        %INCLUDE OC_MESSHD_C;
       57     4350        %INCLUDE M_ERRORS_C;
       58     4414
       59     4415
       60     4416
       61     4417        /**/
       62     4418        /*  BASED STRUCTURES */
       63     4419        /**/
       64     4420        %B$TCB (STCLASS="BASED(B$TCB$)");
       65     4423        %B$ALT;
       66     4431        %FM$GRAN;
       67     4435        %FOM$SBUF;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:107  
       68     4439    1   DCL B$CHARS CHAR(I) BASED UNAL;
       69     4440
       70     4441
       71     4442
       72     4443        /**/
       73     4444        /*  AUTO */
       74     4445        /**/
       75     4446    1   DCL I UBIN WORD;
       76     4447    1   DCL P$ PTR;
       77     4448    1   DCL PP$ PTR;
       78     4449    1   DCL WSN$ PTR;
       79     4450    1   DCL P_WSN$ PTR;
       80     4451    1   DCL J UBIN WORD;
       81     4452    1   DCL WSN_MATCH BIT(1);
       82     4453    1   DCL WSN CHAR(8) UNAL;
       83     4454    1   DCL LNK_WSN$ PTR;
       84     4455    1   DCL WSN_TOTAL UBIN WORD;
       85     4456    1   DCL WSN_TALLY UBIN WORD;
       86     4457    1   DCL FIL_CNUM UBIN WORD;
       87     4458    1   DCL JOB_SYSID UBIN WORD;
       88     4459    1   DCL QUITRSN UBIN WORD;
       89     4460    1   DCL OLDQUITRSN UBIN WORD;
       90     4461    1   DCL PRIO UBIN WORD;
       91     4462    1   DCL KERR UBIN WORD;
       92     4463    1   DCL FRDAD UBIN WORD;
       93     4464    1   DCL BLK# UBIN WORD;
       94     4465    1   DCL HASH UBIN WORD;
       95     4466    1   DCL SAVFIL$ PTR;
       96     4467    1   DCL BLOCK UBIN WORD;
       97     4468    1   DCL GRANS UBIN WORD;
       98     4469    1   DCL DAD UBIN WORD;
       99     4470    1   DCL GRAN$ PTR;
      100     4471    1   DCL TOKERSN UBIN WORD;
      101     4472    1   DCL REC$ PTR;
      102     4473    1   DCL EXTBLNK$ PTR;
      103     4474    1   DCL 1 STAMP ALIGNED,
      104     4475    1         2 HASH UBIN(27) UNAL,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:108  
      105     4476    1         2 FRDAD UBIN(9) UNAL;
      106     4477    1   DCL PAGES SBIN WORD;
      107     4478    1   DCL STATE UBIN WORD;
      108     4479    1   DCL EXT$ PTR;
      109     4480    1   DCL LOGIT UBIN WORD;
      110     4481    1   DCL ACKTYP UBIN WORD;
      111     4482    1   DCL 1 ALSTAT ALIGNED,
      112     4483    1         2 STAT UBIN WORD UNAL,
      113     4484    1         2 ERRC UBIN WORD UNAL;
      114     4485    1   DCL SAVE_ACCN CHAR(8) ALIGNED;
      115     4486    1   DCL SAVE_UNAME CHAR(12) ALIGNED;
      116     4487
      117     4488
      118     4489
      119     4490        /**/
      120     4491        /*  STATIC */
      121     4492        /**/
      122     4493    1   DCL DEVNAME CHAR(8) STATIC DALIGNED;
      123     4494    1   DCL 1 DEVNAMER REDEF DEVNAME DALIGNED,
      124     4495    1         2 TYP CHAR(2) UNAL,
      125     4496    1         2 NUM CHAR(2) UNAL,
      126     4497    1         2 TWSN# CHAR(4) UNAL;
      127     4498    1   DCL FABTMSG CHAR(32) CONSTANT INIT('c****LAST RECORD SUPPLIED BY CP6');
      128     4499    1   DCL ABTMSGS (0:11) CHAR(40) CONSTANT ALIGNED INIT(
      129     4500    1    ': OUTPUT ABORTED BY OPERATOR',
      130     4501    1    ': OUTPUT TRUNCATED - FILE INCONSISTENCY',
      131     4502    1    ': CONCURRENT MODE FILE ABORT',
      132     4503    1    ': OUTPUT DELETED BY OPERATOR',
      133     4504    1    ' RECOVERY',
      134     4505    1    ': CONCURRENT MODE FILE ABORT',
      135     4506    1    ': OUTPUT TRUNCATED - BAD DISK ADDRESS',
      136     4507    1    ': OUTPUT CANCELLED BY USER',
      137     4508    1    ': OUTPUT STOPPED - SAVE KEYIN ',
      138     4509    1    ': OUTPUT STOPPED - JOB BEING RERUN',
      139     4510    1    ': OUTPUT STOPPED - ZAP KEYIN',
      140     4511    1    ': OUTPUT ERASED BY USER');
      141     4512    1   DCL DO_ONMSG UBIN WORD STATIC INIT(0);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:109  
      142     4513        %VLP_SYMBEXTENT (FPTN=EXTENT,STCLASS=STATIC);
      143     4526    1   DCL 1 CHKPREC STATIC ALIGNED,
      144     4527    1         2 *      CHAR(01) UNAL INIT('A'),
      145     4528    1         2 *      (0:12) CHAR(1) UNAL INIT('*'*0),
      146     4529    1         2 *      CHAR(20) UNAL INIT('PARTIAL FILE: SYSID '),
      147     4530    1         2 SYSID  CHAR(06) UNAL,
      148     4531    1         2 *      CHAR(1) UNAL INIT(' '),
      149     4532    1         2 *      (0:48) CHAR(1) UNAL INIT('*'*0);
      150     4533    1   DCL CHKPRECR REDEF CHKPREC CHAR(90) ALIGNED;
      151     4534        %FO_DKEYIN                             (FPTN=SPKEYIN,
      152     4535                 IKIN#     = KEY_SPACE#,
      153     4536                 STCLASS   = STATIC);
      154     4568        %EL$OSFI (NAME=LOG_ERR_BUF,STCLASS=STATIC);
      155     4575        %FO_DKEYIN                             (FPTN=ALKEYIN,
      156     4576                 IKIN#     = KEY_ALIGN#,
      157     4577                 STCLASS   = STATIC);
      158     4609        %OC_MESSHD_D            (NAME=OPMSG_SUSP,
      159     4610                 NPARMS    = 4,
      160     4611                 MSG       = FO_SUSP_MSG#,
      161     4612                 ATR       = M_UR,
      162     4613                 STCLASS   = STATIC);
      163     4626    1         2 * UBIN BYTE UNAL INIT(1),
      164     4627    1         2 * UBIN BYTE UNAL INIT(2),
      165     4628    1         2 * UBIN BYTE UNAL INIT(8),
      166     4629    1         2 * UBIN BYTE UNAL INIT(1),
      167     4630    1         2 SUBC UBIN BYTE UNAL,
      168     4631    1         2 NUM UBIN HALF UNAL,
      169     4632    1         2 ACCT CHAR(8) UNAL,
      170     4633    1         2 QUITRSN UBIN BYTE UNAL;
      171     4634        %OC_MESSHD_D            (NAME=OPMSG_TDSC,
      172     4635                 NPARMS    = 1,
      173     4636                 MSG       = FO_TDSC_MSG#,
      174     4637                 ATR       = M_UR,
      175     4638                 STCLASS   = STATIC);
      176     4651    1         2 * UBIN BYTE UNAL INIT(1),
      177     4652    1         2 SUBC UBIN BYTE UNAL INIT(FOTD_NRML#);
      178     4653        %OC_MESSHD_D            (NAME=OPMSG_RESP,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:110  
      179     4654                 NPARMS    = 2,
      180     4655                 MSG       = FO_RESP_MSG#,
      181     4656                 ATR       = M_UR,
      182     4657                 STCLASS   = STATIC);
      183     4670    1         2 * UBIN BYTE UNAL INIT(1),
      184     4671    1         2 * UBIN BYTE UNAL INIT(8),
      185     4672    1         2 SUBC UBIN BYTE UNAL,
      186     4673    1         2 ACCT CHAR(8) UNAL,
      187     4674    1         2 WSN REDEF ACCT CHAR(8) UNAL,
      188     4675    1         2 FORM REDEF ACCT CHAR(8) UNAL;
      189     4676        %OC_MESSHD_D            (NAME=OPMSG_ANY,
      190     4677                 NPARMS    = 2,
      191     4678                 MSG       = 0,
      192     4679                 ATR       = M_UR,
      193     4680                 STCLASS   = STATIC);
      194     4693    1         2 * UBIN BYTE UNAL INIT(1),
      195     4694    1         2 * UBIN BYTE UNAL INIT(6),
      196     4695    1         2 SUBC UBIN BYTE UNAL,
      197     4696    1         2 FORM CHAR(6) UNAL;
      198     4697        %OC_MESSHD_D            (NAME=OPMSG_KERR,
      199     4698                 NPARMS    = 2,
      200     4699                 MSG       = FO_KERR_MSG#,
      201     4700                 ATR       = M_UR,
      202     4701                 STCLASS   = STATIC);
      203     4714    1         2 * UBIN BYTE UNAL INIT(1),
      204     4715    1         2 * UBIN BYTE UNAL INIT(4),
      205     4716    1         2 SUBC UBIN BYTE UNAL,
      206     4717    1         2 ERRCODE BIT(36) UNAL;
      207     4718        %OC_MESSHD_D            (NAME=OPMSG_ONOFF,
      208     4719                 NPARMS    = 3,
      209     4720                 MSG       = 0,
      210     4721                 ATR       = M_UR,
      211     4722                 STCLASS   = STATIC);
      212     4735    1         2 * UBIN BYTE UNAL INIT(2),
      213     4736    1         2 * UBIN BYTE UNAL INIT(1),
      214     4737    1         2 * UBIN BYTE UNAL INIT(1),
      215     4738    1         2 NUM UBIN HALF UNAL,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:111  
      216     4739    1         2 COMMODE UBIN BYTE UNAL,
      217     4740    1         2 CHKPTD UBIN BYTE UNAL;
      218     4741        %OC_MESSHD_D            (NAME=OPMSG_AERR,
      219     4742                 NPARMS    = 2,
      220     4743                 MSG       = FO_AERR_MSG#,
      221     4744                 ATR       = M_UR,
      222     4745                 STCLASS   = STATIC);
      223     4758    1         2 * UBIN BYTE UNAL INIT(1),
      224     4759    1         2 * UBIN BYTE UNAL INIT(2),
      225     4760    1         2 SUBC UBIN BYTE UNAL,
      226     4761    1         2 ERRC UBIN HALF UNAL;
      227     4762        %OC_MESSHD_D            (NAME=OPMSG_IALN,
      228     4763                 NPARMS    = 5,
      229     4764                 MSG       = FO_IALN_MSG#,
      230     4765                 ATR       = M_UR,
      231     4766                 STCLASS   = STATIC);
      232     4779    1         2 * UBIN BYTE UNAL INIT(1),
      233     4780    1         2 * UBIN BYTE UNAL INIT(1),
      234     4781    1         2 * UBIN BYTE UNAL INIT(1),
      235     4782    1         2 * UBIN BYTE UNAL INIT(6),
      236     4783    1         2 * UBIN BYTE UNAL INIT(8),
      237     4784    1         2 FORM_FLAG UBIN BYTE UNAL,
      238     4785    1         2 RACCT_FLAG UBIN BYTE UNAL,
      239     4786    1         2 SUBC UBIN BYTE UNAL,
      240     4787    1         2 FORM CHAR(6) UNAL,
      241     4788    1         2 RACCT CHAR(8) UNAL;
      242     4789        %OC_MESSHD_D            (NAME=OPMSG_FPERR,
      243     4790                 NPARMS    = 5,
      244     4791                 MSG       = FO_FPERR_MSG#,
      245     4792                 ATR       = M_UR,
      246     4793                 STCLASS   = STATIC);
      247     4806    1         2 * UBIN BYTE UNAL INIT(1),
      248     4807    1         2 * UBIN BYTE UNAL INIT(36),
      249     4808    1         2 * UBIN BYTE UNAL INIT(1),
      250     4809    1         2 * UBIN BYTE UNAL INIT(8),
      251     4810    1         2 NL UBIN BYTE UNAL INIT(31),
      252     4811    1         2 SUBC UBIN BYTE UNAL,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:112  
      253     4812    1         2 ERRCODE BIT(36) UNAL,
      254     4813    1         2 LDBYPRO UBIN BYTE UNAL,
      255     4814    1         2 ACCT CHAR(8) UNAL,
      256     4815    1         2 NAME CHAR(31) UNAL;
      257     4816        %OC_MESSHD_D            (NAME=OPMSG_UNIMP,
      258     4817                 NPARMS    = 0,
      259     4818                 MSG       = UNIMP_MSG#,
      260     4819                 DELIM     =";",
      261     4820                 STCLASS   = STATIC);
      262     4833
      263     4834
      264     4835
      265     4836        /**/
      266     4837        /*  DCBS */
      267     4838        /**/
      268     4839    1   DCL M$CSCG DCB;
      269     4840    1   DCL M$OSCG DCB;
      270     4841    1   DCL M$FPRG DCB;
      271     4842
      272     4843
      273     4844
      274     4845        /**/
      275     4846        /* REFS */
      276     4847        /**/
      277     4848    1   DCL B$TCB$ PTR SYMREF;
      278     4849    1   DCL B$JIT$ PTR SYMREF;
      279     4850    1   DCL FOF$CHAIN     ENTRY    ALTRET;
      280     4851    1   DCL FOF$DELETE    ENTRY    ALTRET;
      281     4852    1   DCL FOF$FITUPD    ENTRY(3) ALTRET;
      282     4853    1   DCL FOF$LASTEXT   ENTRY(1) ALTRET;
      283     4854    1   DCL FOF$REMOVE    ENTRY    ALTRET;
      284     4855    1   DCL FOF$REPRIO    ENTRY    ALTRET;
      285     4856    1   DCL FOF$UNCHAIN   ENTRY    ALTRET;
      286     4857    1   DCL FOI$GBUF      ENTRY(2) ALTRET;
      287     4858    1   DCL FOI$RBUF      ENTRY(2) ALTRET;
      288     4859    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
      289     4860    1   DCL FOR$CALIGN    ENTRY(2) ALTRET;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:113  
      290     4861    1   DCL FOR$DEVWR     ENTRY    ALTRET;
      291     4862    1   DCL FOR$MOUNT     ENTRY    ALTRET;
      292     4863    1   DCL FOR$SALIGN    ENTRY(2) ALTRET;
      293     4864    1   DCL FOR$GALIGN    ENTRY(2) ALTRET;
      294     4865    1   DCL XSF$LOCCODP   ENTRY(2) ALTRET;
      295     4866
      296     4867
      297     4868
      298     4869        /**/
      299     4870        /* PMME FPTS */
      300     4871        /**/
      301     4872        %FPT_ACTIVATE                          (FPTN=DISCT_DEV,
      302     4873                 STCLASS   = CONSTANT,
      303     4874                 DCB       = M$OSCG,
      304     4875                 STATION   = DEVNAME,
      305     4876                 DISCONNECT= YES);
      306     4899        %FPT_ACTIVATE                         (FPTN=DSCGO_DEV,
      307     4900                 STCLASS   = CONSTANT,
      308     4901                 DCB       = M$OSCG,
      309     4902                 STATION   = DEVNAME,
      310     4903                 DSCGO     = YES,
      311     4904                 DISCONNECT= NO);
      312     4927        %FPT_ACTIVATE                         (FPTN=ACT_FPRG,
      313     4928                 STCLASS   = CONSTANT,
      314     4929                 DCB       = M$OSCG,
      315     4930                 STATION   = DEVNAME,
      316     4931                 MAKEFPRG  = YES);
      317     4954        %FPT_ACTIVATE                         (FPTN=DEA_FPRG,
      318     4955                 STCLASS   = CONSTANT,
      319     4956                 DCB       = M$OSCG,
      320     4957                 STATION   = DEVNAME);
      321     4980        %FPT_WRITE                             (FPTN=OCMSG_ANY,
      322     4981                 STCLASS   = CONSTANT,
      323     4982                 DCB       = M$CSCG,
      324     4983                 BUF       = OPMSG_ANY);
      325     5014        %FPT_WRITE                             (FPTN=OCMSG_SUSP,
      326     5015                 STCLASS   = CONSTANT,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:114  
      327     5016                 DCB       = M$CSCG,
      328     5017                 BUF       = OPMSG_SUSP);
      329     5048        %FPT_WRITE                             (FPTN=OCMSG_RESP,
      330     5049                 STCLASS   = CONSTANT,
      331     5050                 DCB       = M$CSCG,
      332     5051                 BUF       = OPMSG_RESP);
      333     5082        %FPT_WRITE                             (FPTN=OCMSG_AERR,
      334     5083                 STCLASS   = CONSTANT,
      335     5084                 DCB       = M$CSCG,
      336     5085                 BUF       = OPMSG_AERR);
      337     5116        %FPT_WRITE                             (FPTN=OCMSG_TDSC,
      338     5117                 STCLASS   = CONSTANT,
      339     5118                 DCB       = M$CSCG,
      340     5119                 BUF       = OPMSG_TDSC);
      341     5150        %FPT_WRITE                             (FPTN=OCMSG_ONOFF,
      342     5151                 STCLASS   = CONSTANT,
      343     5152                 DCB       = M$CSCG,
      344     5153                 BUF       = OPMSG_ONOFF);
      345     5184        %FPT_WRITE                             (FPTN=OCMSG_KERR,
      346     5185                 STCLASS   = CONSTANT,
      347     5186                 DCB       = M$CSCG,
      348     5187                 BUF       = OPMSG_KERR);
      349     5218        %FPT_WRITE                             (FPTN=OCMSG_IALN,
      350     5219                 STCLASS   = CONSTANT,
      351     5220                 DCB       = M$CSCG,
      352     5221                 BUF       = OPMSG_IALN);
      353     5252        %FPT_WRITE                             (FPTN=OCMSG_FPERR,
      354     5253                 STCLASS   = CONSTANT,
      355     5254                 DCB       = M$CSCG,
      356     5255                 BUF       = OPMSG_FPERR);
      357     5286        %FPT_WRITE                             (FPTN=OCMSG_UNIMP,
      358     5287                 STCLASS   = CONSTANT,
      359     5288                 DCB       = M$CSCG,
      360     5289                 BUF       = OPMSG_UNIMP);
      361     5320        %FPT_SYMBIO                            (FPTN=START_SYMB,
      362     5321                 DCB       = M$OSCG,
      363     5322                 STCLASS   = STATIC,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:115  
      364     5323                 BUF       = DEVNAME,
      365     5324                 STATION   = DEVNAME,
      366     5325                 ORDER     = FOMO_SOPEN#,
      367     5326                 NXEXT     = EXTENT);
      368     5350        %FPT_SYMBIO                            (FPTN=NXTEXT_SYMB,
      369     5351                 DCB       = M$OSCG,
      370     5352                 STCLASS   = CONSTANT,
      371     5353                 STATION   = DEVNAME,
      372     5354                 ORDER     = FOMO_NXEXT#,
      373     5355                 NXEXT     = EXTENT);
      374     5379        %FPT_SYMBIO                            (FPTN=CLOSE_SYMB,
      375     5380                 DCB       = M$OSCG,
      376     5381                 STCLASS   = CONSTANT,
      377     5382                 STATION   = DEVNAME,
      378     5383                 ORDER     = FOMO_SCLOS#);
      379     5407        %FPT_SYMBIO                            (FPTN=CONT_SYMB,
      380     5408                 DCB       = M$OSCG,
      381     5409                 STCLASS   = STATIC,
      382     5410                 STATION   = DEVNAME,
      383     5411                 BUF       = DEVNAME,
      384     5412                 NXEXT     = EXTENT,
      385     5413                 ORDER     = FOMO_SCONT#);
      386     5437        %FPT_SYMBIO                            (FPTN=SPACE_SYMB,
      387     5438                 DCB       = M$OSCG,
      388     5439                 STCLASS   = STATIC,
      389     5440                 STATION   = DEVNAME,
      390     5441                 BUF       = DEVNAME,
      391     5442                 NXEXT     = EXTENT,
      392     5443                 ORDER     = FOMO_SSPAC#);
      393     5467        %FPT_SYMBIO                            (FPTN=SPACEBLKS_SYMB,
      394     5468                 DCB       = M$OSCG,
      395     5469                 STCLASS   = STATIC,
      396     5470                 STATION   = DEVNAME,
      397     5471                 BUF       = DEVNAME,
      398     5472                 NXEXT     = EXTENT,
      399     5473                 ORDER     = FOMO_SSBLK#);
      400     5497        %FPT_SYMBIO                            (FPTN=WLR_SYMB,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:116  
      401     5498                 DCB       = M$OSCG,
      402     5499                 STCLASS   = STATIC,
      403     5500                 STATION   = DEVNAME,
      404     5501                 BUF       = DEVNAME,
      405     5502                 RECORD    = WLR_REC,
      406     5503                 ORDER     = FOMO_WRITE#);
      407     5527        %FPT_SYMBIO                            (FPTN=WCB_SYMB,
      408     5528                 DCB       = M$OSCG,
      409     5529                 STCLASS   = STATIC,
      410     5530                 STATION   = DEVNAME,
      411     5531                 BUF       = DEVNAME,
      412     5532                 RECORD    = WCB_REC,
      413     5533                 ORDER     = FOMO_WRITE#);
      414     5557        %VLP_SYMBWRITE                         (FPTN=WCB_REC,
      415     5558                 TOF       = YES,
      416     5559                 REPEATS   = 1,
      417     5560                 STCLASS   = STATIC);
      418     5575        %VLP_SYMBWRITE                         (FPTN=WLR_REC,
      419     5576                 TOF       = NO,
      420     5577                 REPEATS   = 1,
      421     5578                 STCLASS   = STATIC);
      422     5593        %FPT_SYMBIO                            (FPTN=WGR_SYMB,
      423     5594                 DCB       = M$OSCG,
      424     5595                 STCLASS   = STATIC,
      425     5596                 STATION   = DEVNAME,
      426     5597                 BUF       = DEVNAME,
      427     5598                 RECORD    = NIL,
      428     5599                 ORDER     = FOMO_WRITE#);
      429     5623        %FPT_SYMBIO                            (FPTN=SUSP_SYMB,
      430     5624                 DCB       = M$OSCG,
      431     5625                 STCLASS   = CONSTANT,
      432     5626                 STATION   = DEVNAME,
      433     5627                 ORDER     = FOMO_SHALT#);
      434     5651        %FPT_SYMBIO                            (FPTN=TOKEN_SYMB,
      435     5652                 DCB       = M$OSCG,
      436     5653                 STCLASS   = CONSTANT,
      437     5654                 STATION   = DEVNAME,
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:117  
      438     5655                 ORDER     = FOMO_STOKN#);
      439     5679        %FPT_WRSYSLOG                          (FPTN=LOG_ERR,
      440     5680                 ENTRY     = LOG_ERR_BUF,
      441     5681                 FILENUM   = 1,
      442     5682                 MMINHIB   = NO,
      443     5683                 SIZE      ="SIZEW(LOG_ERR_BUF)",
      444     5684                 TYPE      = EL_OSFI);
      445     5699
      446     5700        %FPT_SETFP                             (FPTN=START_FPRG,
      447     5701                 DCB       = M$FPRG,
      448     5702                 FPRG      = SYMB_FPRG,
      449     5703                 STATION   = SYMB_STA,
      450     5704                 STCLASS   = CONSTANT);
      451     5717
      452     5718        %VLP_FPRG                              (FPTN=SYMB_FPRG,
      453     5719                 STCLASS   = STATIC);
      454     5740
      455     5741        %VLP_STATION                           (FPTN=SYMB_STA,
      456     5742                 STCLASS   = STATIC);
      457     5769        %FPT_PRIV                              (FPTN=RESET_PRIVS);
      458     5784
      459     5785
      460     5786
      461     5787        /**/
      462     5788        /* SUBS */
      463     5789        /**/
      464     5790        %SUB FIL$=FO_FIL$;
      465     5791        %SUB DEV$=FO_DEV$;
      466     5792        %SUB JOB$=FO_JOB$;
      467     5793        %SUB B$ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
      468     5794        %SUB FOREVER="WHILE ('1'B)";
      469     5795        %EQU_CG;
      470     5843        %SUB F_FO='0617'O;
      471     5844        %SUB M_D='04';
      472     5845        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:118  
      473     5846        /*
      474     5847
      475     5848               ####    #####   #   #    ###     ###    #####
      476     5849               #   #   #       #   #     #     #   #   #
      477     5850               #   #   #       #   #     #     #       #
      478     5851               #   #   ####    #   #     #     #       ####
      479     5852               #   #   #       #   #     #     #       #
      480     5853               #   #   #        # #      #     #   #   #
      481     5854               ####    #####     #      ###     ###    #####
      482     5855
      483     5856
      484     5857                    #####   #   #   #####   #   #   #####
      485     5858                    #       #   #   #       #   #     #
      486     5859                    #       #   #   #       ##  #     #
      487     5860                    ####    #   #   ####    # # #     #
      488     5861                    #       #   #   #       #  ##     #
      489     5862                    #        # #    #       #   #     #
      490     5863                    #####     #     #####   #   #     #
      491     5864
      492     5865        */
      493     5866        /*F* NAME:         FOD$EVENT
      494     5867             PURPOSE:      To schedule output symbiont devices
      495     5868             DESCRIPTION:  FOD$EVENT takes the form of an event-reporting
      496     5869                           routine.  All events applicable to output
      497     5870                           symbiont devices are reported here, with the
      498     5871                           result that the appropriate scheduling functions
      499     5872                           are performed.
      500     5873
      501     5874                           The parameters are the event code (EVENT) and
      502     5875                           information specific to some events (DINFO).
      503     5876                           An implicit parameter for all events is the
      504     5877                           pointer to the device for which the event is
      505     5878                           being reported (FO_DEV$).
      506     5879
      507     5880                           The ALTRET is taken if it is determined that
      508     5881                           a device (other that the one evented) may need
      509     5882                           to be scheduled.  This is done by reporting
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:119  
      510     5883                           the IDLE event on all idle devices.  This is
      511     5884                           the only help that FOD$EVENT needs in doing
      512     5885                           his scheduling.
      513     5886        */
      514     5887
      515     5888    1   FOD$EVENT: ENTRY (EVENT,DINFO) ALTRET;

   5888  6 000003   000000 700200 xent  FOD$EVENT    TSX0  ! X66_AUTO_2
         6 000004   000112 000002                    ZERO    74,2

      516     5889                                /* IF DEVICE EVENT TRACER IS TURNED ON,
      517     5890                                   TRACE THE EVENT */
      518     5891    1         IF FO_DET ~= 0 THEN

   5891  6 000005   000000 235000 xsym               LDA     FO_DET
         6 000006   000040 600000 6                  TZE     s:5901

      519     5892    2           DO;

      520     5893    2           FO_DETL.CODE(FO_DETX)=EVENT;

   5893  6 000007   000000 236000 xsym               LDQ     FO_DETX
         6 000010   000024 402007                    MPY     20,DL
         6 000011   200003 470500                    LDP0    @EVENT,,AUTO
         6 000012   000000 720100                    LXL0    0,,PR0
         6 000013   000000 740006 xsym               STX0    FO_DETL,QL

      521     5894    2           IF ADDR(DINFO) ~= ADDR(NIL) THEN

   5894  6 000014   200004 236100                    LDQ     @DINFO,,AUTO
         6 000015   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000016   000024 600000 6                  TZE     s:5896

      522     5895    2            FO_DETL.INFO(FO_DETX)=DINFO;

   5895  6 000017   000000 236000 xsym               LDQ     FO_DETX
         6 000020   000024 402007                    MPY     20,DL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:120  
         6 000021   200004 471500                    LDP1    @DINFO,,AUTO
         6 000022   100000 720100                    LXL0    0,,PR1
         6 000023   000000 440006 xsym               SXL0    FO_DETL,QL

      523     5896    2           FO_DETL.DEVF(FO_DETX)=DEV$->FO$DEV;

   5896  6 000024   000000 236000 xsym               LDQ     FO_DETX
         6 000025   000120 402007                    MPY     80,DL
         6 000026   000000 471400 xsym               LDP1    FO_DEV$
         6 000027   000006 100500                    MLR     fill='000'O
         6 000030   100000 000111                    ADSC9   0,,PR1                   cn=0,n=73
         6 000031   000001 000114 xsym               ADSC9   FO_DETL+1,Q              cn=0,n=76

      524     5897    2           FO_DETX=FO_DETX+1;

   5897  6 000032   000000 235000 xsym               LDA     FO_DETX
         6 000033   000001 035007                    ADLA    1,DL
         6 000034   000000 755000 xsym               STA     FO_DETX

      525     5898    2           IF FO_DETX > FOMI_DTMX# THEN FO_DETX=0;

   5898  6 000035   000020 115007                    CMPA    16,DL
         6 000036   000040 602000 6                  TNC     s:5901

   5898  6 000037   000000 450000 xsym               STZ     FO_DETX

      526     5899    2           END;

      527     5900        /* PICK UP DEVICE STATE */
      528     5901    1         STATE=DEV$->FO$DEV.STATE;

   5901  6 000040   000000 470400 xsym               LDP0    FO_DEV$
         6 000041   000011 236100                    LDQ     9,,PR0
         6 000042   000011 772000                    QRL     9
         6 000043   000777 376007                    ANQ     511,DL
         6 000044   200044 756100                    STQ     STATE,,AUTO

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:121  
      529     5902    1         DEVNAME=DEV$->FO$DEV.NAME;

   5902  6 000045   040000 100500                    MLR     fill='040'O
         6 000046   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         6 000047   000000 000010 1                  ADSC9   DEVNAME                  cn=0,n=8

      530     5903    1         FIL$ = DEV$->FO$DEV.CFIL$;

   5903  6 000050   000002 236100                    LDQ     2,,PR0
         6 000051   000000 756000 xsym               STQ     FO_FIL$

      531     5904        /***
      532     5905         ***
      533     5906         ***
      534     5907         ***
      535     5908         ***     VECTOR ON EVENT CODE
      536     5909         ***
      537     5910         ***
      538     5911         ***
      539     5912         ***/
      540     5913    2           DO CASE (EVENT);

   5913  6 000052   200003 471500                    LDP1    @EVENT,,AUTO
         6 000053   100000 235100                    LDA     0,,PR1
         6 000054   000024 115007                    CMPA    20,DL
         6 000055   000057 602005 6                  TNC     s:5913+5,AL
         6 000056   004237 710000 6                  TRA     DEV_EVRTN
         6 000057   004237 710000 6                  TRA     DEV_EVRTN
         6 000060   000103 710000 6                  TRA     s:5932
         6 000061   002736 710000 6                  TRA     s:7202
         6 000062   004225 710000 6                  TRA     s:7724
         6 000063   000135 710000 6                  TRA     s:5969
         6 000064   000174 710000 6                  TRA     s:6030
         6 000065   002004 710000 6                  TRA     s:6788
         6 000066   000226 710000 6                  TRA     s:6059
         6 000067   000255 710000 6                  TRA     s:6093
         6 000070   000274 710000 6                  TRA     s:6120
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:122  
         6 000071   000515 710000 6                  TRA     s:6279
         6 000072   001464 710000 6                  TRA     s:6617
         6 000073   002637 710000 6                  TRA     s:7128
         6 000074   002270 710000 6                  TRA     s:6918
         6 000075   002332 710000 6                  TRA     s:7010
         6 000076   001723 710000 6                  TRA     s:6743
         6 000077   004237 710000 6                  TRA     DEV_EVRTN
         6 000100   000164 710000 6                  TRA     s:6003
         6 000101   000476 710000 6                  TRA     s:6244
         6 000102   000476 710000 6                  TRA     s:6244

      541     5914        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:123  
      542     5915        /*
      543     5916                            #####    ###     ###    #   #
      544     5917                              #     #   #   #   #   #   #
      545     5918                              #     #       #   #   ##  #
      546     5919                              #     #       #   #   # # #
      547     5920                              #     #       #   #   #  ##
      548     5921                              #     #   #   #   #   #   #
      549     5922                              #      ###     ###    #   #
      550     5923        */
      551     5924        /**
      552     5925         **
      553     5926         **
      554     5927         **      TERMINAL CONNECT EVENT
      555     5928         **
      556     5929         **
      557     5930         **/
      558     5931    2             CASE (FODE_TCON#);

      559     5932    3                 DO CASE (STATE);

   5932  6 000103   200044 235100                    LDA     STATE,,AUTO
         6 000104   000001 115007                    CMPA    1,DL
         6 000105   000107 602005 6                  TNC     s:5932+4,AL
         6 000106   000132 710000 6                  TRA     s:5949
         6 000107   000110 710000 6                  TRA     s:5935

      560     5933    3                   CASE (FOS_IDLE#);

      561     5934                                      /* MATCHDEV altrets if we find a device */
      562     5935    3                     CALL MATCHDEV ALTRET(TCON0);

   5935  6 000110   006672 701000 6                  TSX1    MATCHDEV
         6 000111   000114 702000 6                  TSX2    TCON0

      563     5936                                      /* Set LPAVAIL to 1 if there's now a
      564     5937                                         device for it */
      565     5938    3                     CALL AVAIL;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:124  

   5938  6 000112   007062 701000 6                  TSX1    AVAIL
         6 000113   000000 011000                    NOP     0

   5935  6 000114                       TCON0        null
      566     5939    3   TCON0:            ;
      567     5940    3                     CALL TCONMSG_DEV;

   5940  6 000114   006507 701000 6                  TSX1    TCONMSG_DEV
         6 000115   000000 011000                    NOP     0

      568     5941    3                     IF DEV$->FO$DEV.FORM ~= ' ' THEN

   5941  6 000116   000000 470400 xsym               LDP0    FO_DEV$
         6 000117   040000 106500                    CMPC    fill='040'O
         6 000120   000015 600006                    ADSC9   13,,PR0                  cn=3,n=6
         6 000121   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 000122   004237 600000 6                  TZE     DEV_EVRTN

      569     5942    4                       DO;

      570     5943    4                       CALL FOR$MOUNT ALTRET(DEV_EVRTN);

   5943  6 000123   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 000124   000000 701000 xent               TSX1    FOR$MOUNT
         6 000125   004237 702000 6                  TSX2    DEV_EVRTN

      571     5944    4                       IF NOSTART = 0 THEN

   5944  6 000126   200004 470500                    LDP0    @DINFO,,AUTO
         6 000127   000000 235100                    LDA     0,,PR0
         6 000130   004232 600000 6                  TZE     DEV_NXTF

      572     5945                                      /* Go to the call to SCHED_DEV */
      573     5946    4                        GOTO DEV_NXTF;
      574     5947    4                       END;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:125  
   5947  6 000131   004237 710000 6                  TRA     DEV_EVRTN

      575     5948    3                   CASE (ELSE);

      576     5949    3                     CALL DEV_EVSCREECH;

   5949  6 000132   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 000133   000000 011000                    NOP     0

      577     5950    3                 END;

   5950  6 000134   004237 710000 6                  TRA     DEV_EVRTN

      578     5951        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:126  
      579     5952        /*
      580     5953                            #####   ####     ###     ###
      581     5954                              #     #   #   #   #   #   #
      582     5955                              #     #   #   #       #
      583     5956                              #     #   #    ###    #
      584     5957                              #     #   #       #   #
      585     5958                              #     #   #   #   #   #   #
      586     5959                              #     ####     ###     ###
      587     5960        */
      588     5961        /**
      589     5962         **
      590     5963         **
      591     5964         **      TERMINAL DISCONNECT EVENT
      592     5965         **
      593     5966         **
      594     5967         **/
      595     5968    2             CASE (FODE_TDSC#);

      596     5969    3                 DO CASE (STATE);

   5969  6 000135   200044 235100                    LDA     STATE,,AUTO
         6 000136   000001 115007                    CMPA    1,DL
         6 000137   000141 602005 6                  TNC     s:5969+4,AL
         6 000140   000157 710000 6                  TRA     s:5980
         6 000141   000142 710000 6                  TRA     DEV_GONE

      597     5970    3                   CASE (FOS_IDLE#);

   5970  6 000142                       DEV_GONE     null
      598     5971    3   DEV_GONE:         ;
      599     5972    3                     OPMSG_TDSC.DEVNM=DEVNAME;

   5972  6 000142   000000 237000 1                  LDAQ    DEVNAME
         6 000143   000101 755000 1                  STA     OPMSG_TDSC+3
         6 000144   000102 756000 1                  STQ     OPMSG_TDSC+4

      600     5973    3                     CALL M$WRITE (OCMSG_TDSC);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:127  

   5973  6 000145   000360 630400 2                  EPPR0   OCMSG_TDSC
         6 000146   040001 713400                    CLIMB   write
         6 000147   401400 401760                    pmme    nvectors=4

      601     5974    3                     CALL MATCHDEV ALTRET(TDSC0);

   5974  6 000150   006672 701000 6                  TSX1    MATCHDEV
         6 000151   000154 702000 6                  TSX2    TDSC0

      602     5975    3                     CALL UNAVAIL;

   5975  6 000152   007115 701000 6                  TSX1    UNAVAIL
         6 000153   000000 011000                    NOP     0

   5972  6 000154                       TDSC0        null
      603     5976    3   TDSC0:            ;
      604     5977    3                     CALL REM_DEV;

   5977  6 000154   006612 701000 6                  TSX1    REM_DEV
         6 000155   000000 011000                    NOP     0

      605     5978    3                     GOTO DEV_EVALT;

   5978  6 000156   004240 710000 6                  TRA     DEV_EVALT

      606     5979    3                   CASE (ELSE);

      607     5980    3                     CALL DEV_EVSCREECH;

   5980  6 000157   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 000160   000000 011000                    NOP     0

      608     5981    3                     CALL FIN_DEV;

   5981  6 000161   005431 701000 6                  TSX1    FIN_DEV
         6 000162   000000 011000                    NOP     0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:128  

      609     5982    3                     GOTO DEV_GONE;

   5982  6 000163   000142 710000 6                  TRA     DEV_GONE

      610     5983
      611     5984    3                 END;

      612     5985        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:129  
      613     5986        /*
      614     5987                            TTTTT  DDDD   RRRR    QQQ
      615     5988                              T    D   D  R   R  Q   Q
      616     5989                              T    D   D  R   R  Q   Q
      617     5990                              T    D   D  RRRR   Q   Q
      618     5991                              T    D   D  R R    Q Q Q
      619     5992                              T    D   D  R  R   Q  QQ
      620     5993                              T    DDDD   R   R   QQQ
      621     5994        */
      622     5995        /**
      623     5996         **
      624     5997         **
      625     5998         **      TERMINAL DISCONNECT REQUEST EVENT
      626     5999         **
      627     6000         **
      628     6001         **/
      629     6002    2             CASE (FODE_TDRQ#);

      630     6003    2               CALL M$DEACTIVATE (DSCGO_DEV) ALTRET(DEV_EVRTN);

   6003  6 000164   000220 630400 2                  EPPR0   DSCGO_DEV
         6 000165   500001 713400                    CLIMB   alt,+32769
         6 000166   401400 401760                    pmme    nvectors=4
         6 000167   004237 702000 6                  TSX2    DEV_EVRTN

      631     6004                                           /*
      632     6005                                           Make sure we don't try to start
      633     6006                                           any files on this device while
      634     6007                                           we're expecting a disconnect,
      635     6008                                           otherwise we could get a TDSC
      636     6009                                           on a symbiont device.
      637     6010                                           */
      638     6011    2               DEV$->FO$DEV.FLG.IDSC = '1'B;

   6011  6 000170   000000 470400 xsym               LDP0    FO_DEV$
         6 000171   000001 236003                    LDQ     1,DU
         6 000172   000012 256100                    ORSQ    10,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:130  
         6 000173   004237 710000 6                  TRA     DEV_EVRTN

      639     6012        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:131  
      640     6013        /*
      641     6014                            #####   ####    ####    #   #
      642     6015                              #     #   #   #   #   #  #
      643     6016                              #     #   #   #   #   # #
      644     6017                              #     ####    ####    ##
      645     6018                              #     #   #   # #     # #
      646     6019                              #     #   #   #  #    #  #
      647     6020                              #     ####    #   #   #   #
      648     6021        */
      649     6022        /**
      650     6023         **
      651     6024         **
      652     6025         **      TERMINAL BREAK EVENT
      653     6026         **
      654     6027         **
      655     6028         **/
      656     6029    2             CASE (FODE_TBRK#);

      657     6030    2               IF INFO = %CG_TBRK_BRK# THEN

   6030  6 000174   200004 473500                    LDP3    @DINFO,,AUTO
         6 000175   300000 235100                    LDA     0,,PR3
         6 000176   000001 115007                    CMPA    1,DL
         6 000177   000217 601000 6                  TNZ     s:6039

      658     6031    3                 DO CASE (STATE);

   6031  6 000200   200044 235100                    LDA     STATE,,AUTO
         6 000201   000003 115007                    CMPA    3,DL
         6 000202   000204 602005 6                  TNC     s:6031+4,AL
         6 000203   004237 710000 6                  TRA     DEV_EVRTN
         6 000204   000216 710000 6                  TRA     s:6037
         6 000205   000207 710000 6                  TRA     s:6033
         6 000206   000212 710000 6                  TRA     s:6036

      659     6032    3                   CASE (FOS_BUSY#);

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:132  
      660     6033    3                     DEV$->FO$DEV.SUSRSN=FOSR_TBRK#;

   6033  6 000207   000003 236007                    LDQ     3,DL
         6 000210   000011 552104                    STBQ    9,'04'O,PR0

      661     6034    3                     GOTO DEV_SUSPEND;

   6034  6 000211   003034 710000 6                  TRA     DEV_SUSPEND

      662     6035    3                   CASE (FOS_SUSP#);

      663     6036    3                     IF DEV$->FO$DEV.SUSRSN=FOSR_TBRK# THEN GOTO DEV_CONTINUE;

   6036  6 000212   000011 236100                    LDQ     9,,PR0
         6 000213   000777 376007                    ANQ     511,DL
         6 000214   000003 116007                    CMPQ    3,DL
         6 000215   003141 600000 6                  TZE     DEV_CONTINUE

      664     6037    3                 END;

   6037  6 000216   004237 710000 6                  TRA     DEV_EVRTN

      665     6038    2               ELSE
      666     6039    2                IF INFO = %CG_TBRK_EC# THEN

   6039  6 000217   000002 115007                    CMPA    2,DL
         6 000220   004237 601000 6                  TNZ     DEV_EVRTN

      667     6040    2                 CALL M$DEACTIVATE (DISCT_DEV) ALTRET(DEV_EVRTN);

   6040  6 000221   000200 630400 2                  EPPR0   DISCT_DEV
         6 000222   500001 713400                    CLIMB   alt,+32769
         6 000223   401400 401760                    pmme    nvectors=4
         6 000224   004237 702000 6                  TSX2    DEV_EVRTN
         6 000225   004237 710000 6                  TRA     DEV_EVRTN

      668     6041        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:133  
      669     6042        /*
      670     6043                             ###    #####   ####     ###     ###
      671     6044                            #   #     #     #   #   #   #   #   #
      672     6045                            #         #     #   #   #       #
      673     6046                             ###      #     #   #    ###    #
      674     6047                                #     #     #   #       #   #
      675     6048                            #   #     #     #   #   #   #   #   #
      676     6049                             ###      #     ####     ###     ###
      677     6050        */
      678     6051        /**
      679     6052         **
      680     6053         **
      681     6054         **      SYMBIONT TERMINAL DISCONNECT EVENT
      682     6055         **
      683     6056         **
      684     6057         **/
      685     6058    2             CASE (FODE_STDSC#);

      686     6059    3                 DO CASE (STATE);

   6059  6 000226   200044 235100                    LDA     STATE,,AUTO
         6 000227   000005 115007                    CMPA    5,DL
         6 000230   000232 602005 6                  TNC     s:6059+4,AL
         6 000231   000252 710000 6                  TRA     s:6070
         6 000232   000252 710000 6                  TRA     s:6070
         6 000233   000237 710000 6                  TRA     s:6065
         6 000234   000237 710000 6                  TRA     s:6065
         6 000235   000237 710000 6                  TRA     s:6065
         6 000236   000254 710000 6                  TRA     s:6074

      687     6060    3                   CASE (FOS_BUSY#,FOS_SUSP#,FOS_SPRQ#);

      688     6061                                           /*
      689     6062                                           This only needs to be set on a TDSC.
      690     6063                                           Make sure its off.
      691     6064                                           */
      692     6065    3                     DEV$->FO$DEV.FLG.IDSC = '0'B;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:134  

   6065  6 000237   000000 236000 7                  LDQ     0
         6 000240   000012 356100                    ANSQ    10,,PR0

      693     6066    3                     CALL FIN_DEV;

   6066  6 000241   005431 701000 6                  TSX1    FIN_DEV
         6 000242   000000 011000                    NOP     0

      694     6067    3                     IF DEV$->FO$DEV.FLG.QUIT THEN CALL QUIT_DEV;

   6067  6 000243   000000 470400 xsym               LDP0    FO_DEV$
         6 000244   000012 236100                    LDQ     10,,PR0
         6 000245   000040 316007                    CANQ    32,DL
         6 000246   000254 600000 6                  TZE     s:6074

   6067  6 000247   005511 701000 6                  TSX1    QUIT_DEV
         6 000250   000000 011000                    NOP     0
         6 000251   000254 710000 6                  TRA     s:6074

      695     6068    3                   CASE (FOS_IALN#);

      696     6069    3                   CASE (ELSE);

      697     6070    3                     CALL DEV_EVSCREECH;

   6070  6 000252   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 000253   000000 011000                    NOP     0

      698     6071    3                 END;

      699     6072                                      /* Go up to terminal disconnect case
      700     6073                                         (for an idle device) */
      701     6074    2               GOTO DEV_GONE;

   6074  6 000254   000142 710000 6                  TRA     DEV_GONE

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:135  
      702     6075        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:136  
      703     6076        /*
      704     6077                             ###    #####   #   #   #       ####
      705     6078                            #   #     #     #   #   #       #   #
      706     6079                            #         #     #   #   #       #   #
      707     6080                             ###      #     #####   #       #   #
      708     6081                                #     #     #   #   #       #   #
      709     6082                            #   #     #     #   #   #       #   #
      710     6083                             ###      #     #   #   #####   ####
      711     6084        */
      712     6085        /**
      713     6086         **
      714     6087         **
      715     6088         **      SYMBIONT TERMINAL HALTED EVENT
      716     6089         **
      717     6090         **
      718     6091         **/
      719     6092    2             CASE (FODE_STHLD#);

      720     6093    3                 DO CASE (STATE);

   6093  6 000255   200044 235100                    LDA     STATE,,AUTO
         6 000256   000004 115007                    CMPA    4,DL
         6 000257   000261 602005 6                  TNC     s:6093+4,AL
         6 000260   000271 710000 6                  TRA     s:6100
         6 000261   000271 710000 6                  TRA     s:6100
         6 000262   000265 710000 6                  TRA     s:6095
         6 000263   000271 710000 6                  TRA     s:6100
         6 000264   000270 710000 6                  TRA     s:6098

      721     6094    3                   CASE (FOS_BUSY#);

      722     6095    3                     DEV$->FO$DEV.SUSRSN=FOSR_MANU#;

   6095  6 000265   000000 236003                    LDQ     0,DU
         6 000266   000011 552104                    STBQ    9,'04'O,PR0

      723     6096    3                     GOTO DEV_SUSPENDED;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:137  

   6096  6 000267   000541 710000 6                  TRA     DEV_SUSPENDED

      724     6097    3                   CASE (FOS_SPRQ#);

      725     6098    3                     GOTO DEV_SUSPENDED;

   6098  6 000270   000541 710000 6                  TRA     DEV_SUSPENDED

      726     6099    3                   CASE (ELSE);

      727     6100    3                     CALL DEV_EVSCREECH;

   6100  6 000271   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 000272   000000 011000                    NOP     0

      728     6101    3                 END;

   6101  6 000273   004237 710000 6                  TRA     DEV_EVRTN

      729     6102        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:138  
      730     6103        /*
      731     6104                             ###    #####   #####   ####    ####
      732     6105                            #   #   #       #       #   #   #   #
      733     6106                            #       #       #       #   #   #   #
      734     6107                             ###    ####    ####    ####    ####
      735     6108                                #   #       #       # #     # #
      736     6109                            #   #   #       #       #  #    #  #
      737     6110                             ###    #       #####   #   #   #   #
      738     6111        */
      739     6112        /**
      740     6113         **
      741     6114         **
      742     6115         **      SYMBIONT FILE ERROR EVENT
      743     6116         **
      744     6117         **
      745     6118         **/
      746     6119    2             CASE (FODE_SFERR#);

      747     6120    3                 DO CASE (STATE);

   6120  6 000274   200044 235100                    LDA     STATE,,AUTO
         6 000275   000004 115007                    CMPA    4,DL
         6 000276   000300 602005 6                  TNC     s:6120+4,AL
         6 000277   000304 710000 6                  TRA     s:6123
         6 000300   000304 710000 6                  TRA     s:6123
         6 000301   000307 710000 6                  TRA     s:6130
         6 000302   000304 710000 6                  TRA     s:6123
         6 000303   000307 710000 6                  TRA     s:6130

      748     6121    3                   CASE (FOS_BUSY#,FOS_SPRQ#);

      749     6122    3                   CASE (ELSE);

      750     6123    3                     CALL DEV_EVSCREECH;

   6123  6 000304   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 000305   000000 011000                    NOP     0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:139  

      751     6124    3                     GOTO DEV_EVRTN;

   6124  6 000306   004237 710000 6                  TRA     DEV_EVRTN

      752     6125    3                 END;

      753     6126                                /* MOOS PASSES THE ERRANT BLOCK NUMBER,
      754     6127                                   AND THE ERROR CODE, IN THE SYMBIONT
      755     6128                                   BUFFER PAGE ITSELF.  AT THIS POINT
      756     6129                                   MOOS HAS SUSPENDED THE DEVICE. */
      757     6130    2               DEV$->FO$DEV.STATE=FOS_SUSP#;

   6130  6 000307   002000 236007                    LDQ     1024,DL
         6 000310   000011 552110                    STBQ    9,'10'O,PR0

      758     6131    2               GRAN$=DEV$->FO$DEV.SPG$;

   6131  6 000311   000001 236100                    LDQ     1,,PR0
         6 000312   200036 756100                    STQ     GRAN$,,AUTO

      759     6132    2               BLK#=GRAN$->FO$SBUF.FERR.BLK#;

   6132  6 000313   200036 473500                    LDP3    GRAN$,,AUTO
         6 000314   300012 235100                    LDA     10,,PR3
         6 000315   200030 755100                    STA     BLK#,,AUTO

      760     6133                                /* FIGURE OUT WHAT TO DO BASED ON THE
      761     6134                                   ERROR CODE */
      762     6135    2               LOGIT=0;

   6135  6 000316   200046 450100                    STZ     LOGIT,,AUTO

      763     6136    3                 DO CASE (GRAN$->FO$SBUF.FERR.CODE);

   6136  6 000317   300010 235100                    LDA     8,,PR3
         6 000320   000004 115007                    CMPA    4,DL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:140  
         6 000321   000323 602005 6                  TNC     s:6136+4,AL
         6 000322   000366 710000 6                  TRA     s:6175
         6 000323   000332 710000 6                  TRA     s:6145
         6 000324   000364 710000 6                  TRA     s:6172
         6 000325   000327 710000 6                  TRA     s:6140
         6 000326   000340 710000 6                  TRA     s:6152

      764     6137
      765     6138                                /* DISK ERROR */
      766     6139    3                   CASE (FOME_DSKERR#);

      767     6140    3                     DEV$->FO$DEV.SUSRSN=FOSR_FERR#;

   6140  6 000327   000007 236007                    LDQ     7,DL
         6 000330   000011 552104                    STBQ    9,'04'O,PR0

      768     6141    3                     GOTO DEV_SUSPENDED;

   6141  6 000331   000541 710000 6                  TRA     DEV_SUSPENDED

      769     6142
      770     6143                                /* FILE INCONSISTENCY - BAD STAMP IN GRAN */
      771     6144    3                   CASE (FOME_STAMP#);

      772     6145    3                     LOG_ERR_BUF.SUBC=EL_OSFI_STAMP#;

   6145  6 000332   000001 235007                    LDA     1,DL
         6 000333   000046 755000 1                  STA     LOG_ERR_BUF

      773     6146    3                     STAMP=GRAN$->FO$SBUF.FERR.EXPSTAMP;

   6146  6 000334   300011 236100                    LDQ     9,,PR3
         6 000335   200042 756100                    STQ     STAMP,,AUTO

      774     6147    3                     LOG_ERR_BUF.EXPSTAMP=STAMP;

   6147  6 000336   000050 756000 1                  STQ     LOG_ERR_BUF+2
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:141  

      775     6148    3                     GOTO FERR1;

   6148  6 000337   000352 710000 6                  TRA     FERR1

      776     6149
      777     6150                                /* FILE INCONSISTENCY - BAD GRANULE FORMAT */
      778     6151    3                   CASE (FOME_GRNFMT#);

      779     6152    3                     LOG_ERR_BUF.SUBC=EL_OSFI_FMT#;

   6152  6 000340   000002 235007                    LDA     2,DL
         6 000341   000046 755000 1                  STA     LOG_ERR_BUF

      780     6153    3                     LOG_ERR_BUF.AVAIL=GRAN$->FO$SBUF.FERR.AVAIL;

   6153  6 000342   300013 236100                    LDQ     11,,PR3
         6 000343   777777 376007                    ANQ     -1,DL
         6 000344   000051 756000 1                  STQ     LOG_ERR_BUF+3

      781     6154    3                     LOG_ERR_BUF.NAVX=GRAN$->FO$SBUF.FERR.NAVX;

   6154  6 000345   300013 236100                    LDQ     11,,PR3
         6 000346   000022 772000                    QRL     18
         6 000347   000050 756000 1                  STQ     LOG_ERR_BUF+2

      782     6155    3                     STAMP=GRAN$->FO$SBUF.FERR.STAMP;

   6155  6 000350   300014 236100                    LDQ     12,,PR3
         6 000351   200042 756100                    STQ     STAMP,,AUTO

   6155  6 000352                       FERR1        null
      783     6156    3   FERR1:            ;
      784     6157    3                     LOG_ERR_BUF.STAMP=GRAN$->FO$SBUF.FERR.STAMP;

   6157  6 000352   300014 236100                    LDQ     12,,PR3
         6 000353   000047 756000 1                  STQ     LOG_ERR_BUF+1
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:142  

      785     6158    3                     LOG_ERR_BUF.SYSID=FIL$->FO$FIL.SYSID;

   6158  6 000354   000000 474400 xsym               LDP4    FO_FIL$
         6 000355   400012 220100                    LDX0    10,,PR4
         6 000356   000052 740000 1                  STX0    LOG_ERR_BUF+4

      786     6159    3                     LOG_ERR_BUF.NUM  =FIL$->FO$FIL.NUM;

   6159  6 000357   400012 721100                    LXL1    10,,PR4
         6 000360   000052 441000 1                  SXL1    LOG_ERR_BUF+4

      787     6160    3                     LOGIT=1;

   6160  6 000361   000001 235007                    LDA     1,DL
         6 000362   200046 755100                    STA     LOGIT,,AUTO
         6 000363   000371 710000 6                  TRA     s:6183

      788     6161
      789     6162                                /* BAD DISK ADDRESS IN MOOS - REMOVE FILE
      790     6163                                   FROM DEVICE AND WE'LL TRY TO PRINT IT
      791     6164                                   AFTER NEXT BOOT.  THIS ERROR SHOULD
      792     6165                                   NEVER HAPPEN BECAUSE WE CHECK ALL EXTENTS
      793     6166                                   AS WE PICK 'EM OUT OF THE FIT, SO IT
      794     6167                                   MUST BE THAT THE EXTENT THAT WAS BAD
      795     6168                                   WENT BAD IN CORE AFTER WE CHECKED IT.
      796     6169                                   HENCE THERE IS NOTHING WRONG WITH THE
      797     6170                                   FILE ITSELF, SO WE'LL TRY ANOTHER DAY. */
      798     6171    3                   CASE (FOME_DSKADD#);

      799     6172    3                     LOGIT=0;

   6172  6 000364   200046 450100                    STZ     LOGIT,,AUTO
         6 000365   000371 710000 6                  TRA     s:6183

      800     6173
      801     6174    3                   CASE (ELSE);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:143  

      802     6175    3                     CALL DEV_EVSCREECH;

   6175  6 000366   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 000367   000000 011000                    NOP     0

      803     6176    3                     GOTO DEV_EVRTN;

   6176  6 000370   004237 710000 6                  TRA     DEV_EVRTN

      804     6177
      805     6178    3                 END;

      806     6179                                /* LOGIT = 0 MEANS SOMETHING WRONG WITH
      807     6180                                               THE FILE SO DELETE IT.
      808     6181                                   LOGIT = 1 MEANS REMOVE THE FILE BUT
      809     6182                                               DON'T DELETE IT. */
      810     6183    2               EXT$ = FIL$->FO$FIL.EXT$;

   6183  6 000371   000000 474400 xsym               LDP4    FO_FIL$
         6 000372   400002 236100                    LDQ     2,,PR4
         6 000373   200045 756100                    STQ     EXT$,,AUTO

      811     6184                                /* ERROR WAS IN THE FILE ITSELF.  JERK
      812     6185                                   THE FILE OFF THE DEVICE AND THEN EITHER
      813     6186                                   REMOVE OR DELETE IT, DEPENDING ON THE
      814     6187                                   NATURE OF THE ERROR. */
      815     6188    2               IF LOGIT = 1 THEN

   6188  6 000374   200046 235100                    LDA     LOGIT,,AUTO
         6 000375   000001 115007                    CMPA    1,DL
         6 000376   000473 601000 6                  TNZ     s:6221

      816     6189    3                 DO;

      817     6190    3                 FRDAD = 0;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:144  
   6190  6 000377   200027 450100                    STZ     FRDAD,,AUTO

      818     6191    3                 FIL_CNUM = 0;

   6191  6 000400   200021 450100                    STZ     FIL_CNUM,,AUTO

      819     6192    3                 GRANS = 0;

   6192  6 000401   200034 450100                    STZ     GRANS,,AUTO

      820     6193    3                 HASH = EXT$->FO$EXT.STAMP.HASH;

   6193  6 000402   200045 475500                    LDP5    EXT$,,AUTO
         6 000403   500002 236100                    LDQ     2,,PR5
         6 000404   000011 772000                    QRL     9
         6 000405   200031 756100                    STQ     HASH,,AUTO

   6193  6 000406                       NXTEXT       null
      821     6194    3   NXTEXT:       ;
      822     6195    3                 IF EXT$->FO$EXT.STAMP.HASH ~= HASH THEN

   6195  6 000406   200045 470500                    LDP0    EXT$,,AUTO
         6 000407   000002 236100                    LDQ     2,,PR0
         6 000410   000011 772000                    QRL     9
         6 000411   200031 116100                    CMPQ    HASH,,AUTO
         6 000412   000422 600000 6                  TZE     s:6201

      823     6196    4                   DO;

      824     6197    4                   FIL_CNUM = FIL_CNUM + 1;

   6197  6 000413   200021 235100                    LDA     FIL_CNUM,,AUTO
         6 000414   000001 035007                    ADLA    1,DL
         6 000415   200021 755100                    STA     FIL_CNUM,,AUTO

      825     6198    4                   HASH = EXT$->FO$EXT.STAMP.HASH;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:145  
   6198  6 000416   000002 236100                    LDQ     2,,PR0
         6 000417   000011 772000                    QRL     9
         6 000420   200031 756100                    STQ     HASH,,AUTO

      826     6199    4                   FRDAD = 0;

   6199  6 000421   200027 450100                    STZ     FRDAD,,AUTO

      827     6200    4                   END;

      828     6201    3                 IF GRANS + EXT$->FO$EXT.GRANS <= BLK# THEN

   6201  6 000422   000001 236100                    LDQ     1,,PR0
         6 000423   000033 772000                    QRL     27
         6 000424   200034 036100                    ADLQ    GRANS,,AUTO
         6 000425   200030 116100                    CMPQ    BLK#,,AUTO
         6 000426   000430 600000 6                  TZE     s:6203
         6 000427   000445 603000 6                  TRC     s:6209

      829     6202    4                   DO;

      830     6203    4                   FRDAD = FRDAD + EXT$->FO$EXT.GRANS;

   6203  6 000430   000001 236100                    LDQ     1,,PR0
         6 000431   000033 772000                    QRL     27
         6 000432   200027 036100                    ADLQ    FRDAD,,AUTO
         6 000433   200027 756100                    STQ     FRDAD,,AUTO

      831     6204    4                   GRANS = GRANS + EXT$->FO$EXT.GRANS;

   6204  6 000434   000001 236100                    LDQ     1,,PR0
         6 000435   000033 772000                    QRL     27
         6 000436   200034 036100                    ADLQ    GRANS,,AUTO
         6 000437   200034 756100                    STQ     GRANS,,AUTO

      832     6205    4                   EXT$=EXT$->FO$EXT.LNK$;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:146  
   6205  6 000440   000000 236100                    LDQ     0,,PR0
         6 000441   200045 756100                    STQ     EXT$,,AUTO

      833     6206    4                   IF EXT$ ~= ADDR(NIL) THEN

   6206  6 000442   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000443   000406 601000 6                  TNZ     NXTEXT

      834     6207    4                    GOTO NXTEXT;
      835     6208    4                   END;

   6208  6 000444   000451 710000 6                  TRA     s:6211

      836     6209    3                 ELSE FRDAD = FRDAD + BLK# - GRANS;

   6209  6 000445   200027 236100                    LDQ     FRDAD,,AUTO
         6 000446   200030 036100                    ADLQ    BLK#,,AUTO
         6 000447   200034 136100                    SBLQ    GRANS,,AUTO
         6 000450   200027 756100                    STQ     FRDAD,,AUTO

      837     6210
      838     6211    3                 LOG_ERR_BUF.FRDAD = FRDAD;

   6211  6 000451   200027 235100                    LDA     FRDAD,,AUTO
         6 000452   000053 755000 1                  STA     LOG_ERR_BUF+5

      839     6212    3                 CALL M$WRSYSLOG (LOG_ERR) ALTRET(A31);

   6212  6 000453   000646 630400 1                  EPPR0   LOG_ERR
         6 000454   470001 713400                    CLIMB   alt,+28673
         6 000455   400400 401760                    pmme    nvectors=2
         6 000456   000457 702000 6                  TSX2    A31

   6211  6 000457                       A31          null
      840     6213    3   A31:          ;
      841     6214
      842     6215    3                 CALL FOF$FITUPD (FOFU_FINC#,,FIL_CNUM);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:147  

   6215  6 000457   200021 630500                    EPPR0   FIL_CNUM,,AUTO
         6 000460   200110 450500                    STP0    @FO$FIL+4,,AUTO
         6 000461   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 000462   000001 235000 7                  LDA     1
         6 000463   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 000464   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 000465   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000466   000000 701000 xent               TSX1    FOF$FITUPD
         6 000467   000000 011000                    NOP     0

      843     6216    3                 QUITRSN=FOQR_FINC#;

   6216  6 000470   000001 235007                    LDA     1,DL
         6 000471   200023 755100                    STA     QUITRSN,,AUTO

      844     6217    3                 GOTO DEV_QUIT;

   6217  6 000472   002341 710000 6                  TRA     DEV_QUIT

      845     6218    3                 END;
      846     6219
      847     6220                                /* BAD DISK ADDRESS. */
      848     6221    2               QUITRSN=FOQR_BDDA#;

   6221  6 000473   000006 235007                    LDA     6,DL
         6 000474   200023 755100                    STA     QUITRSN,,AUTO

      849     6222    2               GOTO DEV_QUIT;

   6222  6 000475   002341 710000 6                  TRA     DEV_QUIT

      850     6223        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:148  
      851     6224        /*
      852     6225                             #####   ####       #     ####    ####    #####
      853     6226                             #       #   #     # #    #   #   #   #     #
      854     6227                             #       #   #    #   #   #   #   #   #     #
      855     6228                             ####    ####     #####   ####    ####      #
      856     6229                             #       #        #   #   #   #   #   #     #
      857     6230                             #       #        #   #   #   #   #   #     #
      858     6231                             #       #        #   #   ####    #   #     #
      859     6232        */
      860     6233        /**
      861     6234         **
      862     6235         **
      863     6236         **      FORMS PROGRAM ABORT EVENT
      864     6237         **
      865     6238         **
      866     6239         **/
      867     6240                                          /* This event is sent from MOOS
      868     6241                                          when MOOS gets an FPRG abort
      869     6242                                          message from the FEP. */
      870     6243    2             CASE (FODE_FPABRT#,FODE_FPEXIT#);

      871     6244    2               IF DEV$ -> FO$DEV.FLG.IDSC = '1'B

   6244  6 000476   000012 236100                    LDQ     10,,PR0
         6 000477   000001 316003                    CANQ    1,DU
         6 000500   004237 601000 6                  TNZ     DEV_EVRTN

      872     6245    2               THEN
      873     6246    2                GOTO DEV_EVRTN;
      874     6247
      875     6248    3                 DO CASE (STATE);

   6248  6 000501   200044 235100                    LDA     STATE,,AUTO
         6 000502   000004 115007                    CMPA    4,DL
         6 000503   000505 602005 6                  TNC     s:6248+4,AL
         6 000504   000514 710000 6                  TRA     s:6253
         6 000505   000514 710000 6                  TRA     s:6253
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:149  
         6 000506   000511 710000 6                  TRA     s:6250
         6 000507   000511 710000 6                  TRA     s:6250
         6 000510   000511 710000 6                  TRA     s:6250

      876     6249    3                   CASE (FOS_BUSY#,FOS_SPRQ#,FOS_SUSP#);

      877     6250    3                     QUITRSN = FOQR_FPABRT#;

   6250  6 000511   000014 235007                    LDA     12,DL
         6 000512   200023 755100                    STA     QUITRSN,,AUTO

      878     6251    3                     GOTO DEV_QUIT;

   6251  6 000513   002341 710000 6                  TRA     DEV_QUIT

      879     6252    3                   CASE (ELSE);

      880     6253    3                     GOTO DEV_EVRTN;

   6253  6 000514   004237 710000 6                  TRA     DEV_EVRTN

      881     6254    3                 END;

      882     6255        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:150  
      883     6256        /*
      884     6257                             ###    #####   #####   ####    ####
      885     6258                            #   #     #     #       #   #   #   #
      886     6259                            #         #     #       #   #   #   #
      887     6260                             ###      #     ####    ####    ####
      888     6261                                #     #     #       # #     # #
      889     6262                            #   #     #     #       #  #    #  #
      890     6263                             ###      #     #####   #   #   #   #
      891     6264        */
      892     6265        /**
      893     6266         **
      894     6267         **
      895     6268         **      SYMBIONT TERMINAL ERROR EVENT
      896     6269         **
      897     6270         **
      898     6271         **/
      899     6272                                           /* This event is sent from MOOS
      900     6273                                           when MOOS gets a bad TYC from
      901     6274                                           the IO system in its device
      902     6275                                           endaction routine.  For example,
      903     6276                                           an ERROR keyin will always result
      904     6277                                           in a bad tyc. */
      905     6278    2             CASE (FODE_STERR#);

      906     6279    3                 DO CASE (STATE);

   6279  6 000515   200044 235100                    LDA     STATE,,AUTO
         6 000516   000005 115007                    CMPA    5,DL
         6 000517   000521 602005 6                  TNC     s:6279+4,AL
         6 000520   000536 710000 6                  TRA     s:6288
         6 000521   000536 710000 6                  TRA     s:6288
         6 000522   000526 710000 6                  TRA     s:6281
         6 000523   000536 710000 6                  TRA     s:6288
         6 000524   000526 710000 6                  TRA     s:6281
         6 000525   000535 710000 6                  TRA     s:6286

      907     6280    3                   CASE (FOS_BUSY#,FOS_SPRQ#);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:151  

      908     6281    3                     DEV$->FO$DEV.SUSRSN=FOSR_DERR#;

   6281  6 000526   000006 236007                    LDQ     6,DL
         6 000527   000011 552104                    STBQ    9,'04'O,PR0

      909     6282    3                     DEV$->FO$DEV.FLG.TERR='1'B;

   6282  6 000530   200000 236007                    LDQ     65536,DL
         6 000531   000012 256100                    ORSQ    10,,PR0

      910     6283    3                     DEV$->FO$DEV.FLG.ALGNED='0'B;

   6283  6 000532   000002 236000 7                  LDQ     2
         6 000533   000012 356100                    ANSQ    10,,PR0

      911     6284    3                     GOTO DEV_SUSPENDED;

   6284  6 000534   000541 710000 6                  TRA     DEV_SUSPENDED

      912     6285    3                   CASE (FOS_IALN#);

      913     6286    3                     GOTO CLEANUP_IALN;

   6286  6 000535   002111 710000 6                  TRA     CLEANUP_IALN

      914     6287    3                   CASE (ELSE);

      915     6288    3                     CALL DEV_EVSCREECH;

   6288  6 000536   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 000537   000000 011000                    NOP     0

      916     6289    3                     GOTO DEV_EVRTN;

   6289  6 000540   004237 710000 6                  TRA     DEV_EVRTN

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:152  
      917     6290    3                 END;

   6287  6 000541                       DEV_SUSPEND* null
      918     6291    2   DEV_SUSPENDED:;
      919     6292    2               IF NOT DEV$->FO$DEV.FLG.AIP THEN

   6292  6 000541   000012 236100                    LDQ     10,,PR0
         6 000542   010000 316007                    CANQ    4096,DL
         6 000543   000612 601000 6                  TNZ     DEV_SUSPENDED1

      920     6293    3                 DO CASE (DEV$->FO$DEV.SUSRSN);

   6293  6 000544   000011 236100                    LDQ     9,,PR0
         6 000545   000777 376007                    ANQ     511,DL
         6 000546   000010 136007                    SBLQ    8,DL
         6 000547   000006 116007                    CMPQ    6,DL
         6 000550   000552 602006 6                  TNC     s:6293+6,QL
         6 000551   000560 710000 6                  TRA     s:6299
         6 000552   000612 710000 6                  TRA     DEV_SUSPENDED1
         6 000553   000560 710000 6                  TRA     s:6299
         6 000554   000560 710000 6                  TRA     s:6299
         6 000555   000560 710000 6                  TRA     s:6299
         6 000556   000560 710000 6                  TRA     s:6299
         6 000557   000612 710000 6                  TRA     DEV_SUSPENDED1

      921     6294
      922     6295    3                   CASE (FOSR_FALN#,FOSR_VFUL#);

      923     6296
      924     6297    3                   CASE (ELSE);

      925     6298
      926     6299    3                     IF      INFOB.BLK# > DEV$->FO$DEV.BR.BLK#

   6299  6 000560   200004 473500                    LDP3    @DINFO,,AUTO
         6 000561   300000 236100                    LDQ     0,,PR3
         6 000562   000022 772000                    QRL     18
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:153  
         6 000563   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 000564   000017 236100                    LDQ     15,,PR0
         6 000565   000011 772000                    QRL     9
         6 000566   777777 376007                    ANQ     -1,DL
         6 000567   200106 116100                    CMPQ    @FO$FIL+2,,AUTO
         6 000570   000607 604000 6                  TMI     s:6301
         6 000571   200107 756100                    STQ     @FO$FIL+3,,AUTO
         6 000572   300000 236100                    LDQ     0,,PR3
         6 000573   000022 772000                    QRL     18
         6 000574   200107 116100                    CMPQ    @FO$FIL+3,,AUTO
         6 000575   000612 601000 6                  TNZ     DEV_SUSPENDED1
         6 000576   300000 236100                    LDQ     0,,PR3
         6 000577   777777 376007                    ANQ     -1,DL
         6 000600   200110 756100                    STQ     @FO$FIL+4,,AUTO
         6 000601   000017 235100                    LDA     15,,PR0
         6 000602   000020 236100                    LDQ     16,,PR0
         6 000603   000033 773000                    LRL     27
         6 000604   777777 376007                    ANQ     -1,DL
         6 000605   200110 116100                    CMPQ    @FO$FIL+4,,AUTO
         6 000606   000612 605000 6                  TPL     DEV_SUSPENDED1

      927     6300    3                     OR (    INFOB.BLK# = DEV$->FO$DEV.BR.BLK#
      928     6301    3                    AND INFOB.REC# > DEV$->FO$DEV.BR.REC#) THEN DEV$->FO$DEV.BR=INFOB;

   6301  6 000607   000100 100500                    MLR     fill='000'O
         6 000610   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         6 000611   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4

      929     6302
      930     6303    3                 END;

   6300  6 000612                       DEV_SUSPEND* null
      931     6304    2   DEV_SUSPENDED1:;
      932     6305    2               DEV$->FO$DEV.STATE=FOS_SUSP#;

   6305  6 000612   000000 470400 xsym               LDP0    FO_DEV$
         6 000613   002000 236007                    LDQ     1024,DL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:154  
         6 000614   000011 552110                    STBQ    9,'10'O,PR0

      933     6306    2               DEV$->FO$DEV.FLG=DEV$->FO$DEV.FLG&(~(FODF_ACKEXP#|FODF_LASTEXT#|
              6306                        FODF_SIP#|FODF_CHIDLE#));

   6306  6 000615   000674 236000 2                  LDQ     START_FPRG+12
         6 000616   000012 276000 xsym               ORQ     B_VECTNIL+10
         6 000617   000006 276000 xsym               ORQ     B_VECTNIL+6
         6 000620   000675 276000 2                  ORQ     START_FPRG+13
         6 000621   000027 676000 xsym               ERQ     B_VECTNIL+23
         6 000622   000012 376100                    ANQ     10,,PR0
         6 000623   000012 756100                    STQ     10,,PR0

      934     6307    2               DEV$->FO$DEV.TOKERSN=0;

   6307  6 000624   000000 236003                    LDQ     0,DU
         6 000625   000015 552140                    STBQ    13,'40'O,PR0

      935     6308    2               IF DEV$->FO$DEV.FLG.AIP THEN

   6308  6 000626   000012 236100                    LDQ     10,,PR0
         6 000627   010000 316007                    CANQ    4096,DL
         6 000630   000635 600000 6                  TZE     s:6313

      936     6309    3                 DO;

      937     6310    3                 DEV$->FO$DEV.FLG.AIP='0'B;

   6310  6 000631   000003 236000 7                  LDQ     3
         6 000632   000012 356100                    ANSQ    10,,PR0

      938     6311    3                 CALL REL_ALR;

   6311  6 000633   005155 701000 6                  TSX1    REL_ALR
         6 000634   000000 011000                    NOP     0

      939     6312    3                 END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:155  

      940     6313    2               IF DEV$->FO$DEV.FLG.QUIT THEN DEV$->FO$DEV.SUSRSN = FOSR_QUIT#;

   6313  6 000635   000000 470400 xsym               LDP0    FO_DEV$
         6 000636   000012 236100                    LDQ     10,,PR0
         6 000637   000040 316007                    CANQ    32,DL
         6 000640   000643 600000 6                  TZE     s:6314

   6313  6 000641   000002 236007                    LDQ     2,DL
         6 000642   000011 552104                    STBQ    9,'04'O,PR0

      941     6314    2               OPMSG_SUSP.DEVNM=DEVNAME;

   6314  6 000643   000000 237000 1                  LDAQ    DEVNAME
         6 000644   000070 757000 1                  STAQ    OPMSG_SUSP+3

      942     6315    2               OPMSG_SUSP.SYSID=FIL$->FO$FIL.SYSID;

   6315  6 000645   000000 471400 xsym               LDP1    FO_FIL$
         6 000646   100012 220100                    LDX0    10,,PR1
         6 000647   000066 740000 1                  STX0    OPMSG_SUSP+1

      943     6316    2               OPMSG_SUSP.ACCT=FIL$->FO$FIL.OJOB$->FO$JOB.ACCT;

   6316  6 000650   100003 473500                    LDP3    3,,PR1
         6 000651   040000 100500                    MLR     fill='040'O
         6 000652   300004 000010                    ADSC9   4,,PR3                   cn=0,n=8
         6 000653   000073 600010 1                  ADSC9   OPMSG_SUSP+6             cn=3,n=8

      944     6317    2               OPMSG_SUSP.NUM=FIL$->FO$FIL.NUM;

   6317  6 000654   100012 236100                    LDQ     10,,PR1
         6 000655   000011 736000                    QLS     9
         6 000656   000073 552030 1                  STBQ    OPMSG_SUSP+6,'30'O

   6317  6 000657                       RESUSP       null
      945     6318    2   RESUSP:     ;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:156  
      946     6319    2               OPMSG_SUSP.QUITRSN=DEV$->FO$DEV.QUITRSN;

   6319  6 000657   000000 470400 xsym               LDP0    FO_DEV$
         6 000660   000013 236100                    LDQ     11,,PR0
         6 000661   000075 552004 1                  STBQ    OPMSG_SUSP+8,'04'O

      947     6320    2               OPMSG_SUSP.SUBC=DEV$->FO$DEV.SUSRSN;

   6320  6 000662   000011 236100                    LDQ     9,,PR0
         6 000663   000033 736000                    QLS     27
         6 000664   000073 552040 1                  STBQ    OPMSG_SUSP+6,'40'O

      948     6321    2               CALL M$WRITE (OCMSG_SUSP);

   6321  6 000665   000314 630400 2                  EPPR0   OCMSG_SUSP
         6 000666   040001 713400                    CLIMB   write
         6 000667   401400 401760                    pmme    nvectors=4

      949     6322
      950     6323    3                 DO CASE (DEV$->FO$DEV.SUSRSN);

   6323  6 000670   000000 470400 xsym               LDP0    FO_DEV$
         6 000671   000011 720100                    LXL0    9,,PR0
         6 000672   000777 360003                    ANX0    511,DU
         6 000673   000017 100003                    CMPX0   15,DU
         6 000674   000676 602010 6                  TNC     s:6323+6,X0
         6 000675   001461 710000 6                  TRA     s:6597
         6 000676   001463 710000 6                  TRA     s:6598
         6 000677   001463 710000 6                  TRA     s:6598
         6 000700   000723 710000 6                  TRA     DEV_DOQUIT
         6 000701   001463 710000 6                  TRA     s:6598
         6 000702   001210 710000 6                  TRA     ALIGN_IDLE_DEVICE
         6 000703   001045 710000 6                  TRA     s:6424
         6 000704   001463 710000 6                  TRA     s:6598
         6 000705   001463 710000 6                  TRA     s:6598
         6 000706   000720 710000 6                  TRA     s:6348
         6 000707   001461 710000 6                  TRA     s:6597
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:157  
         6 000710   001051 710000 6                  TRA     DEV_SPACE
         6 000711   001463 710000 6                  TRA     s:6598
         6 000712   001463 710000 6                  TRA     s:6598
         6 000713   000715 710000 6                  TRA     s:6339
         6 000714   000715 710000 6                  TRA     s:6339

      951     6324
      952     6325        /***********************************************************
      953     6326         *                                                         *
      954     6327         *           VARIOUS REASONS - LEAVE SUSPENDED             *
      955     6328         *                                                         *
      956     6329         ***********************************************************/
      957     6330    3                   CASE (FOSR_MANU#,FOSR_DERR#,FOSR_FERR#,

      958     6331    3               FOSR_KSUS#,FOSR_TBRK#,FOSR_SBEF#,FOSR_AEOF#);
      959     6332
      960     6333        /***********************************************************
      961     6334         *                                                         *
      962     6335         *                 VFU LOADED                              *
      963     6336         *                                                         *
      964     6337         ***********************************************************/
      965     6338    3                   CASE (FOSR_VFUL#, FOSR_DLIM#);

      966     6339    3                     DEV$->FO$DEV.FLG.ALGNED='1'B;

   6339  6 000715   004000 236007                    LDQ     2048,DL
         6 000716   000012 256100                    ORSQ    10,,PR0

      967     6340    3                     GOTO DEV_CONTVFU;                                      /*#8.362*/

   6340  6 000717   003107 710000 6                  TRA     DEV_CONTVFU

      968     6341
      969     6342        /***********************************************************
      970     6343         *                                                         *
      971     6344         *               FINISHED ALIGN                            *
      972     6345         *                                                         *
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:158  
      973     6346         ***********************************************************/
      974     6347    3                   CASE (FOSR_FALN#);

      975     6348    3                     DEV$->FO$DEV.FLG.ALGNED='1'B;

   6348  6 000720   004000 236007                    LDQ     2048,DL
         6 000721   000012 256100                    ORSQ    10,,PR0

      976     6349    3                     GOTO DEV_EVRTN;

   6349  6 000722   004237 710000 6                  TRA     DEV_EVRTN

      977     6350
      978     6351        /***********************************************************
      979     6352         *                                                         *
      980     6353         *               DO A QUIT                                 *
      981     6354         *                                                         *
      982     6355         ***********************************************************/
      983     6356
      984     6357    3                   CASE (FOSR_QUIT#);

   6349  6 000723                       DEV_DOQUIT   null
      985     6358                                /* FOR SOME CASES OF QUIT, WE WISH TO PRINT
      986     6359                                   A MESSAGE AT THE END OF THE LISTING, IF
      987     6360                                   IT'S A PRINTER OR PUNCH.  TO DO THIS,
      988     6361                                   WE ISSUE A WRITE FUNCTION TO THE SYMB,
      989     6362                                   FOLLOWED BY A TOKEN REQUEST.  WHEN THE
      990     6363                                   TOKEN COMES BACK, WE KNOW THE DATA HAS
      991     6364                                   BEEN WRITTEN, AND CAN THUS GO TO DOQUIT1
      992     6365                                   AND CLOSE THE PATH. */
      993     6366    3   DEV_DOQUIT:       ;
      994     6367    3                     IF  NOT DEV$->FO$DEV.FLG.QUITMSG

   6367  6 000723   000000 470400 xsym               LDP0    FO_DEV$
         6 000724   000012 236100                    LDQ     10,,PR0
         6 000725   000400 316007                    CANQ    256,DL
         6 000726   001030 601000 6                  TNZ     DEV_DOQUIT1
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:159  
         6 000727   000005 220100                    LDX0    5,,PR0
         6 000730   000676 100000 2                  CMPX0   START_FPRG+14
         6 000731   000734 600000 6                  TZE     s:6369
         6 000732   000677 100000 2                  CMPX0   START_FPRG+15
         6 000733   001030 601000 6                  TNZ     DEV_DOQUIT1

      995     6368    3                     AND (DEV$->FO$DEV.NAMER.TYP = 'LP' OR DEV$->FO$DEV.NAMER.TYP =
              6368                              'CP') THEN
      996     6369    4                       DO CASE (DEV$->FO$DEV.QUITRSN);

   6369  6 000734   000013 236100                    LDQ     11,,PR0
         6 000735   000777 376007                    ANQ     511,DL
         6 000736   000010 136007                    SBLQ    8,DL
         6 000737   000003 116007                    CMPQ    3,DL
         6 000740   000742 602006 6                  TNC     s:6369+6,QL
         6 000741   000751 710000 6                  TRA     s:6381
         6 000742   000745 710000 6                  TRA     s:6372
         6 000743   000751 710000 6                  TRA     s:6381
         6 000744   000745 710000 6                  TRA     s:6372

      997     6370
      998     6371    4                         CASE (FOQR_KZAP#,FOQR_KSAV#);

      999     6372    4                           IF NOT DEV$->FO$DEV.FLG.TERR THEN GOTO DOQUIT0;

   6372  6 000745   000012 236100                    LDQ     10,,PR0
         6 000746   200000 316007                    CANQ    65536,DL
         6 000747   000754 600000 6                  TZE     DOQUIT0
         6 000750   001030 710000 6                  TRA     DEV_DOQUIT1

     1000     6373                                /* We're doing a ZAP or SAVE, and the event that
     1001     6374                                   got the device suspended was a device error.
     1002     6375                                   Don't bother to write the QUITMSG since the
     1003     6376                                   device is probably broken & we'll just annoy
     1004     6377                                   the operator. */
     1005     6378
     1006     6379    4                         CASE (ELSE);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:160  

     1007     6380
     1008     6381    4                           IF NOT DEV$->FO$DEV.FLG.TERR

   6381  6 000751   000012 236100                    LDQ     10,,PR0
         6 000752   200000 316007                    CANQ    65536,DL
         6 000753   001030 601000 6                  TNZ     DEV_DOQUIT1

     1009     6382    5                           THEN DO;

     1010     6383    5   DOQUIT0:                  ;

   6383  6 000754                       DOQUIT0      null
     1011     6384    5                             REC$=ADDR(WLR_REC.REC#);

   6384  6 000754   000004 236000 7                  LDQ     4
         6 000755   200040 756100                    STQ     REC$,,AUTO

     1012     6385    5                             I=LENGTHC(FABTMSG);

   6385  6 000756   000040 235007                    LDA     32,DL
         6 000757   200005 755100                    STA     I,,AUTO

     1013     6386    5                             REC$->B$CHARS=FABTMSG;

   6386  6 000760   200040 471500                    LDP1    REC$,,AUTO
         6 000761   000000 621005                    EAX1    0,AL
         6 000762   040140 100400                    MLR     fill='040'O
         6 000763   000000 000040 2                  ADSC9   FABTMSG                  cn=0,n=32
         6 000764   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1

     1014     6387    5                             WLR_REC.RECL#=I;

   6387  6 000765   200005 236100                    LDQ     I,,AUTO
         6 000766   000544 552004 1                  STBQ    WLR_REC,'04'O

     1015     6388    5                             I=LENGTHC(ABTMSGS(DEV$->FO$DEV.QUITRSN));
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:161  

   6388  6 000767   000000 470400 xsym               LDP0    FO_DEV$
         6 000770   000013 236100                    LDQ     11,,PR0
         6 000771   000777 376007                    ANQ     511,DL
         6 000772   000005 402007                    MPY     5,DL
         6 000773   000050 235007                    LDA     40,DL
         6 000774   200005 755100                    STA     I,,AUTO

     1016     6389    5                             PINCRC(REC$,LENGTHC(FABTMSG))->B$CHARS=ABTMSGS(DEV$->
              6389                                      FO$DEV.QUITRSN);

   6389  6 000775   000003 736000                    QLS     3
         6 000776   000000 620005                    EAX0    0,AL
         6 000777   040140 100406                    MLR     fill='040'O
         6 001000   000010 000050 2                  ADSC9   ABTMSGS,Q                cn=0,n=40
         6 001001   100010 000010                    ADSC9   8,,PR1                   cn=0,n=*X0

     1017     6390    5                             WLR_REC.RECL#=WLR_REC.RECL#+I;

   6390  6 001002   000544 236000 1                  LDQ     WLR_REC
         6 001003   000777 376007                    ANQ     511,DL
         6 001004   200005 036100                    ADLQ    I,,AUTO
         6 001005   000544 552004 1                  STBQ    WLR_REC,'04'O

     1018     6391    5                             DEV$->FO$DEV.FLG.QUITMSG='1'B;

   6391  6 001006   000400 236007                    LDQ     256,DL
         6 001007   000012 256100                    ORSQ    10,,PR0

     1019     6392    5                             WLR_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;

   6392  6 001010   000001 236100                    LDQ     1,,PR0
         6 001011   000411 756000 1                  STQ     WLR_SYMB+5

     1020     6393    5                             WLR_SYMB.V.ACK#='1'B;                         /*#15.169*/

   6393  6 001012   000004 236007                    LDQ     4,DL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:162  
         6 001013   000432 256000 1                  ORSQ    WLR_SYMB+22

     1021     6394    5                             CALL M$SYMBIO (WLR_SYMB) ALTRET(DEV_DOQUIT1);

   6394  6 001014   000404 630400 1                  EPPR0   WLR_SYMB
         6 001015   570000 713400                    CLIMB   alt,+61440
         6 001016   403400 401760                    pmme    nvectors=8
         6 001017   001030 702000 6                  TSX2    DEV_DOQUIT1

     1022     6395    5                             DEV$->FO$DEV.STATE=FOS_BUSY#;

   6395  6 001020   000000 470400 xsym               LDP0    FO_DEV$
         6 001021   001000 236007                    LDQ     512,DL
         6 001022   000011 552110                    STBQ    9,'10'O,PR0

     1023     6396    5                             DEV$->FO$DEV.FLG.ACKEXP='1'B;

   6396  6 001023   100000 236007                    LDQ     32768,DL
         6 001024   000012 256100                    ORSQ    10,,PR0

     1024     6397    5                             DEV$->FO$DEV.TOKERSN=FOTR_WLREC#;

   6397  6 001025   001000 236003                    LDQ     512,DU
         6 001026   000015 552140                    STBQ    13,'40'O,PR0

     1025     6398    5                             GOTO DEV_EVRTN;

   6398  6 001027   004237 710000 6                  TRA     DEV_EVRTN

     1026     6399    5                             END;
     1027     6400
     1028     6401    4                       END;

   6396  6 001030                       DEV_DOQUIT1  null
     1029     6402    3   DEV_DOQUIT1:      ;
     1030     6403                          %JLOCK; /* Keep M$JOBSTATS out while we delete the file */

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:163  
   6404  6 001030   000000 054000 xsym               AOS     FO_Q

     1031     6406    3                     CALL END_DEV ALTRET(DOQUIT2);

   6406  6 001031   005423 701000 6                  TSX1    END_DEV
         6 001032   001042 702000 6                  TSX2    DOQUIT2

     1032     6407    3                     CALL QUIT_DEV;

   6407  6 001033   005511 701000 6                  TSX1    QUIT_DEV
         6 001034   000000 011000                    NOP     0

     1033     6408                          %JUNLOCK;

   6409  6 001035   000001 336007                    LCQ     1,DL
         6 001036   000000 056000 xsym               ASQ     FO_Q

     1034     6411    3                     CALL SCHED_DEV ALTRET(DEV_EVALT);

   6411  6 001037   004365 701000 6                  TSX1    SCHED_DEV
         6 001040   004240 702000 6                  TSX2    DEV_EVALT

     1035     6412    3                     GOTO DEV_EVRTN;

   6412  6 001041   004237 710000 6                  TRA     DEV_EVRTN

   6409  6 001042                       DOQUIT2      null
     1036     6413    3   DOQUIT2:          ;
     1037     6414                          %JUNLOCK;

   6415  6 001042   000001 336007                    LCQ     1,DL
         6 001043   000000 056000 xsym               ASQ     FO_Q
         6 001044   004237 710000 6                  TRA     DEV_EVRTN

     1038     6417
     1039     6418        /***********************************************************
     1040     6419         *                                                         *
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:164  
     1041     6420         *               REPRINT                                   *
     1042     6421         *                                                         *
     1043     6422         ***********************************************************/
     1044     6423    3                   CASE (FOSR_KRPR#);

     1045     6424    3                     DEV$->FO$DEV.BR='0'B;

   6424  6 001045   000100 100400                    MLR     fill='000'O
         6 001046   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 001047   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4

     1046     6425    3                     GOTO DEV_CONTINUE;

   6425  6 001050   003141 710000 6                  TRA     DEV_CONTINUE

     1047     6426
     1048     6427        /***********************************************************
     1049     6428         *                                                         *
     1050     6429         *               START SPACING                             *
     1051     6430         *                                                         *
     1052     6431         ***********************************************************/
     1053     6432    3                   CASE (FOSR_KSPA#);

     1054     6433
     1055     6434    3   DEV_SPACE:
     1056     6435    4                       DO CASE (DEV$->FO$DEV.SPACEFROM);

   6435  6 001051   000013 236100       DEV_SPACE    LDQ     11,,PR0
         6 001052   000011 772000                    QRL     9
         6 001053   000777 376007                    ANQ     511,DL
         6 001054   000003 116007                    CMPQ    3,DL
         6 001055   001057 602006 6                  TNC     DEV_SPACE+6,QL
         6 001056   001072 710000 6                  TRA     s:6446
         6 001057   001075 710000 6                  TRA     s:6450
         6 001060   001066 710000 6                  TRA     s:6443
         6 001061   001062 710000 6                  TRA     s:6440

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:165  
     1057     6436
     1058     6437    4                         CASE (SPACEFROM_HERE#);

     1059     6438
     1060     6439    4                         CASE (SPACEFROM_EOF#);

     1061     6440    4                           DEV$->FO$DEV.BR='777770777770'O;

   6440  6 001062   000100 100400                    MLR     fill='000'O
         6 001063   000700 000004 2                  ADSC9   START_FPRG+16            cn=0,n=4
         6 001064   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4
         6 001065   001075 710000 6                  TRA     s:6450

     1062     6441
     1063     6442    4                         CASE (SPACEFROM_BOF#);

     1064     6443    4                           DEV$->FO$DEV.BR='0'B;

   6443  6 001066   000100 100400                    MLR     fill='000'O
         6 001067   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 001070   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4
         6 001071   001075 710000 6                  TRA     s:6450

     1065     6444
     1066     6445    4                         CASE (ELSE);

     1067     6446    4                           CALL DEV_EVSCREECH;

   6446  6 001072   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 001073   000000 011000                    NOP     0

     1068     6447    4                           GOTO DEV_EVRTN;

   6447  6 001074   004237 710000 6                  TRA     DEV_EVRTN

     1069     6448
     1070     6449    4                       END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:166  

     1071     6450    3                     CALL SET_BLKREC ALTRET(NOSPACE);

   6450  6 001075   005654 701000 6                  TSX1    SET_BLKREC
         6 001076   001177 702000 6                  TSX2    NOSPACE

   6447  6 001077                       START_SPACE1 null
     1072     6451    3   START_SPACE1:     ;
     1073     6452    3                     IF DEV$->FO$DEV.SPACEPAGES < 0 THEN

   6452  6 001077   000000 470400 xsym               LDP0    FO_DEV$
         6 001100   000015 236100                    LDQ     13,,PR0
         6 001101   000011 736000                    QLS     9
         6 001102   000022 732000                    QRS     18
         6 001103   000000 116003                    CMPQ    0,DU
         6 001104   001124 605000 6                  TPL     s:6458

     1074     6453    4                       DO;

     1075     6454    4                       EXTENT.GRANS#=EXT$->FO$EXT.GRANS-EXTENT.GRANS#+1;

   6454  6 001105   000004 236000 1                  LDQ     EXTENT
         6 001106   000033 772000                    QRL     27
         6 001107   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 001110   200045 471500                    LDP1    EXT$,,AUTO
         6 001111   100001 236100                    LDQ     1,,PR1
         6 001112   000033 772000                    QRL     27
         6 001113   200106 136100                    SBLQ    @FO$FIL+2,,AUTO
         6 001114   000001 036007                    ADLQ    1,DL
         6 001115   000033 736000                    QLS     27
         6 001116   000004 552040 1                  STBQ    EXTENT,'40'O

     1076     6455    4                       CALL SET_EXTBLNK;

   6455  6 001117   006003 701000 6                  TSX1    SET_EXTBLNK
         6 001120   000000 011000                    NOP     0

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:167  
     1077     6456    4                       FIL$->FO$FIL.NXTEXT$=EXTBLNK$;

   6456  6 001121   200041 236100                    LDQ     EXTBLNK$,,AUTO
         6 001122   000000 470400 xsym               LDP0    FO_FIL$
         6 001123   000001 756100                    STQ     1,,PR0

     1078     6457    4                       END;

     1079     6458    3                     SPACE_SYMB.V.BLKREC=DEV$->FO$DEV.BR;

   6458  6 001124   000000 470400 xsym               LDP0    FO_DEV$
         6 001125   000017 235100                    LDA     15,,PR0
         6 001126   000020 236100                    LDQ     16,,PR0
         6 001127   000033 773000                    LRL     27
         6 001130   000027 376000 xsym               ANQ     B_VECTNIL+23
         6 001131   000340 756000 1                  STQ     SPACE_SYMB+24

     1080     6459    3                     SPACE_SYMB.V.BLKREC.REC#=SPACE_SYMB.V.BLKREC.REC#+1;

   6459  6 001132   000340 720000 1                  LXL0    SPACE_SYMB+24
         6 001133   000001 621010                    EAX1    1,X0
         6 001134   000340 441000 1                  SXL1    SPACE_SYMB+24

     1081     6460    3                     SPACE_SYMB.V.SPACEPAGES# = DEV$->FO$DEV.SPACEPAGES;

   6460  6 001135   000015 236100                    LDQ     13,,PR0
         6 001136   000011 736000                    QLS     9
         6 001137   000022 732000                    QRS     18
         6 001140   000337 756000 1                  STQ     SPACE_SYMB+23

     1082     6461    3                     SPACE_SYMB.V.PAGES#=FIL$->FO$FIL.FLG.PAGES;

   6461  6 001141   000000 471400 xsym               LDP1    FO_FIL$
         6 001142   100015 236100                    LDQ     13,,PR1
         6 001143   000007 772000                    QRL     7
         6 001144   000336 676000 1                  ERQ     SPACE_SYMB+22
         6 001145   000001 376007                    ANQ     1,DL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:168  
         6 001146   000336 656000 1                  ERSQ    SPACE_SYMB+22

     1083     6462    3                     SPACE_SYMB.V.CPVFC#=FIL$->FO$FIL.FLG.CPVFC;

   6462  6 001147   100015 236100                    LDQ     13,,PR1
         6 001150   000002 772000                    QRL     2
         6 001151   000336 676000 1                  ERQ     SPACE_SYMB+22
         6 001152   000002 376007                    ANQ     2,DL
         6 001153   000336 656000 1                  ERSQ    SPACE_SYMB+22

     1084     6463    3                     SPACE_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;

   6463  6 001154   000001 236100                    LDQ     1,,PR0
         6 001155   000315 756000 1                  STQ     SPACE_SYMB+5

     1085     6464    3                     CALL M$SYMBIO (SPACE_SYMB) ALTRET(DEV_EVRTN);

   6464  6 001156   000310 630400 1                  EPPR0   SPACE_SYMB
         6 001157   570000 713400                    CLIMB   alt,+61440
         6 001160   403400 401760                    pmme    nvectors=8
         6 001161   004237 702000 6                  TSX2    DEV_EVRTN

     1086     6465    3                     DEV$->FO$DEV.STATE=FOS_BUSY#;

   6465  6 001162   000000 470400 xsym               LDP0    FO_DEV$
         6 001163   001000 236007                    LDQ     512,DL
         6 001164   000011 552110                    STBQ    9,'10'O,PR0

     1087     6466    3                     DEV$->FO$DEV.FLG.SIP='1'B;

   6466  6 001165   000004 236007                    LDQ     4,DL
         6 001166   000012 256100                    ORSQ    10,,PR0

     1088     6467    3                    IF DEV$->FO$DEV.SPACEPAGES<0 THEN DEV$->FO$DEV.FLG.DIRECTION='0'B;

   6467  6 001167   000015 236100                    LDQ     13,,PR0
         6 001170   000011 736000                    QLS     9
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:169  
         6 001171   000022 732000                    QRS     18
         6 001172   000000 116003                    CMPQ    0,DU
         6 001173   001176 605000 6                  TPL     s:6468

   6467  6 001174   000005 236000 7                  LDQ     5
         6 001175   000012 356100                    ANSQ    10,,PR0

     1089     6468    3                     GOTO DEV_EVRTN;

   6468  6 001176   004237 710000 6                  TRA     DEV_EVRTN

     1090     6469    3   NOSPACE:
     1091     6470    3                     IF DEV$->FO$DEV.SPACEPAGES<0 THEN

   6470  6 001177   000000 470400 xsym  NOSPACE      LDP0    FO_DEV$
         6 001200   000015 236100                    LDQ     13,,PR0
         6 001201   000011 736000                    QLS     9
         6 001202   000022 732000                    QRS     18
         6 001203   000000 116003                    CMPQ    0,DU
         6 001204   001077 604000 6                  TMI     START_SPACE1

     1092     6471    3                      GOTO START_SPACE1;
     1093     6472    3                     DEV$->FO$DEV.SUSRSN=FOSR_SBEF#;

   6472  6 001205   000013 236007                    LDQ     11,DL
         6 001206   000011 552104                    STBQ    9,'04'O,PR0

     1094     6473    3                     GOTO RESUSP;

   6473  6 001207   000657 710000 6                  TRA     RESUSP

     1095     6474
     1096     6475        /***********************************************************
     1097     6476         *                                                         *
     1098     6477         *               START ALIGN                               *
     1099     6478         *                                                         *
     1100     6479         ***********************************************************/
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:170  
     1101     6480    3                   CASE (FOSR_KALN#);

   6473  6 001210                       ALIGN_IDLE_* null
     1102     6481    3   ALIGN_IDLE_DEVICE:;
     1103     6482    3                     DEV$->FO$DEV.FLG.JVFU='0'B;

   6482  6 001210   000000 470400 xsym               LDP0    FO_DEV$
         6 001211   000006 236000 7                  LDQ     6
         6 001212   000012 356100                    ANSQ    10,,PR0

     1104     6483    3                     DEV$->FO$DEV.FLG.JDEVLIMIT='0'B;

   6483  6 001213   000007 236000 7                  LDQ     7
         6 001214   000012 356100                    ANSQ    10,,PR0

     1105     6484    3                     DEV$->FO$DEV.FLG.ALGNED='0'B;

   6484  6 001215   000002 236000 7                  LDQ     2
         6 001216   000012 356100                    ANSQ    10,,PR0

     1106     6485    3                     CALL FOI$GBUF (FO_FFRSCB,DEV$->FO$DEV.ALR$) ALTRET(ALIGN0);

   6485  6 001217   000000 236000 xsym               LDQ     FO_DEV$
         6 001220   000003 036003                    ADLQ    3,DU
         6 001221   000010 235000 7                  LDA     8
         6 001222   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 001223   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 001224   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 001225   000000 701000 xent               TSX1    FOI$GBUF
         6 001226   001230 702000 6                  TSX2    ALIGN0

     1107     6486    3                     GOTO ALIGN1;

   6486  6 001227   001251 710000 6                  TRA     ALIGN1

   6484  6 001230                       ALIGN0       null
     1108     6487    3   ALIGN0:           ;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:171  
     1109     6488    3                     OPMSG_AERR.SUBC=FOAE_NOPG#;

   6488  6 001230   000000 236003                    LDQ     0,DU
         6 001231   000147 552010 1                  STBQ    OPMSG_AERR+5,'10'O

   6488  6 001232                       ALIGN01      null
     1110     6489    3   ALIGN01:          ;
     1111     6490    3                     OPMSG_AERR.DEVNM=DEVNAME;

   6490  6 001232   000000 237000 1                  LDAQ    DEVNAME
         6 001233   000145 755000 1                  STA     OPMSG_AERR+3
         6 001234   000146 756000 1                  STQ     OPMSG_AERR+4

     1112     6491    3                     CALL M$WRITE (OCMSG_AERR);

   6491  6 001235   000344 630400 2                  EPPR0   OCMSG_AERR
         6 001236   040001 713400                    CLIMB   write
         6 001237   401400 401760                    pmme    nvectors=4

     1113     6492    3                     IF DEV$->FO$DEV.STATE = FOS_IALN#

   6492  6 001240   000000 470400 xsym               LDP0    FO_DEV$
         6 001241   000011 236100                    LDQ     9,,PR0
         6 001242   777000 376007                    ANQ     -512,DL
         6 001243   004000 116007                    CMPQ    2048,DL
         6 001244   001250 601000 6                  TNZ     s:6497

     1114     6493    4                     THEN DO;

     1115     6494    4                       DEV$->FO$DEV.FLG.ALGNED = '0'B;

   6494  6 001245   000002 236000 7                  LDQ     2
         6 001246   000012 356100                    ANSQ    10,,PR0

     1116     6495    4                       GOTO CLEANUP_IALN;

   6495  6 001247   002111 710000 6                  TRA     CLEANUP_IALN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:172  

     1117     6496    4                       END;
     1118     6497    3                     GOTO DEV_EVRTN;

   6497  6 001250   004237 710000 6                  TRA     DEV_EVRTN

   6492  6 001251                       ALIGN1       null
     1119     6498
     1120     6499    3   ALIGN1:           ;
     1121     6500
     1122     6501    3                     CALL FOR$SALIGN (,ALSTAT);

   6501  6 001251   200050 630500                    EPPR0   ALSTAT,,AUTO
         6 001252   200107 450500                    STP0    @FO$FIL+3,,AUTO
         6 001253   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 001254   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 001255   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 001256   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 001257   000000 701000 xent               TSX1    FOR$SALIGN
         6 001260   000000 011000                    NOP     0

   6492  6 001261                       ALIGN2       null
     1123     6502
     1124     6503    3   ALIGN2:           ;
     1125     6504    4                       DO CASE (ALSTAT.STAT);

   6504  6 001261   200050 235100                    LDA     ALSTAT,,AUTO
         6 001262   000010 115007                    CMPA    8,DL
         6 001263   001265 602005 6                  TNC     ALIGN2+4,AL
         6 001264   004237 710000 6                  TRA     DEV_EVRTN
         6 001265   001305 710000 6                  TRA     ALIGN21
         6 001266   001342 710000 6                  TRA     ALIGN22
         6 001267   001275 710000 6                  TRA     s:6507
         6 001270   001345 710000 6                  TRA     s:6539
         6 001271   001434 710000 6                  TRA     s:6583
         6 001272   001332 710000 6                  TRA     s:6526
         6 001273   001460 710000 6                  TRA     s:6593
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:173  
         6 001274   001336 710000 6                  TRA     s:6530

     1126     6505
     1127     6506    4                         CASE (FOAS_FERR#);

     1128     6507    4                           OPMSG_AERR.SUBC=FOAE_FERR#;

   6507  6 001275   001000 236007                    LDQ     512,DL
         6 001276   000147 552010 1                  STBQ    OPMSG_AERR+5,'10'O

     1129     6508    4                           OPMSG_AERR.ERRC=ALSTAT.ERRC;

   6508  6 001277   000000 101500                    MRL     fill='000'O
         6 001300   200051 000004                    ADSC9   ALSTAT+1,,AUTO           cn=0,n=4
         6 001301   000147 600002 1                  ADSC9   OPMSG_AERR+5             cn=3,n=2

   6508  6 001302                       ALIGN20      null
     1130     6509    4   ALIGN20:                ;
     1131     6510    4                           CALL REL_ALR;

   6510  6 001302   005155 701000 6                  TSX1    REL_ALR
         6 001303   000000 011000                    NOP     0

     1132     6511    4                           GOTO ALIGN01;

   6511  6 001304   001232 710000 6                  TRA     ALIGN01

     1133     6512
     1134     6513    4                         CASE (FOAS_NTTD#);

   6508  6 001305                       ALIGN21      null
     1135     6514    4   ALIGN21:                ;
     1136     6515    4                           DEV$->FO$DEV.FLG.ALGNED='1'B;

   6515  6 001305   000000 470400 xsym               LDP0    FO_DEV$
         6 001306   004000 236007                    LDQ     2048,DL
         6 001307   000012 256100                    ORSQ    10,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:174  

     1137     6516    4                           CALL REL_ALR;

   6516  6 001310   005155 701000 6                  TSX1    REL_ALR
         6 001311   000000 011000                    NOP     0

     1138     6517    4                           IF DEV$->FO$DEV.STATE = FOS_IALN#

   6517  6 001312   000000 470400 xsym               LDP0    FO_DEV$
         6 001313   000011 236100                    LDQ     9,,PR0
         6 001314   777000 376007                    ANQ     -512,DL
         6 001315   004000 116007                    CMPQ    2048,DL
         6 001316   001320 601000 6                  TNZ     s:6521

     1139     6518    5                           THEN DO;

     1140     6519    5                             GOTO CLEANUP_IALN;

   6519  6 001317   002111 710000 6                  TRA     CLEANUP_IALN

     1141     6520    5                             END;
     1142     6521    4                           IF FIL$->FO$FIL.FLG.CHKPTD THEN CALL START_CHKPF;

   6521  6 001320   000000 471400 xsym               LDP1    FO_FIL$
         6 001321   100015 236100                    LDQ     13,,PR1
         6 001322   000004 316007                    CANQ    4,DL
         6 001323   001327 600000 6                  TZE     s:6522

   6521  6 001324   005177 701000 6                  TSX1    START_CHKPF
         6 001325   000000 011000                    NOP     0
         6 001326   001331 710000 6                  TRA     s:6523

     1143     6522    4                           ELSE CALL START_FIRSTEXT;

   6522  6 001327   005333 701000 6                  TSX1    START_FIRSTEXT
         6 001330   000000 011000                    NOP     0

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:175  
     1144     6523    4                           GOTO DEV_EVRTN;

   6523  6 001331   004237 710000 6                  TRA     DEV_EVRTN

     1145     6524
     1146     6525    4                         CASE (FOAS_JVFU#);

     1147     6526    4                           DEV$->FO$DEV.FLG.JVFU='1'B;

   6526  6 001332   000000 470400 xsym               LDP0    FO_DEV$
         6 001333   000200 236007                    LDQ     128,DL
         6 001334   000012 256100                    ORSQ    10,,PR0

     1148     6527    4                           GOTO ALIGN22;

   6527  6 001335   001342 710000 6                  TRA     ALIGN22

     1149     6528
     1150     6529    4                         CASE (FOAS_JDLM#);

     1151     6530    4                           DEV$->FO$DEV.FLG.JDEVLIMIT='1'B;

   6530  6 001336   000000 470400 xsym               LDP0    FO_DEV$
         6 001337   000002 236003                    LDQ     2,DU
         6 001340   000012 256100                    ORSQ    10,,PR0

     1152     6531    4                           GOTO ALIGN22;

   6531  6 001341   001342 710000 6                  TRA     ALIGN22

     1153     6532
     1154     6533    4                         CASE (FOAS_LAST#);

   6531  6 001342                       ALIGN22      null
     1155     6534    4   ALIGN22:                ;
     1156     6535    4                           ACKTYP=1;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:176  
   6535  6 001342   000001 235007                    LDA     1,DL
         6 001343   200047 755100                    STA     ACKTYP,,AUTO

     1157     6536    4                           GOTO ALIGN3;

   6536  6 001344   001346 710000 6                  TRA     ALIGN3

     1158     6537
     1159     6538    4                         CASE (FOAS_GRAN#);

     1160     6539    4                           ACKTYP=0;

   6539  6 001345   200047 450100                    STZ     ACKTYP,,AUTO

   6539  6 001346                       ALIGN3       null
     1161     6540    4   ALIGN3:                 ;
     1162     6541    4                           WGR_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;

   6541  6 001346   000000 470400 xsym               LDP0    FO_DEV$
         6 001347   000001 236100                    LDQ     1,,PR0
         6 001350   000615 756000 1                  STQ     WGR_SYMB+5

     1163     6542    4                           WGR_SYMB.V.ACK#='1'B;

   6542  6 001351   000004 236007                    LDQ     4,DL
         6 001352   000636 256000 1                  ORSQ    WGR_SYMB+22

     1164     6543    4                           CALL M$SYMBIO (WGR_SYMB) ALTRET(ALIGN31);

   6543  6 001353   000610 630400 1                  EPPR0   WGR_SYMB
         6 001354   570000 713400                    CLIMB   alt,+61440
         6 001355   403400 401760                    pmme    nvectors=8
         6 001356   001402 702000 6                  TSX2    ALIGN31

     1165     6544    4                           IF DEV$->FO$DEV.STATE ~= FOS_IALN#

   6544  6 001357   000000 470400 xsym               LDP0    FO_DEV$
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:177  
         6 001360   000011 236100                    LDQ     9,,PR0
         6 001361   777000 376007                    ANQ     -512,DL
         6 001362   004000 116007                    CMPQ    2048,DL
         6 001363   001366 600000 6                  TZE     s:6547

     1166     6545    4                           THEN
     1167     6546    4                            DEV$->FO$DEV.STATE=FOS_BUSY#;

   6546  6 001364   001000 236007                    LDQ     512,DL
         6 001365   000011 552110                    STBQ    9,'10'O,PR0

     1168     6547    4                           DEV$->FO$DEV.FLG.ACKEXP='1'B;

   6547  6 001366   100000 236007                    LDQ     32768,DL
         6 001367   000012 256100                    ORSQ    10,,PR0

     1169     6548    4                           IF ACKTYP ~= 0 THEN

   6548  6 001370   200047 235100                    LDA     ACKTYP,,AUTO
         6 001371   001375 600000 6                  TZE     s:6550

     1170     6549    4                            DEV$->FO$DEV.TOKERSN=FOTR_LALGR#;

   6549  6 001372   003000 236003                    LDQ     1536,DU
         6 001373   000015 552140                    STBQ    13,'40'O,PR0
         6 001374   001377 710000 6                  TRA     s:6551

     1171     6550    4                           ELSE DEV$->FO$DEV.TOKERSN=0;                    /*#15.169*/

   6550  6 001375   000000 236003                    LDQ     0,DU
         6 001376   000015 552140                    STBQ    13,'40'O,PR0

     1172     6551    4                           DEV$->FO$DEV.FLG.AIP='1'B;

   6551  6 001377   010000 236007                    LDQ     4096,DL
         6 001400   000012 256100                    ORSQ    10,,PR0

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:178  
     1173     6552    4                           GOTO DEV_EVRTN;

   6552  6 001401   004237 710000 6                  TRA     DEV_EVRTN

   6551  6 001402                       ALIGN31      null
     1174     6553    4   ALIGN31:                ;
     1175     6554    4                           IF DEV$->FO$DEV.STATE = FOS_IALN#

   6554  6 001402   000000 470400 xsym               LDP0    FO_DEV$
         6 001403   000011 236100                    LDQ     9,,PR0
         6 001404   777000 376007                    ANQ     -512,DL
         6 001405   004000 116007                    CMPQ    2048,DL
         6 001406   002111 600000 6                  TZE     CLEANUP_IALN

     1176     6555    4                           THEN
     1177     6556    4                            GOTO CLEANUP_IALN;
     1178     6557                                                     /**/
     1179     6558                                      /* If the device disconnected during
     1180     6559                                         the alignment sequence, release
     1181     6560                                         alignment granule, return, and
     1182     6561                                         await disconnect message from
     1183     6562                                         the comgroup. */
     1184     6563                                                     /**/
     1185     6564    4                           IF B$ERRCODE = %E$ALGNDSC

   6564  6 001407   000000 471400 xsym               LDP1    B$TCB$
         6 001410   100000 473500                    LDP3    0,,PR1
         6 001411   300102 236100                    LDQ     66,,PR3
         6 001412   377770 376007                    ANQ     131064,DL
         6 001413   021410 116007                    CMPQ    8968,DL
         6 001414   001422 601000 6                  TNZ     s:6573

     1186     6565    4                           THEN
     1187     6566    5                             DO;

     1188     6567    5                             DEV$ -> FO$DEV.FLG.IDSC = '1'B;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:179  
   6567  6 001415   000001 236003                    LDQ     1,DU
         6 001416   000012 256100                    ORSQ    10,,PR0

     1189     6568    5                             CALL REL_ALR;

   6568  6 001417   005155 701000 6                  TSX1    REL_ALR
         6 001420   000000 011000                    NOP     0

     1190     6569    5                             GOTO DEV_EVRTN;

   6569  6 001421   004237 710000 6                  TRA     DEV_EVRTN

     1191     6570    5                             END;
     1192     6571                                                     /**/
     1193     6572
     1194     6573    4                           IF B$ERRCODE = %E$FPABRT

   6573  6 001422   021440 116007                    CMPQ    8992,DL
         6 001423   001427 601000 6                  TNZ     s:6579

     1195     6574    5                           THEN DO;

     1196     6575    5                             CALL REL_ALR;

   6575  6 001424   005155 701000 6                  TSX1    REL_ALR
         6 001425   000000 011000                    NOP     0

     1197     6576    5                             GOTO DEV_EVRTN;

   6576  6 001426   004237 710000 6                  TRA     DEV_EVRTN

     1198     6577    5                             END;
     1199     6578
     1200     6579    4                           IF B$ERRCODE ~= %E$NOSTA THEN CALL BAD_SYMBIO;

   6579  6 001427   015340 116007                    CMPQ    6880,DL
         6 001430   001433 600000 6                  TZE     s:6580
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:180  

   6579  6 001431   005645 701000 6                  TSX1    BAD_SYMBIO
         6 001432   000000 011000                    NOP     0

     1201     6580    4                           GOTO DEV_EVRTN;

   6580  6 001433   004237 710000 6                  TRA     DEV_EVRTN

     1202     6581
     1203     6582    4                         CASE (FOAS_BDIM#);

     1204     6583    4                           OPMSG_AERR.SUBC=FOAE_BDIM#;

   6583  6 001434   002000 236007                    LDQ     1024,DL
         6 001435   000147 552010 1                  STBQ    OPMSG_AERR+5,'10'O

     1205     6584    4                           IF DEV$->FO$DEV.FLG.AIP = '0'B THEN GOTO ALIGN20;

   6584  6 001436   000000 470400 xsym               LDP0    FO_DEV$
         6 001437   000012 236100                    LDQ     10,,PR0
         6 001440   010000 316007                    CANQ    4096,DL
         6 001441   001302 600000 6                  TZE     ALIGN20

     1206     6585    4                           OPMSG_AERR.DEVNM=DEVNAME;

   6585  6 001442   000000 237000 1                  LDAQ    DEVNAME
         6 001443   000145 755000 1                  STA     OPMSG_AERR+3
         6 001444   000146 756000 1                  STQ     OPMSG_AERR+4

     1207     6586    4                           CALL M$WRITE (OCMSG_AERR);

   6586  6 001445   000344 630400 2                  EPPR0   OCMSG_AERR
         6 001446   040001 713400                    CLIMB   write
         6 001447   401400 401760                    pmme    nvectors=4

     1208     6587    4                           DEV$->FO$DEV.SUSRSN=FOSR_FALN#;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:181  
   6587  6 001450   000000 470400 xsym               LDP0    FO_DEV$
         6 001451   000010 236007                    LDQ     8,DL
         6 001452   000011 552104                    STBQ    9,'04'O,PR0

     1209     6588    4                           IF DEV$->FO$DEV.STATE = FOS_IALN#

   6588  6 001453   000011 236100                    LDQ     9,,PR0
         6 001454   777000 376007                    ANQ     -512,DL
         6 001455   004000 116007                    CMPQ    2048,DL
         6 001456   002111 600000 6                  TZE     CLEANUP_IALN

     1210     6589    4                           THEN
     1211     6590    4                            GOTO CLEANUP_IALN;
     1212     6591    4                           GOTO DEV_SUSPEND;

   6591  6 001457   003034 710000 6                  TRA     DEV_SUSPEND

     1213     6592
     1214     6593    4                       END; /* CASE ALSTAT.STAT */

   6593  6 001460   004237 710000 6                  TRA     DEV_EVRTN

     1215     6594
     1216     6595
     1217     6596    3                   CASE (ELSE);

     1218     6597    3                     CALL DEV_EVSCREECH;

   6597  6 001461   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 001462   000000 011000                    NOP     0

     1219     6598    3                 END; /* CASE SUSRSN */

   6598  6 001463   004237 710000 6                  TRA     DEV_EVRTN

     1220     6599        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:182  
     1221     6600        /*
     1222     6601                             ###    #####   #####   #   #   #####
     1223     6602                            #   #   #       #       #   #     #
     1224     6603                            #       #       #        # #      #
     1225     6604                             ###    ####    ####      #       #
     1226     6605                                #   #       #        # #      #
     1227     6606                            #   #   #       #       #   #     #
     1228     6607                             ###    #       #####   #   #     #
     1229     6608        */
     1230     6609        /**
     1231     6610         **
     1232     6611         **
     1233     6612         **      SYMBIONT FINISHED EXTENT EVENT
     1234     6613         **
     1235     6614         **
     1236     6615         **/
     1237     6616    2             CASE (FODE_SFEXT#);

     1238     6617    3                 DO CASE (STATE);

   6617  6 001464   200044 235100                    LDA     STATE,,AUTO
         6 001465   000004 115007                    CMPA    4,DL
         6 001466   001470 602005 6                  TNC     s:6617+4,AL
         6 001467   001720 710000 6                  TRA     s:6721
         6 001470   001720 710000 6                  TRA     s:6721
         6 001471   001474 710000 6                  TRA     s:6619
         6 001472   001720 710000 6                  TRA     s:6721
         6 001473   001722 710000 6                  TRA     s:6722

     1239     6618    3                   CASE (FOS_BUSY#);

     1240     6619    3                     IF INFO = 0 THEN

   6619  6 001474   200004 473500                    LDP3    @DINFO,,AUTO
         6 001475   300000 235100                    LDA     0,,PR3
         6 001476   001622 601000 6                  TNZ     s:6682

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:183  
     1241     6620        /***********************************************************
     1242     6621         *                                                         *
     1243     6622         *               ASKING FOR NEXT EXTENT                    *
     1244     6623         *                                                         *
     1245     6624         ***********************************************************/
     1246     6625    4                       DO;

     1247     6626    4                       IF DEV$->FO$DEV.FLG.LASTEXT THEN GOTO DEV_EVRTN;

   6626  6 001477   000012 236100                    LDQ     10,,PR0
         6 001500   000010 316007                    CANQ    8,DL
         6 001501   004237 601000 6                  TNZ     DEV_EVRTN

     1248     6627    4                       EXT$=FIL$->FO$FIL.NXTEXT$;

   6627  6 001502   000000 474400 xsym               LDP4    FO_FIL$
         6 001503   400001 236100                    LDQ     1,,PR4
         6 001504   200045 756100                    STQ     EXT$,,AUTO

     1249     6628                                      /* Are we at the end of the file? */
     1250     6629                                           /* If we are, then MOOS has already
     1251     6630                                              prompted us for a new extent. */
     1252     6631    4                       IF EXT$=ADDR(NIL) THEN

   6631  6 001505   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 001506   001525 601000 6                  TNZ     s:6647

     1253     6632    5                         DO;

     1254     6633    5                         IF (NOT FIL$->FO$FIL.FLG.GLC) AND DEV$->FO$DEV.FLG.DIRECTION
              6633                                  THEN

   6633  6 001507   400015 236100                    LDQ     13,,PR4
         6 001510   000100 316007                    CANQ    64,DL
         6 001511   001520 601000 6                  TNZ     s:6640
         6 001512   000012 236100                    LDQ     10,,PR0
         6 001513   000002 316007                    CANQ    2,DL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:184  
         6 001514   001520 600000 6                  TZE     s:6640

     1255     6634    6                           DO;

     1256     6635    6                           DEV$->FO$DEV.FLG.CHIDLE = '1'B;

   6635  6 001515   000100 236007                    LDQ     64,DL
         6 001516   000012 256100                    ORSQ    10,,PR0

     1257     6636    6                           GOTO DEV_EVRTN;

   6636  6 001517   004237 710000 6                  TRA     DEV_EVRTN

     1258     6637    6                           END;
     1259     6638    5                         ELSE
     1260     6639    6                           DO;

     1261     6640    6                           EXTENT.GRANS#=0;

   6640  6 001520   000000 236003                    LDQ     0,DU
         6 001521   000004 552040 1                  STBQ    EXTENT,'40'O

     1262     6641    6                           EXTENT.DAD#=1;

   6641  6 001522   000001 236007                    LDQ     1,DL
         6 001523   000004 552034 1                  STBQ    EXTENT,'34'O

     1263     6642    6                           END;

     1264     6643    5                         END;

   6643  6 001524   001557 710000 6                  TRA     s:6656

     1265     6644    4                       ELSE
     1266     6645                                      /* More chunks are coming */
     1267     6646    5                         DO;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:185  
     1268     6647    5                         EXTENT.GRANS#=EXT$->FO$EXT.GRANS;

   6647  6 001525   200045 475500                    LDP5    EXT$,,AUTO
         6 001526   500001 236100                    LDQ     1,,PR5
         6 001527   000004 552040 1                  STBQ    EXTENT,'40'O

     1269     6648    5                         EXTENT.DAD#=EXT$->FO$EXT.DAD;

   6648  6 001530   500001 236100                    LDQ     1,,PR5
         6 001531   000004 552034 1                  STBQ    EXTENT,'34'O

     1270     6649    5                         EXTENT.STAMP=EXT$->FO$EXT.STAMP;

   6649  6 001532   500002 236100                    LDQ     2,,PR5
         6 001533   000005 756000 1                  STQ     EXTENT+1

     1271     6650    5                         IF NOT DEV$->FO$DEV.FLG.DIRECTION THEN

   6650  6 001534   000012 236100                    LDQ     10,,PR0
         6 001535   000002 316007                    CANQ    2,DL
         6 001536   001557 601000 6                  TNZ     s:6656

     1272     6651    6                           DO;

     1273     6652    6                           EXTENT.DAD#=EXTENT.DAD#+EXTENT.GRANS#-1;

   6652  6 001537   000004 236000 1                  LDQ     EXTENT
         6 001540   000033 772000                    QRL     27
         6 001541   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 001542   000004 236000 1                  LDQ     EXTENT
         6 001543   000032 376000 xsym               ANQ     B_VECTNIL+26
         6 001544   200106 036100                    ADLQ    @FO$FIL+2,,AUTO
         6 001545   000001 136007                    SBLQ    1,DL
         6 001546   000004 552034 1                  STBQ    EXTENT,'34'O

     1274     6653    6                           EXTENT.STAMP.FRDAD#=EXTENT.STAMP.FRDAD#+EXTENT.GRANS#-1;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:186  
   6653  6 001547   000004 236000 1                  LDQ     EXTENT
         6 001550   000033 772000                    QRL     27
         6 001551   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 001552   000005 236000 1                  LDQ     EXTENT+1
         6 001553   000777 376007                    ANQ     511,DL
         6 001554   200106 036100                    ADLQ    @FO$FIL+2,,AUTO
         6 001555   000001 136007                    SBLQ    1,DL
         6 001556   000005 552004 1                  STBQ    EXTENT+1,'04'O

     1275     6654    6                           END;

     1276     6655    5                         END;

     1277     6656    4                       CALL M$SYMBIO (NXTEXT_SYMB) ALTRET(A6);

   6656  6 001557   000470 630400 2                  EPPR0   NXTEXT_SYMB
         6 001560   570000 713400                    CLIMB   alt,+61440
         6 001561   403400 401760                    pmme    nvectors=8
         6 001562   001611 702000 6                  TSX2    A6

     1278     6657    4                       IF EXT$ ~= ADDR(NIL) THEN

   6657  6 001563   200045 236100                    LDQ     EXT$,,AUTO
         6 001564   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 001565   001605 600000 6                  TZE     s:6668

     1279     6658    5                         DO;

     1280     6659    5                         IF DEV$->FO$DEV.FLG.DIRECTION THEN

   6659  6 001566   000000 470400 xsym               LDP0    FO_DEV$
         6 001567   000012 236100                    LDQ     10,,PR0
         6 001570   000002 316007                    CANQ    2,DL
         6 001571   001577 600000 6                  TZE     s:6663

     1281     6660    5                          FIL$->FO$FIL.NXTEXT$=EXT$->FO$EXT.LNK$;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:187  
   6660  6 001572   200045 471500                    LDP1    EXT$,,AUTO
         6 001573   100000 236100                    LDQ     0,,PR1
         6 001574   000000 473400 xsym               LDP3    FO_FIL$
         6 001575   300001 756100                    STQ     1,,PR3
         6 001576   001610 710000 6                  TRA     s:6669

     1282     6661    5                         ELSE
     1283     6662    6                           DO;

     1284     6663    6                           CALL SET_EXTBLNK;

   6663  6 001577   006003 701000 6                  TSX1    SET_EXTBLNK
         6 001600   000000 011000                    NOP     0

     1285     6664                                      /* Set extent backlink */
     1286     6665    6                           FIL$->FO$FIL.NXTEXT$=EXTBLNK$;

   6665  6 001601   200041 236100                    LDQ     EXTBLNK$,,AUTO
         6 001602   000000 470400 xsym               LDP0    FO_FIL$
         6 001603   000001 756100                    STQ     1,,PR0

     1287     6666    6                           END;

     1288     6667    5                         END;

   6667  6 001604   001610 710000 6                  TRA     s:6669

     1289     6668    4                       ELSE DEV$->FO$DEV.FLG.LASTEXT='1'B;

   6668  6 001605   000000 470400 xsym               LDP0    FO_DEV$
         6 001606   000010 236007                    LDQ     8,DL
         6 001607   000012 256100                    ORSQ    10,,PR0

     1290     6669    4                       GOTO DEV_EVRTN;

   6669  6 001610   004237 710000 6                  TRA     DEV_EVRTN

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:188  
     1291     6670    4   A6:                 IF B$ERRCODE ~= %E$NOSTA THEN CALL BAD_SYMBIO;

   6670  6 001611   000000 470400 xsym  A6           LDP0    B$TCB$
         6 001612   000000 471500                    LDP1    0,,PR0
         6 001613   100102 236100                    LDQ     66,,PR1
         6 001614   377770 376007                    ANQ     131064,DL
         6 001615   015340 116007                    CMPQ    6880,DL
         6 001616   001621 600000 6                  TZE     s:6671

   6670  6 001617   005645 701000 6                  TSX1    BAD_SYMBIO
         6 001620   000000 011000                    NOP     0

     1292     6671    4                       GOTO DEV_EVRTN;

   6671  6 001621   004237 710000 6                  TRA     DEV_EVRTN

     1293     6672    4                       END;
     1294     6673
     1295     6674    3                     ELSE
     1296     6675        /***********************************************************
     1297     6676         *                                                         *
     1298     6677         *               FINISHED LAST EXTENT                      *
     1299     6678         *                                                         *
     1300     6679         ***********************************************************/
     1301     6680
     1302     6681    4                       DO;

     1303     6682    4                       IF NOT DEV$->FO$DEV.FLG.LASTEXT

   6682  6 001622   000012 236100                    LDQ     10,,PR0
         6 001623   000010 316007                    CANQ    8,DL
         6 001624   001627 600000 6                  TZE     s:6685
         6 001625   000004 316007                    CANQ    4,DL
         6 001626   001632 600000 6                  TZE     s:6689

     1304     6683    4                       OR DEV$->FO$DEV.FLG.SIP THEN
     1305     6684    5                         DO;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:189  

     1306     6685    5                         CALL DEV_EVSCREECH;

   6685  6 001627   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 001630   000000 011000                    NOP     0

     1307     6686    5                         GOTO DEV_EVRTN;

   6686  6 001631   004237 710000 6                  TRA     DEV_EVRTN

     1308     6687    5                         END;
     1309     6688
     1310     6689    4                       CALL M$SYMBIO(TOKEN_SYMB) ALTRET(A7);

   6689  6 001632   000622 630400 2                  EPPR0   TOKEN_SYMB
         6 001633   570000 713400                    CLIMB   alt,+61440
         6 001634   403400 401760                    pmme    nvectors=8
         6 001635   001642 702000 6                  TSX2    A7

     1311     6690    4                       DEV$->FO$DEV.TOKERSN=FOTR_CLOSE#;

   6690  6 001636   000000 470400 xsym               LDP0    FO_DEV$
         6 001637   002000 236003                    LDQ     1024,DU
         6 001640   000015 552140                    STBQ    13,'40'O,PR0

     1312     6691    4                       GOTO DEV_EVRTN;

   6691  6 001641   004237 710000 6                  TRA     DEV_EVRTN

     1313     6692    4   A7:                 IF B$ERRCODE = %E$NOSTA THEN GOTO DEV_EVRTN;

   6692  6 001642   000000 470400 xsym  A7           LDP0    B$TCB$
         6 001643   000000 471500                    LDP1    0,,PR0
         6 001644   100102 236100                    LDQ     66,,PR1
         6 001645   377770 376007                    ANQ     131064,DL
         6 001646   015340 116007                    CMPQ    6880,DL
         6 001647   004237 600000 6                  TZE     DEV_EVRTN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:190  

   6692  6 001650                       DEV_GCLTOKE  null
     1314     6693    4   DEV_GCLTOKE:        ;
     1315     6694
     1316     6695    4                       IF DEV$->FO$DEV.FLG.FWDSPC THEN

   6695  6 001650   000000 470400 xsym               LDP0    FO_DEV$
         6 001651   000012 236100                    LDQ     10,,PR0
         6 001652   000020 316007                    CANQ    16,DL
         6 001653   001657 600000 6                  TZE     DEV_FINCOPY

     1317     6696    5                         DO;

     1318     6697    5                         DEV$->FO$DEV.SUSRSN = FOSR_AEOF#;

   6697  6 001654   000014 236007                    LDQ     12,DL
         6 001655   000011 552104                    STBQ    9,'04'O,PR0

     1319     6698    5                         GOTO DEV_SUSPEND;

   6698  6 001656   003034 710000 6                  TRA     DEV_SUSPEND

   6695  6 001657                       DEV_FINCOPY  null
     1320     6699    5                         END;
     1321     6700
     1322     6701    4   DEV_FINCOPY:        ;
     1323     6702    4                       FIL$->FO$FIL.COPIES=FIL$->FO$FIL.COPIES-1;

   6702  6 001657   000000 470400 xsym               LDP0    FO_FIL$
         6 001660   000007 720100                    LXL0    7,,PR0
         6 001661   777777 621010                    EAX1    -1,X0
         6 001662   000007 441100                    SXL1    7,,PR0

     1324     6703    4                      IF FIL$->FO$FIL.FLG.SAP THEN FIL$->FO$FIL.SAPCOPIES=FIL$->FO$FIL
              6703                                .SAPCOPIES-1;

   6703  6 001663   000015 236100                    LDQ     13,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:191  
         6 001664   000040 316007                    CANQ    32,DL
         6 001665   001671 600000 6                  TZE     s:6705

   6703  6 001666   000016 236100                    LDQ     14,,PR0
         6 001667   777000 036007                    ADLQ    -512,DL
         6 001670   000016 552110                    STBQ    14,'10'O,PR0

     1325     6704
     1326     6705    4                       IF FIL$->FO$FIL.COPIES ~= 0 THEN

   6705  6 001671   000000 101003                    CMPX1   0,DU
         6 001672   001715 600000 6                  TZE     s:6713

     1327     6706    5                         DO;

     1328     6707    5                         FIL_CNUM=FIL$->FO$FIL.HICNUM;

   6707  6 001673   000016 236100                    LDQ     14,,PR0
         6 001674   000022 772000                    QRL     18
         6 001675   200021 756100                    STQ     FIL_CNUM,,AUTO

     1329     6708    5                         CALL FOF$FITUPD (FOFU_COPY#,,FIL_CNUM);

   6708  6 001676   200021 631500                    EPPR1   FIL_CNUM,,AUTO
         6 001677   200110 451500                    STP1    @FO$FIL+4,,AUTO
         6 001700   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 001701   000011 235000 7                  LDA     9
         6 001702   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 001703   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 001704   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 001705   000000 701000 xent               TSX1    FOF$FITUPD
         6 001706   000000 011000                    NOP     0

     1330     6709    5                         FIL$->FO$FIL.FLG.CHKPTD = '0'B;

   6709  6 001707   000000 470400 xsym               LDP0    FO_FIL$
         6 001710   000012 236000 7                  LDQ     10
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:192  
         6 001711   000015 356100                    ANSQ    13,,PR0

     1331     6710    5                         CALL FOF$REPRIO;

   6710  6 001712   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 001713   000000 701000 xent               TSX1    FOF$REPRIO
         6 001714   000000 011000                    NOP     0

     1332     6711    5                         END;

     1333     6712
     1334     6713    4                       QUITRSN=FOQR_COPY#;

   6713  6 001715   000004 235007                    LDA     4,DL
         6 001716   200023 755100                    STA     QUITRSN,,AUTO

     1335     6714    4                       GOTO DEV_QUIT;

   6714  6 001717   002341 710000 6                  TRA     DEV_QUIT

     1336     6715    4                       END;
     1337     6716
     1338     6717
     1339     6718    3                   CASE (FOS_SPRQ#);

     1340     6719
     1341     6720    3                   CASE (ELSE);

     1342     6721    3                     CALL DEV_EVSCREECH;

   6721  6 001720   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 001721   000000 011000                    NOP     0

     1343     6722    3                 END; /* CASE STATE */

   6722  6 001722   004237 710000 6                  TRA     DEV_EVRTN

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:193  
     1344     6723        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:194  
     1345     6724        /*
     1346     6725
     1347     6726                           SSS   TTTTT   AAA    CCC   K   K
     1348     6727                          S   S    T    A   A  C   C  K  K
     1349     6728                          S        T    A   A  C      K K
     1350     6729                           SSS     T    AAAAA  C      KK
     1351     6730                              S    T    A   A  C      K K
     1352     6731                          S   S    T    A   A  C   C  K  K
     1353     6732                           SSS     T    A   A   CCC   K   K
     1354     6733
     1355     6734        */
     1356     6735        /**
     1357     6736         **
     1358     6737         **
     1359     6738         **      SYMBIONT ACK RESPONSE (ACK TO M$SYMBIO WRITE )
     1360     6739         **
     1361     6740         **
     1362     6741         **/
     1363     6742    2             CASE (FODE_STACK#);

     1364     6743    2               IF DEV$->FO$DEV.FLG.ACKEXP THEN

   6743  6 001723   000012 236100                    LDQ     10,,PR0
         6 001724   100000 316007                    CANQ    32768,DL
         6 001725   004237 600000 6                  TZE     DEV_EVRTN

     1365     6744    3                 DO;

     1366     6745    3                 IF DEV$->FO$DEV.TOKERSN ~= 0 THEN                         /*#15.169*/

   6745  6 001726   000015 236100                    LDQ     13,,PR0
         6 001727   777000 316003                    CANQ    -512,DU
         6 001730   001753 600000 6                  TZE     s:6756

     1367     6746    3                  CALL M$SYMBIO (TOKEN_SYMB)

   6746  6 001731   000622 630400 2                  EPPR0   TOKEN_SYMB
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:195  
         6 001732   570000 713400                    CLIMB   alt,+61440
         6 001733   403400 401760                    pmme    nvectors=8
         6 001734   001736 702000 6                  TSX2    s:6748
         6 001735   001752 710000 6                  TRA     s:6753+1

     1368     6747    4                  WHENALTRETURN DO;

     1369     6748    4                    IF B$ERRCODE = %E$ALGNDSC

   6748  6 001736   000000 470400 xsym               LDP0    B$TCB$
         6 001737   000000 471500                    LDP1    0,,PR0
         6 001740   100102 236100                    LDQ     66,,PR1
         6 001741   377770 376007                    ANQ     131064,DL
         6 001742   021410 116007                    CMPQ    8968,DL
         6 001743   001751 601000 6                  TNZ     s:6753

     1370     6749    5                    THEN DO;

     1371     6750    5                      DEV$ -> FO$DEV.FLG.IDSC = '1'B;

   6750  6 001744   000000 473400 xsym               LDP3    FO_DEV$
         6 001745   000001 236003                    LDQ     1,DU
         6 001746   300012 256100                    ORSQ    10,,PR3

     1372     6751    5                      CALL REL_ALR;

   6751  6 001747   005155 701000 6                  TSX1    REL_ALR
         6 001750   000000 011000                    NOP     0

     1373     6752    5                      END;

     1374     6753    4                    GOTO DEV_EVRTN;

   6753  6 001751   004237 710000 6                  TRA     DEV_EVRTN
         6 001752   004237 710000 6                  TRA     DEV_EVRTN

     1375     6754    4                    END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:196  
     1376     6755    3                 ELSE
     1377     6756    3                  IF DEV$->FO$DEV.FLG.AIP THEN

   6756  6 001753   000012 236100                    LDQ     10,,PR0
         6 001754   010000 316007                    CANQ    4096,DL
         6 001755   004237 600000 6                  TZE     DEV_EVRTN

     1378     6757    4                    DO;

     1379     6758    4                    IF DEV$ -> FO$DEV.FLG.IDSC

   6758  6 001756   000001 316003                    CANQ    1,DU
         6 001757   004237 601000 6                  TNZ     DEV_EVRTN

     1380     6759    4                    THEN
     1381     6760    4                     GOTO DEV_EVRTN;
     1382     6761    4                    IF DEV$ -> FO$DEV.FLG.MODE = FOMD_GRAPHIC#

   6761  6 001760   000004 316003                    CANQ    4,DU
         6 001761   001773 600000 6                  TZE     s:6765

     1383     6762    4                    THEN
     1384     6763    4                     CALL FOR$GALIGN (,ALSTAT);

   6763  6 001762   200050 633500                    EPPR3   ALSTAT,,AUTO
         6 001763   200107 453500                    STP3    @FO$FIL+3,,AUTO
         6 001764   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 001765   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 001766   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 001767   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 001770   000000 701000 xent               TSX1    FOR$GALIGN
         6 001771   000000 011000                    NOP     0
         6 001772   002003 710000 6                  TRA     s:6766

     1385     6764    4                    ELSE
     1386     6765    4                     CALL FOR$CALIGN (,ALSTAT);

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:197  
   6765  6 001773   200050 633500                    EPPR3   ALSTAT,,AUTO
         6 001774   200107 453500                    STP3    @FO$FIL+3,,AUTO
         6 001775   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 001776   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 001777   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 002000   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 002001   000000 701000 xent               TSX1    FOR$CALIGN
         6 002002   000000 011000                    NOP     0

     1387     6766    4                    GOTO ALIGN2;

   6766  6 002003   001261 710000 6                  TRA     ALIGN2

     1388     6767    4                    END;
     1389     6768    3                 END;
     1390     6769
     1391     6770        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:198  
     1392     6771        /*
     1393     6772                             ###    #####    ###    #   #   #   #
     1394     6773                            #   #     #     #   #   #  #    #   #
     1395     6774                            #         #     #   #   # #     ##  #
     1396     6775                             ###      #     #   #   ##      # # #
     1397     6776                                #     #     #   #   # #     #  ##
     1398     6777                            #   #     #     #   #   #  #    #   #
     1399     6778                             ###      #      ###    #   #   #   #
     1400     6779        */
     1401     6780        /**
     1402     6781         **
     1403     6782         **
     1404     6783         **      SYMBIONT TOKE RESPONSE (TO M$SYMBIO WRITE )
     1405     6784         **
     1406     6785         **
     1407     6786         **/
     1408     6787    2             CASE (FODE_STOKN#);

     1409     6788    2               TOKERSN=DEV$->FO$DEV.TOKERSN;                         /*#15.169#B00CG*/

   6788  6 002004   000015 236100                    LDQ     13,,PR0
         6 002005   000033 772000                    QRL     27
         6 002006   200037 756100                    STQ     TOKERSN,,AUTO

     1410     6789    2               DEV$->FO$DEV.TOKERSN=0;                               /*#15.169#B00CG*/

   6789  6 002007   000000 236003                    LDQ     0,DU
         6 002010   000015 552140                    STBQ    13,'40'O,PR0

     1411     6790    2               IF DEV$ -> FO$DEV.FLG.IDSC

   6790  6 002011   000012 236100                    LDQ     10,,PR0
         6 002012   000001 316003                    CANQ    1,DU
         6 002013   004237 601000 6                  TNZ     DEV_EVRTN

     1412     6791    2               THEN
     1413     6792    2                GOTO DEV_EVRTN; /* Ignore markers if disconnecting */
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:199  
     1414     6793    3                 DO CASE (STATE);

   6793  6 002014   200044 235100                    LDA     STATE,,AUTO
         6 002015   000005 115007                    CMPA    5,DL
         6 002016   002020 602005 6                  TNC     s:6793+4,AL
         6 002017   002265 710000 6                  TRA     s:6898
         6 002020   002265 710000 6                  TRA     s:6898
         6 002021   002025 710000 6                  TRA     s:6795
         6 002022   002265 710000 6                  TRA     s:6898
         6 002023   002267 710000 6                  TRA     s:6899
         6 002024   002101 710000 6                  TRA     s:6826

     1415     6794    3                   CASE (FOS_BUSY#);

     1416     6795    4                       DO CASE (TOKERSN);

   6795  6 002025   200037 235100                    LDA     TOKERSN,,AUTO
         6 002026   000005 115007                    CMPA    5,DL
         6 002027   002031 602005 6                  TNC     s:6795+4,AL
         6 002030   004237 710000 6                  TRA     DEV_EVRTN
         6 002031   002100 710000 6                  TRA     s:6824
         6 002032   002060 710000 6                  TRA     s:6815
         6 002033   002036 710000 6                  TRA     s:6797
         6 002034   002037 710000 6                  TRA     s:6799
         6 002035   002065 710000 6                  TRA     s:6818

     1417     6796    4                         CASE (FOTR_CLOSE#);

     1418     6797    4                           GOTO DEV_GCLTOKE;

   6797  6 002036   001650 710000 6                  TRA     DEV_GCLTOKE

     1419     6798    4                         CASE (FOTR_LALGR#);

     1420     6799    4                           IF DEV$->FO$DEV.FLG.AIP THEN

   6799  6 002037   010000 316007                    CANQ    4096,DL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:200  
         6 002040   004237 600000 6                  TZE     DEV_EVRTN

     1421     6800    5                             DO;

     1422     6801    5                             DEV$ -> FO$DEV.SUSRSN = FOSR_FALN#;

   6801  6 002041   000010 236007                    LDQ     8,DL
         6 002042   000011 552104                    STBQ    9,'04'O,PR0

     1423     6802    5                             IF DEV$ -> FO$DEV.FLG.JVFU

   6802  6 002043   000012 236100                    LDQ     10,,PR0
         6 002044   000200 316007                    CANQ    128,DL
         6 002045   002051 600000 6                  TZE     s:6806

     1424     6803    5                             THEN
     1425     6804    5                              DEV$ -> FO$DEV.SUSRSN = FOSR_VFUL#;

   6804  6 002046   000015 236007                    LDQ     13,DL
         6 002047   000011 552104                    STBQ    9,'04'O,PR0
         6 002050   002055 710000 6                  TRA     s:6810

     1426     6805    6                             ELSE DO;

     1427     6806    6                               IF DEV$ -> FO$DEV.FLG.JDEVLIMIT

   6806  6 002051   000002 316003                    CANQ    2,DU
         6 002052   002055 600000 6                  TZE     s:6810

     1428     6807    6                               THEN
     1429     6808    6                                DEV$ -> FO$DEV.SUSRSN = FOSR_DLIM#;

   6808  6 002053   000016 236007                    LDQ     14,DL
         6 002054   000011 552104                    STBQ    9,'04'O,PR0

     1430     6809    6                               END;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:201  
     1431     6810    5                             DEV$->FO$DEV.FLG.ALGNED='1'B;

   6810  6 002055   004000 236007                    LDQ     2048,DL
         6 002056   000012 256100                    ORSQ    10,,PR0

     1432     6811    5                             GOTO DEV_SUSPEND;

   6811  6 002057   003034 710000 6                  TRA     DEV_SUSPEND

     1433     6812    5                             END;
     1434     6813    4                         CASE (FOTR_WLREC#);

     1435     6814                                      /* Must we write a quit record at EOF? */
     1436     6815    4                           IF DEV$->FO$DEV.FLG.QUIT AND DEV$->FO$DEV.FLG.QUITMSG

   6815  6 002060   000040 316007                    CANQ    32,DL
         6 002061   002064 600000 6                  TZE     s:6815+4
         6 002062   000400 316007                    CANQ    256,DL
         6 002063   001030 601000 6                  TNZ     DEV_DOQUIT1
         6 002064   004237 710000 6                  TRA     DEV_EVRTN

     1437     6816    4                           THEN GOTO DEV_DOQUIT1;
     1438     6817    4                         CASE (FOTR_CHKPB#);

     1439     6818    4                           DEV$->FO$DEV.BR=FIL$->FO$FIL.CHKPBR;

   6818  6 002065   000000 473400 xsym               LDP3    FO_FIL$
         6 002066   000100 100500                    MLR     fill='000'O
         6 002067   300017 000004                    ADSC9   15,,PR3                  cn=0,n=4
         6 002070   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4

     1440     6819    4                           DEV$->FO$DEV.FLG.CBD='1'B;

   6819  6 002071   020000 236007                    LDQ     8192,DL
         6 002072   000012 256100                    ORSQ    10,,PR0

   6819  6 002073                       SPACEBACK    null
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:202  
     1441     6820    4   SPACEBACK:              ;
     1442     6821    4                           DEV$->FO$DEV.FLG.SEND_VFU='1'B;

   6821  6 002073   000000 470400 xsym               LDP0    FO_DEV$
         6 002074   400000 236007                    LDQ     -131072,DL
         6 002075   000012 256100                    ORSQ    10,,PR0

     1443     6822    4                           CALL SPACE_BACK;                                 /*#8.362*/

   6822  6 002076   005306 701000 6                  TSX1    SPACE_BACK
         6 002077   000000 011000                    NOP     0

     1444     6823
     1445     6824    4                       END; /* CASE TOKERSN */

   6824  6 002100   004237 710000 6                  TRA     DEV_EVRTN

     1446     6825    3                   CASE (FOS_IALN#);

     1447     6826    4                       DO CASE (TOKERSN);

   6826  6 002101   200037 235100                    LDA     TOKERSN,,AUTO
         6 002102   000004 115007                    CMPA    4,DL
         6 002103   002105 602005 6                  TNC     s:6826+4,AL
         6 002104   004237 710000 6                  TRA     DEV_EVRTN
         6 002105   002264 710000 6                  TRA     s:6894
         6 002106   002264 710000 6                  TRA     s:6894
         6 002107   002264 710000 6                  TRA     s:6894
         6 002110   002111 710000 6                  TRA     CLEANUP_IALN

     1448     6827    4                         CASE (FOTR_LALGR#);

   6821  6 002111                       CLEANUP_IALN null
     1449     6828    4   CLEANUP_IALN:           ;
     1450     6829
     1451     6830    4                           IF DEV$ -> FO$DEV.FLG.MODE = FOMD_GRAPHIC#

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:203  
   6830  6 002111   000012 236100                    LDQ     10,,PR0
         6 002112   000004 316003                    CANQ    4,DU
         6 002113   002121 600000 6                  TZE     s:6836

     1452     6831    4                           THEN
     1453     6832    4                            CALL M$DEACTIVATE (DEA_FPRG)

   6832  6 002114   000260 630400 2                  EPPR0   DEA_FPRG
         6 002115   500001 713400                    CLIMB   alt,+32769
         6 002116   401400 401760                    pmme    nvectors=4
         6 002117   002121 702000 6                  TSX2    s:6836
         6 002120   002121 710000 6                  TRA     s:6836

     1454     6833    5                            WHENALTRETURN DO;

     1455     6834    5                              END;

     1456     6835
     1457     6836    4                           CALL M$SYMBIO (CLOSE_SYMB)

   6836  6 002121   000526 630400 2                  EPPR0   CLOSE_SYMB
         6 002122   570000 713400                    CLIMB   alt,+61440
         6 002123   403400 401760                    pmme    nvectors=8
         6 002124   002126 702000 6                  TSX2    s:6838
         6 002125   002142 710000 6                  TRA     s:6844

     1458     6837    5                           WHENALTRETURN DO;

     1459     6838    5                             IF B$ERRCODE = %E$ALGNDSC

   6838  6 002126   000000 470400 xsym               LDP0    B$TCB$
         6 002127   000000 471500                    LDP1    0,,PR0
         6 002130   100102 236100                    LDQ     66,,PR1
         6 002131   377770 376007                    ANQ     131064,DL
         6 002132   021410 116007                    CMPQ    8968,DL
         6 002133   002140 601000 6                  TNZ     s:6842

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:204  
     1460     6839    5                             THEN
     1461     6840    5                              DEV$ -> FO$DEV.FLG.IDSC = '1'B;

   6840  6 002134   000000 473400 xsym               LDP3    FO_DEV$
         6 002135   000001 236003                    LDQ     1,DU
         6 002136   300012 256100                    ORSQ    10,,PR3
         6 002137   002142 710000 6                  TRA     s:6844

     1462     6841    5                             ELSE
     1463     6842    5                              CALL DEV_EVSCREECH;

   6842  6 002140   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002141   000000 011000                    NOP     0

     1464     6843    5                             END;

     1465     6844    4                           DEV$->FO$DEV.FLG.AIP = '0'B;

   6844  6 002142   000000 470400 xsym               LDP0    FO_DEV$
         6 002143   000003 236000 7                  LDQ     3
         6 002144   000012 356100                    ANSQ    10,,PR0

     1466     6845    4                           IF DEV$->FO$DEV.FLG.AEF

   6845  6 002145   000012 236100                    LDQ     10,,PR0
         6 002146   002000 316007                    CANQ    1024,DL
         6 002147   002153 600000 6                  TZE     s:6849

     1467     6846    4                           THEN
     1468     6847    4                            DEV$->FO$DEV.FLG.ALGNED = '0'B;

   6847  6 002150   000002 236000 7                  LDQ     2
         6 002151   000012 356100                    ANSQ    10,,PR0
         6 002152   002155 710000 6                  TRA     s:6850

     1469     6848    4                           ELSE
     1470     6849    4                            DEV$->FO$DEV.FLG.ALGNED = '1'B;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:205  

   6849  6 002153   004000 236007                    LDQ     2048,DL
         6 002154   000012 256100                    ORSQ    10,,PR0

     1471     6850    4                           CALL FOI$RBUF (FO_SPGSCB, DEV$->FO$DEV.SPG$);

   6850  6 002155   000000 236000 xsym               LDQ     FO_DEV$
         6 002156   000001 036003                    ADLQ    1,DU
         6 002157   000013 235000 7                  LDA     11
         6 002160   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 002161   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 002162   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 002163   000000 701000 xent               TSX1    FOI$RBUF
         6 002164   000000 011000                    NOP     0

     1472     6851    4                           DEV$->FO$DEV.SPG$ = ADDR(NIL);

   6851  6 002165   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 002166   000000 470400 xsym               LDP0    FO_DEV$
         6 002167   000001 756100                    STQ     1,,PR0

     1473     6852    4                           CALL REL_ALR;

   6852  6 002170   005155 701000 6                  TSX1    REL_ALR
         6 002171   000000 011000                    NOP     0

     1474     6853    4                           IF DEV$->FO$DEV.FLG.IDSC THEN EXIT;

   6853  6 002172   000000 470400 xsym               LDP0    FO_DEV$
         6 002173   000012 236100                    LDQ     10,,PR0
         6 002174   000001 316003                    CANQ    1,DU
         6 002175   002264 601000 6                  TNZ     s:6894

     1475     6854    4                           DEV$->FO$DEV.STATE = FOS_IDLE#;

   6854  6 002176   000000 236003                    LDQ     0,DU
         6 002177   000011 552110                    STBQ    9,'10'O,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:206  

     1476     6855    4                           IF DEV$->FO$DEV.FORM = ' '

   6855  6 002200   040000 106500                    CMPC    fill='040'O
         6 002201   000015 600006                    ADSC9   13,,PR0                  cn=3,n=6
         6 002202   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 002203   002206 601000 6                  TNZ     s:6860

     1477     6856    5                           THEN DO;

     1478     6857    5                             OPMSG_IALN.FORM_FLAG = 0;

   6857  6 002204   000157 552020 1                  STBQ    OPMSG_IALN+6,'20'O

     1479     6858    5                             END;

   6858  6 002205   002213 710000 6                  TRA     s:6864

     1480     6859    5                           ELSE DO;

     1481     6860    5                             OPMSG_IALN.FORM_FLAG = 1;

   6860  6 002206   000001 236003                    LDQ     1,DU
         6 002207   000157 552020 1                  STBQ    OPMSG_IALN+6,'20'O

     1482     6861    5                             OPMSG_IALN.FORM = DEV$->FO$DEV.FORM;

   6861  6 002210   040000 100500                    MLR     fill='040'O
         6 002211   000015 600006                    ADSC9   13,,PR0                  cn=3,n=6
         6 002212   000160 000006 1                  ADSC9   OPMSG_IALN+7             cn=0,n=6

     1483     6862    5                             END;

     1484     6863
     1485     6864    4                           IF DEV$->FO$DEV.RACCTL = 0

   6864  6 002213   000014 236100                    LDQ     12,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:207  
         6 002214   777000 316007                    CANQ    -512,DL
         6 002215   002221 601000 6                  TNZ     s:6869

     1486     6865    5                           THEN DO;

     1487     6866    5                             OPMSG_IALN.RACCT_FLAG = 0;

   6866  6 002216   000000 236003                    LDQ     0,DU
         6 002217   000157 552010 1                  STBQ    OPMSG_IALN+6,'10'O

     1488     6867    5                             END;

   6867  6 002220   002226 710000 6                  TRA     s:6873

     1489     6868    5                           ELSE DO;

     1490     6869    5                             OPMSG_IALN.RACCT_FLAG = 1;

   6869  6 002221   001000 236007                    LDQ     512,DL
         6 002222   000157 552010 1                  STBQ    OPMSG_IALN+6,'10'O

     1491     6870    5                             OPMSG_IALN.RACCT = DEV$->FO$DEV.RACCT;

   6870  6 002223   040000 100500                    MLR     fill='040'O
         6 002224   000020 200010                    ADSC9   16,,PR0                  cn=1,n=8
         6 002225   000161 400010 1                  ADSC9   OPMSG_IALN+8             cn=2,n=8

     1492     6871    5                             END;

     1493     6872
     1494     6873    4                           IF DEV$->FO$DEV.FLG.JVFU

   6873  6 002226   000012 236100                    LDQ     10,,PR0
         6 002227   000200 316007                    CANQ    128,DL
         6 002230   002237 600000 6                  TZE     s:6879

     1495     6874    5                           THEN DO;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:208  

     1496     6875    5                             OPMSG_IALN.SUBC = 2;

   6875  6 002231   000002 236007                    LDQ     2,DL
         6 002232   000157 552004 1                  STBQ    OPMSG_IALN+6,'04'O

     1497     6876    5                             CALL M$WRITE (OCMSG_IALN);

   6876  6 002233   000424 630400 2                  EPPR0   OCMSG_IALN
         6 002234   040001 713400                    CLIMB   write
         6 002235   401400 401760                    pmme    nvectors=4

     1498     6877    5                             END;

   6877  6 002236   004237 710000 6                  TRA     DEV_EVRTN

     1499     6878    5                           ELSE DO;

     1500     6879    5                             IF DEV$->FO$DEV.FLG.JDEVLIMIT

   6879  6 002237   000002 316003                    CANQ    2,DU
         6 002240   002247 600000 6                  TZE     s:6885

     1501     6880    6                             THEN DO;

     1502     6881    6                               OPMSG_IALN.SUBC = 4;

   6881  6 002241   000004 236007                    LDQ     4,DL
         6 002242   000157 552004 1                  STBQ    OPMSG_IALN+6,'04'O

     1503     6882    6                               CALL M$WRITE (OCMSG_IALN);

   6882  6 002243   000424 630400 2                  EPPR0   OCMSG_IALN
         6 002244   040001 713400                    CLIMB   write
         6 002245   401400 401760                    pmme    nvectors=4

     1504     6883    6                               END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:209  

   6883  6 002246   004237 710000 6                  TRA     DEV_EVRTN

     1505     6884    6                             ELSE DO;

     1506     6885    6                               IF TOKERSN = FOTR_LALGR#

   6885  6 002247   200037 235100                    LDA     TOKERSN,,AUTO
         6 002250   000003 115007                    CMPA    3,DL
         6 002251   002256 600000 6                  TZE     s:6888
         6 002252   000011 236100                    LDQ     9,,PR0
         6 002253   000777 376007                    ANQ     511,DL
         6 002254   000010 116007                    CMPQ    8,DL
         6 002255   004237 601000 6                  TNZ     DEV_EVRTN

     1507     6886    6                               OR DEV$->FO$DEV.SUSRSN = FOSR_FALN#
     1508     6887    7                               THEN DO;

     1509     6888    7                                 OPMSG_IALN.SUBC = 3;

   6888  6 002256   000003 236007                    LDQ     3,DL
         6 002257   000157 552004 1                  STBQ    OPMSG_IALN+6,'04'O

     1510     6889    7                                 CALL M$WRITE (OCMSG_IALN);

   6889  6 002260   000424 630400 2                  EPPR0   OCMSG_IALN
         6 002261   040001 713400                    CLIMB   write
         6 002262   401400 401760                    pmme    nvectors=4

     1511     6890    7                                 END;

     1512     6891    6                               END;

     1513     6892    5                             END;

   6892  6 002263   004237 710000 6                  TRA     DEV_EVRTN

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:210  
     1514     6893    4                         CASE (ELSE);

     1515     6894    4                       END;

   6894  6 002264   004237 710000 6                  TRA     DEV_EVRTN

     1516     6895    3                   CASE (FOS_SPRQ#);

     1517     6896
     1518     6897    3                   CASE (ELSE);

     1519     6898    3                     CALL DEV_EVSCREECH;

   6898  6 002265   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002266   000000 011000                    NOP     0

     1520     6899    3                 END; /* CASE STATE */

   6899  6 002267   004237 710000 6                  TRA     DEV_EVRTN

     1521     6900        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:211  
     1522     6901        /*
     1523     6902                            #   #   #   #   #####    ###    #   #
     1524     6903                            #   #   #   #     #     #   #   #   #
     1525     6904                            ##  #    # #      #     #       #   #
     1526     6905                            # # #     #       #     #       #####
     1527     6906                            #  ##    # #      #     #       #   #
     1528     6907                            #   #   #   #     #     #   #   #   #
     1529     6908                            #   #   #   #     #      ###    #   #
     1530     6909        */
     1531     6910        /**
     1532     6911         **
     1533     6912         **
     1534     6913         **      NEXT COMMODE CHUNK AVAILABLE EVENT
     1535     6914         **
     1536     6915         **
     1537     6916         **/
     1538     6917    2             CASE (FODE_NXTCH#);

     1539     6918    3                 DO CASE (STATE);

   6918  6 002270   200044 235100                    LDA     STATE,,AUTO
         6 002271   000002 115007                    CMPA    2,DL
         6 002272   002274 602005 6                  TNC     s:6918+4,AL
         6 002273   004237 710000 6                  TRA     DEV_EVRTN
         6 002274   002331 710000 6                  TRA     s:6934
         6 002275   002276 710000 6                  TRA     s:6920

     1540     6919    3                   CASE (FOS_BUSY#);

     1541     6920    3                     IF DEV$->FO$DEV.FLG.CHIDLE THEN

   6920  6 002276   000012 236100                    LDQ     10,,PR0
         6 002277   000100 316007                    CANQ    64,DL
         6 002300   002317 600000 6                  TZE     s:6928

     1542     6921    4                       DO;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:212  
     1543     6922    4                       DEV$->FO$DEV.FLG.CHIDLE = '0'B;

   6922  6 002301   000014 236000 7                  LDQ     12
         6 002302   000012 356100                    ANSQ    10,,PR0

     1544     6923    4                       EXT$ = PREVLEXT$;

   6923  6 002303   200004 473500                    LDP3    @DINFO,,AUTO
         6 002304   300000 236100                    LDQ     0,,PR3
         6 002305   200045 756100                    STQ     EXT$,,AUTO

     1545     6924    4                       FIL$->FO$FIL.NXTEXT$ = EXT$->FO$EXT.LNK$;

   6924  6 002306   200045 474500                    LDP4    EXT$,,AUTO
         6 002307   400000 236100                    LDQ     0,,PR4
         6 002310   000000 475400 xsym               LDP5    FO_FIL$
         6 002311   500001 756100                    STQ     1,,PR5

     1546     6925    4                       CALL FOD$EVENT (FODE_SFEXT#,0);

   6925  6 002312   000015 630400 7                  EPPR0   13
         6 002313   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 002314   000003 701000 6                  TSX1    s:5888
         6 002315   000000 011000                    NOP     0

     1547     6926    4                       END;

   6926  6 002316   004237 710000 6                  TRA     DEV_EVRTN

     1548     6927    4                     ELSE DO;

     1549     6928    4                       IF FIL$ -> FO$FIL.NXTEXT$ = ADDR(NIL)

   6928  6 002317   000000 473400 xsym               LDP3    FO_FIL$
         6 002320   300001 236100                    LDQ     1,,PR3
         6 002321   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 002322   004237 601000 6                  TNZ     DEV_EVRTN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:213  

     1550     6929    5                       THEN DO;

     1551     6930    5                         EXT$ = PREVLEXT$;

   6930  6 002323   200004 474500                    LDP4    @DINFO,,AUTO
         6 002324   400000 236100                    LDQ     0,,PR4
         6 002325   200045 756100                    STQ     EXT$,,AUTO

     1552     6931    5                         FIL$ -> FO$FIL.NXTEXT$ = EXT$ -> FO$EXT.LNK$;

   6931  6 002326   200045 475500                    LDP5    EXT$,,AUTO
         6 002327   500000 236100                    LDQ     0,,PR5
         6 002330   300001 756100                    STQ     1,,PR3

     1553     6932    5                         END;

     1554     6933    4                       END;

     1555     6934    3                 END; /* CASE STATE */

   6934  6 002331   004237 710000 6                  TRA     DEV_EVRTN

     1556     6935        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:214  
     1557     6936        /*
     1558     6937                                     ###    #   #    ###    #####
     1559     6938                                    #   #   #   #     #       #
     1560     6939                                    #   #   #   #     #       #
     1561     6940                                    #   #   #   #     #       #
     1562     6941                                    # # #   #   #     #       #
     1563     6942                                    #  ##   #   #     #       #
     1564     6943                                     ###     ###     ###      #
     1565     6944        */
     1566     6945        /**
     1567     6946         **
     1568     6947         **
     1569     6948         **      QUIT (GET FILE OFF DEVICE TO MESS WITH AFTER)
     1570     6949         **
     1571     6950         **
     1572     6951         **/
     1573     6952
     1574     6953        /*D* NAME:         DEV_QUIT
     1575     6954
     1576     6955             PURPOSE:      To remove a file from a device
     1577     6956
     1578     6957             DESCRIPTION:  Come here as an event (FODE_QUIT) reported to
     1579     6958                           FOD$EVENT, or from within the scheduler, to in-
     1580     6959                           stigate removal of a file from a device.  This
     1581     6960                           routine is used to ensure that removal, and the
     1582     6961                           follow-up associated with the removal, are both
     1583     6962                           done regardless of what may happen to the device
     1584     6963                           meanwhile (e.g. disconnect or manual suspend).
     1585     6964
     1586     6965                           For example, a file inconsistency might get for-
     1587     6966                           gotten if the device disconnected, because the
     1588     6967                           M$SYMBIO CLOSE PMME will fail due to MOOS having
     1589     6968                           seen disconnect, and when the disconnect event
     1590     6969                           is reported to FOD$EVENT, the inconsistency might
     1591     6970                           get forgotten, with the file being put back in the
     1592     6971                           awaiting-print queue.
     1593     6972
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:215  
     1594     6973                           This routine also takes care, in a well-defined
     1595     6974                           manner, of multple quit conditions occuring
     1596     6975                           'simultaneously', e.g. the operator keys in ABORT,
     1597     6976                           and the device is 'busy' (from OUTSYM's point of
     1598     6977                           view) but MOOS has just detected an inconsistency
     1599     6978                           in the file.  In this case the inconsistency takes
     1600     6979                           precedence in the sense that the file is to be rem-
     1601     6980                           oved from the device, but not deleted (as would be
     1602     6981                           the case with ABORT) because we want to preserve
     1603     6982                           the file to let the system manager try to find
     1604     6983                           out how the inconsistency occurred.
     1605     6984
     1606     6985                           The basic idea is to get the device suspended if
     1607     6986                           it is not suspended already, or already at end of
     1608     6987                           file, or already idle from MOOS's point of view
     1609     6988                           (as is the case for a finished copy), and rem-
     1610     6989                           ember  the reason for the quit, so that when suspend
     1611     6990                           complete is reported, we can take the appropriate
     1612     6991                           action.
     1613     6992
     1614     6993                           Once suspend (if required) is achieved, the symbiont
     1615     6994                           is closed.  If the close ALTRETs, this means either
     1616     6995                           that the device disconnected, or that we didn't bo-
     1617     6996                           ther to suspend it, and the remote handler has
     1618     6997                           suspended it.  In either case we just exit, and
     1619     6998                           later the suspend/disconnect is reported, at which
     1620     6999                           time the fact that we were quitting is remembered,
     1621     7000                           and the correct action taken (for disconnect,
     1622     7001                           this consists of completing the quit sequence; for
     1623     7002                           suspend, retrying the close - which will now ALTRET
     1624     7003                           only due to disconnect and this is handled as above).
     1625     7004                           If the close succeeds, the file is removed from the
     1626     7005                           device, and QUIT_DEV is called to complete the quit
     1627     7006                           sequence (by deleting the file, or whatever).
     1628     7007                                */
     1629     7008
     1630     7009    2             CASE (FODE_QUIT#);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:216  

     1631     7010    2               IF DEV$->FO$DEV.STATE = FOS_IALN#

   7010  6 002332   000011 236100                    LDQ     9,,PR0
         6 002333   777000 376007                    ANQ     -512,DL
         6 002334   004000 116007                    CMPQ    2048,DL
         6 002335   004237 600000 6                  TZE     DEV_EVRTN

     1632     7011    2               THEN
     1633     7012    2                GOTO DEV_EVRTN;
     1634     7013    2               QUITRSN=DINFO;

   7013  6 002336   200004 473500                    LDP3    @DINFO,,AUTO
         6 002337   300000 235100                    LDA     0,,PR3
         6 002340   200023 755100                    STA     QUITRSN,,AUTO

   7013  6 002341                       DEV_QUIT     null
     1635     7014    2   DEV_QUIT:   ;
     1636     7015    2               IF DEV$->FO$DEV.FLG.QUIT THEN

   7015  6 002341   000000 470400 xsym               LDP0    FO_DEV$
         6 002342   000012 236100                    LDQ     10,,PR0
         6 002343   000040 316007                    CANQ    32,DL
         6 002344   002551 600000 6                  TZE     s:7081

     1637     7016    3                 DO;

     1638     7017    3                 OLDQUITRSN=DEV$->FO$DEV.QUITRSN;

   7017  6 002345   000013 236100                    LDQ     11,,PR0
         6 002346   000777 376007                    ANQ     511,DL
         6 002347   200024 756100                    STQ     OLDQUITRSN,,AUTO

     1639     7018                                /* THE QUIT FLAG IS ALREADY SET.
     1640     7019                                   DECIDE WHETHER TO REMEMBER THE OLD
     1641     7020                                   QUIT REASON, OR THE NEW ONE, BUT IN
     1642     7021                                   ANY CASE JUST EXIT. */
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:217  
     1643     7022    4                   DO CASE (QUITRSN);

   7022  6 002350   200023 235100                    LDA     QUITRSN,,AUTO
         6 002351   000014 115007                    CMPA    12,DL
         6 002352   002354 602005 6                  TNC     s:7022+4,AL
         6 002353   002550 710000 6                  TRA     s:7077
         6 002354   002370 710000 6                  TRA     s:7028
         6 002355   002411 710000 6                  TRA     s:7035
         6 002356   002435 710000 6                  TRA     s:7044
         6 002357   002370 710000 6                  TRA     s:7028
         6 002360   002461 710000 6                  TRA     s:7054
         6 002361   002503 710000 6                  TRA     s:7062
         6 002362   002526 710000 6                  TRA     s:7070
         6 002363   002370 710000 6                  TRA     s:7028
         6 002364   002370 710000 6                  TRA     s:7028
         6 002365   002370 710000 6                  TRA     s:7028
         6 002366   002370 710000 6                  TRA     s:7028
         6 002367   002370 710000 6                  TRA     s:7028

     1644     7023
     1645     7024                                /* ABORT KEYIN, DEL KEYIN, SAVE KEYIN, CANCEL,
     1646     7025                                  RERUN, ZAP KEYIN */
     1647     7026    4                     CASE (FOQR_KABT#,FOQR_DEL#,FOQR_CNCL#,FOQR_KSAV#,FOQR_CDEL#,

     1648     7027    4                 FOQR_RRUN#,FOQR_KZAP#);
     1649     7028    5                         DO CASE(OLDQUITRSN);

   7028  6 002370   000004 136007                    SBLQ    4,DL
         6 002371   000011 116007                    CMPQ    9,DL
         6 002372   002374 602006 6                  TNC     s:7028+4,QL
         6 002373   002550 710000 6                  TRA     s:7077
         6 002374   002405 710000 6                  TRA     NEW_QUITRSN
         6 002375   002405 710000 6                  TRA     NEW_QUITRSN
         6 002376   002405 710000 6                  TRA     NEW_QUITRSN
         6 002377   002410 710000 6                  TRA     s:7032
         6 002400   002410 710000 6                  TRA     s:7032
         6 002401   002410 710000 6                  TRA     s:7032
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:218  
         6 002402   002410 710000 6                  TRA     s:7032
         6 002403   002410 710000 6                  TRA     s:7032
         6 002404   002405 710000 6                  TRA     NEW_QUITRSN

     1650     7029    5                           CASE (FOQR_COPY#,FOQR_CHRM#,FOQR_BDDA#,FOQR_FPABRT#);

   7017  6 002405                       NEW_QUITRSN  null
     1651     7030    5   NEW_QUITRSN:              ;
     1652     7031    5                             DEV$->FO$DEV.QUITRSN=QUITRSN;

   7031  6 002405   000000 470400 xsym               LDP0    FO_DEV$
         6 002406   200023 236100                    LDQ     QUITRSN,,AUTO
         6 002407   000013 552104                    STBQ    11,'04'O,PR0

     1653     7032    5                         END;

   7032  6 002410   002550 710000 6                  TRA     s:7077

     1654     7033                                /* FILE INCONSISTENCY */
     1655     7034    4                     CASE (FOQR_FINC#);

     1656     7035    5                         DO CASE (OLDQUITRSN);

   7035  6 002411   000015 116007                    CMPQ    13,DL
         6 002412   002414 602006 6                  TNC     s:7035+3,QL
         6 002413   002432 710000 6                  TRA     s:7040
         6 002414   002431 710000 6                  TRA     s:7038
         6 002415   002432 710000 6                  TRA     s:7040
         6 002416   002431 710000 6                  TRA     s:7038
         6 002417   002431 710000 6                  TRA     s:7038
         6 002420   002432 710000 6                  TRA     s:7040
         6 002421   002431 710000 6                  TRA     s:7038
         6 002422   002432 710000 6                  TRA     s:7040
         6 002423   002431 710000 6                  TRA     s:7038
         6 002424   002431 710000 6                  TRA     s:7038
         6 002425   002431 710000 6                  TRA     s:7038
         6 002426   002431 710000 6                  TRA     s:7038
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:219  
         6 002427   002431 710000 6                  TRA     s:7038
         6 002430   002431 710000 6                  TRA     s:7038

     1657     7036    5                          CASE (FOQR_KABT#,FOQR_DEL#,FOQR_CHAB#,FOQR_CHRM#,FOQR_KSAV#,
              7036                                    FOQR_CDEL#,

     1658     7037    5                       FOQR_CNCL#,FOQR_RRUN#,FOQR_KZAP#,FOQR_FPABRT#);
     1659     7038    5                             GOTO NEW_QUITRSN;

   7038  6 002431   002405 710000 6                  TRA     NEW_QUITRSN

     1660     7039    5                           CASE (ELSE);

     1661     7040    5                             CALL DEV_EVSCREECH;

   7040  6 002432   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002433   000000 011000                    NOP     0

     1662     7041    5                         END;

   7041  6 002434   002550 710000 6                  TRA     s:7077

     1663     7042                                /* ABORT FOR BAD COMMODE CHUNK */
     1664     7043    4                     CASE (FOQR_CHAB#);

     1665     7044    5                         DO CASE (OLDQUITRSN);

   7044  6 002435   000015 116007                    CMPQ    13,DL
         6 002436   002440 602006 6                  TNC     s:7044+3,QL
         6 002437   002456 710000 6                  TRA     s:7050
         6 002440   002455 710000 6                  TRA     s:7047
         6 002441   002460 710000 6                  TRA     s:7051
         6 002442   002456 710000 6                  TRA     s:7050
         6 002443   002455 710000 6                  TRA     s:7047
         6 002444   002456 710000 6                  TRA     s:7050
         6 002445   002456 710000 6                  TRA     s:7050
         6 002446   002460 710000 6                  TRA     s:7051
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:220  
         6 002447   002455 710000 6                  TRA     s:7047
         6 002450   002455 710000 6                  TRA     s:7047
         6 002451   002455 710000 6                  TRA     s:7047
         6 002452   002455 710000 6                  TRA     s:7047
         6 002453   002455 710000 6                  TRA     s:7047
         6 002454   002460 710000 6                  TRA     s:7051

     1666     7045    5                          CASE (FOQR_KABT#,FOQR_DEL#,FOQR_KSAV#,FOQR_CNCL#,FOQR_CDEL#,

     1667     7046    5                       FOQR_RRUN#,FOQR_KZAP#);
     1668     7047    5                             GOTO NEW_QUITRSN;

   7047  6 002455   002405 710000 6                  TRA     NEW_QUITRSN

     1669     7048    5                           CASE (FOQR_FINC#,FOQR_BDDA#,FOQR_FPABRT#);

     1670     7049    5                           CASE (ELSE);

     1671     7050    5                             CALL DEV_EVSCREECH;

   7050  6 002456   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002457   000000 011000                    NOP     0

     1672     7051    5                         END;

   7051  6 002460   002550 710000 6                  TRA     s:7077

     1673     7052                                /* FINISHED ONE COPY - DEVICE LOCKED OR ETC */
     1674     7053    4                     CASE (FOQR_COPY#);

     1675     7054    5                         DO CASE (OLDQUITRSN);

   7054  6 002461   000014 116007                    CMPQ    12,DL
         6 002462   002464 602006 6                  TNC     s:7054+3,QL
         6 002463   002500 710000 6                  TRA     s:7058
         6 002464   002502 710000 6                  TRA     s:7059
         6 002465   002500 710000 6                  TRA     s:7058
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:221  
         6 002466   002502 710000 6                  TRA     s:7059
         6 002467   002502 710000 6                  TRA     s:7059
         6 002470   002500 710000 6                  TRA     s:7058
         6 002471   002500 710000 6                  TRA     s:7058
         6 002472   002500 710000 6                  TRA     s:7058
         6 002473   002502 710000 6                  TRA     s:7059
         6 002474   002502 710000 6                  TRA     s:7059
         6 002475   002502 710000 6                  TRA     s:7059
         6 002476   002502 710000 6                  TRA     s:7059
         6 002477   002502 710000 6                  TRA     s:7059

     1676     7055    5                          CASE (FOQR_KABT#,FOQR_CHAB#,FOQR_DEL#,FOQR_KSAV#,FOQR_CNCL#,
              7055                                    FOQR_CDEL#,

     1677     7056    5                       FOQR_RRUN#,FOQR_KZAP#);
     1678     7057    5                           CASE (ELSE);

     1679     7058    5                             CALL DEV_EVSCREECH;

   7058  6 002500   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002501   000000 011000                    NOP     0

     1680     7059    5                         END;

   7059  6 002502   002550 710000 6                  TRA     s:7077

     1681     7060                                /* COMMODE CHUNK PROBLEMS - REMOVE FILE */
     1682     7061    4                     CASE (FOQR_CHRM#);

     1683     7062    5                         DO CASE (OLDQUITRSN);

   7062  6 002503   000015 116007                    CMPQ    13,DL
         6 002504   002506 602006 6                  TNC     s:7062+3,QL
         6 002505   002523 710000 6                  TRA     s:7066
         6 002506   002525 710000 6                  TRA     s:7067
         6 002507   002525 710000 6                  TRA     s:7067
         6 002510   002523 710000 6                  TRA     s:7066
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:222  
         6 002511   002525 710000 6                  TRA     s:7067
         6 002512   002523 710000 6                  TRA     s:7066
         6 002513   002523 710000 6                  TRA     s:7066
         6 002514   002525 710000 6                  TRA     s:7067
         6 002515   002525 710000 6                  TRA     s:7067
         6 002516   002525 710000 6                  TRA     s:7067
         6 002517   002525 710000 6                  TRA     s:7067
         6 002520   002525 710000 6                  TRA     s:7067
         6 002521   002525 710000 6                  TRA     s:7067
         6 002522   002525 710000 6                  TRA     s:7067

     1684     7063    5                          CASE (FOQR_KABT#,FOQR_DEL#,FOQR_BDDA#,FOQR_FINC#,FOQR_KSAV#,
              7063                                    FOQR_CNCL#,FOQR_CDEL#,

     1685     7064    5                       FOQR_RRUN#,FOQR_KZAP#,FOQR_FPABRT#);
     1686     7065    5                           CASE (ELSE);

     1687     7066    5                             CALL DEV_EVSCREECH;

   7066  6 002523   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002524   000000 011000                    NOP     0

     1688     7067    5                         END;

   7067  6 002525   002550 710000 6                  TRA     s:7077

     1689     7068                                /* BAD DISK ADDRESS IN MOOS */
     1690     7069    4                     CASE (FOQR_BDDA#);

     1691     7070    5                         DO CASE (OLDQUITRSN);

   7070  6 002526   000015 116007                    CMPQ    13,DL
         6 002527   002531 602006 6                  TNC     s:7070+3,QL
         6 002530   002546 710000 6                  TRA     s:7074
         6 002531   002550 710000 6                  TRA     s:7077
         6 002532   002546 710000 6                  TRA     s:7074
         6 002533   002550 710000 6                  TRA     s:7077
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:223  
         6 002534   002550 710000 6                  TRA     s:7077
         6 002535   002546 710000 6                  TRA     s:7074
         6 002536   002550 710000 6                  TRA     s:7077
         6 002537   002546 710000 6                  TRA     s:7074
         6 002540   002550 710000 6                  TRA     s:7077
         6 002541   002550 710000 6                  TRA     s:7077
         6 002542   002550 710000 6                  TRA     s:7077
         6 002543   002550 710000 6                  TRA     s:7077
         6 002544   002550 710000 6                  TRA     s:7077
         6 002545   002550 710000 6                  TRA     s:7077

     1692     7071    5                          CASE (FOQR_KABT#,FOQR_DEL#,FOQR_CHAB#,FOQR_CHRM#,FOQR_KSAV#,
              7071                                    FOQR_CDEL#,

     1693     7072    5                       FOQR_CNCL#,FOQR_RRUN#,FOQR_KZAP#,FOQR_FPABRT#);
     1694     7073    5                           CASE (ELSE);

     1695     7074    5                             CALL DEV_EVSCREECH;

   7074  6 002546   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002547   000000 011000                    NOP     0

     1696     7075    5                         END;

     1697     7076    4                   END; /* DO CASE QUITRSN */

     1698     7077    3                 GOTO DEV_EVRTN;

   7077  6 002550   004237 710000 6                  TRA     DEV_EVRTN

     1699     7078    3                 END;
     1700     7079                                /* QUIT FLAG NOT ALREADY SET.
     1701     7080                                   INITIATE THE QUIT SEQUENCE */
     1702     7081    2               DEV$->FO$DEV.QUITRSN=QUITRSN;

   7081  6 002551   200023 236100                    LDQ     QUITRSN,,AUTO
         6 002552   000013 552104                    STBQ    11,'04'O,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:224  

     1703     7082    2               DEV$->FO$DEV.FLG.QUIT='1'B;

   7082  6 002553   000040 236007                    LDQ     32,DL
         6 002554   000012 256100                    ORSQ    10,,PR0

     1704     7083    3                 DO CASE (QUITRSN);

   7083  6 002555   200023 235100                    LDA     QUITRSN,,AUTO
         6 002556   000015 115007                    CMPA    13,DL
         6 002557   002561 602005 6                  TNC     s:7083+4,AL
         6 002560   002634 710000 6                  TRA     s:7108
         6 002561   002576 710000 6                  TRA     s:7086
         6 002562   002631 710000 6                  TRA     s:7105
         6 002563   002576 710000 6                  TRA     s:7086
         6 002564   002576 710000 6                  TRA     s:7086
         6 002565   002624 710000 6                  TRA     s:7102
         6 002566   002576 710000 6                  TRA     s:7086
         6 002567   002631 710000 6                  TRA     s:7105
         6 002570   002576 710000 6                  TRA     s:7086
         6 002571   002576 710000 6                  TRA     s:7086
         6 002572   002576 710000 6                  TRA     s:7086
         6 002573   002576 710000 6                  TRA     s:7086
         6 002574   002576 710000 6                  TRA     s:7086
         6 002575   002576 710000 6                  TRA     s:7086

     1705     7084    3                   CASE (FOQR_KABT#,FOQR_DEL#,FOQR_CHAB#,FOQR_CHRM#,FOQR_KSAV#,
              7084                            FOQR_CDEL#,

     1706     7085    3               FOQR_CNCL#,FOQR_RRUN#,FOQR_KZAP#,FOQR_FPABRT#);
     1707     7086    4                       DO CASE (DEV$->FO$DEV.STATE);

   7086  6 002576   000011 236100                    LDQ     9,,PR0
         6 002577   000011 772000                    QRL     9
         6 002600   000777 376007                    ANQ     511,DL
         6 002601   000004 116007                    CMPQ    4,DL
         6 002602   002604 602006 6                  TNC     s:7086+6,QL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:225  
         6 002603   002621 710000 6                  TRA     s:7096
         6 002604   002621 710000 6                  TRA     s:7096
         6 002605   002610 710000 6                  TRA     s:7088
         6 002606   002616 710000 6                  TRA     s:7093
         6 002607   002613 710000 6                  TRA     s:7091

     1708     7087    4                         CASE (FOS_BUSY#);

     1709     7088    4                           DEV$->FO$DEV.SUSRSN=FOSR_QUIT#;

   7088  6 002610   000002 236007                    LDQ     2,DL
         6 002611   000011 552104                    STBQ    9,'04'O,PR0

     1710     7089    4                           GOTO DEV_SUSPEND;

   7089  6 002612   003034 710000 6                  TRA     DEV_SUSPEND

     1711     7090    4                         CASE (FOS_SPRQ#);

     1712     7091    4                           DEV$->FO$DEV.SUSRSN=FOSR_QUIT#;

   7091  6 002613   000002 236007                    LDQ     2,DL
         6 002614   000011 552104                    STBQ    9,'04'O,PR0
         6 002615   004237 710000 6                  TRA     DEV_EVRTN

     1713     7092    4                         CASE (FOS_SUSP#);

     1714     7093    4                           DEV$->FO$DEV.SUSRSN=FOSR_QUIT#;

   7093  6 002616   000002 236007                    LDQ     2,DL
         6 002617   000011 552104                    STBQ    9,'04'O,PR0

     1715     7094    4                           GOTO DEV_SUSPENDED1;

   7094  6 002620   000612 710000 6                  TRA     DEV_SUSPENDED1

     1716     7095    4                         CASE (ELSE);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:226  

     1717     7096    4                           CALL DEV_EVSCREECH;

   7096  6 002621   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002622   000000 011000                    NOP     0

     1718     7097    4                       END;

   7097  6 002623   004237 710000 6                  TRA     DEV_EVRTN

     1719     7098    3                   CASE (FOQR_COPY#);

     1720     7099                                /* IF FILE WAS CAUGHT IN A CRASH, PRINT
     1721     7100                                   'LAST RECORD SUPPLIED BY CP6 RECOVERY'
     1722     7101                                   ON END OF LISTING */
     1723     7102    3                     IF FIL$->FO$FIL.FLG.CRASHED THEN GOTO DEV_DOQUIT;

   7102  6 002624   000000 471400 xsym               LDP1    FO_FIL$
         6 002625   100015 236100                    LDQ     13,,PR1
         6 002626   000002 316007                    CANQ    2,DL
         6 002627   000723 601000 6                  TNZ     DEV_DOQUIT

     1724     7103    3                     GOTO DEV_DOQUIT1;

   7103  6 002630   001030 710000 6                  TRA     DEV_DOQUIT1

     1725     7104    3                   CASE (FOQR_FINC#,FOQR_BDDA#);

     1726     7105    3                     DEV$->FO$DEV.SUSRSN=FOSR_QUIT#;

   7105  6 002631   000002 236007                    LDQ     2,DL
         6 002632   000011 552104                    STBQ    9,'04'O,PR0

     1727     7106    3                     GOTO DEV_SUSPENDED1;

   7106  6 002633   000612 710000 6                  TRA     DEV_SUSPENDED1

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:227  
     1728     7107    3                   CASE (ELSE);

     1729     7108    3                     CALL DEV_EVSCREECH;

   7108  6 002634   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002635   000000 011000                    NOP     0

     1730     7109    3                 END; /* CASE QUITRSN */

   7109  6 002636   004237 710000 6                  TRA     DEV_EVRTN

     1731     7110        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:228  
     1732     7111        /*
     1733     7112                             ###    #####    ###    ####     ###
     1734     7113                            #   #   #       #   #   #   #   #   #
     1735     7114                            #       #       #       #   #   #   #
     1736     7115                             ###    ####     ###    ####    #####
     1737     7116                                #   #           #   #       #   #
     1738     7117                            #   #   #       #   #   #       #   #
     1739     7118                             ###    #        ###    #       #   #
     1740     7119        */
     1741     7120        /**
     1742     7121         **
     1743     7122         **
     1744     7123         **      SYMBIONT FINISHED SPACING EVENT
     1745     7124         **
     1746     7125         **
     1747     7126         **/
     1748     7127    2             CASE (FODE_SFSPA#);

     1749     7128    3                 DO CASE (STATE);

   7128  6 002637   200044 235100                    LDA     STATE,,AUTO
         6 002640   000004 115007                    CMPA    4,DL
         6 002641   002643 602005 6                  TNC     s:7128+4,AL
         6 002642   002733 710000 6                  TRA     s:7172
         6 002643   002733 710000 6                  TRA     s:7172
         6 002644   002647 710000 6                  TRA     s:7130
         6 002645   002733 710000 6                  TRA     s:7172
         6 002646   002735 710000 6                  TRA     s:7173

     1750     7129    3                   CASE (FOS_BUSY#);

     1751     7130    3                     IF DEV$->FO$DEV.FLG.SIP = '0'B THEN

   7130  6 002647   000012 236100                    LDQ     10,,PR0
         6 002650   000004 316007                    CANQ    4,DL
         6 002651   002655 601000 6                  TNZ     s:7135

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:229  
     1752     7131    4                       DO;

     1753     7132    4                       CALL DEV_EVSCREECH;

   7132  6 002652   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002653   000000 011000                    NOP     0

     1754     7133    4                       GOTO DEV_EVRTN;

   7133  6 002654   004237 710000 6                  TRA     DEV_EVRTN

     1755     7134    4                       END;
     1756     7135    3                     DEV$->FO$DEV.STATE=FOS_SUSP#;

   7135  6 002655   002000 236007                    LDQ     1024,DL
         6 002656   000011 552110                    STBQ    9,'10'O,PR0

     1757     7136    3                     DEV$->FO$DEV.FLG.LASTEXT='0'B;

   7136  6 002657   000017 236000 7                  LDQ     15
         6 002660   000012 356100                    ANSQ    10,,PR0

     1758     7137    3                     DEV$->FO$DEV.FLG.SIP='0'B;

   7137  6 002661   000012 236000 7                  LDQ     10
         6 002662   000012 356100                    ANSQ    10,,PR0

     1759     7138    3                     DEV$->FO$DEV.FLG.DIRECTION='1'B;

   7138  6 002663   000002 236007                    LDQ     2,DL
         6 002664   000012 256100                    ORSQ    10,,PR0

     1760     7139    3                     DEV$->FO$DEV.BR=INFOB;

   7139  6 002665   200004 473500                    LDP3    @DINFO,,AUTO
         6 002666   000100 100500                    MLR     fill='000'O
         6 002667   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:230  
         6 002670   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4

     1761     7140    3                     IF (DEV$->FO$DEV.SPACEFROM = SPACEFROM_EOF#

   7140  6 002671   000013 236100                    LDQ     11,,PR0
         6 002672   777000 376007                    ANQ     -512,DL
         6 002673   002000 116007                    CMPQ    1024,DL
         6 002674   002701 601000 6                  TNZ     s:7140+8
         6 002675   000000 106500                    CMPC    fill='000'O
         6 002676   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4
         6 002677   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         6 002700   002704 601000 6                  TNZ     s:7158
         6 002701   000012 236100                    LDQ     10,,PR0
         6 002702   400000 316007                    CANQ    -131072,DL
         6 002703   002713 600000 6                  TZE     s:7163

     1762     7141    3                     AND DEV$->FO$DEV.BR)
     1763     7142    3                     OR DEV$->FO$DEV.FLG.SEND_VFU='1'B
     1764     7143    3                     THEN
     1765     7144    4                       DO;

     1766     7145                                /* HERE AFTER SPACING BACKWARD FROM EOF,
     1767     7146                                   HAVING FOUND THE BLKREC CORRESPONDING TO
     1768     7147                                   THE REQUIRED NUMBER OF PAGES OR CARDS.
     1769     7148                                   THE PROBLEM IS THAT THE DEVICE MAY NOT
     1770     7149                                   HAVE THE CORRECT TAB SETTINGS GIVEN WHERE
     1771     7150                                   WE NOW WANT TO BEGIN PRINTING.  THE ONLY
     1772     7151                                   SOLUTION TO THIS IS TO NOW SPACE FORWARD
     1773     7152                                   FROM BOF TO THE BLKREC WE HAVE NOW, THUS
     1774     7153                                   GATHERING UP THE CORRECT TAB SETTINGS.
     1775     7154                                   WHEN THAT SPACING STOPS, MOOS WILL HAVE
     1776     7155                                   THE RIGHT TABS IN HIS HAND, AND WILL
     1777     7156                                   EMIT THEM TO THE DEVICE WHEN WE SAY
     1778     7157                                   CONTINUE. */
     1779     7158    4                       DEV$->FO$DEV.FLG.SEND_VFU='0'B;

   7158  6 002704   000020 236000 7                  LDQ     16
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:231  
         6 002705   000012 356100                    ANSQ    10,,PR0

     1780     7159    4                       DEV$->FO$DEV.SPACEFROM=SPACEFROM_BOF#;

   7159  6 002706   001000 236007                    LDQ     512,DL
         6 002707   000013 552110                    STBQ    11,'10'O,PR0

     1781     7160    4                       CALL SBLKS_DEV;

   7160  6 002710   005365 701000 6                  TSX1    SBLKS_DEV
         6 002711   000000 011000                    NOP     0

     1782     7161    4                       GOTO DEV_EVRTN;

   7161  6 002712   004237 710000 6                  TRA     DEV_EVRTN

     1783     7162    4                       END;
     1784     7163    3                     DEV$->FO$DEV.BR.REC# = DEV$->FO$DEV.BR.REC#-1;

   7163  6 002713   000017 235100                    LDA     15,,PR0
         6 002714   000020 236100                    LDQ     16,,PR0
         6 002715   000033 773000                    LRL     27
         6 002716   777777 376007                    ANQ     -1,DL
         6 002717   000001 136007                    SBLQ    1,DL
         6 002720   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 002721   000100 101500                    MRL     fill='000'O
         6 002722   200106 000004                    ADSC9   @FO$FIL+2,,AUTO          cn=0,n=4
         6 002723   000017 600002                    ADSC9   15,,PR0                  cn=3,n=2

     1785     7164    3                     CALL SET_BLKREC ALTRET(SPACED_EOF);

   7164  6 002724   005654 701000 6                  TSX1    SET_BLKREC
         6 002725   002727 702000 6                  TSX2    SPACED_EOF

     1786     7165    3                     GOTO DEV_CONTINUE;

   7165  6 002726   003141 710000 6                  TRA     DEV_CONTINUE
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:232  

     1787     7166    3   SPACED_EOF:
     1788     7167    3                     DEV$->FO$DEV.SUSRSN=FOSR_SBEF#;

   7167  6 002727   000000 470400 xsym  SPACED_EOF   LDP0    FO_DEV$
         6 002730   000013 236007                    LDQ     11,DL
         6 002731   000011 552104                    STBQ    9,'04'O,PR0

     1789     7168    3                     GOTO DEV_SUSPENDED1;

   7168  6 002732   000612 710000 6                  TRA     DEV_SUSPENDED1

     1790     7169    3                   CASE (FOS_SPRQ#);

     1791     7170
     1792     7171    3                   CASE (ELSE);

     1793     7172    3                     CALL DEV_EVSCREECH;

   7172  6 002733   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 002734   000000 011000                    NOP     0

     1794     7173    3                 END; /* CASE STATE */

   7173  6 002735   004237 710000 6                  TRA     DEV_EVRTN

     1795     7174        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:233  
     1796     7175        /*
     1797     7176                            #   #   #####   #   #   #   #
     1798     7177                            #  #    #       #   #   #   #
     1799     7178                            # #     #        # #    ##  #
     1800     7179                            ##      ####      #     # # #
     1801     7180                            # #     #         #     #  ##
     1802     7181                            #  #    #         #     #   #
     1803     7182                            #   #   #####     #     #   #
     1804     7183        */
     1805     7184        /**
     1806     7185         **
     1807     7186         **
     1808     7187         **      DEVICE KEYIN EVENT
     1809     7188         **
     1810     7189         **
     1811     7190         **/
     1812     7191        /*   Order: SUSPEND
     1813     7192                    ABORT
     1814     7193                    CONTINUE
     1815     7194                    SAVE
     1816     7195                    REPRINT
     1817     7196                    LOCK
     1818     7197                    START
     1819     7198                    ALIGN
     1820     7199                    SPACE
     1821     7200                    RESTRICT */
     1822     7201    2             CASE (FODE_KEYN#);

     1823     7202    2               OPMSG_RESP.CADDR=M_UR;

   7202  6 002736   100000 220003                    LDX0    32768,DU
         6 002737   000104 740000 1                  STX0    OPMSG_RESP

     1824     7203    2               OPMSG_RESP.DEVNM=DEVNAME;

   7203  6 002740   000000 237000 1                  LDAQ    DEVNAME
         6 002741   000107 755000 1                  STA     OPMSG_RESP+3
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:234  
         6 002742   000110 756000 1                  STQ     OPMSG_RESP+4

     1825     7204        /* VECTOR ON KEYIN CODE */
     1826     7205    3                 DO CASE (KEYIN$->FO$DKEYIN.KIN#);

   7205  6 002743   200004 473500                    LDP3    @DINFO,,AUTO
         6 002744   300000 474500                    LDP4    0,,PR3
         6 002745   400000 221100                    LDX1    0,,PR4
         6 002746   000040 101003                    CMPX1   32,DU
         6 002747   002751 602011 6                  TNC     s:7205+6,X1
         6 002750   004217 710000 6                  TRA     ILLKEY
         6 002751   004217 710000 6                  TRA     ILLKEY
         6 002752   003011 710000 6                  TRA     s:7212
         6 002753   003050 710000 6                  TRA     s:7240
         6 002754   003067 710000 6                  TRA     s:7266
         6 002755   003215 710000 6                  TRA     s:7326
         6 002756   003247 710000 6                  TRA     s:7343
         6 002757   003302 710000 6                  TRA     s:7364
         6 002760   003305 710000 6                  TRA     s:7371
         6 002761   003656 710000 6                  TRA     s:7573
         6 002762   004217 710000 6                  TRA     ILLKEY
         6 002763   004217 710000 6                  TRA     ILLKEY
         6 002764   004217 710000 6                  TRA     ILLKEY
         6 002765   004217 710000 6                  TRA     ILLKEY
         6 002766   004217 710000 6                  TRA     ILLKEY
         6 002767   004217 710000 6                  TRA     ILLKEY
         6 002770   004217 710000 6                  TRA     ILLKEY
         6 002771   004217 710000 6                  TRA     ILLKEY
         6 002772   004217 710000 6                  TRA     ILLKEY
         6 002773   004217 710000 6                  TRA     ILLKEY
         6 002774   004217 710000 6                  TRA     ILLKEY
         6 002775   003430 710000 6                  TRA     s:7467
         6 002776   004217 710000 6                  TRA     ILLKEY
         6 002777   004020 710000 6                  TRA     s:7642
         6 003000   004217 710000 6                  TRA     ILLKEY
         6 003001   004217 710000 6                  TRA     ILLKEY
         6 003002   004217 710000 6                  TRA     ILLKEY
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:235  
         6 003003   004217 710000 6                  TRA     ILLKEY
         6 003004   004217 710000 6                  TRA     ILLKEY
         6 003005   004217 710000 6                  TRA     ILLKEY
         6 003006   004217 710000 6                  TRA     ILLKEY
         6 003007   004217 710000 6                  TRA     ILLKEY
         6 003010   004071 710000 6                  TRA     s:7662

     1827     7206        /**
     1828     7207         **
     1829     7208         **  SUSPEND KEYIN
     1830     7209         **
     1831     7210         **/
     1832     7211    3                   CASE (KEY_SUSPEND#);

     1833     7212    3                     CALL CHK_AIP ALTRET(DEV_KERR);

   7212  6 003011   006456 701000 6                  TSX1    CHK_AIP
         6 003012   003374 702000 6                  TSX2    DEV_KERR

     1834     7213    4                       DO CASE (STATE);

   7213  6 003013   200044 235100                    LDA     STATE,,AUTO
         6 003014   000004 115007                    CMPA    4,DL
         6 003015   003017 602005 6                  TNC     s:7213+4,AL
         6 003016   003045 710000 6                  TRA     DEV_NOTBUSY
         6 003017   003045 710000 6                  TRA     DEV_NOTBUSY
         6 003020   003023 710000 6                  TRA     s:7215
         6 003021   003037 710000 6                  TRA     s:7224
         6 003022   003042 710000 6                  TRA     s:7227

     1835     7214    4                         CASE (FOS_BUSY#);

     1836     7215    4                           IF DEV$->FO$DEV.FLG.SIP THEN

   7215  6 003023   000000 470400 xsym               LDP0    FO_DEV$
         6 003024   000012 236100                    LDQ     10,,PR0
         6 003025   000004 316007                    CANQ    4,DL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:236  
         6 003026   003032 600000 6                  TZE     s:7220

     1837     7216    5                             DO;

     1838     7217    5                             KERR=FOKE_NSSPC#;

   7217  6 003027   000015 235007                    LDA     13,DL
         6 003030   200026 755100                    STA     KERR,,AUTO

     1839     7218    5                             GOTO DEV_KERR;

   7218  6 003031   003374 710000 6                  TRA     DEV_KERR

     1840     7219    5                             END;
     1841     7220    4                           DEV$->FO$DEV.SUSRSN=FOSR_KSUS#;

   7220  6 003032   000001 236007                    LDQ     1,DL
         6 003033   000011 552104                    STBQ    9,'04'O,PR0

     1842     7221    4   DEV_SUSPEND:
     1843     7222    4                           CALL SUSP_DEV;

   7222  6 003034   006416 701000 6     DEV_SUSPEND  TSX1    SUSP_DEV
         6 003035   000000 011000                    NOP     0
         6 003036   004237 710000 6                  TRA     DEV_EVRTN

     1844     7223    4                         CASE (FOS_SUSP#);

     1845     7224    4                           KERR=FOKE_ASUSP#;

   7224  6 003037   000002 236007                    LDQ     2,DL
         6 003040   200026 756100                    STQ     KERR,,AUTO

     1846     7225    4                           GOTO DEV_KERR;

   7225  6 003041   003374 710000 6                  TRA     DEV_KERR

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:237  
     1847     7226    4                         CASE (FOS_SPRQ#);

     1848     7227    4                           KERR=FOKE_ASUSI#;

   7227  6 003042   000004 236007                    LDQ     4,DL
         6 003043   200026 756100                    STQ     KERR,,AUTO

     1849     7228    4                           GOTO DEV_KERR;

   7228  6 003044   003374 710000 6                  TRA     DEV_KERR

     1850     7229    4                         CASE (ELSE);

   7228  6 003045                       DEV_NOTBUSY  null
     1851     7230    4   DEV_NOTBUSY:            ;
     1852     7231    4                           KERR=FOKE_NBUSY#;

   7231  6 003045   000003 235007                    LDA     3,DL
         6 003046   200026 755100                    STA     KERR,,AUTO

     1853     7232    4                           GOTO DEV_KERR;

   7232  6 003047   003374 710000 6                  TRA     DEV_KERR

     1854     7233    4                       END; /* CASE STATE */

     1855     7234        /**
     1856     7235         **
     1857     7236         **  ABORT KEYIN
     1858     7237         **
     1859     7238         **/
     1860     7239    3                   CASE (KEY_ABORT#);

     1861     7240    3                     CALL CHK_AIP ALTRET(DEV_KERR);

   7240  6 003050   006456 701000 6                  TSX1    CHK_AIP
         6 003051   003374 702000 6                  TSX2    DEV_KERR
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:238  

     1862     7241    4                       DO CASE (STATE);

   7241  6 003052   200044 235100                    LDA     STATE,,AUTO
         6 003053   000004 115007                    CMPA    4,DL
         6 003054   003056 602005 6                  TNC     s:7241+4,AL
         6 003055   003066 710000 6                  TRA     s:7247
         6 003056   003066 710000 6                  TRA     s:7247
         6 003057   003062 710000 6                  TRA     s:7243
         6 003060   003062 710000 6                  TRA     s:7243
         6 003061   003062 710000 6                  TRA     s:7243

     1863     7242    4                         CASE (FOS_BUSY#,FOS_SUSP#,FOS_SPRQ#);

     1864     7243    4                           CALL CHK_KSYSID ALTRET(BAD_KSYSID);

   7243  6 003062   006467 701000 6                  TSX1    CHK_KSYSID
         6 003063   003421 702000 6                  TSX2    BAD_KSYSID

     1865     7244    4                           QUITRSN=FOQR_KABT#;

   7244  6 003064   200023 450100                    STZ     QUITRSN,,AUTO

     1866     7245    4                           GOTO DEV_QUIT;

   7245  6 003065   002341 710000 6                  TRA     DEV_QUIT

     1867     7246    4                         CASE (ELSE);

     1868     7247    4                           GOTO DEV_NOTBUSY;

   7247  6 003066   003045 710000 6                  TRA     DEV_NOTBUSY

     1869     7248    4                       END;

     1870     7249
     1871     7250        /**
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:239  
     1872     7251         **
     1873     7252         **  CONTINUE KEYIN
     1874     7253         **
     1875     7254         **/
     1876     7255    3                   CASE (KEY_CONTINUE#);

     1877     7256                                           /* If the device is susp and we just
     1878     7257                                              did an align, set align_tabs and
     1879     7258                                              space back to beginning of page.
     1880     7259                                              When we get the SFSPA event, check
     1881     7260                                              if align_tabs is set.  If it is,
     1882     7261                                              we must space from BOF to pick up
     1883     7262                                              all previously written tabs (tabs
     1884     7263                                              were zeroed in the align record).
     1885     7264                                              When we receive the 2nd SFSPA event,
     1886     7265                                              we continue. */
     1887     7266    4                       DO CASE (STATE);

   7266  6 003067   200044 235100                    LDA     STATE,,AUTO
         6 003070   000003 115007                    CMPA    3,DL
         6 003071   003073 602005 6                  TNC     s:7266+4,AL
         6 003072   003212 710000 6                  TRA     s:7317
         6 003073   003212 710000 6                  TRA     s:7317
         6 003074   003212 710000 6                  TRA     s:7317
         6 003075   003076 710000 6                  TRA     s:7268

     1888     7267    4                         CASE (FOS_SUSP#);

     1889     7268    4                           CALL CHK_ALG ALTRET(DEV_KERR);

   7268  6 003076   006445 701000 6                  TSX1    CHK_ALG
         6 003077   003374 702000 6                  TSX2    DEV_KERR

     1890     7269    4                           IF DEV$->FO$DEV.SUSRSN = FOSR_AEOF# THEN

   7269  6 003100   000000 470400 xsym               LDP0    FO_DEV$
         6 003101   000011 236100                    LDQ     9,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:240  
         6 003102   000777 376007                    ANQ     511,DL
         6 003103   000014 116007                    CMPQ    12,DL
         6 003104   001657 600000 6                  TZE     DEV_FINCOPY

     1891     7270    4                            GOTO DEV_FINCOPY;
     1892     7271    4                           IF DEV$->FO$DEV.SUSRSN = FOSR_FALN# THEN

   7271  6 003105   000010 116007                    CMPQ    8,DL
         6 003106   003133 601000 6                  TNZ     s:7287

     1893     7272    5                             DO;

   7271  6 003107                       DEV_CONTVFU  null
     1894     7273    5   DEV_CONTVFU:              ;                                              /*#8.362*/
     1895     7274    5                             IF FIL$->FO$FIL.FLG.CHKPTD = '1'B

   7274  6 003107   000000 471400 xsym               LDP1    FO_FIL$
         6 003110   100015 236100                    LDQ     13,,PR1
         6 003111   000004 316007                    CANQ    4,DL
         6 003112   003121 600000 6                  TZE     s:7280
         6 003113   000012 236100                    LDQ     10,,PR0
         6 003114   020000 316007                    CANQ    8192,DL
         6 003115   003121 601000 6                  TNZ     s:7280

     1896     7275    5                             AND DEV$->FO$DEV.FLG.CBD = '0'B THEN
     1897     7276    6                               DO;

     1898     7277    6                               CALL START_CHKPF;

   7277  6 003116   005177 701000 6                  TSX1    START_CHKPF
         6 003117   000000 011000                    NOP     0

     1899     7278    6                               GOTO DEV_EVRTN;

   7278  6 003120   004237 710000 6                  TRA     DEV_EVRTN

     1900     7279    6                               END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:241  
     1901     7280    5                             IF (DEV$->FO$DEV.NAMER.TYP = 'LP' OR DEV$->FO$DEV.NAMER.
              7280                                      TYP = 'CP')

   7280  6 003121   000005 220100                    LDX0    5,,PR0
         6 003122   000676 100000 2                  CMPX0   START_FPRG+14
         6 003123   003126 600000 6                  TZE     s:7280+5
         6 003124   000677 100000 2                  CMPX0   START_FPRG+15
         6 003125   003133 601000 6                  TNZ     s:7287
         6 003126   000000 106500                    CMPC    fill='000'O
         6 003127   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4
         6 003130   000002 000002 xsym               ADSC9   B_VECTNIL+2              cn=0,n=2
         6 003131   003133 600000 6                  TZE     s:7287

     1902     7281    5                             AND DEV$->FO$DEV.BR
     1903     7282    5                             THEN
     1904     7283    6                               DO;

     1905     7284    6                               GOTO SPACEBACK;

   7284  6 003132   002073 710000 6                  TRA     SPACEBACK

     1906     7285    6                               END;
     1907     7286    5                             END;
     1908     7287    4                           IF DEV$ -> FO$DEV.SUSRSN = FOSR_SBEF#

   7287  6 003133   000011 236100                    LDQ     9,,PR0
         6 003134   000777 376007                    ANQ     511,DL
         6 003135   000013 116007                    CMPQ    11,DL
         6 003136   003140 601000 6                  TNZ     s:7291

     1909     7288    5                           THEN DO;

     1910     7289    5                             GOTO SPACEBACK;

   7289  6 003137   002073 710000 6                  TRA     SPACEBACK

     1911     7290    5                             END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:242  
     1912     7291    4                           GOTO DEV_CONT;

   7291  6 003140   003150 710000 6                  TRA     DEV_CONT

   7287  6 003141                       DEV_CONTINUE null
     1913     7292        /**/
     1914     7293        /* EXTERNAL ENTRY */
     1915     7294        /**/
     1916     7295    4   DEV_CONTINUE:           ;
     1917     7296    4                           CALL SET_BLKREC ALTRET(DEV_CONT0);

   7296  6 003141   005654 701000 6                  TSX1    SET_BLKREC
         6 003142   003144 702000 6                  TSX2    DEV_CONT0

     1918     7297    4                           GOTO DEV_CONT;

   7297  6 003143   003150 710000 6                  TRA     DEV_CONT

   7287  6 003144                       DEV_CONT0    null
     1919     7298    4   DEV_CONT0:              ;
     1920     7299    4                           DEV$->FO$DEV.BR='0'B; /* IF BAD, REPRINT */

   7299  6 003144   000000 470400 xsym               LDP0    FO_DEV$
         6 003145   000100 100400                    MLR     fill='000'O
         6 003146   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 003147   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4

   7299  6 003150                       DEV_CONT     null
     1921     7300    4   DEV_CONT:               ;
     1922     7301    4                           CONT_SYMB.V.BLKREC=DEV$->FO$DEV.BR;

   7301  6 003150   000000 470400 xsym               LDP0    FO_DEV$
         6 003151   000017 235100                    LDA     15,,PR0
         6 003152   000020 236100                    LDQ     16,,PR0
         6 003153   000033 773000                    LRL     27
         6 003154   000027 376000 xsym               ANQ     B_VECTNIL+23
         6 003155   000302 756000 1                  STQ     CONT_SYMB+24
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:243  

     1923     7302    4                           CONT_SYMB.V.BLKREC.REC#=CONT_SYMB.V.BLKREC.REC#+1;

   7302  6 003156   000302 720000 1                  LXL0    CONT_SYMB+24
         6 003157   000001 621010                    EAX1    1,X0
         6 003160   000302 441000 1                  SXL1    CONT_SYMB+24

     1924     7303    4                           CONT_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;

   7303  6 003161   000001 236100                    LDQ     1,,PR0
         6 003162   000257 756000 1                  STQ     CONT_SYMB+5

     1925     7304    4                           CALL SET_BLKREC ALTRET(DEV_CPBEF);

   7304  6 003163   005654 701000 6                  TSX1    SET_BLKREC
         6 003164   003177 702000 6                  TSX2    DEV_CPBEF

     1926     7305    4                           CALL M$SYMBIO (CONT_SYMB) ALTRET(DEV_EVRTN);

   7305  6 003165   000252 630400 1                  EPPR0   CONT_SYMB
         6 003166   570000 713400                    CLIMB   alt,+61440
         6 003167   403400 401760                    pmme    nvectors=8
         6 003170   004237 702000 6                  TSX2    DEV_EVRTN

     1927     7306    4                           DEV$->FO$DEV.STATE=FOS_BUSY#;

   7306  6 003171   000000 470400 xsym               LDP0    FO_DEV$
         6 003172   001000 236007                    LDQ     512,DL
         6 003173   000011 552110                    STBQ    9,'10'O,PR0

     1928     7307    4                           DEV$->FO$DEV.FLG.TERR='0'B;

   7307  6 003174   000021 236000 7                  LDQ     17
         6 003175   000012 356100                    ANSQ    10,,PR0

     1929     7308    4                           GOTO DEV_EVRTN;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:244  
   7308  6 003176   004237 710000 6                  TRA     DEV_EVRTN

     1930     7309    4   DEV_CPBEF:
     1931     7310    4                           IF DEV$->FO$DEV.SUSRSN~=FOSR_TBRK# THEN

   7310  6 003177   000000 470400 xsym  DEV_CPBEF    LDP0    FO_DEV$
         6 003200   000011 236100                    LDQ     9,,PR0
         6 003201   000777 376007                    ANQ     511,DL
         6 003202   000003 116007                    CMPQ    3,DL
         6 003203   003207 600000 6                  TZE     s:7315

     1932     7311    5                             DO;

     1933     7312    5                             KERR=FOKE_CPBEF#;

   7312  6 003204   000005 235007                    LDA     5,DL
         6 003205   200026 755100                    STA     KERR,,AUTO

     1934     7313    5                             GOTO DEV_KERR;

   7313  6 003206   003374 710000 6                  TRA     DEV_KERR

     1935     7314    5                             END;
     1936     7315    4                           CALL BDBCMSG_DEV;

   7315  6 003207   006523 701000 6                  TSX1    BDBCMSG_DEV
         6 003210   000000 011000                    NOP     0
         6 003211   004237 710000 6                  TRA     DEV_EVRTN

     1937     7316    4                         CASE (ELSE);

     1938     7317    4                           KERR=FOKE_NSUSP#;

   7317  6 003212   000001 235007                    LDA     1,DL
         6 003213   200026 755100                    STA     KERR,,AUTO

     1939     7318    4                           GOTO DEV_KERR;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:245  

   7318  6 003214   003374 710000 6                  TRA     DEV_KERR

     1940     7319    4                       END;

     1941     7320        /**
     1942     7321         **
     1943     7322         **  SAVE KEYIN
     1944     7323         **
     1945     7324         **/
     1946     7325    3                   CASE (KEY_SAVE#);

     1947     7326    3                     CALL CHK_KSYSID ALTRET(BAD_KSYSID);

   7326  6 003215   006467 701000 6                  TSX1    CHK_KSYSID
         6 003216   003421 702000 6                  TSX2    BAD_KSYSID

     1948     7327    3                     CALL CHK_AIP ALTRET(DEV_KERR);

   7327  6 003217   006456 701000 6                  TSX1    CHK_AIP
         6 003220   003374 702000 6                  TSX2    DEV_KERR

     1949     7328    4                       DO CASE (STATE);

   7328  6 003221   200044 235100                    LDA     STATE,,AUTO
         6 003222   000004 115007                    CMPA    4,DL
         6 003223   003225 602005 6                  TNC     s:7328+4,AL
         6 003224   003246 710000 6                  TRA     s:7335
         6 003225   003246 710000 6                  TRA     s:7335
         6 003226   003231 710000 6                  TRA     s:7330
         6 003227   003231 710000 6                  TRA     s:7330
         6 003230   003231 710000 6                  TRA     s:7330

     1950     7329    4                         CASE (FOS_BUSY#,FOS_SPRQ#,FOS_SUSP#);

     1951     7330    4                           CALL LOCK_DEV;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:246  
   7330  6 003231   006373 701000 6                  TSX1    LOCK_DEV
         6 003232   000000 011000                    NOP     0

     1952     7331    4                           QUITRSN=FOQR_KSAV#;

   7331  6 003233   000010 235007                    LDA     8,DL
         6 003234   200023 755100                    STA     QUITRSN,,AUTO

     1953     7332    4                           IF KEYIN$->FO$DKEYIN.CHKP ~= 0 THEN DEV$->FO$DEV.FLG.CHKP=
              7332                                    '1'B;

   7332  6 003235   200004 470500                    LDP0    @DINFO,,AUTO
         6 003236   000000 471500                    LDP1    0,,PR0
         6 003237   100004 236100                    LDQ     4,,PR1
         6 003240   000777 316003                    CANQ    511,DU
         6 003241   003245 600000 6                  TZE     s:7333

   7332  6 003242   000000 473400 xsym               LDP3    FO_DEV$
         6 003243   001000 236007                    LDQ     512,DL
         6 003244   300012 256100                    ORSQ    10,,PR3

     1954     7333    4                           GOTO DEV_QUIT;

   7333  6 003245   002341 710000 6                  TRA     DEV_QUIT

     1955     7334    4                         CASE (ELSE);

     1956     7335    4                           GOTO DEV_NOTBUSY;

   7335  6 003246   003045 710000 6                  TRA     DEV_NOTBUSY

     1957     7336    4                       END;

     1958     7337        /**
     1959     7338         **
     1960     7339         **  REPRINT KEYIN
     1961     7340         **
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:247  
     1962     7341         **/
     1963     7342    3                   CASE (KEY_REPRINT#);

     1964     7343    3                     CALL CHK_KSYSID ALTRET(BAD_KSYSID);

   7343  6 003247   006467 701000 6                  TSX1    CHK_KSYSID
         6 003250   003421 702000 6                  TSX2    BAD_KSYSID

     1965     7344    3                     CALL CHK_AIP ALTRET(DEV_KERR);

   7344  6 003251   006456 701000 6                  TSX1    CHK_AIP
         6 003252   003374 702000 6                  TSX2    DEV_KERR

     1966     7345    3                     CALL CHK_ALG ALTRET(DEV_KERR);

   7345  6 003253   006445 701000 6                  TSX1    CHK_ALG
         6 003254   003374 702000 6                  TSX2    DEV_KERR

     1967     7346    4                       DO CASE (STATE);

   7346  6 003255   200044 235100                    LDA     STATE,,AUTO
         6 003256   000004 115007                    CMPA    4,DL
         6 003257   003261 602005 6                  TNC     s:7346+4,AL
         6 003260   003301 710000 6                  TRA     s:7356
         6 003261   003301 710000 6                  TRA     s:7356
         6 003262   003265 710000 6                  TRA     s:7348
         6 003263   003275 710000 6                  TRA     s:7353
         6 003264   003271 710000 6                  TRA     s:7351

     1968     7347    4                         CASE (FOS_BUSY#);

     1969     7348    4                           DEV$->FO$DEV.SUSRSN=FOSR_KRPR#;

   7348  6 003265   000000 470400 xsym               LDP0    FO_DEV$
         6 003266   000005 236007                    LDQ     5,DL
         6 003267   000011 552104                    STBQ    9,'04'O,PR0

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:248  
     1970     7349    4                           GOTO DEV_SUSPEND;

   7349  6 003270   003034 710000 6                  TRA     DEV_SUSPEND

     1971     7350    4                         CASE (FOS_SPRQ#);

     1972     7351    4                           DEV$->FO$DEV.SUSRSN=FOSR_KRPR#;

   7351  6 003271   000000 470400 xsym               LDP0    FO_DEV$
         6 003272   000005 236007                    LDQ     5,DL
         6 003273   000011 552104                    STBQ    9,'04'O,PR0
         6 003274   004237 710000 6                  TRA     DEV_EVRTN

     1973     7352    4                         CASE (FOS_SUSP#);

     1974     7353    4                           DEV$->FO$DEV.SUSRSN=FOSR_KRPR#;

   7353  6 003275   000000 470400 xsym               LDP0    FO_DEV$
         6 003276   000005 236007                    LDQ     5,DL
         6 003277   000011 552104                    STBQ    9,'04'O,PR0

     1975     7354    4                           GOTO DEV_SUSPENDED1;

   7354  6 003300   000612 710000 6                  TRA     DEV_SUSPENDED1

     1976     7355    4                         CASE (ELSE);

     1977     7356    4                           GOTO DEV_NOTBUSY;

   7356  6 003301   003045 710000 6                  TRA     DEV_NOTBUSY

     1978     7357    4                       END;

     1979     7358        /**
     1980     7359         **
     1981     7360         **  LOCK KEYIN
     1982     7361         **
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:249  
     1983     7362         **/
     1984     7363    3                   CASE (KEY_LOCK#);

     1985     7364    3                     CALL LOCK_DEV;

   7364  6 003302   006373 701000 6                  TSX1    LOCK_DEV
         6 003303   000000 011000                    NOP     0
         6 003304   004237 710000 6                  TRA     DEV_EVRTN

     1986     7365        /**
     1987     7366         **
     1988     7367         **  START KEYIN
     1989     7368         **
     1990     7369         **/
     1991     7370    3                   CASE (KEY_START#);

     1992     7371    3                     IF DEV$->FO$DEV.FORM = ' ' THEN

   7371  6 003305   040000 106500                    CMPC    fill='040'O
         6 003306   000015 600006                    ADSC9   13,,PR0                  cn=3,n=6
         6 003307   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 003310   003314 601000 6                  TNZ     s:7376

     1993     7372    4                       DO;

     1994     7373    4                       KERR=FOKE_NSFRM#;

   7373  6 003311   000020 235007                    LDA     16,DL
         6 003312   200026 755100                    STA     KERR,,AUTO

     1995     7374    4                       GOTO DEV_KERR;

   7374  6 003313   003374 710000 6                  TRA     DEV_KERR

     1996     7375    4                       END;
     1997     7376    3                     IF DEV$->FO$DEV.FLG.LOCK THEN

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:250  
   7376  6 003314   000012 236100                    LDQ     10,,PR0
         6 003315   000001 316007                    CANQ    1,DL
         6 003316   003331 600000 6                  TZE     s:7384

     1998     7377    4                       DO;

     1999     7378                                  /* UNLOCK DEVICE EVEN IF BUSY */
     2000     7379    4                       DEV$->FO$DEV.FLG.LOCK='0'B;

   7379  6 003317   000022 236000 7                  LDQ     18
         6 003320   000012 356100                    ANSQ    10,,PR0

     2001     7380    4                       OPMSG_RESP.SUBC=FOKR_START#;

   7380  6 003321   013000 236007                    LDQ     5632,DL
         6 003322   000111 552010 1                  STBQ    OPMSG_RESP+5,'10'O

     2002     7381    4                       CALL M$WRITE (OCMSG_RESP);

   7381  6 003323   000330 630400 2                  EPPR0   OCMSG_RESP
         6 003324   040001 713400                    CLIMB   write
         6 003325   401400 401760                    pmme    nvectors=4

     2003     7382    4                       CALL FOR$DEVWR;

   7382  6 003326   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 003327   000000 701000 xent               TSX1    FOR$DEVWR
         6 003330   000000 011000                    NOP     0

     2004     7383    4                       END;

     2005     7384    4                       DO CASE (STATE);

   7384  6 003331   200044 235100                    LDA     STATE,,AUTO
         6 003332   000001 115007                    CMPA    1,DL
         6 003333   003335 602005 6                  TNC     s:7384+4,AL
         6 003334   003373 710000 6                  TRA     s:7417
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:251  
         6 003335   003336 710000 6                  TRA     s:7386

     2006     7385    4                         CASE (FOS_IDLE#);

     2007     7386    4                           IF DEV$->FO$DEV.FLG.IDSC

   7386  6 003336   000000 470400 xsym               LDP0    FO_DEV$
         6 003337   000012 236100                    LDQ     10,,PR0
         6 003340   000001 316003                    CANQ    1,DU
         6 003341   003345 600000 6                  TZE     s:7393

     2008     7387    4                           THEN
     2009     7388    5                             DO;

     2010     7389    5                             KERR = FOKE_DVDSC#;

   7389  6 003342   000022 235007                    LDA     18,DL
         6 003343   200026 755100                    STA     KERR,,AUTO

     2011     7390    5                             GOTO DEV_KERR;

   7390  6 003344   003374 710000 6                  TRA     DEV_KERR

     2012     7391    5                             END;
     2013     7392                                %JLOCK;

   7393  6 003345   000000 054000 xsym               AOS     FO_Q

     2014     7395    4                           CALL GETFIL_DEV ALTRET(DEV_NOFIL);

   7395  6 003346   004754 701000 6                  TSX1    GETFIL_DEV
         6 003347   003360 702000 6                  TSX2    DEV_NOFIL

     2015     7396    4                           DO_ONMSG=1;

   7396  6 003350   000001 235007                    LDA     1,DL
         6 003351   000002 755000 1                  STA     DO_ONMSG
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:252  

     2016     7397    4                           CALL START_DEV ALTRET(DEV_NOSTRT);

   7397  6 003352   004401 701000 6                  TSX1    START_DEV
         6 003353   003365 702000 6                  TSX2    DEV_NOSTRT

     2017     7398                                %JUNLOCK;

   7399  6 003354   000001 336007                    LCQ     1,DL
         6 003355   000000 056000 xsym               ASQ     FO_Q

     2018     7401    4                           DO_ONMSG=0;

   7401  6 003356   000002 450000 1                  STZ     DO_ONMSG

     2019     7402    4                           GOTO DEV_EVRTN;

   7402  6 003357   004237 710000 6                  TRA     DEV_EVRTN

   7401  6 003360                       DEV_NOFIL    null
     2020     7403    4   DEV_NOFIL:              ;
     2021     7404                                %JUNLOCK;

   7405  6 003360   000001 336007                    LCQ     1,DL
         6 003361   000000 056000 xsym               ASQ     FO_Q

     2022     7407    4                           KERR=FOKE_NOFDV#;

   7407  6 003362   000013 235007                    LDA     11,DL
         6 003363   200026 755100                    STA     KERR,,AUTO

     2023     7408    4                           GOTO DEV_KERR;

   7408  6 003364   003374 710000 6                  TRA     DEV_KERR

   7407  6 003365                       DEV_NOSTRT   null
     2024     7409    4   DEV_NOSTRT:             ;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:253  
     2025     7410                                %JUNLOCK;

   7411  6 003365   000001 336007                    LCQ     1,DL
         6 003366   000000 056000 xsym               ASQ     FO_Q

     2026     7413    4                           DO_ONMSG=0;

   7413  6 003367   000002 450000 1                  STZ     DO_ONMSG

     2027     7414    4                           KERR=FOKE_NSTRT#;

   7414  6 003370   000016 235007                    LDA     14,DL
         6 003371   200026 755100                    STA     KERR,,AUTO

     2028     7415    4                           GOTO DEV_KERR;

   7415  6 003372   003374 710000 6                  TRA     DEV_KERR

     2029     7416    4                         CASE (ELSE);

     2030     7417    4                           KERR=FOKE_NIDLE#;

   7417  6 003373   200026 450100                    STZ     KERR,,AUTO

   7417  6 003374                       DEV_KERR     null
     2031     7418    4   DEV_KERR:               ;
     2032     7419        /* KEYIN ERRORS COME HERE */
     2033     7420    4                           OPMSG_KERR.DEVNM=DEVNAME;

   7420  6 003374   000000 237000 1                  LDAQ    DEVNAME
         6 003375   000127 755000 1                  STA     OPMSG_KERR+3
         6 003376   000130 756000 1                  STQ     OPMSG_KERR+4

     2034     7421    4                           IF EVENT = FODE_KEYN#

   7421  6 003377   200003 470500                    LDP0    @EVENT,,AUTO
         6 003400   000000 235100                    LDA     0,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:254  
         6 003401   000002 115007                    CMPA    2,DL
         6 003402   003410 601000 6                  TNZ     s:7425

     2035     7422    4                           THEN
     2036     7423    4                            OPMSG_KERR.CADDR=KEYIN$->FO$DKEYIN.CADDR;

   7423  6 003403   200004 471500                    LDP1    @DINFO,,AUTO
         6 003404   100000 473500                    LDP3    0,,PR1
         6 003405   300000 720100                    LXL0    0,,PR3
         6 003406   000124 740000 1                  STX0    OPMSG_KERR
         6 003407   003412 710000 6                  TRA     s:7426

     2037     7424    4                           ELSE
     2038     7425    4                            OPMSG_KERR.CADDR = M_UR;

   7425  6 003410   100000 220003                    LDX0    32768,DU
         6 003411   000124 740000 1                  STX0    OPMSG_KERR

     2039     7426    4                           OPMSG_KERR.SUBC=KERR;

   7426  6 003412   200026 236100                    LDQ     KERR,,AUTO
         6 003413   000011 736000                    QLS     9
         6 003414   000131 552010 1                  STBQ    OPMSG_KERR+5,'10'O

     2040     7427    4                           CALL M$WRITE (OCMSG_KERR);

   7427  6 003415   000410 630400 2                  EPPR0   OCMSG_KERR
         6 003416   040001 713400                    CLIMB   write
         6 003417   401400 401760                    pmme    nvectors=4

     2041     7428    4                           GOTO DEV_EVRTN;

   7428  6 003420   004237 710000 6                  TRA     DEV_EVRTN

   7426  6 003421                       BAD_KSYSID   null
     2042     7429    4   BAD_KSYSID:             ;
     2043     7430    4                           KERR=FOKE_SYSID#;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:255  

   7430  6 003421   000014 235007                    LDA     12,DL
         6 003422   200026 755100                    STA     KERR,,AUTO

     2044     7431    4                           OPMSG_KERR.SYSID=KEYIN$->FO$DKEYIN.SYSID;

   7431  6 003423   200004 470500                    LDP0    @DINFO,,AUTO
         6 003424   000000 471500                    LDP1    0,,PR0
         6 003425   100004 720100                    LXL0    4,,PR1
         6 003426   000125 740000 1                  STX0    OPMSG_KERR+1

     2045     7432    4                           GOTO DEV_KERR;

   7432  6 003427   003374 710000 6                  TRA     DEV_KERR

     2046     7433    4                       END;

     2047     7434        /**
     2048     7435         **
     2049     7436         **  ALIGN KEYIN
     2050     7437         **
     2051     7438         **/
     2052     7439    3                   CASE (KEY_ALIGN#);

     2053     7440                                           /* Initiate an align sequence.  Once
     2054     7441                                              we receive the STHLD event (from
     2055     7442                                              FEP devices only), we go to label
     2056     7443                                              DEV_SUSPENDED.  The next step is
     2057     7444                                              to do case on susrsn which is now
     2058     7445                                              KALN.  Here we get a block for the
     2059     7446                                              alignment record, call FOR$SALGN
     2060     7447                                           to get the VFU, set JVFU, write
     2061     7448                                           the VFU gran, and get STACK.
     2062     7449                                           Upon receipt of the ACK we build
     2063     7450                                           the next part of the granule
     2064     7451                                           (via FOR$CALIGN) & write it.  This
     2065     7452                                           process continues until we complete
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:256  
     2066     7453                                           the alignment image at which point
     2067     7454                                           TOKERSN is set to LALGR.  When the
     2068     7455                                           ACK is received from the last
     2069     7456                                           granule we issue a token response
     2070     7457                                           from MOOS.  This response places
     2071     7458                                           us in STOKN where we have a case
     2072     7459                                           for LALGR.  Here we suspend the
     2073     7460                                           device again.  Upon receipt of the
     2074     7461                                           STHLD we release the alignment
     2075     7462                                           granule, set AIP='0'B, and await
     2076     7463                                           continue.  Continuing causes us
     2077     7464                                           to backup 1 page, simulate a space
     2078     7465                                           from BOF (to pick up VFU and TABs),
     2079     7466                                           and commence printing. */
     2080     7467    3                     CALL CHK_AIP ALTRET(DEV_KERR);

   7467  6 003430   006456 701000 6                  TSX1    CHK_AIP
         6 003431   003374 702000 6                  TSX2    DEV_KERR

     2081     7468    4                       DO CASE (STATE);

   7468  6 003432   200044 235100                    LDA     STATE,,AUTO
         6 003433   000004 115007                    CMPA    4,DL
         6 003434   003436 602005 6                  TNC     s:7468+4,AL
         6 003435   004237 710000 6                  TRA     DEV_EVRTN
         6 003436   003456 710000 6                  TRA     s:7479
         6 003437   003442 710000 6                  TRA     s:7470
         6 003440   003452 710000 6                  TRA     s:7475
         6 003441   003446 710000 6                  TRA     s:7473

     2082     7469    4                         CASE (FOS_BUSY#);

     2083     7470    4                           DEV$->FO$DEV.SUSRSN=FOSR_KALN#;

   7470  6 003442   000000 470400 xsym               LDP0    FO_DEV$
         6 003443   000004 236007                    LDQ     4,DL
         6 003444   000011 552104                    STBQ    9,'04'O,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:257  

     2084     7471    4                           GOTO DEV_SUSPEND;

   7471  6 003445   003034 710000 6                  TRA     DEV_SUSPEND

     2085     7472    4                         CASE (FOS_SPRQ#);

     2086     7473    4                           DEV$->FO$DEV.SUSRSN=FOSR_KALN#;

   7473  6 003446   000000 470400 xsym               LDP0    FO_DEV$
         6 003447   000004 236007                    LDQ     4,DL
         6 003450   000011 552104                    STBQ    9,'04'O,PR0
         6 003451   004237 710000 6                  TRA     DEV_EVRTN

     2087     7474    4                         CASE (FOS_SUSP#);

     2088     7475    4                           DEV$->FO$DEV.SUSRSN=FOSR_KALN#;

   7475  6 003452   000000 470400 xsym               LDP0    FO_DEV$
         6 003453   000004 236007                    LDQ     4,DL
         6 003454   000011 552104                    STBQ    9,'04'O,PR0

     2089     7476    4                           GOTO DEV_SUSPENDED1;

   7476  6 003455   000612 710000 6                  TRA     DEV_SUSPENDED1

     2090     7477    4                         CASE (FOS_IDLE#);

     2091     7478
     2092     7479    4                           IF DEV$->FO$DEV.FLG.LOCK = '0'B

   7479  6 003456   000000 470400 xsym               LDP0    FO_DEV$
         6 003457   000012 236100                    LDQ     10,,PR0
         6 003460   000001 316007                    CANQ    1,DL
         6 003461   003464 601000 6                  TNZ     s:7485

     2093     7480    4                           THEN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:258  
     2094     7481    4                            CALL LOCK_DEV;

   7481  6 003462   006373 701000 6                  TSX1    LOCK_DEV
         6 003463   000000 011000                    NOP     0

     2095     7482
     2096     7483
     2097     7484                                %JLOCK;

   7485  6 003464   000000 054000 xsym               AOS     FO_Q

     2098     7487    4                           CALL FOI$GBUF (FO_SPGSCB, DEV$->FO$DEV.SPG$)

   7487  6 003465   000000 236000 xsym               LDQ     FO_DEV$
         6 003466   000001 036003                    ADLQ    1,DU
         6 003467   000013 235000 7                  LDA     11
         6 003470   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 003471   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 003472   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 003473   000000 701000 xent               TSX1    FOI$GBUF
         6 003474   003476 702000 6                  TSX2    s:7491
         6 003475   003501 710000 6                  TRA     s:7496

     2099     7488    5                           WHENALTRETURN DO;

     2100     7489                     /* CONSOLE MSG */
     2101     7490                                  %JUNLOCK;

   7491  6 003476   000001 336007                    LCQ     1,DL
         6 003477   000000 056000 xsym               ASQ     FO_Q

     2102     7493    5                             GOTO DEV_EVRTN;

   7493  6 003500   004237 710000 6                  TRA     DEV_EVRTN

     2103     7494    5                             END;
     2104     7495
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:259  
     2105     7496    4                           OPMSG_IALN.DEVNM = DEVNAME;

   7496  6 003501   000000 237000 1                  LDAQ    DEVNAME
         6 003502   000154 757000 1                  STAQ    OPMSG_IALN+3

     2106     7497    4                           OPMSG_IALN.CADDR = M_UR;

   7497  6 003503   100000 220003                    LDX0    32768,DU
         6 003504   000151 740000 1                  STX0    OPMSG_IALN

     2107     7498    4                           OPMSG_IALN.SUBC = 1;

   7498  6 003505   000001 236007                    LDQ     1,DL
         6 003506   000157 552004 1                  STBQ    OPMSG_IALN+6,'04'O

     2108     7499    4                           CALL M$WRITE (OCMSG_IALN);

   7499  6 003507   000424 630400 2                  EPPR0   OCMSG_IALN
         6 003510   040001 713400                    CLIMB   write
         6 003511   401400 401760                    pmme    nvectors=4

     2109     7500    4                           DEVNAME = DEV$->FO$DEV.NAME;

   7500  6 003512   000000 470400 xsym               LDP0    FO_DEV$
         6 003513   040000 100500                    MLR     fill='040'O
         6 003514   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         6 003515   000000 000010 1                  ADSC9   DEVNAME                  cn=0,n=8

     2110     7501    4                           START_SYMB.V.ORDER# = FOMO_SOPEN#;

   7501  6 003516   000000 220003                    LDX0    0,DU
         6 003517   000241 740000 1                  STX0    START_SYMB+21

     2111     7502    4                           IF DEV$ -> FO$DEV.FLG.MODE = FOMD_GRAPHIC#

   7502  6 003520   000012 236100                    LDQ     10,,PR0
         6 003521   000004 316003                    CANQ    4,DU
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:260  
         6 003522   003603 600000 6                  TZE     s:7530

     2112     7503    5                           THEN DO;

     2113     7504    5                             CALL M$DEACTIVATE (DEA_FPRG)

   7504  6 003523   000260 630400 2                  EPPR0   DEA_FPRG
         6 003524   500001 713400                    CLIMB   alt,+32769
         6 003525   401400 401760                    pmme    nvectors=4
         6 003526   003530 702000 6                  TSX2    s:7507
         6 003527   003530 710000 6                  TRA     s:7507

     2114     7505    6                             WHENALTRETURN DO;

     2115     7506    6                               END;

     2116     7507    5                             CALL M$ACTIVATE (ACT_FPRG)

   7507  6 003530   000240 630400 2                  EPPR0   ACT_FPRG
         6 003531   500000 713400                    CLIMB   alt,+32768
         6 003532   401400 401760                    pmme    nvectors=4
         6 003533   003535 702000 6                  TSX2    s:7510
         6 003534   003535 710000 6                  TRA     s:7510

     2117     7508    6                             WHENALTRETURN DO;

     2118     7509    6                               END;

     2119     7510    5                             SYMB_FPRG.LDBYPRO# = 1;

   7510  6 003535   001000 236003                    LDQ     512,DU
         6 003536   000656 552040 1                  STBQ    SYMB_FPRG,'40'O

     2120     7511    5                             SYMB_STA.STATION# = DEVNAME;

   7511  6 003537   000000 237000 1                  LDAQ    DEVNAME
         6 003540   000700 757000 1                  STAQ    SYMB_STA
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:261  

     2121     7512    5                             CALL M$SETFP ( START_FPRG )

   7512  6 003541   000660 630400 2                  EPPR0   START_FPRG
         6 003542   560021 713400                    CLIMB   alt,+57361
         6 003543   401400 401760                    pmme    nvectors=4
         6 003544   003546 702000 6                  TSX2    s:7514
         6 003545   003577 710000 6                  TRA     s:7527

     2122     7513    6                             WHENALTRETURN DO;

     2123     7514    6                               CALL M$DEACTIVATE (DEA_FPRG)

   7514  6 003546   000260 630400 2                  EPPR0   DEA_FPRG
         6 003547   500001 713400                    CLIMB   alt,+32769
         6 003550   401400 401760                    pmme    nvectors=4
         6 003551   003553 702000 6                  TSX2    s:7517
         6 003552   003553 710000 6                  TRA     s:7517

     2124     7515    7                               WHENALTRETURN DO;

     2125     7516    7                                 END;

     2126     7517    6                               SYMB_FPRG.LDBYPRO# = 0;

   7517  6 003553   000000 236003                    LDQ     0,DU
         6 003554   000656 552040 1                  STBQ    SYMB_FPRG,'40'O

     2127     7518    6                               OPMSG_FPERR.DEVNM = DEVNAME;

   7518  6 003555   000000 237000 1                  LDAQ    DEVNAME
         6 003556   000167 755000 1                  STA     OPMSG_FPERR+3
         6 003557   000170 756000 1                  STQ     OPMSG_FPERR+4

     2128     7519    6                               OPMSG_FPERR.CADDR = M_UR;

   7519  6 003560   100000 220003                    LDX0    32768,DU
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:262  
         6 003561   000164 740000 1                  STX0    OPMSG_FPERR

     2129     7520    6                               OPMSG_FPERR.SUBC = 2;

   7520  6 003562   000002 236003                    LDQ     2,DU
         6 003563   000172 552020 1                  STBQ    OPMSG_FPERR+6,'20'O

     2130     7521    6                              OPMSG_FPERR.ERRCODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   7521  6 003564   000000 470400 xsym               LDP0    B$TCB$
         6 003565   000000 471500                    LDP1    0,,PR0
         6 003566   000000 100500                    MLR     fill='000'O
         6 003567   100102 000004                    ADSC9   66,,PR1                  cn=0,n=4
         6 003570   000172 400004 1                  ADSC9   OPMSG_FPERR+6            cn=2,n=4

     2131     7522    6                               OPMSG_FPERR.LDBYPRO = 1;

   7522  6 003571   001000 236007                    LDQ     512,DL
         6 003572   000173 552010 1                  STBQ    OPMSG_FPERR+7,'10'O

     2132     7523    6                               CALL M$WRITE (OCMSG_FPERR);

   7523  6 003573   000440 630400 2                  EPPR0   OCMSG_FPERR
         6 003574   040001 713400                    CLIMB   write
         6 003575   401400 401760                    pmme    nvectors=4

     2133     7524    6                               GOTO DEV_EVRTN;

   7524  6 003576   004237 710000 6                  TRA     DEV_EVRTN

     2134     7525    6                               END;
     2135     7526
     2136     7527    5                             START_SYMB.V.ORDER# = FOMO_LOAD#;

   7527  6 003577   000015 220003                    LDX0    13,DU
         6 003600   000241 740000 1                  STX0    START_SYMB+21

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:263  
     2137     7528    5                             SYMB_FPRG.LDBYPRO# = 0;

   7528  6 003601   000000 236003                    LDQ     0,DU
         6 003602   000656 552040 1                  STBQ    SYMB_FPRG,'40'O

     2138     7529    5                             END;

     2139     7530    4                           EXTENT = '0'B;

   7530  6 003603   000000 235003                    LDA     0,DU
         6 003604   000000 236003                    LDQ     0,DU
         6 003605   000004 757000 1                  STAQ    EXTENT

     2140     7531    4                           DEV$->FO$DEV.BR = '0'B;

   7531  6 003606   000000 470400 xsym               LDP0    FO_DEV$
         6 003607   000100 100400                    MLR     fill='000'O
         6 003610   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 003611   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4

     2141     7532    4                           START_SYMB.V.BLKREC = '0'B;

   7532  6 003612   000244 450000 1                  STZ     START_SYMB+24

     2142     7533    4                           START_SYMB.BUF_.BUF$ = DEV$->FO$DEV.SPG$;

   7533  6 003613   000001 236100                    LDQ     1,,PR0
         6 003614   000221 756000 1                  STQ     START_SYMB+5

     2143     7534    4                           START_SYMB.V.SETX# = 0;

   7534  6 003615   000000 220003                    LDX0    0,DU
         6 003616   000241 440000 1                  SXL0    START_SYMB+21

     2144     7535    4                           CALL M$SYMBIO (START_SYMB)

   7535  6 003617   000214 630400 1                  EPPR0   START_SYMB
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:264  
         6 003620   570000 713400                    CLIMB   alt,+61440
         6 003621   403400 401760                    pmme    nvectors=8
         6 003622   003624 702000 6                  TSX2    s:7537
         6 003623   003642 710000 6                  TRA     s:7544

     2145     7536    5                           WHENALTRETURN DO;

     2146     7537    5                             CALL FOI$RBUF (FO_SPGSCB, DEV$->FO$DEV.SPG$);

   7537  6 003624   000000 236000 xsym               LDQ     FO_DEV$
         6 003625   000001 036003                    ADLQ    1,DU
         6 003626   000013 235000 7                  LDA     11
         6 003627   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 003630   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 003631   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 003632   000000 701000 xent               TSX1    FOI$RBUF
         6 003633   000000 011000                    NOP     0

     2147     7538    5                             DEV$->FO$DEV.SPG$ = ADDR(NIL);

   7538  6 003634   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 003635   000000 470400 xsym               LDP0    FO_DEV$
         6 003636   000001 756100                    STQ     1,,PR0

     2148     7539                                  %JUNLOCK;

   7540  6 003637   000001 336007                    LCQ     1,DL
         6 003640   000000 056000 xsym               ASQ     FO_Q

     2149     7542    5                             GOTO DEV_EVRTN;

   7542  6 003641   004237 710000 6                  TRA     DEV_EVRTN

     2150     7543    5                             END;
     2151     7544    4                           DEV$->FO$DEV.STATE = FOS_IALN#;

   7544  6 003642   000000 470400 xsym               LDP0    FO_DEV$
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:265  
         6 003643   004000 236007                    LDQ     2048,DL
         6 003644   000011 552110                    STBQ    9,'10'O,PR0

     2152     7545    4                           DEV$->FO$DEV.CFIL$ = ADDR(NIL);

   7545  6 003645   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 003646   000002 756100                    STQ     2,,PR0

     2153     7546    4                           DEV$->FO$DEV.SUSRSN = 0;

   7546  6 003647   000000 236003                    LDQ     0,DU
         6 003650   000011 552104                    STBQ    9,'04'O,PR0

     2154     7547                                %JUNLOCK;

   7548  6 003651   000001 336007                    LCQ     1,DL
         6 003652   000000 056000 xsym               ASQ     FO_Q

     2155     7550
     2156     7551    4                           DEV$->FO$DEV.TOKERSN = 0;

   7551  6 003653   000000 236003                    LDQ     0,DU
         6 003654   000015 552140                    STBQ    13,'40'O,PR0

     2157     7552    4                           GOTO ALIGN_IDLE_DEVICE;

   7552  6 003655   001210 710000 6                  TRA     ALIGN_IDLE_DEVICE

     2158     7553    4                       END;

     2159     7554        /**
     2160     7555         **
     2161     7556         **  SPACE KEYIN
     2162     7557         **
     2163     7558         **/
     2164     7559    3                   CASE (KEY_SPACE#);

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:266  
     2165     7560                                /* A WORD ABOUT SPACING :
     2166     7561                                   SPACING IS INITIATED AFTER THE DEVICE
     2167     7562                                   GETS SUSPENDED. ALTHOUGH THE DEVICE IS
     2168     7563                                   MARKED BUSY IN OUR TABLES, AND MARKED
     2169     7564                                   SPACING IN MOOS'S TABLES, NOTE THAT
     2170     7565                                   THE FEP (IF THE DEVICE IS REMOTE) NEVER
     2171     7566                                   KNOWS THAT WE ARE SPACING.  THUS,
     2172     7567                                   FOR EXAMPLE, UNILATERAL SUSPEND FROM
     2173     7568                                   THE FEP DURING SPACING IS AN ERROR AND
     2174     7569                                   CAUSES THE FEP TO BE RE-BOOTED.  ALSO
     2175     7570                                   THIS MEANS WE CAN CHANGE STATE RIGHT
     2176     7571                                   BACK TO FOS_SUSP# IF WE SPACE PAST EOF,
     2177     7572                                   WITHOUT HAVING TO DO M$SYMBIO SUSPEND. */
     2178     7573    3                     PAGES=KEYIN$->FO$DKEYIN.NPAGES;

   7573  6 003656   400003 235100                    LDA     3,,PR4
         6 003657   200043 755100                    STA     PAGES,,AUTO

     2179     7574    3                     IF PAGES > FOMI_MXSPC#

   7574  6 003660   023420 115007                    CMPA    10000,DL
         6 003661   003666 605400 6                  TPNZ    s:7578
         6 003662   000023 115000 7                  CMPA    19
         6 003663   003666 604000 6                  TMI     s:7578
         6 003664   000000 115003                    CMPA    0,DU
         6 003665   003671 601000 6                  TNZ     s:7581

     2180     7575    3                     OR PAGES < (-FOMI_MXSPC#)
     2181     7576    3                     OR PAGES = 0 THEN
     2182     7577    4                       DO;

     2183     7578    4                       KERR=FOKE_ILSPC#;

   7578  6 003666   000006 235007                    LDA     6,DL
         6 003667   200026 755100                    STA     KERR,,AUTO

     2184     7579    4                       GOTO DEV_KERR;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:267  

   7579  6 003670   003374 710000 6                  TRA     DEV_KERR

     2185     7580    4                       END;
     2186     7581    4                       DO CASE (KEYIN$->FO$DKEYIN.SPACEFROM);

   7581  6 003671   400004 236100                    LDQ     4,,PR4
         6 003672   000033 772000                    QRL     27
         6 003673   000003 116007                    CMPQ    3,DL
         6 003674   003676 602006 6                  TNC     s:7581+5,QL
         6 003675   003725 710000 6                  TRA     s:7602
         6 003676   003726 710000 6                  TRA     s:7604
         6 003677   003701 710000 6                  TRA     s:7584
         6 003700   003706 710000 6                  TRA     s:7590

     2187     7582    4                         CASE (SPACEFROM_HERE#);

     2188     7583    4                         CASE (SPACEFROM_BOF#);

     2189     7584    4                           IF PAGES < 0 THEN

   7584  6 003701   000000 115003                    CMPA    0,DU
         6 003702   003726 605000 6                  TPL     s:7604

     2190     7585    5                             DO;

     2191     7586    5                             KERR=FOKE_SBBOF#;

   7586  6 003703   000011 235007                    LDA     9,DL
         6 003704   200026 755100                    STA     KERR,,AUTO

     2192     7587    5                             GOTO DEV_KERR;

   7587  6 003705   003374 710000 6                  TRA     DEV_KERR

     2193     7588    5                             END;
     2194     7589    4                         CASE (SPACEFROM_EOF#);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:268  

     2195     7590    4                           IF PAGES > 0 THEN

   7590  6 003706   000000 115003                    CMPA    0,DU
         6 003707   003713 604400 6                  TMOZ    s:7595

     2196     7591    5                             DO;

     2197     7592    5                             KERR=FOKE_SFEOF#;

   7592  6 003710   000010 235007                    LDA     8,DL
         6 003711   200026 755100                    STA     KERR,,AUTO

     2198     7593    5                             GOTO DEV_KERR;

   7593  6 003712   003374 710000 6                  TRA     DEV_KERR

     2199     7594    5                             END;
     2200     7595    4                           IF DEV$->FO$DEV.CFIL$ ~= ADDR(NIL) THEN

   7595  6 003713   000002 236100                    LDQ     2,,PR0
         6 003714   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 003715   003726 600000 6                  TZE     s:7604

     2201     7596    4                            IF DEV$->FO$DEV.CFIL$->FO$FIL.FLG.GLC = '0'B THEN

   7596  6 003716   000002 475500                    LDP5    2,,PR0
         6 003717   500015 236100                    LDQ     13,,PR5
         6 003720   000100 316007                    CANQ    64,DL
         6 003721   003726 601000 6                  TNZ     s:7604

     2202     7597    5                              DO;

     2203     7598    5                              KERR=FOKE_SPEOF#;

   7598  6 003722   000012 235007                    LDA     10,DL
         6 003723   200026 755100                    STA     KERR,,AUTO
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:269  

     2204     7599    5                              GOTO DEV_KERR;

   7599  6 003724   003374 710000 6                  TRA     DEV_KERR

     2205     7600    5                              END;
     2206     7601    4                         CASE (ELSE);

     2207     7602    4                           GOTO ILLKEY;

   7602  6 003725   004217 710000 6                  TRA     ILLKEY

     2208     7603    4                       END;

     2209     7604    3                     CALL CHK_KSYSID ALTRET(BAD_KSYSID);

   7604  6 003726   006467 701000 6                  TSX1    CHK_KSYSID
         6 003727   003421 702000 6                  TSX2    BAD_KSYSID

     2210     7605    3                     CALL CHK_AIP ALTRET(DEV_KERR);

   7605  6 003730   006456 701000 6                  TSX1    CHK_AIP
         6 003731   003374 702000 6                  TSX2    DEV_KERR

     2211     7606    3                     CALL CHK_ALG ALTRET(DEV_KERR);

   7606  6 003732   006445 701000 6                  TSX1    CHK_ALG
         6 003733   003374 702000 6                  TSX2    DEV_KERR

     2212     7607    3                     DEV$->FO$DEV.SPACEPAGES=KEYIN$->FO$DKEYIN.NPAGES;

   7607  6 003734   200004 470500                    LDP0    @DINFO,,AUTO
         6 003735   000000 471500                    LDP1    0,,PR0
         6 003736   000000 473400 xsym               LDP3    FO_DEV$
         6 003737   100003 236100                    LDQ     3,,PR1
         6 003740   000011 736000                    QLS     9
         6 003741   300015 552130                    STBQ    13,'30'O,PR3
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:270  

     2213     7608    3                     DEV$->FO$DEV.SPACEFROM=KEYIN$->FO$DKEYIN.SPACEFROM;

   7608  6 003742   000000 471500                    LDP1    0,,PR0
         6 003743   100004 236100                    LDQ     4,,PR1
         6 003744   000022 772000                    QRL     18
         6 003745   300013 552110                    STBQ    11,'10'O,PR3

     2214     7609                                      /* Have we spaced forward? FWDSPC = '1'B
     2215     7610                                         says we have, therefore if we reach
     2216     7611                                         the EOF we know to space back to get
     2217     7612                                         the compile summary */
     2218     7613    3                     IF DEV$->FO$DEV.SPACEPAGES > 0

   7613  6 003746   300015 236100                    LDQ     13,,PR3
         6 003747   000011 736000                    QLS     9
         6 003750   000022 732000                    QRS     18
         6 003751   000000 116003                    CMPQ    0,DU
         6 003752   003757 605400 6                  TPNZ    s:7615
         6 003753   300013 236100                    LDQ     11,,PR3
         6 003754   777000 376007                    ANQ     -512,DL
         6 003755   002000 116007                    CMPQ    1024,DL
         6 003756   003770 601000 6                  TNZ     s:7618

     2219     7614    3                     OR DEV$->FO$DEV.SPACEFROM = SPACEFROM_EOF# THEN
     2220     7615    3                      IF KEYIN$->FO$DKEYIN.CONTINUE = 0 THEN

   7615  6 003757   000000 471500                    LDP1    0,,PR0
         6 003760   100004 236100                    LDQ     4,,PR1
         6 003761   000777 316003                    CANQ    511,DU
         6 003762   003766 601000 6                  TNZ     s:7617

     2221     7616    3                       DEV$->FO$DEV.FLG.FWDSPC='1'B;

   7616  6 003763   000020 236007                    LDQ     16,DL
         6 003764   300012 256100                    ORSQ    10,,PR3
         6 003765   003770 710000 6                  TRA     s:7618
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:271  

     2222     7617    3                      ELSE DEV$->FO$DEV.FLG.FWDSPC='0'B;

   7617  6 003766   000024 236000 7                  LDQ     20
         6 003767   300012 356100                    ANSQ    10,,PR3

     2223     7618    4                       DO CASE (STATE);

   7618  6 003770   200044 235100                    LDA     STATE,,AUTO
         6 003771   000004 115007                    CMPA    4,DL
         6 003772   003774 602005 6                  TNC     s:7618+4,AL
         6 003773   004017 710000 6                  TRA     s:7633
         6 003774   004017 710000 6                  TRA     s:7633
         6 003775   004000 710000 6                  TRA     s:7620
         6 003776   004014 710000 6                  TRA     s:7630
         6 003777   004011 710000 6                  TRA     s:7628

     2224     7619    4                         CASE (FOS_BUSY#);

     2225     7620    4                           IF DEV$->FO$DEV.FLG.SIP THEN

   7620  6 004000   300012 236100                    LDQ     10,,PR3
         6 004001   000004 316007                    CANQ    4,DL
         6 004002   004006 600000 6                  TZE     s:7625

     2226     7621    5                             DO;

     2227     7622    5                             KERR=FOKE_NSSPC#;

   7622  6 004003   000015 235007                    LDA     13,DL
         6 004004   200026 755100                    STA     KERR,,AUTO

     2228     7623    5                             GOTO DEV_KERR;

   7623  6 004005   003374 710000 6                  TRA     DEV_KERR

     2229     7624    5                             END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:272  
     2230     7625    4                           DEV$->FO$DEV.SUSRSN=FOSR_KSPA#;

   7625  6 004006   000012 236007                    LDQ     10,DL
         6 004007   300011 552104                    STBQ    9,'04'O,PR3

     2231     7626    4                           GOTO DEV_SUSPEND;

   7626  6 004010   003034 710000 6                  TRA     DEV_SUSPEND

     2232     7627    4                         CASE (FOS_SPRQ#);

     2233     7628    4                           DEV$->FO$DEV.SUSRSN=FOSR_KSPA#;

   7628  6 004011   000012 236007                    LDQ     10,DL
         6 004012   300011 552104                    STBQ    9,'04'O,PR3
         6 004013   004237 710000 6                  TRA     DEV_EVRTN

     2234     7629    4                         CASE (FOS_SUSP#);

     2235     7630    4                           DEV$->FO$DEV.SUSRSN=FOSR_KSPA#;

   7630  6 004014   000012 236007                    LDQ     10,DL
         6 004015   300011 552104                    STBQ    9,'04'O,PR3

     2236     7631    4                           GOTO DEV_SUSPENDED1;

   7631  6 004016   000612 710000 6                  TRA     DEV_SUSPENDED1

     2237     7632    4                         CASE (ELSE);

     2238     7633    4                           GOTO DEV_NOTBUSY;

   7633  6 004017   003045 710000 6                  TRA     DEV_NOTBUSY

     2239     7634    4                       END;

     2240     7635        /**
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:273  
     2241     7636         **
     2242     7637         **  RESTRICT KEYIN
     2243     7638         **
     2244     7639         **/
     2245     7640    3                   CASE (KEY_RESTRICT#);

     2246     7641                                              /* RESTRICT by ACCT */
     2247     7642    3                     DEV$->FO$DEV.RWSNL=0;

   7642  6 004020   000000 236003                    LDQ     0,DU
         6 004021   000014 552104                    STBQ    12,'04'O,PR0

     2248     7643    3                     DEV$->FO$DEV.RACCT=KEYIN$->FO$DKEYIN.RACCT;

   7643  6 004022   300000 474500                    LDP4    0,,PR3
         6 004023   040100 100500                    MLR     fill='040'O
         6 004024   400007 000010                    ADSC9   7,,PR4                   cn=0,n=8
         6 004025   000020 200010                    ADSC9   16,,PR0                  cn=1,n=8

     2249     7644    3                     IF DEV$->FO$DEV.RACCT = ' ' THEN DEV$->FO$DEV.RACCTL=0;

   7644  6 004026   040000 106500                    CMPC    fill='040'O
         6 004027   000020 200010                    ADSC9   16,,PR0                  cn=1,n=8
         6 004030   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 004031   004034 601000 6                  TNZ     s:7645

   7644  6 004032   000014 552110                    STBQ    12,'10'O,PR0
         6 004033   004060 710000 6                  TRA     s:7655

     2250     7645    3                     ELSE IF SUBSTR(DEV$->FO$DEV.RACCT,0,1) = '?' THEN

   7645  6 004034   000020 236100                    LDQ     16,,PR0
         6 004035   000777 376003                    ANQ     511,DU
         6 004036   000077 116003                    CMPQ    63,DU
         6 004037   004051 601000 6                  TNZ     s:7652

     2251     7646    4                        DO;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:274  

     2252     7647    4                        CALL INDEX (I,' ',DEV$->FO$DEV.RACCT);

   7647  6 004040   000000 124500                    SCM     mask='000'O
         6 004041   000020 200010                    ADSC9   16,,PR0                  cn=1,n=8
         6 004042   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 004043   200005 000100                    ARG     I,,AUTO

     2253     7648    4                        DEV$->FO$DEV.RACCTL=-(I-1);

   7648  6 004044   000001 236007                    LDQ     1,DL
         6 004045   200005 136100                    SBLQ    I,,AUTO
         6 004046   000011 736000                    QLS     9
         6 004047   000014 552110                    STBQ    12,'10'O,PR0

     2254     7649    4                        END;

   7649  6 004050   004060 710000 6                  TRA     s:7655

     2255     7650    3                      ELSE
     2256     7651    4                        DO;

     2257     7652    4                        CALL INDEX (I,'?',DEV$->FO$DEV.RACCT);

   7652  6 004051   000000 124500                    SCM     mask='000'O
         6 004052   000020 200010                    ADSC9   16,,PR0                  cn=1,n=8
         6 004053   000025 000001 7                  ADSC9   21                       cn=0,n=1
         6 004054   200005 000100                    ARG     I,,AUTO

     2258     7653    4                        DEV$->FO$DEV.RACCTL=I;

   7653  6 004055   200005 236100                    LDQ     I,,AUTO
         6 004056   000011 736000                    QLS     9
         6 004057   000014 552110                    STBQ    12,'10'O,PR0

     2259     7654    4                        END;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:275  
     2260     7655    3                     OPMSG_RESP.ACCT=DEV$->FO$DEV.RACCT;

   7655  6 004060   040000 100500                    MLR     fill='040'O
         6 004061   000020 200010                    ADSC9   16,,PR0                  cn=1,n=8
         6 004062   000111 600010 1                  ADSC9   OPMSG_RESP+5             cn=3,n=8

     2261     7656    3                     OPMSG_RESP.SUBC=FOKR_RESTRICTA#;

   7656  6 004063   015000 236007                    LDQ     6656,DL
         6 004064   000111 552010 1                  STBQ    OPMSG_RESP+5,'10'O

     2262     7657    3                     CALL M$WRITE (OCMSG_RESP);

   7657  6 004065   000330 630400 2                  EPPR0   OCMSG_RESP
         6 004066   040001 713400                    CLIMB   write
         6 004067   401400 401760                    pmme    nvectors=4

     2263     7658    3                     GOTO DEV_EVALT;

   7658  6 004070   004240 710000 6                  TRA     DEV_EVALT

     2264     7659
     2265     7660    3                   CASE (KEY_RESTRICTW#);

     2266     7661                                              /* RESTRICT by WSN */
     2267     7662    3                     WSN$ = DEV$ -> FO$DEV.WSN$;

   7662  6 004071   000004 236100                    LDQ     4,,PR0
         6 004072   200010 756100                    STQ     WSN$,,AUTO

     2268     7663    4                       DO WHILE (WSN$ ~= ADDR(NIL));

   7663  6 004073   004132 710000 6                  TRA     s:7673

     2269     7664    5                         DO I = 0 TO (WSN$ -> FO$WSN.NWSNS - 1);

   7664  6 004074   200005 450100                    STZ     I,,AUTO
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:276  
         6 004075   004124 710000 6                  TRA     s:7671+3

     2270     7665    5                         IF (KEYIN$ -> FO$DKEYIN.RWSN

   7665  6 004076   200004 470500                    LDP0    @DINFO,,AUTO
         6 004077   000000 471500                    LDP1    0,,PR0
         6 004100   200005 236100                    LDQ     I,,AUTO
         6 004101   000011 402007                    MPY     9,DL
         6 004102   200010 473500                    LDP3    WSN$,,AUTO
         6 004103   040106 106500                    CMPC    fill='040'O
         6 004104   100007 000010                    ADSC9   7,,PR1                   cn=0,n=8
         6 004105   300002 000010                    ADSC9   2,Q,PR3                  cn=0,n=8
         6 004106   004121 601000 6                  TNZ     s:7671
         6 004107   200005 236100                    LDQ     I,,AUTO
         6 004110   000121 402007                    MPY     81,DL
         6 004111   000000 066506                    CMPB    filb='0'B
         6 004112   300004 060001                    BDSC    4,Q,PR3                  by=0,bit=6,n=1
         6 004113   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         6 004114   004121 601000 6                  TNZ     s:7671
         6 004115   000000 066506                    CMPB    filb='0'B
         6 004116   300004 070001                    BDSC    4,Q,PR3                  by=0,bit=7,n=1
         6 004117   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         6 004120   004147 600000 6                  TZE     RESTRICT_WSN

     2271     7666    5                         = WSN$ -> FO$WSN.WSN.WSN_NAME(I))
     2272     7667    5                         AND WSN$ -> FO$WSN.WSN.NOT_USED(I) = '0'B
     2273     7668    5                         AND WSN$ -> FO$WSN.WSN.ROUTED_OUT(I) = '0'B
     2274     7669    5                         THEN
     2275     7670    5                          GOTO RESTRICT_WSN;
     2276     7671    5                         END;

   7671  6 004121   200005 235100                    LDA     I,,AUTO
         6 004122   000001 035007                    ADLA    1,DL
         6 004123   200005 755100                    STA     I,,AUTO
         6 004124   200010 470500                    LDP0    WSN$,,AUTO
         6 004125   200005 236100                    LDQ     I,,AUTO
         6 004126   000001 116100                    CMPQ    1,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:277  
         6 004127   004076 602000 6                  TNC     s:7665

     2277     7672    4                       WSN$ = WSN$ -> FO$WSN.LNK$;

   7672  6 004130   000000 236100                    LDQ     0,,PR0
         6 004131   200010 756100                    STQ     WSN$,,AUTO

     2278     7673    4                       END;

   7673  6 004132   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 004133   004074 601000 6                  TNZ     s:7664

     2279     7674        /*N* WSN NOT ASSOCIATED WITH LPNN */
     2280     7675    3                     OPMSG_RESP.WSN = KEYIN$ -> FO$DKEYIN.RWSN;

   7675  6 004134   200004 470500                    LDP0    @DINFO,,AUTO
         6 004135   000000 471500                    LDP1    0,,PR0
         6 004136   040000 100500                    MLR     fill='040'O
         6 004137   100007 000010                    ADSC9   7,,PR1                   cn=0,n=8
         6 004140   000111 600010 1                  ADSC9   OPMSG_RESP+5             cn=3,n=8

     2281     7676    3                     OPMSG_RESP.SUBC = FOKR_NORESTRICTW#;

   7676  6 004141   022000 236007                    LDQ     9216,DL
         6 004142   000111 552010 1                  STBQ    OPMSG_RESP+5,'10'O

     2282     7677    3                     CALL M$WRITE (OCMSG_RESP);

   7677  6 004143   000330 630400 2                  EPPR0   OCMSG_RESP
         6 004144   040001 713400                    CLIMB   write
         6 004145   401400 401760                    pmme    nvectors=4

     2283     7678    3                     RETURN;

   7678  6 004146   000000 702200 xent               TSX2  ! X66_ARET

   7676  6 004147                       RESTRICT_WSN null
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:278  
     2284     7679    3   RESTRICT_WSN:     ;
     2285     7680    3                     DEV$->FO$DEV.RACCTL=0;

   7680  6 004147   000000 474400 xsym               LDP4    FO_DEV$
         6 004150   000000 236003                    LDQ     0,DU
         6 004151   400014 552110                    STBQ    12,'10'O,PR4

     2286     7681    3                     DEV$->FO$DEV.RWSN=KEYIN$->FO$DKEYIN.RWSN;

   7681  6 004152   000000 471500                    LDP1    0,,PR0
         6 004153   040100 100500                    MLR     fill='040'O
         6 004154   100007 000010                    ADSC9   7,,PR1                   cn=0,n=8
         6 004155   400020 200010                    ADSC9   16,,PR4                  cn=1,n=8

     2287     7682    3                     IF DEV$->FO$DEV.RWSN = ' ' THEN DEV$->FO$DEV.RWSNL=0;

   7682  6 004156   040000 106500                    CMPC    fill='040'O
         6 004157   400020 200010                    ADSC9   16,,PR4                  cn=1,n=8
         6 004160   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 004161   004164 601000 6                  TNZ     s:7683

   7682  6 004162   400014 552104                    STBQ    12,'04'O,PR4
         6 004163   004206 710000 6                  TRA     s:7693

     2288     7683    3                     ELSE IF SUBSTR(DEV$->FO$DEV.RWSN,0,1) = '?' THEN

   7683  6 004164   400020 236100                    LDQ     16,,PR4
         6 004165   000777 376003                    ANQ     511,DU
         6 004166   000077 116003                    CMPQ    63,DU
         6 004167   004200 601000 6                  TNZ     s:7690

     2289     7684    4                        DO;

     2290     7685    4                        CALL INDEX (I,' ',DEV$->FO$DEV.RWSN);

   7685  6 004170   000000 124500                    SCM     mask='000'O
         6 004171   400020 200010                    ADSC9   16,,PR4                  cn=1,n=8
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:279  
         6 004172   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 004173   200005 000100                    ARG     I,,AUTO

     2291     7686    4                        DEV$->FO$DEV.RWSNL=-(I-1);

   7686  6 004174   000001 236007                    LDQ     1,DL
         6 004175   200005 136100                    SBLQ    I,,AUTO
         6 004176   400014 552104                    STBQ    12,'04'O,PR4

     2292     7687    4                        END;

   7687  6 004177   004206 710000 6                  TRA     s:7693

     2293     7688    3                      ELSE
     2294     7689    4                        DO;

     2295     7690    4                        CALL INDEX (I,'?',DEV$->FO$DEV.RWSN);

   7690  6 004200   000000 124500                    SCM     mask='000'O
         6 004201   400020 200010                    ADSC9   16,,PR4                  cn=1,n=8
         6 004202   000025 000001 7                  ADSC9   21                       cn=0,n=1
         6 004203   200005 000100                    ARG     I,,AUTO

     2296     7691    4                        DEV$->FO$DEV.RWSNL=I;

   7691  6 004204   200005 236100                    LDQ     I,,AUTO
         6 004205   400014 552104                    STBQ    12,'04'O,PR4

     2297     7692    4                        END;

     2298     7693    3                     OPMSG_RESP.WSN=DEV$->FO$DEV.RWSN;

   7693  6 004206   040000 100500                    MLR     fill='040'O
         6 004207   400020 200010                    ADSC9   16,,PR4                  cn=1,n=8
         6 004210   000111 600010 1                  ADSC9   OPMSG_RESP+5             cn=3,n=8

     2299     7694    3                     OPMSG_RESP.SUBC=FOKR_RESTRICTW#;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:280  

   7694  6 004211   021000 236007                    LDQ     8704,DL
         6 004212   000111 552010 1                  STBQ    OPMSG_RESP+5,'10'O

     2300     7695    3                     CALL M$WRITE (OCMSG_RESP);

   7695  6 004213   000330 630400 2                  EPPR0   OCMSG_RESP
         6 004214   040001 713400                    CLIMB   write
         6 004215   401400 401760                    pmme    nvectors=4

     2301     7696    3                     GOTO DEV_EVALT;

   7696  6 004216   004240 710000 6                  TRA     DEV_EVALT

     2302     7697        /**
     2303     7698         **
     2304     7699         **  !!UNKNOWN KEYIN!!
     2305     7700         **
     2306     7701         **/
     2307     7702    3                   CASE (ELSE);                  /* !!UNKN  KEYIN */

     2308     7703    3   ILLKEY:           OPMSG_UNIMP.CADDR=KEYIN$->FO$DKEYIN.CADDR;

   7703  6 004217   400000 722100       ILLKEY       LXL2    0,,PR4
         6 004220   000206 742000 1                  STX2    OPMSG_UNIMP

     2309     7704    3                     CALL M$WRITE (OCMSG_UNIMP);

   7704  6 004221   000454 630400 2                  EPPR0   OCMSG_UNIMP
         6 004222   040001 713400                    CLIMB   write
         6 004223   401400 401760                    pmme    nvectors=4

     2310     7705    3                 END; /* CASE KIN# */

   7705  6 004224   004237 710000 6                  TRA     DEV_EVRTN

     2311     7706        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:281  
     2312     7707        /*
     2313     7708                             ###    ####    #       #####
     2314     7709                              #     #   #   #       #
     2315     7710                              #     #   #   #       #
     2316     7711                              #     #   #   #       ####
     2317     7712                              #     #   #   #       #
     2318     7713                              #     #   #   #       #
     2319     7714                             ###    ####    #####   #####
     2320     7715        */
     2321     7716        /**
     2322     7717         **
     2323     7718         **
     2324     7719         **      DEVICE WENT IDLE EVENT
     2325     7720         **
     2326     7721         **
     2327     7722         **/
     2328     7723    2             CASE (FODE_IDLE#);

     2329     7724    3                 DO CASE (STATE);

   7724  6 004225   200044 235100                    LDA     STATE,,AUTO
         6 004226   000001 115007                    CMPA    1,DL
         6 004227   004231 602005 6                  TNC     s:7724+4,AL
         6 004230   004235 710000 6                  TRA     s:7729
         6 004231   004232 710000 6                  TRA     DEV_NXTF

     2330     7725    3                   CASE (FOS_IDLE#);

   7704  6 004232                       DEV_NXTF     null
     2331     7726    3   DEV_NXTF:         ;
     2332     7727    3                     CALL SCHED_DEV;

   7727  6 004232   004365 701000 6                  TSX1    SCHED_DEV
         6 004233   000000 011000                    NOP     0
         6 004234   004237 710000 6                  TRA     DEV_EVRTN

     2333     7728    3                   CASE (ELSE);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:282  

     2334     7729    3                     CALL DEV_EVSCREECH;

   7729  6 004235   006436 701000 6                  TSX1    DEV_EVSCREECH
         6 004236   000000 011000                    NOP     0

     2335     7730    3                 END;

     2336     7731        /**
     2337     7732         **
     2338     7733         **
     2339     7734         **      END OF MAIN EVENT CODE DO CASE
     2340     7735         **
     2341     7736         **
     2342     7737         **/
     2343     7738    2           END;

   7723  6 004237                       DEV_EVRTN    null
     2344     7739    1   DEV_EVRTN:;
     2345     7740    1         RETURN;

   7740  6 004237   000000 702200 xent               TSX2  ! X66_ARET

   7723  6 004240                       DEV_EVALT    null
     2346     7741    1   DEV_EVALT:;
     2347     7742    1         ALTRETURN;

   7742  6 004240   000000 702200 xent               TSX2  ! X66_AALT

     2348     7743        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:283  
     2349     7744        /*F* NAME:         FOD$AVAIL
     2350     7745             PURPOSE:      To set LPAVAIL for a file
     2351     7746             DESCRIPTION:  Set FLG.LPAVAIL in the file frame according as there
     2352     7747                           is an appropriate device for the file.
     2353     7748        */
     2354     7749    1   FOD$AVAIL: ENTRY ALTRET;

   7749  6 004241   000000 700200 xent  FOD$AVAIL    TSX0  ! X66_AUTO_2
         6 004242   000112 000002                    ZERO    74,2

     2355     7750        /**/
     2356     7751    1         FIL$->FO$FIL.FLG.LPAVAIL='0'B;

   7751  6 004243   000000 470400 xsym               LDP0    FO_FIL$
         6 004244   000026 236000 7                  LDQ     22
         6 004245   000015 356100                    ANSQ    13,,PR0

     2357     7752    1         DEV$=FO_Q.DEVHD$;

   7752  6 004246   000002 236000 xsym               LDQ     FO_Q+2
         6 004247   000000 756000 xsym               STQ     FO_DEV$

     2358     7753    2           DO WHILE (DEV$ ~= ADDR(NIL));

   7753  6 004250   004262 710000 6                  TRA     s:7759

     2359     7754    2           CALL MATCHEM2 ALTRET(NAVAIL);

   7754  6 004251   006103 701000 6                  TSX1    MATCHEM2
         6 004252   004257 702000 6                  TSX2    NAVAIL

     2360     7755    2           FIL$->FO$FIL.FLG.LPAVAIL='1'B;

   7755  6 004253   000000 470400 xsym               LDP0    FO_FIL$
         6 004254   000400 236007                    LDQ     256,DL
         6 004255   000015 256100                    ORSQ    13,,PR0

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:284  
     2361     7756    2           RETURN;

   7756  6 004256   000000 702200 xent               TSX2  ! X66_ARET

   7755  6 004257                       NAVAIL       null
     2362     7757    2   NAVAIL: ;
     2363     7758    2           DEV$=DEV$->FO$DEV.LNK$;

   7758  6 004257   000000 470400 xsym               LDP0    FO_DEV$
         6 004260   000000 236100                    LDQ     0,,PR0
         6 004261   000000 756000 xsym               STQ     FO_DEV$

     2364     7759    2           END;

   7759  6 004262   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 004263   004251 601000 6                  TNZ     s:7754

     2365     7760    1         ALTRETURN;

   7760  6 004264   000000 702200 xent               TSX2  ! X66_AALT

     2366     7761        /**/
     2367     7762        /*F* NAME:         FOD$FSCHK
     2368     7763             PURPOSE:      To print setup suggestions for all printers
     2369     7764             DESCRIPTION:  For each device print form setup suggestions
     2370     7765                           as appropriate.
     2371     7766        */
     2372     7767    1   FOD$FSCHK: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

   7767  6 004265   000000 700200 xent  FOD$FSCHK    TSX0  ! X66_AUTO_2
         6 004266   000112 000002                    ZERO    74,2

     2373     7768        /**/
     2374     7769    1         DEV$=FO_Q.DEVHD$;

   7769  6 004267   000002 236000 xsym               LDQ     FO_Q+2
         6 004270   000000 756000 xsym               STQ     FO_DEV$
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:285  

     2375     7770    2           DO WHILE (DEV$ ~= ADDR(NIL));

   7770  6 004271   004362 710000 6                  TRA     s:7796

     2376     7771    2           IF DEV$->FO$DEV.CFIL$ ~= ADDR(NIL)

   7771  6 004272   000000 470400 xsym               LDP0    FO_DEV$
         6 004273   000002 236100                    LDQ     2,,PR0
         6 004274   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 004275   004357 601000 6                  TNZ     NXTDEV
         6 004276   000012 236100                    LDQ     10,,PR0
         6 004277   000001 316007                    CANQ    1,DL
         6 004300   004357 601000 6                  TNZ     NXTDEV

     2377     7772    2           OR DEV$->FO$DEV.FLG.LOCK THEN GOTO NXTDEV;
     2378     7773    2           PRIO=FOPR_P15#;

   7773  6 004301   000022 235007                    LDA     18,DL
         6 004302   200025 755100                    STA     PRIO,,AUTO

     2379     7774    3             DO WHILE (PRIO > FOPR_P0#);

   7774  6 004303   000004 115007                    CMPA    4,DL
         6 004304   004357 602000 6                  TNC     NXTDEV

     2380     7775    3             FIL$=FO_Q.FILHD$(PRIO);

   7775  6 004305   200025 720100                    LXL0    PRIO,,AUTO
         6 004306   000004 236010 xsym               LDQ     FO_Q+4,X0
         6 004307   000000 756000 xsym               STQ     FO_FIL$

     2381     7776    4               DO WHILE (FIL$ ~= ADDR(NIL));

   7776  6 004310   004350 710000 6                  TRA     s:7791

     2382     7777    4               IF FIL$->FO$FIL.CDEV$ ~= ADDR(NIL) THEN GOTO FSCHK0;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:286  

   7777  6 004311   000000 470400 xsym               LDP0    FO_FIL$
         6 004312   000011 236100                    LDQ     9,,PR0
         6 004313   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 004314   004345 601000 6                  TNZ     FSCHK0

     2383     7778    4               CALL MATCHEM11 ALTRET(FSCHK0);

   7778  6 004315   006065 701000 6                  TSX1    MATCHEM11
         6 004316   004345 702000 6                  TSX2    FSCHK0

     2384     7779    4               CALL MATCHDEVR ALTRET(FSCHK0);

   7779  6 004317   005050 701000 6                  TSX1    MATCHDEVR
         6 004320   004345 702000 6                  TSX2    FSCHK0

     2385     7780    4               IF DEV$->FO$DEV.FORM ~= FIL$->FO$FIL.FORM THEN

   7780  6 004321   000000 470400 xsym               LDP0    FO_DEV$
         6 004322   000000 471400 xsym               LDP1    FO_FIL$
         6 004323   040100 106500                    CMPC    fill='040'O
         6 004324   000015 600006                    ADSC9   13,,PR0                  cn=3,n=6
         6 004325   100013 000006                    ADSC9   11,,PR1                  cn=0,n=6
         6 004326   004345 600000 6                  TZE     FSCHK0

     2386     7781    5                 DO;

     2387     7782    5                 OPMSG_RESP.DEVNM=DEV$->FO$DEV.NAME;

   7782  6 004327   040000 100500                    MLR     fill='040'O
         6 004330   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         6 004331   000107 000010 1                  ADSC9   OPMSG_RESP+3             cn=0,n=8

     2388     7783    5                 OPMSG_RESP.FORM=FIL$->FO$FIL.FORM;

   7783  6 004332   040000 100500                    MLR     fill='040'O
         6 004333   100013 000006                    ADSC9   11,,PR1                  cn=0,n=6
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:287  
         6 004334   000111 600010 1                  ADSC9   OPMSG_RESP+5             cn=3,n=8

     2389     7784    5                 OPMSG_RESP.SUBC=FOKR_DCUF#;

   7784  6 004335   014000 236007                    LDQ     6144,DL
         6 004336   000111 552010 1                  STBQ    OPMSG_RESP+5,'10'O

     2390     7785    5                 OPMSG_RESP.CADDR=M_UR;

   7785  6 004337   100000 220003                    LDX0    32768,DU
         6 004340   000104 740000 1                  STX0    OPMSG_RESP

     2391     7786    5                 CALL M$WRITE (OCMSG_RESP);

   7786  6 004341   000330 630400 2                  EPPR0   OCMSG_RESP
         6 004342   040001 713400                    CLIMB   write
         6 004343   401400 401760                    pmme    nvectors=4

     2392     7787    5                 GOTO NXTDEV;

   7787  6 004344   004357 710000 6                  TRA     NXTDEV

   7786  6 004345                       FSCHK0       null
     2393     7788    5                 END;
     2394     7789    4   FSCHK0:     ;
     2395     7790    4               FIL$=FIL$->FO$FIL.LNK$;

   7790  6 004345   000000 470400 xsym               LDP0    FO_FIL$
         6 004346   000000 236100                    LDQ     0,,PR0
         6 004347   000000 756000 xsym               STQ     FO_FIL$

     2396     7791    4               END;

   7791  6 004350   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 004351   004311 601000 6                  TNZ     s:7777

     2397     7792    3             PRIO=PRIO-1;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:288  

   7792  6 004352   200025 235100                    LDA     PRIO,,AUTO
         6 004353   000001 135007                    SBLA    1,DL
         6 004354   200025 755100                    STA     PRIO,,AUTO

     2398     7793    3             END;

   7793  6 004355   000004 115007                    CMPA    4,DL
         6 004356   004305 603000 6                  TRC     s:7775

   7787  6 004357                       NXTDEV       null
     2399     7794    2   NXTDEV: ;
     2400     7795    2           DEV$=DEV$->FO$DEV.LNK$;

   7795  6 004357   000000 470400 xsym               LDP0    FO_DEV$
         6 004360   000000 236100                    LDQ     0,,PR0
         6 004361   000000 756000 xsym               STQ     FO_DEV$

     2401     7796    2           END;

   7796  6 004362   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 004363   004272 601000 6                  TNZ     s:7771

     2402     7797    1         RETURN;

   7797  6 004364   000000 702200 xent               TSX2  ! X66_ARET

     2403     7798        %EJECT;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:289  
     2404     7799        /*
     2405     7800
     2406     7801                             ###    #   #   ####
     2407     7802                            #   #   #   #   #   #
     2408     7803                            #       #   #   #   #
     2409     7804                             ###    #   #   ####
     2410     7805                                #   #   #   #   #
     2411     7806                            #   #   #   #   #   #
     2412     7807                             ###     ###    ####
     2413     7808
     2414     7809
     2415     7810
     2416     7811
     2417     7812            ####     ###    #   #   #####    ###    #   #   #####    ###
     2418     7813            #   #   #   #   #   #     #       #     #   #   #       #   #
     2419     7814            #   #   #   #   #   #     #       #     ##  #   #       #
     2420     7815            ####    #   #   #   #     #       #     # # #   ####     ###
     2421     7816            # #     #   #   #   #     #       #     #  ##   #           #
     2422     7817            #  #    #   #   #   #     #       #     #   #   #       #   #
     2423     7818            #   #    ###     ###      #      ###    #   #   #####    ###
     2424     7819
     2425     7820        */
     2426     7821        /*  Order: SCHED_DEV         Start a device, altret if no symb page
     2427     7822                                     available or M$SYMBIO altrets
     2428     7823                   GETFIL_DEV        Find a file for a device
     2429     7824                   MATCHDEVR         Look for a device we can restrict
     2430     7825                   SET_EXT           Set up 1st file extent for a device
     2431     7826                   REL_ALR           Release device's alignment buffer
     2432     7827                   START_CHKPF       Start printing a checkpointed file
     2433     7828                   SPACE_BACK        Space back 1 line from "here"
     2434     7829                   START_FIRSTEXT    Give file's 1st extents to idle device
     2435     7830                   SBLKS_DEV         Start spacing by blocks
     2436     7831                   END_DEV - FIN_DEV Remove a file from a device
     2437     7832                   QUIT_DEV          To complete a quit sequence on a device
     2438     7833                   BAD_SYMBIO        Do a FOD snap
     2439     7834                   SET_BLKREC        To translate blk#-rec# to starting extent
     2440     7835                   SET_EXTBLNK       Set extent back-link pointer
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:290  
     2441     7836                   MATCHEM           Match a file to an available device
     2442     7837                   MATCHEMR          Match a file to a restricted device
     2443     7838                   LOCK_DEV          Lock a symbiont device
     2444     7839                   SUSP_DEV          Do a suspend request of a symbiond device
     2445     7840                   DEV_EVSCREECH     Cause a snap due to bad state/event
     2446     7841                   CHK_ALG           Check if a device is aligned
     2447     7842                   CHK_AIP           Check if a form alignment is in progress
     2448     7843                   CHK_KSYSID        Verify SYSID on certain device keyins
     2449     7844                   TCONMSG_DEV, BDBCMSG_DEV, FONMSG_DEV, FOFFMSG_DEV
     2450     7845                   REM_DEV           Remove a device entry from device chain
     2451     7846                   MATCHDEV          Match a device to those on device chain
     2452     7847                   AVAIL             Reset LPAVAIL flag on files when a device
     2453     7848                                     connects
     2454     7849                   UNAVAIL           Reset LPAVAIL flag on files when a device
     2455     7850                                     disconnects
     2456     7851        */
     2457     7852        /**************************************
     2458     7853         **************************************
     2459     7854                    SCHED_DEV
     2460     7855         **************************************
     2461     7856         **************************************/
     2462     7857        /*D* NAME:         SCHED_DEV
     2463     7858             PURPOSE:      To start a device, if possible
     2464     7859             DESCRIPTION:  The device is FO_DEV$.  GETFIL_DEV is used to
     2465     7860                           find a file for it, and if successful, we start
     2466     7861                           the device from BOF.  The routine ALTRETs if
     2467     7862                           the device is locked, or no file is found, or
     2468     7863                           if the start fails. */
     2469     7864    1   SCHED_DEV: PROC ALTRET;

   7864  6 004365   200060 741300       SCHED_DEV    STX1  ! ALSTAT+8,,AUTO

     2470     7865        %JLOCK;

   7866  6 004366   000000 054000 xsym               AOS     FO_Q

     2471     7868                                           /*
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:291  
     2472     7869                                           If we're expecting a disconnect on
     2473     7870                                           this device, don't try to send a
     2474     7871                                           file to it.  If we do, we'll end
     2475     7872                                           up with a FOD-278.
     2476     7873                                           */
     2477     7874    2         IF DEV$->FO$DEV.FLG.IDSC

   7874  6 004367   000000 470400 xsym               LDP0    FO_DEV$
         6 004370   000012 236100                    LDQ     10,,PR0
         6 004371   000001 316003                    CANQ    1,DU
         6 004372   004376 600000 6                  TZE     s:7882

     2478     7875    2         THEN
     2479     7876    3           DO;

     2480     7877                %JUNLOCK;

   7878  6 004373   000001 336007                    LCQ     1,DL
         6 004374   000000 056000 xsym               ASQ     FO_Q

     2481     7880    3           RETURN;

   7880  6 004375   000001 702211                    TSX2  ! 1,X1

     2482     7881    3           END;
     2483     7882    2         CALL GETFIL_DEV ALTRET(ALTRT);

   7882  6 004376   004754 701000 6                  TSX1    GETFIL_DEV
         6 004377   004750 702000 6                  TSX2    ALTRT

     2484     7883    2         GOTO SCHDEV0;

   7883  6 004400   004403 710000 6                  TRA     SCHDEV0

     2485     7884    2   START_DEV: ENTRY ALTRET;

   7884  6 004401   200060 741300       START_DEV    STX1  ! ALSTAT+8,,AUTO
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:292  

     2486     7885        /*D* NAME:         START_DEV
     2487     7886             PURPOSE:      To start a device, given a file
     2488     7887             DESCRIPTION:  The device to start is FO_DEV$, the file to use
     2489     7888                           is FO_FIL$ */
     2490     7889
     2491     7890              %JLOCK;

   7891  6 004402   000000 054000 xsym               AOS     FO_Q

   7891  6 004403                       SCHDEV0      null
     2492     7893    2   SCHDEV0:;
     2493     7894                                      /* Get symbiont page segment control block */
     2494     7895    2         CALL FOI$GBUF (FO_SPGSCB,DEV$->FO$DEV.SPG$) ALTRET(ALTRT);

   7895  6 004403   000000 236000 xsym               LDQ     FO_DEV$
         6 004404   000001 036003                    ADLQ    1,DU
         6 004405   000013 235000 7                  LDA     11
         6 004406   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 004407   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 004410   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 004411   000000 701000 xent               TSX1    FOI$GBUF
         6 004412   004750 702000 6                  TSX2    ALTRT

     2495     7896    2         DEVNAME=DEV$->FO$DEV.NAME;

   7896  6 004413   000000 470400 xsym               LDP0    FO_DEV$
         6 004414   040000 100500                    MLR     fill='040'O
         6 004415   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         6 004416   000000 000010 1                  ADSC9   DEVNAME                  cn=0,n=8

     2496     7897    2         START_SYMB.V.ORDER# = FOMO_SOPEN#;

   7897  6 004417   000000 220003                    LDX0    0,DU
         6 004420   000241 740000 1                  STX0    START_SYMB+21

     2497     7898
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:293  
     2498     7899    2         IF DEV$ -> FO$DEV.FLG.MODE = FOMD_GRAPHIC#

   7899  6 004421   000012 236100                    LDQ     10,,PR0
         6 004422   000004 316003                    CANQ    4,DU
         6 004423   004466 600000 6                  TZE     s:7919

     2499     7900    3         THEN DO;

     2500     7901
     2501     7902
     2502     7903    3           CALL M$DEACTIVATE (DEA_FPRG)

   7903  6 004424   000260 630400 2                  EPPR0   DEA_FPRG
         6 004425   500001 713400                    CLIMB   alt,+32769
         6 004426   401400 401760                    pmme    nvectors=4
         6 004427   004431 702000 6                  TSX2    s:7906
         6 004430   004431 710000 6                  TRA     s:7906

     2503     7904    4           WHENALTRETURN DO;

     2504     7905    4             END;

     2505     7906    3           CALL M$ACTIVATE (ACT_FPRG) ALTRET (SCHDEV2);

   7906  6 004431   000240 630400 2                  EPPR0   ACT_FPRG
         6 004432   500000 713400                    CLIMB   alt,+32768
         6 004433   401400 401760                    pmme    nvectors=4
         6 004434   004660 702000 6                  TSX2    SCHDEV2

     2506     7907    3           RESET_PRIVS.V.PRIV# = B$JIT$ -> B$JIT.PRIV.JOB;

   7907  6 004435   000000 470400 xsym               LDP0    B$JIT$
         6 004436   000015 236100                    LDQ     13,,PR0
         6 004437   000712 756000 1                  STQ     RESET_PRIVS+2

     2507     7908    3           CALL M$RPRIV (RESET_PRIVS)

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:294  
   7908  6 004440   000710 630400 1                  EPPR0   RESET_PRIVS
         6 004441   420013 713400                    CLIMB   alt,+8203
         6 004442   400000 401760                    pmme    nvectors=1
         6 004443   004445 702000 6                  TSX2    s:7911
         6 004444   004445 710000 6                  TRA     s:7911

     2508     7909    4           WHENALTRETURN DO;

     2509     7910    4             END;

     2510     7911    3           SYMB_FPRG = FIL$ -> FO$FIL.VLP_FPRG;

   7911  6 004445   000000 470400 xsym               LDP0    FO_FIL$
         6 004446   000000 100500                    MLR     fill='000'O
         6 004447   000024 000104                    ADSC9   20,,PR0                  cn=0,n=68
         6 004450   000656 000104 1                  ADSC9   SYMB_FPRG                cn=0,n=68

     2511     7912    3           SYMB_STA.STATION# = DEVNAME;

   7912  6 004451   000000 237000 1                  LDAQ    DEVNAME
         6 004452   000700 757000 1                  STAQ    SYMB_STA

     2512     7913    3           CALL M$SETFP (START_FPRG) ALTRET (SCHDEV1);

   7913  6 004453   000660 630400 2                  EPPR0   START_FPRG
         6 004454   560021 713400                    CLIMB   alt,+57361
         6 004455   401400 401760                    pmme    nvectors=4
         6 004456   004613 702000 6                  TSX2    SCHDEV1

     2513     7914    3           CALL M$SPRIV (RESET_PRIVS)

   7914  6 004457   000710 630400 1                  EPPR0   RESET_PRIVS
         6 004460   420012 713400                    CLIMB   alt,+8202
         6 004461   400000 401760                    pmme    nvectors=1
         6 004462   004464 702000 6                  TSX2    s:7917
         6 004463   004464 710000 6                  TRA     s:7917

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:295  
     2514     7915    4           WHENALTRETURN DO;

     2515     7916    4             END;

     2516     7917    3           START_SYMB.V.ORDER# = FOMO_LOAD#;

   7917  6 004464   000015 220003                    LDX0    13,DU
         6 004465   000241 740000 1                  STX0    START_SYMB+21

     2517     7918    3           END;

     2518     7919    2         IF DEV$->FO$DEV.FLG.ALGNED = '0'B

   7919  6 004466   000000 470400 xsym               LDP0    FO_DEV$
         6 004467   000012 236100                    LDQ     10,,PR0
         6 004470   004000 316007                    CANQ    2048,DL
         6 004471   004476 600000 6                  TZE     s:7920
         6 004472   000000 471400 xsym               LDP1    FO_FIL$
         6 004473   100015 236100                    LDQ     13,,PR1
         6 004474   000004 316007                    CANQ    4,DL
         6 004475   004502 600000 6                  TZE     s:7923

     2519     7920    2         OR FIL$->FO$FIL.FLG.CHKPTD = '1'B THEN EXTENT='0'B;

   7920  6 004476   000000 235003                    LDA     0,DU
         6 004477   000000 236003                    LDQ     0,DU
         6 004500   000004 757000 1                  STAQ    EXTENT
         6 004501   004504 710000 6                  TRA     s:7924

     2520     7921                                      /* Set up first file extent for device
     2521     7922                                         and set pointer to next one */
     2522     7923    2         ELSE CALL SET_EXT;

   7923  6 004502   005136 701000 6                  TSX1    SET_EXT
         6 004503   000000 011000                    NOP     0

     2523     7924    2         START_SYMB.V.BLKREC='0'B;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:296  

   7924  6 004504   000244 450000 1                  STZ     START_SYMB+24

     2524     7925    2         DEV$->FO$DEV.BR='0'B;

   7925  6 004505   000000 470400 xsym               LDP0    FO_DEV$
         6 004506   000100 100400                    MLR     fill='000'O
         6 004507   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 004510   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4

     2525     7926    2         START_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;

   7926  6 004511   000001 236100                    LDQ     1,,PR0
         6 004512   000221 756000 1                  STQ     START_SYMB+5

     2526     7927                                      /* Get packset index */
     2527     7928    2         START_SYMB.V.SETX#=FIL$->FO$FIL.SETX;

   7928  6 004513   000000 471400 xsym               LDP1    FO_FIL$
         6 004514   100010 720100                    LXL0    8,,PR1
         6 004515   000241 440000 1                  SXL0    START_SYMB+21

     2528     7929    2         CALL M$SYMBIO  (START_SYMB) ALTRET(SCHDEV3);

   7929  6 004516   000214 630400 1                  EPPR0   START_SYMB
         6 004517   570000 713400                    CLIMB   alt,+61440
         6 004520   403400 401760                    pmme    nvectors=8
         6 004521   004667 702000 6                  TSX2    SCHDEV3

     2529     7930    2         DEV$->FO$DEV.STATE=FOS_BUSY#;

   7930  6 004522   000000 470400 xsym               LDP0    FO_DEV$
         6 004523   001000 236007                    LDQ     512,DL
         6 004524   000011 552110                    STBQ    9,'10'O,PR0

     2530     7931                                      /* Set current device and current file */
     2531     7932    2         FIL$->FO$FIL.CDEV$=DEV$;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:297  

   7932  6 004525   000000 236000 xsym               LDQ     FO_DEV$
         6 004526   000000 471400 xsym               LDP1    FO_FIL$
         6 004527   100011 756100                    STQ     9,,PR1

     2532     7933    2         DEV$->FO$DEV.CFIL$=FIL$;

   7933  6 004530   000000 236000 xsym               LDQ     FO_FIL$
         6 004531   000002 756100                    STQ     2,,PR0

     2533     7934                                      /* AEF means align at EOF */
     2534     7935    2         DEV$->FO$DEV.FLG=DEV$->FO$DEV.FLG&(FODF_ALGNED#|FODF_AEF#

   7935  6 004532   000701 236000 2                  LDQ     START_FPRG+17
         6 004533   000702 276000 2                  ORQ     START_FPRG+18
         6 004534   000703 276000 2                  ORQ     START_FPRG+19
         6 004535   000022 276000 xsym               ORQ     B_VECTNIL+18
         6 004536   000012 376100                    ANQ     10,,PR0
         6 004537   000012 756100                    STQ     10,,PR0

     2535     7936    2         |FODF_LOCAL#|FODF_GRAPHIC#);
     2536     7937                                      /* Set spacing direction (1 = forward) */
     2537     7938    2         DEV$->FO$DEV.FLG.DIRECTION='1'B;

   7938  6 004540   000002 236007                    LDQ     2,DL
         6 004541   000012 256100                    ORSQ    10,,PR0

     2538     7939    2         CALL FONMSG_DEV;

   7939  6 004542   006527 701000 6                  TSX1    FONMSG_DEV
         6 004543   000000 011000                    NOP     0

     2539     7940    2         JOB$ = FIL$->FO$FIL.OJOB$;

   7940  6 004544   000000 470400 xsym               LDP0    FO_FIL$
         6 004545   000003 236100                    LDQ     3,,PR0
         6 004546   000000 756000 xsym               STQ     FO_JOB$
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:298  

     2540     7941    2         JOB$->FO$JOB.NFIL_PRINTING=JOB$->FO$JOB.NFIL_PRINTING+1;

   7941  6 004547   000000 471400 xsym               LDP1    FO_JOB$
         6 004550   100003 236100                    LDQ     3,,PR1
         6 004551   000022 772000                    QRL     18
         6 004552   003777 376007                    ANQ     2047,DL
         6 004553   000001 036007                    ADLQ    1,DL
         6 004554   000022 736000                    QLS     18
         6 004555   100003 676100                    ERQ     3,,PR1
         6 004556   003777 376003                    ANQ     2047,DU
         6 004557   100003 656100                    ERSQ    3,,PR1

     2541     7942              %JUNLOCK;

   7943  6 004560   000001 336007                    LCQ     1,DL
         6 004561   000000 056000 xsym               ASQ     FO_Q

     2542     7945                                      /* If align is to be done on every file,
     2543     7946                                         do a keyin (simulation) to handle it */
     2544     7947    2         IF DEV$->FO$DEV.FLG.ALGNED = '0'B THEN

   7947  6 004562   000000 473400 xsym               LDP3    FO_DEV$
         6 004563   300012 236100                    LDQ     10,,PR3
         6 004564   004000 316007                    CANQ    2048,DL
         6 004565   004604 601000 6                  TNZ     s:7952

     2545     7948    3           DO;

     2546     7949    3           ALKEYIN.DEVNM=DEV$->FO$DEV.NAME;

   7949  6 004566   040000 100500                    MLR     fill='040'O
         6 004567   300005 000010                    ADSC9   5,,PR3                   cn=0,n=8
         6 004570   000055 000010 1                  ADSC9   ALKEYIN+1                cn=0,n=8

     2547     7950    3           CALL FOD$EVENT (FODE_KEYN#,ADDR(ALKEYIN));

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:299  
   7950  6 004571   000027 236000 7                  LDQ     23
         6 004572   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 004573   200106 634500                    EPPR4   @FO$FIL+2,,AUTO
         6 004574   200111 454500                    STP4    @FO$FIL+5,,AUTO
         6 004575   000030 236000 7                  LDQ     24
         6 004576   200110 756100                    STQ     @FO$FIL+4,,AUTO
         6 004577   200110 630500                    EPPR0   @FO$FIL+4,,AUTO
         6 004600   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 004601   000003 701000 6                  TSX1    s:5888
         6 004602   000000 011000                    NOP     0

     2548     7951    3           END;

   7951  6 004603   004611 710000 6                  TRA     s:7953

     2549     7952    2         ELSE IF FIL$->FO$FIL.FLG.CHKPTD = '1'B THEN CALL START_CHKPF;

   7952  6 004604   000015 236100                    LDQ     13,,PR0
         6 004605   000004 316007                    CANQ    4,DL
         6 004606   004611 600000 6                  TZE     s:7953

   7952  6 004607   005177 701000 6                  TSX1    START_CHKPF
         6 004610   000000 011000                    NOP     0

     2550     7953    2         RETURN;

   7953  6 004611   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 004612   000001 702211                    TSX2  ! 1,X1

   7953  6 004613                       SCHDEV1      null
     2551     7954    2   SCHDEV1:;
     2552     7955    2         CALL M$SPRIV (RESET_PRIVS)

   7955  6 004613   000710 630400 1                  EPPR0   RESET_PRIVS
         6 004614   420012 713400                    CLIMB   alt,+8202
         6 004615   400000 401760                    pmme    nvectors=1
         6 004616   004620 702000 6                  TSX2    s:7958
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:300  
         6 004617   004620 710000 6                  TRA     s:7958

     2553     7956    3         WHENALTRETURN DO;

     2554     7957    3           END;

     2555     7958    2         CALL M$DEACTIVATE (DEA_FPRG)

   7958  6 004620   000260 630400 2                  EPPR0   DEA_FPRG
         6 004621   500001 713400                    CLIMB   alt,+32769
         6 004622   401400 401760                    pmme    nvectors=4
         6 004623   004625 702000 6                  TSX2    s:7961
         6 004624   004625 710000 6                  TRA     s:7961

     2556     7959    3         WHENALTRETURN DO;

     2557     7960    3           END;

     2558     7961    2         OPMSG_FPERR.DEVNM = DEVNAME;

   7961  6 004625   000000 237000 1                  LDAQ    DEVNAME
         6 004626   000167 755000 1                  STA     OPMSG_FPERR+3
         6 004627   000170 756000 1                  STQ     OPMSG_FPERR+4

     2559     7962    2         OPMSG_FPERR.CADDR = M_UR;

   7962  6 004630   100000 220003                    LDX0    32768,DU
         6 004631   000164 740000 1                  STX0    OPMSG_FPERR

     2560     7963    2         OPMSG_FPERR.SUBC = 1;

   7963  6 004632   000001 236003                    LDQ     1,DU
         6 004633   000172 552020 1                  STBQ    OPMSG_FPERR+6,'20'O

     2561     7964    2         OPMSG_FPERR.ERRCODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   7964  6 004634   000000 470400 xsym               LDP0    B$TCB$
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:301  
         6 004635   000000 471500                    LDP1    0,,PR0
         6 004636   000000 100500                    MLR     fill='000'O
         6 004637   100102 000004                    ADSC9   66,,PR1                  cn=0,n=4
         6 004640   000172 400004 1                  ADSC9   OPMSG_FPERR+6            cn=2,n=4

     2562     7965    2         OPMSG_FPERR.LDBYPRO = SYMB_FPRG.LDBYPRO#;

   7965  6 004641   000656 236000 1                  LDQ     SYMB_FPRG
         6 004642   000022 772000                    QRL     18
         6 004643   000173 552010 1                  STBQ    OPMSG_FPERR+7,'10'O

     2563     7966    2         OPMSG_FPERR.NAME = SYMB_FPRG.NAME.C#;

   7966  6 004644   040000 100400                    MLR     fill='040'O
         6 004645   000660 200037 1                  ADSC9   SYMB_FPRG+2              cn=1,n=31
         6 004646   000175 600037 1                  ADSC9   OPMSG_FPERR+9            cn=3,n=31

     2564     7967    2         OPMSG_FPERR.NL = SYMB_FPRG.NAME.L#;

   7967  6 004647   000660 236000 1                  LDQ     SYMB_FPRG+2
         6 004650   000172 552040 1                  STBQ    OPMSG_FPERR+6,'40'O

     2565     7968    2         OPMSG_FPERR.ACCT = SYMB_FPRG.ACCT#;

   7968  6 004651   040000 100400                    MLR     fill='040'O
         6 004652   000670 000010 1                  ADSC9   SYMB_FPRG+10             cn=0,n=8
         6 004653   000173 600010 1                  ADSC9   OPMSG_FPERR+7            cn=3,n=8

     2566     7969    2         CALL M$WRITE (OCMSG_FPERR);

   7969  6 004654   000440 630400 2                  EPPR0   OCMSG_FPERR
         6 004655   040001 713400                    CLIMB   write
         6 004656   401400 401760                    pmme    nvectors=4

     2567     7970    2         GOTO SCHDEV4;

   7970  6 004657   004713 710000 6                  TRA     SCHDEV4
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:302  

   7968  6 004660                       SCHDEV2      null
     2568     7971    2   SCHDEV2:;
     2569     7972    2         CALL M$DEACTIVATE (DEA_FPRG)

   7972  6 004660   000260 630400 2                  EPPR0   DEA_FPRG
         6 004661   500001 713400                    CLIMB   alt,+32769
         6 004662   401400 401760                    pmme    nvectors=4
         6 004663   004665 702000 6                  TSX2    s:7975
         6 004664   004665 710000 6                  TRA     s:7975

     2570     7973    3         WHENALTRETURN DO;

     2571     7974    3           END;

     2572     7975    2         CALL LOCK_DEV;

   7975  6 004665   006373 701000 6                  TSX1    LOCK_DEV
         6 004666   000000 011000                    NOP     0

   7968  6 004667                       SCHDEV3      null
     2573     7976    2   SCHDEV3:;
     2574     7977    2         OPMSG_KERR.ERRCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR;

   7977  6 004667   000000 470400 xsym               LDP0    B$TCB$
         6 004670   000000 471500                    LDP1    0,,PR0
         6 004671   000000 100500                    MLR     fill='000'O
         6 004672   100102 000004                    ADSC9   66,,PR1                  cn=0,n=4
         6 004673   000131 600004 1                  ADSC9   OPMSG_KERR+5             cn=3,n=4

     2575     7978    2         IF B$ERRCODE=%E$NSBLK

   7978  6 004674   000000 471500                    LDP1    0,,PR0
         6 004675   100102 236100                    LDQ     66,,PR1
         6 004676   377770 376007                    ANQ     131064,DL
         6 004677   021170 116007                    CMPQ    8824,DL
         6 004700   004713 600000 6                  TZE     SCHDEV4
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:303  
         6 004701   015340 116007                    CMPQ    6880,DL
         6 004702   004713 600000 6                  TZE     SCHDEV4
         6 004703   021200 116007                    CMPQ    8832,DL
         6 004704   004713 600000 6                  TZE     SCHDEV4
         6 004705   021440 116007                    CMPQ    8992,DL
         6 004706   004713 600000 6                  TZE     SCHDEV4
         6 004707   023240 116007                    CMPQ    9888,DL
         6 004710   004713 600000 6                  TZE     SCHDEV4

     2576     7979    2         OR B$ERRCODE=%E$NOSTA
     2577     7980    2         OR B$ERRCODE=%E$NVMEM
     2578     7981    2         OR B$ERRCODE=%E$FPABRT
     2579     7982    2         OR B$ERRCODE=%E$MODE_MEMLIMIT
     2580     7983    2         THEN GOTO SCHDEV4;
     2581     7984    2         CALL BAD_SYMBIO;

   7984  6 004711   005645 701000 6                  TSX1    BAD_SYMBIO
         6 004712   000000 011000                    NOP     0

   7981  6 004713                       SCHDEV4      null
     2582     7985    2   SCHDEV4:;
     2583     7986    2         IF B$ERRCODE = %E$FPABRT

   7986  6 004713   000000 470400 xsym               LDP0    B$TCB$
         6 004714   000000 471500                    LDP1    0,,PR0
         6 004715   100102 236100                    LDQ     66,,PR1
         6 004716   377770 376007                    ANQ     131064,DL
         6 004717   021440 116007                    CMPQ    8992,DL
         6 004720   004735 601000 6                  TNZ     s:7991

     2584     7987    3         THEN DO;

     2585     7988    3           CALL FOF$FITUPD (FOFU_PRIO0#,,0);

   7988  6 004721   000001 236000 7                  LDQ     1
         6 004722   200110 756100                    STQ     @FO$FIL+4,,AUTO
         6 004723   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:304  
         6 004724   000031 235000 7                  LDA     25
         6 004725   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 004726   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 004727   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 004730   000000 701000 xent               TSX1    FOF$FITUPD
         6 004731   000000 011000                    NOP     0

     2586     7989    3           CALL FOF$REPRIO;

   7989  6 004732   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 004733   000000 701000 xent               TSX1    FOF$REPRIO
         6 004734   000000 011000                    NOP     0

     2587     7990    3           END;

     2588     7991    2         CALL FOI$RBUF (FO_SPGSCB,DEV$->FO$DEV.SPG$);

   7991  6 004735   000000 236000 xsym               LDQ     FO_DEV$
         6 004736   000001 036003                    ADLQ    1,DU
         6 004737   000013 235000 7                  LDA     11
         6 004740   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 004741   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 004742   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 004743   000000 701000 xent               TSX1    FOI$RBUF
         6 004744   000000 011000                    NOP     0

     2589     7992    2         DEV$->FO$DEV.SPG$=ADDR(NIL);

   7992  6 004745   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 004746   000000 470400 xsym               LDP0    FO_DEV$
         6 004747   000001 756100                    STQ     1,,PR0

   7992  6 004750                       ALTRT        null
     2590     7993    2   ALTRT:;
     2591     7994              %JUNLOCK;

   7995  6 004750   000001 336007                    LCQ     1,DL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:305  
         6 004751   000000 056000 xsym               ASQ     FO_Q

     2592     7997    2         ALTRETURN;

   7997  6 004752   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 004753   000000 702211                    TSX2  ! 0,X1

     2593     7998    2   END SCHED_DEV;
     2594     7999        /**************************************
     2595     8000         **************************************
     2596     8001                    GETFIL_DEV
     2597     8002         **************************************
     2598     8003         **************************************/
     2599     8004        /*D* NAME:         GETFIL_DEV
     2600     8005             PURPOSE:      To find a file for a device
     2601     8006             DESCRIPTION:  The desired device is FO_DEV$.  The routine
     2602     8007                           searches the file chains (from prio 15 to 1)
     2603     8008                           to find a file we can print.  Commode files
     2604     8009                           which are still being built are skipped unless
     2605     8010                           they are the only choice.  ALTRET if no file
     2606     8011                           found, else FO_FIL$ points to file. */
     2607     8012    1   GETFIL_DEV: PROC ALTRET;

   8012  6 004754   200062 741300       GETFIL_DEV   STX1  ! SAV$+1,,AUTO

     2608     8013
     2609     8014    2         IF DEV$->FO$DEV.FORM = ' '

   8014  6 004755   000000 470400 xsym               LDP0    FO_DEV$
         6 004756   040000 106500                    CMPC    fill='040'O
         6 004757   000015 600006                    ADSC9   13,,PR0                  cn=3,n=6
         6 004760   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         6 004761   004765 600000 6                  TZE     s:8015
         6 004762   000012 236100                    LDQ     10,,PR0
         6 004763   000001 316007                    CANQ    1,DL
         6 004764   004766 600000 6                  TZE     s:8016

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:306  
     2610     8015    2         OR DEV$->FO$DEV.FLG.LOCK THEN ALTRETURN;

   8015  6 004765   000000 702211                    TSX2  ! 0,X1

     2611     8016    2         SAVFIL$ = ADDR(NIL);

   8016  6 004766   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 004767   200032 756100                    STQ     SAVFIL$,,AUTO

     2612     8017    2         PRIO=FOPR_P15#;

   8017  6 004770   000022 235007                    LDA     18,DL
         6 004771   200025 755100                    STA     PRIO,,AUTO

     2613     8018        /* RUN THE FILE PRIO CHAINS */
     2614     8019    3           DO WHILE (PRIO > FOPR_P0#);

   8019  6 004772   000004 115007                    CMPA    4,DL
         6 004773   005040 602000 6                  TNC     s:8034

     2615     8020    3           FIL$=FO_Q.FILHD$(PRIO);

   8020  6 004774   200025 720100                    LXL0    PRIO,,AUTO
         6 004775   000004 236010 xsym               LDQ     FO_Q+4,X0
         6 004776   000000 756000 xsym               STQ     FO_FIL$

     2616     8021    4             DO WHILE (FIL$~=ADDR(NIL));

   8021  6 004777   005031 710000 6                  TRA     s:8031

     2617     8022    4             IF FIL$->FO$FIL.CDEV$ = ADDR(NIL) THEN

   8022  6 005000   000000 470400 xsym               LDP0    FO_FIL$
         6 005001   000011 236100                    LDQ     9,,PR0
         6 005002   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 005003   005026 601000 6                  TNZ     SCHDEV1

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:307  
     2618     8023    5               DO;

     2619     8024    5               CALL MATCHEM1 ALTRET(SCHDEV1); /* GOOD FILE FOR THIS DEV? */

   8024  6 005004   006054 701000 6                  TSX1    MATCHEM1
         6 005005   005026 702000 6                  TSX2    SCHDEV1

     2620     8025    5               CALL MATCHDEVR ALTRET(SCHDEV1);

   8025  6 005006   005050 701000 6                  TSX1    MATCHDEVR
         6 005007   005026 702000 6                  TSX2    SCHDEV1

     2621     8026    5               IF FIL$->FO$FIL.FLG.GLC OR PRIO = FOPR_P15# THEN RETURN;

   8026  6 005010   000000 470400 xsym               LDP0    FO_FIL$
         6 005011   000015 236100                    LDQ     13,,PR0
         6 005012   000100 316007                    CANQ    64,DL
         6 005013   005017 601000 6                  TNZ     s:8026+7
         6 005014   200025 235100                    LDA     PRIO,,AUTO
         6 005015   000022 115007                    CMPA    18,DL
         6 005016   005021 601000 6                  TNZ     s:8027

   8026  6 005017   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 005020   000001 702211                    TSX2  ! 1,X1

     2622     8027    5               IF SAVFIL$ = ADDR(NIL) THEN SAVFIL$=FIL$;

   8027  6 005021   200032 236100                    LDQ     SAVFIL$,,AUTO
         6 005022   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 005023   005026 601000 6                  TNZ     SCHDEV1

   8027  6 005024   000000 236000 xsym               LDQ     FO_FIL$
         6 005025   200032 756100                    STQ     SAVFIL$,,AUTO

     2623     8028    5               END;

   8022  6 005026                       SCHDEV1      null
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:308  
     2624     8029    4   SCHDEV1:  ;
     2625     8030    4             FIL$=FIL$->FO$FIL.LNK$;

   8030  6 005026   000000 470400 xsym               LDP0    FO_FIL$
         6 005027   000000 236100                    LDQ     0,,PR0
         6 005030   000000 756000 xsym               STQ     FO_FIL$

     2626     8031    4             END;

   8031  6 005031   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 005032   005000 601000 6                  TNZ     s:8022

     2627     8032    3           PRIO=PRIO-1;

   8032  6 005033   200025 235100                    LDA     PRIO,,AUTO
         6 005034   000001 135007                    SBLA    1,DL
         6 005035   200025 755100                    STA     PRIO,,AUTO

     2628     8033    3           END;

   8033  6 005036   000004 115007                    CMPA    4,DL
         6 005037   004774 603000 6                  TRC     s:8020

     2629     8034    2         IF SAVFIL$ = ADDR(NIL) THEN ALTRETURN;

   8034  6 005040   200032 236100                    LDQ     SAVFIL$,,AUTO
         6 005041   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 005042   005045 601000 6                  TNZ     s:8035

   8034  6 005043   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 005044   000000 702211                    TSX2  ! 0,X1

     2630     8035    2         FIL$ = SAVFIL$;

   8035  6 005045   000000 756000 xsym               STQ     FO_FIL$

     2631     8036    2         RETURN;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:309  

   8036  6 005046   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 005047   000001 702211                    TSX2  ! 1,X1

     2632     8037    2   END GETFIL_DEV;
     2633     8038        /**/
     2634     8039        /*D* NAME:         MATCHDEVR
     2635     8040             PURPOSE:      To find a restricted device which preempts
     2636     8041                           this one
     2637     8042             DESCRIPTION:  Devices are only preempted if they are unrestricted.
     2638     8043                           Thus we RETURN if DEV$ is a restricted device.  Else
     2639     8044                           the chain of devices is searched for one which
     2640     8045                           has the following relationship to the device
     2641     8046                           pointed to by DEV$:
     2642     8047
     2643     8048                           o its TNAME is the same
     2644     8049                           o its TYP   is the same
     2645     8050                           o its ATTRs allow it to print the file FIL$
     2646     8051                           o it is a restricted device
     2647     8052                           o the file pointed to by FIL$ has an account
     2648     8053                             falling under the device's restrict list.
     2649     8054
     2650     8055
     2651     8056                           If such a device is found, we ALTRET, else return.
     2652     8057                           Thus we are looking for a device whose restrict
     2653     8058                           account should prevent us from printing FIL$ on
     2654     8059                           DEV$.
     2655     8060        */
     2656     8061    1   MATCHDEVR: PROC ALTRET;

   8061  6 005050   200064 741300       MATCHDEVR    STX1  ! SAV$+3,,AUTO

     2657     8062        /**/
     2658     8063    2   DCL P$ PTR;
     2659     8064        /**/
     2660     8065    2         IF DEV$->FO$DEV.RACCTL ~= 0

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:310  
   8065  6 005051   000000 470400 xsym               LDP0    FO_DEV$
         6 005052   000014 236100                    LDQ     12,,PR0
         6 005053   777000 316007                    CANQ    -512,DL
         6 005054   005056 600000 6                  TZE     s:8068

     2661     8066    2         THEN
     2662     8067    2          RETURN;

   8067  6 005055   000001 702211                    TSX2  ! 1,X1

     2663     8068    2         P$=FO_Q.DEVHD$;

   8068  6 005056   000002 236000 xsym               LDQ     FO_Q+2
         6 005057   200065 756100                    STQ     P$,,AUTO

     2664     8069    3           DO WHILE (P$ ~= ADDR(NIL));

   8069  6 005060   005132 710000 6                  TRA     s:8086

     2665     8070    3           IF P$ ~= DEV$ THEN

   8070  6 005061   200065 236100                    LDQ     P$,,AUTO
         6 005062   000000 116000 xsym               CMPQ    FO_DEV$
         6 005063   005127 600000 6                  TZE     NXT

     2666     8071    3            IF  (P$->FO$DEV.NATTR & FIL$->FO$FIL.ATTR) = '0'B

   8071  6 005064   200065 470500                    LDP0    P$,,AUTO
         6 005065   000011 220100                    LDX0    9,,PR0
         6 005066   000000 471400 xsym               LDP1    FO_FIL$
         6 005067   100010 360100                    ANX0    8,,PR1
         6 005070   005127 601000 6                  TNZ     NXT
         6 005071   000005 220100                    LDX0    5,,PR0
         6 005072   000000 473400 xsym               LDP3    FO_DEV$
         6 005073   300005 100100                    CMPX0   5,,PR3
         6 005074   005127 601000 6                  TNZ     NXT
         6 005075   000014 236100                    LDQ     12,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:311  
         6 005076   777000 316007                    CANQ    -512,DL
         6 005077   005102 601000 6                  TNZ     s:8076
         6 005100   000777 316007                    CANQ    511,DL
         6 005101   005127 600000 6                  TZE     NXT

     2667     8072    3            AND P$->FO$DEV.NAMER.TYP = DEV$->FO$DEV.NAMER.TYP
     2668     8073    3            AND (P$->FO$DEV.RACCTL ~= 0 OR P$->FO$DEV.RWSNL ~= 0)
     2669     8074    3            THEN
     2670     8075    4              DO;

     2671     8076    4              CALL MATCHEMR (P$->FO$DEV,FIL$->FO$FIL) ALTRET(NXT);

   8076  6 005102   000000 236000 xsym               LDQ     FO_FIL$
         6 005103   200070 756100                    STQ     @FO$DEV+1,,AUTO
         6 005104   200065 236100                    LDQ     P$,,AUTO
         6 005105   200067 756100                    STQ     P$+2,,AUTO
         6 005106   006131 701000 6                  TSX1    MATCHEMR
         6 005107   005127 702000 6                  TSX2    NXT

     2672     8077    4              IF P$ -> FO$DEV.RACCTL ~= 0

   8077  6 005110   200065 470500                    LDP0    P$,,AUTO
         6 005111   000014 236100                    LDQ     12,,PR0
         6 005112   777000 316007                    CANQ    -512,DL
         6 005113   005116 600000 6                  TZE     s:8080

     2673     8078    4              THEN
     2674     8079    4               ALTRETURN;        /* This file must print on RACCT dev */

   8079  6 005114   200064 221300                    LDX1  ! SAV$+3,,AUTO
         6 005115   000000 702211                    TSX2  ! 0,X1

     2675     8080    4              IF DEV$ -> FO$DEV.RWSNL = 0

   8080  6 005116   000000 471400 xsym               LDP1    FO_DEV$
         6 005117   100014 236100                    LDQ     12,,PR1
         6 005120   000777 316007                    CANQ    511,DL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:312  
         6 005121   005127 601000 6                  TNZ     NXT
         6 005122   000014 236100                    LDQ     12,,PR0
         6 005123   000777 316007                    CANQ    511,DL
         6 005124   005127 600000 6                  TZE     NXT

     2676     8081    4              AND P$ -> FO$DEV.RWSNL ~= 0
     2677     8082    4              THEN
     2678     8083    4               ALTRETURN;         /* This file must print on RWSN dev */

   8083  6 005125   200064 221300                    LDX1  ! SAV$+3,,AUTO
         6 005126   000000 702211                    TSX2  ! 0,X1

     2679     8084    4              END;
     2680     8085    3   NXT:    P$=P$->FO$DEV.LNK$;

   8085  6 005127   200065 470500       NXT          LDP0    P$,,AUTO
         6 005130   000000 236100                    LDQ     0,,PR0
         6 005131   200065 756100                    STQ     P$,,AUTO

     2681     8086    3           END;

   8086  6 005132   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 005133   005061 601000 6                  TNZ     s:8070

     2682     8087    2         RETURN;

   8087  6 005134   200064 221300                    LDX1  ! SAV$+3,,AUTO
         6 005135   000001 702211                    TSX2  ! 1,X1

     2683     8088    2   END MATCHDEVR;
     2684     8089        /**************************************
     2685     8090         **************************************
     2686     8091                    SET_EXT
     2687     8092         **************************************
     2688     8093         **************************************/
     2689     8094        /*D* NAME:         SET_EXT
     2690     8095             PURPOSE:      To set up the first extent for starting a dev
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:313  
     2691     8096             DESCRIPTION:  FO_FIL$ points to the file, whose first extent
     2692     8097                           is shoved into EXTENT, and whose NXTEXT$ is set
     2693     8098                           to point to the second extent. */
     2694     8099    1   SET_EXT: PROC;

   8099  6 005136   200062 741300       SET_EXT      STX1  ! SAV$+1,,AUTO

     2695     8100    2         EXT$=FIL$->FO$FIL.EXT$;

   8100  6 005137   000000 470400 xsym               LDP0    FO_FIL$
         6 005140   000002 236100                    LDQ     2,,PR0
         6 005141   200045 756100                    STQ     EXT$,,AUTO

     2696     8101    2         EXTENT.GRANS#=EXT$->FO$EXT.GRANS;

   8101  6 005142   200045 471500                    LDP1    EXT$,,AUTO
         6 005143   100001 236100                    LDQ     1,,PR1
         6 005144   000004 552040 1                  STBQ    EXTENT,'40'O

     2697     8102    2         EXTENT.DAD#=EXT$->FO$EXT.DAD;

   8102  6 005145   100001 236100                    LDQ     1,,PR1
         6 005146   000004 552034 1                  STBQ    EXTENT,'34'O

     2698     8103    2         EXTENT.STAMP=EXT$->FO$EXT.STAMP;

   8103  6 005147   100002 236100                    LDQ     2,,PR1
         6 005150   000005 756000 1                  STQ     EXTENT+1

     2699     8104    2         FIL$->FO$FIL.NXTEXT$=EXT$->FO$EXT.LNK$;

   8104  6 005151   100000 236100                    LDQ     0,,PR1
         6 005152   000001 756100                    STQ     1,,PR0

     2700     8105    2         RETURN;

   8105  6 005153   200062 221300                    LDX1  ! SAV$+1,,AUTO
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:314  
         6 005154   000001 702211                    TSX2  ! 1,X1

     2701     8106    2   END SET_EXT;
     2702     8107        /**************************************
     2703     8108         **************************************
     2704     8109                    REL_ALR
     2705     8110         **************************************
     2706     8111         **************************************/
     2707     8112        /*D* NAME:         REL_ALR
     2708     8113             PURPOSE:      To release a device's alignment buffer. */
     2709     8114    1   REL_ALR: PROC;

   8114  6 005155   200062 741300       REL_ALR      STX1  ! SAV$+1,,AUTO

     2710     8115    2         IF DEV$->FO$DEV.ALR$ ~= ADDR(NIL) THEN

   8115  6 005156   000000 470400 xsym               LDP0    FO_DEV$
         6 005157   000003 236100                    LDQ     3,,PR0
         6 005160   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 005161   005172 600000 6                  TZE     s:8117

     2711     8116    2          CALL FOI$RBUF (FO_FFRSCB,DEV$->FO$DEV.ALR$);

   8116  6 005162   000000 236000 xsym               LDQ     FO_DEV$
         6 005163   000003 036003                    ADLQ    3,DU
         6 005164   000010 235000 7                  LDA     8
         6 005165   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 005166   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 005167   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 005170   000000 701000 xent               TSX1    FOI$RBUF
         6 005171   000000 011000                    NOP     0

     2712     8117    2         DEV$->FO$DEV.ALR$=ADDR(NIL);

   8117  6 005172   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 005173   000000 470400 xsym               LDP0    FO_DEV$
         6 005174   000003 756100                    STQ     3,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:315  

     2713     8118    2         RETURN;

   8118  6 005175   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 005176   000001 702211                    TSX2  ! 1,X1

     2714     8119    2   END REL_ALR;
     2715     8120        /**************************************
     2716     8121         **************************************
     2717     8122                    START_CHKPF
     2718     8123         **************************************
     2719     8124         **************************************/
     2720     8125        /*D* NAME:         START_CHKPF
     2721     8126             PURPOSE:      To start printing a checkpointed file
     2722     8127             DESCRIPTION:  Called after the device has been started, if
     2723     8128                           the device was aligned, or after alignment has
     2724     8129                           been completed.  If the device needs no checkpoint
     2725     8130                           banner, then set the saved BR, and space -1.
     2726     8131                           Otherwise, write the checkpoint banner
     2727     8132                           and wait for a token. */
     2728     8133    1   START_CHKPF: PROC ALTRET;

   8133  6 005177   200062 741300       START_CHKPF  STX1  ! SAV$+1,,AUTO

     2729     8134    2         IF DEV$->FO$DEV.FLG.CBD = '0'B THEN

   8134  6 005200   000000 470400 xsym               LDP0    FO_DEV$
         6 005201   000012 236100                    LDQ     10,,PR0
         6 005202   020000 316007                    CANQ    8192,DL
         6 005203   005272 601000 6                  TNZ     s:8162

     2730     8135    3           DO;

     2731     8136                           /* ONLY IF CHK BANNER NOT ALREADY WRITTEN:
     2732     8137                              WE CAN END UP HERE WITH FLAG SET AFTER
     2733     8138                              AN ALIGN COMPLETES. */
     2734     8139    3           IF DEV$->FO$DEV.NAMER.TYP = 'LP'
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:316  

   8139  6 005204   000005 220100                    LDX0    5,,PR0
         6 005205   000676 100000 2                  CMPX0   START_FPRG+14
         6 005206   005211 600000 6                  TZE     s:8142
         6 005207   000677 100000 2                  CMPX0   START_FPRG+15
         6 005210   005260 601000 6                  TNZ     s:8157

     2735     8140    3           OR DEV$->FO$DEV.NAMER.TYP = 'CP' THEN
     2736     8141    4             DO;

     2737     8142    4             WCB_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;

   8142  6 005211   000001 236100                    LDQ     1,,PR0
         6 005212   000447 756000 1                  STQ     WCB_SYMB+5

     2738     8143    4             WCB_SYMB.V.ACK#='1'B;

   8143  6 005213   000004 236007                    LDQ     4,DL
         6 005214   000470 256000 1                  ORSQ    WCB_SYMB+22

     2739     8144    4             I=FIL$->FO$FIL.SYSID;

   8144  6 005215   000000 471400 xsym               LDP1    FO_FIL$
         6 005216   100012 236100                    LDQ     10,,PR1
         6 005217   000022 772000                    QRL     18
         6 005220   200005 756100                    STQ     I,,AUTO

     2740     8145    4             CALL BINCHAR(CHKPREC.SYSID,I);

   8145  6 005221   000000 235003                    LDA     0,DU
         6 005222   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 005223   000000 301500                    BTD
         6 005224   200106 000010                    NDSC9   @FO$FIL+2,,AUTO          cn=0,s=lsgnf,sf=0,n=8
         6 005225   000016 430006 1                  NDSC9   CHKPREC+8                cn=2,s=nosgn,sf=0,n=6

     2741     8146    4             WCB_REC.RECL#=LENGTHC(CHKPREC);

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:317  
   8146  6 005226   000132 236007                    LDQ     90,DL
         6 005227   000500 552004 1                  STBQ    WCB_REC,'04'O

     2742     8147    4             WCB_REC.REC#=CHKPRECR;

   8147  6 005230   040000 100400                    MLR     fill='040'O
         6 005231   000006 000132 1                  ADSC9   CHKPREC                  cn=0,n=90
         6 005232   000501 000214 1                  ADSC9   WCB_REC+1                cn=0,n=140

     2743     8148    4             IF DEV$->FO$DEV.FLEN ~= 0 THEN

   8148  6 005233   000014 220100                    LDX0    12,,PR0
         6 005234   005241 600000 6                  TZE     s:8150

     2744     8149    4              WCB_REC.REPEATS#=DEV$->FO$DEV.FLEN;

   8149  6 005235   000014 236100                    LDQ     12,,PR0
         6 005236   000011 772000                    QRL     9
         6 005237   000500 552010 1                  STBQ    WCB_REC,'10'O
         6 005240   005243 710000 6                  TRA     s:8151

     2745     8150    4             ELSE WCB_REC.REPEATS#=4;

   8150  6 005241   004000 236007                    LDQ     2048,DL
         6 005242   000500 552010 1                  STBQ    WCB_REC,'10'O

     2746     8151    4             CALL M$SYMBIO (WCB_SYMB) ALTRET(A1);

   8151  6 005243   000442 630400 1                  EPPR0   WCB_SYMB
         6 005244   570000 713400                    CLIMB   alt,+61440
         6 005245   403400 401760                    pmme    nvectors=8
         6 005246   005274 702000 6                  TSX2    A1

     2747     8152    4             DEV$->FO$DEV.TOKERSN=FOTR_CHKPB#;

   8152  6 005247   000000 470400 xsym               LDP0    FO_DEV$
         6 005250   004000 236003                    LDQ     2048,DU
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:318  
         6 005251   000015 552140                    STBQ    13,'40'O,PR0

     2748     8153    4             DEV$->FO$DEV.STATE=FOS_BUSY#;

   8153  6 005252   001000 236007                    LDQ     512,DL
         6 005253   000011 552110                    STBQ    9,'10'O,PR0

     2749     8154    4             DEV$->FO$DEV.FLG.ACKEXP='1'B;

   8154  6 005254   100000 236007                    LDQ     32768,DL
         6 005255   000012 256100                    ORSQ    10,,PR0

     2750     8155    4             RETURN;

   8155  6 005256   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 005257   000001 702211                    TSX2  ! 1,X1

     2751     8156    4             END;
     2752     8157    3           DEV$->FO$DEV.FLG.CBD='1'B;

   8157  6 005260   020000 236007                    LDQ     8192,DL
         6 005261   000012 256100                    ORSQ    10,,PR0

     2753     8158    3           DEV$->FO$DEV.BR=FIL$->FO$FIL.CHKPBR;

   8158  6 005262   000000 471400 xsym               LDP1    FO_FIL$
         6 005263   000100 100500                    MLR     fill='000'O
         6 005264   100017 000004                    ADSC9   15,,PR1                  cn=0,n=4
         6 005265   000017 200004                    ADSC9   15,,PR0                  cn=1,n=4

     2754     8159    3           DEV$->FO$DEV.FLG.SEND_VFU='1'B;

   8159  6 005266   400000 236007                    LDQ     -131072,DL
         6 005267   000012 256100                    ORSQ    10,,PR0

     2755     8160    3           CALL SPACE_BACK;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:319  
   8160  6 005270   005306 701000 6                  TSX1    SPACE_BACK
         6 005271   000000 011000                    NOP     0

     2756     8161    3           END;

     2757     8162    2         RETURN;

   8162  6 005272   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 005273   000001 702211                    TSX2  ! 1,X1

   8157  6 005274                       A1           null
     2758     8163    2   A1:   ;
     2759     8164    2         IF B$ERRCODE ~= %E$NOSTA THEN CALL BAD_SYMBIO;

   8164  6 005274   000000 470400 xsym               LDP0    B$TCB$
         6 005275   000000 471500                    LDP1    0,,PR0
         6 005276   100102 236100                    LDQ     66,,PR1
         6 005277   377770 376007                    ANQ     131064,DL
         6 005300   015340 116007                    CMPQ    6880,DL
         6 005301   005304 600000 6                  TZE     s:8165

   8164  6 005302   005645 701000 6                  TSX1    BAD_SYMBIO
         6 005303   000000 011000                    NOP     0

     2760     8165    2         ALTRETURN;

   8165  6 005304   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 005305   000000 702211                    TSX2  ! 0,X1

     2761     8166    2   END START_CHKPF;
     2762     8167        /*D* NAME:         SPACE_BACK                                                   #8.
              8167        362
     2763     8168             PURPOSE:      To simulate a SPACE -1 FROM HERE keyin */
     2764     8169    1   SPACE_BACK: PROC;

   8169  6 005306   200064 741300       SPACE_BACK   STX1  ! SAV$+3,,AUTO

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:320  
     2765     8170    2         SPKEYIN.DEVNM=DEV$->FO$DEV.NAME;

   8170  6 005307   000000 470400 xsym               LDP0    FO_DEV$
         6 005310   040000 100500                    MLR     fill='040'O
         6 005311   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         6 005312   000036 000010 1                  ADSC9   SPKEYIN+1                cn=0,n=8

     2766     8171    2         SPKEYIN.NPAGES=-1;

   8171  6 005313   000001 335007                    LCA     1,DL
         6 005314   000040 755000 1                  STA     SPKEYIN+3

     2767     8172    2         SPKEYIN.SPACEFROM=SPACEFROM_HERE#;

   8172  6 005315   000000 236003                    LDQ     0,DU
         6 005316   000041 552040 1                  STBQ    SPKEYIN+4,'40'O

     2768     8173    2         CALL FOD$EVENT (FODE_KEYN#,ADDR(SPKEYIN));

   8173  6 005317   000032 236000 7                  LDQ     26
         6 005320   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 005321   200106 631500                    EPPR1   @FO$FIL+2,,AUTO
         6 005322   200111 451500                    STP1    @FO$FIL+5,,AUTO
         6 005323   000030 236000 7                  LDQ     24
         6 005324   200110 756100                    STQ     @FO$FIL+4,,AUTO
         6 005325   200110 630500                    EPPR0   @FO$FIL+4,,AUTO
         6 005326   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 005327   000003 701000 6                  TSX1    s:5888
         6 005330   000000 011000                    NOP     0

     2769     8174    2         RETURN;

   8174  6 005331   200064 221300                    LDX1  ! SAV$+3,,AUTO
         6 005332   000001 702211                    TSX2  ! 1,X1

     2770     8175    2   END SPACE_BACK;
     2771     8176        /*D* NAME:         START_FIRSTEXT
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:321  
     2772     8177             PURPOSE:      To provide the first extents of a file to
     2773     8178                           an idle symbiont device. */
     2774     8179    1   START_FIRSTEXT: PROC ALTRET;

   8179  6 005333   200060 741300       START_FIRST* STX1  ! ALSTAT+8,,AUTO

     2775     8180    2         CALL SET_EXT;

   8180  6 005334   005136 701000 6                  TSX1    SET_EXT
         6 005335   000000 011000                    NOP     0

     2776     8181    2         CALL M$SYMBIO (NXTEXT_SYMB) ALTRET(A1);

   8181  6 005336   000470 630400 2                  EPPR0   NXTEXT_SYMB
         6 005337   570000 713400                    CLIMB   alt,+61440
         6 005340   403400 401760                    pmme    nvectors=8
         6 005341   005353 702000 6                  TSX2    A1

     2777     8182    2         DEV$->FO$DEV.STATE=FOS_BUSY#;

   8182  6 005342   000000 470400 xsym               LDP0    FO_DEV$
         6 005343   001000 236007                    LDQ     512,DL
         6 005344   000011 552110                    STBQ    9,'10'O,PR0

     2778     8183    2         CALL FOD$EVENT (FODE_SFEXT#,0);

   8183  6 005345   000015 630400 7                  EPPR0   13
         6 005346   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 005347   000003 701000 6                  TSX1    s:5888
         6 005350   000000 011000                    NOP     0

     2779     8184    2         RETURN;

   8184  6 005351   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 005352   000001 702211                    TSX2  ! 1,X1

   8182  6 005353                       A1           null
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:322  
     2780     8185    2   A1:   ;
     2781     8186    2         IF B$ERRCODE ~= %E$NOSTA THEN CALL BAD_SYMBIO;

   8186  6 005353   000000 470400 xsym               LDP0    B$TCB$
         6 005354   000000 471500                    LDP1    0,,PR0
         6 005355   100102 236100                    LDQ     66,,PR1
         6 005356   377770 376007                    ANQ     131064,DL
         6 005357   015340 116007                    CMPQ    6880,DL
         6 005360   005363 600000 6                  TZE     s:8187

   8186  6 005361   005645 701000 6                  TSX1    BAD_SYMBIO
         6 005362   000000 011000                    NOP     0

     2782     8187    2         ALTRETURN;

   8187  6 005363   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 005364   000000 702211                    TSX2  ! 0,X1

     2783     8188    2   END START_FIRSTEXT;
     2784     8189        /**************************************
     2785     8190         **************************************
     2786     8191                    SBLKS_DEV
     2787     8192         **************************************
     2788     8193         **************************************/
     2789     8194        /*D* NAME:         SBLKS_DEV
     2790     8195             PURPOSE:      To start spacing a device by blocks
     2791     8196             DESCRIPTION:  FO_DEV$ is the device, and its FO$DEV.BR is the
     2792     8197                           place to space to, starting from the beginning
     2793     8198                           of the file.  This routine starts MOOS spacing
     2794     8199                           in block mode, and ALTRETs if it cannot. */
     2795     8200    1   SBLKS_DEV: PROC ALTRET;

   8200  6 005365   200060 741300       SBLKS_DEV    STX1  ! ALSTAT+8,,AUTO

     2796     8201    2         CALL SET_EXT;

   8201  6 005366   005136 701000 6                  TSX1    SET_EXT
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:323  
         6 005367   000000 011000                    NOP     0

     2797     8202    2         SPACEBLKS_SYMB.V.BLKREC='0'B;

   8202  6 005370   000376 450000 1                  STZ     SPACEBLKS_SYMB+24

     2798     8203    2         SPACEBLKS_SYMB.V.SPACEPAGES#=DEV$->FO$DEV.BR.BLK#+1;

   8203  6 005371   000000 470400 xsym               LDP0    FO_DEV$
         6 005372   000017 236100                    LDQ     15,,PR0
         6 005373   000011 772000                    QRL     9
         6 005374   777777 376007                    ANQ     -1,DL
         6 005375   000001 036007                    ADLQ    1,DL
         6 005376   000375 756000 1                  STQ     SPACEBLKS_SYMB+23

     2799     8204    2         SPACEBLKS_SYMB.V.SPACEREC#=DEV$->FO$DEV.BR.REC#;

   8204  6 005377   000017 235100                    LDA     15,,PR0
         6 005400   000020 236100                    LDQ     16,,PR0
         6 005401   000033 773000                    LRL     27
         6 005402   777777 376007                    ANQ     -1,DL
         6 005403   000402 756000 1                  STQ     SPACEBLKS_SYMB+28

     2800     8205    2         SPACEBLKS_SYMB.BUF_.BUF$=DEV$->FO$DEV.SPG$;

   8205  6 005404   000001 236100                    LDQ     1,,PR0
         6 005405   000353 756000 1                  STQ     SPACEBLKS_SYMB+5

     2801     8206    2         CALL M$SYMBIO (SPACEBLKS_SYMB) ALTRET(ALTRT);

   8206  6 005406   000346 630400 1                  EPPR0   SPACEBLKS_SYMB
         6 005407   570000 713400                    CLIMB   alt,+61440
         6 005410   403400 401760                    pmme    nvectors=8
         6 005411   005421 702000 6                  TSX2    ALTRT

     2802     8207    2         DEV$->FO$DEV.FLG.SIP='1'B;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:324  
   8207  6 005412   000000 470400 xsym               LDP0    FO_DEV$
         6 005413   000004 236007                    LDQ     4,DL
         6 005414   000012 256100                    ORSQ    10,,PR0

     2803     8208    2         DEV$->FO$DEV.STATE=FOS_BUSY#;

   8208  6 005415   001000 236007                    LDQ     512,DL
         6 005416   000011 552110                    STBQ    9,'10'O,PR0

     2804     8209    2         RETURN;

   8209  6 005417   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 005420   000001 702211                    TSX2  ! 1,X1

   8208  6 005421                       ALTRT        null
     2805     8210    2   ALTRT:;
     2806     8211    2         ALTRETURN;

   8211  6 005421   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 005422   000000 702211                    TSX2  ! 0,X1

     2807     8212    2   END SBLKS_DEV;
     2808     8213        /**************************************
     2809     8214         **************************************
     2810     8215                    END_DEV
     2811     8216                    FIN_DEV
     2812     8217         **************************************
     2813     8218         **************************************/
     2814     8219        /*D* NAME:         END_DEV, FIN_DEV
     2815     8220             PURPOSE:      To remove a file from a device
     2816     8221             DESCRIPTION:  This routine is called when a file is to be
     2817     8222                           removed from a device.
     2818     8223
     2819     8224                           END_DEV attempts to execute a symbiont close,
     2820     8225                           and ALTRETs if it fails.  This entry is used
     2821     8226                           when the symbiont is open.  FIN_DEV does not do
     2822     8227                           a close, and is only used when the device has
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:325  
     2823     8228                           disconnected and thus a close is not required.
     2824     8229
     2825     8230                           The device state is set IDLE, the cross-link
     2826     8231                           pointers between the file and device are set
     2827     8232                           ADDR(NIL), the symbiont buffer page for the device
     2828     8233                           is released, the 'LP01 SYSID N OFF' message is
     2829     8234                           printed (because this routine is the only place
     2830     8235                           where a device and file become disassociated),
     2831     8236                           and the job status (if any) is updated to reflect
     2832     8237                           the fact that one less file is now printing. */
     2833     8238    1   END_DEV: PROC ALTRET;

   8238  6 005423   200060 741300       END_DEV      STX1  ! ALSTAT+8,,AUTO

     2834     8239    2         CALL M$SYMBIO (CLOSE_SYMB) ALTRET(ALTRT);

   8239  6 005424   000526 630400 2                  EPPR0   CLOSE_SYMB
         6 005425   570000 713400                    CLIMB   alt,+61440
         6 005426   403400 401760                    pmme    nvectors=8
         6 005427   005507 702000 6                  TSX2    ALTRT
         6 005430   005432 710000 6                  TRA     s:8241

     2835     8240    2   FIN_DEV: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

   8240  6 005431   200060 741300       FIN_DEV      STX1  ! ALSTAT+8,,AUTO

     2836     8241    2         CALL FOFFMSG_DEV;

   8241  6 005432   006533 701000 6                  TSX1    FOFFMSG_DEV
         6 005433   000000 011000                    NOP     0

     2837     8242    2         DEV$->FO$DEV.STATE=FOS_IDLE#;

   8242  6 005434   000000 470400 xsym               LDP0    FO_DEV$
         6 005435   000000 236003                    LDQ     0,DU
         6 005436   000011 552110                    STBQ    9,'10'O,PR0

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:326  
     2838     8243    2         DEV$->FO$DEV.CFIL$=ADDR(NIL);

   8243  6 005437   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 005440   000002 756100                    STQ     2,,PR0

     2839     8244    2         IF DEV$->FO$DEV.FLG.AEF THEN DEV$->FO$DEV.FLG.ALGNED='0'B;

   8244  6 005441   000012 236100                    LDQ     10,,PR0
         6 005442   002000 316007                    CANQ    1024,DL
         6 005443   005446 600000 6                  TZE     s:8245

   8244  6 005444   000002 236000 7                  LDQ     2
         6 005445   000012 356100                    ANSQ    10,,PR0

     2840     8245    2         IF DEV$->FO$DEV.FLG.TERR THEN DEV$->FO$DEV.FLG.TERR='0'B;

   8245  6 005446   000012 236100                    LDQ     10,,PR0
         6 005447   200000 316007                    CANQ    65536,DL
         6 005450   005453 600000 6                  TZE     s:8246

   8245  6 005451   000021 236000 7                  LDQ     17
         6 005452   000012 356100                    ANSQ    10,,PR0

     2841     8246    2         FIL$->FO$FIL.CDEV$=ADDR(NIL);

   8246  6 005453   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 005454   000000 471400 xsym               LDP1    FO_FIL$
         6 005455   100011 756100                    STQ     9,,PR1

     2842     8247    2         CALL FOI$RBUF (FO_SPGSCB,DEV$->FO$DEV.SPG$);

   8247  6 005456   000000 236000 xsym               LDQ     FO_DEV$
         6 005457   000001 036003                    ADLQ    1,DU
         6 005460   000013 235000 7                  LDA     11
         6 005461   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 005462   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 005463   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:327  
         6 005464   000000 701000 xent               TSX1    FOI$RBUF
         6 005465   000000 011000                    NOP     0

     2843     8248    2         DEV$->FO$DEV.SPG$=ADDR(NIL);

   8248  6 005466   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 005467   000000 470400 xsym               LDP0    FO_DEV$
         6 005470   000001 756100                    STQ     1,,PR0

     2844     8249
     2845     8250    2         JOB$=FIL$->FO$FIL.OJOB$;

   8250  6 005471   000000 471400 xsym               LDP1    FO_FIL$
         6 005472   100003 236100                    LDQ     3,,PR1
         6 005473   000000 756000 xsym               STQ     FO_JOB$

     2846     8251    2         JOB$->FO$JOB.NFIL_PRINTING=JOB$->FO$JOB.NFIL_PRINTING-1;

   8251  6 005474   000000 473400 xsym               LDP3    FO_JOB$
         6 005475   300003 236100                    LDQ     3,,PR3
         6 005476   000022 772000                    QRL     18
         6 005477   003777 376007                    ANQ     2047,DL
         6 005500   000001 136007                    SBLQ    1,DL
         6 005501   000022 736000                    QLS     18
         6 005502   300003 676100                    ERQ     3,,PR3
         6 005503   003777 376003                    ANQ     2047,DU
         6 005504   300003 656100                    ERSQ    3,,PR3

     2847     8252    2         RETURN;

   8252  6 005505   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 005506   000001 702211                    TSX2  ! 1,X1

   8251  6 005507                       ALTRT        null
     2848     8253    2   ALTRT:;
     2849     8254    2         ALTRETURN;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:328  
   8254  6 005507   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 005510   000000 702211                    TSX2  ! 0,X1

     2850     8255    2   END END_DEV;
     2851     8256        /**************************************
     2852     8257         **************************************
     2853     8258                    QUIT_DEV
     2854     8259         **************************************
     2855     8260         **************************************/
     2856     8261        /*D* NAME:         QUIT_DEV
     2857     8262             PURPOSE:      To complete a quit sequence on a device
     2858     8263             DESCRIPTION:  This routine is called after END_DEV/FIN_DEV,
     2859     8264                           to do to the file that which is required by
     2860     8265                           the reason we initiated the quit.  This can
     2861     8266                           be delete the file, remove the file from our
     2862     8267                           tables without deleting it, set the file into
     2863     8268                           the hold queue, or nothing (as is the case if
     2864     8269                           one copy of a multi-copy file completes print
     2865     8270                           on a locked device, in which case the file goes
     2866     8271                           back to looking for a device to print on.). */
     2867     8272    1   QUIT_DEV: PROC;

   8272  6 005511   200060 741300       QUIT_DEV     STX1  ! ALSTAT+8,,AUTO

     2868     8273
     2869     8274
     2870     8275    3           DO CASE (DEV$->FO$DEV.QUITRSN);

   8275  6 005512   000000 470400 xsym               LDP0    FO_DEV$
         6 005513   000013 720100                    LXL0    11,,PR0
         6 005514   000777 360003                    ANX0    511,DU
         6 005515   000015 100003                    CMPX0   13,DU
         6 005516   005520 602010 6                  TNC     s:8275+6,X0
         6 005517   005643 710000 6                  TRA     s:8312
         6 005520   005535 710000 6                  TRA     s:8279
         6 005521   005535 710000 6                  TRA     s:8279
         6 005522   005535 710000 6                  TRA     s:8279
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:329  
         6 005523   005535 710000 6                  TRA     s:8279
         6 005524   005562 710000 6                  TRA     s:8290
         6 005525   005541 710000 6                  TRA     s:8282
         6 005526   005541 710000 6                  TRA     s:8282
         6 005527   005535 710000 6                  TRA     s:8279
         6 005530   005614 710000 6                  TRA     s:8300
         6 005531   005535 710000 6                  TRA     s:8279
         6 005532   005643 710000 6                  TRA     s:8312
         6 005533   005535 710000 6                  TRA     s:8279
         6 005534   005545 710000 6                  TRA     s:8285

     2871     8276
     2872     8277    3             CASE (FOQR_KABT#,FOQR_CHAB#,FOQR_DEL#,FOQR_CDEL#,

     2873     8278    3         FOQR_FINC#,FOQR_CNCL#,FOQR_RRUN#);
     2874     8279    3               CALL FOF$DELETE;

   8279  6 005535   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 005536   000000 701000 xent               TSX1    FOF$DELETE
         6 005537   000000 011000                    NOP     0
         6 005540   005643 710000 6                  TRA     s:8312

     2875     8280
     2876     8281    3             CASE (FOQR_BDDA#,FOQR_CHRM#);

     2877     8282    3               CALL FOF$REMOVE;

   8282  6 005541   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 005542   000000 701000 xent               TSX1    FOF$REMOVE
         6 005543   000000 011000                    NOP     0
         6 005544   005643 710000 6                  TRA     s:8312

     2878     8283
     2879     8284    3             CASE (FOQR_FPABRT#);

     2880     8285    3               CALL FOF$FITUPD (FOFU_PRIO0#,,0);

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:330  
   8285  6 005545   000001 236000 7                  LDQ     1
         6 005546   200110 756100                    STQ     @FO$FIL+4,,AUTO
         6 005547   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 005550   000031 235000 7                  LDA     25
         6 005551   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 005552   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 005553   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 005554   000000 701000 xent               TSX1    FOF$FITUPD
         6 005555   000000 011000                    NOP     0

     2881     8286    3               CALL FOF$REPRIO;

   8286  6 005556   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 005557   000000 701000 xent               TSX1    FOF$REPRIO
         6 005560   000000 011000                    NOP     0
         6 005561   005643 710000 6                  TRA     s:8312

     2882     8287
     2883     8288
     2884     8289    3             CASE (FOQR_COPY#);

     2885     8290    3               IF FIL$->FO$FIL.COPIES = 0 THEN CALL FOF$DELETE;

   8290  6 005562   000000 471400 xsym               LDP1    FO_FIL$
         6 005563   100007 722100                    LXL2    7,,PR1
         6 005564   005571 601000 6                  TNZ     s:8291

   8290  6 005565   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 005566   000000 701000 xent               TSX1    FOF$DELETE
         6 005567   000000 011000                    NOP     0
         6 005570   005643 710000 6                  TRA     s:8312

     2886     8291    3               ELSE IF (FIL$->FO$FIL.FLG.SAP AND FIL$->FO$FIL.SAPCOPIES = 0

   8291  6 005571   100015 236100                    LDQ     13,,PR1
         6 005572   000040 316007                    CANQ    32,DL
         6 005573   005643 600000 6                  TZE     s:8312
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:331  
         6 005574   100016 236100                    LDQ     14,,PR1
         6 005575   777000 316007                    CANQ    -512,DL
         6 005576   005643 601000 6                  TNZ     s:8312
         6 005577   100015 236100                    LDQ     13,,PR1
         6 005600   001000 316007                    CANQ    512,DL
         6 005601   005643 601000 6                  TNZ     s:8312

     2887     8292    3                AND NOT FIL$->FO$FIL.FLG.UNHELD) THEN
     2888     8293    4                  DO;

     2889     8294    4                  CALL FOF$UNCHAIN;

   8294  6 005602   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 005603   000000 701000 xent               TSX1    FOF$UNCHAIN
         6 005604   000000 011000                    NOP     0

     2890     8295    4                  FIL$->FO$FIL.PRIO=FOPR_HOLD#;

   8295  6 005605   000000 470400 xsym               LDP0    FO_FIL$
         6 005606   000000 236003                    LDQ     0,DU
         6 005607   000016 552104                    STBQ    14,'04'O,PR0

     2891     8296    4                  CALL FOF$CHAIN;

   8296  6 005610   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 005611   000000 701000 xent               TSX1    FOF$CHAIN
         6 005612   000000 011000                    NOP     0

     2892     8297    4                  END;

   8297  6 005613   005643 710000 6                  TRA     s:8312

     2893     8298
     2894     8299    3             CASE (FOQR_KSAV#);

     2895     8300    3               IF DEV$->FO$DEV.FLG.CHKP THEN

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:332  
   8300  6 005614   000012 236100                    LDQ     10,,PR0
         6 005615   001000 316007                    CANQ    512,DL
         6 005616   005643 600000 6                  TZE     s:8312

     2896     8301    4                 DO;

     2897     8302    4                 FIL$->FO$FIL.CHKPBR=DEV$->FO$DEV.BR;

   8302  6 005617   000017 235100                    LDA     15,,PR0
         6 005620   000020 236100                    LDQ     16,,PR0
         6 005621   000033 773000                    LRL     27
         6 005622   000027 376000 xsym               ANQ     B_VECTNIL+23
         6 005623   000000 471400 xsym               LDP1    FO_FIL$
         6 005624   100017 756100                    STQ     15,,PR1

     2898     8303    4                 FIL$->FO$FIL.FLG.CHKPTD='1'B;

   8303  6 005625   000004 236007                    LDQ     4,DL
         6 005626   100015 256100                    ORSQ    13,,PR1

     2899     8304    4                 CALL FOF$FITUPD (FOFU_CHKP#,,0);

   8304  6 005627   000001 236000 7                  LDQ     1
         6 005630   200110 756100                    STQ     @FO$FIL+4,,AUTO
         6 005631   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 005632   000033 235000 7                  LDA     27
         6 005633   200106 757100                    STAQ    @FO$FIL+2,,AUTO
         6 005634   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 005635   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 005636   000000 701000 xent               TSX1    FOF$FITUPD
         6 005637   000000 011000                    NOP     0

     2900     8305    4                 DEV$->FO$DEV.FLG.CHKP = '0'B;

   8305  6 005640   000000 470400 xsym               LDP0    FO_DEV$
         6 005641   000034 236000 7                  LDQ     28
         6 005642   000012 356100                    ANSQ    10,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:333  

     2901     8306    4                 END;

     2902     8307
     2903     8308
     2904     8309    3           END;

     2905     8310
     2906     8311
     2907     8312    2         RETURN;

   8312  6 005643   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 005644   000001 702211                    TSX2  ! 1,X1

     2908     8313    2   END QUIT_DEV;
     2909     8314        /**************************************
     2910     8315         **************************************
     2911     8316                    BAD_SYMBIO
     2912     8317         **************************************
     2913     8318         **************************************/
     2914     8319    1   BAD_SYMBIO: PROC;

   8319  6 005645   200064 741300       BAD_SYMBIO   STX1  ! SAV$+3,,AUTO

     2915     8320    2         CALL FOI$SNAP (%S$BADSYMBIO,F_FO,M_D);

   8320  6 005646   000037 630400 7                  EPPR0   31
         6 005647   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 005650   000000 701000 xent               TSX1    FOI$SNAP
         6 005651   000000 011000                    NOP     0

     2916     8321        /*S* SCREECH_CODE: FOD-S$BADSYMBIO
     2917     8322             TYPE:         SNAP
     2918     8323             MESSAGE:      OUTSYM received impossible altret on M$SYMBIO
     2919     8324             REMARKS:      The error code received from an M$SYMBIO PMME
     2920     8325                           should not have occurred.  The bad status was
     2921     8326                           given to the caller of BAD_SYMBIO.   */
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:334  
     2922     8327    2         RETURN;

   8327  6 005652   200064 221300                    LDX1  ! SAV$+3,,AUTO
         6 005653   000001 702211                    TSX2  ! 1,X1

     2923     8328    2   END BAD_SYMBIO;
     2924     8329        /**************************************
     2925     8330         **************************************
     2926     8331                    SET_BLKREC
     2927     8332         **************************************
     2928     8333         **************************************/
     2929     8334        /*D* NAME:         SET_BLKREC
     2930     8335             PURPOSE:      To translate blk#-rec# to starting extent
     2931     8336             DESCRIPTION:  When a CONTINUE operation is undertaken on a
     2932     8337                           device, we are to begin at a specific blk#-rec#.
     2933     8338                           Blk# is the granule number (counting from zero)
     2934     8339                           within the logical file.  Note that this is not
     2935     8340                           nescessarily file-relative granule number, for
     2936     8341                           in a commode file, the logical file consists of
     2937     8342                           several file-management files, and the extent list
     2938     8343                           for the logical file consists of the concatenated
     2939     8344                           extent lists of these files, and if separate ban-
     2940     8345                           ner files are being used, a bannered logical
     2941     8346                           file's first extent is the extent of the banner file,
     2942     8347                           not the first extent of the file management file.
     2943     8348
     2944     8349                           Rec# is record number (counting from 1) within a
     2945     8350                           granule.
     2946     8351
     2947     8352                           This routine sets up 2 things: an  extent descrip-
     2948     8353                           tor describing the place to start in the extent
     2949     8354                           list (i.e. it finds the extent in which the granule
     2950     8355                           described by BLK# lives, and shrinks that extent
     2951     8356                           appropriately), and a pointer (NXTEXT$) to the next
     2952     8357                           extent to be passed.  Note that the sense of each
     2953     8358                           of these depends upon the direction (forward or
     2954     8359                           backward) in which we are to proceed within the
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:335  
     2955     8360                           file, however the backward direction is only taken
     2956     8361                           during space backward operations, and the SPACE in-
     2957     8362                           itiator, after calling this routine, makes the ap-
     2958     8363                           propriate changes.
     2959     8364
     2960     8365                           The only anomaly occurs if the given blk# is beyond
     2961     8366                           the end of the file.  In this case, the routine will
     2962     8367                           ALTRET, but after setting up the device blk#-rec#,
     2963     8368                           and the extent, and NXTEXT$, such that they can
     2964     8369                           be handed to MOOS directly if we want to space
     2965     8370                           backward from the very end of the file. */
     2966     8371    1   SET_BLKREC: PROC ALTRET;

   8371  6 005654   200060 741300       SET_BLKREC   STX1  ! ALSTAT+8,,AUTO

     2967     8372    2         BLOCK=DEV$->FO$DEV.BR.BLK#;

   8372  6 005655   000000 470400 xsym               LDP0    FO_DEV$
         6 005656   000017 236100                    LDQ     15,,PR0
         6 005657   000011 772000                    QRL     9
         6 005660   777777 376007                    ANQ     -1,DL
         6 005661   200033 756100                    STQ     BLOCK,,AUTO

     2968     8373    2         EXT$=FIL$->FO$FIL.EXT$;

   8373  6 005662   000000 471400 xsym               LDP1    FO_FIL$
         6 005663   100002 236100                    LDQ     2,,PR1
         6 005664   200045 756100                    STQ     EXT$,,AUTO

     2969     8374    3           DO WHILE (EXT$  ~= ADDR(NIL));

   8374  6 005665   005724 710000 6                  TRA     s:8390

     2970     8375    3           GRANS=EXT$->FO$EXT.GRANS;

   8375  6 005666   200045 470500                    LDP0    EXT$,,AUTO
         6 005667   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:336  
         6 005670   000033 772000                    QRL     27
         6 005671   200034 756100                    STQ     GRANS,,AUTO

     2971     8376    3           IF BLOCK<GRANS THEN

   8376  6 005672   200033 116100                    CMPQ    BLOCK,,AUTO
         6 005673   005717 602000 6                  TNC     s:8387
         6 005674   005717 600000 6                  TZE     s:8387

     2972     8377    4             DO;

     2973     8378    4             EXTENT.GRANS#=GRANS-BLOCK;

   8378  6 005675   200033 136100                    SBLQ    BLOCK,,AUTO
         6 005676   000033 736000                    QLS     27
         6 005677   000004 552040 1                  STBQ    EXTENT,'40'O

     2974     8379    4             EXTENT.DAD#=EXT$->FO$EXT.DAD+BLOCK;

   8379  6 005700   000001 236100                    LDQ     1,,PR0
         6 005701   000032 376000 xsym               ANQ     B_VECTNIL+26
         6 005702   200033 036100                    ADLQ    BLOCK,,AUTO
         6 005703   000004 552034 1                  STBQ    EXTENT,'34'O

     2975     8380    4             EXTENT.STAMP=EXT$->FO$EXT.STAMP;

   8380  6 005704   000002 236100                    LDQ     2,,PR0
         6 005705   000005 756000 1                  STQ     EXTENT+1

     2976     8381    4             EXTENT.STAMP.FRDAD#=EXTENT.STAMP.FRDAD#+BLOCK;

   8381  6 005706   000005 236000 1                  LDQ     EXTENT+1
         6 005707   000777 376007                    ANQ     511,DL
         6 005710   200033 036100                    ADLQ    BLOCK,,AUTO
         6 005711   000005 552004 1                  STBQ    EXTENT+1,'04'O

     2977     8382    4             FIL$->FO$FIL.NXTEXT$=EXT$->FO$EXT.LNK$;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:337  

   8382  6 005712   000000 236100                    LDQ     0,,PR0
         6 005713   000000 471400 xsym               LDP1    FO_FIL$
         6 005714   100001 756100                    STQ     1,,PR1

     2978     8383    4             RETURN;

   8383  6 005715   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 005716   000001 702211                    TSX2  ! 1,X1

     2979     8384    4             END;
     2980     8385    3           ELSE
     2981     8386    4             DO;

     2982     8387    4             BLOCK=BLOCK-GRANS;

   8387  6 005717   200033 236100                    LDQ     BLOCK,,AUTO
         6 005720   200034 136100                    SBLQ    GRANS,,AUTO
         6 005721   200033 756100                    STQ     BLOCK,,AUTO

     2983     8388    4             EXT$=EXT$->FO$EXT.LNK$;

   8388  6 005722   000000 236100                    LDQ     0,,PR0
         6 005723   200045 756100                    STQ     EXT$,,AUTO

     2984     8389    4             END;

     2985     8390    3           END;

   8390  6 005724   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 005725   005666 601000 6                  TNZ     s:8375

     2986     8391    2         DEV$->FO$DEV.BR.BLK#=DEV$->FO$DEV.BR.BLK#-BLOCK-1;

   8391  6 005726   000000 470400 xsym               LDP0    FO_DEV$
         6 005727   000017 236100                    LDQ     15,,PR0
         6 005730   000011 772000                    QRL     9
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:338  
         6 005731   777777 376007                    ANQ     -1,DL
         6 005732   200033 136100                    SBLQ    BLOCK,,AUTO
         6 005733   000001 136007                    SBLQ    1,DL
         6 005734   000011 736000                    QLS     9
         6 005735   000017 552130                    STBQ    15,'30'O,PR0

     2987     8392    2         DEV$->FO$DEV.BR.REC#=9999;

   8392  6 005736   000100 101400                    MRL     fill='000'O
         6 005737   000042 000004 7                  ADSC9   34                       cn=0,n=4
         6 005740   000017 600002                    ADSC9   15,,PR0                  cn=3,n=2

     2988     8393    2         EXTENT.GRANS#=1;

   8393  6 005741   001000 236003                    LDQ     512,DU
         6 005742   000004 552040 1                  STBQ    EXTENT,'40'O

     2989     8394    2         CALL FOF$LASTEXT (EXT$);

   8394  6 005743   200045 631500                    EPPR1   EXT$,,AUTO
         6 005744   200106 451500                    STP1    @FO$FIL+2,,AUTO
         6 005745   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 005746   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 005747   000000 701000 xent               TSX1    FOF$LASTEXT
         6 005750   000000 011000                    NOP     0

     2990     8395    2         EXTENT.DAD#=EXT$->FO$EXT.DAD+EXT$->FO$EXT.GRANS-1;

   8395  6 005751   200045 470500                    LDP0    EXT$,,AUTO
         6 005752   000001 236100                    LDQ     1,,PR0
         6 005753   000033 772000                    QRL     27
         6 005754   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 005755   000001 236100                    LDQ     1,,PR0
         6 005756   000032 376000 xsym               ANQ     B_VECTNIL+26
         6 005757   200106 036100                    ADLQ    @FO$FIL+2,,AUTO
         6 005760   000001 136007                    SBLQ    1,DL
         6 005761   000004 552034 1                  STBQ    EXTENT,'34'O
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:339  

     2991     8396    2         EXTENT.STAMP=EXT$->FO$EXT.STAMP;

   8396  6 005762   000002 236100                    LDQ     2,,PR0
         6 005763   000005 756000 1                  STQ     EXTENT+1

     2992     8397    2         EXTENT.STAMP.FRDAD#=EXTENT.STAMP.FRDAD#+EXT$->FO$EXT.GRANS-1;

   8397  6 005764   000001 236100                    LDQ     1,,PR0
         6 005765   000033 772000                    QRL     27
         6 005766   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 005767   000005 236000 1                  LDQ     EXTENT+1
         6 005770   000777 376007                    ANQ     511,DL
         6 005771   200106 036100                    ADLQ    @FO$FIL+2,,AUTO
         6 005772   000001 136007                    SBLQ    1,DL
         6 005773   000005 552004 1                  STBQ    EXTENT+1,'04'O

     2993     8398    2         CALL SET_EXTBLNK;

   8398  6 005774   006003 701000 6                  TSX1    SET_EXTBLNK
         6 005775   000000 011000                    NOP     0

     2994     8399    2         FIL$->FO$FIL.NXTEXT$=EXTBLNK$;

   8399  6 005776   200041 236100                    LDQ     EXTBLNK$,,AUTO
         6 005777   000000 470400 xsym               LDP0    FO_FIL$
         6 006000   000001 756100                    STQ     1,,PR0

     2995     8400    2         ALTRETURN;

   8400  6 006001   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 006002   000000 702211                    TSX2  ! 0,X1

     2996     8401    2   END SET_BLKREC;
     2997     8402        /**************************************
     2998     8403         **************************************
     2999     8404                    SET_EXTBLNK
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:340  
     3000     8405         **************************************
     3001     8406         **************************************/
     3002     8407        /*D* NAME:         SET_EXTBLNK
     3003     8408             PURPOSE:      To set EXTBLNK$ to point to the extent before
     3004     8409                           that which EXT$ points to. */
     3005     8410    1   SET_EXTBLNK: PROC;

   8410  6 006003   200062 741300       SET_EXTBLNK  STX1  ! SAV$+1,,AUTO

     3006     8411
     3007     8412    2         EXTBLNK$=FIL$->FO$FIL.EXT$;

   8412  6 006004   000000 470400 xsym               LDP0    FO_FIL$
         6 006005   000002 236100                    LDQ     2,,PR0
         6 006006   200041 756100                    STQ     EXTBLNK$,,AUTO

     3008     8413    2         IF EXTBLNK$=EXT$ THEN

   8413  6 006007   200045 116100                    CMPQ    EXT$,,AUTO
         6 006010   006014 601000 6                  TNZ     s:8416

     3009     8414    2          EXTBLNK$=ADDR(NIL);

   8414  6 006011   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 006012   200041 756100                    STQ     EXTBLNK$,,AUTO
         6 006013   006027 710000 6                  TRA     s:8419

     3010     8415    2         ELSE
     3011     8416    3           DO WHILE (EXTBLNK$->FO$EXT.LNK$ ~= EXT$);

   8416  6 006014   200041 471500                    LDP1    EXTBLNK$,,AUTO
         6 006015   100000 236100                    LDQ     0,,PR1
         6 006016   200045 116100                    CMPQ    EXT$,,AUTO
         6 006017   006027 600000 6                  TZE     s:8419

     3012     8417    3           EXTBLNK$=EXTBLNK$->FO$EXT.LNK$;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:341  
   8417  6 006020   200041 470500                    LDP0    EXTBLNK$,,AUTO
         6 006021   000000 236100                    LDQ     0,,PR0
         6 006022   200041 756100                    STQ     EXTBLNK$,,AUTO

     3013     8418    3           END;

   8418  6 006023   200041 470500                    LDP0    EXTBLNK$,,AUTO
         6 006024   000000 236100                    LDQ     0,,PR0
         6 006025   200045 116100                    CMPQ    EXT$,,AUTO
         6 006026   006020 601000 6                  TNZ     s:8417

     3014     8419    2         RETURN;

   8419  6 006027   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 006030   000001 702211                    TSX2  ! 1,X1

     3015     8420    2   END SET_EXTBLNK;
     3016     8421        /**************************************
     3017     8422         **************************************
     3018     8423                    MATCHEM
     3019     8424         **************************************
     3020     8425         **************************************/
     3021     8426    1   MATCHEM: PROC ALTRET;

   8426  6 006031   200064 741300       MATCHEM      STX1  ! SAV$+3,,AUTO

     3022     8427    2         IF FIL$->FO$FIL.PRIO = FOPR_P0#

   8427  6 006032   000000 470400 xsym               LDP0    FO_FIL$
         6 006033   000016 236100                    LDQ     14,,PR0
         6 006034   000777 376007                    ANQ     511,DL
         6 006035   000003 116007                    CMPQ    3,DL
         6 006036   006052 600000 6                  TZE     s:8432
         6 006037   000002 116007                    CMPQ    2,DL
         6 006040   006052 600000 6                  TZE     s:8432
         6 006041   000001 116007                    CMPQ    1,DL
         6 006042   006052 600000 6                  TZE     s:8432
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:342  
         6 006043   000000 471400 xsym               LDP1    FO_DEV$
         6 006044   100012 236100                    LDQ     10,,PR1
         6 006045   000001 316007                    CANQ    1,DL
         6 006046   006052 601000 6                  TNZ     s:8432
         6 006047   000016 236100                    LDQ     14,,PR0
         6 006050   000777 316007                    CANQ    511,DL
         6 006051   006053 601000 6                  TNZ     s:8432+1

     3023     8428    2         OR FIL$->FO$FIL.PRIO = FOPR_SPILLED#
     3024     8429    2         OR FIL$->FO$FIL.PRIO = FOPR_MFW#
     3025     8430    2         OR DEV$->FO$DEV.FLG.LOCK
     3026     8431    2         OR FIL$->FO$FIL.PRIO = FOPR_HOLD#
     3027     8432    2         THEN ALTRETURN;

   8432  6 006052   000000 702211                    TSX2  ! 0,X1
         6 006053   006055 710000 6                  TRA     s:8434

     3028     8433    2   MATCHEM1: ENTRY ALTRET;

   8433  6 006054   200064 741300       MATCHEM1     STX1  ! SAV$+3,,AUTO

     3029     8434    2         IF DEV$->FO$DEV.FORM ~= FIL$->FO$FIL.FORM THEN ALTRETURN;

   8434  6 006055   000000 470400 xsym               LDP0    FO_DEV$
         6 006056   000000 471400 xsym               LDP1    FO_FIL$
         6 006057   040100 106500                    CMPC    fill='040'O
         6 006060   000015 600006                    ADSC9   13,,PR0                  cn=3,n=6
         6 006061   100013 000006                    ADSC9   11,,PR1                  cn=0,n=6
         6 006062   006064 600000 6                  TZE     s:8434+7

   8434  6 006063   000000 702211                    TSX2  ! 0,X1
         6 006064   006066 710000 6                  TRA     s:8436

     3030     8435    2   MATCHEM11: ENTRY ALTRET;

   8435  6 006065   200064 741300       MATCHEM11    STX1  ! SAV$+3,,AUTO

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:343  
     3031     8436    2         IF DEV$->FO$DEV.RACCTL ~= 0

   8436  6 006066   000000 470400 xsym               LDP0    FO_DEV$
         6 006067   000014 236100                    LDQ     12,,PR0
         6 006070   777000 316007                    CANQ    -512,DL
         6 006071   006074 601000 6                  TNZ     s:8439
         6 006072   000777 316007                    CANQ    511,DL
         6 006073   006102 600000 6                  TZE     s:8439+6

     3032     8437    2         OR DEV$->FO$DEV.RWSNL ~= 0
     3033     8438    2         THEN
     3034     8439    2          CALL MATCHEMR (DEV$->FO$DEV,FIL$->FO$FIL) ALTRET(ALTRT);

   8439  6 006074   000000 236000 xsym               LDQ     FO_FIL$
         6 006075   200070 756100                    STQ     @FO$DEV+1,,AUTO
         6 006076   000000 236000 xsym               LDQ     FO_DEV$
         6 006077   200067 756100                    STQ     P$+2,,AUTO
         6 006100   006131 701000 6                  TSX1    MATCHEMR
         6 006101   006125 702000 6                  TSX2    ALTRT
         6 006102   006104 710000 6                  TRA     s:8441

     3035     8440    2   MATCHEM2: ENTRY ALTRET;

   8440  6 006103   200064 741300       MATCHEM2     STX1  ! SAV$+3,,AUTO

     3036     8441    2         CALL MATCHWSN (DEV$->FO$DEV, FIL$->FO$FIL) ALTRET (ALTRT);

   8441  6 006104   000000 236000 xsym               LDQ     FO_FIL$
         6 006105   200104 756100                    STQ     @FO$DEV+1,,AUTO
         6 006106   000000 236000 xsym               LDQ     FO_DEV$
         6 006107   200103 756100                    STQ     ACCT+4,,AUTO
         6 006110   006323 701000 6                  TSX1    MATCHWSN
         6 006111   006125 702000 6                  TSX2    ALTRT

     3037     8442    2         IF FIL$->FO$FIL.DESTR.TYP ~= DEV$->FO$DEV.NAMER.TYP

   8442  6 006112   000000 470400 xsym               LDP0    FO_FIL$
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:344  
         6 006113   000007 220100                    LDX0    7,,PR0
         6 006114   000000 471400 xsym               LDP1    FO_DEV$
         6 006115   100005 100100                    CMPX0   5,,PR1
         6 006116   006125 601000 6                  TNZ     ALTRT
         6 006117   000010 221100                    LDX1    8,,PR0
         6 006120   100011 361100                    ANX1    9,,PR1
         6 006121   006125 601000 6                  TNZ     ALTRT
         6 006122   000015 236100                    LDQ     13,,PR0
         6 006123   000001 316007                    CANQ    1,DL
         6 006124   006127 600000 6                  TZE     s:8446

     3038     8443    2         OR FIL$->FO$FIL.ATTR & DEV$->FO$DEV.NATTR
     3039     8444    2         OR FIL$->FO$FIL.FLG.SPILL THEN
     3040     8445    2   ALTRT: ALTRETURN;

   8445  6 006125   200064 221300       ALTRT        LDX1  ! SAV$+3,,AUTO
         6 006126   000000 702211                    TSX2  ! 0,X1

     3041     8446    2         RETURN;

   8446  6 006127   200064 221300                    LDX1  ! SAV$+3,,AUTO
         6 006130   000001 702211                    TSX2  ! 1,X1

     3042     8447    2   END MATCHEM;
     3043     8448        /*D* NAME:         MATCHEMR
     3044     8449             PURPOSE:      To match a device and file for ACCT
     3045     8450             CALL:         MATCHEMR (FO$DEV,FO$FIL)
     3046     8451             DESCRIPTION:  RETURNs if the device's RACCT matches the file's
     3047     8452                           account; else ALTRETs.
     3048     8453        */
     3049     8454    1   MATCHEMR: PROC (FO$DEV,FO$FIL) ALTRET;

   8454  6 006131   200066 741300       MATCHEMR     STX1  ! P$+1,,AUTO

     3050     8455        /**/
     3051     8456        %FO_DEV (FPTN=FO$DEV,STCLASS="");
     3052     8555        %FO_DEV (FPTN=DEV,STCLASS=BASED);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:345  
     3053     8654        %FO_FIL (FPTN=FO$FIL,STCLASS="");
     3054     8754    2   DCL ACCT CHAR(8);
     3055     8755        /**/
     3056     8756    2         IF FO$DEV.RACCTL = 0 AND FO$DEV.RWSNL = 0

   8756  6 006132   200067 470500                    LDP0    @FO$DEV,,AUTO
         6 006133   000014 236100                    LDQ     12,,PR0
         6 006134   777000 316007                    CANQ    -512,DL
         6 006135   006141 601000 6                  TNZ     s:8760
         6 006136   000777 316007                    CANQ    511,DL
         6 006137   006141 601000 6                  TNZ     s:8760

     3057     8757    2         THEN
     3058     8758    2          RETURN;

   8758  6 006140   000001 702211                    TSX2  ! 1,X1

     3059     8759
     3060     8760    2         IF FO$DEV.RACCTL ~= 0

   8760  6 006141   777000 316007                    CANQ    -512,DL
         6 006142   006155 600000 6                  TZE     s:8781

     3061     8761    3         THEN DO;

     3062     8762                                           /* If the device is restricted to
     3063     8763                                           an account, make sure the device
     3064     8764                                           can print the file's dest wsn */
     3065     8765    3           CALL MATCHACCT (FO$DEV,FO$FIL)

   8765  6 006143   200070 236100                    LDQ     @FO$FIL,,AUTO
         6 006144   200076 756100                    STQ     @FO$DEV+1,,AUTO
         6 006145   200067 236100                    LDQ     @FO$DEV,,AUTO
         6 006146   200075 756100                    STQ     @FO$FIL+5,,AUTO
         6 006147   006237 701000 6                  TSX1    MATCHACCT
         6 006150   006153 702000 6                  TSX2    s:8770

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:346  
     3066     8766    4           WHENRETURN DO;

     3067     8767    4             RETURN;

   8767  6 006151   200066 221300                    LDX1  ! P$+1,,AUTO
         6 006152   000001 702211                    TSX2  ! 1,X1

     3068     8768    4             END;
     3069     8769    4           WHENALTRETURN DO;

     3070     8770    4             ALTRETURN;

   8770  6 006153   200066 221300                    LDX1  ! P$+1,,AUTO
         6 006154   000000 702211                    TSX2  ! 0,X1

     3071     8771    4             END;
     3072     8772    3           END;
     3073     8773    2         ELSE
     3074     8774    3           DO;                        /* RWSNL ~= 0 */

     3075     8775                                           /* See if there's another device
     3076     8776                                           whose acct restriction is the same
     3077     8777                                           this file, and whose wsn list can
     3078     8778                                           handle this file. */
     3079     8779                                           /* Restrict accounts take
     3080     8780                                           precedence over restrict wsns */
     3081     8781    3           WSN = FO$FIL.DESTR.WSN;

   8781  6 006155   200070 471500                    LDP1    @FO$FIL,,AUTO
         6 006156   040100 100500                    MLR     fill='040'O
         6 006157   100005 000010                    ADSC9   5,,PR1                   cn=0,n=8
         6 006160   200014 000010                    ADSC9   WSN,,AUTO                cn=0,n=8

     3082     8782    3           IF FO$DEV.RWSNL > 0

   8782  6 006161   000014 236100                    LDQ     12,,PR0
         6 006162   000033 736000                    QLS     27
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:347  
         6 006163   000033 732000                    QRS     27
         6 006164   000000 116003                    CMPQ    0,DU
         6 006165   006206 604400 6                  TMOZ    s:8795

     3083     8783    4           THEN DO;

     3084     8784    4             I = FO$DEV.RWSNL;

   8784  6 006166   200005 756100                    STQ     I,,AUTO

     3085     8785    4             IF ADDR(FO$DEV.RWSN) -> B$CHARS

   8785  6 006167   000000 620006                    EAX0    0,QL
         6 006170   200005 722100                    LXL2    I,,AUTO
         6 006171   040140 106540                    CMPC    fill='040'O
         6 006172   000020 200010                    ADSC9   16,,PR0                  cn=1,n=*X0
         6 006173   200014 000012                    ADSC9   WSN,,AUTO                cn=0,n=*X2
         6 006174   006235 601000 6                  TNZ     s:8806

     3086     8786    4             = ADDR(WSN) -> B$CHARS
     3087     8787    4             THEN
     3088     8788    4              CALL MATCHWSN (FO$DEV,FO$FIL)

   8788  6 006175   200070 236100                    LDQ     @FO$FIL,,AUTO
         6 006176   200104 756100                    STQ     @FO$DEV+1,,AUTO
         6 006177   200067 236100                    LDQ     @FO$DEV,,AUTO
         6 006200   200103 756100                    STQ     ACCT+4,,AUTO
         6 006201   006323 701000 6                  TSX1    MATCHWSN
         6 006202   006205 702000 6                  TSX2    s:8792

     3089     8789    5              WHENRETURN DO;

     3090     8790    5                RETURN;

   8790  6 006203   200066 221300                    LDX1  ! P$+1,,AUTO
         6 006204   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:348  
     3091     8791    5                END;
     3092     8792    4             END;

   8792  6 006205   006235 710000 6                  TRA     s:8806

     3093     8793    3           ELSE
     3094     8794    4             DO;

     3095     8795    4             I = -FO$DEV.RWSNL;

   8795  6 006206   000027 676000 xsym               ERQ     B_VECTNIL+23
         6 006207   000001 036007                    ADLQ    1,DL
         6 006210   200005 756100                    STQ     I,,AUTO

     3096     8796    4             IF I <= FO$DEV.RWSNL

   8796  6 006211   000014 236100                    LDQ     12,,PR0
         6 006212   000033 736000                    QLS     27
         6 006213   000033 732000                    QRS     27
         6 006214   006235 604000 6                  TMI     s:8806
         6 006215   200005 116100                    CMPQ    I,,AUTO
         6 006216   006235 602000 6                  TNC     s:8806

     3097     8797    4             THEN
     3098     8798    4              IF SUBSTR(FO$DEV.RWSN, 1, I)

   8798  6 006217   200005 136100                    SBLQ    I,,AUTO
         6 006220   200005 720100                    LXL0    I,,AUTO
         6 006221   040146 106540                    CMPC    fill='040'O
         6 006222   000020 400010                    ADSC9   16,,PR0                  cn=2,n=*X0
         6 006223   200014 000010                    ADSC9   WSN,Q,AUTO               cn=0,n=*X0
         6 006224   006235 601000 6                  TNZ     s:8806

     3099     8799    4              = SUBSTR(WSN, FO$DEV.RWSNL-I, I)
     3100     8800    4              THEN
     3101     8801    4               CALL MATCHWSN (FO$DEV,FO$FIL)

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:349  
   8801  6 006225   200070 236100                    LDQ     @FO$FIL,,AUTO
         6 006226   200104 756100                    STQ     @FO$DEV+1,,AUTO
         6 006227   200067 236100                    LDQ     @FO$DEV,,AUTO
         6 006230   200103 756100                    STQ     ACCT+4,,AUTO
         6 006231   006323 701000 6                  TSX1    MATCHWSN
         6 006232   006235 702000 6                  TSX2    s:8806

     3102     8802    5               WHENRETURN DO;

     3103     8803    5                 RETURN;

   8803  6 006233   200066 221300                    LDX1  ! P$+1,,AUTO
         6 006234   000001 702211                    TSX2  ! 1,X1

     3104     8804    5                 END;
     3105     8805    4             END;

     3106     8806    3           ALTRETURN;

   8806  6 006235   200066 221300                    LDX1  ! P$+1,,AUTO
         6 006236   000000 702211                    TSX2  ! 0,X1

     3107     8807    3           END;
     3108     8808    2   END MATCHEMR;
     3109     8809    1   MATCHACCT: PROC (FO$DEV, FO$FIL) ALTRET;

   8809  6 006237   200074 741300       MATCHACCT    STX1  ! @FO$FIL+4,,AUTO

     3110     8810        /**/
     3111     8811        %FO_DEV (FPTN=FO$DEV,STCLASS="");
     3112     8910        %FO_FIL (FPTN=FO$FIL,STCLASS="");
     3113     9010    2   DCL ACCT CHAR(8);
     3114     9011    2         ACCT = FO$FIL.OJOB$ -> FO$JOB.ACCT;

   9011  6 006240   200076 470500                    LDP0    @FO$FIL,,AUTO
         6 006241   000003 471500                    LDP1    3,,PR0
         6 006242   040100 100500                    MLR     fill='040'O
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:350  
         6 006243   100004 000010                    ADSC9   4,,PR1                   cn=0,n=8
         6 006244   200077 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8

     3115     9012    2         IF FO$DEV.RACCTL > 0 THEN

   9012  6 006245   200075 471500                    LDP1    @FO$DEV,,AUTO
         6 006246   100014 236100                    LDQ     12,,PR1
         6 006247   000022 736000                    QLS     18
         6 006250   000033 732000                    QRS     27
         6 006251   000000 116003                    CMPQ    0,DU
         6 006252   006273 604400 6                  TMOZ    s:9025

     3116     9013    3           DO;

     3117     9014    3           I=FO$DEV.RACCTL;

   9014  6 006253   200005 756100                    STQ     I,,AUTO

     3118     9015    3           IF ADDR(FO$DEV.RACCT)->B$CHARS = ADDR(ACCT)->B$CHARS

   9015  6 006254   000000 620006                    EAX0    0,QL
         6 006255   200005 722100                    LXL2    I,,AUTO
         6 006256   040140 106540                    CMPC    fill='040'O
         6 006257   100020 200010                    ADSC9   16,,PR1                  cn=1,n=*X0
         6 006260   200077 000012                    ADSC9   ACCT,,AUTO               cn=0,n=*X2
         6 006261   006321 601000 6                  TNZ     s:9035

     3119     9016    4           THEN DO;

     3120     9017    4             CALL MATCHWSN (FO$DEV,FO$FIL)

   9017  6 006262   200076 236100                    LDQ     @FO$FIL,,AUTO
         6 006263   200104 756100                    STQ     @FO$DEV+1,,AUTO
         6 006264   200075 236100                    LDQ     @FO$DEV,,AUTO
         6 006265   200103 756100                    STQ     ACCT+4,,AUTO
         6 006266   006323 701000 6                  TSX1    MATCHWSN
         6 006267   006272 702000 6                  TSX2    s:9022
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:351  

     3121     9018    5             WHENRETURN DO;

     3122     9019    5               RETURN;

   9019  6 006270   200074 221300                    LDX1  ! @FO$FIL+4,,AUTO
         6 006271   000001 702211                    TSX2  ! 1,X1

     3123     9020    5               END;
     3124     9021    4             END;

     3125     9022    3           END;

   9022  6 006272   006321 710000 6                  TRA     s:9035

     3126     9023    2         ELSE
     3127     9024    3           DO;

     3128     9025    3           I=-FO$DEV.RACCTL;

   9025  6 006273   000027 676000 xsym               ERQ     B_VECTNIL+23
         6 006274   000001 036007                    ADLQ    1,DL
         6 006275   200005 756100                    STQ     I,,AUTO

     3129     9026    3           IF I <= FO$FIL.OJOB$->FO$JOB.ACCTL THEN

   9026  6 006276   000003 473500                    LDP3    3,,PR0
         6 006277   300006 236100                    LDQ     6,,PR3
         6 006300   000033 772000                    QRL     27
         6 006301   200005 116100                    CMPQ    I,,AUTO
         6 006302   006321 602000 6                  TNC     s:9035

     3130     9027    3            IF SUBSTR(FO$DEV.RACCT,1,I) = SUBSTR(ACCT,FO$FIL.OJOB$->FO$JOB.ACCTL-I,I)

   9027  6 006303   200005 136100                    SBLQ    I,,AUTO
         6 006304   200005 720100                    LXL0    I,,AUTO
         6 006305   040146 106540                    CMPC    fill='040'O
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:352  
         6 006306   100020 400010                    ADSC9   16,,PR1                  cn=2,n=*X0
         6 006307   200077 000010                    ADSC9   ACCT,Q,AUTO              cn=0,n=*X0
         6 006310   006321 601000 6                  TNZ     s:9035

     3131     9028    4            THEN DO;

     3132     9029    4              CALL MATCHWSN (FO$DEV,FO$FIL)

   9029  6 006311   200076 236100                    LDQ     @FO$FIL,,AUTO
         6 006312   200104 756100                    STQ     @FO$DEV+1,,AUTO
         6 006313   200075 236100                    LDQ     @FO$DEV,,AUTO
         6 006314   200103 756100                    STQ     ACCT+4,,AUTO
         6 006315   006323 701000 6                  TSX1    MATCHWSN
         6 006316   006321 702000 6                  TSX2    s:9035

     3133     9030    5              WHENRETURN DO;

     3134     9031    5                RETURN;

   9031  6 006317   200074 221300                    LDX1  ! @FO$FIL+4,,AUTO
         6 006320   000001 702211                    TSX2  ! 1,X1

     3135     9032    5                END;
     3136     9033    4              END;

     3137     9034    3           END;

     3138     9035    2         ALTRETURN;

   9035  6 006321   200074 221300                    LDX1  ! @FO$FIL+4,,AUTO
         6 006322   000000 702211                    TSX2  ! 0,X1

     3139     9036    2   END MATCHACCT;
     3140     9037    1   MATCHWSN: PROC (FO$DEV, FO$FIL) ALTRET;

   9037  6 006323   200102 741300       MATCHWSN     STX1  ! ACCT+3,,AUTO

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:353  
     3141     9038        /**/
     3142     9039        %FO_DEV (FPTN=FO$DEV,STCLASS="");
     3143     9138        %FO_FIL (FPTN=FO$FIL,STCLASS="");
     3144     9238
     3145     9239    2         WSN$ = FO$DEV.WSN$;

   9239  6 006324   200103 470500                    LDP0    @FO$DEV,,AUTO
         6 006325   000004 236100                    LDQ     4,,PR0
         6 006326   200010 756100                    STQ     WSN$,,AUTO

     3146     9240    3           DO WHILE (WSN$ ~= ADDR(NIL));

   9240  6 006327   006367 710000 6                  TRA     s:9249

     3147     9241    4             DO J = 0 TO (WSN$ -> FO$WSN.NWSNS - 1);

   9241  6 006330   200012 450100                    STZ     J,,AUTO
         6 006331   006361 710000 6                  TRA     s:9247+3

     3148     9242    4             IF FO$FIL.DESTR.WSN = WSN$ -> FO$WSN.WSN.WSN_NAME(J)

   9242  6 006332   200012 236100                    LDQ     J,,AUTO
         6 006333   000011 402007                    MPY     9,DL
         6 006334   200104 470500                    LDP0    @FO$FIL,,AUTO
         6 006335   200010 471500                    LDP1    WSN$,,AUTO
         6 006336   040106 106500                    CMPC    fill='040'O
         6 006337   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         6 006340   100002 000010                    ADSC9   2,Q,PR1                  cn=0,n=8
         6 006341   006356 601000 6                  TNZ     s:9247
         6 006342   200012 236100                    LDQ     J,,AUTO
         6 006343   000121 402007                    MPY     81,DL
         6 006344   000000 066506                    CMPB    filb='0'B
         6 006345   100004 060001                    BDSC    4,Q,PR1                  by=0,bit=6,n=1
         6 006346   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         6 006347   006356 601000 6                  TNZ     s:9247
         6 006350   000000 066506                    CMPB    filb='0'B
         6 006351   100004 070001                    BDSC    4,Q,PR1                  by=0,bit=7,n=1
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:354  
         6 006352   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         6 006353   006356 601000 6                  TNZ     s:9247

     3149     9243    4             AND WSN$ -> FO$WSN.WSN.NOT_USED(J) = '0'B
     3150     9244    4             AND WSN$ -> FO$WSN.WSN.ROUTED_OUT(J) = '0'B
     3151     9245    4             THEN
     3152     9246    4              RETURN;

   9246  6 006354   200102 221300                    LDX1  ! ACCT+3,,AUTO
         6 006355   000001 702211                    TSX2  ! 1,X1

     3153     9247    4             END;

   9247  6 006356   200012 235100                    LDA     J,,AUTO
         6 006357   000001 035007                    ADLA    1,DL
         6 006360   200012 755100                    STA     J,,AUTO
         6 006361   200010 470500                    LDP0    WSN$,,AUTO
         6 006362   200012 236100                    LDQ     J,,AUTO
         6 006363   000001 116100                    CMPQ    1,,PR0
         6 006364   006332 602000 6                  TNC     s:9242

     3154     9248    3           WSN$ = WSN$ -> FO$WSN.LNK$;

   9248  6 006365   000000 236100                    LDQ     0,,PR0
         6 006366   200010 756100                    STQ     WSN$,,AUTO

     3155     9249    3           END;

   9249  6 006367   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 006370   006330 601000 6                  TNZ     s:9241

     3156     9250    2         ALTRETURN;

   9250  6 006371   200102 221300                    LDX1  ! ACCT+3,,AUTO
         6 006372   000000 702211                    TSX2  ! 0,X1

     3157     9251    2   END MATCHWSN;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:355  
     3158     9252        /**************************************
     3159     9253         **************************************
     3160     9254                    LOCK_DEV
     3161     9255         **************************************
     3162     9256         **************************************/
     3163     9257        /*D* NAME:         LOCK_DEV
     3164     9258             PURPOSE:      To lock a symbiont device
     3165     9259             DESCRIPTION:  The device is locked and the appropriate consoles
     3166     9260                           informed. */
     3167     9261    1   LOCK_DEV: PROC;

   9261  6 006373   200062 741300       LOCK_DEV     STX1  ! SAV$+1,,AUTO

     3168     9262    2         DEV$->FO$DEV.FLG.LOCK='1'B;

   9262  6 006374   000000 470400 xsym               LDP0    FO_DEV$
         6 006375   000001 236007                    LDQ     1,DL
         6 006376   000012 256100                    ORSQ    10,,PR0

     3169     9263    2         OPMSG_RESP.SUBC=FOKR_LOCK#;

   9263  6 006377   003000 236007                    LDQ     1536,DL
         6 006400   000111 552010 1                  STBQ    OPMSG_RESP+5,'10'O

     3170     9264    2         OPMSG_RESP.DEVNM=DEVNAME;

   9264  6 006401   000000 237000 1                  LDAQ    DEVNAME
         6 006402   000107 755000 1                  STA     OPMSG_RESP+3
         6 006403   000110 756000 1                  STQ     OPMSG_RESP+4

     3171     9265    2         OPMSG_RESP.CADDR=M_UR;

   9265  6 006404   100000 220003                    LDX0    32768,DU
         6 006405   000104 740000 1                  STX0    OPMSG_RESP

     3172     9266    2         CALL M$WRITE (OCMSG_RESP);

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:356  
   9266  6 006406   000330 630400 2                  EPPR0   OCMSG_RESP
         6 006407   040001 713400                    CLIMB   write
         6 006410   401400 401760                    pmme    nvectors=4

     3173     9267    2         CALL FOR$DEVWR;

   9267  6 006411   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 006412   000000 701000 xent               TSX1    FOR$DEVWR
         6 006413   000000 011000                    NOP     0

     3174     9268    2         RETURN;

   9268  6 006414   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 006415   000001 702211                    TSX2  ! 1,X1

     3175     9269    2   END LOCK_DEV;
     3176     9270        /**************************************
     3177     9271         **************************************
     3178     9272                    SUSP_DEV
     3179     9273         **************************************
     3180     9274         **************************************/
     3181     9275    1   SUSP_DEV: PROC ALTRET;

   9275  6 006416   200060 741300       SUSP_DEV     STX1  ! ALSTAT+8,,AUTO

     3182     9276    2         CALL M$SYMBIO (SUSP_SYMB) ALTRET(ALTRT);

   9276  6 006417   000564 630400 2                  EPPR0   SUSP_SYMB
         6 006420   570000 713400                    CLIMB   alt,+61440
         6 006421   403400 401760                    pmme    nvectors=8
         6 006422   006434 702000 6                  TSX2    ALTRT

     3183     9277    2         DEV$->FO$DEV.TOKERSN=0;

   9277  6 006423   000000 470400 xsym               LDP0    FO_DEV$
         6 006424   000000 236003                    LDQ     0,DU
         6 006425   000015 552140                    STBQ    13,'40'O,PR0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:357  

     3184     9278    2         DEV$->FO$DEV.FLG.ACKEXP='0'B;

   9278  6 006426   000043 236000 7                  LDQ     35
         6 006427   000012 356100                    ANSQ    10,,PR0

     3185     9279    2         DEV$->FO$DEV.STATE=FOS_SPRQ#;

   9279  6 006430   003000 236007                    LDQ     1536,DL
         6 006431   000011 552110                    STBQ    9,'10'O,PR0

     3186     9280    2         RETURN;

   9280  6 006432   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 006433   000001 702211                    TSX2  ! 1,X1

   9279  6 006434                       ALTRT        null
     3187     9281    2   ALTRT:;
     3188     9282    2         ALTRETURN;

   9282  6 006434   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 006435   000000 702211                    TSX2  ! 0,X1

     3189     9283    2   END SUSP_DEV;
     3190     9284        /**************************************
     3191     9285         **************************************
     3192     9286                    DEV_EVSCREECH
     3193     9287         **************************************
     3194     9288         **************************************/
     3195     9289        /*D* NAME:         DEV_EVSCREECH
     3196     9290             PURPOSE:      To cause a SNAP due to bad event/state in FOD$EVENT
     3197     9291             DESCRIPTION:  This SNAP occurs when
     3198     9292                           1) an invalid event-state combination occurs
     3199     9293                           2) an invalid internal event subcode is reported
     3200     9294                              (e.g. bad quit code to DEV_QUIT)
     3201     9295
     3202     9296                           The cause can be determined by examining who called
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:358  
     3203     9297                           FOD$EVENT and why, and also which part of FOD$EVENT
     3204     9298                           called the SNAP issuing routine - DEV_EVSCREECH. */
     3205     9299    1   DEV_EVSCREECH: PROC;

   9299  6 006436   200060 741300       DEV_EVSCREE* STX1  ! ALSTAT+8,,AUTO

     3206     9300
     3207     9301    2         CALL FOI$SNAP (%S$BADEVS,F_FO,M_D);

   9301  6 006437   000045 630400 7                  EPPR0   37
         6 006440   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 006441   000000 701000 xent               TSX1    FOI$SNAP
         6 006442   000000 011000                    NOP     0

     3208     9302        /*S* SCREECH_CODE: FOD-S$BADEVS
     3209     9303             TYPE:         SNAP
     3210     9304             MESSAGE:      Bad event/state in OUTSYM device scheduler
     3211     9305             REMARKS:      This SNAP occurs when
     3212     9306                           1) an invalid event-state combination occurs
     3213     9307                           2) an invalid internal event subcode is reported
     3214     9308                              (e.g. bad quit code to DEV_QUIT)
     3215     9309
     3216     9310                           The cause can be determined by examining who called
     3217     9311                           FOD$EVENT and why, and also which part of FOD$EVENT
     3218     9312                           called the SNAP issuing routine - DEV_EVSCREECH. */
     3219     9313    2         RETURN;

   9313  6 006443   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 006444   000001 702211                    TSX2  ! 1,X1

     3220     9314    2   END DEV_EVSCREECH;
     3221     9315        /**************************************
     3222     9316         **************************************
     3223     9317                    CHK_ALG
     3224     9318         **************************************
     3225     9319         **************************************/
     3226     9320        /*D* NAME:         CHK_ALG
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:359  
     3227     9321             PURPOSE:      To check if a device is aligned
     3228     9322             DESCRIPTION:  ALTRETs if no with KERR = FOKE_DNALG */
     3229     9323    1   CHK_ALG: PROC ALTRET;

   9323  6 006445   200060 741300       CHK_ALG      STX1  ! ALSTAT+8,,AUTO

     3230     9324    2         IF DEV$->FO$DEV.FLG.ALGNED = '1'B THEN RETURN;

   9324  6 006446   000000 470400 xsym               LDP0    FO_DEV$
         6 006447   000012 236100                    LDQ     10,,PR0
         6 006450   004000 316007                    CANQ    2048,DL
         6 006451   006453 600000 6                  TZE     s:9325

   9324  6 006452   000001 702211                    TSX2  ! 1,X1

     3231     9325    2         KERR=FOKE_DNALG#;

   9325  6 006453   000021 235007                    LDA     17,DL
         6 006454   200026 755100                    STA     KERR,,AUTO

     3232     9326    2         ALTRETURN;

   9326  6 006455   000000 702211                    TSX2  ! 0,X1

     3233     9327    2   END CHK_ALG;
     3234     9328        /**************************************
     3235     9329         **************************************
     3236     9330                    CHK_AIP
     3237     9331         **************************************
     3238     9332         **************************************/
     3239     9333        /*D* NAME:         CHK_AIP
     3240     9334             PURPOSE:      To check if a device is doing a form alignment
     3241     9335             DESCRIPTION:  ALTRETs if yes with KERR = FOKE_DBALG */
     3242     9336    1   CHK_AIP: PROC ALTRET;

   9336  6 006456   200060 741300       CHK_AIP      STX1  ! ALSTAT+8,,AUTO

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:360  
     3243     9337    2         IF DEV$->FO$DEV.FLG.AIP = '0'B THEN RETURN;

   9337  6 006457   000000 470400 xsym               LDP0    FO_DEV$
         6 006460   000012 236100                    LDQ     10,,PR0
         6 006461   010000 316007                    CANQ    4096,DL
         6 006462   006464 601000 6                  TNZ     s:9338

   9337  6 006463   000001 702211                    TSX2  ! 1,X1

     3244     9338    2         KERR=FOKE_DBALG#;

   9338  6 006464   000017 235007                    LDA     15,DL
         6 006465   200026 755100                    STA     KERR,,AUTO

     3245     9339    2         ALTRETURN;

   9339  6 006466   000000 702211                    TSX2  ! 0,X1

     3246     9340    2   END CHK_AIP;
     3247     9341        /**************************************
     3248     9342         **************************************
     3249     9343                    CHK_KSYSID
     3250     9344         **************************************
     3251     9345         **************************************/
     3252     9346        /*D* NAME:         CHK_KSYSID
     3253     9347             PURPOSE:      To verify SYSID on certain device keyins
     3254     9348             DESCRIPTION:  Certain scary device keyins (e.g. ABORT) allow
     3255     9349                           the oper to type in the sysid he thinks is currently
     3256     9350                           on the device, such that if he is wrong about the
     3257     9351                           device's current file sysid, we will not perform
     3258     9352                           the operation.  This routine performs the check
     3259     9353                           and ALTRETs if he specified sysid and was wrong. */
     3260     9354    1   CHK_KSYSID: PROC ALTRET;

   9354  6 006467   200060 741300       CHK_KSYSID   STX1  ! ALSTAT+8,,AUTO

     3261     9355    2         IF KEYIN$->FO$DKEYIN.SYSID = 0 THEN RETURN;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:361  

   9355  6 006470   200004 470500                    LDP0    @DINFO,,AUTO
         6 006471   000000 471500                    LDP1    0,,PR0
         6 006472   100004 720100                    LXL0    4,,PR1
         6 006473   006475 601000 6                  TNZ     s:9356

   9355  6 006474   000001 702211                    TSX2  ! 1,X1

     3262     9356    2         IF DEV$->FO$DEV.CFIL$ = ADDR(NIL) THEN RETURN;

   9356  6 006475   000000 473400 xsym               LDP3    FO_DEV$
         6 006476   300002 236100                    LDQ     2,,PR3
         6 006477   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 006500   006502 601000 6                  TNZ     s:9357

   9356  6 006501   000001 702211                    TSX2  ! 1,X1

     3263     9357    2         IF DEV$->FO$DEV.CFIL$->FO$FIL.SYSID = KEYIN$->FO$DKEYIN.SYSID THEN RETURN;

   9357  6 006502   300002 474500                    LDP4    2,,PR3
         6 006503   400012 100100                    CMPX0   10,,PR4
         6 006504   006506 601000 6                  TNZ     s:9358

   9357  6 006505   000001 702211                    TSX2  ! 1,X1

     3264     9358    2         ALTRETURN;

   9358  6 006506   000000 702211                    TSX2  ! 0,X1

     3265     9359    2   END CHK_KSYSID;
     3266     9360        /**************************************
     3267     9361         **************************************
     3268     9362                    TCONMSG_DEV
     3269     9363                    BDBCMSG_DEV
     3270     9364                    FONMSG _DEV
     3271     9365                    FOFFMSG_DEV
     3272     9366         **************************************
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:362  
     3273     9367         **************************************/
     3274     9368    1   TCONMSG_DEV: PROC;

   9368  6 006507   200062 741300       TCONMSG_DEV  STX1  ! SAV$+1,,AUTO

     3275     9369    2         OPMSG_ANY.SUBC=BITBIN(DEV$->FO$DEV.FLG.LOCK);

   9369  6 006510   000000 470400 xsym               LDP0    FO_DEV$
         6 006511   000012 236100                    LDQ     10,,PR0
         6 006512   000001 376007                    ANQ     1,DL
         6 006513   000011 736000                    QLS     9
         6 006514   000121 552010 1                  STBQ    OPMSG_ANY+5,'10'O

     3276     9370    2         OPMSG_ANY.FORM=DEV$->FO$DEV.FORM;

   9370  6 006515   040000 100500                    MLR     fill='040'O
         6 006516   000015 600006                    ADSC9   13,,PR0                  cn=3,n=6
         6 006517   000121 600006 1                  ADSC9   OPMSG_ANY+5              cn=3,n=6

     3277     9371    2         OPMSG_ANY.MSG#=FO_TCON_MSG#;

   9371  6 006520   000177 220003                    LDX0    127,DU
         6 006521   000114 440000 1                  SXL0    OPMSG_ANY

     3278     9372    2         GOTO DOMSG;

   9372  6 006522   006602 710000 6                  TRA     DOMSG

     3279     9373    2   BDBCMSG_DEV: ENTRY;

   9373  6 006523   200062 741300       BDBCMSG_DEV  STX1  ! SAV$+1,,AUTO

     3280     9374    2         OPMSG_ANY.MSG#=FO_BDBC_MSG#;

   9374  6 006524   000171 220003                    LDX0    121,DU
         6 006525   000114 440000 1                  SXL0    OPMSG_ANY

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:363  
     3281     9375    2         GOTO DOMSG;

   9375  6 006526   006602 710000 6                  TRA     DOMSG

     3282     9376    2   FONMSG_DEV: ENTRY;

   9376  6 006527   200062 741300       FONMSG_DEV   STX1  ! SAV$+1,,AUTO

     3283     9377    2         OPMSG_ONOFF.MSG#=FO_FON_MSG#;

   9377  6 006530   000173 220003                    LDX0    123,DU
         6 006531   000133 440000 1                  SXL0    OPMSG_ONOFF

     3284     9378    2         GOTO DOFMSG;

   9378  6 006532   006536 710000 6                  TRA     DOFMSG

     3285     9379    2   FOFFMSG_DEV: ENTRY;

   9379  6 006533   200062 741300       FOFFMSG_DEV  STX1  ! SAV$+1,,AUTO

     3286     9380    2         OPMSG_ONOFF.MSG#=FO_FOFF_MSG#;

   9380  6 006534   000176 220003                    LDX0    126,DU
         6 006535   000133 440000 1                  SXL0    OPMSG_ONOFF

     3287     9381    2   DOFMSG:
     3288     9382    2         IF NOT FO_SYMBINFO.WATCH# THEN

   9382  6 006536   000021 235000 xsym  DOFMSG       LDA     FO_SYMBINFO+17
         6 006537   006551 601000 6                  TNZ     s:9388

     3289     9383    3           DO;

     3290     9384    3           IF FIL$->FO$FIL.FLG.GLC

   9384  6 006540   000000 470400 xsym               LDP0    FO_FIL$
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:364  
         6 006541   000015 236100                    LDQ     13,,PR0
         6 006542   000100 316007                    CANQ    64,DL
         6 006543   006551 600000 6                  TZE     s:9388
         6 006544   000004 316007                    CANQ    4,DL
         6 006545   006551 601000 6                  TNZ     s:9388
         6 006546   000002 235000 1                  LDA     DO_ONMSG
         6 006547   006551 601000 6                  TNZ     s:9388

     3291     9385    3           AND (NOT FIL$->FO$FIL.FLG.CHKPTD)
     3292     9386    3           AND DO_ONMSG = 0 THEN RETURN;

   9386  6 006550   000001 702211                    TSX2  ! 1,X1

     3293     9387    3           END;
     3294     9388    2         OPMSG_ONOFF.SYSID=FIL$->FO$FIL.SYSID;

   9388  6 006551   000000 470400 xsym               LDP0    FO_FIL$
         6 006552   000012 222100                    LDX2    10,,PR0
         6 006553   000134 742000 1                  STX2    OPMSG_ONOFF+1

     3295     9389    2         OPMSG_ONOFF.NUM=FIL$->FO$FIL.NUM;

   9389  6 006554   000000 100500                    MLR     fill='000'O
         6 006555   000012 400002                    ADSC9   10,,PR0                  cn=2,n=2
         6 006556   000140 600002 1                  ADSC9   OPMSG_ONOFF+5            cn=3,n=2

     3296     9390    2         OPMSG_ONOFF.COMMODE = BITBIN ( ~  FIL$->FO$FIL.FLG.GLC     );

   9390  6 006557   000015 236100                    LDQ     13,,PR0
         6 006560   000035 736000                    QLS     29
         6 006561   400000 376003                    ANQ     -131072,DU
         6 006562   400000 676003                    ERQ     -131072,DU
         6 006563   000043 772000                    QRL     35
         6 006564   000022 736000                    QLS     18
         6 006565   000141 552020 1                  STBQ    OPMSG_ONOFF+6,'20'O

     3297     9391    2         OPMSG_ONOFF.CHKPTD=BITBIN(FIL$->FO$FIL.FLG.CHKPTD);
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:365  

   9391  6 006566   000015 236100                    LDQ     13,,PR0
         6 006567   000002 772000                    QRL     2
         6 006570   000001 376007                    ANQ     1,DL
         6 006571   000011 736000                    QLS     9
         6 006572   000141 552010 1                  STBQ    OPMSG_ONOFF+6,'10'O

     3298     9392    2         OPMSG_ONOFF.DEVNM=DEVNAME;

   9392  6 006573   000000 237000 1                  LDAQ    DEVNAME
         6 006574   000136 757000 1                  STAQ    OPMSG_ONOFF+3

     3299     9393    2         CALL M$WRITE (OCMSG_ONOFF);

   9393  6 006575   000374 630400 2                  EPPR0   OCMSG_ONOFF
         6 006576   040001 713400                    CLIMB   write
         6 006577   401400 401760                    pmme    nvectors=4

     3300     9394    2         RETURN;

   9394  6 006600   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 006601   000001 702211                    TSX2  ! 1,X1

   9392  6 006602                       DOMSG        null
     3301     9395
     3302     9396    2   DOMSG:;
     3303     9397    2         OPMSG_ANY.DEVNM=DEVNAME;

   9397  6 006602   000000 237000 1                  LDAQ    DEVNAME
         6 006603   000117 755000 1                  STA     OPMSG_ANY+3
         6 006604   000120 756000 1                  STQ     OPMSG_ANY+4

     3304     9398    2         CALL M$WRITE (OCMSG_ANY);

   9398  6 006605   000300 630400 2                  EPPR0   OCMSG_ANY
         6 006606   040001 713400                    CLIMB   write
         6 006607   401400 401760                    pmme    nvectors=4
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:366  

     3305     9399    2         RETURN;

   9399  6 006610   200062 221300                    LDX1  ! SAV$+1,,AUTO
         6 006611   000001 702211                    TSX2  ! 1,X1

     3306     9400    2   END TCONMSG_DEV;
     3307     9401        /**************************************
     3308     9402         **************************************
     3309     9403                    REM_DEV
     3310     9404         **************************************
     3311     9405         **************************************/
     3312     9406    1   REM_DEV: PROC;

   9406  6 006612   200060 741300       REM_DEV      STX1  ! ALSTAT+8,,AUTO

     3313     9407
     3314     9408    2         CALL REL_ALR;

   9408  6 006613   005155 701000 6                  TSX1    REL_ALR
         6 006614   000000 011000                    NOP     0

     3315     9409
     3316     9410    2         P$=FO_Q.DEVHD$;

   9410  6 006615   000002 236000 xsym               LDQ     FO_Q+2
         6 006616   200006 756100                    STQ     P$,,AUTO

     3317     9411              %JLOCK;

   9412  6 006617   000000 054000 xsym               AOS     FO_Q

     3318     9414    2         IF DEV$=P$ THEN

   9414  6 006620   000000 116000 xsym               CMPQ    FO_DEV$
         6 006621   006626 601000 6                  TNZ     s:9422

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:367  
     3319     9415    3           DO;

     3320     9416    3           FO_Q.DEVHD$=DEV$->FO$DEV.LNK$;

   9416  6 006622   000000 470400 xsym               LDP0    FO_DEV$
         6 006623   000000 236100                    LDQ     0,,PR0
         6 006624   000002 756000 xsym               STQ     FO_Q+2

     3321     9417    3           GOTO DONE;

   9417  6 006625   006635 710000 6                  TRA     DONE

     3322     9418    3           END;
     3323     9419
     3324     9420
     3325     9421    3           DO FOREVER;

     3326     9422    3           IF P$->FO$DEV.LNK$=DEV$ THEN

   9422  6 006626   200006 470500                    LDP0    P$,,AUTO
         6 006627   000000 236100                    LDQ     0,,PR0
         6 006630   000000 116000 xsym               CMPQ    FO_DEV$
         6 006631   006670 601000 6                  TNZ     s:9438

     3327     9423    4             DO;

     3328     9424    4             P$->FO$DEV.LNK$=DEV$->FO$DEV.LNK$;

   9424  6 006632   000000 471400 xsym               LDP1    FO_DEV$
         6 006633   100000 236100                    LDQ     0,,PR1
         6 006634   000000 756100                    STQ     0,,PR0

   9424  6 006635                       DONE         null
     3329     9425    4   DONE:     ;
     3330     9426    4             WSN$ = DEV$ -> FO$DEV.WSN$;

   9426  6 006635   000000 470400 xsym               LDP0    FO_DEV$
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:368  
         6 006636   000004 236100                    LDQ     4,,PR0
         6 006637   200010 756100                    STQ     WSN$,,AUTO

     3331     9427    5               DO WHILE (WSN$ ~= ADDR(NIL));

   9427  6 006640   006656 710000 6                  TRA     s:9431

     3332     9428    5               LNK_WSN$ = WSN$ -> FO$WSN.LNK$;

   9428  6 006641   200010 470500                    LDP0    WSN$,,AUTO
         6 006642   000000 236100                    LDQ     0,,PR0
         6 006643   200016 756100                    STQ     LNK_WSN$,,AUTO

     3333     9429    5               CALL FOI$RBUF (FO_DEVSCB,WSN$);

   9429  6 006644   200010 631500                    EPPR1   WSN$,,AUTO
         6 006645   200107 451500                    STP1    @FO$FIL+3,,AUTO
         6 006646   000050 236000 7                  LDQ     40
         6 006647   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 006650   200106 630500                    EPPR0   @FO$FIL+2,,AUTO
         6 006651   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 006652   000000 701000 xent               TSX1    FOI$RBUF
         6 006653   000000 011000                    NOP     0

     3334     9430    5               WSN$ = LNK_WSN$;

   9430  6 006654   200016 236100                    LDQ     LNK_WSN$,,AUTO
         6 006655   200010 756100                    STQ     WSN$,,AUTO

     3335     9431    5               END;

   9431  6 006656   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 006657   006641 601000 6                  TNZ     s:9428

     3336     9432    4             CALL FOI$RBUF (FO_DEVSCB,DEV$);

   9432  6 006660   000051 630400 7                  EPPR0   41
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:369  
         6 006661   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 006662   000000 701000 xent               TSX1    FOI$RBUF
         6 006663   000000 011000                    NOP     0

     3337     9433                  %JUNLOCK;

   9434  6 006664   000001 336007                    LCQ     1,DL
         6 006665   000000 056000 xsym               ASQ     FO_Q

     3338     9436    4             RETURN;

   9436  6 006666   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 006667   000001 702211                    TSX2  ! 1,X1

     3339     9437    4             END;
     3340     9438    3           P$=P$->FO$DEV.LNK$;

   9438  6 006670   200006 756100                    STQ     P$,,AUTO

     3341     9439    3           END;

   9439  6 006671   006626 710000 6                  TRA     s:9422

     3342     9440    2   END REM_DEV;
     3343     9441        /**************************************
     3344     9442         **************************************
     3345     9443                    MATCHDEV
     3346     9444         **************************************
     3347     9445         **************************************/
     3348     9446    1   MATCHDEV: PROC ALTRET;

   9446  6 006672   200060 741300       MATCHDEV     STX1  ! ALSTAT+8,,AUTO

     3349     9447    2         WSN_TOTAL = 0;

   9447  6 006673   200017 450100                    STZ     WSN_TOTAL,,AUTO

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:370  
     3350     9448    2         WSN$ = DEV$ -> FO$DEV.WSN$;

   9448  6 006674   000000 470400 xsym               LDP0    FO_DEV$
         6 006675   000004 236100                    LDQ     4,,PR0
         6 006676   200010 756100                    STQ     WSN$,,AUTO

     3351     9449    3           DO WHILE (WSN$ ~= ADDR(NIL));

   9449  6 006677   006731 710000 6                  TRA     s:9457

     3352     9450    4             DO I = 0 TO (WSN$ -> FO$WSN.NWSNS - 1);

   9450  6 006700   200005 450100                    STZ     I,,AUTO
         6 006701   006723 710000 6                  TRA     s:9455+3

     3353     9451    4             IF WSN$ -> FO$WSN.WSN.ORIGINAL(I) = '1'B

   9451  6 006702   200005 236100                    LDQ     I,,AUTO
         6 006703   000121 402007                    MPY     81,DL
         6 006704   200010 470500                    LDP0    WSN$,,AUTO
         6 006705   000000 066506                    CMPB    filb='0'B
         6 006706   000004 050001                    BDSC    4,Q,PR0                  by=0,bit=5,n=1
         6 006707   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         6 006710   006715 601000 6                  TNZ     s:9454
         6 006711   000000 066506                    CMPB    filb='0'B
         6 006712   000004 100001                    BDSC    4,Q,PR0                  by=0,bit=8,n=1
         6 006713   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         6 006714   006720 600000 6                  TZE     s:9455

     3354     9452    4             OR WSN$ -> FO$WSN.WSN.ADD_ON(I) = '1'B
     3355     9453    4             THEN
     3356     9454    4              WSN_TOTAL = WSN_TOTAL + 1;

   9454  6 006715   200017 235100                    LDA     WSN_TOTAL,,AUTO
         6 006716   000001 035007                    ADLA    1,DL
         6 006717   200017 755100                    STA     WSN_TOTAL,,AUTO

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:371  
     3357     9455    4             END;

   9455  6 006720   200005 235100                    LDA     I,,AUTO
         6 006721   000001 035007                    ADLA    1,DL
         6 006722   200005 755100                    STA     I,,AUTO
         6 006723   200010 470500                    LDP0    WSN$,,AUTO
         6 006724   200005 236100                    LDQ     I,,AUTO
         6 006725   000001 116100                    CMPQ    1,,PR0
         6 006726   006702 602000 6                  TNC     s:9451

     3358     9456    3           WSN$ = WSN$ -> FO$WSN.LNK$;

   9456  6 006727   000000 236100                    LDQ     0,,PR0
         6 006730   200010 756100                    STQ     WSN$,,AUTO

     3359     9457    3           END;

   9457  6 006731   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 006732   006700 601000 6                  TNZ     s:9450

     3360     9458
     3361     9459    2         WSN_TALLY = 0;

   9459  6 006733   200020 450100                    STZ     WSN_TALLY,,AUTO

     3362     9460    2         WSN$ = DEV$ -> FO$DEV.WSN$;

   9460  6 006734   000000 470400 xsym               LDP0    FO_DEV$
         6 006735   000004 236100                    LDQ     4,,PR0
         6 006736   200010 756100                    STQ     WSN$,,AUTO

     3363     9461    3           DO WHILE (WSN$ ~= ADDR(NIL));

   9461  6 006737   007051 710000 6                  TRA     s:9493

     3364     9462    4             DO I = 0 TO (WSN$ -> FO$WSN.NWSNS - 1);

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:372  
   9462  6 006740   200005 450100                    STZ     I,,AUTO
         6 006741   007043 710000 6                  TRA     NEXT_WSN+3

     3365     9463    4             IF WSN$ -> FO$WSN.WSN.ROUTED_OUT(I) = '1'B

   9463  6 006742   200005 236100                    LDQ     I,,AUTO
         6 006743   000121 402007                    MPY     81,DL
         6 006744   200010 470500                    LDP0    WSN$,,AUTO
         6 006745   000000 066506                    CMPB    filb='0'B
         6 006746   000004 070001                    BDSC    4,Q,PR0                  by=0,bit=7,n=1
         6 006747   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         6 006750   007040 601000 6                  TNZ     NEXT_WSN
         6 006751   000000 066506                    CMPB    filb='0'B
         6 006752   000004 060001                    BDSC    4,Q,PR0                  by=0,bit=6,n=1
         6 006753   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         6 006754   007040 601000 6                  TNZ     NEXT_WSN

     3366     9464    4             OR WSN$ -> FO$WSN.WSN.NOT_USED(I) = '1'B
     3367     9465    4             THEN
     3368     9466    4              GOTO NEXT_WSN;
     3369     9467    4             P$ = FO_Q.DEVHD$;

   9467  6 006755   000002 236000 xsym               LDQ     FO_Q+2
         6 006756   200006 756100                    STQ     P$,,AUTO

     3370     9468    5               DO WHILE (P$ ~= ADDR(NIL));

   9468  6 006757   007036 710000 6                  TRA     s:9489

     3371     9469    5               IF P$ ~= DEV$

   9469  6 006760   200006 236100                    LDQ     P$,,AUTO
         6 006761   000000 116000 xsym               CMPQ    FO_DEV$
         6 006762   007033 600000 6                  TZE     s:9488

     3372     9470    6               THEN DO;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:373  
     3373     9471    6                 IF P$ -> FO$DEV.NATTR = DEV$ -> FO$DEV.NATTR

   9471  6 006763   200006 470500                    LDP0    P$,,AUTO
         6 006764   000011 220100                    LDX0    9,,PR0
         6 006765   000000 471400 xsym               LDP1    FO_DEV$
         6 006766   100011 100100                    CMPX0   9,,PR1
         6 006767   007033 601000 6                  TNZ     s:9488
         6 006770   000005 221100                    LDX1    5,,PR0
         6 006771   100005 101100                    CMPX1   5,,PR1
         6 006772   007033 601000 6                  TNZ     s:9488

     3374     9472    6                 AND P$ -> FO$DEV.NAMER.TYP = DEV$ -> FO$DEV.NAMER.TYP
     3375     9473    7                 THEN DO;

     3376     9474    7                   P_WSN$ = P$ -> FO$DEV.WSN$;

   9474  6 006773   000004 236100                    LDQ     4,,PR0
         6 006774   200011 756100                    STQ     P_WSN$,,AUTO

     3377     9475    8                     DO WHILE (P_WSN$ ~= ADDR(NIL));

   9475  6 006775   007031 710000 6                  TRA     s:9485

     3378     9476    9                       DO J = 0 TO (P_WSN$ -> FO$WSN.NWSNS - 1);

   9476  6 006776   200012 450100                    STZ     J,,AUTO
         6 006777   007023 710000 6                  TRA     s:9483+3

     3379     9477    9                       IF WSN$ -> FO$WSN.WSN.WSN_NAME(I)

   9477  6 007000   200005 236100                    LDQ     I,,AUTO
         6 007001   000011 402007                    MPY     9,DL
         6 007002   200106 756100                    STQ     @FO$FIL+2,,AUTO
         6 007003   200012 236100                    LDQ     J,,AUTO
         6 007004   000011 402007                    MPY     9,DL
         6 007005   200010 470500                    LDP0    WSN$,,AUTO
         6 007006   200106 235100                    LDA     @FO$FIL+2,,AUTO
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:374  
         6 007007   200011 471500                    LDP1    P_WSN$,,AUTO
         6 007010   040106 106505                    CMPC    fill='040'O
         6 007011   000002 000010                    ADSC9   2,A,PR0                  cn=0,n=8
         6 007012   100002 000010                    ADSC9   2,Q,PR1                  cn=0,n=8
         6 007013   007020 601000 6                  TNZ     s:9483

     3380     9478    9                       = P_WSN$ -> FO$WSN.WSN.WSN_NAME(J)
     3381     9479   10                       THEN DO;

     3382     9480   10                         WSN_TALLY = WSN_TALLY + 1;

   9480  6 007014   200020 235100                    LDA     WSN_TALLY,,AUTO
         6 007015   000001 035007                    ADLA    1,DL
         6 007016   200020 755100                    STA     WSN_TALLY,,AUTO

     3383     9481   10                         GOTO NEXT_WSN;

   9481  6 007017   007040 710000 6                  TRA     NEXT_WSN

     3384     9482   10                         END;
     3385     9483    9                       END; /* J = 0 */

   9483  6 007020   200012 235100                    LDA     J,,AUTO
         6 007021   000001 035007                    ADLA    1,DL
         6 007022   200012 755100                    STA     J,,AUTO
         6 007023   200011 470500                    LDP0    P_WSN$,,AUTO
         6 007024   200012 236100                    LDQ     J,,AUTO
         6 007025   000001 116100                    CMPQ    1,,PR0
         6 007026   007000 602000 6                  TNC     s:9477

     3386     9484    8                     P_WSN$ = P_WSN$ -> FO$WSN.LNK$;

   9484  6 007027   000000 236100                    LDQ     0,,PR0
         6 007030   200011 756100                    STQ     P_WSN$,,AUTO

     3387     9485    8                     END;   /* DO WHILE */

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:375  
   9485  6 007031   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 007032   006776 601000 6                  TNZ     s:9476

     3388     9486    7                   END;     /* IF P$ */

     3389     9487    6                 END;       /* IF P$ */

     3390     9488    5               P$ = P$ -> FO$DEV.LNK$;

   9488  6 007033   200006 470500                    LDP0    P$,,AUTO
         6 007034   000000 236100                    LDQ     0,,PR0
         6 007035   200006 756100                    STQ     P$,,AUTO

     3391     9489    5               END;         /* DO WHILE P$ */

   9489  6 007036   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 007037   006760 601000 6                  TNZ     s:9469

   9479  6 007040                       NEXT_WSN     null
     3392     9490    4   NEXT_WSN: ;
     3393     9491    4             END;           /* DO I = 0 */

   9491  6 007040   200005 235100                    LDA     I,,AUTO
         6 007041   000001 035007                    ADLA    1,DL
         6 007042   200005 755100                    STA     I,,AUTO
         6 007043   200010 470500                    LDP0    WSN$,,AUTO
         6 007044   200005 236100                    LDQ     I,,AUTO
         6 007045   000001 116100                    CMPQ    1,,PR0
         6 007046   006742 602000 6                  TNC     s:9463

     3394     9492    3           WSN$ = WSN$ -> FO$WSN.LNK$;

   9492  6 007047   000000 236100                    LDQ     0,,PR0
         6 007050   200010 756100                    STQ     WSN$,,AUTO

     3395     9493    3           END;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:376  
   9493  6 007051   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 007052   006740 601000 6                  TNZ     s:9462

     3396     9494
     3397     9495    2         IF WSN_TOTAL = WSN_TALLY

   9495  6 007053   200017 236100                    LDQ     WSN_TOTAL,,AUTO
         6 007054   200020 116100                    CMPQ    WSN_TALLY,,AUTO
         6 007055   007060 601000 6                  TNZ     s:9499

     3398     9496    2         THEN
     3399     9497    2          ALTRETURN;

   9497  6 007056   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 007057   000000 702211                    TSX2  ! 0,X1

     3400     9498    2         ELSE
     3401     9499    2          RETURN;

   9499  6 007060   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 007061   000001 702211                    TSX2  ! 1,X1

     3402     9500    2   END MATCHDEV;
     3403     9501        /**************************************
     3404     9502         **************************************
     3405     9503                    AVAIL
     3406     9504         **************************************
     3407     9505         **************************************/
     3408     9506        /*D* NAME:         AVAIL
     3409     9507             PURPOSE:      To re-set FLG.LPAVAIL for all files when
     3410     9508                           a new device connects.
     3411     9509        */
     3412     9510    1   AVAIL: PROC;

   9510  6 007062   200060 741300       AVAIL        STX1  ! ALSTAT+8,,AUTO

     3413     9511    3           DO I = 0 TO FOPR_MAX#;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:377  

   9511  6 007063   200005 450100                    STZ     I,,AUTO

     3414     9512    3           FIL$=FO_Q.FILHD$(I);

   9512  6 007064   200005 720100                    LXL0    I,,AUTO
         6 007065   000004 236010 xsym               LDQ     FO_Q+4,X0
         6 007066   000000 756000 xsym               STQ     FO_FIL$

     3415     9513    4             DO WHILE (FIL$ ~= ADDR(NIL));

   9513  6 007067   007104 710000 6                  TRA     s:9518

     3416     9514    4             IF FIL$->FO$FIL.FLG.LPAVAIL = '0'B THEN

   9514  6 007070   000000 470400 xsym               LDP0    FO_FIL$
         6 007071   000015 236100                    LDQ     13,,PR0
         6 007072   000400 316007                    CANQ    256,DL
         6 007073   007076 601000 6                  TNZ     s:9516

     3417     9515    4              CALL MATCHEM2 ALTRET(NXTFIL);

   9515  6 007074   006103 701000 6                  TSX1    MATCHEM2
         6 007075   007101 702000 6                  TSX2    NXTFIL

     3418     9516    4             FIL$->FO$FIL.FLG.LPAVAIL='1'B;

   9516  6 007076   000000 470400 xsym               LDP0    FO_FIL$
         6 007077   000400 236007                    LDQ     256,DL
         6 007100   000015 256100                    ORSQ    13,,PR0

     3419     9517    4   NXTFIL:   FIL$=FIL$->FO$FIL.LNK$;

   9517  6 007101   000000 470400 xsym  NXTFIL       LDP0    FO_FIL$
         6 007102   000000 236100                    LDQ     0,,PR0
         6 007103   000000 756000 xsym               STQ     FO_FIL$

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:378  
     3420     9518    4             END;

   9518  6 007104   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 007105   007070 601000 6                  TNZ     s:9514

     3421     9519    3           END;

   9519  6 007106   200005 235100                    LDA     I,,AUTO
         6 007107   000001 035007                    ADLA    1,DL
         6 007110   200005 755100                    STA     I,,AUTO
         6 007111   000023 115007                    CMPA    19,DL
         6 007112   007064 602000 6                  TNC     s:9512

     3422     9520    2         RETURN;

   9520  6 007113   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 007114   000001 702211                    TSX2  ! 1,X1

     3423     9521    2   END AVAIL;
     3424     9522        /**************************************
     3425     9523         **************************************
     3426     9524                    UNAVAIL
     3427     9525         **************************************
     3428     9526         **************************************/
     3429     9527        /*D* NAME:         UNAVAIL
     3430     9528             PURPOSE:      To re-set FLG.LPAVAIL for all files when
     3431     9529                           a device disconnects.
     3432     9530        */
     3433     9531    1   UNAVAIL: PROC;

   9531  6 007115   200060 741300       UNAVAIL      STX1  ! ALSTAT+8,,AUTO

     3434     9532        /**/
     3435     9533    2   DCL SAV$ PTR;
     3436     9534        /**/
     3437     9535    2         SAV$=DEV$;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:379  
   9535  6 007116   000000 236000 xsym               LDQ     FO_DEV$
         6 007117   200061 756100                    STQ     SAV$,,AUTO

     3438     9536    3           DO I = 0 TO FOPR_MAX#;

   9536  6 007120   200005 450100                    STZ     I,,AUTO

     3439     9537    3           FIL$=FO_Q.FILHD$(I);

   9537  6 007121   200005 720100                    LXL0    I,,AUTO
         6 007122   000004 236010 xsym               LDQ     FO_Q+4,X0
         6 007123   000000 756000 xsym               STQ     FO_FIL$

     3440     9538    4             DO WHILE (FIL$ ~= ADDR(NIL));

   9538  6 007124   007137 710000 6                  TRA     s:9542

     3441     9539    4             IF FIL$->FO$FIL.FLG.LPAVAIL THEN

   9539  6 007125   000000 470400 xsym               LDP0    FO_FIL$
         6 007126   000015 236100                    LDQ     13,,PR0
         6 007127   000400 316007                    CANQ    256,DL
         6 007130   007134 600000 6                  TZE     s:9541

     3442     9540    4              CALL FOD$AVAIL;

   9540  6 007131   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 007132   004241 701000 6                  TSX1    s:7749
         6 007133   000000 011000                    NOP     0

     3443     9541    4             FIL$=FIL$->FO$FIL.LNK$;

   9541  6 007134   000000 470400 xsym               LDP0    FO_FIL$
         6 007135   000000 236100                    LDQ     0,,PR0
         6 007136   000000 756000 xsym               STQ     FO_FIL$

     3444     9542    4             END;
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:380  

   9542  6 007137   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 007140   007125 601000 6                  TNZ     s:9539

     3445     9543    3           END;

   9543  6 007141   200005 235100                    LDA     I,,AUTO
         6 007142   000001 035007                    ADLA    1,DL
         6 007143   200005 755100                    STA     I,,AUTO
         6 007144   000023 115007                    CMPA    19,DL
         6 007145   007121 602000 6                  TNC     s:9537

     3446     9544    2         DEV$=SAV$;

   9544  6 007146   200061 236100                    LDQ     SAV$,,AUTO
         6 007147   000000 756000 xsym               STQ     FO_DEV$

     3447     9545    2         RETURN;

   9545  6 007150   200060 221300                    LDX1  ! ALSTAT+8,,AUTO
         6 007151   000001 702211                    TSX2  ! 1,X1
     3448     9546    2   END UNAVAIL;
     3449     9547        /**/
     3450     9548    1   END FOD$DEV;

PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:381  
--  Include file information  --

   M_ERRORS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   FO_SCODE_C.:E05TOU  is referenced.
   FOM$STRUCT.:E05TOU  is referenced.
   FOO_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   FS$FIT.:E05TOU  is referenced.
   FOO_SUBS_C.:E05TOU  is referenced.
   FOM_SUBS_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   KC_SUBS_C.:E05TOU  is referenced.
   KC_ERRORS_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   FO_ERRORS_C.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   FM$GRAN.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure FOD$DEV.
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:382  

 **** Variables and constants ****

  ****  Section 001  Data  FOD$DEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    54-0-0/w STRC(324)   r     1 ALKEYIN                    6-0-0/w STRC(810)   r     1 CHKPREC
     6-0-0/w CHAR(90)    r     1 CHKPRECR                 252-0-0/d STRC(1080)  r     1 CONT_SYMB
     0-0-0/d CHAR(8)     r     1 DEVNAME                    2-0-0/w UBIN        r     1 DO_ONMSG
     4-0-0/d STRC(72)    r     1 EXTENT                   646-0-0/d STRC(288)   r     1 LOG_ERR
    46-0-0/w STRC(216)   r     1 LOG_ERR_BUF              142-0-0/c STRC(225)   r     1 OPMSG_AERR
   114-0-0/c STRC(261)   r     1 OPMSG_ANY                164-0-0/c STRC(630)   r     1 OPMSG_FPERR
   151-0-0/c STRC(378)   r     1 OPMSG_IALN               124-0-0/c STRC(243)   r     1 OPMSG_KERR
   133-0-0/c STRC(243)   r     1 OPMSG_ONOFF              104-0-0/c STRC(279)   r     1 OPMSG_RESP
    65-0-0/c STRC(324)   r     1 OPMSG_SUSP                76-0-0/c STRC(198)   r     1 OPMSG_TDSC
   206-0-0/c STRC(180)   r     1 OPMSG_UNIMP              710-0-0/d STRC(144)   r     1 RESET_PRIVS
   346-0-0/d STRC(1080)  r     1 SPACEBLKS_SYMB           310-0-0/d STRC(1080)  r     1 SPACE_SYMB
    35-0-0/w STRC(324)   r     1 SPKEYIN                  214-0-0/d STRC(1080)  r     1 START_SYMB
   656-0-0/d STRC(612)   r     1 SYMB_FPRG                700-0-0/w STRC(288)   r     1 SYMB_STA
   500-0-0/d STRC(1296)  r     1 WCB_REC                  442-0-0/d STRC(1080)  r     1 WCB_SYMB
   610-0-0/d STRC(1080)  r     1 WGR_SYMB                 544-0-0/d STRC(1296)  r     1 WLR_REC
   404-0-0/d STRC(1080)  r     1 WLR_SYMB

  ****  Section 002 RoData FOD$DEV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/w CHAR(40)    r     1 ABTMSGS(0:11)            240-0-0/d STRC(576)   r     1 ACT_FPRG
   526-0-0/d STRC(1080)  r     1 CLOSE_SYMB               260-0-0/d STRC(576)   r     1 DEA_FPRG
   200-0-0/d STRC(576)   r     1 DISCT_DEV                220-0-0/d STRC(576)   r     1 DSCGO_DEV
     0-0-0/c CHAR(32)    r     1 FABTMSG                  470-0-0/d STRC(1080)  r     1 NXTEXT_SYMB
   344-0-0/d STRC(432)   r     1 OCMSG_AERR               300-0-0/d STRC(432)   r     1 OCMSG_ANY
   440-0-0/d STRC(432)   r     1 OCMSG_FPERR              424-0-0/d STRC(432)   r     1 OCMSG_IALN
   410-0-0/d STRC(432)   r     1 OCMSG_KERR               374-0-0/d STRC(432)   r     1 OCMSG_ONOFF
   330-0-0/d STRC(432)   r     1 OCMSG_RESP               314-0-0/d STRC(432)   r     1 OCMSG_SUSP
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:383  
   360-0-0/d STRC(432)   r     1 OCMSG_TDSC               454-0-0/d STRC(432)   r     1 OCMSG_UNIMP
   660-0-0/d STRC(432)   r     1 START_FPRG               564-0-0/d STRC(1080)  r     1 SUSP_SYMB
   622-0-0/d STRC(1080)  r     1 TOKEN_SYMB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DINFO                     3-0-0/w PTR         r     1 @EVENT
    67-0-0/w PTR         r     1 @FO$DEV                   75-0-0/w PTR         r     1 @FO$DEV
   103-0-0/w PTR         r     1 @FO$DEV                   70-0-0/w PTR         r     1 @FO$FIL
    76-0-0/w PTR         r     1 @FO$FIL                  104-0-0/w PTR         r     1 @FO$FIL
    77-0-0/c CHAR(8)     r     1 ACCT                      47-0-0/w UBIN        r     1 ACKTYP
    50-0-0/w STRC(72)    r     1 ALSTAT                    30-0-0/w UBIN        r     1 BLK#
    33-0-0/w UBIN        r     1 BLOCK                     *0-0-0/w UBIN        r     1 DINFO
    *0-0-0/w UBIN        r     1 EVENT                     45-0-0/w PTR         r     1 EXT$
    41-0-0/w PTR         r     1 EXTBLNK$                  21-0-0/w UBIN        r     1 FIL_CNUM
    *0-0-0/w STRC(657)   r     1 FO$DEV                    *0-0-0/w STRC(657)   r     1 FO$DEV
    *0-0-0/w STRC(657)   r     1 FO$DEV                    *0-0-0/w STRC(1332)  r     1 FO$FIL
    *0-0-0/w STRC(1332)  r     1 FO$FIL                    *0-0-0/w STRC(1332)  r     1 FO$FIL
    27-0-0/w UBIN        r     1 FRDAD                     36-0-0/w PTR         r     1 GRAN$
    34-0-0/w UBIN        r     1 GRANS                     31-0-0/w UBIN        r     1 HASH
     5-0-0/w UBIN        r     1 I                         *0-0-0/w UBIN        r     1 INFO
    *0-0-0/w STRC        r     1 INFOB                     12-0-0/w UBIN        r     1 J
    26-0-0/w UBIN        r     1 KERR                      *0-0-0/w PTR         r     1 KEYIN$
    16-0-0/w PTR         r     1 LNK_WSN$                  46-0-0/w UBIN        r     1 LOGIT
    *0-0-0/w UBIN        r     1 NOSTART                   24-0-0/w UBIN        r     1 OLDQUITRSN
     6-0-0/w PTR         r     1 P$                        65-0-0/w PTR         r     1 P$
    43-0-0/w SBIN        r     1 PAGES                     *0-0-0/w PTR         r     1 PREVLEXT$
    25-0-0/w UBIN        r     1 PRIO                      11-0-0/w PTR         r     1 P_WSN$
    23-0-0/w UBIN        r     1 QUITRSN                   40-0-0/w PTR         r     1 REC$
    61-0-0/w PTR         r     1 SAV$                      32-0-0/w PTR         r     1 SAVFIL$
    42-0-0/w STRC        r     1 STAMP                     44-0-0/w UBIN        r     1 STATE
    37-0-0/w UBIN        r     1 TOKERSN                   14-0-0/c CHAR(8)     r     1 WSN
    10-0-0/w PTR         r     1 WSN$                      20-0-0/w UBIN        r     1 WSN_TALLY
    17-0-0/w UBIN        r     1 WSN_TOTAL
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:384  

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w UBIN        r     1 FO_DET                     0-0-0/w STRC(720)   r     1 FO_DETL(0:8191)
     0-0-0/w UBIN        r     1 FO_DETX                    0-0-0/w PTR         r     1 FO_DEV$
     0-0-0/w STRC(288)   r     1 FO_DEVSCB                  0-0-0/w STRC(288)   r     1 FO_FFRSCB
     0-0-0/w PTR         r     1 FO_FIL$                    0-0-0/w PTR         r     1 FO_JOB$
     0-0-0/d STRC(1512)  r     1 FO_Q                       0-0-0/w STRC(288)   r     1 FO_SPGSCB
     0-0-0/w STRC(1152)  r     1 FO_SYMBINFO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/c ACHR        r     1 B$CHARS
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(657)   r     1 FO$DEV                     0-0-0/w STRC(324)   r     1 FO$DKEYIN
     0-0-0/w STRC(108)   r     1 FO$EXT                     0-0-0/w STRC(1332)  r     1 FO$FIL
     0-0-0/w ASTR(351)   r     1 FO$JOB                     0-0-0/w STRC(468)   r     1 FO$SBUF
     0-0-0/w STRC(396)   r     1 FO$WSN                     0-0-0N  NULL        r     1 M$CSCG
     0-0-0N  NULL        r     1 M$FPRG                     0-0-0N  NULL        r     1 M$OSCG


   Procedure FOD$DEV requires 3690 words for executable code.
   Procedure FOD$DEV requires 74 words of local(AUTO) storage.

    No errors detected in file FOD$DEV.:E05TSI    .
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:385  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:386  
          MINI XREF LISTING

A1 IN PROCEDURE START_CHKPF
      8157**LABEL    8151--CALLALT
A1 IN PROCEDURE START_FIRSTEXT
      8182**LABEL    8181--CALLALT
A31
      6211**LABEL    6212--CALLALT
A6
      6670**LABEL    6656--CALLALT
A7
      6692**LABEL    6689--CALLALT
ABTMSGS
      4499**DCL      6388--ASSIGN   6389>>ASSIGN
ACCT IN PROCEDURE MATCHACCT
      9010**DCL      9011<<ASSIGN   9015--IF       9027>>IF
ACKTYP
      4481**DCL      6535<<ASSIGN   6539<<ASSIGN   6548>>IF
ACT_FPRG
      4942**DCL      7507<>CALL     7906<>CALL
ACT_FPRG.V
      4943**DCL      4942--DCLINIT
ACT_FPRG.V.DVBYTE.REREAD#
      4945**DCL      4945--REDEF
ALIGN0
      6484**LABEL    6485--CALLALT
ALIGN01
      6488**LABEL    6511--GOTO
ALIGN1
      6492**LABEL    6486--GOTO
ALIGN2
      6492**LABEL    6766--GOTO
ALIGN20
      6508**LABEL    6584--GOTO
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:387  
ALIGN22
      6531**LABEL    6527--GOTO     6531--GOTO
ALIGN3
      6539**LABEL    6536--GOTO
ALIGN31
      6551**LABEL    6543--CALLALT
ALIGN_IDLE_DEVICE
      6473**LABEL    7552--GOTO
ALKEYIN
      4590**DCL      7950--CALL
ALKEYIN.CHKP
      4600**DCL      4601--REDEF
ALKEYIN.DEVNM
      4593**DCL      4594--REDEF    7949<<ASSIGN
ALKEYIN.TNAME
      4605**DCL      4606--REDEF    4607--REDEF
ALSTAT
      4482**DCL      6501<>CALL     6763<>CALL     6765<>CALL
ALSTAT.ERRC
      4484**DCL      6508>>ASSIGN
ALSTAT.STAT
      4483**DCL      6504>>DOCASE
ALTRT IN PROCEDURE END_DEV
      8251**LABEL    8239--CALLALT
ALTRT IN PROCEDURE MATCHEM
      8445**LABEL    8439--CALLALT  8441--CALLALT
ALTRT IN PROCEDURE SBLKS_DEV
      8208**LABEL    8206--CALLALT
ALTRT IN PROCEDURE SCHED_DEV
      7992**LABEL    7882--CALLALT  7895--CALLALT
ALTRT IN PROCEDURE SUSP_DEV
      9279**LABEL    9276--CALLALT
AVAIL
      9510**PROC     5938--CALL
B$ALT.CODE
      4425**DCL      4425--REDEF    4426--REDEF    4426--REDEF
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:388  
B$ALT.ERR
      4426**DCL      7521>>ASSIGN   7964>>ASSIGN   7977>>ASSIGN
B$ALT.ERR.CODE
      4427**DCL      6564>>IF       6573>>IF       6579>>IF       6670>>IF       6692>>IF       6748>>IF
      6838>>IF       7978>>IF       7978>>IF       7978>>IF       7978>>IF       7978>>IF       7986>>IF
      8164>>IF       8186>>IF
B$ALT.ERR.ERR#
      4427**DCL      4427--REDEF
B$ALT.EVID
      4426**DCL      4426--REDEF    4426--REDEF
B$CHARS
      4439**DCL      6386<<ASSIGN   6389<<ASSIGN   8785>>IF       8785>>IF       9015>>IF       9015>>IF
B$JIT.CPFLAGS1.SLEAZE
       297**DCL       297--REDEF
B$JIT.ERR.MID
       204**DCL       204--REDEF
B$JIT.JRESPEAK
       365**DCL       366--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       474**DCL       474--REDEF     475--REDEF
B$JIT.PNR
       378**DCL       378--REDEF
B$JIT.PRIV.JOB
       247**DCL      7907>>ASSIGN
B$JIT.TSLINE
       472**DCL       473--REDEF
B$JIT$
      4849**DCL       198--IMP-PTR  7907>>ASSIGN
B$TCB.ALT$
      4421**DCL      6564>>IF       6573>>IF       6579>>IF       6670>>IF       6692>>IF       6748>>IF
      6838>>IF       7521>>ASSIGN   7964>>ASSIGN   7977>>ASSIGN   7978>>IF       7978>>IF       7978>>IF
      7978>>IF       7978>>IF       7986>>IF       8164>>IF       8186>>IF
B$TCB$
      4848**DCL      4421--IMP-PTR  6564>>IF       6573>>IF       6579>>IF       6670>>IF       6692>>IF
      6748>>IF       6838>>IF       7521>>ASSIGN   7964>>ASSIGN   7977>>ASSIGN   7978>>IF       7978>>IF
      7978>>IF       7978>>IF       7978>>IF       7986>>IF       8164>>IF       8186>>IF
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:389  
BAD_KSYSID
      7426**LABEL    7243--CALLALT  7326--CALLALT  7343--CALLALT  7604--CALLALT
BAD_SYMBIO
      8319**PROC     6579--CALL     6670--CALL     7984--CALL     8164--CALL     8186--CALL
BDBCMSG_DEV IN PROCEDURE TCONMSG_DEV
      9373**ENTRY    7315--CALL
BLK#
      4464**DCL      6132<<ASSIGN   6201>>IF       6209>>ASSIGN
BLOCK
      4467**DCL      8372<<ASSIGN   8376>>IF       8378>>ASSIGN   8379>>ASSIGN   8381>>ASSIGN   8387<<ASSIGN
      8387>>ASSIGN   8391>>ASSIGN
CHKPREC
      4526**DCL      4533--REDEF    8146--ASSIGN
CHKPREC.SYSID
      4530**DCL      8145<<CALLBLT
CHKPRECR
      4533**DCL      8147>>ASSIGN
CHK_AIP
      9336**PROC     7212--CALL     7240--CALL     7327--CALL     7344--CALL     7467--CALL     7605--CALL
CHK_ALG
      9323**PROC     7268--CALL     7345--CALL     7606--CALL
CHK_KSYSID
      9354**PROC     7243--CALL     7326--CALL     7343--CALL     7604--CALL
CLEANUP_IALN
      6821**LABEL    6286--GOTO     6495--GOTO     6519--GOTO     6556--GOTO     6590--GOTO
CLOSE_SYMB
      5394**DCL      6836<>CALL     8239<>CALL
CLOSE_SYMB.V
      5398**DCL      5394--DCLINIT
CONT_SYMB
      5424**DCL      7305<>CALL
CONT_SYMB.BUF_.BUF$
      5425**DCL      7303<<ASSIGN
CONT_SYMB.V
      5428**DCL      5424--DCLINIT
CONT_SYMB.V.BLKREC
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:390  
      5432**DCL      7301<<ASSIGN
CONT_SYMB.V.BLKREC.REC#
      5433**DCL      7302<<ASSIGN   7302>>ASSIGN
DEA_FPRG
      4968**DCL      6832<>CALL     7504<>CALL     7514<>CALL     7903<>CALL     7958<>CALL     7972<>CALL
DEA_FPRG.V
      4969**DCL      4968--DCLINIT
DEA_FPRG.V.DVBYTE.REREAD#
      4971**DCL      4971--REDEF
DEV.NAME IN PROCEDURE MATCHEMR
      8583**DCL      8584--REDEF
DEV.RACCT IN PROCEDURE MATCHEMR
      8651**DCL      8652--REDEF
DEVNAME
      4493**DCL      4494--REDEF    4887--DCLINIT  4915--DCLINIT  4942--DCLINIT  4968--DCLINIT  5338--DCLINIT
      5339--DCLINIT  5339--DCLINIT  5368--DCLINIT  5396--DCLINIT  5425--DCLINIT  5426--DCLINIT  5426--DCLINIT
      5455--DCLINIT  5456--DCLINIT  5456--DCLINIT  5485--DCLINIT  5486--DCLINIT  5486--DCLINIT  5515--DCLINIT
      5516--DCLINIT  5516--DCLINIT  5545--DCLINIT  5546--DCLINIT  5546--DCLINIT  5611--DCLINIT  5612--DCLINIT
      5612--DCLINIT  5640--DCLINIT  5668--DCLINIT  5902<<ASSIGN   5972>>ASSIGN   6314>>ASSIGN   6490>>ASSIGN
      6585>>ASSIGN   7203>>ASSIGN   7420>>ASSIGN   7496>>ASSIGN   7500<<ASSIGN   7511>>ASSIGN   7518>>ASSIGN
      7896<<ASSIGN   7912>>ASSIGN   7961>>ASSIGN   9264>>ASSIGN   9392>>ASSIGN   9397>>ASSIGN
DEV_CONT
      7299**LABEL    7291--GOTO     7297--GOTO
DEV_CONT0
      7287**LABEL    7296--CALLALT
DEV_CONTINUE
      7287**LABEL    6036--GOTO     6425--GOTO     7165--GOTO
DEV_CONTVFU
      7271**LABEL    6340--GOTO
DEV_CPBEF
      7310**LABEL    7304--CALLALT
DEV_DOQUIT
      6349**LABEL    7102--GOTO
DEV_DOQUIT1
      6396**LABEL    6394--CALLALT  6816--GOTO     7103--GOTO
DEV_EVALT
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:391  
      7723**LABEL    5978--GOTO     6411--CALLALT  7658--GOTO     7696--GOTO
DEV_EVRTN
      7723**LABEL    5943--CALLALT  6003--CALLALT  6040--CALLALT  6124--GOTO     6176--GOTO     6246--GOTO
      6253--GOTO     6289--GOTO     6349--GOTO     6398--GOTO     6412--GOTO     6447--GOTO     6464--CALLALT
      6468--GOTO     6497--GOTO     6523--GOTO     6552--GOTO     6569--GOTO     6576--GOTO     6580--GOTO
      6626--GOTO     6636--GOTO     6669--GOTO     6671--GOTO     6686--GOTO     6691--GOTO     6692--GOTO
      6753--GOTO     6760--GOTO     6792--GOTO     7012--GOTO     7077--GOTO     7133--GOTO     7161--GOTO
      7278--GOTO     7305--CALLALT  7308--GOTO     7402--GOTO     7428--GOTO     7493--GOTO     7524--GOTO
      7542--GOTO
DEV_EVSCREECH
      9299**PROC     5949--CALL     5980--CALL     6070--CALL     6100--CALL     6123--CALL     6175--CALL
      6288--CALL     6446--CALL     6597--CALL     6685--CALL     6721--CALL     6842--CALL     6898--CALL
      7040--CALL     7050--CALL     7058--CALL     7066--CALL     7074--CALL     7096--CALL     7108--CALL
      7132--CALL     7172--CALL     7729--CALL
DEV_FINCOPY
      6695**LABEL    7270--GOTO
DEV_GCLTOKE
      6692**LABEL    6797--GOTO
DEV_GONE
      5970**LABEL    5982--GOTO     6074--GOTO
DEV_KERR
      7417**LABEL    7212--CALLALT  7218--GOTO     7225--GOTO     7228--GOTO     7232--GOTO     7240--CALLALT
      7268--CALLALT  7313--GOTO     7318--GOTO     7327--CALLALT  7344--CALLALT  7345--CALLALT  7374--GOTO
      7390--GOTO     7408--GOTO     7415--GOTO     7432--GOTO     7467--CALLALT  7579--GOTO     7587--GOTO
      7593--GOTO     7599--GOTO     7605--CALLALT  7606--CALLALT  7623--GOTO
DEV_NOFIL
      7401**LABEL    7395--CALLALT
DEV_NOSTRT
      7407**LABEL    7397--CALLALT
DEV_NOTBUSY
      7228**LABEL    7247--GOTO     7335--GOTO     7356--GOTO     7633--GOTO
DEV_NXTF
      7704**LABEL    5946--GOTO
DEV_QUIT
      7013**LABEL    6217--GOTO     6222--GOTO     6251--GOTO     6714--GOTO     7245--GOTO     7333--GOTO
DEV_SUSPEND
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:392  
      7222**LABEL    6034--GOTO     6591--GOTO     6698--GOTO     6811--GOTO     7089--GOTO     7349--GOTO
      7471--GOTO     7626--GOTO
DEV_SUSPENDED
      6287**LABEL    6096--GOTO     6098--GOTO     6141--GOTO     6284--GOTO
DEV_SUSPENDED1
      6300**LABEL    7094--GOTO     7106--GOTO     7168--GOTO     7354--GOTO     7476--GOTO     7631--GOTO
DINFO
        25**DCL        17--PROC       26--REDEF      27--REDEF      28--REDEF      31--REDEF      32--REDEF
      5888--ENTRY    5894--IF       5895>>ASSIGN   7013>>ASSIGN
DISCT_DEV
      4887**DCL      6040<>CALL
DISCT_DEV.V
      4888**DCL      4887--DCLINIT
DISCT_DEV.V.DVBYTE.REREAD#
      4890**DCL      4890--REDEF
DOFMSG IN PROCEDURE TCONMSG_DEV
      9382**LABEL    9378--GOTO
DOMSG IN PROCEDURE TCONMSG_DEV
      9392**LABEL    9372--GOTO     9375--GOTO
DONE IN PROCEDURE REM_DEV
      9424**LABEL    9417--GOTO
DOQUIT0
      6383**LABEL    6372--GOTO
DOQUIT2
      6409**LABEL    6406--CALLALT
DO_ONMSG
      4512**DCL      7396<<ASSIGN   7401<<ASSIGN   7413<<ASSIGN   9384>>IF
DSCGO_DEV
      4915**DCL      6003<>CALL
DSCGO_DEV.V
      4916**DCL      4915--DCLINIT
DSCGO_DEV.V.DVBYTE.REREAD#
      4918**DCL      4918--REDEF
END_DEV
      8238**PROC     6406--CALL
EVENT
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:393  
        24**DCL        17--PROC     5888--ENTRY    5893>>ASSIGN   5913>>DOCASE   7421>>IF
EXT$
      4479**DCL      6183<<ASSIGN   6193>>ASSIGN   6195>>IF       6198>>ASSIGN   6201>>IF       6203>>ASSIGN
      6204>>ASSIGN   6205<<ASSIGN   6205>>ASSIGN   6206>>IF       6454>>ASSIGN   6627<<ASSIGN   6631>>IF
      6647>>ASSIGN   6648>>ASSIGN   6649>>ASSIGN   6657>>IF       6660>>ASSIGN   6923<<ASSIGN   6924>>ASSIGN
      6930<<ASSIGN   6931>>ASSIGN   8100<<ASSIGN   8101>>ASSIGN   8102>>ASSIGN   8103>>ASSIGN   8104>>ASSIGN
      8373<<ASSIGN   8374>>DOWHILE  8375>>ASSIGN   8379>>ASSIGN   8380>>ASSIGN   8382>>ASSIGN   8388<<ASSIGN
      8388>>ASSIGN   8394<>CALL     8395>>ASSIGN   8395>>ASSIGN   8396>>ASSIGN   8397>>ASSIGN   8413>>IF
      8416>>DOWHILE
EXTBLNK$
      4473**DCL      6456>>ASSIGN   6665>>ASSIGN   8399>>ASSIGN   8412<<ASSIGN   8413>>IF       8414<<ASSIGN
      8416>>DOWHILE  8417<<ASSIGN   8417>>ASSIGN
EXTENT
      4524**DCL      5337--DCLINIT  5366--DCLINIT  5424--DCLINIT  5454--DCLINIT  5484--DCLINIT  7530<<ASSIGN
      7920<<ASSIGN
EXTENT.DAD#
      4524**DCL      6641<<ASSIGN   6648<<ASSIGN   6652<<ASSIGN   6652>>ASSIGN   8102<<ASSIGN   8379<<ASSIGN
      8395<<ASSIGN
EXTENT.GRANS#
      4524**DCL      6454<<ASSIGN   6454>>ASSIGN   6640<<ASSIGN   6647<<ASSIGN   6652>>ASSIGN   6653>>ASSIGN
      8101<<ASSIGN   8378<<ASSIGN   8393<<ASSIGN
EXTENT.STAMP
      4524**DCL      6649<<ASSIGN   8103<<ASSIGN   8380<<ASSIGN   8396<<ASSIGN
EXTENT.STAMP.FRDAD#
      4524**DCL      6653<<ASSIGN   6653>>ASSIGN   8381<<ASSIGN   8381>>ASSIGN   8397<<ASSIGN   8397>>ASSIGN
FABTMSG
      4498**DCL      6385--ASSIGN   6386>>ASSIGN   6389--ASSIGN
FERR1
      6155**LABEL    6148--GOTO
FIL_CNUM
      4457**DCL      6191<<ASSIGN   6197<<ASSIGN   6197>>ASSIGN   6215<>CALL     6707<<ASSIGN   6708<>CALL
FIN_DEV IN PROCEDURE END_DEV
      8240**ENTRY    5981--CALL     6066--CALL
FO$DEV
      3152**DCL      5896>>ASSIGN   8076<>CALL     8439<>CALL     8441<>CALL
FO$DEV.ALR$
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:394  
      3164**DCL      6485<>CALL     8115>>IF       8116<>CALL     8117<<ASSIGN
FO$DEV.BR
      3230**DCL      6301<<ASSIGN   6424<<ASSIGN   6440<<ASSIGN   6443<<ASSIGN   6458>>ASSIGN   6818<<ASSIGN
      7139<<ASSIGN   7140>>IF       7280>>IF       7299<<ASSIGN   7301>>ASSIGN   7531<<ASSIGN   7925<<ASSIGN
      8158<<ASSIGN   8302>>ASSIGN
FO$DEV.BR.BLK#
      3231**DCL      6299>>IF       6299>>IF       8203>>ASSIGN   8372>>ASSIGN   8391<<ASSIGN   8391>>ASSIGN
FO$DEV.BR.REC#
      3232**DCL      6299>>IF       7163<<ASSIGN   7163>>ASSIGN   8204>>ASSIGN   8392<<ASSIGN
FO$DEV.CFIL$
      3162**DCL      5903>>ASSIGN   7545<<ASSIGN   7595>>IF       7596>>IF       7771>>IF       7933<<ASSIGN
      8243<<ASSIGN   9356>>IF       9357>>IF
FO$DEV.FLEN
      3220**DCL      8148>>IF       8149>>ASSIGN
FO$DEV.FLG
      3178**DCL      6306<<ASSIGN   6306>>ASSIGN   7935<<ASSIGN   7935>>ASSIGN
FO$DEV.FLG.ACKEXP
      3188**DCL      6396<<ASSIGN   6547<<ASSIGN   6743>>IF       8154<<ASSIGN   9278<<ASSIGN
FO$DEV.FLG.AEF
      3200**DCL      6845>>IF       8244>>IF
FO$DEV.FLG.AIP
      3196**DCL      6292>>IF       6308>>IF       6310<<ASSIGN   6551<<ASSIGN   6584>>IF       6756>>IF
      6799>>IF       6844<<ASSIGN   9337>>IF
FO$DEV.FLG.ALGNED
      3198**DCL      6283<<ASSIGN   6339<<ASSIGN   6348<<ASSIGN   6484<<ASSIGN   6494<<ASSIGN   6515<<ASSIGN
      6810<<ASSIGN   6847<<ASSIGN   6849<<ASSIGN   7919>>IF       7947>>IF       8244<<ASSIGN   9324>>IF
FO$DEV.FLG.CBD
      3194**DCL      6819<<ASSIGN   7274>>IF       8134>>IF       8157<<ASSIGN
FO$DEV.FLG.CHIDLE
      3206**DCL      6635<<ASSIGN   6920>>IF       6922<<ASSIGN
FO$DEV.FLG.CHKP
      3202**DCL      7332<<ASSIGN   8300>>IF       8305<<ASSIGN
FO$DEV.FLG.DIRECTION
      3213**DCL      6467<<ASSIGN   6633>>IF       6650>>IF       6659>>IF       7138<<ASSIGN   7938<<ASSIGN
FO$DEV.FLG.FWDSPC
      3209**DCL      6695>>IF       7616<<ASSIGN   7617<<ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:395  
FO$DEV.FLG.IDSC
      3183**DCL      6011<<ASSIGN   6065<<ASSIGN   6244>>IF       6567<<ASSIGN   6750<<ASSIGN   6758>>IF
      6790>>IF       6840<<ASSIGN   6853>>IF       7386>>IF       7874>>IF
FO$DEV.FLG.JDEVLIMIT
      3182**DCL      6483<<ASSIGN   6530<<ASSIGN   6806>>IF       6879>>IF
FO$DEV.FLG.JVFU
      3204**DCL      6482<<ASSIGN   6526<<ASSIGN   6802>>IF       6873>>IF
FO$DEV.FLG.LASTEXT
      3210**DCL      6626>>IF       6668<<ASSIGN   6682>>IF       7136<<ASSIGN
FO$DEV.FLG.LOCK
      3215**DCL      7376>>IF       7379<<ASSIGN   7479>>IF       7771>>IF       8014>>IF       8427>>IF
      9262<<ASSIGN   9369>>ASSIGN
FO$DEV.FLG.MODE
      3181**DCL      6761>>IF       6830>>IF       7502>>IF       7899>>IF
FO$DEV.FLG.QUIT
      3207**DCL      6067>>IF       6313>>IF       6815>>IF       7015>>IF       7082<<ASSIGN
FO$DEV.FLG.QUITMSG
      3203**DCL      6367>>IF       6391<<ASSIGN   6815>>IF
FO$DEV.FLG.SEND_VFU
      3184**DCL      6821<<ASSIGN   7140>>IF       7158<<ASSIGN   8159<<ASSIGN
FO$DEV.FLG.SIP
      3211**DCL      6466<<ASSIGN   6682>>IF       7130>>IF       7137<<ASSIGN   7215>>IF       7620>>IF
      8207<<ASSIGN
FO$DEV.FLG.TERR
      3186**DCL      6282<<ASSIGN   6372>>IF       6381>>IF       7307<<ASSIGN   8245>>IF       8245<<ASSIGN
FO$DEV.FORM
      3228**DCL      5941>>IF       6855>>IF       6861>>ASSIGN   7371>>IF       7780>>IF       8014>>IF
      8434>>IF       9370>>ASSIGN
FO$DEV.LNK$
      3158**DCL      7758>>ASSIGN   7795>>ASSIGN   8085>>ASSIGN   9416>>ASSIGN   9422>>IF       9424<<ASSIGN
      9424>>ASSIGN   9438>>ASSIGN   9488>>ASSIGN
FO$DEV.NAME
      3166**DCL      3167--REDEF    5902>>ASSIGN   7500>>ASSIGN   7782>>ASSIGN   7896>>ASSIGN   7949>>ASSIGN
      8170>>ASSIGN
FO$DEV.NAMER.TYP
      3168**DCL      6367>>IF       6367>>IF       7280>>IF       7280>>IF       8071>>IF       8071>>IF
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:396  
      8139>>IF       8139>>IF       8442>>IF       9471>>IF       9471>>IF
FO$DEV.NATTR
      3173**DCL      8071>>IF       8442>>IF       9471>>IF       9471>>IF
FO$DEV.QUITRSN
      3218**DCL      6319>>ASSIGN   6369>>DOCASE   6388>>ASSIGN   6389>>ASSIGN   7017>>ASSIGN   7031<<ASSIGN
      7081<<ASSIGN   8275>>DOCASE
FO$DEV.RACCT
      3234**DCL      3235--REDEF    6870>>ASSIGN   7643<<ASSIGN   7644>>IF       7645>>IF       7647>>CALLBLT
      7652>>CALLBLT  7655>>ASSIGN
FO$DEV.RACCTL
      3222**DCL      6864>>IF       7644<<ASSIGN   7648<<ASSIGN   7653<<ASSIGN   7680<<ASSIGN   8065>>IF
      8071>>IF       8077>>IF       8436>>IF
FO$DEV.RWSN
      3235**DCL      7681<<ASSIGN   7682>>IF       7683>>IF       7685>>CALLBLT  7690>>CALLBLT  7693>>ASSIGN
FO$DEV.RWSNL
      3223**DCL      7642<<ASSIGN   7682<<ASSIGN   7686<<ASSIGN   7691<<ASSIGN   8071>>IF       8080>>IF
      8080>>IF       8436>>IF
FO$DEV.SPACEFROM
      3217**DCL      6435>>DOCASE   7140>>IF       7159<<ASSIGN   7608<<ASSIGN   7613>>IF
FO$DEV.SPACEPAGES
      3226**DCL      6452>>IF       6460>>ASSIGN   6467>>IF       6470>>IF       7607<<ASSIGN   7613>>IF
FO$DEV.SPG$
      3160**DCL      6131>>ASSIGN   6392>>ASSIGN   6463>>ASSIGN   6541>>ASSIGN   6850<>CALL     6851<<ASSIGN
      7303>>ASSIGN   7487<>CALL     7533>>ASSIGN   7537<>CALL     7538<<ASSIGN   7895<>CALL     7926>>ASSIGN
      7991<>CALL     7992<<ASSIGN   8142>>ASSIGN   8205>>ASSIGN   8247<>CALL     8248<<ASSIGN
FO$DEV.STATE
      3175**DCL      5901>>ASSIGN   6130<<ASSIGN   6305<<ASSIGN   6395<<ASSIGN   6465<<ASSIGN   6492>>IF
      6517>>IF       6544>>IF       6546<<ASSIGN   6554>>IF       6588>>IF       6854<<ASSIGN   7010>>IF
      7086>>DOCASE   7135<<ASSIGN   7306<<ASSIGN   7544<<ASSIGN   7930<<ASSIGN   8153<<ASSIGN   8182<<ASSIGN
      8208<<ASSIGN   8242<<ASSIGN   9279<<ASSIGN
FO$DEV.SUSRSN
      3177**DCL      6033<<ASSIGN   6036>>IF       6095<<ASSIGN   6140<<ASSIGN   6281<<ASSIGN   6293>>DOCASE
      6313<<ASSIGN   6320>>ASSIGN   6323>>DOCASE   6472<<ASSIGN   6587<<ASSIGN   6697<<ASSIGN   6801<<ASSIGN
      6804<<ASSIGN   6808<<ASSIGN   6885>>IF       7088<<ASSIGN   7091<<ASSIGN   7093<<ASSIGN   7105<<ASSIGN
      7167<<ASSIGN   7220<<ASSIGN   7269>>IF       7271>>IF       7287>>IF       7310>>IF       7348<<ASSIGN
      7351<<ASSIGN   7353<<ASSIGN   7470<<ASSIGN   7473<<ASSIGN   7475<<ASSIGN   7546<<ASSIGN   7625<<ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:397  
      7628<<ASSIGN   7630<<ASSIGN
FO$DEV.TOKERSN
      3225**DCL      6307<<ASSIGN   6397<<ASSIGN   6549<<ASSIGN   6550<<ASSIGN   6690<<ASSIGN   6745>>IF
      6788>>ASSIGN   6789<<ASSIGN   7551<<ASSIGN   8152<<ASSIGN   9277<<ASSIGN
FO$DEV.WSN$
      3165**DCL      7662>>ASSIGN   9426>>ASSIGN   9448>>ASSIGN   9460>>ASSIGN   9474>>ASSIGN
FO$DEV IN PROCEDURE MATCHACCT
      8825**DCL      8809--PROC     9017<>CALL     9029<>CALL
FO$DEV.NAME IN PROCEDURE MATCHACCT
      8839**DCL      8840--REDEF
FO$DEV.RACCT IN PROCEDURE MATCHACCT
      8907**DCL      8908--REDEF    9015--IF       9027>>IF
FO$DEV.RACCTL IN PROCEDURE MATCHACCT
      8895**DCL      9012>>IF       9014>>ASSIGN   9025>>ASSIGN
FO$DEV IN PROCEDURE MATCHEMR
      8470**DCL      8454--PROC     8765<>CALL     8788<>CALL     8801<>CALL
FO$DEV.NAME IN PROCEDURE MATCHEMR
      8484**DCL      8485--REDEF
FO$DEV.RACCT IN PROCEDURE MATCHEMR
      8552**DCL      8553--REDEF
FO$DEV.RACCTL IN PROCEDURE MATCHEMR
      8540**DCL      8756>>IF       8760>>IF
FO$DEV.RWSN IN PROCEDURE MATCHEMR
      8553**DCL      8785--IF       8798>>IF
FO$DEV.RWSNL IN PROCEDURE MATCHEMR
      8541**DCL      8756>>IF       8782>>IF       8784>>ASSIGN   8795>>ASSIGN   8796>>IF       8798>>IF
FO$DEV IN PROCEDURE MATCHWSN
      9053**DCL      9037--PROC
FO$DEV.NAME IN PROCEDURE MATCHWSN
      9067**DCL      9068--REDEF
FO$DEV.RACCT IN PROCEDURE MATCHWSN
      9135**DCL      9136--REDEF
FO$DEV.WSN$ IN PROCEDURE MATCHWSN
      9066**DCL      9239>>ASSIGN
FO$DKEYIN.CADDR
      3065**DCL      7423>>ASSIGN   7703>>ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:398  
FO$DKEYIN.CHKP
      3073**DCL      3074--REDEF    7332>>IF
FO$DKEYIN.CONTINUE
      3074**DCL      7615>>IF
FO$DKEYIN.DEVNM
      3066**DCL      3067--REDEF
FO$DKEYIN.KIN#
      3064**DCL      7205>>DOCASE
FO$DKEYIN.NPAGES
      3071**DCL      7573>>ASSIGN   7607>>ASSIGN
FO$DKEYIN.RACCT
      3079**DCL      7643>>ASSIGN
FO$DKEYIN.RWSN
      3080**DCL      7665>>IF       7675>>ASSIGN   7681>>ASSIGN
FO$DKEYIN.SPACEFROM
      3072**DCL      7581>>DOCASE   7608>>ASSIGN
FO$DKEYIN.SYSID
      3075**DCL      7431>>ASSIGN   9355>>IF       9357>>IF
FO$DKEYIN.TNAME
      3078**DCL      3079--REDEF    3080--REDEF
FO$EXT.DAD
      3272**DCL      6648>>ASSIGN   8102>>ASSIGN   8379>>ASSIGN   8395>>ASSIGN
FO$EXT.GRANS
      3271**DCL      6201>>IF       6203>>ASSIGN   6204>>ASSIGN   6454>>ASSIGN   6647>>ASSIGN   8101>>ASSIGN
      8375>>ASSIGN   8395>>ASSIGN   8397>>ASSIGN
FO$EXT.LNK$
      3270**DCL      6205>>ASSIGN   6660>>ASSIGN   6924>>ASSIGN   6931>>ASSIGN   8104>>ASSIGN   8382>>ASSIGN
      8388>>ASSIGN   8416>>DOWHILE  8417>>ASSIGN
FO$EXT.STAMP
      3273**DCL      6649>>ASSIGN   8103>>ASSIGN   8380>>ASSIGN   8396>>ASSIGN
FO$EXT.STAMP.HASH
      3274**DCL      6193>>ASSIGN   6195>>IF       6198>>ASSIGN
FO$FIL
      3290**DCL      8076<>CALL     8439<>CALL     8441<>CALL
FO$FIL.ATTR
      3308**DCL      8071>>IF       8442>>IF
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:399  
FO$FIL.CDEV$
      3312**DCL      7777>>IF       7932<<ASSIGN   8022>>IF       8246<<ASSIGN
FO$FIL.CHKPBR
      3342**DCL      6818>>ASSIGN   8158>>ASSIGN   8302<<ASSIGN
FO$FIL.COPIES
      3307**DCL      6702<<ASSIGN   6702>>ASSIGN   6705>>IF       8290>>IF
FO$FIL.DEST
      3302**DCL      3303--REDEF
FO$FIL.DESTR.TYP
      3305**DCL      8442>>IF
FO$FIL.EXT$
      3296**DCL      6183>>ASSIGN   8100>>ASSIGN   8373>>ASSIGN   8412>>ASSIGN
FO$FIL.FLG.CHKPTD
      3333**DCL      6521>>IF       6709<<ASSIGN   7274>>IF       7919>>IF       7952>>IF       8303<<ASSIGN
      9384>>IF       9391>>ASSIGN
FO$FIL.FLG.CPVFC
      3332**DCL      6462>>ASSIGN
FO$FIL.FLG.CRASHED
      3334**DCL      7102>>IF
FO$FIL.FLG.GLC
      3328**DCL      6633>>IF       7596>>IF       8026>>IF       9384>>IF       9390>>ASSIGN
FO$FIL.FLG.LPAVAIL
      3325**DCL      7751<<ASSIGN   7755<<ASSIGN   9514>>IF       9516<<ASSIGN   9539>>IF
FO$FIL.FLG.PAGES
      3326**DCL      6461>>ASSIGN
FO$FIL.FLG.SAP
      3330**DCL      6703>>IF       8291>>IF
FO$FIL.FLG.SPILL
      3335**DCL      8442>>IF
FO$FIL.FLG.UNHELD
      3324**DCL      8291>>IF
FO$FIL.FORM
      3317**DCL      7780>>IF       7783>>ASSIGN   8434>>IF
FO$FIL.HICNUM
      3337**DCL      6707>>ASSIGN
FO$FIL.LNK$
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:400  
      3292**DCL      7790>>ASSIGN   8030>>ASSIGN   9517>>ASSIGN   9541>>ASSIGN
FO$FIL.NUM
      3316**DCL      6159>>ASSIGN   6317>>ASSIGN   9389>>ASSIGN
FO$FIL.NXTEXT$
      3294**DCL      6456<<ASSIGN   6627>>ASSIGN   6660<<ASSIGN   6665<<ASSIGN   6924<<ASSIGN   6928>>IF
      6931<<ASSIGN   8104<<ASSIGN   8382<<ASSIGN   8399<<ASSIGN
FO$FIL.OJOB$
      3298**DCL      6316>>ASSIGN   7940>>ASSIGN   8250>>ASSIGN
FO$FIL.PRIO
      3340**DCL      8295<<ASSIGN   8427>>IF       8427>>IF       8427>>IF       8427>>IF
FO$FIL.SAPCOPIES
      3338**DCL      6703<<ASSIGN   6703>>ASSIGN   8291>>IF
FO$FIL.SETX
      3310**DCL      7928>>ASSIGN
FO$FIL.SYSID
      3314**DCL      6158>>ASSIGN   6315>>ASSIGN   8144>>ASSIGN   9357>>IF       9388>>ASSIGN
FO$FIL.VLP_FPRG
      3368**DCL      7911>>ASSIGN
FO$FIL IN PROCEDURE MATCHACCT
      8923**DCL      8809--PROC     9017<>CALL     9029<>CALL
FO$FIL.DEST IN PROCEDURE MATCHACCT
      8935**DCL      8936--REDEF
FO$FIL.OJOB$ IN PROCEDURE MATCHACCT
      8931**DCL      9011>>ASSIGN   9026>>IF       9027>>IF
FO$FIL IN PROCEDURE MATCHEMR
      8667**DCL      8454--PROC     8765<>CALL     8788<>CALL     8801<>CALL
FO$FIL.DEST IN PROCEDURE MATCHEMR
      8679**DCL      8680--REDEF
FO$FIL.DESTR.WSN IN PROCEDURE MATCHEMR
      8681**DCL      8781>>ASSIGN
FO$FIL IN PROCEDURE MATCHWSN
      9151**DCL      9037--PROC
FO$FIL.DEST IN PROCEDURE MATCHWSN
      9163**DCL      9164--REDEF
FO$FIL.DESTR.WSN IN PROCEDURE MATCHWSN
      9165**DCL      9242>>IF
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:401  
FO$FKEYIN.ACCT
      3107**DCL      3108--REDEF
FO$FKEYIN.NOTFORM
      3103**DCL      3104--REDEF
FO$JOB.ACCT
      3408**DCL      6316>>ASSIGN   9011>>ASSIGN
FO$JOB.ACCTL
      3409**DCL      9026>>IF       9027>>IF
FO$JOB.JNL
      3414**DCL      3421--IMP-SIZ
FO$JOB.NFIL_PRINTING
      3406**DCL      7941<<ASSIGN   7941>>ASSIGN   8251<<ASSIGN   8251>>ASSIGN
FO$RKEYIN.DEVNM
      3130**DCL      3131--REDEF
FO$SBUF.FERR.AVAIL
      4437**DCL      6153>>ASSIGN
FO$SBUF.FERR.BLK#
      4436**DCL      6132>>ASSIGN
FO$SBUF.FERR.CODE
      4436**DCL      6136>>DOCASE
FO$SBUF.FERR.EXPSTAMP
      4436**DCL      6146>>ASSIGN
FO$SBUF.FERR.NAVX
      4436**DCL      6154>>ASSIGN
FO$SBUF.FERR.STAMP
      4437**DCL      6155>>ASSIGN   6157>>ASSIGN
FO$WSN.LNK$
      3445**DCL      7672>>ASSIGN   9248>>ASSIGN   9428>>ASSIGN   9456>>ASSIGN   9484>>ASSIGN   9492>>ASSIGN
FO$WSN.NWSNS
      3447**DCL      7664>>DOINDEX  9241>>DOINDEX  9450>>DOINDEX  9462>>DOINDEX  9476>>DOINDEX
FO$WSN.WSN.ADD_ON
      3460**DCL      9451>>IF
FO$WSN.WSN.NOT_USED
      3456**DCL      7665>>IF       9242>>IF       9463>>IF
FO$WSN.WSN.ORIGINAL
      3454**DCL      9451>>IF
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:402  
FO$WSN.WSN.ROUTED_OUT
      3458**DCL      7665>>IF       9242>>IF       9463>>IF
FO$WSN.WSN.WSN_NAME
      3451**DCL      7665>>IF       9242>>IF       9477>>IF       9477>>IF
FOD$AVAIL
      7749**ENTRY    9540--CALL
FOD$EVENT
      5888**ENTRY    6925--CALL     7950--CALL     8173--CALL     8183--CALL
FOF$CHAIN
      4850**DCL-ENT  8296--CALL
FOF$DELETE
      4851**DCL-ENT  8279--CALL     8290--CALL
FOF$FITUPD
      4852**DCL-ENT  6215--CALL     6708--CALL     7988--CALL     8285--CALL     8304--CALL
FOF$LASTEXT
      4853**DCL-ENT  8394--CALL
FOF$REMOVE
      4854**DCL-ENT  8282--CALL
FOF$REPRIO
      4855**DCL-ENT  6710--CALL     7989--CALL     8286--CALL
FOF$UNCHAIN
      4856**DCL-ENT  8294--CALL
FOFFMSG_DEV IN PROCEDURE TCONMSG_DEV
      9379**ENTRY    8241--CALL
FOI$GBUF
      4857**DCL-ENT  6485--CALL     7487--CALL     7895--CALL
FOI$RBUF
      4858**DCL-ENT  6850--CALL     7537--CALL     7991--CALL     8116--CALL     8247--CALL     9429--CALL
      9432--CALL
FOI$SNAP
      4859**DCL-ENT  8320--CALL     9301--CALL
FONMSG_DEV IN PROCEDURE TCONMSG_DEV
      9376**ENTRY    7939--CALL
FOR$CALIGN
      4860**DCL-ENT  6765--CALL
FOR$DEVWR
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:403  
      4861**DCL-ENT  7382--CALL     9267--CALL
FOR$GALIGN
      4864**DCL-ENT  6763--CALL
FOR$MOUNT
      4862**DCL-ENT  5943--CALL
FOR$SALIGN
      4863**DCL-ENT  6501--CALL
FO_DET
      3702**DCL      5891>>IF
FO_DETL.CODE
      3702**DCL      5893<<ASSIGN
FO_DETL.DEVF
      3703**DCL      5896<<ASSIGN
FO_DETL.INFO
      3702**DCL      5895<<ASSIGN
FO_DETX
      3702**DCL      5893>>ASSIGN   5895>>ASSIGN   5896>>ASSIGN   5897<<ASSIGN   5897>>ASSIGN   5898>>IF
      5898<<ASSIGN
FO_DEV$
      3485**DCL      5896>>ASSIGN   5901>>ASSIGN   5902>>ASSIGN   5903>>ASSIGN   5941>>IF       6011>>ASSIGN
      6033>>ASSIGN   6036>>IF       6065>>ASSIGN   6067>>IF       6095>>ASSIGN   6130>>ASSIGN   6131>>ASSIGN
      6140>>ASSIGN   6244>>IF       6281>>ASSIGN   6282>>ASSIGN   6283>>ASSIGN   6292>>IF       6293>>DOCASE
      6299>>IF       6299>>IF       6299>>IF       6301>>ASSIGN   6305>>ASSIGN   6306>>ASSIGN   6306>>ASSIGN
      6307>>ASSIGN   6308>>IF       6310>>ASSIGN   6313>>IF       6313>>ASSIGN   6319>>ASSIGN   6320>>ASSIGN
      6323>>DOCASE   6339>>ASSIGN   6348>>ASSIGN   6367>>IF       6367>>IF       6367>>IF       6369>>DOCASE
      6372>>IF       6381>>IF       6388>>ASSIGN   6389>>ASSIGN   6391>>ASSIGN   6392>>ASSIGN   6395>>ASSIGN
      6396>>ASSIGN   6397>>ASSIGN   6424>>ASSIGN   6435>>DOCASE   6440>>ASSIGN   6443>>ASSIGN   6452>>IF
      6458>>ASSIGN   6460>>ASSIGN   6463>>ASSIGN   6465>>ASSIGN   6466>>ASSIGN   6467>>IF       6467>>ASSIGN
      6470>>IF       6472>>ASSIGN   6482>>ASSIGN   6483>>ASSIGN   6484>>ASSIGN   6485>>CALL     6492>>IF
      6494>>ASSIGN   6515>>ASSIGN   6517>>IF       6526>>ASSIGN   6530>>ASSIGN   6541>>ASSIGN   6544>>IF
      6546>>ASSIGN   6547>>ASSIGN   6549>>ASSIGN   6550>>ASSIGN   6551>>ASSIGN   6554>>IF       6567>>ASSIGN
      6584>>IF       6587>>ASSIGN   6588>>IF       6626>>IF       6633>>IF       6635>>ASSIGN   6650>>IF
      6659>>IF       6668>>ASSIGN   6682>>IF       6682>>IF       6690>>ASSIGN   6695>>IF       6697>>ASSIGN
      6743>>IF       6745>>IF       6750>>ASSIGN   6756>>IF       6758>>IF       6761>>IF       6788>>ASSIGN
      6789>>ASSIGN   6790>>IF       6799>>IF       6801>>ASSIGN   6802>>IF       6804>>ASSIGN   6806>>IF
      6808>>ASSIGN   6810>>ASSIGN   6815>>IF       6815>>IF       6818>>ASSIGN   6819>>ASSIGN   6821>>ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:404  
      6830>>IF       6840>>ASSIGN   6844>>ASSIGN   6845>>IF       6847>>ASSIGN   6849>>ASSIGN   6850>>CALL
      6851>>ASSIGN   6853>>IF       6854>>ASSIGN   6855>>IF       6861>>ASSIGN   6864>>IF       6870>>ASSIGN
      6873>>IF       6879>>IF       6885>>IF       6920>>IF       6922>>ASSIGN   7010>>IF       7015>>IF
      7017>>ASSIGN   7031>>ASSIGN   7081>>ASSIGN   7082>>ASSIGN   7086>>DOCASE   7088>>ASSIGN   7091>>ASSIGN
      7093>>ASSIGN   7105>>ASSIGN   7130>>IF       7135>>ASSIGN   7136>>ASSIGN   7137>>ASSIGN   7138>>ASSIGN
      7139>>ASSIGN   7140>>IF       7140>>IF       7140>>IF       7158>>ASSIGN   7159>>ASSIGN   7163>>ASSIGN
      7163>>ASSIGN   7167>>ASSIGN   7215>>IF       7220>>ASSIGN   7269>>IF       7271>>IF       7274>>IF
      7280>>IF       7280>>IF       7280>>IF       7287>>IF       7299>>ASSIGN   7301>>ASSIGN   7303>>ASSIGN
      7306>>ASSIGN   7307>>ASSIGN   7310>>IF       7332>>ASSIGN   7348>>ASSIGN   7351>>ASSIGN   7353>>ASSIGN
      7371>>IF       7376>>IF       7379>>ASSIGN   7386>>IF       7470>>ASSIGN   7473>>ASSIGN   7475>>ASSIGN
      7479>>IF       7487>>CALL     7500>>ASSIGN   7502>>IF       7531>>ASSIGN   7533>>ASSIGN   7537>>CALL
      7538>>ASSIGN   7544>>ASSIGN   7545>>ASSIGN   7546>>ASSIGN   7551>>ASSIGN   7595>>IF       7596>>IF
      7607>>ASSIGN   7608>>ASSIGN   7613>>IF       7613>>IF       7616>>ASSIGN   7617>>ASSIGN   7620>>IF
      7625>>ASSIGN   7628>>ASSIGN   7630>>ASSIGN   7642>>ASSIGN   7643>>ASSIGN   7644>>IF       7644>>ASSIGN
      7645>>IF       7647>>CALLBLT  7648>>ASSIGN   7652>>CALLBLT  7653>>ASSIGN   7655>>ASSIGN   7662>>ASSIGN
      7680>>ASSIGN   7681>>ASSIGN   7682>>IF       7682>>ASSIGN   7683>>IF       7685>>CALLBLT  7686>>ASSIGN
      7690>>CALLBLT  7691>>ASSIGN   7693>>ASSIGN   7752<<ASSIGN   7753>>DOWHILE  7758<<ASSIGN   7758>>ASSIGN
      7769<<ASSIGN   7770>>DOWHILE  7771>>IF       7771>>IF       7780>>IF       7782>>ASSIGN   7795<<ASSIGN
      7795>>ASSIGN   7874>>IF       7895>>CALL     7896>>ASSIGN   7899>>IF       7919>>IF       7925>>ASSIGN
      7926>>ASSIGN   7930>>ASSIGN   7932>>ASSIGN   7933>>ASSIGN   7935>>ASSIGN   7935>>ASSIGN   7938>>ASSIGN
      7947>>IF       7949>>ASSIGN   7991>>CALL     7992>>ASSIGN   8014>>IF       8014>>IF       8065>>IF
      8070>>IF       8071>>IF       8080>>IF       8115>>IF       8116>>CALL     8117>>ASSIGN   8134>>IF
      8139>>IF       8139>>IF       8142>>ASSIGN   8148>>IF       8149>>ASSIGN   8152>>ASSIGN   8153>>ASSIGN
      8154>>ASSIGN   8157>>ASSIGN   8158>>ASSIGN   8159>>ASSIGN   8170>>ASSIGN   8182>>ASSIGN   8203>>ASSIGN
      8204>>ASSIGN   8205>>ASSIGN   8207>>ASSIGN   8208>>ASSIGN   8242>>ASSIGN   8243>>ASSIGN   8244>>IF
      8244>>ASSIGN   8245>>IF       8245>>ASSIGN   8247>>CALL     8248>>ASSIGN   8275>>DOCASE   8300>>IF
      8302>>ASSIGN   8305>>ASSIGN   8372>>ASSIGN   8391>>ASSIGN   8391>>ASSIGN   8392>>ASSIGN   8427>>IF
      8434>>IF       8436>>IF       8436>>IF       8439>>CALL     8441>>CALL     8442>>IF       8442>>IF
      9262>>ASSIGN   9277>>ASSIGN   9278>>ASSIGN   9279>>ASSIGN   9324>>IF       9337>>IF       9356>>IF
      9357>>IF       9369>>ASSIGN   9370>>ASSIGN   9414>>IF       9416>>ASSIGN   9422>>IF       9424>>ASSIGN
      9426>>ASSIGN   9432<>CALL     9448>>ASSIGN   9460>>ASSIGN   9469>>IF       9471>>IF       9471>>IF
      9535>>ASSIGN   9544<<ASSIGN
FO_DEVSCB
      4071**DCL      9429<>CALL     9432<>CALL
FO_DEV_INIT.NAME
      3832**DCL      3833--REDEF
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:405  
FO_DEV_INIT.RACCT
      3900**DCL      3901--REDEF
FO_FFRSCB
      4041**DCL      6485<>CALL     8116<>CALL
FO_FIL$
      3484**DCL      5903<<ASSIGN   6158>>ASSIGN   6159>>ASSIGN   6183>>ASSIGN   6315>>ASSIGN   6316>>ASSIGN
      6317>>ASSIGN   6456>>ASSIGN   6461>>ASSIGN   6462>>ASSIGN   6521>>IF       6627>>ASSIGN   6633>>IF
      6660>>ASSIGN   6665>>ASSIGN   6702>>ASSIGN   6702>>ASSIGN   6703>>IF       6703>>ASSIGN   6703>>ASSIGN
      6705>>IF       6707>>ASSIGN   6709>>ASSIGN   6818>>ASSIGN   6924>>ASSIGN   6928>>IF       6931>>ASSIGN
      7102>>IF       7274>>IF       7751>>ASSIGN   7755>>ASSIGN   7775<<ASSIGN   7776>>DOWHILE  7777>>IF
      7780>>IF       7783>>ASSIGN   7790<<ASSIGN   7790>>ASSIGN   7911>>ASSIGN   7919>>IF       7928>>ASSIGN
      7932>>ASSIGN   7933>>ASSIGN   7940>>ASSIGN   7952>>IF       8020<<ASSIGN   8021>>DOWHILE  8022>>IF
      8026>>IF       8027>>ASSIGN   8030<<ASSIGN   8030>>ASSIGN   8035<<ASSIGN   8071>>IF       8076>>CALL
      8100>>ASSIGN   8104>>ASSIGN   8144>>ASSIGN   8158>>ASSIGN   8246>>ASSIGN   8250>>ASSIGN   8290>>IF
      8291>>IF       8291>>IF       8291>>IF       8295>>ASSIGN   8302>>ASSIGN   8303>>ASSIGN   8373>>ASSIGN
      8382>>ASSIGN   8399>>ASSIGN   8412>>ASSIGN   8427>>IF       8427>>IF       8427>>IF       8427>>IF
      8434>>IF       8439>>CALL     8441>>CALL     8442>>IF       8442>>IF       8442>>IF       9384>>IF
      9384>>IF       9388>>ASSIGN   9389>>ASSIGN   9390>>ASSIGN   9391>>ASSIGN   9512<<ASSIGN   9513>>DOWHILE
      9514>>IF       9516>>ASSIGN   9517<<ASSIGN   9517>>ASSIGN   9537<<ASSIGN   9538>>DOWHILE  9539>>IF
      9541<<ASSIGN   9541>>ASSIGN
FO_FIL_INIT.DEST
      3729**DCL      3730--REDEF
FO_JOB$
      3485**DCL      7940<<ASSIGN   7941>>ASSIGN   7941>>ASSIGN   8250<<ASSIGN   8251>>ASSIGN   8251>>ASSIGN
FO_OSYMBKEYIN.DEVNM
      3550**DCL      3551--REDEF
FO_OSYMBUF.FO_OSYMBDEV.NAME
      3592**DCL      3593--REDEF
FO_OSYMBUF.FO_OSYMBDEV.RACCT
      3660**DCL      3661--REDEF
FO_Q.DEVHD$
      4023**DCL      7752>>ASSIGN   7769>>ASSIGN   8068>>ASSIGN   9410>>ASSIGN   9416<<ASSIGN   9467>>ASSIGN
FO_Q.FILHD$
      4025**DCL      7775>>ASSIGN   8020>>ASSIGN   9512>>ASSIGN   9537>>ASSIGN
FO_Q.LOCK
      4021**DCL      6404<<ASSIGN   6404>>ASSIGN   6409<<ASSIGN   6409>>ASSIGN   6415<<ASSIGN   6415>>ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:406  
      7393<<ASSIGN   7393>>ASSIGN   7399<<ASSIGN   7399>>ASSIGN   7405<<ASSIGN   7405>>ASSIGN   7411<<ASSIGN
      7411>>ASSIGN   7485<<ASSIGN   7485>>ASSIGN   7491<<ASSIGN   7491>>ASSIGN   7540<<ASSIGN   7540>>ASSIGN
      7548<<ASSIGN   7548>>ASSIGN   7866<<ASSIGN   7866>>ASSIGN   7878<<ASSIGN   7878>>ASSIGN   7891<<ASSIGN
      7891>>ASSIGN   7943<<ASSIGN   7943>>ASSIGN   7995<<ASSIGN   7995>>ASSIGN   9412<<ASSIGN   9412>>ASSIGN
      9434<<ASSIGN   9434>>ASSIGN
FO_SPGSCB
      4161**DCL      6850<>CALL     7487<>CALL     7537<>CALL     7895<>CALL     7991<>CALL     8247<>CALL
FO_SYMBINFO.WATCH#
      3514**DCL      9382>>IF
FRDAD
      4463**DCL      6190<<ASSIGN   6199<<ASSIGN   6203<<ASSIGN   6203>>ASSIGN   6209<<ASSIGN   6209>>ASSIGN
      6211>>ASSIGN
FSCHK0
      7786**LABEL    7777--GOTO     7778--CALLALT  7779--CALLALT
GETFIL_DEV
      8012**PROC     7395--CALL     7882--CALL
GRAN$
      4470**DCL      6131<<ASSIGN   6132>>ASSIGN   6136>>DOCASE   6146>>ASSIGN   6153>>ASSIGN   6154>>ASSIGN
      6155>>ASSIGN   6157>>ASSIGN
GRANS
      4468**DCL      6192<<ASSIGN   6201>>IF       6204<<ASSIGN   6204>>ASSIGN   6209>>ASSIGN   8375<<ASSIGN
      8376>>IF       8378>>ASSIGN   8387>>ASSIGN
HASH
      4465**DCL      6193<<ASSIGN   6195>>IF       6198<<ASSIGN
I
      4446**DCL      4439--IMP-SIZ  6385<<ASSIGN   6386>>ASSIGN   6387>>ASSIGN   6388<<ASSIGN   6389>>ASSIGN
      6390>>ASSIGN   7647<<CALLBLT  7648>>ASSIGN   7652<<CALLBLT  7653>>ASSIGN   7664<<DOINDEX  7665>>IF
      7665>>IF       7665>>IF       7685<<CALLBLT  7686>>ASSIGN   7690<<CALLBLT  7691>>ASSIGN   8144<<ASSIGN
      8145>>CALLBLT  8784<<ASSIGN   8785>>IF       8785>>IF       8795<<ASSIGN   8796>>IF       8798>>IF
      8798>>IF       8798>>IF       9014<<ASSIGN   9015>>IF       9015>>IF       9025<<ASSIGN   9026>>IF
      9027>>IF       9027>>IF       9027>>IF       9450<<DOINDEX  9451>>IF       9451>>IF       9462<<DOINDEX
      9463>>IF       9463>>IF       9477>>IF       9511<<DOINDEX  9512>>ASSIGN   9536<<DOINDEX  9537>>ASSIGN
ILLKEY
      7703**LABEL    7602--GOTO
INFO
        27**DCL      6030>>IF       6039>>IF       6619>>IF
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:407  
INFOB
        28**DCL      6301>>ASSIGN   7139>>ASSIGN
INFOB.BLK#
        29**DCL      6299>>IF       6299>>IF
INFOB.REC#
        30**DCL      6299>>IF
J
      4451**DCL      9241<<DOINDEX  9242>>IF       9242>>IF       9242>>IF       9476<<DOINDEX  9477>>IF
KERR
      4462**DCL      7217<<ASSIGN   7224<<ASSIGN   7227<<ASSIGN   7231<<ASSIGN   7312<<ASSIGN   7317<<ASSIGN
      7373<<ASSIGN   7389<<ASSIGN   7407<<ASSIGN   7414<<ASSIGN   7417<<ASSIGN   7426>>ASSIGN   7430<<ASSIGN
      7578<<ASSIGN   7586<<ASSIGN   7592<<ASSIGN   7598<<ASSIGN   7622<<ASSIGN   9325<<ASSIGN   9338<<ASSIGN
KEYIN$
        31**DCL      7205>>DOCASE   7332>>IF       7423>>ASSIGN   7431>>ASSIGN   7573>>ASSIGN   7581>>DOCASE
      7607>>ASSIGN   7608>>ASSIGN   7615>>IF       7643>>ASSIGN   7665>>IF       7675>>ASSIGN   7681>>ASSIGN
      7703>>ASSIGN   9355>>IF       9357>>IF
LNK_WSN$
      4454**DCL      9428<<ASSIGN   9430>>ASSIGN
LOCK_DEV
      9261**PROC     7330--CALL     7364--CALL     7481--CALL     7975--CALL
LOGIT
      4480**DCL      6135<<ASSIGN   6160<<ASSIGN   6172<<ASSIGN   6188>>IF
LOG_ERR
      5695**DCL      6212<>CALL
LOG_ERR.V
      5695**DCL      5695--DCLINIT
LOG_ERR_BUF
      4569**DCL      5695--DCLINIT  5697--DCLINIT
LOG_ERR_BUF.AVAIL
      4570**DCL      6153<<ASSIGN
LOG_ERR_BUF.EXPSTAMP
      4569**DCL      4570--REDEF    6147<<ASSIGN
LOG_ERR_BUF.FRDAD
      4570**DCL      6211<<ASSIGN
LOG_ERR_BUF.NAVX
      4570**DCL      6154<<ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:408  
LOG_ERR_BUF.NUM
      4570**DCL      6159<<ASSIGN
LOG_ERR_BUF.STAMP
      4569**DCL      6157<<ASSIGN
LOG_ERR_BUF.SUBC
      4569**DCL      6145<<ASSIGN   6152<<ASSIGN
LOG_ERR_BUF.SYSID
      4570**DCL      6158<<ASSIGN
M$ACTIVATE
        68**DCL-ENT  7507--CALL     7906--CALL
M$DEACTIVATE
        68**DCL-ENT  6003--CALL     6040--CALL     6832--CALL     7504--CALL     7514--CALL     7903--CALL
      7958--CALL     7972--CALL
M$RPRIV
       107**DCL-ENT  7908--CALL
M$SETFP
        77**DCL-ENT  7512--CALL     7913--CALL
M$SPRIV
       107**DCL-ENT  7914--CALL     7955--CALL
M$SYMBIO
       113**DCL-ENT  6394--CALL     6464--CALL     6543--CALL     6656--CALL     6689--CALL     6746--CALL
      6836--CALL     7305--CALL     7535--CALL     7929--CALL     8151--CALL     8181--CALL     8206--CALL
      8239--CALL     9276--CALL
M$WRITE
        49**DCL-ENT  5973--CALL     6321--CALL     6491--CALL     6586--CALL     6876--CALL     6882--CALL
      6889--CALL     7381--CALL     7427--CALL     7499--CALL     7523--CALL     7657--CALL     7677--CALL
      7695--CALL     7704--CALL     7786--CALL     7969--CALL     9266--CALL     9393--CALL     9398--CALL
M$WRSYSLOG
        97**DCL-ENT  6212--CALL
MATCHACCT
      8809**PROC     8765--CALL
MATCHDEV
      9446**PROC     5935--CALL     5974--CALL
MATCHDEVR
      8061**PROC     7779--CALL     8025--CALL
MATCHEM1 IN PROCEDURE MATCHEM
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:409  
      8433**ENTRY    8024--CALL
MATCHEM11 IN PROCEDURE MATCHEM
      8435**ENTRY    7778--CALL
MATCHEM2 IN PROCEDURE MATCHEM
      8440**ENTRY    7754--CALL     9515--CALL
MATCHEMR
      8454**PROC     8076--CALL     8439--CALL
MATCHWSN
      9037**PROC     8441--CALL     8788--CALL     8801--CALL     9017--CALL     9029--CALL
NAVAIL
      7755**LABEL    7754--CALLALT
NEW_QUITRSN
      7017**LABEL    7038--GOTO     7047--GOTO
NEXT_WSN IN PROCEDURE MATCHDEV
      9479**LABEL    9466--GOTO     9481--GOTO
NOSPACE
      6470**LABEL    6450--CALLALT
NOSTART
        32**DCL      5944>>IF
NXT IN PROCEDURE MATCHDEVR
      8085**LABEL    8076--CALLALT
NXTDEV
      7787**LABEL    7772--GOTO     7787--GOTO
NXTEXT
      6193**LABEL    6207--GOTO
NXTEXT_SYMB
      5366**DCL      6656<>CALL     8181<>CALL
NXTEXT_SYMB.V
      5370**DCL      5366--DCLINIT
NXTFIL IN PROCEDURE AVAIL
      9517**LABEL    9515--CALLALT
OCMSG_AERR
      5102**DCL      6491<>CALL     6586<>CALL
OCMSG_AERR.STATION_
      5104**DCL      5104--REDEF
OCMSG_AERR.V
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:410  
      5105**DCL      5102--DCLINIT
OCMSG_AERR.V.DVBYTE.VFC#
      5111**DCL      5111--REDEF
OCMSG_ANY
      5000**DCL      9398<>CALL
OCMSG_ANY.STATION_
      5002**DCL      5002--REDEF
OCMSG_ANY.V
      5003**DCL      5000--DCLINIT
OCMSG_ANY.V.DVBYTE.VFC#
      5009**DCL      5009--REDEF
OCMSG_FPERR
      5272**DCL      7523<>CALL     7969<>CALL
OCMSG_FPERR.STATION_
      5274**DCL      5274--REDEF
OCMSG_FPERR.V
      5275**DCL      5272--DCLINIT
OCMSG_FPERR.V.DVBYTE.VFC#
      5281**DCL      5281--REDEF
OCMSG_IALN
      5238**DCL      6876<>CALL     6882<>CALL     6889<>CALL     7499<>CALL
OCMSG_IALN.STATION_
      5240**DCL      5240--REDEF
OCMSG_IALN.V
      5241**DCL      5238--DCLINIT
OCMSG_IALN.V.DVBYTE.VFC#
      5247**DCL      5247--REDEF
OCMSG_KERR
      5204**DCL      7427<>CALL
OCMSG_KERR.STATION_
      5206**DCL      5206--REDEF
OCMSG_KERR.V
      5207**DCL      5204--DCLINIT
OCMSG_KERR.V.DVBYTE.VFC#
      5213**DCL      5213--REDEF
OCMSG_ONOFF
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:411  
      5170**DCL      9393<>CALL
OCMSG_ONOFF.STATION_
      5172**DCL      5172--REDEF
OCMSG_ONOFF.V
      5173**DCL      5170--DCLINIT
OCMSG_ONOFF.V.DVBYTE.VFC#
      5179**DCL      5179--REDEF
OCMSG_RESP
      5068**DCL      7381<>CALL     7657<>CALL     7677<>CALL     7695<>CALL     7786<>CALL     9266<>CALL
OCMSG_RESP.STATION_
      5070**DCL      5070--REDEF
OCMSG_RESP.V
      5071**DCL      5068--DCLINIT
OCMSG_RESP.V.DVBYTE.VFC#
      5077**DCL      5077--REDEF
OCMSG_SUSP
      5034**DCL      6321<>CALL
OCMSG_SUSP.STATION_
      5036**DCL      5036--REDEF
OCMSG_SUSP.V
      5037**DCL      5034--DCLINIT
OCMSG_SUSP.V.DVBYTE.VFC#
      5043**DCL      5043--REDEF
OCMSG_TDSC
      5136**DCL      5973<>CALL
OCMSG_TDSC.STATION_
      5138**DCL      5138--REDEF
OCMSG_TDSC.V
      5139**DCL      5136--DCLINIT
OCMSG_TDSC.V.DVBYTE.VFC#
      5145**DCL      5145--REDEF
OCMSG_UNIMP
      5306**DCL      7704<>CALL
OCMSG_UNIMP.STATION_
      5308**DCL      5308--REDEF
OCMSG_UNIMP.V
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:412  
      5309**DCL      5306--DCLINIT
OCMSG_UNIMP.V.DVBYTE.VFC#
      5315**DCL      5315--REDEF
OLDQUITRSN
      4460**DCL      7017<<ASSIGN   7028>>DOCASE   7035>>DOCASE   7044>>DOCASE   7054>>DOCASE   7062>>DOCASE
      7070>>DOCASE
OPMSG_AERR
      4746**DCL      5103--DCLINIT  5104--DCLINIT
OPMSG_AERR.DEVNM
      4756**DCL      6490<<ASSIGN   6585<<ASSIGN
OPMSG_AERR.ERRC
      4761**DCL      6508<<ASSIGN
OPMSG_AERR.FLAGS
      4753**DCL      4754--REDEF
OPMSG_AERR.MSGID
      4749**DCL      4750--REDEF
OPMSG_AERR.SUBC
      4760**DCL      6488<<ASSIGN   6507<<ASSIGN   6583<<ASSIGN
OPMSG_ANY
      4681**DCL      5001--DCLINIT  5002--DCLINIT
OPMSG_ANY.DEVNM
      4691**DCL      9397<<ASSIGN
OPMSG_ANY.FLAGS
      4688**DCL      4689--REDEF
OPMSG_ANY.FORM
      4696**DCL      9370<<ASSIGN
OPMSG_ANY.MSG#
      4683**DCL      9371<<ASSIGN   9374<<ASSIGN
OPMSG_ANY.MSGID
      4684**DCL      4685--REDEF
OPMSG_ANY.SUBC
      4695**DCL      9369<<ASSIGN
OPMSG_FPERR
      4794**DCL      5273--DCLINIT  5274--DCLINIT
OPMSG_FPERR.ACCT
      4814**DCL      7968<<ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:413  
OPMSG_FPERR.CADDR
      4795**DCL      7519<<ASSIGN   7962<<ASSIGN
OPMSG_FPERR.DEVNM
      4804**DCL      7518<<ASSIGN   7961<<ASSIGN
OPMSG_FPERR.ERRCODE
      4812**DCL      7521<<ASSIGN   7964<<ASSIGN
OPMSG_FPERR.FLAGS
      4801**DCL      4802--REDEF
OPMSG_FPERR.LDBYPRO
      4813**DCL      7522<<ASSIGN   7965<<ASSIGN
OPMSG_FPERR.MSGID
      4797**DCL      4798--REDEF
OPMSG_FPERR.NAME
      4815**DCL      7966<<ASSIGN
OPMSG_FPERR.NL
      4810**DCL      7967<<ASSIGN
OPMSG_FPERR.SUBC
      4811**DCL      7520<<ASSIGN   7963<<ASSIGN
OPMSG_IALN
      4767**DCL      5239--DCLINIT  5240--DCLINIT
OPMSG_IALN.CADDR
      4768**DCL      7497<<ASSIGN
OPMSG_IALN.DEVNM
      4777**DCL      7496<<ASSIGN
OPMSG_IALN.FLAGS
      4774**DCL      4775--REDEF
OPMSG_IALN.FORM
      4787**DCL      6861<<ASSIGN
OPMSG_IALN.FORM_FLAG
      4784**DCL      6857<<ASSIGN   6860<<ASSIGN
OPMSG_IALN.MSGID
      4770**DCL      4771--REDEF
OPMSG_IALN.RACCT
      4788**DCL      6870<<ASSIGN
OPMSG_IALN.RACCT_FLAG
      4785**DCL      6866<<ASSIGN   6869<<ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:414  
OPMSG_IALN.SUBC
      4786**DCL      6875<<ASSIGN   6881<<ASSIGN   6888<<ASSIGN   7498<<ASSIGN
OPMSG_KERR
      4702**DCL      5205--DCLINIT  5206--DCLINIT
OPMSG_KERR.CADDR
      4703**DCL      7423<<ASSIGN   7425<<ASSIGN
OPMSG_KERR.DEVNM
      4712**DCL      7420<<ASSIGN
OPMSG_KERR.ERRCODE
      4717**DCL      7977<<ASSIGN
OPMSG_KERR.FLAGS
      4709**DCL      4710--REDEF
OPMSG_KERR.MSGID
      4705**DCL      4706--REDEF
OPMSG_KERR.SUBC
      4716**DCL      7426<<ASSIGN
OPMSG_KERR.SYSID
      4706**DCL      7431<<ASSIGN
OPMSG_ONOFF
      4723**DCL      5171--DCLINIT  5172--DCLINIT
OPMSG_ONOFF.CHKPTD
      4740**DCL      9391<<ASSIGN
OPMSG_ONOFF.COMMODE
      4739**DCL      9390<<ASSIGN
OPMSG_ONOFF.DEVNM
      4733**DCL      9392<<ASSIGN
OPMSG_ONOFF.FLAGS
      4730**DCL      4731--REDEF
OPMSG_ONOFF.MSG#
      4725**DCL      9377<<ASSIGN   9380<<ASSIGN
OPMSG_ONOFF.MSGID
      4726**DCL      4727--REDEF
OPMSG_ONOFF.NUM
      4738**DCL      9389<<ASSIGN
OPMSG_ONOFF.SYSID
      4727**DCL      9388<<ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:415  
OPMSG_RESP
      4658**DCL      5069--DCLINIT  5070--DCLINIT
OPMSG_RESP.ACCT
      4673**DCL      4674--REDEF    4675--REDEF    7655<<ASSIGN
OPMSG_RESP.CADDR
      4659**DCL      7202<<ASSIGN   7785<<ASSIGN   9265<<ASSIGN
OPMSG_RESP.DEVNM
      4668**DCL      7203<<ASSIGN   7782<<ASSIGN   9264<<ASSIGN
OPMSG_RESP.FLAGS
      4665**DCL      4666--REDEF
OPMSG_RESP.FORM
      4675**DCL      7783<<ASSIGN
OPMSG_RESP.MSGID
      4661**DCL      4662--REDEF
OPMSG_RESP.SUBC
      4672**DCL      7380<<ASSIGN   7656<<ASSIGN   7676<<ASSIGN   7694<<ASSIGN   7784<<ASSIGN   9263<<ASSIGN
OPMSG_RESP.WSN
      4674**DCL      7675<<ASSIGN   7693<<ASSIGN
OPMSG_SUSP
      4614**DCL      5035--DCLINIT  5036--DCLINIT
OPMSG_SUSP.ACCT
      4632**DCL      6316<<ASSIGN
OPMSG_SUSP.DEVNM
      4624**DCL      6314<<ASSIGN
OPMSG_SUSP.FLAGS
      4621**DCL      4622--REDEF
OPMSG_SUSP.MSGID
      4617**DCL      4618--REDEF
OPMSG_SUSP.NUM
      4631**DCL      6317<<ASSIGN
OPMSG_SUSP.QUITRSN
      4633**DCL      6319<<ASSIGN
OPMSG_SUSP.SUBC
      4630**DCL      6320<<ASSIGN
OPMSG_SUSP.SYSID
      4618**DCL      6315<<ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:416  
OPMSG_TDSC
      4639**DCL      5137--DCLINIT  5138--DCLINIT
OPMSG_TDSC.DEVNM
      4649**DCL      5972<<ASSIGN
OPMSG_TDSC.FLAGS
      4646**DCL      4647--REDEF
OPMSG_TDSC.MSGID
      4642**DCL      4643--REDEF
OPMSG_UNIMP
      4821**DCL      5307--DCLINIT  5308--DCLINIT
OPMSG_UNIMP.CADDR
      4822**DCL      7703<<ASSIGN
OPMSG_UNIMP.FLAGS
      4828**DCL      4829--REDEF
OPMSG_UNIMP.MSGID
      4824**DCL      4825--REDEF
P$
      4447**DCL      9410<<ASSIGN   9414>>IF       9422>>IF       9424>>ASSIGN   9438<<ASSIGN   9438>>ASSIGN
      9467<<ASSIGN   9468>>DOWHILE  9469>>IF       9471>>IF       9471>>IF       9474>>ASSIGN   9488<<ASSIGN
      9488>>ASSIGN
P$ IN PROCEDURE MATCHDEVR
      8063**DCL      8068<<ASSIGN   8069>>DOWHILE  8070>>IF       8071>>IF       8071>>IF       8071>>IF
      8071>>IF       8076>>CALL     8077>>IF       8080>>IF       8085<<ASSIGN   8085>>ASSIGN
PAGES
      4477**DCL      7573<<ASSIGN   7574>>IF       7574>>IF       7574>>IF       7584>>IF       7590>>IF
PREVLEXT$
        26**DCL      6923>>ASSIGN   6930>>ASSIGN
PRIO
      4461**DCL      7773<<ASSIGN   7774>>DOWHILE  7775>>ASSIGN   7792<<ASSIGN   7792>>ASSIGN   8017<<ASSIGN
      8019>>DOWHILE  8020>>ASSIGN   8026>>IF       8032<<ASSIGN   8032>>ASSIGN
P_WSN$
      4450**DCL      9474<<ASSIGN   9475>>DOWHILE  9476>>DOINDEX  9477>>IF       9484<<ASSIGN   9484>>ASSIGN
QUITRSN
      4459**DCL      6216<<ASSIGN   6221<<ASSIGN   6250<<ASSIGN   6713<<ASSIGN   7013<<ASSIGN   7022>>DOCASE
      7031>>ASSIGN   7081>>ASSIGN   7083>>DOCASE   7244<<ASSIGN   7331<<ASSIGN
QUIT_DEV
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:417  
      8272**PROC     6067--CALL     6407--CALL
REC$
      4472**DCL      6384<<ASSIGN   6386>>ASSIGN   6389>>ASSIGN
REL_ALR
      8114**PROC     6311--CALL     6510--CALL     6516--CALL     6568--CALL     6575--CALL     6751--CALL
      6852--CALL     9408--CALL
REM_DEV
      9406**PROC     5977--CALL
RESET_PRIVS
      5780**DCL      7908<>CALL     7914<>CALL     7955<>CALL
RESET_PRIVS.V
      5780**DCL      5780--DCLINIT
RESET_PRIVS.V.PRIV#
      5780**DCL      7907<<ASSIGN
RESTRICT_WSN
      7676**LABEL    7670--GOTO
RESUSP
      6317**LABEL    6473--GOTO
SAV$ IN PROCEDURE UNAVAIL
      9533**DCL      9535<<ASSIGN   9544>>ASSIGN
SAVFIL$
      4466**DCL      8016<<ASSIGN   8027>>IF       8027<<ASSIGN   8034>>IF       8035>>ASSIGN
SBLKS_DEV
      8200**PROC     7160--CALL
SCHDEV0 IN PROCEDURE SCHED_DEV
      7891**LABEL    7883--GOTO
SCHDEV1 IN PROCEDURE GETFIL_DEV
      8022**LABEL    8024--CALLALT  8025--CALLALT
SCHDEV1 IN PROCEDURE SCHED_DEV
      7953**LABEL    7913--CALLALT
SCHDEV2 IN PROCEDURE SCHED_DEV
      7968**LABEL    7906--CALLALT
SCHDEV3 IN PROCEDURE SCHED_DEV
      7968**LABEL    7929--CALLALT
SCHDEV4 IN PROCEDURE SCHED_DEV
      7981**LABEL    7970--GOTO     7983--GOTO
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:418  
SCHED_DEV
      7864**PROC     6411--CALL     7727--CALL
SET_BLKREC
      8371**PROC     6450--CALL     7164--CALL     7296--CALL     7304--CALL
SET_EXT
      8099**PROC     7923--CALL     8180--CALL     8201--CALL
SET_EXTBLNK
      8410**PROC     6455--CALL     6663--CALL     8398--CALL
SPACEBACK
      6819**LABEL    7284--GOTO     7289--GOTO
SPACEBLKS_SYMB
      5484**DCL      8206<>CALL
SPACEBLKS_SYMB.BUF_.BUF$
      5485**DCL      8205<<ASSIGN
SPACEBLKS_SYMB.V
      5488**DCL      5484--DCLINIT
SPACEBLKS_SYMB.V.BLKREC
      5492**DCL      8202<<ASSIGN
SPACEBLKS_SYMB.V.SPACEPAGES#
      5492**DCL      8203<<ASSIGN
SPACEBLKS_SYMB.V.SPACEREC#
      5494**DCL      8204<<ASSIGN
SPACED_EOF
      7167**LABEL    7164--CALLALT
SPACE_BACK
      8169**PROC     6822--CALL     8160--CALL
SPACE_SYMB
      5454**DCL      6464<>CALL
SPACE_SYMB.BUF_.BUF$
      5455**DCL      6463<<ASSIGN
SPACE_SYMB.V
      5458**DCL      5454--DCLINIT
SPACE_SYMB.V.BLKREC
      5462**DCL      6458<<ASSIGN
SPACE_SYMB.V.BLKREC.REC#
      5463**DCL      6459<<ASSIGN   6459>>ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:419  
SPACE_SYMB.V.CPVFC#
      5461**DCL      6462<<ASSIGN
SPACE_SYMB.V.PAGES#
      5461**DCL      6461<<ASSIGN
SPACE_SYMB.V.SPACEPAGES#
      5462**DCL      6460<<ASSIGN
SPKEYIN
      4549**DCL      8173--CALL
SPKEYIN.CHKP
      4559**DCL      4560--REDEF
SPKEYIN.DEVNM
      4552**DCL      4553--REDEF    8170<<ASSIGN
SPKEYIN.NPAGES
      4557**DCL      8171<<ASSIGN
SPKEYIN.SPACEFROM
      4558**DCL      8172<<ASSIGN
SPKEYIN.TNAME
      4564**DCL      4565--REDEF    4566--REDEF
STAMP
      4474**DCL      6146<<ASSIGN   6147>>ASSIGN   6155<<ASSIGN
START_CHKPF
      8133**PROC     6521--CALL     7277--CALL     7952--CALL
START_DEV IN PROCEDURE SCHED_DEV
      7884**ENTRY    7397--CALL
START_FIRSTEXT
      8179**PROC     6522--CALL
START_FPRG
      5713**DCL      7512<>CALL     7913<>CALL
START_FPRG.V
      5714**DCL      5713--DCLINIT
START_SPACE1
      6447**LABEL    6471--GOTO
START_SYMB
      5337**DCL      7535<>CALL     7929<>CALL
START_SYMB.BUF_.BUF$
      5338**DCL      7533<<ASSIGN   7926<<ASSIGN
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:420  
START_SYMB.V
      5341**DCL      5337--DCLINIT
START_SYMB.V.BLKREC
      5345**DCL      7532<<ASSIGN   7924<<ASSIGN
START_SYMB.V.ORDER#
      5342**DCL      7501<<ASSIGN   7527<<ASSIGN   7897<<ASSIGN   7917<<ASSIGN
START_SYMB.V.SETX#
      5343**DCL      7534<<ASSIGN   7928<<ASSIGN
STATE
      4478**DCL      5901<<ASSIGN   5932>>DOCASE   5969>>DOCASE   6031>>DOCASE   6059>>DOCASE   6093>>DOCASE
      6120>>DOCASE   6248>>DOCASE   6279>>DOCASE   6617>>DOCASE   6793>>DOCASE   6918>>DOCASE   7128>>DOCASE
      7213>>DOCASE   7241>>DOCASE   7266>>DOCASE   7328>>DOCASE   7346>>DOCASE   7384>>DOCASE   7468>>DOCASE
      7618>>DOCASE   7724>>DOCASE
SUSP_DEV
      9275**PROC     7222--CALL
SUSP_SYMB
      5638**DCL      9276<>CALL
SUSP_SYMB.V
      5642**DCL      5638--DCLINIT
SYMB_FPRG
      5730**DCL      5714--DCLINIT  7911<<ASSIGN
SYMB_FPRG.ACCT#
      5736**DCL      7968>>ASSIGN
SYMB_FPRG.LDBYPRO#
      5734**DCL      7510<<ASSIGN   7517<<ASSIGN   7528<<ASSIGN   7965>>ASSIGN
SYMB_FPRG.NAME.C#
      5736**DCL      7966>>ASSIGN
SYMB_FPRG.NAME.L#
      5735**DCL      7967>>ASSIGN
SYMB_STA
      5754**DCL      5713--DCLINIT
SYMB_STA.MSGIDXT
      5764**DCL      5767--REDEF
SYMB_STA.STATION#
      5758**DCL      7511<<ASSIGN   7912<<ASSIGN
TCON0
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:421  
      5935**LABEL    5935--CALLALT
TCONMSG_DEV
      9368**PROC     5940--CALL
TDSC0
      5972**LABEL    5974--CALLALT
TOKEN_SYMB
      5666**DCL      6689<>CALL     6746<>CALL
TOKEN_SYMB.V
      5670**DCL      5666--DCLINIT
TOKERSN
      4471**DCL      6788<<ASSIGN   6795>>DOCASE   6826>>DOCASE   6885>>IF
UNAVAIL
      9531**PROC     5975--CALL
WCB_REC
      5571**DCL      5546--DCLINIT
WCB_REC.REC#
      5572**DCL      8147<<ASSIGN
WCB_REC.RECL#
      5572**DCL      8146<<ASSIGN
WCB_REC.REPEATS#
      5571**DCL      8149<<ASSIGN   8150<<ASSIGN
WCB_SYMB
      5544**DCL      8151<>CALL
WCB_SYMB.BUF_.BUF$
      5545**DCL      8142<<ASSIGN
WCB_SYMB.V
      5548**DCL      5544--DCLINIT
WCB_SYMB.V.ACK#
      5551**DCL      8143<<ASSIGN
WGR_SYMB
      5610**DCL      6543<>CALL
WGR_SYMB.BUF_.BUF$
      5611**DCL      6541<<ASSIGN
WGR_SYMB.V
      5614**DCL      5610--DCLINIT
WGR_SYMB.V.ACK#
PL6.E3A0      #001=FOD$DEV File=FOD$DEV.:E05TSI                                  TUE 07/29/97 17:04 Page:422  
      5617**DCL      6542<<ASSIGN
WLR_REC
      5589**DCL      5516--DCLINIT
WLR_REC.REC#
      5590**DCL      6384--ASSIGN
WLR_REC.RECL#
      5590**DCL      6387<<ASSIGN   6390<<ASSIGN   6390>>ASSIGN
WLR_SYMB
      5514**DCL      6394<>CALL
WLR_SYMB.BUF_.BUF$
      5515**DCL      6392<<ASSIGN
WLR_SYMB.V
      5518**DCL      5514--DCLINIT
WLR_SYMB.V.ACK#
      5521**DCL      6393<<ASSIGN
WSN
      4453**DCL      8781<<ASSIGN   8785--IF       8798>>IF
WSN$
      4449**DCL      7662<<ASSIGN   7663>>DOWHILE  7664>>DOINDEX  7665>>IF       7665>>IF       7665>>IF
      7672<<ASSIGN   7672>>ASSIGN   9239<<ASSIGN   9240>>DOWHILE  9241>>DOINDEX  9242>>IF       9242>>IF
      9242>>IF       9248<<ASSIGN   9248>>ASSIGN   9426<<ASSIGN   9427>>DOWHILE  9428>>ASSIGN   9429<>CALL
      9430<<ASSIGN   9448<<ASSIGN   9449>>DOWHILE  9450>>DOINDEX  9451>>IF       9451>>IF       9456<<ASSIGN
      9456>>ASSIGN   9460<<ASSIGN   9461>>DOWHILE  9462>>DOINDEX  9463>>IF       9463>>IF       9477>>IF
      9492<<ASSIGN   9492>>ASSIGN
WSN_TALLY
      4456**DCL      9459<<ASSIGN   9480<<ASSIGN   9480>>ASSIGN   9495>>IF
WSN_TOTAL
      4455**DCL      9447<<ASSIGN   9454<<ASSIGN   9454>>ASSIGN   9495>>IF
