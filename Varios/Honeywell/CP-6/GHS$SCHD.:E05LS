VERSION E05

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:1    
        1        1        /*M* Execution Scheduler Procedures                                 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC  */
        8        8        /*P* NAME: GHS$RUE
        9        9             PURPOSE: To maintain lists of users in various state queues
       10       10                      in response to events reported by the monitor.        */
       11       11        /*D* NAME: GHS$RUE
       12       12             CALL: CALL GHS$RUE (event-number,
       13       13                                 user-number,
       14       14                                 parameter-3,
       15       15                                 parameter-4)  ALTRET(altreturn-label);
       16       16             Where;
       17       17                event-number is one of the scheduler event numbers defined in
       18       18                the GH_SCHD_E file.
       19       19                user-number is the number of the user the event is reported
       20       20                on.
       21       21                parameter-3 and parameter-4 are dependant on the event being
       22       22                reported.
       23       23                ALTRETURN is taken if the event was a REG type event and the
       24       24                user was not suspended from execution.
       25       25
       26       26             DESCRIPTION:  The scheduler manipulates users in a prioritized
       27       27              state queue structure based on event information given to it by
       28       28              operating system procedures.  There are three types of scheduler
       29       29              states, Executable, Current User and Non-executable, and every
       30       30              LCP6 User is in one and only one state at a given time.  The
       31       31              Current User state contains the currently executing user.  The
       32       32              Executable states contain users available for execution, ordered
       33       33              by a scheduler assigned priority.  The highest priority user
       34       34              from the executable states becomes the next current user.  The
       35       35              Non-Executable states contain users waiting for the occurance of
       36       36              an event that will make them available for execution.
       37       37
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:2    
       38       38              Users change from one state to another upon the reporting of an
       39       39              event to the scheduler by a monitor procedure.  There are two
       40       40              kinds of events that may be reported.  Events known as REGs
       41       41              (Report Event and Give up control) are reported on the current
       42       42              the current user and cause the current execution quantum to be
       43       43              suspended. Events not identified as REGs (and known simply as
       44       44              events), may be reported on users in any state and may or may
       45       45              not cause a state change.  The scheduler tests event-state
       46       46              combinations when events are reported and Screeches on illegal
       47       47              combinations.
       48       48                                                                            */
       49       49        GHS$RUE: PROC(EVNT,USR,PARM3,PARM4) ALTRET;
       50       50
       51       51
       52       52
       53       53        %INCLUDE B_ERRORS_C;
       54     1180        %INCLUDE FM$FIT;
       55     1401        %INCLUDE GH_SCHD_E;
       56     1497        %INCLUDE GH_SCHD_M;                     /* Scheduler Macros                   */
       57     1641 S      %INCLUDE GH_LCP6_M;
       58     1642        %INCLUDE GH_GATE_M;
       59     1683 S      %INCLUDE GF_LCP6_M;
       60     1684 S      %INCLUDE GU_LCP6_M;
       61     1685        %INCLUDE G_HJIT_M;
       62     1830        %INCLUDE G_JIT_M;
       63     2095 S      %INCLUDE G_LCP6_E;
       64     2096        %INCLUDE G_ROS_M;
       65     2178        %INCLUDE KL_MACRO_C;
       66     5530        %INCLUDE GJ_MSG_M;
       67     5843        %INCLUDE SS_SCODE_C;
       68     5863        %INCLUDE J_SCODE_C;
       69     5891
       70     5892        %G$JIT;
       71     6306        %G$ROS(FPTN=G$ROS,FULL=YES,STCLASS=BASED);
       72     7257        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
       73    10231        %G$HHJIT;
       74    12375        %G$LOW_MEM (STCLASS="BASED(G$LOW_MEM$)");
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:3    
       75    12424        %G$USER (STCLASS="BASED(P$)");
       76    12435        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
       77    12446        %GATE (FPTN=G_ASFGATE,STCLASS=SYMREF);
       78    12465        %GATE (FPTN=KNA_LNKSSN,STCLASS=SYMREF);
       79    12484        %GATE (FPTN=G_SCHDGATE,STCLASS=SYMREF);
       80    12503        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
       81    19377        %KL_AFD (FPTN=KL$AFD,STCLASS="BASED(AFD$)");
       82    19417        %M$DCB (DCBN=M$DCB,STCLASS=BASED);
       83    19468        %VLP_ERRCODE (FPTN=VLP$ERRCODE,STCLASS=BASED);
       84    19514
       85    19515
       86    19516    1   DCL GHH$ASD ENTRY(2);
       87    19517    1   DCL GHI$UTS ENTRY(1);
       88    19518    1   DCL GHS$POKECPU ENTRY(2) ALTRET;
       89    19519    1   DCL GHR$MON ENTRY;
       90    19520    1   DCL GHR$SRV ENTRY;
       91    19521    1   DCL GHR$IDL ENTRY;
       92    19522    1   DCL GHI$DELU ENTRY;
       93    19523    1   DCL GMA$RELCVM ENTRY(1) ALTRET;
       94    19524    1   DCL KNA$CHECK ENTRY ALTRET;
       95    19525
       96    19526
       97    19527
       98    19528    1   DCL EVNT UBIN;                          /* Reported Event Number              */
       99    19529    1   DCL USR UBIN;                           /* Reported User Number               */
      100    19530    1   DCL PARM3 UBIN;                         /* 3rd parameter                      */
      101    19531    1   DCL PARM4 UBIN;                         /* 4th parameter                      */
      102    19532
      103    19533
      104    19534    1   DCL USER UBIN;                          /* Internal user number               */
      105    19535    1   DCL EVENT UBIN;                         /* Internal event number              */
      106    19536    1   DCL HDFLG BIT(1);                       /* True => Add to head of queue       */
      107    19537    1   DCL INC UBIN;                           /* priority increment index           */
      108    19538    1   DCL STATE UBIN;                         /* User new state number              */
      109    19539    1   DCL I1 REDEF STATE UBIN;
      110    19540    1   DCL UST UBIN;                           /* User current state number          */
      111    19541    1   DCL PRIO UBIN;                          /* Temp User priority                 */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:4    
      112    19542    1   DCL PARM3$ UBIN(32) BASED;
      113    19543    1   DCL AFD$ PTR;
      114    19544    1   DCL JIT$ PTR;
      115    19545    1   DCL M$DEBUG$ PTR;
      116    19546    1   DCL BLK UBIN;
      117    19547    1   DCL FLK UBIN;
      118    19548    1   DCL AFLG REDEF FLK BIT(16);
      119    19549    1   DCL I REDEF FLK UBIN;
      120    19550    1   DCL REGGED BIT(1);                      /* REG or RUE flag                    */
      121    19551    1   DCL P$ PTR;                             /* Scratch pointer                    */
      122    19552    1   DCL PG$ PTR;                            /*    "                               */
      123    19553    1   DCL GH_PINC(0:5) UBIN SYMREF;
      124    19554    1   DCL G$JIT$ PTR SYMREF;
      125    19555    1   DCL G$MHJIT$ PTR SYMREF;
      126    19556    1   DCL G$ROS$ PTR SYMREF;
      127    19557    1   DCL G$UHJIT$ PTR SYMREF;
      128    19558    1   DCL G$LOW_MEM$ PTR SYMREF;
      129    19559    1   DCL G$USRT$ PTR SYMREF;
      130    19560    1   DCL G$WINDOW1$ PTR SYMREF;
      131    19561    1   DCL G_NSCPU UBIN SYMREF;
      132    19562    1   DCL G_CUR_USRS(0:0) UBIN SYMREF;
      133    19563    1   DCL G_CPUSTATE(0:3) UBIN SYMREF;
      134    19564    1   DCL G_DIS SBIN SYMREF;
      135    19565    1   DCL G_MING UBIN SYMREF;
      136    19566    1   DCL KN_DELU_CHECK UBIN SYMREF;
      137    19567    1   DCL GH_EVF UBIN SYMREF;
      138    19568    1   DCL GH_MFU UBIN SYMREF;
      139    19569    1   DCL GH_HQ(0:0) UBIN SYMREF;
      140    19570    1   DCL GH_TQ(0:0) UBIN SYMREF;
      141    19571    1   DCL GH_CUP UBIN SYMREF;
      142    19572    1   DCL GH_HIR SBIN SYMREF;
      143    19573
      144    19574        %VLP_ERRCODE (FPTN=E_NOFPRG,STCLASS=CONSTANT,FCG='GH',MID='S',MON='1'B,
      145    19575                      ERR#=%E$NOFPRG,SEV=2);
      146    19621        %VLP_ERRCODE (FPTN=E_TWODBG,STCLASS=CONSTANT,FCG='GH',MID='S',MON='1'B,
      147    19622                      ERR#=%E$TWODBG,SEV=2);
      148    19668        %VLP_ERRCODE (FPTN=E_DEBUGXONLY,STCLASS=CONSTANT,FCG='GH',MID='S',MON='1'B,
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:5    
      149    19669                      ERR#=%E$DEBUGXONLY,SEV=2);
      150    19715        %VLP_ERRCODE (FPTN=E_NODBGACC,STCLASS=CONSTANT,FCG='GH',MID='S',MON='1'B,
      151    19716                      ERR#=%E$NODBGACC,SEV=2);
      152    19762        %VLP_SCODE (FPTN=EVNTERR,ERR#=%S$EVENTERR,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
      153    19763                    FCG=GH,MID=S,MON='1'B);
      154    19824        %VLP_SCODE (FPTN=AFDERR,ERR#=%S$EVENTERR,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
      155    19825                    FCG=GH,MID=S,MON='1'B);
      156    19886        %VLP_SCODE (FPTN=MINGERR,ERR#=%S$MING,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
      157    19887                    FCG=GH,MID=S,MON='1'B);
      158    19948
      159    19949    1   DCL SCREECH ENTRY(1);
      160    19950
      161    19951        %GJ_FCN#;
      162    19977
      163    19978        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:6    
      164    19979        /*  The PTBL macro generates a two word permission table entry.  Bits
      165    19980        corresponding to scheduler states are set as specified.            */
      166    19981        %MACRO PTBL (CONT=0,SEXU=0,SCU=0,SIOW=0,SW=0,SQFI=0,SMEM=0,
      167    19982             SQA=0,SNULL=0,IOMF=0,SQFP=0,STOB=0,STI=0,SCW=0);
      168    19983
      169    19984              ,2 *(0:15) UBIN(1) UNAL INIT( CONT, SEXU*11, SCU, SIOW, SW, SQFI)
      170    19985                 ,2 *(0:15) UBIN(1) UNAL INIT(CONT,SMEM,0,IOMF,SQA,SQFP,
      171    19986                 STOB,STI,SCW,0*6,SNULL)
      172    19987
      173    19988        %MEND;
      174    19989
      175    19990        /*  The PALL macro generates a two word permission table entry with
      176    19991        all bits set.                                                      */
      177    19992        %MACRO PALL;
      178    19993                 ,2 *(0:15) UBIN(1) UNAL INIT( 0, 1*0)
      179    19994                 ,2 *(0:15) UBIN(1) UNAL INIT(0,1*0)
      180    19995        %MEND;
      181    19996
      182    19997
      183    19998        /*  The PNONE macro generates a two word permission table entry with
      184    19999        no bits set.                                                       */
      185    20000        %MACRO PNONE;
      186    20001                 ,2 *(0:15) UBIN(1) UNAL INIT( 0*0)
      187    20002                 ,2 *(0:15) UBIN(1) UNAL INIT(0*0)
      188    20003        %MEND;
      189    20004
      190    20005
      191    20006        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:7    
      192    20007        /* The following permission table consists of an entry for each
      193    20008           event.  Within each entry is a bit for each state and a contin-
      194    20009           uation flag.  If the bit corresponding to the user's current
      195    20010           state is set in the entry for the reported event, then it's
      196    20011           ok to report that event on him.  If its not set, but the
      197    20012           continuation bit is, the event number is incremented by
      198    20013           one and the entry for that event is checked.  If continue is
      199    20014           not set, its  an illegal event/state combination.
      200    20015                                                                           */
      201    20016    1   DCL 1 PERM_ CONSTANT
      202    20017        /*   event 0   */
      203    20018        %PNONE;
      204    20022        /*   sleep     */
      205    20023        %PTBL (SEXU=1,SCU=1,SW=1);
      206    20028        /* wake up   */
      207    20029        %PALL;
      208    20033        /* Queue For Interrupt */
      209    20034        %PTBL (SCU=1);
      210    20039        /* Unqueue QFI User             */
      211    20040        %PTBL (SQFI=1,SW=1);
      212    20045        /* I/O In Progress              */
      213    20046        %PTBL (SCU=1);
      214    20051        /* I/O Complete                 */
      215    20052        %PTBL (SIOW=1);
      216    20057        /* Need memory                  */
      217    20058        %PTBL (SCU=1);
      218    20063        /* Memory Available             */
      219    20064        %PTBL (SCU=1);
      220    20069        /* Break Character Received     */
      221    20070        %PALL;
      222    20074        /* Control Y Received           */
      223    20075        %PALL;
      224    20079        /* Internal Scheduler Event     */
      225    20080        %PNONE;
      226    20084        /* Internal Scheduler Event     */
      227    20085        %PNONE;
      228    20089        /* Queue for Access             */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:8    
      229    20090        %PTBL (SCU=1);
      230    20095        /* Unqueue for Access           */
      231    20096        %PTBL (SQA=1,SCU=1);
      232    20101        /* I/O Complete, Unblock User   */
      233    20102        %PTBL (SIOW=1);
      234    20107        /* Queue while Processor Association in progress */
      235    20108        %PTBL (SCU=1);
      236    20113        /* Unqueue after Processor Associated */
      237    20114        %PTBL (SCU=1);
      238    20119        /* Associate Debugger,  Don't Change User State   */
      239    20120        %PTBL (CONT=1,SCU=1,SCW=1,SIOW=1,SQA=1,IOMF=1,SQFP=1,SQFI=1,SNULL=1);
      240    20125        /* Associate Debugger, Make User Executable  */
      241    20126        %PTBL (SEXU=1,SW=1,STOB=1,STI=1,SMEM=1);
      242    20131        /*  Delete Current User                                            */
      243    20132        %PTBL (SCU=1);
      244    20137        /*    Communications Wait          */
      245    20138        %PTBL (SCU=1);
      246    20143        /*    Communications  Read           */
      247    20144        %PTBL (SCU=1);
      248    20149        /*    Communications Input Complete */
      249    20150        %PTBL (CONT=1,STI=1,SCW=1);
      250    20155        /*    Communications Input Complete on Current User */
      251    20156        %PTBL (SCU=1);
      252    20161        /*    Communcations Output Blocked */
      253    20162        %PTBL (SCU=1);
      254    20167        /*    Communcations Output Unblock  */
      255    20168        %PTBL (CONT=1,STOB=1);
      256    20173        /*    Communications Output Unblock  */
      257    20174        %PTBL (SEXU=1,SCU=1,SIOW=1,SW=1,SQFI=1,SMEM=1,IOMF=1,SQA=1,
      258    20175               SQFP=1,STI=1,SCW=1,SNULL=1);
      259    20180        /*    Break Received                */
      260    20181        %PTBL (CONT=1,SCU=1,SCW=1,SIOW=1,SQA=1,IOMF=1,SQFP=1,SQFI=1);
      261    20186        /*    Break Received, State change required   */
      262    20187        %PTBL (SEXU=1,SW=1,STOB=1,STI=1,SMEM=1);
      263    20192        /*    CNTRL Y Received             */
      264    20193        %PTBL (CONT=1,SCU=1,SCW=1,SIOW=1,SQA=1,IOMF=1,SQFP=1,SQFI=1);
      265    20198        /*    CNTRL Y Received, State change required   */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:9    
      266    20199        %PTBL (SEXU=1,SW=1,STOB=1,STI=1,SMEM=1);
      267    20204        /*    Disconnect                   */
      268    20205        %PTBL (CONT=1,SCU=1,SIOW=1,SQFI=1,SQA=1,SQFP=1,IOMF=1,SCW=1);
      269    20210        /*    Disconnect, State change required */
      270    20211        %PTBL (SEXU=1,SW=1,STI=1,STOB=1,SMEM=1);
      271    20216        /*    Crash                          */
      272    20217        %PTBL (STI=1,STOB=1,SCW=1);
      273    20222        /*    Operator Errored               */
      274    20223        %PTBL (CONT=1,SCU=1,SIOW=1,SQFI=1,SQA=1,SQFP=1,IOMF=1,SCW=1,STI=1);
      275    20228        /*    Operator Errored, State change required */
      276    20229        %PTBL (SEXU=1,SW=1,STOB=1,SMEM=1);
      277    20234        /*    Operator Aborted               */
      278    20235        %PTBL (CONT=1,SCU=1,SIOW=1,SQFI=1,SQA=1,SQFP=1,IOMF=1,SCW=1,STI=1);
      279    20240        /*    Operator Aborted, State change required */
      280    20241        %PTBL (SEXU=1,SW=1,STOB=1,SMEM=1);
      281    20246    1         ;                               /* end of PERM_*/
      282    20247
      283    20248    1   DCL PERM (0:%GH_PERM#) REDEF PERM_ BIT(16);
      284    20249
      285    20250    1   DCL STBL(0:16) BIT(16) CONSTANT INIT(
      286    20251    1        '8000'X,                           /* Continuation flag                  */
      287    20252    1        '4000'X,
      288    20253    1        '2000'X,
      289    20254    1        '1000'X,
      290    20255    1        '0800'X,
      291    20256    1        '0400'X,
      292    20257    1        '0200'X,
      293    20258    1        '0100'X,
      294    20259    1        '0080'X,
      295    20260    1        '0040'X,
      296    20261    1        '0020'X,
      297    20262    1        '0010'X,
      298    20263    1        '0008'X,
      299    20264    1        '0004'X,
      300    20265    1        '0002'X,
      301    20266    1        '0001'X,
      302    20267    1        '0001'X); /* SNULL (31) is at 30 in the PERM table, so make a bit for it */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:10   
      303    20268        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:11   
      304    20269
      305    20270    1         REGGED = '0'B;                  /* Report user event entry            */
      306    20271    1         GOTO R0;
      307    20272
      308    20273    1   GHS$REGUSR: ENTRY(EVNT,USR,PARM3,PARM4) ALTRET;
      309    20274    1         REGGED = '1'B;                  /* REG current user                   */
      310    20275
      311    20276    1   R0:   ;
      312    20277                %LOCK (G = G_SCHDGATE);
      313    20284
      314    20285    1         IF ADDR(USR) = ADDR(NIL) THEN
      315    20286    1            USER = G$MHJIT.CUN;
      316    20287    1         ELSE
      317    20288    1            USER = USR;
      318    20289    1         HDFLG = '0'B;
      319    20290    1         P$ = ADDR(G$USER(USER));
      320    20291    1         UST=G$U.US;
      321    20292    1         EVENT = EVNT;
      322    20293    1         CALL EVREPRT;
      323    20294
      324    20295    1         I1=UST;
      325    20296    1         EVENT = 2*EVNT;
      326    20297    1         IF I1 > 15 THEN
      327    20298    2         DO;
      328    20299    2            I1=I1-15;
      329    20300    2            EVENT=EVENT+1;
      330    20301    2            END;
      331    20302    2         DO WHILE ( NOT(PERM(EVENT) & STBL(I1)));
      332    20303    2            IF NOT (PERM(EVENT) & STBL(0)) THEN
      333    20304    2               CALL SCREECH (EVNTERR);   /* Event inconsistent with state*/
      334    20305    2            EVENT=EVENT+2;               /* continued event                    */
      335    20306    2            END;
      336    20307    1         EVENT = EVENT / 2;
      337    20308
      338    20309    2         DO CASE (EVENT);
      339    20310    2          CASE(%GH_EVIIP);               /* I/O In Progress                    */
      340    20311    2            STATE=%GH_IOW;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:12   
      341    20312    2            IF G$U.MF = 0 THEN
      342    20313    2               ALTRETURN;
      343    20314    2            CALL  CHANGE_STATE;
      344    20315
      345    20316
      346    20317    2          CASE (%GH_EVCW);               /* Communications Wait                */
      347    20318    2            IF G$U.FLG.BLK='1'B THEN GOTO UNBLKD_BEFORE_BLKD;
      348    20319    2            STATE=%GH_CW;
      349    20320    2            GOTO SET_CIO;                /* Set Comm flag                      */
      350    20321
      351    20322    2          CASE (%GH_EVCRD);              /* Communications Read                */
      352    20323                   %LOCK (G =G_ASFGATE);
      353    20330    3            IF G$U.ASYNCH OR G$U.FLG.BLK THEN DO;
      354    20331                      %UNLOCK (G = G_ASFGATE);
      355    20338    3   UNBLKD_BEFORE_BLKD: ;
      356    20339    3               CALL GHR$SRV;
      357    20340                      %UNLOCK (G = KNA_LNKSSN);
      358    20347    3               CALL GHR$MON;
      359    20348    3               G$U.FLG.BLK='0'B;         /* Reset Block Before Unblock flag    */
      360    20349    3               ALTRETURN;                /* No park                            */
      361    20350    3               END;
      362    20351                   %UNLOCK (G=G_ASFGATE);
      363    20358    2            HDFLG='1'B;                  /* To head of Input State Queue       */
      364    20359    2            STATE=%GH_TI;
      365    20360    2            GOTO SET_CIO;
      366    20361
      367    20362    2          CASE (%GH_EVCIC);              /* Communications Input Complete      */
      368    20363    2            INC=3;
      369    20364    2            G$U.FLG.SCIO = '0'B;
      370    20365    2            CALL EXECUTABLE_STATE;       /* Make him executable                */
      371    20366
      372    20367    2          CASE (%GH_EVCICCU);            /* CIC on current user                */
      373    20368    2            G$U.FLG.BLK='1'B;            /* Note Unblock before Block          */
      374    20369
      375    20370    2          CASE(%GH_EVCBL);               /* Communications Output Blocked      */
      376    20371    3            IF G$U.FLG.COBLK THEN DO;
      377    20372    3               G$U.FLG.COBLK='0'B;       /* Reset Unblock Before Block flag    */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:13   
      378    20373    3               CALL GHR$SRV;
      379    20374                      %UNLOCK (G = KNA_LNKSSN);
      380    20381    3               CALL GHR$MON;
      381    20382    3               ALTRETURN;                /* No state change                    */
      382    20383    3               END;
      383    20384    2            STATE=%GH_TOB;
      384    20385    2   SET_CIO: G$U.FLG.SCIO = '1'B;         /* Set Communication I/O flag         */
      385    20386    2            G$U.MISC = ADDR(PARM3)->PARM3$; /* Save LDCT$                      */
      386    20387    2            CALL GHR$SRV;
      387    20388                   %UNLOCK (G = KNA_LNKSSN);
      388    20395    2            CALL GHR$MON;
      389    20396    2            CALL  CHANGE_STATE;
      390    20397
      391    20398    2          CASE (%GH_EVCUB);              /* Communications Output Unblock      */
      392    20399    2            INC=4;
      393    20400    2            G$U.FLG.SCIO = '0'B;
      394    20401    2            CALL  EXECUTABLE_STATE;
      395    20402
      396    20403    2          CASE (%GH_EVCUBEX);            /* CUB while not blocked              */
      397    20404    2            G$U.FLG.COBLK = '1'B;        /* Note Unblock Before Block          */
      398    20405    2          CASE (%GH_EVFC);               /* FEP CRASH                          */
      399    20406                   %LOCK (G = G_ASFGATE);
      400    20413    2            G$U.ASYNCH = G$U.ASYNCH | %U_FEPCRSH;
      401    20414                   %UNLOCK (G = G_ASFGATE);
      402    20421    2            INC = 3;
      403    20422    2            G$U.FLG.SCIO = '0'B;
      404    20423    2            CALL EXECUTABLE_STATE;
      405    20424        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:14   
      406    20425    2          CASE (%GH_EVCBK);              /* BRK received on active user        */
      407    20426    2            AFLG = %U_BRK;
      408    20427    2            GOTO YC1;
      409    20428    2          CASE(%GH_EVCBKEX);             /* BRK received on passive user       */
      410    20429    2            AFLG = %U_BRK;
      411    20430    2            GOTO YC2;
      412    20431
      413    20432    2          CASE (%GH_EVCEC);              /* YC received on active user         */
      414    20433    2            AFLG= %U_YC;
      415    20434    2   YC1:
      416    20435                   %LOCK (G=G_ASFGATE);
      417    20442    2            G$U.ASYNCH = G$U.ASYNCH | AFLG; /* No state change                 */
      418    20443                   %UNLOCK (G=G_ASFGATE);
      419    20450
      420    20451    2          CASE (%GH_EVCECEX);            /* YC received on passive user        */
      421    20452    2            AFLG = %U_YC;
      422    20453    2   YC2:
      423    20454                   %LOCK (G = G_ASFGATE);
      424    20461    2            G$U.ASYNCH = G$U.ASYNCH | AFLG;
      425    20462                   %UNLOCK (G = G_ASFGATE);
      426    20469    2            G$U.FLG.SCIO = '0'B;
      427    20470    2            INC = 3;
      428    20471    2            CALL EXECUTABLE_STATE;       /* State change required              */
      429    20472
      430    20473    2          CASE(%GH_EVDSC);               /* Disconnect on active user          */
      431    20474    2            AFLG = %U_DSC;
      432    20475    2            GOTO YC1;                    /* No state change required.          */
      433    20476
      434    20477    2          CASE (%GH_EVDSCEX);            /* Disconnect on passive user         */
      435    20478    2            AFLG = %U_DSC;
      436    20479    2            GOTO YC2;
      437    20480
      438    20481    2          CASE(%GH_EVERR);               /* Op Error on active user            */
      439    20482    2            AFLG = %U_ERR;
      440    20483    2            GOTO YC1;                    /* No state change required.          */
      441    20484
      442    20485    2          CASE (%GH_EVERREX);            /* Op Error on passive user           */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:15   
      443    20486    2            AFLG = %U_ERR;
      444    20487    2            GOTO YC2;
      445    20488
      446    20489    2          CASE(%GH_EVABRT);              /* Op Aborted active user             */
      447    20490    2            AFLG = %U_ABRT;
      448    20491    2            GOTO YC1;                    /* No state change required.          */
      449    20492
      450    20493    2          CASE (%GH_EVABRTEX);           /* Op Aborted passive user            */
      451    20494    2            AFLG = %U_ABRT;
      452    20495    2            GOTO YC2;
      453    20496
      454    20497    2          CASE (%GH_EVWU);               /* Wake Up                            */
      455    20498    2            INC=1;                       /* Priority boost index               */
      456    20499    2            IF UST = %GH_W THEN          /* Ignore non sleeping user           */
      457    20500    2               CALL EXECUTABLE_STATE;
      458    20501    2            ELSE
      459    20502    2               G$U.FLG.WBLK = '1'B;
      460    20503
      461    20504    2          CASE(%GH_EVSL);                /* Sleep                              */
      462    20505    2            STATE=%GH_W;                 /* Wait State                         */
      463    20506    2            CALL GHI$UTS (G$U.MISC);     /* Get current UTS                    */
      464    20507    2            G$U.MISC = G$U.MISC + PARM3; /* Incr by his time                   */
      465    20508    3            IF G$U.FLG.WBLK THEN DO;     /* Wake up before wait                */
      466    20509    3               G$U.FLG.WBLK = '0'B;
      467    20510    3               ALTRETURN;
      468    20511    3               END;
      469    20512    2            ELSE
      470    20513    2               CALL NON_EXECUTABLE_ORDERED; /* Sort onto sleep queue           */
      471    20514
      472    20515    2          CASE (%GH_EVQA);               /* Queue For Access                   */
      473    20516    2            STATE=%GH_QA;
      474    20517    2            IF NOT G$U.FLG.BLK THEN      /* check if unblocked                 */
      475    20518    2               CALL CHANGE_STATE;        /* Not unblock before block           */
      476    20519    2            ELSE
      477    20520    3            DO;
      478    20521    3               G$U.FLG.BLK = '0'B;       /* Reset Unblock before Block*/
      479    20522    3               ALTRETURN;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:16   
      480    20523    3               END;
      481    20524
      482    20525    2          CASE (%GH_EVUQA);              /* Unqueue For Access                 */
      483    20526    2            IF UST=%GH_QA THEN
      484    20527    3            DO;
      485    20528    3               INC=1;                    /* Priority boost index               */
      486    20529    3               CALL EXECUTABLE_STATE;
      487    20530    3               END;
      488    20531    2            ELSE
      489    20532    2               G$U.FLG.BLK = '1'B;       /* Note Unblock before block          */
      490    20533
      491    20534        /*                                                                    */
      492    20535    2          CASE(%GH_EVQFP);               /* Queue to Processor Association*/
      493    20536    2            STATE=%GH_QFP;
      494    20537    2            CALL CHANGE_STATE;
      495    20538
      496    20539    2          CASE(%GH_EVUQFP);              /* Unque users waiting for assoc*/
      497    20540    2            INC = 5;
      498    20541    2            UST = %GH_QFP;
      499    20542    3            DO WHILE (GH_HQ(%GH_QFP) ~= 0);
      500    20543    3               USER = GH_HQ(%GH_QFP);
      501    20544    3               P$ = ADDR(G$USER(USER));
      502    20545    3               CALL EXECUTABLE_STATE;    /* Make them all executable           */
      503    20546    3               END;
      504    20547    2          CASE (%GH_EVIOCU);             /* I/O Complete- Unblock              */
      505    20548        /*            If queued for MF, unblock if MF < Limit        */
      506    20549        /*            If I/O in progress, unblock if event is IOCU   */
      507    20550    2            IF UST = %GH_IOW THEN
      508    20551    3            DO;
      509    20552    3               G$U.MF = G$U.MF - 1;
      510    20553    3               INC = 2;
      511    20554    3               CALL EXECUTABLE_STATE;
      512    20555    3               END;
      513    20556    2            ELSE
      514    20557    2               GOTO CHKMF;
      515    20558    2          CASE (%GH_EVIOC);              /* I/O complete                       */
      516    20559    2   CHKMF:   G$U.MF = G$U.MF - 1;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:17   
      517    20560    2            IF UST=%GH_IOMF AND G$U.MF <= GH_MFU THEN
      518    20561    3            DO;
      519    20562    3               INC = 2;
      520    20563    3               CALL EXECUTABLE_STATE;
      521    20564    3               END;
      522    20565    2          CASE (%GH_EVMEM);              /* Need Memory                        */
      523    20566    2            STATE = %GH_MEM;
      524    20567    2            CALL CHANGE_STATE;
      525    20568
      526    20569    2          CASE (%GH_EVMA);               /* Memory Available                   */
      527    20570    2            INC = 5;
      528    20571    2            UST = %GH_MEM;
      529    20572    3            DO WHILE (GH_HQ(%GH_MEM) ~= 0);
      530    20573    3               USER = GH_HQ(%GH_MEM);
      531    20574    3               P$ = ADDR(G$USER(USER));
      532    20575    3               CALL EXECUTABLE_STATE;    /* Make them all executable           */
      533    20576    3               END;
      534    20577    2          CASE (%GH_EVALIBFD,%GH_EVALIBFDX);
      535    20578    2            AFD$=ADDR(PARM3); /* GUM$AFD (M$AFD) calls here with 4 parameters, */
      536    20579                                      /* RTNFID (GJU$EVENT) uses three parameters     */
      537    20580                                      /* Just waking up the FD (GJU$EVENT) uses 2     */
      538    20581    2            IF UST=%GH_NULL THEN
      539    20582    2               IF AFD$=ADDR(NIL) THEN
      540    20583                                           /* If not an M$AFD, we should not be null. */
      541    20584    2                  CALL SCREECH (AFDERR);
      542    20585        /*S* SCREECH_CODE: GHS-S$AFDERR
      543    20586             TYPE: SCREECH
      544    20587             MESSAGE: Incorrect parameters given on ALIBFD event.
      545    20588                                                                           */
      546    20589    3               ELSE DO;
      547    20590    3                  ADDR(PARM4)->VLP$ERRCODE=E_NOFPRG;
      548    20591        /*E* ERROR: GHS-E$NOFPRG-2
      549    20592           MESSAGE: That FPRG does not exist
      550    20593        */
      551    20594    3                  GOTO UNLKALT;
      552    20595    3                  END;
      553    20596    3            IF AFD$~=ADDR(NIL) THEN DO; /* Set up M$DEBUG for a debugging path */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:18   
      554    20597    3               G$UHJIT.ASDT_MCL.WINDOW1.BASE=G$U.UHJITPP;
      555    20598    3               G$UHJIT.ASDT_MCL.WINDOW1.SIZE=(SIZEW(G$UHJIT)-1)/256;
      556    20599    3               CALL GHH$ASD(G$WINDOW1$,G$UHJIT.ASDT_MCL.WINDOW1);
      557    20600    3               G$UHJIT.ASDT_MCL.WINDOW1.BASE=G$WINDOW1$->G$UHJIT.ASDT_USR.ROS.BASE;
      558    20601    3               G$UHJIT.ASDT_MCL.WINDOW1.SIZE=G$WINDOW1$->G$UHJIT.ASDT_USR.ROS.SIZE;
      559    20602    3               CALL GHH$ASD(G$WINDOW1$,G$UHJIT.ASDT_MCL.WINDOW1);
      560    20603        /* Now we've mapped onto the user's read-only segment; the JIT's there too.  */
      561    20604    3               JIT$=PINCRW(G$WINDOW1$,POFFW(G$JIT$,G$ROS$));
      562    20605    3               IF KL$AFD.FCN = %GJ_RTNFID#
      563    20606    4               THEN DO;
      564    20607    4                  JIT$->G$JIT.JUNK.RTNFID = '1'B;
      565    20608    4                  END;
      566    20609    4               ELSE DO;
      567    20610    4                  M$DEBUG$=PINCRW(G$WINDOW1$,POFFW(G$WINDOW1$->G$ROS.DCBTABLE(%
             20610                           G_M$DEBUG#),G$ROS$));
      568    20611    5                  IF M$DEBUG$->M$DCB.RLCID~='0'B THEN DO;
      569    20612    5                     ADDR(PARM4)->VLP$ERRCODE=E_TWODBG;
      570    20613        /*E* ERROR: GHS-E$TWODBG-2
      571    20614           MESSAGE: That FPRG is already being debugged!
      572    20615        */
      573    20616    5                     GOTO UNLKALT;
      574    20617    5                     END;
      575    20618    5                  IF JIT$->G$JIT.JUNK.EXONLY THEN DO;
      576    20619    5                     ADDR(PARM4)->VLP$ERRCODE=E_DEBUGXONLY;
      577    20620        /*E* ERROR: GHS-E$DEBUGXONLY-2
      578    20621           MESSAGE: You may not debug an execute-only run unit
      579    20622        */
      580    20623    5                     GOTO UNLKALT;
      581    20624    5                     END;
      582    20625    4                  IF KL$AFD.ACCT~=' ' AND KL$AFD.ACCT~=JIT$->G$JIT.ACCN
      583    20626    4                  THEN CALL WILDCOMPARE(KL$AFD.ACCT,JIT$->G$JIT.DB_ACCN)
      584    20627    5                     WHENALTRETURN DO;
      585    20628    5                        ADDR(PARM4)->VLP$ERRCODE=E_NODBGACC;
      586    20629        /*E* ERROR: GHS-E$NODBGACC-2
      587    20630           MESSAGE: You do not have debug access to that FPRG
      588    20631        */
      589    20632    5   UNLKALT:             ;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:19   
      590    20633                               %UNLOCK (G=G_SCHDGATE);
      591    20640    5                        ALTRETURN;
      592    20641    5                        END;
      593    20642        /* All checks out ok; stuff M$DEBUG with DELTA's DCB's dangling LDCT RLCID   */
      594    20643        /* Later, when we enter GJU$GET_DB, it will open M$DEBUG completing the      */
      595    20644        /* debugging path connection.                                                */
      596    20645    4                  M$DEBUG$->M$DCB.RLCID=KL$AFD.NETADR_FROM;
      597    20646    4                  END;
      598    20647    3               END;
      599    20648                   %LOCK (G = G_ASFGATE);
      600    20655    2            G$U.ASYNCH = G$U.ASYNCH | %U_ALIBFD;
      601    20656                   %UNLOCK (G = G_ASFGATE);
      602    20663    3            IF EVENT = %GH_EVALIBFDX THEN DO;
      603    20664    3               INC = 5;
      604    20665    3               G$U.FLG.SCIO = '0'B;
      605    20666    3               CALL EXECUTABLE_STATE;
      606    20667    3               END;
      607    20668    2          CASE (%GH_EVDU);
      608    20669    2            IF G$U.SYSID <= G_MING
      609    20670    2            THEN CALL SCREECH(MINGERR);
      610    20671        /*S* SCREECH_CODE: GHS-S$MING
      611    20672             TYPE: SCREECH
      612    20673             MESSAGE: A required system handler has aborted.
      613    20674        */
      614    20675
      615    20676    2            IF KN_DELU_CHECK ~= 0
      616    20677    2            THEN CALL KNA$CHECK;
      617    20678
      618    20679    2            STATE=%GH_NULL;              /* Return user to NULL state          */
      619    20680    2            HDFLG = '1'B;
      620    20681    2            CALL CHANGE_STATE;
      621    20682    2            G_CUR_USRS(G$U.MODE) = G_CUR_USRS(G$U.MODE) -1;
      622    20683    2            G_CUR_USRS(0) = G_CUR_USRS(0) -1; /* Count down users running      */
      623    20684                                 /* Put the true size of UHJIT segment into the ASDT  */
      624    20685    2            G$UHJIT.ASDT_USR.UHJIT.SIZE=(SIZEW(G$UHJIT)+255)/256 - 1;
      625    20686    2            G$U.FLG = '0'B;
      626    20687    2            G$LOW_MEM.NATSAP1$=ADDR(G$MHJIT.TSA_MON);
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:20   
      627    20688    2            G$MHJIT.CUN = 0;             /* Show no user on this CPU           */
      628    20689                                 /* Release any shared usage of context segments.     */
      629    20690    2            I=G$UHJIT.ASDT_USR.UHJIT.BASE;
      630    20691    2            CALL GMA$RELCVM (I);
      631    20692    2            I=G$UHJIT.ASDT_USR.ROS.BASE;
      632    20693    2            CALL GMA$RELCVM (I);
      633    20694    2            I=G$UHJIT.ASDT_USR.TSTACKU.BASE;
      634    20695    2            CALL GMA$RELCVM (I);
      635    20696                    /* Inc disable counter to avoid enable when unlocking gate
      636    20697                       and in GHR$IDL.  GHI$DELU will enable before idle. */
      637    20698
      638    20699    2            G_DIS=G_DIS+1;
      639    20700    2            CALL GHR$IDL;
      640    20701    2            G_CPUSTATE(G$MHJIT.PNO)=%G_IDLE#;
      641    20702                   %UNLOCK (G=G_SCHDGATE);
      642    20709    2            CALL GHI$DELU;               /* Get rid of him.  No return here    */
      643    20710    2          END;                           /* END OF EVENT CASES                 */
      644    20711
      645    20712
      646    20713
      647    20714
      648    20715    1         IF NOT REGGED THEN
      649    20716    2         DO;
      650    20717                   %UNLOCK (G = G_SCHDGATE);
      651    20724    2            END;
      652    20725
      653    20726
      654    20727    1         RETURN;
      655    20728        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:21   
      656    20729        /*   Check to see if a string matches a wildcard mask */
      657    20730
      658    20731    1   WILDCOMPARE: PROC(STR,MASK) ALTRET;
      659    20732    2   DCL STR CHAR(8) ALIGNED;
      660    20733    2   DCL MASK CHAR(8) ALIGNED;
      661    20734    2   DCL WILD_X UBIN;
      662    20735    2   DCL WILD_XC REDEF WILD_X CHAR(2);
      663    20736    2   DCL WILD_XP UBIN;
      664    20737    2   DCL COMPARE_X UBIN;
      665    20738    2   DCL COMPARE_XP UBIN;
      666    20739
      667    20740              %WILD_COMPARE(WILD_CHARS=MASK,
      668    20741                             WILD_XC=WILD_XC,
      669    20742                            COMPARE_CHARS=STR);
      670    20813    2         RETURN;
      671    20814    2   END WILDCOMPARE;
      672    20815        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:22   
      673    20816    1   EVREPRT: PROC;
      674    20817
      675    20818        %G_EVBUF(FPTN="G$EVBUF(0:0)", STCLASS="BASED(G$EVBUF$)");
      676    20826    2   DCL G$EVBUF$ PTR SYMREF READONLY;
      677    20827    2   DCL G_EVBUF# UBIN SYMREF;
      678    20828    2   DCL G_EVX SBIN SYMREF;
      679    20829    2   DCL G_EVFLG UBIN SYMREF;
      680    20830    2   DCL GHI$TICS ENTRY(1);
      681    20831
      682    20832    2   DCL EVB$ PTR;
      683    20833
      684    20834    2         IF G_EVFLG ~= 0
      685    20835    3         THEN DO;
      686    20836    3            EVB$ = ADDR(G$EVBUF(G_EVX));
      687    20837    3            G_EVX = G_EVX + 1;
      688    20838    3            IF G_EVX >G_EVBUF# THEN G_EVX = 0;
      689    20839
      690    20840    3            EVB$->G$EVBUF.PORT(0) = 0;
      691    20841    3            EVB$->G$EVBUF.USR(0) = USER;
      692    20842    3            EVB$->G$EVBUF.EVENT(0) = EVENT;
      693    20843    3            EVB$->G$EVBUF.STATE(0) = UST;
      694    20844    3            CALL GHI$TICS (EVB$->G$EVBUF.TIME(0));
      695    20845    3            END;
      696    20846    2   END EVREPRT;
      697    20847        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:23   
      698    20848        /*   Change State for non-executable states */
      699    20849
      700    20850    1   CHANGE_STATE: PROC;
      701    20851    2   GHNGST: CALL DELINK;
      702    20852    2         CALL RELINK;
      703    20853    2   SET_STATE:
      704    20854    2         G$U.US = STATE;
      705    20855    2         IF STATE < %GH_CU THEN
      706    20856    3         DO;
      707    20857    3            GH_EVF = GH_EVF+1;
      708    20858    4            DO I = 0 TO G_NSCPU;
      709    20859    4               IF G_CPUSTATE(I) = %G_IDLE# THEN
      710    20860    5               DO;
      711    20861    5                  CALL GHS$POKECPU(I,%G_CPU_NOP#);
      712    20862    5                  RETURN;
      713    20863    5                  END;
      714    20864    4               END;
      715    20865    3            END;
      716    20866    2         RETURN;
      717    20867
      718    20868        /*   This entry used to park a guy at his current priority  */
      719    20869    2   CHSE0: ENTRY;
      720    20870    2         PRIO = G$U.PRIO;
      721    20871    2         CALL SET_HIR_PRIO;
      722    20872    2         GOTO GHNGST;
      723    20873
      724    20874        /*   This entry used to make him executable with a prio increment */
      725    20875    2   EXECUTABLE_STATE: ENTRY;
      726    20876    2         PRIO = G$U.PRIOB + GH_PINC (INC);
      727    20877    2         G$U.PRIO = PRIO;
      728    20878    2         CALL SET_HIR_PRIO;
      729    20879    2         GOTO GHNGST;
      730    20880
      731    20881        /*   This entry used to sort into non-executable queue by G$U.MISC */
      732    20882        /*   Used by sleep event */
      733    20883    2   NON_EXECUTABLE_ORDERED: ENTRY;
      734    20884    2         CALL DELINK;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:24   
      735    20885        /*   Sort by wake up time. Start at Tail, Greater time means he
      736    20886             belongs at end. */
      737    20887    2         BLK = GH_TQ (STATE);
      738    20888    2         IF BLK = 0
      739    20889    3         THEN DO;
      740    20890    3            G$U.FL = 0;
      741    20891    3            G$U.BL = 0;
      742    20892    3            GH_TQ (STATE) = USER;
      743    20893    3            GH_HQ (STATE) = USER;
      744    20894    3            GOTO SET_STATE;
      745    20895    3            END;
      746    20896    3         DO UNTIL (BLK = 0);
      747    20897    3            PG$ = ADDR (G$USER (BLK));
      748    20898    3            IF G$U.MISC >= PG$ -> G$U.MISC
      749    20899    4            THEN DO;                     /* THIS IS WHERE WE BELONG            */
      750    20900    4               G$U.BL = BLK;
      751    20901    4               FLK = PG$ -> G$U.FL;
      752    20902    4               IF FLK = 0
      753    20903    4               THEN
      754    20904    4                  GH_TQ (STATE) = USER;
      755    20905    4               ELSE
      756    20906    4                  G$USER.BL(FLK) = USER;
      757    20907    4               G$U.FL = FLK;
      758    20908    4               PG$ -> G$U.FL = USER;
      759    20909    4               GOTO SET_STATE;
      760    20910    4               END;
      761    20911    3            ELSE
      762    20912    3               BLK = PG$ -> G$U.BL;      /* LOOK BACK FOR MORE                 */
      763    20913    3            END;
      764    20914    2         G$U.BL = 0;
      765    20915    2         FLK = GH_HQ(STATE);
      766    20916    2         G$USER.BL (FLK) = USER;
      767    20917    2         GH_HQ (STATE) = USER;
      768    20918    2         G$U.FL = FLK;
      769    20919    2         GOTO SET_STATE;
      770    20920        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:25   
      771    20921        /*   Remove a user from a state queue  */
      772    20922    2   DELINK: PROC;
      773    20923    3         FLK = G$U.FL;
      774    20924    3         BLK = G$U.BL;
      775    20925    3         IF FLK = 0
      776    20926    3         THEN
      777    20927    3            GH_TQ (UST) = BLK;
      778    20928    3         ELSE
      779    20929    3            G$USER.BL (FLK) = BLK;
      780    20930    3         IF BLK = 0
      781    20931    3         THEN
      782    20932    3            GH_HQ (UST) = FLK;
      783    20933    3         ELSE
      784    20934    3            G$USER.FL (BLK) = FLK;
      785    20935    3         RETURN;
      786    20936    3   END DELINK;
      787    20937        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:26   
      788    20938        /*   Insert a user at head or tail of state queue */
      789    20939    2   RELINK: PROC;
      790    20940    3         IF HDFLG
      791    20941    4         THEN DO;
      792    20942    4            G$U.BL = 0;
      793    20943    4            FLK = GH_HQ (STATE);
      794    20944    4            IF FLK = 0
      795    20945    5            THEN DO;
      796    20946    5               G$U.FL = 0;
      797    20947    5               G$U.BL = 0;
      798    20948    5               GH_TQ (STATE) = USER;
      799    20949    5               GH_HQ (STATE) = USER;
      800    20950    5               RETURN;
      801    20951    5               END;
      802    20952    4            GH_HQ (STATE) = USER;
      803    20953    4            G$USER.BL (FLK) = USER;
      804    20954    4            G$U.FL = FLK;
      805    20955    4            RETURN;
      806    20956    4            END;
      807    20957    4         ELSE DO;
      808    20958    4            G$U.FL = 0;
      809    20959    4            BLK = GH_TQ (STATE);
      810    20960    4            IF BLK = 0
      811    20961    5            THEN DO;
      812    20962    5               G$U.FL = 0;
      813    20963    5               G$U.BL = 0;
      814    20964    5               GH_TQ (STATE) = USER;
      815    20965    5               GH_HQ (STATE) = USER;
      816    20966    5               RETURN;
      817    20967    5               END;
      818    20968    4            GH_TQ (STATE) = USER;
      819    20969    4            G$USER.FL (BLK) = USER;
      820    20970    4            G$U.BL = BLK;
      821    20971    4            RETURN;
      822    20972    4            END;
      823    20973    3   END RELINK;
      824    20974        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:27   
      825    20975        /*   Set HIR (High priority waiting to run) and new current state. */
      826    20976    2   SET_HIR_PRIO: PROC;
      827    20977    3         IF PRIO > GH_CUP
      828    20978    3         THEN
      829    20979    3            IF GH_HIR < 0
      830    20980    3            THEN
      831    20981    3               GH_HIR = 1;
      832    20982    3            ELSE
      833    20983    3               GH_HIR = GH_HIR + 1;
      834    20984    3         IF PRIO < %GH_SC11
      835    20985    3         THEN
      836    20986    3            STATE = %GH_CU - PRIO;
      837    20987    3         ELSE
      838    20988    3            STATE = %GH_SC1;
      839    20989    3         RETURN;
      840    20990    3   END SET_HIR_PRIO;
      841    20991    2   END;                                    /* END STATE CHANGE PROC              */
      842    20992        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:28   
      843    20993        /*D* NAME: GHS$CHSE
      844    20994             CALL:  CALL GHS$CHSE (user-number);
      845    20995             Where user-number is the number of a user to be placed in one
      846    20996             of the executable states, (GH_SC1-GH_SC11).
      847    20997             DESCRIPTION:  The user is placed in the state queue corresponding
      848    20998             to his current priority as specified by G$U.PRIO.
      849    20999                                                                            */
      850    21000
      851    21001    1   GHS$CHSE: ENTRY(EVNT) ALTRET;
      852    21002
      853    21003                %LOCK (G=G_SCHDGATE);
      854    21010
      855    21011    1         HDFLG='0'B;
      856    21012    1         USER=EVNT;
      857    21013    1         P$=ADDR(G$USER(USER));
      858    21014    1         UST=G$U.US;
      859    21015    1         EVENT=%GH_EVPARK;
      860    21016    1         CALL EVREPRT;
      861    21017    1         CALL CHSE0;                     /* PARK AT CURRENT PRIORITY           */
      862    21018
      863    21019                %UNLOCK (G=G_SCHDGATE);
      864    21026
      865    21027    1         RETURN;
      866    21028
      867    21029        /*D* NAME: GHS$CHS
      868    21030             CALL:  CALL GHS$CHS (user-number);
      869    21031             Where user-number is the number of a user to be placed in
      870    21032             the Current User state, (GH_CU).
      871    21033             DESCRIPTION:  The user is placed in the Current User state.
      872    21034
      873    21035                                                                            */
      874    21036
      875    21037
      876    21038    1   GHS$CHS: ENTRY(EVNT) ALTRET;
      877    21039
      878    21040        /*   G_SCHDGATE is locked on entry     */
      879    21041    1         USER=EVNT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:29   
      880    21042    1         HDFLG='0'B;
      881    21043    1         P$=ADDR(G$USER(USER));
      882    21044    1         UST=G$U.US;
      883    21045    1         STATE=%GH_CU;
      884    21046    1         EVENT=%GH_EVNEWUSR;
      885    21047    1         CALL EVREPRT;
      886    21048    1         CALL CHANGE_STATE;
      887    21049        /*                                                                    */
      888    21050        /*                                                                    */
      889    21051    1         RETURN;
      890    21052        /*                                                                    */
      891    21053    1   END;
      892    21054        %EOD;

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:30   
--  Include file information  --

   J_SCODE_C.:E05TOU  is referenced.
   SS_SCODE_C.:E05TOU  is referenced.
   GJ_MSG_M.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$RUE.

   Procedure GHS$RUE requires 1918 words for executable code.
   Procedure GHS$RUE requires 46 words of local(AUTO) storage.

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:31   

 Object Unit name= GHS$RUE                                    File name= GHS$SCHD.:E05TOU
 UTS= JUL 29 '97 21:37:40.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS    112     70  GHS$RUE
    1   Proc  even  none  1918    77E  GHS$RUE
    2  RoData even  none    14      E  GHS$RUE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        4  GHS$RUE
     1      9          yes     yes      Std        4  GHS$REGUSR
     1    722          yes     yes      Std        1  GHS$CHSE
     1    758          yes     yes      Std        1  GHS$CHS
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:32   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$LOCK
         yes           Std       1 SCREECH
 yes     yes           Std       1 GHH$UNLOCK
         yes           Std       2 GHH$ASD
 yes     yes           Std       1 GMA$RELCVM
         yes           Std       0 GHR$SRV
         yes           Std       0 GHR$MON
 yes     yes           Std       0 KNA$CHECK
         yes           Std       1 GHI$UTS
         yes           Std       0 GHI$DELU
         yes           Std       0 GHR$IDL
         yes           Std       1 GHI$TICS
 yes     yes           Std       2 GHS$POKECPU
                       nStd      0 X6A_AUTO_N
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G_ASFGATE                             KNA_LNKSSN                            G_SCHDGATE
     GH_PINC                               G$JIT$                                G$MHJIT$
     G$ROS$                                G$UHJIT$                              G$LOW_MEM$
     G$USRT$                               G$WINDOW1$                            G_NSCPU
     G_CUR_USRS                            G_CPUSTATE                            G_DIS
     G_MING                                KN_DELU_CHECK                         GH_EVF
     GH_MFU                                GH_HQ                                 GH_TQ
     GH_CUP                                GH_HIR                           r    G$EVBUF$
     G_EVBUF#                              G_EVX                                 G_EVFLG
r    G$ROS$
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:33   


        1        1        /*M* Execution Scheduler Procedures                                 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=6,IND=3,CTI=3,DCI=3,DTI=0,MCI,MOC,DMC  */
        8        8        /*P* NAME: GHS$RUE
        9        9             PURPOSE: To maintain lists of users in various state queues
       10       10                      in response to events reported by the monitor.        */
       11       11        /*D* NAME: GHS$RUE
       12       12             CALL: CALL GHS$RUE (event-number,
       13       13                                 user-number,
       14       14                                 parameter-3,
       15       15                                 parameter-4)  ALTRET(altreturn-label);
       16       16             Where;
       17       17                event-number is one of the scheduler event numbers defined in
       18       18                the GH_SCHD_E file.
       19       19                user-number is the number of the user the event is reported
       20       20                on.
       21       21                parameter-3 and parameter-4 are dependant on the event being
       22       22                reported.
       23       23                ALTRETURN is taken if the event was a REG type event and the
       24       24                user was not suspended from execution.
       25       25
       26       26             DESCRIPTION:  The scheduler manipulates users in a prioritized
       27       27              state queue structure based on event information given to it by
       28       28              operating system procedures.  There are three types of scheduler
       29       29              states, Executable, Current User and Non-executable, and every
       30       30              LCP6 User is in one and only one state at a given time.  The
       31       31              Current User state contains the currently executing user.  The
       32       32              Executable states contain users available for execution, ordered
       33       33              by a scheduler assigned priority.  The highest priority user
       34       34              from the executable states becomes the next current user.  The
       35       35              Non-Executable states contain users waiting for the occurance of
       36       36              an event that will make them available for execution.
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:34   
       37       37
       38       38              Users change from one state to another upon the reporting of an
       39       39              event to the scheduler by a monitor procedure.  There are two
       40       40              kinds of events that may be reported.  Events known as REGs
       41       41              (Report Event and Give up control) are reported on the current
       42       42              the current user and cause the current execution quantum to be
       43       43              suspended. Events not identified as REGs (and known simply as
       44       44              events), may be reported on users in any state and may or may
       45       45              not cause a state change.  The scheduler tests event-state
       46       46              combinations when events are reported and Screeches on illegal
       47       47              combinations.
       48       48                                                                            */
       49       49        GHS$RUE: PROC(EVNT,USR,PARM3,PARM4) ALTRET;

     49   1 000000  D380 0000 0000  xent GHS$RUE         LNJ,B5   X6A_AUTO_N
          1 000003       002E 0004                       DC       46,4

       50       50
       51       51
       52       52
       53       53        %INCLUDE B_ERRORS_C;
       54     1180        %INCLUDE FM$FIT;
       55     1401        %INCLUDE GH_SCHD_E;
       56     1497        %INCLUDE GH_SCHD_M;                     /* Scheduler Macros                   */
       57     1641 S      %INCLUDE GH_LCP6_M;
       58     1642        %INCLUDE GH_GATE_M;
       59     1683 S      %INCLUDE GF_LCP6_M;
       60     1684 S      %INCLUDE GU_LCP6_M;
       61     1685        %INCLUDE G_HJIT_M;
       62     1830        %INCLUDE G_JIT_M;
       63     2095 S      %INCLUDE G_LCP6_E;
       64     2096        %INCLUDE G_ROS_M;
       65     2178        %INCLUDE KL_MACRO_C;
       66     5530        %INCLUDE GJ_MSG_M;
       67     5843        %INCLUDE SS_SCODE_C;
       68     5863        %INCLUDE J_SCODE_C;
       69     5891
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:35   
       70     5892        %G$JIT;
       71     6306        %G$ROS(FPTN=G$ROS,FULL=YES,STCLASS=BASED);
       72     7257        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
       73    10231        %G$HHJIT;
       74    12375        %G$LOW_MEM (STCLASS="BASED(G$LOW_MEM$)");
       75    12424        %G$USER (STCLASS="BASED(P$)");
       76    12435        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
       77    12446        %GATE (FPTN=G_ASFGATE,STCLASS=SYMREF);
       78    12465        %GATE (FPTN=KNA_LNKSSN,STCLASS=SYMREF);
       79    12484        %GATE (FPTN=G_SCHDGATE,STCLASS=SYMREF);
       80    12503        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
       81    19377        %KL_AFD (FPTN=KL$AFD,STCLASS="BASED(AFD$)");
       82    19417        %M$DCB (DCBN=M$DCB,STCLASS=BASED);
       83    19468        %VLP_ERRCODE (FPTN=VLP$ERRCODE,STCLASS=BASED);
       84    19514
       85    19515
       86    19516    1   DCL GHH$ASD ENTRY(2);
       87    19517    1   DCL GHI$UTS ENTRY(1);
       88    19518    1   DCL GHS$POKECPU ENTRY(2) ALTRET;
       89    19519    1   DCL GHR$MON ENTRY;
       90    19520    1   DCL GHR$SRV ENTRY;
       91    19521    1   DCL GHR$IDL ENTRY;
       92    19522    1   DCL GHI$DELU ENTRY;
       93    19523    1   DCL GMA$RELCVM ENTRY(1) ALTRET;
       94    19524    1   DCL KNA$CHECK ENTRY ALTRET;
       95    19525
       96    19526
       97    19527
       98    19528    1   DCL EVNT UBIN;                          /* Reported Event Number              */
       99    19529    1   DCL USR UBIN;                           /* Reported User Number               */
      100    19530    1   DCL PARM3 UBIN;                         /* 3rd parameter                      */
      101    19531    1   DCL PARM4 UBIN;                         /* 4th parameter                      */
      102    19532
      103    19533
      104    19534    1   DCL USER UBIN;                          /* Internal user number               */
      105    19535    1   DCL EVENT UBIN;                         /* Internal event number              */
      106    19536    1   DCL HDFLG BIT(1);                       /* True => Add to head of queue       */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:36   
      107    19537    1   DCL INC UBIN;                           /* priority increment index           */
      108    19538    1   DCL STATE UBIN;                         /* User new state number              */
      109    19539    1   DCL I1 REDEF STATE UBIN;
      110    19540    1   DCL UST UBIN;                           /* User current state number          */
      111    19541    1   DCL PRIO UBIN;                          /* Temp User priority                 */
      112    19542    1   DCL PARM3$ UBIN(32) BASED;
      113    19543    1   DCL AFD$ PTR;
      114    19544    1   DCL JIT$ PTR;
      115    19545    1   DCL M$DEBUG$ PTR;
      116    19546    1   DCL BLK UBIN;
      117    19547    1   DCL FLK UBIN;
      118    19548    1   DCL AFLG REDEF FLK BIT(16);
      119    19549    1   DCL I REDEF FLK UBIN;
      120    19550    1   DCL REGGED BIT(1);                      /* REG or RUE flag                    */
      121    19551    1   DCL P$ PTR;                             /* Scratch pointer                    */
      122    19552    1   DCL PG$ PTR;                            /*    "                               */
      123    19553    1   DCL GH_PINC(0:5) UBIN SYMREF;
      124    19554    1   DCL G$JIT$ PTR SYMREF;
      125    19555    1   DCL G$MHJIT$ PTR SYMREF;
      126    19556    1   DCL G$ROS$ PTR SYMREF;
      127    19557    1   DCL G$UHJIT$ PTR SYMREF;
      128    19558    1   DCL G$LOW_MEM$ PTR SYMREF;
      129    19559    1   DCL G$USRT$ PTR SYMREF;
      130    19560    1   DCL G$WINDOW1$ PTR SYMREF;
      131    19561    1   DCL G_NSCPU UBIN SYMREF;
      132    19562    1   DCL G_CUR_USRS(0:0) UBIN SYMREF;
      133    19563    1   DCL G_CPUSTATE(0:3) UBIN SYMREF;
      134    19564    1   DCL G_DIS SBIN SYMREF;
      135    19565    1   DCL G_MING UBIN SYMREF;
      136    19566    1   DCL KN_DELU_CHECK UBIN SYMREF;
      137    19567    1   DCL GH_EVF UBIN SYMREF;
      138    19568    1   DCL GH_MFU UBIN SYMREF;
      139    19569    1   DCL GH_HQ(0:0) UBIN SYMREF;
      140    19570    1   DCL GH_TQ(0:0) UBIN SYMREF;
      141    19571    1   DCL GH_CUP UBIN SYMREF;
      142    19572    1   DCL GH_HIR SBIN SYMREF;
      143    19573
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:37   
      144    19574        %VLP_ERRCODE (FPTN=E_NOFPRG,STCLASS=CONSTANT,FCG='GH',MID='S',MON='1'B,
      145    19575                      ERR#=%E$NOFPRG,SEV=2);
      146    19621        %VLP_ERRCODE (FPTN=E_TWODBG,STCLASS=CONSTANT,FCG='GH',MID='S',MON='1'B,
      147    19622                      ERR#=%E$TWODBG,SEV=2);
      148    19668        %VLP_ERRCODE (FPTN=E_DEBUGXONLY,STCLASS=CONSTANT,FCG='GH',MID='S',MON='1'B,
      149    19669                      ERR#=%E$DEBUGXONLY,SEV=2);
      150    19715        %VLP_ERRCODE (FPTN=E_NODBGACC,STCLASS=CONSTANT,FCG='GH',MID='S',MON='1'B,
      151    19716                      ERR#=%E$NODBGACC,SEV=2);
      152    19762        %VLP_SCODE (FPTN=EVNTERR,ERR#=%S$EVENTERR,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
      153    19763                    FCG=GH,MID=S,MON='1'B);
      154    19824        %VLP_SCODE (FPTN=AFDERR,ERR#=%S$EVENTERR,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
      155    19825                    FCG=GH,MID=S,MON='1'B);
      156    19886        %VLP_SCODE (FPTN=MINGERR,ERR#=%S$MING,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
      157    19887                    FCG=GH,MID=S,MON='1'B);
      158    19948
      159    19949    1   DCL SCREECH ENTRY(1);
      160    19950
      161    19951        %GJ_FCN#;
      162    19977
      163    19978        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:38   
      164    19979        /*  The PTBL macro generates a two word permission table entry.  Bits
      165    19980        corresponding to scheduler states are set as specified.            */
      166    19981        %MACRO PTBL (CONT=0,SEXU=0,SCU=0,SIOW=0,SW=0,SQFI=0,SMEM=0,
      167    19982             SQA=0,SNULL=0,IOMF=0,SQFP=0,STOB=0,STI=0,SCW=0);
      168    19983
      169    19984              ,2 *(0:15) UBIN(1) UNAL INIT( CONT, SEXU*11, SCU, SIOW, SW, SQFI)
      170    19985                 ,2 *(0:15) UBIN(1) UNAL INIT(CONT,SMEM,0,IOMF,SQA,SQFP,
      171    19986                 STOB,STI,SCW,0*6,SNULL)
      172    19987
      173    19988        %MEND;
      174    19989
      175    19990        /*  The PALL macro generates a two word permission table entry with
      176    19991        all bits set.                                                      */
      177    19992        %MACRO PALL;
      178    19993                 ,2 *(0:15) UBIN(1) UNAL INIT( 0, 1*0)
      179    19994                 ,2 *(0:15) UBIN(1) UNAL INIT(0,1*0)
      180    19995        %MEND;
      181    19996
      182    19997
      183    19998        /*  The PNONE macro generates a two word permission table entry with
      184    19999        no bits set.                                                       */
      185    20000        %MACRO PNONE;
      186    20001                 ,2 *(0:15) UBIN(1) UNAL INIT( 0*0)
      187    20002                 ,2 *(0:15) UBIN(1) UNAL INIT(0*0)
      188    20003        %MEND;
      189    20004
      190    20005
      191    20006        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:39   
      192    20007        /* The following permission table consists of an entry for each
      193    20008           event.  Within each entry is a bit for each state and a contin-
      194    20009           uation flag.  If the bit corresponding to the user's current
      195    20010           state is set in the entry for the reported event, then it's
      196    20011           ok to report that event on him.  If its not set, but the
      197    20012           continuation bit is, the event number is incremented by
      198    20013           one and the entry for that event is checked.  If continue is
      199    20014           not set, its  an illegal event/state combination.
      200    20015                                                                           */
      201    20016    1   DCL 1 PERM_ CONSTANT
      202    20017        /*   event 0   */
      203    20018        %PNONE;
      204    20022        /*   sleep     */
      205    20023        %PTBL (SEXU=1,SCU=1,SW=1);
      206    20028        /* wake up   */
      207    20029        %PALL;
      208    20033        /* Queue For Interrupt */
      209    20034        %PTBL (SCU=1);
      210    20039        /* Unqueue QFI User             */
      211    20040        %PTBL (SQFI=1,SW=1);
      212    20045        /* I/O In Progress              */
      213    20046        %PTBL (SCU=1);
      214    20051        /* I/O Complete                 */
      215    20052        %PTBL (SIOW=1);
      216    20057        /* Need memory                  */
      217    20058        %PTBL (SCU=1);
      218    20063        /* Memory Available             */
      219    20064        %PTBL (SCU=1);
      220    20069        /* Break Character Received     */
      221    20070        %PALL;
      222    20074        /* Control Y Received           */
      223    20075        %PALL;
      224    20079        /* Internal Scheduler Event     */
      225    20080        %PNONE;
      226    20084        /* Internal Scheduler Event     */
      227    20085        %PNONE;
      228    20089        /* Queue for Access             */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:40   
      229    20090        %PTBL (SCU=1);
      230    20095        /* Unqueue for Access           */
      231    20096        %PTBL (SQA=1,SCU=1);
      232    20101        /* I/O Complete, Unblock User   */
      233    20102        %PTBL (SIOW=1);
      234    20107        /* Queue while Processor Association in progress */
      235    20108        %PTBL (SCU=1);
      236    20113        /* Unqueue after Processor Associated */
      237    20114        %PTBL (SCU=1);
      238    20119        /* Associate Debugger,  Don't Change User State   */
      239    20120        %PTBL (CONT=1,SCU=1,SCW=1,SIOW=1,SQA=1,IOMF=1,SQFP=1,SQFI=1,SNULL=1);
      240    20125        /* Associate Debugger, Make User Executable  */
      241    20126        %PTBL (SEXU=1,SW=1,STOB=1,STI=1,SMEM=1);
      242    20131        /*  Delete Current User                                            */
      243    20132        %PTBL (SCU=1);
      244    20137        /*    Communications Wait          */
      245    20138        %PTBL (SCU=1);
      246    20143        /*    Communications  Read           */
      247    20144        %PTBL (SCU=1);
      248    20149        /*    Communications Input Complete */
      249    20150        %PTBL (CONT=1,STI=1,SCW=1);
      250    20155        /*    Communications Input Complete on Current User */
      251    20156        %PTBL (SCU=1);
      252    20161        /*    Communcations Output Blocked */
      253    20162        %PTBL (SCU=1);
      254    20167        /*    Communcations Output Unblock  */
      255    20168        %PTBL (CONT=1,STOB=1);
      256    20173        /*    Communications Output Unblock  */
      257    20174        %PTBL (SEXU=1,SCU=1,SIOW=1,SW=1,SQFI=1,SMEM=1,IOMF=1,SQA=1,
      258    20175               SQFP=1,STI=1,SCW=1,SNULL=1);
      259    20180        /*    Break Received                */
      260    20181        %PTBL (CONT=1,SCU=1,SCW=1,SIOW=1,SQA=1,IOMF=1,SQFP=1,SQFI=1);
      261    20186        /*    Break Received, State change required   */
      262    20187        %PTBL (SEXU=1,SW=1,STOB=1,STI=1,SMEM=1);
      263    20192        /*    CNTRL Y Received             */
      264    20193        %PTBL (CONT=1,SCU=1,SCW=1,SIOW=1,SQA=1,IOMF=1,SQFP=1,SQFI=1);
      265    20198        /*    CNTRL Y Received, State change required   */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:41   
      266    20199        %PTBL (SEXU=1,SW=1,STOB=1,STI=1,SMEM=1);
      267    20204        /*    Disconnect                   */
      268    20205        %PTBL (CONT=1,SCU=1,SIOW=1,SQFI=1,SQA=1,SQFP=1,IOMF=1,SCW=1);
      269    20210        /*    Disconnect, State change required */
      270    20211        %PTBL (SEXU=1,SW=1,STI=1,STOB=1,SMEM=1);
      271    20216        /*    Crash                          */
      272    20217        %PTBL (STI=1,STOB=1,SCW=1);
      273    20222        /*    Operator Errored               */
      274    20223        %PTBL (CONT=1,SCU=1,SIOW=1,SQFI=1,SQA=1,SQFP=1,IOMF=1,SCW=1,STI=1);
      275    20228        /*    Operator Errored, State change required */
      276    20229        %PTBL (SEXU=1,SW=1,STOB=1,SMEM=1);
      277    20234        /*    Operator Aborted               */
      278    20235        %PTBL (CONT=1,SCU=1,SIOW=1,SQFI=1,SQA=1,SQFP=1,IOMF=1,SCW=1,STI=1);
      279    20240        /*    Operator Aborted, State change required */
      280    20241        %PTBL (SEXU=1,SW=1,STOB=1,SMEM=1);
      281    20246    1         ;                               /* end of PERM_*/
      282    20247
      283    20248    1   DCL PERM (0:%GH_PERM#) REDEF PERM_ BIT(16);
      284    20249
      285    20250    1   DCL STBL(0:16) BIT(16) CONSTANT INIT(
      286    20251    1        '8000'X,                           /* Continuation flag                  */
      287    20252    1        '4000'X,
      288    20253    1        '2000'X,
      289    20254    1        '1000'X,
      290    20255    1        '0800'X,
      291    20256    1        '0400'X,
      292    20257    1        '0200'X,
      293    20258    1        '0100'X,
      294    20259    1        '0080'X,
      295    20260    1        '0040'X,
      296    20261    1        '0020'X,
      297    20262    1        '0010'X,
      298    20263    1        '0008'X,
      299    20264    1        '0004'X,
      300    20265    1        '0002'X,
      301    20266    1        '0001'X,
      302    20267    1        '0001'X); /* SNULL (31) is at 30 in the PERM table, so make a bit for it */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:42   
      303    20268        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:43   
      304    20269
      305    20270    1         REGGED = '0'B;                  /* Report user event entry            */

  20270   1 000005  8747 001B                            CL       REGGED,AUTO

      306    20271    1         GOTO R0;

  20271   1 000007  0F81 0009                            B        s:20274,PREL

      307    20272
      308    20273    1   GHS$REGUSR: ENTRY(EVNT,USR,PARM3,PARM4) ALTRET;

  20273   1 000009  D380 0000 0000  xent GHS$REGUSR      LNJ,B5   X6A_AUTO_N
          1 00000C       002E 0004                       DC       46,4

      309    20274    1         REGGED = '1'B;                  /* REG current user                   */

  20274   1 00000E  8947 001B                            LBT,'8000'X       REGGED,AUTO
  20274   1 000010       8000

  20274   1                              R0              null
      310    20275
      311    20276    1   R0:   ;
      312    20277                %LOCK (G = G_SCHDGATE);

  20282   1 000011  BB80 0000 0000  02   R0              LAB,B3   0
          1 000014  CBF0 0100                            LAB,B4   256,IMO
          1 000016  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 000019       0001                            DC       s:20285,PREL

      313    20284
      314    20285    1         IF ADDR(USR) = ADDR(NIL) THEN

  20285   1 00001A  ECC7 0006                            LDB,B6   @USR,AUTO
          1 00001C  8DD6                                 CMN      B6
          1 00001D  0981 000A                            BNE      s:20288,PREL

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:44   
      315    20286    1            USER = G$MHJIT.CUN;

  20286   1 00001F  DC80 0000 0000  xsym                 LDB,B5   G$MHJIT$
          1 000022  E845 0351                            LDR,R6   849,B5
          1 000024  EF47 000C                            STR,R6   USER,AUTO
          1 000026  0F81 0004                            B        s:20289,PREL

      316    20287    1         ELSE
      317    20288    1            USER = USR;

  20288   1 000028  E806                                 LDR,R6   ,B6
          1 000029  EF47 000C                            STR,R6   USER,AUTO

      318    20289    1         HDFLG = '0'B;

  20289   1 00002B  8747 000E                            CL       HDFLG,AUTO

      319    20290    1         P$ = ADDR(G$USER(USER));

  20290   1 00002D  DC80 0000 0000  xsym                 LDB,B5   G$USRT$
          1 000030  B856                                 LDR,R3   R6
          1 000031  3F18                                 MLV,R3   24
          1 000032  CBB5                                 LAB,B4   ,B5,R3
          1 000033  CFC7 001C                            STB,B4   P$,AUTO

      320    20291    1         UST=G$U.US;

  20291   1 000035  D844 0002                            LDR,R5   2,B4
          1 000037  DF47 0011                            STR,R5   UST,AUTO

      321    20292    1         EVENT = EVNT;

  20292   1 000039  BCC7 0004                            LDB,B3   @EVNT,AUTO
          1 00003B  C803                                 LDR,R4   ,B3
          1 00003C  CF47 000D                            STR,R4   EVENT,AUTO

      322    20293    1         CALL EVREPRT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:45   

  20293   1 00003E  E3C0 0512                            LNJ,B6   s:0,PREL
          1 000040       0001                            DC       s:20295,PREL

      323    20294
      324    20295    1         I1=UST;

  20295   1 000041  E847 0011                            LDR,R6   UST,AUTO
          1 000043  EF47 0010                            STR,R6   STATE,AUTO

      325    20296    1         EVENT = 2*EVNT;

  20296   1 000045  ECC7 0004                            LDB,B6   @EVNT,AUTO
          1 000047  D806                                 LDR,R5   ,B6
          1 000048  5001                                 SOL,R5   1
          1 000049  DF47 000D                            STR,R5   EVENT,AUTO

      326    20297    1         IF I1 > 15 THEN

  20297   1 00004B  6D0F                                 CMV,R6   15
          1 00004C  0381 0006                            BLE      s:20302,PREL

      327    20298    2         DO;

      328    20299    2            I1=I1-15;

  20299   1 00004E  6EF1                                 ADV,R6   -15
          1 00004F  EF47 0010                            STR,R6   STATE,AUTO

      329    20300    2            EVENT=EVENT+1;

  20300   1 000051  8AC7 000D                            INC      EVENT,AUTO

      330    20301    2            END;

      331    20302    2         DO WHILE ( NOT(PERM(EVENT) & STBL(I1)));

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:46   
  20302   1 000053  0F81 0019                            B        s:20306,PREL

      332    20303    2            IF NOT (PERM(EVENT) & STBL(0)) THEN

  20303   1 000055  B847 000D                            LDR,R3   EVENT,AUTO
          1 000057  E830 0000 0011  00                   LDR,R6   PERM_,R3
          1 00005A  E500 0000 005F  00                   AND,R6   STBL
          1 00005D  6981 000A                            BNEZ,R6  s:20305,PREL

      333    20304    2               CALL SCREECH (EVNTERR);   /* Event inconsistent with state*/

  20304   1 00005F  BB80 0000 0002  02                   LAB,B3   +2
          1 000062  CBF0 0100                            LAB,B4   256,IMO
          1 000064  E380 0000 0000  xent                 LNJ,B6   SCREECH
          1 000067       0001                            DC       s:20305,PREL

      334    20305    2            EVENT=EVENT+2;               /* continued event                    */

  20305   1 000068  E847 000D                            LDR,R6   EVENT,AUTO
          1 00006A  6E02                                 ADV,R6   2
          1 00006B  EF47 000D                            STR,R6   EVENT,AUTO

      335    20306    2            END;

  20306   1 00006D  B847 000D                            LDR,R3   EVENT,AUTO
          1 00006F  A847 0010                            LDR,R2   STATE,AUTO
          1 000071  E830 0000 0011  00                   LDR,R6   PERM_,R3
          1 000074  E520 0000 005F  00                   AND,R6   STBL,R2
          1 000077  695E                                 BEZ,R6   s:20303,SPREL

      336    20307    1         EVENT = EVENT / 2;

  20307   1 000078  3041                                 SOR,R3   1
          1 000079  BF47 000D                            STR,R3   EVENT,AUTO

      337    20308
      338    20309    2         DO CASE (EVENT);
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:47   

  20309   1 00007B  3D27                                 CMV,R3   39
          1 00007C  0281 0431                            BGE      s:20715,PREL
          1 00007E  9830 0000 0084  01                   LDR,R1   s:20309+9,R3
          1 000081  8390 0000 00AB  01                   JMP      s:20311,R1
          1 000084       0403                            DC       s:20715,PREL
          1 000085       0180                            DC       s:20505,PREL
          1 000086       016D                            DC       s:20498,PREL
          1 000087       0403                            DC       s:20715,PREL
          1 000088       0403                            DC       s:20715,PREL
          1 000089       0000                            DC       s:20311,PREL
          1 00008A       020C                            DC       s:20558,PREL
          1 00008B       0227                            DC       s:20566,PREL
          1 00008C       022F                            DC       s:20570,PREL
          1 00008D       0403                            DC       s:20715,PREL
          1 00008E       0403                            DC       s:20715,PREL
          1 00008F       0403                            DC       s:20715,PREL
          1 000090       0403                            DC       s:20715,PREL
          1 000091       01A9                            DC       s:20516,PREL
          1 000092       01BC                            DC       s:20526,PREL
          1 000093       01F8                            DC       s:20550,PREL
          1 000094       01CF                            DC       s:20536,PREL
          1 000095       01D7                            DC       s:20540,PREL
          1 000096       0250                            DC       s:20578,PREL
          1 000097       0250                            DC       s:20578,PREL
          1 000098       0360                            DC       s:20669,PREL
          1 000099       0011                            DC       s:20318,PREL
          1 00009A       001C                            DC       s:20328,PREL
          1 00009B       0065                            DC       s:20363,PREL
          1 00009C       0071                            DC       s:20368,PREL
          1 00009D       0077                            DC       s:20371,PREL
          1 00009E       00BD                            DC       s:20399,PREL
          1 00009F       00C9                            DC       s:20404,PREL
          1 0000A0       00F5                            DC       s:20426,PREL
          1 0000A1       00FB                            DC       s:20429,PREL
          1 0000A2       0101                            DC       s:20433,PREL
          1 0000A3       0121                            DC       s:20452,PREL
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:48   
          1 0000A4       014B                            DC       s:20474,PREL
          1 0000A5       0151                            DC       s:20478,PREL
          1 0000A6       00CF                            DC       s:20411,PREL
          1 0000A7       0156                            DC       s:20482,PREL
          1 0000A8       015C                            DC       s:20486,PREL
          1 0000A9       0161                            DC       s:20490,PREL
          1 0000AA       0167                            DC       s:20494,PREL

      339    20310    2          CASE(%GH_EVIIP);               /* I/O In Progress                    */

      340    20311    2            STATE=%GH_IOW;

  20311   1 0000AB  2C0D                                 LDV,R2   13
          1 0000AC  AF47 0010                            STR,R2   STATE,AUTO

      341    20312    2            IF G$U.MF = 0 THEN

  20312   1 0000AE  ECC7 001C                            LDB,B6   P$,AUTO
          1 0000B0  E2C6 000B                            LLH,R6   11,B6
          1 0000B2  6981 0004                            BNEZ,R6  s:20314,PREL

      342    20313    2               ALTRETURN;

  20313   1 0000B4  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      343    20314    2            CALL  CHANGE_STATE;

  20314   1 0000B7  E3C0 04D8                            LNJ,B6   s:0,PREL
          1 0000B9       0001                            DC       s:20314+3,PREL
          1 0000BA  0F81 03F3                            B        s:20715,PREL

      344    20315
      345    20316
      346    20317    2          CASE (%GH_EVCW);               /* Communications Wait                */

      347    20318    2            IF G$U.FLG.BLK='1'B THEN GOTO UNBLKD_BEFORE_BLKD;

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:49   
  20318   1 0000BC  ECC7 001C                            LDB,B6   P$,AUTO
          1 0000BE  8286                                 LB,'2000'X        ,B6
          1 0000BF       2000
          1 0000C0  0501 0022                            BBT      s:20336,PREL

      348    20319    2            STATE=%GH_CW;

  20319   1 0000C2  2C17                                 LDV,R2   23
          1 0000C3  AF47 0010                            STR,R2   STATE,AUTO

      349    20320    2            GOTO SET_CIO;                /* Set Comm flag                      */

  20320   1 0000C5  0F81 007F                            B        s:20385,PREL

      350    20321
      351    20322    2          CASE (%GH_EVCRD);              /* Communications Read                */

      352    20323                   %LOCK (G =G_ASFGATE);

  20328   1 0000C7  BB80 0000 0004  02                   LAB,B3   +4
          1 0000CA  CBF0 0100                            LAB,B4   256,IMO
          1 0000CC  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 0000CF       0001                            DC       s:20330,PREL

      353    20330    3            IF G$U.ASYNCH OR G$U.FLG.BLK THEN DO;

  20330   1 0000D0  ECC7 001C                            LDB,B6   P$,AUTO
          1 0000D2  E846 0001                            LDR,R6   1,B6
          1 0000D4  6981 0005                            BNEZ,R6  s:20336,PREL
          1 0000D6  8286                                 LB,'2000'X        ,B6
          1 0000D7       2000
          1 0000D8  0581 0026                            BBF      s:20356,PREL

      354    20331                      %UNLOCK (G = G_ASFGATE);

  20336   1 0000DA  BB80 0000 0004  02                   LAB,B3   +4
          1 0000DD  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:50   
          1 0000DF  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0000E2       0001                            DC       s:20336,PREL

  20336   1                              UNBLKD_BEFORE_B*null
      355    20338    3   UNBLKD_BEFORE_BLKD: ;
      356    20339    3               CALL GHR$SRV;

  20339   1 0000E3  CBF0 0000            UNBLKD_BEFORE_B*LAB,B4   0,IMO
          1 0000E5  E380 0000 0000  xent                 LNJ,B6   GHR$SRV
          1 0000E8       0001                            DC       s:20345,PREL

      357    20340                      %UNLOCK (G = KNA_LNKSSN);

  20345   1 0000E9  BB80 0000 0006  02                   LAB,B3   +6
          1 0000EC  CBF0 0100                            LAB,B4   256,IMO
          1 0000EE  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0000F1       0001                            DC       s:20347,PREL

      358    20347    3               CALL GHR$MON;

  20347   1 0000F2  CBF0 0000                            LAB,B4   0,IMO
          1 0000F4  E380 0000 0000  xent                 LNJ,B6   GHR$MON
          1 0000F7       0001                            DC       s:20348,PREL

      359    20348    3               G$U.FLG.BLK='0'B;         /* Reset Block Before Unblock flag    */

  20348   1 0000F8  ECC7 001C                            LDB,B6   P$,AUTO
          1 0000FA  8806                                 LBF,'2000'X       ,B6
          1 0000FB       2000

      360    20349    3               ALTRETURN;                /* No park                            */

  20349   1 0000FC  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      361    20350    3               END;
      362    20351                   %UNLOCK (G=G_ASFGATE);

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:51   
  20356   1 0000FF  BB80 0000 0004  02                   LAB,B3   +4
          1 000102  CBF0 0100                            LAB,B4   256,IMO
          1 000104  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000107       0001                            DC       s:20358,PREL

      363    20358    2            HDFLG='1'B;                  /* To head of Input State Queue       */

  20358   1 000108  8947 000E                            LBT,'8000'X       HDFLG,AUTO
  20358   1 00010A       8000

      364    20359    2            STATE=%GH_TI;

  20359   1 00010B  6C16                                 LDV,R6   22
          1 00010C  EF47 0010                            STR,R6   STATE,AUTO

      365    20360    2            GOTO SET_CIO;

  20360   1 00010E  0F81 0036                            B        s:20385,PREL

      366    20361
      367    20362    2          CASE (%GH_EVCIC);              /* Communications Input Complete      */

      368    20363    2            INC=3;

  20363   1 000110  6C03                                 LDV,R6   3
          1 000111  EF47 000F                            STR,R6   INC,AUTO

      369    20364    2            G$U.FLG.SCIO = '0'B;

  20364   1 000113  ECC7 001C                            LDB,B6   P$,AUTO
          1 000115  8806                                 LBF,'0800'X       ,B6
          1 000116       0800

      370    20365    2            CALL EXECUTABLE_STATE;       /* Make him executable                */

  20365   1 000117  E3C0 04C4                            LNJ,B6   s:0,PREL
          1 000119       0001                            DC       s:20365+3,PREL
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:52   
          1 00011A  0F81 0393                            B        s:20715,PREL

      371    20366
      372    20367    2          CASE (%GH_EVCICCU);            /* CIC on current user                */

      373    20368    2            G$U.FLG.BLK='1'B;            /* Note Unblock before Block          */

  20368   1 00011C  ECC7 001C                            LDB,B6   P$,AUTO
          1 00011E  8906                                 LBT,'2000'X       ,B6
          1 00011F       2000
          1 000120  0F81 038D                            B        s:20715,PREL

      374    20369
      375    20370    2          CASE(%GH_EVCBL);               /* Communications Output Blocked      */

      376    20371    3            IF G$U.FLG.COBLK THEN DO;

  20371   1 000122  ECC7 001C                            LDB,B6   P$,AUTO
          1 000124  8286                                 LB,'1000'X        ,B6
          1 000125       1000
          1 000126  0581 001B                            BBF      s:20384,PREL

      377    20372    3               G$U.FLG.COBLK='0'B;       /* Reset Unblock Before Block flag    */

  20372   1 000128  8806                                 LBF,'1000'X       ,B6
  20372   1 000129       1000

      378    20373    3               CALL GHR$SRV;

  20373   1 00012A  CBF0 0000                            LAB,B4   0,IMO
          1 00012C  E380 0000 0000  xent                 LNJ,B6   GHR$SRV
          1 00012F       0001                            DC       s:20379,PREL

      379    20374                      %UNLOCK (G = KNA_LNKSSN);

  20379   1 000130  BB80 0000 0006  02                   LAB,B3   +6
          1 000133  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:53   
          1 000135  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000138       0001                            DC       s:20381,PREL

      380    20381    3               CALL GHR$MON;

  20381   1 000139  CBF0 0000                            LAB,B4   0,IMO
          1 00013B  E380 0000 0000  xent                 LNJ,B6   GHR$MON
          1 00013E       0001                            DC       s:20382,PREL

      381    20382    3               ALTRETURN;                /* No state change                    */

  20382   1 00013F  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      382    20383    3               END;
      383    20384    2            STATE=%GH_TOB;

  20384   1 000142  2C15                                 LDV,R2   21
          1 000143  AF47 0010                            STR,R2   STATE,AUTO

      384    20385    2   SET_CIO: G$U.FLG.SCIO = '1'B;         /* Set Communication I/O flag         */

  20385   1 000145  ECC7 001C            SET_CIO         LDB,B6   P$,AUTO
          1 000147  8906                                 LBT,'0800'X       ,B6
          1 000148       0800

      385    20386    2            G$U.MISC = ADDR(PARM3)->PARM3$; /* Save LDCT$                      */

  20386   1 000149  DCC7 0008                            LDB,B5   @PARM3,AUTO
          1 00014B  8C85                                 LDI      ,B5
          1 00014C  8D46 0005                            SDI      5,B6

      386    20387    2            CALL GHR$SRV;

  20387   1 00014E  CBF0 0000                            LAB,B4   0,IMO
          1 000150  E380 0000 0000  xent                 LNJ,B6   GHR$SRV
          1 000153       0001                            DC       s:20393,PREL

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:54   
      387    20388                   %UNLOCK (G = KNA_LNKSSN);

  20393   1 000154  BB80 0000 0006  02                   LAB,B3   +6
          1 000157  CBF0 0100                            LAB,B4   256,IMO
          1 000159  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 00015C       0001                            DC       s:20395,PREL

      388    20395    2            CALL GHR$MON;

  20395   1 00015D  CBF0 0000                            LAB,B4   0,IMO
          1 00015F  E380 0000 0000  xent                 LNJ,B6   GHR$MON
          1 000162       0001                            DC       s:20396,PREL

      389    20396    2            CALL  CHANGE_STATE;

  20396   1 000163  E3C0 042C                            LNJ,B6   s:0,PREL
          1 000165       0001                            DC       s:20396+3,PREL
          1 000166  0F81 0347                            B        s:20715,PREL

      390    20397
      391    20398    2          CASE (%GH_EVCUB);              /* Communications Output Unblock      */

      392    20399    2            INC=4;

  20399   1 000168  6C04                                 LDV,R6   4
          1 000169  EF47 000F                            STR,R6   INC,AUTO

      393    20400    2            G$U.FLG.SCIO = '0'B;

  20400   1 00016B  ECC7 001C                            LDB,B6   P$,AUTO
          1 00016D  8806                                 LBF,'0800'X       ,B6
          1 00016E       0800

      394    20401    2            CALL  EXECUTABLE_STATE;

  20401   1 00016F  E3C0 046C                            LNJ,B6   s:0,PREL
          1 000171       0001                            DC       s:20401+3,PREL
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:55   
          1 000172  0F81 033B                            B        s:20715,PREL

      395    20402
      396    20403    2          CASE (%GH_EVCUBEX);            /* CUB while not blocked              */

      397    20404    2            G$U.FLG.COBLK = '1'B;        /* Note Unblock Before Block          */

  20404   1 000174  ECC7 001C                            LDB,B6   P$,AUTO
          1 000176  8906                                 LBT,'1000'X       ,B6
          1 000177       1000
          1 000178  0F81 0335                            B        s:20715,PREL

      398    20405    2          CASE (%GH_EVFC);               /* FEP CRASH                          */

      399    20406                   %LOCK (G = G_ASFGATE);

  20411   1 00017A  BB80 0000 0004  02                   LAB,B3   +4
          1 00017D  CBF0 0100                            LAB,B4   256,IMO
          1 00017F  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 000182       0001                            DC       s:20413,PREL

      400    20413    2            G$U.ASYNCH = G$U.ASYNCH | %U_FEPCRSH;

  20413   1 000183  ECC7 001C                            LDB,B6   P$,AUTO
          1 000185  E846 0001                            LDR,R6   1,B6
          1 000187  E470 0200                            OR,R6    512,IMO
          1 000189  EF46 0001                            STR,R6   1,B6

      401    20414                   %UNLOCK (G = G_ASFGATE);

  20419   1 00018B  BB80 0000 0004  02                   LAB,B3   +4
          1 00018E  CBF0 0100                            LAB,B4   256,IMO
          1 000190  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000193       0001                            DC       s:20421,PREL

      402    20421    2            INC = 3;

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:56   
  20421   1 000194  6C03                                 LDV,R6   3
          1 000195  EF47 000F                            STR,R6   INC,AUTO

      403    20422    2            G$U.FLG.SCIO = '0'B;

  20422   1 000197  ECC7 001C                            LDB,B6   P$,AUTO
          1 000199  8806                                 LBF,'0800'X       ,B6
          1 00019A       0800

      404    20423    2            CALL EXECUTABLE_STATE;

  20423   1 00019B  E3C0 0440                            LNJ,B6   s:0,PREL
          1 00019D       0001                            DC       s:20423+3,PREL
          1 00019E  0F81 030F                            B        s:20715,PREL

      405    20424        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:57   
      406    20425    2          CASE (%GH_EVCBK);              /* BRK received on active user        */

      407    20426    2            AFLG = %U_BRK;

  20426   1 0001A0  E870 2000                            LDR,R6   8192,IMO
          1 0001A2  EF47 001A                            STR,R6   FLK,AUTO

      408    20427    2            GOTO YC1;

  20427   1 0001A4  0F81 000B                            B        s:20440,PREL

      409    20428    2          CASE(%GH_EVCBKEX);             /* BRK received on passive user       */

      410    20429    2            AFLG = %U_BRK;

  20429   1 0001A6  E870 2000                            LDR,R6   8192,IMO
          1 0001A8  EF47 001A                            STR,R6   FLK,AUTO

      411    20430    2            GOTO YC2;

  20430   1 0001AA  0F81 0025                            B        s:20459,PREL

      412    20431
      413    20432    2          CASE (%GH_EVCEC);              /* YC received on active user         */

      414    20433    2            AFLG= %U_YC;

  20433   1 0001AC  E870 1000                            LDR,R6   4096,IMO
          1 0001AE  EF47 001A                            STR,R6   FLK,AUTO

      415    20434    2   YC1:
      416    20435                   %LOCK (G=G_ASFGATE);

  20440   1 0001B0  BB80 0000 0004  02   YC1             LAB,B3   +4
          1 0001B3  CBF0 0100                            LAB,B4   256,IMO
          1 0001B5  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 0001B8       0001                            DC       s:20442,PREL
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:58   

      417    20442    2            G$U.ASYNCH = G$U.ASYNCH | AFLG; /* No state change                 */

  20442   1 0001B9  ECC7 001C                            LDB,B6   P$,AUTO
          1 0001BB  E846 0001                            LDR,R6   1,B6
          1 0001BD  E447 001A                            OR,R6    FLK,AUTO
          1 0001BF  EF46 0001                            STR,R6   1,B6

      418    20443                   %UNLOCK (G=G_ASFGATE);

  20448   1 0001C1  BB80 0000 0004  02                   LAB,B3   +4
          1 0001C4  CBF0 0100                            LAB,B4   256,IMO
          1 0001C6  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0001C9       0001                            DC       s:20448+9,PREL
          1 0001CA  0F81 02E3                            B        s:20715,PREL

      419    20450
      420    20451    2          CASE (%GH_EVCECEX);            /* YC received on passive user        */

      421    20452    2            AFLG = %U_YC;

  20452   1 0001CC  E870 1000                            LDR,R6   4096,IMO
          1 0001CE  EF47 001A                            STR,R6   FLK,AUTO

      422    20453    2   YC2:
      423    20454                   %LOCK (G = G_ASFGATE);

  20459   1 0001D0  BB80 0000 0004  02   YC2             LAB,B3   +4
          1 0001D3  CBF0 0100                            LAB,B4   256,IMO
          1 0001D5  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 0001D8       0001                            DC       s:20461,PREL

      424    20461    2            G$U.ASYNCH = G$U.ASYNCH | AFLG;

  20461   1 0001D9  ECC7 001C                            LDB,B6   P$,AUTO
          1 0001DB  E846 0001                            LDR,R6   1,B6
          1 0001DD  E447 001A                            OR,R6    FLK,AUTO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:59   
          1 0001DF  EF46 0001                            STR,R6   1,B6

      425    20462                   %UNLOCK (G = G_ASFGATE);

  20467   1 0001E1  BB80 0000 0004  02                   LAB,B3   +4
          1 0001E4  CBF0 0100                            LAB,B4   256,IMO
          1 0001E6  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0001E9       0001                            DC       s:20469,PREL

      426    20469    2            G$U.FLG.SCIO = '0'B;

  20469   1 0001EA  ECC7 001C                            LDB,B6   P$,AUTO
          1 0001EC  8806                                 LBF,'0800'X       ,B6
          1 0001ED       0800

      427    20470    2            INC = 3;

  20470   1 0001EE  6C03                                 LDV,R6   3
          1 0001EF  EF47 000F                            STR,R6   INC,AUTO

      428    20471    2            CALL EXECUTABLE_STATE;       /* State change required              */

  20471   1 0001F1  E3C0 03EA                            LNJ,B6   s:0,PREL
          1 0001F3       0001                            DC       s:20471+3,PREL
          1 0001F4  0F81 02B9                            B        s:20715,PREL

      429    20472
      430    20473    2          CASE(%GH_EVDSC);               /* Disconnect on active user          */

      431    20474    2            AFLG = %U_DSC;

  20474   1 0001F6  E870 0400                            LDR,R6   1024,IMO
          1 0001F8  EF47 001A                            STR,R6   FLK,AUTO

      432    20475    2            GOTO YC1;                    /* No state change required.          */

  20475   1 0001FA  0F81 FFB5                            B        s:20440,PREL
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:60   

      433    20476
      434    20477    2          CASE (%GH_EVDSCEX);            /* Disconnect on passive user         */

      435    20478    2            AFLG = %U_DSC;

  20478   1 0001FC  E870 0400                            LDR,R6   1024,IMO
          1 0001FE  EF47 001A                            STR,R6   FLK,AUTO

      436    20479    2            GOTO YC2;

  20479   1 000200  0FD0                                 B        s:20459,SPREL

      437    20480
      438    20481    2          CASE(%GH_EVERR);               /* Op Error on active user            */

      439    20482    2            AFLG = %U_ERR;

  20482   1 000201  E870 4000                            LDR,R6   16384,IMO
          1 000203  EF47 001A                            STR,R6   FLK,AUTO

      440    20483    2            GOTO YC1;                    /* No state change required.          */

  20483   1 000205  0F81 FFAA                            B        s:20440,PREL

      441    20484
      442    20485    2          CASE (%GH_EVERREX);            /* Op Error on passive user           */

      443    20486    2            AFLG = %U_ERR;

  20486   1 000207  E870 4000                            LDR,R6   16384,IMO
          1 000209  EF47 001A                            STR,R6   FLK,AUTO

      444    20487    2            GOTO YC2;

  20487   1 00020B  0FC5                                 B        s:20459,SPREL

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:61   
      445    20488
      446    20489    2          CASE(%GH_EVABRT);              /* Op Aborted active user             */

      447    20490    2            AFLG = %U_ABRT;

  20490   1 00020C  E870 8000                            LDR,R6   -32768,IMO
          1 00020E  EF47 001A                            STR,R6   FLK,AUTO

      448    20491    2            GOTO YC1;                    /* No state change required.          */

  20491   1 000210  0F81 FF9F                            B        s:20440,PREL

      449    20492
      450    20493    2          CASE (%GH_EVABRTEX);           /* Op Aborted passive user            */

      451    20494    2            AFLG = %U_ABRT;

  20494   1 000212  E870 8000                            LDR,R6   -32768,IMO
          1 000214  EF47 001A                            STR,R6   FLK,AUTO

      452    20495    2            GOTO YC2;

  20495   1 000216  0F81 FFB9                            B        s:20459,PREL

      453    20496
      454    20497    2          CASE (%GH_EVWU);               /* Wake Up                            */

      455    20498    2            INC=1;                       /* Priority boost index               */

  20498   1 000218  6C01                                 LDV,R6   1
          1 000219  EF47 000F                            STR,R6   INC,AUTO

      456    20499    2            IF UST = %GH_W THEN          /* Ignore non sleeping user           */

  20499   1 00021B  D847 0011                            LDR,R5   UST,AUTO
          1 00021D  5D0E                                 CMV,R5   14
          1 00021E  0981 0006                            BNE      s:20502,PREL
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:62   

      457    20500    2               CALL EXECUTABLE_STATE;

  20500   1 000220  E3C0 03BB                            LNJ,B6   s:0,PREL
          1 000222       0001                            DC       s:20500+3,PREL
          1 000223  0F81 028A                            B        s:20715,PREL

      458    20501    2            ELSE
      459    20502    2               G$U.FLG.WBLK = '1'B;

  20502   1 000225  ECC7 001C                            LDB,B6   P$,AUTO
          1 000227  8906                                 LBT,'0400'X       ,B6
          1 000228       0400
          1 000229  0F81 0284                            B        s:20715,PREL

      460    20503
      461    20504    2          CASE(%GH_EVSL);                /* Sleep                              */

      462    20505    2            STATE=%GH_W;                 /* Wait State                         */

  20505   1 00022B  2C0E                                 LDV,R2   14
          1 00022C  AF47 0010                            STR,R2   STATE,AUTO

      463    20506    2            CALL GHI$UTS (G$U.MISC);     /* Get current UTS                    */

  20506   1 00022E  ECC7 001C                            LDB,B6   P$,AUTO
          1 000230  DBC6 0005                            LAB,B5   5,B6
          1 000232  DFC7 002A                            STB,B5   COMPARE_XP+1,AUTO
          1 000234  BBC7 002A                            LAB,B3   COMPARE_XP+1,AUTO
          1 000236  CBF0 0100                            LAB,B4   256,IMO
          1 000238  E380 0000 0000  xent                 LNJ,B6   GHI$UTS
          1 00023B       0001                            DC       s:20507,PREL

      464    20507    2            G$U.MISC = G$U.MISC + PARM3; /* Incr by his time                   */

  20507   1 00023C  ECC7 001C                            LDB,B6   P$,AUTO
          1 00023E  DCC7 0008                            LDB,B5   @PARM3,AUTO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:63   
          1 000240  F805                                 LDR,R7   ,B5
          1 000241  6C00                                 LDV,R6   0
          1 000242  8446 0005                            AID      5,B6
          1 000244  8D46 0005                            SDI      5,B6

      465    20508    3            IF G$U.FLG.WBLK THEN DO;     /* Wake up before wait                */

  20508   1 000246  8286                                 LB,'0400'X        ,B6
  20508   1 000247       0400
          1 000248  0581 0006                            BBF      s:20513,PREL

      466    20509    3               G$U.FLG.WBLK = '0'B;

  20509   1 00024A  8806                                 LBF,'0400'X       ,B6
  20509   1 00024B       0400

      467    20510    3               ALTRETURN;

  20510   1 00024C  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      468    20511    3               END;
      469    20512    2            ELSE
      470    20513    2               CALL NON_EXECUTABLE_ORDERED; /* Sort onto sleep queue           */

  20513   1 00024F  E3C0 03A0                            LNJ,B6   s:0,PREL
          1 000251       0001                            DC       s:20513+3,PREL
          1 000252  0F81 025B                            B        s:20715,PREL

      471    20514
      472    20515    2          CASE (%GH_EVQA);               /* Queue For Access                   */

      473    20516    2            STATE=%GH_QA;

  20516   1 000254  2C13                                 LDV,R2   19
          1 000255  AF47 0010                            STR,R2   STATE,AUTO

      474    20517    2            IF NOT G$U.FLG.BLK THEN      /* check if unblocked                 */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:64   

  20517   1 000257  ECC7 001C                            LDB,B6   P$,AUTO
          1 000259  8286                                 LB,'2000'X        ,B6
          1 00025A       2000
          1 00025B  0501 0006                            BBT      s:20521,PREL

      475    20518    2               CALL CHANGE_STATE;        /* Not unblock before block           */

  20518   1 00025D  E3C0 0332                            LNJ,B6   s:0,PREL
          1 00025F       0001                            DC       s:20518+3,PREL
          1 000260  0F81 024D                            B        s:20715,PREL

      476    20519    2            ELSE
      477    20520    3            DO;

      478    20521    3               G$U.FLG.BLK = '0'B;       /* Reset Unblock before Block*/

  20521   1 000262  8806                                 LBF,'2000'X       ,B6
  20521   1 000263       2000

      479    20522    3               ALTRETURN;

  20522   1 000264  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      480    20523    3               END;
      481    20524
      482    20525    2          CASE (%GH_EVUQA);              /* Unqueue For Access                 */

      483    20526    2            IF UST=%GH_QA THEN

  20526   1 000267  E847 0011                            LDR,R6   UST,AUTO
          1 000269  6D13                                 CMV,R6   19
          1 00026A  0981 0009                            BNE      s:20532,PREL

      484    20527    3            DO;

      485    20528    3               INC=1;                    /* Priority boost index               */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:65   

  20528   1 00026C  5C01                                 LDV,R5   1
          1 00026D  DF47 000F                            STR,R5   INC,AUTO

      486    20529    3               CALL EXECUTABLE_STATE;

  20529   1 00026F  E3C0 036C                            LNJ,B6   s:0,PREL
          1 000271       0001                            DC       s:20530,PREL

      487    20530    3               END;

  20530   1 000272  0F81 023B                            B        s:20715,PREL

      488    20531    2            ELSE
      489    20532    2               G$U.FLG.BLK = '1'B;       /* Note Unblock before block          */

  20532   1 000274  ECC7 001C                            LDB,B6   P$,AUTO
          1 000276  8906                                 LBT,'2000'X       ,B6
          1 000277       2000
          1 000278  0F81 0235                            B        s:20715,PREL

      490    20533
      491    20534        /*                                                                    */
      492    20535    2          CASE(%GH_EVQFP);               /* Queue to Processor Association*/

      493    20536    2            STATE=%GH_QFP;

  20536   1 00027A  2C14                                 LDV,R2   20
          1 00027B  AF47 0010                            STR,R2   STATE,AUTO

      494    20537    2            CALL CHANGE_STATE;

  20537   1 00027D  E3C0 0312                            LNJ,B6   s:0,PREL
          1 00027F       0001                            DC       s:20537+3,PREL
          1 000280  0F81 022D                            B        s:20715,PREL

      495    20538
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:66   
      496    20539    2          CASE(%GH_EVUQFP);              /* Unque users waiting for assoc*/

      497    20540    2            INC = 5;

  20540   1 000282  6C05                                 LDV,R6   5
          1 000283  EF47 000F                            STR,R6   INC,AUTO

      498    20541    2            UST = %GH_QFP;

  20541   1 000285  5C14                                 LDV,R5   20
          1 000286  DF47 0011                            STR,R5   UST,AUTO

      499    20542    3            DO WHILE (GH_HQ(%GH_QFP) ~= 0);

  20542   1 000288  C800 0000 0014  xsym                 LDR,R4   GH_HQ+20
          1 00028B  4901 0222                            BEZ,R4   s:20715,PREL

      500    20543    3               USER = GH_HQ(%GH_QFP);

  20543   1 00028D  E800 0000 0014  xsym                 LDR,R6   GH_HQ+20
          1 000290  EF47 000C                            STR,R6   USER,AUTO

      501    20544    3               P$ = ADDR(G$USER(USER));

  20544   1 000292  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          1 000295  B856                                 LDR,R3   R6
          1 000296  3F18                                 MLV,R3   24
          1 000297  DBB6                                 LAB,B5   ,B6,R3
          1 000298  DFC7 001C                            STB,B5   P$,AUTO

      502    20545    3               CALL EXECUTABLE_STATE;    /* Make them all executable           */

  20545   1 00029A  E3C0 0341                            LNJ,B6   s:0,PREL
          1 00029C       0001                            DC       s:20546,PREL

      503    20546    3               END;

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:67   
  20546   1 00029D  E800 0000 0014  xsym                 LDR,R6   GH_HQ+20
          1 0002A0  69ED                                 BNEZ,R6  s:20543,SPREL
          1 0002A1  0F81 020C                            B        s:20715,PREL

      504    20547    2          CASE (%GH_EVIOCU);             /* I/O Complete- Unblock              */

      505    20548        /*            If queued for MF, unblock if MF < Limit        */
      506    20549        /*            If I/O in progress, unblock if event is IOCU   */
      507    20550    2            IF UST = %GH_IOW THEN

  20550   1 0002A3  E847 0011                            LDR,R6   UST,AUTO
          1 0002A5  6D0D                                 CMV,R6   13
          1 0002A6  0981 0010                            BNE      s:20558,PREL

      508    20551    3            DO;

      509    20552    3               G$U.MF = G$U.MF - 1;

  20552   1 0002A8  ECC7 001C                            LDB,B6   P$,AUTO
          1 0002AA  D2C6 000B                            LLH,R5   11,B6
          1 0002AC  5EFF                                 ADV,R5   -1
          1 0002AD  D7C6 000B                            STH,R5   11,B6

      510    20553    3               INC = 2;

  20553   1 0002AF  5C02                                 LDV,R5   2
          1 0002B0  DF47 000F                            STR,R5   INC,AUTO

      511    20554    3               CALL EXECUTABLE_STATE;

  20554   1 0002B2  E3C0 0329                            LNJ,B6   s:0,PREL
          1 0002B4       0001                            DC       s:20555,PREL

      512    20555    3               END;

  20555   1 0002B5  0F81 01F8                            B        s:20715,PREL

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:68   
      513    20556    2            ELSE
      514    20557    2               GOTO CHKMF;
      515    20558    2          CASE (%GH_EVIOC);              /* I/O complete                       */

      516    20559    2   CHKMF:   G$U.MF = G$U.MF - 1;

  20559   1 0002B7  ECC7 001C            CHKMF           LDB,B6   P$,AUTO
          1 0002B9  E2C6 000B                            LLH,R6   11,B6
          1 0002BB  6EFF                                 ADV,R6   -1
          1 0002BC  E7C6 000B                            STH,R6   11,B6

      517    20560    2            IF UST=%GH_IOMF AND G$U.MF <= GH_MFU THEN

  20560   1 0002BE  E847 0011                            LDR,R6   UST,AUTO
          1 0002C0  6D11                                 CMV,R6   17
          1 0002C1  0981 01EC                            BNE      s:20715,PREL
          1 0002C3  D2C6 000B                            LLH,R5   11,B6
          1 0002C5  D900 0000 0000  xsym                 CMR,R5   GH_MFU
          1 0002C8  0301 01E5                            BG       s:20715,PREL

      518    20561    3            DO;

      519    20562    3               INC = 2;

  20562   1 0002CA  4C02                                 LDV,R4   2
          1 0002CB  CF47 000F                            STR,R4   INC,AUTO

      520    20563    3               CALL EXECUTABLE_STATE;

  20563   1 0002CD  E3C0 030E                            LNJ,B6   s:0,PREL
          1 0002CF       0001                            DC       s:20564,PREL

      521    20564    3               END;

  20564   1 0002D0  0F81 01DD                            B        s:20715,PREL

      522    20565    2          CASE (%GH_EVMEM);              /* Need Memory                        */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:69   

      523    20566    2            STATE = %GH_MEM;

  20566   1 0002D2  2C10                                 LDV,R2   16
          1 0002D3  AF47 0010                            STR,R2   STATE,AUTO

      524    20567    2            CALL CHANGE_STATE;

  20567   1 0002D5  E3C0 02BA                            LNJ,B6   s:0,PREL
          1 0002D7       0001                            DC       s:20567+3,PREL
          1 0002D8  0F81 01D5                            B        s:20715,PREL

      525    20568
      526    20569    2          CASE (%GH_EVMA);               /* Memory Available                   */

      527    20570    2            INC = 5;

  20570   1 0002DA  6C05                                 LDV,R6   5
          1 0002DB  EF47 000F                            STR,R6   INC,AUTO

      528    20571    2            UST = %GH_MEM;

  20571   1 0002DD  5C10                                 LDV,R5   16
          1 0002DE  DF47 0011                            STR,R5   UST,AUTO

      529    20572    3            DO WHILE (GH_HQ(%GH_MEM) ~= 0);

  20572   1 0002E0  C800 0000 0010  xsym                 LDR,R4   GH_HQ+16
          1 0002E3  4901 01CA                            BEZ,R4   s:20715,PREL

      530    20573    3               USER = GH_HQ(%GH_MEM);

  20573   1 0002E5  E800 0000 0010  xsym                 LDR,R6   GH_HQ+16
          1 0002E8  EF47 000C                            STR,R6   USER,AUTO

      531    20574    3               P$ = ADDR(G$USER(USER));

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:70   
  20574   1 0002EA  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          1 0002ED  B856                                 LDR,R3   R6
          1 0002EE  3F18                                 MLV,R3   24
          1 0002EF  DBB6                                 LAB,B5   ,B6,R3
          1 0002F0  DFC7 001C                            STB,B5   P$,AUTO

      532    20575    3               CALL EXECUTABLE_STATE;    /* Make them all executable           */

  20575   1 0002F2  E3C0 02E9                            LNJ,B6   s:0,PREL
          1 0002F4       0001                            DC       s:20576,PREL

      533    20576    3               END;

  20576   1 0002F5  E800 0000 0010  xsym                 LDR,R6   GH_HQ+16
          1 0002F8  69ED                                 BNEZ,R6  s:20573,SPREL
          1 0002F9  0F81 01B4                            B        s:20715,PREL

      534    20577    2          CASE (%GH_EVALIBFD,%GH_EVALIBFDX);

      535    20578    2            AFD$=ADDR(PARM3); /* GUM$AFD (M$AFD) calls here with 4 parameters, */

  20578   1 0002FB  ECC7 0008                            LDB,B6   @PARM3,AUTO
          1 0002FD  EFC7 0013                            STB,B6   AFD$,AUTO

      536    20579                                      /* RTNFID (GJU$EVENT) uses three parameters     */
      537    20580                                      /* Just waking up the FD (GJU$EVENT) uses 2     */
      538    20581    2            IF UST=%GH_NULL THEN

  20581   1 0002FF  E847 0011                            LDR,R6   UST,AUTO
          1 000301  6D1F                                 CMV,R6   31
          1 000302  0981 0018                            BNE      s:20596,PREL

      539    20582    2               IF AFD$=ADDR(NIL) THEN

  20582   1 000304  8DC7 0013                            CMN      AFD$,AUTO
          1 000306  0981 000C                            BNE      s:20590,PREL

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:71   
      540    20583                                           /* If not an M$AFD, we should not be null. */
      541    20584    2                  CALL SCREECH (AFDERR);

  20584   1 000308  BB80 0000 0008  02                   LAB,B3   +8
          1 00030B  CBF0 0100                            LAB,B4   256,IMO
          1 00030D  E380 0000 0000  xent                 LNJ,B6   SCREECH
          1 000310       0001                            DC       s:20584+9,PREL
          1 000311  0F81 0009                            B        s:20596,PREL

      542    20585        /*S* SCREECH_CODE: GHS-S$AFDERR
      543    20586             TYPE: SCREECH
      544    20587             MESSAGE: Incorrect parameters given on ALIBFD event.
      545    20588                                                                           */
      546    20589    3               ELSE DO;

      547    20590    3                  ADDR(PARM4)->VLP$ERRCODE=E_NOFPRG;

  20590   1 000313  8C80 0000 0000  00                   LDI      E_NOFPRG
          1 000316  DCC7 000A                            LDB,B5   @PARM4,AUTO
          1 000318  8D05                                 SDI      ,B5

      548    20591        /*E* ERROR: GHS-E$NOFPRG-2
      549    20592           MESSAGE: That FPRG does not exist
      550    20593        */
      551    20594    3                  GOTO UNLKALT;

  20594   1 000319  0F81 00B2                            B        s:20628,PREL

      552    20595    3                  END;
      553    20596    3            IF AFD$~=ADDR(NIL) THEN DO; /* Set up M$DEBUG for a debugging path */

  20596   1 00031B  8DC7 0013                            CMN      AFD$,AUTO
          1 00031D  0901 00C2                            BE       s:20653,PREL

      554    20597    3               G$UHJIT.ASDT_MCL.WINDOW1.BASE=G$U.UHJITPP;

  20597   1 00031F  ECC7 001C                            LDB,B6   P$,AUTO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:72   
          1 000321  E846 0012                            LDR,R6   18,B6
          1 000323  DC80 0000 0000  xsym                 LDB,B5   G$UHJIT$
          1 000326  EAC5 006E                            SRM,R6,'7FFF'X    110,B5
          1 000328       7FFF

      555    20598    3               G$UHJIT.ASDT_MCL.WINDOW1.SIZE=(SIZEW(G$UHJIT)-1)/256;

  20598   1 000329  6C01                                 LDV,R6   1
          1 00032A  EAC5 006F                            SRM,R6,'01FF'X    111,B5
          1 00032C       01FF

      556    20599    3               CALL GHH$ASD(G$WINDOW1$,G$UHJIT.ASDT_MCL.WINDOW1);

  20599   1 00032D  CBC5 006E                            LAB,B4   110,B5
          1 00032F  CFC7 002C                            STB,B4   COMPARE_XP+3,AUTO
          1 000331  BB80 0000 0000  xsym                 LAB,B3   G$WINDOW1$
          1 000334  BFC7 002A                            STB,B3   COMPARE_XP+1,AUTO
          1 000336  BBC7 002A                            LAB,B3   COMPARE_XP+1,AUTO
          1 000338  CBF0 0200                            LAB,B4   512,IMO
          1 00033A  E380 0000 0000  xent                 LNJ,B6   GHH$ASD
          1 00033D       0001                            DC       s:20600,PREL

      557    20600    3               G$UHJIT.ASDT_MCL.WINDOW1.BASE=G$WINDOW1$->G$UHJIT.ASDT_USR.ROS.BASE;

  20600   1 00033E  EC80 0000 0000  xsym                 LDB,B6   G$WINDOW1$
          1 000341  DC80 0000 0000  xsym                 LDB,B5   G$UHJIT$
          1 000344  E846 0002                            LDR,R6   2,B6
          1 000346  EAC5 006E                            SRM,R6,'7FFF'X    110,B5
          1 000348       7FFF

      558    20601    3               G$UHJIT.ASDT_MCL.WINDOW1.SIZE=G$WINDOW1$->G$UHJIT.ASDT_USR.ROS.SIZE;

  20601   1 000349  E846 0003                            LDR,R6   3,B6
          1 00034B  EAC5 006F                            SRM,R6,'01FF'X    111,B5
          1 00034D       01FF

      559    20602    3               CALL GHH$ASD(G$WINDOW1$,G$UHJIT.ASDT_MCL.WINDOW1);
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:73   

  20602   1 00034E  CBC5 006E                            LAB,B4   110,B5
          1 000350  CFC7 002C                            STB,B4   COMPARE_XP+3,AUTO
          1 000352  BB80 0000 0000  xsym                 LAB,B3   G$WINDOW1$
          1 000355  BFC7 002A                            STB,B3   COMPARE_XP+1,AUTO
          1 000357  BBC7 002A                            LAB,B3   COMPARE_XP+1,AUTO
          1 000359  CBF0 0200                            LAB,B4   512,IMO
          1 00035B  E380 0000 0000  xent                 LNJ,B6   GHH$ASD
          1 00035E       0001                            DC       s:20604,PREL

      560    20603        /* Now we've mapped onto the user's read-only segment; the JIT's there too.  */
      561    20604    3               JIT$=PINCRW(G$WINDOW1$,POFFW(G$JIT$,G$ROS$));

  20604   1 00035F  8C80 0000 0000  xsym                 LDI      G$JIT$
          1 000362  8480 0000 0000  xsym                 SID      G$ROS$
          1 000365  8400 0000 0000  xsym                 AID      G$WINDOW1$
          1 000368  8D47 0015                            SDI      JIT$,AUTO

      562    20605    3               IF KL$AFD.FCN = %GJ_RTNFID#

  20605   1 00036A  ECC7 0013                            LDB,B6   AFD$,AUTO
          1 00036C  D286                                 LLH,R5   ,B6
          1 00036D  5D13                                 CMV,R5   19
          1 00036E  0981 0008                            BNE      s:20610,PREL

      563    20606    4               THEN DO;

      564    20607    4                  JIT$->G$JIT.JUNK.RTNFID = '1'B;

  20607   1 000370  DCC7 0015                            LDB,B5   JIT$,AUTO
          1 000372  8945 0098                            LBT,'0040'X       152,B5
          1 000374       0040

      565    20608    4                  END;

  20608   1 000375  0F81 006A                            B        s:20653,PREL

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:74   
      566    20609    4               ELSE DO;

      567    20610    4                  M$DEBUG$=PINCRW(G$WINDOW1$,POFFW(G$WINDOW1$->G$ROS.DCBTABLE(%
             20610                           G_M$DEBUG#),G$ROS$));

  20610   1 000377  DC80 0000 0000  xsym                 LDB,B5   G$WINDOW1$
          1 00037A  8CC5 02D9                            LDI      729,B5
          1 00037C  8480 0000 0000  xsym                 SID      G$ROS$
          1 00037F  8400 0000 0000  xsym                 AID      G$WINDOW1$
          1 000382  8D47 0017                            SDI      M$DEBUG$,AUTO

      568    20611    5                  IF M$DEBUG$->M$DCB.RLCID~='0'B THEN DO;

  20611   1 000384  CCC7 0017                            LDB,B4   M$DEBUG$,AUTO
          1 000386  BB80 0000 0000  02                   LAB,B3   0
          1 000389  5C01                                 LDV,R5   1
          1 00038A  0022                                 ACM      ;
          1 00038B       4404 002D                                ALPHANUM(45,B4,,4,FILL),;
          1 00038D       4003 000A                                ALPHANUM(10,B3,,R5,FILL)
          1 00038F  5381 0009                            CBE      s:20618,PREL

      569    20612    5                     ADDR(PARM4)->VLP$ERRCODE=E_TWODBG;

  20612   1 000391  8C80 0000 0002  00                   LDI      E_TWODBG
          1 000394  BCC7 000A                            LDB,B3   @PARM4,AUTO
          1 000396  8D03                                 SDI      ,B3

      570    20613        /*E* ERROR: GHS-E$TWODBG-2
      571    20614           MESSAGE: That FPRG is already being debugged!
      572    20615        */
      573    20616    5                     GOTO UNLKALT;

  20616   1 000397  0F81 0034                            B        s:20628,PREL

      574    20617    5                     END;
      575    20618    5                  IF JIT$->G$JIT.JUNK.EXONLY THEN DO;

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:75   
  20618   1 000399  BCC7 0015                            LDB,B3   JIT$,AUTO
          1 00039B  82C3 0098                            LB,'0008'X        152,B3
          1 00039D       0008
          1 00039E  0581 0009                            BBF      s:20625,PREL

      576    20619    5                     ADDR(PARM4)->VLP$ERRCODE=E_DEBUGXONLY;

  20619   1 0003A0  8C80 0000 0004  00                   LDI      E_DEBUGXONLY
          1 0003A3  ACC7 000A                            LDB,B2   @PARM4,AUTO
          1 0003A5  8D02                                 SDI      ,B2

      577    20620        /*E* ERROR: GHS-E$DEBUGXONLY-2
      578    20621           MESSAGE: You may not debug an execute-only run unit
      579    20622        */
      580    20623    5                     GOTO UNLKALT;

  20623   1 0003A6  0F81 0025                            B        s:20628,PREL

      581    20624    5                     END;
      582    20625    4                  IF KL$AFD.ACCT~=' ' AND KL$AFD.ACCT~=JIT$->G$JIT.ACCN

  20625   1 0003A8  AB80 0000 0000  02                   LAB,B2   0
          1 0003AB  0022                                 ACM      ;
          1 0003AC       4806 0004                                ALPHANUM(4,B6,,8,FILL),;
          1 0003AE       4102 000B                                ALPHANUM(11,B2,,1,FILL)
          1 0003B0  5381 0027                            CBE      s:20645,PREL
          1 0003B2  0022                                 ACM      ;
          1 0003B3       4806 0004                                ALPHANUM(4,B6,,8,FILL),;
          1 0003B5       4803 0006                                ALPHANUM(6,B3,,8,FILL)
          1 0003B7  5381 0020                            CBE      s:20645,PREL

      583    20626    4                  THEN CALL WILDCOMPARE(KL$AFD.ACCT,JIT$->G$JIT.DB_ACCN)

  20626   1 0003B9  ABC3 009A                            LAB,B2   154,B3
          1 0003BB  AFC7 0024                            STB,B2   EVB$+2,AUTO
          1 0003BD  9BC6 0004                            LAB,B1   4,B6
          1 0003BF  9FC7 0022                            STB,B1   PG$+4,AUTO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:76   
          1 0003C1  E3C0 00FC                            LNJ,B6   s:0,PREL
          1 0003C3       0003                            DC       s:20628,PREL
          1 0003C4  0F81 0013                            B        s:20645,PREL

      584    20627    5                     WHENALTRETURN DO;

      585    20628    5                        ADDR(PARM4)->VLP$ERRCODE=E_NODBGACC;

  20628   1 0003C6  8C80 0000 0006  00                   LDI      E_NODBGACC
          1 0003C9  ECC7 000A                            LDB,B6   @PARM4,AUTO
          1 0003CB  8D06                                 SDI      ,B6

  20628   1                              UNLKALT         null
      586    20629        /*E* ERROR: GHS-E$NODBGACC-2
      587    20630           MESSAGE: You do not have debug access to that FPRG
      588    20631        */
      589    20632    5   UNLKALT:             ;
      590    20633                               %UNLOCK (G=G_SCHDGATE);

  20638   1 0003CC  BB80 0000 0000  02   UNLKALT         LAB,B3   0
          1 0003CF  CBF0 0100                            LAB,B4   256,IMO
          1 0003D1  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0003D4       0001                            DC       s:20640,PREL

      591    20640    5                        ALTRETURN;

  20640   1 0003D5  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      592    20641    5                        END;
      593    20642        /* All checks out ok; stuff M$DEBUG with DELTA's DCB's dangling LDCT RLCID   */
      594    20643        /* Later, when we enter GJU$GET_DB, it will open M$DEBUG completing the      */
      595    20644        /* debugging path connection.                                                */
      596    20645    4                  M$DEBUG$->M$DCB.RLCID=KL$AFD.NETADR_FROM;

  20645   1 0003D8  ECC7 0013                            LDB,B6   AFD$,AUTO
          1 0003DA  8CC6 0001                            LDI      1,B6
          1 0003DC  DCC7 0017                            LDB,B5   M$DEBUG$,AUTO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:77   
          1 0003DE  8D45 002D                            SDI      45,B5

      597    20646    4                  END;

      598    20647    3               END;

      599    20648                   %LOCK (G = G_ASFGATE);

  20653   1 0003E0  BB80 0000 0004  02                   LAB,B3   +4
          1 0003E3  CBF0 0100                            LAB,B4   256,IMO
          1 0003E5  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 0003E8       0001                            DC       s:20655,PREL

      600    20655    2            G$U.ASYNCH = G$U.ASYNCH | %U_ALIBFD;

  20655   1 0003E9  ECC7 001C                            LDB,B6   P$,AUTO
          1 0003EB  E846 0001                            LDR,R6   1,B6
          1 0003ED  E470 0800                            OR,R6    2048,IMO
          1 0003EF  EF46 0001                            STR,R6   1,B6

      601    20656                   %UNLOCK (G = G_ASFGATE);

  20661   1 0003F1  BB80 0000 0004  02                   LAB,B3   +4
          1 0003F4  CBF0 0100                            LAB,B4   256,IMO
          1 0003F6  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0003F9       0001                            DC       s:20663,PREL

      602    20663    3            IF EVENT = %GH_EVALIBFDX THEN DO;

  20663   1 0003FA  E847 000D                            LDR,R6   EVENT,AUTO
          1 0003FC  6D13                                 CMV,R6   19
          1 0003FD  0981 00B0                            BNE      s:20715,PREL

      603    20664    3               INC = 5;

  20664   1 0003FF  5C05                                 LDV,R5   5
          1 000400  DF47 000F                            STR,R5   INC,AUTO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:78   

      604    20665    3               G$U.FLG.SCIO = '0'B;

  20665   1 000402  ECC7 001C                            LDB,B6   P$,AUTO
          1 000404  8806                                 LBF,'0800'X       ,B6
          1 000405       0800

      605    20666    3               CALL EXECUTABLE_STATE;

  20666   1 000406  E3C0 01D5                            LNJ,B6   s:0,PREL
          1 000408       0001                            DC       s:20667,PREL

      606    20667    3               END;

  20667   1 000409  0F81 00A4                            B        s:20715,PREL

      607    20668    2          CASE (%GH_EVDU);

      608    20669    2            IF G$U.SYSID <= G_MING

  20669   1 00040B  ECC7 001C                            LDB,B6   P$,AUTO
          1 00040D  E846 0013                            LDR,R6   19,B6
          1 00040F  E900 0000 0000  xsym                 CMR,R6   G_MING
          1 000412  0301 000A                            BG       s:20676,PREL

      609    20670    2            THEN CALL SCREECH(MINGERR);

  20670   1 000414  BB80 0000 000C  02                   LAB,B3   +12
          1 000417  CBF0 0100                            LAB,B4   256,IMO
          1 000419  E380 0000 0000  xent                 LNJ,B6   SCREECH
          1 00041C       0001                            DC       s:20676,PREL

      610    20671        /*S* SCREECH_CODE: GHS-S$MING
      611    20672             TYPE: SCREECH
      612    20673             MESSAGE: A required system handler has aborted.
      613    20674        */
      614    20675
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:79   
      615    20676    2            IF KN_DELU_CHECK ~= 0

  20676   1 00041D  E800 0000 0000  xsym                 LDR,R6   KN_DELU_CHECK
          1 000420  6901 0007                            BEZ,R6   s:20679,PREL

      616    20677    2            THEN CALL KNA$CHECK;

  20677   1 000422  CBF0 0000                            LAB,B4   0,IMO
          1 000424  E380 0000 0000  xent                 LNJ,B6   KNA$CHECK
          1 000427       0001                            DC       s:20679,PREL

      617    20678
      618    20679    2            STATE=%GH_NULL;              /* Return user to NULL state          */

  20679   1 000428  6C1F                                 LDV,R6   31
          1 000429  EF47 0010                            STR,R6   STATE,AUTO

      619    20680    2            HDFLG = '1'B;

  20680   1 00042B  8947 000E                            LBT,'8000'X       HDFLG,AUTO
  20680   1 00042D       8000

      620    20681    2            CALL CHANGE_STATE;

  20681   1 00042E  E3C0 0161                            LNJ,B6   s:0,PREL
          1 000430       0001                            DC       s:20682,PREL

      621    20682    2            G_CUR_USRS(G$U.MODE) = G_CUR_USRS(G$U.MODE) -1;

  20682   1 000431  ECC7 001C                            LDB,B6   P$,AUTO
          1 000433  B2C6 000C                            LLH,R3   12,B6
          1 000435  88B0 0000 0000  xsym                 DEC      G_CUR_USRS,R3

      622    20683    2            G_CUR_USRS(0) = G_CUR_USRS(0) -1; /* Count down users running      */

  20683   1 000438  8880 0000 0000  xsym                 DEC      G_CUR_USRS

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:80   
      623    20684                                 /* Put the true size of UHJIT segment into the ASDT  */
      624    20685    2            G$UHJIT.ASDT_USR.UHJIT.SIZE=(SIZEW(G$UHJIT)+255)/256 - 1;

  20685   1 00043B  6C01                                 LDV,R6   1
          1 00043C  DC80 0000 0000  xsym                 LDB,B5   G$UHJIT$
          1 00043F  EAC5 000B                            SRM,R6,'01FF'X    11,B5
          1 000441       01FF

      625    20686    2            G$U.FLG = '0'B;

  20686   1 000442  8706                                 CL       ,B6

      626    20687    2            G$LOW_MEM.NATSAP1$=ADDR(G$MHJIT.TSA_MON);

  20687   1 000443  DC80 0000 0000  xsym                 LDB,B5   G$MHJIT$
          1 000446  CBC5 0087                            LAB,B4   135,B5
          1 000448  BC80 0000 0000  xsym                 LDB,B3   G$LOW_MEM$
          1 00044B  CFC3 000E                            STB,B4   14,B3

      627    20688    2            G$MHJIT.CUN = 0;             /* Show no user on this CPU           */

  20688   1 00044D  8745 0351                            CL       849,B5

      628    20689                                 /* Release any shared usage of context segments.     */
      629    20690    2            I=G$UHJIT.ASDT_USR.UHJIT.BASE;

  20690   1 00044F  CC80 0000 0000  xsym                 LDB,B4   G$UHJIT$
          1 000452  D844 000A                            LDR,R5   10,B4
          1 000454  D570 7FFF                            AND,R5   32767,IMO
          1 000456  DF47 001A                            STR,R5   FLK,AUTO

      630    20691    2            CALL GMA$RELCVM (I);

  20691   1 000458  ABC7 001A                            LAB,B2   FLK,AUTO
          1 00045A  AFC7 002A                            STB,B2   COMPARE_XP+1,AUTO
          1 00045C  BBC7 002A                            LAB,B3   COMPARE_XP+1,AUTO
          1 00045E  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:81   
          1 000460  E380 0000 0000  xent                 LNJ,B6   GMA$RELCVM
          1 000463       0001                            DC       s:20692,PREL

      631    20692    2            I=G$UHJIT.ASDT_USR.ROS.BASE;

  20692   1 000464  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          1 000467  E846 0002                            LDR,R6   2,B6
          1 000469  E570 7FFF                            AND,R6   32767,IMO
          1 00046B  EF47 001A                            STR,R6   FLK,AUTO

      632    20693    2            CALL GMA$RELCVM (I);

  20693   1 00046D  DBC7 001A                            LAB,B5   FLK,AUTO
          1 00046F  DFC7 002A                            STB,B5   COMPARE_XP+1,AUTO
          1 000471  BBC7 002A                            LAB,B3   COMPARE_XP+1,AUTO
          1 000473  CBF0 0100                            LAB,B4   256,IMO
          1 000475  E380 0000 0000  xent                 LNJ,B6   GMA$RELCVM
          1 000478       0001                            DC       s:20694,PREL

      633    20694    2            I=G$UHJIT.ASDT_USR.TSTACKU.BASE;

  20694   1 000479  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          1 00047C  E846 0008                            LDR,R6   8,B6
          1 00047E  E570 7FFF                            AND,R6   32767,IMO
          1 000480  EF47 001A                            STR,R6   FLK,AUTO

      634    20695    2            CALL GMA$RELCVM (I);

  20695   1 000482  DBC7 001A                            LAB,B5   FLK,AUTO
          1 000484  DFC7 002A                            STB,B5   COMPARE_XP+1,AUTO
          1 000486  BBC7 002A                            LAB,B3   COMPARE_XP+1,AUTO
          1 000488  CBF0 0100                            LAB,B4   256,IMO
          1 00048A  E380 0000 0000  xent                 LNJ,B6   GMA$RELCVM
          1 00048D       0001                            DC       s:20699,PREL

      635    20696                    /* Inc disable counter to avoid enable when unlocking gate
      636    20697                       and in GHR$IDL.  GHI$DELU will enable before idle. */
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:82   
      637    20698
      638    20699    2            G_DIS=G_DIS+1;

  20699   1 00048E  8A80 0000 0000  xsym                 INC      G_DIS

      639    20700    2            CALL GHR$IDL;

  20700   1 000491  CBF0 0000                            LAB,B4   0,IMO
          1 000493  E380 0000 0000  xent                 LNJ,B6   GHR$IDL
          1 000496       0001                            DC       s:20701,PREL

      640    20701    2            G_CPUSTATE(G$MHJIT.PNO)=%G_IDLE#;

  20701   1 000497  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          1 00049A  B846 0354                            LDR,R3   852,B6
          1 00049C  8730 0000 0000  xsym                 CL       G_CPUSTATE,R3

      641    20702                   %UNLOCK (G=G_SCHDGATE);

  20707   1 00049F  BB80 0000 0000  02                   LAB,B3   0
          1 0004A2  CBF0 0100                            LAB,B4   256,IMO
          1 0004A4  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0004A7       0001                            DC       s:20709,PREL

      642    20709    2            CALL GHI$DELU;               /* Get rid of him.  No return here    */

  20709   1 0004A8  CBF0 0000                            LAB,B4   0,IMO
          1 0004AA  E380 0000 0000  xent                 LNJ,B6   GHI$DELU
          1 0004AD       0001                            DC       s:20715,PREL

      643    20710    2          END;                           /* END OF EVENT CASES                 */

      644    20711
      645    20712
      646    20713
      647    20714
      648    20715    1         IF NOT REGGED THEN
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:83   

  20715   1 0004AE  89C7 001B                            CMZ      REGGED,AUTO
          1 0004B0  0801 000A                            BAL      s:20727,PREL

      649    20716    2         DO;

      650    20717                   %UNLOCK (G = G_SCHDGATE);

  20722   1 0004B2  BB80 0000 0000  02                   LAB,B3   0
          1 0004B5  CBF0 0100                            LAB,B4   256,IMO
          1 0004B7  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0004BA       0001                            DC       s:20727,PREL

      651    20724    2            END;

      652    20725
      653    20726
      654    20727    1         RETURN;

  20727   1 0004BB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      655    20728        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:84   
      656    20729        /*   Check to see if a string matches a wildcard mask */
      657    20730
      658    20731    1   WILDCOMPARE: PROC(STR,MASK) ALTRET;

  20731   1 0004BE  EFC7 0020            WILDCOMPARE     STB,B6   PG$+2,AUTO

      659    20732    2   DCL STR CHAR(8) ALIGNED;
      660    20733    2   DCL MASK CHAR(8) ALIGNED;
      661    20734    2   DCL WILD_X UBIN;
      662    20735    2   DCL WILD_XC REDEF WILD_X CHAR(2);
      663    20736    2   DCL WILD_XP UBIN;
      664    20737    2   DCL COMPARE_X UBIN;
      665    20738    2   DCL COMPARE_XP UBIN;
      666    20739
      667    20740              %WILD_COMPARE(WILD_CHARS=MASK,
      668    20741                             WILD_XC=WILD_XC,
      669    20742                            COMPARE_CHARS=STR);

  20766   1 0004C0  ACC7 0024                            LDB,B2   @MASK,AUTO
          1 0004C2  2C00                                 LDV,R2   0
          1 0004C3  6C02                                 LDV,R6   2
          1 0004C4  BB87                                 LAB,B3   ,AUTO
          1 0004C5  3C4C                                 LDV,R3   76
          1 0004C6  0008                                 MMM

  20767   1 0004C7  E847 0026                            LDR,R6   WILD_X,AUTO
          1 0004C9  E570 DFDF                            AND,R6   -8225,IMO
          1 0004CB  E970 414C                            CMR,R6   16716,IMO
          1 0004CD  0981 0016                            BNE      s:20775,PREL

  20768   1 0004CF  2C02                                 LDV,R2   2
          1 0004D0  6C02                                 LDV,R6   2
          1 0004D1  BB87                                 LAB,B3   ,AUTO
          1 0004D2  3C4C                                 LDV,R3   76
          1 0004D3  0008                                 MMM

  20769   1 0004D4  E847 0026                            LDR,R6   WILD_X,AUTO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:85   
          1 0004D6  E570 DFDF                            AND,R6   -8225,IMO
          1 0004D8  E970 4C20                            CMR,R6   19488,IMO
          1 0004DA  0981 0007                            BNE      s:20772,PREL

  20770   1 0004DC  6C03                                 LDV,R6   3
          1 0004DD  EF47 0026                            STR,R6   WILD_X,AUTO

  20771   1 0004DF  5C02                                 LDV,R5   2
          1 0004E0  DF47 0027                            STR,R5   WILD_XP,AUTO

  20772   1 0004E2  0F81 0006                            B        s:20778,PREL

  20775   1 0004E4  8747 0026                            CL       WILD_X,AUTO

  20776   1 0004E6  6C08                                 LDV,R6   8
          1 0004E7  EF47 0027                            STR,R6   WILD_XP,AUTO

  20778   1 0004E9  8747 0028                            CL       COMPARE_X,AUTO

  20779   1 0004EB  8747 0029                            CL       COMPARE_XP,AUTO

  20783   1 0004ED  0F81 0047                            B        s:20808,PREL

  20785   1 0004EF  E847 0026                            LDR,R6   WILD_X,AUTO
          1 0004F1  6D08                                 CMV,R6   8
          1 0004F2  0281 000C                            BGE      s:20789,PREL
          1 0004F4  ECC7 0024                            LDB,B6   @MASK,AUTO
          1 0004F6  B856                                 LDR,R3   R6
          1 0004F7  D0B6                                 LDH,R5   ,B6,R3
          1 0004F8  5D3F                                 CMV,R5   63
          1 0004F9  0981 0005                            BNE      s:20789,PREL

  20786   1 0004FB  BF47 0027                            STR,R3   WILD_XP,AUTO

  20787   1 0004FD  0F81 0032                            B        s:20807,PREL

  20789   1 0004FF  D847 0027                            LDR,R5   WILD_XP,AUTO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:86   
          1 000501  5E01                                 ADV,R5   1
          1 000502  D956                                 CMR,R5   R6
          1 000503  0981 0005                            BNE      s:20790,PREL

  20789   1 000505  C847 0028                            LDR,R4   COMPARE_X,AUTO
          1 000507  CF47 0029                            STR,R4   COMPARE_XP,AUTO

  20790   1 000509  6D08                                 CMV,R6   8
          1 00050A  0281 0010                            BGE      s:20794,PREL
          1 00050C  C847 0028                            LDR,R4   COMPARE_X,AUTO
          1 00050E  4D08                                 CMV,R4   8
          1 00050F  0281 000B                            BGE      s:20794,PREL
          1 000511  ECC7 0024                            LDB,B6   @MASK,AUTO
          1 000513  B856                                 LDR,R3   R6
          1 000514  A0B6                                 LDH,R2   ,B6,R3
          1 000515  DCC7 0022                            LDB,B5   @STR,AUTO
          1 000517  9854                                 LDR,R1   R4
          1 000518  A195                                 CMH,R2   ,B5,R1
          1 000519  0901 0014                            BE       s:20805,PREL

  20794   1 00051B  C847 0027                            LDR,R4   WILD_XP,AUTO
          1 00051D  4D08                                 CMV,R4   8
          1 00051E  0901 0006                            BE       s:20795,PREL
          1 000520  B847 0029                            LDR,R3   COMPARE_XP,AUTO
          1 000522  3D08                                 CMV,R3   8
          1 000523  0981 0005                            BNE      s:20796,PREL

  20795   1 000525  ECC7 0020                            LDB,B6   PG$+2,AUTO
          1 000527  B806                                 LDR,R3   ,B6
          1 000528  C3B6                                 LNJ,B4   ,B6,R3

  20796   1 000529  E854                                 LDR,R6   R4
          1 00052A  EF47 0026                            STR,R6   WILD_X,AUTO

  20800   1 00052C  BF47 0028                            STR,R3   COMPARE_X,AUTO

  20805   1 00052E  8AC7 0028                            INC      COMPARE_X,AUTO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:87   

  20807   1 000530  6D08                                 CMV,R6   8
          1 000531  0281 0003                            BGE      s:20808,PREL

  20807   1 000533  8AC7 0026                            INC      WILD_X,AUTO

  20808   1 000535  E847 0026                            LDR,R6   WILD_X,AUTO
          1 000537  6D08                                 CMV,R6   8
          1 000538  0281 0008                            BGE      s:20808+12,PREL
          1 00053A  ECC7 0024                            LDB,B6   @MASK,AUTO
          1 00053C  B856                                 LDR,R3   R6
          1 00053D  D0B6                                 LDH,R5   ,B6,R3
          1 00053E  5D20                                 CMV,R5   32
          1 00053F  0981 FFAF                            BNE      s:20785,PREL
          1 000541  D847 0028                            LDR,R5   COMPARE_X,AUTO
          1 000543  5D08                                 CMV,R5   8
          1 000544  0281 0008                            BGE      s:20813,PREL
          1 000546  ECC7 0022                            LDB,B6   @STR,AUTO
          1 000548  B855                                 LDR,R3   R5
          1 000549  C0B6                                 LDH,R4   ,B6,R3
          1 00054A  4D20                                 CMV,R4   32
          1 00054B  0981 FFA3                            BNE      s:20785,PREL

      670    20813    2         RETURN;

  20813   1 00054D  ECC7 0020                            LDB,B6   PG$+2,AUTO
          1 00054F  C3C6 0001                            LNJ,B4   1,B6

      671    20814    2   END WILDCOMPARE;
      672    20815        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:88   
      673    20816    1   EVREPRT: PROC;

  20816   1 000551  EFC7 0020            EVREPRT         STB,B6   PG$+2,AUTO

      674    20817
      675    20818        %G_EVBUF(FPTN="G$EVBUF(0:0)", STCLASS="BASED(G$EVBUF$)");
      676    20826    2   DCL G$EVBUF$ PTR SYMREF READONLY;
      677    20827    2   DCL G_EVBUF# UBIN SYMREF;
      678    20828    2   DCL G_EVX SBIN SYMREF;
      679    20829    2   DCL G_EVFLG UBIN SYMREF;
      680    20830    2   DCL GHI$TICS ENTRY(1);
      681    20831
      682    20832    2   DCL EVB$ PTR;
      683    20833
      684    20834    2         IF G_EVFLG ~= 0

  20834   1 000553  E800 0000 0000  xsym                 LDR,R6   G_EVFLG
          1 000556  6901 0035                            BEZ,R6   s:20846,PREL

      685    20835    3         THEN DO;

      686    20836    3            EVB$ = ADDR(G$EVBUF(G_EVX));

  20836   1 000558  DC80 0000 0000  xsym                 LDB,B5   G$EVBUF$
          1 00055B  B800 0000 0000  xsym                 LDR,R3   G_EVX
          1 00055E  3002                                 SOL,R3   2
          1 00055F  CBB5                                 LAB,B4   ,B5,R3
          1 000560  CFC7 0022                            STB,B4   EVB$,AUTO

      687    20837    3            G_EVX = G_EVX + 1;

  20837   1 000562  8A80 0000 0000  xsym                 INC      G_EVX

      688    20838    3            IF G_EVX >G_EVBUF# THEN G_EVX = 0;

  20838   1 000565  D800 0000 0000  xsym                 LDR,R5   G_EVX
          1 000568  5801 0009                            BLZ,R5   s:20840,PREL
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:89   
          1 00056A  D900 0000 0000  xsym                 CMR,R5   G_EVBUF#
          1 00056D  0381 0004                            BLE      s:20840,PREL

  20838   1 00056F  8700 0000 0000  xsym                 CL       G_EVX

      689    20839
      690    20840    3            EVB$->G$EVBUF.PORT(0) = 0;

  20840   1 000572  8844 0001                            LBF,'00FF'X       1,B4
  20840   1 000574       00FF

      691    20841    3            EVB$->G$EVBUF.USR(0) = USER;

  20841   1 000575  D847 000C                            LDR,R5   USER,AUTO
          1 000577  D784                                 STH,R5   ,B4

      692    20842    3            EVB$->G$EVBUF.EVENT(0) = EVENT;

  20842   1 000578  E847 000D                            LDR,R6   EVENT,AUTO
          1 00057A  EA84                                 SRM,R6,'00FF'X    ,B4
          1 00057B       00FF

      693    20843    3            EVB$->G$EVBUF.STATE(0) = UST;

  20843   1 00057C  C847 0011                            LDR,R4   UST,AUTO
          1 00057E  C7C4 0001                            STH,R4   1,B4

      694    20844    3            CALL GHI$TICS (EVB$->G$EVBUF.TIME(0));

  20844   1 000580  EBC4 0002                            LAB,B6   2,B4
          1 000582  EFC7 002A                            STB,B6   COMPARE_XP+1,AUTO
          1 000584  BBC7 002A                            LAB,B3   COMPARE_XP+1,AUTO
          1 000586  CBF0 0100                            LAB,B4   256,IMO
          1 000588  E380 0000 0000  xent                 LNJ,B6   GHI$TICS
          1 00058B       0001                            DC       s:20846,PREL

      695    20845    3            END;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:90   

      696    20846    2   END EVREPRT;

  20846   1 00058C  ECC7 0020                            LDB,B6   PG$+2,AUTO
          1 00058E  C3C6 0001                            LNJ,B4   1,B6

      697    20847        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:91   
      698    20848        /*   Change State for non-executable states */
      699    20849
      700    20850    1   CHANGE_STATE: PROC;

  20850   1 000590  EFC7 0020            CHANGE_STATE    STB,B6   PG$+2,AUTO

      701    20851    2   GHNGST: CALL DELINK;

  20851   1 000592  E3C0 00CA            GHNGST          LNJ,B6   s:0,PREL
          1 000594       0001                            DC       s:20852,PREL

      702    20852    2         CALL RELINK;

  20852   1 000595  E3C0 00FB                            LNJ,B6   s:0,PREL
          1 000597       0001                            DC       s:20854,PREL

      703    20853    2   SET_STATE:
      704    20854    2         G$U.US = STATE;

  20854   1 000598  ECC7 001C            SET_STATE       LDB,B6   P$,AUTO
          1 00059A  E847 0010                            LDR,R6   STATE,AUTO
          1 00059C  EF46 0002                            STR,R6   2,B6

      705    20855    2         IF STATE < %GH_CU THEN

  20855   1 00059E  6D0C                                 CMV,R6   12
          1 00059F  0281 002B                            BGE      s:20866,PREL

      706    20856    3         DO;

      707    20857    3            GH_EVF = GH_EVF+1;

  20857   1 0005A1  8A80 0000 0000  xsym                 INC      GH_EVF

      708    20858    4            DO I = 0 TO G_NSCPU;

  20858   1 0005A4  8747 001A                            CL       FLK,AUTO
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:92   
          1 0005A6  0F81 001E                            B        s:20864+2,PREL

      709    20859    4               IF G_CPUSTATE(I) = %G_IDLE# THEN

  20859   1 0005A8  B847 001A                            LDR,R3   FLK,AUTO
          1 0005AA  E830 0000 0000  xsym                 LDR,R6   G_CPUSTATE,R3
          1 0005AD  6981 0015                            BNEZ,R6  s:20864,PREL

      710    20860    5               DO;

      711    20861    5                  CALL GHS$POKECPU(I,%G_CPU_NOP#);

  20861   1 0005AF  EBF0 0000                            LAB,B6   0,IMO
          1 0005B1  EFC7 002C                            STB,B6   COMPARE_XP+3,AUTO
          1 0005B3  DBC7 001A                            LAB,B5   FLK,AUTO
          1 0005B5  DFC7 002A                            STB,B5   COMPARE_XP+1,AUTO
          1 0005B7  BBC7 002A                            LAB,B3   COMPARE_XP+1,AUTO
          1 0005B9  CBF0 0200                            LAB,B4   512,IMO
          1 0005BB  E380 0000 0000  xent                 LNJ,B6   GHS$POKECPU
          1 0005BE       0001                            DC       s:20862,PREL

      712    20862    5                  RETURN;

  20862   1 0005BF  ECC7 0020                            LDB,B6   PG$+2,AUTO
          1 0005C1  C3C6 0001                            LNJ,B4   1,B6

      713    20863    5                  END;
      714    20864    4               END;

  20864   1 0005C3  8AC7 001A                            INC      FLK,AUTO
          1 0005C5  E847 001A                            LDR,R6   FLK,AUTO
          1 0005C7  E900 0000 0000  xsym                 CMR,R6   G_NSCPU
          1 0005CA  03DE                                 BLE      s:20859,SPREL

      715    20865    3            END;

      716    20866    2         RETURN;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:93   

  20866   1 0005CB  ECC7 0020                            LDB,B6   PG$+2,AUTO
          1 0005CD  C3C6 0001                            LNJ,B4   1,B6

      717    20867
      718    20868        /*   This entry used to park a guy at his current priority  */
      719    20869    2   CHSE0: ENTRY;

  20869   1 0005CF  EFC7 0020            CHSE0           STB,B6   PG$+2,AUTO

      720    20870    2         PRIO = G$U.PRIO;

  20870   1 0005D1  DCC7 001C                            LDB,B5   P$,AUTO
          1 0005D3  E845 000F                            LDR,R6   15,B5
          1 0005D5  EF47 0012                            STR,R6   PRIO,AUTO

      721    20871    2         CALL SET_HIR_PRIO;

  20871   1 0005D7  E3C0 0123                            LNJ,B6   s:0,PREL
          1 0005D9       0001                            DC       s:20872,PREL

      722    20872    2         GOTO GHNGST;

  20872   1 0005DA  0F81 FFB7                            B        s:20851,PREL

      723    20873
      724    20874        /*   This entry used to make him executable with a prio increment */
      725    20875    2   EXECUTABLE_STATE: ENTRY;

  20875   1 0005DC  EFC7 0020            EXECUTABLE_STATESTB,B6   PG$+2,AUTO

      726    20876    2         PRIO = G$U.PRIOB + GH_PINC (INC);

  20876   1 0005DE  DCC7 001C                            LDB,B5   P$,AUTO
          1 0005E0  B847 000F                            LDR,R3   INC,AUTO
          1 0005E2  E845 0010                            LDR,R6   16,B5
          1 0005E4  EA30 0000 0000  xsym                 ADD,R6   GH_PINC,R3
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:94   
          1 0005E7  EF47 0012                            STR,R6   PRIO,AUTO

      727    20877    2         G$U.PRIO = PRIO;

  20877   1 0005E9  EF45 000F                            STR,R6   15,B5

      728    20878    2         CALL SET_HIR_PRIO;

  20878   1 0005EB  E3C0 010F                            LNJ,B6   s:0,PREL
          1 0005ED       0001                            DC       s:20879,PREL

      729    20879    2         GOTO GHNGST;

  20879   1 0005EE  0F81 FFA3                            B        s:20851,PREL

      730    20880
      731    20881        /*   This entry used to sort into non-executable queue by G$U.MISC */
      732    20882        /*   Used by sleep event */
      733    20883    2   NON_EXECUTABLE_ORDERED: ENTRY;

  20883   1 0005F0  EFC7 0020            NON_EXECUTABLE_*STB,B6   PG$+2,AUTO

      734    20884    2         CALL DELINK;

  20884   1 0005F2  E3C0 006A                            LNJ,B6   s:0,PREL
          1 0005F4       0001                            DC       s:20887,PREL

      735    20885        /*   Sort by wake up time. Start at Tail, Greater time means he
      736    20886             belongs at end. */
      737    20887    2         BLK = GH_TQ (STATE);

  20887   1 0005F5  B847 0010                            LDR,R3   STATE,AUTO
          1 0005F7  E830 0000 0000  xsym                 LDR,R6   GH_TQ,R3
          1 0005FA  EF47 0019                            STR,R6   BLK,AUTO

      738    20888    2         IF BLK = 0

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:95   
  20888   1 0005FC  6981 0011                            BNEZ,R6  s:20897,PREL

      739    20889    3         THEN DO;

      740    20890    3            G$U.FL = 0;

  20890   1 0005FE  ECC7 001C                            LDB,B6   P$,AUTO
          1 000600  8746 0003                            CL       3,B6

      741    20891    3            G$U.BL = 0;

  20891   1 000602  8746 0004                            CL       4,B6

      742    20892    3            GH_TQ (STATE) = USER;

  20892   1 000604  D847 000C                            LDR,R5   USER,AUTO
          1 000606  DF30 0000 0000  xsym                 STR,R5   GH_TQ,R3

      743    20893    3            GH_HQ (STATE) = USER;

  20893   1 000609  DF30 0000 0000  xsym                 STR,R5   GH_HQ,R3

      744    20894    3            GOTO SET_STATE;

  20894   1 00060C  0F81 FF8B                            B        s:20854,PREL

      745    20895    3            END;
      746    20896    3         DO UNTIL (BLK = 0);

      747    20897    3            PG$ = ADDR (G$USER (BLK));

  20897   1 00060E  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          1 000611  B847 0019                            LDR,R3   BLK,AUTO
          1 000613  3F18                                 MLV,R3   24
          1 000614  DBB6                                 LAB,B5   ,B6,R3
          1 000615  DFC7 001E                            STB,B5   PG$,AUTO

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:96   
      748    20898    3            IF G$U.MISC >= PG$ -> G$U.MISC

  20898   1 000617  CCC7 001C                            LDB,B4   P$,AUTO
          1 000619  8CC4 0005                            LDI      5,B4
          1 00061B  84C5 0005                            SID      5,B5
          1 00061D  0681 0022                            BCF      s:20912,PREL

      749    20899    4            THEN DO;                     /* THIS IS WHERE WE BELONG            */

      750    20900    4               G$U.BL = BLK;

  20900   1 00061F  E847 0019                            LDR,R6   BLK,AUTO
          1 000621  EF44 0004                            STR,R6   4,B4

      751    20901    4               FLK = PG$ -> G$U.FL;

  20901   1 000623  D845 0003                            LDR,R5   3,B5
          1 000625  DF47 001A                            STR,R5   FLK,AUTO

      752    20902    4               IF FLK = 0

  20902   1 000627  5981 000A                            BNEZ,R5  s:20906,PREL

      753    20903    4               THEN
      754    20904    4                  GH_TQ (STATE) = USER;

  20904   1 000629  A847 0010                            LDR,R2   STATE,AUTO
          1 00062B  C847 000C                            LDR,R4   USER,AUTO
          1 00062D  CF20 0000 0000  xsym                 STR,R4   GH_TQ,R2
          1 000630  0F81 0007                            B        s:20907,PREL

      755    20905    4               ELSE
      756    20906    4                  G$USER.BL(FLK) = USER;

  20906   1 000632  A855                                 LDR,R2   R5
          1 000633  2F18                                 MLV,R2   24
          1 000634  2E04                                 ADV,R2   4
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:97   
          1 000635  C847 000C                            LDR,R4   USER,AUTO
          1 000637  CF26                                 STR,R4   ,B6,R2

      757    20907    4               G$U.FL = FLK;

  20907   1 000638  D847 001A                            LDR,R5   FLK,AUTO
          1 00063A  DF44 0003                            STR,R5   3,B4

      758    20908    4               PG$ -> G$U.FL = USER;

  20908   1 00063C  CF45 0003                            STR,R4   3,B5

      759    20909    4               GOTO SET_STATE;

  20909   1 00063E  0F81 FF59                            B        s:20854,PREL

      760    20910    4               END;
      761    20911    3            ELSE
      762    20912    3               BLK = PG$ -> G$U.BL;      /* LOOK BACK FOR MORE                 */

  20912   1 000640  E845 0004                            LDR,R6   4,B5
          1 000642  EF47 0019                            STR,R6   BLK,AUTO

      763    20913    3            END;

  20913   1 000644  69CA                                 BNEZ,R6  s:20897,SPREL

      764    20914    2         G$U.BL = 0;

  20914   1 000645  8744 0004                            CL       4,B4

      765    20915    2         FLK = GH_HQ(STATE);

  20915   1 000647  B847 0010                            LDR,R3   STATE,AUTO
          1 000649  D830 0000 0000  xsym                 LDR,R5   GH_HQ,R3
          1 00064C  DF47 001A                            STR,R5   FLK,AUTO

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:98   
      766    20916    2         G$USER.BL (FLK) = USER;

  20916   1 00064E  A855                                 LDR,R2   R5
          1 00064F  2F18                                 MLV,R2   24
          1 000650  2E04                                 ADV,R2   4
          1 000651  C847 000C                            LDR,R4   USER,AUTO
          1 000653  CF26                                 STR,R4   ,B6,R2

      767    20917    2         GH_HQ (STATE) = USER;

  20917   1 000654  CF30 0000 0000  xsym                 STR,R4   GH_HQ,R3

      768    20918    2         G$U.FL = FLK;

  20918   1 000657  9847 001A                            LDR,R1   FLK,AUTO
          1 000659  9F44 0003                            STR,R1   3,B4

      769    20919    2         GOTO SET_STATE;

  20919   1 00065B  0F81 FF3C                            B        s:20854,PREL

      770    20920        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:99   
      771    20921        /*   Remove a user from a state queue  */
      772    20922    2   DELINK: PROC;

  20922   1 00065D  EFC7 0022            DELINK          STB,B6   EVB$,AUTO

      773    20923    3         FLK = G$U.FL;

  20923   1 00065F  DCC7 001C                            LDB,B5   P$,AUTO
          1 000661  E845 0003                            LDR,R6   3,B5
          1 000663  EF47 001A                            STR,R6   FLK,AUTO

      774    20924    3         BLK = G$U.BL;

  20924   1 000665  D845 0004                            LDR,R5   4,B5
          1 000667  DF47 0019                            STR,R5   BLK,AUTO

      775    20925    3         IF FLK = 0

  20925   1 000669  6981 0008                            BNEZ,R6  s:20929,PREL

      776    20926    3         THEN
      777    20927    3            GH_TQ (UST) = BLK;

  20927   1 00066B  B847 0011                            LDR,R3   UST,AUTO
          1 00066D  DF30 0000 0000  xsym                 STR,R5   GH_TQ,R3
          1 000670  0F81 0008                            B        s:20930,PREL

      778    20928    3         ELSE
      779    20929    3            G$USER.BL (FLK) = BLK;

  20929   1 000672  CC80 0000 0000  xsym                 LDB,B4   G$USRT$
          1 000675  B856                                 LDR,R3   R6
          1 000676  3F18                                 MLV,R3   24
          1 000677  3E04                                 ADV,R3   4
          1 000678  DF34                                 STR,R5   ,B4,R3

      780    20930    3         IF BLK = 0
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:100  

  20930   1 000679  5981 000A                            BNEZ,R5  s:20934,PREL

      781    20931    3         THEN
      782    20932    3            GH_HQ (UST) = FLK;

  20932   1 00067B  B847 0011                            LDR,R3   UST,AUTO
          1 00067D  E847 001A                            LDR,R6   FLK,AUTO
          1 00067F  EF30 0000 0000  xsym                 STR,R6   GH_HQ,R3
          1 000682  0F81 000A                            B        s:20935,PREL

      783    20933    3         ELSE
      784    20934    3            G$USER.FL (BLK) = FLK;

  20934   1 000684  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          1 000687  B855                                 LDR,R3   R5
          1 000688  3F18                                 MLV,R3   24
          1 000689  3E03                                 ADV,R3   3
          1 00068A  E847 001A                            LDR,R6   FLK,AUTO
          1 00068C  EF36                                 STR,R6   ,B6,R3

      785    20935    3         RETURN;

  20935   1 00068D  ECC7 0022                            LDB,B6   EVB$,AUTO
          1 00068F  C3C6 0001                            LNJ,B4   1,B6

      786    20936    3   END DELINK;
      787    20937        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:101  
      788    20938        /*   Insert a user at head or tail of state queue */
      789    20939    2   RELINK: PROC;

  20939   1 000691  EFC7 0022            RELINK          STB,B6   EVB$,AUTO

      790    20940    3         IF HDFLG

  20940   1 000693  89C7 000E                            CMZ      HDFLG,AUTO
          1 000695  0881 0033                            BAGE     s:20958,PREL

      791    20941    4         THEN DO;

      792    20942    4            G$U.BL = 0;

  20942   1 000697  DCC7 001C                            LDB,B5   P$,AUTO
          1 000699  8745 0004                            CL       4,B5

      793    20943    4            FLK = GH_HQ (STATE);

  20943   1 00069B  B847 0010                            LDR,R3   STATE,AUTO
          1 00069D  E830 0000 0000  xsym                 LDR,R6   GH_HQ,R3
          1 0006A0  EF47 001A                            STR,R6   FLK,AUTO

      794    20944    4            IF FLK = 0

  20944   1 0006A2  6981 0011                            BNEZ,R6  s:20952,PREL

      795    20945    5            THEN DO;

      796    20946    5               G$U.FL = 0;

  20946   1 0006A4  8745 0003                            CL       3,B5

      797    20947    5               G$U.BL = 0;

  20947   1 0006A6  8745 0004                            CL       4,B5

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:102  
      798    20948    5               GH_TQ (STATE) = USER;

  20948   1 0006A8  E847 000C                            LDR,R6   USER,AUTO
          1 0006AA  EF30 0000 0000  xsym                 STR,R6   GH_TQ,R3

      799    20949    5               GH_HQ (STATE) = USER;

  20949   1 0006AD  EF30 0000 0000  xsym                 STR,R6   GH_HQ,R3

      800    20950    5               RETURN;

  20950   1 0006B0  ECC7 0022                            LDB,B6   EVB$,AUTO
          1 0006B2  C3C6 0001                            LNJ,B4   1,B6

      801    20951    5               END;
      802    20952    4            GH_HQ (STATE) = USER;

  20952   1 0006B4  E847 000C                            LDR,R6   USER,AUTO
          1 0006B6  EF30 0000 0000  xsym                 STR,R6   GH_HQ,R3

      803    20953    4            G$USER.BL (FLK) = USER;

  20953   1 0006B9  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          1 0006BC  A847 001A                            LDR,R2   FLK,AUTO
          1 0006BE  2F18                                 MLV,R2   24
          1 0006BF  2E04                                 ADV,R2   4
          1 0006C0  EF26                                 STR,R6   ,B6,R2

      804    20954    4            G$U.FL = FLK;

  20954   1 0006C1  D847 001A                            LDR,R5   FLK,AUTO
          1 0006C3  DF45 0003                            STR,R5   3,B5

      805    20955    4            RETURN;

  20955   1 0006C5  ECC7 0022                            LDB,B6   EVB$,AUTO
          1 0006C7  C3C6 0001                            LNJ,B4   1,B6
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:103  

      806    20956    4            END;
      807    20957    4         ELSE DO;

      808    20958    4            G$U.FL = 0;

  20958   1 0006C9  DCC7 001C                            LDB,B5   P$,AUTO
          1 0006CB  8745 0003                            CL       3,B5

      809    20959    4            BLK = GH_TQ (STATE);

  20959   1 0006CD  B847 0010                            LDR,R3   STATE,AUTO
          1 0006CF  E830 0000 0000  xsym                 LDR,R6   GH_TQ,R3
          1 0006D2  EF47 0019                            STR,R6   BLK,AUTO

      810    20960    4            IF BLK = 0

  20960   1 0006D4  6981 0011                            BNEZ,R6  s:20968,PREL

      811    20961    5            THEN DO;

      812    20962    5               G$U.FL = 0;

  20962   1 0006D6  8745 0003                            CL       3,B5

      813    20963    5               G$U.BL = 0;

  20963   1 0006D8  8745 0004                            CL       4,B5

      814    20964    5               GH_TQ (STATE) = USER;

  20964   1 0006DA  D847 000C                            LDR,R5   USER,AUTO
          1 0006DC  DF30 0000 0000  xsym                 STR,R5   GH_TQ,R3

      815    20965    5               GH_HQ (STATE) = USER;

  20965   1 0006DF  DF30 0000 0000  xsym                 STR,R5   GH_HQ,R3
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:104  

      816    20966    5               RETURN;

  20966   1 0006E2  ECC7 0022                            LDB,B6   EVB$,AUTO
          1 0006E4  C3C6 0001                            LNJ,B4   1,B6

      817    20967    5               END;
      818    20968    4            GH_TQ (STATE) = USER;

  20968   1 0006E6  E847 000C                            LDR,R6   USER,AUTO
          1 0006E8  EF30 0000 0000  xsym                 STR,R6   GH_TQ,R3

      819    20969    4            G$USER.FL (BLK) = USER;

  20969   1 0006EB  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          1 0006EE  A847 0019                            LDR,R2   BLK,AUTO
          1 0006F0  2F18                                 MLV,R2   24
          1 0006F1  2E03                                 ADV,R2   3
          1 0006F2  EF26                                 STR,R6   ,B6,R2

      820    20970    4            G$U.BL = BLK;

  20970   1 0006F3  D847 0019                            LDR,R5   BLK,AUTO
          1 0006F5  DF45 0004                            STR,R5   4,B5

      821    20971    4            RETURN;

  20971   1 0006F7  ECC7 0022                            LDB,B6   EVB$,AUTO
          1 0006F9  C3C6 0001                            LNJ,B4   1,B6

      822    20972    4            END;
      823    20973    3   END RELINK;
      824    20974        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:105  
      825    20975        /*   Set HIR (High priority waiting to run) and new current state. */
      826    20976    2   SET_HIR_PRIO: PROC;

  20976   1 0006FB  EFC7 0022            SET_HIR_PRIO    STB,B6   EVB$,AUTO

      827    20977    3         IF PRIO > GH_CUP

  20977   1 0006FD  E847 0012                            LDR,R6   PRIO,AUTO
          1 0006FF  E900 0000 0000  xsym                 CMR,R6   GH_CUP
          1 000702  0381 000F                            BLE      s:20984,PREL

      828    20978    3         THEN
      829    20979    3            IF GH_HIR < 0

  20979   1 000704  D800 0000 0000  xsym                 LDR,R5   GH_HIR
          1 000707  5881 0007                            BGEZ,R5  s:20983,PREL

      830    20980    3            THEN
      831    20981    3               GH_HIR = 1;

  20981   1 000709  5C01                                 LDV,R5   1
          1 00070A  DF00 0000 0000  xsym                 STR,R5   GH_HIR
          1 00070D  0F81 0004                            B        s:20984,PREL

      832    20982    3            ELSE
      833    20983    3               GH_HIR = GH_HIR + 1;

  20983   1 00070F  8A80 0000 0000  xsym                 INC      GH_HIR

      834    20984    3         IF PRIO < %GH_SC11

  20984   1 000712  6D0B                                 CMV,R6   11
          1 000713  0281 0007                            BGE      s:20988,PREL

      835    20985    3         THEN
      836    20986    3            STATE = %GH_CU - PRIO;

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:106  
  20986   1 000715  8256                                 NEG      R6
          1 000716  6E0C                                 ADV,R6   12
          1 000717  EF47 0010                            STR,R6   STATE,AUTO
          1 000719  0F81 0004                            B        s:20989,PREL

      837    20987    3         ELSE
      838    20988    3            STATE = %GH_SC1;

  20988   1 00071B  5C01                                 LDV,R5   1
          1 00071C  DF47 0010                            STR,R5   STATE,AUTO

      839    20989    3         RETURN;

  20989   1 00071E  ECC7 0022                            LDB,B6   EVB$,AUTO
          1 000720  C3C6 0001                            LNJ,B4   1,B6

      840    20990    3   END SET_HIR_PRIO;
      841    20991    2   END;                                    /* END STATE CHANGE PROC              */
      842    20992        %EJECT;
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:107  
      843    20993        /*D* NAME: GHS$CHSE
      844    20994             CALL:  CALL GHS$CHSE (user-number);
      845    20995             Where user-number is the number of a user to be placed in one
      846    20996             of the executable states, (GH_SC1-GH_SC11).
      847    20997             DESCRIPTION:  The user is placed in the state queue corresponding
      848    20998             to his current priority as specified by G$U.PRIO.
      849    20999                                                                            */
      850    21000
      851    21001    1   GHS$CHSE: ENTRY(EVNT) ALTRET;

  21001   1 000722  D380 0000 0000  xent GHS$CHSE        LNJ,B5   X6A_AUTO_N
          1 000725       002E 0004                       DC       46,4

      852    21002
      853    21003                %LOCK (G=G_SCHDGATE);

  21008   1 000727  BB80 0000 0000  02                   LAB,B3   0
          1 00072A  CBF0 0100                            LAB,B4   256,IMO
          1 00072C  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 00072F       0001                            DC       s:21011,PREL

      854    21010
      855    21011    1         HDFLG='0'B;

  21011   1 000730  8747 000E                            CL       HDFLG,AUTO

      856    21012    1         USER=EVNT;

  21012   1 000732  ECC7 0004                            LDB,B6   @EVNT,AUTO
          1 000734  E806                                 LDR,R6   ,B6
          1 000735  EF47 000C                            STR,R6   USER,AUTO

      857    21013    1         P$=ADDR(G$USER(USER));

  21013   1 000737  DC80 0000 0000  xsym                 LDB,B5   G$USRT$
          1 00073A  B856                                 LDR,R3   R6
          1 00073B  3F18                                 MLV,R3   24
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:108  
          1 00073C  CBB5                                 LAB,B4   ,B5,R3
          1 00073D  CFC7 001C                            STB,B4   P$,AUTO

      858    21014    1         UST=G$U.US;

  21014   1 00073F  D844 0002                            LDR,R5   2,B4
          1 000741  DF47 0011                            STR,R5   UST,AUTO

      859    21015    1         EVENT=%GH_EVPARK;

  21015   1 000743  4C0B                                 LDV,R4   11
          1 000744  CF47 000D                            STR,R4   EVENT,AUTO

      860    21016    1         CALL EVREPRT;

  21016   1 000746  E3C0 FE0A                            LNJ,B6   s:0,PREL
          1 000748       0001                            DC       s:21017,PREL

      861    21017    1         CALL CHSE0;                     /* PARK AT CURRENT PRIORITY           */

  21017   1 000749  E3C0 FE85                            LNJ,B6   s:0,PREL
          1 00074B       0001                            DC       s:21024,PREL

      862    21018
      863    21019                %UNLOCK (G=G_SCHDGATE);

  21024   1 00074C  BB80 0000 0000  02                   LAB,B3   0
          1 00074F  CBF0 0100                            LAB,B4   256,IMO
          1 000751  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000754       0001                            DC       s:21027,PREL

      864    21026
      865    21027    1         RETURN;

  21027   1 000755  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      866    21028
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:109  
      867    21029        /*D* NAME: GHS$CHS
      868    21030             CALL:  CALL GHS$CHS (user-number);
      869    21031             Where user-number is the number of a user to be placed in
      870    21032             the Current User state, (GH_CU).
      871    21033             DESCRIPTION:  The user is placed in the Current User state.
      872    21034
      873    21035                                                                            */
      874    21036
      875    21037
      876    21038    1   GHS$CHS: ENTRY(EVNT) ALTRET;

  21038   1 000758  D380 0000 0000  xent GHS$CHS         LNJ,B5   X6A_AUTO_N
          1 00075B       002E 0004                       DC       46,4

      877    21039
      878    21040        /*   G_SCHDGATE is locked on entry     */
      879    21041    1         USER=EVNT;

  21041   1 00075D  ECC7 0004                            LDB,B6   @EVNT,AUTO
          1 00075F  E806                                 LDR,R6   ,B6
          1 000760  EF47 000C                            STR,R6   USER,AUTO

      880    21042    1         HDFLG='0'B;

  21042   1 000762  8747 000E                            CL       HDFLG,AUTO

      881    21043    1         P$=ADDR(G$USER(USER));

  21043   1 000764  DC80 0000 0000  xsym                 LDB,B5   G$USRT$
          1 000767  B856                                 LDR,R3   R6
          1 000768  3F18                                 MLV,R3   24
          1 000769  CBB5                                 LAB,B4   ,B5,R3
          1 00076A  CFC7 001C                            STB,B4   P$,AUTO

      882    21044    1         UST=G$U.US;

  21044   1 00076C  D844 0002                            LDR,R5   2,B4
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:110  
          1 00076E  DF47 0011                            STR,R5   UST,AUTO

      883    21045    1         STATE=%GH_CU;

  21045   1 000770  4C0C                                 LDV,R4   12
          1 000771  CF47 0010                            STR,R4   STATE,AUTO

      884    21046    1         EVENT=%GH_EVNEWUSR;

  21046   1 000773  CF47 000D                            STR,R4   EVENT,AUTO

      885    21047    1         CALL EVREPRT;

  21047   1 000775  E3C0 FDDB                            LNJ,B6   s:0,PREL
          1 000777       0001                            DC       s:21048,PREL

      886    21048    1         CALL CHANGE_STATE;

  21048   1 000778  E3C0 FE17                            LNJ,B6   s:0,PREL
          1 00077A       0001                            DC       s:21051,PREL

      887    21049        /*                                                                    */
      888    21050        /*                                                                    */
      889    21051    1         RETURN;

  21051   1 00077B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      890    21052        /*                                                                    */
      891    21053    1   END;
      892    21054        %EOD;

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:111  
--  Include file information  --

   J_SCODE_C.:E05TOU  is referenced.
   SS_SCODE_C.:E05TOU  is referenced.
   GJ_MSG_M.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$RUE.
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:112  

 **** Variables and constants ****

  ****  Section 000 RoData GHS$RUE

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     B-0-0/w STRC(48)    r     1 AFDERR                     8-0-0/w STRC(48)    r     1 EVNTERR
     4-0-0/w STRC(32)    r     1 E_DEBUGXONLY               6-0-0/w STRC(32)    r     1 E_NODBGACC
     0-0-0/w STRC(32)    r     1 E_NOFPRG                   2-0-0/w STRC(32)    r     1 E_TWODBG
     E-0-0/w STRC(48)    r     1 MINGERR                   11-0-0/b BIT (16)    r     1 PERM(0:77)
    11-0-0/b STRC(1248)  r     1 PERM_                     5F-0-0/b BIT (16)    r     1 STBL(0:16)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @EVNT                     24-0-0/w PTR         r     1 @MASK
     8-0-0/w PTR         r     1 @PARM3                     A-0-0/w PTR         r     1 @PARM4
    22-0-0/w PTR         r     1 @STR                       6-0-0/w PTR         r     1 @USR
    13-0-0/w PTR         r     1 AFD$                      1A-0-0/w BIT (16)    r     1 AFLG
    19-0-0/w UBIN(16)    r     1 BLK                       28-0-0/w UBIN(16)    r     1 COMPARE_X
    29-0-0/w UBIN(16)    r     1 COMPARE_XP                22-0-0/w PTR         r     1 EVB$
     D-0-0/w UBIN(16)    r     1 EVENT                     *0-0-0/w UBIN(16)    r     1 EVNT
    1A-0-0/w UBIN(16)    r     1 FLK                        E-0-0/b BIT         r     1 HDFLG
    1A-0-0/w UBIN(16)    r     1 I                         10-0-0/w UBIN(16)    r     1 I1
     F-0-0/w UBIN(16)    r     1 INC                       15-0-0/w PTR         r     1 JIT$
    17-0-0/w PTR         r     1 M$DEBUG$                  *0-0-0/w CHAR(8)     r     1 MASK
    1C-0-0/w PTR         r     1 P$                        *0-0-0/w UBIN(16)    r     1 PARM3
    *0-0-0/w UBIN(16)    r     1 PARM4                     1E-0-0/w PTR         r     1 PG$
    12-0-0/w UBIN(16)    r     1 PRIO                      1B-0-0/b BIT         r     1 REGGED
    10-0-0/w UBIN(16)    r     1 STATE                     *0-0-0/w CHAR(8)     r     1 STR
     C-0-0/w UBIN(16)    r     1 USER                      *0-0-0/w UBIN(16)    r     1 USR
    11-0-0/w UBIN(16)    r     1 UST                       26-0-0/w UBIN(16)    r     1 WILD_X
    26-0-0/w CHAR(2)     r     1 WILD_XC                   27-0-0/w UBIN(16)    r     1 WILD_XP

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:113  
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$EVBUF$                   0-0-0/w PTR         r     1 G$JIT$
     0-0-0/w PTR         r     1 G$LOW_MEM$                 0-0-0/w PTR         r     1 G$MHJIT$
     0-0-0/w PTR         r     1 G$ROS$                     0-0-0/w PTR         r     1 G$UHJIT$
     0-0-0/w PTR         r     1 G$USRT$                    0-0-0/w PTR         r     1 G$WINDOW1$
     0-0-0/w UBIN(16)    r     1 GH_CUP                     0-0-0/w UBIN(16)    r     1 GH_EVF
     0-0-0/w SBIN(16)    r     1 GH_HIR                     0-0-0/w UBIN(16)    r     1 GH_HQ(0:0)
     0-0-0/w UBIN(16)    r     1 GH_MFU
     0-0-0/w UBIN(16)    r     1 GH_PINC(0:5)
     0-0-0/w UBIN(16)    r     1 GH_TQ(0:0)                 0-0-0/w STRC(48)    r     1 G_ASFGATE
     0-0-0/w UBIN(16)    r     1 G_CPUSTATE(0:3)
     0-0-0/w UBIN(16)    r     1 G_CUR_USRS(0:0)
     0-0-0/w SBIN(16)    r     1 G_DIS                      0-0-0/w UBIN(16)    r     1 G_EVBUF#
     0-0-0/w UBIN(16)    r     1 G_EVFLG                    0-0-0/w SBIN(16)    r     1 G_EVX
     0-0-0/w UBIN(16)    r     1 G_MING                     0-0-0/w UBIN(16)    r     1 G_NSCPU
     0-0-0/w STRC(48)    r     1 G_SCHDGATE                 0-0-0/w STRC(48)    r     1 KNA_LNKSSN
     0-0-0/w UBIN(16)    r     1 KN_DELU_CHECK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(64)    r     1 G$EVBUF(0:0)
     0-0-0/w STRC(5616)  r     1 G$JIT                      0-0-0/w STRC(4096)  r     1 G$LOW_MEM
     0-0-0/w STRC(27232) r     1 G$MHJIT                    0-0-0/w STRC(12000) r     1 G$ROS
     0-0-0/w STRC(384)   r     1 G$U                        0-0-0/w STRC(6480)  r     1 G$UHJIT
     0-0-0/w STRC(384)   r     1 G$USER(0:0)                0-0-0/w STRC(128)   r     1 KL$AFD
     0-0-0/w ASTR(808)   r     1 M$DCB                      0-0-0/w UBIN(32)    r     1 PARM3$
     0-0-0/w STRC(32)    r     1 VLP$ERRCODE

PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:114  

   Procedure GHS$RUE requires 1918 words for executable code.
   Procedure GHS$RUE requires 46 words of local(AUTO) storage.
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:115  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:116  
          MINI XREF LISTING

AFD$
     19543**DCL     19390--IMP-PTR 20578<<ASSIGN  20582>>IF      20596>>IF      20605>>IF      20625>>IF
     20625>>IF      20626>>CALL    20645>>ASSIGN
AFDERR
     19852**DCL     20584<>CALL
AFLG
     19548**DCL     20426<<ASSIGN  20429<<ASSIGN  20433<<ASSIGN  20442>>ASSIGN  20452<<ASSIGN  20461>>ASSIGN
     20474<<ASSIGN  20478<<ASSIGN  20482<<ASSIGN  20486<<ASSIGN  20490<<ASSIGN  20494<<ASSIGN
BLK
     19546**DCL     20887<<ASSIGN  20888>>IF      20896>>DOUNTIL 20897>>ASSIGN  20900>>ASSIGN  20912<<ASSIGN
     20924<<ASSIGN  20927>>ASSIGN  20929>>ASSIGN  20930>>IF      20934>>ASSIGN  20959<<ASSIGN  20960>>IF
     20969>>ASSIGN  20970>>ASSIGN
CHANGE_STATE
     20850**PROC    20314--CALL    20396--CALL    20518--CALL    20537--CALL    20567--CALL    20681--CALL
     21048--CALL
CHKMF
     20559**LABEL   20557--GOTO
CHSE0 IN PROCEDURE CHANGE_STATE
     20869**ENTRY   21017--CALL
COMPARE_X IN PROCEDURE WILDCOMPARE
     20737**DCL     20778<<ASSIGN  20783>>DOWHILE 20783>>DOWHILE 20789>>ASSIGN  20790>>IF      20790>>IF
     20800<<ASSIGN  20805<<ASSIGN  20805>>ASSIGN
COMPARE_XP IN PROCEDURE WILDCOMPARE
     20738**DCL     20779<<ASSIGN  20789<<ASSIGN  20794>>IF      20800>>ASSIGN
DELINK IN PROCEDURE CHANGE_STATE
     20922**PROC    20851--CALL    20884--CALL
EVB$ IN PROCEDURE EVREPRT
     20832**DCL     20836<<ASSIGN  20840>>ASSIGN  20841>>ASSIGN  20842>>ASSIGN  20843>>ASSIGN  20844>>CALL
EVENT
     19535**DCL     20292<<ASSIGN  20296<<ASSIGN  20300<<ASSIGN  20300>>ASSIGN  20302>>DOWHILE 20303>>IF
     20305<<ASSIGN  20305>>ASSIGN  20307<<ASSIGN  20307>>ASSIGN  20309>>DOCASE  20663>>IF      20842>>ASSIGN
     21015<<ASSIGN  21046<<ASSIGN
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:117  
EVNT
     19528**DCL        49--PROC    20273--ENTRY   20292>>ASSIGN  20296>>ASSIGN  21001--ENTRY   21012>>ASSIGN
     21038--ENTRY   21041>>ASSIGN
EVNTERR
     19790**DCL     20304<>CALL
EVREPRT
     20816**PROC    20293--CALL    21016--CALL    21047--CALL
EXECUTABLE_STATE IN PROCEDURE CHANGE_STATE
     20875**ENTRY   20365--CALL    20401--CALL    20423--CALL    20471--CALL    20500--CALL    20529--CALL
     20545--CALL    20554--CALL    20563--CALL    20575--CALL    20666--CALL
E_DEBUGXONLY
     19683**DCL     20619>>ASSIGN
E_NODBGACC
     19730**DCL     20628>>ASSIGN
E_NOFPRG
     19589**DCL     20590>>ASSIGN
E_TWODBG
     19636**DCL     20612>>ASSIGN
FLK
     19547**DCL     19548--REDEF   19549--REDEF   20901<<ASSIGN  20902>>IF      20906>>ASSIGN  20907>>ASSIGN
     20915<<ASSIGN  20916>>ASSIGN  20918>>ASSIGN  20923<<ASSIGN  20925>>IF      20929>>ASSIGN  20932>>ASSIGN
     20934>>ASSIGN  20943<<ASSIGN  20944>>IF      20953>>ASSIGN  20954>>ASSIGN
G$EVBUF IN PROCEDURE EVREPRT
     20823**DCL     20836--ASSIGN
G$EVBUF.EVENT IN PROCEDURE EVREPRT
     20823**DCL     20842<<ASSIGN
G$EVBUF.PORT IN PROCEDURE EVREPRT
     20823**DCL     20840<<ASSIGN
G$EVBUF.STATE IN PROCEDURE EVREPRT
     20823**DCL     20843<<ASSIGN
G$EVBUF.TIME IN PROCEDURE EVREPRT
     20823**DCL     20844<>CALL
G$EVBUF.USR IN PROCEDURE EVREPRT
     20823**DCL     20841<<ASSIGN
G$EVBUF$ IN PROCEDURE EVREPRT
     20826**DCL     20823--IMP-PTR 20836>>ASSIGN
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:118  
G$HHJIT.ISA_HND
     11668**DCL     11963--REDEF
G$HHJIT.ISA_HND.P$$
     11743**DCL     11743--REDEF
G$HHJIT.TSA_HND.ISA.P$$
     12152**DCL     12152--REDEF
G$HHJIT.TSA_HND.P$$
     12023**DCL     12023--REDEF   12024--REDEF
G$JIT.ACCN
      5965**DCL     20625>>IF
G$JIT.DB_ACCN
      6240**DCL     20626<>CALL
G$JIT.ERRLOG
      6236**DCL      6239--REDEF
G$JIT.JSUNIT
      5975**DCL      5976--REDEF
G$JIT.JUNK.EXONLY
      6234**DCL     20618>>IF
G$JIT.JUNK.RTNFID
      6233**DCL     20607<<ASSIGN
G$JIT.MCLS
      5974**DCL      5974--REDEF
G$JIT.TMRZ
      6243**DCL      6244--REDEF
G$JIT.USER_EXTIME
      5967**DCL      5968--REDEF
G$JIT.USER_MEMTIME
      5970**DCL      5970--REDEF
G$JIT.USER_SVTIME
      5969**DCL      5969--REDEF
G$JIT$
     19554**DCL     20604>>ASSIGN
G$LOW_MEM.IV.IL$
     12417**DCL     12417--REDEF
G$LOW_MEM.IV.INT.I#00$
     12417**DCL     12417--REDEF
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:119  
G$LOW_MEM.IV.INT.I#01$
     12417**DCL     12417--REDEF
G$LOW_MEM.IV.INT.I#02$
     12418**DCL     12418--REDEF
G$LOW_MEM.IV.INT.I#03$
     12418**DCL     12418--REDEF
G$LOW_MEM.IV.INT.I#04$
     12418**DCL     12419--REDEF
G$LOW_MEM.IV.INT.I#05$
     12419**DCL     12419--REDEF
G$LOW_MEM.IV.INT.I#61$
     12420**DCL     12420--REDEF
G$LOW_MEM.IV.INT.I#62$
     12420**DCL     12420--REDEF
G$LOW_MEM.IV.INT.I#63$
     12420**DCL     12420--REDEF
G$LOW_MEM.NATSAP1$
     12380**DCL     20687<<ASSIGN
G$LOW_MEM.TV.T#01$
     12405**DCL     12405--REDEF
G$LOW_MEM.TV.T#02$
     12405**DCL     12405--REDEF
G$LOW_MEM.TV.T#03$
     12404**DCL     12404--REDEF
G$LOW_MEM.TV.T#05$
     12404**DCL     12404--REDEF
G$LOW_MEM.TV.T#06$
     12403**DCL     12403--REDEF
G$LOW_MEM.TV.T#07$
     12403**DCL     12403--REDEF
G$LOW_MEM.TV.T#08$
     12402**DCL     12403--REDEF
G$LOW_MEM.TV.T#09$
     12402**DCL     12402--REDEF
G$LOW_MEM.TV.T#10$
     12402**DCL     12402--REDEF
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:120  
G$LOW_MEM.TV.T#12$
     12401**DCL     12401--REDEF
G$LOW_MEM.TV.T#13$
     12401**DCL     12401--REDEF
G$LOW_MEM.TV.T#14$
     12400**DCL     12400--REDEF
G$LOW_MEM.TV.T#15$
     12400**DCL     12400--REDEF
G$LOW_MEM.TV.T#16$
     12399**DCL     12400--REDEF
G$LOW_MEM.TV.T#17$
     12399**DCL     12399--REDEF
G$LOW_MEM.TV.T#19$
     12398**DCL     12399--REDEF
G$LOW_MEM.TV.T#20$
     12398**DCL     12398--REDEF
G$LOW_MEM.TV.T#21$
     12398**DCL     12398--REDEF
G$LOW_MEM.TV.T#22$
     12397**DCL     12397--REDEF
G$LOW_MEM.TV.T#23$
     12397**DCL     12397--REDEF
G$LOW_MEM.TV.T#24$
     12396**DCL     12397--REDEF
G$LOW_MEM.TV.T#25$
     12396**DCL     12396--REDEF
G$LOW_MEM.TV.T#26$
     12396**DCL     12396--REDEF
G$LOW_MEM.TV.T#27$
     12395**DCL     12395--REDEF
G$LOW_MEM.TV.T#28$
     12395**DCL     12395--REDEF
G$LOW_MEM.TV.T#29$
     12394**DCL     12395--REDEF
G$LOW_MEM.TV.T#30$
     12394**DCL     12394--REDEF
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:121  
G$LOW_MEM.TV.T#31$
     12394**DCL     12394--REDEF
G$LOW_MEM.TV.T#32$
     12393**DCL     12393--REDEF
G$LOW_MEM.TV.T#33$
     12393**DCL     12393--REDEF
G$LOW_MEM$
     19558**DCL     12380--IMP-PTR 20687>>ASSIGN
G$MHJIT.CUN
     18848**DCL     20286>>ASSIGN  20688<<ASSIGN
G$MHJIT.INTCON.HHJIT
     18982**DCL     18982--REDEF
G$MHJIT.INTCON.P$$
     18955**DCL     18955--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
     15900**DCL     15900--REDEF
G$MHJIT.ISA_DBINH.P$$
     17114**DCL     17114--REDEF
G$MHJIT.ISA_IDLE.P$$
     13995**DCL     13995--REDEF
G$MHJIT.ISA_LVL10.P$$
     17417**DCL     17417--REDEF
G$MHJIT.ISA_LVL11.P$$
     17720**DCL     17720--REDEF
G$MHJIT.ISA_LVL12.P$$
     18023**DCL     18023--REDEF
G$MHJIT.ISA_LVL5.P$$
     16203**DCL     16203--REDEF
G$MHJIT.ISA_OV.P$$
     15597**DCL     15597--REDEF
G$MHJIT.ISA_PFS.P$$
     15268**DCL     15268--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
     18630**DCL     18630--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
     16507**DCL     16507--REDEF
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:122  
G$MHJIT.ISA_SATYR_TRN.P$$
     16811**DCL     16811--REDEF
G$MHJIT.ISA_SCHD.P$$
     18326**DCL     18326--REDEF
G$MHJIT.ISA_WDOG.P$$
     15376**DCL     15376--REDEF
G$MHJIT.PNO
     18848**DCL     20701>>ASSIGN
G$MHJIT.TSA_DB.ISA.P$$
     14598**DCL     14598--REDEF
G$MHJIT.TSA_DB.P$$
     14469**DCL     14469--REDEF   14470--REDEF
G$MHJIT.TSA_HND.ISA.P$$
     19176**DCL     19176--REDEF
G$MHJIT.TSA_HND.P$$
     19047**DCL     19047--REDEF   19048--REDEF
G$MHJIT.TSA_MON
     14051**DCL     20687--ASSIGN
G$MHJIT.TSA_MON.ISA.P$$
     14210**DCL     14210--REDEF
G$MHJIT.TSA_MON.P$$
     14081**DCL     14081--REDEF   14082--REDEF
G$MHJIT.TSA_OV.ISA.P$$
     14986**DCL     14986--REDEF
G$MHJIT.TSA_OV.P$$
     14857**DCL     14857--REDEF   14858--REDEF
G$MHJIT$
     19555**DCL     12520--IMP-PTR 20286>>ASSIGN  20687>>ASSIGN  20688>>ASSIGN  20701>>ASSIGN
G$ROS.AUTO_DS$
      6329**DCL      6330--REDEF
G$ROS.AUTO_T$
      6330**DCL      6330--REDEF
G$ROS.CP_ECCB.FLTFLG
      6944**DCL      6975--REDEF
G$ROS.DB_ECCB.FLTFLG
      6868**DCL      6899--REDEF
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:123  
G$ROS.DCBTABLE
      7233**DCL     20610>>ASSIGN
G$ROS.JIT.ERRLOG
      6679**DCL      6682--REDEF
G$ROS.JIT.JSUNIT
      6418**DCL      6419--REDEF
G$ROS.JIT.MCLS
      6417**DCL      6417--REDEF
G$ROS.JIT.TMRZ
      6686**DCL      6687--REDEF
G$ROS.JIT.USER_EXTIME
      6410**DCL      6411--REDEF
G$ROS.JIT.USER_MEMTIME
      6413**DCL      6413--REDEF
G$ROS.JIT.USER_SVTIME
      6412**DCL      6412--REDEF
G$ROS.M$DEBUG.EOMCHAR
      7015**DCL      7015--REDEF    7016--REDEF
G$ROS.M$DEBUG.FLDID
      7014**DCL      7014--REDEF
G$ROS.M$DEBUG.RES
      7009**DCL      7010--REDEF
G$ROS.M$DO.EOMCHAR
      7220**DCL      7220--REDEF    7221--REDEF
G$ROS.M$DO.FLDID
      7219**DCL      7219--REDEF
G$ROS.M$DO.RES
      7214**DCL      7215--REDEF
G$ROS.M$HOST.EOMCHAR
      7169**DCL      7169--REDEF    7170--REDEF
G$ROS.M$HOST.FLDID
      7168**DCL      7168--REDEF
G$ROS.M$HOST.RES
      7163**DCL      7164--REDEF
G$ROS.M$LM.EOMCHAR
      7066**DCL      7066--REDEF    7067--REDEF
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:124  
G$ROS.M$LM.FLDID
      7065**DCL      7065--REDEF
G$ROS.M$LM.RES
      7060**DCL      7061--REDEF
G$ROS.M$ME.EOMCHAR
      7118**DCL      7118--REDEF    7119--REDEF
G$ROS.M$ME.FLDID
      7117**DCL      7117--REDEF
G$ROS.M$ME.RES
      7112**DCL      7113--REDEF
G$ROS.U_ECCB.FLTFLG
      6792**DCL      6823--REDEF
G$ROS$
     19556**DCL     20604>>ASSIGN  20610>>ASSIGN
G$U.ASYNCH
     12430**DCL     20330>>IF      20413<<ASSIGN  20413>>ASSIGN  20442<<ASSIGN  20442>>ASSIGN  20461<<ASSIGN
     20461>>ASSIGN  20655<<ASSIGN  20655>>ASSIGN
G$U.BL
     12430**DCL     20891<<ASSIGN  20900<<ASSIGN  20912>>ASSIGN  20914<<ASSIGN  20924>>ASSIGN  20942<<ASSIGN
     20947<<ASSIGN  20963<<ASSIGN  20970<<ASSIGN
G$U.FL
     12430**DCL     20890<<ASSIGN  20901>>ASSIGN  20907<<ASSIGN  20908<<ASSIGN  20918<<ASSIGN  20923>>ASSIGN
     20946<<ASSIGN  20954<<ASSIGN  20958<<ASSIGN  20962<<ASSIGN
G$U.FLG
     12429**DCL     20686<<ASSIGN
G$U.FLG.BLK
     12429**DCL     20318>>IF      20330>>IF      20348<<ASSIGN  20368<<ASSIGN  20517>>IF      20521<<ASSIGN
     20532<<ASSIGN
G$U.FLG.COBLK
     12429**DCL     20371>>IF      20372<<ASSIGN  20404<<ASSIGN
G$U.FLG.SCIO
     12429**DCL     20364<<ASSIGN  20385<<ASSIGN  20400<<ASSIGN  20422<<ASSIGN  20469<<ASSIGN  20665<<ASSIGN
G$U.FLG.WBLK
     12429**DCL     20502<<ASSIGN  20508>>IF      20509<<ASSIGN
G$U.MF
     12431**DCL     20312>>IF      20552<<ASSIGN  20552>>ASSIGN  20559<<ASSIGN  20559>>ASSIGN  20560>>IF
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:125  
G$U.MISC
     12430**DCL     12430--REDEF   20386<<ASSIGN  20506<>CALL    20507<<ASSIGN  20507>>ASSIGN  20898>>IF
     20898>>IF
G$U.MODE
     12432**DCL     20682>>ASSIGN  20682>>ASSIGN
G$U.PRIO
     12432**DCL     20870>>ASSIGN  20877<<ASSIGN
G$U.PRIOB
     12432**DCL     20876>>ASSIGN
G$U.SYSID
     12433**DCL     20669>>IF
G$U.UHJITPP
     12432**DCL     20597>>ASSIGN
G$U.US
     12430**DCL     20291>>ASSIGN  20854<<ASSIGN  21014>>ASSIGN  21044>>ASSIGN
G$UHJIT
      7274**DCL     20598--ASSIGN  20685--ASSIGN
G$UHJIT.ASDT_MCL.WINDOW1
      8528**DCL     20599<>CALL    20602<>CALL
G$UHJIT.ASDT_MCL.WINDOW1.BASE
      8530**DCL     20597<<ASSIGN  20600<<ASSIGN
G$UHJIT.ASDT_MCL.WINDOW1.SIZE
      8532**DCL     20598<<ASSIGN  20601<<ASSIGN
G$UHJIT.ASDT_USR.ROS.BASE
      7330**DCL     20600>>ASSIGN  20692>>ASSIGN
G$UHJIT.ASDT_USR.ROS.SIZE
      7332**DCL     20601>>ASSIGN
G$UHJIT.ASDT_USR.TSTACKU.BASE
      7396**DCL     20694>>ASSIGN
G$UHJIT.ASDT_USR.UHJIT.BASE
      7418**DCL     20690>>ASSIGN
G$UHJIT.ASDT_USR.UHJIT.SIZE
      7420**DCL     20685<<ASSIGN
G$UHJIT.ISA_USR
      8697**DCL      8992--REDEF
G$UHJIT.ISA_USR.P$$
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:126  
      8772**DCL      8772--REDEF
G$UHJIT.TSA_CP.ISA.P$$
      9979**DCL      9979--REDEF
G$UHJIT.TSA_CP.P$$
      9850**DCL      9850--REDEF    9851--REDEF
G$UHJIT.TSA_DB.ISA.P$$
      9591**DCL      9591--REDEF
G$UHJIT.TSA_DB.P$$
      9462**DCL      9462--REDEF    9463--REDEF
G$UHJIT.TSA_RTT.P$$
     10225**DCL     10225--REDEF   10226--REDEF
G$UHJIT.TSA_USR.ISA.P$$
      9181**DCL      9181--REDEF
G$UHJIT.TSA_USR.P$$
      9052**DCL      9052--REDEF    9053--REDEF
G$UHJIT$
     19557**DCL      7274--IMP-PTR 20597>>ASSIGN  20598>>ASSIGN  20599>>CALL    20600>>ASSIGN  20601>>ASSIGN
     20602>>CALL    20685>>ASSIGN  20690>>ASSIGN  20692>>ASSIGN  20694>>ASSIGN
G$USER
     12440**DCL     20290--ASSIGN  20544--ASSIGN  20574--ASSIGN  20897--ASSIGN  21013--ASSIGN  21043--ASSIGN
G$USER.BL
     12441**DCL     20906<<ASSIGN  20916<<ASSIGN  20929<<ASSIGN  20953<<ASSIGN
G$USER.FL
     12441**DCL     20934<<ASSIGN  20969<<ASSIGN
G$USER.MISC
     12441**DCL     12441--REDEF
G$USRT$
     19559**DCL     12440--IMP-PTR 20290>>ASSIGN  20544>>ASSIGN  20574>>ASSIGN  20897>>ASSIGN  20906>>ASSIGN
     20916>>ASSIGN  20929>>ASSIGN  20934>>ASSIGN  20953>>ASSIGN  20969>>ASSIGN  21013>>ASSIGN  21043>>ASSIGN
G$WINDOW1$
     19560**DCL     20599<>CALL    20600>>ASSIGN  20601>>ASSIGN  20602<>CALL    20604>>ASSIGN  20610>>ASSIGN
     20610>>ASSIGN
GHH$ASD
     19516**DCL-ENT 20599--CALL    20602--CALL
GHH$LOCK
      1682**DCL-ENT 20282--CALL    20328--CALL    20411--CALL    20440--CALL    20459--CALL    20653--CALL
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:127  
     21008--CALL
GHH$UNLOCK
      1682**DCL-ENT 20336--CALL    20345--CALL    20356--CALL    20379--CALL    20393--CALL    20419--CALL
     20448--CALL    20467--CALL    20638--CALL    20661--CALL    20707--CALL    20722--CALL    21024--CALL
GHI$DELU
     19522**DCL-ENT 20709--CALL
GHI$TICS IN PROCEDURE EVREPRT
     20830**DCL-ENT 20844--CALL
GHI$UTS
     19517**DCL-ENT 20506--CALL
GHNGST IN PROCEDURE CHANGE_STATE
     20851**LABEL   20872--GOTO    20879--GOTO
GHR$IDL
     19521**DCL-ENT 20700--CALL
GHR$MON
     19519**DCL-ENT 20347--CALL    20381--CALL    20395--CALL
GHR$SRV
     19520**DCL-ENT 20339--CALL    20373--CALL    20387--CALL
GHS$POKECPU
     19518**DCL-ENT 20861--CALL
GH_CUP
     19571**DCL     20977>>IF
GH_EVF
     19567**DCL     20857<<ASSIGN  20857>>ASSIGN
GH_HIR
     19572**DCL     20979>>IF      20981<<ASSIGN  20983<<ASSIGN  20983>>ASSIGN
GH_HQ
     19569**DCL     20542>>DOWHILE 20543>>ASSIGN  20572>>DOWHILE 20573>>ASSIGN  20893<<ASSIGN  20915>>ASSIGN
     20917<<ASSIGN  20932<<ASSIGN  20943>>ASSIGN  20949<<ASSIGN  20952<<ASSIGN  20965<<ASSIGN
GH_MFU
     19568**DCL     20560>>IF
GH_PINC
     19553**DCL     20876>>ASSIGN
GH_TQ
     19570**DCL     20887>>ASSIGN  20892<<ASSIGN  20904<<ASSIGN  20927<<ASSIGN  20948<<ASSIGN  20959>>ASSIGN
     20964<<ASSIGN  20968<<ASSIGN
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:128  
GMA$RELCVM
     19523**DCL-ENT 20691--CALL    20693--CALL    20695--CALL
G_ASFGATE
     12458**DCL     20328<>CALL    20336<>CALL    20356<>CALL    20411<>CALL    20419<>CALL    20440<>CALL
     20448<>CALL    20459<>CALL    20467<>CALL    20653<>CALL    20661<>CALL
G_CPUSTATE
     19563**DCL     20701<<ASSIGN  20859>>IF
G_CUR_USRS
     19562**DCL     20682<<ASSIGN  20682>>ASSIGN  20683<<ASSIGN  20683>>ASSIGN
G_DIS
     19564**DCL     20699<<ASSIGN  20699>>ASSIGN
G_EVBUF# IN PROCEDURE EVREPRT
     20827**DCL     20838>>IF
G_EVFLG IN PROCEDURE EVREPRT
     20829**DCL     20834>>IF
G_EVX IN PROCEDURE EVREPRT
     20828**DCL     20836>>ASSIGN  20837<<ASSIGN  20837>>ASSIGN  20838>>IF      20838<<ASSIGN
G_MING
     19565**DCL     20669>>IF
G_NSCPU
     19561**DCL     20858>>DOINDEX
G_SCHDGATE
     12496**DCL     20282<>CALL    20638<>CALL    20707<>CALL    20722<>CALL    21008<>CALL    21024<>CALL
HDFLG
     19536**DCL     20289<<ASSIGN  20358<<ASSIGN  20680<<ASSIGN  20940>>IF      21011<<ASSIGN  21042<<ASSIGN
I
     19549**DCL     20690<<ASSIGN  20691<>CALL    20692<<ASSIGN  20693<>CALL    20694<<ASSIGN  20695<>CALL
     20858<<DOINDEX 20859>>IF      20861<>CALL
I1
     19539**DCL     20295<<ASSIGN  20297>>IF      20299<<ASSIGN  20299>>ASSIGN  20302>>DOWHILE
INC
     19537**DCL     20363<<ASSIGN  20399<<ASSIGN  20421<<ASSIGN  20470<<ASSIGN  20498<<ASSIGN  20528<<ASSIGN
     20540<<ASSIGN  20553<<ASSIGN  20562<<ASSIGN  20570<<ASSIGN  20664<<ASSIGN  20876>>ASSIGN
JIT$
     19544**DCL     20604<<ASSIGN  20607>>ASSIGN  20618>>IF      20625>>IF      20626>>CALL
KL$AFD.ACCT
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:129  
     19412**DCL     20625>>IF      20625>>IF      20626<>CALL
KL$AFD.FCN
     19391**DCL     20605>>IF
KL$AFD.NETADR_FROM
     19395**DCL     20645>>ASSIGN
KNA$CHECK
     19524**DCL-ENT 20677--CALL
KNA_LNKSSN
     12477**DCL     20345<>CALL    20379<>CALL    20393<>CALL
KN_DELU_CHECK
     19566**DCL     20676>>IF
M$DCB.DCBNAME.L
     19464**DCL     19464--IMP-SIZ
M$DCB.EOMCHAR
     19455**DCL     19455--REDEF   19456--REDEF
M$DCB.FLDID
     19454**DCL     19454--REDEF
M$DCB.RES
     19449**DCL     19450--REDEF
M$DCB.RLCID
     19459**DCL     20611>>IF      20645<<ASSIGN
M$DEBUG$
     19545**DCL     20610<<ASSIGN  20611>>IF      20645>>ASSIGN
MASK IN PROCEDURE WILDCOMPARE
     20733**DCL     20731--PROC    20766>>ASSIGN  20768>>ASSIGN  20776--ASSIGN  20783--DOWHILE 20783>>DOWHILE
     20785--IF      20785>>IF      20790--IF      20790>>IF      20794--IF      20807--IF
MINGERR
     19914**DCL     20670<>CALL
NON_EXECUTABLE_ORDERED IN PROCEDURE CHANGE_STATE
     20883**ENTRY   20513--CALL
P$
     19551**DCL     12429--IMP-PTR 20290<<ASSIGN  20291>>ASSIGN  20312>>IF      20318>>IF      20330>>IF
     20330>>IF      20348>>ASSIGN  20364>>ASSIGN  20368>>ASSIGN  20371>>IF      20372>>ASSIGN  20385>>ASSIGN
     20386>>ASSIGN  20400>>ASSIGN  20404>>ASSIGN  20413>>ASSIGN  20413>>ASSIGN  20422>>ASSIGN  20442>>ASSIGN
     20442>>ASSIGN  20461>>ASSIGN  20461>>ASSIGN  20469>>ASSIGN  20502>>ASSIGN  20506>>CALL    20507>>ASSIGN
     20507>>ASSIGN  20508>>IF      20509>>ASSIGN  20517>>IF      20521>>ASSIGN  20532>>ASSIGN  20544<<ASSIGN
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:130  
     20552>>ASSIGN  20552>>ASSIGN  20559>>ASSIGN  20559>>ASSIGN  20560>>IF      20574<<ASSIGN  20597>>ASSIGN
     20655>>ASSIGN  20655>>ASSIGN  20665>>ASSIGN  20669>>IF      20682>>ASSIGN  20682>>ASSIGN  20686>>ASSIGN
     20854>>ASSIGN  20870>>ASSIGN  20876>>ASSIGN  20877>>ASSIGN  20890>>ASSIGN  20891>>ASSIGN  20898>>IF
     20900>>ASSIGN  20907>>ASSIGN  20914>>ASSIGN  20918>>ASSIGN  20923>>ASSIGN  20924>>ASSIGN  20942>>ASSIGN
     20946>>ASSIGN  20947>>ASSIGN  20954>>ASSIGN  20958>>ASSIGN  20962>>ASSIGN  20963>>ASSIGN  20970>>ASSIGN
     21013<<ASSIGN  21014>>ASSIGN  21043<<ASSIGN  21044>>ASSIGN
PARM3
     19530**DCL        49--PROC    20273--ENTRY   20386--ASSIGN  20507>>ASSIGN  20578--ASSIGN
PARM3$
     19542**DCL     20386>>ASSIGN
PARM4
     19531**DCL        49--PROC    20273--ENTRY   20590--ASSIGN  20612--ASSIGN  20619--ASSIGN  20628--ASSIGN
PERM
     20248**DCL     20302>>DOWHILE 20303>>IF
PERM_
     20016**DCL     20248--REDEF
PG$
     19552**DCL     20897<<ASSIGN  20898>>IF      20901>>ASSIGN  20908>>ASSIGN  20912>>ASSIGN
PRIO
     19541**DCL     20870<<ASSIGN  20876<<ASSIGN  20877>>ASSIGN  20977>>IF      20984>>IF      20986>>ASSIGN
R0
     20274**LABEL   20271--GOTO
REGGED
     19550**DCL     20270<<ASSIGN  20274<<ASSIGN  20715>>IF
RELINK IN PROCEDURE CHANGE_STATE
     20939**PROC    20852--CALL
SCREECH
     19949**DCL-ENT 20304--CALL    20584--CALL    20670--CALL
SET_CIO
     20385**LABEL   20320--GOTO    20360--GOTO
SET_HIR_PRIO IN PROCEDURE CHANGE_STATE
     20976**PROC    20871--CALL    20878--CALL
SET_STATE IN PROCEDURE CHANGE_STATE
     20854**LABEL   20894--GOTO    20909--GOTO    20919--GOTO
STATE
     19538**DCL     19539--REDEF   20311<<ASSIGN  20319<<ASSIGN  20359<<ASSIGN  20384<<ASSIGN  20505<<ASSIGN
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:131  
     20516<<ASSIGN  20536<<ASSIGN  20566<<ASSIGN  20679<<ASSIGN  20854>>ASSIGN  20855>>IF      20887>>ASSIGN
     20892>>ASSIGN  20893>>ASSIGN  20904>>ASSIGN  20915>>ASSIGN  20917>>ASSIGN  20943>>ASSIGN  20948>>ASSIGN
     20949>>ASSIGN  20952>>ASSIGN  20959>>ASSIGN  20964>>ASSIGN  20965>>ASSIGN  20968>>ASSIGN  20986<<ASSIGN
     20988<<ASSIGN  21045<<ASSIGN
STBL
     20250**DCL     20302>>DOWHILE 20303>>IF
STR IN PROCEDURE WILDCOMPARE
     20732**DCL     20731--PROC    20783--DOWHILE 20783>>DOWHILE 20790--IF      20790>>IF      20794--IF
UNBLKD_BEFORE_BLKD
     20336**LABEL   20318--GOTO
UNLKALT
     20628**LABEL   20594--GOTO    20616--GOTO    20623--GOTO
USER
     19534**DCL     20286<<ASSIGN  20288<<ASSIGN  20290>>ASSIGN  20543<<ASSIGN  20544>>ASSIGN  20573<<ASSIGN
     20574>>ASSIGN  20841>>ASSIGN  20892>>ASSIGN  20893>>ASSIGN  20904>>ASSIGN  20906>>ASSIGN  20908>>ASSIGN
     20916>>ASSIGN  20917>>ASSIGN  20948>>ASSIGN  20949>>ASSIGN  20952>>ASSIGN  20953>>ASSIGN  20964>>ASSIGN
     20965>>ASSIGN  20968>>ASSIGN  20969>>ASSIGN  21012<<ASSIGN  21013>>ASSIGN  21041<<ASSIGN  21043>>ASSIGN
USR
     19529**DCL        49--PROC    20273--ENTRY   20285--IF      20288>>ASSIGN
UST
     19540**DCL     20291<<ASSIGN  20295>>ASSIGN  20499>>IF      20526>>IF      20541<<ASSIGN  20550>>IF
     20560>>IF      20571<<ASSIGN  20581>>IF      20843>>ASSIGN  20927>>ASSIGN  20932>>ASSIGN  21014<<ASSIGN
     21044<<ASSIGN
VLP$ERRCODE
     19482**DCL     20590<<ASSIGN  20612<<ASSIGN  20619<<ASSIGN  20628<<ASSIGN
WILDCOMPARE
     20731**PROC    20626--CALL
WILD_X IN PROCEDURE WILDCOMPARE
     20734**DCL     20735--REDEF   20767>>IF      20769>>IF      20770<<ASSIGN  20775<<ASSIGN  20783>>DOWHILE
     20783>>DOWHILE 20785>>IF      20785>>IF      20786>>ASSIGN  20789>>IF      20790>>IF      20790>>IF
     20796<<ASSIGN  20807>>IF      20807<<ASSIGN  20807>>ASSIGN
WILD_XC IN PROCEDURE WILDCOMPARE
     20735**DCL     20766<<ASSIGN  20768<<ASSIGN
WILD_XP IN PROCEDURE WILDCOMPARE
     20736**DCL     20771<<ASSIGN  20776<<ASSIGN  20786<<ASSIGN  20789>>IF      20794>>IF      20796>>ASSIGN
YC1
PL6.E3A0      #001=GHS$RUE File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:37 Page:132  
     20440**LABEL   20427--GOTO    20475--GOTO    20483--GOTO    20491--GOTO
YC2
     20459**LABEL   20430--GOTO    20479--GOTO    20487--GOTO    20495--GOTO

PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:133  
      893        1        /*T***********************************************************/
      894        2        /*T*                                                         */
      895        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      896        4        /*T*                                                         */
      897        5        /*T***********************************************************/
      898        6        /*X*          */
      899        7        /*P* NAME: GHS$REG
      900        8             PURPOSE: To report a scheduler event for the current user and
      901        9             suspend his execution until notified by a subsequent event.   */
      902       10
      903       11        /*D* NAME: GHS$REG
      904       12             CALL: CALL GHS$REG (event-number,
      905       13                                 parameter-2)  ALTRET(altreturn-label);
      906       14             Where;
      907       15                event-number is one of the scheduler event numbers defined
      908       16                in the GH_SCHD_E file.  The event must be defined as a
      909       17                REG type event by event handling procedure in GHS$RUE.
      910       18                Parameter-2 is defined by event-number.
      911       19
      912       20             DESCRIPTION:  The specified event is reported on the current
      913       21             user by a call to GHS$RUE.  On a normal return, the users state
      914       22             has been changed as required.
      915       23
      916       24             The Scheduler Interrupt Level is triggered causing an entry to
      917       25             the Execution Scheduler to select and run other users.  After
      918       26             this user has been made executable control will return from
      919       27             the call to GHH$LEV.
      920       28
      921       29             If an asynchronous event caused any of the users G$U.ASYNCH
      922       30             flags to be set, the ALTRETURN is taken to inform the caller.
      923       31
      924       32             If GHS$RUE ALTRETs no state change occured and the user is to
      925       33             continue as Current User.  The Execution Scheduler is not
      926       34             triggered.
      927       35
      928       36                                                                            */
      929       37        GHS$REG: PROC(EVENT,PARM2) ALTRET;
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:134  
      930       38        /*                                                                    */
      931       39    1   DCL   EVENT UBIN;                       /* Scheduler event number             */
      932       40    1   DCL   PARM2 UBIN;                       /* Sleep interval or Unblock flag*/
      933       41
      934       42
      935       43
      936       44
      937       45
      938       46        %INCLUDE GH_HARDWARE_M;
      939      144        %INCLUDE GM_VIRTUAL_E;
      940      354 S      %INCLUDE GH_LCP6_M;
      941      355 S      %INCLUDE G_LCP6_E;
      942      356        %INCLUDE GH_SCHD_M;
      943      500        %INCLUDE GH_SCHD_E;
      944      596        %INCLUDE GH_GATE_M;
      945      637 S      %INCLUDE GU_LCP6_M;
      946      638        %INCLUDE G_HJIT_M;
      947      783        %INCLUDE SS_SCODE_C;
      948      803
      949      804        %G$USER;
      950      815        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
      951      826        %GH_LEV (FPTN=TRIG_SCHD,TYPE=TRIGGER,LEVEL=%G_IL_SCHD#);
      952      848        %GATE (FPTN=G_SCHDGATE,STCLASS=SYMREF);
      953      867        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
      954     7741        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
      955    10715        %G$LOW_MEM (STCLASS="BASED(G$LOW_MEM$)");
      956    10764        %VLP_SCODE (FPTN=REGDMN,ERR#=%S$REGDMN,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
      957    10765                    FCG=GH,MID=S,MON='1'B);
      958    10826
      959    10827
      960    10828    1   DCL USR UBIN;                           /* user number                        */
      961    10829    1   DCL G$MHJIT$ PTR SYMREF;
      962    10830    1   DCL G$UHJIT$ PTR SYMREF;
      963    10831    1   DCL G$LOW_MEM$ PTR SYMREF;
      964    10832    1   DCL G_DIS SBIN SYMREF;
      965    10833    1   DCL G$USRT$ PTR SYMREF;
      966    10834
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:135  
      967    10835    1   DCL GHS$REGUSR ENTRY(4) ALTRET;         /* Report User Event                  */
      968    10836    1   DCL SCREECH ENTRY(1);
      969    10837    1   DCL GHH$LEV ENTRY(1);                   /* Issue LEV instructions*/
      970    10838    1   DCL GHR$MON ENTRY;                      /* Switch to monitor timer            */
      971    10839
      972    10840    1           IF G$UHJIT.DMN.ID ~= %G_DMN_USR_SVC# AND
      973    10841    1             G$UHJIT.DMN.ID ~= %G_DMN_DB_SVC# THEN
      974    10842    1              CALL SCREECH (REGDMN);
      975    10843        /*S*  SCREECH_CODE: GHS-S$REGDMN
      976    10844              TYPE: SCREECH
      977    10845              MESSAGE: REG from incorrect domain. Not user or debugger service.
      978    10846                                                                           */
      979    10847
      980    10848    1           CALL GHR$MON;
      981    10849    1           USR = G$MHJIT.CUN;
      982    10850    1           CALL GHS$REGUSR(EVENT,USR,PARM2) ALTRET(NO_BLOCK);
      983    10851    1           IF G$USRT$->G$USER.UHJITPP(G$MHJIT.CUN) ~= G$UHJIT.ASDT_MCL.UHJIT.BASE
      984    10852    1           THEN
      985    10853    1              CALL SCREECH(REGDMN);
      986    10854    1           G$UHJIT.NATSAP$=G$LOW_MEM.NATSAP1$;
      987    10855    1           G$LOW_MEM.NATSAP1$=ADDR(G$MHJIT.TSA_MON);
      988    10856    1           G$MHJIT.CUN = 0;
      989    10857    1           CALL GHH$LEV (TRIG_SCHD);       /* Trigger Sched Int Level            */
      990    10858    1   NO_BLOCK: ;
      991    10859                %UNLOCK (G=G_SCHDGATE);         /* Uninhibit gets us to XSCHD         */
      992    10866    1           IF G$MHJIT.CUN = 0 THEN
      993    10867    1              CALL SCREECH (REGDMN);       /* Tried to REG at level<63           */
      994    10868
      995    10869    1           IF G$MHJIT.CU$->G$U.ASYNCH THEN /* If he has asynch events,*/
      996    10870    1              ALTRETURN;                   /* Let caller know.                   */
      997    10871    1           RETURN;
      998    10872        %EJECT;
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:136  
      999    10873    1   GHS$POKECPU: ENTRY (EVENT,PARM2) ALTRET;
     1000    10874
     1001    10875    1           IF EVENT ~= G$MHJIT.PNO THEN
     1002    10876    1              RETURN;
     1003    10877    1           CALL GHH$LEV (TRIG_SCHD);       /* Trigger Scheduler Interrupt level  */
     1004    10878    1           RETURN;
     1005    10879    1   END GHS$REG;
     1006    10880        %EOD;

PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:137  
--  Include file information  --

   SS_SCODE_C.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$REG.

   Procedure GHS$REG requires 189 words for executable code.
   Procedure GHS$REG requires 16 words of local(AUTO) storage.

PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:138  

 Object Unit name= GHS$REG                                    File name= GHS$SCHD.:E05TOU
 UTS= JUL 29 '97 21:40:07.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     1      1  GHS$REG
    1  RoData even  UTS      3      3  GHS$REG
    2   Proc  even  none   189     BD  GHS$REG
    3  RoData even  none     6      6  GHS$REG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  GHS$REG
     2     9F          yes     yes      Std        2  GHS$POKECPU

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 SCREECH
 yes     yes           Std       1 GHH$UNLOCK
         yes           Std       0 GHR$MON
 yes     yes           Std       4 GHS$REGUSR
         yes           Std       1 GHH$LEV
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:139  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G_SCHDGATE                            G$MHJIT$                              G$UHJIT$
     G$LOW_MEM$                            G$USRT$                          r    G$ROS$
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:140  


      893        1        /*T***********************************************************/
      894        2        /*T*                                                         */
      895        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      896        4        /*T*                                                         */
      897        5        /*T***********************************************************/
      898        6        /*X*          */
      899        7        /*P* NAME: GHS$REG
      900        8             PURPOSE: To report a scheduler event for the current user and
      901        9             suspend his execution until notified by a subsequent event.   */
      902       10
      903       11        /*D* NAME: GHS$REG
      904       12             CALL: CALL GHS$REG (event-number,
      905       13                                 parameter-2)  ALTRET(altreturn-label);
      906       14             Where;
      907       15                event-number is one of the scheduler event numbers defined
      908       16                in the GH_SCHD_E file.  The event must be defined as a
      909       17                REG type event by event handling procedure in GHS$RUE.
      910       18                Parameter-2 is defined by event-number.
      911       19
      912       20             DESCRIPTION:  The specified event is reported on the current
      913       21             user by a call to GHS$RUE.  On a normal return, the users state
      914       22             has been changed as required.
      915       23
      916       24             The Scheduler Interrupt Level is triggered causing an entry to
      917       25             the Execution Scheduler to select and run other users.  After
      918       26             this user has been made executable control will return from
      919       27             the call to GHH$LEV.
      920       28
      921       29             If an asynchronous event caused any of the users G$U.ASYNCH
      922       30             flags to be set, the ALTRETURN is taken to inform the caller.
      923       31
      924       32             If GHS$RUE ALTRETs no state change occured and the user is to
      925       33             continue as Current User.  The Execution Scheduler is not
      926       34             triggered.
      927       35
      928       36                                                                            */
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:141  
      929       37        GHS$REG: PROC(EVENT,PARM2) ALTRET;

     37   2 000000  D380 0000 0000  xent GHS$REG         LNJ,B5   X6A_AUTO_2
          2 000003       0010 0002                       DC       16,2

      930       38        /*                                                                    */
      931       39    1   DCL   EVENT UBIN;                       /* Scheduler event number             */
      932       40    1   DCL   PARM2 UBIN;                       /* Sleep interval or Unblock flag*/
      933       41
      934       42
      935       43
      936       44
      937       45
      938       46        %INCLUDE GH_HARDWARE_M;
      939      144        %INCLUDE GM_VIRTUAL_E;
      940      354 S      %INCLUDE GH_LCP6_M;
      941      355 S      %INCLUDE G_LCP6_E;
      942      356        %INCLUDE GH_SCHD_M;
      943      500        %INCLUDE GH_SCHD_E;
      944      596        %INCLUDE GH_GATE_M;
      945      637 S      %INCLUDE GU_LCP6_M;
      946      638        %INCLUDE G_HJIT_M;
      947      783        %INCLUDE SS_SCODE_C;
      948      803
      949      804        %G$USER;
      950      815        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
      951      826        %GH_LEV (FPTN=TRIG_SCHD,TYPE=TRIGGER,LEVEL=%G_IL_SCHD#);
      952      848        %GATE (FPTN=G_SCHDGATE,STCLASS=SYMREF);
      953      867        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
      954     7741        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
      955    10715        %G$LOW_MEM (STCLASS="BASED(G$LOW_MEM$)");
      956    10764        %VLP_SCODE (FPTN=REGDMN,ERR#=%S$REGDMN,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
      957    10765                    FCG=GH,MID=S,MON='1'B);
      958    10826
      959    10827
      960    10828    1   DCL USR UBIN;                           /* user number                        */
      961    10829    1   DCL G$MHJIT$ PTR SYMREF;
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:142  
      962    10830    1   DCL G$UHJIT$ PTR SYMREF;
      963    10831    1   DCL G$LOW_MEM$ PTR SYMREF;
      964    10832    1   DCL G_DIS SBIN SYMREF;
      965    10833    1   DCL G$USRT$ PTR SYMREF;
      966    10834
      967    10835    1   DCL GHS$REGUSR ENTRY(4) ALTRET;         /* Report User Event                  */
      968    10836    1   DCL SCREECH ENTRY(1);
      969    10837    1   DCL GHH$LEV ENTRY(1);                   /* Issue LEV instructions*/
      970    10838    1   DCL GHR$MON ENTRY;                      /* Switch to monitor timer            */
      971    10839
      972    10840    1           IF G$UHJIT.DMN.ID ~= %G_DMN_USR_SVC# AND

  10840   2 000005  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          2 000008  E846 007E                            LDR,R6   126,B6
          2 00000A  6D03                                 CMV,R6   3
          2 00000B  0901 000D                            BE       s:10848,PREL
          2 00000D  6D01                                 CMV,R6   1
          2 00000E  0901 000A                            BE       s:10848,PREL

      973    10841    1             G$UHJIT.DMN.ID ~= %G_DMN_DB_SVC# THEN
      974    10842    1              CALL SCREECH (REGDMN);

  10842   2 000010  BB80 0000 0000  03                   LAB,B3   0
          2 000013  CBF0 0100                            LAB,B4   256,IMO
          2 000015  E380 0000 0000  xent                 LNJ,B6   SCREECH
          2 000018       0001                            DC       s:10848,PREL

      975    10843        /*S*  SCREECH_CODE: GHS-S$REGDMN
      976    10844              TYPE: SCREECH
      977    10845              MESSAGE: REG from incorrect domain. Not user or debugger service.
      978    10846                                                                           */
      979    10847
      980    10848    1           CALL GHR$MON;

  10848   2 000019  CBF0 0000                            LAB,B4   0,IMO
          2 00001B  E380 0000 0000  xent                 LNJ,B6   GHR$MON
          2 00001E       0001                            DC       s:10849,PREL
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:143  

      981    10849    1           USR = G$MHJIT.CUN;

  10849   2 00001F  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          2 000022  E846 0351                            LDR,R6   849,B6
          2 000024  EF47 0008                            STR,R6   USR,AUTO

      982    10850    1           CALL GHS$REGUSR(EVENT,USR,PARM2) ALTRET(NO_BLOCK);

  10850   2 000026  DCC7 0006                            LDB,B5   @PARM2,AUTO
          2 000028  DFC7 000E                            STB,B5   USR+6,AUTO
          2 00002A  CBC7 0008                            LAB,B4   USR,AUTO
          2 00002C  CFC7 000C                            STB,B4   USR+4,AUTO
          2 00002E  BCC7 0004                            LDB,B3   @EVENT,AUTO
          2 000030  BFC7 000A                            STB,B3   USR+2,AUTO
          2 000032  BBC7 000A                            LAB,B3   USR+2,AUTO
          2 000034  CBF0 0300                            LAB,B4   768,IMO
          2 000036  E380 0000 0000  xent                 LNJ,B6   GHS$REGUSR
          2 000039       003E                            DC       s:10856,PREL

      983    10851    1           IF G$USRT$->G$USER.UHJITPP(G$MHJIT.CUN) ~= G$UHJIT.ASDT_MCL.UHJIT.BASE

  10851   2 00003A  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          2 00003D  B846 0351                            LDR,R3   849,B6
          2 00003F  DC80 0000 0000  xsym                 LDB,B5   G$USRT$
          2 000042  CBC5 0011                            LAB,B4   17,B5
          2 000044  3F0C                                 MLV,R3   12
          2 000045  BC80 0000 0000  xsym                 LDB,B3   G$UHJIT$
          2 000048  F843 0048                            LDR,R7   72,B3
          2 00004A  F570 7FFF                            AND,R7   32767,IMO
          2 00004C  6C00                                 LDV,R6   0
          2 00004D  84B4                                 SID      ,B4,R3
          2 00004E  6981 0003                            BNEZ,R6  s:10853,PREL
          2 000050  7901 000A                            BEZ,R7   s:10854,PREL

      984    10852    1           THEN
      985    10853    1              CALL SCREECH(REGDMN);
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:144  

  10853   2 000052  BB80 0000 0000  03                   LAB,B3   0
          2 000055  CBF0 0100                            LAB,B4   256,IMO
          2 000057  E380 0000 0000  xent                 LNJ,B6   SCREECH
          2 00005A       0001                            DC       s:10854,PREL

      986    10854    1           G$UHJIT.NATSAP$=G$LOW_MEM.NATSAP1$;

  10854   2 00005B  EC80 0000 0000  xsym                 LDB,B6   G$LOW_MEM$
          2 00005E  DCC6 000E                            LDB,B5   14,B6
          2 000060  CC80 0000 0000  xsym                 LDB,B4   G$UHJIT$
          2 000063  DFC4 00FD                            STB,B5   253,B4

      987    10855    1           G$LOW_MEM.NATSAP1$=ADDR(G$MHJIT.TSA_MON);

  10855   2 000065  BC80 0000 0000  xsym                 LDB,B3   G$MHJIT$
          2 000068  ABC3 0087                            LAB,B2   135,B3
          2 00006A  AFC6 000E                            STB,B2   14,B6

      988    10856    1           G$MHJIT.CUN = 0;

  10856   2 00006C  8743 0351                            CL       849,B3

      989    10857    1           CALL GHH$LEV (TRIG_SCHD);       /* Trigger Sched Int Level            */

  10857   2 00006E  BB80 0000 0002  03                   LAB,B3   +2
          2 000071  CBF0 0100                            LAB,B4   256,IMO
          2 000073  E380 0000 0000  xent                 LNJ,B6   GHH$LEV
          2 000076       0001                            DC       s:10856,PREL

  10856   2                              NO_BLOCK        null
      990    10858    1   NO_BLOCK: ;
      991    10859                %UNLOCK (G=G_SCHDGATE);         /* Uninhibit gets us to XSCHD         */

  10864   2 000077  BB80 0000 0004  03   NO_BLOCK        LAB,B3   +4
          2 00007A  CBF0 0100                            LAB,B4   256,IMO
          2 00007C  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:145  
          2 00007F       0001                            DC       s:10866,PREL

      992    10866    1           IF G$MHJIT.CUN = 0 THEN

  10866   2 000080  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          2 000083  E846 0351                            LDR,R6   849,B6
          2 000085  6981 000A                            BNEZ,R6  s:10869,PREL

      993    10867    1              CALL SCREECH (REGDMN);       /* Tried to REG at level<63           */

  10867   2 000087  BB80 0000 0000  03                   LAB,B3   0
          2 00008A  CBF0 0100                            LAB,B4   256,IMO
          2 00008C  E380 0000 0000  xent                 LNJ,B6   SCREECH
          2 00008F       0001                            DC       s:10869,PREL

      994    10868
      995    10869    1           IF G$MHJIT.CU$->G$U.ASYNCH THEN /* If he has asynch events,*/

  10869   2 000090  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          2 000093  DCC6 0352                            LDB,B5   850,B6
          2 000095  E845 0001                            LDR,R6   1,B5
          2 000097  6901 0004                            BEZ,R6   s:10871,PREL

      996    10870    1              ALTRETURN;                   /* Let caller know.                   */

  10870   2 000099  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      997    10871    1           RETURN;

  10871   2 00009C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      998    10872        %EJECT;
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:146  
      999    10873    1   GHS$POKECPU: ENTRY (EVENT,PARM2) ALTRET;

  10873   2 00009F  D380 0000 0000  xent GHS$POKECPU     LNJ,B5   X6A_AUTO_2
          2 0000A2       0010 0002                       DC       16,2

     1000    10874
     1001    10875    1           IF EVENT ~= G$MHJIT.PNO THEN

  10875   2 0000A4  ECC7 0004                            LDB,B6   @EVENT,AUTO
          2 0000A6  DC80 0000 0000  xsym                 LDB,B5   G$MHJIT$
          2 0000A9  E806                                 LDR,R6   ,B6
          2 0000AA  E945 0354                            CMR,R6   852,B5
          2 0000AC  0901 0004                            BE       s:10877,PREL

     1002    10876    1              RETURN;

  10876   2 0000AE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1003    10877    1           CALL GHH$LEV (TRIG_SCHD);       /* Trigger Scheduler Interrupt level  */

  10877   2 0000B1  BB80 0000 0002  03                   LAB,B3   +2
          2 0000B4  CBF0 0100                            LAB,B4   256,IMO
          2 0000B6  E380 0000 0000  xent                 LNJ,B6   GHH$LEV
          2 0000B9       0001                            DC       s:10878,PREL

     1004    10878    1           RETURN;

  10878   2 0000BA  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1005    10879    1   END GHS$REG;
     1006    10880        %EOD;

PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:147  
--  Include file information  --

   SS_SCODE_C.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$REG.
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:148  

 **** Variables and constants ****

  ****  Section 000  Data  GHS$REG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(16)    r     1 TRIG_SCHD

  ****  Section 001 RoData GHS$REG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 REGDMN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @EVENT                     6-0-0/w PTR         r     1 @PARM2
    *0-0-0/w UBIN(16)    r     1 EVENT                     *0-0-0/w UBIN(16)    r     1 PARM2
     8-0-0/w UBIN(16)    r     1 USR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$LOW_MEM$                 0-0-0/w PTR         r     1 G$MHJIT$
     0-0-0/w PTR         r     1 G$UHJIT$                   0-0-0/w PTR         r     1 G$USRT$
     0-0-0/w STRC(48)    r     1 G_SCHDGATE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:149  
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(4096)  r     1 G$LOW_MEM                  0-0-0/w STRC(27232) r     1 G$MHJIT
     0-0-0/w STRC(384)   r     1 G$U                        0-0-0/w STRC(6480)  r     1 G$UHJIT
     0-0-0/w STRC(384)   r     1 G$USER(0:0)


   Procedure GHS$REG requires 189 words for executable code.
   Procedure GHS$REG requires 16 words of local(AUTO) storage.
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:150  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:151  
          MINI XREF LISTING

EVENT
        39**DCL        37--PROC    10850<>CALL    10873--ENTRY   10875>>IF
G$LOW_MEM.IV.IL$
     10757**DCL     10757--REDEF
G$LOW_MEM.IV.INT.I#00$
     10757**DCL     10757--REDEF
G$LOW_MEM.IV.INT.I#01$
     10757**DCL     10757--REDEF
G$LOW_MEM.IV.INT.I#02$
     10758**DCL     10758--REDEF
G$LOW_MEM.IV.INT.I#03$
     10758**DCL     10758--REDEF
G$LOW_MEM.IV.INT.I#04$
     10758**DCL     10759--REDEF
G$LOW_MEM.IV.INT.I#05$
     10759**DCL     10759--REDEF
G$LOW_MEM.IV.INT.I#61$
     10760**DCL     10760--REDEF
G$LOW_MEM.IV.INT.I#62$
     10760**DCL     10760--REDEF
G$LOW_MEM.IV.INT.I#63$
     10760**DCL     10760--REDEF
G$LOW_MEM.NATSAP1$
     10720**DCL     10854>>ASSIGN  10855<<ASSIGN
G$LOW_MEM.TV.T#01$
     10745**DCL     10745--REDEF
G$LOW_MEM.TV.T#02$
     10745**DCL     10745--REDEF
G$LOW_MEM.TV.T#03$
     10744**DCL     10744--REDEF
G$LOW_MEM.TV.T#05$
     10744**DCL     10744--REDEF
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:152  
G$LOW_MEM.TV.T#06$
     10743**DCL     10743--REDEF
G$LOW_MEM.TV.T#07$
     10743**DCL     10743--REDEF
G$LOW_MEM.TV.T#08$
     10742**DCL     10743--REDEF
G$LOW_MEM.TV.T#09$
     10742**DCL     10742--REDEF
G$LOW_MEM.TV.T#10$
     10742**DCL     10742--REDEF
G$LOW_MEM.TV.T#12$
     10741**DCL     10741--REDEF
G$LOW_MEM.TV.T#13$
     10741**DCL     10741--REDEF
G$LOW_MEM.TV.T#14$
     10740**DCL     10740--REDEF
G$LOW_MEM.TV.T#15$
     10740**DCL     10740--REDEF
G$LOW_MEM.TV.T#16$
     10739**DCL     10740--REDEF
G$LOW_MEM.TV.T#17$
     10739**DCL     10739--REDEF
G$LOW_MEM.TV.T#19$
     10738**DCL     10739--REDEF
G$LOW_MEM.TV.T#20$
     10738**DCL     10738--REDEF
G$LOW_MEM.TV.T#21$
     10738**DCL     10738--REDEF
G$LOW_MEM.TV.T#22$
     10737**DCL     10737--REDEF
G$LOW_MEM.TV.T#23$
     10737**DCL     10737--REDEF
G$LOW_MEM.TV.T#24$
     10736**DCL     10737--REDEF
G$LOW_MEM.TV.T#25$
     10736**DCL     10736--REDEF
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:153  
G$LOW_MEM.TV.T#26$
     10736**DCL     10736--REDEF
G$LOW_MEM.TV.T#27$
     10735**DCL     10735--REDEF
G$LOW_MEM.TV.T#28$
     10735**DCL     10735--REDEF
G$LOW_MEM.TV.T#29$
     10734**DCL     10735--REDEF
G$LOW_MEM.TV.T#30$
     10734**DCL     10734--REDEF
G$LOW_MEM.TV.T#31$
     10734**DCL     10734--REDEF
G$LOW_MEM.TV.T#32$
     10733**DCL     10733--REDEF
G$LOW_MEM.TV.T#33$
     10733**DCL     10733--REDEF
G$LOW_MEM$
     10831**DCL     10720--IMP-PTR 10854>>ASSIGN  10855>>ASSIGN
G$MHJIT.CU$
      7212**DCL     10869>>IF
G$MHJIT.CUN
      7212**DCL     10849>>ASSIGN  10851>>IF      10856<<ASSIGN  10866>>IF
G$MHJIT.INTCON.HHJIT
      7346**DCL      7346--REDEF
G$MHJIT.INTCON.P$$
      7319**DCL      7319--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
      4264**DCL      4264--REDEF
G$MHJIT.ISA_DBINH.P$$
      5478**DCL      5478--REDEF
G$MHJIT.ISA_IDLE.P$$
      2359**DCL      2359--REDEF
G$MHJIT.ISA_LVL10.P$$
      5781**DCL      5781--REDEF
G$MHJIT.ISA_LVL11.P$$
      6084**DCL      6084--REDEF
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:154  
G$MHJIT.ISA_LVL12.P$$
      6387**DCL      6387--REDEF
G$MHJIT.ISA_LVL5.P$$
      4567**DCL      4567--REDEF
G$MHJIT.ISA_OV.P$$
      3961**DCL      3961--REDEF
G$MHJIT.ISA_PFS.P$$
      3632**DCL      3632--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
      6994**DCL      6994--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
      4871**DCL      4871--REDEF
G$MHJIT.ISA_SATYR_TRN.P$$
      5175**DCL      5175--REDEF
G$MHJIT.ISA_SCHD.P$$
      6690**DCL      6690--REDEF
G$MHJIT.ISA_WDOG.P$$
      3740**DCL      3740--REDEF
G$MHJIT.PNO
      7212**DCL     10875>>IF
G$MHJIT.TSA_DB.ISA.P$$
      2962**DCL      2962--REDEF
G$MHJIT.TSA_DB.P$$
      2833**DCL      2833--REDEF    2834--REDEF
G$MHJIT.TSA_HND.ISA.P$$
      7540**DCL      7540--REDEF
G$MHJIT.TSA_HND.P$$
      7411**DCL      7411--REDEF    7412--REDEF
G$MHJIT.TSA_MON
      2415**DCL     10855--ASSIGN
G$MHJIT.TSA_MON.ISA.P$$
      2574**DCL      2574--REDEF
G$MHJIT.TSA_MON.P$$
      2445**DCL      2445--REDEF    2446--REDEF
G$MHJIT.TSA_OV.ISA.P$$
      3350**DCL      3350--REDEF
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:155  
G$MHJIT.TSA_OV.P$$
      3221**DCL      3221--REDEF    3222--REDEF
G$MHJIT$
     10829**DCL       884--IMP-PTR 10849>>ASSIGN  10851>>IF      10855>>ASSIGN  10856>>ASSIGN  10866>>IF
     10869>>IF      10875>>IF
G$U.ASYNCH
       810**DCL     10869>>IF
G$U.MISC
       810**DCL       810--REDEF
G$UHJIT.ASDT_MCL.UHJIT.BASE
      8596**DCL     10851>>IF
G$UHJIT.DMN.ID
      9476**DCL     10840>>IF      10840>>IF
G$UHJIT.ISA_USR
      9181**DCL      9476--REDEF
G$UHJIT.ISA_USR.P$$
      9256**DCL      9256--REDEF
G$UHJIT.NATSAP$
      9886**DCL     10854<<ASSIGN
G$UHJIT.TSA_CP.ISA.P$$
     10463**DCL     10463--REDEF
G$UHJIT.TSA_CP.P$$
     10334**DCL     10334--REDEF   10335--REDEF
G$UHJIT.TSA_DB.ISA.P$$
     10075**DCL     10075--REDEF
G$UHJIT.TSA_DB.P$$
      9946**DCL      9946--REDEF    9947--REDEF
G$UHJIT.TSA_RTT.P$$
     10709**DCL     10709--REDEF   10710--REDEF
G$UHJIT.TSA_USR.ISA.P$$
      9665**DCL      9665--REDEF
G$UHJIT.TSA_USR.P$$
      9536**DCL      9536--REDEF    9537--REDEF
G$UHJIT$
     10830**DCL      7758--IMP-PTR 10840>>IF      10840>>IF      10851>>IF      10854>>ASSIGN
G$USER.MISC
PL6.E3A0      #002=GHS$REG File=GHS$SCHD.:E05TSI                                 TUE 07/29/97 21:40 Page:156  
       821**DCL       821--REDEF
G$USER.UHJITPP
       823**DCL     10851>>IF
G$USRT$
     10833**DCL       820--IMP-PTR 10851>>IF
GHH$LEV
     10837**DCL-ENT 10857--CALL    10877--CALL
GHH$UNLOCK
       636**DCL-ENT 10864--CALL
GHR$MON
     10838**DCL-ENT 10848--CALL
GHS$REGUSR
     10835**DCL-ENT 10850--CALL
G_SCHDGATE
       860**DCL     10864<>CALL
NO_BLOCK
     10856**LABEL   10850--CALLALT
PARM2
        40**DCL        37--PROC    10850<>CALL    10873--ENTRY
REGDMN
     10792**DCL     10842<>CALL    10853<>CALL    10867<>CALL
SCREECH
     10836**DCL-ENT 10842--CALL    10853--CALL    10867--CALL
TRIG_SCHD
       845**DCL     10857<>CALL    10877<>CALL
USR
     10828**DCL     10849<<ASSIGN  10850<>CALL

PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:157  
     1007        1        /*T***********************************************************/
     1008        2        /*T*                                                         */
     1009        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1010        4        /*T*                                                         */
     1011        5        /*T***********************************************************/
     1012        6        /*P*
     1013        7             NAME: GHS$XSCHD
     1014        8             PURPOSE:
     1015        9                   To select and prepare a user for execution.
     1016       10             DESCRIPTION:
     1017       11                    This procedure obtains the next Current User from the
     1018       12                    Scheduler state queues and prepares him for execution.
     1019       13        */
     1020       14        /*F*
     1021       15             NAME: GHS$XSCHD
     1022       16             PURPOSE:
     1023       17                    To select and prepare a user for execution.
     1024       18             DESCRIPTION:
     1025       19                    This procedure searches the Executable state queues for
     1026       20                    the highest priority user ready for execution, sets the
     1027       21                    monitor current user parameters and maps onto the users
     1028       22                    UHJIT segment.  If a user is not found, the Idle loop
     1029       23                    is entered until a state change occurs and the selection
     1030       24                    procedure is reexecuted.
     1031       25        */
     1032       26        /*D*
     1033       27             NAME: GHS$XSCHD
     1034       28             CALL:
     1035       29                   CALL GHS$XSCHD;
     1036       30             PARAMETERS:
     1037       31                    There are no parameters passed in the call to this procedure.
     1038       32             INTERFACE:
     1039       33                    This is the Scheduler Interrupt Level service procedure.  It
     1040       34                    is called by an L6ASM interrupt entry routine and does not
     1041       35                    call any other procedures.  The Scheduler Interrupt Level is
     1042       36                    triggered by the Real Time Clock Interrupt service if the
     1043       37                    current user is to be quantum ended, and by GHS$REG when
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:158  
     1044       38                    the current user is to be parked.  In either case, the
     1045       39                    state of the previous current user has been changed before
     1046       40                    entering this procedure.
     1047       41             DESCRIPTION:
     1048       42                    The head of each of the Executable state queues, %GH_SC1
     1049       43                    through %GH_SC11 is tested for a non zero user number.
     1050       44                    When one is found that user becomes the Current User.
     1051       45                    The monitor parameters that define the current user,
     1052       46                    are set and the users UHJIT segment is activated in the
     1053       47                    MMU.  The procedure then returns.
     1054       48
     1055       49                    If none of the Executable state queues contains a user,
     1056       50                    the idle loop is entered.  This loop tests a scheduler
     1057       51                    event flag that is incremented when a user is placed in
     1058       52                    an Executable state queue.  When this occurs, the state
     1059       53                    queues are searched again.
     1060       54        */
     1061       55        /*X*             */
     1062       56
     1063       57        GHS$XSCHD: PROC ALTRET;
     1064       58
     1065       59        %INCLUDE GH_SCHD_E;
     1066      155        %INCLUDE GH_SCHD_M;
     1067      299        %INCLUDE GH_GATE_M;
     1068      340 S      %INCLUDE GH_LCP6_M;
     1069      341        %INCLUDE GH_HARDWARE_M;
     1070      439 S      %INCLUDE GU_LCP6_M;
     1071      440        %INCLUDE G_HJIT_M;
     1072      585        %INCLUDE GM_VIRTUAL_E;
     1073      795        %INCLUDE SS_SCODE_C;
     1074      815
     1075      816    1   DCL I UBIN;                             /* Temp                               */
     1076      817    1   DCL J UBIN;                             /* State index                        */
     1077      818    1   DCL K UBIN;                             /* Temp user number                   */
     1078      819    1   DCL EVFLG UBIN;                         /* Temp event flag                    */
     1079      820    1   DCL PRIODEC UBIN STATIC INIT(1);        /* Priority decrement step            */
     1080      821
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:159  
     1081      822    1   DCL G$USRT$ PTR SYMREF;
     1082      823    1   DCL GH_EVF UBIN SYMREF;
     1083      824    1   DCL GH_HQ(0:0) UBIN SYMREF;
     1084      825    1   DCL GH_HIR SBIN SYMREF;
     1085      826    1   DCL GH_CUP UBIN SYMREF;
     1086      827    1   DCL G$UHJIT$ PTR SYMREF;
     1087      828    1   DCL G$MHJIT$ PTR SYMREF;
     1088      829    1   DCL G$LOW_MEM$ PTR SYMREF;
     1089      830    1   DCL GH_LEV_SUS_INH UBIN SYMREF;
     1090      831    1   DCL GH_TRIG_SCHD UBIN SYMREF;
     1091      832    1   DCL G_CPUSTATE(0:3) UBIN SYMREF;
     1092      833    1   DCL G_DIS SBIN SYMREF;
     1093      834    1   DCL G$JIT$ PTR SYMREF;
     1094      835
     1095      836
     1096      837        %G$USER;
     1097      848        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
     1098      859        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
     1099     7733        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
     1100    10707        %G$ASDT;
     1101    10736        %G$LOW_MEM (STCLASS="BASED(G$LOW_MEM$)");
     1102    10785        %GATE (FPTN=G_SCHDGATE,STCLASS=SYMREF);
     1103    10804        %VLP_SCODE (FPTN=NATSERR,ERR#=%S$NATSAP,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
     1104    10805                    FCG=GH,MID=S,MON='1'B);
     1105    10866
     1106    10867    1   DCL GHH$ASD ENTRY(2);
     1107    10868    1   DCL GHH$HLT ENTRY;
     1108    10869    1   DCL GHS$CHS ENTRY(1) ALTRET;
     1109    10870    1   DCL GHS$CHSE ENTRY(1) ALTRET;
     1110    10871    1   DCL GHR$MON ENTRY;
     1111    10872    1   DCL GHR$IDL ENTRY;
     1112    10873    1   DCL GHH$LEV ENTRY(1);
     1113    10874    1   DCL GHS$MONTIMRWU ENTRY;
     1114    10875    1   DCL SCREECH ENTRY(1);
     1115    10876        /*                                                                    */
     1116    10877        %EJECT;
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:160  
     1117    10878    1           G_CPUSTATE(G$MHJIT.PNO) = %G_ROCKING#;
     1118    10879    2           IF G$MHJIT.CUN ~= 0 THEN DO;
     1119    10880    2              CALL GHS$CHSE(G$MHJIT.CUN);  /* Quantum end current user           */
     1120    10881    2              G$UHJIT.NATSAP$=G$LOW_MEM.NATSAP1$;
     1121    10882    2              G$LOW_MEM.NATSAP1$=ADDR(G$MHJIT.TSA_MON);
     1122    10883    2              END;
     1123    10884    1           CALL GHS$MONTIMRWU;
     1124    10885
     1125    10886                %LOCK (G=G_SCHDGATE);
     1126    10893
     1127    10894    1           EVFLG = GH_EVF;
     1128    10895
     1129    10896    2           DO J = 1 TO %GH_CU - 1;         /* Run the Executable Queues          */
     1130    10897    2              K = GH_HQ (J);
     1131    10898    3              IF K ~= 0 THEN DO;
     1132    10899    3                 G$MHJIT.CU$ = ADDR (G$USER (K));
     1133    10900    3                 G$MHJIT.CUN=K;            /* Make him Current User              */
     1134    10901    3                 GH_HIR=GH_HIR-1;          /* One less executable user waiting*/
     1135    10902    3                 CALL GHS$CHS(K);          /* Make his state Current User        */
     1136    10903    3                 GH_CUP=G$MHJIT.CU$->G$U.PRIO; /* Set current user priority      */
     1137    10904    4                 IF GH_CUP > G$MHJIT.CU$->G$U.PRIOB THEN DO;
     1138    10905                                                /* If not at base priority            */
     1139    10906    4                    GH_CUP = GH_CUP - PRIODEC; /* bump him down a notch          */
     1140    10907    4                    G$MHJIT.CU$->G$U.PRIO = GH_CUP;
     1141    10908    4                    END;
     1142    10909
     1143    10910    3                 G$MHJIT.ASDT_MON.UMHJIT.SIZE = (SIZEW(G$UHJIT)-1)/256;
     1144    10911    3                 G$MHJIT.ASDT_MON.UMHJIT.BASE = G$MHJIT.CU$->G$U.UHJITPP;
     1145    10912    3                 CALL GHH$ASD (G$UHJIT$,G$MHJIT.ASDT_MON.UMHJIT);
     1146    10913    3                 IF G$UHJIT.NATSAP$=G$UHJIT.ISA_USR.TSAP$ THEN
     1147    10914    3                    CALL SCREECH (NATSERR);
     1148    10915        /*S*  SCREECH_CODE: GHS-S$NATSAP
     1149    10916              TYPE: SCREECH
     1150    10917              MESSAGE: NATSAP1 incorrect at execution schedule.
     1151    10918                                                                           */
     1152    10919    3                 G$LOW_MEM.NATSAP1$=G$UHJIT.NATSAP$;
     1153    10920                      %UNLOCK (G=G_SCHDGATE);
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:161  
     1154    10927    3                 RETURN;
     1155    10928    3                 END;
     1156    10929    2              END;
     1157    10930
     1158    10931                %UNLOCK (G=G_SCHDGATE);
     1159    10938    1           CALL GHH$LEV (GH_LEV_SUS_INH);
     1160    10939
     1161    10940    1           IF EVFLG ~= GH_EVF THEN
     1162    10941    1              CALL GHH$LEV (GH_TRIG_SCHD);
     1163    10942
     1164    10943    1           G_DIS = 0;                      /* Don't allow un-inhibit in GHR$IDL*/
     1165    10944    1           G$LOW_MEM.RTC_CURR = 16;        /* Let RTC go off every UTS tick      */
     1166    10945        /*N* The previous line could be improved some.  Figure when the next
     1167    10946             wake-up needs to occur. */
     1168    10947    1           CALL GHR$IDL;
     1169    10948    1           G_DIS=-1;
     1170    10949    1           G_CPUSTATE(G$MHJIT.PNO) = %G_IDLE#;
     1171    10950    1           G$MHJIT.ASDT_MON.UMHJIT.BASE = G$MHJIT.ASDT_MON.MHJIT.BASE;
     1172    10951    1           CALL GHH$ASD (G$UHJIT$,G$MHJIT.ASDT_MON.UMHJIT);
     1173    10952    1           ALTRETURN;
     1174    10953    1   END;
     1175    10954        %EOD;

PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:162  
--  Include file information  --

   SS_SCODE_C.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$XSCHD.

   Procedure GHS$XSCHD requires 292 words for executable code.
   Procedure GHS$XSCHD requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:163  

 Object Unit name= GHS$XSCHD                                  File name= GHS$SCHD.:E05TOU
 UTS= JUL 29 '97 21:41:16.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     1      1  GHS$XSCHD
    1  RoData even  UTS      3      3  GHS$XSCHD
    2   Proc  even  none   292    124  GHS$XSCHD
    3  RoData even  none     8      8  GHS$XSCHD

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        0  GHS$XSCHD

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHS$CHSE
         yes           Std       0 GHS$MONTIMRWU
         yes           Std       2 GHH$ASD
         yes           Std       1 SCREECH
 yes     yes           Std       1 GHH$UNLOCK
         yes           Std       1 GHH$LEV
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 GHS$CHS
         yes           Std       0 GHR$IDL
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:164  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$USRT$                               GH_EVF                                GH_HQ
     GH_HIR                                GH_CUP                                G$UHJIT$
     G$MHJIT$                              G$LOW_MEM$                            GH_LEV_SUS_INH
     GH_TRIG_SCHD                          G_CPUSTATE                            G_DIS
     G_SCHDGATE                       r    G$ROS$
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:165  


     1007        1        /*T***********************************************************/
     1008        2        /*T*                                                         */
     1009        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1010        4        /*T*                                                         */
     1011        5        /*T***********************************************************/
     1012        6        /*P*
     1013        7             NAME: GHS$XSCHD
     1014        8             PURPOSE:
     1015        9                   To select and prepare a user for execution.
     1016       10             DESCRIPTION:
     1017       11                    This procedure obtains the next Current User from the
     1018       12                    Scheduler state queues and prepares him for execution.
     1019       13        */
     1020       14        /*F*
     1021       15             NAME: GHS$XSCHD
     1022       16             PURPOSE:
     1023       17                    To select and prepare a user for execution.
     1024       18             DESCRIPTION:
     1025       19                    This procedure searches the Executable state queues for
     1026       20                    the highest priority user ready for execution, sets the
     1027       21                    monitor current user parameters and maps onto the users
     1028       22                    UHJIT segment.  If a user is not found, the Idle loop
     1029       23                    is entered until a state change occurs and the selection
     1030       24                    procedure is reexecuted.
     1031       25        */
     1032       26        /*D*
     1033       27             NAME: GHS$XSCHD
     1034       28             CALL:
     1035       29                   CALL GHS$XSCHD;
     1036       30             PARAMETERS:
     1037       31                    There are no parameters passed in the call to this procedure.
     1038       32             INTERFACE:
     1039       33                    This is the Scheduler Interrupt Level service procedure.  It
     1040       34                    is called by an L6ASM interrupt entry routine and does not
     1041       35                    call any other procedures.  The Scheduler Interrupt Level is
     1042       36                    triggered by the Real Time Clock Interrupt service if the
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:166  
     1043       37                    current user is to be quantum ended, and by GHS$REG when
     1044       38                    the current user is to be parked.  In either case, the
     1045       39                    state of the previous current user has been changed before
     1046       40                    entering this procedure.
     1047       41             DESCRIPTION:
     1048       42                    The head of each of the Executable state queues, %GH_SC1
     1049       43                    through %GH_SC11 is tested for a non zero user number.
     1050       44                    When one is found that user becomes the Current User.
     1051       45                    The monitor parameters that define the current user,
     1052       46                    are set and the users UHJIT segment is activated in the
     1053       47                    MMU.  The procedure then returns.
     1054       48
     1055       49                    If none of the Executable state queues contains a user,
     1056       50                    the idle loop is entered.  This loop tests a scheduler
     1057       51                    event flag that is incremented when a user is placed in
     1058       52                    an Executable state queue.  When this occurs, the state
     1059       53                    queues are searched again.
     1060       54        */
     1061       55        /*X*             */
     1062       56
     1063       57        GHS$XSCHD: PROC ALTRET;

     57   2 000000  D380 0000 0000  xent GHS$XSCHD       LNJ,B5   X6A_AUTO_0
          2 000003       000C 0000                       DC       12,0

     1064       58
     1065       59        %INCLUDE GH_SCHD_E;
     1066      155        %INCLUDE GH_SCHD_M;
     1067      299        %INCLUDE GH_GATE_M;
     1068      340 S      %INCLUDE GH_LCP6_M;
     1069      341        %INCLUDE GH_HARDWARE_M;
     1070      439 S      %INCLUDE GU_LCP6_M;
     1071      440        %INCLUDE G_HJIT_M;
     1072      585        %INCLUDE GM_VIRTUAL_E;
     1073      795        %INCLUDE SS_SCODE_C;
     1074      815
     1075      816    1   DCL I UBIN;                             /* Temp                               */
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:167  
     1076      817    1   DCL J UBIN;                             /* State index                        */
     1077      818    1   DCL K UBIN;                             /* Temp user number                   */
     1078      819    1   DCL EVFLG UBIN;                         /* Temp event flag                    */
     1079      820    1   DCL PRIODEC UBIN STATIC INIT(1);        /* Priority decrement step            */
     1080      821
     1081      822    1   DCL G$USRT$ PTR SYMREF;
     1082      823    1   DCL GH_EVF UBIN SYMREF;
     1083      824    1   DCL GH_HQ(0:0) UBIN SYMREF;
     1084      825    1   DCL GH_HIR SBIN SYMREF;
     1085      826    1   DCL GH_CUP UBIN SYMREF;
     1086      827    1   DCL G$UHJIT$ PTR SYMREF;
     1087      828    1   DCL G$MHJIT$ PTR SYMREF;
     1088      829    1   DCL G$LOW_MEM$ PTR SYMREF;
     1089      830    1   DCL GH_LEV_SUS_INH UBIN SYMREF;
     1090      831    1   DCL GH_TRIG_SCHD UBIN SYMREF;
     1091      832    1   DCL G_CPUSTATE(0:3) UBIN SYMREF;
     1092      833    1   DCL G_DIS SBIN SYMREF;
     1093      834    1   DCL G$JIT$ PTR SYMREF;
     1094      835
     1095      836
     1096      837        %G$USER;
     1097      848        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
     1098      859        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
     1099     7733        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
     1100    10707        %G$ASDT;
     1101    10736        %G$LOW_MEM (STCLASS="BASED(G$LOW_MEM$)");
     1102    10785        %GATE (FPTN=G_SCHDGATE,STCLASS=SYMREF);
     1103    10804        %VLP_SCODE (FPTN=NATSERR,ERR#=%S$NATSAP,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
     1104    10805                    FCG=GH,MID=S,MON='1'B);
     1105    10866
     1106    10867    1   DCL GHH$ASD ENTRY(2);
     1107    10868    1   DCL GHH$HLT ENTRY;
     1108    10869    1   DCL GHS$CHS ENTRY(1) ALTRET;
     1109    10870    1   DCL GHS$CHSE ENTRY(1) ALTRET;
     1110    10871    1   DCL GHR$MON ENTRY;
     1111    10872    1   DCL GHR$IDL ENTRY;
     1112    10873    1   DCL GHH$LEV ENTRY(1);
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:168  
     1113    10874    1   DCL GHS$MONTIMRWU ENTRY;
     1114    10875    1   DCL SCREECH ENTRY(1);
     1115    10876        /*                                                                    */
     1116    10877        %EJECT;
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:169  
     1117    10878    1           G_CPUSTATE(G$MHJIT.PNO) = %G_ROCKING#;

  10878   2 000005  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          2 000008  B846 0354                            LDR,R3   852,B6
          2 00000A  6C01                                 LDV,R6   1
          2 00000B  EF30 0000 0000  xsym                 STR,R6   G_CPUSTATE,R3

     1118    10879    2           IF G$MHJIT.CUN ~= 0 THEN DO;

  10879   2 00000E  D846 0351                            LDR,R5   849,B6
          2 000010  5901 001E                            BEZ,R5   s:10884,PREL

     1119    10880    2              CALL GHS$CHSE(G$MHJIT.CUN);  /* Quantum end current user           */

  10880   2 000012  DBC6 0351                            LAB,B5   849,B6
          2 000014  DFC7 0008                            STB,B5   EVFLG+1,AUTO
          2 000016  BBC7 0008                            LAB,B3   EVFLG+1,AUTO
          2 000018  CBF0 0100                            LAB,B4   256,IMO
          2 00001A  E380 0000 0000  xent                 LNJ,B6   GHS$CHSE
          2 00001D       0001                            DC       s:10881,PREL

     1120    10881    2              G$UHJIT.NATSAP$=G$LOW_MEM.NATSAP1$;

  10881   2 00001E  EC80 0000 0000  xsym                 LDB,B6   G$LOW_MEM$
          2 000021  DCC6 000E                            LDB,B5   14,B6
          2 000023  CC80 0000 0000  xsym                 LDB,B4   G$UHJIT$
          2 000026  DFC4 00FD                            STB,B5   253,B4

     1121    10882    2              G$LOW_MEM.NATSAP1$=ADDR(G$MHJIT.TSA_MON);

  10882   2 000028  BC80 0000 0000  xsym                 LDB,B3   G$MHJIT$
          2 00002B  ABC3 0087                            LAB,B2   135,B3
          2 00002D  AFC6 000E                            STB,B2   14,B6

     1122    10883    2              END;

     1123    10884    1           CALL GHS$MONTIMRWU;
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:170  

  10884   2 00002F  CBF0 0000                            LAB,B4   0,IMO
          2 000031  E380 0000 0000  xent                 LNJ,B6   GHS$MONTIMRWU
          2 000034       0001                            DC       s:10891,PREL

     1124    10885
     1125    10886                %LOCK (G=G_SCHDGATE);

  10891   2 000035  BB80 0000 0000  03                   LAB,B3   0
          2 000038  CBF0 0100                            LAB,B4   256,IMO
          2 00003A  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          2 00003D       0001                            DC       s:10894,PREL

     1126    10893
     1127    10894    1           EVFLG = GH_EVF;

  10894   2 00003E  E800 0000 0000  xsym                 LDR,R6   GH_EVF
          2 000041  EF47 0007                            STR,R6   EVFLG,AUTO

     1128    10895
     1129    10896    2           DO J = 1 TO %GH_CU - 1;         /* Run the Executable Queues          */

  10896   2 000043  5C01                                 LDV,R5   1
          2 000044  DF47 0005                            STR,R5   J,AUTO
          2 000046  0F81 0082                            B        s:10929+2,PREL

     1130    10897    2              K = GH_HQ (J);

  10897   2 000048  B847 0005                            LDR,R3   J,AUTO
          2 00004A  E830 0000 0000  xsym                 LDR,R6   GH_HQ,R3
          2 00004D  EF47 0006                            STR,R6   K,AUTO

     1131    10898    3              IF K ~= 0 THEN DO;

  10898   2 00004F  6901 0077                            BEZ,R6   s:10929,PREL

     1132    10899    3                 G$MHJIT.CU$ = ADDR (G$USER (K));
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:171  

  10899   2 000051  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          2 000054  A856                                 LDR,R2   R6
          2 000055  2F18                                 MLV,R2   24
          2 000056  DBA6                                 LAB,B5   ,B6,R2
          2 000057  CC80 0000 0000  xsym                 LDB,B4   G$MHJIT$
          2 00005A  DFC4 0352                            STB,B5   850,B4

     1133    10900    3                 G$MHJIT.CUN=K;            /* Make him Current User              */

  10900   2 00005C  EF44 0351                            STR,R6   849,B4

     1134    10901    3                 GH_HIR=GH_HIR-1;          /* One less executable user waiting*/

  10901   2 00005E  8880 0000 0000  xsym                 DEC      GH_HIR

     1135    10902    3                 CALL GHS$CHS(K);          /* Make his state Current User        */

  10902   2 000061  BBC7 0006                            LAB,B3   K,AUTO
          2 000063  BFC7 0008                            STB,B3   EVFLG+1,AUTO
          2 000065  BBC7 0008                            LAB,B3   EVFLG+1,AUTO
          2 000067  CBF0 0100                            LAB,B4   256,IMO
          2 000069  E380 0000 0000  xent                 LNJ,B6   GHS$CHS
          2 00006C       0001                            DC       s:10903,PREL

     1136    10903    3                 GH_CUP=G$MHJIT.CU$->G$U.PRIO; /* Set current user priority      */

  10903   2 00006D  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          2 000070  DCC6 0352                            LDB,B5   850,B6
          2 000072  E845 000F                            LDR,R6   15,B5
          2 000074  EF00 0000 0000  xsym                 STR,R6   GH_CUP

     1137    10904    4                 IF GH_CUP > G$MHJIT.CU$->G$U.PRIOB THEN DO;

  10904   2 000077  E945 0010                            CMR,R6   16,B5
          2 000079  0381 0009                            BLE      s:10910,PREL

PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:172  
     1138    10905                                                /* If not at base priority            */
     1139    10906    4                    GH_CUP = GH_CUP - PRIODEC; /* bump him down a notch          */

  10906   2 00007B  E200 0000 0000  00                   SUB,R6   PRIODEC
          2 00007E  EF00 0000 0000  xsym                 STR,R6   GH_CUP

     1140    10907    4                    G$MHJIT.CU$->G$U.PRIO = GH_CUP;

  10907   2 000081  EF45 000F                            STR,R6   15,B5

     1141    10908    4                    END;

     1142    10909
     1143    10910    3                 G$MHJIT.ASDT_MON.UMHJIT.SIZE = (SIZEW(G$UHJIT)-1)/256;

  10910   2 000083  5C01                                 LDV,R5   1
          2 000084  DAC6 000B                            SRM,R5,'01FF'X    11,B6
          2 000086       01FF

     1144    10911    3                 G$MHJIT.ASDT_MON.UMHJIT.BASE = G$MHJIT.CU$->G$U.UHJITPP;

  10911   2 000087  DCC6 0352                            LDB,B5   850,B6
          2 000089  C845 0012                            LDR,R4   18,B5
          2 00008B  CAC6 000A                            SRM,R4,'7FFF'X    10,B6
          2 00008D       7FFF

     1145    10912    3                 CALL GHH$ASD (G$UHJIT$,G$MHJIT.ASDT_MON.UMHJIT);

  10912   2 00008E  CBC6 000A                            LAB,B4   10,B6
          2 000090  CFC7 000A                            STB,B4   EVFLG+3,AUTO
          2 000092  BB80 0000 0000  xsym                 LAB,B3   G$UHJIT$
          2 000095  BFC7 0008                            STB,B3   EVFLG+1,AUTO
          2 000097  BBC7 0008                            LAB,B3   EVFLG+1,AUTO
          2 000099  CBF0 0200                            LAB,B4   512,IMO
          2 00009B  E380 0000 0000  xent                 LNJ,B6   GHH$ASD
          2 00009E       0001                            DC       s:10913,PREL

PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:173  
     1146    10913    3                 IF G$UHJIT.NATSAP$=G$UHJIT.ISA_USR.TSAP$ THEN

  10913   2 00009F  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          2 0000A2  DCC6 00FD                            LDB,B5   253,B6
          2 0000A4  DDC6 007F                            CMB,B5   127,B6
          2 0000A6  0981 000A                            BNE      s:10919,PREL

     1147    10914    3                    CALL SCREECH (NATSERR);

  10914   2 0000A8  BB80 0000 0002  03                   LAB,B3   +2
          2 0000AB  CBF0 0100                            LAB,B4   256,IMO
          2 0000AD  E380 0000 0000  xent                 LNJ,B6   SCREECH
          2 0000B0       0001                            DC       s:10919,PREL

     1148    10915        /*S*  SCREECH_CODE: GHS-S$NATSAP
     1149    10916              TYPE: SCREECH
     1150    10917              MESSAGE: NATSAP1 incorrect at execution schedule.
     1151    10918                                                                           */
     1152    10919    3                 G$LOW_MEM.NATSAP1$=G$UHJIT.NATSAP$;

  10919   2 0000B1  EC80 0000 0000  xsym                 LDB,B6   G$UHJIT$
          2 0000B4  DCC6 00FD                            LDB,B5   253,B6
          2 0000B6  CC80 0000 0000  xsym                 LDB,B4   G$LOW_MEM$
          2 0000B9  DFC4 000E                            STB,B5   14,B4

     1153    10920                      %UNLOCK (G=G_SCHDGATE);

  10925   2 0000BB  BB80 0000 0000  03                   LAB,B3   0
          2 0000BE  CBF0 0100                            LAB,B4   256,IMO
          2 0000C0  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          2 0000C3       0001                            DC       s:10927,PREL

     1154    10927    3                 RETURN;

  10927   2 0000C4  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1155    10928    3                 END;
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:174  
     1156    10929    2              END;

  10929   2 0000C7  8AC7 0005                            INC      J,AUTO
          2 0000C9  E847 0005                            LDR,R6   J,AUTO
          2 0000CB  6D0B                                 CMV,R6   11
          2 0000CC  0381 FF7B                            BLE      s:10897,PREL

     1157    10930
     1158    10931                %UNLOCK (G=G_SCHDGATE);

  10936   2 0000CE  BB80 0000 0000  03                   LAB,B3   0
          2 0000D1  CBF0 0100                            LAB,B4   256,IMO
          2 0000D3  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          2 0000D6       0001                            DC       s:10938,PREL

     1159    10938    1           CALL GHH$LEV (GH_LEV_SUS_INH);

  10938   2 0000D7  BB80 0000 0004  03                   LAB,B3   +4
          2 0000DA  CBF0 0100                            LAB,B4   256,IMO
          2 0000DC  E380 0000 0000  xent                 LNJ,B6   GHH$LEV
          2 0000DF       0001                            DC       s:10940,PREL

     1160    10939
     1161    10940    1           IF EVFLG ~= GH_EVF THEN

  10940   2 0000E0  E847 0007                            LDR,R6   EVFLG,AUTO
          2 0000E2  E900 0000 0000  xsym                 CMR,R6   GH_EVF
          2 0000E5  0901 000A                            BE       s:10943,PREL

     1162    10941    1              CALL GHH$LEV (GH_TRIG_SCHD);

  10941   2 0000E7  BB80 0000 0006  03                   LAB,B3   +6
          2 0000EA  CBF0 0100                            LAB,B4   256,IMO
          2 0000EC  E380 0000 0000  xent                 LNJ,B6   GHH$LEV
          2 0000EF       0001                            DC       s:10943,PREL

     1163    10942
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:175  
     1164    10943    1           G_DIS = 0;                      /* Don't allow un-inhibit in GHR$IDL*/

  10943   2 0000F0  8700 0000 0000  xsym                 CL       G_DIS

     1165    10944    1           G$LOW_MEM.RTC_CURR = 16;        /* Let RTC go off every UTS tick      */

  10944   2 0000F3  EC80 0000 0000  xsym                 LDB,B6   G$LOW_MEM$
          2 0000F6  6C10                                 LDV,R6   16
          2 0000F7  EF46 0015                            STR,R6   21,B6

     1166    10945        /*N* The previous line could be improved some.  Figure when the next
     1167    10946             wake-up needs to occur. */
     1168    10947    1           CALL GHR$IDL;

  10947   2 0000F9  CBF0 0000                            LAB,B4   0,IMO
          2 0000FB  E380 0000 0000  xent                 LNJ,B6   GHR$IDL
          2 0000FE       0001                            DC       s:10948,PREL

     1169    10948    1           G_DIS=-1;

  10948   2 0000FF  8900 0000 0000  xsym                 LBT,'FFFF'X       G_DIS
  10948   2 000102       FFFF

     1170    10949    1           G_CPUSTATE(G$MHJIT.PNO) = %G_IDLE#;

  10949   2 000103  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          2 000106  B846 0354                            LDR,R3   852,B6
          2 000108  8730 0000 0000  xsym                 CL       G_CPUSTATE,R3

     1171    10950    1           G$MHJIT.ASDT_MON.UMHJIT.BASE = G$MHJIT.ASDT_MON.MHJIT.BASE;

  10950   2 00010B  E846 000C                            LDR,R6   12,B6
          2 00010D  EAC6 000A                            SRM,R6,'7FFF'X    10,B6
          2 00010F       7FFF

     1172    10951    1           CALL GHH$ASD (G$UHJIT$,G$MHJIT.ASDT_MON.UMHJIT);

PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:176  
  10951   2 000110  DBC6 000A                            LAB,B5   10,B6
          2 000112  DFC7 000A                            STB,B5   EVFLG+3,AUTO
          2 000114  CB80 0000 0000  xsym                 LAB,B4   G$UHJIT$
          2 000117  CFC7 0008                            STB,B4   EVFLG+1,AUTO
          2 000119  BBC7 0008                            LAB,B3   EVFLG+1,AUTO
          2 00011B  CBF0 0200                            LAB,B4   512,IMO
          2 00011D  E380 0000 0000  xent                 LNJ,B6   GHH$ASD
          2 000120       0001                            DC       s:10952,PREL

     1173    10952    1           ALTRETURN;

  10952   2 000121  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
     1174    10953    1   END;
     1175    10954        %EOD;

PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:177  
--  Include file information  --

   SS_SCODE_C.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$XSCHD.
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:178  

 **** Variables and constants ****

  ****  Section 000  Data  GHS$XSCHD

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 PRIODEC

  ****  Section 001 RoData GHS$XSCHD

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 NATSERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w UBIN(16)    r     1 EVFLG                      5-0-0/w UBIN(16)    r     1 J
     6-0-0/w UBIN(16)    r     1 K

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$LOW_MEM$                 0-0-0/w PTR         r     1 G$MHJIT$
     0-0-0/w PTR         r     1 G$UHJIT$                   0-0-0/w PTR         r     1 G$USRT$
     0-0-0/w UBIN(16)    r     1 GH_CUP                     0-0-0/w UBIN(16)    r     1 GH_EVF
     0-0-0/w SBIN(16)    r     1 GH_HIR                     0-0-0/w UBIN(16)    r     1 GH_HQ(0:0)
     0-0-0/w UBIN(16)    r     1 GH_LEV_SUS_INH             0-0-0/w UBIN(16)    r     1 GH_TRIG_SCHD
     0-0-0/w UBIN(16)    r     1 G_CPUSTATE(0:3)
     0-0-0/w SBIN(16)    r     1 G_DIS                      0-0-0/w STRC(48)    r     1 G_SCHDGATE

PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:179  
  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(4096)  r     1 G$LOW_MEM                  0-0-0/w STRC(27232) r     1 G$MHJIT
     0-0-0/w STRC(384)   r     1 G$U                        0-0-0/w STRC(6480)  r     1 G$UHJIT
     0-0-0/w STRC(384)   r     1 G$USER(0:0)


   Procedure GHS$XSCHD requires 292 words for executable code.
   Procedure GHS$XSCHD requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:180  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:181  
          MINI XREF LISTING

EVFLG
       819**DCL     10894<<ASSIGN  10940>>IF
G$LOW_MEM.IV.IL$
     10778**DCL     10778--REDEF
G$LOW_MEM.IV.INT.I#00$
     10778**DCL     10778--REDEF
G$LOW_MEM.IV.INT.I#01$
     10778**DCL     10778--REDEF
G$LOW_MEM.IV.INT.I#02$
     10779**DCL     10779--REDEF
G$LOW_MEM.IV.INT.I#03$
     10779**DCL     10779--REDEF
G$LOW_MEM.IV.INT.I#04$
     10779**DCL     10780--REDEF
G$LOW_MEM.IV.INT.I#05$
     10780**DCL     10780--REDEF
G$LOW_MEM.IV.INT.I#61$
     10781**DCL     10781--REDEF
G$LOW_MEM.IV.INT.I#62$
     10781**DCL     10781--REDEF
G$LOW_MEM.IV.INT.I#63$
     10781**DCL     10781--REDEF
G$LOW_MEM.NATSAP1$
     10741**DCL     10881>>ASSIGN  10882<<ASSIGN  10919<<ASSIGN
G$LOW_MEM.RTC_CURR
     10742**DCL     10944<<ASSIGN
G$LOW_MEM.TV.T#01$
     10766**DCL     10766--REDEF
G$LOW_MEM.TV.T#02$
     10766**DCL     10766--REDEF
G$LOW_MEM.TV.T#03$
     10765**DCL     10765--REDEF
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:182  
G$LOW_MEM.TV.T#05$
     10765**DCL     10765--REDEF
G$LOW_MEM.TV.T#06$
     10764**DCL     10764--REDEF
G$LOW_MEM.TV.T#07$
     10764**DCL     10764--REDEF
G$LOW_MEM.TV.T#08$
     10763**DCL     10764--REDEF
G$LOW_MEM.TV.T#09$
     10763**DCL     10763--REDEF
G$LOW_MEM.TV.T#10$
     10763**DCL     10763--REDEF
G$LOW_MEM.TV.T#12$
     10762**DCL     10762--REDEF
G$LOW_MEM.TV.T#13$
     10762**DCL     10762--REDEF
G$LOW_MEM.TV.T#14$
     10761**DCL     10761--REDEF
G$LOW_MEM.TV.T#15$
     10761**DCL     10761--REDEF
G$LOW_MEM.TV.T#16$
     10760**DCL     10761--REDEF
G$LOW_MEM.TV.T#17$
     10760**DCL     10760--REDEF
G$LOW_MEM.TV.T#19$
     10759**DCL     10760--REDEF
G$LOW_MEM.TV.T#20$
     10759**DCL     10759--REDEF
G$LOW_MEM.TV.T#21$
     10759**DCL     10759--REDEF
G$LOW_MEM.TV.T#22$
     10758**DCL     10758--REDEF
G$LOW_MEM.TV.T#23$
     10758**DCL     10758--REDEF
G$LOW_MEM.TV.T#24$
     10757**DCL     10758--REDEF
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:183  
G$LOW_MEM.TV.T#25$
     10757**DCL     10757--REDEF
G$LOW_MEM.TV.T#26$
     10757**DCL     10757--REDEF
G$LOW_MEM.TV.T#27$
     10756**DCL     10756--REDEF
G$LOW_MEM.TV.T#28$
     10756**DCL     10756--REDEF
G$LOW_MEM.TV.T#29$
     10755**DCL     10756--REDEF
G$LOW_MEM.TV.T#30$
     10755**DCL     10755--REDEF
G$LOW_MEM.TV.T#31$
     10755**DCL     10755--REDEF
G$LOW_MEM.TV.T#32$
     10754**DCL     10754--REDEF
G$LOW_MEM.TV.T#33$
     10754**DCL     10754--REDEF
G$LOW_MEM$
       829**DCL     10741--IMP-PTR 10881>>ASSIGN  10882>>ASSIGN  10919>>ASSIGN  10944>>ASSIGN
G$MHJIT.ASDT_MON.MHJIT.BASE
      1042**DCL     10950>>ASSIGN
G$MHJIT.ASDT_MON.UMHJIT
      1018**DCL     10912<>CALL    10951<>CALL
G$MHJIT.ASDT_MON.UMHJIT.BASE
      1020**DCL     10911<<ASSIGN  10950<<ASSIGN
G$MHJIT.ASDT_MON.UMHJIT.SIZE
      1022**DCL     10910<<ASSIGN
G$MHJIT.CU$
      7204**DCL     10899<<ASSIGN  10903>>ASSIGN  10904>>IF      10907>>ASSIGN  10911>>ASSIGN
G$MHJIT.CUN
      7204**DCL     10879>>IF      10880<>CALL    10900<<ASSIGN
G$MHJIT.INTCON.HHJIT
      7338**DCL      7338--REDEF
G$MHJIT.INTCON.P$$
      7311**DCL      7311--REDEF
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:184  
G$MHJIT.ISA_BIGFOOT.P$$
      4256**DCL      4256--REDEF
G$MHJIT.ISA_DBINH.P$$
      5470**DCL      5470--REDEF
G$MHJIT.ISA_IDLE.P$$
      2351**DCL      2351--REDEF
G$MHJIT.ISA_LVL10.P$$
      5773**DCL      5773--REDEF
G$MHJIT.ISA_LVL11.P$$
      6076**DCL      6076--REDEF
G$MHJIT.ISA_LVL12.P$$
      6379**DCL      6379--REDEF
G$MHJIT.ISA_LVL5.P$$
      4559**DCL      4559--REDEF
G$MHJIT.ISA_OV.P$$
      3953**DCL      3953--REDEF
G$MHJIT.ISA_PFS.P$$
      3624**DCL      3624--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
      6986**DCL      6986--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
      4863**DCL      4863--REDEF
G$MHJIT.ISA_SATYR_TRN.P$$
      5167**DCL      5167--REDEF
G$MHJIT.ISA_SCHD.P$$
      6682**DCL      6682--REDEF
G$MHJIT.ISA_WDOG.P$$
      3732**DCL      3732--REDEF
G$MHJIT.PNO
      7204**DCL     10878>>ASSIGN  10949>>ASSIGN
G$MHJIT.TSA_DB.ISA.P$$
      2954**DCL      2954--REDEF
G$MHJIT.TSA_DB.P$$
      2825**DCL      2825--REDEF    2826--REDEF
G$MHJIT.TSA_HND.ISA.P$$
      7532**DCL      7532--REDEF
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:185  
G$MHJIT.TSA_HND.P$$
      7403**DCL      7403--REDEF    7404--REDEF
G$MHJIT.TSA_MON
      2407**DCL     10882--ASSIGN
G$MHJIT.TSA_MON.ISA.P$$
      2566**DCL      2566--REDEF
G$MHJIT.TSA_MON.P$$
      2437**DCL      2437--REDEF    2438--REDEF
G$MHJIT.TSA_OV.ISA.P$$
      3342**DCL      3342--REDEF
G$MHJIT.TSA_OV.P$$
      3213**DCL      3213--REDEF    3214--REDEF
G$MHJIT$
       828**DCL       876--IMP-PTR 10878>>ASSIGN  10879>>IF      10880>>CALL    10882>>ASSIGN  10899>>ASSIGN
     10900>>ASSIGN  10903>>ASSIGN  10904>>IF      10907>>ASSIGN  10910>>ASSIGN  10911>>ASSIGN  10911>>ASSIGN
     10912>>CALL    10949>>ASSIGN  10950>>ASSIGN  10950>>ASSIGN  10951>>CALL
G$U.MISC
       843**DCL       843--REDEF
G$U.PRIO
       845**DCL     10903>>ASSIGN  10907<<ASSIGN
G$U.PRIOB
       845**DCL     10904>>IF
G$U.UHJITPP
       845**DCL     10911>>ASSIGN
G$UHJIT
      7750**DCL     10910--ASSIGN
G$UHJIT.ISA_USR
      9173**DCL      9468--REDEF
G$UHJIT.ISA_USR.P$$
      9248**DCL      9248--REDEF
G$UHJIT.ISA_USR.TSAP$
      9175**DCL     10913>>IF
G$UHJIT.NATSAP$
      9878**DCL     10881<<ASSIGN  10913>>IF      10919>>ASSIGN
G$UHJIT.TSA_CP.ISA.P$$
     10455**DCL     10455--REDEF
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:186  
G$UHJIT.TSA_CP.P$$
     10326**DCL     10326--REDEF   10327--REDEF
G$UHJIT.TSA_DB.ISA.P$$
     10067**DCL     10067--REDEF
G$UHJIT.TSA_DB.P$$
      9938**DCL      9938--REDEF    9939--REDEF
G$UHJIT.TSA_RTT.P$$
     10701**DCL     10701--REDEF   10702--REDEF
G$UHJIT.TSA_USR.ISA.P$$
      9657**DCL      9657--REDEF
G$UHJIT.TSA_USR.P$$
      9528**DCL      9528--REDEF    9529--REDEF
G$UHJIT$
       827**DCL      7750--IMP-PTR 10881>>ASSIGN  10912<>CALL    10913>>IF      10913>>IF      10919>>ASSIGN
     10951<>CALL
G$USER
       853**DCL     10899--ASSIGN
G$USER.MISC
       854**DCL       854--REDEF
G$USRT$
       822**DCL       853--IMP-PTR 10899>>ASSIGN
GHH$ASD
     10867**DCL-ENT 10912--CALL    10951--CALL
GHH$LEV
     10873**DCL-ENT 10938--CALL    10941--CALL
GHH$LOCK
       339**DCL-ENT 10891--CALL
GHH$UNLOCK
       339**DCL-ENT 10925--CALL    10936--CALL
GHR$IDL
     10872**DCL-ENT 10947--CALL
GHS$CHS
     10869**DCL-ENT 10902--CALL
GHS$CHSE
     10870**DCL-ENT 10880--CALL
GHS$MONTIMRWU
PL6.E3A0      #003=GHS$XSCHD File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:41 Page:187  
     10874**DCL-ENT 10884--CALL
GH_CUP
       826**DCL     10903<<ASSIGN  10904>>IF      10906<<ASSIGN  10906>>ASSIGN  10907>>ASSIGN
GH_EVF
       823**DCL     10894>>ASSIGN  10940>>IF
GH_HIR
       825**DCL     10901<<ASSIGN  10901>>ASSIGN
GH_HQ
       824**DCL     10897>>ASSIGN
GH_LEV_SUS_INH
       830**DCL     10938<>CALL
GH_TRIG_SCHD
       831**DCL     10941<>CALL
G_CPUSTATE
       832**DCL     10878<<ASSIGN  10949<<ASSIGN
G_DIS
       833**DCL     10943<<ASSIGN  10948<<ASSIGN
G_SCHDGATE
     10797**DCL     10891<>CALL    10925<>CALL    10936<>CALL
J
       817**DCL     10896<<DOINDEX 10897>>ASSIGN
K
       818**DCL     10897<<ASSIGN  10898>>IF      10899>>ASSIGN  10900>>ASSIGN  10902<>CALL
NATSERR
     10832**DCL     10914<>CALL
PRIODEC
       820**DCL     10906>>ASSIGN
SCREECH
     10875**DCL-ENT 10914--CALL

PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:188  
     1176        1        /*T***********************************************************/
     1177        2        /*T*                                                         */
     1178        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1179        4        /*T*                                                         */
     1180        5        /*T***********************************************************/
     1181        6        /*F*
     1182        7             NAME: GHS$EVENT
     1183        8             PURPOSE:
     1184        9                   To add an item onto a user's Dolist.
     1185       10             DESCRIPTION:
     1186       11                    This procedure adds an entry onto a user's Dolist containing
     1187       12                    data passed in the parameter list.
     1188       13        */
     1189       14        /*D*
     1190       15             NAME: GHS$EVENT
     1191       16             CALL:
     1192       17                   CALL GHS$EVENT (User-number,
     1193       18                                   Domain,
     1194       19                                   ECC-subcode,
     1195       20                                   Event-id,
     1196       21                                   Error-code,
     1197       22                                   ECC-information,
     1198       23                                   Eventproc-entry);
     1199       24             PARAMETERS:
     1200       25                    User-number is the number of the user on whose Dolist the event
     1201       26                    entry is to be added.
     1202       27                    Domain is the number of the domain which is to receive the event.
     1203       28                    The three domains are, User, Command Processor and Debugger.
     1204       29                    ECC-subcode is an Exceptional Condition code number to indicate
     1205       30                    the type of event, e.g., I/O complete, M$CLOCK runout.
     1206       31                    Event-id is an identifier specified by the user requesting the
     1207       32                    service associated with this event.
     1208       33                    Error-code indicates any error condition that may have occured
     1209       34                    as a result of the service associated with this event.
     1210       35                    ECC-information is an array of data to be transmitted to the
     1211       36                    user when the event is reported.  The first word of the array
     1212       37                    contains a count of the number of words following in the array.
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:189  
     1213       38                    Eventproc-entry is an EPTR to a monitor procedure to be called
     1214       39                    during Dolist processing for the user.
     1215       40
     1216       41             INTERFACE:
     1217       42                    Dolist entries are defined in the G$DO and G$DOCONT macros
     1218       43                    found in the GH_SCHD_M Include File.
     1219       44             DESCRIPTION:
     1220       45                    An entry is obtained from the free Dolist list.  If an entry
     1221       46                    is not available, a screech occurs since this procedure may
     1222       47                    be called at interrupt level and its not possible to wait for
     1223       48                    a free entry.
     1224       49
     1225       50                    Information passed as parameters is moved to the DOlist entry.
     1226       51
     1227       52                    If the ECC-information array is larger than the space available
     1228       53                    in a Dolist entry, subsequent entries are obtained to contain
     1229       54                    the addtional information.
     1230       55
     1231       56                    The entries are added to the Dolist list of the specified user.
     1232       57                    If the user is in the Sleep state, %GH_W, a wakeup event is
     1233       58                    reported on him.
     1234       59
     1235       60        */
     1236       61
     1237       62        /*X*              */
     1238       63
     1239       64        GHS$EVENT: PROC(USR,DMAIN,ECCSC,EVID,ERRC,ECCI,EPTR$);
     1240       65
     1241       66
     1242       67        %INCLUDE GH_SCHD_M;
     1243      211        %INCLUDE GH_SCHD_E;
     1244      307        %INCLUDE GH_GATE_M;
     1245      348 S      %INCLUDE GU_LCP6_M;
     1246      349 S      %INCLUDE GH_LCP6_M;
     1247      350        %INCLUDE GH_HARDWARE_M;
     1248      448        %INCLUDE SS_SCODE_C;
     1249      468
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:190  
     1250      469    1   DCL USR UBIN;                           /*User number                         */
     1251      470    1   DCL DMAIN UBIN;                         /* Domain                             */
     1252      471    1   DCL ECCSC UBIN;                         /* ECC SUBCODE                        */
     1253      472    1   DCL EVID UBIN;                          /* Event ID                           */
     1254      473        %VLP_ERRCODE (FPTN=ERRC,STCLASS="");    /* Error code                         */
     1255      519    1   DCL ECCI(0:0) UBIN;                     /* Event information                  */
     1256      520    1   DCL EPTR$ EPTR;                         /* Monitor event procedure            */
     1257      521
     1258      522
     1259      523    1   DCL SCREECH ENTRY(1);
     1260      524
     1261      525    1   DCL G$USRT$ PTR SYMREF;
     1262      526    1   DCL G_DL$ PTR SYMREF;
     1263      527
     1264      528
     1265      529        %G$USER;
     1266      540        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
     1267      551        %G$DO;
     1268      614        %G$DOCONT;
     1269      621        %GATE (FPTN=G_UDLGATE,STCLASS=SYMREF);
     1270      640        %GATE (FPTN=G_DOGATE,STCLASS=SYMREF);
     1271      659        %VLP_SCODE (FPTN=DOERR,ERR#=%S$DOLIST,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
     1272      660                    FCG=GH,MID=S,MON='1'B);
     1273      721
     1274      722
     1275      723    1   DCL SIZE SBIN;                          /* Temp ECC info size                 */
     1276      724    1   DCL USER$ PTR;                          /* Temp User pointer                  */
     1277      725    1   DCL A UBIN BASED;                       /* Temp                               */
     1278      726    1   DCL B CHAR(K) BASED;
     1279      727    1   DCL SFLAG BIT(1);
     1280      728    1   DCL LIM SBIN;
     1281      729    1   DCL D$ PTR;
     1282      730    1   DCL DO$ PTR;
     1283      731    1   DCL DI$ PTR;
     1284      732    1   DCL E$ PTR;
     1285      733    1   DCL K UBIN;
     1286      734    1   DCL EVNT REDEF K UBIN;
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:191  
     1287      735    1   DCL ZERO UBIN CONSTANT INIT(0);
     1288      736    1   DCL   GHS$RUE ENTRY(4) ALTRET;
     1289      737        %EJECT;
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:192  
     1290      738    1           SFLAG='0'B;
     1291      739    1   EV0:    USER$ = ADDR(G$USER(USR));
     1292      740    1           IF USER$ -> G$U.US = %GH_NULL THEN
     1293      741    1              RETURN;
     1294      742    1           CALL GDOBLK(DI$);               /* Get a Dolist entry                 */
     1295      743    1           DO$ = DI$;
     1296      744    1           DO$->G$DO.DMAIN=DMAIN;
     1297      745    1           DO$->G$DO.ECCSC=ECCSC;
     1298      746    1           DO$->G$DO.EVID=EVID;
     1299      747    1           DO$->G$DO.SAVE=SFLAG;
     1300      748    1           IF ADDR(EPTR$) = ADDR(NIL) THEN
     1301      749    1              DO$->G$DO.ENTER=ENTADDR(NIL);
     1302      750    1           ELSE
     1303      751    1              DO$->G$DO.ENTER=EPTR$;
     1304      752    1           IF ADDR(ERRC) = ADDR(NIL) THEN
     1305      753    1              DO$->G$DO.ERRC='0'B;
     1306      754    1           ELSE
     1307      755    1              DO$->G$DO.ERRC=ERRC;
     1308      756    1           IF ADDR(ECCI)=ADDR(NIL) THEN
     1309      757    1              E$=ADDR(ZERO);
     1310      758    1           ELSE
     1311      759    1              E$=ADDR(ECCI);
     1312      760    1           SIZE=(E$->A+1)*2;               /* Bytes to move, including size      */
     1313      761    1           LIM=SIZEC(G$DO.ECCINFO)+SIZEC(G$DO.ECCSZ);
     1314      762    1           D$=ADDR(DO$->G$DO.ECCSZ);
     1315      763    1   EV1:    DO$->G$DO.CONT='0'B;
     1316      764    1           DO$->G$DO.BUSY='0'B;
     1317      765    1           DO$->G$DO.SCHDDO='0'B;
     1318      766    1           IF SIZE > LIM THEN
     1319      767    1              K = LIM;
     1320      768    1           ELSE
     1321      769    1              K = SIZE;
     1322      770    1           D$->B=E$->B;
     1323      771    1           SIZE=SIZE-K;
     1324      772    1           LIM=SIZEC(G$DOCONT.ECCINFO);
     1325      773    1           IF SIZE > 0 THEN
     1326      774    2           DO;
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:193  
     1327      775    2              CALL GDOBLK(D$);
     1328      776    2              DO$->G$DO.LNK$=D$;
     1329      777    2              E$=PINCRW(E$,K/2);
     1330      778    2              DO$->G$DO.CONT='1'B;
     1331      779    2              DO$=D$;
     1332      780    2              D$=ADDR(DO$->G$DOCONT.ECCINFO);
     1333      781    2              GOTO EV1;
     1334      782    2              END;
     1335      783
     1336      784                %LOCK (G = G_UDLGATE);
     1337      791
     1338      792    1           DO$->G$DO.LNK$=ADDR(NIL);
     1339      793    1           D$=ADDR(USER$ -> G$U.DL$);
     1340      794    2           DO WHILE (D$->G$DO.LNK$ ~= ADDR(NIL));
     1341      795    2              D$=D$->G$DO.LNK$;
     1342      796    2              END;
     1343      797    1           D$->G$DO.LNK$=DI$;
     1344      798
     1345      799                %UNLOCK (G = G_UDLGATE);
     1346      806
     1347      807    1           IF USER$->G$U.US = %GH_W
     1348      808    1           THEN EVNT = %GH_EVWU;
     1349      809    1           ELSE IF USER$->G$U.US = %GH_TI
     1350      810    1              THEN EVNT = %GH_EVCIC;
     1351      811    1              ELSE IF USER$->G$U.US = %GH_TOB
     1352      812    1                 THEN EVNT = %GH_EVCUB;
     1353      813    1                 ELSE RETURN;
     1354      814
     1355      815    1           CALL GHS$RUE(EVNT,USR);
     1356      816    1           RETURN;
     1357      817
     1358      818        /*         THIS ENTRY POINT SETS THE SAVE FLAG IN THE DOLIST ENTRY
     1359      819                CAUSING IT TO BE RETAINED, IF THE RECEIVER DOES NOT HAVE
     1360      820                AN EVENT HANDLER, INSTEAD OF ABORTING THE RECEIVER WITH
     1361      821                ERROR CODE SSC-495.                                           */
     1362      822        /*                                                                    */
     1363      823    1   GHS$EVENTG: ENTRY(USR,DMAIN,ECCSC,EVID,ERRC,ECCI,EPTR$);
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:194  
     1364      824
     1365      825    1           SFLAG='1'B;
     1366      826    1           GOTO EV0;
     1367      827        %EJECT;
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:195  
     1368      828    1   GDOBLK: PROC(DD$);
     1369      829    2   DCL  DD$ PTR;
     1370      830        /*                                                                    */
     1371      831
     1372      832             %LOCK (G = G_DOGATE);
     1373      839
     1374      840    2           DD$=G_DL$;
     1375      841    2           IF DD$ = ADDR(NIL) THEN
     1376      842    2              CALL SCREECH (DOERR);
     1377      843    2           ELSE
     1378      844    2              G_DL$=G_DL$->G$DO.LNK$;
     1379      845
     1380      846                %UNLOCK (G = G_DOGATE);
     1381      853
     1382      854    2           RETURN;
     1383      855    2   END;
     1384      856    1   END;
     1385      857        %EOD;

PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:196  
--  Include file information  --

   SS_SCODE_C.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$EVENT.

   Procedure GHS$EVENT requires 351 words for executable code.
   Procedure GHS$EVENT requires 40 words of local(AUTO) storage.

PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:197  

 Object Unit name= GHS$EVENT                                  File name= GHS$SCHD.:E05TOU
 UTS= JUL 29 '97 21:42:39.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      4      4  GHS$EVENT
    1   Proc  even  none   351    15F  GHS$EVENT
    2  RoData even  none     8      8  GHS$EVENT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        7  GHS$EVENT
     1    122                  yes      Std        7  GHS$EVENTG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 GHH$UNLOCK
 yes     yes           Std       4 GHS$RUE
         yes           Std       1 SCREECH
                       nStd      0 X6A_AUTO_N
                       nStd      0 X6A_ARET
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:198  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$USRT$                               G_DL$                                 G_UDLGATE
     G_DOGATE                         r    G$ROS$
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:199  


     1176        1        /*T***********************************************************/
     1177        2        /*T*                                                         */
     1178        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1179        4        /*T*                                                         */
     1180        5        /*T***********************************************************/
     1181        6        /*F*
     1182        7             NAME: GHS$EVENT
     1183        8             PURPOSE:
     1184        9                   To add an item onto a user's Dolist.
     1185       10             DESCRIPTION:
     1186       11                    This procedure adds an entry onto a user's Dolist containing
     1187       12                    data passed in the parameter list.
     1188       13        */
     1189       14        /*D*
     1190       15             NAME: GHS$EVENT
     1191       16             CALL:
     1192       17                   CALL GHS$EVENT (User-number,
     1193       18                                   Domain,
     1194       19                                   ECC-subcode,
     1195       20                                   Event-id,
     1196       21                                   Error-code,
     1197       22                                   ECC-information,
     1198       23                                   Eventproc-entry);
     1199       24             PARAMETERS:
     1200       25                    User-number is the number of the user on whose Dolist the event
     1201       26                    entry is to be added.
     1202       27                    Domain is the number of the domain which is to receive the event.
     1203       28                    The three domains are, User, Command Processor and Debugger.
     1204       29                    ECC-subcode is an Exceptional Condition code number to indicate
     1205       30                    the type of event, e.g., I/O complete, M$CLOCK runout.
     1206       31                    Event-id is an identifier specified by the user requesting the
     1207       32                    service associated with this event.
     1208       33                    Error-code indicates any error condition that may have occured
     1209       34                    as a result of the service associated with this event.
     1210       35                    ECC-information is an array of data to be transmitted to the
     1211       36                    user when the event is reported.  The first word of the array
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:200  
     1212       37                    contains a count of the number of words following in the array.
     1213       38                    Eventproc-entry is an EPTR to a monitor procedure to be called
     1214       39                    during Dolist processing for the user.
     1215       40
     1216       41             INTERFACE:
     1217       42                    Dolist entries are defined in the G$DO and G$DOCONT macros
     1218       43                    found in the GH_SCHD_M Include File.
     1219       44             DESCRIPTION:
     1220       45                    An entry is obtained from the free Dolist list.  If an entry
     1221       46                    is not available, a screech occurs since this procedure may
     1222       47                    be called at interrupt level and its not possible to wait for
     1223       48                    a free entry.
     1224       49
     1225       50                    Information passed as parameters is moved to the DOlist entry.
     1226       51
     1227       52                    If the ECC-information array is larger than the space available
     1228       53                    in a Dolist entry, subsequent entries are obtained to contain
     1229       54                    the addtional information.
     1230       55
     1231       56                    The entries are added to the Dolist list of the specified user.
     1232       57                    If the user is in the Sleep state, %GH_W, a wakeup event is
     1233       58                    reported on him.
     1234       59
     1235       60        */
     1236       61
     1237       62        /*X*              */
     1238       63
     1239       64        GHS$EVENT: PROC(USR,DMAIN,ECCSC,EVID,ERRC,ECCI,EPTR$);

     64   1 000000  D380 0000 0000  xent GHS$EVENT       LNJ,B5   X6A_AUTO_N
          1 000003       0028 0007                       DC       40,7

     1240       65
     1241       66
     1242       67        %INCLUDE GH_SCHD_M;
     1243      211        %INCLUDE GH_SCHD_E;
     1244      307        %INCLUDE GH_GATE_M;
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:201  
     1245      348 S      %INCLUDE GU_LCP6_M;
     1246      349 S      %INCLUDE GH_LCP6_M;
     1247      350        %INCLUDE GH_HARDWARE_M;
     1248      448        %INCLUDE SS_SCODE_C;
     1249      468
     1250      469    1   DCL USR UBIN;                           /*User number                         */
     1251      470    1   DCL DMAIN UBIN;                         /* Domain                             */
     1252      471    1   DCL ECCSC UBIN;                         /* ECC SUBCODE                        */
     1253      472    1   DCL EVID UBIN;                          /* Event ID                           */
     1254      473        %VLP_ERRCODE (FPTN=ERRC,STCLASS="");    /* Error code                         */
     1255      519    1   DCL ECCI(0:0) UBIN;                     /* Event information                  */
     1256      520    1   DCL EPTR$ EPTR;                         /* Monitor event procedure            */
     1257      521
     1258      522
     1259      523    1   DCL SCREECH ENTRY(1);
     1260      524
     1261      525    1   DCL G$USRT$ PTR SYMREF;
     1262      526    1   DCL G_DL$ PTR SYMREF;
     1263      527
     1264      528
     1265      529        %G$USER;
     1266      540        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
     1267      551        %G$DO;
     1268      614        %G$DOCONT;
     1269      621        %GATE (FPTN=G_UDLGATE,STCLASS=SYMREF);
     1270      640        %GATE (FPTN=G_DOGATE,STCLASS=SYMREF);
     1271      659        %VLP_SCODE (FPTN=DOERR,ERR#=%S$DOLIST,SEV=G_SEV_SCREECH#,STCLASS=CONSTANT,
     1272      660                    FCG=GH,MID=S,MON='1'B);
     1273      721
     1274      722
     1275      723    1   DCL SIZE SBIN;                          /* Temp ECC info size                 */
     1276      724    1   DCL USER$ PTR;                          /* Temp User pointer                  */
     1277      725    1   DCL A UBIN BASED;                       /* Temp                               */
     1278      726    1   DCL B CHAR(K) BASED;
     1279      727    1   DCL SFLAG BIT(1);
     1280      728    1   DCL LIM SBIN;
     1281      729    1   DCL D$ PTR;
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:202  
     1282      730    1   DCL DO$ PTR;
     1283      731    1   DCL DI$ PTR;
     1284      732    1   DCL E$ PTR;
     1285      733    1   DCL K UBIN;
     1286      734    1   DCL EVNT REDEF K UBIN;
     1287      735    1   DCL ZERO UBIN CONSTANT INIT(0);
     1288      736    1   DCL   GHS$RUE ENTRY(4) ALTRET;
     1289      737        %EJECT;
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:203  
     1290      738    1           SFLAG='0'B;

    738   1 000005  8747 0015                            CL       SFLAG,AUTO

     1291      739    1   EV0:    USER$ = ADDR(G$USER(USR));

    739   1 000007  ECC7 0004            EV0             LDB,B6   @USR,AUTO
          1 000009  B806                                 LDR,R3   ,B6
          1 00000A  DC80 0000 0000  xsym                 LDB,B5   G$USRT$
          1 00000D  3F18                                 MLV,R3   24
          1 00000E  CBB5                                 LAB,B4   ,B5,R3
          1 00000F  CFC7 0013                            STB,B4   USER$,AUTO

     1292      740    1           IF USER$ -> G$U.US = %GH_NULL THEN

    740   1 000011  E844 0002                            LDR,R6   2,B4
          1 000013  6D1F                                 CMV,R6   31
          1 000014  0981 0004                            BNE      s:742,PREL

     1293      741    1              RETURN;

    741   1 000016  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1294      742    1           CALL GDOBLK(DI$);               /* Get a Dolist entry                 */

    742   1 000019  BBC7 001B                            LAB,B3   DI$,AUTO
          1 00001B  BFC7 0022                            STB,B3   K+3,AUTO
          1 00001D  E3C0 010E                            LNJ,B6   s:0,PREL
          1 00001F       0001                            DC       s:743,PREL

     1295      743    1           DO$ = DI$;

    743   1 000020  ECC7 001B                            LDB,B6   DI$,AUTO
          1 000022  EFC7 0019                            STB,B6   DO$,AUTO

     1296      744    1           DO$->G$DO.DMAIN=DMAIN;

PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:204  
    744   1 000024  DCC7 0006                            LDB,B5   @DMAIN,AUTO
          1 000026  E805                                 LDR,R6   ,B5
          1 000027  EAC6 0002                            SRM,R6,'00FF'X    2,B6
          1 000029       00FF

     1297      745    1           DO$->G$DO.ECCSC=ECCSC;

    745   1 00002A  CCC7 0008                            LDB,B4   @ECCSC,AUTO
          1 00002C  E804                                 LDR,R6   ,B4
          1 00002D  E7C6 0005                            STH,R6   5,B6

     1298      746    1           DO$->G$DO.EVID=EVID;

    746   1 00002F  BCC7 000A                            LDB,B3   @EVID,AUTO
          1 000031  E803                                 LDR,R6   ,B3
          1 000032  E7C6 0006                            STH,R6   6,B6

     1299      747    1           DO$->G$DO.SAVE=SFLAG;

    747   1 000034  E847 0015                            LDR,R6   SFLAG,AUTO
          1 000036  6043                                 SOR,R6   3
          1 000037  EAC6 0002                            SRM,R6,'1000'X    2,B6
          1 000039       1000

     1300      748    1           IF ADDR(EPTR$) = ADDR(NIL) THEN

    748   1 00003A  ACC7 0010                            LDB,B2   @EPTR$,AUTO
          1 00003C  8DD2                                 CMN      B2
          1 00003D  0981 0008                            BNE      s:751,PREL

     1301      749    1              DO$->G$DO.ENTER=ENTADDR(NIL);

    749   1 00003F  9C80 0000 0000  02                   LDB,B1   0
          1 000042  9FC6 0003                            STB,B1   3,B6
          1 000044  0F81 0004                            B        s:752,PREL

     1302      750    1           ELSE
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:205  
     1303      751    1              DO$->G$DO.ENTER=EPTR$;

    751   1 000046  9C82                                 LDB,B1   ,B2
          1 000047  9FC6 0003                            STB,B1   3,B6

     1304      752    1           IF ADDR(ERRC) = ADDR(NIL) THEN

    752   1 000049  ECC7 000C                            LDB,B6   @ERRC,AUTO
          1 00004B  8DD6                                 CMN      B6
          1 00004C  0981 0009                            BNE      s:755,PREL

     1305      753    1              DO$->G$DO.ERRC='0'B;

    753   1 00004E  9CC7 0019                            LDB,B1   DO$,AUTO
          1 000050  8741 0007                            CL       7,B1
          1 000052  8741 0008                            CL       8,B1
          1 000054  0F81 0006                            B        s:756,PREL

     1306      754    1           ELSE
     1307      755    1              DO$->G$DO.ERRC=ERRC;

    755   1 000056  8C86                                 LDI      ,B6
          1 000057  9CC7 0019                            LDB,B1   DO$,AUTO
          1 000059  8D41 0007                            SDI      7,B1

     1308      756    1           IF ADDR(ECCI)=ADDR(NIL) THEN

    756   1 00005B  ECC7 000E                            LDB,B6   @ECCI,AUTO
          1 00005D  8DD6                                 CMN      B6
          1 00005E  0981 0008                            BNE      s:759,PREL

     1309      757    1              E$=ADDR(ZERO);

    757   1 000060  EB80 0000 0003  00                   LAB,B6   ZERO
          1 000063  EFC7 001D                            STB,B6   E$,AUTO
          1 000065  0F81 0003                            B        s:760,PREL

PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:206  
     1310      758    1           ELSE
     1311      759    1              E$=ADDR(ECCI);

    759   1 000067  EFC7 001D                            STB,B6   E$,AUTO

     1312      760    1           SIZE=(E$->A+1)*2;               /* Bytes to move, including size      */

    760   1 000069  E806                                 LDR,R6   ,B6
          1 00006A  6001                                 SOL,R6   1
          1 00006B  6E02                                 ADV,R6   2
          1 00006C  EF47 0012                            STR,R6   SIZE,AUTO

     1313      761    1           LIM=SIZEC(G$DO.ECCINFO)+SIZEC(G$DO.ECCSZ);

    761   1 00006E  5C0E                                 LDV,R5   14
          1 00006F  DF47 0016                            STR,R5   LIM,AUTO

     1314      762    1           D$=ADDR(DO$->G$DO.ECCSZ);

    762   1 000071  EBC1 0009                            LAB,B6   9,B1
          1 000073  EFC7 0017                            STB,B6   D$,AUTO

     1315      763    1   EV1:    DO$->G$DO.CONT='0'B;

    763   1 000075  ECC7 0019            EV1             LDB,B6   DO$,AUTO
          1 000077  8846 0002                            LBF,'4000'X       2,B6
          1 000079       4000

     1316      764    1           DO$->G$DO.BUSY='0'B;

    764   1 00007A  8846 0002                            LBF,'8000'X       2,B6
    764   1 00007C       8000

     1317      765    1           DO$->G$DO.SCHDDO='0'B;

    765   1 00007D  8846 0002                            LBF,'2000'X       2,B6
    765   1 00007F       2000
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:207  

     1318      766    1           IF SIZE > LIM THEN

    766   1 000080  E847 0012                            LDR,R6   SIZE,AUTO
          1 000082  E947 0016                            CMR,R6   LIM,AUTO
          1 000084  0A81 0007                            BALE     s:769,PREL

     1319      767    1              K = LIM;

    767   1 000086  D847 0016                            LDR,R5   LIM,AUTO
          1 000088  DF47 001F                            STR,R5   K,AUTO
          1 00008A  0F81 0003                            B        s:770,PREL

     1320      768    1           ELSE
     1321      769    1              K = SIZE;

    769   1 00008C  EF47 001F                            STR,R6   K,AUTO

     1322      770    1           D$->B=E$->B;

    770   1 00008E  ACC7 001D                            LDB,B2   E$,AUTO
          1 000090  2C00                                 LDV,R2   0
          1 000091  E847 001F                            LDR,R6   K,AUTO
          1 000093  BCC7 0017                            LDB,B3   D$,AUTO
          1 000095  3C00                                 LDV,R3   0
          1 000096  0008                                 MMM

     1323      771    1           SIZE=SIZE-K;

    771   1 000097  E847 0012                            LDR,R6   SIZE,AUTO
          1 000099  E247 001F                            SUB,R6   K,AUTO
          1 00009B  EF47 0012                            STR,R6   SIZE,AUTO

     1324      772    1           LIM=SIZEC(G$DOCONT.ECCINFO);

    772   1 00009D  5C18                                 LDV,R5   24
          1 00009E  DF47 0016                            STR,R5   LIM,AUTO
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:208  

     1325      773    1           IF SIZE > 0 THEN

    773   1 0000A0  6A81 0023                            BLEZ,R6  s:789,PREL

     1326      774    2           DO;

     1327      775    2              CALL GDOBLK(D$);

    775   1 0000A2  EBC7 0017                            LAB,B6   D$,AUTO
          1 0000A4  EFC7 0022                            STB,B6   K+3,AUTO
          1 0000A6  E3C0 0085                            LNJ,B6   s:0,PREL
          1 0000A8       0001                            DC       s:776,PREL

     1328      776    2              DO$->G$DO.LNK$=D$;

    776   1 0000A9  ECC7 0017                            LDB,B6   D$,AUTO
          1 0000AB  DCC7 0019                            LDB,B5   DO$,AUTO
          1 0000AD  EF85                                 STB,B6   ,B5

     1329      777    2              E$=PINCRW(E$,K/2);

    777   1 0000AE  E847 001F                            LDR,R6   K,AUTO
          1 0000B0  6041                                 SOR,R6   1
          1 0000B1  F856                                 LDR,R7   R6
          1 0000B2  6C00                                 LDV,R6   0
          1 0000B3  8447 001D                            AID      E$,AUTO
          1 0000B5  8D47 001D                            SDI      E$,AUTO

     1330      778    2              DO$->G$DO.CONT='1'B;

    778   1 0000B7  8945 0002                            LBT,'4000'X       2,B5
    778   1 0000B9       4000

     1331      779    2              DO$=D$;

    779   1 0000BA  CCC7 0017                            LDB,B4   D$,AUTO
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:209  
          1 0000BC  CFC7 0019                            STB,B4   DO$,AUTO

     1332      780    2              D$=ADDR(DO$->G$DOCONT.ECCINFO);

    780   1 0000BE  EBC4 0003                            LAB,B6   3,B4
          1 0000C0  EFC7 0017                            STB,B6   D$,AUTO

     1333      781    2              GOTO EV1;

    781   1 0000C2  0F81 FFB2                            B        s:763,PREL

     1334      782    2              END;
     1335      783
     1336      784                %LOCK (G = G_UDLGATE);

    789   1 0000C4  BB80 0000 0002  02                   LAB,B3   +2
          1 0000C7  CBF0 0100                            LAB,B4   256,IMO
          1 0000C9  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 0000CC       0001                            DC       s:792,PREL

     1337      791
     1338      792    1           DO$->G$DO.LNK$=ADDR(NIL);

    792   1 0000CD  EB80 0000 0000                       LAB,B6   0
          1 0000D0  DCC7 0019                            LDB,B5   DO$,AUTO
          1 0000D2  EF85                                 STB,B6   ,B5

     1339      793    1           D$=ADDR(USER$ -> G$U.DL$);

    793   1 0000D3  CCC7 0013                            LDB,B4   USER$,AUTO
          1 0000D5  BBC4 000D                            LAB,B3   13,B4
          1 0000D7  BFC7 0017                            STB,B3   D$,AUTO

     1340      794    2           DO WHILE (D$->G$DO.LNK$ ~= ADDR(NIL));

    794   1 0000D9  0F81 0006                            B        s:796,PREL

PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:210  
     1341      795    2              D$=D$->G$DO.LNK$;

    795   1 0000DB  ECC7 0017                            LDB,B6   D$,AUTO
          1 0000DD  DC86                                 LDB,B5   ,B6
          1 0000DE  DFC7 0017                            STB,B5   D$,AUTO

     1342      796    2              END;

    796   1 0000E0  ECC7 0017                            LDB,B6   D$,AUTO
          1 0000E2  8D86                                 CMN      ,B6
          1 0000E3  09F8                                 BNE      s:795,SPREL

     1343      797    1           D$->G$DO.LNK$=DI$;

    797   1 0000E4  DCC7 001B                            LDB,B5   DI$,AUTO
          1 0000E6  DF86                                 STB,B5   ,B6

     1344      798
     1345      799                %UNLOCK (G = G_UDLGATE);

    804   1 0000E7  BB80 0000 0002  02                   LAB,B3   +2
          1 0000EA  CBF0 0100                            LAB,B4   256,IMO
          1 0000EC  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0000EF       0001                            DC       s:807,PREL

     1346      806
     1347      807    1           IF USER$->G$U.US = %GH_W

    807   1 0000F0  ECC7 0013                            LDB,B6   USER$,AUTO
          1 0000F2  E846 0002                            LDR,R6   2,B6
          1 0000F4  6D0E                                 CMV,R6   14
          1 0000F5  0981 0006                            BNE      s:809,PREL

     1348      808    1           THEN EVNT = %GH_EVWU;

    808   1 0000F7  5C02                                 LDV,R5   2
          1 0000F8  DF47 001F                            STR,R5   K,AUTO
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:211  
          1 0000FA  0F81 0014                            B        s:815,PREL

     1349      809    1           ELSE IF USER$->G$U.US = %GH_TI

    809   1 0000FC  6D16                                 CMV,R6   22
          1 0000FD  0981 0006                            BNE      s:811,PREL

     1350      810    1              THEN EVNT = %GH_EVCIC;

    810   1 0000FF  5C17                                 LDV,R5   23
          1 000100  DF47 001F                            STR,R5   K,AUTO
          1 000102  0F81 000C                            B        s:815,PREL

     1351      811    1              ELSE IF USER$->G$U.US = %GH_TOB

    811   1 000104  6D15                                 CMV,R6   21
          1 000105  0981 0006                            BNE      s:813,PREL

     1352      812    1                 THEN EVNT = %GH_EVCUB;

    812   1 000107  5C1A                                 LDV,R5   26
          1 000108  DF47 001F                            STR,R5   K,AUTO
          1 00010A  0F81 0004                            B        s:815,PREL

     1353      813    1                 ELSE RETURN;

    813   1 00010C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1354      814
     1355      815    1           CALL GHS$RUE(EVNT,USR);

    815   1 00010F  DCC7 0004                            LDB,B5   @USR,AUTO
          1 000111  DFC7 0026                            STB,B5   @DD$+4,AUTO
          1 000113  CBC7 001F                            LAB,B4   K,AUTO
          1 000115  CFC7 0024                            STB,B4   @DD$+2,AUTO
          1 000117  BBC7 0024                            LAB,B3   @DD$+2,AUTO
          1 000119  CBF0 0200                            LAB,B4   512,IMO
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:212  
          1 00011B  E380 0000 0000  xent                 LNJ,B6   GHS$RUE
          1 00011E       0001                            DC       s:816,PREL

     1356      816    1           RETURN;

    816   1 00011F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1357      817
     1358      818        /*         THIS ENTRY POINT SETS THE SAVE FLAG IN THE DOLIST ENTRY
     1359      819                CAUSING IT TO BE RETAINED, IF THE RECEIVER DOES NOT HAVE
     1360      820                AN EVENT HANDLER, INSTEAD OF ABORTING THE RECEIVER WITH
     1361      821                ERROR CODE SSC-495.                                           */
     1362      822        /*                                                                    */
     1363      823    1   GHS$EVENTG: ENTRY(USR,DMAIN,ECCSC,EVID,ERRC,ECCI,EPTR$);

    823   1 000122  D380 0000 0000  xent GHS$EVENTG      LNJ,B5   X6A_AUTO_N
          1 000125       0028 0007                       DC       40,7

     1364      824
     1365      825    1           SFLAG='1'B;

    825   1 000127  8947 0015                            LBT,'8000'X       SFLAG,AUTO
    825   1 000129       8000

     1366      826    1           GOTO EV0;

    826   1 00012A  0F81 FEDC                            B        s:739,PREL

     1367      827        %EJECT;
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:213  
     1368      828    1   GDOBLK: PROC(DD$);

    828   1 00012C  EFC7 0020            GDOBLK          STB,B6   K+1,AUTO

     1369      829    2   DCL  DD$ PTR;
     1370      830        /*                                                                    */
     1371      831
     1372      832             %LOCK (G = G_DOGATE);

    837   1 00012E  BB80 0000 0004  02                   LAB,B3   +4
          1 000131  CBF0 0100                            LAB,B4   256,IMO
          1 000133  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 000136       0001                            DC       s:840,PREL

     1373      839
     1374      840    2           DD$=G_DL$;

    840   1 000137  EC80 0000 0000  xsym                 LDB,B6   G_DL$
          1 00013A  DCC7 0022                            LDB,B5   @DD$,AUTO
          1 00013C  EF85                                 STB,B6   ,B5

     1375      841    2           IF DD$ = ADDR(NIL) THEN

    841   1 00013D  8D85                                 CMN      ,B5
          1 00013E  0981 000C                            BNE      s:844,PREL

     1376      842    2              CALL SCREECH (DOERR);

    842   1 000140  BB80 0000 0006  02                   LAB,B3   +6
          1 000143  CBF0 0100                            LAB,B4   256,IMO
          1 000145  E380 0000 0000  xent                 LNJ,B6   SCREECH
          1 000148       0001                            DC       s:842+9,PREL
          1 000149  0F81 0008                            B        s:851,PREL

     1377      843    2           ELSE
     1378      844    2              G_DL$=G_DL$->G$DO.LNK$;

PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:214  
    844   1 00014B  CC80 0000 0000  xsym                 LDB,B4   G_DL$
          1 00014E  BC84                                 LDB,B3   ,B4
          1 00014F  BF80 0000 0000  xsym                 STB,B3   G_DL$

     1379      845
     1380      846                %UNLOCK (G = G_DOGATE);

    851   1 000152  BB80 0000 0004  02                   LAB,B3   +4
          1 000155  CBF0 0100                            LAB,B4   256,IMO
          1 000157  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 00015A       0001                            DC       s:854,PREL

     1381      853
     1382      854    2           RETURN;

    854   1 00015B  ECC7 0020                            LDB,B6   K+1,AUTO
          1 00015D  C3C6 0001                            LNJ,B4   1,B6
     1383      855    2   END;
     1384      856    1   END;
     1385      857        %EOD;

PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:215  
--  Include file information  --

   SS_SCODE_C.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$EVENT.
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:216  

 **** Variables and constants ****

  ****  Section 000 RoData GHS$EVENT

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 DOERR                      3-0-0/w UBIN(16)    r     1 ZERO

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    22-0-0/w PTR         r     1 @DD$                       6-0-0/w PTR         r     1 @DMAIN
     E-0-0/w PTR         r     1 @ECCI                      8-0-0/w PTR         r     1 @ECCSC
    10-0-0/w PTR         r     1 @EPTR$                     C-0-0/w PTR         r     1 @ERRC
     A-0-0/w PTR         r     1 @EVID                      4-0-0/w PTR         r     1 @USR
    17-0-0/w PTR         r     1 D$                        *0-0-0/w PTR         r     1 DD$
    1B-0-0/w PTR         r     1 DI$                       *0-0-0/w UBIN(16)    r     1 DMAIN
    19-0-0/w PTR         r     1 DO$                       1D-0-0/w PTR         r     1 E$
    *0-0-0/w UBIN(16)    r     1 ECCI(0:0)                 *0-0-0/w UBIN(16)    r     1 ECCSC
    *0-0-0/w EPTR        r     1 EPTR$                     *0-0-0/w STRC(32)    r     1 ERRC
    *0-0-0/w UBIN(16)    r     1 EVID                      1F-0-0/w UBIN(16)    r     1 EVNT
    1F-0-0/w UBIN(16)    r     1 K                         16-0-0/w SBIN(16)    r     1 LIM
    15-0-0/b BIT         r     1 SFLAG                     12-0-0/w SBIN(16)    r     1 SIZE
    13-0-0/w PTR         r     1 USER$                     *0-0-0/w UBIN(16)    r     1 USR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$USRT$                    0-0-0/w PTR         r     1 G_DL$
     0-0-0/w STRC(48)    r     1 G_DOGATE                   0-0-0/w STRC(48)    r     1 G_UDLGATE

  ****  BASED and DCB variables  ****
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:217  

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 A                          0-0-0/c ACHR        r     1 B
     0-0-0/w STRC(256)   r     1 G$DO                       0-0-0/w STRC(240)   r     1 G$DOCONT
     0-0-0/w STRC(384)   r     1 G$U                        0-0-0/w STRC(384)   r     1 G$USER(0:0)


   Procedure GHS$EVENT requires 351 words for executable code.
   Procedure GHS$EVENT requires 40 words of local(AUTO) storage.
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:218  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:219  
          MINI XREF LISTING

A
       725**DCL       760>>ASSIGN
B
       726**DCL       770<<ASSIGN    770>>ASSIGN
D$
       729**DCL       762<<ASSIGN    770>>ASSIGN    775<>CALL      776>>ASSIGN    779>>ASSIGN    780<<ASSIGN
       793<<ASSIGN    794>>DOWHILE   795<<ASSIGN    795>>ASSIGN    797>>ASSIGN
DD$ IN PROCEDURE GDOBLK
       829**DCL       828--PROC      840<<ASSIGN    841>>IF
DI$
       731**DCL       742<>CALL      743>>ASSIGN    797>>ASSIGN
DMAIN
       470**DCL        64--PROC      744>>ASSIGN    823--ENTRY
DO$
       730**DCL       743<<ASSIGN    744>>ASSIGN    745>>ASSIGN    746>>ASSIGN    747>>ASSIGN    749>>ASSIGN
       751>>ASSIGN    753>>ASSIGN    755>>ASSIGN    762>>ASSIGN    763>>ASSIGN    764>>ASSIGN    765>>ASSIGN
       776>>ASSIGN    778>>ASSIGN    779<<ASSIGN    780>>ASSIGN    792>>ASSIGN
DOERR
       687**DCL       842<>CALL
E$
       732**DCL       757<<ASSIGN    759<<ASSIGN    760>>ASSIGN    770>>ASSIGN    777<<ASSIGN    777>>ASSIGN
ECCI
       519**DCL        64--PROC      756--IF        759--ASSIGN    823--ENTRY
ECCSC
       471**DCL        64--PROC      745>>ASSIGN    823--ENTRY
EPTR$
       520**DCL        64--PROC      748--IF        751>>ASSIGN    823--ENTRY
ERRC
       487**DCL        64--PROC      752--IF        755>>ASSIGN    823--ENTRY
EV0
       739**LABEL     826--GOTO
EV1
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:220  
       763**LABEL     781--GOTO
EVID
       472**DCL        64--PROC      746>>ASSIGN    823--ENTRY
EVNT
       734**DCL       808<<ASSIGN    810<<ASSIGN    812<<ASSIGN    815<>CALL
G$DO.BUSY
       560**DCL       764<<ASSIGN
G$DO.CONT
       560**DCL       763<<ASSIGN    778<<ASSIGN
G$DO.DMAIN
       560**DCL       744<<ASSIGN
G$DO.ECCINFO
       612**DCL       761--ASSIGN
G$DO.ECCSC
       560**DCL       745<<ASSIGN
G$DO.ECCSZ
       612**DCL       761--ASSIGN    762--ASSIGN
G$DO.ENTER
       560**DCL       749<<ASSIGN    751<<ASSIGN
G$DO.ERRC
       579**DCL       753<<ASSIGN    755<<ASSIGN
G$DO.EVID
       561**DCL       746<<ASSIGN
G$DO.LNK$
       556**DCL       776<<ASSIGN    792<<ASSIGN    794>>DOWHILE   795>>ASSIGN    797<<ASSIGN    844>>ASSIGN
G$DO.SAVE
       560**DCL       747<<ASSIGN
G$DO.SCHDDO
       560**DCL       765<<ASSIGN
G$DOCONT.ECCINFO
       619**DCL       772--ASSIGN    780--ASSIGN
G$U.DL$
       537**DCL       793--ASSIGN
G$U.MISC
       535**DCL       535--REDEF
G$U.US
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:221  
       535**DCL       740>>IF        807>>IF        809>>IF        811>>IF
G$USER
       545**DCL       739--ASSIGN
G$USER.MISC
       546**DCL       546--REDEF
G$USRT$
       525**DCL       545--IMP-PTR   739>>ASSIGN
GDOBLK
       828**PROC      742--CALL      775--CALL
GHH$LOCK
       347**DCL-ENT   789--CALL      837--CALL
GHH$UNLOCK
       347**DCL-ENT   804--CALL      851--CALL
GHS$RUE
       736**DCL-ENT   815--CALL
G_DL$
       526**DCL       840>>ASSIGN    844<<ASSIGN    844>>ASSIGN
G_DOGATE
       652**DCL       837<>CALL      851<>CALL
G_UDLGATE
       633**DCL       789<>CALL      804<>CALL
K
       733**DCL       726--IMP-SIZ   734--REDEF     767<<ASSIGN    769<<ASSIGN    770>>ASSIGN    770>>ASSIGN
       771>>ASSIGN    777>>ASSIGN
LIM
       728**DCL       761<<ASSIGN    766>>IF        767>>ASSIGN    772<<ASSIGN
SCREECH
       523**DCL-ENT   842--CALL
SFLAG
       727**DCL       738<<ASSIGN    747>>ASSIGN    825<<ASSIGN
SIZE
       723**DCL       760<<ASSIGN    766>>IF        769>>ASSIGN    771<<ASSIGN    771>>ASSIGN    773>>IF
USER$
       724**DCL       739<<ASSIGN    740>>IF        793>>ASSIGN    807>>IF        809>>IF        811>>IF
USR
       469**DCL        64--PROC      739>>ASSIGN    815<>CALL      823--ENTRY
PL6.E3A0      #004=GHS$EVENT File=GHS$SCHD.:E05TSI                               TUE 07/29/97 21:42 Page:222  
ZERO
       735**DCL       757--ASSIGN

PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:223  
     1386        1        /*T***********************************************************/
     1387        2        /*T*                                                         */
     1388        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1389        4        /*T*                                                         */
     1390        5        /*T***********************************************************/
     1391        6        /*F*
     1392        7             NAME: GHS$XXDO
     1393        8             PURPOSE:
     1394        9                  To delete an entry from a users Dolist.
     1395       10        */
     1396       11        /*D*
     1397       12             NAME: GHS$XXDO
     1398       13             CALL:
     1399       14                  CALL GHS$XXDO (User-number,
     1400       15                                 Parameter-2,
     1401       16                                 Event-ID) ALTRET(altret-label);
     1402       17             PARAMETERS:
     1403       18                  User-number is the Dolist owner's user number.
     1404       19                  Parameter-2 may be a Dolist pointer or an ECC-subcode.
     1405       20                  Event-ID is a Dolist Event-ID.
     1406       21                  ALTRET is taken if the specified Dolist entry cannot be found.
     1407       22             INTERFACE:
     1408       23                    Dolist entries are defined in the G$DO and G$DOCONT macros
     1409       24                    found in the GH_SCHD_M Include File.
     1410       25             DESCRIPTION:
     1411       26                  If Event-ID is not specified, Parameter-2 is a pointer to an
     1412       27                  entry to be deleted from the current users Dolist.
     1413       28
     1414       29                  If Event-ID is specified, an entry on the specified user's
     1415       30                  Dolist, containing an ECC-subcode matching Parameter-2 and
     1416       31                  a matching Event-ID is deleted.
     1417       32        */
     1418       33
     1419       34        GHS$XXDO: PROC(USR,ECCSC,EVID) ALTRET;
     1420       35
     1421       36
     1422       37
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:224  
     1423       38        %INCLUDE GH_SCHD_M;
     1424      182        %INCLUDE GH_SCHD_E;
     1425      278        %INCLUDE GH_GATE_M;
     1426      319 S      %INCLUDE GU_LCP6_M;
     1427      320 S      %INCLUDE GH_LCP6_M;
     1428      321        %INCLUDE GH_HARDWARE_M;
     1429      419        %INCLUDE G_HJIT_M;
     1430      564
     1431      565    1   DCL   USR UBIN;                         /* User number                        */
     1432      566    1   DCL   ECCSC UBIN;                       /* Event Subcode or Dolist PTR        */
     1433      567    1   DCL   EVID UBIN;                        /* Event ID.                          */
     1434      568
     1435      569    1   DCL   D$ PTR;                           /* Dolist pointer                     */
     1436      570    1   DCL   D1$ PTR;                          /* Dolist pointer to previous entry   */
     1437      571    1   DCL   D2$ PTR;
     1438      572    1   DCL DOPTR$ PTR BASED;
     1439      573        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
     1440      584        %GATE (FPTN=G_UDLGATE,STCLASS=SYMREF);
     1441      603        %GATE (FPTN=G_DOGATE,STCLASS=SYMREF);
     1442      622        %G$MHJIT  (STCLASS="BASED(G$MHJIT$)");
     1443     7496
     1444     7497    1   DCL G$MHJIT$ PTR SYMREF;
     1445     7498    1   DCL G$USRT$ PTR SYMREF;
     1446     7499    1   DCL G_DL$ PTR SYMREF;
     1447     7500
     1448     7501        %G$DO;
     1449     7564
     1450     7565
     1451     7566             %LOCK (G = G_UDLGATE);
     1452     7573             %LOCK (G = G_DOGATE);
     1453     7580
     1454     7581    1           IF ADDR(EVID) ~= ADDR(NIL) THEN
     1455     7582    2           DO;
     1456     7583    2              D$=ADDR(G$USER.DL$(USR));
     1457     7584    2   DO1B:      IF D$ -> G$DO.LNK$ ~= ADDR(NIL)
     1458     7585    3              THEN DO;
     1459     7586    3                 IF (D$ -> G$DO.LNK$ -> G$DO.ECCSC = ECCSC)
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:225  
     1460     7587    3                   AND (D$ -> G$DO.LNK$ -> G$DO.EVID = EVID)
     1461     7588    3                 THEN
     1462     7589    3                    GOTO DO1A;
     1463     7590    3                 ELSE
     1464     7591    3                    D$ = D$ -> G$DO.LNK$;
     1465     7592    3                 GOTO DO1B;
     1466     7593    3                 END;
     1467     7594    2              END;
     1468     7595    1           ELSE
     1469     7596    2           DO;
     1470     7597    2              D$=ADDR(G$USER.DL$(G$MHJIT.CUN));
     1471     7598    2   DO1C:      IF D$ -> G$DO.LNK$ ~= ADDR(NIL) THEN
     1472     7599    3              DO;
     1473     7600    3                 IF D$ -> G$DO.LNK$ = ADDR(ECCSC)->DOPTR$ THEN
     1474     7601    3                    GOTO DO1A;
     1475     7602    3                 ELSE
     1476     7603    3                    D$ = D$ -> G$DO.LNK$;
     1477     7604    3                 GOTO DO1C;
     1478     7605    3                 END;
     1479     7606    2              END;
     1480     7607
     1481     7608                %UNLOCK (G = G_DOGATE);
     1482     7615                %UNLOCK (G = G_UDLGATE);
     1483     7622
     1484     7623    1           ALTRETURN;
     1485     7624
     1486     7625    1   DO1A:
     1487     7626    1           D1$=D$->G$DO.LNK$;
     1488     7627    1           D2$=D1$;
     1489     7628    1   DO1D:   IF D1$->G$DO.CONT = '1'B THEN
     1490     7629    2           DO;
     1491     7630    2              D1$=D1$->G$DO.LNK$;
     1492     7631    2              GOTO DO1D;
     1493     7632    2              END;
     1494     7633    1           D$->G$DO.LNK$=D1$->G$DO.LNK$;
     1495     7634    1           D1$->G$DO.LNK$=G_DL$;
     1496     7635    1           G_DL$=D2$;
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:226  
     1497     7636
     1498     7637                %UNLOCK (G = G_DOGATE);
     1499     7644                %UNLOCK (G = G_UDLGATE);
     1500     7651    1           RETURN;
     1501     7652    1   END GHS$XXDO;
     1502     7653        %EOD;

PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:227  
--  Include file information  --

   G_HJIT_M.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$XXDO.

   Procedure GHS$XXDO requires 159 words for executable code.
   Procedure GHS$XXDO requires 16 words of local(AUTO) storage.

PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:228  

 Object Unit name= GHS$XXDO                                   File name= GHS$SCHD.:E05TOU
 UTS= JUL 29 '97 21:42:50.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   159     9F  GHS$XXDO
    1  RoData even  none     4      4  GHS$XXDO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  GHS$XXDO

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 GHH$UNLOCK
                       nStd      0 X6A_AUTO_3
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G_UDLGATE                             G_DOGATE                              G$MHJIT$
     G$USRT$                               G_DL$                            r    G$ROS$
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:229  


     1386        1        /*T***********************************************************/
     1387        2        /*T*                                                         */
     1388        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1389        4        /*T*                                                         */
     1390        5        /*T***********************************************************/
     1391        6        /*F*
     1392        7             NAME: GHS$XXDO
     1393        8             PURPOSE:
     1394        9                  To delete an entry from a users Dolist.
     1395       10        */
     1396       11        /*D*
     1397       12             NAME: GHS$XXDO
     1398       13             CALL:
     1399       14                  CALL GHS$XXDO (User-number,
     1400       15                                 Parameter-2,
     1401       16                                 Event-ID) ALTRET(altret-label);
     1402       17             PARAMETERS:
     1403       18                  User-number is the Dolist owner's user number.
     1404       19                  Parameter-2 may be a Dolist pointer or an ECC-subcode.
     1405       20                  Event-ID is a Dolist Event-ID.
     1406       21                  ALTRET is taken if the specified Dolist entry cannot be found.
     1407       22             INTERFACE:
     1408       23                    Dolist entries are defined in the G$DO and G$DOCONT macros
     1409       24                    found in the GH_SCHD_M Include File.
     1410       25             DESCRIPTION:
     1411       26                  If Event-ID is not specified, Parameter-2 is a pointer to an
     1412       27                  entry to be deleted from the current users Dolist.
     1413       28
     1414       29                  If Event-ID is specified, an entry on the specified user's
     1415       30                  Dolist, containing an ECC-subcode matching Parameter-2 and
     1416       31                  a matching Event-ID is deleted.
     1417       32        */
     1418       33
     1419       34        GHS$XXDO: PROC(USR,ECCSC,EVID) ALTRET;

     34   0 000000  D380 0000 0000  xent GHS$XXDO        LNJ,B5   X6A_AUTO_3
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:230  
          0 000003       0010 0003                       DC       16,3

     1420       35
     1421       36
     1422       37
     1423       38        %INCLUDE GH_SCHD_M;
     1424      182        %INCLUDE GH_SCHD_E;
     1425      278        %INCLUDE GH_GATE_M;
     1426      319 S      %INCLUDE GU_LCP6_M;
     1427      320 S      %INCLUDE GH_LCP6_M;
     1428      321        %INCLUDE GH_HARDWARE_M;
     1429      419        %INCLUDE G_HJIT_M;
     1430      564
     1431      565    1   DCL   USR UBIN;                         /* User number                        */
     1432      566    1   DCL   ECCSC UBIN;                       /* Event Subcode or Dolist PTR        */
     1433      567    1   DCL   EVID UBIN;                        /* Event ID.                          */
     1434      568
     1435      569    1   DCL   D$ PTR;                           /* Dolist pointer                     */
     1436      570    1   DCL   D1$ PTR;                          /* Dolist pointer to previous entry   */
     1437      571    1   DCL   D2$ PTR;
     1438      572    1   DCL DOPTR$ PTR BASED;
     1439      573        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
     1440      584        %GATE (FPTN=G_UDLGATE,STCLASS=SYMREF);
     1441      603        %GATE (FPTN=G_DOGATE,STCLASS=SYMREF);
     1442      622        %G$MHJIT  (STCLASS="BASED(G$MHJIT$)");
     1443     7496
     1444     7497    1   DCL G$MHJIT$ PTR SYMREF;
     1445     7498    1   DCL G$USRT$ PTR SYMREF;
     1446     7499    1   DCL G_DL$ PTR SYMREF;
     1447     7500
     1448     7501        %G$DO;
     1449     7564
     1450     7565
     1451     7566             %LOCK (G = G_UDLGATE);

   7571   0 000005  BB80 0000 0000  01                   LAB,B3   0
          0 000008  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:231  
          0 00000A  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          0 00000D       0001                            DC       s:7578,PREL

     1452     7573             %LOCK (G = G_DOGATE);

   7578   0 00000E  BB80 0000 0002  01                   LAB,B3   +2
          0 000011  CBF0 0100                            LAB,B4   256,IMO
          0 000013  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          0 000016       0001                            DC       s:7581,PREL

     1453     7580
     1454     7581    1           IF ADDR(EVID) ~= ADDR(NIL) THEN

   7581   0 000017  ECC7 0008                            LDB,B6   @EVID,AUTO
          0 000019  8DD6                                 CMN      B6
          0 00001A  0901 0023                            BE       s:7597,PREL

     1455     7582    2           DO;

     1456     7583    2              D$=ADDR(G$USER.DL$(USR));

   7583   0 00001C  DCC7 0004                            LDB,B5   @USR,AUTO
          0 00001E  B805                                 LDR,R3   ,B5
          0 00001F  CC80 0000 0000  xsym                 LDB,B4   G$USRT$
          0 000022  3F18                                 MLV,R3   24
          0 000023  3E0D                                 ADV,R3   13
          0 000024  BBB4                                 LAB,B3   ,B4,R3
          0 000025  BFC7 000A                            STB,B3   D$,AUTO

     1457     7584    2   DO1B:      IF D$ -> G$DO.LNK$ ~= ADDR(NIL)

   7584   0 000027  ECC7 000A            DO1B            LDB,B6   D$,AUTO
          0 000029  8D86                                 CMN      ,B6
          0 00002A  0901 002E                            BE       s:7613,PREL

     1458     7585    3              THEN DO;

PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:232  
     1459     7586    3                 IF (D$ -> G$DO.LNK$ -> G$DO.ECCSC = ECCSC)

   7586   0 00002C  DC86                                 LDB,B5   ,B6
          0 00002D  CCC7 0006                            LDB,B4   @ECCSC,AUTO
          0 00002F  E2C5 0005                            LLH,R6   5,B5
          0 000031  E904                                 CMR,R6   ,B4
          0 000032  0981 0008                            BNE      s:7591,PREL
          0 000034  BCC7 0008                            LDB,B3   @EVID,AUTO
          0 000036  D2C5 0006                            LLH,R5   6,B5
          0 000038  D903                                 CMR,R5   ,B3
          0 000039  0901 0034                            BE       s:7626,PREL

     1460     7587    3                   AND (D$ -> G$DO.LNK$ -> G$DO.EVID = EVID)
     1461     7588    3                 THEN
     1462     7589    3                    GOTO DO1A;
     1463     7590    3                 ELSE
     1464     7591    3                    D$ = D$ -> G$DO.LNK$;

   7591   0 00003B  DFC7 000A                            STB,B5   D$,AUTO

     1465     7592    3                 GOTO DO1B;

   7592   0 00003D  0FEA                                 B        s:7584,SPREL

     1466     7593    3                 END;
     1467     7594    2              END;
     1468     7595    1           ELSE
     1469     7596    2           DO;

     1470     7597    2              D$=ADDR(G$USER.DL$(G$MHJIT.CUN));

   7597   0 00003E  DC80 0000 0000  xsym                 LDB,B5   G$MHJIT$
          0 000041  B845 0351                            LDR,R3   849,B5
          0 000043  CC80 0000 0000  xsym                 LDB,B4   G$USRT$
          0 000046  3F18                                 MLV,R3   24
          0 000047  3E0D                                 ADV,R3   13
          0 000048  BBB4                                 LAB,B3   ,B4,R3
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:233  
          0 000049  BFC7 000A                            STB,B3   D$,AUTO

     1471     7598    2   DO1C:      IF D$ -> G$DO.LNK$ ~= ADDR(NIL) THEN

   7598   0 00004B  ECC7 000A            DO1C            LDB,B6   D$,AUTO
          0 00004D  8D86                                 CMN      ,B6
          0 00004E  0901 000A                            BE       s:7613,PREL

     1472     7599    3              DO;

     1473     7600    3                 IF D$ -> G$DO.LNK$ = ADDR(ECCSC)->DOPTR$ THEN

   7600   0 000050  DC86                                 LDB,B5   ,B6
          0 000051  CCC7 0006                            LDB,B4   @ECCSC,AUTO
          0 000053  DD84                                 CMB,B5   ,B4
          0 000054  0901 0019                            BE       s:7626,PREL

     1474     7601    3                    GOTO DO1A;
     1475     7602    3                 ELSE
     1476     7603    3                    D$ = D$ -> G$DO.LNK$;

   7603   0 000056  DFC7 000A                            STB,B5   D$,AUTO

     1477     7604    3                 GOTO DO1C;

   7604   0 000058  0FF3                                 B        s:7598,SPREL

     1478     7605    3                 END;
     1479     7606    2              END;
     1480     7607
     1481     7608                %UNLOCK (G = G_DOGATE);

   7613   0 000059  BB80 0000 0002  01                   LAB,B3   +2
          0 00005C  CBF0 0100                            LAB,B4   256,IMO
          0 00005E  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          0 000061       0001                            DC       s:7620,PREL

PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:234  
     1482     7615                %UNLOCK (G = G_UDLGATE);

   7620   0 000062  BB80 0000 0000  01                   LAB,B3   0
          0 000065  CBF0 0100                            LAB,B4   256,IMO
          0 000067  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          0 00006A       0001                            DC       s:7623,PREL

     1483     7622
     1484     7623    1           ALTRETURN;

   7623   0 00006B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1485     7624
     1486     7625    1   DO1A:
     1487     7626    1           D1$=D$->G$DO.LNK$;

   7626   0 00006E  DFC7 000C            DO1A            STB,B5   D1$,AUTO

     1488     7627    1           D2$=D1$;

   7627   0 000070  DFC7 000E                            STB,B5   D2$,AUTO

     1489     7628    1   DO1D:   IF D1$->G$DO.CONT = '1'B THEN

   7628   0 000072  ECC7 000C            DO1D            LDB,B6   D1$,AUTO
          0 000074  82C6 0002                            LB,'4000'X        2,B6
          0 000076       4000
          0 000077  0581 0005                            BBF      s:7633,PREL

     1490     7629    2           DO;

     1491     7630    2              D1$=D1$->G$DO.LNK$;

   7630   0 000079  DC86                                 LDB,B5   ,B6
          0 00007A  DFC7 000C                            STB,B5   D1$,AUTO

     1492     7631    2              GOTO DO1D;
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:235  

   7631   0 00007C  0FF6                                 B        s:7628,SPREL

     1493     7632    2              END;
     1494     7633    1           D$->G$DO.LNK$=D1$->G$DO.LNK$;

   7633   0 00007D  DC86                                 LDB,B5   ,B6
          0 00007E  CCC7 000A                            LDB,B4   D$,AUTO
          0 000080  DF84                                 STB,B5   ,B4

     1495     7634    1           D1$->G$DO.LNK$=G_DL$;

   7634   0 000081  BC80 0000 0000  xsym                 LDB,B3   G_DL$
          0 000084  BF86                                 STB,B3   ,B6

     1496     7635    1           G_DL$=D2$;

   7635   0 000085  DCC7 000E                            LDB,B5   D2$,AUTO
          0 000087  DF80 0000 0000  xsym                 STB,B5   G_DL$

     1497     7636
     1498     7637                %UNLOCK (G = G_DOGATE);

   7642   0 00008A  BB80 0000 0002  01                   LAB,B3   +2
          0 00008D  CBF0 0100                            LAB,B4   256,IMO
          0 00008F  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          0 000092       0001                            DC       s:7649,PREL

     1499     7644                %UNLOCK (G = G_UDLGATE);

   7649   0 000093  BB80 0000 0000  01                   LAB,B3   0
          0 000096  CBF0 0100                            LAB,B4   256,IMO
          0 000098  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          0 00009B       0001                            DC       s:7651,PREL

     1500     7651    1           RETURN;

PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:236  
   7651   0 00009C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1501     7652    1   END GHS$XXDO;
     1502     7653        %EOD;

PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:237  
--  Include file information  --

   G_HJIT_M.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$XXDO.
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:238  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @ECCSC                     8-0-0/w PTR         r     1 @EVID
     4-0-0/w PTR         r     1 @USR                       A-0-0/w PTR         r     1 D$
     C-0-0/w PTR         r     1 D1$                        E-0-0/w PTR         r     1 D2$
    *0-0-0/w UBIN(16)    r     1 ECCSC                     *0-0-0/w UBIN(16)    r     1 EVID
    *0-0-0/w UBIN(16)    r     1 USR

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$MHJIT$                   0-0-0/w PTR         r     1 G$USRT$
     0-0-0/w PTR         r     1 G_DL$                      0-0-0/w STRC(48)    r     1 G_DOGATE
     0-0-0/w STRC(48)    r     1 G_UDLGATE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DOPTR$                     0-0-0/w STRC(256)   r     1 G$DO
     0-0-0/w STRC(27232) r     1 G$MHJIT                    0-0-0/w STRC(384)   r     1 G$USER(0:0)


   Procedure GHS$XXDO requires 159 words for executable code.
   Procedure GHS$XXDO requires 16 words of local(AUTO) storage.
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:239  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:240  
          MINI XREF LISTING

D$
       569**DCL      7583<<ASSIGN   7584>>IF       7586>>IF       7586>>IF       7591<<ASSIGN   7591>>ASSIGN
      7597<<ASSIGN   7598>>IF       7600>>IF       7603<<ASSIGN   7603>>ASSIGN   7626>>ASSIGN   7633>>ASSIGN
D1$
       570**DCL      7626<<ASSIGN   7627>>ASSIGN   7628>>IF       7630<<ASSIGN   7630>>ASSIGN   7633>>ASSIGN
      7634>>ASSIGN
D2$
       571**DCL      7627<<ASSIGN   7635>>ASSIGN
DO1A
      7626**LABEL    7589--GOTO     7601--GOTO
DO1B
      7584**LABEL    7592--GOTO
DO1C
      7598**LABEL    7604--GOTO
DO1D
      7628**LABEL    7631--GOTO
DOPTR$
       572**DCL      7600>>IF
ECCSC
       566**DCL        34--PROC     7586>>IF       7600--IF
EVID
       567**DCL        34--PROC     7581--IF       7586>>IF
G$DO.CONT
      7510**DCL      7628>>IF
G$DO.ECCSC
      7510**DCL      7586>>IF
G$DO.EVID
      7511**DCL      7586>>IF
G$DO.LNK$
      7506**DCL      7584>>IF       7586>>IF       7586>>IF       7591>>ASSIGN   7598>>IF       7600>>IF
      7603>>ASSIGN   7626>>ASSIGN   7630>>ASSIGN   7633<<ASSIGN   7633>>ASSIGN   7634<<ASSIGN
G$MHJIT.CUN
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:241  
      6967**DCL      7597>>ASSIGN
G$MHJIT.INTCON.HHJIT
      7101**DCL      7101--REDEF
G$MHJIT.INTCON.P$$
      7074**DCL      7074--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
      4019**DCL      4019--REDEF
G$MHJIT.ISA_DBINH.P$$
      5233**DCL      5233--REDEF
G$MHJIT.ISA_IDLE.P$$
      2114**DCL      2114--REDEF
G$MHJIT.ISA_LVL10.P$$
      5536**DCL      5536--REDEF
G$MHJIT.ISA_LVL11.P$$
      5839**DCL      5839--REDEF
G$MHJIT.ISA_LVL12.P$$
      6142**DCL      6142--REDEF
G$MHJIT.ISA_LVL5.P$$
      4322**DCL      4322--REDEF
G$MHJIT.ISA_OV.P$$
      3716**DCL      3716--REDEF
G$MHJIT.ISA_PFS.P$$
      3387**DCL      3387--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
      6749**DCL      6749--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
      4626**DCL      4626--REDEF
G$MHJIT.ISA_SATYR_TRN.P$$
      4930**DCL      4930--REDEF
G$MHJIT.ISA_SCHD.P$$
      6445**DCL      6445--REDEF
G$MHJIT.ISA_WDOG.P$$
      3495**DCL      3495--REDEF
G$MHJIT.TSA_DB.ISA.P$$
      2717**DCL      2717--REDEF
G$MHJIT.TSA_DB.P$$
PL6.E3A0      #005=GHS$XXDO File=GHS$SCHD.:E05TSI                                TUE 07/29/97 21:42 Page:242  
      2588**DCL      2588--REDEF    2589--REDEF
G$MHJIT.TSA_HND.ISA.P$$
      7295**DCL      7295--REDEF
G$MHJIT.TSA_HND.P$$
      7166**DCL      7166--REDEF    7167--REDEF
G$MHJIT.TSA_MON.ISA.P$$
      2329**DCL      2329--REDEF
G$MHJIT.TSA_MON.P$$
      2200**DCL      2200--REDEF    2201--REDEF
G$MHJIT.TSA_OV.ISA.P$$
      3105**DCL      3105--REDEF
G$MHJIT.TSA_OV.P$$
      2976**DCL      2976--REDEF    2977--REDEF
G$MHJIT$
      7497**DCL       639--IMP-PTR  7597>>ASSIGN
G$USER.DL$
       581**DCL      7583--ASSIGN   7597--ASSIGN
G$USER.MISC
       579**DCL       579--REDEF
G$USRT$
      7498**DCL       578--IMP-PTR  7583>>ASSIGN   7597>>ASSIGN
GHH$LOCK
       318**DCL-ENT  7571--CALL     7578--CALL
GHH$UNLOCK
       318**DCL-ENT  7613--CALL     7620--CALL     7642--CALL     7649--CALL
G_DL$
      7499**DCL      7634>>ASSIGN   7635<<ASSIGN
G_DOGATE
       615**DCL      7578<>CALL     7613<>CALL     7642<>CALL
G_UDLGATE
       596**DCL      7571<>CALL     7620<>CALL     7649<>CALL
USR
       565**DCL        34--PROC     7583>>ASSIGN

PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:243  
     1503        1        /*T***********************************************************/
     1504        2        /*T*                                                         */
     1505        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1506        4        /*T*                                                         */
     1507        5        /*T***********************************************************/
     1508        6        /*F*
     1509        7             NAME: GHS$DORUND
     1510        8             PURPOSE:
     1511        9                  To delete all Dolist entries for the specified domain of the current
     1512       10                  user.
     1513       11        */
     1514       12        /*D*
     1515       13             NAME: GHS$DORUND
     1516       14             CALL:
     1517       15                  CALL GHS$DORUND (Domain-number);
     1518       16             PARAMETERS:
     1519       17                  Domain-number is the domain for which entries are to be
     1520       18                  deleted.  Domains are User, Command Processor and Debugger;
     1521       19                  EQUs for the domains are in the GH_SCHD_E.
     1522       20             DESCRIPTION:
     1523       21                  Each Dolist entry of the Current User with a Domain number
     1524       22                  matching Domain-number is deleted.
     1525       23                  If called with no parameter, all dolist entries for this
     1526       24                  user are deleted.
     1527       25
     1528       26                  If the entry has an Entry-pointer, it is called.
     1529       27        */
     1530       28        GHS$DORUND: PROC(DMAIN);
     1531       29
     1532       30        /*         DELETE ALL DO LIST ENTRIES FOR THE CURRENT USER            */
     1533       31        /*         CALLED BY STEP WHEN RUNNING DOWN USER.                     */
     1534       32        /*                                                                    */
     1535       33    1   DCL DMAIN UBIN;                         /* domain #                           */
     1536       34        /*                                                                    */
     1537       35    1   DCL D$ PTR;
     1538       36    1   DCL DD$ PTR;
     1539       37    1   DCL GHS$XXDO ENTRY(3) ALTRET;
PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:244  
     1540       38    1   DCL G$MHJIT$ PTR SYMREF;
     1541       39
     1542       40
     1543       41        %INCLUDE GH_SCHD_M;
     1544      185        %INCLUDE GH_SCHD_E;
     1545      281 S      %INCLUDE GU_LCP6_M;
     1546      282 S      %INCLUDE GH_LCP6_M;
     1547      283        %INCLUDE GH_HARDWARE_M;
     1548      381        %INCLUDE G_HJIT_M;
     1549      526
     1550      527        %G$USER;
     1551      538        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
     1552     7412        %G$DO;
     1553     7475
     1554     7476    1           D$=G$MHJIT.CU$->G$U.DL$;
     1555     7477    1   DORNDN: IF D$ = ADDR(NIL) THEN
     1556     7478    1              RETURN;
     1557     7479    1           DD$=D$;
     1558     7480    1   DORN1:  IF DD$->G$DO.CONT THEN
     1559     7481    2           DO;
     1560     7482    2              DD$=DD$->G$DO.LNK$;
     1561     7483    2              GOTO DORN1;
     1562     7484    2              END;
     1563     7485    1           ELSE
     1564     7486    1              DD$=DD$->G$DO.LNK$;
     1565     7487    1           IF ADDR(DMAIN) = ADDR(NIL) THEN GOTO DO_RUND;
     1566     7488    1           IF D$->G$DO.DMAIN = DMAIN THEN
     1567     7489    2           DO;
     1568     7490    2   DO_RUND:   ;
     1569     7491    2              IF D$->G$DO.ENTER ~= ENTADDR(NIL) THEN
     1570     7492    2                 CALL D$->G$DO.ENTER(D$);
     1571     7493    2              CALL GHS$XXDO(0,D$);
     1572     7494    2              END;
     1573     7495    1           D$=DD$;
     1574     7496    1           GOTO DORNDN;
     1575     7497    1   END;
     1576     7498        %EOD;
PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:245  

PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:246  
--  Include file information  --

   G_HJIT_M.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$DORUND.

   Procedure GHS$DORUND requires 96 words for executable code.
   Procedure GHS$DORUND requires 14 words of local(AUTO) storage.

PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:247  

 Object Unit name= GHS$DORUND                                 File name= GHS$SCHD.:E05TOU
 UTS= JUL 29 '97 21:44:01.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    96     60  GHS$DORUND
    1  RoData even  none     2      2  GHS$DORUND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  GHS$DORUND

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 GHS$XXDO
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$MHJIT$                         r    G$ROS$
PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:248  


     1503        1        /*T***********************************************************/
     1504        2        /*T*                                                         */
     1505        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1506        4        /*T*                                                         */
     1507        5        /*T***********************************************************/
     1508        6        /*F*
     1509        7             NAME: GHS$DORUND
     1510        8             PURPOSE:
     1511        9                  To delete all Dolist entries for the specified domain of the current
     1512       10                  user.
     1513       11        */
     1514       12        /*D*
     1515       13             NAME: GHS$DORUND
     1516       14             CALL:
     1517       15                  CALL GHS$DORUND (Domain-number);
     1518       16             PARAMETERS:
     1519       17                  Domain-number is the domain for which entries are to be
     1520       18                  deleted.  Domains are User, Command Processor and Debugger;
     1521       19                  EQUs for the domains are in the GH_SCHD_E.
     1522       20             DESCRIPTION:
     1523       21                  Each Dolist entry of the Current User with a Domain number
     1524       22                  matching Domain-number is deleted.
     1525       23                  If called with no parameter, all dolist entries for this
     1526       24                  user are deleted.
     1527       25
     1528       26                  If the entry has an Entry-pointer, it is called.
     1529       27        */
     1530       28        GHS$DORUND: PROC(DMAIN);

     28   0 000000  D380 0000 0000  xent GHS$DORUND      LNJ,B5   X6A_AUTO_1
          0 000003       000E 0001                       DC       14,1

     1531       29
     1532       30        /*         DELETE ALL DO LIST ENTRIES FOR THE CURRENT USER            */
     1533       31        /*         CALLED BY STEP WHEN RUNNING DOWN USER.                     */
     1534       32        /*                                                                    */
PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:249  
     1535       33    1   DCL DMAIN UBIN;                         /* domain #                           */
     1536       34        /*                                                                    */
     1537       35    1   DCL D$ PTR;
     1538       36    1   DCL DD$ PTR;
     1539       37    1   DCL GHS$XXDO ENTRY(3) ALTRET;
     1540       38    1   DCL G$MHJIT$ PTR SYMREF;
     1541       39
     1542       40
     1543       41        %INCLUDE GH_SCHD_M;
     1544      185        %INCLUDE GH_SCHD_E;
     1545      281 S      %INCLUDE GU_LCP6_M;
     1546      282 S      %INCLUDE GH_LCP6_M;
     1547      283        %INCLUDE GH_HARDWARE_M;
     1548      381        %INCLUDE G_HJIT_M;
     1549      526
     1550      527        %G$USER;
     1551      538        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
     1552     7412        %G$DO;
     1553     7475
     1554     7476    1           D$=G$MHJIT.CU$->G$U.DL$;

   7476   0 000005  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          0 000008  DCC6 0352                            LDB,B5   850,B6
          0 00000A  CCC5 000D                            LDB,B4   13,B5
          0 00000C  CFC7 0006                            STB,B4   D$,AUTO

     1555     7477    1   DORNDN: IF D$ = ADDR(NIL) THEN

   7477   0 00000E  8DC7 0006            DORNDN          CMN      D$,AUTO
          0 000010  0981 0004                            BNE      s:7479,PREL

     1556     7478    1              RETURN;

   7478   0 000012  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1557     7479    1           DD$=D$;

PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:250  
   7479   0 000015  ECC7 0006                            LDB,B6   D$,AUTO
          0 000017  EFC7 0008                            STB,B6   DD$,AUTO

     1558     7480    1   DORN1:  IF DD$->G$DO.CONT THEN

   7480   0 000019  ECC7 0008            DORN1           LDB,B6   DD$,AUTO
          0 00001B  82C6 0002                            LB,'4000'X        2,B6
          0 00001D       4000
          0 00001E  0581 0005                            BBF      s:7486,PREL

     1559     7481    2           DO;

     1560     7482    2              DD$=DD$->G$DO.LNK$;

   7482   0 000020  DC86                                 LDB,B5   ,B6
          0 000021  DFC7 0008                            STB,B5   DD$,AUTO

     1561     7483    2              GOTO DORN1;

   7483   0 000023  0FF6                                 B        s:7480,SPREL

     1562     7484    2              END;
     1563     7485    1           ELSE
     1564     7486    1              DD$=DD$->G$DO.LNK$;

   7486   0 000024  DC86                                 LDB,B5   ,B6
          0 000025  DFC7 0008                            STB,B5   DD$,AUTO

     1565     7487    1           IF ADDR(DMAIN) = ADDR(NIL) THEN GOTO DO_RUND;

   7487   0 000027  ECC7 0004                            LDB,B6   @DMAIN,AUTO
          0 000029  8DD6                                 CMN      B6
          0 00002A  0901 000A                            BE       s:7489,PREL

     1566     7488    1           IF D$->G$DO.DMAIN = DMAIN THEN

   7488   0 00002C  CCC7 0006                            LDB,B4   D$,AUTO
PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:251  
          0 00002E  E844 0002                            LDR,R6   2,B4
          0 000030  E570 00FF                            AND,R6   255,IMO
          0 000032  E906                                 CMR,R6   ,B6
          0 000033  0981 0026                            BNE      s:7495,PREL

     1567     7489    2           DO;

   7486   0                              DO_RUND         null
     1568     7490    2   DO_RUND:   ;
     1569     7491    2              IF D$->G$DO.ENTER ~= ENTADDR(NIL) THEN

   7491   0 000035  CCC7 0006            DO_RUND         LDB,B4   D$,AUTO
          0 000037  BCC4 0003                            LDB,B3   3,B4
          0 000039  BD80 0000 0000  01                   CMB,B3   0
          0 00003C  0901 000D                            BE       s:7493,PREL

     1570     7492    2                 CALL D$->G$DO.ENTER(D$);

   7492   0 00003E  ABC7 0006                            LAB,B2   D$,AUTO
          0 000040  AFC7 000A                            STB,B2   DD$+2,AUTO
          0 000042  BBC7 000A                            LAB,B3   DD$+2,AUTO
          0 000044  9CC4 0003                            LDB,B1   3,B4
          0 000046  CBF0 0100                            LAB,B4   256,IMO
          0 000048  E381                                 LNJ,B6   ,B1
          0 000049       0001                            DC       s:7493,PREL

     1571     7493    2              CALL GHS$XXDO(0,D$);

   7493   0 00004A  EBF0 0000                            LAB,B6   0,IMO
          0 00004C  DBC7 0006                            LAB,B5   D$,AUTO
          0 00004E  DFC7 000C                            STB,B5   DD$+4,AUTO
          0 000050  EFC7 000A                            STB,B6   DD$+2,AUTO
          0 000052  BBC7 000A                            LAB,B3   DD$+2,AUTO
          0 000054  CBF0 0200                            LAB,B4   512,IMO
          0 000056  E380 0000 0000  xent                 LNJ,B6   GHS$XXDO
          0 000059       0001                            DC       s:7495,PREL

PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:252  
     1572     7494    2              END;

     1573     7495    1           D$=DD$;

   7495   0 00005A  ECC7 0008                            LDB,B6   DD$,AUTO
          0 00005C  EFC7 0006                            STB,B6   D$,AUTO

     1574     7496    1           GOTO DORNDN;

   7496   0 00005E  0F81 FFAF                            B        s:7477,PREL
     1575     7497    1   END;
     1576     7498        %EOD;

PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:253  
--  Include file information  --

   G_HJIT_M.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$DORUND.
PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:254  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DMAIN                     6-0-0/w PTR         r     1 D$
     8-0-0/w PTR         r     1 DD$                       *0-0-0/w UBIN(16)    r     1 DMAIN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$MHJIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(256)   r     1 G$DO                       0-0-0/w STRC(27232) r     1 G$MHJIT
     0-0-0/w STRC(384)   r     1 G$U


   Procedure GHS$DORUND requires 96 words for executable code.
   Procedure GHS$DORUND requires 14 words of local(AUTO) storage.
PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:255  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:256  
          MINI XREF LISTING

D$
        35**DCL      7476<<ASSIGN   7477>>IF       7479>>ASSIGN   7488>>IF       7491>>IF       7492>>CALL
      7492<>CALL     7493<>CALL     7495<<ASSIGN
DD$
        36**DCL      7479<<ASSIGN   7480>>IF       7482<<ASSIGN   7482>>ASSIGN   7486<<ASSIGN   7486>>ASSIGN
      7495>>ASSIGN
DMAIN
        33**DCL        28--PROC     7487--IF       7488>>IF
DORN1
      7480**LABEL    7483--GOTO
DORNDN
      7477**LABEL    7496--GOTO
DO_RUND
      7486**LABEL    7487--GOTO
G$DO.CONT
      7421**DCL      7480>>IF
G$DO.DMAIN
      7421**DCL      7488>>IF
G$DO.ENTER
      7421**DCL      7491>>IF       7492>>CALL
G$DO.LNK$
      7417**DCL      7482>>ASSIGN   7486>>ASSIGN
G$MHJIT.CU$
      6883**DCL      7476>>ASSIGN
G$MHJIT.INTCON.HHJIT
      7017**DCL      7017--REDEF
G$MHJIT.INTCON.P$$
      6990**DCL      6990--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
      3935**DCL      3935--REDEF
G$MHJIT.ISA_DBINH.P$$
      5149**DCL      5149--REDEF
PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:257  
G$MHJIT.ISA_IDLE.P$$
      2030**DCL      2030--REDEF
G$MHJIT.ISA_LVL10.P$$
      5452**DCL      5452--REDEF
G$MHJIT.ISA_LVL11.P$$
      5755**DCL      5755--REDEF
G$MHJIT.ISA_LVL12.P$$
      6058**DCL      6058--REDEF
G$MHJIT.ISA_LVL5.P$$
      4238**DCL      4238--REDEF
G$MHJIT.ISA_OV.P$$
      3632**DCL      3632--REDEF
G$MHJIT.ISA_PFS.P$$
      3303**DCL      3303--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
      6665**DCL      6665--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
      4542**DCL      4542--REDEF
G$MHJIT.ISA_SATYR_TRN.P$$
      4846**DCL      4846--REDEF
G$MHJIT.ISA_SCHD.P$$
      6361**DCL      6361--REDEF
G$MHJIT.ISA_WDOG.P$$
      3411**DCL      3411--REDEF
G$MHJIT.TSA_DB.ISA.P$$
      2633**DCL      2633--REDEF
G$MHJIT.TSA_DB.P$$
      2504**DCL      2504--REDEF    2505--REDEF
G$MHJIT.TSA_HND.ISA.P$$
      7211**DCL      7211--REDEF
G$MHJIT.TSA_HND.P$$
      7082**DCL      7082--REDEF    7083--REDEF
G$MHJIT.TSA_MON.ISA.P$$
      2245**DCL      2245--REDEF
G$MHJIT.TSA_MON.P$$
      2116**DCL      2116--REDEF    2117--REDEF
PL6.E3A0      #006=GHS$DORUND File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:258  
G$MHJIT.TSA_OV.ISA.P$$
      3021**DCL      3021--REDEF
G$MHJIT.TSA_OV.P$$
      2892**DCL      2892--REDEF    2893--REDEF
G$MHJIT$
        38**DCL       555--IMP-PTR  7476>>ASSIGN
G$U.DL$
       535**DCL      7476>>ASSIGN
G$U.MISC
       533**DCL       533--REDEF
GHS$XXDO
        37**DCL-ENT  7493--CALL

PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:259  
     1577        1        /*T***********************************************************/
     1578        2        /*T*                                                         */
     1579        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1580        4        /*T*                                                         */
     1581        5        /*T***********************************************************/
     1582        6        /*F*
     1583        7             NAME: GHS$ADDUSR
     1584        8             PURPOSE:
     1585        9                  To obtain a User Table entry, UHJIT and ROS segments for
     1586       10                  a new user and do the appropriate initialization.
     1587       11             DESCRIPTION:
     1588       12                  This procedure obtains a user number from the Null state
     1589       13                  queue, memory for a UHJIT, ROS and TSTACK segments.  The User
     1590       14                  Table entry and segments are initialized.  The user is placed
     1591       15                  in an executable state. Parameters indicate the user number
     1592       16                   and any possible error.
     1593       17        */
     1594       18        /*D*
     1595       19             NAME: GHS$NXTUSR
     1596       20             CALL:
     1597       21                  CALL GHS$ADDUSR (#-interrupts,
     1598       22                                   User-number,
     1599       23                                   ROS-page,
     1600       24                                   Result-code);
     1601       25             PARAMETERS:
     1602       26                  #-interrupts indicates the number of HHJITs to allocate.
     1603       27                  User-number is the resultant User number.
     1604       28                  ROS-page id the physical page number of the ROS.
     1605       29                  Result-code is set to the appropriate error code.
     1606       30             DESCRIPTION:
     1607       31                  A user-number is unlinked from the Null state queue and the
     1608       32                  corresponding User Table entry is initialized.  If unable to
     1609       33                  obtain a user, Result-code is set.  Memory is obtained from
     1610       34                  MM for the UHJIT, ROS and TSTACK segments.  If unable to
     1611       35                  obtain memory, Result-code is set.  The MMU images, ISA and
     1612       36                  TSA are initialized in UHJIT.  The pointers to tables within
     1613       37                  the ROS are initialized, (JIT, ECCB, TCB).  The users
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:260  
     1614       38                  TSTACK is initialized.  Upon completion, everything should
     1615       39                  be ready to run the user.
     1616       40                                                                           */
     1617       41
     1618       42        GHS$ADDUSR: PROC (INT#,MODE,USER,ROSPP,ERRCODE);
     1619       43
     1620       44 S      %INCLUDE G_LCP6_E;
     1621       45        %INCLUDE GH_SCHD_M;
     1622      189        %INCLUDE GH_SCHD_E;
     1623      285        %INCLUDE GH_GATE_M;
     1624      326 S      %INCLUDE GU_LCP6_M;
     1625      327 S      %INCLUDE GH_LCP6_M;
     1626      328        %INCLUDE GH_HARDWARE_M;
     1627      426        %INCLUDE G_HJIT_M;
     1628      571        %INCLUDE G_ROS_M;
     1629      653 S      %INCLUDE GF_LCP6_M;
     1630      654        %INCLUDE G_JIT_M;
     1631      919        %INCLUDE KL_ERRORS_C;
     1632      961        %INCLUDE P_FEP_M;
     1633     1399        %INCLUDE KL_MACRO_C;
     1634     4751        %INCLUDE K_ID_E;
     1635     4801
     1636     4802        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
     1637     4813        %G$USER (FPTN=G$U,STCLASS="BASED(U$)");
     1638     4824        %G$ASDT;
     1639     4853        %G$UHJIT (STCLASS="BASED(G$WINDOW1$)");
     1640     7827        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
     1641    14701        %G$HHJIT;
     1642    16845        %G$ROS   (STCLASS="BASED(G$WINDOW1$)",FULL=YES);
     1643    17796        %G$ROS   (FPTN=ROS,STCLASS="BASED(G$ROS$)",FULL=YES);
     1644    18747        %G$EXCFR;
     1645    19129        %G$STACK_HDR (FPTN=HDR,STCLASS=BASED);
     1646    19145        %GATE (FPTN=G_SCHDGATE,STCLASS=SYMREF);
     1647    19164        %K#ENTID_E;
     1648    19183        %PS_LCP6STT (STCLASS=SYMREF);
     1649    19687        %G$JIT_E;
     1650    19749
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:261  
     1651    19750    1   DCL BASE_PRIO UBIN CONSTANT INIT(1);
     1652    19751
     1653    19752    1   DCL INT# UBIN;
     1654    19753    1   DCL MODE UBIN;
     1655    19754    1   DCL ROSPP UBIN;
     1656    19755    1   DCL USER UBIN;
     1657    19756    1   DCL ERRCODE UBIN;
     1658    19757    1   DCL SIZE UBIN WORD;
     1659    19758    1   DCL INIT_SZ UBIN WORD;
     1660    19759    1   DCL PAGE UBIN WORD;
     1661    19760
     1662    19761    1   DCL G$WINDOW1$ PTR SYMREF;
     1663    19762    1   DCL G$MHJIT$ PTR SYMREF;
     1664    19763    1   DCL G$UHJIT$ PTR SYMREF;
     1665    19764    1   DCL G$ROS$ PTR SYMREF;
     1666    19765    1   DCL G$USRT$ PTR SYMREF;
     1667    19766    1   DCL G$BPAR1$ PTR SYMREF;
     1668    19767    1   DCL G_CUR_USRS(0:0) UBIN SYMREF;
     1669    19768    1   DCL G_MAX_USRS(0:0) UBIN SYMREF;
     1670    19769    1   DCL GH_HQ(0:0) UBIN SYMREF;
     1671    19770    1   DCL GM_ASHUF UBIN(16) SYMREF;
     1672    19771    1   DCL GM_HSHUF UBIN(16) SYMREF;
     1673    19772    1   DCL GM_TSTKU_PGSZ UBIN SYMREF;
     1674    19773    1   DCL G$TSTACK$ PTR SYMREF;
     1675    19774
     1676    19775    1   DCL GHH$SETASDT_ASD ENTRY(3);
     1677    19776    1   DCL GMA$GETPS ENTRY(2) ALTRET;
     1678    19777    1   DCL GMA$RELPS ENTRY(2) ALTRET;
     1679    19778    1   DCL GMA$PS2USR ENTRY(2) ALTRET;
     1680    19779    1   DCL GHS$CHSE ENTRY(1) ALTRET;
     1681    19780    1   DCL X6A_MAUTO ENTRY(3) ;
     1682    19781
     1683    19782    1   DCL UHJITPP UBIN;
     1684    19783    1   DCL TSTKPP UBIN;
     1685    19784    1   DCL USR# UBIN;
     1686    19785    1   DCL S$ PTR;
     1687    19786    1   DCL U$ PTR;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:262  
     1688    19787    1   DCL I UBIN;
     1689    19788
     1690    19789        %EJECT;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:263  
     1691    19790    1           IF G_CUR_USRS(MODE) < G_MAX_USRS(MODE) THEN
     1692    19791    1              IF GH_HQ(%GH_NULL) ~= 0 AND G_CUR_USRS(0) < G_MAX_USRS(0) THEN
     1693    19792    2              DO;
     1694    19793    2                 CALL GETSYSID (I) ALTRET(NO_SYSID);
     1695    19794    2                 CALL GETUSR;
     1696    19795    2                 CALL GETSEGS ALTRET(NO_SEGS);
     1697    19796    2                 G_CUR_USRS(MODE) = G_CUR_USRS(MODE) + 1;
     1698    19797    2                 G_CUR_USRS(0) = G_CUR_USRS(0) + 1;
     1699    19798    2                 IF G_CUR_USRS(0) > PS_LCP6STT.PEAK_USERS
     1700    19799    2                 THEN PS_LCP6STT.PEAK_USERS = G_CUR_USRS(0);
     1701    19800    2                 USER = USR#;
     1702    19801    2                 CALL GHS$CHSE (USR#);
     1703    19802
     1704    19803    2                 ERRCODE=0;
     1705    19804    2                 END;
     1706    19805    1              ELSE ERRCODE = %E$NUSR;
     1707    19806    1           ELSE ERRCODE = %E$NOOL;
     1708    19807    1           RETURN;
     1709    19808
     1710    19809    1   NO_SYSID: ERRCODE=%E$NOSYD;
     1711    19810    1   NO_SEGS: RETURN;
     1712    19811
     1713    19812        /*E* ERROR: GHS-E$NUSR-E
     1714    19813             MESSAGE: The FEP is currently running the maximum users allowed.
     1715    19814        */
     1716    19815
     1717    19816        /*E* ERROR: GHS-E$NOOL-E
     1718    19817             MESSAGE: The maximum number of users for that mode are already running.
     1719    19818        */
     1720    19819
     1721    19820        /*E* ERROR: GHS-E$NOSYD-E
     1722    19821             MESSAGE: Can't start FEP user - no SYSID available
     1723    19822        */
     1724    19823        %EJECT;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:264  
     1725    19824    1   GETSEGS: PROC ALTRET;
     1726    19825
     1727    19826    2   DCL ASDT(0:30) UBIN(32) BASED;
     1728    19827
     1729    19828        /*If a memory shuffle is necessary, force it now before we get the
     1730    19829          initial pages by allocating the pages as a chunk and then releasing
     1731    19830          them.  They may then be re-allocated as the three individual
     1732    19831          segments.
     1733    19832        */
     1734    19833    2           INIT_SZ = (SIZEW(G$UHJIT)+255)/256
     1735    19834    2             + (SIZEW(G$ROS)+255)/256
     1736    19835    2             + GM_TSTKU_PGSZ;
     1737    19836    2           CALL GMA$GETPS (UHJITPP, INIT_SZ) ALTRET(GUHY);
     1738    19837    2           CALL GMA$RELPS (UHJITPP, INIT_SZ);
     1739    19838
     1740    19839    2           INIT_SZ = 0;
     1741    19840    2           CALL GMA$GETPS (UHJITPP,(SIZEW(G$UHJIT)+255)/256) ALTRET(GUHX);
     1742    19841    2           INIT_SZ = (SIZEW(G$UHJIT)+255)/256;
     1743    19842    2           CALL GMA$GETPS (TSTKPP, GM_TSTKU_PGSZ) ALTRET(NOSTK);
     1744    19843    2           INIT_SZ = INIT_SZ + GM_TSTKU_PGSZ;
     1745    19844    2           CALL GMA$GETPS (ROSPP,(SIZEW(G$ROS)+255)/256) ALTRET(GROX);
     1746    19845    2           INIT_SZ = INIT_SZ + (SIZEW(G$ROS)+255)/256;
     1747    19846
     1748    19847        /*GMA decremented ASHUF because we are running on behalf of the NODEADMN handler.
     1749    19848        */
     1750    19849    2           IF (MODE ~= %G_M_HANDLER#) AND (MODE ~= 0)
     1751    19850    3           THEN DO;
     1752    19851    3              GM_ASHUF = GM_ASHUF + INIT_SZ;
     1753    19852    3              GM_HSHUF = GM_HSHUF - INIT_SZ;
     1754    19853    3              END;
     1755    19854
     1756    19855    2           G$U.UHJITPP = UHJITPP;          /* UHJIT address                      */
     1757    19856
     1758    19857        /*  Map UHJIT segment into window                                */
     1759    19858
     1760    19859    2           PAGE = G$MHJIT.ASDT_BIGFOOT.UMHJIT.BASE;
     1761    19860    2           SIZE = (SIZEW(G$UHJIT)-1)/256;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:265  
     1762    19861    2           CALL GHH$SETASDT_ASD(G$WINDOW1$,UHJITPP,SIZE);
     1763    19862    2           CALL GHH$SETASDT_ASD(G$BPAR1$,PAGE,SIZE);
     1764    19863    2           G$WINDOW1$->G$UHJIT = G$BPAR1$->G$UHJIT;
     1765    19864
     1766    19865        /*  Initialize MMU images                                        */
     1767    19866
     1768    19867    2           G$UHJIT.ASDT_USR.UHJIT.BASE = UHJITPP;
     1769    19868    2           G$UHJIT.ASDT_MCL.UHJIT = G$UHJIT.ASDT_USR.UHJIT;
     1770    19869    2           G$UHJIT.ASDT_MCL.TSTACKU.BASE = TSTKPP;
     1771    19870    2           G$UHJIT.ASDT_MCL.TSTACKU.SIZE = GM_TSTKU_PGSZ -1;
     1772    19871    2           G$UHJIT.ASDT_USR.TSTACKU = G$UHJIT.ASDT_MCL.TSTACKU;
     1773    19872    2           G$UHJIT.ASDT_USR.ROS.BASE = ROSPP;
     1774    19873    2           G$UHJIT.ASDT_USR.ROS.SIZE = (SIZEW(G$ROS)-1)/256;
     1775    19874    2           G$UHJIT.ASDT_USR.ROS.RP = %G_R_USR#;
     1776    19875    2           G$UHJIT.ASDT_MCL.ROS = G$UHJIT.ASDT_USR.ROS;
     1777    19876
     1778    19877
     1779    19878    2           PAGE = G$MHJIT.ASDT_BIGFOOT.ROS.BASE;
     1780    19879    2           SIZE = (SIZEW(G$ROS)-1)/256;
     1781    19880    2           CALL GHH$SETASDT_ASD(G$WINDOW1$,ROSPP,SIZE);
     1782    19881    2           CALL GHH$SETASDT_ASD(G$BPAR1$,PAGE,SIZE);
     1783    19882    2           G$WINDOW1$->G$ROS = G$BPAR1$->G$ROS;
     1784    19883
     1785    19884    2           G$ROS.JIT.USR# = USR#;
     1786    19885    2           G$ROS.JIT.SYSID = I;
     1787    19886
     1788    19887
     1789    19888    2           SIZE = GM_TSTKU_PGSZ -1;
     1790    19889    2           CALL GHH$SETASDT_ASD(G$WINDOW1$,TSTKPP,SIZE);
     1791    19890    2           SIZE = GM_TSTKU_PGSZ * 256;
     1792    19891    2           CALL X6A_MAUTO (G$WINDOW1$ , SIZE, G$TSTACK$);
     1793    19892
     1794    19893        /*   Let MM know that these segments belong to the user   */
     1795    19894
     1796    19895
     1797    19896    2           CALL GMA$PS2USR (UHJITPP,USR#);
     1798    19897    2           CALL GMA$PS2USR (ROSPP,USR#);
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:266  
     1799    19898    2           CALL GMA$PS2USR (TSTKPP,USR#);
     1800    19899    2           RETURN;
     1801    19900
     1802    19901
     1803    19902    2   GROX:   CALL GMA$RELPS (TSTKPP, GM_TSTKU_PGSZ);
     1804    19903    2   NOSTK:  CALL GMA$RELPS (UHJITPP,(SIZEW(G$UHJIT)+255)/256);
     1805    19904    2   GUHX:   ;
     1806    19905    2           GM_ASHUF = GM_ASHUF + INIT_SZ;
     1807    19906    2           GM_HSHUF = GM_HSHUF - INIT_SZ;
     1808    19907    2   GUHY:
     1809    19908                %LOCK (G=G_SCHDGATE);
     1810    19915
     1811    19916    2           G$U.FL = GH_HQ(%GH_NULL);
     1812    19917    2           G$USER.BL(GH_HQ(%GH_NULL)) = USR#;
     1813    19918    2           GH_HQ(%GH_NULL) = USR#;
     1814    19919
     1815    19920                %UNLOCK (G=G_SCHDGATE);
     1816    19927
     1817    19928    2           ERRCODE=%E$NJIT;
     1818    19929    2           ALTRETURN;
     1819    19930    2   END GETSEGS;
     1820    19931
     1821    19932        %EJECT;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:267  
     1822    19933    1   GETUSR: PROC;
     1823    19934
     1824    19935
     1825    19936                %LOCK (G=G_SCHDGATE);
     1826    19943
     1827    19944    2           USR#=GH_HQ(%GH_NULL);
     1828    19945    2           U$=ADDR(G$USER(USR#));
     1829    19946    2           GH_HQ(%GH_NULL)=G$U.FL;
     1830    19947
     1831    19948                %UNLOCK (G=G_SCHDGATE);
     1832    19955
     1833    19956    2           G$USER.BL(G$U.FL)=0;
     1834    19957    2           G$U.FLG='0'B;
     1835    19958    2           G$U.ASYNCH='0'B;
     1836    19959    2           G$U.MF=0;
     1837    19960    2           G$U.DL$=ADDR(NIL);
     1838    19961    2           G$U.MODE=MODE;
     1839    19962    2           IF MODE = %G_M_HANDLER# THEN
     1840    19963    2              G$U.PRIOB=BASE_PRIO+3;
     1841    19964    2           ELSE
     1842    19965    2              G$U.PRIOB=BASE_PRIO;
     1843    19966    2           G$U.PRIO=BASE_PRIO;
     1844    19967    2           G$U.SYSID=I;
     1845    19968    2           RETURN;
     1846    19969    2   END GETUSR;
     1847    19970
     1848    19971
     1849    19972    1   GETSYSID: PROC(ID) ALTRET;
     1850    19973
     1851    19974    2   DCL G_SYSID UBIN STATIC SYMDEF INIT(0);
     1852    19975    2   DCL ID UBIN;
     1853    19976
     1854    19977    2           G_SYSID=G_SYSID+1;
     1855    19978    2           ID=G_SYSID;
     1856    19979    2           RETURN;
     1857    19980    2   END GETSYSID;
     1858    19981    1   END;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:268  
     1859    19982        %EOD;

PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:269  
--  Include file information  --

   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$ADDUSR.

   Procedure GHS$ADDUSR requires 749 words for executable code.
   Procedure GHS$ADDUSR requires 36 words of local(AUTO) storage.

PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:270  

 Object Unit name= GHS$ADDUSR                                 File name= GHS$SCHD.:E05TOU
 UTS= JUL 29 '97 21:44:48.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      1      1  GHS$ADDUSR
    1   Data  even  none     1      1  GHS$ADDUSR
    2   Proc  even  none   749    2ED  GHS$ADDUSR
    3  RoData even  none     2      2  GHS$ADDUSR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        5  GHS$ADDUSR

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    1      0  G_SYSID
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:271  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHS$CHSE
 yes     yes           Std       2 GMA$GETPS
 yes     yes           Std       2 GMA$PS2USR
 yes     yes           Std       2 GMA$RELPS
         yes           Std       3 GHH$SETASDT_ASD
 yes     yes           Std       1 GHH$UNLOCK
         yes           Std       3 X6A_MAUTO
 yes     yes           Std       1 GHH$LOCK
                       nStd      0 X6A_AUTO_N
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G_SCHDGATE                            PS_LCP6STT                            G$WINDOW1$
     G$MHJIT$                              G$ROS$                                G$USRT$
     G$BPAR1$                              G_CUR_USRS                            G_MAX_USRS
     GH_HQ                                 GM_ASHUF                              GM_HSHUF
     GM_TSTKU_PGSZ                         G$TSTACK$                        r    G$ROS$
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:272  


     1577        1        /*T***********************************************************/
     1578        2        /*T*                                                         */
     1579        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1580        4        /*T*                                                         */
     1581        5        /*T***********************************************************/
     1582        6        /*F*
     1583        7             NAME: GHS$ADDUSR
     1584        8             PURPOSE:
     1585        9                  To obtain a User Table entry, UHJIT and ROS segments for
     1586       10                  a new user and do the appropriate initialization.
     1587       11             DESCRIPTION:
     1588       12                  This procedure obtains a user number from the Null state
     1589       13                  queue, memory for a UHJIT, ROS and TSTACK segments.  The User
     1590       14                  Table entry and segments are initialized.  The user is placed
     1591       15                  in an executable state. Parameters indicate the user number
     1592       16                   and any possible error.
     1593       17        */
     1594       18        /*D*
     1595       19             NAME: GHS$NXTUSR
     1596       20             CALL:
     1597       21                  CALL GHS$ADDUSR (#-interrupts,
     1598       22                                   User-number,
     1599       23                                   ROS-page,
     1600       24                                   Result-code);
     1601       25             PARAMETERS:
     1602       26                  #-interrupts indicates the number of HHJITs to allocate.
     1603       27                  User-number is the resultant User number.
     1604       28                  ROS-page id the physical page number of the ROS.
     1605       29                  Result-code is set to the appropriate error code.
     1606       30             DESCRIPTION:
     1607       31                  A user-number is unlinked from the Null state queue and the
     1608       32                  corresponding User Table entry is initialized.  If unable to
     1609       33                  obtain a user, Result-code is set.  Memory is obtained from
     1610       34                  MM for the UHJIT, ROS and TSTACK segments.  If unable to
     1611       35                  obtain memory, Result-code is set.  The MMU images, ISA and
     1612       36                  TSA are initialized in UHJIT.  The pointers to tables within
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:273  
     1613       37                  the ROS are initialized, (JIT, ECCB, TCB).  The users
     1614       38                  TSTACK is initialized.  Upon completion, everything should
     1615       39                  be ready to run the user.
     1616       40                                                                           */
     1617       41
     1618       42        GHS$ADDUSR: PROC (INT#,MODE,USER,ROSPP,ERRCODE);

     42   2 000000  D380 0000 0000  xent GHS$ADDUSR      LNJ,B5   X6A_AUTO_N
          2 000003       0024 0005                       DC       36,5

     1619       43
     1620       44 S      %INCLUDE G_LCP6_E;
     1621       45        %INCLUDE GH_SCHD_M;
     1622      189        %INCLUDE GH_SCHD_E;
     1623      285        %INCLUDE GH_GATE_M;
     1624      326 S      %INCLUDE GU_LCP6_M;
     1625      327 S      %INCLUDE GH_LCP6_M;
     1626      328        %INCLUDE GH_HARDWARE_M;
     1627      426        %INCLUDE G_HJIT_M;
     1628      571        %INCLUDE G_ROS_M;
     1629      653 S      %INCLUDE GF_LCP6_M;
     1630      654        %INCLUDE G_JIT_M;
     1631      919        %INCLUDE KL_ERRORS_C;
     1632      961        %INCLUDE P_FEP_M;
     1633     1399        %INCLUDE KL_MACRO_C;
     1634     4751        %INCLUDE K_ID_E;
     1635     4801
     1636     4802        %G$USER (FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
     1637     4813        %G$USER (FPTN=G$U,STCLASS="BASED(U$)");
     1638     4824        %G$ASDT;
     1639     4853        %G$UHJIT (STCLASS="BASED(G$WINDOW1$)");
     1640     7827        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
     1641    14701        %G$HHJIT;
     1642    16845        %G$ROS   (STCLASS="BASED(G$WINDOW1$)",FULL=YES);
     1643    17796        %G$ROS   (FPTN=ROS,STCLASS="BASED(G$ROS$)",FULL=YES);
     1644    18747        %G$EXCFR;
     1645    19129        %G$STACK_HDR (FPTN=HDR,STCLASS=BASED);
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:274  
     1646    19145        %GATE (FPTN=G_SCHDGATE,STCLASS=SYMREF);
     1647    19164        %K#ENTID_E;
     1648    19183        %PS_LCP6STT (STCLASS=SYMREF);
     1649    19687        %G$JIT_E;
     1650    19749
     1651    19750    1   DCL BASE_PRIO UBIN CONSTANT INIT(1);
     1652    19751
     1653    19752    1   DCL INT# UBIN;
     1654    19753    1   DCL MODE UBIN;
     1655    19754    1   DCL ROSPP UBIN;
     1656    19755    1   DCL USER UBIN;
     1657    19756    1   DCL ERRCODE UBIN;
     1658    19757    1   DCL SIZE UBIN WORD;
     1659    19758    1   DCL INIT_SZ UBIN WORD;
     1660    19759    1   DCL PAGE UBIN WORD;
     1661    19760
     1662    19761    1   DCL G$WINDOW1$ PTR SYMREF;
     1663    19762    1   DCL G$MHJIT$ PTR SYMREF;
     1664    19763    1   DCL G$UHJIT$ PTR SYMREF;
     1665    19764    1   DCL G$ROS$ PTR SYMREF;
     1666    19765    1   DCL G$USRT$ PTR SYMREF;
     1667    19766    1   DCL G$BPAR1$ PTR SYMREF;
     1668    19767    1   DCL G_CUR_USRS(0:0) UBIN SYMREF;
     1669    19768    1   DCL G_MAX_USRS(0:0) UBIN SYMREF;
     1670    19769    1   DCL GH_HQ(0:0) UBIN SYMREF;
     1671    19770    1   DCL GM_ASHUF UBIN(16) SYMREF;
     1672    19771    1   DCL GM_HSHUF UBIN(16) SYMREF;
     1673    19772    1   DCL GM_TSTKU_PGSZ UBIN SYMREF;
     1674    19773    1   DCL G$TSTACK$ PTR SYMREF;
     1675    19774
     1676    19775    1   DCL GHH$SETASDT_ASD ENTRY(3);
     1677    19776    1   DCL GMA$GETPS ENTRY(2) ALTRET;
     1678    19777    1   DCL GMA$RELPS ENTRY(2) ALTRET;
     1679    19778    1   DCL GMA$PS2USR ENTRY(2) ALTRET;
     1680    19779    1   DCL GHS$CHSE ENTRY(1) ALTRET;
     1681    19780    1   DCL X6A_MAUTO ENTRY(3) ;
     1682    19781
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:275  
     1683    19782    1   DCL UHJITPP UBIN;
     1684    19783    1   DCL TSTKPP UBIN;
     1685    19784    1   DCL USR# UBIN;
     1686    19785    1   DCL S$ PTR;
     1687    19786    1   DCL U$ PTR;
     1688    19787    1   DCL I UBIN;
     1689    19788
     1690    19789        %EJECT;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:276  
     1691    19790    1           IF G_CUR_USRS(MODE) < G_MAX_USRS(MODE) THEN

  19790   2 000005  ECC7 0006                            LDB,B6   @MODE,AUTO
          2 000007  B806                                 LDR,R3   ,B6
          2 000008  E830 0000 0000  xsym                 LDR,R6   G_CUR_USRS,R3
          2 00000B  E930 0000 0000  xsym                 CMR,R6   G_MAX_USRS,R3
          2 00000E  0281 0055                            BGE      s:19806,PREL

     1692    19791    1              IF GH_HQ(%GH_NULL) ~= 0 AND G_CUR_USRS(0) < G_MAX_USRS(0) THEN

  19791   2 000010  D800 0000 001F  xsym                 LDR,R5   GH_HQ+31
          2 000013  5901 0049                            BEZ,R5   s:19805,PREL
          2 000015  C800 0000 0000  xsym                 LDR,R4   G_CUR_USRS
          2 000018  C900 0000 0000  xsym                 CMR,R4   G_MAX_USRS
          2 00001B  0281 0041                            BGE      s:19805,PREL

     1693    19792    2              DO;

     1694    19793    2                 CALL GETSYSID (I) ALTRET(NO_SYSID);

  19793   2 00001D  DBC7 0018                            LAB,B5   I,AUTO
          2 00001F  DFC7 001C                            STB,B5   I+4,AUTO
          2 000021  E3C0 02BC                            LNJ,B6   s:0,PREL
          2 000023       0049                            DC       s:19809,PREL

     1695    19794    2                 CALL GETUSR;

  19794   2 000024  E3C0 025C                            LNJ,B6   s:0,PREL
          2 000026       0001                            DC       s:19795,PREL

     1696    19795    2                 CALL GETSEGS ALTRET(NO_SEGS);

  19795   2 000027  E3C0 004C                            LNJ,B6   s:0,PREL
          2 000029       0048                            DC       s:19810,PREL

     1697    19796    2                 G_CUR_USRS(MODE) = G_CUR_USRS(MODE) + 1;

PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:277  
  19796   2 00002A  ECC7 0006                            LDB,B6   @MODE,AUTO
          2 00002C  B806                                 LDR,R3   ,B6
          2 00002D  8AB0 0000 0000  xsym                 INC      G_CUR_USRS,R3

     1698    19797    2                 G_CUR_USRS(0) = G_CUR_USRS(0) + 1;

  19797   2 000030  8A80 0000 0000  xsym                 INC      G_CUR_USRS

     1699    19798    2                 IF G_CUR_USRS(0) > PS_LCP6STT.PEAK_USERS

  19798   2 000033  F800 0000 0000  xsym                 LDR,R7   G_CUR_USRS
          2 000036  6C00                                 LDV,R6   0
          2 000037  8480 0000 007E  xsym                 SID      PS_LCP6STT+126
          2 00003A  0681 000C                            BCF      s:19800,PREL
          2 00003C  6981 0003                            BNEZ,R6  s:19799,PREL
          2 00003E  7901 0008                            BEZ,R7   s:19800,PREL

     1700    19799    2                 THEN PS_LCP6STT.PEAK_USERS = G_CUR_USRS(0);

  19799   2 000040  F800 0000 0000  xsym                 LDR,R7   G_CUR_USRS
          2 000043  6C00                                 LDV,R6   0
          2 000044  8D00 0000 007E  xsym                 SDI      PS_LCP6STT+126

     1701    19800    2                 USER = USR#;

  19800   2 000047  DCC7 0008                            LDB,B5   @USER,AUTO
          2 000049  E847 0013                            LDR,R6   USR#,AUTO
          2 00004B  EF05                                 STR,R6   ,B5

     1702    19801    2                 CALL GHS$CHSE (USR#);

  19801   2 00004C  CBC7 0013                            LAB,B4   USR#,AUTO
          2 00004E  CFC7 001E                            STB,B4   @ID+2,AUTO
          2 000050  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 000052  CBF0 0100                            LAB,B4   256,IMO
          2 000054  E380 0000 0000  xent                 LNJ,B6   GHS$CHSE
          2 000057       0001                            DC       s:19803,PREL
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:278  

     1703    19802
     1704    19803    2                 ERRCODE=0;

  19803   2 000058  ECC7 000C                            LDB,B6   @ERRCODE,AUTO
          2 00005A  8706                                 CL       ,B6

     1705    19804    2                 END;

  19804   2 00005B  0F81 000D                            B        s:19807,PREL

     1706    19805    1              ELSE ERRCODE = %E$NUSR;

  19805   2 00005D  DCC7 000C                            LDB,B5   @ERRCODE,AUTO
          2 00005F  C870 04B3                            LDR,R4   1203,IMO
          2 000061  CF05                                 STR,R4   ,B5
          2 000062  0F81 0006                            B        s:19807,PREL

     1707    19806    1           ELSE ERRCODE = %E$NOOL;

  19806   2 000064  DCC7 000C                            LDB,B5   @ERRCODE,AUTO
          2 000066  D870 04B4                            LDR,R5   1204,IMO
          2 000068  DF05                                 STR,R5   ,B5

     1708    19807    1           RETURN;

  19807   2 000069  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1709    19808
     1710    19809    1   NO_SYSID: ERRCODE=%E$NOSYD;

  19809   2 00006C  ECC7 000C            NO_SYSID        LDB,B6   @ERRCODE,AUTO
          2 00006E  E870 04B5                            LDR,R6   1205,IMO
          2 000070  EF06                                 STR,R6   ,B6

     1711    19810    1   NO_SEGS: RETURN;

PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:279  
  19810   2 000071  C380 0000 0000  xent NO_SEGS         LNJ,B4   X6A_ARET

     1712    19811
     1713    19812        /*E* ERROR: GHS-E$NUSR-E
     1714    19813             MESSAGE: The FEP is currently running the maximum users allowed.
     1715    19814        */
     1716    19815
     1717    19816        /*E* ERROR: GHS-E$NOOL-E
     1718    19817             MESSAGE: The maximum number of users for that mode are already running.
     1719    19818        */
     1720    19819
     1721    19820        /*E* ERROR: GHS-E$NOSYD-E
     1722    19821             MESSAGE: Can't start FEP user - no SYSID available
     1723    19822        */
     1724    19823        %EJECT;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:280  
     1725    19824    1   GETSEGS: PROC ALTRET;

  19824   2 000074  EFC7 001A            GETSEGS         STB,B6   I+2,AUTO

     1726    19825
     1727    19826    2   DCL ASDT(0:30) UBIN(32) BASED;
     1728    19827
     1729    19828        /*If a memory shuffle is necessary, force it now before we get the
     1730    19829          initial pages by allocating the pages as a chunk and then releasing
     1731    19830          them.  They may then be re-allocated as the three individual
     1732    19831          segments.
     1733    19832        */
     1734    19833    2           INIT_SZ = (SIZEW(G$UHJIT)+255)/256

  19833   2 000076  E800 0000 0000  xsym                 LDR,R6   GM_TSTKU_PGSZ
          2 000079  6E05                                 ADV,R6   5
          2 00007A  EF47 000F                            STR,R6   INIT_SZ,AUTO

     1735    19834    2             + (SIZEW(G$ROS)+255)/256
     1736    19835    2             + GM_TSTKU_PGSZ;
     1737    19836    2           CALL GMA$GETPS (UHJITPP, INIT_SZ) ALTRET(GUHY);

  19836   2 00007C  DBC7 000F                            LAB,B5   INIT_SZ,AUTO
          2 00007E  DFC7 0020                            STB,B5   @ID+4,AUTO
          2 000080  CBC7 0011                            LAB,B4   UHJITPP,AUTO
          2 000082  CFC7 001E                            STB,B4   @ID+2,AUTO
          2 000084  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 000086  CBF0 0200                            LAB,B4   512,IMO
          2 000088  E380 0000 0000  xent                 LNJ,B6   GMA$GETPS
          2 00008B       01C4                            DC       s:19913,PREL

     1738    19837    2           CALL GMA$RELPS (UHJITPP, INIT_SZ);

  19837   2 00008C  EBC7 000F                            LAB,B6   INIT_SZ,AUTO
          2 00008E  EFC7 0020                            STB,B6   @ID+4,AUTO
          2 000090  DBC7 0011                            LAB,B5   UHJITPP,AUTO
          2 000092  DFC7 001E                            STB,B5   @ID+2,AUTO
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:281  
          2 000094  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 000096  CBF0 0200                            LAB,B4   512,IMO
          2 000098  E380 0000 0000  xent                 LNJ,B6   GMA$RELPS
          2 00009B       0001                            DC       s:19839,PREL

     1739    19838
     1740    19839    2           INIT_SZ = 0;

  19839   2 00009C  8747 000F                            CL       INIT_SZ,AUTO

     1741    19840    2           CALL GMA$GETPS (UHJITPP,(SIZEW(G$UHJIT)+255)/256) ALTRET(GUHX);

  19840   2 00009E  EBF0 0002                            LAB,B6   2,IMO
          2 0000A0  EFC7 0020                            STB,B6   @ID+4,AUTO
          2 0000A2  DBC7 0011                            LAB,B5   UHJITPP,AUTO
          2 0000A4  DFC7 001E                            STB,B5   @ID+2,AUTO
          2 0000A6  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 0000A8  CBF0 0200                            LAB,B4   512,IMO
          2 0000AA  E380 0000 0000  xent                 LNJ,B6   GMA$GETPS
          2 0000AD       0192                            DC       s:19903,PREL

     1742    19841    2           INIT_SZ = (SIZEW(G$UHJIT)+255)/256;

  19841   2 0000AE  6C02                                 LDV,R6   2
          2 0000AF  EF47 000F                            STR,R6   INIT_SZ,AUTO

     1743    19842    2           CALL GMA$GETPS (TSTKPP, GM_TSTKU_PGSZ) ALTRET(NOSTK);

  19842   2 0000B1  EB80 0000 0000  xsym                 LAB,B6   GM_TSTKU_PGSZ
          2 0000B4  EFC7 0020                            STB,B6   @ID+4,AUTO
          2 0000B6  DBC7 0012                            LAB,B5   TSTKPP,AUTO
          2 0000B8  DFC7 001E                            STB,B5   @ID+2,AUTO
          2 0000BA  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 0000BC  CBF0 0200                            LAB,B4   512,IMO
          2 0000BE  E380 0000 0000  xent                 LNJ,B6   GMA$GETPS
          2 0000C1       016E                            DC       s:19903,PREL

PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:282  
     1744    19843    2           INIT_SZ = INIT_SZ + GM_TSTKU_PGSZ;

  19843   2 0000C2  E847 000F                            LDR,R6   INIT_SZ,AUTO
          2 0000C4  EA00 0000 0000  xsym                 ADD,R6   GM_TSTKU_PGSZ
          2 0000C7  EF47 000F                            STR,R6   INIT_SZ,AUTO

     1745    19844    2           CALL GMA$GETPS (ROSPP,(SIZEW(G$ROS)+255)/256) ALTRET(GROX);

  19844   2 0000C9  EBF0 0003                            LAB,B6   3,IMO
          2 0000CB  EFC7 0020                            STB,B6   @ID+4,AUTO
          2 0000CD  DCC7 000A                            LDB,B5   @ROSPP,AUTO
          2 0000CF  DFC7 001E                            STB,B5   @ID+2,AUTO
          2 0000D1  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 0000D3  CBF0 0200                            LAB,B4   512,IMO
          2 0000D5  E380 0000 0000  xent                 LNJ,B6   GMA$GETPS
          2 0000D8       0146                            DC       s:19902,PREL

     1746    19845    2           INIT_SZ = INIT_SZ + (SIZEW(G$ROS)+255)/256;

  19845   2 0000D9  E847 000F                            LDR,R6   INIT_SZ,AUTO
          2 0000DB  6E03                                 ADV,R6   3
          2 0000DC  EF47 000F                            STR,R6   INIT_SZ,AUTO

     1747    19846
     1748    19847        /*GMA decremented ASHUF because we are running on behalf of the NODEADMN handler.
     1749    19848        */
     1750    19849    2           IF (MODE ~= %G_M_HANDLER#) AND (MODE ~= 0)

  19849   2 0000DE  ECC7 0006                            LDB,B6   @MODE,AUTO
          2 0000E0  D806                                 LDR,R5   ,B6
          2 0000E1  5D03                                 CMV,R5   3
          2 0000E2  0901 0011                            BE       s:19855,PREL
          2 0000E4  5901 000F                            BEZ,R5   s:19855,PREL

     1751    19850    3           THEN DO;

     1752    19851    3              GM_ASHUF = GM_ASHUF + INIT_SZ;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:283  

  19851   2 0000E6  EA00 0000 0000  xsym                 ADD,R6   GM_ASHUF
          2 0000E9  EF00 0000 0000  xsym                 STR,R6   GM_ASHUF

     1753    19852    3              GM_HSHUF = GM_HSHUF - INIT_SZ;

  19852   2 0000EC  D800 0000 0000  xsym                 LDR,R5   GM_HSHUF
          2 0000EF  D247 000F                            SUB,R5   INIT_SZ,AUTO
          2 0000F1  DF00 0000 0000  xsym                 STR,R5   GM_HSHUF

     1754    19853    3              END;

     1755    19854
     1756    19855    2           G$U.UHJITPP = UHJITPP;          /* UHJIT address                      */

  19855   2 0000F4  F847 0011                            LDR,R7   UHJITPP,AUTO
          2 0000F6  6C00                                 LDV,R6   0
          2 0000F7  DCC7 0016                            LDB,B5   U$,AUTO
          2 0000F9  8D45 0011                            SDI      17,B5

     1757    19856
     1758    19857        /*  Map UHJIT segment into window                                */
     1759    19858
     1760    19859    2           PAGE = G$MHJIT.ASDT_BIGFOOT.UMHJIT.BASE;

  19859   2 0000FB  CC80 0000 0000  xsym                 LDB,B4   G$MHJIT$
          2 0000FE  D844 0048                            LDR,R5   72,B4
          2 000100  D570 7FFF                            AND,R5   32767,IMO
          2 000102  DF47 0010                            STR,R5   PAGE,AUTO

     1761    19860    2           SIZE = (SIZEW(G$UHJIT)-1)/256;

  19860   2 000104  4C01                                 LDV,R4   1
          2 000105  CF47 000E                            STR,R4   SIZE,AUTO

     1762    19861    2           CALL GHH$SETASDT_ASD(G$WINDOW1$,UHJITPP,SIZE);

PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:284  
  19861   2 000107  BBC7 000E                            LAB,B3   SIZE,AUTO
          2 000109  BFC7 0022                            STB,B3   @ID+6,AUTO
          2 00010B  ABC7 0011                            LAB,B2   UHJITPP,AUTO
          2 00010D  AFC7 0020                            STB,B2   @ID+4,AUTO
          2 00010F  9B80 0000 0000  xsym                 LAB,B1   G$WINDOW1$
          2 000112  9FC7 001E                            STB,B1   @ID+2,AUTO
          2 000114  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 000116  CBF0 0300                            LAB,B4   768,IMO
          2 000118  E380 0000 0000  xent                 LNJ,B6   GHH$SETASDT_ASD
          2 00011B       0001                            DC       s:19862,PREL

     1763    19862    2           CALL GHH$SETASDT_ASD(G$BPAR1$,PAGE,SIZE);

  19862   2 00011C  EBC7 000E                            LAB,B6   SIZE,AUTO
          2 00011E  EFC7 0022                            STB,B6   @ID+6,AUTO
          2 000120  DBC7 0010                            LAB,B5   PAGE,AUTO
          2 000122  DFC7 0020                            STB,B5   @ID+4,AUTO
          2 000124  CB80 0000 0000  xsym                 LAB,B4   G$BPAR1$
          2 000127  CFC7 001E                            STB,B4   @ID+2,AUTO
          2 000129  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 00012B  CBF0 0300                            LAB,B4   768,IMO
          2 00012D  E380 0000 0000  xent                 LNJ,B6   GHH$SETASDT_ASD
          2 000130       0001                            DC       s:19863,PREL

     1764    19863    2           G$WINDOW1$->G$UHJIT = G$BPAR1$->G$UHJIT;

  19863   2 000131  AC80 0000 0000  xsym                 LDB,B2   G$BPAR1$
          2 000134  2C00                                 LDV,R2   0
          2 000135  E870 032A                            LDR,R6   810,IMO
          2 000137  BC80 0000 0000  xsym                 LDB,B3   G$WINDOW1$
          2 00013A  3C00                                 LDV,R3   0
          2 00013B  0008                                 MMM

     1765    19864
     1766    19865        /*  Initialize MMU images                                        */
     1767    19866
     1768    19867    2           G$UHJIT.ASDT_USR.UHJIT.BASE = UHJITPP;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:285  

  19867   2 00013C  E847 0011                            LDR,R6   UHJITPP,AUTO
          2 00013E  EC80 0000 0000  xsym                 LDB,B6   G$WINDOW1$
          2 000141  EAC6 000A                            SRM,R6,'7FFF'X    10,B6
          2 000143       7FFF

     1769    19868    2           G$UHJIT.ASDT_MCL.UHJIT = G$UHJIT.ASDT_USR.UHJIT;

  19868   2 000144  8CC6 000A                            LDI      10,B6
          2 000146  8D46 0048                            SDI      72,B6

     1770    19869    2           G$UHJIT.ASDT_MCL.TSTACKU.BASE = TSTKPP;

  19869   2 000148  D847 0012                            LDR,R5   TSTKPP,AUTO
          2 00014A  DAC6 0046                            SRM,R5,'7FFF'X    70,B6
          2 00014C       7FFF

     1771    19870    2           G$UHJIT.ASDT_MCL.TSTACKU.SIZE = GM_TSTKU_PGSZ -1;

  19870   2 00014D  C800 0000 0000  xsym                 LDR,R4   GM_TSTKU_PGSZ
          2 000150  4EFF                                 ADV,R4   -1
          2 000151  CAC6 0047                            SRM,R4,'01FF'X    71,B6
          2 000153       01FF

     1772    19871    2           G$UHJIT.ASDT_USR.TSTACKU = G$UHJIT.ASDT_MCL.TSTACKU;

  19871   2 000154  8CC6 0046                            LDI      70,B6
          2 000156  8D46 0008                            SDI      8,B6

     1773    19872    2           G$UHJIT.ASDT_USR.ROS.BASE = ROSPP;

  19872   2 000158  DCC7 000A                            LDB,B5   @ROSPP,AUTO
          2 00015A  D805                                 LDR,R5   ,B5
          2 00015B  DAC6 0002                            SRM,R5,'7FFF'X    2,B6
          2 00015D       7FFF

     1774    19873    2           G$UHJIT.ASDT_USR.ROS.SIZE = (SIZEW(G$ROS)-1)/256;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:286  

  19873   2 00015E  5C02                                 LDV,R5   2
          2 00015F  DAC6 0003                            SRM,R5,'01FF'X    3,B6
          2 000161       01FF

     1775    19874    2           G$UHJIT.ASDT_USR.ROS.RP = %G_R_USR#;

  19874   2 000162  8846 0003                            LBF,'C000'X       3,B6
  19874   2 000164       C000

     1776    19875    2           G$UHJIT.ASDT_MCL.ROS = G$UHJIT.ASDT_USR.ROS;

  19875   2 000165  8CC6 0002                            LDI      2,B6
          2 000167  8D46 0040                            SDI      64,B6

     1777    19876
     1778    19877
     1779    19878    2           PAGE = G$MHJIT.ASDT_BIGFOOT.ROS.BASE;

  19878   2 000169  CC80 0000 0000  xsym                 LDB,B4   G$MHJIT$
          2 00016C  B844 0040                            LDR,R3   64,B4
          2 00016E  B570 7FFF                            AND,R3   32767,IMO
          2 000170  BF47 0010                            STR,R3   PAGE,AUTO

     1780    19879    2           SIZE = (SIZEW(G$ROS)-1)/256;

  19879   2 000172  DF47 000E                            STR,R5   SIZE,AUTO

     1781    19880    2           CALL GHH$SETASDT_ASD(G$WINDOW1$,ROSPP,SIZE);

  19880   2 000174  BBC7 000E                            LAB,B3   SIZE,AUTO
          2 000176  BFC7 0022                            STB,B3   @ID+6,AUTO
          2 000178  DFC7 0020                            STB,B5   @ID+4,AUTO
          2 00017A  AB80 0000 0000  xsym                 LAB,B2   G$WINDOW1$
          2 00017D  AFC7 001E                            STB,B2   @ID+2,AUTO
          2 00017F  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 000181  CBF0 0300                            LAB,B4   768,IMO
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:287  
          2 000183  E380 0000 0000  xent                 LNJ,B6   GHH$SETASDT_ASD
          2 000186       0001                            DC       s:19881,PREL

     1782    19881    2           CALL GHH$SETASDT_ASD(G$BPAR1$,PAGE,SIZE);

  19881   2 000187  EBC7 000E                            LAB,B6   SIZE,AUTO
          2 000189  EFC7 0022                            STB,B6   @ID+6,AUTO
          2 00018B  DBC7 0010                            LAB,B5   PAGE,AUTO
          2 00018D  DFC7 0020                            STB,B5   @ID+4,AUTO
          2 00018F  CB80 0000 0000  xsym                 LAB,B4   G$BPAR1$
          2 000192  CFC7 001E                            STB,B4   @ID+2,AUTO
          2 000194  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 000196  CBF0 0300                            LAB,B4   768,IMO
          2 000198  E380 0000 0000  xent                 LNJ,B6   GHH$SETASDT_ASD
          2 00019B       0001                            DC       s:19882,PREL

     1783    19882    2           G$WINDOW1$->G$ROS = G$BPAR1$->G$ROS;

  19882   2 00019C  AC80 0000 0000  xsym                 LDB,B2   G$BPAR1$
          2 00019F  2C00                                 LDV,R2   0
          2 0001A0  E870 05DC                            LDR,R6   1500,IMO
          2 0001A2  BC80 0000 0000  xsym                 LDB,B3   G$WINDOW1$
          2 0001A5  3C00                                 LDV,R3   0
          2 0001A6  0008                                 MMM

     1784    19883
     1785    19884    2           G$ROS.JIT.USR# = USR#;

  19884   2 0001A7  E847 0013                            LDR,R6   USR#,AUTO
          2 0001A9  EC80 0000 0000  xsym                 LDB,B6   G$WINDOW1$
          2 0001AC  EAC6 003E                            SRM,R6,'00FF'X    62,B6
          2 0001AE       00FF

     1786    19885    2           G$ROS.JIT.SYSID = I;

  19885   2 0001AF  D847 0018                            LDR,R5   I,AUTO
          2 0001B1  DF46 003F                            STR,R5   63,B6
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:288  

     1787    19886
     1788    19887
     1789    19888    2           SIZE = GM_TSTKU_PGSZ -1;

  19888   2 0001B3  C800 0000 0000  xsym                 LDR,R4   GM_TSTKU_PGSZ
          2 0001B6  4EFF                                 ADV,R4   -1
          2 0001B7  CF47 000E                            STR,R4   SIZE,AUTO

     1790    19889    2           CALL GHH$SETASDT_ASD(G$WINDOW1$,TSTKPP,SIZE);

  19889   2 0001B9  DBC7 000E                            LAB,B5   SIZE,AUTO
          2 0001BB  DFC7 0022                            STB,B5   @ID+6,AUTO
          2 0001BD  CBC7 0012                            LAB,B4   TSTKPP,AUTO
          2 0001BF  CFC7 0020                            STB,B4   @ID+4,AUTO
          2 0001C1  BB80 0000 0000  xsym                 LAB,B3   G$WINDOW1$
          2 0001C4  BFC7 001E                            STB,B3   @ID+2,AUTO
          2 0001C6  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 0001C8  CBF0 0300                            LAB,B4   768,IMO
          2 0001CA  E380 0000 0000  xent                 LNJ,B6   GHH$SETASDT_ASD
          2 0001CD       0001                            DC       s:19890,PREL

     1791    19890    2           SIZE = GM_TSTKU_PGSZ * 256;

  19890   2 0001CE  E800 0000 0000  xsym                 LDR,R6   GM_TSTKU_PGSZ
          2 0001D1  6008                                 SOL,R6   8
          2 0001D2  EF47 000E                            STR,R6   SIZE,AUTO

     1792    19891    2           CALL X6A_MAUTO (G$WINDOW1$ , SIZE, G$TSTACK$);

  19891   2 0001D4  EB80 0000 0000  xsym                 LAB,B6   G$TSTACK$
          2 0001D7  EFC7 0022                            STB,B6   @ID+6,AUTO
          2 0001D9  DBC7 000E                            LAB,B5   SIZE,AUTO
          2 0001DB  DFC7 0020                            STB,B5   @ID+4,AUTO
          2 0001DD  CB80 0000 0000  xsym                 LAB,B4   G$WINDOW1$
          2 0001E0  CFC7 001E                            STB,B4   @ID+2,AUTO
          2 0001E2  BBC7 001E                            LAB,B3   @ID+2,AUTO
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:289  
          2 0001E4  CBF0 0300                            LAB,B4   768,IMO
          2 0001E6  E380 0000 0000  xent                 LNJ,B6   X6A_MAUTO
          2 0001E9       0001                            DC       s:19896,PREL

     1793    19892
     1794    19893        /*   Let MM know that these segments belong to the user   */
     1795    19894
     1796    19895
     1797    19896    2           CALL GMA$PS2USR (UHJITPP,USR#);

  19896   2 0001EA  EBC7 0013                            LAB,B6   USR#,AUTO
          2 0001EC  EFC7 0020                            STB,B6   @ID+4,AUTO
          2 0001EE  DBC7 0011                            LAB,B5   UHJITPP,AUTO
          2 0001F0  DFC7 001E                            STB,B5   @ID+2,AUTO
          2 0001F2  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 0001F4  CBF0 0200                            LAB,B4   512,IMO
          2 0001F6  E380 0000 0000  xent                 LNJ,B6   GMA$PS2USR
          2 0001F9       0001                            DC       s:19897,PREL

     1798    19897    2           CALL GMA$PS2USR (ROSPP,USR#);

  19897   2 0001FA  EBC7 0013                            LAB,B6   USR#,AUTO
          2 0001FC  EFC7 0020                            STB,B6   @ID+4,AUTO
          2 0001FE  DCC7 000A                            LDB,B5   @ROSPP,AUTO
          2 000200  DFC7 001E                            STB,B5   @ID+2,AUTO
          2 000202  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 000204  CBF0 0200                            LAB,B4   512,IMO
          2 000206  E380 0000 0000  xent                 LNJ,B6   GMA$PS2USR
          2 000209       0001                            DC       s:19898,PREL

     1799    19898    2           CALL GMA$PS2USR (TSTKPP,USR#);

  19898   2 00020A  EBC7 0013                            LAB,B6   USR#,AUTO
          2 00020C  EFC7 0020                            STB,B6   @ID+4,AUTO
          2 00020E  DBC7 0012                            LAB,B5   TSTKPP,AUTO
          2 000210  DFC7 001E                            STB,B5   @ID+2,AUTO
          2 000212  BBC7 001E                            LAB,B3   @ID+2,AUTO
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:290  
          2 000214  CBF0 0200                            LAB,B4   512,IMO
          2 000216  E380 0000 0000  xent                 LNJ,B6   GMA$PS2USR
          2 000219       0001                            DC       s:19899,PREL

     1800    19899    2           RETURN;

  19899   2 00021A  ECC7 001A                            LDB,B6   I+2,AUTO
          2 00021C  C3C6 0001                            LNJ,B4   1,B6

     1801    19900
     1802    19901
     1803    19902    2   GROX:   CALL GMA$RELPS (TSTKPP, GM_TSTKU_PGSZ);

  19902   2 00021E  EB80 0000 0000  xsym GROX            LAB,B6   GM_TSTKU_PGSZ
          2 000221  EFC7 0020                            STB,B6   @ID+4,AUTO
          2 000223  DBC7 0012                            LAB,B5   TSTKPP,AUTO
          2 000225  DFC7 001E                            STB,B5   @ID+2,AUTO
          2 000227  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 000229  CBF0 0200                            LAB,B4   512,IMO
          2 00022B  E380 0000 0000  xent                 LNJ,B6   GMA$RELPS
          2 00022E       0001                            DC       s:19903,PREL

     1804    19903    2   NOSTK:  CALL GMA$RELPS (UHJITPP,(SIZEW(G$UHJIT)+255)/256);

  19903   2 00022F  EBF0 0002            NOSTK           LAB,B6   2,IMO
          2 000231  EFC7 0020                            STB,B6   @ID+4,AUTO
          2 000233  DBC7 0011                            LAB,B5   UHJITPP,AUTO
          2 000235  DFC7 001E                            STB,B5   @ID+2,AUTO
          2 000237  BBC7 001E                            LAB,B3   @ID+2,AUTO
          2 000239  CBF0 0200                            LAB,B4   512,IMO
          2 00023B  E380 0000 0000  xent                 LNJ,B6   GMA$RELPS
          2 00023E       0001                            DC       s:19903,PREL

  19903   2                              GUHX            null
     1805    19904    2   GUHX:   ;
     1806    19905    2           GM_ASHUF = GM_ASHUF + INIT_SZ;

PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:291  
  19905   2 00023F  E800 0000 0000  xsym GUHX            LDR,R6   GM_ASHUF
          2 000242  EA47 000F                            ADD,R6   INIT_SZ,AUTO
          2 000244  EF00 0000 0000  xsym                 STR,R6   GM_ASHUF

     1807    19906    2           GM_HSHUF = GM_HSHUF - INIT_SZ;

  19906   2 000247  D800 0000 0000  xsym                 LDR,R5   GM_HSHUF
          2 00024A  D247 000F                            SUB,R5   INIT_SZ,AUTO
          2 00024C  DF00 0000 0000  xsym                 STR,R5   GM_HSHUF

     1808    19907    2   GUHY:
     1809    19908                %LOCK (G=G_SCHDGATE);

  19913   2 00024F  BB80 0000 0000  03   GUHY            LAB,B3   0
          2 000252  CBF0 0100                            LAB,B4   256,IMO
          2 000254  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          2 000257       0001                            DC       s:19916,PREL

     1810    19915
     1811    19916    2           G$U.FL = GH_HQ(%GH_NULL);

  19916   2 000258  ECC7 0016                            LDB,B6   U$,AUTO
          2 00025A  E800 0000 001F  xsym                 LDR,R6   GH_HQ+31
          2 00025D  EF46 0003                            STR,R6   3,B6

     1812    19917    2           G$USER.BL(GH_HQ(%GH_NULL)) = USR#;

  19917   2 00025F  DC80 0000 0000  xsym                 LDB,B5   G$USRT$
          2 000262  B800 0000 001F  xsym                 LDR,R3   GH_HQ+31
          2 000265  3F18                                 MLV,R3   24
          2 000266  3E04                                 ADV,R3   4
          2 000267  D847 0013                            LDR,R5   USR#,AUTO
          2 000269  DF35                                 STR,R5   ,B5,R3

     1813    19918    2           GH_HQ(%GH_NULL) = USR#;

  19918   2 00026A  E847 0013                            LDR,R6   USR#,AUTO
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:292  
          2 00026C  EF00 0000 001F  xsym                 STR,R6   GH_HQ+31

     1814    19919
     1815    19920                %UNLOCK (G=G_SCHDGATE);

  19925   2 00026F  BB80 0000 0000  03                   LAB,B3   0
          2 000272  CBF0 0100                            LAB,B4   256,IMO
          2 000274  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          2 000277       0001                            DC       s:19928,PREL

     1816    19927
     1817    19928    2           ERRCODE=%E$NJIT;

  19928   2 000278  ECC7 000C                            LDB,B6   @ERRCODE,AUTO
          2 00027A  E870 04B6                            LDR,R6   1206,IMO
          2 00027C  EF06                                 STR,R6   ,B6

     1818    19929    2           ALTRETURN;

  19929   2 00027D  ECC7 001A                            LDB,B6   I+2,AUTO
          2 00027F  B806                                 LDR,R3   ,B6
          2 000280  C3B6                                 LNJ,B4   ,B6,R3

     1819    19930    2   END GETSEGS;
     1820    19931
     1821    19932        %EJECT;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:293  
     1822    19933    1   GETUSR: PROC;

  19933   2 000281  EFC7 001A            GETUSR          STB,B6   I+2,AUTO

     1823    19934
     1824    19935
     1825    19936                %LOCK (G=G_SCHDGATE);

  19941   2 000283  BB80 0000 0000  03                   LAB,B3   0
          2 000286  CBF0 0100                            LAB,B4   256,IMO
          2 000288  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          2 00028B       0001                            DC       s:19944,PREL

     1826    19943
     1827    19944    2           USR#=GH_HQ(%GH_NULL);

  19944   2 00028C  E800 0000 001F  xsym                 LDR,R6   GH_HQ+31
          2 00028F  EF47 0013                            STR,R6   USR#,AUTO

     1828    19945    2           U$=ADDR(G$USER(USR#));

  19945   2 000291  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          2 000294  B856                                 LDR,R3   R6
          2 000295  3F18                                 MLV,R3   24
          2 000296  DBB6                                 LAB,B5   ,B6,R3
          2 000297  DFC7 0016                            STB,B5   U$,AUTO

     1829    19946    2           GH_HQ(%GH_NULL)=G$U.FL;

  19946   2 000299  E845 0003                            LDR,R6   3,B5
          2 00029B  EF00 0000 001F  xsym                 STR,R6   GH_HQ+31

     1830    19947
     1831    19948                %UNLOCK (G=G_SCHDGATE);

  19953   2 00029E  BB80 0000 0000  03                   LAB,B3   0
          2 0002A1  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:294  
          2 0002A3  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          2 0002A6       0001                            DC       s:19956,PREL

     1832    19955
     1833    19956    2           G$USER.BL(G$U.FL)=0;

  19956   2 0002A7  ECC7 0016                            LDB,B6   U$,AUTO
          2 0002A9  B846 0003                            LDR,R3   3,B6
          2 0002AB  DC80 0000 0000  xsym                 LDB,B5   G$USRT$
          2 0002AE  3F18                                 MLV,R3   24
          2 0002AF  3E04                                 ADV,R3   4
          2 0002B0  8735                                 CL       ,B5,R3

     1834    19957    2           G$U.FLG='0'B;

  19957   2 0002B1  8706                                 CL       ,B6

     1835    19958    2           G$U.ASYNCH='0'B;

  19958   2 0002B2  8746 0001                            CL       1,B6

     1836    19959    2           G$U.MF=0;

  19959   2 0002B4  87C6 000B                            CLH      11,B6

     1837    19960    2           G$U.DL$=ADDR(NIL);

  19960   2 0002B6  DB80 0000 0000                       LAB,B5   0
          2 0002B9  DFC6 000D                            STB,B5   13,B6

     1838    19961    2           G$U.MODE=MODE;

  19961   2 0002BB  CCC7 0006                            LDB,B4   @MODE,AUTO
          2 0002BD  E804                                 LDR,R6   ,B4
          2 0002BE  E7C6 000C                            STH,R6   12,B6

     1839    19962    2           IF MODE = %G_M_HANDLER# THEN
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:295  

  19962   2 0002C0  E804                                 LDR,R6   ,B4
          2 0002C1  6D03                                 CMV,R6   3
          2 0002C2  0981 0009                            BNE      s:19965,PREL

     1840    19963    2              G$U.PRIOB=BASE_PRIO+3;

  19963   2 0002C4  D800 0000 0000  00                   LDR,R5   BASE_PRIO
          2 0002C7  5E03                                 ADV,R5   3
          2 0002C8  DF46 0010                            STR,R5   16,B6
          2 0002CA  0F81 0006                            B        s:19966,PREL

     1841    19964    2           ELSE
     1842    19965    2              G$U.PRIOB=BASE_PRIO;

  19965   2 0002CC  D800 0000 0000  00                   LDR,R5   BASE_PRIO
          2 0002CF  DF46 0010                            STR,R5   16,B6

     1843    19966    2           G$U.PRIO=BASE_PRIO;

  19966   2 0002D1  E800 0000 0000  00                   LDR,R6   BASE_PRIO
          2 0002D4  EF46 000F                            STR,R6   15,B6

     1844    19967    2           G$U.SYSID=I;

  19967   2 0002D6  C847 0018                            LDR,R4   I,AUTO
          2 0002D8  CF46 0013                            STR,R4   19,B6

     1845    19968    2           RETURN;

  19968   2 0002DA  ECC7 001A                            LDB,B6   I+2,AUTO
          2 0002DC  C3C6 0001                            LNJ,B4   1,B6

     1846    19969    2   END GETUSR;
     1847    19970
     1848    19971
     1849    19972    1   GETSYSID: PROC(ID) ALTRET;
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:296  

  19972   2 0002DE  EFC7 001A            GETSYSID        STB,B6   I+2,AUTO

     1850    19973
     1851    19974    2   DCL G_SYSID UBIN STATIC SYMDEF INIT(0);
     1852    19975    2   DCL ID UBIN;
     1853    19976
     1854    19977    2           G_SYSID=G_SYSID+1;

  19977   2 0002E0  8A80 0000 0000  01                   INC      G_SYSID

     1855    19978    2           ID=G_SYSID;

  19978   2 0002E3  DCC7 001C                            LDB,B5   @ID,AUTO
          2 0002E5  E800 0000 0000  01                   LDR,R6   G_SYSID
          2 0002E8  EF05                                 STR,R6   ,B5

     1856    19979    2           RETURN;

  19979   2 0002E9  ECC7 001A                            LDB,B6   I+2,AUTO
          2 0002EB  C3C6 0001                            LNJ,B4   1,B6
     1857    19980    2   END GETSYSID;
     1858    19981    1   END;
     1859    19982        %EOD;

PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:297  
--  Include file information  --

   K_ID_E.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   KL_ERRORS_C.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$ADDUSR.
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:298  

 **** Variables and constants ****

  ****  Section 000 RoData GHS$ADDUSR

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 BASE_PRIO

  ****  Section 001  Data  GHS$ADDUSR

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 G_SYSID

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     C-0-0/w PTR         r     1 @ERRCODE                  1C-0-0/w PTR         r     1 @ID
     4-0-0/w PTR         r     1 @INT#                      6-0-0/w PTR         r     1 @MODE
     A-0-0/w PTR         r     1 @ROSPP                     8-0-0/w PTR         r     1 @USER
    *0-0-0/w UBIN(16)    r     1 ERRCODE                   18-0-0/w UBIN(16)    r     1 I
    *0-0-0/w UBIN(16)    r     1 ID                         F-0-0/w UBIN(16)    r     1 INIT_SZ
    *0-0-0/w UBIN(16)    r     1 INT#                      *0-0-0/w UBIN(16)    r     1 MODE
    10-0-0/w UBIN(16)    r     1 PAGE                      *0-0-0/w UBIN(16)    r     1 ROSPP
     E-0-0/w UBIN(16)    r     1 SIZE                      12-0-0/w UBIN(16)    r     1 TSTKPP
    16-0-0/w PTR         r     1 U$                        11-0-0/w UBIN(16)    r     1 UHJITPP
    *0-0-0/w UBIN(16)    r     1 USER                      13-0-0/w UBIN(16)    r     1 USR#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:299  
     0-0-0/w PTR         r     1 G$BPAR1$                   0-0-0/w PTR         r     1 G$MHJIT$
     0-0-0/w PTR         r     1 G$ROS$                     0-0-0/w PTR         r     1 G$TSTACK$
     0-0-0/w PTR         r     1 G$USRT$                    0-0-0/w PTR         r     1 G$WINDOW1$
     0-0-0/w UBIN(16)    r     1 GH_HQ(0:0)                 0-0-0/w UBIN(16)    r     1 GM_ASHUF
     0-0-0/w UBIN(16)    r     1 GM_HSHUF                   0-0-0/w UBIN(16)    r     1 GM_TSTKU_PGSZ
     0-0-0/w UBIN(16)    r     1 G_CUR_USRS(0:0)
     0-0-0/w UBIN(16)    r     1 G_MAX_USRS(0:0)
     0-0-0/w STRC(48)    r     1 G_SCHDGATE                 0-0-0/w STRC(2208)  r     1 PS_LCP6STT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(27232) r     1 G$MHJIT                    0-0-0/w STRC(12000) r     1 G$ROS
     0-0-0/w STRC(384)   r     1 G$U                        0-0-0/w STRC(6480)  r     1 G$UHJIT
     0-0-0/w STRC(384)   r     1 G$USER(0:0)


   Procedure GHS$ADDUSR requires 749 words for executable code.
   Procedure GHS$ADDUSR requires 36 words of local(AUTO) storage.
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:300  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:301  
          MINI XREF LISTING

BASE_PRIO
     19750**DCL     19963>>ASSIGN  19965>>ASSIGN  19966>>ASSIGN
ERRCODE
     19756**DCL        42--PROC    19803<<ASSIGN  19805<<ASSIGN  19806<<ASSIGN  19809<<ASSIGN  19928<<ASSIGN
G$BPAR1$
     19766**DCL     19862<>CALL    19863>>ASSIGN  19881<>CALL    19882>>ASSIGN
G$EXCFR.P$$
     18816**DCL     18816--REDEF   18816--REDEF
G$EXCFR.PREVSZ
     18766**DCL     18766--REDEF
G$EXCFR.TRLR.EVID
     19053**DCL     19071--REDEF   19079--REDEF   19079--REDEF
G$EXCFR.TRLR.SUBC
     19030**DCL     19030--REDEF   19048--REDEF   19052--REDEF   19052--REDEF
G$HHJIT.ISA_HND
     16138**DCL     16433--REDEF
G$HHJIT.ISA_HND.P$$
     16213**DCL     16213--REDEF
G$HHJIT.TSA_HND.ISA.P$$
     16622**DCL     16622--REDEF
G$HHJIT.TSA_HND.P$$
     16493**DCL     16493--REDEF   16494--REDEF
G$MHJIT.ASDT_BIGFOOT.ROS.BASE
      8594**DCL     19878>>ASSIGN
G$MHJIT.ASDT_BIGFOOT.UMHJIT.BASE
      8682**DCL     19859>>ASSIGN
G$MHJIT.INTCON.HHJIT
     14306**DCL     14306--REDEF
G$MHJIT.INTCON.P$$
     14279**DCL     14279--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
     11224**DCL     11224--REDEF
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:302  
G$MHJIT.ISA_DBINH.P$$
     12438**DCL     12438--REDEF
G$MHJIT.ISA_IDLE.P$$
      9319**DCL      9319--REDEF
G$MHJIT.ISA_LVL10.P$$
     12741**DCL     12741--REDEF
G$MHJIT.ISA_LVL11.P$$
     13044**DCL     13044--REDEF
G$MHJIT.ISA_LVL12.P$$
     13347**DCL     13347--REDEF
G$MHJIT.ISA_LVL5.P$$
     11527**DCL     11527--REDEF
G$MHJIT.ISA_OV.P$$
     10921**DCL     10921--REDEF
G$MHJIT.ISA_PFS.P$$
     10592**DCL     10592--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
     13954**DCL     13954--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
     11831**DCL     11831--REDEF
G$MHJIT.ISA_SATYR_TRN.P$$
     12135**DCL     12135--REDEF
G$MHJIT.ISA_SCHD.P$$
     13650**DCL     13650--REDEF
G$MHJIT.ISA_WDOG.P$$
     10700**DCL     10700--REDEF
G$MHJIT.TSA_DB.ISA.P$$
      9922**DCL      9922--REDEF
G$MHJIT.TSA_DB.P$$
      9793**DCL      9793--REDEF    9794--REDEF
G$MHJIT.TSA_HND.ISA.P$$
     14500**DCL     14500--REDEF
G$MHJIT.TSA_HND.P$$
     14371**DCL     14371--REDEF   14372--REDEF
G$MHJIT.TSA_MON.ISA.P$$
      9534**DCL      9534--REDEF
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:303  
G$MHJIT.TSA_MON.P$$
      9405**DCL      9405--REDEF    9406--REDEF
G$MHJIT.TSA_OV.ISA.P$$
     10310**DCL     10310--REDEF
G$MHJIT.TSA_OV.P$$
     10181**DCL     10181--REDEF   10182--REDEF
G$MHJIT$
     19762**DCL      7844--IMP-PTR 19859>>ASSIGN  19878>>ASSIGN
G$ROS
     16859**DCL     19833--ASSIGN  19844--CALL    19845--ASSIGN  19873--ASSIGN  19879--ASSIGN  19882<<ASSIGN
     19882>>ASSIGN
G$ROS.AUTO_DS$
     16868**DCL     16869--REDEF
G$ROS.AUTO_T$
     16869**DCL     16869--REDEF
G$ROS.CP_ECCB.FLTFLG
     17483**DCL     17514--REDEF
G$ROS.DB_ECCB.FLTFLG
     17407**DCL     17438--REDEF
G$ROS.JIT.ERRLOG
     17218**DCL     17221--REDEF
G$ROS.JIT.JSUNIT
     16957**DCL     16958--REDEF
G$ROS.JIT.MCLS
     16956**DCL     16956--REDEF
G$ROS.JIT.SYSID
     16946**DCL     19885<<ASSIGN
G$ROS.JIT.TMRZ
     17225**DCL     17226--REDEF
G$ROS.JIT.USER_EXTIME
     16949**DCL     16950--REDEF
G$ROS.JIT.USER_MEMTIME
     16952**DCL     16952--REDEF
G$ROS.JIT.USER_SVTIME
     16951**DCL     16951--REDEF
G$ROS.JIT.USR#
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:304  
     16946**DCL     19884<<ASSIGN
G$ROS.M$DEBUG.EOMCHAR
     17554**DCL     17554--REDEF   17555--REDEF
G$ROS.M$DEBUG.FLDID
     17553**DCL     17553--REDEF
G$ROS.M$DEBUG.RES
     17548**DCL     17549--REDEF
G$ROS.M$DO.EOMCHAR
     17759**DCL     17759--REDEF   17760--REDEF
G$ROS.M$DO.FLDID
     17758**DCL     17758--REDEF
G$ROS.M$DO.RES
     17753**DCL     17754--REDEF
G$ROS.M$HOST.EOMCHAR
     17708**DCL     17708--REDEF   17709--REDEF
G$ROS.M$HOST.FLDID
     17707**DCL     17707--REDEF
G$ROS.M$HOST.RES
     17702**DCL     17703--REDEF
G$ROS.M$LM.EOMCHAR
     17605**DCL     17605--REDEF   17606--REDEF
G$ROS.M$LM.FLDID
     17604**DCL     17604--REDEF
G$ROS.M$LM.RES
     17599**DCL     17600--REDEF
G$ROS.M$ME.EOMCHAR
     17657**DCL     17657--REDEF   17658--REDEF
G$ROS.M$ME.FLDID
     17656**DCL     17656--REDEF
G$ROS.M$ME.RES
     17651**DCL     17652--REDEF
G$ROS.U_ECCB.FLTFLG
     17331**DCL     17362--REDEF
G$ROS$
     19764**DCL     17810--IMP-PTR
G$TSTACK$
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:305  
     19773**DCL     19891<>CALL
G$U.ASYNCH
      4819**DCL     19958<<ASSIGN
G$U.DL$
      4821**DCL     19960<<ASSIGN
G$U.FL
      4819**DCL     19916<<ASSIGN  19946>>ASSIGN  19956>>ASSIGN
G$U.FLG
      4818**DCL     19957<<ASSIGN
G$U.MF
      4820**DCL     19959<<ASSIGN
G$U.MISC
      4819**DCL      4819--REDEF
G$U.MODE
      4821**DCL     19961<<ASSIGN
G$U.PRIO
      4821**DCL     19966<<ASSIGN
G$U.PRIOB
      4821**DCL     19963<<ASSIGN  19965<<ASSIGN
G$U.SYSID
      4822**DCL     19967<<ASSIGN
G$U.UHJITPP
      4821**DCL     19855<<ASSIGN
G$UHJIT
      4870**DCL     19833--ASSIGN  19840--CALL    19841--ASSIGN  19860--ASSIGN  19863<<ASSIGN  19863>>ASSIGN
     19903--CALL
G$UHJIT.ASDT_MCL.ROS
      5618**DCL     19875<<ASSIGN
G$UHJIT.ASDT_MCL.TSTACKU
      5684**DCL     19871>>ASSIGN
G$UHJIT.ASDT_MCL.TSTACKU.BASE
      5686**DCL     19869<<ASSIGN
G$UHJIT.ASDT_MCL.TSTACKU.SIZE
      5688**DCL     19870<<ASSIGN
G$UHJIT.ASDT_MCL.UHJIT
      5706**DCL     19868<<ASSIGN
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:306  
G$UHJIT.ASDT_USR.ROS
      4924**DCL     19875>>ASSIGN
G$UHJIT.ASDT_USR.ROS.BASE
      4926**DCL     19872<<ASSIGN
G$UHJIT.ASDT_USR.ROS.RP
      4926**DCL     19874<<ASSIGN
G$UHJIT.ASDT_USR.ROS.SIZE
      4928**DCL     19873<<ASSIGN
G$UHJIT.ASDT_USR.TSTACKU
      4990**DCL     19871<<ASSIGN
G$UHJIT.ASDT_USR.UHJIT
      5012**DCL     19868>>ASSIGN
G$UHJIT.ASDT_USR.UHJIT.BASE
      5014**DCL     19867<<ASSIGN
G$UHJIT.ISA_USR
      6293**DCL      6588--REDEF
G$UHJIT.ISA_USR.P$$
      6368**DCL      6368--REDEF
G$UHJIT.TSA_CP.ISA.P$$
      7575**DCL      7575--REDEF
G$UHJIT.TSA_CP.P$$
      7446**DCL      7446--REDEF    7447--REDEF
G$UHJIT.TSA_DB.ISA.P$$
      7187**DCL      7187--REDEF
G$UHJIT.TSA_DB.P$$
      7058**DCL      7058--REDEF    7059--REDEF
G$UHJIT.TSA_RTT.P$$
      7821**DCL      7821--REDEF    7822--REDEF
G$UHJIT.TSA_USR.ISA.P$$
      6777**DCL      6777--REDEF
G$UHJIT.TSA_USR.P$$
      6648**DCL      6648--REDEF    6649--REDEF
G$USER
      4807**DCL     19945--ASSIGN
G$USER.BL
      4808**DCL     19917<<ASSIGN  19956<<ASSIGN
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:307  
G$USER.MISC
      4808**DCL      4808--REDEF
G$USRT$
     19765**DCL      4807--IMP-PTR 19917>>ASSIGN  19945>>ASSIGN  19956>>ASSIGN
G$WINDOW1$
     19761**DCL      4870--IMP-PTR 16859--IMP-PTR 19861<>CALL    19863>>ASSIGN  19867>>ASSIGN  19868>>ASSIGN
     19868>>ASSIGN  19869>>ASSIGN  19870>>ASSIGN  19871>>ASSIGN  19871>>ASSIGN  19872>>ASSIGN  19873>>ASSIGN
     19874>>ASSIGN  19875>>ASSIGN  19875>>ASSIGN  19880<>CALL    19882>>ASSIGN  19884>>ASSIGN  19885>>ASSIGN
     19889<>CALL    19891<>CALL
GETSEGS
     19824**PROC    19795--CALL
GETSYSID
     19972**PROC    19793--CALL
GETUSR
     19933**PROC    19794--CALL
GHH$LOCK
       325**DCL-ENT 19913--CALL    19941--CALL
GHH$SETASDT_ASD
     19775**DCL-ENT 19861--CALL    19862--CALL    19880--CALL    19881--CALL    19889--CALL
GHH$UNLOCK
       325**DCL-ENT 19925--CALL    19953--CALL
GHS$CHSE
     19779**DCL-ENT 19801--CALL
GH_HQ
     19769**DCL     19791>>IF      19916>>ASSIGN  19917>>ASSIGN  19918<<ASSIGN  19944>>ASSIGN  19946<<ASSIGN
GMA$GETPS
     19776**DCL-ENT 19836--CALL    19840--CALL    19842--CALL    19844--CALL
GMA$PS2USR
     19778**DCL-ENT 19896--CALL    19897--CALL    19898--CALL
GMA$RELPS
     19777**DCL-ENT 19837--CALL    19902--CALL    19903--CALL
GM_ASHUF
     19770**DCL     19851<<ASSIGN  19851>>ASSIGN  19905<<ASSIGN  19905>>ASSIGN
GM_HSHUF
     19771**DCL     19852<<ASSIGN  19852>>ASSIGN  19906<<ASSIGN  19906>>ASSIGN
GM_TSTKU_PGSZ
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:308  
     19772**DCL     19833>>ASSIGN  19842<>CALL    19843>>ASSIGN  19870>>ASSIGN  19888>>ASSIGN  19890>>ASSIGN
     19902<>CALL
GROX IN PROCEDURE GETSEGS
     19902**LABEL   19844--CALLALT
GUHX IN PROCEDURE GETSEGS
     19903**LABEL   19840--CALLALT
GUHY IN PROCEDURE GETSEGS
     19913**LABEL   19836--CALLALT
G_CUR_USRS
     19767**DCL     19790>>IF      19791>>IF      19796<<ASSIGN  19796>>ASSIGN  19797<<ASSIGN  19797>>ASSIGN
     19798>>IF      19799>>ASSIGN
G_MAX_USRS
     19768**DCL     19790>>IF      19791>>IF
G_SCHDGATE
     19157**DCL     19913<>CALL    19925<>CALL    19941<>CALL    19953<>CALL
G_SYSID IN PROCEDURE GETSYSID
     19974**DCL     19977<<ASSIGN  19977>>ASSIGN  19978>>ASSIGN
I
     19787**DCL     19793<>CALL    19885>>ASSIGN  19967>>ASSIGN
ID IN PROCEDURE GETSYSID
     19975**DCL     19972--PROC    19978<<ASSIGN
INIT_SZ
     19758**DCL     19833<<ASSIGN  19836<>CALL    19837<>CALL    19839<<ASSIGN  19841<<ASSIGN  19843<<ASSIGN
     19843>>ASSIGN  19845<<ASSIGN  19845>>ASSIGN  19851>>ASSIGN  19852>>ASSIGN  19905>>ASSIGN  19906>>ASSIGN
INT#
     19752**DCL        42--PROC
MODE
     19753**DCL        42--PROC    19790>>IF      19790>>IF      19796>>ASSIGN  19796>>ASSIGN  19849>>IF
     19849>>IF      19961>>ASSIGN  19962>>IF
NOSTK IN PROCEDURE GETSEGS
     19903**LABEL   19842--CALLALT
NO_SEGS
     19810**LABEL   19795--CALLALT
NO_SYSID
     19809**LABEL   19793--CALLALT
PAGE
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:309  
     19759**DCL     19859<<ASSIGN  19862<>CALL    19878<<ASSIGN  19881<>CALL
PS_LCP6STT.PEAK_USERS
     19654**DCL     19798>>IF      19799<<ASSIGN
PS_LCP6STT.REQSTATS.DSPMSK
     19449**DCL     19455--REDEF
PS_LCP6STT.REQSTATS.SLCMSK
     19490**DCL     19497--REDEF
ROS.AUTO_DS$
     17819**DCL     17820--REDEF
ROS.AUTO_T$
     17820**DCL     17820--REDEF
ROS.CP_ECCB.FLTFLG
     18434**DCL     18465--REDEF
ROS.DB_ECCB.FLTFLG
     18358**DCL     18389--REDEF
ROS.JIT.ERRLOG
     18169**DCL     18172--REDEF
ROS.JIT.JSUNIT
     17908**DCL     17909--REDEF
ROS.JIT.MCLS
     17907**DCL     17907--REDEF
ROS.JIT.TMRZ
     18176**DCL     18177--REDEF
ROS.JIT.USER_EXTIME
     17900**DCL     17901--REDEF
ROS.JIT.USER_MEMTIME
     17903**DCL     17903--REDEF
ROS.JIT.USER_SVTIME
     17902**DCL     17902--REDEF
ROS.M$DEBUG.EOMCHAR
     18505**DCL     18505--REDEF   18506--REDEF
ROS.M$DEBUG.FLDID
     18504**DCL     18504--REDEF
ROS.M$DEBUG.RES
     18499**DCL     18500--REDEF
ROS.M$DO.EOMCHAR
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:310  
     18710**DCL     18710--REDEF   18711--REDEF
ROS.M$DO.FLDID
     18709**DCL     18709--REDEF
ROS.M$DO.RES
     18704**DCL     18705--REDEF
ROS.M$HOST.EOMCHAR
     18659**DCL     18659--REDEF   18660--REDEF
ROS.M$HOST.FLDID
     18658**DCL     18658--REDEF
ROS.M$HOST.RES
     18653**DCL     18654--REDEF
ROS.M$LM.EOMCHAR
     18556**DCL     18556--REDEF   18557--REDEF
ROS.M$LM.FLDID
     18555**DCL     18555--REDEF
ROS.M$LM.RES
     18550**DCL     18551--REDEF
ROS.M$ME.EOMCHAR
     18608**DCL     18608--REDEF   18609--REDEF
ROS.M$ME.FLDID
     18607**DCL     18607--REDEF
ROS.M$ME.RES
     18602**DCL     18603--REDEF
ROS.U_ECCB.FLTFLG
     18282**DCL     18313--REDEF
ROSPP
     19754**DCL        42--PROC    19844<>CALL    19872>>ASSIGN  19880<>CALL    19897<>CALL
SIZE
     19757**DCL     19860<<ASSIGN  19861<>CALL    19862<>CALL    19879<<ASSIGN  19880<>CALL    19881<>CALL
     19888<<ASSIGN  19889<>CALL    19890<<ASSIGN  19891<>CALL
TSTKPP
     19783**DCL     19842<>CALL    19869>>ASSIGN  19889<>CALL    19898<>CALL    19902<>CALL
U$
     19786**DCL      4818--IMP-PTR 19855>>ASSIGN  19916>>ASSIGN  19945<<ASSIGN  19946>>ASSIGN  19956>>ASSIGN
     19957>>ASSIGN  19958>>ASSIGN  19959>>ASSIGN  19960>>ASSIGN  19961>>ASSIGN  19963>>ASSIGN  19965>>ASSIGN
     19966>>ASSIGN  19967>>ASSIGN
PL6.E3A0      #007=GHS$ADDUSR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:44 Page:311  
UHJITPP
     19782**DCL     19836<>CALL    19837<>CALL    19840<>CALL    19855>>ASSIGN  19861<>CALL    19867>>ASSIGN
     19896<>CALL    19903<>CALL
USER
     19755**DCL        42--PROC    19800<<ASSIGN
USR#
     19784**DCL     19800>>ASSIGN  19801<>CALL    19884>>ASSIGN  19896<>CALL    19897<>CALL    19898<>CALL
     19917>>ASSIGN  19918>>ASSIGN  19944<<ASSIGN  19945>>ASSIGN
X6A_MAUTO
     19780**DCL-ENT 19891--CALL

PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:312  
     1860        1        /*T***********************************************************/
     1861        2        /*T*                                                         */
     1862        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1863        4        /*T*                                                         */
     1864        5        /*T***********************************************************/
     1865        6        /*X* PLM = 3,IND=5,ENU=0,ECU=0  */
     1866        7
     1867        8        /*F* NAME: GHS$MONTMR
     1868        9             PURPOSE:
     1869       10                  To provide timer services for monitor procedures.
     1870       11             DESCRIPTION:
     1871       12                  Provides a facility for calling monitor procedures at
     1872       13                  a predetermined time.
     1873       14        */
     1874       15
     1875       16        GHS$MONTMR: PROC(GH$TMR);
     1876       17
     1877       18        %INCLUDE GH_SCHD_M;
     1878      162        %INCLUDE GH_SCHD_E;
     1879      258 S      %INCLUDE GU_LCP6_M;
     1880      259 S      %INCLUDE GH_LCP6_M;
     1881      260        %INCLUDE GH_HARDWARE_M;
     1882      358        %INCLUDE GH_GATE_M;
     1883      399 S      %INCLUDE G_LCP6_E;
     1884      400
     1885      401                                                /* Input parameters                   */
     1886      402        %GH$TMR_BLK (FPTN=GH$TMR, STCLASS=PARAM);
     1887      425
     1888      426                                                /* Auto storage                       */
     1889      427    1   DCL I SBIN;
     1890      428    1   DCL RTIME UBIN(32);
     1891      429    1   DCL BLINK$ PTR;
     1892      430    1   DCL FLINK$ PTR;
     1893      431    1   DCL TMR_PROC$ EPTR;
     1894      432    1   DCL ARG UBIN;
     1895      433    1   DCL TMR$ PTR;
     1896      434                                                /* BASED Structures                   */
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:313  
     1897      435        %GH$TMR_BLK (FPTN=G$TMR);
     1898      458        %G$USER (FPTN = "G$USER(0:0)",STCLASS="BASED(G$USRT$)");
     1899      469
     1900      470                                                /* Internal data                      */
     1901      471    1   DCL GH$TMR_HD$ PTR STATIC SYMDEF INIT(ADDR(NIL));
     1902      472
     1903      473                                                /* External data                      */
     1904      474    1   DCL G$USRT$ PTR SYMREF;
     1905      475    1   DCL GH_HQ(0:0) UBIN SYMREF;
     1906      476    1   DCL GH_CLOCKHD UBIN SYMREF;
     1907      477        %GATE (FPTN = G_CLKGATE,STCLASS=SYMREF);
     1908      496        %GATE (FPTN = G_LNK_CLKGATE,STCLASS=STATIC SYMDEF);
     1909      515
     1910      516                                                /* External procedures                */
     1911      517    1   DCL GHI$UTS ENTRY(1);
     1912      518    1   DCL GHS$RUE ENTRY(4) ALTRET;
     1913      519    1   DCL GHS$EVENT ENTRY(7);
     1914      520
     1915      521        %EJECT;
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:314  
     1916      522        /*F* NAME: GHS$MONTIMRWU
     1917      523             PURPOSE:
     1918      524                  To perform monitor timer functions.
     1919      525             DESCRIPTION:
     1920      526                  This procedure calls monitor procedures that have requested
     1921      527                  monitor timer service, wakes up sleeping users and posts
     1922      528                  events for users whose M$CLOCK timers have expired.
     1923      529        */
     1924      530        /*D*
     1925      531             NAME: GHS$MONTIMRWU
     1926      532             CALL:
     1927      533                  CALL GHS$MONTIMRWU
     1928      534             PARAMETERS:
     1929      535                  There are no parameters for this procedure.
     1930      536             ENVIRONMENT:
     1931      537                  This procedure is called from the Execution Scheduler Idle
     1932      538                  loop and the Real Time Clock Interrupt service procedure.
     1933      539             DESCRIPTION:
     1934      540                  If the time of the entry at the head of the monitor
     1935      541                  timer service list has been reached, the entry is removed
     1936      542                  and the specified procedure is called with the specified
     1937      543                  argument.  It is expected that the called procedure may
     1938      544                  make another monitor timer service request.  This procedure
     1939      545                  is repeated until the list is exhausted or the time of the
     1940      546                  entry at the head of the list has not been reached.
     1941      547
     1942      548                  If the wakeup time of the user at the head of the Scheduler
     1943      549                  Sleep state queue, if any, has been reached, a wakeup
     1944      550                  event is reported on that user.  This procedure is repeated
     1945      551                  until the time of the entry on the head of the wakeup queue
     1946      552                  has not been reached.
     1947      553
     1948      554                  If the time specified for the user at the head of the M$CLOCK
     1949      555                  queue has been reached an M$CLOCK Event is posted for that
     1950      556                  user by calling GHS$EVENT.  This procedure is repeated until
     1951      557                  the time of the entry at the head of the M$CLOCK queue has
     1952      558                  not been reached.
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:315  
     1953      559
     1954      560        */
     1955      561        /* Wake up monitor timer procedures and sleeping users.        */
     1956      562
     1957      563    1   GHS$MONTIMRWU: ENTRY;
     1958      564    1      CALL GHI$UTS(RTIME);                 /* Get current time                   */
     1959      565
     1960      566    1   START_OVER: ;
     1961      567           %LOCK (G=G_LNK_CLKGATE);
     1962      574    1      IF GH$TMR_HD$ ~= ADDR(NIL)
     1963      575    2      THEN DO;
     1964      576    2           IF GH$TMR_HD$->G$TMR.WAKEUP <= RTIME
     1965      577    3           THEN DO;
     1966      578    3                ARG = GH$TMR_HD$->G$TMR.ARG;
     1967      579    3                TMR_PROC$ = GH$TMR_HD$->G$TMR.PROC$;
     1968      580
     1969      581    3                TMR$ = GH$TMR_HD$;
     1970      582    3                CALL UNLINK_BLOCK;
     1971      583
     1972      584                     %UNLOCK (G=G_LNK_CLKGATE);
     1973      591
     1974      592    3                CALL TMR_PROC$(ARG);
     1975      593    3                GOTO START_OVER;
     1976      594    3                END/*do if time < rtime*/;
     1977      595    2           END/*do if hd$ ~nil*/;
     1978      596
     1979      597           %UNLOCK (G=G_LNK_CLKGATE);
     1980      604
     1981      605
     1982      606    1   TMX1: ;
     1983      607    1      I = GH_HQ(%GH_W);
     1984      608    1      IF I ~=  0 AND G$USER.MISC(I) <= RTIME
     1985      609    2      THEN DO;
     1986      610    2           CALL GHS$RUE(%GH_EVWU,I);       /* his time has come                  */
     1987      611    2           GOTO TMX1;                      /* back for next sleeper              */
     1988      612    2           END;
     1989      613
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:316  
     1990      614    2      DO WHILE (GH_CLOCKHD ~=  -1 AND G$USER.UTS(GH_CLOCKHD) <= RTIME);
     1991      615                %LOCK (G = G_CLKGATE);
     1992      622
     1993      623    2           I = GH_CLOCKHD;
     1994      624    2           GH_CLOCKHD  =  G$USER.CLOCK(I);
     1995      625    2           G$USER.CLOCK(I) = 0;
     1996      626    2           CALL GHS$EVENT (I,0,%G_RTTMRSC#,0,,0);
     1997      627
     1998      628                %UNLOCK (G = G_CLKGATE);
     1999      635    2           END;
     2000      636    1      RETURN;
     2001      637        %EJECT;
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:317  
     2002      638        /*D* NAME: GHS$SET_TMR
     2003      639             CALL:
     2004      640                  CALL GHS$SET_TMR (GH$TMR_BLK);
     2005      641             PARAMETERS:
     2006      642                   A structure built using the GH$TMR_BLK macro initialized
     2007      643                   as follows:
     2008      644                     INTERVAL is a time interval from the current time when
     2009      645                              the specified procedure is to be called.
     2010      646
     2011      647                     PROC$ is an EPTR to a monitor procedure to be called.
     2012      648
     2013      649                     ARG is an argument to be passed on the call.
     2014      650
     2015      651             DESCRIPTION:
     2016      652                  An entry containing the call time, Entry and Argument is
     2017      653                  sorted onto a linked list of entries in order of call times.
     2018      654        */
     2019      655
     2020      656
     2021      657
     2022      658    1   GHS$SET_TMR: ENTRY(GH$TMR);
     2023      659           %LOCK (G=G_LNK_CLKGATE);
     2024      666    1      TMR$ = ADDR(GH$TMR);
     2025      667
     2026      668    1      CALL UNLINK_BLOCK;                   /*in case its a call to reset*/
     2027      669
     2028      670    1      CALL GHI$UTS(RTIME);                 /* Get current time                   */
     2029      671    1      RTIME  =  RTIME + GH$TMR.INTERVAL;   /* Plus his interval                  */
     2030      672    1      GH$TMR.WAKEUP = RTIME;
     2031      673
     2032      674
     2033      675    1      BLINK$ = ADDR(NIL);
     2034      676    1      FLINK$ = GH$TMR_HD$;
     2035      677
     2036      678    2      DO WHILE (FLINK$ ~= ADDR(NIL) );
     2037      679    2           IF RTIME < FLINK$->G$TMR.WAKEUP
     2038      680    3           THEN DO;
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:318  
     2039      681    3                FLINK$->G$TMR.BLINK$ = ADDR(GH$TMR);
     2040      682
     2041      683    3   ADD_TO_END:  ;
     2042      684    3                GH$TMR.FLINK$ = FLINK$;
     2043      685    3                GH$TMR.BLINK$ = BLINK$;
     2044      686
     2045      687    3                IF BLINK$ ~= ADDR(NIL)
     2046      688    3                THEN BLINK$->G$TMR.FLINK$ = ADDR(GH$TMR);
     2047      689    3                ELSE GH$TMR_HD$ = ADDR(GH$TMR);
     2048      690
     2049      691                     %UNLOCK (G=G_LNK_CLKGATE);
     2050      698    3                RETURN;
     2051      699    3                END;
     2052      700
     2053      701    2           BLINK$ = FLINK$;
     2054      702    2           FLINK$ = FLINK$->G$TMR.FLINK$;
     2055      703    2           END;
     2056      704
     2057      705    1      GOTO ADD_TO_END;
     2058      706
     2059      707        %EJECT;
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:319  
     2060      708        /*D*  NAME: GHS$CANCEL_TMR
     2061      709              CALL: CALL GHS$CANCEL_TMR (gh$tmr);
     2062      710              PARAMETERS:
     2063      711                    gh$tmr is the monitor timer block entry to be cancelled.
     2064      712              DESCRIPTION:
     2065      713                    The specified montimer entry is cancelled.
     2066      714        */
     2067      715
     2068      716    1   GHS$CANCEL_TMR: ENTRY(GH$TMR);
     2069      717
     2070      718           %LOCK (G=G_LNK_CLKGATE);
     2071      725    1      TMR$ = ADDR(GH$TMR);
     2072      726    1      CALL UNLINK_BLOCK;
     2073      727           %UNLOCK (G=G_LNK_CLKGATE);
     2074      734    1      RETURN;
     2075      735        %EJECT;
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:320  
     2076      736
     2077      737
     2078      738    1   UNLINK_BLOCK: PROC;
     2079      739
     2080      740    2      IF TMR$->G$TMR.WAKEUP ~= 0
     2081      741    3      THEN DO;
     2082      742    3           TMR$->G$TMR.WAKEUP = 0;
     2083      743
     2084      744    3           IF TMR$->G$TMR.BLINK$ = ADDR(NIL)
     2085      745    3           THEN GH$TMR_HD$ = TMR$->G$TMR.FLINK$;
     2086      746    3           ELSE TMR$->G$TMR.BLINK$->G$TMR.FLINK$ = TMR$->G$TMR.FLINK$;
     2087      747
     2088      748    3           IF TMR$->G$TMR.FLINK$ ~= ADDR(NIL)
     2089      749    3           THEN TMR$->G$TMR.FLINK$->G$TMR.BLINK$ = TMR$->G$TMR.BLINK$;
     2090      750
     2091      751    3           TMR$->G$TMR.BLINK$ = ADDR(NIL);
     2092      752    3           TMR$->G$TMR.FLINK$ = ADDR(NIL);
     2093      753    3           END;
     2094      754
     2095      755    2      RETURN;
     2096      756    2   END UNLINK_BLOCK;
     2097      757    1   END GHS$MONTMR;

PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:321  
--  Include file information  --

   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$MONTMR.

   Procedure GHS$MONTMR requires 430 words for executable code.
   Procedure GHS$MONTMR requires 32 words of local(AUTO) storage.

    No errors detected in file GHS$SCHD.:E05TSI    .

PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:322  

 Object Unit name= GHS$MONTMR                                 File name= GHS$SCHD.:E05TOU
 UTS= JUL 29 '97 21:46:43.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     5      5  GHS$MONTMR
    1   Proc  even  none   430    1AE  GHS$MONTMR
    2  RoData even  none     4      4  GHS$MONTMR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GHS$MONTMR
     1      7                  yes      Std        0  GHS$MONTIMRWU
     1     E4                  yes      Std        1  GHS$SET_TMR
     1    153                  yes      Std        1  GHS$CANCEL_TMR

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  GH$TMR_HD$                         0      2  G_LNK_CLKGATE
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:323  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 GHI$UTS
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 GHH$UNLOCK
 yes     yes           Std       4 GHS$RUE
         yes           Std       7 GHS$EVENT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$USRT$                               GH_HQ                                 GH_CLOCKHD
     G_CLKGATE                        r    G$ROS$
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:324  


     1860        1        /*T***********************************************************/
     1861        2        /*T*                                                         */
     1862        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1863        4        /*T*                                                         */
     1864        5        /*T***********************************************************/
     1865        6        /*X* PLM = 3,IND=5,ENU=0,ECU=0  */
     1866        7
     1867        8        /*F* NAME: GHS$MONTMR
     1868        9             PURPOSE:
     1869       10                  To provide timer services for monitor procedures.
     1870       11             DESCRIPTION:
     1871       12                  Provides a facility for calling monitor procedures at
     1872       13                  a predetermined time.
     1873       14        */
     1874       15
     1875       16        GHS$MONTMR: PROC(GH$TMR);

     16   1 000000  D380 0000 0000  xent GHS$MONTMR      LNJ,B5   X6A_AUTO_1
          1 000003       0020 0001                       DC       32,1
          1 000005  0F81 0006                            B        s:564,PREL

     1876       17
     1877       18        %INCLUDE GH_SCHD_M;
     1878      162        %INCLUDE GH_SCHD_E;
     1879      258 S      %INCLUDE GU_LCP6_M;
     1880      259 S      %INCLUDE GH_LCP6_M;
     1881      260        %INCLUDE GH_HARDWARE_M;
     1882      358        %INCLUDE GH_GATE_M;
     1883      399 S      %INCLUDE G_LCP6_E;
     1884      400
     1885      401                                                /* Input parameters                   */
     1886      402        %GH$TMR_BLK (FPTN=GH$TMR, STCLASS=PARAM);
     1887      425
     1888      426                                                /* Auto storage                       */
     1889      427    1   DCL I SBIN;
     1890      428    1   DCL RTIME UBIN(32);
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:325  
     1891      429    1   DCL BLINK$ PTR;
     1892      430    1   DCL FLINK$ PTR;
     1893      431    1   DCL TMR_PROC$ EPTR;
     1894      432    1   DCL ARG UBIN;
     1895      433    1   DCL TMR$ PTR;
     1896      434                                                /* BASED Structures                   */
     1897      435        %GH$TMR_BLK (FPTN=G$TMR);
     1898      458        %G$USER (FPTN = "G$USER(0:0)",STCLASS="BASED(G$USRT$)");
     1899      469
     1900      470                                                /* Internal data                      */
     1901      471    1   DCL GH$TMR_HD$ PTR STATIC SYMDEF INIT(ADDR(NIL));
     1902      472
     1903      473                                                /* External data                      */
     1904      474    1   DCL G$USRT$ PTR SYMREF;
     1905      475    1   DCL GH_HQ(0:0) UBIN SYMREF;
     1906      476    1   DCL GH_CLOCKHD UBIN SYMREF;
     1907      477        %GATE (FPTN = G_CLKGATE,STCLASS=SYMREF);
     1908      496        %GATE (FPTN = G_LNK_CLKGATE,STCLASS=STATIC SYMDEF);
     1909      515
     1910      516                                                /* External procedures                */
     1911      517    1   DCL GHI$UTS ENTRY(1);
     1912      518    1   DCL GHS$RUE ENTRY(4) ALTRET;
     1913      519    1   DCL GHS$EVENT ENTRY(7);
     1914      520
     1915      521        %EJECT;
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:326  
     1916      522        /*F* NAME: GHS$MONTIMRWU
     1917      523             PURPOSE:
     1918      524                  To perform monitor timer functions.
     1919      525             DESCRIPTION:
     1920      526                  This procedure calls monitor procedures that have requested
     1921      527                  monitor timer service, wakes up sleeping users and posts
     1922      528                  events for users whose M$CLOCK timers have expired.
     1923      529        */
     1924      530        /*D*
     1925      531             NAME: GHS$MONTIMRWU
     1926      532             CALL:
     1927      533                  CALL GHS$MONTIMRWU
     1928      534             PARAMETERS:
     1929      535                  There are no parameters for this procedure.
     1930      536             ENVIRONMENT:
     1931      537                  This procedure is called from the Execution Scheduler Idle
     1932      538                  loop and the Real Time Clock Interrupt service procedure.
     1933      539             DESCRIPTION:
     1934      540                  If the time of the entry at the head of the monitor
     1935      541                  timer service list has been reached, the entry is removed
     1936      542                  and the specified procedure is called with the specified
     1937      543                  argument.  It is expected that the called procedure may
     1938      544                  make another monitor timer service request.  This procedure
     1939      545                  is repeated until the list is exhausted or the time of the
     1940      546                  entry at the head of the list has not been reached.
     1941      547
     1942      548                  If the wakeup time of the user at the head of the Scheduler
     1943      549                  Sleep state queue, if any, has been reached, a wakeup
     1944      550                  event is reported on that user.  This procedure is repeated
     1945      551                  until the time of the entry on the head of the wakeup queue
     1946      552                  has not been reached.
     1947      553
     1948      554                  If the time specified for the user at the head of the M$CLOCK
     1949      555                  queue has been reached an M$CLOCK Event is posted for that
     1950      556                  user by calling GHS$EVENT.  This procedure is repeated until
     1951      557                  the time of the entry at the head of the M$CLOCK queue has
     1952      558                  not been reached.
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:327  
     1953      559
     1954      560        */
     1955      561        /* Wake up monitor timer procedures and sleeping users.        */
     1956      562
     1957      563    1   GHS$MONTIMRWU: ENTRY;

    563   1 000007  D380 0000 0000  xent GHS$MONTIMRWU   LNJ,B5   X6A_AUTO_1
          1 00000A       0020 0001                       DC       32,1

     1958      564    1      CALL GHI$UTS(RTIME);                 /* Get current time                   */

    564   1 00000C  EBC7 0007                            LAB,B6   RTIME,AUTO
          1 00000E  EFC7 0014                            STB,B6   TMR$+4,AUTO
          1 000010  BBC7 0014                            LAB,B3   TMR$+4,AUTO
          1 000012  CBF0 0100                            LAB,B4   256,IMO
          1 000014  E380 0000 0000  xent                 LNJ,B6   GHI$UTS
          1 000017       0001                            DC       s:517,PREL

    517   1                              START_OVER      null
     1959      565
     1960      566    1   START_OVER: ;
     1961      567           %LOCK (G=G_LNK_CLKGATE);

    572   1 000018  BB80 0000 0000  02   START_OVER      LAB,B3   0
          1 00001B  CBF0 0100                            LAB,B4   256,IMO
          1 00001D  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 000020       0001                            DC       s:574,PREL

     1962      574    1      IF GH$TMR_HD$ ~= ADDR(NIL)

    574   1 000021  8D80 0000 0000  00                   CMN      GH$TMR_HD$
          1 000024  0901 0030                            BE       s:602,PREL

     1963      575    2      THEN DO;

     1964      576    2           IF GH$TMR_HD$->G$TMR.WAKEUP <= RTIME

PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:328  
    576   1 000026  EC80 0000 0000  00                   LDB,B6   GH$TMR_HD$
          1 000029  8CC6 0004                            LDI      4,B6
          1 00002B  84C7 0007                            SID      RTIME,AUTO
          1 00002D  6981 0003                            BNEZ,R6  s:576+11,PREL
          1 00002F  7901 0003                            BEZ,R7   s:578,PREL
          1 000031  0601 0023                            BCT      s:602,PREL

     1965      577    3           THEN DO;

     1966      578    3                ARG = GH$TMR_HD$->G$TMR.ARG;

    578   1 000033  E846 0002                            LDR,R6   2,B6
          1 000035  EF47 000F                            STR,R6   ARG,AUTO

     1967      579    3                TMR_PROC$ = GH$TMR_HD$->G$TMR.PROC$;

    579   1 000037  DC86                                 LDB,B5   ,B6
          1 000038  DFC7 000D                            STB,B5   TMR_PROC$,AUTO

     1968      580
     1969      581    3                TMR$ = GH$TMR_HD$;

    581   1 00003A  EFC7 0010                            STB,B6   TMR$,AUTO

     1970      582    3                CALL UNLINK_BLOCK;

    582   1 00003C  E3C0 0137                            LNJ,B6   s:0,PREL
          1 00003E       0001                            DC       s:589,PREL

     1971      583
     1972      584                     %UNLOCK (G=G_LNK_CLKGATE);

    589   1 00003F  BB80 0000 0000  02                   LAB,B3   0
          1 000042  CBF0 0100                            LAB,B4   256,IMO
          1 000044  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000047       0001                            DC       s:592,PREL

PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:329  
     1973      591
     1974      592    3                CALL TMR_PROC$(ARG);

    592   1 000048  EBC7 000F                            LAB,B6   ARG,AUTO
          1 00004A  EFC7 0014                            STB,B6   TMR$+4,AUTO
          1 00004C  BBC7 0014                            LAB,B3   TMR$+4,AUTO
          1 00004E  9CC7 000D                            LDB,B1   TMR_PROC$,AUTO
          1 000050  CBF0 0100                            LAB,B4   256,IMO
          1 000052  E381                                 LNJ,B6   ,B1
          1 000053       0001                            DC       s:593,PREL

     1975      593    3                GOTO START_OVER;

    593   1 000054  0FC4                                 B        s:517,SPREL

     1976      594    3                END/*do if time < rtime*/;
     1977      595    2           END/*do if hd$ ~nil*/;
     1978      596
     1979      597           %UNLOCK (G=G_LNK_CLKGATE);

    602   1 000055  BB80 0000 0000  02                   LAB,B3   0
          1 000058  CBF0 0100                            LAB,B4   256,IMO
          1 00005A  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 00005D       0001                            DC       s:592,PREL

    592   1                              TMX1            null
     1980      604
     1981      605
     1982      606    1   TMX1: ;
     1983      607    1      I = GH_HQ(%GH_W);

    607   1 00005E  E800 0000 000E  xsym TMX1            LDR,R6   GH_HQ+14
          1 000061  EF47 0006                            STR,R6   I,AUTO

     1984      608    1      IF I ~=  0 AND G$USER.MISC(I) <= RTIME

    608   1 000063  6901 0022                            BEZ,R6   s:614,PREL
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:330  
          1 000065  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          1 000068  DBC6 0005                            LAB,B5   5,B6
          1 00006A  B856                                 LDR,R3   R6
          1 00006B  3F0C                                 MLV,R3   12
          1 00006C  8CB5                                 LDI      ,B5,R3
          1 00006D  84C7 0007                            SID      RTIME,AUTO
          1 00006F  6981 0003                            BNEZ,R6  s:608+16,PREL
          1 000071  7901 0003                            BEZ,R7   s:610,PREL
          1 000073  0601 0012                            BCT      s:614,PREL

     1985      609    2      THEN DO;

     1986      610    2           CALL GHS$RUE(%GH_EVWU,I);       /* his time has come                  */

    610   1 000075  DBF0 0002                            LAB,B5   2,IMO
          1 000077  CBC7 0006                            LAB,B4   I,AUTO
          1 000079  CFC7 0016                            STB,B4   TMR$+6,AUTO
          1 00007B  DFC7 0014                            STB,B5   TMR$+4,AUTO
          1 00007D  BBC7 0014                            LAB,B3   TMR$+4,AUTO
          1 00007F  CBF0 0200                            LAB,B4   512,IMO
          1 000081  E380 0000 0000  xent                 LNJ,B6   GHS$RUE
          1 000084       0001                            DC       s:611,PREL

     1987      611    2           GOTO TMX1;                      /* back for next sleeper              */

    611   1 000085  0FD9                                 B        s:592,SPREL

     1988      612    2           END;
     1989      613
     1990      614    2      DO WHILE (GH_CLOCKHD ~=  -1 AND G$USER.UTS(GH_CLOCKHD) <= RTIME);

    614   1 000086  0F81 0044                            B        s:635,PREL

     1991      615                %LOCK (G = G_CLKGATE);

    620   1 000088  BB80 0000 0002  02                   LAB,B3   +2
          1 00008B  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:331  
          1 00008D  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 000090       0001                            DC       s:623,PREL

     1992      622
     1993      623    2           I = GH_CLOCKHD;

    623   1 000091  E800 0000 0000  xsym                 LDR,R6   GH_CLOCKHD
          1 000094  EF47 0006                            STR,R6   I,AUTO

     1994      624    2           GH_CLOCKHD  =  G$USER.CLOCK(I);

    624   1 000096  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          1 000099  B856                                 LDR,R3   R6
          1 00009A  3F18                                 MLV,R3   24
          1 00009B  3E09                                 ADV,R3   9
          1 00009C  E836                                 LDR,R6   ,B6,R3
          1 00009D  EF00 0000 0000  xsym                 STR,R6   GH_CLOCKHD

     1995      625    2           G$USER.CLOCK(I) = 0;

    625   1 0000A0  8736                                 CL       ,B6,R3

     1996      626    2           CALL GHS$EVENT (I,0,%G_RTTMRSC#,0,,0);

    626   1 0000A1  EBF0 0000                            LAB,B6   0,IMO
          1 0000A3  DBF0 0001                            LAB,B5   1,IMO
          1 0000A5  CBF0 0000                            LAB,B4   0,IMO
          1 0000A7  BBF0 0000                            LAB,B3   0,IMO
          1 0000A9  BFC7 001E                            STB,B3   TMR$+14,AUTO
          1 0000AB  AB80 0000 0000                       LAB,B2   0
          1 0000AE  AFC7 001C                            STB,B2   TMR$+12,AUTO
          1 0000B0  CFC7 001A                            STB,B4   TMR$+10,AUTO
          1 0000B2  DFC7 0018                            STB,B5   TMR$+8,AUTO
          1 0000B4  EFC7 0016                            STB,B6   TMR$+6,AUTO
          1 0000B6  9BC7 0006                            LAB,B1   I,AUTO
          1 0000B8  9FC7 0014                            STB,B1   TMR$+4,AUTO
          1 0000BA  BBC7 0014                            LAB,B3   TMR$+4,AUTO
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:332  
          1 0000BC  CBF0 0600                            LAB,B4   1536,IMO
          1 0000BE  E380 0000 0000  xent                 LNJ,B6   GHS$EVENT
          1 0000C1       0001                            DC       s:633,PREL

     1997      627
     1998      628                %UNLOCK (G = G_CLKGATE);

    633   1 0000C2  BB80 0000 0002  02                   LAB,B3   +2
          1 0000C5  CBF0 0100                            LAB,B4   256,IMO
          1 0000C7  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0000CA       0001                            DC       s:635,PREL

     1999      635    2           END;

    635   1 0000CB  E800 0000 0000  xsym                 LDR,R6   GH_CLOCKHD
          1 0000CE  6DFF                                 CMV,R6   -1
          1 0000CF  0901 0011                            BE       s:636,PREL
          1 0000D1  EC80 0000 0000  xsym                 LDB,B6   G$USRT$
          1 0000D4  DBC6 0007                            LAB,B5   7,B6
          1 0000D6  B856                                 LDR,R3   R6
          1 0000D7  3F0C                                 MLV,R3   12
          1 0000D8  8CB5                                 LDI      ,B5,R3
          1 0000D9  84C7 0007                            SID      RTIME,AUTO
          1 0000DB  0681 FFAC                            BCF      s:620,PREL
          1 0000DD  6981 0003                            BNEZ,R6  s:636,PREL
          1 0000DF  7901 FFA8                            BEZ,R7   s:620,PREL

     2000      636    1      RETURN;

    636   1 0000E1  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2001      637        %EJECT;
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:333  
     2002      638        /*D* NAME: GHS$SET_TMR
     2003      639             CALL:
     2004      640                  CALL GHS$SET_TMR (GH$TMR_BLK);
     2005      641             PARAMETERS:
     2006      642                   A structure built using the GH$TMR_BLK macro initialized
     2007      643                   as follows:
     2008      644                     INTERVAL is a time interval from the current time when
     2009      645                              the specified procedure is to be called.
     2010      646
     2011      647                     PROC$ is an EPTR to a monitor procedure to be called.
     2012      648
     2013      649                     ARG is an argument to be passed on the call.
     2014      650
     2015      651             DESCRIPTION:
     2016      652                  An entry containing the call time, Entry and Argument is
     2017      653                  sorted onto a linked list of entries in order of call times.
     2018      654        */
     2019      655
     2020      656
     2021      657
     2022      658    1   GHS$SET_TMR: ENTRY(GH$TMR);

    658   1 0000E4  D380 0000 0000  xent GHS$SET_TMR     LNJ,B5   X6A_AUTO_1
          1 0000E7       0020 0001                       DC       32,1

     2023      659           %LOCK (G=G_LNK_CLKGATE);

    664   1 0000E9  BB80 0000 0000  02                   LAB,B3   0
          1 0000EC  CBF0 0100                            LAB,B4   256,IMO
          1 0000EE  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 0000F1       0001                            DC       s:666,PREL

     2024      666    1      TMR$ = ADDR(GH$TMR);

    666   1 0000F2  ECC7 0004                            LDB,B6   @GH$TMR,AUTO
          1 0000F4  EFC7 0010                            STB,B6   TMR$,AUTO

PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:334  
     2025      667
     2026      668    1      CALL UNLINK_BLOCK;                   /*in case its a call to reset*/

    668   1 0000F6  E3C0 007D                            LNJ,B6   s:0,PREL
          1 0000F8       0001                            DC       s:670,PREL

     2027      669
     2028      670    1      CALL GHI$UTS(RTIME);                 /* Get current time                   */

    670   1 0000F9  EBC7 0007                            LAB,B6   RTIME,AUTO
          1 0000FB  EFC7 0014                            STB,B6   TMR$+4,AUTO
          1 0000FD  BBC7 0014                            LAB,B3   TMR$+4,AUTO
          1 0000FF  CBF0 0100                            LAB,B4   256,IMO
          1 000101  E380 0000 0000  xent                 LNJ,B6   GHI$UTS
          1 000104       0001                            DC       s:671,PREL

     2029      671    1      RTIME  =  RTIME + GH$TMR.INTERVAL;   /* Plus his interval                  */

    671   1 000105  ECC7 0004                            LDB,B6   @GH$TMR,AUTO
          1 000107  F846 0003                            LDR,R7   3,B6
          1 000109  6C00                                 LDV,R6   0
          1 00010A  8447 0007                            AID      RTIME,AUTO
          1 00010C  8D47 0007                            SDI      RTIME,AUTO

     2030      672    1      GH$TMR.WAKEUP = RTIME;

    672   1 00010E  8D46 0004                            SDI      4,B6

     2031      673
     2032      674
     2033      675    1      BLINK$ = ADDR(NIL);

    675   1 000110  DB80 0000 0000                       LAB,B5   0
          1 000113  DFC7 0009                            STB,B5   BLINK$,AUTO

     2034      676    1      FLINK$ = GH$TMR_HD$;

PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:335  
    676   1 000115  CC80 0000 0000  00                   LDB,B4   GH$TMR_HD$
          1 000118  CFC7 000B                            STB,B4   FLINK$,AUTO

     2035      677
     2036      678    2      DO WHILE (FLINK$ ~= ADDR(NIL) );

    678   1 00011A  0F81 0034                            B        s:703,PREL

     2037      679    2           IF RTIME < FLINK$->G$TMR.WAKEUP

    679   1 00011C  ECC7 000B                            LDB,B6   FLINK$,AUTO
          1 00011E  8CC7 0007                            LDI      RTIME,AUTO
          1 000120  84C6 0004                            SID      4,B6
          1 000122  0601 0026                            BCT      s:701,PREL

     2038      680    3           THEN DO;

     2039      681    3                FLINK$->G$TMR.BLINK$ = ADDR(GH$TMR);

    681   1 000124  DCC7 0004                            LDB,B5   @GH$TMR,AUTO
          1 000126  DFC6 0008                            STB,B5   8,B6

    681   1                              ADD_TO_END      null
     2040      682
     2041      683    3   ADD_TO_END:  ;
     2042      684    3                GH$TMR.FLINK$ = FLINK$;

    684   1 000128  ECC7 000B            ADD_TO_END      LDB,B6   FLINK$,AUTO
          1 00012A  DCC7 0004                            LDB,B5   @GH$TMR,AUTO
          1 00012C  EFC5 0006                            STB,B6   6,B5

     2043      685    3                GH$TMR.BLINK$ = BLINK$;

    685   1 00012E  CCC7 0009                            LDB,B4   BLINK$,AUTO
          1 000130  CFC5 0008                            STB,B4   8,B5

     2044      686
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:336  
     2045      687    3                IF BLINK$ ~= ADDR(NIL)

    687   1 000132  8DC7 0009                            CMN      BLINK$,AUTO
          1 000134  0901 0005                            BE       s:689,PREL

     2046      688    3                THEN BLINK$->G$TMR.FLINK$ = ADDR(GH$TMR);

    688   1 000136  DFC4 0006                            STB,B5   6,B4
          1 000138  0F81 0004                            B        s:696,PREL

     2047      689    3                ELSE GH$TMR_HD$ = ADDR(GH$TMR);

    689   1 00013A  DF80 0000 0000  00                   STB,B5   GH$TMR_HD$

     2048      690
     2049      691                     %UNLOCK (G=G_LNK_CLKGATE);

    696   1 00013D  BB80 0000 0000  02                   LAB,B3   0
          1 000140  CBF0 0100                            LAB,B4   256,IMO
          1 000142  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000145       0001                            DC       s:698,PREL

     2050      698    3                RETURN;

    698   1 000146  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2051      699    3                END;
     2052      700
     2053      701    2           BLINK$ = FLINK$;

    701   1 000149  EFC7 0009                            STB,B6   BLINK$,AUTO

     2054      702    2           FLINK$ = FLINK$->G$TMR.FLINK$;

    702   1 00014B  DCC6 0006                            LDB,B5   6,B6
          1 00014D  DFC7 000B                            STB,B5   FLINK$,AUTO

PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:337  
     2055      703    2           END;

    703   1 00014F  8DC7 000B                            CMN      FLINK$,AUTO
          1 000151  09CB                                 BNE      s:679,SPREL

     2056      704
     2057      705    1      GOTO ADD_TO_END;

    705   1 000152  0FD6                                 B        s:681,SPREL

     2058      706
     2059      707        %EJECT;
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:338  
     2060      708        /*D*  NAME: GHS$CANCEL_TMR
     2061      709              CALL: CALL GHS$CANCEL_TMR (gh$tmr);
     2062      710              PARAMETERS:
     2063      711                    gh$tmr is the monitor timer block entry to be cancelled.
     2064      712              DESCRIPTION:
     2065      713                    The specified montimer entry is cancelled.
     2066      714        */
     2067      715
     2068      716    1   GHS$CANCEL_TMR: ENTRY(GH$TMR);

    716   1 000153  D380 0000 0000  xent GHS$CANCEL_TMR  LNJ,B5   X6A_AUTO_1
          1 000156       0020 0001                       DC       32,1

     2069      717
     2070      718           %LOCK (G=G_LNK_CLKGATE);

    723   1 000158  BB80 0000 0000  02                   LAB,B3   0
          1 00015B  CBF0 0100                            LAB,B4   256,IMO
          1 00015D  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 000160       0001                            DC       s:725,PREL

     2071      725    1      TMR$ = ADDR(GH$TMR);

    725   1 000161  ECC7 0004                            LDB,B6   @GH$TMR,AUTO
          1 000163  EFC7 0010                            STB,B6   TMR$,AUTO

     2072      726    1      CALL UNLINK_BLOCK;

    726   1 000165  E3C0 000E                            LNJ,B6   s:0,PREL
          1 000167       0001                            DC       s:732,PREL

     2073      727           %UNLOCK (G=G_LNK_CLKGATE);

    732   1 000168  BB80 0000 0000  02                   LAB,B3   0
          1 00016B  CBF0 0100                            LAB,B4   256,IMO
          1 00016D  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000170       0001                            DC       s:734,PREL
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:339  

     2074      734    1      RETURN;

    734   1 000171  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     2075      735        %EJECT;
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:340  
     2076      736
     2077      737
     2078      738    1   UNLINK_BLOCK: PROC;

    738   1 000174  EFC7 0012            UNLINK_BLOCK    STB,B6   TMR$+2,AUTO

     2079      739
     2080      740    2      IF TMR$->G$TMR.WAKEUP ~= 0

    740   1 000176  DCC7 0010                            LDB,B5   TMR$,AUTO
          1 000178  8CC5 0004                            LDI      4,B5
          1 00017A  84F0 0000 0000                       SID      0,IMO
          1 00017D  6981 0003                            BNEZ,R6  s:742,PREL
          1 00017F  7901 002A                            BEZ,R7   s:755,PREL

     2081      741    3      THEN DO;

     2082      742    3           TMR$->G$TMR.WAKEUP = 0;

    742   1 000181  8745 0004                            CL       4,B5
          1 000183  8745 0005                            CL       5,B5

     2083      743
     2084      744    3           IF TMR$->G$TMR.BLINK$ = ADDR(NIL)

    744   1 000185  8DC5 0008                            CMN      8,B5
          1 000187  0981 0008                            BNE      s:746,PREL

     2085      745    3           THEN GH$TMR_HD$ = TMR$->G$TMR.FLINK$;

    745   1 000189  ECC5 0006                            LDB,B6   6,B5
          1 00018B  EF80 0000 0000  00                   STB,B6   GH$TMR_HD$
          1 00018E  0F81 0007                            B        s:748,PREL

     2086      746    3           ELSE TMR$->G$TMR.BLINK$->G$TMR.FLINK$ = TMR$->G$TMR.FLINK$;

    746   1 000190  ECC5 0008                            LDB,B6   8,B5
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:341  
          1 000192  CCC5 0006                            LDB,B4   6,B5
          1 000194  CFC6 0006                            STB,B4   6,B6

     2087      747
     2088      748    3           IF TMR$->G$TMR.FLINK$ ~= ADDR(NIL)

    748   1 000196  8DC5 0006                            CMN      6,B5
          1 000198  0901 0007                            BE       s:751,PREL

     2089      749    3           THEN TMR$->G$TMR.FLINK$->G$TMR.BLINK$ = TMR$->G$TMR.BLINK$;

    749   1 00019A  ECC5 0006                            LDB,B6   6,B5
          1 00019C  CCC5 0008                            LDB,B4   8,B5
          1 00019E  CFC6 0008                            STB,B4   8,B6

     2090      750
     2091      751    3           TMR$->G$TMR.BLINK$ = ADDR(NIL);

    751   1 0001A0  EB80 0000 0000                       LAB,B6   0
          1 0001A3  EFC5 0008                            STB,B6   8,B5

     2092      752    3           TMR$->G$TMR.FLINK$ = ADDR(NIL);

    752   1 0001A5  CB80 0000 0000                       LAB,B4   0
          1 0001A8  CFC5 0006                            STB,B4   6,B5

     2093      753    3           END;

     2094      754
     2095      755    2      RETURN;

    755   1 0001AA  ECC7 0012                            LDB,B6   TMR$+2,AUTO
          1 0001AC  C3C6 0001                            LNJ,B4   1,B6
     2096      756    2   END UNLINK_BLOCK;
     2097      757    1   END GHS$MONTMR;

PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:342  
--  Include file information  --

   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GHS$MONTMR.
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:343  

 **** Variables and constants ****

  ****  Section 000  Data  GHS$MONTMR

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GH$TMR_HD$                 2-0-0/w STRC(48)    r     1 G_LNK_CLKGATE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @GH$TMR                    F-0-0/w UBIN(16)    r     1 ARG
     9-0-0/w PTR         r     1 BLINK$                     B-0-0/w PTR         r     1 FLINK$
    *0-0-0/w STRC(160)   r     1 GH$TMR                     6-0-0/w SBIN(16)    r     1 I
     7-0-0/w UBIN(32)    r     1 RTIME                     10-0-0/w PTR         r     1 TMR$
     D-0-0/w EPTR        r     1 TMR_PROC$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$USRT$                    0-0-0/w UBIN(16)    r     1 GH_CLOCKHD
     0-0-0/w UBIN(16)    r     1 GH_HQ(0:0)                 0-0-0/w STRC(48)    r     1 G_CLKGATE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(160)   r     1 G$TMR                      0-0-0/w STRC(384)   r     1 G$USER(0:0)

PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:344  

   Procedure GHS$MONTMR requires 430 words for executable code.
   Procedure GHS$MONTMR requires 32 words of local(AUTO) storage.

    No errors detected in file GHS$SCHD.:E05TSI    .
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:345  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:346  
          MINI XREF LISTING

ADD_TO_END
       681**LABEL     705--GOTO
ARG
       432**DCL       578<<ASSIGN    592<>CALL
BLINK$
       429**DCL       675<<ASSIGN    685>>ASSIGN    687>>IF        688>>ASSIGN    701<<ASSIGN
FLINK$
       430**DCL       676<<ASSIGN    678>>DOWHILE   679>>IF        681>>ASSIGN    684>>ASSIGN    701>>ASSIGN
       702<<ASSIGN    702>>ASSIGN
G$TMR.ARG
       453**DCL       454--REDEF     578>>ASSIGN
G$TMR.BLINK$
       456**DCL       681<<ASSIGN    744>>IF        746>>ASSIGN    749<<ASSIGN    749>>ASSIGN    751<<ASSIGN
G$TMR.FLINK$
       455**DCL       688<<ASSIGN    702>>ASSIGN    745>>ASSIGN    746<<ASSIGN    746>>ASSIGN    748>>IF
       749>>ASSIGN    752<<ASSIGN
G$TMR.PROC$
       453**DCL       579>>ASSIGN
G$TMR.WAKEUP
       455**DCL       576>>IF        679>>IF        740>>IF        742<<ASSIGN
G$USER.CLOCK
       465**DCL       624>>ASSIGN    625<<ASSIGN
G$USER.MISC
       464**DCL       464--REDEF     608>>IF
G$USER.UTS
       465**DCL       614>>DOWHILE
G$USRT$
       474**DCL       463--IMP-PTR   608>>IF        614>>DOWHILE   624>>ASSIGN    625>>ASSIGN
GH$TMR
       416**DCL        16--PROC      658--ENTRY     666--ASSIGN    681--ASSIGN    688--ASSIGN    689--ASSIGN
       716--ENTRY     725--ASSIGN
GH$TMR.ARG
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:347  
       420**DCL       421--REDEF
GH$TMR.BLINK$
       423**DCL       685<<ASSIGN
GH$TMR.FLINK$
       422**DCL       684<<ASSIGN
GH$TMR.INTERVAL
       421**DCL       671>>ASSIGN
GH$TMR.WAKEUP
       422**DCL       672<<ASSIGN
GH$TMR_HD$
       471**DCL       574>>IF        576>>IF        578>>ASSIGN    579>>ASSIGN    581>>ASSIGN    676>>ASSIGN
       689<<ASSIGN    745<<ASSIGN
GHH$LOCK
       398**DCL-ENT   572--CALL      620--CALL      664--CALL      723--CALL
GHH$UNLOCK
       398**DCL-ENT   589--CALL      602--CALL      633--CALL      696--CALL      732--CALL
GHI$UTS
       517**DCL-ENT   564--CALL      670--CALL
GHS$EVENT
       519**DCL-ENT   626--CALL
GHS$RUE
       518**DCL-ENT   610--CALL
GH_CLOCKHD
       476**DCL       614>>DOWHILE   614>>DOWHILE   623>>ASSIGN    624<<ASSIGN
GH_HQ
       475**DCL       607>>ASSIGN
G_CLKGATE
       489**DCL       620<>CALL      633<>CALL
G_LNK_CLKGATE
       508**DCL       572<>CALL      589<>CALL      602<>CALL      664<>CALL      696<>CALL      723<>CALL
       732<>CALL
I
       427**DCL       607<<ASSIGN    608>>IF        608>>IF        610<>CALL      623<<ASSIGN    624>>ASSIGN
       625>>ASSIGN    626<>CALL
RTIME
       428**DCL       564<>CALL      576>>IF        608>>IF        614>>DOWHILE   670<>CALL      671<<ASSIGN
PL6.E3A0      #008=GHS$MONTMR File=GHS$SCHD.:E05TSI                              TUE 07/29/97 21:46 Page:348  
       671>>ASSIGN    672>>ASSIGN    679>>IF
START_OVER
       517**LABEL     593--GOTO
TMR$
       433**DCL       581<<ASSIGN    666<<ASSIGN    725<<ASSIGN    740>>IF        742>>ASSIGN    744>>IF
       745>>ASSIGN    746>>ASSIGN    746>>ASSIGN    748>>IF        749>>ASSIGN    749>>ASSIGN    751>>ASSIGN
       752>>ASSIGN
TMR_PROC$
       431**DCL       579<<ASSIGN    592>>CALL
TMX1
       592**LABEL     611--GOTO
UNLINK_BLOCK
       738**PROC      582--CALL      668--CALL      726--CALL
