VERSION E05

PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:1    
        1        1        /*M* NMA$MAIN - Main procedure for MIRROR program.                 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
        8        8        /*F*
        9        9        NAME:           .*A*
       10       10        The MIRROR processor is used to create, display, manipulate,
       11       11        and terminate Mirrored Disk devices on CP-6.
       12       12
       13       13        .*B*
       14       14        For additional information, enter:
       15       15
       16       16        .       HELP (MIRROR) INVOKING
       17       17        .       HELP (MIRROR) COMMANDS
       18       18        .       HELP (MIRROR) OPTIONS
       19       19        .       HELP (MIRROR) TOPICS
       20       20
       21       21        */
       22       22        /*F*
       23       23        NAME:           INVOCATION INVOKE INVOKING SYNTAX
       24       24
       25       25        Syntax:         !MIRROR [fid1] [ {ON|TO|OVER|INTO} , fid2 ]
       26       26
       27       27        .*B*            PARAMETERS fid1
       28       28        Parameters:
       29       29
       30       30        fid1            specifies an optional fid from which commands are read.
       31       31                The default is the command stream (SI#) or M$SI.
       32       32
       33       33        .*B*            fid2
       34       34        fid2            specifies an optional fid into which listed output would
       35       35                be printed.  The default is the listing output device or M$LO.
       36       36
       37       37        .*B*            DESCRIPTION
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:2    
       38       38        Description:
       39       39
       40       40        The MIRROR processor is used to create, display, update, manipulate,
       41       41        and terminate Mirrored Disk devices on CP-6.  The MIRROR processor
       42       42        reads commands from the users, and generates listing and diagnostic
       43       43        from the execution of those commands.
       44       44
       45       45        For additional information, enter:
       46       46
       47       47        .       HELP (MIRROR) COMMANDS
       48       48        .       HELP (MIRROR) OPTIONS
       49       49        .       HELP (MIRROR) DCBS
       50       50        .       HELP (MIRROR) ENVIRONMENT
       51       51
       52       52        .*K*            DCBS
       53       53        The MIRROR processor uses the following DCBS:
       54       54
       55       55        .       DCB             Usage:
       56       56        .       ----            ----------------------------------------------
       57       57        .       M$DO            Diagnostic output.
       58       58        .       M$EI            Read first Mirrored Disk device.
       59       59        .       M$EO            Read/write second Mirrored Disk device.
       60       60        .       M$LO            Listed output (DCB4).
       61       61        .       M$ME            Output greeting.
       62       62        .       M$SI            Read commands (DCB1).
       63       63
       64       64        .*K*            ENVIRONMENT PRIVILEGES MODE
       65       65        The MIRROR program requires that the user be authorized for the SPCLMM,
       66       66        IOQ, and IOQW privileges.
       67       67
       68       68        The MIRROR program executes in either the online, batch, or ghost modes.
       69       69
       70       70        */
       71       71        %EJECT ;
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:3    
       72       72        /*F*
       73       73        NAME:           NMA$MAIN
       74       74
       75       75        */
       76       76        /*D*
       77       77        NAME:           NMA$MAIN
       78       78
       79       79        CALL:           None.
       80       80
       81       81        PARAMETERS:     None.
       82       82
       83       83        DESCRIPTION:
       84       84
       85       85        The NMA$MAIN procedure is the main procedure for the MIRROR program.
       86       86        NMA$MAIN controls the execution of the MIRROR program. NMA$MAIN
       87       87        calls other procedures to initialize the MIRROR program, to do the
       88       88        COMPARE or COPY operation, and to exit the MIRROR program.
       89       89
       90       90        REFERENCE:      CP-6 Host Library Services Reference Manual
       91       91                        CP-6 Host Monitor Services Reference Manual
       92       92                        CP-6 Programmer Reference Manual
       93       93                        AF1274C
       94       94        */
       95       95        %EJECT ;
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:4    
       96       96        NMA$MAIN:       PROC MAIN ;
       97       97        /*
       98       98                        Includes
       99       99        */
      100      100        %INCLUDE                B_ERRORS_C ;
      101     1227        %INCLUDE                CP_6 ;
      102     6786        %INCLUDE                NI$TABLES ;
      103     7002        %INCLUDE                NI_DATA_C ;
      104     7115        %INCLUDE                NM_PERR_C ;
      105     7192        %INCLUDE                NM_MACRO_M ;
      106     8597        %INCLUDE                XUG_ENTRY ;
      107     8628        %INCLUDE                XU_MACRO_C ;
      108    11734        /*
      109    11735                        Entries
      110    11736        */
      111    11737    1   DCL 1 NMM$DONT_MIRROR   ENTRY    ALTRET ;
      112    11738    1   DCL 1 NMC$COPY          ENTRY    ALTRET ;
      113    11739    1   DCL 1 NME$ERRMSG        ENTRY(6) ;
      114    11740    1   DCL 1 NMF$FAIL          ENTRY    ALTRET ;
      115    11741    1   DCL 1 NMI$INIT          ENTRY    ALTRET ;
      116    11742    1   DCL 1 NMK$KOMPARE       ENTRY    ALTRET ;
      117    11743    1   DCL 1 NMD$DISPLAY       ENTRY    ALTRET ;
      118    11744    1   DCL 1 NMM$MIRROR        ENTRY    ALTRET ;
      119    11745    1   DCL 1 NMO$DCT           ENTRY(2) ALTRET ;
      120    11746    1   DCL 1 NMO$DEFAULTS      ENTRY ;
      121    11747    1   DCL 1 NMO$DEV           ENTRY(2) ALTRET ;
      122    11748    1   DCL 1 NMS$SWITCH        ENTRY    ALTRET ;
      123    11749    1   DCL 1 NMU$CHGSTATE      ENTRY(3) ALTRET ;
      124    11750    1   DCL 1 NMU$LOCK          ENTRY(1) ALTRET ;
      125    11751    1   DCL 1 NMU$QUIT          ENTRY ;
      126    11752    1   DCL 1 NMU$RESET         ENTRY ;
      127    11753    1   DCL 1 NMU$UNLOCK        ENTRY(1) ALTRET ;
      128    11754    1   DCL 1 NMV$MIRRORED      ENTRY(1) ALTRET ;
      129    11755    1   DCL 1 NMV$MSTATE        ENTRY(2) ALTRET ;
      130    11756        /*
      131    11757                        Variables
      132    11758        */
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:5    
      133    11759                                %B$ALT ( NAME =
      134    11760              B$ALT             , STCLASS = BASED
      135    11761                                                                        ) ;
      136    11769                                %B$TCB ( NAME =
      137    11770              B$TCB             , STCLASS = "BASED(B$TCB$)"
      138    11771                                                                        ) ;
      139    11774    1   DCL 1 B$TCB$            PTR SYMREF ;
      140    11775                                %NI$DCT ( NAME =
      141    11776              DCT               , STCLASS = BASED
      142    11777                                                                        ) ;
      143    11825                                %PARSE$OUT ( NAME =
      144    11826              OUT               , STCLASS ="BASED(XUG_GETCMD.OUT$)"
      145    11827                                                                        ) ;
      146    11872                                %NMD_PIT ( FPTN =
      147    11873              NMD_PIT
      148    11874                                , STCLASS=SYMREF
      149    11875                                                                        ) ;
      150    12328                                %FPT_TIME ( FPTN =
      151    12329              TIME              , STCLASS = CONSTANT
      152    12330                                , DEST = UTS
      153    12331                                , SOURCE = CLOCK
      154    12332                                , TSTAMP = UTS
      155    12333                                                                        ) ;
      156    12352    1   DCL 1 UTS               UBIN WORD ALIGNED STATIC ;
      157    12353                                %XUG_GETCMD ( NAME =
      158    12354              XUG_GETCMD        , STCLASS = SYMREF
      159    12355                                                                        ) ;
      160    12693        %EJECT ;
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:6    
      161    12694        /*
      162    12695        Initialize the MIRROR program variables, DCBs, and library service
      163    12696        routines.  Also parse the options specified.  If the procedure
      164    12697        altreturns, go to make an abort from the program.
      165    12698        */
      166    12699    1           CALL NMI$INIT                           ALTRET ( RESET ) ;
      167    12700        /*
      168    12701        Read and process commands until the END/XIT/QUIT command is
      169    12702        received.
      170    12703        */
      171    12704    1           REMEMBER RESTART IN NMD_PIT.RESTART ;
      172    12705    1           CALL XUG$CLRENABLE ( XUG_GETCMD ) ;
      173    12706    1   RESTART:
      174    12707    1           NMD_PIT.FLAGS.QUIT# = '0'B ;
      175    12708    2   LOOP:   DO  UNTIL NMD_PIT.FLAGS.QUIT# ;
      176    12709
      177    12710    2               CALL NMO$DEFAULTS ;
      178    12711
      179    12712    2               CALL XUG$GETCMD ( XUG_GETCMD )
      180    12713    3               WHENRETURN DO ;
      181    12714    3                   NMD_PIT.COMMAND# = OUT.CODE ;
      182    12715
      183    12716    4                   DO  CASE ( NMD_PIT.COMMAND# ) ;
      184    12717
      185    12718    4                   CASE ( NMC#COPY    ) ;          /*** COPY       ***/
      186    12719
      187    12720    4                       CALL NMC$COPY               ALTRET ( CMDERR ) ;
      188    12721
      189    12722    4                   CASE ( NMC#DISPLAY ) ;          /*** DISPLAY    ***/
      190    12723
      191    12724    4                       CALL NMD$DISPLAY            ALTRET ( CMDERR ) ;
      192    12725
      193    12726    4                   CASE ( NMC#DONT    ) ;          /*** DONT       ***/
      194    12727
      195    12728    4                       CALL NMM$DONT_MIRROR        ALTRET ( CMDERR ) ;
      196    12729
      197    12730    4                   CASE ( NMC#END     ) ;          /*** END        ***/
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:7    
      198    12731
      199    12732    4                       NMD_PIT.FLAGS.QUIT# = '1'B ;
      200    12733
      201    12734    4                   CASE ( NMC#FAIL    ) ;          /*** FAIL       ***/
      202    12735
      203    12736    4                       CALL NMF$FAIL               ALTRET ( CMDERR ) ;
      204    12737
      205    12738    4                   CASE ( NMC#KOMPARE ) ;          /*** KOMPARE    ***/
      206    12739
      207    12740    4                       CALL NMK$KOMPARE            ALTRET ( CMDERR ) ;
      208    12741
      209    12742    4                   CASE ( NMC#LOCK    ) ;          /*** LOCK       ***/
      210    12743
      211    12744    4                       CALL NMO$DEV      ( 0, OUT.SUBLK$(0) )
      212    12745    4                                                   ALTRET ( CMDERR ) ;
      213    12746    4                       CALL NMV$MIRRORED ( 0 )     ALTRET ( CMDERR ) ;
      214    12747    4                       CALL NMU$LOCK     ( 0 )     ALTRET ( CMDERR ) ;
      215    12748
      216    12749    4                   CASE ( NMC#MIRROR  ) ;          /*** MIRROR     ***/
      217    12750
      218    12751    4                       CALL NMM$MIRROR             ALTRET ( CMDERR ) ;
      219    12752
      220    12753    4                   CASE ( NMC#SWITCH  ) ;          /*** SWITCH     ***/
      221    12754
      222    12755    4                       CALL NMS$SWITCH             ALTRET ( CMDERR ) ;
      223    12756
      224    12757    4                   CASE ( NMC#UNLOCK  ) ;          /*** UNLOCK     ***/
      225    12758
      226    12759    4                       CALL NMO$DEV      ( 0, OUT.SUBLK$(0) )
      227    12760    4                                                   ALTRET ( CMDERR ) ;
      228    12761    4                       CALL NMV$MIRRORED ( 0 )     ALTRET ( CMDERR ) ;
      229    12762    4                       CALL NMU$UNLOCK   ( 0 )     ALTRET ( CMDERR ) ;
      230    12763
      231    12764    4                       END /* DO CASE ( OUT.CODE ) */ ;
      232    12765
      233    12766    3                   END    /* WHENRETURN DO */ ;
      234    12767
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:8    
      235    12768    3               WHENALTRETURN DO ;
      236    12769    3                   CALL NME$ERRMSG ( XUG_GETCMD.ERR#, XUG_GETCMD.ERRDCB# ) ;
      237    12770    3                   IF  XUG_GETCMD.ERR#.CODE# = %E$EOF
      238    12771    3                   THEN
      239    12772    3                       EXIT LOOP ;
      240    12773    3                   END ;
      241    12774
      242    12775    2   CMDERR:     END LOOP  /* DO UNTIL NMD_PIT.FLAGS.QUIT# */ ;
      243    12776        /*
      244    12777        Reset user environment and exit control.
      245    12778        */
      246    12779    1   RESET:  CALL NMU$RESET ;
      247    12780        /*
      248    12781        Exit the program.
      249    12782        */
      250    12783    1           CALL NMU$QUIT ;
      251    12784
      252    12785    1           END NMA$MAIN ;

PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:9    
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   NM_PERR_C.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure NMA$MAIN.

   Procedure NMA$MAIN requires 122 words for executable code.
   Procedure NMA$MAIN requires 6 words of local(AUTO) storage.

    No errors detected in file NMA$MAIN.:E05TSI    .

PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:10   

 Object Unit name= NMA$MAIN                                   File name= NMA$MAIN.:E05TOU
 UTS= JUL 30 '97 03:46:50.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     12     14  NMA$MAIN
    2   Data  even  none     1      1  NMA$MAIN
    3   Proc  even  none   122    172  NMA$MAIN
    4  RoData even  none     5      5  NMA$MAIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Main       0  NMA$MAIN
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:11   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 NMI$INIT
         yes           Std       1 XUG$CLRENABLE
 yes     yes           Std       0 NMD$DISPLAY
 yes     yes           Std       0 NMF$FAIL
         yes           Std       0 NMU$RESET
 yes     yes           Std       1 NMV$MIRRORED
 yes     yes           Std       1 NMU$UNLOCK
         yes           Std       0 NMU$QUIT
 yes     yes           Std       2 NMO$DEV
         yes           Std       0 NMO$DEFAULTS
 yes     yes           Std       0 NMK$KOMPARE
 yes     yes           Std       1 XUG$GETCMD
 yes     yes           Std       0 NMM$DONT_MIRROR
 yes     yes           Std       1 NMU$LOCK
 yes     yes           Std       0 NMC$COPY
 yes     yes           Std       0 NMS$SWITCH
 yes     yes           Std       0 NMM$MIRROR
         yes           Std       6 NME$ERRMSG
                       nStd      0 X66_MAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_MARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                NMD_PIT
     XUG_GETCMD                            B_VECTNIL
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:12   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:13   


        1        1        /*M* NMA$MAIN - Main procedure for MIRROR program.                 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DFC=YES, DMC=YES, EDMC=YES                                    */
        8        8        /*F*
        9        9        NAME:           .*A*
       10       10        The MIRROR processor is used to create, display, manipulate,
       11       11        and terminate Mirrored Disk devices on CP-6.
       12       12
       13       13        .*B*
       14       14        For additional information, enter:
       15       15
       16       16        .       HELP (MIRROR) INVOKING
       17       17        .       HELP (MIRROR) COMMANDS
       18       18        .       HELP (MIRROR) OPTIONS
       19       19        .       HELP (MIRROR) TOPICS
       20       20
       21       21        */
       22       22        /*F*
       23       23        NAME:           INVOCATION INVOKE INVOKING SYNTAX
       24       24
       25       25        Syntax:         !MIRROR [fid1] [ {ON|TO|OVER|INTO} , fid2 ]
       26       26
       27       27        .*B*            PARAMETERS fid1
       28       28        Parameters:
       29       29
       30       30        fid1            specifies an optional fid from which commands are read.
       31       31                The default is the command stream (SI#) or M$SI.
       32       32
       33       33        .*B*            fid2
       34       34        fid2            specifies an optional fid into which listed output would
       35       35                be printed.  The default is the listing output device or M$LO.
       36       36
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:14   
       37       37        .*B*            DESCRIPTION
       38       38        Description:
       39       39
       40       40        The MIRROR processor is used to create, display, update, manipulate,
       41       41        and terminate Mirrored Disk devices on CP-6.  The MIRROR processor
       42       42        reads commands from the users, and generates listing and diagnostic
       43       43        from the execution of those commands.
       44       44
       45       45        For additional information, enter:
       46       46
       47       47        .       HELP (MIRROR) COMMANDS
       48       48        .       HELP (MIRROR) OPTIONS
       49       49        .       HELP (MIRROR) DCBS
       50       50        .       HELP (MIRROR) ENVIRONMENT
       51       51
       52       52        .*K*            DCBS
       53       53        The MIRROR processor uses the following DCBS:
       54       54
       55       55        .       DCB             Usage:
       56       56        .       ----            ----------------------------------------------
       57       57        .       M$DO            Diagnostic output.
       58       58        .       M$EI            Read first Mirrored Disk device.
       59       59        .       M$EO            Read/write second Mirrored Disk device.
       60       60        .       M$LO            Listed output (DCB4).
       61       61        .       M$ME            Output greeting.
       62       62        .       M$SI            Read commands (DCB1).
       63       63
       64       64        .*K*            ENVIRONMENT PRIVILEGES MODE
       65       65        The MIRROR program requires that the user be authorized for the SPCLMM,
       66       66        IOQ, and IOQW privileges.
       67       67
       68       68        The MIRROR program executes in either the online, batch, or ghost modes.
       69       69
       70       70        */
       71       71        %EJECT ;
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:15   
       72       72        /*F*
       73       73        NAME:           NMA$MAIN
       74       74
       75       75        */
       76       76        /*D*
       77       77        NAME:           NMA$MAIN
       78       78
       79       79        CALL:           None.
       80       80
       81       81        PARAMETERS:     None.
       82       82
       83       83        DESCRIPTION:
       84       84
       85       85        The NMA$MAIN procedure is the main procedure for the MIRROR program.
       86       86        NMA$MAIN controls the execution of the MIRROR program. NMA$MAIN
       87       87        calls other procedures to initialize the MIRROR program, to do the
       88       88        COMPARE or COPY operation, and to exit the MIRROR program.
       89       89
       90       90        REFERENCE:      CP-6 Host Library Services Reference Manual
       91       91                        CP-6 Host Monitor Services Reference Manual
       92       92                        CP-6 Programmer Reference Manual
       93       93                        AF1274C
       94       94        */
       95       95        %EJECT ;
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:16   
       96       96        NMA$MAIN:       PROC MAIN ;

     96  3 000000   000000 700200 xent  NMA$MAIN     TSX0  ! X66_MAUTO
         3 000001   000006 000000                    ZERO    6,0

       97       97        /*
       98       98                        Includes
       99       99        */
      100      100        %INCLUDE                B_ERRORS_C ;
      101     1227        %INCLUDE                CP_6 ;
      102     6786        %INCLUDE                NI$TABLES ;
      103     7002        %INCLUDE                NI_DATA_C ;
      104     7115        %INCLUDE                NM_PERR_C ;
      105     7192        %INCLUDE                NM_MACRO_M ;
      106     8597        %INCLUDE                XUG_ENTRY ;
      107     8628        %INCLUDE                XU_MACRO_C ;
      108    11734        /*
      109    11735                        Entries
      110    11736        */
      111    11737    1   DCL 1 NMM$DONT_MIRROR   ENTRY    ALTRET ;
      112    11738    1   DCL 1 NMC$COPY          ENTRY    ALTRET ;
      113    11739    1   DCL 1 NME$ERRMSG        ENTRY(6) ;
      114    11740    1   DCL 1 NMF$FAIL          ENTRY    ALTRET ;
      115    11741    1   DCL 1 NMI$INIT          ENTRY    ALTRET ;
      116    11742    1   DCL 1 NMK$KOMPARE       ENTRY    ALTRET ;
      117    11743    1   DCL 1 NMD$DISPLAY       ENTRY    ALTRET ;
      118    11744    1   DCL 1 NMM$MIRROR        ENTRY    ALTRET ;
      119    11745    1   DCL 1 NMO$DCT           ENTRY(2) ALTRET ;
      120    11746    1   DCL 1 NMO$DEFAULTS      ENTRY ;
      121    11747    1   DCL 1 NMO$DEV           ENTRY(2) ALTRET ;
      122    11748    1   DCL 1 NMS$SWITCH        ENTRY    ALTRET ;
      123    11749    1   DCL 1 NMU$CHGSTATE      ENTRY(3) ALTRET ;
      124    11750    1   DCL 1 NMU$LOCK          ENTRY(1) ALTRET ;
      125    11751    1   DCL 1 NMU$QUIT          ENTRY ;
      126    11752    1   DCL 1 NMU$RESET         ENTRY ;
      127    11753    1   DCL 1 NMU$UNLOCK        ENTRY(1) ALTRET ;
      128    11754    1   DCL 1 NMV$MIRRORED      ENTRY(1) ALTRET ;
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:17   
      129    11755    1   DCL 1 NMV$MSTATE        ENTRY(2) ALTRET ;
      130    11756        /*
      131    11757                        Variables
      132    11758        */
      133    11759                                %B$ALT ( NAME =
      134    11760              B$ALT             , STCLASS = BASED
      135    11761                                                                        ) ;
      136    11769                                %B$TCB ( NAME =
      137    11770              B$TCB             , STCLASS = "BASED(B$TCB$)"
      138    11771                                                                        ) ;
      139    11774    1   DCL 1 B$TCB$            PTR SYMREF ;
      140    11775                                %NI$DCT ( NAME =
      141    11776              DCT               , STCLASS = BASED
      142    11777                                                                        ) ;
      143    11825                                %PARSE$OUT ( NAME =
      144    11826              OUT               , STCLASS ="BASED(XUG_GETCMD.OUT$)"
      145    11827                                                                        ) ;
      146    11872                                %NMD_PIT ( FPTN =
      147    11873              NMD_PIT
      148    11874                                , STCLASS=SYMREF
      149    11875                                                                        ) ;
      150    12328                                %FPT_TIME ( FPTN =
      151    12329              TIME              , STCLASS = CONSTANT
      152    12330                                , DEST = UTS
      153    12331                                , SOURCE = CLOCK
      154    12332                                , TSTAMP = UTS
      155    12333                                                                        ) ;
      156    12352    1   DCL 1 UTS               UBIN WORD ALIGNED STATIC ;
      157    12353                                %XUG_GETCMD ( NAME =
      158    12354              XUG_GETCMD        , STCLASS = SYMREF
      159    12355                                                                        ) ;
      160    12693        %EJECT ;
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:18   
      161    12694        /*
      162    12695        Initialize the MIRROR program variables, DCBs, and library service
      163    12696        routines.  Also parse the options specified.  If the procedure
      164    12697        altreturns, go to make an abort from the program.
      165    12698        */
      166    12699    1           CALL NMI$INIT                           ALTRET ( RESET ) ;

  12699  3 000002   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000003   000000 701000 xent               TSX1    NMI$INIT
         3 000004   000163 702000 3                  TSX2    RESET

      167    12700        /*
      168    12701        Read and process commands until the END/XIT/QUIT command is
      169    12702        received.
      170    12703        */
      171    12704    1           REMEMBER RESTART IN NMD_PIT.RESTART ;

  12704  3 000005   000014 635000 3                  EAA     RESTART
         3 000006   000317 452400 xsym               STP2    NMD_PIT+207
         3 000007   000320 755000 xsym               STA     NMD_PIT+208

      172    12705    1           CALL XUG$CLRENABLE ( XUG_GETCMD ) ;

  12705  3 000010   000000 630400 4                  EPPR0   0
         3 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000012   000000 701000 xent               TSX1    XUG$CLRENABLE
         3 000013   000000 011000                    NOP     0

      173    12706    1   RESTART:
      174    12707    1           NMD_PIT.FLAGS.QUIT# = '0'B ;

  12707  3 000014   000001 236000 4     RESTART      LDQ     1
         3 000015   000273 356000 xsym               ANSQ    NMD_PIT+187

      175    12708    2   LOOP:   DO  UNTIL NMD_PIT.FLAGS.QUIT# ;

  12708  3 000016                       LOOP         null
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:19   
      176    12709
      177    12710    2               CALL NMO$DEFAULTS ;

  12710  3 000016   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000017   000000 701000 xent               TSX1    NMO$DEFAULTS
         3 000020   000000 011000                    NOP     0

      178    12711
      179    12712    2               CALL XUG$GETCMD ( XUG_GETCMD )

  12712  3 000021   000000 630400 4                  EPPR0   0
         3 000022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000023   000000 701000 xent               TSX1    XUG$GETCMD
         3 000024   000150 702000 3                  TSX2    s:12769

      180    12713    3               WHENRETURN DO ;

      181    12714    3                   NMD_PIT.COMMAND# = OUT.CODE ;

  12714  3 000025   000001 470400 xsym               LDP0    XUG_GETCMD+1
         3 000026   000000 236100                    LDQ     0,,PR0
         3 000027   777777 376007                    ANQ     -1,DL
         3 000030   000000 756000 xsym               STQ     NMD_PIT

      182    12715
      183    12716    4                   DO  CASE ( NMD_PIT.COMMAND# ) ;

  12716  3 000031   000013 116007                    CMPQ    11,DL
         3 000032   000034 602006 3                  TNC     s:12716+3,QL
         3 000033   000147 710000 3                  TRA     s:12766
         3 000034   000147 710000 3                  TRA     s:12766
         3 000035   000072 710000 3                  TRA     s:12740
         3 000036   000053 710000 3                  TRA     s:12724
         3 000037   000057 710000 3                  TRA     s:12728
         3 000040   000117 710000 3                  TRA     s:12751
         3 000041   000063 710000 3                  TRA     s:12732
         3 000042   000066 710000 3                  TRA     s:12736
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:20   
         3 000043   000123 710000 3                  TRA     s:12755
         3 000044   000047 710000 3                  TRA     s:12720
         3 000045   000076 710000 3                  TRA     s:12744
         3 000046   000127 710000 3                  TRA     s:12759

      184    12717
      185    12718    4                   CASE ( NMC#COPY    ) ;          /*** COPY       ***/

      186    12719
      187    12720    4                       CALL NMC$COPY               ALTRET ( CMDERR ) ;

  12720  3 000047   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000050   000000 701000 xent               TSX1    NMC$COPY
         3 000051   000160 702000 3                  TSX2    CMDERR
         3 000052   000147 710000 3                  TRA     s:12766

      188    12721
      189    12722    4                   CASE ( NMC#DISPLAY ) ;          /*** DISPLAY    ***/

      190    12723
      191    12724    4                       CALL NMD$DISPLAY            ALTRET ( CMDERR ) ;

  12724  3 000053   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000054   000000 701000 xent               TSX1    NMD$DISPLAY
         3 000055   000160 702000 3                  TSX2    CMDERR
         3 000056   000147 710000 3                  TRA     s:12766

      192    12725
      193    12726    4                   CASE ( NMC#DONT    ) ;          /*** DONT       ***/

      194    12727
      195    12728    4                       CALL NMM$DONT_MIRROR        ALTRET ( CMDERR ) ;

  12728  3 000057   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000060   000000 701000 xent               TSX1    NMM$DONT_MIRROR
         3 000061   000160 702000 3                  TSX2    CMDERR
         3 000062   000147 710000 3                  TRA     s:12766
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:21   

      196    12729
      197    12730    4                   CASE ( NMC#END     ) ;          /*** END        ***/

      198    12731
      199    12732    4                       NMD_PIT.FLAGS.QUIT# = '1'B ;

  12732  3 000063   040000 236003                    LDQ     16384,DU
         3 000064   000273 256000 xsym               ORSQ    NMD_PIT+187
         3 000065   000147 710000 3                  TRA     s:12766

      200    12733
      201    12734    4                   CASE ( NMC#FAIL    ) ;          /*** FAIL       ***/

      202    12735
      203    12736    4                       CALL NMF$FAIL               ALTRET ( CMDERR ) ;

  12736  3 000066   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000067   000000 701000 xent               TSX1    NMF$FAIL
         3 000070   000160 702000 3                  TSX2    CMDERR
         3 000071   000147 710000 3                  TRA     s:12766

      204    12737
      205    12738    4                   CASE ( NMC#KOMPARE ) ;          /*** KOMPARE    ***/

      206    12739
      207    12740    4                       CALL NMK$KOMPARE            ALTRET ( CMDERR ) ;

  12740  3 000072   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000073   000000 701000 xent               TSX1    NMK$KOMPARE
         3 000074   000160 702000 3                  TSX2    CMDERR
         3 000075   000147 710000 3                  TRA     s:12766

      208    12741
      209    12742    4                   CASE ( NMC#LOCK    ) ;          /*** LOCK       ***/

      210    12743
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:22   
      211    12744    4                       CALL NMO$DEV      ( 0, OUT.SUBLK$(0) )

  12744  3 000076   000001 236000 xsym               LDQ     XUG_GETCMD+1
         3 000077   000003 036003                    ADLQ    3,DU
         3 000100   000002 235000 4                  LDA     2
         3 000101   200004 757100                    STAQ    4,,AUTO
         3 000102   200004 630500                    EPPR0   4,,AUTO
         3 000103   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000104   000000 701000 xent               TSX1    NMO$DEV
         3 000105   000160 702000 3                  TSX2    CMDERR

      212    12745    4                                                   ALTRET ( CMDERR ) ;
      213    12746    4                       CALL NMV$MIRRORED ( 0 )     ALTRET ( CMDERR ) ;

  12746  3 000106   000002 630400 4                  EPPR0   2
         3 000107   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000110   000000 701000 xent               TSX1    NMV$MIRRORED
         3 000111   000160 702000 3                  TSX2    CMDERR

      214    12747    4                       CALL NMU$LOCK     ( 0 )     ALTRET ( CMDERR ) ;

  12747  3 000112   000002 630400 4                  EPPR0   2
         3 000113   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000114   000000 701000 xent               TSX1    NMU$LOCK
         3 000115   000160 702000 3                  TSX2    CMDERR
         3 000116   000147 710000 3                  TRA     s:12766

      215    12748
      216    12749    4                   CASE ( NMC#MIRROR  ) ;          /*** MIRROR     ***/

      217    12750
      218    12751    4                       CALL NMM$MIRROR             ALTRET ( CMDERR ) ;

  12751  3 000117   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000120   000000 701000 xent               TSX1    NMM$MIRROR
         3 000121   000160 702000 3                  TSX2    CMDERR
         3 000122   000147 710000 3                  TRA     s:12766
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:23   

      219    12752
      220    12753    4                   CASE ( NMC#SWITCH  ) ;          /*** SWITCH     ***/

      221    12754
      222    12755    4                       CALL NMS$SWITCH             ALTRET ( CMDERR ) ;

  12755  3 000123   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000124   000000 701000 xent               TSX1    NMS$SWITCH
         3 000125   000160 702000 3                  TSX2    CMDERR
         3 000126   000147 710000 3                  TRA     s:12766

      223    12756
      224    12757    4                   CASE ( NMC#UNLOCK  ) ;          /*** UNLOCK     ***/

      225    12758
      226    12759    4                       CALL NMO$DEV      ( 0, OUT.SUBLK$(0) )

  12759  3 000127   000001 236000 xsym               LDQ     XUG_GETCMD+1
         3 000130   000003 036003                    ADLQ    3,DU
         3 000131   000002 235000 4                  LDA     2
         3 000132   200004 757100                    STAQ    4,,AUTO
         3 000133   200004 630500                    EPPR0   4,,AUTO
         3 000134   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000135   000000 701000 xent               TSX1    NMO$DEV
         3 000136   000160 702000 3                  TSX2    CMDERR

      227    12760    4                                                   ALTRET ( CMDERR ) ;
      228    12761    4                       CALL NMV$MIRRORED ( 0 )     ALTRET ( CMDERR ) ;

  12761  3 000137   000002 630400 4                  EPPR0   2
         3 000140   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000141   000000 701000 xent               TSX1    NMV$MIRRORED
         3 000142   000160 702000 3                  TSX2    CMDERR

      229    12762    4                       CALL NMU$UNLOCK   ( 0 )     ALTRET ( CMDERR ) ;

PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:24   
  12762  3 000143   000002 630400 4                  EPPR0   2
         3 000144   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000145   000000 701000 xent               TSX1    NMU$UNLOCK
         3 000146   000160 702000 3                  TSX2    CMDERR

      230    12763
      231    12764    4                       END /* DO CASE ( OUT.CODE ) */ ;

      232    12765
      233    12766    3                   END    /* WHENRETURN DO */ ;

  12766  3 000147   000160 710000 3                  TRA     CMDERR

      234    12767
      235    12768    3               WHENALTRETURN DO ;

      236    12769    3                   CALL NME$ERRMSG ( XUG_GETCMD.ERR#, XUG_GETCMD.ERRDCB# ) ;

  12769  3 000150   000003 630400 4                  EPPR0   3
         3 000151   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000152   000000 701000 xent               TSX1    NME$ERRMSG
         3 000153   000000 011000                    NOP     0

      237    12770    3                   IF  XUG_GETCMD.ERR#.CODE# = %E$EOF

  12770  3 000154   000001 236000 xsym               LDQ     XUG_GETCMD+1
         3 000155   377770 376007                    ANQ     131064,DL
         3 000156   000060 116007                    CMPQ    48,DL
         3 000157   000163 600000 3                  TZE     RESET

      238    12771    3                   THEN
      239    12772    3                       EXIT LOOP ;
      240    12773    3                   END ;

      241    12774
      242    12775    2   CMDERR:     END LOOP  /* DO UNTIL NMD_PIT.FLAGS.QUIT# */ ;

PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:25   
  12775  3 000160   000273 236000 xsym  CMDERR       LDQ     NMD_PIT+187
         3 000161   040000 316003                    CANQ    16384,DU
         3 000162   000016 600000 3                  TZE     LOOP

      243    12776        /*
      244    12777        Reset user environment and exit control.
      245    12778        */
      246    12779    1   RESET:  CALL NMU$RESET ;

  12779  3 000163   000002 631400 xsym  RESET        EPPR1   B_VECTNIL+2
         3 000164   000000 701000 xent               TSX1    NMU$RESET
         3 000165   000000 011000                    NOP     0

      247    12780        /*
      248    12781        Exit the program.
      249    12782        */
      250    12783    1           CALL NMU$QUIT ;

  12783  3 000166   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000167   000000 701000 xent               TSX1    NMU$QUIT
         3 000170   000000 011000                    NOP     0

      251    12784
      252    12785    1           END NMA$MAIN ;

  12785  3 000171   000000 702200 xent               TSX2  ! X66_MARET

PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:26   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   NM_SUBS_C.:E05TOU  is referenced.
   NM_EQU_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   NM_MACRO_M.:E05TOU  is referenced.
   NM_PERR_C.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure NMA$MAIN.
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:27   

 **** Variables and constants ****

  ****  Section 001 RoData NMA$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 TIME

  ****  Section 002  Data  NMA$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 UTS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/d STRC(8892)  r     1 NMD_PIT
     0-0-0/d STRC(1512)  r     1 XUG_GETCMD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT


   Procedure NMA$MAIN requires 122 words for executable code.
   Procedure NMA$MAIN requires 6 words of local(AUTO) storage.
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:28   

    No errors detected in file NMA$MAIN.:E05TSI    .
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:29   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:30   
          MINI XREF LISTING

B$ALT.CODE
     11763**DCL     11763--REDEF   11764--REDEF   11764--REDEF
B$ALT.ERR.ERR#
     11765**DCL     11765--REDEF
B$ALT.EVID
     11764**DCL     11764--REDEF   11764--REDEF
B$TCB$
     11774**DCL     11772--IMP-PTR
CMDERR
     12775**LABEL   12720--CALLALT 12724--CALLALT 12728--CALLALT 12736--CALLALT 12740--CALLALT 12744--CALLALT
     12746--CALLALT 12747--CALLALT 12751--CALLALT 12755--CALLALT 12759--CALLALT 12761--CALLALT 12762--CALLALT
DCT.DP
     11806**DCL     11813--REDEF   11816--REDEF   11817--REDEF   11819--REDEF   11819--REDEF   11820--REDEF
     11821--REDEF   11821--REDEF
DCT.MPC.IOCHANX
     11814**DCL     11814--REDEF
LOOP
     12708**LABEL   12772--EXIT
NMC$COPY
     11738**DCL-ENT 12720--CALL
NMD$DISPLAY
     11743**DCL-ENT 12724--CALL
NMD_PIT.COMMAND#
     11894**DCL     12714<<ASSIGN  12716>>DOCASE
NMD_PIT.FLAGS.QUIT#
     12141**DCL     12707<<ASSIGN  12708>>DOUNTIL 12732<<ASSIGN
NMD_PIT.RESTART
     12295**DCL     12704<<REMEMBR
NME$ERRMSG
     11739**DCL-ENT 12769--CALL
NMF$FAIL
     11740**DCL-ENT 12736--CALL
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:31   
NMI$INIT
     11741**DCL-ENT 12699--CALL
NMK$KOMPARE
     11742**DCL-ENT 12740--CALL
NMM$DONT_MIRROR
     11737**DCL-ENT 12728--CALL
NMM$MIRROR
     11744**DCL-ENT 12751--CALL
NMO$DEFAULTS
     11746**DCL-ENT 12710--CALL
NMO$DEV
     11747**DCL-ENT 12744--CALL    12759--CALL
NMS$SWITCH
     11748**DCL-ENT 12755--CALL
NMU$LOCK
     11750**DCL-ENT 12747--CALL
NMU$QUIT
     11751**DCL-ENT 12783--CALL
NMU$RESET
     11752**DCL-ENT 12779--CALL
NMU$UNLOCK
     11753**DCL-ENT 12762--CALL
NMV$MIRRORED
     11754**DCL-ENT 12746--CALL    12761--CALL
OUT.CODE
     11841**DCL     12714>>ASSIGN
OUT.SUBLK$
     11866**DCL     12744<>CALL    12759<>CALL
RESET
     12779**LABEL   12699--CALLALT
RESTART
     12707**LABEL   12704--REMEMBR
TIME.V
     12348**DCL     12344--DCLINIT
UTS
     12352**DCL     12348--DCLINIT
PL6.E3A0      #001=NMA$MAIN File=NMA$MAIN.:E05TSI                                WED 07/30/97 03:46 Page:32   
XUG$CLRENABLE
      8617**DCL-ENT 12705--CALL
XUG$GETCMD
      8604**DCL-ENT 12712--CALL
XUG_GETCMD
     12368**DCL     12705<>CALL    12712<>CALL
XUG_GETCMD.ERR#
     12379**DCL     12769<>CALL
XUG_GETCMD.ERR#.CODE#
     12382**DCL     12770>>IF
XUG_GETCMD.ERRDCB#
     12527**DCL     12769<>CALL
XUG_GETCMD.OUT$
     12373**DCL     11833--IMP-PTR 12379--REDEF   12714>>ASSIGN  12744>>CALL    12759>>CALL
