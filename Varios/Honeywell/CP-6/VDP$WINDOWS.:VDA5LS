VERSION A05

PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:1    
        1        1        /*M* VDP$WINDOWS - Window-management service routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME: VDP$WINDOWS
       12       12            PURPOSE:
       13       13                Window-management service routines.
       14       14            DESCRIPTION:
       15       15                This module contains several external routines:
       16       16
       17       17                VDP$WCHANGE
       18       18                Change the attributes of an existing window.  Also used when
       19       19                switching from 1Dim to 2Dim, or vice versa, to change a window from
       20       20                its 1Dim form (open to an ORG=TERMINAL DCB, no record set) to or from
       21       21                its 2Dim form (open to a DCB with UOPT0 set, and either ORG=TERMINAL
       22       22                (command window) or ORG=SE with a record set (editing window)).
       23       23
       24       24                VDP$WINIT
       25       25                Initialize the Presenter.
       26       26
       27       27                VDP$WNEW
       28       28                Create a new window.  Also used to close and re-open a window in
       29       29                a different mode (ie, switching between 1Dim and 2Dim).
       30       30                Allocates/frees the record set, and for 2Dim, creates the window in
       31       31                the FEP.
       32       32
       33       33                VDP$WREMOVE
       34       34                Remove a window.  Closes the window's DCB.  If 2Dim editing window,
       35       35                frees the window's record set.
       36       36
       37       37                VDP$WTERMINATE
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:2    
       38       38                Termination routine for the Presenter.  Closes all windows and
       39       39                restores the terminal to its pre-6Edit-invocation state.
       40       40        */
       41       41
       42       42        /*D* NAME: VDP$WCHANGE
       43       43            PARAMETERS:
       44       44                OLD_WINDOW - VD$FILE_NODE for the window to change:
       45       45                    .DCB# must specify the DCB # of the DCB the window is open to.
       46       46
       47       47                                          !! CAUTION !!
       48       48                        If switching from 1Dim to 2Dim, all Windows-file-nodes
       49       49                        previous to OLD_WINDOW must already have been changed
       50       50                        to 2Dim.
       51       51
       52       52                NEW_WINDOW_SPEC - VD$WINDOW_SPEC containing the new parameters for
       53       53                    the window.  The only values meaningful in NEW_WINDOW_SPEC are:
       54       54                    .COORDS.HEIGHT and .HEIGHT_PERCENT - New height for the window.
       55       55                        .HEIGHT_PERCENT is set if the value in .HEIGHT is a percentage
       56       56                        value.  (The window's height will be set to the specified
       57       57                        percentage of the "from-window"'s height.  The "from-window"
       58       58                        is usually the window just above the window being changed, or
       59       59                        for the command window, it's UC01.)
       60       60                        Ignored if we're currently not screen editing.
       61       61            INPUT:
       62       62                VD_$SCREEN is a VD$NUMBER whose .V# tells us both if we can and if the
       63       63                    user wants us to screen-edit or not.
       64       64            OUTPUT:
       65       65                OLD_WINDOW's VD$WINDOW_SPEC.COORDS will be set to the new values
       66       66                    determined by the FEP, based on the size change request.
       67       67                The VD$WINDOW_SPEC.COORDS for the window adjacent to OLD_WINDOW from
       68       68                    which we took or to which we gave space, will be set to new values.
       69       69                If switching between 1Dim and 2Dim, OLD_WINDOW's
       70       70                    VD$WINDOW_SPEC.RECORD_SET$ may be changed.
       71       71            DESCRIPTION:
       72       72                If we're not screen editing currently:
       73       73                    If OLD$WSPEC.DCB# is open to a 2Dim window (UOPT0 set),
       74       74                        call VDP$WNEW to close the 2Dim window and re-open it in 1Dim.
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:3    
       75       75                    Set OLD$WSPEC.COORDS to all 0's.
       76       76                If we're currently screen-editing:
       77       77                    If OLD$WSPEC.DCB# is open to a 1Dim window (UOPT0=%FALSE)
       78       78                        call VDP$WNEW to close the window's DCB and re-open it,
       79       79                        creating the 2Dim window.
       80       80                    Else, tell the FEP to change the size of OLD$WSPEC's window
       81       81                        to the requested size.
       82       82                    Find out from the FEP how big the window actually is now, and set
       83       83                        OLD$WSPEC.COORDS to the exact size and location as given
       84       84                        to us by the FEP.
       85       85        */
       86       86
       87       87        VDP$WCHANGE: PROC (OLD_WINDOW, NEW_WINDOW_SPEC) ALTRET;
       88       88
       89       89        %INCLUDE VD_MACROS_M;
       90     2304        %INCLUDE CP_6;
       91     2385        %INCLUDE CP_6_SUBS;
       92     2925        %INCLUDE G_LCP6_E;
       93     3183
       94     3184
       95     3185        %VD$FILE_NODE (NAME=OLD_WINDOW, STCLASS=PARAM);
       96     3278        %VD$WINDOW_SPEC (NAME=NEW_WINDOW_SPEC, STCLASS=PARAM);
       97     3344
       98     3345
       99     3346    1   DCL VDA$WREWINDOW       ENTRY (2) ALTRET;
      100     3347    1   DCL VDP$WNEW            ENTRY (2) ALTRET;
      101     3348    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
      102     3349    1   DCL VDG$SCREECH         ENTRY (3);
      103     3350    1   DCL VDG$ERASE_COMMAND_WINDOW  ENTRY     ALTRET;
      104     3351    1   DCL VDG$MONERR          ENTRY     ALTRET;
      105     3352    1   DCL VDG$MPRES_WCHANGE   ENTRY (2);
      106     3353    1   DCL VDG$MPRES_FEPSTRMCTL ENTRY (3);
      107     3354    1   DCL VDG$MPRES_WCHANGE_RETURN ENTRY (2);
      108     3355
      109     3356
      110     3357        %VD_6E (STCLASS=SYMREF);
      111     3393        %VD$NUMBER (NAME=VD_$SCREEN, STCLASS=SYMREF);
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:4    
      112     3438        %VD$NUMBER (NAME=VD_$MIN_COMMAND, STCLASS=SYMREF);
      113     3483        %VD$NUMBER (NAME=VD_$$MON_PRES, STCLASS=SYMREF);
      114     3528    1   DCL VD_2DIM BIT(1) SYMREF;
      115     3529
      116     3530
      117     3531        %FPT_TRMCTL (FPTN=CONST_FPT_TRMCTL, STCLASS=CONSTANT);
      118     3558        %VLP_WINDOW (FPTN=CONST_VLP_WINDOW, STCLASS=CONSTANT);
      119     3602        %VLP_TRMCTL (FPTN=CONST_VLP_TRMCTL, STCLASS=CONSTANT);
      120     3642
      121     3643
      122     3644    1   DCL FROM_WINDOW$ PTR;
      123     3645    1   DCL FROM_WSPEC$ PTR;
      124     3646        %FPT_TRMCTL (STCLASS=AUTO);
      125     3673        %VLP_WINDOW (STCLASS=AUTO);
      126     3717        %VLP_TRMCTL (STCLASS=AUTO);
      127     3757    1   DCL OLD_HEIGHT SBIN;
      128     3758    1   DCL DELTA SBIN;
      129     3759
      130     3760
      131     3761        %VD$WINDOW_SPEC (NAME=OLD$WSPEC,
      132     3762             STCLASS="BASED(OLD_WINDOW.DESC.SPEC.V$)");
      133     3828        %VD$FILE_NODE (NAME=FROM$WINDOW, STCLASS="BASED(FROM_WINDOW$)");
      134     3921        %VD$WINDOW_SPEC (NAME=FROM$WSPEC, STCLASS="BASED(FROM_WSPEC$)");
      135     3987        %VD$STREAM;
      136     4093        %VD$PORT;
      137     4191        %VD$FILE_NODE;
      138     4284        %VD$WINDOW_SPEC;
      139     4350        %F$DCB;
      140     4407
      141     4408
      142     4409
      143     4410    1           IF VD_$$MON_PRES.V# > 0 THEN
      144     4411    1              CALL VDG$MPRES_WCHANGE (OLD_WINDOW, NEW_WINDOW_SPEC);
      145     4412
      146     4413    1           IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT THEN
      147     4414    2   NOT_SCREEN_EDITING: DO;
      148     4415                   /* We're not screen editing now */
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:5    
      149     4416    3              IF DCBADDR(OLD$WSPEC.DCB#)->F$DCB.UOPT#(0) THEN DO;
      150     4417                      /* Window is currently open 2Dim:  close and re-open 1Dim */
      151     4418    3                 CALL VDP$WNEW (OLD$WSPEC, OLD_WINDOW.BLINK$->VD$FILE_NODE)
      152     4419    4                 WHENALTRETURN DO; ALTRETURN; END;
      153     4420    3                 END;
      154     4421    3              ELSE DO;
      155     4422    3                 FROM_WINDOW$ = OLD_WINDOW.BLINK$;
      156     4423    3                 IF FROM_WINDOW$ = ADDR(NIL) THEN FROM_WINDOW$ = OLD_WINDOW.FLINK$;
      157     4424    3                 IF FROM_WINDOW$ = ADDR(NIL) THEN EXIT;
      158     4425    3                 FROM_WSPEC$ = FROM$WINDOW.DESC.SPEC.V$;
      159     4426    3                 DELTA = NEW_WINDOW_SPEC.COORDS.HEIGHT# - OLD$WSPEC.COORDS.HEIGHT#;
      160     4427    3                 IF DELTA > FROM$WSPEC.COORDS.HEIGHT# THEN
      161     4428    3                    DELTA = FROM$WSPEC.COORDS.HEIGHT# - 1;
      162     4429    3                 OLD$WSPEC.COORDS.HEIGHT# = OLD$WSPEC.COORDS.HEIGHT# + DELTA;
      163     4430    3                 FROM$WSPEC.COORDS.HEIGHT# = FROM$WSPEC.COORDS.HEIGHT# - DELTA;
      164     4431    3                 IF FROM$WSPEC.COORDS.LINE# < OLD$WSPEC.COORDS.LINE# THEN
      165     4432    3                    OLD$WSPEC.COORDS.LINE# = OLD$WSPEC.COORDS.LINE# - DELTA;
      166     4433    3                 ELSE
      167     4434    3                    FROM$WSPEC.COORDS.LINE# = FROM$WSPEC.COORDS.LINE# + DELTA;
      168     4435    3                 END;
      169     4436    2              END NOT_SCREEN_EDITING;
      170     4437
      171     4438    1           ELSE
      172     4439
      173     4440    2   SCREEN_EDITING: DO;
      174     4441                   /* We're screen-editing currently */
      175     4442    3              IF NOT DCBADDR(OLD$WSPEC.DCB#)->F$DCB.UOPT#(0) THEN DO;
      176     4443                      /* Window is currently open 1Dim:  close and re-open 2Dim */
      177     4444    3                 FROM_WINDOW$ = OLD_WINDOW.BLINK$;
      178     4445    3                 FROM_WSPEC$ = ADDR(NIL);
      179     4446    3                 IF FROM_WINDOW$ ~= ADDR(NIL) THEN
      180     4447    3                    FROM_WSPEC$ = FROM$WINDOW.DESC.SPEC.V$;
      181     4448    3                 OLD$WSPEC.COORDS = NEW_WINDOW_SPEC.COORDS;
      182     4449    3                 IF NOT VD_2DIM THEN /* Clear screen */
      183     4450    3                    CALL VDG$ERASE_COMMAND_WINDOW;
      184     4451    3                 CALL VDA$WREWINDOW (OLD_WINDOW, FROM$WSPEC)
      185     4452    4                 WHENALTRETURN DO; ALTRETURN; END;
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:6    
      186     4453                      /*
      187     4454                      *  Window has been created in the requested size; no need to
      188     4455                      *     change it.
      189     4456                      */
      190     4457    3                 END;
      191     4458    2              ELSE
      192     4459    3   SCREEN_EDITING_CHANGE: DO;
      193     4460                      /*
      194     4461                      *  Change the size of a 2Dim window.
      195     4462                      *  First thing to do is find a window to take-from/give-to the
      196     4463                      *     space -- the "from-window".
      197     4464                      *  For the editing windows, the "from-window" is the previous
      198     4465                      *     window in the Windows file, which cooresponds to the window
      199     4466                      *     just above the one being changed.
      200     4467                      *  However, for the command window, the "from-window" is the next
      201     4468                      *     window in the Windows file -- the first editing window.  If
      202     4469                      *     there are no editing windows yet, ignore the request.
      203     4470                      */
      204     4471    3                 FROM_WINDOW$ = OLD_WINDOW.BLINK$;   /* Use previous window */
      205     4472    3                 IF OLD_WINDOW.FLINK$ ~= ADDR(NIL) AND
      206     4473    3                   (NEW_WINDOW_SPEC.COORDS.HEIGHT#>0 OR OLD$WSPEC.COORDS.LINE#<0)
      207     4474    4                   OR FROM_WINDOW$ = ADDR(NIL) THEN DO;
      208     4475    4                    FROM_WINDOW$ = OLD_WINDOW.FLINK$;
      209     4476    4                    IF FROM_WINDOW$ = ADDR(NIL) THEN
      210     4477    4                       RETURN;   /* No editing windows:  ignore cmdwin change */
      211     4478    4                    END;
      212     4479    3                 FROM_WSPEC$ = FROM$WINDOW.DESC.SPEC.V$;
      213     4480
      214     4481    3                 FPT_TRMCTL = CONST_FPT_TRMCTL;
      215     4482    3                 FPT_TRMCTL.V_ = VECTOR(FPT_TRMCTL.V);
      216     4483    3                 FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_WINDOW);
      217     4484    3                 FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_WINDOW#;
      218     4485    3                 VLP_WINDOW = CONST_VLP_WINDOW;
      219     4486    3                 VLP_WINDOW.FWINDOW# = DCBADDR(FROM$WSPEC.DCB#)->F$DCB.RES#;
      220     4487
      221     4488    3                 VLP_WINDOW.LENGTH# = NEW_WINDOW_SPEC.COORDS.HEIGHT#;
      222     4489
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:7    
      223     4490    3                 IF OLD$WSPEC.COORDS.HEIGHT# = VLP_WINDOW.LENGTH# THEN
      224     4491    3                    RETURN;    /* Nothing to change! */
      225     4492    3                 VLP_WINDOW.LENGTH# = VLP_WINDOW.LENGTH# + %G_WINDOW_ABSVAL#;
      226     4493
      227     4494    3                 FPT_TRMCTL.V.DCB# = OLD$WSPEC.DCB#;
      228     4495
      229     4496    3                 IF VD_$$MON_PRES.V# > 10 THEN
      230     4497    3                    CALL VDG$MPRES_FEPSTRMCTL (FPT_TRMCTL.V.DCB#,
      231     4498    3                      VLP_WINDOW.LENGTH#, VLP_WINDOW.FWINDOW#);
      232     4499    3                 CALL M$STRMCTL (FPT_TRMCTL)
      233     4500    3                   ALTRET (STRMCTL_FAILED);
      234     4501
      235     4502                      /* Get new coords and size from FEP */
      236     4503    3                 CALL M$GTRMCTL (FPT_TRMCTL)
      237     4504    3                   ALTRET (GTRMCTL_FAILED);
      238     4505
      239     4506    3                 OLD_HEIGHT = OLD$WSPEC.COORDS.HEIGHT#;
      240     4507    3                 OLD$WSPEC.COORDS.LINE# = VLP_WINDOW.ORG_PST.LINE;
      241     4508    3                 OLD$WSPEC.COORDS.COLUMN# = VLP_WINDOW.ORG_PST.COLUMN;
      242     4509    3                 OLD$WSPEC.COORDS.HEIGHT# = VLP_WINDOW.LENGTH#;
      243     4510    3                 OLD$WSPEC.COORDS.WIDTH# = VLP_WINDOW.WIDTH#;
      244     4511
      245     4512    3                 DELTA = VLP_WINDOW.LENGTH# - OLD_HEIGHT;
      246     4513    3                 FROM$WSPEC.COORDS.HEIGHT# = FROM$WSPEC.COORDS.HEIGHT# - DELTA;
      247     4514    4                 IF OLD_WINDOW.FLINK$ = FROM_WINDOW$ THEN DO;
      248     4515                         /* The top of the window below OLD_WINDOW moved up or down */
      249     4516    4                    FROM$WSPEC.COORDS.LINE# = FROM$WSPEC.COORDS.LINE# + DELTA;
      250     4517    4                    END;
      251     4518
      252     4519                      /*
      253     4520                      *  If the FROM-window is the command window, then we've
      254     4521                      *     changed its size as a side-effect of changing OLD$WSPEC's
      255     4522                      *     size.  Whenever the command window is re-sized, we
      256     4523                      *     may have to adjust its pagehalt.
      257     4524                      */
      258     4525    4                 IF OLD$WSPEC.COMMAND THEN DO;
      259     4526    4                    FROM_WSPEC$ = ADDR(OLD$WSPEC);
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:8    
      260     4527    4                    DELTA = -DELTA;
      261     4528    4                    END;
      262     4529    4                 IF FROM$WSPEC.COMMAND THEN DO;
      263     4530    4                    FPT_TRMCTL.V.DCB# = OLD$WSPEC.DCB#;
      264     4531    4                    VLP_TRMCTL = CONST_VLP_TRMCTL;
      265     4532    4                    FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_TRMCTL);
      266     4533    4                    FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_TRMCTL#;
      267     4534    5                    IF DELTA > 0 THEN DO; /* We shrank the cmd window */
      268     4535    5                       VLP_TRMCTL.PAGEHALT# = %NO#;
      269     4536    5                       END;
      270     4537    5                    ELSE IF FROM$WSPEC.COORDS.HEIGHT# > VD_$MIN_COMMAND.V# THEN DO;
      271     4538    5                          VLP_TRMCTL.PAGEHALT# = %YES#;
      272     4539    5                          END;
      273     4540    5                    IF VLP_TRMCTL.PAGEHALT# ~= %IGNORE_YES_NO# THEN DO;
      274     4541    5                       CALL M$STRMCTL (FPT_TRMCTL)
      275     4542    5                         ALTRET (STRMCTL_FAILED);
      276     4543    5                       END;
      277     4544    4                    END;
      278     4545    3                 END SCREEN_EDITING_CHANGE;
      279     4546
      280     4547    2              END SCREEN_EDITING;
      281     4548
      282     4549
      283     4550    1           IF VD_$$MON_PRES.V# > 0 THEN
      284     4551    1              CALL VDG$MPRES_WCHANGE_RETURN (OLD_WINDOW, FROM$WSPEC);
      285     4552    1           RETURN;
      286     4553
      287     4554
      288     4555    1   STRMCTL_FAILED:
      289     4556    1           ;
      290     4557    1   GTRMCTL_FAILED:
      291     4558    1           ;
      292     4559    1           CALL VDG$MONERR;
      293     4560    1           ALTRETURN;
      294     4561
      295     4562
      296     4563    1   END VDP$WCHANGE;
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:9    
      297     4564        %EOD;

PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:10   
--  Include file information  --

   G_LCP6_E.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WCHANGE.

   Procedure VDP$WCHANGE requires 279 words for executable code.
   Procedure VDP$WCHANGE requires 34 words of local(AUTO) storage.

PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:11   

 Object Unit name= VDP$WCHANGE                                File name= VDP$WINDOWS.:VDA5TOU
 UTS= JUL 04 '97 11:38:05.08 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     20     24  VDP$WCHANGE
    2   Proc  even  none   279    427  VDP$WCHANGE
    3  RoData even  none     5      5  VDP$WCHANGE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  VDP$WCHANGE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 VDG$MPRES_WCHANGE
 yes     yes           Std       0 VDG$ERASE_COMMAND_WINDOW
 yes     yes           Std       2 VDA$WREWINDOW
         yes           Std       2 VDG$MPRES_WCHANGE_RETURN
 yes     yes           Std       0 VDG$MONERR
 yes     yes           Std       2 VDP$WNEW
         yes           Std       3 VDG$MPRES_FEPSTRMCTL
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:12   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VD_$SCREEN                            VD_$MIN_COMMAND
     VD_$$MON_PRES                         VD_2DIM                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:13   


        1        1        /*M* VDP$WINDOWS - Window-management service routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P* NAME: VDP$WINDOWS
       12       12            PURPOSE:
       13       13                Window-management service routines.
       14       14            DESCRIPTION:
       15       15                This module contains several external routines:
       16       16
       17       17                VDP$WCHANGE
       18       18                Change the attributes of an existing window.  Also used when
       19       19                switching from 1Dim to 2Dim, or vice versa, to change a window from
       20       20                its 1Dim form (open to an ORG=TERMINAL DCB, no record set) to or from
       21       21                its 2Dim form (open to a DCB with UOPT0 set, and either ORG=TERMINAL
       22       22                (command window) or ORG=SE with a record set (editing window)).
       23       23
       24       24                VDP$WINIT
       25       25                Initialize the Presenter.
       26       26
       27       27                VDP$WNEW
       28       28                Create a new window.  Also used to close and re-open a window in
       29       29                a different mode (ie, switching between 1Dim and 2Dim).
       30       30                Allocates/frees the record set, and for 2Dim, creates the window in
       31       31                the FEP.
       32       32
       33       33                VDP$WREMOVE
       34       34                Remove a window.  Closes the window's DCB.  If 2Dim editing window,
       35       35                frees the window's record set.
       36       36
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:14   
       37       37                VDP$WTERMINATE
       38       38                Termination routine for the Presenter.  Closes all windows and
       39       39                restores the terminal to its pre-6Edit-invocation state.
       40       40        */
       41       41
       42       42        /*D* NAME: VDP$WCHANGE
       43       43            PARAMETERS:
       44       44                OLD_WINDOW - VD$FILE_NODE for the window to change:
       45       45                    .DCB# must specify the DCB # of the DCB the window is open to.
       46       46
       47       47                                          !! CAUTION !!
       48       48                        If switching from 1Dim to 2Dim, all Windows-file-nodes
       49       49                        previous to OLD_WINDOW must already have been changed
       50       50                        to 2Dim.
       51       51
       52       52                NEW_WINDOW_SPEC - VD$WINDOW_SPEC containing the new parameters for
       53       53                    the window.  The only values meaningful in NEW_WINDOW_SPEC are:
       54       54                    .COORDS.HEIGHT and .HEIGHT_PERCENT - New height for the window.
       55       55                        .HEIGHT_PERCENT is set if the value in .HEIGHT is a percentage
       56       56                        value.  (The window's height will be set to the specified
       57       57                        percentage of the "from-window"'s height.  The "from-window"
       58       58                        is usually the window just above the window being changed, or
       59       59                        for the command window, it's UC01.)
       60       60                        Ignored if we're currently not screen editing.
       61       61            INPUT:
       62       62                VD_$SCREEN is a VD$NUMBER whose .V# tells us both if we can and if the
       63       63                    user wants us to screen-edit or not.
       64       64            OUTPUT:
       65       65                OLD_WINDOW's VD$WINDOW_SPEC.COORDS will be set to the new values
       66       66                    determined by the FEP, based on the size change request.
       67       67                The VD$WINDOW_SPEC.COORDS for the window adjacent to OLD_WINDOW from
       68       68                    which we took or to which we gave space, will be set to new values.
       69       69                If switching between 1Dim and 2Dim, OLD_WINDOW's
       70       70                    VD$WINDOW_SPEC.RECORD_SET$ may be changed.
       71       71            DESCRIPTION:
       72       72                If we're not screen editing currently:
       73       73                    If OLD$WSPEC.DCB# is open to a 2Dim window (UOPT0 set),
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:15   
       74       74                        call VDP$WNEW to close the 2Dim window and re-open it in 1Dim.
       75       75                    Set OLD$WSPEC.COORDS to all 0's.
       76       76                If we're currently screen-editing:
       77       77                    If OLD$WSPEC.DCB# is open to a 1Dim window (UOPT0=%FALSE)
       78       78                        call VDP$WNEW to close the window's DCB and re-open it,
       79       79                        creating the 2Dim window.
       80       80                    Else, tell the FEP to change the size of OLD$WSPEC's window
       81       81                        to the requested size.
       82       82                    Find out from the FEP how big the window actually is now, and set
       83       83                        OLD$WSPEC.COORDS to the exact size and location as given
       84       84                        to us by the FEP.
       85       85        */
       86       86
       87       87        VDP$WCHANGE: PROC (OLD_WINDOW, NEW_WINDOW_SPEC) ALTRET;

     87  2 000000   000000 700200 xent  VDP$WCHANGE  TSX0  ! X66_AUTO_2
         2 000001   000042 000002                    ZERO    34,2

       88       88
       89       89        %INCLUDE VD_MACROS_M;
       90     2304        %INCLUDE CP_6;
       91     2385        %INCLUDE CP_6_SUBS;
       92     2925        %INCLUDE G_LCP6_E;
       93     3183
       94     3184
       95     3185        %VD$FILE_NODE (NAME=OLD_WINDOW, STCLASS=PARAM);
       96     3278        %VD$WINDOW_SPEC (NAME=NEW_WINDOW_SPEC, STCLASS=PARAM);
       97     3344
       98     3345
       99     3346    1   DCL VDA$WREWINDOW       ENTRY (2) ALTRET;
      100     3347    1   DCL VDP$WNEW            ENTRY (2) ALTRET;
      101     3348    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
      102     3349    1   DCL VDG$SCREECH         ENTRY (3);
      103     3350    1   DCL VDG$ERASE_COMMAND_WINDOW  ENTRY     ALTRET;
      104     3351    1   DCL VDG$MONERR          ENTRY     ALTRET;
      105     3352    1   DCL VDG$MPRES_WCHANGE   ENTRY (2);
      106     3353    1   DCL VDG$MPRES_FEPSTRMCTL ENTRY (3);
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:16   
      107     3354    1   DCL VDG$MPRES_WCHANGE_RETURN ENTRY (2);
      108     3355
      109     3356
      110     3357        %VD_6E (STCLASS=SYMREF);
      111     3393        %VD$NUMBER (NAME=VD_$SCREEN, STCLASS=SYMREF);
      112     3438        %VD$NUMBER (NAME=VD_$MIN_COMMAND, STCLASS=SYMREF);
      113     3483        %VD$NUMBER (NAME=VD_$$MON_PRES, STCLASS=SYMREF);
      114     3528    1   DCL VD_2DIM BIT(1) SYMREF;
      115     3529
      116     3530
      117     3531        %FPT_TRMCTL (FPTN=CONST_FPT_TRMCTL, STCLASS=CONSTANT);
      118     3558        %VLP_WINDOW (FPTN=CONST_VLP_WINDOW, STCLASS=CONSTANT);
      119     3602        %VLP_TRMCTL (FPTN=CONST_VLP_TRMCTL, STCLASS=CONSTANT);
      120     3642
      121     3643
      122     3644    1   DCL FROM_WINDOW$ PTR;
      123     3645    1   DCL FROM_WSPEC$ PTR;
      124     3646        %FPT_TRMCTL (STCLASS=AUTO);
      125     3673        %VLP_WINDOW (STCLASS=AUTO);
      126     3717        %VLP_TRMCTL (STCLASS=AUTO);
      127     3757    1   DCL OLD_HEIGHT SBIN;
      128     3758    1   DCL DELTA SBIN;
      129     3759
      130     3760
      131     3761        %VD$WINDOW_SPEC (NAME=OLD$WSPEC,
      132     3762             STCLASS="BASED(OLD_WINDOW.DESC.SPEC.V$)");
      133     3828        %VD$FILE_NODE (NAME=FROM$WINDOW, STCLASS="BASED(FROM_WINDOW$)");
      134     3921        %VD$WINDOW_SPEC (NAME=FROM$WSPEC, STCLASS="BASED(FROM_WSPEC$)");
      135     3987        %VD$STREAM;
      136     4093        %VD$PORT;
      137     4191        %VD$FILE_NODE;
      138     4284        %VD$WINDOW_SPEC;
      139     4350        %F$DCB;
      140     4407
      141     4408
      142     4409
      143     4410    1           IF VD_$$MON_PRES.V# > 0 THEN
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:17   

   4410  2 000002   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         2 000003   000010 604400 2                  TMOZ    s:4413

      144     4411    1              CALL VDG$MPRES_WCHANGE (OLD_WINDOW, NEW_WINDOW_SPEC);

   4411  2 000004   200003 630500                    EPPR0   @OLD_WINDOW,,AUTO
         2 000005   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000006   000000 701000 xent               TSX1    VDG$MPRES_WCHANGE
         2 000007   000000 011000                    NOP     0

      145     4412
      146     4413    1           IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT THEN

   4413  2 000010   000003 235000 xsym               LDA     VD_$SCREEN+3
         2 000011   000003 115007                    CMPA    3,DL
         2 000012   000106 605000 2                  TPL     SCREEN_EDITING

      147     4414    2   NOT_SCREEN_EDITING: DO;

   4414  2 000013                       NOT_SCREEN_* null
      148     4415                   /* We're not screen editing now */
      149     4416    3              IF DCBADDR(OLD$WSPEC.DCB#)->F$DCB.UOPT#(0) THEN DO;

   4416  2 000013   200003 470500                    LDP0    @OLD_WINDOW,,AUTO
         2 000014   000007 471500                    LDP1    7,,PR0
         2 000015   000000 473400 3                  LDP3    0
         2 000016   300000 474500                    LDP4    0,,PR3
         2 000017   100014 720100                    LXL0    12,,PR1
         2 000020   400000 475510                    LDP5    0,X0,PR4
         2 000021   500031 236100                    LDQ     25,,PR5
         2 000022   000400 316003                    CANQ    256,DU
         2 000023   000036 600000 2                  TZE     s:4422

      150     4417                      /* Window is currently open 2Dim:  close and re-open 1Dim */
      151     4418    3                 CALL VDP$WNEW (OLD$WSPEC, OLD_WINDOW.BLINK$->VD$FILE_NODE)

PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:18   
   4418  2 000024   000001 476500                    LDP6    1,,PR0
         2 000025   200037 456500                    STP6    DELTA+2,,AUTO
         2 000026   200036 451500                    STP1    DELTA+1,,AUTO
         2 000027   200036 630500                    EPPR0   DELTA+1,,AUTO
         2 000030   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000031   000000 701000 xent               TSX1    VDP$WNEW
         2 000032   000034 702000 2                  TSX2    s:4419
         2 000033   000035 710000 2                  TRA     s:4420

      152     4419    4                 WHENALTRETURN DO; ALTRETURN; END;

   4419  2 000034   000000 702200 xent               TSX2  ! X66_AALT

      153     4420    3                 END;

   4420  2 000035   000411 710000 2                  TRA     s:4550

      154     4421    3              ELSE DO;

      155     4422    3                 FROM_WINDOW$ = OLD_WINDOW.BLINK$;

   4422  2 000036   000001 236100                    LDQ     1,,PR0
         2 000037   200005 756100                    STQ     FROM_WINDOW$,,AUTO

      156     4423    3                 IF FROM_WINDOW$ = ADDR(NIL) THEN FROM_WINDOW$ = OLD_WINDOW.FLINK$;

   4423  2 000040   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000041   000044 601000 2                  TNZ     s:4424

   4423  2 000042   000002 236100                    LDQ     2,,PR0
         2 000043   200005 756100                    STQ     FROM_WINDOW$,,AUTO

      157     4424    3                 IF FROM_WINDOW$ = ADDR(NIL) THEN EXIT;

   4424  2 000044   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000045   000105 600000 2                  TZE     s:4436

PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:19   
      158     4425    3                 FROM_WSPEC$ = FROM$WINDOW.DESC.SPEC.V$;

   4425  2 000046   200005 476500                    LDP6    FROM_WINDOW$,,AUTO
         2 000047   600007 236100                    LDQ     7,,PR6
         2 000050   200006 756100                    STQ     FROM_WSPEC$,,AUTO

      159     4426    3                 DELTA = NEW_WINDOW_SPEC.COORDS.HEIGHT# - OLD$WSPEC.COORDS.HEIGHT#;

   4426  2 000051   200004 477500                    LDP7    @NEW_WINDOW_SPEC,,AUTO
         2 000052   700005 236100                    LDQ     5,,PR7
         2 000053   100005 136100                    SBLQ    5,,PR1
         2 000054   200035 756100                    STQ     DELTA,,AUTO

      160     4427    3                 IF DELTA > FROM$WSPEC.COORDS.HEIGHT# THEN

   4427  2 000055   200006 470500                    LDP0    FROM_WSPEC$,,AUTO
         2 000056   000005 116100                    CMPQ    5,,PR0
         2 000057   000063 604400 2                  TMOZ    s:4429

      161     4428    3                    DELTA = FROM$WSPEC.COORDS.HEIGHT# - 1;

   4428  2 000060   000005 235100                    LDA     5,,PR0
         2 000061   000001 135007                    SBLA    1,DL
         2 000062   200035 755100                    STA     DELTA,,AUTO

      162     4429    3                 OLD$WSPEC.COORDS.HEIGHT# = OLD$WSPEC.COORDS.HEIGHT# + DELTA;

   4429  2 000063   200003 471500                    LDP1    @OLD_WINDOW,,AUTO
         2 000064   100007 475500                    LDP5    7,,PR1
         2 000065   500005 236100                    LDQ     5,,PR5
         2 000066   200035 036100                    ADLQ    DELTA,,AUTO
         2 000067   500005 756100                    STQ     5,,PR5

      163     4430    3                 FROM$WSPEC.COORDS.HEIGHT# = FROM$WSPEC.COORDS.HEIGHT# - DELTA;

   4430  2 000070   000005 236100                    LDQ     5,,PR0
         2 000071   200035 136100                    SBLQ    DELTA,,AUTO
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:20   
         2 000072   000005 756100                    STQ     5,,PR0

      164     4431    3                 IF FROM$WSPEC.COORDS.LINE# < OLD$WSPEC.COORDS.LINE# THEN

   4431  2 000073   100007 475500                    LDP5    7,,PR1
         2 000074   000003 236100                    LDQ     3,,PR0
         2 000075   500003 116100                    CMPQ    3,,PR5
         2 000076   000103 605000 2                  TPL     s:4434

      165     4432    3                    OLD$WSPEC.COORDS.LINE# = OLD$WSPEC.COORDS.LINE# - DELTA;

   4432  2 000077   500003 236100                    LDQ     3,,PR5
         2 000100   200035 136100                    SBLQ    DELTA,,AUTO
         2 000101   500003 756100                    STQ     3,,PR5
         2 000102   000411 710000 2                  TRA     s:4550

      166     4433    3                 ELSE
      167     4434    3                    FROM$WSPEC.COORDS.LINE# = FROM$WSPEC.COORDS.LINE# + DELTA;

   4434  2 000103   200035 036100                    ADLQ    DELTA,,AUTO
         2 000104   000003 756100                    STQ     3,,PR0

      168     4435    3                 END;

      169     4436    2              END NOT_SCREEN_EDITING;

   4436  2 000105   000411 710000 2                  TRA     s:4550

      170     4437
      171     4438    1           ELSE
      172     4439
      173     4440    2   SCREEN_EDITING: DO;

   4440  2 000106                       SCREEN_EDIT* null
      174     4441                   /* We're screen-editing currently */
      175     4442    3              IF NOT DCBADDR(OLD$WSPEC.DCB#)->F$DCB.UOPT#(0) THEN DO;

PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:21   
   4442  2 000106   200003 470500                    LDP0    @OLD_WINDOW,,AUTO
         2 000107   000007 471500                    LDP1    7,,PR0
         2 000110   000000 473400 3                  LDP3    0
         2 000111   300000 474500                    LDP4    0,,PR3
         2 000112   100014 720100                    LXL0    12,,PR1
         2 000113   400000 475510                    LDP5    0,X0,PR4
         2 000114   500031 236100                    LDQ     25,,PR5
         2 000115   000400 316003                    CANQ    256,DU
         2 000116   000154 601000 2                  TNZ     SCREEN_EDITING_CHANGE

      176     4443                      /* Window is currently open 1Dim:  close and re-open 2Dim */
      177     4444    3                 FROM_WINDOW$ = OLD_WINDOW.BLINK$;

   4444  2 000117   000001 236100                    LDQ     1,,PR0
         2 000120   200005 756100                    STQ     FROM_WINDOW$,,AUTO

      178     4445    3                 FROM_WSPEC$ = ADDR(NIL);

   4445  2 000121   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000122   200006 756100                    STQ     FROM_WSPEC$,,AUTO

      179     4446    3                 IF FROM_WINDOW$ ~= ADDR(NIL) THEN

   4446  2 000123   200005 236100                    LDQ     FROM_WINDOW$,,AUTO
         2 000124   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000125   000131 600000 2                  TZE     s:4448

      180     4447    3                    FROM_WSPEC$ = FROM$WINDOW.DESC.SPEC.V$;

   4447  2 000126   200005 476500                    LDP6    FROM_WINDOW$,,AUTO
         2 000127   600007 236100                    LDQ     7,,PR6
         2 000130   200006 756100                    STQ     FROM_WSPEC$,,AUTO

      181     4448    3                 OLD$WSPEC.COORDS = NEW_WINDOW_SPEC.COORDS;

   4448  2 000131   200004 476500                    LDP6    @NEW_WINDOW_SPEC,,AUTO
         2 000132   003100 060500                    CSL     bolr='003'O
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:22   
         2 000133   600003 000222                    BDSC    3,,PR6                   by=0,bit=0,n=146
         2 000134   100003 000222                    BDSC    3,,PR1                   by=0,bit=0,n=146

      182     4449    3                 IF NOT VD_2DIM THEN /* Clear screen */

   4449  2 000135   000000 234000 xsym               SZN     VD_2DIM
         2 000136   000142 604000 2                  TMI     s:4451

      183     4450    3                    CALL VDG$ERASE_COMMAND_WINDOW;

   4450  2 000137   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000140   000000 701000 xent               TSX1    VDG$ERASE_COMMAND_WINDOW
         2 000141   000000 011000                    NOP     0

      184     4451    3                 CALL VDA$WREWINDOW (OLD_WINDOW, FROM$WSPEC)

   4451  2 000142   200006 236100                    LDQ     FROM_WSPEC$,,AUTO
         2 000143   200003 235100                    LDA     @OLD_WINDOW,,AUTO
         2 000144   200036 757100                    STAQ    DELTA+1,,AUTO
         2 000145   200036 630500                    EPPR0   DELTA+1,,AUTO
         2 000146   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000147   000000 701000 xent               TSX1    VDA$WREWINDOW
         2 000150   000152 702000 2                  TSX2    s:4452
         2 000151   000153 710000 2                  TRA     s:4457

      185     4452    4                 WHENALTRETURN DO; ALTRETURN; END;

   4452  2 000152   000000 702200 xent               TSX2  ! X66_AALT

      186     4453                      /*
      187     4454                      *  Window has been created in the requested size; no need to
      188     4455                      *     change it.
      189     4456                      */
      190     4457    3                 END;

   4457  2 000153   000411 710000 2                  TRA     s:4550

PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:23   
      191     4458    2              ELSE
      192     4459    3   SCREEN_EDITING_CHANGE: DO;

   4459  2 000154                       SCREEN_EDIT* null
      193     4460                      /*
      194     4461                      *  Change the size of a 2Dim window.
      195     4462                      *  First thing to do is find a window to take-from/give-to the
      196     4463                      *     space -- the "from-window".
      197     4464                      *  For the editing windows, the "from-window" is the previous
      198     4465                      *     window in the Windows file, which cooresponds to the window
      199     4466                      *     just above the one being changed.
      200     4467                      *  However, for the command window, the "from-window" is the next
      201     4468                      *     window in the Windows file -- the first editing window.  If
      202     4469                      *     there are no editing windows yet, ignore the request.
      203     4470                      */
      204     4471    3                 FROM_WINDOW$ = OLD_WINDOW.BLINK$;   /* Use previous window */

   4471  2 000154   000001 236100                    LDQ     1,,PR0
         2 000155   200005 756100                    STQ     FROM_WINDOW$,,AUTO

      205     4472    3                 IF OLD_WINDOW.FLINK$ ~= ADDR(NIL) AND

   4472  2 000156   000002 236100                    LDQ     2,,PR0
         2 000157   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000160   000166 600000 2                  TZE     s:4472+8
         2 000161   200004 476500                    LDP6    @NEW_WINDOW_SPEC,,AUTO
         2 000162   600005 235100                    LDA     5,,PR6
         2 000163   000171 605400 2                  TPNZ    s:4475
         2 000164   100003 235100                    LDA     3,,PR1
         2 000165   000171 604000 2                  TMI     s:4475
         2 000166   200005 236100                    LDQ     FROM_WINDOW$,,AUTO
         2 000167   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000170   000176 601000 2                  TNZ     s:4479

      206     4473    3                   (NEW_WINDOW_SPEC.COORDS.HEIGHT#>0 OR OLD$WSPEC.COORDS.LINE#<0)
      207     4474    4                   OR FROM_WINDOW$ = ADDR(NIL) THEN DO;

PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:24   
      208     4475    4                    FROM_WINDOW$ = OLD_WINDOW.FLINK$;

   4475  2 000171   000002 236100                    LDQ     2,,PR0
         2 000172   200005 756100                    STQ     FROM_WINDOW$,,AUTO

      209     4476    4                    IF FROM_WINDOW$ = ADDR(NIL) THEN

   4476  2 000173   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000174   000176 601000 2                  TNZ     s:4479

      210     4477    4                       RETURN;   /* No editing windows:  ignore cmdwin change */

   4477  2 000175   000000 702200 xent               TSX2  ! X66_ARET

      211     4478    4                    END;
      212     4479    3                 FROM_WSPEC$ = FROM$WINDOW.DESC.SPEC.V$;

   4479  2 000176   200005 476500                    LDP6    FROM_WINDOW$,,AUTO
         2 000177   600007 236100                    LDQ     7,,PR6
         2 000200   200006 756100                    STQ     FROM_WSPEC$,,AUTO

      213     4480
      214     4481    3                 FPT_TRMCTL = CONST_FPT_TRMCTL;

   4481  2 000201   000100 100400                    MLR     fill='000'O
         2 000202   000000 000040 1                  ADSC9   CONST_FPT_TRMCTL         cn=0,n=32
         2 000203   200010 000040                    ADSC9   FPT_TRMCTL,,AUTO         cn=0,n=32

      215     4482    3                 FPT_TRMCTL.V_ = VECTOR(FPT_TRMCTL.V);

   4482  2 000204   000001 235000 3                  LDA     1
         2 000205   200036 452500                    STP2    DELTA+1,,AUTO
         2 000206   200036 236100                    LDQ     DELTA+1,,AUTO
         2 000207   000016 036003                    ADLQ    14,DU
         2 000210   200010 757100                    STAQ    FPT_TRMCTL,,AUTO

      216     4483    3                 FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_WINDOW);
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:25   

   4483  2 000211   000002 235000 3                  LDA     2
         2 000212   200036 452500                    STP2    DELTA+1,,AUTO
         2 000213   200036 236100                    LDQ     DELTA+1,,AUTO
         2 000214   000020 036003                    ADLQ    16,DU
         2 000215   200014 757100                    STAQ    FPT_TRMCTL+4,,AUTO

      217     4484    3                 FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_WINDOW#;

   4484  2 000216   000001 220003                    LDX0    1,DU
         2 000217   200016 440100                    SXL0    FPT_TRMCTL+6,,AUTO

      218     4485    3                 VLP_WINDOW = CONST_VLP_WINDOW;

   4485  2 000220   000100 100400                    MLR     fill='000'O
         2 000221   000010 000040 1                  ADSC9   CONST_VLP_WINDOW         cn=0,n=32
         2 000222   200020 000040                    ADSC9   VLP_WINDOW,,AUTO         cn=0,n=32

      219     4486    3                 VLP_WINDOW.FWINDOW# = DCBADDR(FROM$WSPEC.DCB#)->F$DCB.RES#;

   4486  2 000223   200006 471500                    LDP1    FROM_WSPEC$,,AUTO
         2 000224   100014 721100                    LXL1    12,,PR1
         2 000225   400000 475511                    LDP5    0,X1,PR4
         2 000226   500026 236100                    LDQ     22,,PR5
         2 000227   200020 756100                    STQ     VLP_WINDOW,,AUTO

      220     4487
      221     4488    3                 VLP_WINDOW.LENGTH# = NEW_WINDOW_SPEC.COORDS.HEIGHT#;

   4488  2 000230   200004 475500                    LDP5    @NEW_WINDOW_SPEC,,AUTO
         2 000231   500005 721100                    LXL1    5,,PR5
         2 000232   200021 741100                    STX1    VLP_WINDOW+1,,AUTO

      222     4489
      223     4490    3                 IF OLD$WSPEC.COORDS.HEIGHT# = VLP_WINDOW.LENGTH# THEN

   4490  2 000233   000007 477500                    LDP7    7,,PR0
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:26   
         2 000234   200021 236100                    LDQ     VLP_WINDOW+1,,AUTO
         2 000235   000022 732000                    QRS     18
         2 000236   700005 116100                    CMPQ    5,,PR7
         2 000237   000241 601000 2                  TNZ     s:4492

      224     4491    3                    RETURN;    /* Nothing to change! */

   4491  2 000240   000000 702200 xent               TSX2  ! X66_ARET

      225     4492    3                 VLP_WINDOW.LENGTH# = VLP_WINDOW.LENGTH# + %G_WINDOW_ABSVAL#;

   4492  2 000241   020000 622006                    EAX2    8192,QL
         2 000242   200021 742100                    STX2    VLP_WINDOW+1,,AUTO

      226     4493
      227     4494    3                 FPT_TRMCTL.V.DCB# = OLD$WSPEC.DCB#;

   4494  2 000243   000007 477500                    LDP7    7,,PR0
         2 000244   700014 721100                    LXL1    12,,PR7
         2 000245   200016 741100                    STX1    FPT_TRMCTL+6,,AUTO

      228     4495
      229     4496    3                 IF VD_$$MON_PRES.V# > 10 THEN

   4496  2 000246   000003 236000 xsym               LDQ     VD_$$MON_PRES+3
         2 000247   000012 116007                    CMPQ    10,DL
         2 000250   000263 604400 2                  TMOZ    s:4499

      230     4497    3                    CALL VDG$MPRES_FEPSTRMCTL (FPT_TRMCTL.V.DCB#,

   4497  2 000251   200020 637500                    EPPR7   VLP_WINDOW,,AUTO
         2 000252   200040 457500                    STP7    DELTA+3,,AUTO
         2 000253   200021 630500                    EPPR0   VLP_WINDOW+1,,AUTO
         2 000254   200037 450500                    STP0    DELTA+2,,AUTO
         2 000255   200016 630500                    EPPR0   FPT_TRMCTL+6,,AUTO
         2 000256   200036 450500                    STP0    DELTA+1,,AUTO
         2 000257   200036 630500                    EPPR0   DELTA+1,,AUTO
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:27   
         2 000260   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000261   000000 701000 xent               TSX1    VDG$MPRES_FEPSTRMCTL
         2 000262   000000 011000                    NOP     0

      231     4498    3                      VLP_WINDOW.LENGTH#, VLP_WINDOW.FWINDOW#);
      232     4499    3                 CALL M$STRMCTL (FPT_TRMCTL)

   4499  2 000263   200010 630500                    EPPR0   FPT_TRMCTL,,AUTO
         2 000264   560000 713400                    CLIMB   alt,+57344
         2 000265   401000 401760                    pmme    nvectors=3
         2 000266   000423 702000 2                  TSX2    STRMCTL_FAILED

      233     4500    3                   ALTRET (STRMCTL_FAILED);
      234     4501
      235     4502                      /* Get new coords and size from FEP */
      236     4503    3                 CALL M$GTRMCTL (FPT_TRMCTL)

   4503  2 000267   200010 630500                    EPPR0   FPT_TRMCTL,,AUTO
         2 000270   560001 713400                    CLIMB   alt,+57345
         2 000271   401000 401760                    pmme    nvectors=3
         2 000272   000423 702000 2                  TSX2    STRMCTL_FAILED

      237     4504    3                   ALTRET (GTRMCTL_FAILED);
      238     4505
      239     4506    3                 OLD_HEIGHT = OLD$WSPEC.COORDS.HEIGHT#;

   4506  2 000273   200003 470500                    LDP0    @OLD_WINDOW,,AUTO
         2 000274   000007 471500                    LDP1    7,,PR0
         2 000275   100005 235100                    LDA     5,,PR1
         2 000276   200034 755100                    STA     OLD_HEIGHT,,AUTO

      240     4507    3                 OLD$WSPEC.COORDS.LINE# = VLP_WINDOW.ORG_PST.LINE;

   4507  2 000277   200022 236100                    LDQ     VLP_WINDOW+2,,AUTO
         2 000300   000022 772000                    QRL     18
         2 000301   000777 376007                    ANQ     511,DL
         2 000302   100003 756100                    STQ     3,,PR1
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:28   

      241     4508    3                 OLD$WSPEC.COORDS.COLUMN# = VLP_WINDOW.ORG_PST.COLUMN;

   4508  2 000303   000007 471500                    LDP1    7,,PR0
         2 000304   200022 236100                    LDQ     VLP_WINDOW+2,,AUTO
         2 000305   777777 376007                    ANQ     -1,DL
         2 000306   100004 756100                    STQ     4,,PR1

      242     4509    3                 OLD$WSPEC.COORDS.HEIGHT# = VLP_WINDOW.LENGTH#;

   4509  2 000307   000007 471500                    LDP1    7,,PR0
         2 000310   200021 236100                    LDQ     VLP_WINDOW+1,,AUTO
         2 000311   000022 732000                    QRS     18
         2 000312   100005 756100                    STQ     5,,PR1

      243     4510    3                 OLD$WSPEC.COORDS.WIDTH# = VLP_WINDOW.WIDTH#;

   4510  2 000313   000007 471500                    LDP1    7,,PR0
         2 000314   200021 236100                    LDQ     VLP_WINDOW+1,,AUTO
         2 000315   000022 736000                    QLS     18
         2 000316   000022 732000                    QRS     18
         2 000317   100006 756100                    STQ     6,,PR1

      244     4511
      245     4512    3                 DELTA = VLP_WINDOW.LENGTH# - OLD_HEIGHT;

   4512  2 000320   200021 236100                    LDQ     VLP_WINDOW+1,,AUTO
         2 000321   000022 732000                    QRS     18
         2 000322   200034 136100                    SBLQ    OLD_HEIGHT,,AUTO
         2 000323   200035 756100                    STQ     DELTA,,AUTO

      246     4513    3                 FROM$WSPEC.COORDS.HEIGHT# = FROM$WSPEC.COORDS.HEIGHT# - DELTA;

   4513  2 000324   200006 471500                    LDP1    FROM_WSPEC$,,AUTO
         2 000325   100005 236100                    LDQ     5,,PR1
         2 000326   200035 136100                    SBLQ    DELTA,,AUTO
         2 000327   100005 756100                    STQ     5,,PR1
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:29   

      247     4514    4                 IF OLD_WINDOW.FLINK$ = FROM_WINDOW$ THEN DO;

   4514  2 000330   000002 236100                    LDQ     2,,PR0
         2 000331   200005 116100                    CMPQ    FROM_WINDOW$,,AUTO
         2 000332   000336 601000 2                  TNZ     s:4525

      248     4515                         /* The top of the window below OLD_WINDOW moved up or down */
      249     4516    4                    FROM$WSPEC.COORDS.LINE# = FROM$WSPEC.COORDS.LINE# + DELTA;

   4516  2 000333   100003 236100                    LDQ     3,,PR1
         2 000334   200035 036100                    ADLQ    DELTA,,AUTO
         2 000335   100003 756100                    STQ     3,,PR1

      250     4517    4                    END;

      251     4518
      252     4519                      /*
      253     4520                      *  If the FROM-window is the command window, then we've
      254     4521                      *     changed its size as a side-effect of changing OLD$WSPEC's
      255     4522                      *     size.  Whenever the command window is re-sized, we
      256     4523                      *     may have to adjust its pagehalt.
      257     4524                      */
      258     4525    4                 IF OLD$WSPEC.COMMAND THEN DO;

   4525  2 000336   000007 473500                    LDP3    7,,PR0
         2 000337   300002 236100                    LDQ     2,,PR3
         2 000340   000400 316003                    CANQ    256,DU
         2 000341   000345 600000 2                  TZE     s:4529

      259     4526    4                    FROM_WSPEC$ = ADDR(OLD$WSPEC);

   4526  2 000342   200006 453500                    STP3    FROM_WSPEC$,,AUTO

      260     4527    4                    DELTA = -DELTA;

   4527  2 000343   200035 335100                    LCA     DELTA,,AUTO
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:30   
         2 000344   200035 755100                    STA     DELTA,,AUTO

      261     4528    4                    END;

      262     4529    4                 IF FROM$WSPEC.COMMAND THEN DO;

   4529  2 000345   200006 471500                    LDP1    FROM_WSPEC$,,AUTO
         2 000346   100002 236100                    LDQ     2,,PR1
         2 000347   000400 316003                    CANQ    256,DU
         2 000350   000411 600000 2                  TZE     s:4550

      263     4530    4                    FPT_TRMCTL.V.DCB# = OLD$WSPEC.DCB#;

   4530  2 000351   300014 720100                    LXL0    12,,PR3
         2 000352   200016 740100                    STX0    FPT_TRMCTL+6,,AUTO

      264     4531    4                    VLP_TRMCTL = CONST_VLP_TRMCTL;

   4531  2 000353   000100 100400                    MLR     fill='000'O
         2 000354   000020 000020 1                  ADSC9   CONST_VLP_TRMCTL         cn=0,n=16
         2 000355   200030 000020                    ADSC9   VLP_TRMCTL,,AUTO         cn=0,n=16

      265     4532    4                    FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_TRMCTL);

   4532  2 000356   000003 235000 3                  LDA     3
         2 000357   200036 452500                    STP2    DELTA+1,,AUTO
         2 000360   200036 236100                    LDQ     DELTA+1,,AUTO
         2 000361   000030 036003                    ADLQ    24,DU
         2 000362   200014 757100                    STAQ    FPT_TRMCTL+4,,AUTO

      266     4533    4                    FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_TRMCTL#;

   4533  2 000363   000000 221003                    LDX1    0,DU
         2 000364   200016 441100                    SXL1    FPT_TRMCTL+6,,AUTO

      267     4534    5                    IF DELTA > 0 THEN DO; /* We shrank the cmd window */

PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:31   
   4534  2 000365   200035 235100                    LDA     DELTA,,AUTO
         2 000366   000372 604400 2                  TMOZ    s:4537

      268     4535    5                       VLP_TRMCTL.PAGEHALT# = %NO#;

   4535  2 000367   000004 236000 3                  LDQ     4
         2 000370   200031 356100                    ANSQ    VLP_TRMCTL+1,,AUTO

      269     4536    5                       END;

   4536  2 000371   000401 710000 2                  TRA     s:4540

      270     4537    5                    ELSE IF FROM$WSPEC.COORDS.HEIGHT# > VD_$MIN_COMMAND.V# THEN DO;

   4537  2 000372   100005 236100                    LDQ     5,,PR1
         2 000373   000003 116000 xsym               CMPQ    VD_$MIN_COMMAND+3
         2 000374   000401 604400 2                  TMOZ    s:4540

      271     4538    5                          VLP_TRMCTL.PAGEHALT# = %YES#;

   4538  2 000375   200031 236100                    LDQ     VLP_TRMCTL+1,,AUTO
         2 000376   000004 376000 3                  ANQ     4
         2 000377   040000 276003                    ORQ     16384,DU
         2 000400   200031 756100                    STQ     VLP_TRMCTL+1,,AUTO

      272     4539    5                          END;

      273     4540    5                    IF VLP_TRMCTL.PAGEHALT# ~= %IGNORE_YES_NO# THEN DO;

   4540  2 000401   200031 236100                    LDQ     VLP_TRMCTL+1,,AUTO
         2 000402   060000 376003                    ANQ     24576,DU
         2 000403   020000 116003                    CMPQ    8192,DU
         2 000404   000411 600000 2                  TZE     s:4550

      274     4541    5                       CALL M$STRMCTL (FPT_TRMCTL)

   4541  2 000405   200010 630500                    EPPR0   FPT_TRMCTL,,AUTO
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:32   
         2 000406   560000 713400                    CLIMB   alt,+57344
         2 000407   401000 401760                    pmme    nvectors=3
         2 000410   000423 702000 2                  TSX2    STRMCTL_FAILED

      275     4542    5                         ALTRET (STRMCTL_FAILED);
      276     4543    5                       END;

      277     4544    4                    END;

      278     4545    3                 END SCREEN_EDITING_CHANGE;

      279     4546
      280     4547    2              END SCREEN_EDITING;

      281     4548
      282     4549
      283     4550    1           IF VD_$$MON_PRES.V# > 0 THEN

   4550  2 000411   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         2 000412   000422 604400 2                  TMOZ    s:4552

      284     4551    1              CALL VDG$MPRES_WCHANGE_RETURN (OLD_WINDOW, FROM$WSPEC);

   4551  2 000413   200006 236100                    LDQ     FROM_WSPEC$,,AUTO
         2 000414   200003 235100                    LDA     @OLD_WINDOW,,AUTO
         2 000415   200036 757100                    STAQ    DELTA+1,,AUTO
         2 000416   200036 630500                    EPPR0   DELTA+1,,AUTO
         2 000417   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000420   000000 701000 xent               TSX1    VDG$MPRES_WCHANGE_RETURN
         2 000421   000000 011000                    NOP     0

      285     4552    1           RETURN;

   4552  2 000422   000000 702200 xent               TSX2  ! X66_ARET

   4550  2 000423                       STRMCTL_FAI* null
   4550  2 000423                       GTRMCTL_FAI* null
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:33   
      286     4553
      287     4554
      288     4555    1   STRMCTL_FAILED:
      289     4556    1           ;
      290     4557    1   GTRMCTL_FAILED:
      291     4558    1           ;
      292     4559    1           CALL VDG$MONERR;

   4559  2 000423   000002 631400 xsym               EPPR1   B_VECTNIL+2
         2 000424   000000 701000 xent               TSX1    VDG$MONERR
         2 000425   000000 011000                    NOP     0

      293     4560    1           ALTRETURN;

   4560  2 000426   000000 702200 xent               TSX2  ! X66_AALT
      294     4561
      295     4562
      296     4563    1   END VDP$WCHANGE;
      297     4564        %EOD;

PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:34   
--  Include file information  --

   G_LCP6_E.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WCHANGE.
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:35   

 **** Variables and constants ****

  ****  Section 001 RoData VDP$WCHANGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(288)   r     1 CONST_FPT_TRMCTL          20-0-0/d STRC(144)   r     1 CONST_VLP_TRMCTL
    10-0-0/d STRC(288)   r     1 CONST_VLP_WINDOW

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @NEW_WINDOW_SPEC           3-0-0/w PTR         r     1 @OLD_WINDOW
    35-0-0/w SBIN        r     1 DELTA                     10-0-0/d STRC(288)   r     1 FPT_TRMCTL
     5-0-0/w PTR         r     1 FROM_WINDOW$               6-0-0/w PTR         r     1 FROM_WSPEC$
    *0-0-0/w STRC(900)   r     1 NEW_WINDOW_SPEC           34-0-0/w SBIN        r     1 OLD_HEIGHT
    *0-0-0/w STRC(468)   r     1 OLD_WINDOW                30-0-0/d STRC(144)   r     1 VLP_TRMCTL
    20-0-0/d STRC(288)   r     1 VLP_WINDOW

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 VD_$$MON_PRES              0-0-0/w STRC(144)   r     1 VD_$MIN_COMMAND
     0-0-0/w STRC(144)   r     1 VD_$SCREEN                 0-0-0/b BIT         r     1 VD_2DIM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(468)   r     1 FROM$WINDOW
     0-0-0/w STRC(900)   r     1 FROM$WSPEC                 0-0-0N  NULL        r     1 M$UC
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:36   
     0-0-0/w STRC(900)   r     1 OLD$WSPEC                  0-0-0/w STRC(468)   r     1 VD$FILE_NODE


   Procedure VDP$WCHANGE requires 279 words for executable code.
   Procedure VDP$WCHANGE requires 34 words of local(AUTO) storage.
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:37   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:38   
          MINI XREF LISTING

CONST_FPT_TRMCTL
      3547**DCL      4481>>ASSIGN
CONST_FPT_TRMCTL.V
      3555**DCL      3549--DCLINIT
CONST_VLP_TRMCTL
      3619**DCL      4531>>ASSIGN
CONST_VLP_TRMCTL.BREAKCOUNT
      3631**DCL      3631--REDEF
CONST_VLP_WINDOW
      3576**DCL      4485>>ASSIGN
CONST_VLP_WINDOW.FWINDOW#
      3576**DCL      3576--REDEF    3577--REDEF
DELTA
      3758**DCL      4426<<ASSIGN   4427>>IF       4428<<ASSIGN   4429>>ASSIGN   4430>>ASSIGN   4432>>ASSIGN
      4434>>ASSIGN   4512<<ASSIGN   4513>>ASSIGN   4516>>ASSIGN   4527<<ASSIGN   4527>>ASSIGN   4534>>IF
F$DCB.ACTPOS
      4383**DCL      4383--REDEF
F$DCB.ARS#
      4357**DCL      4357--REDEF
F$DCB.ATTR
      4376**DCL      4377--REDEF
F$DCB.BORROW
      4391**DCL      4391--REDEF    4391--REDEF    4391--REDEF
F$DCB.DCBNAME.L
      4405**DCL      4405--IMP-SIZ
F$DCB.EOMCHAR#
      4361**DCL      4361--REDEF
F$DCB.FLDID
      4386**DCL      4386--REDEF
F$DCB.FORM$
      4380**DCL      4380--REDEF
F$DCB.FSECT
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:39   
      4396**DCL      4396--REDEF
F$DCB.FSN#
      4373**DCL      4373--REDEF    4373--REDEF    4374--REDEF
F$DCB.HEADER$
      4379**DCL      4379--REDEF
F$DCB.IXTNSIZE#
      4377**DCL      4377--REDEF
F$DCB.LASTSTA$
      4366**DCL      4366--REDEF
F$DCB.LVL
      4392**DCL      4392--REDEF
F$DCB.NAME#.C
      4367**DCL      4367--REDEF
F$DCB.NOEOF
      4389**DCL      4389--REDEF
F$DCB.NRECS#
      4378**DCL      4378--REDEF
F$DCB.NRECX
      4397**DCL      4397--REDEF
F$DCB.OHDR
      4389**DCL      4389--REDEF
F$DCB.ORG#
      4372**DCL      4372--REDEF
F$DCB.PRECNO
      4395**DCL      4395--REDEF
F$DCB.RCSZ
      4401**DCL      4401--REDEF
F$DCB.RES#
      4368**DCL      4368--REDEF    4486>>ASSIGN
F$DCB.SETX
      4380**DCL      4380--REDEF
F$DCB.TAB$
      4380**DCL      4380--REDEF
F$DCB.TDA
      4394**DCL      4395--REDEF
F$DCB.UOPT#
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:40   
      4370**DCL      4416>>IF       4442>>IF
F$DCB.WSN#
      4368**DCL      4368--REDEF
FPT_TRMCTL
      3662**DCL      4481<<ASSIGN   4499<>CALL     4503<>CALL     4541<>CALL
FPT_TRMCTL.TRMCTL_
      3668**DCL      4483<<ASSIGN   4532<<ASSIGN
FPT_TRMCTL.V
      3670**DCL      4482--ASSIGN
FPT_TRMCTL.V.DCB#
      3670**DCL      4494<<ASSIGN   4497<>CALL     4530<<ASSIGN
FPT_TRMCTL.V.VLPTYPE#
      3670**DCL      4484<<ASSIGN   4533<<ASSIGN
FPT_TRMCTL.V_
      3664**DCL      4482<<ASSIGN
FROM$WINDOW.DESC.SPEC.V$
      3915**DCL      4425>>ASSIGN   4447>>ASSIGN   4479>>ASSIGN
FROM$WSPEC
      3929**DCL      4451<>CALL     4551<>CALL
FROM$WSPEC.COMMAND
      3955**DCL      4529>>IF
FROM$WSPEC.COORDS.HEIGHT#
      3956**DCL      4427>>IF       4428>>ASSIGN   4430<<ASSIGN   4430>>ASSIGN   4513<<ASSIGN   4513>>ASSIGN
      4537>>IF
FROM$WSPEC.COORDS.LINE#
      3955**DCL      4431>>IF       4434<<ASSIGN   4434>>ASSIGN   4516<<ASSIGN   4516>>ASSIGN
FROM$WSPEC.DCB#
      3972**DCL      4486--ASSIGN
FROM_WINDOW$
      3644**DCL      3836--IMP-PTR  4422<<ASSIGN   4423>>IF       4423<<ASSIGN   4424>>IF       4425>>ASSIGN
      4444<<ASSIGN   4446>>IF       4447>>ASSIGN   4471<<ASSIGN   4472>>IF       4475<<ASSIGN   4476>>IF
      4479>>ASSIGN   4514>>IF
FROM_WSPEC$
      3645**DCL      3929--IMP-PTR  4425<<ASSIGN   4427>>IF       4428>>ASSIGN   4430>>ASSIGN   4430>>ASSIGN
      4431>>IF       4434>>ASSIGN   4434>>ASSIGN   4445<<ASSIGN   4447<<ASSIGN   4451>>CALL     4479<<ASSIGN
      4486>>ASSIGN   4513>>ASSIGN   4513>>ASSIGN   4516>>ASSIGN   4516>>ASSIGN   4526<<ASSIGN   4529>>IF
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:41   
      4537>>IF       4551>>CALL
GTRMCTL_FAILED
      4550**LABEL    4503--CALLALT
M$GTRMCTL
      2337**DCL-ENT  4503--CALL
M$STRMCTL
      2337**DCL-ENT  4499--CALL     4541--CALL
NEW_WINDOW_SPEC
      3286**DCL        87--PROC     4411<>CALL
NEW_WINDOW_SPEC.COORDS
      3312**DCL      4448>>ASSIGN
NEW_WINDOW_SPEC.COORDS.HEIGHT#
      3313**DCL      4426>>ASSIGN   4472>>IF       4488>>ASSIGN
OLD$WSPEC
      3770**DCL      4418<>CALL     4526--ASSIGN
OLD$WSPEC.COMMAND
      3796**DCL      4525>>IF
OLD$WSPEC.COORDS
      3796**DCL      4448<<ASSIGN
OLD$WSPEC.COORDS.COLUMN#
      3797**DCL      4508<<ASSIGN
OLD$WSPEC.COORDS.HEIGHT#
      3797**DCL      4426>>ASSIGN   4429<<ASSIGN   4429>>ASSIGN   4490>>IF       4506>>ASSIGN   4509<<ASSIGN
OLD$WSPEC.COORDS.LINE#
      3796**DCL      4431>>IF       4432<<ASSIGN   4432>>ASSIGN   4472>>IF       4507<<ASSIGN
OLD$WSPEC.COORDS.WIDTH#
      3797**DCL      4510<<ASSIGN
OLD$WSPEC.DCB#
      3813**DCL      4416--IF       4442--IF       4494>>ASSIGN   4530>>ASSIGN
OLD_HEIGHT
      3757**DCL      4506<<ASSIGN   4512>>ASSIGN
OLD_WINDOW
      3193**DCL        87--PROC     4411<>CALL     4451<>CALL     4551<>CALL
OLD_WINDOW.BLINK$
      3219**DCL      4418>>CALL     4422>>ASSIGN   4444>>ASSIGN   4471>>ASSIGN
OLD_WINDOW.DESC.SPEC.V$
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:42   
      3272**DCL      3770--IMP-PTR  4416>>IF       4418>>CALL     4426>>ASSIGN   4429>>ASSIGN   4429>>ASSIGN
      4431>>IF       4432>>ASSIGN   4432>>ASSIGN   4442>>IF       4448>>ASSIGN   4472>>IF       4490>>IF
      4494>>ASSIGN   4506>>ASSIGN   4507>>ASSIGN   4508>>ASSIGN   4509>>ASSIGN   4510>>ASSIGN   4525>>IF
      4526>>ASSIGN   4530>>ASSIGN
OLD_WINDOW.FLINK$
      3219**DCL      4423>>ASSIGN   4472>>IF       4475>>ASSIGN   4514>>IF
STRMCTL_FAILED
      4550**LABEL    4499--CALLALT  4541--CALLALT
VD$FILE_NODE
      4199**DCL      4418<>CALL
VDA$WREWINDOW
      3346**DCL-ENT  4451--CALL
VDG$ERASE_COMMAND_WINDOW
      3350**DCL-ENT  4450--CALL
VDG$MONERR
      3351**DCL-ENT  4559--CALL
VDG$MPRES_FEPSTRMCTL
      3353**DCL-ENT  4497--CALL
VDG$MPRES_WCHANGE
      3352**DCL-ENT  4411--CALL
VDG$MPRES_WCHANGE_RETURN
      3354**DCL-ENT  4551--CALL
VDP$WNEW
      3347**DCL-ENT  4418--CALL
VD_$$MON_PRES.V#
      3525**DCL      4410>>IF       4496>>IF       4550>>IF
VD_$MIN_COMMAND.V#
      3480**DCL      4537>>IF
VD_$SCREEN.V#
      3435**DCL      4413>>IF
VD_2DIM
      3528**DCL      4449>>IF
VLP_TRMCTL
      3734**DCL      4531<<ASSIGN   4532--ASSIGN
VLP_TRMCTL.BREAKCOUNT
      3746**DCL      3746--REDEF
PL6.E3A0      #001=VDP$WCHANGE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:38 Page:43   
VLP_TRMCTL.PAGEHALT#
      3742**DCL      4535<<ASSIGN   4538<<ASSIGN   4540>>IF
VLP_WINDOW
      3691**DCL      4483--ASSIGN   4485<<ASSIGN
VLP_WINDOW.FWINDOW#
      3691**DCL      3691--REDEF    3692--REDEF    4486<<ASSIGN   4497<>CALL
VLP_WINDOW.LENGTH#
      3705**DCL      4488<<ASSIGN   4490>>IF       4492<<ASSIGN   4492>>ASSIGN   4497<>CALL     4509>>ASSIGN
      4512>>ASSIGN
VLP_WINDOW.ORG_PST.COLUMN
      3706**DCL      4508>>ASSIGN
VLP_WINDOW.ORG_PST.LINE
      3706**DCL      4507>>ASSIGN
VLP_WINDOW.WIDTH#
      3705**DCL      4510>>ASSIGN

PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:44   
      298        1        /*T***********************************************************/
      299        2        /*T*                                                         */
      300        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      301        4        /*T*                                                         */
      302        5        /*T***********************************************************/
      303        6
      304        7        /*D* VDP$WINIT
      305        8            PARAMETERS:
      306        9                None.
      307       10            INPUT:
      308       11                None.
      309       12            OUTPUT:
      310       13                VD_SCREEN_HEIGHT will contain the height in lines of the screen 6Edit
      311       14                    has available for use.
      312       15                VD_SCREEN_WIDTH will contain the width in characters of the screen
      313       16                    6Edit has available for use.
      314       17                VD_ORIGINAL_TRMCTL and _TAB will contain the values
      315       18                    the user is currently running under for these parameter blocks.
      316       19            DESCRIPTION:
      317       20                If we're running in any mode except interactive, set VD_SCREEN_HEIGHT
      318       21                    to 0; otherwise set it to the height of UC01 or, if M$6E is set,
      319       22                    to the height of the M$6E window.
      320       23                Get the TRMCTL, EDTCTL, and TAB parameters from the FEP, and save
      321       24                    them for later.  VDP$WTERMINATE will restore the user's environment
      322       25                    using these saved values.
      323       26        */
      324       27
      325       28        VDP$WINIT: PROC ALTRET;
      326       29
      327       30        %INCLUDE VD_MACROS_M;
      328     2245        %INCLUDE CP_6;
      329     2326        %INCLUDE CP_6_SUBS;
      330     2866        %INCLUDE B_ERRORS_C;
      331     3992        %INCLUDE B$JIT;
      332     4282
      333     4283
      334     4284    1   DCL VDG$MONERR          ENTRY     ALTRET;
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:45   
      335     4285
      336     4286
      337     4287        %VD$NODE_DESC (NAME=VDP_NODE_DESC, STCLASS="STATIC SYMDEF");
      338     4329
      339     4330    1   DCL M$6E DCB;
      340     4331    1   DCL M$ME DCB;
      341     4332    1   DCL VD_SCREEN_HEIGHT SBIN SYMREF;
      342     4333    1   DCL VD_SCREEN_WIDTH SBIN SYMREF;
      343     4334    1   DCL VD_IBEX_WINDOW SBIN STATIC SYMDEF INIT(1);
      344     4335    1   DCL VD_TOP_LINE SBIN STATIC SYMDEF INIT(1);
      345     4336    1   DCL VD_EDITING_HEIGHT SBIN SYMREF;
      346     4337    1   DCL VD_COMMAND_WINDOW$ PTR SYMREF;
      347     4338        %VD$NUMBER (NAME = VD_$SCROLL, STCLASS = SYMREF);
      348     4383        %VLP_TRMCTL (FPTN=VD_ORIGINAL_TRMCTL, STCLASS=SYMREF);
      349     4423        %VLP_TAB (FPTN=VD_ORIGINAL_TAB, STCLASS=SYMREF);
      350     4437    1   DCL B$JIT$ PTR SYMREF;
      351     4438
      352     4439        %VD$FILE_NODE (NAME=WINDOW$NODE, STCLASS="BASED(VD_COMMAND_WINDOW$)");
      353     4532        %VD$WINDOW_SPEC (NAME=WINDOW$SPEC, STCLASS="BASED(WINDOW_SPEC$)");
      354     4598
      355     4599    1   DCL WINDOW_SPEC$ PTR;
      356     4600
      357     4601        %FPT_TRMCTL (TRMCTL=VD_ORIGINAL_TRMCTL);
      358     4628        %FPT_TRMCTL (FPTN=FPT_TRMCTL_WINDOW, TRMCTL=VLP_WINDOW_TRMCTL, VLPTYPE=WINDOW);
      359     4655        %VLP_WINDOW (FPTN=VLP_WINDOW_TRMCTL);
      360     4699        %F$DCB (DCBN=F$DCB, STCLASS=BASED);
      361     4756        %VLP_TAB (FPTN=VLP$TAB, STCLASS=BASED);
      362     4770
      363     4771
      364     4772
      365     4773    1           VDP_NODE_DESC = %CLEAR;
      366     4774    1           VLP_WINDOW_TRMCTL = %CLEAR;
      367     4775
      368     4776    2           IF B$JIT.MODE ~= %M_INT# THEN DO;
      369     4777    2              VD_ORIGINAL_TRMCTL = %CLEAR;
      370     4778    2              VD_IBEX_WINDOW = 0;
      371     4779    2              END;
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:46   
      372     4780
      373     4781    2           ELSE DO;
      374     4782    2              CALL M$GTRMCTL (FPT_TRMCTL)
      375     4783    3              WHENALTRETURN DO;
      376     4784    3   MONERR:       ;
      377     4785    3                 CALL VDG$MONERR;
      378     4786    3   MONERR1:      ;
      379     4787    3                 ALTRETURN;
      380     4788    3                 END;
      381     4789
      382     4790    2              VD_ORIGINAL_TAB = DCBADDR(DCBNUM(M$UC))->F$DCB.TAB$->VLP$TAB;
      383     4791
      384     4792    3              IF DCBADDR (DCBNUM (M$6E)) -> F$DCB.RES# ~= 'ME' THEN DO;
      385     4793                   /* Use the RES set by user in M$6E */
      386     4794    3                 FPT_TRMCTL_WINDOW.V.DCB# = DCBNUM (M$6E);
      387     4795    3                 VD_IBEX_WINDOW = 0;
      388     4796    3                 END;
      389     4797
      390     4798    2              IF NOT VD_ORIGINAL_TRMCTL.EDITOVR#
      391     4799    3                OR NOT VD_ORIGINAL_TRMCTL.RETYPOVR# THEN DO;
      392     4800    3                 VD_IBEX_WINDOW = 0;
      393     4801    3                 END;
      394     4802
      395     4803    2              ELSE
      396     4804    2                 CALL M$GTRMCTL (FPT_TRMCTL_WINDOW) ALTRET (MONERR);
      397     4805    2              END;
      398     4806
      399     4807    1           VD_$SCROLL.V# = BITBIN(VD_ORIGINAL_TRMCTL.SCROLL#)/2;
      400     4808
      401     4809    1           VD_SCREEN_HEIGHT = VLP_WINDOW_TRMCTL.LENGTH#;
      402     4810    1           VD_EDITING_HEIGHT = VD_SCREEN_HEIGHT - VD_IBEX_WINDOW;
      403     4811    1           VD_TOP_LINE = VLP_WINDOW_TRMCTL.ORG_PST.LINE;
      404     4812    2           IF VD_COMMAND_WINDOW$ ~= ADDR(NIL) THEN DO;
      405     4813    2              WINDOW_SPEC$ = WINDOW$NODE.DESC.SPEC.V$;
      406     4814    2              WINDOW$SPEC.COORDS.LINE# = VD_TOP_LINE;
      407     4815    2              WINDOW$SPEC.COORDS.HEIGHT# = VD_EDITING_HEIGHT;
      408     4816    2              END;
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:47   
      409     4817    1           IF VLP_WINDOW_TRMCTL.TOPBRDR# = %TRUE THEN
      410     4818    1              VD_SCREEN_HEIGHT = VD_SCREEN_HEIGHT - VLP_WINDOW_TRMCTL.HBRDRSIZ#;
      411     4819    1           IF VLP_WINDOW_TRMCTL.BTMBRDR# = %TRUE THEN
      412     4820    1              VD_SCREEN_HEIGHT = VD_SCREEN_HEIGHT - VLP_WINDOW_TRMCTL.HBRDRSIZ#;
      413     4821
      414     4822    1           VD_SCREEN_WIDTH = VLP_WINDOW_TRMCTL.WIDTH#;
      415     4823    1           IF VLP_WINDOW_TRMCTL.LFTBRDR# = %TRUE THEN
      416     4824    1              VD_SCREEN_WIDTH = VD_SCREEN_WIDTH - VLP_WINDOW_TRMCTL.VBRDRSIZ#;
      417     4825    1           IF VLP_WINDOW_TRMCTL.RHTBRDR# = %TRUE THEN
      418     4826    1              VD_SCREEN_WIDTH = VD_SCREEN_WIDTH - VLP_WINDOW_TRMCTL.VBRDRSIZ#;
      419     4827
      420     4828    1   INIT_DONE:
      421     4829    1           RETURN;
      422     4830
      423     4831    1   END VDP$WINIT;
      424     4832        %EOD;

PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:48   
--  Include file information  --

   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WINIT.

   Procedure VDP$WINIT requires 131 words for executable code.
   Procedure VDP$WINIT requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:49   

 Object Unit name= VDP$WINIT                                  File name= VDP$WINDOWS.:VDA5TOU
 UTS= JUL 04 '97 11:38:23.36 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    32     40  VDP$WINIT
    2   DCB   even  none     0      0  M$6E
    3   DCB   even  none     0      0  M$ME
    4  RoData even  UTS      1      1  VDP$WINIT
    5   Proc  even  none   131    203  VDP$WINIT
    6  RoData even  none     1      1  VDP$WINIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes    yes     yes      Std        0  VDP$WINIT

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  VDP_NODE_DESC                      1      6  VD_IBEX_WINDOW
    1      7  VD_TOP_LINE
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:50   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 VDG$MONERR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$6E                                  M$ME
     VD_SCREEN_HEIGHT                      VD_SCREEN_WIDTH                       VD_EDITING_HEIGHT
     VD_COMMAND_WINDOW$                    VD_$SCROLL                            VD_ORIGINAL_TRMCTL
     VD_ORIGINAL_TAB                       B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:51   


      298        1        /*T***********************************************************/
      299        2        /*T*                                                         */
      300        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      301        4        /*T*                                                         */
      302        5        /*T***********************************************************/
      303        6
      304        7        /*D* VDP$WINIT
      305        8            PARAMETERS:
      306        9                None.
      307       10            INPUT:
      308       11                None.
      309       12            OUTPUT:
      310       13                VD_SCREEN_HEIGHT will contain the height in lines of the screen 6Edit
      311       14                    has available for use.
      312       15                VD_SCREEN_WIDTH will contain the width in characters of the screen
      313       16                    6Edit has available for use.
      314       17                VD_ORIGINAL_TRMCTL and _TAB will contain the values
      315       18                    the user is currently running under for these parameter blocks.
      316       19            DESCRIPTION:
      317       20                If we're running in any mode except interactive, set VD_SCREEN_HEIGHT
      318       21                    to 0; otherwise set it to the height of UC01 or, if M$6E is set,
      319       22                    to the height of the M$6E window.
      320       23                Get the TRMCTL, EDTCTL, and TAB parameters from the FEP, and save
      321       24                    them for later.  VDP$WTERMINATE will restore the user's environment
      322       25                    using these saved values.
      323       26        */
      324       27
      325       28        VDP$WINIT: PROC ALTRET;

     28  5 000000   000000 700200 xent  VDP$WINIT    TSX0  ! X66_AUTO_0
         5 000001   000006 000000                    ZERO    6,0

      326       29
      327       30        %INCLUDE VD_MACROS_M;
      328     2245        %INCLUDE CP_6;
      329     2326        %INCLUDE CP_6_SUBS;
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:52   
      330     2866        %INCLUDE B_ERRORS_C;
      331     3992        %INCLUDE B$JIT;
      332     4282
      333     4283
      334     4284    1   DCL VDG$MONERR          ENTRY     ALTRET;
      335     4285
      336     4286
      337     4287        %VD$NODE_DESC (NAME=VDP_NODE_DESC, STCLASS="STATIC SYMDEF");
      338     4329
      339     4330    1   DCL M$6E DCB;
      340     4331    1   DCL M$ME DCB;
      341     4332    1   DCL VD_SCREEN_HEIGHT SBIN SYMREF;
      342     4333    1   DCL VD_SCREEN_WIDTH SBIN SYMREF;
      343     4334    1   DCL VD_IBEX_WINDOW SBIN STATIC SYMDEF INIT(1);
      344     4335    1   DCL VD_TOP_LINE SBIN STATIC SYMDEF INIT(1);
      345     4336    1   DCL VD_EDITING_HEIGHT SBIN SYMREF;
      346     4337    1   DCL VD_COMMAND_WINDOW$ PTR SYMREF;
      347     4338        %VD$NUMBER (NAME = VD_$SCROLL, STCLASS = SYMREF);
      348     4383        %VLP_TRMCTL (FPTN=VD_ORIGINAL_TRMCTL, STCLASS=SYMREF);
      349     4423        %VLP_TAB (FPTN=VD_ORIGINAL_TAB, STCLASS=SYMREF);
      350     4437    1   DCL B$JIT$ PTR SYMREF;
      351     4438
      352     4439        %VD$FILE_NODE (NAME=WINDOW$NODE, STCLASS="BASED(VD_COMMAND_WINDOW$)");
      353     4532        %VD$WINDOW_SPEC (NAME=WINDOW$SPEC, STCLASS="BASED(WINDOW_SPEC$)");
      354     4598
      355     4599    1   DCL WINDOW_SPEC$ PTR;
      356     4600
      357     4601        %FPT_TRMCTL (TRMCTL=VD_ORIGINAL_TRMCTL);
      358     4628        %FPT_TRMCTL (FPTN=FPT_TRMCTL_WINDOW, TRMCTL=VLP_WINDOW_TRMCTL, VLPTYPE=WINDOW);
      359     4655        %VLP_WINDOW (FPTN=VLP_WINDOW_TRMCTL);
      360     4699        %F$DCB (DCBN=F$DCB, STCLASS=BASED);
      361     4756        %VLP_TAB (FPTN=VLP$TAB, STCLASS=BASED);
      362     4770
      363     4771
      364     4772
      365     4773    1           VDP_NODE_DESC = %CLEAR;

PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:53   
   4773  5 000002   000000 100400                    MLR     fill='000'O
         5 000003   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         5 000004   000000 000030 1                  ADSC9   VDP_NODE_DESC            cn=0,n=24

      366     4774    1           VLP_WINDOW_TRMCTL = %CLEAR;

   4774  5 000005   000000 100400                    MLR     fill='000'O
         5 000006   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         5 000007   000030 000040 1                  ADSC9   VLP_WINDOW_TRMCTL        cn=0,n=32

      367     4775
      368     4776    2           IF B$JIT.MODE ~= %M_INT# THEN DO;

   4776  5 000010   000000 470400 xsym               LDP0    B$JIT$
         5 000011   000000 236100                    LDQ     0,,PR0
         5 000012   740000 376003                    ANQ     -16384,DU
         5 000013   140000 116003                    CMPQ    49152,DU
         5 000014   000022 600000 5                  TZE     s:4782

      369     4777    2              VD_ORIGINAL_TRMCTL = %CLEAR;

   4777  5 000015   000000 100400                    MLR     fill='000'O
         5 000016   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         5 000017   000000 000020 xsym               ADSC9   VD_ORIGINAL_TRMCTL       cn=0,n=16

      370     4778    2              VD_IBEX_WINDOW = 0;

   4778  5 000020   000006 450000 1                  STZ     VD_IBEX_WINDOW

      371     4779    2              END;

   4779  5 000021   000070 710000 5                  TRA     s:4807

      372     4780
      373     4781    2           ELSE DO;

      374     4782    2              CALL M$GTRMCTL (FPT_TRMCTL)
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:54   

   4782  5 000022   000010 630400 1                  EPPR0   FPT_TRMCTL
         5 000023   560001 713400                    CLIMB   alt,+57345
         5 000024   401000 401760                    pmme    nvectors=3
         5 000025   000027 702000 5                  TSX2    MONERR
         5 000026   000033 710000 5                  TRA     s:4790

      375     4783    3              WHENALTRETURN DO;

      376     4784    3   MONERR:       ;

   4784  5 000027                       MONERR       null
      377     4785    3                 CALL VDG$MONERR;

   4785  5 000027   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000030   000000 701000 xent               TSX1    VDG$MONERR
         5 000031   000000 011000                    NOP     0

      378     4786    3   MONERR1:      ;

   4786  5 000032                       MONERR1      null
      379     4787    3                 ALTRETURN;

   4787  5 000032   000000 702200 xent               TSX2  ! X66_AALT

      380     4788    3                 END;
      381     4789
      382     4790    2              VD_ORIGINAL_TAB = DCBADDR(DCBNUM(M$UC))->F$DCB.TAB$->VLP$TAB;

   4790  5 000033   000000 236007 xsym               LDQ     M$UC,DL
         5 000034   000000 470400 6                  LDP0    0
         5 000035   000000 471500                    LDP1    0,,PR0
         5 000036   100000 473506                    LDP3    0,QL,PR1
         5 000037   300047 474500                    LDP4    39,,PR3
         5 000040   000000 100500                    MLR     fill='000'O
         5 000041   400000 000040                    ADSC9   0,,PR4                   cn=0,n=32
         5 000042   000000 000040 xsym               ADSC9   VD_ORIGINAL_TAB          cn=0,n=32
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:55   

      383     4791
      384     4792    3              IF DCBADDR (DCBNUM (M$6E)) -> F$DCB.RES# ~= 'ME' THEN DO;

   4792  5 000043   000000 236007 xsym               LDQ     M$6E,DL
         5 000044   100000 473506                    LDP3    0,QL,PR1
         5 000045   040000 106500                    CMPC    fill='040'O
         5 000046   300026 000004                    ADSC9   22,,PR3                  cn=0,n=4
         5 000047   000000 000002 4                  ADSC9   0                        cn=0,n=2
         5 000050   000055 600000 5                  TZE     s:4798

      385     4793                   /* Use the RES set by user in M$6E */
      386     4794    3                 FPT_TRMCTL_WINDOW.V.DCB# = DCBNUM (M$6E);

   4794  5 000051   000000 236007 xsym               LDQ     M$6E,DL
         5 000052   000000 620006                    EAX0    0,QL
         5 000053   000026 740000 1                  STX0    FPT_TRMCTL_WINDOW+6

      387     4795    3                 VD_IBEX_WINDOW = 0;

   4795  5 000054   000006 450000 1                  STZ     VD_IBEX_WINDOW

      388     4796    3                 END;

      389     4797
      390     4798    2              IF NOT VD_ORIGINAL_TRMCTL.EDITOVR#

   4798  5 000055   000000 236000 xsym               LDQ     VD_ORIGINAL_TRMCTL
         5 000056   000003 316007                    CANQ    3,DL
         5 000057   000062 600000 5                  TZE     s:4800
         5 000060   000014 316007                    CANQ    12,DL
         5 000061   000064 601000 5                  TNZ     s:4804

      391     4799    3                OR NOT VD_ORIGINAL_TRMCTL.RETYPOVR# THEN DO;

      392     4800    3                 VD_IBEX_WINDOW = 0;

PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:56   
   4800  5 000062   000006 450000 1                  STZ     VD_IBEX_WINDOW

      393     4801    3                 END;

   4801  5 000063   000070 710000 5                  TRA     s:4807

      394     4802
      395     4803    2              ELSE
      396     4804    2                 CALL M$GTRMCTL (FPT_TRMCTL_WINDOW) ALTRET (MONERR);

   4804  5 000064   000020 630400 1                  EPPR0   FPT_TRMCTL_WINDOW
         5 000065   560001 713400                    CLIMB   alt,+57345
         5 000066   401000 401760                    pmme    nvectors=3
         5 000067   000027 702000 5                  TSX2    MONERR

      397     4805    2              END;

      398     4806
      399     4807    1           VD_$SCROLL.V# = BITBIN(VD_ORIGINAL_TRMCTL.SCROLL#)/2;

   4807  5 000070   000001 236000 xsym               LDQ     VD_ORIGINAL_TRMCTL+1
         5 000071   000041 772000                    QRL     33
         5 000072   000003 376007                    ANQ     3,DL
         5 000073   000001 772000                    QRL     1
         5 000074   000003 756000 xsym               STQ     VD_$SCROLL+3

      400     4808
      401     4809    1           VD_SCREEN_HEIGHT = VLP_WINDOW_TRMCTL.LENGTH#;

   4809  5 000075   000031 235000 1                  LDA     VLP_WINDOW_TRMCTL+1
         5 000076   000022 731000                    ARS     18
         5 000077   000000 755000 xsym               STA     VD_SCREEN_HEIGHT

      402     4810    1           VD_EDITING_HEIGHT = VD_SCREEN_HEIGHT - VD_IBEX_WINDOW;

   4810  5 000100   000000 236000 xsym               LDQ     VD_SCREEN_HEIGHT
         5 000101   000006 136000 1                  SBLQ    VD_IBEX_WINDOW
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:57   
         5 000102   000000 756000 xsym               STQ     VD_EDITING_HEIGHT

      403     4811    1           VD_TOP_LINE = VLP_WINDOW_TRMCTL.ORG_PST.LINE;

   4811  5 000103   000032 236000 1                  LDQ     VLP_WINDOW_TRMCTL+2
         5 000104   000022 772000                    QRL     18
         5 000105   000777 376007                    ANQ     511,DL
         5 000106   000007 756000 1                  STQ     VD_TOP_LINE

      404     4812    2           IF VD_COMMAND_WINDOW$ ~= ADDR(NIL) THEN DO;

   4812  5 000107   000000 236000 xsym               LDQ     VD_COMMAND_WINDOW$
         5 000110   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000111   000122 600000 5                  TZE     s:4817

      405     4813    2              WINDOW_SPEC$ = WINDOW$NODE.DESC.SPEC.V$;

   4813  5 000112   000000 470400 xsym               LDP0    VD_COMMAND_WINDOW$
         5 000113   000007 236100                    LDQ     7,,PR0
         5 000114   200003 756100                    STQ     WINDOW_SPEC$,,AUTO

      406     4814    2              WINDOW$SPEC.COORDS.LINE# = VD_TOP_LINE;

   4814  5 000115   200003 471500                    LDP1    WINDOW_SPEC$,,AUTO
         5 000116   000007 235000 1                  LDA     VD_TOP_LINE
         5 000117   100003 755100                    STA     3,,PR1

      407     4815    2              WINDOW$SPEC.COORDS.HEIGHT# = VD_EDITING_HEIGHT;

   4815  5 000120   000000 235000 xsym               LDA     VD_EDITING_HEIGHT
         5 000121   100005 755100                    STA     5,,PR1

      408     4816    2              END;

      409     4817    1           IF VLP_WINDOW_TRMCTL.TOPBRDR# = %TRUE THEN

   4817  5 000122   000033 236000 1                  LDQ     VLP_WINDOW_TRMCTL+3
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:58   
         5 000123   300000 376003                    ANQ     98304,DU
         5 000124   200000 116003                    CMPQ    65536,DU
         5 000125   000135 601000 5                  TNZ     s:4819

      410     4818    1              VD_SCREEN_HEIGHT = VD_SCREEN_HEIGHT - VLP_WINDOW_TRMCTL.HBRDRSIZ#;

   4818  5 000126   000033 236000 1                  LDQ     VLP_WINDOW_TRMCTL+3
         5 000127   000033 772000                    QRL     27
         5 000130   000017 376007                    ANQ     15,DL
         5 000131   200004 756100                    STQ     WINDOW_SPEC$+1,,AUTO
         5 000132   000000 236000 xsym               LDQ     VD_SCREEN_HEIGHT
         5 000133   200004 136100                    SBLQ    WINDOW_SPEC$+1,,AUTO
         5 000134   000000 756000 xsym               STQ     VD_SCREEN_HEIGHT

      411     4819    1           IF VLP_WINDOW_TRMCTL.BTMBRDR# = %TRUE THEN

   4819  5 000135   000033 236000 1                  LDQ     VLP_WINDOW_TRMCTL+3
         5 000136   060000 376003                    ANQ     24576,DU
         5 000137   040000 116003                    CMPQ    16384,DU
         5 000140   000150 601000 5                  TNZ     s:4822

      412     4820    1              VD_SCREEN_HEIGHT = VD_SCREEN_HEIGHT - VLP_WINDOW_TRMCTL.HBRDRSIZ#;

   4820  5 000141   000033 236000 1                  LDQ     VLP_WINDOW_TRMCTL+3
         5 000142   000033 772000                    QRL     27
         5 000143   000017 376007                    ANQ     15,DL
         5 000144   200004 756100                    STQ     WINDOW_SPEC$+1,,AUTO
         5 000145   000000 236000 xsym               LDQ     VD_SCREEN_HEIGHT
         5 000146   200004 136100                    SBLQ    WINDOW_SPEC$+1,,AUTO
         5 000147   000000 756000 xsym               STQ     VD_SCREEN_HEIGHT

      413     4821
      414     4822    1           VD_SCREEN_WIDTH = VLP_WINDOW_TRMCTL.WIDTH#;

   4822  5 000150   000031 236000 1                  LDQ     VLP_WINDOW_TRMCTL+1
         5 000151   000022 736000                    QLS     18
         5 000152   000022 732000                    QRS     18
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:59   
         5 000153   000000 756000 xsym               STQ     VD_SCREEN_WIDTH

      415     4823    1           IF VLP_WINDOW_TRMCTL.LFTBRDR# = %TRUE THEN

   4823  5 000154   000033 236000 1                  LDQ     VLP_WINDOW_TRMCTL+3
         5 000155   300000 376007                    ANQ     98304,DL
         5 000156   200000 116007                    CMPQ    65536,DL
         5 000157   000167 601000 5                  TNZ     s:4825

      416     4824    1              VD_SCREEN_WIDTH = VD_SCREEN_WIDTH - VLP_WINDOW_TRMCTL.VBRDRSIZ#;

   4824  5 000160   000033 236000 1                  LDQ     VLP_WINDOW_TRMCTL+3
         5 000161   000011 772000                    QRL     9
         5 000162   000017 376007                    ANQ     15,DL
         5 000163   200004 756100                    STQ     WINDOW_SPEC$+1,,AUTO
         5 000164   000000 236000 xsym               LDQ     VD_SCREEN_WIDTH
         5 000165   200004 136100                    SBLQ    WINDOW_SPEC$+1,,AUTO
         5 000166   000000 756000 xsym               STQ     VD_SCREEN_WIDTH

      417     4825    1           IF VLP_WINDOW_TRMCTL.RHTBRDR# = %TRUE THEN

   4825  5 000167   000033 236000 1                  LDQ     VLP_WINDOW_TRMCTL+3
         5 000170   060000 376007                    ANQ     24576,DL
         5 000171   040000 116007                    CMPQ    16384,DL
         5 000172   000202 601000 5                  TNZ     INIT_DONE

      418     4826    1              VD_SCREEN_WIDTH = VD_SCREEN_WIDTH - VLP_WINDOW_TRMCTL.VBRDRSIZ#;

   4826  5 000173   000033 236000 1                  LDQ     VLP_WINDOW_TRMCTL+3
         5 000174   000011 772000                    QRL     9
         5 000175   000017 376007                    ANQ     15,DL
         5 000176   200004 756100                    STQ     WINDOW_SPEC$+1,,AUTO
         5 000177   000000 236000 xsym               LDQ     VD_SCREEN_WIDTH
         5 000200   200004 136100                    SBLQ    WINDOW_SPEC$+1,,AUTO
         5 000201   000000 756000 xsym               STQ     VD_SCREEN_WIDTH

      419     4827
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:60   
      420     4828    1   INIT_DONE:
      421     4829    1           RETURN;

   4829  5 000202   000000 702200 xent  INIT_DONE    TSX2  ! X66_ARET
      422     4830
      423     4831    1   END VDP$WINIT;
      424     4832        %EOD;

PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:61   
--  Include file information  --

   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WINIT.
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:62   

 **** Variables and constants ****

  ****  Section 001  Data  VDP$WINIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/d STRC(288)   r     1 FPT_TRMCTL                20-0-0/d STRC(288)   r     1 FPT_TRMCTL_WINDOW
     0-0-0/w STRC(216)   r     1 VDP_NODE_DESC              6-0-0/w SBIN        r     1 VD_IBEX_WINDOW
     7-0-0/w SBIN        r     1 VD_TOP_LINE               30-0-0/d STRC(288)   r     1 VLP_WINDOW_TRMCTL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 WINDOW_SPEC$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w STRC(144)   r     1 VD_$SCROLL
     0-0-0/w PTR         r     1 VD_COMMAND_WINDOW$         0-0-0/w SBIN        r     1 VD_EDITING_HEIGHT
     0-0-0/w STRC(288)   r     1 VD_ORIGINAL_TAB            0-0-0/d STRC(144)   r     1 VD_ORIGINAL_TRMCTL
     0-0-0/w SBIN        r     1 VD_SCREEN_HEIGHT           0-0-0/w SBIN        r     1 VD_SCREEN_WIDTH

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 M$6E                       0-0-0N  NULL        r     1 M$UC
     0-0-0/w STRC(288)   r     1 VLP$TAB                    0-0-0/w STRC(468)   r     1 WINDOW$NODE
     0-0-0/w STRC(900)   r     1 WINDOW$SPEC
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:63   


   Procedure VDP$WINIT requires 131 words for executable code.
   Procedure VDP$WINIT requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:64   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:65   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      4100**DCL      4100--REDEF
B$JIT.ERR.MID
      4007**DCL      4007--REDEF
B$JIT.JRESPEAK
      4168**DCL      4169--REDEF
B$JIT.MODE
      4001**DCL      4776>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
      4277**DCL      4277--REDEF    4278--REDEF
B$JIT.PNR
      4181**DCL      4181--REDEF
B$JIT.TSLINE
      4275**DCL      4276--REDEF
B$JIT$
      4437**DCL      4001--IMP-PTR  4776>>IF
F$DCB.ACTPOS
      4732**DCL      4732--REDEF
F$DCB.ARS#
      4706**DCL      4706--REDEF
F$DCB.ATTR
      4725**DCL      4726--REDEF
F$DCB.BORROW
      4740**DCL      4740--REDEF    4740--REDEF    4740--REDEF
F$DCB.DCBNAME.L
      4754**DCL      4754--IMP-SIZ
F$DCB.EOMCHAR#
      4710**DCL      4710--REDEF
F$DCB.FLDID
      4735**DCL      4735--REDEF
F$DCB.FORM$
      4729**DCL      4729--REDEF
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:66   
F$DCB.FSECT
      4745**DCL      4745--REDEF
F$DCB.FSN#
      4722**DCL      4722--REDEF    4722--REDEF    4723--REDEF
F$DCB.HEADER$
      4728**DCL      4728--REDEF
F$DCB.IXTNSIZE#
      4726**DCL      4726--REDEF
F$DCB.LASTSTA$
      4715**DCL      4715--REDEF
F$DCB.LVL
      4741**DCL      4741--REDEF
F$DCB.NAME#.C
      4716**DCL      4716--REDEF
F$DCB.NOEOF
      4738**DCL      4738--REDEF
F$DCB.NRECS#
      4727**DCL      4727--REDEF
F$DCB.NRECX
      4746**DCL      4746--REDEF
F$DCB.OHDR
      4738**DCL      4738--REDEF
F$DCB.ORG#
      4721**DCL      4721--REDEF
F$DCB.PRECNO
      4744**DCL      4744--REDEF
F$DCB.RCSZ
      4750**DCL      4750--REDEF
F$DCB.RES#
      4717**DCL      4717--REDEF    4792>>IF
F$DCB.SETX
      4729**DCL      4729--REDEF
F$DCB.TAB$
      4729**DCL      4729--REDEF    4790>>ASSIGN
F$DCB.TDA
      4743**DCL      4744--REDEF
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:67   
F$DCB.WSN#
      4717**DCL      4717--REDEF
FPT_TRMCTL
      4617**DCL      4782<>CALL
FPT_TRMCTL.V
      4625**DCL      4619--DCLINIT
FPT_TRMCTL_WINDOW
      4644**DCL      4804<>CALL
FPT_TRMCTL_WINDOW.V
      4652**DCL      4646--DCLINIT
FPT_TRMCTL_WINDOW.V.DCB#
      4652**DCL      4794<<ASSIGN
M$6E
      4330**DCL      4792--IF       4794>>ASSIGN
M$GTRMCTL
      2278**DCL-ENT  4782--CALL     4804--CALL
M$UC
      2278**DCL      4790--ASSIGN
MONERR
      4784**LABEL    4804--CALLALT
VDG$MONERR
      4284**DCL-ENT  4785--CALL
VDP_NODE_DESC
      4295**DCL      4773<<ASSIGN
VD_$SCROLL.V#
      4380**DCL      4807<<ASSIGN
VD_COMMAND_WINDOW$
      4337**DCL      4447--IMP-PTR  4812>>IF       4813>>ASSIGN
VD_EDITING_HEIGHT
      4336**DCL      4810<<ASSIGN   4815>>ASSIGN
VD_IBEX_WINDOW
      4334**DCL      4778<<ASSIGN   4795<<ASSIGN   4800<<ASSIGN   4810>>ASSIGN
VD_ORIGINAL_TAB
      4434**DCL      4790<<ASSIGN
VD_ORIGINAL_TRMCTL
      4400**DCL      4623--DCLINIT  4777<<ASSIGN
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:68   
VD_ORIGINAL_TRMCTL.BREAKCOUNT
      4412**DCL      4412--REDEF
VD_ORIGINAL_TRMCTL.EDITOVR#
      4407**DCL      4798>>IF
VD_ORIGINAL_TRMCTL.RETYPOVR#
      4407**DCL      4798>>IF
VD_ORIGINAL_TRMCTL.SCROLL#
      4408**DCL      4807>>ASSIGN
VD_SCREEN_HEIGHT
      4332**DCL      4809<<ASSIGN   4810>>ASSIGN   4818<<ASSIGN   4818>>ASSIGN   4820<<ASSIGN   4820>>ASSIGN
VD_SCREEN_WIDTH
      4333**DCL      4822<<ASSIGN   4824<<ASSIGN   4824>>ASSIGN   4826<<ASSIGN   4826>>ASSIGN
VD_TOP_LINE
      4335**DCL      4811<<ASSIGN   4814>>ASSIGN
VLP$TAB
      4767**DCL      4790>>ASSIGN
VLP_WINDOW_TRMCTL
      4673**DCL      4650--DCLINIT  4774<<ASSIGN
VLP_WINDOW_TRMCTL.BTMBRDR#
      4689**DCL      4819>>IF
VLP_WINDOW_TRMCTL.FWINDOW#
      4673**DCL      4673--REDEF    4674--REDEF
VLP_WINDOW_TRMCTL.HBRDRSIZ#
      4690**DCL      4818>>ASSIGN   4820>>ASSIGN
VLP_WINDOW_TRMCTL.LENGTH#
      4687**DCL      4809>>ASSIGN
VLP_WINDOW_TRMCTL.LFTBRDR#
      4691**DCL      4823>>IF
VLP_WINDOW_TRMCTL.ORG_PST.LINE
      4688**DCL      4811>>ASSIGN
VLP_WINDOW_TRMCTL.RHTBRDR#
      4691**DCL      4825>>IF
VLP_WINDOW_TRMCTL.TOPBRDR#
      4689**DCL      4817>>IF
VLP_WINDOW_TRMCTL.VBRDRSIZ#
      4691**DCL      4824>>ASSIGN   4826>>ASSIGN
PL6.E3A0      #002=VDP$WINIT File=VDP$WINDOWS.:VDA5TSI                           FRI 07/04/97 11:38 Page:69   
VLP_WINDOW_TRMCTL.WIDTH#
      4687**DCL      4822>>ASSIGN
WINDOW$NODE.DESC.SPEC.V$
      4526**DCL      4813>>ASSIGN
WINDOW$SPEC.COORDS.HEIGHT#
      4567**DCL      4815<<ASSIGN
WINDOW$SPEC.COORDS.LINE#
      4566**DCL      4814<<ASSIGN
WINDOW_SPEC$
      4599**DCL      4540--IMP-PTR  4813<<ASSIGN   4814>>ASSIGN   4815>>ASSIGN

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:70   
      425        1        /*T***********************************************************/
      426        2        /*T*                                                         */
      427        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      428        4        /*T*                                                         */
      429        5        /*T***********************************************************/
      430        6
      431        7        /*D* NAME: VDP$WNEW
      432        8            PARAMETERS:
      433        9                NEW_WINDOW_SPEC - VD$WINDOW_SPEC for the window being created:
      434       10                    .DCB# is either:
      435       11                        o 0 - We'll allocate a DCB for the window;
      436       12                        o a DCB number - We'll use that DCB for the window.  The DCB
      437       13                            may be open (either ORG=TERMINAL or SE) or closed.
      438       14                            If open, UOPT0 is set if the DCB is open in 2Dim form,
      439       15                            and is reset if the DCB is open in 1Dim form.
      440       16                    .COORDS.HEIGHT# and .HEIGHT_PERCENT must indicate how high the
      441       17                        new window is to be.  If .HEIGHT_PERCENT is set, .HEIGHT# is
      442       18                        the percentage of the FROM_WINDOW_SPEC's window height which
      443       19                        is to be given to the new window.
      444       20                    .COMMAND must be set if we're creating the command window.
      445       21                    .OPERAND.EDIT_BLOCK$ - If not NIL, then this editing window is to
      446       22                        be filled in immediately with data from the specified block.
      447       23                FROM_WINDOW_SPEC - Optional VD$WINDOW_SPEC for an existing window from
      448       24                    which the new window is to be created.  The new window will be
      449       25                    created by taking lines from the bottom of the "from-window".
      450       26                    FROM_WINDOW_SPEC is only required when creating new editing
      451       27                    windows; if given, it must have:
      452       28                        .COORDS.HEIGHT must specify the number of lines occupied by the
      453       29                            "from-window".
      454       30            INPUT:
      455       31                VD_$WI_BORDER is a VD$BUFFER which is either empty, or contains the
      456       32                    single character the user wants as a border between editing windows.
      457       33                VD_$SCREEN is a VD$NUMBER whose .V# is the number of lines of the
      458       34                    screen which 6Edit may use.  This also indicates whether the
      459       35                    user wants us to screen-edit or not.
      460       36        *N*     Following VD_2DIM temporarily de-implemented due to star 25801:
      461       37        *N*     VD_2DIM is a bit-flag telling us if we're really s'posed to open the
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:71   
      462       38        *N*         new window in screen-editing (2-dimensional) mode or not.
      463       39                VD_SCREEN_HEIGHT is the physical number of lines on the terminal screen.
      464       40                    This may be larger than VD_$SCREEN.V#.
      465       41            OUTPUT:
      466       42                NEW_WINDOW_SPEC will be modified:
      467       43                    .DCB# will specify the DCB which has been opened to the window.
      468       44                    .COORDS will specify the exact location and size of the window.
      469       45                    .RECORD_SET$, if this is an editing window, will point to the
      470       46                        VD$RECORD_SET for this window.
      471       47                FROM_WINDOW_SPEC.COORDS.HEIGHT# will have subtracted from it the number
      472       48                    of lines now occupied by the new window.
      473       49            DESCRIPTION:
      474       50                This routine is used in two distinct situations:
      475       51                1) The user requests (explicitly or implicitly) that a new window be
      476       52                    created.  The window is new to both 6Edit and to the FEP.
      477       53                    NEW_WINDOW_SPEC has no DCB or record-set yet, and .COORDS only
      478       54                    has a value for height.
      479       55                2) The user requests a switch from 1Dim to 2Dim or vice versa.
      480       56                    VDP$WCHANGE will be called to "change the window's height", but it
      481       57                    will detect the 1Dim-to-2Dim (or vice versa) switch and will
      482       58                    call VDP$WNEW to both close the window in its current mode and
      483       59                    to re-open it in the new mode.  In this case, VD_$SCREEN.V#
      484       60                    indicates the mode the user wants to switch to, and
      485       61                    NEW_WINDOW_SPEC.DCB#'s .UOPT#(0) indicates the mode
      486       62                    the window is currently open in:  UOPT(0)=FALSE => 1Dim;
      487       63                    UOPT(0)=TRUE => 2Dim.
      488       64
      489       65                There are 3 cases here:
      490       66                All cases:
      491       67                    If NEW_WINDOW_SPEC is the command window, set its .DCB# to M$ME.
      492       68                        We do this now (before the "is it open" check below), because
      493       69                        for some reason at start-up M$ME typically is open.
      494       70                    If NEW_WINDOW_SPEC has a DCB and it's open, call VDP$WREMOVE to
      495       71                        close the DCB and possibly free the window's record set.
      496       72                    Allocate a DCB if NEW_WINDOW_SPEC doesn't currently have one.
      497       73
      498       74                1-Dim:
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:72   
      499       75                    Open the window's DCB to ME, and set its EOMs.
      500       76                    Clear NEW_WINDOW_SPEC.COORDS.
      501       77
      502       78                2-Dim command window:
      503       79                    Determine how to open the window:
      504       80                        If M$6E is set, don't create a new window for the command
      505       81                            window, just use the M$6E window -- open to M$6E's .RES#.
      506       82                        If M$6E isn't set, create a new window for the command window
      507       83                            from UC01, and open to a new .RES# ('UC<M$ME's dcb#>').
      508       84                    Open the window's DCB, and set its EOMs, and clear it.
      509       85
      510       86                2-Dim editing window:
      511       87                    Compute NRECS and SPARE values for the editing window, based on the
      512       88                        screen height.
      513       89                    Open the DCB to .RES# 'UC<dcb#>', with "from-window" being
      514       90                        FROM_WINDOW_SPEC's .RES#.
      515       91                    Set the EOMs for the window.
      516       92                    Allocate a record set for the window.
      517       93                    If NEW_WINDOW_SPEC has an EditBlock, call VDP$WREAD to fill the
      518       94                        window from the EditBlock.
      519       95                For either 2-Dim case:
      520       96                    Read the coordinates and size of the new window from the FEP,
      521       97                        and fill these values into NEW_WINDOW_SPEC.COORDS.
      522       98                    Adjust FROM_WINDOW_SPEC.COORDS for the space taken away from it
      523       99                        by the new window.
      524      100        */
      525      101
      526      102        VDP$WNEW: PROC (NEW_WINDOW_SPEC, FROM_WINDOW_SPEC) ALTRET;
      527      103
      528      104        %INCLUDE VD_MACROS_M;
      529     2319        %INCLUDE CP_6;
      530     2400        %INCLUDE CP_6_SUBS;
      531     2940        %INCLUDE G_LCP6_E;
      532     3198        %INCLUDE NK_VFC_C;
      533     3272        %INCLUDE B$JIT;
      534     3562
      535     3563
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:73   
      536     3564        %VD$WINDOW_SPEC (NAME=NEW_WINDOW_SPEC, STCLASS=PARAM);
      537     3630        %VD$WINDOW_SPEC (NAME=FROM_WINDOW_SPEC, STCLASS=PARAM);
      538     3696
      539     3697
      540     3698    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
      541     3699    1   DCL VDG$OALLOC_DCB      ENTRY (1) ALTRET;
      542     3700    1   DCL VDP$WREMOVE         ENTRY (1) ALTRET;
      543     3701    1   DCL VDP$WREAD           ENTRY (3) ALTRET;
      544     3702    1   DCL VDG$ERASE_COMMAND_WINDOW ENTRY ALTRET;
      545     3703    1   DCL VDG$ESCREECH        ENTRY (3);
      546     3704    1   DCL VDG$MONERR          ENTRY     ALTRET;
      547     3705    1   DCL VDG$MPRES_WNEW      ENTRY (2);
      548     3706    1   DCL VDG$MPRES_FEPOPEN   ENTRY (4);
      549     3707    1   DCL VDG$MPRES_WNEW_RETURN ENTRY (2);
      550     3708
      551     3709
      552     3710
      553     3711    1   DCL M$ME DCB;
      554     3712    1   DCL M$6E DCB;
      555     3713    1   DCL M$LO DCB;
      556     3714        %VD$BUFFER (NAME=VD_$WI_BORDER, STCLASS=SYMREF);
      557     3772        %VD$NUMBER (NAME=VD_$SCREEN, STCLASS=SYMREF);
      558     3817        %VD$NUMBER (NAME=VD_$$MON_PRES, STCLASS=SYMREF);
      559     3862    1   DCL VD_SCREEN_HEIGHT UBIN SYMREF;
      560     3863    1   DCL VD_2DIM BIT(1) ALIGNED SYMREF;
      561     3864    1   DCL B$JIT$ PTR SYMREF;
      562     3865
      563     3866
      564     3867
      565     3868
      566     3869        %FPT_OPEN (FPTN=CONST_FPT_OPEN, STCLASS=CONSTANT, SCRUB=YES, ORG=TERMINAL,
      567     3870                   DVFC=%VFC_TRANSITION0, UOPT0=NO);
      568     3979        %FPT_EOM (FPTN=CONST_FPT_EOM, STCLASS=CONSTANT);
      569     4009        %FPT_TRMCTL (FPTN=CONST_FPT_TRMCTL, STCLASS=CONSTANT);
      570     4036
      571     4037        %VLP_WINDOW (FPTN=CONST_VLP_WINDOW, STCLASS=CONSTANT, FWINDOW='UC01',
      572     4038            WIDTH=.99, POSITION=BOTTOM, REMOVABLE=YES, MINLENGTH=0,
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:74   
      573     4039            TOPBRDR=NO, BTMBRDR=NO, LFTBRDR=NO, RHTBRDR=NO);
      574     4083        %VLP_TRMCTL (FPTN=VLP_TRMCTL_PAGEHALT_OFF, STCLASS=CONSTANT, PAGEHALT=NO);
      575     4123        %VLP_TRMCTL (FPTN=VLP_TRMCTL_OUTPUTDISCARD_OFF, STCLASS=CONSTANT,
      576     4124            OUTPUTDISCARD=NO);
      577     4164        %VLP_TRMCTL (FPTN=VD_ORIGINAL_TRMCTL, STCLASS=SYMREF);
      578     4204
      579     4205        /*
      580     4206        *   For 1D, leave all normal activations around, additionally activate on:
      581     4207        *     1)  EOM_COMMAND (<CTRL-C> = ETX)
      582     4208        *     2)  EOM_NEXT_ED_WINDOW (<CTRL-N> = SO)
      583     4209        *     3)  EOM_NEXT_RECORD (<CTRL-J> = LF -- already in standard EOM set)
      584     4210        *     4)  EOM_PREV_RECORD (<CTRL-U> = NAK)
      585     4211        *     5)  EOM_SPLIT_RECORD (<CTRL-V> = SYN)
      586     4212        */
      587     4213        %VLP_EOMTABLE (FPTN=VLP_EOMTABLE_1D, STCLASS=CONSTANT,
      588     4214                        VALUES="24, 46, 6, 47, 0*12" /* ready */);
      589     4233
      590     4234        /*
      591     4235        *   For 2D command window, leave all normal activations around, additionally
      592     4236        *   activate on:
      593     4237        *     1)  EOM_COMMAND (<CTRL-C> = ETX)
      594     4238        *     2)  EOM_NEXT_ED_WINDOW (<CTRL-N> = SO)
      595     4239        */
      596     4240        %VLP_EOMTABLE (FPTN=VLP_EOMTABLE_2D_COMMAND_WINDOW,
      597     4241                        VALUES="24, 46, 0, 47, 0*12" /* set */);
      598     4260
      599     4261        /*
      600     4262        *   For 2D editing windows, reset all normal activations, only activate on:
      601     4263        *     1)  EOM_COMMAND (<CTRL-C> = ETX)
      602     4264        *     2)  EOM_NEXT_ED_WINDOW (<CTRL-N> = SO)
      603     4265        */
      604     4266        %VLP_EOMTABLE (FPTN=VLP_EOMTABLE_2D_EDITING_WINDOW,
      605     4267                        VALUES="16, 2, 0, 0, 0*12" /* hike */);
      606     4286
      607     4287
      608     4288        %FPT_OPEN (STCLASS=AUTO, PFMT=VECTOR);
      609     4397        %FPT_EOM (STCLASS=AUTO);
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:75   
      610     4427        %FPT_TRMCTL (STCLASS=AUTO);
      611     4454        %VLP_WINDOW (STCLASS=AUTO);
      612     4498    1   DCL NRECS SBIN;
      613     4499    1   DCL SINK$ PTR;
      614     4500    1   DCL VD_ERR$ PTR;
      615     4501
      616     4502
      617     4503        %VD$ERR (STCLASS="BASED(VD_ERR$)");
      618     4556        %VD$RECORD_SET;
      619     4634        %F$DCB (DCBN=F$DCB, STCLASS=BASED);
      620     4691
      621     4692
      622     4693
      623     4694    1           IF VD_$$MON_PRES.V# > 0 THEN
      624     4695    1              CALL VDG$MPRES_WNEW (NEW_WINDOW_SPEC, FROM_WINDOW_SPEC);
      625     4696
      626     4697    1           FPT_OPEN = CONST_FPT_OPEN;
      627     4698    1           VBASE(FPT_OPEN.V_) = ADDR(FPT_OPEN.V);
      628     4699    1           FPT_EOM = CONST_FPT_EOM;
      629     4700    1           VBASE(FPT_EOM.V_) = ADDR(FPT_EOM.V);
      630     4701    1           FPT_TRMCTL = CONST_FPT_TRMCTL;
      631     4702    1           VBASE(FPT_TRMCTL.V_) = ADDR(FPT_TRMCTL.V);
      632     4703    1           VLP_WINDOW = CONST_VLP_WINDOW;
      633     4704
      634     4705    1           IF NEW_WINDOW_SPEC.COMMAND AND NEW_WINDOW_SPEC.DCB# = 0 THEN
      635     4706    1              NEW_WINDOW_SPEC.DCB# = DCBNUM(M$ME);
      636     4707
      637     4708    1           IF NEW_WINDOW_SPEC.DCB# ~= 0 THEN
      638     4709    2              IF DCBADDR(NEW_WINDOW_SPEC.DCB#)->F$DCB.FCD# THEN DO;
      639     4710    2                 CALL VDP$WREMOVE (NEW_WINDOW_SPEC)
      640     4711    3                 WHENALTRETURN DO; ALTRETURN; END;
      641     4712    2                 END;
      642     4713
      643     4714    2           IF NEW_WINDOW_SPEC.DCB# = 0 THEN DO;
      644     4715    2              IF NEW_WINDOW_SPEC.COMMAND THEN
      645     4716    2                 NEW_WINDOW_SPEC.DCB# = DCBNUM(M$ME);
      646     4717    2              ELSE
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:76   
      647     4718    2                 CALL VDG$OALLOC_DCB (NEW_WINDOW_SPEC.DCB#)
      648     4719    3                 WHENALTRETURN DO; ALTRETURN; END;
      649     4720    2              END;
      650     4721
      651     4722    1           FPT_OPEN.V.DCB# = NEW_WINDOW_SPEC.DCB#;
      652     4723    1           FPT_EOM.V.DCB# = NEW_WINDOW_SPEC.DCB#;
      653     4724    1           FPT_TRMCTL.V.DCB# = NEW_WINDOW_SPEC.DCB#;
      654     4725
      655     4726    1           IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT THEN
      656     4727        /*N* Following clause temporarily (?) de-implemented due to star 25801:
      657     4728        *N*          OR NOT VD_2DIM THEN
      658     4729        *N*/
      659     4730    2   WNEW_FOR_1D_PRESENTER: DO;
      660     4731    2              IF NOT VD_2DIM THEN FPT_OPEN.V.INITZ.REASSIGN# = %TRUE;
      661     4732        /* Don't trash a reassignment unless we've been windowing some */
      662     4733    2              IF DCBADDR (DCBNUM (M$6E)) -> F$DCB.RES# ~= 'ME' THEN
      663     4734    2                 FPT_OPEN.V.RES# = DCBADDR (DCBNUM (M$6E)) -> F$DCB.RES#;
      664     4735    2              CALL M$OPEN (FPT_OPEN)
      665     4736    3              WHENALTRETURN DO;
      666     4737    3   MONERR:       CALL VDG$MONERR;
      667     4738    3                 ALTRETURN;
      668     4739    3                 END;
      669     4740
      670     4741    3              IF B$JIT.MODE = %M_INT# THEN DO;
      671     4742    3                 FPT_EOM.V.DCB# = DCBNUM(M$UC);
      672     4743    3                 FPT_EOM.EOMTABLE_ = VECTOR(VLP_EOMTABLE_1D);
      673     4744    3                 CALL M$EOM (FPT_EOM) ALTRET (MONERR);
      674     4745    3                 END;
      675     4746
      676     4747    3              IF ADDR(FROM_WINDOW_SPEC) ~= ADDR(NIL) THEN DO;
      677     4748    3                 IF NEW_WINDOW_SPEC.COORDS.LINE# ~= 0 THEN EXIT;
      678     4749        /*
      679     4750           Make height adjustments in case $SCREEN is only temporarily at zero
      680     4751        */
      681     4752    3                 IF FROM_WINDOW_SPEC.COORDS.HEIGHT# <=
      682     4753    3                   NEW_WINDOW_SPEC.COORDS.HEIGHT# THEN
      683     4754    3                    NEW_WINDOW_SPEC.COORDS.HEIGHT# =
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:77   
      684     4755    3                      FROM_WINDOW_SPEC.COORDS.HEIGHT# - 1;
      685     4756    3                 FROM_WINDOW_SPEC.COORDS.HEIGHT# = FROM_WINDOW_SPEC.COORDS.HEIGHT#
      686     4757    3                   - NEW_WINDOW_SPEC.COORDS.HEIGHT#;
      687     4758    3                 NEW_WINDOW_SPEC.COORDS.LINE# = FROM_WINDOW_SPEC.COORDS.LINE# +
      688     4759    3                   FROM_WINDOW_SPEC.COORDS.HEIGHT#;
      689     4760    3                 END;
      690     4761    2              END WNEW_FOR_1D_PRESENTER;
      691     4762
      692     4763    1           ELSE
      693     4764
      694     4765    2   WNEW_FOR_2D_PRESENTER: DO;
      695     4766                   /*
      696     4767                   *   Set UOPT0 for 2Dim windows, so we can always tell which mode
      697     4768                   *     a DCB is open in.
      698     4769                   */
      699     4770    2              FPT_OPEN.V.UOPT#(0) = %TRUE;
      700     4771    2              VLP_WINDOW.LENGTH# = NEW_WINDOW_SPEC.COORDS.HEIGHT#
      701     4772    2                + %G_WINDOW_ABSVAL#;
      702     4773
      703     4774    2              IF NEW_WINDOW_SPEC.COMMAND THEN
      704     4775    3   OPEN_2D_COMMAND_WINDOW: DO;
      705     4776                      /*
      706     4777                      *   If M$6E has been set, open the DCB with no VLP_WINDOW.
      707     4778                      *   Else create a window from UC01, which is the height
      708     4779                      *      of the entire screen.
      709     4780                      */
      710     4781
      711     4782    3                 IF DCBADDR (DCBNUM (M$6E)) -> F$DCB.RES# ~= 'ME' THEN
      712     4783    4   USE_ASSIGNED_RES_WHEN_M$6E_SET: DO;
      713     4784    4                    IF (DCBADDR(DCBNUM(M$6E))->F$DCB.RES# = 'UC  ') THEN
      714     4785    4                       FPT_OPEN.V.RES# = 'UC01';
      715     4786    4                    ELSE
      716     4787    4                       FPT_OPEN.V.RES# = DCBADDR(DCBNUM(M$6E))->F$DCB.RES#;
      717     4788    4                    VLP_WINDOW.FWINDOW# = ' ';
      718     4789    4                    NEW_WINDOW_SPEC.FWINDOW# = 0;
      719     4790    4                    END USE_ASSIGNED_RES_WHEN_M$6E_SET;
      720     4791    3                 ELSE
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:78   
      721     4792    4   CREATE_WINDOW_FROM_UC01: DO;
      722     4793    4                    FPT_OPEN.WINDOW_ = VECTOR(VLP_WINDOW);
      723     4794        /* Always make the command window occupy what was requested */
      724     4795    4                    VLP_WINDOW.LENGTH# = VD_$SCREEN.V# + %G_WINDOW_ABSVAL#;
      725     4796    4                    NEW_WINDOW_SPEC.FWINDOW# = 1;/* Comes from UC01 */
      726     4797    4                    CALL FIND_STREAM;
      727     4798    4                    END CREATE_WINDOW_FROM_UC01;
      728     4799
      729     4800    3                 IF VD_$$MON_PRES.V# > 10 THEN
      730     4801    3                    CALL VDG$MPRES_FEPOPEN (FPT_OPEN.V.DCB#, FPT_OPEN.V.RES#,
      731     4802    3                      VLP_WINDOW.LENGTH#, VLP_WINDOW.FWINDOW#);
      732     4803    3                 CALL M$OPEN (FPT_OPEN) ALTRET (MONERR);
      733     4804
      734     4805    3                 FPT_EOM.EOMTABLE_ = VECTOR(VLP_EOMTABLE_2D_COMMAND_WINDOW);
      735     4806    3                 CALL M$EOM (FPT_EOM) ALTRET (MONERR);
      736     4807
      737     4808    3                 END OPEN_2D_COMMAND_WINDOW;
      738     4809    2              ELSE
      739     4810    3   OPEN_2D_SE_WINDOW: DO;
      740     4811                        /*
      741     4812                        *   Allocate a DCB to open to the SE window.
      742     4813                        *   Use the RES# of the FROM_WINDOW_SPEC DCB as the FWINDOW#,
      743     4814                        *      and use UCnn as the RES# to open to, where nn is the
      744     4815                        *      allocated DCB #.
      745     4816                        */
      746     4817    3                 IF ADDR (FROM_WINDOW_SPEC) = ADDR(NIL) THEN
      747     4818    3                    CALL VDG$ESCREECH;
      748     4819
      749     4820    3                 FPT_OPEN.V.ORG# = %SE#;
      750     4821
      751     4822    3                 NRECS = MAXIMUM (VD_SCREEN_HEIGHT + (2 * (VD_SCREEN_HEIGHT
      752     4823    3                   * %DFLT_$VSCROLL_MARGIN_PCT / 100)), 26);
      753     4824    3                 FPT_OPEN.V.NRECS# = NRECS;
      754     4825
      755     4826                      /*
      756     4827                      *   Note that the currently-requested height for the SE window
      757     4828                      *       doesn't accurately reflect the possible eventual
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:79   
      758     4829                      *       height of the window.  Therefore, when figuring
      759     4830                      *       percentages, use the largest possible editing window
      760     4831                      *       height.
      761     4832                      *   Also, the FEP doesn't like SPARE values less than 2.
      762     4833                      *       (Test case for this:  say EO CURR repeatedly--
      763     4834                      *       on a VIP7205 in Jim's acct using his context file!)
      764     4835                      */
      765     4836    3                 FPT_OPEN.V.SPARE# = MAXIMUM (2,
      766     4837    3                   (VD_$SCREEN.V# * %DFLT_SE_WINDOW_SPARE_PCT) / 100);
      767     4838
      768     4839    3                 FPT_OPEN.WINDOW_ = VECTOR(VLP_WINDOW);
      769     4840    3                 VLP_WINDOW.FWINDOW# = DCBADDR(FROM_WINDOW_SPEC.DCB#)->F$DCB.RES#;
      770     4841
      771     4842    3                 CALL FIND_STREAM;
      772     4843    3                 NEW_WINDOW_SPEC.FWINDOW# = FROM_WINDOW_SPEC.DCB#;
      773     4844
      774     4845    4                 IF VD_$WI_BORDER.LENGTH# ~= 0 THEN DO;
      775     4846    4                    VLP_WINDOW.TOPBRDR# = %TRUE;
      776     4847    4                    VLP_WINDOW.HBRDRSIZ# = 1;
      777     4848    4                    VLP_WINDOW.HBRDRCHR# = SUBSTR (VD_$WI_BORDER.BYTES,
      778     4849    4                      0, VD_$WI_BORDER.LENGTH#);
      779     4850    4                    END;
      780     4851
      781     4852    3                 IF VD_$$MON_PRES.V# > 10 THEN
      782     4853    3                    CALL VDG$MPRES_FEPOPEN (FPT_OPEN.V.DCB#, FPT_OPEN.V.RES#,
      783     4854    3                      VLP_WINDOW.LENGTH#, VLP_WINDOW.FWINDOW#);
      784     4855    3                 CALL M$OPEN (FPT_OPEN) ALTRET (MONERR);
      785     4856
      786     4857    3                 FPT_EOM.EOMTABLE_ = VECTOR(VLP_EOMTABLE_2D_EDITING_WINDOW);
      787     4858    3                 CALL M$EOM (FPT_EOM) ALTRET (MONERR);
      788     4859
      789     4860                      /*
      790     4861                      *    If OutputDiscard terminal option is set, we must reset
      791     4862                      *    if before writing the record set or else the fep will
      792     4863                      *    just throw it all away.
      793     4864                      */
      794     4865    4                 IF VD_ORIGINAL_TRMCTL.OUTPUTDISCARD# THEN DO;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:80   
      795     4866    4                    FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_TRMCTL#;
      796     4867    4                    FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_TRMCTL_OUTPUTDISCARD_OFF);
      797     4868    4                    CALL M$STRMCTL (FPT_TRMCTL) ALTRET (MONERR);
      798     4869    4                    END;
      799     4870
      800     4871    3                 CALL VDG$OALLOC (%CLS_RECORD_SET, NEW_WINDOW_SPEC.RECORD_SET$,
      801     4872    3                   (SIZEC(VD$RECORD_SET) +
      802     4873    3                   (SIZEC (VD$RECORD_SET.DESC (0)) * (1-1) /* should be NRECS-1 */) +
      803     4874    3                   (%NB_PER_WORD - 1)) / %NB_PER_WORD)
      804     4875    4                 WHENALTRETURN DO; ALTRETURN; END;
      805     4876
      806     4877    3                 IF NEW_WINDOW_SPEC.RECORD_SET$ -> VD$RECORD_SET.MX_ENTRIES# ~= 1
              4877                          /* should be NRECS */ THEN
      807     4878    3                    CALL VDG$ESCREECH;
      808     4879                      /*  I give.  There seems to be no way of second-guessing the
      809     4880                          record set size at this point.  It's important for the record
      810     4881                          set to be as large as the largest E$RECORDS_NEEDED ALTRET
      811     4882                          from the FEP, but the FEP will ignore the NRECS# parameter
      812     4883                          on M$OPENs if it deems that the value is unreasonable.
      813     4884                          The first E$RECORDS_NEEDED should, then, contain in ARS#
      814     4885                         the "correct" record set size.  The RECORD_SET.MX_ENTRIES# variable
      815     4886                          is set to 507 (a strange number) here, and checked upon
      816     4887                          E$RECORDS_NEEDED ALTRET.  The "real" record set is then
      817     4888                          allocated.  */
      818     4889    3                 NEW_WINDOW_SPEC.RECORD_SET$ -> VD$RECORD_SET.MX_ENTRIES# = 507;
      819     4890
      820     4891    3                 IF NEW_WINDOW_SPEC.OPERAND.EDIT_BLOCK$ ~= ADDR (NIL) THEN
      821     4892    4   FILL_IN_WINDOW: DO;
      822     4893    4                    CALL VDP$WREAD (SINK$, %EOM_NORMAL, %FROM_PRESENTER)
      823     4894    5                    WHENALTRETURN DO; ALTRETURN; END;
      824     4895    4                    END FILL_IN_WINDOW;
      825     4896    3                 IF DCBADDR (DCBNUM (M$6E)) -> F$DCB.AMR# THEN
      826     4897    3                    CALL VDG$ERASE_COMMAND_WINDOW
      827     4898    4                    WHENALTRETURN DO; ALTRETURN; END;
      828     4899    3                 END OPEN_2D_SE_WINDOW;
      829     4900
      830     4901    2              IF VBOUND(FPT_OPEN.WINDOW_)>0 THEN VD_2DIM = %TRUE;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:81   
      831     4902    2              FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_WINDOW#;
      832     4903    2              FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_WINDOW);
      833     4904    2              VLP_WINDOW = %CLEAR;
      834     4905    2              CALL M$GTRMCTL (FPT_TRMCTL) ALTRET (MONERR);
      835     4906
      836     4907    2              NEW_WINDOW_SPEC.COORDS.LINE# = VLP_WINDOW.ORG_PST.LINE;
      837     4908    2              NEW_WINDOW_SPEC.COORDS.COLUMN# = VLP_WINDOW.ORG_PST.COLUMN;
      838     4909    2              NEW_WINDOW_SPEC.COORDS.HEIGHT_PERCENT = %FALSE;
      839     4910    2              NEW_WINDOW_SPEC.COORDS.HEIGHT# = VLP_WINDOW.LENGTH#;
      840     4911    2              NEW_WINDOW_SPEC.COORDS.WIDTH# = VLP_WINDOW.WIDTH#;
      841     4912
      842     4913    3              IF ADDR(FROM_WINDOW_SPEC) ~= ADDR(NIL) THEN DO;
      843     4914    3                 FROM_WINDOW_SPEC.COORDS.HEIGHT# =
      844     4915    3                   FROM_WINDOW_SPEC.COORDS.HEIGHT# -
      845     4916    3                   NEW_WINDOW_SPEC.COORDS.HEIGHT#;
      846     4917                      /*
      847     4918                      *  If the FROM_WINDOW_SPEC is the command window, then
      848     4919                      *     by opening this editing window we shrank the command
      849     4920                      *     window.  Therefore, we must turn the command window's
      850     4921                      *     pagehalt off.
      851     4922                      */
      852     4923    4                 IF FROM_WINDOW_SPEC.COMMAND THEN DO;
      853     4924    4                    FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_TRMCTL#;
      854     4925    4                    FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_TRMCTL_PAGEHALT_OFF);
      855     4926    4                    FPT_TRMCTL.V.DCB# = FROM_WINDOW_SPEC.DCB#;
      856     4927    4                    CALL M$STRMCTL (FPT_TRMCTL) ALTRET (MONERR);
      857     4928    4                    END;
      858     4929    3                 END;
      859     4930    2              END WNEW_FOR_2D_PRESENTER;
      860     4931
      861     4932    2           IF FPT_OPEN.V.DCB# = DCBNUM(M$ME) THEN DO;
      862     4933        /* Make sure M$LO is open to the same place as M$ME */
      863     4934    2              IF DCBADDR(DCBNUM(M$LO)) -> F$DCB.AMR# THEN EXIT;
      864     4935    2              FPT_OPEN.V.DCB# = DCBNUM(M$LO);
      865     4936    2              FPT_OPEN.WINDOW_ = VECTOR(NIL);
      866     4937    2              CALL M$OPEN (FPT_OPEN) ALTRET (MONERR);
      867     4938    2              END;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:82   
      868     4939
      869     4940    1           IF VD_$$MON_PRES.V# > 0 THEN
      870     4941    1              CALL VDG$MPRES_WNEW_RETURN (NEW_WINDOW_SPEC, FROM_WINDOW_SPEC);
      871     4942    1           RETURN;
      872     4943        %EJECT;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:83   
      873     4944        /*I* NAME: FIND_STREAM
      874     4945             INPUT: B$ROSEG tells us what UC streams are in use.
      875     4946                 B$ROSEG tells us what UC streams are in use.
      876     4947             OUTPUT:
      877     4948                 FPT_OPEN.V.RES# is initialized to the next available
      878     4949                 stream name after UC09.
      879     4950        */
      880     4951
      881     4952    1   FIND_STREAM: PROC;
      882     4953
      883     4954        %INCLUDE B$ROSEG;
      884     5017    2   DCL B$ROS$ PTR SYMREF READONLY;
      885     5018
      886     5019    2   DCL I SBIN;
      887     5020
      888     5021    2   DCL BITMAP(0:143) BIT(1) UNAL;
      889     5022
      890     5023    2           BITMAP = B$ROS$ -> B$ROSEG.STREAM_VALID;
      891     5024    3           DO I=0 TO SIZEW(B$ROSEG.LDEVNAME)-1;
      892     5025    3              IF SUBSTR(B$ROS$->B$ROSEG.LDEVNAME(I),0,2) = 'UC'
      893     5026    3              THEN BITMAP (20+
      894     5027    3                   ASCBIN(SUBSTR(B$ROS$->B$ROSEG.LDEVNAME(I),2,1))*10+
      895     5028    3                   ASCBIN(SUBSTR(B$ROS$->B$ROSEG.LDEVNAME(I),3,1))-
      896     5029    3                   ASCBIN('0')*10-ASCBIN('0')) = '1'B;
      897     5030    3              END;
      898     5031
      899     5032    2           I = 9;
      900     5033    3           DO UNTIL NOT BITMAP(I+20);
      901     5034    3              I = I+1;
      902     5035    3              END;
      903     5036
      904     5037    2           CALL BINCHAR (SUBSTR (FPT_OPEN.V.RES#,2,2), I);
      905     5038    2           SUBSTR (FPT_OPEN.V.RES#,0,2) = 'UC';
      906     5039    2           RETURN;
      907     5040
      908     5041    2   END FIND_STREAM;
      909     5042
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:84   
      910     5043    1   END VDP$WNEW;
      911     5044        %EOD;

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:85   
--  Include file information  --

   B$ROSEG.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   NK_VFC_C.:LIBRARY  is referenced.
   G_LCP6_E.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WNEW.

   Procedure VDP$WNEW requires 485 words for executable code.
   Procedure VDP$WNEW requires 104 words of local(AUTO) storage.

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:86   

 Object Unit name= VDP$WNEW                                   File name= VDP$WINDOWS.:VDA5TOU
 UTS= JUL 04 '97 11:38:38.08 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$ME
    2   DCB   even  none     0      0  M$6E
    3   DCB   even  none     0      0  M$LO
    4  RoData even  UTS    103    147  VDP$WNEW
    5   Data  even  none    16     20  VDP$WNEW
    6   Proc  even  none   485    745  VDP$WNEW
    7  RoData even  none    24     30  VDP$WNEW

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes    yes     yes      Std        2  VDP$WNEW
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:87   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 VDG$MPRES_WNEW
 yes     yes           Std       1 VDP$WREMOVE
 yes     yes           Std       1 VDG$OALLOC_DCB
 yes     yes           Std       0 VDG$MONERR
 yes     yes           Std       3 VDG$OALLOC
         yes           Std       4 VDG$MPRES_FEPOPEN
         yes           Std       3 VDG$ESCREECH
         yes           Std       2 VDG$MPRES_WNEW_RETURN
 yes     yes           Std       3 VDP$WREAD
 yes     yes           Std       0 VDG$ERASE_COMMAND_WINDOW
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$ME                                  M$6E
     M$LO                                  VD_$WI_BORDER                         VD_$SCREEN
     VD_$$MON_PRES                         VD_SCREEN_HEIGHT                      VD_2DIM
     B$JIT$                                VD_ORIGINAL_TRMCTL               r    B$ROS$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:88   


      425        1        /*T***********************************************************/
      426        2        /*T*                                                         */
      427        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      428        4        /*T*                                                         */
      429        5        /*T***********************************************************/
      430        6
      431        7        /*D* NAME: VDP$WNEW
      432        8            PARAMETERS:
      433        9                NEW_WINDOW_SPEC - VD$WINDOW_SPEC for the window being created:
      434       10                    .DCB# is either:
      435       11                        o 0 - We'll allocate a DCB for the window;
      436       12                        o a DCB number - We'll use that DCB for the window.  The DCB
      437       13                            may be open (either ORG=TERMINAL or SE) or closed.
      438       14                            If open, UOPT0 is set if the DCB is open in 2Dim form,
      439       15                            and is reset if the DCB is open in 1Dim form.
      440       16                    .COORDS.HEIGHT# and .HEIGHT_PERCENT must indicate how high the
      441       17                        new window is to be.  If .HEIGHT_PERCENT is set, .HEIGHT# is
      442       18                        the percentage of the FROM_WINDOW_SPEC's window height which
      443       19                        is to be given to the new window.
      444       20                    .COMMAND must be set if we're creating the command window.
      445       21                    .OPERAND.EDIT_BLOCK$ - If not NIL, then this editing window is to
      446       22                        be filled in immediately with data from the specified block.
      447       23                FROM_WINDOW_SPEC - Optional VD$WINDOW_SPEC for an existing window from
      448       24                    which the new window is to be created.  The new window will be
      449       25                    created by taking lines from the bottom of the "from-window".
      450       26                    FROM_WINDOW_SPEC is only required when creating new editing
      451       27                    windows; if given, it must have:
      452       28                        .COORDS.HEIGHT must specify the number of lines occupied by the
      453       29                            "from-window".
      454       30            INPUT:
      455       31                VD_$WI_BORDER is a VD$BUFFER which is either empty, or contains the
      456       32                    single character the user wants as a border between editing windows.
      457       33                VD_$SCREEN is a VD$NUMBER whose .V# is the number of lines of the
      458       34                    screen which 6Edit may use.  This also indicates whether the
      459       35                    user wants us to screen-edit or not.
      460       36        *N*     Following VD_2DIM temporarily de-implemented due to star 25801:
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:89   
      461       37        *N*     VD_2DIM is a bit-flag telling us if we're really s'posed to open the
      462       38        *N*         new window in screen-editing (2-dimensional) mode or not.
      463       39                VD_SCREEN_HEIGHT is the physical number of lines on the terminal screen.
      464       40                    This may be larger than VD_$SCREEN.V#.
      465       41            OUTPUT:
      466       42                NEW_WINDOW_SPEC will be modified:
      467       43                    .DCB# will specify the DCB which has been opened to the window.
      468       44                    .COORDS will specify the exact location and size of the window.
      469       45                    .RECORD_SET$, if this is an editing window, will point to the
      470       46                        VD$RECORD_SET for this window.
      471       47                FROM_WINDOW_SPEC.COORDS.HEIGHT# will have subtracted from it the number
      472       48                    of lines now occupied by the new window.
      473       49            DESCRIPTION:
      474       50                This routine is used in two distinct situations:
      475       51                1) The user requests (explicitly or implicitly) that a new window be
      476       52                    created.  The window is new to both 6Edit and to the FEP.
      477       53                    NEW_WINDOW_SPEC has no DCB or record-set yet, and .COORDS only
      478       54                    has a value for height.
      479       55                2) The user requests a switch from 1Dim to 2Dim or vice versa.
      480       56                    VDP$WCHANGE will be called to "change the window's height", but it
      481       57                    will detect the 1Dim-to-2Dim (or vice versa) switch and will
      482       58                    call VDP$WNEW to both close the window in its current mode and
      483       59                    to re-open it in the new mode.  In this case, VD_$SCREEN.V#
      484       60                    indicates the mode the user wants to switch to, and
      485       61                    NEW_WINDOW_SPEC.DCB#'s .UOPT#(0) indicates the mode
      486       62                    the window is currently open in:  UOPT(0)=FALSE => 1Dim;
      487       63                    UOPT(0)=TRUE => 2Dim.
      488       64
      489       65                There are 3 cases here:
      490       66                All cases:
      491       67                    If NEW_WINDOW_SPEC is the command window, set its .DCB# to M$ME.
      492       68                        We do this now (before the "is it open" check below), because
      493       69                        for some reason at start-up M$ME typically is open.
      494       70                    If NEW_WINDOW_SPEC has a DCB and it's open, call VDP$WREMOVE to
      495       71                        close the DCB and possibly free the window's record set.
      496       72                    Allocate a DCB if NEW_WINDOW_SPEC doesn't currently have one.
      497       73
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:90   
      498       74                1-Dim:
      499       75                    Open the window's DCB to ME, and set its EOMs.
      500       76                    Clear NEW_WINDOW_SPEC.COORDS.
      501       77
      502       78                2-Dim command window:
      503       79                    Determine how to open the window:
      504       80                        If M$6E is set, don't create a new window for the command
      505       81                            window, just use the M$6E window -- open to M$6E's .RES#.
      506       82                        If M$6E isn't set, create a new window for the command window
      507       83                            from UC01, and open to a new .RES# ('UC<M$ME's dcb#>').
      508       84                    Open the window's DCB, and set its EOMs, and clear it.
      509       85
      510       86                2-Dim editing window:
      511       87                    Compute NRECS and SPARE values for the editing window, based on the
      512       88                        screen height.
      513       89                    Open the DCB to .RES# 'UC<dcb#>', with "from-window" being
      514       90                        FROM_WINDOW_SPEC's .RES#.
      515       91                    Set the EOMs for the window.
      516       92                    Allocate a record set for the window.
      517       93                    If NEW_WINDOW_SPEC has an EditBlock, call VDP$WREAD to fill the
      518       94                        window from the EditBlock.
      519       95                For either 2-Dim case:
      520       96                    Read the coordinates and size of the new window from the FEP,
      521       97                        and fill these values into NEW_WINDOW_SPEC.COORDS.
      522       98                    Adjust FROM_WINDOW_SPEC.COORDS for the space taken away from it
      523       99                        by the new window.
      524      100        */
      525      101
      526      102        VDP$WNEW: PROC (NEW_WINDOW_SPEC, FROM_WINDOW_SPEC) ALTRET;

    102  6 000000   000000 700200 xent  VDP$WNEW     TSX0  ! X66_AUTO_2
         6 000001   000150 000002                    ZERO    104,2

      527      103
      528      104        %INCLUDE VD_MACROS_M;
      529     2319        %INCLUDE CP_6;
      530     2400        %INCLUDE CP_6_SUBS;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:91   
      531     2940        %INCLUDE G_LCP6_E;
      532     3198        %INCLUDE NK_VFC_C;
      533     3272        %INCLUDE B$JIT;
      534     3562
      535     3563
      536     3564        %VD$WINDOW_SPEC (NAME=NEW_WINDOW_SPEC, STCLASS=PARAM);
      537     3630        %VD$WINDOW_SPEC (NAME=FROM_WINDOW_SPEC, STCLASS=PARAM);
      538     3696
      539     3697
      540     3698    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
      541     3699    1   DCL VDG$OALLOC_DCB      ENTRY (1) ALTRET;
      542     3700    1   DCL VDP$WREMOVE         ENTRY (1) ALTRET;
      543     3701    1   DCL VDP$WREAD           ENTRY (3) ALTRET;
      544     3702    1   DCL VDG$ERASE_COMMAND_WINDOW ENTRY ALTRET;
      545     3703    1   DCL VDG$ESCREECH        ENTRY (3);
      546     3704    1   DCL VDG$MONERR          ENTRY     ALTRET;
      547     3705    1   DCL VDG$MPRES_WNEW      ENTRY (2);
      548     3706    1   DCL VDG$MPRES_FEPOPEN   ENTRY (4);
      549     3707    1   DCL VDG$MPRES_WNEW_RETURN ENTRY (2);
      550     3708
      551     3709
      552     3710
      553     3711    1   DCL M$ME DCB;
      554     3712    1   DCL M$6E DCB;
      555     3713    1   DCL M$LO DCB;
      556     3714        %VD$BUFFER (NAME=VD_$WI_BORDER, STCLASS=SYMREF);
      557     3772        %VD$NUMBER (NAME=VD_$SCREEN, STCLASS=SYMREF);
      558     3817        %VD$NUMBER (NAME=VD_$$MON_PRES, STCLASS=SYMREF);
      559     3862    1   DCL VD_SCREEN_HEIGHT UBIN SYMREF;
      560     3863    1   DCL VD_2DIM BIT(1) ALIGNED SYMREF;
      561     3864    1   DCL B$JIT$ PTR SYMREF;
      562     3865
      563     3866
      564     3867
      565     3868
      566     3869        %FPT_OPEN (FPTN=CONST_FPT_OPEN, STCLASS=CONSTANT, SCRUB=YES, ORG=TERMINAL,
      567     3870                   DVFC=%VFC_TRANSITION0, UOPT0=NO);
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:92   
      568     3979        %FPT_EOM (FPTN=CONST_FPT_EOM, STCLASS=CONSTANT);
      569     4009        %FPT_TRMCTL (FPTN=CONST_FPT_TRMCTL, STCLASS=CONSTANT);
      570     4036
      571     4037        %VLP_WINDOW (FPTN=CONST_VLP_WINDOW, STCLASS=CONSTANT, FWINDOW='UC01',
      572     4038            WIDTH=.99, POSITION=BOTTOM, REMOVABLE=YES, MINLENGTH=0,
      573     4039            TOPBRDR=NO, BTMBRDR=NO, LFTBRDR=NO, RHTBRDR=NO);
      574     4083        %VLP_TRMCTL (FPTN=VLP_TRMCTL_PAGEHALT_OFF, STCLASS=CONSTANT, PAGEHALT=NO);
      575     4123        %VLP_TRMCTL (FPTN=VLP_TRMCTL_OUTPUTDISCARD_OFF, STCLASS=CONSTANT,
      576     4124            OUTPUTDISCARD=NO);
      577     4164        %VLP_TRMCTL (FPTN=VD_ORIGINAL_TRMCTL, STCLASS=SYMREF);
      578     4204
      579     4205        /*
      580     4206        *   For 1D, leave all normal activations around, additionally activate on:
      581     4207        *     1)  EOM_COMMAND (<CTRL-C> = ETX)
      582     4208        *     2)  EOM_NEXT_ED_WINDOW (<CTRL-N> = SO)
      583     4209        *     3)  EOM_NEXT_RECORD (<CTRL-J> = LF -- already in standard EOM set)
      584     4210        *     4)  EOM_PREV_RECORD (<CTRL-U> = NAK)
      585     4211        *     5)  EOM_SPLIT_RECORD (<CTRL-V> = SYN)
      586     4212        */
      587     4213        %VLP_EOMTABLE (FPTN=VLP_EOMTABLE_1D, STCLASS=CONSTANT,
      588     4214                        VALUES="24, 46, 6, 47, 0*12" /* ready */);
      589     4233
      590     4234        /*
      591     4235        *   For 2D command window, leave all normal activations around, additionally
      592     4236        *   activate on:
      593     4237        *     1)  EOM_COMMAND (<CTRL-C> = ETX)
      594     4238        *     2)  EOM_NEXT_ED_WINDOW (<CTRL-N> = SO)
      595     4239        */
      596     4240        %VLP_EOMTABLE (FPTN=VLP_EOMTABLE_2D_COMMAND_WINDOW,
      597     4241                        VALUES="24, 46, 0, 47, 0*12" /* set */);
      598     4260
      599     4261        /*
      600     4262        *   For 2D editing windows, reset all normal activations, only activate on:
      601     4263        *     1)  EOM_COMMAND (<CTRL-C> = ETX)
      602     4264        *     2)  EOM_NEXT_ED_WINDOW (<CTRL-N> = SO)
      603     4265        */
      604     4266        %VLP_EOMTABLE (FPTN=VLP_EOMTABLE_2D_EDITING_WINDOW,
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:93   
      605     4267                        VALUES="16, 2, 0, 0, 0*12" /* hike */);
      606     4286
      607     4287
      608     4288        %FPT_OPEN (STCLASS=AUTO, PFMT=VECTOR);
      609     4397        %FPT_EOM (STCLASS=AUTO);
      610     4427        %FPT_TRMCTL (STCLASS=AUTO);
      611     4454        %VLP_WINDOW (STCLASS=AUTO);
      612     4498    1   DCL NRECS SBIN;
      613     4499    1   DCL SINK$ PTR;
      614     4500    1   DCL VD_ERR$ PTR;
      615     4501
      616     4502
      617     4503        %VD$ERR (STCLASS="BASED(VD_ERR$)");
      618     4556        %VD$RECORD_SET;
      619     4634        %F$DCB (DCBN=F$DCB, STCLASS=BASED);
      620     4691
      621     4692
      622     4693
      623     4694    1           IF VD_$$MON_PRES.V# > 0 THEN

   4694  6 000002   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         6 000003   000010 604400 6                  TMOZ    s:4697

      624     4695    1              CALL VDG$MPRES_WNEW (NEW_WINDOW_SPEC, FROM_WINDOW_SPEC);

   4695  6 000004   200003 630500                    EPPR0   @NEW_WINDOW_SPEC,,AUTO
         6 000005   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 000006   000000 701000 xent               TSX1    VDG$MPRES_WNEW
         6 000007   000000 011000                    NOP     0

      625     4696
      626     4697    1           FPT_OPEN = CONST_FPT_OPEN;

   4697  6 000010   000100 100400                    MLR     fill='000'O
         6 000011   000000 000350 4                  ADSC9   CONST_FPT_OPEN           cn=0,n=232
         6 000012   200006 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:94   
      627     4698    1           VBASE(FPT_OPEN.V_) = ADDR(FPT_OPEN.V);

   4698  6 000013   200052 630500                    EPPR0   FPT_OPEN+36,,AUTO
         6 000014   200007 450500                    STP0    FPT_OPEN+1,,AUTO

      628     4699    1           FPT_EOM = CONST_FPT_EOM;

   4699  6 000015   000100 100400                    MLR     fill='000'O
         6 000016   000072 000050 4                  ADSC9   CONST_FPT_EOM            cn=0,n=40
         6 000017   200100 000050                    ADSC9   FPT_EOM,,AUTO            cn=0,n=40

      629     4700    1           VBASE(FPT_EOM.V_) = ADDR(FPT_EOM.V);

   4700  6 000020   200106 631500                    EPPR1   FPT_EOM+6,,AUTO
         6 000021   200101 451500                    STP1    FPT_EOM+1,,AUTO

      630     4701    1           FPT_TRMCTL = CONST_FPT_TRMCTL;

   4701  6 000022   000100 100400                    MLR     fill='000'O
         6 000023   000104 000040 4                  ADSC9   CONST_FPT_TRMCTL         cn=0,n=32
         6 000024   200112 000040                    ADSC9   FPT_TRMCTL,,AUTO         cn=0,n=32

      631     4702    1           VBASE(FPT_TRMCTL.V_) = ADDR(FPT_TRMCTL.V);

   4702  6 000025   200120 633500                    EPPR3   FPT_TRMCTL+6,,AUTO
         6 000026   200113 453500                    STP3    FPT_TRMCTL+1,,AUTO

      632     4703    1           VLP_WINDOW = CONST_VLP_WINDOW;

   4703  6 000027   000100 100400                    MLR     fill='000'O
         6 000030   000114 000040 4                  ADSC9   CONST_VLP_WINDOW         cn=0,n=32
         6 000031   200122 000040                    ADSC9   VLP_WINDOW,,AUTO         cn=0,n=32

      633     4704
      634     4705    1           IF NEW_WINDOW_SPEC.COMMAND AND NEW_WINDOW_SPEC.DCB# = 0 THEN

   4705  6 000032   200003 474500                    LDP4    @NEW_WINDOW_SPEC,,AUTO
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:95   
         6 000033   400002 236100                    LDQ     2,,PR4
         6 000034   000400 316003                    CANQ    256,DU
         6 000035   000043 600000 6                  TZE     s:4708
         6 000036   400014 720100                    LXL0    12,,PR4
         6 000037   000043 601000 6                  TNZ     s:4708

      635     4706    1              NEW_WINDOW_SPEC.DCB# = DCBNUM(M$ME);

   4706  6 000040   000000 236007 xsym               LDQ     M$ME,DL
         6 000041   000000 621006                    EAX1    0,QL
         6 000042   400014 441100                    SXL1    12,,PR4

      636     4707
      637     4708    1           IF NEW_WINDOW_SPEC.DCB# ~= 0 THEN

   4708  6 000043   400014 720100                    LXL0    12,,PR4
         6 000044   000061 600000 6                  TZE     s:4714

      638     4709    2              IF DCBADDR(NEW_WINDOW_SPEC.DCB#)->F$DCB.FCD# THEN DO;

   4709  6 000045   000000 471400 7                  LDP1    0
         6 000046   100000 473500                    LDP3    0,,PR1
         6 000047   300000 475510                    LDP5    0,X0,PR3
         6 000050   500031 236100                    LDQ     25,,PR5
         6 000051   020000 316007                    CANQ    8192,DL
         6 000052   000061 600000 6                  TZE     s:4714

      639     4710    2                 CALL VDP$WREMOVE (NEW_WINDOW_SPEC)

   4710  6 000053   200003 630500                    EPPR0   @NEW_WINDOW_SPEC,,AUTO
         6 000054   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000055   000000 701000 xent               TSX1    VDP$WREMOVE
         6 000056   000060 702000 6                  TSX2    s:4711
         6 000057   000061 710000 6                  TRA     s:4714

      640     4711    3                 WHENALTRETURN DO; ALTRETURN; END;

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:96   
   4711  6 000060   000000 702200 xent               TSX2  ! X66_AALT

      641     4712    2                 END;

      642     4713
      643     4714    2           IF NEW_WINDOW_SPEC.DCB# = 0 THEN DO;

   4714  6 000061   200003 470500                    LDP0    @NEW_WINDOW_SPEC,,AUTO
         6 000062   000014 720100                    LXL0    12,,PR0
         6 000063   000104 601000 6                  TNZ     s:4722

      644     4715    2              IF NEW_WINDOW_SPEC.COMMAND THEN

   4715  6 000064   000002 236100                    LDQ     2,,PR0
         6 000065   000400 316003                    CANQ    256,DU
         6 000066   000073 600000 6                  TZE     s:4718

      645     4716    2                 NEW_WINDOW_SPEC.DCB# = DCBNUM(M$ME);

   4716  6 000067   000000 236007 xsym               LDQ     M$ME,DL
         6 000070   000000 621006                    EAX1    0,QL
         6 000071   000014 441100                    SXL1    12,,PR0
         6 000072   000104 710000 6                  TRA     s:4722

      646     4717    2              ELSE
      647     4718    2                 CALL VDG$OALLOC_DCB (NEW_WINDOW_SPEC.DCB#)

   4718  6 000073   200003 236100                    LDQ     @NEW_WINDOW_SPEC,,AUTO
         6 000074   000001 036000 7                  ADLQ    1
         6 000075   200144 756100                    STQ     BITMAP+4,,AUTO
         6 000076   200144 630500                    EPPR0   BITMAP+4,,AUTO
         6 000077   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000100   000000 701000 xent               TSX1    VDG$OALLOC_DCB
         6 000101   000103 702000 6                  TSX2    s:4719
         6 000102   000104 710000 6                  TRA     s:4722

      648     4719    3                 WHENALTRETURN DO; ALTRETURN; END;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:97   

   4719  6 000103   000000 702200 xent               TSX2  ! X66_AALT

      649     4720    2              END;

      650     4721
      651     4722    1           FPT_OPEN.V.DCB# = NEW_WINDOW_SPEC.DCB#;

   4722  6 000104   200003 470500                    LDP0    @NEW_WINDOW_SPEC,,AUTO
         6 000105   000014 720100                    LXL0    12,,PR0
         6 000106   200052 740100                    STX0    FPT_OPEN+36,,AUTO

      652     4723    1           FPT_EOM.V.DCB# = NEW_WINDOW_SPEC.DCB#;

   4723  6 000107   000014 721100                    LXL1    12,,PR0
         6 000110   200106 741100                    STX1    FPT_EOM+6,,AUTO

      653     4724    1           FPT_TRMCTL.V.DCB# = NEW_WINDOW_SPEC.DCB#;

   4724  6 000111   000014 722100                    LXL2    12,,PR0
         6 000112   200120 742100                    STX2    FPT_TRMCTL+6,,AUTO

      654     4725
      655     4726    1           IF VD_$SCREEN.V# < %MN_SCREEN_EDITING_HEIGHT THEN

   4726  6 000113   000003 235000 xsym               LDA     VD_$SCREEN+3
         6 000114   000003 115007                    CMPA    3,DL
         6 000115   000207 605000 6                  TPL     WNEW_FOR_2D_PRESENTER

      656     4727        /*N* Following clause temporarily (?) de-implemented due to star 25801:
      657     4728        *N*          OR NOT VD_2DIM THEN
      658     4729        *N*/
      659     4730    2   WNEW_FOR_1D_PRESENTER: DO;

   4730  6 000116                       WNEW_FOR_1D* null
      660     4731    2              IF NOT VD_2DIM THEN FPT_OPEN.V.INITZ.REASSIGN# = %TRUE;

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:98   
   4731  6 000116   000000 234000 xsym               SZN     VD_2DIM
         6 000117   000122 604000 6                  TMI     s:4733

   4731  6 000120   200000 236007                    LDQ     65536,DL
         6 000121   200052 256100                    ORSQ    FPT_OPEN+36,,AUTO

      661     4732        /* Don't trash a reassignment unless we've been windowing some */
      662     4733    2              IF DCBADDR (DCBNUM (M$6E)) -> F$DCB.RES# ~= 'ME' THEN

   4733  6 000122   000000 236007 xsym               LDQ     M$6E,DL
         6 000123   000000 471400 7                  LDP1    0
         6 000124   100000 473500                    LDP3    0,,PR1
         6 000125   300000 474506                    LDP4    0,QL,PR3
         6 000126   040000 106500                    CMPC    fill='040'O
         6 000127   400026 000004                    ADSC9   22,,PR4                  cn=0,n=4
         6 000130   000144 000002 4                  ADSC9   VLP_EOMTABLE_1D+8        cn=0,n=2
         6 000131   000136 600000 6                  TZE     s:4735

      663     4734    2                 FPT_OPEN.V.RES# = DCBADDR (DCBNUM (M$6E)) -> F$DCB.RES#;

   4734  6 000132   000000 236007 xsym               LDQ     M$6E,DL
         6 000133   300000 474506                    LDP4    0,QL,PR3
         6 000134   400026 236100                    LDQ     22,,PR4
         6 000135   200056 756100                    STQ     FPT_OPEN+40,,AUTO

      664     4735    2              CALL M$OPEN (FPT_OPEN)

   4735  6 000136   200006 630500                    EPPR0   FPT_OPEN,,AUTO
         6 000137   450000 713400                    CLIMB   alt,open
         6 000140   410400 401760                    pmme    nvectors=18
         6 000141   000143 702000 6                  TSX2    MONERR
         6 000142   000147 710000 6                  TRA     s:4741

      665     4736    3              WHENALTRETURN DO;

      666     4737    3   MONERR:       CALL VDG$MONERR;

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:99   
   4737  6 000143   000002 631400 xsym  MONERR       EPPR1   B_VECTNIL+2
         6 000144   000000 701000 xent               TSX1    VDG$MONERR
         6 000145   000000 011000                    NOP     0

      667     4738    3                 ALTRETURN;

   4738  6 000146   000000 702200 xent               TSX2  ! X66_AALT

      668     4739    3                 END;
      669     4740
      670     4741    3              IF B$JIT.MODE = %M_INT# THEN DO;

   4741  6 000147   000000 470400 xsym               LDP0    B$JIT$
         6 000150   000000 236100                    LDQ     0,,PR0
         6 000151   740000 376003                    ANQ     -16384,DU
         6 000152   140000 116003                    CMPQ    49152,DU
         6 000153   000165 601000 6                  TNZ     s:4747

      671     4742    3                 FPT_EOM.V.DCB# = DCBNUM(M$UC);

   4742  6 000154   000000 236007 xsym               LDQ     M$UC,DL
         6 000155   000000 620006                    EAX0    0,QL
         6 000156   200106 740100                    STX0    FPT_EOM+6,,AUTO

      672     4743    3                 FPT_EOM.EOMTABLE_ = VECTOR(VLP_EOMTABLE_1D);

   4743  6 000157   000002 237000 7                  LDAQ    2
         6 000160   200104 757100                    STAQ    FPT_EOM+4,,AUTO

      673     4744    3                 CALL M$EOM (FPT_EOM) ALTRET (MONERR);

   4744  6 000161   200100 630500                    EPPR0   FPT_EOM,,AUTO
         6 000162   560003 713400                    CLIMB   alt,+57347
         6 000163   401000 401760                    pmme    nvectors=3
         6 000164   000143 702000 6                  TSX2    MONERR

      674     4745    3                 END;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:100  

      675     4746
      676     4747    3              IF ADDR(FROM_WINDOW_SPEC) ~= ADDR(NIL) THEN DO;

   4747  6 000165   200004 236100                    LDQ     @FROM_WINDOW_SPEC,,AUTO
         6 000166   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000167   000632 600000 6                  TZE     s:4932

      677     4748    3                 IF NEW_WINDOW_SPEC.COORDS.LINE# ~= 0 THEN EXIT;

   4748  6 000170   200003 470500                    LDP0    @NEW_WINDOW_SPEC,,AUTO
         6 000171   000003 235100                    LDA     3,,PR0
         6 000172   000206 601000 6                  TNZ     s:4761

      678     4749        /*
      679     4750           Make height adjustments in case $SCREEN is only temporarily at zero
      680     4751        */
      681     4752    3                 IF FROM_WINDOW_SPEC.COORDS.HEIGHT# <=

   4752  6 000173   200004 471500                    LDP1    @FROM_WINDOW_SPEC,,AUTO
         6 000174   100005 236100                    LDQ     5,,PR1
         6 000175   000005 116100                    CMPQ    5,,PR0
         6 000176   000201 605400 6                  TPNZ    s:4756

      682     4753    3                   NEW_WINDOW_SPEC.COORDS.HEIGHT# THEN
      683     4754    3                    NEW_WINDOW_SPEC.COORDS.HEIGHT# =

   4754  6 000177   000001 136007                    SBLQ    1,DL
         6 000200   000005 756100                    STQ     5,,PR0

      684     4755    3                      FROM_WINDOW_SPEC.COORDS.HEIGHT# - 1;
      685     4756    3                 FROM_WINDOW_SPEC.COORDS.HEIGHT# = FROM_WINDOW_SPEC.COORDS.HEIGHT#

   4756  6 000201   100005 236100                    LDQ     5,,PR1
         6 000202   000005 136100                    SBLQ    5,,PR0
         6 000203   100005 756100                    STQ     5,,PR1

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:101  
      686     4757    3                   - NEW_WINDOW_SPEC.COORDS.HEIGHT#;
      687     4758    3                 NEW_WINDOW_SPEC.COORDS.LINE# = FROM_WINDOW_SPEC.COORDS.LINE# +

   4758  6 000204   100003 036100                    ADLQ    3,,PR1
         6 000205   000003 756100                    STQ     3,,PR0

      688     4759    3                   FROM_WINDOW_SPEC.COORDS.HEIGHT#;
      689     4760    3                 END;

      690     4761    2              END WNEW_FOR_1D_PRESENTER;

   4761  6 000206   000632 710000 6                  TRA     s:4932

      691     4762
      692     4763    1           ELSE
      693     4764
      694     4765    2   WNEW_FOR_2D_PRESENTER: DO;

   4765  6 000207                       WNEW_FOR_2D* null
      695     4766                   /*
      696     4767                   *   Set UOPT0 for 2Dim windows, so we can always tell which mode
      697     4768                   *     a DCB is open in.
      698     4769                   */
      699     4770    2              FPT_OPEN.V.UOPT#(0) = %TRUE;

   4770  6 000207   200054 236100                    LDQ     FPT_OPEN+38,,AUTO
         6 000210   000004 376000 7                  ANQ     4
         6 000211   400000 276003                    ORQ     -131072,DU
         6 000212   200054 756100                    STQ     FPT_OPEN+38,,AUTO

      700     4771    2              VLP_WINDOW.LENGTH# = NEW_WINDOW_SPEC.COORDS.HEIGHT#

   4771  6 000213   000005 723100                    LXL3    5,,PR0
         6 000214   020000 624013                    EAX4    8192,X3
         6 000215   200123 744100                    STX4    VLP_WINDOW+1,,AUTO

      701     4772    2                + %G_WINDOW_ABSVAL#;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:102  
      702     4773
      703     4774    2              IF NEW_WINDOW_SPEC.COMMAND THEN

   4774  6 000216   000002 236100                    LDQ     2,,PR0
         6 000217   000400 316003                    CANQ    256,DU
         6 000220   000320 600000 6                  TZE     OPEN_2D_SE_WINDOW

      704     4775    3   OPEN_2D_COMMAND_WINDOW: DO;

   4775  6 000221                       OPEN_2D_COM* null
      705     4776                      /*
      706     4777                      *   If M$6E has been set, open the DCB with no VLP_WINDOW.
      707     4778                      *   Else create a window from UC01, which is the height
      708     4779                      *      of the entire screen.
      709     4780                      */
      710     4781
      711     4782    3                 IF DCBADDR (DCBNUM (M$6E)) -> F$DCB.RES# ~= 'ME' THEN

   4782  6 000221   000000 236007 xsym               LDQ     M$6E,DL
         6 000222   000000 471400 7                  LDP1    0
         6 000223   100000 473500                    LDP3    0,,PR1
         6 000224   300000 474506                    LDP4    0,QL,PR3
         6 000225   040000 106500                    CMPC    fill='040'O
         6 000226   400026 000004                    ADSC9   22,,PR4                  cn=0,n=4
         6 000227   000144 000002 4                  ADSC9   VLP_EOMTABLE_1D+8        cn=0,n=2
         6 000230   000252 600000 6                  TZE     CREATE_WINDOW_FROM_UC01

      712     4783    4   USE_ASSIGNED_RES_WHEN_M$6E_SET: DO;

   4783  6 000231                       USE_ASSIGNE* null
      713     4784    4                    IF (DCBADDR(DCBNUM(M$6E))->F$DCB.RES# = 'UC  ') THEN

   4784  6 000231   000000 236007 xsym               LDQ     M$6E,DL
         6 000232   300000 474506                    LDP4    0,QL,PR3
         6 000233   400026 236100                    LDQ     22,,PR4
         6 000234   000145 116000 4                  CMPQ    VLP_EOMTABLE_1D+9
         6 000235   000241 601000 6                  TNZ     s:4787
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:103  

      714     4785    4                       FPT_OPEN.V.RES# = 'UC01';

   4785  6 000236   000146 236000 4                  LDQ     VLP_EOMTABLE_1D+10
         6 000237   200056 756100                    STQ     FPT_OPEN+40,,AUTO
         6 000240   000245 710000 6                  TRA     s:4788

      715     4786    4                    ELSE
      716     4787    4                       FPT_OPEN.V.RES# = DCBADDR(DCBNUM(M$6E))->F$DCB.RES#;

   4787  6 000241   000000 236007 xsym               LDQ     M$6E,DL
         6 000242   300000 474506                    LDP4    0,QL,PR3
         6 000243   400026 236100                    LDQ     22,,PR4
         6 000244   200056 756100                    STQ     FPT_OPEN+40,,AUTO

      717     4788    4                    VLP_WINDOW.FWINDOW# = ' ';

   4788  6 000245   000035 236000 xsym               LDQ     B_VECTNIL+29
         6 000246   200122 756100                    STQ     VLP_WINDOW,,AUTO

      718     4789    4                    NEW_WINDOW_SPEC.FWINDOW# = 0;

   4789  6 000247   000000 236003                    LDQ     0,DU
         6 000250   000015 552120                    STBQ    13,'20'O,PR0

      719     4790    4                    END USE_ASSIGNED_RES_WHEN_M$6E_SET;

   4790  6 000251   000266 710000 6                  TRA     s:4800

      720     4791    3                 ELSE
      721     4792    4   CREATE_WINDOW_FROM_UC01: DO;

   4792  6 000252                       CREATE_WIND* null
      722     4793    4                    FPT_OPEN.WINDOW_ = VECTOR(VLP_WINDOW);

   4793  6 000252   000002 235000 7                  LDA     2
         6 000253   200144 452500                    STP2    BITMAP+4,,AUTO
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:104  
         6 000254   200144 236100                    LDQ     BITMAP+4,,AUTO
         6 000255   000122 036003                    ADLQ    82,DU
         6 000256   200022 757100                    STAQ    FPT_OPEN+12,,AUTO

      723     4794        /* Always make the command window occupy what was requested */
      724     4795    4                    VLP_WINDOW.LENGTH# = VD_$SCREEN.V# + %G_WINDOW_ABSVAL#;

   4795  6 000257   000003 723000 xsym               LXL3    VD_$SCREEN+3
         6 000260   020000 625013                    EAX5    8192,X3
         6 000261   200123 745100                    STX5    VLP_WINDOW+1,,AUTO

      725     4796    4                    NEW_WINDOW_SPEC.FWINDOW# = 1;/* Comes from UC01 */

   4796  6 000262   000001 236003                    LDQ     1,DU
         6 000263   000015 552120                    STBQ    13,'20'O,PR0

      726     4797    4                    CALL FIND_STREAM;

   4797  6 000264   000667 701000 6                  TSX1    FIND_STREAM
         6 000265   000000 011000                    NOP     0

      727     4798    4                    END CREATE_WINDOW_FROM_UC01;

      728     4799
      729     4800    3                 IF VD_$$MON_PRES.V# > 10 THEN

   4800  6 000266   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         6 000267   000012 115007                    CMPA    10,DL
         6 000270   000305 604400 6                  TMOZ    s:4803

      730     4801    3                    CALL VDG$MPRES_FEPOPEN (FPT_OPEN.V.DCB#, FPT_OPEN.V.RES#,

   4801  6 000271   200122 630500                    EPPR0   VLP_WINDOW,,AUTO
         6 000272   200147 450500                    STP0    BITMAP+7,,AUTO
         6 000273   200123 631500                    EPPR1   VLP_WINDOW+1,,AUTO
         6 000274   200146 451500                    STP1    BITMAP+6,,AUTO
         6 000275   200056 633500                    EPPR3   FPT_OPEN+40,,AUTO
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:105  
         6 000276   200145 453500                    STP3    BITMAP+5,,AUTO
         6 000277   200052 634500                    EPPR4   FPT_OPEN+36,,AUTO
         6 000300   200144 454500                    STP4    BITMAP+4,,AUTO
         6 000301   200144 630500                    EPPR0   BITMAP+4,,AUTO
         6 000302   000022 631400 xsym               EPPR1   B_VECTNIL+18
         6 000303   000000 701000 xent               TSX1    VDG$MPRES_FEPOPEN
         6 000304   000000 011000                    NOP     0

      731     4802    3                      VLP_WINDOW.LENGTH#, VLP_WINDOW.FWINDOW#);
      732     4803    3                 CALL M$OPEN (FPT_OPEN) ALTRET (MONERR);

   4803  6 000305   200006 630500                    EPPR0   FPT_OPEN,,AUTO
         6 000306   450000 713400                    CLIMB   alt,open
         6 000307   410400 401760                    pmme    nvectors=18
         6 000310   000143 702000 6                  TSX2    MONERR

      733     4804
      734     4805    3                 FPT_EOM.EOMTABLE_ = VECTOR(VLP_EOMTABLE_2D_COMMAND_WINDOW);

   4805  6 000311   000006 237000 7                  LDAQ    6
         6 000312   200104 757100                    STAQ    FPT_EOM+4,,AUTO

      735     4806    3                 CALL M$EOM (FPT_EOM) ALTRET (MONERR);

   4806  6 000313   200100 630500                    EPPR0   FPT_EOM,,AUTO
         6 000314   560003 713400                    CLIMB   alt,+57347
         6 000315   401000 401760                    pmme    nvectors=3
         6 000316   000143 702000 6                  TSX2    MONERR

      736     4807
      737     4808    3                 END OPEN_2D_COMMAND_WINDOW;

   4808  6 000317   000542 710000 6                  TRA     s:4901

      738     4809    2              ELSE
      739     4810    3   OPEN_2D_SE_WINDOW: DO;

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:106  
   4810  6 000320                       OPEN_2D_SE_* null
      740     4811                        /*
      741     4812                        *   Allocate a DCB to open to the SE window.
      742     4813                        *   Use the RES# of the FROM_WINDOW_SPEC DCB as the FWINDOW#,
      743     4814                        *      and use UCnn as the RES# to open to, where nn is the
      744     4815                        *      allocated DCB #.
      745     4816                        */
      746     4817    3                 IF ADDR (FROM_WINDOW_SPEC) = ADDR(NIL) THEN

   4817  6 000320   200004 236100                    LDQ     @FROM_WINDOW_SPEC,,AUTO
         6 000321   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000322   000326 601000 6                  TNZ     s:4820

      747     4818    3                    CALL VDG$ESCREECH;

   4818  6 000323   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 000324   000000 701000 xent               TSX1    VDG$ESCREECH
         6 000325   000000 011000                    NOP     0

      748     4819
      749     4820    3                 FPT_OPEN.V.ORG# = %SE#;

   4820  6 000326   027000 236007                    LDQ     11776,DL
         6 000327   200054 552110                    STBQ    FPT_OPEN+38,'10'O,AUTO

      750     4821
      751     4822    3                 NRECS = MAXIMUM (VD_SCREEN_HEIGHT + (2 * (VD_SCREEN_HEIGHT

   4822  6 000330   000000 236000 xsym               LDQ     VD_SCREEN_HEIGHT
         6 000331   000031 402007                    MPY     25,DL
         6 000332   000001 772000                    QRL     1
         6 000333   000062 506007                    DIV     50,DL
         6 000334   000001 736000                    QLS     1
         6 000335   000000 036000 xsym               ADLQ    VD_SCREEN_HEIGHT
         6 000336   000032 116007                    CMPQ    26,DL
         6 000337   000341 603000 6                  TRC     s:4822+9
         6 000340   000032 236007                    LDQ     26,DL
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:107  
         6 000341   200132 756100                    STQ     NRECS,,AUTO

      752     4823    3                   * %DFLT_$VSCROLL_MARGIN_PCT / 100)), 26);
      753     4824    3                 FPT_OPEN.V.NRECS# = NRECS;

   4824  6 000342   200064 756100                    STQ     FPT_OPEN+46,,AUTO

      754     4825
      755     4826                      /*
      756     4827                      *   Note that the currently-requested height for the SE window
      757     4828                      *       doesn't accurately reflect the possible eventual
      758     4829                      *       height of the window.  Therefore, when figuring
      759     4830                      *       percentages, use the largest possible editing window
      760     4831                      *       height.
      761     4832                      *   Also, the FEP doesn't like SPARE values less than 2.
      762     4833                      *       (Test case for this:  say EO CURR repeatedly--
      763     4834                      *       on a VIP7205 in Jim's acct using his context file!)
      764     4835                      */
      765     4836    3                 FPT_OPEN.V.SPARE# = MAXIMUM (2,

   4836  6 000343   000003 236000 xsym               LDQ     VD_$SCREEN+3
         6 000344   000014 402007                    MPY     12,DL
         6 000345   000144 506007                    DIV     100,DL
         6 000346   000002 116007                    CMPQ    2,DL
         6 000347   000351 605000 6                  TPL     s:4836+6
         6 000350   000002 236007                    LDQ     2,DL
         6 000351   000000 620006                    EAX0    0,QL
         6 000352   200062 740100                    STX0    FPT_OPEN+44,,AUTO

      766     4837    3                   (VD_$SCREEN.V# * %DFLT_SE_WINDOW_SPARE_PCT) / 100);
      767     4838
      768     4839    3                 FPT_OPEN.WINDOW_ = VECTOR(VLP_WINDOW);

   4839  6 000353   000002 235000 7                  LDA     2
         6 000354   200144 452500                    STP2    BITMAP+4,,AUTO
         6 000355   200144 236100                    LDQ     BITMAP+4,,AUTO
         6 000356   000122 036003                    ADLQ    82,DU
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:108  
         6 000357   200022 757100                    STAQ    FPT_OPEN+12,,AUTO

      769     4840    3                 VLP_WINDOW.FWINDOW# = DCBADDR(FROM_WINDOW_SPEC.DCB#)->F$DCB.RES#;

   4840  6 000360   000000 470400 7                  LDP0    0
         6 000361   000000 471500                    LDP1    0,,PR0
         6 000362   200004 473500                    LDP3    @FROM_WINDOW_SPEC,,AUTO
         6 000363   300014 721100                    LXL1    12,,PR3
         6 000364   100000 474511                    LDP4    0,X1,PR1
         6 000365   400026 236100                    LDQ     22,,PR4
         6 000366   200122 756100                    STQ     VLP_WINDOW,,AUTO

      770     4841
      771     4842    3                 CALL FIND_STREAM;

   4842  6 000367   000667 701000 6                  TSX1    FIND_STREAM
         6 000370   000000 011000                    NOP     0

      772     4843    3                 NEW_WINDOW_SPEC.FWINDOW# = FROM_WINDOW_SPEC.DCB#;

   4843  6 000371   200003 470500                    LDP0    @NEW_WINDOW_SPEC,,AUTO
         6 000372   200004 471500                    LDP1    @FROM_WINDOW_SPEC,,AUTO
         6 000373   100014 236100                    LDQ     12,,PR1
         6 000374   000022 736000                    QLS     18
         6 000375   000015 552120                    STBQ    13,'20'O,PR0

      773     4844
      774     4845    4                 IF VD_$WI_BORDER.LENGTH# ~= 0 THEN DO;

   4845  6 000376   000002 220000 xsym               LDX0    VD_$WI_BORDER+2
         6 000377   000413 600000 6                  TZE     s:4852

      775     4846    4                    VLP_WINDOW.TOPBRDR# = %TRUE;

   4846  6 000400   200125 236100                    LDQ     VLP_WINDOW+3,,AUTO
         6 000401   000005 376000 7                  ANQ     5
         6 000402   200000 276003                    ORQ     65536,DU
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:109  
         6 000403   200125 756100                    STQ     VLP_WINDOW+3,,AUTO

      776     4847    4                    VLP_WINDOW.HBRDRSIZ# = 1;

   4847  6 000404   200125 236100                    LDQ     VLP_WINDOW+3,,AUTO
         6 000405   000010 376000 7                  ANQ     8
         6 000406   001000 276003                    ORQ     512,DU
         6 000407   200125 756100                    STQ     VLP_WINDOW+3,,AUTO

      777     4848    4                    VLP_WINDOW.HBRDRCHR# = SUBSTR (VD_$WI_BORDER.BYTES,

   4848  6 000410   040100 100440                    MLR     fill='040'O
         6 000411   000002 400010 xsym               ADSC9   VD_$WI_BORDER+2          cn=2,n=*X0
         6 000412   200125 200001                    ADSC9   VLP_WINDOW+3,,AUTO       cn=1,n=1

      778     4849    4                      0, VD_$WI_BORDER.LENGTH#);
      779     4850    4                    END;

      780     4851
      781     4852    3                 IF VD_$$MON_PRES.V# > 10 THEN

   4852  6 000413   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         6 000414   000012 115007                    CMPA    10,DL
         6 000415   000432 604400 6                  TMOZ    s:4855

      782     4853    3                    CALL VDG$MPRES_FEPOPEN (FPT_OPEN.V.DCB#, FPT_OPEN.V.RES#,

   4853  6 000416   200122 633500                    EPPR3   VLP_WINDOW,,AUTO
         6 000417   200147 453500                    STP3    BITMAP+7,,AUTO
         6 000420   200123 634500                    EPPR4   VLP_WINDOW+1,,AUTO
         6 000421   200146 454500                    STP4    BITMAP+6,,AUTO
         6 000422   200056 635500                    EPPR5   FPT_OPEN+40,,AUTO
         6 000423   200145 455500                    STP5    BITMAP+5,,AUTO
         6 000424   200052 636500                    EPPR6   FPT_OPEN+36,,AUTO
         6 000425   200144 456500                    STP6    BITMAP+4,,AUTO
         6 000426   200144 630500                    EPPR0   BITMAP+4,,AUTO
         6 000427   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:110  
         6 000430   000000 701000 xent               TSX1    VDG$MPRES_FEPOPEN
         6 000431   000000 011000                    NOP     0

      783     4854    3                      VLP_WINDOW.LENGTH#, VLP_WINDOW.FWINDOW#);
      784     4855    3                 CALL M$OPEN (FPT_OPEN) ALTRET (MONERR);

   4855  6 000432   200006 630500                    EPPR0   FPT_OPEN,,AUTO
         6 000433   450000 713400                    CLIMB   alt,open
         6 000434   410400 401760                    pmme    nvectors=18
         6 000435   000143 702000 6                  TSX2    MONERR

      785     4856
      786     4857    3                 FPT_EOM.EOMTABLE_ = VECTOR(VLP_EOMTABLE_2D_EDITING_WINDOW);

   4857  6 000436   000012 237000 7                  LDAQ    10
         6 000437   200104 757100                    STAQ    FPT_EOM+4,,AUTO

      787     4858    3                 CALL M$EOM (FPT_EOM) ALTRET (MONERR);

   4858  6 000440   200100 630500                    EPPR0   FPT_EOM,,AUTO
         6 000441   560003 713400                    CLIMB   alt,+57347
         6 000442   401000 401760                    pmme    nvectors=3
         6 000443   000143 702000 6                  TSX2    MONERR

      788     4859
      789     4860                      /*
      790     4861                      *    If OutputDiscard terminal option is set, we must reset
      791     4862                      *    if before writing the record set or else the fep will
      792     4863                      *    just throw it all away.
      793     4864                      */
      794     4865    4                 IF VD_ORIGINAL_TRMCTL.OUTPUTDISCARD# THEN DO;

   4865  6 000444   000000 236000 xsym               LDQ     VD_ORIGINAL_TRMCTL
         6 000445   000003 316003                    CANQ    3,DU
         6 000446   000457 600000 6                  TZE     s:4871

      795     4866    4                    FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_TRMCTL#;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:111  

   4866  6 000447   000000 220003                    LDX0    0,DU
         6 000450   200120 440100                    SXL0    FPT_TRMCTL+6,,AUTO

      796     4867    4                    FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_TRMCTL_OUTPUTDISCARD_OFF);

   4867  6 000451   000014 237000 7                  LDAQ    12
         6 000452   200116 757100                    STAQ    FPT_TRMCTL+4,,AUTO

      797     4868    4                    CALL M$STRMCTL (FPT_TRMCTL) ALTRET (MONERR);

   4868  6 000453   200112 630500                    EPPR0   FPT_TRMCTL,,AUTO
         6 000454   560000 713400                    CLIMB   alt,+57344
         6 000455   401000 401760                    pmme    nvectors=3
         6 000456   000143 702000 6                  TSX2    MONERR

      798     4869    4                    END;

      799     4870
      800     4871    3                 CALL VDG$OALLOC (%CLS_RECORD_SET, NEW_WINDOW_SPEC.RECORD_SET$,

   4871  6 000457   000016 236000 7                  LDQ     14
         6 000460   200146 756100                    STQ     BITMAP+6,,AUTO
         6 000461   200003 236100                    LDQ     @NEW_WINDOW_SPEC,,AUTO
         6 000462   000016 036003                    ADLQ    14,DU
         6 000463   000017 235000 7                  LDA     15
         6 000464   200144 757100                    STAQ    BITMAP+4,,AUTO
         6 000465   200144 630500                    EPPR0   BITMAP+4,,AUTO
         6 000466   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000467   000000 701000 xent               TSX1    VDG$OALLOC
         6 000470   000472 702000 6                  TSX2    s:4875
         6 000471   000473 710000 6                  TRA     s:4877

      801     4872    3                   (SIZEC(VD$RECORD_SET) +
      802     4873    3                   (SIZEC (VD$RECORD_SET.DESC (0)) * (1-1) /* should be NRECS-1 */) +
      803     4874    3                   (%NB_PER_WORD - 1)) / %NB_PER_WORD)
      804     4875    4                 WHENALTRETURN DO; ALTRETURN; END;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:112  

   4875  6 000472   000000 702200 xent               TSX2  ! X66_AALT

      805     4876
      806     4877    3                 IF NEW_WINDOW_SPEC.RECORD_SET$ -> VD$RECORD_SET.MX_ENTRIES# ~= 1
              4877                          /* should be NRECS */ THEN

   4877  6 000473   200003 470500                    LDP0    @NEW_WINDOW_SPEC,,AUTO
         6 000474   000016 471500                    LDP1    14,,PR0
         6 000475   100002 720100                    LXL0    2,,PR1
         6 000476   000001 100003                    CMPX0   1,DU
         6 000477   000503 600000 6                  TZE     s:4889

      807     4878    3                    CALL VDG$ESCREECH;

   4878  6 000500   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 000501   000000 701000 xent               TSX1    VDG$ESCREECH
         6 000502   000000 011000                    NOP     0

      808     4879                      /*  I give.  There seems to be no way of second-guessing the
      809     4880                          record set size at this point.  It's important for the record
      810     4881                          set to be as large as the largest E$RECORDS_NEEDED ALTRET
      811     4882                          from the FEP, but the FEP will ignore the NRECS# parameter
      812     4883                          on M$OPENs if it deems that the value is unreasonable.
      813     4884                          The first E$RECORDS_NEEDED should, then, contain in ARS#
      814     4885                         the "correct" record set size. The RECORD_SET.MX_ENTRIES# variable
      815     4886                          is set to 507 (a strange number) here, and checked upon
      816     4887                          E$RECORDS_NEEDED ALTRET.  The "real" record set is then
      817     4888                          allocated.  */
      818     4889    3                 NEW_WINDOW_SPEC.RECORD_SET$ -> VD$RECORD_SET.MX_ENTRIES# = 507;

   4889  6 000503   200003 470500                    LDP0    @NEW_WINDOW_SPEC,,AUTO
         6 000504   000016 471500                    LDP1    14,,PR0
         6 000505   000773 220003                    LDX0    507,DU
         6 000506   100002 440100                    SXL0    2,,PR1

      819     4890
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:113  
      820     4891    3                 IF NEW_WINDOW_SPEC.OPERAND.EDIT_BLOCK$ ~= ADDR (NIL) THEN

   4891  6 000507   000012 236100                    LDQ     10,,PR0
         6 000510   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000511   000526 600000 6                  TZE     s:4896

      821     4892    4   FILL_IN_WINDOW: DO;

   4892  6 000512                       FILL_IN_WIN* null
      822     4893    4                    CALL VDP$WREAD (SINK$, %EOM_NORMAL, %FROM_PRESENTER)

   4893  6 000512   000021 236000 7                  LDQ     17
         6 000513   200146 756100                    STQ     BITMAP+6,,AUTO
         6 000514   000022 236000 7                  LDQ     18
         6 000515   200145 756100                    STQ     BITMAP+5,,AUTO
         6 000516   200133 631500                    EPPR1   SINK$,,AUTO
         6 000517   200144 451500                    STP1    BITMAP+4,,AUTO
         6 000520   200144 630500                    EPPR0   BITMAP+4,,AUTO
         6 000521   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000522   000000 701000 xent               TSX1    VDP$WREAD
         6 000523   000525 702000 6                  TSX2    s:4894
         6 000524   000526 710000 6                  TRA     s:4896

      823     4894    5                    WHENALTRETURN DO; ALTRETURN; END;

   4894  6 000525   000000 702200 xent               TSX2  ! X66_AALT

      824     4895    4                    END FILL_IN_WINDOW;

      825     4896    3                 IF DCBADDR (DCBNUM (M$6E)) -> F$DCB.AMR# THEN

   4896  6 000526   000000 236007 xsym               LDQ     M$6E,DL
         6 000527   000000 470400 7                  LDP0    0
         6 000530   000000 471500                    LDP1    0,,PR0
         6 000531   100000 473506                    LDP3    0,QL,PR1
         6 000532   300031 236100                    LDQ     25,,PR3
         6 000533   010000 316007                    CANQ    4096,DL
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:114  
         6 000534   000542 600000 6                  TZE     s:4901

      826     4897    3                    CALL VDG$ERASE_COMMAND_WINDOW

   4897  6 000535   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 000536   000000 701000 xent               TSX1    VDG$ERASE_COMMAND_WINDOW
         6 000537   000541 702000 6                  TSX2    s:4898
         6 000540   000542 710000 6                  TRA     s:4901

      827     4898    4                    WHENALTRETURN DO; ALTRETURN; END;

   4898  6 000541   000000 702200 xent               TSX2  ! X66_AALT

      828     4899    3                 END OPEN_2D_SE_WINDOW;

      829     4900
      830     4901    2              IF VBOUND(FPT_OPEN.WINDOW_)>0 THEN VD_2DIM = %TRUE;

   4901  6 000542   200022 236100                    LDQ     FPT_OPEN+12,,AUTO
         6 000543   000034 316000 xsym               CANQ    B_VECTNIL+28
         6 000544   000547 600000 6                  TZE     s:4902

   4901  6 000545   400000 236003                    LDQ     -131072,DU
         6 000546   000000 756000 xsym               STQ     VD_2DIM

      831     4902    2              FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_WINDOW#;

   4902  6 000547   000001 220003                    LDX0    1,DU
         6 000550   200120 440100                    SXL0    FPT_TRMCTL+6,,AUTO

      832     4903    2              FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_WINDOW);

   4903  6 000551   000002 235000 7                  LDA     2
         6 000552   200144 452500                    STP2    BITMAP+4,,AUTO
         6 000553   200144 236100                    LDQ     BITMAP+4,,AUTO
         6 000554   000122 036003                    ADLQ    82,DU
         6 000555   200116 757100                    STAQ    FPT_TRMCTL+4,,AUTO
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:115  

      833     4904    2              VLP_WINDOW = %CLEAR;

   4904  6 000556   000100 100400                    MLR     fill='000'O
         6 000557   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         6 000560   200122 000040                    ADSC9   VLP_WINDOW,,AUTO         cn=0,n=32

      834     4905    2              CALL M$GTRMCTL (FPT_TRMCTL) ALTRET (MONERR);

   4905  6 000561   200112 630500                    EPPR0   FPT_TRMCTL,,AUTO
         6 000562   560001 713400                    CLIMB   alt,+57345
         6 000563   401000 401760                    pmme    nvectors=3
         6 000564   000143 702000 6                  TSX2    MONERR

      835     4906
      836     4907    2              NEW_WINDOW_SPEC.COORDS.LINE# = VLP_WINDOW.ORG_PST.LINE;

   4907  6 000565   200124 236100                    LDQ     VLP_WINDOW+2,,AUTO
         6 000566   000022 772000                    QRL     18
         6 000567   000777 376007                    ANQ     511,DL
         6 000570   200003 470500                    LDP0    @NEW_WINDOW_SPEC,,AUTO
         6 000571   000003 756100                    STQ     3,,PR0

      837     4908    2              NEW_WINDOW_SPEC.COORDS.COLUMN# = VLP_WINDOW.ORG_PST.COLUMN;

   4908  6 000572   200124 236100                    LDQ     VLP_WINDOW+2,,AUTO
         6 000573   777777 376007                    ANQ     -1,DL
         6 000574   000004 756100                    STQ     4,,PR0

      838     4909    2              NEW_WINDOW_SPEC.COORDS.HEIGHT_PERCENT = %FALSE;

   4909  6 000575   000031 236000 xsym               LDQ     B_VECTNIL+25
         6 000576   000007 356100                    ANSQ    7,,PR0

      839     4910    2              NEW_WINDOW_SPEC.COORDS.HEIGHT# = VLP_WINDOW.LENGTH#;

   4910  6 000577   200123 235100                    LDA     VLP_WINDOW+1,,AUTO
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:116  
         6 000600   000022 731000                    ARS     18
         6 000601   000005 755100                    STA     5,,PR0

      840     4911    2              NEW_WINDOW_SPEC.COORDS.WIDTH# = VLP_WINDOW.WIDTH#;

   4911  6 000602   200123 236100                    LDQ     VLP_WINDOW+1,,AUTO
         6 000603   000022 736000                    QLS     18
         6 000604   000022 732000                    QRS     18
         6 000605   000006 756100                    STQ     6,,PR0

      841     4912
      842     4913    3              IF ADDR(FROM_WINDOW_SPEC) ~= ADDR(NIL) THEN DO;

   4913  6 000606   200004 236100                    LDQ     @FROM_WINDOW_SPEC,,AUTO
         6 000607   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000610   000632 600000 6                  TZE     s:4932

      843     4914    3                 FROM_WINDOW_SPEC.COORDS.HEIGHT# =

   4914  6 000611   200004 471500                    LDP1    @FROM_WINDOW_SPEC,,AUTO
         6 000612   100005 236100                    LDQ     5,,PR1
         6 000613   000005 136100                    SBLQ    5,,PR0
         6 000614   100005 756100                    STQ     5,,PR1

      844     4915    3                   FROM_WINDOW_SPEC.COORDS.HEIGHT# -
      845     4916    3                   NEW_WINDOW_SPEC.COORDS.HEIGHT#;
      846     4917                      /*
      847     4918                      *  If the FROM_WINDOW_SPEC is the command window, then
      848     4919                      *     by opening this editing window we shrank the command
      849     4920                      *     window.  Therefore, we must turn the command window's
      850     4921                      *     pagehalt off.
      851     4922                      */
      852     4923    4                 IF FROM_WINDOW_SPEC.COMMAND THEN DO;

   4923  6 000615   100002 236100                    LDQ     2,,PR1
         6 000616   000400 316003                    CANQ    256,DU
         6 000617   000632 600000 6                  TZE     s:4932
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:117  

      853     4924    4                    FPT_TRMCTL.V.VLPTYPE# = %TRMCTL_TRMCTL#;

   4924  6 000620   000000 220003                    LDX0    0,DU
         6 000621   200120 440100                    SXL0    FPT_TRMCTL+6,,AUTO

      854     4925    4                    FPT_TRMCTL.TRMCTL_ = VECTOR(VLP_TRMCTL_PAGEHALT_OFF);

   4925  6 000622   000024 237000 7                  LDAQ    20
         6 000623   200116 757100                    STAQ    FPT_TRMCTL+4,,AUTO

      855     4926    4                    FPT_TRMCTL.V.DCB# = FROM_WINDOW_SPEC.DCB#;

   4926  6 000624   100014 721100                    LXL1    12,,PR1
         6 000625   200120 741100                    STX1    FPT_TRMCTL+6,,AUTO

      856     4927    4                    CALL M$STRMCTL (FPT_TRMCTL) ALTRET (MONERR);

   4927  6 000626   200112 630500                    EPPR0   FPT_TRMCTL,,AUTO
         6 000627   560000 713400                    CLIMB   alt,+57344
         6 000630   401000 401760                    pmme    nvectors=3
         6 000631   000143 702000 6                  TSX2    MONERR

      857     4928    4                    END;

      858     4929    3                 END;

      859     4930    2              END WNEW_FOR_2D_PRESENTER;

      860     4931
      861     4932    2           IF FPT_OPEN.V.DCB# = DCBNUM(M$ME) THEN DO;

   4932  6 000632   000000 236007 xsym               LDQ     M$ME,DL
         6 000633   200144 756100                    STQ     BITMAP+4,,AUTO
         6 000634   200052 236100                    LDQ     FPT_OPEN+36,,AUTO
         6 000635   000022 772000                    QRL     18
         6 000636   200144 116100                    CMPQ    BITMAP+4,,AUTO
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:118  
         6 000637   000660 601000 6                  TNZ     s:4940

      862     4933        /* Make sure M$LO is open to the same place as M$ME */
      863     4934    2              IF DCBADDR(DCBNUM(M$LO)) -> F$DCB.AMR# THEN EXIT;

   4934  6 000640   000000 236007 xsym               LDQ     M$LO,DL
         6 000641   000000 470400 7                  LDP0    0
         6 000642   000000 471500                    LDP1    0,,PR0
         6 000643   100000 473506                    LDP3    0,QL,PR1
         6 000644   300031 236100                    LDQ     25,,PR3
         6 000645   010000 316007                    CANQ    4096,DL
         6 000646   000660 601000 6                  TNZ     s:4940

      864     4935    2              FPT_OPEN.V.DCB# = DCBNUM(M$LO);

   4935  6 000647   000000 236007 xsym               LDQ     M$LO,DL
         6 000650   000000 620006                    EAX0    0,QL
         6 000651   200052 740100                    STX0    FPT_OPEN+36,,AUTO

      865     4936    2              FPT_OPEN.WINDOW_ = VECTOR(NIL);

   4936  6 000652   000026 237000 7                  LDAQ    22
         6 000653   200022 757100                    STAQ    FPT_OPEN+12,,AUTO

      866     4937    2              CALL M$OPEN (FPT_OPEN) ALTRET (MONERR);

   4937  6 000654   200006 630500                    EPPR0   FPT_OPEN,,AUTO
         6 000655   450000 713400                    CLIMB   alt,open
         6 000656   410400 401760                    pmme    nvectors=18
         6 000657   000143 702000 6                  TSX2    MONERR

      867     4938    2              END;

      868     4939
      869     4940    1           IF VD_$$MON_PRES.V# > 0 THEN

   4940  6 000660   000003 235000 xsym               LDA     VD_$$MON_PRES+3
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:119  
         6 000661   000666 604400 6                  TMOZ    s:4942

      870     4941    1              CALL VDG$MPRES_WNEW_RETURN (NEW_WINDOW_SPEC, FROM_WINDOW_SPEC);

   4941  6 000662   200003 630500                    EPPR0   @NEW_WINDOW_SPEC,,AUTO
         6 000663   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 000664   000000 701000 xent               TSX1    VDG$MPRES_WNEW_RETURN
         6 000665   000000 011000                    NOP     0

      871     4942    1           RETURN;

   4942  6 000666   000000 702200 xent               TSX2  ! X66_ARET

      872     4943        %EJECT;
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:120  
      873     4944        /*I* NAME: FIND_STREAM
      874     4945             INPUT: B$ROSEG tells us what UC streams are in use.
      875     4946                 B$ROSEG tells us what UC streams are in use.
      876     4947             OUTPUT:
      877     4948                 FPT_OPEN.V.RES# is initialized to the next available
      878     4949                 stream name after UC09.
      879     4950        */
      880     4951
      881     4952    1   FIND_STREAM: PROC;

   4952  6 000667   200136 741300       FIND_STREAM  STX1  ! VD_ERR$+2,,AUTO

      882     4953
      883     4954        %INCLUDE B$ROSEG;
      884     5017    2   DCL B$ROS$ PTR SYMREF READONLY;
      885     5018
      886     5019    2   DCL I SBIN;
      887     5020
      888     5021    2   DCL BITMAP(0:143) BIT(1) UNAL;
      889     5022
      890     5023    2           BITMAP = B$ROS$ -> B$ROSEG.STREAM_VALID;

   5023  6 000670   000000 470400 xsym               LDP0    B$ROS$
         6 000671   000100 100500                    MLR     fill='000'O
         6 000672   000117 000020                    ADSC9   79,,PR0                  cn=0,n=16
         6 000673   200140 000020                    ADSC9   BITMAP,,AUTO             cn=0,n=16

      891     5024    3           DO I=0 TO SIZEW(B$ROSEG.LDEVNAME)-1;

   5024  6 000674   200137 450100                    STZ     I,,AUTO
         6 000675   000721 710000 6                  TRA     s:5030+1

      892     5025    3              IF SUBSTR(B$ROS$->B$ROSEG.LDEVNAME(I),0,2) = 'UC'

   5025  6 000676   000000 470400 xsym               LDP0    B$ROS$
         6 000677   200137 720100                    LXL0    I,,AUTO
         6 000700   000054 221110                    LDX1    44,X0,PR0
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:121  
         6 000701   000145 101000 4                  CMPX1   VLP_EOMTABLE_1D+9
         6 000702   000720 601000 6                  TNZ     s:5030

      893     5026    3              THEN BITMAP (20+
      894     5027    3                   ASCBIN(SUBSTR(B$ROS$->B$ROSEG.LDEVNAME(I),2,1))*10+
      895     5028    3                   ASCBIN(SUBSTR(B$ROS$->B$ROSEG.LDEVNAME(I),3,1))-
      896     5029    3                   ASCBIN('0')*10-ASCBIN('0')) = '1'B;

   5029  6 000703   000054 236110                    LDQ     44,X0,PR0
         6 000704   000011 772000                    QRL     9
         6 000705   000777 376007                    ANQ     511,DL
         6 000706   200144 756100                    STQ     BITMAP+4,,AUTO
         6 000707   000054 236110                    LDQ     44,X0,PR0
         6 000710   000777 376007                    ANQ     511,DL
         6 000711   200145 756100                    STQ     BITMAP+5,,AUTO
         6 000712   200144 236100                    LDQ     BITMAP+4,,AUTO
         6 000713   000012 402007                    MPY     10,DL
         6 000714   200145 036100                    ADLQ    BITMAP+5,,AUTO
         6 000715   003106 060400                    CSL     bolr='003'O
         6 000716   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         6 000717   200121 650001                    BDSC    FPT_TRMCTL+7,Q,AUTO      by=3,bit=5,n=1

      897     5030    3              END;

   5030  6 000720   200137 054100                    AOS     I,,AUTO
         6 000721   200137 235100                    LDA     I,,AUTO
         6 000722   000017 115007                    CMPA    15,DL
         6 000723   000676 604400 6                  TMOZ    s:5025

      898     5031
      899     5032    2           I = 9;

   5032  6 000724   000011 236007                    LDQ     9,DL
         6 000725   200137 756100                    STQ     I,,AUTO

      900     5033    3           DO UNTIL NOT BITMAP(I+20);

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:122  
      901     5034    3              I = I+1;

   5034  6 000726   200137 054100                    AOS     I,,AUTO

      902     5035    3              END;

   5035  6 000727   200137 235100                    LDA     I,,AUTO
         6 000730   000732 605000 6                  TPL     s:5035+3
         6 000731   000044 035003                    ADLA    36,DU
         6 000732   000000 066505                    CMPB    filb='0'B
         6 000733   200140 420001                    BDSC    BITMAP,A,AUTO            by=2,bit=2,n=1
         6 000734   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         6 000735   000726 601000 6                  TNZ     s:5034

      903     5036
      904     5037    2           CALL BINCHAR (SUBSTR (FPT_OPEN.V.RES#,2,2), I);

   5037  6 000736   000100 301500                    BTD
         6 000737   200137 000004                    NDSC9   I,,AUTO                  cn=0,s=lsgnf,sf=0,n=4
         6 000740   200056 430002                    NDSC9   FPT_OPEN+40,,AUTO        cn=2,s=nosgn,sf=0,n=2

      905     5038    2           SUBSTR (FPT_OPEN.V.RES#,0,2) = 'UC';

   5038  6 000741   000145 220000 4                  LDX0    VLP_EOMTABLE_1D+9
         6 000742   200056 740100                    STX0    FPT_OPEN+40,,AUTO

      906     5039    2           RETURN;

   5039  6 000743   200136 221300                    LDX1  ! VD_ERR$+2,,AUTO
         6 000744   000001 702211                    TSX2  ! 1,X1
      907     5040
      908     5041    2   END FIND_STREAM;
      909     5042
      910     5043    1   END VDP$WNEW;
      911     5044        %EOD;

PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:123  
--  Include file information  --

   B$ROSEG.:LIBRARY  cannot be made into a system file and is referenced.
   B$JIT.:LIBRARY  cannot be made into a system file and is referenced.
   NK_VFC_C.:LIBRARY  is referenced.
   G_LCP6_E.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WNEW.
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:124  

 **** Variables and constants ****

  ****  Section 004 RoData VDP$WNEW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    72-0-0/d STRC(360)   r     1 CONST_FPT_EOM              0-0-0/d STRC(2088)  r     1 CONST_FPT_OPEN
   104-0-0/d STRC(288)   r     1 CONST_FPT_TRMCTL         114-0-0/d STRC(288)   r     1 CONST_VLP_WINDOW
   134-0-0/d STRC(288)   r     1 VLP_EOMTABLE_1D
   130-0-0/d STRC(144)   r     1 VLP_TRMCTL_OUTPUTDISCARD_OFF
   124-0-0/d STRC(144)   r     1 VLP_TRMCTL_PAGEHALT_OFF

  ****  Section 005  Data  VDP$WNEW

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(288)   r     1 VLP_EOMTABLE_2D_COMMAND_WINDOW
    10-0-0/d STRC(288)   r     1 VLP_EOMTABLE_2D_EDITING_WINDOW

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @FROM_WINDOW_SPEC          3-0-0/w PTR         r     1 @NEW_WINDOW_SPEC
   140-0-0/b BIT         r     1 BITMAP(0:143)            100-0-0/d STRC(360)   r     1 FPT_EOM
     6-0-0/d STRC(2088)  r     1 FPT_OPEN                 112-0-0/d STRC(288)   r     1 FPT_TRMCTL
    *0-0-0/w STRC(900)   r     1 FROM_WINDOW_SPEC         137-0-0/w SBIN        r     1 I
    *0-0-0/w STRC(900)   r     1 NEW_WINDOW_SPEC          132-0-0/w SBIN        r     1 NRECS
   133-0-0/w PTR         r     1 SINK$                    134-0-0/w PTR         r     1 VD_ERR$
   122-0-0/d STRC(288)   r     1 VLP_WINDOW

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:125  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$ROS$
     0-0-0/w STRC(144)   r     1 VD_$$MON_PRES              0-0-0/w STRC(144)   r     1 VD_$SCREEN
     0-0-0/w ASTR(90)    r     1 VD_$WI_BORDER              0-0-0/w BIT         r     1 VD_2DIM
     0-0-0/d STRC(144)   r     1 VD_ORIGINAL_TRMCTL         0-0-0/w UBIN        r     1 VD_SCREEN_HEIGHT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(3024)  r     1 B$ROSEG
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$6E
     0-0-0N  NULL        r     1 M$LO                       0-0-0N  NULL        r     1 M$ME
     0-0-0N  NULL        r     1 M$UC                       0-0-0/w STRC(324)   r     1 VD$RECORD_SET


   Procedure VDP$WNEW requires 485 words for executable code.
   Procedure VDP$WNEW requires 104 words of local(AUTO) storage.
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:126  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:127  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      3380**DCL      3380--REDEF
B$JIT.ERR.MID
      3287**DCL      3287--REDEF
B$JIT.JRESPEAK
      3448**DCL      3449--REDEF
B$JIT.MODE
      3281**DCL      4741>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
      3557**DCL      3557--REDEF    3558--REDEF
B$JIT.PNR
      3461**DCL      3461--REDEF
B$JIT.TSLINE
      3555**DCL      3556--REDEF
B$JIT$
      3864**DCL      3281--IMP-PTR  4741>>IF
B$ROS$ IN PROCEDURE FIND_STREAM
      5017**DCL      5023>>ASSIGN   5025>>IF       5029>>ASSIGN   5029>>ASSIGN
B$ROSEG.LDEVNAME IN PROCEDURE FIND_STREAM
      4975**DCL      5024--DOINDEX  5025>>IF       5029>>ASSIGN   5029>>ASSIGN
B$ROSEG.STREAM_VALID IN PROCEDURE FIND_STREAM
      4997**DCL      5023>>ASSIGN
BITMAP IN PROCEDURE FIND_STREAM
      5021**DCL      5023<<ASSIGN   5029<<ASSIGN   5033>>DOUNTIL
CONST_FPT_EOM
      3997**DCL      4699>>ASSIGN
CONST_FPT_EOM.V
      4005**DCL      3999--DCLINIT
CONST_FPT_OPEN
      3935**DCL      4697>>ASSIGN
CONST_FPT_OPEN.ACSVEH_
      3937**DCL      3938--REDEF
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:128  
CONST_FPT_OPEN.ALTKEYS_
      3943**DCL      3944--REDEF    3944--REDEF
CONST_FPT_OPEN.HDR_
      3942**DCL      3943--REDEF
CONST_FPT_OPEN.TAB_
      3941**DCL      3942--REDEF
CONST_FPT_OPEN.UHL_
      3935**DCL      3936--REDEF    3936--REDEF
CONST_FPT_OPEN.V
      3944**DCL      3935--DCLINIT
CONST_FPT_OPEN.V.FSN#
      3975**DCL      3975--REDEF    3975--REDEF
CONST_FPT_OPEN.WSN_
      3941**DCL      3941--REDEF
CONST_FPT_TRMCTL
      4025**DCL      4701>>ASSIGN
CONST_FPT_TRMCTL.V
      4033**DCL      4027--DCLINIT
CONST_VLP_WINDOW
      4057**DCL      4703>>ASSIGN
CONST_VLP_WINDOW.FWINDOW#
      4057**DCL      4057--REDEF    4058--REDEF
F$DCB.ACTPOS
      4667**DCL      4667--REDEF
F$DCB.AMR#
      4654**DCL      4896>>IF       4934>>IF
F$DCB.ARS#
      4641**DCL      4641--REDEF
F$DCB.ATTR
      4660**DCL      4661--REDEF
F$DCB.BORROW
      4675**DCL      4675--REDEF    4675--REDEF    4675--REDEF
F$DCB.DCBNAME.L
      4689**DCL      4689--IMP-SIZ
F$DCB.EOMCHAR#
      4645**DCL      4645--REDEF
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:129  
F$DCB.FCD#
      4654**DCL      4709>>IF
F$DCB.FLDID
      4670**DCL      4670--REDEF
F$DCB.FORM$
      4664**DCL      4664--REDEF
F$DCB.FSECT
      4680**DCL      4680--REDEF
F$DCB.FSN#
      4657**DCL      4657--REDEF    4657--REDEF    4658--REDEF
F$DCB.HEADER$
      4663**DCL      4663--REDEF
F$DCB.IXTNSIZE#
      4661**DCL      4661--REDEF
F$DCB.LASTSTA$
      4650**DCL      4650--REDEF
F$DCB.LVL
      4676**DCL      4676--REDEF
F$DCB.NAME#.C
      4651**DCL      4651--REDEF
F$DCB.NOEOF
      4673**DCL      4673--REDEF
F$DCB.NRECS#
      4662**DCL      4662--REDEF
F$DCB.NRECX
      4681**DCL      4681--REDEF
F$DCB.OHDR
      4673**DCL      4673--REDEF
F$DCB.ORG#
      4656**DCL      4656--REDEF
F$DCB.PRECNO
      4679**DCL      4679--REDEF
F$DCB.RCSZ
      4685**DCL      4685--REDEF
F$DCB.RES#
      4652**DCL      4652--REDEF    4733>>IF       4734>>ASSIGN   4782>>IF       4784>>IF       4787>>ASSIGN
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:130  
      4840>>ASSIGN
F$DCB.SETX
      4664**DCL      4664--REDEF
F$DCB.TAB$
      4664**DCL      4664--REDEF
F$DCB.TDA
      4678**DCL      4679--REDEF
F$DCB.WSN#
      4652**DCL      4652--REDEF
FIND_STREAM
      4952**PROC     4797--CALL     4842--CALL
FPT_EOM
      4415**DCL      4699<<ASSIGN   4744<>CALL     4806<>CALL     4858<>CALL
FPT_EOM.EOMTABLE_
      4421**DCL      4743<<ASSIGN   4805<<ASSIGN   4857<<ASSIGN
FPT_EOM.V
      4423**DCL      4700--ASSIGN
FPT_EOM.V.DCB#
      4423**DCL      4723<<ASSIGN   4742<<ASSIGN
FPT_EOM.V_
      4417**DCL      4700<<ASSIGN
FPT_OPEN
      4353**DCL      4697<<ASSIGN   4735<>CALL     4803<>CALL     4855<>CALL     4937<>CALL
FPT_OPEN.ACSVEH_
      4355**DCL      4356--REDEF
FPT_OPEN.ALTKEYS_
      4361**DCL      4362--REDEF    4362--REDEF
FPT_OPEN.HDR_
      4360**DCL      4361--REDEF
FPT_OPEN.TAB_
      4359**DCL      4360--REDEF
FPT_OPEN.UHL_
      4353**DCL      4354--REDEF    4354--REDEF
FPT_OPEN.V
      4362**DCL      4698--ASSIGN
FPT_OPEN.V.DCB#
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:131  
      4362**DCL      4722<<ASSIGN   4801<>CALL     4853<>CALL     4932>>IF       4935<<ASSIGN
FPT_OPEN.V.FSN#
      4393**DCL      4393--REDEF    4393--REDEF
FPT_OPEN.V.INITZ.REASSIGN#
      4363**DCL      4731<<ASSIGN
FPT_OPEN.V.NRECS#
      4381**DCL      4824<<ASSIGN
FPT_OPEN.V.ORG#
      4373**DCL      4820<<ASSIGN
FPT_OPEN.V.RES#
      4377**DCL      4734<<ASSIGN   4785<<ASSIGN   4787<<ASSIGN   4801<>CALL     4853<>CALL     5037<<CALLBLT
      5038<<ASSIGN
FPT_OPEN.V.SPARE#
      4380**DCL      4836<<ASSIGN
FPT_OPEN.V.UOPT#
      4372**DCL      4770<<ASSIGN
FPT_OPEN.V_
      4353**DCL      4698<<ASSIGN
FPT_OPEN.WINDOW_
      4356**DCL      4793<<ASSIGN   4839<<ASSIGN   4901>>IF       4936<<ASSIGN
FPT_OPEN.WSN_
      4359**DCL      4359--REDEF
FPT_TRMCTL
      4443**DCL      4701<<ASSIGN   4868<>CALL     4905<>CALL     4927<>CALL
FPT_TRMCTL.TRMCTL_
      4449**DCL      4867<<ASSIGN   4903<<ASSIGN   4925<<ASSIGN
FPT_TRMCTL.V
      4451**DCL      4702--ASSIGN
FPT_TRMCTL.V.DCB#
      4451**DCL      4724<<ASSIGN   4926<<ASSIGN
FPT_TRMCTL.V.VLPTYPE#
      4451**DCL      4866<<ASSIGN   4902<<ASSIGN   4924<<ASSIGN
FPT_TRMCTL.V_
      4445**DCL      4702<<ASSIGN
FROM_WINDOW_SPEC
      3638**DCL       102--PROC     4695<>CALL     4747--IF       4817--IF       4913--IF       4941<>CALL
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:132  
FROM_WINDOW_SPEC.COMMAND
      3664**DCL      4923>>IF
FROM_WINDOW_SPEC.COORDS.HEIGHT#
      3665**DCL      4752>>IF       4754>>ASSIGN   4756<<ASSIGN   4756>>ASSIGN   4758>>ASSIGN   4914<<ASSIGN
      4914>>ASSIGN
FROM_WINDOW_SPEC.COORDS.LINE#
      3664**DCL      4758>>ASSIGN
FROM_WINDOW_SPEC.DCB#
      3681**DCL      4840--ASSIGN   4843>>ASSIGN   4926>>ASSIGN
I IN PROCEDURE FIND_STREAM
      5019**DCL      5024<<DOINDEX  5025>>IF       5029>>ASSIGN   5029>>ASSIGN   5032<<ASSIGN   5033>>DOUNTIL
      5034<<ASSIGN   5034>>ASSIGN   5037>>CALLBLT
M$6E
      3712**DCL      4733--IF       4734--ASSIGN   4782--IF       4784--IF       4787--ASSIGN   4896--IF
M$EOM
      2353**DCL-ENT  4744--CALL     4806--CALL     4858--CALL
M$GTRMCTL
      2352**DCL-ENT  4905--CALL
M$LO
      3713**DCL      4934--IF       4935>>ASSIGN
M$ME
      3711**DCL      4706>>ASSIGN   4716>>ASSIGN   4932>>IF
M$OPEN
      2328**DCL-ENT  4735--CALL     4803--CALL     4855--CALL     4937--CALL
M$STRMCTL
      2352**DCL-ENT  4868--CALL     4927--CALL
M$UC
      2352**DCL      4742>>ASSIGN
MONERR
      4737**LABEL    4744--CALLALT  4803--CALLALT  4806--CALLALT  4855--CALLALT  4858--CALLALT  4868--CALLALT
      4905--CALLALT  4927--CALLALT  4937--CALLALT
NEW_WINDOW_SPEC
      3572**DCL       102--PROC     4695<>CALL     4710<>CALL     4941<>CALL
NEW_WINDOW_SPEC.COMMAND
      3598**DCL      4705>>IF       4715>>IF       4774>>IF
NEW_WINDOW_SPEC.COORDS.COLUMN#
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:133  
      3599**DCL      4908<<ASSIGN
NEW_WINDOW_SPEC.COORDS.HEIGHT#
      3599**DCL      4752>>IF       4754<<ASSIGN   4756>>ASSIGN   4771>>ASSIGN   4910<<ASSIGN   4914>>ASSIGN
NEW_WINDOW_SPEC.COORDS.HEIGHT_PERCENT
      3599**DCL      4909<<ASSIGN
NEW_WINDOW_SPEC.COORDS.LINE#
      3598**DCL      4748>>IF       4758<<ASSIGN   4907<<ASSIGN
NEW_WINDOW_SPEC.COORDS.WIDTH#
      3599**DCL      4911<<ASSIGN
NEW_WINDOW_SPEC.DCB#
      3615**DCL      4705>>IF       4706<<ASSIGN   4708>>IF       4709--IF       4714>>IF       4716<<ASSIGN
      4718<>CALL     4722>>ASSIGN   4723>>ASSIGN   4724>>ASSIGN
NEW_WINDOW_SPEC.FWINDOW#
      3616**DCL      4789<<ASSIGN   4796<<ASSIGN   4843<<ASSIGN
NEW_WINDOW_SPEC.OPERAND.EDIT_BLOCK$
      3613**DCL      4891>>IF
NEW_WINDOW_SPEC.RECORD_SET$
      3616**DCL      4871<>CALL     4877>>IF       4889>>ASSIGN
NRECS
      4498**DCL      4822<<ASSIGN   4824>>ASSIGN
SINK$
      4499**DCL      4893<>CALL
VD$RECORD_SET
      4564**DCL      4871--CALL
VD$RECORD_SET.DESC
      4601**DCL      4871--CALL
VD$RECORD_SET.MX_ENTRIES#
      4590**DCL      4877>>IF       4889<<ASSIGN
VDG$ERASE_COMMAND_WINDOW
      3702**DCL-ENT  4897--CALL
VDG$ESCREECH
      3703**DCL-ENT  4818--CALL     4878--CALL
VDG$MONERR
      3704**DCL-ENT  4737--CALL
VDG$MPRES_FEPOPEN
      3706**DCL-ENT  4801--CALL     4853--CALL
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:134  
VDG$MPRES_WNEW
      3705**DCL-ENT  4695--CALL
VDG$MPRES_WNEW_RETURN
      3707**DCL-ENT  4941--CALL
VDG$OALLOC
      3698**DCL-ENT  4871--CALL
VDG$OALLOC_DCB
      3699**DCL-ENT  4718--CALL
VDP$WREAD
      3701**DCL-ENT  4893--CALL
VDP$WREMOVE
      3700**DCL-ENT  4710--CALL
VD_$$MON_PRES.V#
      3859**DCL      4694>>IF       4800>>IF       4852>>IF       4940>>IF
VD_$SCREEN.V#
      3814**DCL      4726>>IF       4795>>ASSIGN   4836>>ASSIGN
VD_$WI_BORDER.BYTES
      3767**DCL      4848>>ASSIGN
VD_$WI_BORDER.LENGTH#
      3765**DCL      3767--IMP-SIZ  4845>>IF       4848>>ASSIGN   4848>>ASSIGN
VD_2DIM
      3863**DCL      4731>>IF       4901<<ASSIGN
VD_ERR$
      4500**DCL      4511--IMP-PTR
VD_ORIGINAL_TRMCTL.BREAKCOUNT
      4193**DCL      4193--REDEF
VD_ORIGINAL_TRMCTL.OUTPUTDISCARD#
      4184**DCL      4865>>IF
VD_SCREEN_HEIGHT
      3862**DCL      4822>>ASSIGN   4822>>ASSIGN
VLP_EOMTABLE_1D
      4231**DCL      4743--ASSIGN
VLP_EOMTABLE_2D_COMMAND_WINDOW
      4258**DCL      4805--ASSIGN
VLP_EOMTABLE_2D_EDITING_WINDOW
      4284**DCL      4857--ASSIGN
PL6.E3A0      #003=VDP$WNEW File=VDP$WINDOWS.:VDA5TSI                            FRI 07/04/97 11:38 Page:135  
VLP_TRMCTL_OUTPUTDISCARD_OFF
      4141**DCL      4867--ASSIGN
VLP_TRMCTL_OUTPUTDISCARD_OFF.BREAKCOUNT
      4153**DCL      4153--REDEF
VLP_TRMCTL_PAGEHALT_OFF
      4100**DCL      4925--ASSIGN
VLP_TRMCTL_PAGEHALT_OFF.BREAKCOUNT
      4112**DCL      4112--REDEF
VLP_WINDOW
      4472**DCL      4703<<ASSIGN   4793--ASSIGN   4839--ASSIGN   4903--ASSIGN   4904<<ASSIGN
VLP_WINDOW.FWINDOW#
      4472**DCL      4472--REDEF    4473--REDEF    4788<<ASSIGN   4801<>CALL     4840<<ASSIGN   4853<>CALL
VLP_WINDOW.HBRDRCHR#
      4489**DCL      4848<<ASSIGN
VLP_WINDOW.HBRDRSIZ#
      4489**DCL      4847<<ASSIGN
VLP_WINDOW.LENGTH#
      4486**DCL      4771<<ASSIGN   4795<<ASSIGN   4801<>CALL     4853<>CALL     4910>>ASSIGN
VLP_WINDOW.ORG_PST.COLUMN
      4487**DCL      4908>>ASSIGN
VLP_WINDOW.ORG_PST.LINE
      4487**DCL      4907>>ASSIGN
VLP_WINDOW.TOPBRDR#
      4488**DCL      4846<<ASSIGN
VLP_WINDOW.WIDTH#
      4486**DCL      4911>>ASSIGN

PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:136  
      912        1        /*T***********************************************************/
      913        2        /*T*                                                         */
      914        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      915        4        /*T*                                                         */
      916        5        /*T***********************************************************/
      917        6
      918        7        /*D* NAME: VDP$WREMOVE
      919        8            PARAMETERS:
      920        9                WINDOW_SPEC - VD$WINDOW_SPEC for the window being removed:
      921       10                    .DCB# must specify the DCB # the window is using.  The DCB must
      922       11                        currently be open.
      923       12                    .RECORD_SET$ must either be NIL, or point to a VD$RECORD_SET for
      924       13                        the window.
      925       14            INPUT:
      926       15                None.
      927       16            OUTPUT:
      928       17                WINDOW_SPEC's:
      929       18                    .DCB# will contain 0, and the DCB freed.
      930       19                    .RECORD_SET$ will be NIL and the VD$RECORD_SET freed.
      931       20            DESCRIPTION:
      932       21                Close the window's DCB.  We specify DISP=RELEASE on this close for
      933       22                    ORG=SE windows.
      934       23                Free the window's DCB.
      935       24                If the window has a record set, free it.
      936       25        */
      937       26
      938       27        VDP$WREMOVE: PROC (WINDOW_SPEC) ALTRET;
      939       28
      940       29        %INCLUDE VD_MACROS_M;
      941     2244        %INCLUDE CP_6;
      942     2325
      943     2326        %VD$WINDOW_SPEC (NAME=WINDOW_SPEC, STCLASS=PARAM);
      944     2392
      945     2393
      946     2394    1   DCL VDG$MONERR          ENTRY ALTRET;
      947     2395    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
      948     2396    1   DCL VDG$OFREE_DCB       ENTRY (1) ALTRET;
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:137  
      949     2397    1   DCL VDG$MPRES_WREMOVE   ENTRY (1);
      950     2398
      951     2399
      952     2400        %VD$NUMBER (NAME=VD_$$MON_PRES, STCLASS=SYMREF);
      953     2445    1   DCL M$ME DCB;
      954     2446    1   DCL M$LO DCB;
      955     2447
      956     2448        %F$DCB;
      957     2505
      958     2506
      959     2507        %FPT_CLOSE (DISP=RELEASE);
      960     2549        %VD$RECORD_SET;
      961     2627
      962     2628
      963     2629
      964     2630    1           IF VD_$$MON_PRES.V# > 0 THEN
      965     2631    1              CALL VDG$MPRES_WREMOVE (WINDOW_SPEC);
      966     2632
      967     2633    1           FPT_CLOSE.V.DCB# = WINDOW_SPEC.DCB#;
      968     2634
      969     2635    1           IF DCBADDR (FPT_CLOSE.V.DCB#) -> F$DCB.FCD# THEN
      970     2636    1              CALL M$CLOSE (FPT_CLOSE)
      971     2637    2              WHENALTRETURN DO;
      972     2638    2   MONERR:       CALL VDG$MONERR;
      973     2639    2                 ALTRETURN;
      974     2640    2                 END;
      975     2641    2           IF FPT_CLOSE.V.DCB# = DCBNUM(M$ME) THEN DO;
      976     2642    2              FPT_CLOSE.V.DCB# = DCBNUM(M$LO);
      977     2643    2              IF NOT DCBADDR(FPT_CLOSE.V.DCB#) -> F$DCB.FCD#
      978     2644    2                OR DCBADDR(FPT_CLOSE.V.DCB#) -> F$DCB.AMR# THEN EXIT;
      979     2645    2              CALL M$CLOSE (FPT_CLOSE) ALTRET (MONERR);
      980     2646    2              END;
      981     2647
      982     2648    1           CALL VDG$OFREE_DCB (WINDOW_SPEC.DCB#)
      983     2649    2           WHENALTRETURN DO; ALTRETURN; END;
      984     2650    1           WINDOW_SPEC.DCB# = 0;
      985     2651
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:138  
      986     2652    2           IF WINDOW_SPEC.RECORD_SET$ ~= ADDR(NIL) THEN DO;
      987     2653    2              CALL VDG$OFREE (WINDOW_SPEC.RECORD_SET$->VD$RECORD_SET)
      988     2654    3              WHENALTRETURN DO; ALTRETURN; END;
      989     2655    2              WINDOW_SPEC.RECORD_SET$ = ADDR(NIL);
      990     2656    2              END;
      991     2657
      992     2658    1           RETURN;
      993     2659
      994     2660    1   END VDP$WREMOVE;
      995     2661        %EOD;

PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:139  
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WREMOVE.

   Procedure VDP$WREMOVE requires 74 words for executable code.
   Procedure VDP$WREMOVE requires 6 words of local(AUTO) storage.

PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:140  

 Object Unit name= VDP$WREMOVE                                File name= VDP$WINDOWS.:VDA5TOU
 UTS= JUL 04 '97 11:39:04.56 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$ME
    2   DCB   even  none     0      0  M$LO
    3   Data  even  none    30     36  VDP$WREMOVE
    4   Proc  even  none    74    112  VDP$WREMOVE
    5  RoData even  none     2      2  VDP$WREMOVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        1  VDP$WREMOVE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 VDG$MPRES_WREMOVE
 yes     yes           Std       0 VDG$MONERR
 yes     yes           Std       1 VDG$OFREE
 yes     yes           Std       1 VDG$OFREE_DCB
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:141  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VD_$$MON_PRES                         M$ME
     M$LO                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:142  


      912        1        /*T***********************************************************/
      913        2        /*T*                                                         */
      914        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      915        4        /*T*                                                         */
      916        5        /*T***********************************************************/
      917        6
      918        7        /*D* NAME: VDP$WREMOVE
      919        8            PARAMETERS:
      920        9                WINDOW_SPEC - VD$WINDOW_SPEC for the window being removed:
      921       10                    .DCB# must specify the DCB # the window is using.  The DCB must
      922       11                        currently be open.
      923       12                    .RECORD_SET$ must either be NIL, or point to a VD$RECORD_SET for
      924       13                        the window.
      925       14            INPUT:
      926       15                None.
      927       16            OUTPUT:
      928       17                WINDOW_SPEC's:
      929       18                    .DCB# will contain 0, and the DCB freed.
      930       19                    .RECORD_SET$ will be NIL and the VD$RECORD_SET freed.
      931       20            DESCRIPTION:
      932       21                Close the window's DCB.  We specify DISP=RELEASE on this close for
      933       22                    ORG=SE windows.
      934       23                Free the window's DCB.
      935       24                If the window has a record set, free it.
      936       25        */
      937       26
      938       27        VDP$WREMOVE: PROC (WINDOW_SPEC) ALTRET;

     27  4 000000   000000 700200 xent  VDP$WREMOVE  TSX0  ! X66_AUTO_1
         4 000001   000006 000001                    ZERO    6,1

      939       28
      940       29        %INCLUDE VD_MACROS_M;
      941     2244        %INCLUDE CP_6;
      942     2325
      943     2326        %VD$WINDOW_SPEC (NAME=WINDOW_SPEC, STCLASS=PARAM);
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:143  
      944     2392
      945     2393
      946     2394    1   DCL VDG$MONERR          ENTRY ALTRET;
      947     2395    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
      948     2396    1   DCL VDG$OFREE_DCB       ENTRY (1) ALTRET;
      949     2397    1   DCL VDG$MPRES_WREMOVE   ENTRY (1);
      950     2398
      951     2399
      952     2400        %VD$NUMBER (NAME=VD_$$MON_PRES, STCLASS=SYMREF);
      953     2445    1   DCL M$ME DCB;
      954     2446    1   DCL M$LO DCB;
      955     2447
      956     2448        %F$DCB;
      957     2505
      958     2506
      959     2507        %FPT_CLOSE (DISP=RELEASE);
      960     2549        %VD$RECORD_SET;
      961     2627
      962     2628
      963     2629
      964     2630    1           IF VD_$$MON_PRES.V# > 0 THEN

   2630  4 000002   000003 235000 xsym               LDA     VD_$$MON_PRES+3
         4 000003   000010 604400 4                  TMOZ    s:2633

      965     2631    1              CALL VDG$MPRES_WREMOVE (WINDOW_SPEC);

   2631  4 000004   200003 630500                    EPPR0   @WINDOW_SPEC,,AUTO
         4 000005   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000006   000000 701000 xent               TSX1    VDG$MPRES_WREMOVE
         4 000007   000000 011000                    NOP     0

      966     2632
      967     2633    1           FPT_CLOSE.V.DCB# = WINDOW_SPEC.DCB#;

   2633  4 000010   200003 470500                    LDP0    @WINDOW_SPEC,,AUTO
         4 000011   000014 720100                    LXL0    12,,PR0
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:144  
         4 000012   000032 740000 3                  STX0    FPT_CLOSE+26

      968     2634
      969     2635    1           IF DCBADDR (FPT_CLOSE.V.DCB#) -> F$DCB.FCD# THEN

   2635  4 000013   000000 471400 5                  LDP1    0
         4 000014   100000 473500                    LDP3    0,,PR1
         4 000015   300000 474510                    LDP4    0,X0,PR3
         4 000016   400031 236100                    LDQ     25,,PR4
         4 000017   020000 316007                    CANQ    8192,DL
         4 000020   000032 600000 4                  TZE     s:2641

      970     2636    1              CALL M$CLOSE (FPT_CLOSE)

   2636  4 000021   000000 630400 3                  EPPR0   FPT_CLOSE
         4 000022   450001 713400                    CLIMB   alt,close
         4 000023   406000 401760                    pmme    nvectors=13
         4 000024   000026 702000 4                  TSX2    MONERR
         4 000025   000032 710000 4                  TRA     s:2641

      971     2637    2              WHENALTRETURN DO;

      972     2638    2   MONERR:       CALL VDG$MONERR;

   2638  4 000026   000002 631400 xsym  MONERR       EPPR1   B_VECTNIL+2
         4 000027   000000 701000 xent               TSX1    VDG$MONERR
         4 000030   000000 011000                    NOP     0

      973     2639    2                 ALTRETURN;

   2639  4 000031   000000 702200 xent               TSX2  ! X66_AALT

      974     2640    2                 END;
      975     2641    2           IF FPT_CLOSE.V.DCB# = DCBNUM(M$ME) THEN DO;

   2641  4 000032   000000 236007 xsym               LDQ     M$ME,DL
         4 000033   200004 756100                    STQ     @WINDOW_SPEC+1,,AUTO
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:145  
         4 000034   000032 236000 3                  LDQ     FPT_CLOSE+26
         4 000035   000022 772000                    QRL     18
         4 000036   200004 116100                    CMPQ    @WINDOW_SPEC+1,,AUTO
         4 000037   000057 601000 4                  TNZ     s:2648

      976     2642    2              FPT_CLOSE.V.DCB# = DCBNUM(M$LO);

   2642  4 000040   000000 236007 xsym               LDQ     M$LO,DL
         4 000041   000000 620006                    EAX0    0,QL
         4 000042   000032 740000 3                  STX0    FPT_CLOSE+26

      977     2643    2              IF NOT DCBADDR(FPT_CLOSE.V.DCB#) -> F$DCB.FCD#

   2643  4 000043   000000 470400 5                  LDP0    0
         4 000044   000000 471500                    LDP1    0,,PR0
         4 000045   100000 473510                    LDP3    0,X0,PR1
         4 000046   300031 236100                    LDQ     25,,PR3
         4 000047   020000 316007                    CANQ    8192,DL
         4 000050   000057 600000 4                  TZE     s:2648
         4 000051   010000 316007                    CANQ    4096,DL
         4 000052   000057 601000 4                  TNZ     s:2648

      978     2644    2                OR DCBADDR(FPT_CLOSE.V.DCB#) -> F$DCB.AMR# THEN EXIT;
      979     2645    2              CALL M$CLOSE (FPT_CLOSE) ALTRET (MONERR);

   2645  4 000053   000000 630400 3                  EPPR0   FPT_CLOSE
         4 000054   450001 713400                    CLIMB   alt,close
         4 000055   406000 401760                    pmme    nvectors=13
         4 000056   000026 702000 4                  TSX2    MONERR

      980     2646    2              END;

      981     2647
      982     2648    1           CALL VDG$OFREE_DCB (WINDOW_SPEC.DCB#)

   2648  4 000057   200003 236100                    LDQ     @WINDOW_SPEC,,AUTO
         4 000060   000001 036000 5                  ADLQ    1
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:146  
         4 000061   200004 756100                    STQ     @WINDOW_SPEC+1,,AUTO
         4 000062   200004 630500                    EPPR0   @WINDOW_SPEC+1,,AUTO
         4 000063   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000064   000000 701000 xent               TSX1    VDG$OFREE_DCB
         4 000065   000067 702000 4                  TSX2    s:2649
         4 000066   000070 710000 4                  TRA     s:2650

      983     2649    2           WHENALTRETURN DO; ALTRETURN; END;

   2649  4 000067   000000 702200 xent               TSX2  ! X66_AALT

      984     2650    1           WINDOW_SPEC.DCB# = 0;

   2650  4 000070   000000 220003                    LDX0    0,DU
         4 000071   200003 470500                    LDP0    @WINDOW_SPEC,,AUTO
         4 000072   000014 440100                    SXL0    12,,PR0

      985     2651
      986     2652    2           IF WINDOW_SPEC.RECORD_SET$ ~= ADDR(NIL) THEN DO;

   2652  4 000073   000016 236100                    LDQ     14,,PR0
         4 000074   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000075   000111 600000 4                  TZE     s:2658

      987     2653    2              CALL VDG$OFREE (WINDOW_SPEC.RECORD_SET$->VD$RECORD_SET)

   2653  4 000076   000016 471500                    LDP1    14,,PR0
         4 000077   200004 451500                    STP1    @WINDOW_SPEC+1,,AUTO
         4 000100   200004 630500                    EPPR0   @WINDOW_SPEC+1,,AUTO
         4 000101   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000102   000000 701000 xent               TSX1    VDG$OFREE
         4 000103   000105 702000 4                  TSX2    s:2654
         4 000104   000106 710000 4                  TRA     s:2655

      988     2654    3              WHENALTRETURN DO; ALTRETURN; END;

   2654  4 000105   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:147  

      989     2655    2              WINDOW_SPEC.RECORD_SET$ = ADDR(NIL);

   2655  4 000106   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000107   200003 470500                    LDP0    @WINDOW_SPEC,,AUTO
         4 000110   000016 756100                    STQ     14,,PR0

      990     2656    2              END;

      991     2657
      992     2658    1           RETURN;

   2658  4 000111   000000 702200 xent               TSX2  ! X66_ARET
      993     2659
      994     2660    1   END VDP$WREMOVE;
      995     2661        %EOD;

PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:148  
--  Include file information  --

   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WREMOVE.
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:149  

 **** Variables and constants ****

  ****  Section 003  Data  VDP$WREMOVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1080)  r     1 FPT_CLOSE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @WINDOW_SPEC              *0-0-0/w STRC(900)   r     1 WINDOW_SPEC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 VD_$$MON_PRES

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$LO
     0-0-0N  NULL        r     1 M$ME                       0-0-0/w STRC(324)   r     1 VD$RECORD_SET


   Procedure VDP$WREMOVE requires 74 words for executable code.
   Procedure VDP$WREMOVE requires 6 words of local(AUTO) storage.
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:150  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:151  
          MINI XREF LISTING

F$DCB.ACTPOS
      2481**DCL      2481--REDEF
F$DCB.AMR#
      2468**DCL      2643>>IF
F$DCB.ARS#
      2455**DCL      2455--REDEF
F$DCB.ATTR
      2474**DCL      2475--REDEF
F$DCB.BORROW
      2489**DCL      2489--REDEF    2489--REDEF    2489--REDEF
F$DCB.DCBNAME.L
      2503**DCL      2503--IMP-SIZ
F$DCB.EOMCHAR#
      2459**DCL      2459--REDEF
F$DCB.FCD#
      2468**DCL      2635>>IF       2643>>IF
F$DCB.FLDID
      2484**DCL      2484--REDEF
F$DCB.FORM$
      2478**DCL      2478--REDEF
F$DCB.FSECT
      2494**DCL      2494--REDEF
F$DCB.FSN#
      2471**DCL      2471--REDEF    2471--REDEF    2472--REDEF
F$DCB.HEADER$
      2477**DCL      2477--REDEF
F$DCB.IXTNSIZE#
      2475**DCL      2475--REDEF
F$DCB.LASTSTA$
      2464**DCL      2464--REDEF
F$DCB.LVL
      2490**DCL      2490--REDEF
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:152  
F$DCB.NAME#.C
      2465**DCL      2465--REDEF
F$DCB.NOEOF
      2487**DCL      2487--REDEF
F$DCB.NRECS#
      2476**DCL      2476--REDEF
F$DCB.NRECX
      2495**DCL      2495--REDEF
F$DCB.OHDR
      2487**DCL      2487--REDEF
F$DCB.ORG#
      2470**DCL      2470--REDEF
F$DCB.PRECNO
      2493**DCL      2493--REDEF
F$DCB.RCSZ
      2499**DCL      2499--REDEF
F$DCB.RES#
      2466**DCL      2466--REDEF
F$DCB.SETX
      2478**DCL      2478--REDEF
F$DCB.TAB$
      2478**DCL      2478--REDEF
F$DCB.TDA
      2492**DCL      2493--REDEF
F$DCB.WSN#
      2466**DCL      2466--REDEF
FPT_CLOSE
      2530**DCL      2636<>CALL     2645<>CALL
FPT_CLOSE.SN_
      2530**DCL      2530--REDEF
FPT_CLOSE.UTL_
      2531**DCL      2531--REDEF
FPT_CLOSE.V
      2535**DCL      2530--DCLINIT
FPT_CLOSE.V.DCB#
      2536**DCL      2633<<ASSIGN   2635--IF       2641>>IF       2642<<ASSIGN   2643--IF       2643--IF
PL6.E3A0      #004=VDP$WREMOVE File=VDP$WINDOWS.:VDA5TSI                         FRI 07/04/97 11:39 Page:153  
FPT_CLOSE.V.EXPIRE#
      2545**DCL      2545--REDEF
FPT_CLOSE.V.TYPE#
      2543**DCL      2543--REDEF
FPT_CLOSE.V.XTNSIZE#
      2540**DCL      2540--REDEF    2542--REDEF
M$CLOSE
      2253**DCL-ENT  2636--CALL     2645--CALL
M$LO
      2446**DCL      2642>>ASSIGN
M$ME
      2445**DCL      2641>>IF
MONERR
      2638**LABEL    2645--CALLALT
VD$RECORD_SET
      2557**DCL      2653<>CALL
VDG$MONERR
      2394**DCL-ENT  2638--CALL
VDG$MPRES_WREMOVE
      2397**DCL-ENT  2631--CALL
VDG$OFREE
      2395**DCL-ENT  2653--CALL
VDG$OFREE_DCB
      2396**DCL-ENT  2648--CALL
VD_$$MON_PRES.V#
      2442**DCL      2630>>IF
WINDOW_SPEC
      2334**DCL        27--PROC     2631<>CALL
WINDOW_SPEC.DCB#
      2377**DCL      2633>>ASSIGN   2648<>CALL     2650<<ASSIGN
WINDOW_SPEC.RECORD_SET$
      2378**DCL      2652>>IF       2653>>CALL     2655<<ASSIGN

PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:154  
      996        1        /*T***********************************************************/
      997        2        /*T*                                                         */
      998        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      999        4        /*T*                                                         */
     1000        5        /*T***********************************************************/
     1001        6
     1002        7        /*D* NAME: VDP$WTERMINATE
     1003        8            PARAMETERS:
     1004        9                None.
     1005       10            INPUT:
     1006       11                VD_6E.WINDOWS$ - Ptr to VD$STREAM open to the internal Windows file.
     1007       12                VD_ORIGINAL_TRMCTL - a VLP_TRMCTL containing the pre-6Edit TRMCTL specs.
     1008       13                VD_ORIGINAL_TAB - a VLP_TAB containing the pre-6Edit TAB stops.
     1009       14            OUTPUT:
     1010       15                VD_SCREEN_HEIGHT will be set to 0.
     1011       16            DESCRIPTION:
     1012       17                M$CLOSE all the windows in the Windows file.
     1013       18                Restore the terminal parameters to their pre-6Edit-invocation state.
     1014       19                Set VD_SCREEN_HEIGHT to 0.
     1015       20        */
     1016       21
     1017       22        VDP$WTERMINATE: PROC;
     1018       23
     1019       24        %INCLUDE VD_MACROS_M;
     1020     2239        %INCLUDE CP_6;
     1021     2320        %INCLUDE CP_6_SUBS;
     1022     2860        %INCLUDE NK_VFC_C;
     1023     2934
     1024     2935
     1025     2936    1   DCL VDG$ERASE_COMMAND_WINDOW ENTRY ALTRET;
     1026     2937    1   DCL VDP$WREMOVE ENTRY(1) ALTRET;
     1027     2938
     1028     2939
     1029     2940        %VD_6E (STCLASS=SYMREF);
     1030     2976    1   DCL VD_COMMAND_WINDOW$ PTR SYMREF;
     1031     2977        %VD$NUMBER (NAME = VD_$SCROLL, STCLASS = SYMREF);
     1032     3022    1   DCL VD_2DIM BIT(1) SYMREF;
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:155  
     1033     3023        %VLP_TRMCTL (FPTN=VD_ORIGINAL_TRMCTL, STCLASS=SYMREF);
     1034     3063        %VLP_TAB (FPTN=VD_ORIGINAL_TAB, STCLASS=SYMREF);
     1035     3077    1   DCL VD_SCREEN_HEIGHT UBIN SYMREF;
     1036     3078    1   DCL M$6E DCB;
     1037     3079
     1038     3080
     1039     3081        %FPT_TRMCTL (STCLASS=CONSTANT, TRMCTL=VD_ORIGINAL_TRMCTL);
     1040     3108        %FPT_DEVICE (STCLASS=CONSTANT, DCB=M$UC, TAB=VD_ORIGINAL_TAB);
     1041     3126
     1042     3127
     1043     3128
     1044     3129    1   DCL WINDOW$ PTR;
     1045     3130
     1046     3131
     1047     3132        %VD$FILE_NODE;
     1048     3225        %VD$PORT;
     1049     3323        %VD$STREAM;
     1050     3429        %VD$WINDOW_SPEC;
     1051     3495        %F$DCB;
     1052     3552
     1053     3553
     1054     3554
     1055     3555    1           IF VD_6E.WINDOWS$ = ADDR(NIL) THEN GOTO TERMINATE_DONE;
     1056     3556    1           IF VD_6E.WINDOWS$->VD$STREAM.PORT$ = ADDR(NIL) THEN GOTO TERMINATE_DONE;
     1057     3557
     1058     3558    1           WINDOW$ = VD_6E.WINDOWS$ -> VD$STREAM.PORT$ ->
     1059     3559    1             VD$PORT.LEVEL.INTERNAL$ (%LVL_FILE) -> VD$FILE_NODE.TAIL$;
     1060     3560    1           IF WINDOW$ = ADDR(NIL) THEN GOTO TERMINATE_DONE;
     1061     3561
     1062     3562    2           DO WHILE (WINDOW$ ~= ADDR (NIL));
     1063     3563    2              CALL VDP$WREMOVE(WINDOW$->VD$FILE_NODE.DESC.SPEC.V$->VD$WINDOW_SPEC);
     1064     3564    2              WINDOW$ = WINDOW$->VD$FILE_NODE.BLINK$;
     1065     3565    2              END;
     1066     3566
     1067     3567    1           VD_ORIGINAL_TRMCTL.OUTPUTDISCARD# = %IGNORE_YES_NO#;
     1068     3568
     1069     3569                /* Restore user's pre-6Edit terminal parameters */
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:156  
     1070     3570
     1071     3571    1           CALL M$DEVICE (FPT_DEVICE)
     1072     3572    2           WHENALTRETURN DO; END;    /* Ignore altreturn */
     1073     3573    1           CALL M$STRMCTL (FPT_TRMCTL)
     1074     3574    2           WHENALTRETURN DO; END;    /* Ignore altreturn */
     1075     3575    1           VD_$SCROLL.V# = BITBIN(VD_ORIGINAL_TRMCTL.SCROLL#)/2;
     1076     3576    1           VD_COMMAND_WINDOW$ = ADDR(NIL);
     1077     3577    1           IF VD_2DIM THEN
     1078     3578    1              CALL VDG$ERASE_COMMAND_WINDOW;
     1079     3579
     1080     3580    1           VD_SCREEN_HEIGHT = 0;
     1081     3581
     1082     3582    1   TERMINATE_DONE:
     1083     3583    1           RETURN;
     1084     3584
     1085     3585    1   END VDP$WTERMINATE;

PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:157  
--  Include file information  --

   NK_VFC_C.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WTERMINATE.

   Procedure VDP$WTERMINATE requires 56 words for executable code.
   Procedure VDP$WTERMINATE requires 6 words of local(AUTO) storage.

    No errors detected in file VDP$WINDOWS.:VDA5TSI    .

PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:158  

 Object Unit name= VDP$WTERMINATE                             File name= VDP$WINDOWS.:VDA5TOU
 UTS= JUL 04 '97 11:39:13.16 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$6E
    2  RoData even  UTS     18     22  VDP$WTERMINATE
    3   Proc  even  none    56     70  VDP$WTERMINATE
    4  RoData even  none     1      1  VDP$WTERMINATE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  VDP$WTERMINATE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 VDP$WREMOVE
 yes     yes           Std       0 VDG$ERASE_COMMAND_WINDOW
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:159  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  VD_6E                                 VD_COMMAND_WINDOW$
     VD_$SCROLL                            VD_2DIM                               VD_ORIGINAL_TRMCTL
     VD_ORIGINAL_TAB                       VD_SCREEN_HEIGHT                      M$6E
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:160  


      996        1        /*T***********************************************************/
      997        2        /*T*                                                         */
      998        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      999        4        /*T*                                                         */
     1000        5        /*T***********************************************************/
     1001        6
     1002        7        /*D* NAME: VDP$WTERMINATE
     1003        8            PARAMETERS:
     1004        9                None.
     1005       10            INPUT:
     1006       11                VD_6E.WINDOWS$ - Ptr to VD$STREAM open to the internal Windows file.
     1007       12                VD_ORIGINAL_TRMCTL - a VLP_TRMCTL containing the pre-6Edit TRMCTL specs.
     1008       13                VD_ORIGINAL_TAB - a VLP_TAB containing the pre-6Edit TAB stops.
     1009       14            OUTPUT:
     1010       15                VD_SCREEN_HEIGHT will be set to 0.
     1011       16            DESCRIPTION:
     1012       17                M$CLOSE all the windows in the Windows file.
     1013       18                Restore the terminal parameters to their pre-6Edit-invocation state.
     1014       19                Set VD_SCREEN_HEIGHT to 0.
     1015       20        */
     1016       21
     1017       22        VDP$WTERMINATE: PROC;

     22  3 000000   000000 700200 xent  VDP$WTERMIN* TSX0  ! X66_AUTO_0
         3 000001   000006 000000                    ZERO    6,0

     1018       23
     1019       24        %INCLUDE VD_MACROS_M;
     1020     2239        %INCLUDE CP_6;
     1021     2320        %INCLUDE CP_6_SUBS;
     1022     2860        %INCLUDE NK_VFC_C;
     1023     2934
     1024     2935
     1025     2936    1   DCL VDG$ERASE_COMMAND_WINDOW ENTRY ALTRET;
     1026     2937    1   DCL VDP$WREMOVE ENTRY(1) ALTRET;
     1027     2938
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:161  
     1028     2939
     1029     2940        %VD_6E (STCLASS=SYMREF);
     1030     2976    1   DCL VD_COMMAND_WINDOW$ PTR SYMREF;
     1031     2977        %VD$NUMBER (NAME = VD_$SCROLL, STCLASS = SYMREF);
     1032     3022    1   DCL VD_2DIM BIT(1) SYMREF;
     1033     3023        %VLP_TRMCTL (FPTN=VD_ORIGINAL_TRMCTL, STCLASS=SYMREF);
     1034     3063        %VLP_TAB (FPTN=VD_ORIGINAL_TAB, STCLASS=SYMREF);
     1035     3077    1   DCL VD_SCREEN_HEIGHT UBIN SYMREF;
     1036     3078    1   DCL M$6E DCB;
     1037     3079
     1038     3080
     1039     3081        %FPT_TRMCTL (STCLASS=CONSTANT, TRMCTL=VD_ORIGINAL_TRMCTL);
     1040     3108        %FPT_DEVICE (STCLASS=CONSTANT, DCB=M$UC, TAB=VD_ORIGINAL_TAB);
     1041     3126
     1042     3127
     1043     3128
     1044     3129    1   DCL WINDOW$ PTR;
     1045     3130
     1046     3131
     1047     3132        %VD$FILE_NODE;
     1048     3225        %VD$PORT;
     1049     3323        %VD$STREAM;
     1050     3429        %VD$WINDOW_SPEC;
     1051     3495        %F$DCB;
     1052     3552
     1053     3553
     1054     3554
     1055     3555    1           IF VD_6E.WINDOWS$ = ADDR(NIL) THEN GOTO TERMINATE_DONE;

   3555  3 000002   000006 236000 xsym               LDQ     VD_6E+6
         3 000003   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000004   000067 600000 3                  TZE     TERMINATE_DONE

     1056     3556    1           IF VD_6E.WINDOWS$->VD$STREAM.PORT$ = ADDR(NIL) THEN GOTO TERMINATE_DONE;

   3556  3 000005   000006 470400 xsym               LDP0    VD_6E+6
         3 000006   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:162  
         3 000007   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000010   000067 600000 3                  TZE     TERMINATE_DONE

     1057     3557
     1058     3558    1           WINDOW$ = VD_6E.WINDOWS$ -> VD$STREAM.PORT$ ->

   3558  3 000011   000001 471500                    LDP1    1,,PR0
         3 000012   100031 473500                    LDP3    25,,PR1
         3 000013   300013 236100                    LDQ     11,,PR3
         3 000014   200003 756100                    STQ     WINDOW$,,AUTO

     1059     3559    1             VD$PORT.LEVEL.INTERNAL$ (%LVL_FILE) -> VD$FILE_NODE.TAIL$;
     1060     3560    1           IF WINDOW$ = ADDR(NIL) THEN GOTO TERMINATE_DONE;

   3560  3 000015   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000016   000067 600000 3                  TZE     TERMINATE_DONE

     1061     3561
     1062     3562    2           DO WHILE (WINDOW$ ~= ADDR (NIL));

   3562  3 000017   000032 710000 3                  TRA     s:3565

     1063     3563    2              CALL VDP$WREMOVE(WINDOW$->VD$FILE_NODE.DESC.SPEC.V$->VD$WINDOW_SPEC);

   3563  3 000020   200003 470500                    LDP0    WINDOW$,,AUTO
         3 000021   000007 471500                    LDP1    7,,PR0
         3 000022   200004 451500                    STP1    WINDOW$+1,,AUTO
         3 000023   200004 630500                    EPPR0   WINDOW$+1,,AUTO
         3 000024   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000025   000000 701000 xent               TSX1    VDP$WREMOVE
         3 000026   000000 011000                    NOP     0

     1064     3564    2              WINDOW$ = WINDOW$->VD$FILE_NODE.BLINK$;

   3564  3 000027   200003 470500                    LDP0    WINDOW$,,AUTO
         3 000030   000001 236100                    LDQ     1,,PR0
         3 000031   200003 756100                    STQ     WINDOW$,,AUTO
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:163  

     1065     3565    2              END;

   3565  3 000032   000001 116000 xsym               CMPQ    B_VECTNIL+1
         3 000033   000020 601000 3                  TNZ     s:3563

     1066     3566
     1067     3567    1           VD_ORIGINAL_TRMCTL.OUTPUTDISCARD# = %IGNORE_YES_NO#;

   3567  3 000034   000000 236000 xsym               LDQ     VD_ORIGINAL_TRMCTL
         3 000035   000000 376000 4                  ANQ     0
         3 000036   000001 276003                    ORQ     1,DU
         3 000037   000000 756000 xsym               STQ     VD_ORIGINAL_TRMCTL

     1068     3568
     1069     3569                /* Restore user's pre-6Edit terminal parameters */
     1070     3570
     1071     3571    1           CALL M$DEVICE (FPT_DEVICE)

   3571  3 000040   000010 630400 2                  EPPR0   FPT_DEVICE
         3 000041   450006 713400                    CLIMB   alt,+20486
         3 000042   401000 401760                    pmme    nvectors=3
         3 000043   000045 702000 3                  TSX2    s:3573
         3 000044   000045 710000 3                  TRA     s:3573

     1072     3572    2           WHENALTRETURN DO; END;    /* Ignore altreturn */

     1073     3573    1           CALL M$STRMCTL (FPT_TRMCTL)

   3573  3 000045   000000 630400 2                  EPPR0   FPT_TRMCTL
         3 000046   560000 713400                    CLIMB   alt,+57344
         3 000047   401000 401760                    pmme    nvectors=3
         3 000050   000052 702000 3                  TSX2    s:3575
         3 000051   000052 710000 3                  TRA     s:3575

     1074     3574    2           WHENALTRETURN DO; END;    /* Ignore altreturn */

PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:164  
     1075     3575    1           VD_$SCROLL.V# = BITBIN(VD_ORIGINAL_TRMCTL.SCROLL#)/2;

   3575  3 000052   000001 236000 xsym               LDQ     VD_ORIGINAL_TRMCTL+1
         3 000053   000041 772000                    QRL     33
         3 000054   000003 376007                    ANQ     3,DL
         3 000055   000001 772000                    QRL     1
         3 000056   000003 756000 xsym               STQ     VD_$SCROLL+3

     1076     3576    1           VD_COMMAND_WINDOW$ = ADDR(NIL);

   3576  3 000057   000001 236000 xsym               LDQ     B_VECTNIL+1
         3 000060   000000 756000 xsym               STQ     VD_COMMAND_WINDOW$

     1077     3577    1           IF VD_2DIM THEN

   3577  3 000061   000000 234000 xsym               SZN     VD_2DIM
         3 000062   000066 605000 3                  TPL     s:3580

     1078     3578    1              CALL VDG$ERASE_COMMAND_WINDOW;

   3578  3 000063   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000064   000000 701000 xent               TSX1    VDG$ERASE_COMMAND_WINDOW
         3 000065   000000 011000                    NOP     0

     1079     3579
     1080     3580    1           VD_SCREEN_HEIGHT = 0;

   3580  3 000066   000000 450000 xsym               STZ     VD_SCREEN_HEIGHT

     1081     3581
     1082     3582    1   TERMINATE_DONE:
     1083     3583    1           RETURN;

   3583  3 000067   000000 702200 xent  TERMINATE_D* TSX2  ! X66_ARET
     1084     3584
     1085     3585    1   END VDP$WTERMINATE;

PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:165  
--  Include file information  --

   NK_VFC_C.:LIBRARY  is referenced.
   CP_6_SUBS.:LIBRARY  is referenced.
   CP_6.:LIBRARY  cannot be made into a system file and is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VDP$WTERMINATE.
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:166  

 **** Variables and constants ****

  ****  Section 002 RoData VDP$WTERMINATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/d STRC(360)   r     1 FPT_DEVICE                 0-0-0/d STRC(288)   r     1 FPT_TRMCTL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 WINDOW$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 VD_$SCROLL                 0-0-0/b BIT         r     1 VD_2DIM
     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/w PTR         r     1 VD_COMMAND_WINDOW$
     0-0-0/w STRC(288)   r     1 VD_ORIGINAL_TAB            0-0-0/d STRC(144)   r     1 VD_ORIGINAL_TRMCTL
     0-0-0/w UBIN        r     1 VD_SCREEN_HEIGHT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$UC
     0-0-0/w STRC(468)   r     1 VD$FILE_NODE               0-0-0/w STRC(1944)  r     1 VD$PORT
     0-0-0/w STRC(864)   r     1 VD$STREAM                  0-0-0/w STRC(900)   r     1 VD$WINDOW_SPEC

PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:167  

   Procedure VDP$WTERMINATE requires 56 words for executable code.
   Procedure VDP$WTERMINATE requires 6 words of local(AUTO) storage.

    No errors detected in file VDP$WINDOWS.:VDA5TSI    .
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:168  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:169  
          MINI XREF LISTING

F$DCB.ACTPOS
      3528**DCL      3528--REDEF
F$DCB.ARS#
      3502**DCL      3502--REDEF
F$DCB.ATTR
      3521**DCL      3522--REDEF
F$DCB.BORROW
      3536**DCL      3536--REDEF    3536--REDEF    3536--REDEF
F$DCB.DCBNAME.L
      3550**DCL      3550--IMP-SIZ
F$DCB.EOMCHAR#
      3506**DCL      3506--REDEF
F$DCB.FLDID
      3531**DCL      3531--REDEF
F$DCB.FORM$
      3525**DCL      3525--REDEF
F$DCB.FSECT
      3541**DCL      3541--REDEF
F$DCB.FSN#
      3518**DCL      3518--REDEF    3518--REDEF    3519--REDEF
F$DCB.HEADER$
      3524**DCL      3524--REDEF
F$DCB.IXTNSIZE#
      3522**DCL      3522--REDEF
F$DCB.LASTSTA$
      3511**DCL      3511--REDEF
F$DCB.LVL
      3537**DCL      3537--REDEF
F$DCB.NAME#.C
      3512**DCL      3512--REDEF
F$DCB.NOEOF
      3534**DCL      3534--REDEF
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:170  
F$DCB.NRECS#
      3523**DCL      3523--REDEF
F$DCB.NRECX
      3542**DCL      3542--REDEF
F$DCB.OHDR
      3534**DCL      3534--REDEF
F$DCB.ORG#
      3517**DCL      3517--REDEF
F$DCB.PRECNO
      3540**DCL      3540--REDEF
F$DCB.RCSZ
      3546**DCL      3546--REDEF
F$DCB.RES#
      3513**DCL      3513--REDEF
F$DCB.SETX
      3525**DCL      3525--REDEF
F$DCB.TAB$
      3525**DCL      3525--REDEF
F$DCB.TDA
      3539**DCL      3540--REDEF
F$DCB.WSN#
      3513**DCL      3513--REDEF
FPT_DEVICE
      3119**DCL      3571<>CALL
FPT_DEVICE.V
      3120**DCL      3119--DCLINIT
FPT_TRMCTL
      3097**DCL      3573<>CALL
FPT_TRMCTL.V
      3105**DCL      3099--DCLINIT
M$DEVICE
      2252**DCL-ENT  3571--CALL
M$STRMCTL
      2272**DCL-ENT  3573--CALL
TERMINATE_DONE
      3583**LABEL    3555--GOTO     3556--GOTO     3560--GOTO
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:171  
VD$FILE_NODE.BLINK$
      3166**DCL      3564>>ASSIGN
VD$FILE_NODE.DESC.SPEC.V$
      3219**DCL      3563>>CALL
VD$FILE_NODE.TAIL$
      3223**DCL      3558>>ASSIGN
VD$PORT.LEVEL.INTERNAL$
      3320**DCL      3558>>ASSIGN
VD$STREAM.PORT$
      3357**DCL      3556>>IF       3558>>ASSIGN
VD$WINDOW_SPEC
      3437**DCL      3563<>CALL
VDG$ERASE_COMMAND_WINDOW
      2936**DCL-ENT  3578--CALL
VDP$WREMOVE
      2937**DCL-ENT  3563--CALL
VD_$SCROLL.V#
      3019**DCL      3575<<ASSIGN
VD_2DIM
      3022**DCL      3577>>IF
VD_6E.WINDOWS$
      2954**DCL      3555>>IF       3556>>IF       3558>>ASSIGN
VD_COMMAND_WINDOW$
      2976**DCL      3576<<ASSIGN
VD_ORIGINAL_TAB
      3074**DCL      3119--DCLINIT
VD_ORIGINAL_TRMCTL
      3040**DCL      3103--DCLINIT
VD_ORIGINAL_TRMCTL.BREAKCOUNT
      3052**DCL      3052--REDEF
VD_ORIGINAL_TRMCTL.OUTPUTDISCARD#
      3043**DCL      3567<<ASSIGN
VD_ORIGINAL_TRMCTL.SCROLL#
      3048**DCL      3575>>ASSIGN
VD_SCREEN_HEIGHT
      3077**DCL      3580<<ASSIGN
PL6.E3A0      #005=VDP$WTERMINATE File=VDP$WINDOWS.:VDA5TSI                      FRI 07/04/97 11:39 Page:172  
WINDOW$
      3129**DCL      3558<<ASSIGN   3560>>IF       3562>>DOWHILE  3563>>CALL     3564<<ASSIGN   3564>>ASSIGN
