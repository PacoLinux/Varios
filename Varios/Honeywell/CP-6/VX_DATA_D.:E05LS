VERSION E05

PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:1    
        1        1        /*M* VX_DATA_D - SYMDEFs for LINK   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5          */
        8        8        VX_DATA_D:
        9        9             PROC;
       10       10        /* ! ! */
       11       11        %INCLUDE VX_SUBS_C;
       12      229        %INCLUDE VX_PERR_C;
       13      483        %INCLUDE VX_MACRO_C;
       14     1620        %INCLUDE B$JIT;
       15     2223        %INCLUDE B_SEGIDS_C;
       16     2762        %INCLUDE B$OBJECT_C;
       17     6192        %B$RECORDSUBS;
       18     6220        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:2    
       19     6221        %VXR$TMPLT;

              6234    1   /*******************************************************************************
              6235    1   *                                                                              *
              6236    1   *                          VXR$TMPLT                                               *
              6237    1   *                                                                              *
              6238    1   *******************************************************************************/

              6243    1   DCL 1 VXR$TMPLT BASED ALIGNED,
              6244    1         2 NPOINTER SBIN HALF UNAL,
              6245                /*K*  NPOINTER is the word index to the symbol name.  */
              6246    1         2 SREF BIT(1) UNAL,
              6247                /*K*  SREF is set is this is a secondary reference.  */
              6248    1         2 READ_ONLY BIT(1) UNAL,
              6249    1         2 GOT BIT(1) UNAL,
              6250                /*K*  GOT is set if got the OU name displacement.  */
              6251    1         2 STATE REDEF GOT BIT(1) UNAL,
              6252    1         2 OPOINTER UBIN(15) UNAL;
              6253                /*K*  OPOINTER is the word index to the OU name.  */

              6275    1   /*******************************************************************************
              6276    1   *                                                                              *
              6277    1   *                          VXR$SAT                                                 *
              6278    1   *                                                                              *
              6279    1   *******************************************************************************/

              6283    1   DCL 1 VXR$SAT                 ALIGNED   BASED,
              6284    1         2 VALUE        UBIN(36)  ALIGNED,
              6285    1         2 SEG   REDEF  VALUE,
              6286    1           3 OFFSET     UBIN(18)  UNAL,
              6287    1           3 *          BIT(6)    UNAL,
              6288    1           3 SEGID      UBIN(12)  UNAL,
              6289    1         2 BELOW        BIT(1)    UNAL,
              6290    1         2 *            BIT(17)   UNAL,
              6291    1         2 NODE#        UBIN(18)  UNAL;
       20     6293        %VX$SC;

PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:3    
              6306    1   /*******************************************************************************
              6307    1   *                                                                              *
              6308    1   *                          VX$SC                                                 *
              6309    1   *                                                                              *
              6310    1   *******************************************************************************/

              6315    1   DCL 1 VX$SC BASED ALIGNED,
              6316    1         2 SEG UBIN(3) UNAL,
              6317                /*K*  SEG - The segment number of this section */
              6318    1         2 TYPE UBIN(6) UNAL,
              6319                /*K*  TYPE -
              6320                      Type code      Section type
              6321                      ---------      ------------
              6322                          0          Data control section with write access.
              6323                          1          Procedure control section.
              6324                          2          Unlabeled common, name pointer must be zero.
              6325                          3          Labeled common, with mandatory name pointer.
              6326                                     This is for labeled common which must be
              6327                                     in the root.
              6328                          4          Labeled common, with mandatory name pointer.
              6329                                     This is for labeled common which need not
              6330                                     be in the root.
              6331                          5          DCB, word 1 is name pointer.
              6332                          6          Data control section with read only access,
              6333                                     word 1 = 0 or name pointer.      */
              6334    1         2 EMPTY BIT(1) UNAL,
              6335                /*K*  EMPTY is the empty bit.  This bit is set if the control
              6336                      section is of size zero.  */
              6337    1         2 ATTR UNAL,
              6338    1           3 INT  UBIN(2) UNAL,
              6339                  /*K*  INT is the Section initialization.  */
              6340    1           3 SEGMENT BIT(1) UNAL,
              6341                  /*K* SEGMENT is set if the Section is defined in a data
              6342                       segment.  */
              6343    1           3 ALL BIT(1) UNAL,
              6344                  /*K*  ALL is set if the Section is allocated.  */
              6345    1           3 PRE_DCB BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:4    
              6346                  /*K*  PRE_DCB is set if a Pre_defined DCB.  */
              6347    1           3 MES_INIT BIT(1) UNAL,
              6348    1           3 ALIGN UBIN(2) UNAL,
              6349                  /*K*  ALIGN is the Section alignment.  */
              6350    1         2 ADDRESS UBIN HALF UNAL,
              6351                /*K*  ADDRESS is the address within the Instruction Segment of
              6352                      the entry point of the external procedure.  */
              6353    1         2 NAME_DISP SBIN HALF UNAL,
              6354                /*K*  NAME_DISP is the Name index.  */
              6355    1         2 SIZE UBIN HALF UNAL,
              6356                /*K*  SIZE is the size, in words, of the section.  */
              6357    1         2 NODE# UBIN HALF UNAL,
              6358                /*K*  NODE# is the Node number of section.  */
              6359    1         2 COM_LINK UBIN HALF UNAL;
              6360                /*K*  COM_LINK is used internally by linker to link common sections */

              6370    1   /*******************************************************************************
              6371    1   *                                                                              *
              6372    1   *                          VX$SECT                                                 *
              6373    1   *                                                                              *
              6374    1   *******************************************************************************/

              6379    1   DCL 1 VX$SECT BASED ALIGNED,
              6380    1         2 TYPE UBIN BYTE UNAL,
              6381                /*K*  TYPE -
              6382                      Type code      Section type
              6383                      ---------      ------------
              6384                          0          Data control section with write access.
              6385                          1          Procedure control section.
              6386                          2          Unlabeled common, name pointer must be zero.
              6387                          3          Labeled common, with mandatory name pointer.
              6388                                     This is for labeled common which must be
              6389                                     in the root.
              6390                          4          Labeled common, with mandatory name pointer.
              6391                                     This is for labeled common which need not
              6392                                     be in the root.
              6393                          5          DCB, word 1 is name pointer.
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:5    
              6394                          6          Data control section with read only access,
              6395                                     word 1 = 0 or name pointer.
              6396                          7          Constant labeled common, with mandatory name pointer.
              6397                                     This is for labeled common which must be
              6398                                     in the root.
              6399                          8          Constant labeled common, with mandatory name pointer.
              6400                                     This is for labeled common which need not
              6401                                     be in the root.                        */
              6402    1         2 * BIT(1),
              6403                /*K*  * is reserved for future use and must be zero. */
              6404    1         2 INITZERO BIT(1),
              6405                /*K*  INITZERO - if 1, initialize with zero.  */
              6406    1         2 INITUTS BIT(1),
              6407                /*K*  INITUTS - if 1, initialize with UTS.  */
              6408    1         2 SEGMENT BIT(1),
              6409                /*K*  SEGMENT - if 1, specifies that this section is
              6410                                to be placed in the segment specified by
              6411                                SEG_NPOINTER.  */
              6412    1         2 * BIT(3),
              6413                /*K*  * is reserved for future use and must be zero. */
              6414    1         2 BOUND UBIN(2) UNAL,
              6415                /*K*  BOUND - bits 6-7 - defines starting location.
              6416                              00 - starts on even word
              6417                              01 - starts on odd word
              6418                              10 - starts on multiple of 8
              6419                              11 - starts on page boundary     */
              6420    1         2 SIZE UBIN HALF UNAL,
              6421                /*K*  SIZE is the size, in words, of the section.  */
              6422    1         2 NPOINTER SBIN HALF UNAL,
              6423                /*K*  NPOINTER is the word displacement into the name record
              6424                      (TYPE 1) locating the name of this section.  If the
              6425                      field is negative, the section has no name.  */
              6426    1         2 MBZ UBIN HALF UNAL,
              6427                /*K*  MBZ is reserved for future expansion and must be zero. */
              6428    1         2 SEG_NPOINTER REDEF MBZ SBIN HALF UNAL,
              6429                /*K*  SEG_NPOINTER locates a name in the Definition Names
              6430                      Section.  The name must be a valid segment name
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:6    
              6431                      recognized by the linker.  */
              6432    1         2 G66 REDEF MBZ,
              6433                /*K*  G66 is not used on CP-6. */
              6434    1           3 * BIT(9),
              6435    1           3 NSAB BIT(9);
       21     6438        %TMPLT;

              6450    1   /*******************************************************************************
              6451    1   *                                                                              *
              6452    1   *                          TMPLT                                                 *
              6453    1   *                                                                              *
              6454    1   *******************************************************************************/

              6459    1   DCL 1 VX$TMPLT           ALIGNED BASED, /* Template for defs                  */
              6460    1         2 A(0:3)       UBIN(18)  UNAL,    /* Array access                       */
              6461    1         2 A_SBIN(0:3) REDEF A    SBIN HALF UNAL,
              6462    1         2 W       REDEF     A,            /* By name                            */
              6463    1           3 WORD0       UBIN(36)  UNAL,   /* First word                         */
              6464    1           3 WORD1       UBIN(36)  UNAL;   /* Second word                        */
       22     6467        %VX$NODE;

              6479    1   /*******************************************************************************
              6480    1   *                                                                              *
              6481    1   *                          VX$NODE                                                 *
              6482    1   *                                                                              *
              6483    1   *******************************************************************************/

              6499    1   DCL 1 VX$NODE      ALIGNED    BASED,
              6500    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
              6501    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
              6502    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
              6503    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
              6504    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
              6505                              to list of file nodes for this node            */
              6506    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
              6507    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
              6507                  /* Head pointer to shared library list */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:7    
              6508    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
              6508                  /* Head pointer to list of shared libraries
              6509                                          which have been mapped to included libraries */
              6510    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
              6511    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
              6512    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
              6513    1         2 ADDR_START REDEF  ADDR_START_A,
              6514    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
              6515    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
              6516    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
              6517    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
              6518    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
              6519    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
              6520    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
              6521    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
              6522    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
              6523    1         2 START_PAGE# REDEF START_PAGE#_A,
              6524    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
              6525    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
              6526    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
              6527    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
              6528    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
              6529    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
              6530    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
              6531    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
              6532    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
              6532                  /* Starting pointer for common sections for this node */
              6533    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
              6533                  /* Stopping pointer for common sections for this node */
              6534    1         2 L_START,
              6535    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
              6536    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
              6537    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
              6538    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
              6539    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
              6540    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
              6541    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:8    
              6542    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
              6543    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
              6544    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
              6545    1         2 L_START_A$(0:9)     REDEF L_START PTR,
              6546    1         2 L_STOP,
              6547    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
              6548    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
              6549    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
              6550    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
              6551    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
              6552    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
              6553    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
              6554    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
              6555    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
              6556    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
              6557    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
              6558    1         2 L_SIZE,
              6559    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
              6560    1           3 DN      UBIN /*(0)*/, /* Def names                          */
              6561    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
              6562    1           3 SC      UBIN /*(0)*/, /* Sections                           */
              6563    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
              6564    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
              6565    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
              6566    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
              6567    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
              6568    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
              6569    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
              6570    1         2 L_PREV_SIZE,
              6571    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
              6572    1           3 DN      UBIN /*(0)*/, /* Def names                          */
              6573    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
              6574    1           3 SC      UBIN /*(0)*/, /* Sections                           */
              6575    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
              6576    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
              6577    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
              6578    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:9    
              6579    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
              6580    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
              6581    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
              6582    1         2 BIT_MAP                ALIGNED,
              6583    1           3 DATA                  ALIGNED,
              6584    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6585    1           3 RPROC                 ALIGNED,
              6586    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6587    1           3 ROS                   ALIGNED,
              6588    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6589    1         2 L_SC_START,
              6590    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
              6591    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
              6592    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
              6593    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
              6594    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
              6595    1         2 L_SC_STOP,
              6596    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
              6597    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
              6598    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
              6599    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
              6600    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
              6601    1         2 PROMOTE_HEAD,
              6602    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
              6603    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
              6604    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
              6605    1         2 PROMOTE_TAIL,
              6606    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
              6607    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
              6608    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
              6609    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
              6610    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
              6611    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
              6612    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
              6613    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       23     6617        %VX$LST;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:10   

              6630    1   /*******************************************************************************
              6631    1   *                                                                              *
              6632    1   *                          VX$LST                                                 *
              6633    1   *                                                                              *
              6634    1   *******************************************************************************/

              6639    1   DCL 1 VX$LST                          ALIGNED BASED,
              6640    1         2 LINK$        PTR,               /* Link to next item                  */
              6641    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
              6642    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
              6643    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
              6644    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
              6645    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
              6646    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
              6647    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
              6648    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
              6649    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
              6650    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
              6651    1         2 P,
              6652    1           3 NAME_       ALIGNED,
              6653    1             4 BOUND      UBIN(20)  UNAL,
              6654    1             4 FLAGSV     UBIN(11)  UNAL,
              6655    1             4 *          BIT(5)    UNAL,
              6656    1             4 NAME$      PTR,
              6657    1           3 ACCT_       ALIGNED,
              6658    1             4 BOUND      UBIN(20)  UNAL,
              6659    1             4 FLAGSV     UBIN(11)  UNAL,
              6660    1             4 *          BIT(5)    UNAL,
              6661    1             4 ACCT$      PTR,
              6662    1           3 PASS_       ALIGNED,
              6663    1             4 BOUND      UBIN(20)  UNAL,
              6664    1             4 FLAGSV     UBIN(11)  UNAL,
              6665    1             4 *          BIT(5)    UNAL,
              6666    1             4 PASS$      PTR,
              6667    1           3 SN_         ALIGNED,
              6668    1             4 BOUND      UBIN(20)  UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:11   
              6669    1             4 FLAGSV     UBIN(11)  UNAL,
              6670    1             4 *          BIT(5)    UNAL,
              6671    1             4 SN$        PTR,
              6672    1           3 WSN_        ALIGNED,
              6673    1             4 BOUND      UBIN(20)  UNAL,
              6674    1             4 FLAGSV     UBIN(11)  UNAL,
              6675    1             4 *          BIT(5)    UNAL,
              6676    1             4 WSN$       PTR,
              6677    1           3 B           ALIGNED,
              6678    1             4 RES        BIT(1)    UNAL,
              6679    1             4 ASN        BIT(1)    UNAL,
              6680    1             4 ACCT       BIT(1)    UNAL,
              6681    1             4 *          BIT(33)   UNAL,
              6682    1           3 RES         CHAR(4)   ALIGNED,
              6683    1           3 ASN         UBIN(36)  ALIGNED;
       24     6686        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:12   
       25     6687        %SET LISTSUB='1'B;
       26     6688        %LIST;
       27     6689        /* !R! */
       28     6690        %B$HEAD( NAME=VX_RU_HEAD, STCLASS="STATIC SYMDEF", SUBS=NO );
              6691    1   DCL 1 VX_RU_HEAD STATIC SYMDEF ALIGNED,
              6692    1         2 PRIV BIT(36),
              6693                /*K*  PRIV is a 36 bit field containing privilege flags.  */
              6694    1         2 VPPGS UBIN(14) UNAL,
              6695                /*K*  VPPGS is the number of virtual pages of procedure
              6696                      required for the longest overlay path.
              6697                      (256 words/page if FEP, 1024 words/page if Host)  */
              6698    1         2 * UBIN(2) UNAL,
              6699                /*K*  * is reserved for future use and must be zero.  */
              6700    1         2 RPROC UBIN(20) UNAL,
              6701                /*K*  RPROC is the size, in words, of the procedure for the root.  */
              6702    1         2 VDPGS UBIN(14) UNAL,
              6703                /*K*  VDPGS is the number of virtual pages of data required
              6704                      for the longest overlay path.
              6705                      (256 words/page if FEP, 1024 words/page if Host)
              6706                      This includes both library and user defined data.
              6707                       */
              6708    1         2 * UBIN(2) UNAL,
              6709                /*K*  * is reserved for future use and must be zero.  */
              6710    1         2 RDATA UBIN(20) UNAL,
              6711                /*K*  RDATA is the size, in words of the data for the root.
              6712                      This includes both library and user defined data.
              6713                      If this is a host run unit, all data records will be
              6714                      included in the run unit.
              6715                      If this is a FEP run unit,
              6716                      no library data will be included in the run unit itself.
              6717                      The ISADDR field of B$RUKEY for the first user data record
              6718                      may be determined by calculating the FEP word address of
              6719                      B$HEAD.BIAS rounded to the next lower 2048 FEP word boundry.
              6720                      (2048 FEP words is the maximum size of run unit records
              6721                      for FEP run units.)  The data in this record below
              6722                      BIAS will be padded with zeros.
              6723                      The word size of data contained in the FEP run unit
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:13   
              6724                      may be calculated by subtracting the ISADDR value as
              6725                      calculated for the first data record from the word
              6726                      address of the last word of user data.  The last
              6727                      word of user data is the sum of the default FPRG
              6728                      bias (%GM_ISR1_BASE - EQU is in file GM_LCP6_E) and
              6729                      the total data size (B$HEAD.RDATA).
              6730                      */
              6731    1         2 SEV UBIN BYTE UNAL,
              6732                /*K*  SEV is the maximum severity level of the object units
              6733                      making up the run unit.  */
              6734    1         2 * UBIN(7) UNAL,
              6735                /*K*  * is reserved for future use and must be zero.  */
              6736    1         2 START UBIN(20) UNAL,
              6737                /*K*  START is the address within the instruction segment at
              6738                      which execution will start.  */
              6739    1         2 UDCBNUM UBIN HALF UNAL,
              6740                /*K*  UDCBNUM is the number of DCBs in the Read-Only segment
              6741                      as generated by LINK.   */
              6742    1         2 DCBRES UBIN HALF UNAL,
              6743                /*K*  DCBRES is the number of pointers to DCBs as supplied by
              6744                      LINK.   */
              6745    1         2 TREEDISP UBIN HALF UNAL,
              6746                /*K*  TREEDISP is the displacement in words from the start of
              6747                      the variable portion of the Read-Only Segment locating
              6748                      the tree table.   */
              6749    1         2 TCBSIZE UBIN HALF UNAL,
              6750                /*K*  TCBSIZE specifies the number of frames of the Task Control Block;
              6751                      if the size is 0, then a two frame Task Control Block will be
              6752                      built by STEP.   */
              6753    1         2 PRECSIZE UBIN HALF UNAL,
              6754                /*K*  PRECSIZ is the maximum size of any program record
              6755                      in the run unit; words if Host, double words if FEP.
              6756                      */
              6757    1         2 NRECSIZE UBIN HALF UNAL,
              6758                /*K*  NRECSIZ is the maximum size of External Name records in
              6759                      the run unit.   */
              6760    1         2 EPRECSIZE UBIN HALF UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:14   
              6761                /*K*  EPRECSIZE is the maximum size of External Procedure
              6762                      Definition Records in the run unit.   */
              6763    1         2 EDRECSIZE UBIN HALF UNAL,
              6764                /*K*  EDRECSIZE is the maximum size of External Data Definition
              6765                      Records in the run unit.    */
              6766    1         2 SDRECSIZE UBIN HALF UNAL,
              6767                /*K*  SDRECSIZE is the maximum size of External Segment
              6768                      Definition Records in the run unit.   */
              6769    1         2 ROSIZE UBIN HALF UNAL,
              6770                /*K*  ROSIZE is the size of the Read Only Segment Record.  */
              6771    1         2 VERSION# UBIN BYTE UNAL,
              6772                /*K*  VERSION# is the LINK version number.  */
              6773    1         2 MAP_BITS_A(0:2) UNAL,
              6774                /*K*  MAP_BITS_A are used by the linker to produce MAP.  */
              6775    1           3 MULTIPLE BIT(1) UNAL,
              6776                  /*K*  MULTIPLE is set if a multiply defined symbol exists.  */
              6777    1           3 CON BIT(1) UNAL,
              6778                  /*K*  CON is set if a Constant symbol is defined.  */
              6779    1           3 PRIMARY BIT(1) UNAL,
              6780                  /*K*  PRIMARY is set if an unresolved primary reference exists.  */
              6781    1           3 SECONDARY BIT(1) UNAL,
              6782                  /*K*  SECONDARY is set if an unresolved secondary reference
              6783                        exists.  */
              6784    1         2 SECTABLESIZE UBIN(8) UNAL,
              6785                /*K*  SECTABLESIZE is the size in words of the record which
              6786                      contains the start location and size of all sections
              6787                      (for BIAS by OU for FEP)   */
              6788    1         2 NSTDINVOC BIT(1) UNAL,
              6789                /*K*  NSTDINVOC indicates that the RU will can tolerate invoking
              6790                      in nonstandard form.   */
              6791    1         2 REMOVE_ENTDEF BIT(1) UNAL,
              6792                /*K*  REMOVE_ENTDEF is set if ENTDEFs not in the transfer
              6793                      vector have been removed from the shared library.  */
              6794    1         2 REMOVE_SYMDEF BIT(1) UNAL,
              6795                /*K*  REMOVE_SYMDEF is set if SYMDEFs not in the transfer
              6796                      vector have been removed from the shared library.  */
              6797    1         2 STATS BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:15   
              6798                /*K*  STATS is set if Statistics are being collected on
              6799                      this processor.  */
              6800    1         2 LAUTO BIT(1) UNAL,
              6801                /*K*  LAUTO is set for a Fep run unit if user auto is to be in
              6802                a small segment, thereby freeing up a large one for other purposes. */
              6803    1         2 * BIT(2) UNAL,
              6804                /*K*  * is reserved for future use and must be zero.  */
              6805    1         2 DATA_SEG (0:5),
              6806                /*K*  DATA_SEG defines the initialized data segment in the RU.  */
              6807    1           3 SIZ UBIN HALF UNAL,
              6808                  /*K* SIZ is the word size of the initialized data segment.  */
              6809    1           3 * UBIN(9) UNAL,
              6810                  /*K*  * is reserved for future use and must be zero.  */
              6811    1           3 PROTECTION UBIN(9) UNAL,
              6812                  /*K*  PROTECTION is the initialized data segment
              6813                        protection.   */
              6814    1         2 LOCK(0:71) BIT(1) UNAL,
              6815                /*K*  LOCK is the Lock for restricted processor.  */
              6816    1         2 FLAVOR UBIN BYTE UNAL,
              6817                /*K*  FLAVOR is the flavor of the run unit.  The RU_FLAVORS
              6818                      macro gives the legal values for FLAVOR.  */
              6819    1         2 S BIT(1) UNAL,
              6820                /*K*  S - S = 1 if the run unit is Shareable  */
              6821    1         2 LIB BIT(1) UNAL,
              6822                /*K*  LIB - LIB = 1 if the run unit is a Shared Library  */
              6823    1         2 ASL BIT(1) UNAL,
              6824                /*K*  ASL - ASL = 1 if the run unit is an Alternate Shared
              6825                      Library.   */
              6826    1         2 CMDPROC BIT(1) UNAL,
              6827                /*K*  CMDPROC - CMDPROC = 1 is the run unit is a Command Processor. */
              6828    1         2 DEBUGGER BIT(1) UNAL,
              6829                /*K*  DEBUGGER - DEBUGGER = 1 if the run unit is a Debugger. */
              6830    1         2 OVRL BIT(1) UNAL,
              6831                /*K*  OVRL -  OVRL = 1 if the run unit is overlaid.   */
              6832    1         2 PROCACC BIT(1) UNAL,
              6833                /*K*  PROCACC - If PROCACC = 1,  if the run unit resides in
              6834                      :SYS, it should be charged as processor, not user.  */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:16   
              6835    1         2 NOCHGPMEM BIT(1) UNAL,
              6836                /*K*  NOCHGPMEM - If NOCHGPMEM = 1, if the run unit resides in
              6837                      :SYS, the user should not be charged for procedures.  */
              6838    1         2 PROCSURCHG BIT(1) UNAL,
              6839                /*K*  PROCSURCHG - If PROCSURCHG = 1, Surcharge accountings
              6840                      should be applied.  */
              6841    1         2 RESTPROC BIT(1) UNAL,
              6842                /*K*  RESTPROC - If RESTPROC = 1, this is a restricted
              6843                      processor and should be verified against the user's key.  */
              6844    1         2 STRONG_LOCK BIT(1) UNAL,
              6845                /*K*  STRONG_LOCK - If STRONG_LOCK = 1, the restricted
              6846                      processor has a strong lock.  If STRONG_LOCK = 0, the
              6847                      restricted processor has a weak lock.   */
              6848    1         2 * UBIN(16) UNAL,
              6849                /*K*  * is reserved for future use and must be zero. */
              6850    1         2 PSEUDO_COUNT UBIN BYTE UNAL,
              6851                /*K*  PSEUDO_COUNT - If PSEUDO_COUNT > 0, then a pseudo resource
              6852                      is required to execute this run-unit.  */
              6853    1         2 * UBIN(7) UNAL,
              6854                /*K*  * is reserved for future use and must be zero.  */
              6855    1         2 BIAS UBIN(20) UNAL,
              6856                /*K*  BIAS is the address within the instruction segment of
              6857                      the beginning of the root data.  */
              6858    1         2 PSEUDO_TEXT CHAR(8),
              6859                /*K*  PSEUDO_TEXT - contains the text of the pseudo resource
              6860                      to acquire when the run-unit is executed.  */
              6861    1         2 * (0:1) UBIN WORD UNAL,
              6862                /*K*  * is reserved for future use and must be zero.  */
              6863    1         2 LIBNAME,
              6864                /*K* LIBNAME gives the name, if any, of the shared library to
              6865                     be associated.  Each name resides in a fixed 8-word field.
              6866                     The first byte contains the character count of the name
              6867                     followed by the name itself.   */
              6868    1           3 CNT UBIN BYTE UNAL,
              6869                  /*K* CNT contains the character count of the name of the
              6870                       shared library.  */
              6871    1           3 TXT CHAR(31) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:17   
              6872                  /*K*  TXT contains the name itself of the shared library.  */
              6873    1         2 ASLNAME,
              6874                /*K*  ASLNAME gives the name, if any, of the alternate shared
              6875                      library to be associated.  Each name resides in a fixed
              6876                      8-word field.  The first byte contains the character
              6877                      count of the name followed by the name itself.   */
              6878    1           3 CNT UBIN BYTE UNAL,
              6879                  /*K*  CNT contains the character count of the name of
              6880                        the alternate shared library.  */
              6881    1           3 TXT CHAR(31) UNAL;
              6882                  /*K*  TXT contains the name itself of the alternate
              6883                        shared library.  */
              6884        %IF '0'B='1'B;
              6888        %ENDIF;
       29     6890        %B$HEAD( NAME=VX_RU_HEAD_BUF, STCLASS="STATIC SYMDEF", SUBS=NO );
              6891    1   DCL 1 VX_RU_HEAD_BUF STATIC SYMDEF ALIGNED,
              6892    1         2 PRIV BIT(36),
              6893                /*K*  PRIV is a 36 bit field containing privilege flags.  */
              6894    1         2 VPPGS UBIN(14) UNAL,
              6895                /*K*  VPPGS is the number of virtual pages of procedure
              6896                      required for the longest overlay path.
              6897                      (256 words/page if FEP, 1024 words/page if Host)  */
              6898    1         2 * UBIN(2) UNAL,
              6899                /*K*  * is reserved for future use and must be zero.  */
              6900    1         2 RPROC UBIN(20) UNAL,
              6901                /*K*  RPROC is the size, in words, of the procedure for the root.  */
              6902    1         2 VDPGS UBIN(14) UNAL,
              6903                /*K*  VDPGS is the number of virtual pages of data required
              6904                      for the longest overlay path.
              6905                      (256 words/page if FEP, 1024 words/page if Host)
              6906                      This includes both library and user defined data.
              6907                       */
              6908    1         2 * UBIN(2) UNAL,
              6909                /*K*  * is reserved for future use and must be zero.  */
              6910    1         2 RDATA UBIN(20) UNAL,
              6911                /*K*  RDATA is the size, in words of the data for the root.
              6912                      This includes both library and user defined data.
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:18   
              6913                      If this is a host run unit, all data records will be
              6914                      included in the run unit.
              6915                      If this is a FEP run unit,
              6916                      no library data will be included in the run unit itself.
              6917                      The ISADDR field of B$RUKEY for the first user data record
              6918                      may be determined by calculating the FEP word address of
              6919                      B$HEAD.BIAS rounded to the next lower 2048 FEP word boundry.
              6920                      (2048 FEP words is the maximum size of run unit records
              6921                      for FEP run units.)  The data in this record below
              6922                      BIAS will be padded with zeros.
              6923                      The word size of data contained in the FEP run unit
              6924                      may be calculated by subtracting the ISADDR value as
              6925                      calculated for the first data record from the word
              6926                      address of the last word of user data.  The last
              6927                      word of user data is the sum of the default FPRG
              6928                      bias (%GM_ISR1_BASE - EQU is in file GM_LCP6_E) and
              6929                      the total data size (B$HEAD.RDATA).
              6930                      */
              6931    1         2 SEV UBIN BYTE UNAL,
              6932                /*K*  SEV is the maximum severity level of the object units
              6933                      making up the run unit.  */
              6934    1         2 * UBIN(7) UNAL,
              6935                /*K*  * is reserved for future use and must be zero.  */
              6936    1         2 START UBIN(20) UNAL,
              6937                /*K*  START is the address within the instruction segment at
              6938                      which execution will start.  */
              6939    1         2 UDCBNUM UBIN HALF UNAL,
              6940                /*K*  UDCBNUM is the number of DCBs in the Read-Only segment
              6941                      as generated by LINK.   */
              6942    1         2 DCBRES UBIN HALF UNAL,
              6943                /*K*  DCBRES is the number of pointers to DCBs as supplied by
              6944                      LINK.   */
              6945    1         2 TREEDISP UBIN HALF UNAL,
              6946                /*K*  TREEDISP is the displacement in words from the start of
              6947                      the variable portion of the Read-Only Segment locating
              6948                      the tree table.   */
              6949    1         2 TCBSIZE UBIN HALF UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:19   
              6950                /*K*  TCBSIZE specifies the number of frames of the Task Control Block;
              6951                      if the size is 0, then a two frame Task Control Block will be
              6952                      built by STEP.   */
              6953    1         2 PRECSIZE UBIN HALF UNAL,
              6954                /*K*  PRECSIZ is the maximum size of any program record
              6955                      in the run unit; words if Host, double words if FEP.
              6956                      */
              6957    1         2 NRECSIZE UBIN HALF UNAL,
              6958                /*K*  NRECSIZ is the maximum size of External Name records in
              6959                      the run unit.   */
              6960    1         2 EPRECSIZE UBIN HALF UNAL,
              6961                /*K*  EPRECSIZE is the maximum size of External Procedure
              6962                      Definition Records in the run unit.   */
              6963    1         2 EDRECSIZE UBIN HALF UNAL,
              6964                /*K*  EDRECSIZE is the maximum size of External Data Definition
              6965                      Records in the run unit.    */
              6966    1         2 SDRECSIZE UBIN HALF UNAL,
              6967                /*K*  SDRECSIZE is the maximum size of External Segment
              6968                      Definition Records in the run unit.   */
              6969    1         2 ROSIZE UBIN HALF UNAL,
              6970                /*K*  ROSIZE is the size of the Read Only Segment Record.  */
              6971    1         2 VERSION# UBIN BYTE UNAL,
              6972                /*K*  VERSION# is the LINK version number.  */
              6973    1         2 MAP_BITS_A(0:2) UNAL,
              6974                /*K*  MAP_BITS_A are used by the linker to produce MAP.  */
              6975    1           3 MULTIPLE BIT(1) UNAL,
              6976                  /*K*  MULTIPLE is set if a multiply defined symbol exists.  */
              6977    1           3 CON BIT(1) UNAL,
              6978                  /*K*  CON is set if a Constant symbol is defined.  */
              6979    1           3 PRIMARY BIT(1) UNAL,
              6980                  /*K*  PRIMARY is set if an unresolved primary reference exists.  */
              6981    1           3 SECONDARY BIT(1) UNAL,
              6982                  /*K*  SECONDARY is set if an unresolved secondary reference
              6983                        exists.  */
              6984    1         2 SECTABLESIZE UBIN(8) UNAL,
              6985                /*K*  SECTABLESIZE is the size in words of the record which
              6986                      contains the start location and size of all sections
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:20   
              6987                      (for BIAS by OU for FEP)   */
              6988    1         2 NSTDINVOC BIT(1) UNAL,
              6989                /*K*  NSTDINVOC indicates that the RU will can tolerate invoking
              6990                      in nonstandard form.   */
              6991    1         2 REMOVE_ENTDEF BIT(1) UNAL,
              6992                /*K*  REMOVE_ENTDEF is set if ENTDEFs not in the transfer
              6993                      vector have been removed from the shared library.  */
              6994    1         2 REMOVE_SYMDEF BIT(1) UNAL,
              6995                /*K*  REMOVE_SYMDEF is set if SYMDEFs not in the transfer
              6996                      vector have been removed from the shared library.  */
              6997    1         2 STATS BIT(1) UNAL,
              6998                /*K*  STATS is set if Statistics are being collected on
              6999                      this processor.  */
              7000    1         2 LAUTO BIT(1) UNAL,
              7001                /*K*  LAUTO is set for a Fep run unit if user auto is to be in
              7002                a small segment, thereby freeing up a large one for other purposes. */
              7003    1         2 * BIT(2) UNAL,
              7004                /*K*  * is reserved for future use and must be zero.  */
              7005    1         2 DATA_SEG (0:5),
              7006                /*K*  DATA_SEG defines the initialized data segment in the RU.  */
              7007    1           3 SIZ UBIN HALF UNAL,
              7008                  /*K* SIZ is the word size of the initialized data segment.  */
              7009    1           3 * UBIN(9) UNAL,
              7010                  /*K*  * is reserved for future use and must be zero.  */
              7011    1           3 PROTECTION UBIN(9) UNAL,
              7012                  /*K*  PROTECTION is the initialized data segment
              7013                        protection.   */
              7014    1         2 LOCK(0:71) BIT(1) UNAL,
              7015                /*K*  LOCK is the Lock for restricted processor.  */
              7016    1         2 FLAVOR UBIN BYTE UNAL,
              7017                /*K*  FLAVOR is the flavor of the run unit.  The RU_FLAVORS
              7018                      macro gives the legal values for FLAVOR.  */
              7019    1         2 S BIT(1) UNAL,
              7020                /*K*  S - S = 1 if the run unit is Shareable  */
              7021    1         2 LIB BIT(1) UNAL,
              7022                /*K*  LIB - LIB = 1 if the run unit is a Shared Library  */
              7023    1         2 ASL BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:21   
              7024                /*K*  ASL - ASL = 1 if the run unit is an Alternate Shared
              7025                      Library.   */
              7026    1         2 CMDPROC BIT(1) UNAL,
              7027                /*K*  CMDPROC - CMDPROC = 1 is the run unit is a Command Processor. */
              7028    1         2 DEBUGGER BIT(1) UNAL,
              7029                /*K*  DEBUGGER - DEBUGGER = 1 if the run unit is a Debugger. */
              7030    1         2 OVRL BIT(1) UNAL,
              7031                /*K*  OVRL -  OVRL = 1 if the run unit is overlaid.   */
              7032    1         2 PROCACC BIT(1) UNAL,
              7033                /*K*  PROCACC - If PROCACC = 1,  if the run unit resides in
              7034                      :SYS, it should be charged as processor, not user.  */
              7035    1         2 NOCHGPMEM BIT(1) UNAL,
              7036                /*K*  NOCHGPMEM - If NOCHGPMEM = 1, if the run unit resides in
              7037                      :SYS, the user should not be charged for procedures.  */
              7038    1         2 PROCSURCHG BIT(1) UNAL,
              7039                /*K*  PROCSURCHG - If PROCSURCHG = 1, Surcharge accountings
              7040                      should be applied.  */
              7041    1         2 RESTPROC BIT(1) UNAL,
              7042                /*K*  RESTPROC - If RESTPROC = 1, this is a restricted
              7043                      processor and should be verified against the user's key.  */
              7044    1         2 STRONG_LOCK BIT(1) UNAL,
              7045                /*K*  STRONG_LOCK - If STRONG_LOCK = 1, the restricted
              7046                      processor has a strong lock.  If STRONG_LOCK = 0, the
              7047                      restricted processor has a weak lock.   */
              7048    1         2 * UBIN(16) UNAL,
              7049                /*K*  * is reserved for future use and must be zero. */
              7050    1         2 PSEUDO_COUNT UBIN BYTE UNAL,
              7051                /*K*  PSEUDO_COUNT - If PSEUDO_COUNT > 0, then a pseudo resource
              7052                      is required to execute this run-unit.  */
              7053    1         2 * UBIN(7) UNAL,
              7054                /*K*  * is reserved for future use and must be zero.  */
              7055    1         2 BIAS UBIN(20) UNAL,
              7056                /*K*  BIAS is the address within the instruction segment of
              7057                      the beginning of the root data.  */
              7058    1         2 PSEUDO_TEXT CHAR(8),
              7059                /*K*  PSEUDO_TEXT - contains the text of the pseudo resource
              7060                      to acquire when the run-unit is executed.  */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:22   
              7061    1         2 * (0:1) UBIN WORD UNAL,
              7062                /*K*  * is reserved for future use and must be zero.  */
              7063    1         2 LIBNAME,
              7064                /*K* LIBNAME gives the name, if any, of the shared library to
              7065                     be associated.  Each name resides in a fixed 8-word field.
              7066                     The first byte contains the character count of the name
              7067                     followed by the name itself.   */
              7068    1           3 CNT UBIN BYTE UNAL,
              7069                  /*K* CNT contains the character count of the name of the
              7070                       shared library.  */
              7071    1           3 TXT CHAR(31) UNAL,
              7072                  /*K*  TXT contains the name itself of the shared library.  */
              7073    1         2 ASLNAME,
              7074                /*K*  ASLNAME gives the name, if any, of the alternate shared
              7075                      library to be associated.  Each name resides in a fixed
              7076                      8-word field.  The first byte contains the character
              7077                      count of the name followed by the name itself.   */
              7078    1           3 CNT UBIN BYTE UNAL,
              7079                  /*K*  CNT contains the character count of the name of
              7080                        the alternate shared library.  */
              7081    1           3 TXT CHAR(31) UNAL;
              7082                  /*K*  TXT contains the name itself of the alternate
              7083                        shared library.  */
              7084        %IF '0'B='1'B;
              7088        %ENDIF;
       30     7090        %PLIST;
       31     7091        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:23   
       32     7092        /*
       33     7093              BUFFER FOR OBJECT UNIT NAME FOR LIBRARY SEARCHES
       34     7094        */
       35     7095    1   DCL 1 VX_L_REC_BUF ALIGNED STATIC SYMDEF,
       36     7096    1         2 COUNT UBIN(9) UNAL INIT(0),
       37     7097    1         2 CHARS CHAR(31) UNAL INIT(' ');
       38     7098        /**/
       39     7099        /**/
       40     7100        /**/
       41     7101    1   DCL 1 VX_OU_HEAD STATIC SYMDEF,
       42     7102    1         2 UTS UBIN(36) UNAL INIT(0),
       43     7103    1         2 CMPLRID UBIN(36) UNAL INIT(0),
       44     7104    1         2 START_ADDRESS,
       45     7105    1           3 OPERAND_TYPE UBIN( 4) UNAL INIT(0),
       46     7106    1           3 * BIT ( 5) UNAL INIT('0'B),
       47     7107    1           3 OPERAND UBIN( 9) UNAL INIT(0),
       48     7108    1           3 OFFSET UBIN(18) UNAL INIT(0),
       49     7109    1         2 SEVLEV UBIN(18) UNAL INIT(0),
       50     7110    1         2 LB_SIZE UBIN(18) UNAL INIT(0),
       51     7111    1         2 PR_SIZE UBIN(18) UNAL INIT(0),
       52     7112    1         2 RL_SIZE UBIN(18) UNAL INIT(0),
       53     7113    1         2 REC_A(0:7) UNAL,
       54     7114    1           3 SIZE UBIN(18) UNAL INIT(0*0),
       55     7115    1           3 PAGE UBIN(18) UNAL INIT(0*0),
       56     7116    1         2 REC REDEF REC_A,
       57     7117    1           3 DN_SIZE UBIN(18) UNAL ,
       58     7118    1           3 DN_PAGE UBIN(18) UNAL ,
       59     7119    1           3 RN_SIZE UBIN(18) UNAL ,
       60     7120    1           3 RN_PAGE UBIN(18) UNAL ,
       61     7121    1           3 ED_SIZE UBIN(18) UNAL ,
       62     7122    1           3 ED_PAGE UBIN(18) UNAL ,
       63     7123    1           3 ER_SIZE UBIN(18) UNAL ,
       64     7124    1           3 ER_PAGE UBIN(18) UNAL ,
       65     7125    1           3 DD_SIZE UBIN(18) UNAL ,
       66     7126    1           3 DD_PAGE UBIN(18) UNAL ,
       67     7127    1           3 DR_SIZE UBIN(18) UNAL ,
       68     7128    1           3 DR_PAGE UBIN(18) UNAL ,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:24   
       69     7129    1           3 SD_SIZE UBIN(18) UNAL ,
       70     7130    1           3 SD_PAGE UBIN(18) UNAL ,
       71     7131    1           3 SR_SIZE UBIN(18) UNAL ,
       72     7132    1           3 SR_PAGE UBIN(18) UNAL ,
       73     7133    1         2 LIB,
       74     7134    1           3 COUNT UBIN( 9) UNAL INIT(0),
       75     7135    1           3 NAME CHAR(31) UNAL
       76     7136    1             INIT('                               '),
       77     7137    1         2 ALIB,
       78     7138    1           3 COUNT UBIN( 9) UNAL INIT(0),
       79     7139    1           3 NAME CHAR(31) UNAL
       80     7140    1             INIT('                               ');
       81     7141        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:25   
       82     7142        /* !R!
       83     7143        %B$OUHEAD(NAME=VX_OUHEAD,STCLASS="REDEF VX_OU_HEAD");
       84     7144        */
       85     7145    1   DCL   VX_SC_START$         PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
       86     7146    1   DCL   VX_SC_ROOT_LBL_COM     UBIN(36)            STATIC    SYMDEF INIT(0);
       87     7147    1   DCL   VX_SC_LBL_COM       UBIN(36)            STATIC    SYMDEF INIT(0);
       88     7148    1   DCL   VX_SC_BLK_COM       UBIN(36)            STATIC    SYMDEF INIT(0);
       89     7149    1   DCL   VX_OVERLAY_START$   PTR                 STATIC    SYMDEF  INIT (ADDR(NIL));
       90     7150    1   DCL   VX_LAST_SC$         PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
       91     7151    1   DCL   VX_LAST_OU$         PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
       92     7152    1   DCL   VX_LAST_SC_BASE     UBIN(36)            STATIC    SYMDEF INIT(0);
       93     7153    1   DCL   VX_CURR_SC_ENTRIES  UBIN(36)            STATIC    SYMDEF INIT(0);
       94     7154        /**/
       95     7155        /**/
       96     7156    1   DCL VX_TREE_ADR UBIN(36) STATIC SYMDEF INIT(0);
              7156            /* DISPLACEMENT INTO ROS FOR START OF TREE TABLE */
       97     7157    1   DCL VX_TREE_NAME_POOL UBIN(36) STATIC SYMDEF INIT(0);
              7157            /* ACCUMULATING SIZE OF NAME POOL FOR TREE TABLE */
       98     7158    1   DCL   VX_TREE_SLIB_NAME   UBIN(36)            STATIC    SYMDEF    INIT(0);
       99     7159                            /* MAX SIZE OF ALL LIBRARY NAMES ENCOUNTERED (TEXTC->WORD)*/
      100     7160    1   DCL   VX_TREE_ESZ         UBIN(36)            STATIC   SYMDEF INIT(5);
      101     7161    1   DCL   VX_TREE_PRE         UBIN(36)            STATIC   SYMDEF INIT(3);
      102     7162    1   DCL   VX_TREE_SIZE        UBIN(36)            STATIC   SYMDEF INIT(0);
      103     7163    1   DCL   VX_TREE_DISP        UBIN(36)            STATIC   SYMDEF INIT(0);
      104     7164    1   DCL   VX_TREE_LIB         UBIN(36)            STATIC   SYMDEF INIT(0);
      105     7165    1   DCL   VX_DCB_USER         UBIN(36)            STATIC   SYMDEF INIT(0);
      106     7166        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:26   
      107     7167    1   DCL   VX_DUMMY            UBIN(36)            STATIC   SYMDEF INIT(0);
      108     7168    1   DCL 1 VX_CBUF STATIC SYMDEF,
      109     7169    1         2 CHARS_A(0:132) CHAR( 1) UNAL INIT(' '*0),
      110     7170    1         2 CHARS REDEF CHARS_A CHAR(133) UNAL;
      111     7171        /*
      112     7172              1-LINK    LINK
      113     7173              2-LYNX    LINK
      114     7174              3-LOAD    LINK
      115     7175              4-RUN     LINK, M$LDTR
      116     7176              5-MAP     MAP
      117     7177        */
      118     7178    1   DCL  VX_COMMAND          UBIN(36)            STATIC    SYMDEF    INIT(0);
      119     7179    1   DCL  VX_ON_OVER          UBIN(36)            STATIC    SYMDEF    INIT(0);
      120     7180    1   DCL  VX_ON_OVER_RUF      UBIN(36)            STATIC    SYMDEF    INIT(0);
      121     7181    1   DCL  VX_FCG_SWITCH       BIT(1) ALIGNED   STATIC   SYMDEF   INIT('0'B);
      122     7182    1   DCL  VX_LO_DO_DIFFER     BIT(1) ALIGNED   STATIC   SYMDEF   INIT('0'B);
      123     7183    1   DCL VX_INHIBIT_COMPACTION UBIN(36)           STATIC    SYMDEF    INIT(0);
      124     7184    1   DCL  VX_PASS             UBIN(36)            STATIC    SYMDEF    INIT(0);
      125     7185    1   DCL VX_DO_PASS1 UBIN(36) STATIC SYMDEF INIT(1);
              7185            /* SWITCH TO INDICATE DO PROCESSING FOR PASS1 */
      126     7186    1   DCL VX_DO_PASS2 UBIN(36) STATIC SYMDEF INIT(1);
              7186            /* SWITCH TO INDICATE DO PROCESSING FOR PASS2 */
      127     7187    1   DCL VX_COUNT_FID UBIN(36) STATIC SYMDEF INIT(0);
              7187            /* SWITCH TO INDICATE WHETHER TO COUNT FIDS */
      128     7188    1   DCL VX_FID_COUNT UBIN(36) STATIC SYMDEF INIT(0);
              7188            /* ACCUMULATED FID COUNT IF VX_COUNT_FID~=0 */
      129     7189    1   DCL VX_HAVE_ROOT_LBL_COM       BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('0'B
              7189            /*@FALSE_B*/);
      130     7190    1   DCL VX_GOT_ON_OVER UBIN(36) STATIC SYMDEF INIT(0);
              7190            /* SWITCH WHICH INDICATES WHETHER ON OR OVER WAS HIT*/
      131     7191    1   DCL VX_PRIMARY_ENTDEF_GOT BIT(1) STATIC SYMDEF INIT('0'B);
              7191            /* HAVE PRIMARY ENTDEF INDEX OR NOT */
      132     7192    1   DCL VX_SLIB_USED BIT(1) STATIC SYMDEF INIT('0'B); /* SHARED LIBRARY USED */
      133     7193    1   DCL VX_LINK_UTS UBIN(36) STATIC SYMDEF INIT(0); /* UTS TO STAMP RUN FILE */
      134     7194    1   DCL VX_NODE_NUMBER SBIN WORD STATIC SYMDEF INIT(-1); /* NODE NUMBERS; >0=>TREE*/
      135     7195    1   DCL VX_NUM_UNIQUE_BREFS UBIN WORD STATIC SYMDEF INIT(0);
      136     7196    1   DCL VX_IN_OVERLAY  BIT (1) STATIC SYMDEF INIT('0'B);
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:27   
      137     7197    1   DCL VX_BREF_DEFAULT_SET BIT (1) STATIC SYMDEF INIT ('0'B);
      138     7198    1   DCL VX_IN_PATCH BIT (1) STATIC SYMDEF INIT ('0'B);
      139     7199    1   DCL VX_LIB_USED BIT (1) STATIC SYMDEF INIT ('0'B);
      140     7200    1   DCL VX_ROOT$              PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      141     7201    1   DCL VX_RUF$               PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      142     7202    1   DCL VX_LOF$               PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      143     7203    1   DCL VX_CURR$              PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      144     7204    1   DCL VX_FCURR$             PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      145     7205    1   DCL VX_OCURR$             PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      146     7206    1   DCL 1 VX_NIL_V DALIGNED STATIC SYMDEF ,
      147     7207    1         2 BOUND UBIN(20) UNAL INIT(SIZEV(NIL)),
      148     7208    1         2 FLAGSV UBIN(11) UNAL INIT(2045),
      149     7209    1         2 * BIT(5),
      150     7210    1         2 VX_NIL_V$ PTR INIT(ADDR(NIL));
      151     7211    1   DCL 1 VX_ERRORS STATIC SYMDEF,
      152     7212    1         2 MULTIPLE UBIN(36) ALIGNED INIT( 0),
      153     7213    1         2 UNSAT_A(0:1) UBIN(36) ALIGNED INIT( 0*0),
      154     7214    1         2 UNSAT REDEF UNSAT_A,
      155     7215    1           3 UNSAT_PRIMARY UBIN(36) ALIGNED,
      156     7216    1           3 UNSAT_SECONDARY UBIN(36) ALIGNED,
      157     7217    1         2 CONFLICT_A(0:2) UBIN(36) ALIGNED INIT( 0*0),
      158     7218    1         2 CONFLICT REDEF CONFLICT_A,
      159     7219    1           3 ALTRIT UBIN(36) ALIGNED,
      160     7220    1           3 PARM UBIN(36) ALIGNED,
      161     7221    1           3 CST UBIN(36) ALIGNED;
      162     7222    1   DCL VX_ERRORS_A(0:5) REDEF     VX_ERRORS  UBIN(36)ALIGNED;
      163     7223        /*    HIGHEST ERROR SEVERITY ENCOUNTERED                          */
      164     7224    1   DCL VX_ERR_SEV            UBIN(36)  ALIGNED STATIC SYMDEF    INIT( 0);
      165     7225        /*    STARTING ADDRESSES FOR EACH SECTION/SEGMENT                 */
      166     7226    1   DCL 1 VX_PROGRAM_BIAS STATIC SYMDEF,
      167     7227    1         2 A(0:2) UBIN(36) ALIGNED INIT( 0*0),
      168     7228    1         2 I REDEF A,
      169     7229    1           3 DATA UBIN(36) ALIGNED,
      170     7230    1           3 RPROC UBIN(36) ALIGNED,
      171     7231    1           3 ROS UBIN(36) ALIGNED;
      172     7232        /*    BIASES FOR EACH SECTION/SEGMENT                             */
      173     7233    1   DCL 1 VX_BIAS STATIC SYMDEF,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:28   
      174     7234    1         2 A(0:2) SBIN WORD ALIGNED INIT( 0*0),
      175     7235    1         2 I REDEF A,
      176     7236    1           3 DATA SBIN WORD ALIGNED,
      177     7237    1           3 RPROC SBIN WORD ALIGNED,
      178     7238    1           3 ROS SBIN WORD ALIGNED;
      179     7239        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:29   
      180     7240        /*
      181     7241                        MEMORY VARIABLES FOR DYNAMIC SEGMENTS
      182     7242        */
      183     7243        /*    FIRST FREE WORD(RELATIVE) IN DATA SEGMENT(INDEX)       */
      184     7244    1   DCL VX_M_FREE(0:8)                  SBIN WORD STATIC    SYMDEF    INIT(0*0);
      185     7245        /*    LAST ALLOCATED(POSSIBLY UNUSED) WORD IN DATA SEGMENT(INDEXED) */
      186     7246    1   DCL VX_M_ALL(0:8)                   SBIN WORD STATIC    SYMDEF    INIT(0*0);
      187     7247        /*    BASE POINTER FOR SEGMENT                               */
      188     7248    1   DCL VX_M_BASE_PTR(0:8)              PTR       STATIC    SYMDEF    INIT(ADDR(NIL)*0);
      189     7249        /* TYPE -> SEGIDS */
      190     7250    1   DCL VX_M_SEGID(0:8)                   UBIN(36)  ALIGNED   STATIC    SYMDEF INIT(0*0)
              7250            ;
      191     7251        /*
      192     7252                        MEMORY VARIABLES FOR DYNAMIC PAGES
      193     7253        */
      194     7254        /*    FIRST FREE WORD(RELATIVE) IN DYNAMIC DATA PAGES     */
      195     7255    1   DCL VX_ONLINE UBIN(36) ALIGNED STATIC SYMDEF INIT(0);/*<>0 => ONLINE
      196     7256                                                =0 => NOT ONLINE */
      197     7257        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:30   
      198     7258    1   DCL 1 VX_O STATIC SYMDEF,
      199     7259    1         2 SIN_A(0:28) UBIN(36) ALIGNED INIT(0*0),
      200     7260    1         2 SIN REDEF SIN_A,
      201     7261    1           3 SHARED UBIN(36) ALIGNED,
      202     7262    1           3 NSHARED UBIN(36) ALIGNED,
      203     7263    1           3 NOBREF UBIN(36) ALIGNED,
      204     7264    1           3 NODEBUG UBIN(36) ALIGNED,
      205     7265    1           3 NOSETS UBIN(36) ALIGNED,
      206     7266    1           3 NOSHARELIB UBIN(36) ALIGNED,
      207     7267    1           3 NOSYSLIB UBIN(36) ALIGNED,
      208     7268    1           3 ALIB UBIN(36) ALIGNED,
      209     7269    1           3 OSP UBIN(36) ALIGNED,
      210     7270    1           3 RUN UBIN(36) ALIGNED,
      211     7271    1           3 SYSTEM UBIN(36) ALIGNED,
      212     7272    1           3 NOEDITING UBIN(36) ALIGNED,
      213     7273    1           3 ASLIB UBIN(36) ALIGNED,
      214     7274    1           3 SLIB UBIN(36) ALIGNED,
      215     7275    1           3 PROMOTE_BLANK UBIN(36) ALIGNED,
      216     7276    1           3 PROMOTE_LABEL UBIN(36) ALIGNED,
      217     7277    1           3 PROMOTE UBIN(36) ALIGNED,
      218     7278    1           3 DUPLICATE UBIN(36) ALIGNED,
      219     7279    1           3 PROCACC UBIN(36) ALIGNED,
      220     7280    1           3 NOCHGPMEM UBIN(36) ALIGNED,
      221     7281    1           3 NOALTSHARELIB UBIN(36) ALIGNED,
      222     7282    1           3 SURCHARGE UBIN(36) ALIGNED,
      223     7283    1           3 NSTDINVOC UBIN(36) ALIGNED,
      224     7284    1           3 STATS UBIN(36) ALIGNED,
      225     7285    1           3 LLMU  UBIN(36) ALIGNED,
      226     7286    1           3 LSAU  UBIN(36) ALIGNED,
      227     7287    1           3 WARN  UBIN(36) ALIGNED,
      228     7288    1           3 NWARN UBIN(36) ALIGNED,
      229     7289    1           3 NPLOVER UBIN(36) ALIGNED,
      230     7290    1         2 NUM_A(0:12) SBIN WORD ALIGNED INIT(0,12,0,-1,11,-1,
      231     7291    1           3/*@TCB_FRAMES*/,
      232     7292    1           0*6),
      233     7293    1         2 NUM REDEF NUM_A,
      234     7294    1           3 BREF SBIN WORD ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:31   
      235     7295    1           3 DCBSLOTS SBIN WORD ALIGNED,
      236     7296    1           3 DBIAS SBIN WORD ALIGNED,
      237     7297    1           3 PBIAS SBIN WORD ALIGNED,
      238     7298    1           3 SEVERITY SBIN WORD ALIGNED,
      239     7299    1           3 START SBIN WORD ALIGNED,
      240     7300    1           3 TCB SBIN WORD ALIGNED,
      241     7301    1           3 REPORT SBIN WORD ALIGNED,
      242     7302    1           3 DPATCH SBIN WORD ALIGNED,
      243     7303    1           3 IPATCH SBIN WORD ALIGNED,
      244     7304    1           3 IXTNSIZE SBIN WORD ALIGNED,
      245     7305    1           3 XTNSIZE SBIN WORD ALIGNED,
      246     7306    1           3 * SBIN WORD ALIGNED,
      247     7307    1         2 PRIV_A(0:35) BIT(36) ALIGNED INIT(
      248     7308    1           %PR_SPCLMM#,
      249     7309    1           %PR_EXMM#,
      250     7310    1           %PR_MAXMEM#,
      251     7311    1           %PR_MSYS#,
      252     7312    1           %PR_JIT#,
      253     7313    1           %PR_TND#,
      254     7314    1           %PR_PM#,
      255     7315    1           %PR_EXPM#,
      256     7316    1           %PR_IOQ#,
      257     7317    1           %PR_IOQW#,
      258     7318    1           %PR_CFEP#,
      259     7319    1           %PR_MFEP#,
      260     7320    1           %PR_SYSLOG#,
      261     7321    1           '0'B ,
      262     7322    1           %PR_FMEFT#,
      263     7323    1           %PR_FMBLK#,
      264     7324    1           %PR_FMSEC#,
      265     7325    1           %PR_FMDIAG#,
      266     7326    1           %PR_GPP#,
      267     7327    1           %PR_ASAVE#,
      268     7328    1           %PR_SYSCON#,
      269     7329    1           '0'B,
      270     7330    1           %PR_DISPJOB#,
      271     7331    1           %PR_FMREAD#,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:32   
      272     7332    1           '0'B/*@FALSE_B*/,
      273     7333    1           '0'B/*@FALSE_B*/,
      274     7334    1           '0'B/*@FALSE_B*/,
      275     7335    1           '0'B/*@FALSE_B*/,
      276     7336    1           '0'B/*@FALSE_B*/,
      277     7337    1           '0'B/*@FALSE_B*/,
      278     7338    1           '0'B/*@FALSE_B*/,
      279     7339    1           '0'B/*@FALSE_B*/,
      280     7340    1           '0'B/*@FALSE_B*/,
      281     7341    1           '0'B/*@FALSE_B*/,
      282     7342    1           '0'B/*@FALSE_B*/,
      283     7343    1           '0'B/*@FALSE_B*/ ),
      284     7344    1         2 PRIV REDEF PRIV_A,
      285     7345    1           3 SPCLMM BIT(36) ALIGNED,
      286     7346    1           3 EXMM BIT(36) ALIGNED,
      287     7347    1           3 MAXMEM BIT(36) ALIGNED,
      288     7348    1           3 MSYS BIT(36) ALIGNED,
      289     7349    1           3 JIT BIT(36) ALIGNED,
      290     7350    1           3 TND BIT(36) ALIGNED,
      291     7351    1           3 PM BIT(36) ALIGNED,
      292     7352    1           3 EXPM BIT(36) ALIGNED,
      293     7353    1           3 IOQ BIT(36) ALIGNED,
      294     7354    1           3 IOQW BIT(36) ALIGNED,
      295     7355    1           3 CFEP BIT(36) ALIGNED,
      296     7356    1           3 MFEP BIT(36) ALIGNED,
      297     7357    1           3 SYSLOG BIT(36) ALIGNED,
      298     7358    1           3 *   BIT(36) ALIGNED,
      299     7359    1           3 FMEFT BIT(36) ALIGNED,
      300     7360    1           3 FMBLK BIT(36) ALIGNED,
      301     7361    1           3 FMSEC BIT(36) ALIGNED,
      302     7362    1           3 FMDIAG BIT(36) ALIGNED,
      303     7363    1           3 GPP BIT(36) ALIGNED,
      304     7364    1           3 ASAVE BIT(36) ALIGNED,
      305     7365    1           3 SYSCON BIT(36) ALIGNED,
      306     7366    1           3 *    BIT(36) ALIGNED,
      307     7367    1           3 DISPJOB BIT(36) ALIGNED,
      308     7368    1           3 FMREAD BIT(36) ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:33   
      309     7369    1           3 * BIT(36) ALIGNED,
      310     7370    1           3 * BIT(36) ALIGNED,
      311     7371    1           3 * BIT(36) ALIGNED,
      312     7372    1           3 * BIT(36) ALIGNED,
      313     7373    1           3 * BIT(36) ALIGNED,
      314     7374    1           3 * BIT(36) ALIGNED,
      315     7375    1           3 * BIT(36) ALIGNED,
      316     7376    1           3 * BIT(36) ALIGNED,
      317     7377    1           3 * BIT(36) ALIGNED,
      318     7378    1           3 * BIT(36) ALIGNED,
      319     7379    1           3 * BIT(36) ALIGNED,
      320     7380    1           3 * BIT(36) ALIGNED,
      321     7381    1         2 MAP_A(0:3) UBIN(36) ALIGNED INIT(0*0),
      322     7382    1         2 MAP REDEF MAP_A,
      323     7383    1           3 NAME UBIN(36) ALIGNED,
      324     7384    1           3 VALUE UBIN(36) ALIGNED,
      325     7385    1           3 UDEF UBIN(36) ALIGNED,
      326     7386    1           3 LDEF UBIN(36) ALIGNED,
      327     7387    1         2 FID_A$(0:5) PTR ALIGNED INIT(ADDR(NIL)*0),
      328     7388    1         2 FID REDEF FID_A$,
      329     7389    1           3 ALTSHARELIB$ PTR ALIGNED,
      330     7390    1           3 SHARELIB$ PTR ALIGNED,
      331     7391    1           3 UNSAT$ PTR ALIGNED,
      332     7392    1           3 * PTR ALIGNED,
      333     7393    1           3 * PTR ALIGNED,
      334     7394    1           3 * PTR ALIGNED,
      335     7395    1         2 FIDN_A$(0:3) PTR ALIGNED INIT(ADDR(NIL)*0),
      336     7396    1         2 FIDN$ REDEF FIDN_A$,
      337     7397    1           3 UNSAT$ PTR ALIGNED,
      338     7398    1           3 * PTR ALIGNED,
      339     7399    1           3 * PTR ALIGNED,
      340     7400    1           3 * PTR ALIGNED,
      341     7401    1         2 ACCTN_A$(0:3) PTR ALIGNED INIT(ADDR(NIL)*0),
      342     7402    1         2 ACCTN$ REDEF ACCTN_A$,
      343     7403    1           3 LIBSRCH$ PTR ALIGNED,
      344     7404    1           3 SRCH$ PTR ALIGNED,
      345     7405    1           3 * PTR ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:34   
      346     7406    1           3 * PTR ALIGNED,
      347     7407    1         2 INCLUDE_A$(0:0) PTR ALIGNED INIT(ADDR(NIL)*0),
      348     7408    1         2 INCL REDEF INCLUDE_A$,
      349     7409    1           3 INCLUDE$ PTR ALIGNED,
      350     7410    1         2 DCB_MATCH_A$(0:3) PTR ALIGNED INIT( ADDR( SIDCB_NAME ),
      351     7411    1                                              ADDR( UIDCB_NAME ),
      352     7412    1                                              ADDR( OUDCB_NAME ),
      353     7413    1                                              ADDR( LODCB_NAME ) ),
      354     7414    1         2 DCB_MATCH REDEF DCB_MATCH_A$,
      355     7415    1           3 SI$ PTR ALIGNED,
      356     7416    1           3 UI$ PTR ALIGNED,
      357     7417    1           3 OU$ PTR ALIGNED,
      358     7418    1           3 LO$ PTR ALIGNED,
      359     7419    1         2 DCB_MATCH_HIT_A(0:3) BIT(1) ALIGNED INIT('0'B/*@FALSE_B*/*0),
      360     7420    1         2 DCB_MATCH_HIT REDEF DCB_MATCH_HIT_A,
      361     7421    1           3 SI BIT(1) ALIGNED,
      362     7422    1           3 UI BIT(1) ALIGNED,
      363     7423    1           3 OU BIT(1) ALIGNED,
      364     7424    1           3 LO BIT(1) ALIGNED,
      365     7425    1         2 TCB_A(0:1) UBIN(36) ALIGNED INIT( 16/*@TCB_SIZE*/, 3/*@TCB_FRAMES*/ ),
      366     7426    1         2 TCB REDEF TCB_A,
      367     7427    1           3 SIZE UBIN(36) ALIGNED,
      368     7428    1           3 FRAMES UBIN(36) ALIGNED,
      369     7429    1         2 OPT_A(0:1) SBIN WORD ALIGNED INIT(-1,-1),
      370     7430    1         2 OPT REDEF OPT_A,
      371     7431    1           3 MAP SBIN WORD ALIGNED,
      372     7432    1           3 START SBIN WORD ALIGNED,
      373     7433    1         2 VECTOR_,
      374     7434    1           3 RF$ PTR ALIGNED INIT(ADDR(NIL)),
      375     7435    1           3 LIST_SIZE UBIN ALIGNED INIT(0),
      376     7436    1           3 LIST$ PTR ALIGNED INIT(ADDR(NIL)),
      377     7437    1           3 REMOVE_ENTDEF UBIN ALIGNED INIT(0),
      378     7438    1           3 REMOVE_SYMDEF UBIN ALIGNED INIT(0),
      379     7439    1           3 DATA UBIN ALIGNED INIT(0),
      380     7440    1           3 * UBIN,
      381     7441    1         2 NODCB_A(0:3) UBIN INIT(0*0),
      382     7442    1         2 NODCB REDEF NODCB_A,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:35   
      383     7443    1           3 NODCB1 UBIN,
      384     7444    1           3 NODCB2 UBIN,
      385     7445    1           3 NODCB3 UBIN,
      386     7446    1           3 NODCB4 UBIN,
      387     7447    1         2 LOCK(0:71) BIT(1) UNAL INIT( '0'B/*@FALSE_B*/*0 ),
      388     7448    1         2 VERSION ALIGNED,
      389     7449    1           3 COUNT UBIN BYTE UNAL,
      390     7450    1           3 TEXT CHAR(6),
      391     7451    1         2 PSEUDO ALIGNED,
      392     7452    1           3 COUNT UBIN BYTE UNAL INIT(1),
      393     7453    1           3 TEXT CHAR(8) INIT(' ');
      394     7454        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:36   
      395     7455        /* ! ! */
      396     7456    1   DCL 1 SIDCB_NAME          ALIGNED   CONSTANT,
      397     7457    1         2 COUNT        UBIN(18)  UNAL      INIT(4),
      398     7458    1         2 TEXT         CHAR(4)   UNAL      INIT('M$SI');
      399     7459    1   DCL 1 UIDCB_NAME          ALIGNED   CONSTANT,
      400     7460    1         2 COUNT        UBIN(18)  UNAL      INIT(4),
      401     7461    1         2 TEXT         CHAR(4)   UNAL      INIT('M$UI');
      402     7462    1   DCL 1 OUDCB_NAME          ALIGNED   CONSTANT,
      403     7463    1         2 COUNT        UBIN(18)  UNAL      INIT(4),
      404     7464    1         2 TEXT         CHAR(4)   UNAL      INIT('M$OU');
      405     7465    1   DCL 1 LODCB_NAME          ALIGNED   CONSTANT,
      406     7466    1         2 COUNT        UBIN(18)  UNAL      INIT(4),
      407     7467    1         2 TEXT         CHAR(4)   UNAL      INIT('M$LO');
      408     7468        /**/
      409     7469        /**/
      410     7470        /*
      411     7471              THIS STRUCTURE MUST PARALLEL THE OPTIONS STRUCTURE FOR NUMERIC ARGUMENTS
      412     7472        */
      413     7473        /* !R! */
      414     7474    1   DCL 1 VX_OL ALIGNED CONSTANT SYMDEF,
      415     7475    1         2 MIN_A(0:12) SBIN WORD ALIGNED INIT(0*0),
      416     7476    1         2 MIN REDEF MIN_A,
      417     7477    1           3 BREF SBIN WORD ALIGNED,
      418     7478    1           3 DCBSLOTS SBIN WORD ALIGNED,
      419     7479    1           3 DBIAS SBIN WORD ALIGNED,
      420     7480    1           3 PBIAS SBIN WORD ALIGNED,
      421     7481    1           3 SEVERITY SBIN WORD ALIGNED,
      422     7482    1           3 START SBIN WORD ALIGNED,
      423     7483    1           3 TCB SBIN WORD ALIGNED,
      424     7484    1           3 REPORT SBIN WORD ALIGNED,
      425     7485    1           3 DPATCH SBIN WORD ALIGNED,
      426     7486    1           3 IPATCH SBIN WORD ALIGNED,
      427     7487    1           3 IXTNSIZE SBIN WORD ALIGNED,
      428     7488    1           3 XTNSIZE SBIN WORD ALIGNED,
      429     7489    1           3 * SBIN WORD ALIGNED,
      430     7490    1         2 MAX_A(0:12) SBIN WORD ALIGNED INIT(
      431     7491    1           1024,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:37   
      432     7492    1           1024,
      433     7493    1           262143,
      434     7494    1           262143,
      435     7495    1           511,
      436     7496    1           262143,
      437     7497    1           217,
      438     7498    1           511,
      439     7499    1           BITBIN('777777'O),
      440     7500    1           BITBIN('777777'O),
      441     7501    1           34359737999,
      442     7502    1           131072,
      443     7503    1           0),
      444     7504    1         2 MAX REDEF MAX_A,
      445     7505    1           3 BREF SBIN WORD ALIGNED,
      446     7506    1           3 DCBSLOTS SBIN WORD ALIGNED,
      447     7507    1           3 DBIAS SBIN WORD ALIGNED,
      448     7508    1           3 PBIAS SBIN WORD ALIGNED,
      449     7509    1           3 SEVERITY SBIN WORD ALIGNED,
      450     7510    1           3 START SBIN WORD ALIGNED,
      451     7511    1           3 TCB SBIN WORD ALIGNED,
      452     7512    1           3 REPORT SBIN WORD ALIGNED,
      453     7513    1           3 DPATCH SBIN WORD ALIGNED,
      454     7514    1           3 IPATCH SBIN WORD ALIGNED,
      455     7515    1           3 * SBIN WORD ALIGNED,
      456     7516    1           3 * SBIN WORD ALIGNED,
      457     7517    1           3 * SBIN WORD ALIGNED;
      458     7518    1   DCL 1 VX_PHRASE STATIC SYMDEF,
      459     7519    1         2 PHRASE CHAR(24) UNAL
      460     7520    1           INIT('DURING PASS * IN PHASE *'),
      461     7521    1         2 I REDEF PHRASE,
      462     7522    1           3 * CHAR(12) UNAL,
      463     7523    1           3 PASS CHAR( 1) UNAL,
      464     7524    1           3 * CHAR(10) UNAL,
      465     7525    1           3 PHASE CHAR( 1) UNAL;
      466     7526        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:38   
      467     7527    1   DCL 1 VX_OD STATIC SYMDEF,
      468     7528    1         2 SIN_A(0:28) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      469     7529    1         2 SIN REDEF SIN_A,
      470     7530    1           3 SHARED BIT(1) UNAL,
      471     7531    1           3 NSHARED BIT(1) UNAL,
      472     7532    1           3 NOBREF BIT(1) UNAL,
      473     7533    1           3 NODEBUG BIT(1) UNAL,
      474     7534    1           3 NOSETS BIT(1) UNAL,
      475     7535    1           3 NOSHARELIB BIT(1) UNAL,
      476     7536    1           3 NOSYSLIB BIT(1) UNAL,
      477     7537    1           3 ALIB BIT(1) UNAL,
      478     7538    1           3 OSP BIT(1) UNAL,
      479     7539    1           3 RUN BIT(1) UNAL,
      480     7540    1           3 SYSTEM BIT(1) UNAL,
      481     7541    1           3 NOEDITING BIT(1) UNAL,
      482     7542    1           3 ASLIB BIT(1) UNAL,
      483     7543    1           3 SLIB BIT(1) UNAL,
      484     7544    1           3 PROMOTE_BLANK BIT(1) UNAL,
      485     7545    1           3 PROMOTE_LABEL BIT(1) UNAL,
      486     7546    1           3 PROMOTE BIT(1) UNAL,
      487     7547    1           3 DUPLICATE BIT(1) UNAL,
      488     7548    1           3 PROCACC BIT(1) UNAL,
      489     7549    1           3 NOCHGPMEM BIT(1) UNAL,
      490     7550    1           3 NOALTSHARELIB BIT(1) UNAL,
      491     7551    1           3 SURCHARGE BIT(1) UNAL,
      492     7552    1           3 NSTDINVOC BIT(1) UNAL,
      493     7553    1           3 STATS BIT(1) UNAL,
      494     7554    1           3 LLMU  BIT(1) UNAL,
      495     7555    1           3 LSAU  BIT(1) UNAL,
      496     7556    1           3 WARN  BIT(1) UNAL,
      497     7557    1           3 NWARN BIT(1) UNAL,
      498     7558    1           3 NPLOVER BIT(1) UNAL,
      499     7559    1         2 NUM_A(0:12) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      500     7560    1         2 NUM REDEF NUM_A,
      501     7561    1           3 BREF BIT(1) UNAL,
      502     7562    1           3 DCBSLOTS BIT(1) UNAL,
      503     7563    1           3 DBIAS BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:39   
      504     7564    1           3 PBIAS BIT(1) UNAL,
      505     7565    1           3 SEVERITY BIT(1) UNAL,
      506     7566    1           3 START BIT(1) UNAL,
      507     7567    1           3 TCB BIT(1) UNAL,
      508     7568    1           3 REPORT BIT(1) UNAL,
      509     7569    1           3 DPATCH BIT(1) UNAL,
      510     7570    1           3 IPATCH BIT(1) UNAL,
      511     7571    1           3 IXTNSIZE BIT(1) UNAL,
      512     7572    1           3 XTNSIZE BIT(1) UNAL,
      513     7573    1           3 * BIT(1) UNAL,
      514     7574    1         2 PRIV_A(0:35) BIT(1) UNAL INIT( '0'B/*@FALSE_B*/*0 ),
      515     7575    1         2 PRIV REDEF PRIV_A,
      516     7576    1           3 SPCLMM BIT(1) UNAL,
      517     7577    1           3 EXMM BIT(1) UNAL,
      518     7578    1           3 MAXMEM BIT(1) UNAL,
      519     7579    1           3 MSYS BIT(1) UNAL,
      520     7580    1           3 JIT BIT(1) UNAL,
      521     7581    1           3 TND BIT(1) UNAL,
      522     7582    1           3 PM BIT(1) UNAL,
      523     7583    1           3 EXPM BIT(1) UNAL,
      524     7584    1           3 IOQ BIT(1) UNAL,
      525     7585    1           3 IOQW BIT(1) UNAL,
      526     7586    1           3 CGOPN BIT(1) UNAL,
      527     7587    1           3 MFEP BIT(1) UNAL,
      528     7588    1           3 SYSLOG BIT(1) UNAL,
      529     7589    1           3 *   BIT(1) UNAL,
      530     7590    1           3 FMEFT BIT(1) UNAL,
      531     7591    1           3 FMBLK BIT(1) UNAL,
      532     7592    1           3 FMSEC BIT(1) UNAL,
      533     7593    1           3 FMDIAG BIT(1) UNAL,
      534     7594    1           3 GPP BIT(1) UNAL,
      535     7595    1           3 ASAVE BIT(1) UNAL,
      536     7596    1           3 SYSCON BIT(1) UNAL,
      537     7597    1           3 *    BIT(1) UNAL,
      538     7598    1           3 DISPJOB BIT(1) UNAL,
      539     7599    1           3 FMREAD BIT(1) UNAL,
      540     7600    1           3 * BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:40   
      541     7601    1           3 * BIT(1) UNAL,
      542     7602    1           3 * BIT(1) UNAL,
      543     7603    1           3 * BIT(1) UNAL,
      544     7604    1           3 * BIT(1) UNAL,
      545     7605    1           3 * BIT(1) UNAL,
      546     7606    1           3 * BIT(1) UNAL,
      547     7607    1           3 * BIT(1) UNAL,
      548     7608    1           3 * BIT(1) UNAL,
      549     7609    1           3 * BIT(1) UNAL,
      550     7610    1           3 * BIT(1) UNAL,
      551     7611    1           3 * BIT(1) UNAL,
      552     7612    1         2 MAP_A(0:3) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      553     7613    1         2 MAP REDEF MAP_A,
      554     7614    1           3 NAME BIT(1) UNAL,
      555     7615    1           3 VALUE BIT(1) UNAL,
      556     7616    1           3 UDEF BIT(1) UNAL,
      557     7617    1           3 LDEF BIT(1) UNAL,
      558     7618    1         2 FID_A$(0:5) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      559     7619    1         2 FID REDEF FID_A$,
      560     7620    1           3 ALTSHARELIB$ BIT(1) UNAL,
      561     7621    1           3 SHARELIB$ BIT(1) UNAL,
      562     7622    1           3 UNSAT$ BIT(1) UNAL,
      563     7623    1           3 SRCH$ BIT(1) UNAL,
      564     7624    1           3 * BIT(1) UNAL,
      565     7625    1           3 * BIT(1) UNAL,
      566     7626    1         2 FIDN_A$(0:3) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      567     7627    1         2 FIDN$ REDEF FIDN_A$,
      568     7628    1           3 UNSAT$ BIT(1) UNAL,
      569     7629    1           3 * BIT(1) UNAL,
      570     7630    1           3 * BIT(1) UNAL,
      571     7631    1           3 * BIT(1) UNAL,
      572     7632    1         2 ACCTN_A$(0:3) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      573     7633    1         2 ACCTN$ REDEF ACCTN_A$,
      574     7634    1           3 LIBSRCH$ BIT(1) UNAL,
      575     7635    1           3 * BIT(1) UNAL,
      576     7636    1           3 * BIT(1) UNAL,
      577     7637    1           3 * BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:41   
      578     7638    1         2 INCLUDE_A$(0:0) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      579     7639    1         2 INCL REDEF INCLUDE_A$,
      580     7640    1           3 INCLUDE$ BIT(1) UNAL,
      581     7641    1         2 DCB_MATCH_A$(0:3) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      582     7642    1         2 DCB_MATCH REDEF DCB_MATCH_A$,
      583     7643    1           3 SI$ BIT(1) UNAL,
      584     7644    1           3 UI$ BIT(1) UNAL,
      585     7645    1           3 OU$ BIT(1) UNAL,
      586     7646    1           3 LO$ BIT(1) UNAL,
      587     7647    1         2 VECTOR_A$(0:6) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      588     7648    1         2 VECTOR_ REDEF VECTOR_A$,
      589     7649    1           3 VECTOR_ BIT(1) UNAL,
      590     7650    1           3 RF      BIT(1) UNAL,
      591     7651    1           3 ENTRIES BIT(1) UNAL,
      592     7652    1           3 REMOVE_ENTDEF BIT(1) UNAL,
      593     7653    1           3 REMOVE_SYMDEF BIT(1) UNAL,
      594     7654    1           3 DATA BIT(1) UNAL,
      595     7655    1           3 * BIT(1) UNAL,
      596     7656    1         2 NODCB_A(0:3) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      597     7657    1         2 NODDCB REDEF NODCB_A,
      598     7658    1           3 NODCB1 BIT(1),
      599     7659    1           3 NODCB2 BIT(1),
      600     7660    1           3 NODCB3 BIT(1),
      601     7661    1           3 NODCB4 BIT(1),
      602     7662    1         2 SLOCK BIT(1) INIT('0'B/*@FALSE_B*/),
      603     7663    1         2 WLOCK BIT(1) INIT('0'B/*@FALSE_B*/),
      604     7664    1         2 VERSION BIT(1) INIT('0'B),
      605     7665    1         2 PSEUDO BIT(1) INIT('0'B);
      606     7666        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:42   
      607     7667        /* ! ! */
      608     7668    1   DCL      T_ALTSHARELIB_KEY_WORD        UBIN WORD ALIGNED SYMREF;
      609     7669    1   DCL      T_ASLIB_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      610     7670    1   DCL      T_BREF_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      611     7671    1   DCL      T_DATA_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      612     7672    1   DCL      T_DBIAS_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      613     7673    1   DCL      T_DCBSLOTS_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      614     7674    1   DCL      T_DUPLICATE_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      615     7675    1   DCL      T_ENTRIES_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      616     7676    1   DCL      T_SHAREABLE_KEY_WORD          UBIN WORD ALIGNED SYMREF;
      617     7677    1   DCL      T_INCLUDE_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      618     7678    1   DCL      T_LDEF_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      619     7679    1   DCL      T_LIBSRCH_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      620     7680    1   DCL      T_LINK_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      621     7681    1   DCL      T_LOAD_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      622     7682    1   DCL      T_LYNX_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      623     7683    1   DCL      T_MAP_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      624     7684    1   DCL      T_MAP_KEY_WORD_BLANK          UBIN WORD ALIGNED SYMREF;
      625     7685    1   DCL      T_NAME_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      626     7686    1   DCL      T_NB_KEY_WORD                 UBIN WORD ALIGNED SYMREF;
      627     7687    1   DCL      T_ND_KEY_WORD                 UBIN WORD ALIGNED SYMREF;
      628     7688    1   DCL      T_NL_KEY_WORD                 UBIN WORD ALIGNED SYMREF;
      629     7689    1   DCL      T_NOALTSHARELIB_KEY_WORD      UBIN WORD ALIGNED SYMREF;
      630     7690    1   DCL      T_NOBREF_KEY_WORD             UBIN WORD ALIGNED SYMREF;
      631     7691    1   DCL      T_NODEBUG_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      632     7692    1   DCL      T_NOEDITING_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      633     7693    1   DCL      T_NOSETS_KEY_WORD             UBIN WORD ALIGNED SYMREF;
      634     7694    1   DCL      T_NOSHARELIB_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      635     7695    1   DCL      T_NOSYSLIB_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      636     7696    1   DCL      T_NSHAREABLE_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      637     7697    1   DCL      T_NSTDINVOC_KEY_WORD          UBIN WORD ALIGNED SYMREF;
      638     7698    1   DCL      T_ALIB_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      639     7699    1   DCL      T_ON_KEY_WORD                 UBIN WORD ALIGNED SYMREF;
      640     7700    1   DCL      T_OVER_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      641     7701    1   DCL      T_OSP_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      642     7702    1   DCL      T_PBIAS_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      643     7703    1   DCL      T_PRIVILEGES_KEY_WORD         UBIN WORD ALIGNED SYMREF;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:43   
      644     7704    1   DCL         T_SPCLMM_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      645     7705    1   DCL         T_EXMM_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      646     7706    1   DCL         T_MAXMEM_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      647     7707    1   DCL         T_MSYS_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      648     7708    1   DCL         T_PROCACC_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      649     7709    1   DCL         T_JIT_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      650     7710    1   DCL         T_TND_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      651     7711    1   DCL         T_PM_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      652     7712    1   DCL         T_EXPM_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      653     7713    1   DCL         T_IOQ_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      654     7714    1   DCL         T_IOQW_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      655     7715    1   DCL         T_CFEP_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      656     7716    1   DCL         T_MFEP_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      657     7717    1   DCL         T_SYSLOG_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      658     7718    1   DCL         T_FMEFT_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      659     7719    1   DCL         T_FMBLK_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      660     7720    1   DCL         T_FMSEC_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      661     7721    1   DCL         T_FMREAD_KEY_WORD   UBIN WORD ALIGNED SYMREF;
      662     7722    1   DCL         T_FMDIAG_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      663     7723    1   DCL         T_GPP_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      664     7724    1   DCL         T_ASAVE_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      665     7725    1   DCL         T_SYSCON_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      666     7726    1   DCL         T_DISPJOB_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      667     7727    1   DCL         T_NOCHGPMEM_KEY_WORD   UBIN WORD ALIGNED SYMREF;
      668     7728    1   DCL      T_PROMOTE_BLANK_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      669     7729    1   DCL      T_PROMOTE_LABEL_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      670     7730    1   DCL      T_PROMOTE_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      671     7731    1   DCL      T_REMOVE_ENTDEF_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      672     7732    1   DCL      T_REMOVE_SYMDEF_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      673     7733    1   DCL      T_REPORT_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      674     7734    1   DCL      T_RF_KEY_WORD                    UBIN WORD ALIGNED SYMREF;
      675     7735    1   DCL      T_RUN_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      676     7736    1   DCL      T_SEVERITY_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      677     7737    1   DCL      T_SHARELIB_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      678     7738    1   DCL      T_SLIB_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      679     7739    1   DCL      T_SLOCK_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      680     7740    1   DCL      T_SRCH_KEY_WORD               UBIN WORD ALIGNED SYMREF;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:44   
      681     7741    1   DCL      T_START_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      682     7742    1   DCL      T_STATS_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      683     7743    1   DCL      T_LLMU_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      684     7744    1   DCL      T_LSAU_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      685     7745    1   DCL      T_SYSTEM_KEY_WORD             UBIN WORD ALIGNED SYMREF;
      686     7746    1   DCL      T_WARN_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      687     7747    1   DCL      T_NWARN_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      688     7748    1   DCL      T_NPLOVER_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      689     7749    1   DCL      T_SURCHARGE_KEY_WORD          UBIN WORD ALIGNED SYMREF;
      690     7750    1   DCL      T_TCB_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      691     7751    1   DCL      T_UDEF_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      692     7752    1   DCL      T_UNSAT_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      693     7753    1   DCL      T_VALUE_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      694     7754    1   DCL      T_DPATCH_KEY_WORD             UBIN WORD ALIGNED SYMREF;
      695     7755    1   DCL      T_IPATCH_KEY_WORD             UBIN WORD ALIGNED SYMREF;
      696     7756    1   DCL      T_IXTNSIZE_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      697     7757    1   DCL      T_XTNSIZE_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      698     7758    1   DCL      T_VECTOR_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      699     7759    1   DCL      T_VERSION_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      700     7760    1   DCL      T_WLOCK_KEY_WORD                 UBIN WORD ALIGNED SYMREF;
      701     7761    1   DCL T_PSEUDO_KEY_WORD UBIN WORD ALIGNED SYMREF;
      702     7762        /*
      703     7763                  The following eight structures must be same as P$LIT macro
      704     7764        */
      705     7765    1   DCL 1 SIDCB_KEY_WORD ALIGNED CONSTANT,
      706     7766    1         2 * UBIN INIT(0),
      707     7767    1         2 COUNT UBIN BYTE UNAL INIT(10),
      708     7768    1         2 * UBIN BYTE UNAL INIT(0),
      709     7769    1         2 TEXT CHAR(10) INIT ('SIDCB/DCB1');
      710     7770    1   DCL 1 UIDCB_KEY_WORD ALIGNED CONSTANT,
      711     7771    1         2 * UBIN INIT(0),
      712     7772    1         2 COUNT UBIN BYTE UNAL INIT(10),
      713     7773    1         2 * UBIN BYTE UNAL INIT(0),
      714     7774    1         2 TEXT CHAR(10) INIT ('UIDCB/DCB2');
      715     7775    1   DCL 1 OUDCB_KEY_WORD ALIGNED CONSTANT,
      716     7776    1         2 * UBIN INIT(0),
      717     7777    1         2 COUNT UBIN BYTE UNAL INIT(10),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:45   
      718     7778    1         2 * UBIN BYTE UNAL INIT(0),
      719     7779    1         2 TEXT CHAR(10) INIT ('OUDCB/DCB3');
      720     7780    1   DCL 1 LODCB_KEY_WORD ALIGNED CONSTANT,
      721     7781    1         2 * UBIN INIT(0),
      722     7782    1         2 COUNT UBIN BYTE UNAL INIT(10),
      723     7783    1         2 * UBIN BYTE UNAL INIT(0),
      724     7784    1         2 TEXT CHAR(10) INIT ('LODCB/DCB4');
      725     7785    1   DCL 1 NODCB1_KEY_WORD ALIGNED CONSTANT,
      726     7786    1         2 * UBIN INIT(0),
      727     7787    1         2 COUNT UBIN BYTE UNAL INIT(12),
      728     7788    1         2 * UBIN BYTE UNAL INIT(0),
      729     7789    1         2 TEXT CHAR(12) INIT ('NDCB1/NSIDCB');
      730     7790    1   DCL 1 NODCB2_KEY_WORD ALIGNED CONSTANT,
      731     7791    1         2 * UBIN INIT(0),
      732     7792    1         2 COUNT UBIN BYTE UNAL INIT(12),
      733     7793    1         2 * UBIN BYTE UNAL INIT(0),
      734     7794    1         2 TEXT CHAR(12) INIT ('NDCB2/NUIDCB');
      735     7795    1   DCL 1 NODCB3_KEY_WORD ALIGNED CONSTANT,
      736     7796    1         2 * UBIN INIT(0),
      737     7797    1         2 COUNT UBIN BYTE UNAL INIT(12),
      738     7798    1         2 * UBIN BYTE UNAL INIT(0),
      739     7799    1         2 TEXT CHAR(12) INIT ('NDCB3/NOUDCB');
      740     7800    1   DCL 1 NODCB4_KEY_WORD ALIGNED CONSTANT,
      741     7801    1         2 * UBIN INIT(0),
      742     7802    1         2 COUNT UBIN BYTE UNAL INIT(12),
      743     7803    1         2 * UBIN BYTE UNAL INIT(0),
      744     7804    1         2 TEXT CHAR(12) INIT ('NDCB4/NLODCB');
      745     7805    1   DCL B$JIT$      PTR       ALIGNED   SYMREF;
      746     7806        /* !R! */
      747     7807    1   DCL 1 VX_ON CONSTANT SYMDEF,
      748     7808    1         2 SIN_A(0:28) PTR ALIGNED INIT(
      749     7809    1           ADDR( T_SHAREABLE_KEY_WORD ),
      750     7810    1           ADDR( T_NSHAREABLE_KEY_WORD ),
      751     7811    1           ADDR( T_NOBREF_KEY_WORD ),
      752     7812    1           ADDR( T_NODEBUG_KEY_WORD ),
      753     7813    1           ADDR( T_NOSETS_KEY_WORD ),
      754     7814    1           ADDR( T_NOSHARELIB_KEY_WORD ),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:46   
      755     7815    1           ADDR( T_NOSYSLIB_KEY_WORD ),
      756     7816    1           ADDR( T_ALIB_KEY_WORD ),
      757     7817    1           ADDR( T_OSP_KEY_WORD ),
      758     7818    1           ADDR( T_RUN_KEY_WORD ),
      759     7819    1           ADDR( T_SYSTEM_KEY_WORD ),
      760     7820    1           ADDR( T_NOEDITING_KEY_WORD ),
      761     7821    1           ADDR( T_ASLIB_KEY_WORD ),
      762     7822    1           ADDR( T_SLIB_KEY_WORD ),
      763     7823    1           ADDR( T_PROMOTE_BLANK_KEY_WORD ),
      764     7824    1           ADDR( T_PROMOTE_LABEL_KEY_WORD ),
      765     7825    1           ADDR( T_PROMOTE_KEY_WORD ),
      766     7826    1           ADDR( T_DUPLICATE_KEY_WORD ),
      767     7827    1           ADDR( T_PROCACC_KEY_WORD ),
      768     7828    1           ADDR( T_NOCHGPMEM_KEY_WORD ),
      769     7829    1           ADDR( T_NOALTSHARELIB_KEY_WORD ),
      770     7830    1           ADDR( T_SURCHARGE_KEY_WORD ),
      771     7831    1           ADDR( T_NSTDINVOC_KEY_WORD ),
      772     7832    1           ADDR( T_STATS_KEY_WORD ),
      773     7833    1           ADDR( T_LLMU_KEY_WORD ),
      774     7834    1           ADDR( T_LSAU_KEY_WORD ),
      775     7835    1           ADDR( T_WARN_KEY_WORD ),
      776     7836    1           ADDR( T_NWARN_KEY_WORD ),
      777     7837    1           ADDR( T_NPLOVER_KEY_WORD ) ),
      778     7838    1         2 SIN REDEF SIN_A,
      779     7839    1           3 SHARED PTR ALIGNED,
      780     7840    1           3 NSHARED PTR ALIGNED,
      781     7841    1           3 NOBREF PTR ALIGNED,
      782     7842    1           3 NODEBUG PTR ALIGNED,
      783     7843    1           3 NOSETS PTR ALIGNED,
      784     7844    1           3 NOSHARELIB PTR ALIGNED,
      785     7845    1           3 NOSYSLIB PTR ALIGNED,
      786     7846    1           3 ALIB PTR ALIGNED,
      787     7847    1           3 OSP PTR ALIGNED,
      788     7848    1           3 RUN PTR ALIGNED,
      789     7849    1           3 SYSTEM PTR ALIGNED,
      790     7850    1           3 NOEDITING PTR ALIGNED,
      791     7851    1           3 ASLIB PTR ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:47   
      792     7852    1           3 SLIB PTR ALIGNED,
      793     7853    1           3 PROMOTE_BLANK PTR ALIGNED,
      794     7854    1           3 PROMOTE_LABEL PTR ALIGNED,
      795     7855    1           3 PROMOTE PTR ALIGNED,
      796     7856    1           3 DUPLICATE PTR ALIGNED,
      797     7857    1           3 PROCACC PTR ALIGNED,
      798     7858    1           3 NOCHGPMEM PTR ALIGNED,
      799     7859    1           3 NOALTSHARELIB PTR ALIGNED,
      800     7860    1           3 SURCHARGE PTR ALIGNED,
      801     7861    1           3 NSTDINVOC PTR ALIGNED,
      802     7862    1           3 STATS PTR ALIGNED,
      803     7863    1           3 LLMU  PTR ALIGNED,
      804     7864    1           3 LSAU  PTR ALIGNED,
      805     7865    1           3 WARN  PTR ALIGNED,
      806     7866    1           3 NWARN PTR ALIGNED,
      807     7867    1           3 NPLOVER PTR ALIGNED,
      808     7868    1         2 NUM_A(0:12) PTR ALIGNED INIT(
      809     7869    1           ADDR( T_BREF_KEY_WORD ),
      810     7870    1           ADDR( T_DCBSLOTS_KEY_WORD ),
      811     7871    1           ADDR( T_DBIAS_KEY_WORD ),
      812     7872    1           ADDR( T_PBIAS_KEY_WORD ),
      813     7873    1           ADDR( T_SEVERITY_KEY_WORD ),
      814     7874    1           ADDR( T_START_KEY_WORD ),
      815     7875    1           ADDR( T_TCB_KEY_WORD ),
      816     7876    1           ADDR( T_REPORT_KEY_WORD ),
      817     7877    1           ADDR( T_DPATCH_KEY_WORD ),
      818     7878    1           ADDR( T_IPATCH_KEY_WORD ),
      819     7879    1           ADDR( T_IXTNSIZE_KEY_WORD ),
      820     7880    1           ADDR( T_XTNSIZE_KEY_WORD ),
      821     7881    1           ADDR( NIL ) ),
      822     7882    1         2 NUM REDEF NUM_A,
      823     7883    1           3 BREF PTR ALIGNED,
      824     7884    1           3 DCBSLOTS PTR ALIGNED,
      825     7885    1           3 DBIAS PTR ALIGNED,
      826     7886    1           3 PBIAS PTR ALIGNED,
      827     7887    1           3 SEVERITY PTR ALIGNED,
      828     7888    1           3 START PTR ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:48   
      829     7889    1           3 TCB PTR ALIGNED,
      830     7890    1           3 REPORT PTR ALIGNED,
      831     7891    1           3 * PTR ALIGNED,
      832     7892    1           3 * PTR ALIGNED,
      833     7893    1           3 * PTR ALIGNED,
      834     7894    1           3 * PTR ALIGNED,
      835     7895    1           3 * PTR ALIGNED,
      836     7896    1         2 PRIV_A(0:35) PTR ALIGNED INIT(
      837     7897    1           ADDR( T_SPCLMM_KEY_WORD ),
      838     7898    1           ADDR( T_EXMM_KEY_WORD ),
      839     7899    1           ADDR( T_MAXMEM_KEY_WORD ),
      840     7900    1           ADDR( T_MSYS_KEY_WORD ),
      841     7901    1           ADDR( T_JIT_KEY_WORD ),
      842     7902    1           ADDR( T_TND_KEY_WORD ),
      843     7903    1           ADDR( T_PM_KEY_WORD ),
      844     7904    1           ADDR( T_EXPM_KEY_WORD ),
      845     7905    1           ADDR( T_IOQ_KEY_WORD ),
      846     7906    1           ADDR( T_IOQW_KEY_WORD ),
      847     7907    1           ADDR( T_CFEP_KEY_WORD ),
      848     7908    1           ADDR( T_MFEP_KEY_WORD ),
      849     7909    1           ADDR( T_SYSLOG_KEY_WORD ),
      850     7910    1           ADDR( NIL ),
      851     7911    1           ADDR( T_FMEFT_KEY_WORD ),
      852     7912    1           ADDR( T_FMBLK_KEY_WORD ),
      853     7913    1           ADDR( T_FMSEC_KEY_WORD ),
      854     7914    1           ADDR( T_FMDIAG_KEY_WORD ),
      855     7915    1           ADDR( T_GPP_KEY_WORD ),
      856     7916    1           ADDR( T_ASAVE_KEY_WORD ),
      857     7917    1           ADDR( T_SYSCON_KEY_WORD ),
      858     7918    1           ADDR( NIL ),
      859     7919    1           ADDR( T_DISPJOB_KEY_WORD ),
      860     7920    1           ADDR( T_FMREAD_KEY_WORD ),
      861     7921    1           ADDR( NIL ),
      862     7922    1           ADDR( NIL ),
      863     7923    1           ADDR( NIL ),
      864     7924    1           ADDR( NIL ),
      865     7925    1           ADDR( NIL ),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:49   
      866     7926    1           ADDR( NIL ),
      867     7927    1           ADDR( NIL ),
      868     7928    1           ADDR( NIL ),
      869     7929    1           ADDR( NIL ),
      870     7930    1           ADDR( NIL ),
      871     7931    1           ADDR( NIL ),
      872     7932    1           ADDR( NIL ) ),
      873     7933    1         2 PRIV REDEF PRIV_A,
      874     7934    1           3 SPCLMM PTR ALIGNED,
      875     7935    1           3 EXMM PTR ALIGNED,
      876     7936    1           3 MAXMEM PTR ALIGNED,
      877     7937    1           3 MSYS PTR ALIGNED,
      878     7938    1           3 JIT PTR ALIGNED,
      879     7939    1           3 TND PTR ALIGNED,
      880     7940    1           3 PM PTR ALIGNED,
      881     7941    1           3 EXPM PTR ALIGNED,
      882     7942    1           3 IOQ PTR ALIGNED,
      883     7943    1           3 IOQW PTR ALIGNED,
      884     7944    1           3 CFEP PTR ALIGNED,
      885     7945    1           3 MFEP PTR ALIGNED,
      886     7946    1           3 SYSLOG PTR ALIGNED,
      887     7947    1           3 *  PTR ALIGNED,               /* Old ENQ privilege */
      888     7948    1           3 FMEFT PTR ALIGNED,
      889     7949    1           3 FMBLK PTR ALIGNED,
      890     7950    1           3 FMSEC PTR ALIGNED,
      891     7951    1           3 FMDIAG PTR ALIGNED,
      892     7952    1           3 GPP PTR ALIGNED,
      893     7953    1           3 ASAVE PTR ALIGNED,
      894     7954    1           3 SYSCON PTR ALIGNED,
      895     7955    1           3 *    PTR ALIGNED,
      896     7956    1           3 DISPJOB PTR ALIGNED,
      897     7957    1           3 FMREAD PTR ALIGNED,
      898     7958    1           3 * PTR ALIGNED,
      899     7959    1           3 * PTR ALIGNED,
      900     7960    1           3 * PTR ALIGNED,
      901     7961    1           3 * PTR ALIGNED,
      902     7962    1           3 * PTR ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:50   
      903     7963    1           3 * PTR ALIGNED,
      904     7964    1           3 * PTR ALIGNED,
      905     7965    1           3 * PTR ALIGNED,
      906     7966    1           3 * PTR ALIGNED,
      907     7967    1           3 * PTR ALIGNED,
      908     7968    1           3 * PTR ALIGNED,
      909     7969    1           3 * PTR ALIGNED,
      910     7970    1         2 MAP_A(0:3) PTR ALIGNED INIT(
      911     7971    1           ADDR( T_NAME_KEY_WORD ),
      912     7972    1           ADDR( T_VALUE_KEY_WORD ),
      913     7973    1           ADDR( T_UDEF_KEY_WORD ),
      914     7974    1           ADDR( T_LDEF_KEY_WORD ) ),
      915     7975    1         2 MAP REDEF MAP_A,
      916     7976    1           3 NAME PTR ALIGNED,
      917     7977    1           3 VALUE PTR ALIGNED,
      918     7978    1           3 UDEF PTR ALIGNED,
      919     7979    1           3 LDEF PTR ALIGNED,
      920     7980    1         2 FID_A$(0:5) PTR ALIGNED INIT(
      921     7981    1           ADDR( T_ALTSHARELIB_KEY_WORD ),
      922     7982    1           ADDR( T_SHARELIB_KEY_WORD ),
      923     7983    1           ADDR( T_UNSAT_KEY_WORD ),
      924     7984    1           ADDR( NIL ),
      925     7985    1           ADDR( NIL ),
      926     7986    1           ADDR( NIL ) ),
      927     7987    1         2 FID REDEF FID_A$,
      928     7988    1           3 ALTSHARELIB$ PTR ALIGNED,
      929     7989    1           3 SHARELIB$ PTR ALIGNED,
      930     7990    1           3 UNSAT$ PTR ALIGNED,
      931     7991    1           3 * PTR ALIGNED,
      932     7992    1           3 * PTR ALIGNED,
      933     7993    1           3 * PTR ALIGNED,
      934     7994    1         2 FIDN_A$(0:3) PTR ALIGNED INIT(
      935     7995    1           ADDR( T_UNSAT_KEY_WORD ),
      936     7996    1           ADDR( NIL ),
      937     7997    1           ADDR( NIL ),
      938     7998    1           ADDR( NIL ) ),
      939     7999    1         2 FIDN$ REDEF FIDN_A$,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:51   
      940     8000    1           3 UNSAT$ PTR ALIGNED,
      941     8001    1           3 * PTR ALIGNED,
      942     8002    1           3 * PTR ALIGNED,
      943     8003    1           3 * PTR ALIGNED,
      944     8004    1         2 ACCTN_A$(0:3) PTR ALIGNED INIT(
      945     8005    1           ADDR( T_LIBSRCH_KEY_WORD ),
      946     8006    1           ADDR( T_SRCH_KEY_WORD ),
      947     8007    1           ADDR( NIL ),
      948     8008    1           ADDR( NIL ) ),
      949     8009    1         2 ACCTN$ REDEF ACCTN_A$,
      950     8010    1           3 LIBSRCH$ PTR ALIGNED,
      951     8011    1           3 SRCH$ PTR ALIGNED,
      952     8012    1           3 * PTR ALIGNED,
      953     8013    1           3 * PTR ALIGNED,
      954     8014    1         2 INCLUDE_A$(0:0) PTR ALIGNED INIT(
      955     8015    1           ADDR( T_INCLUDE_KEY_WORD ) ),
      956     8016    1         2 INCL REDEF INCLUDE_A$,
      957     8017    1           3 INCLUDE$ PTR ALIGNED,
      958     8018    1         2 DCB_MATCH_A$(0:3) PTR ALIGNED INIT(
      959     8019    1           ADDR( SIDCB_KEY_WORD ),
      960     8020    1           ADDR( UIDCB_KEY_WORD ),
      961     8021    1           ADDR( OUDCB_KEY_WORD ),
      962     8022    1           ADDR( LODCB_KEY_WORD ) ),
      963     8023    1         2 DCB_MATCH REDEF DCB_MATCH_A$,
      964     8024    1           3 SI$ PTR ALIGNED,
      965     8025    1           3 UI$ PTR ALIGNED,
      966     8026    1           3 OU$ PTR ALIGNED,
      967     8027    1           3 LO$ PTR ALIGNED,
      968     8028    1         2 VECTOR_A$(0:6) PTR INIT(
      969     8029    1           ADDR(T_VECTOR_KEY_WORD),
      970     8030    1           ADDR(T_RF_KEY_WORD),
      971     8031    1           ADDR(T_ENTRIES_KEY_WORD),
      972     8032    1           ADDR(T_REMOVE_ENTDEF_KEY_WORD),
      973     8033    1           ADDR(T_REMOVE_SYMDEF_KEY_WORD),
      974     8034    1           ADDR(T_DATA_KEY_WORD),
      975     8035    1           ADDR(NIL) ),
      976     8036    1         2 VECTOR_ REDEF VECTOR_A$,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:52   
      977     8037    1           3 VECTOR$ PTR ALIGNED,
      978     8038    1           3 RF$ PTR ALIGNED,
      979     8039    1           3 ENTRIES$ PTR ALIGNED,
      980     8040    1           3 REMOVE_ENTDEF$ PTR ALIGNED,
      981     8041    1           3 REMOVE_SYMDEF$ PTR ALIGNED,
      982     8042    1           3 DATA PTR,
      983     8043    1           3 * PTR,
      984     8044    1         2 NODCB_A$(0:3) PTR INIT(
      985     8045    1             ADDR( NODCB1_KEY_WORD ),
      986     8046    1             ADDR( NODCB2_KEY_WORD ),
      987     8047    1             ADDR( NODCB3_KEY_WORD ),
      988     8048    1             ADDR( NODCB4_KEY_WORD ) ),
      989     8049    1         2 NODCB REDEF NODCB_A$,
      990     8050    1           3 NODCB1$ PTR,
      991     8051    1           3 NODCB2$ PTR,
      992     8052    1           3 NODCB3$ PTR,
      993     8053    1           3 NODCB4$ PTR,
      994     8054        /* ! ! */
      995     8055    1         2 SLOCK PTR INIT( ADDR( T_SLOCK_KEY_WORD ) ),
      996     8056    1         2 WLOCK PTR INIT( ADDR( T_WLOCK_KEY_WORD ) ),
      997     8057    1         2 VERSION PTR INIT(ADDR(T_VERSION_KEY_WORD)),
      998     8058    1         2 PSEUDO PTR INIT(ADDR(T_PSEUDO_KEY_WORD));
      999     8059        /* !R!
     1000     8060              2 SLOCK$ PTR,
     1001     8061              2 WLOCK$ PTR,
     1002     8062              2 VERSION$ PTR,
     1003     8063              2 PSEUDO$ PTR;
     1004     8064        */
     1005     8065        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:53   
     1006     8066        /*
     1007     8067              VARIABLES FOR ERRMSG
     1008     8068        */
     1009     8069    1   DCL 1 VX_ERR_CODE ALIGNED STATIC SYMDEF,
     1010     8070    1         2 FCG UBIN(12) UNAL INIT( BITBIN('2630'O) ),
     1011     8071    1         2 MID UBIN(6) UNAL INIT(BITBIN('05'O)),
     1012     8072    1         2 ERR# UBIN(15) UNAL INIT(0),
     1013     8073    1         2 SEV UBIN(3) UNAL INIT(0);
     1014     8074    1   DCL 1 VX_ERR_CODE_AUX ALIGNED STATIC SYMDEF,
     1015     8075    1         2 FCG UBIN(12) UNAL INIT( BITBIN('2630'O) ),
     1016     8076    1         2 MID UBIN(6) UNAL INIT(BITBIN('05'O)),
     1017     8077    1         2 ERR# UBIN(15) UNAL INIT(0),
     1018     8078    1         2 SEV UBIN(3) UNAL INIT(0);
     1019     8079    1   DCL 1 VX_EBUF ALIGNED STATIC SYMDEF,
     1020     8080    1         2 CHARS_A(0:132) CHAR(1) UNAL INIT(' '*0),
     1021     8081    1         2 CHARS REDEF CHARS_A CHAR(133) UNAL;
     1022     8082    1   DCL 1 VX_EFIELD1 ALIGNED STATIC SYMDEF,
     1023     8083    1         2 COUNT UBIN(9) UNAL INIT(0),
     1024     8084    1         2 CHARS CHAR(79) UNAL INIT(' '),
     1025     8085    1         2 CHARS_A(0:78) REDEF CHARS CHAR(1) UNAL;
     1026     8086    1   DCL 1 VX_EFIELD2 ALIGNED STATIC SYMDEF,
     1027     8087    1         2 COUNT UBIN(9) UNAL INIT(0),
     1028     8088    1         2 CHARS CHAR(79) UNAL INIT(' '),
     1029     8089    1         2 CHARS_A(0:78) REDEF CHARS CHAR(1) UNAL;
     1030     8090    1   DCL 1 VX_EFIELD3 ALIGNED STATIC SYMDEF,
     1031     8091    1         2 COUNT UBIN(9) UNAL INIT(0),
     1032     8092    1         2 CHARS CHAR(79) UNAL INIT(' '),
     1033     8093    1         2 CHARS_A(0:78) REDEF CHARS CHAR(1) UNAL;
     1034     8094        /*
     1035     8095              IMAGE FORMATION VARIABLES
     1036     8096        */
     1037     8097    1   DCL VX_IMAGE$ PTR ALIGNED STATIC SYMDEF INIT(ADDR(NIL));
              8097            /* PTR TO BUFFER VARIABLES */
     1038     8098    1   DCL VX_BADR(0:2/*@ROS*/) SBIN WORD ALIGNED STATIC SYMDEF INIT(0*0);
              8098            /* STARTING ADDRESSES FOR PROC, DATA, ROS */
     1039     8099    1   DCL VX_EADR(0:2/*@ROS*/) SBIN WORD ALIGNED STATIC SYMDEF INIT(0*0);
              8099            /* ENDING ADDRESSES FOR PROC, DATA, ROS */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:54   
     1040     8100    1   DCL VX_TARGET_COUNT  UBIN(36) ALIGNED    STATIC    SYMDEF    INIT(0);
     1041     8101    1   DCL VX_SOURCE_COUNT  UBIN(36) ALIGNED    STATIC    SYMDEF    INIT(0);
     1042     8102        /*
     1043     8103              IO VARIABLES/GLOBAL
     1044     8104        */
     1045     8105    1   DCL VX_IO_STATUS          SBIN WORD ALIGNED   STATIC    SYMDEF INIT(-1);
     1046     8106    1   DCL VX_IO_SIZEW           SBIN WORD ALIGNED   STATIC    SYMDEF INIT(0);
     1047     8107    1   DCL VX_IO_SIZEC           SBIN WORD ALIGNED   STATIC    SYMDEF INIT(0);
     1048     8108    1   DCL VX_IO_USEPREV         SBIN WORD ALIGNED   STATIC    SYMDEF INIT(0);
     1049     8109    1   DCL VX_IO_SAVEPREV        SBIN WORD ALIGNED   STATIC    SYMDEF INIT(0);
     1050     8110        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:55   
     1051     8111        /*
     1052     8112              HEADER DEFINITION
     1053     8113        */
     1054     8114    1   DCL 1 VX_HEADER STATIC SYMDEF,
     1055     8115    1         2 * CHAR(20) UNAL INIT('                    '),
     1056     8116    1         2 DAY_C CHAR( 5) UNAL INIT('     '),
     1057     8117    1         2 * CHAR( 2) UNAL INIT('  '),
     1058     8118    1         2 DATE_C CHAR(10) UNAL INIT('          '),
     1059     8119    1         2 * CHAR( 2) UNAL INIT('  '),
     1060     8120    1         2 TIME_C CHAR(11) UNAL INIT('           ');
     1061     8121        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:56   
     1062     8122        /*
     1063     8123              CONSTANTS/VARIABLES FOR KEYS
     1064     8124        */
     1065     8125    1   DCL VX_O_KEY_HEAD         CHAR(1)   UNAL CONSTANT SYMDEF
     1066     8126    1                   INIT( BITASC( '042'O ) );
     1067     8127    1   DCL VX_O_KEY_TREE         CHAR(6)   UNAL CONSTANT SYMDEF INIT('"TREE"');
     1068     8128    1   DCL VX_R_KEY_HEAD         CHAR(4)   UNAL CONSTANT SYMDEF INIT('HEAD');
     1069     8129    1   DCL VX_R_KEY_BIRTH        CHAR(5)   UNAL CONSTANT SYMDEF INIT('BIRTH');
     1070     8130    1   DCL VX_P_ENTDEF UBIN(36) STATIC SYMDEF INIT(0);
              8130            /* PRIMARY ENTDEF FOR DEBUG RECORDS */
     1071     8131        /**/
     1072     8132        /**/
     1073     8133        /**/
     1074     8134    1   DCL VX_KEY_USEPREV UBIN(36) STATIC SYMDEF INIT(0);
              8134            /* SWITCH TO INDICATE WHETHER TO USE PREVIOUS KEY OR NOT */
     1075     8135    1   DCL VX_KEY_NAME$          PTR            STATIC    SYMDEF    INIT(ADDR(NIL));
     1076     8136                                                /* PTR TO TEXTC NAME FOR LIB. EARCHES */
     1077     8137        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:57   
     1078     8138        /*
     1079     8139              LIBRARY VARIABLES
     1080     8140        */
     1081     8141    1   DCL VX_SLIB_HEAD$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1082     8142                                                /* HEAD POINTER FOR SHARED LIBRARIES */
     1083     8143    1   DCL VX_SLIB_INIT$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1084     8144                       /* POINTER TO SHARED LIBRARY FILE WHICH WILL INITIALIZE DATA */
     1085     8145    1   DCL VX_SLIB_MAX_DATA UBIN(36) ALIGNED STATIC SYMDEF INIT(0);
              8145            /* MAXIMUM DATA AREA ENCOUNTERED FOR SHARED LIBRARIES */
     1086     8146        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:58   
     1087     8147        /*
     1088     8148              SIZES
     1089     8149        */
     1090     8150    1   DCL VX_REC_BUF_START$     PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1091     8151    1   DCL VX_REC_BUF_SIZE UBIN(36) ALIGNED STATIC SYMDEF INIT(0);
              8151            /* MAX SIZE FOR RECEIVING BUFFER */
     1092     8152    1   DCL VX_BREF_START$        PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1093     8153    1   DCL VX_NEXT_BREF$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1094     8154    1   DCL VX_BREF_SIZE          UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1095     8155    1   DCL VX_BREF_ADR           UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1096     8156    1   DCL VX_BREF_INSTANCE      UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1097     8157    1   DCL VX_BREF_DEFINITION    UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1098     8158    1   DCL 1 VX_XSO$BREF ALIGNED CONSTANT SYMDEF,
     1099     8159    1         2 COUNT UBIN(18) UNAL INIT(30),
     1100     8160    1         2 CHARS CHAR(30) UNAL INIT(
     1101     8161    1           '6XSO$BREF$$$$$$$$$$$$$$$$$$$$$');
     1102     8162    1   DCL 1 VX_TSX0_OVERLAY ALIGNED STATIC SYMDEF,
     1103     8163    1         2 H ALIGNED,
     1104     8164    1           3 LEFT_HALF UBIN(18) UNAL INIT(0),
     1105     8165    1           3 RIGHT_HALF UBIN(18) UNAL INIT( BITBIN('700000'O) ),
     1106     8166    1         2 I REDEF H ALIGNED,
     1107     8167    1           3 WORD0 UBIN(36) UNAL;
     1108     8168        /**/
     1109     8169        /**/
     1110     8170    1   DCL VX_SLIB_AREA$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1111     8171    1   DCL VX_SLIB_AREA_SIZE     UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1112     8172    1   DCL VX_SC_X_NODE$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1113     8173    1   DCL   VX_DCB_USER_NEXT    UBIN(36)            STATIC   SYMDEF INIT(10
              8173            /*@DCB_NUM_START*/);
     1114     8174    1   DCL VX_DCB_HEAD$          PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1115     8175    1   DCL VX_DCB_TAIL$          PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1116     8176    1   DCL VX_DCB_START$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1117     8177    1   DCL VX_DCB_STOP$          PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1118     8178    1   DCL VX_MERGE_START$       PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1119     8179    1   DCL VX_MERGE_STOP$        PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1120     8180    1   DCL VX_ROOT_DN_INC UBIN(36) ALIGNED STATIC SYMDEF INIT(0);
              8180            /* # OF WORDS IN DN LIST FOR DCB NAMES */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:59   
     1121     8181    1   DCL VX_SYS           CHAR(8)   CONSTANT    SYMDEF  INIT(':SYS');
     1122     8182        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:60   
     1123     8183        /*
     1124     8184              PRIMARY INDEX STRUCTURE ARRAYS FOR PASS 1
     1125     8185        */
     1126     8186    1   DCL VX_PASS1_REC_TYPE(0:9)     SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1127     8187    1              INIT(%TYPDNAM,%TYPRNAM,%TYPSECT,%TYPEDEF,%TYPEREF,%TYPSDEF,%TYPSEGDEF,%
              8187                       TYPSREF,%TYPSEGREF,-1);
     1128     8188        /*
     1129     8189              RECORD TYPES TO BE READ FROM RUN UNIT FILES ( SHARED LIBRARIES, ETC. )
     1130     8190        */
     1131     8191    1   DCL VX_PASS1_REC_TYPE_RUN(0:3) UBIN(36)  ALIGNED   CONSTANT    SYMDEF
     1132     8192    1              INIT(     %TYPDNAM,
     1133     8193    1                        %TYPEDEF,
     1134     8194    1                        %TYPSDEF,
     1135     8195    1                        %TYPSEGDEF );
     1136     8196    1   DCL VX_PASS1_ALL_TYPE(0:9)     SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1137     8197    1         INIT( -1,4/*@DN_DS_1*/,0/*@RN_DS_1*/,7/*@SC_DS_1*/,5/*@ED_DS_1*/,1/*@ER_DS_1*/
              8197                  ,6/*@DD_DS_1*/,-1/*@DR_DS_1*/,3/*@SD_DS_1*/,-1/*@SR_DS_1*/);
     1138     8198    1   DCL VX_PASS1_LIB_ALL_TYPE(0:9) SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1139     8199    1         INIT( -1,4/*@DN_DS_1*/,0/*@RN_DS_1*/,7/*@SC_DS_1*/,4/*@DN_DS_1*/,7/*@SC_DS_1*/
              8199                  ,0/*@RN_DS_1*/,0/*@RN_DS_1*/,3/*@SD_DS_1*/,-1/*@SR_DS_1*/);
     1140     8200    1   DCL VX_HEAD_INX(0:9)           SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1141     8201    1         INIT(-1, 0, 1, -1, 2, 3, 4, 5, 6, 7 );
     1142     8202    1   DCL VX_REC_SIZE_A(0:15)  SBIN(36)  ALIGNED   CONSTANT    SYMDEF
     1143     8203    1              INIT(     1/*@M_SN_ESZ*/,
     1144     8204    1                        1/*@M_DN_ESZ*/,
     1145     8205    1                        1/*@M_RN_ESZ*/,
     1146     8206    1                        3/*@M_SC_ESZ*/,
     1147     8207    1                        2/*@M_ED_ESZ*/,
     1148     8208    1                        1/*@M_ER_ESZ*/,
     1149     8209    1                        2/*@M_DD_ESZ*/,
     1150     8210    1                        1/*@M_DR_ESZ*/,
     1151     8211    1                        2/*@M_SD_ESZ*/,
     1152     8212    1                        1/*@M_SR_ESZ*/,
     1153     8213    1                        1/*@M_PR_ESZ*/,
     1154     8214    1                        4/*@M_LB_ESZ*/,
     1155     8215    1                        2/*@M_IE_ESZ*/,
     1156     8216    1                        3/*@M_ES_ESZ*/,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:61   
     1157     8217    1                        5/*@M_VR_ESZ*/,
     1158     8218    1                        1/*@M_PN_ESZ*/);
     1159     8219    1   DCL VX_DEF_REC_A(0:3) UBIN(36) ALIGNED CONSTANT SYMDEF INIT(%TYPDNAM,%TYPEDEF,%
              8219            TYPSDEF,%TYPSEGDEF); /* LIST OF DEF RECORDS */
     1160     8220    1   DCL VX_REF_REC_A(0:3) UBIN(36) ALIGNED CONSTANT SYMDEF INIT(%TYPRNAM,%TYPEREF,%
              8220            TYPSREF,%TYPSEGREF); /* LIST OF REF RECORDS */
     1161     8221    1   DCL VX_REF_MATCH_A(0:9) SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1162     8222    1              INIT(     -1,
     1163     8223    1                        -1,
     1164     8224    1                        -1,
     1165     8225    1                        -1,
     1166     8226    1                        %TYPEREF,
     1167     8227    1                        %TYPEDEF,
     1168     8228    1                        %TYPSREF,
     1169     8229    1                        %TYPSDEF,
     1170     8230    1                        %TYPSEGREF,
     1171     8231    1                        %TYPSEGDEF);       /* MATCH LIST REF <-> DEF */
     1172     8232    1   DCL VX_MATCH_NAME_A(0:9)     UBIN(36)  ALIGNED   CONSTANT    SYMDEF
     1173     8233    1              INIT(          9999,
     1174     8234    1                             9999,
     1175     8235    1                             9999,
     1176     8236    1                              %TYPDNAM,    /*SC*/
     1177     8237    1                              %TYPDNAM,    /*ED*/
     1178     8238    1                              %TYPRNAM,    /*ER*/
     1179     8239    1                              %TYPDNAM,    /*DD*/
     1180     8240    1                              %TYPRNAM,    /*DR*/
     1181     8241    1                              %TYPDNAM,    /*SD*/
     1182     8242    1                              %TYPRNAM);   /*SR*/
     1183     8243    1   DCL VX_NAME_DISP_A(0:9)      UBIN(36)  ALIGNED   CONSTANT    SYMDEF
     1184     8244    1              INIT(          9999,         /*SN*/
     1185     8245    1                             9999,         /*DN*/
     1186     8246    1                             9999,         /*RN*/
     1187     8247    1                                2,         /*SC*/
     1188     8248    1                                2,         /*ED*/
     1189     8249    1                                0,         /*ER*/
     1190     8250    1                                2,         /*DD*/
     1191     8251    1                                0,         /*DR*/
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:62   
     1192     8252    1                                2,         /*SD*/
     1193     8253    1                                0);        /*SR*/
     1194     8254    1   DCL VX_LAST_UTS           UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(BITBIN(
              8254            '777777777777'O));
     1195     8255        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:63   
     1196     8256    1   DCL VX_SC_PASS2$               PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL
              8256            ));
     1197     8257                                                /* PASS2 POINTER TO CURRENT ITEM IN LINK
     1198     8258                                           LIST OF START/COUNT ITEMS FOR SECTIONS */
     1199     8259    1   DCL VX_SC_BASE$                PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL
              8259            ));
     1200     8260    1   DCL VX_SECTNUM$(0:1023)        PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL
              8260            )*0);
     1201     8261                            /* PASS2 BASE POINTER TO SECTIONS FOR CURRENT OBJECT UNIT */
     1202     8262        /**/
     1203     8263        /**/
     1204     8264        /**/
     1205     8265    1   DCL VX_PASS2_ALL_TYPE(0:9)     SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1206     8266    1         INIT( -1,4/*@DN_DS_2*/,4/*@RN_DS_2*/,7/*@SC_DS_2*/,7/*@ED_DS_2*/,8/*@ER_DS_2*/
              8266                  ,7/*@DD_DS_2*/,8/*@DR_DS_2*/,-1/*@SD_DS_2*/,7/*@SR_DS_2*/);
     1207     8267        /*
     1208     8268              VARIABLES FOR DEFINITION TYPE RECORDS FROM OBJECT FILES FOR PASS 2
     1209     8269        */
     1210     8270        /**/
     1211     8271        /**/
     1212     8272        /**/
     1213     8273        /*
     1214     8274              VARIABLES FOR REFERENCE TYPE RECORDS FROM OBJECT FILES FOR PASS 2
     1215     8275        */
     1216     8276    1   DCL 1 VX_PASS2_REF ALIGNED STATIC SYMDEF,
     1217     8277    1         2 OU ALIGNED,
     1218     8278    1           3 MAX ALIGNED,
     1219     8279    1             4 RN UBIN(36) ALIGNED INIT(0),
     1220     8280    1             4 ER UBIN(36) ALIGNED INIT(0),
     1221     8281    1             4 DR UBIN(36) ALIGNED INIT(0),
     1222     8282    1             4 SR UBIN(36) ALIGNED INIT(0),
     1223     8283    1           3 MAX_A(0:3) REDEF MAX UBIN(36) ALIGNED,
     1224     8284    1           3 L_START ALIGNED,
     1225     8285    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1226     8286    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1227     8287    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1228     8288    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:64   
     1229     8289    1           3 L_START_A$(0:3) REDEF L_START PTR ALIGNED,
     1230     8290    1           3 L_STOP ALIGNED,
     1231     8291    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1232     8292    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1233     8293    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1234     8294    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1235     8295    1           3 L_STOP_A$(0:3) REDEF L_STOP PTR ALIGNED,
     1236     8296    1           3 SIZE ALIGNED,
     1237     8297    1             4 RN UBIN(36) ALIGNED INIT(0),
     1238     8298    1             4 ER UBIN(36) ALIGNED INIT(0),
     1239     8299    1             4 DR UBIN(36) ALIGNED INIT(0),
     1240     8300    1             4 SR UBIN(36) ALIGNED INIT(0),
     1241     8301    1           3 SIZE_A(0:3) REDEF SIZE UBIN(36) ALIGNED,
     1242     8302    1         2 SAT ALIGNED,
     1243     8303    1           3 MAX ALIGNED,
     1244     8304    1             4 RN UBIN(36) ALIGNED INIT(0),
     1245     8305    1             4 ER UBIN(36) ALIGNED INIT(0),
     1246     8306    1             4 DR UBIN(36) ALIGNED INIT(0),
     1247     8307    1             4 SR UBIN(36) ALIGNED INIT(0),
     1248     8308    1           3 MAX_A(0:3) REDEF MAX UBIN(36) ALIGNED,
     1249     8309    1           3 L_START ALIGNED,
     1250     8310    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1251     8311    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1252     8312    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1253     8313    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1254     8314    1             4 SC$ PTR ALIGNED INIT(ADDR(NIL)),
     1255     8315    1           3 L_START_A$(0:4) REDEF L_START PTR ALIGNED,
     1256     8316    1           3 L_STOP ALIGNED,
     1257     8317    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1258     8318    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1259     8319    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1260     8320    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1261     8321    1             4 SC$ PTR ALIGNED INIT(ADDR(NIL)),
     1262     8322    1           3 L_STOP_A$(0:4) REDEF L_STOP PTR ALIGNED,
     1263     8323    1           3 COUNT ALIGNED,
     1264     8324    1             4 RN UBIN(36) ALIGNED INIT(0),
     1265     8325    1             4 ER UBIN(36) ALIGNED INIT(0),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:65   
     1266     8326    1             4 DR UBIN(36) ALIGNED INIT(0),
     1267     8327    1             4 SR UBIN(36) ALIGNED INIT(0),
     1268     8328    1             4 SC UBIN(36) ALIGNED INIT(0),
     1269     8329    1           3 COUNT_A(0:4) REDEF COUNT UBIN(36) ALIGNED,
     1270     8330    1           3 ENT_SIZE ALIGNED,
     1271     8331    1             4 RN UBIN(36) ALIGNED INIT(1/*@M_RN_ESZ*/),
     1272     8332    1             4 ER UBIN(36) ALIGNED INIT(SIZEW(VXR$SAT)),
     1273     8333    1             4 DR UBIN(36) ALIGNED INIT(SIZEW(VXR$SAT)),
     1274     8334    1             4 SR UBIN(36) ALIGNED INIT(SIZEW(VXR$SAT)),
     1275     8335    1             4 SC UBIN(36) ALIGNED INIT(SIZEW(VX$SC)),
     1276     8336    1           3 ENT_SIZE_A(0:4) REDEF ENT_SIZE UBIN(36) ALIGNED,
     1277     8337    1         2 UNSAT ALIGNED,
     1278     8338    1           3 MAX ALIGNED,
     1279     8339    1             4 RN UBIN(36) ALIGNED INIT(0),
     1280     8340    1             4 ER UBIN(36) ALIGNED INIT(0),
     1281     8341    1             4 DR UBIN(36) ALIGNED INIT(0),
     1282     8342    1             4 SR UBIN(36) ALIGNED INIT(0),
     1283     8343    1           3 MAX_A(0:3) REDEF MAX UBIN(36) ALIGNED,
     1284     8344    1           3 L_START ALIGNED,
     1285     8345    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1286     8346    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1287     8347    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1288     8348    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1289     8349    1           3 L_START_A$(0:3) REDEF L_START PTR ALIGNED,
     1290     8350    1           3 L_STOP ALIGNED,
     1291     8351    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1292     8352    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1293     8353    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1294     8354    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1295     8355    1           3 L_STOP_A$(0:3) REDEF L_STOP PTR ALIGNED,
     1296     8356    1           3 L_WHERE ALIGNED,
     1297     8357    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1298     8358    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1299     8359    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1300     8360    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1301     8361    1           3 L_WHERE_A$(0:3) REDEF L_WHERE PTR ALIGNED,
     1302     8362    1           3 SIZE ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:66   
     1303     8363    1             4 RN UBIN(36) ALIGNED INIT(0),
     1304     8364    1             4 ER UBIN(36) ALIGNED INIT(0),
     1305     8365    1             4 DR UBIN(36) ALIGNED INIT(0),
     1306     8366    1             4 SR UBIN(36) ALIGNED INIT(0),
     1307     8367    1           3 SIZE_A(0:3) REDEF SIZE UBIN(36) ALIGNED,
     1308     8368    1           3 PAGE# ALIGNED,
     1309     8369    1             4 RN UBIN(36) ALIGNED INIT(0),
     1310     8370    1             4 ER UBIN(36) ALIGNED INIT(0),
     1311     8371    1             4 DR UBIN(36) ALIGNED INIT(0),
     1312     8372    1             4 SR UBIN(36) ALIGNED INIT(0),
     1313     8373    1           3 PAGE#_A(0:3) REDEF PAGE# UBIN(36) ALIGNED,
     1314     8374    1           3 PREV_RN_SIZE UBIN(36) ALIGNED INIT(0);
     1315     8375        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:67   
     1316     8376        /*
     1317     8377              Definitions for preallocated/initialized data segments
     1318     8378        */
     1319     8379    1   DCL VX_SEG_NAME (0:5) CHAR(6) CONSTANT SYMDEF INIT(
     1320     8380    1            'DS3SID', 'DS4SID', 'DS5SID', 'DS6SID', 'DS7SID', 'DS8SID' );
     1321     8381
     1322     8382    1   DCL VX_SEG_PROC_TYPE(0:5)     UBIN    STATIC  SYMDEF  INIT( 0*0 );
     1323     8383    1   DCL VX_SEG_SIZE     (0:5)     SBIN    STATIC  SYMDEF  INIT( 0*0 );
     1324     8384    1   DCL VX_SEGID        (0:5)     UBIN    STATIC  SYMDEF  INIT(
     1325     8385    1             BITBIN(%DS3SID), BITBIN(%DS4SID), BITBIN(%DS5SID), BITBIN(%DS6SID), BITBIN
              8385                      (%DS7SID), BITBIN(%DS8SID) );
     1326     8386    1   DCL VX_MAX_SEG_SIZE           UBIN    STATIC  SYMDEF  INIT( 0 );
     1327     8387    1   DCL VX_SEG_EPAGE#    (0:5)    UBIN    STATIC  SYMDEF  INIT( 0*0 );
     1328     8388        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:68   
     1329     8389    1   DCL VX_HAVE_SPC UBIN(36) ALIGNED STATIC SYMDEF INIT(0);
              8389            /* COUNT OF SPECIAL SYMBOLS INSERTED BY LINK */
     1330     8390    1   DCL 1 VX_SPC ALIGNED STATIC SYMDEF,
     1331     8391    1         2 SEG ALIGNED,
     1332     8392    1           3 NAME ALIGNED,
     1333     8393    1             4 JIT$ PTR ALIGNED INIT(ADDR(VX_SPC.SEG.STRING.JIT)),
     1334     8394    1             4 IS$ PTR ALIGNED INIT(ADDR(VX_SPC.SEG.STRING.IS)),
     1335     8395    1             4 TCB$ PTR ALIGNED INIT(ADDR(VX_SPC.SEG.STRING.TCB)),
     1336     8396    1             4 ROS$ PTR ALIGNED INIT(ADDR(VX_SPC.SEG.STRING.ROS)),
     1337     8397    1             4 NUL$ PTR ALIGNED INIT(ADDR(VX_SPC.SEG.STRING.NUL)),
     1338     8398    1           3 NAME_A$(0:4) REDEF NAME PTR ALIGNED,
     1339     8399    1           3 VALUE ALIGNED,
     1340     8400    1             4 JIT UBIN(36) ALIGNED INIT(0),
     1341     8401    1             4 IS UBIN(36) ALIGNED INIT(0),
     1342     8402    1             4 TCB UBIN(36) ALIGNED INIT(0),
     1343     8403    1             4 ROS UBIN(36) ALIGNED INIT(0),
     1344     8404    1             4 NUL UBIN(36) ALIGNED INIT(0),
     1345     8405    1           3 VALUE_A(0:4) REDEF VALUE UBIN(36) ALIGNED,
     1346     8406    1           3 STRING ALIGNED,
     1347     8407    1             4 JIT ALIGNED,
     1348     8408    1               5 COUNT UBIN(18) UNAL INIT(6),
     1349     8409    1               5 CHARS CHAR(6) UNAL INIT('JITSID'),
     1350     8410    1             4 IS ALIGNED,
     1351     8411    1               5 COUNT UBIN(18) UNAL INIT(5),
     1352     8412    1               5 CHARS CHAR(5) UNAL INIT('ISSID'),
     1353     8413    1             4 TCB ALIGNED,
     1354     8414    1               5 COUNT UBIN(18) UNAL INIT(6),
     1355     8415    1               5 CHARS CHAR(6) UNAL INIT('TCBSID'),
     1356     8416    1             4 ROS ALIGNED,
     1357     8417    1               5 COUNT UBIN(18) UNAL INIT(5),
     1358     8418    1               5 CHARS CHAR(5) UNAL INIT('ROSID'),
     1359     8419    1             4 NUL ALIGNED,
     1360     8420    1               5 COUNT UBIN(18) UNAL INIT(7),
     1361     8421    1               5 CHARS CHAR(7) UNAL INIT('NULLSID'),
     1362     8422    1         2 B$ ALIGNED,
     1363     8423    1           3 NAME ALIGNED,
     1364     8424    1             4 JIT$ PTR ALIGNED INIT(ADDR(VX_SPC.B$.STRING.JIT)),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:69   
     1365     8425    1             4 * PTR ALIGNED INIT(ADDR(NIL)),
     1366     8426    1             4 TCB$ PTR ALIGNED INIT(ADDR(VX_SPC.B$.STRING.TCB)),
     1367     8427    1             4 ROS$ PTR ALIGNED INIT(ADDR(VX_SPC.B$.STRING.ROS)),
     1368     8428    1             4 VERSION$ PTR ALIGNED INIT(ADDR(VX_SPC.B$.STRING.VERSION)),
     1369     8429    1           3 NAME_A$(0:4) REDEF NAME PTR ALIGNED,
     1370     8430    1           3 VALUE ALIGNED,
     1371     8431    1             4 JIT UBIN(36) ALIGNED INIT(0),
     1372     8432    1             4 DELTA UBIN(36) ALIGNED INIT(0),
     1373     8433    1             4 TCB UBIN(36) ALIGNED INIT(0),
     1374     8434    1             4 ROS UBIN(36) ALIGNED INIT(0),
     1375     8435    1             4 VERSION UBIN(36) ALIGNED INIT(0),
     1376     8436    1           3 VALUE_A(0:4) REDEF VALUE UBIN(36) ALIGNED,
     1377     8437    1           3 SKIP ALIGNED,
     1378     8438    1             4 JIT UBIN(36) ALIGNED INIT(0),
     1379     8439    1             4 DELTA UBIN(36) ALIGNED INIT(0),
     1380     8440    1             4 TCB UBIN(36) ALIGNED INIT(0),
     1381     8441    1             4 ROS UBIN(36) ALIGNED INIT(0),
     1382     8442    1             4 VERSION UBIN(36) ALIGNED INIT(0),
     1383     8443    1           3 SKIP_A(0:4) REDEF SKIP UBIN(36) ALIGNED,
     1384     8444    1           3 MINE ALIGNED,
     1385     8445    1             4 JIT UBIN(36) ALIGNED INIT(0),
     1386     8446    1             4 DELTA UBIN(36) ALIGNED INIT(0),
     1387     8447    1             4 TCB UBIN(36) ALIGNED INIT(0),
     1388     8448    1             4 ROS UBIN(36) ALIGNED INIT(0),
     1389     8449    1             4 VERSION UBIN(36) ALIGNED INIT(0),
     1390     8450    1           3 MINE_A(0:4) REDEF MINE UBIN(36) ALIGNED,
     1391     8451    1           3 STRING ALIGNED,
     1392     8452    1             4 JIT ALIGNED ,
     1393     8453    1               5 COUNT UBIN(18) UNAL INIT(6),
     1394     8454    1               5 CHARS CHAR(6) UNAL INIT('B$JIT$'),
     1395     8455    1             4 TCB ALIGNED ,
     1396     8456    1               5 COUNT UBIN(18) UNAL INIT(6),
     1397     8457    1               5 CHARS CHAR(6) UNAL INIT('B$TCB$'),
     1398     8458    1             4 ROS ALIGNED ,
     1399     8459    1               5 COUNT UBIN(18) UNAL INIT(6),
     1400     8460    1               5 CHARS CHAR(6) UNAL INIT('B$ROS$'),
     1401     8461    1             4 VERSION ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:70   
     1402     8462    1               5 COUNT UBIN(18) UNAL INIT(9),
     1403     8463    1               5 CHARS CHAR(9)  UNAL INIT('B_VERSION'),
     1404     8464    1         2 FAULT SBIN WORD ALIGNED INIT(-1),
     1405     8465    1         2 DELTA_DATA_ADR UBIN(36) ALIGNED INIT(0),
     1406     8466    1         2 TCBSIZE SBIN WORD ALIGNED INIT(-1);
     1407     8467        /**/
     1408     8468        /**/
     1409     8469        /**/
     1410     8470    1   DCL VX_DCB_OPTION_TEXT(0:3) CHAR(10) ALIGNED CONSTANT SYMDEF INIT(
     1411     8471    1              'SIDCB/DCB1',
     1412     8472    1              'UIDCB/DCB2',
     1413     8473    1              'OUDCB/DCB3',
     1414     8474    1              'LODCB/DCB4'  );
     1415     8475    1   DCL VX_ECHO            BIT( 1) ALIGNED    STATIC SYMDEF INIT('0'B/*@FALSE_B*/);
     1416     8476    1   DCL VX_DO_ECHO         BIT( 1) ALIGNED    STATIC SYMDEF INIT('0'B/*@FALSE_B*/);
     1417     8477    1   DCL 1 VX_EI_KEY_BUF ALIGNED STATIC SYMDEF,
     1418     8478    1         2 COUNT UBIN(9) UNAL,
     1419     8479    1         2 KEY CHAR(255),
     1420     8480    1         2 EDIT REDEF KEY,
     1421     8481    1           3 NUM UBIN(27) UNAL,
     1422     8482    1           3 * CHAR(252);
     1423     8483    1   DCL 1 VX_LAST_LINE ALIGNED STATIC SYMDEF,
     1424     8484    1         2 SIZE UBIN,
     1425     8485    1         2 OFFSET UBIN,
     1426     8486    1         2 TEXT CHAR(266);
     1427     8487        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:71   
     1428     8488    1   DCL VX_SPC_DATA_INSERT    BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('1'B
              8488            /*@TRUE_B*/);
     1429     8489    1   DCL VX_ROS_ALLOWED    BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('1'B/*@TRUE_B*/);
     1430     8490    1   DCL VX_SHARED_LIB_ASS     UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1431     8491        /*
     1432     8492                   PATCH SPACE
     1433     8493        */
     1434     8494    1   DCL VX_IMAGE_BUFFER_SIZE  SBIN(36)  ALIGNED   CONSTANT    SYMDEF  INIT( 1024 );
     1435     8495    1   DCL VX_RN_THRESHOLD  UBIN(36)       ALIGNED   CONSTANT    SYMDEF  INIT(30720);
     1436     8496    1   DCL VX_LIBSRCH$ PTR ALIGNED STATIC SYMDEF;
              8496            /* Pointer used to search accounts specified by LIBSRCH option */
     1437     8497    1   DCL VX_REF_EXPONENTIAL_SWITCH  BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('0'B
              8497            /*@FALSE_B*/);
     1438     8498    1   DCL VX_UNSAT_BUFFER_EXPAND_SWITCH   BIT(1)    ALIGNED   STATIC    SYMDEF    INIT(
              8498            '0'B/*@FALSE_B*/);
     1439     8499    1   DCL VX_PATCH(0:99)        CHAR(4)   ALIGNED   STATIC    SYMDEF    INIT(
     1440     8500    1         'PATC'*0);
     1441     8501    1   DCL VX_BLK_COM_COUNT      UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1442     8502                                                /* COUNT OF # OF NODES WHERE
     1443     8503                                                   UNIQUE INSTANCES OF BLANK
     1444     8504                                                   COMMON MAY BE ALLOCATED */
     1445     8505    1   DCL VX_SC_BLANK_COM_PROMOTE$   PTR  ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1446     8506                                                /* POINTER TO THE HIGHEST NODE
     1447     8507                                                   IN WHICH BLANK COMMON MAY
     1448     8508                                                   BE ALLOCATED; USED FOR
     1449     8509                                                   PROMOTION OF BLANK COMMON */
     1450     8510    1   DCL VX_CHK_BLANK_COM_PROMOTE   BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('0'B);
     1451     8511                                                /* BIT WHICH INDICATES WHETHER
     1452     8512                                                BLANK COMMON WILL BE PROMOTED OR NOT */
     1453     8513    1   DCL 1 VX_SC_BLANK_COMMON               ALIGNED STATIC SYMDEF,
     1454     8514    1         2 TYPE              UBIN(9)   UNAL      INIT(0),
     1455     8515    1         2 EMPTY             BIT (1)   UNAL      INIT('0'B),
     1456     8516    1         2 ATTR                        UNAL,
     1457     8517    1           3 INT              UBIN(2)   UNAL      INIT(0),
     1458     8518    1           3 ALL              BIT(1)    UNAL      INIT('0'B),
     1459     8519    1           3 MAK_DEF BIT(1) UNAL INIT('0'B), /* MAKE DEFINITION FOR DCBS */
     1460     8520    1           3 PRE_DCB BIT(1) UNAL INIT('0'B), /* '1'B => TRUE; '0'B => FALSE */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:72   
     1461     8521    1           3 MES_INIT         BIT (1)   UNAL      INIT('0'B),
     1462     8522    1           3 ALIGN            UBIN(2)   UNAL      INIT(0),
     1463     8523    1         2 ADDRESS           UBIN(18)  UNAL      INIT(0),
     1464     8524    1         2 NAME_DISP         SBIN HALF UNAL      INIT(-1),
     1465     8525    1         2 SIZE              UBIN(18)  UNAL      INIT(0),
     1466     8526    1         2 NODE#             UBIN(18)  UNAL      INIT(0),
     1467     8527    1         2 COM_LINK          UBIN(18)  UNAL      INIT(0);
     1468     8528    1   DCL VX_LIBRARY_PROBE      BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('0'B
              8528            /*@FALSE_B*/);
     1469     8529        /*
     1470     8530               MISCELLANEOUS VARIABLES
     1471     8531        */
     1472     8532    1   DCL VX_STATE# UBIN(36) ALIGNED STATIC SYMDEF INIT (0);
     1473     8533    1   END  VX_DATA_D;

PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:73   
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VX_DATA_D.

   No code generated for procedure VX_DATA_D .
   Procedure VX_DATA_D requires 4 words of local(AUTO) storage.

    No errors detected in file VX_DATA_D.:E05TSI    .

PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:74   

 Object Unit name= VX_DATA_D                                  File name= VX_DATA_D.:E05TOU
 UTS= JUL 30 '97 08:49:02.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none  1956   3644  VX_DATA_D
    1  RoData even  UTS    333    515  VX_DATA_D
    2   Proc  even  none     0      0  VX_DATA_D

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     ~proc       0  VX_DATA_D
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:75   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  VX_RU_HEAD                         0     50  VX_RU_HEAD_BUF
    0    120  VX_L_REC_BUF                       0    130  VX_OU_HEAD
    0    165  VX_SC_START$                       0    166  VX_SC_ROOT_LBL_COM
    0    167  VX_SC_LBL_COM                      0    170  VX_SC_BLK_COM
    0    171  VX_OVERLAY_START$                  0    172  VX_LAST_SC$
    0    173  VX_LAST_OU$                        0    174  VX_LAST_SC_BASE
    0    175  VX_CURR_SC_ENTRIES                 0    176  VX_TREE_ADR
    0    177  VX_TREE_NAME_POOL                  0    200  VX_TREE_SLIB_NAME
    0    201  VX_TREE_ESZ                        0    202  VX_TREE_PRE
    0    203  VX_TREE_SIZE                       0    204  VX_TREE_DISP
    0    205  VX_TREE_LIB                        0    206  VX_DCB_USER
    0    207  VX_DUMMY                           0    210  VX_CBUF
    0    252  VX_COMMAND                         0    253  VX_ON_OVER
    0    254  VX_ON_OVER_RUF                     0    255  VX_FCG_SWITCH
    0    256  VX_LO_DO_DIFFER                    0    257  VX_INHIBIT_COMPACTION
    0    260  VX_PASS                            0    261  VX_DO_PASS1
    0    262  VX_DO_PASS2                        0    263  VX_COUNT_FID
    0    264  VX_FID_COUNT                       0    265  VX_HAVE_ROOT_LBL_COM
    0    266  VX_GOT_ON_OVER                     0    267  VX_PRIMARY_ENTDEF_GOT
    0    270  VX_SLIB_USED                       0    271  VX_LINK_UTS
    0    272  VX_NODE_NUMBER                     0    273  VX_NUM_UNIQUE_BREFS
    0    274  VX_IN_OVERLAY                      0    275  VX_BREF_DEFAULT_SET
    0    276  VX_IN_PATCH                        0    277  VX_LIB_USED
    0    300  VX_ROOT$                           0    301  VX_RUF$
    0    302  VX_LOF$                            0    303  VX_CURR$
    0    304  VX_FCURR$                          0    305  VX_OCURR$
    0    306  VX_NIL_V                           0    310  VX_ERRORS
    0    316  VX_ERR_SEV                         0    317  VX_PROGRAM_BIAS
    0    322  VX_BIAS                            0    325  VX_M_FREE
    0    336  VX_M_ALL                           0    347  VX_M_BASE_PTR
    0    360  VX_M_SEGID                         0    371  VX_ONLINE
    0    372  VX_O                               1     10  VX_OL
    0    571  VX_PHRASE                          0    577  VX_OD
    1    106  VX_ON                              0    603  VX_ERR_CODE
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:76   
    0    604  VX_ERR_CODE_AUX                    0    605  VX_EBUF
    0    647  VX_EFIELD1                         0    673  VX_EFIELD2
    0    717  VX_EFIELD3                         0    743  VX_IMAGE$
    0    744  VX_BADR                            0    747  VX_EADR
    0    752  VX_TARGET_COUNT                    0    753  VX_SOURCE_COUNT
    0    754  VX_IO_STATUS                       0    755  VX_IO_SIZEW
    0    756  VX_IO_SIZEC                        0    757  VX_IO_USEPREV
    0    760  VX_IO_SAVEPREV                     0    761  VX_HEADER
    1    272  VX_O_KEY_HEAD                      1    273  VX_O_KEY_TREE
    1    275  VX_R_KEY_HEAD                      1    276  VX_R_KEY_BIRTH
    0    776  VX_P_ENTDEF                        0    777  VX_KEY_USEPREV
    0   1000  VX_KEY_NAME$                       0   1001  VX_SLIB_HEAD$
    0   1002  VX_SLIB_INIT$                      0   1003  VX_SLIB_MAX_DATA
    0   1004  VX_REC_BUF_START$                  0   1005  VX_REC_BUF_SIZE
    0   1006  VX_BREF_START$                     0   1007  VX_NEXT_BREF$
    0   1010  VX_BREF_SIZE                       0   1011  VX_BREF_ADR
    0   1012  VX_BREF_INSTANCE                   0   1013  VX_BREF_DEFINITION
    1    300  VX_XSO$BREF                        0   1014  VX_TSX0_OVERLAY
    0   1015  VX_SLIB_AREA$                      0   1016  VX_SLIB_AREA_SIZE
    0   1017  VX_SC_X_NODE$                      0   1020  VX_DCB_USER_NEXT
    0   1021  VX_DCB_HEAD$                       0   1022  VX_DCB_TAIL$
    0   1023  VX_DCB_START$                      0   1024  VX_DCB_STOP$
    0   1025  VX_MERGE_START$                    0   1026  VX_MERGE_STOP$
    0   1027  VX_ROOT_DN_INC                     1    310  VX_SYS
    1    312  VX_PASS1_REC_TYPE                  1    324  VX_PASS1_REC_TYPE_RUN
    1    330  VX_PASS1_ALL_TYPE                  1    342  VX_PASS1_LIB_ALL_TYPE
    1    354  VX_HEAD_INX                        1    366  VX_REC_SIZE_A
    1    406  VX_DEF_REC_A                       1    412  VX_REF_REC_A
    1    416  VX_REF_MATCH_A                     1    430  VX_MATCH_NAME_A
    1    442  VX_NAME_DISP_A                     0   1030  VX_LAST_UTS
    0   1031  VX_SC_PASS2$                       0   1032  VX_SC_BASE$
    0   1033  VX_SECTNUM$                        1    454  VX_PASS2_ALL_TYPE
    0   3033  VX_PASS2_REF                       1    466  VX_SEG_NAME
    0   3134  VX_SEG_PROC_TYPE                   0   3142  VX_SEG_SIZE
    0   3150  VX_SEGID                           0   3156  VX_MAX_SEG_SIZE
    0   3157  VX_SEG_EPAGE#                      0   3165  VX_HAVE_SPC
    0   3166  VX_SPC                             1    477  VX_DCB_OPTION_TEXT
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:77   
    0   3253  VX_ECHO                            0   3254  VX_DO_ECHO
    0   3255  VX_EI_KEY_BUF                      0   3355  VX_LAST_LINE
    0   3462  VX_SPC_DATA_INSERT                 0   3463  VX_ROS_ALLOWED
    0   3464  VX_SHARED_LIB_ASS                  1    513  VX_IMAGE_BUFFER_SIZE
    1    514  VX_RN_THRESHOLD                    0   3465  VX_LIBSRCH$
    0   3466  VX_REF_EXPONENTIAL_SWITCH          0   3467  VX_UNSAT_BUFFER_EXPAND_SWITCH
    0   3470  VX_PATCH                           0   3634  VX_BLK_COM_COUNT
    0   3635  VX_SC_BLANK_COM_PROMOTE$           0   3636  VX_CHK_BLANK_COM_PROMOTE
    0   3637  VX_SC_BLANK_COMMON                 0   3642  VX_LIBRARY_PROBE
    0   3643  VX_STATE#

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     T_ALTSHARELIB_KEY_WORD                T_ASLIB_KEY_WORD                      T_BREF_KEY_WORD
     T_DATA_KEY_WORD                       T_DBIAS_KEY_WORD                      T_DCBSLOTS_KEY_WORD
     T_DUPLICATE_KEY_WORD                  T_ENTRIES_KEY_WORD                    T_SHAREABLE_KEY_WORD
     T_INCLUDE_KEY_WORD                    T_LDEF_KEY_WORD                       T_LIBSRCH_KEY_WORD
     T_NAME_KEY_WORD                       T_NOALTSHARELIB_KEY_WORD              T_NOBREF_KEY_WORD
     T_NODEBUG_KEY_WORD                    T_NOEDITING_KEY_WORD                  T_NOSETS_KEY_WORD
     T_NOSHARELIB_KEY_WORD                 T_NOSYSLIB_KEY_WORD                   T_NSHAREABLE_KEY_WORD
     T_NSTDINVOC_KEY_WORD                  T_ALIB_KEY_WORD                       T_OSP_KEY_WORD
     T_PBIAS_KEY_WORD                      T_SPCLMM_KEY_WORD                     T_EXMM_KEY_WORD
     T_MAXMEM_KEY_WORD                     T_MSYS_KEY_WORD                       T_PROCACC_KEY_WORD
     T_JIT_KEY_WORD                        T_TND_KEY_WORD                        T_PM_KEY_WORD
     T_EXPM_KEY_WORD                       T_IOQ_KEY_WORD                        T_IOQW_KEY_WORD
     T_CFEP_KEY_WORD                       T_MFEP_KEY_WORD                       T_SYSLOG_KEY_WORD
     T_FMEFT_KEY_WORD                      T_FMBLK_KEY_WORD                      T_FMSEC_KEY_WORD
     T_FMREAD_KEY_WORD                     T_FMDIAG_KEY_WORD                     T_GPP_KEY_WORD
     T_ASAVE_KEY_WORD                      T_SYSCON_KEY_WORD                     T_DISPJOB_KEY_WORD
     T_NOCHGPMEM_KEY_WORD                  T_PROMOTE_BLANK_KEY_WORD              T_PROMOTE_LABEL_KEY_WORD
     T_PROMOTE_KEY_WORD                    T_REMOVE_ENTDEF_KEY_WORD              T_REMOVE_SYMDEF_KEY_WORD
     T_REPORT_KEY_WORD                     T_RF_KEY_WORD                         T_RUN_KEY_WORD
     T_SEVERITY_KEY_WORD                   T_SHARELIB_KEY_WORD                   T_SLIB_KEY_WORD
     T_SLOCK_KEY_WORD                      T_SRCH_KEY_WORD                       T_START_KEY_WORD
     T_STATS_KEY_WORD                      T_LLMU_KEY_WORD                       T_LSAU_KEY_WORD
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:78   
     T_SYSTEM_KEY_WORD                     T_WARN_KEY_WORD                       T_NWARN_KEY_WORD
     T_NPLOVER_KEY_WORD                    T_SURCHARGE_KEY_WORD                  T_TCB_KEY_WORD
     T_UDEF_KEY_WORD                       T_UNSAT_KEY_WORD                      T_VALUE_KEY_WORD
     T_DPATCH_KEY_WORD                     T_IPATCH_KEY_WORD                     T_IXTNSIZE_KEY_WORD
     T_XTNSIZE_KEY_WORD                    T_VECTOR_KEY_WORD                     T_VERSION_KEY_WORD
     T_WLOCK_KEY_WORD                      T_PSEUDO_KEY_WORD                     B$JIT$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:79   

        1        1        /*M* VX_DATA_D - SYMDEFs for LINK   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5          */
        8        8        VX_DATA_D:
        9        9             PROC;
       10       10        /* ! ! */
       11       11        %INCLUDE VX_SUBS_C;
       12      229        %INCLUDE VX_PERR_C;
       13      483        %INCLUDE VX_MACRO_C;
       14     1620        %INCLUDE B$JIT;
       15     2223        %INCLUDE B_SEGIDS_C;
       16     2762        %INCLUDE B$OBJECT_C;
       17     6192        %B$RECORDSUBS;
       18     6220        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:80   
       19     6221        %VXR$TMPLT;

              6234    1   /*******************************************************************************
              6235    1   *                                                                              *
              6236    1   *                          VXR$TMPLT                                              *
              6237    1   *                                                                              *
              6238    1   *******************************************************************************/

              6243    1   DCL 1 VXR$TMPLT BASED ALIGNED,
              6244    1         2 NPOINTER SBIN HALF UNAL,
              6245                /*K*  NPOINTER is the word index to the symbol name.  */
              6246    1         2 SREF BIT(1) UNAL,
              6247                /*K*  SREF is set is this is a secondary reference.  */
              6248    1         2 READ_ONLY BIT(1) UNAL,
              6249    1         2 GOT BIT(1) UNAL,
              6250                /*K*  GOT is set if got the OU name displacement.  */
              6251    1         2 STATE REDEF GOT BIT(1) UNAL,
              6252    1         2 OPOINTER UBIN(15) UNAL;
              6253                /*K*  OPOINTER is the word index to the OU name.  */

              6275    1   /*******************************************************************************
              6276    1   *                                                                              *
              6277    1   *                          VXR$SAT                                                *
              6278    1   *                                                                              *
              6279    1   *******************************************************************************/

              6283    1   DCL 1 VXR$SAT                 ALIGNED   BASED,
              6284    1         2 VALUE        UBIN(36)  ALIGNED,
              6285    1         2 SEG   REDEF  VALUE,
              6286    1           3 OFFSET     UBIN(18)  UNAL,
              6287    1           3 *          BIT(6)    UNAL,
              6288    1           3 SEGID      UBIN(12)  UNAL,
              6289    1         2 BELOW        BIT(1)    UNAL,
              6290    1         2 *            BIT(17)   UNAL,
              6291    1         2 NODE#        UBIN(18)  UNAL;
       20     6293        %VX$SC;

PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:81   
              6306    1   /*******************************************************************************
              6307    1   *                                                                              *
              6308    1   *                          VX$SC                                                 *
              6309    1   *                                                                              *
              6310    1   *******************************************************************************/

              6315    1   DCL 1 VX$SC BASED ALIGNED,
              6316    1         2 SEG UBIN(3) UNAL,
              6317                /*K*  SEG - The segment number of this section */
              6318    1         2 TYPE UBIN(6) UNAL,
              6319                /*K*  TYPE -
              6320                      Type code      Section type
              6321                      ---------      ------------
              6322                          0          Data control section with write access.
              6323                          1          Procedure control section.
              6324                          2          Unlabeled common, name pointer must be zero.
              6325                          3          Labeled common, with mandatory name pointer.
              6326                                     This is for labeled common which must be
              6327                                     in the root.
              6328                          4          Labeled common, with mandatory name pointer.
              6329                                     This is for labeled common which need not
              6330                                     be in the root.
              6331                          5          DCB, word 1 is name pointer.
              6332                          6          Data control section with read only access,
              6333                                     word 1 = 0 or name pointer.      */
              6334    1         2 EMPTY BIT(1) UNAL,
              6335                /*K*  EMPTY is the empty bit.  This bit is set if the control
              6336                      section is of size zero.  */
              6337    1         2 ATTR UNAL,
              6338    1           3 INT  UBIN(2) UNAL,
              6339                  /*K*  INT is the Section initialization.  */
              6340    1           3 SEGMENT BIT(1) UNAL,
              6341                  /*K* SEGMENT is set if the Section is defined in a data
              6342                       segment.  */
              6343    1           3 ALL BIT(1) UNAL,
              6344                  /*K*  ALL is set if the Section is allocated.  */
              6345    1           3 PRE_DCB BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:82   
              6346                  /*K*  PRE_DCB is set if a Pre_defined DCB.  */
              6347    1           3 MES_INIT BIT(1) UNAL,
              6348    1           3 ALIGN UBIN(2) UNAL,
              6349                  /*K*  ALIGN is the Section alignment.  */
              6350    1         2 ADDRESS UBIN HALF UNAL,
              6351                /*K*  ADDRESS is the address within the Instruction Segment of
              6352                      the entry point of the external procedure.  */
              6353    1         2 NAME_DISP SBIN HALF UNAL,
              6354                /*K*  NAME_DISP is the Name index.  */
              6355    1         2 SIZE UBIN HALF UNAL,
              6356                /*K*  SIZE is the size, in words, of the section.  */
              6357    1         2 NODE# UBIN HALF UNAL,
              6358                /*K*  NODE# is the Node number of section.  */
              6359    1         2 COM_LINK UBIN HALF UNAL;
              6360                /*K*  COM_LINK is used internally by linker to link common sections */

              6370    1   /*******************************************************************************
              6371    1   *                                                                              *
              6372    1   *                          VX$SECT                                                *
              6373    1   *                                                                              *
              6374    1   *******************************************************************************/

              6379    1   DCL 1 VX$SECT BASED ALIGNED,
              6380    1         2 TYPE UBIN BYTE UNAL,
              6381                /*K*  TYPE -
              6382                      Type code      Section type
              6383                      ---------      ------------
              6384                          0          Data control section with write access.
              6385                          1          Procedure control section.
              6386                          2          Unlabeled common, name pointer must be zero.
              6387                          3          Labeled common, with mandatory name pointer.
              6388                                     This is for labeled common which must be
              6389                                     in the root.
              6390                          4          Labeled common, with mandatory name pointer.
              6391                                     This is for labeled common which need not
              6392                                     be in the root.
              6393                          5          DCB, word 1 is name pointer.
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:83   
              6394                          6          Data control section with read only access,
              6395                                     word 1 = 0 or name pointer.
              6396                          7          Constant labeled common, with mandatory name pointer.
              6397                                     This is for labeled common which must be
              6398                                     in the root.
              6399                          8          Constant labeled common, with mandatory name pointer.
              6400                                     This is for labeled common which need not
              6401                                     be in the root.                        */
              6402    1         2 * BIT(1),
              6403                /*K*  * is reserved for future use and must be zero. */
              6404    1         2 INITZERO BIT(1),
              6405                /*K*  INITZERO - if 1, initialize with zero.  */
              6406    1         2 INITUTS BIT(1),
              6407                /*K*  INITUTS - if 1, initialize with UTS.  */
              6408    1         2 SEGMENT BIT(1),
              6409                /*K*  SEGMENT - if 1, specifies that this section is
              6410                                to be placed in the segment specified by
              6411                                SEG_NPOINTER.  */
              6412    1         2 * BIT(3),
              6413                /*K*  * is reserved for future use and must be zero. */
              6414    1         2 BOUND UBIN(2) UNAL,
              6415                /*K*  BOUND - bits 6-7 - defines starting location.
              6416                              00 - starts on even word
              6417                              01 - starts on odd word
              6418                              10 - starts on multiple of 8
              6419                              11 - starts on page boundary     */
              6420    1         2 SIZE UBIN HALF UNAL,
              6421                /*K*  SIZE is the size, in words, of the section.  */
              6422    1         2 NPOINTER SBIN HALF UNAL,
              6423                /*K*  NPOINTER is the word displacement into the name record
              6424                      (TYPE 1) locating the name of this section.  If the
              6425                      field is negative, the section has no name.  */
              6426    1         2 MBZ UBIN HALF UNAL,
              6427                /*K*  MBZ is reserved for future expansion and must be zero. */
              6428    1         2 SEG_NPOINTER REDEF MBZ SBIN HALF UNAL,
              6429                /*K*  SEG_NPOINTER locates a name in the Definition Names
              6430                      Section.  The name must be a valid segment name
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:84   
              6431                      recognized by the linker.  */
              6432    1         2 G66 REDEF MBZ,
              6433                /*K*  G66 is not used on CP-6. */
              6434    1           3 * BIT(9),
              6435    1           3 NSAB BIT(9);
       21     6438        %TMPLT;

              6450    1   /*******************************************************************************
              6451    1   *                                                                              *
              6452    1   *                          TMPLT                                                 *
              6453    1   *                                                                              *
              6454    1   *******************************************************************************/

              6459    1   DCL 1 VX$TMPLT           ALIGNED BASED, /* Template for defs                  */
              6460    1         2 A(0:3)       UBIN(18)  UNAL,    /* Array access                       */
              6461    1         2 A_SBIN(0:3) REDEF A    SBIN HALF UNAL,
              6462    1         2 W       REDEF     A,            /* By name                            */
              6463    1           3 WORD0       UBIN(36)  UNAL,   /* First word                         */
              6464    1           3 WORD1       UBIN(36)  UNAL;   /* Second word                        */
       22     6467        %VX$NODE;

              6479    1   /*******************************************************************************
              6480    1   *                                                                              *
              6481    1   *                          VX$NODE                                                *
              6482    1   *                                                                              *
              6483    1   *******************************************************************************/

              6499    1   DCL 1 VX$NODE      ALIGNED    BASED,
              6500    1         2 SON$ PTR /*(ADDR(NIL))*/, /* Son pointer                      */
              6501    1         2 BROTHER$ PTR /*(ADDR(NIL))*/, /* Brother pointer              */
              6502    1         2 FATHER$ PTR /*(ADDR(NIL))*/, /* Father pointer                */
              6503    1         2 PATH$ PTR /*(ADDR(NIL))*/, /* Path   pointer                  */
              6504    1         2 HEAD$       PTR /*(ADDR(NIL))*/, /* Head pointer to
              6505                              to list of file nodes for this node            */
              6506    1         2 TAIL$ PTR /*(ADDR(NIL))*/, /* Tail pointer to list            */
              6507    1         2 SHARED_LIB_HEAD$ PTR /*(ADDR(NIL))*/,
              6507                  /* Head pointer to shared library list */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:85   
              6508    1         2 LIB_HEAD$         PTR /*(ADDR(NIL))*/,
              6508                  /* Head pointer to list of shared libraries
              6509                                          which have been mapped to included libraries */
              6510    1         2 NUM          UBIN(36)  UNAL,    /* Node number                        */
              6511    1         2 DEPTH          UBIN(36)  UNAL,  /* Depth; ROOT=0*/
              6512    1         2 ADDR_START_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array            */
              6513    1         2 ADDR_START REDEF  ADDR_START_A,
              6514    1           3 RDATA       SBIN WORD,   /* First address for this node in data     */
              6515    1           3 RPROC       SBIN WORD,   /* First address for this node in proc     */
              6516    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
              6517    1         2 ADDR_STOP_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array            */
              6518    1         2 ADDR_STOP  REDEF  ADDR_STOP_A,
              6519    1           3 RDATA       SBIN WORD,        /* Last address for this node in data */
              6520    1           3 RPROC       SBIN WORD,        /* Last address for this node in proc */
              6521    1           3 ROS       SBIN WORD,          /* Last address for program in ros    */
              6522    1         2 START_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(0*3)*/, /* Array           */
              6523    1         2 START_PAGE# REDEF START_PAGE#_A,
              6524    1           3 RDATA       SBIN WORD,   /* First page    for this node in data     */
              6525    1           3 RPROC       SBIN WORD,   /* First page    for this node in proc     */
              6526    1           3 ROS       SBIN WORD,          /* First page   for program in ros    */
              6527    1         2 STOP_PAGE#_A(0:2/*@ROS*/) SBIN WORD /*(-1*3)*/, /* Array*/
              6528    1         2 STOP_PAGE#  REDEF STOP_PAGE#_A,
              6529    1           3 RDATA       SBIN WORD,   /* Last  page    for this node in data     */
              6530    1           3 RPROC       SBIN WORD,   /* Last  page    for this node in proc     */
              6531    1           3 ROS       SBIN WORD,          /* Last  page   for program in ros    */
              6532    1         2 START_SC_ALL$ PTR /*(ADDR(NIL))*/,
              6532                  /* Starting pointer for common sections for this node */
              6533    1         2 STOP_SC_ALL$ PTR /*(ADDR(NIL))*/,
              6533                  /* Stopping pointer for common sections for this node */
              6534    1         2 L_START,
              6535    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
              6536    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
              6537    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
              6538    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
              6539    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
              6540    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
              6541    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:86   
              6542    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
              6543    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
              6544    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
              6545    1         2 L_START_A$(0:9)     REDEF L_START PTR,
              6546    1         2 L_STOP,
              6547    1           3 SN$ PTR /*(ADDR(NIL))*/, /* Segment definition names        */
              6548    1           3 DN$ PTR /*(ADDR(NIL))*/, /* Def names                       */
              6549    1           3 RN$ PTR /*(ADDR(NIL))*/, /* Ref names                       */
              6550    1           3 SC$ PTR /*(ADDR(NIL))*/, /* Sections                        */
              6551    1           3 ED$ PTR /*(ADDR(NIL))*/, /* Entry defs*/
              6552    1           3 ER$ PTR /*(ADDR(NIL))*/, /* Entry refs*/
              6553    1           3 DD$ PTR /*(ADDR(NIL))*/, /* Data defs                       */
              6554    1           3 DR$ PTR /*(ADDR(NIL))*/, /* Data refs                       */
              6555    1           3 SD$ PTR /*(ADDR(NIL))*/, /* Seg defs                        */
              6556    1           3 SR$ PTR /*(ADDR(NIL))*/, /* Seg refs                        */
              6557    1         2 L_STOP_A$(0:9) REDEF   L_STOP    PTR,
              6558    1         2 L_SIZE,
              6559    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
              6560    1           3 DN      UBIN /*(0)*/, /* Def names                          */
              6561    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
              6562    1           3 SC      UBIN /*(0)*/, /* Sections                           */
              6563    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
              6564    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
              6565    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
              6566    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
              6567    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
              6568    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
              6569    1         2 L_SIZE_A(0:9)  REDEF   L_SIZE    UBIN,
              6570    1         2 L_PREV_SIZE,
              6571    1           3 SN      UBIN /*(0)*/, /* Segment definition names           */
              6572    1           3 DN      UBIN /*(0)*/, /* Def names                          */
              6573    1           3 RN      UBIN /*(0)*/, /* Ref names                          */
              6574    1           3 SC      UBIN /*(0)*/, /* Sections                           */
              6575    1           3 ED      UBIN /*(0)*/, /* Entry defs*/
              6576    1           3 ER      UBIN /*(0)*/, /* Entry refs*/
              6577    1           3 DD      UBIN /*(0)*/, /* Data defs                          */
              6578    1           3 DR      UBIN /*(0)*/, /* Data refs                          */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:87   
              6579    1           3 SD      UBIN /*(0)*/, /* Seg defs                           */
              6580    1           3 SR      UBIN /*(0)*/, /* Seg refs                           */
              6581    1         2 L_PREV_SIZE_A(0:9)  REDEF   L_PREV_SIZE    UBIN,
              6582    1         2 BIT_MAP                ALIGNED,
              6583    1           3 DATA                  ALIGNED,
              6584    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6585    1           3 RPROC                 ALIGNED,
              6586    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6587    1           3 ROS                   ALIGNED,
              6588    1             4 BITS(0:255)          BIT(1)    UNAL /*('0'B*256)*/,
              6589    1         2 L_SC_START,
              6590    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
              6591    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
              6592    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
              6593    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
              6594    1         2 L_SC_START_A$(0:3)  REDEF L_SC_START PTR,
              6595    1         2 L_SC_STOP,
              6596    1           3 SC_BLK_COM$ PTR /*(ADDR(NIL))*/, /* Blank common            */
              6597    1           3 SC_ROOT_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Root labelled common */
              6598    1           3 SC_LBL_COM$ PTR /*(ADDR(NIL))*/, /* Labelled common         */
              6599    1           3 SC_DCB$ PTR /*(ADDR(NIL))*/, /* Dcbs                        */
              6600    1         2 L_SC_STOP_A$(0:3)   REDEF L_SC_STOP  PTR,
              6601    1         2 PROMOTE_HEAD,
              6602    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
              6603    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
              6604    1         2 PROMOTE_HEAD_A$(0:1) REDEF PROMOTE_HEAD     PTR,
              6605    1         2 PROMOTE_TAIL,
              6606    1           3 BLK_COM$              PTR /*(ADDR(NIL))*/,
              6607    1           3 LBL_COM$              PTR /*(ADDR(NIL))*/,
              6608    1         2 PROMOTE_TAIL_A$(0:1) REDEF PROMOTE_TAIL     PTR,
              6609    1         2 HAVE_ASL          BIT(1)    UNAL /*('0'B)*/,
              6610    1         2 ALL_BLK_COM          BIT(1)    UNAL /*('0'B)*/,
              6611    1         2 USE_NODE          BIT(1)    UNAL /*('0'B)*/,
              6612    1         2 *                 BIT(33)   UNAL /*('0'B)*/,
              6613    1         2 BLANK_COMMON$     PTR       ALIGNED /*(ADDR(NIL))*/;

       23     6617        %VX$LST;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:88   

              6630    1   /*******************************************************************************
              6631    1   *                                                                              *
              6632    1   *                          VX$LST                                                 *
              6633    1   *                                                                              *
              6634    1   *******************************************************************************/

              6639    1   DCL 1 VX$LST                          ALIGNED BASED,
              6640    1         2 LINK$        PTR,               /* Link to next item                  */
              6641    1         2 TYPE         UBIN( 18) UNAL,    /* Type                               */
              6642    1         2 SUB_TYPE     UBIN( 18) UNAL,    /* Sub-type                           */
              6643    1         2 OBJECT_NAME$ PTR,               /* Pointer to object unit name        */
              6644    1         2 PRIOR$ REDEF OBJECT_NAME$ PTR,  /* Pointer to prior element in list   */
              6645    1         2 SC_HEAD$     PTR,               /* Head pointer to section link list  */
              6646    1         2 LIBSRCH$ REDEF SC_HEAD$ PTR,    /* Pointer to account list for library*/
              6647    1         2 SC_TAIL$     PTR,               /* Tail pointer to section link list  */
              6648    1         2 LIB REDEF SC_TAIL$,             /* Used only by UNSAT library files   */
              6649    1           3 USED UBIN HALF UNAL,          /* 1 => library file used, 0=>not used*/
              6650    1           3 NEEDED UBIN HALF UNAL,   /* 1 => library file needed, 0=>not needed*/
              6651    1         2 P,
              6652    1           3 NAME_       ALIGNED,
              6653    1             4 BOUND      UBIN(20)  UNAL,
              6654    1             4 FLAGSV     UBIN(11)  UNAL,
              6655    1             4 *          BIT(5)    UNAL,
              6656    1             4 NAME$      PTR,
              6657    1           3 ACCT_       ALIGNED,
              6658    1             4 BOUND      UBIN(20)  UNAL,
              6659    1             4 FLAGSV     UBIN(11)  UNAL,
              6660    1             4 *          BIT(5)    UNAL,
              6661    1             4 ACCT$      PTR,
              6662    1           3 PASS_       ALIGNED,
              6663    1             4 BOUND      UBIN(20)  UNAL,
              6664    1             4 FLAGSV     UBIN(11)  UNAL,
              6665    1             4 *          BIT(5)    UNAL,
              6666    1             4 PASS$      PTR,
              6667    1           3 SN_         ALIGNED,
              6668    1             4 BOUND      UBIN(20)  UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:89   
              6669    1             4 FLAGSV     UBIN(11)  UNAL,
              6670    1             4 *          BIT(5)    UNAL,
              6671    1             4 SN$        PTR,
              6672    1           3 WSN_        ALIGNED,
              6673    1             4 BOUND      UBIN(20)  UNAL,
              6674    1             4 FLAGSV     UBIN(11)  UNAL,
              6675    1             4 *          BIT(5)    UNAL,
              6676    1             4 WSN$       PTR,
              6677    1           3 B           ALIGNED,
              6678    1             4 RES        BIT(1)    UNAL,
              6679    1             4 ASN        BIT(1)    UNAL,
              6680    1             4 ACCT       BIT(1)    UNAL,
              6681    1             4 *          BIT(33)   UNAL,
              6682    1           3 RES         CHAR(4)   ALIGNED,
              6683    1           3 ASN         UBIN(36)  ALIGNED;
       24     6686        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:90   
       25     6687        %SET LISTSUB='1'B;
       26     6688        %LIST;
       27     6689        /* !R! */
       28     6690        %B$HEAD( NAME=VX_RU_HEAD, STCLASS="STATIC SYMDEF", SUBS=NO );
              6691    1   DCL 1 VX_RU_HEAD STATIC SYMDEF ALIGNED,
              6692    1         2 PRIV BIT(36),
              6693                /*K*  PRIV is a 36 bit field containing privilege flags.  */
              6694    1         2 VPPGS UBIN(14) UNAL,
              6695                /*K*  VPPGS is the number of virtual pages of procedure
              6696                      required for the longest overlay path.
              6697                      (256 words/page if FEP, 1024 words/page if Host)  */
              6698    1         2 * UBIN(2) UNAL,
              6699                /*K*  * is reserved for future use and must be zero.  */
              6700    1         2 RPROC UBIN(20) UNAL,
              6701                /*K*  RPROC is the size, in words, of the procedure for the root.  */
              6702    1         2 VDPGS UBIN(14) UNAL,
              6703                /*K*  VDPGS is the number of virtual pages of data required
              6704                      for the longest overlay path.
              6705                      (256 words/page if FEP, 1024 words/page if Host)
              6706                      This includes both library and user defined data.
              6707                       */
              6708    1         2 * UBIN(2) UNAL,
              6709                /*K*  * is reserved for future use and must be zero.  */
              6710    1         2 RDATA UBIN(20) UNAL,
              6711                /*K*  RDATA is the size, in words of the data for the root.
              6712                      This includes both library and user defined data.
              6713                      If this is a host run unit, all data records will be
              6714                      included in the run unit.
              6715                      If this is a FEP run unit,
              6716                      no library data will be included in the run unit itself.
              6717                      The ISADDR field of B$RUKEY for the first user data record
              6718                      may be determined by calculating the FEP word address of
              6719                      B$HEAD.BIAS rounded to the next lower 2048 FEP word boundry.
              6720                      (2048 FEP words is the maximum size of run unit records
              6721                      for FEP run units.)  The data in this record below
              6722                      BIAS will be padded with zeros.
              6723                      The word size of data contained in the FEP run unit
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:91   
              6724                      may be calculated by subtracting the ISADDR value as
              6725                      calculated for the first data record from the word
              6726                      address of the last word of user data.  The last
              6727                      word of user data is the sum of the default FPRG
              6728                      bias (%GM_ISR1_BASE - EQU is in file GM_LCP6_E) and
              6729                      the total data size (B$HEAD.RDATA).
              6730                      */
              6731    1         2 SEV UBIN BYTE UNAL,
              6732                /*K*  SEV is the maximum severity level of the object units
              6733                      making up the run unit.  */
              6734    1         2 * UBIN(7) UNAL,
              6735                /*K*  * is reserved for future use and must be zero.  */
              6736    1         2 START UBIN(20) UNAL,
              6737                /*K*  START is the address within the instruction segment at
              6738                      which execution will start.  */
              6739    1         2 UDCBNUM UBIN HALF UNAL,
              6740                /*K*  UDCBNUM is the number of DCBs in the Read-Only segment
              6741                      as generated by LINK.   */
              6742    1         2 DCBRES UBIN HALF UNAL,
              6743                /*K*  DCBRES is the number of pointers to DCBs as supplied by
              6744                      LINK.   */
              6745    1         2 TREEDISP UBIN HALF UNAL,
              6746                /*K*  TREEDISP is the displacement in words from the start of
              6747                      the variable portion of the Read-Only Segment locating
              6748                      the tree table.   */
              6749    1         2 TCBSIZE UBIN HALF UNAL,
              6750                /*K*  TCBSIZE specifies the number of frames of the Task Control Block;
              6751                      if the size is 0, then a two frame Task Control Block will be
              6752                      built by STEP.   */
              6753    1         2 PRECSIZE UBIN HALF UNAL,
              6754                /*K*  PRECSIZ is the maximum size of any program record
              6755                      in the run unit; words if Host, double words if FEP.
              6756                      */
              6757    1         2 NRECSIZE UBIN HALF UNAL,
              6758                /*K*  NRECSIZ is the maximum size of External Name records in
              6759                      the run unit.   */
              6760    1         2 EPRECSIZE UBIN HALF UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:92   
              6761                /*K*  EPRECSIZE is the maximum size of External Procedure
              6762                      Definition Records in the run unit.   */
              6763    1         2 EDRECSIZE UBIN HALF UNAL,
              6764                /*K*  EDRECSIZE is the maximum size of External Data Definition
              6765                      Records in the run unit.    */
              6766    1         2 SDRECSIZE UBIN HALF UNAL,
              6767                /*K*  SDRECSIZE is the maximum size of External Segment
              6768                      Definition Records in the run unit.   */
              6769    1         2 ROSIZE UBIN HALF UNAL,
              6770                /*K*  ROSIZE is the size of the Read Only Segment Record.  */
              6771    1         2 VERSION# UBIN BYTE UNAL,
              6772                /*K*  VERSION# is the LINK version number.  */
              6773    1         2 MAP_BITS_A(0:2) UNAL,
              6774                /*K*  MAP_BITS_A are used by the linker to produce MAP.  */
              6775    1           3 MULTIPLE BIT(1) UNAL,
              6776                  /*K*  MULTIPLE is set if a multiply defined symbol exists.  */
              6777    1           3 CON BIT(1) UNAL,
              6778                  /*K*  CON is set if a Constant symbol is defined.  */
              6779    1           3 PRIMARY BIT(1) UNAL,
              6780                  /*K*  PRIMARY is set if an unresolved primary reference exists.  */
              6781    1           3 SECONDARY BIT(1) UNAL,
              6782                  /*K*  SECONDARY is set if an unresolved secondary reference
              6783                        exists.  */
              6784    1         2 SECTABLESIZE UBIN(8) UNAL,
              6785                /*K*  SECTABLESIZE is the size in words of the record which
              6786                      contains the start location and size of all sections
              6787                      (for BIAS by OU for FEP)   */
              6788    1         2 NSTDINVOC BIT(1) UNAL,
              6789                /*K*  NSTDINVOC indicates that the RU will can tolerate invoking
              6790                      in nonstandard form.   */
              6791    1         2 REMOVE_ENTDEF BIT(1) UNAL,
              6792                /*K*  REMOVE_ENTDEF is set if ENTDEFs not in the transfer
              6793                      vector have been removed from the shared library.  */
              6794    1         2 REMOVE_SYMDEF BIT(1) UNAL,
              6795                /*K*  REMOVE_SYMDEF is set if SYMDEFs not in the transfer
              6796                      vector have been removed from the shared library.  */
              6797    1         2 STATS BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:93   
              6798                /*K*  STATS is set if Statistics are being collected on
              6799                      this processor.  */
              6800    1         2 LAUTO BIT(1) UNAL,
              6801                /*K*  LAUTO is set for a Fep run unit if user auto is to be in
              6802                a small segment, thereby freeing up a large one for other purposes. */
              6803    1         2 * BIT(2) UNAL,
              6804                /*K*  * is reserved for future use and must be zero.  */
              6805    1         2 DATA_SEG (0:5),
              6806                /*K*  DATA_SEG defines the initialized data segment in the RU.  */
              6807    1           3 SIZ UBIN HALF UNAL,
              6808                  /*K* SIZ is the word size of the initialized data segment.  */
              6809    1           3 * UBIN(9) UNAL,
              6810                  /*K*  * is reserved for future use and must be zero.  */
              6811    1           3 PROTECTION UBIN(9) UNAL,
              6812                  /*K*  PROTECTION is the initialized data segment
              6813                        protection.   */
              6814    1         2 LOCK(0:71) BIT(1) UNAL,
              6815                /*K*  LOCK is the Lock for restricted processor.  */
              6816    1         2 FLAVOR UBIN BYTE UNAL,
              6817                /*K*  FLAVOR is the flavor of the run unit.  The RU_FLAVORS
              6818                      macro gives the legal values for FLAVOR.  */
              6819    1         2 S BIT(1) UNAL,
              6820                /*K*  S - S = 1 if the run unit is Shareable  */
              6821    1         2 LIB BIT(1) UNAL,
              6822                /*K*  LIB - LIB = 1 if the run unit is a Shared Library  */
              6823    1         2 ASL BIT(1) UNAL,
              6824                /*K*  ASL - ASL = 1 if the run unit is an Alternate Shared
              6825                      Library.   */
              6826    1         2 CMDPROC BIT(1) UNAL,
              6827                /*K*  CMDPROC - CMDPROC = 1 is the run unit is a Command Processor. */
              6828    1         2 DEBUGGER BIT(1) UNAL,
              6829                /*K*  DEBUGGER - DEBUGGER = 1 if the run unit is a Debugger. */
              6830    1         2 OVRL BIT(1) UNAL,
              6831                /*K*  OVRL -  OVRL = 1 if the run unit is overlaid.   */
              6832    1         2 PROCACC BIT(1) UNAL,
              6833                /*K*  PROCACC - If PROCACC = 1,  if the run unit resides in
              6834                      :SYS, it should be charged as processor, not user.  */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:94   
              6835    1         2 NOCHGPMEM BIT(1) UNAL,
              6836                /*K*  NOCHGPMEM - If NOCHGPMEM = 1, if the run unit resides in
              6837                      :SYS, the user should not be charged for procedures.  */
              6838    1         2 PROCSURCHG BIT(1) UNAL,
              6839                /*K*  PROCSURCHG - If PROCSURCHG = 1, Surcharge accountings
              6840                      should be applied.  */
              6841    1         2 RESTPROC BIT(1) UNAL,
              6842                /*K*  RESTPROC - If RESTPROC = 1, this is a restricted
              6843                      processor and should be verified against the user's key.  */
              6844    1         2 STRONG_LOCK BIT(1) UNAL,
              6845                /*K*  STRONG_LOCK - If STRONG_LOCK = 1, the restricted
              6846                      processor has a strong lock.  If STRONG_LOCK = 0, the
              6847                      restricted processor has a weak lock.   */
              6848    1         2 * UBIN(16) UNAL,
              6849                /*K*  * is reserved for future use and must be zero. */
              6850    1         2 PSEUDO_COUNT UBIN BYTE UNAL,
              6851                /*K*  PSEUDO_COUNT - If PSEUDO_COUNT > 0, then a pseudo resource
              6852                      is required to execute this run-unit.  */
              6853    1         2 * UBIN(7) UNAL,
              6854                /*K*  * is reserved for future use and must be zero.  */
              6855    1         2 BIAS UBIN(20) UNAL,
              6856                /*K*  BIAS is the address within the instruction segment of
              6857                      the beginning of the root data.  */
              6858    1         2 PSEUDO_TEXT CHAR(8),
              6859                /*K*  PSEUDO_TEXT - contains the text of the pseudo resource
              6860                      to acquire when the run-unit is executed.  */
              6861    1         2 * (0:1) UBIN WORD UNAL,
              6862                /*K*  * is reserved for future use and must be zero.  */
              6863    1         2 LIBNAME,
              6864                /*K* LIBNAME gives the name, if any, of the shared library to
              6865                     be associated.  Each name resides in a fixed 8-word field.
              6866                     The first byte contains the character count of the name
              6867                     followed by the name itself.   */
              6868    1           3 CNT UBIN BYTE UNAL,
              6869                  /*K* CNT contains the character count of the name of the
              6870                       shared library.  */
              6871    1           3 TXT CHAR(31) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:95   
              6872                  /*K*  TXT contains the name itself of the shared library.  */
              6873    1         2 ASLNAME,
              6874                /*K*  ASLNAME gives the name, if any, of the alternate shared
              6875                      library to be associated.  Each name resides in a fixed
              6876                      8-word field.  The first byte contains the character
              6877                      count of the name followed by the name itself.   */
              6878    1           3 CNT UBIN BYTE UNAL,
              6879                  /*K*  CNT contains the character count of the name of
              6880                        the alternate shared library.  */
              6881    1           3 TXT CHAR(31) UNAL;
              6882                  /*K*  TXT contains the name itself of the alternate
              6883                        shared library.  */
              6884        %IF '0'B='1'B;
              6888        %ENDIF;
       29     6890        %B$HEAD( NAME=VX_RU_HEAD_BUF, STCLASS="STATIC SYMDEF", SUBS=NO );
              6891    1   DCL 1 VX_RU_HEAD_BUF STATIC SYMDEF ALIGNED,
              6892    1         2 PRIV BIT(36),
              6893                /*K*  PRIV is a 36 bit field containing privilege flags.  */
              6894    1         2 VPPGS UBIN(14) UNAL,
              6895                /*K*  VPPGS is the number of virtual pages of procedure
              6896                      required for the longest overlay path.
              6897                      (256 words/page if FEP, 1024 words/page if Host)  */
              6898    1         2 * UBIN(2) UNAL,
              6899                /*K*  * is reserved for future use and must be zero.  */
              6900    1         2 RPROC UBIN(20) UNAL,
              6901                /*K*  RPROC is the size, in words, of the procedure for the root.  */
              6902    1         2 VDPGS UBIN(14) UNAL,
              6903                /*K*  VDPGS is the number of virtual pages of data required
              6904                      for the longest overlay path.
              6905                      (256 words/page if FEP, 1024 words/page if Host)
              6906                      This includes both library and user defined data.
              6907                       */
              6908    1         2 * UBIN(2) UNAL,
              6909                /*K*  * is reserved for future use and must be zero.  */
              6910    1         2 RDATA UBIN(20) UNAL,
              6911                /*K*  RDATA is the size, in words of the data for the root.
              6912                      This includes both library and user defined data.
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:96   
              6913                      If this is a host run unit, all data records will be
              6914                      included in the run unit.
              6915                      If this is a FEP run unit,
              6916                      no library data will be included in the run unit itself.
              6917                      The ISADDR field of B$RUKEY for the first user data record
              6918                      may be determined by calculating the FEP word address of
              6919                      B$HEAD.BIAS rounded to the next lower 2048 FEP word boundry.
              6920                      (2048 FEP words is the maximum size of run unit records
              6921                      for FEP run units.)  The data in this record below
              6922                      BIAS will be padded with zeros.
              6923                      The word size of data contained in the FEP run unit
              6924                      may be calculated by subtracting the ISADDR value as
              6925                      calculated for the first data record from the word
              6926                      address of the last word of user data.  The last
              6927                      word of user data is the sum of the default FPRG
              6928                      bias (%GM_ISR1_BASE - EQU is in file GM_LCP6_E) and
              6929                      the total data size (B$HEAD.RDATA).
              6930                      */
              6931    1         2 SEV UBIN BYTE UNAL,
              6932                /*K*  SEV is the maximum severity level of the object units
              6933                      making up the run unit.  */
              6934    1         2 * UBIN(7) UNAL,
              6935                /*K*  * is reserved for future use and must be zero.  */
              6936    1         2 START UBIN(20) UNAL,
              6937                /*K*  START is the address within the instruction segment at
              6938                      which execution will start.  */
              6939    1         2 UDCBNUM UBIN HALF UNAL,
              6940                /*K*  UDCBNUM is the number of DCBs in the Read-Only segment
              6941                      as generated by LINK.   */
              6942    1         2 DCBRES UBIN HALF UNAL,
              6943                /*K*  DCBRES is the number of pointers to DCBs as supplied by
              6944                      LINK.   */
              6945    1         2 TREEDISP UBIN HALF UNAL,
              6946                /*K*  TREEDISP is the displacement in words from the start of
              6947                      the variable portion of the Read-Only Segment locating
              6948                      the tree table.   */
              6949    1         2 TCBSIZE UBIN HALF UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:97   
              6950                /*K*  TCBSIZE specifies the number of frames of the Task Control Block;
              6951                      if the size is 0, then a two frame Task Control Block will be
              6952                      built by STEP.   */
              6953    1         2 PRECSIZE UBIN HALF UNAL,
              6954                /*K*  PRECSIZ is the maximum size of any program record
              6955                      in the run unit; words if Host, double words if FEP.
              6956                      */
              6957    1         2 NRECSIZE UBIN HALF UNAL,
              6958                /*K*  NRECSIZ is the maximum size of External Name records in
              6959                      the run unit.   */
              6960    1         2 EPRECSIZE UBIN HALF UNAL,
              6961                /*K*  EPRECSIZE is the maximum size of External Procedure
              6962                      Definition Records in the run unit.   */
              6963    1         2 EDRECSIZE UBIN HALF UNAL,
              6964                /*K*  EDRECSIZE is the maximum size of External Data Definition
              6965                      Records in the run unit.    */
              6966    1         2 SDRECSIZE UBIN HALF UNAL,
              6967                /*K*  SDRECSIZE is the maximum size of External Segment
              6968                      Definition Records in the run unit.   */
              6969    1         2 ROSIZE UBIN HALF UNAL,
              6970                /*K*  ROSIZE is the size of the Read Only Segment Record.  */
              6971    1         2 VERSION# UBIN BYTE UNAL,
              6972                /*K*  VERSION# is the LINK version number.  */
              6973    1         2 MAP_BITS_A(0:2) UNAL,
              6974                /*K*  MAP_BITS_A are used by the linker to produce MAP.  */
              6975    1           3 MULTIPLE BIT(1) UNAL,
              6976                  /*K*  MULTIPLE is set if a multiply defined symbol exists.  */
              6977    1           3 CON BIT(1) UNAL,
              6978                  /*K*  CON is set if a Constant symbol is defined.  */
              6979    1           3 PRIMARY BIT(1) UNAL,
              6980                  /*K*  PRIMARY is set if an unresolved primary reference exists.  */
              6981    1           3 SECONDARY BIT(1) UNAL,
              6982                  /*K*  SECONDARY is set if an unresolved secondary reference
              6983                        exists.  */
              6984    1         2 SECTABLESIZE UBIN(8) UNAL,
              6985                /*K*  SECTABLESIZE is the size in words of the record which
              6986                      contains the start location and size of all sections
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:98   
              6987                      (for BIAS by OU for FEP)   */
              6988    1         2 NSTDINVOC BIT(1) UNAL,
              6989                /*K*  NSTDINVOC indicates that the RU will can tolerate invoking
              6990                      in nonstandard form.   */
              6991    1         2 REMOVE_ENTDEF BIT(1) UNAL,
              6992                /*K*  REMOVE_ENTDEF is set if ENTDEFs not in the transfer
              6993                      vector have been removed from the shared library.  */
              6994    1         2 REMOVE_SYMDEF BIT(1) UNAL,
              6995                /*K*  REMOVE_SYMDEF is set if SYMDEFs not in the transfer
              6996                      vector have been removed from the shared library.  */
              6997    1         2 STATS BIT(1) UNAL,
              6998                /*K*  STATS is set if Statistics are being collected on
              6999                      this processor.  */
              7000    1         2 LAUTO BIT(1) UNAL,
              7001                /*K*  LAUTO is set for a Fep run unit if user auto is to be in
              7002                a small segment, thereby freeing up a large one for other purposes. */
              7003    1         2 * BIT(2) UNAL,
              7004                /*K*  * is reserved for future use and must be zero.  */
              7005    1         2 DATA_SEG (0:5),
              7006                /*K*  DATA_SEG defines the initialized data segment in the RU.  */
              7007    1           3 SIZ UBIN HALF UNAL,
              7008                  /*K* SIZ is the word size of the initialized data segment.  */
              7009    1           3 * UBIN(9) UNAL,
              7010                  /*K*  * is reserved for future use and must be zero.  */
              7011    1           3 PROTECTION UBIN(9) UNAL,
              7012                  /*K*  PROTECTION is the initialized data segment
              7013                        protection.   */
              7014    1         2 LOCK(0:71) BIT(1) UNAL,
              7015                /*K*  LOCK is the Lock for restricted processor.  */
              7016    1         2 FLAVOR UBIN BYTE UNAL,
              7017                /*K*  FLAVOR is the flavor of the run unit.  The RU_FLAVORS
              7018                      macro gives the legal values for FLAVOR.  */
              7019    1         2 S BIT(1) UNAL,
              7020                /*K*  S - S = 1 if the run unit is Shareable  */
              7021    1         2 LIB BIT(1) UNAL,
              7022                /*K*  LIB - LIB = 1 if the run unit is a Shared Library  */
              7023    1         2 ASL BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:99   
              7024                /*K*  ASL - ASL = 1 if the run unit is an Alternate Shared
              7025                      Library.   */
              7026    1         2 CMDPROC BIT(1) UNAL,
              7027                /*K*  CMDPROC - CMDPROC = 1 is the run unit is a Command Processor. */
              7028    1         2 DEBUGGER BIT(1) UNAL,
              7029                /*K*  DEBUGGER - DEBUGGER = 1 if the run unit is a Debugger. */
              7030    1         2 OVRL BIT(1) UNAL,
              7031                /*K*  OVRL -  OVRL = 1 if the run unit is overlaid.   */
              7032    1         2 PROCACC BIT(1) UNAL,
              7033                /*K*  PROCACC - If PROCACC = 1,  if the run unit resides in
              7034                      :SYS, it should be charged as processor, not user.  */
              7035    1         2 NOCHGPMEM BIT(1) UNAL,
              7036                /*K*  NOCHGPMEM - If NOCHGPMEM = 1, if the run unit resides in
              7037                      :SYS, the user should not be charged for procedures.  */
              7038    1         2 PROCSURCHG BIT(1) UNAL,
              7039                /*K*  PROCSURCHG - If PROCSURCHG = 1, Surcharge accountings
              7040                      should be applied.  */
              7041    1         2 RESTPROC BIT(1) UNAL,
              7042                /*K*  RESTPROC - If RESTPROC = 1, this is a restricted
              7043                      processor and should be verified against the user's key.  */
              7044    1         2 STRONG_LOCK BIT(1) UNAL,
              7045                /*K*  STRONG_LOCK - If STRONG_LOCK = 1, the restricted
              7046                      processor has a strong lock.  If STRONG_LOCK = 0, the
              7047                      restricted processor has a weak lock.   */
              7048    1         2 * UBIN(16) UNAL,
              7049                /*K*  * is reserved for future use and must be zero. */
              7050    1         2 PSEUDO_COUNT UBIN BYTE UNAL,
              7051                /*K*  PSEUDO_COUNT - If PSEUDO_COUNT > 0, then a pseudo resource
              7052                      is required to execute this run-unit.  */
              7053    1         2 * UBIN(7) UNAL,
              7054                /*K*  * is reserved for future use and must be zero.  */
              7055    1         2 BIAS UBIN(20) UNAL,
              7056                /*K*  BIAS is the address within the instruction segment of
              7057                      the beginning of the root data.  */
              7058    1         2 PSEUDO_TEXT CHAR(8),
              7059                /*K*  PSEUDO_TEXT - contains the text of the pseudo resource
              7060                      to acquire when the run-unit is executed.  */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:100  
              7061    1         2 * (0:1) UBIN WORD UNAL,
              7062                /*K*  * is reserved for future use and must be zero.  */
              7063    1         2 LIBNAME,
              7064                /*K* LIBNAME gives the name, if any, of the shared library to
              7065                     be associated.  Each name resides in a fixed 8-word field.
              7066                     The first byte contains the character count of the name
              7067                     followed by the name itself.   */
              7068    1           3 CNT UBIN BYTE UNAL,
              7069                  /*K* CNT contains the character count of the name of the
              7070                       shared library.  */
              7071    1           3 TXT CHAR(31) UNAL,
              7072                  /*K*  TXT contains the name itself of the shared library.  */
              7073    1         2 ASLNAME,
              7074                /*K*  ASLNAME gives the name, if any, of the alternate shared
              7075                      library to be associated.  Each name resides in a fixed
              7076                      8-word field.  The first byte contains the character
              7077                      count of the name followed by the name itself.   */
              7078    1           3 CNT UBIN BYTE UNAL,
              7079                  /*K*  CNT contains the character count of the name of
              7080                        the alternate shared library.  */
              7081    1           3 TXT CHAR(31) UNAL;
              7082                  /*K*  TXT contains the name itself of the alternate
              7083                        shared library.  */
              7084        %IF '0'B='1'B;
              7088        %ENDIF;
       30     7090        %PLIST;
       31     7091        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:101  
       32     7092        /*
       33     7093              BUFFER FOR OBJECT UNIT NAME FOR LIBRARY SEARCHES
       34     7094        */
       35     7095    1   DCL 1 VX_L_REC_BUF ALIGNED STATIC SYMDEF,
       36     7096    1         2 COUNT UBIN(9) UNAL INIT(0),
       37     7097    1         2 CHARS CHAR(31) UNAL INIT(' ');
       38     7098        /**/
       39     7099        /**/
       40     7100        /**/
       41     7101    1   DCL 1 VX_OU_HEAD STATIC SYMDEF,
       42     7102    1         2 UTS UBIN(36) UNAL INIT(0),
       43     7103    1         2 CMPLRID UBIN(36) UNAL INIT(0),
       44     7104    1         2 START_ADDRESS,
       45     7105    1           3 OPERAND_TYPE UBIN( 4) UNAL INIT(0),
       46     7106    1           3 * BIT ( 5) UNAL INIT('0'B),
       47     7107    1           3 OPERAND UBIN( 9) UNAL INIT(0),
       48     7108    1           3 OFFSET UBIN(18) UNAL INIT(0),
       49     7109    1         2 SEVLEV UBIN(18) UNAL INIT(0),
       50     7110    1         2 LB_SIZE UBIN(18) UNAL INIT(0),
       51     7111    1         2 PR_SIZE UBIN(18) UNAL INIT(0),
       52     7112    1         2 RL_SIZE UBIN(18) UNAL INIT(0),
       53     7113    1         2 REC_A(0:7) UNAL,
       54     7114    1           3 SIZE UBIN(18) UNAL INIT(0*0),
       55     7115    1           3 PAGE UBIN(18) UNAL INIT(0*0),
       56     7116    1         2 REC REDEF REC_A,
       57     7117    1           3 DN_SIZE UBIN(18) UNAL ,
       58     7118    1           3 DN_PAGE UBIN(18) UNAL ,
       59     7119    1           3 RN_SIZE UBIN(18) UNAL ,
       60     7120    1           3 RN_PAGE UBIN(18) UNAL ,
       61     7121    1           3 ED_SIZE UBIN(18) UNAL ,
       62     7122    1           3 ED_PAGE UBIN(18) UNAL ,
       63     7123    1           3 ER_SIZE UBIN(18) UNAL ,
       64     7124    1           3 ER_PAGE UBIN(18) UNAL ,
       65     7125    1           3 DD_SIZE UBIN(18) UNAL ,
       66     7126    1           3 DD_PAGE UBIN(18) UNAL ,
       67     7127    1           3 DR_SIZE UBIN(18) UNAL ,
       68     7128    1           3 DR_PAGE UBIN(18) UNAL ,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:102  
       69     7129    1           3 SD_SIZE UBIN(18) UNAL ,
       70     7130    1           3 SD_PAGE UBIN(18) UNAL ,
       71     7131    1           3 SR_SIZE UBIN(18) UNAL ,
       72     7132    1           3 SR_PAGE UBIN(18) UNAL ,
       73     7133    1         2 LIB,
       74     7134    1           3 COUNT UBIN( 9) UNAL INIT(0),
       75     7135    1           3 NAME CHAR(31) UNAL
       76     7136    1             INIT('                               '),
       77     7137    1         2 ALIB,
       78     7138    1           3 COUNT UBIN( 9) UNAL INIT(0),
       79     7139    1           3 NAME CHAR(31) UNAL
       80     7140    1             INIT('                               ');
       81     7141        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:103  
       82     7142        /* !R!
       83     7143        %B$OUHEAD(NAME=VX_OUHEAD,STCLASS="REDEF VX_OU_HEAD");
       84     7144        */
       85     7145    1   DCL   VX_SC_START$         PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
       86     7146    1   DCL   VX_SC_ROOT_LBL_COM     UBIN(36)            STATIC    SYMDEF INIT(0);
       87     7147    1   DCL   VX_SC_LBL_COM       UBIN(36)            STATIC    SYMDEF INIT(0);
       88     7148    1   DCL   VX_SC_BLK_COM       UBIN(36)            STATIC    SYMDEF INIT(0);
       89     7149    1   DCL   VX_OVERLAY_START$   PTR                 STATIC    SYMDEF  INIT (ADDR(NIL));
       90     7150    1   DCL   VX_LAST_SC$         PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
       91     7151    1   DCL   VX_LAST_OU$         PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
       92     7152    1   DCL   VX_LAST_SC_BASE     UBIN(36)            STATIC    SYMDEF INIT(0);
       93     7153    1   DCL   VX_CURR_SC_ENTRIES  UBIN(36)            STATIC    SYMDEF INIT(0);
       94     7154        /**/
       95     7155        /**/
       96     7156    1   DCL VX_TREE_ADR UBIN(36) STATIC SYMDEF INIT(0);
              7156            /* DISPLACEMENT INTO ROS FOR START OF TREE TABLE */
       97     7157    1   DCL VX_TREE_NAME_POOL UBIN(36) STATIC SYMDEF INIT(0);
              7157            /* ACCUMULATING SIZE OF NAME POOL FOR TREE TABLE */
       98     7158    1   DCL   VX_TREE_SLIB_NAME   UBIN(36)            STATIC    SYMDEF    INIT(0);
       99     7159                            /* MAX SIZE OF ALL LIBRARY NAMES ENCOUNTERED (TEXTC->WORD)*/
      100     7160    1   DCL   VX_TREE_ESZ         UBIN(36)            STATIC   SYMDEF INIT(5);
      101     7161    1   DCL   VX_TREE_PRE         UBIN(36)            STATIC   SYMDEF INIT(3);
      102     7162    1   DCL   VX_TREE_SIZE        UBIN(36)            STATIC   SYMDEF INIT(0);
      103     7163    1   DCL   VX_TREE_DISP        UBIN(36)            STATIC   SYMDEF INIT(0);
      104     7164    1   DCL   VX_TREE_LIB         UBIN(36)            STATIC   SYMDEF INIT(0);
      105     7165    1   DCL   VX_DCB_USER         UBIN(36)            STATIC   SYMDEF INIT(0);
      106     7166        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:104  
      107     7167    1   DCL   VX_DUMMY            UBIN(36)            STATIC   SYMDEF INIT(0);
      108     7168    1   DCL 1 VX_CBUF STATIC SYMDEF,
      109     7169    1         2 CHARS_A(0:132) CHAR( 1) UNAL INIT(' '*0),
      110     7170    1         2 CHARS REDEF CHARS_A CHAR(133) UNAL;
      111     7171        /*
      112     7172              1-LINK    LINK
      113     7173              2-LYNX    LINK
      114     7174              3-LOAD    LINK
      115     7175              4-RUN     LINK, M$LDTR
      116     7176              5-MAP     MAP
      117     7177        */
      118     7178    1   DCL  VX_COMMAND          UBIN(36)            STATIC    SYMDEF    INIT(0);
      119     7179    1   DCL  VX_ON_OVER          UBIN(36)            STATIC    SYMDEF    INIT(0);
      120     7180    1   DCL  VX_ON_OVER_RUF      UBIN(36)            STATIC    SYMDEF    INIT(0);
      121     7181    1   DCL  VX_FCG_SWITCH       BIT(1) ALIGNED   STATIC   SYMDEF   INIT('0'B);
      122     7182    1   DCL  VX_LO_DO_DIFFER     BIT(1) ALIGNED   STATIC   SYMDEF   INIT('0'B);
      123     7183    1   DCL VX_INHIBIT_COMPACTION UBIN(36)           STATIC    SYMDEF    INIT(0);
      124     7184    1   DCL  VX_PASS             UBIN(36)            STATIC    SYMDEF    INIT(0);
      125     7185    1   DCL VX_DO_PASS1 UBIN(36) STATIC SYMDEF INIT(1);
              7185            /* SWITCH TO INDICATE DO PROCESSING FOR PASS1 */
      126     7186    1   DCL VX_DO_PASS2 UBIN(36) STATIC SYMDEF INIT(1);
              7186            /* SWITCH TO INDICATE DO PROCESSING FOR PASS2 */
      127     7187    1   DCL VX_COUNT_FID UBIN(36) STATIC SYMDEF INIT(0);
              7187            /* SWITCH TO INDICATE WHETHER TO COUNT FIDS */
      128     7188    1   DCL VX_FID_COUNT UBIN(36) STATIC SYMDEF INIT(0);
              7188            /* ACCUMULATED FID COUNT IF VX_COUNT_FID~=0 */
      129     7189    1   DCL VX_HAVE_ROOT_LBL_COM       BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('0'B
              7189            /*@FALSE_B*/);
      130     7190    1   DCL VX_GOT_ON_OVER UBIN(36) STATIC SYMDEF INIT(0);
              7190            /* SWITCH WHICH INDICATES WHETHER ON OR OVER WAS HIT*/
      131     7191    1   DCL VX_PRIMARY_ENTDEF_GOT BIT(1) STATIC SYMDEF INIT('0'B);
              7191            /* HAVE PRIMARY ENTDEF INDEX OR NOT */
      132     7192    1   DCL VX_SLIB_USED BIT(1) STATIC SYMDEF INIT('0'B); /* SHARED LIBRARY USED */
      133     7193    1   DCL VX_LINK_UTS UBIN(36) STATIC SYMDEF INIT(0); /* UTS TO STAMP RUN FILE */
      134     7194    1   DCL VX_NODE_NUMBER SBIN WORD STATIC SYMDEF INIT(-1); /* NODE NUMBERS; >0=>TREE*/
      135     7195    1   DCL VX_NUM_UNIQUE_BREFS UBIN WORD STATIC SYMDEF INIT(0);
      136     7196    1   DCL VX_IN_OVERLAY  BIT (1) STATIC SYMDEF INIT('0'B);
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:105  
      137     7197    1   DCL VX_BREF_DEFAULT_SET BIT (1) STATIC SYMDEF INIT ('0'B);
      138     7198    1   DCL VX_IN_PATCH BIT (1) STATIC SYMDEF INIT ('0'B);
      139     7199    1   DCL VX_LIB_USED BIT (1) STATIC SYMDEF INIT ('0'B);
      140     7200    1   DCL VX_ROOT$              PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      141     7201    1   DCL VX_RUF$               PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      142     7202    1   DCL VX_LOF$               PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      143     7203    1   DCL VX_CURR$              PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      144     7204    1   DCL VX_FCURR$             PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      145     7205    1   DCL VX_OCURR$             PTR                 STATIC    SYMDEF    INIT(ADDR(NIL));
      146     7206    1   DCL 1 VX_NIL_V DALIGNED STATIC SYMDEF ,
      147     7207    1         2 BOUND UBIN(20) UNAL INIT(SIZEV(NIL)),
      148     7208    1         2 FLAGSV UBIN(11) UNAL INIT(2045),
      149     7209    1         2 * BIT(5),
      150     7210    1         2 VX_NIL_V$ PTR INIT(ADDR(NIL));
      151     7211    1   DCL 1 VX_ERRORS STATIC SYMDEF,
      152     7212    1         2 MULTIPLE UBIN(36) ALIGNED INIT( 0),
      153     7213    1         2 UNSAT_A(0:1) UBIN(36) ALIGNED INIT( 0*0),
      154     7214    1         2 UNSAT REDEF UNSAT_A,
      155     7215    1           3 UNSAT_PRIMARY UBIN(36) ALIGNED,
      156     7216    1           3 UNSAT_SECONDARY UBIN(36) ALIGNED,
      157     7217    1         2 CONFLICT_A(0:2) UBIN(36) ALIGNED INIT( 0*0),
      158     7218    1         2 CONFLICT REDEF CONFLICT_A,
      159     7219    1           3 ALTRIT UBIN(36) ALIGNED,
      160     7220    1           3 PARM UBIN(36) ALIGNED,
      161     7221    1           3 CST UBIN(36) ALIGNED;
      162     7222    1   DCL VX_ERRORS_A(0:5) REDEF     VX_ERRORS  UBIN(36)ALIGNED;
      163     7223        /*    HIGHEST ERROR SEVERITY ENCOUNTERED                          */
      164     7224    1   DCL VX_ERR_SEV            UBIN(36)  ALIGNED STATIC SYMDEF    INIT( 0);
      165     7225        /*    STARTING ADDRESSES FOR EACH SECTION/SEGMENT                 */
      166     7226    1   DCL 1 VX_PROGRAM_BIAS STATIC SYMDEF,
      167     7227    1         2 A(0:2) UBIN(36) ALIGNED INIT( 0*0),
      168     7228    1         2 I REDEF A,
      169     7229    1           3 DATA UBIN(36) ALIGNED,
      170     7230    1           3 RPROC UBIN(36) ALIGNED,
      171     7231    1           3 ROS UBIN(36) ALIGNED;
      172     7232        /*    BIASES FOR EACH SECTION/SEGMENT                             */
      173     7233    1   DCL 1 VX_BIAS STATIC SYMDEF,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:106  
      174     7234    1         2 A(0:2) SBIN WORD ALIGNED INIT( 0*0),
      175     7235    1         2 I REDEF A,
      176     7236    1           3 DATA SBIN WORD ALIGNED,
      177     7237    1           3 RPROC SBIN WORD ALIGNED,
      178     7238    1           3 ROS SBIN WORD ALIGNED;
      179     7239        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:107  
      180     7240        /*
      181     7241                        MEMORY VARIABLES FOR DYNAMIC SEGMENTS
      182     7242        */
      183     7243        /*    FIRST FREE WORD(RELATIVE) IN DATA SEGMENT(INDEX)       */
      184     7244    1   DCL VX_M_FREE(0:8)                  SBIN WORD STATIC    SYMDEF    INIT(0*0);
      185     7245        /*    LAST ALLOCATED(POSSIBLY UNUSED) WORD IN DATA SEGMENT(INDEXED) */
      186     7246    1   DCL VX_M_ALL(0:8)                   SBIN WORD STATIC    SYMDEF    INIT(0*0);
      187     7247        /*    BASE POINTER FOR SEGMENT                               */
      188     7248    1   DCL VX_M_BASE_PTR(0:8)              PTR       STATIC    SYMDEF   INIT(ADDR(NIL)*0);
      189     7249        /* TYPE -> SEGIDS */
      190     7250    1   DCL VX_M_SEGID(0:8)                   UBIN(36)  ALIGNED   STATIC   SYMDEF INIT(0*0)
              7250            ;
      191     7251        /*
      192     7252                        MEMORY VARIABLES FOR DYNAMIC PAGES
      193     7253        */
      194     7254        /*    FIRST FREE WORD(RELATIVE) IN DYNAMIC DATA PAGES     */
      195     7255    1   DCL VX_ONLINE UBIN(36) ALIGNED STATIC SYMDEF INIT(0);/*<>0 => ONLINE
      196     7256                                                =0 => NOT ONLINE */
      197     7257        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:108  
      198     7258    1   DCL 1 VX_O STATIC SYMDEF,
      199     7259    1         2 SIN_A(0:28) UBIN(36) ALIGNED INIT(0*0),
      200     7260    1         2 SIN REDEF SIN_A,
      201     7261    1           3 SHARED UBIN(36) ALIGNED,
      202     7262    1           3 NSHARED UBIN(36) ALIGNED,
      203     7263    1           3 NOBREF UBIN(36) ALIGNED,
      204     7264    1           3 NODEBUG UBIN(36) ALIGNED,
      205     7265    1           3 NOSETS UBIN(36) ALIGNED,
      206     7266    1           3 NOSHARELIB UBIN(36) ALIGNED,
      207     7267    1           3 NOSYSLIB UBIN(36) ALIGNED,
      208     7268    1           3 ALIB UBIN(36) ALIGNED,
      209     7269    1           3 OSP UBIN(36) ALIGNED,
      210     7270    1           3 RUN UBIN(36) ALIGNED,
      211     7271    1           3 SYSTEM UBIN(36) ALIGNED,
      212     7272    1           3 NOEDITING UBIN(36) ALIGNED,
      213     7273    1           3 ASLIB UBIN(36) ALIGNED,
      214     7274    1           3 SLIB UBIN(36) ALIGNED,
      215     7275    1           3 PROMOTE_BLANK UBIN(36) ALIGNED,
      216     7276    1           3 PROMOTE_LABEL UBIN(36) ALIGNED,
      217     7277    1           3 PROMOTE UBIN(36) ALIGNED,
      218     7278    1           3 DUPLICATE UBIN(36) ALIGNED,
      219     7279    1           3 PROCACC UBIN(36) ALIGNED,
      220     7280    1           3 NOCHGPMEM UBIN(36) ALIGNED,
      221     7281    1           3 NOALTSHARELIB UBIN(36) ALIGNED,
      222     7282    1           3 SURCHARGE UBIN(36) ALIGNED,
      223     7283    1           3 NSTDINVOC UBIN(36) ALIGNED,
      224     7284    1           3 STATS UBIN(36) ALIGNED,
      225     7285    1           3 LLMU  UBIN(36) ALIGNED,
      226     7286    1           3 LSAU  UBIN(36) ALIGNED,
      227     7287    1           3 WARN  UBIN(36) ALIGNED,
      228     7288    1           3 NWARN UBIN(36) ALIGNED,
      229     7289    1           3 NPLOVER UBIN(36) ALIGNED,
      230     7290    1         2 NUM_A(0:12) SBIN WORD ALIGNED INIT(0,12,0,-1,11,-1,
      231     7291    1           3/*@TCB_FRAMES*/,
      232     7292    1           0*6),
      233     7293    1         2 NUM REDEF NUM_A,
      234     7294    1           3 BREF SBIN WORD ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:109  
      235     7295    1           3 DCBSLOTS SBIN WORD ALIGNED,
      236     7296    1           3 DBIAS SBIN WORD ALIGNED,
      237     7297    1           3 PBIAS SBIN WORD ALIGNED,
      238     7298    1           3 SEVERITY SBIN WORD ALIGNED,
      239     7299    1           3 START SBIN WORD ALIGNED,
      240     7300    1           3 TCB SBIN WORD ALIGNED,
      241     7301    1           3 REPORT SBIN WORD ALIGNED,
      242     7302    1           3 DPATCH SBIN WORD ALIGNED,
      243     7303    1           3 IPATCH SBIN WORD ALIGNED,
      244     7304    1           3 IXTNSIZE SBIN WORD ALIGNED,
      245     7305    1           3 XTNSIZE SBIN WORD ALIGNED,
      246     7306    1           3 * SBIN WORD ALIGNED,
      247     7307    1         2 PRIV_A(0:35) BIT(36) ALIGNED INIT(
      248     7308    1           %PR_SPCLMM#,
      249     7309    1           %PR_EXMM#,
      250     7310    1           %PR_MAXMEM#,
      251     7311    1           %PR_MSYS#,
      252     7312    1           %PR_JIT#,
      253     7313    1           %PR_TND#,
      254     7314    1           %PR_PM#,
      255     7315    1           %PR_EXPM#,
      256     7316    1           %PR_IOQ#,
      257     7317    1           %PR_IOQW#,
      258     7318    1           %PR_CFEP#,
      259     7319    1           %PR_MFEP#,
      260     7320    1           %PR_SYSLOG#,
      261     7321    1           '0'B ,
      262     7322    1           %PR_FMEFT#,
      263     7323    1           %PR_FMBLK#,
      264     7324    1           %PR_FMSEC#,
      265     7325    1           %PR_FMDIAG#,
      266     7326    1           %PR_GPP#,
      267     7327    1           %PR_ASAVE#,
      268     7328    1           %PR_SYSCON#,
      269     7329    1           '0'B,
      270     7330    1           %PR_DISPJOB#,
      271     7331    1           %PR_FMREAD#,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:110  
      272     7332    1           '0'B/*@FALSE_B*/,
      273     7333    1           '0'B/*@FALSE_B*/,
      274     7334    1           '0'B/*@FALSE_B*/,
      275     7335    1           '0'B/*@FALSE_B*/,
      276     7336    1           '0'B/*@FALSE_B*/,
      277     7337    1           '0'B/*@FALSE_B*/,
      278     7338    1           '0'B/*@FALSE_B*/,
      279     7339    1           '0'B/*@FALSE_B*/,
      280     7340    1           '0'B/*@FALSE_B*/,
      281     7341    1           '0'B/*@FALSE_B*/,
      282     7342    1           '0'B/*@FALSE_B*/,
      283     7343    1           '0'B/*@FALSE_B*/ ),
      284     7344    1         2 PRIV REDEF PRIV_A,
      285     7345    1           3 SPCLMM BIT(36) ALIGNED,
      286     7346    1           3 EXMM BIT(36) ALIGNED,
      287     7347    1           3 MAXMEM BIT(36) ALIGNED,
      288     7348    1           3 MSYS BIT(36) ALIGNED,
      289     7349    1           3 JIT BIT(36) ALIGNED,
      290     7350    1           3 TND BIT(36) ALIGNED,
      291     7351    1           3 PM BIT(36) ALIGNED,
      292     7352    1           3 EXPM BIT(36) ALIGNED,
      293     7353    1           3 IOQ BIT(36) ALIGNED,
      294     7354    1           3 IOQW BIT(36) ALIGNED,
      295     7355    1           3 CFEP BIT(36) ALIGNED,
      296     7356    1           3 MFEP BIT(36) ALIGNED,
      297     7357    1           3 SYSLOG BIT(36) ALIGNED,
      298     7358    1           3 *   BIT(36) ALIGNED,
      299     7359    1           3 FMEFT BIT(36) ALIGNED,
      300     7360    1           3 FMBLK BIT(36) ALIGNED,
      301     7361    1           3 FMSEC BIT(36) ALIGNED,
      302     7362    1           3 FMDIAG BIT(36) ALIGNED,
      303     7363    1           3 GPP BIT(36) ALIGNED,
      304     7364    1           3 ASAVE BIT(36) ALIGNED,
      305     7365    1           3 SYSCON BIT(36) ALIGNED,
      306     7366    1           3 *    BIT(36) ALIGNED,
      307     7367    1           3 DISPJOB BIT(36) ALIGNED,
      308     7368    1           3 FMREAD BIT(36) ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:111  
      309     7369    1           3 * BIT(36) ALIGNED,
      310     7370    1           3 * BIT(36) ALIGNED,
      311     7371    1           3 * BIT(36) ALIGNED,
      312     7372    1           3 * BIT(36) ALIGNED,
      313     7373    1           3 * BIT(36) ALIGNED,
      314     7374    1           3 * BIT(36) ALIGNED,
      315     7375    1           3 * BIT(36) ALIGNED,
      316     7376    1           3 * BIT(36) ALIGNED,
      317     7377    1           3 * BIT(36) ALIGNED,
      318     7378    1           3 * BIT(36) ALIGNED,
      319     7379    1           3 * BIT(36) ALIGNED,
      320     7380    1           3 * BIT(36) ALIGNED,
      321     7381    1         2 MAP_A(0:3) UBIN(36) ALIGNED INIT(0*0),
      322     7382    1         2 MAP REDEF MAP_A,
      323     7383    1           3 NAME UBIN(36) ALIGNED,
      324     7384    1           3 VALUE UBIN(36) ALIGNED,
      325     7385    1           3 UDEF UBIN(36) ALIGNED,
      326     7386    1           3 LDEF UBIN(36) ALIGNED,
      327     7387    1         2 FID_A$(0:5) PTR ALIGNED INIT(ADDR(NIL)*0),
      328     7388    1         2 FID REDEF FID_A$,
      329     7389    1           3 ALTSHARELIB$ PTR ALIGNED,
      330     7390    1           3 SHARELIB$ PTR ALIGNED,
      331     7391    1           3 UNSAT$ PTR ALIGNED,
      332     7392    1           3 * PTR ALIGNED,
      333     7393    1           3 * PTR ALIGNED,
      334     7394    1           3 * PTR ALIGNED,
      335     7395    1         2 FIDN_A$(0:3) PTR ALIGNED INIT(ADDR(NIL)*0),
      336     7396    1         2 FIDN$ REDEF FIDN_A$,
      337     7397    1           3 UNSAT$ PTR ALIGNED,
      338     7398    1           3 * PTR ALIGNED,
      339     7399    1           3 * PTR ALIGNED,
      340     7400    1           3 * PTR ALIGNED,
      341     7401    1         2 ACCTN_A$(0:3) PTR ALIGNED INIT(ADDR(NIL)*0),
      342     7402    1         2 ACCTN$ REDEF ACCTN_A$,
      343     7403    1           3 LIBSRCH$ PTR ALIGNED,
      344     7404    1           3 SRCH$ PTR ALIGNED,
      345     7405    1           3 * PTR ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:112  
      346     7406    1           3 * PTR ALIGNED,
      347     7407    1         2 INCLUDE_A$(0:0) PTR ALIGNED INIT(ADDR(NIL)*0),
      348     7408    1         2 INCL REDEF INCLUDE_A$,
      349     7409    1           3 INCLUDE$ PTR ALIGNED,
      350     7410    1         2 DCB_MATCH_A$(0:3) PTR ALIGNED INIT( ADDR( SIDCB_NAME ),
      351     7411    1                                              ADDR( UIDCB_NAME ),
      352     7412    1                                              ADDR( OUDCB_NAME ),
      353     7413    1                                              ADDR( LODCB_NAME ) ),
      354     7414    1         2 DCB_MATCH REDEF DCB_MATCH_A$,
      355     7415    1           3 SI$ PTR ALIGNED,
      356     7416    1           3 UI$ PTR ALIGNED,
      357     7417    1           3 OU$ PTR ALIGNED,
      358     7418    1           3 LO$ PTR ALIGNED,
      359     7419    1         2 DCB_MATCH_HIT_A(0:3) BIT(1) ALIGNED INIT('0'B/*@FALSE_B*/*0),
      360     7420    1         2 DCB_MATCH_HIT REDEF DCB_MATCH_HIT_A,
      361     7421    1           3 SI BIT(1) ALIGNED,
      362     7422    1           3 UI BIT(1) ALIGNED,
      363     7423    1           3 OU BIT(1) ALIGNED,
      364     7424    1           3 LO BIT(1) ALIGNED,
      365     7425    1         2 TCB_A(0:1) UBIN(36) ALIGNED INIT( 16/*@TCB_SIZE*/, 3/*@TCB_FRAMES*/ ),
      366     7426    1         2 TCB REDEF TCB_A,
      367     7427    1           3 SIZE UBIN(36) ALIGNED,
      368     7428    1           3 FRAMES UBIN(36) ALIGNED,
      369     7429    1         2 OPT_A(0:1) SBIN WORD ALIGNED INIT(-1,-1),
      370     7430    1         2 OPT REDEF OPT_A,
      371     7431    1           3 MAP SBIN WORD ALIGNED,
      372     7432    1           3 START SBIN WORD ALIGNED,
      373     7433    1         2 VECTOR_,
      374     7434    1           3 RF$ PTR ALIGNED INIT(ADDR(NIL)),
      375     7435    1           3 LIST_SIZE UBIN ALIGNED INIT(0),
      376     7436    1           3 LIST$ PTR ALIGNED INIT(ADDR(NIL)),
      377     7437    1           3 REMOVE_ENTDEF UBIN ALIGNED INIT(0),
      378     7438    1           3 REMOVE_SYMDEF UBIN ALIGNED INIT(0),
      379     7439    1           3 DATA UBIN ALIGNED INIT(0),
      380     7440    1           3 * UBIN,
      381     7441    1         2 NODCB_A(0:3) UBIN INIT(0*0),
      382     7442    1         2 NODCB REDEF NODCB_A,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:113  
      383     7443    1           3 NODCB1 UBIN,
      384     7444    1           3 NODCB2 UBIN,
      385     7445    1           3 NODCB3 UBIN,
      386     7446    1           3 NODCB4 UBIN,
      387     7447    1         2 LOCK(0:71) BIT(1) UNAL INIT( '0'B/*@FALSE_B*/*0 ),
      388     7448    1         2 VERSION ALIGNED,
      389     7449    1           3 COUNT UBIN BYTE UNAL,
      390     7450    1           3 TEXT CHAR(6),
      391     7451    1         2 PSEUDO ALIGNED,
      392     7452    1           3 COUNT UBIN BYTE UNAL INIT(1),
      393     7453    1           3 TEXT CHAR(8) INIT(' ');
      394     7454        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:114  
      395     7455        /* ! ! */
      396     7456    1   DCL 1 SIDCB_NAME          ALIGNED   CONSTANT,
      397     7457    1         2 COUNT        UBIN(18)  UNAL      INIT(4),
      398     7458    1         2 TEXT         CHAR(4)   UNAL      INIT('M$SI');
      399     7459    1   DCL 1 UIDCB_NAME          ALIGNED   CONSTANT,
      400     7460    1         2 COUNT        UBIN(18)  UNAL      INIT(4),
      401     7461    1         2 TEXT         CHAR(4)   UNAL      INIT('M$UI');
      402     7462    1   DCL 1 OUDCB_NAME          ALIGNED   CONSTANT,
      403     7463    1         2 COUNT        UBIN(18)  UNAL      INIT(4),
      404     7464    1         2 TEXT         CHAR(4)   UNAL      INIT('M$OU');
      405     7465    1   DCL 1 LODCB_NAME          ALIGNED   CONSTANT,
      406     7466    1         2 COUNT        UBIN(18)  UNAL      INIT(4),
      407     7467    1         2 TEXT         CHAR(4)   UNAL      INIT('M$LO');
      408     7468        /**/
      409     7469        /**/
      410     7470        /*
      411     7471              THIS STRUCTURE MUST PARALLEL THE OPTIONS STRUCTURE FOR NUMERIC ARGUMENTS
      412     7472        */
      413     7473        /* !R! */
      414     7474    1   DCL 1 VX_OL ALIGNED CONSTANT SYMDEF,
      415     7475    1         2 MIN_A(0:12) SBIN WORD ALIGNED INIT(0*0),
      416     7476    1         2 MIN REDEF MIN_A,
      417     7477    1           3 BREF SBIN WORD ALIGNED,
      418     7478    1           3 DCBSLOTS SBIN WORD ALIGNED,
      419     7479    1           3 DBIAS SBIN WORD ALIGNED,
      420     7480    1           3 PBIAS SBIN WORD ALIGNED,
      421     7481    1           3 SEVERITY SBIN WORD ALIGNED,
      422     7482    1           3 START SBIN WORD ALIGNED,
      423     7483    1           3 TCB SBIN WORD ALIGNED,
      424     7484    1           3 REPORT SBIN WORD ALIGNED,
      425     7485    1           3 DPATCH SBIN WORD ALIGNED,
      426     7486    1           3 IPATCH SBIN WORD ALIGNED,
      427     7487    1           3 IXTNSIZE SBIN WORD ALIGNED,
      428     7488    1           3 XTNSIZE SBIN WORD ALIGNED,
      429     7489    1           3 * SBIN WORD ALIGNED,
      430     7490    1         2 MAX_A(0:12) SBIN WORD ALIGNED INIT(
      431     7491    1           1024,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:115  
      432     7492    1           1024,
      433     7493    1           262143,
      434     7494    1           262143,
      435     7495    1           511,
      436     7496    1           262143,
      437     7497    1           217,
      438     7498    1           511,
      439     7499    1           BITBIN('777777'O),
      440     7500    1           BITBIN('777777'O),
      441     7501    1           34359737999,
      442     7502    1           131072,
      443     7503    1           0),
      444     7504    1         2 MAX REDEF MAX_A,
      445     7505    1           3 BREF SBIN WORD ALIGNED,
      446     7506    1           3 DCBSLOTS SBIN WORD ALIGNED,
      447     7507    1           3 DBIAS SBIN WORD ALIGNED,
      448     7508    1           3 PBIAS SBIN WORD ALIGNED,
      449     7509    1           3 SEVERITY SBIN WORD ALIGNED,
      450     7510    1           3 START SBIN WORD ALIGNED,
      451     7511    1           3 TCB SBIN WORD ALIGNED,
      452     7512    1           3 REPORT SBIN WORD ALIGNED,
      453     7513    1           3 DPATCH SBIN WORD ALIGNED,
      454     7514    1           3 IPATCH SBIN WORD ALIGNED,
      455     7515    1           3 * SBIN WORD ALIGNED,
      456     7516    1           3 * SBIN WORD ALIGNED,
      457     7517    1           3 * SBIN WORD ALIGNED;
      458     7518    1   DCL 1 VX_PHRASE STATIC SYMDEF,
      459     7519    1         2 PHRASE CHAR(24) UNAL
      460     7520    1           INIT('DURING PASS * IN PHASE *'),
      461     7521    1         2 I REDEF PHRASE,
      462     7522    1           3 * CHAR(12) UNAL,
      463     7523    1           3 PASS CHAR( 1) UNAL,
      464     7524    1           3 * CHAR(10) UNAL,
      465     7525    1           3 PHASE CHAR( 1) UNAL;
      466     7526        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:116  
      467     7527    1   DCL 1 VX_OD STATIC SYMDEF,
      468     7528    1         2 SIN_A(0:28) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      469     7529    1         2 SIN REDEF SIN_A,
      470     7530    1           3 SHARED BIT(1) UNAL,
      471     7531    1           3 NSHARED BIT(1) UNAL,
      472     7532    1           3 NOBREF BIT(1) UNAL,
      473     7533    1           3 NODEBUG BIT(1) UNAL,
      474     7534    1           3 NOSETS BIT(1) UNAL,
      475     7535    1           3 NOSHARELIB BIT(1) UNAL,
      476     7536    1           3 NOSYSLIB BIT(1) UNAL,
      477     7537    1           3 ALIB BIT(1) UNAL,
      478     7538    1           3 OSP BIT(1) UNAL,
      479     7539    1           3 RUN BIT(1) UNAL,
      480     7540    1           3 SYSTEM BIT(1) UNAL,
      481     7541    1           3 NOEDITING BIT(1) UNAL,
      482     7542    1           3 ASLIB BIT(1) UNAL,
      483     7543    1           3 SLIB BIT(1) UNAL,
      484     7544    1           3 PROMOTE_BLANK BIT(1) UNAL,
      485     7545    1           3 PROMOTE_LABEL BIT(1) UNAL,
      486     7546    1           3 PROMOTE BIT(1) UNAL,
      487     7547    1           3 DUPLICATE BIT(1) UNAL,
      488     7548    1           3 PROCACC BIT(1) UNAL,
      489     7549    1           3 NOCHGPMEM BIT(1) UNAL,
      490     7550    1           3 NOALTSHARELIB BIT(1) UNAL,
      491     7551    1           3 SURCHARGE BIT(1) UNAL,
      492     7552    1           3 NSTDINVOC BIT(1) UNAL,
      493     7553    1           3 STATS BIT(1) UNAL,
      494     7554    1           3 LLMU  BIT(1) UNAL,
      495     7555    1           3 LSAU  BIT(1) UNAL,
      496     7556    1           3 WARN  BIT(1) UNAL,
      497     7557    1           3 NWARN BIT(1) UNAL,
      498     7558    1           3 NPLOVER BIT(1) UNAL,
      499     7559    1         2 NUM_A(0:12) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      500     7560    1         2 NUM REDEF NUM_A,
      501     7561    1           3 BREF BIT(1) UNAL,
      502     7562    1           3 DCBSLOTS BIT(1) UNAL,
      503     7563    1           3 DBIAS BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:117  
      504     7564    1           3 PBIAS BIT(1) UNAL,
      505     7565    1           3 SEVERITY BIT(1) UNAL,
      506     7566    1           3 START BIT(1) UNAL,
      507     7567    1           3 TCB BIT(1) UNAL,
      508     7568    1           3 REPORT BIT(1) UNAL,
      509     7569    1           3 DPATCH BIT(1) UNAL,
      510     7570    1           3 IPATCH BIT(1) UNAL,
      511     7571    1           3 IXTNSIZE BIT(1) UNAL,
      512     7572    1           3 XTNSIZE BIT(1) UNAL,
      513     7573    1           3 * BIT(1) UNAL,
      514     7574    1         2 PRIV_A(0:35) BIT(1) UNAL INIT( '0'B/*@FALSE_B*/*0 ),
      515     7575    1         2 PRIV REDEF PRIV_A,
      516     7576    1           3 SPCLMM BIT(1) UNAL,
      517     7577    1           3 EXMM BIT(1) UNAL,
      518     7578    1           3 MAXMEM BIT(1) UNAL,
      519     7579    1           3 MSYS BIT(1) UNAL,
      520     7580    1           3 JIT BIT(1) UNAL,
      521     7581    1           3 TND BIT(1) UNAL,
      522     7582    1           3 PM BIT(1) UNAL,
      523     7583    1           3 EXPM BIT(1) UNAL,
      524     7584    1           3 IOQ BIT(1) UNAL,
      525     7585    1           3 IOQW BIT(1) UNAL,
      526     7586    1           3 CGOPN BIT(1) UNAL,
      527     7587    1           3 MFEP BIT(1) UNAL,
      528     7588    1           3 SYSLOG BIT(1) UNAL,
      529     7589    1           3 *   BIT(1) UNAL,
      530     7590    1           3 FMEFT BIT(1) UNAL,
      531     7591    1           3 FMBLK BIT(1) UNAL,
      532     7592    1           3 FMSEC BIT(1) UNAL,
      533     7593    1           3 FMDIAG BIT(1) UNAL,
      534     7594    1           3 GPP BIT(1) UNAL,
      535     7595    1           3 ASAVE BIT(1) UNAL,
      536     7596    1           3 SYSCON BIT(1) UNAL,
      537     7597    1           3 *    BIT(1) UNAL,
      538     7598    1           3 DISPJOB BIT(1) UNAL,
      539     7599    1           3 FMREAD BIT(1) UNAL,
      540     7600    1           3 * BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:118  
      541     7601    1           3 * BIT(1) UNAL,
      542     7602    1           3 * BIT(1) UNAL,
      543     7603    1           3 * BIT(1) UNAL,
      544     7604    1           3 * BIT(1) UNAL,
      545     7605    1           3 * BIT(1) UNAL,
      546     7606    1           3 * BIT(1) UNAL,
      547     7607    1           3 * BIT(1) UNAL,
      548     7608    1           3 * BIT(1) UNAL,
      549     7609    1           3 * BIT(1) UNAL,
      550     7610    1           3 * BIT(1) UNAL,
      551     7611    1           3 * BIT(1) UNAL,
      552     7612    1         2 MAP_A(0:3) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      553     7613    1         2 MAP REDEF MAP_A,
      554     7614    1           3 NAME BIT(1) UNAL,
      555     7615    1           3 VALUE BIT(1) UNAL,
      556     7616    1           3 UDEF BIT(1) UNAL,
      557     7617    1           3 LDEF BIT(1) UNAL,
      558     7618    1         2 FID_A$(0:5) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      559     7619    1         2 FID REDEF FID_A$,
      560     7620    1           3 ALTSHARELIB$ BIT(1) UNAL,
      561     7621    1           3 SHARELIB$ BIT(1) UNAL,
      562     7622    1           3 UNSAT$ BIT(1) UNAL,
      563     7623    1           3 SRCH$ BIT(1) UNAL,
      564     7624    1           3 * BIT(1) UNAL,
      565     7625    1           3 * BIT(1) UNAL,
      566     7626    1         2 FIDN_A$(0:3) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      567     7627    1         2 FIDN$ REDEF FIDN_A$,
      568     7628    1           3 UNSAT$ BIT(1) UNAL,
      569     7629    1           3 * BIT(1) UNAL,
      570     7630    1           3 * BIT(1) UNAL,
      571     7631    1           3 * BIT(1) UNAL,
      572     7632    1         2 ACCTN_A$(0:3) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      573     7633    1         2 ACCTN$ REDEF ACCTN_A$,
      574     7634    1           3 LIBSRCH$ BIT(1) UNAL,
      575     7635    1           3 * BIT(1) UNAL,
      576     7636    1           3 * BIT(1) UNAL,
      577     7637    1           3 * BIT(1) UNAL,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:119  
      578     7638    1         2 INCLUDE_A$(0:0) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      579     7639    1         2 INCL REDEF INCLUDE_A$,
      580     7640    1           3 INCLUDE$ BIT(1) UNAL,
      581     7641    1         2 DCB_MATCH_A$(0:3) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      582     7642    1         2 DCB_MATCH REDEF DCB_MATCH_A$,
      583     7643    1           3 SI$ BIT(1) UNAL,
      584     7644    1           3 UI$ BIT(1) UNAL,
      585     7645    1           3 OU$ BIT(1) UNAL,
      586     7646    1           3 LO$ BIT(1) UNAL,
      587     7647    1         2 VECTOR_A$(0:6) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      588     7648    1         2 VECTOR_ REDEF VECTOR_A$,
      589     7649    1           3 VECTOR_ BIT(1) UNAL,
      590     7650    1           3 RF      BIT(1) UNAL,
      591     7651    1           3 ENTRIES BIT(1) UNAL,
      592     7652    1           3 REMOVE_ENTDEF BIT(1) UNAL,
      593     7653    1           3 REMOVE_SYMDEF BIT(1) UNAL,
      594     7654    1           3 DATA BIT(1) UNAL,
      595     7655    1           3 * BIT(1) UNAL,
      596     7656    1         2 NODCB_A(0:3) BIT(1) UNAL INIT('0'B/*@FALSE_B*/*0),
      597     7657    1         2 NODDCB REDEF NODCB_A,
      598     7658    1           3 NODCB1 BIT(1),
      599     7659    1           3 NODCB2 BIT(1),
      600     7660    1           3 NODCB3 BIT(1),
      601     7661    1           3 NODCB4 BIT(1),
      602     7662    1         2 SLOCK BIT(1) INIT('0'B/*@FALSE_B*/),
      603     7663    1         2 WLOCK BIT(1) INIT('0'B/*@FALSE_B*/),
      604     7664    1         2 VERSION BIT(1) INIT('0'B),
      605     7665    1         2 PSEUDO BIT(1) INIT('0'B);
      606     7666        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:120  
      607     7667        /* ! ! */
      608     7668    1   DCL      T_ALTSHARELIB_KEY_WORD        UBIN WORD ALIGNED SYMREF;
      609     7669    1   DCL      T_ASLIB_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      610     7670    1   DCL      T_BREF_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      611     7671    1   DCL      T_DATA_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      612     7672    1   DCL      T_DBIAS_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      613     7673    1   DCL      T_DCBSLOTS_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      614     7674    1   DCL      T_DUPLICATE_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      615     7675    1   DCL      T_ENTRIES_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      616     7676    1   DCL      T_SHAREABLE_KEY_WORD          UBIN WORD ALIGNED SYMREF;
      617     7677    1   DCL      T_INCLUDE_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      618     7678    1   DCL      T_LDEF_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      619     7679    1   DCL      T_LIBSRCH_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      620     7680    1   DCL      T_LINK_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      621     7681    1   DCL      T_LOAD_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      622     7682    1   DCL      T_LYNX_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      623     7683    1   DCL      T_MAP_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      624     7684    1   DCL      T_MAP_KEY_WORD_BLANK          UBIN WORD ALIGNED SYMREF;
      625     7685    1   DCL      T_NAME_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      626     7686    1   DCL      T_NB_KEY_WORD                 UBIN WORD ALIGNED SYMREF;
      627     7687    1   DCL      T_ND_KEY_WORD                 UBIN WORD ALIGNED SYMREF;
      628     7688    1   DCL      T_NL_KEY_WORD                 UBIN WORD ALIGNED SYMREF;
      629     7689    1   DCL      T_NOALTSHARELIB_KEY_WORD      UBIN WORD ALIGNED SYMREF;
      630     7690    1   DCL      T_NOBREF_KEY_WORD             UBIN WORD ALIGNED SYMREF;
      631     7691    1   DCL      T_NODEBUG_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      632     7692    1   DCL      T_NOEDITING_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      633     7693    1   DCL      T_NOSETS_KEY_WORD             UBIN WORD ALIGNED SYMREF;
      634     7694    1   DCL      T_NOSHARELIB_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      635     7695    1   DCL      T_NOSYSLIB_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      636     7696    1   DCL      T_NSHAREABLE_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      637     7697    1   DCL      T_NSTDINVOC_KEY_WORD          UBIN WORD ALIGNED SYMREF;
      638     7698    1   DCL      T_ALIB_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      639     7699    1   DCL      T_ON_KEY_WORD                 UBIN WORD ALIGNED SYMREF;
      640     7700    1   DCL      T_OVER_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      641     7701    1   DCL      T_OSP_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      642     7702    1   DCL      T_PBIAS_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      643     7703    1   DCL      T_PRIVILEGES_KEY_WORD         UBIN WORD ALIGNED SYMREF;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:121  
      644     7704    1   DCL         T_SPCLMM_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      645     7705    1   DCL         T_EXMM_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      646     7706    1   DCL         T_MAXMEM_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      647     7707    1   DCL         T_MSYS_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      648     7708    1   DCL         T_PROCACC_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      649     7709    1   DCL         T_JIT_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      650     7710    1   DCL         T_TND_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      651     7711    1   DCL         T_PM_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      652     7712    1   DCL         T_EXPM_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      653     7713    1   DCL         T_IOQ_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      654     7714    1   DCL         T_IOQW_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      655     7715    1   DCL         T_CFEP_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      656     7716    1   DCL         T_MFEP_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      657     7717    1   DCL         T_SYSLOG_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      658     7718    1   DCL         T_FMEFT_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      659     7719    1   DCL         T_FMBLK_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      660     7720    1   DCL         T_FMSEC_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      661     7721    1   DCL         T_FMREAD_KEY_WORD   UBIN WORD ALIGNED SYMREF;
      662     7722    1   DCL         T_FMDIAG_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      663     7723    1   DCL         T_GPP_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      664     7724    1   DCL         T_ASAVE_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      665     7725    1   DCL         T_SYSCON_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      666     7726    1   DCL         T_DISPJOB_KEY_WORD    UBIN WORD ALIGNED SYMREF;
      667     7727    1   DCL         T_NOCHGPMEM_KEY_WORD   UBIN WORD ALIGNED SYMREF;
      668     7728    1   DCL      T_PROMOTE_BLANK_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      669     7729    1   DCL      T_PROMOTE_LABEL_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      670     7730    1   DCL      T_PROMOTE_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      671     7731    1   DCL      T_REMOVE_ENTDEF_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      672     7732    1   DCL      T_REMOVE_SYMDEF_KEY_WORD         UBIN WORD ALIGNED SYMREF;
      673     7733    1   DCL      T_REPORT_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      674     7734    1   DCL      T_RF_KEY_WORD                    UBIN WORD ALIGNED SYMREF;
      675     7735    1   DCL      T_RUN_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      676     7736    1   DCL      T_SEVERITY_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      677     7737    1   DCL      T_SHARELIB_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      678     7738    1   DCL      T_SLIB_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      679     7739    1   DCL      T_SLOCK_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      680     7740    1   DCL      T_SRCH_KEY_WORD               UBIN WORD ALIGNED SYMREF;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:122  
      681     7741    1   DCL      T_START_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      682     7742    1   DCL      T_STATS_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      683     7743    1   DCL      T_LLMU_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      684     7744    1   DCL      T_LSAU_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      685     7745    1   DCL      T_SYSTEM_KEY_WORD             UBIN WORD ALIGNED SYMREF;
      686     7746    1   DCL      T_WARN_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      687     7747    1   DCL      T_NWARN_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      688     7748    1   DCL      T_NPLOVER_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      689     7749    1   DCL      T_SURCHARGE_KEY_WORD          UBIN WORD ALIGNED SYMREF;
      690     7750    1   DCL      T_TCB_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      691     7751    1   DCL      T_UDEF_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      692     7752    1   DCL      T_UNSAT_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      693     7753    1   DCL      T_VALUE_KEY_WORD              UBIN WORD ALIGNED SYMREF;
      694     7754    1   DCL      T_DPATCH_KEY_WORD             UBIN WORD ALIGNED SYMREF;
      695     7755    1   DCL      T_IPATCH_KEY_WORD             UBIN WORD ALIGNED SYMREF;
      696     7756    1   DCL      T_IXTNSIZE_KEY_WORD           UBIN WORD ALIGNED SYMREF;
      697     7757    1   DCL      T_XTNSIZE_KEY_WORD            UBIN WORD ALIGNED SYMREF;
      698     7758    1   DCL      T_VECTOR_KEY_WORD                UBIN WORD ALIGNED SYMREF;
      699     7759    1   DCL      T_VERSION_KEY_WORD               UBIN WORD ALIGNED SYMREF;
      700     7760    1   DCL      T_WLOCK_KEY_WORD                 UBIN WORD ALIGNED SYMREF;
      701     7761    1   DCL T_PSEUDO_KEY_WORD UBIN WORD ALIGNED SYMREF;
      702     7762        /*
      703     7763                  The following eight structures must be same as P$LIT macro
      704     7764        */
      705     7765    1   DCL 1 SIDCB_KEY_WORD ALIGNED CONSTANT,
      706     7766    1         2 * UBIN INIT(0),
      707     7767    1         2 COUNT UBIN BYTE UNAL INIT(10),
      708     7768    1         2 * UBIN BYTE UNAL INIT(0),
      709     7769    1         2 TEXT CHAR(10) INIT ('SIDCB/DCB1');
      710     7770    1   DCL 1 UIDCB_KEY_WORD ALIGNED CONSTANT,
      711     7771    1         2 * UBIN INIT(0),
      712     7772    1         2 COUNT UBIN BYTE UNAL INIT(10),
      713     7773    1         2 * UBIN BYTE UNAL INIT(0),
      714     7774    1         2 TEXT CHAR(10) INIT ('UIDCB/DCB2');
      715     7775    1   DCL 1 OUDCB_KEY_WORD ALIGNED CONSTANT,
      716     7776    1         2 * UBIN INIT(0),
      717     7777    1         2 COUNT UBIN BYTE UNAL INIT(10),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:123  
      718     7778    1         2 * UBIN BYTE UNAL INIT(0),
      719     7779    1         2 TEXT CHAR(10) INIT ('OUDCB/DCB3');
      720     7780    1   DCL 1 LODCB_KEY_WORD ALIGNED CONSTANT,
      721     7781    1         2 * UBIN INIT(0),
      722     7782    1         2 COUNT UBIN BYTE UNAL INIT(10),
      723     7783    1         2 * UBIN BYTE UNAL INIT(0),
      724     7784    1         2 TEXT CHAR(10) INIT ('LODCB/DCB4');
      725     7785    1   DCL 1 NODCB1_KEY_WORD ALIGNED CONSTANT,
      726     7786    1         2 * UBIN INIT(0),
      727     7787    1         2 COUNT UBIN BYTE UNAL INIT(12),
      728     7788    1         2 * UBIN BYTE UNAL INIT(0),
      729     7789    1         2 TEXT CHAR(12) INIT ('NDCB1/NSIDCB');
      730     7790    1   DCL 1 NODCB2_KEY_WORD ALIGNED CONSTANT,
      731     7791    1         2 * UBIN INIT(0),
      732     7792    1         2 COUNT UBIN BYTE UNAL INIT(12),
      733     7793    1         2 * UBIN BYTE UNAL INIT(0),
      734     7794    1         2 TEXT CHAR(12) INIT ('NDCB2/NUIDCB');
      735     7795    1   DCL 1 NODCB3_KEY_WORD ALIGNED CONSTANT,
      736     7796    1         2 * UBIN INIT(0),
      737     7797    1         2 COUNT UBIN BYTE UNAL INIT(12),
      738     7798    1         2 * UBIN BYTE UNAL INIT(0),
      739     7799    1         2 TEXT CHAR(12) INIT ('NDCB3/NOUDCB');
      740     7800    1   DCL 1 NODCB4_KEY_WORD ALIGNED CONSTANT,
      741     7801    1         2 * UBIN INIT(0),
      742     7802    1         2 COUNT UBIN BYTE UNAL INIT(12),
      743     7803    1         2 * UBIN BYTE UNAL INIT(0),
      744     7804    1         2 TEXT CHAR(12) INIT ('NDCB4/NLODCB');
      745     7805    1   DCL B$JIT$      PTR       ALIGNED   SYMREF;
      746     7806        /* !R! */
      747     7807    1   DCL 1 VX_ON CONSTANT SYMDEF,
      748     7808    1         2 SIN_A(0:28) PTR ALIGNED INIT(
      749     7809    1           ADDR( T_SHAREABLE_KEY_WORD ),
      750     7810    1           ADDR( T_NSHAREABLE_KEY_WORD ),
      751     7811    1           ADDR( T_NOBREF_KEY_WORD ),
      752     7812    1           ADDR( T_NODEBUG_KEY_WORD ),
      753     7813    1           ADDR( T_NOSETS_KEY_WORD ),
      754     7814    1           ADDR( T_NOSHARELIB_KEY_WORD ),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:124  
      755     7815    1           ADDR( T_NOSYSLIB_KEY_WORD ),
      756     7816    1           ADDR( T_ALIB_KEY_WORD ),
      757     7817    1           ADDR( T_OSP_KEY_WORD ),
      758     7818    1           ADDR( T_RUN_KEY_WORD ),
      759     7819    1           ADDR( T_SYSTEM_KEY_WORD ),
      760     7820    1           ADDR( T_NOEDITING_KEY_WORD ),
      761     7821    1           ADDR( T_ASLIB_KEY_WORD ),
      762     7822    1           ADDR( T_SLIB_KEY_WORD ),
      763     7823    1           ADDR( T_PROMOTE_BLANK_KEY_WORD ),
      764     7824    1           ADDR( T_PROMOTE_LABEL_KEY_WORD ),
      765     7825    1           ADDR( T_PROMOTE_KEY_WORD ),
      766     7826    1           ADDR( T_DUPLICATE_KEY_WORD ),
      767     7827    1           ADDR( T_PROCACC_KEY_WORD ),
      768     7828    1           ADDR( T_NOCHGPMEM_KEY_WORD ),
      769     7829    1           ADDR( T_NOALTSHARELIB_KEY_WORD ),
      770     7830    1           ADDR( T_SURCHARGE_KEY_WORD ),
      771     7831    1           ADDR( T_NSTDINVOC_KEY_WORD ),
      772     7832    1           ADDR( T_STATS_KEY_WORD ),
      773     7833    1           ADDR( T_LLMU_KEY_WORD ),
      774     7834    1           ADDR( T_LSAU_KEY_WORD ),
      775     7835    1           ADDR( T_WARN_KEY_WORD ),
      776     7836    1           ADDR( T_NWARN_KEY_WORD ),
      777     7837    1           ADDR( T_NPLOVER_KEY_WORD ) ),
      778     7838    1         2 SIN REDEF SIN_A,
      779     7839    1           3 SHARED PTR ALIGNED,
      780     7840    1           3 NSHARED PTR ALIGNED,
      781     7841    1           3 NOBREF PTR ALIGNED,
      782     7842    1           3 NODEBUG PTR ALIGNED,
      783     7843    1           3 NOSETS PTR ALIGNED,
      784     7844    1           3 NOSHARELIB PTR ALIGNED,
      785     7845    1           3 NOSYSLIB PTR ALIGNED,
      786     7846    1           3 ALIB PTR ALIGNED,
      787     7847    1           3 OSP PTR ALIGNED,
      788     7848    1           3 RUN PTR ALIGNED,
      789     7849    1           3 SYSTEM PTR ALIGNED,
      790     7850    1           3 NOEDITING PTR ALIGNED,
      791     7851    1           3 ASLIB PTR ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:125  
      792     7852    1           3 SLIB PTR ALIGNED,
      793     7853    1           3 PROMOTE_BLANK PTR ALIGNED,
      794     7854    1           3 PROMOTE_LABEL PTR ALIGNED,
      795     7855    1           3 PROMOTE PTR ALIGNED,
      796     7856    1           3 DUPLICATE PTR ALIGNED,
      797     7857    1           3 PROCACC PTR ALIGNED,
      798     7858    1           3 NOCHGPMEM PTR ALIGNED,
      799     7859    1           3 NOALTSHARELIB PTR ALIGNED,
      800     7860    1           3 SURCHARGE PTR ALIGNED,
      801     7861    1           3 NSTDINVOC PTR ALIGNED,
      802     7862    1           3 STATS PTR ALIGNED,
      803     7863    1           3 LLMU  PTR ALIGNED,
      804     7864    1           3 LSAU  PTR ALIGNED,
      805     7865    1           3 WARN  PTR ALIGNED,
      806     7866    1           3 NWARN PTR ALIGNED,
      807     7867    1           3 NPLOVER PTR ALIGNED,
      808     7868    1         2 NUM_A(0:12) PTR ALIGNED INIT(
      809     7869    1           ADDR( T_BREF_KEY_WORD ),
      810     7870    1           ADDR( T_DCBSLOTS_KEY_WORD ),
      811     7871    1           ADDR( T_DBIAS_KEY_WORD ),
      812     7872    1           ADDR( T_PBIAS_KEY_WORD ),
      813     7873    1           ADDR( T_SEVERITY_KEY_WORD ),
      814     7874    1           ADDR( T_START_KEY_WORD ),
      815     7875    1           ADDR( T_TCB_KEY_WORD ),
      816     7876    1           ADDR( T_REPORT_KEY_WORD ),
      817     7877    1           ADDR( T_DPATCH_KEY_WORD ),
      818     7878    1           ADDR( T_IPATCH_KEY_WORD ),
      819     7879    1           ADDR( T_IXTNSIZE_KEY_WORD ),
      820     7880    1           ADDR( T_XTNSIZE_KEY_WORD ),
      821     7881    1           ADDR( NIL ) ),
      822     7882    1         2 NUM REDEF NUM_A,
      823     7883    1           3 BREF PTR ALIGNED,
      824     7884    1           3 DCBSLOTS PTR ALIGNED,
      825     7885    1           3 DBIAS PTR ALIGNED,
      826     7886    1           3 PBIAS PTR ALIGNED,
      827     7887    1           3 SEVERITY PTR ALIGNED,
      828     7888    1           3 START PTR ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:126  
      829     7889    1           3 TCB PTR ALIGNED,
      830     7890    1           3 REPORT PTR ALIGNED,
      831     7891    1           3 * PTR ALIGNED,
      832     7892    1           3 * PTR ALIGNED,
      833     7893    1           3 * PTR ALIGNED,
      834     7894    1           3 * PTR ALIGNED,
      835     7895    1           3 * PTR ALIGNED,
      836     7896    1         2 PRIV_A(0:35) PTR ALIGNED INIT(
      837     7897    1           ADDR( T_SPCLMM_KEY_WORD ),
      838     7898    1           ADDR( T_EXMM_KEY_WORD ),
      839     7899    1           ADDR( T_MAXMEM_KEY_WORD ),
      840     7900    1           ADDR( T_MSYS_KEY_WORD ),
      841     7901    1           ADDR( T_JIT_KEY_WORD ),
      842     7902    1           ADDR( T_TND_KEY_WORD ),
      843     7903    1           ADDR( T_PM_KEY_WORD ),
      844     7904    1           ADDR( T_EXPM_KEY_WORD ),
      845     7905    1           ADDR( T_IOQ_KEY_WORD ),
      846     7906    1           ADDR( T_IOQW_KEY_WORD ),
      847     7907    1           ADDR( T_CFEP_KEY_WORD ),
      848     7908    1           ADDR( T_MFEP_KEY_WORD ),
      849     7909    1           ADDR( T_SYSLOG_KEY_WORD ),
      850     7910    1           ADDR( NIL ),
      851     7911    1           ADDR( T_FMEFT_KEY_WORD ),
      852     7912    1           ADDR( T_FMBLK_KEY_WORD ),
      853     7913    1           ADDR( T_FMSEC_KEY_WORD ),
      854     7914    1           ADDR( T_FMDIAG_KEY_WORD ),
      855     7915    1           ADDR( T_GPP_KEY_WORD ),
      856     7916    1           ADDR( T_ASAVE_KEY_WORD ),
      857     7917    1           ADDR( T_SYSCON_KEY_WORD ),
      858     7918    1           ADDR( NIL ),
      859     7919    1           ADDR( T_DISPJOB_KEY_WORD ),
      860     7920    1           ADDR( T_FMREAD_KEY_WORD ),
      861     7921    1           ADDR( NIL ),
      862     7922    1           ADDR( NIL ),
      863     7923    1           ADDR( NIL ),
      864     7924    1           ADDR( NIL ),
      865     7925    1           ADDR( NIL ),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:127  
      866     7926    1           ADDR( NIL ),
      867     7927    1           ADDR( NIL ),
      868     7928    1           ADDR( NIL ),
      869     7929    1           ADDR( NIL ),
      870     7930    1           ADDR( NIL ),
      871     7931    1           ADDR( NIL ),
      872     7932    1           ADDR( NIL ) ),
      873     7933    1         2 PRIV REDEF PRIV_A,
      874     7934    1           3 SPCLMM PTR ALIGNED,
      875     7935    1           3 EXMM PTR ALIGNED,
      876     7936    1           3 MAXMEM PTR ALIGNED,
      877     7937    1           3 MSYS PTR ALIGNED,
      878     7938    1           3 JIT PTR ALIGNED,
      879     7939    1           3 TND PTR ALIGNED,
      880     7940    1           3 PM PTR ALIGNED,
      881     7941    1           3 EXPM PTR ALIGNED,
      882     7942    1           3 IOQ PTR ALIGNED,
      883     7943    1           3 IOQW PTR ALIGNED,
      884     7944    1           3 CFEP PTR ALIGNED,
      885     7945    1           3 MFEP PTR ALIGNED,
      886     7946    1           3 SYSLOG PTR ALIGNED,
      887     7947    1           3 *  PTR ALIGNED,               /* Old ENQ privilege */
      888     7948    1           3 FMEFT PTR ALIGNED,
      889     7949    1           3 FMBLK PTR ALIGNED,
      890     7950    1           3 FMSEC PTR ALIGNED,
      891     7951    1           3 FMDIAG PTR ALIGNED,
      892     7952    1           3 GPP PTR ALIGNED,
      893     7953    1           3 ASAVE PTR ALIGNED,
      894     7954    1           3 SYSCON PTR ALIGNED,
      895     7955    1           3 *    PTR ALIGNED,
      896     7956    1           3 DISPJOB PTR ALIGNED,
      897     7957    1           3 FMREAD PTR ALIGNED,
      898     7958    1           3 * PTR ALIGNED,
      899     7959    1           3 * PTR ALIGNED,
      900     7960    1           3 * PTR ALIGNED,
      901     7961    1           3 * PTR ALIGNED,
      902     7962    1           3 * PTR ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:128  
      903     7963    1           3 * PTR ALIGNED,
      904     7964    1           3 * PTR ALIGNED,
      905     7965    1           3 * PTR ALIGNED,
      906     7966    1           3 * PTR ALIGNED,
      907     7967    1           3 * PTR ALIGNED,
      908     7968    1           3 * PTR ALIGNED,
      909     7969    1           3 * PTR ALIGNED,
      910     7970    1         2 MAP_A(0:3) PTR ALIGNED INIT(
      911     7971    1           ADDR( T_NAME_KEY_WORD ),
      912     7972    1           ADDR( T_VALUE_KEY_WORD ),
      913     7973    1           ADDR( T_UDEF_KEY_WORD ),
      914     7974    1           ADDR( T_LDEF_KEY_WORD ) ),
      915     7975    1         2 MAP REDEF MAP_A,
      916     7976    1           3 NAME PTR ALIGNED,
      917     7977    1           3 VALUE PTR ALIGNED,
      918     7978    1           3 UDEF PTR ALIGNED,
      919     7979    1           3 LDEF PTR ALIGNED,
      920     7980    1         2 FID_A$(0:5) PTR ALIGNED INIT(
      921     7981    1           ADDR( T_ALTSHARELIB_KEY_WORD ),
      922     7982    1           ADDR( T_SHARELIB_KEY_WORD ),
      923     7983    1           ADDR( T_UNSAT_KEY_WORD ),
      924     7984    1           ADDR( NIL ),
      925     7985    1           ADDR( NIL ),
      926     7986    1           ADDR( NIL ) ),
      927     7987    1         2 FID REDEF FID_A$,
      928     7988    1           3 ALTSHARELIB$ PTR ALIGNED,
      929     7989    1           3 SHARELIB$ PTR ALIGNED,
      930     7990    1           3 UNSAT$ PTR ALIGNED,
      931     7991    1           3 * PTR ALIGNED,
      932     7992    1           3 * PTR ALIGNED,
      933     7993    1           3 * PTR ALIGNED,
      934     7994    1         2 FIDN_A$(0:3) PTR ALIGNED INIT(
      935     7995    1           ADDR( T_UNSAT_KEY_WORD ),
      936     7996    1           ADDR( NIL ),
      937     7997    1           ADDR( NIL ),
      938     7998    1           ADDR( NIL ) ),
      939     7999    1         2 FIDN$ REDEF FIDN_A$,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:129  
      940     8000    1           3 UNSAT$ PTR ALIGNED,
      941     8001    1           3 * PTR ALIGNED,
      942     8002    1           3 * PTR ALIGNED,
      943     8003    1           3 * PTR ALIGNED,
      944     8004    1         2 ACCTN_A$(0:3) PTR ALIGNED INIT(
      945     8005    1           ADDR( T_LIBSRCH_KEY_WORD ),
      946     8006    1           ADDR( T_SRCH_KEY_WORD ),
      947     8007    1           ADDR( NIL ),
      948     8008    1           ADDR( NIL ) ),
      949     8009    1         2 ACCTN$ REDEF ACCTN_A$,
      950     8010    1           3 LIBSRCH$ PTR ALIGNED,
      951     8011    1           3 SRCH$ PTR ALIGNED,
      952     8012    1           3 * PTR ALIGNED,
      953     8013    1           3 * PTR ALIGNED,
      954     8014    1         2 INCLUDE_A$(0:0) PTR ALIGNED INIT(
      955     8015    1           ADDR( T_INCLUDE_KEY_WORD ) ),
      956     8016    1         2 INCL REDEF INCLUDE_A$,
      957     8017    1           3 INCLUDE$ PTR ALIGNED,
      958     8018    1         2 DCB_MATCH_A$(0:3) PTR ALIGNED INIT(
      959     8019    1           ADDR( SIDCB_KEY_WORD ),
      960     8020    1           ADDR( UIDCB_KEY_WORD ),
      961     8021    1           ADDR( OUDCB_KEY_WORD ),
      962     8022    1           ADDR( LODCB_KEY_WORD ) ),
      963     8023    1         2 DCB_MATCH REDEF DCB_MATCH_A$,
      964     8024    1           3 SI$ PTR ALIGNED,
      965     8025    1           3 UI$ PTR ALIGNED,
      966     8026    1           3 OU$ PTR ALIGNED,
      967     8027    1           3 LO$ PTR ALIGNED,
      968     8028    1         2 VECTOR_A$(0:6) PTR INIT(
      969     8029    1           ADDR(T_VECTOR_KEY_WORD),
      970     8030    1           ADDR(T_RF_KEY_WORD),
      971     8031    1           ADDR(T_ENTRIES_KEY_WORD),
      972     8032    1           ADDR(T_REMOVE_ENTDEF_KEY_WORD),
      973     8033    1           ADDR(T_REMOVE_SYMDEF_KEY_WORD),
      974     8034    1           ADDR(T_DATA_KEY_WORD),
      975     8035    1           ADDR(NIL) ),
      976     8036    1         2 VECTOR_ REDEF VECTOR_A$,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:130  
      977     8037    1           3 VECTOR$ PTR ALIGNED,
      978     8038    1           3 RF$ PTR ALIGNED,
      979     8039    1           3 ENTRIES$ PTR ALIGNED,
      980     8040    1           3 REMOVE_ENTDEF$ PTR ALIGNED,
      981     8041    1           3 REMOVE_SYMDEF$ PTR ALIGNED,
      982     8042    1           3 DATA PTR,
      983     8043    1           3 * PTR,
      984     8044    1         2 NODCB_A$(0:3) PTR INIT(
      985     8045    1             ADDR( NODCB1_KEY_WORD ),
      986     8046    1             ADDR( NODCB2_KEY_WORD ),
      987     8047    1             ADDR( NODCB3_KEY_WORD ),
      988     8048    1             ADDR( NODCB4_KEY_WORD ) ),
      989     8049    1         2 NODCB REDEF NODCB_A$,
      990     8050    1           3 NODCB1$ PTR,
      991     8051    1           3 NODCB2$ PTR,
      992     8052    1           3 NODCB3$ PTR,
      993     8053    1           3 NODCB4$ PTR,
      994     8054        /* ! ! */
      995     8055    1         2 SLOCK PTR INIT( ADDR( T_SLOCK_KEY_WORD ) ),
      996     8056    1         2 WLOCK PTR INIT( ADDR( T_WLOCK_KEY_WORD ) ),
      997     8057    1         2 VERSION PTR INIT(ADDR(T_VERSION_KEY_WORD)),
      998     8058    1         2 PSEUDO PTR INIT(ADDR(T_PSEUDO_KEY_WORD));
      999     8059        /* !R!
     1000     8060              2 SLOCK$ PTR,
     1001     8061              2 WLOCK$ PTR,
     1002     8062              2 VERSION$ PTR,
     1003     8063              2 PSEUDO$ PTR;
     1004     8064        */
     1005     8065        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:131  
     1006     8066        /*
     1007     8067              VARIABLES FOR ERRMSG
     1008     8068        */
     1009     8069    1   DCL 1 VX_ERR_CODE ALIGNED STATIC SYMDEF,
     1010     8070    1         2 FCG UBIN(12) UNAL INIT( BITBIN('2630'O) ),
     1011     8071    1         2 MID UBIN(6) UNAL INIT(BITBIN('05'O)),
     1012     8072    1         2 ERR# UBIN(15) UNAL INIT(0),
     1013     8073    1         2 SEV UBIN(3) UNAL INIT(0);
     1014     8074    1   DCL 1 VX_ERR_CODE_AUX ALIGNED STATIC SYMDEF,
     1015     8075    1         2 FCG UBIN(12) UNAL INIT( BITBIN('2630'O) ),
     1016     8076    1         2 MID UBIN(6) UNAL INIT(BITBIN('05'O)),
     1017     8077    1         2 ERR# UBIN(15) UNAL INIT(0),
     1018     8078    1         2 SEV UBIN(3) UNAL INIT(0);
     1019     8079    1   DCL 1 VX_EBUF ALIGNED STATIC SYMDEF,
     1020     8080    1         2 CHARS_A(0:132) CHAR(1) UNAL INIT(' '*0),
     1021     8081    1         2 CHARS REDEF CHARS_A CHAR(133) UNAL;
     1022     8082    1   DCL 1 VX_EFIELD1 ALIGNED STATIC SYMDEF,
     1023     8083    1         2 COUNT UBIN(9) UNAL INIT(0),
     1024     8084    1         2 CHARS CHAR(79) UNAL INIT(' '),
     1025     8085    1         2 CHARS_A(0:78) REDEF CHARS CHAR(1) UNAL;
     1026     8086    1   DCL 1 VX_EFIELD2 ALIGNED STATIC SYMDEF,
     1027     8087    1         2 COUNT UBIN(9) UNAL INIT(0),
     1028     8088    1         2 CHARS CHAR(79) UNAL INIT(' '),
     1029     8089    1         2 CHARS_A(0:78) REDEF CHARS CHAR(1) UNAL;
     1030     8090    1   DCL 1 VX_EFIELD3 ALIGNED STATIC SYMDEF,
     1031     8091    1         2 COUNT UBIN(9) UNAL INIT(0),
     1032     8092    1         2 CHARS CHAR(79) UNAL INIT(' '),
     1033     8093    1         2 CHARS_A(0:78) REDEF CHARS CHAR(1) UNAL;
     1034     8094        /*
     1035     8095              IMAGE FORMATION VARIABLES
     1036     8096        */
     1037     8097    1   DCL VX_IMAGE$ PTR ALIGNED STATIC SYMDEF INIT(ADDR(NIL));
              8097            /* PTR TO BUFFER VARIABLES */
     1038     8098    1   DCL VX_BADR(0:2/*@ROS*/) SBIN WORD ALIGNED STATIC SYMDEF INIT(0*0);
              8098            /* STARTING ADDRESSES FOR PROC, DATA, ROS */
     1039     8099    1   DCL VX_EADR(0:2/*@ROS*/) SBIN WORD ALIGNED STATIC SYMDEF INIT(0*0);
              8099            /* ENDING ADDRESSES FOR PROC, DATA, ROS */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:132  
     1040     8100    1   DCL VX_TARGET_COUNT  UBIN(36) ALIGNED    STATIC    SYMDEF    INIT(0);
     1041     8101    1   DCL VX_SOURCE_COUNT  UBIN(36) ALIGNED    STATIC    SYMDEF    INIT(0);
     1042     8102        /*
     1043     8103              IO VARIABLES/GLOBAL
     1044     8104        */
     1045     8105    1   DCL VX_IO_STATUS          SBIN WORD ALIGNED   STATIC    SYMDEF INIT(-1);
     1046     8106    1   DCL VX_IO_SIZEW           SBIN WORD ALIGNED   STATIC    SYMDEF INIT(0);
     1047     8107    1   DCL VX_IO_SIZEC           SBIN WORD ALIGNED   STATIC    SYMDEF INIT(0);
     1048     8108    1   DCL VX_IO_USEPREV         SBIN WORD ALIGNED   STATIC    SYMDEF INIT(0);
     1049     8109    1   DCL VX_IO_SAVEPREV        SBIN WORD ALIGNED   STATIC    SYMDEF INIT(0);
     1050     8110        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:133  
     1051     8111        /*
     1052     8112              HEADER DEFINITION
     1053     8113        */
     1054     8114    1   DCL 1 VX_HEADER STATIC SYMDEF,
     1055     8115    1         2 * CHAR(20) UNAL INIT('                    '),
     1056     8116    1         2 DAY_C CHAR( 5) UNAL INIT('     '),
     1057     8117    1         2 * CHAR( 2) UNAL INIT('  '),
     1058     8118    1         2 DATE_C CHAR(10) UNAL INIT('          '),
     1059     8119    1         2 * CHAR( 2) UNAL INIT('  '),
     1060     8120    1         2 TIME_C CHAR(11) UNAL INIT('           ');
     1061     8121        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:134  
     1062     8122        /*
     1063     8123              CONSTANTS/VARIABLES FOR KEYS
     1064     8124        */
     1065     8125    1   DCL VX_O_KEY_HEAD         CHAR(1)   UNAL CONSTANT SYMDEF
     1066     8126    1                   INIT( BITASC( '042'O ) );
     1067     8127    1   DCL VX_O_KEY_TREE         CHAR(6)   UNAL CONSTANT SYMDEF INIT('"TREE"');
     1068     8128    1   DCL VX_R_KEY_HEAD         CHAR(4)   UNAL CONSTANT SYMDEF INIT('HEAD');
     1069     8129    1   DCL VX_R_KEY_BIRTH        CHAR(5)   UNAL CONSTANT SYMDEF INIT('BIRTH');
     1070     8130    1   DCL VX_P_ENTDEF UBIN(36) STATIC SYMDEF INIT(0);
              8130            /* PRIMARY ENTDEF FOR DEBUG RECORDS */
     1071     8131        /**/
     1072     8132        /**/
     1073     8133        /**/
     1074     8134    1   DCL VX_KEY_USEPREV UBIN(36) STATIC SYMDEF INIT(0);
              8134            /* SWITCH TO INDICATE WHETHER TO USE PREVIOUS KEY OR NOT */
     1075     8135    1   DCL VX_KEY_NAME$          PTR            STATIC    SYMDEF    INIT(ADDR(NIL));
     1076     8136                                                /* PTR TO TEXTC NAME FOR LIB. EARCHES */
     1077     8137        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:135  
     1078     8138        /*
     1079     8139              LIBRARY VARIABLES
     1080     8140        */
     1081     8141    1   DCL VX_SLIB_HEAD$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1082     8142                                                /* HEAD POINTER FOR SHARED LIBRARIES */
     1083     8143    1   DCL VX_SLIB_INIT$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1084     8144                       /* POINTER TO SHARED LIBRARY FILE WHICH WILL INITIALIZE DATA */
     1085     8145    1   DCL VX_SLIB_MAX_DATA UBIN(36) ALIGNED STATIC SYMDEF INIT(0);
              8145            /* MAXIMUM DATA AREA ENCOUNTERED FOR SHARED LIBRARIES */
     1086     8146        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:136  
     1087     8147        /*
     1088     8148              SIZES
     1089     8149        */
     1090     8150    1   DCL VX_REC_BUF_START$     PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1091     8151    1   DCL VX_REC_BUF_SIZE UBIN(36) ALIGNED STATIC SYMDEF INIT(0);
              8151            /* MAX SIZE FOR RECEIVING BUFFER */
     1092     8152    1   DCL VX_BREF_START$        PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1093     8153    1   DCL VX_NEXT_BREF$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1094     8154    1   DCL VX_BREF_SIZE          UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1095     8155    1   DCL VX_BREF_ADR           UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1096     8156    1   DCL VX_BREF_INSTANCE      UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1097     8157    1   DCL VX_BREF_DEFINITION    UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1098     8158    1   DCL 1 VX_XSO$BREF ALIGNED CONSTANT SYMDEF,
     1099     8159    1         2 COUNT UBIN(18) UNAL INIT(30),
     1100     8160    1         2 CHARS CHAR(30) UNAL INIT(
     1101     8161    1           '6XSO$BREF$$$$$$$$$$$$$$$$$$$$$');
     1102     8162    1   DCL 1 VX_TSX0_OVERLAY ALIGNED STATIC SYMDEF,
     1103     8163    1         2 H ALIGNED,
     1104     8164    1           3 LEFT_HALF UBIN(18) UNAL INIT(0),
     1105     8165    1           3 RIGHT_HALF UBIN(18) UNAL INIT( BITBIN('700000'O) ),
     1106     8166    1         2 I REDEF H ALIGNED,
     1107     8167    1           3 WORD0 UBIN(36) UNAL;
     1108     8168        /**/
     1109     8169        /**/
     1110     8170    1   DCL VX_SLIB_AREA$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1111     8171    1   DCL VX_SLIB_AREA_SIZE     UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1112     8172    1   DCL VX_SC_X_NODE$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1113     8173    1   DCL   VX_DCB_USER_NEXT    UBIN(36)            STATIC   SYMDEF INIT(10
              8173            /*@DCB_NUM_START*/);
     1114     8174    1   DCL VX_DCB_HEAD$          PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1115     8175    1   DCL VX_DCB_TAIL$          PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1116     8176    1   DCL VX_DCB_START$         PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1117     8177    1   DCL VX_DCB_STOP$          PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1118     8178    1   DCL VX_MERGE_START$       PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1119     8179    1   DCL VX_MERGE_STOP$        PTR       ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL) );
     1120     8180    1   DCL VX_ROOT_DN_INC UBIN(36) ALIGNED STATIC SYMDEF INIT(0);
              8180            /* # OF WORDS IN DN LIST FOR DCB NAMES */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:137  
     1121     8181    1   DCL VX_SYS           CHAR(8)   CONSTANT    SYMDEF  INIT(':SYS');
     1122     8182        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:138  
     1123     8183        /*
     1124     8184              PRIMARY INDEX STRUCTURE ARRAYS FOR PASS 1
     1125     8185        */
     1126     8186    1   DCL VX_PASS1_REC_TYPE(0:9)     SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1127     8187    1              INIT(%TYPDNAM,%TYPRNAM,%TYPSECT,%TYPEDEF,%TYPEREF,%TYPSDEF,%TYPSEGDEF,%
              8187                       TYPSREF,%TYPSEGREF,-1);
     1128     8188        /*
     1129     8189              RECORD TYPES TO BE READ FROM RUN UNIT FILES ( SHARED LIBRARIES, ETC. )
     1130     8190        */
     1131     8191    1   DCL VX_PASS1_REC_TYPE_RUN(0:3) UBIN(36)  ALIGNED   CONSTANT    SYMDEF
     1132     8192    1              INIT(     %TYPDNAM,
     1133     8193    1                        %TYPEDEF,
     1134     8194    1                        %TYPSDEF,
     1135     8195    1                        %TYPSEGDEF );
     1136     8196    1   DCL VX_PASS1_ALL_TYPE(0:9)     SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1137     8197    1        INIT( -1,4/*@DN_DS_1*/,0/*@RN_DS_1*/,7/*@SC_DS_1*/,5/*@ED_DS_1*/,1/*@ER_DS_1*/
              8197                  ,6/*@DD_DS_1*/,-1/*@DR_DS_1*/,3/*@SD_DS_1*/,-1/*@SR_DS_1*/);
     1138     8198    1   DCL VX_PASS1_LIB_ALL_TYPE(0:9) SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1139     8199    1        INIT( -1,4/*@DN_DS_1*/,0/*@RN_DS_1*/,7/*@SC_DS_1*/,4/*@DN_DS_1*/,7/*@SC_DS_1*/
              8199                  ,0/*@RN_DS_1*/,0/*@RN_DS_1*/,3/*@SD_DS_1*/,-1/*@SR_DS_1*/);
     1140     8200    1   DCL VX_HEAD_INX(0:9)           SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1141     8201    1         INIT(-1, 0, 1, -1, 2, 3, 4, 5, 6, 7 );
     1142     8202    1   DCL VX_REC_SIZE_A(0:15)  SBIN(36)  ALIGNED   CONSTANT    SYMDEF
     1143     8203    1              INIT(     1/*@M_SN_ESZ*/,
     1144     8204    1                        1/*@M_DN_ESZ*/,
     1145     8205    1                        1/*@M_RN_ESZ*/,
     1146     8206    1                        3/*@M_SC_ESZ*/,
     1147     8207    1                        2/*@M_ED_ESZ*/,
     1148     8208    1                        1/*@M_ER_ESZ*/,
     1149     8209    1                        2/*@M_DD_ESZ*/,
     1150     8210    1                        1/*@M_DR_ESZ*/,
     1151     8211    1                        2/*@M_SD_ESZ*/,
     1152     8212    1                        1/*@M_SR_ESZ*/,
     1153     8213    1                        1/*@M_PR_ESZ*/,
     1154     8214    1                        4/*@M_LB_ESZ*/,
     1155     8215    1                        2/*@M_IE_ESZ*/,
     1156     8216    1                        3/*@M_ES_ESZ*/,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:139  
     1157     8217    1                        5/*@M_VR_ESZ*/,
     1158     8218    1                        1/*@M_PN_ESZ*/);
     1159     8219    1   DCL VX_DEF_REC_A(0:3) UBIN(36) ALIGNED CONSTANT SYMDEF INIT(%TYPDNAM,%TYPEDEF,%
              8219            TYPSDEF,%TYPSEGDEF); /* LIST OF DEF RECORDS */
     1160     8220    1   DCL VX_REF_REC_A(0:3) UBIN(36) ALIGNED CONSTANT SYMDEF INIT(%TYPRNAM,%TYPEREF,%
              8220            TYPSREF,%TYPSEGREF); /* LIST OF REF RECORDS */
     1161     8221    1   DCL VX_REF_MATCH_A(0:9) SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1162     8222    1              INIT(     -1,
     1163     8223    1                        -1,
     1164     8224    1                        -1,
     1165     8225    1                        -1,
     1166     8226    1                        %TYPEREF,
     1167     8227    1                        %TYPEDEF,
     1168     8228    1                        %TYPSREF,
     1169     8229    1                        %TYPSDEF,
     1170     8230    1                        %TYPSEGREF,
     1171     8231    1                        %TYPSEGDEF);       /* MATCH LIST REF <-> DEF */
     1172     8232    1   DCL VX_MATCH_NAME_A(0:9)     UBIN(36)  ALIGNED   CONSTANT    SYMDEF
     1173     8233    1              INIT(          9999,
     1174     8234    1                             9999,
     1175     8235    1                             9999,
     1176     8236    1                              %TYPDNAM,    /*SC*/
     1177     8237    1                              %TYPDNAM,    /*ED*/
     1178     8238    1                              %TYPRNAM,    /*ER*/
     1179     8239    1                              %TYPDNAM,    /*DD*/
     1180     8240    1                              %TYPRNAM,    /*DR*/
     1181     8241    1                              %TYPDNAM,    /*SD*/
     1182     8242    1                              %TYPRNAM);   /*SR*/
     1183     8243    1   DCL VX_NAME_DISP_A(0:9)      UBIN(36)  ALIGNED   CONSTANT    SYMDEF
     1184     8244    1              INIT(          9999,         /*SN*/
     1185     8245    1                             9999,         /*DN*/
     1186     8246    1                             9999,         /*RN*/
     1187     8247    1                                2,         /*SC*/
     1188     8248    1                                2,         /*ED*/
     1189     8249    1                                0,         /*ER*/
     1190     8250    1                                2,         /*DD*/
     1191     8251    1                                0,         /*DR*/
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:140  
     1192     8252    1                                2,         /*SD*/
     1193     8253    1                                0);        /*SR*/
     1194     8254    1   DCL VX_LAST_UTS           UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(BITBIN(
              8254            '777777777777'O));
     1195     8255        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:141  
     1196     8256    1   DCL VX_SC_PASS2$               PTR       ALIGNED   STATIC    SYMDEF   INIT(ADDR(NIL
              8256            ));
     1197     8257                                                /* PASS2 POINTER TO CURRENT ITEM IN LINK
     1198     8258                                           LIST OF START/COUNT ITEMS FOR SECTIONS */
     1199     8259    1   DCL VX_SC_BASE$                PTR       ALIGNED   STATIC    SYMDEF   INIT(ADDR(NIL
              8259            ));
     1200     8260    1   DCL VX_SECTNUM$(0:1023)        PTR       ALIGNED   STATIC    SYMDEF   INIT(ADDR(NIL
              8260            )*0);
     1201     8261                            /* PASS2 BASE POINTER TO SECTIONS FOR CURRENT OBJECT UNIT */
     1202     8262        /**/
     1203     8263        /**/
     1204     8264        /**/
     1205     8265    1   DCL VX_PASS2_ALL_TYPE(0:9)     SBIN WORD ALIGNED   CONSTANT    SYMDEF
     1206     8266    1        INIT( -1,4/*@DN_DS_2*/,4/*@RN_DS_2*/,7/*@SC_DS_2*/,7/*@ED_DS_2*/,8/*@ER_DS_2*/
              8266                  ,7/*@DD_DS_2*/,8/*@DR_DS_2*/,-1/*@SD_DS_2*/,7/*@SR_DS_2*/);
     1207     8267        /*
     1208     8268              VARIABLES FOR DEFINITION TYPE RECORDS FROM OBJECT FILES FOR PASS 2
     1209     8269        */
     1210     8270        /**/
     1211     8271        /**/
     1212     8272        /**/
     1213     8273        /*
     1214     8274              VARIABLES FOR REFERENCE TYPE RECORDS FROM OBJECT FILES FOR PASS 2
     1215     8275        */
     1216     8276    1   DCL 1 VX_PASS2_REF ALIGNED STATIC SYMDEF,
     1217     8277    1         2 OU ALIGNED,
     1218     8278    1           3 MAX ALIGNED,
     1219     8279    1             4 RN UBIN(36) ALIGNED INIT(0),
     1220     8280    1             4 ER UBIN(36) ALIGNED INIT(0),
     1221     8281    1             4 DR UBIN(36) ALIGNED INIT(0),
     1222     8282    1             4 SR UBIN(36) ALIGNED INIT(0),
     1223     8283    1           3 MAX_A(0:3) REDEF MAX UBIN(36) ALIGNED,
     1224     8284    1           3 L_START ALIGNED,
     1225     8285    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1226     8286    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1227     8287    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1228     8288    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:142  
     1229     8289    1           3 L_START_A$(0:3) REDEF L_START PTR ALIGNED,
     1230     8290    1           3 L_STOP ALIGNED,
     1231     8291    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1232     8292    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1233     8293    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1234     8294    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1235     8295    1           3 L_STOP_A$(0:3) REDEF L_STOP PTR ALIGNED,
     1236     8296    1           3 SIZE ALIGNED,
     1237     8297    1             4 RN UBIN(36) ALIGNED INIT(0),
     1238     8298    1             4 ER UBIN(36) ALIGNED INIT(0),
     1239     8299    1             4 DR UBIN(36) ALIGNED INIT(0),
     1240     8300    1             4 SR UBIN(36) ALIGNED INIT(0),
     1241     8301    1           3 SIZE_A(0:3) REDEF SIZE UBIN(36) ALIGNED,
     1242     8302    1         2 SAT ALIGNED,
     1243     8303    1           3 MAX ALIGNED,
     1244     8304    1             4 RN UBIN(36) ALIGNED INIT(0),
     1245     8305    1             4 ER UBIN(36) ALIGNED INIT(0),
     1246     8306    1             4 DR UBIN(36) ALIGNED INIT(0),
     1247     8307    1             4 SR UBIN(36) ALIGNED INIT(0),
     1248     8308    1           3 MAX_A(0:3) REDEF MAX UBIN(36) ALIGNED,
     1249     8309    1           3 L_START ALIGNED,
     1250     8310    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1251     8311    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1252     8312    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1253     8313    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1254     8314    1             4 SC$ PTR ALIGNED INIT(ADDR(NIL)),
     1255     8315    1           3 L_START_A$(0:4) REDEF L_START PTR ALIGNED,
     1256     8316    1           3 L_STOP ALIGNED,
     1257     8317    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1258     8318    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1259     8319    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1260     8320    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1261     8321    1             4 SC$ PTR ALIGNED INIT(ADDR(NIL)),
     1262     8322    1           3 L_STOP_A$(0:4) REDEF L_STOP PTR ALIGNED,
     1263     8323    1           3 COUNT ALIGNED,
     1264     8324    1             4 RN UBIN(36) ALIGNED INIT(0),
     1265     8325    1             4 ER UBIN(36) ALIGNED INIT(0),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:143  
     1266     8326    1             4 DR UBIN(36) ALIGNED INIT(0),
     1267     8327    1             4 SR UBIN(36) ALIGNED INIT(0),
     1268     8328    1             4 SC UBIN(36) ALIGNED INIT(0),
     1269     8329    1           3 COUNT_A(0:4) REDEF COUNT UBIN(36) ALIGNED,
     1270     8330    1           3 ENT_SIZE ALIGNED,
     1271     8331    1             4 RN UBIN(36) ALIGNED INIT(1/*@M_RN_ESZ*/),
     1272     8332    1             4 ER UBIN(36) ALIGNED INIT(SIZEW(VXR$SAT)),
     1273     8333    1             4 DR UBIN(36) ALIGNED INIT(SIZEW(VXR$SAT)),
     1274     8334    1             4 SR UBIN(36) ALIGNED INIT(SIZEW(VXR$SAT)),
     1275     8335    1             4 SC UBIN(36) ALIGNED INIT(SIZEW(VX$SC)),
     1276     8336    1           3 ENT_SIZE_A(0:4) REDEF ENT_SIZE UBIN(36) ALIGNED,
     1277     8337    1         2 UNSAT ALIGNED,
     1278     8338    1           3 MAX ALIGNED,
     1279     8339    1             4 RN UBIN(36) ALIGNED INIT(0),
     1280     8340    1             4 ER UBIN(36) ALIGNED INIT(0),
     1281     8341    1             4 DR UBIN(36) ALIGNED INIT(0),
     1282     8342    1             4 SR UBIN(36) ALIGNED INIT(0),
     1283     8343    1           3 MAX_A(0:3) REDEF MAX UBIN(36) ALIGNED,
     1284     8344    1           3 L_START ALIGNED,
     1285     8345    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1286     8346    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1287     8347    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1288     8348    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1289     8349    1           3 L_START_A$(0:3) REDEF L_START PTR ALIGNED,
     1290     8350    1           3 L_STOP ALIGNED,
     1291     8351    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1292     8352    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1293     8353    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1294     8354    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1295     8355    1           3 L_STOP_A$(0:3) REDEF L_STOP PTR ALIGNED,
     1296     8356    1           3 L_WHERE ALIGNED,
     1297     8357    1             4 RN$ PTR ALIGNED INIT(ADDR(NIL)),
     1298     8358    1             4 ER$ PTR ALIGNED INIT(ADDR(NIL)),
     1299     8359    1             4 DR$ PTR ALIGNED INIT(ADDR(NIL)),
     1300     8360    1             4 SR$ PTR ALIGNED INIT(ADDR(NIL)),
     1301     8361    1           3 L_WHERE_A$(0:3) REDEF L_WHERE PTR ALIGNED,
     1302     8362    1           3 SIZE ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:144  
     1303     8363    1             4 RN UBIN(36) ALIGNED INIT(0),
     1304     8364    1             4 ER UBIN(36) ALIGNED INIT(0),
     1305     8365    1             4 DR UBIN(36) ALIGNED INIT(0),
     1306     8366    1             4 SR UBIN(36) ALIGNED INIT(0),
     1307     8367    1           3 SIZE_A(0:3) REDEF SIZE UBIN(36) ALIGNED,
     1308     8368    1           3 PAGE# ALIGNED,
     1309     8369    1             4 RN UBIN(36) ALIGNED INIT(0),
     1310     8370    1             4 ER UBIN(36) ALIGNED INIT(0),
     1311     8371    1             4 DR UBIN(36) ALIGNED INIT(0),
     1312     8372    1             4 SR UBIN(36) ALIGNED INIT(0),
     1313     8373    1           3 PAGE#_A(0:3) REDEF PAGE# UBIN(36) ALIGNED,
     1314     8374    1           3 PREV_RN_SIZE UBIN(36) ALIGNED INIT(0);
     1315     8375        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:145  
     1316     8376        /*
     1317     8377              Definitions for preallocated/initialized data segments
     1318     8378        */
     1319     8379    1   DCL VX_SEG_NAME (0:5) CHAR(6) CONSTANT SYMDEF INIT(
     1320     8380    1            'DS3SID', 'DS4SID', 'DS5SID', 'DS6SID', 'DS7SID', 'DS8SID' );
     1321     8381
     1322     8382    1   DCL VX_SEG_PROC_TYPE(0:5)     UBIN    STATIC  SYMDEF  INIT( 0*0 );
     1323     8383    1   DCL VX_SEG_SIZE     (0:5)     SBIN    STATIC  SYMDEF  INIT( 0*0 );
     1324     8384    1   DCL VX_SEGID        (0:5)     UBIN    STATIC  SYMDEF  INIT(
     1325     8385    1            BITBIN(%DS3SID), BITBIN(%DS4SID), BITBIN(%DS5SID), BITBIN(%DS6SID), BITBIN
              8385                      (%DS7SID), BITBIN(%DS8SID) );
     1326     8386    1   DCL VX_MAX_SEG_SIZE           UBIN    STATIC  SYMDEF  INIT( 0 );
     1327     8387    1   DCL VX_SEG_EPAGE#    (0:5)    UBIN    STATIC  SYMDEF  INIT( 0*0 );
     1328     8388        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:146  
     1329     8389    1   DCL VX_HAVE_SPC UBIN(36) ALIGNED STATIC SYMDEF INIT(0);
              8389            /* COUNT OF SPECIAL SYMBOLS INSERTED BY LINK */
     1330     8390    1   DCL 1 VX_SPC ALIGNED STATIC SYMDEF,
     1331     8391    1         2 SEG ALIGNED,
     1332     8392    1           3 NAME ALIGNED,
     1333     8393    1             4 JIT$ PTR ALIGNED INIT(ADDR(VX_SPC.SEG.STRING.JIT)),
     1334     8394    1             4 IS$ PTR ALIGNED INIT(ADDR(VX_SPC.SEG.STRING.IS)),
     1335     8395    1             4 TCB$ PTR ALIGNED INIT(ADDR(VX_SPC.SEG.STRING.TCB)),
     1336     8396    1             4 ROS$ PTR ALIGNED INIT(ADDR(VX_SPC.SEG.STRING.ROS)),
     1337     8397    1             4 NUL$ PTR ALIGNED INIT(ADDR(VX_SPC.SEG.STRING.NUL)),
     1338     8398    1           3 NAME_A$(0:4) REDEF NAME PTR ALIGNED,
     1339     8399    1           3 VALUE ALIGNED,
     1340     8400    1             4 JIT UBIN(36) ALIGNED INIT(0),
     1341     8401    1             4 IS UBIN(36) ALIGNED INIT(0),
     1342     8402    1             4 TCB UBIN(36) ALIGNED INIT(0),
     1343     8403    1             4 ROS UBIN(36) ALIGNED INIT(0),
     1344     8404    1             4 NUL UBIN(36) ALIGNED INIT(0),
     1345     8405    1           3 VALUE_A(0:4) REDEF VALUE UBIN(36) ALIGNED,
     1346     8406    1           3 STRING ALIGNED,
     1347     8407    1             4 JIT ALIGNED,
     1348     8408    1               5 COUNT UBIN(18) UNAL INIT(6),
     1349     8409    1               5 CHARS CHAR(6) UNAL INIT('JITSID'),
     1350     8410    1             4 IS ALIGNED,
     1351     8411    1               5 COUNT UBIN(18) UNAL INIT(5),
     1352     8412    1               5 CHARS CHAR(5) UNAL INIT('ISSID'),
     1353     8413    1             4 TCB ALIGNED,
     1354     8414    1               5 COUNT UBIN(18) UNAL INIT(6),
     1355     8415    1               5 CHARS CHAR(6) UNAL INIT('TCBSID'),
     1356     8416    1             4 ROS ALIGNED,
     1357     8417    1               5 COUNT UBIN(18) UNAL INIT(5),
     1358     8418    1               5 CHARS CHAR(5) UNAL INIT('ROSID'),
     1359     8419    1             4 NUL ALIGNED,
     1360     8420    1               5 COUNT UBIN(18) UNAL INIT(7),
     1361     8421    1               5 CHARS CHAR(7) UNAL INIT('NULLSID'),
     1362     8422    1         2 B$ ALIGNED,
     1363     8423    1           3 NAME ALIGNED,
     1364     8424    1             4 JIT$ PTR ALIGNED INIT(ADDR(VX_SPC.B$.STRING.JIT)),
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:147  
     1365     8425    1             4 * PTR ALIGNED INIT(ADDR(NIL)),
     1366     8426    1             4 TCB$ PTR ALIGNED INIT(ADDR(VX_SPC.B$.STRING.TCB)),
     1367     8427    1             4 ROS$ PTR ALIGNED INIT(ADDR(VX_SPC.B$.STRING.ROS)),
     1368     8428    1             4 VERSION$ PTR ALIGNED INIT(ADDR(VX_SPC.B$.STRING.VERSION)),
     1369     8429    1           3 NAME_A$(0:4) REDEF NAME PTR ALIGNED,
     1370     8430    1           3 VALUE ALIGNED,
     1371     8431    1             4 JIT UBIN(36) ALIGNED INIT(0),
     1372     8432    1             4 DELTA UBIN(36) ALIGNED INIT(0),
     1373     8433    1             4 TCB UBIN(36) ALIGNED INIT(0),
     1374     8434    1             4 ROS UBIN(36) ALIGNED INIT(0),
     1375     8435    1             4 VERSION UBIN(36) ALIGNED INIT(0),
     1376     8436    1           3 VALUE_A(0:4) REDEF VALUE UBIN(36) ALIGNED,
     1377     8437    1           3 SKIP ALIGNED,
     1378     8438    1             4 JIT UBIN(36) ALIGNED INIT(0),
     1379     8439    1             4 DELTA UBIN(36) ALIGNED INIT(0),
     1380     8440    1             4 TCB UBIN(36) ALIGNED INIT(0),
     1381     8441    1             4 ROS UBIN(36) ALIGNED INIT(0),
     1382     8442    1             4 VERSION UBIN(36) ALIGNED INIT(0),
     1383     8443    1           3 SKIP_A(0:4) REDEF SKIP UBIN(36) ALIGNED,
     1384     8444    1           3 MINE ALIGNED,
     1385     8445    1             4 JIT UBIN(36) ALIGNED INIT(0),
     1386     8446    1             4 DELTA UBIN(36) ALIGNED INIT(0),
     1387     8447    1             4 TCB UBIN(36) ALIGNED INIT(0),
     1388     8448    1             4 ROS UBIN(36) ALIGNED INIT(0),
     1389     8449    1             4 VERSION UBIN(36) ALIGNED INIT(0),
     1390     8450    1           3 MINE_A(0:4) REDEF MINE UBIN(36) ALIGNED,
     1391     8451    1           3 STRING ALIGNED,
     1392     8452    1             4 JIT ALIGNED ,
     1393     8453    1               5 COUNT UBIN(18) UNAL INIT(6),
     1394     8454    1               5 CHARS CHAR(6) UNAL INIT('B$JIT$'),
     1395     8455    1             4 TCB ALIGNED ,
     1396     8456    1               5 COUNT UBIN(18) UNAL INIT(6),
     1397     8457    1               5 CHARS CHAR(6) UNAL INIT('B$TCB$'),
     1398     8458    1             4 ROS ALIGNED ,
     1399     8459    1               5 COUNT UBIN(18) UNAL INIT(6),
     1400     8460    1               5 CHARS CHAR(6) UNAL INIT('B$ROS$'),
     1401     8461    1             4 VERSION ALIGNED,
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:148  
     1402     8462    1               5 COUNT UBIN(18) UNAL INIT(9),
     1403     8463    1               5 CHARS CHAR(9)  UNAL INIT('B_VERSION'),
     1404     8464    1         2 FAULT SBIN WORD ALIGNED INIT(-1),
     1405     8465    1         2 DELTA_DATA_ADR UBIN(36) ALIGNED INIT(0),
     1406     8466    1         2 TCBSIZE SBIN WORD ALIGNED INIT(-1);
     1407     8467        /**/
     1408     8468        /**/
     1409     8469        /**/
     1410     8470    1   DCL VX_DCB_OPTION_TEXT(0:3) CHAR(10) ALIGNED CONSTANT SYMDEF INIT(
     1411     8471    1              'SIDCB/DCB1',
     1412     8472    1              'UIDCB/DCB2',
     1413     8473    1              'OUDCB/DCB3',
     1414     8474    1              'LODCB/DCB4'  );
     1415     8475    1   DCL VX_ECHO            BIT( 1) ALIGNED    STATIC SYMDEF INIT('0'B/*@FALSE_B*/);
     1416     8476    1   DCL VX_DO_ECHO         BIT( 1) ALIGNED    STATIC SYMDEF INIT('0'B/*@FALSE_B*/);
     1417     8477    1   DCL 1 VX_EI_KEY_BUF ALIGNED STATIC SYMDEF,
     1418     8478    1         2 COUNT UBIN(9) UNAL,
     1419     8479    1         2 KEY CHAR(255),
     1420     8480    1         2 EDIT REDEF KEY,
     1421     8481    1           3 NUM UBIN(27) UNAL,
     1422     8482    1           3 * CHAR(252);
     1423     8483    1   DCL 1 VX_LAST_LINE ALIGNED STATIC SYMDEF,
     1424     8484    1         2 SIZE UBIN,
     1425     8485    1         2 OFFSET UBIN,
     1426     8486    1         2 TEXT CHAR(266);
     1427     8487        %EJECT;
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:149  
     1428     8488    1   DCL VX_SPC_DATA_INSERT    BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('1'B
              8488            /*@TRUE_B*/);
     1429     8489    1   DCL VX_ROS_ALLOWED    BIT(1)    ALIGNED   STATIC    SYMDEF   INIT('1'B/*@TRUE_B*/);
     1430     8490    1   DCL VX_SHARED_LIB_ASS     UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1431     8491        /*
     1432     8492                   PATCH SPACE
     1433     8493        */
     1434     8494    1   DCL VX_IMAGE_BUFFER_SIZE  SBIN(36)  ALIGNED   CONSTANT    SYMDEF  INIT( 1024 );
     1435     8495    1   DCL VX_RN_THRESHOLD  UBIN(36)       ALIGNED   CONSTANT    SYMDEF  INIT(30720);
     1436     8496    1   DCL VX_LIBSRCH$ PTR ALIGNED STATIC SYMDEF;
              8496            /* Pointer used to search accounts specified by LIBSRCH option */
     1437     8497    1   DCL VX_REF_EXPONENTIAL_SWITCH  BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('0'B
              8497            /*@FALSE_B*/);
     1438     8498    1   DCL VX_UNSAT_BUFFER_EXPAND_SWITCH   BIT(1)    ALIGNED   STATIC    SYMDEF    INIT(
              8498            '0'B/*@FALSE_B*/);
     1439     8499    1   DCL VX_PATCH(0:99)        CHAR(4)   ALIGNED   STATIC    SYMDEF    INIT(
     1440     8500    1         'PATC'*0);
     1441     8501    1   DCL VX_BLK_COM_COUNT      UBIN(36)  ALIGNED   STATIC    SYMDEF    INIT(0);
     1442     8502                                                /* COUNT OF # OF NODES WHERE
     1443     8503                                                   UNIQUE INSTANCES OF BLANK
     1444     8504                                                   COMMON MAY BE ALLOCATED */
     1445     8505    1   DCL VX_SC_BLANK_COM_PROMOTE$   PTR  ALIGNED   STATIC    SYMDEF    INIT(ADDR(NIL));
     1446     8506                                                /* POINTER TO THE HIGHEST NODE
     1447     8507                                                   IN WHICH BLANK COMMON MAY
     1448     8508                                                   BE ALLOCATED; USED FOR
     1449     8509                                                   PROMOTION OF BLANK COMMON */
     1450     8510    1   DCL VX_CHK_BLANK_COM_PROMOTE   BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('0'B);
     1451     8511                                                /* BIT WHICH INDICATES WHETHER
     1452     8512                                                BLANK COMMON WILL BE PROMOTED OR NOT */
     1453     8513    1   DCL 1 VX_SC_BLANK_COMMON               ALIGNED STATIC SYMDEF,
     1454     8514    1         2 TYPE              UBIN(9)   UNAL      INIT(0),
     1455     8515    1         2 EMPTY             BIT (1)   UNAL      INIT('0'B),
     1456     8516    1         2 ATTR                        UNAL,
     1457     8517    1           3 INT              UBIN(2)   UNAL      INIT(0),
     1458     8518    1           3 ALL              BIT(1)    UNAL      INIT('0'B),
     1459     8519    1           3 MAK_DEF BIT(1) UNAL INIT('0'B), /* MAKE DEFINITION FOR DCBS */
     1460     8520    1           3 PRE_DCB BIT(1) UNAL INIT('0'B), /* '1'B => TRUE; '0'B => FALSE */
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:150  
     1461     8521    1           3 MES_INIT         BIT (1)   UNAL      INIT('0'B),
     1462     8522    1           3 ALIGN            UBIN(2)   UNAL      INIT(0),
     1463     8523    1         2 ADDRESS           UBIN(18)  UNAL      INIT(0),
     1464     8524    1         2 NAME_DISP         SBIN HALF UNAL      INIT(-1),
     1465     8525    1         2 SIZE              UBIN(18)  UNAL      INIT(0),
     1466     8526    1         2 NODE#             UBIN(18)  UNAL      INIT(0),
     1467     8527    1         2 COM_LINK          UBIN(18)  UNAL      INIT(0);
     1468     8528    1   DCL VX_LIBRARY_PROBE      BIT(1)    ALIGNED   STATIC    SYMDEF    INIT('0'B
              8528            /*@FALSE_B*/);
     1469     8529        /*
     1470     8530               MISCELLANEOUS VARIABLES
     1471     8531        */
     1472     8532    1   DCL VX_STATE# UBIN(36) ALIGNED STATIC SYMDEF INIT (0);
     1473     8533    1   END  VX_DATA_D;

PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:151  
--  Include file information  --

   B$OBJECT_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   VX_MACRO_C.:E05TOU  is referenced.
   VX_PERR_C.:E05TOU  is referenced.
   VX_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VX_DATA_D.
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:152  

 **** Variables and constants ****

  ****  Section 000  Data  VX_DATA_D

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  3166-0-0/w STRC(1908)  r     1 VX_SPC

  ****  Section 001 RoData VX_DATA_D

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    56-0-0/w STRC(144)   r     1 LODCB_KEY_WORD             6-0-0/w STRC(54)    r     1 LODCB_NAME
    62-0-0/w STRC(162)   r     1 NODCB1_KEY_WORD           67-0-0/w STRC(162)   r     1 NODCB2_KEY_WORD
    74-0-0/w STRC(162)   r     1 NODCB3_KEY_WORD          101-0-0/w STRC(162)   r     1 NODCB4_KEY_WORD
    52-0-0/w STRC(144)   r     1 OUDCB_KEY_WORD             4-0-0/w STRC(54)    r     1 OUDCB_NAME
    42-0-0/w STRC(144)   r     1 SIDCB_KEY_WORD             0-0-0/w STRC(54)    r     1 SIDCB_NAME
    46-0-0/w STRC(144)   r     1 UIDCB_KEY_WORD             2-0-0/w STRC(54)    r     1 UIDCB_NAME

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w UBIN        r     1 T_ALIB_KEY_WORD
     0-0-0/w UBIN        r     1 T_ALTSHARELIB_KEY_WORD
     0-0-0/w UBIN        r     1 T_ASAVE_KEY_WORD           0-0-0/w UBIN        r     1 T_ASLIB_KEY_WORD
     0-0-0/w UBIN        r     1 T_BREF_KEY_WORD            0-0-0/w UBIN        r     1 T_CFEP_KEY_WORD
     0-0-0/w UBIN        r     1 T_DATA_KEY_WORD            0-0-0/w UBIN        r     1 T_DBIAS_KEY_WORD
     0-0-0/w UBIN        r     1 T_DCBSLOTS_KEY_WORD        0-0-0/w UBIN        r     1 T_DISPJOB_KEY_WORD
     0-0-0/w UBIN        r     1 T_DPATCH_KEY_WORD          0-0-0/w UBIN        r     1 T_DUPLICATE_KEY_WORD
     0-0-0/w UBIN        r     1 T_ENTRIES_KEY_WORD         0-0-0/w UBIN        r     1 T_EXMM_KEY_WORD
     0-0-0/w UBIN        r     1 T_EXPM_KEY_WORD            0-0-0/w UBIN        r     1 T_FMBLK_KEY_WORD
     0-0-0/w UBIN        r     1 T_FMDIAG_KEY_WORD          0-0-0/w UBIN        r     1 T_FMEFT_KEY_WORD
     0-0-0/w UBIN        r     1 T_FMREAD_KEY_WORD          0-0-0/w UBIN        r     1 T_FMSEC_KEY_WORD
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:153  
     0-0-0/w UBIN        r     1 T_GPP_KEY_WORD             0-0-0/w UBIN        r     1 T_INCLUDE_KEY_WORD
     0-0-0/w UBIN        r     1 T_IOQW_KEY_WORD            0-0-0/w UBIN        r     1 T_IOQ_KEY_WORD
     0-0-0/w UBIN        r     1 T_IPATCH_KEY_WORD          0-0-0/w UBIN        r     1 T_IXTNSIZE_KEY_WORD
     0-0-0/w UBIN        r     1 T_JIT_KEY_WORD             0-0-0/w UBIN        r     1 T_LDEF_KEY_WORD
     0-0-0/w UBIN        r     1 T_LIBSRCH_KEY_WORD         0-0-0/w UBIN        r     1 T_LLMU_KEY_WORD
     0-0-0/w UBIN        r     1 T_LSAU_KEY_WORD            0-0-0/w UBIN        r     1 T_MAXMEM_KEY_WORD
     0-0-0/w UBIN        r     1 T_MFEP_KEY_WORD            0-0-0/w UBIN        r     1 T_MSYS_KEY_WORD
     0-0-0/w UBIN        r     1 T_NAME_KEY_WORD
     0-0-0/w UBIN        r     1 T_NOALTSHARELIB_KEY_WORD
     0-0-0/w UBIN        r     1 T_NOBREF_KEY_WORD          0-0-0/w UBIN        r     1 T_NOCHGPMEM_KEY_WORD
     0-0-0/w UBIN        r     1 T_NODEBUG_KEY_WORD         0-0-0/w UBIN        r     1 T_NOEDITING_KEY_WORD
     0-0-0/w UBIN        r     1 T_NOSETS_KEY_WORD
     0-0-0/w UBIN        r     1 T_NOSHARELIB_KEY_WORD
     0-0-0/w UBIN        r     1 T_NOSYSLIB_KEY_WORD        0-0-0/w UBIN        r     1 T_NPLOVER_KEY_WORD
     0-0-0/w UBIN        r     1 T_NSHAREABLE_KEY_WORD
     0-0-0/w UBIN        r     1 T_NSTDINVOC_KEY_WORD       0-0-0/w UBIN        r     1 T_NWARN_KEY_WORD
     0-0-0/w UBIN        r     1 T_OSP_KEY_WORD             0-0-0/w UBIN        r     1 T_PBIAS_KEY_WORD
     0-0-0/w UBIN        r     1 T_PM_KEY_WORD              0-0-0/w UBIN        r     1 T_PROCACC_KEY_WORD
     0-0-0/w UBIN        r     1 T_PROMOTE_BLANK_KEY_WORD
     0-0-0/w UBIN        r     1 T_PROMOTE_KEY_WORD
     0-0-0/w UBIN        r     1 T_PROMOTE_LABEL_KEY_WORD
     0-0-0/w UBIN        r     1 T_PSEUDO_KEY_WORD
     0-0-0/w UBIN        r     1 T_REMOVE_ENTDEF_KEY_WORD
     0-0-0/w UBIN        r     1 T_REMOVE_SYMDEF_KEY_WORD
     0-0-0/w UBIN        r     1 T_REPORT_KEY_WORD          0-0-0/w UBIN        r     1 T_RF_KEY_WORD
     0-0-0/w UBIN        r     1 T_RUN_KEY_WORD             0-0-0/w UBIN        r     1 T_SEVERITY_KEY_WORD
     0-0-0/w UBIN        r     1 T_SHAREABLE_KEY_WORD       0-0-0/w UBIN        r     1 T_SHARELIB_KEY_WORD
     0-0-0/w UBIN        r     1 T_SLIB_KEY_WORD            0-0-0/w UBIN        r     1 T_SLOCK_KEY_WORD
     0-0-0/w UBIN        r     1 T_SPCLMM_KEY_WORD          0-0-0/w UBIN        r     1 T_SRCH_KEY_WORD
     0-0-0/w UBIN        r     1 T_START_KEY_WORD           0-0-0/w UBIN        r     1 T_STATS_KEY_WORD
     0-0-0/w UBIN        r     1 T_SURCHARGE_KEY_WORD       0-0-0/w UBIN        r     1 T_SYSCON_KEY_WORD
     0-0-0/w UBIN        r     1 T_SYSLOG_KEY_WORD          0-0-0/w UBIN        r     1 T_SYSTEM_KEY_WORD
     0-0-0/w UBIN        r     1 T_TCB_KEY_WORD             0-0-0/w UBIN        r     1 T_TND_KEY_WORD
     0-0-0/w UBIN        r     1 T_UDEF_KEY_WORD            0-0-0/w UBIN        r     1 T_UNSAT_KEY_WORD
     0-0-0/w UBIN        r     1 T_VALUE_KEY_WORD           0-0-0/w UBIN        r     1 T_VECTOR_KEY_WORD
     0-0-0/w UBIN        r     1 T_VERSION_KEY_WORD         0-0-0/w UBIN        r     1 T_WARN_KEY_WORD
     0-0-0/w UBIN        r     1 T_WLOCK_KEY_WORD           0-0-0/w UBIN        r     1 T_XTNSIZE_KEY_WORD
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:154  

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 VX$SC                      0-0-0/w STRC(72)    r     1 VXR$SAT


   No code generated for procedure VX_DATA_D .
   Procedure VX_DATA_D requires 4 words of local(AUTO) storage.

    No errors detected in file VX_DATA_D.:E05TSI    .
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:155  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:156  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      2041**DCL      2041--REDEF
B$JIT.ERR.MID
      1948**DCL      1948--REDEF
B$JIT.JRESPEAK
      2109**DCL      2110--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      2218**DCL      2218--REDEF    2219--REDEF
B$JIT.PNR
      2122**DCL      2122--REDEF
B$JIT.TSLINE
      2216**DCL      2217--REDEF
B$JIT$
      7805**DCL      1942--IMP-PTR
LODCB_KEY_WORD
      7780**DCL      8022--DCLINIT
LODCB_NAME
      7465**DCL      7413--DCLINIT
NODCB1_KEY_WORD
      7785**DCL      8045--DCLINIT
NODCB2_KEY_WORD
      7790**DCL      8046--DCLINIT
NODCB3_KEY_WORD
      7795**DCL      8047--DCLINIT
NODCB4_KEY_WORD
      7800**DCL      8048--DCLINIT
OUDCB_KEY_WORD
      7775**DCL      8021--DCLINIT
OUDCB_NAME
      7462**DCL      7412--DCLINIT
SIDCB_KEY_WORD
      7765**DCL      8019--DCLINIT
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:157  
SIDCB_NAME
      7456**DCL      7410--DCLINIT
T_ALIB_KEY_WORD
      7698**DCL      7816--DCLINIT
T_ALTSHARELIB_KEY_WORD
      7668**DCL      7981--DCLINIT
T_ASAVE_KEY_WORD
      7724**DCL      7916--DCLINIT
T_ASLIB_KEY_WORD
      7669**DCL      7821--DCLINIT
T_BREF_KEY_WORD
      7670**DCL      7869--DCLINIT
T_CFEP_KEY_WORD
      7715**DCL      7907--DCLINIT
T_DATA_KEY_WORD
      7671**DCL      8034--DCLINIT
T_DBIAS_KEY_WORD
      7672**DCL      7871--DCLINIT
T_DCBSLOTS_KEY_WORD
      7673**DCL      7870--DCLINIT
T_DISPJOB_KEY_WORD
      7726**DCL      7919--DCLINIT
T_DPATCH_KEY_WORD
      7754**DCL      7877--DCLINIT
T_DUPLICATE_KEY_WORD
      7674**DCL      7826--DCLINIT
T_ENTRIES_KEY_WORD
      7675**DCL      8031--DCLINIT
T_EXMM_KEY_WORD
      7705**DCL      7898--DCLINIT
T_EXPM_KEY_WORD
      7712**DCL      7904--DCLINIT
T_FMBLK_KEY_WORD
      7719**DCL      7912--DCLINIT
T_FMDIAG_KEY_WORD
      7722**DCL      7914--DCLINIT
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:158  
T_FMEFT_KEY_WORD
      7718**DCL      7911--DCLINIT
T_FMREAD_KEY_WORD
      7721**DCL      7920--DCLINIT
T_FMSEC_KEY_WORD
      7720**DCL      7913--DCLINIT
T_GPP_KEY_WORD
      7723**DCL      7915--DCLINIT
T_INCLUDE_KEY_WORD
      7677**DCL      8015--DCLINIT
T_IOQW_KEY_WORD
      7714**DCL      7906--DCLINIT
T_IOQ_KEY_WORD
      7713**DCL      7905--DCLINIT
T_IPATCH_KEY_WORD
      7755**DCL      7878--DCLINIT
T_IXTNSIZE_KEY_WORD
      7756**DCL      7879--DCLINIT
T_JIT_KEY_WORD
      7709**DCL      7901--DCLINIT
T_LDEF_KEY_WORD
      7678**DCL      7974--DCLINIT
T_LIBSRCH_KEY_WORD
      7679**DCL      8005--DCLINIT
T_LLMU_KEY_WORD
      7743**DCL      7833--DCLINIT
T_LSAU_KEY_WORD
      7744**DCL      7834--DCLINIT
T_MAXMEM_KEY_WORD
      7706**DCL      7899--DCLINIT
T_MFEP_KEY_WORD
      7716**DCL      7908--DCLINIT
T_MSYS_KEY_WORD
      7707**DCL      7900--DCLINIT
T_NAME_KEY_WORD
      7685**DCL      7971--DCLINIT
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:159  
T_NOALTSHARELIB_KEY_WORD
      7689**DCL      7829--DCLINIT
T_NOBREF_KEY_WORD
      7690**DCL      7811--DCLINIT
T_NOCHGPMEM_KEY_WORD
      7727**DCL      7828--DCLINIT
T_NODEBUG_KEY_WORD
      7691**DCL      7812--DCLINIT
T_NOEDITING_KEY_WORD
      7692**DCL      7820--DCLINIT
T_NOSETS_KEY_WORD
      7693**DCL      7813--DCLINIT
T_NOSHARELIB_KEY_WORD
      7694**DCL      7814--DCLINIT
T_NOSYSLIB_KEY_WORD
      7695**DCL      7815--DCLINIT
T_NPLOVER_KEY_WORD
      7748**DCL      7837--DCLINIT
T_NSHAREABLE_KEY_WORD
      7696**DCL      7810--DCLINIT
T_NSTDINVOC_KEY_WORD
      7697**DCL      7831--DCLINIT
T_NWARN_KEY_WORD
      7747**DCL      7836--DCLINIT
T_OSP_KEY_WORD
      7701**DCL      7817--DCLINIT
T_PBIAS_KEY_WORD
      7702**DCL      7872--DCLINIT
T_PM_KEY_WORD
      7711**DCL      7903--DCLINIT
T_PROCACC_KEY_WORD
      7708**DCL      7827--DCLINIT
T_PROMOTE_BLANK_KEY_WORD
      7728**DCL      7823--DCLINIT
T_PROMOTE_KEY_WORD
      7730**DCL      7825--DCLINIT
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:160  
T_PROMOTE_LABEL_KEY_WORD
      7729**DCL      7824--DCLINIT
T_PSEUDO_KEY_WORD
      7761**DCL      8058--DCLINIT
T_REMOVE_ENTDEF_KEY_WORD
      7731**DCL      8032--DCLINIT
T_REMOVE_SYMDEF_KEY_WORD
      7732**DCL      8033--DCLINIT
T_REPORT_KEY_WORD
      7733**DCL      7876--DCLINIT
T_RF_KEY_WORD
      7734**DCL      8030--DCLINIT
T_RUN_KEY_WORD
      7735**DCL      7818--DCLINIT
T_SEVERITY_KEY_WORD
      7736**DCL      7873--DCLINIT
T_SHAREABLE_KEY_WORD
      7676**DCL      7809--DCLINIT
T_SHARELIB_KEY_WORD
      7737**DCL      7982--DCLINIT
T_SLIB_KEY_WORD
      7738**DCL      7822--DCLINIT
T_SLOCK_KEY_WORD
      7739**DCL      8055--DCLINIT
T_SPCLMM_KEY_WORD
      7704**DCL      7897--DCLINIT
T_SRCH_KEY_WORD
      7740**DCL      8006--DCLINIT
T_START_KEY_WORD
      7741**DCL      7874--DCLINIT
T_STATS_KEY_WORD
      7742**DCL      7832--DCLINIT
T_SURCHARGE_KEY_WORD
      7749**DCL      7830--DCLINIT
T_SYSCON_KEY_WORD
      7725**DCL      7917--DCLINIT
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:161  
T_SYSLOG_KEY_WORD
      7717**DCL      7909--DCLINIT
T_SYSTEM_KEY_WORD
      7745**DCL      7819--DCLINIT
T_TCB_KEY_WORD
      7750**DCL      7875--DCLINIT
T_TND_KEY_WORD
      7710**DCL      7902--DCLINIT
T_UDEF_KEY_WORD
      7751**DCL      7973--DCLINIT
T_UNSAT_KEY_WORD
      7752**DCL      7983--DCLINIT  7995--DCLINIT
T_VALUE_KEY_WORD
      7753**DCL      7972--DCLINIT
T_VECTOR_KEY_WORD
      7758**DCL      8029--DCLINIT
T_VERSION_KEY_WORD
      7759**DCL      8057--DCLINIT
T_WARN_KEY_WORD
      7746**DCL      7835--DCLINIT
T_WLOCK_KEY_WORD
      7760**DCL      8056--DCLINIT
T_XTNSIZE_KEY_WORD
      7757**DCL      7880--DCLINIT
UIDCB_KEY_WORD
      7770**DCL      8020--DCLINIT
UIDCB_NAME
      7459**DCL      7411--DCLINIT
VX$LST.OBJECT_NAME$
      6643**DCL      6644--REDEF
VX$LST.SC_HEAD$
      6645**DCL      6646--REDEF
VX$LST.SC_TAIL$
      6647**DCL      6648--REDEF
VX$NODE.ADDR_START_A
      6512**DCL      6513--REDEF
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:162  
VX$NODE.ADDR_STOP_A
      6517**DCL      6518--REDEF
VX$NODE.L_PREV_SIZE
      6570**DCL      6581--REDEF
VX$NODE.L_SC_START
      6589**DCL      6594--REDEF
VX$NODE.L_SC_STOP
      6595**DCL      6600--REDEF
VX$NODE.L_SIZE
      6558**DCL      6569--REDEF
VX$NODE.L_START
      6534**DCL      6545--REDEF
VX$NODE.L_STOP
      6546**DCL      6557--REDEF
VX$NODE.PROMOTE_HEAD
      6601**DCL      6604--REDEF
VX$NODE.PROMOTE_TAIL
      6605**DCL      6608--REDEF
VX$NODE.START_PAGE#_A
      6522**DCL      6523--REDEF
VX$NODE.STOP_PAGE#_A
      6527**DCL      6528--REDEF
VX$SC
      6315**DCL      8335--DCLINIT
VX$SECT.MBZ
      6426**DCL      6428--REDEF    6432--REDEF
VX$TMPLT.A
      6460**DCL      6461--REDEF    6462--REDEF
VXR$SAT
      6283**DCL      8332--DCLINIT  8333--DCLINIT  8334--DCLINIT
VXR$SAT.VALUE
      6284**DCL      6285--REDEF
VXR$TMPLT.GOT
      6249**DCL      6251--REDEF
VX_BIAS.A
      7234**DCL      7235--REDEF
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:163  
VX_CBUF.CHARS_A
      7169**DCL      7170--REDEF
VX_EBUF.CHARS_A
      8080**DCL      8081--REDEF
VX_EFIELD1.CHARS
      8084**DCL      8085--REDEF
VX_EFIELD2.CHARS
      8088**DCL      8089--REDEF
VX_EFIELD3.CHARS
      8092**DCL      8093--REDEF
VX_EI_KEY_BUF.KEY
      8479**DCL      8480--REDEF
VX_ERRORS
      7211**DCL      7222--REDEF
VX_ERRORS.CONFLICT_A
      7217**DCL      7218--REDEF
VX_ERRORS.UNSAT_A
      7213**DCL      7214--REDEF
VX_O.ACCTN_A$
      7401**DCL      7402--REDEF
VX_O.DCB_MATCH_A$
      7410**DCL      7414--REDEF
VX_O.DCB_MATCH_HIT_A
      7419**DCL      7420--REDEF
VX_O.FIDN_A$
      7395**DCL      7396--REDEF
VX_O.FID_A$
      7387**DCL      7388--REDEF
VX_O.INCLUDE_A$
      7407**DCL      7408--REDEF
VX_O.MAP_A
      7381**DCL      7382--REDEF
VX_O.NODCB_A
      7441**DCL      7442--REDEF
VX_O.NUM_A
      7290**DCL      7293--REDEF
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:164  
VX_O.OPT_A
      7429**DCL      7430--REDEF
VX_O.PRIV_A
      7307**DCL      7344--REDEF
VX_O.SIN_A
      7259**DCL      7260--REDEF
VX_O.TCB_A
      7425**DCL      7426--REDEF
VX_OD.ACCTN_A$
      7632**DCL      7633--REDEF
VX_OD.DCB_MATCH_A$
      7641**DCL      7642--REDEF
VX_OD.FIDN_A$
      7626**DCL      7627--REDEF
VX_OD.FID_A$
      7618**DCL      7619--REDEF
VX_OD.INCLUDE_A$
      7638**DCL      7639--REDEF
VX_OD.MAP_A
      7612**DCL      7613--REDEF
VX_OD.NODCB_A
      7656**DCL      7657--REDEF
VX_OD.NUM_A
      7559**DCL      7560--REDEF
VX_OD.PRIV_A
      7574**DCL      7575--REDEF
VX_OD.SIN_A
      7528**DCL      7529--REDEF
VX_OD.VECTOR_A$
      7647**DCL      7648--REDEF
VX_OL.MAX_A
      7490**DCL      7504--REDEF
VX_OL.MIN_A
      7475**DCL      7476--REDEF
VX_ON.ACCTN_A$
      8004**DCL      8009--REDEF
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:165  
VX_ON.DCB_MATCH_A$
      8018**DCL      8023--REDEF
VX_ON.FIDN_A$
      7994**DCL      7999--REDEF
VX_ON.FID_A$
      7980**DCL      7987--REDEF
VX_ON.INCLUDE_A$
      8014**DCL      8016--REDEF
VX_ON.MAP_A
      7970**DCL      7975--REDEF
VX_ON.NODCB_A$
      8044**DCL      8049--REDEF
VX_ON.NUM_A
      7868**DCL      7882--REDEF
VX_ON.PRIV_A
      7896**DCL      7933--REDEF
VX_ON.SIN_A
      7808**DCL      7838--REDEF
VX_ON.VECTOR_A$
      8028**DCL      8036--REDEF
VX_OU_HEAD.REC_A
      7113**DCL      7116--REDEF
VX_PASS2_REF.OU.L_START
      8284**DCL      8289--REDEF
VX_PASS2_REF.OU.L_STOP
      8290**DCL      8295--REDEF
VX_PASS2_REF.OU.MAX
      8278**DCL      8283--REDEF
VX_PASS2_REF.OU.SIZE
      8296**DCL      8301--REDEF
VX_PASS2_REF.SAT.COUNT
      8323**DCL      8329--REDEF
VX_PASS2_REF.SAT.ENT_SIZE
      8330**DCL      8336--REDEF
VX_PASS2_REF.SAT.L_START
      8309**DCL      8315--REDEF
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:166  
VX_PASS2_REF.SAT.L_STOP
      8316**DCL      8322--REDEF
VX_PASS2_REF.SAT.MAX
      8303**DCL      8308--REDEF
VX_PASS2_REF.UNSAT.L_START
      8344**DCL      8349--REDEF
VX_PASS2_REF.UNSAT.L_STOP
      8350**DCL      8355--REDEF
VX_PASS2_REF.UNSAT.L_WHERE
      8356**DCL      8361--REDEF
VX_PASS2_REF.UNSAT.MAX
      8338**DCL      8343--REDEF
VX_PASS2_REF.UNSAT.PAGE#
      8368**DCL      8373--REDEF
VX_PASS2_REF.UNSAT.SIZE
      8362**DCL      8367--REDEF
VX_PHRASE.PHRASE
      7519**DCL      7521--REDEF
VX_PROGRAM_BIAS.A
      7227**DCL      7228--REDEF
VX_SPC.B$.MINE
      8444**DCL      8450--REDEF
VX_SPC.B$.NAME
      8423**DCL      8429--REDEF
VX_SPC.B$.SKIP
      8437**DCL      8443--REDEF
VX_SPC.B$.STRING.JIT
      8452**DCL      8424--DCLINIT
VX_SPC.B$.STRING.ROS
      8458**DCL      8427--DCLINIT
VX_SPC.B$.STRING.TCB
      8455**DCL      8426--DCLINIT
VX_SPC.B$.STRING.VERSION
      8461**DCL      8428--DCLINIT
VX_SPC.B$.VALUE
      8430**DCL      8436--REDEF
PL6.E3A0      #001=VX_DATA_D File=VX_DATA_D.:E05TSI                              WED 07/30/97 08:49 Page:167  
VX_SPC.SEG.NAME
      8392**DCL      8398--REDEF
VX_SPC.SEG.STRING.IS
      8410**DCL      8394--DCLINIT
VX_SPC.SEG.STRING.JIT
      8407**DCL      8393--DCLINIT
VX_SPC.SEG.STRING.NUL
      8419**DCL      8397--DCLINIT
VX_SPC.SEG.STRING.ROS
      8416**DCL      8396--DCLINIT
VX_SPC.SEG.STRING.TCB
      8413**DCL      8395--DCLINIT
VX_SPC.SEG.VALUE
      8399**DCL      8405--REDEF
VX_TSX0_OVERLAY.H
      8163**DCL      8166--REDEF
