
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:1    
        1        1        /*M* ZIC$IDS_OPEN           OPEN IDS SCHEMA FILE AND READY IT. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8              NAME: ZIC$OPEN
        9        9           PURPOSE: To provide a calling fortran program with the means
       10       10                    in which to open an IDS schema file. The schema name
       11       11                    is passed through IDS_SCHEMA_NAME which will be treated
       12       12                    as the default file name.
       13       13                 INPUTS
       14       14                     IDS_SCHEMA_NM = SCHEMA NAME
       15       15                  OUTPUTS
       16       16                     ERROR_CODE = ERROR
       17       17                     POSSIBLE ERROR CODES
       18       18                         ALL POSSIBLE IDS ERROR CODES
       19       19        **********************************************************/
       20       20        ZIC$OPEN: PROC(IDS_SCHEMA_NM,ERROR_CODE);
       21       21    1   DCL IDS_SCHEMA_NM CHAR(30); /* Name of schema being made ready.*/
       22       22    1   DCL ERROR_CODE SBIN; /* Returns status of open attempt. */
       23       23    1   DCL DB_FUNC_HIA ENTRY(1) ALTRET;
       24       24    1   DCL DB_FUNC_READY ENTRY ALTRET;
       25       25    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET;
       26       26    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET;
       27       27    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET;
       28       28    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
       29       29    1   DCL DB_FUNC_NBF ENTRY(1) ALTRET;
       30       30    1   DCL DB_FUNC_FIN ENTRY ALTRET;
       31       31    1   DCL ZIC$RVABDER ENTRY;
       32       32        /**/
       33       33         %INCLUDE ZI_RVA_C;
       34      714         %CAN_RVA_REF;
       35     1033        /* the above line used to be %canrva but now this is done in ziu$q2di */
       36     1034         %INCLUDE ZI_UWA_C;
       37     1724         %ZI$UWAB;
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:2    
       38     2064        /* the above used to be %zi_uwas but now this is done in ziu$q2di */
       39     2065         %INCLUDE CP_6;
       40     2146         %INCLUDE CP_6_SUBS;
       41     2686        /****************************************************************************/
       42     2687        /****************************************************************************/
       43     2688    1       CALL ZIC$RVABDER;
       44     2689    1       CALL DB_FUNC_HIA(IDS_SCHEMA_NM) ALTRET(ALT_ZIC$IDS_OPEN);
       45     2690    1       CALL DB_FUNC_NBF(30) ALTRET(ALT_ZIC$IDS_OPEN);
       46     2691    1       CALL DB_FUNC_READY ALTRET(ALT_ZIC$IDS_OPEN);
       47     2692    1       CALL DB_FUNC_FDR(CAN_RVA.SFREC.SEC,2) ALTRET(ALT_ZIC$IDS_OPEN);
       48     2693    1       CALL DB_FUNC_GET(CAN_RVA.SFREC.SEC) ALTRET(ALT_ZIC$IDS_OPEN);
       49     2694    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA) ALTRET(ALT_ZIC$IDS_OPEN);
       50     2695    1       CALL DB_FUNC_GET(CAN_RVA.OAREC.SEC) ALTRET(ALT_ZIC$IDS_OPEN);
       51     2696    1   FINDAD:
       52     2697    1       CALL DB_FUNC_FRS(CAN_RVA.ADREC.SEC,CAN_RVA.SFAD.SEC) ALTRET(ALT_ZIC$IDS_OPEN);
       53     2698    2       IF UWA.DB_STATUS='02100' THEN DO;
       54     2699    2           ERROR_CODE = 3001;
       55     2700    2           RETURN;
       56     2701    2           END;
       57     2702         /******************************************************/
       58     2703         /*     Move ad record to the user working storage area*/
       59     2704         /******************************************************/
       60     2705    1       CALL DB_FUNC_GET(CAN_RVA.ADREC.SEC) ALTRET(ALT_ZIC$IDS_OPEN);
       61     2706    1       IF UWA.AD_REC.ADFUNC < 2 THEN GOTO FINDAD;
       62     2707    1       ELSE
       63     2708    1           IF UWA.AD_REC.ADFUNC > 2 THEN GOTO ALT_ZIC$IDS_OPEN;
       64     2709    1       ERROR_CODE = 0;
       65     2710    1       RETURN;
       66     2711         /*******************************************************/
       67     2712         /*Find next record of sf-ad set ;   ad record */
       68     2713         /**********************************************************************/
       69     2714         /* This is a bad DB_STATUS   section ; write out the bad status */
       70     2715         /*  Report and go to finit to close up */
       71     2716         /*********************************************************************/
       72     2717    1   ALT_ZIC$IDS_OPEN:
       73     2718    1       CALL CHARBIN(ERROR_CODE,UWA.DB_STATUS);
       74     2719    1       RETURN;
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:3    
       75     2720    1   END ZIC$OPEN;
       76     2721        %EOD;

PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:4    
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIC$OPEN.

   Procedure ZIC$OPEN requires 60 words for executable code.
   Procedure ZIC$OPEN requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:5    

 Object Unit name= ZIC$OPEN                                   File name= ZIC$EDMS:IDS.:ZIC0TOU
 UTS= SEP 05 '97 11:36:24.60 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  ZIC$OPEN
    2   Proc  even  none    60     74  ZIC$OPEN
    3  RoData even  none    12     14  ZIC$OPEN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  ZIC$OPEN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 ZIC$RVABDER
 yes     yes           Std       1 DB_FUNC_NBF
 yes     yes           Std       1 DB_FUNC_GET
 yes     yes           Std       1 DB_FUNC_HIA
 yes     yes           Std       0 DB_FUNC_READY
 yes     yes           Std       2 DB_FUNC_FDR
 yes     yes           Std       2 DB_FUNC_FRS
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     CAN_RVA                               UWA                                   M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:7    


        1        1        /*M* ZIC$IDS_OPEN           OPEN IDS SCHEMA FILE AND READY IT. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8              NAME: ZIC$OPEN
        9        9           PURPOSE: To provide a calling fortran program with the means
       10       10                    in which to open an IDS schema file. The schema name
       11       11                    is passed through IDS_SCHEMA_NAME which will be treated
       12       12                    as the default file name.
       13       13                 INPUTS
       14       14                     IDS_SCHEMA_NM = SCHEMA NAME
       15       15                  OUTPUTS
       16       16                     ERROR_CODE = ERROR
       17       17                     POSSIBLE ERROR CODES
       18       18                         ALL POSSIBLE IDS ERROR CODES
       19       19        **********************************************************/
       20       20        ZIC$OPEN: PROC(IDS_SCHEMA_NM,ERROR_CODE);

     20  2 000000   000000 700200 xent  ZIC$OPEN     TSX0  ! X66_AUTO_2
         2 000001   000006 000002                    ZERO    6,2

       21       21    1   DCL IDS_SCHEMA_NM CHAR(30); /* Name of schema being made ready.*/
       22       22    1   DCL ERROR_CODE SBIN; /* Returns status of open attempt. */
       23       23    1   DCL DB_FUNC_HIA ENTRY(1) ALTRET;
       24       24    1   DCL DB_FUNC_READY ENTRY ALTRET;
       25       25    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET;
       26       26    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET;
       27       27    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET;
       28       28    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
       29       29    1   DCL DB_FUNC_NBF ENTRY(1) ALTRET;
       30       30    1   DCL DB_FUNC_FIN ENTRY ALTRET;
       31       31    1   DCL ZIC$RVABDER ENTRY;
       32       32        /**/
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:8    
       33       33         %INCLUDE ZI_RVA_C;
       34      714         %CAN_RVA_REF;
       35     1033        /* the above line used to be %canrva but now this is done in ziu$q2di */
       36     1034         %INCLUDE ZI_UWA_C;
       37     1724         %ZI$UWAB;
       38     2064        /* the above used to be %zi_uwas but now this is done in ziu$q2di */
       39     2065         %INCLUDE CP_6;
       40     2146         %INCLUDE CP_6_SUBS;
       41     2686        /****************************************************************************/
       42     2687        /****************************************************************************/
       43     2688    1       CALL ZIC$RVABDER;

   2688  2 000002   000000 631400 3                  EPPR1   0
         2 000003   000000 701000 xent               TSX1    ZIC$RVABDER
         2 000004   000000 011000                    NOP     0

       44     2689    1       CALL DB_FUNC_HIA(IDS_SCHEMA_NM) ALTRET(ALT_ZIC$IDS_OPEN);

   2689  2 000005   200003 630500                    EPPR0   @IDS_SCHEMA_NM,,AUTO
         2 000006   000001 631400 3                  EPPR1   1
         2 000007   000000 701000 xent               TSX1    DB_FUNC_HIA
         2 000010   000067 702000 2                  TSX2    ALT_ZIC$IDS_OPEN

       45     2690    1       CALL DB_FUNC_NBF(30) ALTRET(ALT_ZIC$IDS_OPEN);

   2690  2 000011   000003 630400 3                  EPPR0   3
         2 000012   000001 631400 3                  EPPR1   1
         2 000013   000000 701000 xent               TSX1    DB_FUNC_NBF
         2 000014   000067 702000 2                  TSX2    ALT_ZIC$IDS_OPEN

       46     2691    1       CALL DB_FUNC_READY ALTRET(ALT_ZIC$IDS_OPEN);

   2691  2 000015   000000 631400 3                  EPPR1   0
         2 000016   000000 701000 xent               TSX1    DB_FUNC_READY
         2 000017   000067 702000 2                  TSX2    ALT_ZIC$IDS_OPEN

       47     2692    1       CALL DB_FUNC_FDR(CAN_RVA.SFREC.SEC,2) ALTRET(ALT_ZIC$IDS_OPEN);
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:9    

   2692  2 000020   000006 630400 3                  EPPR0   6
         2 000021   000004 631400 3                  EPPR1   4
         2 000022   000000 701000 xent               TSX1    DB_FUNC_FDR
         2 000023   000067 702000 2                  TSX2    ALT_ZIC$IDS_OPEN

       48     2693    1       CALL DB_FUNC_GET(CAN_RVA.SFREC.SEC) ALTRET(ALT_ZIC$IDS_OPEN);

   2693  2 000024   000006 630400 3                  EPPR0   6
         2 000025   000001 631400 3                  EPPR1   1
         2 000026   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000027   000067 702000 2                  TSX2    ALT_ZIC$IDS_OPEN

       49     2694    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA) ALTRET(ALT_ZIC$IDS_OPEN);

   2694  2 000030   000010 630400 3                  EPPR0   8
         2 000031   000004 631400 3                  EPPR1   4
         2 000032   000000 701000 xent               TSX1    DB_FUNC_FDR
         2 000033   000067 702000 2                  TSX2    ALT_ZIC$IDS_OPEN

       50     2695    1       CALL DB_FUNC_GET(CAN_RVA.OAREC.SEC) ALTRET(ALT_ZIC$IDS_OPEN);

   2695  2 000034   000010 630400 3                  EPPR0   8
         2 000035   000001 631400 3                  EPPR1   1
         2 000036   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000037   000067 702000 2                  TSX2    ALT_ZIC$IDS_OPEN

       51     2696    1   FINDAD:
       52     2697    1       CALL DB_FUNC_FRS(CAN_RVA.ADREC.SEC,CAN_RVA.SFAD.SEC) ALTRET(ALT_ZIC$IDS_OPEN);

   2697  2 000040   000012 630400 3     FINDAD       EPPR0   10
         2 000041   000004 631400 3                  EPPR1   4
         2 000042   000000 701000 xent               TSX1    DB_FUNC_FRS
         2 000043   000067 702000 2                  TSX2    ALT_ZIC$IDS_OPEN

       53     2698    2       IF UWA.DB_STATUS='02100' THEN DO;

PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:10   
   2698  2 000044   040000 106400                    CMPC    fill='040'O
         2 000045   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         2 000046   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000047   000054 601000 2                  TNZ     s:2705

       54     2699    2           ERROR_CODE = 3001;

   2699  2 000050   005671 235007                    LDA     3001,DL
         2 000051   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         2 000052   000000 755100                    STA     0,,PR0

       55     2700    2           RETURN;

   2700  2 000053   000000 702200 xent               TSX2  ! X66_ARET

       56     2701    2           END;
       57     2702         /******************************************************/
       58     2703         /*     Move ad record to the user working storage area*/
       59     2704         /******************************************************/
       60     2705    1       CALL DB_FUNC_GET(CAN_RVA.ADREC.SEC) ALTRET(ALT_ZIC$IDS_OPEN);

   2705  2 000054   000012 630400 3                  EPPR0   10
         2 000055   000001 631400 3                  EPPR1   1
         2 000056   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000057   000067 702000 2                  TSX2    ALT_ZIC$IDS_OPEN

       61     2706    1       IF UWA.AD_REC.ADFUNC < 2 THEN GOTO FINDAD;

   2706  2 000060   000170 235000 xsym               LDA     UWA+120
         2 000061   000002 115007                    CMPA    2,DL
         2 000062   000040 604000 2                  TMI     FINDAD

       62     2707    1       ELSE
       63     2708    1           IF UWA.AD_REC.ADFUNC > 2 THEN GOTO ALT_ZIC$IDS_OPEN;

   2708  2 000063   000067 605400 2                  TPNZ    ALT_ZIC$IDS_OPEN

PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:11   
       64     2709    1       ERROR_CODE = 0;

   2709  2 000064   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         2 000065   000000 450100                    STZ     0,,PR0

       65     2710    1       RETURN;

   2710  2 000066   000000 702200 xent               TSX2  ! X66_ARET

       66     2711         /*******************************************************/
       67     2712         /*Find next record of sf-ad set ;   ad record */
       68     2713         /**********************************************************************/
       69     2714         /* This is a bad DB_STATUS   section ; write out the bad status */
       70     2715         /*  Report and go to finit to close up */
       71     2716         /*********************************************************************/
       72     2717    1   ALT_ZIC$IDS_OPEN:
       73     2718    1       CALL CHARBIN(ERROR_CODE,UWA.DB_STATUS);

   2718  2 000067   200004 470500       ALT_ZIC$IDS* LDP0    @ERROR_CODE,,AUTO
         2 000070   000100 305400                    DTB
         2 000071   000001 430005 xsym               NDSC9   UWA+1                    cn=2,s=nosgn,sf=0,n=5
         2 000072   000000 000004                    NDSC9   0,,PR0                   cn=0,s=lsgnf,sf=0,n=4

       74     2719    1       RETURN;

   2719  2 000073   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   060062 061060   060040 040040                                    02100

(unnamed)
 Sect OctLoc
   3     000   000000 000000   000001 000000   000000 000036   000002 006000    ................
   3     004   000002 000000   000000 000002   000052 406000   000005 006000    .........*......
   3     010   000062 406000   000063 006000   000061 406000   000035 406000    .2...3...1......
       75     2720    1   END ZIC$OPEN;
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:12   
       76     2721        %EOD;

PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:13   
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIC$OPEN.

   Procedure ZIC$OPEN requires 60 words for executable code.
   Procedure ZIC$OPEN requires 6 words of local(AUTO) storage.
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:15   
          MINI XREF LISTING

ALT_ZIC$IDS_OPEN
      2718**LABEL    2689--CALLALT  2690--CALLALT  2691--CALLALT  2692--CALLALT  2693--CALLALT  2694--CALLALT
      2695--CALLALT  2697--CALLALT  2705--CALLALT  2708--GOTO
CAN_RVA.ADREC.SEC
       864**DCL      2697<>CALL     2705<>CALL
CAN_RVA.OAREC.SEC
       867**DCL      2694<>CALL     2695<>CALL
CAN_RVA.SFAD.SEC
       804**DCL      2697<>CALL
CAN_RVA.SFREC.SEC
       843**DCL      2692<>CALL     2693<>CALL
DB_FUNC_FDR
        25**DCL-ENT  2692--CALL     2694--CALL
DB_FUNC_FRS
        26**DCL-ENT  2697--CALL
DB_FUNC_GET
        28**DCL-ENT  2693--CALL     2695--CALL     2705--CALL
DB_FUNC_HIA
        23**DCL-ENT  2689--CALL
DB_FUNC_NBF
        29**DCL-ENT  2690--CALL
DB_FUNC_READY
        24**DCL-ENT  2691--CALL
ERROR_CODE
        22**DCL        20--PROC     2699<<ASSIGN   2709<<ASSIGN   2718<<CALLBLT
FINDAD
      2697**LABEL    2706--GOTO
IDS_SCHEMA_NM
        21**DCL        20--PROC     2689<>CALL
UWA.AC_REC.CALC_NEXT
      1840**DCL      1841--REDEF
UWA.AC_REC.CALC_PRIOR
PL6.E3A0      #001=ZIC$OPEN File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:16   
      1849**DCL      1850--REDEF
UWA.AC_REC.DEFAULTS
      1798**DCL      1799--REDEF
UWA.AC_REC.FILE_CODE
      1803**DCL      1804--REDEF
UWA.AC_REC.FLAG1.ERROR_TYPE
      1800**DCL      1801--REDEF
UWA.AC_REC.PG_TYPE
      1815**DCL      1816--REDEF
UWA.AD_REC.ADDATE
      1780**DCL      1781--REDEF
UWA.AD_REC.ADFUNC
      1779**DCL      2706>>IF       2708>>IF
UWA.DB_STATUS
      1728**DCL      2698>>IF       2718>>CALLBLT
UWA.SF_REC.DBKOA
      1746**DCL      2694<>CALL
ZIC$RVABDER
        31**DCL-ENT  2688--CALL

PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:17   
       77        1        /*M* ZIC$ATTB  Extracts IDS schema AC record attributes.     */
       78        2        /*T***********************************************************/
       79        3        /*T*                                                         */
       80        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       81        5        /*T*                                                         */
       82        6        /*T***********************************************************/
       83        7        /*P*
       84        8              NAME: ZIC$IDS_ATTRIB
       85        9           PURPOSE:
       86       10                    To ensure a given area name is a member of the
       87       11                    opened schema and to return AC record attributes
       88       12                    of that area to the calling Fortran program. AC
       89       13                    record information is passed through the AC_REC
       90       14                    structure. The information returned is given in
       91       15                    detail below.
       92       16                   INPUTS
       93       17                    		IDS_AREA_NM =NAME OF AREA
       94       18                    OUTPUTS
       95       19                    		AC_REC = TABLE OF AREA DESCRIPTIONS
       96       20                    		ERROR_CODE = ERROR
       97       21                    		POSSIBLE ERROR CODES
       98       22                       0003 = AREA DOES NOT EXIST IN SCHEMA
       99       23                           ALL POSSIBLE IDS ERRORS
      100       24        ********************************************************/
      101       25        ZIC$ATTB: PROC(IDS_AREA_NM,AC_REC,ERROR_CODE);
      102       26
      103       27    1   DCL IDS_AREA_NM CHAR(30); /* Name of area as defined in schema */
      104       28    1   DCL 1 AC_REC ALIGNED,
      105       29    1         2 CALC_NULL SBIN,
      106       30    1         2 BASE_DBK SBIN,
      107       31    1         2 KEYS_ALLOC SBIN,
      108       32    1         2 MIN_DBK SBIN,
      109       33    1         2 MAX_DBK SBIN,
      110       34    1         2 MIN_PAGE SBIN,
      111       35    1         2 MAX_PAGE SBIN,
      112       36    1         2 FIRST_INV_PG SBIN,
      113       37    1         2 DBK_PER_PG SBIN,
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:18   
      114       38    1         2 DBK_PER_CALC SBIN;
      115       39         /*B* AC_REC.CALC_NULL        SBIN WORD
      116       40            DESC: Set to one if there are no calc headers in area.         */
      117       41         /*B* AC_REC.BASE_DBK         SBIN WORD
      118       42            DESC: Used as the area's base data base key.                   */
      119       43         /*B* AC_REC.KEYS_ALLOC       SBIN WORD
      120       44            DESC: Total number of data base keys allocated to area.        */
      121       45         /*B* AC_REC.MIN_DBK          SBIN WORD
      122       46           DESC: The first global data base key in the area.               */
      123       47         /*B* AC_REC.MAX_DBK          SBIN WORD
      124       48            DESC: The last global data base key in the area.               */
      125       49         /*B* AC_REC.MIN_PAGE         SBIN WORD
      126       50            DESC: The first page number in the area.                       */
      127       51         /*B* AC_REC.MAX_PAGE         SBIN WORD
      128       52            DESC: The last page number in the area.                        */
      129       53         /*B* AC_REC.FIRST_INV_PG     SBIN WORD
      130       54            DESC: The number of the first inventory page.                   */
      131       55         /*B* AC_REC.DBK_PER_PG       SBIN WORD
      132       56            DESC: The number of data base keys per page.                   */
      133       57         /*B* AC_REC.DBK_PER_CALC     SBIN WORD
      134       58            DESC: The number of data records to each calc header record.   */
      135       59
      136       60    1   DCL ERROR_CODE SBIN; /* Returns results of program operation */
      137       61
      138       62    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET;
      139       63    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET;
      140       64    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET;
      141       65    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
      142       66         /**/
      143       67         %INCLUDE ZI_UWA_C;
      144      757         %ZI$UWAB;
      145     1097         %INCLUDE ZI_RVA_C;
      146     1778         %CAN_RVA_REF;
      147     2097         %INCLUDE CP_6_SUBS;
      148     2637    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA) ALTRET(ALT_ZIC$ATTB);
      149     2638    1       CALL DB_FUNC_GET(CAN_RVA.OAREC.SEC) ALTRET(ALT_ZIC$ATTB);
      150     2639    1   NXTAC:
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:19   
      151     2640    1       CALL DB_FUNC_FRS(CAN_RVA.ACREC.SEC,CAN_RVA.OAAC.SEC) ALTRET(ALT_ZIC$ATTB);
      152     2641    1       IF UWA.DB_STATUS = '02100' THEN
      153     2642    2       DO;
      154     2643    2           ERROR_CODE = 0004; /* AREA DOES NOT EXIST IN SCHEMA */
      155     2644    2           RETURN;
      156     2645    2           END;
      157     2646    1       CALL DB_FUNC_GET(CAN_RVA.ACREC.SEC) ALTRET(ALT_ZIC$ATTB);
      158     2647         /*******************************************************/
      159     2648         /* Find the sn record */
      160     2649         /*******************************************************/
      161     2650    1       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(ALT_ZIC$ATTB);
      162     2651    1       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(ALT_ZIC$ATTB);
      163     2652    1       IF IDS_AREA_NM ~= UWA.SN_REC.SENAME THEN GOTO NXTAC;
      164     2653    1       AC_REC.CALC_NULL = UWA.AC_REC.CALC_NULL;
      165     2654    1       AC_REC.BASE_DBK = UWA.AC_REC.BASE_DBK;
      166     2655    1       AC_REC.KEYS_ALLOC = UWA.AC_REC.KEY_ALLOC;
      167     2656    1       AC_REC.MIN_DBK = UWA.AC_REC.MIN_DBK;
      168     2657    1       AC_REC.MAX_DBK = UWA.AC_REC.MAX_DBK;
      169     2658    1       AC_REC.MIN_PAGE = UWA.AC_REC.MIN_PAGE;
      170     2659    1       AC_REC.MAX_PAGE = UWA.AC_REC.MAX_PAGE;
      171     2660    1       AC_REC.FIRST_INV_PG = UWA.AC_REC.FIR_INV_PG;
      172     2661    1       AC_REC.DBK_PER_PG = UWA.AC_REC.LPP;
      173     2662    1       AC_REC.DBK_PER_CALC = UWA.AC_REC.IDB;
      174     2663    1       ERROR_CODE = 0;
      175     2664    1       RETURN;
      176     2665    1   ALT_ZIC$ATTB:
      177     2666    1       CALL CHARBIN(ERROR_CODE,UWA.DB_STATUS);
      178     2667    1       RETURN;
      179     2668    1   END ZIC$ATTB;
      180     2669        %EOD;

PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:20   
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIC$ATTB.

   Procedure ZIC$ATTB requires 68 words for executable code.
   Procedure ZIC$ATTB requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:21   

 Object Unit name= ZIC$ATTB                                   File name= ZIC$EDMS:IDS.:ZIC0TOU
 UTS= SEP 05 '97 11:36:40.04 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  ZIC$ATTB
    1   Proc  even  none    68    104  ZIC$ATTB
    2  RoData even  none     8     10  ZIC$ATTB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        3  ZIC$ATTB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DB_FUNC_FDR
 yes     yes           Std       1 DB_FUNC_GET
 yes     yes           Std       2 DB_FUNC_FRS
 yes     yes           Std       1 DB_FUNC_FOR
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     UWA                                   CAN_RVA
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:22   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:23   


       77        1        /*M* ZIC$ATTB  Extracts IDS schema AC record attributes.     */
       78        2        /*T***********************************************************/
       79        3        /*T*                                                         */
       80        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       81        5        /*T*                                                         */
       82        6        /*T***********************************************************/
       83        7        /*P*
       84        8              NAME: ZIC$IDS_ATTRIB
       85        9           PURPOSE:
       86       10                    To ensure a given area name is a member of the
       87       11                    opened schema and to return AC record attributes
       88       12                    of that area to the calling Fortran program. AC
       89       13                    record information is passed through the AC_REC
       90       14                    structure. The information returned is given in
       91       15                    detail below.
       92       16                   INPUTS
       93       17                    		IDS_AREA_NM =NAME OF AREA
       94       18                    OUTPUTS
       95       19                    		AC_REC = TABLE OF AREA DESCRIPTIONS
       96       20                    		ERROR_CODE = ERROR
       97       21                    		POSSIBLE ERROR CODES
       98       22                       0003 = AREA DOES NOT EXIST IN SCHEMA
       99       23                           ALL POSSIBLE IDS ERRORS
      100       24        ********************************************************/
      101       25        ZIC$ATTB: PROC(IDS_AREA_NM,AC_REC,ERROR_CODE);

     25  1 000000   000000 700200 xent  ZIC$ATTB     TSX0  ! X66_AUTO_3
         1 000001   000006 000003                    ZERO    6,3

      102       26
      103       27    1   DCL IDS_AREA_NM CHAR(30); /* Name of area as defined in schema */
      104       28    1   DCL 1 AC_REC ALIGNED,
      105       29    1         2 CALC_NULL SBIN,
      106       30    1         2 BASE_DBK SBIN,
      107       31    1         2 KEYS_ALLOC SBIN,
      108       32    1         2 MIN_DBK SBIN,
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:24   
      109       33    1         2 MAX_DBK SBIN,
      110       34    1         2 MIN_PAGE SBIN,
      111       35    1         2 MAX_PAGE SBIN,
      112       36    1         2 FIRST_INV_PG SBIN,
      113       37    1         2 DBK_PER_PG SBIN,
      114       38    1         2 DBK_PER_CALC SBIN;
      115       39         /*B* AC_REC.CALC_NULL        SBIN WORD
      116       40            DESC: Set to one if there are no calc headers in area.         */
      117       41         /*B* AC_REC.BASE_DBK         SBIN WORD
      118       42            DESC: Used as the area's base data base key.                   */
      119       43         /*B* AC_REC.KEYS_ALLOC       SBIN WORD
      120       44            DESC: Total number of data base keys allocated to area.        */
      121       45         /*B* AC_REC.MIN_DBK          SBIN WORD
      122       46           DESC: The first global data base key in the area.               */
      123       47         /*B* AC_REC.MAX_DBK          SBIN WORD
      124       48            DESC: The last global data base key in the area.               */
      125       49         /*B* AC_REC.MIN_PAGE         SBIN WORD
      126       50            DESC: The first page number in the area.                       */
      127       51         /*B* AC_REC.MAX_PAGE         SBIN WORD
      128       52            DESC: The last page number in the area.                        */
      129       53         /*B* AC_REC.FIRST_INV_PG     SBIN WORD
      130       54            DESC: The number of the first inventory page.                   */
      131       55         /*B* AC_REC.DBK_PER_PG       SBIN WORD
      132       56            DESC: The number of data base keys per page.                   */
      133       57         /*B* AC_REC.DBK_PER_CALC     SBIN WORD
      134       58            DESC: The number of data records to each calc header record.   */
      135       59
      136       60    1   DCL ERROR_CODE SBIN; /* Returns results of program operation */
      137       61
      138       62    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET;
      139       63    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET;
      140       64    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET;
      141       65    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
      142       66         /**/
      143       67         %INCLUDE ZI_UWA_C;
      144      757         %ZI$UWAB;
      145     1097         %INCLUDE ZI_RVA_C;
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:25   
      146     1778         %CAN_RVA_REF;
      147     2097         %INCLUDE CP_6_SUBS;
      148     2637    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA) ALTRET(ALT_ZIC$ATTB);

   2637  1 000002   000001 630400 2                  EPPR0   1
         1 000003   000000 631400 2                  EPPR1   0
         1 000004   000000 701000 xent               TSX1    DB_FUNC_FDR
         1 000005   000077 702000 1                  TSX2    ALT_ZIC$ATTB

      149     2638    1       CALL DB_FUNC_GET(CAN_RVA.OAREC.SEC) ALTRET(ALT_ZIC$ATTB);

   2638  1 000006   000001 630400 2                  EPPR0   1
         1 000007   000003 631400 2                  EPPR1   3
         1 000010   000000 701000 xent               TSX1    DB_FUNC_GET
         1 000011   000077 702000 1                  TSX2    ALT_ZIC$ATTB

      150     2639    1   NXTAC:
      151     2640    1       CALL DB_FUNC_FRS(CAN_RVA.ACREC.SEC,CAN_RVA.OAAC.SEC) ALTRET(ALT_ZIC$ATTB);

   2640  1 000012   000004 630400 2     NXTAC        EPPR0   4
         1 000013   000000 631400 2                  EPPR1   0
         1 000014   000000 701000 xent               TSX1    DB_FUNC_FRS
         1 000015   000077 702000 1                  TSX2    ALT_ZIC$ATTB

      152     2641    1       IF UWA.DB_STATUS = '02100' THEN

   2641  1 000016   040000 106400                    CMPC    fill='040'O
         1 000017   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         1 000020   000000 000005 0                  ADSC9   0                        cn=0,n=5
         1 000021   000026 601000 1                  TNZ     s:2646

      153     2642    2       DO;

      154     2643    2           ERROR_CODE = 0004; /* AREA DOES NOT EXIST IN SCHEMA */

   2643  1 000022   000004 235007                    LDA     4,DL
         1 000023   200005 470500                    LDP0    @ERROR_CODE,,AUTO
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:26   
         1 000024   000000 755100                    STA     0,,PR0

      155     2644    2           RETURN;

   2644  1 000025   000000 702200 xent               TSX2  ! X66_ARET

      156     2645    2           END;
      157     2646    1       CALL DB_FUNC_GET(CAN_RVA.ACREC.SEC) ALTRET(ALT_ZIC$ATTB);

   2646  1 000026   000004 630400 2                  EPPR0   4
         1 000027   000003 631400 2                  EPPR1   3
         1 000030   000000 701000 xent               TSX1    DB_FUNC_GET
         1 000031   000077 702000 1                  TSX2    ALT_ZIC$ATTB

      158     2647         /*******************************************************/
      159     2648         /* Find the sn record */
      160     2649         /*******************************************************/
      161     2650    1       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(ALT_ZIC$ATTB);

   2650  1 000032   000006 630400 2                  EPPR0   6
         1 000033   000003 631400 2                  EPPR1   3
         1 000034   000000 701000 xent               TSX1    DB_FUNC_FOR
         1 000035   000077 702000 1                  TSX2    ALT_ZIC$ATTB

      162     2651    1       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(ALT_ZIC$ATTB);

   2651  1 000036   000007 630400 2                  EPPR0   7
         1 000037   000003 631400 2                  EPPR1   3
         1 000040   000000 701000 xent               TSX1    DB_FUNC_GET
         1 000041   000077 702000 1                  TSX2    ALT_ZIC$ATTB

      163     2652    1       IF IDS_AREA_NM ~= UWA.SN_REC.SENAME THEN GOTO NXTAC;

   2652  1 000042   200003 470500                    LDP0    @IDS_AREA_NM,,AUTO
         1 000043   040000 106500                    CMPC    fill='040'O
         1 000044   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30
         1 000045   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:27   
         1 000046   000012 601000 1                  TNZ     NXTAC

      164     2653    1       AC_REC.CALC_NULL = UWA.AC_REC.CALC_NULL;

   2653  1 000047   200004 471500                    LDP1    @AC_REC,,AUTO
         1 000050   000241 235000 xsym               LDA     UWA+161
         1 000051   100000 755100                    STA     0,,PR1

      165     2654    1       AC_REC.BASE_DBK = UWA.AC_REC.BASE_DBK;

   2654  1 000052   000242 236000 xsym               LDQ     UWA+162
         1 000053   100001 756100                    STQ     1,,PR1

      166     2655    1       AC_REC.KEYS_ALLOC = UWA.AC_REC.KEY_ALLOC;

   2655  1 000054   000243 235000 xsym               LDA     UWA+163
         1 000055   100002 755100                    STA     2,,PR1

      167     2656    1       AC_REC.MIN_DBK = UWA.AC_REC.MIN_DBK;

   2656  1 000056   000245 235000 xsym               LDA     UWA+165
         1 000057   100003 755100                    STA     3,,PR1

      168     2657    1       AC_REC.MAX_DBK = UWA.AC_REC.MAX_DBK;

   2657  1 000060   000246 235000 xsym               LDA     UWA+166
         1 000061   100004 755100                    STA     4,,PR1

      169     2658    1       AC_REC.MIN_PAGE = UWA.AC_REC.MIN_PAGE;

   2658  1 000062   000247 235000 xsym               LDA     UWA+167
         1 000063   100005 755100                    STA     5,,PR1

      170     2659    1       AC_REC.MAX_PAGE = UWA.AC_REC.MAX_PAGE;

   2659  1 000064   000250 235000 xsym               LDA     UWA+168
         1 000065   100006 755100                    STA     6,,PR1
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:28   

      171     2660    1       AC_REC.FIRST_INV_PG = UWA.AC_REC.FIR_INV_PG;

   2660  1 000066   000252 235000 xsym               LDA     UWA+170
         1 000067   100007 755100                    STA     7,,PR1

      172     2661    1       AC_REC.DBK_PER_PG = UWA.AC_REC.LPP;

   2661  1 000070   000253 235000 xsym               LDA     UWA+171
         1 000071   100010 755100                    STA     8,,PR1

      173     2662    1       AC_REC.DBK_PER_CALC = UWA.AC_REC.IDB;

   2662  1 000072   000254 235000 xsym               LDA     UWA+172
         1 000073   100011 755100                    STA     9,,PR1

      174     2663    1       ERROR_CODE = 0;

   2663  1 000074   200005 473500                    LDP3    @ERROR_CODE,,AUTO
         1 000075   300000 450100                    STZ     0,,PR3

      175     2664    1       RETURN;

   2664  1 000076   000000 702200 xent               TSX2  ! X66_ARET

      176     2665    1   ALT_ZIC$ATTB:
      177     2666    1       CALL CHARBIN(ERROR_CODE,UWA.DB_STATUS);

   2666  1 000077   200005 470500       ALT_ZIC$ATTB LDP0    @ERROR_CODE,,AUTO
         1 000100   000100 305400                    DTB
         1 000101   000001 430005 xsym               NDSC9   UWA+1                    cn=2,s=nosgn,sf=0,n=5
         1 000102   000000 000004                    NDSC9   0,,PR0                   cn=0,s=lsgnf,sf=0,n=4

      178     2667    1       RETURN;

   2667  1 000103   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:29   
(unnamed)
 Sect OctLoc
   0     000   060062 061060   060040 040040                                    02100

(unnamed)
 Sect OctLoc
   2     000   000002 000000   000062 406000   000063 006000   000001 000000    .....2...3......
   2     004   000063 406000   000021 406000   000047 406000   000075 406000    .3.......'...=..
      179     2668    1   END ZIC$ATTB;
      180     2669        %EOD;

PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:30   
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIC$ATTB.

   Procedure ZIC$ATTB requires 68 words for executable code.
   Procedure ZIC$ATTB requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:32   
          MINI XREF LISTING

AC_REC
        28**DCL        25--PROC
AC_REC.BASE_DBK
        30**DCL      2654<<ASSIGN
AC_REC.CALC_NULL
        29**DCL      2653<<ASSIGN
AC_REC.DBK_PER_CALC
        38**DCL      2662<<ASSIGN
AC_REC.DBK_PER_PG
        37**DCL      2661<<ASSIGN
AC_REC.FIRST_INV_PG
        36**DCL      2660<<ASSIGN
AC_REC.KEYS_ALLOC
        31**DCL      2655<<ASSIGN
AC_REC.MAX_DBK
        33**DCL      2657<<ASSIGN
AC_REC.MAX_PAGE
        35**DCL      2659<<ASSIGN
AC_REC.MIN_DBK
        32**DCL      2656<<ASSIGN
AC_REC.MIN_PAGE
        34**DCL      2658<<ASSIGN
ALT_ZIC$ATTB
      2666**LABEL    2637--CALLALT  2638--CALLALT  2640--CALLALT  2646--CALLALT  2650--CALLALT  2651--CALLALT
CAN_RVA.ACREC.SEC
      1934**DCL      2640<>CALL     2646<>CALL
CAN_RVA.OAAC.SEC
      1832**DCL      2640<>CALL
CAN_RVA.OAREC.SEC
      1931**DCL      2637<>CALL     2638<>CALL
CAN_RVA.SNREC.SEC
      1964**DCL      2651<>CALL
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:33   
CAN_RVA.SNSE.SEC
      1898**DCL      2650<>CALL
DB_FUNC_FDR
        63**DCL-ENT  2637--CALL
DB_FUNC_FOR
        62**DCL-ENT  2650--CALL
DB_FUNC_FRS
        64**DCL-ENT  2640--CALL
DB_FUNC_GET
        65**DCL-ENT  2638--CALL     2646--CALL     2651--CALL
ERROR_CODE
        60**DCL        25--PROC     2643<<ASSIGN   2663<<ASSIGN   2666<<CALLBLT
IDS_AREA_NM
        27**DCL        25--PROC     2652>>IF
NXTAC
      2640**LABEL    2652--GOTO
UWA.AC_REC.BASE_DBK
       854**DCL      2654>>ASSIGN
UWA.AC_REC.CALC_NEXT
       873**DCL       874--REDEF
UWA.AC_REC.CALC_NULL
       853**DCL      2653>>ASSIGN
UWA.AC_REC.CALC_PRIOR
       882**DCL       883--REDEF
UWA.AC_REC.DEFAULTS
       831**DCL       832--REDEF
UWA.AC_REC.FILE_CODE
       836**DCL       837--REDEF
UWA.AC_REC.FIR_INV_PG
       862**DCL      2660>>ASSIGN
UWA.AC_REC.FLAG1.ERROR_TYPE
       833**DCL       834--REDEF
UWA.AC_REC.IDB
       864**DCL      2662>>ASSIGN
UWA.AC_REC.KEY_ALLOC
       855**DCL      2655>>ASSIGN
PL6.E3A0      #002=ZIC$ATTB File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:34   
UWA.AC_REC.LPP
       863**DCL      2661>>ASSIGN
UWA.AC_REC.MAX_DBK
       858**DCL      2657>>ASSIGN
UWA.AC_REC.MAX_PAGE
       860**DCL      2659>>ASSIGN
UWA.AC_REC.MIN_DBK
       857**DCL      2656>>ASSIGN
UWA.AC_REC.MIN_PAGE
       859**DCL      2658>>ASSIGN
UWA.AC_REC.PG_TYPE
       848**DCL       849--REDEF
UWA.AD_REC.ADDATE
       813**DCL       814--REDEF
UWA.DB_STATUS
       761**DCL      2641>>IF       2666>>CALLBLT
UWA.SF_REC.DBKOA
       779**DCL      2637<>CALL
UWA.SN_REC.SENAME
       992**DCL      2652>>IF

PL6.E3A0      #003=ZIC$CLOS File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:35   
      181        1        /*M*   ZIC$CLOSE             CLOSE IDS/II SCHEMA FILE    */
      182        2        /*T***********************************************************/
      183        3        /*T*                                                         */
      184        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      185        5        /*T*                                                         */
      186        6        /*T***********************************************************/
      187        7        /*P*
      188        8             NAME: ZIC$CLOSE
      189        9              INPUTS
      190       10                  NONE
      191       11              OUTPUTS
      192       12                 ERROR_CODE = ERROR
      193       13                    (ALL POSSIBLE IDS ERROR CODES)
      194       14        *****************************************************************/
      195       15        ZIC$CLOS: PROC(ERROR_CODE);
      196       16    1   DCL STAT_CHK ENTRY(1) ALTRET;
      197       17    1   DCL ERROR_CODE UBIN;
      198       18    1   DCL DB_FUNC_FIN ENTRY ALTRET;
      199       19        /**/
      200       20        %INCLUDE ZI_UWA_C;
      201      710        %ZI$UWAB;
      202     1050        %INCLUDE ZI_RVA_C;
      203     1731        %CAN_RVA_REF;
      204     2050        /**/
      205     2051    1       CALL DB_FUNC_FIN ALTRET(ALT_FIN);
      206     2052    1       ERROR_CODE = 0;
      207     2053    1       RETURN;
      208     2054    1   ALT_FIN:
      209     2055    1       CALL CHARBIN(ERROR_CODE,UWA.DB_STATUS);
      210     2056    1       RETURN;
      211     2057    1   END ZIC$CLOS;
      212     2058        %EOD;

PL6.E3A0      #003=ZIC$CLOS File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:36   
--  Include file information  --

   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIC$CLOS.

   Procedure ZIC$CLOS requires 15 words for executable code.
   Procedure ZIC$CLOS requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=ZIC$CLOS File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:37   

 Object Unit name= ZIC$CLOS                                   File name= ZIC$EDMS:IDS.:ZIC0TOU
 UTS= SEP 05 '97 11:36:53.72 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    15     17  ZIC$CLOS
    1  RoData even  none     1      1  ZIC$CLOS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  ZIC$CLOS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 DB_FUNC_FIN
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     UWA                                   CAN_RVA
PL6.E3A0      #003=ZIC$CLOS File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:38   


      181        1        /*M*   ZIC$CLOSE             CLOSE IDS/II SCHEMA FILE    */
      182        2        /*T***********************************************************/
      183        3        /*T*                                                         */
      184        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      185        5        /*T*                                                         */
      186        6        /*T***********************************************************/
      187        7        /*P*
      188        8             NAME: ZIC$CLOSE
      189        9              INPUTS
      190       10                  NONE
      191       11              OUTPUTS
      192       12                 ERROR_CODE = ERROR
      193       13                    (ALL POSSIBLE IDS ERROR CODES)
      194       14        *****************************************************************/
      195       15        ZIC$CLOS: PROC(ERROR_CODE);

     15  0 000000   000000 700200 xent  ZIC$CLOS     TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

      196       16    1   DCL STAT_CHK ENTRY(1) ALTRET;
      197       17    1   DCL ERROR_CODE UBIN;
      198       18    1   DCL DB_FUNC_FIN ENTRY ALTRET;
      199       19        /**/
      200       20        %INCLUDE ZI_UWA_C;
      201      710        %ZI$UWAB;
      202     1050        %INCLUDE ZI_RVA_C;
      203     1731        %CAN_RVA_REF;
      204     2050        /**/
      205     2051    1       CALL DB_FUNC_FIN ALTRET(ALT_FIN);

   2051  0 000002   000000 631400 1                  EPPR1   0
         0 000003   000000 701000 xent               TSX1    DB_FUNC_FIN
         0 000004   000010 702000 0                  TSX2    ALT_FIN

      206     2052    1       ERROR_CODE = 0;

PL6.E3A0      #003=ZIC$CLOS File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:39   
   2052  0 000005   200003 470500                    LDP0    @ERROR_CODE,,AUTO
         0 000006   000000 450100                    STZ     0,,PR0

      207     2053    1       RETURN;

   2053  0 000007   000000 702200 xent               TSX2  ! X66_ARET

      208     2054    1   ALT_FIN:
      209     2055    1       CALL CHARBIN(ERROR_CODE,UWA.DB_STATUS);

   2055  0 000010   000100 305400       ALT_FIN      DTB
         0 000011   000001 430005 xsym               NDSC9   UWA+1                    cn=2,s=nosgn,sf=0,n=5
         0 000012   200004 000010                    NDSC9   @ERROR_CODE+1,,AUTO      cn=0,s=lsgnf,sf=0,n=8
         0 000013   200003 470500                    LDP0    @ERROR_CODE,,AUTO
         0 000014   200005 235100                    LDA     @ERROR_CODE+2,,AUTO
         0 000015   000000 755100                    STA     0,,PR0

      210     2056    1       RETURN;

   2056  0 000016   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 000000                                                    ....
      211     2057    1   END ZIC$CLOS;
      212     2058        %EOD;

PL6.E3A0      #003=ZIC$CLOS File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:40   
--  Include file information  --

   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIC$CLOS.

   Procedure ZIC$CLOS requires 15 words for executable code.
   Procedure ZIC$CLOS requires 6 words of local(AUTO) storage.
PL6.E3A0      #003=ZIC$CLOS File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:41   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=ZIC$CLOS File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:36 Page:42   
          MINI XREF LISTING

ALT_FIN
      2055**LABEL    2051--CALLALT
DB_FUNC_FIN
        18**DCL-ENT  2051--CALL
ERROR_CODE
        17**DCL        15--PROC     2052<<ASSIGN   2055<<CALLBLT
UWA.AC_REC.CALC_NEXT
       826**DCL       827--REDEF
UWA.AC_REC.CALC_PRIOR
       835**DCL       836--REDEF
UWA.AC_REC.DEFAULTS
       784**DCL       785--REDEF
UWA.AC_REC.FILE_CODE
       789**DCL       790--REDEF
UWA.AC_REC.FLAG1.ERROR_TYPE
       786**DCL       787--REDEF
UWA.AC_REC.PG_TYPE
       801**DCL       802--REDEF
UWA.AD_REC.ADDATE
       766**DCL       767--REDEF
UWA.DB_STATUS
       714**DCL      2055>>CALLBLT

PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:43   
      213        1        /*M*    ZIC$CALC      IDS/II CALC ROUTINE      */
      214        2        /*T***********************************************************/
      215        3        /*T*                                                         */
      216        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      217        5        /*T*                                                         */
      218        6        /*T***********************************************************/
      219        7        /*P
      220        8             NAME: ZIC$CALC
      221        9             PURPOSE:  GIVEN AN IDS/II RECORD AND A DESCRIPTION OF FIELDS
      222       10                      WITHIN THAT RECORD , IF THE RECORD IS STORED VIA CALC
      223       11                    A PAGE WHERE THE RECORD BELONGS BASED ON THE CALC-KEY,ALSO A LINE NUMBER
      224       12                      FIELDS  WILL BE RETURNED
      225       13             INPUTS
      226       14               IDS_RECORD = IDS/II RECORD
      227       15               KEY_ARRAY = ARRAY OF INDEXES INTO ITEM TO WHERE CALC ARE LOCATED
      228       16               AC_REC = AREA DESCRIPTION RECORD
      229       17               RA_REC = RECORD WITHIN AREA DESCRIPTION
      230       18               ITEM = TABLE OF  ITEM OR FIELD DESCRIPTIONS
      231       19             OUTPUTS
      232       20               PG_NO = PAGE NUMBER WHERE RECORD SHOULD BE LOCATED WITHIN AREAA
      233       21               LN_NO = LINE NUMBER OF WHERE THE RECORD SHOULD GO ON THE
      234       22                      PAGE IF THERE ARE  MULTIPLE CALC HEADERS PER PAGE
      235       23        ******************************************************************/
      236       24        ZIC$CALC: PROC (IDS_RECORD,KEY_ARRAY,AC_REC,
      237       25               RA_REC,ITEM,PG_NO,LN_NO,CHDRS);
      238       26        /**/
      239       27    1   DCL IDS_RECORD (0:0) CHAR(1);
      240       28    1   DCL 1 KEY_ARRAY ALIGNED,
      241       29    1         2 SIZ SBIN WORD,
      242       30    1         2 MEMBER (0:0) SBIN WORD;
      243       31    1   DCL 1 AC_REC ALIGNED,
      244       32    1         2 CALC_NULL SBIN WORD,
      245       33    1         2 BASE_DBK SBIN WORD,
      246       34    1         2 KEYS_ALLOC SBIN WORD,
      247       35    1         2 MIN_DBK SBIN WORD,
      248       36    1         2 MAX_DBK SBIN WORD,
      249       37    1         2 MIN_PAGE SBIN WORD ,
PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:44   
      250       38    1         2 MAX_PAGE SBIN WORD,
      251       39    1         2 FRST_INV_PG SBIN WORD,
      252       40    1         2 DBK_PER_PG SBIN WORD,
      253       41    1         2 DBK_PER_CALC SBIN WORD;
      254       42    1   DCL 1 RA_REC ALIGNED,
      255       43    1         2 LOWDBK SBIN WORD,
      256       44    1         2 HIDBK SBIN WORD,
      257       45    1         2 CALC_HDRS SBIN WORD,
      258       46    1         2 HDR_OFFSET SBIN WORD;
      259       47    1   DCL 1 ITEM (0:0) ALIGNED,
      260       48    1         2 NAME_SIZ SBIN WORD,
      261       49    1         2 OFFSET SBIN WORD,
      262       50    1         2 LEN SBIN WORD,
      263       51    1         2 TYPE SBIN WORD,
      264       52    1         2 BEIST SBIN WORD,
      265       53    1         2 EIS SBIN WORD;
      266       54    1   DCL PG_NO SBIN WORD;
      267       55    1   DCL LN_NO SBIN WORD;
      268       56    1   DCL CHDRS UBIN;
      269       57        /**/
      270       58    1   DCL AC$ PTR STATIC SYMDEF;
      271       59    1   DCL RA$ PTR STATIC SYMDEF;
      272       60    1   DCL ITEM$ PTR STATIC SYMDEF;
      273       61    1   DCL KEY$ PTR STATIC SYMDEF;
      274       62    1   DCL REC$ PTR SYMREF;
      275       63    1   DCL PGNO SBIN WORD SYMREF;
      276       64    1   DCL LNNO SBIN WORD SYMREF;
      277       65    1   DCL CALCHDRS UBIN WORD STATIC SYMDEF ALIGNED;
      278       66        /**/
      279       67    1   DCL ZIC$DBCLC ENTRY;
      280       68        /**/
      281       69        /**/
      282       70        /* SET THE PTRS TO AC_REC,RA_REC,ITEM,KEY_ARRAY & IDS_RECORD  */
      283       71        /*NEXT CALL ZIC$DBCLC(THE CALC HASHING ROUTINE) THEN ROUTINE */
      284       72    1       AC$=ADDR(AC_REC);
      285       73    1       RA$=ADDR(RA_REC);
      286       74    1       ITEM$=ADDR(ITEM);
PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:45   
      287       75    1       KEY$=ADDR(KEY_ARRAY);
      288       76    1       REC$=ADDR(IDS_RECORD);
      289       77    1       CALCHDRS = CHDRS;
      290       78    1       CALL ZIC$DBCLC;
      291       79    1       PG_NO=PGNO;
      292       80    1       LN_NO=LNNO;
      293       81    1   END ZIC$CALC;
      294       82        %EOD;

PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:46   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIC$CALC.

   Procedure ZIC$CALC requires 25 words for executable code.
   Procedure ZIC$CALC requires 12 words of local(AUTO) storage.

PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:47   

 Object Unit name= ZIC$CALC                                   File name= ZIC$EDMS:IDS.:ZIC0TOU
 UTS= SEP 05 '97 11:37:03.16 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     5      5  ZIC$CALC
    1   Proc  even  none    25     31  ZIC$CALC
    2  RoData even  none     1      1  ZIC$CALC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        8  ZIC$CALC

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  AC$                                0      1  RA$
    0      2  ITEM$                              0      3  KEY$
    0      4  CALCHDRS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 ZIC$DBCLC
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_ARET
PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:48   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     REC$                                  PGNO                                  LNNO
PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:49   


      213        1        /*M*    ZIC$CALC      IDS/II CALC ROUTINE      */
      214        2        /*T***********************************************************/
      215        3        /*T*                                                         */
      216        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      217        5        /*T*                                                         */
      218        6        /*T***********************************************************/
      219        7        /*P
      220        8             NAME: ZIC$CALC
      221        9             PURPOSE:  GIVEN AN IDS/II RECORD AND A DESCRIPTION OF FIELDS
      222       10                      WITHIN THAT RECORD , IF THE RECORD IS STORED VIA CALC
      223       11                   A PAGE WHERE THE RECORD BELONGS BASED ON THE CALC-KEY,ALSO A LINE NUMBER
      224       12                      FIELDS  WILL BE RETURNED
      225       13             INPUTS
      226       14               IDS_RECORD = IDS/II RECORD
      227       15               KEY_ARRAY = ARRAY OF INDEXES INTO ITEM TO WHERE CALC ARE LOCATED
      228       16               AC_REC = AREA DESCRIPTION RECORD
      229       17               RA_REC = RECORD WITHIN AREA DESCRIPTION
      230       18               ITEM = TABLE OF  ITEM OR FIELD DESCRIPTIONS
      231       19             OUTPUTS
      232       20               PG_NO = PAGE NUMBER WHERE RECORD SHOULD BE LOCATED WITHIN AREAA
      233       21               LN_NO = LINE NUMBER OF WHERE THE RECORD SHOULD GO ON THE
      234       22                      PAGE IF THERE ARE  MULTIPLE CALC HEADERS PER PAGE
      235       23        ******************************************************************/
      236       24        ZIC$CALC: PROC (IDS_RECORD,KEY_ARRAY,AC_REC,

     24  1 000000   000000 700200 xent  ZIC$CALC     TSX0  ! X66_AUTO_N
         1 000001   000014 000010                    ZERO    12,8

      237       25               RA_REC,ITEM,PG_NO,LN_NO,CHDRS);
      238       26        /**/
      239       27    1   DCL IDS_RECORD (0:0) CHAR(1);
      240       28    1   DCL 1 KEY_ARRAY ALIGNED,
      241       29    1         2 SIZ SBIN WORD,
      242       30    1         2 MEMBER (0:0) SBIN WORD;
      243       31    1   DCL 1 AC_REC ALIGNED,
      244       32    1         2 CALC_NULL SBIN WORD,
PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:50   
      245       33    1         2 BASE_DBK SBIN WORD,
      246       34    1         2 KEYS_ALLOC SBIN WORD,
      247       35    1         2 MIN_DBK SBIN WORD,
      248       36    1         2 MAX_DBK SBIN WORD,
      249       37    1         2 MIN_PAGE SBIN WORD ,
      250       38    1         2 MAX_PAGE SBIN WORD,
      251       39    1         2 FRST_INV_PG SBIN WORD,
      252       40    1         2 DBK_PER_PG SBIN WORD,
      253       41    1         2 DBK_PER_CALC SBIN WORD;
      254       42    1   DCL 1 RA_REC ALIGNED,
      255       43    1         2 LOWDBK SBIN WORD,
      256       44    1         2 HIDBK SBIN WORD,
      257       45    1         2 CALC_HDRS SBIN WORD,
      258       46    1         2 HDR_OFFSET SBIN WORD;
      259       47    1   DCL 1 ITEM (0:0) ALIGNED,
      260       48    1         2 NAME_SIZ SBIN WORD,
      261       49    1         2 OFFSET SBIN WORD,
      262       50    1         2 LEN SBIN WORD,
      263       51    1         2 TYPE SBIN WORD,
      264       52    1         2 BEIST SBIN WORD,
      265       53    1         2 EIS SBIN WORD;
      266       54    1   DCL PG_NO SBIN WORD;
      267       55    1   DCL LN_NO SBIN WORD;
      268       56    1   DCL CHDRS UBIN;
      269       57        /**/
      270       58    1   DCL AC$ PTR STATIC SYMDEF;
      271       59    1   DCL RA$ PTR STATIC SYMDEF;
      272       60    1   DCL ITEM$ PTR STATIC SYMDEF;
      273       61    1   DCL KEY$ PTR STATIC SYMDEF;
      274       62    1   DCL REC$ PTR SYMREF;
      275       63    1   DCL PGNO SBIN WORD SYMREF;
      276       64    1   DCL LNNO SBIN WORD SYMREF;
      277       65    1   DCL CALCHDRS UBIN WORD STATIC SYMDEF ALIGNED;
      278       66        /**/
      279       67    1   DCL ZIC$DBCLC ENTRY;
      280       68        /**/
      281       69        /**/
PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:51   
      282       70        /* SET THE PTRS TO AC_REC,RA_REC,ITEM,KEY_ARRAY & IDS_RECORD  */
      283       71        /*NEXT CALL ZIC$DBCLC(THE CALC HASHING ROUTINE) THEN ROUTINE */
      284       72    1       AC$=ADDR(AC_REC);

     72  1 000002   200005 236100                    LDQ     @AC_REC,,AUTO
         1 000003   000000 756000 0                  STQ     AC$

      285       73    1       RA$=ADDR(RA_REC);

     73  1 000004   200006 236100                    LDQ     @RA_REC,,AUTO
         1 000005   000001 756000 0                  STQ     RA$

      286       74    1       ITEM$=ADDR(ITEM);

     74  1 000006   200007 236100                    LDQ     @ITEM,,AUTO
         1 000007   000002 756000 0                  STQ     ITEM$

      287       75    1       KEY$=ADDR(KEY_ARRAY);

     75  1 000010   200004 236100                    LDQ     @KEY_ARRAY,,AUTO
         1 000011   000003 756000 0                  STQ     KEY$

      288       76    1       REC$=ADDR(IDS_RECORD);

     76  1 000012   200003 236100                    LDQ     @IDS_RECORD,,AUTO
         1 000013   000000 756000 xsym               STQ     REC$

      289       77    1       CALCHDRS = CHDRS;

     77  1 000014   200012 470500                    LDP0    @CHDRS,,AUTO
         1 000015   000000 235100                    LDA     0,,PR0
         1 000016   000004 755000 0                  STA     CALCHDRS

      290       78    1       CALL ZIC$DBCLC;

     78  1 000017   000000 631400 2                  EPPR1   0
         1 000020   000000 701000 xent               TSX1    ZIC$DBCLC
PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:52   
         1 000021   000000 011000                    NOP     0

      291       79    1       PG_NO=PGNO;

     79  1 000022   200010 470500                    LDP0    @PG_NO,,AUTO
         1 000023   000000 235000 xsym               LDA     PGNO
         1 000024   000000 755100                    STA     0,,PR0

      292       80    1       LN_NO=LNNO;

     80  1 000025   200011 471500                    LDP1    @LN_NO,,AUTO
         1 000026   000000 236000 xsym               LDQ     LNNO
         1 000027   100000 756100                    STQ     0,,PR1

      293       81    1   END ZIC$CALC;

     81  1 000030   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   2     000   000000 000000                                                    ....
      294       82        %EOD;

PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:53   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIC$CALC.

   Procedure ZIC$CALC requires 25 words for executable code.
   Procedure ZIC$CALC requires 12 words of local(AUTO) storage.
PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:54   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:55   
          MINI XREF LISTING

AC$
        58**DCL        72<<ASSIGN
AC_REC
        31**DCL        24--PROC       72--ASSIGN
CALCHDRS
        65**DCL        77<<ASSIGN
CHDRS
        56**DCL        24--PROC       77>>ASSIGN
IDS_RECORD
        27**DCL        24--PROC       76--ASSIGN
ITEM
        47**DCL        24--PROC       74--ASSIGN
ITEM$
        60**DCL        74<<ASSIGN
KEY$
        61**DCL        75<<ASSIGN
KEY_ARRAY
        28**DCL        24--PROC       75--ASSIGN
LNNO
        64**DCL        80>>ASSIGN
LN_NO
        55**DCL        24--PROC       80<<ASSIGN
PGNO
        63**DCL        79>>ASSIGN
PG_NO
        54**DCL        24--PROC       79<<ASSIGN
RA$
        59**DCL        73<<ASSIGN
RA_REC
        42**DCL        24--PROC       73--ASSIGN
REC$
        62**DCL        76<<ASSIGN
PL6.E3A0      #004=ZIC$CALC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:56   
ZIC$DBCLC
        67**DCL-ENT    78--CALL

PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:57   
      295        1        /*M* ZIC$RREC  Breaks down an IDS record into components     */
      296        2        /*T***********************************************************/
      297        3        /*T*                                                         */
      298        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      299        5        /*T*                                                         */
      300        6        /*T***********************************************************/
      301        7        /*P*
      302        8           NAME: This routine accepts a record number passed thru the
      303        9                 parameter REC_TYPE, then reads the IDS schema to produce
      304       10                a picture of the record layout to the calling program.
      305       11                This picture is returned in terms of ITEM and SET
      306       12                descripitions and locations within the record which are
      307       13                passed through a series of ITEM and SET arrays for the
      308       14                purpose of constructing an IDS record.
      309       15               INPUTS
      310       16                       REC_TYPE = RECORD TYPE OF IDS/II RECORD
      311       17               OUTPUTS
      312       18                       REC_SIZ = RECORD SIZE IN BYTES
      313       19                       REC_NAME = ASCII RECORD NAME OF RECORD TYPE
      314       20                       REC_NAME_SIZ = # CHARACTERS IN RECORD NAME
      315       21                       NUM_ITEMS = # ITEMS IN RECORD
      316       22                       ITEM = TABLE OF RECORD'S ITEMS AND THEIR DESCRIPTIONS
      317       23                       NUM_SETS = # OF SET RECORD BELONGS TO
      318       24                       SET = TABLE OF RECORD'S SETS AND THEIR DESC.
      319       25                       KEY_ARRAY = ARRAY CONTIONS OFFSETS IN ITEM OF CALC KEY FIELDS
      320       26                       ITEM_NAME = ARRAY CONTAINING ITEM NAMES
      321       27                       SET_NAME =ARRAY CONTAINING SET NAMES
      322       28                      	RA_REC = ARRAY CONTAINING RECORD INFO
      323       29                      	ERROR_CODE = CODE RETURNED IF SOMETHING IS WRONG IN THIS ROUTINE
      324       30                       ERROR_CODE EQUIV.
      325       31                        0001 = REC TYPE PASSED WAS A CALC HDR REC
      326       32          	             0002 = REC TYPE PASSED WAS NOT IN SCHEMA
      327       33        *********************************************************/
      328       34        ZIC$RREC: PROC( REC_TYPE, REC_SIZ,REC_NAME,REC_NAME_SIZ,
      329       35               NUM_ITEMS,ITEM,NUM_SETS,SET,KEY_ARRAY,
      330       36               ITEM_NAME,SET_NAME,RA_REC,ERROR_CODE,AREA_NAME);
      331       37        /* Data definition */
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:58   
      332       38    1   DCL REC_TYPE UBIN;
      333       39         /*B* REC_TYPE UBIN WORD
      334       40            DESC: Provides the record type number to be constructed        */
      335       41    1   DCL REC_SIZ UBIN;
      336       42         /*B* REC_SIZ   UBIN WORD
      337       43            DESC: The length in bytes of the record                        */
      338       44    1   DCL REC_NAME CHAR(30);
      339       45         /*B* REC_NAME CHAR(30)
      340       46            DESC: Contains the record name. (text)                         */
      341       47    1   DCL REC_NAME_SIZ UBIN;
      342       48         /*B* REC_NAME_SIZ UBIN WORD
      343       49            DESC: The number of characters in the record name.             */
      344       50    1   DCL NUM_ITEMS UBIN;
      345       51         /*B* NUM_ITEMS UBIN WORD
      346       52            DESC: The number of items in the record.                       */
      347       53    1   DCL ITEM_NAME (0:0) CHAR(30);
      348       54         /*B* ITEM_NAME (0:N) CHAR(30)
      349       55            DESC: Name of item entry sub item index                        */
      350       56    1   DCL 1 ITEM (0:0) ALIGNED,
      351       57    1         2 NAME_SIZ SBIN,
      352       58    1         2 OFFSET SBIN,
      353       59    1         2 LEN SBIN,
      354       60    1         2 TYPE SBIN,
      355       61    1         2 BEIST SBIN,
      356       62    1         2 EIS SBIN;
      357       63         /*B* ITEM.NAME_SIZ(0:N) UBIN WORD
      358       64            DESC: Number of characters in ITEM.NAME(ITEM_INDEX)            */
      359       65         /*B* ITEM.OFFSET (0:N) UBIN WORD
      360       66            DESC: ITEM.OFFSET(ITEM_INDX) Contains the offset in nibbles
      361       67                  (half bytes) from the begining of the record to the
      362       68                  start of the start of the item data.                     */
      363       69         /*B* ITEM.LEN (0:N) UBIN WORD
      364       70            DESC: The length in nibbles the data occupies.                 */
      365       71         /*B* ITEM.TYPE (0:N) UBIN WORD
      366       72            DESC: The type of data described by this field where:
      367       73                  0= Data Base Key         1= Comp word
      368       74                  2= Comp Half             3= Unsgned Decimal
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:59   
      369       75                  4= Signed Decimal        5= Character
      370       76                  6= BCD character         7= 72 bit binary
      371       77                  8= Sgned float pked dec  9= Unspecified 9 bit units
      372       78                 10= Bit string           11= Single Precision float binary
      373       79                 12= Double prec binary   13= Filler 6 bit units
      374       80                 14= Unspecified 6 bits   15= Unsgned coded dec
      375       81                 16= Signed coded dec     17= Single prec spanned dec
      376       82                 18= Double prec spanned  19= Character varying            */
      377       83         /*B* ITEM.EIS        SBIN WORD
      378       84            DESC: Contains an EIS descriptor for use by calc key build.    */
      379       85    1   DCL NUM_SETS UBIN;
      380       86         /*B* NUM_SETS UBIN WORD
      381       87            DESC: The number of sets associated with the record.           */
      382       88    1   DCL SET_NAME (0:0) CHAR(30);
      383       89         /*B* SET.NAME(0:N) CHAR(30)
      384       90            DESC: Set name text of set name sub SET.INDX.                  */
      385       91    1   DCL 1 SET (0:0) ALIGNED,
      386       92    1         2 NAME_SIZ SBIN,
      387       93    1         2 OWNER_OFFSET SBIN,
      388       94    1         2 OWNER_SIZ SBIN,
      389       95    1         2 PRIOR_OFFSET SBIN,
      390       96    1         2 PRIOR_SIZ SBIN,
      391       97    1         2 NEXT_OFFSET SBIN,
      392       98    1         2 NEXT_SIZ SBIN;
      393       99         /*B* SET.NAME_SIZ (0:N) UBIN WORD
      394      100            DESC: Number of characters in SET.NAME(SET_INDX).              */
      395      101         /*B* SET.OWNER_OFFSET(0:N) UBIN WORD
      396      102            DESC: The owner pointer offset in bytes from begining of rec.  */
      397      103         /*B* SET.OWNER_SIZ (0:N) UBIN WORD
      398      104            DESC: The owner pointer size in bytes.                         */
      399      105         /*B* SET.PRIOR_SIZ(0:N) UBIN WORD
      400      106            DESC: Size in bytes of the prior ptr of set entry sub SET_INDX */
      401      107         /*B* SET.PRIOR_OFFSET UBIN WORD
      402      108            DESC: The prior pointer offset in bytes from begining of rec.  */
      403      109         /*B* SET.NEXT_SIZ (0:N) UBIN WORD
      404      110            DESC: Size in bytes of set next pointer sub SET.INDX.          */
      405      111         /*B* SET.NEXT_OFFSET(0:N) UBIN WORD
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:60   
      406      112            DESC: The next pointer offset in bytes from begining of rec.  */
      407      113    1   DCL 1 KEY_ARRAY ALIGNED,
      408      114    1         2 SIZ SBIN,
      409      115    1         2 MEMBER (0:0) SBIN;
      410      116         /*B* KEY_ARRAY (0:N) UBIN WORD
      411      117            DESC: An array of indexes of item elements used as keys.
      412      118                  The first entry (KEY_ARRAY(0)) will be the number of
      413      119                  elements in the array. KEY_ARRAY(1) will contain the
      414      120                  the index of the first element used as a key.            */
      415      121    1   DCL 1 RA_REC ALIGNED,
      416      122    1         2 LOWDBK SBIN,
      417      123    1         2 HIDBK SBIN,
      418      124    1         2 CALC_HDRS SBIN,
      419      125    1         2 HDR_OFFSET SBIN;
      420      126         /*B* RA_REC.LOWDBK SBIN WORD
      421      127            DESC: The low data base key of the range of keys to which
      422      128                  records of a class are assigned.                         */
      423      129         /*B* RA_REC.HIDBK  SBIN WORD
      424      130            DESC: Same as above for the high data base key.                */
      425      131         /*B* RA_REC.CALC_HDRS SBIN WORD
      426      132            DESC: Number of calc set owner records contained within the
      427      133                  range LOWDBK thru HIDBK.                                 */
      428      134         /*B* RA_REC.HDR_OFFSET SBIN WORD
      429      135            DESC: The offset from LOWDBK to the calc set owner record
      430      136                  which is assigned a data base key.                       */
      431      137    1   DCL ERROR_CODE UBIN;
      432      138         /*B* ERR0R_CODE UBIN WORD
      433      139            DESC: This field will contain the results of the IDS record
      434      140                  breakdown. Zero will indicate a successful completion    */
      435      141    1   DCL AREA_NAME CHAR(30) CALIGNED;
      436      142
      437      143        /*  DESC: THIS PARAM IS PASSED TO IDENTIFY THE CORRECT RA_REC */
      438      144        /**/
      439      145    1   DCL 1 ADSC9 BASED(EIS$) UNAL,
      440      146    1         2 * UBIN(3) UNAL,
      441      147    1         2 EISADDR UBIN(15) UNAL,
      442      148    1         2 BYT_OFF UBIN(3) UNAL,
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:61   
      443      149    1         2 TA UBIN(2) UNAL,
      444      150    1         2 * UBIN(1) UNAL,
      445      151    1         2 SIZE UBIN(12) UNAL;
      446      152    1   DCL 1 NDSC BASED(EIS$) UNAL,
      447      153    1         2 * UBIN(3) UNAL,
      448      154    1         2 EISADDR UBIN(15) UNAL,
      449      155    1         2 BYT_OFF UBIN(3) UNAL,
      450      156    1         2 TN UBIN(1) UNAL,
      451      157    1         2 SIGN UBIN(2) UNAL,
      452      158    1         2 SCAL UBIN(6) UNAL,
      453      159    1         2 SIZE UBIN(6) UNAL;
      454      160    1   DCL EIS$ PTR STATIC ALIGNED;
      455      161    1   DCL I UBIN WORD STATIC ALIGNED;
      456      162        /**/
      457      163    1   DCL ITM_INDX SBIN WORD ALIGNED INIT (-1) STATIC;
      458      164    1   DCL SET_INDX SBIN WORD ALIGNED INIT(-1) STATIC;
      459      165    1   DCL KEY_INDX SBIN WORD ALIGNED INIT(-1) STATIC;
      460      166        /**/
      461      167    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET;
      462      168    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET;
      463      169    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
      464      170    1   DCL DB_FUNC_FOR1 ENTRY(3) ALTRET;
      465      171    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET;
      466      172        /**/
      467      173        %INCLUDE ZI_RVA_C;
      468      854        %CAN_RVA_REF;
      469     1173        %INCLUDE ZI_UWA_C;
      470     1863        %ZI$UWAB;
      471     2203        %INCLUDE ZI$DIR;
      472     2360        %DIR;
      473     2504        /**/
      474     2505        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:62   
      475     2506        /*************************************************************/
      476     2507        /*             Begin procedure                               */
      477     2508        /*************************************************************/
      478     2509        /*
      479     2510                Summary for data base functions reading schema:
      480     2511                DB_FUNC_FDR = find direct by DBK
      481     2512                       _FRS = find next within set
      482     2513                       _FOR = find owner of set
      483     2514                       _GET = retreive record info.
      484     2515                A DB_STATUS = '02100' means end of chain encountered.
      485     2516        */
      486     2517    1       ERROR_CODE=0;
      487     2518    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA);
      488     2519         /* Initial position to start walking chains*/
      489     2520    1       IF REC_TYPE=4000 THEN /* Calc rec and specific recs not specified */
      490     2521    2       DO;
      491     2522    2           ERROR_CODE=0001; /*CALC HDR RECORD TYPE NOT ALLOWED*/
      492     2523    2           RETURN;
      493     2524    2           END;
      494     2525    1       CALL FIND_RC;
      495     2526    1       IF ERROR_CODE ~= 0 THEN RETURN;
      496     2527    1       CALL FIND_RA;
      497     2528    1       CALL FIND_FR;
      498     2529    1       CALL CHK_CALC;
      499     2530    1       CALL FIND_SC;
      500     2531    1       RETURN;
      501     2532        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:63   
      502     2533        /***************************************************************/
      503     2534        /*                                                             */
      504     2535        /*           F I N D   R C           P R O C                   */
      505     2536        /***************************************************************/
      506     2537    1   FIND_RC: PROC;
      507     2538        /*
      508     2539               Find  the OA rec and start walking thru record chain until
      509     2540               you either reach end of chain or find the record type equal
      510     2541               to the type passed. Ignore calc record types
      511     2542               since they are handled separatly above.
      512     2543        */
      513     2544    2       UWA.RC_REC.RTYPE = -1; /* INIT RECORD TYPE TO AN UNKNOWN */
      514     2545    2       ITM_INDX=-1;
      515     2546    2       SET_INDX=-1;
      516     2547    2       KEY_INDX=-1;
      517     2548    2       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA);
      518     2549    3       DO WHILE (((UWA.RC_REC.RTYPE~=REC_TYPE) OR (UWA.RC_REC.RTYPE = 4000))
      519     2550    3          AND (UWA.DB_STATUS ~='02100'));
      520     2551    3           CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC);
      521     2552    3           IF UWA.DB_STATUS ~= '02100' THEN
      522     2553    3               CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC);
      523     2554    4           ELSE DO;
      524     2555    4               ERROR_CODE = 0002; /*RECORD TYPE PASSED NOT FOUND IN SCHEMA*/
      525     2556    4               RETURN;
      526     2557    4               END;
      527     2558    3           END;
      528     2559    2       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC); /* Exrtract rec name */
      529     2560    2       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);
      530     2561    2       REC_NAME=UWA.SN_REC.SENAME;
      531     2562    2       CALL INDEX(REC_NAME_SIZ,' ',REC_NAME);
      532     2563    2       REC_SIZ = UWA.RC_REC.LSIZE;
      533     2564    2       RETURN;
      534     2565    2   END FIND_RC;
      535     2566        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:64   
      536     2567    1   FIND_RA: PROC;
      537     2568    2   NEXT_RA: CALL DB_FUNC_FRS(CAN_RVA.RAREC.SEC,CAN_RVA.RCRA.SEC);
      538     2569    2       CALL DB_FUNC_GET(CAN_RVA.RAREC.SEC);
      539     2570    2       CALL DB_FUNC_FOR(CAN_RVA.ACRA.SEC);
      540     2571    2       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);
      541     2572    2       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);
      542     2573    2       IF UWA.SN_REC.SENAME~=AREA_NAME THEN
      543     2574    2           GOTO NEXT_RA; /* SEARCH FOR THE RIGHT RA */
      544     2575    2       RA_REC.LOWDBK=UWA.RA_REC.LDBK;
      545     2576    2       RA_REC.HIDBK=UWA.RA_REC.HDBK;
      546     2577    2       RA_REC.CALC_HDRS=UWA.RA_REC.CHDRS1;
      547     2578    2       RA_REC.HDR_OFFSET=UWA.RA_REC.HOFFS;
      548     2579    2       CALL DB_FUNC_FOR(CAN_RVA.RCRA.SEC); /*GET POSTIONED BACK AT RC RECORD*/
      549     2580    2       RETURN;
      550     2581    2   END FIND_RA;
      551     2582        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:65   
      552     2583        /***************************************************************/
      553     2584        /*                                                             */
      554     2585        /*           F I N D   S C                                     */
      555     2586        /***************************************************************/
      556     2587        /*
      557     2588                   RC record now positioned - find sets associated
      558     2589        */
      559     2590    1   FIND_SC: PROC;
      560     2591    2       UWA.DB_STATUS = '00000';
      561     2592    3       DO WHILE (UWA.DB_STATUS~='02100');
      562     2593         /*Find next within set*/
      563     2594    3           CALL DB_FUNC_FRS(CAN_RVA.NULL,CAN_RVA.RCSOSM.SEC);
      564     2595    3           IF UWA.DB_STATUS = '02100' THEN
      565     2596    3               RETURN;
      566     2597    3           ELSE
      567     2598    3               CALL GET_SET;
      568     2599    3           END;
      569     2600    2       NUM_SETS =SET_INDX +1;
      570     2601    2       RETURN;
      571     2602    2   END FIND_SC;
      572     2603        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:66   
      573     2604        /***************************************************************/
      574     2605        /*           RETRIEVE AND DETERMINE SET JUST FOUND             */
      575     2606        /***************************************************************/
      576     2607    1   GET_SET: PROC;
      577     2608        /*   Get information on set last found whether SO or SM rec    */
      578     2609    2       CALL DB_FUNC_GET(CAN_RVA.NULL); /*Get any record next in set*/
      579     2610    2       IF UWA.DB_RECORD_NAME='SO' THEN
      580     2611    3   SO_SET: DO;
      581     2612    3           CALL DB_FUNC_GET(CAN_RVA.SOREC.SEC);
      582     2613    3           EIS$ = ADDR(UWA.SO_REC.PRIPNT);
      583     2614    3           SET.PRIOR_OFFSET(SET_INDX)= ADSC9.EISADDR*8 + ADSC9.BYT_OFF;
      584     2615    3           EIS$ = ADDR(UWA.SO_REC.NXTPNT);
      585     2616    3           SET.NEXT_OFFSET(SET_INDX)= ADSC9.EISADDR*8 + ADSC9.BYT_OFF;
      586     2617    3           END SO_SET;
      587     2618    2       ELSE
      588     2619    2           IF UWA.DB_RECORD_NAME = 'SM' THEN
      589     2620    3   SM_REC: DO;
      590     2621    3               CALL DB_FUNC_GET(CAN_RVA.SMREC.SEC);
      591     2622    3               EIS$ = ADDR(UWA.SM_REC.PRIPNT);
      592     2623    3               SET.PRIOR_OFFSET(SET_INDX)= ADSC9.EISADDR*8 + ADSC9.BYT_OFF;
      593     2624    3               EIS$ = ADDR(UWA.SM_REC.NXTPNT);
      594     2625    3               SET.NEXT_OFFSET(SET_INDX)= ADSC9.EISADDR*8 + ADSC9.BYT_OFF;
      595     2626    3               EIS$ = ADDR(UWA.SM_REC.HDPNT); /* Owner pntr */
      596     2627    3               SET.OWNER_OFFSET(SET_INDX)= ADSC9.EISADDR*8 + ADSC9.BYT_OFF;
      597     2628    3               END SM_REC;
      598     2629         /* Find owner of SC to get set attributes */
      599     2630    2       CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC);
      600     2631    2       CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC);
      601     2632         /* Retrieve name of set */
      602     2633    2       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);
      603     2634    2       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC); /*GET FR RECORD NAME*/
      604     2635    2       SET_NAME(SET_INDX)=UWA.SN_REC.SENAME;
      605     2636    2       RETURN;
      606     2637    2   END GET_SET;
      607     2638        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:67   
      608     2639        /***************************************************************/
      609     2640        /*                                                             */
      610     2641        /*           F I N D   T H E    F R   R E C O R D             */
      611     2642        /***************************************************************/
      612     2643    1   CHK_CALC: PROC;
      613     2644    2       KEY_INDX=-1;
      614     2645    2       IF UWA.RC_REC.PSMODE ~= 1 THEN RETURN;
      615     2646        /**/
      616     2647        /*Now lets go down the rc-sosm chain a get the sm record looking for a sm associated
              2647         with
      617     2648             an sc the has a set type of "1" (Calc set)   */
      618     2649        /**/
      619     2650    2   GETNXT_SM:
      620     2651    2       CALL DB_FUNC_FRS(CAN_RVA.SMREC.SEC,CAN_RVA.RCSOSM.SEC) ;
      621     2652    2       CALL DB_FUNC_GET(CAN_RVA.SMREC.SEC) ;
      622     2653    2       CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC) ;
      623     2654    2       CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ;
      624     2655    2       IF UWA.SC_REC.SETTYPE ~= 1 THEN GOTO GETNXT_SM;
      625     2656        /**/
      626     2657        /*Since we've found a good  "SC" record go get the "CF" record associated with it
      627     2658          in doing so , each time we get a "CF"
      628     2659        */
      629     2660        /**/
      630     2661    2   FD_CF:
      631     2662    2       CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.SMSSCF.SEC) ;
      632     2663    2       IF UWA.DB_STATUS = '02100' THEN GOTO END_CHK_CALC;
      633     2664    2       CALL DB_FUNC_GET(CAN_RVA.CFREC.SEC) ;
      634     2665    2       IF UWA.CF_REC.CTLTYP ~= 4 THEN GOTO FD_CF;
      635     2666    2       CALL DB_FUNC_FOR(CAN_RVA.FRCFS.SEC) ;
      636     2667    2       CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC) ;
      637     2668        /*We now have the standard fr record                                        */
      638     2669    2       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);
      639     2670    2       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);
      640     2671        /* NOW THAT WE'VE FOUND A CALC KEY FEILD IN THE SCHEMA
      641     2672          MATCH IT UP WITH THE FIELD IN THE ITEM TABLE AND PUT
      642     2673           THE OFFSET NTO THE ITEM TABLE IN KEY_ARRAY         */
      643     2674    3       DO I = 0 TO NUM_ITEMS-1 BY 1;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:68   
      644     2675    3           IF UWA.SN_REC.SENAME = ITEM_NAME(I) THEN
      645     2676    4           DO;
      646     2677    4               KEY_INDX=KEY_INDX+1;
      647     2678    4               KEY_ARRAY.MEMBER(KEY_INDX)=I;
      648     2679    4               KEY_ARRAY.SIZ = KEY_INDX+1;
      649     2680    4               END;
      650     2681    3           END;
      651     2682    2       GOTO FD_CF;
      652     2683    2   END_CHK_CALC:
      653     2684    2       RETURN;
      654     2685    2   END CHK_CALC;
      655     2686        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:69   
      656     2687    1   FIND_FR: PROC;
      657     2688    2       UWA.DB_STATUS = '00000';
      658     2689    2       ITM_INDX=-1;
      659     2690    3       DO WHILE (UWA.DB_STATUS~='02100');
      660     2691    3           CALL DB_FUNC_FRS(CAN_RVA.FRREC.SEC,CAN_RVA.RCFR.SEC);
      661     2692    3           IF UWA.DB_STATUS = '02100' THEN
      662     2693    4           DO;
      663     2694    4               NUM_ITEMS=ITM_INDX+1;
      664     2695    4               RETURN;
      665     2696    4               END;
      666     2697    3           ELSE
      667     2698    4           DO;
      668     2699    4               CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC);
      669     2700         /* Get FR rec to get item descriptions then */
      670     2701         /* get name of field w/in the record */
      671     2702    5               IF UWA.FR_REC.SYN = 0 THEN DO;
      672     2703    5                   CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);
      673     2704    5                   CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);
      674     2705         /*
      675     2706            Call print routine to print items.
      676     2707         */
      677     2708    5                   KEY_INDX=-1;
      678     2709    5                   CALL ITEM_STORE;
      679     2710    5                   END;
      680     2711    4               END;
      681     2712    3           END;
      682     2713    2       NUM_ITEMS=ITM_INDX+1;
      683     2714    2       RETURN;
      684     2715    2   END FIND_FR;
      685     2716        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:70   
      686     2717        /***************************************************************/
      687     2718        /*                                                              */
      688     2719        /*           STORE  ITEM INTO ITEM TABLE                        */
      689     2720        /***************************************************************/
      690     2721    1   ITEM_STORE: PROC;
      691     2722    2       ITM_INDX=ITM_INDX+1;
      692     2723    2       ITEM_NAME(ITM_INDX)=UWA.SN_REC.SENAME;
      693     2724    2       ITEM.EIS(ITM_INDX)=UWA.FR_REC.BUFLOC;
      694     2725    2       CALL INDEX(ITEM.NAME_SIZ(ITM_INDX),' ',ITEM_NAME(ITM_INDX));
      695     2726    2       EIS$=ADDR(UWA.FR_REC.BUFLOC);
      696     2727    2       ITEM.OFFSET(ITM_INDX)=ADSC9.EISADDR*8 + ADSC9.BYT_OFF;
              2727                /*OFFSET IS IN HALF-BYTES*/
      697     2728    2       ITEM.BEIST(ITM_INDX)=UWA.FR_REC.BEIST;
      698     2729    3       DO CASE(UWA.FR_REC.FTYP);
      699     2730    3       CASE(5);
      700     2731    3           ITEM.TYPE(ITM_INDX) = UWA.FR_REC.FTYP;
      701     2732    3           ITEM.LEN(ITM_INDX)=ADSC9.SIZE;
      702     2733    3       CASE(9);
      703     2734    3           ITEM.TYPE(ITM_INDX) = UWA.FR_REC.FTYP;
      704     2735    3           ITEM.LEN(ITM_INDX)=ADSC9.SIZE;
      705     2736    3       CASE(ELSE);
      706     2737    3           ITEM.TYPE(ITM_INDX) = UWA.FR_REC.FTYP;
      707     2738    3           ITEM.LEN(ITM_INDX)=NDSC.SIZE;
      708     2739    3           END;
      709     2740    2       RETURN;
      710     2741    2   END ITEM_STORE;
      711     2742    1   END ZIC$RREC;
      712     2743        %EOD;

PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:71   
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIC$RREC.

   Procedure ZIC$RREC requires 505 words for executable code.
   Procedure ZIC$RREC requires 24 words of local(AUTO) storage.

PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:72   

 Object Unit name= ZIC$RREC                                   File name= ZIC$EDMS:IDS.:ZIC0TOU
 UTS= SEP 05 '97 11:37:08.16 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     5      5  ZIC$RREC
    1  RoData even  UTS      6      6  ZIC$RREC
    2   Proc  even  none   505    771  ZIC$RREC
    3  RoData even  none    32     40  ZIC$RREC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std       14  ZIC$RREC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DB_FUNC_FDR
 yes     yes           Std       1 DB_FUNC_GET
 yes     yes           Std       2 DB_FUNC_FRS
 yes     yes           Std       1 DB_FUNC_FOR
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_ARET
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:73   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     CAN_RVA                               UWA                                   ZI$DIR
     SCHEMA_ACTIVE                         RECORD_LIST                           SET_LIST
     RETAIN_LIST                           DUMP_FID                              ALTKY
     INIT_RG                               KEY_RNG                               ITEM_LIST

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:74   


      295        1        /*M* ZIC$RREC  Breaks down an IDS record into components     */
      296        2        /*T***********************************************************/
      297        3        /*T*                                                         */
      298        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      299        5        /*T*                                                         */
      300        6        /*T***********************************************************/
      301        7        /*P*
      302        8           NAME: This routine accepts a record number passed thru the
      303        9                 parameter REC_TYPE, then reads the IDS schema to produce
      304       10                a picture of the record layout to the calling program.
      305       11                This picture is returned in terms of ITEM and SET
      306       12                descripitions and locations within the record which are
      307       13                passed through a series of ITEM and SET arrays for the
      308       14                purpose of constructing an IDS record.
      309       15               INPUTS
      310       16                       REC_TYPE = RECORD TYPE OF IDS/II RECORD
      311       17               OUTPUTS
      312       18                       REC_SIZ = RECORD SIZE IN BYTES
      313       19                       REC_NAME = ASCII RECORD NAME OF RECORD TYPE
      314       20                       REC_NAME_SIZ = # CHARACTERS IN RECORD NAME
      315       21                       NUM_ITEMS = # ITEMS IN RECORD
      316       22                       ITEM = TABLE OF RECORD'S ITEMS AND THEIR DESCRIPTIONS
      317       23                       NUM_SETS = # OF SET RECORD BELONGS TO
      318       24                       SET = TABLE OF RECORD'S SETS AND THEIR DESC.
      319       25                       KEY_ARRAY = ARRAY CONTIONS OFFSETS IN ITEM OF CALC KEY FIELDS
      320       26                       ITEM_NAME = ARRAY CONTAINING ITEM NAMES
      321       27                       SET_NAME =ARRAY CONTAINING SET NAMES
      322       28                      	RA_REC = ARRAY CONTAINING RECORD INFO
      323       29                      	ERROR_CODE = CODE RETURNED IF SOMETHING IS WRONG IN THIS ROUTINE
      324       30                       ERROR_CODE EQUIV.
      325       31                        0001 = REC TYPE PASSED WAS A CALC HDR REC
      326       32          	             0002 = REC TYPE PASSED WAS NOT IN SCHEMA
      327       33        *********************************************************/
      328       34        ZIC$RREC: PROC( REC_TYPE, REC_SIZ,REC_NAME,REC_NAME_SIZ,

     34  2 000000   000000 700200 xent  ZIC$RREC     TSX0  ! X66_AUTO_N
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:75   
         2 000001   000030 000016                    ZERO    24,14

      329       35               NUM_ITEMS,ITEM,NUM_SETS,SET,KEY_ARRAY,
      330       36               ITEM_NAME,SET_NAME,RA_REC,ERROR_CODE,AREA_NAME);
      331       37        /* Data definition */
      332       38    1   DCL REC_TYPE UBIN;
      333       39         /*B* REC_TYPE UBIN WORD
      334       40            DESC: Provides the record type number to be constructed        */
      335       41    1   DCL REC_SIZ UBIN;
      336       42         /*B* REC_SIZ   UBIN WORD
      337       43            DESC: The length in bytes of the record                        */
      338       44    1   DCL REC_NAME CHAR(30);
      339       45         /*B* REC_NAME CHAR(30)
      340       46            DESC: Contains the record name. (text)                         */
      341       47    1   DCL REC_NAME_SIZ UBIN;
      342       48         /*B* REC_NAME_SIZ UBIN WORD
      343       49            DESC: The number of characters in the record name.             */
      344       50    1   DCL NUM_ITEMS UBIN;
      345       51         /*B* NUM_ITEMS UBIN WORD
      346       52            DESC: The number of items in the record.                       */
      347       53    1   DCL ITEM_NAME (0:0) CHAR(30);
      348       54         /*B* ITEM_NAME (0:N) CHAR(30)
      349       55            DESC: Name of item entry sub item index                        */
      350       56    1   DCL 1 ITEM (0:0) ALIGNED,
      351       57    1         2 NAME_SIZ SBIN,
      352       58    1         2 OFFSET SBIN,
      353       59    1         2 LEN SBIN,
      354       60    1         2 TYPE SBIN,
      355       61    1         2 BEIST SBIN,
      356       62    1         2 EIS SBIN;
      357       63         /*B* ITEM.NAME_SIZ(0:N) UBIN WORD
      358       64            DESC: Number of characters in ITEM.NAME(ITEM_INDEX)            */
      359       65         /*B* ITEM.OFFSET (0:N) UBIN WORD
      360       66            DESC: ITEM.OFFSET(ITEM_INDX) Contains the offset in nibbles
      361       67                  (half bytes) from the begining of the record to the
      362       68                  start of the start of the item data.                     */
      363       69         /*B* ITEM.LEN (0:N) UBIN WORD
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:76   
      364       70            DESC: The length in nibbles the data occupies.                 */
      365       71         /*B* ITEM.TYPE (0:N) UBIN WORD
      366       72            DESC: The type of data described by this field where:
      367       73                  0= Data Base Key         1= Comp word
      368       74                  2= Comp Half             3= Unsgned Decimal
      369       75                  4= Signed Decimal        5= Character
      370       76                  6= BCD character         7= 72 bit binary
      371       77                  8= Sgned float pked dec  9= Unspecified 9 bit units
      372       78                 10= Bit string           11= Single Precision float binary
      373       79                 12= Double prec binary   13= Filler 6 bit units
      374       80                 14= Unspecified 6 bits   15= Unsgned coded dec
      375       81                 16= Signed coded dec     17= Single prec spanned dec
      376       82                 18= Double prec spanned  19= Character varying            */
      377       83         /*B* ITEM.EIS        SBIN WORD
      378       84            DESC: Contains an EIS descriptor for use by calc key build.    */
      379       85    1   DCL NUM_SETS UBIN;
      380       86         /*B* NUM_SETS UBIN WORD
      381       87            DESC: The number of sets associated with the record.           */
      382       88    1   DCL SET_NAME (0:0) CHAR(30);
      383       89         /*B* SET.NAME(0:N) CHAR(30)
      384       90            DESC: Set name text of set name sub SET.INDX.                  */
      385       91    1   DCL 1 SET (0:0) ALIGNED,
      386       92    1         2 NAME_SIZ SBIN,
      387       93    1         2 OWNER_OFFSET SBIN,
      388       94    1         2 OWNER_SIZ SBIN,
      389       95    1         2 PRIOR_OFFSET SBIN,
      390       96    1         2 PRIOR_SIZ SBIN,
      391       97    1         2 NEXT_OFFSET SBIN,
      392       98    1         2 NEXT_SIZ SBIN;
      393       99         /*B* SET.NAME_SIZ (0:N) UBIN WORD
      394      100            DESC: Number of characters in SET.NAME(SET_INDX).              */
      395      101         /*B* SET.OWNER_OFFSET(0:N) UBIN WORD
      396      102            DESC: The owner pointer offset in bytes from begining of rec.  */
      397      103         /*B* SET.OWNER_SIZ (0:N) UBIN WORD
      398      104            DESC: The owner pointer size in bytes.                         */
      399      105         /*B* SET.PRIOR_SIZ(0:N) UBIN WORD
      400      106            DESC: Size in bytes of the prior ptr of set entry sub SET_INDX */
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:77   
      401      107         /*B* SET.PRIOR_OFFSET UBIN WORD
      402      108            DESC: The prior pointer offset in bytes from begining of rec.  */
      403      109         /*B* SET.NEXT_SIZ (0:N) UBIN WORD
      404      110            DESC: Size in bytes of set next pointer sub SET.INDX.          */
      405      111         /*B* SET.NEXT_OFFSET(0:N) UBIN WORD
      406      112            DESC: The next pointer offset in bytes from begining of rec.  */
      407      113    1   DCL 1 KEY_ARRAY ALIGNED,
      408      114    1         2 SIZ SBIN,
      409      115    1         2 MEMBER (0:0) SBIN;
      410      116         /*B* KEY_ARRAY (0:N) UBIN WORD
      411      117            DESC: An array of indexes of item elements used as keys.
      412      118                  The first entry (KEY_ARRAY(0)) will be the number of
      413      119                  elements in the array. KEY_ARRAY(1) will contain the
      414      120                  the index of the first element used as a key.            */
      415      121    1   DCL 1 RA_REC ALIGNED,
      416      122    1         2 LOWDBK SBIN,
      417      123    1         2 HIDBK SBIN,
      418      124    1         2 CALC_HDRS SBIN,
      419      125    1         2 HDR_OFFSET SBIN;
      420      126         /*B* RA_REC.LOWDBK SBIN WORD
      421      127            DESC: The low data base key of the range of keys to which
      422      128                  records of a class are assigned.                         */
      423      129         /*B* RA_REC.HIDBK  SBIN WORD
      424      130            DESC: Same as above for the high data base key.                */
      425      131         /*B* RA_REC.CALC_HDRS SBIN WORD
      426      132            DESC: Number of calc set owner records contained within the
      427      133                  range LOWDBK thru HIDBK.                                 */
      428      134         /*B* RA_REC.HDR_OFFSET SBIN WORD
      429      135            DESC: The offset from LOWDBK to the calc set owner record
      430      136                  which is assigned a data base key.                       */
      431      137    1   DCL ERROR_CODE UBIN;
      432      138         /*B* ERR0R_CODE UBIN WORD
      433      139            DESC: This field will contain the results of the IDS record
      434      140                  breakdown. Zero will indicate a successful completion    */
      435      141    1   DCL AREA_NAME CHAR(30) CALIGNED;
      436      142
      437      143        /*  DESC: THIS PARAM IS PASSED TO IDENTIFY THE CORRECT RA_REC */
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:78   
      438      144        /**/
      439      145    1   DCL 1 ADSC9 BASED(EIS$) UNAL,
      440      146    1         2 * UBIN(3) UNAL,
      441      147    1         2 EISADDR UBIN(15) UNAL,
      442      148    1         2 BYT_OFF UBIN(3) UNAL,
      443      149    1         2 TA UBIN(2) UNAL,
      444      150    1         2 * UBIN(1) UNAL,
      445      151    1         2 SIZE UBIN(12) UNAL;
      446      152    1   DCL 1 NDSC BASED(EIS$) UNAL,
      447      153    1         2 * UBIN(3) UNAL,
      448      154    1         2 EISADDR UBIN(15) UNAL,
      449      155    1         2 BYT_OFF UBIN(3) UNAL,
      450      156    1         2 TN UBIN(1) UNAL,
      451      157    1         2 SIGN UBIN(2) UNAL,
      452      158    1         2 SCAL UBIN(6) UNAL,
      453      159    1         2 SIZE UBIN(6) UNAL;
      454      160    1   DCL EIS$ PTR STATIC ALIGNED;
      455      161    1   DCL I UBIN WORD STATIC ALIGNED;
      456      162        /**/
      457      163    1   DCL ITM_INDX SBIN WORD ALIGNED INIT (-1) STATIC;
      458      164    1   DCL SET_INDX SBIN WORD ALIGNED INIT(-1) STATIC;
      459      165    1   DCL KEY_INDX SBIN WORD ALIGNED INIT(-1) STATIC;
      460      166        /**/
      461      167    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET;
      462      168    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET;
      463      169    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
      464      170    1   DCL DB_FUNC_FOR1 ENTRY(3) ALTRET;
      465      171    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET;
      466      172        /**/
      467      173        %INCLUDE ZI_RVA_C;
      468      854        %CAN_RVA_REF;
      469     1173        %INCLUDE ZI_UWA_C;
      470     1863        %ZI$UWAB;
      471     2203        %INCLUDE ZI$DIR;
      472     2360        %DIR;
      473     2504        /**/
      474     2505        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:79   
      475     2506        /*************************************************************/
      476     2507        /*             Begin procedure                               */
      477     2508        /*************************************************************/
      478     2509        /*
      479     2510                Summary for data base functions reading schema:
      480     2511                DB_FUNC_FDR = find direct by DBK
      481     2512                       _FRS = find next within set
      482     2513                       _FOR = find owner of set
      483     2514                       _GET = retreive record info.
      484     2515                A DB_STATUS = '02100' means end of chain encountered.
      485     2516        */
      486     2517    1       ERROR_CODE=0;

   2517  2 000002   200017 470500                    LDP0    @ERROR_CODE,,AUTO
         2 000003   000000 450100                    STZ     0,,PR0

      487     2518    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA);

   2518  2 000004   000001 630400 3                  EPPR0   1
         2 000005   000000 631400 3                  EPPR1   0
         2 000006   000000 701000 xent               TSX1    DB_FUNC_FDR
         2 000007   000000 011000                    NOP     0

      488     2519         /* Initial position to start walking chains*/
      489     2520    1       IF REC_TYPE=4000 THEN /* Calc rec and specific recs not specified */

   2520  2 000010   200003 470500                    LDP0    @REC_TYPE,,AUTO
         2 000011   000000 235100                    LDA     0,,PR0
         2 000012   007640 115007                    CMPA    4000,DL
         2 000013   000020 601000 2                  TNZ     s:2525

      490     2521    2       DO;

      491     2522    2           ERROR_CODE=0001; /*CALC HDR RECORD TYPE NOT ALLOWED*/

   2522  2 000014   000001 236007                    LDQ     1,DL
         2 000015   200017 471500                    LDP1    @ERROR_CODE,,AUTO
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:80   
         2 000016   100000 756100                    STQ     0,,PR1

      492     2523    2           RETURN;

   2523  2 000017   000000 702200 xent               TSX2  ! X66_ARET

      493     2524    2           END;
      494     2525    1       CALL FIND_RC;

   2525  2 000020   000037 701000 2                  TSX1    FIND_RC
         2 000021   000000 011000                    NOP     0

      495     2526    1       IF ERROR_CODE ~= 0 THEN RETURN;

   2526  2 000022   200017 470500                    LDP0    @ERROR_CODE,,AUTO
         2 000023   000000 235100                    LDA     0,,PR0
         2 000024   000026 600000 2                  TZE     s:2527

   2526  2 000025   000000 702200 xent               TSX2  ! X66_ARET

      496     2527    1       CALL FIND_RA;

   2527  2 000026   000135 701000 2                  TSX1    FIND_RA
         2 000027   000000 011000                    NOP     0

      497     2528    1       CALL FIND_FR;

   2528  2 000030   000557 701000 2                  TSX1    FIND_FR
         2 000031   000000 011000                    NOP     0

      498     2529    1       CALL CHK_CALC;

   2529  2 000032   000433 701000 2                  TSX1    CHK_CALC
         2 000033   000000 011000                    NOP     0

      499     2530    1       CALL FIND_SC;

PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:81   
   2530  2 000034   000206 701000 2                  TSX1    FIND_SC
         2 000035   000000 011000                    NOP     0

      500     2531    1       RETURN;

   2531  2 000036   000000 702200 xent               TSX2  ! X66_ARET

      501     2532        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:82   
      502     2533        /***************************************************************/
      503     2534        /*                                                             */
      504     2535        /*           F I N D   R C           P R O C                   */
      505     2536        /***************************************************************/
      506     2537    1   FIND_RC: PROC;

   2537  2 000037   200022 741300       FIND_RC      STX1  ! @AREA_NAME+2,,AUTO

      507     2538        /*
      508     2539               Find  the OA rec and start walking thru record chain until
      509     2540               you either reach end of chain or find the record type equal
      510     2541               to the type passed. Ignore calc record types
      511     2542               since they are handled separatly above.
      512     2543        */
      513     2544    2       UWA.RC_REC.RTYPE = -1; /* INIT RECORD TYPE TO AN UNKNOWN */

   2544  2 000040   000001 335007                    LCA     1,DL
         2 000041   000270 755000 xsym               STA     UWA+184

      514     2545    2       ITM_INDX=-1;

   2545  2 000042   000002 755000 0                  STA     ITM_INDX

      515     2546    2       SET_INDX=-1;

   2546  2 000043   000003 755000 0                  STA     SET_INDX

      516     2547    2       KEY_INDX=-1;

   2547  2 000044   000004 755000 0                  STA     KEY_INDX

      517     2548    2       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA);

   2548  2 000045   000001 630400 3                  EPPR0   1
         2 000046   000000 631400 3                  EPPR1   0
         2 000047   000000 701000 xent               TSX1    DB_FUNC_FDR
         2 000050   000000 011000                    NOP     0
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:83   

      518     2549    3       DO WHILE (((UWA.RC_REC.RTYPE~=REC_TYPE) OR (UWA.RC_REC.RTYPE = 4000))

   2549  2 000051   000074 710000 2                  TRA     s:2558

      519     2550    3          AND (UWA.DB_STATUS ~='02100'));
      520     2551    3           CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC);

   2551  2 000052   000003 630400 3                  EPPR0   3
         2 000053   000000 631400 3                  EPPR1   0
         2 000054   000000 701000 xent               TSX1    DB_FUNC_FRS
         2 000055   000000 011000                    NOP     0

      521     2552    3           IF UWA.DB_STATUS ~= '02100' THEN

   2552  2 000056   040000 106400                    CMPC    fill='040'O
         2 000057   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         2 000060   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000061   000067 600000 2                  TZE     s:2555

      522     2553    3               CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC);

   2553  2 000062   000003 630400 3                  EPPR0   3
         2 000063   000005 631400 3                  EPPR1   5
         2 000064   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000065   000000 011000                    NOP     0
         2 000066   000074 710000 2                  TRA     s:2558

      523     2554    4           ELSE DO;

      524     2555    4               ERROR_CODE = 0002; /*RECORD TYPE PASSED NOT FOUND IN SCHEMA*/

   2555  2 000067   000002 235007                    LDA     2,DL
         2 000070   200017 470500                    LDP0    @ERROR_CODE,,AUTO
         2 000071   000000 755100                    STA     0,,PR0

      525     2556    4               RETURN;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:84   

   2556  2 000072   200022 221300                    LDX1  ! @AREA_NAME+2,,AUTO
         2 000073   000001 702211                    TSX2  ! 1,X1

      526     2557    4               END;
      527     2558    3           END;

   2558  2 000074   200003 470500                    LDP0    @REC_TYPE,,AUTO
         2 000075   000270 236000 xsym               LDQ     UWA+184
         2 000076   000103 604000 2                  TMI     s:2558+7
         2 000077   000000 116100                    CMPQ    0,,PR0
         2 000100   000103 601000 2                  TNZ     s:2558+7
         2 000101   007640 116007                    CMPQ    4000,DL
         2 000102   000107 601000 2                  TNZ     s:2559
         2 000103   040000 106400                    CMPC    fill='040'O
         2 000104   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         2 000105   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000106   000052 601000 2                  TNZ     s:2551

      528     2559    2       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC); /* Exrtract rec name */

   2559  2 000107   000006 630400 3                  EPPR0   6
         2 000110   000005 631400 3                  EPPR1   5
         2 000111   000000 701000 xent               TSX1    DB_FUNC_FOR
         2 000112   000000 011000                    NOP     0

      529     2560    2       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);

   2560  2 000113   000007 630400 3                  EPPR0   7
         2 000114   000005 631400 3                  EPPR1   5
         2 000115   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000116   000000 011000                    NOP     0

      530     2561    2       REC_NAME=UWA.SN_REC.SENAME;

   2561  2 000117   200005 470500                    LDP0    @REC_NAME,,AUTO
         2 000120   040100 100400                    MLR     fill='040'O
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:85   
         2 000121   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         2 000122   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30

      531     2562    2       CALL INDEX(REC_NAME_SIZ,' ',REC_NAME);

   2562  2 000123   200006 471500                    LDP1    @REC_NAME_SIZ,,AUTO
         2 000124   000000 124500                    SCM     mask='000'O
         2 000125   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30
         2 000126   000010 000001 3                  ADSC9   8                        cn=0,n=1
         2 000127   100000 000100                    ARG     0,,PR1

      532     2563    2       REC_SIZ = UWA.RC_REC.LSIZE;

   2563  2 000130   000306 235000 xsym               LDA     UWA+198
         2 000131   200004 473500                    LDP3    @REC_SIZ,,AUTO
         2 000132   300000 755100                    STA     0,,PR3

      533     2564    2       RETURN;

   2564  2 000133   200022 221300                    LDX1  ! @AREA_NAME+2,,AUTO
         2 000134   000001 702211                    TSX2  ! 1,X1

      534     2565    2   END FIND_RC;
      535     2566        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:86   
      536     2567    1   FIND_RA: PROC;

   2567  2 000135   200022 741300       FIND_RA      STX1  ! @AREA_NAME+2,,AUTO

      537     2568    2   NEXT_RA: CALL DB_FUNC_FRS(CAN_RVA.RAREC.SEC,CAN_RVA.RCRA.SEC);

   2568  2 000136   000011 630400 3     NEXT_RA      EPPR0   9
         2 000137   000000 631400 3                  EPPR1   0
         2 000140   000000 701000 xent               TSX1    DB_FUNC_FRS
         2 000141   000000 011000                    NOP     0

      538     2569    2       CALL DB_FUNC_GET(CAN_RVA.RAREC.SEC);

   2569  2 000142   000011 630400 3                  EPPR0   9
         2 000143   000005 631400 3                  EPPR1   5
         2 000144   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000145   000000 011000                    NOP     0

      539     2570    2       CALL DB_FUNC_FOR(CAN_RVA.ACRA.SEC);

   2570  2 000146   000013 630400 3                  EPPR0   11
         2 000147   000005 631400 3                  EPPR1   5
         2 000150   000000 701000 xent               TSX1    DB_FUNC_FOR
         2 000151   000000 011000                    NOP     0

      540     2571    2       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);

   2571  2 000152   000006 630400 3                  EPPR0   6
         2 000153   000005 631400 3                  EPPR1   5
         2 000154   000000 701000 xent               TSX1    DB_FUNC_FOR
         2 000155   000000 011000                    NOP     0

      541     2572    2       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);

   2572  2 000156   000007 630400 3                  EPPR0   7
         2 000157   000005 631400 3                  EPPR1   5
         2 000160   000000 701000 xent               TSX1    DB_FUNC_GET
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:87   
         2 000161   000000 011000                    NOP     0

      542     2573    2       IF UWA.SN_REC.SENAME~=AREA_NAME THEN

   2573  2 000162   200020 470500                    LDP0    @AREA_NAME,,AUTO
         2 000163   040100 106400                    CMPC    fill='040'O
         2 000164   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         2 000165   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30
         2 000166   000136 601000 2                  TNZ     NEXT_RA

      543     2574    2           GOTO NEXT_RA; /* SEARCH FOR THE RIGHT RA */
      544     2575    2       RA_REC.LOWDBK=UWA.RA_REC.LDBK;

   2575  2 000167   200016 471500                    LDP1    @RA_REC,,AUTO
         2 000170   000326 235000 xsym               LDA     UWA+214
         2 000171   100000 755100                    STA     0,,PR1

      545     2576    2       RA_REC.HIDBK=UWA.RA_REC.HDBK;

   2576  2 000172   000327 236000 xsym               LDQ     UWA+215
         2 000173   100001 756100                    STQ     1,,PR1

      546     2577    2       RA_REC.CALC_HDRS=UWA.RA_REC.CHDRS1;

   2577  2 000174   000330 235000 xsym               LDA     UWA+216
         2 000175   100002 755100                    STA     2,,PR1

      547     2578    2       RA_REC.HDR_OFFSET=UWA.RA_REC.HOFFS;

   2578  2 000176   000331 235000 xsym               LDA     UWA+217
         2 000177   100003 755100                    STA     3,,PR1

      548     2579    2       CALL DB_FUNC_FOR(CAN_RVA.RCRA.SEC); /*GET POSTIONED BACK AT RC RECORD*/

   2579  2 000200   000012 630400 3                  EPPR0   10
         2 000201   000005 631400 3                  EPPR1   5
         2 000202   000000 701000 xent               TSX1    DB_FUNC_FOR
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:88   
         2 000203   000000 011000                    NOP     0

      549     2580    2       RETURN;

   2580  2 000204   200022 221300                    LDX1  ! @AREA_NAME+2,,AUTO
         2 000205   000001 702211                    TSX2  ! 1,X1

      550     2581    2   END FIND_RA;
      551     2582        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:89   
      552     2583        /***************************************************************/
      553     2584        /*                                                             */
      554     2585        /*           F I N D   S C                                     */
      555     2586        /***************************************************************/
      556     2587        /*
      557     2588                   RC record now positioned - find sets associated
      558     2589        */
      559     2590    1   FIND_SC: PROC;

   2590  2 000206   200022 741300       FIND_SC      STX1  ! @AREA_NAME+2,,AUTO

      560     2591    2       UWA.DB_STATUS = '00000';

   2591  2 000207   040000 100400                    MLR     fill='040'O
         2 000210   000002 000005 1                  ADSC9   2                        cn=0,n=5
         2 000211   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5

      561     2592    3       DO WHILE (UWA.DB_STATUS~='02100');

   2592  2 000212   040000 106400                    CMPC    fill='040'O
         2 000213   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         2 000214   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000215   000236 600000 2                  TZE     s:2600

      562     2593         /*Find next within set*/
      563     2594    3           CALL DB_FUNC_FRS(CAN_RVA.NULL,CAN_RVA.RCSOSM.SEC);

   2594  2 000216   000014 630400 3                  EPPR0   12
         2 000217   000000 631400 3                  EPPR1   0
         2 000220   000000 701000 xent               TSX1    DB_FUNC_FRS
         2 000221   000000 011000                    NOP     0

      564     2595    3           IF UWA.DB_STATUS = '02100' THEN

   2595  2 000222   040000 106400                    CMPC    fill='040'O
         2 000223   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         2 000224   000000 000005 1                  ADSC9   0                        cn=0,n=5
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:90   
         2 000225   000230 601000 2                  TNZ     s:2598

      565     2596    3               RETURN;

   2596  2 000226   200022 221300                    LDX1  ! @AREA_NAME+2,,AUTO
         2 000227   000001 702211                    TSX2  ! 1,X1

      566     2597    3           ELSE
      567     2598    3               CALL GET_SET;

   2598  2 000230   000244 701000 2                  TSX1    GET_SET
         2 000231   000000 011000                    NOP     0

      568     2599    3           END;

   2599  2 000232   040000 106400                    CMPC    fill='040'O
         2 000233   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         2 000234   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000235   000216 601000 2                  TNZ     s:2594

      569     2600    2       NUM_SETS =SET_INDX +1;

   2600  2 000236   000003 235000 0                  LDA     SET_INDX
         2 000237   000001 035007                    ADLA    1,DL
         2 000240   200011 470500                    LDP0    @NUM_SETS,,AUTO
         2 000241   000000 755100                    STA     0,,PR0

      570     2601    2       RETURN;

   2601  2 000242   200022 221300                    LDX1  ! @AREA_NAME+2,,AUTO
         2 000243   000001 702211                    TSX2  ! 1,X1

      571     2602    2   END FIND_SC;
      572     2603        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:91   
      573     2604        /***************************************************************/
      574     2605        /*           RETRIEVE AND DETERMINE SET JUST FOUND             */
      575     2606        /***************************************************************/
      576     2607    1   GET_SET: PROC;

   2607  2 000244   200024 741300       GET_SET      STX1  ! @AREA_NAME+4,,AUTO

      577     2608        /*   Get information on set last found whether SO or SM rec    */
      578     2609    2       CALL DB_FUNC_GET(CAN_RVA.NULL); /*Get any record next in set*/

   2609  2 000245   000014 630400 3                  EPPR0   12
         2 000246   000005 631400 3                  EPPR1   5
         2 000247   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000250   000000 011000                    NOP     0

      579     2610    2       IF UWA.DB_RECORD_NAME='SO' THEN

   2610  2 000251   040000 106400                    CMPC    fill='040'O
         2 000252   000023 000036 xsym               ADSC9   UWA+19                   cn=0,n=30
         2 000253   000004 000002 1                  ADSC9   4                        cn=0,n=2
         2 000254   000320 601000 2                  TNZ     s:2619

      580     2611    3   SO_SET: DO;

   2611  2 000255                       SO_SET       null
      581     2612    3           CALL DB_FUNC_GET(CAN_RVA.SOREC.SEC);

   2612  2 000255   000016 630400 3                  EPPR0   14
         2 000256   000005 631400 3                  EPPR1   5
         2 000257   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000260   000000 011000                    NOP     0

      582     2613    3           EIS$ = ADDR(UWA.SO_REC.PRIPNT);

   2613  2 000261   000017 236000 3                  LDQ     15
         2 000262   000000 756000 0                  STQ     EIS$

PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:92   
      583     2614    3           SET.PRIOR_OFFSET(SET_INDX)= ADSC9.EISADDR*8 + ADSC9.BYT_OFF;

   2614  2 000263   000003 236000 0                  LDQ     SET_INDX
         2 000264   000007 402007                    MPY     7,DL
         2 000265   000000 470400 0                  LDP0    EIS$
         2 000266   003100 061500                    CSR     bolr='003'O
         2 000267   000000 400003                    BDSC    0,,PR0                   by=2,bit=0,n=3
         2 000270   200026 000044                    BDSC    @AREA_NAME+6,,AUTO       by=0,bit=0,n=36
         2 000271   003100 061500                    CSR     bolr='003'O
         2 000272   000000 030017                    BDSC    0,,PR0                   by=0,bit=3,n=15
         2 000273   200027 000044                    BDSC    @AREA_NAME+7,,AUTO       by=0,bit=0,n=36
         2 000274   000000 620006                    EAX0    0,QL
         2 000275   200027 236100                    LDQ     @AREA_NAME+7,,AUTO
         2 000276   000003 736000                    QLS     3
         2 000277   200026 036100                    ADLQ    @AREA_NAME+6,,AUTO
         2 000300   200012 471500                    LDP1    @SET,,AUTO
         2 000301   100003 756110                    STQ     3,X0,PR1

      584     2615    3           EIS$ = ADDR(UWA.SO_REC.NXTPNT);

   2615  2 000302   000020 236000 3                  LDQ     16
         2 000303   000000 756000 0                  STQ     EIS$

      585     2616    3           SET.NEXT_OFFSET(SET_INDX)= ADSC9.EISADDR*8 + ADSC9.BYT_OFF;

   2616  2 000304   000000 470400 0                  LDP0    EIS$
         2 000305   003100 061500                    CSR     bolr='003'O
         2 000306   000000 400003                    BDSC    0,,PR0                   by=2,bit=0,n=3
         2 000307   200026 000044                    BDSC    @AREA_NAME+6,,AUTO       by=0,bit=0,n=36
         2 000310   003100 061500                    CSR     bolr='003'O
         2 000311   000000 030017                    BDSC    0,,PR0                   by=0,bit=3,n=15
         2 000312   200027 000044                    BDSC    @AREA_NAME+7,,AUTO       by=0,bit=0,n=36
         2 000313   200027 236100                    LDQ     @AREA_NAME+7,,AUTO
         2 000314   000003 736000                    QLS     3
         2 000315   200026 036100                    ADLQ    @AREA_NAME+6,,AUTO
         2 000316   100005 756110                    STQ     5,X0,PR1

PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:93   
      586     2617    3           END SO_SET;

   2617  2 000317   000403 710000 2                  TRA     s:2630

      587     2618    2       ELSE
      588     2619    2           IF UWA.DB_RECORD_NAME = 'SM' THEN

   2619  2 000320   040000 106400                    CMPC    fill='040'O
         2 000321   000023 000036 xsym               ADSC9   UWA+19                   cn=0,n=30
         2 000322   000005 000002 1                  ADSC9   5                        cn=0,n=2
         2 000323   000403 601000 2                  TNZ     s:2630

      589     2620    3   SM_REC: DO;

   2620  2 000324                       SM_REC       null
      590     2621    3               CALL DB_FUNC_GET(CAN_RVA.SMREC.SEC);

   2621  2 000324   000021 630400 3                  EPPR0   17
         2 000325   000005 631400 3                  EPPR1   5
         2 000326   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000327   000000 011000                    NOP     0

      591     2622    3               EIS$ = ADDR(UWA.SM_REC.PRIPNT);

   2622  2 000330   000022 236000 3                  LDQ     18
         2 000331   000000 756000 0                  STQ     EIS$

      592     2623    3               SET.PRIOR_OFFSET(SET_INDX)= ADSC9.EISADDR*8 + ADSC9.BYT_OFF;

   2623  2 000332   000003 236000 0                  LDQ     SET_INDX
         2 000333   000007 402007                    MPY     7,DL
         2 000334   000000 470400 0                  LDP0    EIS$
         2 000335   003100 061500                    CSR     bolr='003'O
         2 000336   000000 400003                    BDSC    0,,PR0                   by=2,bit=0,n=3
         2 000337   200026 000044                    BDSC    @AREA_NAME+6,,AUTO       by=0,bit=0,n=36
         2 000340   003100 061500                    CSR     bolr='003'O
         2 000341   000000 030017                    BDSC    0,,PR0                   by=0,bit=3,n=15
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:94   
         2 000342   200027 000044                    BDSC    @AREA_NAME+7,,AUTO       by=0,bit=0,n=36
         2 000343   000000 620006                    EAX0    0,QL
         2 000344   200027 236100                    LDQ     @AREA_NAME+7,,AUTO
         2 000345   000003 736000                    QLS     3
         2 000346   200026 036100                    ADLQ    @AREA_NAME+6,,AUTO
         2 000347   200012 471500                    LDP1    @SET,,AUTO
         2 000350   100003 756110                    STQ     3,X0,PR1

      593     2624    3               EIS$ = ADDR(UWA.SM_REC.NXTPNT);

   2624  2 000351   000023 236000 3                  LDQ     19
         2 000352   000000 756000 0                  STQ     EIS$

      594     2625    3               SET.NEXT_OFFSET(SET_INDX)= ADSC9.EISADDR*8 + ADSC9.BYT_OFF;

   2625  2 000353   000000 470400 0                  LDP0    EIS$
         2 000354   003100 061500                    CSR     bolr='003'O
         2 000355   000000 400003                    BDSC    0,,PR0                   by=2,bit=0,n=3
         2 000356   200026 000044                    BDSC    @AREA_NAME+6,,AUTO       by=0,bit=0,n=36
         2 000357   003100 061500                    CSR     bolr='003'O
         2 000360   000000 030017                    BDSC    0,,PR0                   by=0,bit=3,n=15
         2 000361   200027 000044                    BDSC    @AREA_NAME+7,,AUTO       by=0,bit=0,n=36
         2 000362   200027 236100                    LDQ     @AREA_NAME+7,,AUTO
         2 000363   000003 736000                    QLS     3
         2 000364   200026 036100                    ADLQ    @AREA_NAME+6,,AUTO
         2 000365   100005 756110                    STQ     5,X0,PR1

      595     2626    3               EIS$ = ADDR(UWA.SM_REC.HDPNT); /* Owner pntr */

   2626  2 000366   000024 236000 3                  LDQ     20
         2 000367   000000 756000 0                  STQ     EIS$

      596     2627    3               SET.OWNER_OFFSET(SET_INDX)= ADSC9.EISADDR*8 + ADSC9.BYT_OFF;

   2627  2 000370   000000 470400 0                  LDP0    EIS$
         2 000371   003100 061500                    CSR     bolr='003'O
         2 000372   000000 400003                    BDSC    0,,PR0                   by=2,bit=0,n=3
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:95   
         2 000373   200026 000044                    BDSC    @AREA_NAME+6,,AUTO       by=0,bit=0,n=36
         2 000374   003100 061500                    CSR     bolr='003'O
         2 000375   000000 030017                    BDSC    0,,PR0                   by=0,bit=3,n=15
         2 000376   200027 000044                    BDSC    @AREA_NAME+7,,AUTO       by=0,bit=0,n=36
         2 000377   200027 236100                    LDQ     @AREA_NAME+7,,AUTO
         2 000400   000003 736000                    QLS     3
         2 000401   200026 036100                    ADLQ    @AREA_NAME+6,,AUTO
         2 000402   100001 756110                    STQ     1,X0,PR1

      597     2628    3               END SM_REC;

      598     2629         /* Find owner of SC to get set attributes */
      599     2630    2       CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC);

   2630  2 000403   000025 630400 3                  EPPR0   21
         2 000404   000005 631400 3                  EPPR1   5
         2 000405   000000 701000 xent               TSX1    DB_FUNC_FOR
         2 000406   000000 011000                    NOP     0

      600     2631    2       CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC);

   2631  2 000407   000026 630400 3                  EPPR0   22
         2 000410   000005 631400 3                  EPPR1   5
         2 000411   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000412   000000 011000                    NOP     0

      601     2632         /* Retrieve name of set */
      602     2633    2       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);

   2633  2 000413   000006 630400 3                  EPPR0   6
         2 000414   000005 631400 3                  EPPR1   5
         2 000415   000000 701000 xent               TSX1    DB_FUNC_FOR
         2 000416   000000 011000                    NOP     0

      603     2634    2       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC); /*GET FR RECORD NAME*/

   2634  2 000417   000007 630400 3                  EPPR0   7
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:96   
         2 000420   000005 631400 3                  EPPR1   5
         2 000421   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000422   000000 011000                    NOP     0

      604     2635    2       SET_NAME(SET_INDX)=UWA.SN_REC.SENAME;

   2635  2 000423   000003 236000 0                  LDQ     SET_INDX
         2 000424   000036 402007                    MPY     30,DL
         2 000425   200015 470500                    LDP0    @SET_NAME,,AUTO
         2 000426   040106 100400                    MLR     fill='040'O
         2 000427   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         2 000430   000000 000036                    ADSC9   0,Q,PR0                  cn=0,n=30

      605     2636    2       RETURN;

   2636  2 000431   200024 221300                    LDX1  ! @AREA_NAME+4,,AUTO
         2 000432   000001 702211                    TSX2  ! 1,X1

      606     2637    2   END GET_SET;
      607     2638        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:97   
      608     2639        /***************************************************************/
      609     2640        /*                                                             */
      610     2641        /*           F I N D   T H E    F R   R E C O R D             */
      611     2642        /***************************************************************/
      612     2643    1   CHK_CALC: PROC;

   2643  2 000433   200022 741300       CHK_CALC     STX1  ! @AREA_NAME+2,,AUTO

      613     2644    2       KEY_INDX=-1;

   2644  2 000434   000001 335007                    LCA     1,DL
         2 000435   000004 755000 0                  STA     KEY_INDX

      614     2645    2       IF UWA.RC_REC.PSMODE ~= 1 THEN RETURN;

   2645  2 000436   000271 236000 xsym               LDQ     UWA+185
         2 000437   000001 116007                    CMPQ    1,DL
         2 000440   000442 600000 2                  TZE     GETNXT_SM

   2645  2 000441   000001 702211                    TSX2  ! 1,X1

      615     2646        /**/
      616     2647       /*Now lets go down the rc-sosm chain a get the sm record looking for a sm associated
              2647         with
      617     2648             an sc the has a set type of "1" (Calc set)   */
      618     2649        /**/
      619     2650    2   GETNXT_SM:
      620     2651    2       CALL DB_FUNC_FRS(CAN_RVA.SMREC.SEC,CAN_RVA.RCSOSM.SEC) ;

   2651  2 000442   000027 630400 3     GETNXT_SM    EPPR0   23
         2 000443   000000 631400 3                  EPPR1   0
         2 000444   000000 701000 xent               TSX1    DB_FUNC_FRS
         2 000445   000000 011000                    NOP     0

      621     2652    2       CALL DB_FUNC_GET(CAN_RVA.SMREC.SEC) ;

   2652  2 000446   000021 630400 3                  EPPR0   17
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:98   
         2 000447   000005 631400 3                  EPPR1   5
         2 000450   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000451   000000 011000                    NOP     0

      622     2653    2       CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC) ;

   2653  2 000452   000025 630400 3                  EPPR0   21
         2 000453   000005 631400 3                  EPPR1   5
         2 000454   000000 701000 xent               TSX1    DB_FUNC_FOR
         2 000455   000000 011000                    NOP     0

      623     2654    2       CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ;

   2654  2 000456   000026 630400 3                  EPPR0   22
         2 000457   000005 631400 3                  EPPR1   5
         2 000460   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000461   000000 011000                    NOP     0

      624     2655    2       IF UWA.SC_REC.SETTYPE ~= 1 THEN GOTO GETNXT_SM;

   2655  2 000462   000310 235000 xsym               LDA     UWA+200
         2 000463   000001 115007                    CMPA    1,DL
         2 000464   000442 601000 2                  TNZ     GETNXT_SM

      625     2656        /**/
      626     2657        /*Since we've found a good  "SC" record go get the "CF" record associated with it
      627     2658          in doing so , each time we get a "CF"
      628     2659        */
      629     2660        /**/
      630     2661    2   FD_CF:
      631     2662    2       CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.SMSSCF.SEC) ;

   2662  2 000465   000031 630400 3     FD_CF        EPPR0   25
         2 000466   000000 631400 3                  EPPR1   0
         2 000467   000000 701000 xent               TSX1    DB_FUNC_FRS
         2 000470   000000 011000                    NOP     0

PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:99   
      632     2663    2       IF UWA.DB_STATUS = '02100' THEN GOTO END_CHK_CALC;

   2663  2 000471   040000 106400                    CMPC    fill='040'O
         2 000472   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         2 000473   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000474   000555 600000 2                  TZE     END_CHK_CALC

      633     2664    2       CALL DB_FUNC_GET(CAN_RVA.CFREC.SEC) ;

   2664  2 000475   000031 630400 3                  EPPR0   25
         2 000476   000005 631400 3                  EPPR1   5
         2 000477   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000500   000000 011000                    NOP     0

      634     2665    2       IF UWA.CF_REC.CTLTYP ~= 4 THEN GOTO FD_CF;

   2665  2 000501   000401 235000 xsym               LDA     UWA+257
         2 000502   000004 115007                    CMPA    4,DL
         2 000503   000465 601000 2                  TNZ     FD_CF

      635     2666    2       CALL DB_FUNC_FOR(CAN_RVA.FRCFS.SEC) ;

   2666  2 000504   000033 630400 3                  EPPR0   27
         2 000505   000005 631400 3                  EPPR1   5
         2 000506   000000 701000 xent               TSX1    DB_FUNC_FOR
         2 000507   000000 011000                    NOP     0

      636     2667    2       CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC) ;

   2667  2 000510   000034 630400 3                  EPPR0   28
         2 000511   000005 631400 3                  EPPR1   5
         2 000512   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000513   000000 011000                    NOP     0

      637     2668        /*We now have the standard fr record                                        */
      638     2669    2       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);

PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:100  
   2669  2 000514   000006 630400 3                  EPPR0   6
         2 000515   000005 631400 3                  EPPR1   5
         2 000516   000000 701000 xent               TSX1    DB_FUNC_FOR
         2 000517   000000 011000                    NOP     0

      639     2670    2       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);

   2670  2 000520   000007 630400 3                  EPPR0   7
         2 000521   000005 631400 3                  EPPR1   5
         2 000522   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000523   000000 011000                    NOP     0

      640     2671        /* NOW THAT WE'VE FOUND A CALC KEY FEILD IN THE SCHEMA
      641     2672          MATCH IT UP WITH THE FIELD IN THE ITEM TABLE AND PUT
      642     2673           THE OFFSET NTO THE ITEM TABLE IN KEY_ARRAY         */
      643     2674    3       DO I = 0 TO NUM_ITEMS-1 BY 1;

   2674  2 000524   000001 450000 0                  STZ     I
         2 000525   000550 710000 2                  TRA     s:2681+3

      644     2675    3           IF UWA.SN_REC.SENAME = ITEM_NAME(I) THEN

   2675  2 000526   000001 236000 0                  LDQ     I
         2 000527   000036 402007                    MPY     30,DL
         2 000530   200014 470500                    LDP0    @ITEM_NAME,,AUTO
         2 000531   040106 106400                    CMPC    fill='040'O
         2 000532   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         2 000533   000000 000036                    ADSC9   0,Q,PR0                  cn=0,n=30
         2 000534   000545 601000 2                  TNZ     s:2681

      645     2676    4           DO;

      646     2677    4               KEY_INDX=KEY_INDX+1;

   2677  2 000535   000004 054000 0                  AOS     KEY_INDX

      647     2678    4               KEY_ARRAY.MEMBER(KEY_INDX)=I;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:101  

   2678  2 000536   000001 235000 0                  LDA     I
         2 000537   200013 471500                    LDP1    @KEY_ARRAY,,AUTO
         2 000540   000004 720000 0                  LXL0    KEY_INDX
         2 000541   100001 755110                    STA     1,X0,PR1

      648     2679    4               KEY_ARRAY.SIZ = KEY_INDX+1;

   2679  2 000542   000004 235000 0                  LDA     KEY_INDX
         2 000543   000001 035007                    ADLA    1,DL
         2 000544   100000 755100                    STA     0,,PR1

      649     2680    4               END;

      650     2681    3           END;

   2681  2 000545   000001 235000 0                  LDA     I
         2 000546   000001 035007                    ADLA    1,DL
         2 000547   000001 755000 0                  STA     I
         2 000550   200007 470500                    LDP0    @NUM_ITEMS,,AUTO
         2 000551   000001 236000 0                  LDQ     I
         2 000552   000000 116100                    CMPQ    0,,PR0
         2 000553   000526 602000 2                  TNC     s:2675

      651     2682    2       GOTO FD_CF;

   2682  2 000554   000465 710000 2                  TRA     FD_CF

      652     2683    2   END_CHK_CALC:
      653     2684    2       RETURN;

   2684  2 000555   200022 221300       END_CHK_CALC LDX1  ! @AREA_NAME+2,,AUTO
         2 000556   000001 702211                    TSX2  ! 1,X1

      654     2685    2   END CHK_CALC;
      655     2686        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:102  
      656     2687    1   FIND_FR: PROC;

   2687  2 000557   200022 741300       FIND_FR      STX1  ! @AREA_NAME+2,,AUTO

      657     2688    2       UWA.DB_STATUS = '00000';

   2688  2 000560   040000 100400                    MLR     fill='040'O
         2 000561   000002 000005 1                  ADSC9   2                        cn=0,n=5
         2 000562   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5

      658     2689    2       ITM_INDX=-1;

   2689  2 000563   000001 335007                    LCA     1,DL
         2 000564   000002 755000 0                  STA     ITM_INDX

      659     2690    3       DO WHILE (UWA.DB_STATUS~='02100');

   2690  2 000565   040000 106400                    CMPC    fill='040'O
         2 000566   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         2 000567   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000570   000635 600000 2                  TZE     s:2713

      660     2691    3           CALL DB_FUNC_FRS(CAN_RVA.FRREC.SEC,CAN_RVA.RCFR.SEC);

   2691  2 000571   000035 630400 3                  EPPR0   29
         2 000572   000000 631400 3                  EPPR1   0
         2 000573   000000 701000 xent               TSX1    DB_FUNC_FRS
         2 000574   000000 011000                    NOP     0

      661     2692    3           IF UWA.DB_STATUS = '02100' THEN

   2692  2 000575   040000 106400                    CMPC    fill='040'O
         2 000576   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         2 000577   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000600   000607 601000 2                  TNZ     s:2699

      662     2693    4           DO;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:103  

      663     2694    4               NUM_ITEMS=ITM_INDX+1;

   2694  2 000601   000002 235000 0                  LDA     ITM_INDX
         2 000602   000001 035007                    ADLA    1,DL
         2 000603   200007 470500                    LDP0    @NUM_ITEMS,,AUTO
         2 000604   000000 755100                    STA     0,,PR0

      664     2695    4               RETURN;

   2695  2 000605   200022 221300                    LDX1  ! @AREA_NAME+2,,AUTO
         2 000606   000001 702211                    TSX2  ! 1,X1

      665     2696    4               END;
      666     2697    3           ELSE
      667     2698    4           DO;

      668     2699    4               CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC);

   2699  2 000607   000034 630400 3                  EPPR0   28
         2 000610   000005 631400 3                  EPPR1   5
         2 000611   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000612   000000 011000                    NOP     0

      669     2700         /* Get FR rec to get item descriptions then */
      670     2701         /* get name of field w/in the record */
      671     2702    5               IF UWA.FR_REC.SYN = 0 THEN DO;

   2702  2 000613   000332 235000 xsym               LDA     UWA+218
         2 000614   000631 601000 2                  TNZ     s:2712

      672     2703    5                   CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);

   2703  2 000615   000006 630400 3                  EPPR0   6
         2 000616   000005 631400 3                  EPPR1   5
         2 000617   000000 701000 xent               TSX1    DB_FUNC_FOR
         2 000620   000000 011000                    NOP     0
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:104  

      673     2704    5                   CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);

   2704  2 000621   000007 630400 3                  EPPR0   7
         2 000622   000005 631400 3                  EPPR1   5
         2 000623   000000 701000 xent               TSX1    DB_FUNC_GET
         2 000624   000000 011000                    NOP     0

      674     2705         /*
      675     2706            Call print routine to print items.
      676     2707         */
      677     2708    5                   KEY_INDX=-1;

   2708  2 000625   000001 335007                    LCA     1,DL
         2 000626   000004 755000 0                  STA     KEY_INDX

      678     2709    5                   CALL ITEM_STORE;

   2709  2 000627   000643 701000 2                  TSX1    ITEM_STORE
         2 000630   000000 011000                    NOP     0

      679     2710    5                   END;

      680     2711    4               END;

      681     2712    3           END;

   2712  2 000631   040000 106400                    CMPC    fill='040'O
         2 000632   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         2 000633   000000 000005 1                  ADSC9   0                        cn=0,n=5
         2 000634   000571 601000 2                  TNZ     s:2691

      682     2713    2       NUM_ITEMS=ITM_INDX+1;

   2713  2 000635   000002 235000 0                  LDA     ITM_INDX
         2 000636   000001 035007                    ADLA    1,DL
         2 000637   200007 470500                    LDP0    @NUM_ITEMS,,AUTO
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:105  
         2 000640   000000 755100                    STA     0,,PR0

      683     2714    2       RETURN;

   2714  2 000641   200022 221300                    LDX1  ! @AREA_NAME+2,,AUTO
         2 000642   000001 702211                    TSX2  ! 1,X1

      684     2715    2   END FIND_FR;
      685     2716        %EJECT;
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:106  
      686     2717        /***************************************************************/
      687     2718        /*                                                              */
      688     2719        /*           STORE  ITEM INTO ITEM TABLE                        */
      689     2720        /***************************************************************/
      690     2721    1   ITEM_STORE: PROC;

   2721  2 000643   200024 741300       ITEM_STORE   STX1  ! @AREA_NAME+4,,AUTO

      691     2722    2       ITM_INDX=ITM_INDX+1;

   2722  2 000644   000002 054000 0                  AOS     ITM_INDX

      692     2723    2       ITEM_NAME(ITM_INDX)=UWA.SN_REC.SENAME;

   2723  2 000645   000002 236000 0                  LDQ     ITM_INDX
         2 000646   000036 402007                    MPY     30,DL
         2 000647   200014 470500                    LDP0    @ITEM_NAME,,AUTO
         2 000650   040106 100400                    MLR     fill='040'O
         2 000651   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         2 000652   000000 000036                    ADSC9   0,Q,PR0                  cn=0,n=30

      693     2724    2       ITEM.EIS(ITM_INDX)=UWA.FR_REC.BUFLOC;

   2724  2 000653   000002 236000 0                  LDQ     ITM_INDX
         2 000654   000006 402007                    MPY     6,DL
         2 000655   200010 471500                    LDP1    @ITEM,,AUTO
         2 000656   000351 235000 xsym               LDA     UWA+233
         2 000657   100005 755106                    STA     5,QL,PR1

      694     2725    2       CALL INDEX(ITEM.NAME_SIZ(ITM_INDX),' ',ITEM_NAME(ITM_INDX));

   2725  2 000660   000002 236000 0                  LDQ     ITM_INDX
         2 000661   000036 402007                    MPY     30,DL
         2 000662   200026 756100                    STQ     @AREA_NAME+6,,AUTO
         2 000663   000002 236000 0                  LDQ     ITM_INDX
         2 000664   000006 402007                    MPY     6,DL
         2 000665   000000 620006                    EAX0    0,QL
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:107  
         2 000666   200026 235100                    LDA     @AREA_NAME+6,,AUTO
         2 000667   000000 124505                    SCM     mask='000'O
         2 000670   000000 000036                    ADSC9   0,A,PR0                  cn=0,n=30
         2 000671   000010 000001 3                  ADSC9   8                        cn=0,n=1
         2 000672   100000 000110                    ARG     0,X0,PR1

      695     2726    2       EIS$=ADDR(UWA.FR_REC.BUFLOC);

   2726  2 000673   000037 236000 3                  LDQ     31
         2 000674   000000 756000 0                  STQ     EIS$

      696     2727    2       ITEM.OFFSET(ITM_INDX)=ADSC9.EISADDR*8 + ADSC9.BYT_OFF;
              2727                /*OFFSET IS IN HALF-BYTES*/

   2727  2 000675   000000 473400 0                  LDP3    EIS$
         2 000676   003100 061500                    CSR     bolr='003'O
         2 000677   300000 400003                    BDSC    0,,PR3                   by=2,bit=0,n=3
         2 000700   200026 000044                    BDSC    @AREA_NAME+6,,AUTO       by=0,bit=0,n=36
         2 000701   003100 061500                    CSR     bolr='003'O
         2 000702   300000 030017                    BDSC    0,,PR3                   by=0,bit=3,n=15
         2 000703   200027 000044                    BDSC    @AREA_NAME+7,,AUTO       by=0,bit=0,n=36
         2 000704   200027 236100                    LDQ     @AREA_NAME+7,,AUTO
         2 000705   000003 736000                    QLS     3
         2 000706   200026 036100                    ADLQ    @AREA_NAME+6,,AUTO
         2 000707   100001 756110                    STQ     1,X0,PR1

      697     2728    2       ITEM.BEIST(ITM_INDX)=UWA.FR_REC.BEIST;

   2728  2 000710   000350 235000 xsym               LDA     UWA+232
         2 000711   100004 755110                    STA     4,X0,PR1

      698     2729    3       DO CASE(UWA.FR_REC.FTYP);

   2729  2 000712   000334 236000 xsym               LDQ     UWA+220
         2 000713   000005 136007                    SBLQ    5,DL
         2 000714   000005 116007                    CMPQ    5,DL
         2 000715   000717 602006 2                  TNC     s:2729+5,QL
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:108  
         2 000716   000754 710000 2                  TRA     s:2737
         2 000717   000724 710000 2                  TRA     s:2731
         2 000720   000754 710000 2                  TRA     s:2737
         2 000721   000754 710000 2                  TRA     s:2737
         2 000722   000754 710000 2                  TRA     s:2737
         2 000723   000740 710000 2                  TRA     s:2734

      699     2730    3       CASE(5);

      700     2731    3           ITEM.TYPE(ITM_INDX) = UWA.FR_REC.FTYP;

   2731  2 000724   000334 235000 xsym               LDA     UWA+220
         2 000725   100003 755110                    STA     3,X0,PR1

      701     2732    3           ITEM.LEN(ITM_INDX)=ADSC9.SIZE;

   2732  2 000726   000000 636010                    EAQ     0,X0
         2 000727   000022 732000                    QRS     18
         2 000730   000044 402007                    MPY     36,DL
         2 000731   000000 116003                    CMPQ    0,DU
         2 000732   000734 605000 2                  TPL     s:2732+6
         2 000733   000044 036003                    ADLQ    36,DU
         2 000734   003106 061500                    CSR     bolr='003'O
         2 000735   300000 460014                    BDSC    0,,PR3                   by=2,bit=6,n=12
         2 000736   100002 000044                    BDSC    2,Q,PR1                  by=0,bit=0,n=36
         2 000737   000767 710000 2                  TRA     s:2740

      702     2733    3       CASE(9);

      703     2734    3           ITEM.TYPE(ITM_INDX) = UWA.FR_REC.FTYP;

   2734  2 000740   000334 235000 xsym               LDA     UWA+220
         2 000741   100003 755110                    STA     3,X0,PR1

      704     2735    3           ITEM.LEN(ITM_INDX)=ADSC9.SIZE;

   2735  2 000742   000000 636010                    EAQ     0,X0
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:109  
         2 000743   000022 732000                    QRS     18
         2 000744   000044 402007                    MPY     36,DL
         2 000745   000000 116003                    CMPQ    0,DU
         2 000746   000750 605000 2                  TPL     s:2735+6
         2 000747   000044 036003                    ADLQ    36,DU
         2 000750   003106 061500                    CSR     bolr='003'O
         2 000751   300000 460014                    BDSC    0,,PR3                   by=2,bit=6,n=12
         2 000752   100002 000044                    BDSC    2,Q,PR1                  by=0,bit=0,n=36
         2 000753   000767 710000 2                  TRA     s:2740

      705     2736    3       CASE(ELSE);

      706     2737    3           ITEM.TYPE(ITM_INDX) = UWA.FR_REC.FTYP;

   2737  2 000754   000334 235000 xsym               LDA     UWA+220
         2 000755   100003 755110                    STA     3,X0,PR1

      707     2738    3           ITEM.LEN(ITM_INDX)=NDSC.SIZE;

   2738  2 000756   000000 636010                    EAQ     0,X0
         2 000757   000022 732000                    QRS     18
         2 000760   000044 402007                    MPY     36,DL
         2 000761   000000 116003                    CMPQ    0,DU
         2 000762   000764 605000 2                  TPL     s:2738+6
         2 000763   000044 036003                    ADLQ    36,DU
         2 000764   003106 061500                    CSR     bolr='003'O
         2 000765   300000 630006                    BDSC    0,,PR3                   by=3,bit=3,n=6
         2 000766   100002 000044                    BDSC    2,Q,PR1                  by=0,bit=0,n=36

      708     2739    3           END;

      709     2740    2       RETURN;

   2740  2 000767   200024 221300                    LDX1  ! @AREA_NAME+4,,AUTO
         2 000770   000001 702211                    TSX2  ! 1,X1

ITM_INDX
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:110  
 Sect OctLoc
   0     002   777777 777777                                                    ....

SET_INDX
 Sect OctLoc
   0     003   777777 777777                                                    ....

KEY_INDX
 Sect OctLoc
   0     004   777777 777777                                                    ....

(unnamed)
 Sect OctLoc
   1     000   060062 061060   060040 040040   060060 060060   060040 040040    02100   00000
   1     004   123117 040040   123115 040040                                    SO  SM

(unnamed)
 Sect OctLoc
   3     000   000002 000000   000062 406000   000063 006000   000064 406000    .....2...3...4..
   3     004   000022 406000   000001 000000   000047 406000   000075 406000    .........'...=..
   3     010   040040 040040   000066 406000   000030 406000   000001 406000        .6..........
   3     014   000150 006000   000031 406000   000070 406000   000356 006000    .h.......8......
   3     020   000355 006000   000071 406000   000371 006000   000370 006000    .....9..........
   3     024   000372 006000   000034 406000   000065 406000   000071 406000    .........5...9..
   3     030   000031 406000   000073 406000   000041 406000   000014 406000    .....;...!......
   3     034   000067 406000   000067 406000   000027 406000   000351 006000    .7...7..........
      710     2741    2   END ITEM_STORE;
      711     2742    1   END ZIC$RREC;
      712     2743        %EOD;

PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:111  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIC$RREC.

   Procedure ZIC$RREC requires 505 words for executable code.
   Procedure ZIC$RREC requires 24 words of local(AUTO) storage.
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:112  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:113  
          MINI XREF LISTING

ADSC9.BYT_OFF
       148**DCL      2614>>ASSIGN   2616>>ASSIGN   2623>>ASSIGN   2625>>ASSIGN   2627>>ASSIGN   2727>>ASSIGN
ADSC9.EISADDR
       147**DCL      2614>>ASSIGN   2616>>ASSIGN   2623>>ASSIGN   2625>>ASSIGN   2627>>ASSIGN   2727>>ASSIGN
ADSC9.SIZE
       151**DCL      2732>>ASSIGN   2735>>ASSIGN
AREA_NAME
       141**DCL        34--PROC     2573>>IF
CAN_RVA.ACRA.SEC
       860**DCL      2570<>CALL
CAN_RVA.CFREC.SEC
      1034**DCL      2662<>CALL     2664<>CALL
CAN_RVA.FRCFS.SEC
       893**DCL      2666<>CALL
CAN_RVA.FRREC.SEC
      1022**DCL      2667<>CALL     2691<>CALL     2699<>CALL
CAN_RVA.NULL
      1167**DCL      2594<>CALL     2609<>CALL
CAN_RVA.OARC.SEC
       911**DCL      2551<>CALL
CAN_RVA.OAREC.SEC
      1007**DCL      2518<>CALL     2548<>CALL
CAN_RVA.RAREC.SEC
      1019**DCL      2568<>CALL     2569<>CALL
CAN_RVA.RCFR.SEC
       926**DCL      2691<>CALL
CAN_RVA.RCRA.SEC
       929**DCL      2568<>CALL     2579<>CALL
CAN_RVA.RCREC.SEC
      1013**DCL      2551<>CALL     2553<>CALL
CAN_RVA.RCSOSM.SEC
       932**DCL      2594<>CALL     2651<>CALL
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:114  
CAN_RVA.SCREC.SEC
      1016**DCL      2631<>CALL     2654<>CALL
CAN_RVA.SCSOSM.SEC
       941**DCL      2630<>CALL     2653<>CALL
CAN_RVA.SMREC.SEC
      1028**DCL      2621<>CALL     2651<>CALL     2652<>CALL
CAN_RVA.SMSSCF.SEC
       956**DCL      2662<>CALL
CAN_RVA.SNREC.SEC
      1040**DCL      2560<>CALL     2572<>CALL     2634<>CALL     2670<>CALL     2704<>CALL
CAN_RVA.SNSE.SEC
       974**DCL      2559<>CALL     2571<>CALL     2633<>CALL     2669<>CALL     2703<>CALL
CAN_RVA.SOREC.SEC
      1025**DCL      2612<>CALL
CHK_CALC
      2643**PROC     2529--CALL
DB_FUNC_FDR
       168**DCL-ENT  2518--CALL     2548--CALL
DB_FUNC_FOR
       171**DCL-ENT  2559--CALL     2570--CALL     2571--CALL     2579--CALL     2630--CALL     2633--CALL
      2653--CALL     2666--CALL     2669--CALL     2703--CALL
DB_FUNC_FRS
       167**DCL-ENT  2551--CALL     2568--CALL     2594--CALL     2651--CALL     2662--CALL     2691--CALL
DB_FUNC_GET
       169**DCL-ENT  2553--CALL     2560--CALL     2569--CALL     2572--CALL     2609--CALL     2612--CALL
      2621--CALL     2631--CALL     2634--CALL     2652--CALL     2654--CALL     2664--CALL     2667--CALL
      2670--CALL     2699--CALL     2704--CALL
EIS$
       160**DCL       145--IMP-PTR   152--IMP-PTR  2613<<ASSIGN   2614>>ASSIGN   2614>>ASSIGN   2615<<ASSIGN
      2616>>ASSIGN   2616>>ASSIGN   2622<<ASSIGN   2623>>ASSIGN   2623>>ASSIGN   2624<<ASSIGN   2625>>ASSIGN
      2625>>ASSIGN   2626<<ASSIGN   2627>>ASSIGN   2627>>ASSIGN   2726<<ASSIGN   2727>>ASSIGN   2727>>ASSIGN
      2732>>ASSIGN   2735>>ASSIGN   2738>>ASSIGN
END_CHK_CALC IN PROCEDURE CHK_CALC
      2684**LABEL    2663--GOTO
ERROR_CODE
       137**DCL        34--PROC     2517<<ASSIGN   2522<<ASSIGN   2526>>IF       2555<<ASSIGN
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:115  
FD_CF IN PROCEDURE CHK_CALC
      2662**LABEL    2665--GOTO     2682--GOTO
FIND_FR
      2687**PROC     2528--CALL
FIND_RA
      2567**PROC     2527--CALL
FIND_RC
      2537**PROC     2525--CALL
FIND_SC
      2590**PROC     2530--CALL
GETNXT_SM IN PROCEDURE CHK_CALC
      2651**LABEL    2655--GOTO
GET_SET
      2607**PROC     2598--CALL
I
       161**DCL      2674<<DOINDEX  2675>>IF       2678>>ASSIGN
ITEM
        56**DCL        34--PROC
ITEM.BEIST
        61**DCL      2728<<ASSIGN
ITEM.EIS
        62**DCL      2724<<ASSIGN
ITEM.LEN
        59**DCL      2732<<ASSIGN   2735<<ASSIGN   2738<<ASSIGN
ITEM.NAME_SIZ
        57**DCL      2725<<CALLBLT
ITEM.OFFSET
        58**DCL      2727<<ASSIGN
ITEM.TYPE
        60**DCL      2731<<ASSIGN   2734<<ASSIGN   2737<<ASSIGN
ITEM_NAME
        53**DCL        34--PROC     2675>>IF       2723<<ASSIGN   2725>>CALLBLT
ITEM_STORE
      2721**PROC     2709--CALL
ITM_INDX
       163**DCL      2545<<ASSIGN   2689<<ASSIGN   2694>>ASSIGN   2713>>ASSIGN   2722<<ASSIGN   2722>>ASSIGN
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:116  
      2723>>ASSIGN   2724>>ASSIGN   2725>>CALLBLT  2725>>CALLBLT  2727>>ASSIGN   2728>>ASSIGN   2731>>ASSIGN
      2732>>ASSIGN   2734>>ASSIGN   2735>>ASSIGN   2737>>ASSIGN   2738>>ASSIGN
KEY_ARRAY
       113**DCL        34--PROC
KEY_ARRAY.MEMBER
       115**DCL      2678<<ASSIGN
KEY_ARRAY.SIZ
       114**DCL      2679<<ASSIGN
KEY_INDX
       165**DCL      2547<<ASSIGN   2644<<ASSIGN   2677<<ASSIGN   2677>>ASSIGN   2678>>ASSIGN   2679>>ASSIGN
      2708<<ASSIGN
NDSC.SIZE
       159**DCL      2738>>ASSIGN
NEXT_RA IN PROCEDURE FIND_RA
      2568**LABEL    2574--GOTO
NUM_ITEMS
        50**DCL        34--PROC     2674>>DOINDEX  2694<<ASSIGN   2713<<ASSIGN
NUM_SETS
        85**DCL        34--PROC     2600<<ASSIGN
RA_REC
       121**DCL        34--PROC
RA_REC.CALC_HDRS
       124**DCL      2577<<ASSIGN
RA_REC.HDR_OFFSET
       125**DCL      2578<<ASSIGN
RA_REC.HIDBK
       123**DCL      2576<<ASSIGN
RA_REC.LOWDBK
       122**DCL      2575<<ASSIGN
REC_NAME
        44**DCL        34--PROC     2561<<ASSIGN   2562>>CALLBLT
REC_NAME_SIZ
        47**DCL        34--PROC     2562<<CALLBLT
REC_SIZ
        41**DCL        34--PROC     2563<<ASSIGN
REC_TYPE
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:117  
        38**DCL        34--PROC     2520>>IF       2549>>DOWHILE
SET
        91**DCL        34--PROC
SET.NEXT_OFFSET
        97**DCL      2616<<ASSIGN   2625<<ASSIGN
SET.OWNER_OFFSET
        93**DCL      2627<<ASSIGN
SET.PRIOR_OFFSET
        95**DCL      2614<<ASSIGN   2623<<ASSIGN
SET_INDX
       164**DCL      2546<<ASSIGN   2600>>ASSIGN   2614>>ASSIGN   2616>>ASSIGN   2623>>ASSIGN   2625>>ASSIGN
      2627>>ASSIGN   2635>>ASSIGN
SET_NAME
        88**DCL        34--PROC     2635<<ASSIGN
UWA.AC_REC.CALC_NEXT
      1979**DCL      1980--REDEF
UWA.AC_REC.CALC_PRIOR
      1988**DCL      1989--REDEF
UWA.AC_REC.DEFAULTS
      1937**DCL      1938--REDEF
UWA.AC_REC.FILE_CODE
      1942**DCL      1943--REDEF
UWA.AC_REC.FLAG1.ERROR_TYPE
      1939**DCL      1940--REDEF
UWA.AC_REC.PG_TYPE
      1954**DCL      1955--REDEF
UWA.AD_REC.ADDATE
      1919**DCL      1920--REDEF
UWA.CF_REC.CTLTYP
      2075**DCL      2665>>IF
UWA.DB_RECORD_NAME
      1873**DCL      2610>>IF       2619>>IF
UWA.DB_STATUS
      1867**DCL      2549>>DOWHILE  2552>>IF       2591<<ASSIGN   2592>>DOWHILE  2595>>IF       2663>>IF
      2688<<ASSIGN   2690>>DOWHILE  2692>>IF
UWA.FR_REC.BEIST
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:118  
      2048**DCL      2728>>ASSIGN
UWA.FR_REC.BUFLOC
      2049**DCL      2724>>ASSIGN   2726--ASSIGN
UWA.FR_REC.FTYP
      2036**DCL      2729>>DOCASE   2731>>ASSIGN   2734>>ASSIGN   2737>>ASSIGN
UWA.FR_REC.SYN
      2034**DCL      2702>>IF
UWA.RA_REC.CHDRS1
      2031**DCL      2577>>ASSIGN
UWA.RA_REC.HDBK
      2030**DCL      2576>>ASSIGN
UWA.RA_REC.HOFFS
      2032**DCL      2578>>ASSIGN
UWA.RA_REC.LDBK
      2029**DCL      2575>>ASSIGN
UWA.RC_REC.LSIZE
      2012**DCL      2563>>ASSIGN
UWA.RC_REC.PSMODE
      1999**DCL      2645>>IF
UWA.RC_REC.RTYPE
      1998**DCL      2544<<ASSIGN   2549>>DOWHILE  2549>>DOWHILE
UWA.SC_REC.SETTYPE
      2015**DCL      2655>>IF
UWA.SF_REC.DBKOA
      1885**DCL      2518<>CALL     2548<>CALL
UWA.SM_REC.HDPNT
      2066**DCL      2626--ASSIGN
UWA.SM_REC.NXTPNT
      2064**DCL      2624--ASSIGN
UWA.SM_REC.PRIPNT
      2065**DCL      2622--ASSIGN
UWA.SN_REC.SENAME
      2098**DCL      2561>>ASSIGN   2573>>IF       2635>>ASSIGN   2675>>IF       2723>>ASSIGN
UWA.SO_REC.NXTPNT
      2053**DCL      2615--ASSIGN
UWA.SO_REC.PRIPNT
PL6.E3A0      #005=ZIC$RREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:119  
      2054**DCL      2613--ASSIGN
ZI$DIR.ALTKEY
      2432**DCL      2433--REDEF    2434--REDEF
ZI$DIR.AREAFID
      2398**DCL      2399--REDEF
ZI$DIR.DATE
      2437**DCL      2441--REDEF
ZI$DIR.DEST_SEED
      2393**DCL      2394--REDEF    2395--REDEF
ZI$DIR.ENCP_SEED
      2390**DCL      2391--REDEF    2392--REDEF
ZI$DIR.REPRT_ZERO
      2424**DCL      2425--REDEF
ZI$DIR.SCHFID
      2396**DCL      2397--REDEF
ZI$DIR.TIME
      2442**DCL      2447--REDEF

PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:120  
      713        1        /*M*     ZIC$REDR           IDS/II  RETRIEVE RECORD FROM AREA  */
      714        2        /*T***********************************************************/
      715        3        /*T*                                                         */
      716        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      717        5        /*T*                                                         */
      718        6        /*T***********************************************************/
      719        7        /*P*
      720        8             NAME: ZIC$REDR
      721        9             PURPOSE:  RETREIVE A RECORD FROM AN IDS/II AREA AND
      722       10                       WRITE IT OUT TO A TEMP FILE (AREA NAME !! '$')
      723       11                 INPUTS
      724       12                 OUTPUT
      725       13                   ERROR_CODE = ERROR
      726       14                       0005 = WRONG PAGE TYPE FOR AREA
      727       15                       0006 = OPEN ERROR ON AREA !! $
      728       16                       0007 = WRITE ERROR
      729       17                       0008 = READ ERROR
      730       18                       0009 = GETDCB EROR
      731       19                    IDS_AREA_NM =AREA NAME
      732       20        ************************************************************/
      733       21        ZIC$REDR: PROC(IDS_AREA_NM,ERROR_CODE);
      734       22    1   DCL IDS_AREA_NM CHAR(31) ;
      735       23    1   DCL ERROR_CODE SBIN WORD;
      736       24    1   DCL INDX UBIN WORD STATIC ALIGNED;
      737       25    1   DCL SYS_FUNC_OPEN ENTRY ALTRET; /*D* DBCS  MONITOR OOPEN  */
      738       26    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
      739       27    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      740       28    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      741       29    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      742       30    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      743       31    1   DCL REC_CNT UBIN(36) STATIC ALIGNED;
                31            /*D* REC_CNT =RECORD COUNT FOR THE PAGE THAT WE ON */
      744       32    1   DCL TEMP_KEYFID CHAR(30) STATIC ALIGNED;
      745       33    1   DCL 1 PAGE_FRMT STATIC ALIGNED,
      746       34    1         2 * CHAR(4) INIT('PAGE'),
      747       35    1         2 P1 CHAR(6) INIT(' ');
      748       36         /*E* ERROR: ZIU-04003-C
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:121  
      749       37           MESSAGE: Incorrect page type for secondary key file %U1.
      750       38           */
      751       39         /*E* ERROR: ZIU-04004-C
      752       40           MESSAGE: Error during rebuilding process...%U1 not modified.
      753       41           */
      754       42        /**/
      755       43        %INCLUDE ZI$PG_STRUCTS;
      756      146         %DATA_PG;
      757      165        /* the above used to be (stclass=static symdef) but now is symdef'ed
      758      166        in ziu$q2di */
      759      167        %INCLUDE ZI_GLOBAL_DBUTIL;
      760      345         %SYS_FUNC;
      761      437         %MISC_DCLS;
      762      490        /*the above used to be (stclass=static symdef) but is now
      763      491        symdef'ed in ziu$q2di */
      764      492        %INCLUDE CP_6_SUBS;
      765     1032        %INCLUDE ZI_UWA_C;
      766     1722        %ZI$UWAB;
      767     2062         %INCLUDE ZI$DIR;
      768     2219        /* the above used to be zi_dir */
      769     2220        %DIR;
      770     2364        /**/
      771     2365        /* 1. Check to make that we have an area thats integrated,has a secondary key file,
              2365        and is
      772     2366                 permanent.
      773     2367         2. Open the area as input and create a dcbname thats the same as the area name only
              2367         with a "$"
      774     2368         concatoned on the end for the open of the key file associated with it. The key file
              2368         set
      775     2369              command is also merged in the merge open.
      776     2370        */
      777     2371        /**/
      778     2372    1       IF UWA.AC_REC.P_TYP.P_MD > '0'B THEN GOTO WRGPTYP_ERR;
      779     2373    1       ZI$DIR.AREA_NM.NAME.TEXT=IDS_AREA_NM;
      780     2374    1       CALL INDEX(INDX,' ',ZI$DIR.AREA_NM.NAME.TEXT);
      781     2375    1       ZI$DIR.AREA_NM.NAME.CNT=INDX;
      782     2376    1   /**/ DCBNMSF = VECTOR(ZI$DIR.AREA_NM.NAME);
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:122  
      783     2377    1       CALL SYS_FUNC_GETDCB ALTRET(GTDCB_ERR);
      784     2378    1       ZI$DIR.AREA_NM.DCB#=DCBSF;
      785     2379    1   /**/ TESTSF = %NO#;
      786     2380    1   /**/ ORGSF = %IDS#;
      787     2381    1   /**/ FULLSF = %YES#;
      788     2382    1   /**/ FUNSF = %IN#;
      789     2383    1   /**/ SHARESF = %IN#;
      790     2384    1   /**/ ACSSF = %DIRECT#;
      791     2385    1   /**/ ASNSF = %FILE#;
      792     2386    1   /**/ FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;
      793     2387    1       CALL SYS_FUNC_OPEN ALTRET(OPN_ERR);
      794     2388    1       IF ZI$DIR.AREA_NM.NAME.CNT > 30 THEN KEYFID.NM.CNT = 30;
      795     2389    1       ELSE KEYFID.NM.CNT=ZI$DIR.AREA_NM.NAME.CNT +1;
      796     2390    1       CALL CONCAT(TEMP_KEYFID,SUBSTR(ZI$DIR.AREA_NM.NAME.TEXT,0,KEYFID.NM.CNT-1),'$');
      797     2391    1       KEYFID.NM.TEXT=TEMP_KEYFID;
      798     2392    1   /**/ DCBNMSF = VECTOR(KEYFID.NM);
      799     2393    1       CALL SYS_FUNC_GETDCB ALTRET(GTDCB_ERR);
      800     2394    1       KEYFID.DCB# = DCBSF;
      801     2395    1   /**/ ORGSF = %CONSEC#;
      802     2396    1   /**/ TESTSF= %NO#;
      803     2397    1   /**/ ACSSF = %SEQUEN#;
      804     2398    1   /**/ FUNSF = %CREATE#;
      805     2399    1   /**/ ASNSF = %FILE#;
      806     2400    1   /**/ FIDSF = KEYFID.NM.TEXT;
      807     2401    1   /**/ SHARESF = %ALL#;
      808     2402    1       CALL SYS_FUNC_OPEN ALTRET(OPN_ERR);
      809     2403        /**/
      810     2404         /*Initialize all values when entering this routine*/
      811     2405        /**/
      812     2406    1       I_O_SIZE=0; /*  # of pages read in or writen out*/
      813     2407    1       OUT_INDX=7; /*Set to a higher value than I_O_SIZE to initiate the start of this
              2407        routine with a read*/
      814     2408    1       REC_CNT=0; /*Index to the location of the record on the data page*/
      815     2409        /**/
      816     2410        /*Set of the values of the data page range  and store them into varibles for the do
              2410        statment*
      817     2411            Rb - is the beginning page range
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:123  
      818     2412            re - is the ending page range
      819     2413        */
      820     2414        /**/
      821     2415    1       RB=1; /*Beginning page #*/
      822     2416    1       IF UWA.AC_REC.FIR_INV_PG=0 THEN RE=UWA.AC_REC.MAX_PAGE;
      823     2417    1       ELSE RE=UWA.AC_REC.FIR_INV_PG-1;
      824     2418    2       DO RB=RB TO RE BY 1;
      825     2419    2           IF OUT_INDX >= I_O_SIZE THEN
      826     2420    3           DO;
      827     2421    3               I_O_SIZE=RE-RB;
      828     2422    3               IF I_O_SIZE >=8 THEN I_O_SIZE = 7;
      829     2423    3               I_O_KEY = RB;
      830     2424    3    /**/       DCBSF = ZI$DIR.AREA_NM.DCB#;
      831     2425    3    /**/       BUFSF = VECTOR(I_O_BUF);
      832     2426    3    /**/       BUFLNSF = 4096 * (I_O_SIZE +1);
      833     2427    3    /**/       FULLSF = %YES#;
      834     2428    3    /**/       ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
      835     2429    3    /**/       KEYSF = %YES#;
      836     2430    3    /**/       KEYVSF.IDSKEY = I_O_KEY;
      837     2431    3               CALL SYS_FUNC_READ ALTRET(READ_ERR);
      838     2432    3               OUT_INDX=-1;
      839     2433    3               END;
      840     2434    2           OUT_INDX=OUT_INDX+1;
      841     2435    2           DATA$=ADDR(I_O_BUF(OUT_INDX));
      842     2436    2           CALL BINCHAR(PAGE_FRMT.P1,RB);
      843     2437    2           DCBSF=KEYFID.DCB#;
      844     2438    2           BUFSF=VECTOR(PAGE_FRMT);
      845     2439    2           BUFLNSF=SIZEC(PAGE_FRMT);
      846     2440    2           VFCSF=%NO#;
      847     2441    2           NOTIMESF=%YES#;
      848     2442    2           CALL SYS_FUNC_WRIT ALTRET (WRT_ERR);
      849     2443        /**/
      850     2444        /* We have got a data page now we must scan it breaking out all the records on the p
              2444        age
      851     2445        use the offset array to locate where the records area located on the page*/
      852     2446        /**/
      853     2447    3           DO REC_CNT = 0 TO DATA_PG.OFF_LN.SEC BY 1;
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:124  
      854     2448    3               IF DATA_PG.ACT_DATA_18(2035-REC_CNT) > 0
      855     2449    3               THEN REC$ = PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(2035-REC_CNT));
      856     2450    3               ELSE GOTO FR_ENDA;
      857     2451    3               REC_DATA_LN=REC_FRMT.LNGHT;
      858     2452    3               DCBSF=KEYFID.DCB#;
      859     2453    3               BUFSF=VECTOR(REC_FRMT);
      860     2454    3               BUFLNSF=REC_FRMT.LNGHT;
      861     2455    3               VFCSF=%NO#;
      862     2456    3               NOTIMESF=%YES#;
      863     2457    3               CALL SYS_FUNC_WRIT ALTRET (WRT_ERR);
      864     2458    3   FR_ENDA:
      865     2459    3               END;
      866     2460    2           END;
      867     2461    1       DCBSF=KEYFID.DCB#;
      868     2462    1       CALL SYS_FUNC_CLOS;
      869     2463    1       DCBSF=ZI$DIR.AREA_NM.DCB#;
      870     2464    1       CALL SYS_FUNC_CLOS;
      871     2465    1       RETURN;
      872     2466    1   OPN_ERR:
      873     2467    1       ERROR_CODE = 0006;
      874     2468    1       RETURN;
      875     2469    1   READ_ERR:
      876     2470    1       ERROR_CODE = 0008;
      877     2471    1       RETURN;
      878     2472    1   WRT_ERR:
      879     2473    1       ERROR_CODE = 0007;
      880     2474    1       RETURN;
      881     2475    1   GTDCB_ERR:
      882     2476    1       ERROR_CODE = 0009;
      883     2477    1       RETURN;
      884     2478    1   WRGPTYP_ERR:
      885     2479    1       ERROR_CODE = 0005;
      886     2480    1       RETURN;
      887     2481    1   END ZIC$REDR;
      888     2482        %EOD;

PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:125  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIC$REDR.

   Procedure ZIC$REDR requires 261 words for executable code.
   Procedure ZIC$REDR requires 8 words of local(AUTO) storage.

PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:126  

 Object Unit name= ZIC$REDR                                   File name= ZIC$EDMS:IDS.:ZIC0TOU
 UTS= SEP 05 '97 11:37:34.68 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    13     15  ZIC$REDR
    1   DCB   even  none     0      0  M$LO
    2   Proc  even  none   261    405  ZIC$REDR
    3  RoData even  none    10     12  ZIC$REDR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  ZIC$REDR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 SYS_FUNC_GETDCB
 yes     yes           Std       0 SYS_FUNC_OPEN
 yes     yes           Std       0 SYS_FUNC_READ
 yes     yes           Std       0 SYS_FUNC_CLOS
 yes     yes           Std       0 SYS_FUNC_WRIT
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:127  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DATA$                                 BLKLSF                                KEYLSF
     KEYXSF                                DCBSF                                 ORGSF
     KEYSF                                 KEYVSF                                ACSSF
     NOTIMESF                              FUNSF                                 ASNSF
     TESTSF                                XTENSIZESF                            DISPSF
     WAITSF                                VFCSF                                 FULLSF
     BKUPSF                                BUFLNSF                               BUFSF
     SOURCESF                              DESTSF                                DATESF
     TIMESF                                UTSSF                                 DAYSF
     TSTAMPSF                              ENCRP_SEEDSF                          ERRCODESF
     MSGCODE                               INCL_ERR                              ERR_INSERT
     FIDSF_RD                              ACNT                                  EXISTSF
     SHARESF                               DCBNMSF                               KEYRSF
     NO_KEYSF                              REASGNSF                              CARRY_ATTRIBUTESF
     SUBMESSF                              SPKY_OPNSF                            POSSF
     ERRFLGSF                              MERGESF                               FSA_FLAG
     RELGSF                                UNUSED                                HELPCODE
     COUNTSF                               INDEXSF                               GAP
     PSNSF                                 ACNTSF                                KEY_SHADWSF
     REC$                                  RB                                    RE
     IE                                    IB                                    CNT
     ICNT                                  RCNT                                  SCNT
     FIRST_SET                             RETCNT                                DMPCNT
     KCNT                                  ACNT_IDX                              I
     J                                     K                                     X
     STEPCC                                I_O_BUF$                              OUT_INDX
     I_O_SIZE                              REC_DATA_LN                           M$LO
     B$TCB$                                B$ROS$                                B$JIT$
     KEYFID                                I_O_KEY                               RESTART
     BREAK_FLAG                            ICHKSUM                               ITMCNT
     GAP1                                  UWA                                   ZI$DIR
     SCHEMA_ACTIVE                         RECORD_LIST                           SET_LIST
     RETAIN_LIST                           DUMP_FID                              ALTKY
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:128  
     INIT_RG                               KEY_RNG                               ITEM_LIST

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:129  


      713        1        /*M*     ZIC$REDR           IDS/II  RETRIEVE RECORD FROM AREA  */
      714        2        /*T***********************************************************/
      715        3        /*T*                                                         */
      716        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      717        5        /*T*                                                         */
      718        6        /*T***********************************************************/
      719        7        /*P*
      720        8             NAME: ZIC$REDR
      721        9             PURPOSE:  RETREIVE A RECORD FROM AN IDS/II AREA AND
      722       10                       WRITE IT OUT TO A TEMP FILE (AREA NAME !! '$')
      723       11                 INPUTS
      724       12                 OUTPUT
      725       13                   ERROR_CODE = ERROR
      726       14                       0005 = WRONG PAGE TYPE FOR AREA
      727       15                       0006 = OPEN ERROR ON AREA !! $
      728       16                       0007 = WRITE ERROR
      729       17                       0008 = READ ERROR
      730       18                       0009 = GETDCB EROR
      731       19                    IDS_AREA_NM =AREA NAME
      732       20        ************************************************************/
      733       21        ZIC$REDR: PROC(IDS_AREA_NM,ERROR_CODE);

     21  2 000000   000000 700200 xent  ZIC$REDR     TSX0  ! X66_AUTO_2
         2 000001   000010 000002                    ZERO    8,2

      734       22    1   DCL IDS_AREA_NM CHAR(31) ;
      735       23    1   DCL ERROR_CODE SBIN WORD;
      736       24    1   DCL INDX UBIN WORD STATIC ALIGNED;
      737       25    1   DCL SYS_FUNC_OPEN ENTRY ALTRET; /*D* DBCS  MONITOR OOPEN  */
      738       26    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
      739       27    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      740       28    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      741       29    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      742       30    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      743       31    1   DCL REC_CNT UBIN(36) STATIC ALIGNED;
                31            /*D* REC_CNT =RECORD COUNT FOR THE PAGE THAT WE ON */
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:130  
      744       32    1   DCL TEMP_KEYFID CHAR(30) STATIC ALIGNED;
      745       33    1   DCL 1 PAGE_FRMT STATIC ALIGNED,
      746       34    1         2 * CHAR(4) INIT('PAGE'),
      747       35    1         2 P1 CHAR(6) INIT(' ');
      748       36         /*E* ERROR: ZIU-04003-C
      749       37           MESSAGE: Incorrect page type for secondary key file %U1.
      750       38           */
      751       39         /*E* ERROR: ZIU-04004-C
      752       40           MESSAGE: Error during rebuilding process...%U1 not modified.
      753       41           */
      754       42        /**/
      755       43        %INCLUDE ZI$PG_STRUCTS;
      756      146         %DATA_PG;
      757      165        /* the above used to be (stclass=static symdef) but now is symdef'ed
      758      166        in ziu$q2di */
      759      167        %INCLUDE ZI_GLOBAL_DBUTIL;
      760      345         %SYS_FUNC;
      761      437         %MISC_DCLS;
      762      490        /*the above used to be (stclass=static symdef) but is now
      763      491        symdef'ed in ziu$q2di */
      764      492        %INCLUDE CP_6_SUBS;
      765     1032        %INCLUDE ZI_UWA_C;
      766     1722        %ZI$UWAB;
      767     2062         %INCLUDE ZI$DIR;
      768     2219        /* the above used to be zi_dir */
      769     2220        %DIR;
      770     2364        /**/
      771     2365        /* 1. Check to make that we have an area thats integrated,has a secondary key file,
              2365        and is
      772     2366                 permanent.
      773     2367        2. Open the area as input and create a dcbname thats the same as the area name only
              2367         with a "$"
      774     2368        concatoned on the end for the open of the key file associated with it. The key file
              2368         set
      775     2369              command is also merged in the merge open.
      776     2370        */
      777     2371        /**/
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:131  
      778     2372    1       IF UWA.AC_REC.P_TYP.P_MD > '0'B THEN GOTO WRGPTYP_ERR;

   2372  2 000002   000237 236000 xsym               LDQ     UWA+159
         2 000003   000003 376007                    ANQ     3,DL
         2 000004   000000 116003                    CMPQ    0,DU
         2 000005   000007 600000 2                  TZE     s:2373
         2 000006   000401 603000 2                  TRC     WRGPTYP_ERR

      779     2373    1       ZI$DIR.AREA_NM.NAME.TEXT=IDS_AREA_NM;

   2373  2 000007   200003 470500                    LDP0    @IDS_AREA_NM,,AUTO
         2 000010   040000 100500                    MLR     fill='040'O
         2 000011   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30
         2 000012   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30

      780     2374    1       CALL INDEX(INDX,' ',ZI$DIR.AREA_NM.NAME.TEXT);

   2374  2 000013   000000 124400                    SCM     mask='000'O
         2 000014   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         2 000015   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000016   000000 000000 0                  ARG     INDX

      781     2375    1       ZI$DIR.AREA_NM.NAME.CNT=INDX;

   2375  2 000017   000000 236000 0                  LDQ     INDX
         2 000020   000033 736000                    QLS     27
         2 000021   000234 552040 xsym               STBQ    ZI$DIR+156,'40'O

      782     2376    1   /**/ DCBNMSF = VECTOR(ZI$DIR.AREA_NM.NAME);

   2376  2 000022   000002 237000 3                  LDAQ    2
         2 000023   000000 755000 xsym               STA     DCBNMSF
         2 000024   000001 756000 xsym               STQ     DCBNMSF+1

      783     2377    1       CALL SYS_FUNC_GETDCB ALTRET(GTDCB_ERR);

   2377  2 000025   000001 631400 3                  EPPR1   1
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:132  
         2 000026   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         2 000027   000375 702000 2                  TSX2    GTDCB_ERR

      784     2378    1       ZI$DIR.AREA_NM.DCB#=DCBSF;

   2378  2 000030   000000 220000 xsym               LDX0    DCBSF
         2 000031   000244 740000 xsym               STX0    ZI$DIR+164

      785     2379    1   /**/ TESTSF = %NO#;

   2379  2 000032   000000 450000 xsym               STZ     TESTSF

      786     2380    1   /**/ ORGSF = %IDS#;

   2380  2 000033   000007 235007                    LDA     7,DL
         2 000034   000000 755000 xsym               STA     ORGSF

      787     2381    1   /**/ FULLSF = %YES#;

   2381  2 000035   400000 236003                    LDQ     -131072,DU
         2 000036   000000 756000 xsym               STQ     FULLSF

      788     2382    1   /**/ FUNSF = %IN#;

   2382  2 000037   000002 235007                    LDA     2,DL
         2 000040   000000 755000 xsym               STA     FUNSF

      789     2383    1   /**/ SHARESF = %IN#;

   2383  2 000041   000000 756000 xsym               STQ     SHARESF

      790     2384    1   /**/ ACSSF = %DIRECT#;

   2384  2 000042   000000 755000 xsym               STA     ACSSF

      791     2385    1   /**/ ASNSF = %FILE#;

PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:133  
   2385  2 000043   000001 235007                    LDA     1,DL
         2 000044   000000 755000 xsym               STA     ASNSF

      792     2386    1   /**/ FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;

   2386  2 000045   040000 100400                    MLR     fill='040'O
         2 000046   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         2 000047   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      793     2387    1       CALL SYS_FUNC_OPEN ALTRET(OPN_ERR);

   2387  2 000050   000001 631400 3                  EPPR1   1
         2 000051   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         2 000052   000361 702000 2                  TSX2    OPN_ERR

      794     2388    1       IF ZI$DIR.AREA_NM.NAME.CNT > 30 THEN KEYFID.NM.CNT = 30;

   2388  2 000053   000234 236000 xsym               LDQ     ZI$DIR+156
         2 000054   777000 376003                    ANQ     -512,DU
         2 000055   037000 116003                    CMPQ    15872,DU
         2 000056   000062 602000 2                  TNC     s:2389

   2388  2 000057   036000 236003                    LDQ     15360,DU
         2 000060   000000 552040 xsym               STBQ    KEYFID,'40'O
         2 000061   000067 710000 2                  TRA     s:2390

      795     2389    1       ELSE KEYFID.NM.CNT=ZI$DIR.AREA_NM.NAME.CNT +1;

   2389  2 000062   000234 236000 xsym               LDQ     ZI$DIR+156
         2 000063   000033 772000                    QRL     27
         2 000064   000001 036007                    ADLQ    1,DL
         2 000065   000033 736000                    QLS     27
         2 000066   000000 552040 xsym               STBQ    KEYFID,'40'O

      796     2390    1      CALL CONCAT(TEMP_KEYFID,SUBSTR(ZI$DIR.AREA_NM.NAME.TEXT,0,KEYFID.NM.CNT-1),'$');

   2390  2 000067   000000 236000 xsym               LDQ     KEYFID
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:134  
         2 000070   000033 772000                    QRL     27
         2 000071   777777 620006                    EAX0    -1,QL
         2 000072   040000 100440                    MLR     fill='040'O
         2 000073   000234 200010 xsym               ADSC9   ZI$DIR+156               cn=1,n=*X0
         2 000074   000002 000036 0                  ADSC9   TEMP_KEYFID              cn=0,n=30
         2 000075   000000 636010                    EAQ     0,X0
         2 000076   000022 772000                    QRL     18
         2 000077   000036 116007                    CMPQ    30,DL
         2 000100   000111 603000 2                  TRC     s:2391
         2 000101   200006 740100                    STX0    @ERROR_CODE+2,,AUTO
         2 000102   777741 620010                    EAX0    -31,X0
         2 000103   777777 660003                    ERX0    -1,DU
         2 000104   200006 235100                    LDA     @ERROR_CODE+2,,AUTO
         2 000105   000022 771000                    ARL     18
         2 000106   040045 100400                    MLR     fill='040'O
         2 000107   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000110   000002 000010 0                  ADSC9   TEMP_KEYFID,A            cn=0,n=*X0

      797     2391    1       KEYFID.NM.TEXT=TEMP_KEYFID;

   2391  2 000111   040000 100400                    MLR     fill='040'O
         2 000112   000002 000036 0                  ADSC9   TEMP_KEYFID              cn=0,n=30
         2 000113   000000 200036 xsym               ADSC9   KEYFID                   cn=1,n=30

      798     2392    1   /**/ DCBNMSF = VECTOR(KEYFID.NM);

   2392  2 000114   000006 237000 3                  LDAQ    6
         2 000115   000000 755000 xsym               STA     DCBNMSF
         2 000116   000001 756000 xsym               STQ     DCBNMSF+1

      799     2393    1       CALL SYS_FUNC_GETDCB ALTRET(GTDCB_ERR);

   2393  2 000117   000001 631400 3                  EPPR1   1
         2 000120   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         2 000121   000375 702000 2                  TSX2    GTDCB_ERR

      800     2394    1       KEYFID.DCB# = DCBSF;
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:135  

   2394  2 000122   000000 220000 xsym               LDX0    DCBSF
         2 000123   000010 740000 xsym               STX0    KEYFID+8

      801     2395    1   /**/ ORGSF = %CONSEC#;

   2395  2 000124   000001 235007                    LDA     1,DL
         2 000125   000000 755000 xsym               STA     ORGSF

      802     2396    1   /**/ TESTSF= %NO#;

   2396  2 000126   000000 450000 xsym               STZ     TESTSF

      803     2397    1   /**/ ACSSF = %SEQUEN#;

   2397  2 000127   000000 755000 xsym               STA     ACSSF

      804     2398    1   /**/ FUNSF = %CREATE#;

   2398  2 000130   000003 236007                    LDQ     3,DL
         2 000131   000000 756000 xsym               STQ     FUNSF

      805     2399    1   /**/ ASNSF = %FILE#;

   2399  2 000132   000000 755000 xsym               STA     ASNSF

      806     2400    1   /**/ FIDSF = KEYFID.NM.TEXT;

   2400  2 000133   040000 100400                    MLR     fill='040'O
         2 000134   000000 200036 xsym               ADSC9   KEYFID                   cn=1,n=30
         2 000135   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      807     2401    1   /**/ SHARESF = %ALL#;

   2401  2 000136   200000 236003                    LDQ     65536,DU
         2 000137   000000 756000 xsym               STQ     SHARESF

PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:136  
      808     2402    1       CALL SYS_FUNC_OPEN ALTRET(OPN_ERR);

   2402  2 000140   000001 631400 3                  EPPR1   1
         2 000141   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         2 000142   000361 702000 2                  TSX2    OPN_ERR

      809     2403        /**/
      810     2404         /*Initialize all values when entering this routine*/
      811     2405        /**/
      812     2406    1       I_O_SIZE=0; /*  # of pages read in or writen out*/

   2406  2 000143   000000 450000 xsym               STZ     I_O_SIZE

      813     2407    1       OUT_INDX=7; /*Set to a higher value than I_O_SIZE to initiate the start of this
              2407        routine with a read*/

   2407  2 000144   000007 235007                    LDA     7,DL
         2 000145   000000 755000 xsym               STA     OUT_INDX

      814     2408    1       REC_CNT=0; /*Index to the location of the record on the data page*/

   2408  2 000146   000001 450000 0                  STZ     REC_CNT

      815     2409        /**/
      816     2410        /*Set of the values of the data page range  and store them into varibles for the do
              2410        statment*
      817     2411            Rb - is the beginning page range
      818     2412            re - is the ending page range
      819     2413        */
      820     2414        /**/
      821     2415    1       RB=1; /*Beginning page #*/

   2415  2 000147   000001 236007                    LDQ     1,DL
         2 000150   000000 756000 xsym               STQ     RB

      822     2416    1       IF UWA.AC_REC.FIR_INV_PG=0 THEN RE=UWA.AC_REC.MAX_PAGE;

PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:137  
   2416  2 000151   000252 235000 xsym               LDA     UWA+170
         2 000152   000156 601000 2                  TNZ     s:2417

   2416  2 000153   000250 235000 xsym               LDA     UWA+168
         2 000154   000000 755000 xsym               STA     RE
         2 000155   000160 710000 2                  TRA     s:2418

      823     2417    1       ELSE RE=UWA.AC_REC.FIR_INV_PG-1;

   2417  2 000156   000001 135007                    SBLA    1,DL
         2 000157   000000 755000 xsym               STA     RE

      824     2418    2       DO RB=RB TO RE BY 1;

   2418  2 000160   000343 710000 2                  TRA     s:2460+3

      825     2419    2           IF OUT_INDX >= I_O_SIZE THEN

   2419  2 000161   000000 236000 xsym               LDQ     OUT_INDX
         2 000162   000000 116000 xsym               CMPQ    I_O_SIZE
         2 000163   000225 604000 2                  TMI     s:2434

      826     2420    3           DO;

      827     2421    3               I_O_SIZE=RE-RB;

   2421  2 000164   000000 236000 xsym               LDQ     RE
         2 000165   000000 136000 xsym               SBLQ    RB
         2 000166   000000 756000 xsym               STQ     I_O_SIZE

      828     2422    3               IF I_O_SIZE >=8 THEN I_O_SIZE = 7;

   2422  2 000167   000010 116007                    CMPQ    8,DL
         2 000170   000173 604000 2                  TMI     s:2423

   2422  2 000171   000007 235007                    LDA     7,DL
         2 000172   000000 755000 xsym               STA     I_O_SIZE
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:138  

      829     2423    3               I_O_KEY = RB;

   2423  2 000173   000000 235000 xsym               LDA     RB
         2 000174   000000 755000 xsym               STA     I_O_KEY

      830     2424    3    /**/       DCBSF = ZI$DIR.AREA_NM.DCB#;

   2424  2 000175   000244 220000 xsym               LDX0    ZI$DIR+164
         2 000176   000000 740000 xsym               STX0    DCBSF

      831     2425    3    /**/       BUFSF = VECTOR(I_O_BUF);

   2425  2 000177   000005 235000 3                  LDA     5
         2 000200   000000 236000 xsym               LDQ     I_O_BUF$
         2 000201   000000 755000 xsym               STA     BUFSF
         2 000202   000001 756000 xsym               STQ     BUFSF+1

      832     2426    3    /**/       BUFLNSF = 4096 * (I_O_SIZE +1);

   2426  2 000203   000000 235000 xsym               LDA     I_O_SIZE
         2 000204   000014 735000                    ALS     12
         2 000205   010000 035007                    ADLA    4096,DL
         2 000206   000000 755000 xsym               STA     BUFLNSF

      833     2427    3    /**/       FULLSF = %YES#;

   2427  2 000207   400000 236003                    LDQ     -131072,DU
         2 000210   000000 756000 xsym               STQ     FULLSF

      834     2428    3    /**/       ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;

   2428  2 000211   000027 236000 xsym               LDQ     ZI$DIR+23
         2 000212   000000 756000 xsym               STQ     ENCRP_SEEDSF

      835     2429    3    /**/       KEYSF = %YES#;

PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:139  
   2429  2 000213   400000 236003                    LDQ     -131072,DU
         2 000214   000000 756000 xsym               STQ     KEYSF

      836     2430    3    /**/       KEYVSF.IDSKEY = I_O_KEY;

   2430  2 000215   000000 100400                    MLR     fill='000'O
         2 000216   000000 000004 xsym               ADSC9   I_O_KEY                  cn=0,n=4
         2 000217   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

      837     2431    3               CALL SYS_FUNC_READ ALTRET(READ_ERR);

   2431  2 000220   000001 631400 3                  EPPR1   1
         2 000221   000000 701000 xent               TSX1    SYS_FUNC_READ
         2 000222   000365 702000 2                  TSX2    READ_ERR

      838     2432    3               OUT_INDX=-1;

   2432  2 000223   000001 335007                    LCA     1,DL
         2 000224   000000 755000 xsym               STA     OUT_INDX

      839     2433    3               END;

      840     2434    2           OUT_INDX=OUT_INDX+1;

   2434  2 000225   000000 054000 xsym               AOS     OUT_INDX

      841     2435    2           DATA$=ADDR(I_O_BUF(OUT_INDX));

   2435  2 000226   000000 236000 xsym               LDQ     OUT_INDX
         2 000227   000034 736000                    QLS     28
         2 000230   000000 036000 xsym               ADLQ    I_O_BUF$
         2 000231   000000 756000 xsym               STQ     DATA$

      842     2436    2           CALL BINCHAR(PAGE_FRMT.P1,RB);

   2436  2 000232   000000 235000 xsym               LDA     RB
         2 000233   000044 773000                    LRL     36
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:140  
         2 000234   200006 757100                    STAQ    @ERROR_CODE+2,,AUTO
         2 000235   000000 301500                    BTD
         2 000236   200006 000010                    NDSC9   @ERROR_CODE+2,,AUTO      cn=0,s=lsgnf,sf=0,n=8
         2 000237   000013 030006 0                  NDSC9   PAGE_FRMT+1              cn=0,s=nosgn,sf=0,n=6

      843     2437    2           DCBSF=KEYFID.DCB#;

   2437  2 000240   000010 220000 xsym               LDX0    KEYFID+8
         2 000241   000000 740000 xsym               STX0    DCBSF

      844     2438    2           BUFSF=VECTOR(PAGE_FRMT);

   2438  2 000242   000010 237000 3                  LDAQ    8
         2 000243   000000 755000 xsym               STA     BUFSF
         2 000244   000001 756000 xsym               STQ     BUFSF+1

      845     2439    2           BUFLNSF=SIZEC(PAGE_FRMT);

   2439  2 000245   000014 235007                    LDA     12,DL
         2 000246   000000 755000 xsym               STA     BUFLNSF

      846     2440    2           VFCSF=%NO#;

   2440  2 000247   000000 450000 xsym               STZ     VFCSF

      847     2441    2           NOTIMESF=%YES#;

   2441  2 000250   400000 236003                    LDQ     -131072,DU
         2 000251   000000 756000 xsym               STQ     NOTIMESF

      848     2442    2           CALL SYS_FUNC_WRIT ALTRET (WRT_ERR);

   2442  2 000252   000001 631400 3                  EPPR1   1
         2 000253   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         2 000254   000371 702000 2                  TSX2    WRT_ERR

      849     2443        /**/
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:141  
      850     2444       /* We have got a data page now we must scan it breaking out all the records on the p
              2444        age
      851     2445        use the offset array to locate where the records area located on the page*/
      852     2446        /**/
      853     2447    3           DO REC_CNT = 0 TO DATA_PG.OFF_LN.SEC BY 1;

   2447  2 000255   000001 450000 0                  STZ     REC_CNT
         2 000256   000333 710000 2                  TRA     FR_ENDA+3

      854     2448    3               IF DATA_PG.ACT_DATA_18(2035-REC_CNT) > 0

   2448  2 000257   000000 235003                    LDA     0,DU
         2 000260   000001 135000 0                  SBLA    REC_CNT
         2 000261   000001 735000                    ALS     1
         2 000262   000000 470400 xsym               LDP0    DATA$
         2 000263   000100 100505                    MLR     fill='000'O
         2 000264   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000265   200006 000004                    ADSC9   @ERROR_CODE+2,,AUTO      cn=0,n=4
         2 000266   200006 236100                    LDQ     @ERROR_CODE+2,,AUTO
         2 000267   000022 732000                    QRS     18
         2 000270   000000 116003                    CMPQ    0,DU
         2 000271   000330 604400 2                  TMOZ    FR_ENDA

      855     2449    3               THEN REC$ = PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(2035-REC_CNT));

   2449  2 000272   000100 100505                    MLR     fill='000'O
         2 000273   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000274   200006 000004                    ADSC9   @ERROR_CODE+2,,AUTO      cn=0,n=4
         2 000275   200006 236100                    LDQ     @ERROR_CODE+2,,AUTO
         2 000276   000022 732000                    QRS     18
         2 000277   000020 736000                    QLS     16
         2 000300   000003 036003                    ADLQ    3,DU
         2 000301   000000 036000 xsym               ADLQ    DATA$
         2 000302   000000 756000 xsym               STQ     REC$
         2 000303   000304 710000 2                  TRA     s:2451

      856     2450    3               ELSE GOTO FR_ENDA;
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:142  
      857     2451    3               REC_DATA_LN=REC_FRMT.LNGHT;

   2451  2 000304   000000 471400 xsym               LDP1    REC$
         2 000305   000000 101500                    MRL     fill='000'O
         2 000306   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2
         2 000307   000000 000004 xsym               ADSC9   REC_DATA_LN              cn=0,n=4

      858     2452    3               DCBSF=KEYFID.DCB#;

   2452  2 000310   000010 220000 xsym               LDX0    KEYFID+8
         2 000311   000000 740000 xsym               STX0    DCBSF

      859     2453    3               BUFSF=VECTOR(REC_FRMT);

   2453  2 000312   000000 235000 xsym               LDA     REC_DATA_LN
         2 000313   000020 735000                    ALS     16
         2 000314   777640 035007                    ADLA    -96,DL
         2 000315   000000 755000 xsym               STA     BUFSF
         2 000316   000001 756000 xsym               STQ     BUFSF+1

      860     2454    3               BUFLNSF=REC_FRMT.LNGHT;

   2454  2 000317   000000 101500                    MRL     fill='000'O
         2 000320   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2
         2 000321   000000 000004 xsym               ADSC9   BUFLNSF                  cn=0,n=4

      861     2455    3               VFCSF=%NO#;

   2455  2 000322   000000 450000 xsym               STZ     VFCSF

      862     2456    3               NOTIMESF=%YES#;

   2456  2 000323   400000 236003                    LDQ     -131072,DU
         2 000324   000000 756000 xsym               STQ     NOTIMESF

      863     2457    3               CALL SYS_FUNC_WRIT ALTRET (WRT_ERR);

PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:143  
   2457  2 000325   000001 631400 3                  EPPR1   1
         2 000326   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         2 000327   000371 702000 2                  TSX2    WRT_ERR

      864     2458    3   FR_ENDA:
      865     2459    3               END;

   2459  2 000330   000001 235000 0     FR_ENDA      LDA     REC_CNT
         2 000331   000001 035007                    ADLA    1,DL
         2 000332   000001 755000 0                  STA     REC_CNT
         2 000333   000000 470400 xsym               LDP0    DATA$
         2 000334   000005 236100                    LDQ     5,,PR0
         2 000335   777777 376007                    ANQ     -1,DL
         2 000336   000001 116000 0                  CMPQ    REC_CNT
         2 000337   000257 603000 2                  TRC     s:2448

      866     2460    2           END;

   2460  2 000340   000000 235000 xsym               LDA     RB
         2 000341   000001 035007                    ADLA    1,DL
         2 000342   000000 755000 xsym               STA     RB
         2 000343   000000 236000 xsym               LDQ     RE
         2 000344   000000 116000 xsym               CMPQ    RB
         2 000345   000161 603000 2                  TRC     s:2419

      867     2461    1       DCBSF=KEYFID.DCB#;

   2461  2 000346   000010 220000 xsym               LDX0    KEYFID+8
         2 000347   000000 740000 xsym               STX0    DCBSF

      868     2462    1       CALL SYS_FUNC_CLOS;

   2462  2 000350   000001 631400 3                  EPPR1   1
         2 000351   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         2 000352   000000 011000                    NOP     0

      869     2463    1       DCBSF=ZI$DIR.AREA_NM.DCB#;
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:144  

   2463  2 000353   000244 220000 xsym               LDX0    ZI$DIR+164
         2 000354   000000 740000 xsym               STX0    DCBSF

      870     2464    1       CALL SYS_FUNC_CLOS;

   2464  2 000355   000001 631400 3                  EPPR1   1
         2 000356   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         2 000357   000000 011000                    NOP     0

      871     2465    1       RETURN;

   2465  2 000360   000000 702200 xent               TSX2  ! X66_ARET

      872     2466    1   OPN_ERR:
      873     2467    1       ERROR_CODE = 0006;

   2467  2 000361   000006 235007       OPN_ERR      LDA     6,DL
         2 000362   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         2 000363   000000 755100                    STA     0,,PR0

      874     2468    1       RETURN;

   2468  2 000364   000000 702200 xent               TSX2  ! X66_ARET

      875     2469    1   READ_ERR:
      876     2470    1       ERROR_CODE = 0008;

   2470  2 000365   000010 235007       READ_ERR     LDA     8,DL
         2 000366   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         2 000367   000000 755100                    STA     0,,PR0

      877     2471    1       RETURN;

   2471  2 000370   000000 702200 xent               TSX2  ! X66_ARET

      878     2472    1   WRT_ERR:
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:145  
      879     2473    1       ERROR_CODE = 0007;

   2473  2 000371   000007 235007       WRT_ERR      LDA     7,DL
         2 000372   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         2 000373   000000 755100                    STA     0,,PR0

      880     2474    1       RETURN;

   2474  2 000374   000000 702200 xent               TSX2  ! X66_ARET

      881     2475    1   GTDCB_ERR:
      882     2476    1       ERROR_CODE = 0009;

   2476  2 000375   000011 235007       GTDCB_ERR    LDA     9,DL
         2 000376   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         2 000377   000000 755100                    STA     0,,PR0

      883     2477    1       RETURN;

   2477  2 000400   000000 702200 xent               TSX2  ! X66_ARET

      884     2478    1   WRGPTYP_ERR:
      885     2479    1       ERROR_CODE = 0005;

   2479  2 000401   000005 235007       WRGPTYP_ERR  LDA     5,DL
         2 000402   200004 470500                    LDP0    @ERROR_CODE,,AUTO
         2 000403   000000 755100                    STA     0,,PR0

      886     2480    1       RETURN;

   2480  2 000404   000000 702200 xent               TSX2  ! X66_ARET

TEMP_KEYFID
 Sect OctLoc
   0     002   ****** ******   ****** ******   ****** ******   ****** ******    ................

PAGE_FRMT
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:146  
 Sect OctLoc
   0     012   120101 107105   040040 040040   040040 ******                    PAGE      ..

(unnamed)
 Sect OctLoc
   3     000   040040 040040   000000 000000   000007 577640   000234 006000        ............
   3     004   044040 040040   001777 777640   000007 577640   000000 006000    $   ............
   3     010   000002 777640   000012 006000                                    ........
      887     2481    1   END ZIC$REDR;
      888     2482        %EOD;

PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:147  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIC$REDR.

   Procedure ZIC$REDR requires 261 words for executable code.
   Procedure ZIC$REDR requires 8 words of local(AUTO) storage.
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:148  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:149  
          MINI XREF LISTING

ACSSF
       364**DCL      2384<<ASSIGN   2397<<ASSIGN
ASNSF
       367**DCL      2385<<ASSIGN   2399<<ASSIGN
BUFLNSF
       375**DCL      2426<<ASSIGN   2439<<ASSIGN   2454<<ASSIGN
BUFSF
       376**DCL      2425<<ASSIGN   2438<<ASSIGN   2453<<ASSIGN
COUNTSF
       426**DCL       427--REDEF
DATA$
       147**DCL       148--IMP-PTR  2435<<ASSIGN   2447>>DOINDEX  2448>>IF       2449>>ASSIGN   2449>>ASSIGN
DATA_PG.ACT_DATA
       160**DCL       161--REDEF     162--REDEF     163--REDEF
DATA_PG.ACT_DATA_18
       161**DCL      2448>>IF       2449>>ASSIGN
DATA_PG.OFF_LN.SEC
       159**DCL      2447>>DOINDEX
DCBNMSF
       407**DCL      2376<<ASSIGN   2392<<ASSIGN
DCBSF
       355**DCL      2378>>ASSIGN   2394>>ASSIGN   2424<<ASSIGN   2437<<ASSIGN   2452<<ASSIGN   2461<<ASSIGN
      2463<<ASSIGN
ENCRP_SEEDSF
       384**DCL       385--REDEF    2428<<ASSIGN
ERRCODESF
       386**DCL       391--REDEF
ERROR_CODE
        23**DCL        21--PROC     2467<<ASSIGN   2470<<ASSIGN   2473<<ASSIGN   2476<<ASSIGN   2479<<ASSIGN
FIDSF
       403**DCL      2386<<ASSIGN   2400<<ASSIGN
FIDSF_RD
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:150  
       402**DCL       403--REDEF
FR_ENDA
      2459**LABEL    2450--GOTO
FULLSF
       373**DCL      2381<<ASSIGN   2427<<ASSIGN
FUNSF
       366**DCL      2382<<ASSIGN   2398<<ASSIGN
GTDCB_ERR
      2476**LABEL    2377--CALLALT  2393--CALLALT
HELPCODE
       420**DCL       425--REDEF
ICHKSUM
       485**DCL       486--REDEF
IDS_AREA_NM
        22**DCL        21--PROC     2373>>ASSIGN
INDX
        24**DCL      2374<<CALLBLT  2375>>ASSIGN
I_O_BUF
       464**DCL      2425--ASSIGN   2435--ASSIGN
I_O_BUF$
       463**DCL       464--IMP-PTR  2425>>ASSIGN   2435>>ASSIGN
I_O_KEY
       482**DCL      2423<<ASSIGN   2430>>ASSIGN
I_O_SIZE
       466**DCL      2406<<ASSIGN   2419>>IF       2421<<ASSIGN   2422>>IF       2422<<ASSIGN   2426>>ASSIGN
KEYFID.DCB#
       481**DCL      2394<<ASSIGN   2437>>ASSIGN   2452>>ASSIGN   2461>>ASSIGN
KEYFID.NM
       478**DCL      2392--ASSIGN
KEYFID.NM.CNT
       479**DCL      2388<<ASSIGN   2389<<ASSIGN   2390>>CALLBLT
KEYFID.NM.TEXT
       480**DCL      2391<<ASSIGN   2400>>ASSIGN
KEYSF
       357**DCL      2429<<ASSIGN
KEYVSF
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:151  
       358**DCL       363--REDEF
KEYVSF.IDSKEY
       361**DCL      2430<<ASSIGN
KEYVSF.WD_ONE
       360**DCL       361--REDEF
MSGCODE
       392**DCL       393--REDEF
NOTIMESF
       365**DCL      2441<<ASSIGN   2456<<ASSIGN
OPN_ERR
      2467**LABEL    2387--CALLALT  2402--CALLALT
ORGSF
       356**DCL      2380<<ASSIGN   2395<<ASSIGN
OUT_INDX
       465**DCL      2407<<ASSIGN   2419>>IF       2432<<ASSIGN   2434<<ASSIGN   2434>>ASSIGN   2435>>ASSIGN
PAGE_FRMT
        33**DCL      2438--ASSIGN   2439--ASSIGN
PAGE_FRMT.P1
        35**DCL      2436<<CALLBLT
RB
       445**DCL      2415<<ASSIGN   2418<<DOINDEX  2418>>DOINDEX  2421>>ASSIGN   2423>>ASSIGN   2436>>CALLBLT
RE
       446**DCL      2416<<ASSIGN   2417<<ASSIGN   2418>>DOINDEX  2421>>ASSIGN
READ_ERR
      2470**LABEL    2431--CALLALT
REC$
       444**DCL       467--IMP-PTR  2449<<ASSIGN   2451>>ASSIGN   2453>>ASSIGN   2454>>ASSIGN
REC_CNT
        31**DCL      2408<<ASSIGN   2447<<DOINDEX  2448>>IF       2449>>ASSIGN
REC_DATA_LN
       472**DCL       471--IMP-SIZ  2451<<ASSIGN   2453>>ASSIGN
REC_FRMT
       467**DCL      2453--ASSIGN
REC_FRMT.LNGHT
       470**DCL      2451>>ASSIGN   2454>>ASSIGN
SHARESF
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:152  
       406**DCL      2383<<ASSIGN   2401<<ASSIGN
SYS_FUNC_CLOS
        27**DCL-ENT  2462--CALL     2464--CALL
SYS_FUNC_GETDCB
        26**DCL-ENT  2377--CALL     2393--CALL
SYS_FUNC_OPEN
        25**DCL-ENT  2387--CALL     2402--CALL
SYS_FUNC_READ
        28**DCL-ENT  2431--CALL
SYS_FUNC_WRIT
        29**DCL-ENT  2442--CALL     2457--CALL
TEMP_KEYFID
        32**DCL      2390<<CALLBLT  2391>>ASSIGN
TESTSF
       368**DCL      2379<<ASSIGN   2396<<ASSIGN
UWA.AC_REC.CALC_NEXT
      1838**DCL      1839--REDEF
UWA.AC_REC.CALC_PRIOR
      1847**DCL      1848--REDEF
UWA.AC_REC.DEFAULTS
      1796**DCL      1797--REDEF
UWA.AC_REC.FILE_CODE
      1801**DCL      1802--REDEF
UWA.AC_REC.FIR_INV_PG
      1827**DCL      2416>>IF       2417>>ASSIGN
UWA.AC_REC.FLAG1.ERROR_TYPE
      1798**DCL      1799--REDEF
UWA.AC_REC.MAX_PAGE
      1825**DCL      2416>>ASSIGN
UWA.AC_REC.PG_TYPE
      1813**DCL      1814--REDEF
UWA.AC_REC.P_TYP.P_MD
      1816**DCL      2372>>IF
UWA.AD_REC.ADDATE
      1778**DCL      1779--REDEF
VFCSF
PL6.E3A0      #006=ZIC$REDR File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:153  
       372**DCL      2440<<ASSIGN   2455<<ASSIGN
WRGPTYP_ERR
      2479**LABEL    2372--GOTO
WRT_ERR
      2473**LABEL    2442--CALLALT  2457--CALLALT
ZI$DIR.ALTKEY
      2292**DCL      2293--REDEF    2294--REDEF
ZI$DIR.AREAFID
      2258**DCL      2259--REDEF
ZI$DIR.AREA_NM.DCB#
      2325**DCL      2378<<ASSIGN   2424>>ASSIGN   2463>>ASSIGN
ZI$DIR.AREA_NM.NAME
      2322**DCL      2376--ASSIGN
ZI$DIR.AREA_NM.NAME.CNT
      2323**DCL      2375<<ASSIGN   2388>>IF       2389>>ASSIGN
ZI$DIR.AREA_NM.NAME.TEXT
      2324**DCL      2373<<ASSIGN   2374>>CALLBLT  2386>>ASSIGN   2390>>CALLBLT
ZI$DIR.DATE
      2297**DCL      2301--REDEF
ZI$DIR.DEST_SEED
      2253**DCL      2254--REDEF    2255--REDEF
ZI$DIR.ENCP_SEED
      2250**DCL      2251--REDEF    2252--REDEF    2428>>ASSIGN
ZI$DIR.REPRT_ZERO
      2284**DCL      2285--REDEF
ZI$DIR.SCHFID
      2256**DCL      2257--REDEF
ZI$DIR.TIME
      2302**DCL      2307--REDEF

PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:154  
      889        1        /*M*  ZIC$GREC       IDS/II GET RECORD FOR TEMP FILE ROUTINE*/
      890        2        /*T***********************************************************/
      891        3        /*T*                                                         */
      892        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      893        5        /*T*                                                         */
      894        6        /*T***********************************************************/
      895        7        /*P*
      896        8            NAME: ZIC$GREC
      897        9            PURPOSE: READ A RECORD FROM A TEMPORARY FILE
      898       10              INPUTS
      899       11                 IDS_AREA_NM = AREA NAME
      900       12              OUTPUTS
      901       13                 REC_TYP = RECORD TYPE
      902       14                 IDS$RECORD = IDS/II RECORD
      903       15                 ERROR_CODE =ERROR
      904       16                 ERROR CODE EQUIV.
      905       17                     0008 = EOD OF FILE
      906       18                     0006 = OPEN ERROR
      907       19                     0009 = GETDCB ERROR
      908       20        ************************************************************/
      909       21        ZIC$GREC: PROC(IDS_AREA_NM,REC_TYPE,IDS$RECORD,ERROR_CODE);
      910       22    1   DCL IDS_AREA_NM CHAR(31);
      911       23    1   DCL REC_TYPE SBIN(36);
      912       24    1   DCL IDS$RECORD (0:0) SBIN WORD;
      913       25    1   DCL IDS$RECORD_RD (0:0) REDEF IDS$RECORD CHAR(4);
      914       26    1   DCL ERROR_CODE SBIN WORD;
      915       27    1   DCL INDX UBIN WORD STATIC ALIGNED;
      916       28    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
      917       29    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
      918       30    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      919       31    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      920       32        %INCLUDE ZI$DIR;
      921      189        %DIR;
      922      333        %INCLUDE CP_6;
      923      414        %INCLUDE CP_6_SUBS;
      924      954        %F$DCB;
      925     1011        %INCLUDE ZI_GLOBAL_DBUTIL;
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:155  
      926     1189        %SYS_FUNC;
      927     1281        %MISC_DCLS;
      928     1334    1       CALL INDEX(INDX,' ',IDS_AREA_NM);
      929     1335    1       ZI$DIR.AREA_NM.NAME.CNT=INDX;
      930     1336    1       CALL CONCAT(ZI$DIR.AREA_NM.NAME.TEXT,SUBSTR(IDS_AREA_NM,0,ZI$DIR.AREA_NM.NAME.
              1336                CNT),'$');
      931     1337    1       ZI$DIR.AREA_NM.NAME.CNT=ZI$DIR.AREA_NM.NAME.CNT+1;
      932     1338    1   /**/ DCBNMSF = VECTOR(ZI$DIR.AREA_NM.NAME);
      933     1339    1       CALL SYS_FUNC_GETDCB ALTRET(GTDCB_ERR);
      934     1340    1       ZI$DIR.AREA_NM.DCB#=DCBSF;
      935     1341    1       IF DCBADDR(ZI$DIR.AREA_NM.DCB#)->F$DCB.FCD#=%YES# THEN GOTO READ;
      936     1342    1   /**/ ORGSF = %CONSEC#;
      937     1343    1   /**/ TESTSF= %NO#;
      938     1344    1   /**/ ACSSF = %SEQUEN#;
      939     1345    1   /**/ FUNSF = %IN#;
      940     1346    1   /**/ ASNSF = %FILE#;
      941     1347    1   /**/ FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;
      942     1348    1   /**/ SHARESF = %ALL#;
      943     1349    1       CALL SYS_FUNC_OPEN ALTRET(OPN_ERR);
      944     1350    1   READ:
      945     1351    1       DCBSF=ZI$DIR.AREA_NM.DCB#;
      946     1352    1       BUFSF=VECTOR(IDS$RECORD);
      947     1353    1       BUFLNSF=510;
      948     1354    1       FULLSF=%NO#;
      949     1355    1       ENCRP_SEEDSF=ZI$DIR.ENCP_SEED;
      950     1356    1       KEYVSF=%NO#;
      951     1357    1       CALL SYS_FUNC_READ ALTRET(READ_ERR);
      952     1358    1       REC$=ADDR(IDS$RECORD);
      953     1359    1       IF IDS$RECORD_RD(0) = 'PAGE' THEN GOTO READ;
      954     1360    1       REC_TYPE=REC_FRMT.TYPE;
      955     1361    1       RETURN;
      956     1362    1   READ_ERR:
      957     1363    1       DCBSF=ZI$DIR.AREA_NM.DCB#;
      958     1364    1       CALL SYS_FUNC_CLOS;
      959     1365    1       ERROR_CODE=8;
      960     1366    1       RETURN;
      961     1367    1   OPN_ERR:
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:156  
      962     1368    1       DCBSF=ZI$DIR.AREA_NM.DCB#;
      963     1369    1       CALL SYS_FUNC_CLOS;
      964     1370    1       ERROR_CODE=9;
      965     1371    1       RETURN;
      966     1372    1   GTDCB_ERR:
      967     1373    1       ERROR_CODE=9;
      968     1374    1       RETURN;
      969     1375    1   END ZIC$GREC;

PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:157  
--  Include file information  --

   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIC$GREC.

   Procedure ZIC$GREC requires 107 words for executable code.
   Procedure ZIC$GREC requires 8 words of local(AUTO) storage.

    No errors detected in file ZIC$EDMS:IDS.:ZIC0TSI    .

PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:158  

 Object Unit name= ZIC$GREC                                   File name= ZIC$EDMS:IDS.:ZIC0TOU
 UTS= SEP 05 '97 11:37:54.08 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     1      1  ZIC$GREC
    1   DCB   even  none     0      0  M$UC
    2   DCB   even  none     0      0  M$LO
    3  RoData even  UTS      1      1  ZIC$GREC
    4   Proc  even  none   107    153  ZIC$GREC
    5  RoData even  none     6      6  ZIC$GREC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        4  ZIC$GREC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 SYS_FUNC_GETDCB
 yes     yes           Std       0 SYS_FUNC_OPEN
 yes     yes           Std       0 SYS_FUNC_READ
 yes     yes           Std       0 SYS_FUNC_CLOS
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:159  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ZI$DIR                                SCHEMA_ACTIVE                         RECORD_LIST
     SET_LIST                              RETAIN_LIST                           DUMP_FID
     ALTKY                                 INIT_RG                               KEY_RNG
     ITEM_LIST                             M$UC                                  BLKLSF
     KEYLSF                                KEYXSF                                DCBSF
     ORGSF                                 KEYSF                                 KEYVSF
     ACSSF                                 NOTIMESF                              FUNSF
     ASNSF                                 TESTSF                                XTENSIZESF
     DISPSF                                WAITSF                                VFCSF
     FULLSF                                BKUPSF                                BUFLNSF
     BUFSF                                 SOURCESF                              DESTSF
     DATESF                                TIMESF                                UTSSF
     DAYSF                                 TSTAMPSF                              ENCRP_SEEDSF
     ERRCODESF                             MSGCODE                               INCL_ERR
     ERR_INSERT                            FIDSF_RD                              ACNT
     EXISTSF                               SHARESF                               DCBNMSF
     KEYRSF                                NO_KEYSF                              REASGNSF
     CARRY_ATTRIBUTESF                     SUBMESSF                              SPKY_OPNSF
     POSSF                                 ERRFLGSF                              MERGESF
     FSA_FLAG                              RELGSF                                UNUSED
     HELPCODE                              COUNTSF                               INDEXSF
     GAP                                   PSNSF                                 ACNTSF
     KEY_SHADWSF                           REC$                                  RB
     RE                                    IE                                    IB
     CNT                                   ICNT                                  RCNT
     SCNT                                  FIRST_SET                             RETCNT
     DMPCNT                                KCNT                                  ACNT_IDX
     I                                     J                                     K
     X                                     STEPCC                                I_O_BUF$
     OUT_INDX                              I_O_SIZE                              REC_DATA_LN
     M$LO                                  B$TCB$                                B$ROS$
     B$JIT$                                KEYFID                                I_O_KEY
     RESTART                               BREAK_FLAG                            ICHKSUM
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:160  
     ITMCNT                                GAP1

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 ISSID
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:161  


      889        1        /*M*  ZIC$GREC       IDS/II GET RECORD FOR TEMP FILE ROUTINE*/
      890        2        /*T***********************************************************/
      891        3        /*T*                                                         */
      892        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      893        5        /*T*                                                         */
      894        6        /*T***********************************************************/
      895        7        /*P*
      896        8            NAME: ZIC$GREC
      897        9            PURPOSE: READ A RECORD FROM A TEMPORARY FILE
      898       10              INPUTS
      899       11                 IDS_AREA_NM = AREA NAME
      900       12              OUTPUTS
      901       13                 REC_TYP = RECORD TYPE
      902       14                 IDS$RECORD = IDS/II RECORD
      903       15                 ERROR_CODE =ERROR
      904       16                 ERROR CODE EQUIV.
      905       17                     0008 = EOD OF FILE
      906       18                     0006 = OPEN ERROR
      907       19                     0009 = GETDCB ERROR
      908       20        ************************************************************/
      909       21        ZIC$GREC: PROC(IDS_AREA_NM,REC_TYPE,IDS$RECORD,ERROR_CODE);

     21  4 000000   000000 700200 xent  ZIC$GREC     TSX0  ! X66_AUTO_4
         4 000001   000010 000004                    ZERO    8,4

      910       22    1   DCL IDS_AREA_NM CHAR(31);
      911       23    1   DCL REC_TYPE SBIN(36);
      912       24    1   DCL IDS$RECORD (0:0) SBIN WORD;
      913       25    1   DCL IDS$RECORD_RD (0:0) REDEF IDS$RECORD CHAR(4);
      914       26    1   DCL ERROR_CODE SBIN WORD;
      915       27    1   DCL INDX UBIN WORD STATIC ALIGNED;
      916       28    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
      917       29    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
      918       30    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      919       31    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      920       32        %INCLUDE ZI$DIR;
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:162  
      921      189        %DIR;
      922      333        %INCLUDE CP_6;
      923      414        %INCLUDE CP_6_SUBS;
      924      954        %F$DCB;
      925     1011        %INCLUDE ZI_GLOBAL_DBUTIL;
      926     1189        %SYS_FUNC;
      927     1281        %MISC_DCLS;
      928     1334    1       CALL INDEX(INDX,' ',IDS_AREA_NM);

   1334  4 000002   200003 470500                    LDP0    @IDS_AREA_NM,,AUTO
         4 000003   000000 124500                    SCM     mask='000'O
         4 000004   000000 000037                    ADSC9   0,,PR0                   cn=0,n=31
         4 000005   000000 000001 5                  ADSC9   0                        cn=0,n=1
         4 000006   000000 000000 0                  ARG     INDX

      929     1335    1       ZI$DIR.AREA_NM.NAME.CNT=INDX;

   1335  4 000007   000000 236000 0                  LDQ     INDX
         4 000010   000033 736000                    QLS     27
         4 000011   000234 552040 xsym               STBQ    ZI$DIR+156,'40'O

      930     1336    1       CALL CONCAT(ZI$DIR.AREA_NM.NAME.TEXT,SUBSTR(IDS_AREA_NM,0,ZI$DIR.AREA_NM.NAME.
              1336                CNT),'$');

   1336  4 000012   000234 236000 xsym               LDQ     ZI$DIR+156
         4 000013   000033 772000                    QRL     27
         4 000014   000000 620006                    EAX0    0,QL
         4 000015   040000 100540                    MLR     fill='040'O
         4 000016   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         4 000017   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000020   000036 116007                    CMPQ    30,DL
         4 000021   000027 603000 4                  TRC     s:1337
         4 000022   777741 620006                    EAX0    -31,QL
         4 000023   777777 660003                    ERX0    -1,DU
         4 000024   040046 100400                    MLR     fill='040'O
         4 000025   000001 000001 5                  ADSC9   1                        cn=0,n=1
         4 000026   000234 200010 xsym               ADSC9   ZI$DIR+156,Q             cn=1,n=*X0
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:163  

      931     1337    1       ZI$DIR.AREA_NM.NAME.CNT=ZI$DIR.AREA_NM.NAME.CNT+1;

   1337  4 000027   000234 236000 xsym               LDQ     ZI$DIR+156
         4 000030   001000 036003                    ADLQ    512,DU
         4 000031   000234 552040 xsym               STBQ    ZI$DIR+156,'40'O

      932     1338    1   /**/ DCBNMSF = VECTOR(ZI$DIR.AREA_NM.NAME);

   1338  4 000032   000002 237000 5                  LDAQ    2
         4 000033   000000 755000 xsym               STA     DCBNMSF
         4 000034   000001 756000 xsym               STQ     DCBNMSF+1

      933     1339    1       CALL SYS_FUNC_GETDCB ALTRET(GTDCB_ERR);

   1339  4 000035   000004 631400 5                  EPPR1   4
         4 000036   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         4 000037   000147 702000 4                  TSX2    GTDCB_ERR

      934     1340    1       ZI$DIR.AREA_NM.DCB#=DCBSF;

   1340  4 000040   000000 220000 xsym               LDX0    DCBSF
         4 000041   000244 740000 xsym               STX0    ZI$DIR+164

      935     1341    1       IF DCBADDR(ZI$DIR.AREA_NM.DCB#)->F$DCB.FCD#=%YES# THEN GOTO READ;

   1341  4 000042   000005 470400 5                  LDP0    5
         4 000043   000000 471500                    LDP1    0,,PR0
         4 000044   100000 473510                    LDP3    0,X0,PR1
         4 000045   300031 236100                    LDQ     25,,PR3
         4 000046   020000 316007                    CANQ    8192,DL
         4 000047   000070 601000 4                  TNZ     READ

      936     1342    1   /**/ ORGSF = %CONSEC#;

   1342  4 000050   000001 235007                    LDA     1,DL
         4 000051   000000 755000 xsym               STA     ORGSF
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:164  

      937     1343    1   /**/ TESTSF= %NO#;

   1343  4 000052   000000 450000 xsym               STZ     TESTSF

      938     1344    1   /**/ ACSSF = %SEQUEN#;

   1344  4 000053   000000 755000 xsym               STA     ACSSF

      939     1345    1   /**/ FUNSF = %IN#;

   1345  4 000054   000002 235007                    LDA     2,DL
         4 000055   000000 755000 xsym               STA     FUNSF

      940     1346    1   /**/ ASNSF = %FILE#;

   1346  4 000056   000001 235007                    LDA     1,DL
         4 000057   000000 755000 xsym               STA     ASNSF

      941     1347    1   /**/ FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;

   1347  4 000060   040000 100400                    MLR     fill='040'O
         4 000061   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000062   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      942     1348    1   /**/ SHARESF = %ALL#;

   1348  4 000063   200000 236003                    LDQ     65536,DU
         4 000064   000000 756000 xsym               STQ     SHARESF

      943     1349    1       CALL SYS_FUNC_OPEN ALTRET(OPN_ERR);

   1349  4 000065   000004 631400 5                  EPPR1   4
         4 000066   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000067   000136 702000 4                  TSX2    OPN_ERR

      944     1350    1   READ:
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:165  
      945     1351    1       DCBSF=ZI$DIR.AREA_NM.DCB#;

   1351  4 000070   000244 220000 xsym  READ         LDX0    ZI$DIR+164
         4 000071   000000 740000 xsym               STX0    DCBSF

      946     1352    1       BUFSF=VECTOR(IDS$RECORD);

   1352  4 000072   777640 235007                    LDA     -96,DL
         4 000073   200005 236100                    LDQ     @IDS$RECORD,,AUTO
         4 000074   000000 755000 xsym               STA     BUFSF
         4 000075   000001 756000 xsym               STQ     BUFSF+1

      947     1353    1       BUFLNSF=510;

   1353  4 000076   000776 235007                    LDA     510,DL
         4 000077   000000 755000 xsym               STA     BUFLNSF

      948     1354    1       FULLSF=%NO#;

   1354  4 000100   000000 450000 xsym               STZ     FULLSF

      949     1355    1       ENCRP_SEEDSF=ZI$DIR.ENCP_SEED;

   1355  4 000101   000027 236000 xsym               LDQ     ZI$DIR+23
         4 000102   000000 756000 xsym               STQ     ENCRP_SEEDSF

      950     1356    1       KEYVSF=%NO#;

   1356  4 000103   000000 100400                    MLR     fill='000'O
         4 000104   000004 000001 5                  ADSC9   4                        cn=0,n=1
         4 000105   000000 000377 xsym               ADSC9   KEYVSF                   cn=0,n=255

      951     1357    1       CALL SYS_FUNC_READ ALTRET(READ_ERR);

   1357  4 000106   000004 631400 5                  EPPR1   4
         4 000107   000000 701000 xent               TSX1    SYS_FUNC_READ
         4 000110   000125 702000 4                  TSX2    READ_ERR
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:166  

      952     1358    1       REC$=ADDR(IDS$RECORD);

   1358  4 000111   200005 236100                    LDQ     @IDS$RECORD,,AUTO
         4 000112   000000 756000 xsym               STQ     REC$

      953     1359    1       IF IDS$RECORD_RD(0) = 'PAGE' THEN GOTO READ;

   1359  4 000113   200005 470500                    LDP0    @IDS$RECORD,,AUTO
         4 000114   000000 236100                    LDQ     0,,PR0
         4 000115   000000 116000 3                  CMPQ    0
         4 000116   000070 600000 4                  TZE     READ

      954     1360    1       REC_TYPE=REC_FRMT.TYPE;

   1360  4 000117   000000 471400 xsym               LDP1    REC$
         4 000120   200004 473500                    LDP3    @REC_TYPE,,AUTO
         4 000121   003100 061500                    CSR     bolr='003'O
         4 000122   100000 060014                    BDSC    0,,PR1                   by=0,bit=6,n=12
         4 000123   300000 000044                    BDSC    0,,PR3                   by=0,bit=0,n=36

      955     1361    1       RETURN;

   1361  4 000124   000000 702200 xent               TSX2  ! X66_ARET

      956     1362    1   READ_ERR:
      957     1363    1       DCBSF=ZI$DIR.AREA_NM.DCB#;

   1363  4 000125   000244 220000 xsym  READ_ERR     LDX0    ZI$DIR+164
         4 000126   000000 740000 xsym               STX0    DCBSF

      958     1364    1       CALL SYS_FUNC_CLOS;

   1364  4 000127   000004 631400 5                  EPPR1   4
         4 000130   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000131   000000 011000                    NOP     0

PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:167  
      959     1365    1       ERROR_CODE=8;

   1365  4 000132   000010 235007                    LDA     8,DL
         4 000133   200006 470500                    LDP0    @ERROR_CODE,,AUTO
         4 000134   000000 755100                    STA     0,,PR0

      960     1366    1       RETURN;

   1366  4 000135   000000 702200 xent               TSX2  ! X66_ARET

      961     1367    1   OPN_ERR:
      962     1368    1       DCBSF=ZI$DIR.AREA_NM.DCB#;

   1368  4 000136   000244 220000 xsym  OPN_ERR      LDX0    ZI$DIR+164
         4 000137   000000 740000 xsym               STX0    DCBSF

      963     1369    1       CALL SYS_FUNC_CLOS;

   1369  4 000140   000004 631400 5                  EPPR1   4
         4 000141   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000142   000000 011000                    NOP     0

      964     1370    1       ERROR_CODE=9;

   1370  4 000143   000011 235007                    LDA     9,DL
         4 000144   200006 470500                    LDP0    @ERROR_CODE,,AUTO
         4 000145   000000 755100                    STA     0,,PR0

      965     1371    1       RETURN;

   1371  4 000146   000000 702200 xent               TSX2  ! X66_ARET

      966     1372    1   GTDCB_ERR:
      967     1373    1       ERROR_CODE=9;

   1373  4 000147   000011 235007       GTDCB_ERR    LDA     9,DL
         4 000150   200006 470500                    LDP0    @ERROR_CODE,,AUTO
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:168  
         4 000151   000000 755100                    STA     0,,PR0

      968     1374    1       RETURN;

   1374  4 000152   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   3     000   120101 107105                                                    PAGE

(unnamed)
 Sect OctLoc
   5     000   040040 040040   044040 040040   000007 577640   000234 006000        $   ........
   5     004   000000 000000   000000 006003                                    ........
      969     1375    1   END ZIC$GREC;

PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:169  
--  Include file information  --

   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIC$GREC.

   Procedure ZIC$GREC requires 107 words for executable code.
   Procedure ZIC$GREC requires 8 words of local(AUTO) storage.

    No errors detected in file ZIC$EDMS:IDS.:ZIC0TSI    .
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:170  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:171  
          MINI XREF LISTING

ACSSF
      1208**DCL      1344<<ASSIGN
ASNSF
      1211**DCL      1346<<ASSIGN
BUFLNSF
      1219**DCL      1353<<ASSIGN
BUFSF
      1220**DCL      1352<<ASSIGN
COUNTSF
      1270**DCL      1271--REDEF
DCBNMSF
      1251**DCL      1338<<ASSIGN
DCBSF
      1199**DCL      1340>>ASSIGN   1351<<ASSIGN   1363<<ASSIGN   1368<<ASSIGN
ENCRP_SEEDSF
      1228**DCL      1229--REDEF    1355<<ASSIGN
ERRCODESF
      1230**DCL      1235--REDEF
ERROR_CODE
        26**DCL        21--PROC     1365<<ASSIGN   1370<<ASSIGN   1373<<ASSIGN
F$DCB.ACTPOS
       987**DCL       987--REDEF
F$DCB.ARS#
       961**DCL       961--REDEF
F$DCB.ATTR
       980**DCL       981--REDEF
F$DCB.BORROW
       995**DCL       995--REDEF     995--REDEF     995--REDEF
F$DCB.DCBNAME.L
      1009**DCL      1009--IMP-SIZ
F$DCB.EOMCHAR#
       965**DCL       965--REDEF
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:172  
F$DCB.FCD#
       974**DCL      1341>>IF
F$DCB.FLDID
       990**DCL       990--REDEF
F$DCB.FORM$
       984**DCL       984--REDEF
F$DCB.FSECT
      1000**DCL      1000--REDEF
F$DCB.FSN#
       977**DCL       977--REDEF     977--REDEF     978--REDEF
F$DCB.HEADER$
       983**DCL       983--REDEF
F$DCB.IXTNSIZE#
       981**DCL       981--REDEF
F$DCB.LASTSTA$
       970**DCL       970--REDEF
F$DCB.LVL
       996**DCL       996--REDEF
F$DCB.NAME#.C
       971**DCL       971--REDEF
F$DCB.NOEOF
       993**DCL       993--REDEF
F$DCB.NRECS#
       982**DCL       982--REDEF
F$DCB.NRECX
      1001**DCL      1001--REDEF
F$DCB.OHDR
       993**DCL       993--REDEF
F$DCB.ORG#
       976**DCL       976--REDEF
F$DCB.PRECNO
       999**DCL       999--REDEF
F$DCB.RCSZ
      1005**DCL      1005--REDEF
F$DCB.RES#
       972**DCL       972--REDEF
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:173  
F$DCB.SETX
       984**DCL       984--REDEF
F$DCB.TAB$
       984**DCL       984--REDEF
F$DCB.TDA
       998**DCL       999--REDEF
F$DCB.WSN#
       972**DCL       972--REDEF
FIDSF
      1247**DCL      1347<<ASSIGN
FIDSF_RD
      1246**DCL      1247--REDEF
FULLSF
      1217**DCL      1354<<ASSIGN
FUNSF
      1210**DCL      1345<<ASSIGN
GTDCB_ERR
      1373**LABEL    1339--CALLALT
HELPCODE
      1264**DCL      1269--REDEF
ICHKSUM
      1329**DCL      1330--REDEF
IDS$RECORD
        24**DCL        21--PROC       25--REDEF    1352--ASSIGN   1358--ASSIGN
IDS$RECORD_RD
        25**DCL      1359>>IF
IDS_AREA_NM
        22**DCL        21--PROC     1334>>CALLBLT  1336>>CALLBLT
INDX
        27**DCL      1334<<CALLBLT  1335>>ASSIGN
I_O_BUF$
      1307**DCL      1308--IMP-PTR
KEYVSF
      1202**DCL      1207--REDEF    1356<<ASSIGN
KEYVSF.WD_ONE
      1204**DCL      1205--REDEF
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:174  
MSGCODE
      1236**DCL      1237--REDEF
OPN_ERR
      1368**LABEL    1349--CALLALT
ORGSF
      1200**DCL      1342<<ASSIGN
READ
      1351**LABEL    1341--GOTO     1359--GOTO
READ_ERR
      1363**LABEL    1357--CALLALT
REC$
      1288**DCL      1311--IMP-PTR  1358<<ASSIGN   1360>>ASSIGN
REC_DATA_LN
      1316**DCL      1315--IMP-SIZ
REC_FRMT.TYPE
      1313**DCL      1360>>ASSIGN
REC_TYPE
        23**DCL        21--PROC     1360<<ASSIGN
SHARESF
      1250**DCL      1348<<ASSIGN
SYS_FUNC_CLOS
        31**DCL-ENT  1364--CALL     1369--CALL
SYS_FUNC_GETDCB
        28**DCL-ENT  1339--CALL
SYS_FUNC_OPEN
        29**DCL-ENT  1349--CALL
SYS_FUNC_READ
        30**DCL-ENT  1357--CALL
TESTSF
      1212**DCL      1343<<ASSIGN
ZI$DIR.ALTKEY
       261**DCL       262--REDEF     263--REDEF
ZI$DIR.AREAFID
       227**DCL       228--REDEF
ZI$DIR.AREA_NM.DCB#
       294**DCL      1340<<ASSIGN   1341--IF       1351>>ASSIGN   1363>>ASSIGN   1368>>ASSIGN
PL6.E3A0      #007=ZIC$GREC File=ZIC$EDMS:IDS.:ZIC0TSI                           FRI 09/05/97 11:37 Page:175  
ZI$DIR.AREA_NM.NAME
       291**DCL      1338--ASSIGN
ZI$DIR.AREA_NM.NAME.CNT
       292**DCL      1335<<ASSIGN   1336>>CALLBLT  1337<<ASSIGN   1337>>ASSIGN
ZI$DIR.AREA_NM.NAME.TEXT
       293**DCL      1336<<CALLBLT  1347>>ASSIGN
ZI$DIR.DATE
       266**DCL       270--REDEF
ZI$DIR.DEST_SEED
       222**DCL       223--REDEF     224--REDEF
ZI$DIR.ENCP_SEED
       219**DCL       220--REDEF     221--REDEF    1355>>ASSIGN
ZI$DIR.REPRT_ZERO
       253**DCL       254--REDEF
ZI$DIR.SCHFID
       225**DCL       226--REDEF
ZI$DIR.TIME
       271**DCL       276--REDEF
