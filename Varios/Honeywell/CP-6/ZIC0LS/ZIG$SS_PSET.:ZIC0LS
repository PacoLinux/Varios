
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:1    
        1        1        /*M*     ZIG$SS_PSET     I-D-S/II  DBACS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME:    ZIG$SS_PSET
        9        9        PURPOSE: THIS SUBROUTINE IS CALLED FROM X$PARSE TO DO THREE THINGS:
       10       10                 FIRST:
       11       11                      TO GET MORE INPUT FOR X$PARSE IF THE LINE CONTINUES.
       12       12                      TO DO THIS IT CALLS ZIG$SS_READ.
       13       13                 SECOND:
       14       14                      SET THINGS IN THE SUBSCHEMA FILE FOR THE VALIDATION
       15       15                      PHASE OF THE SUBSCHEMA TO USE.
       16       16                 THIRD:
       17       17                      TO FIND ALL SYNTAX ERRORS AND PRINT OUT THE MESSAGES
       18       18                      ON BOTH M$LO AND M$DO BY M$ERRMSG.
       19       19                      ALSO IT WILL TRY AND RECOVER FROM ALL SYNTAX ERROR AND
       20       20                      PARSE AS MUCH AS POSIBLE SO ONE COULD GET COMPOUNDING
       21       21                      ERRORS BUT HE SHOULD GET ALL THE ERROR IN THE SUBSCHEMA
       22       22                      DDL PRINTED OUT IN ONE PASS OF THE SYNTAX CHECKER.
       23       23        */
       24       24        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:2    
       25       25        /*
       26       26        ZZZZZ  III   GGG    $    SSS   SSS        PPPP   SSS  EEEEE TTTTT
       27       27            Z   I   G   G  $$$  S   S S   S       P   P S   S E       T
       28       28           Z    I   G     $ $   S     S           P   P S     E       T
       29       29          Z     I   G      $$$   SSS   SSS        PPPP   SSS  EEEE    T
       30       30         Z      I   G  GG   $ $     S     S       P         S E       T
       31       31        Z       I   G   G  $$$  S   S S   S       P     S   S E       T
       32       32        ZZZZZ  III   GGG    $    SSS   SSS        P      SSS  EEEEE   T
       33       33                                            _____
       34       34        */
       35       35        ZIG$SS_PSET:
       36       36            PROC (PARAN);
       37       37    1   DCL ZIG$SS_READ ENTRY;
       38       38    1   DCL WRITSF ENTRY (2);
       39       39    1   DCL READSF ENTRY (2);
       40       40    1   DCL WRIT64 ENTRY (2);
       41       41    1   DCL READ64 ENTRY (2);
       42       42    1   DCL ZIG$SS_PIC ENTRY (2);
       43       43    1   DCL NO_ERRORS BIT (1) EXT;
       44       44    1   DCL BUFFER_ERR BIT(1) EXT;
       45       45    1   DCL SUB_ERR BIT (72) SYMREF;
       46       46    1   DCL END_SUBSCHEMA BIT (1) EXT;
       47       47    1   DCL COMP_TYPE BIT (1) STATIC;
       48       48    1   DCL LHOLD UBIN (36) EXT;
       49       49    1   DCL LTDP_HOLD UBIN (36) EXT;
       50       50    1   DCL RTDP_HOLD UBIN (36) EXT;
       51       51    1   DCL 1 FIELD1 EXT,
       52       52    1         2 COUNT1 UBIN (9) UNAL,
       53       53    1         2 TEXT1 CHAR (31) UNAL;
       54       54    1   DCL 1 FIELD2 EXT,
       55       55    1         2 COUNT2 UBIN (9) UNAL,
       56       56    1         2 TEXT2 CHAR (31) UNAL;
       57       57    1   DCL 1 FIELD3 EXT,
       58       58    1         2 COUNT3 UBIN (9) UNAL,
       59       59    1         2 TEXT3 CHAR (31) UNAL;
       60       60    1   DCL WORD1 CHAR (30) STATIC;
       61       61    1   DCL NUM UBIN (36) STATIC;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:3    
       62       62    1   DCL LINE_COUNT UBIN (36) EXT;
       63       63    1   DCL UTSS UBIN (36) STATIC ALIGNED;
       64       64    1   DCL INTERNAL_ID UBIN (36) EXT;
       65       65    1   DCL EOFC CHAR (128) EXT INIT ('/*/*/*/*/*/*');
       66       66    1   DCL UWA_ALLOC UBIN (36) EXT;
       67       67    1   DCL LOCK_PTR$ PTR STATIC;
       68       68    1   DCL STRING12 CHAR (12) BASED;
       69       69    1   DCL 1 CURRENT_ALIAS EXT UNAL,
       70       70    1         2 TYPE UBIN (36) ,
       71       71    1         2 SUBSCHEMA_NAME CHAR (30),
       72       72    1         2 SCHEMA_NAME CHAR (30),
       73       73    1         2 QUAL_NAME CHAR (30);
       74       74    1   DCL LAST_STATUS UBIN (6) EXT INIT (0);
       75       75    1   DCL STATUS UBIN (6) STATIC INIT (6);
       76       76    1   DCL DESCPTR PTR STATIC INIT (ADDR(BUFFER1));
       77       77    1   DCL BUFFER1 CHAR (128) STATIC;
       78       78    1   DCL BUFFER_TEMP CHAR (128) BASED (DESCPTR);
       79       79    1   DCL EOF UBIN (36);
       80       80    1   DCL BUFFER_SIZE UBIN (36);
       81       81    1   DCL SAVE_RECORD_NUM UBIN (36) STATIC INIT (0);
       82       82    1   DCL SAVE_RECORD_OFFSET UBIN (36) STATIC INIT (0);
       83       83    1   DCL SAVE_LEVEL UBIN (36) STATIC INIT (1);
       84       84    1   DCL START UBIN (36);
       85       85    1   DCL ERROR_STATUS UBIN (36) EXT;
       86       86    1   DCL PTR$ PTR STATIC;
       87       87    1   DCL ZIG$HASH_IT ENTRY (8);
       88       88    1   DCL 1 TRANS_ALIAS BASED,
       89       89    1         2 * CHAR (44) UNAL,
       90       90    1         2 SCHEMA_NAME CHAR (30) UNAL,
       91       91    1         2 QUAL_NAME CHAR (30) UNAL;
       92       92    1   DCL RECORD_TYPE UBIN (9) INIT (7) STATIC;
       93       93    1   DCL I UBIN (36) STATIC;
       94       94    1   DCL ADD_FILLER UBIN (36) STATIC;
       95       95    1   DCL LINE CHAR (4000) EXT;
       96       96    1   DCL NO_ITEMS BIT (1) STATIC INIT ('0'B);
       97       97    1   DCL SAVE_RECORD_NAME CHAR (30) EXT;
       98       98    1   DCL SAVE_PARAN_CODE UBIN (36) STATIC INIT (0);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:4    
       99       99    1   DCL SAVE_NUM UBIN (36) STATIC;
      100      100    1   DCL LAST_GROUP(0:49) UBIN (36) EXT;
      101      101    1   DCL GROUP_PACKED(0:49) BIT (1) EXT UNAL;
      102      102    1   DCL LAST_FILLER UBIN (36) STATIC;
      103      103    1   DCL LARGEST_GROUP UBIN (36) EXT;
      104      104    1   DCL TEMP_WORD CHAR (30) STATIC;
      105      105    1   DCL SSCALE SBIN (6) STATIC;
      106      106    1   DCL WROTE_TYPE_9 BIT (1) STATIC;
      107      107    1   DCL FACTER(0:27) CONSTANT UBIN (36) INIT(
      108      108    1    2*3,1*3,2*22);
      109      109    1   DCL TN_S(0:27) CONSTANT BIT (3) UNAL INIT(
      110      110    1    '000'B*3,'111'B,'110'B*2,'011'B,'001'B,'010'B,'011'B*2,'000'B*17);
      111      111    1   DCL TITLE_DIV BIT(1) EXT;
      112      112    1   DCL MAPPING_DIV BIT(1) EXT;
      113      113    1   DCL ALIAS_SEC BIT(1) EXT;
      114      114    1   DCL STRUCTURE_DIV BIT(1) EXT;
      115      115    1   DCL REALM_SEC BIT(1) EXT;
      116      116    1   DCL SET_SEC BIT(1) EXT;
      117      117    1   DCL KEY_SEC BIT(1) EXT;
      118      118    1   DCL RECORD_SEC BIT(1) EXT;
      119      119    1   DCL USAGE_IS BIT(1) STATIC;
      120      120    1   DCL TYPE_COMP BIT(1) STATIC;
      121      121    1   DCL DISPLAY BIT(1) STATIC;
      122      122    1   DCL NUM_BIT BIT(1) STATIC;
      123      123    1   DCL COMP BIT(1) STATIC;
      124      124    1   DCL LEFT BIT(1) STATIC;
      125      125    1   DCL RIGHT BIT(1) STATIC;
      126      126    1   DCL LEADING BIT(1) STATIC;
      127      127    1   DCL TRAILING BIT(1) STATIC;
      128      128    1   DCL SEPARATE BIT(1) STATIC;
      129      129    1   DCL PIC_STR BIT(1) STATIC;
      130      130    1   DCL INVOK BIT(1) STATIC;
      131      131    1   DCL PRIV BIT(1) STATIC;
      132      132    1   DCL DIAG BIT(1) STATIC;
      133      133        /*D*
      134      134        NAME:    SYNTAX BITS.
      135      135        DESCRIPTION:
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:5    
      136      136              These bit up above are for the heart of a manager. He one
      137      137            day looked at the syntax of the subschema DDL and had a
      138      138            heart attack. Why some fool could put the filler words
      139      139            'USAGE IS' in a million time and the parser would still
      140      140            think that it was syntaxicly correct. He said that, "All
      141      141            users would put USAGE IS USAGE USAGE USAGE USAGE IS IS IS IS IS
      142      142            IS IS IS IS IS IS IS just to make sure that the parser syntaxed
      143      143            it correctly. Well that bit make sure that each and every crazy
      144      144            programer (Donald R. Pederson first) will not type in to many
      145      145            filler words just to see how stupit I can be. Well if you don't
      146      146            know who this manager that knows how stupit all DBA are, his
      147      147            init are: D. D.
      148      148
      149      149                 you know who:
      150      150                      Donald R. Pederson!
      151      151        */
      152      152        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:6    
      153      153        %INCLUDE CP_6;
      154      234        %INCLUDE CP_6_SUBS;
      155      774        %FPT_TIME (FPTN = TIME_FPT,DEST=UTS,TSTAMP=UTSS);
      156      793        %INCLUDE ZI_ERRORS_SUBS;
      157     1313        %INCLUDE ZIG_DIR_STRUCS;
      158     1443        %INCLUDE XU_MACRO_C;
      159     4549        %INCLUDE XU_SUBS_C;
      160     4641        %P$PCB(NAME=SS_TRAN,STCLASS=SYMREF);
      161     4842        %PARSE$PARAM(NAME=PARAN);
      162     4923        %PARSE$OUT(NAME=BLK,STCLASS=BASED);
      163     4968        %PARSE$SYM(NAME=SYM,STCLASS=BASED);
      164     5006        %INCLUDE ZIG_GENERAL;
      165     5114        %INCLUDE ZI_SUB_LANG;
      166     6829        %GENERAL;
      167     6953        %DESC_TYPE_9;
      168     7130        %DESC_TYPE_9(NAME_MAIN=SAVE_TYPE_9);
      169     7307        %PARSE_SUBS;
      170     7379        %CONTROL_BLOCK;
      171     7487        %DESC_TYPE_100;
      172     7527        %DESC_TYPE_110;
      173     7591        %DESC_TYPE_200;
      174     7644        %DESC_TYPE_210;
      175     7699        %DESC_TYPE_300;
      176     7768        %DESC_TYPE_350;
      177     7806        %DESC_TYPE_400;
      178     7865        %DESC_TYPE_410;
      179     7921        %DESC_TYPE_420;
      180     7954        %DESC_TYPE_430;
      181     8113        %DESC_TYPE_30;
      182     8140        %DESC_TYPE_31;
      183     8182        %DESC_TYPE_32;
      184     8248        %DESC_TYPE_33;
      185     8293        %DESC_TYPE_430(STCLASS=BASED,NAME=TYPE_430_B);
      186     8452        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:7    
      187     8453        /*
      188     8454         GGG  EEEEE TTTTT       W   W  OOO  RRRR  DDDD
      189     8455        G   G E       T         W   W O O O R   R D   D
      190     8456        G     E       T         W   W O O O R   R D   D
      191     8457        G     EEEE    T         W W W O  OO RRRR  D   D
      192     8458        G  GG E       T         W W W O   O R R   D   D
      193     8459        G   G E       T         W W W O   O R  R  D   D
      194     8460         GGG  EEEEE   T          W W   OOO  R   R DDDD
      195     8461        */
      196     8462
      197     8463        /*
      198     8464              This subroutine gets a text word from the X$PARSE
      199     8465            and puts it into WORD1 and FIELD1.TEXT1 and the length
      200     8466            in FIELD1.COUNT1.
      201     8467        */
      202     8468    1   GET_WORD:
      203     8469    1       PROC;
      204     8470    2       WORD1=PARAN.OUT$ -> SYM.TEXT;
      205     8471    2       FIELD1.COUNT1=PARAN.OUT$ -> SYM.COUNT;
      206     8472    2       FIELD1.TEXT1=WORD1;
      207     8473    2       RETURN;
      208     8474    2   END GET_WORD;
      209     8475        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:8    
      210     8476        /*
      211     8477         CCC  H   H  AAA  N   N  GGG  EEEEE       TTTTT  OOO         SSS  TTTTT RRRR
      212     8478        C   C H   H A   A N   N G   G E             T   O O O       S   S   T   R   R
      213     8479        C     H   H A   A NN  N G     E             T   O O O       S       T   R   R
      214     8480        C     HHHHH AAAAA N N N G     EEEE          T   O  OO        SSS    T   RRRR
      215     8481        C     H   H A   A N  NN G  GG E             T   O   O           S   T   R R
      216     8482        C   C H   H A   A N   N G   G E             T   O   O       S   S   T   R  R
      217     8483         CCC  H   H A   A N   N  GGG  EEEEE         T    OOO         SSS    T   R   R
      218     8484                                            ______            ______
      219     8485        */
      220     8486        /*
      221     8487            THIS SUBROUTINE CHANGES SCHEMA WORDS INTO COBOL WORDS '_' TO '-'.
      222     8488        */
      223     8489    1   CHANGE_TO_STR:
      224     8490    1       PROC (CHANGE_STR);
      225     8491    2   DCL CHANGE_STR CHAR (30);
      226     8492    2   DCL COUNT1 UBIN (36);
      227     8493    2   DCL ONE_CHANGE (0:4) CHAR (2) STATIC INIT ('  ',
      228     8494    2    '_-' /* COBOL */, '_$' /* FORTRAN */, '__' /* APL */, '__' /*BASIC*/);
      229     8495    2       IF SUB_LANGUAGE = #APL OR SUB_LANGUAGE = #BASIC THEN RETURN;
      230     8496    3       DO WHILE ('1'B);
      231     8497    3           CALL INDEX1(COUNT1,SUBSTR(ONE_CHANGE(SUB_LANGUAGE),0,1),CHANGE_STR)
      232     8498    3              ALTRET (ALT);
      233     8499    3           CALL INSERT(CHANGE_STR,COUNT1,1,SUBSTR(ONE_CHANGE(SUB_LANGUAGE),1,1));
      234     8500    3           END;
      235     8501    2   ALT:
      236     8502    2       RETURN;
      237     8503    2   END CHANGE_TO_STR;
      238     8504        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:9    
      239     8505        /*
      240     8506            THIS SUBROUTINE CHANGES COBOL WORDS INTO SCHEMA WORDS '_' TO '-'.
      241     8507        */
      242     8508    1   CHANGE_TO_STR_SCH:
      243     8509    1       PROC (CHANGE_STR);
      244     8510    2   DCL CHANGE_STR CHAR (30);
      245     8511    2   DCL COUNT1 UBIN (36);
      246     8512    2   DCL ONE_CHANGE (0:4) CHAR (2) STATIC INIT ('  ',
      247     8513    2    '-_' /* COBOL */, '$_' /* FORTRAN */, '__' /* APL */, '__' /*BASIC*/);
      248     8514    2       IF SUB_LANGUAGE = #APL OR SUB_LANGUAGE = #BASIC THEN RETURN;
      249     8515    3       DO WHILE ('1'B);
      250     8516    3           CALL INDEX1(COUNT1,SUBSTR(ONE_CHANGE(SUB_LANGUAGE),0,1),CHANGE_STR)
      251     8517    3              ALTRET (ALT);
      252     8518    3           CALL INSERT(CHANGE_STR,COUNT1,1,SUBSTR(ONE_CHANGE(SUB_LANGUAGE),1,1));
      253     8519    3           END;
      254     8520    2   ALT:
      255     8521    2       RETURN;
      256     8522    2   END CHANGE_TO_STR_SCH;
      257     8523        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:10   
      258     8524    1   GET_NUM:
      259     8525    1       PROC(LOW,HIGH);
      260     8526    2   DCL LOW UBIN (36);
      261     8527    2   DCL HIGH UBIN (36);
      262     8528    2       WORD1=PARAN.OUT$ -> BLK.SUBLK$(0) -> SYM.TEXT;
      263     8529    2       FIELD1.COUNT1=PARAN.OUT$ -> BLK.SUBLK$(0) -> SYM.COUNT;
      264     8530    2       FIELD1.TEXT1=WORD1;
      265     8531    2       CALL CHARBIN(NUM,SUBSTR(WORD1,0,FIELD1.COUNT1));
      266     8532    2       IF NUM<LOW OR NUM>HIGH
      267     8533    3       THEN DO;
      268     8534    3           CALL ERROR(%NUM_ERROR);
      269     8535    3           NUM=LOW;
      270     8536        /*E*     ERROR:    ZIG-NUM_ERROR-C
      271     8537        MESSAGE: SYNTAX ERROR: The number %U1 is out of the allowed range.
      272     8538                 The number %U1 will be set to the lowest limit for further
      273     8539                 syntax checking to continue.
      274     8540        */
      275     8541    3           END;
      276     8542    2   END GET_NUM;
      277     8543        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:11   
      278     8544        /*
      279     8545         III  N   N  III  TTTTT       TTTTT Y   Y PPPP  EEEEE        999
      280     8546          I   N   N   I     T           T   Y   Y P   P E           9   9
      281     8547          I   NN  N   I     T           T    Y Y  P   P E           9   9
      282     8548          I   N N N   I     T           T     Y   PPPP  EEEE         9999
      283     8549          I   N  NN   I     T           T     Y   P     E               9
      284     8550          I   N   N   I     T           T     Y   P     E           9   9
      285     8551         III  N   N  III    T           T     Y   P     EEEEE        999
      286     8552                                _____                         _____
      287     8553        */
      288     8554    1   INIT_TYPE_9: PROC;
      289     8555    2   DCL WORDS32 CHAR(128) BASED;
      290     8556    2       ADDR(DESC_TYPE_9)->WORDS32 = ADDR(SAVE_TYPE_9)->WORDS32;
      291     8557    2       DESC_TYPE_9.LINE = LINE_COUNT -1;
      292     8558    2       DESC_TYPE_9.SIZE = 100 + FIELD1.COUNT1;
      293     8559    2       IF MOD(DESC_TYPE_9.SIZE,4) ~= 0
      294     8560    2       THEN DESC_TYPE_9.SIZE = DESC_TYPE_9.SIZE + 4 - MOD(DESC_TYPE_9.SIZE,4);
      295     8561    2       RETURN;
      296     8562    2   END INIT_TYPE_9;
      297     8563        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:12   
      298     8564        /*
      299     8565         CCC  H   H EEEEE  CCC  K   K        AAA  L      III   AAA   SSS
      300     8566        C   C H   H E     C   C K  K        A   A L       I   A   A S   S
      301     8567        C     H   H E     C     K K         A   A L       I   A   A S
      302     8568        C     HHHHH EEEE  C     KK          AAAAA L       I   AAAAA  SSS
      303     8569        C     H   H E     C     K K         A   A L       I   A   A     S
      304     8570        C   C H   H E     C   C K  K        A   A L       I   A   A S   S
      305     8571         CCC  H   H EEEEE  CCC  K   K       A   A LLLLL  III  A   A  SSS
      306     8572                                      _____
      307     8573
      308     8574              DDDD  U   U PPPP   SSS
      309     8575              D   D U   U P   P S   S
      310     8576              D   D U   U P   P S
      311     8577              D   D U   U PPPP   SSS
      312     8578              D   D U   U P         S
      313     8579              D   D U   U P     S   S
      314     8580              DDDD   UUU  P      SSS
      315     8581        _____
      316     8582        */
      317     8583        /*
      318     8584              This subroutine checks to see if the current word in the
      319     8585            subschema ddl text is a reserved word or a alias the word
      320     8586            has a alias assocated to it or the user just gooffed and
      321     8587            has two different words that are the same so that a error
      322     8588            must be generated.
      323     8589
      324     8590              It will also check the character in the current word to
      325     8591            see if they are in the languages character set and if not
      326     8592            error this line of the subschema ddl.
      327     8593
      328     8594        */
      329     8595    1   CHECK_ALIAS_DUPS:
      330     8596    1       PROC;
      331     8597    2   DCL MUST_ALIAS UBIN (36);
      332     8598    2   DCL CHAR_SET (0:4) CHAR (38) STATIC INIT ( 'NOT USED',
      333     8599    2    'QWERTYUIOPASDFGHJKLZXCVBNM-1234567890 ' /* COBOLS */,
      334     8600    2    'QWERTYUIOPASDFGHJKLZXCVBNM$1234567890 ' /* FORTRANS */,
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:13   
      335     8601    2    'QWERTYUIOPASDFGHJKLZXCVBNM_1234567890 ' /* APLS */,
      336     8602    2   'QWERTYUIOPASDFGHJKLZXCVBNM_1234567890 ' /* BASICS */
      337     8603    2    );
      338     8604    2   DCL I UBIN (36);
      339     8605    2   DCL J UBIN (36);
      340     8606    2       MUST_ALIAS = 0;
      341     8607    2       TEMP_WORD = WORD1;
      342     8608    2       I = 0;
      343     8609    3       DO WHILE (SUBSTR(WORD1,I,1) ~= ' ' AND I < 30);
      344     8610    3           CALL INDEX1(J,SUBSTR(WORD1,I,1),CHAR_SET(SUB_LANGUAGE));
      345     8611    3           IF J > 38
      346     8612    4           THEN DO;
      347     8613    4               MUST_ALIAS = 4;
      348     8614    4               END;
      349     8615    3           IF J = 26 THEN CALL INSERT(TEMP_WORD,I,1,'_');
      350     8616    3           I = I + 1;
      351     8617    3           END;
      352     8618    3       DO CASE (LAST_STATUS);
      353     8619    3       CASE (#AREA_DEF);
      354     8620    3           TYPE_200.SUB_AREA_NAME = WORD1;
      355     8621    3           TYPE_200.AREA_NAME = TEMP_WORD;
      356     8622    3           TYPE_200.AREA_BITS.ALIASED = '0'B;
      357     8623    3       CASE (#SET_DEF);
      358     8624    3           TYPE_300.SUB_SET_NAME = WORD1;
      359     8625    3           TYPE_300.SET_NAME = TEMP_WORD;
      360     8626    3           TYPE_300.ALIASED = '0'B;
      361     8627    3       CASE (#KEY_DEF);
      362     8628    3           TYPE_350.SUB_KEY_NAME = WORD1;
      363     8629    3           TYPE_350.KEY_NAME = TEMP_WORD;
      364     8630    3           TYPE_350.ALIASED = '0'B;
      365     8631    3       CASE (#RECORD_DEF);
      366     8632    3           TYPE_400.SUB_RECORD_NAME = WORD1;
      367     8633    3           TYPE_400.RECORD_NAME = TEMP_WORD;
      368     8634    3           TYPE_400.ALIASED = '0'B;
      369     8635    3       CASE (#ITEM_DEF);
      370     8636    3           TYPE_430.SUB_FIELD_NAME = WORD1;
      371     8637    3           IF SUB_LANGUAGE = #BASIC
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:14   
      372     8638    4           THEN DO;
      373     8639    4               CALL INDEX1(J,'$',TEMP_WORD);
      374     8640    4               TYPE_430.FIELD_NAME = SUBSTR(TEMP_WORD,0,J);
      375     8641    4               END;
      376     8642    3           ELSE
      377     8643    3               TYPE_430.FIELD_NAME = TEMP_WORD;
      378     8644    3           TYPE_430.ALIASED = '0'B;
      379     8645    3           END;
      380     8646    2       CALL INDEX1(J,SUBSTR(WORD1,0,1),CHAR_SET(SUB_LANGUAGE));
      381     8647    2       IF MUST_ALIAS = 4 OR J > 25
      382     8648    3       THEN DO;
      383     8649    3           CALL ERROR(#BAD_CHAR);
      384     8650        /*E*     ERROR:    ZIG-#BAD_CHAR-C
      385     8651        MESSAGE: A bad character is present in the word %U1.
      386     8652        */
      387     8653    3           END;
      388     8654    3       DO CASE (SUB_LANGUAGE);
      389     8655    3       CASE (#COBOL);
      390     8656    3           IF LAST_STATUS = #ITEM_DEF
      391     8657    3           THEN J = RECORD_TYPE;
      392     8658    3           ELSE J = 1;
      393     8659    3           CALL ZIG$HASH_IT(WORD1,#ADD,ERROR_STATUS,0,J,9,PTR$,LAST_STATUS);
      394     8660    3       CASE (#FORTRAN,#APL,#BASIC);
      395     8661    3           J = 0;
      396     8662    3           CALL ZIG$HASH_IT(WORD1,#ADD,ERROR_STATUS,0,0,9,PTR$,LAST_STATUS);
      397     8663        /*
      398     8664             This caused a problem with BASIC aliases (STAR #24944) so I
      399     8665             handled BASIC with APL & FORTRAN--this is how it was done until
      400     8666             B05 anyway.  If a problem occurs because of this, handle alias
      401     8667             problem by stripping '$' off in the ALIAS_SS_NAME case below
      402     8668             (main part) before storing WORD1 in CURRENT_ALIAS.SCHEMA_NAME
      403     8669             and put this BASIC case back in here.  We want to call HASH_IT
      404     8670             consistently with ot without the '$' for BASIC aliases.
      405     8671
      406     8672            CASE (#BASIC);
      407     8673                 J=0;
      408     8674                 I=0;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:15   
      409     8675                 CALL INDEX1(I,'$',TEMP_WORD);
      410     8676                 TEMP_WORD=SUBSTR(TEMP_WORD,0,I);
      411     8677                 CALL ZIG$HASH_IT(TEMP_WORD,#ADD,ERROR_STATUS,0,0,9,PTR$,LAST_STATUS);
      412     8678        */
      413     8679    3           END;
      414     8680    3       DO CASE (ERROR_STATUS);
      415     8681    3       CASE(1);
      416     8682         /*
      417     8683            There is a alias in the table so put out a descriptor
      418     8684            for what ever type of alias and word it is.
      419     8685         */
      420     8686    3           TEMP_WORD = PTR$ -> TRANS_ALIAS.SCHEMA_NAME;
      421     8687    3           CALL CHANGE_TO_STR_SCH(TEMP_WORD);
      422     8688    4           DO CASE (LAST_STATUS);
      423     8689    4           CASE (#AREA_DEF);
      424     8690    4               TYPE_200.AREA_NAME = TEMP_WORD;
      425     8691    4               TYPE_200.AREA_BITS.ALIASED = '1'B;
      426     8692    4               CALL ZIG$HASH_IT(TYPE_200.AREA_NAME,#ADD,ERROR_STATUS,0,
      427     8693    4                  J,9,PTR$,LAST_STATUS);
      428     8694    4           CASE (#SET_DEF);
      429     8695    4               TYPE_300.SET_NAME = TEMP_WORD;
      430     8696    4               TYPE_300.ALIASED = '1'B;
      431     8697    4           CASE (#KEY_DEF);
      432     8698    4               TYPE_350.KEY_NAME = TEMP_WORD;
      433     8699    4               TYPE_350.ALIASED = '1'B;
      434     8700    4           CASE (#RECORD_DEF);
      435     8701    4               TYPE_400.RECORD_NAME = TEMP_WORD;
      436     8702    4               TYPE_400.ALIASED = '1'B;
      437     8703    4           CASE (#ITEM_DEF);
      438     8704    4               IF SUB_LANGUAGE = #BASIC
      439     8705    5               THEN DO;
      440     8706    5                   CALL INDEX1(J,'$',TEMP_WORD);
      441     8707    5                   TYPE_430.FIELD_NAME = SUBSTR(TEMP_WORD,0,J);
      442     8708    5                   END;
      443     8709    4               ELSE
      444     8710    4                   TYPE_430.FIELD_NAME = TEMP_WORD;
      445     8711    4               TYPE_430.ALIASED = '1'B;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:16   
      446     8712    4               END;
      447     8713    3       CASE (2);
      448     8714         /*
      449     8715            There is a dup in the hash table all ready for this
      450     8716            word so error this line.
      451     8717         */
      452     8718    3           CALL ERROR(#DUP_DATA_NAME);
      453     8719        /*E*     ERROR:    ZIG-#DUP_DATA_NAME-C
      454     8720        MESSAGE: For the word %U1 there is a duplicate name in the subschema
      455     8721                 DDL text. One of the names must be changed in the subschema
      456     8722                 text and aliased.
      457     8723        */
      458     8724    3       CASE (3);
      459     8725         /*
      460     8726            There is a user defined word that is the same as
      461     8727            reserved word for this language.
      462     8728         */
      463     8729    3           CALL ERROR(#USER_WORD_RES);
      464     8730        /*E*     ERROR:    ZIG-#USER_WORD_RES-C
      465     8731        MESSAGE: The word %U1 is the same as a reserved word for the
      466     8732                 language that the subschema is for so the word %U1
      467     8733                 must be aliased in the subschema DDL.
      468     8734        */
      469     8735    3           END;
      470     8736    2       RETURN;
      471     8737    2   END CHECK_ALIAS_DUPS;
      472     8738        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:17   
      473     8739        /*
      474     8740         SSS  TTTTT  OOO  RRRR  EEEEE
      475     8741        S   S   T   O O O R   R E
      476     8742        S       T   O O O R   R E
      477     8743         SSS    T   O  OO RRRR  EEEE
      478     8744            S   T   O   O R R   E
      479     8745        S   S   T   O   O R  R  E
      480     8746         SSS    T    OOO  R   R EEEEE
      481     8747        */
      482     8748        /*
      483     8749
      484     8750              This subroutine saves the descriptors so that they can
      485     8751            be written a the end of the subschema file (in the descriptor
      486     8752            section). This is nessecary since this is a one pass compiler
      487     8753            and needs to write out two sections in the subschema file.
      488     8754        */
      489     8755    1   STORE:
      490     8756    1       PROC (STRING_TO_STORE);
      491     8757    2   DCL STRING_TO_STORE CHAR (132);
      492     8758    2       CALL UPUT('5*',ADDR(STRING_TO_STORE),32);
      493     8759    2       RETURN;
      494     8760    2   END STORE;
      495     8761        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:18   
      496     8762        /*
      497     8763         AAA  L     L      OOO   CCC
      498     8764        A   A L     L     O O O C   C
      499     8765        A   A L     L     O O O C
      500     8766        AAAAA L     L     O  OO C
      501     8767        A   A L     L     O   O C
      502     8768        A   A L     L     O   O C   C
      503     8769        A   A LLLLL LLLLL  OOO   CCC
      504     8770        */
      505     8771        /*
      506     8772            This is the allocate procedure to allocate space in the UWA.
      507     8773            there are three parameters:
      508     8774                 1 -  the amount of space to allocate in nibles
      509     8775                 2 -  the alignment in nibles (word = 8)
      510     8776                 3 -  the offset of where the thing was allocated,
      511     8777                      (this is in the same units as the alignment:
      512     8778                           word allignment the number of words
      513     8779                           nible allignment then number of nibles
      514     8780                      from the start of the UWA.)
      515     8781        */
      516     8782    1   ALLOC:
      517     8783    1       PROC (AMOUNT,ALIGNMENT,RETURN_START);
      518     8784    2   DCL AMOUNT UBIN (36);
      519     8785    2   DCL ALIGNMENT UBIN (36);
      520     8786    2   DCL RETURN_START UBIN (36);
      521     8787    2       IF MOD(UWA_ALLOC,ALIGNMENT) ~= 0
      522     8788    2       THEN UWA_ALLOC = UWA_ALLOC + ALIGNMENT - MOD(UWA_ALLOC,ALIGNMENT);
      523     8789    2       RETURN_START = UWA_ALLOC/ALIGNMENT;
      524     8790    2       UWA_ALLOC = UWA_ALLOC + AMOUNT;
      525     8791    2       RETURN;
      526     8792    2   END ALLOC;
      527     8793        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:19   
      528     8794        /*
      529     8795        U   U PPPP  DDDD   AAA  TTTTT EEEEE        GGG  RRRR   OOO  U   U PPPP
      530     8796        U   U P   P D   D A   A   T   E           G   G R   R O O O U   U P   P
      531     8797        U   U P   P D   D A   A   T   E           G     R   R O O O U   U P   P
      532     8798        U   U PPPP  D   D AAAAA   T   EEEE        G     RRRR  O  OO U   U PPPP
      533     8799        U   U P     D   D A   A   T   E           G  GG R R   O   O U   U P
      534     8800        U   U P     D   D A   A   T   E           G   G R  R  O   O U   U P
      535     8801         UUU  P     DDDD  A   A   T   EEEEE        GGG  R   R  OOO   UUU  P
      536     8802                                            _____
      537     8803        */
      538     8804        /*
      539     8805              This subroutine updates the length of group data
      540     8806            items for COBOL since all group items must be the
      541     8807            length of all the items under it. This must be done
      542     8808            by reading the block allready written into DESC_TYPE_9
      543     8809            and undateing the fields then writting it out again to
      544     8810            the same place.
      545     8811
      546     8812
      547     8813              There is better ways to do this but i wanted the translater
      548     8814            to be a one pass compiler so you have to update things like
      549     8815            this in a one pass compiler.
      550     8816        */
      551     8817    1   UPDATE_GROUP:
      552     8818    1       PROC(START_LEVEL);
      553     8819    2   DCL START_LEVEL UBIN (36);
      554     8820    2   DCL I UBIN (36);
      555     8821    3       DO I = START_LEVEL TO LARGEST_GROUP;
      556     8822    3           IF LAST_GROUP(I) ~= 0
      557     8823    4           THEN DO;
      558     8824    4               CALL READSF(LAST_GROUP(I),DESC_TYPE_9);
      559     8825    4               IF GROUP_PACKED(I)
      560     8826    5               THEN DO;
      561     8827    5                   DESC_TYPE_9.OFFSET = DESC_TYPE_9.LENGTH;
      562     8828    5                   DESC_TYPE_9.LENGTH = UWA_ALLOC - DESC_TYPE_9.LENGTH;
      563     8829    5                   DESC_TYPE_9.NUMERIC = '1'B;
      564     8830    5                   DESC_TYPE_9.DISPLAY = '0'B;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:20   
      565     8831    5                   DESC_TYPE_9.PIC_HAS_S = '0'B;
      566     8832    5                   DESC_TYPE_9.COMP_4 = '1'B;
      567     8833    5                   END;
      568     8834    5               ELSE DO;
      569     8835    5                   DESC_TYPE_9.LENGTH = (UWA_ALLOC - DESC_TYPE_9.LENGTH) / 2;
      570     8836    5                   END;
      571     8837    4               CALL WRITSF(LAST_GROUP(I),DESC_TYPE_9);
      572     8838    4               LAST_GROUP(I) = 0;
      573     8839    4               END;
      574     8840    3           END;
      575     8841    2       LARGEST_GROUP = START_LEVEL - 1;
      576     8842    2   END UPDATE_GROUP;
      577     8843        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:21   
      578     8844    2       DO CASE (PARAN.TYPE);
      579     8845         %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:22   
      580     8846        /*
      581     8847              This part of the case statement handles all input for
      582     8848            X$PARSE by calling ZIG$SS_READ.
      583     8849            If a end of file is found or a start of a DBACS directive
      584     8850            is found then goto the syntax error place in ZIG$SS_PDRI
      585     8851            so it can error things corectly.
      586     8852        */
      587     8853    2       CASE(%INPUT#);
      588     8854    2           IF END_SUBSCHEMA THEN UNWIND TO SUB_ERR;
      589     8855    2           CALL ZIG$SS_READ;
      590     8856    2           IF END_SUBSCHEMA THEN UNWIND TO SUB_ERR;
      591     8857         %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:23   
      592     8858        /*
      593     8859              This is the part of the X$PARSE interface that is the most
      594     8860            important because it sets all the flags in the descriptors
      595     8861            in ZI_SUB_LANG and writes them out into the subschema file.
      596     8862            So before changing anything in this part of the program
      597     8863            take a good look at that include file and read all the
      598     8864            *D* comments and all the %EQU and %SUBS in the file.
      599     8865            Then look at the file ZIG$SS_PSI (this contains the source
      600     8866            for X$PARSE and PARTRAGE to run off of) since any change in
      601     8867            this part of the subroutine must also be changed in the
      602     8868            ZIG$SS_PSI.
      603     8869
      604     8870            note:
      605     8871                 some strange things are done with X$PARSE because some
      606     8872                 things don't work in X$PARSE so thing had to be word
      607     8873                 around them.
      608     8874
      609     8875            NOTE1:
      610     8876                 The items part of the processing if a little hard to
      611     8877               understand and maybe should be rewritten. But, here is how
      612     8878               it words.
      613     8879                 The level number is given first if sub_language is COBOL
      614     8880                 else all items level are 2 for both FORTRAN and apl.
      615     8881                 Then we get the item name and check to see if it is a
      616     8882                 good name (no dups and good characters). The item name
      617     8883                 is then put in the DESC_TYPE_9.NAME. Then the type
      618     8884                 if put into the descriptor if it comes (all picture
      619     8885                 decoding is done throw ZIG$SS_PIC).
      620     8886
      621     8887               If you have any problems with the items for COBOL then
      622     8888               good luck.
      623     8889
      624     8890
      625     8891              Any question and all i can say is play with X$PARSE a long
      626     8892            time before changing any thing large.!!!!
      627     8893
      628     8894        */
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:24   
      629     8895    2       CASE(%SUCC#, %PRE#);
      630     8896    2           IF SUB_LANGUAGE = #FORTRAN AND
      631     8897    2              (PARAN.CODE = %COMPLEX_S OR
      632     8898    2              PARAN.CODE = %COMPLEX_D OR
      633     8899    2              PARAN.CODE = %INTEGER OR
      634     8900    2              PARAN.CODE = %CHARACTER OR
      635     8901    2              PARAN.CODE = %DBKEY OR
      636     8902    2              PARAN.CODE = %FLOAT OR
      637     8903    2              PARAN.CODE = %FLOAT_DOUBLE OR
      638     8904    2              PARAN.CODE = %BOOL )
      639     8905    3           THEN DO;
      640     8906    3               IF PARAN.CODE = %CHARACTER
      641     8907    4               THEN DO;
      642     8908    4                   CALL GET_NUM(1,4096);
      643     8909    4                   SAVE_NUM = NUM;
      644     8910    4                   END;
      645     8911    3               SAVE_PARAN_CODE = PARAN.CODE;
      646     8912    3               RETURN;
      647     8913    3               END;
      648     8914    2           IF PARAN.CODE = %SAVE_CODE_DO_NOW
      649     8915    3           THEN DO;
      650     8916    3               PARAN.CODE = SAVE_PARAN_CODE;
      651     8917    3               END;
      652     8918    3           DO CASE (PARAN.CODE);
      653     8919    3           CASE(%LOCK_INVOCKING);
      654     8920    3               IF INVOK
      655     8921    4               THEN DO;
      656     8922    4                   CALL ERROR(%ZIG_SS_TWO_INVOK);
      657     8923        /*E*     ERROR:    ZIG-ZIG_SS_TWO_INVOK-C
      658     8924        MESSAGE: Two invoke PRIVACY LOCKs given and only one allowed.
      659     8925        */
      660     8926    4                   END;
      661     8927    4               ELSE DO;
      662     8928    4                   INVOK = '1'B;
      663     8929    4                   END;
      664     8930    3               LOCK_PTR$ = ADDR(CONTROL.INVOKE_PRIVACY_LOCK);
      665     8931    3           CASE (%PRIVACY_KEY);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:25   
      666     8932    3               IF PRIV
      667     8933    4               THEN DO;
      668     8934    4                   CALL ERROR(%ZIG_SS_TWO_PRIV);
      669     8935        /*E*     ERROR:    ZIG-ZIG_SS_TWO_PRIV-C
      670     8936        MESSAGE: Two copy PRIVACY LOCKs given and only one allowed.
      671     8937        */
      672     8938    4                   END;
      673     8939    4               ELSE DO;
      674     8940    4                   PRIV = '1'B;
      675     8941    4                   END;
      676     8942    3               LOCK_PTR$ = ADDR(CONTROL.COPY_PRIVACY_KEY);
      677     8943    3           CASE (%DIAG_KEY);
      678     8944    3               IF DIAG
      679     8945    4               THEN DO;
      680     8946    4                   CALL ERROR(%ZIG_SS_TWO_DIAG);
      681     8947        /*E*     ERROR:    ZIG-ZIG_SS_TWO_DIAG-C
      682     8948        MESSAGE: Two diagnostic PRIVACY LOCKs given and only one allowed.
      683     8949        */
      684     8950    4                   END;
      685     8951    4               ELSE DO;
      686     8952    4                   DIAG = '1'B;
      687     8953    4                   END;
      688     8954    3               LOCK_PTR$ = ADDR(CONTROL.DIAGNOSTIC_PRIVACY_K);
      689     8955    3           CASE (%ALIASES);
      690     8956    3               IF ~ALIAS_SEC AND SUB_LANGUAGE=#COBOL
      691     8957    4               THEN DO;
      692     8958    4                   CALL ERROR(%ZIG_SS_NO_ALIAS_SEC);
      693     8959        /*E*     ERROR:    ZIG-ZIG_SS_NO_ALIAS_SEC-C
      694     8960        MESSAGE: In COBOL, before any aliases can be given an ALIAS SECTION
      695     8961                 must be defined.
      696     8962        */
      697     8963    4                   ALIAS_SEC = '1'B;
      698     8964    4                   END;
      699     8965    3               CURRENT_ALIAS.TYPE = 0;
      700     8966    3               CURRENT_ALIAS.SUBSCHEMA_NAME = ' ';
      701     8967    3               CURRENT_ALIAS.SCHEMA_NAME = ' ';
      702     8968    3               CURRENT_ALIAS.QUAL_NAME = ' ';
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:26   
      703     8969    3               IF LAST_STATUS > #ALIAS_DEF
      704     8970    4               THEN DO;
      705     8971    4                   CALL ERROR(#ORDER_SUB_SCHEMA_DDL);
      706     8972        /*E*     ERROR:    ZIG-#ORDER_SUB_SCHEMA_DDL-C
      707     8973        MESSAGE:      The order of the entries in the subschema DDL is as
      708     8974                      follows:
      709     8975                           1 -  subschema entry (contains the privacy locks).
      710     8976                           2 -  alias entry (contains all aliases).
      711     8977                           3 -  area entry (contains all definition of areas).
      712     8978                           4 -  set entry (contains all definition of sets).
      713     8979                           5 -  key entry (contains all definition of keys).
      714     8980                           6 -  record entries (contains all record definitions
      715     8981                                     and all item definitions).
      716     8982                           7 -  END.
      717     8983        */
      718     8984    4                   END;
      719     8985    3               LAST_STATUS = #ALIAS_DEF;
      720     8986    3           CASE (%ALIASES_FORT);
      721     8987    3               CALL ZIG$HASH_IT(CURRENT_ALIAS.SUBSCHEMA_NAME,#ADD,
      722     8988    3                  ERROR_STATUS,CURRENT_ALIAS.TYPE,2,26,PTR$,STATUS);
      723     8989    3               PTR$ -> TRANS_ALIAS.SCHEMA_NAME = CURRENT_ALIAS.SCHEMA_NAME;
      724     8990    3               PTR$ -> TRANS_ALIAS.QUAL_NAME = CURRENT_ALIAS.QUAL_NAME;
      725     8991    3               CURRENT_ALIAS.TYPE = 0;
      726     8992    3               CURRENT_ALIAS.SUBSCHEMA_NAME = ' ';
      727     8993    3               CURRENT_ALIAS.SCHEMA_NAME = ' ';
      728     8994    3               CURRENT_ALIAS.QUAL_NAME = ' ';
      729     8995    3               IF LAST_STATUS > #ALIAS_DEF
      730     8996    4               THEN DO;
      731     8997    4                   CALL ERROR(#ORDER_SUB_SCHEMA_DDL);
      732     8998    4                   END;
      733     8999    3           CASE (%AREA_ALIAS);
      734     9000    3               CURRENT_ALIAS.TYPE = #IN_AREA_PROCESSING;
      735     9001    3           CASE (%SET_ALIAS);
      736     9002    3               CURRENT_ALIAS.TYPE = #IN_SET_PROCESSING;
      737     9003    3           CASE (%KEY_ALIAS);
      738     9004    3               CURRENT_ALIAS.TYPE = #IN_KEY_PROCESSING;
      739     9005    3           CASE (%RECORD_ALIAS);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:27   
      740     9006    3               CURRENT_ALIAS.TYPE = #IN_RECORD_PROCESSING;
      741     9007    3           CASE (%ITEM_ALIAS);
      742     9008    3               CURRENT_ALIAS.TYPE=6;
      743     9009    3           CASE (%SCHEMA_NAME_ALIAS);
      744     9010    3               CALL GET_WORD;
      745     9011    3               CALL CHANGE_TO_STR(WORD1);
      746     9012    3               CURRENT_ALIAS.SCHEMA_NAME = WORD1;
      747     9013    3           CASE (%SCHEMA_QUAL_ALIAS);
      748     9014    3               CALL GET_WORD;
      749     9015    3               CALL CHANGE_TO_STR(WORD1);
      750     9016    3               CURRENT_ALIAS.QUAL_NAME = CURRENT_ALIAS.SCHEMA_NAME;
      751     9017    3               CURRENT_ALIAS.SCHEMA_NAME = WORD1;
      752     9018    3               CURRENT_ALIAS.TYPE = #IN_ITEM_PROCESSING;
      753     9019    3           CASE (%SUBSCHEMA_QUAL);
      754     9020    3               CALL GET_WORD;
      755     9021    3               IF PTR$ -> TRANS_ALIAS.QUAL_NAME ~= ' '
      756     9022    3               THEN RETURN;
      757     9023    3               PTR$ -> HASH_STRUCT.ALIAS_TYPE = 5;
      758     9024    3               PTR$ -> TRANS_ALIAS.QUAL_NAME = WORD1;
      759     9025    3           CASE (%ALIAS_SS_NAME);
      760     9026    3               CALL GET_WORD;
      761     9027    3               IF SUB_LANGUAGE = #COBOL
      762     9028    4               THEN DO;
      763     9029    4                   CALL ZIG$HASH_IT(WORD1,#ADD,ERROR_STATUS,CURRENT_ALIAS.TYPE,
      764     9030    4                      2,26,PTR$,STATUS);
      765     9031    4                   PTR$ -> TRANS_ALIAS.SCHEMA_NAME = CURRENT_ALIAS.SCHEMA_NAME;
      766     9032    4                   PTR$ -> TRANS_ALIAS.QUAL_NAME = CURRENT_ALIAS.QUAL_NAME;
      767     9033    4                   END;
      768     9034    4               ELSE DO;
      769     9035    4                   CURRENT_ALIAS.SUBSCHEMA_NAME = WORD1;
      770     9036    4                   END;
      771     9037    3           CASE (%NUMBER_OCCURS);
      772     9038         /* NOT USED */
      773     9039    3           CASE (%DBKEY);
      774     9040    3               DESC_TYPE_9.LENGTH = 4;
      775     9041    3               DESC_TYPE_9.BUWA = '1'B;
      776     9042    3               DESC_TYPE_9.F_DBK = '1'B;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:28   
      777     9043    3               DESC_TYPE_9.ELEMENTARY = '1'B;
      778     9044    3               DESC_TYPE_9.NUMERIC = '1'B;
      779     9045    3               DESC_TYPE_9.DB_KEY = '1'B;
      780     9046    3               DESC_TYPE_9.DISPLAY = '0'B;
      781     9047    3               DESC_TYPE_9.SRF_DBK = '1'B;
      782     9048    3               DESC_TYPE_9.INTEGER_TYPE = '1'B;
      783     9049    3               CALL ALLOC(8,#WORD,START);
      784     9050    3               DESC_TYPE_9.OFFSET = START*4;
      785     9051    3               LHOLD = 4;
      786     9052    3               LTDP_HOLD = 11;
      787     9053    3               RTDP_HOLD = 0;
      788     9054    3           CASE (%FLOAT_DOUBLE);
      789     9055    3               DESC_TYPE_9.LENGTH = 8;
      790     9056    3               DESC_TYPE_9.BUWA = '1'B;
      791     9057    3               DESC_TYPE_9.ELEMENTARY = '1'B;
      792     9058    3               DESC_TYPE_9.NUMERIC = '1'B;
      793     9059    3               DESC_TYPE_9.FLOAT_DOUBLE = '1'B;
      794     9060    3               CALL ALLOC(16,#DOUBLE_WORD,START);
      795     9061    3               DESC_TYPE_9.OFFSET = START * 8;
      796     9062    3           CASE (%FLOAT);
      797     9063    3               DESC_TYPE_9.LENGTH = 4;
      798     9064    3               DESC_TYPE_9.BUWA = '1'B;
      799     9065    3               DESC_TYPE_9.ELEMENTARY = '1'B;
      800     9066    3               DESC_TYPE_9.NUMERIC = '1'B;
      801     9067    3               DESC_TYPE_9.FLOAT_SINGLE = '1'B;
      802     9068    3               CALL ALLOC(8,#WORD,START);
      803     9069    3               DESC_TYPE_9.OFFSET = START * 4;
      804     9070    3           CASE (%INTEGER);
      805     9071    3               DESC_TYPE_9.LENGTH = 4;
      806     9072    3               DESC_TYPE_9.BUWA = '1'B;
      807     9073    3               DESC_TYPE_9.ELEMENTARY = '1'B;
      808     9074    3               DESC_TYPE_9.NUMERIC = '1'B;
      809     9075    3               DESC_TYPE_9.DB_KEY = '1'B;
      810     9076    3               DESC_TYPE_9.INTEGER_TYPE = '1'B;
      811     9077    3               CALL ALLOC(8,#WORD,START);
      812     9078    3               DESC_TYPE_9.OFFSET = START * 4;
      813     9079    3           CASE (%CHARACTER);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:29   
      814     9080    3               IF SUB_LANGUAGE ~= #FORTRAN
      815     9081    3               THEN CALL GET_NUM(1,4096);
      816     9082        /*
      817     9083              FORTRANs number of characters in the string is in
      818     9084            SAVE_NUM.
      819     9085        */
      820     9086    3               ELSE NUM = SAVE_NUM;
      821     9087    3               DESC_TYPE_9.LENGTH = NUM;
      822     9088    3               DESC_TYPE_9.LTDP = NUM;
      823     9089    3               DESC_TYPE_9.BUWA = '1'B;
      824     9090    3               DESC_TYPE_9.ELEMENTARY = '1'B;
      825     9091    3               DESC_TYPE_9.ALPHABETIC = '1'B;
      826     9092    3               DESC_TYPE_9.DISPLAY = '1'B;
      827     9093    3               CALL ALLOC(NUM*2,#BYTE,START);
      828     9094    3               DESC_TYPE_9.OFFSET = START;
      829     9095    3           CASE (%VARYING);
      830     9096         /* NOT USED */
      831     9097    3           CASE (%ENTRY_KEY_NAME);
      832     9098    3               IF ~KEY_SEC AND SUB_LANGUAGE=#COBOL
      833     9099    4               THEN DO;
      834     9100    4                   CALL ERROR(%ZIG_SS_NO_KEY_SEC);
      835     9101        /*E*     ERROR:    ZIG-ZIG_SS_NO_KEY_SEC-C
      836     9102        MESSAGE: In COBOL, before any keys can be given a KEY SECTION
      837     9103                 must be defined.
      838     9104        */
      839     9105    4                   KEY_SEC = '1'B;
      840     9106    4                   END;
      841     9107    3               CALL GET_WORD;
      842     9108    3               CALL INIT_TYPE_9;
      843     9109        /*            DESC_TYPE_9.BUWA = '0'B;      */
      844     9110    3               DESC_TYPE_9.LEVEL = 77;
      845     9111    3               DESC_TYPE_9.DATA_ITEM = '1'B;
      846     9112    3               DESC_TYPE_9.KEY_NM = '1'B;
      847     9113    3               DESC_TYPE_9.SRF_DBK = '1'B;
      848     9114    3               DESC_TYPE_9.OFFSET = INTERNAL_ID;
      849     9115    3               DESC_TYPE_9.NAME = WORD1;
      850     9116    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:30   
      851     9117    3               DESC_TYPE_9.DATA_ITEM = '1'B;
      852     9118    3               INTERNAL_ID = INTERNAL_ID + 1;
      853     9119    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);
      854     9120    3               CURRENT_RECORD = CURRENT_RECORD + 1;
      855     9121    3               CONTROL.NUM_SETS = CONTROL.NUM_SETS + 1;
      856     9122    3               IF LAST_STATUS > #KEY_DEF
      857     9123    4               THEN DO;
      858     9124    4                   CALL ERROR(#ORDER_SUB_SCHEMA_DDL);
      859     9125    4                   END;
      860     9126    3               LAST_STATUS = #KEY_DEF;
      861     9127    3               TYPE_350.REF_LINE = CURRENT_RECORD - 1;
      862     9128    3               TYPE_350.SOUR_LINE = LINE_COUNT - 1;
      863     9129    3               TYPE_350.ID_NUM = DESC_TYPE_9.OFFSET;
      864     9130    3               CALL CHECK_ALIAS_DUPS;
      865     9131    3               CALL STORE(TYPE_350);
      866     9132    3           CASE (%ENTRY_SET_NAME);
      867     9133    3               IF ~SET_SEC AND SUB_LANGUAGE=#COBOL
      868     9134    4               THEN DO;
      869     9135    4                   CALL ERROR(%ZIG_SS_NO_SET_SEC);
      870     9136        /*E*     ERROR:    ZIG-ZIG_SS_NO_SET_SEC-C
      871     9137        MESSAGE: In COBOL, before any sets can be given a SET SECTION
      872     9138                 must be defined.
      873     9139        */
      874     9140    4                   SET_SEC = '1'B;
      875     9141    4                   END;
      876     9142    3               CALL GET_WORD;
      877     9143    3               CALL INIT_TYPE_9;
      878     9144        /*            DESC_TYPE_9.BUWA = '0'B;      */
      879     9145    3               DESC_TYPE_9.LEVEL = 77;
      880     9146    3               DESC_TYPE_9.DATA_ITEM = '1'B;
      881     9147    3               DESC_TYPE_9.SET_NM = '1'B;
      882     9148    3               DESC_TYPE_9.SRF_DBK = '1'B;
      883     9149    3               DESC_TYPE_9.OFFSET = INTERNAL_ID;
      884     9150    3               DESC_TYPE_9.NAME = WORD1;
      885     9151    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;
      886     9152    3               DESC_TYPE_9.DATA_ITEM = '1'B;
      887     9153    3               INTERNAL_ID = INTERNAL_ID + 1;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:31   
      888     9154    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);
      889     9155    3               CURRENT_RECORD = CURRENT_RECORD + 1;
      890     9156    3               CONTROL.NUM_SETS = CONTROL.NUM_SETS + 1;
      891     9157    3               IF LAST_STATUS > #SET_DEF
      892     9158    4               THEN DO;
      893     9159    4                   CALL ERROR(#ORDER_SUB_SCHEMA_DDL);
      894     9160    4                   END;
      895     9161    3               LAST_STATUS = #SET_DEF;
      896     9162    3               TYPE_300.REF_LINE = CURRENT_RECORD - 1;
      897     9163    3               TYPE_300.SOUR_LINE = LINE_COUNT - 1;
      898     9164    3               TYPE_300.ID_NUM = DESC_TYPE_9.OFFSET;
      899     9165    3               CALL CHECK_ALIAS_DUPS;
      900     9166    3               CALL STORE(TYPE_300);
      901     9167    3           CASE (%ENTRY_AREA_NAME);
      902     9168    3               IF ~REALM_SEC AND SUB_LANGUAGE = #COBOL
      903     9169    4               THEN DO;
      904     9170    4                   CALL ERROR(%ZIG_SS_NO_REALM_SEC);
      905     9171        /*E*  ERROR:   ZIG-ZIG_SS_NO_REALM_SEC-C
      906     9172              MESSAGE: In COBOL before any realms can be given a REALM
      907     9173                       SECTION must be defined.
      908     9174        */
      909     9175    4                   REALM_SEC = '1'B;
      910     9176    4                   END;
      911     9177    3               CALL GET_WORD;
      912     9178    3               CALL INIT_TYPE_9;
      913     9179    3               DESC_TYPE_9.LEVEL = 77;
      914     9180    3               DESC_TYPE_9.DATA_ITEM = '1'B;
      915     9181    3               DESC_TYPE_9.RLM_NM = '1'B;
      916     9182    3               DESC_TYPE_9.SRF_DBK = '1'B;
      917     9183    3               DESC_TYPE_9.OFFSET = INTERNAL_ID;
      918     9184    3               DESC_TYPE_9.NAME = WORD1;
      919     9185    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;
      920     9186    3               DESC_TYPE_9.DATA_ITEM = '1'B;
      921     9187    3               INTERNAL_ID = INTERNAL_ID + 1;
      922     9188    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);
      923     9189    3               CURRENT_RECORD = CURRENT_RECORD + 1;
      924     9190    3               CONTROL.NUM_AREAS = CONTROL.NUM_AREAS + 1;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:32   
      925     9191    3               IF LAST_STATUS > #AREA_DEF
      926     9192    4               THEN DO;
      927     9193    4                   CALL ERROR(#ORDER_SUB_SCHEMA_DDL);
      928     9194    4                   END;
      929     9195    3               LAST_STATUS = #AREA_DEF;
      930     9196    3               TYPE_200.REF_LINE = CURRENT_RECORD - 1;
      931     9197    3               TYPE_200.SOUR_LINE = LINE_COUNT - 1;
      932     9198    3               TYPE_200.ID_NUM = DESC_TYPE_9.OFFSET;
      933     9199    3               CALL CHECK_ALIAS_DUPS;
      934     9200    3               CALL STORE(TYPE_200);
      935     9201    3           CASE (%APL_RECORD_NAME);
      936     9202    3               IF ~RECORD_SEC AND SUB_LANGUAGE=#COBOL
      937     9203    4               THEN DO;
      938     9204    4                   CALL ERROR(%ZIG_SS_NO_RECORD_SEC);
      939     9205        /*E*     ERROR:    ZIG-ZIG_SS_NO_RECORD_SEC-C
      940     9206        MESSAGE: In COBOL, before any records can be given a RECORD SECTION
      941     9207                 must be defined.
      942     9208        */
      943     9209    4                   RECORD_SEC = '1'B;
      944     9210    4                   END;
      945     9211    3               IF LARGEST_GROUP > 1
      946     9212    3               THEN CALL UPDATE_GROUP(2);
      947     9213    3               RECORD_TYPE = RECORD_TYPE + 1;
      948     9214    3               ADD_FILLER = 0;
      949     9215    3               IF SAVE_RECORD_NUM ~= 0
      950     9216    4               THEN DO;
      951     9217    4                   CALL READSF(SAVE_RECORD_NUM,DESC_TYPE_9);
      952     9218    4                   IF NO_ITEMS
      953     9219    5                   THEN DO;
      954     9220    5                       DESC_TYPE_9.SRF_DBK = '1'B;
      955     9221    5                       CALL ALLOC(8,#DOUBLE_WORD,START);
      956     9222    5                       ADD_FILLER = 8;
      957     9223    5                       END;
      958     9224    5                   ELSE DO;
      959     9225    5                       DESC_TYPE_9.LENGTH =(UWA_ALLOC - SAVE_RECORD_OFFSET) / 2;
      960     9226    5                       DESC_TYPE_9.LTDP = DESC_TYPE_9.LENGTH;
      961     9227    5                       END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:33   
      962     9228    4                   CALL WRITSF(SAVE_RECORD_NUM,DESC_TYPE_9);
      963     9229    4                   END;
      964     9230    3               NO_ITEMS = '1'B;
      965     9231    3               CALL GET_WORD;
      966     9232    3               CALL INIT_TYPE_9;
      967     9233    3               DESC_TYPE_9.NAME = WORD1;
      968     9234    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;
      969     9235    3               DESC_TYPE_9.LEVEL = 1;
      970     9236    3               DESC_TYPE_9.NON_ELEMENTARY = '1'B;
      971     9237    3               DESC_TYPE_9.REC_NM = '1'B;
      972     9238    3               DESC_TYPE_9.ITEM_LEVEL_01 = '1'B;
      973     9239    3               DESC_TYPE_9.ALPHANUM = '1'B;
      974     9240    3               DESC_TYPE_9.DISPLAY = '1'B;
      975     9241    3               DESC_TYPE_9.BUWA = '1'B;
      976     9242    3               I = UWA_ALLOC;
      977     9243    3               CALL ALLOC(0,#DOUBLE_WORD,START);
      978     9244        /*W*
      979     9245              This code might look hard to understand why it is here well
      980     9246            it a long store that I will even tell about.
      981     9247              There once was a language that couldn't handle any character
      982     9248            strings exept as numbers but now they do. Then they said that
      983     9249            it would be so nice to talk to IDS but it would be tomuch work
      984     9250            so the IDS group sould do all the work. That wouldn't be so bad
      985     9251            but that fucking language can't handle any alignment the same
      986     9252            and any alignment is up to FORTRAN to decide and fuck the user.
      987     9253        */
      988     9254    3               TYPE_400.LAST_FILLER_LEN = (UWA_ALLOC - I + ADD_FILLER) / 2;
      989     9255    3               IF TYPE_400.LAST_FILLER_LEN ~= 0 AND
      990     9256    3                  SUB_LANGUAGE = #FORTRAN
      991     9257    4               THEN DO;
      992     9258    4                   ERROR_STATUS = 1;
      993     9259    5                   DO WHILE (ERROR_STATUS ~= 0 AND LAST_FILLER < 9999);
      994     9260    5                       CALL SET_FIELD_NUM(1,LAST_FILLER);
      995     9261    5                       CALL CONCAT(TEMP_WORD,'FILL',SUBSTR(FIELD1.TEXT1,0,4));
      996     9262    5                       LAST_FILLER = LAST_FILLER + 1;
      997     9263    5                       CALL ZIG$HASH_IT(TEMP_WORD,#ADD,ERROR_STATUS,0,0,
      998     9264    5                          9,PTR$,LAST_STATUS);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:34   
      999     9265    5                       END;
     1000     9266    4                   TYPE_400.LAST_FILLER_TEXT = SUBSTR(TEMP_WORD,0,8);
     1001     9267    4                   END;
     1002     9268    3               DESC_TYPE_9.OFFSET = UWA_ALLOC / 2;
     1003     9269    3               SAVE_RECORD_NUM = CURRENT_RECORD;
     1004     9270    3               SAVE_RECORD_OFFSET = UWA_ALLOC;
     1005     9271    3               CONTROL.NUM_RECORDS = CONTROL.NUM_RECORDS + 1;
     1006     9272    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);
     1007     9273    3               CURRENT_RECORD = CURRENT_RECORD + 1;
     1008     9274    3               LAST_STATUS = #RECORD_DEF;
     1009     9275    3               TYPE_400.REF_LINE = CURRENT_RECORD - 1;
     1010     9276    3               TYPE_400.SOUR_LINE = LINE_COUNT - 1;
     1011     9277    3               TYPE_400.ID_NUM = UWA_ALLOC / 2;
     1012     9278    3               CALL CHECK_ALIAS_DUPS;
     1013     9279    3               SAVE_RECORD_NAME = TYPE_400.RECORD_NAME;
     1014     9280    3               CALL CHANGE_TO_STR(SAVE_RECORD_NAME);
     1015     9281         /*
     1016     9282            This saves the record name for alias checking and
     1017     9283            if the record has been aliased then it is the aliased
     1018     9284            record name that is saved.
     1019     9285         */
     1020     9286    3               CALL STORE(TYPE_400);
     1021     9287    3           CASE (%INV_SUBSCHEMA_NAME);
     1022     9288    3               IF ~TITLE_DIV AND SUB_LANGUAGE=#COBOL
     1023     9289    4               THEN DO;
     1024     9290    4                   CALL ERROR(%ZIG_SS_NO_TITLE_DIV);
     1025     9291        /*E*     ERROR:    ZIG-ZIG_SS_NO_TITLE_DIV-C
     1026     9292        MESSAGE: No TITLE DIVISION statement before the start of the
     1027     9293                 subschema DDL.
     1028     9294        */
     1029     9295    4                   TITLE_DIV = '1'B;
     1030     9296    4                   END;
     1031     9297    3               LAST_FILLER = 10;
     1032     9298    3               CALL GET_WORD;
     1033     9299    3               CONTROL.SUBSCHEMA_NAME = WORD1;
     1034     9300    3               CALL CHANGE_TO_STR(WORD1);
     1035     9301    3               IF WORD1 ~= SSTRANS.SSNAME
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:35   
     1036     9302    4               THEN DO;
     1037     9303    4                   CALL ERROR(%ZI_MIS_SUBSCHEMA_NAME);
     1038     9304        /*E*     ERROR:    ZIG-ZI_MIS_SUBSCHEMA_NAME-C
     1039     9305        MESSAGE: The subschema name given in the subschema DDL is not the
     1040     9306                 same as the subschema name given in the directive.
     1041     9307        */
     1042     9308    4                   END;
     1043     9309    3               SAVE_RECORD_OFFSET = 48 * 4;
     1044     9310    3               SAVE_RECORD_NUM = 0;
     1045     9311    3               LAST_STATUS = #SUB_DEF;
     1046     9312    3               CURRENT_ALIAS.TYPE = 0;
     1047     9313    3               CURRENT_ALIAS.QUAL_NAME = ' ';
     1048     9314    3               WROTE_TYPE_9 = '0'B;
     1049     9315    3           CASE (%INV_SCHEMA_NAME);
     1050     9316    3               CALL GET_WORD;
     1051     9317    3               CONTROL.SCHEMA_NAME = WORD1;
     1052     9318    3               CALL CHANGE_TO_STR_SCH(WORD1);
     1053     9319    3               IF WORD1 ~= SSTRANS.SNAME AND SSTRANS.SNAME ~= ' '
     1054     9320    4               THEN DO;
     1055     9321    4                   CALL ERROR(%ZI_MIS_SCHEMA_NAME);
     1056     9322        /*E*     ERROR:    ZIG-ZI_MIS_SCHEMA_NAME-C
     1057     9323        MESSAGE: The name in the subschema DDL was not the same as the schema
     1058     9324                 name given in the directive.
     1059     9325        */
     1060     9326    4                   END;
     1061     9327    3               LAST_STATUS = #SUB_DEF;
     1062     9328    3           CASE (%DATA_NAME);
     1063     9329    3               WROTE_TYPE_9 = '0'B;
     1064     9330    3               CALL GET_WORD;
     1065     9331    3               NO_ITEMS = '0'B;
     1066     9332    3               LAST_STATUS = #ITEM_DEF;
     1067     9333    3               CALL CHECK_ALIAS_DUPS;
     1068     9334    3               CALL INIT_TYPE_9;
     1069     9335    3               IF SUB_LANGUAGE = #COBOL
     1070     9336    3               THEN DESC_TYPE_9.DISPLAY = '1'B;
     1071     9337        /*
     1072     9338              The default is different for COBOL.
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:36   
     1073     9339        */
     1074     9340    3               DESC_TYPE_9.NAME = WORD1;
     1075     9341    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;
     1076     9342    3               DESC_TYPE_9.RPT_CODE_NUM = SAVE_RECORD_OFFSET / 2;
     1077     9343    3               DESC_TYPE_9.FLD_NM = '1'B;
     1078     9344    3               CONTROL.NUM_FIELDS = CONTROL.NUM_FIELDS + 1;
     1079     9345    3               IF SUB_LANGUAGE = #COBOL
     1080     9346    4               THEN DO;
     1081     9347    4                   USAGE_IS = '0'B;
     1082     9348    4                   TYPE_COMP = '0'B;
     1083     9349    4                   DISPLAY = '0'B;
     1084     9350    4                   NUM_BIT = '0'B;
     1085     9351    4                   COMP = '0'B;
     1086     9352    4                   LEFT = '0'B;
     1087     9353    4                   RIGHT = '0'B;
     1088     9354    4                   LEADING = '0'B;
     1089     9355    4                   TRAILING = '0'B;
     1090     9356    4                   SEPARATE = '0'B;
     1091     9357    4                   PIC_STR = '0'B;
     1092     9358    4                   END;
     1093     9359    3           CASE (%BOOL);
     1094     9360    3               DESC_TYPE_9.BUWA = '1'B;
     1095     9361    3               DESC_TYPE_9.ELEMENTARY = '1'B;
     1096     9362    3               DESC_TYPE_9.NUMERIC = '1'B;
     1097     9363    3               DESC_TYPE_9.LOGICAL = '1'B;
     1098     9364    3               CALL ALLOC(8,#WORD,START);
     1099     9365    3               DESC_TYPE_9.OFFSET = START * 4;
     1100     9366    3           CASE (%LOCK_STRING);
     1101     9367    3               CALL GET_WORD;
     1102     9368    3               IF FIELD1.COUNT1 > 12
     1103     9369    4               THEN DO;
     1104     9370    4                   CALL WARNING(EZI$LOCK_TO_LONG);
     1105     9371        /*       ERROR:    ZIG-EZI$LOCK_TO_LONG-C
     1106     9372            MESSAGE:  Lock value or key longer than 12 characters.
     1107     9373                      Lock will not be set or key will be truncated.
     1108     9374        */
     1109     9375    4                   END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:37   
     1110     9376    3               LOCK_PTR$ -> STRING12 = SUBSTR(WORD1,0,12);
     1111     9377    3           CASE (%THE_END);
     1112     9378    3               IF LARGEST_GROUP > 1
     1113     9379    3               THEN CALL UPDATE_GROUP(2);
     1114     9380    3               IF SAVE_RECORD_NUM ~= 0
     1115     9381    4               THEN DO;
     1116     9382    4                   CALL READSF(SAVE_RECORD_NUM,DESC_TYPE_9);
     1117     9383    4                   IF NO_ITEMS
     1118     9384    5                   THEN DO;
     1119     9385    5                       DESC_TYPE_9.SRF_DBK = '1'B;
     1120     9386    5                       CALL ALLOC(0,#DOUBLE_WORD,START);
     1121     9387    5                       END;
     1122     9388    5                   ELSE DO;
     1123     9389    5                       DESC_TYPE_9.LENGTH =(UWA_ALLOC - SAVE_RECORD_OFFSET) / 2;
     1124     9390    5                       DESC_TYPE_9.LTDP = DESC_TYPE_9.LENGTH;
     1125     9391    5                       END;
     1126     9392    4                   TYPE_400.LAST_FILLER_LEN = 0;
     1127     9393    4                   CALL WRITSF(SAVE_RECORD_NUM,DESC_TYPE_9);
     1128     9394    4                   END;
     1129     9395    3               CALL WRITSF(CURRENT_RECORD,EOFC);
     1130     9396    3               CURRENT_RECORD = CURRENT_RECORD + 1;
     1131     9397         /*
     1132     9398            This is really to make sure FORTRAN include files are
     1133     9399            aligned the way the UWA is built. If the last thing
     1134     9400            before database parameters ended on other than a
     1135     9401            double word boundary, a filler must be put between the
     1136     9402            end and the next double word bound. If not, leave well
     1137     9403            enough alone.
     1138     9404         */
     1139     9405    3               CONTROL.LAST_FILLER_NUM = LAST_FILLER;
     1140     9406    3               CONTROL.LAST_FILLER_LEN = 8 - (MOD(UWA_ALLOC,16)/2);
     1141     9407    3               IF CONTROL.LAST_FILLER_LEN = 8
     1142     9408    3               THEN CONTROL.LAST_FILLER_LEN = 0;
     1143     9409    3               CALL ALLOC(0,#DOUBLE_WORD,START);
     1144     9410    3               CONTROL.UWA_SIZE=(UWA_ALLOC+7)/8;
     1145     9411    3               CONTROL.NEXT_UWA_LOC=CONTROL.UWA_SIZE*4;
     1146     9412    3               CONTROL.TRANS_UWA_SIZE = CONTROL.NEXT_UWA_LOC;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:38   
     1147     9413    3               CONTROL.FIRST_SDS_RECORD = CURRENT_RECORD + 9;
     1148     9414    3               CONTROL.LANGUAGE = SUB_LANGUAGE;
     1149     9415    3               CALL M$TIME (TIME_FPT);
     1150     9416    3               CONTROL.SUBSCHEMA_UTS = UTSS;
     1151     9417    3               TYPE_100.LANG_TYPE = SUB_LANGUAGE;
     1152     9418    3               TYPE_100.COPY_PRIVACY = CONTROL.COPY_PRIVACY_KEY;
     1153     9419    3               TYPE_100.DIAG_PRIVACY = CONTROL.DIAGNOSTIC_PRIVACY_K;
     1154     9420    3               TYPE_100.NEXT_UWA = CONTROL.NEXT_UWA_LOC;
     1155     9421    3               TYPE_100.TRANS_UTS = CONTROL.SUBSCHEMA_UTS;
     1156     9422    3               CALL WRITSF(CURRENT_RECORD,TYPE_100);
     1157     9423    3               CURRENT_RECORD = CURRENT_RECORD + 9;
     1158     9424    3               CALL UCLOSE('5*');
     1159     9425    3               CALL UOPEN('5*',0);
     1160     9426    3               CALL UGET('5*',DESCPTR,EOF,BUFFER_SIZE);
     1161     9427    4               DO WHILE (EOF=0);
     1162     9428    4                   IF DESCPTR -> TYPE_430_B.TYPE = 430 AND
     1163     9429    4                      DESCPTR -> TYPE_430_B.LEN_FIELD = 0
     1164     9430    5                   THEN DO;
     1165     9431    5                       CALL READSF(DESCPTR -> TYPE_430_B.REF_LINE,DESC_TYPE_9);
     1166     9432    5                       DESCPTR -> TYPE_430_B.LEN_FIELD = DESC_TYPE_9.LENGTH;
     1167     9433    5                       DESCPTR -> TYPE_430_B.EIS.ADSC.N = DESC_TYPE_9.LENGTH;
     1168     9434    5                       DESCPTR -> TYPE_430_B.OFFSET = DESC_TYPE_9.OFFSET;
     1169     9435    5                       IF DESC_TYPE_9.COMP_4
     1170     9436    6                       THEN DO;
     1171     9437    6                           DESCPTR -> TYPE_430_B.DATA_TYPE = 3;
     1172     9438    6                           END;
     1173     9439    6                       ELSE DO;
     1174     9440    6                           DESCPTR -> TYPE_430_B.DATA_TYPE = 0;
     1175     9441    6                           END;
     1176     9442    5                       DESCPTR -> TYPE_430_B.EIS.NDSC.CN = MOD(DESCPTR -> TYPE_430_B.
              9442                                OFFSET*FACTER(DESCPTR -> TYPE_430_B.DATA_TYPE),8);
     1177     9443    5                       DESCPTR -> TYPE_430_B.EIS.ADDER_C.OFFSET = DESCPTR -> TYPE_430_B
              9443                                .OFFSET*FACTER(DESCPTR -> TYPE_430_B.DATA_TYPE)/8;
     1178     9444    5                       DESCPTR -> TYPE_430_B.EIS.EIS_TN_S.TN_S = TN_S(DESCPTR ->
              9444                                TYPE_430_B.DATA_TYPE);
     1179     9445    5                       IF DESC_TYPE_9.NUMERIC
     1180     9446    6                       THEN DO;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:39   
     1181     9447    6                           SSCALE = DESCPTR -> TYPE_430_B.SCALE_FIELD;
     1182     9448    6                           IF SSCALE ~= 0
     1183     9449    6                           THEN SSCALE = 64 - SSCALE;
     1184     9450    6                           DESCPTR -> TYPE_430_B.EIS.NDSC.SF = SSCALE;
     1185     9451    6                           DESCPTR -> TYPE_430_B.EIS.NDSC.N = DESCPTR -> TYPE_430_B.
              9451                                    LEN_FIELD;
     1186     9452    6                           END;
     1187     9453    6                       ELSE DO;
     1188     9454    6                           DESCPTR -> TYPE_430_B.EIS.ADSC.N = DESCPTR -> TYPE_430_B.
              9454                                    LEN_FIELD;
     1189     9455    6                           END;
     1190     9456    5                       END;
     1191     9457    4                   CALL WRITSF(CURRENT_RECORD,BUFFER_TEMP);
     1192     9458    4                   CURRENT_RECORD = CURRENT_RECORD +1;
     1193     9459    4                   CALL UGET('5*',DESCPTR,EOF,BUFFER_SIZE);
     1194     9460    4                   END;
     1195     9461    3               CALL UCLOSE('5*');
     1196     9462    3               CONTROL.FIRST_NFE_RECORD= CURRENT_RECORD;
     1197     9463    3               CALL WRITSF(CONTROL.FIRST_NFE_RECORD,EOFC);
     1198     9464    3               CONTROL.FIRST_NFE_RECORD= CURRENT_RECORD + 1;
     1199     9465    3               CALL WRITSF(CONTROL.FIRST_NFE_RECORD,EOFC);
     1200     9466    3               CALL WRITSF(CONTROL.FIRST_NFE_RECORD+2,EOFC);
     1201     9467    3               CONTROL.NEXT_AVAILABLE_RECORD=CONTROL.FIRST_NFE_RECORD + 1;
     1202     9468    3               IF NO_ERRORS
     1203     9469    3               THEN CONTROL.TRANSLATION_STATUS = 0;
     1204     9470    3               ELSE CONTROL.TRANSLATION_STATUS = 1;
     1205     9471    3               CALL WRIT64(0, ADDR(CONTROL)); /*Control seg*/
     1206     9472    3               END_SUBSCHEMA = '1'B;
     1207     9473    3           CASE (%WITHIN_AREAS);
     1208     9474         /*
     1209     9475            These are the areas defined for the current record that
     1210     9476            is being processed.
     1211     9477         */
     1212     9478    3               CALL GET_WORD;
     1213     9479    3               TYPE_420.SOUR_LINE = LINE_COUNT - 1;
     1214     9480    3               TYPE_420.SUB_AREA_NAME = WORD1;
     1215     9481    3               CALL ZIG$HASH_IT(WORD1,#NO_ADD,ERROR_STATUS,0,1,9,PTR$,0);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:40   
     1216     9482    3               IF ERROR_STATUS ~= 2
     1217     9483    4               THEN DO;
     1218     9484    4                   CALL ERROR(#AREA_NOT_DEFINED);
     1219     9485        /*E*     ERROR:    ZIG-#AREA_NOT_DEFINED-C
     1220     9486        MESSAGE: The area "%U1" is not defined in this subschema and is used
     1221     9487                 in the record entry above. This must be fixed to validate
     1222     9488                 the subschema file.
     1223     9489        */
     1224     9490    4                   END;
     1225     9491    3               CALL CHANGE_TO_STR_SCH(WORD1);
     1226     9492    3               CALL ZIG$HASH_IT(WORD1,#NO_ADD,ERROR_STATUS,0,1,9,PTR$,0);
     1227     9493    3               IF ERROR_STATUS = 1
     1228     9494    3               THEN TYPE_420.AREA_NAME = PTR$ -> TRANS_ALIAS.SCHEMA_NAME;
     1229     9495    3               ELSE TYPE_420.AREA_NAME = WORD1;
     1230     9496    3               CALL STORE(TYPE_420);
     1231     9497    3           CASE (%ITEM_END,%DO_A_ITEM_END);
     1232     9498         /*
     1233     9499            SET SPECIAL THINGS FOR COBOL SUBSCHEMAS.
     1234     9500         */
     1235     9501    3               IF WROTE_TYPE_9
     1236     9502    4               THEN DO;
     1237     9503    4                   WROTE_TYPE_9 = '0'B;
     1238     9504    4                   RETURN;
     1239     9505    4                   END;
     1240     9506    3               IF COMP_TYPE
     1241     9507    4               THEN DO;
     1242     9508    4                   COMP_TYPE = '0'B;
     1243     9509    4                   IF DESC_TYPE_9.SIGN_TYP = '000'B
     1244     9510    5                   THEN DO;
     1245     9511    5                       IF DESC_TYPE_9.PIC_HAS_S
     1246     9512    6                       THEN DO;
     1247     9513    6                           IF DESC_TYPE_9.COMP OR DESC_TYPE_9.COMP_3
     1248     9514    6                              OR DESC_TYPE_9.COMP_4
     1249     9515    6                           THEN DESC_TYPE_9.SIGN_TYP = '011'B;
     1250     9516    6                           IF DESC_TYPE_9.DISPLAY
     1251     9517    6                           THEN DESC_TYPE_9.SIGN_TYP = '001'B;
     1252     9518    6                           END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:41   
     1253     9519    5                       END;
     1254     9520    4                   IF DESC_TYPE_9.COMP_2 OR DESC_TYPE_9.DB_KEY
     1255     9521    4                      OR DESC_TYPE_9.DB_KEY
     1256     9522    5                   THEN DO;
     1257     9523    5                       IF DESC_TYPE_9.COMP_2
     1258     9524    5                       THEN LTDP_HOLD = 10;
     1259     9525    5                       ELSE LTDP_HOLD = 11;
     1260     9526    5                       LHOLD = 4;
     1261     9527    5                       RTDP_HOLD = 0;
     1262     9528    5                       IF DESC_TYPE_9.COMP_2 AND ~DESC_TYPE_9.SYNC_RIGHT
     1263     9529    6                       THEN DO;
     1264     9530    6                           CALL ALLOC(8,#BYTE,START);
     1265     9531    6                           DESC_TYPE_9.OFFSET = START;
     1266     9532    6                           END;
     1267     9533    6                       ELSE DO;
     1268     9534    6                           CALL ALLOC(8,#WORD,START);
     1269     9535    6                           DESC_TYPE_9.OFFSET = START * 4;
     1270     9536    6                           END;
     1271     9537    5                       END;
     1272     9538    4                   IF DESC_TYPE_9.COMP_1
     1273     9539    5                   THEN DO;
     1274     9540    5                       LHOLD = 2;
     1275     9541    5                       LTDP_HOLD = 5;
     1276     9542    5                       RTDP_HOLD = 0;
     1277     9543    5                       IF DESC_TYPE_9.SYNC_RIGHT
     1278     9544    6                       THEN DO;
     1279     9545    6                           CALL ALLOC(4,#HALF_WORD,START);
     1280     9546    6                           DESC_TYPE_9.OFFSET = START * 2;
     1281     9547    6                           END;
     1282     9548    6                       ELSE DO;
     1283     9549    6                           CALL ALLOC(4,#BYTE,START);
     1284     9550    6                           DESC_TYPE_9.OFFSET = START;
     1285     9551    6                           END;
     1286     9552    5                       END;
     1287     9553    4                   IF DESC_TYPE_9.COMP OR DESC_TYPE_9.COMP_3 OR
     1288     9554    4                      DESC_TYPE_9.COMP_4
     1289     9555    5                   THEN DO;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:42   
     1290     9556    5                       IF DESC_TYPE_9.PIC_HAS_S
     1291     9557    5                       THEN LHOLD = LHOLD + 1;
     1292     9558    5                       IF ~DESC_TYPE_9.COMP_4
     1293     9559    6                       THEN DO;
     1294     9560    6                           CALL ALLOC(LHOLD,#BYTE,START);
     1295     9561    6                           IF MOD(LHOLD,2) = 1 THEN
     1296     9562    7                           DO;
     1297     9563    7                               DESC_TYPE_9.OFFSET = (START*2)+1;
     1298     9564    7                               CALL ALLOC(1,#NIBLE,START);
     1299     9565    7                               END;
     1300     9566    6                           ELSE
     1301     9567    7                           DO;
     1302     9568    7                               DESC_TYPE_9.OFFSET = START*2;
     1303     9569    7                               END;
     1304     9570    6                           END;
     1305     9571    6                       ELSE DO;
     1306     9572    6                           CALL ALLOC(LHOLD,#NIBLE,START);
     1307     9573    6                           DESC_TYPE_9.OFFSET = START;
     1308     9574    6                           END;
     1309     9575    5                       END;
     1310     9576    4                   END;
     1311     9577    3               IF SUB_LANGUAGE = #COBOL
     1312     9578    3                  AND NOT(DESC_TYPE_9.FLOAT_SINGLE OR DESC_TYPE_9.FLOAT_DOUBLE)
     1313     9579    4               THEN DO;
     1314     9580    4                   IF DESC_TYPE_9.DISPLAY
     1315     9581    5                   THEN DO;
     1316     9582    5                       IF DESC_TYPE_9.SIGN_TYP = '010'B
     1317     9583    5                       THEN LHOLD=LHOLD + 1;
     1318     9584    5                       CALL ALLOC(LHOLD*2,#BYTE,START);
     1319     9585    5                       DESC_TYPE_9.OFFSET = START;
     1320     9586    5                       END;
     1321     9587    4                   DESC_TYPE_9.LENGTH = LHOLD;
     1322     9588    4                   IF DESC_TYPE_9.NUMERIC
     1323     9589    5                   THEN DO;
     1324     9590    5                       DESC_TYPE_9.RTDP = RTDP_HOLD;
     1325     9591    5                       DESC_TYPE_9.LTDP = LTDP_HOLD;
     1326     9592    5                       END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:43   
     1327     9593    5                   ELSE DO;
     1328     9594    5                       DESC_TYPE_9.LTDP = LHOLD;
     1329     9595    5                       END;
     1330     9596    4                   END;
     1331     9597    3               DESC_TYPE_9.LEVEL = SAVE_LEVEL;
     1332     9598         /*
     1333     9599                    Set the level numbers for the items.
     1334     9600         */
     1335     9601        /*
     1336     9602              Change the float for COBOL to includes COMP5A and (COMP2 or
     1337     9603            COMP3).
     1338     9604        */
     1339     9605    3               IF DESC_TYPE_9.FLOAT_SINGLE
     1340     9606    4               THEN DO;
     1341     9607    4                   DESC_TYPE_9.COMP5A = '1'B;
     1342     9608    4                   DESC_TYPE_9.COMP_2 = '1'B;
     1343     9609    4                   DESC_TYPE_9.FLOAT_SINGLE = '0'B;
     1344     9610    4                   END;
     1345     9611    3               IF DESC_TYPE_9.FLOAT_DOUBLE
     1346     9612    4               THEN DO;
     1347     9613    4                   DESC_TYPE_9.COMP5A = '1'B;
     1348     9614    4                   DESC_TYPE_9.COMP_3 = '1'B;
     1349     9615    4                   DESC_TYPE_9.FLOAT_DOUBLE = '0'B;
     1350     9616    4                   END;
     1351     9617    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);
     1352     9618    3               CURRENT_RECORD = CURRENT_RECORD + 1;
     1353     9619    3               TYPE_430.REF_LINE = CURRENT_RECORD - 1;
     1354     9620    3               TYPE_430.SOUR_LINE = LINE_COUNT - 1;
     1355     9621    3               TYPE_430.OFFSET = DESC_TYPE_9.OFFSET;
     1356     9622         /*
     1357     9623            DATA_TYPE in the TYPE_430 descrpitor is:
     1358     9624            comp    -  signed = 4 unsigned = 3
     1359     9625            comp 4  -  signed = 4 unsigned = 3
     1360     9626            comp 3  -  signed = 5 unsigned = 3
     1361     9627            character - = 0
     1362     9628            display numeric - unsigned = 6
     1363     9629            signed sign_type = '001'b = 10
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:44   
     1364     9630            signed sign_type = '010'b = 9
     1365     9631            signed sign_type = '011'b = 8
     1366     9632            signed sign_type = 7 ('100'b ????)
     1367     9633            DB-key    - = 1
     1368     9634            comp 6    - = 2 (integer!!!!)
     1369     9635            comp 1    - = 11
     1370     9636            comp 2    - = 12
     1371     9637            float single = 13
     1372     9638            float double = 14
     1373     9639            complex single = 15
     1374     9640            complex double = 16
     1375     9641            logical        = 17
     1376     9642
     1377     9643         */
     1378     9644    3               IF DESC_TYPE_9.COMP OR DESC_TYPE_9.COMP_4
     1379     9645    4               THEN DO;
     1380     9646    4                   IF DESC_TYPE_9.PIC_HAS_S
     1381     9647    4                   THEN TYPE_430.DATA_TYPE = 4;
     1382     9648    4                   ELSE TYPE_430.DATA_TYPE = 3;
     1383     9649    4                   END;
     1384     9650    4               ELSE DO;
     1385     9651    4                   IF DESC_TYPE_9.COMP_3
     1386     9652    5                   THEN DO;
     1387     9653    5                       IF DESC_TYPE_9.PIC_HAS_S
     1388     9654    5                       THEN TYPE_430.DATA_TYPE = 5;
     1389     9655    5                       ELSE TYPE_430.DATA_TYPE = 3;
     1390     9656    5                       END;
     1391     9657    5                   ELSE DO;
     1392     9658    5                       IF DESC_TYPE_9.DISPLAY
     1393     9659    6                       THEN DO;
     1394     9660    6                           IF ~DESC_TYPE_9.NUMERIC
     1395     9661    6                           THEN TYPE_430.DATA_TYPE = 0;
     1396     9662    7                           ELSE DO;
     1397     9663    7                               IF DESC_TYPE_9.PIC_HAS_S
     1398     9664    8                               THEN DO;
     1399     9665    8                                   IF DESC_TYPE_9.SIGN_TYP = '001'B
     1400     9666    8                                   THEN TYPE_430.DATA_TYPE = 10;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:45   
     1401     9667    8                                   IF DESC_TYPE_9.SIGN_TYP = '010'B
     1402     9668    8                                   THEN TYPE_430.DATA_TYPE = 9;
     1403     9669    8                                   IF DESC_TYPE_9.SIGN_TYP = '011'B
     1404     9670    8                                   THEN TYPE_430.DATA_TYPE = 8;
     1405     9671    8                                   IF DESC_TYPE_9.SIGN_TYP = '100'B
     1406     9672    8                                   THEN TYPE_430.DATA_TYPE = 7;
     1407     9673    8                                   END;
     1408     9674    8                               ELSE DO;
     1409     9675    8                                   TYPE_430.DATA_TYPE = 6;
     1410     9676    8                                   END;
     1411     9677    7                               END;
     1412     9678    6                           END;
     1413     9679    6                       ELSE DO;
     1414     9680    6                           IF DESC_TYPE_9.F_DBK
     1415     9681    6                           THEN TYPE_430.DATA_TYPE = 1;
     1416     9682    7                           ELSE DO;
     1417     9683    7                               IF DESC_TYPE_9.DB_KEY AND ~ DESC_TYPE_9.F_DBK
     1418     9684    7                               THEN TYPE_430.DATA_TYPE = 2;
     1419     9685    8                               ELSE DO;
     1420     9686    8                                   IF DESC_TYPE_9.COMP_1
     1421     9687    8                                   THEN TYPE_430.DATA_TYPE = 11;
     1422     9688    9                                   ELSE DO;
     1423     9689    9                                       IF DESC_TYPE_9.COMP_2
     1424     9690    9                                       THEN TYPE_430.DATA_TYPE = 12;
     1425     9691    9                                       END;
     1426     9692    8                                   END;
     1427     9693    7                               END;
     1428     9694    6                           END;
     1429     9695    5                       END;
     1430     9696    4                   END;
     1431     9697    3               IF DESC_TYPE_9.FLOAT_SINGLE
     1432     9698    3               THEN TYPE_430.DATA_TYPE = 13;
     1433     9699    3               IF DESC_TYPE_9.FLOAT_DOUBLE
     1434     9700    3               THEN TYPE_430.DATA_TYPE = 14;
     1435     9701    3               IF DESC_TYPE_9.COMP5A
     1436     9702    4               THEN DO;
     1437     9703    4                   IF DESC_TYPE_9.COMP_2
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:46   
     1438     9704    4                   THEN TYPE_430.DATA_TYPE = 13;
     1439     9705    4                   ELSE TYPE_430.DATA_TYPE = 14;
     1440     9706    4                   END;
     1441     9707    3               IF DESC_TYPE_9.LOGICAL
     1442     9708    3               THEN TYPE_430.DATA_TYPE = 17;
     1443     9709    3               TYPE_430.LEN_FIELD = DESC_TYPE_9.LENGTH;
     1444     9710    3               TYPE_430.LEVEL_FIELD = DESC_TYPE_9.LEVEL;
     1445     9711    3               TYPE_430.ELEMENTARY = DESC_TYPE_9.ELEMENTARY;
     1446     9712    3               TYPE_430.SCALE_FIELD = DESC_TYPE_9.RTDP;
     1447     9713    3               TYPE_430.EIS.ADDER_C.REG = 1;
     1448     9714    3               TYPE_430.EIS.NDSC.CN = MOD(TYPE_430.OFFSET*FACTER(TYPE_430.DATA_TYPE),8)
              9714                        ;
     1449     9715    3               TYPE_430.EIS.ADDER_C.OFFSET = TYPE_430.OFFSET*FACTER(TYPE_430.DATA_TYPE)
              9715                        /8;
     1450     9716    3               TYPE_430.EIS.EIS_TN_S.TN_S = TN_S(TYPE_430.DATA_TYPE);
     1451     9717    3               IF DESC_TYPE_9.NUMERIC
     1452     9718    4               THEN DO;
     1453     9719    4                   SSCALE = TYPE_430.SCALE_FIELD;
     1454     9720    4                   IF SSCALE ~= 0
     1455     9721    4                   THEN SSCALE = 64 - SSCALE;
     1456     9722    4                   TYPE_430.EIS.NDSC.SF = SSCALE;
     1457     9723    4                   TYPE_430.EIS.NDSC.N = TYPE_430.LEN_FIELD;
     1458     9724    4                   END;
     1459     9725    4               ELSE DO;
     1460     9726    4                   TYPE_430.EIS.ADSC.N = TYPE_430.LEN_FIELD;
     1461     9727    4                   END;
     1462     9728    3               CALL STORE(TYPE_430);
     1463     9729         /*
     1464     9730            Note:
     1465     9731            The field TYPE_430.SCALE_FIELD is the number of RTDP
     1466     9732            in the DESC_TYPE_9 descriptors.
     1467     9733         */
     1468     9734    3               IF GROUP_PACKED(LARGEST_GROUP)
     1469     9735    4               THEN DO;
     1470     9736    4                   IF TYPE_430.DATA_TYPE ~= 3
     1471     9737    5                   THEN DO;
     1472     9738    6                       DO I = 1 TO LARGEST_GROUP;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:47   
     1473     9739    6                           GROUP_PACKED(I) = '0'B;
     1474     9740    6                           END;
     1475     9741    5                       GROUP_PACKED(LARGEST_GROUP) = '0'B;
     1476     9742    5                       END;
     1477     9743    4                   END;
     1478     9744    3           CASE (%COMPLEX_S);
     1479     9745    3               DESC_TYPE_9.LENGTH = 8;
     1480     9746    3               DESC_TYPE_9.BUWA = '1'B;
     1481     9747    3               DESC_TYPE_9.ELEMENTARY = '1'B;
     1482     9748    3               DESC_TYPE_9.NUMERIC = '1'B;
     1483     9749    3               DESC_TYPE_9.COMPLEX = '1'B;
     1484     9750    3               CALL ALLOC(16,#DOUBLE_WORD,START);
     1485     9751    3               DESC_TYPE_9.OFFSET = START * 8;
     1486     9752    3           CASE (%COMPLEX_D);
     1487     9753    3               DESC_TYPE_9.LENGTH = 16;
     1488     9754    3               DESC_TYPE_9.BUWA = '1'B;
     1489     9755    3               DESC_TYPE_9.ELEMENTARY = '1'B;
     1490     9756    3               DESC_TYPE_9.NUMERIC = '1'B;
     1491     9757    3               DESC_TYPE_9.D_COMPLEX = '1'B;
     1492     9758    3               CALL ALLOC(32,#DOUBLE_WORD,START);
     1493     9759    3               DESC_TYPE_9.OFFSET = START * 8;
     1494     9760    3           CASE(%LEVEL_NUM);
     1495     9761    3               CALL GET_NUM(2,49);
     1496     9762    3               IF LARGEST_GROUP >= NUM
     1497     9763    3               THEN CALL UPDATE_GROUP(NUM);
     1498     9764    3               SAVE_LEVEL = NUM;
     1499     9765    3           CASE(%DISPLAY);
     1500     9766    3               IF DISPLAY
     1501     9767    4               THEN DO;
     1502     9768    4                   CALL WARNING(%ZIG_SS_TWO_DISPLAY);
     1503     9769        /*E*     ERROR:    ZIG-ZIG_SS_TWO_DISPLAY-C
     1504     9770        MESSAGE: Cannot have the keyword DISPLAY twice in a single data item.
     1505     9771        */
     1506     9772    4                   END;
     1507     9773    4               ELSE DO;
     1508     9774    4                   DISPLAY = '1'B;
     1509     9775    4                   END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:48   
     1510     9776    3               DESC_TYPE_9.DISPLAY = '1'B;
     1511     9777    3           CASE(%NUM); /* A COMP OF SOME KIND */
     1512     9778    3               IF NUM_BIT
     1513     9779    4               THEN DO;
     1514     9780    4                   CALL WARNING(%ZIG_SS_TWO_NUM);
     1515     9781        /*E*     ERROR:    ZIG-ZIG_SS_TWO_NUM-C
     1516     9782        MESSAGE: Cannot have the keyword COMP twice in a single data item.
     1517     9783        */
     1518     9784    4                   END;
     1519     9785    4               ELSE DO;
     1520     9786    4                   NUM_BIT = '1'B;
     1521     9787    4                   END;
     1522     9788    3               COMP_TYPE = '1'B;
     1523     9789    3               CALL GET_NUM(1,12);
     1524     9790    3               DESC_TYPE_9.BUWA = '1'B;
     1525     9791    3               DESC_TYPE_9.DISPLAY = '0'B;
     1526     9792    3               DESC_TYPE_9.NUMERIC = '1'B;
     1527     9793    3               DESC_TYPE_9.ELEMENTARY = '1'B;
     1528     9794    4               DO CASE(NUM);
     1529     9795    4               CASE(1); /* COMP 1 */
     1530     9796    4                   DESC_TYPE_9.COMP_1 = '1'B;
     1531     9797    4                   DESC_TYPE_9.PIC_HAS_S = '1'B;
     1532     9798    4                   DESC_TYPE_9.INTEGER_TYPE = '1'B;
     1533     9799    4               CASE(2); /* COMP 2 */
     1534     9800    4                   DESC_TYPE_9.COMP_2 = '1'B;
     1535     9801    4                   DESC_TYPE_9.PIC_HAS_S = '1'B;
     1536     9802    4                   DESC_TYPE_9.INTEGER_TYPE = '1'B;
     1537     9803    4               CASE(3); /* COMP 3 */
     1538     9804    4                   DESC_TYPE_9.COMP_3 = '1'B;
     1539     9805    4               CASE(4); /* COMP 4 */
     1540     9806    4                   DESC_TYPE_9.COMP_4 = '1'B;
     1541     9807    4               CASE(5); /* COMP 5 */
     1542     9808    4                   DESC_TYPE_9.COMP_4 = '1'B;
     1543     9809    4                   DESC_TYPE_9.JUST_RIGHT = '1'B;
     1544     9810    4               CASE(6); /* COMP 6 */
     1545     9811    4                   DESC_TYPE_9.DB_KEY = '1'B;
     1546     9812    4                   DESC_TYPE_9.PIC_HAS_S = '1'B;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:49   
     1547     9813    4                   DESC_TYPE_9.INTEGER_TYPE = '1'B;
     1548     9814    4               CASE(11); /* COMP-11 SINGLE FLOAT */
     1549     9815    4                   DESC_TYPE_9.FLOAT_SINGLE = '1'B;
     1550     9816    4                   DESC_TYPE_9.LENGTH = 4;
     1551     9817    4                   CALL ALLOC(8,#WORD,START);
     1552     9818    4                   DESC_TYPE_9.OFFSET = START * 4;
     1553     9819    4               CASE(12); /* COMP-12 DOUBLE FLOAT */
     1554     9820    4                   DESC_TYPE_9.FLOAT_DOUBLE = '1'B;
     1555     9821    4                   DESC_TYPE_9.LENGTH = 8;
     1556     9822    4                   CALL ALLOC(16,#DOUBLE_WORD,START);
     1557     9823    4                   DESC_TYPE_9.OFFSET = START * 8;
     1558     9824    4               CASE (ELSE);
     1559     9825    4                   CALL ERROR(%ZIG_SSTRANS_BAD_COMP);
     1560     9826        /*E*     ERROR:    ZIG-ZIG_SSTRANS_BAD_COMP-C
     1561     9827        MESSAGE: The above COMP type is not a legal COBOL data type.
     1562     9828        */
     1563     9829    4                   END;
     1564     9830    3           CASE(%COMP); /* COMP */
     1565     9831    3               IF COMP
     1566     9832    4               THEN DO;
     1567     9833    4                   CALL WARNING(%ZIG_SS_TWO_COMP);
     1568     9834        /*E*     ERROR:    ZIG-ZIG_SS_TWO_COMP-C
     1569     9835        MESSAGE: Cannot have the keyword COMP twice in a single data item.
     1570     9836        */
     1571     9837    4                   END;
     1572     9838    4               ELSE DO;
     1573     9839    4                   COMP = '1'B;
     1574     9840    4                   END;
     1575     9841    3               DESC_TYPE_9.BUWA = '1'B;
     1576     9842    3               DESC_TYPE_9.DISPLAY = '0'B;
     1577     9843    3               DESC_TYPE_9.COMP = '1'B;
     1578     9844    3               COMP_TYPE = '1'B;
     1579     9845    3               DESC_TYPE_9.ELEMENTARY = '1'B;
     1580     9846    3           CASE(%LEFT); /* LEFT SYNCHRONIZED */
     1581     9847    3               IF LEFT
     1582     9848    4               THEN DO;
     1583     9849    4                   CALL WARNING(%ZIG_SS_TWO_LEFT);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:50   
     1584     9850        /*E*     ERROR:    ZIG-ZIG_SS_TWO_LEFT-C
     1585     9851        MESSAGE: Cannot have the keyword LEFT twice in a single data item.
     1586     9852        */
     1587     9853    4                   END;
     1588     9854    4               ELSE DO;
     1589     9855    4                   LEFT = '1'B;
     1590     9856    4                   END;
     1591     9857    3               DESC_TYPE_9.SYNC_RIGHT = '0'B;
     1592     9858    3           CASE(%RIGHT); /* RIGHT SYNCHRONIZED */
     1593     9859    3               IF RIGHT
     1594     9860    4               THEN DO;
     1595     9861    4                   CALL WARNING(%ZIG_SS_TWO_RIGHT);
     1596     9862        /*E*     ERROR:    ZIG-ZIG_SS_TWO_RIGHT-C
     1597     9863        MESSAGE: Cannot have the keyword RIGHT twice in a single data item.
     1598     9864        */
     1599     9865    4                   END;
     1600     9866    4               ELSE DO;
     1601     9867    4                   RIGHT = '1'B;
     1602     9868    4                   END;
     1603     9869    3               DESC_TYPE_9.SYNC_RIGHT = '1'B;
     1604     9870    3           CASE(%LEADING); /* SIGN IS LEADING */
     1605     9871    3               IF LEADING
     1606     9872    4               THEN DO;
     1607     9873    4                   CALL WARNING(%ZIG_SS_TWO_LEADING);
     1608     9874        /*E*     ERROR:    ZIG-ZIG_SS_TWO_LEADING-C
     1609     9875        MESSAGE: Cannot have the keyword LEADING twice in a single data item.
     1610     9876        */
     1611     9877    4                   END;
     1612     9878    4               ELSE DO;
     1613     9879    4                   LEADING = '1'B;
     1614     9880    4                   END;
     1615     9881    3               DESC_TYPE_9.SIGN_TYP = '010'B;
     1616     9882    3           CASE(%TRAILING); /* SIGN IS TRAILING */
     1617     9883    3               IF TRAILING
     1618     9884    4               THEN DO;
     1619     9885    4                   CALL WARNING(%ZIG_SS_TWO_TRAILING);
     1620     9886        /*E*     ERROR:    ZIG-ZIG_SS_TWO_TRAILING-C
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:51   
     1621     9887        MESSAGE: Cannot have the keyword TRAILING twice in a single data item.
     1622     9888        */
     1623     9889    4                   END;
     1624     9890    4               ELSE DO;
     1625     9891    4                   TRAILING = '1'B;
     1626     9892    4                   END;
     1627     9893    3               DESC_TYPE_9.SIGN_TYP = '001'B;
     1628     9894    3           CASE (%SEPARATE); /* SIGN IS SEPARATE */
     1629     9895    3               IF SEPARATE
     1630     9896    4               THEN DO;
     1631     9897    4                   CALL WARNING(%ZIG_SS_TWO_SEPARATE);
     1632     9898        /*E*     ERROR:    ZIG-ZIG_SS_TWO_SEPARATE-C
     1633     9899        MESSAGE: Cannot have the keyword SEPARATE twice in a single data item.
     1634     9900        */
     1635     9901    4                   END;
     1636     9902    4               ELSE DO;
     1637     9903    4                   SEPARATE = '1'B;
     1638     9904    4                   END;
     1639     9905    3               IF DESC_TYPE_9.SIGN_TYP = '001'B
     1640     9906    3               THEN DESC_TYPE_9.SIGN_TYP = '011'B;
     1641     9907    3               ELSE DESC_TYPE_9.SIGN_TYP = '100'B;
     1642     9908    3           CASE(%PIC_STR);
     1643     9909    3               IF PIC_STR
     1644     9910    4               THEN DO;
     1645     9911    4                   CALL WARNING(%ZIG_SS_TWO_PIC_STR);
     1646     9912        /*E*     ERROR:    ZIG-ZIG_SS_TWO_PIC_STR-C
     1647     9913        MESSAGE: Cannot have the keywords PICTURE STRING twice in a single data item.
     1648     9914        */
     1649     9915    4                   END;
     1650     9916    4               ELSE DO;
     1651     9917    4                   PIC_STR = '1'B;
     1652     9918    4                   END;
     1653     9919    3               CALL GET_WORD;
     1654     9920    3               NUM = FIELD1.COUNT1;
     1655     9921    3               DESC_TYPE_9.BUWA = '1'B;
     1656     9922    3               DESC_TYPE_9.ELEMENTARY = '1'B;
     1657     9923    3               COMP_TYPE = '1'B;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:52   
     1658     9924    3               IF ~DESC_TYPE_9.COMP_1 AND ~DESC_TYPE_9.COMP_2 AND
     1659     9925    3                  ~DESC_TYPE_9.DB_KEY
     1660     9926    3               THEN CALL ZIG$SS_PIC(NUM,WORD1);
     1661     9927    3           CASE(%USAGE_IS);
     1662     9928    3               IF COMP OR NUM_BIT
     1663     9929    4               THEN DO;
     1664     9930    4                   CALL WARNING(%ZIG_SS_TWO_USAGE_IS);
     1665     9931        /*E*     ERROR:    ZIG-ZIG_SS_TWO_USAGE_IS-C
     1666     9932        MESSAGE: The keywords USAGE IS are out of place.
     1667     9933        */
     1668     9934    4                   END;
     1669     9935    4               ELSE DO;
     1670     9936    4                   USAGE_IS = '1'B;
     1671     9937    4                   END;
     1672     9938    3           CASE(%GROUP_ITEM);
     1673     9939        /*
     1674     9940              This is a poorly implimented way to do group items, but it
     1675     9941            was the only way I could think of and keep the subschema
     1676     9942            translate a one past compiler.
     1677     9943
     1678     9944            NUM - has the level number of the group item still in it.
     1679     9945            WORD1 - has the name of the group in it.
     1680     9946            FIELD1.COUNT1 - still has the length of word1 in it.
     1681     9947            LAST_GROUP - contains the record number of were the last
     1682     9948                         group was.
     1683     9949        */
     1684     9950    3               CALL ALLOC(0,#BYTE,START);
     1685     9951    3               GROUP_PACKED(NUM) = '1'B;
     1686     9952    3               CALL INIT_TYPE_9;
     1687     9953    3               WROTE_TYPE_9 = '1'B;
     1688     9954    3               DESC_TYPE_9.NAME = WORD1;
     1689     9955    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;
     1690     9956    3               DESC_TYPE_9.RPT_CODE_NUM = SAVE_RECORD_OFFSET / 2;
     1691     9957    3               DESC_TYPE_9.FLD_NM = '1'B;
     1692     9958    3               DESC_TYPE_9.BUWA = '1'B;
     1693     9959    3               DESC_TYPE_9.LEVEL = NUM;
     1694     9960    3               DESC_TYPE_9.NON_ELEMENTARY = '1'B;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:53   
     1695     9961    3               DESC_TYPE_9.OFFSET = UWA_ALLOC / 2;
     1696     9962    3               DESC_TYPE_9.LENGTH = UWA_ALLOC;
     1697     9963    3               LAST_GROUP(NUM) = CURRENT_RECORD;
     1698     9964    3               LARGEST_GROUP = NUM;
     1699     9965    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);
     1700     9966    3               CURRENT_RECORD = CURRENT_RECORD + 1;
     1701     9967    3               TYPE_430.REF_LINE = CURRENT_RECORD - 1;
     1702     9968    3               TYPE_430.SOUR_LINE = LINE_COUNT - 1;
     1703     9969    3               TYPE_430.OFFSET = DESC_TYPE_9.OFFSET;
     1704     9970    3               TYPE_430.DATA_TYPE = 0;
     1705     9971    3               TYPE_430.ELEMENTARY = '0'B;
     1706     9972    3               TYPE_430.LEVEL_FIELD = NUM;
     1707     9973    3               TYPE_430.SCALE_FIELD = 0;
     1708     9974    3               TYPE_430.EIS.ADDER_C.REG = 1;
     1709     9975    3               TYPE_430.EIS.NDSC.CN = MOD(TYPE_430.OFFSET*FACTER(TYPE_430.DATA_TYPE),8)
              9975                        ;
     1710     9976    3               TYPE_430.EIS.ADDER_C.OFFSET = TYPE_430.OFFSET*FACTER(TYPE_430.DATA_TYPE)
              9976                        /8;
     1711     9977    3               TYPE_430.EIS.EIS_TN_S.TN_S = TN_S(TYPE_430.DATA_TYPE);
     1712     9978    3               IF DESC_TYPE_9.NUMERIC
     1713     9979    4               THEN DO;
     1714     9980    4                   SSCALE = TYPE_430.SCALE_FIELD;
     1715     9981    4                   IF SSCALE ~= 0
     1716     9982    4                   THEN SSCALE = 64 - SSCALE;
     1717     9983    4                   TYPE_430.EIS.NDSC.SF = SSCALE;
     1718     9984    4                   TYPE_430.EIS.NDSC.N = TYPE_430.LEN_FIELD;
     1719     9985    4                   END;
     1720     9986    4               ELSE DO;
     1721     9987    4                   TYPE_430.EIS.ADSC.N = TYPE_430.LEN_FIELD;
     1722     9988    4                   END;
     1723     9989    3               TYPE_430.LEN_FIELD = 0;
     1724     9990    3               CALL STORE(TYPE_430);
     1725     9991    3           CASE(%TITLE_DIV);
     1726     9992    3               IF TITLE_DIV
     1727     9993    4               THEN DO;
     1728     9994    4                   CALL ERROR(%ZIG_SS_TWO_TITLE_DIV);
     1729     9995        /*E*     ERROR:    ZIG-ZIG_SS_TWO_TITLE_DIV-C
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:54   
     1730     9996        MESSAGE: Cannot have two TITLE DIVISION statements.
     1731     9997        */
     1732     9998    4                   END;
     1733     9999    4               ELSE DO;
     1734    10000    4                   TITLE_DIV = '1'B;
     1735    10001    4                   END;
     1736    10002    3           CASE(%MAPPING_DIV);
     1737    10003    3               IF MAPPING_DIV
     1738    10004    4               THEN DO;
     1739    10005    4                   CALL ERROR(%ZIG_SS_TWO_MAPPING_DIV);
     1740    10006        /*E*     ERROR:    ZIG-ZIG_SS_TWO_MAPPING_DIV-C
     1741    10007        MESSAGE: Cannot have two MAPPING DIVISION statements.
     1742    10008        */
     1743    10009    4                   END;
     1744    10010    4               ELSE DO;
     1745    10011    4                   MAPPING_DIV = '1'B;
     1746    10012    4                   END;
     1747    10013    3           CASE(%STRUCTURE_DIV);
     1748    10014    3               IF STRUCTURE_DIV
     1749    10015    4               THEN DO;
     1750    10016    4                   CALL ERROR(%ZIG_SS_TWO_STRUCTURE_DIV);
     1751    10017        /*E*     ERROR:    ZIG-ZIG_SS_TWO_STRUCTURE_DIV-C
     1752    10018        MESSAGE: Cannot have two STRUCTURE DIVISION statements.
     1753    10019        */
     1754    10020    4                   END;
     1755    10021    4               ELSE DO;
     1756    10022    4                   STRUCTURE_DIV = '1'B;
     1757    10023    4                   END;
     1758    10024    3           CASE(%ALIAS_SEC);
     1759    10025    3               IF ALIAS_SEC
     1760    10026    4               THEN DO;
     1761    10027    4                   CALL ERROR(%ZIG_SS_TWO_ALIAS_SEC);
     1762    10028        /*E*     ERROR:    ZIG-ZIG_SS_TWO_ALIAS_SEC-C
     1763    10029        MESSAGE: Cannot have two ALIAS SECTION statements.
     1764    10030        */
     1765    10031    4                   END;
     1766    10032    4               ELSE DO;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:55   
     1767    10033    4                   ALIAS_SEC = '1'B;
     1768    10034    4                   END;
     1769    10035    3               IF ~MAPPING_DIV
     1770    10036    4               THEN DO;
     1771    10037    4                   TEMP_WORD = 'REALM';
     1772    10038    4                   CALL SET_FIELDS(1,30,TEMP_WORD);
     1773    10039    4                   CALL ERROR(%ZIG_SS_NO_MAPPING_DIV);
     1774    10040        /*E*     ERROR:    ZIG-ZIG_SS_NO_MAPPING_DIV-C
     1775    10041        MESSAGE: A MAPPING DIVISION must be given before a %U1 SECTION.
     1776    10042        */
     1777    10043    4                   END;
     1778    10044    3           CASE(%REALM_SEC);
     1779    10045    3               IF REALM_SEC
     1780    10046    4               THEN DO;
     1781    10047    4                   CALL ERROR(%ZIG_SS_TWO_REALM_SEC);
     1782    10048        /*E*     ERROR:    ZIG-ZIG_SS_TWO_REALM_SEC-C
     1783    10049        MESSAGE: Cannot have two REALM SECTION statements.
     1784    10050        */
     1785    10051    4                   END;
     1786    10052    4               ELSE DO;
     1787    10053    4                   REALM_SEC = '1'B;
     1788    10054    4                   END;
     1789    10055    3               IF ~STRUCTURE_DIV
     1790    10056    4               THEN DO;
     1791    10057    4                   TEMP_WORD = 'REALM';
     1792    10058    4                   CALL SET_FIELDS(1,30,TEMP_WORD);
     1793    10059    4                   CALL ERROR(%ZIG_SS_NO_STRUCTURE_DIV);
     1794    10060        /*E*     ERROR:    ZIG-ZIG_SS_NO_STRUCTURE_DIV-C
     1795    10061        MESSAGE: A STRUCTURE DIVISION must be given before a %U1 SECTION.
     1796    10062        */
     1797    10063    4                   END;
     1798    10064    3           CASE(%SET_SEC);
     1799    10065    3               IF SET_SEC
     1800    10066    4               THEN DO;
     1801    10067    4                   CALL ERROR(%ZIG_SS_TWO_SET_SEC);
     1802    10068        /*E*     ERROR:    ZIG-ZIG_SS_TWO_SET_SEC-C
     1803    10069        MESSAGE: Cannot have two SET SECTION statements.
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:56   
     1804    10070        */
     1805    10071    4                   END;
     1806    10072    4               ELSE DO;
     1807    10073    4                   SET_SEC = '1'B;
     1808    10074    4                   END;
     1809    10075    3               IF ~STRUCTURE_DIV
     1810    10076    4               THEN DO;
     1811    10077    4                   TEMP_WORD = 'SET';
     1812    10078    4                   CALL SET_FIELDS(1,30,TEMP_WORD);
     1813    10079    4                   CALL ERROR(%ZIG_SS_NO_STRUCTURE_DIV);
     1814    10080        /*       ERROR:    ZIG-ZIG_SS_NO_STRUCTURE_DIV-C
     1815    10081        MESSAGE: A STRUCTURE DIVISION must be given before a %U1 SECTION.
     1816    10082        */
     1817    10083    4                   END;
     1818    10084    3           CASE(%KEY_SEC);
     1819    10085    3               IF KEY_SEC
     1820    10086    4               THEN DO;
     1821    10087    4                   CALL ERROR(%ZIG_SS_TWO_KEY_SEC);
     1822    10088        /*E*     ERROR:    ZIG-ZIG_SS_TWO_KEY_SEC-C
     1823    10089        MESSAGE: Cannot have two KEY SECTION statements.
     1824    10090        */
     1825    10091    4                   END;
     1826    10092    4               ELSE DO;
     1827    10093    4                   KEY_SEC = '1'B;
     1828    10094    4                   END;
     1829    10095    3               IF ~STRUCTURE_DIV
     1830    10096    4               THEN DO;
     1831    10097    4                   TEMP_WORD = 'KEY';
     1832    10098    4                   CALL SET_FIELDS(1,30,TEMP_WORD);
     1833    10099    4                   CALL ERROR(%ZIG_SS_NO_STRUCTURE_DIV);
     1834    10100        /*       ERROR:    ZIG-ZIG_SS_NO_STRUCTURE_DIV-C
     1835    10101        MESSAGE: A STRUCTURE DIVISION must be given before a %U1 SECTION.
     1836    10102        */
     1837    10103    4                   END;
     1838    10104    3           CASE(%RECORD_SEC);
     1839    10105    3               IF RECORD_SEC
     1840    10106    4               THEN DO;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:57   
     1841    10107    4                   CALL ERROR(%ZIG_SS_TWO_RECORD_SEC);
     1842    10108        /*E*     ERROR:    ZIG-ZIG_SS_TWO_RECORD_SEC-C
     1843    10109        MESSAGE: Cannot have two RECORD SECTION statements.
     1844    10110        */
     1845    10111    4                   END;
     1846    10112    4               ELSE DO;
     1847    10113    4                   RECORD_SEC = '1'B;
     1848    10114    4                   END;
     1849    10115    3               IF ~STRUCTURE_DIV
     1850    10116    4               THEN DO;
     1851    10117    4                   TEMP_WORD = 'RECORD';
     1852    10118    4                   CALL SET_FIELDS(1,30,TEMP_WORD);
     1853    10119    4                   CALL ERROR(%ZIG_SS_NO_STRUCTURE_DIV);
     1854    10120        /*       ERROR:    ZIG-ZIG_SS_NO_STRUCTURE_DIV-C
     1855    10121        MESSAGE: A STRUCTURE DIVISION must be given before a %U1 SECTION.
     1856    10122        */
     1857    10123    4                   END;
     1858    10124    3               END;
     1859    10125        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:58   
     1860    10126        /*
     1861    10127              This part of subschema translater X$PARSE interface routine
     1862    10128            is to handle all syntax errors in the subschema ddl. All error
     1863    10129            text are written throw M$DO and M$LO. All error messages are
     1864    10130            in the file :ZIERRMSG.:SYS and this file is read by the
     1865    10131            M$ERRMSG. All calls first go throw the subroutine ERROR then
     1866    10132            to ZIG$DDER.
     1867    10133
     1868    10134              Any changes in this part of the program you sould first look
     1869    10135            at ZIG$SS_PSI to see when things are called and why!!!!
     1870    10136        */
     1871    10137    2       CASE(%FAIL#);
     1872    10138    3           IF BUFFER_ERR THEN DO;
     1873    10139    3               BUFFER_ERR = '0'B;
     1874    10140    3               GOTO U_SUB_ERR;
     1875    10141    3               END;
     1876    10142    2           I=PARAN.CHARPOS;
     1877    10143    3           DO WHILE (SUBSTR(LINE,I-1,1)=' ');
     1878    10144    3               I=I+1;
     1879    10145    3               END;
     1880    10146    3           DO WHILE (SUBSTR(LINE,I-1,1)~=' ');
     1881    10147    3               I=I+1;
     1882    10148    3               END;
     1883    10149    2           FIELD1.COUNT1=I-PARAN.CHARPOS;
     1884    10150    2           FIELD1.TEXT1=SUBSTR(LINE,PARAN.CHARPOS-1,FIELD1.COUNT1);
     1885    10151    3           DO CASE(PARAN.CODE);
     1886    10152    3           CASE(%APL_ENTRY);
     1887    10153    3               CALL ERROR(%ZI_APL_BAD_ENTRY);
     1888    10154        /*E*     ERROR:    ZIG-ZI_APL_BAD_ENTRY-C
     1889    10155        MESSAGE: The line above is not the correct syntax for an entry in
     1890    10156                 an APL subschema DDL. The error was at %U1.
     1891    10157        */
     1892    10158    3           CASE(%BASIC_ENTRY);
     1893    10159    3               CALL ERROR(%ZI_BASIC_BAD_ENTRY);
     1894    10160        /*E*     ERROR:    ZIG-ZI_BASIC_BAD_ENTRY-C
     1895    10161        MESSAGE: The line above is not the correct syntax for an entry in
     1896    10162                 a BASIC subschema DDL. The error was at %U1.
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:59   
     1897    10163        */
     1898    10164    3           CASE(%FORT_ENTRY);
     1899    10165    3               CALL ERROR(%ZI_FORT_BAD_ENTRY);
     1900    10166        /*E*     ERROR:    ZIG-ZI_FORT_BAD_ENTRY-C
     1901    10167        MESSAGE: The entry in the FORTRAN subschema DDL has a bad
     1902    10168                 entry. The error occurred at the phrase %U1.
     1903    10169        */
     1904    10170    3           CASE(%COBOL_ENTRY);
     1905    10171    3               CALL ERROR(%ZI_COBOL_BAD_ENTRY);
     1906    10172        /*E*     ERROR:    ZIG-ZI_COBOL_BAD_ENTRY-C
     1907    10173        MESSAGE: The above entry in the COBOL subschema DDL has a bad
     1908    10174                 entry. The error occurred at the phrase %U1.
     1909    10175        */
     1910    10176    3           CASE(%INV_SUBSCHEMA_NAME);
     1911    10177    3               CALL ERROR(%ZI_BAD_SUBSCHEMA_NAME);
     1912    10178        /*E*     ERROR:    ZIG-ZI_BAD_SUBSCHEMA_NAME-C
     1913    10179        MESSAGE: In the subschema definition entry the subschema name was
     1914    10180                 a legal set of characters for the subschema name. The
     1915    10181                 name was %U1.
     1916    10182        */
     1917    10183    3           CASE(%INV_SCHEMA_NAME);
     1918    10184    3               CALL ERROR(%ZI_BAD_SCHEMA_NAME);
     1919    10185        /*E*     ERROR:    ZIG-ZI_BAD_SCHEMA_NAME-C
     1920    10186        MESSAGE: In the schema definition entry the schema name was
     1921    10187                 a legal set of characters for the schema name. The
     1922    10188                 name was %U1.
     1923    10189        */
     1924    10190    3           CASE(%LOCK_INVOCKING);
     1925    10191    3               CALL ERROR(%ZI_LOCK_INVOCKING);
     1926    10192        /*E*     ERROR:    ZIG-ZI_LOCK_INVOCKING-C
     1927    10193        MESSAGE: The lock for invoking must be in either double or
     1928    10194                 single quotes, not %U1.
     1929    10195        */
     1930    10196    3           CASE(%PRIVACY_KEY);
     1931    10197    3               CALL ERROR(%ZI_PRIVACY_KEY);
     1932    10198        /*E*     ERROR:    ZIG-ZI_PRIVACY_KEY-C
     1933    10199        MESSAGE: The lock for privacy must be in either double or
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:60   
     1934    10200                 single quotes, not %U1.
     1935    10201        */
     1936    10202    3           CASE(%DIAG_KEY);
     1937    10203    3               CALL ERROR(%ZI_DIAG_KEY);
     1938    10204        /*E*     ERROR:    ZIG-ZI_DIAG_KEY-C
     1939    10205        MESSAGE: The lock for diagnostics must be in either double or
     1940    10206                 single quotes, not %U1.
     1941    10207        */
     1942    10208    3           CASE(%LOCK_STRING);
     1943    10209    3               CALL ERROR(%ZI_LOCK_STRING);
     1944    10210        /*E*     ERROR:    ZIG-ZI_LOCK_STRING-C
     1945    10211        MESSAGE: The text for a lock must not contain a single or double
     1946    10212                 quote.
     1947    10213        */
     1948    10214    3           CASE(%ALIASES,%ALIASES_FORT);
     1949    10215    3               IF SUB_LANGUAGE = #COBOL
     1950    10216    4               THEN DO;
     1951    10217    4                   CALL ERROR(%ZI_COBOL_ALIASES);
     1952    10218        /*E*     ERROR:    ZIG-ZI_COBOL_ALIASES-C
     1953    10219        MESSAGE: The format for a COBOL alias statement is:
     1954    10220                 AD ==pseudo-text== [(REALM-NAME | SET-NAME | RECORD-NAME |;
     1955    10221                      KEY-NAME)] BECOMES subschema_name.
     1956    10222                 Not %U1.
     1957    10223                 Note: for items schema_name the format is:
     1958    10224                      record_name; item_name.
     1959    10225        */
     1960    10226    4                   END;
     1961    10227    4               ELSE DO;
     1962    10228    4                   CALL ERROR(%ZI_ERR_ALIASES_S);
     1963    10229        /*E*     ERROR:    ZIG-ZI_ERR_ALIASES_S-C
     1964    10230        MESSAGE: The format for an APL, BASIC  or FORTRAN alias entry is:
     1965    10231                 ALIAS [(AREA | SET | KEY | RECORD | ITEM)] schema_name ;
     1966    10232                 = subschema_name.
     1967    10233                 Note: for item schema_names are record_name.item_name.
     1968    10234        */
     1969    10235    4                   END;
     1970    10236    3           CASE(%WITHIN_AREAS,%ENTRY_KEY_NAME,%ENTRY_SET_NAME,
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:61   
     1971    10237    3                      %ENTRY_AREA_NAME,%APL_RECORD_NAME,%DATA_NAME);
     1972    10238    3               CALL ERROR(%ZI_WITHIN_AREAS);
     1973    10239        /*E*     ERROR:    ZIG-ZI_WITHIN_AREAS-C
     1974    10240        MESSAGE: The subschema name must be a legal identifier, not
     1975    10241                 %U1.
     1976    10242        */
     1977    10243    3           CASE(%APL_ITEM);
     1978    10244    3               CALL ERROR(%ZI_APL_ITEM);
     1979    10245        /*E*     ERROR:    ZIG-ZI_APL_ITEM-C
     1980    10246        MESSAGE: An APL item type can only be DBKEY, FLOAT DOUBLE,
     1981    10247                 INTEGER, CHARACTER, or BOOL, not %U1.
     1982    10248        */
     1983    10249    3           CASE(%BASIC_ITEM);
     1984    10250    3               CALL ERROR(%ZI_BASIC_ITEM);
     1985    10251        /*E*     ERROR:    ZIG-ZI_BASIC_ITEM-C
     1986    10252        MESSAGE: A BASIC item type can only be DBKEY, FLOAT DOUBLE,
     1987    10253                 INTEGER, CHARACTER, or BOOL, not %U1.
     1988    10254        */
     1989    10255    3           CASE(%NUMBER_OCCURS);
     1990    10256    3               CALL ERROR(%ZI_OCCURS_NO_NUM);
     1991    10257        /*E*     ERROR:    ZIG-ZI_OCCURS_NO_NUM-C
     1992    10258        MESSAGE: All OCCUR statements must be followed by a number, not
     1993    10259                 %U1.
     1994    10260        */
     1995    10261    3           CASE(%CHARACTER);
     1996    10262    3               CALL ERROR(%ZI_BAD_CHAR_COUNT);
     1997    10263        /*E*     ERROR:    ZIG-ZI_BAD_CHAR_COUNT-C
     1998    10264        MESSAGE: The CHARACTER data type must be followed by '(' number ')',
     1999    10265                 not %U1.
     2000    10266        */
     2001    10267    3           CASE(%ENDER);
     2002    10268    3               CALL ERROR(%ZI_NOT_PERIOD);
     2003    10269        /*E*     ERROR:    ZIG-ZI_NOT_PERIOD-C
     2004    10270        MESSAGE: All entries in the subschema DDL must end with a period,
     2005    10271                 not %U1.
     2006    10272        */
     2007    10273    3           CASE(%FORT_ITEM);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:62   
     2008    10274    3               CALL ERROR(%ZI_BAD_FORT_ITEM);
     2009    10275        /*E*     ERROR:    ZIG-ZI_BAD_FORT_ITEM-C
     2010    10276        MESSAGE: The legal data types for a FORTRAN item are:
     2011    10277                 ( FLOAT DOUBLE | FLOAT SINGLE | INTEGER | COMPLEX DOUBLE |;
     2012    10278                 COMPLEX SINGLE | BOOL | CHARACTER )
     2013    10279                 not %U1.
     2014    10280        */
     2015    10281    3           CASE(%RIGHT);
     2016    10282    3               CALL ERROR(%ZI_BAD_SYNC);
     2017    10283        /*E*     ERROR:    ZIG-ZI_BAD_SYNC-C
     2018    10284        MESSAGE: The COBOL option SYNchronized must be followed by
     2019    10285                 RIGHT or LEFT, not %U1.
     2020    10286        */
     2021    10287    3           CASE(%TRAILING);
     2022    10288    3               CALL ERROR(%ZI_BAD_SIGN);
     2023    10289        /*E*     ERROR:    ZIG-ZI_BAD_SIGN-C
     2024    10290        MESSAGE: The COBOL option SIGN must be followed by the keyword
     2025    10291                 LEADING or TRAILING, not %U1.
     2026    10292        */
     2027    10293    3           CASE(%PIC_STR);
     2028    10294    3               CALL ERROR(%ZI_BAD_PIC);
     2029    10295        /*E*     ERROR:    ZIG-ZI_BAD_PIC-C
     2030    10296        MESSAGE: The keyword PICture must be followed by a PICTURE clause,
     2031    10297                 not %U1.
     2032    10298        */
     2033    10299    3           CASE (ELSE);
     2034    10300    3               CALL SET_FIELD_NUM(1,PARAN.CODE);
     2035    10301    3               CALL ERROR(%ZIG_SS_SOFT_ERR_SSTRAN);
     2036    10302        /*E*     ERROR:    ZIG-ZIG_SS_SOFT_ERR_SSTRAN-C
     2037    10303        MESSAGE: The subschema translator got an error that it did not think
     2038    10304                 possible so please report the statement above and the
     2039    10305                 number following %U1.
     2040    10306                 <<<< SOFTWARE ERROR >>>>
     2041    10307        */
     2042    10308    3               END;
     2043    10309    2   U_SUB_ERR: ;
     2044    10310    2           UNWIND TO SUB_ERR;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:63   
     2045    10311    2           END;
     2046    10312    1       RETURN;
     2047    10313    1   END ZIG$SS_PSET;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:64   
--  Include file information  --

   ZI_SUB_LANG.:ZIC0TOU  is referenced.
   ZIG_GENERAL.:ZIC0TOU  cannot be made into a system file and is referenced.
   XU_SUBS_C.:LIB_E05  is referenced.
   XU_MACRO_C.:LIB_E05  is referenced.
   ZIG_DIR_STRUCS.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIG$SS_PSET.

   Procedure ZIG$SS_PSET requires 3122 words for executable code.
   Procedure ZIG$SS_PSET requires 26 words of local(AUTO) storage.

    No errors detected in file ZIG$SS_PSET.:ZIC0TSI    .

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:65   

 Object Unit name= ZIG$SS_PSET                                File name= ZIG$SS_PSET.:ZIC0TOU
 UTS= SEP 05 '97 12:15:12.92 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  NO_ERRORS
    1  LblCom even  none     1      1  BUFFER_ERR
    2  LblCom even  none     1      1  END_SUBSCHEMA
    3   Data  even  none   148    224  ZIG$SS_PSET
    4  LblCom even  none     1      1  LHOLD
    5  LblCom even  none     1      1  LTDP_HOLD
    6  LblCom even  none     1      1  RTDP_HOLD
    7  LblCom even  none     8     10  FIELD1
    8  LblCom even  none     8     10  FIELD2
    9  LblCom even  none     8     10  FIELD3
   10  LblCom even  none     1      1  LINE_COUNT
   11  LblCom even  none     1      1  INTERNAL_ID
   12  LblCom even  none    32     40  EOFC
   13  LblCom even  none     1      1  UWA_ALLOC
   14  LblCom even  none    24     30  CURRENT_ALIAS
   15  LblCom even  none     1      1  LAST_STATUS
   16  LblCom even  none     1      1  ERROR_STATUS
   17  LblCom even  none  1000   1750  LINE
   18  LblCom even  none     8     10  SAVE_RECORD_NAME
   19  LblCom even  none    50     62  LAST_GROUP
   20  LblCom even  none     2      2  GROUP_PACKED
   21  LblCom even  none     1      1  LARGEST_GROUP
   22  RoData even  UTS     39     47  ZIG$SS_PSET
   23  LblCom even  none     1      1  TITLE_DIV
   24  LblCom even  none     1      1  MAPPING_DIV
   25  LblCom even  none     1      1  ALIAS_SEC
   26  LblCom even  none     1      1  STRUCTURE_DIV
   27  LblCom even  none     1      1  REALM_SEC
   28  LblCom even  none     1      1  SET_SEC
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:66   
   29  LblCom even  none     1      1  KEY_SEC
   30  LblCom even  none     1      1  RECORD_SEC
   31   DCB   even  none     0      0  M$UC
   32  LblCom even  none    12     14  ANALS
   33  LblCom even  none    13     15  PURGE
   34  LblCom even  none    19     23  DICTS
   35  LblCom even  none    23     27  DISPS
   36  LblCom even  none    22     26  VALIDS
   37  LblCom even  none    12     14  LOCKS
   38  LblCom even  none    10     12  STRAN
   39  LblCom even  none    12     14  DTRAN
   40  LblCom even  none    16     20  SSTRANS
   41  LblCom even  none    20     24  SSGEN
   42  LblCom even  none     1      1  NUM_ERROR_MSG
   43  LblCom even  none     1      1  NUM_WARN_MSG
   44  LblCom even  none     1      1  ALLOCATE_END
   45  LblCom even  none     2      2  SUBSCHEMA_KEY
   46  LblCom even  none     1      1  BUFFER$
   47  LblCom even  none     1      1  ERROR_IO
   48  LblCom even  none     1      1  BUFFER_LEN
   49  LblCom even  none     2      2  UWA_KEY
   50  LblCom even  none     1      1  NEXT_UWA_SECOND_HALF
   51  LblCom even  none     2      2  RVA_KEY
   52  LblCom even  none     2      2  IA__KEY
   53  LblCom even  none     1      1  NEXT_RVA_SECOND_HALF
   54  LblCom even  none    32     40  SEARCHR_NB
   55  LblCom even  none    32     40  SEM_COM
   56  LblCom even  none    32     40  DMCL_XLATE
   57  LblCom even  none    32     40  Q2_PERCENT
   58  LblCom even  none     5      5  LANG_ALLOWED
   59  LblCom even  none     1      1  SUB_LANGUAGE
   60  LblCom even  none    16     20  HEADING_TEXT
   61  LblCom even  none    13     15  LANG_TEXT
   62  LblCom even  none     1      1  HASH_SCHEMA_NAME
   63  LblCom even  none     1      1  CURRENT_RECORD
   64  LblCom even  none    32     40  DESC_TYPE_9
   65  LblCom even  none    32     40  SAVE_TYPE_9
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:67   
   66  LblCom even  none    64    100  CONTROL
   67  LblCom even  none    32     40  TYPE_100
   68  LblCom even  none    32     40  TYPE_110
   69  LblCom even  none    32     40  TYPE_200
   70  LblCom even  none    32     40  TYPE_210
   71  LblCom even  none    32     40  TYPE_300
   72  LblCom even  none    32     40  TYPE_350
   73  LblCom even  none    32     40  TYPE_400
   74  LblCom even  none    32     40  TYPE_410
   75  LblCom even  none    32     40  TYPE_420
   76  LblCom even  none    32     40  TYPE_430
   77  LblCom even  none    32     40  TYPE_30
   78  LblCom even  none    32     40  TYPE_31
   79  LblCom even  none    33     41  TYPE_32
   80  LblCom even  none    33     41  TYPE_33
   81   Proc  even  none  3122   6062  ZIG$SS_PSET
   82  RoData even  none   251    373  ZIG$SS_PSET

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    81      0   yes            yes      Std        1  ZIG$SS_PSET
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:68   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 ZIG$SS_READ
         yes           Std       2 UOPEN
         yes           Std       4 UGET
         yes           Std       2 SET_FIELD_NUM
         yes           Std       1 ERROR
         yes           Std       8 ZIG$HASH_IT
         yes           Std       2 ZIG$SS_PIC
         yes           Std       3 SET_FIELDS
         yes           Std       2 READSF
         yes           Std       2 WRITSF
         yes           Std       1 WARNING
         yes           Std       1 UCLOSE
         yes           Std       2 WRIT64
         yes           Std       3 UPUT
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SUB_ERR                               M$UC                                  SS_TRAN

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:69   


        1        1        /*M*     ZIG$SS_PSET     I-D-S/II  DBACS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME:    ZIG$SS_PSET
        9        9        PURPOSE: THIS SUBROUTINE IS CALLED FROM X$PARSE TO DO THREE THINGS:
       10       10                 FIRST:
       11       11                      TO GET MORE INPUT FOR X$PARSE IF THE LINE CONTINUES.
       12       12                      TO DO THIS IT CALLS ZIG$SS_READ.
       13       13                 SECOND:
       14       14                      SET THINGS IN THE SUBSCHEMA FILE FOR THE VALIDATION
       15       15                      PHASE OF THE SUBSCHEMA TO USE.
       16       16                 THIRD:
       17       17                      TO FIND ALL SYNTAX ERRORS AND PRINT OUT THE MESSAGES
       18       18                      ON BOTH M$LO AND M$DO BY M$ERRMSG.
       19       19                      ALSO IT WILL TRY AND RECOVER FROM ALL SYNTAX ERROR AND
       20       20                      PARSE AS MUCH AS POSIBLE SO ONE COULD GET COMPOUNDING
       21       21                      ERRORS BUT HE SHOULD GET ALL THE ERROR IN THE SUBSCHEMA
       22       22                      DDL PRINTED OUT IN ONE PASS OF THE SYNTAX CHECKER.
       23       23        */
       24       24        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:70   
       25       25        /*
       26       26        ZZZZZ  III   GGG    $    SSS   SSS        PPPP   SSS  EEEEE TTTTT
       27       27            Z   I   G   G  $$$  S   S S   S       P   P S   S E       T
       28       28           Z    I   G     $ $   S     S           P   P S     E       T
       29       29          Z     I   G      $$$   SSS   SSS        PPPP   SSS  EEEE    T
       30       30         Z      I   G  GG   $ $     S     S       P         S E       T
       31       31        Z       I   G   G  $$$  S   S S   S       P     S   S E       T
       32       32        ZZZZZ  III   GGG    $    SSS   SSS        P      SSS  EEEEE   T
       33       33                                            _____
       34       34        */
       35       35        ZIG$SS_PSET:
       36       36            PROC (PARAN);

     36 81 000000   000000 700200 xent  ZIG$SS_PSET  TSX0  ! X66_AUTO_1
        81 000001   000032 000001                    ZERO    26,1
        81 000002   001025 710000 81                 TRA     s:8844

       37       37    1   DCL ZIG$SS_READ ENTRY;
       38       38    1   DCL WRITSF ENTRY (2);
       39       39    1   DCL READSF ENTRY (2);
       40       40    1   DCL WRIT64 ENTRY (2);
       41       41    1   DCL READ64 ENTRY (2);
       42       42    1   DCL ZIG$SS_PIC ENTRY (2);
       43       43    1   DCL NO_ERRORS BIT (1) EXT;
       44       44    1   DCL BUFFER_ERR BIT(1) EXT;
       45       45    1   DCL SUB_ERR BIT (72) SYMREF;
       46       46    1   DCL END_SUBSCHEMA BIT (1) EXT;
       47       47    1   DCL COMP_TYPE BIT (1) STATIC;
       48       48    1   DCL LHOLD UBIN (36) EXT;
       49       49    1   DCL LTDP_HOLD UBIN (36) EXT;
       50       50    1   DCL RTDP_HOLD UBIN (36) EXT;
       51       51    1   DCL 1 FIELD1 EXT,
       52       52    1         2 COUNT1 UBIN (9) UNAL,
       53       53    1         2 TEXT1 CHAR (31) UNAL;
       54       54    1   DCL 1 FIELD2 EXT,
       55       55    1         2 COUNT2 UBIN (9) UNAL,
       56       56    1         2 TEXT2 CHAR (31) UNAL;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:71   
       57       57    1   DCL 1 FIELD3 EXT,
       58       58    1         2 COUNT3 UBIN (9) UNAL,
       59       59    1         2 TEXT3 CHAR (31) UNAL;
       60       60    1   DCL WORD1 CHAR (30) STATIC;
       61       61    1   DCL NUM UBIN (36) STATIC;
       62       62    1   DCL LINE_COUNT UBIN (36) EXT;
       63       63    1   DCL UTSS UBIN (36) STATIC ALIGNED;
       64       64    1   DCL INTERNAL_ID UBIN (36) EXT;
       65       65    1   DCL EOFC CHAR (128) EXT INIT ('/*/*/*/*/*/*');
       66       66    1   DCL UWA_ALLOC UBIN (36) EXT;
       67       67    1   DCL LOCK_PTR$ PTR STATIC;
       68       68    1   DCL STRING12 CHAR (12) BASED;
       69       69    1   DCL 1 CURRENT_ALIAS EXT UNAL,
       70       70    1         2 TYPE UBIN (36) ,
       71       71    1         2 SUBSCHEMA_NAME CHAR (30),
       72       72    1         2 SCHEMA_NAME CHAR (30),
       73       73    1         2 QUAL_NAME CHAR (30);
       74       74    1   DCL LAST_STATUS UBIN (6) EXT INIT (0);
       75       75    1   DCL STATUS UBIN (6) STATIC INIT (6);
       76       76    1   DCL DESCPTR PTR STATIC INIT (ADDR(BUFFER1));
       77       77    1   DCL BUFFER1 CHAR (128) STATIC;
       78       78    1   DCL BUFFER_TEMP CHAR (128) BASED (DESCPTR);
       79       79    1   DCL EOF UBIN (36);
       80       80    1   DCL BUFFER_SIZE UBIN (36);
       81       81    1   DCL SAVE_RECORD_NUM UBIN (36) STATIC INIT (0);
       82       82    1   DCL SAVE_RECORD_OFFSET UBIN (36) STATIC INIT (0);
       83       83    1   DCL SAVE_LEVEL UBIN (36) STATIC INIT (1);
       84       84    1   DCL START UBIN (36);
       85       85    1   DCL ERROR_STATUS UBIN (36) EXT;
       86       86    1   DCL PTR$ PTR STATIC;
       87       87    1   DCL ZIG$HASH_IT ENTRY (8);
       88       88    1   DCL 1 TRANS_ALIAS BASED,
       89       89    1         2 * CHAR (44) UNAL,
       90       90    1         2 SCHEMA_NAME CHAR (30) UNAL,
       91       91    1         2 QUAL_NAME CHAR (30) UNAL;
       92       92    1   DCL RECORD_TYPE UBIN (9) INIT (7) STATIC;
       93       93    1   DCL I UBIN (36) STATIC;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:72   
       94       94    1   DCL ADD_FILLER UBIN (36) STATIC;
       95       95    1   DCL LINE CHAR (4000) EXT;
       96       96    1   DCL NO_ITEMS BIT (1) STATIC INIT ('0'B);
       97       97    1   DCL SAVE_RECORD_NAME CHAR (30) EXT;
       98       98    1   DCL SAVE_PARAN_CODE UBIN (36) STATIC INIT (0);
       99       99    1   DCL SAVE_NUM UBIN (36) STATIC;
      100      100    1   DCL LAST_GROUP(0:49) UBIN (36) EXT;
      101      101    1   DCL GROUP_PACKED(0:49) BIT (1) EXT UNAL;
      102      102    1   DCL LAST_FILLER UBIN (36) STATIC;
      103      103    1   DCL LARGEST_GROUP UBIN (36) EXT;
      104      104    1   DCL TEMP_WORD CHAR (30) STATIC;
      105      105    1   DCL SSCALE SBIN (6) STATIC;
      106      106    1   DCL WROTE_TYPE_9 BIT (1) STATIC;
      107      107    1   DCL FACTER(0:27) CONSTANT UBIN (36) INIT(
      108      108    1    2*3,1*3,2*22);
      109      109    1   DCL TN_S(0:27) CONSTANT BIT (3) UNAL INIT(
      110      110    1    '000'B*3,'111'B,'110'B*2,'011'B,'001'B,'010'B,'011'B*2,'000'B*17);
      111      111    1   DCL TITLE_DIV BIT(1) EXT;
      112      112    1   DCL MAPPING_DIV BIT(1) EXT;
      113      113    1   DCL ALIAS_SEC BIT(1) EXT;
      114      114    1   DCL STRUCTURE_DIV BIT(1) EXT;
      115      115    1   DCL REALM_SEC BIT(1) EXT;
      116      116    1   DCL SET_SEC BIT(1) EXT;
      117      117    1   DCL KEY_SEC BIT(1) EXT;
      118      118    1   DCL RECORD_SEC BIT(1) EXT;
      119      119    1   DCL USAGE_IS BIT(1) STATIC;
      120      120    1   DCL TYPE_COMP BIT(1) STATIC;
      121      121    1   DCL DISPLAY BIT(1) STATIC;
      122      122    1   DCL NUM_BIT BIT(1) STATIC;
      123      123    1   DCL COMP BIT(1) STATIC;
      124      124    1   DCL LEFT BIT(1) STATIC;
      125      125    1   DCL RIGHT BIT(1) STATIC;
      126      126    1   DCL LEADING BIT(1) STATIC;
      127      127    1   DCL TRAILING BIT(1) STATIC;
      128      128    1   DCL SEPARATE BIT(1) STATIC;
      129      129    1   DCL PIC_STR BIT(1) STATIC;
      130      130    1   DCL INVOK BIT(1) STATIC;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:73   
      131      131    1   DCL PRIV BIT(1) STATIC;
      132      132    1   DCL DIAG BIT(1) STATIC;
      133      133        /*D*
      134      134        NAME:    SYNTAX BITS.
      135      135        DESCRIPTION:
      136      136              These bit up above are for the heart of a manager. He one
      137      137            day looked at the syntax of the subschema DDL and had a
      138      138            heart attack. Why some fool could put the filler words
      139      139            'USAGE IS' in a million time and the parser would still
      140      140            think that it was syntaxicly correct. He said that, "All
      141      141            users would put USAGE IS USAGE USAGE USAGE USAGE IS IS IS IS IS
      142      142            IS IS IS IS IS IS IS just to make sure that the parser syntaxed
      143      143            it correctly. Well that bit make sure that each and every crazy
      144      144            programer (Donald R. Pederson first) will not type in to many
      145      145            filler words just to see how stupit I can be. Well if you don't
      146      146            know who this manager that knows how stupit all DBA are, his
      147      147            init are: D. D.
      148      148
      149      149                 you know who:
      150      150                      Donald R. Pederson!
      151      151        */
      152      152        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:74   
      153      153        %INCLUDE CP_6;
      154      234        %INCLUDE CP_6_SUBS;
      155      774        %FPT_TIME (FPTN = TIME_FPT,DEST=UTS,TSTAMP=UTSS);
      156      793        %INCLUDE ZI_ERRORS_SUBS;
      157     1313        %INCLUDE ZIG_DIR_STRUCS;
      158     1443        %INCLUDE XU_MACRO_C;
      159     4549        %INCLUDE XU_SUBS_C;
      160     4641        %P$PCB(NAME=SS_TRAN,STCLASS=SYMREF);
      161     4842        %PARSE$PARAM(NAME=PARAN);
      162     4923        %PARSE$OUT(NAME=BLK,STCLASS=BASED);
      163     4968        %PARSE$SYM(NAME=SYM,STCLASS=BASED);
      164     5006        %INCLUDE ZIG_GENERAL;
      165     5114        %INCLUDE ZI_SUB_LANG;
      166     6829        %GENERAL;
      167     6953        %DESC_TYPE_9;
      168     7130        %DESC_TYPE_9(NAME_MAIN=SAVE_TYPE_9);
      169     7307        %PARSE_SUBS;
      170     7379        %CONTROL_BLOCK;
      171     7487        %DESC_TYPE_100;
      172     7527        %DESC_TYPE_110;
      173     7591        %DESC_TYPE_200;
      174     7644        %DESC_TYPE_210;
      175     7699        %DESC_TYPE_300;
      176     7768        %DESC_TYPE_350;
      177     7806        %DESC_TYPE_400;
      178     7865        %DESC_TYPE_410;
      179     7921        %DESC_TYPE_420;
      180     7954        %DESC_TYPE_430;
      181     8113        %DESC_TYPE_30;
      182     8140        %DESC_TYPE_31;
      183     8182        %DESC_TYPE_32;
      184     8248        %DESC_TYPE_33;
      185     8293        %DESC_TYPE_430(STCLASS=BASED,NAME=TYPE_430_B);
      186     8452        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:75   
      187     8453        /*
      188     8454         GGG  EEEEE TTTTT       W   W  OOO  RRRR  DDDD
      189     8455        G   G E       T         W   W O O O R   R D   D
      190     8456        G     E       T         W   W O O O R   R D   D
      191     8457        G     EEEE    T         W W W O  OO RRRR  D   D
      192     8458        G  GG E       T         W W W O   O R R   D   D
      193     8459        G   G E       T         W W W O   O R  R  D   D
      194     8460         GGG  EEEEE   T          W W   OOO  R   R DDDD
      195     8461        */
      196     8462
      197     8463        /*
      198     8464              This subroutine gets a text word from the X$PARSE
      199     8465            and puts it into WORD1 and FIELD1.TEXT1 and the length
      200     8466            in FIELD1.COUNT1.
      201     8467        */
      202     8468    1   GET_WORD:

   8468 81 000003   200010 741300       GET_WORD     STX1  ! START+2,,AUTO

      203     8469    1       PROC;
      204     8470    2       WORD1=PARAN.OUT$ -> SYM.TEXT;

   8470 81 000004   200003 470500                    LDP0    @PARAN,,AUTO
        81 000005   000002 471500                    LDP1    2,,PR0
        81 000006   100004 236100                    LDQ     4,,PR1
        81 000007   000033 772000                    QRL     27
        81 000010   000000 620006                    EAX0    0,QL
        81 000011   040000 100540                    MLR     fill='040'O
        81 000012   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
        81 000013   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30

      205     8471    2       FIELD1.COUNT1=PARAN.OUT$ -> SYM.COUNT;

   8471 81 000014   000002 471500                    LDP1    2,,PR0
        81 000015   100004 236100                    LDQ     4,,PR1
        81 000016   000000 552040 7                  STBQ    FIELD1,'40'O

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:76   
      206     8472    2       FIELD1.TEXT1=WORD1;

   8472 81 000017   040000 100400                    MLR     fill='040'O
        81 000020   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 000021   000000 200037 7                  ADSC9   FIELD1                   cn=1,n=31

      207     8473    2       RETURN;

   8473 81 000022   000001 702211                    TSX2  ! 1,X1

      208     8474    2   END GET_WORD;
      209     8475        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:77   
      210     8476        /*
      211     8477         CCC  H   H  AAA  N   N  GGG  EEEEE       TTTTT  OOO         SSS  TTTTT RRRR
      212     8478        C   C H   H A   A N   N G   G E             T   O O O       S   S   T   R   R
      213     8479        C     H   H A   A NN  N G     E             T   O O O       S       T   R   R
      214     8480        C     HHHHH AAAAA N N N G     EEEE          T   O  OO        SSS    T   RRRR
      215     8481        C     H   H A   A N  NN G  GG E             T   O   O           S   T   R R
      216     8482        C   C H   H A   A N   N G   G E             T   O   O       S   S   T   R  R
      217     8483         CCC  H   H A   A N   N  GGG  EEEEE         T    OOO         SSS    T   R   R
      218     8484                                            ______            ______
      219     8485        */
      220     8486        /*
      221     8487            THIS SUBROUTINE CHANGES SCHEMA WORDS INTO COBOL WORDS '_' TO '-'.
      222     8488        */
      223     8489    1   CHANGE_TO_STR:

   8489 81 000023   200010 741300       CHANGE_TO_S* STX1  ! START+2,,AUTO

      224     8490    1       PROC (CHANGE_STR);
      225     8491    2   DCL CHANGE_STR CHAR (30);
      226     8492    2   DCL COUNT1 UBIN (36);
      227     8493    2   DCL ONE_CHANGE (0:4) CHAR (2) STATIC INIT ('  ',
      228     8494    2    '_-' /* COBOL */, '_$' /* FORTRAN */, '__' /* APL */, '__' /*BASIC*/);
      229     8495    2       IF SUB_LANGUAGE = #APL OR SUB_LANGUAGE = #BASIC THEN RETURN;

   8495 81 000024   000000 235000 59                 LDA     SUB_LANGUAGE
        81 000025   000003 115007                    CMPA    3,DL
        81 000026   000031 600000 81                 TZE     s:8495+5
        81 000027   000004 115007                    CMPA    4,DL
        81 000030   000032 601000 81                 TNZ     s:8497

   8495 81 000031   000001 702211                    TSX2  ! 1,X1

      230     8496    3       DO WHILE ('1'B);

      231     8497    3           CALL INDEX1(COUNT1,SUBSTR(ONE_CHANGE(SUB_LANGUAGE),0,1),CHANGE_STR)

   8497 81 000032   000000 235000 59                 LDA     SUB_LANGUAGE
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:78   
        81 000033   000001 735000                    ALS     1
        81 000034   200011 470500                    LDP0    @CHANGE_STR,,AUTO
        81 000035   000005 124500                    SCM     mask='000'O
        81 000036   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30
        81 000037   000136 000001 3                  ADSC9   ONE_CHANGE,A             cn=0,n=1
        81 000040   200012 000100                    ARG     COUNT1,,AUTO
        81 000041   000047 606400 81                 TTN     ALT

      232     8498    3              ALTRET (ALT);
      233     8499    3           CALL INSERT(CHANGE_STR,COUNT1,1,SUBSTR(ONE_CHANGE(SUB_LANGUAGE),1,1));

   8499 81 000042   200012 236100                    LDQ     COUNT1,,AUTO
        81 000043   040106 100405                    MLR     fill='040'O
        81 000044   000136 200001 3                  ADSC9   ONE_CHANGE,A             cn=1,n=1
        81 000045   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

      234     8500    3           END;

   8500 81 000046   000032 710000 81                 TRA     s:8497

      235     8501    2   ALT:
      236     8502    2       RETURN;

   8502 81 000047   200010 221300       ALT          LDX1  ! START+2,,AUTO
        81 000050   000001 702211                    TSX2  ! 1,X1

      237     8503    2   END CHANGE_TO_STR;
      238     8504        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:79   
      239     8505        /*
      240     8506            THIS SUBROUTINE CHANGES COBOL WORDS INTO SCHEMA WORDS '_' TO '-'.
      241     8507        */
      242     8508    1   CHANGE_TO_STR_SCH:

   8508 81 000051   200014 741300       CHANGE_TO_S* STX1  ! @RETURN_START+1,,AUTO

      243     8509    1       PROC (CHANGE_STR);
      244     8510    2   DCL CHANGE_STR CHAR (30);
      245     8511    2   DCL COUNT1 UBIN (36);
      246     8512    2   DCL ONE_CHANGE (0:4) CHAR (2) STATIC INIT ('  ',
      247     8513    2    '-_' /* COBOL */, '$_' /* FORTRAN */, '__' /* APL */, '__' /*BASIC*/);
      248     8514    2       IF SUB_LANGUAGE = #APL OR SUB_LANGUAGE = #BASIC THEN RETURN;

   8514 81 000052   000000 235000 59                 LDA     SUB_LANGUAGE
        81 000053   000003 115007                    CMPA    3,DL
        81 000054   000057 600000 81                 TZE     s:8514+5
        81 000055   000004 115007                    CMPA    4,DL
        81 000056   000060 601000 81                 TNZ     s:8516

   8514 81 000057   000001 702211                    TSX2  ! 1,X1

      249     8515    3       DO WHILE ('1'B);

      250     8516    3           CALL INDEX1(COUNT1,SUBSTR(ONE_CHANGE(SUB_LANGUAGE),0,1),CHANGE_STR)

   8516 81 000060   000000 235000 59                 LDA     SUB_LANGUAGE
        81 000061   000001 735000                    ALS     1
        81 000062   200015 470500                    LDP0    @CHANGE_STR,,AUTO
        81 000063   000005 124500                    SCM     mask='000'O
        81 000064   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30
        81 000065   000141 000001 3                  ADSC9   ONE_CHANGE,A             cn=0,n=1
        81 000066   200016 000100                    ARG     COUNT1,,AUTO
        81 000067   000075 606400 81                 TTN     ALT

      251     8517    3              ALTRET (ALT);
      252     8518    3           CALL INSERT(CHANGE_STR,COUNT1,1,SUBSTR(ONE_CHANGE(SUB_LANGUAGE),1,1));
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:80   

   8518 81 000070   200016 236100                    LDQ     COUNT1,,AUTO
        81 000071   040106 100405                    MLR     fill='040'O
        81 000072   000141 200001 3                  ADSC9   ONE_CHANGE,A             cn=1,n=1
        81 000073   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

      253     8519    3           END;

   8519 81 000074   000060 710000 81                 TRA     s:8516

      254     8520    2   ALT:
      255     8521    2       RETURN;

   8521 81 000075   200014 221300       ALT          LDX1  ! @RETURN_START+1,,AUTO
        81 000076   000001 702211                    TSX2  ! 1,X1

      256     8522    2   END CHANGE_TO_STR_SCH;
      257     8523        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:81   
      258     8524    1   GET_NUM:

   8524 81 000077   200010 741300       GET_NUM      STX1  ! START+2,,AUTO

      259     8525    1       PROC(LOW,HIGH);
      260     8526    2   DCL LOW UBIN (36);
      261     8527    2   DCL HIGH UBIN (36);
      262     8528    2       WORD1=PARAN.OUT$ -> BLK.SUBLK$(0) -> SYM.TEXT;

   8528 81 000100   200003 470500                    LDP0    @PARAN,,AUTO
        81 000101   000002 471500                    LDP1    2,,PR0
        81 000102   100003 473500                    LDP3    3,,PR1
        81 000103   300004 236100                    LDQ     4,,PR3
        81 000104   000033 772000                    QRL     27
        81 000105   000000 620006                    EAX0    0,QL
        81 000106   040000 100540                    MLR     fill='040'O
        81 000107   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
        81 000110   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30

      263     8529    2       FIELD1.COUNT1=PARAN.OUT$ -> BLK.SUBLK$(0) -> SYM.COUNT;

   8529 81 000111   000002 471500                    LDP1    2,,PR0
        81 000112   100003 473500                    LDP3    3,,PR1
        81 000113   300004 236100                    LDQ     4,,PR3
        81 000114   000000 552040 7                  STBQ    FIELD1,'40'O

      264     8530    2       FIELD1.TEXT1=WORD1;

   8530 81 000115   040000 100400                    MLR     fill='040'O
        81 000116   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 000117   000000 200037 7                  ADSC9   FIELD1                   cn=1,n=31

      265     8531    2       CALL CHARBIN(NUM,SUBSTR(WORD1,0,FIELD1.COUNT1));

   8531 81 000120   000000 236000 7                  LDQ     FIELD1
        81 000121   000033 772000                    QRL     27
        81 000122   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:82   
        81 000123   000100 305440                    DTB
        81 000124   000001 030010 3                  NDSC9   WORD1                    cn=0,s=nosgn,sf=0,n=*X0
        81 000125   200020 000010                    NDSC9   COUNT1+2,,AUTO           cn=0,s=lsgnf,sf=0,n=8
        81 000126   200021 235100                    LDA     COUNT1+3,,AUTO
        81 000127   000011 755000 3                  STA     NUM

      266     8532    2       IF NUM<LOW OR NUM>HIGH

   8532 81 000130   200011 471500                    LDP1    @LOW,,AUTO
        81 000131   000011 236000 3                  LDQ     NUM
        81 000132   100000 116100                    CMPQ    0,,PR1
        81 000133   000140 602000 81                 TNC     s:8534
        81 000134   200012 473500                    LDP3    @HIGH,,AUTO
        81 000135   300000 116100                    CMPQ    0,,PR3
        81 000136   000147 602000 81                 TNC     s:8542
        81 000137   000147 600000 81                 TZE     s:8542

      267     8533    3       THEN DO;

      268     8534    3           CALL ERROR(%NUM_ERROR);

   8534 81 000140   000002 630400 82                 EPPR0   2
        81 000141   000000 631400 82                 EPPR1   0
        81 000142   000000 701000 xent               TSX1    ERROR
        81 000143   000000 011000                    NOP     0

      269     8535    3           NUM=LOW;

   8535 81 000144   200011 470500                    LDP0    @LOW,,AUTO
        81 000145   000000 235100                    LDA     0,,PR0
        81 000146   000011 755000 3                  STA     NUM

      270     8536        /*E*     ERROR:    ZIG-NUM_ERROR-C
      271     8537        MESSAGE: SYNTAX ERROR: The number %U1 is out of the allowed range.
      272     8538                 The number %U1 will be set to the lowest limit for further
      273     8539                 syntax checking to continue.
      274     8540        */
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:83   
      275     8541    3           END;

      276     8542    2   END GET_NUM;

   8542 81 000147   200010 221300                    LDX1  ! START+2,,AUTO
        81 000150   000001 702211                    TSX2  ! 1,X1

      277     8543        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:84   
      278     8544        /*
      279     8545         III  N   N  III  TTTTT       TTTTT Y   Y PPPP  EEEEE        999
      280     8546          I   N   N   I     T           T   Y   Y P   P E           9   9
      281     8547          I   NN  N   I     T           T    Y Y  P   P E           9   9
      282     8548          I   N N N   I     T           T     Y   PPPP  EEEE         9999
      283     8549          I   N  NN   I     T           T     Y   P     E               9
      284     8550          I   N   N   I     T           T     Y   P     E           9   9
      285     8551         III  N   N  III    T           T     Y   P     EEEEE        999
      286     8552                                _____                         _____
      287     8553        */
      288     8554    1   INIT_TYPE_9: PROC;

   8554 81 000151   200010 741300       INIT_TYPE_9  STX1  ! START+2,,AUTO

      289     8555    2   DCL WORDS32 CHAR(128) BASED;
      290     8556    2       ADDR(DESC_TYPE_9)->WORDS32 = ADDR(SAVE_TYPE_9)->WORDS32;

   8556 81 000152   040000 100400                    MLR     fill='040'O
        81 000153   000000 000200 65                 ADSC9   SAVE_TYPE_9              cn=0,n=128
        81 000154   000000 000200 64                 ADSC9   DESC_TYPE_9              cn=0,n=128

      291     8557    2       DESC_TYPE_9.LINE = LINE_COUNT -1;

   8557 81 000155   000000 235000 10                 LDA     LINE_COUNT
        81 000156   000001 135007                    SBLA    1,DL
        81 000157   000001 755000 64                 STA     DESC_TYPE_9+1

      292     8558    2       DESC_TYPE_9.SIZE = 100 + FIELD1.COUNT1;

   8558 81 000160   000000 236000 7                  LDQ     FIELD1
        81 000161   000033 772000                    QRL     27
        81 000162   000144 036007                    ADLQ    100,DL
        81 000163   000000 756000 64                 STQ     DESC_TYPE_9

      293     8559    2       IF MOD(DESC_TYPE_9.SIZE,4) ~= 0

   8559 81 000164   000003 376007                    ANQ     3,DL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:85   
        81 000165   000175 600000 81                 TZE     s:8561

      294     8560    2       THEN DESC_TYPE_9.SIZE = DESC_TYPE_9.SIZE + 4 - MOD(DESC_TYPE_9.SIZE,4);

   8560 81 000166   000000 236000 64                 LDQ     DESC_TYPE_9
        81 000167   000003 376007                    ANQ     3,DL
        81 000170   200020 756100                    STQ     COUNT1+2,,AUTO
        81 000171   000000 236000 64                 LDQ     DESC_TYPE_9
        81 000172   200020 136100                    SBLQ    COUNT1+2,,AUTO
        81 000173   000004 036007                    ADLQ    4,DL
        81 000174   000000 756000 64                 STQ     DESC_TYPE_9

      295     8561    2       RETURN;

   8561 81 000175   000001 702211                    TSX2  ! 1,X1

      296     8562    2   END INIT_TYPE_9;
      297     8563        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:86   
      298     8564        /*
      299     8565         CCC  H   H EEEEE  CCC  K   K        AAA  L      III   AAA   SSS
      300     8566        C   C H   H E     C   C K  K        A   A L       I   A   A S   S
      301     8567        C     H   H E     C     K K         A   A L       I   A   A S
      302     8568        C     HHHHH EEEE  C     KK          AAAAA L       I   AAAAA  SSS
      303     8569        C     H   H E     C     K K         A   A L       I   A   A     S
      304     8570        C   C H   H E     C   C K  K        A   A L       I   A   A S   S
      305     8571         CCC  H   H EEEEE  CCC  K   K       A   A LLLLL  III  A   A  SSS
      306     8572                                      _____
      307     8573
      308     8574              DDDD  U   U PPPP   SSS
      309     8575              D   D U   U P   P S   S
      310     8576              D   D U   U P   P S
      311     8577              D   D U   U PPPP   SSS
      312     8578              D   D U   U P         S
      313     8579              D   D U   U P     S   S
      314     8580              DDDD   UUU  P      SSS
      315     8581        _____
      316     8582        */
      317     8583        /*
      318     8584              This subroutine checks to see if the current word in the
      319     8585            subschema ddl text is a reserved word or a alias the word
      320     8586            has a alias assocated to it or the user just gooffed and
      321     8587            has two different words that are the same so that a error
      322     8588            must be generated.
      323     8589
      324     8590              It will also check the character in the current word to
      325     8591            see if they are in the languages character set and if not
      326     8592            error this line of the subschema ddl.
      327     8593
      328     8594        */
      329     8595    1   CHECK_ALIAS_DUPS:

   8595 81 000176   200010 741300       CHECK_ALIAS* STX1  ! START+2,,AUTO

      330     8596    1       PROC;
      331     8597    2   DCL MUST_ALIAS UBIN (36);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:87   
      332     8598    2   DCL CHAR_SET (0:4) CHAR (38) STATIC INIT ( 'NOT USED',
      333     8599    2    'QWERTYUIOPASDFGHJKLZXCVBNM-1234567890 ' /* COBOLS */,
      334     8600    2    'QWERTYUIOPASDFGHJKLZXCVBNM$1234567890 ' /* FORTRANS */,
      335     8601    2    'QWERTYUIOPASDFGHJKLZXCVBNM_1234567890 ' /* APLS */,
      336     8602    2   'QWERTYUIOPASDFGHJKLZXCVBNM_1234567890 ' /* BASICS */
      337     8603    2    );
      338     8604    2   DCL I UBIN (36);
      339     8605    2   DCL J UBIN (36);
      340     8606    2       MUST_ALIAS = 0;

   8606 81 000177   200011 450100                    STZ     MUST_ALIAS,,AUTO

      341     8607    2       TEMP_WORD = WORD1;

   8607 81 000200   040000 100400                    MLR     fill='040'O
        81 000201   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 000202   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30

      342     8608    2       I = 0;

   8608 81 000203   200012 450100                    STZ     I,,AUTO

      343     8609    3       DO WHILE (SUBSTR(WORD1,I,1) ~= ' ' AND I < 30);

   8609 81 000204   000233 710000 81                 TRA     s:8617

      344     8610    3           CALL INDEX1(J,SUBSTR(WORD1,I,1),CHAR_SET(SUB_LANGUAGE));

   8610 81 000205   000000 236000 59                 LDQ     SUB_LANGUAGE
        81 000206   000046 402007                    MPY     38,DL
        81 000207   200012 235100                    LDA     I,,AUTO
        81 000210   000005 124406                    SCM     mask='000'O
        81 000211   000144 000046 3                  ADSC9   CHAR_SET,Q               cn=0,n=38
        81 000212   000001 000001 3                  ADSC9   WORD1,A                  cn=0,n=1
        81 000213   200013 000100                    ARG     J,,AUTO

      345     8611    3           IF J > 38
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:88   

   8611 81 000214   200013 235100                    LDA     J,,AUTO
        81 000215   000047 115007                    CMPA    39,DL
        81 000216   000221 602000 81                 TNC     s:8615

      346     8612    4           THEN DO;

      347     8613    4               MUST_ALIAS = 4;

   8613 81 000217   000004 235007                    LDA     4,DL
        81 000220   200011 755100                    STA     MUST_ALIAS,,AUTO

      348     8614    4               END;

      349     8615    3           IF J = 26 THEN CALL INSERT(TEMP_WORD,I,1,'_');

   8615 81 000221   200013 235100                    LDA     J,,AUTO
        81 000222   000032 115007                    CMPA    26,DL
        81 000223   000230 601000 81                 TNZ     s:8616

   8615 81 000224   200012 235100                    LDA     I,,AUTO
        81 000225   040005 100400                    MLR     fill='040'O
        81 000226   000003 000001 82                 ADSC9   3                        cn=0,n=1
        81 000227   000071 000001 3                  ADSC9   TEMP_WORD,A              cn=0,n=1

      350     8616    3           I = I + 1;

   8616 81 000230   200012 235100                    LDA     I,,AUTO
        81 000231   000001 035007                    ADLA    1,DL
        81 000232   200012 755100                    STA     I,,AUTO

      351     8617    3           END;

   8617 81 000233   200012 235100                    LDA     I,,AUTO
        81 000234   040000 106405                    CMPC    fill='040'O
        81 000235   000001 000001 3                  ADSC9   WORD1,A                  cn=0,n=1
        81 000236   000004 000001 82                 ADSC9   4                        cn=0,n=1
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:89   
        81 000237   000242 600000 81                 TZE     s:8618
        81 000240   000036 115007                    CMPA    30,DL
        81 000241   000205 602000 81                 TNC     s:8610

      352     8618    3       DO CASE (LAST_STATUS);

   8618 81 000242   000000 236000 15                 LDQ     LAST_STATUS
        81 000243   000036 772000                    QRL     30
        81 000244   000006 116007                    CMPQ    6,DL
        81 000245   000247 602006 81                 TNC     s:8618+5,QL
        81 000246   000345 710000 81                 TRA     s:8646
        81 000247   000345 710000 81                 TRA     s:8646
        81 000250   000255 710000 81                 TRA     s:8620
        81 000251   000266 710000 81                 TRA     s:8624
        81 000252   000277 710000 81                 TRA     s:8628
        81 000253   000310 710000 81                 TRA     s:8632
        81 000254   000321 710000 81                 TRA     s:8636

      353     8619    3       CASE (#AREA_DEF);

      354     8620    3           TYPE_200.SUB_AREA_NAME = WORD1;

   8620 81 000255   040000 100400                    MLR     fill='040'O
        81 000256   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 000257   000013 000036 69                 ADSC9   TYPE_200+11              cn=0,n=30

      355     8621    3           TYPE_200.AREA_NAME = TEMP_WORD;

   8621 81 000260   040000 100400                    MLR     fill='040'O
        81 000261   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000262   000003 000036 69                 ADSC9   TYPE_200+3               cn=0,n=30

      356     8622    3           TYPE_200.AREA_BITS.ALIASED = '0'B;

   8622 81 000263   000005 236000 82                 LDQ     5
        81 000264   000024 356000 69                 ANSQ    TYPE_200+20
        81 000265   000345 710000 81                 TRA     s:8646
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:90   

      357     8623    3       CASE (#SET_DEF);

      358     8624    3           TYPE_300.SUB_SET_NAME = WORD1;

   8624 81 000266   040000 100400                    MLR     fill='040'O
        81 000267   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 000270   000013 000036 71                 ADSC9   TYPE_300+11              cn=0,n=30

      359     8625    3           TYPE_300.SET_NAME = TEMP_WORD;

   8625 81 000271   040000 100400                    MLR     fill='040'O
        81 000272   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000273   000003 000036 71                 ADSC9   TYPE_300+3               cn=0,n=30

      360     8626    3           TYPE_300.ALIASED = '0'B;

   8626 81 000274   000005 236000 82                 LDQ     5
        81 000275   000025 356000 71                 ANSQ    TYPE_300+21
        81 000276   000345 710000 81                 TRA     s:8646

      361     8627    3       CASE (#KEY_DEF);

      362     8628    3           TYPE_350.SUB_KEY_NAME = WORD1;

   8628 81 000277   040000 100400                    MLR     fill='040'O
        81 000300   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 000301   000013 000036 72                 ADSC9   TYPE_350+11              cn=0,n=30

      363     8629    3           TYPE_350.KEY_NAME = TEMP_WORD;

   8629 81 000302   040000 100400                    MLR     fill='040'O
        81 000303   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000304   000003 000036 72                 ADSC9   TYPE_350+3               cn=0,n=30

      364     8630    3           TYPE_350.ALIASED = '0'B;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:91   
   8630 81 000305   000005 236000 82                 LDQ     5
        81 000306   000024 356000 72                 ANSQ    TYPE_350+20
        81 000307   000345 710000 81                 TRA     s:8646

      365     8631    3       CASE (#RECORD_DEF);

      366     8632    3           TYPE_400.SUB_RECORD_NAME = WORD1;

   8632 81 000310   040000 100400                    MLR     fill='040'O
        81 000311   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 000312   000013 000036 73                 ADSC9   TYPE_400+11              cn=0,n=30

      367     8633    3           TYPE_400.RECORD_NAME = TEMP_WORD;

   8633 81 000313   040000 100400                    MLR     fill='040'O
        81 000314   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000315   000003 000036 73                 ADSC9   TYPE_400+3               cn=0,n=30

      368     8634    3           TYPE_400.ALIASED = '0'B;

   8634 81 000316   000005 236000 82                 LDQ     5
        81 000317   000025 356000 73                 ANSQ    TYPE_400+21
        81 000320   000345 710000 81                 TRA     s:8646

      369     8635    3       CASE (#ITEM_DEF);

      370     8636    3           TYPE_430.SUB_FIELD_NAME = WORD1;

   8636 81 000321   040000 100400                    MLR     fill='040'O
        81 000322   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 000323   000013 000036 76                 ADSC9   TYPE_430+11              cn=0,n=30

      371     8637    3           IF SUB_LANGUAGE = #BASIC

   8637 81 000324   000000 235000 59                 LDA     SUB_LANGUAGE
        81 000325   000004 115007                    CMPA    4,DL
        81 000326   000340 601000 81                 TNZ     s:8643
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:92   

      372     8638    4           THEN DO;

      373     8639    4               CALL INDEX1(J,'$',TEMP_WORD);

   8639 81 000327   000000 124400                    SCM     mask='000'O
        81 000330   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000331   000006 000001 82                 ADSC9   6                        cn=0,n=1
        81 000332   200013 000100                    ARG     J,,AUTO

      374     8640    4               TYPE_430.FIELD_NAME = SUBSTR(TEMP_WORD,0,J);

   8640 81 000333   200013 720100                    LXL0    J,,AUTO
        81 000334   040000 100440                    MLR     fill='040'O
        81 000335   000071 000010 3                  ADSC9   TEMP_WORD                cn=0,n=*X0
        81 000336   000003 000036 76                 ADSC9   TYPE_430+3               cn=0,n=30

      375     8641    4               END;

   8641 81 000337   000343 710000 81                 TRA     s:8644

      376     8642    3           ELSE
      377     8643    3               TYPE_430.FIELD_NAME = TEMP_WORD;

   8643 81 000340   040000 100400                    MLR     fill='040'O
        81 000341   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000342   000003 000036 76                 ADSC9   TYPE_430+3               cn=0,n=30

      378     8644    3           TYPE_430.ALIASED = '0'B;

   8644 81 000343   000007 236000 82                 LDQ     7
        81 000344   000030 356000 76                 ANSQ    TYPE_430+24

      379     8645    3           END;

      380     8646    2       CALL INDEX1(J,SUBSTR(WORD1,0,1),CHAR_SET(SUB_LANGUAGE));

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:93   
   8646 81 000345   000000 236000 59                 LDQ     SUB_LANGUAGE
        81 000346   000046 402007                    MPY     38,DL
        81 000347   000000 124406                    SCM     mask='000'O
        81 000350   000144 000046 3                  ADSC9   CHAR_SET,Q               cn=0,n=38
        81 000351   000001 000001 3                  ADSC9   WORD1                    cn=0,n=1
        81 000352   200013 000100                    ARG     J,,AUTO

      381     8647    2       IF MUST_ALIAS = 4 OR J > 25

   8647 81 000353   200011 235100                    LDA     MUST_ALIAS,,AUTO
        81 000354   000004 115007                    CMPA    4,DL
        81 000355   000361 600000 81                 TZE     s:8649
        81 000356   200013 235100                    LDA     J,,AUTO
        81 000357   000032 115007                    CMPA    26,DL
        81 000360   000365 602000 81                 TNC     s:8654

      382     8648    3       THEN DO;

      383     8649    3           CALL ERROR(#BAD_CHAR);

   8649 81 000361   000011 630400 82                 EPPR0   9
        81 000362   000000 631400 82                 EPPR1   0
        81 000363   000000 701000 xent               TSX1    ERROR
        81 000364   000000 011000                    NOP     0

      384     8650        /*E*     ERROR:    ZIG-#BAD_CHAR-C
      385     8651        MESSAGE: A bad character is present in the word %U1.
      386     8652        */
      387     8653    3           END;

      388     8654    3       DO CASE (SUB_LANGUAGE);

   8654 81 000365   000000 235000 59                 LDA     SUB_LANGUAGE
        81 000366   000005 115007                    CMPA    5,DL
        81 000367   000371 602005 81                 TNC     s:8654+4,AL
        81 000370   000434 710000 81                 TRA     s:8680
        81 000371   000434 710000 81                 TRA     s:8680
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:94   
        81 000372   000376 710000 81                 TRA     s:8656
        81 000373   000427 710000 81                 TRA     s:8661
        81 000374   000427 710000 81                 TRA     s:8661
        81 000375   000427 710000 81                 TRA     s:8661

      389     8655    3       CASE (#COBOL);

      390     8656    3           IF LAST_STATUS = #ITEM_DEF

   8656 81 000376   000000 236000 15                 LDQ     LAST_STATUS
        81 000377   770000 376003                    ANQ     -4096,DU
        81 000400   050000 116003                    CMPQ    20480,DU
        81 000401   000406 601000 81                 TNZ     s:8658

      391     8657    3           THEN J = RECORD_TYPE;

   8657 81 000402   000062 236000 3                  LDQ     RECORD_TYPE
        81 000403   000033 772000                    QRL     27
        81 000404   200013 756100                    STQ     J,,AUTO
        81 000405   000410 710000 81                 TRA     s:8659

      392     8658    3           ELSE J = 1;

   8658 81 000406   000001 235007                    LDA     1,DL
        81 000407   200013 755100                    STA     J,,AUTO

      393     8659    3           CALL ZIG$HASH_IT(WORD1,#ADD,ERROR_STATUS,0,J,9,PTR$,LAST_STATUS);

   8659 81 000410   000016 237000 82                 LDAQ    14
        81 000411   200026 757100                    STAQ    COUNT1+8,,AUTO
        81 000412   000015 236000 82                 LDQ     13
        81 000413   200025 756100                    STQ     COUNT1+7,,AUTO
        81 000414   200013 630500                    EPPR0   J,,AUTO
        81 000415   200024 450500                    STP0    COUNT1+6,,AUTO
        81 000416   000020 237000 82                 LDAQ    16
        81 000417   200022 757100                    STAQ    COUNT1+4,,AUTO
        81 000420   000022 237000 82                 LDAQ    18
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:95   
        81 000421   200020 757100                    STAQ    COUNT1+2,,AUTO
        81 000422   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 000423   000012 631400 82                 EPPR1   10
        81 000424   000000 701000 xent               TSX1    ZIG$HASH_IT
        81 000425   000000 011000                    NOP     0
        81 000426   000434 710000 81                 TRA     s:8680

      394     8660    3       CASE (#FORTRAN,#APL,#BASIC);

      395     8661    3           J = 0;

   8661 81 000427   200013 450100                    STZ     J,,AUTO

      396     8662    3           CALL ZIG$HASH_IT(WORD1,#ADD,ERROR_STATUS,0,0,9,PTR$,LAST_STATUS);

   8662 81 000430   000024 630400 82                 EPPR0   20
        81 000431   000012 631400 82                 EPPR1   10
        81 000432   000000 701000 xent               TSX1    ZIG$HASH_IT
        81 000433   000000 011000                    NOP     0

      397     8663        /*
      398     8664             This caused a problem with BASIC aliases (STAR #24944) so I
      399     8665             handled BASIC with APL & FORTRAN--this is how it was done until
      400     8666             B05 anyway.  If a problem occurs because of this, handle alias
      401     8667             problem by stripping '$' off in the ALIAS_SS_NAME case below
      402     8668             (main part) before storing WORD1 in CURRENT_ALIAS.SCHEMA_NAME
      403     8669             and put this BASIC case back in here.  We want to call HASH_IT
      404     8670             consistently with ot without the '$' for BASIC aliases.
      405     8671
      406     8672            CASE (#BASIC);
      407     8673                 J=0;
      408     8674                 I=0;
      409     8675                 CALL INDEX1(I,'$',TEMP_WORD);
      410     8676                 TEMP_WORD=SUBSTR(TEMP_WORD,0,I);
      411     8677                 CALL ZIG$HASH_IT(TEMP_WORD,#ADD,ERROR_STATUS,0,0,9,PTR$,LAST_STATUS);
      412     8678        */
      413     8679    3           END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:96   

      414     8680    3       DO CASE (ERROR_STATUS);

   8680 81 000434   000000 235000 16                 LDA     ERROR_STATUS
        81 000435   000004 115007                    CMPA    4,DL
        81 000436   000440 602005 81                 TNC     s:8680+4,AL
        81 000437   000570 710000 81                 TRA     s:8736
        81 000440   000570 710000 81                 TRA     s:8736
        81 000441   000444 710000 81                 TRA     s:8686
        81 000442   000557 710000 81                 TRA     s:8718
        81 000443   000564 710000 81                 TRA     s:8729

      415     8681    3       CASE(1);

      416     8682         /*
      417     8683            There is a alias in the table so put out a descriptor
      418     8684            for what ever type of alias and word it is.
      419     8685         */
      420     8686    3           TEMP_WORD = PTR$ -> TRANS_ALIAS.SCHEMA_NAME;

   8686 81 000444   000061 470400 3                  LDP0    PTR$
        81 000445   040000 100500                    MLR     fill='040'O
        81 000446   000013 000036                    ADSC9   11,,PR0                  cn=0,n=30
        81 000447   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30

      421     8687    3           CALL CHANGE_TO_STR_SCH(TEMP_WORD);

   8687 81 000450   000034 236000 82                 LDQ     28
        81 000451   200015 756100                    STQ     @CHANGE_STR,,AUTO
        81 000452   000051 701000 81                 TSX1    CHANGE_TO_STR_SCH
        81 000453   000000 011000                    NOP     0

      422     8688    4           DO CASE (LAST_STATUS);

   8688 81 000454   000000 236000 15                 LDQ     LAST_STATUS
        81 000455   000036 772000                    QRL     30
        81 000456   000006 116007                    CMPQ    6,DL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:97   
        81 000457   000461 602006 81                 TNC     s:8688+5,QL
        81 000460   000570 710000 81                 TRA     s:8736
        81 000461   000556 710000 81                 TRA     s:8712
        81 000462   000467 710000 81                 TRA     s:8690
        81 000463   000513 710000 81                 TRA     s:8695
        81 000464   000521 710000 81                 TRA     s:8698
        81 000465   000527 710000 81                 TRA     s:8701
        81 000466   000535 710000 81                 TRA     s:8704

      423     8689    4           CASE (#AREA_DEF);

      424     8690    4               TYPE_200.AREA_NAME = TEMP_WORD;

   8690 81 000467   040000 100400                    MLR     fill='040'O
        81 000470   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000471   000003 000036 69                 ADSC9   TYPE_200+3               cn=0,n=30

      425     8691    4               TYPE_200.AREA_BITS.ALIASED = '1'B;

   8691 81 000472   400000 236003                    LDQ     -131072,DU
        81 000473   000024 256000 69                 ORSQ    TYPE_200+20

      426     8692    4               CALL ZIG$HASH_IT(TYPE_200.AREA_NAME,#ADD,ERROR_STATUS,0,

   8692 81 000474   000016 237000 82                 LDAQ    14
        81 000475   200026 757100                    STAQ    COUNT1+8,,AUTO
        81 000476   000015 236000 82                 LDQ     13
        81 000477   200025 756100                    STQ     COUNT1+7,,AUTO
        81 000500   200013 630500                    EPPR0   J,,AUTO
        81 000501   200024 450500                    STP0    COUNT1+6,,AUTO
        81 000502   000020 237000 82                 LDAQ    16
        81 000503   200022 757100                    STAQ    COUNT1+4,,AUTO
        81 000504   000036 237000 82                 LDAQ    30
        81 000505   200020 757100                    STAQ    COUNT1+2,,AUTO
        81 000506   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 000507   000012 631400 82                 EPPR1   10
        81 000510   000000 701000 xent               TSX1    ZIG$HASH_IT
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:98   
        81 000511   000000 011000                    NOP     0
        81 000512   000570 710000 81                 TRA     s:8736

      427     8693    4                  J,9,PTR$,LAST_STATUS);
      428     8694    4           CASE (#SET_DEF);

      429     8695    4               TYPE_300.SET_NAME = TEMP_WORD;

   8695 81 000513   040000 100400                    MLR     fill='040'O
        81 000514   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000515   000003 000036 71                 ADSC9   TYPE_300+3               cn=0,n=30

      430     8696    4               TYPE_300.ALIASED = '1'B;

   8696 81 000516   400000 236003                    LDQ     -131072,DU
        81 000517   000025 256000 71                 ORSQ    TYPE_300+21
        81 000520   000570 710000 81                 TRA     s:8736

      431     8697    4           CASE (#KEY_DEF);

      432     8698    4               TYPE_350.KEY_NAME = TEMP_WORD;

   8698 81 000521   040000 100400                    MLR     fill='040'O
        81 000522   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000523   000003 000036 72                 ADSC9   TYPE_350+3               cn=0,n=30

      433     8699    4               TYPE_350.ALIASED = '1'B;

   8699 81 000524   400000 236003                    LDQ     -131072,DU
        81 000525   000024 256000 72                 ORSQ    TYPE_350+20
        81 000526   000570 710000 81                 TRA     s:8736

      434     8700    4           CASE (#RECORD_DEF);

      435     8701    4               TYPE_400.RECORD_NAME = TEMP_WORD;

   8701 81 000527   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:99   
        81 000530   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000531   000003 000036 73                 ADSC9   TYPE_400+3               cn=0,n=30

      436     8702    4               TYPE_400.ALIASED = '1'B;

   8702 81 000532   400000 236003                    LDQ     -131072,DU
        81 000533   000025 256000 73                 ORSQ    TYPE_400+21
        81 000534   000570 710000 81                 TRA     s:8736

      437     8703    4           CASE (#ITEM_DEF);

      438     8704    4               IF SUB_LANGUAGE = #BASIC

   8704 81 000535   000000 235000 59                 LDA     SUB_LANGUAGE
        81 000536   000004 115007                    CMPA    4,DL
        81 000537   000551 601000 81                 TNZ     s:8710

      439     8705    5               THEN DO;

      440     8706    5                   CALL INDEX1(J,'$',TEMP_WORD);

   8706 81 000540   000000 124400                    SCM     mask='000'O
        81 000541   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000542   000006 000001 82                 ADSC9   6                        cn=0,n=1
        81 000543   200013 000100                    ARG     J,,AUTO

      441     8707    5                   TYPE_430.FIELD_NAME = SUBSTR(TEMP_WORD,0,J);

   8707 81 000544   200013 720100                    LXL0    J,,AUTO
        81 000545   040000 100440                    MLR     fill='040'O
        81 000546   000071 000010 3                  ADSC9   TEMP_WORD                cn=0,n=*X0
        81 000547   000003 000036 76                 ADSC9   TYPE_430+3               cn=0,n=30

      442     8708    5                   END;

   8708 81 000550   000554 710000 81                 TRA     s:8711

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:100  
      443     8709    4               ELSE
      444     8710    4                   TYPE_430.FIELD_NAME = TEMP_WORD;

   8710 81 000551   040000 100400                    MLR     fill='040'O
        81 000552   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30
        81 000553   000003 000036 76                 ADSC9   TYPE_430+3               cn=0,n=30

      445     8711    4               TYPE_430.ALIASED = '1'B;

   8711 81 000554   200000 236003                    LDQ     65536,DU
        81 000555   000030 256000 76                 ORSQ    TYPE_430+24

      446     8712    4               END;

   8712 81 000556   000570 710000 81                 TRA     s:8736

      447     8713    3       CASE (2);

      448     8714         /*
      449     8715            There is a dup in the hash table all ready for this
      450     8716            word so error this line.
      451     8717         */
      452     8718    3           CALL ERROR(#DUP_DATA_NAME);

   8718 81 000557   000041 630400 82                 EPPR0   33
        81 000560   000000 631400 82                 EPPR1   0
        81 000561   000000 701000 xent               TSX1    ERROR
        81 000562   000000 011000                    NOP     0
        81 000563   000570 710000 81                 TRA     s:8736

      453     8719        /*E*     ERROR:    ZIG-#DUP_DATA_NAME-C
      454     8720        MESSAGE: For the word %U1 there is a duplicate name in the subschema
      455     8721                 DDL text. One of the names must be changed in the subschema
      456     8722                 text and aliased.
      457     8723        */
      458     8724    3       CASE (3);

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:101  
      459     8725         /*
      460     8726            There is a user defined word that is the same as
      461     8727            reserved word for this language.
      462     8728         */
      463     8729    3           CALL ERROR(#USER_WORD_RES);

   8729 81 000564   000043 630400 82                 EPPR0   35
        81 000565   000000 631400 82                 EPPR1   0
        81 000566   000000 701000 xent               TSX1    ERROR
        81 000567   000000 011000                    NOP     0

      464     8730        /*E*     ERROR:    ZIG-#USER_WORD_RES-C
      465     8731        MESSAGE: The word %U1 is the same as a reserved word for the
      466     8732                 language that the subschema is for so the word %U1
      467     8733                 must be aliased in the subschema DDL.
      468     8734        */
      469     8735    3           END;

      470     8736    2       RETURN;

   8736 81 000570   200010 221300                    LDX1  ! START+2,,AUTO
        81 000571   000001 702211                    TSX2  ! 1,X1

      471     8737    2   END CHECK_ALIAS_DUPS;
      472     8738        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:102  
      473     8739        /*
      474     8740         SSS  TTTTT  OOO  RRRR  EEEEE
      475     8741        S   S   T   O O O R   R E
      476     8742        S       T   O O O R   R E
      477     8743         SSS    T   O  OO RRRR  EEEE
      478     8744            S   T   O   O R R   E
      479     8745        S   S   T   O   O R  R  E
      480     8746         SSS    T    OOO  R   R EEEEE
      481     8747        */
      482     8748        /*
      483     8749
      484     8750              This subroutine saves the descriptors so that they can
      485     8751            be written a the end of the subschema file (in the descriptor
      486     8752            section). This is nessecary since this is a one pass compiler
      487     8753            and needs to write out two sections in the subschema file.
      488     8754        */
      489     8755    1   STORE:

   8755 81 000572   200010 741300       STORE        STX1  ! START+2,,AUTO

      490     8756    1       PROC (STRING_TO_STORE);
      491     8757    2   DCL STRING_TO_STORE CHAR (132);
      492     8758    2       CALL UPUT('5*',ADDR(STRING_TO_STORE),32);

   8758 81 000573   200011 236100                    LDQ     @STRING_TO_STORE,,AUTO
        81 000574   200020 756100                    STQ     COUNT1+2,,AUTO
        81 000575   000046 236000 82                 LDQ     38
        81 000576   200023 756100                    STQ     COUNT1+5,,AUTO
        81 000577   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 000600   200022 450500                    STP0    COUNT1+4,,AUTO
        81 000601   000047 236000 82                 LDQ     39
        81 000602   200021 756100                    STQ     COUNT1+3,,AUTO
        81 000603   200021 630500                    EPPR0   COUNT1+3,,AUTO
        81 000604   000044 631400 82                 EPPR1   36
        81 000605   000000 701000 xent               TSX1    UPUT
        81 000606   000000 011000                    NOP     0

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:103  
      493     8759    2       RETURN;

   8759 81 000607   200010 221300                    LDX1  ! START+2,,AUTO
        81 000610   000001 702211                    TSX2  ! 1,X1

      494     8760    2   END STORE;
      495     8761        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:104  
      496     8762        /*
      497     8763         AAA  L     L      OOO   CCC
      498     8764        A   A L     L     O O O C   C
      499     8765        A   A L     L     O O O C
      500     8766        AAAAA L     L     O  OO C
      501     8767        A   A L     L     O   O C
      502     8768        A   A L     L     O   O C   C
      503     8769        A   A LLLLL LLLLL  OOO   CCC
      504     8770        */
      505     8771        /*
      506     8772            This is the allocate procedure to allocate space in the UWA.
      507     8773            there are three parameters:
      508     8774                 1 -  the amount of space to allocate in nibles
      509     8775                 2 -  the alignment in nibles (word = 8)
      510     8776                 3 -  the offset of where the thing was allocated,
      511     8777                      (this is in the same units as the alignment:
      512     8778                           word allignment the number of words
      513     8779                           nible allignment then number of nibles
      514     8780                      from the start of the UWA.)
      515     8781        */
      516     8782    1   ALLOC:

   8782 81 000611   200010 741300       ALLOC        STX1  ! START+2,,AUTO

      517     8783    1       PROC (AMOUNT,ALIGNMENT,RETURN_START);
      518     8784    2   DCL AMOUNT UBIN (36);
      519     8785    2   DCL ALIGNMENT UBIN (36);
      520     8786    2   DCL RETURN_START UBIN (36);
      521     8787    2       IF MOD(UWA_ALLOC,ALIGNMENT) ~= 0

   8787 81 000612   200012 470500                    LDP0    @ALIGNMENT,,AUTO
        81 000613   000000 236000 13                 LDQ     UWA_ALLOC
        81 000614   000631 605000 81                 TPL     s:8787+15
        81 000615   000000 235100                    LDA     0,,PR0
        81 000616   000625 604000 81                 TMI     s:8787+11
        81 000617   000001 115007                    CMPA    1,DL
        81 000620   000633 600000 81                 TZE     s:8787+17
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:105  
        81 000621   000000 235003                    LDA     0,DU
        81 000622   000001 737000                    LLS     1
        81 000623   000000 507100                    DVF     0,,PR0
        81 000624   000633 710000 81                 TRA     s:8787+17
        81 000625   000000 116100                    CMPQ    0,,PR0
        81 000626   000633 604000 81                 TMI     s:8787+17
        81 000627   000000 136100                    SBLQ    0,,PR0
        81 000630   000633 710000 81                 TRA     s:8787+17
        81 000631   000000 235100                    LDA     0,,PR0
        81 000632   000635 605000 81                 TPL     s:8787+19
        81 000633   000044 737000                    LLS     36
        81 000634   000636 710000 81                 TRA     s:8787+20
        81 000635   000000 506100                    DIV     0,,PR0
        81 000636   000044 733000                    LRS     36
        81 000637   000000 116003                    CMPQ    0,DU
        81 000640   000673 600000 81                 TZE     s:8789

      522     8788    2       THEN UWA_ALLOC = UWA_ALLOC + ALIGNMENT - MOD(UWA_ALLOC,ALIGNMENT);

   8788 81 000641   000000 236000 13                 LDQ     UWA_ALLOC
        81 000642   000000 036100                    ADLQ    0,,PR0
        81 000643   200020 756100                    STQ     COUNT1+2,,AUTO
        81 000644   000000 236000 13                 LDQ     UWA_ALLOC
        81 000645   000662 605000 81                 TPL     s:8788+17
        81 000646   000000 235100                    LDA     0,,PR0
        81 000647   000656 604000 81                 TMI     s:8788+13
        81 000650   000001 115007                    CMPA    1,DL
        81 000651   000664 600000 81                 TZE     s:8788+19
        81 000652   000000 235003                    LDA     0,DU
        81 000653   000001 737000                    LLS     1
        81 000654   000000 507100                    DVF     0,,PR0
        81 000655   000664 710000 81                 TRA     s:8788+19
        81 000656   000000 116100                    CMPQ    0,,PR0
        81 000657   000664 604000 81                 TMI     s:8788+19
        81 000660   000000 136100                    SBLQ    0,,PR0
        81 000661   000664 710000 81                 TRA     s:8788+19
        81 000662   000000 235100                    LDA     0,,PR0
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:106  
        81 000663   000666 605000 81                 TPL     s:8788+21
        81 000664   000044 737000                    LLS     36
        81 000665   000667 710000 81                 TRA     s:8788+22
        81 000666   000000 506100                    DIV     0,,PR0
        81 000667   200021 755100                    STA     COUNT1+3,,AUTO
        81 000670   200020 236100                    LDQ     COUNT1+2,,AUTO
        81 000671   200021 136100                    SBLQ    COUNT1+3,,AUTO
        81 000672   000000 756000 13                 STQ     UWA_ALLOC

      523     8789    2       RETURN_START = UWA_ALLOC/ALIGNMENT;

   8789 81 000673   000000 236000 13                 LDQ     UWA_ALLOC
        81 000674   000712 605000 81                 TPL     s:8789+15
        81 000675   000000 235100                    LDA     0,,PR0
        81 000676   000706 604000 81                 TMI     s:8789+11
        81 000677   000001 115007                    CMPA    1,DL
        81 000700   000717 600000 81                 TZE     s:8789+20
        81 000701   000000 235003                    LDA     0,DU
        81 000702   000001 737000                    LLS     1
        81 000703   000000 507100                    DVF     0,,PR0
        81 000704   000044 733000                    LRS     36
        81 000705   000717 710000 81                 TRA     s:8789+20
        81 000706   000000 116100                    CMPQ    0,,PR0
        81 000707   000714 602000 81                 TNC     s:8789+17
        81 000710   000001 236007                    LDQ     1,DL
        81 000711   000717 710000 81                 TRA     s:8789+20
        81 000712   000000 235100                    LDA     0,,PR0
        81 000713   000716 605000 81                 TPL     s:8789+19
        81 000714   000000 236003                    LDQ     0,DU
        81 000715   000717 710000 81                 TRA     s:8789+20
        81 000716   000000 506100                    DIV     0,,PR0
        81 000717   200013 471500                    LDP1    @RETURN_START,,AUTO
        81 000720   100000 756100                    STQ     0,,PR1

      524     8790    2       UWA_ALLOC = UWA_ALLOC + AMOUNT;

   8790 81 000721   200011 473500                    LDP3    @AMOUNT,,AUTO
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:107  
        81 000722   000000 236000 13                 LDQ     UWA_ALLOC
        81 000723   300000 036100                    ADLQ    0,,PR3
        81 000724   000000 756000 13                 STQ     UWA_ALLOC

      525     8791    2       RETURN;

   8791 81 000725   200010 221300                    LDX1  ! START+2,,AUTO
        81 000726   000001 702211                    TSX2  ! 1,X1

      526     8792    2   END ALLOC;
      527     8793        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:108  
      528     8794        /*
      529     8795        U   U PPPP  DDDD   AAA  TTTTT EEEEE        GGG  RRRR   OOO  U   U PPPP
      530     8796        U   U P   P D   D A   A   T   E           G   G R   R O O O U   U P   P
      531     8797        U   U P   P D   D A   A   T   E           G     R   R O O O U   U P   P
      532     8798        U   U PPPP  D   D AAAAA   T   EEEE        G     RRRR  O  OO U   U PPPP
      533     8799        U   U P     D   D A   A   T   E           G  GG R R   O   O U   U P
      534     8800        U   U P     D   D A   A   T   E           G   G R  R  O   O U   U P
      535     8801         UUU  P     DDDD  A   A   T   EEEEE        GGG  R   R  OOO   UUU  P
      536     8802                                            _____
      537     8803        */
      538     8804        /*
      539     8805              This subroutine updates the length of group data
      540     8806            items for COBOL since all group items must be the
      541     8807            length of all the items under it. This must be done
      542     8808            by reading the block allready written into DESC_TYPE_9
      543     8809            and undateing the fields then writting it out again to
      544     8810            the same place.
      545     8811
      546     8812
      547     8813              There is better ways to do this but i wanted the translater
      548     8814            to be a one pass compiler so you have to update things like
      549     8815            this in a one pass compiler.
      550     8816        */
      551     8817    1   UPDATE_GROUP:

   8817 81 000727   200010 741300       UPDATE_GROUP STX1  ! START+2,,AUTO

      552     8818    1       PROC(START_LEVEL);
      553     8819    2   DCL START_LEVEL UBIN (36);
      554     8820    2   DCL I UBIN (36);
      555     8821    3       DO I = START_LEVEL TO LARGEST_GROUP;

   8821 81 000730   200011 470500                    LDP0    @START_LEVEL,,AUTO
        81 000731   000000 235100                    LDA     0,,PR0
        81 000732   200012 755100                    STA     I,,AUTO
        81 000733   001014 710000 81                 TRA     s:8840+3

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:109  
      556     8822    3           IF LAST_GROUP(I) ~= 0

   8822 81 000734   200012 720100                    LXL0    I,,AUTO
        81 000735   000000 235010 19                 LDA     LAST_GROUP,X0
        81 000736   001011 600000 81                 TZE     s:8840

      557     8823    4           THEN DO;

      558     8824    4               CALL READSF(LAST_GROUP(I),DESC_TYPE_9);

   8824 81 000737   000051 236000 82                 LDQ     41
        81 000740   200021 756100                    STQ     COUNT1+3,,AUTO
        81 000741   000000 630410 19                 EPPR0   LAST_GROUP,X0
        81 000742   200020 450500                    STP0    COUNT1+2,,AUTO
        81 000743   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 000744   000050 631400 82                 EPPR1   40
        81 000745   000000 701000 xent               TSX1    READSF
        81 000746   000000 011000                    NOP     0

      559     8825    4               IF GROUP_PACKED(I)

   8825 81 000747   200012 235100                    LDA     I,,AUTO
        81 000750   000000 066405                    CMPB    filb='0'B
        81 000751   000000 000001 20                 BDSC    GROUP_PACKED,A           by=0,bit=0,n=1
        81 000752   000013 000022 82                 BDSC    11                       by=0,bit=0,n=18
        81 000753   000772 600000 81                 TZE     s:8835

      560     8826    5               THEN DO;

      561     8827    5                   DESC_TYPE_9.OFFSET = DESC_TYPE_9.LENGTH;

   8827 81 000754   000016 236000 64                 LDQ     DESC_TYPE_9+14
        81 000755   000024 756000 64                 STQ     DESC_TYPE_9+20

      562     8828    5                   DESC_TYPE_9.LENGTH = UWA_ALLOC - DESC_TYPE_9.LENGTH;

   8828 81 000756   000000 236000 13                 LDQ     UWA_ALLOC
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:110  
        81 000757   000016 136000 64                 SBLQ    DESC_TYPE_9+14
        81 000760   000016 756000 64                 STQ     DESC_TYPE_9+14

      563     8829    5                   DESC_TYPE_9.NUMERIC = '1'B;

   8829 81 000761   000001 236003                    LDQ     1,DU
        81 000762   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      564     8830    5                   DESC_TYPE_9.DISPLAY = '0'B;

   8830 81 000763   000052 236000 82                 LDQ     42
        81 000764   000021 356000 64                 ANSQ    DESC_TYPE_9+17

      565     8831    5                   DESC_TYPE_9.PIC_HAS_S = '0'B;

   8831 81 000765   000053 236000 82                 LDQ     43
        81 000766   000021 356000 64                 ANSQ    DESC_TYPE_9+17

      566     8832    5                   DESC_TYPE_9.COMP_4 = '1'B;

   8832 81 000767   400000 236003                    LDQ     -131072,DU
        81 000770   000022 256000 64                 ORSQ    DESC_TYPE_9+18

      567     8833    5                   END;

   8833 81 000771   000776 710000 81                 TRA     s:8837

      568     8834    5               ELSE DO;

      569     8835    5                   DESC_TYPE_9.LENGTH = (UWA_ALLOC - DESC_TYPE_9.LENGTH) / 2;

   8835 81 000772   000000 236000 13                 LDQ     UWA_ALLOC
        81 000773   000016 136000 64                 SBLQ    DESC_TYPE_9+14
        81 000774   000002 506007                    DIV     2,DL
        81 000775   000016 756000 64                 STQ     DESC_TYPE_9+14

      570     8836    5                   END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:111  

      571     8837    4               CALL WRITSF(LAST_GROUP(I),DESC_TYPE_9);

   8837 81 000776   000051 236000 82                 LDQ     41
        81 000777   200021 756100                    STQ     COUNT1+3,,AUTO
        81 001000   200012 720100                    LXL0    I,,AUTO
        81 001001   000000 630410 19                 EPPR0   LAST_GROUP,X0
        81 001002   200020 450500                    STP0    COUNT1+2,,AUTO
        81 001003   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 001004   000050 631400 82                 EPPR1   40
        81 001005   000000 701000 xent               TSX1    WRITSF
        81 001006   000000 011000                    NOP     0

      572     8838    4               LAST_GROUP(I) = 0;

   8838 81 001007   200012 720100                    LXL0    I,,AUTO
        81 001010   000000 450010 19                 STZ     LAST_GROUP,X0

      573     8839    4               END;

      574     8840    3           END;

   8840 81 001011   200012 235100                    LDA     I,,AUTO
        81 001012   000001 035007                    ADLA    1,DL
        81 001013   200012 755100                    STA     I,,AUTO
        81 001014   000000 236000 21                 LDQ     LARGEST_GROUP
        81 001015   200012 116100                    CMPQ    I,,AUTO
        81 001016   000734 603000 81                 TRC     s:8822

      575     8841    2       LARGEST_GROUP = START_LEVEL - 1;

   8841 81 001017   200011 470500                    LDP0    @START_LEVEL,,AUTO
        81 001020   000000 235100                    LDA     0,,PR0
        81 001021   000001 135007                    SBLA    1,DL
        81 001022   000000 755000 21                 STA     LARGEST_GROUP

      576     8842    2   END UPDATE_GROUP;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:112  

   8842 81 001023   200010 221300                    LDX1  ! START+2,,AUTO
        81 001024   000001 702211                    TSX2  ! 1,X1

      577     8843        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:113  
      578     8844    2       DO CASE (PARAN.TYPE);

   8844 81 001025   200003 470500                    LDP0    @PARAN,,AUTO
        81 001026   000000 236100                    LDQ     0,,PR0
        81 001027   000033 772000                    QRL     27
        81 001030   000005 116007                    CMPQ    5,DL
        81 001031   001033 602006 81                 TNC     s:8844+6,QL
        81 001032   006061 710000 81                 TRA     s:10312
        81 001033   006061 710000 81                 TRA     s:10312
        81 001034   001063 710000 81                 TRA     s:8896
        81 001035   001063 710000 81                 TRA     s:8896
        81 001036   005504 710000 81                 TRA     s:10138
        81 001037   001040 710000 81                 TRA     s:8854

      579     8845         %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:114  
      580     8846        /*
      581     8847              This part of the case statement handles all input for
      582     8848            X$PARSE by calling ZIG$SS_READ.
      583     8849            If a end of file is found or a start of a DBACS directive
      584     8850            is found then goto the syntax error place in ZIG$SS_PDRI
      585     8851            so it can error things corectly.
      586     8852        */
      587     8853    2       CASE(%INPUT#);

      588     8854    2           IF END_SUBSCHEMA THEN UNWIND TO SUB_ERR;

   8854 81 001040   000000 234000 2                  SZN     END_SUBSCHEMA
        81 001041   001050 605000 81                 TPL     s:8855

   8854 81 001042   000100 100600                    MLR   ! fill='000'O
        81 001043   000000 000010 xsym               ADSC9   SUB_ERR                  cn=0,n=8
        81 001044   200020 000010                    ADSC9   COUNT1+2,,AUTO           cn=0,n=8
        81 001045   200020 237300                    LDAQ  ! COUNT1+2,,AUTO
        81 001046   000000 700200 xent               TSX0  ! X66_AUNWIND
        81 001047   000000 000200                    ZERO    0,128

      589     8855    2           CALL ZIG$SS_READ;

   8855 81 001050   000013 631400 82                 EPPR1   11
        81 001051   000000 701000 xent               TSX1    ZIG$SS_READ
        81 001052   000000 011000                    NOP     0

      590     8856    2           IF END_SUBSCHEMA THEN UNWIND TO SUB_ERR;

   8856 81 001053   000000 234000 2                  SZN     END_SUBSCHEMA
        81 001054   006061 605000 81                 TPL     s:10312

   8856 81 001055   000100 100600                    MLR   ! fill='000'O
        81 001056   000000 000010 xsym               ADSC9   SUB_ERR                  cn=0,n=8
        81 001057   200020 000010                    ADSC9   COUNT1+2,,AUTO           cn=0,n=8
        81 001060   200020 237300                    LDAQ  ! COUNT1+2,,AUTO
        81 001061   000000 700200 xent               TSX0  ! X66_AUNWIND
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:115  
        81 001062   000000 000200                    ZERO    0,128

      591     8857         %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:116  
      592     8858        /*
      593     8859              This is the part of the X$PARSE interface that is the most
      594     8860            important because it sets all the flags in the descriptors
      595     8861            in ZI_SUB_LANG and writes them out into the subschema file.
      596     8862            So before changing anything in this part of the program
      597     8863            take a good look at that include file and read all the
      598     8864            *D* comments and all the %EQU and %SUBS in the file.
      599     8865            Then look at the file ZIG$SS_PSI (this contains the source
      600     8866            for X$PARSE and PARTRAGE to run off of) since any change in
      601     8867            this part of the subroutine must also be changed in the
      602     8868            ZIG$SS_PSI.
      603     8869
      604     8870            note:
      605     8871                 some strange things are done with X$PARSE because some
      606     8872                 things don't work in X$PARSE so thing had to be word
      607     8873                 around them.
      608     8874
      609     8875            NOTE1:
      610     8876                 The items part of the processing if a little hard to
      611     8877               understand and maybe should be rewritten. But, here is how
      612     8878               it words.
      613     8879                 The level number is given first if sub_language is COBOL
      614     8880                 else all items level are 2 for both FORTRAN and apl.
      615     8881                 Then we get the item name and check to see if it is a
      616     8882                 good name (no dups and good characters). The item name
      617     8883                 is then put in the DESC_TYPE_9.NAME. Then the type
      618     8884                 if put into the descriptor if it comes (all picture
      619     8885                 decoding is done throw ZIG$SS_PIC).
      620     8886
      621     8887               If you have any problems with the items for COBOL then
      622     8888               good luck.
      623     8889
      624     8890
      625     8891              Any question and all i can say is play with X$PARSE a long
      626     8892            time before changing any thing large.!!!!
      627     8893
      628     8894        */
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:117  
      629     8895    2       CASE(%SUCC#, %PRE#);

      630     8896    2           IF SUB_LANGUAGE = #FORTRAN AND

   8896 81 001063   000000 235000 59                 LDA     SUB_LANGUAGE
        81 001064   000002 115007                    CMPA    2,DL
        81 001065   001126 601000 81                 TNZ     s:8914
        81 001066   000000 720100                    LXL0    0,,PR0
        81 001067   000040 100003                    CMPX0   32,DU
        81 001070   001107 600000 81                 TZE     s:8906
        81 001071   000041 100003                    CMPX0   33,DU
        81 001072   001107 600000 81                 TZE     s:8906
        81 001073   000017 100003                    CMPX0   15,DU
        81 001074   001107 600000 81                 TZE     s:8906
        81 001075   000020 100003                    CMPX0   16,DU
        81 001076   001107 600000 81                 TZE     s:8906
        81 001077   000015 100003                    CMPX0   13,DU
        81 001100   001107 600000 81                 TZE     s:8906
        81 001101   000016 100003                    CMPX0   14,DU
        81 001102   001107 600000 81                 TZE     s:8906
        81 001103   000037 100003                    CMPX0   31,DU
        81 001104   001107 600000 81                 TZE     s:8906
        81 001105   000032 100003                    CMPX0   26,DU
        81 001106   001126 601000 81                 TNZ     s:8914

      631     8897    2              (PARAN.CODE = %COMPLEX_S OR
      632     8898    2              PARAN.CODE = %COMPLEX_D OR
      633     8899    2              PARAN.CODE = %INTEGER OR
      634     8900    2              PARAN.CODE = %CHARACTER OR
      635     8901    2              PARAN.CODE = %DBKEY OR
      636     8902    2              PARAN.CODE = %FLOAT OR
      637     8903    2              PARAN.CODE = %FLOAT_DOUBLE OR
      638     8904    2              PARAN.CODE = %BOOL )
      639     8905    3           THEN DO;

      640     8906    3               IF PARAN.CODE = %CHARACTER

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:118  
   8906 81 001107   000020 100003                    CMPX0   16,DU
        81 001110   001121 601000 81                 TNZ     s:8911

      641     8907    4               THEN DO;

      642     8908    4                   CALL GET_NUM(1,4096);

   8908 81 001111   000056 236000 82                 LDQ     46
        81 001112   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 001113   000057 236000 82                 LDQ     47
        81 001114   200011 756100                    STQ     START+3,,AUTO
        81 001115   000077 701000 81                 TSX1    GET_NUM
        81 001116   000000 011000                    NOP     0

      643     8909    4                   SAVE_NUM = NUM;

   8909 81 001117   000011 235000 3                  LDA     NUM
        81 001120   000067 755000 3                  STA     SAVE_NUM

      644     8910    4                   END;

      645     8911    3               SAVE_PARAN_CODE = PARAN.CODE;

   8911 81 001121   200003 470500                    LDP0    @PARAN,,AUTO
        81 001122   000000 236100                    LDQ     0,,PR0
        81 001123   777777 376007                    ANQ     -1,DL
        81 001124   000066 756000 3                  STQ     SAVE_PARAN_CODE

      646     8912    3               RETURN;

   8912 81 001125   000000 702200 xent               TSX2  ! X66_ARET

      647     8913    3               END;
      648     8914    2           IF PARAN.CODE = %SAVE_CODE_DO_NOW

   8914 81 001126   000000 720100                    LXL0    0,,PR0
        81 001127   000066 100003                    CMPX0   54,DU
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:119  
        81 001130   001133 601000 81                 TNZ     s:8918

      649     8915    3           THEN DO;

      650     8916    3               PARAN.CODE = SAVE_PARAN_CODE;

   8916 81 001131   000066 721000 3                  LXL1    SAVE_PARAN_CODE
        81 001132   000000 441100                    SXL1    0,,PR0

      651     8917    3               END;

      652     8918    3           DO CASE (PARAN.CODE);

   8918 81 001133   000000 720100                    LXL0    0,,PR0
        81 001134   000102 100003                    CMPX0   66,DU
        81 001135   001137 602010 81                 TNC     s:8918+4,X0
        81 001136   006061 710000 81                 TRA     s:10312
        81 001137   001241 710000 81                 TRA     s:8920
        81 001140   001255 710000 81                 TRA     s:8932
        81 001141   001271 710000 81                 TRA     s:8944
        81 001142   001305 710000 81                 TRA     s:8956
        81 001143   001403 710000 81                 TRA     s:9000
        81 001144   001406 710000 81                 TRA     s:9002
        81 001145   001411 710000 81                 TRA     s:9004
        81 001146   001414 710000 81                 TRA     s:9006
        81 001147   001417 710000 81                 TRA     s:9008
        81 001150   001422 710000 81                 TRA     s:9010
        81 001151   001434 710000 81                 TRA     s:9014
        81 001152   001474 710000 81                 TRA     s:9026
        81 001153   005503 710000 81                 TRA     s:10124
        81 001154   001522 710000 81                 TRA     s:9040
        81 001155   001611 710000 81                 TRA     s:9063
        81 001156   001636 710000 81                 TRA     s:9071
        81 001157   001665 710000 81                 TRA     s:9080
        81 001160   005503 710000 81                 TRA     s:10124
        81 001161   005503 710000 81                 TRA     s:10124
        81 001162   001731 710000 81                 TRA     s:9098
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:120  
        81 001163   002041 710000 81                 TRA     s:9133
        81 001164   002151 710000 81                 TRA     s:9168
        81 001165   002261 710000 81                 TRA     s:9202
        81 001166   002531 710000 81                 TRA     s:9288
        81 001167   002603 710000 81                 TRA     s:9316
        81 001170   002632 710000 81                 TRA     s:9329
        81 001171   002706 710000 81                 TRA     s:9360
        81 001172   002731 710000 81                 TRA     s:9367
        81 001173   002750 710000 81                 TRA     s:9378
        81 001174   003416 710000 81                 TRA     s:9478
        81 001175   003471 710000 81                 TRA     s:9501
        81 001176   001564 710000 81                 TRA     s:9055
        81 001177   004356 710000 81                 TRA     s:9745
        81 001200   004403 710000 81                 TRA     s:9753
        81 001201   005503 710000 81                 TRA     s:10124
        81 001202   005503 710000 81                 TRA     s:10124
        81 001203   004431 710000 81                 TRA     s:9761
        81 001204   005503 710000 81                 TRA     s:10124
        81 001205   004451 710000 81                 TRA     s:9766
        81 001206   004465 710000 81                 TRA     s:9778
        81 001207   004642 710000 81                 TRA     s:9831
        81 001210   004666 710000 81                 TRA     s:9847
        81 001211   004702 710000 81                 TRA     s:9859
        81 001212   004716 710000 81                 TRA     s:9871
        81 001213   004734 710000 81                 TRA     s:9883
        81 001214   004752 710000 81                 TRA     s:9895
        81 001215   005503 710000 81                 TRA     s:10124
        81 001216   005503 710000 81                 TRA     s:10124
        81 001217   005503 710000 81                 TRA     s:10124
        81 001220   005503 710000 81                 TRA     s:10124
        81 001221   005001 710000 81                 TRA     s:9909
        81 001222   001453 710000 81                 TRA     s:9020
        81 001223   005065 710000 81                 TRA     s:9950
        81 001224   005503 710000 81                 TRA     s:10124
        81 001225   005503 710000 81                 TRA     s:10124
        81 001226   003471 710000 81                 TRA     s:9501
        81 001227   001345 710000 81                 TRA     s:8987
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:121  
        81 001230   005051 710000 81                 TRA     s:9928
        81 001231   005251 710000 81                 TRA     s:9992
        81 001232   005263 710000 81                 TRA     s:10003
        81 001233   005307 710000 81                 TRA     s:10025
        81 001234   005275 710000 81                 TRA     s:10014
        81 001235   005340 710000 81                 TRA     s:10045
        81 001236   005371 710000 81                 TRA     s:10065
        81 001237   005422 710000 81                 TRA     s:10085
        81 001240   005453 710000 81                 TRA     s:10105

      653     8919    3           CASE(%LOCK_INVOCKING);

      654     8920    3               IF INVOK

   8920 81 001241   000116 234000 3                  SZN     INVOK
        81 001242   001250 605000 81                 TPL     s:8928

      655     8921    4               THEN DO;

      656     8922    4                   CALL ERROR(%ZIG_SS_TWO_INVOK);

   8922 81 001243   000061 630400 82                 EPPR0   49
        81 001244   000000 631400 82                 EPPR1   0
        81 001245   000000 701000 xent               TSX1    ERROR
        81 001246   000000 011000                    NOP     0

      657     8923        /*E*     ERROR:    ZIG-ZIG_SS_TWO_INVOK-C
      658     8924        MESSAGE: Two invoke PRIVACY LOCKs given and only one allowed.
      659     8925        */
      660     8926    4                   END;

   8926 81 001247   001252 710000 81                 TRA     s:8930

      661     8927    4               ELSE DO;

      662     8928    4                   INVOK = '1'B;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:122  
   8928 81 001250   400000 236003                    LDQ     -131072,DU
        81 001251   000116 756000 3                  STQ     INVOK

      663     8929    4                   END;

      664     8930    3               LOCK_PTR$ = ADDR(CONTROL.INVOKE_PRIVACY_LOCK);

   8930 81 001252   000062 236000 82                 LDQ     50
        81 001253   000013 756000 3                  STQ     LOCK_PTR$
        81 001254   006061 710000 81                 TRA     s:10312

      665     8931    3           CASE (%PRIVACY_KEY);

      666     8932    3               IF PRIV

   8932 81 001255   000117 234000 3                  SZN     PRIV
        81 001256   001264 605000 81                 TPL     s:8940

      667     8933    4               THEN DO;

      668     8934    4                   CALL ERROR(%ZIG_SS_TWO_PRIV);

   8934 81 001257   000064 630400 82                 EPPR0   52
        81 001260   000000 631400 82                 EPPR1   0
        81 001261   000000 701000 xent               TSX1    ERROR
        81 001262   000000 011000                    NOP     0

      669     8935        /*E*     ERROR:    ZIG-ZIG_SS_TWO_PRIV-C
      670     8936        MESSAGE: Two copy PRIVACY LOCKs given and only one allowed.
      671     8937        */
      672     8938    4                   END;

   8938 81 001263   001266 710000 81                 TRA     s:8942

      673     8939    4               ELSE DO;

      674     8940    4                   PRIV = '1'B;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:123  

   8940 81 001264   400000 236003                    LDQ     -131072,DU
        81 001265   000117 756000 3                  STQ     PRIV

      675     8941    4                   END;

      676     8942    3               LOCK_PTR$ = ADDR(CONTROL.COPY_PRIVACY_KEY);

   8942 81 001266   000065 236000 82                 LDQ     53
        81 001267   000013 756000 3                  STQ     LOCK_PTR$
        81 001270   006061 710000 81                 TRA     s:10312

      677     8943    3           CASE (%DIAG_KEY);

      678     8944    3               IF DIAG

   8944 81 001271   000120 234000 3                  SZN     DIAG
        81 001272   001300 605000 81                 TPL     s:8952

      679     8945    4               THEN DO;

      680     8946    4                   CALL ERROR(%ZIG_SS_TWO_DIAG);

   8946 81 001273   000067 630400 82                 EPPR0   55
        81 001274   000000 631400 82                 EPPR1   0
        81 001275   000000 701000 xent               TSX1    ERROR
        81 001276   000000 011000                    NOP     0

      681     8947        /*E*     ERROR:    ZIG-ZIG_SS_TWO_DIAG-C
      682     8948        MESSAGE: Two diagnostic PRIVACY LOCKs given and only one allowed.
      683     8949        */
      684     8950    4                   END;

   8950 81 001277   001302 710000 81                 TRA     s:8954

      685     8951    4               ELSE DO;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:124  
      686     8952    4                   DIAG = '1'B;

   8952 81 001300   400000 236003                    LDQ     -131072,DU
        81 001301   000120 756000 3                  STQ     DIAG

      687     8953    4                   END;

      688     8954    3               LOCK_PTR$ = ADDR(CONTROL.DIAGNOSTIC_PRIVACY_K);

   8954 81 001302   000070 236000 82                 LDQ     56
        81 001303   000013 756000 3                  STQ     LOCK_PTR$
        81 001304   006061 710000 81                 TRA     s:10312

      689     8955    3           CASE (%ALIASES);

      690     8956    3               IF ~ALIAS_SEC AND SUB_LANGUAGE=#COBOL

   8956 81 001305   000000 236000 25                 LDQ     ALIAS_SEC
        81 001306   400000 376003                    ANQ     -131072,DU
        81 001307   400000 676003                    ERQ     -131072,DU
        81 001310   001322 600000 81                 TZE     s:8965
        81 001311   000000 235000 59                 LDA     SUB_LANGUAGE
        81 001312   000001 115007                    CMPA    1,DL
        81 001313   001322 601000 81                 TNZ     s:8965

      691     8957    4               THEN DO;

      692     8958    4                   CALL ERROR(%ZIG_SS_NO_ALIAS_SEC);

   8958 81 001314   000072 630400 82                 EPPR0   58
        81 001315   000000 631400 82                 EPPR1   0
        81 001316   000000 701000 xent               TSX1    ERROR
        81 001317   000000 011000                    NOP     0

      693     8959        /*E*     ERROR:    ZIG-ZIG_SS_NO_ALIAS_SEC-C
      694     8960        MESSAGE: In COBOL, before any aliases can be given an ALIAS SECTION
      695     8961                 must be defined.
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:125  
      696     8962        */
      697     8963    4                   ALIAS_SEC = '1'B;

   8963 81 001320   400000 236003                    LDQ     -131072,DU
        81 001321   000000 756000 25                 STQ     ALIAS_SEC

      698     8964    4                   END;

      699     8965    3               CURRENT_ALIAS.TYPE = 0;

   8965 81 001322   000000 450000 14                 STZ     CURRENT_ALIAS

      700     8966    3               CURRENT_ALIAS.SUBSCHEMA_NAME = ' ';

   8966 81 001323   040000 100400                    MLR     fill='040'O
        81 001324   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 001325   000001 000036 14                 ADSC9   CURRENT_ALIAS+1          cn=0,n=30

      701     8967    3               CURRENT_ALIAS.SCHEMA_NAME = ' ';

   8967 81 001326   040000 100400                    MLR     fill='040'O
        81 001327   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 001330   000010 400036 14                 ADSC9   CURRENT_ALIAS+8          cn=2,n=30

      702     8968    3               CURRENT_ALIAS.QUAL_NAME = ' ';

   8968 81 001331   040000 100400                    MLR     fill='040'O
        81 001332   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 001333   000020 000036 14                 ADSC9   CURRENT_ALIAS+16         cn=0,n=30

      703     8969    3               IF LAST_STATUS > #ALIAS_DEF

   8969 81 001334   000000 236000 15                 LDQ     LAST_STATUS
        81 001335   770000 316003                    CANQ    -4096,DU
        81 001336   001343 600000 81                 TZE     s:8985

      704     8970    4               THEN DO;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:126  

      705     8971    4                   CALL ERROR(#ORDER_SUB_SCHEMA_DDL);

   8971 81 001337   000074 630400 82                 EPPR0   60
        81 001340   000000 631400 82                 EPPR1   0
        81 001341   000000 701000 xent               TSX1    ERROR
        81 001342   000000 011000                    NOP     0

      706     8972        /*E*     ERROR:    ZIG-#ORDER_SUB_SCHEMA_DDL-C
      707     8973        MESSAGE:      The order of the entries in the subschema DDL is as
      708     8974                      follows:
      709     8975                           1 -  subschema entry (contains the privacy locks).
      710     8976                           2 -  alias entry (contains all aliases).
      711     8977                           3 -  area entry (contains all definition of areas).
      712     8978                           4 -  set entry (contains all definition of sets).
      713     8979                           5 -  key entry (contains all definition of keys).
      714     8980                           6 -  record entries (contains all record definitions
      715     8981                                     and all item definitions).
      716     8982                           7 -  END.
      717     8983        */
      718     8984    4                   END;

      719     8985    3               LAST_STATUS = #ALIAS_DEF;

   8985 81 001343   000000 450000 15                 STZ     LAST_STATUS
        81 001344   006061 710000 81                 TRA     s:10312

      720     8986    3           CASE (%ALIASES_FORT);

      721     8987    3               CALL ZIG$HASH_IT(CURRENT_ALIAS.SUBSCHEMA_NAME,#ADD,

   8987 81 001345   000077 630400 82                 EPPR0   63
        81 001346   000012 631400 82                 EPPR1   10
        81 001347   000000 701000 xent               TSX1    ZIG$HASH_IT
        81 001350   000000 011000                    NOP     0

      722     8988    3                  ERROR_STATUS,CURRENT_ALIAS.TYPE,2,26,PTR$,STATUS);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:127  
      723     8989    3               PTR$ -> TRANS_ALIAS.SCHEMA_NAME = CURRENT_ALIAS.SCHEMA_NAME;

   8989 81 001351   000061 470400 3                  LDP0    PTR$
        81 001352   040100 100400                    MLR     fill='040'O
        81 001353   000010 400036 14                 ADSC9   CURRENT_ALIAS+8          cn=2,n=30
        81 001354   000013 000036                    ADSC9   11,,PR0                  cn=0,n=30

      724     8990    3               PTR$ -> TRANS_ALIAS.QUAL_NAME = CURRENT_ALIAS.QUAL_NAME;

   8990 81 001355   000061 470400 3                  LDP0    PTR$
        81 001356   040100 100400                    MLR     fill='040'O
        81 001357   000020 000036 14                 ADSC9   CURRENT_ALIAS+16         cn=0,n=30
        81 001360   000022 400036                    ADSC9   18,,PR0                  cn=2,n=30

      725     8991    3               CURRENT_ALIAS.TYPE = 0;

   8991 81 001361   000000 450000 14                 STZ     CURRENT_ALIAS

      726     8992    3               CURRENT_ALIAS.SUBSCHEMA_NAME = ' ';

   8992 81 001362   040000 100400                    MLR     fill='040'O
        81 001363   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 001364   000001 000036 14                 ADSC9   CURRENT_ALIAS+1          cn=0,n=30

      727     8993    3               CURRENT_ALIAS.SCHEMA_NAME = ' ';

   8993 81 001365   040000 100400                    MLR     fill='040'O
        81 001366   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 001367   000010 400036 14                 ADSC9   CURRENT_ALIAS+8          cn=2,n=30

      728     8994    3               CURRENT_ALIAS.QUAL_NAME = ' ';

   8994 81 001370   040000 100400                    MLR     fill='040'O
        81 001371   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 001372   000020 000036 14                 ADSC9   CURRENT_ALIAS+16         cn=0,n=30

      729     8995    3               IF LAST_STATUS > #ALIAS_DEF
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:128  

   8995 81 001373   000000 236000 15                 LDQ     LAST_STATUS
        81 001374   770000 316003                    CANQ    -4096,DU
        81 001375   006061 600000 81                 TZE     s:10312

      730     8996    4               THEN DO;

      731     8997    4                   CALL ERROR(#ORDER_SUB_SCHEMA_DDL);

   8997 81 001376   000074 630400 82                 EPPR0   60
        81 001377   000000 631400 82                 EPPR1   0
        81 001400   000000 701000 xent               TSX1    ERROR
        81 001401   000000 011000                    NOP     0

      732     8998    4                   END;

   8998 81 001402   006061 710000 81                 TRA     s:10312

      733     8999    3           CASE (%AREA_ALIAS);

      734     9000    3               CURRENT_ALIAS.TYPE = #IN_AREA_PROCESSING;

   9000 81 001403   000001 235007                    LDA     1,DL
        81 001404   000000 755000 14                 STA     CURRENT_ALIAS
        81 001405   006061 710000 81                 TRA     s:10312

      735     9001    3           CASE (%SET_ALIAS);

      736     9002    3               CURRENT_ALIAS.TYPE = #IN_SET_PROCESSING;

   9002 81 001406   000002 235007                    LDA     2,DL
        81 001407   000000 755000 14                 STA     CURRENT_ALIAS
        81 001410   006061 710000 81                 TRA     s:10312

      737     9003    3           CASE (%KEY_ALIAS);

      738     9004    3               CURRENT_ALIAS.TYPE = #IN_KEY_PROCESSING;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:129  

   9004 81 001411   000003 235007                    LDA     3,DL
        81 001412   000000 755000 14                 STA     CURRENT_ALIAS
        81 001413   006061 710000 81                 TRA     s:10312

      739     9005    3           CASE (%RECORD_ALIAS);

      740     9006    3               CURRENT_ALIAS.TYPE = #IN_RECORD_PROCESSING;

   9006 81 001414   000004 235007                    LDA     4,DL
        81 001415   000000 755000 14                 STA     CURRENT_ALIAS
        81 001416   006061 710000 81                 TRA     s:10312

      741     9007    3           CASE (%ITEM_ALIAS);

      742     9008    3               CURRENT_ALIAS.TYPE=6;

   9008 81 001417   000006 235007                    LDA     6,DL
        81 001420   000000 755000 14                 STA     CURRENT_ALIAS
        81 001421   006061 710000 81                 TRA     s:10312

      743     9009    3           CASE (%SCHEMA_NAME_ALIAS);

      744     9010    3               CALL GET_WORD;

   9010 81 001422   000003 701000 81                 TSX1    GET_WORD
        81 001423   000000 011000                    NOP     0

      745     9011    3               CALL CHANGE_TO_STR(WORD1);

   9011 81 001424   000022 236000 82                 LDQ     18
        81 001425   200011 756100                    STQ     START+3,,AUTO
        81 001426   000023 701000 81                 TSX1    CHANGE_TO_STR
        81 001427   000000 011000                    NOP     0

      746     9012    3               CURRENT_ALIAS.SCHEMA_NAME = WORD1;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:130  
   9012 81 001430   040000 100400                    MLR     fill='040'O
        81 001431   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 001432   000010 400036 14                 ADSC9   CURRENT_ALIAS+8          cn=2,n=30
        81 001433   006061 710000 81                 TRA     s:10312

      747     9013    3           CASE (%SCHEMA_QUAL_ALIAS);

      748     9014    3               CALL GET_WORD;

   9014 81 001434   000003 701000 81                 TSX1    GET_WORD
        81 001435   000000 011000                    NOP     0

      749     9015    3               CALL CHANGE_TO_STR(WORD1);

   9015 81 001436   000022 236000 82                 LDQ     18
        81 001437   200011 756100                    STQ     START+3,,AUTO
        81 001440   000023 701000 81                 TSX1    CHANGE_TO_STR
        81 001441   000000 011000                    NOP     0

      750     9016    3               CURRENT_ALIAS.QUAL_NAME = CURRENT_ALIAS.SCHEMA_NAME;

   9016 81 001442   040000 100400                    MLR     fill='040'O
        81 001443   000010 400036 14                 ADSC9   CURRENT_ALIAS+8          cn=2,n=30
        81 001444   000020 000036 14                 ADSC9   CURRENT_ALIAS+16         cn=0,n=30

      751     9017    3               CURRENT_ALIAS.SCHEMA_NAME = WORD1;

   9017 81 001445   040000 100400                    MLR     fill='040'O
        81 001446   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 001447   000010 400036 14                 ADSC9   CURRENT_ALIAS+8          cn=2,n=30

      752     9018    3               CURRENT_ALIAS.TYPE = #IN_ITEM_PROCESSING;

   9018 81 001450   000005 235007                    LDA     5,DL
        81 001451   000000 755000 14                 STA     CURRENT_ALIAS
        81 001452   006061 710000 81                 TRA     s:10312

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:131  
      753     9019    3           CASE (%SUBSCHEMA_QUAL);

      754     9020    3               CALL GET_WORD;

   9020 81 001453   000003 701000 81                 TSX1    GET_WORD
        81 001454   000000 011000                    NOP     0

      755     9021    3               IF PTR$ -> TRANS_ALIAS.QUAL_NAME ~= ' '

   9021 81 001455   000061 470400 3                  LDP0    PTR$
        81 001456   040000 106500                    CMPC    fill='040'O
        81 001457   000022 400036                    ADSC9   18,,PR0                  cn=2,n=30
        81 001460   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 001461   001463 600000 81                 TZE     s:9023

      756     9022    3               THEN RETURN;

   9022 81 001462   000000 702200 xent               TSX2  ! X66_ARET

      757     9023    3               PTR$ -> HASH_STRUCT.ALIAS_TYPE = 5;

   9023 81 001463   000000 236100                    LDQ     0,,PR0
        81 001464   000107 376000 82                 ANQ     71
        81 001465   500000 276003                    ORQ     -98304,DU
        81 001466   000000 756100                    STQ     0,,PR0

      758     9024    3               PTR$ -> TRANS_ALIAS.QUAL_NAME = WORD1;

   9024 81 001467   000061 470400 3                  LDP0    PTR$
        81 001470   040100 100400                    MLR     fill='040'O
        81 001471   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 001472   000022 400036                    ADSC9   18,,PR0                  cn=2,n=30
        81 001473   006061 710000 81                 TRA     s:10312

      759     9025    3           CASE (%ALIAS_SS_NAME);

      760     9026    3               CALL GET_WORD;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:132  

   9026 81 001474   000003 701000 81                 TSX1    GET_WORD
        81 001475   000000 011000                    NOP     0

      761     9027    3               IF SUB_LANGUAGE = #COBOL

   9027 81 001476   000000 235000 59                 LDA     SUB_LANGUAGE
        81 001477   000001 115007                    CMPA    1,DL
        81 001500   001516 601000 81                 TNZ     s:9035

      762     9028    4               THEN DO;

      763     9029    4                   CALL ZIG$HASH_IT(WORD1,#ADD,ERROR_STATUS,CURRENT_ALIAS.TYPE,

   9029 81 001501   000110 630400 82                 EPPR0   72
        81 001502   000012 631400 82                 EPPR1   10
        81 001503   000000 701000 xent               TSX1    ZIG$HASH_IT
        81 001504   000000 011000                    NOP     0

      764     9030    4                      2,26,PTR$,STATUS);
      765     9031    4                   PTR$ -> TRANS_ALIAS.SCHEMA_NAME = CURRENT_ALIAS.SCHEMA_NAME;

   9031 81 001505   000061 470400 3                  LDP0    PTR$
        81 001506   040100 100400                    MLR     fill='040'O
        81 001507   000010 400036 14                 ADSC9   CURRENT_ALIAS+8          cn=2,n=30
        81 001510   000013 000036                    ADSC9   11,,PR0                  cn=0,n=30

      766     9032    4                   PTR$ -> TRANS_ALIAS.QUAL_NAME = CURRENT_ALIAS.QUAL_NAME;

   9032 81 001511   000061 470400 3                  LDP0    PTR$
        81 001512   040100 100400                    MLR     fill='040'O
        81 001513   000020 000036 14                 ADSC9   CURRENT_ALIAS+16         cn=0,n=30
        81 001514   000022 400036                    ADSC9   18,,PR0                  cn=2,n=30

      767     9033    4                   END;

   9033 81 001515   006061 710000 81                 TRA     s:10312
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:133  

      768     9034    4               ELSE DO;

      769     9035    4                   CURRENT_ALIAS.SUBSCHEMA_NAME = WORD1;

   9035 81 001516   040000 100400                    MLR     fill='040'O
        81 001517   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 001520   000001 000036 14                 ADSC9   CURRENT_ALIAS+1          cn=0,n=30

      770     9036    4                   END;

   9036 81 001521   006061 710000 81                 TRA     s:10312

      771     9037    3           CASE (%NUMBER_OCCURS);

      772     9038         /* NOT USED */
      773     9039    3           CASE (%DBKEY);

      774     9040    3               DESC_TYPE_9.LENGTH = 4;

   9040 81 001522   000004 235007                    LDA     4,DL
        81 001523   000016 755000 64                 STA     DESC_TYPE_9+14

      775     9041    3               DESC_TYPE_9.BUWA = '1'B;

   9041 81 001524   004000 236007                    LDQ     2048,DL
        81 001525   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      776     9042    3               DESC_TYPE_9.F_DBK = '1'B;

   9042 81 001526   000400 236007                    LDQ     256,DL
        81 001527   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      777     9043    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9043 81 001530   000400 236003                    LDQ     256,DU
        81 001531   000021 256000 64                 ORSQ    DESC_TYPE_9+17
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:134  

      778     9044    3               DESC_TYPE_9.NUMERIC = '1'B;

   9044 81 001532   000001 236003                    LDQ     1,DU
        81 001533   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      779     9045    3               DESC_TYPE_9.DB_KEY = '1'B;

   9045 81 001534   000004 236007                    LDQ     4,DL
        81 001535   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      780     9046    3               DESC_TYPE_9.DISPLAY = '0'B;

   9046 81 001536   000052 236000 82                 LDQ     42
        81 001537   000021 356000 64                 ANSQ    DESC_TYPE_9+17

      781     9047    3               DESC_TYPE_9.SRF_DBK = '1'B;

   9047 81 001540   400000 236007                    LDQ     -131072,DL
        81 001541   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      782     9048    3               DESC_TYPE_9.INTEGER_TYPE = '1'B;

   9048 81 001542   000002 236003                    LDQ     2,DU
        81 001543   000022 256000 64                 ORSQ    DESC_TYPE_9+18

      783     9049    3               CALL ALLOC(8,#WORD,START);

   9049 81 001544   200006 631500                    EPPR1   START,,AUTO
        81 001545   200013 451500                    STP1    I+1,,AUTO
        81 001546   000121 236000 82                 LDQ     81
        81 001547   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 001550   200011 756100                    STQ     START+3,,AUTO
        81 001551   000611 701000 81                 TSX1    ALLOC
        81 001552   000000 011000                    NOP     0

      784     9050    3               DESC_TYPE_9.OFFSET = START*4;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:135  

   9050 81 001553   200006 235100                    LDA     START,,AUTO
        81 001554   000002 735000                    ALS     2
        81 001555   000024 755000 64                 STA     DESC_TYPE_9+20

      785     9051    3               LHOLD = 4;

   9051 81 001556   000004 236007                    LDQ     4,DL
        81 001557   000000 756000 4                  STQ     LHOLD

      786     9052    3               LTDP_HOLD = 11;

   9052 81 001560   000013 235007                    LDA     11,DL
        81 001561   000000 755000 5                  STA     LTDP_HOLD

      787     9053    3               RTDP_HOLD = 0;

   9053 81 001562   000000 450000 6                  STZ     RTDP_HOLD
        81 001563   006061 710000 81                 TRA     s:10312

      788     9054    3           CASE (%FLOAT_DOUBLE);

      789     9055    3               DESC_TYPE_9.LENGTH = 8;

   9055 81 001564   000010 235007                    LDA     8,DL
        81 001565   000016 755000 64                 STA     DESC_TYPE_9+14

      790     9056    3               DESC_TYPE_9.BUWA = '1'B;

   9056 81 001566   004000 236007                    LDQ     2048,DL
        81 001567   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      791     9057    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9057 81 001570   000400 236003                    LDQ     256,DU
        81 001571   000021 256000 64                 ORSQ    DESC_TYPE_9+17

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:136  
      792     9058    3               DESC_TYPE_9.NUMERIC = '1'B;

   9058 81 001572   000001 236003                    LDQ     1,DU
        81 001573   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      793     9059    3               DESC_TYPE_9.FLOAT_DOUBLE = '1'B;

   9059 81 001574   000100 236007                    LDQ     64,DL
        81 001575   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      794     9060    3               CALL ALLOC(16,#DOUBLE_WORD,START);

   9060 81 001576   200006 631500                    EPPR1   START,,AUTO
        81 001577   200013 451500                    STP1    I+1,,AUTO
        81 001600   000123 236000 82                 LDQ     83
        81 001601   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 001602   200011 756100                    STQ     START+3,,AUTO
        81 001603   000611 701000 81                 TSX1    ALLOC
        81 001604   000000 011000                    NOP     0

      795     9061    3               DESC_TYPE_9.OFFSET = START * 8;

   9061 81 001605   200006 235100                    LDA     START,,AUTO
        81 001606   000003 735000                    ALS     3
        81 001607   000024 755000 64                 STA     DESC_TYPE_9+20
        81 001610   006061 710000 81                 TRA     s:10312

      796     9062    3           CASE (%FLOAT);

      797     9063    3               DESC_TYPE_9.LENGTH = 4;

   9063 81 001611   000004 235007                    LDA     4,DL
        81 001612   000016 755000 64                 STA     DESC_TYPE_9+14

      798     9064    3               DESC_TYPE_9.BUWA = '1'B;

   9064 81 001613   004000 236007                    LDQ     2048,DL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:137  
        81 001614   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      799     9065    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9065 81 001615   000400 236003                    LDQ     256,DU
        81 001616   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      800     9066    3               DESC_TYPE_9.NUMERIC = '1'B;

   9066 81 001617   000001 236003                    LDQ     1,DU
        81 001620   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      801     9067    3               DESC_TYPE_9.FLOAT_SINGLE = '1'B;

   9067 81 001621   000200 236007                    LDQ     128,DL
        81 001622   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      802     9068    3               CALL ALLOC(8,#WORD,START);

   9068 81 001623   200006 631500                    EPPR1   START,,AUTO
        81 001624   200013 451500                    STP1    I+1,,AUTO
        81 001625   000121 236000 82                 LDQ     81
        81 001626   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 001627   200011 756100                    STQ     START+3,,AUTO
        81 001630   000611 701000 81                 TSX1    ALLOC
        81 001631   000000 011000                    NOP     0

      803     9069    3               DESC_TYPE_9.OFFSET = START * 4;

   9069 81 001632   200006 235100                    LDA     START,,AUTO
        81 001633   000002 735000                    ALS     2
        81 001634   000024 755000 64                 STA     DESC_TYPE_9+20
        81 001635   006061 710000 81                 TRA     s:10312

      804     9070    3           CASE (%INTEGER);

      805     9071    3               DESC_TYPE_9.LENGTH = 4;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:138  

   9071 81 001636   000004 235007                    LDA     4,DL
        81 001637   000016 755000 64                 STA     DESC_TYPE_9+14

      806     9072    3               DESC_TYPE_9.BUWA = '1'B;

   9072 81 001640   004000 236007                    LDQ     2048,DL
        81 001641   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      807     9073    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9073 81 001642   000400 236003                    LDQ     256,DU
        81 001643   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      808     9074    3               DESC_TYPE_9.NUMERIC = '1'B;

   9074 81 001644   000001 236003                    LDQ     1,DU
        81 001645   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      809     9075    3               DESC_TYPE_9.DB_KEY = '1'B;

   9075 81 001646   000004 236007                    LDQ     4,DL
        81 001647   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      810     9076    3               DESC_TYPE_9.INTEGER_TYPE = '1'B;

   9076 81 001650   000002 236003                    LDQ     2,DU
        81 001651   000022 256000 64                 ORSQ    DESC_TYPE_9+18

      811     9077    3               CALL ALLOC(8,#WORD,START);

   9077 81 001652   200006 631500                    EPPR1   START,,AUTO
        81 001653   200013 451500                    STP1    I+1,,AUTO
        81 001654   000121 236000 82                 LDQ     81
        81 001655   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 001656   200011 756100                    STQ     START+3,,AUTO
        81 001657   000611 701000 81                 TSX1    ALLOC
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:139  
        81 001660   000000 011000                    NOP     0

      812     9078    3               DESC_TYPE_9.OFFSET = START * 4;

   9078 81 001661   200006 235100                    LDA     START,,AUTO
        81 001662   000002 735000                    ALS     2
        81 001663   000024 755000 64                 STA     DESC_TYPE_9+20
        81 001664   006061 710000 81                 TRA     s:10312

      813     9079    3           CASE (%CHARACTER);

      814     9080    3               IF SUB_LANGUAGE ~= #FORTRAN

   9080 81 001665   000000 235000 59                 LDA     SUB_LANGUAGE
        81 001666   000002 115007                    CMPA    2,DL
        81 001667   001677 600000 81                 TZE     s:9086

      815     9081    3               THEN CALL GET_NUM(1,4096);

   9081 81 001670   000056 236000 82                 LDQ     46
        81 001671   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 001672   000057 236000 82                 LDQ     47
        81 001673   200011 756100                    STQ     START+3,,AUTO
        81 001674   000077 701000 81                 TSX1    GET_NUM
        81 001675   000000 011000                    NOP     0
        81 001676   001701 710000 81                 TRA     s:9087

      816     9082        /*
      817     9083              FORTRANs number of characters in the string is in
      818     9084            SAVE_NUM.
      819     9085        */
      820     9086    3               ELSE NUM = SAVE_NUM;

   9086 81 001677   000067 235000 3                  LDA     SAVE_NUM
        81 001700   000011 755000 3                  STA     NUM

      821     9087    3               DESC_TYPE_9.LENGTH = NUM;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:140  

   9087 81 001701   000011 235000 3                  LDA     NUM
        81 001702   000016 755000 64                 STA     DESC_TYPE_9+14

      822     9088    3               DESC_TYPE_9.LTDP = NUM;

   9088 81 001703   000017 755000 64                 STA     DESC_TYPE_9+15

      823     9089    3               DESC_TYPE_9.BUWA = '1'B;

   9089 81 001704   004000 236007                    LDQ     2048,DL
        81 001705   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      824     9090    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9090 81 001706   000400 236003                    LDQ     256,DU
        81 001707   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      825     9091    3               DESC_TYPE_9.ALPHABETIC = '1'B;

   9091 81 001710   040000 236007                    LDQ     16384,DL
        81 001711   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      826     9092    3               DESC_TYPE_9.DISPLAY = '1'B;

   9092 81 001712   000400 236007                    LDQ     256,DL
        81 001713   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      827     9093    3               CALL ALLOC(NUM*2,#BYTE,START);

   9093 81 001714   000001 735000                    ALS     1
        81 001715   200030 755100                    STA     COUNT1+10,,AUTO
        81 001716   200006 630500                    EPPR0   START,,AUTO
        81 001717   200013 450500                    STP0    I+1,,AUTO
        81 001720   000103 236000 82                 LDQ     67
        81 001721   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 001722   200030 631500                    EPPR1   COUNT1+10,,AUTO
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:141  
        81 001723   200011 451500                    STP1    START+3,,AUTO
        81 001724   000611 701000 81                 TSX1    ALLOC
        81 001725   000000 011000                    NOP     0

      828     9094    3               DESC_TYPE_9.OFFSET = START;

   9094 81 001726   200006 235100                    LDA     START,,AUTO
        81 001727   000024 755000 64                 STA     DESC_TYPE_9+20
        81 001730   006061 710000 81                 TRA     s:10312

      829     9095    3           CASE (%VARYING);

      830     9096         /* NOT USED */
      831     9097    3           CASE (%ENTRY_KEY_NAME);

      832     9098    3               IF ~KEY_SEC AND SUB_LANGUAGE=#COBOL

   9098 81 001731   000000 236000 29                 LDQ     KEY_SEC
        81 001732   400000 376003                    ANQ     -131072,DU
        81 001733   400000 676003                    ERQ     -131072,DU
        81 001734   001746 600000 81                 TZE     s:9107
        81 001735   000000 235000 59                 LDA     SUB_LANGUAGE
        81 001736   000001 115007                    CMPA    1,DL
        81 001737   001746 601000 81                 TNZ     s:9107

      833     9099    4               THEN DO;

      834     9100    4                   CALL ERROR(%ZIG_SS_NO_KEY_SEC);

   9100 81 001740   000125 630400 82                 EPPR0   85
        81 001741   000000 631400 82                 EPPR1   0
        81 001742   000000 701000 xent               TSX1    ERROR
        81 001743   000000 011000                    NOP     0

      835     9101        /*E*     ERROR:    ZIG-ZIG_SS_NO_KEY_SEC-C
      836     9102        MESSAGE: In COBOL, before any keys can be given a KEY SECTION
      837     9103                 must be defined.
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:142  
      838     9104        */
      839     9105    4                   KEY_SEC = '1'B;

   9105 81 001744   400000 236003                    LDQ     -131072,DU
        81 001745   000000 756000 29                 STQ     KEY_SEC

      840     9106    4                   END;

      841     9107    3               CALL GET_WORD;

   9107 81 001746   000003 701000 81                 TSX1    GET_WORD
        81 001747   000000 011000                    NOP     0

      842     9108    3               CALL INIT_TYPE_9;

   9108 81 001750   000151 701000 81                 TSX1    INIT_TYPE_9
        81 001751   000000 011000                    NOP     0

      843     9109        /*            DESC_TYPE_9.BUWA = '0'B;      */
      844     9110    3               DESC_TYPE_9.LEVEL = 77;

   9110 81 001752   000115 235007                    LDA     77,DL
        81 001753   000012 755000 64                 STA     DESC_TYPE_9+10

      845     9111    3               DESC_TYPE_9.DATA_ITEM = '1'B;

   9111 81 001754   004000 236003                    LDQ     2048,DU
        81 001755   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      846     9112    3               DESC_TYPE_9.KEY_NM = '1'B;

   9112 81 001756   002000 236007                    LDQ     1024,DL
        81 001757   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      847     9113    3               DESC_TYPE_9.SRF_DBK = '1'B;

   9113 81 001760   400000 236007                    LDQ     -131072,DL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:143  
        81 001761   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      848     9114    3               DESC_TYPE_9.OFFSET = INTERNAL_ID;

   9114 81 001762   000000 235000 11                 LDA     INTERNAL_ID
        81 001763   000024 755000 64                 STA     DESC_TYPE_9+20

      849     9115    3               DESC_TYPE_9.NAME = WORD1;

   9115 81 001764   040000 100400                    MLR     fill='040'O
        81 001765   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 001766   000030 000036 64                 ADSC9   DESC_TYPE_9+24           cn=0,n=30

      850     9116    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;

   9116 81 001767   000000 236000 7                  LDQ     FIELD1
        81 001770   000033 772000                    QRL     27
        81 001771   000027 756000 64                 STQ     DESC_TYPE_9+23

      851     9117    3               DESC_TYPE_9.DATA_ITEM = '1'B;

   9117 81 001772   004000 236003                    LDQ     2048,DU
        81 001773   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      852     9118    3               INTERNAL_ID = INTERNAL_ID + 1;

   9118 81 001774   000001 035007                    ADLA    1,DL
        81 001775   000000 755000 11                 STA     INTERNAL_ID

      853     9119    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);

   9119 81 001776   000126 630400 82                 EPPR0   86
        81 001777   000050 631400 82                 EPPR1   40
        81 002000   000000 701000 xent               TSX1    WRITSF
        81 002001   000000 011000                    NOP     0

      854     9120    3               CURRENT_RECORD = CURRENT_RECORD + 1;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:144  

   9120 81 002002   000000 235000 63                 LDA     CURRENT_RECORD
        81 002003   000001 035007                    ADLA    1,DL
        81 002004   000000 755000 63                 STA     CURRENT_RECORD

      855     9121    3               CONTROL.NUM_SETS = CONTROL.NUM_SETS + 1;

   9121 81 002005   000013 236000 66                 LDQ     CONTROL+11
        81 002006   000001 036007                    ADLQ    1,DL
        81 002007   000013 756000 66                 STQ     CONTROL+11

      856     9122    3               IF LAST_STATUS > #KEY_DEF

   9122 81 002010   000000 236000 15                 LDQ     LAST_STATUS
        81 002011   770000 376003                    ANQ     -4096,DU
        81 002012   040000 116003                    CMPQ    16384,DU
        81 002013   002020 602000 81                 TNC     s:9126

      857     9123    4               THEN DO;

      858     9124    4                   CALL ERROR(#ORDER_SUB_SCHEMA_DDL);

   9124 81 002014   000074 630400 82                 EPPR0   60
        81 002015   000000 631400 82                 EPPR1   0
        81 002016   000000 701000 xent               TSX1    ERROR
        81 002017   000000 011000                    NOP     0

      859     9125    4                   END;

      860     9126    3               LAST_STATUS = #KEY_DEF;

   9126 81 002020   030000 236003                    LDQ     12288,DU
        81 002021   000000 756000 15                 STQ     LAST_STATUS

      861     9127    3               TYPE_350.REF_LINE = CURRENT_RECORD - 1;

   9127 81 002022   000000 235000 63                 LDA     CURRENT_RECORD
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:145  
        81 002023   000001 135007                    SBLA    1,DL
        81 002024   000001 755000 72                 STA     TYPE_350+1

      862     9128    3               TYPE_350.SOUR_LINE = LINE_COUNT - 1;

   9128 81 002025   000000 235000 10                 LDA     LINE_COUNT
        81 002026   000001 135007                    SBLA    1,DL
        81 002027   000002 755000 72                 STA     TYPE_350+2

      863     9129    3               TYPE_350.ID_NUM = DESC_TYPE_9.OFFSET;

   9129 81 002030   000024 235000 64                 LDA     DESC_TYPE_9+20
        81 002031   000023 755000 72                 STA     TYPE_350+19

      864     9130    3               CALL CHECK_ALIAS_DUPS;

   9130 81 002032   000176 701000 81                 TSX1    CHECK_ALIAS_DUPS
        81 002033   000000 011000                    NOP     0

      865     9131    3               CALL STORE(TYPE_350);

   9131 81 002034   000130 236000 82                 LDQ     88
        81 002035   200011 756100                    STQ     START+3,,AUTO
        81 002036   000572 701000 81                 TSX1    STORE
        81 002037   000000 011000                    NOP     0
        81 002040   006061 710000 81                 TRA     s:10312

      866     9132    3           CASE (%ENTRY_SET_NAME);

      867     9133    3               IF ~SET_SEC AND SUB_LANGUAGE=#COBOL

   9133 81 002041   000000 236000 28                 LDQ     SET_SEC
        81 002042   400000 376003                    ANQ     -131072,DU
        81 002043   400000 676003                    ERQ     -131072,DU
        81 002044   002056 600000 81                 TZE     s:9142
        81 002045   000000 235000 59                 LDA     SUB_LANGUAGE
        81 002046   000001 115007                    CMPA    1,DL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:146  
        81 002047   002056 601000 81                 TNZ     s:9142

      868     9134    4               THEN DO;

      869     9135    4                   CALL ERROR(%ZIG_SS_NO_SET_SEC);

   9135 81 002050   000132 630400 82                 EPPR0   90
        81 002051   000000 631400 82                 EPPR1   0
        81 002052   000000 701000 xent               TSX1    ERROR
        81 002053   000000 011000                    NOP     0

      870     9136        /*E*     ERROR:    ZIG-ZIG_SS_NO_SET_SEC-C
      871     9137        MESSAGE: In COBOL, before any sets can be given a SET SECTION
      872     9138                 must be defined.
      873     9139        */
      874     9140    4                   SET_SEC = '1'B;

   9140 81 002054   400000 236003                    LDQ     -131072,DU
        81 002055   000000 756000 28                 STQ     SET_SEC

      875     9141    4                   END;

      876     9142    3               CALL GET_WORD;

   9142 81 002056   000003 701000 81                 TSX1    GET_WORD
        81 002057   000000 011000                    NOP     0

      877     9143    3               CALL INIT_TYPE_9;

   9143 81 002060   000151 701000 81                 TSX1    INIT_TYPE_9
        81 002061   000000 011000                    NOP     0

      878     9144        /*            DESC_TYPE_9.BUWA = '0'B;      */
      879     9145    3               DESC_TYPE_9.LEVEL = 77;

   9145 81 002062   000115 235007                    LDA     77,DL
        81 002063   000012 755000 64                 STA     DESC_TYPE_9+10
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:147  

      880     9146    3               DESC_TYPE_9.DATA_ITEM = '1'B;

   9146 81 002064   004000 236003                    LDQ     2048,DU
        81 002065   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      881     9147    3               DESC_TYPE_9.SET_NM = '1'B;

   9147 81 002066   100000 236007                    LDQ     32768,DL
        81 002067   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      882     9148    3               DESC_TYPE_9.SRF_DBK = '1'B;

   9148 81 002070   400000 236007                    LDQ     -131072,DL
        81 002071   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      883     9149    3               DESC_TYPE_9.OFFSET = INTERNAL_ID;

   9149 81 002072   000000 235000 11                 LDA     INTERNAL_ID
        81 002073   000024 755000 64                 STA     DESC_TYPE_9+20

      884     9150    3               DESC_TYPE_9.NAME = WORD1;

   9150 81 002074   040000 100400                    MLR     fill='040'O
        81 002075   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 002076   000030 000036 64                 ADSC9   DESC_TYPE_9+24           cn=0,n=30

      885     9151    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;

   9151 81 002077   000000 236000 7                  LDQ     FIELD1
        81 002100   000033 772000                    QRL     27
        81 002101   000027 756000 64                 STQ     DESC_TYPE_9+23

      886     9152    3               DESC_TYPE_9.DATA_ITEM = '1'B;

   9152 81 002102   004000 236003                    LDQ     2048,DU
        81 002103   000021 256000 64                 ORSQ    DESC_TYPE_9+17
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:148  

      887     9153    3               INTERNAL_ID = INTERNAL_ID + 1;

   9153 81 002104   000001 035007                    ADLA    1,DL
        81 002105   000000 755000 11                 STA     INTERNAL_ID

      888     9154    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);

   9154 81 002106   000126 630400 82                 EPPR0   86
        81 002107   000050 631400 82                 EPPR1   40
        81 002110   000000 701000 xent               TSX1    WRITSF
        81 002111   000000 011000                    NOP     0

      889     9155    3               CURRENT_RECORD = CURRENT_RECORD + 1;

   9155 81 002112   000000 235000 63                 LDA     CURRENT_RECORD
        81 002113   000001 035007                    ADLA    1,DL
        81 002114   000000 755000 63                 STA     CURRENT_RECORD

      890     9156    3               CONTROL.NUM_SETS = CONTROL.NUM_SETS + 1;

   9156 81 002115   000013 236000 66                 LDQ     CONTROL+11
        81 002116   000001 036007                    ADLQ    1,DL
        81 002117   000013 756000 66                 STQ     CONTROL+11

      891     9157    3               IF LAST_STATUS > #SET_DEF

   9157 81 002120   000000 236000 15                 LDQ     LAST_STATUS
        81 002121   770000 376003                    ANQ     -4096,DU
        81 002122   030000 116003                    CMPQ    12288,DU
        81 002123   002130 602000 81                 TNC     s:9161

      892     9158    4               THEN DO;

      893     9159    4                   CALL ERROR(#ORDER_SUB_SCHEMA_DDL);

   9159 81 002124   000074 630400 82                 EPPR0   60
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:149  
        81 002125   000000 631400 82                 EPPR1   0
        81 002126   000000 701000 xent               TSX1    ERROR
        81 002127   000000 011000                    NOP     0

      894     9160    4                   END;

      895     9161    3               LAST_STATUS = #SET_DEF;

   9161 81 002130   020000 236003                    LDQ     8192,DU
        81 002131   000000 756000 15                 STQ     LAST_STATUS

      896     9162    3               TYPE_300.REF_LINE = CURRENT_RECORD - 1;

   9162 81 002132   000000 235000 63                 LDA     CURRENT_RECORD
        81 002133   000001 135007                    SBLA    1,DL
        81 002134   000001 755000 71                 STA     TYPE_300+1

      897     9163    3               TYPE_300.SOUR_LINE = LINE_COUNT - 1;

   9163 81 002135   000000 235000 10                 LDA     LINE_COUNT
        81 002136   000001 135007                    SBLA    1,DL
        81 002137   000002 755000 71                 STA     TYPE_300+2

      898     9164    3               TYPE_300.ID_NUM = DESC_TYPE_9.OFFSET;

   9164 81 002140   000024 235000 64                 LDA     DESC_TYPE_9+20
        81 002141   000023 755000 71                 STA     TYPE_300+19

      899     9165    3               CALL CHECK_ALIAS_DUPS;

   9165 81 002142   000176 701000 81                 TSX1    CHECK_ALIAS_DUPS
        81 002143   000000 011000                    NOP     0

      900     9166    3               CALL STORE(TYPE_300);

   9166 81 002144   000133 236000 82                 LDQ     91
        81 002145   200011 756100                    STQ     START+3,,AUTO
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:150  
        81 002146   000572 701000 81                 TSX1    STORE
        81 002147   000000 011000                    NOP     0
        81 002150   006061 710000 81                 TRA     s:10312

      901     9167    3           CASE (%ENTRY_AREA_NAME);

      902     9168    3               IF ~REALM_SEC AND SUB_LANGUAGE = #COBOL

   9168 81 002151   000000 236000 27                 LDQ     REALM_SEC
        81 002152   400000 376003                    ANQ     -131072,DU
        81 002153   400000 676003                    ERQ     -131072,DU
        81 002154   002166 600000 81                 TZE     s:9177
        81 002155   000000 235000 59                 LDA     SUB_LANGUAGE
        81 002156   000001 115007                    CMPA    1,DL
        81 002157   002166 601000 81                 TNZ     s:9177

      903     9169    4               THEN DO;

      904     9170    4                   CALL ERROR(%ZIG_SS_NO_REALM_SEC);

   9170 81 002160   000135 630400 82                 EPPR0   93
        81 002161   000000 631400 82                 EPPR1   0
        81 002162   000000 701000 xent               TSX1    ERROR
        81 002163   000000 011000                    NOP     0

      905     9171        /*E*  ERROR:   ZIG-ZIG_SS_NO_REALM_SEC-C
      906     9172              MESSAGE: In COBOL before any realms can be given a REALM
      907     9173                       SECTION must be defined.
      908     9174        */
      909     9175    4                   REALM_SEC = '1'B;

   9175 81 002164   400000 236003                    LDQ     -131072,DU
        81 002165   000000 756000 27                 STQ     REALM_SEC

      910     9176    4                   END;

      911     9177    3               CALL GET_WORD;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:151  

   9177 81 002166   000003 701000 81                 TSX1    GET_WORD
        81 002167   000000 011000                    NOP     0

      912     9178    3               CALL INIT_TYPE_9;

   9178 81 002170   000151 701000 81                 TSX1    INIT_TYPE_9
        81 002171   000000 011000                    NOP     0

      913     9179    3               DESC_TYPE_9.LEVEL = 77;

   9179 81 002172   000115 235007                    LDA     77,DL
        81 002173   000012 755000 64                 STA     DESC_TYPE_9+10

      914     9180    3               DESC_TYPE_9.DATA_ITEM = '1'B;

   9180 81 002174   004000 236003                    LDQ     2048,DU
        81 002175   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      915     9181    3               DESC_TYPE_9.RLM_NM = '1'B;

   9181 81 002176   200000 236007                    LDQ     65536,DL
        81 002177   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      916     9182    3               DESC_TYPE_9.SRF_DBK = '1'B;

   9182 81 002200   400000 236007                    LDQ     -131072,DL
        81 002201   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      917     9183    3               DESC_TYPE_9.OFFSET = INTERNAL_ID;

   9183 81 002202   000000 235000 11                 LDA     INTERNAL_ID
        81 002203   000024 755000 64                 STA     DESC_TYPE_9+20

      918     9184    3               DESC_TYPE_9.NAME = WORD1;

   9184 81 002204   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:152  
        81 002205   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 002206   000030 000036 64                 ADSC9   DESC_TYPE_9+24           cn=0,n=30

      919     9185    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;

   9185 81 002207   000000 236000 7                  LDQ     FIELD1
        81 002210   000033 772000                    QRL     27
        81 002211   000027 756000 64                 STQ     DESC_TYPE_9+23

      920     9186    3               DESC_TYPE_9.DATA_ITEM = '1'B;

   9186 81 002212   004000 236003                    LDQ     2048,DU
        81 002213   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      921     9187    3               INTERNAL_ID = INTERNAL_ID + 1;

   9187 81 002214   000001 035007                    ADLA    1,DL
        81 002215   000000 755000 11                 STA     INTERNAL_ID

      922     9188    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);

   9188 81 002216   000126 630400 82                 EPPR0   86
        81 002217   000050 631400 82                 EPPR1   40
        81 002220   000000 701000 xent               TSX1    WRITSF
        81 002221   000000 011000                    NOP     0

      923     9189    3               CURRENT_RECORD = CURRENT_RECORD + 1;

   9189 81 002222   000000 235000 63                 LDA     CURRENT_RECORD
        81 002223   000001 035007                    ADLA    1,DL
        81 002224   000000 755000 63                 STA     CURRENT_RECORD

      924     9190    3               CONTROL.NUM_AREAS = CONTROL.NUM_AREAS + 1;

   9190 81 002225   000010 236000 66                 LDQ     CONTROL+8
        81 002226   000001 036007                    ADLQ    1,DL
        81 002227   000010 756000 66                 STQ     CONTROL+8
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:153  

      925     9191    3               IF LAST_STATUS > #AREA_DEF

   9191 81 002230   000000 236000 15                 LDQ     LAST_STATUS
        81 002231   770000 376003                    ANQ     -4096,DU
        81 002232   020000 116003                    CMPQ    8192,DU
        81 002233   002240 602000 81                 TNC     s:9195

      926     9192    4               THEN DO;

      927     9193    4                   CALL ERROR(#ORDER_SUB_SCHEMA_DDL);

   9193 81 002234   000074 630400 82                 EPPR0   60
        81 002235   000000 631400 82                 EPPR1   0
        81 002236   000000 701000 xent               TSX1    ERROR
        81 002237   000000 011000                    NOP     0

      928     9194    4                   END;

      929     9195    3               LAST_STATUS = #AREA_DEF;

   9195 81 002240   010000 236003                    LDQ     4096,DU
        81 002241   000000 756000 15                 STQ     LAST_STATUS

      930     9196    3               TYPE_200.REF_LINE = CURRENT_RECORD - 1;

   9196 81 002242   000000 235000 63                 LDA     CURRENT_RECORD
        81 002243   000001 135007                    SBLA    1,DL
        81 002244   000001 755000 69                 STA     TYPE_200+1

      931     9197    3               TYPE_200.SOUR_LINE = LINE_COUNT - 1;

   9197 81 002245   000000 235000 10                 LDA     LINE_COUNT
        81 002246   000001 135007                    SBLA    1,DL
        81 002247   000002 755000 69                 STA     TYPE_200+2

      932     9198    3               TYPE_200.ID_NUM = DESC_TYPE_9.OFFSET;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:154  

   9198 81 002250   000024 235000 64                 LDA     DESC_TYPE_9+20
        81 002251   000023 755000 69                 STA     TYPE_200+19

      933     9199    3               CALL CHECK_ALIAS_DUPS;

   9199 81 002252   000176 701000 81                 TSX1    CHECK_ALIAS_DUPS
        81 002253   000000 011000                    NOP     0

      934     9200    3               CALL STORE(TYPE_200);

   9200 81 002254   000136 236000 82                 LDQ     94
        81 002255   200011 756100                    STQ     START+3,,AUTO
        81 002256   000572 701000 81                 TSX1    STORE
        81 002257   000000 011000                    NOP     0
        81 002260   006061 710000 81                 TRA     s:10312

      935     9201    3           CASE (%APL_RECORD_NAME);

      936     9202    3               IF ~RECORD_SEC AND SUB_LANGUAGE=#COBOL

   9202 81 002261   000000 236000 30                 LDQ     RECORD_SEC
        81 002262   400000 376003                    ANQ     -131072,DU
        81 002263   400000 676003                    ERQ     -131072,DU
        81 002264   002276 600000 81                 TZE     s:9211
        81 002265   000000 235000 59                 LDA     SUB_LANGUAGE
        81 002266   000001 115007                    CMPA    1,DL
        81 002267   002276 601000 81                 TNZ     s:9211

      937     9203    4               THEN DO;

      938     9204    4                   CALL ERROR(%ZIG_SS_NO_RECORD_SEC);

   9204 81 002270   000140 630400 82                 EPPR0   96
        81 002271   000000 631400 82                 EPPR1   0
        81 002272   000000 701000 xent               TSX1    ERROR
        81 002273   000000 011000                    NOP     0
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:155  

      939     9205        /*E*     ERROR:    ZIG-ZIG_SS_NO_RECORD_SEC-C
      940     9206        MESSAGE: In COBOL, before any records can be given a RECORD SECTION
      941     9207                 must be defined.
      942     9208        */
      943     9209    4                   RECORD_SEC = '1'B;

   9209 81 002274   400000 236003                    LDQ     -131072,DU
        81 002275   000000 756000 30                 STQ     RECORD_SEC

      944     9210    4                   END;

      945     9211    3               IF LARGEST_GROUP > 1

   9211 81 002276   000000 235000 21                 LDA     LARGEST_GROUP
        81 002277   000002 115007                    CMPA    2,DL
        81 002300   002305 602000 81                 TNC     s:9213

      946     9212    3               THEN CALL UPDATE_GROUP(2);

   9212 81 002301   000103 236000 82                 LDQ     67
        81 002302   200011 756100                    STQ     START+3,,AUTO
        81 002303   000727 701000 81                 TSX1    UPDATE_GROUP
        81 002304   000000 011000                    NOP     0

      947     9213    3               RECORD_TYPE = RECORD_TYPE + 1;

   9213 81 002305   000062 236000 3                  LDQ     RECORD_TYPE
        81 002306   001000 036003                    ADLQ    512,DU
        81 002307   000062 552040 3                  STBQ    RECORD_TYPE,'40'O

      948     9214    3               ADD_FILLER = 0;

   9214 81 002310   000064 450000 3                  STZ     ADD_FILLER

      949     9215    3               IF SAVE_RECORD_NUM ~= 0

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:156  
   9215 81 002311   000056 235000 3                  LDA     SAVE_RECORD_NUM
        81 002312   002347 600000 81                 TZE     s:9230

      950     9216    4               THEN DO;

      951     9217    4                   CALL READSF(SAVE_RECORD_NUM,DESC_TYPE_9);

   9217 81 002313   000141 630400 82                 EPPR0   97
        81 002314   000050 631400 82                 EPPR1   40
        81 002315   000000 701000 xent               TSX1    READSF
        81 002316   000000 011000                    NOP     0

      952     9218    4                   IF NO_ITEMS

   9218 81 002317   000065 234000 3                  SZN     NO_ITEMS
        81 002320   002336 605000 81                 TPL     s:9225

      953     9219    5                   THEN DO;

      954     9220    5                       DESC_TYPE_9.SRF_DBK = '1'B;

   9220 81 002321   400000 236007                    LDQ     -131072,DL
        81 002322   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      955     9221    5                       CALL ALLOC(8,#DOUBLE_WORD,START);

   9221 81 002323   200006 630500                    EPPR0   START,,AUTO
        81 002324   200013 450500                    STP0    I+1,,AUTO
        81 002325   000123 236000 82                 LDQ     83
        81 002326   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 002327   000121 236000 82                 LDQ     81
        81 002330   200011 756100                    STQ     START+3,,AUTO
        81 002331   000611 701000 81                 TSX1    ALLOC
        81 002332   000000 011000                    NOP     0

      956     9222    5                       ADD_FILLER = 8;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:157  
   9222 81 002333   000010 235007                    LDA     8,DL
        81 002334   000064 755000 3                  STA     ADD_FILLER

      957     9223    5                       END;

   9223 81 002335   002343 710000 81                 TRA     s:9228

      958     9224    5                   ELSE DO;

      959     9225    5                       DESC_TYPE_9.LENGTH =(UWA_ALLOC - SAVE_RECORD_OFFSET) / 2;

   9225 81 002336   000000 236000 13                 LDQ     UWA_ALLOC
        81 002337   000057 136000 3                  SBLQ    SAVE_RECORD_OFFSET
        81 002340   000002 506007                    DIV     2,DL
        81 002341   000016 756000 64                 STQ     DESC_TYPE_9+14

      960     9226    5                       DESC_TYPE_9.LTDP = DESC_TYPE_9.LENGTH;

   9226 81 002342   000017 756000 64                 STQ     DESC_TYPE_9+15

      961     9227    5                       END;

      962     9228    4                   CALL WRITSF(SAVE_RECORD_NUM,DESC_TYPE_9);

   9228 81 002343   000141 630400 82                 EPPR0   97
        81 002344   000050 631400 82                 EPPR1   40
        81 002345   000000 701000 xent               TSX1    WRITSF
        81 002346   000000 011000                    NOP     0

      963     9229    4                   END;

      964     9230    3               NO_ITEMS = '1'B;

   9230 81 002347   400000 236003                    LDQ     -131072,DU
        81 002350   000065 756000 3                  STQ     NO_ITEMS

      965     9231    3               CALL GET_WORD;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:158  

   9231 81 002351   000003 701000 81                 TSX1    GET_WORD
        81 002352   000000 011000                    NOP     0

      966     9232    3               CALL INIT_TYPE_9;

   9232 81 002353   000151 701000 81                 TSX1    INIT_TYPE_9
        81 002354   000000 011000                    NOP     0

      967     9233    3               DESC_TYPE_9.NAME = WORD1;

   9233 81 002355   040000 100400                    MLR     fill='040'O
        81 002356   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 002357   000030 000036 64                 ADSC9   DESC_TYPE_9+24           cn=0,n=30

      968     9234    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;

   9234 81 002360   000000 236000 7                  LDQ     FIELD1
        81 002361   000033 772000                    QRL     27
        81 002362   000027 756000 64                 STQ     DESC_TYPE_9+23

      969     9235    3               DESC_TYPE_9.LEVEL = 1;

   9235 81 002363   000001 235007                    LDA     1,DL
        81 002364   000012 755000 64                 STA     DESC_TYPE_9+10

      970     9236    3               DESC_TYPE_9.NON_ELEMENTARY = '1'B;

   9236 81 002365   001000 236003                    LDQ     512,DU
        81 002366   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      971     9237    3               DESC_TYPE_9.REC_NM = '1'B;

   9237 81 002367   040000 236007                    LDQ     16384,DL
        81 002370   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      972     9238    3               DESC_TYPE_9.ITEM_LEVEL_01 = '1'B;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:159  

   9238 81 002371   002000 236003                    LDQ     1024,DU
        81 002372   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      973     9239    3               DESC_TYPE_9.ALPHANUM = '1'B;

   9239 81 002373   200000 236007                    LDQ     65536,DL
        81 002374   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      974     9240    3               DESC_TYPE_9.DISPLAY = '1'B;

   9240 81 002375   000400 236007                    LDQ     256,DL
        81 002376   000021 256000 64                 ORSQ    DESC_TYPE_9+17

      975     9241    3               DESC_TYPE_9.BUWA = '1'B;

   9241 81 002377   004000 236007                    LDQ     2048,DL
        81 002400   000010 256000 64                 ORSQ    DESC_TYPE_9+8

      976     9242    3               I = UWA_ALLOC;

   9242 81 002401   000000 235000 13                 LDA     UWA_ALLOC
        81 002402   000063 755000 3                  STA     I

      977     9243    3               CALL ALLOC(0,#DOUBLE_WORD,START);

   9243 81 002403   200006 630500                    EPPR0   START,,AUTO
        81 002404   200013 450500                    STP0    I+1,,AUTO
        81 002405   000123 236000 82                 LDQ     83
        81 002406   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 002407   000021 236000 82                 LDQ     17
        81 002410   200011 756100                    STQ     START+3,,AUTO
        81 002411   000611 701000 81                 TSX1    ALLOC
        81 002412   000000 011000                    NOP     0

      978     9244        /*W*
      979     9245              This code might look hard to understand why it is here well
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:160  
      980     9246            it a long store that I will even tell about.
      981     9247              There once was a language that couldn't handle any character
      982     9248            strings exept as numbers but now they do. Then they said that
      983     9249            it would be so nice to talk to IDS but it would be tomuch work
      984     9250            so the IDS group sould do all the work. That wouldn't be so bad
      985     9251            but that fucking language can't handle any alignment the same
      986     9252            and any alignment is up to FORTRAN to decide and fuck the user.
      987     9253        */
      988     9254    3               TYPE_400.LAST_FILLER_LEN = (UWA_ALLOC - I + ADD_FILLER) / 2;

   9254 81 002413   000000 236000 13                 LDQ     UWA_ALLOC
        81 002414   000063 136000 3                  SBLQ    I
        81 002415   000064 036000 3                  ADLQ    ADD_FILLER
        81 002416   000002 506007                    DIV     2,DL
        81 002417   000031 756000 73                 STQ     TYPE_400+25

      989     9255    3               IF TYPE_400.LAST_FILLER_LEN ~= 0 AND

   9255 81 002420   000000 116003                    CMPQ    0,DU
        81 002421   002460 600000 81                 TZE     s:9268
        81 002422   000000 235000 59                 LDA     SUB_LANGUAGE
        81 002423   000002 115007                    CMPA    2,DL
        81 002424   002460 601000 81                 TNZ     s:9268

      990     9256    3                  SUB_LANGUAGE = #FORTRAN
      991     9257    4               THEN DO;

      992     9258    4                   ERROR_STATUS = 1;

   9258 81 002425   000001 235007                    LDA     1,DL
        81 002426   000000 755000 16                 STA     ERROR_STATUS

      993     9259    5                   DO WHILE (ERROR_STATUS ~= 0 AND LAST_FILLER < 9999);

   9259 81 002427   002450 710000 81                 TRA     s:9265

      994     9260    5                       CALL SET_FIELD_NUM(1,LAST_FILLER);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:161  

   9260 81 002430   000143 630400 82                 EPPR0   99
        81 002431   000050 631400 82                 EPPR1   40
        81 002432   000000 701000 xent               TSX1    SET_FIELD_NUM
        81 002433   000000 011000                    NOP     0

      995     9261    5                       CALL CONCAT(TEMP_WORD,'FILL',SUBSTR(FIELD1.TEXT1,0,4));

   9261 81 002434   000040 236000 22                 LDQ     TN_S+4
        81 002435   000071 756000 3                  STQ     TEMP_WORD
        81 002436   040000 100400                    MLR     fill='040'O
        81 002437   000000 200004 7                  ADSC9   FIELD1                   cn=1,n=4
        81 002440   000072 000032 3                  ADSC9   TEMP_WORD+1              cn=0,n=26

      996     9262    5                       LAST_FILLER = LAST_FILLER + 1;

   9262 81 002441   000070 235000 3                  LDA     LAST_FILLER
        81 002442   000001 035007                    ADLA    1,DL
        81 002443   000070 755000 3                  STA     LAST_FILLER

      997     9263    5                       CALL ZIG$HASH_IT(TEMP_WORD,#ADD,ERROR_STATUS,0,0,

   9263 81 002444   000145 630400 82                 EPPR0   101
        81 002445   000012 631400 82                 EPPR1   10
        81 002446   000000 701000 xent               TSX1    ZIG$HASH_IT
        81 002447   000000 011000                    NOP     0

      998     9264    5                          9,PTR$,LAST_STATUS);
      999     9265    5                       END;

   9265 81 002450   000000 235000 16                 LDA     ERROR_STATUS
        81 002451   002455 600000 81                 TZE     s:9266
        81 002452   000070 236000 3                  LDQ     LAST_FILLER
        81 002453   023417 116007                    CMPQ    9999,DL
        81 002454   002430 602000 81                 TNC     s:9260

     1000     9266    4                   TYPE_400.LAST_FILLER_TEXT = SUBSTR(TEMP_WORD,0,8);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:162  

   9266 81 002455   040000 100400                    MLR     fill='040'O
        81 002456   000071 000010 3                  ADSC9   TEMP_WORD                cn=0,n=8
        81 002457   000027 000010 73                 ADSC9   TYPE_400+23              cn=0,n=8

     1001     9267    4                   END;

     1002     9268    3               DESC_TYPE_9.OFFSET = UWA_ALLOC / 2;

   9268 81 002460   000000 236000 13                 LDQ     UWA_ALLOC
        81 002461   000001 772000                    QRL     1
        81 002462   000024 756000 64                 STQ     DESC_TYPE_9+20

     1003     9269    3               SAVE_RECORD_NUM = CURRENT_RECORD;

   9269 81 002463   000000 235000 63                 LDA     CURRENT_RECORD
        81 002464   000056 755000 3                  STA     SAVE_RECORD_NUM

     1004     9270    3               SAVE_RECORD_OFFSET = UWA_ALLOC;

   9270 81 002465   000000 235000 13                 LDA     UWA_ALLOC
        81 002466   000057 755000 3                  STA     SAVE_RECORD_OFFSET

     1005     9271    3               CONTROL.NUM_RECORDS = CONTROL.NUM_RECORDS + 1;

   9271 81 002467   000011 235000 66                 LDA     CONTROL+9
        81 002470   000001 035007                    ADLA    1,DL
        81 002471   000011 755000 66                 STA     CONTROL+9

     1006     9272    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);

   9272 81 002472   000126 630400 82                 EPPR0   86
        81 002473   000050 631400 82                 EPPR1   40
        81 002474   000000 701000 xent               TSX1    WRITSF
        81 002475   000000 011000                    NOP     0

     1007     9273    3               CURRENT_RECORD = CURRENT_RECORD + 1;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:163  

   9273 81 002476   000000 235000 63                 LDA     CURRENT_RECORD
        81 002477   000001 035007                    ADLA    1,DL
        81 002500   000000 755000 63                 STA     CURRENT_RECORD

     1008     9274    3               LAST_STATUS = #RECORD_DEF;

   9274 81 002501   040000 236003                    LDQ     16384,DU
        81 002502   000000 756000 15                 STQ     LAST_STATUS

     1009     9275    3               TYPE_400.REF_LINE = CURRENT_RECORD - 1;

   9275 81 002503   000001 135007                    SBLA    1,DL
        81 002504   000001 755000 73                 STA     TYPE_400+1

     1010     9276    3               TYPE_400.SOUR_LINE = LINE_COUNT - 1;

   9276 81 002505   000000 235000 10                 LDA     LINE_COUNT
        81 002506   000001 135007                    SBLA    1,DL
        81 002507   000002 755000 73                 STA     TYPE_400+2

     1011     9277    3               TYPE_400.ID_NUM = UWA_ALLOC / 2;

   9277 81 002510   000000 236000 13                 LDQ     UWA_ALLOC
        81 002511   000001 772000                    QRL     1
        81 002512   000023 756000 73                 STQ     TYPE_400+19

     1012     9278    3               CALL CHECK_ALIAS_DUPS;

   9278 81 002513   000176 701000 81                 TSX1    CHECK_ALIAS_DUPS
        81 002514   000000 011000                    NOP     0

     1013     9279    3               SAVE_RECORD_NAME = TYPE_400.RECORD_NAME;

   9279 81 002515   040000 100400                    MLR     fill='040'O
        81 002516   000003 000036 73                 ADSC9   TYPE_400+3               cn=0,n=30
        81 002517   000000 000036 18                 ADSC9   SAVE_RECORD_NAME         cn=0,n=30
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:164  

     1014     9280    3               CALL CHANGE_TO_STR(SAVE_RECORD_NAME);

   9280 81 002520   000155 236000 82                 LDQ     109
        81 002521   200011 756100                    STQ     START+3,,AUTO
        81 002522   000023 701000 81                 TSX1    CHANGE_TO_STR
        81 002523   000000 011000                    NOP     0

     1015     9281         /*
     1016     9282            This saves the record name for alias checking and
     1017     9283            if the record has been aliased then it is the aliased
     1018     9284            record name that is saved.
     1019     9285         */
     1020     9286    3               CALL STORE(TYPE_400);

   9286 81 002524   000156 236000 82                 LDQ     110
        81 002525   200011 756100                    STQ     START+3,,AUTO
        81 002526   000572 701000 81                 TSX1    STORE
        81 002527   000000 011000                    NOP     0
        81 002530   006061 710000 81                 TRA     s:10312

     1021     9287    3           CASE (%INV_SUBSCHEMA_NAME);

     1022     9288    3               IF ~TITLE_DIV AND SUB_LANGUAGE=#COBOL

   9288 81 002531   000000 236000 23                 LDQ     TITLE_DIV
        81 002532   400000 376003                    ANQ     -131072,DU
        81 002533   400000 676003                    ERQ     -131072,DU
        81 002534   002546 600000 81                 TZE     s:9297
        81 002535   000000 235000 59                 LDA     SUB_LANGUAGE
        81 002536   000001 115007                    CMPA    1,DL
        81 002537   002546 601000 81                 TNZ     s:9297

     1023     9289    4               THEN DO;

     1024     9290    4                   CALL ERROR(%ZIG_SS_NO_TITLE_DIV);

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:165  
   9290 81 002540   000160 630400 82                 EPPR0   112
        81 002541   000000 631400 82                 EPPR1   0
        81 002542   000000 701000 xent               TSX1    ERROR
        81 002543   000000 011000                    NOP     0

     1025     9291        /*E*     ERROR:    ZIG-ZIG_SS_NO_TITLE_DIV-C
     1026     9292        MESSAGE: No TITLE DIVISION statement before the start of the
     1027     9293                 subschema DDL.
     1028     9294        */
     1029     9295    4                   TITLE_DIV = '1'B;

   9295 81 002544   400000 236003                    LDQ     -131072,DU
        81 002545   000000 756000 23                 STQ     TITLE_DIV

     1030     9296    4                   END;

     1031     9297    3               LAST_FILLER = 10;

   9297 81 002546   000012 235007                    LDA     10,DL
        81 002547   000070 755000 3                  STA     LAST_FILLER

     1032     9298    3               CALL GET_WORD;

   9298 81 002550   000003 701000 81                 TSX1    GET_WORD
        81 002551   000000 011000                    NOP     0

     1033     9299    3               CONTROL.SUBSCHEMA_NAME = WORD1;

   9299 81 002552   040000 100400                    MLR     fill='040'O
        81 002553   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 002554   000030 000040 66                 ADSC9   CONTROL+24               cn=0,n=32

     1034     9300    3               CALL CHANGE_TO_STR(WORD1);

   9300 81 002555   000022 236000 82                 LDQ     18
        81 002556   200011 756100                    STQ     START+3,,AUTO
        81 002557   000023 701000 81                 TSX1    CHANGE_TO_STR
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:166  
        81 002560   000000 011000                    NOP     0

     1035     9301    3               IF WORD1 ~= SSTRANS.SSNAME

   9301 81 002561   040000 106400                    CMPC    fill='040'O
        81 002562   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 002563   000010 400036 40                 ADSC9   SSTRANS+8                cn=2,n=30
        81 002564   002571 600000 81                 TZE     s:9309

     1036     9302    4               THEN DO;

     1037     9303    4                   CALL ERROR(%ZI_MIS_SUBSCHEMA_NAME);

   9303 81 002565   000162 630400 82                 EPPR0   114
        81 002566   000000 631400 82                 EPPR1   0
        81 002567   000000 701000 xent               TSX1    ERROR
        81 002570   000000 011000                    NOP     0

     1038     9304        /*E*     ERROR:    ZIG-ZI_MIS_SUBSCHEMA_NAME-C
     1039     9305        MESSAGE: The subschema name given in the subschema DDL is not the
     1040     9306                 same as the subschema name given in the directive.
     1041     9307        */
     1042     9308    4                   END;

     1043     9309    3               SAVE_RECORD_OFFSET = 48 * 4;

   9309 81 002571   000300 235007                    LDA     192,DL
        81 002572   000057 755000 3                  STA     SAVE_RECORD_OFFSET

     1044     9310    3               SAVE_RECORD_NUM = 0;

   9310 81 002573   000056 450000 3                  STZ     SAVE_RECORD_NUM

     1045     9311    3               LAST_STATUS = #SUB_DEF;

   9311 81 002574   000000 450000 15                 STZ     LAST_STATUS

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:167  
     1046     9312    3               CURRENT_ALIAS.TYPE = 0;

   9312 81 002575   000000 450000 14                 STZ     CURRENT_ALIAS

     1047     9313    3               CURRENT_ALIAS.QUAL_NAME = ' ';

   9313 81 002576   040000 100400                    MLR     fill='040'O
        81 002577   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 002600   000020 000036 14                 ADSC9   CURRENT_ALIAS+16         cn=0,n=30

     1048     9314    3               WROTE_TYPE_9 = '0'B;

   9314 81 002601   000102 450000 3                  STZ     WROTE_TYPE_9
        81 002602   006061 710000 81                 TRA     s:10312

     1049     9315    3           CASE (%INV_SCHEMA_NAME);

     1050     9316    3               CALL GET_WORD;

   9316 81 002603   000003 701000 81                 TSX1    GET_WORD
        81 002604   000000 011000                    NOP     0

     1051     9317    3               CONTROL.SCHEMA_NAME = WORD1;

   9317 81 002605   040000 100400                    MLR     fill='040'O
        81 002606   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 002607   000020 000040 66                 ADSC9   CONTROL+16               cn=0,n=32

     1052     9318    3               CALL CHANGE_TO_STR_SCH(WORD1);

   9318 81 002610   000022 236000 82                 LDQ     18
        81 002611   200015 756100                    STQ     @RETURN_START+2,,AUTO
        81 002612   000051 701000 81                 TSX1    CHANGE_TO_STR_SCH
        81 002613   000000 011000                    NOP     0

     1053     9319    3               IF WORD1 ~= SSTRANS.SNAME AND SSTRANS.SNAME ~= ' '

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:168  
   9319 81 002614   040000 106400                    CMPC    fill='040'O
        81 002615   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 002616   000001 000036 40                 ADSC9   SSTRANS+1                cn=0,n=30
        81 002617   002630 600000 81                 TZE     s:9327
        81 002620   040000 106400                    CMPC    fill='040'O
        81 002621   000001 000036 40                 ADSC9   SSTRANS+1                cn=0,n=30
        81 002622   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 002623   002630 600000 81                 TZE     s:9327

     1054     9320    4               THEN DO;

     1055     9321    4                   CALL ERROR(%ZI_MIS_SCHEMA_NAME);

   9321 81 002624   000164 630400 82                 EPPR0   116
        81 002625   000000 631400 82                 EPPR1   0
        81 002626   000000 701000 xent               TSX1    ERROR
        81 002627   000000 011000                    NOP     0

     1056     9322        /*E*     ERROR:    ZIG-ZI_MIS_SCHEMA_NAME-C
     1057     9323        MESSAGE: The name in the subschema DDL was not the same as the schema
     1058     9324                 name given in the directive.
     1059     9325        */
     1060     9326    4                   END;

     1061     9327    3               LAST_STATUS = #SUB_DEF;

   9327 81 002630   000000 450000 15                 STZ     LAST_STATUS
        81 002631   006061 710000 81                 TRA     s:10312

     1062     9328    3           CASE (%DATA_NAME);

     1063     9329    3               WROTE_TYPE_9 = '0'B;

   9329 81 002632   000102 450000 3                  STZ     WROTE_TYPE_9

     1064     9330    3               CALL GET_WORD;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:169  
   9330 81 002633   000003 701000 81                 TSX1    GET_WORD
        81 002634   000000 011000                    NOP     0

     1065     9331    3               NO_ITEMS = '0'B;

   9331 81 002635   000065 450000 3                  STZ     NO_ITEMS

     1066     9332    3               LAST_STATUS = #ITEM_DEF;

   9332 81 002636   050000 236003                    LDQ     20480,DU
        81 002637   000000 756000 15                 STQ     LAST_STATUS

     1067     9333    3               CALL CHECK_ALIAS_DUPS;

   9333 81 002640   000176 701000 81                 TSX1    CHECK_ALIAS_DUPS
        81 002641   000000 011000                    NOP     0

     1068     9334    3               CALL INIT_TYPE_9;

   9334 81 002642   000151 701000 81                 TSX1    INIT_TYPE_9
        81 002643   000000 011000                    NOP     0

     1069     9335    3               IF SUB_LANGUAGE = #COBOL

   9335 81 002644   000000 235000 59                 LDA     SUB_LANGUAGE
        81 002645   000001 115007                    CMPA    1,DL
        81 002646   002651 601000 81                 TNZ     s:9340

     1070     9336    3               THEN DESC_TYPE_9.DISPLAY = '1'B;

   9336 81 002647   000400 236007                    LDQ     256,DL
        81 002650   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1071     9337        /*
     1072     9338              The default is different for COBOL.
     1073     9339        */
     1074     9340    3               DESC_TYPE_9.NAME = WORD1;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:170  

   9340 81 002651   040000 100400                    MLR     fill='040'O
        81 002652   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 002653   000030 000036 64                 ADSC9   DESC_TYPE_9+24           cn=0,n=30

     1075     9341    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;

   9341 81 002654   000000 236000 7                  LDQ     FIELD1
        81 002655   000033 772000                    QRL     27
        81 002656   000027 756000 64                 STQ     DESC_TYPE_9+23

     1076     9342    3               DESC_TYPE_9.RPT_CODE_NUM = SAVE_RECORD_OFFSET / 2;

   9342 81 002657   000057 236000 3                  LDQ     SAVE_RECORD_OFFSET
        81 002660   000001 772000                    QRL     1
        81 002661   000023 756000 64                 STQ     DESC_TYPE_9+19

     1077     9343    3               DESC_TYPE_9.FLD_NM = '1'B;

   9343 81 002662   020000 236007                    LDQ     8192,DL
        81 002663   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1078     9344    3               CONTROL.NUM_FIELDS = CONTROL.NUM_FIELDS + 1;

   9344 81 002664   000012 235000 66                 LDA     CONTROL+10
        81 002665   000001 035007                    ADLA    1,DL
        81 002666   000012 755000 66                 STA     CONTROL+10

     1079     9345    3               IF SUB_LANGUAGE = #COBOL

   9345 81 002667   000000 235000 59                 LDA     SUB_LANGUAGE
        81 002670   000001 115007                    CMPA    1,DL
        81 002671   006061 601000 81                 TNZ     s:10312

     1080     9346    4               THEN DO;

     1081     9347    4                   USAGE_IS = '0'B;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:171  

   9347 81 002672   000103 450000 3                  STZ     USAGE_IS

     1082     9348    4                   TYPE_COMP = '0'B;

   9348 81 002673   000104 450000 3                  STZ     TYPE_COMP

     1083     9349    4                   DISPLAY = '0'B;

   9349 81 002674   000105 450000 3                  STZ     DISPLAY

     1084     9350    4                   NUM_BIT = '0'B;

   9350 81 002675   000106 450000 3                  STZ     NUM_BIT

     1085     9351    4                   COMP = '0'B;

   9351 81 002676   000107 450000 3                  STZ     COMP

     1086     9352    4                   LEFT = '0'B;

   9352 81 002677   000110 450000 3                  STZ     LEFT

     1087     9353    4                   RIGHT = '0'B;

   9353 81 002700   000111 450000 3                  STZ     RIGHT

     1088     9354    4                   LEADING = '0'B;

   9354 81 002701   000112 450000 3                  STZ     LEADING

     1089     9355    4                   TRAILING = '0'B;

   9355 81 002702   000113 450000 3                  STZ     TRAILING

     1090     9356    4                   SEPARATE = '0'B;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:172  
   9356 81 002703   000114 450000 3                  STZ     SEPARATE

     1091     9357    4                   PIC_STR = '0'B;

   9357 81 002704   000115 450000 3                  STZ     PIC_STR

     1092     9358    4                   END;

   9358 81 002705   006061 710000 81                 TRA     s:10312

     1093     9359    3           CASE (%BOOL);

     1094     9360    3               DESC_TYPE_9.BUWA = '1'B;

   9360 81 002706   004000 236007                    LDQ     2048,DL
        81 002707   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1095     9361    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9361 81 002710   000400 236003                    LDQ     256,DU
        81 002711   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1096     9362    3               DESC_TYPE_9.NUMERIC = '1'B;

   9362 81 002712   000001 236003                    LDQ     1,DU
        81 002713   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1097     9363    3               DESC_TYPE_9.LOGICAL = '1'B;

   9363 81 002714   000010 236007                    LDQ     8,DL
        81 002715   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1098     9364    3               CALL ALLOC(8,#WORD,START);

   9364 81 002716   200006 631500                    EPPR1   START,,AUTO
        81 002717   200013 451500                    STP1    I+1,,AUTO
        81 002720   000121 236000 82                 LDQ     81
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:173  
        81 002721   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 002722   200011 756100                    STQ     START+3,,AUTO
        81 002723   000611 701000 81                 TSX1    ALLOC
        81 002724   000000 011000                    NOP     0

     1099     9365    3               DESC_TYPE_9.OFFSET = START * 4;

   9365 81 002725   200006 235100                    LDA     START,,AUTO
        81 002726   000002 735000                    ALS     2
        81 002727   000024 755000 64                 STA     DESC_TYPE_9+20
        81 002730   006061 710000 81                 TRA     s:10312

     1100     9366    3           CASE (%LOCK_STRING);

     1101     9367    3               CALL GET_WORD;

   9367 81 002731   000003 701000 81                 TSX1    GET_WORD
        81 002732   000000 011000                    NOP     0

     1102     9368    3               IF FIELD1.COUNT1 > 12

   9368 81 002733   000000 236000 7                  LDQ     FIELD1
        81 002734   777000 376003                    ANQ     -512,DU
        81 002735   015000 116003                    CMPQ    6656,DU
        81 002736   002743 602000 81                 TNC     s:9376

     1103     9369    4               THEN DO;

     1104     9370    4                   CALL WARNING(EZI$LOCK_TO_LONG);

   9370 81 002737   000166 630400 82                 EPPR0   118
        81 002740   000000 631400 82                 EPPR1   0
        81 002741   000000 701000 xent               TSX1    WARNING
        81 002742   000000 011000                    NOP     0

     1105     9371        /*       ERROR:    ZIG-EZI$LOCK_TO_LONG-C
     1106     9372            MESSAGE:  Lock value or key longer than 12 characters.
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:174  
     1107     9373                      Lock will not be set or key will be truncated.
     1108     9374        */
     1109     9375    4                   END;

     1110     9376    3               LOCK_PTR$ -> STRING12 = SUBSTR(WORD1,0,12);

   9376 81 002743   000013 470400 3                  LDP0    LOCK_PTR$
        81 002744   040100 100400                    MLR     fill='040'O
        81 002745   000001 000014 3                  ADSC9   WORD1                    cn=0,n=12
        81 002746   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12
        81 002747   006061 710000 81                 TRA     s:10312

     1111     9377    3           CASE (%THE_END);

     1112     9378    3               IF LARGEST_GROUP > 1

   9378 81 002750   000000 235000 21                 LDA     LARGEST_GROUP
        81 002751   000002 115007                    CMPA    2,DL
        81 002752   002757 602000 81                 TNC     s:9380

     1113     9379    3               THEN CALL UPDATE_GROUP(2);

   9379 81 002753   000103 236000 82                 LDQ     67
        81 002754   200011 756100                    STQ     START+3,,AUTO
        81 002755   000727 701000 81                 TSX1    UPDATE_GROUP
        81 002756   000000 011000                    NOP     0

     1114     9380    3               IF SAVE_RECORD_NUM ~= 0

   9380 81 002757   000056 235000 3                  LDA     SAVE_RECORD_NUM
        81 002760   003014 600000 81                 TZE     s:9395

     1115     9381    4               THEN DO;

     1116     9382    4                   CALL READSF(SAVE_RECORD_NUM,DESC_TYPE_9);

   9382 81 002761   000141 630400 82                 EPPR0   97
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:175  
        81 002762   000050 631400 82                 EPPR1   40
        81 002763   000000 701000 xent               TSX1    READSF
        81 002764   000000 011000                    NOP     0

     1117     9383    4                   IF NO_ITEMS

   9383 81 002765   000065 234000 3                  SZN     NO_ITEMS
        81 002766   003002 605000 81                 TPL     s:9389

     1118     9384    5                   THEN DO;

     1119     9385    5                       DESC_TYPE_9.SRF_DBK = '1'B;

   9385 81 002767   400000 236007                    LDQ     -131072,DL
        81 002770   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1120     9386    5                       CALL ALLOC(0,#DOUBLE_WORD,START);

   9386 81 002771   200006 630500                    EPPR0   START,,AUTO
        81 002772   200013 450500                    STP0    I+1,,AUTO
        81 002773   000123 236000 82                 LDQ     83
        81 002774   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 002775   000021 236000 82                 LDQ     17
        81 002776   200011 756100                    STQ     START+3,,AUTO
        81 002777   000611 701000 81                 TSX1    ALLOC
        81 003000   000000 011000                    NOP     0

     1121     9387    5                       END;

   9387 81 003001   003007 710000 81                 TRA     s:9392

     1122     9388    5                   ELSE DO;

     1123     9389    5                       DESC_TYPE_9.LENGTH =(UWA_ALLOC - SAVE_RECORD_OFFSET) / 2;

   9389 81 003002   000000 236000 13                 LDQ     UWA_ALLOC
        81 003003   000057 136000 3                  SBLQ    SAVE_RECORD_OFFSET
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:176  
        81 003004   000002 506007                    DIV     2,DL
        81 003005   000016 756000 64                 STQ     DESC_TYPE_9+14

     1124     9390    5                       DESC_TYPE_9.LTDP = DESC_TYPE_9.LENGTH;

   9390 81 003006   000017 756000 64                 STQ     DESC_TYPE_9+15

     1125     9391    5                       END;

     1126     9392    4                   TYPE_400.LAST_FILLER_LEN = 0;

   9392 81 003007   000031 450000 73                 STZ     TYPE_400+25

     1127     9393    4                   CALL WRITSF(SAVE_RECORD_NUM,DESC_TYPE_9);

   9393 81 003010   000141 630400 82                 EPPR0   97
        81 003011   000050 631400 82                 EPPR1   40
        81 003012   000000 701000 xent               TSX1    WRITSF
        81 003013   000000 011000                    NOP     0

     1128     9394    4                   END;

     1129     9395    3               CALL WRITSF(CURRENT_RECORD,EOFC);

   9395 81 003014   000167 630400 82                 EPPR0   119
        81 003015   000050 631400 82                 EPPR1   40
        81 003016   000000 701000 xent               TSX1    WRITSF
        81 003017   000000 011000                    NOP     0

     1130     9396    3               CURRENT_RECORD = CURRENT_RECORD + 1;

   9396 81 003020   000000 235000 63                 LDA     CURRENT_RECORD
        81 003021   000001 035007                    ADLA    1,DL
        81 003022   000000 755000 63                 STA     CURRENT_RECORD

     1131     9397         /*
     1132     9398            This is really to make sure FORTRAN include files are
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:177  
     1133     9399            aligned the way the UWA is built. If the last thing
     1134     9400            before database parameters ended on other than a
     1135     9401            double word boundary, a filler must be put between the
     1136     9402            end and the next double word bound. If not, leave well
     1137     9403            enough alone.
     1138     9404         */
     1139     9405    3               CONTROL.LAST_FILLER_NUM = LAST_FILLER;

   9405 81 003023   000070 720000 3                  LXL0    LAST_FILLER
        81 003024   000070 740000 66                 STX0    CONTROL+56

     1140     9406    3               CONTROL.LAST_FILLER_LEN = 8 - (MOD(UWA_ALLOC,16)/2);

   9406 81 003025   000000 236000 13                 LDQ     UWA_ALLOC
        81 003026   000017 376007                    ANQ     15,DL
        81 003027   000001 772000                    QRL     1
        81 003030   777767 621006                    EAX1    -9,QL
        81 003031   777777 661003                    ERX1    -1,DU
        81 003032   000070 441000 66                 SXL1    CONTROL+56

     1141     9407    3               IF CONTROL.LAST_FILLER_LEN = 8

   9407 81 003033   000010 101003                    CMPX1   8,DU
        81 003034   003037 601000 81                 TNZ     s:9409

     1142     9408    3               THEN CONTROL.LAST_FILLER_LEN = 0;

   9408 81 003035   000000 222003                    LDX2    0,DU
        81 003036   000070 442000 66                 SXL2    CONTROL+56

     1143     9409    3               CALL ALLOC(0,#DOUBLE_WORD,START);

   9409 81 003037   200006 630500                    EPPR0   START,,AUTO
        81 003040   200013 450500                    STP0    I+1,,AUTO
        81 003041   000123 236000 82                 LDQ     83
        81 003042   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 003043   000021 236000 82                 LDQ     17
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:178  
        81 003044   200011 756100                    STQ     START+3,,AUTO
        81 003045   000611 701000 81                 TSX1    ALLOC
        81 003046   000000 011000                    NOP     0

     1144     9410    3               CONTROL.UWA_SIZE=(UWA_ALLOC+7)/8;

   9410 81 003047   000000 236000 13                 LDQ     UWA_ALLOC
        81 003050   000007 036007                    ADLQ    7,DL
        81 003051   000003 772000                    QRL     3
        81 003052   000004 756000 66                 STQ     CONTROL+4

     1145     9411    3               CONTROL.NEXT_UWA_LOC=CONTROL.UWA_SIZE*4;

   9411 81 003053   000004 235000 66                 LDA     CONTROL+4
        81 003054   000002 735000                    ALS     2
        81 003055   000051 755000 66                 STA     CONTROL+41

     1146     9412    3               CONTROL.TRANS_UWA_SIZE = CONTROL.NEXT_UWA_LOC;

   9412 81 003056   000056 755000 66                 STA     CONTROL+46

     1147     9413    3               CONTROL.FIRST_SDS_RECORD = CURRENT_RECORD + 9;

   9413 81 003057   000000 235000 63                 LDA     CURRENT_RECORD
        81 003060   000011 035007                    ADLA    9,DL
        81 003061   000075 755000 66                 STA     CONTROL+61

     1148     9414    3               CONTROL.LANGUAGE = SUB_LANGUAGE;

   9414 81 003062   000000 235000 59                 LDA     SUB_LANGUAGE
        81 003063   000041 755000 66                 STA     CONTROL+33

     1149     9415    3               CALL M$TIME (TIME_FPT);

   9415 81 003064   000122 630400 3                  EPPR0   TIME_FPT
        81 003065   020004 713400                    CLIMB   8196
        81 003066   402000 401760                    pmme    nvectors=5
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:179  

     1150     9416    3               CONTROL.SUBSCHEMA_UTS = UTSS;

   9416 81 003067   000012 235000 3                  LDA     UTSS
        81 003070   000053 755000 66                 STA     CONTROL+43

     1151     9417    3               TYPE_100.LANG_TYPE = SUB_LANGUAGE;

   9417 81 003071   000000 236000 59                 LDQ     SUB_LANGUAGE
        81 003072   000001 756000 67                 STQ     TYPE_100+1

     1152     9418    3               TYPE_100.COPY_PRIVACY = CONTROL.COPY_PRIVACY_KEY;

   9418 81 003073   040000 100400                    MLR     fill='040'O
        81 003074   000043 000014 66                 ADSC9   CONTROL+35               cn=0,n=12
        81 003075   000003 000014 67                 ADSC9   TYPE_100+3               cn=0,n=12

     1153     9419    3               TYPE_100.DIAG_PRIVACY = CONTROL.DIAGNOSTIC_PRIVACY_K;

   9419 81 003076   040000 100400                    MLR     fill='040'O
        81 003077   000046 000014 66                 ADSC9   CONTROL+38               cn=0,n=12
        81 003100   000006 000014 67                 ADSC9   TYPE_100+6               cn=0,n=12

     1154     9420    3               TYPE_100.NEXT_UWA = CONTROL.NEXT_UWA_LOC;

   9420 81 003101   000051 235000 66                 LDA     CONTROL+41
        81 003102   000011 755000 67                 STA     TYPE_100+9

     1155     9421    3               TYPE_100.TRANS_UTS = CONTROL.SUBSCHEMA_UTS;

   9421 81 003103   000053 235000 66                 LDA     CONTROL+43
        81 003104   000013 755000 67                 STA     TYPE_100+11

     1156     9422    3               CALL WRITSF(CURRENT_RECORD,TYPE_100);

   9422 81 003105   000171 630400 82                 EPPR0   121
        81 003106   000050 631400 82                 EPPR1   40
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:180  
        81 003107   000000 701000 xent               TSX1    WRITSF
        81 003110   000000 011000                    NOP     0

     1157     9423    3               CURRENT_RECORD = CURRENT_RECORD + 9;

   9423 81 003111   000000 235000 63                 LDA     CURRENT_RECORD
        81 003112   000011 035007                    ADLA    9,DL
        81 003113   000000 755000 63                 STA     CURRENT_RECORD

     1158     9424    3               CALL UCLOSE('5*');

   9424 81 003114   000047 630400 82                 EPPR0   39
        81 003115   000000 631400 82                 EPPR1   0
        81 003116   000000 701000 xent               TSX1    UCLOSE
        81 003117   000000 011000                    NOP     0

     1159     9425    3               CALL UOPEN('5*',0);

   9425 81 003120   000173 630400 82                 EPPR0   123
        81 003121   000050 631400 82                 EPPR1   40
        81 003122   000000 701000 xent               TSX1    UOPEN
        81 003123   000000 011000                    NOP     0

     1160     9426    3               CALL UGET('5*',DESCPTR,EOF,BUFFER_SIZE);

   9426 81 003124   200005 630500                    EPPR0   BUFFER_SIZE,,AUTO
        81 003125   200023 450500                    STP0    COUNT1+5,,AUTO
        81 003126   200004 631500                    EPPR1   EOF,,AUTO
        81 003127   200022 451500                    STP1    COUNT1+4,,AUTO
        81 003130   000176 237000 82                 LDAQ    126
        81 003131   200020 757100                    STAQ    COUNT1+2,,AUTO
        81 003132   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 003133   000175 631400 82                 EPPR1   125
        81 003134   000000 701000 xent               TSX1    UGET
        81 003135   000000 011000                    NOP     0

     1161     9427    4               DO WHILE (EOF=0);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:181  

   9427 81 003136   200004 235100                    LDA     EOF,,AUTO
        81 003137   003334 601000 81                 TNZ     s:9461

     1162     9428    4                   IF DESCPTR -> TYPE_430_B.TYPE = 430 AND

   9428 81 003140   000015 470400 3                  LDP0    DESCPTR
        81 003141   000100 100500                    MLR     fill='000'O
        81 003142   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
        81 003143   200020 000004                    ADSC9   COUNT1+2,,AUTO           cn=0,n=4
        81 003144   200020 236100                    LDQ     COUNT1+2,,AUTO
        81 003145   000656 116007                    CMPQ    430,DL
        81 003146   003306 601000 81                 TNZ     s:9457
        81 003147   000100 100500                    MLR     fill='000'O
        81 003150   000025 000004                    ADSC9   21,,PR0                  cn=0,n=4
        81 003151   200021 000004                    ADSC9   COUNT1+3,,AUTO           cn=0,n=4
        81 003152   200021 236100                    LDQ     COUNT1+3,,AUTO
        81 003153   000000 116003                    CMPQ    0,DU
        81 003154   003306 601000 81                 TNZ     s:9457

     1163     9429    4                      DESCPTR -> TYPE_430_B.LEN_FIELD = 0
     1164     9430    5                   THEN DO;

     1165     9431    5                       CALL READSF(DESCPTR -> TYPE_430_B.REF_LINE,DESC_TYPE_9);

   9431 81 003155   000051 236000 82                 LDQ     41
        81 003156   200021 756100                    STQ     COUNT1+3,,AUTO
        81 003157   000015 236000 3                  LDQ     DESCPTR
        81 003160   000001 036003                    ADLQ    1,DU
        81 003161   200020 756100                    STQ     COUNT1+2,,AUTO
        81 003162   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 003163   000050 631400 82                 EPPR1   40
        81 003164   000000 701000 xent               TSX1    READSF
        81 003165   000000 011000                    NOP     0

     1166     9432    5                       DESCPTR -> TYPE_430_B.LEN_FIELD = DESC_TYPE_9.LENGTH;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:182  
   9432 81 003166   000015 470400 3                  LDP0    DESCPTR
        81 003167   000100 100400                    MLR     fill='000'O
        81 003170   000016 000004 64                 ADSC9   DESC_TYPE_9+14           cn=0,n=4
        81 003171   000025 000004                    ADSC9   21,,PR0                  cn=0,n=4

     1167     9433    5                       DESCPTR -> TYPE_430_B.EIS.ADSC.N = DESC_TYPE_9.LENGTH;

   9433 81 003172   003100 061400                    CSR     bolr='003'O
        81 003173   000016 000044 64                 BDSC    DESC_TYPE_9+14           by=0,bit=0,n=36
        81 003174   000031 460014                    BDSC    25,,PR0                  by=2,bit=6,n=12

     1168     9434    5                       DESCPTR -> TYPE_430_B.OFFSET = DESC_TYPE_9.OFFSET;

   9434 81 003175   000100 100400                    MLR     fill='000'O
        81 003176   000024 000004 64                 ADSC9   DESC_TYPE_9+20           cn=0,n=4
        81 003177   000023 000004                    ADSC9   19,,PR0                  cn=0,n=4

     1169     9435    5                       IF DESC_TYPE_9.COMP_4

   9435 81 003200   000022 234000 64                 SZN     DESC_TYPE_9+18
        81 003201   003206 605000 81                 TPL     s:9440

     1170     9436    6                       THEN DO;

     1171     9437    6                           DESCPTR -> TYPE_430_B.DATA_TYPE = 3;

   9437 81 003202   000100 100400                    MLR     fill='000'O
        81 003203   000200 000004 82                 ADSC9   128                      cn=0,n=4
        81 003204   000024 000004                    ADSC9   20,,PR0                  cn=0,n=4

     1172     9438    6                           END;

   9438 81 003205   003211 710000 81                 TRA     s:9442

     1173     9439    6                       ELSE DO;

     1174     9440    6                           DESCPTR -> TYPE_430_B.DATA_TYPE = 0;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:183  

   9440 81 003206   000100 100400                    MLR     fill='000'O
        81 003207   000013 000004 82                 ADSC9   11                       cn=0,n=4
        81 003210   000024 000004                    ADSC9   20,,PR0                  cn=0,n=4

     1175     9441    6                           END;

     1176     9442    5                       DESCPTR -> TYPE_430_B.EIS.NDSC.CN = MOD(DESCPTR -> TYPE_430_B.
              9442                                OFFSET*FACTER(DESCPTR -> TYPE_430_B.DATA_TYPE),8);

   9442 81 003211   000100 101500                    MRL     fill='000'O
        81 003212   000024 000004                    ADSC9   20,,PR0                  cn=0,n=4
        81 003213   200020 000002                    ADSC9   COUNT1+2,,AUTO           cn=0,n=2
        81 003214   200020 220100                    LDX0    COUNT1+2,,AUTO
        81 003215   000100 100500                    MLR     fill='000'O
        81 003216   000023 000004                    ADSC9   19,,PR0                  cn=0,n=4
        81 003217   200021 000004                    ADSC9   COUNT1+3,,AUTO           cn=0,n=4
        81 003220   200021 236100                    LDQ     COUNT1+3,,AUTO
        81 003221   000000 402010 22                 MPY     FACTER,X0
        81 003222   000007 376007                    ANQ     7,DL
        81 003223   200022 756100                    STQ     COUNT1+4,,AUTO
        81 003224   003100 061500                    CSR     bolr='003'O
        81 003225   200022 000044                    BDSC    COUNT1+4,,AUTO           by=0,bit=0,n=36
        81 003226   000031 400003                    BDSC    25,,PR0                  by=2,bit=0,n=3

     1177     9443    5                      DESCPTR -> TYPE_430_B.EIS.ADDER_C.OFFSET = DESCPTR -> TYPE_430_B
              9443                                .OFFSET*FACTER(DESCPTR -> TYPE_430_B.DATA_TYPE)/8;

   9443 81 003227   000100 101500                    MRL     fill='000'O
        81 003230   000024 000004                    ADSC9   20,,PR0                  cn=0,n=4
        81 003231   200020 000002                    ADSC9   COUNT1+2,,AUTO           cn=0,n=2
        81 003232   200020 220100                    LDX0    COUNT1+2,,AUTO
        81 003233   000100 100500                    MLR     fill='000'O
        81 003234   000023 000004                    ADSC9   19,,PR0                  cn=0,n=4
        81 003235   200021 000004                    ADSC9   COUNT1+3,,AUTO           cn=0,n=4
        81 003236   200021 236100                    LDQ     COUNT1+3,,AUTO
        81 003237   000000 402010 22                 MPY     FACTER,X0
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:184  
        81 003240   000003 772000                    QRL     3
        81 003241   200022 756100                    STQ     COUNT1+4,,AUTO
        81 003242   003100 061500                    CSR     bolr='003'O
        81 003243   200022 000044                    BDSC    COUNT1+4,,AUTO           by=0,bit=0,n=36
        81 003244   000031 030017                    BDSC    25,,PR0                  by=0,bit=3,n=15

     1178     9444    5                       DESCPTR -> TYPE_430_B.EIS.EIS_TN_S.TN_S = TN_S(DESCPTR ->
              9444                                TYPE_430_B.DATA_TYPE);

   9444 81 003245   000100 100500                    MLR     fill='000'O
        81 003246   000024 000004                    ADSC9   20,,PR0                  cn=0,n=4
        81 003247   200020 000004                    ADSC9   COUNT1+2,,AUTO           cn=0,n=4
        81 003250   200020 236100                    LDQ     COUNT1+2,,AUTO
        81 003251   000003 402007                    MPY     3,DL
        81 003252   003100 060406                    CSL     bolr='003'O
        81 003253   000034 000003 22                 BDSC    TN_S,Q                   by=0,bit=0,n=3
        81 003254   000031 430003                    BDSC    25,,PR0                  by=2,bit=3,n=3

     1179     9445    5                       IF DESC_TYPE_9.NUMERIC

   9445 81 003255   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 003256   000001 316003                    CANQ    1,DU
        81 003257   003303 600000 81                 TZE     s:9454

     1180     9446    6                       THEN DO;

     1181     9447    6                           SSCALE = DESCPTR -> TYPE_430_B.SCALE_FIELD;

   9447 81 003260   003000 061500                    CSR     bolr='003'O
        81 003261   000026 000044                    BDSC    22,,PR0                  by=0,bit=0,n=36
        81 003262   000101 000006 3                  BDSC    SSCALE                   by=0,bit=0,n=6

     1182     9448    6                           IF SSCALE ~= 0

   9448 81 003263   000101 236000 3                  LDQ     SSCALE
        81 003264   770000 316003                    CANQ    -4096,DU
        81 003265   003274 600000 81                 TZE     s:9450
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:185  

     1183     9449    6                           THEN SSCALE = 64 - SSCALE;

   9449 81 003266   000101 236000 3                  LDQ     SSCALE
        81 003267   000036 732000                    QRS     30
        81 003270   000201 676000 82                 ERQ     129
        81 003271   000101 036007                    ADLQ    65,DL
        81 003272   000036 736000                    QLS     30
        81 003273   000101 756000 3                  STQ     SSCALE

     1184     9450    6                           DESCPTR -> TYPE_430_B.EIS.NDSC.SF = SSCALE;

   9450 81 003274   003100 060400                    CSL     bolr='003'O
        81 003275   000101 000006 3                  BDSC    SSCALE                   by=0,bit=0,n=6
        81 003276   000031 460006                    BDSC    25,,PR0                  by=2,bit=6,n=6

     1185     9451    6                           DESCPTR -> TYPE_430_B.EIS.NDSC.N = DESCPTR -> TYPE_430_B.
              9451                                    LEN_FIELD;

   9451 81 003277   003100 061500                    CSR     bolr='003'O
        81 003300   000025 000044                    BDSC    21,,PR0                  by=0,bit=0,n=36
        81 003301   000031 630006                    BDSC    25,,PR0                  by=3,bit=3,n=6

     1186     9452    6                           END;

   9452 81 003302   003306 710000 81                 TRA     s:9457

     1187     9453    6                       ELSE DO;

     1188     9454    6                           DESCPTR -> TYPE_430_B.EIS.ADSC.N = DESCPTR -> TYPE_430_B.
              9454                                    LEN_FIELD;

   9454 81 003303   003100 061500                    CSR     bolr='003'O
        81 003304   000025 000044                    BDSC    21,,PR0                  by=0,bit=0,n=36
        81 003305   000031 460014                    BDSC    25,,PR0                  by=2,bit=6,n=12

     1189     9455    6                           END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:186  

     1190     9456    5                       END;

     1191     9457    4                   CALL WRITSF(CURRENT_RECORD,BUFFER_TEMP);

   9457 81 003306   000015 236000 3                  LDQ     DESCPTR
        81 003307   000126 235000 82                 LDA     86
        81 003310   200020 757100                    STAQ    COUNT1+2,,AUTO
        81 003311   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 003312   000050 631400 82                 EPPR1   40
        81 003313   000000 701000 xent               TSX1    WRITSF
        81 003314   000000 011000                    NOP     0

     1192     9458    4                   CURRENT_RECORD = CURRENT_RECORD +1;

   9458 81 003315   000000 235000 63                 LDA     CURRENT_RECORD
        81 003316   000001 035007                    ADLA    1,DL
        81 003317   000000 755000 63                 STA     CURRENT_RECORD

     1193     9459    4                   CALL UGET('5*',DESCPTR,EOF,BUFFER_SIZE);

   9459 81 003320   200005 630500                    EPPR0   BUFFER_SIZE,,AUTO
        81 003321   200023 450500                    STP0    COUNT1+5,,AUTO
        81 003322   200004 631500                    EPPR1   EOF,,AUTO
        81 003323   200022 451500                    STP1    COUNT1+4,,AUTO
        81 003324   000176 237000 82                 LDAQ    126
        81 003325   200020 757100                    STAQ    COUNT1+2,,AUTO
        81 003326   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 003327   000175 631400 82                 EPPR1   125
        81 003330   000000 701000 xent               TSX1    UGET
        81 003331   000000 011000                    NOP     0

     1194     9460    4                   END;

   9460 81 003332   200004 235100                    LDA     EOF,,AUTO
        81 003333   003140 600000 81                 TZE     s:9428

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:187  
     1195     9461    3               CALL UCLOSE('5*');

   9461 81 003334   000047 630400 82                 EPPR0   39
        81 003335   000000 631400 82                 EPPR1   0
        81 003336   000000 701000 xent               TSX1    UCLOSE
        81 003337   000000 011000                    NOP     0

     1196     9462    3               CONTROL.FIRST_NFE_RECORD= CURRENT_RECORD;

   9462 81 003340   000000 235000 63                 LDA     CURRENT_RECORD
        81 003341   000076 755000 66                 STA     CONTROL+62

     1197     9463    3               CALL WRITSF(CONTROL.FIRST_NFE_RECORD,EOFC);

   9463 81 003342   000202 630400 82                 EPPR0   130
        81 003343   000050 631400 82                 EPPR1   40
        81 003344   000000 701000 xent               TSX1    WRITSF
        81 003345   000000 011000                    NOP     0

     1198     9464    3               CONTROL.FIRST_NFE_RECORD= CURRENT_RECORD + 1;

   9464 81 003346   000000 235000 63                 LDA     CURRENT_RECORD
        81 003347   000001 035007                    ADLA    1,DL
        81 003350   000076 755000 66                 STA     CONTROL+62

     1199     9465    3               CALL WRITSF(CONTROL.FIRST_NFE_RECORD,EOFC);

   9465 81 003351   000202 630400 82                 EPPR0   130
        81 003352   000050 631400 82                 EPPR1   40
        81 003353   000000 701000 xent               TSX1    WRITSF
        81 003354   000000 011000                    NOP     0

     1200     9466    3               CALL WRITSF(CONTROL.FIRST_NFE_RECORD+2,EOFC);

   9466 81 003355   000076 235000 66                 LDA     CONTROL+62
        81 003356   000002 035007                    ADLA    2,DL
        81 003357   200020 755100                    STA     COUNT1+2,,AUTO
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:188  
        81 003360   000170 236000 82                 LDQ     120
        81 003361   200023 756100                    STQ     COUNT1+5,,AUTO
        81 003362   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 003363   200022 450500                    STP0    COUNT1+4,,AUTO
        81 003364   200022 630500                    EPPR0   COUNT1+4,,AUTO
        81 003365   000050 631400 82                 EPPR1   40
        81 003366   000000 701000 xent               TSX1    WRITSF
        81 003367   000000 011000                    NOP     0

     1201     9467    3               CONTROL.NEXT_AVAILABLE_RECORD=CONTROL.FIRST_NFE_RECORD + 1;

   9467 81 003370   000076 235000 66                 LDA     CONTROL+62
        81 003371   000001 035007                    ADLA    1,DL
        81 003372   000072 755000 66                 STA     CONTROL+58

     1202     9468    3               IF NO_ERRORS

   9468 81 003373   000000 234000 0                  SZN     NO_ERRORS
        81 003374   003377 605000 81                 TPL     s:9470

     1203     9469    3               THEN CONTROL.TRANSLATION_STATUS = 0;

   9469 81 003375   000001 450000 66                 STZ     CONTROL+1
        81 003376   003401 710000 81                 TRA     s:9471

     1204     9470    3               ELSE CONTROL.TRANSLATION_STATUS = 1;

   9470 81 003377   000001 236007                    LDQ     1,DL
        81 003400   000001 756000 66                 STQ     CONTROL+1

     1205     9471    3               CALL WRIT64(0, ADDR(CONTROL)); /*Control seg*/

   9471 81 003401   000204 236000 82                 LDQ     132
        81 003402   200020 756100                    STQ     COUNT1+2,,AUTO
        81 003403   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 003404   200023 450500                    STP0    COUNT1+5,,AUTO
        81 003405   000021 236000 82                 LDQ     17
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:189  
        81 003406   200022 756100                    STQ     COUNT1+4,,AUTO
        81 003407   200022 630500                    EPPR0   COUNT1+4,,AUTO
        81 003410   000050 631400 82                 EPPR1   40
        81 003411   000000 701000 xent               TSX1    WRIT64
        81 003412   000000 011000                    NOP     0

     1206     9472    3               END_SUBSCHEMA = '1'B;

   9472 81 003413   400000 236003                    LDQ     -131072,DU
        81 003414   000000 756000 2                  STQ     END_SUBSCHEMA
        81 003415   006061 710000 81                 TRA     s:10312

     1207     9473    3           CASE (%WITHIN_AREAS);

     1208     9474         /*
     1209     9475            These are the areas defined for the current record that
     1210     9476            is being processed.
     1211     9477         */
     1212     9478    3               CALL GET_WORD;

   9478 81 003416   000003 701000 81                 TSX1    GET_WORD
        81 003417   000000 011000                    NOP     0

     1213     9479    3               TYPE_420.SOUR_LINE = LINE_COUNT - 1;

   9479 81 003420   000000 235000 10                 LDA     LINE_COUNT
        81 003421   000001 135007                    SBLA    1,DL
        81 003422   000002 755000 75                 STA     TYPE_420+2

     1214     9480    3               TYPE_420.SUB_AREA_NAME = WORD1;

   9480 81 003423   040000 100400                    MLR     fill='040'O
        81 003424   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 003425   000013 000036 75                 ADSC9   TYPE_420+11              cn=0,n=30

     1215     9481    3               CALL ZIG$HASH_IT(WORD1,#NO_ADD,ERROR_STATUS,0,1,9,PTR$,0);

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:190  
   9481 81 003426   000205 630400 82                 EPPR0   133
        81 003427   000012 631400 82                 EPPR1   10
        81 003430   000000 701000 xent               TSX1    ZIG$HASH_IT
        81 003431   000000 011000                    NOP     0

     1216     9482    3               IF ERROR_STATUS ~= 2

   9482 81 003432   000000 235000 16                 LDA     ERROR_STATUS
        81 003433   000002 115007                    CMPA    2,DL
        81 003434   003441 600000 81                 TZE     s:9491

     1217     9483    4               THEN DO;

     1218     9484    4                   CALL ERROR(#AREA_NOT_DEFINED);

   9484 81 003435   000216 630400 82                 EPPR0   142
        81 003436   000000 631400 82                 EPPR1   0
        81 003437   000000 701000 xent               TSX1    ERROR
        81 003440   000000 011000                    NOP     0

     1219     9485        /*E*     ERROR:    ZIG-#AREA_NOT_DEFINED-C
     1220     9486        MESSAGE: The area "%U1" is not defined in this subschema and is used
     1221     9487                 in the record entry above. This must be fixed to validate
     1222     9488                 the subschema file.
     1223     9489        */
     1224     9490    4                   END;

     1225     9491    3               CALL CHANGE_TO_STR_SCH(WORD1);

   9491 81 003441   000022 236000 82                 LDQ     18
        81 003442   200015 756100                    STQ     @RETURN_START+2,,AUTO
        81 003443   000051 701000 81                 TSX1    CHANGE_TO_STR_SCH
        81 003444   000000 011000                    NOP     0

     1226     9492    3               CALL ZIG$HASH_IT(WORD1,#NO_ADD,ERROR_STATUS,0,1,9,PTR$,0);

   9492 81 003445   000205 630400 82                 EPPR0   133
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:191  
        81 003446   000012 631400 82                 EPPR1   10
        81 003447   000000 701000 xent               TSX1    ZIG$HASH_IT
        81 003450   000000 011000                    NOP     0

     1227     9493    3               IF ERROR_STATUS = 1

   9493 81 003451   000000 235000 16                 LDA     ERROR_STATUS
        81 003452   000001 115007                    CMPA    1,DL
        81 003453   003461 601000 81                 TNZ     s:9495

     1228     9494    3               THEN TYPE_420.AREA_NAME = PTR$ -> TRANS_ALIAS.SCHEMA_NAME;

   9494 81 003454   000061 470400 3                  LDP0    PTR$
        81 003455   040000 100500                    MLR     fill='040'O
        81 003456   000013 000036                    ADSC9   11,,PR0                  cn=0,n=30
        81 003457   000003 000036 75                 ADSC9   TYPE_420+3               cn=0,n=30
        81 003460   003464 710000 81                 TRA     s:9496

     1229     9495    3               ELSE TYPE_420.AREA_NAME = WORD1;

   9495 81 003461   040000 100400                    MLR     fill='040'O
        81 003462   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 003463   000003 000036 75                 ADSC9   TYPE_420+3               cn=0,n=30

     1230     9496    3               CALL STORE(TYPE_420);

   9496 81 003464   000217 236000 82                 LDQ     143
        81 003465   200011 756100                    STQ     START+3,,AUTO
        81 003466   000572 701000 81                 TSX1    STORE
        81 003467   000000 011000                    NOP     0
        81 003470   006061 710000 81                 TRA     s:10312

     1231     9497    3           CASE (%ITEM_END,%DO_A_ITEM_END);

     1232     9498         /*
     1233     9499            SET SPECIAL THINGS FOR COBOL SUBSCHEMAS.
     1234     9500         */
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:192  
     1235     9501    3               IF WROTE_TYPE_9

   9501 81 003471   000102 234000 3                  SZN     WROTE_TYPE_9
        81 003472   003475 605000 81                 TPL     s:9506

     1236     9502    4               THEN DO;

     1237     9503    4                   WROTE_TYPE_9 = '0'B;

   9503 81 003473   000102 450000 3                  STZ     WROTE_TYPE_9

     1238     9504    4                   RETURN;

   9504 81 003474   000000 702200 xent               TSX2  ! X66_ARET

     1239     9505    4                   END;
     1240     9506    3               IF COMP_TYPE

   9506 81 003475   000000 234000 3                  SZN     COMP_TYPE
        81 003476   003732 605000 81                 TPL     s:9577

     1241     9507    4               THEN DO;

     1242     9508    4                   COMP_TYPE = '0'B;

   9508 81 003477   000000 450000 3                  STZ     COMP_TYPE

     1243     9509    4                   IF DESC_TYPE_9.SIGN_TYP = '000'B

   9509 81 003500   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 003501   000034 316003                    CANQ    28,DU
        81 003502   003527 601000 81                 TNZ     s:9520

     1244     9510    5                   THEN DO;

     1245     9511    5                       IF DESC_TYPE_9.PIC_HAS_S

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:193  
   9511 81 003503   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 003504   002000 316007                    CANQ    1024,DL
        81 003505   003527 600000 81                 TZE     s:9520

     1246     9512    6                       THEN DO;

     1247     9513    6                           IF DESC_TYPE_9.COMP OR DESC_TYPE_9.COMP_3

   9513 81 003506   000200 316007                    CANQ    128,DL
        81 003507   003514 601000 81                 TNZ     s:9515
        81 003510   000020 316007                    CANQ    16,DL
        81 003511   003514 601000 81                 TNZ     s:9515
        81 003512   000022 234000 64                 SZN     DESC_TYPE_9+18
        81 003513   003520 605000 81                 TPL     s:9516

     1248     9514    6                              OR DESC_TYPE_9.COMP_4
     1249     9515    6                           THEN DESC_TYPE_9.SIGN_TYP = '011'B;

   9515 81 003514   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 003515   000220 376000 82                 ANQ     144
        81 003516   000014 276003                    ORQ     12,DU
        81 003517   000022 756000 64                 STQ     DESC_TYPE_9+18

     1250     9516    6                           IF DESC_TYPE_9.DISPLAY

   9516 81 003520   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 003521   000400 316007                    CANQ    256,DL
        81 003522   003527 600000 81                 TZE     s:9520

     1251     9517    6                           THEN DESC_TYPE_9.SIGN_TYP = '001'B;

   9517 81 003523   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 003524   000220 376000 82                 ANQ     144
        81 003525   000004 276003                    ORQ     4,DU
        81 003526   000022 756000 64                 STQ     DESC_TYPE_9+18

     1252     9518    6                           END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:194  

     1253     9519    5                       END;

     1254     9520    4                   IF DESC_TYPE_9.COMP_2 OR DESC_TYPE_9.DB_KEY

   9520 81 003527   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 003530   000040 316007                    CANQ    32,DL
        81 003531   003536 601000 81                 TNZ     s:9523
        81 003532   000004 316007                    CANQ    4,DL
        81 003533   003536 601000 81                 TNZ     s:9523
        81 003534   000004 316007                    CANQ    4,DL
        81 003535   003604 600000 81                 TZE     s:9538

     1255     9521    4                      OR DESC_TYPE_9.DB_KEY
     1256     9522    5                   THEN DO;

     1257     9523    5                       IF DESC_TYPE_9.COMP_2

   9523 81 003536   000040 316007                    CANQ    32,DL
        81 003537   003543 600000 81                 TZE     s:9525

     1258     9524    5                       THEN LTDP_HOLD = 10;

   9524 81 003540   000012 235007                    LDA     10,DL
        81 003541   000000 755000 5                  STA     LTDP_HOLD
        81 003542   003545 710000 81                 TRA     s:9526

     1259     9525    5                       ELSE LTDP_HOLD = 11;

   9525 81 003543   000013 235007                    LDA     11,DL
        81 003544   000000 755000 5                  STA     LTDP_HOLD

     1260     9526    5                       LHOLD = 4;

   9526 81 003545   000004 235007                    LDA     4,DL
        81 003546   000000 755000 4                  STA     LHOLD

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:195  
     1261     9527    5                       RTDP_HOLD = 0;

   9527 81 003547   000000 450000 6                  STZ     RTDP_HOLD

     1262     9528    5                       IF DESC_TYPE_9.COMP_2 AND ~DESC_TYPE_9.SYNC_RIGHT

   9528 81 003550   000040 316007                    CANQ    32,DL
        81 003551   003572 600000 81                 TZE     s:9534
        81 003552   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 003553   000001 736000                    QLS     1
        81 003554   400000 376003                    ANQ     -131072,DU
        81 003555   400000 676003                    ERQ     -131072,DU
        81 003556   003572 600000 81                 TZE     s:9534

     1263     9529    6                       THEN DO;

     1264     9530    6                           CALL ALLOC(8,#BYTE,START);

   9530 81 003557   200006 631500                    EPPR1   START,,AUTO
        81 003560   200013 451500                    STP1    I+1,,AUTO
        81 003561   000103 236000 82                 LDQ     67
        81 003562   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 003563   000121 236000 82                 LDQ     81
        81 003564   200011 756100                    STQ     START+3,,AUTO
        81 003565   000611 701000 81                 TSX1    ALLOC
        81 003566   000000 011000                    NOP     0

     1265     9531    6                           DESC_TYPE_9.OFFSET = START;

   9531 81 003567   200006 235100                    LDA     START,,AUTO
        81 003570   000024 755000 64                 STA     DESC_TYPE_9+20

     1266     9532    6                           END;

   9532 81 003571   003604 710000 81                 TRA     s:9538

     1267     9533    6                       ELSE DO;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:196  

     1268     9534    6                           CALL ALLOC(8,#WORD,START);

   9534 81 003572   200006 631500                    EPPR1   START,,AUTO
        81 003573   200013 451500                    STP1    I+1,,AUTO
        81 003574   000121 236000 82                 LDQ     81
        81 003575   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 003576   200011 756100                    STQ     START+3,,AUTO
        81 003577   000611 701000 81                 TSX1    ALLOC
        81 003600   000000 011000                    NOP     0

     1269     9535    6                           DESC_TYPE_9.OFFSET = START * 4;

   9535 81 003601   200006 235100                    LDA     START,,AUTO
        81 003602   000002 735000                    ALS     2
        81 003603   000024 755000 64                 STA     DESC_TYPE_9+20

     1270     9536    6                           END;

     1271     9537    5                       END;

     1272     9538    4                   IF DESC_TYPE_9.COMP_1

   9538 81 003604   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 003605   000100 316007                    CANQ    64,DL
        81 003606   003644 600000 81                 TZE     s:9553

     1273     9539    5                   THEN DO;

     1274     9540    5                       LHOLD = 2;

   9540 81 003607   000002 235007                    LDA     2,DL
        81 003610   000000 755000 4                  STA     LHOLD

     1275     9541    5                       LTDP_HOLD = 5;

   9541 81 003611   000005 235007                    LDA     5,DL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:197  
        81 003612   000000 755000 5                  STA     LTDP_HOLD

     1276     9542    5                       RTDP_HOLD = 0;

   9542 81 003613   000000 450000 6                  STZ     RTDP_HOLD

     1277     9543    5                       IF DESC_TYPE_9.SYNC_RIGHT

   9543 81 003614   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 003615   200000 316003                    CANQ    65536,DU
        81 003616   003632 600000 81                 TZE     s:9549

     1278     9544    6                       THEN DO;

     1279     9545    6                           CALL ALLOC(4,#HALF_WORD,START);

   9545 81 003617   200006 630500                    EPPR0   START,,AUTO
        81 003620   200013 450500                    STP0    I+1,,AUTO
        81 003621   000222 236000 82                 LDQ     146
        81 003622   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 003623   200011 756100                    STQ     START+3,,AUTO
        81 003624   000611 701000 81                 TSX1    ALLOC
        81 003625   000000 011000                    NOP     0

     1280     9546    6                           DESC_TYPE_9.OFFSET = START * 2;

   9546 81 003626   200006 235100                    LDA     START,,AUTO
        81 003627   000001 735000                    ALS     1
        81 003630   000024 755000 64                 STA     DESC_TYPE_9+20

     1281     9547    6                           END;

   9547 81 003631   003644 710000 81                 TRA     s:9553

     1282     9548    6                       ELSE DO;

     1283     9549    6                           CALL ALLOC(4,#BYTE,START);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:198  

   9549 81 003632   200006 630500                    EPPR0   START,,AUTO
        81 003633   200013 450500                    STP0    I+1,,AUTO
        81 003634   000103 236000 82                 LDQ     67
        81 003635   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 003636   000222 236000 82                 LDQ     146
        81 003637   200011 756100                    STQ     START+3,,AUTO
        81 003640   000611 701000 81                 TSX1    ALLOC
        81 003641   000000 011000                    NOP     0

     1284     9550    6                           DESC_TYPE_9.OFFSET = START;

   9550 81 003642   200006 235100                    LDA     START,,AUTO
        81 003643   000024 755000 64                 STA     DESC_TYPE_9+20

     1285     9551    6                           END;

     1286     9552    5                       END;

     1287     9553    4                   IF DESC_TYPE_9.COMP OR DESC_TYPE_9.COMP_3 OR

   9553 81 003644   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 003645   000200 316007                    CANQ    128,DL
        81 003646   003653 601000 81                 TNZ     s:9556
        81 003647   000020 316007                    CANQ    16,DL
        81 003650   003653 601000 81                 TNZ     s:9556
        81 003651   000022 234000 64                 SZN     DESC_TYPE_9+18
        81 003652   003732 605000 81                 TPL     s:9577

     1288     9554    4                      DESC_TYPE_9.COMP_4
     1289     9555    5                   THEN DO;

     1290     9556    5                       IF DESC_TYPE_9.PIC_HAS_S

   9556 81 003653   002000 316007                    CANQ    1024,DL
        81 003654   003660 600000 81                 TZE     s:9558

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:199  
     1291     9557    5                       THEN LHOLD = LHOLD + 1;

   9557 81 003655   000000 235000 4                  LDA     LHOLD
        81 003656   000001 035007                    ADLA    1,DL
        81 003657   000000 755000 4                  STA     LHOLD

     1292     9558    5                       IF ~DESC_TYPE_9.COMP_4

   9558 81 003660   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 003661   400000 376003                    ANQ     -131072,DU
        81 003662   400000 676003                    ERQ     -131072,DU
        81 003663   003720 600000 81                 TZE     s:9572

     1293     9559    6                       THEN DO;

     1294     9560    6                           CALL ALLOC(LHOLD,#BYTE,START);

   9560 81 003664   200006 630500                    EPPR0   START,,AUTO
        81 003665   200013 450500                    STP0    I+1,,AUTO
        81 003666   000103 236000 82                 LDQ     67
        81 003667   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 003670   000223 236000 82                 LDQ     147
        81 003671   200011 756100                    STQ     START+3,,AUTO
        81 003672   000611 701000 81                 TSX1    ALLOC
        81 003673   000000 011000                    NOP     0

     1295     9561    6                           IF MOD(LHOLD,2) = 1 THEN

   9561 81 003674   000000 236000 4                  LDQ     LHOLD
        81 003675   000001 376007                    ANQ     1,DL
        81 003676   000001 116007                    CMPQ    1,DL
        81 003677   003714 601000 81                 TNZ     s:9568

     1296     9562    7                           DO;

     1297     9563    7                               DESC_TYPE_9.OFFSET = (START*2)+1;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:200  
   9563 81 003700   200006 235100                    LDA     START,,AUTO
        81 003701   000001 735000                    ALS     1
        81 003702   000001 035007                    ADLA    1,DL
        81 003703   000024 755000 64                 STA     DESC_TYPE_9+20

     1298     9564    7                               CALL ALLOC(1,#NIBLE,START);

   9564 81 003704   200006 630500                    EPPR0   START,,AUTO
        81 003705   200013 450500                    STP0    I+1,,AUTO
        81 003706   000057 236000 82                 LDQ     47
        81 003707   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 003710   200011 756100                    STQ     START+3,,AUTO
        81 003711   000611 701000 81                 TSX1    ALLOC
        81 003712   000000 011000                    NOP     0

     1299     9565    7                               END;

   9565 81 003713   003732 710000 81                 TRA     s:9577

     1300     9566    6                           ELSE
     1301     9567    7                           DO;

     1302     9568    7                               DESC_TYPE_9.OFFSET = START*2;

   9568 81 003714   200006 235100                    LDA     START,,AUTO
        81 003715   000001 735000                    ALS     1
        81 003716   000024 755000 64                 STA     DESC_TYPE_9+20

     1303     9569    7                               END;

     1304     9570    6                           END;

   9570 81 003717   003732 710000 81                 TRA     s:9577

     1305     9571    6                       ELSE DO;

     1306     9572    6                           CALL ALLOC(LHOLD,#NIBLE,START);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:201  

   9572 81 003720   200006 630500                    EPPR0   START,,AUTO
        81 003721   200013 450500                    STP0    I+1,,AUTO
        81 003722   000057 236000 82                 LDQ     47
        81 003723   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 003724   000223 236000 82                 LDQ     147
        81 003725   200011 756100                    STQ     START+3,,AUTO
        81 003726   000611 701000 81                 TSX1    ALLOC
        81 003727   000000 011000                    NOP     0

     1307     9573    6                           DESC_TYPE_9.OFFSET = START;

   9573 81 003730   200006 235100                    LDA     START,,AUTO
        81 003731   000024 755000 64                 STA     DESC_TYPE_9+20

     1308     9574    6                           END;

     1309     9575    5                       END;

     1310     9576    4                   END;

     1311     9577    3               IF SUB_LANGUAGE = #COBOL

   9577 81 003732   000000 235000 59                 LDA     SUB_LANGUAGE
        81 003733   000001 115007                    CMPA    1,DL
        81 003734   004004 601000 81                 TNZ     s:9597
        81 003735   000010 236000 64                 LDQ     DESC_TYPE_9+8
        81 003736   000200 316007                    CANQ    128,DL
        81 003737   004004 601000 81                 TNZ     s:9597
        81 003740   000100 316007                    CANQ    64,DL
        81 003741   004004 601000 81                 TNZ     s:9597

     1312     9578    3                  AND NOT(DESC_TYPE_9.FLOAT_SINGLE OR DESC_TYPE_9.FLOAT_DOUBLE)
     1313     9579    4               THEN DO;

     1314     9580    4                   IF DESC_TYPE_9.DISPLAY

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:202  
   9580 81 003742   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 003743   000400 316007                    CANQ    256,DL
        81 003744   003771 600000 81                 TZE     s:9587

     1315     9581    5                   THEN DO;

     1316     9582    5                       IF DESC_TYPE_9.SIGN_TYP = '010'B

   9582 81 003745   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 003746   000034 376003                    ANQ     28,DU
        81 003747   000010 116003                    CMPQ    8,DU
        81 003750   003754 601000 81                 TNZ     s:9584

     1317     9583    5                       THEN LHOLD=LHOLD + 1;

   9583 81 003751   000000 236000 4                  LDQ     LHOLD
        81 003752   000001 036007                    ADLQ    1,DL
        81 003753   000000 756000 4                  STQ     LHOLD

     1318     9584    5                       CALL ALLOC(LHOLD*2,#BYTE,START);

   9584 81 003754   000000 236000 4                  LDQ     LHOLD
        81 003755   000001 736000                    QLS     1
        81 003756   200031 756100                    STQ     COUNT1+11,,AUTO
        81 003757   200006 630500                    EPPR0   START,,AUTO
        81 003760   200013 450500                    STP0    I+1,,AUTO
        81 003761   000103 236000 82                 LDQ     67
        81 003762   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 003763   200031 631500                    EPPR1   COUNT1+11,,AUTO
        81 003764   200011 451500                    STP1    START+3,,AUTO
        81 003765   000611 701000 81                 TSX1    ALLOC
        81 003766   000000 011000                    NOP     0

     1319     9585    5                       DESC_TYPE_9.OFFSET = START;

   9585 81 003767   200006 235100                    LDA     START,,AUTO
        81 003770   000024 755000 64                 STA     DESC_TYPE_9+20
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:203  

     1320     9586    5                       END;

     1321     9587    4                   DESC_TYPE_9.LENGTH = LHOLD;

   9587 81 003771   000000 235000 4                  LDA     LHOLD
        81 003772   000016 755000 64                 STA     DESC_TYPE_9+14

     1322     9588    4                   IF DESC_TYPE_9.NUMERIC

   9588 81 003773   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 003774   000001 316003                    CANQ    1,DU
        81 003775   004003 600000 81                 TZE     s:9594

     1323     9589    5                   THEN DO;

     1324     9590    5                       DESC_TYPE_9.RTDP = RTDP_HOLD;

   9590 81 003776   000000 235000 6                  LDA     RTDP_HOLD
        81 003777   000020 755000 64                 STA     DESC_TYPE_9+16

     1325     9591    5                       DESC_TYPE_9.LTDP = LTDP_HOLD;

   9591 81 004000   000000 235000 5                  LDA     LTDP_HOLD
        81 004001   000017 755000 64                 STA     DESC_TYPE_9+15

     1326     9592    5                       END;

   9592 81 004002   004004 710000 81                 TRA     s:9597

     1327     9593    5                   ELSE DO;

     1328     9594    5                       DESC_TYPE_9.LTDP = LHOLD;

   9594 81 004003   000017 755000 64                 STA     DESC_TYPE_9+15

     1329     9595    5                       END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:204  

     1330     9596    4                   END;

     1331     9597    3               DESC_TYPE_9.LEVEL = SAVE_LEVEL;

   9597 81 004004   000060 235000 3                  LDA     SAVE_LEVEL
        81 004005   000012 755000 64                 STA     DESC_TYPE_9+10

     1332     9598         /*
     1333     9599                    Set the level numbers for the items.
     1334     9600         */
     1335     9601        /*
     1336     9602              Change the float for COBOL to includes COMP5A and (COMP2 or
     1337     9603            COMP3).
     1338     9604        */
     1339     9605    3               IF DESC_TYPE_9.FLOAT_SINGLE

   9605 81 004006   000010 236000 64                 LDQ     DESC_TYPE_9+8
        81 004007   000200 316007                    CANQ    128,DL
        81 004010   004017 600000 81                 TZE     s:9611

     1340     9606    4               THEN DO;

     1341     9607    4                   DESC_TYPE_9.COMP5A = '1'B;

   9607 81 004011   000020 236007                    LDQ     16,DL
        81 004012   000022 256000 64                 ORSQ    DESC_TYPE_9+18

     1342     9608    4                   DESC_TYPE_9.COMP_2 = '1'B;

   9608 81 004013   000040 236007                    LDQ     32,DL
        81 004014   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1343     9609    4                   DESC_TYPE_9.FLOAT_SINGLE = '0'B;

   9609 81 004015   000224 236000 82                 LDQ     148
        81 004016   000010 356000 64                 ANSQ    DESC_TYPE_9+8
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:205  

     1344     9610    4                   END;

     1345     9611    3               IF DESC_TYPE_9.FLOAT_DOUBLE

   9611 81 004017   000010 236000 64                 LDQ     DESC_TYPE_9+8
        81 004020   000100 316007                    CANQ    64,DL
        81 004021   004027 600000 81                 TZE     s:9617

     1346     9612    4               THEN DO;

     1347     9613    4                   DESC_TYPE_9.COMP5A = '1'B;

   9613 81 004022   000020 236007                    LDQ     16,DL
        81 004023   000022 256000 64                 ORSQ    DESC_TYPE_9+18

     1348     9614    4                   DESC_TYPE_9.COMP_3 = '1'B;

   9614 81 004024   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1349     9615    4                   DESC_TYPE_9.FLOAT_DOUBLE = '0'B;

   9615 81 004025   000225 236000 82                 LDQ     149
        81 004026   000010 356000 64                 ANSQ    DESC_TYPE_9+8

     1350     9616    4                   END;

     1351     9617    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);

   9617 81 004027   000126 630400 82                 EPPR0   86
        81 004030   000050 631400 82                 EPPR1   40
        81 004031   000000 701000 xent               TSX1    WRITSF
        81 004032   000000 011000                    NOP     0

     1352     9618    3               CURRENT_RECORD = CURRENT_RECORD + 1;

   9618 81 004033   000000 235000 63                 LDA     CURRENT_RECORD
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:206  
        81 004034   000001 035007                    ADLA    1,DL
        81 004035   000000 755000 63                 STA     CURRENT_RECORD

     1353     9619    3               TYPE_430.REF_LINE = CURRENT_RECORD - 1;

   9619 81 004036   000001 135007                    SBLA    1,DL
        81 004037   000001 755000 76                 STA     TYPE_430+1

     1354     9620    3               TYPE_430.SOUR_LINE = LINE_COUNT - 1;

   9620 81 004040   000000 236000 10                 LDQ     LINE_COUNT
        81 004041   000001 136007                    SBLQ    1,DL
        81 004042   000002 756000 76                 STQ     TYPE_430+2

     1355     9621    3               TYPE_430.OFFSET = DESC_TYPE_9.OFFSET;

   9621 81 004043   000024 235000 64                 LDA     DESC_TYPE_9+20
        81 004044   000023 755000 76                 STA     TYPE_430+19

     1356     9622         /*
     1357     9623            DATA_TYPE in the TYPE_430 descrpitor is:
     1358     9624            comp    -  signed = 4 unsigned = 3
     1359     9625            comp 4  -  signed = 4 unsigned = 3
     1360     9626            comp 3  -  signed = 5 unsigned = 3
     1361     9627            character - = 0
     1362     9628            display numeric - unsigned = 6
     1363     9629            signed sign_type = '001'b = 10
     1364     9630            signed sign_type = '010'b = 9
     1365     9631            signed sign_type = '011'b = 8
     1366     9632            signed sign_type = 7 ('100'b ????)
     1367     9633            DB-key    - = 1
     1368     9634            comp 6    - = 2 (integer!!!!)
     1369     9635            comp 1    - = 11
     1370     9636            comp 2    - = 12
     1371     9637            float single = 13
     1372     9638            float double = 14
     1373     9639            complex single = 15
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:207  
     1374     9640            complex double = 16
     1375     9641            logical        = 17
     1376     9642
     1377     9643         */
     1378     9644    3               IF DESC_TYPE_9.COMP OR DESC_TYPE_9.COMP_4

   9644 81 004045   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 004046   000200 316007                    CANQ    128,DL
        81 004047   004052 601000 81                 TNZ     s:9646
        81 004050   000022 234000 64                 SZN     DESC_TYPE_9+18
        81 004051   004062 605000 81                 TPL     s:9651

     1379     9645    4               THEN DO;

     1380     9646    4                   IF DESC_TYPE_9.PIC_HAS_S

   9646 81 004052   002000 316007                    CANQ    1024,DL
        81 004053   004057 600000 81                 TZE     s:9648

     1381     9647    4                   THEN TYPE_430.DATA_TYPE = 4;

   9647 81 004054   000004 235007                    LDA     4,DL
        81 004055   000024 755000 76                 STA     TYPE_430+20
        81 004056   004177 710000 81                 TRA     s:9697

     1382     9648    4                   ELSE TYPE_430.DATA_TYPE = 3;

   9648 81 004057   000003 235007                    LDA     3,DL
        81 004060   000024 755000 76                 STA     TYPE_430+20

     1383     9649    4                   END;

   9649 81 004061   004177 710000 81                 TRA     s:9697

     1384     9650    4               ELSE DO;

     1385     9651    4                   IF DESC_TYPE_9.COMP_3
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:208  

   9651 81 004062   000020 316007                    CANQ    16,DL
        81 004063   004074 600000 81                 TZE     s:9658

     1386     9652    5                   THEN DO;

     1387     9653    5                       IF DESC_TYPE_9.PIC_HAS_S

   9653 81 004064   002000 316007                    CANQ    1024,DL
        81 004065   004071 600000 81                 TZE     s:9655

     1388     9654    5                       THEN TYPE_430.DATA_TYPE = 5;

   9654 81 004066   000005 235007                    LDA     5,DL
        81 004067   000024 755000 76                 STA     TYPE_430+20
        81 004070   004177 710000 81                 TRA     s:9697

     1389     9655    5                       ELSE TYPE_430.DATA_TYPE = 3;

   9655 81 004071   000003 235007                    LDA     3,DL
        81 004072   000024 755000 76                 STA     TYPE_430+20

     1390     9656    5                       END;

   9656 81 004073   004177 710000 81                 TRA     s:9697

     1391     9657    5                   ELSE DO;

     1392     9658    5                       IF DESC_TYPE_9.DISPLAY

   9658 81 004074   000400 316007                    CANQ    256,DL
        81 004075   004144 600000 81                 TZE     s:9680

     1393     9659    6                       THEN DO;

     1394     9660    6                           IF ~DESC_TYPE_9.NUMERIC

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:209  
   9660 81 004076   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 004077   000021 736000                    QLS     17
        81 004100   400000 376003                    ANQ     -131072,DU
        81 004101   400000 676003                    ERQ     -131072,DU
        81 004102   004105 600000 81                 TZE     s:9663

     1395     9661    6                           THEN TYPE_430.DATA_TYPE = 0;

   9661 81 004103   000024 450000 76                 STZ     TYPE_430+20
        81 004104   004177 710000 81                 TRA     s:9697

     1396     9662    7                           ELSE DO;

     1397     9663    7                               IF DESC_TYPE_9.PIC_HAS_S

   9663 81 004105   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 004106   002000 316007                    CANQ    1024,DL
        81 004107   004141 600000 81                 TZE     s:9675

     1398     9664    8                               THEN DO;

     1399     9665    8                                   IF DESC_TYPE_9.SIGN_TYP = '001'B

   9665 81 004110   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 004111   000034 376003                    ANQ     28,DU
        81 004112   000004 116003                    CMPQ    4,DU
        81 004113   004116 601000 81                 TNZ     s:9667

     1400     9666    8                                   THEN TYPE_430.DATA_TYPE = 10;

   9666 81 004114   000012 236007                    LDQ     10,DL
        81 004115   000024 756000 76                 STQ     TYPE_430+20

     1401     9667    8                                   IF DESC_TYPE_9.SIGN_TYP = '010'B

   9667 81 004116   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 004117   000034 376003                    ANQ     28,DU
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:210  
        81 004120   000010 116003                    CMPQ    8,DU
        81 004121   004124 601000 81                 TNZ     s:9669

     1402     9668    8                                   THEN TYPE_430.DATA_TYPE = 9;

   9668 81 004122   000011 236007                    LDQ     9,DL
        81 004123   000024 756000 76                 STQ     TYPE_430+20

     1403     9669    8                                   IF DESC_TYPE_9.SIGN_TYP = '011'B

   9669 81 004124   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 004125   000034 376003                    ANQ     28,DU
        81 004126   000014 116003                    CMPQ    12,DU
        81 004127   004132 601000 81                 TNZ     s:9671

     1404     9670    8                                   THEN TYPE_430.DATA_TYPE = 8;

   9670 81 004130   000010 236007                    LDQ     8,DL
        81 004131   000024 756000 76                 STQ     TYPE_430+20

     1405     9671    8                                   IF DESC_TYPE_9.SIGN_TYP = '100'B

   9671 81 004132   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 004133   000034 376003                    ANQ     28,DU
        81 004134   000020 116003                    CMPQ    16,DU
        81 004135   004177 601000 81                 TNZ     s:9697

     1406     9672    8                                   THEN TYPE_430.DATA_TYPE = 7;

   9672 81 004136   000007 236007                    LDQ     7,DL
        81 004137   000024 756000 76                 STQ     TYPE_430+20

     1407     9673    8                                   END;

   9673 81 004140   004177 710000 81                 TRA     s:9697

     1408     9674    8                               ELSE DO;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:211  

     1409     9675    8                                   TYPE_430.DATA_TYPE = 6;

   9675 81 004141   000006 235007                    LDA     6,DL
        81 004142   000024 755000 76                 STA     TYPE_430+20

     1410     9676    8                                   END;

     1411     9677    7                               END;

     1412     9678    6                           END;

   9678 81 004143   004177 710000 81                 TRA     s:9697

     1413     9679    6                       ELSE DO;

     1414     9680    6                           IF DESC_TYPE_9.F_DBK

   9680 81 004144   000010 236000 64                 LDQ     DESC_TYPE_9+8
        81 004145   000400 316007                    CANQ    256,DL
        81 004146   004152 600000 81                 TZE     s:9683

     1415     9681    6                           THEN TYPE_430.DATA_TYPE = 1;

   9681 81 004147   000001 235007                    LDA     1,DL
        81 004150   000024 755000 76                 STA     TYPE_430+20
        81 004151   004177 710000 81                 TRA     s:9697

     1416     9682    7                           ELSE DO;

     1417     9683    7                               IF DESC_TYPE_9.DB_KEY AND ~ DESC_TYPE_9.F_DBK

   9683 81 004152   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 004153   000004 316007                    CANQ    4,DL
        81 004154   004165 600000 81                 TZE     s:9686
        81 004155   000010 236000 64                 LDQ     DESC_TYPE_9+8
        81 004156   000033 736000                    QLS     27
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:212  
        81 004157   400000 376003                    ANQ     -131072,DU
        81 004160   400000 676003                    ERQ     -131072,DU
        81 004161   004165 600000 81                 TZE     s:9686

     1418     9684    7                               THEN TYPE_430.DATA_TYPE = 2;

   9684 81 004162   000002 236007                    LDQ     2,DL
        81 004163   000024 756000 76                 STQ     TYPE_430+20
        81 004164   004177 710000 81                 TRA     s:9697

     1419     9685    8                               ELSE DO;

     1420     9686    8                                   IF DESC_TYPE_9.COMP_1

   9686 81 004165   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 004166   000100 316007                    CANQ    64,DL
        81 004167   004173 600000 81                 TZE     s:9689

     1421     9687    8                                   THEN TYPE_430.DATA_TYPE = 11;

   9687 81 004170   000013 235007                    LDA     11,DL
        81 004171   000024 755000 76                 STA     TYPE_430+20
        81 004172   004177 710000 81                 TRA     s:9697

     1422     9688    9                                   ELSE DO;

     1423     9689    9                                       IF DESC_TYPE_9.COMP_2

   9689 81 004173   000040 316007                    CANQ    32,DL
        81 004174   004177 600000 81                 TZE     s:9697

     1424     9690    9                                       THEN TYPE_430.DATA_TYPE = 12;

   9690 81 004175   000014 235007                    LDA     12,DL
        81 004176   000024 755000 76                 STA     TYPE_430+20

     1425     9691    9                                       END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:213  

     1426     9692    8                                   END;

     1427     9693    7                               END;

     1428     9694    6                           END;

     1429     9695    5                       END;

     1430     9696    4                   END;

     1431     9697    3               IF DESC_TYPE_9.FLOAT_SINGLE

   9697 81 004177   000010 236000 64                 LDQ     DESC_TYPE_9+8
        81 004200   000200 316007                    CANQ    128,DL
        81 004201   004204 600000 81                 TZE     s:9699

     1432     9698    3               THEN TYPE_430.DATA_TYPE = 13;

   9698 81 004202   000015 235007                    LDA     13,DL
        81 004203   000024 755000 76                 STA     TYPE_430+20

     1433     9699    3               IF DESC_TYPE_9.FLOAT_DOUBLE

   9699 81 004204   000100 316007                    CANQ    64,DL
        81 004205   004210 600000 81                 TZE     s:9701

     1434     9700    3               THEN TYPE_430.DATA_TYPE = 14;

   9700 81 004206   000016 235007                    LDA     14,DL
        81 004207   000024 755000 76                 STA     TYPE_430+20

     1435     9701    3               IF DESC_TYPE_9.COMP5A

   9701 81 004210   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 004211   000020 316007                    CANQ    16,DL
        81 004212   004223 600000 81                 TZE     s:9707
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:214  

     1436     9702    4               THEN DO;

     1437     9703    4                   IF DESC_TYPE_9.COMP_2

   9703 81 004213   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 004214   000040 316007                    CANQ    32,DL
        81 004215   004221 600000 81                 TZE     s:9705

     1438     9704    4                   THEN TYPE_430.DATA_TYPE = 13;

   9704 81 004216   000015 235007                    LDA     13,DL
        81 004217   000024 755000 76                 STA     TYPE_430+20
        81 004220   004223 710000 81                 TRA     s:9707

     1439     9705    4                   ELSE TYPE_430.DATA_TYPE = 14;

   9705 81 004221   000016 235007                    LDA     14,DL
        81 004222   000024 755000 76                 STA     TYPE_430+20

     1440     9706    4                   END;

     1441     9707    3               IF DESC_TYPE_9.LOGICAL

   9707 81 004223   000010 236000 64                 LDQ     DESC_TYPE_9+8
        81 004224   000010 316007                    CANQ    8,DL
        81 004225   004230 600000 81                 TZE     s:9709

     1442     9708    3               THEN TYPE_430.DATA_TYPE = 17;

   9708 81 004226   000021 235007                    LDA     17,DL
        81 004227   000024 755000 76                 STA     TYPE_430+20

     1443     9709    3               TYPE_430.LEN_FIELD = DESC_TYPE_9.LENGTH;

   9709 81 004230   000016 235000 64                 LDA     DESC_TYPE_9+14
        81 004231   000025 755000 76                 STA     TYPE_430+21
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:215  

     1444     9710    3               TYPE_430.LEVEL_FIELD = DESC_TYPE_9.LEVEL;

   9710 81 004232   000012 235000 64                 LDA     DESC_TYPE_9+10
        81 004233   000027 755000 76                 STA     TYPE_430+23

     1445     9711    3               TYPE_430.ELEMENTARY = DESC_TYPE_9.ELEMENTARY;

   9711 81 004234   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 004235   000011 736000                    QLS     9
        81 004236   000030 676000 76                 ERQ     TYPE_430+24
        81 004237   400000 376003                    ANQ     -131072,DU
        81 004240   000030 656000 76                 ERSQ    TYPE_430+24

     1446     9712    3               TYPE_430.SCALE_FIELD = DESC_TYPE_9.RTDP;

   9712 81 004241   000020 236000 64                 LDQ     DESC_TYPE_9+16
        81 004242   000026 756000 76                 STQ     TYPE_430+22

     1447     9713    3               TYPE_430.EIS.ADDER_C.REG = 1;

   9713 81 004243   000031 236000 76                 LDQ     TYPE_430+25
        81 004244   000107 376000 82                 ANQ     71
        81 004245   100000 276003                    ORQ     32768,DU
        81 004246   000031 756000 76                 STQ     TYPE_430+25

     1448     9714    3              TYPE_430.EIS.NDSC.CN = MOD(TYPE_430.OFFSET*FACTER(TYPE_430.DATA_TYPE),8)
              9714                        ;

   9714 81 004247   000024 720000 76                 LXL0    TYPE_430+20
        81 004250   000023 236000 76                 LDQ     TYPE_430+19
        81 004251   000000 402010 22                 MPY     FACTER,X0
        81 004252   000007 376007                    ANQ     7,DL
        81 004253   000017 736000                    QLS     15
        81 004254   000031 676000 76                 ERQ     TYPE_430+25
        81 004255   700000 376007                    ANQ     -32768,DL
        81 004256   000031 656000 76                 ERSQ    TYPE_430+25
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:216  

     1449     9715    3              TYPE_430.EIS.ADDER_C.OFFSET = TYPE_430.OFFSET*FACTER(TYPE_430.DATA_TYPE)
              9715                        /8;

   9715 81 004257   000023 236000 76                 LDQ     TYPE_430+19
        81 004260   000000 402010 22                 MPY     FACTER,X0
        81 004261   000003 772000                    QRL     3
        81 004262   000022 736000                    QLS     18
        81 004263   000031 676000 76                 ERQ     TYPE_430+25
        81 004264   077777 376003                    ANQ     32767,DU
        81 004265   000031 656000 76                 ERSQ    TYPE_430+25

     1450     9716    3               TYPE_430.EIS.EIS_TN_S.TN_S = TN_S(TYPE_430.DATA_TYPE);

   9716 81 004266   000024 236000 76                 LDQ     TYPE_430+20
        81 004267   000003 402007                    MPY     3,DL
        81 004270   003000 060406                    CSL     bolr='003'O
        81 004271   000034 000003 22                 BDSC    TN_S,Q                   by=0,bit=0,n=3
        81 004272   000031 430003 76                 BDSC    TYPE_430+25              by=2,bit=3,n=3

     1451     9717    3               IF DESC_TYPE_9.NUMERIC

   9717 81 004273   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 004274   000001 316003                    CANQ    1,DU
        81 004275   004320 600000 81                 TZE     s:9726

     1452     9718    4               THEN DO;

     1453     9719    4                   SSCALE = TYPE_430.SCALE_FIELD;

   9719 81 004276   000026 235000 76                 LDA     TYPE_430+22
        81 004277   000036 735000                    ALS     30
        81 004300   000101 755000 3                  STA     SSCALE

     1454     9720    4                   IF SSCALE ~= 0

   9720 81 004301   000101 236000 3                  LDQ     SSCALE
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:217  
        81 004302   770000 316003                    CANQ    -4096,DU
        81 004303   004312 600000 81                 TZE     s:9722

     1455     9721    4                   THEN SSCALE = 64 - SSCALE;

   9721 81 004304   000101 236000 3                  LDQ     SSCALE
        81 004305   000036 732000                    QRS     30
        81 004306   000201 676000 82                 ERQ     129
        81 004307   000101 036007                    ADLQ    65,DL
        81 004310   000036 736000                    QLS     30
        81 004311   000101 756000 3                  STQ     SSCALE

     1456     9722    4                   TYPE_430.EIS.NDSC.SF = SSCALE;

   9722 81 004312   000101 236000 3                  LDQ     SSCALE
        81 004313   000030 772000                    QRL     24
        81 004314   000031 752002 76                 STCQ    TYPE_430+25,'02'O

     1457     9723    4                   TYPE_430.EIS.NDSC.N = TYPE_430.LEN_FIELD;

   9723 81 004315   000025 236000 76                 LDQ     TYPE_430+21
        81 004316   000031 752001 76                 STCQ    TYPE_430+25,'01'O

     1458     9724    4                   END;

   9724 81 004317   004322 710000 81                 TRA     s:9728

     1459     9725    4               ELSE DO;

     1460     9726    4                   TYPE_430.EIS.ADSC.N = TYPE_430.LEN_FIELD;

   9726 81 004320   000025 236000 76                 LDQ     TYPE_430+21
        81 004321   000031 752003 76                 STCQ    TYPE_430+25,'03'O

     1461     9727    4                   END;

     1462     9728    3               CALL STORE(TYPE_430);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:218  

   9728 81 004322   000226 236000 82                 LDQ     150
        81 004323   200011 756100                    STQ     START+3,,AUTO
        81 004324   000572 701000 81                 TSX1    STORE
        81 004325   000000 011000                    NOP     0

     1463     9729         /*
     1464     9730            Note:
     1465     9731            The field TYPE_430.SCALE_FIELD is the number of RTDP
     1466     9732            in the DESC_TYPE_9 descriptors.
     1467     9733         */
     1468     9734    3               IF GROUP_PACKED(LARGEST_GROUP)

   9734 81 004326   000000 235000 21                 LDA     LARGEST_GROUP
        81 004327   000000 066405                    CMPB    filb='0'B
        81 004330   000000 000001 20                 BDSC    GROUP_PACKED,A           by=0,bit=0,n=1
        81 004331   000013 000022 82                 BDSC    11                       by=0,bit=0,n=18
        81 004332   006061 600000 81                 TZE     s:10312

     1469     9735    4               THEN DO;

     1470     9736    4                   IF TYPE_430.DATA_TYPE ~= 3

   9736 81 004333   000024 236000 76                 LDQ     TYPE_430+20
        81 004334   000003 116007                    CMPQ    3,DL
        81 004335   006061 600000 81                 TZE     s:10312

     1471     9737    5                   THEN DO;

     1472     9738    6                       DO I = 1 TO LARGEST_GROUP;

   9738 81 004336   000001 235007                    LDA     1,DL
        81 004337   000063 755000 3                  STA     I
        81 004340   004347 710000 81                 TRA     s:9740+2

     1473     9739    6                           GROUP_PACKED(I) = '0'B;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:219  
   9739 81 004341   000063 235000 3                  LDA     I
        81 004342   003005 060400                    CSL     bolr='003'O
        81 004343   000013 000001 82                 BDSC    11                       by=0,bit=0,n=1
        81 004344   000000 000001 20                 BDSC    GROUP_PACKED,A           by=0,bit=0,n=1

     1474     9740    6                           END;

   9740 81 004345   000001 035007                    ADLA    1,DL
        81 004346   000063 755000 3                  STA     I
        81 004347   000000 236000 21                 LDQ     LARGEST_GROUP
        81 004350   000063 116000 3                  CMPQ    I
        81 004351   004341 603000 81                 TRC     s:9739

     1475     9741    5                       GROUP_PACKED(LARGEST_GROUP) = '0'B;

   9741 81 004352   003006 060400                    CSL     bolr='003'O
        81 004353   000013 000001 82                 BDSC    11                       by=0,bit=0,n=1
        81 004354   000000 000001 20                 BDSC    GROUP_PACKED,Q           by=0,bit=0,n=1

     1476     9742    5                       END;

     1477     9743    4                   END;

   9743 81 004355   006061 710000 81                 TRA     s:10312

     1478     9744    3           CASE (%COMPLEX_S);

     1479     9745    3               DESC_TYPE_9.LENGTH = 8;

   9745 81 004356   000010 235007                    LDA     8,DL
        81 004357   000016 755000 64                 STA     DESC_TYPE_9+14

     1480     9746    3               DESC_TYPE_9.BUWA = '1'B;

   9746 81 004360   004000 236007                    LDQ     2048,DL
        81 004361   000010 256000 64                 ORSQ    DESC_TYPE_9+8

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:220  
     1481     9747    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9747 81 004362   000400 236003                    LDQ     256,DU
        81 004363   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1482     9748    3               DESC_TYPE_9.NUMERIC = '1'B;

   9748 81 004364   000001 236003                    LDQ     1,DU
        81 004365   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1483     9749    3               DESC_TYPE_9.COMPLEX = '1'B;

   9749 81 004366   000040 236007                    LDQ     32,DL
        81 004367   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1484     9750    3               CALL ALLOC(16,#DOUBLE_WORD,START);

   9750 81 004370   200006 631500                    EPPR1   START,,AUTO
        81 004371   200013 451500                    STP1    I+1,,AUTO
        81 004372   000123 236000 82                 LDQ     83
        81 004373   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 004374   200011 756100                    STQ     START+3,,AUTO
        81 004375   000611 701000 81                 TSX1    ALLOC
        81 004376   000000 011000                    NOP     0

     1485     9751    3               DESC_TYPE_9.OFFSET = START * 8;

   9751 81 004377   200006 235100                    LDA     START,,AUTO
        81 004400   000003 735000                    ALS     3
        81 004401   000024 755000 64                 STA     DESC_TYPE_9+20
        81 004402   006061 710000 81                 TRA     s:10312

     1486     9752    3           CASE (%COMPLEX_D);

     1487     9753    3               DESC_TYPE_9.LENGTH = 16;

   9753 81 004403   000020 235007                    LDA     16,DL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:221  
        81 004404   000016 755000 64                 STA     DESC_TYPE_9+14

     1488     9754    3               DESC_TYPE_9.BUWA = '1'B;

   9754 81 004405   004000 236007                    LDQ     2048,DL
        81 004406   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1489     9755    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9755 81 004407   000400 236003                    LDQ     256,DU
        81 004410   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1490     9756    3               DESC_TYPE_9.NUMERIC = '1'B;

   9756 81 004411   000001 236003                    LDQ     1,DU
        81 004412   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1491     9757    3               DESC_TYPE_9.D_COMPLEX = '1'B;

   9757 81 004413   000020 236007                    LDQ     16,DL
        81 004414   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1492     9758    3               CALL ALLOC(32,#DOUBLE_WORD,START);

   9758 81 004415   200006 631500                    EPPR1   START,,AUTO
        81 004416   200013 451500                    STP1    I+1,,AUTO
        81 004417   000123 236000 82                 LDQ     83
        81 004420   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 004421   000046 236000 82                 LDQ     38
        81 004422   200011 756100                    STQ     START+3,,AUTO
        81 004423   000611 701000 81                 TSX1    ALLOC
        81 004424   000000 011000                    NOP     0

     1493     9759    3               DESC_TYPE_9.OFFSET = START * 8;

   9759 81 004425   200006 235100                    LDA     START,,AUTO
        81 004426   000003 735000                    ALS     3
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:222  
        81 004427   000024 755000 64                 STA     DESC_TYPE_9+20
        81 004430   006061 710000 81                 TRA     s:10312

     1494     9760    3           CASE(%LEVEL_NUM);

     1495     9761    3               CALL GET_NUM(2,49);

   9761 81 004431   000230 236000 82                 LDQ     152
        81 004432   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 004433   000103 236000 82                 LDQ     67
        81 004434   200011 756100                    STQ     START+3,,AUTO
        81 004435   000077 701000 81                 TSX1    GET_NUM
        81 004436   000000 011000                    NOP     0

     1496     9762    3               IF LARGEST_GROUP >= NUM

   9762 81 004437   000000 236000 21                 LDQ     LARGEST_GROUP
        81 004440   000011 116000 3                  CMPQ    NUM
        81 004441   004446 602000 81                 TNC     s:9764

     1497     9763    3               THEN CALL UPDATE_GROUP(NUM);

   9763 81 004442   000231 236000 82                 LDQ     153
        81 004443   200011 756100                    STQ     START+3,,AUTO
        81 004444   000727 701000 81                 TSX1    UPDATE_GROUP
        81 004445   000000 011000                    NOP     0

     1498     9764    3               SAVE_LEVEL = NUM;

   9764 81 004446   000011 235000 3                  LDA     NUM
        81 004447   000060 755000 3                  STA     SAVE_LEVEL
        81 004450   006061 710000 81                 TRA     s:10312

     1499     9765    3           CASE(%DISPLAY);

     1500     9766    3               IF DISPLAY

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:223  
   9766 81 004451   000105 234000 3                  SZN     DISPLAY
        81 004452   004460 605000 81                 TPL     s:9774

     1501     9767    4               THEN DO;

     1502     9768    4                   CALL WARNING(%ZIG_SS_TWO_DISPLAY);

   9768 81 004453   000233 630400 82                 EPPR0   155
        81 004454   000000 631400 82                 EPPR1   0
        81 004455   000000 701000 xent               TSX1    WARNING
        81 004456   000000 011000                    NOP     0

     1503     9769        /*E*     ERROR:    ZIG-ZIG_SS_TWO_DISPLAY-C
     1504     9770        MESSAGE: Cannot have the keyword DISPLAY twice in a single data item.
     1505     9771        */
     1506     9772    4                   END;

   9772 81 004457   004462 710000 81                 TRA     s:9776

     1507     9773    4               ELSE DO;

     1508     9774    4                   DISPLAY = '1'B;

   9774 81 004460   400000 236003                    LDQ     -131072,DU
        81 004461   000105 756000 3                  STQ     DISPLAY

     1509     9775    4                   END;

     1510     9776    3               DESC_TYPE_9.DISPLAY = '1'B;

   9776 81 004462   000400 236007                    LDQ     256,DL
        81 004463   000021 256000 64                 ORSQ    DESC_TYPE_9+17
        81 004464   006061 710000 81                 TRA     s:10312

     1511     9777    3           CASE(%NUM); /* A COMP OF SOME KIND */

     1512     9778    3               IF NUM_BIT
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:224  

   9778 81 004465   000106 234000 3                  SZN     NUM_BIT
        81 004466   004474 605000 81                 TPL     s:9786

     1513     9779    4               THEN DO;

     1514     9780    4                   CALL WARNING(%ZIG_SS_TWO_NUM);

   9780 81 004467   000235 630400 82                 EPPR0   157
        81 004470   000000 631400 82                 EPPR1   0
        81 004471   000000 701000 xent               TSX1    WARNING
        81 004472   000000 011000                    NOP     0

     1515     9781        /*E*     ERROR:    ZIG-ZIG_SS_TWO_NUM-C
     1516     9782        MESSAGE: Cannot have the keyword COMP twice in a single data item.
     1517     9783        */
     1518     9784    4                   END;

   9784 81 004473   004476 710000 81                 TRA     s:9788

     1519     9785    4               ELSE DO;

     1520     9786    4                   NUM_BIT = '1'B;

   9786 81 004474   400000 236003                    LDQ     -131072,DU
        81 004475   000106 756000 3                  STQ     NUM_BIT

     1521     9787    4                   END;

     1522     9788    3               COMP_TYPE = '1'B;

   9788 81 004476   400000 236003                    LDQ     -131072,DU
        81 004477   000000 756000 3                  STQ     COMP_TYPE

     1523     9789    3               CALL GET_NUM(1,12);

   9789 81 004500   000237 236000 82                 LDQ     159
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:225  
        81 004501   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 004502   000057 236000 82                 LDQ     47
        81 004503   200011 756100                    STQ     START+3,,AUTO
        81 004504   000077 701000 81                 TSX1    GET_NUM
        81 004505   000000 011000                    NOP     0

     1524     9790    3               DESC_TYPE_9.BUWA = '1'B;

   9790 81 004506   004000 236007                    LDQ     2048,DL
        81 004507   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1525     9791    3               DESC_TYPE_9.DISPLAY = '0'B;

   9791 81 004510   000052 236000 82                 LDQ     42
        81 004511   000021 356000 64                 ANSQ    DESC_TYPE_9+17

     1526     9792    3               DESC_TYPE_9.NUMERIC = '1'B;

   9792 81 004512   000001 236003                    LDQ     1,DU
        81 004513   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1527     9793    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9793 81 004514   000400 236003                    LDQ     256,DU
        81 004515   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1528     9794    4               DO CASE(NUM);

   9794 81 004516   000011 235000 3                  LDA     NUM
        81 004517   000015 115007                    CMPA    13,DL
        81 004520   004522 602005 81                 TNC     s:9794+4,AL
        81 004521   004635 710000 81                 TRA     s:9825
        81 004522   004635 710000 81                 TRA     s:9825
        81 004523   004537 710000 81                 TRA     s:9796
        81 004524   004546 710000 81                 TRA     s:9800
        81 004525   004555 710000 81                 TRA     s:9804
        81 004526   004560 710000 81                 TRA     s:9806
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:226  
        81 004527   004563 710000 81                 TRA     s:9808
        81 004530   004570 710000 81                 TRA     s:9811
        81 004531   004635 710000 81                 TRA     s:9825
        81 004532   004635 710000 81                 TRA     s:9825
        81 004533   004635 710000 81                 TRA     s:9825
        81 004534   004635 710000 81                 TRA     s:9825
        81 004535   004577 710000 81                 TRA     s:9815
        81 004536   004616 710000 81                 TRA     s:9820

     1529     9795    4               CASE(1); /* COMP 1 */

     1530     9796    4                   DESC_TYPE_9.COMP_1 = '1'B;

   9796 81 004537   000100 236007                    LDQ     64,DL
        81 004540   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1531     9797    4                   DESC_TYPE_9.PIC_HAS_S = '1'B;

   9797 81 004541   002000 236007                    LDQ     1024,DL
        81 004542   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1532     9798    4                   DESC_TYPE_9.INTEGER_TYPE = '1'B;

   9798 81 004543   000002 236003                    LDQ     2,DU
        81 004544   000022 256000 64                 ORSQ    DESC_TYPE_9+18
        81 004545   006061 710000 81                 TRA     s:10312

     1533     9799    4               CASE(2); /* COMP 2 */

     1534     9800    4                   DESC_TYPE_9.COMP_2 = '1'B;

   9800 81 004546   000040 236007                    LDQ     32,DL
        81 004547   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1535     9801    4                   DESC_TYPE_9.PIC_HAS_S = '1'B;

   9801 81 004550   002000 236007                    LDQ     1024,DL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:227  
        81 004551   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1536     9802    4                   DESC_TYPE_9.INTEGER_TYPE = '1'B;

   9802 81 004552   000002 236003                    LDQ     2,DU
        81 004553   000022 256000 64                 ORSQ    DESC_TYPE_9+18
        81 004554   006061 710000 81                 TRA     s:10312

     1537     9803    4               CASE(3); /* COMP 3 */

     1538     9804    4                   DESC_TYPE_9.COMP_3 = '1'B;

   9804 81 004555   000020 236007                    LDQ     16,DL
        81 004556   000021 256000 64                 ORSQ    DESC_TYPE_9+17
        81 004557   006061 710000 81                 TRA     s:10312

     1539     9805    4               CASE(4); /* COMP 4 */

     1540     9806    4                   DESC_TYPE_9.COMP_4 = '1'B;

   9806 81 004560   400000 236003                    LDQ     -131072,DU
        81 004561   000022 256000 64                 ORSQ    DESC_TYPE_9+18
        81 004562   006061 710000 81                 TRA     s:10312

     1541     9807    4               CASE(5); /* COMP 5 */

     1542     9808    4                   DESC_TYPE_9.COMP_4 = '1'B;

   9808 81 004563   400000 236003                    LDQ     -131072,DU
        81 004564   000022 256000 64                 ORSQ    DESC_TYPE_9+18

     1543     9809    4                   DESC_TYPE_9.JUST_RIGHT = '1'B;

   9809 81 004565   000001 236007                    LDQ     1,DL
        81 004566   000021 256000 64                 ORSQ    DESC_TYPE_9+17
        81 004567   006061 710000 81                 TRA     s:10312

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:228  
     1544     9810    4               CASE(6); /* COMP 6 */

     1545     9811    4                   DESC_TYPE_9.DB_KEY = '1'B;

   9811 81 004570   000004 236007                    LDQ     4,DL
        81 004571   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1546     9812    4                   DESC_TYPE_9.PIC_HAS_S = '1'B;

   9812 81 004572   002000 236007                    LDQ     1024,DL
        81 004573   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1547     9813    4                   DESC_TYPE_9.INTEGER_TYPE = '1'B;

   9813 81 004574   000002 236003                    LDQ     2,DU
        81 004575   000022 256000 64                 ORSQ    DESC_TYPE_9+18
        81 004576   006061 710000 81                 TRA     s:10312

     1548     9814    4               CASE(11); /* COMP-11 SINGLE FLOAT */

     1549     9815    4                   DESC_TYPE_9.FLOAT_SINGLE = '1'B;

   9815 81 004577   000200 236007                    LDQ     128,DL
        81 004600   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1550     9816    4                   DESC_TYPE_9.LENGTH = 4;

   9816 81 004601   000004 235007                    LDA     4,DL
        81 004602   000016 755000 64                 STA     DESC_TYPE_9+14

     1551     9817    4                   CALL ALLOC(8,#WORD,START);

   9817 81 004603   200006 630500                    EPPR0   START,,AUTO
        81 004604   200013 450500                    STP0    I+1,,AUTO
        81 004605   000121 236000 82                 LDQ     81
        81 004606   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 004607   200011 756100                    STQ     START+3,,AUTO
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:229  
        81 004610   000611 701000 81                 TSX1    ALLOC
        81 004611   000000 011000                    NOP     0

     1552     9818    4                   DESC_TYPE_9.OFFSET = START * 4;

   9818 81 004612   200006 235100                    LDA     START,,AUTO
        81 004613   000002 735000                    ALS     2
        81 004614   000024 755000 64                 STA     DESC_TYPE_9+20
        81 004615   006061 710000 81                 TRA     s:10312

     1553     9819    4               CASE(12); /* COMP-12 DOUBLE FLOAT */

     1554     9820    4                   DESC_TYPE_9.FLOAT_DOUBLE = '1'B;

   9820 81 004616   000100 236007                    LDQ     64,DL
        81 004617   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1555     9821    4                   DESC_TYPE_9.LENGTH = 8;

   9821 81 004620   000010 235007                    LDA     8,DL
        81 004621   000016 755000 64                 STA     DESC_TYPE_9+14

     1556     9822    4                   CALL ALLOC(16,#DOUBLE_WORD,START);

   9822 81 004622   200006 630500                    EPPR0   START,,AUTO
        81 004623   200013 450500                    STP0    I+1,,AUTO
        81 004624   000123 236000 82                 LDQ     83
        81 004625   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 004626   200011 756100                    STQ     START+3,,AUTO
        81 004627   000611 701000 81                 TSX1    ALLOC
        81 004630   000000 011000                    NOP     0

     1557     9823    4                   DESC_TYPE_9.OFFSET = START * 8;

   9823 81 004631   200006 235100                    LDA     START,,AUTO
        81 004632   000003 735000                    ALS     3
        81 004633   000024 755000 64                 STA     DESC_TYPE_9+20
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:230  
        81 004634   006061 710000 81                 TRA     s:10312

     1558     9824    4               CASE (ELSE);

     1559     9825    4                   CALL ERROR(%ZIG_SSTRANS_BAD_COMP);

   9825 81 004635   000241 630400 82                 EPPR0   161
        81 004636   000000 631400 82                 EPPR1   0
        81 004637   000000 701000 xent               TSX1    ERROR
        81 004640   000000 011000                    NOP     0

     1560     9826        /*E*     ERROR:    ZIG-ZIG_SSTRANS_BAD_COMP-C
     1561     9827        MESSAGE: The above COMP type is not a legal COBOL data type.
     1562     9828        */
     1563     9829    4                   END;

   9829 81 004641   006061 710000 81                 TRA     s:10312

     1564     9830    3           CASE(%COMP); /* COMP */

     1565     9831    3               IF COMP

   9831 81 004642   000107 234000 3                  SZN     COMP
        81 004643   004651 605000 81                 TPL     s:9839

     1566     9832    4               THEN DO;

     1567     9833    4                   CALL WARNING(%ZIG_SS_TWO_COMP);

   9833 81 004644   000243 630400 82                 EPPR0   163
        81 004645   000000 631400 82                 EPPR1   0
        81 004646   000000 701000 xent               TSX1    WARNING
        81 004647   000000 011000                    NOP     0

     1568     9834        /*E*     ERROR:    ZIG-ZIG_SS_TWO_COMP-C
     1569     9835        MESSAGE: Cannot have the keyword COMP twice in a single data item.
     1570     9836        */
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:231  
     1571     9837    4                   END;

   9837 81 004650   004653 710000 81                 TRA     s:9841

     1572     9838    4               ELSE DO;

     1573     9839    4                   COMP = '1'B;

   9839 81 004651   400000 236003                    LDQ     -131072,DU
        81 004652   000107 756000 3                  STQ     COMP

     1574     9840    4                   END;

     1575     9841    3               DESC_TYPE_9.BUWA = '1'B;

   9841 81 004653   004000 236007                    LDQ     2048,DL
        81 004654   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1576     9842    3               DESC_TYPE_9.DISPLAY = '0'B;

   9842 81 004655   000052 236000 82                 LDQ     42
        81 004656   000021 356000 64                 ANSQ    DESC_TYPE_9+17

     1577     9843    3               DESC_TYPE_9.COMP = '1'B;

   9843 81 004657   000200 236007                    LDQ     128,DL
        81 004660   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1578     9844    3               COMP_TYPE = '1'B;

   9844 81 004661   400000 236003                    LDQ     -131072,DU
        81 004662   000000 756000 3                  STQ     COMP_TYPE

     1579     9845    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9845 81 004663   000400 236003                    LDQ     256,DU
        81 004664   000021 256000 64                 ORSQ    DESC_TYPE_9+17
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:232  
        81 004665   006061 710000 81                 TRA     s:10312

     1580     9846    3           CASE(%LEFT); /* LEFT SYNCHRONIZED */

     1581     9847    3               IF LEFT

   9847 81 004666   000110 234000 3                  SZN     LEFT
        81 004667   004675 605000 81                 TPL     s:9855

     1582     9848    4               THEN DO;

     1583     9849    4                   CALL WARNING(%ZIG_SS_TWO_LEFT);

   9849 81 004670   000245 630400 82                 EPPR0   165
        81 004671   000000 631400 82                 EPPR1   0
        81 004672   000000 701000 xent               TSX1    WARNING
        81 004673   000000 011000                    NOP     0

     1584     9850        /*E*     ERROR:    ZIG-ZIG_SS_TWO_LEFT-C
     1585     9851        MESSAGE: Cannot have the keyword LEFT twice in a single data item.
     1586     9852        */
     1587     9853    4                   END;

   9853 81 004674   004677 710000 81                 TRA     s:9857

     1588     9854    4               ELSE DO;

     1589     9855    4                   LEFT = '1'B;

   9855 81 004675   400000 236003                    LDQ     -131072,DU
        81 004676   000110 756000 3                  STQ     LEFT

     1590     9856    4                   END;

     1591     9857    3               DESC_TYPE_9.SYNC_RIGHT = '0'B;

   9857 81 004677   000007 236000 82                 LDQ     7
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:233  
        81 004700   000022 356000 64                 ANSQ    DESC_TYPE_9+18
        81 004701   006061 710000 81                 TRA     s:10312

     1592     9858    3           CASE(%RIGHT); /* RIGHT SYNCHRONIZED */

     1593     9859    3               IF RIGHT

   9859 81 004702   000111 234000 3                  SZN     RIGHT
        81 004703   004711 605000 81                 TPL     s:9867

     1594     9860    4               THEN DO;

     1595     9861    4                   CALL WARNING(%ZIG_SS_TWO_RIGHT);

   9861 81 004704   000247 630400 82                 EPPR0   167
        81 004705   000000 631400 82                 EPPR1   0
        81 004706   000000 701000 xent               TSX1    WARNING
        81 004707   000000 011000                    NOP     0

     1596     9862        /*E*     ERROR:    ZIG-ZIG_SS_TWO_RIGHT-C
     1597     9863        MESSAGE: Cannot have the keyword RIGHT twice in a single data item.
     1598     9864        */
     1599     9865    4                   END;

   9865 81 004710   004713 710000 81                 TRA     s:9869

     1600     9866    4               ELSE DO;

     1601     9867    4                   RIGHT = '1'B;

   9867 81 004711   400000 236003                    LDQ     -131072,DU
        81 004712   000111 756000 3                  STQ     RIGHT

     1602     9868    4                   END;

     1603     9869    3               DESC_TYPE_9.SYNC_RIGHT = '1'B;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:234  
   9869 81 004713   200000 236003                    LDQ     65536,DU
        81 004714   000022 256000 64                 ORSQ    DESC_TYPE_9+18
        81 004715   006061 710000 81                 TRA     s:10312

     1604     9870    3           CASE(%LEADING); /* SIGN IS LEADING */

     1605     9871    3               IF LEADING

   9871 81 004716   000112 234000 3                  SZN     LEADING
        81 004717   004725 605000 81                 TPL     s:9879

     1606     9872    4               THEN DO;

     1607     9873    4                   CALL WARNING(%ZIG_SS_TWO_LEADING);

   9873 81 004720   000251 630400 82                 EPPR0   169
        81 004721   000000 631400 82                 EPPR1   0
        81 004722   000000 701000 xent               TSX1    WARNING
        81 004723   000000 011000                    NOP     0

     1608     9874        /*E*     ERROR:    ZIG-ZIG_SS_TWO_LEADING-C
     1609     9875        MESSAGE: Cannot have the keyword LEADING twice in a single data item.
     1610     9876        */
     1611     9877    4                   END;

   9877 81 004724   004727 710000 81                 TRA     s:9881

     1612     9878    4               ELSE DO;

     1613     9879    4                   LEADING = '1'B;

   9879 81 004725   400000 236003                    LDQ     -131072,DU
        81 004726   000112 756000 3                  STQ     LEADING

     1614     9880    4                   END;

     1615     9881    3               DESC_TYPE_9.SIGN_TYP = '010'B;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:235  

   9881 81 004727   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 004730   000220 376000 82                 ANQ     144
        81 004731   000010 276003                    ORQ     8,DU
        81 004732   000022 756000 64                 STQ     DESC_TYPE_9+18
        81 004733   006061 710000 81                 TRA     s:10312

     1616     9882    3           CASE(%TRAILING); /* SIGN IS TRAILING */

     1617     9883    3               IF TRAILING

   9883 81 004734   000113 234000 3                  SZN     TRAILING
        81 004735   004743 605000 81                 TPL     s:9891

     1618     9884    4               THEN DO;

     1619     9885    4                   CALL WARNING(%ZIG_SS_TWO_TRAILING);

   9885 81 004736   000253 630400 82                 EPPR0   171
        81 004737   000000 631400 82                 EPPR1   0
        81 004740   000000 701000 xent               TSX1    WARNING
        81 004741   000000 011000                    NOP     0

     1620     9886        /*E*     ERROR:    ZIG-ZIG_SS_TWO_TRAILING-C
     1621     9887        MESSAGE: Cannot have the keyword TRAILING twice in a single data item.
     1622     9888        */
     1623     9889    4                   END;

   9889 81 004742   004745 710000 81                 TRA     s:9893

     1624     9890    4               ELSE DO;

     1625     9891    4                   TRAILING = '1'B;

   9891 81 004743   400000 236003                    LDQ     -131072,DU
        81 004744   000113 756000 3                  STQ     TRAILING

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:236  
     1626     9892    4                   END;

     1627     9893    3               DESC_TYPE_9.SIGN_TYP = '001'B;

   9893 81 004745   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 004746   000220 376000 82                 ANQ     144
        81 004747   000004 276003                    ORQ     4,DU
        81 004750   000022 756000 64                 STQ     DESC_TYPE_9+18
        81 004751   006061 710000 81                 TRA     s:10312

     1628     9894    3           CASE (%SEPARATE); /* SIGN IS SEPARATE */

     1629     9895    3               IF SEPARATE

   9895 81 004752   000114 234000 3                  SZN     SEPARATE
        81 004753   004761 605000 81                 TPL     s:9903

     1630     9896    4               THEN DO;

     1631     9897    4                   CALL WARNING(%ZIG_SS_TWO_SEPARATE);

   9897 81 004754   000255 630400 82                 EPPR0   173
        81 004755   000000 631400 82                 EPPR1   0
        81 004756   000000 701000 xent               TSX1    WARNING
        81 004757   000000 011000                    NOP     0

     1632     9898        /*E*     ERROR:    ZIG-ZIG_SS_TWO_SEPARATE-C
     1633     9899        MESSAGE: Cannot have the keyword SEPARATE twice in a single data item.
     1634     9900        */
     1635     9901    4                   END;

   9901 81 004760   004763 710000 81                 TRA     s:9905

     1636     9902    4               ELSE DO;

     1637     9903    4                   SEPARATE = '1'B;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:237  
   9903 81 004761   400000 236003                    LDQ     -131072,DU
        81 004762   000114 756000 3                  STQ     SEPARATE

     1638     9904    4                   END;

     1639     9905    3               IF DESC_TYPE_9.SIGN_TYP = '001'B

   9905 81 004763   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 004764   000034 376003                    ANQ     28,DU
        81 004765   000004 116003                    CMPQ    4,DU
        81 004766   004774 601000 81                 TNZ     s:9907

     1640     9906    3               THEN DESC_TYPE_9.SIGN_TYP = '011'B;

   9906 81 004767   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 004770   000220 376000 82                 ANQ     144
        81 004771   000014 276003                    ORQ     12,DU
        81 004772   000022 756000 64                 STQ     DESC_TYPE_9+18
        81 004773   006061 710000 81                 TRA     s:10312

     1641     9907    3               ELSE DESC_TYPE_9.SIGN_TYP = '100'B;

   9907 81 004774   000022 236000 64                 LDQ     DESC_TYPE_9+18
        81 004775   000220 376000 82                 ANQ     144
        81 004776   000020 276003                    ORQ     16,DU
        81 004777   000022 756000 64                 STQ     DESC_TYPE_9+18
        81 005000   006061 710000 81                 TRA     s:10312

     1642     9908    3           CASE(%PIC_STR);

     1643     9909    3               IF PIC_STR

   9909 81 005001   000115 234000 3                  SZN     PIC_STR
        81 005002   005010 605000 81                 TPL     s:9917

     1644     9910    4               THEN DO;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:238  
     1645     9911    4                   CALL WARNING(%ZIG_SS_TWO_PIC_STR);

   9911 81 005003   000257 630400 82                 EPPR0   175
        81 005004   000000 631400 82                 EPPR1   0
        81 005005   000000 701000 xent               TSX1    WARNING
        81 005006   000000 011000                    NOP     0

     1646     9912        /*E*     ERROR:    ZIG-ZIG_SS_TWO_PIC_STR-C
     1647     9913        MESSAGE: Cannot have the keywords PICTURE STRING twice in a single data item.
     1648     9914        */
     1649     9915    4                   END;

   9915 81 005007   005012 710000 81                 TRA     s:9919

     1650     9916    4               ELSE DO;

     1651     9917    4                   PIC_STR = '1'B;

   9917 81 005010   400000 236003                    LDQ     -131072,DU
        81 005011   000115 756000 3                  STQ     PIC_STR

     1652     9918    4                   END;

     1653     9919    3               CALL GET_WORD;

   9919 81 005012   000003 701000 81                 TSX1    GET_WORD
        81 005013   000000 011000                    NOP     0

     1654     9920    3               NUM = FIELD1.COUNT1;

   9920 81 005014   000000 236000 7                  LDQ     FIELD1
        81 005015   000033 772000                    QRL     27
        81 005016   000011 756000 3                  STQ     NUM

     1655     9921    3               DESC_TYPE_9.BUWA = '1'B;

   9921 81 005017   004000 236007                    LDQ     2048,DL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:239  
        81 005020   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1656     9922    3               DESC_TYPE_9.ELEMENTARY = '1'B;

   9922 81 005021   000400 236003                    LDQ     256,DU
        81 005022   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1657     9923    3               COMP_TYPE = '1'B;

   9923 81 005023   400000 236003                    LDQ     -131072,DU
        81 005024   000000 756000 3                  STQ     COMP_TYPE

     1658     9924    3               IF ~DESC_TYPE_9.COMP_1 AND ~DESC_TYPE_9.COMP_2 AND

   9924 81 005025   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 005026   000035 736000                    QLS     29
        81 005027   400000 376003                    ANQ     -131072,DU
        81 005030   400000 676003                    ERQ     -131072,DU
        81 005031   006061 600000 81                 TZE     s:10312
        81 005032   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 005033   000036 736000                    QLS     30
        81 005034   400000 376003                    ANQ     -131072,DU
        81 005035   400000 676003                    ERQ     -131072,DU
        81 005036   006061 600000 81                 TZE     s:10312
        81 005037   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 005040   000041 736000                    QLS     33
        81 005041   400000 376003                    ANQ     -131072,DU
        81 005042   400000 676003                    ERQ     -131072,DU
        81 005043   006061 600000 81                 TZE     s:10312

     1659     9925    3                  ~DESC_TYPE_9.DB_KEY
     1660     9926    3               THEN CALL ZIG$SS_PIC(NUM,WORD1);

   9926 81 005044   000260 630400 82                 EPPR0   176
        81 005045   000050 631400 82                 EPPR1   40
        81 005046   000000 701000 xent               TSX1    ZIG$SS_PIC
        81 005047   000000 011000                    NOP     0
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:240  
        81 005050   006061 710000 81                 TRA     s:10312

     1661     9927    3           CASE(%USAGE_IS);

     1662     9928    3               IF COMP OR NUM_BIT

   9928 81 005051   000107 234000 3                  SZN     COMP
        81 005052   005055 604000 81                 TMI     s:9930
        81 005053   000106 234000 3                  SZN     NUM_BIT
        81 005054   005062 605000 81                 TPL     s:9936

     1663     9929    4               THEN DO;

     1664     9930    4                   CALL WARNING(%ZIG_SS_TWO_USAGE_IS);

   9930 81 005055   000263 630400 82                 EPPR0   179
        81 005056   000000 631400 82                 EPPR1   0
        81 005057   000000 701000 xent               TSX1    WARNING
        81 005060   000000 011000                    NOP     0

     1665     9931        /*E*     ERROR:    ZIG-ZIG_SS_TWO_USAGE_IS-C
     1666     9932        MESSAGE: The keywords USAGE IS are out of place.
     1667     9933        */
     1668     9934    4                   END;

   9934 81 005061   006061 710000 81                 TRA     s:10312

     1669     9935    4               ELSE DO;

     1670     9936    4                   USAGE_IS = '1'B;

   9936 81 005062   400000 236003                    LDQ     -131072,DU
        81 005063   000103 756000 3                  STQ     USAGE_IS

     1671     9937    4                   END;

   9937 81 005064   006061 710000 81                 TRA     s:10312
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:241  

     1672     9938    3           CASE(%GROUP_ITEM);

     1673     9939        /*
     1674     9940              This is a poorly implimented way to do group items, but it
     1675     9941            was the only way I could think of and keep the subschema
     1676     9942            translate a one past compiler.
     1677     9943
     1678     9944            NUM - has the level number of the group item still in it.
     1679     9945            WORD1 - has the name of the group in it.
     1680     9946            FIELD1.COUNT1 - still has the length of word1 in it.
     1681     9947            LAST_GROUP - contains the record number of were the last
     1682     9948                         group was.
     1683     9949        */
     1684     9950    3               CALL ALLOC(0,#BYTE,START);

   9950 81 005065   200006 631500                    EPPR1   START,,AUTO
        81 005066   200013 451500                    STP1    I+1,,AUTO
        81 005067   000103 236000 82                 LDQ     67
        81 005070   200012 756100                    STQ     @START_LEVEL+1,,AUTO
        81 005071   000021 236000 82                 LDQ     17
        81 005072   200011 756100                    STQ     START+3,,AUTO
        81 005073   000611 701000 81                 TSX1    ALLOC
        81 005074   000000 011000                    NOP     0

     1685     9951    3               GROUP_PACKED(NUM) = '1'B;

   9951 81 005075   000011 235000 3                  LDA     NUM
        81 005076   003005 060400                    CSL     bolr='003'O
        81 005077   000264 000001 82                 BDSC    180                      by=0,bit=0,n=1
        81 005100   000000 000001 20                 BDSC    GROUP_PACKED,A           by=0,bit=0,n=1

     1686     9952    3               CALL INIT_TYPE_9;

   9952 81 005101   000151 701000 81                 TSX1    INIT_TYPE_9
        81 005102   000000 011000                    NOP     0

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:242  
     1687     9953    3               WROTE_TYPE_9 = '1'B;

   9953 81 005103   400000 236003                    LDQ     -131072,DU
        81 005104   000102 756000 3                  STQ     WROTE_TYPE_9

     1688     9954    3               DESC_TYPE_9.NAME = WORD1;

   9954 81 005105   040000 100400                    MLR     fill='040'O
        81 005106   000001 000036 3                  ADSC9   WORD1                    cn=0,n=30
        81 005107   000030 000036 64                 ADSC9   DESC_TYPE_9+24           cn=0,n=30

     1689     9955    3               DESC_TYPE_9.NAME_SIZE = FIELD1.COUNT1;

   9955 81 005110   000000 236000 7                  LDQ     FIELD1
        81 005111   000033 772000                    QRL     27
        81 005112   000027 756000 64                 STQ     DESC_TYPE_9+23

     1690     9956    3               DESC_TYPE_9.RPT_CODE_NUM = SAVE_RECORD_OFFSET / 2;

   9956 81 005113   000057 236000 3                  LDQ     SAVE_RECORD_OFFSET
        81 005114   000001 772000                    QRL     1
        81 005115   000023 756000 64                 STQ     DESC_TYPE_9+19

     1691     9957    3               DESC_TYPE_9.FLD_NM = '1'B;

   9957 81 005116   020000 236007                    LDQ     8192,DL
        81 005117   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1692     9958    3               DESC_TYPE_9.BUWA = '1'B;

   9958 81 005120   004000 236007                    LDQ     2048,DL
        81 005121   000010 256000 64                 ORSQ    DESC_TYPE_9+8

     1693     9959    3               DESC_TYPE_9.LEVEL = NUM;

   9959 81 005122   000011 235000 3                  LDA     NUM
        81 005123   000012 755000 64                 STA     DESC_TYPE_9+10
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:243  

     1694     9960    3               DESC_TYPE_9.NON_ELEMENTARY = '1'B;

   9960 81 005124   001000 236003                    LDQ     512,DU
        81 005125   000021 256000 64                 ORSQ    DESC_TYPE_9+17

     1695     9961    3               DESC_TYPE_9.OFFSET = UWA_ALLOC / 2;

   9961 81 005126   000000 236000 13                 LDQ     UWA_ALLOC
        81 005127   000001 772000                    QRL     1
        81 005130   000024 756000 64                 STQ     DESC_TYPE_9+20

     1696     9962    3               DESC_TYPE_9.LENGTH = UWA_ALLOC;

   9962 81 005131   000000 235000 13                 LDA     UWA_ALLOC
        81 005132   000016 755000 64                 STA     DESC_TYPE_9+14

     1697     9963    3               LAST_GROUP(NUM) = CURRENT_RECORD;

   9963 81 005133   000011 720000 3                  LXL0    NUM
        81 005134   000000 235000 63                 LDA     CURRENT_RECORD
        81 005135   000000 755010 19                 STA     LAST_GROUP,X0

     1698     9964    3               LARGEST_GROUP = NUM;

   9964 81 005136   000011 235000 3                  LDA     NUM
        81 005137   000000 755000 21                 STA     LARGEST_GROUP

     1699     9965    3               CALL WRITSF(CURRENT_RECORD,DESC_TYPE_9);

   9965 81 005140   000126 630400 82                 EPPR0   86
        81 005141   000050 631400 82                 EPPR1   40
        81 005142   000000 701000 xent               TSX1    WRITSF
        81 005143   000000 011000                    NOP     0

     1700     9966    3               CURRENT_RECORD = CURRENT_RECORD + 1;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:244  
   9966 81 005144   000000 235000 63                 LDA     CURRENT_RECORD
        81 005145   000001 035007                    ADLA    1,DL
        81 005146   000000 755000 63                 STA     CURRENT_RECORD

     1701     9967    3               TYPE_430.REF_LINE = CURRENT_RECORD - 1;

   9967 81 005147   000001 135007                    SBLA    1,DL
        81 005150   000001 755000 76                 STA     TYPE_430+1

     1702     9968    3               TYPE_430.SOUR_LINE = LINE_COUNT - 1;

   9968 81 005151   000000 236000 10                 LDQ     LINE_COUNT
        81 005152   000001 136007                    SBLQ    1,DL
        81 005153   000002 756000 76                 STQ     TYPE_430+2

     1703     9969    3               TYPE_430.OFFSET = DESC_TYPE_9.OFFSET;

   9969 81 005154   000024 235000 64                 LDA     DESC_TYPE_9+20
        81 005155   000023 755000 76                 STA     TYPE_430+19

     1704     9970    3               TYPE_430.DATA_TYPE = 0;

   9970 81 005156   000024 450000 76                 STZ     TYPE_430+20

     1705     9971    3               TYPE_430.ELEMENTARY = '0'B;

   9971 81 005157   000005 236000 82                 LDQ     5
        81 005160   000030 356000 76                 ANSQ    TYPE_430+24

     1706     9972    3               TYPE_430.LEVEL_FIELD = NUM;

   9972 81 005161   000011 235000 3                  LDA     NUM
        81 005162   000027 755000 76                 STA     TYPE_430+23

     1707     9973    3               TYPE_430.SCALE_FIELD = 0;

   9973 81 005163   000026 450000 76                 STZ     TYPE_430+22
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:245  

     1708     9974    3               TYPE_430.EIS.ADDER_C.REG = 1;

   9974 81 005164   000031 236000 76                 LDQ     TYPE_430+25
        81 005165   000107 376000 82                 ANQ     71
        81 005166   100000 276003                    ORQ     32768,DU
        81 005167   000031 756000 76                 STQ     TYPE_430+25

     1709     9975    3              TYPE_430.EIS.NDSC.CN = MOD(TYPE_430.OFFSET*FACTER(TYPE_430.DATA_TYPE),8)
              9975                        ;

   9975 81 005170   000024 720000 76                 LXL0    TYPE_430+20
        81 005171   000023 236000 76                 LDQ     TYPE_430+19
        81 005172   000000 402010 22                 MPY     FACTER,X0
        81 005173   000007 376007                    ANQ     7,DL
        81 005174   000017 736000                    QLS     15
        81 005175   000031 676000 76                 ERQ     TYPE_430+25
        81 005176   700000 376007                    ANQ     -32768,DL
        81 005177   000031 656000 76                 ERSQ    TYPE_430+25

     1710     9976    3              TYPE_430.EIS.ADDER_C.OFFSET = TYPE_430.OFFSET*FACTER(TYPE_430.DATA_TYPE)
              9976                        /8;

   9976 81 005200   000023 236000 76                 LDQ     TYPE_430+19
        81 005201   000000 402010 22                 MPY     FACTER,X0
        81 005202   000003 772000                    QRL     3
        81 005203   000022 736000                    QLS     18
        81 005204   000031 676000 76                 ERQ     TYPE_430+25
        81 005205   077777 376003                    ANQ     32767,DU
        81 005206   000031 656000 76                 ERSQ    TYPE_430+25

     1711     9977    3               TYPE_430.EIS.EIS_TN_S.TN_S = TN_S(TYPE_430.DATA_TYPE);

   9977 81 005207   000024 236000 76                 LDQ     TYPE_430+20
        81 005210   000003 402007                    MPY     3,DL
        81 005211   003000 060406                    CSL     bolr='003'O
        81 005212   000034 000003 22                 BDSC    TN_S,Q                   by=0,bit=0,n=3
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:246  
        81 005213   000031 430003 76                 BDSC    TYPE_430+25              by=2,bit=3,n=3

     1712     9978    3               IF DESC_TYPE_9.NUMERIC

   9978 81 005214   000021 236000 64                 LDQ     DESC_TYPE_9+17
        81 005215   000001 316003                    CANQ    1,DU
        81 005216   005241 600000 81                 TZE     s:9987

     1713     9979    4               THEN DO;

     1714     9980    4                   SSCALE = TYPE_430.SCALE_FIELD;

   9980 81 005217   000026 235000 76                 LDA     TYPE_430+22
        81 005220   000036 735000                    ALS     30
        81 005221   000101 755000 3                  STA     SSCALE

     1715     9981    4                   IF SSCALE ~= 0

   9981 81 005222   000101 236000 3                  LDQ     SSCALE
        81 005223   770000 316003                    CANQ    -4096,DU
        81 005224   005233 600000 81                 TZE     s:9983

     1716     9982    4                   THEN SSCALE = 64 - SSCALE;

   9982 81 005225   000101 236000 3                  LDQ     SSCALE
        81 005226   000036 732000                    QRS     30
        81 005227   000201 676000 82                 ERQ     129
        81 005230   000101 036007                    ADLQ    65,DL
        81 005231   000036 736000                    QLS     30
        81 005232   000101 756000 3                  STQ     SSCALE

     1717     9983    4                   TYPE_430.EIS.NDSC.SF = SSCALE;

   9983 81 005233   000101 236000 3                  LDQ     SSCALE
        81 005234   000030 772000                    QRL     24
        81 005235   000031 752002 76                 STCQ    TYPE_430+25,'02'O

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:247  
     1718     9984    4                   TYPE_430.EIS.NDSC.N = TYPE_430.LEN_FIELD;

   9984 81 005236   000025 236000 76                 LDQ     TYPE_430+21
        81 005237   000031 752001 76                 STCQ    TYPE_430+25,'01'O

     1719     9985    4                   END;

   9985 81 005240   005243 710000 81                 TRA     s:9989

     1720     9986    4               ELSE DO;

     1721     9987    4                   TYPE_430.EIS.ADSC.N = TYPE_430.LEN_FIELD;

   9987 81 005241   000025 236000 76                 LDQ     TYPE_430+21
        81 005242   000031 752003 76                 STCQ    TYPE_430+25,'03'O

     1722     9988    4                   END;

     1723     9989    3               TYPE_430.LEN_FIELD = 0;

   9989 81 005243   000025 450000 76                 STZ     TYPE_430+21

     1724     9990    3               CALL STORE(TYPE_430);

   9990 81 005244   000226 236000 82                 LDQ     150
        81 005245   200011 756100                    STQ     START+3,,AUTO
        81 005246   000572 701000 81                 TSX1    STORE
        81 005247   000000 011000                    NOP     0
        81 005250   006061 710000 81                 TRA     s:10312

     1725     9991    3           CASE(%TITLE_DIV);

     1726     9992    3               IF TITLE_DIV

   9992 81 005251   000000 234000 23                 SZN     TITLE_DIV
        81 005252   005260 605000 81                 TPL     s:10000

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:248  
     1727     9993    4               THEN DO;

     1728     9994    4                   CALL ERROR(%ZIG_SS_TWO_TITLE_DIV);

   9994 81 005253   000266 630400 82                 EPPR0   182
        81 005254   000000 631400 82                 EPPR1   0
        81 005255   000000 701000 xent               TSX1    ERROR
        81 005256   000000 011000                    NOP     0

     1729     9995        /*E*     ERROR:    ZIG-ZIG_SS_TWO_TITLE_DIV-C
     1730     9996        MESSAGE: Cannot have two TITLE DIVISION statements.
     1731     9997        */
     1732     9998    4                   END;

   9998 81 005257   006061 710000 81                 TRA     s:10312

     1733     9999    4               ELSE DO;

     1734    10000    4                   TITLE_DIV = '1'B;

  10000 81 005260   400000 236003                    LDQ     -131072,DU
        81 005261   000000 756000 23                 STQ     TITLE_DIV

     1735    10001    4                   END;

  10001 81 005262   006061 710000 81                 TRA     s:10312

     1736    10002    3           CASE(%MAPPING_DIV);

     1737    10003    3               IF MAPPING_DIV

  10003 81 005263   000000 234000 24                 SZN     MAPPING_DIV
        81 005264   005272 605000 81                 TPL     s:10011

     1738    10004    4               THEN DO;

     1739    10005    4                   CALL ERROR(%ZIG_SS_TWO_MAPPING_DIV);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:249  

  10005 81 005265   000270 630400 82                 EPPR0   184
        81 005266   000000 631400 82                 EPPR1   0
        81 005267   000000 701000 xent               TSX1    ERROR
        81 005270   000000 011000                    NOP     0

     1740    10006        /*E*     ERROR:    ZIG-ZIG_SS_TWO_MAPPING_DIV-C
     1741    10007        MESSAGE: Cannot have two MAPPING DIVISION statements.
     1742    10008        */
     1743    10009    4                   END;

  10009 81 005271   006061 710000 81                 TRA     s:10312

     1744    10010    4               ELSE DO;

     1745    10011    4                   MAPPING_DIV = '1'B;

  10011 81 005272   400000 236003                    LDQ     -131072,DU
        81 005273   000000 756000 24                 STQ     MAPPING_DIV

     1746    10012    4                   END;

  10012 81 005274   006061 710000 81                 TRA     s:10312

     1747    10013    3           CASE(%STRUCTURE_DIV);

     1748    10014    3               IF STRUCTURE_DIV

  10014 81 005275   000000 234000 26                 SZN     STRUCTURE_DIV
        81 005276   005304 605000 81                 TPL     s:10022

     1749    10015    4               THEN DO;

     1750    10016    4                   CALL ERROR(%ZIG_SS_TWO_STRUCTURE_DIV);

  10016 81 005277   000272 630400 82                 EPPR0   186
        81 005300   000000 631400 82                 EPPR1   0
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:250  
        81 005301   000000 701000 xent               TSX1    ERROR
        81 005302   000000 011000                    NOP     0

     1751    10017        /*E*     ERROR:    ZIG-ZIG_SS_TWO_STRUCTURE_DIV-C
     1752    10018        MESSAGE: Cannot have two STRUCTURE DIVISION statements.
     1753    10019        */
     1754    10020    4                   END;

  10020 81 005303   006061 710000 81                 TRA     s:10312

     1755    10021    4               ELSE DO;

     1756    10022    4                   STRUCTURE_DIV = '1'B;

  10022 81 005304   400000 236003                    LDQ     -131072,DU
        81 005305   000000 756000 26                 STQ     STRUCTURE_DIV

     1757    10023    4                   END;

  10023 81 005306   006061 710000 81                 TRA     s:10312

     1758    10024    3           CASE(%ALIAS_SEC);

     1759    10025    3               IF ALIAS_SEC

  10025 81 005307   000000 234000 25                 SZN     ALIAS_SEC
        81 005310   005316 605000 81                 TPL     s:10033

     1760    10026    4               THEN DO;

     1761    10027    4                   CALL ERROR(%ZIG_SS_TWO_ALIAS_SEC);

  10027 81 005311   000274 630400 82                 EPPR0   188
        81 005312   000000 631400 82                 EPPR1   0
        81 005313   000000 701000 xent               TSX1    ERROR
        81 005314   000000 011000                    NOP     0

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:251  
     1762    10028        /*E*     ERROR:    ZIG-ZIG_SS_TWO_ALIAS_SEC-C
     1763    10029        MESSAGE: Cannot have two ALIAS SECTION statements.
     1764    10030        */
     1765    10031    4                   END;

  10031 81 005315   005320 710000 81                 TRA     s:10035

     1766    10032    4               ELSE DO;

     1767    10033    4                   ALIAS_SEC = '1'B;

  10033 81 005316   400000 236003                    LDQ     -131072,DU
        81 005317   000000 756000 25                 STQ     ALIAS_SEC

     1768    10034    4                   END;

     1769    10035    3               IF ~MAPPING_DIV

  10035 81 005320   000000 236000 24                 LDQ     MAPPING_DIV
        81 005321   400000 376003                    ANQ     -131072,DU
        81 005322   400000 676003                    ERQ     -131072,DU
        81 005323   006061 600000 81                 TZE     s:10312

     1770    10036    4               THEN DO;

     1771    10037    4                   TEMP_WORD = 'REALM';

  10037 81 005324   040000 100400                    MLR     fill='040'O
        81 005325   000041 000005 22                 ADSC9   TN_S+5                   cn=0,n=5
        81 005326   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30

     1772    10038    4                   CALL SET_FIELDS(1,30,TEMP_WORD);

  10038 81 005327   000276 630400 82                 EPPR0   190
        81 005330   000044 631400 82                 EPPR1   36
        81 005331   000000 701000 xent               TSX1    SET_FIELDS
        81 005332   000000 011000                    NOP     0
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:252  

     1773    10039    4                   CALL ERROR(%ZIG_SS_NO_MAPPING_DIV);

  10039 81 005333   000302 630400 82                 EPPR0   194
        81 005334   000000 631400 82                 EPPR1   0
        81 005335   000000 701000 xent               TSX1    ERROR
        81 005336   000000 011000                    NOP     0

     1774    10040        /*E*     ERROR:    ZIG-ZIG_SS_NO_MAPPING_DIV-C
     1775    10041        MESSAGE: A MAPPING DIVISION must be given before a %U1 SECTION.
     1776    10042        */
     1777    10043    4                   END;

  10043 81 005337   006061 710000 81                 TRA     s:10312

     1778    10044    3           CASE(%REALM_SEC);

     1779    10045    3               IF REALM_SEC

  10045 81 005340   000000 234000 27                 SZN     REALM_SEC
        81 005341   005347 605000 81                 TPL     s:10053

     1780    10046    4               THEN DO;

     1781    10047    4                   CALL ERROR(%ZIG_SS_TWO_REALM_SEC);

  10047 81 005342   000304 630400 82                 EPPR0   196
        81 005343   000000 631400 82                 EPPR1   0
        81 005344   000000 701000 xent               TSX1    ERROR
        81 005345   000000 011000                    NOP     0

     1782    10048        /*E*     ERROR:    ZIG-ZIG_SS_TWO_REALM_SEC-C
     1783    10049        MESSAGE: Cannot have two REALM SECTION statements.
     1784    10050        */
     1785    10051    4                   END;

  10051 81 005346   005351 710000 81                 TRA     s:10055
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:253  

     1786    10052    4               ELSE DO;

     1787    10053    4                   REALM_SEC = '1'B;

  10053 81 005347   400000 236003                    LDQ     -131072,DU
        81 005350   000000 756000 27                 STQ     REALM_SEC

     1788    10054    4                   END;

     1789    10055    3               IF ~STRUCTURE_DIV

  10055 81 005351   000000 236000 26                 LDQ     STRUCTURE_DIV
        81 005352   400000 376003                    ANQ     -131072,DU
        81 005353   400000 676003                    ERQ     -131072,DU
        81 005354   006061 600000 81                 TZE     s:10312

     1790    10056    4               THEN DO;

     1791    10057    4                   TEMP_WORD = 'REALM';

  10057 81 005355   040000 100400                    MLR     fill='040'O
        81 005356   000041 000005 22                 ADSC9   TN_S+5                   cn=0,n=5
        81 005357   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30

     1792    10058    4                   CALL SET_FIELDS(1,30,TEMP_WORD);

  10058 81 005360   000276 630400 82                 EPPR0   190
        81 005361   000044 631400 82                 EPPR1   36
        81 005362   000000 701000 xent               TSX1    SET_FIELDS
        81 005363   000000 011000                    NOP     0

     1793    10059    4                   CALL ERROR(%ZIG_SS_NO_STRUCTURE_DIV);

  10059 81 005364   000306 630400 82                 EPPR0   198
        81 005365   000000 631400 82                 EPPR1   0
        81 005366   000000 701000 xent               TSX1    ERROR
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:254  
        81 005367   000000 011000                    NOP     0

     1794    10060        /*E*     ERROR:    ZIG-ZIG_SS_NO_STRUCTURE_DIV-C
     1795    10061        MESSAGE: A STRUCTURE DIVISION must be given before a %U1 SECTION.
     1796    10062        */
     1797    10063    4                   END;

  10063 81 005370   006061 710000 81                 TRA     s:10312

     1798    10064    3           CASE(%SET_SEC);

     1799    10065    3               IF SET_SEC

  10065 81 005371   000000 234000 28                 SZN     SET_SEC
        81 005372   005400 605000 81                 TPL     s:10073

     1800    10066    4               THEN DO;

     1801    10067    4                   CALL ERROR(%ZIG_SS_TWO_SET_SEC);

  10067 81 005373   000310 630400 82                 EPPR0   200
        81 005374   000000 631400 82                 EPPR1   0
        81 005375   000000 701000 xent               TSX1    ERROR
        81 005376   000000 011000                    NOP     0

     1802    10068        /*E*     ERROR:    ZIG-ZIG_SS_TWO_SET_SEC-C
     1803    10069        MESSAGE: Cannot have two SET SECTION statements.
     1804    10070        */
     1805    10071    4                   END;

  10071 81 005377   005402 710000 81                 TRA     s:10075

     1806    10072    4               ELSE DO;

     1807    10073    4                   SET_SEC = '1'B;

  10073 81 005400   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:255  
        81 005401   000000 756000 28                 STQ     SET_SEC

     1808    10074    4                   END;

     1809    10075    3               IF ~STRUCTURE_DIV

  10075 81 005402   000000 236000 26                 LDQ     STRUCTURE_DIV
        81 005403   400000 376003                    ANQ     -131072,DU
        81 005404   400000 676003                    ERQ     -131072,DU
        81 005405   006061 600000 81                 TZE     s:10312

     1810    10076    4               THEN DO;

     1811    10077    4                   TEMP_WORD = 'SET';

  10077 81 005406   040000 100400                    MLR     fill='040'O
        81 005407   000043 000003 22                 ADSC9   TN_S+7                   cn=0,n=3
        81 005410   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30

     1812    10078    4                   CALL SET_FIELDS(1,30,TEMP_WORD);

  10078 81 005411   000276 630400 82                 EPPR0   190
        81 005412   000044 631400 82                 EPPR1   36
        81 005413   000000 701000 xent               TSX1    SET_FIELDS
        81 005414   000000 011000                    NOP     0

     1813    10079    4                   CALL ERROR(%ZIG_SS_NO_STRUCTURE_DIV);

  10079 81 005415   000306 630400 82                 EPPR0   198
        81 005416   000000 631400 82                 EPPR1   0
        81 005417   000000 701000 xent               TSX1    ERROR
        81 005420   000000 011000                    NOP     0

     1814    10080        /*       ERROR:    ZIG-ZIG_SS_NO_STRUCTURE_DIV-C
     1815    10081        MESSAGE: A STRUCTURE DIVISION must be given before a %U1 SECTION.
     1816    10082        */
     1817    10083    4                   END;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:256  

  10083 81 005421   006061 710000 81                 TRA     s:10312

     1818    10084    3           CASE(%KEY_SEC);

     1819    10085    3               IF KEY_SEC

  10085 81 005422   000000 234000 29                 SZN     KEY_SEC
        81 005423   005431 605000 81                 TPL     s:10093

     1820    10086    4               THEN DO;

     1821    10087    4                   CALL ERROR(%ZIG_SS_TWO_KEY_SEC);

  10087 81 005424   000312 630400 82                 EPPR0   202
        81 005425   000000 631400 82                 EPPR1   0
        81 005426   000000 701000 xent               TSX1    ERROR
        81 005427   000000 011000                    NOP     0

     1822    10088        /*E*     ERROR:    ZIG-ZIG_SS_TWO_KEY_SEC-C
     1823    10089        MESSAGE: Cannot have two KEY SECTION statements.
     1824    10090        */
     1825    10091    4                   END;

  10091 81 005430   005433 710000 81                 TRA     s:10095

     1826    10092    4               ELSE DO;

     1827    10093    4                   KEY_SEC = '1'B;

  10093 81 005431   400000 236003                    LDQ     -131072,DU
        81 005432   000000 756000 29                 STQ     KEY_SEC

     1828    10094    4                   END;

     1829    10095    3               IF ~STRUCTURE_DIV

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:257  
  10095 81 005433   000000 236000 26                 LDQ     STRUCTURE_DIV
        81 005434   400000 376003                    ANQ     -131072,DU
        81 005435   400000 676003                    ERQ     -131072,DU
        81 005436   006061 600000 81                 TZE     s:10312

     1830    10096    4               THEN DO;

     1831    10097    4                   TEMP_WORD = 'KEY';

  10097 81 005437   040000 100400                    MLR     fill='040'O
        81 005440   000044 000003 22                 ADSC9   TN_S+8                   cn=0,n=3
        81 005441   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30

     1832    10098    4                   CALL SET_FIELDS(1,30,TEMP_WORD);

  10098 81 005442   000276 630400 82                 EPPR0   190
        81 005443   000044 631400 82                 EPPR1   36
        81 005444   000000 701000 xent               TSX1    SET_FIELDS
        81 005445   000000 011000                    NOP     0

     1833    10099    4                   CALL ERROR(%ZIG_SS_NO_STRUCTURE_DIV);

  10099 81 005446   000306 630400 82                 EPPR0   198
        81 005447   000000 631400 82                 EPPR1   0
        81 005450   000000 701000 xent               TSX1    ERROR
        81 005451   000000 011000                    NOP     0

     1834    10100        /*       ERROR:    ZIG-ZIG_SS_NO_STRUCTURE_DIV-C
     1835    10101        MESSAGE: A STRUCTURE DIVISION must be given before a %U1 SECTION.
     1836    10102        */
     1837    10103    4                   END;

  10103 81 005452   006061 710000 81                 TRA     s:10312

     1838    10104    3           CASE(%RECORD_SEC);

     1839    10105    3               IF RECORD_SEC
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:258  

  10105 81 005453   000000 234000 30                 SZN     RECORD_SEC
        81 005454   005462 605000 81                 TPL     s:10113

     1840    10106    4               THEN DO;

     1841    10107    4                   CALL ERROR(%ZIG_SS_TWO_RECORD_SEC);

  10107 81 005455   000314 630400 82                 EPPR0   204
        81 005456   000000 631400 82                 EPPR1   0
        81 005457   000000 701000 xent               TSX1    ERROR
        81 005460   000000 011000                    NOP     0

     1842    10108        /*E*     ERROR:    ZIG-ZIG_SS_TWO_RECORD_SEC-C
     1843    10109        MESSAGE: Cannot have two RECORD SECTION statements.
     1844    10110        */
     1845    10111    4                   END;

  10111 81 005461   005464 710000 81                 TRA     s:10115

     1846    10112    4               ELSE DO;

     1847    10113    4                   RECORD_SEC = '1'B;

  10113 81 005462   400000 236003                    LDQ     -131072,DU
        81 005463   000000 756000 30                 STQ     RECORD_SEC

     1848    10114    4                   END;

     1849    10115    3               IF ~STRUCTURE_DIV

  10115 81 005464   000000 236000 26                 LDQ     STRUCTURE_DIV
        81 005465   400000 376003                    ANQ     -131072,DU
        81 005466   400000 676003                    ERQ     -131072,DU
        81 005467   006061 600000 81                 TZE     s:10312

     1850    10116    4               THEN DO;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:259  

     1851    10117    4                   TEMP_WORD = 'RECORD';

  10117 81 005470   040000 100400                    MLR     fill='040'O
        81 005471   000045 000006 22                 ADSC9   TN_S+9                   cn=0,n=6
        81 005472   000071 000036 3                  ADSC9   TEMP_WORD                cn=0,n=30

     1852    10118    4                   CALL SET_FIELDS(1,30,TEMP_WORD);

  10118 81 005473   000276 630400 82                 EPPR0   190
        81 005474   000044 631400 82                 EPPR1   36
        81 005475   000000 701000 xent               TSX1    SET_FIELDS
        81 005476   000000 011000                    NOP     0

     1853    10119    4                   CALL ERROR(%ZIG_SS_NO_STRUCTURE_DIV);

  10119 81 005477   000306 630400 82                 EPPR0   198
        81 005500   000000 631400 82                 EPPR1   0
        81 005501   000000 701000 xent               TSX1    ERROR
        81 005502   000000 011000                    NOP     0

     1854    10120        /*       ERROR:    ZIG-ZIG_SS_NO_STRUCTURE_DIV-C
     1855    10121        MESSAGE: A STRUCTURE DIVISION must be given before a %U1 SECTION.
     1856    10122        */
     1857    10123    4                   END;

     1858    10124    3               END;

  10124 81 005503   006061 710000 81                 TRA     s:10312

     1859    10125        %EJECT;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:260  
     1860    10126        /*
     1861    10127              This part of subschema translater X$PARSE interface routine
     1862    10128            is to handle all syntax errors in the subschema ddl. All error
     1863    10129            text are written throw M$DO and M$LO. All error messages are
     1864    10130            in the file :ZIERRMSG.:SYS and this file is read by the
     1865    10131            M$ERRMSG. All calls first go throw the subroutine ERROR then
     1866    10132            to ZIG$DDER.
     1867    10133
     1868    10134              Any changes in this part of the program you sould first look
     1869    10135            at ZIG$SS_PSI to see when things are called and why!!!!
     1870    10136        */
     1871    10137    2       CASE(%FAIL#);

     1872    10138    3           IF BUFFER_ERR THEN DO;

  10138 81 005504   000000 234000 1                  SZN     BUFFER_ERR
        81 005505   005510 605000 81                 TPL     s:10142

     1873    10139    3               BUFFER_ERR = '0'B;

  10139 81 005506   000000 450000 1                  STZ     BUFFER_ERR

     1874    10140    3               GOTO U_SUB_ERR;

  10140 81 005507   006053 710000 81                 TRA     U_SUB_ERR

     1875    10141    3               END;
     1876    10142    2           I=PARAN.CHARPOS;

  10142 81 005510   000004 235100                    LDA     4,,PR0
        81 005511   000063 755000 3                  STA     I

     1877    10143    3           DO WHILE (SUBSTR(LINE,I-1,1)=' ');

  10143 81 005512   005516 710000 81                 TRA     s:10145

     1878    10144    3               I=I+1;
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:261  

  10144 81 005513   000063 235000 3                  LDA     I
        81 005514   000001 035007                    ADLA    1,DL
        81 005515   000063 755000 3                  STA     I

     1879    10145    3               END;

  10145 81 005516   040000 106405                    CMPC    fill='040'O
        81 005517   777777 600001 17                 ADSC9   LINE-1,A                 cn=3,n=1
        81 005520   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 005521   005513 600000 81                 TZE     s:10144

     1880    10146    3           DO WHILE (SUBSTR(LINE,I-1,1)~=' ');

  10146 81 005522   005526 710000 81                 TRA     s:10148

     1881    10147    3               I=I+1;

  10147 81 005523   000063 235000 3                  LDA     I
        81 005524   000001 035007                    ADLA    1,DL
        81 005525   000063 755000 3                  STA     I

     1882    10148    3               END;

  10148 81 005526   040000 106405                    CMPC    fill='040'O
        81 005527   777777 600001 17                 ADSC9   LINE-1,A                 cn=3,n=1
        81 005530   000004 000001 82                 ADSC9   4                        cn=0,n=1
        81 005531   005523 601000 81                 TNZ     s:10147

     1883    10149    2           FIELD1.COUNT1=I-PARAN.CHARPOS;

  10149 81 005532   200003 470500                    LDP0    @PARAN,,AUTO
        81 005533   000063 236000 3                  LDQ     I
        81 005534   000004 136100                    SBLQ    4,,PR0
        81 005535   000033 736000                    QLS     27
        81 005536   000000 552040 7                  STBQ    FIELD1,'40'O

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:262  
     1884    10150    2           FIELD1.TEXT1=SUBSTR(LINE,PARAN.CHARPOS-1,FIELD1.COUNT1);

  10150 81 005537   000004 235100                    LDA     4,,PR0
        81 005540   000000 236000 7                  LDQ     FIELD1
        81 005541   000033 772000                    QRL     27
        81 005542   000000 620006                    EAX0    0,QL
        81 005543   040000 100445                    MLR     fill='040'O
        81 005544   777777 600010 17                 ADSC9   LINE-1,A                 cn=3,n=*X0
        81 005545   000000 200037 7                  ADSC9   FIELD1                   cn=1,n=31

     1885    10151    3           DO CASE(PARAN.CODE);

  10151 81 005546   000000 720100                    LXL0    0,,PR0
        81 005547   000104 100003                    CMPX0   68,DU
        81 005550   005552 602010 81                 TNC     s:10151+4,X0
        81 005551   006037 710000 81                 TRA     s:10300
        81 005552   005714 710000 81                 TRA     s:10191
        81 005553   005721 710000 81                 TRA     s:10197
        81 005554   005726 710000 81                 TRA     s:10203
        81 005555   005740 710000 81                 TRA     s:10215
        81 005556   006037 710000 81                 TRA     s:10300
        81 005557   006037 710000 81                 TRA     s:10300
        81 005560   006037 710000 81                 TRA     s:10300
        81 005561   006037 710000 81                 TRA     s:10300
        81 005562   006037 710000 81                 TRA     s:10300
        81 005563   006037 710000 81                 TRA     s:10300
        81 005564   006037 710000 81                 TRA     s:10300
        81 005565   006037 710000 81                 TRA     s:10300
        81 005566   005774 710000 81                 TRA     s:10256
        81 005567   006037 710000 81                 TRA     s:10300
        81 005570   006037 710000 81                 TRA     s:10300
        81 005571   006037 710000 81                 TRA     s:10300
        81 005572   006001 710000 81                 TRA     s:10262
        81 005573   006037 710000 81                 TRA     s:10300
        81 005574   006006 710000 81                 TRA     s:10268
        81 005575   005755 710000 81                 TRA     s:10238
        81 005576   005755 710000 81                 TRA     s:10238
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:263  
        81 005577   005755 710000 81                 TRA     s:10238
        81 005600   005755 710000 81                 TRA     s:10238
        81 005601   005702 710000 81                 TRA     s:10177
        81 005602   005707 710000 81                 TRA     s:10184
        81 005603   005755 710000 81                 TRA     s:10238
        81 005604   006037 710000 81                 TRA     s:10300
        81 005605   005733 710000 81                 TRA     s:10209
        81 005606   006037 710000 81                 TRA     s:10300
        81 005607   005755 710000 81                 TRA     s:10238
        81 005610   006037 710000 81                 TRA     s:10300
        81 005611   006037 710000 81                 TRA     s:10300
        81 005612   006037 710000 81                 TRA     s:10300
        81 005613   006037 710000 81                 TRA     s:10300
        81 005614   005762 710000 81                 TRA     s:10244
        81 005615   006013 710000 81                 TRA     s:10274
        81 005616   006037 710000 81                 TRA     s:10300
        81 005617   006037 710000 81                 TRA     s:10300
        81 005620   006037 710000 81                 TRA     s:10300
        81 005621   006037 710000 81                 TRA     s:10300
        81 005622   006037 710000 81                 TRA     s:10300
        81 005623   006037 710000 81                 TRA     s:10300
        81 005624   006020 710000 81                 TRA     s:10282
        81 005625   006037 710000 81                 TRA     s:10300
        81 005626   006025 710000 81                 TRA     s:10288
        81 005627   006037 710000 81                 TRA     s:10300
        81 005630   005656 710000 81                 TRA     s:10153
        81 005631   005675 710000 81                 TRA     s:10171
        81 005632   005670 710000 81                 TRA     s:10165
        81 005633   006037 710000 81                 TRA     s:10300
        81 005634   006032 710000 81                 TRA     s:10294
        81 005635   006037 710000 81                 TRA     s:10300
        81 005636   006037 710000 81                 TRA     s:10300
        81 005637   006037 710000 81                 TRA     s:10300
        81 005640   006037 710000 81                 TRA     s:10300
        81 005641   006037 710000 81                 TRA     s:10300
        81 005642   005740 710000 81                 TRA     s:10215
        81 005643   006037 710000 81                 TRA     s:10300
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:264  
        81 005644   006037 710000 81                 TRA     s:10300
        81 005645   006037 710000 81                 TRA     s:10300
        81 005646   006037 710000 81                 TRA     s:10300
        81 005647   006037 710000 81                 TRA     s:10300
        81 005650   006037 710000 81                 TRA     s:10300
        81 005651   006037 710000 81                 TRA     s:10300
        81 005652   006037 710000 81                 TRA     s:10300
        81 005653   006037 710000 81                 TRA     s:10300
        81 005654   005663 710000 81                 TRA     s:10159
        81 005655   005767 710000 81                 TRA     s:10250

     1886    10152    3           CASE(%APL_ENTRY);

     1887    10153    3               CALL ERROR(%ZI_APL_BAD_ENTRY);

  10153 81 005656   000316 630400 82                 EPPR0   206
        81 005657   000000 631400 82                 EPPR1   0
        81 005660   000000 701000 xent               TSX1    ERROR
        81 005661   000000 011000                    NOP     0
        81 005662   006053 710000 81                 TRA     U_SUB_ERR

     1888    10154        /*E*     ERROR:    ZIG-ZI_APL_BAD_ENTRY-C
     1889    10155        MESSAGE: The line above is not the correct syntax for an entry in
     1890    10156                 an APL subschema DDL. The error was at %U1.
     1891    10157        */
     1892    10158    3           CASE(%BASIC_ENTRY);

     1893    10159    3               CALL ERROR(%ZI_BASIC_BAD_ENTRY);

  10159 81 005663   000320 630400 82                 EPPR0   208
        81 005664   000000 631400 82                 EPPR1   0
        81 005665   000000 701000 xent               TSX1    ERROR
        81 005666   000000 011000                    NOP     0
        81 005667   006053 710000 81                 TRA     U_SUB_ERR

     1894    10160        /*E*     ERROR:    ZIG-ZI_BASIC_BAD_ENTRY-C
     1895    10161        MESSAGE: The line above is not the correct syntax for an entry in
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:265  
     1896    10162                 a BASIC subschema DDL. The error was at %U1.
     1897    10163        */
     1898    10164    3           CASE(%FORT_ENTRY);

     1899    10165    3               CALL ERROR(%ZI_FORT_BAD_ENTRY);

  10165 81 005670   000322 630400 82                 EPPR0   210
        81 005671   000000 631400 82                 EPPR1   0
        81 005672   000000 701000 xent               TSX1    ERROR
        81 005673   000000 011000                    NOP     0
        81 005674   006053 710000 81                 TRA     U_SUB_ERR

     1900    10166        /*E*     ERROR:    ZIG-ZI_FORT_BAD_ENTRY-C
     1901    10167        MESSAGE: The entry in the FORTRAN subschema DDL has a bad
     1902    10168                 entry. The error occurred at the phrase %U1.
     1903    10169        */
     1904    10170    3           CASE(%COBOL_ENTRY);

     1905    10171    3               CALL ERROR(%ZI_COBOL_BAD_ENTRY);

  10171 81 005675   000324 630400 82                 EPPR0   212
        81 005676   000000 631400 82                 EPPR1   0
        81 005677   000000 701000 xent               TSX1    ERROR
        81 005700   000000 011000                    NOP     0
        81 005701   006053 710000 81                 TRA     U_SUB_ERR

     1906    10172        /*E*     ERROR:    ZIG-ZI_COBOL_BAD_ENTRY-C
     1907    10173        MESSAGE: The above entry in the COBOL subschema DDL has a bad
     1908    10174                 entry. The error occurred at the phrase %U1.
     1909    10175        */
     1910    10176    3           CASE(%INV_SUBSCHEMA_NAME);

     1911    10177    3               CALL ERROR(%ZI_BAD_SUBSCHEMA_NAME);

  10177 81 005702   000326 630400 82                 EPPR0   214
        81 005703   000000 631400 82                 EPPR1   0
        81 005704   000000 701000 xent               TSX1    ERROR
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:266  
        81 005705   000000 011000                    NOP     0
        81 005706   006053 710000 81                 TRA     U_SUB_ERR

     1912    10178        /*E*     ERROR:    ZIG-ZI_BAD_SUBSCHEMA_NAME-C
     1913    10179        MESSAGE: In the subschema definition entry the subschema name was
     1914    10180                 a legal set of characters for the subschema name. The
     1915    10181                 name was %U1.
     1916    10182        */
     1917    10183    3           CASE(%INV_SCHEMA_NAME);

     1918    10184    3               CALL ERROR(%ZI_BAD_SCHEMA_NAME);

  10184 81 005707   000330 630400 82                 EPPR0   216
        81 005710   000000 631400 82                 EPPR1   0
        81 005711   000000 701000 xent               TSX1    ERROR
        81 005712   000000 011000                    NOP     0
        81 005713   006053 710000 81                 TRA     U_SUB_ERR

     1919    10185        /*E*     ERROR:    ZIG-ZI_BAD_SCHEMA_NAME-C
     1920    10186        MESSAGE: In the schema definition entry the schema name was
     1921    10187                 a legal set of characters for the schema name. The
     1922    10188                 name was %U1.
     1923    10189        */
     1924    10190    3           CASE(%LOCK_INVOCKING);

     1925    10191    3               CALL ERROR(%ZI_LOCK_INVOCKING);

  10191 81 005714   000332 630400 82                 EPPR0   218
        81 005715   000000 631400 82                 EPPR1   0
        81 005716   000000 701000 xent               TSX1    ERROR
        81 005717   000000 011000                    NOP     0
        81 005720   006053 710000 81                 TRA     U_SUB_ERR

     1926    10192        /*E*     ERROR:    ZIG-ZI_LOCK_INVOCKING-C
     1927    10193        MESSAGE: The lock for invoking must be in either double or
     1928    10194                 single quotes, not %U1.
     1929    10195        */
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:267  
     1930    10196    3           CASE(%PRIVACY_KEY);

     1931    10197    3               CALL ERROR(%ZI_PRIVACY_KEY);

  10197 81 005721   000334 630400 82                 EPPR0   220
        81 005722   000000 631400 82                 EPPR1   0
        81 005723   000000 701000 xent               TSX1    ERROR
        81 005724   000000 011000                    NOP     0
        81 005725   006053 710000 81                 TRA     U_SUB_ERR

     1932    10198        /*E*     ERROR:    ZIG-ZI_PRIVACY_KEY-C
     1933    10199        MESSAGE: The lock for privacy must be in either double or
     1934    10200                 single quotes, not %U1.
     1935    10201        */
     1936    10202    3           CASE(%DIAG_KEY);

     1937    10203    3               CALL ERROR(%ZI_DIAG_KEY);

  10203 81 005726   000336 630400 82                 EPPR0   222
        81 005727   000000 631400 82                 EPPR1   0
        81 005730   000000 701000 xent               TSX1    ERROR
        81 005731   000000 011000                    NOP     0
        81 005732   006053 710000 81                 TRA     U_SUB_ERR

     1938    10204        /*E*     ERROR:    ZIG-ZI_DIAG_KEY-C
     1939    10205        MESSAGE: The lock for diagnostics must be in either double or
     1940    10206                 single quotes, not %U1.
     1941    10207        */
     1942    10208    3           CASE(%LOCK_STRING);

     1943    10209    3               CALL ERROR(%ZI_LOCK_STRING);

  10209 81 005733   000340 630400 82                 EPPR0   224
        81 005734   000000 631400 82                 EPPR1   0
        81 005735   000000 701000 xent               TSX1    ERROR
        81 005736   000000 011000                    NOP     0
        81 005737   006053 710000 81                 TRA     U_SUB_ERR
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:268  

     1944    10210        /*E*     ERROR:    ZIG-ZI_LOCK_STRING-C
     1945    10211        MESSAGE: The text for a lock must not contain a single or double
     1946    10212                 quote.
     1947    10213        */
     1948    10214    3           CASE(%ALIASES,%ALIASES_FORT);

     1949    10215    3               IF SUB_LANGUAGE = #COBOL

  10215 81 005740   000000 235000 59                 LDA     SUB_LANGUAGE
        81 005741   000001 115007                    CMPA    1,DL
        81 005742   005750 601000 81                 TNZ     s:10228

     1950    10216    4               THEN DO;

     1951    10217    4                   CALL ERROR(%ZI_COBOL_ALIASES);

  10217 81 005743   000342 630400 82                 EPPR0   226
        81 005744   000000 631400 82                 EPPR1   0
        81 005745   000000 701000 xent               TSX1    ERROR
        81 005746   000000 011000                    NOP     0

     1952    10218        /*E*     ERROR:    ZIG-ZI_COBOL_ALIASES-C
     1953    10219        MESSAGE: The format for a COBOL alias statement is:
     1954    10220                 AD ==pseudo-text== [(REALM-NAME | SET-NAME | RECORD-NAME |;
     1955    10221                      KEY-NAME)] BECOMES subschema_name.
     1956    10222                 Not %U1.
     1957    10223                 Note: for items schema_name the format is:
     1958    10224                      record_name; item_name.
     1959    10225        */
     1960    10226    4                   END;

  10226 81 005747   006053 710000 81                 TRA     U_SUB_ERR

     1961    10227    4               ELSE DO;

     1962    10228    4                   CALL ERROR(%ZI_ERR_ALIASES_S);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:269  

  10228 81 005750   000344 630400 82                 EPPR0   228
        81 005751   000000 631400 82                 EPPR1   0
        81 005752   000000 701000 xent               TSX1    ERROR
        81 005753   000000 011000                    NOP     0

     1963    10229        /*E*     ERROR:    ZIG-ZI_ERR_ALIASES_S-C
     1964    10230        MESSAGE: The format for an APL, BASIC  or FORTRAN alias entry is:
     1965    10231                 ALIAS [(AREA | SET | KEY | RECORD | ITEM)] schema_name ;
     1966    10232                 = subschema_name.
     1967    10233                 Note: for item schema_names are record_name.item_name.
     1968    10234        */
     1969    10235    4                   END;

  10235 81 005754   006053 710000 81                 TRA     U_SUB_ERR

     1970    10236    3           CASE(%WITHIN_AREAS,%ENTRY_KEY_NAME,%ENTRY_SET_NAME,

     1971    10237    3                      %ENTRY_AREA_NAME,%APL_RECORD_NAME,%DATA_NAME);
     1972    10238    3               CALL ERROR(%ZI_WITHIN_AREAS);

  10238 81 005755   000346 630400 82                 EPPR0   230
        81 005756   000000 631400 82                 EPPR1   0
        81 005757   000000 701000 xent               TSX1    ERROR
        81 005760   000000 011000                    NOP     0
        81 005761   006053 710000 81                 TRA     U_SUB_ERR

     1973    10239        /*E*     ERROR:    ZIG-ZI_WITHIN_AREAS-C
     1974    10240        MESSAGE: The subschema name must be a legal identifier, not
     1975    10241                 %U1.
     1976    10242        */
     1977    10243    3           CASE(%APL_ITEM);

     1978    10244    3               CALL ERROR(%ZI_APL_ITEM);

  10244 81 005762   000350 630400 82                 EPPR0   232
        81 005763   000000 631400 82                 EPPR1   0
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:270  
        81 005764   000000 701000 xent               TSX1    ERROR
        81 005765   000000 011000                    NOP     0
        81 005766   006053 710000 81                 TRA     U_SUB_ERR

     1979    10245        /*E*     ERROR:    ZIG-ZI_APL_ITEM-C
     1980    10246        MESSAGE: An APL item type can only be DBKEY, FLOAT DOUBLE,
     1981    10247                 INTEGER, CHARACTER, or BOOL, not %U1.
     1982    10248        */
     1983    10249    3           CASE(%BASIC_ITEM);

     1984    10250    3               CALL ERROR(%ZI_BASIC_ITEM);

  10250 81 005767   000352 630400 82                 EPPR0   234
        81 005770   000000 631400 82                 EPPR1   0
        81 005771   000000 701000 xent               TSX1    ERROR
        81 005772   000000 011000                    NOP     0
        81 005773   006053 710000 81                 TRA     U_SUB_ERR

     1985    10251        /*E*     ERROR:    ZIG-ZI_BASIC_ITEM-C
     1986    10252        MESSAGE: A BASIC item type can only be DBKEY, FLOAT DOUBLE,
     1987    10253                 INTEGER, CHARACTER, or BOOL, not %U1.
     1988    10254        */
     1989    10255    3           CASE(%NUMBER_OCCURS);

     1990    10256    3               CALL ERROR(%ZI_OCCURS_NO_NUM);

  10256 81 005774   000354 630400 82                 EPPR0   236
        81 005775   000000 631400 82                 EPPR1   0
        81 005776   000000 701000 xent               TSX1    ERROR
        81 005777   000000 011000                    NOP     0
        81 006000   006053 710000 81                 TRA     U_SUB_ERR

     1991    10257        /*E*     ERROR:    ZIG-ZI_OCCURS_NO_NUM-C
     1992    10258        MESSAGE: All OCCUR statements must be followed by a number, not
     1993    10259                 %U1.
     1994    10260        */
     1995    10261    3           CASE(%CHARACTER);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:271  

     1996    10262    3               CALL ERROR(%ZI_BAD_CHAR_COUNT);

  10262 81 006001   000356 630400 82                 EPPR0   238
        81 006002   000000 631400 82                 EPPR1   0
        81 006003   000000 701000 xent               TSX1    ERROR
        81 006004   000000 011000                    NOP     0
        81 006005   006053 710000 81                 TRA     U_SUB_ERR

     1997    10263        /*E*     ERROR:    ZIG-ZI_BAD_CHAR_COUNT-C
     1998    10264        MESSAGE: The CHARACTER data type must be followed by '(' number ')',
     1999    10265                 not %U1.
     2000    10266        */
     2001    10267    3           CASE(%ENDER);

     2002    10268    3               CALL ERROR(%ZI_NOT_PERIOD);

  10268 81 006006   000360 630400 82                 EPPR0   240
        81 006007   000000 631400 82                 EPPR1   0
        81 006010   000000 701000 xent               TSX1    ERROR
        81 006011   000000 011000                    NOP     0
        81 006012   006053 710000 81                 TRA     U_SUB_ERR

     2003    10269        /*E*     ERROR:    ZIG-ZI_NOT_PERIOD-C
     2004    10270        MESSAGE: All entries in the subschema DDL must end with a period,
     2005    10271                 not %U1.
     2006    10272        */
     2007    10273    3           CASE(%FORT_ITEM);

     2008    10274    3               CALL ERROR(%ZI_BAD_FORT_ITEM);

  10274 81 006013   000362 630400 82                 EPPR0   242
        81 006014   000000 631400 82                 EPPR1   0
        81 006015   000000 701000 xent               TSX1    ERROR
        81 006016   000000 011000                    NOP     0
        81 006017   006053 710000 81                 TRA     U_SUB_ERR

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:272  
     2009    10275        /*E*     ERROR:    ZIG-ZI_BAD_FORT_ITEM-C
     2010    10276        MESSAGE: The legal data types for a FORTRAN item are:
     2011    10277                 ( FLOAT DOUBLE | FLOAT SINGLE | INTEGER | COMPLEX DOUBLE |;
     2012    10278                 COMPLEX SINGLE | BOOL | CHARACTER )
     2013    10279                 not %U1.
     2014    10280        */
     2015    10281    3           CASE(%RIGHT);

     2016    10282    3               CALL ERROR(%ZI_BAD_SYNC);

  10282 81 006020   000364 630400 82                 EPPR0   244
        81 006021   000000 631400 82                 EPPR1   0
        81 006022   000000 701000 xent               TSX1    ERROR
        81 006023   000000 011000                    NOP     0
        81 006024   006053 710000 81                 TRA     U_SUB_ERR

     2017    10283        /*E*     ERROR:    ZIG-ZI_BAD_SYNC-C
     2018    10284        MESSAGE: The COBOL option SYNchronized must be followed by
     2019    10285                 RIGHT or LEFT, not %U1.
     2020    10286        */
     2021    10287    3           CASE(%TRAILING);

     2022    10288    3               CALL ERROR(%ZI_BAD_SIGN);

  10288 81 006025   000366 630400 82                 EPPR0   246
        81 006026   000000 631400 82                 EPPR1   0
        81 006027   000000 701000 xent               TSX1    ERROR
        81 006030   000000 011000                    NOP     0
        81 006031   006053 710000 81                 TRA     U_SUB_ERR

     2023    10289        /*E*     ERROR:    ZIG-ZI_BAD_SIGN-C
     2024    10290        MESSAGE: The COBOL option SIGN must be followed by the keyword
     2025    10291                 LEADING or TRAILING, not %U1.
     2026    10292        */
     2027    10293    3           CASE(%PIC_STR);

     2028    10294    3               CALL ERROR(%ZI_BAD_PIC);
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:273  

  10294 81 006032   000370 630400 82                 EPPR0   248
        81 006033   000000 631400 82                 EPPR1   0
        81 006034   000000 701000 xent               TSX1    ERROR
        81 006035   000000 011000                    NOP     0
        81 006036   006053 710000 81                 TRA     U_SUB_ERR

     2029    10295        /*E*     ERROR:    ZIG-ZI_BAD_PIC-C
     2030    10296        MESSAGE: The keyword PICture must be followed by a PICTURE clause,
     2031    10297                 not %U1.
     2032    10298        */
     2033    10299    3           CASE (ELSE);

     2034    10300    3               CALL SET_FIELD_NUM(1,PARAN.CODE);

  10300 81 006037   200003 236100                    LDQ     @PARAN,,AUTO
        81 006040   400000 036007                    ADLQ    -131072,DL
        81 006041   000057 235000 82                 LDA     47
        81 006042   200020 757100                    STAQ    COUNT1+2,,AUTO
        81 006043   200020 630500                    EPPR0   COUNT1+2,,AUTO
        81 006044   000050 631400 82                 EPPR1   40
        81 006045   000000 701000 xent               TSX1    SET_FIELD_NUM
        81 006046   000000 011000                    NOP     0

     2035    10301    3               CALL ERROR(%ZIG_SS_SOFT_ERR_SSTRAN);

  10301 81 006047   000372 630400 82                 EPPR0   250
        81 006050   000000 631400 82                 EPPR1   0
        81 006051   000000 701000 xent               TSX1    ERROR
        81 006052   000000 011000                    NOP     0

     2036    10302        /*E*     ERROR:    ZIG-ZIG_SS_SOFT_ERR_SSTRAN-C
     2037    10303        MESSAGE: The subschema translator got an error that it did not think
     2038    10304                 possible so please report the statement above and the
     2039    10305                 number following %U1.
     2040    10306                 <<<< SOFTWARE ERROR >>>>
     2041    10307        */
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:274  
     2042    10308    3               END;

  10288 81 006053                       U_SUB_ERR    null
     2043    10309    2   U_SUB_ERR: ;
     2044    10310    2           UNWIND TO SUB_ERR;

  10310 81 006053   000100 100600                    MLR   ! fill='000'O
        81 006054   000000 000010 xsym               ADSC9   SUB_ERR                  cn=0,n=8
        81 006055   200020 000010                    ADSC9   COUNT1+2,,AUTO           cn=0,n=8
        81 006056   200020 237300                    LDAQ  ! COUNT1+2,,AUTO
        81 006057   000000 700200 xent               TSX0  ! X66_AUNWIND
        81 006060   000000 000200                    ZERO    0,128

     2045    10311    2           END;

     2046    10312    1       RETURN;

  10312 81 006061   000000 702200 xent               TSX2  ! X66_ARET

WORD1
 Sect OctLoc
   3     001   ****** ******   ****** ******   ****** ******   ****** ******    ................

STATUS
 Sect OctLoc
   3     014   06**** ******                                                    0...

DESCPTR
 Sect OctLoc
   3     015   000016 006000                                                    ....

BUFFER1
 Sect OctLoc
   3     016   ****** ******   ****** ******   ****** ******   ****** ******    ................

SAVE_RECORD_NUM
 Sect OctLoc
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:275  
   3     056   000000 000000                                                    ....

SAVE_RECORD_OFFSET
 Sect OctLoc
   3     057   000000 000000                                                    ....

SAVE_LEVEL
 Sect OctLoc
   3     060   000000 000001                                                    ....

RECORD_TYPE
 Sect OctLoc
   3     062   007*** ******                                                    ....

NO_ITEMS
 Sect OctLoc
   3     065   0***** ******                                                    ....

SAVE_PARAN_CODE
 Sect OctLoc
   3     066   000000 000000                                                    ....

TEMP_WORD
 Sect OctLoc
   3     071   ****** ******   ****** ******   ****** ******   ****** ******    ................

TIME_FPT
 Sect OctLoc
   3     122   000001 777640   000134 006000   000000 177640   000000 006014    .....\..........
   3     126   000000 177640   000000 006014   000000 177640   000000 006014    ................
   3     132   000000 777640   000012 006000   000004 000000   ****** ******    ................

ONE_CHANGE
 Sect OctLoc
   3     136   040040 137055   137044 137137   137137 ******                      _-_$____..

ONE_CHANGE
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:276  
 Sect OctLoc
   3     141   040040 055137   044137 137137   137137 ******                      -_$_____..

CHAR_SET
 Sect OctLoc
   3     144   116117 124040   125123 105104   040040 040040   040040 040040    NOT USED
   3     150   040040 040040   040040 040040   040040 040040   040040 040040
   3     154   040040 040040   040040 121127   105122 124131   125111 117120          QWERTYUIOP
   3     160   101123 104106   107110 112113   114132 130103   126102 116115    ASDFGHJKLZXCVBNM
   3     164   055061 062063   064065 066067   070071 060040   121127 105122    -1234567890 QWER
   3     170   124131 125111   117120 101123   104106 107110   112113 114132    TYUIOPASDFGHJKLZ
   3     174   130103 126102   116115 044061   062063 064065   066067 070071    XCVBNM$123456789
   3     200   060040 121127   105122 124131   125111 117120   101123 104106    0 QWERTYUIOPASDF
   3     204   107110 112113   114132 130103   126102 116115   137061 062063    GHJKLZXCVBNM_123
   3     210   064065 066067   070071 060040   121127 105122   124131 125111    4567890 QWERTYUI
   3     214   117120 101123   104106 107110   112113 114132   130103 126102    OPASDFGHJKLZXCVB
   3     220   116115 137061   062063 064065   066067 070071   060040 ******    NM_1234567890 ..

FIELD1
 Sect OctLoc
   7     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

FIELD2
 Sect OctLoc
   8     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

FIELD3
 Sect OctLoc
   9     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

EOFC
 Sect OctLoc
  12     000   057052 057052   057052 057052   057052 057052   040040 040040    /*/*/*/*/*/*
  12     004   040040 040040   040040 040040   040040 040040   040040 040040
  12     034*  040040 040040   040040 040040   040040 040040   040040 040040

CURRENT_ALIAS
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:277  
 Sect OctLoc
  14     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

LAST_STATUS
 Sect OctLoc
  15     000   00**** ******                                                    ....

LINE
 Sect OctLoc
  17     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

SAVE_RECORD_NAME
 Sect OctLoc
  18     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

LAST_GROUP
 Sect OctLoc
  19     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

FACTER
 Sect OctLoc
  22     000   000000 000002   000000 000002   000000 000002   000000 000001    ................
  22     004   000000 000001   000000 000001   000000 000002   000000 000002    ................
  22     010   000000 000002   000000 000002   000000 000002   000000 000002    ................
  22     030*  000000 000002   000000 000002   000000 000002   000000 000002    ................

TN_S
 Sect OctLoc
  22     034   000766 312330   000000 000000   0000** ******                    ............

(unnamed)
 Sect OctLoc
  22     037   065052 040040   106111 114114   122105 101114   115040 040040    5*  FILLREALM
  22     043   123105 124040   113105 131040   122105 103117   122104 040040    SET KEY RECORD

ANALS
 Sect OctLoc
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:278  
  32     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

PURGE
 Sect OctLoc
  33     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

DICTS
 Sect OctLoc
  34     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

DISPS
 Sect OctLoc
  35     000   ***00* ******   ****** ******   ****** ******   ****** ******    ................
  35     024*  ****** ******   ****** ******   ****** ******                    ............

VALIDS
 Sect OctLoc
  36     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

LOCKS
 Sect OctLoc
  37     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

STRAN
 Sect OctLoc
  38     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

DTRAN
 Sect OctLoc
  39     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

SSTRANS
 Sect OctLoc
  40     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

SSGEN
 Sect OctLoc
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:279  
  41     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

UWA_KEY
 Sect OctLoc
  49     000   007125 127101   ****** ******                                    .UWA....

RVA_KEY
 Sect OctLoc
  51     000   007122 126101   ****** ******                                    .RVA....

IA__KEY
 Sect OctLoc
  52     000   007111 101137   ****** ******                                    .IA_....

SEARCHR_NB
 Sect OctLoc
  54     000   001001 001001   001001 001001   001001 001001   001001 001001    ................
  54     010*  000001 001001   001001 001001   001001 001001   001001 001001    ................
  54     014   001001 001001   001001 001001   001001 001001   001001 001001    ................
  54     034*  001001 001001   001001 001001   001001 001001   001001 001001    ................

SEM_COM
 Sect OctLoc
  55     000   000001 002003   004005 006007   010011 012013   014015 016017    ................
  55     004   020021 022023   024025 026027   030031 032033   034035 036037    ................
  55     010   040041 042043   044045 046047   050051 052053   054055 056057     !"#$%&'()*+,-./
  55     014   060061 062063   064065 066067   070071 072040   074075 076077    0123456789: <=>?
  55     020   100101 102103   104105 106107   110111 112113   114115 116117    @ABCDEFGHIJKLMNO
  55     024   120121 122123   124125 126127   130131 132133   134135 136137    PQRSTUVWXYZ[\]^_
  55     030   140141 142143   144145 146147   150151 152153   154155 156157    `abcdefghijklmno
  55     034   160161 162163   164165 166167   170171 172173   174175 176177    pqrstuvwxyz{|}~.

DMCL_XLATE
 Sect OctLoc
  56     000   000001 002003   004005 006007   010011 012013   014015 016017    ................
  56     004   020021 022023   024025 026027   030031 032033   034035 036037    ................
  56     010   040041 041043   044045 046047   050051 052053   054055 136057     !!#$%&'()*+,-^/
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:280  
  56     014   060061 062063   064065 066067   070071 072040   074075 076077    0123456789: <=>?
  56     020   100101 102103   104105 106107   110111 112113   114115 116117    @ABCDEFGHIJKLMNO
  56     024   120121 122123   124125 126127   130131 132133   134135 136137    PQRSTUVWXYZ[\]^_
  56     030   140141 142143   144145 146147   150151 152153   154155 156157    `abcdefghijklmno
  56     034   160161 162163   164165 166167   170171 172173   174175 176177    pqrstuvwxyz{|}~.

Q2_PERCENT
 Sect OctLoc
  57     000   000001 002003   004005 006007   010011 012013   014015 016017    ................
  57     004   020021 022023   024025 026027   030031 032033   034035 036037    ................
  57     010   040041 045043   044045 046047   050051 052053   054055 056057     !%#$%&'()*+,-./
  57     014   060061 062063   064065 066067   070071 072073   074075 076077    0123456789:;<=>?
  57     020   100101 102103   104105 106107   110111 112113   114115 116117    @ABCDEFGHIJKLMNO
  57     024   120121 122123   124125 126127   130131 132133   134135 136137    PQRSTUVWXYZ[\]^_
  57     030   140141 142143   144145 146147   150151 152153   154155 156157    `abcdefghijklmno
  57     034   160161 162163   164165 166167   170171 172173   174175 176177    pqrstuvwxyz{|}~.

LANG_ALLOWED
 Sect OctLoc
  58     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

HEADING_TEXT
 Sect OctLoc
  60     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

LANG_TEXT
 Sect OctLoc
  61     000   116117 124040   125123 105104   040040 103117   102117 114040    NOT USED  COBOL
  61     004   040040 040040   106117 122124   122101 116040   040040 101120        FORTRAN   AP
  61     010   114040 040040   040040 040040   102101 123111   103040 040040    L       BASIC
  61     014   040040 ******                                                      ..

HASH_SCHEMA_NAME
 Sect OctLoc
  62     000   0***** ******                                                    ....

DESC_TYPE_9
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:281  
 Sect OctLoc
  64     000   000000 000160   000000 000000   000000 000000   000000 000011    ...p............
  64     004   000000 000000   000000 000000   000000 000000   000000 000000    ................
  64     020*  000000 000000   200000 000000   000000 000000   000000 000000    ................
  64     024   000000 000000   000000 000000   000000 000000   000000 000000    ................
  64     030   040040 040040   040040 040040   040040 040040   040040 040040
  64     034   040040 040040   040040 040040   040040 040040   040040 040040

SAVE_TYPE_9
 Sect OctLoc
  65     000   000000 000160   000000 000000   000000 000000   000000 000011    ...p............
  65     004   000000 000000   000000 000000   000000 000000   000000 000000    ................
  65     020*  000000 000000   200000 000000   000000 000000   000000 000000    ................
  65     024   000000 000000   000000 000000   000000 000000   000000 000000    ................
  65     030   040040 040040   040040 040040   040040 040040   040040 040040
  65     034   040040 040040   040040 040040   040040 040040   040040 040040

CONTROL
 Sect OctLoc
  66     000   777777 777777   000000 000001   000000 000000   000000 000036    ................
  66     004   000000 000060   000000 000000   000000 000000   000000 000000    ...0............
  66     010   000000 000000   000000 000000   000000 000000   000000 000000    ................
  66     020*  040040 040040   040040 040040   040040 040040   040040 040040
  66     040*  000000 000144   000000 000000   400000 000000   042116 125114    ...d........"NUL
  66     044   114042 040040   040040 040040   042116 125114   114042 040040    L"      "NULL"
  66     050   040040 040040   000000 000060   000000 000000   000000 000000        ...0........
  66     054   000000 000000   000000 000000   000000 000000   000000 000000    ................
  66     064*  000000 000000   040040 040040   040040 040040   040040 040040    ....
  66     070   000000 000000   000000 000000   000000 000000   000000 000000    ................
  66     074   000000 000002   000000 000000   000000 000000   000000 000000    ................

TYPE_100
 Sect OctLoc
  67     000   000000 000144   000000 000000   000000 000000   040040 040040    ...d........
  67     004   040040 040040   040040 040040   040040 040040   040040 040040
  67     010   040040 040040   000000 000000   000000 000000   000000 000000        ............
  67     014   000000 000000   000000 000000   000000 000000   000000 000000    ................
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:282  
  67     034*  000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_110
 Sect OctLoc
  68     000   000000 000156   000000 000000   000000 000000   040040 040040    ...n........
  68     004   040040 040040   040040 040040   040040 040040   040040 040040
  68     010   040040 040040   040040 040040   040040 040040   000000 000000                ....
  68     014   000000 000000   000000 000000   000000 000000   000000 000000    ................
  68     034*  000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_200
 Sect OctLoc
  69     000   000000 000310   000000 000000   000000 000000   040040 040040    ............
  69     004   040040 040040   040040 040040   040040 040040   040040 040040
  69     020*  040040 040040   040040 040040   040040 040040   000000 000000                ....
  69     024   000000 000000   000000 000000   000000 000000   000000 000000    ................
  69     034*  000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_210
 Sect OctLoc
  70     000   000000 000322   000000 000000   000000 000000   040040 040040    ............
  70     004   040040 040040   040040 040040   040040 040040   040040 040040
  70     010   040040 040040   040040 040040   040040 040040   000000 000000                ....
  70     014   000000 000000   000000 000000   000000 000000   000000 000000    ................
  70     034*  000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_300
 Sect OctLoc
  71     000   000000 000454   000000 000000   000000 000000   040040 040040    ............
  71     004   040040 040040   040040 040040   040040 040040   040040 040040
  71     020*  040040 040040   040040 040040   040040 040040   000000 000000                ....
  71     024   040000 000000   000000 000000   000000 000000   000000 000000     ...............
  71     030   000000 000000   000000 000000   000000 000000   000000 000000    ................
  71     034   000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_350
 Sect OctLoc
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:283  
  72     000   000000 000536   000000 000000   000000 000000   040040 040040    ............
  72     004   040040 040040   040040 040040   040040 040040   040040 040040
  72     020*  040040 040040   040040 040040   040040 040040   000000 000000                ....
  72     024   000000 000000   000000 000000   000000 000000   000000 000000    ................
  72     034*  000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_400
 Sect OctLoc
  73     000   000000 000620   000000 000000   000000 000000   040040 040040    ............
  73     004   040040 040040   040040 040040   040040 040040   040040 040040
  73     020*  040040 040040   040040 040040   040040 040040   000000 000000                ....
  73     024   100000 000000   000000 000000   000000 000000   040040 040040    @...........
  73     030   040040 040040   000000 000000   000000 000000   000000 000000        ............
  73     034   000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_410
 Sect OctLoc
  74     000   000000 000632   000000 000000   000000 000000   040040 040040    ............
  74     004   040040 040040   040040 040040   040040 040040   040040 040040
  74     010   040040 040040   040040 040040   040040 040040   000000 000000                ....
  74     014   000000 000000   000000 000000   000000 000000   000000 000000    ................
  74     034*  000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_420
 Sect OctLoc
  75     000   000000 000644   000000 000000   000000 000000   040040 040040    ............
  75     004   040040 040040   040040 040040   040040 040040   040040 040040
  75     020*  040040 040040   040040 040040   040040 040040   000000 000000                ....
  75     024   000000 000000   000000 000000   000000 000000   000000 000000    ................
  75     034*  000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_430
 Sect OctLoc
  76     000   000000 000656   000000 000000   000000 000000   040040 040040    ............
  76     004   040040 040040   040040 040040   040040 040040   040040 040040
  76     020*  040040 040040   040040 040040   040040 040040   000000 000000                ....
  76     024   000000 000000   000000 000000   000000 000000   000000 000000    ................
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:284  
  76     030   000000 000000   000000 000000   002000 000000   000000 000000    ................
  76     034   000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_30
 Sect OctLoc
  77     000   000000 000036   000000 000000   000000 000036   000000 000000    ................
  77     004   000000 000000   000000 000000   000000 000000   000000 000000    ................
  77     034*  000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_31
 Sect OctLoc
  78     000   000000 000037   000000 000000   000000 000000   000000 000037    ................
  78     004   000000 000000   040040 040040   040040 040040   040040 040040    ....
  78     010   040040 040040   040040 040040   040040 040040   040040 040040
  78     024*  040040 040040   ****** ******   ****** ******   ****** ******        ............
  78     030   000000 000000   000000 000000   000000 000000   000000 000000    ................
  78     034   000000 000000   000000 000000   000000 000000   000000 000000    ................

TYPE_32
 Sect OctLoc
  79     000   000000 000040   000000 000000   000000 000000   000000 000040    ... ...........
  79     004   000000 000000   040040 040040   040040 040040   040040 040040    ....
  79     010   040040 040040   040040 040040   040040 040040   040040 040040
  79     024*  040040 040040   ****** ******   000000 000000   000000 000000        ............
  79     030   000000 000000   000000 000000   000000 000000   000000 000000    ................
  79     040*  000000 000000                                                    ....

TYPE_33
 Sect OctLoc
  80     000   000000 000041   000000 000000   000000 000000   000000 000041    ...!...........!
  80     004   000000 000000   040040 040040   040040 040040   040040 040040    ....
  80     010   040040 040040   040040 040040   040040 040040   040040 040040
  80     024*  040040 040040   000000 000000   000000 000000   000000 000000        ............
  80     030   000000 000000   000000 000000   000000 000000   000000 000000    ................
  80     040*  000000 000000                                                    ....

(unnamed)
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:285  
 Sect OctLoc
  82     000   000001 000000   000000 023271   000001 006000   137040 040040    ............_
  82     004   040040 040040   377777 777777   044040 040040   577777 777777        ....$   ....
  82     010   000000 023277   000010 006000   000010 000000   000000 000000    ................
  82     014   000000 000011   000014 006000   000061 006000   000000 006000    .........1......
  82     020   000000 006000   000013 006000   000001 006000   000013 006000    ................
  82     024   000001 006000   000013 006000   000000 006000   000013 006000    ................
  82     030   000013 006000   000014 006000   000061 006000   000000 006000    .........1......
  82     034   000071 006000   000000 000000   000003 006000   000013 006000    .9..............
  82     040   000000 023303   000040 006000   000000 023302   000042 006000    ..... ......."..
  82     044   000003 000000   000000 000040   000045 006000   000037 006000    ....... .%......
  82     050   000002 000000   000000 006000   777777 777377   777777 775777    ................
  82     054   000000 000001   000000 010000   000055 006000   000054 006000    .........-...,..
  82     060   000000 021567   000060 006000   000065 006000   000000 021570    .....0...5......
  82     064   000063 006000   000043 006000   000000 021571   000066 006000    .3...#.......6..
  82     070   000046 006000   000000 021574   000071 006000   000000 023301    .&.......9......
  82     074   000073 006000   000000 000002   000000 000032   000001 006000    .;..............
  82     100   000013 006000   000000 006000   000000 006000   000075 006000    .............=..
  82     104   000076 006000   000061 006000   000014 006000   077777 777777    .>...1......?...
  82     110   000001 006000   000013 006000   000000 006000   000000 006000    ................
  82     114   000075 006000   000076 006000   000061 006000   000014 006000    .=...>...1......
  82     120   000000 000010   000120 006000   000000 000020   000122 006000    .....P.......R..
  82     124   000000 021600   000124 006000   000000 006000   000000 006000    .....T..........
  82     130   000000 006000   000000 021577   000131 006000   000000 006000    .........Y......
  82     134   000000 021576   000134 006000   000000 006000   000000 021601    .....\..........
  82     140   000137 006000   000056 006000   000000 006000   000054 006000    ._...........,..
  82     144   000070 006000   000071 006000   000013 006000   000000 006000    .8...9..........
  82     150   000013 006000   000013 006000   000014 006000   000061 006000    .............1..
  82     154   000000 006000   000000 006000   000000 006000   000000 021572    ................
  82     160   000157 006000   000000 023270   000161 006000   000000 023267    .o.......q......
  82     164   000163 006000   000000 023412   000165 006000   000000 006000    .s.......u......
  82     170   000000 006000   000000 006000   000000 006000   000037 006000    ................
  82     174   000013 006000   000004 000000   000037 006000   000015 006000    ................
  82     200   000000 000003   777777 777777   000076 006000   000000 006000    .........>......
  82     204   000000 006000   000001 006000   000054 006000   000000 006000    .........,......
  82     210   000013 006000   000054 006000   000014 006000   000061 006000    .....,.......1..
  82     214   000013 006000   000000 023300   000215 006000   000000 006000    ................
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:286  
  82     220   777743 777777   000000 000004   000221 006000   000000 006000    ................
  82     224   777777 777577   777777 777677   000000 006000   000000 000061    ...............1
  82     230   000227 006000   000011 006000   000000 021556   000232 006000    ................
  82     234   000000 021557   000234 006000   000000 000014   000236 006000    ................
  82     240   000000 021542   000240 006000   000000 021560   000242 006000    ................
  82     244   000000 021561   000244 006000   000000 021562   000246 006000    ................
  82     250   000000 021563   000250 006000   000000 021564   000252 006000    ................
  82     254   000000 021565   000254 006000   000000 021566   000256 006000    ................
  82     260   000011 006000   000001 006000   000000 021554   000262 006000    ................
  82     264   400000 000000   000000 021544   000265 006000   000000 021545    ................
  82     270   000267 006000   000000 021547   000271 006000   000000 021546    ................
  82     274   000273 006000   000000 000036   000054 006000   000275 006000    .........,......
  82     300   000071 006000   000000 021573   000301 006000   000000 021550    .9..............
  82     304   000303 006000   000000 021575   000305 006000   000000 021551    ................
  82     310   000307 006000   000000 021552   000311 006000   000000 021553    ................
  82     314   000313 006000   000000 023264   000315 006000   000000 023236    ................
  82     320   000317 006000   000000 023263   000321 006000   000000 023262    ................
  82     324   000323 006000   000000 023265   000325 006000   000000 023266    ................
  82     330   000327 006000   000000 023261   000331 006000   000000 023260    ................
  82     334   000333 006000   000000 023257   000335 006000   000000 023256    ................
  82     340   000337 006000   000000 023255   000341 006000   000000 023254    ................
  82     344   000343 006000   000000 023253   000345 006000   000000 023252    ................
  82     350   000347 006000   000000 023235   000351 006000   000000 023251    ................
  82     354   000353 006000   000000 023250   000355 006000   000000 023247    ................
  82     360   000357 006000   000000 023246   000361 006000   000000 023245    ................
  82     364   000363 006000   000000 023244   000365 006000   000000 023243    ................
  82     370   000367 006000   000000 021540   000371 006000                    ............
     2047    10313    1   END ZIG$SS_PSET;

PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:287  
--  Include file information  --

   ZI_SUB_LANG.:ZIC0TOU  is referenced.
   ZIG_GENERAL.:ZIC0TOU  cannot be made into a system file and is referenced.
   XU_SUBS_C.:LIB_E05  is referenced.
   XU_MACRO_C.:LIB_E05  is referenced.
   ZIG_DIR_STRUCS.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIG$SS_PSET.

   Procedure ZIG$SS_PSET requires 3122 words for executable code.
   Procedure ZIG$SS_PSET requires 26 words of local(AUTO) storage.

    No errors detected in file ZIG$SS_PSET.:ZIC0TSI    .
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:288  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:289  
          MINI XREF LISTING

ADD_FILLER
        94**DCL      9214<<ASSIGN   9222<<ASSIGN   9254>>ASSIGN
ALIAS_SEC
       113**DCL      8956>>IF       8963<<ASSIGN  10025>>IF      10033<<ASSIGN
ALIGNMENT IN PROCEDURE ALLOC
      8785**DCL      8783--PROC     8787>>IF       8788>>ASSIGN   8788>>ASSIGN   8789>>ASSIGN
ALLOC
      8783**PROC     9049--CALL     9060--CALL     9068--CALL     9077--CALL     9093--CALL     9221--CALL
      9243--CALL     9364--CALL     9386--CALL     9409--CALL     9530--CALL     9534--CALL     9545--CALL
      9549--CALL     9560--CALL     9564--CALL     9572--CALL     9584--CALL     9750--CALL     9758--CALL
      9817--CALL     9822--CALL     9950--CALL
ALT IN PROCEDURE CHANGE_TO_STR
      8502**LABEL    8497--CALLALT
ALT IN PROCEDURE CHANGE_TO_STR_SCH
      8521**LABEL    8516--CALLALT
AMOUNT IN PROCEDURE ALLOC
      8784**DCL      8783--PROC     8790>>ASSIGN
BLK.SUBLK$
      4962**DCL      8528>>ASSIGN   8528>>ASSIGN   8529>>ASSIGN
BUFFER1
        77**DCL        76--DCLINIT
BUFFER_ERR
        44**DCL     10138>>IF      10139<<ASSIGN
BUFFER_SIZE
        80**DCL      9426<>CALL     9459<>CALL
BUFFER_TEMP
        78**DCL      9457<>CALL
CHANGE_STR IN PROCEDURE CHANGE_TO_STR
      8491**DCL      8490--PROC     8497>>CALLBLT  8499<<CALLBLT
CHANGE_STR IN PROCEDURE CHANGE_TO_STR_SCH
      8510**DCL      8509--PROC     8516>>CALLBLT  8518<<CALLBLT
CHANGE_TO_STR
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:290  
      8490**PROC     9011--CALL     9015--CALL     9280--CALL     9300--CALL
CHANGE_TO_STR_SCH
      8509**PROC     8687--CALL     9318--CALL     9491--CALL
CHAR_SET IN PROCEDURE CHECK_ALIAS_DUPS
      8598**DCL      8610>>CALLBLT  8646>>CALLBLT
CHECK_ALIAS_DUPS
      8596**PROC     9130--CALL     9165--CALL     9199--CALL     9278--CALL     9333--CALL
COMP
       123**DCL      9351<<ASSIGN   9831>>IF       9839<<ASSIGN   9928>>IF
COMP_TYPE
        47**DCL      9506>>IF       9508<<ASSIGN   9788<<ASSIGN   9844<<ASSIGN   9923<<ASSIGN
CONTROL
      7444**DCL      9471--CALL
CONTROL.COPY_PRIVACY_KEY
      7464**DCL      8942--ASSIGN   9418>>ASSIGN
CONTROL.DIAGNOSTIC_PRIVACY_K
      7465**DCL      8954--ASSIGN   9419>>ASSIGN
CONTROL.FIRST_NFE_RECORD
      7484**DCL      9462<<ASSIGN   9463<>CALL     9464<<ASSIGN   9465<>CALL     9466>>CALL     9467>>ASSIGN
CONTROL.FIRST_SDS_RECORD
      7483**DCL      9413<<ASSIGN
CONTROL.INVOKE_PRIVACY_LOCK
      7474**DCL      8930--ASSIGN
CONTROL.LANGUAGE
      7462**DCL      9414<<ASSIGN
CONTROL.LAST_FILLER_LEN
      7476**DCL      9406<<ASSIGN   9407>>IF       9408<<ASSIGN
CONTROL.LAST_FILLER_NUM
      7475**DCL      9405<<ASSIGN
CONTROL.NEXT_AVAILABLE_RECORD
      7480**DCL      9467<<ASSIGN
CONTROL.NEXT_UWA_LOC
      7466**DCL      9411<<ASSIGN   9412>>ASSIGN   9420>>ASSIGN
CONTROL.NUM_AREAS
      7451**DCL      9190<<ASSIGN   9190>>ASSIGN
CONTROL.NUM_FIELDS
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:291  
      7453**DCL      9344<<ASSIGN   9344>>ASSIGN
CONTROL.NUM_RECORDS
      7452**DCL      9271<<ASSIGN   9271>>ASSIGN
CONTROL.NUM_SETS
      7454**DCL      9121<<ASSIGN   9121>>ASSIGN   9156<<ASSIGN   9156>>ASSIGN
CONTROL.SCHEMA_NAME
      7459**DCL      9317<<ASSIGN
CONTROL.SUBSCHEMA_NAME
      7460**DCL      9299<<ASSIGN
CONTROL.SUBSCHEMA_UTS
      7468**DCL      9416<<ASSIGN   9421>>ASSIGN
CONTROL.TRANSLATION_STATUS
      7446**DCL      9469<<ASSIGN   9470<<ASSIGN
CONTROL.TRANS_UWA_SIZE
      7471**DCL      9412<<ASSIGN
CONTROL.UWA_SIZE
      7449**DCL      9410<<ASSIGN   9411>>ASSIGN
COUNT1 IN PROCEDURE CHANGE_TO_STR
      8492**DCL      8497<<CALLBLT  8499>>CALLBLT
COUNT1 IN PROCEDURE CHANGE_TO_STR_SCH
      8511**DCL      8516<<CALLBLT  8518>>CALLBLT
CURRENT_ALIAS.QUAL_NAME
        73**DCL      8968<<ASSIGN   8990>>ASSIGN   8994<<ASSIGN   9016<<ASSIGN   9032>>ASSIGN   9313<<ASSIGN
CURRENT_ALIAS.SCHEMA_NAME
        72**DCL      8967<<ASSIGN   8989>>ASSIGN   8993<<ASSIGN   9012<<ASSIGN   9016>>ASSIGN   9017<<ASSIGN
      9031>>ASSIGN
CURRENT_ALIAS.SUBSCHEMA_NAME
        71**DCL      8966<<ASSIGN   8987<>CALL     8992<<ASSIGN   9035<<ASSIGN
CURRENT_ALIAS.TYPE
        70**DCL      8965<<ASSIGN   8987<>CALL     8991<<ASSIGN   9000<<ASSIGN   9002<<ASSIGN   9004<<ASSIGN
      9006<<ASSIGN   9008<<ASSIGN   9018<<ASSIGN   9029<>CALL     9312<<ASSIGN
CURRENT_RECORD
      6939**DCL      9119<>CALL     9120<<ASSIGN   9120>>ASSIGN   9127>>ASSIGN   9154<>CALL     9155<<ASSIGN
      9155>>ASSIGN   9162>>ASSIGN   9188<>CALL     9189<<ASSIGN   9189>>ASSIGN   9196>>ASSIGN   9269>>ASSIGN
      9272<>CALL     9273<<ASSIGN   9273>>ASSIGN   9275>>ASSIGN   9395<>CALL     9396<<ASSIGN   9396>>ASSIGN
      9413>>ASSIGN   9422<>CALL     9423<<ASSIGN   9423>>ASSIGN   9457<>CALL     9458<<ASSIGN   9458>>ASSIGN
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:292  
      9462>>ASSIGN   9464>>ASSIGN   9617<>CALL     9618<<ASSIGN   9618>>ASSIGN   9619>>ASSIGN   9963>>ASSIGN
      9965<>CALL     9966<<ASSIGN   9966>>ASSIGN   9967>>ASSIGN
DESCPTR
        76**DCL        78--IMP-PTR  9426<>CALL     9428>>IF       9428>>IF       9431>>CALL     9432>>ASSIGN
      9433>>ASSIGN   9434>>ASSIGN   9437>>ASSIGN   9440>>ASSIGN   9442>>ASSIGN   9442>>ASSIGN   9442>>ASSIGN
      9443>>ASSIGN   9443>>ASSIGN   9443>>ASSIGN   9444>>ASSIGN   9444>>ASSIGN   9447>>ASSIGN   9450>>ASSIGN
      9451>>ASSIGN   9451>>ASSIGN   9454>>ASSIGN   9454>>ASSIGN   9457>>CALL     9459<>CALL
DESC_TYPE_9
      7056**DCL      8556--ASSIGN   8824<>CALL     8837<>CALL     9119<>CALL     9154<>CALL     9188<>CALL
      9217<>CALL     9228<>CALL     9272<>CALL     9382<>CALL     9393<>CALL     9431<>CALL     9617<>CALL
      9965<>CALL
DESC_TYPE_9.ALPHABETIC
      7096**DCL      9091<<ASSIGN
DESC_TYPE_9.ALPHANUM
      7094**DCL      9239<<ASSIGN
DESC_TYPE_9.BUWA
      7069**DCL      9041<<ASSIGN   9056<<ASSIGN   9064<<ASSIGN   9072<<ASSIGN   9089<<ASSIGN   9241<<ASSIGN
      9360<<ASSIGN   9746<<ASSIGN   9754<<ASSIGN   9790<<ASSIGN   9841<<ASSIGN   9921<<ASSIGN   9958<<ASSIGN
DESC_TYPE_9.COMP
      7103**DCL      9513>>IF       9553>>IF       9644>>IF       9843<<ASSIGN
DESC_TYPE_9.COMP5A
      7121**DCL      9607<<ASSIGN   9613<<ASSIGN   9701>>IF
DESC_TYPE_9.COMPLEX
      7075**DCL      9749<<ASSIGN
DESC_TYPE_9.COMP_1
      7104**DCL      9538>>IF       9686>>IF       9796<<ASSIGN   9924>>IF
DESC_TYPE_9.COMP_2
      7105**DCL      9520>>IF       9523>>IF       9528>>IF       9608<<ASSIGN   9689>>IF       9703>>IF
      9800<<ASSIGN   9924>>IF
DESC_TYPE_9.COMP_3
      7106**DCL      9513>>IF       9553>>IF       9614<<ASSIGN   9651>>IF       9804<<ASSIGN
DESC_TYPE_9.COMP_4
      7111**DCL      8832<<ASSIGN   9435>>IF       9513>>IF       9553>>IF       9558>>IF       9644>>IF
      9806<<ASSIGN   9808<<ASSIGN
DESC_TYPE_9.DATA_ITEM
      7087**DCL      9111<<ASSIGN   9117<<ASSIGN   9146<<ASSIGN   9152<<ASSIGN   9180<<ASSIGN   9186<<ASSIGN
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:293  
DESC_TYPE_9.DB_KEY
      7108**DCL      9045<<ASSIGN   9075<<ASSIGN   9520>>IF       9520>>IF       9683>>IF       9811<<ASSIGN
      9924>>IF
DESC_TYPE_9.DISPLAY
      7102**DCL      8830<<ASSIGN   9046<<ASSIGN   9092<<ASSIGN   9240<<ASSIGN   9336<<ASSIGN   9516>>IF
      9580>>IF       9658>>IF       9776<<ASSIGN   9791<<ASSIGN   9842<<ASSIGN
DESC_TYPE_9.D_COMPLEX
      7076**DCL      9757<<ASSIGN
DESC_TYPE_9.ELEMENTARY
      7090**DCL      9043<<ASSIGN   9057<<ASSIGN   9065<<ASSIGN   9073<<ASSIGN   9090<<ASSIGN   9361<<ASSIGN
      9711>>ASSIGN   9747<<ASSIGN   9755<<ASSIGN   9793<<ASSIGN   9845<<ASSIGN   9922<<ASSIGN
DESC_TYPE_9.FLD_NM
      7067**DCL      9343<<ASSIGN   9957<<ASSIGN
DESC_TYPE_9.FLOAT_DOUBLE
      7074**DCL      9059<<ASSIGN   9577>>IF       9611>>IF       9615<<ASSIGN   9699>>IF       9820<<ASSIGN
DESC_TYPE_9.FLOAT_SINGLE
      7073**DCL      9067<<ASSIGN   9577>>IF       9605>>IF       9609<<ASSIGN   9697>>IF       9815<<ASSIGN
DESC_TYPE_9.F_DBK
      7072**DCL      9042<<ASSIGN   9680>>IF       9683>>IF
DESC_TYPE_9.INTEGER_TYPE
      7117**DCL      9048<<ASSIGN   9076<<ASSIGN   9798<<ASSIGN   9802<<ASSIGN   9813<<ASSIGN
DESC_TYPE_9.ITEM_LEVEL_01
      7088**DCL      9238<<ASSIGN
DESC_TYPE_9.JUST_RIGHT
      7110**DCL      9809<<ASSIGN
DESC_TYPE_9.KEY_NM
      7070**DCL      9112<<ASSIGN
DESC_TYPE_9.LENGTH
      7082**DCL      8827>>ASSIGN   8828<<ASSIGN   8828>>ASSIGN   8835<<ASSIGN   8835>>ASSIGN   9040<<ASSIGN
      9055<<ASSIGN   9063<<ASSIGN   9071<<ASSIGN   9087<<ASSIGN   9225<<ASSIGN   9226>>ASSIGN   9389<<ASSIGN
      9390>>ASSIGN   9432>>ASSIGN   9433>>ASSIGN   9587<<ASSIGN   9709>>ASSIGN   9745<<ASSIGN   9753<<ASSIGN
      9816<<ASSIGN   9821<<ASSIGN   9962<<ASSIGN
DESC_TYPE_9.LEVEL
      7080**DCL      9110<<ASSIGN   9145<<ASSIGN   9179<<ASSIGN   9235<<ASSIGN   9597<<ASSIGN   9710>>ASSIGN
      9959<<ASSIGN
DESC_TYPE_9.LINE
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:294  
      7058**DCL      8557<<ASSIGN
DESC_TYPE_9.LOGICAL
      7077**DCL      9363<<ASSIGN   9707>>IF
DESC_TYPE_9.LTDP
      7083**DCL      9088<<ASSIGN   9226<<ASSIGN   9390<<ASSIGN   9591<<ASSIGN   9594<<ASSIGN
DESC_TYPE_9.NAME
      7127**DCL      9115<<ASSIGN   9150<<ASSIGN   9184<<ASSIGN   9233<<ASSIGN   9340<<ASSIGN   9954<<ASSIGN
DESC_TYPE_9.NAME_SIZE
      7126**DCL      9116<<ASSIGN   9151<<ASSIGN   9185<<ASSIGN   9234<<ASSIGN   9341<<ASSIGN   9955<<ASSIGN
DESC_TYPE_9.NON_ELEMENTARY
      7089**DCL      9236<<ASSIGN   9960<<ASSIGN
DESC_TYPE_9.NUMERIC
      7092**DCL      8829<<ASSIGN   9044<<ASSIGN   9058<<ASSIGN   9066<<ASSIGN   9074<<ASSIGN   9362<<ASSIGN
      9445>>IF       9588>>IF       9660>>IF       9717>>IF       9748<<ASSIGN   9756<<ASSIGN   9792<<ASSIGN
      9978>>IF
DESC_TYPE_9.OFFSET
      7124**DCL      8827<<ASSIGN   9050<<ASSIGN   9061<<ASSIGN   9069<<ASSIGN   9078<<ASSIGN   9094<<ASSIGN
      9114<<ASSIGN   9129>>ASSIGN   9149<<ASSIGN   9164>>ASSIGN   9183<<ASSIGN   9198>>ASSIGN   9268<<ASSIGN
      9365<<ASSIGN   9434>>ASSIGN   9531<<ASSIGN   9535<<ASSIGN   9546<<ASSIGN   9550<<ASSIGN   9563<<ASSIGN
      9568<<ASSIGN   9573<<ASSIGN   9585<<ASSIGN   9621>>ASSIGN   9751<<ASSIGN   9759<<ASSIGN   9818<<ASSIGN
      9823<<ASSIGN   9961<<ASSIGN   9969>>ASSIGN
DESC_TYPE_9.PIC_HAS_S
      7100**DCL      8831<<ASSIGN   9511>>IF       9556>>IF       9646>>IF       9653>>IF       9663>>IF
      9797<<ASSIGN   9801<<ASSIGN   9812<<ASSIGN
DESC_TYPE_9.REC_NM
      7066**DCL      9237<<ASSIGN
DESC_TYPE_9.RLM_NM
      7064**DCL      9181<<ASSIGN
DESC_TYPE_9.RPT_CODE_NUM
      7123**DCL      9342<<ASSIGN   9956<<ASSIGN
DESC_TYPE_9.RTDP
      7084**DCL      9590<<ASSIGN   9712>>ASSIGN
DESC_TYPE_9.SET_NM
      7065**DCL      9147<<ASSIGN
DESC_TYPE_9.SIGN_TYP
      7116**DCL      9509>>IF       9515<<ASSIGN   9517<<ASSIGN   9582>>IF       9665>>IF       9667>>IF
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:295  
      9669>>IF       9671>>IF       9881<<ASSIGN   9893<<ASSIGN   9905>>IF       9906<<ASSIGN   9907<<ASSIGN
DESC_TYPE_9.SIZE
      7057**DCL      8558<<ASSIGN   8559>>IF       8560<<ASSIGN   8560>>ASSIGN   8560>>ASSIGN
DESC_TYPE_9.SRF_DBK
      7063**DCL      9047<<ASSIGN   9113<<ASSIGN   9148<<ASSIGN   9182<<ASSIGN   9220<<ASSIGN   9385<<ASSIGN
DESC_TYPE_9.SYNC_RIGHT
      7112**DCL      9528>>IF       9543>>IF       9857<<ASSIGN   9869<<ASSIGN
DIAG
       132**DCL      8944>>IF       8952<<ASSIGN
DISPLAY
       121**DCL      9349<<ASSIGN   9766>>IF       9774<<ASSIGN
END_SUBSCHEMA
        46**DCL      8854>>IF       8856>>IF       9472<<ASSIGN
EOF
        79**DCL      9426<>CALL     9427>>DOWHILE  9459<>CALL
EOFC
        65**DCL      9395<>CALL     9463<>CALL     9465<>CALL     9466<>CALL
ERROR
      5019**DCL-ENT  8534--CALL     8649--CALL     8718--CALL     8729--CALL     8922--CALL     8934--CALL
      8946--CALL     8958--CALL     8971--CALL     8997--CALL     9100--CALL     9124--CALL     9135--CALL
      9159--CALL     9170--CALL     9193--CALL     9204--CALL     9290--CALL     9303--CALL     9321--CALL
      9484--CALL     9825--CALL     9994--CALL    10005--CALL    10016--CALL    10027--CALL    10039--CALL
     10047--CALL    10059--CALL    10067--CALL    10079--CALL    10087--CALL    10099--CALL    10107--CALL
     10119--CALL    10153--CALL    10159--CALL    10165--CALL    10171--CALL    10177--CALL    10184--CALL
     10191--CALL    10197--CALL    10203--CALL    10209--CALL    10217--CALL    10228--CALL    10238--CALL
     10244--CALL    10250--CALL    10256--CALL    10262--CALL    10268--CALL    10274--CALL    10282--CALL
     10288--CALL    10294--CALL    10301--CALL
ERROR_STATUS
        85**DCL      8659<>CALL     8662<>CALL     8680>>DOCASE   8692<>CALL     8987<>CALL     9029<>CALL
      9258<<ASSIGN   9259>>DOWHILE  9263<>CALL     9481<>CALL     9482>>IF       9492<>CALL     9493>>IF
FACTER
       107**DCL      9442>>ASSIGN   9443>>ASSIGN   9714>>ASSIGN   9715>>ASSIGN   9975>>ASSIGN   9976>>ASSIGN
FIELD1.COUNT1
        52**DCL      8471<<ASSIGN   8529<<ASSIGN   8531>>CALLBLT  8558>>ASSIGN   9116>>ASSIGN   9151>>ASSIGN
      9185>>ASSIGN   9234>>ASSIGN   9341>>ASSIGN   9368>>IF       9920>>ASSIGN   9955>>ASSIGN  10149<<ASSIGN
     10150>>ASSIGN
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:296  
FIELD1.TEXT1
        53**DCL      8472<<ASSIGN   8530<<ASSIGN   9261>>CALLBLT 10150<<ASSIGN
GET_NUM
      8525**PROC     8908--CALL     9081--CALL     9761--CALL     9789--CALL
GET_WORD
      8469**PROC     9010--CALL     9014--CALL     9020--CALL     9026--CALL     9107--CALL     9142--CALL
      9177--CALL     9231--CALL     9298--CALL     9316--CALL     9330--CALL     9367--CALL     9478--CALL
      9919--CALL
GROUP_PACKED
       101**DCL      8825>>IF       9734>>IF       9739<<ASSIGN   9741<<ASSIGN   9951<<ASSIGN
HASH_STRUCT.ALIAS_TYPE
      6883**DCL      9023<<ASSIGN
HIGH IN PROCEDURE GET_NUM
      8527**DCL      8525--PROC     8532>>IF
I
        93**DCL      9242<<ASSIGN   9254>>ASSIGN   9738<<DOINDEX  9739>>ASSIGN  10142<<ASSIGN  10143>>DOWHILE
     10144<<ASSIGN  10144>>ASSIGN  10146>>DOWHILE 10147<<ASSIGN  10147>>ASSIGN  10149>>ASSIGN
I IN PROCEDURE CHECK_ALIAS_DUPS
      8604**DCL      8608<<ASSIGN   8609>>DOWHILE  8609>>DOWHILE  8610>>CALLBLT  8615>>CALLBLT  8616<<ASSIGN
      8616>>ASSIGN
I IN PROCEDURE UPDATE_GROUP
      8820**DCL      8821<<DOINDEX  8822>>IF       8824>>CALL     8825>>IF       8837>>CALL     8838>>ASSIGN
INIT_TYPE_9
      8554**PROC     9108--CALL     9143--CALL     9178--CALL     9232--CALL     9334--CALL     9952--CALL
INTERNAL_ID
        64**DCL      9114>>ASSIGN   9118<<ASSIGN   9118>>ASSIGN   9149>>ASSIGN   9153<<ASSIGN   9153>>ASSIGN
      9183>>ASSIGN   9187<<ASSIGN   9187>>ASSIGN
INVOK
       130**DCL      8920>>IF       8928<<ASSIGN
J IN PROCEDURE CHECK_ALIAS_DUPS
      8605**DCL      8610<<CALLBLT  8611>>IF       8615>>IF       8639<<CALLBLT  8640>>ASSIGN   8646<<CALLBLT
      8647>>IF       8657<<ASSIGN   8658<<ASSIGN   8659<>CALL     8661<<ASSIGN   8692<>CALL     8706<<CALLBLT
      8707>>ASSIGN
KEY_SEC
       117**DCL      9098>>IF       9105<<ASSIGN  10085>>IF      10093<<ASSIGN
LARGEST_GROUP
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:297  
       103**DCL      8821>>DOINDEX  8841<<ASSIGN   9211>>IF       9378>>IF       9734>>IF       9738>>DOINDEX
      9741>>ASSIGN   9762>>IF       9964<<ASSIGN
LAST_FILLER
       102**DCL      9259>>DOWHILE  9260<>CALL     9262<<ASSIGN   9262>>ASSIGN   9297<<ASSIGN   9405>>ASSIGN
LAST_GROUP
       100**DCL      8822>>IF       8824<>CALL     8837<>CALL     8838<<ASSIGN   9963<<ASSIGN
LAST_STATUS
        74**DCL      8618>>DOCASE   8656>>IF       8659<>CALL     8662<>CALL     8688>>DOCASE   8692<>CALL
      8969>>IF       8985<<ASSIGN   8995>>IF       9122>>IF       9126<<ASSIGN   9157>>IF       9161<<ASSIGN
      9191>>IF       9195<<ASSIGN   9263<>CALL     9274<<ASSIGN   9311<<ASSIGN   9327<<ASSIGN   9332<<ASSIGN
LEADING
       126**DCL      9354<<ASSIGN   9871>>IF       9879<<ASSIGN
LEFT
       124**DCL      9352<<ASSIGN   9847>>IF       9855<<ASSIGN
LHOLD
        48**DCL      9051<<ASSIGN   9526<<ASSIGN   9540<<ASSIGN   9557<<ASSIGN   9557>>ASSIGN   9560<>CALL
      9561>>IF       9572<>CALL     9583<<ASSIGN   9583>>ASSIGN   9584>>CALL     9587>>ASSIGN   9594>>ASSIGN
LINE
        95**DCL     10143>>DOWHILE 10146>>DOWHILE 10150>>ASSIGN
LINE_COUNT
        62**DCL      8557>>ASSIGN   9128>>ASSIGN   9163>>ASSIGN   9197>>ASSIGN   9276>>ASSIGN   9479>>ASSIGN
      9620>>ASSIGN   9968>>ASSIGN
LOCK_PTR$
        67**DCL      8930<<ASSIGN   8942<<ASSIGN   8954<<ASSIGN   9376>>ASSIGN
LOW IN PROCEDURE GET_NUM
      8526**DCL      8525--PROC     8532>>IF       8535>>ASSIGN
LTDP_HOLD
        49**DCL      9052<<ASSIGN   9524<<ASSIGN   9525<<ASSIGN   9541<<ASSIGN   9591>>ASSIGN
M$TIME
       229**DCL-ENT  9415--CALL
MAPPING_DIV
       112**DCL     10003>>IF      10011<<ASSIGN  10035>>IF
MUST_ALIAS IN PROCEDURE CHECK_ALIAS_DUPS
      8597**DCL      8606<<ASSIGN   8613<<ASSIGN   8647>>IF
NO_ERRORS
        43**DCL      9468>>IF
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:298  
NO_ITEMS
        96**DCL      9218>>IF       9230<<ASSIGN   9331<<ASSIGN   9383>>IF
NUM
        61**DCL      8531<<CALLBLT  8532>>IF       8532>>IF       8535<<ASSIGN   8909>>ASSIGN   9086<<ASSIGN
      9087>>ASSIGN   9088>>ASSIGN   9093>>CALL     9762>>IF       9763<>CALL     9764>>ASSIGN   9794>>DOCASE
      9920<<ASSIGN   9926<>CALL     9951>>ASSIGN   9959>>ASSIGN   9963>>ASSIGN   9964>>ASSIGN   9972>>ASSIGN
NUM_BIT
       122**DCL      9350<<ASSIGN   9778>>IF       9786<<ASSIGN   9928>>IF
ONE_CHANGE IN PROCEDURE CHANGE_TO_STR
      8493**DCL      8497>>CALLBLT  8499>>CALLBLT
ONE_CHANGE IN PROCEDURE CHANGE_TO_STR_SCH
      8512**DCL      8516>>CALLBLT  8518>>CALLBLT
PARAN
      4861**DCL        35--PROC
PARAN.CHARPOS
      4899**DCL     10142>>ASSIGN  10149>>ASSIGN  10150>>ASSIGN
PARAN.CODE
      4882**DCL      8896>>IF       8896>>IF       8896>>IF       8896>>IF       8896>>IF       8896>>IF
      8896>>IF       8896>>IF       8906>>IF       8911>>ASSIGN   8914>>IF       8916<<ASSIGN   8918>>DOCASE
     10151>>DOCASE  10300<>CALL
PARAN.OUT$
      4891**DCL      8470>>ASSIGN   8470>>ASSIGN   8471>>ASSIGN   8528>>ASSIGN   8528>>ASSIGN   8529>>ASSIGN
PARAN.TYPE
      4862**DCL      8844>>DOCASE
PIC_STR
       129**DCL      9357<<ASSIGN   9909>>IF       9917<<ASSIGN
PRIV
       131**DCL      8932>>IF       8940<<ASSIGN
PTR$
        86**DCL      8659<>CALL     8662<>CALL     8686>>ASSIGN   8692<>CALL     8987<>CALL     8989>>ASSIGN
      8990>>ASSIGN   9021>>IF       9023>>ASSIGN   9024>>ASSIGN   9029<>CALL     9031>>ASSIGN   9032>>ASSIGN
      9263<>CALL     9481<>CALL     9492<>CALL     9494>>ASSIGN
READSF
        39**DCL-ENT  8824--CALL     9217--CALL     9382--CALL     9431--CALL
REALM_SEC
       115**DCL      9168>>IF       9175<<ASSIGN  10045>>IF      10053<<ASSIGN
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:299  
RECORD_SEC
       118**DCL      9202>>IF       9209<<ASSIGN  10105>>IF      10113<<ASSIGN
RECORD_TYPE
        92**DCL      8657>>ASSIGN   9213<<ASSIGN   9213>>ASSIGN
RETURN_START IN PROCEDURE ALLOC
      8786**DCL      8783--PROC     8789<<ASSIGN
RIGHT
       125**DCL      9353<<ASSIGN   9859>>IF       9867<<ASSIGN
RTDP_HOLD
        50**DCL      9053<<ASSIGN   9527<<ASSIGN   9542<<ASSIGN   9590>>ASSIGN
SAVE_LEVEL
        83**DCL      9597>>ASSIGN   9764<<ASSIGN
SAVE_NUM
        99**DCL      8909<<ASSIGN   9086>>ASSIGN
SAVE_PARAN_CODE
        98**DCL      8911<<ASSIGN   8916>>ASSIGN
SAVE_RECORD_NAME
        97**DCL      9279<<ASSIGN   9280<>CALL
SAVE_RECORD_NUM
        81**DCL      9215>>IF       9217<>CALL     9228<>CALL     9269<<ASSIGN   9310<<ASSIGN   9380>>IF
      9382<>CALL     9393<>CALL
SAVE_RECORD_OFFSET
        82**DCL      9225>>ASSIGN   9270<<ASSIGN   9309<<ASSIGN   9342>>ASSIGN   9389>>ASSIGN   9956>>ASSIGN
SAVE_TYPE_9
      7233**DCL      8556--ASSIGN
SEPARATE
       128**DCL      9356<<ASSIGN   9895>>IF       9903<<ASSIGN
SET_FIELDS
      5022**DCL-ENT 10038--CALL    10058--CALL    10078--CALL    10098--CALL    10118--CALL
SET_FIELD_NUM
      5023**DCL-ENT  9260--CALL    10300--CALL
SET_SEC
       116**DCL      9133>>IF       9140<<ASSIGN  10065>>IF      10073<<ASSIGN
SSCALE
       105**DCL      9447<<ASSIGN   9448>>IF       9449<<ASSIGN   9449>>ASSIGN   9450>>ASSIGN   9719<<ASSIGN
      9720>>IF       9721<<ASSIGN   9721>>ASSIGN   9722>>ASSIGN   9980<<ASSIGN   9981>>IF       9982<<ASSIGN
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:300  
      9982>>ASSIGN   9983>>ASSIGN
SSTRANS.SNAME
      1432**DCL      9319>>IF       9319>>IF
SSTRANS.SSNAME
      1433**DCL      9301>>IF
START
        84**DCL      9049<>CALL     9050>>ASSIGN   9060<>CALL     9061>>ASSIGN   9068<>CALL     9069>>ASSIGN
      9077<>CALL     9078>>ASSIGN   9093<>CALL     9094>>ASSIGN   9221<>CALL     9243<>CALL     9364<>CALL
      9365>>ASSIGN   9386<>CALL     9409<>CALL     9530<>CALL     9531>>ASSIGN   9534<>CALL     9535>>ASSIGN
      9545<>CALL     9546>>ASSIGN   9549<>CALL     9550>>ASSIGN   9560<>CALL     9563>>ASSIGN   9564<>CALL
      9568>>ASSIGN   9572<>CALL     9573>>ASSIGN   9584<>CALL     9585>>ASSIGN   9750<>CALL     9751>>ASSIGN
      9758<>CALL     9759>>ASSIGN   9817<>CALL     9818>>ASSIGN   9822<>CALL     9823>>ASSIGN   9950<>CALL
START_LEVEL IN PROCEDURE UPDATE_GROUP
      8819**DCL      8818--PROC     8821>>DOINDEX  8841>>ASSIGN
STATUS
        75**DCL      8987<>CALL     9029<>CALL
STORE
      8756**PROC     9131--CALL     9166--CALL     9200--CALL     9286--CALL     9496--CALL     9728--CALL
      9990--CALL
STRING12
        68**DCL      9376<<ASSIGN
STRING_TO_STORE IN PROCEDURE STORE
      8757**DCL      8756--PROC     8758--CALL
STRUCTURE_DIV
       114**DCL     10014>>IF      10022<<ASSIGN  10055>>IF      10075>>IF      10095>>IF      10115>>IF
SUBSCHEMA_KEY
      5054**DCL      5055--REDEF
SUB_ERR
        45**DCL      8854>>UNWIND   8856>>UNWIND  10310>>UNWIND
SUB_LANGUAGE
      6837**DCL      8495>>IF       8495>>IF       8497>>CALLBLT  8499>>CALLBLT  8514>>IF       8514>>IF
      8516>>CALLBLT  8518>>CALLBLT  8610>>CALLBLT  8637>>IF       8646>>CALLBLT  8654>>DOCASE   8704>>IF
      8896>>IF       8956>>IF       9027>>IF       9080>>IF       9098>>IF       9133>>IF       9168>>IF
      9202>>IF       9255>>IF       9288>>IF       9335>>IF       9345>>IF       9414>>ASSIGN   9417>>ASSIGN
      9577>>IF      10215>>IF
SYM.COUNT
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:301  
      4998**DCL      5001--IMP-SIZ  8470>>ASSIGN   8471>>ASSIGN   8528>>ASSIGN   8529>>ASSIGN
SYM.TEXT
      5001**DCL      8470>>ASSIGN   8528>>ASSIGN
TEMP_WORD
       104**DCL      8607<<ASSIGN   8615<<CALLBLT  8621>>ASSIGN   8625>>ASSIGN   8629>>ASSIGN   8633>>ASSIGN
      8639>>CALLBLT  8640>>ASSIGN   8643>>ASSIGN   8686<<ASSIGN   8687<>CALL     8690>>ASSIGN   8695>>ASSIGN
      8698>>ASSIGN   8701>>ASSIGN   8706>>CALLBLT  8707>>ASSIGN   8710>>ASSIGN   9261<<CALLBLT  9263<>CALL
      9266>>ASSIGN  10037<<ASSIGN  10038<>CALL    10057<<ASSIGN  10058<>CALL    10077<<ASSIGN  10078<>CALL
     10097<<ASSIGN  10098<>CALL    10117<<ASSIGN  10118<>CALL
TIME_FPT
       785**DCL      9415<>CALL
TIME_FPT.V
       789**DCL       785--DCLINIT
TITLE_DIV
       111**DCL      9288>>IF       9295<<ASSIGN   9992>>IF      10000<<ASSIGN
TN_S
       109**DCL      9444>>ASSIGN   9716>>ASSIGN   9977>>ASSIGN
TRAILING
       127**DCL      9355<<ASSIGN   9883>>IF       9891<<ASSIGN
TRANS_ALIAS.QUAL_NAME
        91**DCL      8990<<ASSIGN   9021>>IF       9024<<ASSIGN   9032<<ASSIGN
TRANS_ALIAS.SCHEMA_NAME
        90**DCL      8686>>ASSIGN   8989<<ASSIGN   9031<<ASSIGN   9494>>ASSIGN
TYPE_100
      7516**DCL      9422<>CALL
TYPE_100.COPY_PRIVACY
      7520**DCL      9418<<ASSIGN
TYPE_100.DIAG_PRIVACY
      7521**DCL      9419<<ASSIGN
TYPE_100.LANG_TYPE
      7518**DCL      9417<<ASSIGN
TYPE_100.NEXT_UWA
      7522**DCL      9420<<ASSIGN
TYPE_100.TRANS_UTS
      7524**DCL      9421<<ASSIGN
TYPE_200
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:302  
      7624**DCL      9200<>CALL
TYPE_200.AREA_BITS.ALIASED
      7634**DCL      8622<<ASSIGN   8691<<ASSIGN
TYPE_200.AREA_NAME
      7628**DCL      8621<<ASSIGN   8690<<ASSIGN   8692<>CALL
TYPE_200.ID_NUM
      7632**DCL      9198<<ASSIGN
TYPE_200.REF_LINE
      7626**DCL      9196<<ASSIGN
TYPE_200.SOUR_LINE
      7627**DCL      9197<<ASSIGN
TYPE_200.SUB_AREA_NAME
      7630**DCL      8620<<ASSIGN
TYPE_300
      7725**DCL      9166<>CALL
TYPE_300.ALIASED
      7763**DCL      8626<<ASSIGN   8696<<ASSIGN
TYPE_300.ID_NUM
      7733**DCL      9164<<ASSIGN
TYPE_300.INFO
      7734**DCL      7735--REDEF
TYPE_300.REF_LINE
      7727**DCL      9162<<ASSIGN
TYPE_300.SET_NAME
      7729**DCL      8625<<ASSIGN   8695<<ASSIGN
TYPE_300.SOUR_LINE
      7728**DCL      9163<<ASSIGN
TYPE_300.SUB_SET_NAME
      7731**DCL      8624<<ASSIGN
TYPE_350
      7793**DCL      9131<>CALL
TYPE_350.ALIASED
      7802**DCL      8630<<ASSIGN   8699<<ASSIGN
TYPE_350.ID_NUM
      7801**DCL      9129<<ASSIGN
TYPE_350.KEY_NAME
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:303  
      7797**DCL      8629<<ASSIGN   8698<<ASSIGN
TYPE_350.REF_LINE
      7795**DCL      9127<<ASSIGN
TYPE_350.SOUR_LINE
      7796**DCL      9128<<ASSIGN
TYPE_350.SUB_KEY_NAME
      7799**DCL      8628<<ASSIGN
TYPE_400
      7832**DCL      9286<>CALL
TYPE_400.ALIASED
      7858**DCL      8634<<ASSIGN   8702<<ASSIGN
TYPE_400.ID_NUM
      7840**DCL      9277<<ASSIGN
TYPE_400.INFO
      7841**DCL      7842--REDEF
TYPE_400.LAST_FILLER_LEN
      7862**DCL      9254<<ASSIGN   9255>>IF       9392<<ASSIGN
TYPE_400.LAST_FILLER_TEXT
      7861**DCL      9266<<ASSIGN
TYPE_400.RECORD_NAME
      7836**DCL      8633<<ASSIGN   8701<<ASSIGN   9279>>ASSIGN
TYPE_400.REF_LINE
      7834**DCL      9275<<ASSIGN
TYPE_400.SOUR_LINE
      7835**DCL      9276<<ASSIGN
TYPE_400.SUB_RECORD_NAME
      7838**DCL      8632<<ASSIGN
TYPE_420
      7944**DCL      9496<>CALL
TYPE_420.AREA_NAME
      7948**DCL      9494<<ASSIGN   9495<<ASSIGN
TYPE_420.SOUR_LINE
      7947**DCL      9479<<ASSIGN
TYPE_420.SUB_AREA_NAME
      7950**DCL      9480<<ASSIGN
TYPE_430
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:304  
      8011**DCL      9728<>CALL     9990<>CALL
TYPE_430.ALIASED
      8025**DCL      8644<<ASSIGN   8711<<ASSIGN
TYPE_430.DATA_TYPE
      8020**DCL      9647<<ASSIGN   9648<<ASSIGN   9654<<ASSIGN   9655<<ASSIGN   9661<<ASSIGN   9666<<ASSIGN
      9668<<ASSIGN   9670<<ASSIGN   9672<<ASSIGN   9675<<ASSIGN   9681<<ASSIGN   9684<<ASSIGN   9687<<ASSIGN
      9690<<ASSIGN   9698<<ASSIGN   9700<<ASSIGN   9704<<ASSIGN   9705<<ASSIGN   9708<<ASSIGN   9714>>ASSIGN
      9715>>ASSIGN   9716>>ASSIGN   9736>>IF       9970<<ASSIGN   9975>>ASSIGN   9976>>ASSIGN   9977>>ASSIGN
TYPE_430.EIS.ADDER
      8030**DCL      8031--REDEF    8032--REDEF
TYPE_430.EIS.ADDER_C.OFFSET
      8034**DCL      9715<<ASSIGN   9976<<ASSIGN
TYPE_430.EIS.ADDER_C.REG
      8033**DCL      9713<<ASSIGN   9974<<ASSIGN
TYPE_430.EIS.ADSC.N
      8076**DCL      9726<<ASSIGN   9987<<ASSIGN
TYPE_430.EIS.EIS_BITS
      8035**DCL      8036--REDEF    8040--REDEF    8068--REDEF
TYPE_430.EIS.EIS_TN_S.TN_S
      8038**DCL      9716<<ASSIGN   9977<<ASSIGN
TYPE_430.EIS.NDSC.CN
      8041**DCL      9714<<ASSIGN   9975<<ASSIGN
TYPE_430.EIS.NDSC.N
      8067**DCL      9723<<ASSIGN   9984<<ASSIGN
TYPE_430.EIS.NDSC.SF
      8063**DCL      9722<<ASSIGN   9983<<ASSIGN
TYPE_430.ELEMENTARY
      8024**DCL      9711<<ASSIGN   9971<<ASSIGN
TYPE_430.FIELD_NAME
      8015**DCL      8640<<ASSIGN   8643<<ASSIGN   8707<<ASSIGN   8710<<ASSIGN
TYPE_430.INFO
      8077**DCL      8078--REDEF
TYPE_430.LEN_FIELD
      8021**DCL      9709<<ASSIGN   9723>>ASSIGN   9726>>ASSIGN   9984>>ASSIGN   9987>>ASSIGN   9989<<ASSIGN
TYPE_430.LEVEL_FIELD
      8023**DCL      9710<<ASSIGN   9972<<ASSIGN
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:305  
TYPE_430.OFFSET
      8019**DCL      9621<<ASSIGN   9714>>ASSIGN   9715>>ASSIGN   9969<<ASSIGN   9975>>ASSIGN   9976>>ASSIGN
TYPE_430.REF_LINE
      8013**DCL      9619<<ASSIGN   9967<<ASSIGN
TYPE_430.SCALE_FIELD
      8022**DCL      9712<<ASSIGN   9719>>ASSIGN   9973<<ASSIGN   9980>>ASSIGN
TYPE_430.SOUR_LINE
      8014**DCL      9620<<ASSIGN   9968<<ASSIGN
TYPE_430.SUB_FIELD_NAME
      8017**DCL      8636<<ASSIGN
TYPE_430_B.DATA_TYPE
      8359**DCL      9437<<ASSIGN   9440<<ASSIGN   9442>>ASSIGN   9443>>ASSIGN   9444>>ASSIGN
TYPE_430_B.EIS.ADDER
      8369**DCL      8370--REDEF    8371--REDEF
TYPE_430_B.EIS.ADDER_C.OFFSET
      8373**DCL      9443<<ASSIGN
TYPE_430_B.EIS.ADSC.N
      8415**DCL      9433<<ASSIGN   9454<<ASSIGN
TYPE_430_B.EIS.EIS_BITS
      8374**DCL      8375--REDEF    8379--REDEF    8407--REDEF
TYPE_430_B.EIS.EIS_TN_S.TN_S
      8377**DCL      9444<<ASSIGN
TYPE_430_B.EIS.NDSC.CN
      8380**DCL      9442<<ASSIGN
TYPE_430_B.EIS.NDSC.N
      8406**DCL      9451<<ASSIGN
TYPE_430_B.EIS.NDSC.SF
      8402**DCL      9450<<ASSIGN
TYPE_430_B.INFO
      8416**DCL      8417--REDEF
TYPE_430_B.LEN_FIELD
      8360**DCL      9428>>IF       9432<<ASSIGN   9451>>ASSIGN   9454>>ASSIGN
TYPE_430_B.OFFSET
      8358**DCL      9434<<ASSIGN   9442>>ASSIGN   9443>>ASSIGN
TYPE_430_B.REF_LINE
      8352**DCL      9431<>CALL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:306  
TYPE_430_B.SCALE_FIELD
      8361**DCL      9447>>ASSIGN
TYPE_430_B.TYPE
      8351**DCL      9428>>IF
TYPE_COMP
       120**DCL      9348<<ASSIGN
UCLOSE
      5043**DCL-ENT  9424--CALL     9461--CALL
UGET
      5041**DCL-ENT  9426--CALL     9459--CALL
UOPEN
      5040**DCL-ENT  9425--CALL
UPDATE_GROUP
      8818**PROC     9212--CALL     9379--CALL     9763--CALL
UPUT
      5042**DCL-ENT  8758--CALL
USAGE_IS
       119**DCL      9347<<ASSIGN   9936<<ASSIGN
UTSS
        63**DCL       789--DCLINIT  9416>>ASSIGN
UWA_ALLOC
        66**DCL      8787>>IF       8788<<ASSIGN   8788>>ASSIGN   8788>>ASSIGN   8789>>ASSIGN   8790<<ASSIGN
      8790>>ASSIGN   8828>>ASSIGN   8835>>ASSIGN   9225>>ASSIGN   9242>>ASSIGN   9254>>ASSIGN   9268>>ASSIGN
      9270>>ASSIGN   9277>>ASSIGN   9389>>ASSIGN   9406>>ASSIGN   9410>>ASSIGN   9961>>ASSIGN   9962>>ASSIGN
U_SUB_ERR
     10288**LABEL   10140--GOTO
WARNING
      5020**DCL-ENT  9370--CALL     9768--CALL     9780--CALL     9833--CALL     9849--CALL     9861--CALL
      9873--CALL     9885--CALL     9897--CALL     9911--CALL     9930--CALL
WORD1
        60**DCL      8470<<ASSIGN   8472>>ASSIGN   8528<<ASSIGN   8530>>ASSIGN   8531>>CALLBLT  8607>>ASSIGN
      8609>>DOWHILE  8610>>CALLBLT  8620>>ASSIGN   8624>>ASSIGN   8628>>ASSIGN   8632>>ASSIGN   8636>>ASSIGN
      8646>>CALLBLT  8659<>CALL     8662<>CALL     9011<>CALL     9012>>ASSIGN   9015<>CALL     9017>>ASSIGN
      9024>>ASSIGN   9029<>CALL     9035>>ASSIGN   9115>>ASSIGN   9150>>ASSIGN   9184>>ASSIGN   9233>>ASSIGN
      9299>>ASSIGN   9300<>CALL     9301>>IF       9317>>ASSIGN   9318<>CALL     9319>>IF       9340>>ASSIGN
      9376>>ASSIGN   9480>>ASSIGN   9481<>CALL     9491<>CALL     9492<>CALL     9495>>ASSIGN   9926<>CALL
PL6.E3A0      #001=ZIG$SS_PSET File=ZIG$SS_PSET.:ZIC0TSI                         FRI 09/05/97 12:15 Page:307  
      9954>>ASSIGN
WORDS32 IN PROCEDURE INIT_TYPE_9
      8555**DCL      8556<<ASSIGN   8556>>ASSIGN
WRIT64
        40**DCL-ENT  9471--CALL
WRITSF
        38**DCL-ENT  8837--CALL     9119--CALL     9154--CALL     9188--CALL     9228--CALL     9272--CALL
      9393--CALL     9395--CALL     9422--CALL     9457--CALL     9463--CALL     9465--CALL     9466--CALL
      9617--CALL     9965--CALL
WROTE_TYPE_9
       106**DCL      9314<<ASSIGN   9329<<ASSIGN   9501>>IF       9503<<ASSIGN   9953<<ASSIGN
ZIG$HASH_IT
        87**DCL-ENT  8659--CALL     8662--CALL     8692--CALL     8987--CALL     9029--CALL     9263--CALL
      9481--CALL     9492--CALL
ZIG$SS_PIC
        42**DCL-ENT  9926--CALL
ZIG$SS_READ
        37**DCL-ENT  8855--CALL
