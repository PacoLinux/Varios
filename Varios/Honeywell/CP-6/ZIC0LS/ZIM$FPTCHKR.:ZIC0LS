
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        ZIM$FPTCHKR: PROC
        7        7               AVOID($PR5,$PR6,$PR7);
        8        8        %INCLUDE CP_6;
        9       89        %INCLUDE M_INFO_C;
       10      229        %INCLUDE ZI$GLOBAL;
       11      715            %GLOBALS;
       12     1023        %INCLUDE ZI$DBCB;
       13     1665            %DBCB;
       14     2143        %INCLUDE B$JIT;
       15     2433        %INCLUDE ZI_ERRORS_C;
       16     2759    1   DCL ZIB$SEGSIZE ENTRY(2);
       17     2760    1   DCL ZIB$SEGDECODE ENTRY(4);
       18     2761    1   DCL ZIM$ERRMSG ENTRY(1);
       19     2762        %FPT_CLRSTK(FRAMES=3,STCLASS=CONSTANT);
       20     2776    1   DCL ZI_FPTCHKR_DUMP BIT(1) SYMREF;
       21     2777    1   DCL B$JIT$ PTR SYMREF; /* Pointer to Job Information Table */
       22     2778    1   DCL PSR$ PTR SYMREF; /* Pointer to Parameter Segment Register */
       23     2779    1   DCL VLP$ PTR SYMREF; /* Pointer to user's Vector Located Paramters--same as PS0$ */
       24     2780    1   DCL P$ PTR; /* Pointer to current parameter (vector) */
       25     2781    1   DCL 1 P REDEF P$,
       26     2782    1         2 OFFSET UBIN(18) UNAL,
       27     2783    1         2 * UBIN(6) UNAL,
       28     2784    1         2 SEGID UBIN(12) UNAL;
       29     2785    1   DCL VECBASE UBIN(36); /* Vector base address in bytes */
       30     2786    1   DCL VECBOUND UBIN(36); /* Vector bound in bytes--size of segment */
       31     2787    1   DCL PBOUND UBIN(36); /* Number of parameters (vectors) */
       32     2788    1   DCL VEC_CT UBIN(36); /* Current vector number--V0 thru V6 */
       33     2789    1   DCL I UBIN(36); /* Index + 1 into VECTOR_TABLE */
       34     2790    1   DCL ALNMT UBIN(36); /* Alignment of current vector */
       35     2791    1   DCL SIZE UBIN(36); /* Size of current vector in words */
       36     2792    1   DCL VEC_CHAR CHAR(1); /* Vector number in char form for err msg */
       37     2793    1   DCL TEMP_REM_RECOVER REMEMBER; /* Temporary error recovery address */
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:2    
       38     2794    1   DCL RECOVER_ADDR REDEF TEMP_REM_RECOVER BIT(72); /* To see addr in BIT format */
       39     2795    1   DCL DONE BIT(1); /* Done checking all vectors = '1'B */
       40     2796    1   DCL VBL_SIZE BIT(1); /* Variable no. of params = '1'B for curr vector */
       41     2797    1   DCL RD_FLAG BIT(1); /* Read access = '1'B for current vector */
       42     2798    1   DCL WR_FLAG BIT(1); /* Write access = '1'B for current vector */
       43     2799    1   DCL ERR_FLAG BIT(1); /* Error flag = '1'B if FPT err has been found */
       44     2800    1   DCL STORE_JIT_ACCESS BIT(1); /* Only store JIT_TABLE info 1st time thru */
       45     2801    1   DCL STORE_JIT_VALUES BIT(1);
       46     2802        /*
       47     2803            Flags from the descriptor found in ZIB$SEGDECODE.
       48     2804        */
       49     2805    1   DCL 1 FLAGS,
       50     2806    1         2 RD_ALLOW BIT(1) UNAL,
       51     2807    1         2 WR_ALLOW BIT(1) UNAL,
       52     2808    1         2 SAVE_DESCRIPTOR BIT(1) UNAL,
       53     2809    1         2 UTILIZE_CACHE BIT(1) UNAL,
       54     2810    1         2 RSVD_FOR_SOFTWARE BIT(1) UNAL,
       55     2811    1         2 EXEC_ALLOW BIT(1) UNAL,
       56     2812    1         2 PRIVILEGED BIT(1) UNAL,
       57     2813    1         2 SEG_NOT_EMPTY BIT(1) UNAL,
       58     2814    1         2 SEG_PRESENT BIT(1) UNAL,
       59     2815    1         2 * UBIN(27) UNAL;
       60     2816        /*
       61     2817            Table of vector data used by FPTs.  Information is for the
       62     2818            following vectors:
       63     2819
       64     2820                 VECTOR_TABLE.?(0) = IA_
       65     2821                 VECTOR_TABLE.?(1) = UWA_
       66     2822                 VECTOR_TABLE.?(2) = RVA_
       67     2823                 VECTOR_TABLE.?(3) = USEP_
       68     2824                 VECTOR_TABLE.?(4) = ANAME_
       69     2825                 VECTOR_TABLE.?(5) = DBK_
       70     2826                 VECTOR_TABLE.?(6) = CHKPT_NUMBER_
       71     2827                 VECTOR_TABLE.?(7) = BUFFS_ALLOC_
       72     2828        */
       73     2829    1   DCL 1 VECTOR_TABLE (0:7) CONSTANT,
       74     2830         /* Size of vector in words */
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:3    
       75     2831    1         2 SIZE UBIN(16) INIT(46,656,106,4,8,1*3) CALIGNED,
       76     2832         /* Double Word = 8 bytes, Word = 4 bytes*/
       77     2833    1         2 ALNMT UBIN(9) INIT(8*4,4*4) CALIGNED,
       78     2834         /* Read Access = '1'B */
       79     2835    1         2 RD_FLAG BIT(1) INIT('0'B*6,'1'B,'0'B) UNAL,
       80     2836         /* Write Access = '1'B */
       81     2837    1         2 WR_FLAG BIT(1) INIT('1'B*6,'0'B,'1'B) UNAL,
       82     2838    1         2 * UBIN(7) INIT(0*8) UNAL;
       83     2839        /*
       84     2840            Table of FPT information including number of vectors expected,
       85     2841            vector data for Vector 0 of each FPT, and subscripts to the
       86     2842            VECTOR_TABLE for other vectors.
       87     2843
       88     2844            In most cases Vector 0 corresponds to V_ ; the exceptions are:
       89     2845
       90     2846                 FPT_TABLE.V0.?(0)  = ERROR_
       91     2847                           .
       92     2848                 FPT_TABLE.V0.?(31) = ERROR_
       93     2849                 FPT_TABLE.V0.?(32) = TYPE_
       94     2850                 FPT_TABLE.V0.?(33) = TYPE_
       95     2851                           .
       96     2852                 FPT_TABLE.V0.?(39) = SEED_
       97     2853                           .
       98     2854                 FPT_TABLE.V0.?(42) = BUFFS_REQ_
       99     2855                           .
      100     2856                 FPT_TABLE.V0.?(47) = ERROR_
      101     2857                 FPT_TABLE.V0.?(48) = NUM_DEQED_
      102     2858                           .
      103     2859        */
      104     2860    1   DCL 1 FPT_TABLE (0:49) CONSTANT,
      105     2861         /* Number of vectors expected */
      106     2862    1         2 VECTOR# UBIN(9) INIT(2,5*8,7,6,5*15,6,5*4,3,1*2,0*5,1,0*2,2,
      107     2863    1    5*2,0,6,1*2,0) CALIGNED,
      108     2864    1         2 V0,
      109     2865         /* Size of vector in words */
      110     2866    1           3 SIZE UBIN(9) INIT(2,0,2*4,4,2*2,4*2,2*3,4*3,2*5,4*7,
      111     2867    1    2*3,1*2,0*5,1,0*2,1,2*2,0,2*2,1,0) CALIGNED,
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:4    
      112     2868         /* Double Word = 8 bytes, Word = 4 bytes */
      113     2869    1           3 ALNMT UBIN(9) INIT(4*2,8*29,4*3,0*5,4,0*2,4,8*2,0,8,4*2,0)
      114     2870    1    CALIGNED,
      115     2871         /* Read Access = '1'B */
      116     2872    1           3 RD_FLAG BIT(1) INIT('0'B,'1'B*30,'0'B,'1'B*2,'0'B*5,'1'B,
      117     2873    1    '0'B*2,'1'B*3,'0'B,'1'B,'0'B*3) UNAL,
      118     2874         /* Write Access = '1'B */
      119     2875    1           3 WR_FLAG BIT(1) INIT('1'B,'0'B*30,'1'B,'0'B*15,'1'B*2,'0'B) UNAL,
      120     2876         /* Variable number of parameters = '1'B */
      121     2877    1           3 VBL_SIZE BIT(1) INIT('0'B*2,'1'B*3,'0'B,'1'B,'0'B*7,'1'B*15,
      122     2878    1    '0'B,'1'B,'0'B*12,'1'B*2,'0'B*5) UNAL,
      123     2879    1           3 * UBIN(6) INIT(0*50) UNAL,
      124     2880         /* V1 through V6 are subscripts to
      125     2881            vector data in VECTOR_TABLE */
      126     2882    1         2 V1 UBIN(9) INIT(1*32,0*10,8,1*2,0,1,0*3) CALIGNED,
      127     2883    1         2 V2 UBIN(9) INIT(0,2*30,7,0*11,2*2,0,2,0*3) CALIGNED,
      128     2884    1         2 V3 UBIN(9) INIT(0,3*30,0*12,3*2,0,3,0*3) CALIGNED,
      129     2885    1         2 V4 UBIN(9) INIT(0,4*30,0*12,4*2,0,4,0*3) CALIGNED,
      130     2886    1         2 V5 UBIN(9) INIT(0*9,5,6,0*15,6,0*19,6,0*3) CALIGNED,
      131     2887    1         2 V6 UBIN(9) INIT(0*9,6,0*40) CALIGNED,
      132     2888    1         2 * UBIN(16) INIT(0*50) CALIGNED;
      133     2889
      134     2890        /*
      135     2891            EQUs for the error codes stored in GLOBAL.FPTCHKR_CODE.
      136     2892        */
      137     2893        %EQU NONVAR_SIZE_ERR = 1;
      138     2894        %EQU VAR_SIZE_ERR = 2;
      139     2895        %EQU READ_ACCESS_ERR = 3;
      140     2896        %EQU WRITE_ACCESS_ERR = 4;
      141     2897        %EQU ALIGNMENT_ERR = 5;
      142     2898        %EQU WRONG_NUM_VECTORS_ERR = 6;
      143     2899        %EQU NO_VECTORS_PASSED_ERR = 7;
      144     2900        %EQU IS_ACCESS_ERR = 8;
      145     2901        %EQU IS_OUT_OF_BOUNDS_ERR = 9;
      146     2902        %EQU DS_OUT_OF_BOUNDS_ERR = 10;
      147     2903
      148     2904        /*
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:5    
      149     2905                           BEGIN ZIM$FPTCHKR
      150     2906        */
      151     2907
      152     2908    1       GLOBAL.FPTCHKR_CODE = 0;
      153     2909    1       IF FPT_TABLE.VECTOR#(GLOBAL.FCN.CODE-1) > 0
      154     2910    2       THEN DO;
      155     2911    2           VEC_CT = 0;
      156     2912    2           CALL ZIB$SEGSIZE(PSR$,PBOUND); /* Get param seg size,in words */
      157     2913    2           IF PBOUND ~= 0 /* Params (vectors) were passed */
      158     2914    3           THEN DO;
      159     2915    3               PBOUND = PBOUND/2; /* Calc no. of params (vectors) */
      160     2916    3               IF PBOUND = FPT_TABLE.VECTOR#(GLOBAL.FCN.CODE-1)
      161     2917    4               THEN DO; /* Correct no. of params (vectors) */
      162     2918    4                   STORE_JIT_ACCESS = '1'B;
      163     2919    4                   STORE_JIT_VALUES = '1'B;
      164     2920    4                   ERR_FLAG = '0'B;
      165     2921    4                   DONE = '0'B;
      166     2922    4                   P$ = VLP$;
      167     2923    5                   DO WHILE NOT ERR_FLAG AND NOT DONE;
      168     2924    6                       DO CASE(VEC_CT); /* Find appropriate vector values */
      169     2925    6                       CASE(0);
      170     2926    6                           ALNMT = FPT_TABLE.V0.ALNMT(GLOBAL.FCN.CODE-1);
      171     2927    6                           SIZE = FPT_TABLE.V0.SIZE(GLOBAL.FCN.CODE-1);
      172     2928    6                           VBL_SIZE = FPT_TABLE.V0.VBL_SIZE(GLOBAL.FCN.CODE-1);
      173     2929    6                           RD_FLAG = FPT_TABLE.V0.RD_FLAG(GLOBAL.FCN.CODE-1);
      174     2930    6                           WR_FLAG = FPT_TABLE.V0.WR_FLAG(GLOBAL.FCN.CODE-1);
      175     2931    6                       CASE(1);
      176     2932    6                           I = FPT_TABLE.V1(GLOBAL.FCN.CODE-1);
      177     2933    6                       CASE(2);
      178     2934    6                           I = FPT_TABLE.V2(GLOBAL.FCN.CODE-1);
      179     2935    6                       CASE(3);
      180     2936    6                           I = FPT_TABLE.V3(GLOBAL.FCN.CODE-1);
      181     2937    6                       CASE(4);
      182     2938    6                           I = FPT_TABLE.V4(GLOBAL.FCN.CODE-1);
      183     2939    6                       CASE(5);
      184     2940    6                           I = FPT_TABLE.V5(GLOBAL.FCN.CODE-1);
      185     2941    6                       CASE(6);
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:6    
      186     2942    6                           I = FPT_TABLE.V6(GLOBAL.FCN.CODE-1);
      187     2943    6                           END; /* CASE(VEC_CT) */
      188     2944    5                       IF VEC_CT > 0
      189     2945    6                       THEN DO;
      190     2946    6                           ALNMT = VECTOR_TABLE.ALNMT(I-1);
      191     2947    6                           SIZE = VECTOR_TABLE.SIZE(I-1);
      192     2948    6                           VBL_SIZE = '0'B;
      193     2949    6                           RD_FLAG = VECTOR_TABLE.RD_FLAG(I-1);
      194     2950    6                           WR_FLAG = VECTOR_TABLE.WR_FLAG(I-1);
      195     2951    6                           END;
      196     2952         /* Get base and bound in bytes, and get bit flags */
      197     2953    5                       CALL ZIB$SEGDECODE(P$,VECBOUND,FLAGS,VECBASE);
      198     2954    5                       IF MOD(VECBOUND,ALNMT) = 0 /* Check alignment */
      199     2955    6                       THEN DO;
      200     2956    6                           IF NOT VBL_SIZE THEN /* Check size of nonvariable params */
      201     2957    6                               IF (VECBOUND/4) = SIZE THEN
      202     2958    6                                   ERR_FLAG = '0'B;
      203     2959    7                               ELSE DO;
      204     2960    7                                   ERR_FLAG = '1'B;
      205     2961    7                                   GLOBAL.FPTCHKR_CODE = %NONVAR_SIZE_ERR;
      206     2962    7                                   END;
      207     2963    6                           ELSE
      208     2964    6                               IF (VECBOUND/4) >= SIZE THEN
              2964                                        /* Do some checking on variable sizes */
      209     2965    6                                   ERR_FLAG = '0'B;
      210     2966    7                               ELSE DO;
      211     2967    7                                   ERR_FLAG = '1'B;
      212     2968    7                                   GLOBAL.FPTCHKR_CODE = %VAR_SIZE_ERR;
      213     2969    7                                   END;
      214     2970    6                           IF NOT ERR_FLAG
      215     2971    7                           THEN DO;
      216     2972    7                               IF RD_FLAG THEN /* Check for read access */
      217     2973    7                                   IF FLAGS.RD_ALLOW AND FLAGS.SEG_PRESENT AND
      218     2974    7                                      FLAGS.SEG_NOT_EMPTY THEN
      219     2975    7                                       ERR_FLAG = '0'B; /* Read ok */
      220     2976    8                                   ELSE DO;
      221     2977    8                                       ERR_FLAG = '1'B;
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:7    
      222     2978    8                                       GLOBAL.FPTCHKR_CODE = %READ_ACCESS_ERR;
      223     2979    8                                       END;
      224     2980    7                               ELSE /* Check for write access */
      225     2981    7                                   IF FLAGS.RD_ALLOW AND FLAGS.SEG_PRESENT AND
      226     2982    7                                      FLAGS.SEG_NOT_EMPTY AND FLAGS.WR_ALLOW THEN
      227     2983    7                                       ERR_FLAG = '0'B; /* Write ok */
      228     2984    8                                   ELSE DO;
      229     2985    8                                       ERR_FLAG = '1'B;
      230     2986    8                                       GLOBAL.FPTCHKR_CODE = %WRITE_ACCESS_ERR;
      231     2987    8                                       END;
      232     2988    7                               IF NOT ERR_FLAG THEN
              2988                                        /* Check JIT to see if in IS or DS */
      233     2989    7                                   CALL CHECK_JIT;
      234     2990    7                               END;
      235     2991    6                           ELSE
      236     2992    6                               ERR_FLAG = '1'B; /* Bad size */
      237     2993    6                           END; /* IF MOD(VECSIZE,ALNMT) */
      238     2994    6                       ELSE DO;
      239     2995    6                           ERR_FLAG = '1'B; /* Bad alignment */
      240     2996    6                           GLOBAL.FPTCHKR_CODE = %ALIGNMENT_ERR;
      241     2997    6                           END;
      242     2998    5                       IF NOT ERR_FLAG THEN
      243     2999    5                           IF VEC_CT ~= (PBOUND-1)
      244     3000    6                           THEN DO;
      245     3001    6                               P.SEGID = P.SEGID + 1; /* Move to next vector */
      246     3002    6                               VEC_CT = VEC_CT + 1;
      247     3003    6                               END;
      248     3004    5                           ELSE
      249     3005    5                               DONE = '1'B;
      250     3006    5                       END; /* DO WHILE */
      251     3007    4                   END; /* IF PBOUND = VEC# */
      252     3008    4               ELSE DO;
      253     3009    4                   ERR_FLAG = '1'B; /* Wrong no. of vectors */
      254     3010    4                   GLOBAL.FPTCHKR_CODE = %WRONG_NUM_VECTORS_ERR;
      255     3011    4                   END;
      256     3012    3               END; /* IF PBOUND ~= 0 */
      257     3013    3           ELSE DO;
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:8    
      258     3014    3               ERR_FLAG = '1'B; /* Should have some vectors */
      259     3015    3               GLOBAL.FPTCHKR_CODE = %NO_VECTORS_PASSED_ERR;
      260     3016    3               END;
      261     3017    2           END; /* IF VEC# > 0 */
      262     3018    1       ELSE
      263     3019    1           ERR_FLAG = '0'B; /* Error as originally planned */
      264     3020    1       IF ERR_FLAG
      265     3021    2       THEN DO;
      266     3022    2           CALL BINCHAR(VEC_CHAR,VEC_CT);
      267     3023    2           CALL INSERT( GLOBAL.ERRFIELD_INSERT.TEXT(0), 0, 1, VEC_CHAR );
      268     3024    2           GLOBAL.ERRFIELD_INSERT.LENGTH(0) = 1;
      269     3025    2           GLOBAL.RET.ERROR# = %ERR#FPT#BADVEC;
      270     3026    2           IF NOT ZI_FPTCHKR_DUMP
      271     3027    3           THEN DO;
      272     3028    3               TEMP_REM_RECOVER = GLOBAL.PARAN.REM_RECOVER;
      273     3029    3               GLOBAL.PENDING.EXIT_DML = '1'B;
      274     3030    3               IF RECOVER_ADDR ~= '0'B
      275     3031    4               THEN DO; /* Unwind to RECOVER addr for BACKOUT purposes */
      276     3032    4                   DBCB$ = GLOBAL.ACTIVE.DBCB$;
      277     3033    4                   CALL M$CLRSTK(FPT_CLRSTK);
      278     3034    4                   DBCB.DBIC.CONTROL = DBCB.PWS.DBICREFRESH;
      279     3035    4                   UNWIND TO GLOBAL.PARAN.REM_RECOVER;
      280     3036    4                   END;
      281     3037    4               ELSE DO;
      282     3038    4                   CALL ZIM$ERRMSG(GLOBAL.RET.ERROR#);
      283     3039    4                   CALL M$ERR;
      284     3040    4                   END;
      285     3041    3               END;
      286     3042    2           END;
      287     3043
      288     3044        %EJECT;
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:9    
      289     3045        /*I*
      290     3046        NAME: CHECK_JIT
      291     3047        CALL: CALL CHECK_JIT
      292     3048        DESCRIPTION:
      293     3049            Determine whether the base of the vector is in the Instruction
      294     3050            Segment or the Data Segment and make sure the bound falls in the
      295     3051            same segment.  Further checking is needed if the vector is in the
      296     3052            IS to determine whether it's in the Data, Procedure, Dynamic Data,
      297     3053            or Library segment of the IS; the access is also checked.
      298     3054        */
      299     3055
      300     3056    1   CHECK_JIT: PROC;
      301     3057        /*D*
      302     3058            We use the DS_MIN value equated below for the User Data Segment
      303     3059            lower page ( page 552 ) byte address.  As of the D00 CP-6 release
      304     3060            the User Data Segment begins at page 600 but we still use the old
      305     3061            value here just in case the user is running on CP-6 C01 or less.
      306     3062            The values for the Instruction Segment upper and lower pages
      307     3063            ( ISEGLO and ISEGHI ) and that of the User Data Segment upper page
      308     3064            ( UDSEGHI ) are used from M_INFO_C.:LIBRARY.
      309     3065        */
      310     3066
      311     3067        %EQU DS_MIN = 2260992;
      312     3068    2   DCL CT UBIN;
      313     3069    2   DCL SEG UBIN;
      314     3070        /*
      315     3071            Table of JIT segments to determine base address, size, and
      316     3072            read/write access of each segment. The table represents
      317     3073            the segments as follows:
      318     3074
      319     3075                 JIT_TABLE.?(0) = Data
      320     3076                 JIT_TABLE.?(1) = Procedure
      321     3077                 JIT_TABLE.?(2) = Dynamic Data
      322     3078                 JIT_TABLE.?(3) = Library
      323     3079
      324     3080        */
      325     3081    2   DCL 1 JIT_TABLE (0:3),
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:10   
      326     3082    2         2 BASE UBIN,
      327     3083        /*B*    BASE - Base address of JIT segment in bytes */
      328     3084    2         2 SIZE UBIN,
      329     3085        /*B*    SIZE - Size of JIT segment in bytes */
      330     3086    2         2 WR BIT(1) UNAL,
      331     3087        /*B*    WR - Write access of JIT segment = '1'B */
      332     3088    2         2 * UBIN(35);
      333     3089
      334     3090    2       IF STORE_JIT_ACCESS
      335     3091    3       THEN DO;
      336     3092    3           STORE_JIT_ACCESS = '0'B;
      337     3093    3           JIT_TABLE.WR(0) = '1'B;
      338     3094    3           JIT_TABLE.WR(1) = '0'B;
      339     3095    3           JIT_TABLE.WR(2) = '1'B;
      340     3096    3           JIT_TABLE.WR(3) = '0'B;
      341     3097    3           END;
      342     3098
      343     3099    2       IF ( %ISEGLO*4096 <= VECBASE) AND
      344     3100    2          ((VECBASE + VECBOUND - 1) <= (( %ISEGHI + 1 ) * 4096 ) - 1 )
      345     3101    3       THEN DO;
      346     3102        /*D*
      347     3103            The vector falls in the Instruction Segment.
      348     3104        */
      349     3105    4           DO CT=0 TO 3;
      350     3106    4               IF STORE_JIT_VALUES
      351     3107    5               THEN DO;
      352     3108        /*D*
      353     3109            Calculate values from JIT.
      354     3110        */
      355     3111    6                   DO CASE(CT);
      356     3112    6                   CASE(0);
      357     3113        /*D*
      358     3114            Data Segment of the IS.
      359     3115        */
      360     3116    6                       JIT_TABLE.BASE(0) = B$JIT.DLL*4096;
      361     3117    6                       JIT_TABLE.SIZE(0) = B$JIT.PCD*4096;
      362     3118    6                   CASE(1);
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:11   
      363     3119        /*D*
      364     3120            Procedure Segment of the IS.
      365     3121        */
      366     3122    6                       JIT_TABLE.BASE(1) = B$JIT.PLL*4096;
      367     3123    6                       JIT_TABLE.SIZE(1) = B$JIT.PCP*4096;
      368     3124    6                   CASE(2);
      369     3125        /*D*
      370     3126            Dynamic Data Segment of the IS.
      371     3127        */
      372     3128    6                       JIT_TABLE.BASE(2) = B$JIT.DDLL*4096;
      373     3129    6                       JIT_TABLE.SIZE(2) = B$JIT.PCDD*4096;
      374     3130    6                   CASE(3);
      375     3131        /*D*
      376     3132            Library Segment of the IS.
      377     3133        */
      378     3134    6                       JIT_TABLE.BASE(3) = B$JIT.LLL*4096;
      379     3135    6                       JIT_TABLE.SIZE(3) = ((B$JIT.LUL-B$JIT.LLL)+1)*4096;
      380     3136    6                       STORE_JIT_VALUES = '0'B;
      381     3137    6                       END;
      382     3138    5                   END;
      383     3139    4               IF VECBASE >= JIT_TABLE.BASE(CT) THEN
      384     3140    4                   SEG = CT;
      385     3141    4               END;
      386     3142    3           IF WR_FLAG AND NOT JIT_TABLE.WR( SEG )
      387     3143    4           THEN DO;
      388     3144    4               ERR_FLAG = '1'B;
      389     3145    4               GLOBAL.FPTCHKR_CODE = %IS_ACCESS_ERR;
      390     3146    4               END;
      391     3147    3           ELSE
      392     3148    3               IF (VECBASE + VECBOUND -1) <= (JIT_TABLE.BASE(SEG) + JIT_TABLE.SIZE(SEG)
              3148                        - 1) THEN
      393     3149    3                   ERR_FLAG = '0'B;
      394     3150    4               ELSE DO;
      395     3151    4                   ERR_FLAG = '1'B;
      396     3152    4                   GLOBAL.FPTCHKR_CODE = %IS_OUT_OF_BOUNDS_ERR;
      397     3153    4                   END;
      398     3154    3           END;
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:12   
      399     3155    2       ELSE
      400     3156        /*D*
      401     3157            The vector falls in the Data Segment.
      402     3158        */
      403     3159    2           IF ( %DS_MIN <= VECBASE ) AND
      404     3160    2              ((VECBASE + VECBOUND - 1) <= (( %UDSEGHI + 1 ) * 4096 ) - 1 ) THEN
      405     3161    2               ERR_FLAG = '0'B;
      406     3162    3           ELSE DO;
      407     3163    3               ERR_FLAG = '1'B;
      408     3164    3               GLOBAL.FPTCHKR_CODE = %DS_OUT_OF_BOUNDS_ERR;
      409     3165    3               END;
      410     3166    2   END CHECK_JIT;
      411     3167
      412     3168    1   END ZIM$FPTCHKR;

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:13   
--  Include file information  --

   ZI_ERRORS_C.:ZIC0TOU  is referenced.
   B$JIT.:LIB_E05  cannot be made into a system file and is referenced.
   ZI$DBCB.:ZIC0TOU  is referenced.
   ZI$GLOBAL.:ZIC0TOU  is referenced.
   M_INFO_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIM$FPTCHKR.

   Procedure ZIM$FPTCHKR requires 472 words for executable code.
   Procedure ZIM$FPTCHKR requires 48 words of local(AUTO) storage.

    No errors detected in file ZIM$FPTCHKR.:ZIC0TSI    .

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:14   

 Object Unit name= ZIM$FPTCHKR                                File name= ZIM$FPTCHKR.:ZIC0TOU
 UTS= SEP 05 '97 12:55:33.60 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS    162    242  ZIM$FPTCHKR
    2   Proc  even  none   472    730  ZIM$FPTCHKR
    3  RoData even  none    10     12  ZIM$FPTCHKR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      XStd       0  ZIM$FPTCHKR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           XStd      2 ZIB$SEGSIZE
         yes           XStd      1 ZIM$ERRMSG
         yes           XStd      4 ZIB$SEGDECODE
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:15   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    GLOBAL$                               ZI_FPTCHKR_DUMP
     B$JIT$                                PSR$                                  VLP$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:16   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        ZIM$FPTCHKR: PROC

      6  2 000000   000000 700200 xent  ZIM$FPTCHKR  TSX0  ! X66_AUTO_0
         2 000001   000060 000000                    ZERO    48,0

        7        7               AVOID($PR5,$PR6,$PR7);
        8        8        %INCLUDE CP_6;
        9       89        %INCLUDE M_INFO_C;
       10      229        %INCLUDE ZI$GLOBAL;
       11      715            %GLOBALS;
       12     1023        %INCLUDE ZI$DBCB;
       13     1665            %DBCB;
       14     2143        %INCLUDE B$JIT;
       15     2433        %INCLUDE ZI_ERRORS_C;
       16     2759    1   DCL ZIB$SEGSIZE ENTRY(2);
       17     2760    1   DCL ZIB$SEGDECODE ENTRY(4);
       18     2761    1   DCL ZIM$ERRMSG ENTRY(1);
       19     2762        %FPT_CLRSTK(FRAMES=3,STCLASS=CONSTANT);
       20     2776    1   DCL ZI_FPTCHKR_DUMP BIT(1) SYMREF;
       21     2777    1   DCL B$JIT$ PTR SYMREF; /* Pointer to Job Information Table */
       22     2778    1   DCL PSR$ PTR SYMREF; /* Pointer to Parameter Segment Register */
       23     2779    1   DCL VLP$ PTR SYMREF; /* Pointer to user's Vector Located Paramters--same as PS0$ */
       24     2780    1   DCL P$ PTR; /* Pointer to current parameter (vector) */
       25     2781    1   DCL 1 P REDEF P$,
       26     2782    1         2 OFFSET UBIN(18) UNAL,
       27     2783    1         2 * UBIN(6) UNAL,
       28     2784    1         2 SEGID UBIN(12) UNAL;
       29     2785    1   DCL VECBASE UBIN(36); /* Vector base address in bytes */
       30     2786    1   DCL VECBOUND UBIN(36); /* Vector bound in bytes--size of segment */
       31     2787    1   DCL PBOUND UBIN(36); /* Number of parameters (vectors) */
       32     2788    1   DCL VEC_CT UBIN(36); /* Current vector number--V0 thru V6 */
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:17   
       33     2789    1   DCL I UBIN(36); /* Index + 1 into VECTOR_TABLE */
       34     2790    1   DCL ALNMT UBIN(36); /* Alignment of current vector */
       35     2791    1   DCL SIZE UBIN(36); /* Size of current vector in words */
       36     2792    1   DCL VEC_CHAR CHAR(1); /* Vector number in char form for err msg */
       37     2793    1   DCL TEMP_REM_RECOVER REMEMBER; /* Temporary error recovery address */
       38     2794    1   DCL RECOVER_ADDR REDEF TEMP_REM_RECOVER BIT(72); /* To see addr in BIT format */
       39     2795    1   DCL DONE BIT(1); /* Done checking all vectors = '1'B */
       40     2796    1   DCL VBL_SIZE BIT(1); /* Variable no. of params = '1'B for curr vector */
       41     2797    1   DCL RD_FLAG BIT(1); /* Read access = '1'B for current vector */
       42     2798    1   DCL WR_FLAG BIT(1); /* Write access = '1'B for current vector */
       43     2799    1   DCL ERR_FLAG BIT(1); /* Error flag = '1'B if FPT err has been found */
       44     2800    1   DCL STORE_JIT_ACCESS BIT(1); /* Only store JIT_TABLE info 1st time thru */
       45     2801    1   DCL STORE_JIT_VALUES BIT(1);
       46     2802        /*
       47     2803            Flags from the descriptor found in ZIB$SEGDECODE.
       48     2804        */
       49     2805    1   DCL 1 FLAGS,
       50     2806    1         2 RD_ALLOW BIT(1) UNAL,
       51     2807    1         2 WR_ALLOW BIT(1) UNAL,
       52     2808    1         2 SAVE_DESCRIPTOR BIT(1) UNAL,
       53     2809    1         2 UTILIZE_CACHE BIT(1) UNAL,
       54     2810    1         2 RSVD_FOR_SOFTWARE BIT(1) UNAL,
       55     2811    1         2 EXEC_ALLOW BIT(1) UNAL,
       56     2812    1         2 PRIVILEGED BIT(1) UNAL,
       57     2813    1         2 SEG_NOT_EMPTY BIT(1) UNAL,
       58     2814    1         2 SEG_PRESENT BIT(1) UNAL,
       59     2815    1         2 * UBIN(27) UNAL;
       60     2816        /*
       61     2817            Table of vector data used by FPTs.  Information is for the
       62     2818            following vectors:
       63     2819
       64     2820                 VECTOR_TABLE.?(0) = IA_
       65     2821                 VECTOR_TABLE.?(1) = UWA_
       66     2822                 VECTOR_TABLE.?(2) = RVA_
       67     2823                 VECTOR_TABLE.?(3) = USEP_
       68     2824                 VECTOR_TABLE.?(4) = ANAME_
       69     2825                 VECTOR_TABLE.?(5) = DBK_
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:18   
       70     2826                 VECTOR_TABLE.?(6) = CHKPT_NUMBER_
       71     2827                 VECTOR_TABLE.?(7) = BUFFS_ALLOC_
       72     2828        */
       73     2829    1   DCL 1 VECTOR_TABLE (0:7) CONSTANT,
       74     2830         /* Size of vector in words */
       75     2831    1         2 SIZE UBIN(16) INIT(46,656,106,4,8,1*3) CALIGNED,
       76     2832         /* Double Word = 8 bytes, Word = 4 bytes*/
       77     2833    1         2 ALNMT UBIN(9) INIT(8*4,4*4) CALIGNED,
       78     2834         /* Read Access = '1'B */
       79     2835    1         2 RD_FLAG BIT(1) INIT('0'B*6,'1'B,'0'B) UNAL,
       80     2836         /* Write Access = '1'B */
       81     2837    1         2 WR_FLAG BIT(1) INIT('1'B*6,'0'B,'1'B) UNAL,
       82     2838    1         2 * UBIN(7) INIT(0*8) UNAL;
       83     2839        /*
       84     2840            Table of FPT information including number of vectors expected,
       85     2841            vector data for Vector 0 of each FPT, and subscripts to the
       86     2842            VECTOR_TABLE for other vectors.
       87     2843
       88     2844            In most cases Vector 0 corresponds to V_ ; the exceptions are:
       89     2845
       90     2846                 FPT_TABLE.V0.?(0)  = ERROR_
       91     2847                           .
       92     2848                 FPT_TABLE.V0.?(31) = ERROR_
       93     2849                 FPT_TABLE.V0.?(32) = TYPE_
       94     2850                 FPT_TABLE.V0.?(33) = TYPE_
       95     2851                           .
       96     2852                 FPT_TABLE.V0.?(39) = SEED_
       97     2853                           .
       98     2854                 FPT_TABLE.V0.?(42) = BUFFS_REQ_
       99     2855                           .
      100     2856                 FPT_TABLE.V0.?(47) = ERROR_
      101     2857                 FPT_TABLE.V0.?(48) = NUM_DEQED_
      102     2858                           .
      103     2859        */
      104     2860    1   DCL 1 FPT_TABLE (0:49) CONSTANT,
      105     2861         /* Number of vectors expected */
      106     2862    1         2 VECTOR# UBIN(9) INIT(2,5*8,7,6,5*15,6,5*4,3,1*2,0*5,1,0*2,2,
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:19   
      107     2863    1    5*2,0,6,1*2,0) CALIGNED,
      108     2864    1         2 V0,
      109     2865         /* Size of vector in words */
      110     2866    1           3 SIZE UBIN(9) INIT(2,0,2*4,4,2*2,4*2,2*3,4*3,2*5,4*7,
      111     2867    1    2*3,1*2,0*5,1,0*2,1,2*2,0,2*2,1,0) CALIGNED,
      112     2868         /* Double Word = 8 bytes, Word = 4 bytes */
      113     2869    1           3 ALNMT UBIN(9) INIT(4*2,8*29,4*3,0*5,4,0*2,4,8*2,0,8,4*2,0)
      114     2870    1    CALIGNED,
      115     2871         /* Read Access = '1'B */
      116     2872    1           3 RD_FLAG BIT(1) INIT('0'B,'1'B*30,'0'B,'1'B*2,'0'B*5,'1'B,
      117     2873    1    '0'B*2,'1'B*3,'0'B,'1'B,'0'B*3) UNAL,
      118     2874         /* Write Access = '1'B */
      119     2875    1           3 WR_FLAG BIT(1) INIT('1'B,'0'B*30,'1'B,'0'B*15,'1'B*2,'0'B) UNAL,
      120     2876         /* Variable number of parameters = '1'B */
      121     2877    1           3 VBL_SIZE BIT(1) INIT('0'B*2,'1'B*3,'0'B,'1'B,'0'B*7,'1'B*15,
      122     2878    1    '0'B,'1'B,'0'B*12,'1'B*2,'0'B*5) UNAL,
      123     2879    1           3 * UBIN(6) INIT(0*50) UNAL,
      124     2880         /* V1 through V6 are subscripts to
      125     2881            vector data in VECTOR_TABLE */
      126     2882    1         2 V1 UBIN(9) INIT(1*32,0*10,8,1*2,0,1,0*3) CALIGNED,
      127     2883    1         2 V2 UBIN(9) INIT(0,2*30,7,0*11,2*2,0,2,0*3) CALIGNED,
      128     2884    1         2 V3 UBIN(9) INIT(0,3*30,0*12,3*2,0,3,0*3) CALIGNED,
      129     2885    1         2 V4 UBIN(9) INIT(0,4*30,0*12,4*2,0,4,0*3) CALIGNED,
      130     2886    1         2 V5 UBIN(9) INIT(0*9,5,6,0*15,6,0*19,6,0*3) CALIGNED,
      131     2887    1         2 V6 UBIN(9) INIT(0*9,6,0*40) CALIGNED,
      132     2888    1         2 * UBIN(16) INIT(0*50) CALIGNED;
      133     2889
      134     2890        /*
      135     2891            EQUs for the error codes stored in GLOBAL.FPTCHKR_CODE.
      136     2892        */
      137     2893        %EQU NONVAR_SIZE_ERR = 1;
      138     2894        %EQU VAR_SIZE_ERR = 2;
      139     2895        %EQU READ_ACCESS_ERR = 3;
      140     2896        %EQU WRITE_ACCESS_ERR = 4;
      141     2897        %EQU ALIGNMENT_ERR = 5;
      142     2898        %EQU WRONG_NUM_VECTORS_ERR = 6;
      143     2899        %EQU NO_VECTORS_PASSED_ERR = 7;
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:20   
      144     2900        %EQU IS_ACCESS_ERR = 8;
      145     2901        %EQU IS_OUT_OF_BOUNDS_ERR = 9;
      146     2902        %EQU DS_OUT_OF_BOUNDS_ERR = 10;
      147     2903
      148     2904        /*
      149     2905                           BEGIN ZIM$FPTCHKR
      150     2906        */
      151     2907
      152     2908    1       GLOBAL.FPTCHKR_CODE = 0;

   2908  2 000002   000000 470400 xsym               LDP0    GLOBAL$
         2 000003   002621 450100                    STZ     1425,,PR0

      153     2909    1       IF FPT_TABLE.VECTOR#(GLOBAL.FCN.CODE-1) > 0

   2909  2 000004   000004 236100                    LDQ     4,,PR0
         2 000005   777777 376007                    ANQ     -1,DL
         2 000006   000003 402007                    MPY     3,DL
         2 000007   000011 236006 1                  LDQ     VECTOR_TABLE+5,QL
         2 000010   777000 316003                    CANQ    -512,DU
         2 000011   000450 600000 2                  TZE     s:3019

      154     2910    2       THEN DO;

      155     2911    2           VEC_CT = 0;

   2911  2 000012   200010 450100                    STZ     VEC_CT,,AUTO

      156     2912    2           CALL ZIB$SEGSIZE(PSR$,PBOUND); /* Get param seg size,in words */

   2912  2 000013   200007 631500                    EPPR1   PBOUND,,AUTO
         2 000014   200055 451500                    STP1    JIT_TABLE+18,,AUTO
         2 000015   000001 236000 3                  LDQ     1
         2 000016   200054 756100                    STQ     JIT_TABLE+17,,AUTO
         2 000017   200054 630500                    EPPR0   JIT_TABLE+17,,AUTO
         2 000020   000000 631400 3                  EPPR1   0
         2 000021   000000 701000 xent               TSX1    ZIB$SEGSIZE
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:21   
         2 000022   000000 011000                    NOP     0

      157     2913    2           IF PBOUND ~= 0 /* Params (vectors) were passed */

   2913  2 000023   200007 235100                    LDA     PBOUND,,AUTO
         2 000024   000442 600000 2                  TZE     s:3014

      158     2914    3           THEN DO;

      159     2915    3               PBOUND = PBOUND/2; /* Calc no. of params (vectors) */

   2915  2 000025   200007 236100                    LDQ     PBOUND,,AUTO
         2 000026   000001 772000                    QRL     1
         2 000027   200007 756100                    STQ     PBOUND,,AUTO

      160     2916    3               IF PBOUND = FPT_TABLE.VECTOR#(GLOBAL.FCN.CODE-1)

   2916  2 000030   000000 470400 xsym               LDP0    GLOBAL$
         2 000031   000004 236100                    LDQ     4,,PR0
         2 000032   777777 376007                    ANQ     -1,DL
         2 000033   000003 402007                    MPY     3,DL
         2 000034   000011 236006 1                  LDQ     VECTOR_TABLE+5,QL
         2 000035   000033 772000                    QRL     27
         2 000036   200007 116100                    CMPQ    PBOUND,,AUTO
         2 000037   000435 601000 2                  TNZ     s:3009

      161     2917    4               THEN DO; /* Correct no. of params (vectors) */

      162     2918    4                   STORE_JIT_ACCESS = '1'B;

   2918  2 000040   400000 236003                    LDQ     -131072,DU
         2 000041   200025 756100                    STQ     STORE_JIT_ACCESS,,AUTO

      163     2919    4                   STORE_JIT_VALUES = '1'B;

   2919  2 000042   200026 756100                    STQ     STORE_JIT_VALUES,,AUTO

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:22   
      164     2920    4                   ERR_FLAG = '0'B;

   2920  2 000043   200024 450100                    STZ     ERR_FLAG,,AUTO

      165     2921    4                   DONE = '0'B;

   2921  2 000044   200020 450100                    STZ     DONE,,AUTO

      166     2922    4                   P$ = VLP$;

   2922  2 000045   000000 236000 xsym               LDQ     VLP$
         2 000046   200004 756100                    STQ     P$,,AUTO

      167     2923    5                   DO WHILE NOT ERR_FLAG AND NOT DONE;

   2923  2 000047   000430 710000 2                  TRA     s:3006

      168     2924    6                       DO CASE(VEC_CT); /* Find appropriate vector values */

   2924  2 000050   200010 235100                    LDA     VEC_CT,,AUTO
         2 000051   000007 115007                    CMPA    7,DL
         2 000052   000054 602005 2                  TNC     s:2924+4,AL
         2 000053   000212 710000 2                  TRA     s:2944
         2 000054   000063 710000 2                  TRA     s:2926
         2 000055   000130 710000 2                  TRA     s:2932
         2 000056   000140 710000 2                  TRA     s:2934
         2 000057   000151 710000 2                  TRA     s:2936
         2 000060   000162 710000 2                  TRA     s:2938
         2 000061   000172 710000 2                  TRA     s:2940
         2 000062   000202 710000 2                  TRA     s:2942

      169     2925    6                       CASE(0);

      170     2926    6                           ALNMT = FPT_TABLE.V0.ALNMT(GLOBAL.FCN.CODE-1);

   2926  2 000063   000000 470400 xsym               LDP0    GLOBAL$
         2 000064   000004 236100                    LDQ     4,,PR0
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:23   
         2 000065   777777 376007                    ANQ     -1,DL
         2 000066   000003 402007                    MPY     3,DL
         2 000067   000011 236006 1                  LDQ     VECTOR_TABLE+5,QL
         2 000070   000011 772000                    QRL     9
         2 000071   000777 376007                    ANQ     511,DL
         2 000072   200012 756100                    STQ     ALNMT,,AUTO

      171     2927    6                           SIZE = FPT_TABLE.V0.SIZE(GLOBAL.FCN.CODE-1);

   2927  2 000073   000004 236100                    LDQ     4,,PR0
         2 000074   777777 376007                    ANQ     -1,DL
         2 000075   000003 402007                    MPY     3,DL
         2 000076   000011 236006 1                  LDQ     VECTOR_TABLE+5,QL
         2 000077   000022 772000                    QRL     18
         2 000100   000777 376007                    ANQ     511,DL
         2 000101   200013 756100                    STQ     SIZE,,AUTO

      172     2928    6                           VBL_SIZE = FPT_TABLE.V0.VBL_SIZE(GLOBAL.FCN.CODE-1);

   2928  2 000102   000004 236100                    LDQ     4,,PR0
         2 000103   777777 376007                    ANQ     -1,DL
         2 000104   000003 402007                    MPY     3,DL
         2 000105   000011 236006 1                  LDQ     VECTOR_TABLE+5,QL
         2 000106   000035 736000                    QLS     29
         2 000107   400000 376003                    ANQ     -131072,DU
         2 000110   200021 756100                    STQ     VBL_SIZE,,AUTO

      173     2929    6                           RD_FLAG = FPT_TABLE.V0.RD_FLAG(GLOBAL.FCN.CODE-1);

   2929  2 000111   000004 236100                    LDQ     4,,PR0
         2 000112   777777 376007                    ANQ     -1,DL
         2 000113   000003 402007                    MPY     3,DL
         2 000114   000011 236006 1                  LDQ     VECTOR_TABLE+5,QL
         2 000115   000033 736000                    QLS     27
         2 000116   400000 376003                    ANQ     -131072,DU
         2 000117   200022 756100                    STQ     RD_FLAG,,AUTO

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:24   
      174     2930    6                           WR_FLAG = FPT_TABLE.V0.WR_FLAG(GLOBAL.FCN.CODE-1);

   2930  2 000120   000004 236100                    LDQ     4,,PR0
         2 000121   777777 376007                    ANQ     -1,DL
         2 000122   000003 402007                    MPY     3,DL
         2 000123   000011 236006 1                  LDQ     VECTOR_TABLE+5,QL
         2 000124   000034 736000                    QLS     28
         2 000125   400000 376003                    ANQ     -131072,DU
         2 000126   200023 756100                    STQ     WR_FLAG,,AUTO
         2 000127   000212 710000 2                  TRA     s:2944

      175     2931    6                       CASE(1);

      176     2932    6                           I = FPT_TABLE.V1(GLOBAL.FCN.CODE-1);

   2932  2 000130   000000 470400 xsym               LDP0    GLOBAL$
         2 000131   000004 236100                    LDQ     4,,PR0
         2 000132   777777 376007                    ANQ     -1,DL
         2 000133   000003 402007                    MPY     3,DL
         2 000134   000012 236006 1                  LDQ     VECTOR_TABLE+6,QL
         2 000135   000033 772000                    QRL     27
         2 000136   200011 756100                    STQ     I,,AUTO
         2 000137   000212 710000 2                  TRA     s:2944

      177     2933    6                       CASE(2);

      178     2934    6                           I = FPT_TABLE.V2(GLOBAL.FCN.CODE-1);

   2934  2 000140   000000 470400 xsym               LDP0    GLOBAL$
         2 000141   000004 236100                    LDQ     4,,PR0
         2 000142   777777 376007                    ANQ     -1,DL
         2 000143   000003 402007                    MPY     3,DL
         2 000144   000012 236006 1                  LDQ     VECTOR_TABLE+6,QL
         2 000145   000022 772000                    QRL     18
         2 000146   000777 376007                    ANQ     511,DL
         2 000147   200011 756100                    STQ     I,,AUTO
         2 000150   000212 710000 2                  TRA     s:2944
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:25   

      179     2935    6                       CASE(3);

      180     2936    6                           I = FPT_TABLE.V3(GLOBAL.FCN.CODE-1);

   2936  2 000151   000000 470400 xsym               LDP0    GLOBAL$
         2 000152   000004 236100                    LDQ     4,,PR0
         2 000153   777777 376007                    ANQ     -1,DL
         2 000154   000003 402007                    MPY     3,DL
         2 000155   000012 236006 1                  LDQ     VECTOR_TABLE+6,QL
         2 000156   000011 772000                    QRL     9
         2 000157   000777 376007                    ANQ     511,DL
         2 000160   200011 756100                    STQ     I,,AUTO
         2 000161   000212 710000 2                  TRA     s:2944

      181     2937    6                       CASE(4);

      182     2938    6                           I = FPT_TABLE.V4(GLOBAL.FCN.CODE-1);

   2938  2 000162   000000 470400 xsym               LDP0    GLOBAL$
         2 000163   000004 236100                    LDQ     4,,PR0
         2 000164   777777 376007                    ANQ     -1,DL
         2 000165   000003 402007                    MPY     3,DL
         2 000166   000012 236006 1                  LDQ     VECTOR_TABLE+6,QL
         2 000167   000777 376007                    ANQ     511,DL
         2 000170   200011 756100                    STQ     I,,AUTO
         2 000171   000212 710000 2                  TRA     s:2944

      183     2939    6                       CASE(5);

      184     2940    6                           I = FPT_TABLE.V5(GLOBAL.FCN.CODE-1);

   2940  2 000172   000000 470400 xsym               LDP0    GLOBAL$
         2 000173   000004 236100                    LDQ     4,,PR0
         2 000174   777777 376007                    ANQ     -1,DL
         2 000175   000003 402007                    MPY     3,DL
         2 000176   000013 236006 1                  LDQ     VECTOR_TABLE+7,QL
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:26   
         2 000177   000033 772000                    QRL     27
         2 000200   200011 756100                    STQ     I,,AUTO
         2 000201   000212 710000 2                  TRA     s:2944

      185     2941    6                       CASE(6);

      186     2942    6                           I = FPT_TABLE.V6(GLOBAL.FCN.CODE-1);

   2942  2 000202   000000 470400 xsym               LDP0    GLOBAL$
         2 000203   000004 236100                    LDQ     4,,PR0
         2 000204   777777 376007                    ANQ     -1,DL
         2 000205   000003 402007                    MPY     3,DL
         2 000206   000013 236006 1                  LDQ     VECTOR_TABLE+7,QL
         2 000207   000022 772000                    QRL     18
         2 000210   000777 376007                    ANQ     511,DL
         2 000211   200011 756100                    STQ     I,,AUTO

      187     2943    6                           END; /* CASE(VEC_CT) */

      188     2944    5                       IF VEC_CT > 0

   2944  2 000212   200010 235100                    LDA     VEC_CT,,AUTO
         2 000213   000235 600000 2                  TZE     s:2953

      189     2945    6                       THEN DO;

      190     2946    6                           ALNMT = VECTOR_TABLE.ALNMT(I-1);

   2946  2 000214   200011 720100                    LXL0    I,,AUTO
         2 000215   000003 236010 1                  LDQ     FPT_CLRSTK+3,X0
         2 000216   000011 772000                    QRL     9
         2 000217   000777 376007                    ANQ     511,DL
         2 000220   200012 756100                    STQ     ALNMT,,AUTO

      191     2947    6                           SIZE = VECTOR_TABLE.SIZE(I-1);

   2947  2 000221   000003 236010 1                  LDQ     FPT_CLRSTK+3,X0
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:27   
         2 000222   000024 772000                    QRL     20
         2 000223   200013 756100                    STQ     SIZE,,AUTO

      192     2948    6                           VBL_SIZE = '0'B;

   2948  2 000224   200021 450100                    STZ     VBL_SIZE,,AUTO

      193     2949    6                           RD_FLAG = VECTOR_TABLE.RD_FLAG(I-1);

   2949  2 000225   000003 236010 1                  LDQ     FPT_CLRSTK+3,X0
         2 000226   000033 736000                    QLS     27
         2 000227   400000 376003                    ANQ     -131072,DU
         2 000230   200022 756100                    STQ     RD_FLAG,,AUTO

      194     2950    6                           WR_FLAG = VECTOR_TABLE.WR_FLAG(I-1);

   2950  2 000231   000003 236010 1                  LDQ     FPT_CLRSTK+3,X0
         2 000232   000034 736000                    QLS     28
         2 000233   400000 376003                    ANQ     -131072,DU
         2 000234   200023 756100                    STQ     WR_FLAG,,AUTO

      195     2951    6                           END;

      196     2952         /* Get base and bound in bytes, and get bit flags */
      197     2953    5                       CALL ZIB$SEGDECODE(P$,VECBOUND,FLAGS,VECBASE);

   2953  2 000235   200005 630500                    EPPR0   VECBASE,,AUTO
         2 000236   200057 450500                    STP0    JIT_TABLE+20,,AUTO
         2 000237   200027 631500                    EPPR1   FLAGS,,AUTO
         2 000240   200056 451500                    STP1    JIT_TABLE+19,,AUTO
         2 000241   200006 633500                    EPPR3   VECBOUND,,AUTO
         2 000242   200055 453500                    STP3    JIT_TABLE+18,,AUTO
         2 000243   200004 634500                    EPPR4   P$,,AUTO
         2 000244   200054 454500                    STP4    JIT_TABLE+17,,AUTO
         2 000245   200054 630500                    EPPR0   JIT_TABLE+17,,AUTO
         2 000246   000002 631400 3                  EPPR1   2
         2 000247   000000 701000 xent               TSX1    ZIB$SEGDECODE
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:28   
         2 000250   000000 011000                    NOP     0

      198     2954    5                       IF MOD(VECBOUND,ALNMT) = 0 /* Check alignment */

   2954  2 000251   200006 236100                    LDQ     VECBOUND,,AUTO
         2 000252   000267 605000 2                  TPL     s:2954+14
         2 000253   200012 235100                    LDA     ALNMT,,AUTO
         2 000254   000263 604000 2                  TMI     s:2954+10
         2 000255   000001 115007                    CMPA    1,DL
         2 000256   000271 600000 2                  TZE     s:2954+16
         2 000257   000000 235003                    LDA     0,DU
         2 000260   000001 737000                    LLS     1
         2 000261   200012 507100                    DVF     ALNMT,,AUTO
         2 000262   000271 710000 2                  TRA     s:2954+16
         2 000263   200012 116100                    CMPQ    ALNMT,,AUTO
         2 000264   000271 604000 2                  TMI     s:2954+16
         2 000265   200012 136100                    SBLQ    ALNMT,,AUTO
         2 000266   000271 710000 2                  TRA     s:2954+16
         2 000267   200012 235100                    LDA     ALNMT,,AUTO
         2 000270   000273 605000 2                  TPL     s:2954+18
         2 000271   000044 737000                    LLS     36
         2 000272   000274 710000 2                  TRA     s:2954+19
         2 000273   200012 506100                    DIV     ALNMT,,AUTO
         2 000274   000044 733000                    LRS     36
         2 000275   000000 116003                    CMPQ    0,DU
         2 000276   000403 601000 2                  TNZ     s:2995

      199     2955    6                       THEN DO;

      200     2956    6                           IF NOT VBL_SIZE THEN /* Check size of nonvariable params */

   2956  2 000277   200021 234100                    SZN     VBL_SIZE,,AUTO
         2 000300   000315 604000 2                  TMI     s:2964

      201     2957    6                               IF (VECBOUND/4) = SIZE THEN

   2957  2 000301   200006 236100                    LDQ     VECBOUND,,AUTO
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:29   
         2 000302   000002 772000                    QRL     2
         2 000303   200013 116100                    CMPQ    SIZE,,AUTO
         2 000304   000307 601000 2                  TNZ     s:2960

      202     2958    6                                   ERR_FLAG = '0'B;

   2958  2 000305   200024 450100                    STZ     ERR_FLAG,,AUTO
         2 000306   000330 710000 2                  TRA     s:2970

      203     2959    7                               ELSE DO;

      204     2960    7                                   ERR_FLAG = '1'B;

   2960  2 000307   400000 236003                    LDQ     -131072,DU
         2 000310   200024 756100                    STQ     ERR_FLAG,,AUTO

      205     2961    7                                   GLOBAL.FPTCHKR_CODE = %NONVAR_SIZE_ERR;

   2961  2 000311   000001 235007                    LDA     1,DL
         2 000312   000000 470400 xsym               LDP0    GLOBAL$
         2 000313   002621 755100                    STA     1425,,PR0

      206     2962    7                                   END;

   2962  2 000314   000330 710000 2                  TRA     s:2970

      207     2963    6                           ELSE
      208     2964    6                               IF (VECBOUND/4) >= SIZE THEN
              2964                                        /* Do some checking on variable sizes */

   2964  2 000315   200006 236100                    LDQ     VECBOUND,,AUTO
         2 000316   000002 772000                    QRL     2
         2 000317   200013 116100                    CMPQ    SIZE,,AUTO
         2 000320   000323 602000 2                  TNC     s:2967

      209     2965    6                                   ERR_FLAG = '0'B;

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:30   
   2965  2 000321   200024 450100                    STZ     ERR_FLAG,,AUTO
         2 000322   000330 710000 2                  TRA     s:2970

      210     2966    7                               ELSE DO;

      211     2967    7                                   ERR_FLAG = '1'B;

   2967  2 000323   400000 236003                    LDQ     -131072,DU
         2 000324   200024 756100                    STQ     ERR_FLAG,,AUTO

      212     2968    7                                   GLOBAL.FPTCHKR_CODE = %VAR_SIZE_ERR;

   2968  2 000325   000002 235007                    LDA     2,DL
         2 000326   000000 470400 xsym               LDP0    GLOBAL$
         2 000327   002621 755100                    STA     1425,,PR0

      213     2969    7                                   END;

      214     2970    6                           IF NOT ERR_FLAG

   2970  2 000330   200024 234100                    SZN     ERR_FLAG,,AUTO
         2 000331   000400 604000 2                  TMI     s:2992

      215     2971    7                           THEN DO;

      216     2972    7                               IF RD_FLAG THEN /* Check for read access */

   2972  2 000332   200022 234100                    SZN     RD_FLAG,,AUTO
         2 000333   000353 605000 2                  TPL     s:2981

      217     2973    7                                   IF FLAGS.RD_ALLOW AND FLAGS.SEG_PRESENT AND

   2973  2 000334   200027 234100                    SZN     FLAGS,,AUTO
         2 000335   000345 605000 2                  TPL     s:2977
         2 000336   200027 430100                    FSZN    FLAGS,,AUTO
         2 000337   000345 605000 2                  TPL     s:2977
         2 000340   200027 236100                    LDQ     FLAGS,,AUTO
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:31   
         2 000341   002000 316003                    CANQ    1024,DU
         2 000342   000345 600000 2                  TZE     s:2977

      218     2974    7                                      FLAGS.SEG_NOT_EMPTY THEN
      219     2975    7                                       ERR_FLAG = '0'B; /* Read ok */

   2975  2 000343   200024 450100                    STZ     ERR_FLAG,,AUTO
         2 000344   000373 710000 2                  TRA     s:2988

      220     2976    8                                   ELSE DO;

      221     2977    8                                       ERR_FLAG = '1'B;

   2977  2 000345   400000 236003                    LDQ     -131072,DU
         2 000346   200024 756100                    STQ     ERR_FLAG,,AUTO

      222     2978    8                                       GLOBAL.FPTCHKR_CODE = %READ_ACCESS_ERR;

   2978  2 000347   000003 235007                    LDA     3,DL
         2 000350   000000 470400 xsym               LDP0    GLOBAL$
         2 000351   002621 755100                    STA     1425,,PR0

      223     2979    8                                       END;

   2979  2 000352   000373 710000 2                  TRA     s:2988

      224     2980    7                               ELSE /* Check for write access */
      225     2981    7                                   IF FLAGS.RD_ALLOW AND FLAGS.SEG_PRESENT AND

   2981  2 000353   200027 234100                    SZN     FLAGS,,AUTO
         2 000354   000366 605000 2                  TPL     s:2985
         2 000355   200027 430100                    FSZN    FLAGS,,AUTO
         2 000356   000366 605000 2                  TPL     s:2985
         2 000357   200027 236100                    LDQ     FLAGS,,AUTO
         2 000360   002000 316003                    CANQ    1024,DU
         2 000361   000366 600000 2                  TZE     s:2985
         2 000362   200000 316003                    CANQ    65536,DU
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:32   
         2 000363   000366 600000 2                  TZE     s:2985

      226     2982    7                                      FLAGS.SEG_NOT_EMPTY AND FLAGS.WR_ALLOW THEN
      227     2983    7                                       ERR_FLAG = '0'B; /* Write ok */

   2983  2 000364   200024 450100                    STZ     ERR_FLAG,,AUTO
         2 000365   000373 710000 2                  TRA     s:2988

      228     2984    8                                   ELSE DO;

      229     2985    8                                       ERR_FLAG = '1'B;

   2985  2 000366   400000 236003                    LDQ     -131072,DU
         2 000367   200024 756100                    STQ     ERR_FLAG,,AUTO

      230     2986    8                                       GLOBAL.FPTCHKR_CODE = %WRITE_ACCESS_ERR;

   2986  2 000370   000004 235007                    LDA     4,DL
         2 000371   000000 470400 xsym               LDP0    GLOBAL$
         2 000372   002621 755100                    STA     1425,,PR0

      231     2987    8                                       END;

      232     2988    7                               IF NOT ERR_FLAG THEN
              2988                                        /* Check JIT to see if in IS or DS */

   2988  2 000373   200024 234100                    SZN     ERR_FLAG,,AUTO
         2 000374   000410 604000 2                  TMI     s:2998

      233     2989    7                                   CALL CHECK_JIT;

   2989  2 000375   000530 701000 2                  TSX1    CHECK_JIT
         2 000376   000000 011000                    NOP     0

      234     2990    7                               END;

   2990  2 000377   000410 710000 2                  TRA     s:2998
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:33   

      235     2991    6                           ELSE
      236     2992    6                               ERR_FLAG = '1'B; /* Bad size */

   2992  2 000400   400000 236003                    LDQ     -131072,DU
         2 000401   200024 756100                    STQ     ERR_FLAG,,AUTO

      237     2993    6                           END; /* IF MOD(VECSIZE,ALNMT) */

   2993  2 000402   000410 710000 2                  TRA     s:2998

      238     2994    6                       ELSE DO;

      239     2995    6                           ERR_FLAG = '1'B; /* Bad alignment */

   2995  2 000403   400000 236003                    LDQ     -131072,DU
         2 000404   200024 756100                    STQ     ERR_FLAG,,AUTO

      240     2996    6                           GLOBAL.FPTCHKR_CODE = %ALIGNMENT_ERR;

   2996  2 000405   000005 235007                    LDA     5,DL
         2 000406   000000 470400 xsym               LDP0    GLOBAL$
         2 000407   002621 755100                    STA     1425,,PR0

      241     2997    6                           END;

      242     2998    5                       IF NOT ERR_FLAG THEN

   2998  2 000410   200024 234100                    SZN     ERR_FLAG,,AUTO
         2 000411   000430 604000 2                  TMI     s:3006

      243     2999    5                           IF VEC_CT ~= (PBOUND-1)

   2999  2 000412   200007 236100                    LDQ     PBOUND,,AUTO
         2 000413   000001 136007                    SBLQ    1,DL
         2 000414   000417 604000 2                  TMI     s:3001
         2 000415   200010 116100                    CMPQ    VEC_CT,,AUTO
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:34   
         2 000416   000426 600000 2                  TZE     s:3005

      244     3000    6                           THEN DO;

      245     3001    6                               P.SEGID = P.SEGID + 1; /* Move to next vector */

   3001  2 000417   200004 236100                    LDQ     P$,,AUTO
         2 000420   000001 036007                    ADLQ    1,DL
         2 000421   200004 752103                    STCQ    P$,'03'O,AUTO

      246     3002    6                               VEC_CT = VEC_CT + 1;

   3002  2 000422   200010 235100                    LDA     VEC_CT,,AUTO
         2 000423   000001 035007                    ADLA    1,DL
         2 000424   200010 755100                    STA     VEC_CT,,AUTO

      247     3003    6                               END;

   3003  2 000425   000430 710000 2                  TRA     s:3006

      248     3004    5                           ELSE
      249     3005    5                               DONE = '1'B;

   3005  2 000426   400000 236003                    LDQ     -131072,DU
         2 000427   200020 756100                    STQ     DONE,,AUTO

      250     3006    5                       END; /* DO WHILE */

   3006  2 000430   200024 234100                    SZN     ERR_FLAG,,AUTO
         2 000431   000434 604000 2                  TMI     s:3007
         2 000432   200020 234100                    SZN     DONE,,AUTO
         2 000433   000050 605000 2                  TPL     s:2924

      251     3007    4                   END; /* IF PBOUND = VEC# */

   3007  2 000434   000451 710000 2                  TRA     s:3020

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:35   
      252     3008    4               ELSE DO;

      253     3009    4                   ERR_FLAG = '1'B; /* Wrong no. of vectors */

   3009  2 000435   400000 236003                    LDQ     -131072,DU
         2 000436   200024 756100                    STQ     ERR_FLAG,,AUTO

      254     3010    4                   GLOBAL.FPTCHKR_CODE = %WRONG_NUM_VECTORS_ERR;

   3010  2 000437   000006 235007                    LDA     6,DL
         2 000440   002621 755100                    STA     1425,,PR0

      255     3011    4                   END;

      256     3012    3               END; /* IF PBOUND ~= 0 */

   3012  2 000441   000451 710000 2                  TRA     s:3020

      257     3013    3           ELSE DO;

      258     3014    3               ERR_FLAG = '1'B; /* Should have some vectors */

   3014  2 000442   400000 236003                    LDQ     -131072,DU
         2 000443   200024 756100                    STQ     ERR_FLAG,,AUTO

      259     3015    3               GLOBAL.FPTCHKR_CODE = %NO_VECTORS_PASSED_ERR;

   3015  2 000444   000007 235007                    LDA     7,DL
         2 000445   000000 470400 xsym               LDP0    GLOBAL$
         2 000446   002621 755100                    STA     1425,,PR0

      260     3016    3               END;

      261     3017    2           END; /* IF VEC# > 0 */

   3017  2 000447   000451 710000 2                  TRA     s:3020

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:36   
      262     3018    1       ELSE
      263     3019    1           ERR_FLAG = '0'B; /* Error as originally planned */

   3019  2 000450   200024 450100                    STZ     ERR_FLAG,,AUTO

      264     3020    1       IF ERR_FLAG

   3020  2 000451   200024 234100                    SZN     ERR_FLAG,,AUTO
         2 000452   000527 605000 2                  TPL     s:3042

      265     3021    2       THEN DO;

      266     3022    2           CALL BINCHAR(VEC_CHAR,VEC_CT);

   3022  2 000453   200010 235100                    LDA     VEC_CT,,AUTO
         2 000454   000044 773000                    LRL     36
         2 000455   200054 757100                    STAQ    JIT_TABLE+17,,AUTO
         2 000456   000100 301500                    BTD
         2 000457   200054 000010                    NDSC9   JIT_TABLE+17,,AUTO       cn=0,s=lsgnf,sf=0,n=8
         2 000460   200014 030001                    NDSC9   VEC_CHAR,,AUTO           cn=0,s=nosgn,sf=0,n=1

      267     3023    2           CALL INSERT( GLOBAL.ERRFIELD_INSERT.TEXT(0), 0, 1, VEC_CHAR );

   3023  2 000461   000000 470400 xsym               LDP0    GLOBAL$
         2 000462   200014 236100                    LDQ     VEC_CHAR,,AUTO
         2 000463   000011 772000                    QRL     9
         2 000464   004746 552120                    STBQ    2534,'20'O,PR0

      268     3024    2           GLOBAL.ERRFIELD_INSERT.LENGTH(0) = 1;

   3024  2 000465   001000 236003                    LDQ     512,DU
         2 000466   004746 552140                    STBQ    2534,'40'O,PR0

      269     3025    2           GLOBAL.RET.ERROR# = %ERR#FPT#BADVEC;

   3025  2 000467   210722 235007                    LDA     70098,DL
         2 000470   000006 755100                    STA     6,,PR0
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:37   

      270     3026    2           IF NOT ZI_FPTCHKR_DUMP

   3026  2 000471   000000 234000 xsym               SZN     ZI_FPTCHKR_DUMP
         2 000472   000527 604000 2                  TMI     s:3042

      271     3027    3           THEN DO;

      272     3028    3               TEMP_REM_RECOVER = GLOBAL.PARAN.REM_RECOVER;

   3028  2 000473   000062 237100                    LDAQ    50,,PR0
         2 000474   200016 757100                    STAQ    TEMP_REM_RECOVER,,AUTO

      273     3029    3               GLOBAL.PENDING.EXIT_DML = '1'B;

   3029  2 000475   000400 236003                    LDQ     256,DU
         2 000476   000017 256100                    ORSQ    15,,PR0

      274     3030    3               IF RECOVER_ADDR ~= '0'B

   3030  2 000477   200016 237100                    LDAQ    TEMP_REM_RECOVER,,AUTO
         2 000500   000004 117000 3                  CMPAQ   4
         2 000501   000516 600000 2                  TZE     s:3038

      275     3031    4               THEN DO; /* Unwind to RECOVER addr for BACKOUT purposes */

      276     3032    4                   DBCB$ = GLOBAL.ACTIVE.DBCB$;

   3032  2 000502   000001 236100                    LDQ     1,,PR0
         2 000503   200003 756100                    STQ     DBCB$,,AUTO

      277     3033    4                   CALL M$CLRSTK(FPT_CLRSTK);

   3033  2 000504   000000 630400 1                  EPPR0   FPT_CLRSTK
         2 000505   010013 713400                    CLIMB   4107
         2 000506   400000 401760                    pmme    nvectors=1

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:38   
      278     3034    4                   DBCB.DBIC.CONTROL = DBCB.PWS.DBICREFRESH;

   3034  2 000507   200003 470500                    LDP0    DBCB$,,AUTO
         2 000510   000677 236100                    LDQ     447,,PR0
         2 000511   000470 756100                    STQ     312,,PR0

      279     3035    4                   UNWIND TO GLOBAL.PARAN.REM_RECOVER;

   3035  2 000512   000000 471600 xsym               LDP1  ! GLOBAL$
         2 000513   100062 237300                    LDAQ  ! 50,,PR1
         2 000514   000000 700200 xent               TSX0  ! X66_AUNWIND
         2 000515   000000 000200                    ZERO    0,128

      280     3036    4                   END;
      281     3037    4               ELSE DO;

      282     3038    4                   CALL ZIM$ERRMSG(GLOBAL.RET.ERROR#);

   3038  2 000516   000000 236000 xsym               LDQ     GLOBAL$
         2 000517   000006 036003                    ADLQ    6,DU
         2 000520   200054 756100                    STQ     JIT_TABLE+17,,AUTO
         2 000521   200054 630500                    EPPR0   JIT_TABLE+17,,AUTO
         2 000522   000003 631400 3                  EPPR1   3
         2 000523   000000 701000 xent               TSX1    ZIM$ERRMSG
         2 000524   000000 011000                    NOP     0

      283     3039    4                   CALL M$ERR;

   3039  2 000525   000002 713400                    CLIMB   err
         2 000526   000000 401760                    pmme    nvectors=0

      284     3040    4                   END;

      285     3041    3               END;

      286     3042    2           END;

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:39   
   3042  2 000527   000727 710000 2                  TRA     s:3168

      287     3043
      288     3044        %EJECT;
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:40   
      289     3045        /*I*
      290     3046        NAME: CHECK_JIT
      291     3047        CALL: CALL CHECK_JIT
      292     3048        DESCRIPTION:
      293     3049            Determine whether the base of the vector is in the Instruction
      294     3050            Segment or the Data Segment and make sure the bound falls in the
      295     3051            same segment.  Further checking is needed if the vector is in the
      296     3052            IS to determine whether it's in the Data, Procedure, Dynamic Data,
      297     3053            or Library segment of the IS; the access is also checked.
      298     3054        */
      299     3055
      300     3056    1   CHECK_JIT: PROC;

   3056  2 000530   200030 741300       CHECK_JIT    STX1  ! FLAGS+1,,AUTO

      301     3057        /*D*
      302     3058            We use the DS_MIN value equated below for the User Data Segment
      303     3059            lower page ( page 552 ) byte address.  As of the D00 CP-6 release
      304     3060            the User Data Segment begins at page 600 but we still use the old
      305     3061            value here just in case the user is running on CP-6 C01 or less.
      306     3062            The values for the Instruction Segment upper and lower pages
      307     3063            ( ISEGLO and ISEGHI ) and that of the User Data Segment upper page
      308     3064            ( UDSEGHI ) are used from M_INFO_C.:LIBRARY.
      309     3065        */
      310     3066
      311     3067        %EQU DS_MIN = 2260992;
      312     3068    2   DCL CT UBIN;
      313     3069    2   DCL SEG UBIN;
      314     3070        /*
      315     3071            Table of JIT segments to determine base address, size, and
      316     3072            read/write access of each segment. The table represents
      317     3073            the segments as follows:
      318     3074
      319     3075                 JIT_TABLE.?(0) = Data
      320     3076                 JIT_TABLE.?(1) = Procedure
      321     3077                 JIT_TABLE.?(2) = Dynamic Data
      322     3078                 JIT_TABLE.?(3) = Library
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:41   
      323     3079
      324     3080        */
      325     3081    2   DCL 1 JIT_TABLE (0:3),
      326     3082    2         2 BASE UBIN,
      327     3083        /*B*    BASE - Base address of JIT segment in bytes */
      328     3084    2         2 SIZE UBIN,
      329     3085        /*B*    SIZE - Size of JIT segment in bytes */
      330     3086    2         2 WR BIT(1) UNAL,
      331     3087        /*B*    WR - Write access of JIT segment = '1'B */
      332     3088    2         2 * UBIN(35);
      333     3089
      334     3090    2       IF STORE_JIT_ACCESS

   3090  2 000531   200025 234100                    SZN     STORE_JIT_ACCESS,,AUTO
         2 000532   000541 605000 2                  TPL     s:3099

      335     3091    3       THEN DO;

      336     3092    3           STORE_JIT_ACCESS = '0'B;

   3092  2 000533   200025 450100                    STZ     STORE_JIT_ACCESS,,AUTO

      337     3093    3           JIT_TABLE.WR(0) = '1'B;

   3093  2 000534   400000 236003                    LDQ     -131072,DU
         2 000535   200035 756100                    STQ     JIT_TABLE+2,,AUTO

      338     3094    3           JIT_TABLE.WR(1) = '0'B;

   3094  2 000536   200041 450100                    STZ     JIT_TABLE+6,,AUTO

      339     3095    3           JIT_TABLE.WR(2) = '1'B;

   3095  2 000537   200045 756100                    STQ     JIT_TABLE+10,,AUTO

      340     3096    3           JIT_TABLE.WR(3) = '0'B;

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:42   
   3096  2 000540   200051 450100                    STZ     JIT_TABLE+14,,AUTO

      341     3097    3           END;

      342     3098
      343     3099    2       IF ( %ISEGLO*4096 <= VECBASE) AND

   3099  2 000541   200005 235100                    LDA     VECBASE,,AUTO
         2 000542   000001 115003                    CMPA    1,DU
         2 000543   000710 602000 2                  TNC     s:3159
         2 000544   200005 236100                    LDQ     VECBASE,,AUTO
         2 000545   200006 036100                    ADLQ    VECBOUND,,AUTO
         2 000546   000006 116000 3                  CMPQ    6
         2 000547   000710 603000 2                  TRC     s:3159

      344     3100    2          ((VECBASE + VECBOUND - 1) <= (( %ISEGHI + 1 ) * 4096 ) - 1 )
      345     3101    3       THEN DO;

      346     3102        /*D*
      347     3103            The vector falls in the Instruction Segment.
      348     3104        */
      349     3105    4           DO CT=0 TO 3;

   3105  2 000550   200031 450100                    STZ     CT,,AUTO

      350     3106    4               IF STORE_JIT_VALUES

   3106  2 000551   200026 234100                    SZN     STORE_JIT_VALUES,,AUTO
         2 000552   000640 605000 2                  TPL     s:3139

      351     3107    5               THEN DO;

      352     3108        /*D*
      353     3109            Calculate values from JIT.
      354     3110        */
      355     3111    6                   DO CASE(CT);

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:43   
   3111  2 000553   200031 235100                    LDA     CT,,AUTO
         2 000554   000004 115007                    CMPA    4,DL
         2 000555   000557 602005 2                  TNC     s:3111+4,AL
         2 000556   000640 710000 2                  TRA     s:3139
         2 000557   000563 710000 2                  TRA     s:3116
         2 000560   000575 710000 2                  TRA     s:3122
         2 000561   000607 710000 2                  TRA     s:3128
         2 000562   000621 710000 2                  TRA     s:3134

      356     3112    6                   CASE(0);

      357     3113        /*D*
      358     3114            Data Segment of the IS.
      359     3115        */
      360     3116    6                       JIT_TABLE.BASE(0) = B$JIT.DLL*4096;

   3116  2 000563   000000 470400 xsym               LDP0    B$JIT$
         2 000564   000177 236100                    LDQ     127,,PR0
         2 000565   000006 772000                    QRL     6
         2 000566   000007 376000 3                  ANQ     7
         2 000567   200033 756100                    STQ     JIT_TABLE,,AUTO

      361     3117    6                       JIT_TABLE.SIZE(0) = B$JIT.PCD*4096;

   3117  2 000570   000201 236100                    LDQ     129,,PR0
         2 000571   000014 736000                    QLS     12
         2 000572   000007 376000 3                  ANQ     7
         2 000573   200034 756100                    STQ     JIT_TABLE+1,,AUTO
         2 000574   000640 710000 2                  TRA     s:3139

      362     3118    6                   CASE(1);

      363     3119        /*D*
      364     3120            Procedure Segment of the IS.
      365     3121        */
      366     3122    6                       JIT_TABLE.BASE(1) = B$JIT.PLL*4096;

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:44   
   3122  2 000575   000000 470400 xsym               LDP0    B$JIT$
         2 000576   000176 236100                    LDQ     126,,PR0
         2 000577   000006 772000                    QRL     6
         2 000600   000007 376000 3                  ANQ     7
         2 000601   200037 756100                    STQ     JIT_TABLE+4,,AUTO

      367     3123    6                       JIT_TABLE.SIZE(1) = B$JIT.PCP*4096;

   3123  2 000602   000201 236100                    LDQ     129,,PR0
         2 000603   000006 772000                    QRL     6
         2 000604   000007 376000 3                  ANQ     7
         2 000605   200040 756100                    STQ     JIT_TABLE+5,,AUTO
         2 000606   000640 710000 2                  TRA     s:3139

      368     3124    6                   CASE(2);

      369     3125        /*D*
      370     3126            Dynamic Data Segment of the IS.
      371     3127        */
      372     3128    6                       JIT_TABLE.BASE(2) = B$JIT.DDLL*4096;

   3128  2 000607   000000 470400 xsym               LDP0    B$JIT$
         2 000610   000200 236100                    LDQ     128,,PR0
         2 000611   000006 772000                    QRL     6
         2 000612   000007 376000 3                  ANQ     7
         2 000613   200043 756100                    STQ     JIT_TABLE+8,,AUTO

      373     3129    6                       JIT_TABLE.SIZE(2) = B$JIT.PCDD*4096;

   3129  2 000614   000203 236100                    LDQ     131,,PR0
         2 000615   000014 736000                    QLS     12
         2 000616   000007 376000 3                  ANQ     7
         2 000617   200044 756100                    STQ     JIT_TABLE+9,,AUTO
         2 000620   000640 710000 2                  TRA     s:3139

      374     3130    6                   CASE(3);

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:45   
      375     3131        /*D*
      376     3132            Library Segment of the IS.
      377     3133        */
      378     3134    6                       JIT_TABLE.BASE(3) = B$JIT.LLL*4096;

   3134  2 000621   000000 470400 xsym               LDP0    B$JIT$
         2 000622   000214 236100                    LDQ     140,,PR0
         2 000623   000014 736000                    QLS     12
         2 000624   000007 376000 3                  ANQ     7
         2 000625   200047 756100                    STQ     JIT_TABLE+12,,AUTO

      379     3135    6                       JIT_TABLE.SIZE(3) = ((B$JIT.LUL-B$JIT.LLL)+1)*4096;

   3135  2 000626   000214 236100                    LDQ     140,,PR0
         2 000627   777777 376007                    ANQ     -1,DL
         2 000630   200054 756100                    STQ     JIT_TABLE+17,,AUTO
         2 000631   000215 236100                    LDQ     141,,PR0
         2 000632   000022 772000                    QRL     18
         2 000633   200054 136100                    SBLQ    JIT_TABLE+17,,AUTO
         2 000634   000014 736000                    QLS     12
         2 000635   010000 036007                    ADLQ    4096,DL
         2 000636   200050 756100                    STQ     JIT_TABLE+13,,AUTO

      380     3136    6                       STORE_JIT_VALUES = '0'B;

   3136  2 000637   200026 450100                    STZ     STORE_JIT_VALUES,,AUTO

      381     3137    6                       END;

      382     3138    5                   END;

      383     3139    4               IF VECBASE >= JIT_TABLE.BASE(CT) THEN

   3139  2 000640   200031 235100                    LDA     CT,,AUTO
         2 000641   000002 735000                    ALS     2
         2 000642   200005 236100                    LDQ     VECBASE,,AUTO
         2 000643   200033 116105                    CMPQ    JIT_TABLE,AL,AUTO
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:46   
         2 000644   000647 602000 2                  TNC     s:3141

      384     3140    4                   SEG = CT;

   3140  2 000645   200031 235100                    LDA     CT,,AUTO
         2 000646   200032 755100                    STA     SEG,,AUTO

      385     3141    4               END;

   3141  2 000647   200031 235100                    LDA     CT,,AUTO
         2 000650   000001 035007                    ADLA    1,DL
         2 000651   200031 755100                    STA     CT,,AUTO
         2 000652   000004 115007                    CMPA    4,DL
         2 000653   000551 602000 2                  TNC     s:3106

      386     3142    3           IF WR_FLAG AND NOT JIT_TABLE.WR( SEG )

   3142  2 000654   200023 234100                    SZN     WR_FLAG,,AUTO
         2 000655   000670 605000 2                  TPL     s:3148
         2 000656   200032 235100                    LDA     SEG,,AUTO
         2 000657   000002 735000                    ALS     2
         2 000660   200035 234105                    SZN     JIT_TABLE+2,AL,AUTO
         2 000661   000670 604000 2                  TMI     s:3148

      387     3143    4           THEN DO;

      388     3144    4               ERR_FLAG = '1'B;

   3144  2 000662   400000 236003                    LDQ     -131072,DU
         2 000663   200024 756100                    STQ     ERR_FLAG,,AUTO

      389     3145    4               GLOBAL.FPTCHKR_CODE = %IS_ACCESS_ERR;

   3145  2 000664   000010 235007                    LDA     8,DL
         2 000665   000000 470400 xsym               LDP0    GLOBAL$
         2 000666   002621 755100                    STA     1425,,PR0

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:47   
      390     3146    4               END;

   3146  2 000667   000725 710000 2                  TRA     s:3166

      391     3147    3           ELSE
      392     3148    3              IF (VECBASE + VECBOUND -1) <= (JIT_TABLE.BASE(SEG) + JIT_TABLE.SIZE(SEG)
              3148                        - 1) THEN

   3148  2 000670   200006 036100                    ADLQ    VECBOUND,,AUTO
         2 000671   200032 235100                    LDA     SEG,,AUTO
         2 000672   000002 735000                    ALS     2
         2 000673   200054 756100                    STQ     JIT_TABLE+17,,AUTO
         2 000674   200033 236105                    LDQ     JIT_TABLE,AL,AUTO
         2 000675   200034 036105                    ADLQ    JIT_TABLE+1,AL,AUTO
         2 000676   200054 116100                    CMPQ    JIT_TABLE+17,,AUTO
         2 000677   000702 602000 2                  TNC     s:3151

      393     3149    3                   ERR_FLAG = '0'B;

   3149  2 000700   200024 450100                    STZ     ERR_FLAG,,AUTO
         2 000701   000725 710000 2                  TRA     s:3166

      394     3150    4               ELSE DO;

      395     3151    4                   ERR_FLAG = '1'B;

   3151  2 000702   400000 236003                    LDQ     -131072,DU
         2 000703   200024 756100                    STQ     ERR_FLAG,,AUTO

      396     3152    4                   GLOBAL.FPTCHKR_CODE = %IS_OUT_OF_BOUNDS_ERR;

   3152  2 000704   000011 235007                    LDA     9,DL
         2 000705   000000 470400 xsym               LDP0    GLOBAL$
         2 000706   002621 755100                    STA     1425,,PR0

      397     3153    4                   END;

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:48   
      398     3154    3           END;

   3154  2 000707   000725 710000 2                  TRA     s:3166

      399     3155    2       ELSE
      400     3156        /*D*
      401     3157            The vector falls in the Data Segment.
      402     3158        */
      403     3159    2           IF ( %DS_MIN <= VECBASE ) AND

   3159  2 000710   000010 115000 3                  CMPA    8
         2 000711   000720 602000 2                  TNC     s:3163
         2 000712   200005 236100                    LDQ     VECBASE,,AUTO
         2 000713   200006 036100                    ADLQ    VECBOUND,,AUTO
         2 000714   000011 116000 3                  CMPQ    9
         2 000715   000720 603000 2                  TRC     s:3163

      404     3160    2              ((VECBASE + VECBOUND - 1) <= (( %UDSEGHI + 1 ) * 4096 ) - 1 ) THEN
      405     3161    2               ERR_FLAG = '0'B;

   3161  2 000716   200024 450100                    STZ     ERR_FLAG,,AUTO
         2 000717   000725 710000 2                  TRA     s:3166

      406     3162    3           ELSE DO;

      407     3163    3               ERR_FLAG = '1'B;

   3163  2 000720   400000 236003                    LDQ     -131072,DU
         2 000721   200024 756100                    STQ     ERR_FLAG,,AUTO

      408     3164    3               GLOBAL.FPTCHKR_CODE = %DS_OUT_OF_BOUNDS_ERR;

   3164  2 000722   000012 235007                    LDA     10,DL
         2 000723   000000 470400 xsym               LDP0    GLOBAL$
         2 000724   002621 755100                    STA     1425,,PR0

      409     3165    3               END;
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:49   

      410     3166    2   END CHECK_JIT;

   3166  2 000725   200030 221300                    LDX1  ! FLAGS+1,,AUTO
         2 000726   000001 702211                    TSX2  ! 1,X1

      411     3167
      412     3168    1   END ZIM$FPTCHKR;

   3168  2 000727   000000 702200 xent               TSX2  ! X66_ARET

FPT_CLRSTK
 Sect OctLoc
   1     000   000001 777640   000002 006000   000000 000003   000000 000000    ................

VECTOR_TABLE
 Sect OctLoc
   1     004   000270 010200   005100 010200   000650 010200   000020 010200    .....@..........
   1     010   000040 004200   000004 004200   000004 004400   000004 004200    . ..............

FPT_TABLE
 Sect OctLoc
   1     014   002002 004200   001000 000000   000000 000000   005000 004400    ................
   1     020   001002 003004   000000 000000   005002 010500   001002 003004    ................
   1     024   000000 000000   005002 010500   001002 003004   000000 000000    ................
   1     030   005002 010500   001002 003004   000000 000000   005002 010400    ................
   1     034   001002 003004   000000 000000   005004 010500   001002 003004    ................
   1     040   000000 000000   005002 010400   001002 003004   000000 000000    ................
   1     044   005002 010400   001002 003004   000000 000000   007004 010400    ................
   1     050   001002 003004   005006 000000   006004 010400   001002 003004    ................
   1     054   006000 000000   005002 010400   001002 003004   000000 000000    ................
   1     060   005002 010400   001002 003004   000000 000000   005002 010400    ................
   1     064   001002 003004   000000 000000   005004 010500   001002 003004    ................
   1     070   000000 000000   005004 010500   001002 003004   000000 000000    ................
   1     074   005004 010500   001002 003004   000000 000000   005002 010500    ................
   1     100   001002 003004   000000 000000   005002 010500   001002 003004    ................
   1     104   000000 000000   005002 010500   001002 003004   000000 000000    ................
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:50   
   1     110   005002 010500   001002 003004   000000 000000   005002 010500    ................
   1     114   001002 003004   000000 000000   005004 010500   001002 003004    ................
   1     120   000000 000000   005004 010500   001002 003004   000000 000000    ................
   1     124   005004 010500   001002 003004   000000 000000   005004 010500    ................
   1     130   001002 003004   000000 000000   006004 010500   001002 003004    ................
   1     134   006000 000000   005004 010500   001002 003004   000000 000000    ................
   1     140   005004 010500   001002 003004   000000 000000   005002 010400    ................
   1     144   001002 003004   000000 000000   005002 010500   001002 003004    ................
   1     150   000000 000000   003002 004200   001007 000000   000000 000000    ................
   1     154   001001 004400   000000 000000   000000 000000   001001 004400    ................
   1     160   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     200*  000000 000000   001001 004400   000000 000000   000000 000000    ................
   1     204   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     210   000000 000000   000000 000000   002001 004400   010000 000000    ................
   1     214   000000 000000   005002 010500   001002 003004   000000 000000    ................
   1     220   005002 010500   001002 003004   000000 000000   000000 000000    ................
   1     224   000000 000000   000000 000000   006002 010400   001002 003004    ................
   1     230   006000 000000   001002 004200   000000 000000   000000 000000    ................
   1     234   001001 004200   000000 000000   000000 000000   000000 000000    ................
   1     240   000000 000000   000000 000000                                    ........

(unnamed)
 Sect OctLoc
   3     000   000002 000000   000000 006000   000004 000000   000001 000000    ................
   3     004   000000 000000   000000 000000   000005 000001   007777 770000    ................
   3     010   000010 500000   000040 000001                                    ..... ..

PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:51   
--  Include file information  --

   ZI_ERRORS_C.:ZIC0TOU  is referenced.
   B$JIT.:LIB_E05  cannot be made into a system file and is referenced.
   ZI$DBCB.:ZIC0TOU  is referenced.
   ZI$GLOBAL.:ZIC0TOU  is referenced.
   M_INFO_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIM$FPTCHKR.

   Procedure ZIM$FPTCHKR requires 472 words for executable code.
   Procedure ZIM$FPTCHKR requires 48 words of local(AUTO) storage.

    No errors detected in file ZIM$FPTCHKR.:ZIC0TSI    .
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:52   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:53   
          MINI XREF LISTING

ALNMT
      2790**DCL      2926<<ASSIGN   2946<<ASSIGN   2954>>IF
B$JIT.CPFLAGS1.SLEAZE
      2251**DCL      2251--REDEF
B$JIT.DDLL
      2315**DCL      3128>>ASSIGN
B$JIT.DLL
      2315**DCL      3116>>ASSIGN
B$JIT.ERR.MID
      2158**DCL      2158--REDEF
B$JIT.JRESPEAK
      2319**DCL      2320--REDEF
B$JIT.LLL
      2321**DCL      3134>>ASSIGN   3135>>ASSIGN
B$JIT.LUL
      2321**DCL      3135>>ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
      2428**DCL      2428--REDEF    2429--REDEF
B$JIT.PCD
      2316**DCL      3117>>ASSIGN
B$JIT.PCDD
      2317**DCL      3129>>ASSIGN
B$JIT.PCP
      2316**DCL      3123>>ASSIGN
B$JIT.PLL
      2315**DCL      3122>>ASSIGN
B$JIT.PNR
      2332**DCL      2332--REDEF
B$JIT.TSLINE
      2426**DCL      2427--REDEF
B$JIT$
      2777**DCL      2152--IMP-PTR  3116>>ASSIGN   3117>>ASSIGN   3122>>ASSIGN   3123>>ASSIGN   3128>>ASSIGN
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:54   
      3129>>ASSIGN   3134>>ASSIGN   3135>>ASSIGN   3135>>ASSIGN
CHECK_JIT
      3056**PROC     2989--CALL
CT IN PROCEDURE CHECK_JIT
      3068**DCL      3105<<DOINDEX  3111>>DOCASE   3139>>IF       3140>>ASSIGN
DBCB.DBIC.CONTROL
      1862**DCL      3034<<ASSIGN
DBCB.IOWS.CFCT
      2095**DCL      2096--REDEF
DBCB.IOWS.DBKF.RQ
      2038**DCL      2039--REDEF
DBCB.IOWS.DBKR
      2035**DCL      2036--REDEF
DBCB.IOWS.NOBF
      2097**DCL      2098--REDEF
DBCB.IOWS.SPND
      2023**DCL      2024--REDEF
DBCB.PWS.DBICREFRESH
      1954**DCL      3034>>ASSIGN
DBCB.SWS.RDYCW
      1761**DCL      1762--REDEF
DBCB.SWS.TEMP.PTR1$
      1795**DCL      1796--REDEF    1797--REDEF
DBCB.SWS.TEMP.PTR2$
      1798**DCL      1799--REDEF
DBCB$
      1666**DCL      1667--IMP-PTR  3032<<ASSIGN   3034>>ASSIGN   3034>>ASSIGN
DONE
      2795**DCL      2921<<ASSIGN   2923>>DOWHILE  3005<<ASSIGN
ERR_FLAG
      2799**DCL      2920<<ASSIGN   2923>>DOWHILE  2958<<ASSIGN   2960<<ASSIGN   2965<<ASSIGN   2967<<ASSIGN
      2970>>IF       2975<<ASSIGN   2977<<ASSIGN   2983<<ASSIGN   2985<<ASSIGN   2988>>IF       2992<<ASSIGN
      2995<<ASSIGN   2998>>IF       3009<<ASSIGN   3014<<ASSIGN   3019<<ASSIGN   3020>>IF       3144<<ASSIGN
      3149<<ASSIGN   3151<<ASSIGN   3161<<ASSIGN   3163<<ASSIGN
FLAGS
      2805**DCL      2953<>CALL
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:55   
FLAGS.RD_ALLOW
      2806**DCL      2973>>IF       2981>>IF
FLAGS.SEG_NOT_EMPTY
      2813**DCL      2973>>IF       2981>>IF
FLAGS.SEG_PRESENT
      2814**DCL      2973>>IF       2981>>IF
FLAGS.WR_ALLOW
      2807**DCL      2981>>IF
FPT_CLRSTK
      2773**DCL      3033<>CALL
FPT_CLRSTK.V
      2773**DCL      2773--DCLINIT
FPT_TABLE.V0.ALNMT
      2869**DCL      2926>>ASSIGN
FPT_TABLE.V0.RD_FLAG
      2872**DCL      2929>>ASSIGN
FPT_TABLE.V0.SIZE
      2866**DCL      2927>>ASSIGN
FPT_TABLE.V0.VBL_SIZE
      2877**DCL      2928>>ASSIGN
FPT_TABLE.V0.WR_FLAG
      2875**DCL      2930>>ASSIGN
FPT_TABLE.V1
      2882**DCL      2932>>ASSIGN
FPT_TABLE.V2
      2883**DCL      2934>>ASSIGN
FPT_TABLE.V3
      2884**DCL      2936>>ASSIGN
FPT_TABLE.V4
      2885**DCL      2938>>ASSIGN
FPT_TABLE.V5
      2886**DCL      2940>>ASSIGN
FPT_TABLE.V6
      2887**DCL      2942>>ASSIGN
FPT_TABLE.VECTOR#
      2862**DCL      2909>>IF       2916>>IF
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:56   
GLOBAL.ACTIVE.DBCB$
       722**DCL       723--REDEF    3032>>ASSIGN
GLOBAL.ACTIVE.SSS$
       718**DCL       719--REDEF
GLOBAL.ERRFIELD_INSERT.LENGTH
       941**DCL      3024<<ASSIGN
GLOBAL.ERRFIELD_INSERT.TEXT
       942**DCL      3023<<CALLBLT
GLOBAL.FCN.CODE
       731**DCL      2909>>IF       2916>>IF       2926>>ASSIGN   2927>>ASSIGN   2928>>ASSIGN   2929>>ASSIGN
      2930>>ASSIGN   2932>>ASSIGN   2934>>ASSIGN   2936>>ASSIGN   2938>>ASSIGN   2940>>ASSIGN   2942>>ASSIGN
GLOBAL.FPTCHKR_CODE
       920**DCL      2908<<ASSIGN   2961<<ASSIGN   2968<<ASSIGN   2978<<ASSIGN   2986<<ASSIGN   2996<<ASSIGN
      3010<<ASSIGN   3015<<ASSIGN   3145<<ASSIGN   3152<<ASSIGN   3164<<ASSIGN
GLOBAL.KEY
       926**DCL       929--REDEF
GLOBAL.PARAN.REM_RECOVER
       809**DCL      3028>>ASSIGN   3035>>UNWIND
GLOBAL.PARAN.TRACE.MODE
       801**DCL       808--REDEF
GLOBAL.PENDING.EXIT_DML
       758**DCL      3029<<ASSIGN
GLOBAL.PRINTBUF.BUFFER
       960**DCL       961--REDEF     962--REDEF     963--REDEF
GLOBAL.PRINTBUF.ERR.V
       965**DCL       968--REDEF     969--REDEF     970--REDEF
GLOBAL.RET.ERROR#
       736**DCL      3025<<ASSIGN   3038<>CALL
GLOBAL$
      1020**DCL       716--IMP-PTR  2908>>ASSIGN   2909>>IF       2916>>IF       2926>>ASSIGN   2927>>ASSIGN
      2928>>ASSIGN   2929>>ASSIGN   2930>>ASSIGN   2932>>ASSIGN   2934>>ASSIGN   2936>>ASSIGN   2938>>ASSIGN
      2940>>ASSIGN   2942>>ASSIGN   2961>>ASSIGN   2968>>ASSIGN   2978>>ASSIGN   2986>>ASSIGN   2996>>ASSIGN
      3010>>ASSIGN   3015>>ASSIGN   3023>>CALLBLT  3024>>ASSIGN   3025>>ASSIGN   3028>>ASSIGN   3029>>ASSIGN
      3032>>ASSIGN   3035>>UNWIND   3038>>CALL     3145>>ASSIGN   3152>>ASSIGN   3164>>ASSIGN
I
      2789**DCL      2932<<ASSIGN   2934<<ASSIGN   2936<<ASSIGN   2938<<ASSIGN   2940<<ASSIGN   2942<<ASSIGN
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:57   
      2946>>ASSIGN   2947>>ASSIGN   2949>>ASSIGN   2950>>ASSIGN
JIT_TABLE.BASE IN PROCEDURE CHECK_JIT
      3082**DCL      3116<<ASSIGN   3122<<ASSIGN   3128<<ASSIGN   3134<<ASSIGN   3139>>IF       3148>>IF
JIT_TABLE.SIZE IN PROCEDURE CHECK_JIT
      3084**DCL      3117<<ASSIGN   3123<<ASSIGN   3129<<ASSIGN   3135<<ASSIGN   3148>>IF
JIT_TABLE.WR IN PROCEDURE CHECK_JIT
      3086**DCL      3093<<ASSIGN   3094<<ASSIGN   3095<<ASSIGN   3096<<ASSIGN   3142>>IF
M$CLRSTK
        75**DCL-ENT  3033--CALL
M$ERR
        29**DCL-ENT  3039--CALL
P.SEGID
      2784**DCL      3001<<ASSIGN   3001>>ASSIGN
P$
      2780**DCL      2781--REDEF    2922<<ASSIGN   2953<>CALL
PBOUND
      2787**DCL      2912<>CALL     2913>>IF       2915<<ASSIGN   2915>>ASSIGN   2916>>IF       2999>>IF
PSR$
      2778**DCL      2912<>CALL
RD_FLAG
      2797**DCL      2929<<ASSIGN   2949<<ASSIGN   2972>>IF
RECOVER_ADDR
      2794**DCL      3030>>IF
SEG IN PROCEDURE CHECK_JIT
      3069**DCL      3140<<ASSIGN   3142>>IF       3148>>IF       3148>>IF
SIZE
      2791**DCL      2927<<ASSIGN   2947<<ASSIGN   2957>>IF       2964>>IF
STORE_JIT_ACCESS
      2800**DCL      2918<<ASSIGN   3090>>IF       3092<<ASSIGN
STORE_JIT_VALUES
      2801**DCL      2919<<ASSIGN   3106>>IF       3136<<ASSIGN
TEMP_REM_RECOVER
      2793**DCL      2794--REDEF    3028<<ASSIGN
VBL_SIZE
      2796**DCL      2928<<ASSIGN   2948<<ASSIGN   2956>>IF
VECBASE
PL6.E3A0      #001=ZIM$FPTCHKR File=ZIM$FPTCHKR.:ZIC0TSI                         FRI 09/05/97 12:55 Page:58   
      2785**DCL      2953<>CALL     3099>>IF       3099>>IF       3139>>IF       3148>>IF       3159>>IF
      3159>>IF
VECBOUND
      2786**DCL      2953<>CALL     2954>>IF       2957>>IF       2964>>IF       3099>>IF       3148>>IF
      3159>>IF
VECTOR_TABLE.ALNMT
      2833**DCL      2946>>ASSIGN
VECTOR_TABLE.RD_FLAG
      2835**DCL      2949>>ASSIGN
VECTOR_TABLE.SIZE
      2831**DCL      2947>>ASSIGN
VECTOR_TABLE.WR_FLAG
      2837**DCL      2950>>ASSIGN
VEC_CHAR
      2792**DCL      3022<<CALLBLT  3023>>CALLBLT
VEC_CT
      2788**DCL      2911<<ASSIGN   2924>>DOCASE   2944>>IF       2999>>IF       3002<<ASSIGN   3002>>ASSIGN
      3022>>CALLBLT
VLP$
      2779**DCL      2922>>ASSIGN
WR_FLAG
      2798**DCL      2930<<ASSIGN   2950<<ASSIGN   3142>>IF
ZIB$SEGDECODE
      2760**DCL-ENT  2953--CALL
ZIB$SEGSIZE
      2759**DCL-ENT  2912--CALL
ZIM$ERRMSG
      2761**DCL-ENT  3038--CALL
ZI_FPTCHKR_DUMP
      2776**DCL      3026>>IF
