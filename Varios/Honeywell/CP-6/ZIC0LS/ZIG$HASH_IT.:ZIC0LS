
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:1    
        1        1        /*M*     ZIG$HASH_IT    DBACS     I-D-S/II */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME:    ZIG$HASH_IT
        9        9        PURPOSE:
       10       10                   To find things in the hash table and to add things if
       11       11                 the add bit is turned on.
       12       12        */
       13       13        /*D*     NAME:     WORD_TO_ADD
       14       14                   This comtains the word to add to the hash table or the
       15       15                 word to find a dups against.
       16       16        */
       17       17        /*D*     NAME:     TYPE
       18       18                   This ubin 6 number is a control field for alias
       19       19                 0 - not a alias
       20       20                 1 - area_name
       21       21                 2 - set_name
       22       22                 3 - key_name
       23       23                 4 - record_name
       24       24                 5 - qual field name
       25       25                 6 - not qual field name
       26       26                 7 - Record name qual
       27       27        */
       28       28        /*D*     NAME:     DUP_NU
       29       29                   This ubin (12) tells the record it is on or what type of
       30       30                 name we are locking for.
       31       31                 0 - anything with the same name.
       32       32                 1 - only res_words, area_names, set_names, key_names,
       33       33                      record_names, alias_names.
       34       34                 2 - just add to end of chain.
       35       35                 3-4096 - alias_names and item names with the same DUP_NU.
       36       36        */
       37       37        /*D*     NAME:     RETURN_FLAG
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:2    
       38       38                   This ubin 36 number returns the results of the search.
       39       39                 0 - no problems with dups.
       40       40                 1 - a alias is in the hash table.
       41       41                 2 - a dup has been found.
       42       42                 3 - this is a res_word that is not aliased.
       43       43        */
       44       44        /*D*     NAME: TYPE_OF_WORD
       45       45                   This variable tell what type of word we have here to add.
       46       46                 0 - res_word
       47       47                 1 - area name
       48       48                 2 - set name
       49       49                 3 - key name
       50       50                 4 - record name
       51       51                 5 - item name
       52       52                 6 - alias name
       53       53        */
       54       54        /*
       55       55              Note:
       56       56                 The hash table must be in some order for this proc to
       57       57               work correctly.
       58       58                 first comes the aliases
       59       59                 then the res_words
       60       60                 then all the variable type entrys.
       61       61        */
       62       62        %EJECT;
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:3    
       63       63        /*W*
       64       64              This is not a easy subroutine to use or to debug but it
       65       65            will do all most any adding to the hash table that you want
       66       66            and find any dups or other errors.
       67       67
       68       68              Some things to be careful of are the parameters that are
       69       69            passed.
       70       70                 note: TYPE_OF_WORD is UBIN(6).
       71       71
       72       72              If you want to change this procedure first see how it is use
       73       73            by ZIG$SS_GEN and ZIG$SS_PSET and ZIG$INIT_HAS.
       74       74            Then take a long look at the parameter that it is being passed
       75       75            from these places and be very careful not to change the meaning
       76       76            of the parameter because it takes a lot of testing to make sure
       77       77            that this subroutine works for everything it is supose to do.
       78       78
       79       79              Some things it does is:
       80       80                 adds res_words to the hash table.
       81       81                 puts aliases into the hash table.
       82       82                 puts all declared words into the hash table.
       83       83                 adds thins just to the end of the table.
       84       84                 compares for dups in the declared words.
       85       85                 checks to see if the word has a alias to be conected to it.
       86       86                 ...
       87       87
       88       88
       89       89              If you thing that this subroutine is hard to understand you
       90       90            are 100% correct. If at all possible don't change the functionality
       91       91            of anything in this subroutine unless you want the generater,
       92       92            translate, and validater to not work correctly.
       93       93
       94       94              Note:
       95       95                 The validater hash table is stored at the end of the
       96       96               Dynamic memory so if you are in the validater the varaible
       97       97               ALLOCATE_END better equal 1 before this subroutine is called.
       98       98
       99       99        */
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:4    
      100      100        ZIG$HASH_IT:
      101      101            PROC (WORD_TO_ADD,ADD_OR_NOT,RETURN_FLAG,TYPE,DUP_NU,SPACE_N,PTR$,
      102      102               TYPE_OF_WORD);
      103      103    1   DCL TYPE_OF_WORD UBIN (6) UNAL;
      104      104    1   DCL WORD_TO_ADD CHAR (30) UNAL;
      105      105    1   DCL ADD_OR_NOT UBIN (36);
      106      106    1   DCL RETURN_FLAG UBIN (36);
      107      107    1   DCL TYPE UBIN (36);
      108      108    1   DCL DUP_NU UBIN (36) UNAL;
      109      109    1   DCL PTR$ PTR;
      110      110    1   DCL HAS_TABLE (0:808) PTR EXT;
      111      111    1   DCL ALT_HASH_TABLE (0:808) PTR EXT;
      112      112    1   DCL HAS_ARRAY (0:5) UBIN (36) BASED UNAL;
      113      113    1   DCL HASHED_VALUE UBIN (36);
      114      114    1   DCL SIGN_VALUE REDEF HASHED_VALUE SBIN (36);
      115      115    1   DCL SPACE_N UBIN (36);
      116      116    1   DCL HAS_PTR$ PTR;
      117      117    1   DCL I UBIN (36);
      118      118    1   DCL SAVE_RECORD_NAME CHAR (30) EXT;
      119      119    1   DCL J UBIN (36) EXT;
      120      120    1   DCL 1 TRANS_ALIAS BASED,
      121      121    1         2 * CHAR (44) UNAL,
      122      122    1         2 SCHEMA_NAME CHAR (30) UNAL,
      123      123    1         2 QUAL_NAME CHAR (30) UNAL;
      124      124        %EQU DS6 = 5;
      125      125    1   DCL ZIG$FREE ENTRY(2) ALTRET;
      126      126    1   DCL LEN_COMP_AND_HASH UBIN (36);
      127      127    1   DCL K UBIN (36);
      128      128        %INCLUDE ZI_SUB_LANG;
      129     1843        %INCLUDE ZIG_GENERAL;
      130     1951        %GENERAL;
      131     2075        %EJECT;
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:5    
      132     2076    1       HASHED_VALUE = 0;
      133     2077    1       RETURN_FLAG = 0;
      134     2078    1       K = 5;
      135     2079    1       LEN_COMP_AND_HASH = 30;
      136     2080    1       HASH_SCHEMA_NAME = '0'B;
      137     2081    2       DO I = 0 TO K;
      138     2082    2           HASHED_VALUE = HASHED_VALUE + ADDR(WORD_TO_ADD) -> HAS_ARRAY(I);
      139     2083    2           END;
      140     2084    1       IF SIGN_VALUE < 0 THEN SIGN_VALUE = - SIGN_VALUE;
      141     2085    1       HASHED_VALUE = MOD(HASHED_VALUE,809);
      142     2086    1       PTR$ = ADDR(NIL);
      143     2087    1       HAS_PTR$ = HAS_TABLE(HASHED_VALUE);
      144     2088    1       IF ADD_OR_NOT = #ADD_ALT_HASH
      145     2089    1       THEN HAS_PTR$ = ALT_HASH_TABLE(HASHED_VALUE);
      146     2090    1       ELSE HAS_PTR$ = HAS_TABLE(HASHED_VALUE);
      147     2091    2       DO WHILE (HAS_PTR$ ~= ADDR(NIL) AND (TYPE = 0 OR TYPE = 7));
      148     2092    2           PTR$ = HAS_PTR$;
      149     2093    2           IF (SUBSTR(PTR$ -> HASH_STRUCT.C_NAME,0,LEN_COMP_AND_HASH) =
      150     2094    2              SUBSTR(WORD_TO_ADD,0,LEN_COMP_AND_HASH) AND DUP_NU ~= 2)
      151     2095    3           THEN DO;
      152     2096    3               IF ((DUP_NU ~= 1 OR
      153     2097    3                  PTR$ -> HASH_STRUCT.TYPE ~= 5) AND
      154     2098    3                  ((PTR$ -> HASH_STRUCT.ALIAS_TYPE =TYPE_OF_WORD
      155     2099    3                  AND TYPE_OF_WORD ~= 6) OR (PTR$ ->
      156     2100    3                  HASH_STRUCT.ALIAS_TYPE = 6 AND TYPE_OF_WORD = 5)
      157     2101    3                  OR (PTR$ -> HASH_STRUCT.ALIAS_TYPE = 0 ))
      158     2102    3                  AND (DUP_NU<3 OR DUP_NU=PTR$->HASH_STRUCT.DUPS OR
      159     2103    3                  PTR$ -> HASH_STRUCT.ALIAS_TYPE ~= 0))
      160     2104    4               THEN DO;
      161     2105        /*
      162     2106                   If we have a field then we must check to see if
      163     2107                 this is the correct record that the aliases is for
      164     2108                 and this is very depended on what we are doing.
      165     2109
      166     2110                   In subschema generation the hash structure has pointer
      167     2111                 to the schema_name and the schema_qual.
      168     2112
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:6    
      169     2113                   In subschema translation the hash structure just has
      170     2114                 the schema_name and the schema_qual in the structure
      171     2115                 that is stored in the hash table.
      172     2116
      173     2117                   The reason for this is the names at generation time
      174     2118                 must all be hashed into the table to find any dups so
      175     2119                 alias can be generated for any dups created by alias
      176     2120                 givin or generated.
      177     2121
      178     2122                  In the translater only the subschema names must be check
      179     2123                 for dups since in the schema a record can have the same
      180     2124                 name as a set or key.
      181     2125
      182     2126
      183     2127                   NOTE:   if you plan on changing this then also change
      184     2128                         things in ZIG$SS_GEN and ZIG$SS_PSET.
      185     2129
      186     2130
      187     2131
      188     2132        */
      189     2133    4                   IF PTR$ -> HASH_STRUCT.ALIAS_TYPE = 5
      190     2134    5                   THEN DO;
      191     2135    5                       IF J ~= 5
      192     2136    6                       THEN DO;
      193     2137    6                           IF PTR$ -> HASH_STRUCT.SCHEMA_QUAL -> HASH_STRUCT.C_NAME
      194     2138    6                              = SAVE_RECORD_NAME
      195     2139    7                           THEN DO;
      196     2140    7                               RETURN_FLAG = 1;
      197     2141    7                               RETURN;
      198     2142    7                               END;
      199     2143    6                           END;
      200     2144    6                       ELSE DO;
      201     2145    6                           IF PTR$ -> TRANS_ALIAS.QUAL_NAME
      202     2146    6                              = SAVE_RECORD_NAME
      203     2147    7                           THEN DO;
      204     2148    7                               RETURN_FLAG = 1;
      205     2149    7                               RETURN;
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:7    
      206     2150    7                               END;
      207     2151    6                           END;
      208     2152    5                       END;
      209     2153    5                   ELSE DO;
      210     2154    5                       IF PTR$ -> HASH_STRUCT.TYPE = 6
      211     2155    5                       THEN RETURN_FLAG=1;
      212     2156    5                       ELSE IF PTR$ -> HASH_STRUCT.TYPE = 0
      213     2157    5                           THEN RETURN_FLAG=3;
      214     2158    5                           ELSE RETURN_FLAG=2;
      215     2159    5                       RETURN;
      216     2160    5                       END;
      217     2161    4                   END;
      218     2162    3               END;
      219     2163    2           HAS_PTR$ = HAS_PTR$ -> HASH_STRUCT.PTR$;
      220     2164    2           END;
      221     2165        /*
      222     2166              Now add it to the hash table since we are at the correct
      223     2167            place to add it at.
      224     2168        */
      225     2169    1       IF J ~= 11 AND ADD_OR_NOT = #NO_ADD
      226     2170    2       THEN DO;
      227     2171        /*
      228     2172              The memory shouldn't be initailize because only the generate
      229     2173            uses this subroutine to init dynamic memory.
      230     2174        */
      231     2175    2           RETURN;
      232     2176    2           END;
      233     2177    1       IF SPACE_N = 0
      234     2178    2       THEN DO;
      235     2179    2           HAS_PTR$=PINCRC(ADDR(WORD_TO_ADD),-2);
      236     2180    2           END;
      237     2181    2       ELSE DO;
      238     2182    2           CALL ZIG$G_DYN_MEM_6(SPACE_N,HAS_PTR$);
      239     2183    2           END;
      240     2184    1       IF ADD_OR_NOT = #ADD OR ADD_OR_NOT = #ADD_ALT_HASH
      241     2185    2       THEN DO;
      242     2186    2           IF PTR$ = ADDR(NIL)
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:8    
      243     2187    3           THEN DO;
      244     2188    3               IF ADD_OR_NOT = #ADD_ALT_HASH
      245     2189    4               THEN DO;
      246     2190    4                   HAS_PTR$ -> HASH_STRUCT.PTR$ = ALT_HASH_TABLE(HASHED_VALUE);
      247     2191    4                   ALT_HASH_TABLE(HASHED_VALUE) = HAS_PTR$;
      248     2192    4                   END;
      249     2193    4               ELSE DO;
      250     2194    4                   HAS_PTR$ -> HASH_STRUCT.PTR$ = HAS_TABLE(HASHED_VALUE);
      251     2195    4                   HAS_TABLE(HASHED_VALUE) = HAS_PTR$;
      252     2196    4                   END;
      253     2197    3               END;
      254     2198    3           ELSE DO;
      255     2199    3               PTR$ -> HASH_STRUCT.PTR$ = HAS_PTR$;
      256     2200    3               HAS_PTR$ -> HASH_STRUCT.PTR$ = ADDR(NIL);
      257     2201    3               END;
      258     2202    2           END;
      259     2203    2       ELSE DO;
      260     2204    2           HAS_PTR$ -> HASH_STRUCT.PTR$ = ADDR(NIL);
      261     2205    2           END;
      262     2206        /*
      263     2207              How initial all the things that should be put in the hash
      264     2208            table from the parameters passed.
      265     2209        */
      266     2210    1       HAS_PTR$ -> HASH_STRUCT.ALIAS_TYPE = TYPE;
      267     2211    1       HAS_PTR$ -> HASH_STRUCT.DUPS = DUP_NU;
      268     2212    1       HAS_PTR$ -> HASH_STRUCT.C_NAME = WORD_TO_ADD;
      269     2213    1       HAS_PTR$ -> HASH_STRUCT.TYPE = TYPE_OF_WORD;
      270     2214    1       PTR$ = HAS_PTR$;
      271     2215    1       RETURN;
      272     2216        %EJECT;
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:9    
      273     2217    1   ZIG$ZERO_TABLE:
      274     2218    1       ENTRY;
      275     2219    2       DO I = 0 TO 808;
      276     2220    2           HAS_TABLE(I) = ADDR(NIL);
      277     2221    2           END;
      278     2222    1       RETURN;
      279     2223    1   ZIG$ZERO_ALT_TABLE:
      280     2224    1       ENTRY;
      281     2225    2       DO I = 0 TO 808;
      282     2226    2           ALT_HASH_TABLE(I) = ADDR(NIL);
      283     2227    2           END;
      284     2228    1       CALL ZIG$FREE(%DS6,-1) ALTRET(ALT_FREE); /* FREE ALL */
      285     2229    1   ALT_FREE:
      286     2230    1       RETURN;
      287     2231    1   END ZIG$HASH_IT;

PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:10   
--  Include file information  --

   ZIG_GENERAL.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_SUB_LANG.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIG$HASH_IT.

   Procedure ZIG$HASH_IT requires 295 words for executable code.
   Procedure ZIG$HASH_IT requires 24 words of local(AUTO) storage.

    No errors detected in file ZIG$HASH_IT.:ZIC0TSI    .

PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:11   

 Object Unit name= ZIG$HASH_IT                                File name= ZIG$HASH_IT.:ZIC0TOU
 UTS= SEP 05 '97 12:05:16.68 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none   809   1451  HAS_TABLE
    1  LblCom even  none   809   1451  ALT_HASH_TABLE
    2  LblCom even  none     8     10  SAVE_RECORD_NAME
    3  LblCom even  none     1      1  J
    4  LblCom even  none     1      1  NUM_ERROR_MSG
    5  LblCom even  none     1      1  NUM_WARN_MSG
    6  LblCom even  none     1      1  ALLOCATE_END
    7  LblCom even  none     2      2  SUBSCHEMA_KEY
    8  LblCom even  none     1      1  BUFFER$
    9  LblCom even  none     1      1  ERROR_IO
   10  LblCom even  none     1      1  BUFFER_LEN
   11  LblCom even  none     2      2  UWA_KEY
   12  LblCom even  none     1      1  NEXT_UWA_SECOND_HALF
   13  LblCom even  none     2      2  RVA_KEY
   14  LblCom even  none     2      2  IA__KEY
   15  LblCom even  none     1      1  NEXT_RVA_SECOND_HALF
   16  LblCom even  none    32     40  SEARCHR_NB
   17  LblCom even  none    32     40  SEM_COM
   18  LblCom even  none    32     40  DMCL_XLATE
   19  LblCom even  none    32     40  Q2_PERCENT
   20  LblCom even  none     5      5  LANG_ALLOWED
   21  LblCom even  none     1      1  SUB_LANGUAGE
   22  LblCom even  none    16     20  HEADING_TEXT
   23  LblCom even  none    13     15  LANG_TEXT
   24  LblCom even  none     1      1  HASH_SCHEMA_NAME
   25  LblCom even  none     1      1  CURRENT_RECORD
   26   Proc  even  none   295    447  ZIG$HASH_IT
   27  RoData even  none     7      7  ZIG$HASH_IT
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:12   

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    26      0   yes            yes      Std        8  ZIG$HASH_IT
    26    413                  yes      Std        0  ZIG$ZERO_TABLE
    26    427                  yes      Std        0  ZIG$ZERO_ALT_TABLE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 ZIG$G_DYN_MEM_6
 yes     yes           Std       2 ZIG$FREE
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:13   


        1        1        /*M*     ZIG$HASH_IT    DBACS     I-D-S/II */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME:    ZIG$HASH_IT
        9        9        PURPOSE:
       10       10                   To find things in the hash table and to add things if
       11       11                 the add bit is turned on.
       12       12        */
       13       13        /*D*     NAME:     WORD_TO_ADD
       14       14                   This comtains the word to add to the hash table or the
       15       15                 word to find a dups against.
       16       16        */
       17       17        /*D*     NAME:     TYPE
       18       18                   This ubin 6 number is a control field for alias
       19       19                 0 - not a alias
       20       20                 1 - area_name
       21       21                 2 - set_name
       22       22                 3 - key_name
       23       23                 4 - record_name
       24       24                 5 - qual field name
       25       25                 6 - not qual field name
       26       26                 7 - Record name qual
       27       27        */
       28       28        /*D*     NAME:     DUP_NU
       29       29                   This ubin (12) tells the record it is on or what type of
       30       30                 name we are locking for.
       31       31                 0 - anything with the same name.
       32       32                 1 - only res_words, area_names, set_names, key_names,
       33       33                      record_names, alias_names.
       34       34                 2 - just add to end of chain.
       35       35                 3-4096 - alias_names and item names with the same DUP_NU.
       36       36        */
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:14   
       37       37        /*D*     NAME:     RETURN_FLAG
       38       38                   This ubin 36 number returns the results of the search.
       39       39                 0 - no problems with dups.
       40       40                 1 - a alias is in the hash table.
       41       41                 2 - a dup has been found.
       42       42                 3 - this is a res_word that is not aliased.
       43       43        */
       44       44        /*D*     NAME: TYPE_OF_WORD
       45       45                   This variable tell what type of word we have here to add.
       46       46                 0 - res_word
       47       47                 1 - area name
       48       48                 2 - set name
       49       49                 3 - key name
       50       50                 4 - record name
       51       51                 5 - item name
       52       52                 6 - alias name
       53       53        */
       54       54        /*
       55       55              Note:
       56       56                 The hash table must be in some order for this proc to
       57       57               work correctly.
       58       58                 first comes the aliases
       59       59                 then the res_words
       60       60                 then all the variable type entrys.
       61       61        */
       62       62        %EJECT;
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:15   
       63       63        /*W*
       64       64              This is not a easy subroutine to use or to debug but it
       65       65            will do all most any adding to the hash table that you want
       66       66            and find any dups or other errors.
       67       67
       68       68              Some things to be careful of are the parameters that are
       69       69            passed.
       70       70                 note: TYPE_OF_WORD is UBIN(6).
       71       71
       72       72              If you want to change this procedure first see how it is use
       73       73            by ZIG$SS_GEN and ZIG$SS_PSET and ZIG$INIT_HAS.
       74       74            Then take a long look at the parameter that it is being passed
       75       75            from these places and be very careful not to change the meaning
       76       76            of the parameter because it takes a lot of testing to make sure
       77       77            that this subroutine works for everything it is supose to do.
       78       78
       79       79              Some things it does is:
       80       80                 adds res_words to the hash table.
       81       81                 puts aliases into the hash table.
       82       82                 puts all declared words into the hash table.
       83       83                 adds thins just to the end of the table.
       84       84                 compares for dups in the declared words.
       85       85                 checks to see if the word has a alias to be conected to it.
       86       86                 ...
       87       87
       88       88
       89       89              If you thing that this subroutine is hard to understand you
       90       90            are 100% correct. If at all possible don't change the functionality
       91       91            of anything in this subroutine unless you want the generater,
       92       92            translate, and validater to not work correctly.
       93       93
       94       94              Note:
       95       95                 The validater hash table is stored at the end of the
       96       96               Dynamic memory so if you are in the validater the varaible
       97       97               ALLOCATE_END better equal 1 before this subroutine is called.
       98       98
       99       99        */
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:16   
      100      100        ZIG$HASH_IT:
      101      101            PROC (WORD_TO_ADD,ADD_OR_NOT,RETURN_FLAG,TYPE,DUP_NU,SPACE_N,PTR$,

    101 26 000000   000000 700200 xent  ZIG$HASH_IT  TSX0  ! X66_AUTO_N
        26 000001   000030 000010                    ZERO    24,8

      102      102               TYPE_OF_WORD);
      103      103    1   DCL TYPE_OF_WORD UBIN (6) UNAL;
      104      104    1   DCL WORD_TO_ADD CHAR (30) UNAL;
      105      105    1   DCL ADD_OR_NOT UBIN (36);
      106      106    1   DCL RETURN_FLAG UBIN (36);
      107      107    1   DCL TYPE UBIN (36);
      108      108    1   DCL DUP_NU UBIN (36) UNAL;
      109      109    1   DCL PTR$ PTR;
      110      110    1   DCL HAS_TABLE (0:808) PTR EXT;
      111      111    1   DCL ALT_HASH_TABLE (0:808) PTR EXT;
      112      112    1   DCL HAS_ARRAY (0:5) UBIN (36) BASED UNAL;
      113      113    1   DCL HASHED_VALUE UBIN (36);
      114      114    1   DCL SIGN_VALUE REDEF HASHED_VALUE SBIN (36);
      115      115    1   DCL SPACE_N UBIN (36);
      116      116    1   DCL HAS_PTR$ PTR;
      117      117    1   DCL I UBIN (36);
      118      118    1   DCL SAVE_RECORD_NAME CHAR (30) EXT;
      119      119    1   DCL J UBIN (36) EXT;
      120      120    1   DCL 1 TRANS_ALIAS BASED,
      121      121    1         2 * CHAR (44) UNAL,
      122      122    1         2 SCHEMA_NAME CHAR (30) UNAL,
      123      123    1         2 QUAL_NAME CHAR (30) UNAL;
      124      124        %EQU DS6 = 5;
      125      125    1   DCL ZIG$FREE ENTRY(2) ALTRET;
      126      126    1   DCL LEN_COMP_AND_HASH UBIN (36);
      127      127    1   DCL K UBIN (36);
      128      128        %INCLUDE ZI_SUB_LANG;
      129     1843        %INCLUDE ZIG_GENERAL;
      130     1951        %GENERAL;
      131     2075        %EJECT;
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:17   
      132     2076    1       HASHED_VALUE = 0;

   2076 26 000002   200013 450100                    STZ     HASHED_VALUE,,AUTO

      133     2077    1       RETURN_FLAG = 0;

   2077 26 000003   200005 470500                    LDP0    @RETURN_FLAG,,AUTO
        26 000004   000000 450100                    STZ     0,,PR0

      134     2078    1       K = 5;

   2078 26 000005   000005 235007                    LDA     5,DL
        26 000006   200017 755100                    STA     K,,AUTO

      135     2079    1       LEN_COMP_AND_HASH = 30;

   2079 26 000007   000036 236007                    LDQ     30,DL
        26 000010   200016 756100                    STQ     LEN_COMP_AND_HASH,,AUTO

      136     2080    1       HASH_SCHEMA_NAME = '0'B;

   2080 26 000011   000000 450000 24                 STZ     HASH_SCHEMA_NAME

      137     2081    2       DO I = 0 TO K;

   2081 26 000012   200015 450100                    STZ     I,,AUTO
        26 000013   000030 710000 26                 TRA     s:2083+3

      138     2082    2           HASHED_VALUE = HASHED_VALUE + ADDR(WORD_TO_ADD) -> HAS_ARRAY(I);

   2082 26 000014   200015 235100                    LDA     I,,AUTO
        26 000015   000002 735000                    ALS     2
        26 000016   200003 470500                    LDP0    @WORD_TO_ADD,,AUTO
        26 000017   000100 100505                    MLR     fill='000'O
        26 000020   000000 000004                    ADSC9   0,A,PR0                  cn=0,n=4
        26 000021   200020 000004                    ADSC9   K+1,,AUTO                cn=0,n=4
        26 000022   200020 236100                    LDQ     K+1,,AUTO
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:18   
        26 000023   200013 036100                    ADLQ    HASHED_VALUE,,AUTO
        26 000024   200013 756100                    STQ     HASHED_VALUE,,AUTO

      139     2083    2           END;

   2083 26 000025   200015 235100                    LDA     I,,AUTO
        26 000026   000001 035007                    ADLA    1,DL
        26 000027   200015 755100                    STA     I,,AUTO
        26 000030   200017 236100                    LDQ     K,,AUTO
        26 000031   200015 116100                    CMPQ    I,,AUTO
        26 000032   000014 603000 26                 TRC     s:2082

      140     2084    1       IF SIGN_VALUE < 0 THEN SIGN_VALUE = - SIGN_VALUE;

   2084 26 000033   200013 235100                    LDA     HASHED_VALUE,,AUTO
        26 000034   000037 605000 26                 TPL     s:2085

   2084 26 000035   000000 531000                    NEG     0
        26 000036   200013 755100                    STA     HASHED_VALUE,,AUTO

      141     2085    1       HASHED_VALUE = MOD(HASHED_VALUE,809);

   2085 26 000037   200013 235100                    LDA     HASHED_VALUE,,AUTO
        26 000040   000043 773000                    LRL     35
        26 000041   001451 507007                    DVF     809,DL
        26 000042   200013 756100                    STQ     HASHED_VALUE,,AUTO

      142     2086    1       PTR$ = ADDR(NIL);

   2086 26 000043   000000 236000 27                 LDQ     0
        26 000044   200011 470500                    LDP0    @PTR$,,AUTO
        26 000045   000000 756100                    STQ     0,,PR0

      143     2087    1       HAS_PTR$ = HAS_TABLE(HASHED_VALUE);

   2087 26 000046   200013 720100                    LXL0    HASHED_VALUE,,AUTO
        26 000047   000000 236010 0                  LDQ     HAS_TABLE,X0
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:19   
        26 000050   200014 756100                    STQ     HAS_PTR$,,AUTO

      144     2088    1       IF ADD_OR_NOT = #ADD_ALT_HASH

   2088 26 000051   200004 471500                    LDP1    @ADD_OR_NOT,,AUTO
        26 000052   100000 235100                    LDA     0,,PR1
        26 000053   000002 115007                    CMPA    2,DL
        26 000054   000060 601000 26                 TNZ     s:2090

      145     2089    1       THEN HAS_PTR$ = ALT_HASH_TABLE(HASHED_VALUE);

   2089 26 000055   000000 236010 1                  LDQ     ALT_HASH_TABLE,X0
        26 000056   200014 756100                    STQ     HAS_PTR$,,AUTO
        26 000057   000061 710000 26                 TRA     s:2091

      146     2090    1       ELSE HAS_PTR$ = HAS_TABLE(HASHED_VALUE);

   2090 26 000060   200014 756100                    STQ     HAS_PTR$,,AUTO

      147     2091    2       DO WHILE (HAS_PTR$ ~= ADDR(NIL) AND (TYPE = 0 OR TYPE = 7));

   2091 26 000061   000260 710000 26                 TRA     s:2164

      148     2092    2           PTR$ = HAS_PTR$;

   2092 26 000062   200014 236100                    LDQ     HAS_PTR$,,AUTO
        26 000063   200011 470500                    LDP0    @PTR$,,AUTO
        26 000064   000000 756100                    STQ     0,,PR0

      149     2093    2           IF (SUBSTR(PTR$ -> HASH_STRUCT.C_NAME,0,LEN_COMP_AND_HASH) =

   2093 26 000065   000000 471500                    LDP1    0,,PR0
        26 000066   200016 720100                    LXL0    LEN_COMP_AND_HASH,,AUTO
        26 000067   200003 473500                    LDP3    @WORD_TO_ADD,,AUTO
        26 000070   040140 106540                    CMPC    fill='040'O
        26 000071   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
        26 000072   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:20   
        26 000073   000255 601000 26                 TNZ     s:2163
        26 000074   200007 474500                    LDP4    @DUP_NU,,AUTO
        26 000075   003100 060500                    CSL     bolr='003'O
        26 000076   400000 000044                    BDSC    0,,PR4                   by=0,bit=0,n=36
        26 000077   200020 000044                    BDSC    K+1,,AUTO                by=0,bit=0,n=36
        26 000100   200020 236100                    LDQ     K+1,,AUTO
        26 000101   000002 116007                    CMPQ    2,DL
        26 000102   000255 600000 26                 TZE     s:2163

      150     2094    2              SUBSTR(WORD_TO_ADD,0,LEN_COMP_AND_HASH) AND DUP_NU ~= 2)
      151     2095    3           THEN DO;

      152     2096    3               IF ((DUP_NU ~= 1 OR

   2096 26 000103   003100 060500                    CSL     bolr='003'O
        26 000104   400000 000044                    BDSC    0,,PR4                   by=0,bit=0,n=36
        26 000105   200020 000044                    BDSC    K+1,,AUTO                by=0,bit=0,n=36
        26 000106   200020 236100                    LDQ     K+1,,AUTO
        26 000107   000001 116007                    CMPQ    1,DL
        26 000110   000116 601000 26                 TNZ     s:2096+11
        26 000111   000000 471500                    LDP1    0,,PR0
        26 000112   100000 236100                    LDQ     0,,PR1
        26 000113   070000 376003                    ANQ     28672,DU
        26 000114   050000 116003                    CMPQ    20480,DU
        26 000115   000255 600000 26                 TZE     s:2163
        26 000116   000000 471500                    LDP1    0,,PR0
        26 000117   200012 475500                    LDP5    @TYPE_OF_WORD,,AUTO
        26 000120   003100 061500                    CSR     bolr='003'O
        26 000121   500000 000006                    BDSC    0,,PR5                   by=0,bit=0,n=6
        26 000122   200021 000044                    BDSC    K+2,,AUTO                by=0,bit=0,n=36
        26 000123   100000 236100                    LDQ     0,,PR1
        26 000124   000041 772000                    QRL     33
        26 000125   200021 116100                    CMPQ    K+2,,AUTO
        26 000126   000135 601000 26                 TNZ     s:2096+26
        26 000127   003100 061500                    CSR     bolr='003'O
        26 000130   500000 000006                    BDSC    0,,PR5                   by=0,bit=0,n=6
        26 000131   200022 000044                    BDSC    K+3,,AUTO                by=0,bit=0,n=36
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:21   
        26 000132   200022 236100                    LDQ     K+3,,AUTO
        26 000133   000006 116007                    CMPQ    6,DL
        26 000134   000154 601000 26                 TNZ     s:2096+41
        26 000135   000000 471500                    LDP1    0,,PR0
        26 000136   100000 236100                    LDQ     0,,PR1
        26 000137   700000 376003                    ANQ     -32768,DU
        26 000140   600000 116003                    CMPQ    -65536,DU
        26 000141   000150 601000 26                 TNZ     s:2096+37
        26 000142   003100 061500                    CSR     bolr='003'O
        26 000143   500000 000006                    BDSC    0,,PR5                   by=0,bit=0,n=6
        26 000144   200023 000044                    BDSC    K+4,,AUTO                by=0,bit=0,n=36
        26 000145   200023 236100                    LDQ     K+4,,AUTO
        26 000146   000005 116007                    CMPQ    5,DL
        26 000147   000154 600000 26                 TZE     s:2096+41
        26 000150   000000 471500                    LDP1    0,,PR0
        26 000151   100000 236100                    LDQ     0,,PR1
        26 000152   700000 316003                    CANQ    -32768,DU
        26 000153   000255 601000 26                 TNZ     s:2163
        26 000154   003100 060500                    CSL     bolr='003'O
        26 000155   400000 000044                    BDSC    0,,PR4                   by=0,bit=0,n=36
        26 000156   200024 000044                    BDSC    K+5,,AUTO                by=0,bit=0,n=36
        26 000157   200024 236100                    LDQ     K+5,,AUTO
        26 000160   000003 116007                    CMPQ    3,DL
        26 000161   000201 602000 26                 TNC     s:2133
        26 000162   000000 471500                    LDP1    0,,PR0
        26 000163   100000 236100                    LDQ     0,,PR1
        26 000164   000022 772000                    QRL     18
        26 000165   007777 376007                    ANQ     4095,DL
        26 000166   200025 756100                    STQ     K+6,,AUTO
        26 000167   003100 060500                    CSL     bolr='003'O
        26 000170   400000 000044                    BDSC    0,,PR4                   by=0,bit=0,n=36
        26 000171   200026 000044                    BDSC    K+7,,AUTO                by=0,bit=0,n=36
        26 000172   200026 236100                    LDQ     K+7,,AUTO
        26 000173   200025 116100                    CMPQ    K+6,,AUTO
        26 000174   000201 600000 26                 TZE     s:2133
        26 000175   000000 471500                    LDP1    0,,PR0
        26 000176   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:22   
        26 000177   700000 316003                    CANQ    -32768,DU
        26 000200   000255 600000 26                 TZE     s:2163

      153     2097    3                  PTR$ -> HASH_STRUCT.TYPE ~= 5) AND
      154     2098    3                  ((PTR$ -> HASH_STRUCT.ALIAS_TYPE =TYPE_OF_WORD
      155     2099    3                  AND TYPE_OF_WORD ~= 6) OR (PTR$ ->
      156     2100    3                  HASH_STRUCT.ALIAS_TYPE = 6 AND TYPE_OF_WORD = 5)
      157     2101    3                  OR (PTR$ -> HASH_STRUCT.ALIAS_TYPE = 0 ))
      158     2102    3                  AND (DUP_NU<3 OR DUP_NU=PTR$->HASH_STRUCT.DUPS OR
      159     2103    3                  PTR$ -> HASH_STRUCT.ALIAS_TYPE ~= 0))
      160     2104    4               THEN DO;

      161     2105        /*
      162     2106                   If we have a field then we must check to see if
      163     2107                 this is the correct record that the aliases is for
      164     2108                 and this is very depended on what we are doing.
      165     2109
      166     2110                   In subschema generation the hash structure has pointer
      167     2111                 to the schema_name and the schema_qual.
      168     2112
      169     2113                   In subschema translation the hash structure just has
      170     2114                 the schema_name and the schema_qual in the structure
      171     2115                 that is stored in the hash table.
      172     2116
      173     2117                   The reason for this is the names at generation time
      174     2118                 must all be hashed into the table to find any dups so
      175     2119                 alias can be generated for any dups created by alias
      176     2120                 givin or generated.
      177     2121
      178     2122                  In the translater only the subschema names must be check
      179     2123                 for dups since in the schema a record can have the same
      180     2124                 name as a set or key.
      181     2125
      182     2126
      183     2127                   NOTE:   if you plan on changing this then also change
      184     2128                         things in ZIG$SS_GEN and ZIG$SS_PSET.
      185     2129
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:23   
      186     2130
      187     2131
      188     2132        */
      189     2133    4                   IF PTR$ -> HASH_STRUCT.ALIAS_TYPE = 5

   2133 26 000201   000000 471500                    LDP1    0,,PR0
        26 000202   100000 236100                    LDQ     0,,PR1
        26 000203   700000 376003                    ANQ     -32768,DU
        26 000204   500000 116003                    CMPQ    -98304,DU
        26 000205   000232 601000 26                 TNZ     s:2154

      190     2134    5                   THEN DO;

      191     2135    5                       IF J ~= 5

   2135 26 000206   000000 235000 3                  LDA     J
        26 000207   000005 115007                    CMPA    5,DL
        26 000210   000222 600000 26                 TZE     s:2145

      192     2136    6                       THEN DO;

      193     2137    6                           IF PTR$ -> HASH_STRUCT.SCHEMA_QUAL -> HASH_STRUCT.C_NAME

   2137 26 000211   100012 476500                    LDP6    10,,PR1
        26 000212   040000 106500                    CMPC    fill='040'O
        26 000213   600000 400036                    ADSC9   0,,PR6                   cn=2,n=30
        26 000214   000000 000036 2                  ADSC9   SAVE_RECORD_NAME         cn=0,n=30
        26 000215   000255 601000 26                 TNZ     s:2163

      194     2138    6                              = SAVE_RECORD_NAME
      195     2139    7                           THEN DO;

      196     2140    7                               RETURN_FLAG = 1;

   2140 26 000216   000001 235007                    LDA     1,DL
        26 000217   200005 477500                    LDP7    @RETURN_FLAG,,AUTO
        26 000220   700000 755100                    STA     0,,PR7
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:24   

      197     2141    7                               RETURN;

   2141 26 000221   000000 702200 xent               TSX2  ! X66_ARET

      198     2142    7                               END;
      199     2143    6                           END;
      200     2144    6                       ELSE DO;

      201     2145    6                           IF PTR$ -> TRANS_ALIAS.QUAL_NAME

   2145 26 000222   040000 106500                    CMPC    fill='040'O
        26 000223   100022 400036                    ADSC9   18,,PR1                  cn=2,n=30
        26 000224   000000 000036 2                  ADSC9   SAVE_RECORD_NAME         cn=0,n=30
        26 000225   000255 601000 26                 TNZ     s:2163

      202     2146    6                              = SAVE_RECORD_NAME
      203     2147    7                           THEN DO;

      204     2148    7                               RETURN_FLAG = 1;

   2148 26 000226   000001 235007                    LDA     1,DL
        26 000227   200005 476500                    LDP6    @RETURN_FLAG,,AUTO
        26 000230   600000 755100                    STA     0,,PR6

      205     2149    7                               RETURN;

   2149 26 000231   000000 702200 xent               TSX2  ! X66_ARET

      206     2150    7                               END;
      207     2151    6                           END;
      208     2152    5                       END;
      209     2153    5                   ELSE DO;

      210     2154    5                       IF PTR$ -> HASH_STRUCT.TYPE = 6

   2154 26 000232   100000 236100                    LDQ     0,,PR1
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:25   
        26 000233   070000 376003                    ANQ     28672,DU
        26 000234   060000 116003                    CMPQ    24576,DU
        26 000235   000242 601000 26                 TNZ     s:2156

      211     2155    5                       THEN RETURN_FLAG=1;

   2155 26 000236   000001 235007                    LDA     1,DL
        26 000237   200005 476500                    LDP6    @RETURN_FLAG,,AUTO
        26 000240   600000 755100                    STA     0,,PR6
        26 000241   000254 710000 26                 TRA     s:2159

      212     2156    5                       ELSE IF PTR$ -> HASH_STRUCT.TYPE = 0

   2156 26 000242   100000 236100                    LDQ     0,,PR1
        26 000243   070000 316003                    CANQ    28672,DU
        26 000244   000251 601000 26                 TNZ     s:2158

      213     2157    5                           THEN RETURN_FLAG=3;

   2157 26 000245   000003 235007                    LDA     3,DL
        26 000246   200005 476500                    LDP6    @RETURN_FLAG,,AUTO
        26 000247   600000 755100                    STA     0,,PR6
        26 000250   000254 710000 26                 TRA     s:2159

      214     2158    5                           ELSE RETURN_FLAG=2;

   2158 26 000251   000002 235007                    LDA     2,DL
        26 000252   200005 476500                    LDP6    @RETURN_FLAG,,AUTO
        26 000253   600000 755100                    STA     0,,PR6

      215     2159    5                       RETURN;

   2159 26 000254   000000 702200 xent               TSX2  ! X66_ARET

      216     2160    5                       END;
      217     2161    4                   END;
      218     2162    3               END;
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:26   
      219     2163    2           HAS_PTR$ = HAS_PTR$ -> HASH_STRUCT.PTR$;

   2163 26 000255   200014 471500                    LDP1    HAS_PTR$,,AUTO
        26 000256   100010 236100                    LDQ     8,,PR1
        26 000257   200014 756100                    STQ     HAS_PTR$,,AUTO

      220     2164    2           END;

   2164 26 000260   000000 116000 27                 CMPQ    0
        26 000261   000267 600000 26                 TZE     s:2169
        26 000262   200006 471500                    LDP1    @TYPE,,AUTO
        26 000263   100000 235100                    LDA     0,,PR1
        26 000264   000062 600000 26                 TZE     s:2092
        26 000265   000007 115007                    CMPA    7,DL
        26 000266   000062 600000 26                 TZE     s:2092

      221     2165        /*
      222     2166              Now add it to the hash table since we are at the correct
      223     2167            place to add it at.
      224     2168        */
      225     2169    1       IF J ~= 11 AND ADD_OR_NOT = #NO_ADD

   2169 26 000267   000000 235000 3                  LDA     J
        26 000270   000013 115007                    CMPA    11,DL
        26 000271   000277 600000 26                 TZE     s:2177
        26 000272   200004 471500                    LDP1    @ADD_OR_NOT,,AUTO
        26 000273   100000 235100                    LDA     0,,PR1
        26 000274   000001 115007                    CMPA    1,DL
        26 000275   000277 601000 26                 TNZ     s:2177

      226     2170    2       THEN DO;

      227     2171        /*
      228     2172              The memory shouldn't be initailize because only the generate
      229     2173            uses this subroutine to init dynamic memory.
      230     2174        */
      231     2175    2           RETURN;
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:27   

   2175 26 000276   000000 702200 xent               TSX2  ! X66_ARET

      232     2176    2           END;
      233     2177    1       IF SPACE_N = 0

   2177 26 000277   200010 471500                    LDP1    @SPACE_N,,AUTO
        26 000300   100000 235100                    LDA     0,,PR1
        26 000301   000306 601000 26                 TNZ     s:2182

      234     2178    2       THEN DO;

      235     2179    2           HAS_PTR$=PINCRC(ADDR(WORD_TO_ADD),-2);

   2179 26 000302   200003 236100                    LDQ     @WORD_TO_ADD,,AUTO
        26 000303   000001 036000 27                 ADLQ    1
        26 000304   200014 756100                    STQ     HAS_PTR$,,AUTO

      236     2180    2           END;

   2180 26 000305   000316 710000 26                 TRA     s:2184

      237     2181    2       ELSE DO;

      238     2182    2           CALL ZIG$G_DYN_MEM_6(SPACE_N,HAS_PTR$);

   2182 26 000306   200014 633500                    EPPR3   HAS_PTR$,,AUTO
        26 000307   200021 453500                    STP3    K+2,,AUTO
        26 000310   200010 236100                    LDQ     @SPACE_N,,AUTO
        26 000311   200020 756100                    STQ     K+1,,AUTO
        26 000312   200020 630500                    EPPR0   K+1,,AUTO
        26 000313   000002 631400 27                 EPPR1   2
        26 000314   000000 701000 xent               TSX1    ZIG$G_DYN_MEM_6
        26 000315   000000 011000                    NOP     0

      239     2183    2           END;

PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:28   
      240     2184    1       IF ADD_OR_NOT = #ADD OR ADD_OR_NOT = #ADD_ALT_HASH

   2184 26 000316   200004 470500                    LDP0    @ADD_OR_NOT,,AUTO
        26 000317   000000 235100                    LDA     0,,PR0
        26 000320   000323 600000 26                 TZE     s:2186
        26 000321   000002 115007                    CMPA    2,DL
        26 000322   000356 601000 26                 TNZ     s:2204

      241     2185    2       THEN DO;

      242     2186    2           IF PTR$ = ADDR(NIL)

   2186 26 000323   200011 471500                    LDP1    @PTR$,,AUTO
        26 000324   100000 236100                    LDQ     0,,PR1
        26 000325   000000 116000 27                 CMPQ    0
        26 000326   000347 601000 26                 TNZ     s:2199

      243     2187    3           THEN DO;

      244     2188    3               IF ADD_OR_NOT = #ADD_ALT_HASH

   2188 26 000327   000002 115007                    CMPA    2,DL
        26 000330   000340 601000 26                 TNZ     s:2194

      245     2189    4               THEN DO;

      246     2190    4                   HAS_PTR$ -> HASH_STRUCT.PTR$ = ALT_HASH_TABLE(HASHED_VALUE);

   2190 26 000331   200013 720100                    LXL0    HASHED_VALUE,,AUTO
        26 000332   000000 236010 1                  LDQ     ALT_HASH_TABLE,X0
        26 000333   200014 473500                    LDP3    HAS_PTR$,,AUTO
        26 000334   300010 756100                    STQ     8,,PR3

      247     2191    4                   ALT_HASH_TABLE(HASHED_VALUE) = HAS_PTR$;

   2191 26 000335   200014 236100                    LDQ     HAS_PTR$,,AUTO
        26 000336   000000 756010 1                  STQ     ALT_HASH_TABLE,X0
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:29   

      248     2192    4                   END;

   2192 26 000337   000361 710000 26                 TRA     s:2210

      249     2193    4               ELSE DO;

      250     2194    4                   HAS_PTR$ -> HASH_STRUCT.PTR$ = HAS_TABLE(HASHED_VALUE);

   2194 26 000340   200013 720100                    LXL0    HASHED_VALUE,,AUTO
        26 000341   000000 236010 0                  LDQ     HAS_TABLE,X0
        26 000342   200014 473500                    LDP3    HAS_PTR$,,AUTO
        26 000343   300010 756100                    STQ     8,,PR3

      251     2195    4                   HAS_TABLE(HASHED_VALUE) = HAS_PTR$;

   2195 26 000344   200014 236100                    LDQ     HAS_PTR$,,AUTO
        26 000345   000000 756010 0                  STQ     HAS_TABLE,X0

      252     2196    4                   END;

      253     2197    3               END;

   2197 26 000346   000361 710000 26                 TRA     s:2210

      254     2198    3           ELSE DO;

      255     2199    3               PTR$ -> HASH_STRUCT.PTR$ = HAS_PTR$;

   2199 26 000347   100000 473500                    LDP3    0,,PR1
        26 000350   200014 236100                    LDQ     HAS_PTR$,,AUTO
        26 000351   300010 756100                    STQ     8,,PR3

      256     2200    3               HAS_PTR$ -> HASH_STRUCT.PTR$ = ADDR(NIL);

   2200 26 000352   000000 236000 27                 LDQ     0
        26 000353   200014 473500                    LDP3    HAS_PTR$,,AUTO
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:30   
        26 000354   300010 756100                    STQ     8,,PR3

      257     2201    3               END;

      258     2202    2           END;

   2202 26 000355   000361 710000 26                 TRA     s:2210

      259     2203    2       ELSE DO;

      260     2204    2           HAS_PTR$ -> HASH_STRUCT.PTR$ = ADDR(NIL);

   2204 26 000356   000000 236000 27                 LDQ     0
        26 000357   200014 471500                    LDP1    HAS_PTR$,,AUTO
        26 000360   100010 756100                    STQ     8,,PR1

      261     2205    2           END;

      262     2206        /*
      263     2207              How initial all the things that should be put in the hash
      264     2208            table from the parameters passed.
      265     2209        */
      266     2210    1       HAS_PTR$ -> HASH_STRUCT.ALIAS_TYPE = TYPE;

   2210 26 000361   200006 471500                    LDP1    @TYPE,,AUTO
        26 000362   200014 473500                    LDP3    HAS_PTR$,,AUTO
        26 000363   100000 236100                    LDQ     0,,PR1
        26 000364   000041 736000                    QLS     33
        26 000365   300000 676100                    ERQ     0,,PR3
        26 000366   700000 376003                    ANQ     -32768,DU
        26 000367   300000 656100                    ERSQ    0,,PR3

      267     2211    1       HAS_PTR$ -> HASH_STRUCT.DUPS = DUP_NU;

   2211 26 000370   200007 473500                    LDP3    @DUP_NU,,AUTO
        26 000371   200014 474500                    LDP4    HAS_PTR$,,AUTO
        26 000372   003100 061500                    CSR     bolr='003'O
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:31   
        26 000373   300000 000044                    BDSC    0,,PR3                   by=0,bit=0,n=36
        26 000374   400000 060014                    BDSC    0,,PR4                   by=0,bit=6,n=12

      268     2212    1       HAS_PTR$ -> HASH_STRUCT.C_NAME = WORD_TO_ADD;

   2212 26 000375   200003 474500                    LDP4    @WORD_TO_ADD,,AUTO
        26 000376   200014 475500                    LDP5    HAS_PTR$,,AUTO
        26 000377   040100 100500                    MLR     fill='040'O
        26 000400   400000 000036                    ADSC9   0,,PR4                   cn=0,n=30
        26 000401   500000 400036                    ADSC9   0,,PR5                   cn=2,n=30

      269     2213    1       HAS_PTR$ -> HASH_STRUCT.TYPE = TYPE_OF_WORD;

   2213 26 000402   200012 475500                    LDP5    @TYPE_OF_WORD,,AUTO
        26 000403   200014 476500                    LDP6    HAS_PTR$,,AUTO
        26 000404   003100 061500                    CSR     bolr='003'O
        26 000405   500000 000006                    BDSC    0,,PR5                   by=0,bit=0,n=6
        26 000406   600000 030003                    BDSC    0,,PR6                   by=0,bit=3,n=3

      270     2214    1       PTR$ = HAS_PTR$;

   2214 26 000407   200014 236100                    LDQ     HAS_PTR$,,AUTO
        26 000410   200011 476500                    LDP6    @PTR$,,AUTO
        26 000411   600000 756100                    STQ     0,,PR6

      271     2215    1       RETURN;

   2215 26 000412   000000 702200 xent               TSX2  ! X66_ARET

      272     2216        %EJECT;
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:32   
      273     2217    1   ZIG$ZERO_TABLE:
      274     2218    1       ENTRY;

   2218 26 000413   000000 700200 xent  ZIG$ZERO_TA* TSX0  ! X66_AUTO_N
        26 000414   000030 000010                    ZERO    24,8

      275     2219    2       DO I = 0 TO 808;

   2219 26 000415   200015 450100                    STZ     I,,AUTO

      276     2220    2           HAS_TABLE(I) = ADDR(NIL);

   2220 26 000416   000000 236000 27                 LDQ     0
        26 000417   200015 720100                    LXL0    I,,AUTO
        26 000420   000000 756010 0                  STQ     HAS_TABLE,X0

      277     2221    2           END;

   2221 26 000421   200015 235100                    LDA     I,,AUTO
        26 000422   000001 035007                    ADLA    1,DL
        26 000423   200015 755100                    STA     I,,AUTO
        26 000424   001451 115007                    CMPA    809,DL
        26 000425   000416 602000 26                 TNC     s:2220

      278     2222    1       RETURN;

   2222 26 000426   000000 702200 xent               TSX2  ! X66_ARET

      279     2223    1   ZIG$ZERO_ALT_TABLE:
      280     2224    1       ENTRY;

   2224 26 000427   000000 700200 xent  ZIG$ZERO_AL* TSX0  ! X66_AUTO_N
        26 000430   000030 000010                    ZERO    24,8

      281     2225    2       DO I = 0 TO 808;

   2225 26 000431   200015 450100                    STZ     I,,AUTO
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:33   

      282     2226    2           ALT_HASH_TABLE(I) = ADDR(NIL);

   2226 26 000432   000000 236000 27                 LDQ     0
        26 000433   200015 720100                    LXL0    I,,AUTO
        26 000434   000000 756010 1                  STQ     ALT_HASH_TABLE,X0

      283     2227    2           END;

   2227 26 000435   200015 235100                    LDA     I,,AUTO
        26 000436   000001 035007                    ADLA    1,DL
        26 000437   200015 755100                    STA     I,,AUTO
        26 000440   001451 115007                    CMPA    809,DL
        26 000441   000432 602000 26                 TNC     s:2226

      284     2228    1       CALL ZIG$FREE(%DS6,-1) ALTRET(ALT_FREE); /* FREE ALL */

   2228 26 000442   000005 630400 27                 EPPR0   5
        26 000443   000002 631400 27                 EPPR1   2
        26 000444   000000 701000 xent               TSX1    ZIG$FREE
        26 000445   000446 702000 26                 TSX2    ALT_FREE

      285     2229    1   ALT_FREE:
      286     2230    1       RETURN;

   2230 26 000446   000000 702200 xent  ALT_FREE     TSX2  ! X66_ARET

HAS_TABLE
 Sect OctLoc
   0     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

ALT_HASH_TABLE
 Sect OctLoc
   1     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

SAVE_RECORD_NAME
 Sect OctLoc
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:34   
   2     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

UWA_KEY
 Sect OctLoc
  11     000   007125 127101   ****** ******                                    .UWA....

RVA_KEY
 Sect OctLoc
  13     000   007122 126101   ****** ******                                    .RVA....

IA__KEY
 Sect OctLoc
  14     000   007111 101137   ****** ******                                    .IA_....

SEARCHR_NB
 Sect OctLoc
  16     000   001001 001001   001001 001001   001001 001001   001001 001001    ................
  16     010*  000001 001001   001001 001001   001001 001001   001001 001001    ................
  16     014   001001 001001   001001 001001   001001 001001   001001 001001    ................
  16     034*  001001 001001   001001 001001   001001 001001   001001 001001    ................

SEM_COM
 Sect OctLoc
  17     000   000001 002003   004005 006007   010011 012013   014015 016017    ................
  17     004   020021 022023   024025 026027   030031 032033   034035 036037    ................
  17     010   040041 042043   044045 046047   050051 052053   054055 056057     !"#$%&'()*+,-./
  17     014   060061 062063   064065 066067   070071 072040   074075 076077    0123456789: <=>?
  17     020   100101 102103   104105 106107   110111 112113   114115 116117    @ABCDEFGHIJKLMNO
  17     024   120121 122123   124125 126127   130131 132133   134135 136137    PQRSTUVWXYZ[\]^_
  17     030   140141 142143   144145 146147   150151 152153   154155 156157    `abcdefghijklmno
  17     034   160161 162163   164165 166167   170171 172173   174175 176177    pqrstuvwxyz{|}~.

DMCL_XLATE
 Sect OctLoc
  18     000   000001 002003   004005 006007   010011 012013   014015 016017    ................
  18     004   020021 022023   024025 026027   030031 032033   034035 036037    ................
  18     010   040041 041043   044045 046047   050051 052053   054055 136057     !!#$%&'()*+,-^/
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:35   
  18     014   060061 062063   064065 066067   070071 072040   074075 076077    0123456789: <=>?
  18     020   100101 102103   104105 106107   110111 112113   114115 116117    @ABCDEFGHIJKLMNO
  18     024   120121 122123   124125 126127   130131 132133   134135 136137    PQRSTUVWXYZ[\]^_
  18     030   140141 142143   144145 146147   150151 152153   154155 156157    `abcdefghijklmno
  18     034   160161 162163   164165 166167   170171 172173   174175 176177    pqrstuvwxyz{|}~.

Q2_PERCENT
 Sect OctLoc
  19     000   000001 002003   004005 006007   010011 012013   014015 016017    ................
  19     004   020021 022023   024025 026027   030031 032033   034035 036037    ................
  19     010   040041 045043   044045 046047   050051 052053   054055 056057     !%#$%&'()*+,-./
  19     014   060061 062063   064065 066067   070071 072073   074075 076077    0123456789:;<=>?
  19     020   100101 102103   104105 106107   110111 112113   114115 116117    @ABCDEFGHIJKLMNO
  19     024   120121 122123   124125 126127   130131 132133   134135 136137    PQRSTUVWXYZ[\]^_
  19     030   140141 142143   144145 146147   150151 152153   154155 156157    `abcdefghijklmno
  19     034   160161 162163   164165 166167   170171 172173   174175 176177    pqrstuvwxyz{|}~.

LANG_ALLOWED
 Sect OctLoc
  20     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

HEADING_TEXT
 Sect OctLoc
  22     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

LANG_TEXT
 Sect OctLoc
  23     000   116117 124040   125123 105104   040040 103117   102117 114040    NOT USED  COBOL
  23     004   040040 040040   106117 122124   122101 116040   040040 101120        FORTRAN   AP
  23     010   114040 040040   040040 040040   102101 123111   103040 040040    L       BASIC
  23     014   040040 ******                                                      ..

HASH_SCHEMA_NAME
 Sect OctLoc
  24     000   0***** ******                                                    ....

(unnamed)
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:36   
 Sect OctLoc
  27     000   000000 006014   777777 400000   000002 000000   000000 000005    ................
  27     004   777777 777777   000003 006000   000004 006000                    ............
      287     2231    1   END ZIG$HASH_IT;

PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:37   
--  Include file information  --

   ZIG_GENERAL.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_SUB_LANG.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIG$HASH_IT.

   Procedure ZIG$HASH_IT requires 295 words for executable code.
   Procedure ZIG$HASH_IT requires 24 words of local(AUTO) storage.

    No errors detected in file ZIG$HASH_IT.:ZIC0TSI    .
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:38   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:39   
          MINI XREF LISTING

ADD_OR_NOT
       105**DCL       100--PROC     2088>>IF       2169>>IF       2184>>IF       2184>>IF       2188>>IF
ALT_FREE
      2230**LABEL    2228--CALLALT
ALT_HASH_TABLE
       111**DCL      2089>>ASSIGN   2190>>ASSIGN   2191<<ASSIGN   2226<<ASSIGN
DUP_NU
       108**DCL       100--PROC     2093>>IF       2096>>IF       2096>>IF       2096>>IF       2211>>ASSIGN
HASHED_VALUE
       113**DCL       114--REDEF    2076<<ASSIGN   2082<<ASSIGN   2082>>ASSIGN   2085<<ASSIGN   2085>>ASSIGN
      2087>>ASSIGN   2089>>ASSIGN   2090>>ASSIGN   2190>>ASSIGN   2191>>ASSIGN   2194>>ASSIGN   2195>>ASSIGN
HASH_SCHEMA_NAME
      2003**DCL      2080<<ASSIGN
HASH_STRUCT.ALIAS_TYPE
      2005**DCL      2096>>IF       2096>>IF       2096>>IF       2096>>IF       2133>>IF       2210<<ASSIGN
HASH_STRUCT.C_NAME
      2008**DCL      2093>>IF       2137>>IF       2212<<ASSIGN
HASH_STRUCT.DUPS
      2007**DCL      2096>>IF       2211<<ASSIGN
HASH_STRUCT.PTR$
      2009**DCL      2163>>ASSIGN   2190<<ASSIGN   2194<<ASSIGN   2199<<ASSIGN   2200<<ASSIGN   2204<<ASSIGN
HASH_STRUCT.SCHEMA_QUAL
      2011**DCL      2137>>IF
HASH_STRUCT.TYPE
      2006**DCL      2096>>IF       2154>>IF       2156>>IF       2213<<ASSIGN
HAS_ARRAY
       112**DCL      2082>>ASSIGN
HAS_PTR$
       116**DCL      2087<<ASSIGN   2089<<ASSIGN   2090<<ASSIGN   2091>>DOWHILE  2092>>ASSIGN   2163<<ASSIGN
      2163>>ASSIGN   2179<<ASSIGN   2182<>CALL     2190>>ASSIGN   2191>>ASSIGN   2194>>ASSIGN   2195>>ASSIGN
      2199>>ASSIGN   2200>>ASSIGN   2204>>ASSIGN   2210>>ASSIGN   2211>>ASSIGN   2212>>ASSIGN   2213>>ASSIGN
      2214>>ASSIGN
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:40   
HAS_TABLE
       110**DCL      2087>>ASSIGN   2090>>ASSIGN   2194>>ASSIGN   2195<<ASSIGN   2220<<ASSIGN
I
       117**DCL      2081<<DOINDEX  2082>>ASSIGN   2219<<DOINDEX  2220>>ASSIGN   2225<<DOINDEX  2226>>ASSIGN
J
       119**DCL      2135>>IF       2169>>IF
K
       127**DCL      2078<<ASSIGN   2081>>DOINDEX
LEN_COMP_AND_HASH
       126**DCL      2079<<ASSIGN   2093>>IF       2093>>IF
PTR$
       109**DCL       100--PROC     2086<<ASSIGN   2092<<ASSIGN   2093>>IF       2096>>IF       2096>>IF
      2096>>IF       2096>>IF       2096>>IF       2096>>IF       2133>>IF       2137>>IF       2145>>IF
      2154>>IF       2156>>IF       2186>>IF       2199>>ASSIGN   2214<<ASSIGN
RETURN_FLAG
       106**DCL       100--PROC     2077<<ASSIGN   2140<<ASSIGN   2148<<ASSIGN   2155<<ASSIGN   2157<<ASSIGN
      2158<<ASSIGN
SAVE_RECORD_NAME
       118**DCL      2137>>IF       2145>>IF
SIGN_VALUE
       114**DCL      2084>>IF       2084<<ASSIGN   2084>>ASSIGN
SPACE_N
       115**DCL       100--PROC     2177>>IF       2182<>CALL
SUBSCHEMA_KEY
      1891**DCL      1892--REDEF
TRANS_ALIAS.QUAL_NAME
       123**DCL      2145>>IF
TYPE
       107**DCL       100--PROC     2091>>DOWHILE  2091>>DOWHILE  2210>>ASSIGN
TYPE_OF_WORD
       103**DCL       100--PROC     2096>>IF       2096>>IF       2096>>IF       2213>>ASSIGN
WORD_TO_ADD
       104**DCL       100--PROC     2082--ASSIGN   2093>>IF       2179--ASSIGN   2212>>ASSIGN
ZIG$FREE
       125**DCL-ENT  2228--CALL
ZIG$G_DYN_MEM_6
PL6.E3A0      #001=ZIG$HASH_IT File=ZIG$HASH_IT.:ZIC0TSI                         FRI 09/05/97 12:05 Page:41   
      1866**DCL-ENT  2182--CALL
