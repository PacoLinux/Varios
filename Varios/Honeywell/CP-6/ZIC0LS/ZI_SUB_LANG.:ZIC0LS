

11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       1    
    1      /*M*     ZI_SUB_LANG   DBACS     I-D-S/II  */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*P*
    8      NAME:    ZI_SUB_LANG
    9      PURPOSE:
   10                 To contain all the information about the subschema
   11               descriptors that describe the structures in the subschema.
   12               Also, to have all the descriptors in one include file so
   13               that all readers of the subschema use the same structures
   14               and the same bits for the correct things.
   15
   16                    The subschema file:
   17               CONTROL SEGMENT:
   18                      This segment is only one block of 64 words long
   19                    and is alway key 0 in the subschema file. The control
   20                    block contains the information of how things went
   21                    with the subschema translation and the subschema
   22                    validation. It also has record numbers for the other
   23                    sections in the subschema so one can find where these
   24                    other sections start.
   25
   26               NAME SEGMENT:
   27                      This segment contains the type 9 and 11 descriptors
   28                    of the subschema and is created by the subschema
   29                    translater and updated by the validation process.
   30                    The Type 9 and 11 are read by the languages that
   31                    interface with IDS and from this section the UWA and
   32                    RVA are built.
   33
   34               SUBSCHEMA DESCRIPTOR SEGMENT:
   35                      This segment contains the type 100, 110, 200, 210,
   36                    300, 350, 400, 410, 420, and 430 descriptors. This
   37                    descriptors are only for the use of DBACS and other
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       2    
   38                    supported BULL HN products because they can change
   39                    any time a new release of these produces are made or
   40                    a patch to these produces are made.
   41                    WARNING!!!!
   42                      If a user uses this section of descriptors then don't
   43                    think it is strange when things stop working because
   44                    these descriptors will change!
   45
   46               NAME SEGMENT EXTENSION:
   47                      This segment contains the type 9, 30, 31, 32, 33,
   48                    34, 35, 36, 37 descriptors. These descriptors are
   49                    written by the validator and are also for the use
   50                    of the language that has a interface with IDS.
   51                      The type 9 descriptors in this segment are data
   52                    base parameters and must be put in the UWA but not
   53                    the RVA. The other descriptors tell about relationships
   54                    between units in the schema.
   55
   56               COMPILATION UNIT RECORD SEGMENT:
   57                      These records are in a link list and only
   58                    supported BULL HN products had better put these
   59                    records in or else some parts of DBACS will never
   60                    work.
   61
   62               SCHEMA SUBSET:
   63                      This is the schema subset that IDS reads and only
   64                    DBACS and IDS had better read this or nothing will
   65                    ever work. This segment describes the schema in
   66                    terms that are useable from IDS. This segment is
   67                    written in two places:
   68                         First in the key 'SSS KEY'.
   69                         second in a second file that is the same name
   70                              as the subschema file but with a colon
   71                              after the name. This is a shared data segment.
   72
   73               GENERAL INFORMATION:
   74                      The subschema file is a CP6 keyed file. If a block
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       3    
   75                    number is given then it is also the key in the file.
   76                    Record numbers must be divided by 2 and 1 added to them
   77                    to find the block they are in and there are two record
   78                    per block.
   79                      The segments 'NAME SEGMENT' and 'SUBSCHEMA DESCRIPTOR
   80                    SEGMENT' are terminated by a record with the first
   81                    12 characters equal to ''. The segment
   82                    'NAME SEGMENT EXTENTION' is terminated by the third
   83                    record that the first 12 charaters equal ''.
   84                    The segment 'COMPILATION UNIT RECORD SEGMENT' is
   85                    terminated by a next pointer equal to 0.
   86
   87               WARNING:
   88                      This include describes the whole subschema file but
   89                    only use the segment that should be used or things
   90                    won't work and it is all your own problems!!!!!
   91
   92
   93      */
   94      %MACRO GENERAL(STCLASS=EXT);
   95      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   96      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
   97      %LSET INIT=CHARTEXT('INIT');
   98      %ELSE;
   99      %LSET INIT=CHARTEXT('/*');
  100      %ENDIF;
  101      DCL LANG_ALLOWED(0:4)   UBIN (36) EXT;
  102      DCL SUB_LANGUAGE UBIN (36) EXT;
  103      %SUB     #COBOL = 1;
  104      %SUB     #FORTRAN = 2;
  105      %SUB     #APL = 3;
  106      %SUB     #BASIC = 4;
  107      /*D*     NAME:     SUB_LANGUAGE
  108               THIS VARIABLE TELLS WHAT LANGUAGE TO GENERATE THE SUBSCHEMA
  109             DDL FOR:
  110               1    -    COBOL
  111               2    -    FORTRAN
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       4    
  112               3    -    APL
  113               4    -    BASIC
  114      */
  115      DCL HEADING_TEXT   CHAR (64) EXT;
  116      DCL LANG_TEXT(0:4) CHAR (10) EXT
  117          INIT(     'NOT USED',
  118                    'COBOL',
  119                    'FORTRAN',
  120                    'APL',
  121                    'BASIC');
  122      /*D*     NAME:     HEADING_TEXT
  123               THIS VARIABLE IS TO PASS THE TEXT OF THE NEW HEADINGS TO
  124             THE ENTRY POINT SUBLST.
  125      */
  126      /*D*     NAME:     LANG_TEXT
  127               THIS ARRAY HAS THE TEXT NAMES THAT GO WITH THE VARIABLE
  128             SUB_LANGUAGE.
  129      */
  130      %SUB     #IN_ALIAS=6;                   /* IN THE ALIAS PROCESSING            */
  131      %SUB     #IN_AREA_PROCESSING=1;         /* IN THE PROCESSING OF AREAS         */
  132      %SUB     #IN_SET_PROCESSING=2;          /* IN THE PROCESSING OF SETS          */
  133      %SUB     #IN_KEY_PROCESSING=3;          /* IN THE PROCESSING OF KEYS          */
  134      %SUB     #IN_RECORD_PROCESSING=4;       /* IN THE PROCESSING OF RECORDS       */
  135      %SUB     #IN_ITEM_PROCESSING=5;         /* IN THE PROCESSING OF ITEMS         */
  136      /*
  137            Now the %SUBS for the stored error messages.
  138      */
  139      %SUB    #NO_DEFAULT_TYPE = 0; /* NO DEFAULT TYPE CONVERSION FOR GENERATER     */
  140      /*
  141            Now the hashing searching subroutines.
  142      */
  143      %SUB #ADD = 0 /* ADD TO HASH TABLE THIS VALUE IF NO DUPS */;
  144      %SUB #NO_ADD = 1 /* JUST SEARCH THE HASH TABLE */;
  145      %SUB #ADD_ALT_HASH = 2;            /* Add to altrenate hashtable (fields only)*/
  146      DCL      HASH_SCHEMA_NAME BIT (1) EXT INIT ('0'B);
  147      DCL 1 HASH_STRUCT BASED ALIGNED,
  148            2    ALIAS_TYPE        UBIN (3)                      UNAL,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       5    
  149            2    TYPE              UBIN (3)                      UNAL,
  150            2    DUPS              UBIN (12)                     UNAL,
  151            2    C_NAME            CHAR (30)                     UNAL,
  152            2    PTR$              PTR                           ALIGNED,
  153            2    SUBSCHEMA_NAME    PTR                           ALIGNED,
  154            2    SCHEMA_QUAL       PTR                           ALIGNED;
  155      /*D*     NAME:     CURRENT_RECORD
  156                       THIS IS A UBIN 35 NUMBER THAT TELLS WHAT THE CURRENT
  157                    RECORD IN THE SUBSCHEMA FILE IS THAT THE SUBSCHEMA
  158                    TRANSLATER IS WORKING WITH.
  159      */
  160      DCL 1 AREA_HASH BASED ALIGNED,
  161            2    ALIAS_TYPE        UBIN (3)                      UNAL,
  162            2    TYPE              UBIN (3)                      UNAL,
  163            2    DUPS              UBIN (12)                     UNAL,
  164            2    C_NAME            CHAR (30)                     UNAL,
  165            2    PTR$              PTR                           ALIGNED,
  166            2    REF               UBIN (36)                     ALIGNED,
  167            2    SUB_OFF           UBIN (36)                     ALIGNED,
  168            2    DBK               UBIN (36)                     ALIGNED;
  169      DCL 1 SET_HASH BASED ALIGNED,
  170            2    ALIAS_TYPE        UBIN (3)                      UNAL,
  171            2    TYPE              UBIN (3)                      UNAL,
  172            2    DUPS              UBIN (12)                     UNAL,
  173            2    C_NAME            CHAR (30)                     UNAL,
  174            2    PTR$              PTR                           ALIGNED,
  175            2    REF               UBIN (36)                     ALIGNED,
  176            2    SUB_OFF           UBIN (36)                     ALIGNED,
  177            2    DBK               UBIN (36)                     ALIGNED,
  178            2    SO                                              UNAL,
  179              3    DBK            SBIN (19)                     UNAL,
  180              3    OFFSET         UBIN (17)                     UNAL,
  181            2    NUM_SM            UBIN (36)                     ALIGNED,
  182            2    SM_LIST(0:0)                                    UNAL,
  183              3    DBK            SBIN (19)                     UNAL,
  184              3    OFFSET         UBIN (17)                     UNAL;
  185      DCL 1 RECORD_HASH BASED ALIGNED,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       6    
  186            2    ALIAS_TYPE        UBIN (3)                      UNAL,
  187            2    TYPE              UBIN (3)                      UNAL,
  188            2    DUPS              UBIN (12)                     UNAL,
  189            2    C_NAME            CHAR (30)                     UNAL,
  190            2    PTR$              PTR                           ALIGNED,
  191            2    REF               UBIN (36)                     ALIGNED,
  192            2    SUB_OFF           UBIN (36)                     ALIGNED,
  193            2    DBK               UBIN (36)                     ALIGNED;
  194      DCL 1 FIELD_HASH BASED ALIGNED,
  195            2    ALIAS_TYPE        UBIN (3)                      UNAL,
  196            2    TYPE              UBIN (3)                      UNAL,
  197            2    DUPS              UBIN (12)                     UNAL,
  198            2    C_NAME            CHAR (30)                     UNAL,
  199            2    PTR$              PTR                           ALIGNED,
  200            2    REF               UBIN (36)                     ALIGNED,
  201            2    SUB_OFF           UBIN (36)                     ALIGNED,
  202            2    DBK               UBIN (36)                     ALIGNED,
  203            2    DBK_SN            UBIN (36)                     ALIGNED;
  204      DCL CURRENT_RECORD  UBIN (36) EXT;
  205      %SUB     #SUB_DEF = 0;
  206      %SUB     #ALIAS_DEF = 0;
  207      %SUB     #AREA_DEF = 1;
  208      %SUB     #SET_DEF = 2;
  209      %SUB     #KEY_DEF = 3;
  210      %SUB     #RECORD_DEF = 4;
  211      %SUB     #ITEM_DEF = 5;
  212      %SUB     #DOUBLE_WORD   = 16;
  213      %SUB     #WORD          = 8;
  214      %SUB     #BYTE          = 2;
  215      %SUB     #NIBLE         = 1;
  216      %SUB     #HALF_WORD     = 4;
  217      %MEND;
  218
  219
  220
  221      %MACRO PARSE_SUBS;
  222      /*
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       7    
  223                 THESE %SUBS ARE FOR THE PARSING OF THE SUBSCHEMA DDL.
  224      */
  225      %EQU     LOCK_INVOCKING = 0;
  226      %EQU     PRIVACY_KEY   = 1;
  227      %EQU     DIAG_KEY      = 2;
  228      %EQU     ALIASES       = 3;
  229      %EQU     AREA_ALIAS    = 4;
  230      %EQU     SET_ALIAS     = 5;
  231      %EQU     KEY_ALIAS     = 6;
  232      %EQU     RECORD_ALIAS  = 7;
  233      %EQU     ITEM_ALIAS    = 8;
  234      %EQU     SCHEMA_NAME_ALIAS = 9;
  235      %EQU     SCHEMA_QUAL_ALIAS = 10;
  236      %EQU     ALIAS_SS_NAME      = 11;
  237      %EQU     NUMBER_OCCURS = 12;
  238      %EQU     DBKEY         = 13;
  239      %EQU     FLOAT         = 14;
  240      %EQU     INTEGER       = 15;
  241      %EQU     CHARACTER     = 16;
  242      %EQU     VARYING       = 17;
  243      %EQU     ENDER         = 18;
  244      %EQU     ENTRY_KEY_NAME= 19;
  245      %EQU     ENTRY_SET_NAME= 20;
  246      %EQU     ENTRY_AREA_NAME = 21;
  247      %EQU     APL_RECORD_NAME = 22;
  248      %EQU     INV_SUBSCHEMA_NAME = 23;
  249      %EQU     INV_SCHEMA_NAME = 24;
  250      %EQU     DATA_NAME       = 25;
  251      %EQU     BOOL            = 26;
  252      %EQU     LOCK_STRING        = 27;
  253      %EQU     THE_END       = 28;
  254      %EQU     WITHIN_AREAS  = 29;
  255      %EQU     ITEM_END      = 30;
  256      %EQU     FLOAT_DOUBLE  = 31;
  257      %EQU     COMPLEX_S      = 32;
  258      %EQU     COMPLEX_D      = 33;
  259      %EQU     APL_ITEM       = 34;
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       8    
  260      %EQU     FORT_ITEM      = 35;
  261      %EQU     LEVEL_NUM      = 36;
  262      %EQU     COBOL_ITEM     = 37;
  263      %EQU     DISPLAY        = 38;
  264      %EQU     NUM            = 39;
  265      %EQU     COMP           = 40;
  266      %EQU     LEFT           = 41;
  267      %EQU     RIGHT          = 42;
  268      %EQU     LEADING        = 43;
  269      %EQU     TRAILING       = 44;
  270      %EQU     SEPARATE       = 45;
  271      %EQU     APL_ENTRY      = 46;
  272      %EQU     COBOL_ENTRY    = 47;
  273      %EQU     FORT_ENTRY     = 48;
  274      %EQU     PIC_STR        = 50;
  275      %EQU     SUBSCHEMA_QUAL = 51;
  276      %EQU     GROUP_ITEM     = 52;
  277      %EQU     END_NUMBER     = 53;
  278      %EQU     SAVE_CODE_DO_NOW = 54;
  279      %EQU     DO_A_ITEM_END  = 55;
  280      %EQU     ALIASES_FORT   = 56;
  281      %EQU     USAGE_IS       = 57;
  282      %EQU     TITLE_DIV      = 58;
  283      %EQU     MAPPING_DIV    = 59;
  284      %EQU     ALIAS_SEC      = 60;
  285      %EQU     STRUCTURE_DIV  = 61;
  286      %EQU     REALM_SEC      = 62;
  287      %EQU     SET_SEC        = 63;
  288      %EQU     KEY_SEC        = 64;
  289      %EQU     RECORD_SEC     = 65;
  290      %EQU     BASIC_ENTRY    = 66;
  291      %EQU     BASIC_ITEM     = 67;
  292      %MEND;
  293
  294
  295      %MACRO TEXT_LINE(STCLASS=EXT);
  296      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       9    
  297      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  298      %LSET INIT=CHARTEXT('INIT');
  299      %ELSE;
  300      %LSET INIT=CHARTEXT('/*');
  301      %ENDIF;
  302      /*D*
  303      NAME:    TEXT_LINE
  304      DESCRPITION:
  305               WORD0 - SIZE OF THE TEXT DESCRIPTER (105 BYTES)
  306               WORD1 - LINE NUMBER OF THE LINE BEING OUTPUT.
  307               WORD2 - COLUMN NUMBER OF THE TEXT.
  308                         COBOL = 7
  309                         APL   = 1
  310                         BASIC = 1
  311                         FORT  = 1
  312               WORD3 - TYPE OF DESCRIPTOR (TYPE = 6)
  313               WORD4 - INFOMATION TYPE (TYPE = 1)
  314               WORD5 - LENGTH OF TEXT (LENGTH = 81)
  315               WORD6 - 26 TEXT OF INPUT LINE
  316               WORD27- 28 '012000000000000000000000'O
  317               WORD29- NUMBER OF CURRENT BLOCK THAT THIS DESCRIPTION IS ON.
  318               WORD30- 31 '000000000000000000000000'O
  319      */
  320      DCL 1    TEXT_LINE STCLASS,
  321            2    SIZE              UBIN (36)      %INIT (105)%CHARTEXT('/**/'),
  322            2    LINE_NU           UBIN (36)      %INIT (0)%CHARTEXT('/**/'),
  323            2    COLUMN_NU         UBIN (36)      %INIT (0)%CHARTEXT('/**/'),
  324            2    TYPE              UBIN (36)      %INIT (6)%CHARTEXT('/**/'),
  325            2    INFO              UBIN (36)      %INIT (1)%CHARTEXT('/**/'),
  326            2    LENGTH            UBIN (36)      %INIT (81)%CHARTEXT('/**/'),
  327            2    TEXT              CHAR (80)      %INIT (' ')%CHARTEXT('/**/'),
  328            2    FILL1             BIT  (72)      %INIT ('012000000000000000000000'O)%CHARTEXT('/**/'),
  329            2    BLOCK_NU          UBIN (36)      %INIT (0)%CHARTEXT('/**/'),
  330            2    FILL2 (0:2)       UBIN (36)      %INIT (0*3)%CHARTEXT('/**/');
  331      %MEND;
  332
  333
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       10   
  334      %MACRO DESC_TYPE_9(STCLASS=EXT,NAME_MAIN=DESC_TYPE_9);
  335      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  336      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  337      %LSET INIT=CHARTEXT('INIT');
  338      %ELSE;
  339      %LSET INIT=CHARTEXT('/*');
  340      %ENDIF;
  341      /*D*
  342      NAME:    DESC_TYPE_9
  343      DESCRITION:
  344               THIS STRUCTURE DESCRIBES THE FORMAT OF THE TYPE 9 DESCRIPTORS
  345               IN THE SUBSCHEMA NAME SEGMENT OF THE SUBSCHEMA FILE
  346               FOR COBOL, APL, BASIC, AND FORTRAN SUBSCHEMAS.
  347
  348               WORD0  -  SIZE OF THE DESCRIPTOR BYTES.
  349               WORD1  -  LINE NUMBER
  350               WORD2  -  COLUMN NUMBER (COLUMN NU = 0)
  351               WORD3  -  TYPE OF DESCRIPTOR (TYPE = 9)
  352               WORD4-7   FILLER (0)
  353               WORD8  -  BITS
  354                    0:17 FILLER (0)
  355                    18   SET,REALM,FIELD IN DBKEY
  356                    19   REALM NAME
  357                    20   SET NAME
  358                    21   RECORD NAME
  359                    22   FIELD NAME
  360                    23   PRIVACY KEY
  361                    24   UWA (IF IT IS IN THE UWA = '1'B)
  362                    25   KEY NAME
  363                    26   FILLER (0)
  364                    27   DB KEY
  365                    28   FLOAT SINGLE WORD  (COMP-11)
  366                    29   FLOAT DOUBLE WORD  (COMP-12)
  367                    *W*
  368                         Bits 28-29 are just internal bits that are set
  369                       before the type 9 descriptor is written out.
  370                       When the type 9 is in the subschema file:
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       11   
  371                       float single = COMP5A and COMP2
  372                       float double = COMP5A and COMP3
  373                       So be careful how you use the bits and where you are.
  374
  375                    30:35 FILLER (0)
  376
  377               WORD9  -  FILLER (0)
  378               WORD10 -  LEVEL NUMBER
  379               WORD11-13 FILLER (0)
  380               WORD14 -  FIELD LENGTH
  381               WORD15 -  LTDP IF ITEM IS NUMERIC THEN LTDP IS NUMBER OF
  382                         PLACES LEFT OF DECIMAL POINT. IF NOT NUMERIC LTDP
  383                         HAS VALUE OF LENGTH.
  384               WORD16 -  RTDP IF ITEM IS NUMERIC THEN RTDP IS NUMBER OF
  385                         PLACES RIGHT OF DECIMAL POINT. IF NOT NUMERIC RTDP
  386                         IS ZERO.
  387               WORD17:18 BITS
  388                    0    FILLER (0)
  389                    1    FILLER (1)
  390                    2:5  FILLER (0)
  391                    6    ITEM IS NOT AN ITEM IN AN IDS II RECORD (LEVEL
  392                              77 DATA ITEMS SET-NAMES AND REALM NAMES)
  393                    7    ITEM HAS LEVEL 01
  394                    8    NON-ELEMENTARY ITEM
  395                    9    ELEMENTARY ITEM
  396                    10:16 FILLER (0)
  397                    17   NUMERIC
  398                    18   FILLER (0)
  399                    19   ALPHANUMERIC
  400                    20   FILLER (0)
  401                    21   ALPHABETIC
  402                    22   FILLER (0)
  403                    23   ITEM HAS PICTURE CLAUSE WHICH CONTAINS AN "P"
  404                    24   FILLER (0)
  405                    25   ITEM HAS PICTURE CLAUSE WHICH CONTAINS AN "S"
  406                    26   ITEM IS USAGE DISPLAY AND HAS A SEPARTE SIGN
  407                    27:34 (USAGE ONE AND ONLY ONE MUST BE TRUE)
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       12   
  408                    27   DISPLAY
  409                    28   COMP
  410                    29   COMP-1
  411                    30   COMP-2
  412                    31   COMP-3
  413                    32   FILLER (0)
  414                    33   COMP-6, OR DATA-BASE-KEY
  415                    34   FILLER (0)
  416
  417                    35   ITEM IS RIGHT JUSTIFIED
  418                    36   COMP-4
  419                    37   ITEM IS RIGHT SYNCHRONIZED
  420                    38:40 FILLER (0)
  421                    41   ITEM HAS AN OCCURS CLAUSE OR IS SUBJECT TO AN
  422                         ITEM WITH AN OCCURS CLAUSE.
  423                    42:48 FILLER (0)
  424                    49:51 TYPE OF SIGN:
  425                              001 TRAILING   OVERPUNCH
  426                              010 LEADING    OVERPUNCH
  427                              011 TRAILING   SEPARATE
  428                              100 TRAILING   SEPARATE
  429                    52   INTEGER
  430                    53:64 FILLER (0)
  431                    65   OCCURS
  432                    66   FILLER (0)
  433                    67   COMP5A
  434                    68:71 FILLER (0)
  435
  436
  437               WORD19 -  RPT-CODE-NUM
  438               WORD20 -  OFFSET
  439               WORD21:22 FILLER (0)
  440               WORD23 -  NAME SIZE
  441               WORD24:31 DATA ITEM NAME
  442
  443      */
  444      DCL 1 NAME_MAIN STCLASS,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       13   
  445            2 SIZE UBIN (36) %INIT (112)%CHARTEXT('/**/') UNAL, /*Token size*/
  446            2 LINE UBIN (36) %INIT (0)%CHARTEXT('/**/') UNAL, /*Line number*/
  447            2 COLUMN UBIN (36) %INIT (0)%CHARTEXT('/**/') UNAL, /*Column number*/
  448            2 TYPE UBIN (36) %INIT (9)%CHARTEXT('/**/') UNAL, /* 9                  */
  449            2 FILLA(0:3)           UBIN (36)      %INIT (0*4)%CHARTEXT('/**/')     UNAL,
  450            2 FILLB                BIT(18)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  451            2 SRF_DBK BIT (1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Set realm field dbkey*/
  452            2 RLM_NM BIT (1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Realm name*/
  453            2 SET_NM BIT (1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Set name*/
  454            2 REC_NM BIT (1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Record name*/
  455            2 FLD_NM BIT (1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Field name*/
  456            2 PRV_KEY BIT (1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Not used*/
  457            2 BUWA BIT (1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Has uwa addr*/
  458            2 KEY_NM               BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  459            2 FILLH                BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  460            2 F_DBK BIT (1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Db key*/
  461            2 FLOAT_SINGLE BIT (1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /* float word */
  462            2 FLOAT_DOUBLE BIT (1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /* float double word */
  463            2 COMPLEX              BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  464            2 D_COMPLEX            BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  465            2 LOGICAL              BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  466            2 FILLG                BIT(3)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  467            2 DEF_LINE UBIN (36) %INIT (0)%CHARTEXT('/**/') UNAL, /*Not used*/
  468            2 LEVEL UBIN (36) %INIT (0)%CHARTEXT('/**/') UNAL, /*Level num, realm/set = 77*/
  469            2 FILLC (0:2)          UBIN (36)      %INIT (0*3)%CHARTEXT('/**/')     UNAL,
  470            2 LENGTH UBIN (36) %INIT (0)%CHARTEXT('/**/') UNAL, /*Field length*/
  471            2 LTDP UBIN (36) %INIT (0)%CHARTEXT('/**/') UNAL, /*Places left*/
  472            2 RTDP UBIN (36) %INIT (0)%CHARTEXT('/**/') UNAL, /*Places right*/
  473                                              /*Template of data item properties*/
  474            2 *                    BIT (6)        %INIT ('010000'B)%CHARTEXT('/**/') UNAL,
  475            2 DATA_ITEM            BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  476            2 ITEM_LEVEL_01        BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  477            2 NON_ELEMENTARY       BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  478            2 ELEMENTARY           BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  479            2 *                    BIT (7)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  480            2 NUMERIC              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  481            2 *                    BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       14   
  482            2 ALPHANUM             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  483            2 *                    BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  484            2 ALPHABETIC           BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  485            2 *                    BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  486            2 PIC_HAS_P BIT(1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Scaling*/
  487            2 *                    BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  488            2 PIC_HAS_S BIT(1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Sign*/
  489            2 ITEM_SIGN            BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  490            2 DISPLAY BIT(1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Char string*/
  491            2 COMP BIT(1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Packed*/
  492            2 COMP_1 BIT(1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Fb (15)*/
  493            2 COMP_2 BIT(1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Fb (31)*/
  494            2 COMP_3 BIT(1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Packed*/
  495            2 *                    BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  496            2 DB_KEY BIT(1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Db key*/
  497            2 *                    BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  498            2 JUST_RIGHT BIT(1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Justified right*/
  499            2 COMP_4               BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  500            2 SYNC_RIGHT BIT(1) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Synchronized*/
  501            2 *                    BIT (3)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  502            2 ITEM_OCCURS          BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  503            2 *                    BIT (7)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  504            2 SIGN_TYP BIT(3) %INIT ('0'B)%CHARTEXT('/**/') UNAL, /*Lead/trail/sep/ovp*/
  505            2 INTEGER_TYPE         BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  506            2 *                    BIT (12)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  507            2 OCCURS_BIT           BIT (1 )       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  508            2 *                    BIT (1 )       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  509            2 COMP5A               BIT (1 )       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  510            2 *                    BIT (4 )       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  511            2 RPT_CODE_NUM         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  512            2 OFFSET UBIN (36) %INIT (0)%CHARTEXT('/**/') UNAL, /*Uwa offset, field*/
  513            2 FILLD (0:1)          UBIN (36)      %INIT (0*2)%CHARTEXT('/**/')     UNAL,
  514            2 NAME_SIZE UBIN (36) %INIT (0)%CHARTEXT('/**/') UNAL, /*Size of name*/
  515            2 NAME                 CHAR(30)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
  516            2 *                    CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL;
  517      %MEND;
  518
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       15   
  519
  520      %MACRO CONTROL_BLOCK(STCLASS=EXT,NAME=CONTROL);
  521      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  522      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  523      %LSET INIT=CHARTEXT('INIT');
  524      %ELSE;
  525      %LSET INIT=CHARTEXT('/*');
  526      %ENDIF;
  527      /*D*
  528      NAME:    CONTROL_BLOCK
  529      DESCRIPTION:
  530               THIS IS THE CONTROL BLOCK FOR ALL SUBSCHEMAS AND IS ALWAYS
  531               IN KEY '0.000' OF THE SUBSCHEMA FILE.
  532
  533               WORD0  -  VALIDATION STATUS (30 = VALIDATION WAS SUCCESSFUL)
  534                              (-1 = VALIDATION WAS UNSUCCESSFUL )
  535               WORD1  -  SUBSCHEMA TRANSLATION STATUS:
  536                         0 = SUCCESSFUL TRANSLATION
  537                         N = NUMBER OF SUBSCHEMA TRANSLATION ERRORS
  538               WORD2  -  NUM OF FIELD (SET OR KEY) REALATIONSHIPS.
  539               WORD3  -  TYPE OF RECORD (30)
  540               WORD4  -  UWA SIZE IN WORDS
  541               WORD5-7   USED BY COBOL, APL, BASIC, AND FORTRAN
  542               WORD8  -  # AREAS
  543               WORD9  -  # RECORD
  544               WORD10 -  # FIELDS
  545               WORD11 -  # SETS
  546               WORD12 -  # RECORDS_SETS_RELATIONS
  547               WORD13 -  # DB PARAMETERS
  548               WORD14 -  # OF LOCK DESCRIPTORS
  549               WORD15 -  # RECORDS_AREAS_RELATIONS  (THIS IS THE # OF TYPE 420 DECRIPTORS)
  550               WORD16:23 SCHEMA NAME (SUBSCHEMA SPELLING)
  551               WORD24:31 SUBSCHEMA NAME (SUBSCHEMA SPELLING)
  552               WORD32 -  TYPE2 (100)
  553               WORD33 -  SUBSCHEMA LANGUAGE
  554                         1 = COBOL - 74
  555                         2 = FORTRAN 77
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       16   
  556                         3 = APL
  557                         4 = BASIC
  558               WORD34 -  BITS
  559                         0:0 IF TRUE, DB3.0 OR LATER FILE FORMAT & DML
  560                         1:35 SUBSCHEMA OPTIONS: NOT DEFINED
  561               WORD35:37 PRIVACY KEY VALUE FOR COPY
  562               WORD38:40 PRIVACY KEY VALUE FOR DIAGNOSTICS
  563               WORD41 -  NEXT AVAILABLE UWA LOCATION.
  564               WORD42 -  NOT USED
  565               WORD43 -  UTS TIME OF SUBSCHEMA TRANSLATION
  566               WORD44 -  NOT USED
  567               WORD45 -  UTS TIME OF VALIDATION
  568               WORD46 -  USED BY EDBCS - RVI SITE
  569               WORD47 -  NUMBER OF SET SET DESCRIPTORS (TYPE 36)
  570               WORD48:52 AVAILABLE
  571               WORD53:55 PRIVACY LOCK FOR INVOKING
  572               WORD56:57 AVAILABLE
  573               WORD58 -  RECORD NUMBER OF NEXT AVAILABLE RECORD IN
  574                         SUBSCHEMA FILE.
  575               WORD59 -  RECORD NUMBER OF FIRST COMPILATION UNIT RECORD
  576               WORD60 -  RECORD NUMBER OF FIRST RECORD IN NAME
  577                         SEGMENT.
  578               WORD61 -  RECORD NUMBER OF FIRST RECORD IN SUBSCHEMA
  579                         DESCRIPTOR SEGMENT.
  580               WORD62 -  RECORD NUMBER OF FIRST RECORD IN NAME SEGMENT
  581                         EXTENSION SEGMENT (PART OF THE DESCRIPTOR SEGMENT).
  582               WORD63 -  BLOCK NUMBER OF FIRST BLOCK IN THE INTERACTIVE
  583                         SUBSET SEGMENT. (THIS IS THE PART THAT IDS GETS
  584                              THE SCHEMA SUBSET FROM ).
  585
  586
  587      */
  588      DCL 1 NAME STCLASS,
  589            2 VALIDATION_STATUS SBIN (36)         %INIT (-1)%CHARTEXT('/**/')      UNAL,
  590            2 TRANSLATION_STATUS   UBIN (36)      %INIT (1)%CHARTEXT('/**/')      UNAL,
  591            2 NUM_FIELD_SET        UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  592            2 TYPE30               UBIN (36)      %INIT (30)%CHARTEXT('/**/')      UNAL,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       17   
  593            2 UWA_SIZE             UBIN (36)      %INIT (48)%CHARTEXT('/**/')       UNAL,
  594            2 COBOL_USE (0:2)      UBIN (36)      %INIT (0*3)%CHARTEXT('/**/')     UNAL,
  595            2 NUM_AREAS            UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  596            2 NUM_RECORDS          UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  597            2 NUM_FIELDS           UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  598            2 NUM_SETS             UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  599            2 NUM_REC_SET_REL      UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  600            2 NUM_DB_PARAM         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  601            2 NUM_LOCKS            UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  602            2 NUM_REC_AREA_REL     UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  603            2 SCHEMA_NAME          CHAR(32)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
  604            2 SUBSCHEMA_NAME       CHAR(32)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
  605            2 TYPE100              UBIN (36)      %INIT (100)%CHARTEXT('/**/')       UNAL,
  606            2 LANGUAGE             UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  607            2 OPTIONS              BIT(36)        %INIT ('1'B)%CHARTEXT('/**/')    UNAL,
  608            2 COPY_PRIVACY_KEY     CHAR(12)       %INIT ('"NULL"')%CHARTEXT('/**/')     UNAL,
  609            2 DIAGNOSTIC_PRIVACY_K CHAR(12)       %INIT ('"NULL"')%CHARTEXT('/**/')     UNAL,
  610            2 NEXT_UWA_LOC         UBIN (36)      %INIT (48)%CHARTEXT('/**/')       UNAL,
  611            2 *                    UBIN (36)    %INIT (0)%CHARTEXT('/**/') UNAL,
  612            2 SUBSCHEMA_UTS        UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  613            2 *                    UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  614            2 VALIDATION_UTS       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  615            2 TRANS_UWA_SIZE       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  616            2 NUM_SET_SET_DESC     UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  617            2 FILL3(0:4)           UBIN (36)      %INIT (0*5)%CHARTEXT('/**/')     UNAL,
  618            2 INVOKE_PRIVACY_LOCK  CHAR(12)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
  619            2 LAST_FILLER_NUM   UBIN(18)  %INIT (0)%CHARTEXT('/**/')    UNAL,
  620            2 LAST_FILLER_LEN   UBIN(18)  %INIT (0)%CHARTEXT('/**/')    UNAL,
  621            2 BITS                ALIGNED,
  622              3    ALL_FIELDS     BIT (1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  623              3    *              BIT (35)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  624            2 NEXT_AVAILABLE_RECORD UBIN (36)     %INIT (0)%CHARTEXT('/**/')       UNAL,
  625            2 FIRST_CU_RECORD      UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  626            2 FIRST_NF_RECORD      UBIN (36)      %INIT (2)%CHARTEXT('/**/')       UNAL,
  627            2 FIRST_SDS_RECORD     UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  628            2 FIRST_NFE_RECORD     UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  629            2 FIRST_ISS_BLOCK      UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL;
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       18   
  630      %MEND;
  631
  632
  633      /*
  634            THESE DESCRIPTORS THAT ARE NEXT ALL BELONG TO THE DESCRIPTOR
  635          SEGMENT OF THE SUBSCHEMA.
  636      */
  637      %MACRO DESC_TYPE_100(STCLASS=EXT);
  638      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  639      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  640      %LSET INIT=CHARTEXT('INIT');
  641      %ELSE;
  642      %LSET INIT=CHARTEXT('/*');
  643      %ENDIF;
  644      /*D*
  645      NAME:    TYPE_100
  646      DESCRIPTION:
  647                 THIS STRUCTURE DESCRIBES THE FORMAT OF THE TYPE 100
  648               DESCRIPTORS IN THE DESCRIPTOR SEGMENT OF THE SUBSCHEMA.
  649               IT CONTAINS INFOMATION ABOUT THE TRANSLATION OT THE
  650               SUBSCHEMA.
  651               WORD0  -  TYPE (100)
  652               WORD1  -  SUBSCHEMA LANGUAGE:
  653                         1 - COBOL
  654                         2 - FORTRAN 77
  655                         3 - APL
  656                         4 - BASIC
  657               WORD2  -  SUBSCHEMA TRANSLATION OPTIONS
  658               WORD3:5   VALUE OF PRIVACY KEY FOR COPY.
  659               WORD6:8   VALUE OF PRIVACY KEY FOR DIAGNOSTICS.
  660               WORD9  -  NEXT UWA - THE NEXT AVAILABLE ZERO RELATIVE BYTE
  661                         ADDRESS IN THE UWA.
  662               WORD10 -  UNUSED
  663               WORD11 -  UTS TIME OF SUCCESSFUL SUBSCHEMA TRANSLATION.
  664               WORD12:31 AVAILABLE
  665      */
  666      DCL 1         TYPE_100 STCLASS,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       19   
  667            2    TYPE              UBIN (36)     %INIT (100)%CHARTEXT('/**/')      UNAL,
  668            2    LANG_TYPE         UBIN (36)     %INIT (0)%CHARTEXT('/**/')        UNAL,
  669            2    TRANS_OPTIONS     BIT  (36)     %INIT ('0'B)%CHARTEXT('/**/')     UNAL,
  670            2    COPY_PRIVACY      CHAR (12)     %INIT (' ')%CHARTEXT('/**/')      UNAL,
  671            2    DIAG_PRIVACY      CHAR (12)     %INIT (' ')%CHARTEXT('/**/')      UNAL,
  672            2    NEXT_UWA          UBIN (36)     %INIT (0)%CHARTEXT('/**/')        UNAL,
  673            2    *                 UBIN (36)     %INIT (0)%CHARTEXT('/**/')        UNAL,
  674            2    TRANS_UTS         UBIN (36)     %INIT (0)%CHARTEXT('/**/')        UNAL,
  675            2    *  (0:19)         UBIN (36)     %INIT (0*20)%CHARTEXT('/**/')     UNAL;
  676      %MEND;
  677
  678
  679      %MACRO DESC_TYPE_110 (STCLASS=EXT);
  680      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  681      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  682      %LSET INIT=CHARTEXT('INIT');
  683      %ELSE;
  684      %LSET INIT=CHARTEXT('/*');
  685      %ENDIF;
  686      /*D*
  687      NAME:    TYPE_110
  688      DESCRIPTION:
  689                 THIS STRUCTURE DESCRIBES THE DESCRIPTOR TYPE 110 OF
  690               THE DESCRIPTOR SEGMENT OF THE SUBSCHEMA.
  691               IT DESCRIBES THE PRIVACY LOCKS SET IN THE SUBSCHEMA AT
  692               TRANSLATION TIME.
  693
  694               WORD0  -  TYPE (110)
  695               WORD1  -  FILL (0)
  696               WORD2  -  LOCKS PERMISSIONS:
  697                    BITS:
  698                         0 -  L_INV
  699                         1 -  ALTERING
  700                         2 -  LOCKS
  701                         3 -  EXCLUSIVE RETRIVAL
  702                         4 -  EXCLUSIVE UPDATE
  703                         5 -  PROTECTED RETRIVAL
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       20   
  704                         6 -  PROTECTED UPDATE
  705                         7 -  CONCURRENT RETRIVAL
  706                         8 -  CONCURRENT UPDATE
  707                         9 -  GET
  708                         10-  MODIFY
  709                         11-  STORE
  710                         12-  ERASE
  711                         13-  CONNECT
  712                         14-  DISCONNECT
  713                         15-  FIND
  714                         16:35     AVAILABLE (0)
  715               WORD3:10  LOCK NAME
  716               WORD11:31 AVAILABLE
  717      */
  718
  719      DCL 1    TYPE_110 STCLASS,
  720            2 TYPE                 UBIN (36)      %INIT (110)%CHARTEXT('/**/')     UNAL,
  721            2 *                    UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  722            2 SS_LCKS                                            UNAL,
  723              3 L_INV             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  724              3 L_ALT             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  725              3 L_LOK             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  726            2 RLM_LCKS                                           UNAL,
  727              3 L_ER              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  728              3 L_EU              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  729              3 L_PR              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  730              3 L_PU              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  731              3 L_CR              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  732              3 L_CU              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  733            2 REC_LCKS                                           UNAL,
  734              3 L_GET             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  735              3 L_MOD             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  736              3 L_STOR            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  737              3 L_ERS             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  738              3 L_CONN            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  739              3 L_DISC            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  740              3 L_FIND            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       21   
  741            2 L_FILL               BIT(20)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  742            2 LOCK_NAME            CHAR (32)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
  743            2 * (0:20)             UBIN (36)      %INIT (0*21)%CHARTEXT('/**/')    UNAL;
  744      %MEND;
  745
  746
  747      %MACRO DESC_TYPE_200 (STCLASS=EXT);
  748      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  749      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  750      %LSET INIT=CHARTEXT('INIT');
  751      %ELSE;
  752      %LSET INIT=CHARTEXT('/*');
  753      %ENDIF;
  754      /*D*
  755      NAME:    TYPE_200
  756      DESCRIPTION:
  757                 THIS STRUCTURE DESCRIBES THE TYPE 200 DESCRIPTOR IN THE
  758               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
  759               THIS DESCRIPTOR DESCRIBES THE NAME OF THE AREA.
  760
  761               WORD0  -  TYPE (200)
  762               WORD1  -  REFERENCE LINE
  763               WORD2  -  THE SOURCE LINE OF THE SUBSCHEMA TEXT THAT THE
  764                         SUBSCHEMA NAME WAS DEFINED.
  765               WORD3:10  AREA NAME (LEFT-JUSTIFIED AND SPACE FILLED)
  766               WORD11:18 SUBSCHEMA AREA NAME: CHAR (30)
  767                         (LEFT-JUSTIFIED AND SPACE FILLED)
  768                         THE VALUE IS BLANK IF THIS AREAS NAME HAS
  769                         NOT BEEN ALIASED.
  770               WORD19 -  INTERNAL AREA NAME
  771               WORD20 -
  772                         BIT (0)   ALIASED
  773                         BIT (1)   CHECKSUMED
  774                         BIT (2)   ENCRYPTION
  775                         BIT (3)   COMMON JOURNAL
  776                         BIT (4)   TEMPLATE AREA
  777                         BIT (5)   TRANSIENT JOURNAL
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       22   
  778                         BIT (6:35)AVAILABLE
  779               WORD21:31 AVAILABLE
  780      */
  781      DCL 1         TYPE_200 STCLASS,
  782            2    TYPE              UBIN (36)      %INIT (200)%CHARTEXT('/**/')     UNAL,
  783            2    REF_LINE          UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  784            2    SOUR_LINE         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  785            2    AREA_NAME         CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
  786            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
  787            2    SUB_AREA_NAME     CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
  788            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
  789            2    ID_NUM            UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  790            2 AREA_BITS UNAL,
  791              3 ALIASED           BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  792              3 CHKSUM            BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  793              3 ENCRP             BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  794              3 CJRNL             BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  795              3 TMPLT             BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  796              3 TJRNL             BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  797              3 TEMPORARY         BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  798              3 *                 BIT (29)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  799            2    *  (0:10)         UBIN (36)      %INIT (0*11)%CHARTEXT('/**/')    UNAL;
  800      %MEND;
  801
  802
  803      %MACRO DESC_TYPE_210 (STCLASS=EXT);
  804      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  805      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  806      %LSET INIT=CHARTEXT('INIT');
  807      %ELSE;
  808      %LSET INIT=CHARTEXT('/*');
  809      %ENDIF;
  810      /*D*
  811      NAME:    TYPE_210
  812      DESCRIPTION:
  813                 THIS STRUCTURE DESCRIBES THE DESCRIPTOR TYPE 210 OF
  814               THE DESCRIPTOR SEGMENT OF THE SUBSCHEMA.
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       23   
  815               IT DESCRIBES THE PRIVACY LOCKS SET IN THE SUBSCHEMA AT
  816               TRANSLATION TIME FOR THE AREAS.
  817
  818               WORD0  -  TYPE (210)
  819               WORD1  -  FILL (0)
  820               WORD2  -  LOCKS PERMISSIONS:
  821                    BITS:
  822                         0:2  FILL (0)
  823                         3 -  EXCLUSIVE RETRIVAL
  824                         4 -  EXCLUSIVE UPDATE
  825                         5 -  PROTECTED RETRIVAL
  826                         6 -  PROTECTED UPDATE
  827                         7 -  CONCURRENT RETRIVAL
  828                         8 -  CONCURRENT UPDATE
  829                         9:35      AVAILABLE
  830               WORD3:10  LOCK NAME
  831               WORD11:31 AVAILABLE
  832      */
  833
  834      DCL 1    TYPE_210 STCLASS,
  835            2 TYPE                 UBIN (36)      %INIT (210)%CHARTEXT('/**/')     UNAL,
  836            2 *                    UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  837            2 SS_LCKS                                            UNAL,
  838              3 L_INV             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  839              3 L_ALT             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  840              3 L_LOK             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  841            2 RLM_LCKS                                           UNAL,
  842              3 L_ER              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  843              3 L_EU              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  844              3 L_PR              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  845              3 L_PU              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  846              3 L_CR              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  847              3 L_CU              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  848            2 REC_LCKS                                           UNAL,
  849              3 L_GET             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  850              3 L_MOD             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  851              3 L_STOR            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       24   
  852              3 L_ERS             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  853              3 L_CONN            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  854              3 L_DISC            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  855              3 L_FIND            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
  856            2 L_FILL               BIT(20)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  857            2 LOCK_NAME            CHAR (32)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
  858            2 * (0:20)             UBIN (36)      %INIT (0*21)%CHARTEXT('/**/')    UNAL;
  859      %MEND;
  860
  861
  862
  863
  864      %MACRO DESC_TYPE_300 (STCLASS=EXT);
  865      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  866      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  867      %LSET INIT=CHARTEXT('INIT');
  868      %ELSE;
  869      %LSET INIT=CHARTEXT('/*');
  870      %ENDIF;
  871      /*D*
  872      NAME:    TYPE_300
  873      DESCRIPTION:
  874                 THIS STRUCTURE DESCRIBES THE TYPE 300 DESCRIPTOR IN THE
  875               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
  876               THIS DESCRIPTOR DESCRIBES THE NAME OF THE SET.
  877
  878               WORD0  -  TYPE (300)
  879               WORD1  -  REFERENCE LINE
  880               WORD2  -  THE SOURCE LINE OF THE SUBSCHEMA TEXT THAT THE
  881                         SUBSCHEMA NAME WAS DEFINED.
  882               WORD3:10  SET NAME (LEFT-JUSTIFIED AND SPACE FILLED)
  883               WORD11:18 SUBSCHEMA SET NAME: CHAR (30)
  884                         (LEFT-JUSTIFIED AND SPACE FILLED)
  885                         THE VALUE IS BLANK IF THIS SETS NAME HAS
  886                         NOT BEEN ALIASED.
  887               WORD19 -  INTERNAL SET NAME
  888               WORD20 -  FLAGS GIVING A DESCRIPTION OF THE SET
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       25   
  889               WORD21:31 AVAILABLE
  890      */
  891      DCL 1         TYPE_300 STCLASS,
  892            2    TYPE              UBIN (36)      %INIT (300)%CHARTEXT('/**/')     UNAL,
  893            2    REF_LINE          UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  894            2    SOUR_LINE         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  895            2    SET_NAME          CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
  896            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
  897            2    SUB_SET_NAME      CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
  898            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
  899            2    ID_NUM            UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  900            2 INFO                 BIT(36)         %INIT ('040000000000'O)%CHARTEXT('/**/') UNAL,
  901            2 FLAGS REDEF INFO,
  902              3 TYPE BIT(12)      UNAL,       /*TYPE IS SET '0400'O                 */
  903              3 INFO_BITS UNAL,
  904                4 SA BIT(3)       UNAL,  /*Set mode. Values are:
  905                                            0 -chain
  906                                            1 - record array
  907                                            2 - pointer array
  908                                            3-7 - NU           */
  909                4 SB BIT(3)       UNAL,       /* NU                                 */
  910                4 SD BIT(4)       UNAL,    /* Set order. Values are:
  911                                            0 - first       1 - last
  912                                            2 - after       3 -  before
  913                                            4 - sorted  by defined keys
  914                                            5 - NU
  915                                            6 - sorted within record type
  916                                            7-15 - NU                */
  917                4 SK BIT(1)       UNAL,       /* 1 = not in su bschema*/
  918                4 SE BIT(1)       UNAL,       /* NU                                 */
  919                4 SF BIT(1)       UNAL,       /* 1 = recursive set (not implemented*/
  920                4 SG BIT(1)     UNAL,    /* 1 = alternate owner (not implemented)*/
  921                4 SH BIT(1)       UNAL,       /* 1 = glo bal set                    */
  922                4 SI BIT(3)       UNAL,  /* Set type. Values are:
  923                                          0 = user
  924                                          1 = calc
  925                                          2 = primary key
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       26   
  926                                          3 = secondary key
  927                                          4-7 =  NU              */
  928                4 SJ BIT(6)     UNAL,    /* # of characters in su bschema set name*/
  929            2    ALIASED           BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  930            2    SORT_KEY_ORDER     UBIN (2)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  931            2    *                 BIT (33)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  932            2    *  (0:9)          UBIN (36)      %INIT (0*10)%CHARTEXT('/**/')    UNAL;
  933      %MEND;
  934
  935
  936
  937
  938      %MACRO DESC_TYPE_350 (STCLASS=EXT);
  939      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  940      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  941      %LSET INIT=CHARTEXT('INIT');
  942      %ELSE;
  943      %LSET INIT=CHARTEXT('/*');
  944      %ENDIF;
  945      /*D*
  946      NAME:    TYPE_350
  947      DESCRIPTION:
  948                 THIS STRUCTURE DESCRIBES THE TYPE 350 DESCRIPTOR IN THE
  949               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
  950               THIS DESCRIPTOR DESCRIBES THE NAME OF THE KEY.
  951
  952               WORD0  -  TYPE (350)
  953               WORD1  -  REFERENCE LINE
  954               WORD2  -  THE SOURCE LINE OF THE SUBSCHEMA TEXT THAT THE
  955                         SUBSCHEMA NAME WAS DEFINED.
  956               WORD3:10  KEY NAME (LEFT-JUSTIFIED AND SPACE FILLED)
  957               WORD11:18 SUBSCHEMA KEY NAME: CHAR (30)
  958                         (LEFT-JUSTIFIED AND SPACE FILLED)
  959                         THE VALUE IS BLANK IF THIS KEYS NAME HAS
  960                         NOT BEEN ALIASED.
  961               WORD19 -  INTERNAL KEY NAME
  962               WORD20:31 AVAILABLE
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       27   
  963      */
  964      DCL 1         TYPE_350 STCLASS,
  965            2    TYPE              UBIN (36)      %INIT (350)%CHARTEXT('/**/')     UNAL,
  966            2    REF_LINE          UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  967            2    SOUR_LINE         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  968            2    KEY_NAME          CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
  969            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
  970            2    SUB_KEY_NAME      CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
  971            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
  972            2    ID_NUM            UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
  973            2    ALIASED           BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  974            2    *                 BIT (35)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
  975            2    *  (0:10)         UBIN (36)      %INIT (0*11)%CHARTEXT('/**/')    UNAL;
  976      %MEND;
  977
  978
  979
  980
  981      %MACRO DESC_TYPE_400 (STCLASS=EXT);
  982      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  983      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
  984      %LSET INIT=CHARTEXT('INIT');
  985      %ELSE;
  986      %LSET INIT=CHARTEXT('/*');
  987      %ENDIF;
  988      /*D*
  989      NAME:    TYPE_400
  990      DESCRIPTION:
  991                 THIS STRUCTURE DESCRIBES THE TYPE 400 DESCRIPTOR IN THE
  992               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
  993               THIS DESCRIPTOR DESCRIBES THE NAME OF THE RECORD.
  994
  995               WORD0  -  TYPE (400)
  996               WORD1  -  REFERENCE LINE
  997               WORD2  -  THE SOURCE LINE OF THE SUBSCHEMA TEXT THAT THE
  998                         SUBSCHEMA NAME WAS DEFINED.
  999               WORD3:10  RECORD NAME (LEFT-JUSTIFIED AND SPACE FILLED)
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       28   
 1000               WORD11:18 SUBSCHEMA RECORD NAME: CHAR (30)
 1001                         (LEFT-JUSTIFIED AND SPACE FILLED)
 1002                         THE VALUE IS BLANK IF THIS RECORDS NAME HAS
 1003                         NOT BEEN ALIASED.
 1004               WORD19 -  INTERNAL RECORD NAME
 1005               WORD20 -  FLAGS GIVING A DESCRIPTION OF THE RECORD
 1006               WORD21:31 AVAILABLE
 1007      */
 1008      DCL 1         TYPE_400 STCLASS,
 1009            2    TYPE              UBIN (36)      %INIT (400)%CHARTEXT('/**/')     UNAL,
 1010            2    REF_LINE          UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1011            2    SOUR_LINE         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1012            2    RECORD_NAME       CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1013            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1014            2    SUB_RECORD_NAME   CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1015            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1016            2    ID_NUM            UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1017            2  INFO                BIT(36)        %INIT('100000000000'O)%CHARTEXT('/**/') UNAL,
 1018            2 FLAGS REDEF INFO,
 1019              3 TYPE          BIT(12) UNAL,   /* TYPE IS RECORD '1000'O             */
 1020              3 INFO_BITS UNAL,
 1021                4 RA          BIT(3) UNAL,    /*  NU                                */
 1022                4 RB          BIT(3) UNAL,    /* primary storage mode*/
 1023                4 RD          BIT(1) UNAL,    /* 1 = delete not allowed*/
 1024                4 RE          BIT(1) UNAL,    /* 1 = store not allowed*/
 1025                4 RF          BIT(1) UNAL,    /* 1 = record not in subschema*/
 1026                4 RG          BIT(1) UNAL,    /* 1 = varible length*/
 1027                4 RH          BIT(1) UNAL,    /* 1 = multi-area record*/
 1028                4 RI          BIT(1) UNAL,    /* 1 = rec has alternate keys*/
 1029                4 RL          BIT(1) UNAL,    /* 1 = erase not allowed*/
 1030                4 RM BIT(1) UNAL,   /* 1 = don't invoke db proc for area selection*/
 1031                4 RN          BIT(1) UNAL,    /* 1 = PA record                      */
 1032                4 RJ          BIT(3) UNAL,    /* NU                                 */
 1033              3 RK   BIT(6) UNAL,   /* # of chararacter in subschema record name*/
 1034            2    ALIASED           BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1035            2    *                 BIT (35)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1036            2    PRIMARY_FIELD_NUM UBIN (36)      %INIT (0) %CHARTEXT('/**/')      UNAL,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       29   
 1037            2    LAST_FILLER_TEXT  CHAR (8)       %INIT (' ') %CHARTEXT('/**/')    UNAL,
 1038            2    LAST_FILLER_LEN   UBIN (36)      %INIT (0  ) %CHARTEXT('/**/')    UNAL,
 1039            2    *  (0:5)          UBIN (36)      %INIT (0*6 )%CHARTEXT('/**/')    UNAL;
 1040      %MEND;
 1041
 1042
 1043
 1044
 1045      %MACRO DESC_TYPE_410 (STCLASS=EXT);
 1046      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1047      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1048      %LSET INIT=CHARTEXT('INIT');
 1049      %ELSE;
 1050      %LSET INIT=CHARTEXT('/*');
 1051      %ENDIF;
 1052      /*D*
 1053      NAME:    TYPE_410
 1054      DESCRIPTION:
 1055                 THIS STRUCTURE DESCRIBES THE DESCRIPTOR TYPE 410 OF
 1056               THE DESCRIPTOR SEGMENT OF THE SUBSCHEMA.
 1057               IT DESCRIBES THE PRIVACY LOCKS SET IN THE SUBSCHEMA AT
 1058               TRANSLATION TIME FOR THE RECORD OF THIS NAME.
 1059
 1060               WORD0  -  TYPE (410)
 1061               WORD1  -  FILL (0)
 1062               WORD2  -  LOCKS PERMISSIONS:
 1063                    BITS:
 1064                         0:8  FILL (0)
 1065                         9 -  GET
 1066                         10-  MODIFY
 1067                         11-  STORE
 1068                         12-  ERASE
 1069                         13-  CONNECT
 1070                         14-  DISCONNECT
 1071                         15-  FIND
 1072                         16:35     AVAILABLE (0)
 1073               WORD3:10  LOCK NAME
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       30   
 1074               WORD11:31 AVAILABLE
 1075      */
 1076
 1077      DCL 1    TYPE_410 STCLASS,
 1078            2 TYPE                 UBIN (36)      %INIT (410)%CHARTEXT('/**/')     UNAL,
 1079            2 *                    UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1080            2 SS_LCKS                                            UNAL,
 1081              3 L_INV             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1082              3 L_ALT             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1083              3 L_LOK             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1084            2 RLM_LCKS                                           UNAL,
 1085              3 L_ER              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1086              3 L_EU              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1087              3 L_PR              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1088              3 L_PU              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1089              3 L_CR              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1090              3 L_CU              BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1091            2 REC_LCKS                                           UNAL,
 1092              3 L_GET             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1093              3 L_MOD             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1094              3 L_STOR            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1095              3 L_ERS             BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1096              3 L_CONN            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1097              3 L_DISC            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1098              3 L_FIND            BIT(1)         %INIT ('0'B)%CHARTEXT('/**/')    UNAL ,
 1099            2 L_FILL               BIT(20)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1100            2 LOCK_NAME            CHAR (32)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1101            2 * (0:20)             UBIN (36)      %INIT (0*21)%CHARTEXT('/**/')    UNAL;
 1102      %MEND;
 1103
 1104
 1105
 1106
 1107      %MACRO DESC_TYPE_420 (STCLASS=EXT);
 1108      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1109      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1110      %LSET INIT=CHARTEXT('INIT');
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       31   
 1111      %ELSE;
 1112      %LSET INIT=CHARTEXT('/*');
 1113      %ENDIF;
 1114      /*D*
 1115      NAME:    TYPE_420
 1116      DESCRIPTION:
 1117                 THIS STRUCTURE DESCRIBES THE TYPE 420 DESCRIPTOR IN THE
 1118               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
 1119               THIS DESCRIPTOR DESCRIBES THE AREAS THAT THE RECORD BEFORE
 1120               BELONGS TOO.
 1121               WORD0  -  TYPE (420)
 1122               WORD1  -  FILL (0)
 1123               WORD2  -  THE SOURCE LINE OF THE SUBSCHEMA TEXT THAT THE
 1124                         SUBSCHEMA NAME WAS DEFINED.
 1125               WORD3:10  SPACES
 1126               WORD11:18 SUBSCHEMA AREA NAME: CHAR (30)
 1127                         (LEFT-JUSTIFIED AND SPACE FILLED)
 1128               WORD19:31 AVAILABLE
 1129      */
 1130      DCL 1         TYPE_420 STCLASS,
 1131            2    TYPE              UBIN (36)      %INIT (420)%CHARTEXT('/**/')     UNAL,
 1132            2    *                 UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1133            2    SOUR_LINE         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1134            2    AREA_NAME         CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1135            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1136            2    SUB_AREA_NAME     CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1137            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1138            2    *  (0:12)         UBIN (36)      %INIT (0*13)%CHARTEXT('/**/')    UNAL;
 1139      %MEND;
 1140
 1141
 1142
 1143      %MACRO DESC_TYPE_430 (STCLASS=EXT,NAME=TYPE_430);
 1144      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1145      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1146      %LSET INIT=CHARTEXT('INIT');
 1147      %ELSE;
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       32   
 1148      %LSET INIT=CHARTEXT('/*');
 1149      %ENDIF;
 1150      /*D*
 1151      NAME:    TYPE_430
 1152      DESCRIPTION:
 1153                 THIS STRUCTURE DESCRIBES THE TYPE 430 DESCRIPTOR IN THE
 1154               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
 1155               THIS DESCRIPTOR DESCRIBES THE FIELDS THAT THE RECORD BEFORE
 1156               BELONGS TOO.
 1157               WORD0  -  TYPE (430)
 1158               WORD1  -  REFERENCE LINE (SEE TYPE 90 MODIFICATION DESC)
 1159                         IF REFERENCE = 0 THEN DATA_BASE_PARAMETER.
 1160               WORD2  -  THE SOURCE LINE OF THE SUBSCHEMA TEXT THAT THE
 1161                         SUBSCHEMA NAME WAS DEFINED.
 1162               WORD3:10  FIELD NAME (LEFT-JUSTIFIED AND BLANK FILL)
 1163               WORD11:18 SUBSCHEMA FIELD NAME (BLANK IF NO ALIAS).
 1164                         (LEFT-JUSTIFIED AND SPACE FILLED)
 1165               WORD19 -  OFFSET INTO UWA FOR THIS FIELD.
 1166               WORD20 -  DATA TYPE
 1167               WORD21 -  LENGTH OF THE FIELD
 1168               WORD22 -  SCALE OF THE  FIELD
 1169               WORD23 -  LEVEL OF THE  FIELD
 1170               WORD24 -  BIT 0 SET IF ELEMENTARY FIELD,
 1171                         BIT 1 SET IF ALIASED
 1172                         BIT 2 SET IF
 1173                         BIT 3 SET IF SCHEMA DATA TYPE IS DBKEY
 1174                         BITS 2-35 AVAILABLE.
 1175               WORD25 -  EIS DESCRIPTOR FOR THE  FIELD
 1176               WORD26 -  FLAGS GIVING A DECRIPTION OF THE FIELD
 1177               WORD27:31 AVAILABLE
 1178      */
 1179      /*
 1180           DATA_TYPE in the TYPE_430 descrpitor is:
 1181           comp    -  signed = 4 unsigned = 3
 1182           comp 4  -  signed = 4 unsigned = 3
 1183           comp 3  -  signed = 5 unsigned = 3
 1184           character - = 0
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       33   
 1185           display numeric - unsigned = 6
 1186                               signed sign_type = '001'b = 10
 1187                               signed sign_type = '010'b = 9
 1188                               signed sign_type = '011'b = 8
 1189                               signed sign_type = 7 ('100'b ????)
 1190           DB-key    - = 1
 1191           comp 6    - = 2 (integer!!!!)
 1192           comp 1    - = 11
 1193           comp 2    - = 12
 1194           float single = 13
 1195           float double = 14
 1196           complex single = 15
 1197           complex double = 16
 1198           logical        = 17
 1199
 1200      */
 1201
 1202      DCL 1         NAME     STCLASS,
 1203            2    TYPE              UBIN (36)      %INIT (430)%CHARTEXT('/**/')     UNAL,
 1204            2    REF_LINE          UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1205            2    SOUR_LINE         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1206            2    FIELD_NAME        CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1207            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1208            2    SUB_FIELD_NAME    CHAR (30)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1209            2    *                 CHAR (2)       %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1210            2    OFFSET            UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1211            2    DATA_TYPE         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1212            2    LEN_FIELD         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1213            2    SCALE_FIELD       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1214            2    LEVEL_FIELD       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1215            2    ELEMENTARY        BIT  (1)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1216            2    ALIASED           BIT  (1)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1217            2    PRIMARY_CON_FIELD BIT  (1)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1218            2    SCHEMA_DBKEY      BIT  (1)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1219            2    *                 BIT  (32)      %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1220            2 EIS,
 1221              3 ADDER         BIT (18)  %INIT('0'B)%CHARTEXT('/**/')   UNAL,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       34   
 1222              3 ADDER_U       REDEF ADDER    UBIN (18)               UNAL,
 1223              3 ADDER_C       REDEF ADDER    UNAL,
 1224                4 REG        UBIN (3)                                UNAL,
 1225                4 OFFSET     UBIN (15)                               UNAL,
 1226              3 EIS_BITS      BIT (18)  %INIT('0'B)%CHARTEXT('/**/')   UNAL,
 1227              3 EIS_TN_S    REDEF EIS_BITS,
 1228                4 *         BIT (3) UNAL,
 1229                4 TN_S      BIT (3) UNAL,
 1230                4 *         BIT (12)UNAL,
 1231              3 NDSC REDEF EIS_BITS,
 1232                4 CN UBIN(3) UNAL, /*Original character # within data word. Code depends on data type:
 1233                Data type          character          legal code
 1234                 9 bit                  0                 000
 1235                                        1                 010
 1236                                        2                 100
 1237                                        3                 110
 1238
 1239                 4 bit                  0                 000
 1240                                        1                 001
 1241                                        2                 010
 1242                                        3                 011
 1243                                        4                 100
 1244                                        5                 101
 1245                                        6                 110
 1246                                        7                 111         */
 1247                4 TN BIT(1) UNAL, /*Tells what is the bit type . Values are:
 1248                           0 = 4 bit
 1249                           1 = 9 bit               */
 1250                4 S BIT(2) UNAL, /*Tells  the sign and decimal type. Values are:
 1251                           00 = Leading sign,floating point
 1252                           01 = Leading sign,scaled
 1253                           10 = Trailing sign,scaled
 1254                           11 = No sign                 */
 1255                4 SF SBIN(6) UNAL, /*Scaling factor: a 2's complement binary # that gives the
 1256                 scale point for scaled decimal integers. If s = 00 this
 1257                 field is ignoredExample:
 1258                 if data=12345,s ~= 00 and sf=-3 then value is 12.345         */
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       35   
 1259                4 N UBIN(6) UNAL, /* The  number of 9 or 4 bit characters in the data item*/
 1260              3 ADSC REDEF EIS_BITS,
 1261                4 CN                  UBIN(3) UNAL,
 1262                4 TA BIT(2) UNAL, /*Code type for alphanumeric characters. Values are:
 1263                           00 = 9 bit
 1264                           01 = 6 bit
 1265                           10 = 4 bit
 1266                           11 = illegal          */
 1267                4 * BIT(1) UNAL,
 1268                4 N UBIN(12) UNAL,            /*Size*/
 1269            2 INFO       BIT(36)        %INIT ('002000000000'O)%CHARTEXT('/**/') UNAL,
 1270            2 FLAGS REDEF INFO,
 1271              3 TYPE BIT(12) UNAL,       /* Type is '0020'o internal type for  field*/
 1272          /*D* NAME:     TYPE
 1273               if Type = '7776'O no dml calls allowed and field is errored
 1274                    or in a group item.
 1275               if Type = '7777'O no dml calls allowed and field is not
 1276                    present in the schema in any form.
 1277          */
 1278              3 FA BIT(6)            UNAL,    /*index into encode vector*/
 1279              3 FB BIT(1)           UNAL,     /* 1 = encode before comparing*/
 1280              3 FC BIT(1)           UNAL,     /* 1 = encode before calc*/
 1281              3 FE BIT(3)           UNAL,  /* compare code. Values are:
 1282                                            0 = alphanumeric
 1283                                            1 = numeric
 1284                                            2 = binary
 1285                                            3 = BCD
 1286                                            4 = bit
 1287                                            5 = float binary
 1288                                            6 -7 NU             */
 1289              3 FF BIT(1)           UNAL,     /* 1 =  varible length field          */
 1290              3 FG BIT(1)           UNAL,     /* 1 = this is a synonym field*/
 1291              3 FH BIT(3)           UNAL, /* usage code
 1292                                           0 = data item
 1293                                           1 = data base parameter
 1294                                           2 = loc mode - direct field
 1295                                           3 =  area-ID field
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       36   
 1296                                           4 = calc key synonym field
 1297                                           5 = scan key synonym field
 1298                                           6-7 = NU                     */
 1299              3 FI BIT(1)           UNAL,     /* 1 = this field not modifiable*/
 1300              3 FJ BIT(1)           UNAL,     /* 1 = this field not in subschema*/
 1301              3 FL BIT(6)           UNAL,     /* index into decode vector*/
 1302            2    DBK_SN            UBIN (36)      %INIT (0)%CHARTEXT('/**/')     UNAL,
 1303            2    *  (0:3)          UBIN (36)      %INIT (0*4)%CHARTEXT('/**/')     UNAL;
 1304      %MEND;
 1305
 1306
 1307
 1308
 1309      %MACRO DESC_TYPE_30 (STCLASS=EXT);
 1310      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1311      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1312      %LSET INIT=CHARTEXT('INIT');
 1313      %ELSE;
 1314      %LSET INIT=CHARTEXT('/*');
 1315      %ENDIF;
 1316      /*D*
 1317      NAME:    TYPE_30
 1318      DESCRIPTION:
 1319                 THIS STRUCTURE DESCRIBES THE TYPE 30 DESCRIPTOR IN THE
 1320               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
 1321               THIS DESCRIPTOR DESCRIBES THE ENVIRONMENT OF THE
 1322               SUBSCHEMA.
 1323               WORD0  -  TYPE (30)
 1324               WORD1:2   FILL (0)
 1325               WORD3  -  TYPE AGAIN (30)
 1326               WORD4  -  UWA SIZE (IN WORDS)
 1327               WORD5:31  AVAILABLE
 1328      */
 1329      DCL 1         TYPE_30 STCLASS,
 1330            2    TYPE              UBIN (36)      %INIT (30)%CHARTEXT('/**/')      UNAL,
 1331            2    *                 UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1332            2    TYPE_AGAIN        UBIN (36)      %INIT (30)%CHARTEXT('/**/')      UNAL,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       37   
 1333            2    UWA_SIZE          UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1334            2    *  (0:27)         UBIN (36)      %INIT (0*28)%CHARTEXT('/**/')    UNAL;
 1335      %MEND;
 1336
 1337
 1338
 1339
 1340      %MACRO DESC_TYPE_31 (STCLASS=EXT);
 1341      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1342      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1343      %LSET INIT=CHARTEXT('INIT');
 1344      %ELSE;
 1345      %LSET INIT=CHARTEXT('/*');
 1346      %ENDIF;
 1347      /*D*
 1348      NAME:    TYPE_31
 1349      DESCRIPTION:
 1350                 THIS STRUCTURE DESCRIBES THE TYPE 31 DESCRIPTOR IN THE
 1351               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
 1352               THIS DESCRIPTOR DESCRIBES THE RECORD AREA RELATIONSHIP
 1353               FOR THIS SUBSCHEMA (AND SCHEMA).
 1354               WORD0  -  TYPE (31)
 1355               WORD1  -  RECORD NAME (THE UWA RELATIVE BYTE OFFSET ADDRESS
 1356                         OF THE DATA BASE RECORD AS ASSIGNED BY THE
 1357                         SUBSCHEMA TRANSLATER ).
 1358               WORD2  -  AREA NAME (THE SUBSCHEMA ASSIGNED INTERNAL AREA
 1359                         NAME FOR AN AREA IN WHICH THIS RECORD MAY BE
 1360                         LOCATED).
 1361               WORD3  -  TYPE (31)
 1362               WORD4  -  BIT (0) - TRUE IF TEMPORARY AREA.
 1363                         BIT(1:35) FILLER.
 1364               WORD5:31  AVAILABLE
 1365      */
 1366      DCL 1         TYPE_31 STCLASS,
 1367            2    TYPE              UBIN (36)      %INIT (31)%CHARTEXT('/**/')      UNAL,
 1368            2    RECORD_NAME       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1369            2    AREA_NAME         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       38   
 1370            2    TYPE_AGAIN        UBIN (36)      %INIT (31)%CHARTEXT('/**/')      UNAL,
 1371            2    TEMPORARY         BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1372            2    *                 BIT (35)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1373            2    SUB_RECORD_NM     CHAR(32)       %INIT(' ')%CHARTEXT('/**/')     UNAL,
 1374            2    SUB_AREA_NM       CHAR(32)      %INIT(' ')%CHARTEXT('/**/')      UNAL,
 1375            2 LO_DBK_RNG UBIN(36) UNAL, /*Low  dbk rang of the record for this area */
 1376            2 HI_DBK_RNG UBIN(36) UNAL, /* high dbk range for the record within this area */
 1377            2 FLAGS,
 1378              3 FULL_RNG BIT(1) UNAL, /*Tells if the record range can grow for template areas */
 1379              3 *             BIT(35)  UNAL,
 1380            2    *  (0:7)         UBIN (36)      %INIT (0*8)%CHARTEXT('/**/')    UNAL;
 1381      %MEND;
 1382
 1383
 1384
 1385
 1386      %MACRO DESC_TYPE_32 (STCLASS=EXT);
 1387      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1388      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1389      %LSET INIT=CHARTEXT('INIT');
 1390      %ELSE;
 1391      %LSET INIT=CHARTEXT('/*');
 1392      %ENDIF;
 1393      /*D*
 1394      NAME:    TYPE_32
 1395      DESCRIPTION:
 1396                 THIS STRUCTURE DESCRIBES THE TYPE 32 DESCRIPTOR IN THE
 1397               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
 1398               THIS DESCRIPTOR DESCRIBES THE RECORD SET RELATIONSHIP
 1399               FOR THIS SUBSCHEMA (AND SCHEMA).
 1400               WORD0  -  TYPE (32)
 1401               WORD1  -  RECORD NAME (THE UWA RELATIVE BYTE OFFSET ADDRESS
 1402                         OF THE DATA BASE RECORD AS ASSIGNED BY THE
 1403                         SUBSCHEMA TRANSLATER ).
 1404               WORD2  -  SET NAME (THE SUBSCHEMA ASSIGNED INTERNAL SET
 1405                         NAME FOR AN SET IN WHICH THIS RECORD MAY BE
 1406                         ASSOCATED).
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       39   
 1407               WORD3  -  TYPE (32)
 1408               WORD4  -  BIT (0) - TRUE IF RECORD IS OWNER OF THE SET.
 1409                         BIT (1) - TRUE IF RECORD IS MEMBER OF THE SET.
 1410                         BIT (2) - TRUE IF RECORD IS MEMBER OF THE SET
 1411                                        AND A OPTIONAL MEMBER.
 1412                         BIT (3) - TRUE IF RECORD IS A MEMBER OF THE SET
 1413                                        AND A MANUAL MEMBER.
 1414                         BIT (4) - MODIFY ONLY NOT PERMITTED.
 1415                         BIT (5:35) - FILL (0).
 1416               WORD5:32  AVAILABLE
 1417      */
 1418      DCL 1         TYPE_32 STCLASS,
 1419            2    TYPE              UBIN (36)      %INIT (32)%CHARTEXT('/**/')      UNAL,
 1420            2    RECORD_NAME       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1421            2    SET_NAME          UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1422            2    TYPE_AGAIN        UBIN (36)      %INIT (32)%CHARTEXT('/**/')      UNAL,
 1423            2    OWNER             BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1424            2    MEMBER            BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1425            2    OPTIONAL_MEM      BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1426            2    MANUAL_MEM        BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1427            2    MODIFY_NOT        BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1428            2    *                 BIT (31)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1429            2    SUB_RECORD_NM     CHAR(32)       %INIT(' ')%CHARTEXT('/**/')     UNAL,
 1430            2    SUB_SET_NM        CHAR(32)      %INIT(' ')%CHARTEXT('/**/')      UNAL,
 1431            2 DEF,
 1432              3 TYPE BIT(12) UNAL,
 1433                                         /* set owner element (so) = octal 0100     */
 1434                                         /* set member element (sm) = octal 0040    */
 1435              3 VIA BIT (1) UNAL,             /*  1 = this is loc mode set          */
 1436              3 * UBIN (2) UNAL,
 1437              3 MEMT UBIN (3) UNAL,           /*  Member type mask  ( sm only )     */
 1438                                              /* 0 = member of chain                */
 1439                                              /* 1 = pa member                      */
 1440                                              /* 2 = pa record                      */
 1441              3 DORD UBIN (2) UNAL,           /*  Duplicate order                   */
 1442              3 OSM BIT (1) UNAL,             /*  1 = optional set member           */
 1443              3 MSM BIT (1) UNAL,             /*  1 = manual set member             */
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       40   
 1444              3 SMOD BIT (1) UNAL,       /* 1 = this set membership cannot be mod.  */
 1445              3 DUPP BIT (1) UNAL,            /* 1 = dup keys present               */
 1446              3 RNGK BIT (1) UNAL,
 1447              3 DUPC BIT (1) UNAL,            /* 1 = dups not allowed for calc      */
 1448              3 * UBIN (10) UNAL,
 1449            2 NUM_CON_FIELDS       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1450            2    *  (0:9)          UBIN (36)      %INIT (0*10)%CHARTEXT('/**/')    UNAL;
 1451      %MEND;
 1452
 1453
 1454
 1455
 1456      %MACRO DESC_TYPE_33 (STCLASS=EXT);
 1457      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1458      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1459      %LSET INIT=CHARTEXT('INIT');
 1460      %ELSE;
 1461      %LSET INIT=CHARTEXT('/*');
 1462      %ENDIF;
 1463      /*D*
 1464      NAME:    TYPE_33
 1465      DESCRIPTION:
 1466                 THIS STRUCTURE DESCRIBES THE TYPE 33 DESCRIPTOR IN THE
 1467               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
 1468               THIS DESCRIPTOR DESCRIBES THE RECORD KEY RELATIONSHIP
 1469               FOR THIS SUBSCHEMA (AND SCHEMA).
 1470               WORD0  -  TYPE (33)
 1471               WORD1  -  RECORD NAME (THE UWA RELATIVE BYTE OFFSET ADDRESS
 1472                         OF THE DATA BASE RECORD AS ASSIGNED BY THE
 1473                         SUBSCHEMA TRANSLATER ).
 1474               WORD2  -  KEY NAME (THE SUBSCHEMA ASSIGGNED INTERNAL KEY
 1475                         NAME FOR AN KEY IN WHICH THIS RECORD MAY BE
 1476                         ASSOCATED).
 1477               WORD3  -  TYPE (33)
 1478               WORD4 -   AVAILABLE
 1479               WORD5:12  RECORD NAME.
 1480               WORD13:20 KEY NAME.
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       41   
 1481               WORD21-   NUMBER OF CONTROL FIELDS.
 1482               WORD22-
 1483                         BIT (1)   '1'B = PRIMARY
 1484                                   '0'B = SECONDARY
 1485                         BITS(35)  AVAILABLE
 1486               WORD23:31 AVAILABLE
 1487      */
 1488      DCL 1         TYPE_33 STCLASS,
 1489            2    TYPE              UBIN (36)      %INIT (33)%CHARTEXT('/**/')      UNAL,
 1490            2    RECORD_NAME       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1491            2    KEY_NAME          UBIN (36)      %INIT (0 )%CHARTEXT('/**/')      UNAL,
 1492            2    TYPE_AGAIN        UBIN (36)      %INIT (33)%CHARTEXT('/**/')      UNAL,
 1493            2    *                 UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1494            2    SUB_RECORD_NM     CHAR(32)       %INIT(' ')%CHARTEXT('/**/')     UNAL,
 1495            2    SUB_KEY_NM        CHAR(32)      %INIT(' ')%CHARTEXT('/**/')      UNAL,
 1496            2    NUM_CON_FIELDS    UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1497            2     PRIM_OR_SEC      BIT (1)        %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1498            2     *                BIT (35)       %INIT ('0'B)%CHARTEXT('/**/')    UNAL,
 1499            2    *  (0:9)          UBIN (36)      %INIT (0*10)%CHARTEXT('/**/')    UNAL;
 1500      %MEND;
 1501
 1502
 1503      %MACRO DESC_TYPE_34 (STCLASS=EXT);
 1504      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1505      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1506      %LSET INIT=CHARTEXT('INIT');
 1507      %ELSE;
 1508      %LSET INIT=CHARTEXT('/*');
 1509      %ENDIF;
 1510      /*D*
 1511      NAME:    TYPE_34
 1512      DESCRIPTION:
 1513                 THIS STRUCTURE DESCRIBES THE TYPE 34 DESCRIPTOR IN THE
 1514               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
 1515               THIS DESCRIPTOR DESCRIBES THE FIELD SET RELATIONSHIP
 1516               FOR THIS SUBSCHEMA (AND SCHEMA).
 1517               WORD0  -  TYPE (34)
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       42   
 1518               WORD1  -  FIELD NAME (THE UWA RELATIVE BYTE OFFSET ADDRESS
 1519                         OF THE DATA BASE RECORD AS ASSIGNED BY THE
 1520                         SUBSCHEMA TRANSLATER ).
 1521               WORD2  -  SET NAME (THE SUBSCHEMA ASSIGNED INTERNAL SET
 1522                         NAME FOR AN SET IN WHICH THIS RECORD MAY BE
 1523                         ASSOCATED).
 1524               WORD3  -  TYPE (34)
 1525               WORD4 -   BIT (1) - Ascending or desending
 1526                                  '0'B = Ascending
 1527                                  '1'B = decending
 1528                         BIT (2) - Then throw field
 1529                                   '1'B then the field descriptor is for the
 1530                                        then throw clause of the set not a
 1531                                        sort field.
 1532                         BIT(3-36) - NO USED.
 1533               WORD5-12  SUBSCHEMA FIELD NAME.
 1534               WORD13-20 SUBSCHEMA SET NAME.
 1535               WORD21-28 SUBSCHEMA RECORD NAME.
 1536               WORD29-31 NOT USED.
 1537      */
 1538      DCL 1         TYPE_34 STCLASS,
 1539            2    TYPE              UBIN (36)      %INIT (34)%CHARTEXT('/**/')      UNAL,
 1540            2    FIELD_NAME       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1541            2    SET_NAME          UBIN (36)      %INIT (0 )%CHARTEXT('/**/')      UNAL,
 1542            2    TYPE_AGAIN        UBIN (36)      %INIT (34)%CHARTEXT('/**/')      UNAL,
 1543            2    ASSEND_OR_DESCEND BIT(1)        %INIT ('0'B)%CHARTEXT('/**/')   UNAL,
 1544            2    THEN_THRU_FIELD   BIT(1)        %INIT ('0'B)%CHARTEXT('/**/')   UNAL,
 1545            2    *                 BIT(34)       %INIT ('0'B)%CHARTEXT('/**/')   UNAL,
 1546            2    SUB_FIELD_NM     CHAR(32)       %INIT(' ')%CHARTEXT('/**/')     UNAL,
 1547            2    SUB_SET_NM        CHAR(32)      %INIT(' ')%CHARTEXT('/**/')      UNAL,
 1548            2    SUB_RECORD_NM     CHAR (32)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1549            2    *  (0:2 )         UBIN (36)      %INIT (0*3 )%CHARTEXT('/**/')    UNAL;
 1550      %MEND;
 1551
 1552
 1553      %MACRO DESC_TYPE_35 (STCLASS=EXT);
 1554      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       43   
 1555      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1556      %LSET INIT=CHARTEXT('INIT');
 1557      %ELSE;
 1558      %LSET INIT=CHARTEXT('/*');
 1559      %ENDIF;
 1560      /*D*
 1561      NAME:    TYPE_35
 1562      DESCRIPTION:
 1563                 THIS STRUCTURE DESCRIBES THE TYPE 35 DESCRIPTOR IN THE
 1564               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
 1565               THIS DESCRIPTOR DESCRIBES THE FIELD KEY RELATIONSHIP
 1566               FOR THIS SUBSCHEMA (AND SCHEMA).
 1567               WORD0  -  TYPE (35)
 1568               WORD1  -  FIELD NAME (THE UWA RELATIVE BYTE OFFKEY ADDRESS
 1569                         OF THE DATA BASE RECORD AS ASSIGNED BY THE
 1570                         SUBSCHEMA TRANSLATER ).
 1571               WORD2  -  KEY NAME (THE SUBSCHEMA ASSIGGNED INTERNAL KEY
 1572                         NAME FOR AN KEY IN WHICH THIS RECORD MAY BE
 1573                         ASSOCATED).
 1574               WORD3  -  TYPE (35)
 1575               WORD4 -   UNUSED.
 1576               WORD5-12  SUBSCHEMA FIELD NAME.
 1577               WORD13-20 SUBSCHEMA KEY NAME.
 1578               WORD21-28 SUBSCHEMA RECORD NAME.
 1579               WORD29-31 NOT USED.
 1580      */
 1581      DCL 1         TYPE_35 STCLASS,
 1582            2    TYPE              UBIN (36)      %INIT (35)%CHARTEXT('/**/')      UNAL,
 1583            2    FIELD_NAME       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1584            2    KEY_NAME          UBIN (36)      %INIT (0 )%CHARTEXT('/**/')      UNAL,
 1585            2    TYPE_AGAIN        UBIN (36)      %INIT (35)%CHARTEXT('/**/')      UNAL,
 1586            2    *                 UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1587            2    SUB_FIELD_NM     CHAR(32)       %INIT(' ')%CHARTEXT('/**/')     UNAL,
 1588            2    SUB_KEY_NM        CHAR(32)      %INIT(' ')%CHARTEXT('/**/')      UNAL,
 1589            2    SUB_RECORD_NM     CHAR (32)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1590            2    *  (0:2 )         UBIN (36)      %INIT (0*3 )%CHARTEXT('/**/')    UNAL;
 1591      %MEND;
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       44   
 1592
 1593
 1594      %MACRO DESC_TYPE_36 (STCLASS=EXT);
 1595      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1596      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1597      %LSET INIT=CHARTEXT('INIT');
 1598      %ELSE;
 1599      %LSET INIT=CHARTEXT('/*');
 1600      %ENDIF;
 1601      /*D*
 1602      NAME:    TYPE_36
 1603      DESCRIPTION:
 1604                 THIS STRUCTURE DESCRIBES THE TYPE 36 DESCRIPTOR IN THE
 1605               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
 1606               THIS DESCRIPTOR DESCRIBES THE SET_OWNER SET RELATIONSHIP
 1607               FOR THIS SUBSCHEMA (AND SCHEMA).
 1608               WORD0  -  TYPE (36)
 1609               WORD1  -  SET_OWNER NAME (THE UWA RELATIVE BYTE OFFSET ADDRESS
 1610                         OF THE DATA BASE RECORD AS ASSIGNED BY THE
 1611                         SUBSCHEMA TRANSLATER ).
 1612               WORD2  -  SET NAME (THE SUBSCHEMA ASSIGGNED INTERNAL SET
 1613                         NAME FOR AN SET IN WHICH THIS RECORD MAY BE
 1614                         ASSOCATED).
 1615               WORD3  -  TYPE (36)
 1616               WORD4 -   UNUSED.
 1617               WORD5-12  SUBSCHEMA SET_OWNER NAME.
 1618               WORD13-20 SUBSCHEMA SET NAME.
 1619               WORD21-28 SUBSCHEMA MEMBER RECORD NAME.
 1620               WORD29-31 NOT USED.
 1621      */
 1622      DCL 1         TYPE_36 STCLASS,
 1623            2    TYPE              UBIN (36)      %INIT (36)%CHARTEXT('/**/')      UNAL,
 1624            2    SET_OWNER_NAME       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1625            2    SET_NAME          UBIN (36)      %INIT (0 )%CHARTEXT('/**/')      UNAL,
 1626            2    TYPE_AGAIN        UBIN (36)      %INIT (36)%CHARTEXT('/**/')      UNAL,
 1627            2    *                 UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1628            2    SUB_SET_OWNER_NM     CHAR(32)       %INIT(' ')%CHARTEXT('/**/')     UNAL,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       45   
 1629            2    SUB_SET_NM        CHAR(32)      %INIT(' ')%CHARTEXT('/**/')      UNAL,
 1630            2    MEM_RECORD_NM     CHAR(32)      %INIT(' ')%CHARTEXT('/**/')       UNAL,
 1631            2    *  (0:2)          UBIN (36)      %INIT (0*3 )%CHARTEXT('/**/')    UNAL;
 1632      %MEND;
 1633      %MACRO DESC_TYPE_37 (STCLASS=EXT);
 1634      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1635      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1636      %LSET INIT=CHARTEXT('INIT');
 1637      %ELSE;
 1638      %LSET INIT=CHARTEXT('/*');
 1639      %ENDIF;
 1640      /*D*
 1641      NAME:    TYPE_37
 1642      DESCRIPTION:
 1643                 THIS STRUCTURE DESCRIBES THE TYPE 37 DESCRIPTOR IN THE
 1644               DESCRIPTOR SEGMENT OF THE SUBSCHEMA FILE.
 1645               This descriptor describes the relationship for records
 1646               that are stored direct and the DBKEY that they are stored
 1647               by.
 1648               WORD0  -  TYPE (37)
 1649               WORD1  -  RECORD NAME (THE UWA RELATIVE BYTE OFFSET ADDRESS
 1650                         OF THE DATA BASE RECORD AS ASSIGNED BY THE
 1651                         SUBSCHEMA TRANSLATER ).
 1652               WORD2  -  PARAM NAME (THE SUBSCHEMA ASSIGNED INTERNAL PARAM
 1653                         NAME FOR AN PARAM IN WHICH THIS RECORD MAY BE
 1654                         LOCATED).
 1655               WORD3  -  TYPE (37)
 1656               WORD4  -  AVAILABLE for bits.
 1657               WORD5-12  Subschema field name.
 1658               WORD13-20 Subschema record name (one stored by this DBK).
 1659               WORD21-28 Subschema record name (record that field is in).
 1660               WORD29-31 AVAILABLE.
 1661      */
 1662      DCL 1         TYPE_37 STCLASS,
 1663            2    TYPE              UBIN (36)      %INIT (37)%CHARTEXT('/**/')      UNAL,
 1664            2    RECORD_NAME       UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1665            2    PARAM_NAME         UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       46   
 1666            2    TYPE_AGAIN        UBIN (36)      %INIT (37)%CHARTEXT('/**/')      UNAL,
 1667            2    *                 UBIN (36)      %INIT (0)%CHARTEXT('/**/')       UNAL,
 1668            2    SUB_FIELD_NM     CHAR(32)       %INIT(' ')%CHARTEXT('/**/')     UNAL,
 1669            2    SUB_RECORD_ST_NM  CHAR(32)      %INIT(' ')%CHARTEXT('/**/')      UNAL,
 1670            2    SUB_RECORD_NM     CHAR (32)      %INIT (' ')%CHARTEXT('/**/')     UNAL,
 1671            2    *  (0:2 )         UBIN (36)      %INIT (0*3 )%CHARTEXT('/**/')    UNAL;
 1672      %MEND;
 1673      %MACRO COMPILATION_UNIT_REC (STCLASS=EXT);
 1674      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 1675      %IF (SUBSTR(STR,0,6)='STATIC')OR(SUBSTR(STR,0,8)='CONSTANT')OR(SUBSTR(STR,0,3)='EXT');
 1676      %LSET INIT=CHARTEXT('INIT');
 1677      %ELSE;
 1678      %LSET INIT=CHARTEXT('/*');
 1679      %ENDIF;
 1680      /*D*
 1681        NAME :   COMPILATION_UNIT_REC
 1682      DESCRIPTION:
 1683                THIS STRUCTURE DESCRIBES THE FORMAT OF THE COMPILATION_UNIT_REC LOCATED
 1684                IN THE SUBSCHEMA.
 1685                WORD0         - RECORD NUMBER OF NEXT CU RECORD
 1686                WORD1:2       - AVAILABLE
 1687                WORD3         - TYPE = 1000
 1688                WORD 4:11     - PROGRAM - ID
 1689                WORD 12:19    - AUTHOR
 1690                WORD20:21     - UTS OF COMPILATION
 1691                WORD22:23     - UTS  OF SUBSCHEMA TRANSLATION
 1692                WORD24:31     - AVAILABLE
 1693      */
 1694      DCL 1 COMPILATION_UNIT_REC STCLASS,
 1695            2 NEXT_CU_RECORD UBIN(36) %INIT(0)%CHARTEXT('/**/')       UNAL,
 1696            2 * (0:1) UBIN(36)        %INIT(0*2)%CHARTEXT('/**/')       UNAL,
 1697            2 TYPE UBIN(36) %INIT(1000)%CHARTEXT('/**/')               UNAL,
 1698            2 PROGRAM_ID CHAR(32) %INIT(' ')%CHARTEXT('/**/')         UNAL,
 1699            2 AUTHOR CHAR(32) %INIT(' ')%CHARTEXT('/**/')             UNAL,
 1700            2 *      UBIN(36) %INIT(0)%CHARTEXT('/**/')             UNAL,
 1701            2 COMP_UTS UBIN(36) %INIT(0)%CHARTEXT('/**/')             UNAL,
 1702            2 *      UBIN(36) %INIT(0)%CHARTEXT('/**/')             UNAL,
11:24 SEP 05 '97 ZI_SUB_LANG.:ZIC0SI                                       47   
 1703            2 TRN_UTS UBIN(36) %INIT(0)%CHARTEXT('/**/')              UNAL,
 1704            2 * (0:7) UBIN(36) %INIT(0*8)%CHARTEXT('/**/')              UNAL;
 1705      %MEND;
 1706
 1707
 1708
 1709
 1710
 1711
 1712
 1713
 1714

