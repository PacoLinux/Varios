

PARTRGE version E05  Source listing      12:09:31.08 SEP 05 '97 ZIG$M_PSI                              1    
        1        1        /*M*     DMCL_S  AND OTHER_DMCL   I-D-S/II  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME:    ZIG$M_PSI
        9        9        PURPOSE: THIS IS THE SYNTAX FOR DMCL IN DBACS.
       10       10                 IT IS BROCKEN INTO TWO PARTS.
       11       11                 FIRST:
       12       12                      DMCL_S - IS THE SCHEMA NAME ENTRY;
       13       13                 SECOND:
       14       14                      OTHER_DMCL - THIS CONTAINS ALL THE OTHER
       15       15                           ENTRYS IN THE DMCL.
       16       16        */
       17       17        %EJECT;
PARTRGE version E05  Source listing      12:09:31.08 SEP 05 '97 ZIG$M_PSI                              2    
       18       18        /*W*
       19       19
       20       20              This should be read before any changes are made to any
       21       21            X$PARSE moduals.
       22       22
       23       23              Things that don't work:
       24       24                 1 -  the .BLANK doesn't go to the next non-blank character
       25       25                      but to a ; that means a new line then stops so one must
       26       26                      do another .BLANK . WARNING - don't do recurives
       27       27                      .BLANKS because as of 1/2/80 they never fail.
       28       28                      (I got around this problem by putting a #; at the end
       29       29                      of every line that I want continuation on and if I find
       30       30                      a #; after a .BLANK then I look for another - the
       31       31                      entry BS).
       32       32
       33       33                 2 -  The list processing doesn't work with a blank as a
       34       34                      seperator. (I got around this problem by having the
       35       35                      productions recursive.)
       36       36
       37       37                 3 -  X$PARSE thinks that anything in double quotes
       38       38                      is a comment so all double quotes in the input
       39       39                      line must be translated to some thing else like
       40       40                      a single quote.
       41       41
       42       42                 4 -  It is easyer to find things using the interface
       43       43                      subroutine for X$PARSE that includes when a production
       44       44                      fails you error that line write out the error
       45       45                      message and return to the driver. ( The return is
       46       46                      performed by a unwind because X$PARSE can't be told
       47       47                      to just DIE so I just pop him off the stack.)
       48       48                      Also the interface subroutine is good for setting
       49       49                      when something has been found and setting static
       50       50                      variables to keep the information around until you
       51       51                      need it. ( This way of finding out what X$PARSE
       52       52                      is finding also allows you to check names agains
       53       53                      res_words and make sure that the names have been
       54       54                      DCL some place before.)
PARTRGE version E05  Source listing      12:09:31.08 SEP 05 '97 ZIG$M_PSI                              3    
       55       55
       56       56
       57       57                 5 -  If you are going to use X$PARSE good luck you will
       58       58                      think you need it after a week of pulling out your
       59       59                      hair. (but it not to bad, just think as dumn as
       60       60                      possible and don't make literals over 8 characters
       61       61                      because they don't always work if they are that
       62       62                      large.)
       63       63
       64       64
       65       65                      D. R. P.
       66       66
       67       67
       68       68        */
       69       69        %EJECT;
PARTRGE version E05  Source listing      12:09:31.08 SEP 05 '97 ZIG$M_PSI                              4    
       70       70                DMCL_S(0,F)=[BS] SCHEMA_ENTRY [BS] ENDER
       71       71
       72       72                  SCHEMA_ENTRY(2,S,F) =[BS]'SCHEMA'BS['NAME'BS]['IS'BS];
       73       73                SCHEMA_NAME [SEM][BS] ['FILE_CODE'[BS];
       74       74                FILE_CODE [BS]] [SEM]
       75       75                  SCHEMA_NAME(3,S)= [BS] .FID
       76       76                  FILE_CODE(4,S )= [BS]['IS'][BS]'!' .FID '!'
       77       77                  SEM = [BS]['%' SEM ]
       78       78                  ENDER = [BS]'^'[BS][.END]
       79       79                  STOP(89,S)= [BS] 'END_DMCL'
       80       80                  COMMENT(99,S) = [BS] 'COMMENT'
       81       81
       82       82
       83       83
       84       84                  OTHER_DMCL(1,F,S)= [BS]('AREA'BS AREA_ENTRY |;
       85       85                'RECORD' BS RECORD_ENTRY  |;
       86       86                'SET' BS SET_ENTRY        |;
       87       87                'KEY' BS KEY_ENTRY        |;
       88       88                'PROCEDURE' BS PROCEDURE_ENTRY |;
       89       89                STOP |;
       90       90                COMMENT )
       91       91
       92       92
       93       93
       94       94                  AREA_ENTRY(5,F,S)=[BS] ['NAME'BS]['IS'BS] AREA_NAME ;
       95       95                [SEM] OTHER_AREA_ENTRYS
       96       96                  OTHER_AREA_ENTRYS(22,F) = [BS] ;
       97       97                ('FILE_CODE' BS FILE_CODE |;
       98       98                [BS]'ALLOCATE' [BS] INT_1 [BS]['DATA_BA'-'SE_KEYS'] |;
       99       99                [BS]'PAGE_'-'INTERVAL' [BS] ['IS'[BS]] INT_2 [BS] ['DATA_BA'-'SE_KEYS']|;
      100      100                [BS]'CALC_'-'INTERVAL' [BS] ['IS'[BS]] (NULL|INT_3) [BS]['DATA_BA'-
               100                    'SE_KEYS'] |;
      101      101                [BS]'PAGE_SIZE' [BS] ['IS'[BS]] INT_4 [BS]['BYTES'] |;
      102      102                [BS]'INVEN'-'TORY' [BS] ['AT'[BS]] INT_5 [BS][('PERCENT'|'PER_CENT')] |;
      103      103                [BS]'ORGANI'-'ZATION' [BS] ['IS'[BS]] (INTEGRATED|INDEXED)|;
      104      104                [BS]'KEY' [BS] 'FILE_CODE' [BS] FILE_CODE  |;
      105      105                [BS]'LOAD_'-'LIMIT' [BS] ['IS'[BS]] INT_6 [BS][('PERCENT'|'PER_CENT')]|;
PARTRGE version E05  Source listing      12:09:31.08 SEP 05 '97 ZIG$M_PSI                              5    
      106      106                [BS]'RESERVE' [BS] INT_7 [BS] ['DATA_BA'-'SE_KEYS'] |;
      107      107                [BS]'CHECKSUM' [BS]['IS'[BS]] ('NOT'|CHECKSUM_SET);
      108      108                [BS]['REQUIRED'] |;
      109      109                [BS]'ENCRYPTION' [BS] ['IS'[BS]] ('NOT'|ENCRYPTION_SET);
      110      110                [BS]['REQUIRED'] |;
      111      111                [BS]'JOURNAL' [BS] ['IS'[BS]] ('NOT'|JOURNALING_SET);
      112      112                [BS]['REQUIRED'] |;
      113      113                [BS]'BACKUP' [BS] ['IS'[BS]] ('NOT'|BACKUP_SET) ;
      114      114                [BS]['REQUIRED'] |;
      115      115                [BS]'TEMPLATE' TEMPLATE_SET);
      116      116                [SEM] (ENDER|OTHER_AREA_ENTRYS)
      117      117
      118      118
      119      119                  INT_1(6,S,F) = [BS] .D
      120      120                  INT_2(7,S,F) = [BS] .D
      121      121                  INT_3(8,S,F) = [BS] .D
      122      122                  INT_4(9,S,F) = [BS] .D
      123      123                  INT_5(10,S,F) = [BS] .D
      124      124                  INT_6(11,S,F) = [BS] .D
      125      125                  INT_7(12,S,F) = [BS] .D
      126      126
      127      127                  NULL(13,S)= [BS]'NULL'
      128      128                  INTEGRATED(15,S)=[BS] 'INTEG'-'RATED'
      129      129                  INDEXED(16,S,F)  =[BS] 'INDEXED'
      130      130                  CHECKSUM_SET   (17,P) = ['#']
      131      131                  ENCRYPTION_SET (18,P) = ['#']
      132      132                  JOURNALING_SET (19,P) = ['#']
      133      133                  TEMPLATE_SET   (20,P) = ['#']
      134      134                  AREA_NAME (21,S) = [BS] .FID
      135      135                  BACKUP_SET(22,P) = ['#']
      136      136
      137      137
      138      138
      139      139
      140      140
      141      141
      142      142
PARTRGE version E05  Source listing      12:09:31.08 SEP 05 '97 ZIG$M_PSI                              6    
      143      143                  RECORD_ENTRY(30,S,F)= [BS] ['NAME'BS]['IS'BS] RECORD_NAME ;
      144      144                [SEM] [[BS]'RANGE' [BS] RANGE [SEM]][BS];
      145      145                [[BS]'TYPE' [BS] TYPE [SEM]];
      146      146                [[BS] 'RANGE' [BS] RANGE ] [SEM] ENDER
      147      147
      148      148
      149      149                  RECORD_NAME(31,S,F) = [BS] .FID
      150      150                  RANGE (32,S,F)     = [BS] ['IS'[BS]] RINT_1 [BS] ['TO'];
      151      151                [BS] RINT_2 [BS] ('IN'[BS] AREA|NULL2)
      152      152                  TYPE (36,S,F)= [BS]['IS'][BS] RINT_3
      153      153
      154      154
      155      155                  AREA(33,S,F) = [BS] .FID [BS] [',' [BS] AREA]
      156      156                  RINT_1(34,S,F) = [BS] .D
      157      157                  RINT_2(35,S,F) = [BS] .D
      158      158                  RINT_3(37,S,F) = [BS] .D
      159      159                  NULL2(38,P)= ['#']
      160      160
      161      161
      162      162
      163      163
      164      164
      165      165
      166      166
      167      167                  SET_ENTRY(40,S,F) = [BS] ['NAME'BS]['IS'BS] SET_NAME [SEM] ;
      168      168                [ ['IMP/LEMENTATION'] [BS] 'MODE' [BS] MODE ];
      169      169                [SEM] ['POINT/ERS' [BS] POINTER [SEM] ;
      170      170                [ ['IMP/LEMENTATION'] [BS] 'MODE' [BS] MODE] ] ;
      171      171                [SEM] ENDER
      172      172
      173      173
      174      174                  SET_NAME(41,S,F) = [BS] .FID
      175      175                  MODE (42,F)   = [BS] ['IS'] [BS] (CHAIN | PA)
      176      176                  CHAIN(85,S)   = 'CHAIN'
      177      177                  PA(86,F,S)    = ('PA' | 'POINT/ER' [ 'ARRAY' ] ) [BS] ;
      178      178                'PA_T/YPE' [BS] ['IS'] PA_TYPE ;
      179      179                [ [SEM] 'ALLOW' [BS] ['FOR'] [BS] ALLOW_D [BS] [('ENTRY';
PARTRGE version E05  Source listing      12:09:31.08 SEP 05 '97 ZIG$M_PSI                              7    
      180      180                | 'ENTRIES') ] ]
      181      181
      182      182                  PA_TYPE(87,S,F)= .D [BS]
      183      183                  ALLOW_D(88,S,F)= .D [BS]
      184      184
      185      185
      186      186                  POINTER(43,S,F) = [BS] ['ARE'] [BS] 'LOCAL'
      187      187
      188      188
      189      189
      190      190
      191      191
      192      192
      193      193
      194      194                  KEY_ENTRY(50,S,F) = [BS]['NAME'BS]['IS'BS] KEY_NAME [SEM];
      195      195                'KEY_ID' [BS] ['IS'] [BS] KINT_1 [SEM] ENDER
      196      196
      197      197
      198      198                  KEY_NAME(51,S,F)= [BS] .FID
      199      199                  KINT_1 (52,S,F) = [BS] .D
      200      200
      201      201
      202      202
      203      203
      204      204
      205      205
      206      206
      207      207                  PROCEDURE_ENTRY(60,S,F)= [BS]['NAME'BS]['IS'BS] ;
      208      208                PROC_NAME [SEM] USING_LIST [SEM] GIVING_LIST [SEM] ENDER
      209      209
      210      210
      211      211                  PROC_NAME (61,S,F)= [BS] .FID
      212      212                  USING_LIST(62,F) = [BS] ;
      213      213                ( I_V | T_I | T_O | L_I | L_O | ;
      214      214                S_I | S_O | C_T | DB_R | SS_R | DB_D | SS_D |;
      215      215                P_N | AUT | D_T | DB ) [ BS] [',' USING_LIST]
      216      216                  GIVING_LIST(63,F) = [BS] (O_V | S_R | L_O_O | DB_O);
PARTRGE version E05  Source listing      12:09:31.08 SEP 05 '97 ZIG$M_PSI                              8    
      217      217                [BS][',' GIVING_LIST]
      218      218
      219      219
      220      220                  I_V(64,S)=[BS] 'INPUT_VALUE'
      221      221                  T_I(65,S)=[BS] 'TYPE' [BS] ['OF'][BS] 'INPUT_VALUE'
      222      222                  L_I(66,S)=[BS] 'TYPE' [BS] ['OF'][BS] 'OUTPUT_VALUE'
      223      223                  T_O(67,S)=[BS] 'LENGTH' [BS] ['OF'][BS] 'INPUT_VALUE'
      224      224                  L_O(68,S)=[BS] 'LENGTH' [BS] ['OF'][BS] 'OUTPUT_VALUE'
      225      225                  S_I(69,S)=[BS] 'SCALE' [BS] ['OF'][BS] 'INPUT_VALUE'
      226      226                  S_O(70,S)=[BS] 'SCALE' [BS] ['OF'][BS] 'OUTPUT_VALUE'
      227      227                  C_T(71,S)=[BS] 'CLAUSE_TYPE'
      228      228                  DB_R(72,S)=[BS] 'DB_REC'-'ORD_NAME'
      229      229                  SS_R(73,S)=[BS] 'SS_REC'-'ORD_NAME'
      230      230                  DB_D(74,S)=[BS] 'DB_DATA_NAME'
      231      231                  SS_D(75,S)=[BS] 'SS_DATA_NAME'
      232      232                  P_N(76,S)=[BS] 'PROGRAM_NAME'
      233      233                  AUT(77,S)=[BS] 'AUTHOR'
      234      234                  D_T(78,S)=[BS] 'DECLARAT'-'IVE_TYPE'
      235      235
      236      236                  O_V(80,S)=[BS] 'OUTPUT_VALUE'
      237      237                  S_R(81,S)=[BS] 'STATUS'-'_RETURN'
      238      238                  L_O_O(82,S)=[BS] 'LENGTH' [BS]['OF'][BS] 'OUTPUTVALUE'
      239      239                  DB_O(83,S)= [BS] .FID
      240      240                  DB(84,S)= [BS] .FID
      241      241
      242      242
      243      243
      244      244
      245      245        /*       TO FIX BLANK LINE PROBLEM */
      246      246                  BS = .B ['#' BS]


PARTRGE version E05  Cross Reference     12:09:40.88 SEP 05 '97 ZIG$M_PSI                              9    
ALLOW_D             179     183*
AREA                151     155*    155
AREA_ENTRY           84      94*
AREA_NAME            94     134*
AUT                 215     233*
BACKUP_SET          113     135*
BS                   70      70      72      72      72      72      73      73      74      75      76
                     76      77      78      78      79      80      84      84      85      86      87
                     88      94      94      94      96      97      98      98      98      99      99
                     99      99     100     100     100     100     101     101     101     101     102
                    102     102     102     103     103     103     104     104     104     105     105
                    105     105     106     106     106     107     107     107     108     109     109
                    109     110     111     111     111     112     113     113     113     114     115
                    119     120     121     122     123     124     125     127     128     129     134
                    143     143     143     144     144     144     145     145     146     146     149
                    150     150     150     151     151     151     152     152     155     155     155
                    156     157     158     167     167     167     168     168     169     170     170
                    174     175     175     177     178     179     179     179     182     183     186
                    186     194     194     194     195     195     198     199     207     207     207
                    211     212     215     216     217     220     221     221     221     222     222
                    222     223     223     223     224     224     224     225     225     225     226
                    226     226     227     228     229     230     231     232     233     234     236
                    237     238     238     238     239     240     246*    246
CHAIN               175     176*
CHECKSUM_SET        107     130*
COMMENT              80*     90
C_T                 214     227*
DB                  215     240*
DB_D                214     230*
DB_O                216     239*
DB_R                214     228*
DMCL_S               70*
D_T                 215     234*
ENCRYPTION_SET      109     131*
ENDER                70      78*    116     146     171     195     208
FILE_CODE            74      76*     97     104
GIVING_LIST         208     216*    217
PARTRGE version E05  Cross Reference     12:09:40.88 SEP 05 '97 ZIG$M_PSI                              10   
INDEXED             103     129*
INTEGRATED          103     128*
INT_1                98     119*
INT_2                99     120*
INT_3               100     121*
INT_4               101     122*
INT_5               102     123*
INT_6               105     124*
INT_7               106     125*
I_V                 213     220*
JOURNALING_SET      111     132*
KEY_ENTRY            87     194*
KEY_NAME            194     198*
KINT_1              195     199*
L_I                 213     222*
L_O                 213     224*
L_O_O               216     238*
MODE                168     170     175*
NULL                100     127*
NULL2               151     159*
OTHER_AREA_ENTRYS            95      96*    116
OTHER_DMCL           84*
O_V                 216     236*
PA                  175     177*
PA_TYPE             178     182*
POINTER             169     186*
PROCEDURE_ENTRY      88     207*
PROC_NAME           208     211*
P_N                 215     232*
RANGE               144     146     150*
RECORD_ENTRY         85     143*
RECORD_NAME         143     149*
RINT_1              150     156*
RINT_2              151     157*
RINT_3              152     158*
SCHEMA_ENTRY         70      72*
SCHEMA_NAME          73      75*
PARTRGE version E05  Cross Reference     12:09:40.88 SEP 05 '97 ZIG$M_PSI                              11   
SEM                  73      74      77*     77      95     116     144     144     145     146     167
                    169     169     171     179     194     195     208     208     208
SET_ENTRY            86     167*
SET_NAME            167     174*
SS_D                214     231*
SS_R                214     229*
STOP                 79*     89
S_I                 214     225*
S_O                 214     226*
S_R                 216     237*
TEMPLATE_SET        115     133*
TYPE                145     152*
T_I                 213     221*
T_O                 213     223*
USING_LIST          208     212*    215


         No errors,  no PREFs in DMCL_S

