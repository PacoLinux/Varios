
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:1    
        1        1        /*M* ZIU$ROLL         IDSII    DRIVER FOR ROLL FOWARD UTILITY      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*P*
        9        9           NAME: ZIU$ROLL
       10       10        PURPOSE: TO RECONSTRUCT A DATA BASE(S) FROM A COMMON JOURNAL.
       11       11           DATE: 3/80         D.F. HANRAHAN
       12       12
       13       13                          DATA BASE ROLL FORWARD
       14       14              Roll forward utility consist of several moduals for the purpose
       15       15           of reconstructing the data base(s) from a common journal. The process
       16       16           must start with the user loading his data base from a dump and then
       17       17           using the roll forward utility to reconstruct the data modifications
       18       18           that occurr in the journal.
       19       19
       20       20              The entire process is performed with two passes of the common
       21       21           journal. The first pass builds a table of all the files it will
       22       22           need to access in order to make the updates. The inability to access
       23       23           any of the files is cause to abort the acitivity. Also in this first
       24       24           pass (called PRESCAN) each user is checked for roll back intervals.
       25       25           When such at interval is found (defined by a roll back journal record)
       26       26           then all journal records recieved since that users last check point
       27       27           are to be ignored. When a roll back record is encountered, the prescan
       28       28           processor will write a time stamp of that users last checkpoint to a
       29       29           file followed by the user number. When the end of the journal is
       30       30           encountered this file is sorted by time so that there is a sorted
       31       31           file of times in which each rollback interval starts for each user.
       32       32
       33       33              The second pass of the journal (program ZIU$PRJRNL) then applies
       34       34           the journal updates and ignores all journal records (except those
       35       35           which open files) that fill within a rollback interval. That interval
       36       36           is identified by reading the sorted file to get a rollback start time,
       37       37           and terminating the interval when a rollback record for that user is
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:2    
       38       38           read from the journal.
       39       39
       40       40              Here are the various type of journal records and the action taken
       41       41           by the ZIU$PRJRNL module.
       42       42
       43       43              FID - A user opens this FID and is given a FIDID. This FIDID is
       44       44           used to identify by number this fid. ie. If this is the third file
       45       45           this user opened then this user will have a fidid of 3 assigned to
       46       46           him which will by link list attach that fidid to this fid.
       47       47
       48       48              MOD - Contains a user#,fidid,page and line#, and an after image
       49       49           of the record that was modified.
       50       50
       51       51              DEL - Contains the same info as MOD only it includes the nessary info
       52       52              for deleting the record.
       53       53
       54       54              STO - same as above only for a store.
       55       55
       56       56              SUM - This record passed the same user and fid info as above only it
       57       57              passes an after image checksum value of a page that has modified by
       58       58              a delete, store or modify. This serves as a check that the page has
       59       59              been reconstructed properly.
       60       60
       61       61              MSET- This is a type of modify to a page that modifies set pointers.
       62       62              It simply passes a bit character string that is to be user to over
       63       63              write data in the given page.
       64       64
       65       65              BGN & END - Begin and ending records that mark a user starting and ending
       66       66              a job.
       67       67
       68       68              CHK - This record marks a time for a user "clean point" or checkpoint.
       69       69
       70       70                       The following is a breakdown on the modules and there functions.
       71       71
       72       72              ZIU$ROLL -
       73       73                 This module is the driver to roll foward utility. It get dynamic memory
       74       74              for the tables and initializes them as well as controls the dcbs for the
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:3    
       75       75              journal and the sort file. This module also invokes sort using the
       76       76              ZIU$PRESCN module for the prescn process and ZIU$WRTROL procedure as
       77       77              the output procedure.
       78       78
       79       79              ZIU$PRESCN -
       80       80                 Input procedure to sort. Builds a file of user rollback start interval
       81       81              times, and builds a table of FIDs required to be roll forward.
       82       82
       83       83              ZIU$WRTROL -
       84       84                 Output routine from sort. Writes the rollback file (M$RLBK dcb) out
       85       85              in sorted order.
       86       86
       87       87              ZIU$PRJRNL -
       88       88                 This routine is the driver for the second scan of the journal. It
       89       89              applies the MOD,DEL,STO and SUM records described above. At the same
       90       90              time it fills a user table with roll back interval times read from
       91       91              the sorted file. If the time stamp on a journal record falls in
       92       92              a rollback interval for that user then the journal record is not
       93       93              applied.
       94       94
       95       95              ZIU$RPLY -
       96       96                 This module does the actual updating to the data base using the
       97       97              information found in the journal record. It has an entry point for
       98       98              each process that it may be asked to do. For example, if a store
       99       99              record was encountered by ZIU$PRJRNL then ZIU$PRJRNL will call
      100      100              ZIU$RPLY at entry point PROCESS_STO. ZIU$RPLY will then read
      101      101              the page (stealing a dcb from another file if neccessary), perform
      102      102              the store, rebuild header information and write the page back out.
      103      103
      104      104              ZIU$GETDYN -
      105      105                 This module gets and expands memory for the tables each time its
      106      106              called until it runs out of memory at which time it altreturns.
      107      107
      108      108              ZIU$ASSDCB -
      109      109                 This module has the entry point called ASSOC_DCB. When called
      110      110              it will try to get a dcb for the fid passed with the M$GETDCB
      111      111              service. If for any reason it can't get a dcb it will take the
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:4    
      112      112              dcb that has been least recently used and close it then give
      113      113              that dcb to the fid requested.
      114      114
      115      115              ZIU$DCBMGR -
      116      116                 This module has multiple entry points used to keep track of a
      117      117              user's fidid and the dcb (actually the fid) that the fidid refers
      118      118              to. Entry point STR_USER_FIDID (USER_NUM,FID-ID,INDX) will store
      119      119              the fid id passed in a linked list for that user. The indx is the
      120      120              index to the fid table where the actual fid info is stored and is
      121      121              stored with the fid id. Entry point FIND_USER-FIDID(USER_NUM,FID-ID,
      122      122              INDX) returns the indx to the fid table where fid info for a
      123      123              user's fidid is stored. Entry point DEL_USER_FIDS(USER_NUM) is used
      124      124              to delete the users file assocations by fidid and free the table
      125      125              space for other users.
      126      126
      127      127              ZIU$QUEMGR -
      128      128                 This module has three entry points used to keep current the least
      129      129              recently used dcb by means of a que. Each time a file is open, or
      130      130              written to the file is placed(logiclly) and the end of a que. At
      131      131              any point in time the last used dcb belongs to the fid which is
      132      132              stored first in the que. Entry point QUE_UP(INDX) adds and stores
      133      133              last the file id index in the INDX param. Entry point DE_QUE(INDX)
      134      134              will remove a fid entry from the que (used when the fid looses its
      135      135              dcb). Last, entry point QUE_LAST(INDX) is called after each write
      136      136              to but a fid (and its dcb) last in the que.
      137      137
      138      138              ZIU$HASHFID -
      139      139                 This module consist of two entry points and a hashing algorithm.
      140      140              Entry point STORE_FID(FILENAME,FILEACCT,INDX) stores the file info
      141      141              in the journal record in the next avail slot in the fid table.
      142      142              First however, the fid is hashed to a value and that value is used
      143      143              as an indx to store the table location of this fid into yet another
      144      144              table. This gives the capability of allowing the fid table to not
      145      145              be fixed in size and yet still be able to hash the fid to a table
      146      146              location. Entry point FIND_FID(FILENAME,FILEACCT,INDX) will use
      147      147              the name and account to hash a value, go to the hash table with
      148      148              that value and look up the indx to the fid table for the fid and
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:5    
      149      149              check against collisions until it finds the correct fid table indx.
      150      150                                                                            */
      151      151        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:6    
      152      152        ZIU$ROLL: PROC ALTRET;
      153      153    1   DCL 1 SORT_KEY STATIC ALIGNED,
      154      154    1         2 COUNT UBIN WORD INIT(1),
      155      155    1         2 ITEM (0:1),
      156      156    1           3 POSITION CHAR(2) UNAL INIT('01'*0),
      157      157    1           3 KEY_TYPE CHAR(2) UNAL INIT('AN'*0),
      158      158    1           3 STARTING UBIN WORD INIT(1*0),
      159      159    1           3 LENGTH UBIN WORD INIT(5*0),
      160      160    1           3 START_CODE UBIN(5) INIT(0*0) UNAL,
      161      161    1           3 LENGTH_CODE UBIN(4) INIT(0*0) UNAL,
      162      162    1           3 ORDERING CHAR(1) INIT('A'*0) UNAL,
      163      163    1           3 TRANS_CODE CHAR(2) INIT('  '*0) UNAL;
      164      164
      165      165    1   DCL 1 M_JRNL STATIC SYMDEF ALIGNED,
      166      166    1         2 N,
      167      167    1           3 L UBIN BYTE UNAL INIT(7),
      168      168    1           3 C CHAR(7) UNAL INIT('JOURNAL'),
      169      169    1         2 DCB# UBIN HALF UNAL;
      170      170    1   DCL 1 M_RLBK STATIC SYMDEF ALIGNED,
      171      171    1         2 N,
      172      172    1           3 L UBIN BYTE UNAL INIT(6),
      173      173    1           3 C CHAR(7) UNAL INIT('M$RLBK'),
      174      174    1         2 DCB# UBIN HALF UNAL;
      175      175
      176      176    1   DCL 1 JRNL_BUF STATIC SYMDEF ALIGNED, /* INPUT BUFFER JRNL */
      177      177    1         2 VAL CHAR(4096) UNAL;
      178      178    1   DCL FSA_WORK (0:1) CHAR(4096) ALIGNED;
      179      179         /* Work area for FSA  de-blocking (XSA routines ) */
      180      180
      181      181    1   DCL BAD_FILE BIT(1) UNAL STATIC SYMDEF INIT('0'B);
      182      182
      183      183    1   DCL JRNL_NAME CHAR(32) STATIC INIT('JOURNAL ');
      184      184    1   DCL ROLL_CMPLT_TIME UBIN WORD STATIC SYMDEF ALIGNED;
      185      185    1   DCL WAIT_COUNT SBIN;
      186      186
      187      187         %INCLUDE ZI$DIR;
      188      344         %DIR;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:7    
      189      488         %INCLUDE ZI_GLOBAL_DBUTIL;
      190      666         %SYS_FUNC;
      191      758         %MISC_DCLS;
      192      811         %INCLUDE ZI_DBU_ROLL;
      193      895         %ROLL_SUBS;
      194      914         %ROLL_LIST(STCLASS="STATIC SYMDEF");
      195      973         %INCLUDE ZI_ROLL_STATS;
      196     1094         %CNTERS;
      197     1115         %OUTLINE;
      198     1201         %INCLUDE ZI$JRNL;
      199     1309         %JRNL_REC(STCLASS="STATIC SYMDEF");
      200     1384
      201     1385         %INCLUDE CP_6_SUBS;
      202     1925         %INCLUDE ZI_ERRORS_SUBS;
      203     2445         %INCLUDE CP_6;
      204     2526        %INCLUDE B_ERRORS_C;
      205     3653         %FPT_EVENT(UENTRY=ZIU$EVENT);
      206     3667         %FPT_WAIT(FPTN=WAIT_JRNL,STCLASS=CONSTANT,UNITS=20);
      207     3681         %F$DCB;
      208     3738         %INCLUDE ZL_MACRO_C;
      209     4388         %SORT_TABLE(INSIZ=5,
      210     4389         OUTSIZ=5,
      211     4390         PARTSIZ=5,
      212     4391         ICE=ZIU$PRESCN,
      213     4392         OCE=ZIU$WRTROL,
      214     4393         KEYS=SORT_KEY,
      215     4394         STAT=YES,
      216     4395         DMP='D');
      217     4504
      218     4505
      219     4506
      220     4507    1   DCL ZIU$EVENT ENTRY ASYNC;
      221     4508    1   DCL ZIU$SRTDCB ENTRY;
      222     4509    1   DCL X$SORT ENTRY(1) ALTRET;
      223     4510    1   DCL ZIU$PRJRNL ENTRY ALTRET;
      224     4511    1   DCL ZIU$PRESCN ENTRY(2) ALTRET;
      225     4512    1   DCL ZIU$WRTROL ENTRY(2) ALTRET;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:8    
      226     4513    1   DCL CREATE_TBL_SEG ENTRY(2) ALTRET;
      227     4514    1   DCL EXPAND_TBL_SEG ENTRY(2) ALTRET;
      228     4515    1   DCL ZERO_SUP ENTRY(3);
      229     4516    1   DCL FREE_DYN_MEM ENTRY ALTRET;
      230     4517    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
      231     4518    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
      232     4519    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      233     4520    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
      234     4521    1   DCL SYS_FUNC_TSTAMP ENTRY ALTRET;
      235     4522    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      236     4523    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      237     4524    1   DCL INIT_BUFTBL ENTRY ALTRET;
      238     4525    1   DCL FLUSH_BUFFERS ENTRY ALTRET;
      239     4526    1   DCL SET_BUFS ENTRY(2) ALTRET;
      240     4527    1   DCL ZIU$CGCLNUP ENTRY(2) ALTRET;
      241     4528    1   DCL ZIU$CGOPN ENTRY(2) ALTRET;
      242     4529    1   DCL ASSOC_DCB ENTRY(1) ALTRET;
      243     4530    1   DCL QUE_UP ENTRY(1);
      244     4531
      245     4532        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:9    
      246     4533        /*
      247     4534                               P r o c e d u r e
      248     4535        */
      249     4536    1       REMEMBER ALT_ROLL IN BRK_ROLL; /* BREAK CONTROL LABEL */
      250     4537    1       CALL M$EVENT(FPT_EVENT);
      251     4538    1       CALL INIT_ALL_TBLS ALTRET(ALT_ROLL);
      252     4539    1       CALL GET_DCBS ALTRET(ALT_ROLL);
      253     4540    1       WAIT_COUNT = 0;
      254     4541    1   RETRY_JRNL_OPEN:;
      255     4542    1       CALL OPEN_JOURNAL
      256     4543    2       WHENALTRETURN DO;
      257     4544    2           WAIT_COUNT = WAIT_COUNT + 1;
      258     4545    2           IF MONITOR_ERR.ERR# ~= %E$FILEBUSY OR
      259     4546    2              WAIT_COUNT > 30 /* 10 minutes of 20 second intervals */
      260     4547    2           THEN
      261     4548    2               GOTO ALT_ROLL;
      262     4549        /*E*
      263     4550        ERROR: ZIU-DBU#WAITING
      264     4551        MESSAGE: Waiting... (Use BREAK to quit).
      265     4552        */
      266     4553    2           ERRCODESF.ERR# = DBU#WAITING;
      267     4554    2           MONITOR_ERR = ERRCODESF;
      268     4555    2           CALL SYS_FUNC_ERRMSG;
      269     4556    2           CALL M$WAIT(WAIT_JRNL);
      270     4557    2           IF BREAK_FLAG ~= 0
      271     4558    2           THEN
      272     4559    2               RETURN;
      273     4560    2           GOTO RETRY_JRNL_OPEN;
      274     4561    2           END;
      275     4562    1   /**/ FUNSF = %CREATE#;
      276     4563    1       CALL OPEN_ROLLFID ALTRET(ALT_ROLL); /* Used to sort roll intervals.*/
      277     4564
      278     4565    1       CALL X$SORT(SORT_TABLE) ALTRET(ALT_ROLL); /*Input proc to sort= journl
      279     4566         prescan and output routine is
      280     4567         writing of roll intrvl recs */
      281     4568    1   /**/ POSSF = %PTV#; /* Rewind put dont release tape */
      282     4569    1       CALL CLOS_JRNL_ROLL ALTRET(ALT_ROLL);
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:10   
      283     4570
      284     4571    1       CALL PRESCN_REPORT ALTRET(ALTRTN); /* Print success of prescn */
      285     4572    1   /**/ FUNSF = %IN#;
      286     4573    1       CALL OPEN_ROLLFID ALTRET(ALT_ROLL);
      287     4574    1       CALL OPEN_JOURNAL ALTRET(ALT_ROLL);
      288     4575    1       CALL SET_BUFS(,255); /* Try to get max number of buffers */
      289     4576    1       CALL INIT_BUFTBL; /* INITIALIZE I/O  BUFFER MANAGER */
      290     4577    1       CALL ZIU$PRJRNL ALTRET(ALT_ROLL); /* Start applying journal */
      291     4578
      292     4579    1       CALL CLEAN_HOUSE ALTRET(ALT_ROLL); /* Release DCBS and MEMORY */
      293     4580    1       CALL SET_BUFS(,32); /* REset number of buffers to 32 */
      294     4581    1       CALL STAT_REPORT; /* Print journal stats */
      295     4582    1       RETURN;
      296     4583
      297     4584        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:11   
      298     4585        /*------------------------------------------------------------------
      299     4586                 INITIALIZE  THE  DCB  AND  FILE  INFO  TABLES
      300     4587        --------------------------------------------------------------------*/
      301     4588    1   INIT_ALL_TBLS: PROC ALTRET;
      302     4589        /*
      303     4590           This routine initializes the basic tables used by roll (defined
      304     4591           in ZI_DBU_ROLL). Two of the tables (FIDLIST & DCBLIST) are built
      305     4592           in dynamic memory so they may grow as required. The other two
      306     4593           tables (USER & FID_INDXS) are constant in size but are still based
      307     4594           structures. I do this so that I can use memory reserved for I/O
      308     4595           in other utilities, to build the tables in for this utility. The
      309     4596           two tables require 1.75 K. (1536 words for USER and 206 for FID_INDXS)
      310     4597           So I used the last two I/O buffers for this. (Any 2 consec buffers
      311     4598           could be used.
      312     4599        */
      313     4600
      314     4601    2   INIT_FIDLIST:
      315     4602    2       CALL CREATE_TBL_SEG(FID$,FIDLST#) ALTRET(ALTRTN);
      316     4603    3       DO X = 1 TO 59; /* 60 = # entries fitting in 1 page memory */
      317     4604    3           FIDLIST.DCB#(X) = 0;
      318     4605    3           FIDLIST.NXTFID(X) = -1;
      319     4606    3           FIDLIST.QUE.PRI(X)= -1;
      320     4607    3           FIDLIST.QUE.NXT(X)= -1;
      321     4608    3           FIDLIST.MOD#(X) = 0;
      322     4609    3           END;
      323     4610    2       FIDLIST.QUE.PRI(0) = 0;
      324     4611    2       FIDLIST.QUE.NXT(0) = 0;
      325     4612    2       MAX_FIDINDX = 59;
      326     4613    2       NXT_AVIL_FIDSLOT = 1;
      327     4614
      328     4615    2   INIT_DCBLIST:
      329     4616    2       CALL CREATE_TBL_SEG(DCBLIST$,DCBLST#) ALTRET(ALTRTN);
      330     4617    3       DO X = 0 TO 681; /* # entries fitting in 1 page memory */
      331     4618    3           DCBLIST.FIDINDX(X) = 0;
      332     4619    3           DCBLIST.NEXT(X) = -1;
      333     4620    3           DCBLIST.DCBID(X) = 0;
      334     4621    3           END;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:12   
      335     4622    2       MAX_DCBINDX = 681;
      336     4623    2       NXT_AVIL_DCBSLOT = 0;
      337     4624    2       LAST_UNUSED_DCBSLOT = 1;
      338     4625
      339     4626    2   INIT_USER:
      340     4627    3       DO X = 0 TO NO.USERS;
      341     4628    3           USER.SYSID(X) = 0;
      342     4629    3           USER.DCBINDX(X) = -1;
      343     4630    3           USER.RLBK_START(X) = HIGH_VALUE;
      344     4631    3           USER.CHKPT_NO(X) = 0;
      345     4632    3           USER.CGMSGID(X) = '0'B;
      346     4633    3           END;
      347     4634
      348     4635    2   INIT_FID_INDXS:
      349     4636    3       DO X = 0 TO 511;
      350     4637    3           FID_INDXS(X) = -1;
      351     4638    3           END;
      352     4639
      353     4640    2   INIT_STATS:
      354     4641    3       DO X = 0 TO STATS#;
      355     4642    3           STATS(X) = 0;
      356     4643    3           END;
      357     4644
      358     4645         /*
      359     4646            Set  stoping  time  for  roll  foward
      360     4647         */
      361     4648    2       IF ZI$DIR.DATEFLG THEN
      362     4649    3       DO;
      363     4650    3    /**/   SOURCESF = %ANS#;
      364     4651    3    /**/   DESTSF = %UTS#;
      365     4652    3    /**/   TIMESF = VECTOR(ZI$DIR.TIME);
      366     4653    3    /**/   DATESF = VECTOR(ZI$DIR.DATE);
      367     4654    3    /**/   TSTAMPSF = VECTOR(ROLL_CMPLT_TIME);
      368     4655    3           CALL SYS_FUNC_TSTAMP ALTRET(ALTRTN);
      369     4656    3           END;
      370     4657    2       ELSE
      371     4658    2           ROLL_CMPLT_TIME = HIGH_VALUE;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:13   
      372     4659
      373     4660    2       RETURN;
      374     4661
      375     4662    2   ALTRTN:
      376     4663    2       ALTRETURN;
      377     4664    2   END INIT_ALL_TBLS;
      378     4665        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:14   
      379     4666        /*-------------------------------------------------------------------
      380     4667                 GET DCBS - OPEN JOURNAL - OPEN ROLLBACK SORT FILE
      381     4668        --------------------------------------------------------------------*/
      382     4669    1   GET_DCBS: PROC ALTRET;
      383     4670
      384     4671    2   /**/ DCBNMSF = VECTOR(M_JRNL.N);
      385     4672    2       CALL SYS_FUNC_GETDCB ALTRET(ALT_DCB);
      386     4673    2       M_JRNL.DCB# = DCBSF;
      387     4674
      388     4675    2   /**/ DCBNMSF = VECTOR(M_RLBK.N);
      389     4676    2       CALL SYS_FUNC_GETDCB ALTRET(ALT_DCB);
      390     4677    2       M_RLBK.DCB# = DCBSF;
      391     4678         /*  Set up scratch file dcb for sort */
      392     4679    2       CALL ZIU$SRTDCB;
      393     4680
      394     4681    2       RETURN;
      395     4682
      396     4683    2   ALT_DCB: ALTRETURN;
      397     4684    2   END GET_DCBS;
      398     4685        /*
      399     4686                      OPEN JOURNAL
      400     4687        */
      401     4688    1   OPEN_JOURNAL: PROC ALTRET;
      402     4689    2   /**/ DCBSF = M_JRNL.DCB#;
      403     4690    2   /**/ ORGSF = %CONSEC#;
      404     4691    2   /**/ ACSSF = %SEQUEN#;
      405     4692    2   /**/ FUNSF = %IN#;
      406     4693    2   /**/ ASNSF = %FILE#;
      407     4694    2   /**/ SHARESF = %NONE#;
      408     4695    2   /**/ FSA_FLAG = %YES#; /* Fast seq access  = yes */
      409     4696    2   /**/ BUFSF = VECTOR(FSA_WORK);
      410     4697    2   /**/ FIDSF = JRNL_NAME;
      411     4698    2       CALL SYS_FUNC_OPEN ALTRET(ALT_OPEN);
      412     4699    2       RETURN;
      413     4700    2   ALT_OPEN:
      414     4701    2       ALTRETURN;
      415     4702    2   END OPEN_JOURNAL;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:15   
      416     4703        /*
      417     4704        */
      418     4705    1   OPEN_ROLLFID: PROC ALTRET;
      419     4706
      420     4707    2   /**/ DCBSF = M_RLBK.DCB#;
      421     4708    2   /**/ ORGSF = %CONSEC#;
      422     4709    2   /**/ ACSSF = %SEQUEN#;
      423     4710    2   /**/ ASNSF = %FILE#;
      424     4711    2   /**/ SHARESF = %NONE#;
      425     4712    2   /**/ FIDSF = '*ROLL';
      426     4713    2   /**/ REASGNSF = %YES#;
      427     4714    2       CALL SYS_FUNC_OPEN ALTRET(ALT_OPEN);
      428     4715    2       RETURN;
      429     4716    2   ALT_OPEN:
      430     4717    2       ALTRETURN;
      431     4718    2   END OPEN_ROLLFID;
      432     4719        /*
      433     4720        */
      434     4721    1   CLOS_JRNL_ROLL: PROC ALTRET;
      435     4722    2   /**/ DCBSF = M_JRNL.DCB#;
      436     4723    2   /**/ FSA_FLAG = %YES#; /* Fast seq access flag */
      437     4724    2       CALL SYS_FUNC_CLOS;
      438     4725    2   /**/ DCBSF = M_RLBK.DCB#;
      439     4726    2       CALL SYS_FUNC_CLOS;
      440     4727    2       RETURN;
      441     4728    2   END CLOS_JRNL_ROLL;
      442     4729        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:16   
      443     4730        /*
      444     4731                 PRESCN     REPORT   ON  ANY   BAD   FILES
      445     4732        */
      446     4733    1   PRESCN_REPORT: PROC ALTRET;
      447     4734
      448     4735    2       IF BAD_FILE = %YES# THEN /* Unable to open one of the fids*/
      449     4736    3       DO;
      450     4737         /*E* ERROR: ZIU-DBU#RFILE-C
      451     4738                    MESSAGE: .
      452     4739                             The above errored file(s) must be made available before
      453     4740                             the ROLL utility can process them.            */
      454     4741    3           ERRCODESF.ERR# = DBU#RFILE;
      455     4742    3           ERRFLGSF = 4;
      456     4743    3           MSGCODE = ERRCODE_RDEF;
      457     4744    3           CALL SYS_FUNC_ERRMSG;
      458     4745    3           ALTRETURN;
      459     4746    3           END;
      460     4747    3       ELSE DO;
      461     4748         /*E* ERROR: ZIU-DBU#RPSCN-C
      462     4749                    MESSAGE:
      463     4750                 =========== PRESCAN COMPLETED - NO ERRORS DETECTED ===========
      464     4751                 */
      465     4752    3           ERRCODESF.ERR# = DBU#RPSCN;
      466     4753    3           ERRFLGSF = 0;
      467     4754    3           MSGCODE = ERRCODE_RDEF;
      468     4755    3           CALL SYS_FUNC_ERRMSG;
      469     4756    3           RETURN;
      470     4757    3           END;
      471     4758
      472     4759    2   END PRESCN_REPORT;
      473     4760        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:17   
      474     4761        /*
      475     4762                 CLOSE OPEN DCBS AND PRINT FILE REPORT.
      476     4763        */
      477     4764    1   CLEAN_HOUSE: PROC ALTRET;
      478     4765
      479     4766    2       CALL CLOS_JRNL_ROLL;
      480     4767    2       CALL FLUSH_BUFFERS;
      481     4768
      482     4769    3       DO X = 1 TO 511;
      483     4770    3           IF USER.SYSID(X) ~= 0 THEN
      484     4771    4           DO;
      485     4772         /*E* ERROR: ZIU-DBU#RSYSCHK-C
      486     4773                       MESSAGE: SYSID# %U1 rolled to checkpoint number %U2 %U3. */
      487     4774    4               ERR_INSERT.CNT(0) = 6;
      488     4775    4               CALL BINCHAR(ERR_INSERT.TEXT(0),USER.SYSID(X));
      489     4776    4               CALL ZERO_SUP(ERR_INSERT.TEXT(0),32,'1'B);
      490     4777    4               IF USER.CHKPT_NO(X) < 0 THEN
      491     4778    5               DO; /* Must be an ids assigned chkpt no. */
      492     4779    5                   USER.CHKPT_NO(X) = 0 - USER.CHKPT_NO(X);
      493     4780    5                   ERR_INSERT.CNT(2) = 14;
      494     4781    5                   ERR_INSERT.TEXT(2) = '(IDS Implicit)';
      495     4782    5                   END;
      496     4783    4               ELSE
      497     4784    4                   ERR_INSERT.TEXT(2) = ' ';
      498     4785    4               ERR_INSERT.CNT(1) = 12;
      499     4786    4               CALL BINCHAR(ERR_INSERT.TEXT(1),USER.CHKPT_NO(X));
      500     4787    4               CALL ZERO_SUP(ERR_INSERT.TEXT(1),32,'1'B);
      501     4788    4               ERRCODESF.ERR# = DBU#RSYSCHK;
      502     4789    4               ERRFLGSF = 1;
      503     4790    4               MSGCODE = ERRCODE_RDEF;
      504     4791    4               CALL SYS_FUNC_ERRMSG;
      505     4792    4               END;
      506     4793    3           IF USER.CGMSGID(X) ~= '0'B THEN
      507     4794    4           DO;
      508     4795         /* The user has outstanding messages in their comgroup
      509     4796            so search this user's list of files until their
      510     4797            comgroup is found and send it's dcb number to the
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:18   
      511     4798            clean house routine with the message number */
      512     4799    4               DCBX = USER.DCBINDX(X);
      513     4800    4               FIDX = DCBLIST.FIDINDX(DCBX);
      514     4801    5               DO WHILE ((DCBX ~= -1) AND (FIDLIST.ORG#(FIDX) ~= %CG#));
      515     4802    5                   DCBX = DCBLIST.NEXT(DCBX);
      516     4803    5                   IF DCBX ~= -1 THEN
      517     4804    5                       FIDX = DCBLIST.FIDINDX(DCBX);
      518     4805    5                   END;
      519     4806    4               IF DCBX ~= -1 THEN
      520     4807    5               DO;
      521     4808    6                   IF FIDLIST.DCB#(FIDX) = 0 THEN DO;
      522     4809    6                       CALL ASSOC_DCB(FIDX);
      523     4810    6                       CALL QUE_UP(FIDX);
      524     4811    6                       CALL ZIU$CGOPN(, FIDLIST.DCB#(FIDX)) ALTRET(ALTRTN);
      525     4812    6                       END;
      526     4813    5                   CALL ZIU$CGCLNUP(ADDR(USER.CGMSGID(X)),FIDLIST.DCB#(FIDX));
      527     4814    5                   END;
      528     4815    4               END;
      529     4816    3           END;
      530     4817
      531     4818         /*E* ERROR: ZIU-DBU#RREP-C
      532     4819           MESSAGE:
      533     4820                    The following files were involved in this ROLL FORWARD activity:
      534     4821                    ---------------------------------------------------------------
      535     4822           */
      536     4823    2       ERRCODESF.ERR# = DBU#RREP;
      537     4824    2       ERRFLGSF = 0;
      538     4825    2       MSGCODE = ERRCODE_RDEF;
      539     4826    2       CALL SYS_FUNC_ERRMSG;
      540     4827
      541     4828    3       DO X = 1 TO NXT_AVIL_FIDSLOT-1;
      542     4829    3           IF FIDLIST.MOD#(X) = 1 THEN
      543     4830    4           DO;
      544     4831
      545     4832         /*E* ERROR: ZIU-DBU#RREP1-C
      546     4833                 MESSAGE: File %U1.%U2 %U3            */
      547     4834    4               ERR_INSERT(0) = FIDLIST.NAME(X);
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:19   
      548     4835    4               ERR_INSERT.CNT(1) = 8;
      549     4836    4               ERR_INSERT.TEXT(1) = FIDLIST.ACCNT#(X);
      550     4837    4               IF FIDLIST.PACK#(X) = '   ' THEN
      551     4838    5               DO;
      552     4839    5                   ERR_INSERT.CNT(2) = 0;
      553     4840    5                   ERR_INSERT.TEXT(2) = ' ';
      554     4841    5                   END;
      555     4842    5               ELSE DO;
      556     4843    5                   ERR_INSERT.CNT(2) = 18;
      557     4844    5                   CALL CONCAT(ERR_INSERT.TEXT(2),'on packset ',
      558     4845    5                      FIDLIST.PACK#(X) );
      559     4846    5                   END;
      560     4847    4               ERRCODESF.ERR# = DBU#RREP1;
      561     4848    4               ERRFLGSF = 1;
      562     4849    4               MSGCODE = ERRCODE_RDEF;
      563     4850    4               CALL SYS_FUNC_ERRMSG;
      564     4851    4               END;
      565     4852
      566     4853    3           IF FIDLIST.DCB#(X) > 0 THEN
      567     4854    4           DO;
      568     4855    4               DCBSF = FIDLIST.DCB#(X);
      569     4856    4               IF DCBADDR(DCBSF) -> F$DCB.FCD# = %YES# THEN
      570     4857    4                   CALL SYS_FUNC_CLOS;
      571     4858    4               CALL SYS_FUNC_RELDCB;
      572     4859    4               DCBSF = 0;
      573     4860    4               END;
      574     4861    3           END;
      575     4862
      576     4863    2       CALL FREE_DYN_MEM;
      577     4864    2   ALTRTN: RETURN;
      578     4865    2   END CLEAN_HOUSE;
      579     4866
      580     4867        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:20   
      581     4868    1   STAT_REPORT: PROC;
      582     4869
      583     4870    2       DCBSF = DCBNUM(M$LO);
      584     4871    3       DO X = 0 TO STATS# -1;
      585     4872    3           CALL BINCHAR(LINE.V(X+3),STATS(X)); /* Fill stat values */
      586     4873    3           CALL ZERO_SUP(LINE.V(X+3),14,'0'B /* Right justify */);
      587     4874    3           STATS(15) = STATS(15) + STATS(X); /* Sum total */
      588     4875    3           END;
      589     4876
      590     4877    2       CALL BINCHAR(LINE.V(STATS#+4),STATS(STATS#)); /* Fill in total */
      591     4878    2       CALL ZERO_SUP(LINE.V(STATS#+4),14,'0'B);
      592     4879
      593     4880    3       DO X = 0 TO STATS# +4;
      594     4881    3           BUFSF = VECTOR(LINE(X));
      595     4882    3           VFCSF = %YES#;
      596     4883    3           BUFLNSF = 29;
      597     4884    3           CALL SYS_FUNC_WRIT;
      598     4885    3           END;
      599     4886
      600     4887    2       RETURN;
      601     4888    2   END STAT_REPORT;
      602     4889        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:21   
      603     4890    1   ALT_ROLL:
      604     4891    1       CALL CLOS_JRNL_ROLL;
      605     4892    2       DO X = 1 TO NXT_AVIL_FIDSLOT-1; /* Close all open dcbs */
      606     4893    2           IF FIDLIST.DCB#(X) > 0 THEN
      607     4894    3           DO;
      608     4895    3               DCBSF = FIDLIST.DCB#(X);
      609     4896    3               IF DCBADDR(DCBSF) -> F$DCB.FCD# = %YES# THEN
      610     4897    3                   CALL SYS_FUNC_CLOS;
      611     4898    3               END;
      612     4899    2           END;
      613     4900         /*E* ERROR: ZIU-DBU#RABRT-C
      614     4901              MESSAGE: ROLL FORWARD activity is aborting.   */
      615     4902    1       ERRCODESF.ERR# = DBU#RABRT;
      616     4903    1       MSGCODE = ERRCODE_RDEF;
      617     4904    1       CALL SYS_FUNC_ERRMSG;
      618     4905    1   ALTRTN:
      619     4906    1       ALTRETURN;
      620     4907
      621     4908    1   END ZIU$ROLL;

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:22   
--  Include file information  --

   ZL_MACRO_C.:TOOLE05  is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   ZI$JRNL.:ZIC0TOU  is referenced.
   ZI_ROLL_STATS.:ZIC0TOU  is referenced.
   ZI_DBU_ROLL.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$ROLL.

   Procedure ZIU$ROLL requires 692 words for executable code.
   Procedure ZIU$ROLL requires 2060 words of local(AUTO) storage.

    No errors detected in file ZIU$ROLL.:ZIC0TSI    .

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:23   

 Object Unit name= ZIU$ROLL                                   File name= ZIU$ROLL.:ZIC0TOU
 UTS= SEP 05 '97 13:30:31.44 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none  4086   7766  ZIU$ROLL
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$UC
    3  RoData even  UTS     17     21  ZIU$ROLL
    4   Proc  even  none   692   1264  ZIU$ROLL
    5  RoData even  none    49     61  ZIU$ROLL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        0  ZIU$ROLL
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:24   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0     11  M_JRNL                             0     14  M_RLBK
    0     17  JRNL_BUF                           0   2017  BAD_FILE
    0   2030  ROLL_CMPLT_TIME                    0   2031  FID$
    0   2032  DCBLIST$                           0   2033  USER$
    0   2034  FID_INDXS$                         0   2035  FID_INDXS
    0   2435  NXT_AVIL_FIDSLOT                   0   2436  NXT_AVIL_DCBSLOT
    0   2437  LAST_UNUSED_DCBSLOT                0   2440  USER
    0   7440  NO                                 0   7443  FIRST
    0   7444  LAST                               0   7445  MAX_DCBINDX
    0   7446  MAX_FIDINDX                        0   7447  FIDX
    0   7450  DCBX                               0   7451  BRK_ROLL
    0   7453  STCNT                              0   7714  JRNL$

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          Async      0 ZIU$EVENT
 yes     yes           Std       2 ZIU$PRESCN
 yes     yes           Std       2 SET_BUFS
 yes     yes           Std       0 INIT_BUFTBL
 yes     yes           Std       2 ZIU$WRTROL
 yes     yes           Std       0 SYS_FUNC_CLOS
 yes     yes           Std       1 X$SORT
 yes     yes           Std       0 ZIU$PRJRNL
 yes     yes           Std       0 SYS_FUNC_ERRMSG
 yes     yes           Std       2 CREATE_TBL_SEG
 yes     yes           Std       0 SYS_FUNC_TSTAMP
 yes     yes           Std       0 SYS_FUNC_GETDCB
         yes           Std       0 ZIU$SRTDCB
 yes     yes           Std       0 SYS_FUNC_OPEN
 yes     yes           Std       0 FLUSH_BUFFERS
         yes           Std       1 QUE_UP
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:25   
 yes     yes           Std       2 ZIU$CGOPN
 yes     yes           Std       0 SYS_FUNC_RELDCB
 yes     yes           Std       0 FREE_DYN_MEM
         yes           Std       3 ZERO_SUP
 yes     yes           Std       2 ZIU$CGCLNUP
 yes     yes           Std       1 ASSOC_DCB
 yes     yes           Std       0 SYS_FUNC_WRIT
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ZI$DIR                                SCHEMA_ACTIVE                         RECORD_LIST
     SET_LIST                              RETAIN_LIST                           DUMP_FID
     ALTKY                                 INIT_RG                               KEY_RNG
     ITEM_LIST                             BLKLSF                                KEYLSF
     KEYXSF                                DCBSF                                 ORGSF
     KEYSF                                 KEYVSF                                ACSSF
     NOTIMESF                              FUNSF                                 ASNSF
     TESTSF                                XTENSIZESF                            DISPSF
     WAITSF                                VFCSF                                 FULLSF
     BKUPSF                                BUFLNSF                               BUFSF
     SOURCESF                              DESTSF                                DATESF
     TIMESF                                UTSSF                                 DAYSF
     TSTAMPSF                              ENCRP_SEEDSF                          ERRCODESF
     MSGCODE                               INCL_ERR                              ERR_INSERT
     FIDSF_RD                              ACNT                                  EXISTSF
     SHARESF                               DCBNMSF                               KEYRSF
     NO_KEYSF                              REASGNSF                              CARRY_ATTRIBUTESF
     SUBMESSF                              SPKY_OPNSF                            POSSF
     ERRFLGSF                              MERGESF                               FSA_FLAG
     RELGSF                                UNUSED                                HELPCODE
     COUNTSF                               INDEXSF                               GAP
     PSNSF                                 ACNTSF                                KEY_SHADWSF
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:26   
     REC$                                  RB                                    RE
     IE                                    IB                                    CNT
     ICNT                                  RCNT                                  SCNT
     FIRST_SET                             RETCNT                                DMPCNT
     KCNT                                  ACNT_IDX                              I
     J                                     K                                     X
     STEPCC                                I_O_BUF$                              OUT_INDX
     I_O_SIZE                              REC_DATA_LN                           M$LO
     B$TCB$                                B$ROS$                                B$JIT$
     KEYFID                                I_O_KEY                               RESTART
     BREAK_FLAG                            ICHKSUM                               ITMCNT
     GAP1                                  M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:27   


        1        1        /*M* ZIU$ROLL         IDSII    DRIVER FOR ROLL FOWARD UTILITY      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*P*
        9        9           NAME: ZIU$ROLL
       10       10        PURPOSE: TO RECONSTRUCT A DATA BASE(S) FROM A COMMON JOURNAL.
       11       11           DATE: 3/80         D.F. HANRAHAN
       12       12
       13       13                          DATA BASE ROLL FORWARD
       14       14              Roll forward utility consist of several moduals for the purpose
       15       15           of reconstructing the data base(s) from a common journal. The process
       16       16           must start with the user loading his data base from a dump and then
       17       17           using the roll forward utility to reconstruct the data modifications
       18       18           that occurr in the journal.
       19       19
       20       20              The entire process is performed with two passes of the common
       21       21           journal. The first pass builds a table of all the files it will
       22       22           need to access in order to make the updates. The inability to access
       23       23           any of the files is cause to abort the acitivity. Also in this first
       24       24           pass (called PRESCAN) each user is checked for roll back intervals.
       25       25           When such at interval is found (defined by a roll back journal record)
       26       26           then all journal records recieved since that users last check point
       27       27           are to be ignored. When a roll back record is encountered, the prescan
       28       28           processor will write a time stamp of that users last checkpoint to a
       29       29           file followed by the user number. When the end of the journal is
       30       30           encountered this file is sorted by time so that there is a sorted
       31       31           file of times in which each rollback interval starts for each user.
       32       32
       33       33              The second pass of the journal (program ZIU$PRJRNL) then applies
       34       34           the journal updates and ignores all journal records (except those
       35       35           which open files) that fill within a rollback interval. That interval
       36       36           is identified by reading the sorted file to get a rollback start time,
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:28   
       37       37           and terminating the interval when a rollback record for that user is
       38       38           read from the journal.
       39       39
       40       40              Here are the various type of journal records and the action taken
       41       41           by the ZIU$PRJRNL module.
       42       42
       43       43              FID - A user opens this FID and is given a FIDID. This FIDID is
       44       44           used to identify by number this fid. ie. If this is the third file
       45       45           this user opened then this user will have a fidid of 3 assigned to
       46       46           him which will by link list attach that fidid to this fid.
       47       47
       48       48              MOD - Contains a user#,fidid,page and line#, and an after image
       49       49           of the record that was modified.
       50       50
       51       51              DEL - Contains the same info as MOD only it includes the nessary info
       52       52              for deleting the record.
       53       53
       54       54              STO - same as above only for a store.
       55       55
       56       56              SUM - This record passed the same user and fid info as above only it
       57       57              passes an after image checksum value of a page that has modified by
       58       58              a delete, store or modify. This serves as a check that the page has
       59       59              been reconstructed properly.
       60       60
       61       61              MSET- This is a type of modify to a page that modifies set pointers.
       62       62              It simply passes a bit character string that is to be user to over
       63       63              write data in the given page.
       64       64
       65       65              BGN & END - Begin and ending records that mark a user starting and ending
       66       66              a job.
       67       67
       68       68              CHK - This record marks a time for a user "clean point" or checkpoint.
       69       69
       70       70                       The following is a breakdown on the modules and there functions.
       71       71
       72       72              ZIU$ROLL -
       73       73                 This module is the driver to roll foward utility. It get dynamic memory
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:29   
       74       74              for the tables and initializes them as well as controls the dcbs for the
       75       75              journal and the sort file. This module also invokes sort using the
       76       76              ZIU$PRESCN module for the prescn process and ZIU$WRTROL procedure as
       77       77              the output procedure.
       78       78
       79       79              ZIU$PRESCN -
       80       80                 Input procedure to sort. Builds a file of user rollback start interval
       81       81              times, and builds a table of FIDs required to be roll forward.
       82       82
       83       83              ZIU$WRTROL -
       84       84                 Output routine from sort. Writes the rollback file (M$RLBK dcb) out
       85       85              in sorted order.
       86       86
       87       87              ZIU$PRJRNL -
       88       88                 This routine is the driver for the second scan of the journal. It
       89       89              applies the MOD,DEL,STO and SUM records described above. At the same
       90       90              time it fills a user table with roll back interval times read from
       91       91              the sorted file. If the time stamp on a journal record falls in
       92       92              a rollback interval for that user then the journal record is not
       93       93              applied.
       94       94
       95       95              ZIU$RPLY -
       96       96                 This module does the actual updating to the data base using the
       97       97              information found in the journal record. It has an entry point for
       98       98              each process that it may be asked to do. For example, if a store
       99       99              record was encountered by ZIU$PRJRNL then ZIU$PRJRNL will call
      100      100              ZIU$RPLY at entry point PROCESS_STO. ZIU$RPLY will then read
      101      101              the page (stealing a dcb from another file if neccessary), perform
      102      102              the store, rebuild header information and write the page back out.
      103      103
      104      104              ZIU$GETDYN -
      105      105                 This module gets and expands memory for the tables each time its
      106      106              called until it runs out of memory at which time it altreturns.
      107      107
      108      108              ZIU$ASSDCB -
      109      109                 This module has the entry point called ASSOC_DCB. When called
      110      110              it will try to get a dcb for the fid passed with the M$GETDCB
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:30   
      111      111              service. If for any reason it can't get a dcb it will take the
      112      112              dcb that has been least recently used and close it then give
      113      113              that dcb to the fid requested.
      114      114
      115      115              ZIU$DCBMGR -
      116      116                 This module has multiple entry points used to keep track of a
      117      117              user's fidid and the dcb (actually the fid) that the fidid refers
      118      118              to. Entry point STR_USER_FIDID (USER_NUM,FID-ID,INDX) will store
      119      119              the fid id passed in a linked list for that user. The indx is the
      120      120              index to the fid table where the actual fid info is stored and is
      121      121              stored with the fid id. Entry point FIND_USER-FIDID(USER_NUM,FID-ID,
      122      122              INDX) returns the indx to the fid table where fid info for a
      123      123              user's fidid is stored. Entry point DEL_USER_FIDS(USER_NUM) is used
      124      124              to delete the users file assocations by fidid and free the table
      125      125              space for other users.
      126      126
      127      127              ZIU$QUEMGR -
      128      128                 This module has three entry points used to keep current the least
      129      129              recently used dcb by means of a que. Each time a file is open, or
      130      130              written to the file is placed(logiclly) and the end of a que. At
      131      131              any point in time the last used dcb belongs to the fid which is
      132      132              stored first in the que. Entry point QUE_UP(INDX) adds and stores
      133      133              last the file id index in the INDX param. Entry point DE_QUE(INDX)
      134      134              will remove a fid entry from the que (used when the fid looses its
      135      135              dcb). Last, entry point QUE_LAST(INDX) is called after each write
      136      136              to but a fid (and its dcb) last in the que.
      137      137
      138      138              ZIU$HASHFID -
      139      139                 This module consist of two entry points and a hashing algorithm.
      140      140              Entry point STORE_FID(FILENAME,FILEACCT,INDX) stores the file info
      141      141              in the journal record in the next avail slot in the fid table.
      142      142              First however, the fid is hashed to a value and that value is used
      143      143              as an indx to store the table location of this fid into yet another
      144      144              table. This gives the capability of allowing the fid table to not
      145      145              be fixed in size and yet still be able to hash the fid to a table
      146      146              location. Entry point FIND_FID(FILENAME,FILEACCT,INDX) will use
      147      147              the name and account to hash a value, go to the hash table with
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:31   
      148      148              that value and look up the indx to the fid table for the fid and
      149      149              check against collisions until it finds the correct fid table indx.
      150      150                                                                            */
      151      151        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:32   
      152      152        ZIU$ROLL: PROC ALTRET;

    152  4 000000   000000 700200 xent  ZIU$ROLL     TSX0  ! X66_AUTO_0
         4 000001   004014 000000                    ZERO    2060,0

      153      153    1   DCL 1 SORT_KEY STATIC ALIGNED,
      154      154    1         2 COUNT UBIN WORD INIT(1),
      155      155    1         2 ITEM (0:1),
      156      156    1           3 POSITION CHAR(2) UNAL INIT('01'*0),
      157      157    1           3 KEY_TYPE CHAR(2) UNAL INIT('AN'*0),
      158      158    1           3 STARTING UBIN WORD INIT(1*0),
      159      159    1           3 LENGTH UBIN WORD INIT(5*0),
      160      160    1           3 START_CODE UBIN(5) INIT(0*0) UNAL,
      161      161    1           3 LENGTH_CODE UBIN(4) INIT(0*0) UNAL,
      162      162    1           3 ORDERING CHAR(1) INIT('A'*0) UNAL,
      163      163    1           3 TRANS_CODE CHAR(2) INIT('  '*0) UNAL;
      164      164
      165      165    1   DCL 1 M_JRNL STATIC SYMDEF ALIGNED,
      166      166    1         2 N,
      167      167    1           3 L UBIN BYTE UNAL INIT(7),
      168      168    1           3 C CHAR(7) UNAL INIT('JOURNAL'),
      169      169    1         2 DCB# UBIN HALF UNAL;
      170      170    1   DCL 1 M_RLBK STATIC SYMDEF ALIGNED,
      171      171    1         2 N,
      172      172    1           3 L UBIN BYTE UNAL INIT(6),
      173      173    1           3 C CHAR(7) UNAL INIT('M$RLBK'),
      174      174    1         2 DCB# UBIN HALF UNAL;
      175      175
      176      176    1   DCL 1 JRNL_BUF STATIC SYMDEF ALIGNED, /* INPUT BUFFER JRNL */
      177      177    1         2 VAL CHAR(4096) UNAL;
      178      178    1   DCL FSA_WORK (0:1) CHAR(4096) ALIGNED;
      179      179         /* Work area for FSA  de-blocking (XSA routines ) */
      180      180
      181      181    1   DCL BAD_FILE BIT(1) UNAL STATIC SYMDEF INIT('0'B);
      182      182
      183      183    1   DCL JRNL_NAME CHAR(32) STATIC INIT('JOURNAL ');
      184      184    1   DCL ROLL_CMPLT_TIME UBIN WORD STATIC SYMDEF ALIGNED;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:33   
      185      185    1   DCL WAIT_COUNT SBIN;
      186      186
      187      187         %INCLUDE ZI$DIR;
      188      344         %DIR;
      189      488         %INCLUDE ZI_GLOBAL_DBUTIL;
      190      666         %SYS_FUNC;
      191      758         %MISC_DCLS;
      192      811         %INCLUDE ZI_DBU_ROLL;
      193      895         %ROLL_SUBS;
      194      914         %ROLL_LIST(STCLASS="STATIC SYMDEF");
      195      973         %INCLUDE ZI_ROLL_STATS;
      196     1094         %CNTERS;
      197     1115         %OUTLINE;
      198     1201         %INCLUDE ZI$JRNL;
      199     1309         %JRNL_REC(STCLASS="STATIC SYMDEF");
      200     1384
      201     1385         %INCLUDE CP_6_SUBS;
      202     1925         %INCLUDE ZI_ERRORS_SUBS;
      203     2445         %INCLUDE CP_6;
      204     2526        %INCLUDE B_ERRORS_C;
      205     3653         %FPT_EVENT(UENTRY=ZIU$EVENT);
      206     3667         %FPT_WAIT(FPTN=WAIT_JRNL,STCLASS=CONSTANT,UNITS=20);
      207     3681         %F$DCB;
      208     3738         %INCLUDE ZL_MACRO_C;
      209     4388         %SORT_TABLE(INSIZ=5,
      210     4389         OUTSIZ=5,
      211     4390         PARTSIZ=5,
      212     4391         ICE=ZIU$PRESCN,
      213     4392         OCE=ZIU$WRTROL,
      214     4393         KEYS=SORT_KEY,
      215     4394         STAT=YES,
      216     4395         DMP='D');
      217     4504
      218     4505
      219     4506
      220     4507    1   DCL ZIU$EVENT ENTRY ASYNC;
      221     4508    1   DCL ZIU$SRTDCB ENTRY;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:34   
      222     4509    1   DCL X$SORT ENTRY(1) ALTRET;
      223     4510    1   DCL ZIU$PRJRNL ENTRY ALTRET;
      224     4511    1   DCL ZIU$PRESCN ENTRY(2) ALTRET;
      225     4512    1   DCL ZIU$WRTROL ENTRY(2) ALTRET;
      226     4513    1   DCL CREATE_TBL_SEG ENTRY(2) ALTRET;
      227     4514    1   DCL EXPAND_TBL_SEG ENTRY(2) ALTRET;
      228     4515    1   DCL ZERO_SUP ENTRY(3);
      229     4516    1   DCL FREE_DYN_MEM ENTRY ALTRET;
      230     4517    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
      231     4518    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
      232     4519    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      233     4520    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
      234     4521    1   DCL SYS_FUNC_TSTAMP ENTRY ALTRET;
      235     4522    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      236     4523    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      237     4524    1   DCL INIT_BUFTBL ENTRY ALTRET;
      238     4525    1   DCL FLUSH_BUFFERS ENTRY ALTRET;
      239     4526    1   DCL SET_BUFS ENTRY(2) ALTRET;
      240     4527    1   DCL ZIU$CGCLNUP ENTRY(2) ALTRET;
      241     4528    1   DCL ZIU$CGOPN ENTRY(2) ALTRET;
      242     4529    1   DCL ASSOC_DCB ENTRY(1) ALTRET;
      243     4530    1   DCL QUE_UP ENTRY(1);
      244     4531
      245     4532        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:35   
      246     4533        /*
      247     4534                               P r o c e d u r e
      248     4535        */
      249     4536    1       REMEMBER ALT_ROLL IN BRK_ROLL; /* BREAK CONTROL LABEL */

   4536  4 000002   001222 635000 4                  EAA     ALT_ROLL
         4 000003   007451 452400 0                  STP2    BRK_ROLL
         4 000004   007452 755000 0                  STA     BRK_ROLL+1

      250     4537    1       CALL M$EVENT(FPT_EVENT);

   4537  4 000005   007716 630400 0                  EPPR0   FPT_EVENT
         4 000006   010001 713400                    CLIMB   4097
         4 000007   400000 401760                    pmme    nvectors=1

      251     4538    1       CALL INIT_ALL_TBLS ALTRET(ALT_ROLL);

   4538  4 000010   000125 701000 4                  TSX1    INIT_ALL_TBLS
         4 000011   001222 702000 4                  TSX2    ALT_ROLL

      252     4539    1       CALL GET_DCBS ALTRET(ALT_ROLL);

   4539  4 000012   000335 701000 4                  TSX1    GET_DCBS
         4 000013   001222 702000 4                  TSX2    ALT_ROLL

      253     4540    1       WAIT_COUNT = 0;

   4540  4 000014   204003 450100                    STZ     WAIT_COUNT,,AUTO

   4540  4 000015                       RETRY_JRNL_* null
      254     4541    1   RETRY_JRNL_OPEN:;
      255     4542    1       CALL OPEN_JOURNAL

   4542  4 000015   000365 701000 4                  TSX1    OPEN_JOURNAL
         4 000016   000020 702000 4                  TSX2    s:4544
         4 000017   000050 710000 4                  TRA     s:4562

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:36   
      256     4543    2       WHENALTRETURN DO;

      257     4544    2           WAIT_COUNT = WAIT_COUNT + 1;

   4544  4 000020   204003 054100                    AOS     WAIT_COUNT,,AUTO

      258     4545    2           IF MONITOR_ERR.ERR# ~= %E$FILEBUSY OR

   4545  4 000021   000000 236000 xsym               LDQ     MSGCODE
         4 000022   377770 376007                    ANQ     131064,DL
         4 000023   001550 116007                    CMPQ    872,DL
         4 000024   001222 601000 4                  TNZ     ALT_ROLL
         4 000025   204003 235100                    LDA     WAIT_COUNT,,AUTO
         4 000026   000036 115007                    CMPA    30,DL
         4 000027   001222 605400 4                  TPNZ    ALT_ROLL

      259     4546    2              WAIT_COUNT > 30 /* 10 minutes of 20 second intervals */
      260     4547    2           THEN
      261     4548    2               GOTO ALT_ROLL;
      262     4549        /*E*
      263     4550        ERROR: ZIU-DBU#WAITING
      264     4551        MESSAGE: Waiting... (Use BREAK to quit).
      265     4552        */
      266     4553    2           ERRCODESF.ERR# = DBU#WAITING;

   4553  4 000030   000000 236000 xsym               LDQ     ERRCODESF
         4 000031   000000 376000 5                  ANQ     0
         4 000032   214770 276007                    ORQ     72184,DL
         4 000033   000000 756000 xsym               STQ     ERRCODESF

      267     4554    2           MONITOR_ERR = ERRCODESF;

   4554  4 000034   000000 236000 xsym               LDQ     ERRCODESF
         4 000035   000000 756000 xsym               STQ     MSGCODE

      268     4555    2           CALL SYS_FUNC_ERRMSG;

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:37   
   4555  4 000036   000001 631400 5                  EPPR1   1
         4 000037   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000040   000000 011000                    NOP     0

      269     4556    2           CALL M$WAIT(WAIT_JRNL);

   4556  4 000041   000000 630400 3                  EPPR0   WAIT_JRNL
         4 000042   020006 713400                    CLIMB   8198
         4 000043   400400 401760                    pmme    nvectors=2

      270     4557    2           IF BREAK_FLAG ~= 0

   4557  4 000044   000000 235000 xsym               LDA     BREAK_FLAG
         4 000045   000047 600000 4                  TZE     s:4560

      271     4558    2           THEN
      272     4559    2               RETURN;

   4559  4 000046   000000 702200 xent               TSX2  ! X66_ARET

      273     4560    2           GOTO RETRY_JRNL_OPEN;

   4560  4 000047   000015 710000 4                  TRA     RETRY_JRNL_OPEN

      274     4561    2           END;
      275     4562    1   /**/ FUNSF = %CREATE#;

   4562  4 000050   000003 235007                    LDA     3,DL
         4 000051   000000 755000 xsym               STA     FUNSF

      276     4563    1       CALL OPEN_ROLLFID ALTRET(ALT_ROLL); /* Used to sort roll intervals.*/

   4563  4 000052   000422 701000 4                  TSX1    OPEN_ROLLFID
         4 000053   001222 702000 4                  TSX2    ALT_ROLL

      277     4564
      278     4565    1       CALL X$SORT(SORT_TABLE) ALTRET(ALT_ROLL); /*Input proc to sort= journl
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:38   

   4565  4 000054   000003 630400 5                  EPPR0   3
         4 000055   000002 631400 5                  EPPR1   2
         4 000056   000000 701000 xent               TSX1    X$SORT
         4 000057   001222 702000 4                  TSX2    ALT_ROLL

      279     4566         prescan and output routine is
      280     4567         writing of roll intrvl recs */
      281     4568    1   /**/ POSSF = %PTV#; /* Rewind put dont release tape */

   4568  4 000060   004000 236003                    LDQ     2048,DU
         4 000061   000000 756000 xsym               STQ     POSSF

      282     4569    1       CALL CLOS_JRNL_ROLL ALTRET(ALT_ROLL);

   4569  4 000062   000447 701000 4                  TSX1    CLOS_JRNL_ROLL
         4 000063   001222 702000 4                  TSX2    ALT_ROLL

      283     4570
      284     4571    1       CALL PRESCN_REPORT ALTRET(ALTRTN); /* Print success of prescn */

   4571  4 000064   000466 701000 4                  TSX1    PRESCN_REPORT
         4 000065   001263 702000 4                  TSX2    ALTRTN

      285     4572    1   /**/ FUNSF = %IN#;

   4572  4 000066   000002 235007                    LDA     2,DL
         4 000067   000000 755000 xsym               STA     FUNSF

      286     4573    1       CALL OPEN_ROLLFID ALTRET(ALT_ROLL);

   4573  4 000070   000422 701000 4                  TSX1    OPEN_ROLLFID
         4 000071   001222 702000 4                  TSX2    ALT_ROLL

      287     4574    1       CALL OPEN_JOURNAL ALTRET(ALT_ROLL);

   4574  4 000072   000365 701000 4                  TSX1    OPEN_JOURNAL
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:39   
         4 000073   001222 702000 4                  TSX2    ALT_ROLL

      288     4575    1       CALL SET_BUFS(,255); /* Try to get max number of buffers */

   4575  4 000074   000007 236000 5                  LDQ     7
         4 000075   000005 235000 5                  LDA     5
         4 000076   204010 757100                    STAQ    WAIT_COUNT+5,,AUTO
         4 000077   204010 630500                    EPPR0   WAIT_COUNT+5,,AUTO
         4 000100   000004 631400 5                  EPPR1   4
         4 000101   000000 701000 xent               TSX1    SET_BUFS
         4 000102   000000 011000                    NOP     0

      289     4576    1       CALL INIT_BUFTBL; /* INITIALIZE I/O  BUFFER MANAGER */

   4576  4 000103   000001 631400 5                  EPPR1   1
         4 000104   000000 701000 xent               TSX1    INIT_BUFTBL
         4 000105   000000 011000                    NOP     0

      290     4577    1       CALL ZIU$PRJRNL ALTRET(ALT_ROLL); /* Start applying journal */

   4577  4 000106   000001 631400 5                  EPPR1   1
         4 000107   000000 701000 xent               TSX1    ZIU$PRJRNL
         4 000110   001222 702000 4                  TSX2    ALT_ROLL

      291     4578
      292     4579    1       CALL CLEAN_HOUSE ALTRET(ALT_ROLL); /* Release DCBS and MEMORY */

   4579  4 000111   000521 701000 4                  TSX1    CLEAN_HOUSE
         4 000112   001222 702000 4                  TSX2    ALT_ROLL

      293     4580    1       CALL SET_BUFS(,32); /* REset number of buffers to 32 */

   4580  4 000113   000011 236000 5                  LDQ     9
         4 000114   000005 235000 5                  LDA     5
         4 000115   204010 757100                    STAQ    WAIT_COUNT+5,,AUTO
         4 000116   204010 630500                    EPPR0   WAIT_COUNT+5,,AUTO
         4 000117   000004 631400 5                  EPPR1   4
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:40   
         4 000120   000000 701000 xent               TSX1    SET_BUFS
         4 000121   000000 011000                    NOP     0

      294     4581    1       CALL STAT_REPORT; /* Print journal stats */

   4581  4 000122   001114 701000 4                  TSX1    STAT_REPORT
         4 000123   000000 011000                    NOP     0

      295     4582    1       RETURN;

   4582  4 000124   000000 702200 xent               TSX2  ! X66_ARET

      296     4583
      297     4584        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:41   
      298     4585        /*------------------------------------------------------------------
      299     4586                 INITIALIZE  THE  DCB  AND  FILE  INFO  TABLES
      300     4587        --------------------------------------------------------------------*/
      301     4588    1   INIT_ALL_TBLS: PROC ALTRET;

   4588  4 000125   204004 741300       INIT_ALL_TB* STX1  ! WAIT_COUNT+1,,AUTO

      302     4589        /*
      303     4590           This routine initializes the basic tables used by roll (defined
      304     4591           in ZI_DBU_ROLL). Two of the tables (FIDLIST & DCBLIST) are built
      305     4592           in dynamic memory so they may grow as required. The other two
      306     4593           tables (USER & FID_INDXS) are constant in size but are still based
      307     4594           structures. I do this so that I can use memory reserved for I/O
      308     4595           in other utilities, to build the tables in for this utility. The
      309     4596           two tables require 1.75 K. (1536 words for USER and 206 for FID_INDXS)
      310     4597           So I used the last two I/O buffers for this. (Any 2 consec buffers
      311     4598           could be used.
      312     4599        */
      313     4600
      314     4601    2   INIT_FIDLIST:
      315     4602    2       CALL CREATE_TBL_SEG(FID$,FIDLST#) ALTRET(ALTRTN);

   4602  4 000126   000013 630400 5     INIT_FIDLIST EPPR0   11
         4 000127   000004 631400 5                  EPPR1   4
         4 000130   000000 701000 xent               TSX1    CREATE_TBL_SEG
         4 000131   000333 702000 4                  TSX2    ALTRTN

      316     4603    3       DO X = 1 TO 59; /* 60 = # entries fitting in 1 page memory */

   4603  4 000132   000001 235007                    LDA     1,DL
         4 000133   000000 755000 xsym               STA     X

      317     4604    3           FIDLIST.DCB#(X) = 0;

   4604  4 000134   000000 236000 xsym               LDQ     X
         4 000135   000021 402007                    MPY     17,DL
         4 000136   000000 220003                    LDX0    0,DU
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:42   
         4 000137   002031 470400 0                  LDP0    FID$
         4 000140   000017 740106                    STX0    15,QL,PR0

      318     4605    3           FIDLIST.NXTFID(X) = -1;

   4605  4 000141   000000 236000 xsym               LDQ     X
         4 000142   000021 402007                    MPY     17,DL
         4 000143   777777 221003                    LDX1    -1,DU
         4 000144   002031 470400 0                  LDP0    FID$
         4 000145   000020 441106                    SXL1    16,QL,PR0

      319     4606    3           FIDLIST.QUE.PRI(X)= -1;

   4606  4 000146   000000 236000 xsym               LDQ     X
         4 000147   000021 402007                    MPY     17,DL
         4 000150   002031 470400 0                  LDP0    FID$
         4 000151   000017 441106                    SXL1    15,QL,PR0

      320     4607    3           FIDLIST.QUE.NXT(X)= -1;

   4607  4 000152   000000 236000 xsym               LDQ     X
         4 000153   000021 402007                    MPY     17,DL
         4 000154   002031 470400 0                  LDP0    FID$
         4 000155   000020 741106                    STX1    16,QL,PR0

      321     4608    3           FIDLIST.MOD#(X) = 0;

   4608  4 000156   000000 236000 xsym               LDQ     X
         4 000157   000021 402007                    MPY     17,DL
         4 000160   002031 470400 0                  LDP0    FID$
         4 000161   000000 622006                    EAX2    0,QL
         4 000162   000015 236000 5                  LDQ     13
         4 000163   000015 356112                    ANSQ    13,X2,PR0

      322     4609    3           END;

   4609  4 000164   000000 054000 xsym               AOS     X
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:43   
         4 000165   000000 235000 xsym               LDA     X
         4 000166   000073 115007                    CMPA    59,DL
         4 000167   000134 604400 4                  TMOZ    s:4604

      323     4610    2       FIDLIST.QUE.PRI(0) = 0;

   4610  4 000170   002031 470400 0                  LDP0    FID$
         4 000171   000017 440100                    SXL0    15,,PR0

      324     4611    2       FIDLIST.QUE.NXT(0) = 0;

   4611  4 000172   002031 470400 0                  LDP0    FID$
         4 000173   000020 740100                    STX0    16,,PR0

      325     4612    2       MAX_FIDINDX = 59;

   4612  4 000174   000073 235007                    LDA     59,DL
         4 000175   007446 755000 0                  STA     MAX_FIDINDX

      326     4613    2       NXT_AVIL_FIDSLOT = 1;

   4613  4 000176   000001 222003                    LDX2    1,DU
         4 000177   002435 742000 0                  STX2    NXT_AVIL_FIDSLOT

      327     4614
      328     4615    2   INIT_DCBLIST:
      329     4616    2       CALL CREATE_TBL_SEG(DCBLIST$,DCBLST#) ALTRET(ALTRTN);

   4616  4 000200   000016 630400 5     INIT_DCBLIST EPPR0   14
         4 000201   000004 631400 5                  EPPR1   4
         4 000202   000000 701000 xent               TSX1    CREATE_TBL_SEG
         4 000203   000333 702000 4                  TSX2    ALTRTN

      330     4617    3       DO X = 0 TO 681; /* # entries fitting in 1 page memory */

   4617  4 000204   000000 450000 xsym               STZ     X

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:44   
      331     4618    3           DCBLIST.FIDINDX(X) = 0;

   4618  4 000205   000000 236000 xsym               LDQ     X
         4 000206   000006 402007                    MPY     6,DL
         4 000207   002032 470400 0                  LDP0    DCBLIST$
         4 000210   000106 101400                    MRL     fill='000'O
         4 000211   000001 000004 5                  ADSC9   1                        cn=0,n=4
         4 000212   000000 000002                    ADSC9   0,Q,PR0                  cn=0,n=2

      332     4619    3           DCBLIST.NEXT(X) = -1;

   4619  4 000213   000000 236000 xsym               LDQ     X
         4 000214   000006 402007                    MPY     6,DL
         4 000215   002032 470400 0                  LDP0    DCBLIST$
         4 000216   000106 101400                    MRL     fill='000'O
         4 000217   000020 000004 5                  ADSC9   16                       cn=0,n=4
         4 000220   000001 000002                    ADSC9   1,Q,PR0                  cn=0,n=2

      333     4620    3           DCBLIST.DCBID(X) = 0;

   4620  4 000221   000000 236000 xsym               LDQ     X
         4 000222   000006 402007                    MPY     6,DL
         4 000223   002032 470400 0                  LDP0    DCBLIST$
         4 000224   000106 101400                    MRL     fill='000'O
         4 000225   000001 000004 5                  ADSC9   1                        cn=0,n=4
         4 000226   000000 400002                    ADSC9   0,Q,PR0                  cn=2,n=2

      334     4621    3           END;

   4621  4 000227   000000 054000 xsym               AOS     X
         4 000230   000000 235000 xsym               LDA     X
         4 000231   001251 115007                    CMPA    681,DL
         4 000232   000205 604400 4                  TMOZ    s:4618

      335     4622    2       MAX_DCBINDX = 681;

   4622  4 000233   001251 236007                    LDQ     681,DL
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:45   
         4 000234   007445 756000 0                  STQ     MAX_DCBINDX

      336     4623    2       NXT_AVIL_DCBSLOT = 0;

   4623  4 000235   000000 220003                    LDX0    0,DU
         4 000236   002436 740000 0                  STX0    NXT_AVIL_DCBSLOT

      337     4624    2       LAST_UNUSED_DCBSLOT = 1;

   4624  4 000237   000001 221003                    LDX1    1,DU
         4 000240   002437 741000 0                  STX1    LAST_UNUSED_DCBSLOT

      338     4625
      339     4626    2   INIT_USER:
      340     4627    3       DO X = 0 TO NO.USERS;

   4627  4 000241   000000 450000 xsym  INIT_USER    STZ     X
         4 000242   000257 710000 4                  TRA     s:4633+1

      341     4628    3           USER.SYSID(X) = 0;

   4628  4 000243   000000 236000 xsym               LDQ     X
         4 000244   000005 402007                    MPY     5,DL
         4 000245   000000 220003                    LDX0    0,DU
         4 000246   002440 740006 0                  STX0    USER,QL

      342     4629    3           USER.DCBINDX(X) = -1;

   4629  4 000247   777777 221003                    LDX1    -1,DU
         4 000250   002440 441006 0                  SXL1    USER,QL

      343     4630    3           USER.RLBK_START(X) = HIGH_VALUE;

   4630  4 000251   000006 235000 3                  LDA     WAIT_JRNL+6
         4 000252   002441 755006 0                  STA     USER+1,QL

      344     4631    3           USER.CHKPT_NO(X) = 0;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:46   

   4631  4 000253   002442 450006 0                  STZ     USER+2,QL

      345     4632    3           USER.CGMSGID(X) = '0'B;

   4632  4 000254   002443 450006 0                  STZ     USER+3,QL
         4 000255   002444 450006 0                  STZ     USER+4,QL

      346     4633    3           END;

   4633  4 000256   000000 054000 xsym               AOS     X
         4 000257   000000 236000 xsym               LDQ     X
         4 000260   007440 116000 0                  CMPQ    NO
         4 000261   000243 604400 4                  TMOZ    s:4628

      347     4634
      348     4635    2   INIT_FID_INDXS:
      349     4636    3       DO X = 0 TO 511;

   4636  4 000262   000000 450000 xsym  INIT_FID_IN* STZ     X

      350     4637    3           FID_INDXS(X) = -1;

   4637  4 000263   000000 235000 xsym               LDA     X
         4 000264   000001 735000                    ALS     1
         4 000265   000005 101400                    MRL     fill='000'O
         4 000266   000020 000004 5                  ADSC9   16                       cn=0,n=4
         4 000267   002035 000002 0                  ADSC9   FID_INDXS,A              cn=0,n=2

      351     4638    3           END;

   4638  4 000270   000000 054000 xsym               AOS     X
         4 000271   000000 235000 xsym               LDA     X
         4 000272   000777 115007                    CMPA    511,DL
         4 000273   000263 604400 4                  TMOZ    s:4637

      352     4639
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:47   
      353     4640    2   INIT_STATS:
      354     4641    3       DO X = 0 TO STATS#;

   4641  4 000274   000000 450000 xsym  INIT_STATS   STZ     X

      355     4642    3           STATS(X) = 0;

   4642  4 000275   000000 720000 xsym               LXL0    X
         4 000276   007453 450010 0                  STZ     STCNT,X0

      356     4643    3           END;

   4643  4 000277   000000 054000 xsym               AOS     X
         4 000300   000000 235000 xsym               LDA     X
         4 000301   000017 115007                    CMPA    15,DL
         4 000302   000275 604400 4                  TMOZ    s:4642

      357     4644
      358     4645         /*
      359     4646            Set  stoping  time  for  roll  foward
      360     4647         */
      361     4648    2       IF ZI$DIR.DATEFLG THEN

   4648  4 000303   000125 236000 xsym               LDQ     ZI$DIR+85
         4 000304   200000 316003                    CANQ    65536,DU
         4 000305   000327 600000 4                  TZE     s:4658

      362     4649    3       DO;

      363     4650    3    /**/   SOURCESF = %ANS#;

   4650  4 000306   000002 235007                    LDA     2,DL
         4 000307   000000 755000 xsym               STA     SOURCESF

      364     4651    3    /**/   DESTSF = %UTS#;

   4651  4 000310   000004 235007                    LDA     4,DL
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:48   
         4 000311   000000 755000 xsym               STA     DESTSF

      365     4652    3    /**/   TIMESF = VECTOR(ZI$DIR.TIME);

   4652  4 000312   000022 237000 5                  LDAQ    18
         4 000313   000000 755000 xsym               STA     TIMESF
         4 000314   000001 756000 xsym               STQ     TIMESF+1

      366     4653    3    /**/   DATESF = VECTOR(ZI$DIR.DATE);

   4653  4 000315   000024 237000 5                  LDAQ    20
         4 000316   000000 755000 xsym               STA     DATESF
         4 000317   000001 756000 xsym               STQ     DATESF+1

      367     4654    3    /**/   TSTAMPSF = VECTOR(ROLL_CMPLT_TIME);

   4654  4 000320   000026 237000 5                  LDAQ    22
         4 000321   000000 755000 xsym               STA     TSTAMPSF
         4 000322   000001 756000 xsym               STQ     TSTAMPSF+1

      368     4655    3           CALL SYS_FUNC_TSTAMP ALTRET(ALTRTN);

   4655  4 000323   000001 631400 5                  EPPR1   1
         4 000324   000000 701000 xent               TSX1    SYS_FUNC_TSTAMP
         4 000325   000333 702000 4                  TSX2    ALTRTN

      369     4656    3           END;

   4656  4 000326   000331 710000 4                  TRA     s:4660

      370     4657    2       ELSE
      371     4658    2           ROLL_CMPLT_TIME = HIGH_VALUE;

   4658  4 000327   000006 235000 3                  LDA     WAIT_JRNL+6
         4 000330   002030 755000 0                  STA     ROLL_CMPLT_TIME

      372     4659
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:49   
      373     4660    2       RETURN;

   4660  4 000331   204004 221300                    LDX1  ! WAIT_COUNT+1,,AUTO
         4 000332   000001 702211                    TSX2  ! 1,X1

      374     4661
      375     4662    2   ALTRTN:
      376     4663    2       ALTRETURN;

   4663  4 000333   204004 221300       ALTRTN       LDX1  ! WAIT_COUNT+1,,AUTO
         4 000334   000000 702211                    TSX2  ! 0,X1

      377     4664    2   END INIT_ALL_TBLS;
      378     4665        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:50   
      379     4666        /*-------------------------------------------------------------------
      380     4667                 GET DCBS - OPEN JOURNAL - OPEN ROLLBACK SORT FILE
      381     4668        --------------------------------------------------------------------*/
      382     4669    1   GET_DCBS: PROC ALTRET;

   4669  4 000335   204004 741300       GET_DCBS     STX1  ! WAIT_COUNT+1,,AUTO

      383     4670
      384     4671    2   /**/ DCBNMSF = VECTOR(M_JRNL.N);

   4671  4 000336   000030 237000 5                  LDAQ    24
         4 000337   000000 755000 xsym               STA     DCBNMSF
         4 000340   000001 756000 xsym               STQ     DCBNMSF+1

      385     4672    2       CALL SYS_FUNC_GETDCB ALTRET(ALT_DCB);

   4672  4 000341   000001 631400 5                  EPPR1   1
         4 000342   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         4 000343   000363 702000 4                  TSX2    ALT_DCB

      386     4673    2       M_JRNL.DCB# = DCBSF;

   4673  4 000344   000000 220000 xsym               LDX0    DCBSF
         4 000345   000013 740000 0                  STX0    M_JRNL+2

      387     4674
      388     4675    2   /**/ DCBNMSF = VECTOR(M_RLBK.N);

   4675  4 000346   000032 237000 5                  LDAQ    26
         4 000347   000000 755000 xsym               STA     DCBNMSF
         4 000350   000001 756000 xsym               STQ     DCBNMSF+1

      389     4676    2       CALL SYS_FUNC_GETDCB ALTRET(ALT_DCB);

   4676  4 000351   000001 631400 5                  EPPR1   1
         4 000352   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         4 000353   000363 702000 4                  TSX2    ALT_DCB
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:51   

      390     4677    2       M_RLBK.DCB# = DCBSF;

   4677  4 000354   000000 220000 xsym               LDX0    DCBSF
         4 000355   000016 740000 0                  STX0    M_RLBK+2

      391     4678         /*  Set up scratch file dcb for sort */
      392     4679    2       CALL ZIU$SRTDCB;

   4679  4 000356   000001 631400 5                  EPPR1   1
         4 000357   000000 701000 xent               TSX1    ZIU$SRTDCB
         4 000360   000000 011000                    NOP     0

      393     4680
      394     4681    2       RETURN;

   4681  4 000361   204004 221300                    LDX1  ! WAIT_COUNT+1,,AUTO
         4 000362   000001 702211                    TSX2  ! 1,X1

      395     4682
      396     4683    2   ALT_DCB: ALTRETURN;

   4683  4 000363   204004 221300       ALT_DCB      LDX1  ! WAIT_COUNT+1,,AUTO
         4 000364   000000 702211                    TSX2  ! 0,X1

      397     4684    2   END GET_DCBS;
      398     4685        /*
      399     4686                      OPEN JOURNAL
      400     4687        */
      401     4688    1   OPEN_JOURNAL: PROC ALTRET;

   4688  4 000365   204004 741300       OPEN_JOURNAL STX1  ! WAIT_COUNT+1,,AUTO

      402     4689    2   /**/ DCBSF = M_JRNL.DCB#;

   4689  4 000366   000013 220000 0                  LDX0    M_JRNL+2
         4 000367   000000 740000 xsym               STX0    DCBSF
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:52   

      403     4690    2   /**/ ORGSF = %CONSEC#;

   4690  4 000370   000001 235007                    LDA     1,DL
         4 000371   000000 755000 xsym               STA     ORGSF

      404     4691    2   /**/ ACSSF = %SEQUEN#;

   4691  4 000372   000000 755000 xsym               STA     ACSSF

      405     4692    2   /**/ FUNSF = %IN#;

   4692  4 000373   000002 236007                    LDQ     2,DL
         4 000374   000000 756000 xsym               STQ     FUNSF

      406     4693    2   /**/ ASNSF = %FILE#;

   4693  4 000375   000000 755000 xsym               STA     ASNSF

      407     4694    2   /**/ SHARESF = %NONE#;

   4694  4 000376   600000 236003                    LDQ     -65536,DU
         4 000377   000000 756000 xsym               STQ     SHARESF

      408     4695    2   /**/ FSA_FLAG = %YES#; /* Fast seq access  = yes */

   4695  4 000400   400000 236003                    LDQ     -131072,DU
         4 000401   000000 756000 xsym               STQ     FSA_FLAG

      409     4696    2   /**/ BUFSF = VECTOR(FSA_WORK);

   4696  4 000402   000021 235000 5                  LDA     17
         4 000403   204010 452500                    STP2    WAIT_COUNT+5,,AUTO
         4 000404   204010 236100                    LDQ     WAIT_COUNT+5,,AUTO
         4 000405   000003 036003                    ADLQ    3,DU
         4 000406   000000 755000 xsym               STA     BUFSF
         4 000407   000001 756000 xsym               STQ     BUFSF+1
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:53   

      410     4697    2   /**/ FIDSF = JRNL_NAME;

   4697  4 000410   040000 100400                    MLR     fill='040'O
         4 000411   002020 000036 0                  ADSC9   JRNL_NAME                cn=0,n=30
         4 000412   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      411     4698    2       CALL SYS_FUNC_OPEN ALTRET(ALT_OPEN);

   4698  4 000413   000001 631400 5                  EPPR1   1
         4 000414   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000415   000420 702000 4                  TSX2    ALT_OPEN

      412     4699    2       RETURN;

   4699  4 000416   204004 221300                    LDX1  ! WAIT_COUNT+1,,AUTO
         4 000417   000001 702211                    TSX2  ! 1,X1

      413     4700    2   ALT_OPEN:
      414     4701    2       ALTRETURN;

   4701  4 000420   204004 221300       ALT_OPEN     LDX1  ! WAIT_COUNT+1,,AUTO
         4 000421   000000 702211                    TSX2  ! 0,X1

      415     4702    2   END OPEN_JOURNAL;
      416     4703        /*
      417     4704        */
      418     4705    1   OPEN_ROLLFID: PROC ALTRET;

   4705  4 000422   204004 741300       OPEN_ROLLFID STX1  ! WAIT_COUNT+1,,AUTO

      419     4706
      420     4707    2   /**/ DCBSF = M_RLBK.DCB#;

   4707  4 000423   000016 220000 0                  LDX0    M_RLBK+2
         4 000424   000000 740000 xsym               STX0    DCBSF

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:54   
      421     4708    2   /**/ ORGSF = %CONSEC#;

   4708  4 000425   000001 235007                    LDA     1,DL
         4 000426   000000 755000 xsym               STA     ORGSF

      422     4709    2   /**/ ACSSF = %SEQUEN#;

   4709  4 000427   000000 755000 xsym               STA     ACSSF

      423     4710    2   /**/ ASNSF = %FILE#;

   4710  4 000430   000000 755000 xsym               STA     ASNSF

      424     4711    2   /**/ SHARESF = %NONE#;

   4711  4 000431   600000 236003                    LDQ     -65536,DU
         4 000432   000000 756000 xsym               STQ     SHARESF

      425     4712    2   /**/ FIDSF = '*ROLL';

   4712  4 000433   040000 100400                    MLR     fill='040'O
         4 000434   000007 000005 3                  ADSC9   WAIT_JRNL+7              cn=0,n=5
         4 000435   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      426     4713    2   /**/ REASGNSF = %YES#;

   4713  4 000436   400000 236003                    LDQ     -131072,DU
         4 000437   000000 756000 xsym               STQ     REASGNSF

      427     4714    2       CALL SYS_FUNC_OPEN ALTRET(ALT_OPEN);

   4714  4 000440   000001 631400 5                  EPPR1   1
         4 000441   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000442   000445 702000 4                  TSX2    ALT_OPEN

      428     4715    2       RETURN;

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:55   
   4715  4 000443   204004 221300                    LDX1  ! WAIT_COUNT+1,,AUTO
         4 000444   000001 702211                    TSX2  ! 1,X1

      429     4716    2   ALT_OPEN:
      430     4717    2       ALTRETURN;

   4717  4 000445   204004 221300       ALT_OPEN     LDX1  ! WAIT_COUNT+1,,AUTO
         4 000446   000000 702211                    TSX2  ! 0,X1

      431     4718    2   END OPEN_ROLLFID;
      432     4719        /*
      433     4720        */
      434     4721    1   CLOS_JRNL_ROLL: PROC ALTRET;

   4721  4 000447   204006 741300       CLOS_JRNL_R* STX1  ! WAIT_COUNT+3,,AUTO

      435     4722    2   /**/ DCBSF = M_JRNL.DCB#;

   4722  4 000450   000013 220000 0                  LDX0    M_JRNL+2
         4 000451   000000 740000 xsym               STX0    DCBSF

      436     4723    2   /**/ FSA_FLAG = %YES#; /* Fast seq access flag */

   4723  4 000452   400000 236003                    LDQ     -131072,DU
         4 000453   000000 756000 xsym               STQ     FSA_FLAG

      437     4724    2       CALL SYS_FUNC_CLOS;

   4724  4 000454   000001 631400 5                  EPPR1   1
         4 000455   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000456   000000 011000                    NOP     0

      438     4725    2   /**/ DCBSF = M_RLBK.DCB#;

   4725  4 000457   000016 220000 0                  LDX0    M_RLBK+2
         4 000460   000000 740000 xsym               STX0    DCBSF

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:56   
      439     4726    2       CALL SYS_FUNC_CLOS;

   4726  4 000461   000001 631400 5                  EPPR1   1
         4 000462   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000463   000000 011000                    NOP     0

      440     4727    2       RETURN;

   4727  4 000464   204006 221300                    LDX1  ! WAIT_COUNT+3,,AUTO
         4 000465   000001 702211                    TSX2  ! 1,X1

      441     4728    2   END CLOS_JRNL_ROLL;
      442     4729        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:57   
      443     4730        /*
      444     4731                 PRESCN     REPORT   ON  ANY   BAD   FILES
      445     4732        */
      446     4733    1   PRESCN_REPORT: PROC ALTRET;

   4733  4 000466   204004 741300       PRESCN_REPO* STX1  ! WAIT_COUNT+1,,AUTO

      447     4734
      448     4735    2       IF BAD_FILE = %YES# THEN /* Unable to open one of the fids*/

   4735  4 000467   002017 234000 0                  SZN     BAD_FILE
         4 000470   000506 605000 4                  TPL     s:4752

      449     4736    3       DO;

      450     4737         /*E* ERROR: ZIU-DBU#RFILE-C
      451     4738                    MESSAGE: .
      452     4739                             The above errored file(s) must be made available before
      453     4740                             the ROLL utility can process them.            */
      454     4741    3           ERRCODESF.ERR# = DBU#RFILE;

   4741  4 000471   000000 236000 xsym               LDQ     ERRCODESF
         4 000472   000000 376000 5                  ANQ     0
         4 000473   215160 276007                    ORQ     72304,DL
         4 000474   000000 756000 xsym               STQ     ERRCODESF

      455     4742    3           ERRFLGSF = 4;

   4742  4 000475   004000 236003                    LDQ     2048,DU
         4 000476   000000 756000 xsym               STQ     ERRFLGSF

      456     4743    3           MSGCODE = ERRCODE_RDEF;

   4743  4 000477   000000 235000 xsym               LDA     ERRCODESF
         4 000500   000000 755000 xsym               STA     MSGCODE

      457     4744    3           CALL SYS_FUNC_ERRMSG;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:58   

   4744  4 000501   000001 631400 5                  EPPR1   1
         4 000502   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000503   000000 011000                    NOP     0

      458     4745    3           ALTRETURN;

   4745  4 000504   204004 221300                    LDX1  ! WAIT_COUNT+1,,AUTO
         4 000505   000000 702211                    TSX2  ! 0,X1

      459     4746    3           END;
      460     4747    3       ELSE DO;

      461     4748         /*E* ERROR: ZIU-DBU#RPSCN-C
      462     4749                    MESSAGE:
      463     4750                 =========== PRESCAN COMPLETED - NO ERRORS DETECTED ===========
      464     4751                 */
      465     4752    3           ERRCODESF.ERR# = DBU#RPSCN;

   4752  4 000506   000000 236000 xsym               LDQ     ERRCODESF
         4 000507   000000 376000 5                  ANQ     0
         4 000510   215170 276007                    ORQ     72312,DL
         4 000511   000000 756000 xsym               STQ     ERRCODESF

      466     4753    3           ERRFLGSF = 0;

   4753  4 000512   000000 450000 xsym               STZ     ERRFLGSF

      467     4754    3           MSGCODE = ERRCODE_RDEF;

   4754  4 000513   000000 756000 xsym               STQ     MSGCODE

      468     4755    3           CALL SYS_FUNC_ERRMSG;

   4755  4 000514   000001 631400 5                  EPPR1   1
         4 000515   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000516   000000 011000                    NOP     0
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:59   

      469     4756    3           RETURN;

   4756  4 000517   204004 221300                    LDX1  ! WAIT_COUNT+1,,AUTO
         4 000520   000001 702211                    TSX2  ! 1,X1

      470     4757    3           END;
      471     4758
      472     4759    2   END PRESCN_REPORT;
      473     4760        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:60   
      474     4761        /*
      475     4762                 CLOSE OPEN DCBS AND PRINT FILE REPORT.
      476     4763        */
      477     4764    1   CLEAN_HOUSE: PROC ALTRET;

   4764  4 000521   204004 741300       CLEAN_HOUSE  STX1  ! WAIT_COUNT+1,,AUTO

      478     4765
      479     4766    2       CALL CLOS_JRNL_ROLL;

   4766  4 000522   000447 701000 4                  TSX1    CLOS_JRNL_ROLL
         4 000523   000000 011000                    NOP     0

      480     4767    2       CALL FLUSH_BUFFERS;

   4767  4 000524   000001 631400 5                  EPPR1   1
         4 000525   000000 701000 xent               TSX1    FLUSH_BUFFERS
         4 000526   000000 011000                    NOP     0

      481     4768
      482     4769    3       DO X = 1 TO 511;

   4769  4 000527   000001 235007                    LDA     1,DL
         4 000530   000000 755000 xsym               STA     X

      483     4770    3           IF USER.SYSID(X) ~= 0 THEN

   4770  4 000531   000000 236000 xsym               LDQ     X
         4 000532   000005 402007                    MPY     5,DL
         4 000533   002440 220006 0                  LDX0    USER,QL
         4 000534   000622 600000 4                  TZE     s:4793

      484     4771    4           DO;

      485     4772         /*E* ERROR: ZIU-DBU#RSYSCHK-C
      486     4773                       MESSAGE: SYSID# %U1 rolled to checkpoint number %U2 %U3. */
      487     4774    4               ERR_INSERT.CNT(0) = 6;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:61   

   4774  4 000535   006000 236003                    LDQ     3072,DU
         4 000536   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      488     4775    4               CALL BINCHAR(ERR_INSERT.TEXT(0),USER.SYSID(X));

   4775  4 000537   000000 236000 xsym               LDQ     X
         4 000540   000005 402007                    MPY     5,DL
         4 000541   002440 236006 0                  LDQ     USER,QL
         4 000542   000022 772000                    QRL     18
         4 000543   000000 235003                    LDA     0,DU
         4 000544   204010 757100                    STAQ    WAIT_COUNT+5,,AUTO
         4 000545   000000 301500                    BTD
         4 000546   204010 000010                    NDSC9   WAIT_COUNT+5,,AUTO       cn=0,s=lsgnf,sf=0,n=8
         4 000547   000000 230036 xsym               NDSC9   ERR_INSERT               cn=1,s=nosgn,sf=0,n=30

      489     4776    4               CALL ZERO_SUP(ERR_INSERT.TEXT(0),32,'1'B);

   4776  4 000550   000036 630400 5                  EPPR0   30
         4 000551   000034 631400 5                  EPPR1   28
         4 000552   000000 701000 xent               TSX1    ZERO_SUP
         4 000553   000000 011000                    NOP     0

      490     4777    4               IF USER.CHKPT_NO(X) < 0 THEN

   4777  4 000554   000000 236000 xsym               LDQ     X
         4 000555   000005 402007                    MPY     5,DL
         4 000556   002442 235006 0                  LDA     USER+2,QL
         4 000557   000571 605000 4                  TPL     s:4784

      491     4778    5               DO; /* Must be an ids assigned chkpt no. */

      492     4779    5                   USER.CHKPT_NO(X) = 0 - USER.CHKPT_NO(X);

   4779  4 000560   002442 235006 0                  LDA     USER+2,QL
         4 000561   000000 531000                    NEG     0
         4 000562   002442 755006 0                  STA     USER+2,QL
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:62   

      493     4780    5                   ERR_INSERT.CNT(2) = 14;

   4780  4 000563   016000 236003                    LDQ     7168,DU
         4 000564   000020 552040 xsym               STBQ    ERR_INSERT+16,'40'O

      494     4781    5                   ERR_INSERT.TEXT(2) = '(IDS Implicit)';

   4781  4 000565   040000 100400                    MLR     fill='040'O
         4 000566   000011 000016 3                  ADSC9   WAIT_JRNL+9              cn=0,n=14
         4 000567   000020 200036 xsym               ADSC9   ERR_INSERT+16            cn=1,n=30

      495     4782    5                   END;

   4782  4 000570   000574 710000 4                  TRA     s:4785

      496     4783    4               ELSE
      497     4784    4                   ERR_INSERT.TEXT(2) = ' ';

   4784  4 000571   040000 100400                    MLR     fill='040'O
         4 000572   000041 000001 5                  ADSC9   33                       cn=0,n=1
         4 000573   000020 200036 xsym               ADSC9   ERR_INSERT+16            cn=1,n=30

      498     4785    4               ERR_INSERT.CNT(1) = 12;

   4785  4 000574   014000 236003                    LDQ     6144,DU
         4 000575   000010 552040 xsym               STBQ    ERR_INSERT+8,'40'O

      499     4786    4               CALL BINCHAR(ERR_INSERT.TEXT(1),USER.CHKPT_NO(X));

   4786  4 000576   000000 236000 xsym               LDQ     X
         4 000577   000024 402007                    MPY     20,DL
         4 000600   000000 301406                    BTD
         4 000601   002442 000004 0                  NDSC9   USER+2,Q                 cn=0,s=lsgnf,sf=0,n=4
         4 000602   000010 230036 xsym               NDSC9   ERR_INSERT+8             cn=1,s=nosgn,sf=0,n=30

      500     4787    4               CALL ZERO_SUP(ERR_INSERT.TEXT(1),32,'1'B);
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:63   

   4787  4 000603   000042 630400 5                  EPPR0   34
         4 000604   000034 631400 5                  EPPR1   28
         4 000605   000000 701000 xent               TSX1    ZERO_SUP
         4 000606   000000 011000                    NOP     0

      501     4788    4               ERRCODESF.ERR# = DBU#RSYSCHK;

   4788  4 000607   000000 236000 xsym               LDQ     ERRCODESF
         4 000610   000000 376000 5                  ANQ     0
         4 000611   214750 276007                    ORQ     72168,DL
         4 000612   000000 756000 xsym               STQ     ERRCODESF

      502     4789    4               ERRFLGSF = 1;

   4789  4 000613   001000 236003                    LDQ     512,DU
         4 000614   000000 756000 xsym               STQ     ERRFLGSF

      503     4790    4               MSGCODE = ERRCODE_RDEF;

   4790  4 000615   000000 235000 xsym               LDA     ERRCODESF
         4 000616   000000 755000 xsym               STA     MSGCODE

      504     4791    4               CALL SYS_FUNC_ERRMSG;

   4791  4 000617   000001 631400 5                  EPPR1   1
         4 000620   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000621   000000 011000                    NOP     0

      505     4792    4               END;

      506     4793    3           IF USER.CGMSGID(X) ~= '0'B THEN

   4793  4 000622   000000 236000 xsym               LDQ     X
         4 000623   000024 402007                    MPY     20,DL
         4 000624   000000 106406                    CMPC    fill='000'O
         4 000625   002443 000010 0                  ADSC9   USER+3,Q                 cn=0,n=8
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:64   
         4 000626   000001 000002 5                  ADSC9   1                        cn=0,n=2
         4 000627   000754 600000 4                  TZE     s:4816

      507     4794    4           DO;

      508     4795         /* The user has outstanding messages in their comgroup
      509     4796            so search this user's list of files until their
      510     4797            comgroup is found and send it's dcb number to the
      511     4798            clean house routine with the message number */
      512     4799    4               DCBX = USER.DCBINDX(X);

   4799  4 000630   000000 236000 xsym               LDQ     X
         4 000631   000005 402007                    MPY     5,DL
         4 000632   002440 236006 0                  LDQ     USER,QL
         4 000633   000022 736000                    QLS     18
         4 000634   000022 732000                    QRS     18
         4 000635   007450 756000 0                  STQ     DCBX

      513     4800    4               FIDX = DCBLIST.FIDINDX(DCBX);

   4800  4 000636   000006 402007                    MPY     6,DL
         4 000637   002032 470400 0                  LDP0    DCBLIST$
         4 000640   000100 100506                    MLR     fill='000'O
         4 000641   000000 000002                    ADSC9   0,Q,PR0                  cn=0,n=2
         4 000642   204010 000004                    ADSC9   WAIT_COUNT+5,,AUTO       cn=0,n=4
         4 000643   204010 236100                    LDQ     WAIT_COUNT+5,,AUTO
         4 000644   000022 732000                    QRS     18
         4 000645   007447 756000 0                  STQ     FIDX

      514     4801    5               DO WHILE ((DCBX ~= -1) AND (FIDLIST.ORG#(FIDX) ~= %CG#));

   4801  4 000646   000671 710000 4                  TRA     s:4805

      515     4802    5                   DCBX = DCBLIST.NEXT(DCBX);

   4802  4 000647   007450 236000 0                  LDQ     DCBX
         4 000650   000006 402007                    MPY     6,DL
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:65   
         4 000651   002032 470400 0                  LDP0    DCBLIST$
         4 000652   000100 100506                    MLR     fill='000'O
         4 000653   000001 000002                    ADSC9   1,Q,PR0                  cn=0,n=2
         4 000654   204010 000004                    ADSC9   WAIT_COUNT+5,,AUTO       cn=0,n=4
         4 000655   204010 236100                    LDQ     WAIT_COUNT+5,,AUTO
         4 000656   000022 732000                    QRS     18
         4 000657   007450 756000 0                  STQ     DCBX

      516     4803    5                   IF DCBX ~= -1 THEN

   4803  4 000660   000020 116000 5                  CMPQ    16
         4 000661   000671 600000 4                  TZE     s:4805

      517     4804    5                       FIDX = DCBLIST.FIDINDX(DCBX);

   4804  4 000662   000006 402007                    MPY     6,DL
         4 000663   000100 100506                    MLR     fill='000'O
         4 000664   000000 000002                    ADSC9   0,Q,PR0                  cn=0,n=2
         4 000665   204010 000004                    ADSC9   WAIT_COUNT+5,,AUTO       cn=0,n=4
         4 000666   204010 236100                    LDQ     WAIT_COUNT+5,,AUTO
         4 000667   000022 732000                    QRS     18
         4 000670   007447 756000 0                  STQ     FIDX

      518     4805    5                   END;

   4805  4 000671   007450 235000 0                  LDA     DCBX
         4 000672   000020 115000 5                  CMPA    16
         4 000673   000703 600000 4                  TZE     s:4806
         4 000674   007447 236000 0                  LDQ     FIDX
         4 000675   000021 402007                    MPY     17,DL
         4 000676   002031 471400 0                  LDP1    FID$
         4 000677   100015 236106                    LDQ     13,QL,PR1
         4 000700   777000 376007                    ANQ     -512,DL
         4 000701   013000 116007                    CMPQ    5632,DL
         4 000702   000647 601000 4                  TNZ     s:4802

      519     4806    4               IF DCBX ~= -1 THEN
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:66   

   4806  4 000703   007450 235000 0                  LDA     DCBX
         4 000704   000020 115000 5                  CMPA    16
         4 000705   000754 600000 4                  TZE     s:4816

      520     4807    5               DO;

      521     4808    6                   IF FIDLIST.DCB#(FIDX) = 0 THEN DO;

   4808  4 000706   007447 236000 0                  LDQ     FIDX
         4 000707   000021 402007                    MPY     17,DL
         4 000710   002031 471400 0                  LDP1    FID$
         4 000711   100017 220106                    LDX0    15,QL,PR1
         4 000712   000735 601000 4                  TNZ     s:4813

      522     4809    6                       CALL ASSOC_DCB(FIDX);

   4809  4 000713   000045 630400 5                  EPPR0   37
         4 000714   000002 631400 5                  EPPR1   2
         4 000715   000000 701000 xent               TSX1    ASSOC_DCB
         4 000716   000000 011000                    NOP     0

      523     4810    6                       CALL QUE_UP(FIDX);

   4810  4 000717   000045 630400 5                  EPPR0   37
         4 000720   000002 631400 5                  EPPR1   2
         4 000721   000000 701000 xent               TSX1    QUE_UP
         4 000722   000000 011000                    NOP     0

      524     4811    6                       CALL ZIU$CGOPN(, FIDLIST.DCB#(FIDX)) ALTRET(ALTRTN);

   4811  4 000723   007447 236000 0                  LDQ     FIDX
         4 000724   000021 402003                    MPY     17,DU
         4 000725   000017 036003                    ADLQ    15,DU
         4 000726   002031 036000 0                  ADLQ    FID$
         4 000727   000005 235000 5                  LDA     5
         4 000730   204010 757100                    STAQ    WAIT_COUNT+5,,AUTO
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:67   
         4 000731   204010 630500                    EPPR0   WAIT_COUNT+5,,AUTO
         4 000732   000004 631400 5                  EPPR1   4
         4 000733   000000 701000 xent               TSX1    ZIU$CGOPN
         4 000734   001112 702000 4                  TSX2    ALTRTN

      525     4812    6                       END;

      526     4813    5                   CALL ZIU$CGCLNUP(ADDR(USER.CGMSGID(X)),FIDLIST.DCB#(FIDX));

   4813  4 000735   000000 236000 xsym               LDQ     X
         4 000736   000005 402003                    MPY     5,DU
         4 000737   000046 036000 5                  ADLQ    38
         4 000740   204010 756100                    STQ     WAIT_COUNT+5,,AUTO
         4 000741   007447 236000 0                  LDQ     FIDX
         4 000742   000021 402003                    MPY     17,DU
         4 000743   000017 036003                    ADLQ    15,DU
         4 000744   002031 036000 0                  ADLQ    FID$
         4 000745   204013 756100                    STQ     WAIT_COUNT+8,,AUTO
         4 000746   204010 630500                    EPPR0   WAIT_COUNT+5,,AUTO
         4 000747   204012 450500                    STP0    WAIT_COUNT+7,,AUTO
         4 000750   204012 630500                    EPPR0   WAIT_COUNT+7,,AUTO
         4 000751   000004 631400 5                  EPPR1   4
         4 000752   000000 701000 xent               TSX1    ZIU$CGCLNUP
         4 000753   000000 011000                    NOP     0

      527     4814    5                   END;

      528     4815    4               END;

      529     4816    3           END;

   4816  4 000754   000000 054000 xsym               AOS     X
         4 000755   000000 235000 xsym               LDA     X
         4 000756   000777 115007                    CMPA    511,DL
         4 000757   000531 604400 4                  TMOZ    s:4770

      530     4817
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:68   
      531     4818         /*E* ERROR: ZIU-DBU#RREP-C
      532     4819           MESSAGE:
      533     4820                    The following files were involved in this ROLL FORWARD activity:
      534     4821                    ---------------------------------------------------------------
      535     4822           */
      536     4823    2       ERRCODESF.ERR# = DBU#RREP;

   4823  4 000760   000000 236000 xsym               LDQ     ERRCODESF
         4 000761   000000 376000 5                  ANQ     0
         4 000762   215100 276007                    ORQ     72256,DL
         4 000763   000000 756000 xsym               STQ     ERRCODESF

      537     4824    2       ERRFLGSF = 0;

   4824  4 000764   000000 450000 xsym               STZ     ERRFLGSF

      538     4825    2       MSGCODE = ERRCODE_RDEF;

   4825  4 000765   000000 756000 xsym               STQ     MSGCODE

      539     4826    2       CALL SYS_FUNC_ERRMSG;

   4826  4 000766   000001 631400 5                  EPPR1   1
         4 000767   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000770   000000 011000                    NOP     0

      540     4827
      541     4828    3       DO X = 1 TO NXT_AVIL_FIDSLOT-1;

   4828  4 000771   000001 235007                    LDA     1,DL
         4 000772   000000 755000 xsym               STA     X
         4 000773   001103 710000 4                  TRA     s:4861+1

      542     4829    3           IF FIDLIST.MOD#(X) = 1 THEN

   4829  4 000774   000000 236000 xsym               LDQ     X
         4 000775   000021 402007                    MPY     17,DL
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:69   
         4 000776   002031 470400 0                  LDP0    FID$
         4 000777   000015 236106                    LDQ     13,QL,PR0
         4 001000   000777 376007                    ANQ     511,DL
         4 001001   000001 116007                    CMPQ    1,DL
         4 001002   001056 601000 4                  TNZ     s:4853

      543     4830    4           DO;

      544     4831
      545     4832         /*E* ERROR: ZIU-DBU#RREP1-C
      546     4833                 MESSAGE: File %U1.%U2 %U3            */
      547     4834    4               ERR_INSERT(0) = FIDLIST.NAME(X);

   4834  4 001003   000000 236000 xsym               LDQ     X
         4 001004   000104 402007                    MPY     68,DL
         4 001005   000000 100506                    MLR     fill='000'O
         4 001006   000000 000037                    ADSC9   0,Q,PR0                  cn=0,n=31
         4 001007   000000 000037 xsym               ADSC9   ERR_INSERT               cn=0,n=31

      548     4835    4               ERR_INSERT.CNT(1) = 8;

   4835  4 001010   010000 236003                    LDQ     4096,DU
         4 001011   000010 552040 xsym               STBQ    ERR_INSERT+8,'40'O

      549     4836    4               ERR_INSERT.TEXT(1) = FIDLIST.ACCNT#(X);

   4836  4 001012   000000 236000 xsym               LDQ     X
         4 001013   000104 402007                    MPY     68,DL
         4 001014   040000 100506                    MLR     fill='040'O
         4 001015   000010 000010                    ADSC9   8,Q,PR0                  cn=0,n=8
         4 001016   000010 200036 xsym               ADSC9   ERR_INSERT+8             cn=1,n=30

      550     4837    4               IF FIDLIST.PACK#(X) = '   ' THEN

   4837  4 001017   040000 106506                    CMPC    fill='040'O
         4 001020   000014 000006                    ADSC9   12,Q,PR0                 cn=0,n=6
         4 001021   000015 000003 3                  ADSC9   WAIT_JRNL+13             cn=0,n=3
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:70   
         4 001022   001031 601000 4                  TNZ     s:4843

      551     4838    5               DO;

      552     4839    5                   ERR_INSERT.CNT(2) = 0;

   4839  4 001023   000000 236003                    LDQ     0,DU
         4 001024   000020 552040 xsym               STBQ    ERR_INSERT+16,'40'O

      553     4840    5                   ERR_INSERT.TEXT(2) = ' ';

   4840  4 001025   040000 100400                    MLR     fill='040'O
         4 001026   000041 000001 5                  ADSC9   33                       cn=0,n=1
         4 001027   000020 200036 xsym               ADSC9   ERR_INSERT+16            cn=1,n=30

      554     4841    5                   END;

   4841  4 001030   001043 710000 4                  TRA     s:4847

      555     4842    5               ELSE DO;

      556     4843    5                   ERR_INSERT.CNT(2) = 18;

   4843  4 001031   022000 236003                    LDQ     9216,DU
         4 001032   000020 552040 xsym               STBQ    ERR_INSERT+16,'40'O

      557     4844    5                   CALL CONCAT(ERR_INSERT.TEXT(2),'on packset ',

   4844  4 001033   040000 100400                    MLR     fill='040'O
         4 001034   000016 000013 3                  ADSC9   WAIT_JRNL+14             cn=0,n=11
         4 001035   000020 200013 xsym               ADSC9   ERR_INSERT+16            cn=1,n=11
         4 001036   000000 236000 xsym               LDQ     X
         4 001037   000104 402007                    MPY     68,DL
         4 001040   040000 100506                    MLR     fill='040'O
         4 001041   000014 000006                    ADSC9   12,Q,PR0                 cn=0,n=6
         4 001042   000023 000023 xsym               ADSC9   ERR_INSERT+19            cn=0,n=19

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:71   
      558     4845    5                      FIDLIST.PACK#(X) );
      559     4846    5                   END;

      560     4847    4               ERRCODESF.ERR# = DBU#RREP1;

   4847  4 001043   000000 236000 xsym               LDQ     ERRCODESF
         4 001044   000000 376000 5                  ANQ     0
         4 001045   215120 276007                    ORQ     72272,DL
         4 001046   000000 756000 xsym               STQ     ERRCODESF

      561     4848    4               ERRFLGSF = 1;

   4848  4 001047   001000 236003                    LDQ     512,DU
         4 001050   000000 756000 xsym               STQ     ERRFLGSF

      562     4849    4               MSGCODE = ERRCODE_RDEF;

   4849  4 001051   000000 235000 xsym               LDA     ERRCODESF
         4 001052   000000 755000 xsym               STA     MSGCODE

      563     4850    4               CALL SYS_FUNC_ERRMSG;

   4850  4 001053   000001 631400 5                  EPPR1   1
         4 001054   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 001055   000000 011000                    NOP     0

      564     4851    4               END;

      565     4852
      566     4853    3           IF FIDLIST.DCB#(X) > 0 THEN

   4853  4 001056   000000 236000 xsym               LDQ     X
         4 001057   000021 402007                    MPY     17,DL
         4 001060   002031 470400 0                  LDP0    FID$
         4 001061   000017 220106                    LDX0    15,QL,PR0
         4 001062   001102 600000 4                  TZE     s:4861

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:72   
      567     4854    4           DO;

      568     4855    4               DCBSF = FIDLIST.DCB#(X);

   4855  4 001063   000000 740000 xsym               STX0    DCBSF

      569     4856    4               IF DCBADDR(DCBSF) -> F$DCB.FCD# = %YES# THEN

   4856  4 001064   000047 471400 5                  LDP1    39
         4 001065   100000 473500                    LDP3    0,,PR1
         4 001066   300000 474510                    LDP4    0,X0,PR3
         4 001067   400031 236100                    LDQ     25,,PR4
         4 001070   020000 316007                    CANQ    8192,DL
         4 001071   001075 600000 4                  TZE     s:4858

      570     4857    4                   CALL SYS_FUNC_CLOS;

   4857  4 001072   000001 631400 5                  EPPR1   1
         4 001073   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 001074   000000 011000                    NOP     0

      571     4858    4               CALL SYS_FUNC_RELDCB;

   4858  4 001075   000001 631400 5                  EPPR1   1
         4 001076   000000 701000 xent               TSX1    SYS_FUNC_RELDCB
         4 001077   000000 011000                    NOP     0

      572     4859    4               DCBSF = 0;

   4859  4 001100   000000 220003                    LDX0    0,DU
         4 001101   000000 740000 xsym               STX0    DCBSF

      573     4860    4               END;

      574     4861    3           END;

   4861  4 001102   000000 054000 xsym               AOS     X
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:73   
         4 001103   002435 236000 0                  LDQ     NXT_AVIL_FIDSLOT
         4 001104   000022 732000                    QRS     18
         4 001105   000000 116000 xsym               CMPQ    X
         4 001106   000774 605400 4                  TPNZ    s:4829

      575     4862
      576     4863    2       CALL FREE_DYN_MEM;

   4863  4 001107   000001 631400 5                  EPPR1   1
         4 001110   000000 701000 xent               TSX1    FREE_DYN_MEM
         4 001111   000000 011000                    NOP     0

      577     4864    2   ALTRTN: RETURN;

   4864  4 001112   204004 221300       ALTRTN       LDX1  ! WAIT_COUNT+1,,AUTO
         4 001113   000001 702211                    TSX2  ! 1,X1

      578     4865    2   END CLEAN_HOUSE;
      579     4866
      580     4867        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:74   
      581     4868    1   STAT_REPORT: PROC;

   4868  4 001114   204004 741300       STAT_REPORT  STX1  ! WAIT_COUNT+1,,AUTO

      582     4869
      583     4870    2       DCBSF = DCBNUM(M$LO);

   4870  4 001115   000000 236007 xsym               LDQ     M$LO,DL
         4 001116   000000 620006                    EAX0    0,QL
         4 001117   000000 740000 xsym               STX0    DCBSF

      584     4871    3       DO X = 0 TO STATS# -1;

   4871  4 001120   000000 450000 xsym               STZ     X
         4 001121   001156 710000 4                  TRA     s:4875+1

      585     4872    3           CALL BINCHAR(LINE.V(X+3),STATS(X)); /* Fill stat values */

   4872  4 001122   000000 236000 xsym               LDQ     X
         4 001123   000035 402007                    MPY     29,DL
         4 001124   000000 720000 xsym               LXL0    X
         4 001125   007453 235010 0                  LDA     STCNT,X0
         4 001126   204010 756100                    STQ     WAIT_COUNT+5,,AUTO
         4 001127   000044 773000                    LRL     36
         4 001130   204012 757100                    STAQ    WAIT_COUNT+7,,AUTO
         4 001131   204010 235100                    LDA     WAIT_COUNT+5,,AUTO
         4 001132   000005 301500                    BTD
         4 001133   204012 000010                    NDSC9   WAIT_COUNT+7,,AUTO       cn=0,s=lsgnf,sf=0,n=8
         4 001134   007524 430016 0                  NDSC9   STAT_RPRT+25,A           cn=2,s=nosgn,sf=0,n=14

      586     4873    3           CALL ZERO_SUP(LINE.V(X+3),14,'0'B /* Right justify */);

   4873  4 001135   000017 236000 5                  LDQ     15
         4 001136   204012 756100                    STQ     WAIT_COUNT+7,,AUTO
         4 001137   000051 236000 5                  LDQ     41
         4 001140   204011 756100                    STQ     WAIT_COUNT+6,,AUTO
         4 001141   000000 236000 xsym               LDQ     X
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:75   
         4 001142   000053 402000 5                  MPY     43
         4 001143   000052 036000 5                  ADLQ    42
         4 001144   204010 756100                    STQ     WAIT_COUNT+5,,AUTO
         4 001145   204010 630500                    EPPR0   WAIT_COUNT+5,,AUTO
         4 001146   000034 631400 5                  EPPR1   28
         4 001147   000000 701000 xent               TSX1    ZERO_SUP
         4 001150   000000 011000                    NOP     0

      587     4874    3           STATS(15) = STATS(15) + STATS(X); /* Sum total */

   4874  4 001151   000000 720000 xsym               LXL0    X
         4 001152   007472 236000 0                  LDQ     STCNT+15
         4 001153   007453 036010 0                  ADLQ    STCNT,X0
         4 001154   007472 756000 0                  STQ     STCNT+15

      588     4875    3           END;

   4875  4 001155   000000 054000 xsym               AOS     X
         4 001156   000000 235000 xsym               LDA     X
         4 001157   000016 115007                    CMPA    14,DL
         4 001160   001122 604400 4                  TMOZ    s:4872

      589     4876
      590     4877    2       CALL BINCHAR(LINE.V(STATS#+4),STATS(STATS#)); /* Fill in total */

   4877  4 001161   007472 236000 0                  LDQ     STCNT+15
         4 001162   000000 235003                    LDA     0,DU
         4 001163   204010 757100                    STAQ    WAIT_COUNT+5,,AUTO
         4 001164   000000 301500                    BTD
         4 001165   204010 000010                    NDSC9   WAIT_COUNT+5,,AUTO       cn=0,s=lsgnf,sf=0,n=8
         4 001166   007710 430016 0                  NDSC9   STAT_RPRT+141            cn=2,s=nosgn,sf=0,n=14

      591     4878    2       CALL ZERO_SUP(LINE.V(STATS#+4),14,'0'B);

   4878  4 001167   000054 630400 5                  EPPR0   44
         4 001170   000034 631400 5                  EPPR1   28
         4 001171   000000 701000 xent               TSX1    ZERO_SUP
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:76   
         4 001172   000000 011000                    NOP     0

      592     4879
      593     4880    3       DO X = 0 TO STATS# +4;

   4880  4 001173   000000 450000 xsym               STZ     X
         4 001174   001215 710000 4                  TRA     s:4885+1

      594     4881    3           BUFSF = VECTOR(LINE(X));

   4881  4 001175   000057 235000 5                  LDA     47
         4 001176   000000 236000 xsym               LDQ     X
         4 001177   204010 755100                    STA     WAIT_COUNT+5,,AUTO
         4 001200   000053 402000 5                  MPY     43
         4 001201   000060 036000 5                  ADLQ    48
         4 001202   204010 235100                    LDA     WAIT_COUNT+5,,AUTO
         4 001203   000000 755000 xsym               STA     BUFSF
         4 001204   000001 756000 xsym               STQ     BUFSF+1

      595     4882    3           VFCSF = %YES#;

   4882  4 001205   400000 236003                    LDQ     -131072,DU
         4 001206   000000 756000 xsym               STQ     VFCSF

      596     4883    3           BUFLNSF = 29;

   4883  4 001207   000035 235007                    LDA     29,DL
         4 001210   000000 755000 xsym               STA     BUFLNSF

      597     4884    3           CALL SYS_FUNC_WRIT;

   4884  4 001211   000001 631400 5                  EPPR1   1
         4 001212   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 001213   000000 011000                    NOP     0

      598     4885    3           END;

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:77   
   4885  4 001214   000000 054000 xsym               AOS     X
         4 001215   000000 235000 xsym               LDA     X
         4 001216   000023 115007                    CMPA    19,DL
         4 001217   001175 604400 4                  TMOZ    s:4881

      599     4886
      600     4887    2       RETURN;

   4887  4 001220   204004 221300                    LDX1  ! WAIT_COUNT+1,,AUTO
         4 001221   000001 702211                    TSX2  ! 1,X1

      601     4888    2   END STAT_REPORT;
      602     4889        %EJECT;
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:78   
      603     4890    1   ALT_ROLL:
      604     4891    1       CALL CLOS_JRNL_ROLL;

   4891  4 001222   000447 701000 4     ALT_ROLL     TSX1    CLOS_JRNL_ROLL
         4 001223   000000 011000                    NOP     0

      605     4892    2       DO X = 1 TO NXT_AVIL_FIDSLOT-1; /* Close all open dcbs */

   4892  4 001224   000001 235007                    LDA     1,DL
         4 001225   000000 755000 xsym               STA     X
         4 001226   001247 710000 4                  TRA     s:4899+1

      606     4893    2           IF FIDLIST.DCB#(X) > 0 THEN

   4893  4 001227   000000 236000 xsym               LDQ     X
         4 001230   000021 402007                    MPY     17,DL
         4 001231   002031 470400 0                  LDP0    FID$
         4 001232   000017 220106                    LDX0    15,QL,PR0
         4 001233   001246 600000 4                  TZE     s:4899

      607     4894    3           DO;

      608     4895    3               DCBSF = FIDLIST.DCB#(X);

   4895  4 001234   000000 740000 xsym               STX0    DCBSF

      609     4896    3               IF DCBADDR(DCBSF) -> F$DCB.FCD# = %YES# THEN

   4896  4 001235   000047 471400 5                  LDP1    39
         4 001236   100000 473500                    LDP3    0,,PR1
         4 001237   300000 474510                    LDP4    0,X0,PR3
         4 001240   400031 236100                    LDQ     25,,PR4
         4 001241   020000 316007                    CANQ    8192,DL
         4 001242   001246 600000 4                  TZE     s:4899

      610     4897    3                   CALL SYS_FUNC_CLOS;

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:79   
   4897  4 001243   000001 631400 5                  EPPR1   1
         4 001244   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 001245   000000 011000                    NOP     0

      611     4898    3               END;

      612     4899    2           END;

   4899  4 001246   000000 054000 xsym               AOS     X
         4 001247   002435 236000 0                  LDQ     NXT_AVIL_FIDSLOT
         4 001250   000022 732000                    QRS     18
         4 001251   000000 116000 xsym               CMPQ    X
         4 001252   001227 605400 4                  TPNZ    s:4893

      613     4900         /*E* ERROR: ZIU-DBU#RABRT-C
      614     4901              MESSAGE: ROLL FORWARD activity is aborting.   */
      615     4902    1       ERRCODESF.ERR# = DBU#RABRT;

   4902  4 001253   000000 236000 xsym               LDQ     ERRCODESF
         4 001254   000000 376000 5                  ANQ     0
         4 001255   215140 276007                    ORQ     72288,DL
         4 001256   000000 756000 xsym               STQ     ERRCODESF

      616     4903    1       MSGCODE = ERRCODE_RDEF;

   4903  4 001257   000000 756000 xsym               STQ     MSGCODE

      617     4904    1       CALL SYS_FUNC_ERRMSG;

   4904  4 001260   000001 631400 5                  EPPR1   1
         4 001261   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 001262   000000 011000                    NOP     0

      618     4905    1   ALTRTN:
      619     4906    1       ALTRETURN;

   4906  4 001263   000000 702200 xent  ALTRTN       TSX2  ! X66_AALT
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:80   

SORT_KEY
 Sect OctLoc
   0     000   000000 000001   060061 101116   000000 000001   000000 000005    ....01AN........
   0     004   000101 040040   060061 101116   000000 000001   000000 000005    .A  01AN........
   0     010   000101 040040                                                    .A

M_JRNL
 Sect OctLoc
   0     011   007112 117125   122116 101114   ****** ******                    .JOURNAL....

M_RLBK
 Sect OctLoc
   0     014   006115 044122   114102 113040   ****** ******                    .M$RLBK ....

JRNL_BUF
 Sect OctLoc
   0     017   ****** ******   ****** ******   ****** ******   ****** ******    ................

BAD_FILE
 Sect OctLoc
   0    2017   0***** ******                                                    ....

JRNL_NAME
 Sect OctLoc
   0    2020   112117 125122   116101 114040   040040 040040   040040 040040    JOURNAL
   0    2024   040040 040040   040040 040040   040040 040040   040040 040040

FID_INDXS
 Sect OctLoc
   0    2035   ****** ******   ****** ******   ****** ******   ****** ******    ................

USER
 Sect OctLoc
   0    2440   ****** ******   ****** ******   ****** ******   ****** ******    ................

NO
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:81   
 Sect OctLoc
   0    7440   000000 000777   000000 000777   000000 000074                    ...........<

FIRST
 Sect OctLoc
   0    7443   000000 000000                                                    ....

LAST
 Sect OctLoc
   0    7444   000000 000000                                                    ....

MAX_DCBINDX
 Sect OctLoc
   0    7445   000000 000000                                                    ....

MAX_FIDINDX
 Sect OctLoc
   0    7446   000000 000000                                                    ....

STCNT
 Sect OctLoc
   0    7453   ****** ******   ****** ******   ****** ******   ****** ******    ................

STAT_RPRT
 Sect OctLoc
   0    7473   162040 123165   155155 141162   171040 157146   040112 157165    r Summary of Jou
   0    7477   162156 141154   040101 143164   151166 151164   171101 124131    rnal ActivityATY
   0    7503   120105 040040   040040 040040   040040 040040   040040 040040    PE
   0    7507   040040 040040   040103 117125   116124 101055   055055 055040         COUNTA----
   0    7513   040040 040040   040040 040040   040040 040040   040040 040040
   0    7517   040040 055055   055055 055101   102105 107111   116040 125123      -----ABEGIN US
   0    7523   105122 040040   040040 ******   ****** ******   ****** ******    ER    ..........
   0    7527   ****** ******   101105 116104   040040 040125   123105 122040    ....AEND   USER
   0    7533   040040 040***   ****** ******   ****** ******   ****** ******       .............
   0    7537   ***101 117120   105116 040040   106111 114105   040040 040040    .AOPEN  FILE
   0    7543   ****** ******   ****** ******   ****** ******   ****** 101103    ..............AC
   0    7547   114117 123105   040106 111114   105040 040040   040*** ******    LOSE FILE    ...
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:82   
   0    7553   ****** ******   ****** ******   ****** ***101   123124 117122    ...........ASTOR
   0    7557   105040 040122   105103 040040   040040 ******   ****** ******    E  REC    ......
   0    7563   ****** ******   ****** ******   101104 105114   105124 105040    ........ADELETE
   0    7567   122105 103040   040040 040***   ****** ******   ****** ******    REC    .........
   0    7573   ****** ******   ***101 115117   104111 106131   040122 105103    .....AMODIFY REC
   0    7577   040040 040040   ****** ******   ****** ******   ****** ******        ............
   0    7603   ****** 101115   117104 111106   131040 123105   124040 040040    ..AMODIFY SET
   0    7607   040*** ******   ****** ******   ****** ******   ****** ***101     ..............A
   0    7613   123124 117122   105040 040113   105131 040040   040040 ******    STORE  KEY    ..
   0    7617   ****** ******   ****** ******   ****** ******   101104 105114    ............ADEL
   0    7623   105124 105040   113105 131040   040040 040***   ****** ******    ETE KEY    .....
   0    7627   ****** ******   ****** ******   ***101 103110   105103 113040    .........ACHECK
   0    7633   120101 107105   040040 040040   ****** ******   ****** ******    PAGE    ........
   0    7637   ****** ******   ****** 101122   117114 114040   102101 103113    ......AROLL BACK
   0    7643   123040 040040   040*** ******   ****** ******   ****** ******    S    ...........
   0    7647   ****** ***101   103110 113040   120117 111116   124123 040040    ...ACHK POINTS
   0    7653   040040 ******   ****** ******   ****** ******   ****** ******      ..............
   0    7657   101103 107040   115105 123123   101107 105040   040040 040***    ACG MESSAGE    .
   0    7663   ****** ******   ****** ******   ****** ******   ***101 103107    .............ACG
   0    7667   040040 104105   114105 124105   040040 040040   ****** ******      DELETE    ....
   0    7673   ****** ******   ****** ******   ****** 102055   055055 055055    ..........B-----
   0    7677   055055 055055   055040 040040   040055 055055   055055 055055    -----    -------
   0    7703   055055 055055   055055 055101   124117 124101   114040 040040    -------ATOTAL
   0    7707   040040 040040   040040 ******   ****** ******   ****** ******          ..........
   0    7713   ****** ******                                                    ....

FPT_EVENT
 Sect OctLoc
   0    7716   000001 777640   007720 006000   000000 000000   000000 000000    ................

SORT_TABLE
 Sect OctLoc
   0    7722   000000 000005   000000 000000   000000 000005   040000 104040    ............ .D
   0    7726   000000 006000   000000 006014   000000 006014   000000 006014    ................
   0    7732   000000 006014   000000 006014   000000 000000   000001 000000    ................
   0    7736   000000 000005   000000 000000   000000 000000   000000 000000    ................
   0    7742   000000 000000   000000 000000   000000 000000   000000 000000    ................
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:83   
   0    7762*  000000 000000   000000 000000   000000 000000   000000 000000    ................

WAIT_JRNL
 Sect OctLoc
   3     000   000001 777640   000004 006000   000000 177640   000000 006014    ................
   3     004   000000 000024   000000 000001                                    ........

(unnamed)
 Sect OctLoc
   3     006   777777 777777   052122 117114   114040 040040   050111 104123    ....*ROLL   (IDS
   3     012   040111 155160   154151 143151   164051 040040   040040 040040     Implicit)
   3     016   157156 040160   141143 153163   145164 040040                    on packset

(unnamed)
 Sect OctLoc
   5     000   777777 400007   000000 000000   000001 000000   007722 006000    ................
   5     004   000002 000000   000000 006014   000000 000377   000006 006000    ................
   5     010   000000 000040   000010 006000   000000 000001   002031 006000    ... ............
   5     014   000012 006000   777777 777000   002032 006000   000001 006000    ................
   5     020   777777 777777   003777 777640   000001 777640   000127 606000    .............W..
   5     024   000001 377640   000126 206000   000000 777640   002030 006000    .....V..........
   5     030   000001 777640   000011 006000   000001 777640   000014 006000    ................
   5     034   000003 000000   400000 000000   000000 206000   000010 006000    ................
   5     040   000035 006000   040040 040040   000010 206000   000010 006000    ....    ........
   5     044   000035 006000   007447 006000   002443 006000   000000 006003    ................
   5     050   000000 000016   000050 006000   007524 406000   000007 200000    .....(..........
   5     054   007710 406000   000050 006000   000001 006000   000007 177640    .....(..........
   5     060   007473 006000                                                    ....
      620     4907
      621     4908    1   END ZIU$ROLL;

PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:84   
--  Include file information  --

   ZL_MACRO_C.:TOOLE05  is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   ZI$JRNL.:ZIC0TOU  is referenced.
   ZI_ROLL_STATS.:ZIC0TOU  is referenced.
   ZI_DBU_ROLL.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$ROLL.

   Procedure ZIU$ROLL requires 692 words for executable code.
   Procedure ZIU$ROLL requires 2060 words of local(AUTO) storage.

    No errors detected in file ZIU$ROLL.:ZIC0TSI    .
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:85   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:86   
          MINI XREF LISTING

ACSSF
       685**DCL      4691<<ASSIGN   4709<<ASSIGN
ALTRTN
      4906**LABEL    4571--CALLALT
ALTRTN IN PROCEDURE CLEAN_HOUSE
      4864**LABEL    4811--CALLALT
ALTRTN IN PROCEDURE INIT_ALL_TBLS
      4663**LABEL    4602--CALLALT  4616--CALLALT  4655--CALLALT
ALT_DCB IN PROCEDURE GET_DCBS
      4683**LABEL    4672--CALLALT  4676--CALLALT
ALT_OPEN IN PROCEDURE OPEN_JOURNAL
      4701**LABEL    4698--CALLALT
ALT_OPEN IN PROCEDURE OPEN_ROLLFID
      4717**LABEL    4714--CALLALT
ALT_ROLL
      4891**LABEL    4536--REMEMBR  4538--CALLALT  4539--CALLALT  4548--GOTO     4563--CALLALT  4565--CALLALT
      4569--CALLALT  4573--CALLALT  4574--CALLALT  4577--CALLALT  4579--CALLALT
ASNSF
       688**DCL      4693<<ASSIGN   4710<<ASSIGN
ASSOC_DCB
      4529**DCL-ENT  4809--CALL
BAD_FILE
       181**DCL      4735>>IF
BERC.DCB#
      1352**DCL      1353--REDEF
BREAK_FLAG
       805**DCL      4557>>IF
BRK_ROLL
       971**DCL      4536<<REMEMBR
BUFLNSF
       696**DCL      4883<<ASSIGN
BUFSF
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:87   
       697**DCL      4696<<ASSIGN   4881<<ASSIGN
CLEAN_HOUSE
      4764**PROC     4579--CALL
CLOS_JRNL_ROLL
      4721**PROC     4569--CALL     4766--CALL     4891--CALL
COUNTSF
       747**DCL       748--REDEF
CREATE_TBL_SEG
      4513**DCL-ENT  4602--CALL     4616--CALL
DATESF
       700**DCL      4653<<ASSIGN
DCBLIST.DCBID
       947**DCL      4620<<ASSIGN
DCBLIST.FIDINDX
       946**DCL      4618<<ASSIGN   4800>>ASSIGN   4804>>ASSIGN
DCBLIST.NEXT
       948**DCL      4619<<ASSIGN   4802>>ASSIGN
DCBLIST$
       922**DCL       945--IMP-PTR  4616<>CALL     4618>>ASSIGN   4619>>ASSIGN   4620>>ASSIGN   4800>>ASSIGN
      4802>>ASSIGN   4804>>ASSIGN
DCBNMSF
       728**DCL      4671<<ASSIGN   4675<<ASSIGN
DCBSF
       676**DCL      4673>>ASSIGN   4677>>ASSIGN   4689<<ASSIGN   4707<<ASSIGN   4722<<ASSIGN   4725<<ASSIGN
      4855<<ASSIGN   4856--IF       4859<<ASSIGN   4870<<ASSIGN   4895<<ASSIGN   4896--IF
DCBX
       970**DCL      4799<<ASSIGN   4800>>ASSIGN   4801>>DOWHILE  4802<<ASSIGN   4802>>ASSIGN   4803>>IF
      4804>>ASSIGN   4806>>IF
DESTSF
       699**DCL      4651<<ASSIGN
ENCRP_SEEDSF
       705**DCL       706--REDEF
ERRCODESF
       707**DCL       712--REDEF    4554>>ASSIGN
ERRCODESF.ERR#
       710**DCL      4553<<ASSIGN   4741<<ASSIGN   4752<<ASSIGN   4788<<ASSIGN   4823<<ASSIGN   4847<<ASSIGN
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:88   
      4902<<ASSIGN
ERRCODE_RDEF
       712**DCL      4743>>ASSIGN   4754>>ASSIGN   4790>>ASSIGN   4825>>ASSIGN   4849>>ASSIGN   4903>>ASSIGN
ERRFLGSF
       736**DCL      4742<<ASSIGN   4753<<ASSIGN   4789<<ASSIGN   4824<<ASSIGN   4848<<ASSIGN
ERR_INSERT
       720**DCL      4834<<ASSIGN
ERR_INSERT.CNT
       721**DCL      4774<<ASSIGN   4780<<ASSIGN   4785<<ASSIGN   4835<<ASSIGN   4839<<ASSIGN   4843<<ASSIGN
ERR_INSERT.TEXT
       722**DCL      4775<<CALLBLT  4776<>CALL     4781<<ASSIGN   4784<<ASSIGN   4786<<CALLBLT  4787<>CALL
      4836<<ASSIGN   4840<<ASSIGN   4844<<CALLBLT
F$DCB.ACTPOS
      3714**DCL      3714--REDEF
F$DCB.ARS#
      3688**DCL      3688--REDEF
F$DCB.ATTR
      3707**DCL      3708--REDEF
F$DCB.BORROW
      3722**DCL      3722--REDEF    3722--REDEF    3722--REDEF
F$DCB.DCBNAME.L
      3736**DCL      3736--IMP-SIZ
F$DCB.EOMCHAR#
      3692**DCL      3692--REDEF
F$DCB.FCD#
      3701**DCL      4856>>IF       4896>>IF
F$DCB.FLDID
      3717**DCL      3717--REDEF
F$DCB.FORM$
      3711**DCL      3711--REDEF
F$DCB.FSECT
      3727**DCL      3727--REDEF
F$DCB.FSN#
      3704**DCL      3704--REDEF    3704--REDEF    3705--REDEF
F$DCB.HEADER$
      3710**DCL      3710--REDEF
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:89   
F$DCB.IXTNSIZE#
      3708**DCL      3708--REDEF
F$DCB.LASTSTA$
      3697**DCL      3697--REDEF
F$DCB.LVL
      3723**DCL      3723--REDEF
F$DCB.NAME#.C
      3698**DCL      3698--REDEF
F$DCB.NOEOF
      3720**DCL      3720--REDEF
F$DCB.NRECS#
      3709**DCL      3709--REDEF
F$DCB.NRECX
      3728**DCL      3728--REDEF
F$DCB.OHDR
      3720**DCL      3720--REDEF
F$DCB.ORG#
      3703**DCL      3703--REDEF
F$DCB.PRECNO
      3726**DCL      3726--REDEF
F$DCB.RCSZ
      3732**DCL      3732--REDEF
F$DCB.RES#
      3699**DCL      3699--REDEF
F$DCB.SETX
      3711**DCL      3711--REDEF
F$DCB.TAB$
      3711**DCL      3711--REDEF
F$DCB.TDA
      3725**DCL      3726--REDEF
F$DCB.WSN#
      3699**DCL      3699--REDEF
FID$
       921**DCL       925--IMP-PTR  4602<>CALL     4604>>ASSIGN   4605>>ASSIGN   4606>>ASSIGN   4607>>ASSIGN
      4608>>ASSIGN   4610>>ASSIGN   4611>>ASSIGN   4801>>DOWHILE  4808>>IF       4811>>CALL     4813>>CALL
      4829>>IF       4834>>ASSIGN   4836>>ASSIGN   4837>>IF       4844>>CALLBLT  4853>>IF       4855>>ASSIGN
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:90   
      4893>>IF       4895>>ASSIGN
FIDLIST.ACCNT#
       929**DCL      4836>>ASSIGN
FIDLIST.CRPT
       934**DCL       935--REDEF
FIDLIST.DCB#
       936**DCL      4604<<ASSIGN   4808>>IF       4811<>CALL     4813<>CALL     4853>>IF       4855>>ASSIGN
      4893>>IF       4895>>ASSIGN
FIDLIST.MOD#
       933**DCL      4608<<ASSIGN   4829>>IF
FIDLIST.NAME
       926**DCL      4834>>ASSIGN
FIDLIST.NXTFID
       940**DCL      4605<<ASSIGN
FIDLIST.ORG#
       932**DCL      4801>>DOWHILE
FIDLIST.PACK#
       931**DCL      4837>>IF       4844>>CALLBLT
FIDLIST.QUE.NXT
       939**DCL      4607<<ASSIGN   4611<<ASSIGN
FIDLIST.QUE.PRI
       938**DCL      4606<<ASSIGN   4610<<ASSIGN
FIDSF
       724**DCL      4697<<ASSIGN   4712<<ASSIGN
FIDSF_RD
       723**DCL       724--REDEF
FIDX
       969**DCL      4800<<ASSIGN   4801>>DOWHILE  4804<<ASSIGN   4808>>IF       4809<>CALL     4810<>CALL
      4811>>CALL     4813>>CALL
FID_INDXS
       941**DCL      4637<<ASSIGN
FLUSH_BUFFERS
      4525**DCL-ENT  4767--CALL
FPT_EVENT
      3664**DCL      4537<>CALL
FPT_EVENT.V
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:91   
      3664**DCL      3664--DCLINIT
FREE_DYN_MEM
      4516**DCL-ENT  4863--CALL
FSA_FLAG
       738**DCL      4695<<ASSIGN   4723<<ASSIGN
FSA_WORK
       178**DCL      4696--ASSIGN
FUNSF
       687**DCL      4562<<ASSIGN   4572<<ASSIGN   4692<<ASSIGN
GET_DCBS
      4669**PROC     4539--CALL
HELPCODE
       741**DCL       746--REDEF
ICHKSUM
       806**DCL       807--REDEF
INIT_ALL_TBLS
      4588**PROC     4538--CALL
INIT_BUFTBL
      4524**DCL-ENT  4576--CALL
I_O_BUF$
       784**DCL       785--IMP-PTR
JREC.LENGTH
      1337**DCL      1340--IMP-SIZ
JRNL$
      1310**DCL      1311--IMP-PTR  1331--IMP-PTR  1341--IMP-PTR  1348--IMP-PTR  1354--IMP-PTR
JRNL_NAME
       183**DCL      4697>>ASSIGN
KEYVSF
       679**DCL       684--REDEF
KEYVSF.WD_ONE
       681**DCL       682--REDEF
LAST_UNUSED_DCBSLOT
       944**DCL      4624<<ASSIGN
LINE
      1196**DCL      4881--ASSIGN
LINE.V
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:92   
      1199**DCL      4872<<CALLBLT  4873<>CALL     4877<<CALLBLT  4878<>CALL
M$EVENT
      2509**DCL-ENT  4537--CALL
M$LO
       794**DCL      4870>>ASSIGN
M$WAIT
      2512**DCL-ENT  4556--CALL
MAX_DCBINDX
       965**DCL      4622<<ASSIGN
MAX_FIDINDX
       967**DCL      4612<<ASSIGN
MONITOR_ERR
       714**DCL      4554<<ASSIGN
MONITOR_ERR.ERR#
       717**DCL      4545>>IF
MSGCODE
       713**DCL       714--REDEF    4743<<ASSIGN   4754<<ASSIGN   4790<<ASSIGN   4825<<ASSIGN   4849<<ASSIGN
      4903<<ASSIGN
M_JRNL.DCB#
       169**DCL      4673<<ASSIGN   4689>>ASSIGN   4722>>ASSIGN
M_JRNL.N
       166**DCL      4671--ASSIGN
M_RLBK.DCB#
       174**DCL      4677<<ASSIGN   4707>>ASSIGN   4725>>ASSIGN
M_RLBK.N
       171**DCL      4675--ASSIGN
NO.USERS
       958**DCL      4627>>DOINDEX
NXT_AVIL_DCBSLOT
       943**DCL      4623<<ASSIGN
NXT_AVIL_FIDSLOT
       942**DCL      4613<<ASSIGN   4828>>DOINDEX  4892>>DOINDEX
OPEN_JOURNAL
      4688**PROC     4542--CALL     4574--CALL
OPEN_ROLLFID
      4705**PROC     4563--CALL     4573--CALL
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:93   
ORGSF
       677**DCL      4690<<ASSIGN   4708<<ASSIGN
POSSF
       735**DCL      4568<<ASSIGN
PRESCN_REPORT
      4733**PROC     4571--CALL
QUE_UP
      4530**DCL-ENT  4810--CALL
REASGNSF
       731**DCL      4713<<ASSIGN
REC$
       765**DCL       788--IMP-PTR
REC_DATA_LN
       793**DCL       792--IMP-SIZ
RETRY_JRNL_OPEN
      4540**LABEL    4560--GOTO
ROLL_CMPLT_TIME
       184**DCL      4654--ASSIGN   4658<<ASSIGN
SET_BUFS
      4526**DCL-ENT  4575--CALL     4580--CALL
SHARESF
       727**DCL      4694<<ASSIGN   4711<<ASSIGN
SORT_KEY
       153**DCL      4435--DCLINIT
SORT_TABLE
      4406**DCL      4565<>CALL
SOURCESF
       698**DCL      4650<<ASSIGN
STATS
      1113**DCL      4642<<ASSIGN   4872>>CALLBLT  4874<<ASSIGN   4874>>ASSIGN   4874>>ASSIGN   4877>>CALLBLT
STAT_REPORT
      4868**PROC     4581--CALL
STAT_RPRT
      1119**DCL      1196--REDEF
STCNT
      1096**DCL      1113--REDEF
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:94   
SYS_FUNC_CLOS
      4519**DCL-ENT  4724--CALL     4726--CALL     4857--CALL     4897--CALL
SYS_FUNC_ERRMSG
      4522**DCL-ENT  4555--CALL     4744--CALL     4755--CALL     4791--CALL     4826--CALL     4850--CALL
      4904--CALL
SYS_FUNC_GETDCB
      4517**DCL-ENT  4672--CALL     4676--CALL
SYS_FUNC_OPEN
      4518**DCL-ENT  4698--CALL     4714--CALL
SYS_FUNC_RELDCB
      4520**DCL-ENT  4858--CALL
SYS_FUNC_TSTAMP
      4521**DCL-ENT  4655--CALL
SYS_FUNC_WRIT
      4523**DCL-ENT  4884--CALL
TIMESF
       701**DCL      4652<<ASSIGN
TSTAMPSF
       704**DCL      4654<<ASSIGN
USER.CGMSGID
       954**DCL      4632<<ASSIGN   4793>>IF       4813--CALL
USER.CHKPT_NO
       953**DCL      4631<<ASSIGN   4777>>IF       4779<<ASSIGN   4779>>ASSIGN   4786>>CALLBLT
USER.DCBINDX
       951**DCL      4629<<ASSIGN   4799>>ASSIGN
USER.RLBK_START
       952**DCL      4630<<ASSIGN
USER.SYSID
       950**DCL      4628<<ASSIGN   4770>>IF       4775>>CALLBLT
VFCSF
       693**DCL      4882<<ASSIGN
WAIT_COUNT
       185**DCL      4540<<ASSIGN   4544<<ASSIGN   4544>>ASSIGN   4545>>IF
WAIT_JRNL
      3678**DCL      4556<>CALL
WAIT_JRNL.V
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:95   
      3679**DCL      3678--DCLINIT
X
       782**DCL      4603<<DOINDEX  4604>>ASSIGN   4605>>ASSIGN   4606>>ASSIGN   4607>>ASSIGN   4608>>ASSIGN
      4617<<DOINDEX  4618>>ASSIGN   4619>>ASSIGN   4620>>ASSIGN   4627<<DOINDEX  4628>>ASSIGN   4629>>ASSIGN
      4630>>ASSIGN   4631>>ASSIGN   4632>>ASSIGN   4636<<DOINDEX  4637>>ASSIGN   4641<<DOINDEX  4642>>ASSIGN
      4769<<DOINDEX  4770>>IF       4775>>CALLBLT  4777>>IF       4779>>ASSIGN   4779>>ASSIGN   4786>>CALLBLT
      4793>>IF       4799>>ASSIGN   4813>>CALL     4828<<DOINDEX  4829>>IF       4834>>ASSIGN   4836>>ASSIGN
      4837>>IF       4844>>CALLBLT  4853>>IF       4855>>ASSIGN   4871<<DOINDEX  4872>>CALLBLT  4872>>CALLBLT
      4873>>CALL     4874>>ASSIGN   4880<<DOINDEX  4881>>ASSIGN   4892<<DOINDEX  4893>>IF       4895>>ASSIGN
X$SORT
      4509**DCL-ENT  4565--CALL
ZERO_SUP
      4515**DCL-ENT  4776--CALL     4787--CALL     4873--CALL     4878--CALL
ZI$DIR.ALTKEY
       416**DCL       417--REDEF     418--REDEF
ZI$DIR.AREAFID
       382**DCL       383--REDEF
ZI$DIR.DATE
       421**DCL       425--REDEF    4653--ASSIGN
ZI$DIR.DATEFLG
       385**DCL      4648>>IF
ZI$DIR.DEST_SEED
       377**DCL       378--REDEF     379--REDEF
ZI$DIR.ENCP_SEED
       374**DCL       375--REDEF     376--REDEF
ZI$DIR.REPRT_ZERO
       408**DCL       409--REDEF
ZI$DIR.SCHFID
       380**DCL       381--REDEF
ZI$DIR.TIME
       426**DCL       431--REDEF    4652--ASSIGN
ZIU$CGCLNUP
      4527**DCL-ENT  4813--CALL
ZIU$CGOPN
      4528**DCL-ENT  4811--CALL
ZIU$EVENT
PL6.E3A0      #001=ZIU$ROLL File=ZIU$ROLL.:ZIC0TSI                               FRI 09/05/97 13:30 Page:96   
      4507**DCL-ENT  3664--DCLINIT
ZIU$PRESCN
      4511**DCL-ENT  4488--DCLINIT
ZIU$PRJRNL
      4510**DCL-ENT  4577--CALL
ZIU$SRTDCB
      4508**DCL-ENT  4679--CALL
ZIU$WRTROL
      4512**DCL-ENT  4490--DCLINIT
