
PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:1    
        1        1        /*M* ZIG$SS_IO        I-D-S/II            DBACS    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        WRITSF : PROC(RECORD,SOURCE);
        8        8         /*
        9        9            This routine writes records to the s/s file(random).
       10       10            The buffer area is shared with "READSF"
       11       11            32 words per record, 2 records per block
       12       12            record - logical record #
       13       13            place -  process area
       14       14         */
       15       15    1   DCL RECORD UBIN (36) ALIGNED;
       16       16    1   DCL BLOCK SBIN (36) STATIC ALIGNED;
       17       17    1   DCL SOURCE CHAR(128) UNAL;
       18       18    1   DCL 1 SSFCON(0:3) EXT, /* Shared with "READSF" */
       19       19    1         2 CURRENT_BLOCK SBIN (36) ALIGNED INIT(-1*4),
       20       20    1         2 WRITE_SWITCH BIT(1) UNAL INIT('0'B*4),
       21       21    1         2 USE_NUM UBIN (35) INIT (0*4) UNAL,
       22       22    1         2 BUFFER,
       23       23    1           3 RECORD1 ALIGNED CHAR(128),
       24       24    1           3 RECORD2 ALIGNED CHAR(128);
       25       25    1   DCL LAST_NOT_USED UBIN (36) EXT;
       26       26    1   DCL ACCESS_COUNT UBIN (36) EXT;
       27       27    1   DCL I UBIN (36) STATIC;
       28       28    1   DCL READ64 ENTRY (2);
       29       29    1   DCL ERROR_READ64 UBIN (36) EXT;
       30       30    1   DCL WRIT64 ENTRY (2);
       31       31    1       BLOCK=RECORD/2;
       32       32    1       LAST_NOT_USED = 0;
       33       33    1       ACCESS_COUNT = ACCESS_COUNT + 1;
       34       34    2       DO I = 0 TO 3;
       35       35    2           IF BLOCK = SSFCON.CURRENT_BLOCK(I)
       36       36    3           THEN DO;
       37       37    3               SSFCON.WRITE_SWITCH(I) = '1'B;
PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:2    
       38       38    3               IF MOD(RECORD,2) = 0
       39       39    3               THEN SSFCON.BUFFER.RECORD1(I) = SOURCE;
       40       40    3               ELSE SSFCON.BUFFER.RECORD2(I) = SOURCE;
       41       41    3               SSFCON.USE_NUM(I) = ACCESS_COUNT;
       42       42    3               RETURN;
       43       43    3               END;
       44       44    3           ELSE DO;
       45       45    3               IF SSFCON.USE_NUM(LAST_NOT_USED) > SSFCON.USE_NUM(I)
       46       46    3               THEN LAST_NOT_USED = I;
       47       47    3               END;
       48       48    2           END;
       49       49    1       IF SSFCON.WRITE_SWITCH(LAST_NOT_USED)
       50       50    2       THEN DO;
       51       51    2           CALL WRIT64(SSFCON.CURRENT_BLOCK(LAST_NOT_USED),ADDR(SSFCON.BUFFER(
                51                    LAST_NOT_USED)));
       52       52    2           END;
       53       53    1       CALL READ64(BLOCK,ADDR(SSFCON.BUFFER(LAST_NOT_USED)));
       54       54    1       ERROR_READ64 = 0;
       55       55    1       SSFCON.CURRENT_BLOCK(LAST_NOT_USED) = BLOCK;
       56       56    1       SSFCON.USE_NUM(LAST_NOT_USED) = ACCESS_COUNT;
       57       57    1       SSFCON.WRITE_SWITCH(LAST_NOT_USED) = '1'B;
       58       58    1       IF MOD(RECORD,2) = 0
       59       59    1       THEN SSFCON.BUFFER.RECORD1(LAST_NOT_USED) = SOURCE;
       60       60    1       ELSE SSFCON.BUFFER.RECORD2(LAST_NOT_USED) = SOURCE;
       61       61    1       RETURN;
       62       62    1   END WRITSF;
       63       63        %EOD;

PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:3    
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure WRITSF.

   Procedure WRITSF requires 121 words for executable code.
   Procedure WRITSF requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:4    

 Object Unit name= WRITSF                                     File name= ZIG$SS_IO.:ZIC0TOU
 UTS= SEP 05 '97 12:10:58.80 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     2      2  WRITSF
    1  LblCom even  none   264    410  SSFCON
    2  LblCom even  none     1      1  LAST_NOT_USED
    3  LblCom even  none     1      1  ACCESS_COUNT
    4  LblCom even  none     1      1  ERROR_READ64
    5   Proc  even  none   121    171  WRITSF
    6  RoData even  none     5      5  WRITSF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        2  WRITSF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 WRIT64
         yes           Std       2 READ64
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:5    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:6    


        1        1        /*M* ZIG$SS_IO        I-D-S/II            DBACS    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        WRITSF : PROC(RECORD,SOURCE);

      7  5 000000   000000 700200 xent  WRITSF       TSX0  ! X66_AUTO_2
         5 000001   000012 000002                    ZERO    10,2

        8        8         /*
        9        9            This routine writes records to the s/s file(random).
       10       10            The buffer area is shared with "READSF"
       11       11            32 words per record, 2 records per block
       12       12            record - logical record #
       13       13            place -  process area
       14       14         */
       15       15    1   DCL RECORD UBIN (36) ALIGNED;
       16       16    1   DCL BLOCK SBIN (36) STATIC ALIGNED;
       17       17    1   DCL SOURCE CHAR(128) UNAL;
       18       18    1   DCL 1 SSFCON(0:3) EXT, /* Shared with "READSF" */
       19       19    1         2 CURRENT_BLOCK SBIN (36) ALIGNED INIT(-1*4),
       20       20    1         2 WRITE_SWITCH BIT(1) UNAL INIT('0'B*4),
       21       21    1         2 USE_NUM UBIN (35) INIT (0*4) UNAL,
       22       22    1         2 BUFFER,
       23       23    1           3 RECORD1 ALIGNED CHAR(128),
       24       24    1           3 RECORD2 ALIGNED CHAR(128);
       25       25    1   DCL LAST_NOT_USED UBIN (36) EXT;
       26       26    1   DCL ACCESS_COUNT UBIN (36) EXT;
       27       27    1   DCL I UBIN (36) STATIC;
       28       28    1   DCL READ64 ENTRY (2);
       29       29    1   DCL ERROR_READ64 UBIN (36) EXT;
       30       30    1   DCL WRIT64 ENTRY (2);
       31       31    1       BLOCK=RECORD/2;

PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:7    
     31  5 000002   200003 470500                    LDP0    @RECORD,,AUTO
         5 000003   000000 236100                    LDQ     0,,PR0
         5 000004   000001 772000                    QRL     1
         5 000005   000000 756000 0                  STQ     BLOCK

       32       32    1       LAST_NOT_USED = 0;

     32  5 000006   000000 450000 2                  STZ     LAST_NOT_USED

       33       33    1       ACCESS_COUNT = ACCESS_COUNT + 1;

     33  5 000007   000000 235000 3                  LDA     ACCESS_COUNT
         5 000010   000001 035007                    ADLA    1,DL
         5 000011   000000 755000 3                  STA     ACCESS_COUNT

       34       34    2       DO I = 0 TO 3;

     34  5 000012   000001 450000 0                  STZ     I

       35       35    2           IF BLOCK = SSFCON.CURRENT_BLOCK(I)

     35  5 000013   000001 236000 0                  LDQ     I
         5 000014   000102 402007                    MPY     66,DL
         5 000015   000000 236006 1                  LDQ     SSFCON,QL
         5 000016   000000 116000 0                  CMPQ    BLOCK
         5 000017   000053 601000 5                  TNZ     s:45

       36       36    3           THEN DO;

       37       37    3               SSFCON.WRITE_SWITCH(I) = '1'B;

     37  5 000020   000001 236000 0                  LDQ     I
         5 000021   000102 402007                    MPY     66,DL
         5 000022   000000 620006                    EAX0    0,QL
         5 000023   400000 236003                    LDQ     -131072,DU
         5 000024   000001 256010 1                  ORSQ    SSFCON+1,X0

PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:8    
       38       38    3               IF MOD(RECORD,2) = 0

     38  5 000025   200003 470500                    LDP0    @RECORD,,AUTO
         5 000026   000000 236100                    LDQ     0,,PR0
         5 000027   000001 376007                    ANQ     1,DL
         5 000030   000040 601000 5                  TNZ     s:40

       39       39    3               THEN SSFCON.BUFFER.RECORD1(I) = SOURCE;

     39  5 000031   000001 236000 0                  LDQ     I
         5 000032   000410 402007                    MPY     264,DL
         5 000033   200004 471500                    LDP1    @SOURCE,,AUTO
         5 000034   040006 100500                    MLR     fill='040'O
         5 000035   100000 000200                    ADSC9   0,,PR1                   cn=0,n=128
         5 000036   000002 000200 1                  ADSC9   SSFCON+2,Q               cn=0,n=128
         5 000037   000046 710000 5                  TRA     s:41

       40       40    3               ELSE SSFCON.BUFFER.RECORD2(I) = SOURCE;

     40  5 000040   000001 236000 0                  LDQ     I
         5 000041   000410 402007                    MPY     264,DL
         5 000042   200004 471500                    LDP1    @SOURCE,,AUTO
         5 000043   040006 100500                    MLR     fill='040'O
         5 000044   100000 000200                    ADSC9   0,,PR1                   cn=0,n=128
         5 000045   000042 000200 1                  ADSC9   SSFCON+34,Q              cn=0,n=128

       41       41    3               SSFCON.USE_NUM(I) = ACCESS_COUNT;

     41  5 000046   000000 236000 3                  LDQ     ACCESS_COUNT
         5 000047   000001 676010 1                  ERQ     SSFCON+1,X0
         5 000050   000000 376000 6                  ANQ     0
         5 000051   000001 656010 1                  ERSQ    SSFCON+1,X0

       42       42    3               RETURN;

     42  5 000052   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:9    
       43       43    3               END;
       44       44    3           ELSE DO;

       45       45    3               IF SSFCON.USE_NUM(LAST_NOT_USED) > SSFCON.USE_NUM(I)

     45  5 000053   000000 236000 2                  LDQ     LAST_NOT_USED
         5 000054   000102 402007                    MPY     66,DL
         5 000055   000001 236006 1                  LDQ     SSFCON+1,QL
         5 000056   000000 376000 6                  ANQ     0
         5 000057   200006 756100                    STQ     @SOURCE+2,,AUTO
         5 000060   000001 236000 0                  LDQ     I
         5 000061   000102 402007                    MPY     66,DL
         5 000062   000001 236006 1                  LDQ     SSFCON+1,QL
         5 000063   000000 376000 6                  ANQ     0
         5 000064   200006 116100                    CMPQ    @SOURCE+2,,AUTO
         5 000065   000070 605000 5                  TPL     s:48

       46       46    3               THEN LAST_NOT_USED = I;

     46  5 000066   000001 235000 0                  LDA     I
         5 000067   000000 755000 2                  STA     LAST_NOT_USED

       47       47    3               END;

       48       48    2           END;

     48  5 000070   000001 235000 0                  LDA     I
         5 000071   000001 035007                    ADLA    1,DL
         5 000072   000001 755000 0                  STA     I
         5 000073   000004 115007                    CMPA    4,DL
         5 000074   000013 602000 5                  TNC     s:35

       49       49    1       IF SSFCON.WRITE_SWITCH(LAST_NOT_USED)

     49  5 000075   000000 236000 2                  LDQ     LAST_NOT_USED
         5 000076   000102 402007                    MPY     66,DL
         5 000077   000001 234006 1                  SZN     SSFCON+1,QL
PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:10   
         5 000100   000117 605000 5                  TPL     s:53

       50       50    2       THEN DO;

       51       51    2           CALL WRIT64(SSFCON.CURRENT_BLOCK(LAST_NOT_USED),ADDR(SSFCON.BUFFER(
                51                    LAST_NOT_USED)));

     51  5 000101   000000 236000 2                  LDQ     LAST_NOT_USED
         5 000102   000102 402003                    MPY     66,DU
         5 000103   000002 036000 6                  ADLQ    2
         5 000104   200006 756100                    STQ     @SOURCE+2,,AUTO
         5 000105   200006 630500                    EPPR0   @SOURCE+2,,AUTO
         5 000106   200011 450500                    STP0    @SOURCE+5,,AUTO
         5 000107   000000 236000 2                  LDQ     LAST_NOT_USED
         5 000110   000102 402003                    MPY     66,DU
         5 000111   000003 036000 6                  ADLQ    3
         5 000112   200010 756100                    STQ     @SOURCE+4,,AUTO
         5 000113   200010 630500                    EPPR0   @SOURCE+4,,AUTO
         5 000114   000001 631400 6                  EPPR1   1
         5 000115   000000 701000 xent               TSX1    WRIT64
         5 000116   000000 011000                    NOP     0

       52       52    2           END;

       53       53    1       CALL READ64(BLOCK,ADDR(SSFCON.BUFFER(LAST_NOT_USED)));

     53  5 000117   000000 236000 2                  LDQ     LAST_NOT_USED
         5 000120   000102 402003                    MPY     66,DU
         5 000121   000002 036000 6                  ADLQ    2
         5 000122   200006 756100                    STQ     @SOURCE+2,,AUTO
         5 000123   200006 630500                    EPPR0   @SOURCE+2,,AUTO
         5 000124   200011 450500                    STP0    @SOURCE+5,,AUTO
         5 000125   000004 236000 6                  LDQ     4
         5 000126   200010 756100                    STQ     @SOURCE+4,,AUTO
         5 000127   200010 630500                    EPPR0   @SOURCE+4,,AUTO
         5 000130   000001 631400 6                  EPPR1   1
         5 000131   000000 701000 xent               TSX1    READ64
PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:11   
         5 000132   000000 011000                    NOP     0

       54       54    1       ERROR_READ64 = 0;

     54  5 000133   000000 450000 4                  STZ     ERROR_READ64

       55       55    1       SSFCON.CURRENT_BLOCK(LAST_NOT_USED) = BLOCK;

     55  5 000134   000000 236000 2                  LDQ     LAST_NOT_USED
         5 000135   000102 402007                    MPY     66,DL
         5 000136   000000 235000 0                  LDA     BLOCK
         5 000137   000000 755006 1                  STA     SSFCON,QL

       56       56    1       SSFCON.USE_NUM(LAST_NOT_USED) = ACCESS_COUNT;

     56  5 000140   000000 620006                    EAX0    0,QL
         5 000141   000000 236000 3                  LDQ     ACCESS_COUNT
         5 000142   000001 676010 1                  ERQ     SSFCON+1,X0
         5 000143   000000 376000 6                  ANQ     0
         5 000144   000001 656010 1                  ERSQ    SSFCON+1,X0

       57       57    1       SSFCON.WRITE_SWITCH(LAST_NOT_USED) = '1'B;

     57  5 000145   400000 236003                    LDQ     -131072,DU
         5 000146   000001 256010 1                  ORSQ    SSFCON+1,X0

       58       58    1       IF MOD(RECORD,2) = 0

     58  5 000147   200003 470500                    LDP0    @RECORD,,AUTO
         5 000150   000000 236100                    LDQ     0,,PR0
         5 000151   000001 376007                    ANQ     1,DL
         5 000152   000162 601000 5                  TNZ     s:60

       59       59    1       THEN SSFCON.BUFFER.RECORD1(LAST_NOT_USED) = SOURCE;

     59  5 000153   000000 236000 2                  LDQ     LAST_NOT_USED
         5 000154   000410 402007                    MPY     264,DL
PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:12   
         5 000155   200004 471500                    LDP1    @SOURCE,,AUTO
         5 000156   040006 100500                    MLR     fill='040'O
         5 000157   100000 000200                    ADSC9   0,,PR1                   cn=0,n=128
         5 000160   000002 000200 1                  ADSC9   SSFCON+2,Q               cn=0,n=128
         5 000161   000170 710000 5                  TRA     s:61

       60       60    1       ELSE SSFCON.BUFFER.RECORD2(LAST_NOT_USED) = SOURCE;

     60  5 000162   000000 236000 2                  LDQ     LAST_NOT_USED
         5 000163   000410 402007                    MPY     264,DL
         5 000164   200004 471500                    LDP1    @SOURCE,,AUTO
         5 000165   040006 100500                    MLR     fill='040'O
         5 000166   100000 000200                    ADSC9   0,,PR1                   cn=0,n=128
         5 000167   000042 000200 1                  ADSC9   SSFCON+34,Q              cn=0,n=128

       61       61    1       RETURN;

     61  5 000170   000000 702200 xent               TSX2  ! X66_ARET

SSFCON
 Sect OctLoc
   1     000   777777 777777   000000 000000   0***** ******   ****** ******    ................
   1     100*  ****** ******   ****** ******   777777 777777   000000 000000    ................
   1     104   0***** ******   ****** ******   ****** ******   ****** ******    ................
   1     204*  777777 777777   000000 000000   0***** ******   ****** ******    ................
   1     304*  ****** ******   ****** ******   777777 777777   000000 000000    ................
   1     310   0***** ******   ****** ******   ****** ******   ****** ******    ................
   1     404*  ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   6     000   377777 777777   000002 000000   000002 006000   000000 006000    ................
   6     004   000000 006000                                                    ....
       62       62    1   END WRITSF;
       63       63        %EOD;

PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:13   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure WRITSF.

   Procedure WRITSF requires 121 words for executable code.
   Procedure WRITSF requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=WRITSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:10 Page:15   
          MINI XREF LISTING

ACCESS_COUNT
        26**DCL        33<<ASSIGN     33>>ASSIGN     41>>ASSIGN     56>>ASSIGN
BLOCK
        16**DCL        31<<ASSIGN     35>>IF         53<>CALL       55>>ASSIGN
ERROR_READ64
        29**DCL        54<<ASSIGN
I
        27**DCL        34<<DOINDEX    35>>IF         37>>ASSIGN     39>>ASSIGN     40>>ASSIGN     41>>ASSIGN
        45>>IF         46>>ASSIGN
LAST_NOT_USED
        25**DCL        32<<ASSIGN     45>>IF         46<<ASSIGN     49>>IF         51>>CALL       51>>CALL
        53>>CALL       55>>ASSIGN     56>>ASSIGN     57>>ASSIGN     59>>ASSIGN     60>>ASSIGN
READ64
        28**DCL-ENT    53--CALL
RECORD
        15**DCL         7--PROC       31>>ASSIGN     38>>IF         58>>IF
SOURCE
        17**DCL         7--PROC       39>>ASSIGN     40>>ASSIGN     59>>ASSIGN     60>>ASSIGN
SSFCON.BUFFER
        22**DCL        51--CALL       53--CALL
SSFCON.BUFFER.RECORD1
        23**DCL        39<<ASSIGN     59<<ASSIGN
SSFCON.BUFFER.RECORD2
        24**DCL        40<<ASSIGN     60<<ASSIGN
SSFCON.CURRENT_BLOCK
        19**DCL        35>>IF         51<>CALL       55<<ASSIGN
SSFCON.USE_NUM
        21**DCL        41<<ASSIGN     45>>IF         45>>IF         56<<ASSIGN
SSFCON.WRITE_SWITCH
        20**DCL        37<<ASSIGN     49>>IF         57<<ASSIGN
WRIT64
        30**DCL-ENT    51--CALL

PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:16   
       64        1        /*M* ZIG$DDI5         I-D-S/II            DBACS    */
       65        2        /*T***********************************************************/
       66        3        /*T*                                                         */
       67        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       68        5        /*T*                                                         */
       69        6        /*T***********************************************************/
       70        7        READSF: PROC(RECORD,DEST);
       71        8         /*
       72        9            This routine retreives records from the s/s file (random).
       73       10            The buffer area is shared with 'WRITSF'
       74       11            32 word records, 2 records per block
       75       12            record -  logical record #
       76       13            place -   process area
       77       14         */
       78       15    1   DCL RECORD UBIN (36) ALIGNED;
       79       16    1   DCL BLOCK SBIN (36) STATIC ALIGNED;
       80       17    1   DCL DEST CHAR(128) UNAL;
       81       18    1   DCL 1 SSFCON(0:3) EXT, /* Shared with WRITSF */
       82       19    1         2 CURRENT_BLOCK SBIN (36) ALIGNED INIT(-1*4),
       83       20    1         2 WRITE_SWITCH BIT(1) UNAL INIT('0'B*4),
       84       21    1         2 USE_NUM UBIN (35) INIT (0*4) UNAL,
       85       22    1         2 BUFFER,
       86       23    1           3 RECORD1 ALIGNED CHAR(128),
       87       24    1           3 RECORD2 ALIGNED CHAR(128);
       88       25    1   DCL LAST_NOT_USED UBIN (36) EXT;
       89       26    1   DCL ACCESS_COUNT UBIN (36) EXT;
       90       27    1   DCL I UBIN (36) STATIC;
       91       28    1   DCL READ64 ENTRY (2);
       92       29    1   DCL WRIT64 ENTRY (2);
       93       30    1       BLOCK=RECORD/2;
       94       31    1       LAST_NOT_USED = 0;
       95       32    1       ACCESS_COUNT = ACCESS_COUNT + 1;
       96       33    2       DO I = 0 TO 3;
       97       34    2           IF BLOCK = SSFCON.CURRENT_BLOCK(I)
       98       35    3           THEN DO;
       99       36    3               IF MOD(RECORD,2) = 0
      100       37    3               THEN DEST = SSFCON.BUFFER.RECORD1(I);
PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:17   
      101       38    3               ELSE DEST = SSFCON.BUFFER.RECORD2(I);
      102       39    3               SSFCON.USE_NUM(I) = ACCESS_COUNT;
      103       40    3               RETURN;
      104       41    3               END;
      105       42    3           ELSE DO;
      106       43    3               IF SSFCON.USE_NUM(LAST_NOT_USED) > SSFCON.USE_NUM(I)
      107       44    3               THEN LAST_NOT_USED = I;
      108       45    3               END;
      109       46    2           END;
      110       47    1       IF SSFCON.WRITE_SWITCH(LAST_NOT_USED)
      111       48    2       THEN DO;
      112       49    2           CALL WRIT64(SSFCON.CURRENT_BLOCK(LAST_NOT_USED),ADDR(SSFCON.BUFFER(
                49                    LAST_NOT_USED)));
      113       50    2           END;
      114       51    1       CALL READ64(BLOCK,ADDR(SSFCON.BUFFER(LAST_NOT_USED)));
      115       52    1       SSFCON.CURRENT_BLOCK(LAST_NOT_USED) = BLOCK;
      116       53    1       SSFCON.USE_NUM(LAST_NOT_USED) = ACCESS_COUNT;
      117       54    1       SSFCON.WRITE_SWITCH(LAST_NOT_USED) = '0'B;
      118       55    1       IF MOD(RECORD,2) = 0
      119       56    1       THEN DEST = SSFCON.BUFFER.RECORD1(LAST_NOT_USED);
      120       57    1       ELSE DEST = SSFCON.BUFFER.RECORD2(LAST_NOT_USED);
      121       58    1       RETURN;
      122       59    1   END;
      123       60        %EOD;

PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:18   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure READSF.

   Procedure READSF requires 118 words for executable code.
   Procedure READSF requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:19   

 Object Unit name= READSF                                     File name= ZIG$SS_IO.:ZIC0TOU
 UTS= SEP 05 '97 12:11:08.44 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     2      2  READSF
    1  LblCom even  none   264    410  SSFCON
    2  LblCom even  none     1      1  LAST_NOT_USED
    3  LblCom even  none     1      1  ACCESS_COUNT
    4   Proc  even  none   118    166  READSF
    5  RoData even  none     5      5  READSF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        2  READSF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 WRIT64
         yes           Std       2 READ64
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:20   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:21   


       64        1        /*M* ZIG$DDI5         I-D-S/II            DBACS    */
       65        2        /*T***********************************************************/
       66        3        /*T*                                                         */
       67        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       68        5        /*T*                                                         */
       69        6        /*T***********************************************************/
       70        7        READSF: PROC(RECORD,DEST);

      7  4 000000   000000 700200 xent  READSF       TSX0  ! X66_AUTO_2
         4 000001   000012 000002                    ZERO    10,2

       71        8         /*
       72        9            This routine retreives records from the s/s file (random).
       73       10            The buffer area is shared with 'WRITSF'
       74       11            32 word records, 2 records per block
       75       12            record -  logical record #
       76       13            place -   process area
       77       14         */
       78       15    1   DCL RECORD UBIN (36) ALIGNED;
       79       16    1   DCL BLOCK SBIN (36) STATIC ALIGNED;
       80       17    1   DCL DEST CHAR(128) UNAL;
       81       18    1   DCL 1 SSFCON(0:3) EXT, /* Shared with WRITSF */
       82       19    1         2 CURRENT_BLOCK SBIN (36) ALIGNED INIT(-1*4),
       83       20    1         2 WRITE_SWITCH BIT(1) UNAL INIT('0'B*4),
       84       21    1         2 USE_NUM UBIN (35) INIT (0*4) UNAL,
       85       22    1         2 BUFFER,
       86       23    1           3 RECORD1 ALIGNED CHAR(128),
       87       24    1           3 RECORD2 ALIGNED CHAR(128);
       88       25    1   DCL LAST_NOT_USED UBIN (36) EXT;
       89       26    1   DCL ACCESS_COUNT UBIN (36) EXT;
       90       27    1   DCL I UBIN (36) STATIC;
       91       28    1   DCL READ64 ENTRY (2);
       92       29    1   DCL WRIT64 ENTRY (2);
       93       30    1       BLOCK=RECORD/2;

     30  4 000002   200003 470500                    LDP0    @RECORD,,AUTO
PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:22   
         4 000003   000000 236100                    LDQ     0,,PR0
         4 000004   000001 772000                    QRL     1
         4 000005   000000 756000 0                  STQ     BLOCK

       94       31    1       LAST_NOT_USED = 0;

     31  4 000006   000000 450000 2                  STZ     LAST_NOT_USED

       95       32    1       ACCESS_COUNT = ACCESS_COUNT + 1;

     32  4 000007   000000 235000 3                  LDA     ACCESS_COUNT
         4 000010   000001 035007                    ADLA    1,DL
         4 000011   000000 755000 3                  STA     ACCESS_COUNT

       96       33    2       DO I = 0 TO 3;

     33  4 000012   000001 450000 0                  STZ     I

       97       34    2           IF BLOCK = SSFCON.CURRENT_BLOCK(I)

     34  4 000013   000001 236000 0                  LDQ     I
         4 000014   000102 402007                    MPY     66,DL
         4 000015   000000 236006 1                  LDQ     SSFCON,QL
         4 000016   000000 116000 0                  CMPQ    BLOCK
         4 000017   000051 601000 4                  TNZ     s:43

       98       35    3           THEN DO;

       99       36    3               IF MOD(RECORD,2) = 0

     36  4 000020   200003 470500                    LDP0    @RECORD,,AUTO
         4 000021   000000 236100                    LDQ     0,,PR0
         4 000022   000001 376007                    ANQ     1,DL
         4 000023   000033 601000 4                  TNZ     s:38

      100       37    3               THEN DEST = SSFCON.BUFFER.RECORD1(I);

PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:23   
     37  4 000024   000001 236000 0                  LDQ     I
         4 000025   000410 402007                    MPY     264,DL
         4 000026   200004 471500                    LDP1    @DEST,,AUTO
         4 000027   040100 100406                    MLR     fill='040'O
         4 000030   000002 000200 1                  ADSC9   SSFCON+2,Q               cn=0,n=128
         4 000031   100000 000200                    ADSC9   0,,PR1                   cn=0,n=128
         4 000032   000041 710000 4                  TRA     s:39

      101       38    3               ELSE DEST = SSFCON.BUFFER.RECORD2(I);

     38  4 000033   000001 236000 0                  LDQ     I
         4 000034   000410 402007                    MPY     264,DL
         4 000035   200004 471500                    LDP1    @DEST,,AUTO
         4 000036   040100 100406                    MLR     fill='040'O
         4 000037   000042 000200 1                  ADSC9   SSFCON+34,Q              cn=0,n=128
         4 000040   100000 000200                    ADSC9   0,,PR1                   cn=0,n=128

      102       39    3               SSFCON.USE_NUM(I) = ACCESS_COUNT;

     39  4 000041   000001 236000 0                  LDQ     I
         4 000042   000102 402007                    MPY     66,DL
         4 000043   000000 620006                    EAX0    0,QL
         4 000044   000000 236000 3                  LDQ     ACCESS_COUNT
         4 000045   000001 676010 1                  ERQ     SSFCON+1,X0
         4 000046   000000 376000 5                  ANQ     0
         4 000047   000001 656010 1                  ERSQ    SSFCON+1,X0

      103       40    3               RETURN;

     40  4 000050   000000 702200 xent               TSX2  ! X66_ARET

      104       41    3               END;
      105       42    3           ELSE DO;

      106       43    3               IF SSFCON.USE_NUM(LAST_NOT_USED) > SSFCON.USE_NUM(I)

     43  4 000051   000000 236000 2                  LDQ     LAST_NOT_USED
PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:24   
         4 000052   000102 402007                    MPY     66,DL
         4 000053   000001 236006 1                  LDQ     SSFCON+1,QL
         4 000054   000000 376000 5                  ANQ     0
         4 000055   200006 756100                    STQ     @DEST+2,,AUTO
         4 000056   000001 236000 0                  LDQ     I
         4 000057   000102 402007                    MPY     66,DL
         4 000060   000001 236006 1                  LDQ     SSFCON+1,QL
         4 000061   000000 376000 5                  ANQ     0
         4 000062   200006 116100                    CMPQ    @DEST+2,,AUTO
         4 000063   000066 605000 4                  TPL     s:46

      107       44    3               THEN LAST_NOT_USED = I;

     44  4 000064   000001 235000 0                  LDA     I
         4 000065   000000 755000 2                  STA     LAST_NOT_USED

      108       45    3               END;

      109       46    2           END;

     46  4 000066   000001 235000 0                  LDA     I
         4 000067   000001 035007                    ADLA    1,DL
         4 000070   000001 755000 0                  STA     I
         4 000071   000004 115007                    CMPA    4,DL
         4 000072   000013 602000 4                  TNC     s:34

      110       47    1       IF SSFCON.WRITE_SWITCH(LAST_NOT_USED)

     47  4 000073   000000 236000 2                  LDQ     LAST_NOT_USED
         4 000074   000102 402007                    MPY     66,DL
         4 000075   000001 234006 1                  SZN     SSFCON+1,QL
         4 000076   000115 605000 4                  TPL     s:51

      111       48    2       THEN DO;

      112       49    2           CALL WRIT64(SSFCON.CURRENT_BLOCK(LAST_NOT_USED),ADDR(SSFCON.BUFFER(
                49                    LAST_NOT_USED)));
PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:25   

     49  4 000077   000000 236000 2                  LDQ     LAST_NOT_USED
         4 000100   000102 402003                    MPY     66,DU
         4 000101   000002 036000 5                  ADLQ    2
         4 000102   200006 756100                    STQ     @DEST+2,,AUTO
         4 000103   200006 630500                    EPPR0   @DEST+2,,AUTO
         4 000104   200011 450500                    STP0    @DEST+5,,AUTO
         4 000105   000000 236000 2                  LDQ     LAST_NOT_USED
         4 000106   000102 402003                    MPY     66,DU
         4 000107   000003 036000 5                  ADLQ    3
         4 000110   200010 756100                    STQ     @DEST+4,,AUTO
         4 000111   200010 630500                    EPPR0   @DEST+4,,AUTO
         4 000112   000001 631400 5                  EPPR1   1
         4 000113   000000 701000 xent               TSX1    WRIT64
         4 000114   000000 011000                    NOP     0

      113       50    2           END;

      114       51    1       CALL READ64(BLOCK,ADDR(SSFCON.BUFFER(LAST_NOT_USED)));

     51  4 000115   000000 236000 2                  LDQ     LAST_NOT_USED
         4 000116   000102 402003                    MPY     66,DU
         4 000117   000002 036000 5                  ADLQ    2
         4 000120   200006 756100                    STQ     @DEST+2,,AUTO
         4 000121   200006 630500                    EPPR0   @DEST+2,,AUTO
         4 000122   200011 450500                    STP0    @DEST+5,,AUTO
         4 000123   000004 236000 5                  LDQ     4
         4 000124   200010 756100                    STQ     @DEST+4,,AUTO
         4 000125   200010 630500                    EPPR0   @DEST+4,,AUTO
         4 000126   000001 631400 5                  EPPR1   1
         4 000127   000000 701000 xent               TSX1    READ64
         4 000130   000000 011000                    NOP     0

      115       52    1       SSFCON.CURRENT_BLOCK(LAST_NOT_USED) = BLOCK;

     52  4 000131   000000 236000 2                  LDQ     LAST_NOT_USED
         4 000132   000102 402007                    MPY     66,DL
PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:26   
         4 000133   000000 235000 0                  LDA     BLOCK
         4 000134   000000 755006 1                  STA     SSFCON,QL

      116       53    1       SSFCON.USE_NUM(LAST_NOT_USED) = ACCESS_COUNT;

     53  4 000135   000000 620006                    EAX0    0,QL
         4 000136   000000 236000 3                  LDQ     ACCESS_COUNT
         4 000137   000001 676010 1                  ERQ     SSFCON+1,X0
         4 000140   000000 376000 5                  ANQ     0
         4 000141   000001 656010 1                  ERSQ    SSFCON+1,X0

      117       54    1       SSFCON.WRITE_SWITCH(LAST_NOT_USED) = '0'B;

     54  4 000142   000000 236000 5                  LDQ     0
         4 000143   000001 356010 1                  ANSQ    SSFCON+1,X0

      118       55    1       IF MOD(RECORD,2) = 0

     55  4 000144   200003 470500                    LDP0    @RECORD,,AUTO
         4 000145   000000 236100                    LDQ     0,,PR0
         4 000146   000001 376007                    ANQ     1,DL
         4 000147   000157 601000 4                  TNZ     s:57

      119       56    1       THEN DEST = SSFCON.BUFFER.RECORD1(LAST_NOT_USED);

     56  4 000150   000000 236000 2                  LDQ     LAST_NOT_USED
         4 000151   000410 402007                    MPY     264,DL
         4 000152   200004 471500                    LDP1    @DEST,,AUTO
         4 000153   040100 100406                    MLR     fill='040'O
         4 000154   000002 000200 1                  ADSC9   SSFCON+2,Q               cn=0,n=128
         4 000155   100000 000200                    ADSC9   0,,PR1                   cn=0,n=128
         4 000156   000165 710000 4                  TRA     s:58

      120       57    1       ELSE DEST = SSFCON.BUFFER.RECORD2(LAST_NOT_USED);

     57  4 000157   000000 236000 2                  LDQ     LAST_NOT_USED
         4 000160   000410 402007                    MPY     264,DL
PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:27   
         4 000161   200004 471500                    LDP1    @DEST,,AUTO
         4 000162   040100 100406                    MLR     fill='040'O
         4 000163   000042 000200 1                  ADSC9   SSFCON+34,Q              cn=0,n=128
         4 000164   100000 000200                    ADSC9   0,,PR1                   cn=0,n=128

      121       58    1       RETURN;

     58  4 000165   000000 702200 xent               TSX2  ! X66_ARET

SSFCON
 Sect OctLoc
   1     000   777777 777777   000000 000000   0***** ******   ****** ******    ................
   1     100*  ****** ******   ****** ******   777777 777777   000000 000000    ................
   1     104   0***** ******   ****** ******   ****** ******   ****** ******    ................
   1     204*  777777 777777   000000 000000   0***** ******   ****** ******    ................
   1     304*  ****** ******   ****** ******   777777 777777   000000 000000    ................
   1     310   0***** ******   ****** ******   ****** ******   ****** ******    ................
   1     404*  ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   5     000   377777 777777   000002 000000   000002 006000   000000 006000    ................
   5     004   000000 006000                                                    ....
      122       59    1   END;
      123       60        %EOD;

PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:28   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure READSF.

   Procedure READSF requires 118 words for executable code.
   Procedure READSF requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:29   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=READSF File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:30   
          MINI XREF LISTING

ACCESS_COUNT
        26**DCL        32<<ASSIGN     32>>ASSIGN     39>>ASSIGN     53>>ASSIGN
BLOCK
        16**DCL        30<<ASSIGN     34>>IF         51<>CALL       52>>ASSIGN
DEST
        17**DCL         7--PROC       37<<ASSIGN     38<<ASSIGN     56<<ASSIGN     57<<ASSIGN
I
        27**DCL        33<<DOINDEX    34>>IF         37>>ASSIGN     38>>ASSIGN     39>>ASSIGN     43>>IF
        44>>ASSIGN
LAST_NOT_USED
        25**DCL        31<<ASSIGN     43>>IF         44<<ASSIGN     47>>IF         49>>CALL       49>>CALL
        51>>CALL       52>>ASSIGN     53>>ASSIGN     54>>ASSIGN     56>>ASSIGN     57>>ASSIGN
READ64
        28**DCL-ENT    51--CALL
RECORD
        15**DCL         7--PROC       30>>ASSIGN     36>>IF         55>>IF
SSFCON.BUFFER
        22**DCL        49--CALL       51--CALL
SSFCON.BUFFER.RECORD1
        23**DCL        37>>ASSIGN     56>>ASSIGN
SSFCON.BUFFER.RECORD2
        24**DCL        38>>ASSIGN     57>>ASSIGN
SSFCON.CURRENT_BLOCK
        19**DCL        34>>IF         49<>CALL       52<<ASSIGN
SSFCON.USE_NUM
        21**DCL        39<<ASSIGN     43>>IF         43>>IF         53<<ASSIGN
SSFCON.WRITE_SWITCH
        20**DCL        47>>IF         54<<ASSIGN
WRIT64
        29**DCL-ENT    49--CALL

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:31   
      124        1        /*M*        READ64 I-D-S/II DBACS READ A 64 WORD RECORD 790221 */
      125        2        /*T***********************************************************/
      126        3        /*T*                                                         */
      127        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      128        5        /*T*                                                         */
      129        6        /*T***********************************************************/
      130        7        /*P*
      131        8        NAME:       READ64
      132        9        PURPOSE:    Read a 64 word record from SUBSCHEMA file.
      133       10        ARGUMENTS:  KEY_VAL-> A 4 BYTE KEY WHICH IS THE PAGE NUMBER
      134       11                              TO BE READ.
      135       12                    BUF_PTR-> POINTER TO THE CALLER'S BUFFER AREA.
      136       13        CALLING PROGRAMS:
      137       14                    MAIN FUNCTION                CALLING MODULES
      138       15                    -------------                ---------------
      139       16                    DICTIONARY                   DDX8
      140       17                    DISPLAY                      DDI6,DDX7
      141       18                    SCHEMA DMCL ALTER            DDI6,DDY3
      142       19                    SSCHEMA DESCRIPTOR BUILDER   DDI5,DDN7
      143       20                    SSROOT                       DDH8,DDI5,DDI6,DDI8,DDN7
      144       21                    VROOT                        DDK2
      145       22        */
      146       23        READ64: PROC (KEY_VAL, BUF_PTR);
      147       24        /*  Input arguments  */
      148       25    1   DCL KEY_VAL UBIN (36);
      149       26    1   DCL BUF_PTR PTR;
      150       27    1   DCL BUFFER (0:63) UBIN WORD BASED(TEMP_PTR);
      151       28    1   DCL KEYY UBIN (36) STATIC;
      152       29    1   DCL 1 KEYX REDEF KEYY ALIGNED,
      153       30    1         2 CNT BIT (9) UNAL, /* Key length to be provided */
      154       31    1         2 * BIT (27) UNAL; /* 3 byte long key */
      155       32    1   DCL TEMP_PTR PTR STATIC;
      156       33    1   DCL 1 TEMP_PTRX REDEF TEMP_PTR ALIGNED,
      157       34    1         2 * BIT (24) UNAL, /*  Pointer value */
      158       35    1         2 SEGID BIT (12) UNAL; /* Seg id */
      159       36    1   DCL SUBSCHEMA_NAME CHAR(30) EXT;
      160       37    1   DCL 1 SUBDCB ALIGNED STATIC SYMDEF,
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:32   
      161       38    1         2 SUBNM UNAL,
      162       39    1           3 CNT UBIN(9) UNAL,
      163       40    1           3 TEXT CHAR(31) UNAL,
      164       41    1         2 DCB# UBIN(18) ALIGNED;
      165       42    1   DCL TMP_CNT UBIN(36) ALIGNED;
      166       43    1   DCL FIR_SW UBIN(36) EXT;
      167       44    1   DCL J UBIN(36) EXT;
      168       45    1   DCL ERROR_IO UBIN (36) EXT;
      169       46    1   DCL ERROR_READ64 UBIN (36) EXT;
      170       47    1   DCL ABORT ENTRY;
      171       48    1   DCL SUBSCHEMA_KEY CHAR (8) EXT;
      172       49    1   DCL BUFFER$ PTR EXT;
      173       50    1   DCL BUFFER_LEN UBIN (36) EXT;
      174       51        %INCLUDE B_SEGIDS_C;
      175      590        %INCLUDE CP_6;
      176      671        %INCLUDE CP_6_SUBS;
      177     1211        %INCLUDE ZI_SUB_LANG;
      178     2926        %GENERAL;
      179     3050        %FPT_READ(FPTN=READ_FPT,KEYS=YES);
      180     3089        %FPT_OPEN(FPTN=OPEN_FPT,FUN=CREATE,ASN=FILE,ACCESS=ACTT,TYPE='2I',
      181     3090         ACS=DIRECT,ORG=KEYED,CTG=YES,SCRUB=YES,DISP=NAMED);
      182     3199        %FPT_OPEN(FPTN=RES_OPEN,REASSIGN=YES,ACCESS=ACTT);
      183     3308        %VLP_ATTR(FPTN=VEHCOBOL);
      184     3322        %VLP_ACSVEH(READ=YES,VEHICLE='IDS');
      185     3339        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='APL');
      186     3356        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='COBOL?');
      187     3373        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='IDP',LAST=";");
      188     3390        %VLP_ATTR(FPTN=VEHFORT);
      189     3404        %VLP_ACSVEH(READ=YES,VEHICLE='IDS');
      190     3421        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='FORTRAN');
      191     3438        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='APL');
      192     3455        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='IDP',LAST=";");
      193     3472        %VLP_ATTR(FPTN=VEHAPL);
      194     3486        %VLP_ACSVEH(READ=YES,VEHICLE='IDS');
      195     3503        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='APL');
      196     3520        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='IDP',LAST=";");
      197     3537        %VLP_ATTR(FPTN=VEHBASIC);
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:33   
      198     3551        %VLP_ACSVEH(READ=YES,VEHICLE='IDS');
      199     3568        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='BASIC');
      200     3585        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='APL');
      201     3602        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='IDP',LAST=";");
      202     3619        %VLP_ATTR(FPTN=ACTT);
      203     3633        %VLP_ACCESS(EXEC=YES,ACCT='ALL',LAST=";");
      204     3650        %F$DCB;
      205     3707        %FPT_CLOSE(FPTN=CLOSE_FPT);
      206     3749        %FPT_GETDCB(FPTN=GETDCB_FPT);
      207     3764    1       IF FIR_SW = 0
      208     3765    2       THEN DO;
      209     3766    2           IF SUB_LANGUAGE = #COBOL
      210     3767    3           THEN DO;
      211     3768    3               OPEN_FPT.ACSVEH_=VECTOR(VEHCOBOL);
      212     3769    3               RES_OPEN.ACSVEH_=VECTOR(VEHCOBOL);
      213     3770    3               END;
      214     3771    2           IF SUB_LANGUAGE = #FORTRAN
      215     3772    3           THEN DO;
      216     3773    3               OPEN_FPT.ACSVEH_=VECTOR(VEHFORT);
      217     3774    3               RES_OPEN.ACSVEH_=VECTOR(VEHFORT);
      218     3775    3               END;
      219     3776    2           IF SUB_LANGUAGE = #APL
      220     3777    3           THEN DO;
      221     3778    3               OPEN_FPT.ACSVEH_=VECTOR(VEHAPL);
      222     3779    3               RES_OPEN.ACSVEH_=VECTOR(VEHAPL);
      223     3780    3               END;
      224     3781    2           IF SUB_LANGUAGE = #BASIC
      225     3782    3           THEN DO;
      226     3783    3               OPEN_FPT.ACSVEH_=VECTOR(VEHBASIC);
      227     3784    3               RES_OPEN.ACSVEH_=VECTOR(VEHBASIC);
      228     3785    3               END;
      229     3786    2           CALL INDEX(TMP_CNT,' ',SUBSCHEMA_NAME);
      230     3787    2           SUBDCB.SUBNM.TEXT=SUBSCHEMA_NAME;
      231     3788    2           SUBDCB.SUBNM.CNT=TMP_CNT;
      232     3789    2           IF SUBSTR(SUBSCHEMA_NAME,0,SUBDCB.SUBNM.CNT)='SUB4'
      233     3790    2           THEN SUBDCB.SUBNM.TEXT='DSUB';
      234     3791    2           GETDCB_FPT.DCBNAME_=VECTOR(SUBDCB.SUBNM);
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:34   
      235     3792    2           CALL M$GETDCB(GETDCB_FPT) ALTRET(ERR1);
      236     3793    2           SUBDCB.DCB#=GETDCB_FPT.V.DCB#;
      237     3794    2           FIR_SW=1;
      238     3795    2           IF DCBADDR(SUBDCB.DCB#)->F$DCB.FCD#
      239     3796    3           THEN DO;
      240     3797    3               CLOSE_FPT.V.DCB#=SUBDCB.DCB#;
      241     3798    3               CALL M$CLOSE (CLOSE_FPT) ALTRET (ERR1);
      242     3799    3               END;
      243     3800    2           IF J=5
      244     3801    3           THEN DO;
      245     3802    3               RES_OPEN.V.FUN# = %CREATE#;
      246     3803    3               RES_OPEN.V.EXIST# = %NEWFILE#;
      247     3804    3               END;
      248     3805    3           ELSE DO;
      249     3806    3               RES_OPEN.V.FUN# = %UPDATE#;
      250     3807    3               RES_OPEN.V.EXIST# = %OLDFILE#;
      251     3808    3               END;
      252     3809    2           OPEN_FPT.V.DCB#=SUBDCB.DCB#;
      253     3810    2           OPEN_FPT.V.SETDCB#=%YES#;
      254     3811    2           OPEN_FPT.NAME_ = VECTOR(SUBDCB.SUBNM);
      255     3812    2           CALL M$OPEN(OPEN_FPT) ALTRET(ERR1);
      256     3813    2           RES_OPEN.V.DCB#=SUBDCB.DCB#;
      257     3814    2           CALL M$OPEN(RES_OPEN) ALTRET(ERR1);
      258     3815    2           END;
      259     3816    1       READ_FPT.BUF_.BOUND = 255; /* Record length = (record length in */
      260     3817    1       READ_FPT.V.DCB#=SUBDCB.DCB#;
      261     3818         /*  Words * 4 - 1) */
      262     3819    1       TEMP_PTR = BUF_PTR;
      263     3820    1       TEMP_PTRX.SEGID = %ISSID;
      264     3821    1       READ_FPT.BUF_.BUF$ = TEMP_PTR;
      265     3822    1       KEYY = KEY_VAL; /* Move key value to local storage */
      266     3823    1       KEYX.CNT = '003'O; /* Key length in bytes */
      267     3824    1       READ_FPT.KEY_ = VECTOR(KEYY);
      268     3825    1       CALL M$READ (READ_FPT) ALTRET(KEY_NOT_FOUND);
      269     3826    1       ERROR_READ64 = 0;
      270     3827    1       RETURN;
      271     3828    1   KEY_NOT_FOUND:
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:35   
      272     3829    1       BUFFER = BINBIT(0,36); /* If key not found then */
      273     3830    1       ERROR_READ64 = 1;
      274     3831    1       RETURN; /* Zero buffer */
      275     3832    1   ERR1:
      276     3833    1       IF J = 1 /* Translater check for subschema CU records */
      277     3834    2       THEN DO;
      278     3835    2           ERROR_IO = 1;
      279     3836    2           RETURN;
      280     3837    2           END;
      281     3838    1       CALL ABORT;
      282     3839    1       RETURN;
      283     3840    1   ZIG$SS_RVAR:
      284     3841    1       ENTRY;
      285     3842    1       ERROR_IO = 0;
      286     3843        /*D*
      287     3844        NAME:    ZIG$SS_RVAR
      288     3845        DESCRIPTION:
      289     3846              Read a special record in the subschema file and the schema
      290     3847            subset. These records are UWA, RVA, IA, and  'SSS KEY'.
      291     3848            The paramaters are :
      292     3849                 SUBSCHEMA_KEY - 2 words with are the key in textc form.
      293     3850                 BUFFER$       - A pointer to the buffer to read.
      294     3851                 BUFFER_LEN    - UBIN 36 witch is the length of the buffer
      295     3852                                  to read.
      296     3853        */
      297     3854    1       READ_FPT.BUF_.BOUND = BUFFER_LEN;
      298     3855    1       READ_FPT.BUF_.BUF$ = BUFFER$;
      299     3856    1       READ_FPT.V.DCB#=SUBDCB.DCB#;
      300     3857    1       READ_FPT.KEY_ = VECTOR(SUBSCHEMA_KEY);
      301     3858    1       CALL M$READ (READ_FPT) ALTRET (SPECIAL_KEY_NOT_THERE);
      302     3859    1       RETURN;
      303     3860    1   SPECIAL_KEY_NOT_THERE:
      304     3861    1       ERROR_IO = 1;
      305     3862    1       RETURN;
      306     3863    1   END READ64;
      307     3864        %EOD;

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:36   
--  Include file information  --

   ZI_SUB_LANG.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure READ64.

   Procedure READ64 requires 170 words for executable code.
   Procedure READ64 requires 8 words of local(AUTO) storage.

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:37   

 Object Unit name= READ64                                     File name= ZIG$SS_IO.:ZIC0TOU
 UTS= SEP 05 '97 12:11:18.32 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   214    326  READ64
    1  LblCom even  none     8     10  SUBSCHEMA_NAME
    2  LblCom even  none     1      1  FIR_SW
    3  LblCom even  none     1      1  J
    4  LblCom even  none     1      1  ERROR_IO
    5  LblCom even  none     1      1  ERROR_READ64
    6  LblCom even  none     2      2  SUBSCHEMA_KEY
    7  LblCom even  none     1      1  BUFFER$
    8  LblCom even  none     1      1  BUFFER_LEN
    9   DCB   even  none     0      0  M$UC
   10  LblCom even  none     5      5  LANG_ALLOWED
   11  LblCom even  none     1      1  SUB_LANGUAGE
   12  LblCom even  none    16     20  HEADING_TEXT
   13  LblCom even  none    13     15  LANG_TEXT
   14  LblCom even  none     1      1  HASH_SCHEMA_NAME
   15  LblCom even  none     1      1  CURRENT_RECORD
   16  RoData even  UTS      2      2  READ64
   17   Proc  even  none   170    252  READ64
   18  RoData even  none    20     24  READ64

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes            yes      Std        2  READ64
    17    224                  yes      Std        0  ZIG$SS_RVAR
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:38   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      2  SUBDCB

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 ABORT
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:39   


      124        1        /*M*        READ64 I-D-S/II DBACS READ A 64 WORD RECORD 790221 */
      125        2        /*T***********************************************************/
      126        3        /*T*                                                         */
      127        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      128        5        /*T*                                                         */
      129        6        /*T***********************************************************/
      130        7        /*P*
      131        8        NAME:       READ64
      132        9        PURPOSE:    Read a 64 word record from SUBSCHEMA file.
      133       10        ARGUMENTS:  KEY_VAL-> A 4 BYTE KEY WHICH IS THE PAGE NUMBER
      134       11                              TO BE READ.
      135       12                    BUF_PTR-> POINTER TO THE CALLER'S BUFFER AREA.
      136       13        CALLING PROGRAMS:
      137       14                    MAIN FUNCTION                CALLING MODULES
      138       15                    -------------                ---------------
      139       16                    DICTIONARY                   DDX8
      140       17                    DISPLAY                      DDI6,DDX7
      141       18                    SCHEMA DMCL ALTER            DDI6,DDY3
      142       19                    SSCHEMA DESCRIPTOR BUILDER   DDI5,DDN7
      143       20                    SSROOT                       DDH8,DDI5,DDI6,DDI8,DDN7
      144       21                    VROOT                        DDK2
      145       22        */
      146       23        READ64: PROC (KEY_VAL, BUF_PTR);

     23 17 000000   000000 700200 xent  READ64       TSX0  ! X66_AUTO_2
        17 000001   000010 000002                    ZERO    8,2

      147       24        /*  Input arguments  */
      148       25    1   DCL KEY_VAL UBIN (36);
      149       26    1   DCL BUF_PTR PTR;
      150       27    1   DCL BUFFER (0:63) UBIN WORD BASED(TEMP_PTR);
      151       28    1   DCL KEYY UBIN (36) STATIC;
      152       29    1   DCL 1 KEYX REDEF KEYY ALIGNED,
      153       30    1         2 CNT BIT (9) UNAL, /* Key length to be provided */
      154       31    1         2 * BIT (27) UNAL; /* 3 byte long key */
      155       32    1   DCL TEMP_PTR PTR STATIC;
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:40   
      156       33    1   DCL 1 TEMP_PTRX REDEF TEMP_PTR ALIGNED,
      157       34    1         2 * BIT (24) UNAL, /*  Pointer value */
      158       35    1         2 SEGID BIT (12) UNAL; /* Seg id */
      159       36    1   DCL SUBSCHEMA_NAME CHAR(30) EXT;
      160       37    1   DCL 1 SUBDCB ALIGNED STATIC SYMDEF,
      161       38    1         2 SUBNM UNAL,
      162       39    1           3 CNT UBIN(9) UNAL,
      163       40    1           3 TEXT CHAR(31) UNAL,
      164       41    1         2 DCB# UBIN(18) ALIGNED;
      165       42    1   DCL TMP_CNT UBIN(36) ALIGNED;
      166       43    1   DCL FIR_SW UBIN(36) EXT;
      167       44    1   DCL J UBIN(36) EXT;
      168       45    1   DCL ERROR_IO UBIN (36) EXT;
      169       46    1   DCL ERROR_READ64 UBIN (36) EXT;
      170       47    1   DCL ABORT ENTRY;
      171       48    1   DCL SUBSCHEMA_KEY CHAR (8) EXT;
      172       49    1   DCL BUFFER$ PTR EXT;
      173       50    1   DCL BUFFER_LEN UBIN (36) EXT;
      174       51        %INCLUDE B_SEGIDS_C;
      175      590        %INCLUDE CP_6;
      176      671        %INCLUDE CP_6_SUBS;
      177     1211        %INCLUDE ZI_SUB_LANG;
      178     2926        %GENERAL;
      179     3050        %FPT_READ(FPTN=READ_FPT,KEYS=YES);
      180     3089        %FPT_OPEN(FPTN=OPEN_FPT,FUN=CREATE,ASN=FILE,ACCESS=ACTT,TYPE='2I',
      181     3090         ACS=DIRECT,ORG=KEYED,CTG=YES,SCRUB=YES,DISP=NAMED);
      182     3199        %FPT_OPEN(FPTN=RES_OPEN,REASSIGN=YES,ACCESS=ACTT);
      183     3308        %VLP_ATTR(FPTN=VEHCOBOL);
      184     3322        %VLP_ACSVEH(READ=YES,VEHICLE='IDS');
      185     3339        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='APL');
      186     3356        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='COBOL?');
      187     3373        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='IDP',LAST=";");
      188     3390        %VLP_ATTR(FPTN=VEHFORT);
      189     3404        %VLP_ACSVEH(READ=YES,VEHICLE='IDS');
      190     3421        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='FORTRAN');
      191     3438        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='APL');
      192     3455        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='IDP',LAST=";");
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:41   
      193     3472        %VLP_ATTR(FPTN=VEHAPL);
      194     3486        %VLP_ACSVEH(READ=YES,VEHICLE='IDS');
      195     3503        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='APL');
      196     3520        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='IDP',LAST=";");
      197     3537        %VLP_ATTR(FPTN=VEHBASIC);
      198     3551        %VLP_ACSVEH(READ=YES,VEHICLE='IDS');
      199     3568        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='BASIC');
      200     3585        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='APL');
      201     3602        %VLP_ACSVEH(READ=YES,WNEW=YES,UPD=YES,VEHICLE='IDP',LAST=";");
      202     3619        %VLP_ATTR(FPTN=ACTT);
      203     3633        %VLP_ACCESS(EXEC=YES,ACCT='ALL',LAST=";");
      204     3650        %F$DCB;
      205     3707        %FPT_CLOSE(FPTN=CLOSE_FPT);
      206     3749        %FPT_GETDCB(FPTN=GETDCB_FPT);
      207     3764    1       IF FIR_SW = 0

   3764 17 000002   000000 235000 2                  LDA     FIR_SW
        17 000003   000147 601000 17                 TNZ     s:3816

      208     3765    2       THEN DO;

      209     3766    2           IF SUB_LANGUAGE = #COBOL

   3766 17 000004   000000 236000 11                 LDQ     SUB_LANGUAGE
        17 000005   000001 116007                    CMPQ    1,DL
        17 000006   000013 601000 17                 TNZ     s:3771

      210     3767    3           THEN DO;

      211     3768    3               OPEN_FPT.ACSVEH_=VECTOR(VEHCOBOL);

   3768 17 000007   000000 237000 18                 LDAQ    0
        17 000010   000046 757000 0                  STAQ    OPEN_FPT+12

      212     3769    3               RES_OPEN.ACSVEH_=VECTOR(VEHCOBOL);

   3769 17 000011   000000 237000 18                 LDAQ    0
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:42   
        17 000012   000140 757000 0                  STAQ    RES_OPEN+12

      213     3770    3               END;

      214     3771    2           IF SUB_LANGUAGE = #FORTRAN

   3771 17 000013   000000 235000 11                 LDA     SUB_LANGUAGE
        17 000014   000002 115007                    CMPA    2,DL
        17 000015   000022 601000 17                 TNZ     s:3776

      215     3772    3           THEN DO;

      216     3773    3               OPEN_FPT.ACSVEH_=VECTOR(VEHFORT);

   3773 17 000016   000002 237000 18                 LDAQ    2
        17 000017   000046 757000 0                  STAQ    OPEN_FPT+12

      217     3774    3               RES_OPEN.ACSVEH_=VECTOR(VEHFORT);

   3774 17 000020   000002 237000 18                 LDAQ    2
        17 000021   000140 757000 0                  STAQ    RES_OPEN+12

      218     3775    3               END;

      219     3776    2           IF SUB_LANGUAGE = #APL

   3776 17 000022   000000 235000 11                 LDA     SUB_LANGUAGE
        17 000023   000003 115007                    CMPA    3,DL
        17 000024   000031 601000 17                 TNZ     s:3781

      220     3777    3           THEN DO;

      221     3778    3               OPEN_FPT.ACSVEH_=VECTOR(VEHAPL);

   3778 17 000025   000004 237000 18                 LDAQ    4
        17 000026   000046 757000 0                  STAQ    OPEN_FPT+12

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:43   
      222     3779    3               RES_OPEN.ACSVEH_=VECTOR(VEHAPL);

   3779 17 000027   000004 237000 18                 LDAQ    4
        17 000030   000140 757000 0                  STAQ    RES_OPEN+12

      223     3780    3               END;

      224     3781    2           IF SUB_LANGUAGE = #BASIC

   3781 17 000031   000000 235000 11                 LDA     SUB_LANGUAGE
        17 000032   000004 115007                    CMPA    4,DL
        17 000033   000040 601000 17                 TNZ     s:3786

      225     3782    3           THEN DO;

      226     3783    3               OPEN_FPT.ACSVEH_=VECTOR(VEHBASIC);

   3783 17 000034   000006 237000 18                 LDAQ    6
        17 000035   000046 757000 0                  STAQ    OPEN_FPT+12

      227     3784    3               RES_OPEN.ACSVEH_=VECTOR(VEHBASIC);

   3784 17 000036   000006 237000 18                 LDAQ    6
        17 000037   000140 757000 0                  STAQ    RES_OPEN+12

      228     3785    3               END;

      229     3786    2           CALL INDEX(TMP_CNT,' ',SUBSCHEMA_NAME);

   3786 17 000040   000000 124400                    SCM     mask='000'O
        17 000041   000000 000036 1                  ADSC9   SUBSCHEMA_NAME           cn=0,n=30
        17 000042   000010 000001 18                 ADSC9   8                        cn=0,n=1
        17 000043   200005 000100                    ARG     TMP_CNT,,AUTO

      230     3787    2           SUBDCB.SUBNM.TEXT=SUBSCHEMA_NAME;

   3787 17 000044   040000 100400                    MLR     fill='040'O
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:44   
        17 000045   000000 000036 1                  ADSC9   SUBSCHEMA_NAME           cn=0,n=30
        17 000046   000002 200037 0                  ADSC9   SUBDCB                   cn=1,n=31

      231     3788    2           SUBDCB.SUBNM.CNT=TMP_CNT;

   3788 17 000047   200005 236100                    LDQ     TMP_CNT,,AUTO
        17 000050   000033 736000                    QLS     27
        17 000051   000002 552040 0                  STBQ    SUBDCB,'40'O

      232     3789    2           IF SUBSTR(SUBSCHEMA_NAME,0,SUBDCB.SUBNM.CNT)='SUB4'

   3789 17 000052   000002 236000 0                  LDQ     SUBDCB
        17 000053   000033 772000                    QRL     27
        17 000054   000000 620006                    EAX0    0,QL
        17 000055   040000 106440                    CMPC    fill='040'O
        17 000056   000000 000010 1                  ADSC9   SUBSCHEMA_NAME           cn=0,n=*X0
        17 000057   000000 000004 16                 ADSC9   0                        cn=0,n=4
        17 000060   000064 601000 17                 TNZ     s:3791

      233     3790    2           THEN SUBDCB.SUBNM.TEXT='DSUB';

   3790 17 000061   040000 100400                    MLR     fill='040'O
        17 000062   000001 000004 16                 ADSC9   1                        cn=0,n=4
        17 000063   000002 200037 0                  ADSC9   SUBDCB                   cn=1,n=31

      234     3791    2           GETDCB_FPT.DCBNAME_=VECTOR(SUBDCB.SUBNM);

   3791 17 000064   000012 237000 18                 LDAQ    10
        17 000065   000320 757000 0                  STAQ    GETDCB_FPT+2

      235     3792    2           CALL M$GETDCB(GETDCB_FPT) ALTRET(ERR1);

   3792 17 000066   000316 630400 0                  EPPR0   GETDCB_FPT
        17 000067   460002 713400                    CLIMB   alt,+24578
        17 000070   401000 401760                    pmme    nvectors=3
        17 000071   000212 702000 17                 TSX2    ERR1

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:45   
      236     3793    2           SUBDCB.DCB#=GETDCB_FPT.V.DCB#;

   3793 17 000072   000324 220000 0                  LDX0    GETDCB_FPT+6
        17 000073   000012 740000 0                  STX0    SUBDCB+8

      237     3794    2           FIR_SW=1;

   3794 17 000074   000001 235007                    LDA     1,DL
        17 000075   000000 755000 2                  STA     FIR_SW

      238     3795    2           IF DCBADDR(SUBDCB.DCB#)->F$DCB.FCD#

   3795 17 000076   000011 470400 18                 LDP0    9
        17 000077   000000 471500                    LDP1    0,,PR0
        17 000100   100000 473510                    LDP3    0,X0,PR1
        17 000101   300031 236100                    LDQ     25,,PR3
        17 000102   020000 316007                    CANQ    8192,DL
        17 000103   000111 600000 17                 TZE     s:3800

      239     3796    3           THEN DO;

      240     3797    3               CLOSE_FPT.V.DCB#=SUBDCB.DCB#;

   3797 17 000104   000312 740000 0                  STX0    CLOSE_FPT+26

      241     3798    3               CALL M$CLOSE (CLOSE_FPT) ALTRET (ERR1);

   3798 17 000105   000260 630400 0                  EPPR0   CLOSE_FPT
        17 000106   450001 713400                    CLIMB   alt,close
        17 000107   406000 401760                    pmme    nvectors=13
        17 000110   000212 702000 17                 TSX2    ERR1

      242     3799    3               END;

      243     3800    2           IF J=5

   3800 17 000111   000000 235000 3                  LDA     J
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:46   
        17 000112   000005 115007                    CMPA    5,DL
        17 000113   000121 601000 17                 TNZ     s:3806

      244     3801    3           THEN DO;

      245     3802    3               RES_OPEN.V.FUN# = %CREATE#;

   3802 17 000114   003000 236007                    LDQ     1536,DL
        17 000115   000171 552010 0                  STBQ    RES_OPEN+37,'10'O

      246     3803    3               RES_OPEN.V.EXIST# = %NEWFILE#;

   3803 17 000116   000600 236007                    LDQ     384,DL
        17 000117   000170 256000 0                  ORSQ    RES_OPEN+36

      247     3804    3               END;

   3804 17 000120   000127 710000 17                 TRA     s:3809

      248     3805    3           ELSE DO;

      249     3806    3               RES_OPEN.V.FUN# = %UPDATE#;

   3806 17 000121   001000 236007                    LDQ     512,DL
        17 000122   000171 552010 0                  STBQ    RES_OPEN+37,'10'O

      250     3807    3               RES_OPEN.V.EXIST# = %OLDFILE#;

   3807 17 000123   000170 236000 0                  LDQ     RES_OPEN+36
        17 000124   000014 376000 18                 ANQ     12
        17 000125   000400 276007                    ORQ     256,DL
        17 000126   000170 756000 0                  STQ     RES_OPEN+36

      251     3808    3               END;

      252     3809    2           OPEN_FPT.V.DCB#=SUBDCB.DCB#;

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:47   
   3809 17 000127   000012 220000 0                  LDX0    SUBDCB+8
        17 000130   000076 740000 0                  STX0    OPEN_FPT+36

      253     3810    2           OPEN_FPT.V.SETDCB#=%YES#;

   3810 17 000131   100000 236007                    LDQ     32768,DL
        17 000132   000076 256000 0                  ORSQ    OPEN_FPT+36

      254     3811    2           OPEN_FPT.NAME_ = VECTOR(SUBDCB.SUBNM);

   3811 17 000133   000012 237000 18                 LDAQ    10
        17 000134   000040 757000 0                  STAQ    OPEN_FPT+6

      255     3812    2           CALL M$OPEN(OPEN_FPT) ALTRET(ERR1);

   3812 17 000135   000032 630400 0                  EPPR0   OPEN_FPT
        17 000136   450000 713400                    CLIMB   alt,open
        17 000137   410400 401760                    pmme    nvectors=18
        17 000140   000212 702000 17                 TSX2    ERR1

      256     3813    2           RES_OPEN.V.DCB#=SUBDCB.DCB#;

   3813 17 000141   000012 220000 0                  LDX0    SUBDCB+8
        17 000142   000170 740000 0                  STX0    RES_OPEN+36

      257     3814    2           CALL M$OPEN(RES_OPEN) ALTRET(ERR1);

   3814 17 000143   000124 630400 0                  EPPR0   RES_OPEN
        17 000144   450000 713400                    CLIMB   alt,open
        17 000145   410400 401760                    pmme    nvectors=18
        17 000146   000212 702000 17                 TSX2    ERR1

      258     3815    2           END;

      259     3816    1       READ_FPT.BUF_.BOUND = 255; /* Record length = (record length in */

   3816 17 000147   000020 236000 0                  LDQ     READ_FPT+4
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:48   
        17 000150   177777 376007                    ANQ     65535,DL
        17 000151   000015 276000 18                 ORQ     13
        17 000152   000020 756000 0                  STQ     READ_FPT+4

      260     3817    1       READ_FPT.V.DCB#=SUBDCB.DCB#;

   3817 17 000153   000012 220000 0                  LDX0    SUBDCB+8
        17 000154   000024 740000 0                  STX0    READ_FPT+8

      261     3818         /*  Words * 4 - 1) */
      262     3819    1       TEMP_PTR = BUF_PTR;

   3819 17 000155   200004 470500                    LDP0    @BUF_PTR,,AUTO
        17 000156   000000 236100                    LDQ     0,,PR0
        17 000157   000001 756000 0                  STQ     TEMP_PTR

      263     3820    1       TEMP_PTRX.SEGID = %ISSID;

   3820 17 000160   006000 236007                    LDQ     3072,DL
        17 000161   000001 752003 0                  STCQ    TEMP_PTR,'03'O

      264     3821    1       READ_FPT.BUF_.BUF$ = TEMP_PTR;

   3821 17 000162   000001 236000 0                  LDQ     TEMP_PTR
        17 000163   000021 756000 0                  STQ     READ_FPT+5

      265     3822    1       KEYY = KEY_VAL; /* Move key value to local storage */

   3822 17 000164   200003 471500                    LDP1    @KEY_VAL,,AUTO
        17 000165   100000 235100                    LDA     0,,PR1
        17 000166   000000 755000 0                  STA     KEYY

      266     3823    1       KEYX.CNT = '003'O; /* Key length in bytes */

   3823 17 000167   003000 236003                    LDQ     1536,DU
        17 000170   000000 552040 0                  STBQ    KEYY,'40'O

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:49   
      267     3824    1       READ_FPT.KEY_ = VECTOR(KEYY);

   3824 17 000171   000016 237000 18                 LDAQ    14
        17 000172   000016 757000 0                  STAQ    READ_FPT+2

      268     3825    1       CALL M$READ (READ_FPT) ALTRET(KEY_NOT_FOUND);

   3825 17 000173   000014 630400 0                  EPPR0   READ_FPT
        17 000174   440000 713400                    CLIMB   alt,read
        17 000175   401400 401760                    pmme    nvectors=4
        17 000176   000201 702000 17                 TSX2    KEY_NOT_FOUND

      269     3826    1       ERROR_READ64 = 0;

   3826 17 000177   000000 450000 5                  STZ     ERROR_READ64

      270     3827    1       RETURN;

   3827 17 000200   000000 702200 xent               TSX2  ! X66_ARET

      271     3828    1   KEY_NOT_FOUND:
      272     3829    1       BUFFER = BINBIT(0,36); /* If key not found then */

   3829 17 000201   000000 236003       KEY_NOT_FOU* LDQ     0,DU
        17 000202   200006 756100                    STQ     TMP_CNT+1,,AUTO
        17 000203   000001 470400 0                  LDP0    TEMP_PTR
        17 000204   000100 100500                    MLR     fill='000'O
        17 000205   200006 000004                    ADSC9   TMP_CNT+1,,AUTO          cn=0,n=4
        17 000206   000000 000400                    ADSC9   0,,PR0                   cn=0,n=256

      273     3830    1       ERROR_READ64 = 1;

   3830 17 000207   000001 235007                    LDA     1,DL
        17 000210   000000 755000 5                  STA     ERROR_READ64

      274     3831    1       RETURN; /* Zero buffer */

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:50   
   3831 17 000211   000000 702200 xent               TSX2  ! X66_ARET

      275     3832    1   ERR1:
      276     3833    1       IF J = 1 /* Translater check for subschema CU records */

   3833 17 000212   000000 235000 3     ERR1         LDA     J
        17 000213   000001 115007                    CMPA    1,DL
        17 000214   000220 601000 17                 TNZ     s:3838

      277     3834    2       THEN DO;

      278     3835    2           ERROR_IO = 1;

   3835 17 000215   000001 236007                    LDQ     1,DL
        17 000216   000000 756000 4                  STQ     ERROR_IO

      279     3836    2           RETURN;

   3836 17 000217   000000 702200 xent               TSX2  ! X66_ARET

      280     3837    2           END;
      281     3838    1       CALL ABORT;

   3838 17 000220   000020 631400 18                 EPPR1   16
        17 000221   000000 701000 xent               TSX1    ABORT
        17 000222   000000 011000                    NOP     0

      282     3839    1       RETURN;

   3839 17 000223   000000 702200 xent               TSX2  ! X66_ARET

      283     3840    1   ZIG$SS_RVAR:
      284     3841    1       ENTRY;

   3841 17 000224   000000 700200 xent  ZIG$SS_RVAR  TSX0  ! X66_AUTO_2
        17 000225   000010 000002                    ZERO    8,2

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:51   
      285     3842    1       ERROR_IO = 0;

   3842 17 000226   000000 450000 4                  STZ     ERROR_IO

      286     3843        /*D*
      287     3844        NAME:    ZIG$SS_RVAR
      288     3845        DESCRIPTION:
      289     3846              Read a special record in the subschema file and the schema
      290     3847            subset. These records are UWA, RVA, IA, and  'SSS KEY'.
      291     3848            The paramaters are :
      292     3849                 SUBSCHEMA_KEY - 2 words with are the key in textc form.
      293     3850                 BUFFER$       - A pointer to the buffer to read.
      294     3851                 BUFFER_LEN    - UBIN 36 witch is the length of the buffer
      295     3852                                  to read.
      296     3853        */
      297     3854    1       READ_FPT.BUF_.BOUND = BUFFER_LEN;

   3854 17 000227   000000 236000 8                  LDQ     BUFFER_LEN
        17 000230   000020 736000                    QLS     16
        17 000231   000020 676000 0                  ERQ     READ_FPT+4
        17 000232   000021 376000 18                 ANQ     17
        17 000233   000020 656000 0                  ERSQ    READ_FPT+4

      298     3855    1       READ_FPT.BUF_.BUF$ = BUFFER$;

   3855 17 000234   000000 236000 7                  LDQ     BUFFER$
        17 000235   000021 756000 0                  STQ     READ_FPT+5

      299     3856    1       READ_FPT.V.DCB#=SUBDCB.DCB#;

   3856 17 000236   000012 220000 0                  LDX0    SUBDCB+8
        17 000237   000024 740000 0                  STX0    READ_FPT+8

      300     3857    1       READ_FPT.KEY_ = VECTOR(SUBSCHEMA_KEY);

   3857 17 000240   000022 237000 18                 LDAQ    18
        17 000241   000016 757000 0                  STAQ    READ_FPT+2
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:52   

      301     3858    1       CALL M$READ (READ_FPT) ALTRET (SPECIAL_KEY_NOT_THERE);

   3858 17 000242   000014 630400 0                  EPPR0   READ_FPT
        17 000243   440000 713400                    CLIMB   alt,read
        17 000244   401400 401760                    pmme    nvectors=4
        17 000245   000247 702000 17                 TSX2    SPECIAL_KEY_NOT_THERE

      302     3859    1       RETURN;

   3859 17 000246   000000 702200 xent               TSX2  ! X66_ARET

      303     3860    1   SPECIAL_KEY_NOT_THERE:
      304     3861    1       ERROR_IO = 1;

   3861 17 000247   000001 235007       SPECIAL_KEY* LDA     1,DL
        17 000250   000000 755000 4                  STA     ERROR_IO

      305     3862    1       RETURN;

   3862 17 000251   000000 702200 xent               TSX2  ! X66_ARET

SUBDCB
 Sect OctLoc
   0     002   ****** ******   ****** ******   ****** ******   ****** ******    ................

READ_FPT
 Sect OctLoc
   0     014   000005 777640   000024 006000   000000 177640   000000 006014    ................
   0     020   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     024   000000 600000   000000 000000   000000 000000   000000 000000    ................
   0     030   000000 000000   000000 000000                                    ........

OPEN_FPT
 Sect OctLoc
   0     032   000025 777640   000076 006000   000000 177640   000000 006014    .....>..........
   0     036   000000 177640   000000 006014   000000 177640   000000 006014    ................
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:53   
   0     042   000000 177640   000000 006014   000003 777640   000254 006000    ................
   0     046   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     076*  000000 400102   000000 003001   252525 002002   062111 252520    ...B........2I..
   0     102   000040 040040   000000 000002   000000 777777   000000 000000    .   ............
   0     106   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     112   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   0     116   040040 040040   000000 000000   000000 000000   000000 000000        ............
   0     122   000000 000000   ****** ******                                    ........

RES_OPEN
 Sect OctLoc
   0     124   000025 777640   000170 006000   000000 177640   000000 006014    .....x..........
   0     130   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     134   000000 177640   000000 006014   000003 777640   000254 006000    ................
   0     140   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     170*  000000 200042   000000 000000   252525 000000   000040 252520    ..."......... ..
   0     174   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   0     200   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     204   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   0     210   040040 040040   000000 000000   000000 000000   000000 000000        ............
   0     214   000000 000000   ****** ******                                    ........

VEHCOBOL
 Sect OctLoc
   0     216   000000 000007   400000 003111   104123 540000   003101 120114    .......IDS...APL
   0     222   540000 006103   117102 117114   077540 000003   111104 120***    ...COBOL?...IDP.

VEHFORT
 Sect OctLoc
   0     226   000000 000007   400000 003111   104123 540000   007106 117122    .......IDS...FOR
   0     232   124122 101116   540000 003101   120114 540000   003111 104120    TRAN...APL...IDP

VEHAPL
 Sect OctLoc
   0     236   000000 000005   400000 003111   104123 540000   003101 120114    .......IDS...APL
   0     242   540000 003111   104120 ******                                    ...IDP..

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:54   
VEHBASIC
 Sect OctLoc
   0     244   000000 000007   400000 003111   104123 540000   005102 101123    .......IDS...BAS
   0     250   111103 540000   003101 120114   540000 003111   104120 ******    IC...APL...IDP..

ACTT
 Sect OctLoc
   0     254   000000 000003   002000 101114   114040 040040   040040 ******    ......ALL     ..

CLOSE_FPT
 Sect OctLoc
   0     260   000003 777640   000312 006000   000000 177640   000000 006014    ................
   0     264   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     310*  000000 177640   000000 006014   000000 000000   000000 000040    ...............
   0     314   000220 000000   000000 000000                                    ........

GETDCB_FPT
 Sect OctLoc
   0     316   000001 777640   000324 006000   000000 177640   000000 006014    ................
   0     322   000000 177640   000000 006014   000000 000000   000000 000000    ................

SUBSCHEMA_NAME
 Sect OctLoc
   1     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

LANG_ALLOWED
 Sect OctLoc
  10     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

HEADING_TEXT
 Sect OctLoc
  12     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

LANG_TEXT
 Sect OctLoc
  13     000   116117 124040   125123 105104   040040 103117   102117 114040    NOT USED  COBOL
  13     004   040040 040040   106117 122124   122101 116040   040040 101120        FORTRAN   AP
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:55   
  13     010   114040 040040   040040 040040   102101 123111   103040 040040    L       BASIC
  13     014   040040 ******                                                      ..

HASH_SCHEMA_NAME
 Sect OctLoc
  14     000   0***** ******                                                    ....

(unnamed)
 Sect OctLoc
  16     000   123125 102064   104123 125102                                    SUB4DSUB

(unnamed)
 Sect OctLoc
  18     000   000007 777640   000216 006000   000007 777640   000226 006000    ................
  18     004   000005 777640   000236 006000   000007 777640   000244 006000    ................
  18     010   040040 040040   000000 006003   000007 777640   000002 006000        ............
  18     014   777777 777177   000077 600000   000000 777640   000000 006000    .....?..........
  18     020   000000 000000   777777 600000   000001 777640   000000 006000    ................
      306     3863    1   END READ64;
      307     3864        %EOD;

PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:56   
--  Include file information  --

   ZI_SUB_LANG.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure READ64.

   Procedure READ64 requires 170 words for executable code.
   Procedure READ64 requires 8 words of local(AUTO) storage.
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:57   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:58   
          MINI XREF LISTING

ABORT
        47**DCL-ENT  3838--CALL
ACTT
      3630**DCL      3157--DCLINIT  3266--DCLINIT
ACTT.Q
      3631**DCL      3630--DCLINIT
BUFFER
        27**DCL      3829<<ASSIGN
BUFFER$
        49**DCL      3855>>ASSIGN
BUFFER_LEN
        50**DCL      3854>>ASSIGN
BUF_PTR
        26**DCL        23--PROC     3819>>ASSIGN
CLOSE_FPT
      3730**DCL      3798<>CALL
CLOSE_FPT.SN_
      3730**DCL      3730--REDEF
CLOSE_FPT.UTL_
      3731**DCL      3731--REDEF
CLOSE_FPT.V
      3735**DCL      3730--DCLINIT
CLOSE_FPT.V.DCB#
      3736**DCL      3797<<ASSIGN
CLOSE_FPT.V.EXPIRE#
      3745**DCL      3745--REDEF
CLOSE_FPT.V.TYPE#
      3743**DCL      3743--REDEF
CLOSE_FPT.V.XTNSIZE#
      3740**DCL      3740--REDEF    3742--REDEF
ERR1
      3833**LABEL    3792--CALLALT  3798--CALLALT  3812--CALLALT  3814--CALLALT
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:59   
ERROR_IO
        45**DCL      3835<<ASSIGN   3842<<ASSIGN   3861<<ASSIGN
ERROR_READ64
        46**DCL      3826<<ASSIGN   3830<<ASSIGN
F$DCB.ACTPOS
      3683**DCL      3683--REDEF
F$DCB.ARS#
      3657**DCL      3657--REDEF
F$DCB.ATTR
      3676**DCL      3677--REDEF
F$DCB.BORROW
      3691**DCL      3691--REDEF    3691--REDEF    3691--REDEF
F$DCB.DCBNAME.L
      3705**DCL      3705--IMP-SIZ
F$DCB.EOMCHAR#
      3661**DCL      3661--REDEF
F$DCB.FCD#
      3670**DCL      3795>>IF
F$DCB.FLDID
      3686**DCL      3686--REDEF
F$DCB.FORM$
      3680**DCL      3680--REDEF
F$DCB.FSECT
      3696**DCL      3696--REDEF
F$DCB.FSN#
      3673**DCL      3673--REDEF    3673--REDEF    3674--REDEF
F$DCB.HEADER$
      3679**DCL      3679--REDEF
F$DCB.IXTNSIZE#
      3677**DCL      3677--REDEF
F$DCB.LASTSTA$
      3666**DCL      3666--REDEF
F$DCB.LVL
      3692**DCL      3692--REDEF
F$DCB.NAME#.C
      3667**DCL      3667--REDEF
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:60   
F$DCB.NOEOF
      3689**DCL      3689--REDEF
F$DCB.NRECS#
      3678**DCL      3678--REDEF
F$DCB.NRECX
      3697**DCL      3697--REDEF
F$DCB.OHDR
      3689**DCL      3689--REDEF
F$DCB.ORG#
      3672**DCL      3672--REDEF
F$DCB.PRECNO
      3695**DCL      3695--REDEF
F$DCB.RCSZ
      3701**DCL      3701--REDEF
F$DCB.RES#
      3668**DCL      3668--REDEF
F$DCB.SETX
      3680**DCL      3680--REDEF
F$DCB.TAB$
      3680**DCL      3680--REDEF
F$DCB.TDA
      3694**DCL      3695--REDEF
F$DCB.WSN#
      3668**DCL      3668--REDEF
FIR_SW
        43**DCL      3764>>IF       3794<<ASSIGN
GETDCB_FPT
      3760**DCL      3792<>CALL
GETDCB_FPT.DCBNAME_
      3760**DCL      3791<<ASSIGN
GETDCB_FPT.V
      3761**DCL      3760--DCLINIT
GETDCB_FPT.V.DCB#
      3761**DCL      3793>>ASSIGN
J
        44**DCL      3800>>IF       3833>>IF
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:61   
KEYX.CNT
        30**DCL      3823<<ASSIGN
KEYY
        28**DCL        29--REDEF    3822<<ASSIGN   3824--ASSIGN
KEY_NOT_FOUND
      3829**LABEL    3825--CALLALT
KEY_VAL
        25**DCL        23--PROC     3822>>ASSIGN
M$CLOSE
       599**DCL-ENT  3798--CALL
M$GETDCB
       605**DCL-ENT  3792--CALL
M$OPEN
       599**DCL-ENT  3812--CALL     3814--CALL
M$READ
       600**DCL-ENT  3825--CALL     3858--CALL
OPEN_FPT
      3155**DCL      3812<>CALL
OPEN_FPT.ACSVEH_
      3157**DCL      3158--REDEF    3768<<ASSIGN   3773<<ASSIGN   3778<<ASSIGN   3783<<ASSIGN
OPEN_FPT.ALTKEYS_
      3163**DCL      3164--REDEF    3164--REDEF
OPEN_FPT.HDR_
      3162**DCL      3163--REDEF
OPEN_FPT.NAME_
      3156**DCL      3811<<ASSIGN
OPEN_FPT.TAB_
      3161**DCL      3162--REDEF
OPEN_FPT.UHL_
      3155**DCL      3156--REDEF    3156--REDEF
OPEN_FPT.V
      3164**DCL      3155--DCLINIT
OPEN_FPT.V.DCB#
      3164**DCL      3809<<ASSIGN
OPEN_FPT.V.FSN#
      3195**DCL      3195--REDEF    3195--REDEF
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:62   
OPEN_FPT.V.SETDCB#
      3165**DCL      3810<<ASSIGN
OPEN_FPT.WSN_
      3161**DCL      3161--REDEF
READ_FPT
      3067**DCL      3825<>CALL     3858<>CALL
READ_FPT.BUF_.BOUND
      3069**DCL      3816<<ASSIGN   3854<<ASSIGN
READ_FPT.BUF_.BUF$
      3070**DCL      3821<<ASSIGN   3855<<ASSIGN
READ_FPT.KEY_
      3067**DCL      3824<<ASSIGN   3857<<ASSIGN
READ_FPT.STATION_
      3070**DCL      3071--REDEF
READ_FPT.V
      3071**DCL      3067--DCLINIT
READ_FPT.V.DCB#
      3071**DCL      3817<<ASSIGN   3856<<ASSIGN
READ_FPT.V.DVBYTE.REREAD#
      3082**DCL      3082--REDEF
READ_FPT.V.INDX#
      3080**DCL      3080--REDEF
RES_OPEN
      3264**DCL      3814<>CALL
RES_OPEN.ACSVEH_
      3266**DCL      3267--REDEF    3769<<ASSIGN   3774<<ASSIGN   3779<<ASSIGN   3784<<ASSIGN
RES_OPEN.ALTKEYS_
      3272**DCL      3273--REDEF    3273--REDEF
RES_OPEN.HDR_
      3271**DCL      3272--REDEF
RES_OPEN.TAB_
      3270**DCL      3271--REDEF
RES_OPEN.UHL_
      3264**DCL      3265--REDEF    3265--REDEF
RES_OPEN.V
      3273**DCL      3264--DCLINIT
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:63   
RES_OPEN.V.DCB#
      3273**DCL      3813<<ASSIGN
RES_OPEN.V.EXIST#
      3277**DCL      3803<<ASSIGN   3807<<ASSIGN
RES_OPEN.V.FSN#
      3304**DCL      3304--REDEF    3304--REDEF
RES_OPEN.V.FUN#
      3283**DCL      3802<<ASSIGN   3806<<ASSIGN
RES_OPEN.WSN_
      3270**DCL      3270--REDEF
SPECIAL_KEY_NOT_THERE
      3861**LABEL    3858--CALLALT
SUBDCB.DCB#
        41**DCL      3793<<ASSIGN   3795--IF       3797>>ASSIGN   3809>>ASSIGN   3813>>ASSIGN   3817>>ASSIGN
      3856>>ASSIGN
SUBDCB.SUBNM
        38**DCL      3791--ASSIGN   3811--ASSIGN
SUBDCB.SUBNM.CNT
        39**DCL      3788<<ASSIGN   3789>>IF
SUBDCB.SUBNM.TEXT
        40**DCL      3787<<ASSIGN   3790<<ASSIGN
SUBSCHEMA_KEY
        48**DCL      3857--ASSIGN
SUBSCHEMA_NAME
        36**DCL      3786>>CALLBLT  3787>>ASSIGN   3789>>IF
SUB_LANGUAGE
      2934**DCL      3766>>IF       3771>>IF       3776>>IF       3781>>IF
TEMP_PTR
        32**DCL        27--IMP-PTR    33--REDEF    3819<<ASSIGN   3821>>ASSIGN   3829>>ASSIGN
TEMP_PTRX.SEGID
        35**DCL      3820<<ASSIGN
TMP_CNT
        42**DCL      3786<<CALLBLT  3788>>ASSIGN
VEHAPL
      3483**DCL      3778--ASSIGN   3779--ASSIGN
VEHAPL.Q
PL6.E3A0      #003=READ64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:11 Page:64   
      3484**DCL      3483--DCLINIT
VEHBASIC
      3548**DCL      3783--ASSIGN   3784--ASSIGN
VEHBASIC.Q
      3549**DCL      3548--DCLINIT
VEHCOBOL
      3319**DCL      3768--ASSIGN   3769--ASSIGN
VEHCOBOL.Q
      3320**DCL      3319--DCLINIT
VEHFORT
      3401**DCL      3773--ASSIGN   3774--ASSIGN
VEHFORT.Q
      3402**DCL      3401--DCLINIT

PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:65   
      308        1        /*M*        WRIT64  I-D-S/II DBACS WRITE A 64 WORD REC 790221 */
      309        2        /*T***********************************************************/
      310        3        /*T*                                                         */
      311        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      312        5        /*T*                                                         */
      313        6        /*T***********************************************************/
      314        7        /*P*
      315        8        NAME:       WRIT64
      316        9        PURPOSE:    Write a 64 word record to SUBSCHEMA file.
      317       10        ARGUMENTS:  KEY_VAL-> A 4 BYTE KEY WHICH IS THE PAGE NUMBER
      318       11                              TO BE WRITTEN.
      319       12                    BUF_PTR-> POINTER TO THE CALLER'S BUFFER AREA.
      320       13        CALLING PROGRAMS:
      321       14                    MAIN FUNCTION               CALLING MODULES
      322       15                    -------------               ---------------
      323       16                    SSCHEMA DESCRIPTOR BUILDER  DDI5
      324       17                    SSROOT                      DDH8,DDI5,DDI8
      325       18                    VALIDATOR                   DDL2,DDN2
      326       19                    VROOT                       DDN0
      327       20        */
      328       21        WRIT64: PROC (KEY_VAL, BUF_PTR);
      329       22        /*  Input arguments  */
      330       23    1   DCL KEY_VAL UBIN (36);
      331       24    1   DCL KEYY UBIN (36) STATIC; /* Key of FPT_WRITE = keyy */
      332       25    1   DCL 1 KEYX REDEF KEYY ALIGNED,
      333       26    1         2 CNT BIT (9) UNAL, /* Key length to be provided */
      334       27    1         2 * BIT (27) UNAL; /* 3 byte long key */
      335       28    1   DCL BUF_PTR PTR;
      336       29    1   DCL TEMP_PTR PTR STATIC;
      337       30    1   DCL 1 TEMP_PTRX REDEF TEMP_PTR ALIGNED,
      338       31    1         2 * BIT (24) UNAL, /* Buffer pointer */
      339       32    1         2 SEGID BIT (12) UNAL; /* Seg id */
      340       33    1   DCL SUBSCHEMA_NAME CHAR(30) EXT;
      341       34    1   DCL 1 SUBDCB SYMREF,
      342       35    1         2 SUBNM UNAL,
      343       36    1           3 CNT UBIN(9) UNAL,
      344       37    1           3 TEXT CHAR(31) UNAL,
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:66   
      345       38    1         2 DCB# UBIN(18) ALIGNED;
      346       39    1   DCL TMP_CNT UBIN(36) ALIGNED;
      347       40    1   DCL ABORT ENTRY;
      348       41    1   DCL SUBSCHEMA_KEY CHAR (8) EXT;
      349       42    1   DCL BUFFER$ PTR EXT;
      350       43    1   DCL ERROR_IO UBIN (36) EXT;
      351       44    1   DCL BUFFER_LEN UBIN (36) EXT;
      352       45        %INCLUDE B_SEGIDS_C;
      353      584        %INCLUDE CP_6_SUBS;
      354     1124        %INCLUDE CP_6;
      355     1205        %FPT_WRITE(FPTN=WRITE_FPT);
      356     1236        %F$DCB;
      357     1293        %EJECT;
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:67   
      358     1294         /*
      359     1295         An i-d-s/ii data file requires a 4 byte key which is the
      360     1296         page number to be read.
      361     1297         */
      362     1298    1       WRITE_FPT.BUF_.BOUND = 255; /* Length in bytes - 1 */
      363     1299    1       TEMP_PTR = BUF_PTR; /* Move buffer ptr to local ptr */
      364     1300    1       TEMP_PTRX.SEGID = %ISSID;
      365     1301    1       WRITE_FPT.BUF_.BUF$ = TEMP_PTR;
      366     1302    1       WRITE_FPT.V.DCB#=SUBDCB.DCB#;
      367     1303    1       KEYY = KEY_VAL; /* Move key value to local storage */
      368     1304    1       KEYX.CNT = '003'O; /* Set key length to 3 */
      369     1305    1       WRITE_FPT.KEY_ = VECTOR(KEYY);
      370     1306    1       CALL M$WRITE (WRITE_FPT) ALTRET(ERR1);
      371     1307    1       RETURN;
      372     1308    1   ERR1:
      373     1309    1       CALL ABORT;
      374     1310    1       RETURN;
      375     1311    1   ZIG$SS_WVAR:
      376     1312    1       ENTRY;
      377     1313    1       ERROR_IO = 0;
      378     1314        /*D*
      379     1315        NAME:    ZIG$SS_WVAR
      380     1316        DESCRIPTION:
      381     1317              Read a special record in the subschema file and the schema
      382     1318            subset. These records are UWA, RVA, IA, and  'SSS KEY'.
      383     1319            The paramaters are :
      384     1320                 SUBSCHEMA_KEY - 2 words with are the key in textc form.
      385     1321                 BUFFER$       - A pointer to the buffer to read.
      386     1322                 BUFFER_LEN    - UBIN 36 witch is the length of the buffer
      387     1323                                  to read.
      388     1324        */
      389     1325    1       WRITE_FPT.BUF_.BOUND = BUFFER_LEN;
      390     1326    1       WRITE_FPT.BUF_.BUF$ = BUFFER$;
      391     1327    1       WRITE_FPT.V.DCB#=SUBDCB.DCB#;
      392     1328    1       WRITE_FPT.KEY_ = VECTOR(SUBSCHEMA_KEY);
      393     1329    1       CALL M$WRITE (WRITE_FPT) ALTRET (SPECIAL_KEY_ERROR);
      394     1330    1       RETURN;
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:68   
      395     1331    1   SPECIAL_KEY_ERROR:
      396     1332    1       ERROR_IO = 1;
      397     1333    1       RETURN;
      398     1334    1   END WRIT64;
      399     1335         %EOD;

PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:69   
--  Include file information  --

   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   B_SEGIDS_C.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure WRIT64.

   Procedure WRIT64 requires 53 words for executable code.
   Procedure WRIT64 requires 6 words of local(AUTO) storage.

PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:70   

 Object Unit name= WRIT64                                     File name= ZIG$SS_IO.:ZIC0TOU
 UTS= SEP 05 '97 12:12:16.84 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    14     16  WRIT64
    1  LblCom even  none     8     10  SUBSCHEMA_NAME
    2  LblCom even  none     2      2  SUBSCHEMA_KEY
    3  LblCom even  none     1      1  BUFFER$
    4  LblCom even  none     1      1  ERROR_IO
    5  LblCom even  none     1      1  BUFFER_LEN
    6   DCB   even  none     0      0  M$UC
    7   Proc  even  none    53     65  WRIT64
    8  RoData even  none     8     10  WRIT64

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Std        2  WRIT64
     7     37                  yes      Std        0  ZIG$SS_WVAR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 ABORT
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:71   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SUBDCB                                M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:72   


      308        1        /*M*        WRIT64  I-D-S/II DBACS WRITE A 64 WORD REC 790221 */
      309        2        /*T***********************************************************/
      310        3        /*T*                                                         */
      311        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      312        5        /*T*                                                         */
      313        6        /*T***********************************************************/
      314        7        /*P*
      315        8        NAME:       WRIT64
      316        9        PURPOSE:    Write a 64 word record to SUBSCHEMA file.
      317       10        ARGUMENTS:  KEY_VAL-> A 4 BYTE KEY WHICH IS THE PAGE NUMBER
      318       11                              TO BE WRITTEN.
      319       12                    BUF_PTR-> POINTER TO THE CALLER'S BUFFER AREA.
      320       13        CALLING PROGRAMS:
      321       14                    MAIN FUNCTION               CALLING MODULES
      322       15                    -------------               ---------------
      323       16                    SSCHEMA DESCRIPTOR BUILDER  DDI5
      324       17                    SSROOT                      DDH8,DDI5,DDI8
      325       18                    VALIDATOR                   DDL2,DDN2
      326       19                    VROOT                       DDN0
      327       20        */
      328       21        WRIT64: PROC (KEY_VAL, BUF_PTR);

     21  7 000000   000000 700200 xent  WRIT64       TSX0  ! X66_AUTO_2
         7 000001   000006 000002                    ZERO    6,2

      329       22        /*  Input arguments  */
      330       23    1   DCL KEY_VAL UBIN (36);
      331       24    1   DCL KEYY UBIN (36) STATIC; /* Key of FPT_WRITE = keyy */
      332       25    1   DCL 1 KEYX REDEF KEYY ALIGNED,
      333       26    1         2 CNT BIT (9) UNAL, /* Key length to be provided */
      334       27    1         2 * BIT (27) UNAL; /* 3 byte long key */
      335       28    1   DCL BUF_PTR PTR;
      336       29    1   DCL TEMP_PTR PTR STATIC;
      337       30    1   DCL 1 TEMP_PTRX REDEF TEMP_PTR ALIGNED,
      338       31    1         2 * BIT (24) UNAL, /* Buffer pointer */
      339       32    1         2 SEGID BIT (12) UNAL; /* Seg id */
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:73   
      340       33    1   DCL SUBSCHEMA_NAME CHAR(30) EXT;
      341       34    1   DCL 1 SUBDCB SYMREF,
      342       35    1         2 SUBNM UNAL,
      343       36    1           3 CNT UBIN(9) UNAL,
      344       37    1           3 TEXT CHAR(31) UNAL,
      345       38    1         2 DCB# UBIN(18) ALIGNED;
      346       39    1   DCL TMP_CNT UBIN(36) ALIGNED;
      347       40    1   DCL ABORT ENTRY;
      348       41    1   DCL SUBSCHEMA_KEY CHAR (8) EXT;
      349       42    1   DCL BUFFER$ PTR EXT;
      350       43    1   DCL ERROR_IO UBIN (36) EXT;
      351       44    1   DCL BUFFER_LEN UBIN (36) EXT;
      352       45        %INCLUDE B_SEGIDS_C;
      353      584        %INCLUDE CP_6_SUBS;
      354     1124        %INCLUDE CP_6;
      355     1205        %FPT_WRITE(FPTN=WRITE_FPT);
      356     1236        %F$DCB;
      357     1293        %EJECT;
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:74   
      358     1294         /*
      359     1295         An i-d-s/ii data file requires a 4 byte key which is the
      360     1296         page number to be read.
      361     1297         */
      362     1298    1       WRITE_FPT.BUF_.BOUND = 255; /* Length in bytes - 1 */

   1298  7 000002   000006 236000 0                  LDQ     WRITE_FPT+4
         7 000003   177777 376007                    ANQ     65535,DL
         7 000004   000000 276000 8                  ORQ     0
         7 000005   000006 756000 0                  STQ     WRITE_FPT+4

      363     1299    1       TEMP_PTR = BUF_PTR; /* Move buffer ptr to local ptr */

   1299  7 000006   200004 470500                    LDP0    @BUF_PTR,,AUTO
         7 000007   000000 236100                    LDQ     0,,PR0
         7 000010   000001 756000 0                  STQ     TEMP_PTR

      364     1300    1       TEMP_PTRX.SEGID = %ISSID;

   1300  7 000011   006000 236007                    LDQ     3072,DL
         7 000012   000001 752003 0                  STCQ    TEMP_PTR,'03'O

      365     1301    1       WRITE_FPT.BUF_.BUF$ = TEMP_PTR;

   1301  7 000013   000001 236000 0                  LDQ     TEMP_PTR
         7 000014   000007 756000 0                  STQ     WRITE_FPT+5

      366     1302    1       WRITE_FPT.V.DCB#=SUBDCB.DCB#;

   1302  7 000015   000010 220000 xsym               LDX0    SUBDCB+8
         7 000016   000012 740000 0                  STX0    WRITE_FPT+8

      367     1303    1       KEYY = KEY_VAL; /* Move key value to local storage */

   1303  7 000017   200003 471500                    LDP1    @KEY_VAL,,AUTO
         7 000020   100000 235100                    LDA     0,,PR1
         7 000021   000000 755000 0                  STA     KEYY
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:75   

      368     1304    1       KEYX.CNT = '003'O; /* Set key length to 3 */

   1304  7 000022   003000 236003                    LDQ     1536,DU
         7 000023   000000 552040 0                  STBQ    KEYY,'40'O

      369     1305    1       WRITE_FPT.KEY_ = VECTOR(KEYY);

   1305  7 000024   000002 237000 8                  LDAQ    2
         7 000025   000004 757000 0                  STAQ    WRITE_FPT+2

      370     1306    1       CALL M$WRITE (WRITE_FPT) ALTRET(ERR1);

   1306  7 000026   000002 630400 0                  EPPR0   WRITE_FPT
         7 000027   440001 713400                    CLIMB   alt,write
         7 000030   401400 401760                    pmme    nvectors=4
         7 000031   000033 702000 7                  TSX2    ERR1

      371     1307    1       RETURN;

   1307  7 000032   000000 702200 xent               TSX2  ! X66_ARET

      372     1308    1   ERR1:
      373     1309    1       CALL ABORT;

   1309  7 000033   000001 631400 8     ERR1         EPPR1   1
         7 000034   000000 701000 xent               TSX1    ABORT
         7 000035   000000 011000                    NOP     0

      374     1310    1       RETURN;

   1310  7 000036   000000 702200 xent               TSX2  ! X66_ARET

      375     1311    1   ZIG$SS_WVAR:
      376     1312    1       ENTRY;

   1312  7 000037   000000 700200 xent  ZIG$SS_WVAR  TSX0  ! X66_AUTO_2
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:76   
         7 000040   000006 000002                    ZERO    6,2

      377     1313    1       ERROR_IO = 0;

   1313  7 000041   000000 450000 4                  STZ     ERROR_IO

      378     1314        /*D*
      379     1315        NAME:    ZIG$SS_WVAR
      380     1316        DESCRIPTION:
      381     1317              Read a special record in the subschema file and the schema
      382     1318            subset. These records are UWA, RVA, IA, and  'SSS KEY'.
      383     1319            The paramaters are :
      384     1320                 SUBSCHEMA_KEY - 2 words with are the key in textc form.
      385     1321                 BUFFER$       - A pointer to the buffer to read.
      386     1322                 BUFFER_LEN    - UBIN 36 witch is the length of the buffer
      387     1323                                  to read.
      388     1324        */
      389     1325    1       WRITE_FPT.BUF_.BOUND = BUFFER_LEN;

   1325  7 000042   000000 236000 5                  LDQ     BUFFER_LEN
         7 000043   000020 736000                    QLS     16
         7 000044   000006 676000 0                  ERQ     WRITE_FPT+4
         7 000045   000004 376000 8                  ANQ     4
         7 000046   000006 656000 0                  ERSQ    WRITE_FPT+4

      390     1326    1       WRITE_FPT.BUF_.BUF$ = BUFFER$;

   1326  7 000047   000000 236000 3                  LDQ     BUFFER$
         7 000050   000007 756000 0                  STQ     WRITE_FPT+5

      391     1327    1       WRITE_FPT.V.DCB#=SUBDCB.DCB#;

   1327  7 000051   000010 220000 xsym               LDX0    SUBDCB+8
         7 000052   000012 740000 0                  STX0    WRITE_FPT+8

      392     1328    1       WRITE_FPT.KEY_ = VECTOR(SUBSCHEMA_KEY);

PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:77   
   1328  7 000053   000006 237000 8                  LDAQ    6
         7 000054   000004 757000 0                  STAQ    WRITE_FPT+2

      393     1329    1       CALL M$WRITE (WRITE_FPT) ALTRET (SPECIAL_KEY_ERROR);

   1329  7 000055   000002 630400 0                  EPPR0   WRITE_FPT
         7 000056   440001 713400                    CLIMB   alt,write
         7 000057   401400 401760                    pmme    nvectors=4
         7 000060   000062 702000 7                  TSX2    SPECIAL_KEY_ERROR

      394     1330    1       RETURN;

   1330  7 000061   000000 702200 xent               TSX2  ! X66_ARET

      395     1331    1   SPECIAL_KEY_ERROR:
      396     1332    1       ERROR_IO = 1;

   1332  7 000062   000001 235007       SPECIAL_KEY* LDA     1,DL
         7 000063   000000 755000 4                  STA     ERROR_IO

      397     1333    1       RETURN;

   1333  7 000064   000000 702200 xent               TSX2  ! X66_ARET

WRITE_FPT
 Sect OctLoc
   0     002   000003 777640   000012 006000   000000 177640   000000 006014    ................
   0     006   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     012   000000 400400   000000 000000   000000 000000   000000 000000    ................

SUBSCHEMA_NAME
 Sect OctLoc
   1     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   8     000   000077 600000   000000 000000   000000 777640   000000 006000    .?..............
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:78   
   8     004   777777 600000   000000 000000   000001 777640   000000 006000    ................
      398     1334    1   END WRIT64;
      399     1335         %EOD;

PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:79   
--  Include file information  --

   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   B_SEGIDS_C.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure WRIT64.

   Procedure WRIT64 requires 53 words for executable code.
   Procedure WRIT64 requires 6 words of local(AUTO) storage.
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:80   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:81   
          MINI XREF LISTING

ABORT
        40**DCL-ENT  1309--CALL
BUFFER$
        42**DCL      1326>>ASSIGN
BUFFER_LEN
        44**DCL      1325>>ASSIGN
BUF_PTR
        28**DCL        21--PROC     1299>>ASSIGN
ERR1
      1309**LABEL    1306--CALLALT
ERROR_IO
        43**DCL      1313<<ASSIGN   1332<<ASSIGN
F$DCB.ACTPOS
      1269**DCL      1269--REDEF
F$DCB.ARS#
      1243**DCL      1243--REDEF
F$DCB.ATTR
      1262**DCL      1263--REDEF
F$DCB.BORROW
      1277**DCL      1277--REDEF    1277--REDEF    1277--REDEF
F$DCB.DCBNAME.L
      1291**DCL      1291--IMP-SIZ
F$DCB.EOMCHAR#
      1247**DCL      1247--REDEF
F$DCB.FLDID
      1272**DCL      1272--REDEF
F$DCB.FORM$
      1266**DCL      1266--REDEF
F$DCB.FSECT
      1282**DCL      1282--REDEF
F$DCB.FSN#
      1259**DCL      1259--REDEF    1259--REDEF    1260--REDEF
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:82   
F$DCB.HEADER$
      1265**DCL      1265--REDEF
F$DCB.IXTNSIZE#
      1263**DCL      1263--REDEF
F$DCB.LASTSTA$
      1252**DCL      1252--REDEF
F$DCB.LVL
      1278**DCL      1278--REDEF
F$DCB.NAME#.C
      1253**DCL      1253--REDEF
F$DCB.NOEOF
      1275**DCL      1275--REDEF
F$DCB.NRECS#
      1264**DCL      1264--REDEF
F$DCB.NRECX
      1283**DCL      1283--REDEF
F$DCB.OHDR
      1275**DCL      1275--REDEF
F$DCB.ORG#
      1258**DCL      1258--REDEF
F$DCB.PRECNO
      1281**DCL      1281--REDEF
F$DCB.RCSZ
      1287**DCL      1287--REDEF
F$DCB.RES#
      1254**DCL      1254--REDEF
F$DCB.SETX
      1266**DCL      1266--REDEF
F$DCB.TAB$
      1266**DCL      1266--REDEF
F$DCB.TDA
      1280**DCL      1281--REDEF
F$DCB.WSN#
      1254**DCL      1254--REDEF
KEYX.CNT
        26**DCL      1304<<ASSIGN
PL6.E3A0      #004=WRIT64 File=ZIG$SS_IO.:ZIC0TSI                                FRI 09/05/97 12:12 Page:83   
KEYY
        24**DCL        25--REDEF    1303<<ASSIGN   1305--ASSIGN
KEY_VAL
        23**DCL        21--PROC     1303>>ASSIGN
M$WRITE
      1134**DCL-ENT  1306--CALL     1329--CALL
SPECIAL_KEY_ERROR
      1332**LABEL    1329--CALLALT
SUBDCB.DCB#
        38**DCL      1302>>ASSIGN   1327>>ASSIGN
SUBSCHEMA_KEY
        41**DCL      1328--ASSIGN
TEMP_PTR
        29**DCL        30--REDEF    1299<<ASSIGN   1301>>ASSIGN
TEMP_PTRX.SEGID
        32**DCL      1300<<ASSIGN
WRITE_FPT
      1222**DCL      1306<>CALL     1329<>CALL
WRITE_FPT.BUF_.BOUND
      1222**DCL      1298<<ASSIGN   1325<<ASSIGN
WRITE_FPT.BUF_.BUF$
      1224**DCL      1301<<ASSIGN   1326<<ASSIGN
WRITE_FPT.KEY_
      1222**DCL      1305<<ASSIGN   1328<<ASSIGN
WRITE_FPT.STATION_
      1224**DCL      1224--REDEF
WRITE_FPT.V
      1225**DCL      1222--DCLINIT
WRITE_FPT.V.DCB#
      1225**DCL      1302<<ASSIGN   1327<<ASSIGN
WRITE_FPT.V.DVBYTE.VFC#
      1231**DCL      1231--REDEF

PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:84   
      400        1        /*M*     CLOSE_64       I-D-S/II       DBACS */
      401        2        /*T***********************************************************/
      402        3        /*T*                                                         */
      403        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      404        5        /*T*                                                         */
      405        6        /*T***********************************************************/
      406        7        /*P*
      407        8        NAME:    CLOSE_64
      408        9        PURPOSE: TO CLOSE THE DCB# IN SUBDCB.DCB#
      409       10        */
      410       11        CLOSE_64:
      411       12            PROC;
      412       13    1   DCL 1 SUBDCB ALIGNED SYMREF,
      413       14    1         2 SUBNM UNAL,
      414       15    1           3 CNT UBIN (9) UNAL,
      415       16    1           3 TEXT CHAR (31) UNAL,
      416       17    1         2 DCB# UBIN (18) ALIGNED;
      417       18    1   DCL 1 SSFCON(0:3) EXT, /* Shared with "READSF" */
      418       19    1         2 CURRENT_BLOCK SBIN (36) ALIGNED INIT(-1*4),
      419       20    1         2 WRITE_SWITCH BIT(1) UNAL INIT('0'B*4),
      420       21    1         2 USE_NUM UBIN (35) INIT (0*4) UNAL,
      421       22    1         2 BUFFER,
      422       23    1           3 RECORD1 ALIGNED CHAR(128),
      423       24    1           3 RECORD2 ALIGNED CHAR(128);
      424       25    1   DCL LAST_NOT_USED UBIN (36) EXT;
      425       26    1   DCL ACCESS_COUNT UBIN (36) EXT;
      426       27    1   DCL I UBIN (36) STATIC;
      427       28    1   DCL READ64 ENTRY (2);
      428       29    1   DCL WRIT64 ENTRY (2);
      429       30        %INCLUDE CP_6;
      430      111        %FPT_CLOSE (FPTN=CLOSE_FPT);
      431      153        %F$DCB;
      432      210         %EJECT;
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:85   
      433      211    1       IF ~DCBADDR(SUBDCB.DCB#) -> F$DCB.FCD#
      434      212    1       THEN RETURN;
      435      213    2       DO I = 0 TO 3;
      436      214    2           IF SSFCON.WRITE_SWITCH(I)
      437      215    3           THEN DO;
      438      216    3               CALL WRIT64(SSFCON.CURRENT_BLOCK(I),ADDR(SSFCON.BUFFER(I)));
      439      217    3               END;
      440      218    2           SSFCON.CURRENT_BLOCK(I) = -1;
      441      219    2           SSFCON.WRITE_SWITCH(I) = '0'B;
      442      220    2           SSFCON.USE_NUM(I) = 0;
      443      221    2           END;
      444      222    1       ACCESS_COUNT = 0;
      445      223    1       CLOSE_FPT.V.DCB#=SUBDCB.DCB#;
      446      224    1       CALL M$CLOSE(CLOSE_FPT) ALTRET (ERR1);
      447      225    1       RETURN;
      448      226    1   ERR1:
      449      227    1       RETURN;
      450      228    1   END CLOSE_64;
      451      229        %EOD;

PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:86   
--  Include file information  --

   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CLOSE_64.

   Procedure CLOSE_64 requires 54 words for executable code.
   Procedure CLOSE_64 requires 8 words of local(AUTO) storage.

PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:87   

 Object Unit name= CLOSE_64                                   File name= ZIG$SS_IO.:ZIC0TOU
 UTS= SEP 05 '97 12:12:39.88 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none   264    410  SSFCON
    1  LblCom even  none     1      1  LAST_NOT_USED
    2  LblCom even  none     1      1  ACCESS_COUNT
    3   Data  even  none    32     40  CLOSE_64
    4   DCB   even  none     0      0  M$UC
    5   Proc  even  none    54     66  CLOSE_64
    6  RoData even  none     5      5  CLOSE_64

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        0  CLOSE_64

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 WRIT64
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:88   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SUBDCB                                M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:89   


      400        1        /*M*     CLOSE_64       I-D-S/II       DBACS */
      401        2        /*T***********************************************************/
      402        3        /*T*                                                         */
      403        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      404        5        /*T*                                                         */
      405        6        /*T***********************************************************/
      406        7        /*P*
      407        8        NAME:    CLOSE_64
      408        9        PURPOSE: TO CLOSE THE DCB# IN SUBDCB.DCB#
      409       10        */
      410       11        CLOSE_64:
      411       12            PROC;

     12  5 000000   000000 700200 xent  CLOSE_64     TSX0  ! X66_AUTO_0
         5 000001   000010 000000                    ZERO    8,0

      412       13    1   DCL 1 SUBDCB ALIGNED SYMREF,
      413       14    1         2 SUBNM UNAL,
      414       15    1           3 CNT UBIN (9) UNAL,
      415       16    1           3 TEXT CHAR (31) UNAL,
      416       17    1         2 DCB# UBIN (18) ALIGNED;
      417       18    1   DCL 1 SSFCON(0:3) EXT, /* Shared with "READSF" */
      418       19    1         2 CURRENT_BLOCK SBIN (36) ALIGNED INIT(-1*4),
      419       20    1         2 WRITE_SWITCH BIT(1) UNAL INIT('0'B*4),
      420       21    1         2 USE_NUM UBIN (35) INIT (0*4) UNAL,
      421       22    1         2 BUFFER,
      422       23    1           3 RECORD1 ALIGNED CHAR(128),
      423       24    1           3 RECORD2 ALIGNED CHAR(128);
      424       25    1   DCL LAST_NOT_USED UBIN (36) EXT;
      425       26    1   DCL ACCESS_COUNT UBIN (36) EXT;
      426       27    1   DCL I UBIN (36) STATIC;
      427       28    1   DCL READ64 ENTRY (2);
      428       29    1   DCL WRIT64 ENTRY (2);
      429       30        %INCLUDE CP_6;
      430      111        %FPT_CLOSE (FPTN=CLOSE_FPT);
      431      153        %F$DCB;
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:90   
      432      210         %EJECT;
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:91   
      433      211    1       IF ~DCBADDR(SUBDCB.DCB#) -> F$DCB.FCD#

    211  5 000002   000000 470400 6                  LDP0    0
         5 000003   000000 471500                    LDP1    0,,PR0
         5 000004   000010 220000 xsym               LDX0    SUBDCB+8
         5 000005   100000 473510                    LDP3    0,X0,PR1
         5 000006   300031 236100                    LDQ     25,,PR3
         5 000007   000026 736000                    QLS     22
         5 000010   400000 376003                    ANQ     -131072,DU
         5 000011   400000 676003                    ERQ     -131072,DU
         5 000012   000014 600000 5                  TZE     s:213

      434      212    1       THEN RETURN;

    212  5 000013   000000 702200 xent               TSX2  ! X66_ARET

      435      213    2       DO I = 0 TO 3;

    213  5 000014   000000 450000 3                  STZ     I

      436      214    2           IF SSFCON.WRITE_SWITCH(I)

    214  5 000015   000000 236000 3                  LDQ     I
         5 000016   000102 402007                    MPY     66,DL
         5 000017   000001 234006 0                  SZN     SSFCON+1,QL
         5 000020   000037 605000 5                  TPL     s:218

      437      215    3           THEN DO;

      438      216    3               CALL WRIT64(SSFCON.CURRENT_BLOCK(I),ADDR(SSFCON.BUFFER(I)));

    216  5 000021   000000 236000 3                  LDQ     I
         5 000022   000102 402003                    MPY     66,DU
         5 000023   000002 036000 6                  ADLQ    2
         5 000024   200004 756100                    STQ     4,,AUTO
         5 000025   200004 630500                    EPPR0   4,,AUTO
         5 000026   200007 450500                    STP0    7,,AUTO
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:92   
         5 000027   000000 236000 3                  LDQ     I
         5 000030   000102 402003                    MPY     66,DU
         5 000031   000003 036000 6                  ADLQ    3
         5 000032   200006 756100                    STQ     6,,AUTO
         5 000033   200006 630500                    EPPR0   6,,AUTO
         5 000034   000001 631400 6                  EPPR1   1
         5 000035   000000 701000 xent               TSX1    WRIT64
         5 000036   000000 011000                    NOP     0

      439      217    3               END;

      440      218    2           SSFCON.CURRENT_BLOCK(I) = -1;

    218  5 000037   000000 236000 3                  LDQ     I
         5 000040   000102 402007                    MPY     66,DL
         5 000041   000001 335007                    LCA     1,DL
         5 000042   000000 755006 0                  STA     SSFCON,QL

      441      219    2           SSFCON.WRITE_SWITCH(I) = '0'B;

    219  5 000043   000000 620006                    EAX0    0,QL
         5 000044   000004 236000 6                  LDQ     4
         5 000045   000001 356010 0                  ANSQ    SSFCON+1,X0

      442      220    2           SSFCON.USE_NUM(I) = 0;

    220  5 000046   400000 236003                    LDQ     -131072,DU
         5 000047   000001 356010 0                  ANSQ    SSFCON+1,X0

      443      221    2           END;

    221  5 000050   000000 235000 3                  LDA     I
         5 000051   000001 035007                    ADLA    1,DL
         5 000052   000000 755000 3                  STA     I
         5 000053   000004 115007                    CMPA    4,DL
         5 000054   000015 602000 5                  TNC     s:214

PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:93   
      444      222    1       ACCESS_COUNT = 0;

    222  5 000055   000000 450000 2                  STZ     ACCESS_COUNT

      445      223    1       CLOSE_FPT.V.DCB#=SUBDCB.DCB#;

    223  5 000056   000010 220000 xsym               LDX0    SUBDCB+8
         5 000057   000034 740000 3                  STX0    CLOSE_FPT+26

      446      224    1       CALL M$CLOSE(CLOSE_FPT) ALTRET (ERR1);

    224  5 000060   000002 630400 3                  EPPR0   CLOSE_FPT
         5 000061   450001 713400                    CLIMB   alt,close
         5 000062   406000 401760                    pmme    nvectors=13
         5 000063   000065 702000 5                  TSX2    ERR1

      447      225    1       RETURN;

    225  5 000064   000000 702200 xent               TSX2  ! X66_ARET

      448      226    1   ERR1:
      449      227    1       RETURN;

    227  5 000065   000000 702200 xent  ERR1         TSX2  ! X66_ARET

SSFCON
 Sect OctLoc
   0     000   777777 777777   000000 000000   0***** ******   ****** ******    ................
   0     100*  ****** ******   ****** ******   777777 777777   000000 000000    ................
   0     104   0***** ******   ****** ******   ****** ******   ****** ******    ................
   0     204*  777777 777777   000000 000000   0***** ******   ****** ******    ................
   0     304*  ****** ******   ****** ******   777777 777777   000000 000000    ................
   0     310   0***** ******   ****** ******   ****** ******   ****** ******    ................
   0     404*  ****** ******   ****** ******   ****** ******   ****** ******    ................

CLOSE_FPT
 Sect OctLoc
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:94   
   3     002   000003 777640   000034 006000   000000 177640   000000 006014    ................
   3     006   000000 177640   000000 006014   000000 177640   000000 006014    ................
   3     032*  000000 177640   000000 006014   000000 000000   000000 000040    ...............
   3     036   000220 000000   000000 000000                                    ........

(unnamed)
 Sect OctLoc
   6     000   000000 006003   000002 000000   000002 006000   000000 006000    ................
   6     004   377777 777777                                                    ....
      450      228    1   END CLOSE_64;
      451      229        %EOD;

PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:95   
--  Include file information  --

   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CLOSE_64.

   Procedure CLOSE_64 requires 54 words for executable code.
   Procedure CLOSE_64 requires 8 words of local(AUTO) storage.
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:96   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:97   
          MINI XREF LISTING

ACCESS_COUNT
        26**DCL       222<<ASSIGN
CLOSE_FPT
       134**DCL       224<>CALL
CLOSE_FPT.SN_
       134**DCL       134--REDEF
CLOSE_FPT.UTL_
       135**DCL       135--REDEF
CLOSE_FPT.V
       139**DCL       134--DCLINIT
CLOSE_FPT.V.DCB#
       140**DCL       223<<ASSIGN
CLOSE_FPT.V.EXPIRE#
       149**DCL       149--REDEF
CLOSE_FPT.V.TYPE#
       147**DCL       147--REDEF
CLOSE_FPT.V.XTNSIZE#
       144**DCL       144--REDEF     146--REDEF
ERR1
       227**LABEL     224--CALLALT
F$DCB.ACTPOS
       186**DCL       186--REDEF
F$DCB.ARS#
       160**DCL       160--REDEF
F$DCB.ATTR
       179**DCL       180--REDEF
F$DCB.BORROW
       194**DCL       194--REDEF     194--REDEF     194--REDEF
F$DCB.DCBNAME.L
       208**DCL       208--IMP-SIZ
F$DCB.EOMCHAR#
       164**DCL       164--REDEF
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:98   
F$DCB.FCD#
       173**DCL       211>>IF
F$DCB.FLDID
       189**DCL       189--REDEF
F$DCB.FORM$
       183**DCL       183--REDEF
F$DCB.FSECT
       199**DCL       199--REDEF
F$DCB.FSN#
       176**DCL       176--REDEF     176--REDEF     177--REDEF
F$DCB.HEADER$
       182**DCL       182--REDEF
F$DCB.IXTNSIZE#
       180**DCL       180--REDEF
F$DCB.LASTSTA$
       169**DCL       169--REDEF
F$DCB.LVL
       195**DCL       195--REDEF
F$DCB.NAME#.C
       170**DCL       170--REDEF
F$DCB.NOEOF
       192**DCL       192--REDEF
F$DCB.NRECS#
       181**DCL       181--REDEF
F$DCB.NRECX
       200**DCL       200--REDEF
F$DCB.OHDR
       192**DCL       192--REDEF
F$DCB.ORG#
       175**DCL       175--REDEF
F$DCB.PRECNO
       198**DCL       198--REDEF
F$DCB.RCSZ
       204**DCL       204--REDEF
F$DCB.RES#
       171**DCL       171--REDEF
PL6.E3A0      #005=CLOSE_64 File=ZIG$SS_IO.:ZIC0TSI                              FRI 09/05/97 12:12 Page:99   
F$DCB.SETX
       183**DCL       183--REDEF
F$DCB.TAB$
       183**DCL       183--REDEF
F$DCB.TDA
       197**DCL       198--REDEF
F$DCB.WSN#
       171**DCL       171--REDEF
I
        27**DCL       213<<DOINDEX   214>>IF        216>>CALL      216>>CALL      218>>ASSIGN    219>>ASSIGN
       220>>ASSIGN
M$CLOSE
        39**DCL-ENT   224--CALL
SSFCON.BUFFER
        22**DCL       216--CALL
SSFCON.CURRENT_BLOCK
        19**DCL       216<>CALL      218<<ASSIGN
SSFCON.USE_NUM
        21**DCL       220<<ASSIGN
SSFCON.WRITE_SWITCH
        20**DCL       214>>IF        219<<ASSIGN
SUBDCB.DCB#
        17**DCL       211--IF        223>>ASSIGN
WRIT64
        29**DCL-ENT   216--CALL

PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:100  
      452        1        /*T***********************************************************/
      453        2        /*T*                                                         */
      454        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      455        4        /*T*                                                         */
      456        5        /*T***********************************************************/
      457        6        /*P*
      458        7        NAME:   COPY_64
      459        8        PURPOSE: To copy the subschema over itself.
      460        9        */
      461       10        COPY_64: PROC;
      462       11
      463       12    1   DCL HAVE_MEM BIT(1);
      464       13    1   DCL BUF_PTR$ PTR;
      465       14    1   DCL CNT UBIN WORD ALIGNED;
      466       15    1   DCL SSS_SIZE UBIN WORD;
      467       16    1   DCL SUB_ATTR(0:1023) UBIN WORD STATIC;
      468       17    1   DCL 1 DCBIN ALIGNED,
      469       18    1         2 DCBNM UNAL,
      470       19    1           3 CNT UBIN(9) UNAL,
      471       20    1           3 TEXT CHAR(7) UNAL,
      472       21    1         2 DCB# UBIN(18) ALIGNED;
      473       22    1   DCL 1 DCBOUT ALIGNED,
      474       23    1         2 DCBNM UNAL,
      475       24    1           3 CNT UBIN(9) UNAL,
      476       25    1           3 TEXT CHAR(7) UNAL,
      477       26    1         2 DCB# UBIN(18) ALIGNED;
      478       27    1   DCL 1 SUBNAME ALIGNED,
      479       28    1         2 CNT UBIN(9) UNAL,
      480       29    1         2 TEXT CHAR(30) UNAL;
      481       30    1   DCL 1 SUB_KEY ALIGNED STATIC,
      482       31    1         2 CNT UBIN(9) UNAL,
      483       32    1         2 TEXT CHAR(7) UNAL;
      484       33
      485       34    1   DCL B$TCB$ PTR SYMREF;
      486       35    1   DCL SUBSCHEMA_NAME CHAR(30) EXT;
      487       36
      488       37        %INCLUDE B_ERRORS_C;
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:101  
      489     1164        %INCLUDE CP_6;
      490     1245        %INCLUDE CP_6_SUBS;
      491     1785        %B$ALT;
      492     1793        %B$TCB;
      493     1796        %F$DCB;
      494     1853        %FPT_CLOSE( FPTN=FPT_CLOSE_READ );
      495     1895        %FPT_CLOSE( FPTN=FPT_CLOSE_WRITE );
      496     1937        %FPT_GETDCB;
      497     1952        %FPT_OPEN( FPTN=FPT_OPEN_READ, ASN=FILE, ACS=SEQUEN, FUN=IN,
      498     1953         FPARAM=SUB_ATTR );
      499     2062        %FPT_OPEN( FPTN=FPT_OPEN_WRITE, ASN=FILE, ACS=DIRECT, ORG=KEYED,
      500     2063         FUN=CREATE, EXIST=NEWFILE, IFPARAM=SUB_ATTR, DISP=NAMED );
      501     2172        %FPT_READ( KEY=SUB_KEY, KEYR=YES );
      502     2211        %FPT_RELDCB;
      503     2225        %FPT_WRITE( KEY=SUB_KEY );
      504     2256
      505     2257    1   DCL ABORT ENTRY;
      506     2258    1   DCL ZIG$ALLOCATE ENTRY(3) ALTRET;
      507     2259    1   DCL ZIG$FREE ENTRY(2) ALTRET;
      508     2260
      509     2261        %EJECT;
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:102  
      510     2262    1       HAVE_MEM = '0'B;
      511     2263    1       DCBIN.DCBNM.CNT = 5;
      512     2264    1       DCBIN.DCBNM.TEXT = 'SUBIN';
      513     2265    1       FPT_GETDCB.DCBNAME_ = VECTOR( DCBIN.DCBNM );
      514     2266    1       CALL M$GETDCB( FPT_GETDCB ) ALTRET( ALT );
      515     2267    1       DCBIN.DCB# = FPT_GETDCB.V.DCB#;
      516     2268    1       DCBOUT.DCBNM.CNT = 6;
      517     2269    1       DCBOUT.DCBNM.TEXT = 'SUBOUT';
      518     2270    1       FPT_GETDCB.DCBNAME_ = VECTOR( DCBOUT.DCBNM );
      519     2271    1       CALL M$GETDCB( FPT_GETDCB ) ALTRET( ALT );
      520     2272    1       DCBOUT.DCB# = FPT_GETDCB.V.DCB#;
      521     2273
      522     2274    1       CALL INDEX( CNT, ' ', SUBSCHEMA_NAME );
      523     2275    1       SUBNAME.CNT = CNT;
      524     2276    1       IF SUBSTR( SUBSCHEMA_NAME, 0, SUBNAME.CNT ) = 'SUB4' THEN
      525     2277    1           SUBNAME.TEXT = 'DSUB';
      526     2278    1       ELSE
      527     2279    1           SUBNAME.TEXT = SUBSCHEMA_NAME;
      528     2280
      529     2281    1       FPT_OPEN_READ.NAME_ = VECTOR( SUBNAME );
      530     2282    1       FPT_OPEN_WRITE.NAME_ = VECTOR( SUBNAME );
      531     2283    1       FPT_OPEN_READ.V.DCB# = DCBIN.DCB#;
      532     2284    1       FPT_OPEN_WRITE.V.DCB# = DCBOUT.DCB#;
      533     2285    1       FPT_CLOSE_READ.V.DCB# = DCBIN.DCB#;
      534     2286    1       FPT_CLOSE_WRITE.V.DCB# = DCBOUT.DCB#;
      535     2287    1       FPT_READ.V.DCB# = DCBIN.DCB#;
      536     2288    1       FPT_WRITE.V.DCB# = DCBOUT.DCB#;
      537     2289
      538     2290    1       CALL M$OPEN( FPT_OPEN_READ ) ALTRET( ALT );
      539     2291    1       SSS_SIZE = DCBADDR( DCBIN.DCB# ) -> F$DCB.ARS#;
      540     2292    1       CALL ZIG$ALLOCATE( 4, ( SSS_SIZE + 3 )/4, BUF_PTR$ ) ALTRET( ALT );
      541     2293    1       HAVE_MEM = '1'B;
      542     2294    1       CALL M$OPEN( FPT_OPEN_WRITE ) ALTRET( ALT );
      543     2295
      544     2296    1       FPT_READ.BUF_.BOUND = SSS_SIZE - 1;
      545     2297    1       FPT_READ.BUF_.BUF$ = BUF_PTR$;
      546     2298    1       FPT_WRITE.BUF_.BOUND = 255;
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:103  
      547     2299    1       FPT_WRITE.BUF_.BUF$ = BUF_PTR$;
      548     2300
      549     2301    1       SUB_KEY.CNT = 7;
      550     2302    2       DO WHILE '1'B;
      551     2303    2           CALL M$READ( FPT_READ ) ALTRET( ALT1 );
      552     2304    2           IF SUB_KEY.TEXT = 'SSS KEY' THEN
      553     2305    2               FPT_WRITE.BUF_.BOUND = DCBADDR( DCBIN.DCB# )->F$DCB.ARS# - 1;
      554     2306    2           CALL M$WRITE( FPT_WRITE ) ALTRET( ALT );
      555     2307    2           END;
      556     2308
      557     2309    1   ALT1:
      558     2310    1       IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.ERR# ~= %E$EOF THEN
      559     2311    1           GOTO ALT;
      560     2312
      561     2313    1       CALL ZIG$FREE( 4, ( SSS_SIZE + 3 )/4 ) ALTRET( ALT );
      562     2314    1       HAVE_MEM = '0'B;
      563     2315    1       CALL M$CLOSE( FPT_CLOSE_READ ) ALTRET( ALT );
      564     2316    1       FPT_CLOSE_WRITE.V.DISP# = %SAVE#; /* Save New */
      565     2317    1       CALL M$CLOSE( FPT_CLOSE_WRITE ) ALTRET( ALT );
      566     2318    1       FPT_RELDCB.V.DCB# = DCBIN.DCB#;
      567     2319    1       CALL M$RELDCB( FPT_RELDCB ) ALTRET( ALT );
      568     2320    1       FPT_RELDCB.V.DCB# = DCBOUT.DCB#;
      569     2321    1       CALL M$RELDCB( FPT_RELDCB ) ALTRET( ALT );
      570     2322    1       RETURN;
      571     2323
      572     2324    1   ALT:
      573     2325    1       IF HAVE_MEM THEN
      574     2326    1           CALL ZIG$FREE( 4, ( SSS_SIZE + 3 )/4 );
      575     2327    1       IF DCBOUT.DCB# ~= 0
      576     2328    2       THEN DO;
      577     2329    2           IF DCBADDR( DCBOUT.DCB# )->F$DCB.FCD#
      578     2330    3           THEN DO;
      579     2331    3               FPT_CLOSE_WRITE.V.DISP# = %RELEASE#; /* Release New */
      580     2332    3               CALL M$CLOSE( FPT_CLOSE_WRITE );
      581     2333    3               END;
      582     2334    2           FPT_RELDCB.V.DCB# = DCBOUT.DCB#;
      583     2335    2           CALL M$RELDCB( FPT_RELDCB );
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:104  
      584     2336    2           END;
      585     2337    1       IF DCBIN.DCB# ~= 0
      586     2338    2       THEN DO;
      587     2339    2           IF DCBADDR( DCBIN.DCB# )->F$DCB.FCD#
      588     2340    3           THEN DO;
      589     2341    3               FPT_CLOSE_READ.V.DISP# = %SAVE#; /* Save Old */
      590     2342    3               CALL M$CLOSE( FPT_CLOSE_READ );
      591     2343    3               END;
      592     2344    2           FPT_RELDCB.V.DCB# = DCBIN.DCB#;
      593     2345    2           CALL M$RELDCB( FPT_RELDCB );
      594     2346    2           END;
      595     2347    1       CALL ABORT;
      596     2348    1       RETURN;
      597     2349
      598     2350    1   END COPY_64;
      599     2351        %EOD;

PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:105  
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure COPY_64.

   Procedure COPY_64 requires 238 words for executable code.
   Procedure COPY_64 requires 26 words of local(AUTO) storage.

PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:106  

 Object Unit name= COPY_64                                    File name= ZIG$SS_IO.:ZIC0TOU
 UTS= SEP 05 '97 12:12:58.68 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none  1240   2330  COPY_64
    1  LblCom even  none     8     10  SUBSCHEMA_NAME
    2   DCB   even  none     0      0  M$UC
    3  RoData even  UTS      8     10  COPY_64
    4   Proc  even  none   238    356  COPY_64
    5  RoData even  none    11     13  COPY_64

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  COPY_64

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 ZIG$ALLOCATE
 yes     yes           Std       2 ZIG$FREE
         yes           Std       0 ABORT
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:107  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$TCB$                                M$UC

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:108  


      452        1        /*T***********************************************************/
      453        2        /*T*                                                         */
      454        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      455        4        /*T*                                                         */
      456        5        /*T***********************************************************/
      457        6        /*P*
      458        7        NAME:   COPY_64
      459        8        PURPOSE: To copy the subschema over itself.
      460        9        */
      461       10        COPY_64: PROC;

     10  4 000000   000000 700200 xent  COPY_64      TSX0  ! X66_AUTO_0
         4 000001   000032 000000                    ZERO    26,0

      462       11
      463       12    1   DCL HAVE_MEM BIT(1);
      464       13    1   DCL BUF_PTR$ PTR;
      465       14    1   DCL CNT UBIN WORD ALIGNED;
      466       15    1   DCL SSS_SIZE UBIN WORD;
      467       16    1   DCL SUB_ATTR(0:1023) UBIN WORD STATIC;
      468       17    1   DCL 1 DCBIN ALIGNED,
      469       18    1         2 DCBNM UNAL,
      470       19    1           3 CNT UBIN(9) UNAL,
      471       20    1           3 TEXT CHAR(7) UNAL,
      472       21    1         2 DCB# UBIN(18) ALIGNED;
      473       22    1   DCL 1 DCBOUT ALIGNED,
      474       23    1         2 DCBNM UNAL,
      475       24    1           3 CNT UBIN(9) UNAL,
      476       25    1           3 TEXT CHAR(7) UNAL,
      477       26    1         2 DCB# UBIN(18) ALIGNED;
      478       27    1   DCL 1 SUBNAME ALIGNED,
      479       28    1         2 CNT UBIN(9) UNAL,
      480       29    1         2 TEXT CHAR(30) UNAL;
      481       30    1   DCL 1 SUB_KEY ALIGNED STATIC,
      482       31    1         2 CNT UBIN(9) UNAL,
      483       32    1         2 TEXT CHAR(7) UNAL;
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:109  
      484       33
      485       34    1   DCL B$TCB$ PTR SYMREF;
      486       35    1   DCL SUBSCHEMA_NAME CHAR(30) EXT;
      487       36
      488       37        %INCLUDE B_ERRORS_C;
      489     1164        %INCLUDE CP_6;
      490     1245        %INCLUDE CP_6_SUBS;
      491     1785        %B$ALT;
      492     1793        %B$TCB;
      493     1796        %F$DCB;
      494     1853        %FPT_CLOSE( FPTN=FPT_CLOSE_READ );
      495     1895        %FPT_CLOSE( FPTN=FPT_CLOSE_WRITE );
      496     1937        %FPT_GETDCB;
      497     1952        %FPT_OPEN( FPTN=FPT_OPEN_READ, ASN=FILE, ACS=SEQUEN, FUN=IN,
      498     1953         FPARAM=SUB_ATTR );
      499     2062        %FPT_OPEN( FPTN=FPT_OPEN_WRITE, ASN=FILE, ACS=DIRECT, ORG=KEYED,
      500     2063         FUN=CREATE, EXIST=NEWFILE, IFPARAM=SUB_ATTR, DISP=NAMED );
      501     2172        %FPT_READ( KEY=SUB_KEY, KEYR=YES );
      502     2211        %FPT_RELDCB;
      503     2225        %FPT_WRITE( KEY=SUB_KEY );
      504     2256
      505     2257    1   DCL ABORT ENTRY;
      506     2258    1   DCL ZIG$ALLOCATE ENTRY(3) ALTRET;
      507     2259    1   DCL ZIG$FREE ENTRY(2) ALTRET;
      508     2260
      509     2261        %EJECT;
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:110  
      510     2262    1       HAVE_MEM = '0'B;

   2262  4 000002   200003 450100                    STZ     HAVE_MEM,,AUTO

      511     2263    1       DCBIN.DCBNM.CNT = 5;

   2263  4 000003   005000 236003                    LDQ     2560,DU
         4 000004   200007 552140                    STBQ    DCBIN,'40'O,AUTO

      512     2264    1       DCBIN.DCBNM.TEXT = 'SUBIN';

   2264  4 000005   040100 100400                    MLR     fill='040'O
         4 000006   000000 000005 3                  ADSC9   0                        cn=0,n=5
         4 000007   200007 200007                    ADSC9   DCBIN,,AUTO              cn=1,n=7

      513     2265    1       FPT_GETDCB.DCBNAME_ = VECTOR( DCBIN.DCBNM );

   2265  4 000010   000000 235000 5                  LDA     0
         4 000011   200026 452500                    STP2    SUBNAME+9,,AUTO
         4 000012   200026 236100                    LDQ     SUBNAME+9,,AUTO
         4 000013   000007 036003                    ADLQ    7,DU
         4 000014   002100 757000 0                  STAQ    FPT_GETDCB+2

      514     2266    1       CALL M$GETDCB( FPT_GETDCB ) ALTRET( ALT );

   2266  4 000015   002076 630400 0                  EPPR0   FPT_GETDCB
         4 000016   460002 713400                    CLIMB   alt,+24578
         4 000017   401000 401760                    pmme    nvectors=3
         4 000020   000270 702000 4                  TSX2    ALT

      515     2267    1       DCBIN.DCB# = FPT_GETDCB.V.DCB#;

   2267  4 000021   002104 220000 0                  LDX0    FPT_GETDCB+6
         4 000022   200011 740100                    STX0    DCBIN+2,,AUTO

      516     2268    1       DCBOUT.DCBNM.CNT = 6;

PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:111  
   2268  4 000023   006000 236003                    LDQ     3072,DU
         4 000024   200012 552140                    STBQ    DCBOUT,'40'O,AUTO

      517     2269    1       DCBOUT.DCBNM.TEXT = 'SUBOUT';

   2269  4 000025   040100 100400                    MLR     fill='040'O
         4 000026   000002 000006 3                  ADSC9   2                        cn=0,n=6
         4 000027   200012 200007                    ADSC9   DCBOUT,,AUTO             cn=1,n=7

      518     2270    1       FPT_GETDCB.DCBNAME_ = VECTOR( DCBOUT.DCBNM );

   2270  4 000030   000000 235000 5                  LDA     0
         4 000031   200026 452500                    STP2    SUBNAME+9,,AUTO
         4 000032   200026 236100                    LDQ     SUBNAME+9,,AUTO
         4 000033   000012 036003                    ADLQ    10,DU
         4 000034   002100 757000 0                  STAQ    FPT_GETDCB+2

      519     2271    1       CALL M$GETDCB( FPT_GETDCB ) ALTRET( ALT );

   2271  4 000035   002076 630400 0                  EPPR0   FPT_GETDCB
         4 000036   460002 713400                    CLIMB   alt,+24578
         4 000037   401000 401760                    pmme    nvectors=3
         4 000040   000270 702000 4                  TSX2    ALT

      520     2272    1       DCBOUT.DCB# = FPT_GETDCB.V.DCB#;

   2272  4 000041   002104 220000 0                  LDX0    FPT_GETDCB+6
         4 000042   200014 740100                    STX0    DCBOUT+2,,AUTO

      521     2273
      522     2274    1       CALL INDEX( CNT, ' ', SUBSCHEMA_NAME );

   2274  4 000043   000000 124400                    SCM     mask='000'O
         4 000044   000000 000036 1                  ADSC9   SUBSCHEMA_NAME           cn=0,n=30
         4 000045   000001 000001 5                  ADSC9   1                        cn=0,n=1
         4 000046   200005 000100                    ARG     CNT,,AUTO

PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:112  
      523     2275    1       SUBNAME.CNT = CNT;

   2275  4 000047   200005 236100                    LDQ     CNT,,AUTO
         4 000050   000033 736000                    QLS     27
         4 000051   200015 552140                    STBQ    SUBNAME,'40'O,AUTO

      524     2276    1       IF SUBSTR( SUBSCHEMA_NAME, 0, SUBNAME.CNT ) = 'SUB4' THEN

   2276  4 000052   200015 236100                    LDQ     SUBNAME,,AUTO
         4 000053   000033 772000                    QRL     27
         4 000054   000000 621006                    EAX1    0,QL
         4 000055   040000 106440                    CMPC    fill='040'O
         4 000056   000000 000011 1                  ADSC9   SUBSCHEMA_NAME           cn=0,n=*X1
         4 000057   000004 000004 3                  ADSC9   4                        cn=0,n=4
         4 000060   000065 601000 4                  TNZ     s:2279

      525     2277    1           SUBNAME.TEXT = 'DSUB';

   2277  4 000061   040100 100400                    MLR     fill='040'O
         4 000062   000005 000004 3                  ADSC9   5                        cn=0,n=4
         4 000063   200015 200036                    ADSC9   SUBNAME,,AUTO            cn=1,n=30
         4 000064   000070 710000 4                  TRA     s:2281

      526     2278    1       ELSE
      527     2279    1           SUBNAME.TEXT = SUBSCHEMA_NAME;

   2279  4 000065   040100 100400                    MLR     fill='040'O
         4 000066   000000 000036 1                  ADSC9   SUBSCHEMA_NAME           cn=0,n=30
         4 000067   200015 200036                    ADSC9   SUBNAME,,AUTO            cn=1,n=30

      528     2280
      529     2281    1       FPT_OPEN_READ.NAME_ = VECTOR( SUBNAME );

   2281  4 000070   000002 235000 5                  LDA     2
         4 000071   200026 452500                    STP2    SUBNAME+9,,AUTO
         4 000072   200026 236100                    LDQ     SUBNAME+9,,AUTO
         4 000073   000015 036003                    ADLQ    13,DU
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:113  
         4 000074   002114 757000 0                  STAQ    FPT_OPEN_READ+6

      530     2282    1       FPT_OPEN_WRITE.NAME_ = VECTOR( SUBNAME );

   2282  4 000075   000002 235000 5                  LDA     2
         4 000076   200026 452500                    STP2    SUBNAME+9,,AUTO
         4 000077   200026 236100                    LDQ     SUBNAME+9,,AUTO
         4 000100   000015 036003                    ADLQ    13,DU
         4 000101   002206 757000 0                  STAQ    FPT_OPEN_WRITE+6

      531     2283    1       FPT_OPEN_READ.V.DCB# = DCBIN.DCB#;

   2283  4 000102   200011 221100                    LDX1    DCBIN+2,,AUTO
         4 000103   002152 741000 0                  STX1    FPT_OPEN_READ+36

      532     2284    1       FPT_OPEN_WRITE.V.DCB# = DCBOUT.DCB#;

   2284  4 000104   002244 740000 0                  STX0    FPT_OPEN_WRITE+36

      533     2285    1       FPT_CLOSE_READ.V.DCB# = DCBIN.DCB#;

   2285  4 000105   002034 741000 0                  STX1    FPT_CLOSE_READ+26

      534     2286    1       FPT_CLOSE_WRITE.V.DCB# = DCBOUT.DCB#;

   2286  4 000106   002072 740000 0                  STX0    FPT_CLOSE_WRITE+26

      535     2287    1       FPT_READ.V.DCB# = DCBIN.DCB#;

   2287  4 000107   002302 741000 0                  STX1    FPT_READ+8

      536     2288    1       FPT_WRITE.V.DCB# = DCBOUT.DCB#;

   2288  4 000110   002324 740000 0                  STX0    FPT_WRITE+8

      537     2289
      538     2290    1       CALL M$OPEN( FPT_OPEN_READ ) ALTRET( ALT );
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:114  

   2290  4 000111   002106 630400 0                  EPPR0   FPT_OPEN_READ
         4 000112   450000 713400                    CLIMB   alt,open
         4 000113   410400 401760                    pmme    nvectors=18
         4 000114   000270 702000 4                  TSX2    ALT

      539     2291    1       SSS_SIZE = DCBADDR( DCBIN.DCB# ) -> F$DCB.ARS#;

   2291  4 000115   000003 470400 5                  LDP0    3
         4 000116   000000 471500                    LDP1    0,,PR0
         4 000117   200011 220100                    LDX0    DCBIN+2,,AUTO
         4 000120   100000 473510                    LDP3    0,X0,PR1
         4 000121   300000 235100                    LDA     0,,PR3
         4 000122   200006 755100                    STA     SSS_SIZE,,AUTO

      540     2292    1       CALL ZIG$ALLOCATE( 4, ( SSS_SIZE + 3 )/4, BUF_PTR$ ) ALTRET( ALT );

   2292  4 000123   200006 236100                    LDQ     SSS_SIZE,,AUTO
         4 000124   000003 036007                    ADLQ    3,DL
         4 000125   000002 772000                    QRL     2
         4 000126   200026 756100                    STQ     SUBNAME+9,,AUTO
         4 000127   200004 634500                    EPPR4   BUF_PTR$,,AUTO
         4 000130   200031 454500                    STP4    SUBNAME+12,,AUTO
         4 000131   200026 635500                    EPPR5   SUBNAME+9,,AUTO
         4 000132   200030 455500                    STP5    SUBNAME+11,,AUTO
         4 000133   000006 236000 5                  LDQ     6
         4 000134   200027 756100                    STQ     SUBNAME+10,,AUTO
         4 000135   200027 630500                    EPPR0   SUBNAME+10,,AUTO
         4 000136   000004 631400 5                  EPPR1   4
         4 000137   000000 701000 xent               TSX1    ZIG$ALLOCATE
         4 000140   000270 702000 4                  TSX2    ALT

      541     2293    1       HAVE_MEM = '1'B;

   2293  4 000141   400000 236003                    LDQ     -131072,DU
         4 000142   200003 756100                    STQ     HAVE_MEM,,AUTO

PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:115  
      542     2294    1       CALL M$OPEN( FPT_OPEN_WRITE ) ALTRET( ALT );

   2294  4 000143   002200 630400 0                  EPPR0   FPT_OPEN_WRITE
         4 000144   450000 713400                    CLIMB   alt,open
         4 000145   410400 401760                    pmme    nvectors=18
         4 000146   000270 702000 4                  TSX2    ALT

      543     2295
      544     2296    1       FPT_READ.BUF_.BOUND = SSS_SIZE - 1;

   2296  4 000147   200006 236100                    LDQ     SSS_SIZE,,AUTO
         4 000150   000001 136007                    SBLQ    1,DL
         4 000151   000020 736000                    QLS     16
         4 000152   002276 676000 0                  ERQ     FPT_READ+4
         4 000153   000007 376000 5                  ANQ     7
         4 000154   002276 656000 0                  ERSQ    FPT_READ+4

      545     2297    1       FPT_READ.BUF_.BUF$ = BUF_PTR$;

   2297  4 000155   200004 236100                    LDQ     BUF_PTR$,,AUTO
         4 000156   002277 756000 0                  STQ     FPT_READ+5

      546     2298    1       FPT_WRITE.BUF_.BOUND = 255;

   2298  4 000157   002320 236000 0                  LDQ     FPT_WRITE+4
         4 000160   177777 376007                    ANQ     65535,DL
         4 000161   000010 276000 5                  ORQ     8
         4 000162   002320 756000 0                  STQ     FPT_WRITE+4

      547     2299    1       FPT_WRITE.BUF_.BUF$ = BUF_PTR$;

   2299  4 000163   200004 236100                    LDQ     BUF_PTR$,,AUTO
         4 000164   002321 756000 0                  STQ     FPT_WRITE+5

      548     2300
      549     2301    1       SUB_KEY.CNT = 7;

PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:116  
   2301  4 000165   007000 236003                    LDQ     3584,DU
         4 000166   002000 552040 0                  STBQ    SUB_KEY,'40'O

      550     2302    2       DO WHILE '1'B;

      551     2303    2           CALL M$READ( FPT_READ ) ALTRET( ALT1 );

   2303  4 000167   002272 630400 0                  EPPR0   FPT_READ
         4 000170   440000 713400                    CLIMB   alt,read
         4 000171   401400 401760                    pmme    nvectors=4
         4 000172   000216 702000 4                  TSX2    ALT1

      552     2304    2           IF SUB_KEY.TEXT = 'SSS KEY' THEN

   2304  4 000173   040000 106400                    CMPC    fill='040'O
         4 000174   002000 200007 0                  ADSC9   SUB_KEY                  cn=1,n=7
         4 000175   000006 000007 3                  ADSC9   6                        cn=0,n=7
         4 000176   000211 601000 4                  TNZ     s:2306

      553     2305    2               FPT_WRITE.BUF_.BOUND = DCBADDR( DCBIN.DCB# )->F$DCB.ARS# - 1;

   2305  4 000177   000003 470400 5                  LDP0    3
         4 000200   000000 471500                    LDP1    0,,PR0
         4 000201   200011 220100                    LDX0    DCBIN+2,,AUTO
         4 000202   100000 473510                    LDP3    0,X0,PR1
         4 000203   300000 236100                    LDQ     0,,PR3
         4 000204   000001 136007                    SBLQ    1,DL
         4 000205   000020 736000                    QLS     16
         4 000206   002320 676000 0                  ERQ     FPT_WRITE+4
         4 000207   000007 376000 5                  ANQ     7
         4 000210   002320 656000 0                  ERSQ    FPT_WRITE+4

      554     2306    2           CALL M$WRITE( FPT_WRITE ) ALTRET( ALT );

   2306  4 000211   002314 630400 0                  EPPR0   FPT_WRITE
         4 000212   440001 713400                    CLIMB   alt,write
         4 000213   401400 401760                    pmme    nvectors=4
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:117  
         4 000214   000270 702000 4                  TSX2    ALT

      555     2307    2           END;

   2307  4 000215   000167 710000 4                  TRA     s:2303

      556     2308
      557     2309    1   ALT1:
      558     2310    1       IF B$TCB$->B$TCB.ALT$->B$ALT.ERR.ERR# ~= %E$EOF THEN

   2310  4 000216   000000 470400 xsym  ALT1         LDP0    B$TCB$
         4 000217   000000 471500                    LDP1    0,,PR0
         4 000220   100102 236100                    LDQ     66,,PR1
         4 000221   377770 376007                    ANQ     131064,DL
         4 000222   000060 116007                    CMPQ    48,DL
         4 000223   000270 601000 4                  TNZ     ALT

      559     2311    1           GOTO ALT;
      560     2312
      561     2313    1       CALL ZIG$FREE( 4, ( SSS_SIZE + 3 )/4 ) ALTRET( ALT );

   2313  4 000224   200006 236100                    LDQ     SSS_SIZE,,AUTO
         4 000225   000003 036007                    ADLQ    3,DL
         4 000226   000002 772000                    QRL     2
         4 000227   200026 756100                    STQ     SUBNAME+9,,AUTO
         4 000230   200026 631500                    EPPR1   SUBNAME+9,,AUTO
         4 000231   200031 451500                    STP1    SUBNAME+12,,AUTO
         4 000232   000006 236000 5                  LDQ     6
         4 000233   200030 756100                    STQ     SUBNAME+11,,AUTO
         4 000234   200030 630500                    EPPR0   SUBNAME+11,,AUTO
         4 000235   000011 631400 5                  EPPR1   9
         4 000236   000000 701000 xent               TSX1    ZIG$FREE
         4 000237   000270 702000 4                  TSX2    ALT

      562     2314    1       HAVE_MEM = '0'B;

   2314  4 000240   200003 450100                    STZ     HAVE_MEM,,AUTO
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:118  

      563     2315    1       CALL M$CLOSE( FPT_CLOSE_READ ) ALTRET( ALT );

   2315  4 000241   002002 630400 0                  EPPR0   FPT_CLOSE_READ
         4 000242   450001 713400                    CLIMB   alt,close
         4 000243   406000 401760                    pmme    nvectors=13
         4 000244   000270 702000 4                  TSX2    ALT

      564     2316    1       FPT_CLOSE_WRITE.V.DISP# = %SAVE#; /* Save New */

   2316  4 000245   000002 236007                    LDQ     2,DL
         4 000246   002072 552004 0                  STBQ    FPT_CLOSE_WRITE+26,'04'O

      565     2317    1       CALL M$CLOSE( FPT_CLOSE_WRITE ) ALTRET( ALT );

   2317  4 000247   002040 630400 0                  EPPR0   FPT_CLOSE_WRITE
         4 000250   450001 713400                    CLIMB   alt,close
         4 000251   406000 401760                    pmme    nvectors=13
         4 000252   000270 702000 4                  TSX2    ALT

      566     2318    1       FPT_RELDCB.V.DCB# = DCBIN.DCB#;

   2318  4 000253   200011 220100                    LDX0    DCBIN+2,,AUTO
         4 000254   002312 740000 0                  STX0    FPT_RELDCB+2

      567     2319    1       CALL M$RELDCB( FPT_RELDCB ) ALTRET( ALT );

   2319  4 000255   002310 630400 0                  EPPR0   FPT_RELDCB
         4 000256   460003 713400                    CLIMB   alt,+24579
         4 000257   400000 401760                    pmme    nvectors=1
         4 000260   000270 702000 4                  TSX2    ALT

      568     2320    1       FPT_RELDCB.V.DCB# = DCBOUT.DCB#;

   2320  4 000261   200014 220100                    LDX0    DCBOUT+2,,AUTO
         4 000262   002312 740000 0                  STX0    FPT_RELDCB+2

PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:119  
      569     2321    1       CALL M$RELDCB( FPT_RELDCB ) ALTRET( ALT );

   2321  4 000263   002310 630400 0                  EPPR0   FPT_RELDCB
         4 000264   460003 713400                    CLIMB   alt,+24579
         4 000265   400000 401760                    pmme    nvectors=1
         4 000266   000270 702000 4                  TSX2    ALT

      570     2322    1       RETURN;

   2322  4 000267   000000 702200 xent               TSX2  ! X66_ARET

      571     2323
      572     2324    1   ALT:
      573     2325    1       IF HAVE_MEM THEN

   2325  4 000270   200003 234100       ALT          SZN     HAVE_MEM,,AUTO
         4 000271   000306 605000 4                  TPL     s:2327

      574     2326    1           CALL ZIG$FREE( 4, ( SSS_SIZE + 3 )/4 );

   2326  4 000272   200006 236100                    LDQ     SSS_SIZE,,AUTO
         4 000273   000003 036007                    ADLQ    3,DL
         4 000274   000002 772000                    QRL     2
         4 000275   200026 756100                    STQ     SUBNAME+9,,AUTO
         4 000276   200026 630500                    EPPR0   SUBNAME+9,,AUTO
         4 000277   200031 450500                    STP0    SUBNAME+12,,AUTO
         4 000300   000006 236000 5                  LDQ     6
         4 000301   200030 756100                    STQ     SUBNAME+11,,AUTO
         4 000302   200030 630500                    EPPR0   SUBNAME+11,,AUTO
         4 000303   000011 631400 5                  EPPR1   9
         4 000304   000000 701000 xent               TSX1    ZIG$FREE
         4 000305   000000 011000                    NOP     0

      575     2327    1       IF DCBOUT.DCB# ~= 0

   2327  4 000306   200014 220100                    LDX0    DCBOUT+2,,AUTO
         4 000307   000330 600000 4                  TZE     s:2337
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:120  

      576     2328    2       THEN DO;

      577     2329    2           IF DCBADDR( DCBOUT.DCB# )->F$DCB.FCD#

   2329  4 000310   000003 470400 5                  LDP0    3
         4 000311   000000 471500                    LDP1    0,,PR0
         4 000312   100000 473510                    LDP3    0,X0,PR1
         4 000313   300031 236100                    LDQ     25,,PR3
         4 000314   020000 316007                    CANQ    8192,DL
         4 000315   000323 600000 4                  TZE     s:2334

      578     2330    3           THEN DO;

      579     2331    3               FPT_CLOSE_WRITE.V.DISP# = %RELEASE#; /* Release New */

   2331  4 000316   000001 236007                    LDQ     1,DL
         4 000317   002072 552004 0                  STBQ    FPT_CLOSE_WRITE+26,'04'O

      580     2332    3               CALL M$CLOSE( FPT_CLOSE_WRITE );

   2332  4 000320   002040 630400 0                  EPPR0   FPT_CLOSE_WRITE
         4 000321   050001 713400                    CLIMB   close
         4 000322   406000 401760                    pmme    nvectors=13

      581     2333    3               END;

      582     2334    2           FPT_RELDCB.V.DCB# = DCBOUT.DCB#;

   2334  4 000323   200014 220100                    LDX0    DCBOUT+2,,AUTO
         4 000324   002312 740000 0                  STX0    FPT_RELDCB+2

      583     2335    2           CALL M$RELDCB( FPT_RELDCB );

   2335  4 000325   002310 630400 0                  EPPR0   FPT_RELDCB
         4 000326   060003 713400                    CLIMB   24579
         4 000327   400000 401760                    pmme    nvectors=1
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:121  

      584     2336    2           END;

      585     2337    1       IF DCBIN.DCB# ~= 0

   2337  4 000330   200011 220100                    LDX0    DCBIN+2,,AUTO
         4 000331   000352 600000 4                  TZE     s:2347

      586     2338    2       THEN DO;

      587     2339    2           IF DCBADDR( DCBIN.DCB# )->F$DCB.FCD#

   2339  4 000332   000003 470400 5                  LDP0    3
         4 000333   000000 471500                    LDP1    0,,PR0
         4 000334   100000 473510                    LDP3    0,X0,PR1
         4 000335   300031 236100                    LDQ     25,,PR3
         4 000336   020000 316007                    CANQ    8192,DL
         4 000337   000345 600000 4                  TZE     s:2344

      588     2340    3           THEN DO;

      589     2341    3               FPT_CLOSE_READ.V.DISP# = %SAVE#; /* Save Old */

   2341  4 000340   000002 236007                    LDQ     2,DL
         4 000341   002034 552004 0                  STBQ    FPT_CLOSE_READ+26,'04'O

      590     2342    3               CALL M$CLOSE( FPT_CLOSE_READ );

   2342  4 000342   002002 630400 0                  EPPR0   FPT_CLOSE_READ
         4 000343   050001 713400                    CLIMB   close
         4 000344   406000 401760                    pmme    nvectors=13

      591     2343    3               END;

      592     2344    2           FPT_RELDCB.V.DCB# = DCBIN.DCB#;

   2344  4 000345   200011 220100                    LDX0    DCBIN+2,,AUTO
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:122  
         4 000346   002312 740000 0                  STX0    FPT_RELDCB+2

      593     2345    2           CALL M$RELDCB( FPT_RELDCB );

   2345  4 000347   002310 630400 0                  EPPR0   FPT_RELDCB
         4 000350   060003 713400                    CLIMB   24579
         4 000351   400000 401760                    pmme    nvectors=1

      594     2346    2           END;

      595     2347    1       CALL ABORT;

   2347  4 000352   000012 631400 5                  EPPR1   10
         4 000353   000000 701000 xent               TSX1    ABORT
         4 000354   000000 011000                    NOP     0

      596     2348    1       RETURN;

   2348  4 000355   000000 702200 xent               TSX2  ! X66_ARET

SUB_ATTR
 Sect OctLoc
   0     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

FPT_CLOSE_READ
 Sect OctLoc
   0    2002   000003 777640   002034 006000   000000 177640   000000 006014    ................
   0    2006   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0    2032*  000000 177640   000000 006014   000000 000000   000000 000040    ...............
   0    2036   000220 000000   000000 000000                                    ........

FPT_CLOSE_WRITE
 Sect OctLoc
   0    2040   000003 777640   002072 006000   000000 177640   000000 006014    .....:..........
   0    2044   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0    2070*  000000 177640   000000 006014   000000 000000   000000 000040    ...............
   0    2074   000220 000000   000000 000000                                    ........
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:123  

FPT_GETDCB
 Sect OctLoc
   0    2076   000001 777640   002104 006000   000000 177640   000000 006014    .....D..........
   0    2102   000000 177640   000000 006014   000000 000000   000000 000000    ................

FPT_OPEN_READ
 Sect OctLoc
   0    2106   000025 777640   002152 006000   000000 177640   000000 006014    .....j..........
   0    2112   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0    2136*  001777 777640   000000 006000   000000 177640   000000 006014    ................
   0    2142   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0    2152*  000000 000042   000000 002001   252525 000001   000040 252520    ..."......... ..
   0    2156   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   0    2162   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0    2166   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   0    2172   040040 040040   000000 000000   000000 000000   000000 000000        ............
   0    2176   000000 000000   ****** ******                                    ........

FPT_OPEN_WRITE
 Sect OctLoc
   0    2200   000025 777640   002244 006000   000000 177640   000000 006014    ................
   0    2204   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0    2224*  000000 177640   000000 006014   001777 777640   000000 006000    ................
   0    2230   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0    2244*  000000 000642   000000 003001   252525 002002   000040 252520    ............. ..
   0    2250   000040 040040   000000 000002   000000 777777   000000 000000    .   ............
   0    2254   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0    2260   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   0    2264   040040 040040   000000 000000   000000 000000   000000 000000        ............
   0    2270   000000 000000   ****** ******                                    ........

FPT_READ
 Sect OctLoc
   0    2272   000005 777640   002302 006000   000001 777640   002000 006000    ................
   0    2276   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0    2302   000000 500000   000000 000000   000000 000000   000000 000000    ................
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:124  
   0    2306   000000 000000   000000 000000                                    ........

FPT_RELDCB
 Sect OctLoc
   0    2310   000001 777640   002312 006000   000000 000000   000000 000000    ................

FPT_WRITE
 Sect OctLoc
   0    2314   000003 777640   002324 006000   000001 777640   002000 006000    ................
   0    2320   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0    2324   000000 400400   000000 000000   000000 000000   000000 000000    ................

SUBSCHEMA_NAME
 Sect OctLoc
   1     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   3     000   123125 102111   116040 040040   123125 102117   125124 040040    SUBIN   SUBOUT
   3     004   123125 102064   104123 125102   123123 123040   113105 131040    SUB4DSUBSSS KEY

(unnamed)
 Sect OctLoc
   5     000   000001 777640   040040 040040   000007 777640   000000 006003    ....    ........
   5     004   000003 000000   000000 000004   000005 006000   777777 600000    ................
   5     010   000077 600000   000002 000000   000000 000000                    .?..........
      597     2349
      598     2350    1   END COPY_64;
      599     2351        %EOD;

PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:125  
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure COPY_64.

   Procedure COPY_64 requires 238 words for executable code.
   Procedure COPY_64 requires 26 words of local(AUTO) storage.
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:126  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:127  
          MINI XREF LISTING

ABORT
      2257**DCL-ENT  2347--CALL
ALT
      2325**LABEL    2266--CALLALT  2271--CALLALT  2290--CALLALT  2292--CALLALT  2294--CALLALT  2306--CALLALT
      2311--GOTO     2313--CALLALT  2315--CALLALT  2317--CALLALT  2319--CALLALT  2321--CALLALT
ALT1
      2310**LABEL    2303--CALLALT
B$ALT.CODE
      1787**DCL      1787--REDEF    1788--REDEF    1788--REDEF
B$ALT.ERR.ERR#
      1789**DCL      1789--REDEF    2310>>IF
B$ALT.EVID
      1788**DCL      1788--REDEF    1788--REDEF
B$TCB.ALT$
      1794**DCL      2310>>IF
B$TCB$
        34**DCL      2310>>IF
BUF_PTR$
        13**DCL      2292<>CALL     2297>>ASSIGN   2299>>ASSIGN
CNT
        14**DCL      2274<<CALLBLT  2275>>ASSIGN
DCBIN.DCB#
        21**DCL      2267<<ASSIGN   2283>>ASSIGN   2285>>ASSIGN   2287>>ASSIGN   2291--ASSIGN   2305--ASSIGN
      2318>>ASSIGN   2337>>IF       2339--IF       2344>>ASSIGN
DCBIN.DCBNM
        18**DCL      2265--ASSIGN
DCBIN.DCBNM.CNT
        19**DCL      2263<<ASSIGN
DCBIN.DCBNM.TEXT
        20**DCL      2264<<ASSIGN
DCBOUT.DCB#
        26**DCL      2272<<ASSIGN   2284>>ASSIGN   2286>>ASSIGN   2288>>ASSIGN   2320>>ASSIGN   2327>>IF
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:128  
      2329--IF       2334>>ASSIGN
DCBOUT.DCBNM
        23**DCL      2270--ASSIGN
DCBOUT.DCBNM.CNT
        24**DCL      2268<<ASSIGN
DCBOUT.DCBNM.TEXT
        25**DCL      2269<<ASSIGN
F$DCB.ACTPOS
      1829**DCL      1829--REDEF
F$DCB.ARS#
      1803**DCL      1803--REDEF    2291>>ASSIGN   2305>>ASSIGN
F$DCB.ATTR
      1822**DCL      1823--REDEF
F$DCB.BORROW
      1837**DCL      1837--REDEF    1837--REDEF    1837--REDEF
F$DCB.DCBNAME.L
      1851**DCL      1851--IMP-SIZ
F$DCB.EOMCHAR#
      1807**DCL      1807--REDEF
F$DCB.FCD#
      1816**DCL      2329>>IF       2339>>IF
F$DCB.FLDID
      1832**DCL      1832--REDEF
F$DCB.FORM$
      1826**DCL      1826--REDEF
F$DCB.FSECT
      1842**DCL      1842--REDEF
F$DCB.FSN#
      1819**DCL      1819--REDEF    1819--REDEF    1820--REDEF
F$DCB.HEADER$
      1825**DCL      1825--REDEF
F$DCB.IXTNSIZE#
      1823**DCL      1823--REDEF
F$DCB.LASTSTA$
      1812**DCL      1812--REDEF
F$DCB.LVL
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:129  
      1838**DCL      1838--REDEF
F$DCB.NAME#.C
      1813**DCL      1813--REDEF
F$DCB.NOEOF
      1835**DCL      1835--REDEF
F$DCB.NRECS#
      1824**DCL      1824--REDEF
F$DCB.NRECX
      1843**DCL      1843--REDEF
F$DCB.OHDR
      1835**DCL      1835--REDEF
F$DCB.ORG#
      1818**DCL      1818--REDEF
F$DCB.PRECNO
      1841**DCL      1841--REDEF
F$DCB.RCSZ
      1847**DCL      1847--REDEF
F$DCB.RES#
      1814**DCL      1814--REDEF
F$DCB.SETX
      1826**DCL      1826--REDEF
F$DCB.TAB$
      1826**DCL      1826--REDEF
F$DCB.TDA
      1840**DCL      1841--REDEF
F$DCB.WSN#
      1814**DCL      1814--REDEF
FPT_CLOSE_READ
      1876**DCL      2315<>CALL     2342<>CALL
FPT_CLOSE_READ.SN_
      1876**DCL      1876--REDEF
FPT_CLOSE_READ.UTL_
      1877**DCL      1877--REDEF
FPT_CLOSE_READ.V
      1881**DCL      1876--DCLINIT
FPT_CLOSE_READ.V.DCB#
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:130  
      1882**DCL      2285<<ASSIGN
FPT_CLOSE_READ.V.DISP#
      1885**DCL      2341<<ASSIGN
FPT_CLOSE_READ.V.EXPIRE#
      1891**DCL      1891--REDEF
FPT_CLOSE_READ.V.TYPE#
      1889**DCL      1889--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      1886**DCL      1886--REDEF    1888--REDEF
FPT_CLOSE_WRITE
      1918**DCL      2317<>CALL     2332<>CALL
FPT_CLOSE_WRITE.SN_
      1918**DCL      1918--REDEF
FPT_CLOSE_WRITE.UTL_
      1919**DCL      1919--REDEF
FPT_CLOSE_WRITE.V
      1923**DCL      1918--DCLINIT
FPT_CLOSE_WRITE.V.DCB#
      1924**DCL      2286<<ASSIGN
FPT_CLOSE_WRITE.V.DISP#
      1927**DCL      2316<<ASSIGN   2331<<ASSIGN
FPT_CLOSE_WRITE.V.EXPIRE#
      1933**DCL      1933--REDEF
FPT_CLOSE_WRITE.V.TYPE#
      1931**DCL      1931--REDEF
FPT_CLOSE_WRITE.V.XTNSIZE#
      1928**DCL      1928--REDEF    1930--REDEF
FPT_GETDCB
      1948**DCL      2266<>CALL     2271<>CALL
FPT_GETDCB.DCBNAME_
      1948**DCL      2265<<ASSIGN   2270<<ASSIGN
FPT_GETDCB.V
      1949**DCL      1948--DCLINIT
FPT_GETDCB.V.DCB#
      1949**DCL      2267>>ASSIGN   2272>>ASSIGN
FPT_OPEN_READ
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:131  
      2018**DCL      2290<>CALL
FPT_OPEN_READ.ACSVEH_
      2020**DCL      2021--REDEF
FPT_OPEN_READ.ALTKEYS_
      2026**DCL      2027--REDEF    2027--REDEF
FPT_OPEN_READ.HDR_
      2025**DCL      2026--REDEF
FPT_OPEN_READ.NAME_
      2019**DCL      2281<<ASSIGN
FPT_OPEN_READ.TAB_
      2024**DCL      2025--REDEF
FPT_OPEN_READ.UHL_
      2018**DCL      2019--REDEF    2019--REDEF
FPT_OPEN_READ.V
      2027**DCL      2018--DCLINIT
FPT_OPEN_READ.V.DCB#
      2027**DCL      2283<<ASSIGN
FPT_OPEN_READ.V.FSN#
      2058**DCL      2058--REDEF    2058--REDEF
FPT_OPEN_READ.WSN_
      2024**DCL      2024--REDEF
FPT_OPEN_WRITE
      2128**DCL      2294<>CALL
FPT_OPEN_WRITE.ACSVEH_
      2130**DCL      2131--REDEF
FPT_OPEN_WRITE.ALTKEYS_
      2136**DCL      2137--REDEF    2137--REDEF
FPT_OPEN_WRITE.HDR_
      2135**DCL      2136--REDEF
FPT_OPEN_WRITE.NAME_
      2129**DCL      2282<<ASSIGN
FPT_OPEN_WRITE.TAB_
      2134**DCL      2135--REDEF
FPT_OPEN_WRITE.UHL_
      2128**DCL      2129--REDEF    2129--REDEF
FPT_OPEN_WRITE.V
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:132  
      2137**DCL      2128--DCLINIT
FPT_OPEN_WRITE.V.DCB#
      2137**DCL      2284<<ASSIGN
FPT_OPEN_WRITE.V.FSN#
      2168**DCL      2168--REDEF    2168--REDEF
FPT_OPEN_WRITE.WSN_
      2134**DCL      2134--REDEF
FPT_READ
      2189**DCL      2303<>CALL
FPT_READ.BUF_.BOUND
      2191**DCL      2296<<ASSIGN
FPT_READ.BUF_.BUF$
      2192**DCL      2297<<ASSIGN
FPT_READ.STATION_
      2192**DCL      2193--REDEF
FPT_READ.V
      2193**DCL      2189--DCLINIT
FPT_READ.V.DCB#
      2193**DCL      2287<<ASSIGN
FPT_READ.V.DVBYTE.REREAD#
      2204**DCL      2204--REDEF
FPT_READ.V.INDX#
      2202**DCL      2202--REDEF
FPT_RELDCB
      2222**DCL      2319<>CALL     2321<>CALL     2335<>CALL     2345<>CALL
FPT_RELDCB.V
      2222**DCL      2222--DCLINIT
FPT_RELDCB.V.DCB#
      2222**DCL      2318<<ASSIGN   2320<<ASSIGN   2334<<ASSIGN   2344<<ASSIGN
FPT_WRITE
      2242**DCL      2306<>CALL
FPT_WRITE.BUF_.BOUND
      2242**DCL      2298<<ASSIGN   2305<<ASSIGN
FPT_WRITE.BUF_.BUF$
      2244**DCL      2299<<ASSIGN
FPT_WRITE.STATION_
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:133  
      2244**DCL      2244--REDEF
FPT_WRITE.V
      2245**DCL      2242--DCLINIT
FPT_WRITE.V.DCB#
      2245**DCL      2288<<ASSIGN
FPT_WRITE.V.DVBYTE.VFC#
      2251**DCL      2251--REDEF
HAVE_MEM
        12**DCL      2262<<ASSIGN   2293<<ASSIGN   2314<<ASSIGN   2325>>IF
M$CLOSE
      1173**DCL-ENT  2315--CALL     2317--CALL     2332--CALL     2342--CALL
M$GETDCB
      1179**DCL-ENT  2266--CALL     2271--CALL
M$OPEN
      1173**DCL-ENT  2290--CALL     2294--CALL
M$READ
      1174**DCL-ENT  2303--CALL
M$RELDCB
      1179**DCL-ENT  2319--CALL     2321--CALL     2335--CALL     2345--CALL
M$WRITE
      1174**DCL-ENT  2306--CALL
SSS_SIZE
        15**DCL      2291<<ASSIGN   2292>>CALL     2296>>ASSIGN   2313>>CALL     2326>>CALL
SUBNAME
        27**DCL      2281--ASSIGN   2282--ASSIGN
SUBNAME.CNT
        28**DCL      2275<<ASSIGN   2276>>IF
SUBNAME.TEXT
        29**DCL      2277<<ASSIGN   2279<<ASSIGN
SUBSCHEMA_NAME
        35**DCL      2274>>CALLBLT  2276>>IF       2279>>ASSIGN
SUB_ATTR
        16**DCL      2023--DCLINIT  2133--DCLINIT
SUB_KEY
        30**DCL      2189--DCLINIT  2190--DCLINIT  2242--DCLINIT
SUB_KEY.CNT
PL6.E3A0      #006=COPY_64 File=ZIG$SS_IO.:ZIC0TSI                               FRI 09/05/97 12:12 Page:134  
        31**DCL      2301<<ASSIGN
SUB_KEY.TEXT
        32**DCL      2304>>IF
ZIG$ALLOCATE
      2258**DCL-ENT  2292--CALL
ZIG$FREE
      2259**DCL-ENT  2313--CALL     2326--CALL

PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:135  
      600        1        /*M*     WRITE_SHADOW_FILE   I-D-S/II       */
      601        2        /*T***********************************************************/
      602        3        /*T*                                                         */
      603        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      604        5        /*T*                                                         */
      605        6        /*T***********************************************************/
      606        7        /*P*
      607        8        NAME:    WRITE_SHADOW_FILE
      608        9        PURPOSE:
      609       10              To create the shadow file from the subschema in a form
      610       11            that IDS can then just open it up.
      611       12        Parameters:
      612       13            PTR$      =    Pointer to the data to be written to the
      613       14                         shadow file.
      614       15            SIZE      =    Size of the data to be written.
      615       16        */
      616       17        WRITE_SHADOW_FILE:
      617       18            PROC(PTR$,SIZE);
      618       19    1   DCL PTR$ PTR;
      619       20    1   DCL SIZE UBIN (36);
      620       21    1   DCL CHAR_SIZE UBIN (36) STATIC;
      621       22    1   DCL MOVE_CHAR CHAR (CHAR_SIZE) BASED;
      622       23    1   DCL ERROR ENTRY (1);
      623       24    1   DCL ABORT ENTRY;
      624       25        %INCLUDE ZI_ERRORS_SUBS;
      625      545        %INCLUDE CP_6;
      626      626        %INCLUDE CP_6_SUBS;
      627     1166        %F$DCB;
      628     1223        %FPT_OPEN(FPTN=FPT_OPEN,FUN=CREATE,ASN=FILE,ACCESS=ACTT,TYPE='2I',
      629     1224         ACS=DS8,ORG=RANDOM,CTG=YES,SCRUB=NO,REASSIGN=YES,EXIST=NEWFILE);
      630     1333        %VLP_ATTR(FPTN=IDS_ONLY);
      631     1347        %VLP_ACSVEH(READ=YES,VEHICLE='IDS',LAST=";");
      632     1364        %VLP_ATTR(FPTN=ACTT);
      633     1378        %VLP_ACCESS(EXEC=YES,ACCT='ALL',LAST=";");
      634     1395        %FPT_CLOSE(FPTN=FPT_CLOSE);
      635     1437        %EJECT;
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:136  
      636     1438    1   DCL 1 SUBDCB ALIGNED SYMREF,
      637     1439    1         2 SUBNM UNAL,
      638     1440    1           3 CNT UBIN (9) UNAL,
      639     1441    1           3 TEXT CHAR (31) UNAL,
      640     1442    1         2 DCB# UBIN (18) ALIGNED;
      641     1443    1   DCL B$DS8$ PTR SYMREF;
      642     1444        %EJECT;
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:137  
      643     1445    1       FPT_OPEN.ACSVEH_ = VECTOR(IDS_ONLY);
      644     1446    1       FPT_OPEN.NAME_ = VECTOR(SUBDCB.SUBNM);
      645     1447    1       FPT_OPEN.V.DCB# = SUBDCB.DCB#;
      646     1448    1       CHAR_SIZE = SIZE * 4;
      647     1449    1       FPT_OPEN.V.IXTNSIZE# = ((SIZE-1)/1024) + 2;
      648     1450    1       CALL CONCAT(SUBDCB.SUBNM.TEXT,SUBSTR(DCBADDR(SUBDCB.DCB#) ->
      649     1451    1          F$DCB.NAME#.C,0,DCBADDR(SUBDCB.DCB#)-> F$DCB.NAME#.L),':');
      650     1452    1       SUBDCB.SUBNM.CNT = DCBADDR(SUBDCB.DCB#) -> F$DCB.NAME#.L + 1;
      651     1453    1       CALL M$OPEN(FPT_OPEN) ALTRET(OPEN_ERROR);
      652     1454    1       B$DS8$ -> MOVE_CHAR = PTR$ -> MOVE_CHAR;
      653     1455    1       FPT_CLOSE.V.DCB# = SUBDCB.DCB#;
      654     1456    1       CALL M$CLOSE(FPT_CLOSE) ALTRET(CLOSE_ERROR);
      655     1457    1       RETURN;
      656     1458    1   OPEN_ERROR:
      657     1459    1       CALL ERROR(%ZIG_SS_SHAD_OPEN);
      658     1460        /*E*     ERROR:    ZIG-ZIG_SS_SHAD_OPEN-C
      659     1461        MESSAGE: Cannot open shadow file for the subschema.
      660     1462        */
      661     1463    1       CALL ABORT;
      662     1464    1       RETURN;
      663     1465    1   CLOSE_ERROR:
      664     1466    1       CALL ERROR(%ZIG_SS_SHAD_CLOSE);
      665     1467        /*E*     ERROR:    ZIG-ZIG_SS_SHAD_CLOSE-C
      666     1468        MESSAGE: Cannot close shadow file for the subschema.
      667     1469        */
      668     1470    1       CALL ABORT;
      669     1471    1       RETURN;
      670     1472    1   END WRITE_SHADOW_FILE;

PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:138  
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure WRITE_SHADOW_FILE.

   Procedure WRITE_SHADOW_FILE requires 74 words for executable code.
   Procedure WRITE_SHADOW_FILE requires 6 words of local(AUTO) storage.

    No errors detected in file ZIG$SS_IO.:ZIC0TSI    .

PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:139  

 Object Unit name= WRITE_SHADOW_FILE                          File name= ZIG$SS_IO.:ZIC0TOU
 UTS= SEP 05 '97 12:13:39.84 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    98    142  WRITE_SHADOW_FILE
    1   DCB   even  none     0      0  M$UC
    2   Proc  even  none    74    112  WRITE_SHADOW_FILE
    3  RoData even  none    12     14  WRITE_SHADOW_FILE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  WRITE_SHADOW_FILE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 ERROR
         yes           Std       0 ABORT
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  SUBDCB                                B$DS8$
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:140  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:141  


      600        1        /*M*     WRITE_SHADOW_FILE   I-D-S/II       */
      601        2        /*T***********************************************************/
      602        3        /*T*                                                         */
      603        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      604        5        /*T*                                                         */
      605        6        /*T***********************************************************/
      606        7        /*P*
      607        8        NAME:    WRITE_SHADOW_FILE
      608        9        PURPOSE:
      609       10              To create the shadow file from the subschema in a form
      610       11            that IDS can then just open it up.
      611       12        Parameters:
      612       13            PTR$      =    Pointer to the data to be written to the
      613       14                         shadow file.
      614       15            SIZE      =    Size of the data to be written.
      615       16        */
      616       17        WRITE_SHADOW_FILE:
      617       18            PROC(PTR$,SIZE);

     18  2 000000   000000 700200 xent  WRITE_SHADO* TSX0  ! X66_AUTO_2
         2 000001   000006 000002                    ZERO    6,2

      618       19    1   DCL PTR$ PTR;
      619       20    1   DCL SIZE UBIN (36);
      620       21    1   DCL CHAR_SIZE UBIN (36) STATIC;
      621       22    1   DCL MOVE_CHAR CHAR (CHAR_SIZE) BASED;
      622       23    1   DCL ERROR ENTRY (1);
      623       24    1   DCL ABORT ENTRY;
      624       25        %INCLUDE ZI_ERRORS_SUBS;
      625      545        %INCLUDE CP_6;
      626      626        %INCLUDE CP_6_SUBS;
      627     1166        %F$DCB;
      628     1223        %FPT_OPEN(FPTN=FPT_OPEN,FUN=CREATE,ASN=FILE,ACCESS=ACTT,TYPE='2I',
      629     1224         ACS=DS8,ORG=RANDOM,CTG=YES,SCRUB=NO,REASSIGN=YES,EXIST=NEWFILE);
      630     1333        %VLP_ATTR(FPTN=IDS_ONLY);
      631     1347        %VLP_ACSVEH(READ=YES,VEHICLE='IDS',LAST=";");
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:142  
      632     1364        %VLP_ATTR(FPTN=ACTT);
      633     1378        %VLP_ACCESS(EXEC=YES,ACCT='ALL',LAST=";");
      634     1395        %FPT_CLOSE(FPTN=FPT_CLOSE);
      635     1437        %EJECT;
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:143  
      636     1438    1   DCL 1 SUBDCB ALIGNED SYMREF,
      637     1439    1         2 SUBNM UNAL,
      638     1440    1           3 CNT UBIN (9) UNAL,
      639     1441    1           3 TEXT CHAR (31) UNAL,
      640     1442    1         2 DCB# UBIN (18) ALIGNED;
      641     1443    1   DCL B$DS8$ PTR SYMREF;
      642     1444        %EJECT;
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:144  
      643     1445    1       FPT_OPEN.ACSVEH_ = VECTOR(IDS_ONLY);

   1445  2 000002   000000 237000 3                  LDAQ    0
         2 000003   000016 757000 0                  STAQ    FPT_OPEN+12

      644     1446    1       FPT_OPEN.NAME_ = VECTOR(SUBDCB.SUBNM);

   1446  2 000004   000002 237000 3                  LDAQ    2
         2 000005   000010 757000 0                  STAQ    FPT_OPEN+6

      645     1447    1       FPT_OPEN.V.DCB# = SUBDCB.DCB#;

   1447  2 000006   000010 220000 xsym               LDX0    SUBDCB+8
         2 000007   000046 740000 0                  STX0    FPT_OPEN+36

      646     1448    1       CHAR_SIZE = SIZE * 4;

   1448  2 000010   200004 470500                    LDP0    @SIZE,,AUTO
         2 000011   000000 235100                    LDA     0,,PR0
         2 000012   000002 735000                    ALS     2
         2 000013   000000 755000 0                  STA     CHAR_SIZE

      647     1449    1       FPT_OPEN.V.IXTNSIZE# = ((SIZE-1)/1024) + 2;

   1449  2 000014   000000 236100                    LDQ     0,,PR0
         2 000015   000001 136007                    SBLQ    1,DL
         2 000016   002000 506007                    DIV     1024,DL
         2 000017   000002 036007                    ADLQ    2,DL
         2 000020   000057 756000 0                  STQ     FPT_OPEN+45

      648     1450    1       CALL CONCAT(SUBDCB.SUBNM.TEXT,SUBSTR(DCBADDR(SUBDCB.DCB#) ->

   1450  2 000021   000004 471400 3                  LDP1    4
         2 000022   100000 473500                    LDP3    0,,PR1
         2 000023   300000 474510                    LDP4    0,X0,PR3
         2 000024   400010 236100                    LDQ     8,,PR4
         2 000025   000033 772000                    QRL     27
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:145  
         2 000026   000000 621006                    EAX1    0,QL
         2 000027   040000 100540                    MLR     fill='040'O
         2 000030   400010 200011                    ADSC9   8,,PR4                   cn=1,n=*X1
         2 000031   000000 200037 xsym               ADSC9   SUBDCB                   cn=1,n=31
         2 000032   000037 116007                    CMPQ    31,DL
         2 000033   000041 603000 2                  TRC     s:1452
         2 000034   777740 621006                    EAX1    -32,QL
         2 000035   777777 661003                    ERX1    -1,DU
         2 000036   040046 100400                    MLR     fill='040'O
         2 000037   000005 000001 3                  ADSC9   5                        cn=0,n=1
         2 000040   000000 200011 xsym               ADSC9   SUBDCB,Q                 cn=1,n=*X1

      649     1451    1          F$DCB.NAME#.C,0,DCBADDR(SUBDCB.DCB#)-> F$DCB.NAME#.L),':');
      650     1452    1       SUBDCB.SUBNM.CNT = DCBADDR(SUBDCB.DCB#) -> F$DCB.NAME#.L + 1;

   1452  2 000041   000010 221000 xsym               LDX1    SUBDCB+8
         2 000042   300000 475511                    LDP5    0,X1,PR3
         2 000043   500010 236100                    LDQ     8,,PR5
         2 000044   000033 772000                    QRL     27
         2 000045   000001 036007                    ADLQ    1,DL
         2 000046   000033 736000                    QLS     27
         2 000047   000000 552040 xsym               STBQ    SUBDCB,'40'O

      651     1453    1       CALL M$OPEN(FPT_OPEN) ALTRET(OPEN_ERROR);

   1453  2 000050   000002 630400 0                  EPPR0   FPT_OPEN
         2 000051   450000 713400                    CLIMB   alt,open
         2 000052   410400 401760                    pmme    nvectors=18
         2 000053   000072 702000 2                  TSX2    OPEN_ERROR

      652     1454    1       B$DS8$ -> MOVE_CHAR = PTR$ -> MOVE_CHAR;

   1454  2 000054   200003 470500                    LDP0    @PTR$,,AUTO
         2 000055   000000 471500                    LDP1    0,,PR0
         2 000056   000000 720000 0                  LXL0    CHAR_SIZE
         2 000057   000000 473400 xsym               LDP3    B$DS8$
         2 000060   040140 100540                    MLR     fill='040'O
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:146  
         2 000061   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 000062   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

      653     1455    1       FPT_CLOSE.V.DCB# = SUBDCB.DCB#;

   1455  2 000063   000010 221000 xsym               LDX1    SUBDCB+8
         2 000064   000136 741000 0                  STX1    FPT_CLOSE+26

      654     1456    1       CALL M$CLOSE(FPT_CLOSE) ALTRET(CLOSE_ERROR);

   1456  2 000065   000104 630400 0                  EPPR0   FPT_CLOSE
         2 000066   450001 713400                    CLIMB   alt,close
         2 000067   406000 401760                    pmme    nvectors=13
         2 000070   000102 702000 2                  TSX2    CLOSE_ERROR

      655     1457    1       RETURN;

   1457  2 000071   000000 702200 xent               TSX2  ! X66_ARET

      656     1458    1   OPEN_ERROR:
      657     1459    1       CALL ERROR(%ZIG_SS_SHAD_OPEN);

   1459  2 000072   000010 630400 3     OPEN_ERROR   EPPR0   8
         2 000073   000006 631400 3                  EPPR1   6
         2 000074   000000 701000 xent               TSX1    ERROR
         2 000075   000000 011000                    NOP     0

      658     1460        /*E*     ERROR:    ZIG-ZIG_SS_SHAD_OPEN-C
      659     1461        MESSAGE: Cannot open shadow file for the subschema.
      660     1462        */
      661     1463    1       CALL ABORT;

   1463  2 000076   000011 631400 3                  EPPR1   9
         2 000077   000000 701000 xent               TSX1    ABORT
         2 000100   000000 011000                    NOP     0

      662     1464    1       RETURN;
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:147  

   1464  2 000101   000000 702200 xent               TSX2  ! X66_ARET

      663     1465    1   CLOSE_ERROR:
      664     1466    1       CALL ERROR(%ZIG_SS_SHAD_CLOSE);

   1466  2 000102   000013 630400 3     CLOSE_ERROR  EPPR0   11
         2 000103   000006 631400 3                  EPPR1   6
         2 000104   000000 701000 xent               TSX1    ERROR
         2 000105   000000 011000                    NOP     0

      665     1467        /*E*     ERROR:    ZIG-ZIG_SS_SHAD_CLOSE-C
      666     1468        MESSAGE: Cannot close shadow file for the subschema.
      667     1469        */
      668     1470    1       CALL ABORT;

   1470  2 000106   000011 631400 3                  EPPR1   9
         2 000107   000000 701000 xent               TSX1    ABORT
         2 000110   000000 011000                    NOP     0

      669     1471    1       RETURN;

   1471  2 000111   000000 702200 xent               TSX2  ! X66_ARET

FPT_OPEN
 Sect OctLoc
   0     002   000025 777640   000046 006000   000000 177640   000000 006014    .....&..........
   0     006   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     012   000000 177640   000000 006014   000003 777640   000077 006000    .............?..
   0     016   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     046*  000000 200702   000000 003001   252525 003013   062111 252520    ............2I..
   0     052   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   0     056   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     062   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   0     066   040040 040040   000000 000000   000000 000000   000000 000000        ............
   0     072   000000 000000   ****** ******                                    ........

PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:148  
IDS_ONLY
 Sect OctLoc
   0     074   000000 000002   400000 003111   104123 ******                    .......IDS..

ACTT
 Sect OctLoc
   0     077   000000 000003   002000 101114   114040 040040   040040 ******    ......ALL     ..

FPT_CLOSE
 Sect OctLoc
   0     104   000003 777640   000136 006000   000000 177640   000000 006014    .....^..........
   0     110   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     134*  000000 177640   000000 006014   000000 000000   000000 000040    ...............
   0     140   000220 000000   000000 000000                                    ........

(unnamed)
 Sect OctLoc
   3     000   000002 777640   000074 006000   000007 777640   000000 006000    .....<..........
   3     004   000000 006003   072040 040040   000001 000000   000000 021536    ....:   ........
   3     010   000007 006000   000000 000000   000000 021537   000012 006000    ................
      670     1472    1   END WRITE_SHADOW_FILE;

PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:149  
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure WRITE_SHADOW_FILE.

   Procedure WRITE_SHADOW_FILE requires 74 words for executable code.
   Procedure WRITE_SHADOW_FILE requires 6 words of local(AUTO) storage.

    No errors detected in file ZIG$SS_IO.:ZIC0TSI    .
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:150  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:151  
          MINI XREF LISTING

ABORT
        24**DCL-ENT  1463--CALL     1470--CALL
ACTT
      1375**DCL      1291--DCLINIT
ACTT.Q
      1376**DCL      1375--DCLINIT
B$DS8$
      1443**DCL      1454>>ASSIGN
CHAR_SIZE
        21**DCL        22--IMP-SIZ  1448<<ASSIGN   1454>>ASSIGN   1454>>ASSIGN
CLOSE_ERROR
      1466**LABEL    1456--CALLALT
ERROR
        23**DCL-ENT  1459--CALL     1466--CALL
F$DCB.ACTPOS
      1199**DCL      1199--REDEF
F$DCB.ARS#
      1173**DCL      1173--REDEF
F$DCB.ATTR
      1192**DCL      1193--REDEF
F$DCB.BORROW
      1207**DCL      1207--REDEF    1207--REDEF    1207--REDEF
F$DCB.DCBNAME.L
      1221**DCL      1221--IMP-SIZ
F$DCB.EOMCHAR#
      1177**DCL      1177--REDEF
F$DCB.FLDID
      1202**DCL      1202--REDEF
F$DCB.FORM$
      1196**DCL      1196--REDEF
F$DCB.FSECT
      1212**DCL      1212--REDEF
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:152  
F$DCB.FSN#
      1189**DCL      1189--REDEF    1189--REDEF    1190--REDEF
F$DCB.HEADER$
      1195**DCL      1195--REDEF
F$DCB.IXTNSIZE#
      1193**DCL      1193--REDEF
F$DCB.LASTSTA$
      1182**DCL      1182--REDEF
F$DCB.LVL
      1208**DCL      1208--REDEF
F$DCB.NAME#.C
      1183**DCL      1183--REDEF    1450>>CALLBLT
F$DCB.NAME#.L
      1183**DCL      1450>>CALLBLT  1452>>ASSIGN
F$DCB.NOEOF
      1205**DCL      1205--REDEF
F$DCB.NRECS#
      1194**DCL      1194--REDEF
F$DCB.NRECX
      1213**DCL      1213--REDEF
F$DCB.OHDR
      1205**DCL      1205--REDEF
F$DCB.ORG#
      1188**DCL      1188--REDEF
F$DCB.PRECNO
      1211**DCL      1211--REDEF
F$DCB.RCSZ
      1217**DCL      1217--REDEF
F$DCB.RES#
      1184**DCL      1184--REDEF
F$DCB.SETX
      1196**DCL      1196--REDEF
F$DCB.TAB$
      1196**DCL      1196--REDEF
F$DCB.TDA
      1210**DCL      1211--REDEF
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:153  
F$DCB.WSN#
      1184**DCL      1184--REDEF
FPT_CLOSE
      1418**DCL      1456<>CALL
FPT_CLOSE.SN_
      1418**DCL      1418--REDEF
FPT_CLOSE.UTL_
      1419**DCL      1419--REDEF
FPT_CLOSE.V
      1423**DCL      1418--DCLINIT
FPT_CLOSE.V.DCB#
      1424**DCL      1455<<ASSIGN
FPT_CLOSE.V.EXPIRE#
      1433**DCL      1433--REDEF
FPT_CLOSE.V.TYPE#
      1431**DCL      1431--REDEF
FPT_CLOSE.V.XTNSIZE#
      1428**DCL      1428--REDEF    1430--REDEF
FPT_OPEN
      1289**DCL      1453<>CALL
FPT_OPEN.ACSVEH_
      1291**DCL      1292--REDEF    1445<<ASSIGN
FPT_OPEN.ALTKEYS_
      1297**DCL      1298--REDEF    1298--REDEF
FPT_OPEN.HDR_
      1296**DCL      1297--REDEF
FPT_OPEN.NAME_
      1290**DCL      1446<<ASSIGN
FPT_OPEN.TAB_
      1295**DCL      1296--REDEF
FPT_OPEN.UHL_
      1289**DCL      1290--REDEF    1290--REDEF
FPT_OPEN.V
      1298**DCL      1289--DCLINIT
FPT_OPEN.V.DCB#
      1298**DCL      1447<<ASSIGN
PL6.E3A0      #007=WRITE_SHADOW_FILE File=ZIG$SS_IO.:ZIC0TSI                     FRI 09/05/97 12:13 Page:154  
FPT_OPEN.V.FSN#
      1329**DCL      1329--REDEF    1329--REDEF
FPT_OPEN.V.IXTNSIZE#
      1317**DCL      1449<<ASSIGN
FPT_OPEN.WSN_
      1295**DCL      1295--REDEF
IDS_ONLY
      1344**DCL      1445--ASSIGN
IDS_ONLY.Q
      1345**DCL      1344--DCLINIT
M$CLOSE
       554**DCL-ENT  1456--CALL
M$OPEN
       554**DCL-ENT  1453--CALL
MOVE_CHAR
        22**DCL      1454<<ASSIGN   1454>>ASSIGN
OPEN_ERROR
      1459**LABEL    1453--CALLALT
PTR$
        19**DCL        17--PROC     1454>>ASSIGN
SIZE
        20**DCL        17--PROC     1448>>ASSIGN   1449>>ASSIGN
SUBDCB.DCB#
      1442**DCL      1447>>ASSIGN   1450--CALLBLT  1450--CALLBLT  1452--ASSIGN   1455>>ASSIGN
SUBDCB.SUBNM
      1439**DCL      1446--ASSIGN
SUBDCB.SUBNM.CNT
      1440**DCL      1452<<ASSIGN
SUBDCB.SUBNM.TEXT
      1441**DCL      1450<<CALLBLT
