
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:1    
        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        ZIU$COMPACT: PROC ALTRET;
        7        7        /*M*          I-D-S/II POINTER ARRAY UTILITY  */
        8        8        /*
        9        9                      THIS PROGRAM IS TO HAVE THREE MAIN PROPSES.
       10       10              1)  TO REBUILT THE HIGHER LEVEL POINTER ARRAY INDICES
       11       11                  AND COMPRESS THE SPACE IN PA REC
       12       12              2)  TO RESORT A PA SET IN CASE IT IS OUT OF ORDER
       13       13              3)  CONVERT A NON-PA SET TO PA-SET    */
       14       14        /*
       15       15              SORT ENVIROMENT - SORT IS CALLED TO SORT PA_KEYS
       16       16        */
       17       17    1   DCL X$SORT ENTRY(1) ALTRET;
       18       18    1   DCL ZIU$PA_SORTIN ENTRY(2) ALTRET;
       19       19    1   DCL ZIU$PA_PACK ENTRY ALTRET;
       20       20    1   DCL ZIU$PA_SORTOUT ENTRY(2) ALTRET; /* OUTPUT OF SORTING PA_MEMBERS */
       21       21    1   DCL ZIU$SC_RESORT ENTRY(2) ALTRET; /* OUTPUT OF SORTING REGULAR MEMBERS */
       22       22    1   DCL ZIU$PA_CMPKEY ENTRY(3);
       23       23    1   DCL ZIU$SRTDCB ENTRY; /* SET F$SCRF1 IF NOT SET BY USER */
       24       24
       25       25        %INCLUDE ZL_MACRO_C;
       26      675         %SORT_TABLE(ICE=ZIU$PA_SORTIN, /* PROC TO EXTRACT MEMBERS */
       27      676        KCE=ZIU$PA_CMPKEY, /* BMAP TO COMPARE ALL DATA TYPE */
       28      677        STAT=YES,DMP='D'); /* OUTPUT PROC IS VARIED */
       29      786
       30      787        %INCLUDE ZI_GLOBAL_DBUTIL;
       31      965         %SYS_FUNC;
       32     1057         %MISC_DCLS;
       33     1110        %INCLUDE ZI$DIR;
       34     1267         %DIR;
       35     1411        %INCLUDE ZI_PRSE_SUBS;
       36     1567        %INCLUDE CP_6;
       37     1648         %FPT_WRITE(FPTN=WRITE_TEMP,STCLASS=SYMREF);
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:2    
       38     1679        %INCLUDE CP_6_SUBS;
       39     2219        %INCLUDE ZI_ERRORS_SUBS;
       40     2739
       41     2740    1   DCL SET_BUFS ENTRY(2) ALTRET;
       42     2741    1   DCL GET_DCB ENTRY(1) ALTRET;
       43     2742    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
       44     2743    1   DCL ERROR_MSG ENTRY(4);
       45     2744
       46     2745    1   DCL MAX_KEY_SIZE SBIN WORD SYMREF ALIGNED;
       47     2746    1   DCL REC_CNT SBIN WORD SYMREF ALIGNED;
       48     2747    1   DCL DBKEY_SORT_DCB SBIN HALF SYMREF ALIGNED;
       49     2748    1   DCL 1 STK(0:1) SYMREF ALIGNED,
       50     2749    1         2 NEXT SBIN ALIGNED,
       51     2750    1         2 PRIOR SBIN ALIGNED,
       52     2751    1         2 CURR SBIN ALIGNED,
       53     2752    1         2 * UBIN HALF UNAL;
       54     2753    1   DCL COMMAND_TEXT CHAR(12) SYMREF ALIGNED;
       55     2754    1   DCL BREAK_CLEANUP BIT(72) SYMREF ALIGNED;
       56     2755    1   DCL NBUFS SBIN SYMREF ALIGNED;
       57     2756    1   DCL FIRST_TIME_CALLED SBIN SYMREF ALIGNED;
       58     2757
       59     2758    1       REMEMBER ALT_ZIU$COMPACT IN BREAK_CLEANUP; /* TRAP ALL ABORT RET */
       60     2759
       61     2760    1       FIRST_TIME_CALLED=0; /* STRT FORM FIRST AREA */
       62     2761    1       ZI$DIR.AREA_NM.NAME.TEXT='M$PT';
       63     2762    1       REC_CNT = 0;
       64     2763    1       CALL GET_DCB(ZI$DIR.AREA_NM) ALTRET(NO_DCB_FOR_TEMP);
       65     2764    1       DBKEY_SORT_DCB = ZI$DIR.AREA_NM.DCB#;
       66     2765    1       WRITE_TEMP.V.DCB#=DBKEY_SORT_DCB;
       67     2766    1       WRITE_TEMP.BUF_=VECTOR(STK(1));
       68     2767    1       WRITE_TEMP.BUF_.BOUND=7; /* DATA SIZE IS 8 BYTES */
       69     2768
       70     2769    1       FIDSF = '*POINTER_PATCH_FILE';
       71     2770    1       DCBSF = DBKEY_SORT_DCB;
       72     2771    1       ACSSF = %DIRECT#;
       73     2772    1       ASNSF = %FILE#;
       74     2773    1       ORGSF = %KEYED#;
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:3    
       75     2774    1       DISPSF = %NAMED#;
       76     2775    1       FUNSF = %CREATE#;
       77     2776    1       EXISTSF = %NEWFILE#;
       78     2777    1       REASGNSF = %YES#;
       79     2778    1       CALL SYS_FUNC_OPEN ALTRET(ALT_ZIU$COMPACT); /* OPEN ERROR */
       80     2779
       81     2780    1       CALL SET_BUFS(,32); /* RELEASE TO 32K FOR SORT GET MAX */
       82     2781    1       IF ZI$DIR.CODE=#COMPACT OR ZI$DIR.CODE=#REVERT THEN /* NO SORT */
       83     2782    2       DO;
       84     2783    2           CALL SET_BUFS(,128); /* COMPACT USE 128 K MAX */
       85     2784    2           KCNT = NBUFS; /* REMEMBER CURR BUFFER COUNT */
       86     2785    2           IF ZI$DIR.CODE=#COMPACT THEN /* RESORT USE ALL I_O_BUF */
       87     2786    2               NBUFS=(2*NBUFS-NBUFS/2)/2;
       88     2787         /* QUARTER OF MEMORY USED BY COMPACT STACK */
       89     2788    2           ELSE
       90     2789    2               NBUFS=NBUFS-8; /* LEAVE 8K FOR OWNER_STK */
       91     2790    2           CALL ZIU$PA_PACK; /* COMPACT PA USING EXISTING PA */
       92     2791    2           END;
       93     2792    1       ELSE /* WHEN COMMAND IS REBUILD,CONVERT OR RESORT */
       94     2793    2       DO;
       95     2794         /* LETS FIGURE OUT HOW MUCH MEMORY THAT SORT SHOULD USE */
       96     2795    2           RB = 8 + RB/5; /* 8 PAGES IS MINIMUM */
       97     2796         /* AND WE ALLOW 1K FOR EACH 5 DATA PAGES */
       98     2797    2           IF RB >255 THEN
       99     2798    2               RB = 255; /* 255 IS THE MAXIMUM */
      100     2799    2           SORT_TABLE.MEM# = RB; /*EXP: 600 PAGES USES 128K */
      101     2800    2           SORT_TABLE.PRIMARY.INSIZ# = MAX_KEY_SIZE+19; /*MAX REC SIZE */
      102     2801
      103     2802    2           IF ZI$DIR.CODE = #RESORT THEN
      104     2803    2               SORT_TABLE.SECONDARY.OCE$ = ENTADDR(ZIU$SC_RESORT);
      105     2804    2           ELSE
      106     2805    2               SORT_TABLE.SECONDARY.OCE$ = ENTADDR(ZIU$PA_SORTOUT);
      107     2806    2           CALL ZIU$SRTDCB; /* DO !SET F$SCRF1 *SORT,ORG=RAN,IX=15 */
      108     2807
      109     2808    2           CALL X$SORT(SORT_TABLE) ALTRET(ALT_ZIU$COMPACT);
      110     2809
      111     2810    2           END;
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:4    
      112     2811    1   RET: RETURN; /* TO ZIU$PA_ROOT, THEN CALL ZIU$CMPT_SUMY */
      113     2812
      114     2813    1   ALT_ZIU$COMPACT: /* ABORT RETURN OR USER BREAK WAS HIT */
      115     2814    1       ALTRETURN; /* TO ZIU$PA_ROOT, THEN CLOSE ALL DCBS */
      116     2815    1   NO_DCB_FOR_TEMP: /* CANNOT GET A DCB FOR TEMP_FILE */
      117     2816    1       CALL ERROR_MSG(DBU#PAERROR3,COMMAND_TEXT);
      118     2817    1       UNWIND TO BREAK_CLEANUP;
      119     2818        /*E* ERROR: ZIU-DBU#PAERROR3-C
      120     2819        MESSAGE: Error: Cannot get a DCB for the pointer-patch file
      121     2820                        used by this directive.  %U1 aborted. */
      122     2821    1   END ZIU$COMPACT;
      123     2822        %EOD;

PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:5    
--  Include file information  --

   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZL_MACRO_C.:TOOLE05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$COMPACT.

   Procedure ZIU$COMPACT requires 128 words for executable code.
   Procedure ZIU$COMPACT requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:6    

 Object Unit name= ZIU$COMPACT                                File name= ZIU$COMPACT.:ZIC0TOU
 UTS= SEP 05 '97 13:09:56.88 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    36     44  ZIU$COMPACT
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$UC
    3  RoData even  UTS      6      6  ZIU$COMPACT
    4   Proc  even  none   128    200  ZIU$COMPACT
    5  RoData even  none    21     25  ZIU$COMPACT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        0  ZIU$COMPACT
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:7    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 ZIU$PA_SORTIN
 yes     yes           Std       0 SYS_FUNC_OPEN
 yes     yes           Std       0 ZIU$PA_PACK
         yes           Std       3 ZIU$PA_CMPKEY
 yes     yes           Std       1 GET_DCB
 yes     yes           Std       2 SET_BUFS
 yes     yes           Std       2 ZIU$SC_RESORT
 yes     yes           Std       1 X$SORT
         yes           Std       4 ERROR_MSG
 yes     yes           Std       2 ZIU$PA_SORTOUT
         yes           Std       0 ZIU$SRTDCB
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       nStd      0 X66_AUNWIND
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     BLKLSF                                KEYLSF                                KEYXSF
     DCBSF                                 ORGSF                                 KEYSF
     KEYVSF                                ACSSF                                 NOTIMESF
     FUNSF                                 ASNSF                                 TESTSF
     XTENSIZESF                            DISPSF                                WAITSF
     VFCSF                                 FULLSF                                BKUPSF
     BUFLNSF                               BUFSF                                 SOURCESF
     DESTSF                                DATESF                                TIMESF
     UTSSF                                 DAYSF                                 TSTAMPSF
     ENCRP_SEEDSF                          ERRCODESF                             MSGCODE
     INCL_ERR                              ERR_INSERT                            FIDSF_RD
     ACNT                                  EXISTSF                               SHARESF
     DCBNMSF                               KEYRSF                                NO_KEYSF
     REASGNSF                              CARRY_ATTRIBUTESF                     SUBMESSF
     SPKY_OPNSF                            POSSF                                 ERRFLGSF
     MERGESF                               FSA_FLAG                              RELGSF
     UNUSED                                HELPCODE                              COUNTSF
     INDEXSF                               GAP                                   PSNSF
     ACNTSF                                KEY_SHADWSF                           REC$
     RB                                    RE                                    IE
     IB                                    CNT                                   ICNT
     RCNT                                  SCNT                                  FIRST_SET
     RETCNT                                DMPCNT                                KCNT
     ACNT_IDX                              I                                     J
     K                                     X                                     STEPCC
     I_O_BUF$                              OUT_INDX                              I_O_SIZE
     REC_DATA_LN                           M$LO                                  B$TCB$
     B$ROS$                                B$JIT$                                KEYFID
     I_O_KEY                               RESTART                               BREAK_FLAG
     ICHKSUM                               ITMCNT                                GAP1
     ZI$DIR                                SCHEMA_ACTIVE                         RECORD_LIST
     SET_LIST                              RETAIN_LIST                           DUMP_FID
     ALTKY                                 INIT_RG                               KEY_RNG
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:9    
     ITEM_LIST                             M$UC                                  WRITE_TEMP
     MAX_KEY_SIZE                          REC_CNT                               DBKEY_SORT_DCB
     STK                                   COMMAND_TEXT                          BREAK_CLEANUP
     NBUFS                                 FIRST_TIME_CALLED

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:10   


        1        1        /*T***********************************************************/
        2        2        /*T*                                                         */
        3        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        4        4        /*T*                                                         */
        5        5        /*T***********************************************************/
        6        6        ZIU$COMPACT: PROC ALTRET;

      6  4 000000   000000 700200 xent  ZIU$COMPACT  TSX0  ! X66_AUTO_0
         4 000001   000006 000000                    ZERO    6,0

        7        7        /*M*          I-D-S/II POINTER ARRAY UTILITY  */
        8        8        /*
        9        9                      THIS PROGRAM IS TO HAVE THREE MAIN PROPSES.
       10       10              1)  TO REBUILT THE HIGHER LEVEL POINTER ARRAY INDICES
       11       11                  AND COMPRESS THE SPACE IN PA REC
       12       12              2)  TO RESORT A PA SET IN CASE IT IS OUT OF ORDER
       13       13              3)  CONVERT A NON-PA SET TO PA-SET    */
       14       14        /*
       15       15              SORT ENVIROMENT - SORT IS CALLED TO SORT PA_KEYS
       16       16        */
       17       17    1   DCL X$SORT ENTRY(1) ALTRET;
       18       18    1   DCL ZIU$PA_SORTIN ENTRY(2) ALTRET;
       19       19    1   DCL ZIU$PA_PACK ENTRY ALTRET;
       20       20    1   DCL ZIU$PA_SORTOUT ENTRY(2) ALTRET; /* OUTPUT OF SORTING PA_MEMBERS */
       21       21    1   DCL ZIU$SC_RESORT ENTRY(2) ALTRET; /* OUTPUT OF SORTING REGULAR MEMBERS */
       22       22    1   DCL ZIU$PA_CMPKEY ENTRY(3);
       23       23    1   DCL ZIU$SRTDCB ENTRY; /* SET F$SCRF1 IF NOT SET BY USER */
       24       24
       25       25        %INCLUDE ZL_MACRO_C;
       26      675         %SORT_TABLE(ICE=ZIU$PA_SORTIN, /* PROC TO EXTRACT MEMBERS */
       27      676        KCE=ZIU$PA_CMPKEY, /* BMAP TO COMPARE ALL DATA TYPE */
       28      677        STAT=YES,DMP='D'); /* OUTPUT PROC IS VARIED */
       29      786
       30      787        %INCLUDE ZI_GLOBAL_DBUTIL;
       31      965         %SYS_FUNC;
       32     1057         %MISC_DCLS;
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:11   
       33     1110        %INCLUDE ZI$DIR;
       34     1267         %DIR;
       35     1411        %INCLUDE ZI_PRSE_SUBS;
       36     1567        %INCLUDE CP_6;
       37     1648         %FPT_WRITE(FPTN=WRITE_TEMP,STCLASS=SYMREF);
       38     1679        %INCLUDE CP_6_SUBS;
       39     2219        %INCLUDE ZI_ERRORS_SUBS;
       40     2739
       41     2740    1   DCL SET_BUFS ENTRY(2) ALTRET;
       42     2741    1   DCL GET_DCB ENTRY(1) ALTRET;
       43     2742    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
       44     2743    1   DCL ERROR_MSG ENTRY(4);
       45     2744
       46     2745    1   DCL MAX_KEY_SIZE SBIN WORD SYMREF ALIGNED;
       47     2746    1   DCL REC_CNT SBIN WORD SYMREF ALIGNED;
       48     2747    1   DCL DBKEY_SORT_DCB SBIN HALF SYMREF ALIGNED;
       49     2748    1   DCL 1 STK(0:1) SYMREF ALIGNED,
       50     2749    1         2 NEXT SBIN ALIGNED,
       51     2750    1         2 PRIOR SBIN ALIGNED,
       52     2751    1         2 CURR SBIN ALIGNED,
       53     2752    1         2 * UBIN HALF UNAL;
       54     2753    1   DCL COMMAND_TEXT CHAR(12) SYMREF ALIGNED;
       55     2754    1   DCL BREAK_CLEANUP BIT(72) SYMREF ALIGNED;
       56     2755    1   DCL NBUFS SBIN SYMREF ALIGNED;
       57     2756    1   DCL FIRST_TIME_CALLED SBIN SYMREF ALIGNED;
       58     2757
       59     2758    1       REMEMBER ALT_ZIU$COMPACT IN BREAK_CLEANUP; /* TRAP ALL ABORT RET */

   2758  4 000002   000165 635000 4                  EAA     ALT_ZIU$COMPACT
         4 000003   000000 452400 xsym               STP2    BREAK_CLEANUP
         4 000004   000001 755000 xsym               STA     BREAK_CLEANUP+1

       60     2759
       61     2760    1       FIRST_TIME_CALLED=0; /* STRT FORM FIRST AREA */

   2760  4 000005   000000 450000 xsym               STZ     FIRST_TIME_CALLED

PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:12   
       62     2761    1       ZI$DIR.AREA_NM.NAME.TEXT='M$PT';

   2761  4 000006   040000 100400                    MLR     fill='040'O
         4 000007   000000 000004 3                  ADSC9   0                        cn=0,n=4
         4 000010   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30

       63     2762    1       REC_CNT = 0;

   2762  4 000011   000000 450000 xsym               STZ     REC_CNT

       64     2763    1       CALL GET_DCB(ZI$DIR.AREA_NM) ALTRET(NO_DCB_FOR_TEMP);

   2763  4 000012   000001 630400 5                  EPPR0   1
         4 000013   000000 631400 5                  EPPR1   0
         4 000014   000000 701000 xent               TSX1    GET_DCB
         4 000015   000166 702000 4                  TSX2    NO_DCB_FOR_TEMP

       65     2764    1       DBKEY_SORT_DCB = ZI$DIR.AREA_NM.DCB#;

   2764  4 000016   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000017   000000 740000 xsym               STX0    DBKEY_SORT_DCB

       66     2765    1       WRITE_TEMP.V.DCB#=DBKEY_SORT_DCB;

   2765  4 000020   000010 740000 xsym               STX0    WRITE_TEMP+8

       67     2766    1       WRITE_TEMP.BUF_=VECTOR(STK(1));

   2766  4 000021   000002 237000 5                  LDAQ    2
         4 000022   000004 757000 xsym               STAQ    WRITE_TEMP+4

       68     2767    1       WRITE_TEMP.BUF_.BOUND=7; /* DATA SIZE IS 8 BYTES */

   2767  4 000023   000004 236000 xsym               LDQ     WRITE_TEMP+4
         4 000024   177777 376007                    ANQ     65535,DL
         4 000025   000004 276000 5                  ORQ     4
         4 000026   000004 756000 xsym               STQ     WRITE_TEMP+4
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:13   

       69     2768
       70     2769    1       FIDSF = '*POINTER_PATCH_FILE';

   2769  4 000027   040000 100400                    MLR     fill='040'O
         4 000030   000001 000023 3                  ADSC9   1                        cn=0,n=19
         4 000031   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

       71     2770    1       DCBSF = DBKEY_SORT_DCB;

   2770  4 000032   000000 740000 xsym               STX0    DCBSF

       72     2771    1       ACSSF = %DIRECT#;

   2771  4 000033   000002 235007                    LDA     2,DL
         4 000034   000000 755000 xsym               STA     ACSSF

       73     2772    1       ASNSF = %FILE#;

   2772  4 000035   000001 235007                    LDA     1,DL
         4 000036   000000 755000 xsym               STA     ASNSF

       74     2773    1       ORGSF = %KEYED#;

   2773  4 000037   000002 235007                    LDA     2,DL
         4 000040   000000 755000 xsym               STA     ORGSF

       75     2774    1       DISPSF = %NAMED#;

   2774  4 000041   000000 755000 xsym               STA     DISPSF

       76     2775    1       FUNSF = %CREATE#;

   2775  4 000042   000003 235007                    LDA     3,DL
         4 000043   000000 755000 xsym               STA     FUNSF

       77     2776    1       EXISTSF = %NEWFILE#;
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:14   

   2776  4 000044   600000 236003                    LDQ     -65536,DU
         4 000045   000000 756000 xsym               STQ     EXISTSF

       78     2777    1       REASGNSF = %YES#;

   2777  4 000046   400000 236003                    LDQ     -131072,DU
         4 000047   000000 756000 xsym               STQ     REASGNSF

       79     2778    1       CALL SYS_FUNC_OPEN ALTRET(ALT_ZIU$COMPACT); /* OPEN ERROR */

   2778  4 000050   000005 631400 5                  EPPR1   5
         4 000051   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000052   000165 702000 4                  TSX2    ALT_ZIU$COMPACT

       80     2779
       81     2780    1       CALL SET_BUFS(,32); /* RELEASE TO 32K FOR SORT GET MAX */

   2780  4 000053   000011 236000 5                  LDQ     9
         4 000054   000007 235000 5                  LDA     7
         4 000055   200004 757100                    STAQ    4,,AUTO
         4 000056   200004 630500                    EPPR0   4,,AUTO
         4 000057   000006 631400 5                  EPPR1   6
         4 000060   000000 701000 xent               TSX1    SET_BUFS
         4 000061   000000 011000                    NOP     0

       82     2781    1       IF ZI$DIR.CODE=#COMPACT OR ZI$DIR.CODE=#REVERT THEN /* NO SORT */

   2781  4 000062   000125 236000 xsym               LDQ     ZI$DIR+85
         4 000063   000012 376000 5                  ANQ     10
         4 000064   000013 116000 5                  CMPQ    11
         4 000065   000070 600000 4                  TZE     s:2783
         4 000066   000014 116000 5                  CMPQ    12
         4 000067   000126 601000 4                  TNZ     s:2795

       83     2782    2       DO;

PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:15   
       84     2783    2           CALL SET_BUFS(,128); /* COMPACT USE 128 K MAX */

   2783  4 000070   000016 236000 5                  LDQ     14
         4 000071   000007 235000 5                  LDA     7
         4 000072   200004 757100                    STAQ    4,,AUTO
         4 000073   200004 630500                    EPPR0   4,,AUTO
         4 000074   000006 631400 5                  EPPR1   6
         4 000075   000000 701000 xent               TSX1    SET_BUFS
         4 000076   000000 011000                    NOP     0

       85     2784    2           KCNT = NBUFS; /* REMEMBER CURR BUFFER COUNT */

   2784  4 000077   000000 235000 xsym               LDA     NBUFS
         4 000100   000000 755000 xsym               STA     KCNT

       86     2785    2           IF ZI$DIR.CODE=#COMPACT THEN /* RESORT USE ALL I_O_BUF */

   2785  4 000101   000125 236000 xsym               LDQ     ZI$DIR+85
         4 000102   000012 376000 5                  ANQ     10
         4 000103   000013 116000 5                  CMPQ    11
         4 000104   000120 601000 4                  TNZ     s:2789

       87     2786    2               NBUFS=(2*NBUFS-NBUFS/2)/2;

   2786  4 000105   000000 236000 xsym               LDQ     NBUFS
         4 000106   000002 506007                    DIV     2,DL
         4 000107   200004 756100                    STQ     4,,AUTO
         4 000110   000000 336000 xsym               LCQ     NBUFS
         4 000111   000001 736000                    QLS     1
         4 000112   200004 036100                    ADLQ    4,,AUTO
         4 000113   000017 676000 5                  ERQ     15
         4 000114   000001 036007                    ADLQ    1,DL
         4 000115   000002 506007                    DIV     2,DL
         4 000116   000000 756000 xsym               STQ     NBUFS
         4 000117   000122 710000 4                  TRA     s:2790

       88     2787         /* QUARTER OF MEMORY USED BY COMPACT STACK */
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:16   
       89     2788    2           ELSE
       90     2789    2               NBUFS=NBUFS-8; /* LEAVE 8K FOR OWNER_STK */

   2789  4 000120   000010 336007                    LCQ     8,DL
         4 000121   000000 056000 xsym               ASQ     NBUFS

       91     2790    2           CALL ZIU$PA_PACK; /* COMPACT PA USING EXISTING PA */

   2790  4 000122   000005 631400 5                  EPPR1   5
         4 000123   000000 701000 xent               TSX1    ZIU$PA_PACK
         4 000124   000000 011000                    NOP     0

       92     2791    2           END;

   2791  4 000125   000164 710000 4                  TRA     RET

       93     2792    1       ELSE /* WHEN COMMAND IS REBUILD,CONVERT OR RESORT */
       94     2793    2       DO;

       95     2794         /* LETS FIGURE OUT HOW MUCH MEMORY THAT SORT SHOULD USE */
       96     2795    2           RB = 8 + RB/5; /* 8 PAGES IS MINIMUM */

   2795  4 000126   000000 235000 xsym               LDA     RB
         4 000127   000043 773000                    LRL     35
         4 000130   000005 507007                    DVF     5,DL
         4 000131   000010 035007                    ADLA    8,DL
         4 000132   000000 755000 xsym               STA     RB

       97     2796         /* AND WE ALLOW 1K FOR EACH 5 DATA PAGES */
       98     2797    2           IF RB >255 THEN

   2797  4 000133   000400 115007                    CMPA    256,DL
         4 000134   000137 602000 4                  TNC     s:2799

       99     2798    2               RB = 255; /* 255 IS THE MAXIMUM */

   2798  4 000135   000377 236007                    LDQ     255,DL
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:17   
         4 000136   000000 756000 xsym               STQ     RB

      100     2799    2           SORT_TABLE.MEM# = RB; /*EXP: 600 PAGES USES 128K */

   2799  4 000137   000000 720000 xsym               LXL0    RB
         4 000140   000012 740000 0                  STX0    SORT_TABLE+10

      101     2800    2           SORT_TABLE.PRIMARY.INSIZ# = MAX_KEY_SIZE+19; /*MAX REC SIZE */

   2800  4 000141   000000 235000 xsym               LDA     MAX_KEY_SIZE
         4 000142   000023 035007                    ADLA    19,DL
         4 000143   000000 755000 0                  STA     SORT_TABLE

      102     2801
      103     2802    2           IF ZI$DIR.CODE = #RESORT THEN

   2802  4 000144   000125 236000 xsym               LDQ     ZI$DIR+85
         4 000145   000012 376000 5                  ANQ     10
         4 000146   000020 116000 5                  CMPQ    16
         4 000147   000153 601000 4                  TNZ     s:2805

      104     2803    2               SORT_TABLE.SECONDARY.OCE$ = ENTADDR(ZIU$SC_RESORT);

   2803  4 000150   000000 636000 xent               EAQ     ZIU$SC_RESORT
         4 000151   000033 756000 0                  STQ     SORT_TABLE+27
         4 000152   000155 710000 4                  TRA     s:2806

      105     2804    2           ELSE
      106     2805    2               SORT_TABLE.SECONDARY.OCE$ = ENTADDR(ZIU$PA_SORTOUT);

   2805  4 000153   000000 636000 xent               EAQ     ZIU$PA_SORTOUT
         4 000154   000033 756000 0                  STQ     SORT_TABLE+27

      107     2806    2           CALL ZIU$SRTDCB; /* DO !SET F$SCRF1 *SORT,ORG=RAN,IX=15 */

   2806  4 000155   000005 631400 5                  EPPR1   5
         4 000156   000000 701000 xent               TSX1    ZIU$SRTDCB
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:18   
         4 000157   000000 011000                    NOP     0

      108     2807
      109     2808    2           CALL X$SORT(SORT_TABLE) ALTRET(ALT_ZIU$COMPACT);

   2808  4 000160   000021 630400 5                  EPPR0   17
         4 000161   000000 631400 5                  EPPR1   0
         4 000162   000000 701000 xent               TSX1    X$SORT
         4 000163   000165 702000 4                  TSX2    ALT_ZIU$COMPACT

      110     2809
      111     2810    2           END;

      112     2811    1   RET: RETURN; /* TO ZIU$PA_ROOT, THEN CALL ZIU$CMPT_SUMY */

   2811  4 000164   000000 702200 xent  RET          TSX2  ! X66_ARET

      113     2812
      114     2813    1   ALT_ZIU$COMPACT: /* ABORT RETURN OR USER BREAK WAS HIT */
      115     2814    1       ALTRETURN; /* TO ZIU$PA_ROOT, THEN CLOSE ALL DCBS */

   2814  4 000165   000000 702200 xent  ALT_ZIU$COM* TSX2  ! X66_AALT

      116     2815    1   NO_DCB_FOR_TEMP: /* CANNOT GET A DCB FOR TEMP_FILE */
      117     2816    1       CALL ERROR_MSG(DBU#PAERROR3,COMMAND_TEXT);

   2816  4 000166   000023 630400 5     NO_DCB_FOR_* EPPR0   19
         4 000167   000006 631400 5                  EPPR1   6
         4 000170   000000 701000 xent               TSX1    ERROR_MSG
         4 000171   000000 011000                    NOP     0

      118     2817    1       UNWIND TO BREAK_CLEANUP;

   2817  4 000172   000100 100600                    MLR   ! fill='000'O
         4 000173   000000 000010 xsym               ADSC9   BREAK_CLEANUP            cn=0,n=8
         4 000174   200004 000010                    ADSC9   4,,AUTO                  cn=0,n=8
         4 000175   200004 237300                    LDAQ  ! 4,,AUTO
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:19   
         4 000176   000000 700200 xent               TSX0  ! X66_AUNWIND
         4 000177   000000 000200                    ZERO    0,128

SORT_TABLE
 Sect OctLoc
   0     000   000000 000000   000000 000000   000000 000000   040000 104040    ............ .D
   0     004   000000 006014   000000 006014   000000 006014   000000 006014    ................
   0     010   000000 006014   000000 006014   000000 000000   000001 000000    ................
   0     014   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     040*  000000 000000   000000 000000   000000 000000   000000 000000    ................

(unnamed)
 Sect OctLoc
   3     000   115044 120124   052120 117111   116124 105122   137120 101124    M$PT*POINTER_PAT
   3     004   103110 137106   111114 105040                                    CH_FILE

(unnamed)
 Sect OctLoc
   5     000   000001 000000   000234 006000   000003 777640   000004 006000    ................
   5     004   000001 600000   000000 000000   000002 000000   000000 006014    ................
   5     010   000000 000040   000010 006000   000007 600000   000004 400000    ... ............
   5     014   000005 400000   000000 000200   000015 006000   777777 777777    ................
   5     020   000005 200000   000000 006000   000000 021734   000022 006000    ................
   5     024   000000 006000                                                    ....
      119     2818        /*E* ERROR: ZIU-DBU#PAERROR3-C
      120     2819        MESSAGE: Error: Cannot get a DCB for the pointer-patch file
      121     2820                        used by this directive.  %U1 aborted. */
      122     2821    1   END ZIU$COMPACT;
      123     2822        %EOD;

PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:20   
--  Include file information  --

   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZL_MACRO_C.:TOOLE05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$COMPACT.

   Procedure ZIU$COMPACT requires 128 words for executable code.
   Procedure ZIU$COMPACT requires 6 words of local(AUTO) storage.
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:21   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:22   
          MINI XREF LISTING

ACSSF
       984**DCL      2771<<ASSIGN
ALT_ZIU$COMPACT
      2814**LABEL    2758--REMEMBR  2778--CALLALT  2808--CALLALT
ASNSF
       987**DCL      2772<<ASSIGN
BREAK_CLEANUP
      2754**DCL      2758<<REMEMBR  2817>>UNWIND
COMMAND_TEXT
      2753**DCL      2816<>CALL
COUNTSF
      1046**DCL      1047--REDEF
DBKEY_SORT_DCB
      2747**DCL      2764<<ASSIGN   2765>>ASSIGN   2770>>ASSIGN
DCBSF
       975**DCL      2770<<ASSIGN
DISPSF
       990**DCL      2774<<ASSIGN
ENCRP_SEEDSF
      1004**DCL      1005--REDEF
ERRCODESF
      1006**DCL      1011--REDEF
ERROR_MSG
      2743**DCL-ENT  2816--CALL
EXISTSF
      1025**DCL      2776<<ASSIGN
FIDSF
      1023**DCL      2769<<ASSIGN
FIDSF_RD
      1022**DCL      1023--REDEF
FIRST_TIME_CALLED
      2756**DCL      2760<<ASSIGN
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:23   
FUNSF
       986**DCL      2775<<ASSIGN
GET_DCB
      2741**DCL-ENT  2763--CALL
HELPCODE
      1040**DCL      1045--REDEF
ICHKSUM
      1105**DCL      1106--REDEF
I_O_BUF$
      1083**DCL      1084--IMP-PTR
KCNT
      1076**DCL      2784<<ASSIGN
KEYVSF
       978**DCL       983--REDEF
KEYVSF.WD_ONE
       980**DCL       981--REDEF
MAX_KEY_SIZE
      2745**DCL      2800>>ASSIGN
MSGCODE
      1012**DCL      1013--REDEF
NBUFS
      2755**DCL      2784>>ASSIGN   2786<<ASSIGN   2786>>ASSIGN   2786>>ASSIGN   2789<<ASSIGN   2789>>ASSIGN
NO_DCB_FOR_TEMP
      2816**LABEL    2763--CALLALT
ORGSF
       976**DCL      2773<<ASSIGN
RB
      1065**DCL      2795<<ASSIGN   2795>>ASSIGN   2797>>IF       2798<<ASSIGN   2799>>ASSIGN
REASGNSF
      1030**DCL      2777<<ASSIGN
REC$
      1064**DCL      1087--IMP-PTR
REC_CNT
      2746**DCL      2762<<ASSIGN
REC_DATA_LN
      1092**DCL      1091--IMP-SIZ
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:24   
SET_BUFS
      2740**DCL-ENT  2780--CALL     2783--CALL
SORT_TABLE
       688**DCL      2808<>CALL
SORT_TABLE.MEM#
       737**DCL      2799<<ASSIGN
SORT_TABLE.PRIMARY.INSIZ#
       696**DCL      2800<<ASSIGN
SORT_TABLE.SECONDARY.OCE$
       772**DCL      2803<<ASSIGN   2805<<ASSIGN
STK
      2748**DCL      2766--ASSIGN
SYS_FUNC_OPEN
      2742**DCL-ENT  2778--CALL
WRITE_TEMP.BUF_
      1665**DCL      2766<<ASSIGN
WRITE_TEMP.BUF_.BOUND
      1665**DCL      2767<<ASSIGN
WRITE_TEMP.STATION_
      1667**DCL      1667--REDEF
WRITE_TEMP.V.DCB#
      1668**DCL      2765<<ASSIGN
WRITE_TEMP.V.DVBYTE.VFC#
      1674**DCL      1674--REDEF
X$SORT
        17**DCL-ENT  2808--CALL
ZI$DIR.ALTKEY
      1339**DCL      1340--REDEF    1341--REDEF
ZI$DIR.AREAFID
      1305**DCL      1306--REDEF
ZI$DIR.AREA_NM
      1368**DCL      2763<>CALL
ZI$DIR.AREA_NM.DCB#
      1372**DCL      2764>>ASSIGN
ZI$DIR.AREA_NM.NAME.TEXT
      1371**DCL      2761<<ASSIGN
PL6.E3A0      #001=ZIU$COMPACT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:09 Page:25   
ZI$DIR.CODE
      1321**DCL      2781>>IF       2781>>IF       2785>>IF       2802>>IF
ZI$DIR.DATE
      1344**DCL      1348--REDEF
ZI$DIR.DEST_SEED
      1300**DCL      1301--REDEF    1302--REDEF
ZI$DIR.ENCP_SEED
      1297**DCL      1298--REDEF    1299--REDEF
ZI$DIR.REPRT_ZERO
      1331**DCL      1332--REDEF
ZI$DIR.SCHFID
      1303**DCL      1304--REDEF
ZI$DIR.TIME
      1349**DCL      1354--REDEF
ZIU$PA_CMPKEY
        22**DCL-ENT   774--DCLINIT
ZIU$PA_PACK
        19**DCL-ENT  2790--CALL
ZIU$PA_SORTIN
        18**DCL-ENT   770--DCLINIT
ZIU$PA_SORTOUT
        20**DCL-ENT  2805--ASSIGN
ZIU$SC_RESORT
        21**DCL-ENT  2803--ASSIGN
ZIU$SRTDCB
        23**DCL-ENT  2806--CALL

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:26   
      124        1        /*T***********************************************************/
      125        2        /*T*                                                         */
      126        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      127        4        /*T*                                                         */
      128        5        /*T***********************************************************/
      129        6        ZIU$PA_SORTIN: PROC(SORT_REC,SORTREC_SIZE) NOAUTO ALTRET;
      130        7
      131        8    1   DCL SORTREC_SIZE UBIN; /* WE WILL DETERMINE THE SIZE */
      132        9    1   DCL 1 SORT_REC CALIGNED,
      133       10    1         2 N_PTR UBIN UNAL,
      134       11    1         2 P_PTR UBIN UNAL,
      135       12    1         2 MEMBER_DBK UBIN UNAL,
      136       13    1         2 RC_PTR UBIN BYTE UNAL,
      137       14    1         2 AC_PTR UBIN BYTE UNAL,
      138       15    1         2 SC_PTR UBIN BYTE UNAL,
      139       16    1         2 O_PTR UBIN UNAL,
      140       17    1         2 KEY_LOC CHAR(KEY_LEN) UNAL;
      141       18    1   DCL 1 STK (0:1) SYMREF ALIGNED,
      142       19    1         2 NEXT SBIN ALIGNED,
      143       20    1         2 PRIOR SBIN ALIGNED,
      144       21    1         2 CURR SBIN ALIGNED,
      145       22    1         2 RC_PTR UBIN BYTE UNAL,
      146       23    1         2 AC_PTR UBIN BYTE UNAL;
      147       24    1   DCL ENTRY_LEN SBIN STATIC SYMDEF ALIGNED;
      148       25    1   DCL NO_OF_LEVELS SBIN STATIC SYMDEF ALIGNED;
      149       26    1   DCL LEVEL# SBIN STATIC SYMDEF ALIGNED;
      150       27
      151       28    1   DCL NBUFS SBIN SYMREF ALIGNED;
      152       29    1   DCL KEY_PTR2 SBIN STATIC ALIGNED;
      153       30    1   DCL CHAR_V CHAR(PTR_LEN) BASED CALIGNED;
      154       31
      155       32    1   DCL BREAK_CLEANUP BIT(72) STATIC SYMDEF ALIGNED;
      156       33    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      157       34    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      158       35    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      159       36    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
      160       37    1   DCL SYS_FUNC_CHECK ENTRY ALTRET;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:27   
      161       38    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      162       39
      163       40    1   DCL FLUSH_PAGES ENTRY;
      164       41    1   DCL GET_DCB ENTRY(1) ALTRET;
      165       42    1   DCL ZIU$DBAMP ENTRY;
      166       43    1   DCL PRFR SBIN WORD SYMREF ALIGNED; /*  SOURCE EIS  FOR ZIU$DBAMP */
      167       44    1   DCL PRFR2 SBIN WORD SYMREF ALIGNED; /* DEST EIS FOR ZIU$DBAMP */
      168       45    1   DCL REC2$ PTR SYMREF ALIGNED;
      169       46
      170       47        %INCLUDE ZI$PG_STRUCTS;
      171      150         %ATBLK_PG;
      172      206         %DATA_PG;
      173      225        %INCLUDE ZI_DBU_XREF;
      174      392         %XREF_TBLS;
      175      467         %PA_XREF_TBLS;
      176      533        %INCLUDE ZI_GLOBAL_DBUTIL;
      177      711         %SYS_FUNC;
      178      803         %MISC_DCLS;
      179      856         %PAREC(STCLASS=SYMREF);
      180      883        %INCLUDE ZI$DIR;
      181     1040         %DIR;
      182     1184        %INCLUDE ZI_PRSE_SUBS;
      183     1340        %INCLUDE CP_6;
      184     1421        %INCLUDE CP_6_SUBS;
      185     1961         %B$EXCFR;
      186     1979         %B$TCB;
      187     1982
      188     1983        %EQU LOCK_BUF = 2;
      189     1984        %EQU MUST_WRITE = 1;
      190     1985        %EQU DONT_LOCK = 0;
      191     1986        %EQU DONT_ERROR = -1;
      192     1987        %FPT_WRITE(FPTN=WRITE_TEMP,KEY=KEY,NEWKEY=YES,ONEWKEY=NO,VFC=NO,
      193     1988         STCLASS="STATIC SYMDEF");
      194     2019        %INCLUDE ZI_ERRORS_SUBS;
      195     2539
      196     2540    1   DCL CHKSUM ENTRY;
      197     2541    1   DCL READ_DB ENTRY(3) ALTRET;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:28   
      198     2542    1   DCL BIN_CHAR ENTRY(2);
      199     2543    1   DCL ERROR_MSG ENTRY(4);
      200     2544    1   DCL OPEN_AREA ENTRY ALTRET;
      201     2545
      202     2546    1   DCL PA_CLEANUP ENTRY ALTRET;
      203     2547    1   DCL FIND_DIRECT ENTRY(2);
      204     2548    1   DCL ERASE_PAREC ENTRY;
      205     2549    1   DCL STORE_AN_ENTRY ENTRY(1) ALTRET;
      206     2550    1   DCL PUSH_PAENTRY ENTRY(1);
      207     2551
      208     2552    1   DCL 1 LAST(0:1) STATIC ALIGNED, /* DOUBLE BUFFER CONTROL VARIABES */
      209     2553    1         2 AC_PTR SBIN BYTE UNAL,
      210     2554    1         2 PAGES_READ UBIN BYTE UNAL,
      211     2555    1         2 RB UBIN(27) UNAL,
      212     2556    1         2 PAGES_LEFT UBIN(27) UNAL;
      213     2557    1   DCL BUF_PTR SBIN WORD STATIC ALIGNED;
      214     2558    1   DCL Y SBIN WORD STATIC ALIGNED;
      215     2559    1   DCL LOW_INDX SBIN WORD STATIC SYMDEF ALIGNED; /* USED BY COMPACT */
      216     2560    1   DCL MUST_WRITE REDEF LOW_INDX SBIN ALIGNED; /* BY SORT INPUT PROC */
      217     2561    1   DCL HIGH_INDX SBIN STATIC SYMDEF ALIGNED; /* BY COMPACT */
      218     2562    1   DCL PAGE_MODIFIED REDEF HIGH_INDX SBIN ALIGNED; /* ELSE */
      219     2563    1   DCL OWNER_CNT SBIN WORD STATIC SYMDEF ALIGNED; /* BY COMPACT ONLY */
      220     2564    1   DCL LAST_BUF REDEF OWNER_CNT SBIN ALIGNED; /* AGAIN BY SORT INPUT PROC */
      221     2565    1   DCL CURR_LN SBIN STATIC SYMDEF ALIGNED;
      222     2566    1   DCL CURR_OWNER SBIN STATIC SYMDEF ALIGNED;
      223     2567    1   DCL CURR_DBK SBIN STATIC ALIGNED;
      224     2568    1   DCL DBKEY_SORT_DCB UBIN HALF SYMREF ALIGNED;
      225     2569    1   DCL PRIOR_DBK SBIN STATIC ALIGNED;
      226     2570    1   DCL NEXT_DBK SBIN STATIC ALIGNED;
      227     2571    1   DCL 1 KEY STATIC SYMDEF ALIGNED,
      228     2572    1         2 CNT UBIN BYTE UNAL INIT(5),
      229     2573    1         2 TXT UBIN WORD UNAL,
      230     2574    1         2 RC_PTR UBIN BYTE UNAL;
      231     2575    1   DCL REC_CNT SBIN WORD SYMREF ALIGNED;
      232     2576    1   DCL POOL_MAX SBIN WORD SYMREF ALIGNED;
      233     2577    1   DCL SWAP_PTR SBIN WORD SYMREF ALIGNED;
      234     2578    1   DCL 1 POOL(0:95) SYMREF ALIGNED,
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:29   
      235     2579    1         2 MUST_WRITE BIT(1) UNAL,
      236     2580    1         2 LOCKS UBIN(9) UNAL,
      237     2581    1         2 PAGE# UBIN(26) UNAL;
      238     2582    1   DCL COMMAND_TEXT CHAR(9) SYMREF ALIGNED;
      239     2583
      240     2584    1   DCL 1 CURR_LEVEL(0:31) STATIC SYMDEF ALIGNED, /* RES 32 LEVEL(HUGE) */
      241     2585    1         2 DBK UBIN WORD ALIGNED,
      242     2586    1         2 FIRST_PA UBIN WORD ALIGNED, /* DBK OF FIRST PA IN EACH LEVEL */
      243     2587    1         2 ENT_NO UBIN HALF UNAL,
      244     2588    1         2 BUF_PTR UBIN BYTE UNAL,
      245     2589    1         2 * UBIN BYTE UNAL,
      246     2590    1         2 REC$ PTR ALIGNED;
      247     2591
      248     2592
      249     2593    1   DCL OSTK$ PTR STATIC ALIGNED;
      250     2594    1   DCL PASTK$ PTR STATIC SYMDEF ALIGNED;
      251     2595    1   DCL OWNER_STK(0:0) UBIN BASED(OSTK$) ALIGNED;
      252     2596    1   DCL 1 PAENT_STK BASED CALIGNED,
      253     2597    1         2 PA_DBK UBIN CALIGNED,
      254     2598    1         2 ENT CHAR(ENTRY_LEN) CALIGNED;
      255     2599    1   DCL PAENT_STK_SIZE UBIN STATIC SYMDEF ALIGNED;
      256     2600        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:30   
      257     2601        /*
      258     2602              SUBR  GET_PTR - EXTRACT POINTERS FROM DATA_REC
      259     2603        */
      260     2604    1   GET_PTR: PROC(POINTER,EIS);
      261     2605
      262     2606    2   DCL POINTER UBIN WORD CALIGNED;
      263     2607    2   DCL 1 EIS ALIGNED,
      264     2608    2         2 * UBIN(3) UNAL,
      265     2609    2         2 OFST UBIN(17) UNAL,
      266     2610    2         2 * UBIN(4) UNAL,
      267     2611    2         2 SIZ UBIN(12) UNAL;
      268     2612    2   DCL PTR_TEMP SBIN STATIC ALIGNED;
      269     2613
      270     2614    2       REC2$=PINCRC(REC$,EIS.OFST);
      271     2615    2       PTR_LEN = EIS.SIZ; /* POINTER SIZE */
      272     2616
      273     2617    2   GET_PTR2: ENTRY(POINTER); /* ENTRY TO EXTRACT PRIOR AND OWNER PTRS */
      274     2618
      275     2619    2       POINTER=0; /* INIT THIS LOCATION */
      276     2620    2       PINCRC(ADDR(POINTER),4-PTR_LEN)->CHAR_V=REC2$->CHAR_V;
      277     2621         /* BASE_DBK=0 IF SET IS LOCAL, >0 IF NOT AND IS BASE_DBK OF CURR AC */
      278     2622    2       IF POINTER>0 THEN /* IF POINTER=0,IT IS UNCONNECTED */
      279     2623    2           POINTER = POINTER + BASE_DBK; /* OTHERWISE,ADJUST IT */
      280     2624    2       REC2$ = PINCRC(REC2$,PTR_LEN); /* POINTS TO PRIOR/OWNER PTRS */
      281     2625    2       RETURN;
      282     2626
      283     2627    2   STORE_PTR: ENTRY(POINTER,EIS);
      284     2628
      285     2629    2       REC2$=PINCRC(REC$,EIS.OFST);
      286     2630    2       PTR_LEN = EIS.SIZ;
      287     2631
      288     2632    2   STORE_PTR2: ENTRY(POINTER);
      289     2633
      290     2634    2       PTR_TEMP = POINTER - BASE_DBK; /* CONV TO LOCAL IF SET IS LOCAL */
      291     2635    2       REC2$->CHAR_V=PINCRC(ADDR(PTR_TEMP),4-PTR_LEN)->CHAR_V;
      292     2636    2       REC2$ = PINCRC(REC2$,PTR_LEN);
      293     2637    2   END GET_PTR;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:31   
      294     2638        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:32   
      295     2639        /*
      296     2640              SUBR  READ_NEXT_BLOCK  - READ A BLOCK OF PAGES WITH NO WAIT
      297     2641                    RETURN WITH AC_PTR AND DATA$ AND SET CURR_LN TO 0
      298     2642        */
      299     2643    1   READ_NEXT_BLOCK: PROC ALTRET;
      300     2644
      301     2645    2       AC_PTR = LAST.AC_PTR(BUF_PTR); /* AC THAT WAS READ LAST TIME */
      302     2646    2       RB = LAST.RB(BUF_PTR); /* STARTING PAGE # */
      303     2647    2       LAST.RB(BUF_PTR)=RB + LAST.PAGES_READ(BUF_PTR);
      304     2648    2       RE = LAST.RB(BUF_PTR) - 1;
      305     2649    2       CURR_LN = -1;
      306     2650    2       OUT_INDX = BUF_PTR * NBUFS;
      307     2651    2       DATA$ = ADDR(I_O_BUF(OUT_INDX));
      308     2652         /* NOW SWITCH BUF_PTR TO THE NEXT BUF */
      309     2653    2       LAST_BUF = BUF_PTR; /* AND REMBER IT(IT IS TO BE PROCESSED) */
      310     2654    2       BUF_PTR = 1 - BUF_PTR; /* NOTE: BUF_PTR IS EITHER 0 OR 1 */
      311     2655         /* BUF_PTR POINT TO THE BLOCK THAT JUST FINISHED PROCESSING */
      312     2656    2       PAGE_MODIFIED=0; /* RESET FLAG */
      313     2657    2       IF MUST_WRITE=1 THEN /* HAPPEN IF WE REBUILD PA INDICES */
      314     2658    3       DO;
      315     2659    3           MUST_WRITE=0; /* RESET FLAG */
      316     2660    3           DCBSF=AC_TBL.DCB#(LAST.AC_PTR(BUF_PTR));
      317     2661    3           BUFLNSF=4096*LAST.PAGES_READ(BUF_PTR);
      318     2662    3           KEYVSF.IDSKEY=LAST.RB(BUF_PTR)-LAST.PAGES_READ(BUF_PTR);
      319     2663    3           BUFSF=VECTOR(I_O_BUF(NBUFS-OUT_INDX));
      320     2664    3           KEYSF=%YES#;
      321     2665    3           WAITSF=%YES#;
      322     2666    3           FULLSF=%YES#;
      323     2667    3           KEYVSF.LEN=4;
      324     2668    3           AC_TBL.PAGE_WRITTEN(LAST.AC_PTR(BUF_PTR))='1'B;
      325     2669    3           CALL SYS_FUNC_WRIT ALTRET(ALT);
      326     2670    3           END; /* WE MAY HAVE ERASED A BOUNCH OF PA_REC */
      327     2671    2       IF FIRST_TIME_CALLED=2 THEN
      328     2672    2           ALTRETURN; /* ALL DONE */
      329     2673    2       LAST(BUF_PTR) = LAST(LAST_BUF); /* CARRY OLD INFO OVER */
      330     2674    2       IF AC_PTR >= 0 THEN /* NOT THE FIRST READ */
      331     2675    3       DO;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:33   
      332     2676    3           DCBSF = AC_TBL.DCB#(AC_PTR);
      333     2677    3           CALL SYS_FUNC_CHECK ALTRET(ALT); /* MAKE SURE LAST IO DONE */
      334     2678    3           END;
      335     2679
      336     2680    2       IF BREAK_FLAG>0 THEN
      337     2681    2           UNWIND TO BREAK_CLEANUP;
      338     2682
      339     2683    2       IF LAST.PAGES_LEFT(LAST_BUF)=0 THEN /* DONE READING A AREA */
      340     2684    3       DO;
      341     2685    3           X = LAST.AC_PTR(LAST_BUF)+1;
      342     2686    4           DO WHILE( X<=NO_AREAS AND AC_TBL.RANGE_HIGH(X)=0);
      343     2687    4               X = X + 1;
      344     2688    4               END;
      345     2689    3           IF X > NO_AREAS THEN
      346     2690    4           DO;
      347     2691    4               FIRST_TIME_CALLED=2;
      348     2692         /* MARK DONE READING DB,BUT 1 BLOCK TO PROCESS */
      349     2693    4               RETURN; /* SO NO MORE READING */
      350     2694    4               END;
      351     2695    3           LAST.AC_PTR(BUF_PTR)=X; /* NEXT READ THIS AREA */
      352     2696    3           LAST.PAGES_LEFT(BUF_PTR)=AC_TBL.RANGE_HIGH(X)-AC_TBL.RANGE_LOW(X)+1;
      353     2697    3           LAST.RB(BUF_PTR)=AC_TBL.RANGE_LOW(X);
      354     2698    3           END;
      355     2699    2       DCBSF = AC_TBL.DCB#(LAST.AC_PTR(BUF_PTR));
      356     2700
      357     2701    2       IF LAST.PAGES_LEFT(BUF_PTR) > NBUFS THEN
      358     2702    3       DO;
      359     2703    3           LAST.PAGES_READ(BUF_PTR)=NBUFS; /* READ A FULL BLOCK */
      360     2704    3           LAST.PAGES_LEFT(BUF_PTR)=LAST.PAGES_LEFT(BUF_PTR)-NBUFS;
      361     2705    3           END;
      362     2706    2       ELSE
      363     2707    3       DO;
      364     2708    3           LAST.PAGES_READ(BUF_PTR)=LAST.PAGES_LEFT(BUF_PTR);
      365     2709    3           LAST.PAGES_LEFT(BUF_PTR)=0;
      366     2710    3           END;
      367     2711    2       BUFLNSF = 4096 * LAST.PAGES_READ(BUF_PTR);
      368     2712    2       KEYSF = %YES#;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:34   
      369     2713    2       KEYVSF.LEN = 4;
      370     2714    2       KEYVSF.IDSKEY = LAST.RB(BUF_PTR);
      371     2715    2       FULLSF = %YES#;
      372     2716    2       WAITSF = %NO#; /* NO WAIT */
      373     2717    2       BUFSF = VECTOR(I_O_BUF(NBUFS-OUT_INDX));
      374     2718
      375     2719    2       CALL SYS_FUNC_READ ALTRET(ALT);
      376     2720
      377     2721    2       RETURN;
      378     2722    2   ALT: UNWIND TO BREAK_CLEANUP;
      379     2723    2   END READ_NEXT_BLOCK;
      380     2724        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:35   
      381     2725    1       IF FIRST_TIME_CALLED=0 THEN /* YES! */
      382     2726    2       DO;
      383     2727    2           FIRST_TIME_CALLED = 1; /* RESET SWITCH */
      384     2728    3           DO X=0 TO NO_SETS;
      385     2729    3               SC_TBL.COUNT(X)=0; /* INIT COUNTER BEFORE START */
      386     2730    3               END;
      387     2731    2           BUF_PTR = 1;
      388     2732    2           MUST_WRITE=0; /* MARK NO NEED TO WRITE LAST BLOCK,CAUSE NO SUCH */
      389     2733    2           LAST.AC_PTR(1) = -1;
      390     2734    2           LAST.PAGES_LEFT(1) = 0; /* MAKE A PSUDO READ PENDING */
      391     2735    2           CALL READ_NEXT_BLOCK ALTRET(ALL_DONE); /* INIT THE FIRST NO-WAIT READ */
      392     2736    2           CALL READ_NEXT_BLOCK; /* START NEXT READ */
      393     2737    2           GOTO GET_NEXT_LINE;
      394     2738    2           END;
      395     2739        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:36   
      396     2740    1   CHECK_REC_TYPE: /* IF RC_PTR > 0 THEN WE GOT A PA_MEM */
      397     2741    1       IF RC_PTR = 0 THEN /* THIS REC IS NOT WHAT WE WANT */
      398     2742    1           GOTO GET_NEXT_LINE;
      399     2743    1       IF RC_PTR > 0 THEN /* FOUND A MEMBER */
      400     2744    1           GOTO FIND_A_MEMBER;
      401     2745    1       GOTO ERASE_IT; /* FOUND A PA_REC TO BE ERASED */
      402     2746    1   GET_NEXT_LINE:
      403     2747    1       CURR_LN = CURR_LN + 1;
      404     2748    1       IF CURR_LN > DATA_PG.OFF_LN.SEC THEN
      405     2749    1           GOTO GET_NEXT_PAGE;
      406     2750    1       X = DATA_PG.ACT_DATA_18(2035-CURR_LN); /* X = OFFSET */
      407     2751    1       IF X<12 THEN /* NO RECORD THERE */
      408     2752    1           GOTO GET_NEXT_LINE;
      409     2753    1       REC$ = PINCRC(DATA$,12+X);
      410     2754    1       RC_PTR = TYPE.MSTRINDX(REC_FRMT.TYPE);
      411     2755    1       GOTO CHECK_REC_TYPE;
      412     2756    1   GET_NEXT_PAGE:
      413     2757    1       IF PAGE_MODIFIED=1 AND AC_TBL.CHECKSUM(AC_PTR) THEN
      414     2758    2       DO;
      415     2759    2           CALL CHKSUM;
      416     2760    2           DATA_PG.CHKSUM_WD=ICHKSUM;
      417     2761    2           END;
      418     2762    1       IF RB = RE THEN
      419     2763    1           CALL READ_NEXT_BLOCK ALTRET(ALL_DONE);
      420     2764    2       ELSE DO;
      421     2765    2           CURR_LN = -1;
      422     2766    2           RB = RB + 1;
      423     2767    2           DATA$ = PINCRW(DATA$,1024);
      424     2768    2           END;
      425     2769    1       PAGE_MODIFIED=0;
      426     2770    1       GOTO GET_NEXT_LINE;
      427     2771        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:37   
      428     2772    1   ERASE_IT: /* ERASE A PA_REC JUST FOUND */
      429     2773    1       SC_PTR=-1*RC_PTR-1; /* PASS SC_PTR FOR SET SUMMARY REPORT */
      430     2774    1       IF ZI$DIR.CODE=#CONVERT THEN /* THE SET TO BE CONVERTED */
      431     2775    2       DO; /* IS ALREADY IN PA FORMAT */
      432     2776    2           X=(RB-1)*AC_TBL.LPP(AC_PTR)+AC_TBL.BASE_DBK(AC_PTR)+CURR_LN+1;
      433     2777    2           CALL BIN_CHAR(1,X); /* CONVERT DBK TO CHAR */
      434     2778    2           CALL ERROR_MSG(DBU#PAERRLP,SC_TBL.NAME(SC_PTR));
      435     2779    2           GOTO UN_WIND; /* ABORT THE JOB */
      436     2780    2           END;
      437     2781    1       CALL ERASE_PAREC; /* PASS  DATA$,X, AND CURR_LN */
      438     2782    1       MUST_WRITE=1; /* LOCAL AND GLOBAL */
      439     2783    1       PAGE_MODIFIED=1; /* SET FLAG */
      440     2784    1       GOTO GET_NEXT_LINE;
      441     2785
      442     2786    1   ALL_DONE:
      443     2787    1       SORTREC_SIZE = 0;
      444     2788    1       CALL INIT_CNTL_VARIABLES ALTRET(ALT_OPEN); /* MOSTLY BUF CONTROL */
      445     2789    1       ALTRETURN; /* DONE WITH SORTIN PROCEDURE */
      446     2790        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:38   
      447     2791        /*E*  ERROR: ZIU-DBU#PAERRLP-C
      448     2792        MESSAGE: Error: The set "%U1" you want to convert to PA seems to be
      449     2793                        a PA set already because a *PA_REC for that set
      450     2794                        is found at DBK# %U2.  CONVERT aborted.
      451     2795                        Be careful on this directive, you must explicitly
      452     2796                        specify all the set names to be converted
      453     2797                        and exclude those sets already in PA mode. */
      454     2798
      455     2799        /*E*  ERROR: ZIU-DBU#PASUM9-C
      456     2800        MESSAGE:+
      457     2801                +  There were %U2 *PA_REC_%U1 erased before REBUILDing.
      458     2802                +     */
      459     2803        /*E*  ERROR: ZIU-DBU#PAPACH1-C
      460     2804        MESSAGE: The above I/O error occurs when writing a pointer-patch
      461     2805                 record for the tenant of the set "%U1" at DBK# %U2.
      462     2806                 The set may be broken. %U3 aborted. */
      463     2807        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:39   
      464     2808        /*
      465     2809              SUBR    INIT_CNTL_VARIABLES
      466     2810                      THE PATCH FILE IS A KEYED FILE WITH FIXED REC SIZE
      467     2811                      CONTAINING ONLY DBK,NEW_PTR,AC,RC OF SOME SET TENANTS
      468     2812        */
      469     2813    1   INIT_CNTL_VARIABLES: PROC ALTRET;
      470     2814
      471     2815    2       POOL_MAX= 0; /* BUF CONTROL VARIABLE */
      472     2816    2       SWAP_PTR = -1; /* BUF CONTROL VARIABLE */
      473     2817    2       CURR_OWNER = 0; /* AND INIT SOME OTHER COUNTERS */
      474     2818    3       DO SC_PTR=0 TO NO_SETS;
      475     2819    3           IF ZI$DIR.CODE=#REVERT THEN
      476     2820    3               SC_TBL.COUNT2(SC_PTR)=0;
      477     2821    3           X = SC_TBL.COUNT(SC_PTR); /* SEE IF ANY *PA_REC ERASED */
      478     2822    3           IF X~=0 THEN
      479     2823    4           DO;
      480     2824    4               SC_TBL.COUNT(SC_PTR)=0; /* RESET TO 0 */
      481     2825    4               CALL BIN_CHAR(1,X); /* CONVERT X TO CHAR */
      482     2826    4               IF ZI$DIR.CODE~=#COMPACT AND ZI$DIR.CODE~=#REVERT THEN
      483     2827    4                   CALL ERROR_MSG(DBU#PASUM9,SC_TBL.NAME(SC_PTR));
      484     2828    4               END;
      485     2829    3           END;
      486     2830    2   END INIT_CNTL_VARIABLES;
      487     2831        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:40   
      488     2832    1   FIND_A_MEMBER:
      489     2833        /*
      490     2834              NOW, A PA-MEMBER IS FOUND IN THE AREA.
      491     2835                   WE SHALL VERIFY ITS SIZE FIRST FOR SECURITY REASON
      492     2836              NOTE: THIS PA-MEMBER MAY BE A MEMBER FOR MORE THAN
      493     2837                    ONE POINTER  ARRAY SETS. IT IS REFLECTED IN THE LINKED LIST
      494     2838                    I.E. WHEN RC_TBL.NEXT FOR A REC IS NON-ZERO THEN THERE
      495     2839                    IS MORE THAN ONE RS(FOR PA) FOR THIS REC
      496     2840              SO WE WILL GET A RS AND RETRIEVE THE SORTED KEY TO MOVE
      497     2841                 TO SORT_REC.
      498     2842        */
      499     2843    1       SORT_REC.RC_PTR=RC_PTR;
      500     2844    1       SC_PTR = RC_TBL.SC_PTR(RC_PTR);
      501     2845    1       SORT_REC.SC_PTR=SC_PTR; /* PASS TO SORT */
      502     2846    1       SORT_REC.AC_PTR=AC_PTR;
      503     2847    1       IF SC_TBL.GLOBAL(SC_PTR)=0 THEN /* SET IS LOCAL */
      504     2848    1           BASE_DBK = AC_TBL.BASE_DBK(AC_PTR);
      505     2849    1       ELSE
      506     2850    1           BASE_DBK = 0; /* FOR GLOBAL SET DONT ADJUST POINTERS */
      507     2851         /* NOW EXTRACT THE NEXT,PRIOR AND OWNER PTRS FROM MEMBER */
      508     2852    1       CALL GET_PTR(SORT_REC.N_PTR,RC_TBL.NXPNT_EIS(RC_PTR));
      509     2853    1       IF ZI$DIR.CODE ~= #REBUILDPA THEN /* PRIOR PTR EXISTS */
      510     2854    1           CALL GET_PTR2(SORT_REC.P_PTR);
      511     2855    1       CALL GET_PTR2(SORT_REC.O_PTR); /* ALL GET OWNER POINTER */
      512     2856    1       IF ZI$DIR.CODE = #CONVERT THEN /* ZERO NEXT PTR */
      513     2857    1           SORT_REC.N_PTR=0; /* SO THAT ALL MEMBERS WILL BE UPDATED */
      514     2858    1       SORT_REC.MEMBER_DBK=(RB-1)*AC_TBL.LPP(AC_PTR)+
      515     2859    1          AC_TBL.BASE_DBK(AC_PTR)+CURR_LN+1;
      516     2860    1       IF SORT_REC.O_PTR = 0 THEN /* REC NOT CONNECTED */
      517     2861    2       DO;
      518     2862    2           IF SUBSTR(COMMAND_TEXT,0,4)='CONV' THEN
      519     2863    3           DO;
      520     2864    3               STK.NEXT(1)=0;
      521     2865    3               STK.PRIOR(1)=0;
      522     2866    3               KEY.TXT = SORT_REC.MEMBER_DBK;
      523     2867    3               KEY.RC_PTR = RC_PTR;
      524     2868    3               CALL M$WRITE(WRITE_TEMP) ALTRET(WRIT_ERR);
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:41   
      525     2869    3               REC_CNT=REC_CNT+1;
      526     2870    3               END; /* ALTHOUGH UNCONNECTED, WE HAVE TO CONVERT THE SIZE */
      527     2871    2           IF RC_TBL.MANUAL(RC_PTR)=0 THEN /* SM IS NOT MANUAL */
      528     2872    3           DO; /* GIVE A WARNING MSG AND SKIP THIS RS */
      529     2873    3               CALL BIN_CHAR(1,SORT_REC.MEMBER_DBK);
      530     2874    3               CALL ERROR_MSG(DBU#UNCMEM,SC_TBL.NAME(SC_PTR));
      531     2875    3               END;
      532     2876    2           RC_PTR = RC_TBL.RC_NEXT(RC_PTR);
      533     2877    2           GOTO CHECK_REC_TYPE;
      534     2878         /*E* ERROR: ZIU-DBU#UNCMEM-C
      535     2879                 MESSAGE: Warning: Unconnected member of non-manual set "%U1" at DBK# %U2
      536     2880                                  found and ignored. Run REPAIR package to have it fixed. */
      537     2881    2           END;
      538     2882
      539     2883        /*    NOW MOVE KEYS IN DATA RECORD TO SORT_REC   */
      540     2884
      541     2885    1       REC2$ = ADDR(SORT_REC.KEY_LOC); /* DESTINATION PTR */
      542     2886    1       KEY_PTR=RC_TBL.KEY_PTR(RC_PTR);
      543     2887    1       KEY_LEN = SC_TBL.PA_KEYSIZE(SC_PTR);
      544     2888    1       IF SC_TBL.SETYPE(SC_PTR)=0 THEN /* SET IS PA */
      545     2889    2       DO;
      546     2890    2           SORT_REC.KEY_LOC=' '; /* INIT WITH BLANKS */
      547     2891    2           KEY_PTR2 = SC_TBL.KEY_PTR(SC_PTR);
      548     2892    3           DO X=0 TO SC_TBL.NO_OF_KEYS(SC_PTR)-1;
      549     2893    3               PRFR = KEY_TBL.EIS(KEY_PTR);
      550     2894    3               PRFR2 = KEY_TBL.EIS(KEY_PTR2);
      551     2895    3               CALL ZIU$DBAMP; /* MOVE PA SORT KEYS FROM REC TO SORT_REC */
      552     2896    3               KEY_PTR=KEY_PTR+1;
      553     2897    3               KEY_PTR2=KEY_PTR2+1;
      554     2898    3               END;
      555     2899    2           END;
      556     2900    1       ELSE /* REGULAR SORTED SETS */
      557     2901    2       DO;
      558     2902    3           DO X=1 TO RC_TBL.NO_OF_KEYS(RC_PTR); /* EACH MEM HAS DIF #KEY */
      559     2903    3               PRFR = KEY_TBL.EIS(KEY_PTR);
      560     2904    3               PRFR2= KEY_TBL.EIS(KEY_PTR+1);
      561     2905    3               CALL ZIU$DBAMP;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:42   
      562     2906    3               KEY_PTR=KEY_PTR+2;
      563     2907    3               END;
      564     2908    2           END;
      565     2909
      566     2910    1       SORTREC_SIZE = LENGTHC(SORT_REC);
      567     2911    1       RC_PTR = RC_TBL.RC_NEXT(RC_PTR); /* GET NEXT RS */
      568     2912    1       RETURN; /* RETURN TO SORT */
      569     2913        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:43   
      570     2914    1   ZIU$PA_SORTOUT: ENTRY(SORT_REC,SORTREC_SIZE) ALTRET;
      571     2915
      572     2916    1       IF SORTREC_SIZE = 0 THEN /* ALL RECORDS PROCESSED */
      573     2917    2       DO;
      574     2918    2           IF CURR_OWNER > 0 THEN /* CLEAN UP LAST SC */
      575     2919    2               CALL PA_CLEANUP ALTRET(WRIT_ERR);
      576     2920    2           CALL FLUSH_PAGES; /* FLUSH ALL BUFFERS IN POOL */
      577     2921    2           GOTO COMMON_RETURN;
      578     2922    2           END;
      579     2923
      580     2924    1       IF CURR_OWNER ~= SORT_REC.O_PTR OR SC_PTR ~= SORT_REC.SC_PTR THEN
      581     2925    2       DO;
      582     2926    2           IF CURR_OWNER > 0 THEN /* SHALL CLEANUP LAST SC */
      583     2927    2               CALL PA_CLEANUP ALTRET(WRIT_ERR);
      584     2928    2           IF CURR_OWNER~=SORT_REC.O_PTR THEN /* OWNER CHANGED */
      585     2929    3           DO;
      586     2930    3               CURR_OWNER = SORT_REC.O_PTR; /* A NEW OWNER */
      587     2931    3               X=1; /* SEARCH FOR THE AC_PTR FOR THIS OWNER */
      588     2932    4               DO WHILE(CURR_OWNER>AC_TBL.BASE_DBK(X) AND X<=NO_AREAS);
      589     2933    4                   X=X+1;
      590     2934    4                   END;
      591     2935    3               IF X-1 ~= AC_PTR THEN
      592     2936    4               DO;
      593     2937    4                   CALL FLUSH_PAGES; /* AREA CHANGED */
      594     2938    4                   AC_PTR = X - 1; /* AC_PTR IS THE PROIR X */
      595     2939    4                   IF AC_TBL.DCB#(AC_PTR)=0 THEN
      596     2940    4                       CALL OPEN_AREA ALTRET(UN_WIND);
      597     2941    4                   END;
      598     2942    3               END;
      599     2943
      600     2944    2           SC_PTR = SORT_REC.SC_PTR; /* AND START WORK FROM THIS SC */
      601     2945    2           IF SC_TBL.GLOBAL(SC_PTR)=0 THEN /* SET IS LOCAL */
      602     2946    2               BASE_DBK = AC_TBL.BASE_DBK(AC_PTR);
      603     2947    2           ELSE
      604     2948    2               BASE_DBK = 0; /* FOR GLOBAL SET DONT ADJUST POINTERS */
      605     2949    2           RC_PTR = SC_TBL.RC_PTR(SC_PTR); /* PASS RC OF OWNER */
      606     2950    2           CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK); /* FIND OWNER FIRST */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:44   
      607     2951    2           IF PA_REC.TYPE~=RC_TBL.TYPE(RC_PTR) THEN
      608     2952    3           DO;
      609     2953    3               CALL BIN_CHAR(2,CURR_OWNER);
      610     2954    3               CALL ERROR_MSG(DBU#PABADOWNR,SC_TBL.NAME(SC_PTR),COMMAND_TEXT);
      611     2955    3               GOTO UN_WIND;
      612     2956    3               END;
      613     2957         /* LOAD NEXT PTR OF OWNER,LATER TO CHECK IF NEED UPDATED */
      614     2958    2           IF ZI$DIR.CODE=#CONVERT THEN
      615     2959    2               STK.NEXT(0)=0; /* WHEN CONVERTNG, OWNER MUST BE UPDATED */
      616     2960    2           ELSE
      617     2961    2               CALL GET_PTR(STK.NEXT(0),RC_TBL.NXPNT_EIS(RC_PTR));
      618     2962    2           KEY_LEN = SC_TBL.PA_KEYSIZE(SC_PTR); /* SETUP KEY_SIZE */
      619     2963    2           PTR_LEN = SC_TBL.PA_PTRSIZE(SC_PTR);
      620     2964    2           ENTRY_LEN=2+KEY_LEN+PTR_LEN;
      621     2965    2           NO_OF_LEVELS=-1; /* REBUILD PA ,SO START FROM SCRATCH */
      622     2966    2           LEVEL# = 0;
      623     2967    2           IF ZI$DIR.INSERT_DUMMY THEN /* FOR GCOS PURPOSE */
      624     2968    3           DO;
      625     2969    3               STK.CURR(1)=CURR_OWNER; /* DUMMY POINT TO OWNER */
      626     2970    3               STK.RC_PTR(1)=RC_PTR; /* PASS OWNER TYPE */
      627     2971    3               CALL STORE_AN_ENTRY ALTRET(WRIT_ERR); /* AND USE IT AS FIRST KEY */
      628     2972    3               END;
      629     2973    2           END;
      630     2974
      631     2975    1       STK(1)=SORT_REC; /* PASS MEMBER'S INFO TO STORE_AN_ENTRY */
      632     2976
      633     2977    1       CALL STORE_AN_ENTRY(SORT_REC.KEY_LOC) ALTRET(WRIT_ERR);
      634     2978
      635     2979    1       RETURN;
      636     2980
      637     2981    1   UN_WIND: UNWIND TO BREAK_CLEANUP;
      638     2982
      639     2983        /*E*  ERROR: ZIU-DBU#PABADOWNR-C
      640     2984        MESSAGE: Error: The type of the record at DBK# %U3 is not an owner
      641     2985                        for the set "%U1".  %U2 aborted.
      642     2986                        Broken set is suspected. Run REPAIR to have it fixed. */
      643     2987        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:45   
      644     2988        /*
      645     2989              ENTRY POINT IF COMMAND IS   COMPACT
      646     2990        */
      647     2991    1   ZIU$PA_PACK: ENTRY ALTRET;
      648     2992
      649     2993    1       CALL INIT_CNTL_VARIABLES ALTRET(ALT_OPEN); /* INIT BUF CONTROL */
      650     2994    1       OSTK$ = ADDR(I_O_BUF(2*NBUFS));
      651     2995         /*
      652     2996            I_O_BUF(0 UPTO 2*NBUFS) ARE USED BY BUFFER POOL
      653     2997            (2*NBUFS UPTO OWNER_CNT/1024+1) ARE USED TO SAVE ALL OWNER
      654     2998            (WHATEVER LEFT=2*KCNT-2*NBUFS) ARE USED TO SAVE PA ENTRIES
      655     2999         */
      656     3000    2       DO AC_PTR=0 TO NO_AREAS; /* FIRST LOOP, GO THRU AREAS */
      657     3001    2           IF AC_TBL.RANGE_HIGH(AC_PTR)>0 THEN /* OWNER IN AC */
      658     3002    3           DO;
      659     3003    3               RB=AC_TBL.RANGE_LOW(AC_PTR); /* STARTING PAGE # TO SEARCH */
      660     3004    4               DO WHILE(RB <= AC_TBL.RANGE_HIGH(AC_PTR));
      661     3005    4                   DCBSF=AC_TBL.DCB#(AC_PTR);
      662     3006    4                   OUT_INDX=AC_TBL.RANGE_HIGH(AC_PTR)-RB+1;
      663     3007    4                   IF OUT_INDX>2*NBUFS THEN /* READ 2*NBUFS PAGES AT A TIME */
      664     3008    4                       OUT_INDX=2*NBUFS;
      665     3009    4                   CALL READ_DB(0,RB,OUT_INDX) ALTRET(UN_WIND);
      666     3010    4                   OWNER_CNT=-1; /* PUSH ALL OWNER FOUND */
      667     3011    5                   DO X=0 TO OUT_INDX-1; /* LOOP THRU PAGES */
      668     3012    5                       DATA$=ADDR(I_O_BUF(X));
      669     3013    5                       POOL.PAGE#(X)=RB+X; /* UPDATE BUF CONTROL TABLE */
      670     3014    5                       POOL.LOCKS(X)=0;
      671     3015    5                       POOL.MUST_WRITE(X)='0'B;
      672     3016    6                       DO CURR_LN=0 TO DATA_PG.OFF_LN.SEC; /* LOOP THRU LINES */
      673     3017    6                           IF DATA_PG.ACT_DATA_18(2035-CURR_LN)>=12 THEN
      674     3018    7                           DO; /* FIND A RECORD, CHECK RECORD TYPE */
      675     3019    7                               REC$=PINCRC(DATA$,DATA_PG.OFFSET(2035-CURR_LN)+12);
      676     3020    7                               IF ZI$DIR.CODE=#REVERT AND KEY_PTR>=0 THEN
      677     3021    8                               DO Y=0 TO KEY_PTR;
      678     3022    8                                   RC_PTR=KEY_TBL.EIS(Y); /* ALL MANUAL RS */
      679     3023    8                                   IF RC_TBL.TYPE(RC_PTR)=PA_REC.TYPE THEN
      680     3024    9                                   DO;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:46   
      681     3025    9                                       CALL GET_PTR(STK.NEXT(1),RC_TBL.NXPNT_EIS(RC_PTR
              3025                                                ));
      682     3026    9                                       CALL GET_PTR2(STK.PRIOR(1));
      683     3027    9                                       IF STK.NEXT(1)=0 AND STK.PRIOR(1)=0 THEN
      684     3028   10                                       DO;
      685     3029   10                                           KEY.RC_PTR=RC_PTR;
      686     3030   10                                           KEY.TXT=(RB+X-1)*AC_TBL.LPP(AC_PTR)
      687     3031   10                                              +AC_TBL.BASE_DBK(AC_PTR)
      688     3032   10                                              +CURR_LN+1;
      689     3033   10                                           CALL M$WRITE(WRITE_TEMP) ALTRET(WRIT_ERR);
      690     3034   10                                           REC_CNT=REC_CNT+1;
      691     3035   10                                           END; /* PATCH RECORD FOR UNCONNECTED MEM */
      692     3036    9                                       END; /* CHK IF THIS IS MANUAL MEMBER */
      693     3037    8                                   END; /* IF ANY MANUAL MEMBER EXISTS */
      694     3038    7                               IF TYPE.MSTRINDX(PA_REC.TYPE) > 0 THEN
      695     3039    8                               DO;
      696     3040    8                                   OWNER_CNT=OWNER_CNT+1; /* FIND A OWNER */
      697     3041    8                                   OWNER_STK(OWNER_CNT)=(RB+X-1)*AC_TBL.LPP(AC_PTR)
      698     3042    8                                      +AC_TBL.BASE_DBK(AC_PTR)
      699     3043    8                                      +CURR_LN+1;
      700     3044    8                                   END;
      701     3045    7                               END;
      702     3046    6                           END;
      703     3047    5                       END;
      704     3048    4                   POOL_MAX = OUT_INDX;
      705     3049    4                   PASTK$ = PINCRW(OSTK$,OWNER_CNT+1);
      706     3050    5                   DO Y=0 TO OWNER_CNT; /* PROCESS EACH OWNER FOUND */
      707     3051    5                       CURR_OWNER=OWNER_STK(Y); /* OWNER'S DBK */
      708     3052
      709     3053    5                       IF ZI$DIR.CODE=#COMPACT THEN
      710     3054    5                           CALL COMPACT_AN_OWNER ALTRET(WRIT_ERR);
      711     3055         /* WRIT PATCH FILE */
      712     3056    5                       ELSE
      713     3057    5                           CALL REVERT_AN_OWNER ALTRET(WRIT_ERR);
      714     3058
      715     3059    5                       END;
      716     3060    4                   RB = RB+OUT_INDX; /* READ NEXT BLOCK IF ANY */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:47   
      717     3061    4                   IF OWNER_CNT > 0 THEN /* IF ANY OWNER FOUND IN LAST BLOCK */
      718     3062    4                       CALL FLUSH_PAGES; /* MAY HAVE UPDATED SOME BUF */
      719     3063    4                   END; /* DO WHILE END ALL PAGE IN AREA READ */
      720     3064    3               END;
      721     3065    2           END; /* AREA LOOP DONE */
      722     3066
      723     3067    1   COMMON_RETURN: /* ALL GO THRU HERE TO RETURN TO ZIU$COMPACT */
      724     3068
      725     3069    1       IF REC_CNT > 0 THEN /* PATCH FILE EXISTS */
      726     3070    2       DO;
      727     3071    2           DCBSF = DBKEY_SORT_DCB;
      728     3072    2           CALL SYS_FUNC_CLOS ALTRET(ALT_CLOS);
      729     3073    2           END;
      730     3074    1       RETURN;
      731     3075        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:48   
      732     3076        /*
      733     3077              SUBR   COMPACT_A_OWNER  -  GO THRU ALL SC WHERE CURR OWNER
      734     3078                                         IS A OWNER RECORD.
      735     3079                                         FIND FIRST_PA IN LOWEST LEVEL
      736     3080                                         PUSH ALL ENTIES TO STACK THEN START
      737     3081                                         PLUG BACK IN
      738     3082        */
      739     3083    1   COMPACT_AN_OWNER: PROC ALTRET;
      740     3084
      741     3085    2       CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK); /* FIND OWNER */
      742     3086    2       RC_PTR=TYPE.MSTRINDX(PA_REC.TYPE); /* GET RO FOR OWNER */
      743     3087    3       DO WHILE(RC_PTR > 0); /* LOOP THRU ALL SC */
      744     3088    3           SC_PTR = RC_TBL.SC_PTR(RC_PTR);
      745     3089    3           IF SC_TBL.GLOBAL(SC_PTR)=0 THEN /* SET IS LOCAL */
      746     3090    3               BASE_DBK = AC_TBL.BASE_DBK(AC_PTR);
      747     3091    3           ELSE
      748     3092    3               BASE_DBK = 0; /* FOR GLOBAL SET DONT ADJUST POINTERS */
      749     3093    3           CALL FIND_FIRST_PA(%LOCK_BUF) ALTRET(SET_EMPTY);
              3093                    /* GET 1ST PA IN LOWEST LEVEL */
      750     3094    3           KEY_LEN = SC_TBL.PA_KEYSIZE(SC_PTR);
      751     3095    3           ENTRY_LEN = KEY_LEN+PTR_LEN+2;
      752     3096    3           PAENT_STK_SIZE=(4096*(KCNT-NBUFS)*2- /* TOTAL SPARE BUF BYTES */
      753     3097    3              (OWNER_CNT+1)*4)/(ENTRY_LEN+4)-1;
      754     3098         /* LESS OWNER STK SIZE */
      755     3099    3           LOW_INDX=0; /* REINIT THE BOTTOM OF STACK */
      756     3100    3           HIGH_INDX=0; /* AND THE TOP OF STACK */
      757     3101    3           CALL PUSH_PAENTRY(NEXT_DBK); /* PASS THE DBK OF PA */
      758     3102
      759     3103    3           REC2$=PINCRC(PASTK$,6); /* FIRST POINTER LOC IN STACK */
      760     3104    3           CALL GET_PTR2(X); /* LOAD INTO X */
      761     3105    3           IF ZI$DIR.INSERT_DUMMY='0'B AND X=CURR_OWNER THEN
      762     3106    3               LOW_INDX = 1; /* SKIP STORING DUMMY */
      763     3107    3           ELSE
      764     3108    3               IF ZI$DIR.INSERT_DUMMY AND X~=CURR_OWNER THEN
      765     3109    4               DO;
      766     3110    4                   STK.CURR(1) = CURR_OWNER;
      767     3111    4                   STK.RC_PTR(1) = RC_PTR; /* PASS OWNER'S RC FOR THAT ENTRY */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:49   
      768     3112    4                   STK.NEXT(1) = NEXT_DBK; /* THE PA_REC CONTAINING THIS PTR */
      769     3113    4                   CALL STORE_AN_ENTRY ALTRET(WRIT_ERR);
      770     3114    4                   END; /* DUMMY STORED IF WANTED */
      771     3115
      772     3116    3           FIRST_TIME_CALLED=2;
      773     3117    4           DO WHILE(FIRST_TIME_CALLED>0); /* UNTIL ALL ENTRIES RESTORED */
      774     3118    4               IF LOW_INDX ~= HIGH_INDX THEN
      775     3119    5               DO; /* STACK NOT EMPTY */
      776     3120    5                   REC2$=PINCRC(PASTK$,LOW_INDX*(4+ENTRY_LEN)+4);
      777     3121    5                   PRFR = REC2$->PA_ENTRY.TYPE; /* TYPE OF MEMBER POINTED BY */
      778     3122    5                   STK.NEXT(1)=PINCRC(REC2$,-4)->PAENT_STK.PA_DBK;
      779     3123    5                   REC2$ = PINCRC(REC2$,2); /* POINT TO ENTRY.PTR */
      780     3124    5                   CALL GET_PTR2(STK.CURR(1)); /* LOAD IT INTO STK.CURR */
      781     3125         /* NOW SEARCH THE RC AND THE AC FOR THE MEMBER
      782     3126            THAT IS POINTER BY THE PA_ENTRY */
      783     3127    5                   STK.RC_PTR(1)=SC_TBL.RC_PTR(SC_PTR)+1; /* FIRST SM */
      784     3128    5                   X = 0; /* COUNTER */
      785     3129    6                   DO WHILE(X<SC_TBL.NO_OF_SM(SC_PTR) AND
      786     3130    6                      RC_TBL.TYPE(STK.RC_PTR(1))~=PRFR);
      787     3131    6                       X=X+1;
      788     3132    6                       STK.RC_PTR(1)=STK.RC_PTR(1)+1;
      789     3133    6                       END;
      790     3134    5                   IF X>=SC_TBL.NO_OF_SM(SC_PTR) THEN
      791     3135    6                   DO;
      792     3136    6                       IF LOW_INDX=0 AND STK.CURR(1)=CURR_OWNER THEN
      793     3137    6                           STK.RC_PTR(1)=SC_TBL.RC_PTR(SC_PTR); /* MUST BE DUMMY */
      794     3138    6                       ELSE
      795     3139    7                       DO;
      796     3140    7                           CALL BIN_CHAR(1,STK.NEXT(1));
      797     3141    7                           CALL ERROR_MSG(DBU#PATYPER1,SC_TBL.NAME(SC_PTR));
      798     3142    7                           UNWIND TO BREAK_CLEANUP;
      799     3143    7                           END;
      800     3144    6                       END;
      801     3145    5                   CALL STORE_AN_ENTRY(REC2$->CHAR_V) ALTRET(WRIT_ERR);
      802     3146         /* PASS KEY IN PASTK */
      803     3147    5                   LOW_INDX = MOD(LOW_INDX+1,PAENT_STK_SIZE);
      804     3148    5                   END;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:50   
      805     3149    4               ELSE
      806     3150    5               DO; /* STK IS EMPTY */
      807     3151    5                   IF HIGH_INDX=0 THEN
      808     3152    5                       X=PAENT_STK_SIZE-1; /* GET LAST ENTRY INDX */
      809     3153    5                   ELSE
      810     3154    5                       X=HIGH_INDX-1;
      811     3155    5                   NEXT_DBK=PINCRC(PASTK$,X*(4+ENTRY_LEN))->PAENT_STK.PA_DBK;
      812     3156    5                   CALL FIND_DIRECT(NEXT_DBK,%DONT_LOCK); /* GET IT */
      813     3157    6                   DO WHILE(LOW_INDX=HIGH_INDX AND FIRST_TIME_CALLED>0);
      814     3158    6                       REC2$ = PINCRC(REC$,8); /* LOC OF NEXT PTR IN PA */
      815     3159    6                       CALL GET_PTR2(NEXT_DBK); /* LOAD IT */
      816     3160    6                       IF NEXT_DBK=CURR_LEVEL.FIRST_PA(NO_OF_LEVELS) OR
      817     3161    6                          NO_OF_LEVELS=0 OR /* ONLY 1 PA EXIST */
      818     3162    6                          FIRST_TIME_CALLED=1 THEN /* ALL LOWEST PA PUSHED */
      819     3163    6                           FIRST_TIME_CALLED=0; /* ALL ENTRIES STORED */
      820     3164    6                       ELSE
      821     3165    7                       DO;
      822     3166    7                           CALL FIND_DIRECT(NEXT_DBK,%MUST_WRITE); /* FIND NEXT */
      823     3167    7                           CALL PUSH_PAENTRY(NEXT_DBK); /* AND PUSH TO STK */
      824     3168    7                           END;
      825     3169    6                       END;
      826     3170    5                   END;
      827     3171    4               END;
      828     3172    3           CALL PA_CLEANUP ALTRET(WRIT_ERR); /* DONE WITH A SC */
      829     3173    3   SET_EMPTY:
      830     3174    3           RC_PTR=RC_TBL.RC_NEXT(RC_PTR);
      831     3175    3           IF RC_PTR>0 THEN
      832     3176    3               CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK);
      833     3177    3           END;
      834     3178    2       RETURN; /* ALL SC THRU A OWNER COMPACTED */
      835     3179
      836     3180    2   WRIT_ERR: ALTRETURN; /* ONLY HAPPEN ON IO ERROR WRITING PATCH FILE */
      837     3181
      838     3182        /*E*  ERROR: ZIU-DBU#PATYPER1-C
      839     3183        MESSAGE: Error: One of the entries in *PA_REC_%U1 at DBK# %U2
      840     3184                        has a non-member's TYPE. COMPACT/CONV_TO_CHAIN aborted.
      841     3185                        Run REBUILD PA utility to reconstruct this set. */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:51   
      842     3186    2   END COMPACT_AN_OWNER;
      843     3187        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:52   
      844     3188        /*
      845     3189              SUBR  CALLED BY  REVERT
      846     3190                    REVERT EXTRACTS EACH POINTER FROM LOWEST LEVEL OF PA
      847     3191                    THEN CALL THIS ROUTINE TO WRITE A PATCH RECORD
      848     3192                    FOR IT
      849     3193        */
      850     3194    1   WRITE_PATCH_RECORD: PROC ALTRET;
      851     3195
      852     3196    2       IF PRIOR_DBK=CURR_OWNER THEN /* 1ST POINTER IN LOWEST PA */
      853     3197    2           STK.NEXT(0)=CURR_DBK; /* THIS PTR IS THE NEXT PTR OF OWNER */
      854     3198    2       ELSE
      855     3199         /* NOTE: IF DUMMY EXISTS THEN CURR_DBK=CURR_OWNER,SO WILL BE SKIPPED */
      856     3200    3       DO;
      857     3201         /* SEARCH AC AND RC FOR THE MEMBER POINTED BY */
      858     3202    3           KEY.RC_PTR=SC_TBL.RC_PTR(SC_PTR)+1;
      859     3203    3           X = 0;
      860     3204    4           DO WHILE(X<SC_TBL.NO_OF_SM(SC_PTR) AND
      861     3205    4              RC_TBL.TYPE(KEY.RC_PTR)~=STK.CURR(0));
      862     3206    4               X = X + 1;
      863     3207    4               KEY.RC_PTR = KEY.RC_PTR + 1;
      864     3208    4               END;
      865     3209    3           IF X>=SC_TBL.NO_OF_SM(SC_PTR) THEN
      866     3210    4           DO;
      867     3211    4               CALL BIN_CHAR(1,NEXT_DBK); /* ERROR IN PAREC AT NEXT_DBK */
      868     3212    4               CALL ERROR_MSG(DBU#PATYPER1,SC_TBL.NAME(SC_PTR));
      869     3213    4               UNWIND TO BREAK_CLEANUP;
      870     3214    4               END;
      871     3215    3           STK.CURR(1)=PRIOR_DBK;
      872     3216    3           STK.PRIOR(1)=STK.PRIOR(0);
      873     3217    3           STK.NEXT(1)=CURR_DBK;
      874     3218    3           KEY.TXT=PRIOR_DBK;
      875     3219    3           CALL M$WRITE(WRITE_TEMP) ALTRET(ALT);
      876     3220    3           REC_CNT=REC_CNT+1;
      877     3221    3           SC_TBL.COUNT2(SC_PTR)=SC_TBL.COUNT2(SC_PTR)+1;
      878     3222    3           END;
      879     3223         /* PUSH CURR INFO TO PRIOR */
      880     3224    2       STK.PRIOR(0)=PRIOR_DBK;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:53   
      881     3225    2       PRIOR_DBK = CURR_DBK;
      882     3226    2       STK.CURR(0)=PA_ENTRY.TYPE;
      883     3227    2       RETURN;
      884     3228    2   ALT: ALTRETURN;
      885     3229    2   END WRITE_PATCH_RECORD;
      886     3230        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:54   
      887     3231        /*
      888     3232              SUBR    REVERT_AN_OWNER - GO THRU ALL SC
      889     3233                                        FIND FIRST PA IN LOWEST LEVEL
      890     3234                                        GO THRU ALL POINTERS IN LOWEST LEVEL
      891     3235        */
      892     3236    1   REVERT_AN_OWNER: PROC ALTRET;
      893     3237
      894     3238
      895     3239    2       CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK); /* FIND OWNER */
      896     3240    2       RC_PTR=TYPE.MSTRINDX(PA_REC.TYPE); /* GET RECORD TYPE */
      897     3241    3       DO WHILE(RC_PTR>0); /* LOOP THRU SC */
      898     3242    3           SC_PTR = RC_TBL.SC_PTR(RC_PTR);
      899     3243    3           IF SC_TBL.GLOBAL(SC_PTR)=0 THEN /* SET IS LOCAL */
      900     3244    3               BASE_DBK = AC_TBL.BASE_DBK(AC_PTR);
      901     3245    3           ELSE
      902     3246    3               BASE_DBK = 0; /* FOR GLOBAL SET DONT ADJUST POINTERS */
      903     3247    3           CALL FIND_FIRST_PA(%MUST_WRITE) ALTRET(SET_EMPTY);
              3247                    /* GET 1ST PA IN LOWEST */
      904     3248    3           ENTRY_LEN=2+PTR_LEN+SC_TBL.PA_KEYSIZE(SC_PTR);
      905     3249    3           PRIOR_DBK = CURR_OWNER;
      906     3250    4           DO WHILE('1'B); /* LOOP THRU ALL LOWEST PA REC */
      907     3251    4               IF BREAK_FLAG>0 THEN /* BREAK HIT */
      908     3252    4                   UNWIND TO BREAK_CLEANUP;
      909     3253    4               ENTRY$=PINCRC(REC$,8+3*PTR_LEN); /* FIRST ENTRY */
      910     3254    5               DO LOW_INDX=1 TO PA_REC.ENTRIES;
      911     3255    5                   REC2$ = PINCRC(ENTRY$,2);
      912     3256    5                   CURR_DBK = 0;
      913     3257    5                   PINCRC(ADDR(CURR_DBK),4-PTR_LEN)->CHAR_V=PA_ENTRY.PTRS;
      914     3258    5                   IF PA_ENTRY.C=0 THEN /* UNIQUE ENTRY */
      915     3259    6                   DO;
      916     3260    6                       CURR_DBK = CURR_DBK + BASE_DBK; /* TO LOCAL IF LOCALSC */
      917     3261    6                       CALL WRITE_PATCH_RECORD ALTRET(WRIT_ERR);
      918     3262    6                       END;
      919     3263    5                   ELSE
      920     3264    6                   DO; /* POINTER GROUP PRESENT */
      921     3265    6                       GROUP$=PINCRC(REC$,CURR_DBK);
      922     3266    6                       HIGH_INDX = PA_GROUP.NO_GROUPS;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:55   
      923     3267    6                       REC2$=PINCRC(GROUP$,2); /* SKIP PTR GROUP COUNT */
      924     3268    7                       DO WHILE(HIGH_INDX>0); /* LOOP THRU POINTER GROUP */
      925     3269    7                           PA_ENTRY.TYPE=PINCRC(REC2$,-2)->PA_GROUP.TYPE;
      926     3270    7                           REC2$=PINCRC(REC2$,2);
      927     3271    7                           CALL GET_PTR2(CURR_DBK);
      928     3272    7                           CALL WRITE_PATCH_RECORD ALTRET(WRIT_ERR);
      929     3273    7                           HIGH_INDX = HIGH_INDX - 1;
      930     3274    7                           END;
      931     3275    6                       END;
      932     3276    5                   ENTRY$=PINCRC(ENTRY$,ENTRY_LEN);
      933     3277    5                   END;
      934     3278    4               REC2$=PINCRC(REC$,8);
      935     3279    4               CALL GET_PTR2(NEXT_DBK); /* GET NEXT PTR OF THE PA_REC */
      936     3280    4               IF NEXT_DBK=CURR_LEVEL.FIRST_PA(NO_OF_LEVELS) OR
      937     3281    4                  NO_OF_LEVELS=0 THEN /* OR ONLY ONE PA THERE */
      938     3282    4                   GOTO ALL_PTR_EXTRACTED;
      939     3283    4               CALL FIND_DIRECT(NEXT_DBK,%DONT_LOCK);
      940     3284    4               END;
      941     3285        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:56   
      942     3286
      943     3287    3   ALL_PTR_EXTRACTED: /* WRITE PATCH RECORD FOR OWNER AND ERASE PA */
      944     3288    3           CALL FIND_DIRECT(CURR_OWNER,%MUST_WRITE);
      945     3289    3           CALL STORE_PTR(STK.NEXT(0),RC_TBL.NXPNT_EIS(RC_PTR));
      946     3290    3           CALL STORE_PTR2(CURR_DBK);
      947     3291    3           CURR_DBK=CURR_OWNER; /* DONT FORGET ONE RECORD LEFT IN STK */
      948     3292    3           CALL WRITE_PATCH_RECORD; /* DO CLEANUP */
      949     3293         /* NOW ERASE ALL PA_REC FROM CURR OF OWNER */
      950     3294    4           DO LEVEL#=0 TO NO_OF_LEVELS;
      951     3295    4               CALL FIND_DIRECT(CURR_LEVEL.FIRST_PA(LEVEL#),%MUST_WRITE);
      952     3296    4               REC2$=PINCRC(REC$,8);
      953     3297    4               CALL GET_PTR2(NEXT_DBK); /* LOAD NEXT PTR */
      954     3298    4               CALL ERASE_PAREC;
      955     3299    4               IF LEVEL#>0 THEN /* NOT HIGHEST LEVEL */
      956     3300    5               DO WHILE (NEXT_DBK~=CURR_LEVEL.FIRST_PA(LEVEL#));
      957     3301    5                   CALL FIND_DIRECT(NEXT_DBK,%MUST_WRITE);
      958     3302    5                   REC2$=PINCRC(REC$,8);
      959     3303    5                   CALL GET_PTR2(NEXT_DBK);
      960     3304    5                   CALL ERASE_PAREC;
      961     3305    5                   END;
      962     3306    4               END;
      963     3307    3   SET_EMPTY:
      964     3308    3           RC_PTR=RC_TBL.RC_NEXT(RC_PTR);
      965     3309    3           IF RC_PTR>0 THEN
      966     3310    3               CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK);
      967     3311    3           END;
      968     3312    2       RETURN;
      969     3313    2   WRIT_ERR: ALTRETURN;
      970     3314    2   END REVERT_AN_OWNER;
      971     3315        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:57   
      972     3316        /*
      973     3317              SUBR  FIND_FIRST_PA:  GO THRU PA INDEX STRUCTURE
      974     3318                                    UNTIL LOWEST_LEVEL_PA HIT
      975     3319                                    IF DIRECTIVE IS 'CONVERT' THEN
      976     3320                                      WE WILL CREATE ONE FOR IT
      977     3321        */
      978     3322    1   FIND_FIRST_PA: PROC(FIND_TYPE) ALTRET;
      979     3323
      980     3324    2   DCL FIND_TYPE SBIN ALIGNED;
      981     3325
      982     3326    2       CALL GET_PTR(NEXT_DBK,RC_TBL.NXPNT_EIS(RC_PTR));
      983     3327    2       IF NEXT_DBK=CURR_OWNER THEN /* SET EMPTY, DO ALTRETURN */
      984     3328    2           ALTRETURN;
      985     3329    2       CURR_LEVEL(0)='0'B;
      986     3330    2       CURR_LEVEL.DBK(0)=NEXT_DBK;
      987     3331    2       CURR_LEVEL.FIRST_PA(0)=NEXT_DBK; /* SAVE DBK OF FIRST_PA_IN_LEVEL */
      988     3332    2       STK.NEXT(0)=NEXT_DBK; /* SAVE THE NEXT PTR OF OWNER */
      989     3333    2       LEVEL#=0;
      990     3334    2       CALL FIND_DIRECT(NEXT_DBK,FIND_TYPE);
      991     3335    2       CURR_LEVEL.REC$(0)=REC$;
      992     3336    3       DO WHILE(PA_REC.NOT_LOWEST_LEVEL);
      993     3337    3           PA_REC.FIRST_IN_LEVEL = '1'B; /* SET IT IN CASE NOT */
      994     3338    3           IF LEVEL#>=31 THEN /* GOING INTO 33 LEVELS */
      995     3339    4           DO; /* THIS IS JUST IMPOSIBLE TO HAVE THAT MANY LEVELS */
      996     3340    4               CALL BIN_CHAR(2,CURR_OWNER); /* MOST LIKELY, A BUG */
      997     3341    4               CALL ERROR_MSG(DBU#PALEV33,SC_TBL.NAME(SC_PTR),COMMAND_TEXT);
      998     3342    4               UNWIND TO BREAK_CLEANUP;
      999     3343    4               END;
     1000     3344    3           ENTRY$=PINCRC(REC$,2*4+3*PTR_LEN); /* POINT TO FIRST ENTRY */
     1001     3345    3           NEXT_DBK=0;
     1002     3346    3           PINCRC(ADDR(NEXT_DBK),4-PTR_LEN)->CHAR_V=PA_ENTRY.PTRS;
     1003     3347    3           IF PA_ENTRY.C=1 THEN /* PTR GROUP PRESENT */
     1004     3348    4           DO;
     1005     3349    4               GROUP$=PINCRC(REC$,NEXT_DBK); /* POINT TO PA_GROUP NOW */
     1006     3350    4               PINCRC(ADDR(NEXT_DBK),4-PTR_LEN)->CHAR_V=PA_GROUP.PTRS;
     1007     3351    4               END;
     1008     3352    3           NEXT_DBK = NEXT_DBK + BASE_DBK; /* ADJUST TO LOCAL IF LOCAL SC */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:58   
     1009     3353    3           LEVEL# = LEVEL# + 1;
     1010     3354    3           CURR_LEVEL(LEVEL#)='0'B;
     1011     3355    3           CURR_LEVEL.DBK(LEVEL#)=NEXT_DBK;
     1012     3356    3           CURR_LEVEL.FIRST_PA(LEVEL#)=NEXT_DBK; /* SAVE DBK OF FIRST ONE */
     1013     3357    3           CALL FIND_DIRECT(NEXT_DBK,FIND_TYPE);
     1014     3358    3           CURR_LEVEL.REC$(LEVEL#)=REC$;
     1015     3359    3           PA_REC.FIRST_IN_LEVEL = '1'B; /* IN CASE IT IS NOT SET */
     1016     3360    3           END;
     1017     3361    2       NO_OF_LEVELS = LEVEL#;
     1018     3362    2       LEVEL# = LEVEL# + 1;
     1019     3363
     1020     3364    2   END FIND_FIRST_PA;
     1021     3365        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:59   
     1022     3366        /*
     1023     3367              2ND SORT OUTPUT PROCESSING  ZIU$SC_RESORT
     1024     3368              WHEN DIRECTIVE IS TO RESORT A SORT SET
     1025     3369        */
     1026     3370    1   ZIU$SC_RESORT: ENTRY(SORT_REC,SORTREC_SIZE) ALTRET;
     1027     3371
     1028     3372    1       IF SORTREC_SIZE > 0 THEN
     1029     3373    2       DO;
     1030     3374    2           CURR_DBK = SORT_REC.MEMBER_DBK;
     1031     3375    2           IF CURR_OWNER = 0 THEN /* FIRST TIME CALLED */
     1032     3376    3           DO;
     1033     3377    3               CURR_OWNER = SORT_REC.O_PTR;
     1034     3378    3               SC_PTR = SORT_REC.SC_PTR;
     1035     3379    3               STK.CURR(0) = CURR_OWNER;
     1036     3380    3               IF SORT_REC.P_PTR ~= CURR_OWNER THEN
     1037     3381    3                   NEXT_DBK=SORT_REC.MEMBER_DBK;
     1038     3382         /* FLAG OWNER NEEDS TO BE UPDATED */
     1039     3383    3               ELSE
     1040     3384    3                   NEXT_DBK=-1*SORT_REC.MEMBER_DBK;/* JUST REMEMBER IT */
     1041     3385    3               END;
     1042     3386    2           ELSE
     1043     3387    3           DO; /* NOT THE FIRST TIME ENTERED */
     1044     3388    3               IF BREAK_FLAG>0 THEN
     1045     3389    3                   UNWIND TO BREAK_CLEANUP; /* NO BETTER PLACE TO CHECK */
     1046     3390    3               IF CURR_OWNER=SORT_REC.O_PTR AND SC_PTR=SORT_REC.SC_PTR THEN
     1047     3391    4               DO; /* STILL PROCESSING THE SAME CHAIN SAME CIRCLE */
     1048     3392    4                   IF STK.PRIOR(1)~=STK.CURR(0) OR STK.NEXT(1)~=SORT_REC.MEMBER_DBK
     1049     3393    4                   THEN
     1050     3394    4                       CALL MEMBER_TO_BE_UPDATED ALTRET(WRIT_ERR);
     1051     3395    4                   STK(0) = STK(1); /* ROLL THE STK INFO UP */
     1052     3396    4                   END;
     1053     3397    3               ELSE
     1054     3398    4               DO;
     1055     3399    4                   CALL SC_CLEANUP; /* CLEANUP THE LEFTOVER IN STK */
     1056     3400    4                   CURR_OWNER=SORT_REC.O_PTR;
     1057     3401    4                   SC_PTR=SORT_REC.SC_PTR;
     1058     3402    4                   STK.CURR(0)=CURR_OWNER;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:60   
     1059     3403    4                   IF SORT_REC.P_PTR~=CURR_OWNER THEN
     1060     3404    4                       NEXT_DBK=SORT_REC.MEMBER_DBK; /* OWNER NEEDED UPDATED */
     1061     3405    4                   ELSE
     1062     3406    4                       NEXT_DBK=-1*SORT_REC.MEMBER_DBK;/* JUST REMEMBER IT */
     1063     3407    4                   END;
     1064     3408    3               END;
     1065     3409    2           STK(1)=SORT_REC; /* PUSH REC TO STACK */
     1066     3410    2           END;
     1067     3411    1       ELSE
     1068     3412    2       DO; /* LAST RECORD FROM SORT */
     1069     3413    2           IF CURR_OWNER>0 THEN
     1070     3414    2               CALL SC_CLEANUP;
     1071     3415    2           GOTO COMMON_RETURN; /* CLOSE THE PATCH FILE */
     1072     3416    2           END;
     1073     3417
     1074     3418    1       RETURN;
     1075     3419        /*    SUBR SC_CLEANUP - THE SORT OUTPUT RECORD TO ZIU$SC_RESORT
     1076     3420                   IN THE ORDER OF  'OWNER_DBKEY' THEN 'SC_PTR'  THEN  'KEY'
     1077     3421                   WE HAVE PUSHED THE LAST TWO RECORDS IN THE STK,  AND NOW
     1078     3422                   THIS SUBR IS ENTERED WHEN EITHER 'END_OF_OUT_REC' OR
     1079     3423                   'CHANGE_OF_OWNER' OR 'CHANGE_OF_SC' OCCURS AND HENCE,
     1080     3424                   WE NEED TO CLEAN UP WHATEVER LEFT ON THE STK   */
     1081     3425    1   SC_CLEANUP: PROC;
     1082     3426
     1083     3427    2       CURR_DBK = CURR_OWNER; /* THE EXPECTED NEXT PTR OF THE LAST MEM IN STK */
     1084     3428    2       PRIOR_DBK = STK.NEXT(1); /* AND SAVE THE OLD NEXT PTR OF IT */
     1085     3429    2       IF STK.PRIOR(1)~=STK.CURR(0) OR STK.NEXT(1)~=CURR_OWNER THEN
     1086     3430    2           CALL MEMBER_TO_BE_UPDATED; /* EITHER N/P IS BAD */
     1087     3431    2       IF PRIOR_DBK ~= CURR_OWNER OR NEXT_DBK > 0 THEN
     1088     3432    2           CALL OWNER_TO_BE_UPDATED; /* PTR OF THE OWNER IS BAD */
     1089     3433    2   END SC_CLEANUP;
     1090     3434        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:61   
     1091     3435    1   WRIT_ERR:
     1092     3436    1       MONITOR_ERR=B$TCB$->B$TCB.ALT$->B$EXCFR.ERR;
     1093     3437    1       DCBSF = DBKEY_SORT_DCB;
     1094     3438    1       INCL_ERR=%YES#;
     1095     3439    1       CALL SYS_FUNC_ERRMSG;
     1096     3440    1       CALL BIN_CHAR(1,KEY.TXT);
     1097     3441    1       SC_PTR=RC_TBL.SC_PTR(KEY.RC_PTR);
     1098     3442    1       CALL ERROR_MSG(DBU#PAPACH1,SC_TBL.NAME(SC_PTR),,COMMAND_TEXT);
     1099     3443         /* CLOSE THE DCB AND TYPE 1 MORE ERR_MSG */
     1100     3444    1   ALT_OPEN: ;
     1101     3445    1   ALT_CLOS: CALL SYS_FUNC_RELDCB; /* RELEASE TEMP FILE DCB */
     1102     3446    1       DBKEY_SORT_DCB = 0;
     1103     3447    1       CALL ERROR_MSG(DBU#PAERROR2,COMMAND_TEXT); /* INFORM USER, ABORTING */
     1104     3448    1       GOTO UN_WIND;
     1105     3449        /*E* ERROR: ZIU-DBU#PAERROR2-C
     1106     3450        MESSAGE: Error: OPEN/CLOSE/READ/WRITE the temporary patch file
     1107     3451                        used by this directive.  %U1 aborted. */
     1108     3452        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:62   
     1109     3453        /*
     1110     3454              SUBR OWNER_TO_BE_UPDATED/MEMBER_TO_BE_UPDATED
     1111     3455                   WRITE A RECORD TO A TEMP FILE CONTAINING
     1112     3456                   DBK OF THE RECORD WHICH HAS POINTERS TO BE UPDATED
     1113     3457                       AND PTR TO BE THE NEXT AND THE PRIOR AS WELL
     1114     3458                       AS THE AC_PTR,SC_PTR AND RC_PTR TO HELP LOCATING
     1115     3459                       THIS RECORD IN THE DATABASE
     1116     3460                   THIS SUBR IS ONLY CALLED BY 'RESORT' PROCESSOR
     1117     3461        */
     1118     3462    1   OWNER_TO_BE_UPDATED: PROC ALTRET;
     1119     3463
     1120     3464    2       IF NEXT_DBK>0 THEN
     1121     3465    2           CURR_DBK = NEXT_DBK;
     1122     3466    2       ELSE
     1123     3467    2           CURR_DBK = -1*NEXT_DBK;
     1124     3468    2       STK.RC_PTR(1)=SC_TBL.RC_PTR(SC_PTR); /* RC FOR THE OWNER */
     1125     3469    2       STK.CURR(0)=STK.CURR(1);
     1126     3470    2       STK.CURR(1)=CURR_OWNER;
     1127     3471
     1128     3472    2   MEMBER_TO_BE_UPDATED: ENTRY ALTRET;
     1129     3473
     1130     3474    2       SC_TBL.COUNT(SC_PTR) = SC_TBL.COUNT(SC_PTR) + 1;
     1131     3475    2       KEY.TXT = STK.CURR(1);
     1132     3476    2       KEY.RC_PTR = STK.RC_PTR(1);
     1133     3477    2       STK.NEXT(1) = CURR_DBK;
     1134     3478    2       STK.PRIOR(1) = STK.CURR(0);
     1135     3479
     1136     3480    2       CALL M$WRITE(WRITE_TEMP) ALTRET(ALT);
     1137     3481
     1138     3482    2       REC_CNT = REC_CNT + 1; /* ADD THE TOT NUMBER */
     1139     3483    2       RETURN;
     1140     3484    2   ALT: ALTRETURN;
     1141     3485    2   END OWNER_TO_BE_UPDATED;
     1142     3486
     1143     3487    1   END ZIU$PA_SORTIN;
     1144     3488        %EOD;

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:63   
--  Include file information  --

   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$PA_SORTIN.

   Procedure ZIU$PA_SORTIN requires 2253 words for executable code.
   Procedure ZIU$PA_SORTIN is declared NOAUTO and requires 186 words of local(STATIC) storage.

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:64   

 Object Unit name= ZIU$PA_SORTIN                              File name= ZIU$COMPACT.:ZIC0TOU
 UTS= SEP 05 '97 13:10:06.96 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   186    272  ZIU$PA_SORTIN
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$UC
    3  RoData even  UTS      1      1  ZIU$PA_SORTIN
    4   Proc  even  none  2253   4315  ZIU$PA_SORTIN
    5  RoData even  none    72    110  ZIU$PA_SORTIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        2  ZIU$PA_SORTIN
     4   1375          yes     yes      Std        2  ZIU$PA_SORTOUT
     4   1711          yes     yes      Std        0  ZIU$PA_PACK
     4   3732          yes     yes      Std        2  ZIU$SC_RESORT
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:65   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      3  ENTRY_LEN                          0      4  NO_OF_LEVELS
    0      5  LEVEL#                             0      7  BREAK_CLEANUP
    0     12  WRITE_TEMP                         0     34  LOW_INDX
    0     35  HIGH_INDX                          0     36  OWNER_CNT
    0     37  CURR_LN                            0     40  CURR_OWNER
    0     44  KEY                                0     46  CURR_LEVEL
    0    247  PASTK$                             0    250  PAENT_STK_SIZE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 CHKSUM
         yes           Std       2 BIN_CHAR
 yes     yes           Std       0 OPEN_AREA
         yes           Std       0 ZIU$DBAMP
         yes           Std       0 FLUSH_PAGES
 yes     yes           Std       0 SYS_FUNC_RELDCB
         yes           Std       4 ERROR_MSG
         yes           Std       0 ERASE_PAREC
         yes           Std       2 FIND_DIRECT
 yes     yes           Std       1 STORE_AN_ENTRY
 yes     yes           Std       0 SYS_FUNC_CLOS
 yes     yes           Std       0 PA_CLEANUP
 yes     yes           Std       3 READ_DB
 yes     yes           Std       0 SYS_FUNC_ERRMSG
 yes     yes           Std       0 SYS_FUNC_WRIT
 yes     yes           Std       0 SYS_FUNC_CHECK
 yes     yes           Std       0 SYS_FUNC_READ
         yes           Std       1 PUSH_PAENTRY
                       nStd      0 X66_STATIC_2
                       nStd      0 X66_SUNWIND
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:66   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     STK                                   NBUFS                                 PRFR
     PRFR2                                 REC2$                                 ATBLK$
     DATA$                                 TYPE                                  MSTR$
     NXT_MSLOT                             MAX_MSLOT                             MSTR_INDX
     HASHTBL                               HASHINDX                              LOC_MODE
     AREA_KEY$                             NO_AREAS                              GLBL_PTR_SZ
     SET_XREF$                             NXT_SSLOT                             MAX_SSLOT
     REC_XREF$                             NXT_RSLOT                             MAX_RSLOT
     NO_RECS                               NO_SETS                               XREF_BUILT
     TYPESET                               TYPEREC                               SC_PTR
     SC_TBL                                RC_PTR                                RC_TBL
     KEY_PTR                               KEY_TBL                               AC_PTR
     FIRST_TIME_CALLED                     BASE_DBK                              AC_TBL
     BLKLSF                                KEYLSF                                KEYXSF
     DCBSF                                 ORGSF                                 KEYSF
     KEYVSF                                ACSSF                                 NOTIMESF
     FUNSF                                 ASNSF                                 TESTSF
     XTENSIZESF                            DISPSF                                WAITSF
     VFCSF                                 FULLSF                                BKUPSF
     BUFLNSF                               BUFSF                                 SOURCESF
     DESTSF                                DATESF                                TIMESF
     UTSSF                                 DAYSF                                 TSTAMPSF
     ENCRP_SEEDSF                          ERRCODESF                             MSGCODE
     INCL_ERR                              ERR_INSERT                            FIDSF_RD
     ACNT                                  EXISTSF                               SHARESF
     DCBNMSF                               KEYRSF                                NO_KEYSF
     REASGNSF                              CARRY_ATTRIBUTESF                     SUBMESSF
     SPKY_OPNSF                            POSSF                                 ERRFLGSF
     MERGESF                               FSA_FLAG                              RELGSF
     UNUSED                                HELPCODE                              COUNTSF
     INDEXSF                               GAP                                   PSNSF
     ACNTSF                                KEY_SHADWSF                           REC$
     RB                                    RE                                    IE
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:67   
     IB                                    CNT                                   ICNT
     RCNT                                  SCNT                                  FIRST_SET
     RETCNT                                DMPCNT                                KCNT
     ACNT_IDX                              I                                     J
     K                                     X                                     STEPCC
     I_O_BUF$                              OUT_INDX                              I_O_SIZE
     REC_DATA_LN                           M$LO                                  B$TCB$
     B$ROS$                                B$JIT$                                KEYFID
     I_O_KEY                               RESTART                               BREAK_FLAG
     ICHKSUM                               ITMCNT                                GAP1
     ENTRY$                                GROUP$                                PTR_LEN
     KEY_LEN                               ZI$DIR                                SCHEMA_ACTIVE
     RECORD_LIST                           SET_LIST                              RETAIN_LIST
     DUMP_FID                              ALTKY                                 INIT_RG
     KEY_RNG                               ITEM_LIST                             M$UC
     DBKEY_SORT_DCB                        REC_CNT                               POOL_MAX
     SWAP_PTR                              POOL                                  COMMAND_TEXT

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:68   


      124        1        /*T***********************************************************/
      125        2        /*T*                                                         */
      126        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      127        4        /*T*                                                         */
      128        5        /*T***********************************************************/
      129        6        ZIU$PA_SORTIN: PROC(SORT_REC,SORTREC_SIZE) NOAUTO ALTRET;

      6  4 000000   000000 700200 xent  ZIU$PA_SORT* TSX0  ! X66_STATIC_2
         4 000001   000000 000002 0                  ZERO    0,2
         4 000002   000506 710000 4                  TRA     s:2725

      130        7
      131        8    1   DCL SORTREC_SIZE UBIN; /* WE WILL DETERMINE THE SIZE */
      132        9    1   DCL 1 SORT_REC CALIGNED,
      133       10    1         2 N_PTR UBIN UNAL,
      134       11    1         2 P_PTR UBIN UNAL,
      135       12    1         2 MEMBER_DBK UBIN UNAL,
      136       13    1         2 RC_PTR UBIN BYTE UNAL,
      137       14    1         2 AC_PTR UBIN BYTE UNAL,
      138       15    1         2 SC_PTR UBIN BYTE UNAL,
      139       16    1         2 O_PTR UBIN UNAL,
      140       17    1         2 KEY_LOC CHAR(KEY_LEN) UNAL;
      141       18    1   DCL 1 STK (0:1) SYMREF ALIGNED,
      142       19    1         2 NEXT SBIN ALIGNED,
      143       20    1         2 PRIOR SBIN ALIGNED,
      144       21    1         2 CURR SBIN ALIGNED,
      145       22    1         2 RC_PTR UBIN BYTE UNAL,
      146       23    1         2 AC_PTR UBIN BYTE UNAL;
      147       24    1   DCL ENTRY_LEN SBIN STATIC SYMDEF ALIGNED;
      148       25    1   DCL NO_OF_LEVELS SBIN STATIC SYMDEF ALIGNED;
      149       26    1   DCL LEVEL# SBIN STATIC SYMDEF ALIGNED;
      150       27
      151       28    1   DCL NBUFS SBIN SYMREF ALIGNED;
      152       29    1   DCL KEY_PTR2 SBIN STATIC ALIGNED;
      153       30    1   DCL CHAR_V CHAR(PTR_LEN) BASED CALIGNED;
      154       31
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:69   
      155       32    1   DCL BREAK_CLEANUP BIT(72) STATIC SYMDEF ALIGNED;
      156       33    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      157       34    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      158       35    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      159       36    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
      160       37    1   DCL SYS_FUNC_CHECK ENTRY ALTRET;
      161       38    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      162       39
      163       40    1   DCL FLUSH_PAGES ENTRY;
      164       41    1   DCL GET_DCB ENTRY(1) ALTRET;
      165       42    1   DCL ZIU$DBAMP ENTRY;
      166       43    1   DCL PRFR SBIN WORD SYMREF ALIGNED; /*  SOURCE EIS  FOR ZIU$DBAMP */
      167       44    1   DCL PRFR2 SBIN WORD SYMREF ALIGNED; /* DEST EIS FOR ZIU$DBAMP */
      168       45    1   DCL REC2$ PTR SYMREF ALIGNED;
      169       46
      170       47        %INCLUDE ZI$PG_STRUCTS;
      171      150         %ATBLK_PG;
      172      206         %DATA_PG;
      173      225        %INCLUDE ZI_DBU_XREF;
      174      392         %XREF_TBLS;
      175      467         %PA_XREF_TBLS;
      176      533        %INCLUDE ZI_GLOBAL_DBUTIL;
      177      711         %SYS_FUNC;
      178      803         %MISC_DCLS;
      179      856         %PAREC(STCLASS=SYMREF);
      180      883        %INCLUDE ZI$DIR;
      181     1040         %DIR;
      182     1184        %INCLUDE ZI_PRSE_SUBS;
      183     1340        %INCLUDE CP_6;
      184     1421        %INCLUDE CP_6_SUBS;
      185     1961         %B$EXCFR;
      186     1979         %B$TCB;
      187     1982
      188     1983        %EQU LOCK_BUF = 2;
      189     1984        %EQU MUST_WRITE = 1;
      190     1985        %EQU DONT_LOCK = 0;
      191     1986        %EQU DONT_ERROR = -1;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:70   
      192     1987        %FPT_WRITE(FPTN=WRITE_TEMP,KEY=KEY,NEWKEY=YES,ONEWKEY=NO,VFC=NO,
      193     1988         STCLASS="STATIC SYMDEF");
      194     2019        %INCLUDE ZI_ERRORS_SUBS;
      195     2539
      196     2540    1   DCL CHKSUM ENTRY;
      197     2541    1   DCL READ_DB ENTRY(3) ALTRET;
      198     2542    1   DCL BIN_CHAR ENTRY(2);
      199     2543    1   DCL ERROR_MSG ENTRY(4);
      200     2544    1   DCL OPEN_AREA ENTRY ALTRET;
      201     2545
      202     2546    1   DCL PA_CLEANUP ENTRY ALTRET;
      203     2547    1   DCL FIND_DIRECT ENTRY(2);
      204     2548    1   DCL ERASE_PAREC ENTRY;
      205     2549    1   DCL STORE_AN_ENTRY ENTRY(1) ALTRET;
      206     2550    1   DCL PUSH_PAENTRY ENTRY(1);
      207     2551
      208     2552    1   DCL 1 LAST(0:1) STATIC ALIGNED, /* DOUBLE BUFFER CONTROL VARIABES */
      209     2553    1         2 AC_PTR SBIN BYTE UNAL,
      210     2554    1         2 PAGES_READ UBIN BYTE UNAL,
      211     2555    1         2 RB UBIN(27) UNAL,
      212     2556    1         2 PAGES_LEFT UBIN(27) UNAL;
      213     2557    1   DCL BUF_PTR SBIN WORD STATIC ALIGNED;
      214     2558    1   DCL Y SBIN WORD STATIC ALIGNED;
      215     2559    1   DCL LOW_INDX SBIN WORD STATIC SYMDEF ALIGNED; /* USED BY COMPACT */
      216     2560    1   DCL MUST_WRITE REDEF LOW_INDX SBIN ALIGNED; /* BY SORT INPUT PROC */
      217     2561    1   DCL HIGH_INDX SBIN STATIC SYMDEF ALIGNED; /* BY COMPACT */
      218     2562    1   DCL PAGE_MODIFIED REDEF HIGH_INDX SBIN ALIGNED; /* ELSE */
      219     2563    1   DCL OWNER_CNT SBIN WORD STATIC SYMDEF ALIGNED; /* BY COMPACT ONLY */
      220     2564    1   DCL LAST_BUF REDEF OWNER_CNT SBIN ALIGNED; /* AGAIN BY SORT INPUT PROC */
      221     2565    1   DCL CURR_LN SBIN STATIC SYMDEF ALIGNED;
      222     2566    1   DCL CURR_OWNER SBIN STATIC SYMDEF ALIGNED;
      223     2567    1   DCL CURR_DBK SBIN STATIC ALIGNED;
      224     2568    1   DCL DBKEY_SORT_DCB UBIN HALF SYMREF ALIGNED;
      225     2569    1   DCL PRIOR_DBK SBIN STATIC ALIGNED;
      226     2570    1   DCL NEXT_DBK SBIN STATIC ALIGNED;
      227     2571    1   DCL 1 KEY STATIC SYMDEF ALIGNED,
      228     2572    1         2 CNT UBIN BYTE UNAL INIT(5),
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:71   
      229     2573    1         2 TXT UBIN WORD UNAL,
      230     2574    1         2 RC_PTR UBIN BYTE UNAL;
      231     2575    1   DCL REC_CNT SBIN WORD SYMREF ALIGNED;
      232     2576    1   DCL POOL_MAX SBIN WORD SYMREF ALIGNED;
      233     2577    1   DCL SWAP_PTR SBIN WORD SYMREF ALIGNED;
      234     2578    1   DCL 1 POOL(0:95) SYMREF ALIGNED,
      235     2579    1         2 MUST_WRITE BIT(1) UNAL,
      236     2580    1         2 LOCKS UBIN(9) UNAL,
      237     2581    1         2 PAGE# UBIN(26) UNAL;
      238     2582    1   DCL COMMAND_TEXT CHAR(9) SYMREF ALIGNED;
      239     2583
      240     2584    1   DCL 1 CURR_LEVEL(0:31) STATIC SYMDEF ALIGNED, /* RES 32 LEVEL(HUGE) */
      241     2585    1         2 DBK UBIN WORD ALIGNED,
      242     2586    1         2 FIRST_PA UBIN WORD ALIGNED, /* DBK OF FIRST PA IN EACH LEVEL */
      243     2587    1         2 ENT_NO UBIN HALF UNAL,
      244     2588    1         2 BUF_PTR UBIN BYTE UNAL,
      245     2589    1         2 * UBIN BYTE UNAL,
      246     2590    1         2 REC$ PTR ALIGNED;
      247     2591
      248     2592
      249     2593    1   DCL OSTK$ PTR STATIC ALIGNED;
      250     2594    1   DCL PASTK$ PTR STATIC SYMDEF ALIGNED;
      251     2595    1   DCL OWNER_STK(0:0) UBIN BASED(OSTK$) ALIGNED;
      252     2596    1   DCL 1 PAENT_STK BASED CALIGNED,
      253     2597    1         2 PA_DBK UBIN CALIGNED,
      254     2598    1         2 ENT CHAR(ENTRY_LEN) CALIGNED;
      255     2599    1   DCL PAENT_STK_SIZE UBIN STATIC SYMDEF ALIGNED;
      256     2600        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:72   
      257     2601        /*
      258     2602              SUBR  GET_PTR - EXTRACT POINTERS FROM DATA_REC
      259     2603        */
      260     2604    1   GET_PTR: PROC(POINTER,EIS);

   2604  4 000003   000251 741200 0     GET_PTR      STX1  ! PAENT_STK_SIZE+1

      261     2605
      262     2606    2   DCL POINTER UBIN WORD CALIGNED;
      263     2607    2   DCL 1 EIS ALIGNED,
      264     2608    2         2 * UBIN(3) UNAL,
      265     2609    2         2 OFST UBIN(17) UNAL,
      266     2610    2         2 * UBIN(4) UNAL,
      267     2611    2         2 SIZ UBIN(12) UNAL;
      268     2612    2   DCL PTR_TEMP SBIN STATIC ALIGNED;
      269     2613
      270     2614    2       REC2$=PINCRC(REC$,EIS.OFST);

   2614  4 000004   000253 470400 0                  LDP0    @EIS
         4 000005   000000 236100                    LDQ     0,,PR0
         4 000006   000020 772000                    QRL     16
         4 000007   377777 376007                    ANQ     131071,DL
         4 000010   000020 736000                    QLS     16
         4 000011   000000 036000 xsym               ADLQ    REC$
         4 000012   000000 756000 xsym               STQ     REC2$

      271     2615    2       PTR_LEN = EIS.SIZ; /* POINTER SIZE */

   2615  4 000013   000000 236100                    LDQ     0,,PR0
         4 000014   007777 376007                    ANQ     4095,DL
         4 000015   000000 756000 xsym               STQ     PTR_LEN
         4 000016   000020 710000 4                  TRA     s:2619

      272     2616
      273     2617    2   GET_PTR2: ENTRY(POINTER); /* ENTRY TO EXTRACT PRIOR AND OWNER PTRS */

   2617  4 000017   000251 741200 0     GET_PTR2     STX1  ! PAENT_STK_SIZE+1
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:73   

      274     2618
      275     2619    2       POINTER=0; /* INIT THIS LOCATION */

   2619  4 000020   000252 470400 0                  LDP0    @POINTER
         4 000021   000100 100400                    MLR     fill='000'O
         4 000022   000000 000004 5                  ADSC9   0                        cn=0,n=4
         4 000023   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      276     2620    2       PINCRC(ADDR(POINTER),4-PTR_LEN)->CHAR_V=REC2$->CHAR_V;

   2620  4 000024   000000 335000 xsym               LCA     PTR_LEN
         4 000025   000000 471400 xsym               LDP1    REC2$
         4 000026   000000 720000 xsym               LXL0    PTR_LEN
         4 000027   040145 100540                    MLR     fill='040'O
         4 000030   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 000031   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=*X0

      277     2621         /* BASE_DBK=0 IF SET IS LOCAL, >0 IF NOT AND IS BASE_DBK OF CURR AC */
      278     2622    2       IF POINTER>0 THEN /* IF POINTER=0,IT IS UNCONNECTED */

   2622  4 000032   000000 100500                    MLR     fill='000'O
         4 000033   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         4 000034   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 000035   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 000036   000000 116003                    CMPQ    0,DU
         4 000037   000051 600000 4                  TZE     s:2624

      279     2623    2           POINTER = POINTER + BASE_DBK; /* OTHERWISE,ADJUST IT */

   2623  4 000040   000000 100500                    MLR     fill='000'O
         4 000041   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         4 000042   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 000043   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 000044   000000 036000 xsym               ADLQ    BASE_DBK
         4 000045   000267 756000 0                  STQ     @FIND_TYPE+4
         4 000046   000100 100400                    MLR     fill='000'O
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:74   
         4 000047   000267 000004 0                  ADSC9   @FIND_TYPE+4             cn=0,n=4
         4 000050   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      280     2624    2       REC2$ = PINCRC(REC2$,PTR_LEN); /* POINTS TO PRIOR/OWNER PTRS */

   2624  4 000051   000000 236000 xsym               LDQ     PTR_LEN
         4 000052   000020 736000                    QLS     16
         4 000053   000000 036000 xsym               ADLQ    REC2$
         4 000054   000000 756000 xsym               STQ     REC2$

      281     2625    2       RETURN;

   2625  4 000055   000251 221200 0                  LDX1  ! PAENT_STK_SIZE+1
         4 000056   000001 702211                    TSX2  ! 1,X1

      282     2626
      283     2627    2   STORE_PTR: ENTRY(POINTER,EIS);

   2627  4 000057   000251 741200 0     STORE_PTR    STX1  ! PAENT_STK_SIZE+1

      284     2628
      285     2629    2       REC2$=PINCRC(REC$,EIS.OFST);

   2629  4 000060   000253 470400 0                  LDP0    @EIS
         4 000061   000000 236100                    LDQ     0,,PR0
         4 000062   000020 772000                    QRL     16
         4 000063   377777 376007                    ANQ     131071,DL
         4 000064   000020 736000                    QLS     16
         4 000065   000000 036000 xsym               ADLQ    REC$
         4 000066   000000 756000 xsym               STQ     REC2$

      286     2630    2       PTR_LEN = EIS.SIZ;

   2630  4 000067   000000 236100                    LDQ     0,,PR0
         4 000070   007777 376007                    ANQ     4095,DL
         4 000071   000000 756000 xsym               STQ     PTR_LEN
         4 000072   000074 710000 4                  TRA     s:2634
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:75   

      287     2631
      288     2632    2   STORE_PTR2: ENTRY(POINTER);

   2632  4 000073   000251 741200 0     STORE_PTR2   STX1  ! PAENT_STK_SIZE+1

      289     2633
      290     2634    2       PTR_TEMP = POINTER - BASE_DBK; /* CONV TO LOCAL IF SET IS LOCAL */

   2634  4 000074   000252 470400 0                  LDP0    @POINTER
         4 000075   000000 100500                    MLR     fill='000'O
         4 000076   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         4 000077   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 000100   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 000101   000000 136000 xsym               SBLQ    BASE_DBK
         4 000102   000254 756000 0                  STQ     PTR_TEMP

      291     2635    2       REC2$->CHAR_V=PINCRC(ADDR(PTR_TEMP),4-PTR_LEN)->CHAR_V;

   2635  4 000103   000000 335000 xsym               LCA     PTR_LEN
         4 000104   000000 720000 xsym               LXL0    PTR_LEN
         4 000105   000000 471400 xsym               LDP1    REC2$
         4 000106   040140 100445                    MLR     fill='040'O
         4 000107   000255 000010 0                  ADSC9   PTR_TEMP+1,A             cn=0,n=*X0
         4 000110   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      292     2636    2       REC2$ = PINCRC(REC2$,PTR_LEN);

   2636  4 000111   000000 236000 xsym               LDQ     PTR_LEN
         4 000112   000020 736000                    QLS     16
         4 000113   000000 036000 xsym               ADLQ    REC2$
         4 000114   000000 756000 xsym               STQ     REC2$

      293     2637    2   END GET_PTR;

   2637  4 000115   000251 221200 0                  LDX1  ! PAENT_STK_SIZE+1
         4 000116   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:76   

      294     2638        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:77   
      295     2639        /*
      296     2640              SUBR  READ_NEXT_BLOCK  - READ A BLOCK OF PAGES WITH NO WAIT
      297     2641                    RETURN WITH AC_PTR AND DATA$ AND SET CURR_LN TO 0
      298     2642        */
      299     2643    1   READ_NEXT_BLOCK: PROC ALTRET;

   2643  4 000117   000255 741200 0     READ_NEXT_B* STX1  ! PTR_TEMP+1

      300     2644
      301     2645    2       AC_PTR = LAST.AC_PTR(BUF_PTR); /* AC THAT WAS READ LAST TIME */

   2645  4 000120   000032 235000 0                  LDA     BUF_PTR
         4 000121   000001 735000                    ALS     1
         4 000122   000026 236005 0                  LDQ     LAST,AL
         4 000123   000033 732000                    QRS     27
         4 000124   000000 756000 xsym               STQ     AC_PTR

      302     2646    2       RB = LAST.RB(BUF_PTR); /* STARTING PAGE # */

   2646  4 000125   000027 236005 0                  LDQ     LAST+1,AL
         4 000126   000026 235005 0                  LDA     LAST,AL
         4 000127   000033 773000                    LRL     27
         4 000130   000001 376000 5                  ANQ     1
         4 000131   000000 756000 xsym               STQ     RB

      303     2647    2       LAST.RB(BUF_PTR)=RB + LAST.PAGES_READ(BUF_PTR);

   2647  4 000132   000032 235000 0                  LDA     BUF_PTR
         4 000133   000001 735000                    ALS     1
         4 000134   000026 236005 0                  LDQ     LAST,AL
         4 000135   000022 772000                    QRL     18
         4 000136   000777 376007                    ANQ     511,DL
         4 000137   000000 036000 xsym               ADLQ    RB
         4 000140   000266 756000 0                  STQ     @FIND_TYPE+3
         4 000141   000002 735000                    ALS     2
         4 000142   000005 101400                    MRL     fill='000'O
         4 000143   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:78   
         4 000144   000026 400003 0                  ADSC9   LAST,A                   cn=2,n=3

      304     2648    2       RE = LAST.RB(BUF_PTR) - 1;

   2648  4 000145   000032 235000 0                  LDA     BUF_PTR
         4 000146   000001 735000                    ALS     1
         4 000147   000027 236005 0                  LDQ     LAST+1,AL
         4 000150   000026 235005 0                  LDA     LAST,AL
         4 000151   000033 773000                    LRL     27
         4 000152   000001 376000 5                  ANQ     1
         4 000153   000001 136007                    SBLQ    1,DL
         4 000154   000000 756000 xsym               STQ     RE

      305     2649    2       CURR_LN = -1;

   2649  4 000155   000001 335007                    LCA     1,DL
         4 000156   000037 755000 0                  STA     CURR_LN

      306     2650    2       OUT_INDX = BUF_PTR * NBUFS;

   2650  4 000157   000032 236000 0                  LDQ     BUF_PTR
         4 000160   000000 402000 xsym               MPY     NBUFS
         4 000161   000000 756000 xsym               STQ     OUT_INDX

      307     2651    2       DATA$ = ADDR(I_O_BUF(OUT_INDX));

   2651  4 000162   000034 736000                    QLS     28
         4 000163   000000 036000 xsym               ADLQ    I_O_BUF$
         4 000164   000000 756000 xsym               STQ     DATA$

      308     2652         /* NOW SWITCH BUF_PTR TO THE NEXT BUF */
      309     2653    2       LAST_BUF = BUF_PTR; /* AND REMBER IT(IT IS TO BE PROCESSED) */

   2653  4 000165   000032 235000 0                  LDA     BUF_PTR
         4 000166   000036 755000 0                  STA     OWNER_CNT

      310     2654    2       BUF_PTR = 1 - BUF_PTR; /* NOTE: BUF_PTR IS EITHER 0 OR 1 */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:79   

   2654  4 000167   000002 675000 5                  ERA     2
         4 000170   000002 035007                    ADLA    2,DL
         4 000171   000032 755000 0                  STA     BUF_PTR

      311     2655         /* BUF_PTR POINT TO THE BLOCK THAT JUST FINISHED PROCESSING */
      312     2656    2       PAGE_MODIFIED=0; /* RESET FLAG */

   2656  4 000172   000035 450000 0                  STZ     HIGH_INDX

      313     2657    2       IF MUST_WRITE=1 THEN /* HAPPEN IF WE REBUILD PA INDICES */

   2657  4 000173   000034 235000 0                  LDA     LOW_INDX
         4 000174   000001 115007                    CMPA    1,DL
         4 000175   000262 601000 4                  TNZ     s:2671

      314     2658    3       DO;

      315     2659    3           MUST_WRITE=0; /* RESET FLAG */

   2659  4 000176   000034 450000 0                  STZ     LOW_INDX

      316     2660    3           DCBSF=AC_TBL.DCB#(LAST.AC_PTR(BUF_PTR));

   2660  4 000177   000032 235000 0                  LDA     BUF_PTR
         4 000200   000001 735000                    ALS     1
         4 000201   000026 236005 0                  LDQ     LAST,AL
         4 000202   000033 732000                    QRS     27
         4 000203   000014 402007                    MPY     12,DL
         4 000204   000013 720006 xsym               LXL0    AC_TBL+11,QL
         4 000205   000377 360003                    ANX0    255,DU
         4 000206   000000 740000 xsym               STX0    DCBSF

      317     2661    3           BUFLNSF=4096*LAST.PAGES_READ(BUF_PTR);

   2661  4 000207   000032 235000 0                  LDA     BUF_PTR
         4 000210   000001 735000                    ALS     1
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:80   
         4 000211   000026 236005 0                  LDQ     LAST,AL
         4 000212   000006 772000                    QRL     6
         4 000213   000003 376000 5                  ANQ     3
         4 000214   000000 756000 xsym               STQ     BUFLNSF

      318     2662    3           KEYVSF.IDSKEY=LAST.RB(BUF_PTR)-LAST.PAGES_READ(BUF_PTR);

   2662  4 000215   000026 236005 0                  LDQ     LAST,AL
         4 000216   000022 772000                    QRL     18
         4 000217   000777 376007                    ANQ     511,DL
         4 000220   000266 756000 0                  STQ     @FIND_TYPE+3
         4 000221   000027 236005 0                  LDQ     LAST+1,AL
         4 000222   000026 235005 0                  LDA     LAST,AL
         4 000223   000033 773000                    LRL     27
         4 000224   000001 376000 5                  ANQ     1
         4 000225   000266 136000 0                  SBLQ    @FIND_TYPE+3
         4 000226   000267 756000 0                  STQ     @FIND_TYPE+4
         4 000227   000000 100400                    MLR     fill='000'O
         4 000230   000267 000004 0                  ADSC9   @FIND_TYPE+4             cn=0,n=4
         4 000231   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

      319     2663    3           BUFSF=VECTOR(I_O_BUF(NBUFS-OUT_INDX));

   2663  4 000232   000000 236000 xsym               LDQ     NBUFS
         4 000233   000000 136000 xsym               SBLQ    OUT_INDX
         4 000234   000004 235000 5                  LDA     4
         4 000235   000034 736000                    QLS     28
         4 000236   000000 036000 xsym               ADLQ    I_O_BUF$
         4 000237   000000 755000 xsym               STA     BUFSF
         4 000240   000001 756000 xsym               STQ     BUFSF+1

      320     2664    3           KEYSF=%YES#;

   2664  4 000241   400000 236003                    LDQ     -131072,DU
         4 000242   000000 756000 xsym               STQ     KEYSF

      321     2665    3           WAITSF=%YES#;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:81   

   2665  4 000243   000000 756000 xsym               STQ     WAITSF

      322     2666    3           FULLSF=%YES#;

   2666  4 000244   000000 756000 xsym               STQ     FULLSF

      323     2667    3           KEYVSF.LEN=4;

   2667  4 000245   004000 236003                    LDQ     2048,DU
         4 000246   000000 552040 xsym               STBQ    KEYVSF,'40'O

      324     2668    3           AC_TBL.PAGE_WRITTEN(LAST.AC_PTR(BUF_PTR))='1'B;

   2668  4 000247   000032 235000 0                  LDA     BUF_PTR
         4 000250   000001 735000                    ALS     1
         4 000251   000026 236005 0                  LDQ     LAST,AL
         4 000252   000033 732000                    QRS     27
         4 000253   000014 402007                    MPY     12,DL
         4 000254   000000 622006                    EAX2    0,QL
         4 000255   000200 236003                    LDQ     128,DU
         4 000256   000013 256012 xsym               ORSQ    AC_TBL+11,X2

      325     2669    3           CALL SYS_FUNC_WRIT ALTRET(ALT);

   2669  4 000257   000000 631400 5                  EPPR1   0
         4 000260   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 000261   000500 702000 4                  TSX2    ALT

      326     2670    3           END; /* WE MAY HAVE ERASED A BOUNCH OF PA_REC */

      327     2671    2       IF FIRST_TIME_CALLED=2 THEN

   2671  4 000262   000000 235000 xsym               LDA     FIRST_TIME_CALLED
         4 000263   000002 115007                    CMPA    2,DL
         4 000264   000267 601000 4                  TNZ     s:2673

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:82   
      328     2672    2           ALTRETURN; /* ALL DONE */

   2672  4 000265   000255 221200 0                  LDX1  ! PTR_TEMP+1
         4 000266   000000 702211                    TSX2  ! 0,X1

      329     2673    2       LAST(BUF_PTR) = LAST(LAST_BUF); /* CARRY OLD INFO OVER */

   2673  4 000267   000032 236000 0                  LDQ     BUF_PTR
         4 000270   000001 736000                    QLS     1
         4 000271   000036 235000 0                  LDA     OWNER_CNT
         4 000272   000001 735000                    ALS     1
         4 000273   000000 620006                    EAX0    0,QL
         4 000274   000026 237005 0                  LDAQ    LAST,AL
         4 000275   000026 757010 0                  STAQ    LAST,X0

      330     2674    2       IF AC_PTR >= 0 THEN /* NOT THE FIRST READ */

   2674  4 000276   000000 235000 xsym               LDA     AC_PTR
         4 000277   000310 604000 4                  TMI     s:2680

      331     2675    3       DO;

      332     2676    3           DCBSF = AC_TBL.DCB#(AC_PTR);

   2676  4 000300   000000 236000 xsym               LDQ     AC_PTR
         4 000301   000014 402007                    MPY     12,DL
         4 000302   000013 721006 xsym               LXL1    AC_TBL+11,QL
         4 000303   000377 361003                    ANX1    255,DU
         4 000304   000000 741000 xsym               STX1    DCBSF

      333     2677    3           CALL SYS_FUNC_CHECK ALTRET(ALT); /* MAKE SURE LAST IO DONE */

   2677  4 000305   000000 631400 5                  EPPR1   0
         4 000306   000000 701000 xent               TSX1    SYS_FUNC_CHECK
         4 000307   000500 702000 4                  TSX2    ALT

      334     2678    3           END;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:83   

      335     2679
      336     2680    2       IF BREAK_FLAG>0 THEN

   2680  4 000310   000000 235000 xsym               LDA     BREAK_FLAG
         4 000311   000320 604400 4                  TMOZ    s:2683

      337     2681    2           UNWIND TO BREAK_CLEANUP;

   2681  4 000312   000000 100600                    MLR   ! fill='000'O
         4 000313   000007 000010 0                  ADSC9   BREAK_CLEANUP            cn=0,n=8
         4 000314   000266 000010 0                  ADSC9   @FIND_TYPE+3             cn=0,n=8
         4 000315   000266 237200 0                  LDAQ  ! @FIND_TYPE+3
         4 000316   000000 700200 xent               TSX0  ! X66_SUNWIND
         4 000317   000000 000200                    ZERO    0,128

      338     2682
      339     2683    2       IF LAST.PAGES_LEFT(LAST_BUF)=0 THEN /* DONE READING A AREA */

   2683  4 000320   000036 236000 0                  LDQ     OWNER_CNT
         4 000321   000001 736000                    QLS     1
         4 000322   000027 236006 0                  LDQ     LAST+1,QL
         4 000323   000001 316000 5                  CANQ    1
         4 000324   000404 601000 4                  TNZ     s:2699

      340     2684    3       DO;

      341     2685    3           X = LAST.AC_PTR(LAST_BUF)+1;

   2685  4 000325   000036 236000 0                  LDQ     OWNER_CNT
         4 000326   000001 736000                    QLS     1
         4 000327   000026 236006 0                  LDQ     LAST,QL
         4 000330   000033 732000                    QRS     27
         4 000331   000001 036007                    ADLQ    1,DL
         4 000332   000000 756000 xsym               STQ     X

      342     2686    4           DO WHILE( X<=NO_AREAS AND AC_TBL.RANGE_HIGH(X)=0);
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:84   

   2686  4 000333   000335 710000 4                  TRA     s:2688

      343     2687    4               X = X + 1;

   2687  4 000334   000000 054000 xsym               AOS     X

      344     2688    4               END;

   2688  4 000335   000000 236000 xsym               LDQ     X
         4 000336   000000 116000 xsym               CMPQ    NO_AREAS
         4 000337   000343 605400 4                  TPNZ    s:2689
         4 000340   000014 402007                    MPY     12,DL
         4 000341   000002 235006 xsym               LDA     AC_TBL+2,QL
         4 000342   000334 600000 4                  TZE     s:2687

      345     2689    3           IF X > NO_AREAS THEN

   2689  4 000343   000000 236000 xsym               LDQ     X
         4 000344   000000 116000 xsym               CMPQ    NO_AREAS
         4 000345   000352 604400 4                  TMOZ    s:2695

      346     2690    4           DO;

      347     2691    4               FIRST_TIME_CALLED=2;

   2691  4 000346   000002 235007                    LDA     2,DL
         4 000347   000000 755000 xsym               STA     FIRST_TIME_CALLED

      348     2692         /* MARK DONE READING DB,BUT 1 BLOCK TO PROCESS */
      349     2693    4               RETURN; /* SO NO MORE READING */

   2693  4 000350   000255 221200 0                  LDX1  ! PTR_TEMP+1
         4 000351   000001 702211                    TSX2  ! 1,X1

      350     2694    4               END;
      351     2695    3           LAST.AC_PTR(BUF_PTR)=X; /* NEXT READ THIS AREA */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:85   

   2695  4 000352   000032 235000 0                  LDA     BUF_PTR
         4 000353   000001 735000                    ALS     1
         4 000354   000033 736000                    QLS     27
         4 000355   000026 676005 0                  ERQ     LAST,AL
         4 000356   777000 376003                    ANQ     -512,DU
         4 000357   000026 656005 0                  ERSQ    LAST,AL

      352     2696    3           LAST.PAGES_LEFT(BUF_PTR)=AC_TBL.RANGE_HIGH(X)-AC_TBL.RANGE_LOW(X)+1;

   2696  4 000360   000000 236000 xsym               LDQ     X
         4 000361   000000 620005                    EAX0    0,AL
         4 000362   000014 402007                    MPY     12,DL
         4 000363   000000 621006                    EAX1    0,QL
         4 000364   000002 236011 xsym               LDQ     AC_TBL+2,X1
         4 000365   000001 136011 xsym               SBLQ    AC_TBL+1,X1
         4 000366   000001 036007                    ADLQ    1,DL
         4 000367   000027 676010 0                  ERQ     LAST+1,X0
         4 000370   000001 376000 5                  ANQ     1
         4 000371   000027 656010 0                  ERSQ    LAST+1,X0

      353     2697    3           LAST.RB(BUF_PTR)=AC_TBL.RANGE_LOW(X);

   2697  4 000372   000032 235000 0                  LDA     BUF_PTR
         4 000373   000001 735000                    ALS     1
         4 000374   000000 236000 xsym               LDQ     X
         4 000375   000000 620005                    EAX0    0,AL
         4 000376   000060 402007                    MPY     48,DL
         4 000377   000000 635010                    EAA     0,X0
         4 000400   000020 731000                    ARS     16
         4 000401   000005 101406                    MRL     fill='000'O
         4 000402   000001 000004 xsym               ADSC9   AC_TBL+1,Q               cn=0,n=4
         4 000403   000026 400003 0                  ADSC9   LAST,A                   cn=2,n=3

      354     2698    3           END;

      355     2699    2       DCBSF = AC_TBL.DCB#(LAST.AC_PTR(BUF_PTR));
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:86   

   2699  4 000404   000032 235000 0                  LDA     BUF_PTR
         4 000405   000001 735000                    ALS     1
         4 000406   000026 236005 0                  LDQ     LAST,AL
         4 000407   000033 732000                    QRS     27
         4 000410   000014 402007                    MPY     12,DL
         4 000411   000013 720006 xsym               LXL0    AC_TBL+11,QL
         4 000412   000377 360003                    ANX0    255,DU
         4 000413   000000 740000 xsym               STX0    DCBSF

      356     2700
      357     2701    2       IF LAST.PAGES_LEFT(BUF_PTR) > NBUFS THEN

   2701  4 000414   000032 235000 0                  LDA     BUF_PTR
         4 000415   000001 735000                    ALS     1
         4 000416   000027 236005 0                  LDQ     LAST+1,AL
         4 000417   000001 376000 5                  ANQ     1
         4 000420   000000 116000 xsym               CMPQ    NBUFS
         4 000421   000436 604400 4                  TMOZ    s:2708

      358     2702    3       DO;

      359     2703    3           LAST.PAGES_READ(BUF_PTR)=NBUFS; /* READ A FULL BLOCK */

   2703  4 000422   000000 236000 xsym               LDQ     NBUFS
         4 000423   000022 736000                    QLS     18
         4 000424   000026 676005 0                  ERQ     LAST,AL
         4 000425   000777 376003                    ANQ     511,DU
         4 000426   000026 656005 0                  ERSQ    LAST,AL

      360     2704    3           LAST.PAGES_LEFT(BUF_PTR)=LAST.PAGES_LEFT(BUF_PTR)-NBUFS;

   2704  4 000427   000027 236005 0                  LDQ     LAST+1,AL
         4 000430   000001 376000 5                  ANQ     1
         4 000431   000000 136000 xsym               SBLQ    NBUFS
         4 000432   000027 676005 0                  ERQ     LAST+1,AL
         4 000433   000001 376000 5                  ANQ     1
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:87   
         4 000434   000027 656005 0                  ERSQ    LAST+1,AL

      361     2705    3           END;

   2705  4 000435   000445 710000 4                  TRA     s:2711

      362     2706    2       ELSE
      363     2707    3       DO;

      364     2708    3           LAST.PAGES_READ(BUF_PTR)=LAST.PAGES_LEFT(BUF_PTR);

   2708  4 000436   000027 236005 0                  LDQ     LAST+1,AL
         4 000437   000022 736000                    QLS     18
         4 000440   000026 676005 0                  ERQ     LAST,AL
         4 000441   000777 376003                    ANQ     511,DU
         4 000442   000026 656005 0                  ERSQ    LAST,AL

      365     2709    3           LAST.PAGES_LEFT(BUF_PTR)=0;

   2709  4 000443   777000 236003                    LDQ     -512,DU
         4 000444   000027 356005 0                  ANSQ    LAST+1,AL

      366     2710    3           END;

      367     2711    2       BUFLNSF = 4096 * LAST.PAGES_READ(BUF_PTR);

   2711  4 000445   000026 236005 0                  LDQ     LAST,AL
         4 000446   000006 772000                    QRL     6
         4 000447   000003 376000 5                  ANQ     3
         4 000450   000000 756000 xsym               STQ     BUFLNSF

      368     2712    2       KEYSF = %YES#;

   2712  4 000451   400000 236003                    LDQ     -131072,DU
         4 000452   000000 756000 xsym               STQ     KEYSF

      369     2713    2       KEYVSF.LEN = 4;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:88   

   2713  4 000453   004000 236003                    LDQ     2048,DU
         4 000454   000000 552040 xsym               STBQ    KEYVSF,'40'O

      370     2714    2       KEYVSF.IDSKEY = LAST.RB(BUF_PTR);

   2714  4 000455   000002 735000                    ALS     2
         4 000456   000000 101405                    MRL     fill='000'O
         4 000457   000026 400003 0                  ADSC9   LAST,A                   cn=2,n=3
         4 000460   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

      371     2715    2       FULLSF = %YES#;

   2715  4 000461   400000 236003                    LDQ     -131072,DU
         4 000462   000000 756000 xsym               STQ     FULLSF

      372     2716    2       WAITSF = %NO#; /* NO WAIT */

   2716  4 000463   000000 450000 xsym               STZ     WAITSF

      373     2717    2       BUFSF = VECTOR(I_O_BUF(NBUFS-OUT_INDX));

   2717  4 000464   000000 236000 xsym               LDQ     NBUFS
         4 000465   000000 136000 xsym               SBLQ    OUT_INDX
         4 000466   000004 235000 5                  LDA     4
         4 000467   000034 736000                    QLS     28
         4 000470   000000 036000 xsym               ADLQ    I_O_BUF$
         4 000471   000000 755000 xsym               STA     BUFSF
         4 000472   000001 756000 xsym               STQ     BUFSF+1

      374     2718
      375     2719    2       CALL SYS_FUNC_READ ALTRET(ALT);

   2719  4 000473   000000 631400 5                  EPPR1   0
         4 000474   000000 701000 xent               TSX1    SYS_FUNC_READ
         4 000475   000500 702000 4                  TSX2    ALT

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:89   
      376     2720
      377     2721    2       RETURN;

   2721  4 000476   000255 221200 0                  LDX1  ! PTR_TEMP+1
         4 000477   000001 702211                    TSX2  ! 1,X1

      378     2722    2   ALT: UNWIND TO BREAK_CLEANUP;

   2722  4 000500   000000 100600       ALT          MLR   ! fill='000'O
         4 000501   000007 000010 0                  ADSC9   BREAK_CLEANUP            cn=0,n=8
         4 000502   000266 000010 0                  ADSC9   @FIND_TYPE+3             cn=0,n=8
         4 000503   000266 237200 0                  LDAQ  ! @FIND_TYPE+3
         4 000504   000000 700200 xent               TSX0  ! X66_SUNWIND
         4 000505   000000 000200                    ZERO    0,128

      379     2723    2   END READ_NEXT_BLOCK;
      380     2724        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:90   
      381     2725    1       IF FIRST_TIME_CALLED=0 THEN /* YES! */

   2725  4 000506   000000 235000 xsym               LDA     FIRST_TIME_CALLED
         4 000507   000544 601000 4                  TNZ     CHECK_REC_TYPE

      382     2726    2       DO;

      383     2727    2           FIRST_TIME_CALLED = 1; /* RESET SWITCH */

   2727  4 000510   000001 236007                    LDQ     1,DL
         4 000511   000000 756000 xsym               STQ     FIRST_TIME_CALLED

      384     2728    3           DO X=0 TO NO_SETS;

   2728  4 000512   000000 450000 xsym               STZ     X
         4 000513   000525 710000 4                  TRA     s:2730+1

      385     2729    3               SC_TBL.COUNT(X)=0; /* INIT COUNTER BEFORE START */

   2729  4 000514   000000 236000 xsym               LDQ     X
         4 000515   000405 402007                    MPY     261,DL
         4 000516   000000 116003                    CMPQ    0,DU
         4 000517   000521 605000 4                  TPL     s:2729+5
         4 000520   000044 036003                    ADLQ    36,DU
         4 000521   003006 061400                    CSR     bolr='003'O
         4 000522   000000 000044 5                  BDSC    0                        by=0,bit=0,n=36
         4 000523   000006 450022 xsym               BDSC    SC_TBL+6,Q               by=2,bit=5,n=18

      386     2730    3               END;

   2730  4 000524   000000 054000 xsym               AOS     X
         4 000525   000000 236000 xsym               LDQ     X
         4 000526   000000 116000 xsym               CMPQ    NO_SETS
         4 000527   000514 604400 4                  TMOZ    s:2729

      387     2731    2           BUF_PTR = 1;

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:91   
   2731  4 000530   000001 235007                    LDA     1,DL
         4 000531   000032 755000 0                  STA     BUF_PTR

      388     2732    2           MUST_WRITE=0; /* MARK NO NEED TO WRITE LAST BLOCK,CAUSE NO SUCH */

   2732  4 000532   000034 450000 0                  STZ     LOW_INDX

      389     2733    2           LAST.AC_PTR(1) = -1;

   2733  4 000533   777000 236003                    LDQ     -512,DU
         4 000534   000030 552040 0                  STBQ    LAST+2,'40'O

      390     2734    2           LAST.PAGES_LEFT(1) = 0; /* MAKE A PSUDO READ PENDING */

   2734  4 000535   000000 236003                    LDQ     0,DU
         4 000536   000031 552034 0                  STBQ    LAST+3,'34'O

      391     2735    2           CALL READ_NEXT_BLOCK ALTRET(ALL_DONE); /* INIT THE FIRST NO-WAIT READ */

   2735  4 000537   000117 701000 4                  TSX1    READ_NEXT_BLOCK
         4 000540   000722 702000 4                  TSX2    ALL_DONE

      392     2736    2           CALL READ_NEXT_BLOCK; /* START NEXT READ */

   2736  4 000541   000117 701000 4                  TSX1    READ_NEXT_BLOCK
         4 000542   000000 011000                    NOP     0

      393     2737    2           GOTO GET_NEXT_LINE;

   2737  4 000543   000550 710000 4                  TRA     GET_NEXT_LINE

      394     2738    2           END;
      395     2739        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:92   
      396     2740    1   CHECK_REC_TYPE: /* IF RC_PTR > 0 THEN WE GOT A PA_MEM */
      397     2741    1       IF RC_PTR = 0 THEN /* THIS REC IS NOT WHAT WE WANT */

   2741  4 000544   000000 235000 xsym  CHECK_REC_T* LDA     RC_PTR
         4 000545   000550 600000 4                  TZE     GET_NEXT_LINE

      398     2742    1           GOTO GET_NEXT_LINE;
      399     2743    1       IF RC_PTR > 0 THEN /* FOUND A MEMBER */

   2743  4 000546   001030 605400 4                  TPNZ    FIND_A_MEMBER

      400     2744    1           GOTO FIND_A_MEMBER;
      401     2745    1       GOTO ERASE_IT; /* FOUND A PA_REC TO BE ERASED */

   2745  4 000547   000646 710000 4                  TRA     ERASE_IT

      402     2746    1   GET_NEXT_LINE:
      403     2747    1       CURR_LN = CURR_LN + 1;

   2747  4 000550   000037 054000 0     GET_NEXT_LI* AOS     CURR_LN

      404     2748    1       IF CURR_LN > DATA_PG.OFF_LN.SEC THEN

   2748  4 000551   000000 470400 xsym               LDP0    DATA$
         4 000552   000005 236100                    LDQ     5,,PR0
         4 000553   777777 376007                    ANQ     -1,DL
         4 000554   000037 116000 0                  CMPQ    CURR_LN
         4 000555   000611 604000 4                  TMI     GET_NEXT_PAGE

      405     2749    1           GOTO GET_NEXT_PAGE;
      406     2750    1       X = DATA_PG.ACT_DATA_18(2035-CURR_LN); /* X = OFFSET */

   2750  4 000556   000037 335000 0                  LCA     CURR_LN
         4 000557   000001 735000                    ALS     1
         4 000560   000000 100505                    MLR     fill='000'O
         4 000561   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         4 000562   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:93   
         4 000563   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 000564   000022 732000                    QRS     18
         4 000565   000000 756000 xsym               STQ     X

      407     2751    1       IF X<12 THEN /* NO RECORD THERE */

   2751  4 000566   000014 116007                    CMPQ    12,DL
         4 000567   000550 604000 4                  TMI     GET_NEXT_LINE

      408     2752    1           GOTO GET_NEXT_LINE;
      409     2753    1       REC$ = PINCRC(DATA$,12+X);

   2753  4 000570   000020 736000                    QLS     16
         4 000571   000003 036003                    ADLQ    3,DU
         4 000572   000000 036000 xsym               ADLQ    DATA$
         4 000573   000000 756000 xsym               STQ     REC$

      410     2754    1       RC_PTR = TYPE.MSTRINDX(REC_FRMT.TYPE);

   2754  4 000574   000000 471400 xsym               LDP1    REC$
         4 000575   003000 061500                    CSR     bolr='003'O
         4 000576   100000 060014                    BDSC    0,,PR1                   by=0,bit=6,n=12
         4 000577   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 000600   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 000601   000001 736000                    QLS     1
         4 000602   000000 100406                    MLR     fill='000'O
         4 000603   000000 000002 xsym               ADSC9   TYPE,Q                   cn=0,n=2
         4 000604   000267 000004 0                  ADSC9   @FIND_TYPE+4             cn=0,n=4
         4 000605   000267 236000 0                  LDQ     @FIND_TYPE+4
         4 000606   000022 732000                    QRS     18
         4 000607   000000 756000 xsym               STQ     RC_PTR

      411     2755    1       GOTO CHECK_REC_TYPE;

   2755  4 000610   000544 710000 4                  TRA     CHECK_REC_TYPE

      412     2756    1   GET_NEXT_PAGE:
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:94   
      413     2757    1       IF PAGE_MODIFIED=1 AND AC_TBL.CHECKSUM(AC_PTR) THEN

   2757  4 000611   000035 235000 0     GET_NEXT_PA* LDA     HIGH_INDX
         4 000612   000001 115007                    CMPA    1,DL
         4 000613   000627 601000 4                  TNZ     s:2762
         4 000614   000000 236000 xsym               LDQ     AC_PTR
         4 000615   000014 402007                    MPY     12,DL
         4 000616   000013 236006 xsym               LDQ     AC_TBL+11,QL
         4 000617   000400 316007                    CANQ    256,DL
         4 000620   000627 600000 4                  TZE     s:2762

      414     2758    2       DO;

      415     2759    2           CALL CHKSUM;

   2759  4 000621   000000 631400 5                  EPPR1   0
         4 000622   000000 701000 xent               TSX1    CHKSUM
         4 000623   000000 011000                    NOP     0

      416     2760    2           DATA_PG.CHKSUM_WD=ICHKSUM;

   2760  4 000624   000000 470400 xsym               LDP0    DATA$
         4 000625   000000 235000 xsym               LDA     ICHKSUM
         4 000626   000002 755100                    STA     2,,PR0

      417     2761    2           END;

      418     2762    1       IF RB = RE THEN

   2762  4 000627   000000 236000 xsym               LDQ     RB
         4 000630   000000 116000 xsym               CMPQ    RE
         4 000631   000635 601000 4                  TNZ     s:2765

      419     2763    1           CALL READ_NEXT_BLOCK ALTRET(ALL_DONE);

   2763  4 000632   000117 701000 4                  TSX1    READ_NEXT_BLOCK
         4 000633   000722 702000 4                  TSX2    ALL_DONE
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:95   
         4 000634   000644 710000 4                  TRA     s:2769

      420     2764    2       ELSE DO;

      421     2765    2           CURR_LN = -1;

   2765  4 000635   000001 335007                    LCA     1,DL
         4 000636   000037 755000 0                  STA     CURR_LN

      422     2766    2           RB = RB + 1;

   2766  4 000637   000001 036007                    ADLQ    1,DL
         4 000640   000000 756000 xsym               STQ     RB

      423     2767    2           DATA$ = PINCRW(DATA$,1024);

   2767  4 000641   000000 236000 xsym               LDQ     DATA$
         4 000642   002000 036003                    ADLQ    1024,DU
         4 000643   000000 756000 xsym               STQ     DATA$

      424     2768    2           END;

      425     2769    1       PAGE_MODIFIED=0;

   2769  4 000644   000035 450000 0                  STZ     HIGH_INDX

      426     2770    1       GOTO GET_NEXT_LINE;

   2770  4 000645   000550 710000 4                  TRA     GET_NEXT_LINE

      427     2771        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:96   
      428     2772    1   ERASE_IT: /* ERASE A PA_REC JUST FOUND */
      429     2773    1       SC_PTR=-1*RC_PTR-1; /* PASS SC_PTR FOR SET SUMMARY REPORT */

   2773  4 000646   000002 675000 5     ERASE_IT     ERA     2
         4 000647   000000 755000 xsym               STA     SC_PTR

      430     2774    1       IF ZI$DIR.CODE=#CONVERT THEN /* THE SET TO BE CONVERTED */

   2774  4 000650   000125 236000 xsym               LDQ     ZI$DIR+85
         4 000651   000005 376000 5                  ANQ     5
         4 000652   000005 116003                    CMPQ    5,DU
         4 000653   000713 601000 4                  TNZ     s:2781

      431     2775    2       DO; /* IS ALREADY IN PA FORMAT */

      432     2776    2           X=(RB-1)*AC_TBL.LPP(AC_PTR)+AC_TBL.BASE_DBK(AC_PTR)+CURR_LN+1;

   2776  4 000654   000000 236000 xsym               LDQ     AC_PTR
         4 000655   000014 402007                    MPY     12,DL
         4 000656   000013 236006 xsym               LDQ     AC_TBL+11,QL
         4 000657   000032 772000                    QRL     26
         4 000660   000266 756000 0                  STQ     @FIND_TYPE+3
         4 000661   000000 236000 xsym               LDQ     RB
         4 000662   000001 136007                    SBLQ    1,DL
         4 000663   000266 402000 0                  MPY     @FIND_TYPE+3
         4 000664   000267 756000 0                  STQ     @FIND_TYPE+4
         4 000665   000000 236000 xsym               LDQ     AC_PTR
         4 000666   000014 402007                    MPY     12,DL
         4 000667   000000 620006                    EAX0    0,QL
         4 000670   000267 236000 0                  LDQ     @FIND_TYPE+4
         4 000671   000000 036010 xsym               ADLQ    AC_TBL,X0
         4 000672   000037 036000 0                  ADLQ    CURR_LN
         4 000673   000001 036007                    ADLQ    1,DL
         4 000674   000000 756000 xsym               STQ     X

      433     2777    2           CALL BIN_CHAR(1,X); /* CONVERT DBK TO CHAR */

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:97   
   2777  4 000675   000010 630400 5                  EPPR0   8
         4 000676   000006 631400 5                  EPPR1   6
         4 000677   000000 701000 xent               TSX1    BIN_CHAR
         4 000700   000000 011000                    NOP     0

      434     2778    2           CALL ERROR_MSG(DBU#PAERRLP,SC_TBL.NAME(SC_PTR));

   2778  4 000701   000000 236000 xsym               LDQ     SC_PTR
         4 000702   000014 402000 5                  MPY     12
         4 000703   000013 036000 5                  ADLQ    11
         4 000704   000015 235000 5                  LDA     13
         4 000705   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 000706   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 000707   000006 631400 5                  EPPR1   6
         4 000710   000000 701000 xent               TSX1    ERROR_MSG
         4 000711   000000 011000                    NOP     0

      435     2779    2           GOTO UN_WIND; /* ABORT THE JOB */

   2779  4 000712   001703 710000 4                  TRA     UN_WIND

      436     2780    2           END;
      437     2781    1       CALL ERASE_PAREC; /* PASS  DATA$,X, AND CURR_LN */

   2781  4 000713   000000 631400 5                  EPPR1   0
         4 000714   000000 701000 xent               TSX1    ERASE_PAREC
         4 000715   000000 011000                    NOP     0

      438     2782    1       MUST_WRITE=1; /* LOCAL AND GLOBAL */

   2782  4 000716   000001 235007                    LDA     1,DL
         4 000717   000034 755000 0                  STA     LOW_INDX

      439     2783    1       PAGE_MODIFIED=1; /* SET FLAG */

   2783  4 000720   000035 755000 0                  STA     HIGH_INDX

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:98   
      440     2784    1       GOTO GET_NEXT_LINE;

   2784  4 000721   000550 710000 4                  TRA     GET_NEXT_LINE

      441     2785
      442     2786    1   ALL_DONE:
      443     2787    1       SORTREC_SIZE = 0;

   2787  4 000722   000002 470400 0     ALL_DONE     LDP0    @SORTREC_SIZE
         4 000723   000000 450100                    STZ     0,,PR0

      444     2788    1       CALL INIT_CNTL_VARIABLES ALTRET(ALT_OPEN); /* MOSTLY BUF CONTROL */

   2788  4 000724   000730 701000 4                  TSX1    INIT_CNTL_VARIABLES
         4 000725   004207 702000 4                  TSX2    ALT_OPEN

      445     2789    1       ALTRETURN; /* DONE WITH SORTIN PROCEDURE */

   2789  4 000726   000000 221200 0                  LDX1  ! 0
         4 000727   000000 702211                    TSX2  ! 0,X1

      446     2790        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:99   
      447     2791        /*E*  ERROR: ZIU-DBU#PAERRLP-C
      448     2792        MESSAGE: Error: The set "%U1" you want to convert to PA seems to be
      449     2793                        a PA set already because a *PA_REC for that set
      450     2794                        is found at DBK# %U2.  CONVERT aborted.
      451     2795                        Be careful on this directive, you must explicitly
      452     2796                        specify all the set names to be converted
      453     2797                        and exclude those sets already in PA mode. */
      454     2798
      455     2799        /*E*  ERROR: ZIU-DBU#PASUM9-C
      456     2800        MESSAGE:+
      457     2801                +  There were %U2 *PA_REC_%U1 erased before REBUILDing.
      458     2802                +     */
      459     2803        /*E*  ERROR: ZIU-DBU#PAPACH1-C
      460     2804        MESSAGE: The above I/O error occurs when writing a pointer-patch
      461     2805                 record for the tenant of the set "%U1" at DBK# %U2.
      462     2806                 The set may be broken. %U3 aborted. */
      463     2807        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:100  
      464     2808        /*
      465     2809              SUBR    INIT_CNTL_VARIABLES
      466     2810                      THE PATCH FILE IS A KEYED FILE WITH FIXED REC SIZE
      467     2811                      CONTAINING ONLY DBK,NEW_PTR,AC,RC OF SOME SET TENANTS
      468     2812        */
      469     2813    1   INIT_CNTL_VARIABLES: PROC ALTRET;

   2813  4 000730   000256 741200 0     INIT_CNTL_V* STX1  ! PTR_TEMP+2

      470     2814
      471     2815    2       POOL_MAX= 0; /* BUF CONTROL VARIABLE */

   2815  4 000731   000000 450000 xsym               STZ     POOL_MAX

      472     2816    2       SWAP_PTR = -1; /* BUF CONTROL VARIABLE */

   2816  4 000732   000001 335007                    LCA     1,DL
         4 000733   000000 755000 xsym               STA     SWAP_PTR

      473     2817    2       CURR_OWNER = 0; /* AND INIT SOME OTHER COUNTERS */

   2817  4 000734   000040 450000 0                  STZ     CURR_OWNER

      474     2818    3       DO SC_PTR=0 TO NO_SETS;

   2818  4 000735   000000 450000 xsym               STZ     SC_PTR
         4 000736   001023 710000 4                  TRA     s:2829+1

      475     2819    3           IF ZI$DIR.CODE=#REVERT THEN

   2819  4 000737   000125 236000 xsym               LDQ     ZI$DIR+85
         4 000740   000005 376000 5                  ANQ     5
         4 000741   000016 116000 5                  CMPQ    14
         4 000742   000753 601000 4                  TNZ     s:2821

      476     2820    3               SC_TBL.COUNT2(SC_PTR)=0;

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:101  
   2820  4 000743   000000 236000 xsym               LDQ     SC_PTR
         4 000744   000405 402007                    MPY     261,DL
         4 000745   000000 116003                    CMPQ    0,DU
         4 000746   000750 605000 4                  TPL     s:2820+5
         4 000747   000044 036003                    ADLQ    36,DU
         4 000750   003006 061400                    CSR     bolr='003'O
         4 000751   000000 000044 5                  BDSC    0                        by=0,bit=0,n=36
         4 000752   000006 050022 xsym               BDSC    SC_TBL+6,Q               by=0,bit=5,n=18

      477     2821    3           X = SC_TBL.COUNT(SC_PTR); /* SEE IF ANY *PA_REC ERASED */

   2821  4 000753   000000 236000 xsym               LDQ     SC_PTR
         4 000754   000405 402007                    MPY     261,DL
         4 000755   000000 116003                    CMPQ    0,DU
         4 000756   000760 605000 4                  TPL     s:2821+5
         4 000757   000044 036003                    ADLQ    36,DU
         4 000760   003000 060406                    CSL     bolr='003'O
         4 000761   000006 450022 xsym               BDSC    SC_TBL+6,Q               by=2,bit=5,n=18
         4 000762   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 000763   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 000764   000022 732000                    QRS     18
         4 000765   000000 756000 xsym               STQ     X

      478     2822    3           IF X~=0 THEN

   2822  4 000766   001022 600000 4                  TZE     s:2829

      479     2823    4           DO;

      480     2824    4               SC_TBL.COUNT(SC_PTR)=0; /* RESET TO 0 */

   2824  4 000767   000000 236000 xsym               LDQ     SC_PTR
         4 000770   000405 402007                    MPY     261,DL
         4 000771   000000 116003                    CMPQ    0,DU
         4 000772   000774 605000 4                  TPL     s:2824+5
         4 000773   000044 036003                    ADLQ    36,DU
         4 000774   003006 061400                    CSR     bolr='003'O
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:102  
         4 000775   000000 000044 5                  BDSC    0                        by=0,bit=0,n=36
         4 000776   000006 450022 xsym               BDSC    SC_TBL+6,Q               by=2,bit=5,n=18

      481     2825    4               CALL BIN_CHAR(1,X); /* CONVERT X TO CHAR */

   2825  4 000777   000010 630400 5                  EPPR0   8
         4 001000   000006 631400 5                  EPPR1   6
         4 001001   000000 701000 xent               TSX1    BIN_CHAR
         4 001002   000000 011000                    NOP     0

      482     2826    4               IF ZI$DIR.CODE~=#COMPACT AND ZI$DIR.CODE~=#REVERT THEN

   2826  4 001003   000125 236000 xsym               LDQ     ZI$DIR+85
         4 001004   000005 376000 5                  ANQ     5
         4 001005   000017 116000 5                  CMPQ    15
         4 001006   001022 600000 4                  TZE     s:2829
         4 001007   000016 116000 5                  CMPQ    14
         4 001010   001022 600000 4                  TZE     s:2829

      483     2827    4                   CALL ERROR_MSG(DBU#PASUM9,SC_TBL.NAME(SC_PTR));

   2827  4 001011   000000 236000 xsym               LDQ     SC_PTR
         4 001012   000014 402000 5                  MPY     12
         4 001013   000013 036000 5                  ADLQ    11
         4 001014   000021 235000 5                  LDA     17
         4 001015   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 001016   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 001017   000006 631400 5                  EPPR1   6
         4 001020   000000 701000 xent               TSX1    ERROR_MSG
         4 001021   000000 011000                    NOP     0

      484     2828    4               END;

      485     2829    3           END;

   2829  4 001022   000000 054000 xsym               AOS     SC_PTR
         4 001023   000000 236000 xsym               LDQ     SC_PTR
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:103  
         4 001024   000000 116000 xsym               CMPQ    NO_SETS
         4 001025   000737 604400 4                  TMOZ    s:2819

      486     2830    2   END INIT_CNTL_VARIABLES;

   2830  4 001026   000256 221200 0                  LDX1  ! PTR_TEMP+2
         4 001027   000001 702211                    TSX2  ! 1,X1

      487     2831        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:104  
      488     2832    1   FIND_A_MEMBER:
      489     2833        /*
      490     2834              NOW, A PA-MEMBER IS FOUND IN THE AREA.
      491     2835                   WE SHALL VERIFY ITS SIZE FIRST FOR SECURITY REASON
      492     2836              NOTE: THIS PA-MEMBER MAY BE A MEMBER FOR MORE THAN
      493     2837                    ONE POINTER  ARRAY SETS. IT IS REFLECTED IN THE LINKED LIST
      494     2838                    I.E. WHEN RC_TBL.NEXT FOR A REC IS NON-ZERO THEN THERE
      495     2839                    IS MORE THAN ONE RS(FOR PA) FOR THIS REC
      496     2840              SO WE WILL GET A RS AND RETRIEVE THE SORTED KEY TO MOVE
      497     2841                 TO SORT_REC.
      498     2842        */
      499     2843    1       SORT_REC.RC_PTR=RC_PTR;

   2843  4 001030   000001 470400 0     FIND_A_MEMB* LDP0    @SORT_REC
         4 001031   000100 101400                    MRL     fill='000'O
         4 001032   000000 000004 xsym               ADSC9   RC_PTR                   cn=0,n=4
         4 001033   000003 000001                    ADSC9   3,,PR0                   cn=0,n=1

      500     2844    1       SC_PTR = RC_TBL.SC_PTR(RC_PTR);

   2844  4 001034   000000 236000 xsym               LDQ     RC_PTR
         4 001035   000003 402007                    MPY     3,DL
         4 001036   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 001037   000022 772000                    QRL     18
         4 001040   000777 376007                    ANQ     511,DL
         4 001041   000000 756000 xsym               STQ     SC_PTR

      501     2845    1       SORT_REC.SC_PTR=SC_PTR; /* PASS TO SORT */

   2845  4 001042   000100 101400                    MRL     fill='000'O
         4 001043   000000 000004 xsym               ADSC9   SC_PTR                   cn=0,n=4
         4 001044   000003 400001                    ADSC9   3,,PR0                   cn=2,n=1

      502     2846    1       SORT_REC.AC_PTR=AC_PTR;

   2846  4 001045   000100 101400                    MRL     fill='000'O
         4 001046   000000 000004 xsym               ADSC9   AC_PTR                   cn=0,n=4
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:105  
         4 001047   000003 200001                    ADSC9   3,,PR0                   cn=1,n=1

      503     2847    1       IF SC_TBL.GLOBAL(SC_PTR)=0 THEN /* SET IS LOCAL */

   2847  4 001050   000405 402007                    MPY     261,DL
         4 001051   000000 116003                    CMPQ    0,DU
         4 001052   001054 605000 4                  TPL     s:2847+4
         4 001053   000044 036003                    ADLQ    36,DU
         4 001054   003000 061406                    CSR     bolr='003'O
         4 001055   000005 640001 xsym               BDSC    SC_TBL+5,Q               by=3,bit=4,n=1
         4 001056   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 001057   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 001060   000000 116003                    CMPQ    0,DU
         4 001061   001067 601000 4                  TNZ     s:2850

      504     2848    1           BASE_DBK = AC_TBL.BASE_DBK(AC_PTR);

   2848  4 001062   000000 236000 xsym               LDQ     AC_PTR
         4 001063   000014 402007                    MPY     12,DL
         4 001064   000000 235006 xsym               LDA     AC_TBL,QL
         4 001065   000000 755000 xsym               STA     BASE_DBK
         4 001066   001070 710000 4                  TRA     s:2852

      505     2849    1       ELSE
      506     2850    1           BASE_DBK = 0; /* FOR GLOBAL SET DONT ADJUST POINTERS */

   2850  4 001067   000000 450000 xsym               STZ     BASE_DBK

      507     2851         /* NOW EXTRACT THE NEXT,PRIOR AND OWNER PTRS FROM MEMBER */
      508     2852    1       CALL GET_PTR(SORT_REC.N_PTR,RC_TBL.NXPNT_EIS(RC_PTR));

   2852  4 001070   000000 236000 xsym               LDQ     RC_PTR
         4 001071   000003 402003                    MPY     3,DU
         4 001072   000022 036000 5                  ADLQ    18
         4 001073   000001 235000 0                  LDA     @SORT_REC
         4 001074   000252 757000 0                  STAQ    PAENT_STK_SIZE+2
         4 001075   000003 701000 4                  TSX1    GET_PTR
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:106  
         4 001076   000000 011000                    NOP     0

      509     2853    1       IF ZI$DIR.CODE ~= #REBUILDPA THEN /* PRIOR PTR EXISTS */

   2853  4 001077   000125 236000 xsym               LDQ     ZI$DIR+85
         4 001100   000005 376000 5                  ANQ     5
         4 001101   000023 116000 5                  CMPQ    19
         4 001102   001110 600000 4                  TZE     s:2855

      510     2854    1           CALL GET_PTR2(SORT_REC.P_PTR);

   2854  4 001103   000001 236000 0                  LDQ     @SORT_REC
         4 001104   000001 036003                    ADLQ    1,DU
         4 001105   000252 756000 0                  STQ     PAENT_STK_SIZE+2
         4 001106   000017 701000 4                  TSX1    GET_PTR2
         4 001107   000000 011000                    NOP     0

      511     2855    1       CALL GET_PTR2(SORT_REC.O_PTR); /* ALL GET OWNER POINTER */

   2855  4 001110   000001 236000 0                  LDQ     @SORT_REC
         4 001111   000024 036000 5                  ADLQ    20
         4 001112   000252 756000 0                  STQ     PAENT_STK_SIZE+2
         4 001113   000017 701000 4                  TSX1    GET_PTR2
         4 001114   000000 011000                    NOP     0

      512     2856    1       IF ZI$DIR.CODE = #CONVERT THEN /* ZERO NEXT PTR */

   2856  4 001115   000125 236000 xsym               LDQ     ZI$DIR+85
         4 001116   000005 376000 5                  ANQ     5
         4 001117   000005 116003                    CMPQ    5,DU
         4 001120   001125 601000 4                  TNZ     s:2858

      513     2857    1           SORT_REC.N_PTR=0; /* SO THAT ALL MEMBERS WILL BE UPDATED */

   2857  4 001121   000001 470400 0                  LDP0    @SORT_REC
         4 001122   000100 100400                    MLR     fill='000'O
         4 001123   000000 000004 5                  ADSC9   0                        cn=0,n=4
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:107  
         4 001124   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

      514     2858    1       SORT_REC.MEMBER_DBK=(RB-1)*AC_TBL.LPP(AC_PTR)+

   2858  4 001125   000000 236000 xsym               LDQ     AC_PTR
         4 001126   000014 402007                    MPY     12,DL
         4 001127   000013 236006 xsym               LDQ     AC_TBL+11,QL
         4 001130   000032 772000                    QRL     26
         4 001131   000266 756000 0                  STQ     @FIND_TYPE+3
         4 001132   000000 236000 xsym               LDQ     RB
         4 001133   000001 136007                    SBLQ    1,DL
         4 001134   000266 402000 0                  MPY     @FIND_TYPE+3
         4 001135   000267 756000 0                  STQ     @FIND_TYPE+4
         4 001136   000000 236000 xsym               LDQ     AC_PTR
         4 001137   000014 402007                    MPY     12,DL
         4 001140   000000 620006                    EAX0    0,QL
         4 001141   000267 236000 0                  LDQ     @FIND_TYPE+4
         4 001142   000000 036010 xsym               ADLQ    AC_TBL,X0
         4 001143   000037 036000 0                  ADLQ    CURR_LN
         4 001144   000001 036007                    ADLQ    1,DL
         4 001145   000270 756000 0                  STQ     @FIND_TYPE+5
         4 001146   000001 470400 0                  LDP0    @SORT_REC
         4 001147   000100 100400                    MLR     fill='000'O
         4 001150   000270 000004 0                  ADSC9   @FIND_TYPE+5             cn=0,n=4
         4 001151   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4

      515     2859    1          AC_TBL.BASE_DBK(AC_PTR)+CURR_LN+1;
      516     2860    1       IF SORT_REC.O_PTR = 0 THEN /* REC NOT CONNECTED */

   2860  4 001152   000000 100500                    MLR     fill='000'O
         4 001153   000003 600004                    ADSC9   3,,PR0                   cn=3,n=4
         4 001154   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 001155   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 001156   000000 116003                    CMPQ    0,DU
         4 001157   001234 601000 4                  TNZ     s:2885

      517     2861    2       DO;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:108  

      518     2862    2           IF SUBSTR(COMMAND_TEXT,0,4)='CONV' THEN

   2862  4 001160   000000 236000 xsym               LDQ     COMMAND_TEXT
         4 001161   000000 116000 3                  CMPQ    0
         4 001162   001200 601000 4                  TNZ     s:2871

      519     2863    3           DO;

      520     2864    3               STK.NEXT(1)=0;

   2864  4 001163   000004 450000 xsym               STZ     STK+4

      521     2865    3               STK.PRIOR(1)=0;

   2865  4 001164   000005 450000 xsym               STZ     STK+5

      522     2866    3               KEY.TXT = SORT_REC.MEMBER_DBK;

   2866  4 001165   000000 100500                    MLR     fill='000'O
         4 001166   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4
         4 001167   000044 200004 0                  ADSC9   KEY                      cn=1,n=4

      523     2867    3               KEY.RC_PTR = RC_PTR;

   2867  4 001170   000000 236000 xsym               LDQ     RC_PTR
         4 001171   000022 736000                    QLS     18
         4 001172   000045 552020 0                  STBQ    KEY+1,'20'O

      524     2868    3               CALL M$WRITE(WRITE_TEMP) ALTRET(WRIT_ERR);

   2868  4 001173   000012 630400 0                  EPPR0   WRITE_TEMP
         4 001174   440001 713400                    CLIMB   alt,write
         4 001175   401400 401760                    pmme    nvectors=4
         4 001176   004144 702000 4                  TSX2    WRIT_ERR

      525     2869    3               REC_CNT=REC_CNT+1;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:109  

   2869  4 001177   000000 054000 xsym               AOS     REC_CNT

      526     2870    3               END; /* ALTHOUGH UNCONNECTED, WE HAVE TO CONVERT THE SIZE */

      527     2871    2           IF RC_TBL.MANUAL(RC_PTR)=0 THEN /* SM IS NOT MANUAL */

   2871  4 001200   000000 236000 xsym               LDQ     RC_PTR
         4 001201   000003 402007                    MPY     3,DL
         4 001202   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 001203   200000 316007                    CANQ    65536,DL
         4 001204   001226 601000 4                  TNZ     s:2876

      528     2872    3           DO; /* GIVE A WARNING MSG AND SKIP THIS RS */

      529     2873    3               CALL BIN_CHAR(1,SORT_REC.MEMBER_DBK);

   2873  4 001205   000001 236000 0                  LDQ     @SORT_REC
         4 001206   000002 036003                    ADLQ    2,DU
         4 001207   000010 235000 5                  LDA     8
         4 001210   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 001211   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 001212   000006 631400 5                  EPPR1   6
         4 001213   000000 701000 xent               TSX1    BIN_CHAR
         4 001214   000000 011000                    NOP     0

      530     2874    3               CALL ERROR_MSG(DBU#UNCMEM,SC_TBL.NAME(SC_PTR));

   2874  4 001215   000000 236000 xsym               LDQ     SC_PTR
         4 001216   000014 402000 5                  MPY     12
         4 001217   000013 036000 5                  ADLQ    11
         4 001220   000026 235000 5                  LDA     22
         4 001221   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 001222   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 001223   000006 631400 5                  EPPR1   6
         4 001224   000000 701000 xent               TSX1    ERROR_MSG
         4 001225   000000 011000                    NOP     0
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:110  

      531     2875    3               END;

      532     2876    2           RC_PTR = RC_TBL.RC_NEXT(RC_PTR);

   2876  4 001226   000000 236000 xsym               LDQ     RC_PTR
         4 001227   000003 402007                    MPY     3,DL
         4 001230   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 001231   000033 772000                    QRL     27
         4 001232   000000 756000 xsym               STQ     RC_PTR

      533     2877    2           GOTO CHECK_REC_TYPE;

   2877  4 001233   000544 710000 4                  TRA     CHECK_REC_TYPE

      534     2878         /*E* ERROR: ZIU-DBU#UNCMEM-C
      535     2879                 MESSAGE: Warning: Unconnected member of non-manual set "%U1" at DBK# %U2
      536     2880                                 found and ignored. Run REPAIR package to have it fixed. */
      537     2881    2           END;
      538     2882
      539     2883        /*    NOW MOVE KEYS IN DATA RECORD TO SORT_REC   */
      540     2884
      541     2885    1       REC2$ = ADDR(SORT_REC.KEY_LOC); /* DESTINATION PTR */

   2885  4 001234   000001 236000 0                  LDQ     @SORT_REC
         4 001235   000023 036000 5                  ADLQ    19
         4 001236   000000 756000 xsym               STQ     REC2$

      542     2886    1       KEY_PTR=RC_TBL.KEY_PTR(RC_PTR);

   2886  4 001237   000000 236000 xsym               LDQ     RC_PTR
         4 001240   000003 402007                    MPY     3,DL
         4 001241   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 001242   001777 376007                    ANQ     1023,DL
         4 001243   000000 756000 xsym               STQ     KEY_PTR

      543     2887    1       KEY_LEN = SC_TBL.PA_KEYSIZE(SC_PTR);
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:111  

   2887  4 001244   000000 236000 xsym               LDQ     SC_PTR
         4 001245   000405 402007                    MPY     261,DL
         4 001246   000000 116003                    CMPQ    0,DU
         4 001247   001251 605000 4                  TPL     s:2887+5
         4 001250   000044 036003                    ADLQ    36,DU
         4 001251   003000 061406                    CSR     bolr='003'O
         4 001252   000004 050011 xsym               BDSC    SC_TBL+4,Q               by=0,bit=5,n=9
         4 001253   000000 000044 xsym               BDSC    KEY_LEN                  by=0,bit=0,n=36

      544     2888    1       IF SC_TBL.SETYPE(SC_PTR)=0 THEN /* SET IS PA */

   2888  4 001254   000000 236000 xsym               LDQ     SC_PTR
         4 001255   000405 402007                    MPY     261,DL
         4 001256   000000 116003                    CMPQ    0,DU
         4 001257   001261 605000 4                  TPL     s:2888+5
         4 001260   000044 036003                    ADLQ    36,DU
         4 001261   003000 061406                    CSR     bolr='003'O
         4 001262   000004 000002 xsym               BDSC    SC_TBL+4,Q               by=0,bit=0,n=2
         4 001263   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 001264   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 001265   000000 116003                    CMPQ    0,DU
         4 001266   001335 601000 4                  TNZ     s:2902

      545     2889    2       DO;

      546     2890    2           SORT_REC.KEY_LOC=' '; /* INIT WITH BLANKS */

   2890  4 001267   000000 721000 xsym               LXL1    KEY_LEN
         4 001270   040140 100400                    MLR     fill='040'O
         4 001271   000027 000001 5                  ADSC9   23                       cn=0,n=1
         4 001272   000004 600011                    ADSC9   4,,PR0                   cn=3,n=*X1

      547     2891    2           KEY_PTR2 = SC_TBL.KEY_PTR(SC_PTR);

   2891  4 001273   000000 236000 xsym               LDQ     SC_PTR
         4 001274   000405 402007                    MPY     261,DL
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:112  
         4 001275   000000 116003                    CMPQ    0,DU
         4 001276   001300 605000 4                  TPL     s:2891+5
         4 001277   000044 036003                    ADLQ    36,DU
         4 001300   003000 061406                    CSR     bolr='003'O
         4 001301   000006 050022 xsym               BDSC    SC_TBL+6,Q               by=0,bit=5,n=18
         4 001302   000006 000044 0                  BDSC    KEY_PTR2                 by=0,bit=0,n=36

      548     2892    3           DO X=0 TO SC_TBL.NO_OF_KEYS(SC_PTR)-1;

   2892  4 001303   000000 450000 xsym               STZ     X
         4 001304   001321 710000 4                  TRA     s:2898+1

      549     2893    3               PRFR = KEY_TBL.EIS(KEY_PTR);

   2893  4 001305   000000 720000 xsym               LXL0    KEY_PTR
         4 001306   000000 235010 xsym               LDA     KEY_TBL,X0
         4 001307   000000 755000 xsym               STA     PRFR

      550     2894    3               PRFR2 = KEY_TBL.EIS(KEY_PTR2);

   2894  4 001310   000006 721000 0                  LXL1    KEY_PTR2
         4 001311   000000 235011 xsym               LDA     KEY_TBL,X1
         4 001312   000000 755000 xsym               STA     PRFR2

      551     2895    3               CALL ZIU$DBAMP; /* MOVE PA SORT KEYS FROM REC TO SORT_REC */

   2895  4 001313   000000 631400 5                  EPPR1   0
         4 001314   000000 701000 xent               TSX1    ZIU$DBAMP
         4 001315   000000 011000                    NOP     0

      552     2896    3               KEY_PTR=KEY_PTR+1;

   2896  4 001316   000000 054000 xsym               AOS     KEY_PTR

      553     2897    3               KEY_PTR2=KEY_PTR2+1;

   2897  4 001317   000006 054000 0                  AOS     KEY_PTR2
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:113  

      554     2898    3               END;

   2898  4 001320   000000 054000 xsym               AOS     X
         4 001321   000000 236000 xsym               LDQ     SC_PTR
         4 001322   000405 402007                    MPY     261,DL
         4 001323   000000 116003                    CMPQ    0,DU
         4 001324   001326 605000 4                  TPL     s:2898+6
         4 001325   000044 036003                    ADLQ    36,DU
         4 001326   003000 061406                    CSR     bolr='003'O
         4 001327   000005 500005 xsym               BDSC    SC_TBL+5,Q               by=2,bit=8,n=5
         4 001330   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 001331   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 001332   000000 116000 xsym               CMPQ    X
         4 001333   001305 605400 4                  TPNZ    s:2893

      555     2899    2           END;

   2899  4 001334   001362 710000 4                  TRA     s:2910

      556     2900    1       ELSE /* REGULAR SORTED SETS */
      557     2901    2       DO;

      558     2902    3           DO X=1 TO RC_TBL.NO_OF_KEYS(RC_PTR); /* EACH MEM HAS DIF #KEY */

   2902  4 001335   000001 235007                    LDA     1,DL
         4 001336   000000 755000 xsym               STA     X
         4 001337   001353 710000 4                  TRA     s:2907+1

      559     2903    3               PRFR = KEY_TBL.EIS(KEY_PTR);

   2903  4 001340   000000 720000 xsym               LXL0    KEY_PTR
         4 001341   000000 235010 xsym               LDA     KEY_TBL,X0
         4 001342   000000 755000 xsym               STA     PRFR

      560     2904    3               PRFR2= KEY_TBL.EIS(KEY_PTR+1);

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:114  
   2904  4 001343   000001 235010 xsym               LDA     KEY_TBL+1,X0
         4 001344   000000 755000 xsym               STA     PRFR2

      561     2905    3               CALL ZIU$DBAMP;

   2905  4 001345   000000 631400 5                  EPPR1   0
         4 001346   000000 701000 xent               TSX1    ZIU$DBAMP
         4 001347   000000 011000                    NOP     0

      562     2906    3               KEY_PTR=KEY_PTR+2;

   2906  4 001350   000002 236007                    LDQ     2,DL
         4 001351   000000 056000 xsym               ASQ     KEY_PTR

      563     2907    3               END;

   2907  4 001352   000000 054000 xsym               AOS     X
         4 001353   000000 236000 xsym               LDQ     RC_PTR
         4 001354   000003 402007                    MPY     3,DL
         4 001355   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 001356   000012 772000                    QRL     10
         4 001357   000077 376007                    ANQ     63,DL
         4 001360   000000 116000 xsym               CMPQ    X
         4 001361   001340 605000 4                  TPL     s:2903

      564     2908    2           END;

      565     2909
      566     2910    1       SORTREC_SIZE = LENGTHC(SORT_REC);

   2910  4 001362   000000 235000 xsym               LDA     KEY_LEN
         4 001363   000023 035007                    ADLA    19,DL
         4 001364   000002 470400 0                  LDP0    @SORTREC_SIZE
         4 001365   000000 755100                    STA     0,,PR0

      567     2911    1       RC_PTR = RC_TBL.RC_NEXT(RC_PTR); /* GET NEXT RS */

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:115  
   2911  4 001366   000000 236000 xsym               LDQ     RC_PTR
         4 001367   000003 402007                    MPY     3,DL
         4 001370   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 001371   000033 772000                    QRL     27
         4 001372   000000 756000 xsym               STQ     RC_PTR

      568     2912    1       RETURN; /* RETURN TO SORT */

   2912  4 001373   000000 221200 0                  LDX1  ! 0
         4 001374   000001 702211                    TSX2  ! 1,X1

      569     2913        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:116  
      570     2914    1   ZIU$PA_SORTOUT: ENTRY(SORT_REC,SORTREC_SIZE) ALTRET;

   2914  4 001375   000000 700200 xent  ZIU$PA_SORT* TSX0  ! X66_STATIC_2
         4 001376   000000 000002 0                  ZERO    0,2

      571     2915
      572     2916    1       IF SORTREC_SIZE = 0 THEN /* ALL RECORDS PROCESSED */

   2916  4 001377   000002 470400 0                  LDP0    @SORTREC_SIZE
         4 001400   000000 235100                    LDA     0,,PR0
         4 001401   001413 601000 4                  TNZ     s:2924

      573     2917    2       DO;

      574     2918    2           IF CURR_OWNER > 0 THEN /* CLEAN UP LAST SC */

   2918  4 001402   000040 236000 0                  LDQ     CURR_OWNER
         4 001403   001407 604400 4                  TMOZ    s:2920

      575     2919    2               CALL PA_CLEANUP ALTRET(WRIT_ERR);

   2919  4 001404   000000 631400 5                  EPPR1   0
         4 001405   000000 701000 xent               TSX1    PA_CLEANUP
         4 001406   004144 702000 4                  TSX2    WRIT_ERR

      576     2920    2           CALL FLUSH_PAGES; /* FLUSH ALL BUFFERS IN POOL */

   2920  4 001407   000000 631400 5                  EPPR1   0
         4 001410   000000 701000 xent               TSX1    FLUSH_PAGES
         4 001411   000000 011000                    NOP     0

      577     2921    2           GOTO COMMON_RETURN;

   2921  4 001412   002266 710000 4                  TRA     COMMON_RETURN

      578     2922    2           END;
      579     2923
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:117  
      580     2924    1       IF CURR_OWNER ~= SORT_REC.O_PTR OR SC_PTR ~= SORT_REC.SC_PTR THEN

   2924  4 001413   000001 471400 0                  LDP1    @SORT_REC
         4 001414   000000 100500                    MLR     fill='000'O
         4 001415   100003 600004                    ADSC9   3,,PR1                   cn=3,n=4
         4 001416   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 001417   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 001420   001431 604000 4                  TMI     s:2926
         4 001421   000040 116000 0                  CMPQ    CURR_OWNER
         4 001422   001431 601000 4                  TNZ     s:2926
         4 001423   000000 101500                    MRL     fill='000'O
         4 001424   100003 400001                    ADSC9   3,,PR1                   cn=2,n=1
         4 001425   000267 000004 0                  ADSC9   @FIND_TYPE+4             cn=0,n=4
         4 001426   000267 236000 0                  LDQ     @FIND_TYPE+4
         4 001427   000000 116000 xsym               CMPQ    SC_PTR
         4 001430   001664 600000 4                  TZE     s:2975

      581     2925    2       DO;

      582     2926    2           IF CURR_OWNER > 0 THEN /* SHALL CLEANUP LAST SC */

   2926  4 001431   000040 235000 0                  LDA     CURR_OWNER
         4 001432   001436 604400 4                  TMOZ    s:2928

      583     2927    2               CALL PA_CLEANUP ALTRET(WRIT_ERR);

   2927  4 001433   000000 631400 5                  EPPR1   0
         4 001434   000000 701000 xent               TSX1    PA_CLEANUP
         4 001435   004144 702000 4                  TSX2    WRIT_ERR

      584     2928    2           IF CURR_OWNER~=SORT_REC.O_PTR THEN /* OWNER CHANGED */

   2928  4 001436   000001 470400 0                  LDP0    @SORT_REC
         4 001437   000000 100500                    MLR     fill='000'O
         4 001440   000003 600004                    ADSC9   3,,PR0                   cn=3,n=4
         4 001441   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 001442   000266 236000 0                  LDQ     @FIND_TYPE+3
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:118  
         4 001443   001446 604000 4                  TMI     s:2930
         4 001444   000040 116000 0                  CMPQ    CURR_OWNER
         4 001445   001510 600000 4                  TZE     s:2944

      585     2929    3           DO;

      586     2930    3               CURR_OWNER = SORT_REC.O_PTR; /* A NEW OWNER */

   2930  4 001446   000000 100500                    MLR     fill='000'O
         4 001447   000003 600004                    ADSC9   3,,PR0                   cn=3,n=4
         4 001450   000040 000004 0                  ADSC9   CURR_OWNER               cn=0,n=4

      587     2931    3               X=1; /* SEARCH FOR THE AC_PTR FOR THIS OWNER */

   2931  4 001451   000001 235007                    LDA     1,DL
         4 001452   000000 755000 xsym               STA     X

      588     2932    4               DO WHILE(CURR_OWNER>AC_TBL.BASE_DBK(X) AND X<=NO_AREAS);

   2932  4 001453   001455 710000 4                  TRA     s:2934

      589     2933    4                   X=X+1;

   2933  4 001454   000000 054000 xsym               AOS     X

      590     2934    4                   END;

   2934  4 001455   000000 236000 xsym               LDQ     X
         4 001456   000014 402007                    MPY     12,DL
         4 001457   000000 236006 xsym               LDQ     AC_TBL,QL
         4 001460   001466 604000 4                  TMI     s:2935
         4 001461   000040 116000 0                  CMPQ    CURR_OWNER
         4 001462   001466 605000 4                  TPL     s:2935
         4 001463   000000 236000 xsym               LDQ     X
         4 001464   000000 116000 xsym               CMPQ    NO_AREAS
         4 001465   001454 604400 4                  TMOZ    s:2933

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:119  
      591     2935    3               IF X-1 ~= AC_PTR THEN

   2935  4 001466   000000 236000 xsym               LDQ     X
         4 001467   000001 136007                    SBLQ    1,DL
         4 001470   000000 116000 xsym               CMPQ    AC_PTR
         4 001471   001510 600000 4                  TZE     s:2944

      592     2936    4               DO;

      593     2937    4                   CALL FLUSH_PAGES; /* AREA CHANGED */

   2937  4 001472   000000 631400 5                  EPPR1   0
         4 001473   000000 701000 xent               TSX1    FLUSH_PAGES
         4 001474   000000 011000                    NOP     0

      594     2938    4                   AC_PTR = X - 1; /* AC_PTR IS THE PROIR X */

   2938  4 001475   000000 235000 xsym               LDA     X
         4 001476   000001 135007                    SBLA    1,DL
         4 001477   000000 755000 xsym               STA     AC_PTR

      595     2939    4                   IF AC_TBL.DCB#(AC_PTR)=0 THEN

   2939  4 001500   000000 236000 xsym               LDQ     AC_PTR
         4 001501   000014 402007                    MPY     12,DL
         4 001502   000013 236006 xsym               LDQ     AC_TBL+11,QL
         4 001503   000377 316007                    CANQ    255,DL
         4 001504   001510 601000 4                  TNZ     s:2944

      596     2940    4                       CALL OPEN_AREA ALTRET(UN_WIND);

   2940  4 001505   000000 631400 5                  EPPR1   0
         4 001506   000000 701000 xent               TSX1    OPEN_AREA
         4 001507   001703 702000 4                  TSX2    UN_WIND

      597     2941    4                   END;

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:120  
      598     2942    3               END;

      599     2943
      600     2944    2           SC_PTR = SORT_REC.SC_PTR; /* AND START WORK FROM THIS SC */

   2944  4 001510   000001 470400 0                  LDP0    @SORT_REC
         4 001511   000000 101500                    MRL     fill='000'O
         4 001512   000003 400001                    ADSC9   3,,PR0                   cn=2,n=1
         4 001513   000000 000004 xsym               ADSC9   SC_PTR                   cn=0,n=4

      601     2945    2           IF SC_TBL.GLOBAL(SC_PTR)=0 THEN /* SET IS LOCAL */

   2945  4 001514   000000 236000 xsym               LDQ     SC_PTR
         4 001515   000405 402007                    MPY     261,DL
         4 001516   000000 116003                    CMPQ    0,DU
         4 001517   001521 605000 4                  TPL     s:2945+5
         4 001520   000044 036003                    ADLQ    36,DU
         4 001521   003000 061406                    CSR     bolr='003'O
         4 001522   000005 640001 xsym               BDSC    SC_TBL+5,Q               by=3,bit=4,n=1
         4 001523   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 001524   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 001525   000000 116003                    CMPQ    0,DU
         4 001526   001534 601000 4                  TNZ     s:2948

      602     2946    2               BASE_DBK = AC_TBL.BASE_DBK(AC_PTR);

   2946  4 001527   000000 236000 xsym               LDQ     AC_PTR
         4 001530   000014 402007                    MPY     12,DL
         4 001531   000000 235006 xsym               LDA     AC_TBL,QL
         4 001532   000000 755000 xsym               STA     BASE_DBK
         4 001533   001535 710000 4                  TRA     s:2949

      603     2947    2           ELSE
      604     2948    2               BASE_DBK = 0; /* FOR GLOBAL SET DONT ADJUST POINTERS */

   2948  4 001534   000000 450000 xsym               STZ     BASE_DBK

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:121  
      605     2949    2           RC_PTR = SC_TBL.RC_PTR(SC_PTR); /* PASS RC OF OWNER */

   2949  4 001535   000000 236000 xsym               LDQ     SC_PTR
         4 001536   000405 402007                    MPY     261,DL
         4 001537   000000 116003                    CMPQ    0,DU
         4 001540   001542 605000 4                  TPL     s:2949+5
         4 001541   000044 036003                    ADLQ    36,DU
         4 001542   003000 061406                    CSR     bolr='003'O
         4 001543   000005 650011 xsym               BDSC    SC_TBL+5,Q               by=3,bit=5,n=9
         4 001544   000000 000044 xsym               BDSC    RC_PTR                   by=0,bit=0,n=36

      606     2950    2           CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK); /* FIND OWNER FIRST */

   2950  4 001545   000031 630400 5                  EPPR0   25
         4 001546   000006 631400 5                  EPPR1   6
         4 001547   000000 701000 xent               TSX1    FIND_DIRECT
         4 001550   000000 011000                    NOP     0

      607     2951    2           IF PA_REC.TYPE~=RC_TBL.TYPE(RC_PTR) THEN

   2951  4 001551   000000 236000 xsym               LDQ     RC_PTR
         4 001552   000003 402007                    MPY     3,DL
         4 001553   000001 236006 xsym               LDQ     RC_TBL+1,QL
         4 001554   000022 772000                    QRL     18
         4 001555   000266 756000 0                  STQ     @FIND_TYPE+3
         4 001556   000000 470400 xsym               LDP0    REC$
         4 001557   003000 061500                    CSR     bolr='003'O
         4 001560   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12
         4 001561   000267 000044 0                  BDSC    @FIND_TYPE+4             by=0,bit=0,n=36
         4 001562   000267 236000 0                  LDQ     @FIND_TYPE+4
         4 001563   000266 116000 0                  CMPQ    @FIND_TYPE+3
         4 001564   001605 600000 4                  TZE     s:2958

      608     2952    3           DO;

      609     2953    3               CALL BIN_CHAR(2,CURR_OWNER);

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:122  
   2953  4 001565   000034 630400 5                  EPPR0   28
         4 001566   000006 631400 5                  EPPR1   6
         4 001567   000000 701000 xent               TSX1    BIN_CHAR
         4 001570   000000 011000                    NOP     0

      610     2954    3               CALL ERROR_MSG(DBU#PABADOWNR,SC_TBL.NAME(SC_PTR),COMMAND_TEXT);

   2954  4 001571   000040 236000 5                  LDQ     32
         4 001572   000270 756000 0                  STQ     @FIND_TYPE+5
         4 001573   000000 236000 xsym               LDQ     SC_PTR
         4 001574   000014 402000 5                  MPY     12
         4 001575   000013 036000 5                  ADLQ    11
         4 001576   000041 235000 5                  LDA     33
         4 001577   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 001600   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 001601   000036 631400 5                  EPPR1   30
         4 001602   000000 701000 xent               TSX1    ERROR_MSG
         4 001603   000000 011000                    NOP     0

      611     2955    3               GOTO UN_WIND;

   2955  4 001604   001703 710000 4                  TRA     UN_WIND

      612     2956    3               END;
      613     2957         /* LOAD NEXT PTR OF OWNER,LATER TO CHECK IF NEED UPDATED */
      614     2958    2           IF ZI$DIR.CODE=#CONVERT THEN

   2958  4 001605   000125 236000 xsym               LDQ     ZI$DIR+85
         4 001606   000005 376000 5                  ANQ     5
         4 001607   000005 116003                    CMPQ    5,DU
         4 001610   001613 601000 4                  TNZ     s:2961

      615     2959    2               STK.NEXT(0)=0; /* WHEN CONVERTNG, OWNER MUST BE UPDATED */

   2959  4 001611   000000 450000 xsym               STZ     STK
         4 001612   001622 710000 4                  TRA     s:2962

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:123  
      616     2960    2           ELSE
      617     2961    2               CALL GET_PTR(STK.NEXT(0),RC_TBL.NXPNT_EIS(RC_PTR));

   2961  4 001613   000000 236000 xsym               LDQ     RC_PTR
         4 001614   000003 402003                    MPY     3,DU
         4 001615   000022 036000 5                  ADLQ    18
         4 001616   000042 235000 5                  LDA     34
         4 001617   000252 757000 0                  STAQ    PAENT_STK_SIZE+2
         4 001620   000003 701000 4                  TSX1    GET_PTR
         4 001621   000000 011000                    NOP     0

      618     2962    2           KEY_LEN = SC_TBL.PA_KEYSIZE(SC_PTR); /* SETUP KEY_SIZE */

   2962  4 001622   000000 236000 xsym               LDQ     SC_PTR
         4 001623   000405 402007                    MPY     261,DL
         4 001624   000000 116003                    CMPQ    0,DU
         4 001625   001627 605000 4                  TPL     s:2962+5
         4 001626   000044 036003                    ADLQ    36,DU
         4 001627   003000 061406                    CSR     bolr='003'O
         4 001630   000004 050011 xsym               BDSC    SC_TBL+4,Q               by=0,bit=5,n=9
         4 001631   000000 000044 xsym               BDSC    KEY_LEN                  by=0,bit=0,n=36

      619     2963    2           PTR_LEN = SC_TBL.PA_PTRSIZE(SC_PTR);

   2963  4 001632   000000 236000 xsym               LDQ     SC_PTR
         4 001633   000405 402007                    MPY     261,DL
         4 001634   000000 116003                    CMPQ    0,DU
         4 001635   001637 605000 4                  TPL     s:2963+5
         4 001636   000044 036003                    ADLQ    36,DU
         4 001637   003000 061406                    CSR     bolr='003'O
         4 001640   000004 020003 xsym               BDSC    SC_TBL+4,Q               by=0,bit=2,n=3
         4 001641   000000 000044 xsym               BDSC    PTR_LEN                  by=0,bit=0,n=36

      620     2964    2           ENTRY_LEN=2+KEY_LEN+PTR_LEN;

   2964  4 001642   000000 236000 xsym               LDQ     KEY_LEN
         4 001643   000000 036000 xsym               ADLQ    PTR_LEN
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:124  
         4 001644   000002 036007                    ADLQ    2,DL
         4 001645   000003 756000 0                  STQ     ENTRY_LEN

      621     2965    2           NO_OF_LEVELS=-1; /* REBUILD PA ,SO START FROM SCRATCH */

   2965  4 001646   000001 335007                    LCA     1,DL
         4 001647   000004 755000 0                  STA     NO_OF_LEVELS

      622     2966    2           LEVEL# = 0;

   2966  4 001650   000005 450000 0                  STZ     LEVEL#

      623     2967    2           IF ZI$DIR.INSERT_DUMMY THEN /* FOR GCOS PURPOSE */

   2967  4 001651   000126 236000 xsym               LDQ     ZI$DIR+86
         4 001652   100000 316003                    CANQ    32768,DU
         4 001653   001664 600000 4                  TZE     s:2975

      624     2968    3           DO;

      625     2969    3               STK.CURR(1)=CURR_OWNER; /* DUMMY POINT TO OWNER */

   2969  4 001654   000040 235000 0                  LDA     CURR_OWNER
         4 001655   000006 755000 xsym               STA     STK+6

      626     2970    3               STK.RC_PTR(1)=RC_PTR; /* PASS OWNER TYPE */

   2970  4 001656   000000 236000 xsym               LDQ     RC_PTR
         4 001657   000033 736000                    QLS     27
         4 001660   000007 552040 xsym               STBQ    STK+7,'40'O

      627     2971    3               CALL STORE_AN_ENTRY ALTRET(WRIT_ERR); /* AND USE IT AS FIRST KEY */

   2971  4 001661   000000 631400 5                  EPPR1   0
         4 001662   000000 701000 xent               TSX1    STORE_AN_ENTRY
         4 001663   004144 702000 4                  TSX2    WRIT_ERR

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:125  
      628     2972    3               END;

      629     2973    2           END;

      630     2974
      631     2975    1       STK(1)=SORT_REC; /* PASS MEMBER'S INFO TO STORE_AN_ENTRY */

   2975  4 001664   000000 720000 xsym               LXL0    KEY_LEN
         4 001665   000023 621010                    EAX1    19,X0
         4 001666   000001 470400 0                  LDP0    @SORT_REC
         4 001667   000000 100540                    MLR     fill='000'O
         4 001670   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         4 001671   000004 000016 xsym               ADSC9   STK+4                    cn=0,n=14

      632     2976
      633     2977    1       CALL STORE_AN_ENTRY(SORT_REC.KEY_LOC) ALTRET(WRIT_ERR);

   2977  4 001672   000001 236000 0                  LDQ     @SORT_REC
         4 001673   000023 036000 5                  ADLQ    19
         4 001674   000266 756000 0                  STQ     @FIND_TYPE+3
         4 001675   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 001676   000043 631400 5                  EPPR1   35
         4 001677   000000 701000 xent               TSX1    STORE_AN_ENTRY
         4 001700   004144 702000 4                  TSX2    WRIT_ERR

      634     2978
      635     2979    1       RETURN;

   2979  4 001701   000000 221200 0                  LDX1  ! 0
         4 001702   000001 702211                    TSX2  ! 1,X1

      636     2980
      637     2981    1   UN_WIND: UNWIND TO BREAK_CLEANUP;

   2981  4 001703   000000 100600       UN_WIND      MLR   ! fill='000'O
         4 001704   000007 000010 0                  ADSC9   BREAK_CLEANUP            cn=0,n=8
         4 001705   000266 000010 0                  ADSC9   @FIND_TYPE+3             cn=0,n=8
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:126  
         4 001706   000266 237200 0                  LDAQ  ! @FIND_TYPE+3
         4 001707   000000 700200 xent               TSX0  ! X66_SUNWIND
         4 001710   000000 000200                    ZERO    0,128

      638     2982
      639     2983        /*E*  ERROR: ZIU-DBU#PABADOWNR-C
      640     2984        MESSAGE: Error: The type of the record at DBK# %U3 is not an owner
      641     2985                        for the set "%U1".  %U2 aborted.
      642     2986                        Broken set is suspected. Run REPAIR to have it fixed. */
      643     2987        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:127  
      644     2988        /*
      645     2989              ENTRY POINT IF COMMAND IS   COMPACT
      646     2990        */
      647     2991    1   ZIU$PA_PACK: ENTRY ALTRET;

   2991  4 001711   000000 700200 xent  ZIU$PA_PACK  TSX0  ! X66_STATIC_2
         4 001712   000000 000002 0                  ZERO    0,2

      648     2992
      649     2993    1       CALL INIT_CNTL_VARIABLES ALTRET(ALT_OPEN); /* INIT BUF CONTROL */

   2993  4 001713   000730 701000 4                  TSX1    INIT_CNTL_VARIABLES
         4 001714   004207 702000 4                  TSX2    ALT_OPEN

      650     2994    1       OSTK$ = ADDR(I_O_BUF(2*NBUFS));

   2994  4 001715   000000 236000 xsym               LDQ     NBUFS
         4 001716   000035 736000                    QLS     29
         4 001717   000000 036000 xsym               ADLQ    I_O_BUF$
         4 001720   000246 756000 0                  STQ     OSTK$

      651     2995         /*
      652     2996            I_O_BUF(0 UPTO 2*NBUFS) ARE USED BY BUFFER POOL
      653     2997            (2*NBUFS UPTO OWNER_CNT/1024+1) ARE USED TO SAVE ALL OWNER
      654     2998            (WHATEVER LEFT=2*KCNT-2*NBUFS) ARE USED TO SAVE PA ENTRIES
      655     2999         */
      656     3000    2       DO AC_PTR=0 TO NO_AREAS; /* FIRST LOOP, GO THRU AREAS */

   3000  4 001721   000000 450000 xsym               STZ     AC_PTR
         4 001722   002263 710000 4                  TRA     s:3065+1

      657     3001    2           IF AC_TBL.RANGE_HIGH(AC_PTR)>0 THEN /* OWNER IN AC */

   3001  4 001723   000000 236000 xsym               LDQ     AC_PTR
         4 001724   000014 402007                    MPY     12,DL
         4 001725   000002 235006 xsym               LDA     AC_TBL+2,QL
         4 001726   002262 604400 4                  TMOZ    s:3065
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:128  

      658     3002    3           DO;

      659     3003    3               RB=AC_TBL.RANGE_LOW(AC_PTR); /* STARTING PAGE # TO SEARCH */

   3003  4 001727   000001 235006 xsym               LDA     AC_TBL+1,QL
         4 001730   000000 755000 xsym               STA     RB

      660     3004    4               DO WHILE(RB <= AC_TBL.RANGE_HIGH(AC_PTR));

   3004  4 001731   000002 236006 xsym               LDQ     AC_TBL+2,QL
         4 001732   002262 604000 4                  TMI     s:3065
         4 001733   000000 116000 xsym               CMPQ    RB
         4 001734   002262 602000 4                  TNC     s:3065

      661     3005    4                   DCBSF=AC_TBL.DCB#(AC_PTR);

   3005  4 001735   000000 236000 xsym               LDQ     AC_PTR
         4 001736   000014 402007                    MPY     12,DL
         4 001737   000013 720006 xsym               LXL0    AC_TBL+11,QL
         4 001740   000377 360003                    ANX0    255,DU
         4 001741   000000 740000 xsym               STX0    DCBSF

      662     3006    4                   OUT_INDX=AC_TBL.RANGE_HIGH(AC_PTR)-RB+1;

   3006  4 001742   000002 236006 xsym               LDQ     AC_TBL+2,QL
         4 001743   000000 136000 xsym               SBLQ    RB
         4 001744   000001 036007                    ADLQ    1,DL
         4 001745   000000 756000 xsym               STQ     OUT_INDX

      663     3007    4                   IF OUT_INDX>2*NBUFS THEN /* READ 2*NBUFS PAGES AT A TIME */

   3007  4 001746   000000 236000 xsym               LDQ     NBUFS
         4 001747   000001 736000                    QLS     1
         4 001750   000000 116000 xsym               CMPQ    OUT_INDX
         4 001751   001753 605000 4                  TPL     s:3009

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:129  
      664     3008    4                       OUT_INDX=2*NBUFS;

   3008  4 001752   000000 756000 xsym               STQ     OUT_INDX

      665     3009    4                   CALL READ_DB(0,RB,OUT_INDX) ALTRET(UN_WIND);

   3009  4 001753   000044 630400 5                  EPPR0   36
         4 001754   000036 631400 5                  EPPR1   30
         4 001755   000000 701000 xent               TSX1    READ_DB
         4 001756   001703 702000 4                  TSX2    UN_WIND

      666     3010    4                   OWNER_CNT=-1; /* PUSH ALL OWNER FOUND */

   3010  4 001757   000001 335007                    LCA     1,DL
         4 001760   000036 755000 0                  STA     OWNER_CNT

      667     3011    5                   DO X=0 TO OUT_INDX-1; /* LOOP THRU PAGES */

   3011  4 001761   000000 450000 xsym               STZ     X
         4 001762   002207 710000 4                  TRA     s:3047+1

      668     3012    5                       DATA$=ADDR(I_O_BUF(X));

   3012  4 001763   000000 236000 xsym               LDQ     X
         4 001764   000034 736000                    QLS     28
         4 001765   000000 036000 xsym               ADLQ    I_O_BUF$
         4 001766   000000 756000 xsym               STQ     DATA$

      669     3013    5                       POOL.PAGE#(X)=RB+X; /* UPDATE BUF CONTROL TABLE */

   3013  4 001767   000000 236000 xsym               LDQ     RB
         4 001770   000000 036000 xsym               ADLQ    X
         4 001771   000000 720000 xsym               LXL0    X
         4 001772   000000 676010 xsym               ERQ     POOL,X0
         4 001773   000047 376000 5                  ANQ     39
         4 001774   000000 656010 xsym               ERSQ    POOL,X0

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:130  
      670     3014    5                       POOL.LOCKS(X)=0;

   3014  4 001775   000050 236000 5                  LDQ     40
         4 001776   000000 356010 xsym               ANSQ    POOL,X0

      671     3015    5                       POOL.MUST_WRITE(X)='0'B;

   3015  4 001777   000051 236000 5                  LDQ     41
         4 002000   000000 356010 xsym               ANSQ    POOL,X0

      672     3016    6                       DO CURR_LN=0 TO DATA_PG.OFF_LN.SEC; /* LOOP THRU LINES */

   3016  4 002001   000037 450000 0                  STZ     CURR_LN
         4 002002   002201 710000 4                  TRA     s:3046+1

      673     3017    6                           IF DATA_PG.ACT_DATA_18(2035-CURR_LN)>=12 THEN

   3017  4 002003   000037 335000 0                  LCA     CURR_LN
         4 002004   000001 735000                    ALS     1
         4 002005   000000 470400 xsym               LDP0    DATA$
         4 002006   000000 100505                    MLR     fill='000'O
         4 002007   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         4 002010   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 002011   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002012   000022 732000                    QRS     18
         4 002013   000014 116007                    CMPQ    12,DL
         4 002014   002200 604000 4                  TMI     s:3046

      674     3018    7                           DO; /* FIND A RECORD, CHECK RECORD TYPE */

      675     3019    7                               REC$=PINCRC(DATA$,DATA_PG.OFFSET(2035-CURR_LN)+12);

   3019  4 002015   000000 101505                    MRL     fill='000'O
         4 002016   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         4 002017   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 002020   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002021   000020 736000                    QLS     16
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:131  
         4 002022   000003 036003                    ADLQ    3,DU
         4 002023   000000 036000 xsym               ADLQ    DATA$
         4 002024   000000 756000 xsym               STQ     REC$

      676     3020    7                               IF ZI$DIR.CODE=#REVERT AND KEY_PTR>=0 THEN

   3020  4 002025   000125 236000 xsym               LDQ     ZI$DIR+85
         4 002026   000005 376000 5                  ANQ     5
         4 002027   000016 116000 5                  CMPQ    14
         4 002030   002134 601000 4                  TNZ     s:3038
         4 002031   000000 235000 xsym               LDA     KEY_PTR
         4 002032   002134 604000 4                  TMI     s:3038

      677     3021    8                               DO Y=0 TO KEY_PTR;

   3021  4 002033   000033 450000 0                  STZ     Y
         4 002034   002131 710000 4                  TRA     s:3037+1

      678     3022    8                                   RC_PTR=KEY_TBL.EIS(Y); /* ALL MANUAL RS */

   3022  4 002035   000033 720000 0                  LXL0    Y
         4 002036   000000 235010 xsym               LDA     KEY_TBL,X0
         4 002037   000000 755000 xsym               STA     RC_PTR

      679     3023    8                                   IF RC_TBL.TYPE(RC_PTR)=PA_REC.TYPE THEN

   3023  4 002040   000000 470400 xsym               LDP0    REC$
         4 002041   003000 061500                    CSR     bolr='003'O
         4 002042   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12
         4 002043   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 002044   000000 236000 xsym               LDQ     RC_PTR
         4 002045   000003 402007                    MPY     3,DL
         4 002046   000001 236006 xsym               LDQ     RC_TBL+1,QL
         4 002047   000022 772000                    QRL     18
         4 002050   000266 116000 0                  CMPQ    @FIND_TYPE+3
         4 002051   002130 601000 4                  TNZ     s:3037

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:132  
      680     3024    9                                   DO;

      681     3025    9                                      CALL GET_PTR(STK.NEXT(1),RC_TBL.NXPNT_EIS(RC_PTR
              3025                                                ));

   3025  4 002052   000000 236000 xsym               LDQ     RC_PTR
         4 002053   000003 402003                    MPY     3,DU
         4 002054   000022 036000 5                  ADLQ    18
         4 002055   000052 235000 5                  LDA     42
         4 002056   000252 757000 0                  STAQ    PAENT_STK_SIZE+2
         4 002057   000003 701000 4                  TSX1    GET_PTR
         4 002060   000000 011000                    NOP     0

      682     3026    9                                       CALL GET_PTR2(STK.PRIOR(1));

   3026  4 002061   000053 236000 5                  LDQ     43
         4 002062   000252 756000 0                  STQ     PAENT_STK_SIZE+2
         4 002063   000017 701000 4                  TSX1    GET_PTR2
         4 002064   000000 011000                    NOP     0

      683     3027    9                                       IF STK.NEXT(1)=0 AND STK.PRIOR(1)=0 THEN

   3027  4 002065   000004 235000 xsym               LDA     STK+4
         4 002066   002130 601000 4                  TNZ     s:3037
         4 002067   000005 236000 xsym               LDQ     STK+5
         4 002070   002130 601000 4                  TNZ     s:3037

      684     3028   10                                       DO;

      685     3029   10                                           KEY.RC_PTR=RC_PTR;

   3029  4 002071   000000 236000 xsym               LDQ     RC_PTR
         4 002072   000022 736000                    QLS     18
         4 002073   000045 552020 0                  STBQ    KEY+1,'20'O

      686     3030   10                                           KEY.TXT=(RB+X-1)*AC_TBL.LPP(AC_PTR)

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:133  
   3030  4 002074   000000 236000 xsym               LDQ     RB
         4 002075   000000 036000 xsym               ADLQ    X
         4 002076   000266 756000 0                  STQ     @FIND_TYPE+3
         4 002077   000000 236000 xsym               LDQ     AC_PTR
         4 002100   000014 402007                    MPY     12,DL
         4 002101   000013 236006 xsym               LDQ     AC_TBL+11,QL
         4 002102   000032 772000                    QRL     26
         4 002103   000267 756000 0                  STQ     @FIND_TYPE+4
         4 002104   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002105   000001 136007                    SBLQ    1,DL
         4 002106   000267 402000 0                  MPY     @FIND_TYPE+4
         4 002107   000270 756000 0                  STQ     @FIND_TYPE+5
         4 002110   000000 236000 xsym               LDQ     AC_PTR
         4 002111   000014 402007                    MPY     12,DL
         4 002112   000000 620006                    EAX0    0,QL
         4 002113   000270 236000 0                  LDQ     @FIND_TYPE+5
         4 002114   000000 036010 xsym               ADLQ    AC_TBL,X0
         4 002115   000037 036000 0                  ADLQ    CURR_LN
         4 002116   000001 036007                    ADLQ    1,DL
         4 002117   000271 756000 0                  STQ     @FIND_TYPE+6
         4 002120   000000 100400                    MLR     fill='000'O
         4 002121   000271 000004 0                  ADSC9   @FIND_TYPE+6             cn=0,n=4
         4 002122   000044 200004 0                  ADSC9   KEY                      cn=1,n=4

      687     3031   10                                              +AC_TBL.BASE_DBK(AC_PTR)
      688     3032   10                                              +CURR_LN+1;
      689     3033   10                                           CALL M$WRITE(WRITE_TEMP) ALTRET(WRIT_ERR);

   3033  4 002123   000012 630400 0                  EPPR0   WRITE_TEMP
         4 002124   440001 713400                    CLIMB   alt,write
         4 002125   401400 401760                    pmme    nvectors=4
         4 002126   004144 702000 4                  TSX2    WRIT_ERR

      690     3034   10                                           REC_CNT=REC_CNT+1;

   3034  4 002127   000000 054000 xsym               AOS     REC_CNT

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:134  
      691     3035   10                                           END; /* PATCH RECORD FOR UNCONNECTED MEM */

      692     3036    9                                       END; /* CHK IF THIS IS MANUAL MEMBER */

      693     3037    8                                   END; /* IF ANY MANUAL MEMBER EXISTS */

   3037  4 002130   000033 054000 0                  AOS     Y
         4 002131   000033 236000 0                  LDQ     Y
         4 002132   000000 116000 xsym               CMPQ    KEY_PTR
         4 002133   002035 604400 4                  TMOZ    s:3022

      694     3038    7                               IF TYPE.MSTRINDX(PA_REC.TYPE) > 0 THEN

   3038  4 002134   000000 470400 xsym               LDP0    REC$
         4 002135   003000 061500                    CSR     bolr='003'O
         4 002136   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12
         4 002137   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 002140   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002141   000001 736000                    QLS     1
         4 002142   000000 100406                    MLR     fill='000'O
         4 002143   000000 000002 xsym               ADSC9   TYPE,Q                   cn=0,n=2
         4 002144   000267 000004 0                  ADSC9   @FIND_TYPE+4             cn=0,n=4
         4 002145   000267 236000 0                  LDQ     @FIND_TYPE+4
         4 002146   000022 732000                    QRS     18
         4 002147   000000 116003                    CMPQ    0,DU
         4 002150   002200 604400 4                  TMOZ    s:3046

      695     3039    8                               DO;

      696     3040    8                                   OWNER_CNT=OWNER_CNT+1; /* FIND A OWNER */

   3040  4 002151   000036 054000 0                  AOS     OWNER_CNT

      697     3041    8                                   OWNER_STK(OWNER_CNT)=(RB+X-1)*AC_TBL.LPP(AC_PTR)

   3041  4 002152   000000 236000 xsym               LDQ     RB
         4 002153   000000 036000 xsym               ADLQ    X
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:135  
         4 002154   000266 756000 0                  STQ     @FIND_TYPE+3
         4 002155   000000 236000 xsym               LDQ     AC_PTR
         4 002156   000014 402007                    MPY     12,DL
         4 002157   000013 236006 xsym               LDQ     AC_TBL+11,QL
         4 002160   000032 772000                    QRL     26
         4 002161   000267 756000 0                  STQ     @FIND_TYPE+4
         4 002162   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002163   000001 136007                    SBLQ    1,DL
         4 002164   000267 402000 0                  MPY     @FIND_TYPE+4
         4 002165   000270 756000 0                  STQ     @FIND_TYPE+5
         4 002166   000000 236000 xsym               LDQ     AC_PTR
         4 002167   000014 402007                    MPY     12,DL
         4 002170   000000 620006                    EAX0    0,QL
         4 002171   000270 236000 0                  LDQ     @FIND_TYPE+5
         4 002172   000000 036010 xsym               ADLQ    AC_TBL,X0
         4 002173   000037 036000 0                  ADLQ    CURR_LN
         4 002174   000001 036007                    ADLQ    1,DL
         4 002175   000246 471400 0                  LDP1    OSTK$
         4 002176   000036 721000 0                  LXL1    OWNER_CNT
         4 002177   100000 756111                    STQ     0,X1,PR1

      698     3042    8                                      +AC_TBL.BASE_DBK(AC_PTR)
      699     3043    8                                      +CURR_LN+1;
      700     3044    8                                   END;

      701     3045    7                               END;

      702     3046    6                           END;

   3046  4 002200   000037 054000 0                  AOS     CURR_LN
         4 002201   000000 470400 xsym               LDP0    DATA$
         4 002202   000005 236100                    LDQ     5,,PR0
         4 002203   777777 376007                    ANQ     -1,DL
         4 002204   000037 116000 0                  CMPQ    CURR_LN
         4 002205   002003 605000 4                  TPL     s:3017

      703     3047    5                       END;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:136  

   3047  4 002206   000000 054000 xsym               AOS     X
         4 002207   000000 236000 xsym               LDQ     X
         4 002210   000000 116000 xsym               CMPQ    OUT_INDX
         4 002211   001763 604000 4                  TMI     s:3012

      704     3048    4                   POOL_MAX = OUT_INDX;

   3048  4 002212   000000 235000 xsym               LDA     OUT_INDX
         4 002213   000000 755000 xsym               STA     POOL_MAX

      705     3049    4                   PASTK$ = PINCRW(OSTK$,OWNER_CNT+1);

   3049  4 002214   000036 236000 0                  LDQ     OWNER_CNT
         4 002215   000022 736000                    QLS     18
         4 002216   000001 036003                    ADLQ    1,DU
         4 002217   000246 036000 0                  ADLQ    OSTK$
         4 002220   000247 756000 0                  STQ     PASTK$

      706     3050    5                   DO Y=0 TO OWNER_CNT; /* PROCESS EACH OWNER FOUND */

   3050  4 002221   000033 450000 0                  STZ     Y
         4 002222   002241 710000 4                  TRA     s:3059+1

      707     3051    5                       CURR_OWNER=OWNER_STK(Y); /* OWNER'S DBK */

   3051  4 002223   000246 470400 0                  LDP0    OSTK$
         4 002224   000033 720000 0                  LXL0    Y
         4 002225   000000 235110                    LDA     0,X0,PR0
         4 002226   000040 755000 0                  STA     CURR_OWNER

      708     3052
      709     3053    5                       IF ZI$DIR.CODE=#COMPACT THEN

   3053  4 002227   000125 236000 xsym               LDQ     ZI$DIR+85
         4 002230   000005 376000 5                  ANQ     5
         4 002231   000017 116000 5                  CMPQ    15
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:137  
         4 002232   002236 601000 4                  TNZ     s:3057

      710     3054    5                           CALL COMPACT_AN_OWNER ALTRET(WRIT_ERR);

   3054  4 002233   002277 701000 4                  TSX1    COMPACT_AN_OWNER
         4 002234   004144 702000 4                  TSX2    WRIT_ERR
         4 002235   002240 710000 4                  TRA     s:3059

      711     3055         /* WRIT PATCH FILE */
      712     3056    5                       ELSE
      713     3057    5                           CALL REVERT_AN_OWNER ALTRET(WRIT_ERR);

   3057  4 002236   003144 701000 4                  TSX1    REVERT_AN_OWNER
         4 002237   004144 702000 4                  TSX2    WRIT_ERR

      714     3058
      715     3059    5                       END;

   3059  4 002240   000033 054000 0                  AOS     Y
         4 002241   000033 236000 0                  LDQ     Y
         4 002242   000036 116000 0                  CMPQ    OWNER_CNT
         4 002243   002223 604400 4                  TMOZ    s:3051

      716     3060    4                   RB = RB+OUT_INDX; /* READ NEXT BLOCK IF ANY */

   3060  4 002244   000000 236000 xsym               LDQ     RB
         4 002245   000000 036000 xsym               ADLQ    OUT_INDX
         4 002246   000000 756000 xsym               STQ     RB

      717     3061    4                   IF OWNER_CNT > 0 THEN /* IF ANY OWNER FOUND IN LAST BLOCK */

   3061  4 002247   000036 235000 0                  LDA     OWNER_CNT
         4 002250   002254 604400 4                  TMOZ    s:3063

      718     3062    4                       CALL FLUSH_PAGES; /* MAY HAVE UPDATED SOME BUF */

   3062  4 002251   000000 631400 5                  EPPR1   0
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:138  
         4 002252   000000 701000 xent               TSX1    FLUSH_PAGES
         4 002253   000000 011000                    NOP     0

      719     3063    4                   END; /* DO WHILE END ALL PAGE IN AREA READ */

   3063  4 002254   000000 236000 xsym               LDQ     AC_PTR
         4 002255   000014 402007                    MPY     12,DL
         4 002256   000002 236006 xsym               LDQ     AC_TBL+2,QL
         4 002257   002262 604000 4                  TMI     s:3065
         4 002260   000000 116000 xsym               CMPQ    RB
         4 002261   001735 603000 4                  TRC     s:3005

      720     3064    3               END;

      721     3065    2           END; /* AREA LOOP DONE */

   3065  4 002262   000000 054000 xsym               AOS     AC_PTR
         4 002263   000000 236000 xsym               LDQ     AC_PTR
         4 002264   000000 116000 xsym               CMPQ    NO_AREAS
         4 002265   001723 604400 4                  TMOZ    s:3001

      722     3066
      723     3067    1   COMMON_RETURN: /* ALL GO THRU HERE TO RETURN TO ZIU$COMPACT */
      724     3068
      725     3069    1       IF REC_CNT > 0 THEN /* PATCH FILE EXISTS */

   3069  4 002266   000000 235000 xsym  COMMON_RETU* LDA     REC_CNT
         4 002267   002275 604400 4                  TMOZ    s:3074

      726     3070    2       DO;

      727     3071    2           DCBSF = DBKEY_SORT_DCB;

   3071  4 002270   000000 220000 xsym               LDX0    DBKEY_SORT_DCB
         4 002271   000000 740000 xsym               STX0    DCBSF

      728     3072    2           CALL SYS_FUNC_CLOS ALTRET(ALT_CLOS);
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:139  

   3072  4 002272   000000 631400 5                  EPPR1   0
         4 002273   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 002274   004207 702000 4                  TSX2    ALT_OPEN

      729     3073    2           END;

      730     3074    1       RETURN;

   3074  4 002275   000000 221200 0                  LDX1  ! 0
         4 002276   000001 702211                    TSX2  ! 1,X1

      731     3075        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:140  
      732     3076        /*
      733     3077              SUBR   COMPACT_A_OWNER  -  GO THRU ALL SC WHERE CURR OWNER
      734     3078                                         IS A OWNER RECORD.
      735     3079                                         FIND FIRST_PA IN LOWEST LEVEL
      736     3080                                         PUSH ALL ENTIES TO STACK THEN START
      737     3081                                         PLUG BACK IN
      738     3082        */
      739     3083    1   COMPACT_AN_OWNER: PROC ALTRET;

   3083  4 002277   000257 741200 0     COMPACT_AN_* STX1  ! PTR_TEMP+3

      740     3084
      741     3085    2       CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK); /* FIND OWNER */

   3085  4 002300   000031 630400 5                  EPPR0   25
         4 002301   000006 631400 5                  EPPR1   6
         4 002302   000000 701000 xent               TSX1    FIND_DIRECT
         4 002303   000000 011000                    NOP     0

      742     3086    2       RC_PTR=TYPE.MSTRINDX(PA_REC.TYPE); /* GET RO FOR OWNER */

   3086  4 002304   000000 470400 xsym               LDP0    REC$
         4 002305   003000 061500                    CSR     bolr='003'O
         4 002306   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12
         4 002307   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 002310   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002311   000001 736000                    QLS     1
         4 002312   000000 100406                    MLR     fill='000'O
         4 002313   000000 000002 xsym               ADSC9   TYPE,Q                   cn=0,n=2
         4 002314   000267 000004 0                  ADSC9   @FIND_TYPE+4             cn=0,n=4
         4 002315   000267 236000 0                  LDQ     @FIND_TYPE+4
         4 002316   000022 732000                    QRS     18
         4 002317   000000 756000 xsym               STQ     RC_PTR

      743     3087    3       DO WHILE(RC_PTR > 0); /* LOOP THRU ALL SC */

   3087  4 002320   002751 604400 4                  TMOZ    s:3178
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:141  

      744     3088    3           SC_PTR = RC_TBL.SC_PTR(RC_PTR);

   3088  4 002321   000000 236000 xsym               LDQ     RC_PTR
         4 002322   000003 402007                    MPY     3,DL
         4 002323   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 002324   000022 772000                    QRL     18
         4 002325   000777 376007                    ANQ     511,DL
         4 002326   000000 756000 xsym               STQ     SC_PTR

      745     3089    3           IF SC_TBL.GLOBAL(SC_PTR)=0 THEN /* SET IS LOCAL */

   3089  4 002327   000405 402007                    MPY     261,DL
         4 002330   000000 116003                    CMPQ    0,DU
         4 002331   002333 605000 4                  TPL     s:3089+4
         4 002332   000044 036003                    ADLQ    36,DU
         4 002333   003000 061406                    CSR     bolr='003'O
         4 002334   000005 640001 xsym               BDSC    SC_TBL+5,Q               by=3,bit=4,n=1
         4 002335   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 002336   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002337   000000 116003                    CMPQ    0,DU
         4 002340   002346 601000 4                  TNZ     s:3092

      746     3090    3               BASE_DBK = AC_TBL.BASE_DBK(AC_PTR);

   3090  4 002341   000000 236000 xsym               LDQ     AC_PTR
         4 002342   000014 402007                    MPY     12,DL
         4 002343   000000 235006 xsym               LDA     AC_TBL,QL
         4 002344   000000 755000 xsym               STA     BASE_DBK
         4 002345   002347 710000 4                  TRA     s:3093

      747     3091    3           ELSE
      748     3092    3               BASE_DBK = 0; /* FOR GLOBAL SET DONT ADJUST POINTERS */

   3092  4 002346   000000 450000 xsym               STZ     BASE_DBK

      749     3093    3           CALL FIND_FIRST_PA(%LOCK_BUF) ALTRET(SET_EMPTY);
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:142  
              3093                    /* GET 1ST PA IN LOWEST LEVEL */

   3093  4 002347   000034 236000 5                  LDQ     28
         4 002350   000263 756000 0                  STQ     PTR_TEMP+7
         4 002351   003531 701000 4                  TSX1    FIND_FIRST_PA
         4 002352   002735 702000 4                  TSX2    SET_EMPTY

      750     3094    3           KEY_LEN = SC_TBL.PA_KEYSIZE(SC_PTR);

   3094  4 002353   000000 236000 xsym               LDQ     SC_PTR
         4 002354   000405 402007                    MPY     261,DL
         4 002355   000000 116003                    CMPQ    0,DU
         4 002356   002360 605000 4                  TPL     s:3094+5
         4 002357   000044 036003                    ADLQ    36,DU
         4 002360   003000 061406                    CSR     bolr='003'O
         4 002361   000004 050011 xsym               BDSC    SC_TBL+4,Q               by=0,bit=5,n=9
         4 002362   000000 000044 xsym               BDSC    KEY_LEN                  by=0,bit=0,n=36

      751     3095    3           ENTRY_LEN = KEY_LEN+PTR_LEN+2;

   3095  4 002363   000000 236000 xsym               LDQ     KEY_LEN
         4 002364   000000 036000 xsym               ADLQ    PTR_LEN
         4 002365   000002 036007                    ADLQ    2,DL
         4 002366   000003 756000 0                  STQ     ENTRY_LEN

      752     3096    3           PAENT_STK_SIZE=(4096*(KCNT-NBUFS)*2- /* TOTAL SPARE BUF BYTES */

   3096  4 002367   000000 236000 xsym               LDQ     KCNT
         4 002370   000000 136000 xsym               SBLQ    NBUFS
         4 002371   000013 736000                    QLS     11
         4 002372   000002 676000 5                  ERQ     2
         4 002373   000001 036007                    ADLQ    1,DL
         4 002374   000036 036000 0                  ADLQ    OWNER_CNT
         4 002375   000003 235000 0                  LDA     ENTRY_LEN
         4 002376   000004 035007                    ADLA    4,DL
         4 002377   000266 755000 0                  STA     @FIND_TYPE+3
         4 002400   000002 736000                    QLS     2
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:143  
         4 002401   000002 676000 5                  ERQ     2
         4 002402   000003 136007                    SBLQ    3,DL
         4 002403   000266 506000 0                  DIV     @FIND_TYPE+3
         4 002404   000001 136007                    SBLQ    1,DL
         4 002405   000250 756000 0                  STQ     PAENT_STK_SIZE

      753     3097    3              (OWNER_CNT+1)*4)/(ENTRY_LEN+4)-1;
      754     3098         /* LESS OWNER STK SIZE */
      755     3099    3           LOW_INDX=0; /* REINIT THE BOTTOM OF STACK */

   3099  4 002406   000034 450000 0                  STZ     LOW_INDX

      756     3100    3           HIGH_INDX=0; /* AND THE TOP OF STACK */

   3100  4 002407   000035 450000 0                  STZ     HIGH_INDX

      757     3101    3           CALL PUSH_PAENTRY(NEXT_DBK); /* PASS THE DBK OF PA */

   3101  4 002410   000054 630400 5                  EPPR0   44
         4 002411   000043 631400 5                  EPPR1   35
         4 002412   000000 701000 xent               TSX1    PUSH_PAENTRY
         4 002413   000000 011000                    NOP     0

      758     3102
      759     3103    3           REC2$=PINCRC(PASTK$,6); /* FIRST POINTER LOC IN STACK */

   3103  4 002414   000247 236000 0                  LDQ     PASTK$
         4 002415   000055 036000 5                  ADLQ    45
         4 002416   000000 756000 xsym               STQ     REC2$

      760     3104    3           CALL GET_PTR2(X); /* LOAD INTO X */

   3104  4 002417   000011 236000 5                  LDQ     9
         4 002420   000252 756000 0                  STQ     @POINTER
         4 002421   000017 701000 4                  TSX1    GET_PTR2
         4 002422   000000 011000                    NOP     0

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:144  
      761     3105    3           IF ZI$DIR.INSERT_DUMMY='0'B AND X=CURR_OWNER THEN

   3105  4 002423   000126 236000 xsym               LDQ     ZI$DIR+86
         4 002424   100000 316003                    CANQ    32768,DU
         4 002425   002434 601000 4                  TNZ     s:3108
         4 002426   000000 236000 xsym               LDQ     X
         4 002427   000040 116000 0                  CMPQ    CURR_OWNER
         4 002430   002434 601000 4                  TNZ     s:3108

      762     3106    3               LOW_INDX = 1; /* SKIP STORING DUMMY */

   3106  4 002431   000001 235007                    LDA     1,DL
         4 002432   000034 755000 0                  STA     LOW_INDX
         4 002433   002454 710000 4                  TRA     s:3116

      763     3107    3           ELSE
      764     3108    3               IF ZI$DIR.INSERT_DUMMY AND X~=CURR_OWNER THEN

   3108  4 002434   000126 236000 xsym               LDQ     ZI$DIR+86
         4 002435   100000 316003                    CANQ    32768,DU
         4 002436   002454 600000 4                  TZE     s:3116
         4 002437   000000 236000 xsym               LDQ     X
         4 002440   000040 116000 0                  CMPQ    CURR_OWNER
         4 002441   002454 600000 4                  TZE     s:3116

      765     3109    4               DO;

      766     3110    4                   STK.CURR(1) = CURR_OWNER;

   3110  4 002442   000040 235000 0                  LDA     CURR_OWNER
         4 002443   000006 755000 xsym               STA     STK+6

      767     3111    4                   STK.RC_PTR(1) = RC_PTR; /* PASS OWNER'S RC FOR THAT ENTRY */

   3111  4 002444   000000 236000 xsym               LDQ     RC_PTR
         4 002445   000033 736000                    QLS     27
         4 002446   000007 552040 xsym               STBQ    STK+7,'40'O
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:145  

      768     3112    4                   STK.NEXT(1) = NEXT_DBK; /* THE PA_REC CONTAINING THIS PTR */

   3112  4 002447   000043 236000 0                  LDQ     NEXT_DBK
         4 002450   000004 756000 xsym               STQ     STK+4

      769     3113    4                   CALL STORE_AN_ENTRY ALTRET(WRIT_ERR);

   3113  4 002451   000000 631400 5                  EPPR1   0
         4 002452   000000 701000 xent               TSX1    STORE_AN_ENTRY
         4 002453   002753 702000 4                  TSX2    WRIT_ERR

      770     3114    4                   END; /* DUMMY STORED IF WANTED */

      771     3115
      772     3116    3           FIRST_TIME_CALLED=2;

   3116  4 002454   000002 235007                    LDA     2,DL
         4 002455   000000 755000 xsym               STA     FIRST_TIME_CALLED

      773     3117    4           DO WHILE(FIRST_TIME_CALLED>0); /* UNTIL ALL ENTRIES RESTORED */

   3117  4 002456   002732 604400 4                  TMOZ    s:3172

      774     3118    4               IF LOW_INDX ~= HIGH_INDX THEN

   3118  4 002457   000034 236000 0                  LDQ     LOW_INDX
         4 002460   000035 116000 0                  CMPQ    HIGH_INDX
         4 002461   002643 600000 4                  TZE     s:3151

      775     3119    5               DO; /* STACK NOT EMPTY */

      776     3120    5                   REC2$=PINCRC(PASTK$,LOW_INDX*(4+ENTRY_LEN)+4);

   3120  4 002462   000003 236000 0                  LDQ     ENTRY_LEN
         4 002463   000004 036007                    ADLQ    4,DL
         4 002464   000034 402000 0                  MPY     LOW_INDX
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:146  
         4 002465   000020 736000                    QLS     16
         4 002466   000001 036003                    ADLQ    1,DU
         4 002467   000247 036000 0                  ADLQ    PASTK$
         4 002470   000000 756000 xsym               STQ     REC2$

      777     3121    5                   PRFR = REC2$->PA_ENTRY.TYPE; /* TYPE OF MEMBER POINTED BY */

   3121  4 002471   000000 470400 xsym               LDP0    REC2$
         4 002472   003000 061500                    CSR     bolr='003'O
         4 002473   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12
         4 002474   000000 000044 xsym               BDSC    PRFR                     by=0,bit=0,n=36

      778     3122    5                   STK.NEXT(1)=PINCRC(REC2$,-4)->PAENT_STK.PA_DBK;

   3122  4 002475   000000 100500                    MLR     fill='000'O
         4 002476   077777 000004                    ADSC9   -1,,PR0                  cn=0,n=4
         4 002477   000004 000004 xsym               ADSC9   STK+4                    cn=0,n=4

      779     3123    5                   REC2$ = PINCRC(REC2$,2); /* POINT TO ENTRY.PTR */

   3123  4 002500   400000 036007                    ADLQ    -131072,DL
         4 002501   000000 756000 xsym               STQ     REC2$

      780     3124    5                   CALL GET_PTR2(STK.CURR(1)); /* LOAD IT INTO STK.CURR */

   3124  4 002502   000056 236000 5                  LDQ     46
         4 002503   000252 756000 0                  STQ     @POINTER
         4 002504   000017 701000 4                  TSX1    GET_PTR2
         4 002505   000000 011000                    NOP     0

      781     3125         /* NOW SEARCH THE RC AND THE AC FOR THE MEMBER
      782     3126            THAT IS POINTER BY THE PA_ENTRY */
      783     3127    5                   STK.RC_PTR(1)=SC_TBL.RC_PTR(SC_PTR)+1; /* FIRST SM */

   3127  4 002506   000000 236000 xsym               LDQ     SC_PTR
         4 002507   000405 402007                    MPY     261,DL
         4 002510   000000 116003                    CMPQ    0,DU
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:147  
         4 002511   002513 605000 4                  TPL     s:3127+5
         4 002512   000044 036003                    ADLQ    36,DU
         4 002513   003000 061406                    CSR     bolr='003'O
         4 002514   000005 650011 xsym               BDSC    SC_TBL+5,Q               by=3,bit=5,n=9
         4 002515   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 002516   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002517   000001 036007                    ADLQ    1,DL
         4 002520   000033 736000                    QLS     27
         4 002521   000007 552040 xsym               STBQ    STK+7,'40'O

      784     3128    5                   X = 0; /* COUNTER */

   3128  4 002522   000000 450000 xsym               STZ     X

      785     3129    6                   DO WHILE(X<SC_TBL.NO_OF_SM(SC_PTR) AND

   3129  4 002523   002530 710000 4                  TRA     s:3133

      786     3130    6                      RC_TBL.TYPE(STK.RC_PTR(1))~=PRFR);
      787     3131    6                       X=X+1;

   3131  4 002524   000000 054000 xsym               AOS     X

      788     3132    6                       STK.RC_PTR(1)=STK.RC_PTR(1)+1;

   3132  4 002525   000007 236000 xsym               LDQ     STK+7
         4 002526   001000 036003                    ADLQ    512,DU
         4 002527   000007 552040 xsym               STBQ    STK+7,'40'O

      789     3133    6                       END;

   3133  4 002530   000000 236000 xsym               LDQ     SC_PTR
         4 002531   000405 402007                    MPY     261,DL
         4 002532   000000 116003                    CMPQ    0,DU
         4 002533   002535 605000 4                  TPL     s:3133+5
         4 002534   000044 036003                    ADLQ    36,DU
         4 002535   003000 061406                    CSR     bolr='003'O
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:148  
         4 002536   000005 420006 xsym               BDSC    SC_TBL+5,Q               by=2,bit=2,n=6
         4 002537   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 002540   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002541   000000 116000 xsym               CMPQ    X
         4 002542   002552 604400 4                  TMOZ    s:3134
         4 002543   000007 236000 xsym               LDQ     STK+7
         4 002544   000033 772000                    QRL     27
         4 002545   000003 402007                    MPY     3,DL
         4 002546   000001 236006 xsym               LDQ     RC_TBL+1,QL
         4 002547   000022 772000                    QRL     18
         4 002550   000000 116000 xsym               CMPQ    PRFR
         4 002551   002524 601000 4                  TNZ     s:3131

      790     3134    5                   IF X>=SC_TBL.NO_OF_SM(SC_PTR) THEN

   3134  4 002552   000000 236000 xsym               LDQ     SC_PTR
         4 002553   000405 402007                    MPY     261,DL
         4 002554   000000 116003                    CMPQ    0,DU
         4 002555   002557 605000 4                  TPL     s:3134+5
         4 002556   000044 036003                    ADLQ    36,DU
         4 002557   003000 061406                    CSR     bolr='003'O
         4 002560   000005 420006 xsym               BDSC    SC_TBL+5,Q               by=2,bit=2,n=6
         4 002561   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 002562   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002563   000000 116000 xsym               CMPQ    X
         4 002564   002626 605400 4                  TPNZ    s:3145

      791     3135    6                   DO;

      792     3136    6                       IF LOW_INDX=0 AND STK.CURR(1)=CURR_OWNER THEN

   3136  4 002565   000034 235000 0                  LDA     LOW_INDX
         4 002566   002603 601000 4                  TNZ     s:3140
         4 002567   000006 236000 xsym               LDQ     STK+6
         4 002570   000040 116000 0                  CMPQ    CURR_OWNER
         4 002571   002603 601000 4                  TNZ     s:3140

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:149  
      793     3137    6                           STK.RC_PTR(1)=SC_TBL.RC_PTR(SC_PTR); /* MUST BE DUMMY */

   3137  4 002572   000000 236000 xsym               LDQ     SC_PTR
         4 002573   000405 402007                    MPY     261,DL
         4 002574   000000 116003                    CMPQ    0,DU
         4 002575   002577 605000 4                  TPL     s:3137+5
         4 002576   000044 036003                    ADLQ    36,DU
         4 002577   003000 060406                    CSL     bolr='003'O
         4 002600   000005 650011 xsym               BDSC    SC_TBL+5,Q               by=3,bit=5,n=9
         4 002601   000007 000011 xsym               BDSC    STK+7                    by=0,bit=0,n=9
         4 002602   002626 710000 4                  TRA     s:3145

      794     3138    6                       ELSE
      795     3139    7                       DO;

      796     3140    7                           CALL BIN_CHAR(1,STK.NEXT(1));

   3140  4 002603   000057 630400 5                  EPPR0   47
         4 002604   000006 631400 5                  EPPR1   6
         4 002605   000000 701000 xent               TSX1    BIN_CHAR
         4 002606   000000 011000                    NOP     0

      797     3141    7                           CALL ERROR_MSG(DBU#PATYPER1,SC_TBL.NAME(SC_PTR));

   3141  4 002607   000000 236000 xsym               LDQ     SC_PTR
         4 002610   000014 402000 5                  MPY     12
         4 002611   000013 036000 5                  ADLQ    11
         4 002612   000062 235000 5                  LDA     50
         4 002613   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 002614   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 002615   000006 631400 5                  EPPR1   6
         4 002616   000000 701000 xent               TSX1    ERROR_MSG
         4 002617   000000 011000                    NOP     0

      798     3142    7                           UNWIND TO BREAK_CLEANUP;

   3142  4 002620   000000 100600                    MLR   ! fill='000'O
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:150  
         4 002621   000007 000010 0                  ADSC9   BREAK_CLEANUP            cn=0,n=8
         4 002622   000266 000010 0                  ADSC9   @FIND_TYPE+3             cn=0,n=8
         4 002623   000266 237200 0                  LDAQ  ! @FIND_TYPE+3
         4 002624   000000 700200 xent               TSX0  ! X66_SUNWIND
         4 002625   000000 000200                    ZERO    0,128

      799     3143    7                           END;
      800     3144    6                       END;
      801     3145    5                   CALL STORE_AN_ENTRY(REC2$->CHAR_V) ALTRET(WRIT_ERR);

   3145  4 002626   000000 630400 xsym               EPPR0   REC2$
         4 002627   000043 631400 5                  EPPR1   35
         4 002630   000000 701000 xent               TSX1    STORE_AN_ENTRY
         4 002631   002753 702000 4                  TSX2    WRIT_ERR

      802     3146         /* PASS KEY IN PASTK */
      803     3147    5                   LOW_INDX = MOD(LOW_INDX+1,PAENT_STK_SIZE);

   3147  4 002632   000034 236000 0                  LDQ     LOW_INDX
         4 002633   000001 036007                    ADLQ    1,DL
         4 002634   000250 235000 0                  LDA     PAENT_STK_SIZE
         4 002635   002640 605000 4                  TPL     s:3147+6
         4 002636   000044 737000                    LLS     36
         4 002637   002641 710000 4                  TRA     s:3147+7
         4 002640   000250 506000 0                  DIV     PAENT_STK_SIZE
         4 002641   000034 755000 0                  STA     LOW_INDX

      804     3148    5                   END;

   3148  4 002642   002730 710000 4                  TRA     s:3171

      805     3149    4               ELSE
      806     3150    5               DO; /* STK IS EMPTY */

      807     3151    5                   IF HIGH_INDX=0 THEN

   3151  4 002643   000035 235000 0                  LDA     HIGH_INDX
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:151  
         4 002644   002651 601000 4                  TNZ     s:3154

      808     3152    5                       X=PAENT_STK_SIZE-1; /* GET LAST ENTRY INDX */

   3152  4 002645   000250 235000 0                  LDA     PAENT_STK_SIZE
         4 002646   000001 135007                    SBLA    1,DL
         4 002647   000000 755000 xsym               STA     X
         4 002650   002653 710000 4                  TRA     s:3155

      809     3153    5                   ELSE
      810     3154    5                       X=HIGH_INDX-1;

   3154  4 002651   000001 135007                    SBLA    1,DL
         4 002652   000000 755000 xsym               STA     X

      811     3155    5                   NEXT_DBK=PINCRC(PASTK$,X*(4+ENTRY_LEN))->PAENT_STK.PA_DBK;

   3155  4 002653   000003 236000 0                  LDQ     ENTRY_LEN
         4 002654   000004 036007                    ADLQ    4,DL
         4 002655   000000 402000 xsym               MPY     X
         4 002656   000247 470400 0                  LDP0    PASTK$
         4 002657   000000 100506                    MLR     fill='000'O
         4 002660   000000 000004                    ADSC9   0,Q,PR0                  cn=0,n=4
         4 002661   000043 000004 0                  ADSC9   NEXT_DBK                 cn=0,n=4

      812     3156    5                   CALL FIND_DIRECT(NEXT_DBK,%DONT_LOCK); /* GET IT */

   3156  4 002662   000063 630400 5                  EPPR0   51
         4 002663   000006 631400 5                  EPPR1   6
         4 002664   000000 701000 xent               TSX1    FIND_DIRECT
         4 002665   000000 011000                    NOP     0

      813     3157    6                   DO WHILE(LOW_INDX=HIGH_INDX AND FIRST_TIME_CALLED>0);

   3157  4 002666   002723 710000 4                  TRA     s:3169

      814     3158    6                       REC2$ = PINCRC(REC$,8); /* LOC OF NEXT PTR IN PA */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:152  

   3158  4 002667   000000 236000 xsym               LDQ     REC$
         4 002670   000002 036003                    ADLQ    2,DU
         4 002671   000000 756000 xsym               STQ     REC2$

      815     3159    6                       CALL GET_PTR2(NEXT_DBK); /* LOAD IT */

   3159  4 002672   000054 236000 5                  LDQ     44
         4 002673   000252 756000 0                  STQ     @POINTER
         4 002674   000017 701000 4                  TSX1    GET_PTR2
         4 002675   000000 011000                    NOP     0

      816     3160    6                       IF NEXT_DBK=CURR_LEVEL.FIRST_PA(NO_OF_LEVELS) OR

   3160  4 002676   000004 235000 0                  LDA     NO_OF_LEVELS
         4 002677   000002 735000                    ALS     2
         4 002700   000043 236000 0                  LDQ     NEXT_DBK
         4 002701   002704 604000 4                  TMI     s:3160+6
         4 002702   000047 116005 0                  CMPQ    CURR_LEVEL+1,AL
         4 002703   002711 600000 4                  TZE     s:3163
         4 002704   000004 235000 0                  LDA     NO_OF_LEVELS
         4 002705   002711 600000 4                  TZE     s:3163
         4 002706   000000 235000 xsym               LDA     FIRST_TIME_CALLED
         4 002707   000001 115007                    CMPA    1,DL
         4 002710   002713 601000 4                  TNZ     s:3166

      817     3161    6                          NO_OF_LEVELS=0 OR /* ONLY 1 PA EXIST */
      818     3162    6                          FIRST_TIME_CALLED=1 THEN /* ALL LOWEST PA PUSHED */
      819     3163    6                           FIRST_TIME_CALLED=0; /* ALL ENTRIES STORED */

   3163  4 002711   000000 450000 xsym               STZ     FIRST_TIME_CALLED
         4 002712   002723 710000 4                  TRA     s:3169

      820     3164    6                       ELSE
      821     3165    7                       DO;

      822     3166    7                           CALL FIND_DIRECT(NEXT_DBK,%MUST_WRITE); /* FIND NEXT */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:153  

   3166  4 002713   000065 630400 5                  EPPR0   53
         4 002714   000006 631400 5                  EPPR1   6
         4 002715   000000 701000 xent               TSX1    FIND_DIRECT
         4 002716   000000 011000                    NOP     0

      823     3167    7                           CALL PUSH_PAENTRY(NEXT_DBK); /* AND PUSH TO STK */

   3167  4 002717   000054 630400 5                  EPPR0   44
         4 002720   000043 631400 5                  EPPR1   35
         4 002721   000000 701000 xent               TSX1    PUSH_PAENTRY
         4 002722   000000 011000                    NOP     0

      824     3168    7                           END;

      825     3169    6                       END;

   3169  4 002723   000034 236000 0                  LDQ     LOW_INDX
         4 002724   000035 116000 0                  CMPQ    HIGH_INDX
         4 002725   002730 601000 4                  TNZ     s:3171
         4 002726   000000 235000 xsym               LDA     FIRST_TIME_CALLED
         4 002727   002667 605400 4                  TPNZ    s:3158

      826     3170    5                   END;

      827     3171    4               END;

   3171  4 002730   000000 235000 xsym               LDA     FIRST_TIME_CALLED
         4 002731   002457 605400 4                  TPNZ    s:3118

      828     3172    3           CALL PA_CLEANUP ALTRET(WRIT_ERR); /* DONE WITH A SC */

   3172  4 002732   000000 631400 5                  EPPR1   0
         4 002733   000000 701000 xent               TSX1    PA_CLEANUP
         4 002734   002753 702000 4                  TSX2    WRIT_ERR

      829     3173    3   SET_EMPTY:
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:154  
      830     3174    3           RC_PTR=RC_TBL.RC_NEXT(RC_PTR);

   3174  4 002735   000000 236000 xsym  SET_EMPTY    LDQ     RC_PTR
         4 002736   000003 402007                    MPY     3,DL
         4 002737   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 002740   000033 772000                    QRL     27
         4 002741   000000 756000 xsym               STQ     RC_PTR

      831     3175    3           IF RC_PTR>0 THEN

   3175  4 002742   002747 604400 4                  TMOZ    s:3177

      832     3176    3               CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK);

   3176  4 002743   000031 630400 5                  EPPR0   25
         4 002744   000006 631400 5                  EPPR1   6
         4 002745   000000 701000 xent               TSX1    FIND_DIRECT
         4 002746   000000 011000                    NOP     0

      833     3177    3           END;

   3177  4 002747   000000 235000 xsym               LDA     RC_PTR
         4 002750   002321 605400 4                  TPNZ    s:3088

      834     3178    2       RETURN; /* ALL SC THRU A OWNER COMPACTED */

   3178  4 002751   000257 221200 0                  LDX1  ! PTR_TEMP+3
         4 002752   000001 702211                    TSX2  ! 1,X1

      835     3179
      836     3180    2   WRIT_ERR: ALTRETURN; /* ONLY HAPPEN ON IO ERROR WRITING PATCH FILE */

   3180  4 002753   000257 221200 0     WRIT_ERR     LDX1  ! PTR_TEMP+3
         4 002754   000000 702211                    TSX2  ! 0,X1

      837     3181
      838     3182        /*E*  ERROR: ZIU-DBU#PATYPER1-C
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:155  
      839     3183        MESSAGE: Error: One of the entries in *PA_REC_%U1 at DBK# %U2
      840     3184                        has a non-member's TYPE. COMPACT/CONV_TO_CHAIN aborted.
      841     3185                        Run REBUILD PA utility to reconstruct this set. */
      842     3186    2   END COMPACT_AN_OWNER;
      843     3187        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:156  
      844     3188        /*
      845     3189              SUBR  CALLED BY  REVERT
      846     3190                    REVERT EXTRACTS EACH POINTER FROM LOWEST LEVEL OF PA
      847     3191                    THEN CALL THIS ROUTINE TO WRITE A PATCH RECORD
      848     3192                    FOR IT
      849     3193        */
      850     3194    1   WRITE_PATCH_RECORD: PROC ALTRET;

   3194  4 002755   000260 741200 0     WRITE_PATCH* STX1  ! PTR_TEMP+4

      851     3195
      852     3196    2       IF PRIOR_DBK=CURR_OWNER THEN /* 1ST POINTER IN LOWEST PA */

   3196  4 002756   000042 236000 0                  LDQ     PRIOR_DBK
         4 002757   000040 116000 0                  CMPQ    CURR_OWNER
         4 002760   002764 601000 4                  TNZ     s:3202

      853     3197    2           STK.NEXT(0)=CURR_DBK; /* THIS PTR IS THE NEXT PTR OF OWNER */

   3197  4 002761   000041 235000 0                  LDA     CURR_DBK
         4 002762   000000 755000 xsym               STA     STK
         4 002763   003130 710000 4                  TRA     s:3224

      854     3198    2       ELSE
      855     3199         /* NOTE: IF DUMMY EXISTS THEN CURR_DBK=CURR_OWNER,SO WILL BE SKIPPED */
      856     3200    3       DO;

      857     3201         /* SEARCH AC AND RC FOR THE MEMBER POINTED BY */
      858     3202    3           KEY.RC_PTR=SC_TBL.RC_PTR(SC_PTR)+1;

   3202  4 002764   000000 236000 xsym               LDQ     SC_PTR
         4 002765   000405 402007                    MPY     261,DL
         4 002766   000000 116003                    CMPQ    0,DU
         4 002767   002771 605000 4                  TPL     s:3202+5
         4 002770   000044 036003                    ADLQ    36,DU
         4 002771   003000 061406                    CSR     bolr='003'O
         4 002772   000005 650011 xsym               BDSC    SC_TBL+5,Q               by=3,bit=5,n=9
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:157  
         4 002773   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 002774   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 002775   000001 036007                    ADLQ    1,DL
         4 002776   000022 736000                    QLS     18
         4 002777   000045 552020 0                  STBQ    KEY+1,'20'O

      859     3203    3           X = 0;

   3203  4 003000   000000 450000 xsym               STZ     X

      860     3204    4           DO WHILE(X<SC_TBL.NO_OF_SM(SC_PTR) AND

   3204  4 003001   003006 710000 4                  TRA     s:3208

      861     3205    4              RC_TBL.TYPE(KEY.RC_PTR)~=STK.CURR(0));
      862     3206    4               X = X + 1;

   3206  4 003002   000000 054000 xsym               AOS     X

      863     3207    4               KEY.RC_PTR = KEY.RC_PTR + 1;

   3207  4 003003   000045 236000 0                  LDQ     KEY+1
         4 003004   000001 036003                    ADLQ    1,DU
         4 003005   000045 552020 0                  STBQ    KEY+1,'20'O

      864     3208    4               END;

   3208  4 003006   000000 236000 xsym               LDQ     SC_PTR
         4 003007   000405 402007                    MPY     261,DL
         4 003010   000000 116003                    CMPQ    0,DU
         4 003011   003013 605000 4                  TPL     s:3208+5
         4 003012   000044 036003                    ADLQ    36,DU
         4 003013   003000 061406                    CSR     bolr='003'O
         4 003014   000005 420006 xsym               BDSC    SC_TBL+5,Q               by=2,bit=2,n=6
         4 003015   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 003016   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 003017   000000 116000 xsym               CMPQ    X
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:158  
         4 003020   003031 604400 4                  TMOZ    s:3209
         4 003021   000045 236000 0                  LDQ     KEY+1
         4 003022   000022 772000                    QRL     18
         4 003023   000777 376007                    ANQ     511,DL
         4 003024   000003 402007                    MPY     3,DL
         4 003025   000001 236006 xsym               LDQ     RC_TBL+1,QL
         4 003026   000022 772000                    QRL     18
         4 003027   000002 116000 xsym               CMPQ    STK+2
         4 003030   003002 601000 4                  TNZ     s:3206

      865     3209    3           IF X>=SC_TBL.NO_OF_SM(SC_PTR) THEN

   3209  4 003031   000000 236000 xsym               LDQ     SC_PTR
         4 003032   000405 402007                    MPY     261,DL
         4 003033   000000 116003                    CMPQ    0,DU
         4 003034   003036 605000 4                  TPL     s:3209+5
         4 003035   000044 036003                    ADLQ    36,DU
         4 003036   003000 061406                    CSR     bolr='003'O
         4 003037   000005 420006 xsym               BDSC    SC_TBL+5,Q               by=2,bit=2,n=6
         4 003040   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 003041   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 003042   000000 116000 xsym               CMPQ    X
         4 003043   003067 605400 4                  TPNZ    s:3215

      866     3210    4           DO;

      867     3211    4               CALL BIN_CHAR(1,NEXT_DBK); /* ERROR IN PAREC AT NEXT_DBK */

   3211  4 003044   000067 630400 5                  EPPR0   55
         4 003045   000006 631400 5                  EPPR1   6
         4 003046   000000 701000 xent               TSX1    BIN_CHAR
         4 003047   000000 011000                    NOP     0

      868     3212    4               CALL ERROR_MSG(DBU#PATYPER1,SC_TBL.NAME(SC_PTR));

   3212  4 003050   000000 236000 xsym               LDQ     SC_PTR
         4 003051   000014 402000 5                  MPY     12
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:159  
         4 003052   000013 036000 5                  ADLQ    11
         4 003053   000062 235000 5                  LDA     50
         4 003054   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 003055   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 003056   000006 631400 5                  EPPR1   6
         4 003057   000000 701000 xent               TSX1    ERROR_MSG
         4 003060   000000 011000                    NOP     0

      869     3213    4               UNWIND TO BREAK_CLEANUP;

   3213  4 003061   000000 100600                    MLR   ! fill='000'O
         4 003062   000007 000010 0                  ADSC9   BREAK_CLEANUP            cn=0,n=8
         4 003063   000266 000010 0                  ADSC9   @FIND_TYPE+3             cn=0,n=8
         4 003064   000266 237200 0                  LDAQ  ! @FIND_TYPE+3
         4 003065   000000 700200 xent               TSX0  ! X66_SUNWIND
         4 003066   000000 000200                    ZERO    0,128

      870     3214    4               END;
      871     3215    3           STK.CURR(1)=PRIOR_DBK;

   3215  4 003067   000042 235000 0                  LDA     PRIOR_DBK
         4 003070   000006 755000 xsym               STA     STK+6

      872     3216    3           STK.PRIOR(1)=STK.PRIOR(0);

   3216  4 003071   000001 235000 xsym               LDA     STK+1
         4 003072   000005 755000 xsym               STA     STK+5

      873     3217    3           STK.NEXT(1)=CURR_DBK;

   3217  4 003073   000041 235000 0                  LDA     CURR_DBK
         4 003074   000004 755000 xsym               STA     STK+4

      874     3218    3           KEY.TXT=PRIOR_DBK;

   3218  4 003075   000000 100400                    MLR     fill='000'O
         4 003076   000042 000004 0                  ADSC9   PRIOR_DBK                cn=0,n=4
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:160  
         4 003077   000044 200004 0                  ADSC9   KEY                      cn=1,n=4

      875     3219    3           CALL M$WRITE(WRITE_TEMP) ALTRET(ALT);

   3219  4 003100   000012 630400 0                  EPPR0   WRITE_TEMP
         4 003101   440001 713400                    CLIMB   alt,write
         4 003102   401400 401760                    pmme    nvectors=4
         4 003103   003142 702000 4                  TSX2    ALT

      876     3220    3           REC_CNT=REC_CNT+1;

   3220  4 003104   000000 054000 xsym               AOS     REC_CNT

      877     3221    3           SC_TBL.COUNT2(SC_PTR)=SC_TBL.COUNT2(SC_PTR)+1;

   3221  4 003105   000000 236000 xsym               LDQ     SC_PTR
         4 003106   000405 402007                    MPY     261,DL
         4 003107   000000 116003                    CMPQ    0,DU
         4 003110   003112 605000 4                  TPL     s:3221+5
         4 003111   000044 036003                    ADLQ    36,DU
         4 003112   003000 061406                    CSR     bolr='003'O
         4 003113   000006 050022 xsym               BDSC    SC_TBL+6,Q               by=0,bit=5,n=18
         4 003114   000267 000044 0                  BDSC    @FIND_TYPE+4             by=0,bit=0,n=36
         4 003115   000267 236000 0                  LDQ     @FIND_TYPE+4
         4 003116   000001 036007                    ADLQ    1,DL
         4 003117   000266 756000 0                  STQ     @FIND_TYPE+3
         4 003120   000000 236000 xsym               LDQ     SC_PTR
         4 003121   000405 402007                    MPY     261,DL
         4 003122   000000 116003                    CMPQ    0,DU
         4 003123   003125 605000 4                  TPL     s:3221+16
         4 003124   000044 036003                    ADLQ    36,DU
         4 003125   003006 061400                    CSR     bolr='003'O
         4 003126   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 003127   000006 050022 xsym               BDSC    SC_TBL+6,Q               by=0,bit=5,n=18

      878     3222    3           END;

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:161  
      879     3223         /* PUSH CURR INFO TO PRIOR */
      880     3224    2       STK.PRIOR(0)=PRIOR_DBK;

   3224  4 003130   000042 235000 0                  LDA     PRIOR_DBK
         4 003131   000001 755000 xsym               STA     STK+1

      881     3225    2       PRIOR_DBK = CURR_DBK;

   3225  4 003132   000041 236000 0                  LDQ     CURR_DBK
         4 003133   000042 756000 0                  STQ     PRIOR_DBK

      882     3226    2       STK.CURR(0)=PA_ENTRY.TYPE;

   3226  4 003134   000000 470400 xsym               LDP0    ENTRY$
         4 003135   003000 061500                    CSR     bolr='003'O
         4 003136   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12
         4 003137   000002 000044 xsym               BDSC    STK+2                    by=0,bit=0,n=36

      883     3227    2       RETURN;

   3227  4 003140   000260 221200 0                  LDX1  ! PTR_TEMP+4
         4 003141   000001 702211                    TSX2  ! 1,X1

      884     3228    2   ALT: ALTRETURN;

   3228  4 003142   000260 221200 0     ALT          LDX1  ! PTR_TEMP+4
         4 003143   000000 702211                    TSX2  ! 0,X1

      885     3229    2   END WRITE_PATCH_RECORD;
      886     3230        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:162  
      887     3231        /*
      888     3232              SUBR    REVERT_AN_OWNER - GO THRU ALL SC
      889     3233                                        FIND FIRST PA IN LOWEST LEVEL
      890     3234                                        GO THRU ALL POINTERS IN LOWEST LEVEL
      891     3235        */
      892     3236    1   REVERT_AN_OWNER: PROC ALTRET;

   3236  4 003144   000261 741200 0     REVERT_AN_O* STX1  ! PTR_TEMP+5

      893     3237
      894     3238
      895     3239    2       CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK); /* FIND OWNER */

   3239  4 003145   000031 630400 5                  EPPR0   25
         4 003146   000006 631400 5                  EPPR1   6
         4 003147   000000 701000 xent               TSX1    FIND_DIRECT
         4 003150   000000 011000                    NOP     0

      896     3240    2       RC_PTR=TYPE.MSTRINDX(PA_REC.TYPE); /* GET RECORD TYPE */

   3240  4 003151   000000 470400 xsym               LDP0    REC$
         4 003152   003000 061500                    CSR     bolr='003'O
         4 003153   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12
         4 003154   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 003155   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 003156   000001 736000                    QLS     1
         4 003157   000000 100406                    MLR     fill='000'O
         4 003160   000000 000002 xsym               ADSC9   TYPE,Q                   cn=0,n=2
         4 003161   000267 000004 0                  ADSC9   @FIND_TYPE+4             cn=0,n=4
         4 003162   000267 236000 0                  LDQ     @FIND_TYPE+4
         4 003163   000022 732000                    QRS     18
         4 003164   000000 756000 xsym               STQ     RC_PTR

      897     3241    3       DO WHILE(RC_PTR>0); /* LOOP THRU SC */

   3241  4 003165   003525 604400 4                  TMOZ    s:3312

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:163  
      898     3242    3           SC_PTR = RC_TBL.SC_PTR(RC_PTR);

   3242  4 003166   000000 236000 xsym               LDQ     RC_PTR
         4 003167   000003 402007                    MPY     3,DL
         4 003170   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 003171   000022 772000                    QRL     18
         4 003172   000777 376007                    ANQ     511,DL
         4 003173   000000 756000 xsym               STQ     SC_PTR

      899     3243    3           IF SC_TBL.GLOBAL(SC_PTR)=0 THEN /* SET IS LOCAL */

   3243  4 003174   000405 402007                    MPY     261,DL
         4 003175   000000 116003                    CMPQ    0,DU
         4 003176   003200 605000 4                  TPL     s:3243+4
         4 003177   000044 036003                    ADLQ    36,DU
         4 003200   003000 061406                    CSR     bolr='003'O
         4 003201   000005 640001 xsym               BDSC    SC_TBL+5,Q               by=3,bit=4,n=1
         4 003202   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 003203   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 003204   000000 116003                    CMPQ    0,DU
         4 003205   003213 601000 4                  TNZ     s:3246

      900     3244    3               BASE_DBK = AC_TBL.BASE_DBK(AC_PTR);

   3244  4 003206   000000 236000 xsym               LDQ     AC_PTR
         4 003207   000014 402007                    MPY     12,DL
         4 003210   000000 235006 xsym               LDA     AC_TBL,QL
         4 003211   000000 755000 xsym               STA     BASE_DBK
         4 003212   003214 710000 4                  TRA     s:3247

      901     3245    3           ELSE
      902     3246    3               BASE_DBK = 0; /* FOR GLOBAL SET DONT ADJUST POINTERS */

   3246  4 003213   000000 450000 xsym               STZ     BASE_DBK

      903     3247    3           CALL FIND_FIRST_PA(%MUST_WRITE) ALTRET(SET_EMPTY);
              3247                    /* GET 1ST PA IN LOWEST */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:164  

   3247  4 003214   000010 236000 5                  LDQ     8
         4 003215   000263 756000 0                  STQ     PTR_TEMP+7
         4 003216   003531 701000 4                  TSX1    FIND_FIRST_PA
         4 003217   003511 702000 4                  TSX2    SET_EMPTY

      904     3248    3           ENTRY_LEN=2+PTR_LEN+SC_TBL.PA_KEYSIZE(SC_PTR);

   3248  4 003220   000000 236000 xsym               LDQ     SC_PTR
         4 003221   000405 402007                    MPY     261,DL
         4 003222   000000 116003                    CMPQ    0,DU
         4 003223   003225 605000 4                  TPL     s:3248+5
         4 003224   000044 036003                    ADLQ    36,DU
         4 003225   003000 061406                    CSR     bolr='003'O
         4 003226   000004 050011 xsym               BDSC    SC_TBL+4,Q               by=0,bit=5,n=9
         4 003227   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 003230   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 003231   000000 036000 xsym               ADLQ    PTR_LEN
         4 003232   000002 036007                    ADLQ    2,DL
         4 003233   000003 756000 0                  STQ     ENTRY_LEN

      905     3249    3           PRIOR_DBK = CURR_OWNER;

   3249  4 003234   000040 235000 0                  LDA     CURR_OWNER
         4 003235   000042 755000 0                  STA     PRIOR_DBK

      906     3250    4           DO WHILE('1'B); /* LOOP THRU ALL LOWEST PA REC */

      907     3251    4               IF BREAK_FLAG>0 THEN /* BREAK HIT */

   3251  4 003236   000000 235000 xsym               LDA     BREAK_FLAG
         4 003237   003246 604400 4                  TMOZ    s:3253

      908     3252    4                   UNWIND TO BREAK_CLEANUP;

   3252  4 003240   000000 100600                    MLR   ! fill='000'O
         4 003241   000007 000010 0                  ADSC9   BREAK_CLEANUP            cn=0,n=8
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:165  
         4 003242   000266 000010 0                  ADSC9   @FIND_TYPE+3             cn=0,n=8
         4 003243   000266 237200 0                  LDAQ  ! @FIND_TYPE+3
         4 003244   000000 700200 xent               TSX0  ! X66_SUNWIND
         4 003245   000000 000200                    ZERO    0,128

      909     3253    4               ENTRY$=PINCRC(REC$,8+3*PTR_LEN); /* FIRST ENTRY */

   3253  4 003246   000000 236000 xsym               LDQ     PTR_LEN
         4 003247   600000 402007                    MPY     -65536,DL
         4 003250   000002 036003                    ADLQ    2,DU
         4 003251   000000 036000 xsym               ADLQ    REC$
         4 003252   000000 756000 xsym               STQ     ENTRY$

      910     3254    5               DO LOW_INDX=1 TO PA_REC.ENTRIES;

   3254  4 003253   000001 235007                    LDA     1,DL
         4 003254   000034 755000 0                  STA     LOW_INDX
         4 003255   003346 710000 4                  TRA     s:3277+1

      911     3255    5                   REC2$ = PINCRC(ENTRY$,2);

   3255  4 003256   000000 236000 xsym               LDQ     ENTRY$
         4 003257   400000 036007                    ADLQ    -131072,DL
         4 003260   000000 756000 xsym               STQ     REC2$

      912     3256    5                   CURR_DBK = 0;

   3256  4 003261   000041 450000 0                  STZ     CURR_DBK

      913     3257    5                   PINCRC(ADDR(CURR_DBK),4-PTR_LEN)->CHAR_V=PA_ENTRY.PTRS;

   3257  4 003262   000000 335000 xsym               LCA     PTR_LEN
         4 003263   000000 470400 xsym               LDP0    ENTRY$
         4 003264   000000 720000 xsym               LXL0    PTR_LEN
         4 003265   040045 100540                    MLR     fill='040'O
         4 003266   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         4 003267   000042 000010 0                  ADSC9   PRIOR_DBK,A              cn=0,n=*X0
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:166  

      914     3258    5                   IF PA_ENTRY.C=0 THEN /* UNIQUE ENTRY */

   3258  4 003270   003000 061500                    CSR     bolr='003'O
         4 003271   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         4 003272   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 003273   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 003274   000000 116003                    CMPQ    0,DU
         4 003275   003304 601000 4                  TNZ     s:3265

      915     3259    6                   DO;

      916     3260    6                       CURR_DBK = CURR_DBK + BASE_DBK; /* TO LOCAL IF LOCALSC */

   3260  4 003276   000041 236000 0                  LDQ     CURR_DBK
         4 003277   000000 036000 xsym               ADLQ    BASE_DBK
         4 003300   000041 756000 0                  STQ     CURR_DBK

      917     3261    6                       CALL WRITE_PATCH_RECORD ALTRET(WRIT_ERR);

   3261  4 003301   002755 701000 4                  TSX1    WRITE_PATCH_RECORD
         4 003302   003527 702000 4                  TSX2    WRIT_ERR

      918     3262    6                       END;

   3262  4 003303   003341 710000 4                  TRA     s:3276

      919     3263    5                   ELSE
      920     3264    6                   DO; /* POINTER GROUP PRESENT */

      921     3265    6                       GROUP$=PINCRC(REC$,CURR_DBK);

   3265  4 003304   000041 236000 0                  LDQ     CURR_DBK
         4 003305   000020 736000                    QLS     16
         4 003306   000000 036000 xsym               ADLQ    REC$
         4 003307   000000 756000 xsym               STQ     GROUP$

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:167  
      922     3266    6                       HIGH_INDX = PA_GROUP.NO_GROUPS;

   3266  4 003310   000000 471400 xsym               LDP1    GROUP$
         4 003311   000000 101500                    MRL     fill='000'O
         4 003312   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         4 003313   000035 000004 0                  ADSC9   HIGH_INDX                cn=0,n=4

      923     3267    6                       REC2$=PINCRC(GROUP$,2); /* SKIP PTR GROUP COUNT */

   3267  4 003314   400000 036007                    ADLQ    -131072,DL
         4 003315   000000 756000 xsym               STQ     REC2$

      924     3268    7                       DO WHILE(HIGH_INDX>0); /* LOOP THRU POINTER GROUP */

   3268  4 003316   000035 235000 0                  LDA     HIGH_INDX
         4 003317   003341 604400 4                  TMOZ    s:3276

      925     3269    7                           PA_ENTRY.TYPE=PINCRC(REC2$,-2)->PA_GROUP.TYPE;

   3269  4 003320   000000 470400 xsym               LDP0    REC2$
         4 003321   000000 471400 xsym               LDP1    ENTRY$
         4 003322   003100 061500                    CSR     bolr='003'O
         4 003323   000000 000022                    BDSC    0,,PR0                   by=0,bit=0,n=18
         4 003324   100000 060014                    BDSC    0,,PR1                   by=0,bit=6,n=12

      926     3270    7                           REC2$=PINCRC(REC2$,2);

   3270  4 003325   000000 236000 xsym               LDQ     REC2$
         4 003326   400000 036007                    ADLQ    -131072,DL
         4 003327   000000 756000 xsym               STQ     REC2$

      927     3271    7                           CALL GET_PTR2(CURR_DBK);

   3271  4 003330   000071 236000 5                  LDQ     57
         4 003331   000252 756000 0                  STQ     @POINTER
         4 003332   000017 701000 4                  TSX1    GET_PTR2
         4 003333   000000 011000                    NOP     0
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:168  

      928     3272    7                           CALL WRITE_PATCH_RECORD ALTRET(WRIT_ERR);

   3272  4 003334   002755 701000 4                  TSX1    WRITE_PATCH_RECORD
         4 003335   003527 702000 4                  TSX2    WRIT_ERR

      929     3273    7                           HIGH_INDX = HIGH_INDX - 1;

   3273  4 003336   000001 336007                    LCQ     1,DL
         4 003337   000035 056000 0                  ASQ     HIGH_INDX

      930     3274    7                           END;

   3274  4 003340   003320 605400 4                  TPNZ    s:3269

      931     3275    6                       END;

      932     3276    5                   ENTRY$=PINCRC(ENTRY$,ENTRY_LEN);

   3276  4 003341   000003 236000 0                  LDQ     ENTRY_LEN
         4 003342   000020 736000                    QLS     16
         4 003343   000000 036000 xsym               ADLQ    ENTRY$
         4 003344   000000 756000 xsym               STQ     ENTRY$

      933     3277    5                   END;

   3277  4 003345   000034 054000 0                  AOS     LOW_INDX
         4 003346   000000 470400 xsym               LDP0    REC$
         4 003347   003000 061500                    CSR     bolr='003'O
         4 003350   000001 060014                    BDSC    1,,PR0                   by=0,bit=6,n=12
         4 003351   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 003352   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 003353   000034 116000 0                  CMPQ    LOW_INDX
         4 003354   003256 605000 4                  TPL     s:3255

      934     3278    4               REC2$=PINCRC(REC$,8);

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:169  
   3278  4 003355   000000 236000 xsym               LDQ     REC$
         4 003356   000002 036003                    ADLQ    2,DU
         4 003357   000000 756000 xsym               STQ     REC2$

      935     3279    4               CALL GET_PTR2(NEXT_DBK); /* GET NEXT PTR OF THE PA_REC */

   3279  4 003360   000054 236000 5                  LDQ     44
         4 003361   000252 756000 0                  STQ     @POINTER
         4 003362   000017 701000 4                  TSX1    GET_PTR2
         4 003363   000000 011000                    NOP     0

      936     3280    4               IF NEXT_DBK=CURR_LEVEL.FIRST_PA(NO_OF_LEVELS) OR

   3280  4 003364   000004 235000 0                  LDA     NO_OF_LEVELS
         4 003365   000002 735000                    ALS     2
         4 003366   000043 236000 0                  LDQ     NEXT_DBK
         4 003367   003372 604000 4                  TMI     s:3280+6
         4 003370   000047 116005 0                  CMPQ    CURR_LEVEL+1,AL
         4 003371   003401 600000 4                  TZE     ALL_PTR_EXTRACTED
         4 003372   000004 235000 0                  LDA     NO_OF_LEVELS
         4 003373   003401 600000 4                  TZE     ALL_PTR_EXTRACTED

      937     3281    4                  NO_OF_LEVELS=0 THEN /* OR ONLY ONE PA THERE */
      938     3282    4                   GOTO ALL_PTR_EXTRACTED;
      939     3283    4               CALL FIND_DIRECT(NEXT_DBK,%DONT_LOCK);

   3283  4 003374   000063 630400 5                  EPPR0   51
         4 003375   000006 631400 5                  EPPR1   6
         4 003376   000000 701000 xent               TSX1    FIND_DIRECT
         4 003377   000000 011000                    NOP     0

      940     3284    4               END;

   3284  4 003400   003236 710000 4                  TRA     s:3251

      941     3285        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:170  
      942     3286
      943     3287    3   ALL_PTR_EXTRACTED: /* WRITE PATCH RECORD FOR OWNER AND ERASE PA */
      944     3288    3           CALL FIND_DIRECT(CURR_OWNER,%MUST_WRITE);

   3288  4 003401   000072 630400 5     ALL_PTR_EXT* EPPR0   58
         4 003402   000006 631400 5                  EPPR1   6
         4 003403   000000 701000 xent               TSX1    FIND_DIRECT
         4 003404   000000 011000                    NOP     0

      945     3289    3           CALL STORE_PTR(STK.NEXT(0),RC_TBL.NXPNT_EIS(RC_PTR));

   3289  4 003405   000000 236000 xsym               LDQ     RC_PTR
         4 003406   000003 402003                    MPY     3,DU
         4 003407   000022 036000 5                  ADLQ    18
         4 003410   000042 235000 5                  LDA     34
         4 003411   000252 757000 0                  STAQ    @POINTER
         4 003412   000057 701000 4                  TSX1    STORE_PTR
         4 003413   000000 011000                    NOP     0

      946     3290    3           CALL STORE_PTR2(CURR_DBK);

   3290  4 003414   000071 236000 5                  LDQ     57
         4 003415   000252 756000 0                  STQ     @POINTER
         4 003416   000073 701000 4                  TSX1    STORE_PTR2
         4 003417   000000 011000                    NOP     0

      947     3291    3           CURR_DBK=CURR_OWNER; /* DONT FORGET ONE RECORD LEFT IN STK */

   3291  4 003420   000040 235000 0                  LDA     CURR_OWNER
         4 003421   000041 755000 0                  STA     CURR_DBK

      948     3292    3           CALL WRITE_PATCH_RECORD; /* DO CLEANUP */

   3292  4 003422   002755 701000 4                  TSX1    WRITE_PATCH_RECORD
         4 003423   000000 011000                    NOP     0

      949     3293         /* NOW ERASE ALL PA_REC FROM CURR OF OWNER */
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:171  
      950     3294    4           DO LEVEL#=0 TO NO_OF_LEVELS;

   3294  4 003424   000005 450000 0                  STZ     LEVEL#
         4 003425   003506 710000 4                  TRA     s:3306+1

      951     3295    4               CALL FIND_DIRECT(CURR_LEVEL.FIRST_PA(LEVEL#),%MUST_WRITE);

   3295  4 003426   000010 236000 5                  LDQ     8
         4 003427   000267 756000 0                  STQ     @FIND_TYPE+4
         4 003430   000005 236000 0                  LDQ     LEVEL#
         4 003431   000024 736000                    QLS     20
         4 003432   000074 036000 5                  ADLQ    60
         4 003433   000266 756000 0                  STQ     @FIND_TYPE+3
         4 003434   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 003435   000006 631400 5                  EPPR1   6
         4 003436   000000 701000 xent               TSX1    FIND_DIRECT
         4 003437   000000 011000                    NOP     0

      952     3296    4               REC2$=PINCRC(REC$,8);

   3296  4 003440   000000 236000 xsym               LDQ     REC$
         4 003441   000002 036003                    ADLQ    2,DU
         4 003442   000000 756000 xsym               STQ     REC2$

      953     3297    4               CALL GET_PTR2(NEXT_DBK); /* LOAD NEXT PTR */

   3297  4 003443   000054 236000 5                  LDQ     44
         4 003444   000252 756000 0                  STQ     @POINTER
         4 003445   000017 701000 4                  TSX1    GET_PTR2
         4 003446   000000 011000                    NOP     0

      954     3298    4               CALL ERASE_PAREC;

   3298  4 003447   000000 631400 5                  EPPR1   0
         4 003450   000000 701000 xent               TSX1    ERASE_PAREC
         4 003451   000000 011000                    NOP     0

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:172  
      955     3299    4               IF LEVEL#>0 THEN /* NOT HIGHEST LEVEL */

   3299  4 003452   000005 235000 0                  LDA     LEVEL#
         4 003453   003505 604400 4                  TMOZ    s:3306

      956     3300    5               DO WHILE (NEXT_DBK~=CURR_LEVEL.FIRST_PA(LEVEL#));

   3300  4 003454   000002 735000                    ALS     2
         4 003455   000043 236000 0                  LDQ     NEXT_DBK
         4 003456   003461 604000 4                  TMI     s:3301
         4 003457   000047 116005 0                  CMPQ    CURR_LEVEL+1,AL
         4 003460   003505 600000 4                  TZE     s:3306

      957     3301    5                   CALL FIND_DIRECT(NEXT_DBK,%MUST_WRITE);

   3301  4 003461   000065 630400 5                  EPPR0   53
         4 003462   000006 631400 5                  EPPR1   6
         4 003463   000000 701000 xent               TSX1    FIND_DIRECT
         4 003464   000000 011000                    NOP     0

      958     3302    5                   REC2$=PINCRC(REC$,8);

   3302  4 003465   000000 236000 xsym               LDQ     REC$
         4 003466   000002 036003                    ADLQ    2,DU
         4 003467   000000 756000 xsym               STQ     REC2$

      959     3303    5                   CALL GET_PTR2(NEXT_DBK);

   3303  4 003470   000054 236000 5                  LDQ     44
         4 003471   000252 756000 0                  STQ     @POINTER
         4 003472   000017 701000 4                  TSX1    GET_PTR2
         4 003473   000000 011000                    NOP     0

      960     3304    5                   CALL ERASE_PAREC;

   3304  4 003474   000000 631400 5                  EPPR1   0
         4 003475   000000 701000 xent               TSX1    ERASE_PAREC
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:173  
         4 003476   000000 011000                    NOP     0

      961     3305    5                   END;

   3305  4 003477   000005 235000 0                  LDA     LEVEL#
         4 003500   000002 735000                    ALS     2
         4 003501   000043 236000 0                  LDQ     NEXT_DBK
         4 003502   003461 604000 4                  TMI     s:3301
         4 003503   000047 116005 0                  CMPQ    CURR_LEVEL+1,AL
         4 003504   003461 601000 4                  TNZ     s:3301

      962     3306    4               END;

   3306  4 003505   000005 054000 0                  AOS     LEVEL#
         4 003506   000005 236000 0                  LDQ     LEVEL#
         4 003507   000004 116000 0                  CMPQ    NO_OF_LEVELS
         4 003510   003426 604400 4                  TMOZ    s:3295

      963     3307    3   SET_EMPTY:
      964     3308    3           RC_PTR=RC_TBL.RC_NEXT(RC_PTR);

   3308  4 003511   000000 236000 xsym  SET_EMPTY    LDQ     RC_PTR
         4 003512   000003 402007                    MPY     3,DL
         4 003513   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 003514   000033 772000                    QRL     27
         4 003515   000000 756000 xsym               STQ     RC_PTR

      965     3309    3           IF RC_PTR>0 THEN

   3309  4 003516   003523 604400 4                  TMOZ    s:3311

      966     3310    3               CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK);

   3310  4 003517   000031 630400 5                  EPPR0   25
         4 003520   000006 631400 5                  EPPR1   6
         4 003521   000000 701000 xent               TSX1    FIND_DIRECT
         4 003522   000000 011000                    NOP     0
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:174  

      967     3311    3           END;

   3311  4 003523   000000 235000 xsym               LDA     RC_PTR
         4 003524   003166 605400 4                  TPNZ    s:3242

      968     3312    2       RETURN;

   3312  4 003525   000261 221200 0                  LDX1  ! PTR_TEMP+5
         4 003526   000001 702211                    TSX2  ! 1,X1

      969     3313    2   WRIT_ERR: ALTRETURN;

   3313  4 003527   000261 221200 0     WRIT_ERR     LDX1  ! PTR_TEMP+5
         4 003530   000000 702211                    TSX2  ! 0,X1

      970     3314    2   END REVERT_AN_OWNER;
      971     3315        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:175  
      972     3316        /*
      973     3317              SUBR  FIND_FIRST_PA:  GO THRU PA INDEX STRUCTURE
      974     3318                                    UNTIL LOWEST_LEVEL_PA HIT
      975     3319                                    IF DIRECTIVE IS 'CONVERT' THEN
      976     3320                                      WE WILL CREATE ONE FOR IT
      977     3321        */
      978     3322    1   FIND_FIRST_PA: PROC(FIND_TYPE) ALTRET;

   3322  4 003531   000262 741200 0     FIND_FIRST_* STX1  ! PTR_TEMP+6

      979     3323
      980     3324    2   DCL FIND_TYPE SBIN ALIGNED;
      981     3325
      982     3326    2       CALL GET_PTR(NEXT_DBK,RC_TBL.NXPNT_EIS(RC_PTR));

   3326  4 003532   000000 236000 xsym               LDQ     RC_PTR
         4 003533   000003 402003                    MPY     3,DU
         4 003534   000022 036000 5                  ADLQ    18
         4 003535   000054 235000 5                  LDA     44
         4 003536   000252 757000 0                  STAQ    @POINTER
         4 003537   000003 701000 4                  TSX1    GET_PTR
         4 003540   000000 011000                    NOP     0

      983     3327    2       IF NEXT_DBK=CURR_OWNER THEN /* SET EMPTY, DO ALTRETURN */

   3327  4 003541   000043 236000 0                  LDQ     NEXT_DBK
         4 003542   000040 116000 0                  CMPQ    CURR_OWNER
         4 003543   003546 601000 4                  TNZ     s:3329

      984     3328    2           ALTRETURN;

   3328  4 003544   000262 221200 0                  LDX1  ! PTR_TEMP+6
         4 003545   000000 702211                    TSX2  ! 0,X1

      985     3329    2       CURR_LEVEL(0)='0'B;

   3329  4 003546   000000 100400                    MLR     fill='000'O
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:176  
         4 003547   000000 000001 5                  ADSC9   0                        cn=0,n=1
         4 003550   000046 000020 0                  ADSC9   CURR_LEVEL               cn=0,n=16

      986     3330    2       CURR_LEVEL.DBK(0)=NEXT_DBK;

   3330  4 003551   000046 756000 0                  STQ     CURR_LEVEL

      987     3331    2       CURR_LEVEL.FIRST_PA(0)=NEXT_DBK; /* SAVE DBK OF FIRST_PA_IN_LEVEL */

   3331  4 003552   000047 756000 0                  STQ     CURR_LEVEL+1

      988     3332    2       STK.NEXT(0)=NEXT_DBK; /* SAVE THE NEXT PTR OF OWNER */

   3332  4 003553   000000 756000 xsym               STQ     STK

      989     3333    2       LEVEL#=0;

   3333  4 003554   000005 450000 0                  STZ     LEVEL#

      990     3334    2       CALL FIND_DIRECT(NEXT_DBK,FIND_TYPE);

   3334  4 003555   000263 236000 0                  LDQ     @FIND_TYPE
         4 003556   000054 235000 5                  LDA     44
         4 003557   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 003560   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 003561   000006 631400 5                  EPPR1   6
         4 003562   000000 701000 xent               TSX1    FIND_DIRECT
         4 003563   000000 011000                    NOP     0

      991     3335    2       CURR_LEVEL.REC$(0)=REC$;

   3335  4 003564   000000 236000 xsym               LDQ     REC$
         4 003565   000051 756000 0                  STQ     CURR_LEVEL+3

      992     3336    3       DO WHILE(PA_REC.NOT_LOWEST_LEVEL);

   3336  4 003566   000000 470400 xsym               LDP0    REC$
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:177  
         4 003567   000000 066500                    CMPB    filb='1'B
         4 003570   000001 000001                    BDSC    1,,PR0                   by=0,bit=0,n=1
         4 003571   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 003572   003725 600000 4                  TZE     s:3361

      993     3337    3           PA_REC.FIRST_IN_LEVEL = '1'B; /* SET IT IN CASE NOT */

   3337  4 003573   000000 470400 xsym               LDP0    REC$
         4 003574   003100 060400                    CSL     bolr='003'O
         4 003575   000075 000001 5                  BDSC    61                       by=0,bit=0,n=1
         4 003576   000001 020001                    BDSC    1,,PR0                   by=0,bit=2,n=1

      994     3338    3           IF LEVEL#>=31 THEN /* GOING INTO 33 LEVELS */

   3338  4 003577   000005 235000 0                  LDA     LEVEL#
         4 003600   000037 115007                    CMPA    31,DL
         4 003601   003627 604000 4                  TMI     s:3344

      995     3339    4           DO; /* THIS IS JUST IMPOSIBLE TO HAVE THAT MANY LEVELS */

      996     3340    4               CALL BIN_CHAR(2,CURR_OWNER); /* MOST LIKELY, A BUG */

   3340  4 003602   000034 630400 5                  EPPR0   28
         4 003603   000006 631400 5                  EPPR1   6
         4 003604   000000 701000 xent               TSX1    BIN_CHAR
         4 003605   000000 011000                    NOP     0

      997     3341    4               CALL ERROR_MSG(DBU#PALEV33,SC_TBL.NAME(SC_PTR),COMMAND_TEXT);

   3341  4 003606   000040 236000 5                  LDQ     32
         4 003607   000270 756000 0                  STQ     @FIND_TYPE+5
         4 003610   000000 236000 xsym               LDQ     SC_PTR
         4 003611   000014 402000 5                  MPY     12
         4 003612   000013 036000 5                  ADLQ    11
         4 003613   000077 235000 5                  LDA     63
         4 003614   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 003615   000266 630400 0                  EPPR0   @FIND_TYPE+3
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:178  
         4 003616   000036 631400 5                  EPPR1   30
         4 003617   000000 701000 xent               TSX1    ERROR_MSG
         4 003620   000000 011000                    NOP     0

      998     3342    4               UNWIND TO BREAK_CLEANUP;

   3342  4 003621   000000 100600                    MLR   ! fill='000'O
         4 003622   000007 000010 0                  ADSC9   BREAK_CLEANUP            cn=0,n=8
         4 003623   000266 000010 0                  ADSC9   @FIND_TYPE+3             cn=0,n=8
         4 003624   000266 237200 0                  LDAQ  ! @FIND_TYPE+3
         4 003625   000000 700200 xent               TSX0  ! X66_SUNWIND
         4 003626   000000 000200                    ZERO    0,128

      999     3343    4               END;
     1000     3344    3           ENTRY$=PINCRC(REC$,2*4+3*PTR_LEN); /* POINT TO FIRST ENTRY */

   3344  4 003627   000000 236000 xsym               LDQ     PTR_LEN
         4 003630   600000 402007                    MPY     -65536,DL
         4 003631   000002 036003                    ADLQ    2,DU
         4 003632   000000 036000 xsym               ADLQ    REC$
         4 003633   000000 756000 xsym               STQ     ENTRY$

     1001     3345    3           NEXT_DBK=0;

   3345  4 003634   000043 450000 0                  STZ     NEXT_DBK

     1002     3346    3           PINCRC(ADDR(NEXT_DBK),4-PTR_LEN)->CHAR_V=PA_ENTRY.PTRS;

   3346  4 003635   000000 335000 xsym               LCA     PTR_LEN
         4 003636   000000 471400 xsym               LDP1    ENTRY$
         4 003637   000000 720000 xsym               LXL0    PTR_LEN
         4 003640   040045 100540                    MLR     fill='040'O
         4 003641   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         4 003642   000044 000010 0                  ADSC9   KEY,A                    cn=0,n=*X0

     1003     3347    3           IF PA_ENTRY.C=1 THEN /* PTR GROUP PRESENT */

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:179  
   3347  4 003643   003000 061500                    CSR     bolr='003'O
         4 003644   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1
         4 003645   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 003646   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 003647   000001 116007                    CMPQ    1,DL
         4 003650   003661 601000 4                  TNZ     s:3352

     1004     3348    4           DO;

     1005     3349    4               GROUP$=PINCRC(REC$,NEXT_DBK); /* POINT TO PA_GROUP NOW */

   3349  4 003651   000043 236000 0                  LDQ     NEXT_DBK
         4 003652   000020 736000                    QLS     16
         4 003653   000000 036000 xsym               ADLQ    REC$
         4 003654   000000 756000 xsym               STQ     GROUP$

     1006     3350    4               PINCRC(ADDR(NEXT_DBK),4-PTR_LEN)->CHAR_V=PA_GROUP.PTRS;

   3350  4 003655   000000 473400 xsym               LDP3    GROUP$
         4 003656   040045 100540                    MLR     fill='040'O
         4 003657   300001 000010                    ADSC9   1,,PR3                   cn=0,n=*X0
         4 003660   000044 000010 0                  ADSC9   KEY,A                    cn=0,n=*X0

     1007     3351    4               END;

     1008     3352    3           NEXT_DBK = NEXT_DBK + BASE_DBK; /* ADJUST TO LOCAL IF LOCAL SC */

   3352  4 003661   000043 236000 0                  LDQ     NEXT_DBK
         4 003662   000000 036000 xsym               ADLQ    BASE_DBK
         4 003663   000043 756000 0                  STQ     NEXT_DBK

     1009     3353    3           LEVEL# = LEVEL# + 1;

   3353  4 003664   000005 054000 0                  AOS     LEVEL#

     1010     3354    3           CURR_LEVEL(LEVEL#)='0'B;

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:180  
   3354  4 003665   000005 235000 0                  LDA     LEVEL#
         4 003666   000004 735000                    ALS     4
         4 003667   000005 100400                    MLR     fill='000'O
         4 003670   000000 000001 5                  ADSC9   0                        cn=0,n=1
         4 003671   000046 000020 0                  ADSC9   CURR_LEVEL,A             cn=0,n=16

     1011     3355    3           CURR_LEVEL.DBK(LEVEL#)=NEXT_DBK;

   3355  4 003672   000005 235000 0                  LDA     LEVEL#
         4 003673   000002 735000                    ALS     2
         4 003674   000043 236000 0                  LDQ     NEXT_DBK
         4 003675   000046 756005 0                  STQ     CURR_LEVEL,AL

     1012     3356    3           CURR_LEVEL.FIRST_PA(LEVEL#)=NEXT_DBK; /* SAVE DBK OF FIRST ONE */

   3356  4 003676   000005 235000 0                  LDA     LEVEL#
         4 003677   000002 735000                    ALS     2
         4 003700   000043 236000 0                  LDQ     NEXT_DBK
         4 003701   000047 756005 0                  STQ     CURR_LEVEL+1,AL

     1013     3357    3           CALL FIND_DIRECT(NEXT_DBK,FIND_TYPE);

   3357  4 003702   000263 236000 0                  LDQ     @FIND_TYPE
         4 003703   000054 235000 5                  LDA     44
         4 003704   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 003705   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 003706   000006 631400 5                  EPPR1   6
         4 003707   000000 701000 xent               TSX1    FIND_DIRECT
         4 003710   000000 011000                    NOP     0

     1014     3358    3           CURR_LEVEL.REC$(LEVEL#)=REC$;

   3358  4 003711   000005 235000 0                  LDA     LEVEL#
         4 003712   000002 735000                    ALS     2
         4 003713   000000 236000 xsym               LDQ     REC$
         4 003714   000051 756005 0                  STQ     CURR_LEVEL+3,AL

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:181  
     1015     3359    3           PA_REC.FIRST_IN_LEVEL = '1'B; /* IN CASE IT IS NOT SET */

   3359  4 003715   000000 470400 xsym               LDP0    REC$
         4 003716   003100 060400                    CSL     bolr='003'O
         4 003717   000075 000001 5                  BDSC    61                       by=0,bit=0,n=1
         4 003720   000001 020001                    BDSC    1,,PR0                   by=0,bit=2,n=1

     1016     3360    3           END;

   3360  4 003721   000000 066500                    CMPB    filb='0'B
         4 003722   000001 000001                    BDSC    1,,PR0                   by=0,bit=0,n=1
         4 003723   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 003724   003573 601000 4                  TNZ     s:3337

     1017     3361    2       NO_OF_LEVELS = LEVEL#;

   3361  4 003725   000005 235000 0                  LDA     LEVEL#
         4 003726   000004 755000 0                  STA     NO_OF_LEVELS

     1018     3362    2       LEVEL# = LEVEL# + 1;

   3362  4 003727   000005 054000 0                  AOS     LEVEL#

     1019     3363
     1020     3364    2   END FIND_FIRST_PA;

   3364  4 003730   000262 221200 0                  LDX1  ! PTR_TEMP+6
         4 003731   000001 702211                    TSX2  ! 1,X1

     1021     3365        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:182  
     1022     3366        /*
     1023     3367              2ND SORT OUTPUT PROCESSING  ZIU$SC_RESORT
     1024     3368              WHEN DIRECTIVE IS TO RESORT A SORT SET
     1025     3369        */
     1026     3370    1   ZIU$SC_RESORT: ENTRY(SORT_REC,SORTREC_SIZE) ALTRET;

   3370  4 003732   000000 700200 xent  ZIU$SC_RESO* TSX0  ! X66_STATIC_2
         4 003733   000000 000002 0                  ZERO    0,2

     1027     3371
     1028     3372    1       IF SORTREC_SIZE > 0 THEN

   3372  4 003734   000002 470400 0                  LDP0    @SORTREC_SIZE
         4 003735   000000 235100                    LDA     0,,PR0
         4 003736   004107 600000 4                  TZE     s:3413

     1029     3373    2       DO;

     1030     3374    2           CURR_DBK = SORT_REC.MEMBER_DBK;

   3374  4 003737   000001 471400 0                  LDP1    @SORT_REC
         4 003740   000000 100500                    MLR     fill='000'O
         4 003741   100002 000004                    ADSC9   2,,PR1                   cn=0,n=4
         4 003742   000041 000004 0                  ADSC9   CURR_DBK                 cn=0,n=4

     1031     3375    2           IF CURR_OWNER = 0 THEN /* FIRST TIME CALLED */

   3375  4 003743   000040 235000 0                  LDA     CURR_OWNER
         4 003744   003777 601000 4                  TNZ     s:3388

     1032     3376    3           DO;

     1033     3377    3               CURR_OWNER = SORT_REC.O_PTR;

   3377  4 003745   000000 100500                    MLR     fill='000'O
         4 003746   100003 600004                    ADSC9   3,,PR1                   cn=3,n=4
         4 003747   000040 000004 0                  ADSC9   CURR_OWNER               cn=0,n=4
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:183  

     1034     3378    3               SC_PTR = SORT_REC.SC_PTR;

   3378  4 003750   000000 101500                    MRL     fill='000'O
         4 003751   100003 400001                    ADSC9   3,,PR1                   cn=2,n=1
         4 003752   000000 000004 xsym               ADSC9   SC_PTR                   cn=0,n=4

     1035     3379    3               STK.CURR(0) = CURR_OWNER;

   3379  4 003753   000040 235000 0                  LDA     CURR_OWNER
         4 003754   000002 755000 xsym               STA     STK+2

     1036     3380    3               IF SORT_REC.P_PTR ~= CURR_OWNER THEN

   3380  4 003755   000000 100500                    MLR     fill='000'O
         4 003756   100001 000004                    ADSC9   1,,PR1                   cn=0,n=4
         4 003757   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 003760   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 003761   003764 604000 4                  TMI     s:3381
         4 003762   000040 116000 0                  CMPQ    CURR_OWNER
         4 003763   003770 600000 4                  TZE     s:3384

     1037     3381    3                   NEXT_DBK=SORT_REC.MEMBER_DBK;

   3381  4 003764   000000 100500                    MLR     fill='000'O
         4 003765   100002 000004                    ADSC9   2,,PR1                   cn=0,n=4
         4 003766   000043 000004 0                  ADSC9   NEXT_DBK                 cn=0,n=4
         4 003767   004100 710000 4                  TRA     s:3409

     1038     3382         /* FLAG OWNER NEEDS TO BE UPDATED */
     1039     3383    3               ELSE
     1040     3384    3                   NEXT_DBK=-1*SORT_REC.MEMBER_DBK;/* JUST REMEMBER IT */

   3384  4 003770   000000 100500                    MLR     fill='000'O
         4 003771   100002 000004                    ADSC9   2,,PR1                   cn=0,n=4
         4 003772   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 003773   000000 236003                    LDQ     0,DU
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:184  
         4 003774   000266 136000 0                  SBLQ    @FIND_TYPE+3
         4 003775   000043 756000 0                  STQ     NEXT_DBK

     1041     3385    3               END;

   3385  4 003776   004100 710000 4                  TRA     s:3409

     1042     3386    2           ELSE
     1043     3387    3           DO; /* NOT THE FIRST TIME ENTERED */

     1044     3388    3               IF BREAK_FLAG>0 THEN

   3388  4 003777   000000 236000 xsym               LDQ     BREAK_FLAG
         4 004000   004007 604400 4                  TMOZ    s:3390

     1045     3389    3                   UNWIND TO BREAK_CLEANUP; /* NO BETTER PLACE TO CHECK */

   3389  4 004001   000000 100600                    MLR   ! fill='000'O
         4 004002   000007 000010 0                  ADSC9   BREAK_CLEANUP            cn=0,n=8
         4 004003   000266 000010 0                  ADSC9   @FIND_TYPE+3             cn=0,n=8
         4 004004   000266 237200 0                  LDAQ  ! @FIND_TYPE+3
         4 004005   000000 700200 xent               TSX0  ! X66_SUNWIND
         4 004006   000000 000200                    ZERO    0,128

     1046     3390    3               IF CURR_OWNER=SORT_REC.O_PTR AND SC_PTR=SORT_REC.SC_PTR THEN

   3390  4 004007   000000 100500                    MLR     fill='000'O
         4 004010   100003 600004                    ADSC9   3,,PR1                   cn=3,n=4
         4 004011   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 004012   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 004013   004044 604000 4                  TMI     s:3399
         4 004014   000040 116000 0                  CMPQ    CURR_OWNER
         4 004015   004044 601000 4                  TNZ     s:3399
         4 004016   000000 101500                    MRL     fill='000'O
         4 004017   100003 400001                    ADSC9   3,,PR1                   cn=2,n=1
         4 004020   000267 000004 0                  ADSC9   @FIND_TYPE+4             cn=0,n=4
         4 004021   000267 236000 0                  LDQ     @FIND_TYPE+4
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:185  
         4 004022   000000 116000 xsym               CMPQ    SC_PTR
         4 004023   004044 601000 4                  TNZ     s:3399

     1047     3391    4               DO; /* STILL PROCESSING THE SAME CHAIN SAME CIRCLE */

     1048     3392    4                   IF STK.PRIOR(1)~=STK.CURR(0) OR STK.NEXT(1)~=SORT_REC.MEMBER_DBK

   3392  4 004024   000005 236000 xsym               LDQ     STK+5
         4 004025   000002 116000 xsym               CMPQ    STK+2
         4 004026   004036 601000 4                  TNZ     s:3394
         4 004027   000000 100500                    MLR     fill='000'O
         4 004030   100002 000004                    ADSC9   2,,PR1                   cn=0,n=4
         4 004031   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 004032   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 004033   004036 604000 4                  TMI     s:3394
         4 004034   000004 116000 xsym               CMPQ    STK+4
         4 004035   004040 600000 4                  TZE     s:3395

     1049     3393    4                   THEN
     1050     3394    4                       CALL MEMBER_TO_BE_UPDATED ALTRET(WRIT_ERR);

   3394  4 004036   004245 701000 4                  TSX1    MEMBER_TO_BE_UPDATED
         4 004037   004144 702000 4                  TSX2    WRIT_ERR

     1051     3395    4                   STK(0) = STK(1); /* ROLL THE STK INFO UP */

   3395  4 004040   000000 100400                    MLR     fill='000'O
         4 004041   000004 000016 xsym               ADSC9   STK+4                    cn=0,n=14
         4 004042   000000 000016 xsym               ADSC9   STK                      cn=0,n=14

     1052     3396    4                   END;

   3396  4 004043   004100 710000 4                  TRA     s:3409

     1053     3397    3               ELSE
     1054     3398    4               DO;

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:186  
     1055     3399    4                   CALL SC_CLEANUP; /* CLEANUP THE LEFTOVER IN STK */

   3399  4 004044   004116 701000 4                  TSX1    SC_CLEANUP
         4 004045   000000 011000                    NOP     0

     1056     3400    4                   CURR_OWNER=SORT_REC.O_PTR;

   3400  4 004046   000001 470400 0                  LDP0    @SORT_REC
         4 004047   000000 100500                    MLR     fill='000'O
         4 004050   000003 600004                    ADSC9   3,,PR0                   cn=3,n=4
         4 004051   000040 000004 0                  ADSC9   CURR_OWNER               cn=0,n=4

     1057     3401    4                   SC_PTR=SORT_REC.SC_PTR;

   3401  4 004052   000000 101500                    MRL     fill='000'O
         4 004053   000003 400001                    ADSC9   3,,PR0                   cn=2,n=1
         4 004054   000000 000004 xsym               ADSC9   SC_PTR                   cn=0,n=4

     1058     3402    4                   STK.CURR(0)=CURR_OWNER;

   3402  4 004055   000040 235000 0                  LDA     CURR_OWNER
         4 004056   000002 755000 xsym               STA     STK+2

     1059     3403    4                   IF SORT_REC.P_PTR~=CURR_OWNER THEN

   3403  4 004057   000000 100500                    MLR     fill='000'O
         4 004060   000001 000004                    ADSC9   1,,PR0                   cn=0,n=4
         4 004061   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 004062   000266 236000 0                  LDQ     @FIND_TYPE+3
         4 004063   004066 604000 4                  TMI     s:3404
         4 004064   000040 116000 0                  CMPQ    CURR_OWNER
         4 004065   004072 600000 4                  TZE     s:3406

     1060     3404    4                       NEXT_DBK=SORT_REC.MEMBER_DBK; /* OWNER NEEDED UPDATED */

   3404  4 004066   000000 100500                    MLR     fill='000'O
         4 004067   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:187  
         4 004070   000043 000004 0                  ADSC9   NEXT_DBK                 cn=0,n=4
         4 004071   004100 710000 4                  TRA     s:3409

     1061     3405    4                   ELSE
     1062     3406    4                       NEXT_DBK=-1*SORT_REC.MEMBER_DBK;/* JUST REMEMBER IT */

   3406  4 004072   000000 100500                    MLR     fill='000'O
         4 004073   000002 000004                    ADSC9   2,,PR0                   cn=0,n=4
         4 004074   000266 000004 0                  ADSC9   @FIND_TYPE+3             cn=0,n=4
         4 004075   000000 236003                    LDQ     0,DU
         4 004076   000266 136000 0                  SBLQ    @FIND_TYPE+3
         4 004077   000043 756000 0                  STQ     NEXT_DBK

     1063     3407    4                   END;

     1064     3408    3               END;

     1065     3409    2           STK(1)=SORT_REC; /* PUSH REC TO STACK */

   3409  4 004100   000000 720000 xsym               LXL0    KEY_LEN
         4 004101   000023 621010                    EAX1    19,X0
         4 004102   000001 470400 0                  LDP0    @SORT_REC
         4 004103   000000 100540                    MLR     fill='000'O
         4 004104   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         4 004105   000004 000016 xsym               ADSC9   STK+4                    cn=0,n=14

     1066     3410    2           END;

   3410  4 004106   004114 710000 4                  TRA     s:3418

     1067     3411    1       ELSE
     1068     3412    2       DO; /* LAST RECORD FROM SORT */

     1069     3413    2           IF CURR_OWNER>0 THEN

   3413  4 004107   000040 236000 0                  LDQ     CURR_OWNER
         4 004110   004113 604400 4                  TMOZ    s:3415
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:188  

     1070     3414    2               CALL SC_CLEANUP;

   3414  4 004111   004116 701000 4                  TSX1    SC_CLEANUP
         4 004112   000000 011000                    NOP     0

     1071     3415    2           GOTO COMMON_RETURN; /* CLOSE THE PATCH FILE */

   3415  4 004113   002266 710000 4                  TRA     COMMON_RETURN

     1072     3416    2           END;
     1073     3417
     1074     3418    1       RETURN;

   3418  4 004114   000000 221200 0                  LDX1  ! 0
         4 004115   000001 702211                    TSX2  ! 1,X1

     1075     3419        /*    SUBR SC_CLEANUP - THE SORT OUTPUT RECORD TO ZIU$SC_RESORT
     1076     3420                   IN THE ORDER OF  'OWNER_DBKEY' THEN 'SC_PTR'  THEN  'KEY'
     1077     3421                   WE HAVE PUSHED THE LAST TWO RECORDS IN THE STK,  AND NOW
     1078     3422                   THIS SUBR IS ENTERED WHEN EITHER 'END_OF_OUT_REC' OR
     1079     3423                   'CHANGE_OF_OWNER' OR 'CHANGE_OF_SC' OCCURS AND HENCE,
     1080     3424                   WE NEED TO CLEAN UP WHATEVER LEFT ON THE STK   */
     1081     3425    1   SC_CLEANUP: PROC;

   3425  4 004116   000264 741200 0     SC_CLEANUP   STX1  ! @FIND_TYPE+1

     1082     3426
     1083     3427    2       CURR_DBK = CURR_OWNER; /* THE EXPECTED NEXT PTR OF THE LAST MEM IN STK */

   3427  4 004117   000040 235000 0                  LDA     CURR_OWNER
         4 004120   000041 755000 0                  STA     CURR_DBK

     1084     3428    2       PRIOR_DBK = STK.NEXT(1); /* AND SAVE THE OLD NEXT PTR OF IT */

   3428  4 004121   000004 236000 xsym               LDQ     STK+4
         4 004122   000042 756000 0                  STQ     PRIOR_DBK
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:189  

     1085     3429    2       IF STK.PRIOR(1)~=STK.CURR(0) OR STK.NEXT(1)~=CURR_OWNER THEN

   3429  4 004123   000005 236000 xsym               LDQ     STK+5
         4 004124   000002 116000 xsym               CMPQ    STK+2
         4 004125   004131 601000 4                  TNZ     s:3430
         4 004126   000004 236000 xsym               LDQ     STK+4
         4 004127   000040 116000 0                  CMPQ    CURR_OWNER
         4 004130   004133 600000 4                  TZE     s:3431

     1086     3430    2           CALL MEMBER_TO_BE_UPDATED; /* EITHER N/P IS BAD */

   3430  4 004131   004245 701000 4                  TSX1    MEMBER_TO_BE_UPDATED
         4 004132   000000 011000                    NOP     0

     1087     3431    2       IF PRIOR_DBK ~= CURR_OWNER OR NEXT_DBK > 0 THEN

   3431  4 004133   000042 236000 0                  LDQ     PRIOR_DBK
         4 004134   000040 116000 0                  CMPQ    CURR_OWNER
         4 004135   004140 601000 4                  TNZ     s:3432
         4 004136   000043 235000 0                  LDA     NEXT_DBK
         4 004137   004142 604400 4                  TMOZ    s:3433

     1088     3432    2           CALL OWNER_TO_BE_UPDATED; /* PTR OF THE OWNER IS BAD */

   3432  4 004140   004221 701000 4                  TSX1    OWNER_TO_BE_UPDATED
         4 004141   000000 011000                    NOP     0

     1089     3433    2   END SC_CLEANUP;

   3433  4 004142   000264 221200 0                  LDX1  ! @FIND_TYPE+1
         4 004143   000001 702211                    TSX2  ! 1,X1

     1090     3434        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:190  
     1091     3435    1   WRIT_ERR:
     1092     3436    1       MONITOR_ERR=B$TCB$->B$TCB.ALT$->B$EXCFR.ERR;

   3436  4 004144   000000 470400 xsym  WRIT_ERR     LDP0    B$TCB$
         4 004145   000000 471500                    LDP1    0,,PR0
         4 004146   100102 236100                    LDQ     66,,PR1
         4 004147   000000 756000 xsym               STQ     MSGCODE

     1093     3437    1       DCBSF = DBKEY_SORT_DCB;

   3437  4 004150   000000 220000 xsym               LDX0    DBKEY_SORT_DCB
         4 004151   000000 740000 xsym               STX0    DCBSF

     1094     3438    1       INCL_ERR=%YES#;

   3438  4 004152   400000 236003                    LDQ     -131072,DU
         4 004153   000000 756000 xsym               STQ     INCL_ERR

     1095     3439    1       CALL SYS_FUNC_ERRMSG;

   3439  4 004154   000000 631400 5                  EPPR1   0
         4 004155   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 004156   000000 011000                    NOP     0

     1096     3440    1       CALL BIN_CHAR(1,KEY.TXT);

   3440  4 004157   000100 630400 5                  EPPR0   64
         4 004160   000006 631400 5                  EPPR1   6
         4 004161   000000 701000 xent               TSX1    BIN_CHAR
         4 004162   000000 011000                    NOP     0

     1097     3441    1       SC_PTR=RC_TBL.SC_PTR(KEY.RC_PTR);

   3441  4 004163   000045 236000 0                  LDQ     KEY+1
         4 004164   000022 772000                    QRL     18
         4 004165   000777 376007                    ANQ     511,DL
         4 004166   000003 402007                    MPY     3,DL
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:191  
         4 004167   000002 236006 xsym               LDQ     RC_TBL+2,QL
         4 004170   000022 772000                    QRL     18
         4 004171   000777 376007                    ANQ     511,DL
         4 004172   000000 756000 xsym               STQ     SC_PTR

     1098     3442    1       CALL ERROR_MSG(DBU#PAPACH1,SC_TBL.NAME(SC_PTR),,COMMAND_TEXT);

   3442  4 004173   000040 236000 5                  LDQ     32
         4 004174   000030 235000 5                  LDA     24
         4 004175   000270 757000 0                  STAQ    @FIND_TYPE+5
         4 004176   000000 236000 xsym               LDQ     SC_PTR
         4 004177   000014 402000 5                  MPY     12
         4 004200   000013 036000 5                  ADLQ    11
         4 004201   000104 235000 5                  LDA     68
         4 004202   000266 757000 0                  STAQ    @FIND_TYPE+3
         4 004203   000266 630400 0                  EPPR0   @FIND_TYPE+3
         4 004204   000102 631400 5                  EPPR1   66
         4 004205   000000 701000 xent               TSX1    ERROR_MSG
         4 004206   000000 011000                    NOP     0

   3441  4 004207                       ALT_OPEN     null
     1099     3443         /* CLOSE THE DCB AND TYPE 1 MORE ERR_MSG */
     1100     3444    1   ALT_OPEN: ;
     1101     3445    1   ALT_CLOS: CALL SYS_FUNC_RELDCB; /* RELEASE TEMP FILE DCB */

   3445  4 004207   000000 631400 5     ALT_CLOS     EPPR1   0
         4 004210   000000 701000 xent               TSX1    SYS_FUNC_RELDCB
         4 004211   000000 011000                    NOP     0

     1102     3446    1       DBKEY_SORT_DCB = 0;

   3446  4 004212   000000 220003                    LDX0    0,DU
         4 004213   000000 740000 xsym               STX0    DBKEY_SORT_DCB

     1103     3447    1       CALL ERROR_MSG(DBU#PAERROR2,COMMAND_TEXT); /* INFORM USER, ABORTING */

   3447  4 004214   000106 630400 5                  EPPR0   70
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:192  
         4 004215   000006 631400 5                  EPPR1   6
         4 004216   000000 701000 xent               TSX1    ERROR_MSG
         4 004217   000000 011000                    NOP     0

     1104     3448    1       GOTO UN_WIND;

   3448  4 004220   001703 710000 4                  TRA     UN_WIND

     1105     3449        /*E* ERROR: ZIU-DBU#PAERROR2-C
     1106     3450        MESSAGE: Error: OPEN/CLOSE/READ/WRITE the temporary patch file
     1107     3451                        used by this directive.  %U1 aborted. */
     1108     3452        %EJECT;
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:193  
     1109     3453        /*
     1110     3454              SUBR OWNER_TO_BE_UPDATED/MEMBER_TO_BE_UPDATED
     1111     3455                   WRITE A RECORD TO A TEMP FILE CONTAINING
     1112     3456                   DBK OF THE RECORD WHICH HAS POINTERS TO BE UPDATED
     1113     3457                       AND PTR TO BE THE NEXT AND THE PRIOR AS WELL
     1114     3458                       AS THE AC_PTR,SC_PTR AND RC_PTR TO HELP LOCATING
     1115     3459                       THIS RECORD IN THE DATABASE
     1116     3460                   THIS SUBR IS ONLY CALLED BY 'RESORT' PROCESSOR
     1117     3461        */
     1118     3462    1   OWNER_TO_BE_UPDATED: PROC ALTRET;

   3462  4 004221   000265 741200 0     OWNER_TO_BE* STX1  ! @FIND_TYPE+2

     1119     3463
     1120     3464    2       IF NEXT_DBK>0 THEN

   3464  4 004222   000043 235000 0                  LDA     NEXT_DBK
         4 004223   004226 604400 4                  TMOZ    s:3467

     1121     3465    2           CURR_DBK = NEXT_DBK;

   3465  4 004224   000041 755000 0                  STA     CURR_DBK
         4 004225   004230 710000 4                  TRA     s:3468

     1122     3466    2       ELSE
     1123     3467    2           CURR_DBK = -1*NEXT_DBK;

   3467  4 004226   000000 531000                    NEG     0
         4 004227   000041 755000 0                  STA     CURR_DBK

     1124     3468    2       STK.RC_PTR(1)=SC_TBL.RC_PTR(SC_PTR); /* RC FOR THE OWNER */

   3468  4 004230   000000 236000 xsym               LDQ     SC_PTR
         4 004231   000405 402007                    MPY     261,DL
         4 004232   000000 116003                    CMPQ    0,DU
         4 004233   004235 605000 4                  TPL     s:3468+5
         4 004234   000044 036003                    ADLQ    36,DU
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:194  
         4 004235   003000 060406                    CSL     bolr='003'O
         4 004236   000005 650011 xsym               BDSC    SC_TBL+5,Q               by=3,bit=5,n=9
         4 004237   000007 000011 xsym               BDSC    STK+7                    by=0,bit=0,n=9

     1125     3469    2       STK.CURR(0)=STK.CURR(1);

   3469  4 004240   000006 235000 xsym               LDA     STK+6
         4 004241   000002 755000 xsym               STA     STK+2

     1126     3470    2       STK.CURR(1)=CURR_OWNER;

   3470  4 004242   000040 236000 0                  LDQ     CURR_OWNER
         4 004243   000006 756000 xsym               STQ     STK+6
         4 004244   004246 710000 4                  TRA     s:3474

     1127     3471
     1128     3472    2   MEMBER_TO_BE_UPDATED: ENTRY ALTRET;

   3472  4 004245   000265 741200 0     MEMBER_TO_B* STX1  ! @FIND_TYPE+2

     1129     3473
     1130     3474    2       SC_TBL.COUNT(SC_PTR) = SC_TBL.COUNT(SC_PTR) + 1;

   3474  4 004246   000000 236000 xsym               LDQ     SC_PTR
         4 004247   000405 402007                    MPY     261,DL
         4 004250   000000 116003                    CMPQ    0,DU
         4 004251   004253 605000 4                  TPL     s:3474+5
         4 004252   000044 036003                    ADLQ    36,DU
         4 004253   003000 060406                    CSL     bolr='003'O
         4 004254   000006 450022 xsym               BDSC    SC_TBL+6,Q               by=2,bit=5,n=18
         4 004255   000267 000044 0                  BDSC    @FIND_TYPE+4             by=0,bit=0,n=36
         4 004256   000267 236000 0                  LDQ     @FIND_TYPE+4
         4 004257   000022 732000                    QRS     18
         4 004260   000001 036007                    ADLQ    1,DL
         4 004261   000266 756000 0                  STQ     @FIND_TYPE+3
         4 004262   000000 236000 xsym               LDQ     SC_PTR
         4 004263   000405 402007                    MPY     261,DL
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:195  
         4 004264   000000 116003                    CMPQ    0,DU
         4 004265   004267 605000 4                  TPL     s:3474+17
         4 004266   000044 036003                    ADLQ    36,DU
         4 004267   003006 061400                    CSR     bolr='003'O
         4 004270   000266 000044 0                  BDSC    @FIND_TYPE+3             by=0,bit=0,n=36
         4 004271   000006 450022 xsym               BDSC    SC_TBL+6,Q               by=2,bit=5,n=18

     1131     3475    2       KEY.TXT = STK.CURR(1);

   3475  4 004272   000000 100400                    MLR     fill='000'O
         4 004273   000006 000004 xsym               ADSC9   STK+6                    cn=0,n=4
         4 004274   000044 200004 0                  ADSC9   KEY                      cn=1,n=4

     1132     3476    2       KEY.RC_PTR = STK.RC_PTR(1);

   3476  4 004275   000007 236000 xsym               LDQ     STK+7
         4 004276   000011 772000                    QRL     9
         4 004277   000045 552020 0                  STBQ    KEY+1,'20'O

     1133     3477    2       STK.NEXT(1) = CURR_DBK;

   3477  4 004300   000041 235000 0                  LDA     CURR_DBK
         4 004301   000004 755000 xsym               STA     STK+4

     1134     3478    2       STK.PRIOR(1) = STK.CURR(0);

   3478  4 004302   000002 236000 xsym               LDQ     STK+2
         4 004303   000005 756000 xsym               STQ     STK+5

     1135     3479
     1136     3480    2       CALL M$WRITE(WRITE_TEMP) ALTRET(ALT);

   3480  4 004304   000012 630400 0                  EPPR0   WRITE_TEMP
         4 004305   440001 713400                    CLIMB   alt,write
         4 004306   401400 401760                    pmme    nvectors=4
         4 004307   004313 702000 4                  TSX2    ALT

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:196  
     1137     3481
     1138     3482    2       REC_CNT = REC_CNT + 1; /* ADD THE TOT NUMBER */

   3482  4 004310   000000 054000 xsym               AOS     REC_CNT

     1139     3483    2       RETURN;

   3483  4 004311   000265 221200 0                  LDX1  ! @FIND_TYPE+2
         4 004312   000001 702211                    TSX2  ! 1,X1

     1140     3484    2   ALT: ALTRETURN;

   3484  4 004313   000265 221200 0     ALT          LDX1  ! @FIND_TYPE+2
         4 004314   000000 702211                    TSX2  ! 0,X1

WRITE_TEMP
 Sect OctLoc
   0     012   000003 777640   000022 006000   000001 777640   000044 006000    .............$..
   0     016   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     022   000000 400200   000000 000000   000000 000000   000000 000000    ................

KEY
 Sect OctLoc
   0     044   005*** ******   ****** ******                                    ........

CURR_LEVEL
 Sect OctLoc
   0     046   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   0     255   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   0     264   ****** ******   ****** ******   ****** ******   ****** ******    ................

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:197  
(unnamed)
 Sect OctLoc
   3     000   103117 116126                                                    CONV

(unnamed)
 Sect OctLoc
   5     000   000000 000000   000777 777777   777777 777777   000007 770000    ................
   5     004   001777 777640   000007 600000   000002 000000   000000 000001    ................
   5     010   000007 006000   000000 006000   000000 021762   000000 006000    ................
   5     014   000007 200000   000012 006000   000005 400000   000004 400000    ................
   5     020   000000 021753   000020 006000   000000 006000   000004 600000    ................
   5     024   000003 600000   000000 021712   000025 006000   040040 040040    ............
   5     030   000000 006014   000040 006000   000000 006000   000000 000002    ..... ..........
   5     034   000033 006000   000040 006000   000003 000000   000000 021761    ..... ..........
   5     040   000000 006000   000037 006000   000000 006000   000001 000000    ................
   5     044   000000 006000   000000 006000   000000 006000   000377 777777    ................
   5     050   400377 777777   377777 777777   000004 006000   000005 006000    ................
   5     054   000043 006000   000001 400000   000006 006000   000007 006000    .#..............
   5     060   000004 006000   000000 021767   000061 006000   000043 006000    .........1...#..
   5     064   000000 006000   000043 006000   000007 006000   000007 006000    .....#..........
   5     070   000043 006000   000041 006000   000040 006000   000007 006000    .#...!... ......
   5     074   000047 006000   400000 000000   000000 021765   000076 006000    .'...........>..
   5     100   000007 006000   000044 206000   000004 000000   000000 022006    .....$..........
   5     104   000103 006000   000000 021732   000105 006000   000000 006000    .C.......E......
     1141     3485    2   END OWNER_TO_BE_UPDATED;
     1142     3486
     1143     3487    1   END ZIU$PA_SORTIN;
     1144     3488        %EOD;

PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:198  
--  Include file information  --

   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$PA_SORTIN.

   Procedure ZIU$PA_SORTIN requires 2253 words for executable code.
   Procedure ZIU$PA_SORTIN is declared NOAUTO and requires 186 words of local(STATIC) storage.
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:199  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:200  
          MINI XREF LISTING

AC_PTR
       516**DCL      2645<<ASSIGN   2674>>IF       2676>>ASSIGN   2757>>IF       2776>>ASSIGN   2776>>ASSIGN
      2846>>ASSIGN   2848>>ASSIGN   2858>>ASSIGN   2858>>ASSIGN   2935>>IF       2938<<ASSIGN   2939>>IF
      2946>>ASSIGN   3000<<DOINDEX  3001>>IF       3003>>ASSIGN   3004>>DOWHILE  3005>>ASSIGN   3006>>ASSIGN
      3030>>ASSIGN   3030>>ASSIGN   3041>>ASSIGN   3041>>ASSIGN   3090>>ASSIGN   3244>>ASSIGN
AC_TBL.BASE_DBK
       521**DCL      2776>>ASSIGN   2848>>ASSIGN   2858>>ASSIGN   2932>>DOWHILE  2946>>ASSIGN   3030>>ASSIGN
      3041>>ASSIGN   3090>>ASSIGN   3244>>ASSIGN
AC_TBL.CHECKSUM
       530**DCL      2757>>IF
AC_TBL.DCB#
       531**DCL      2660>>ASSIGN   2676>>ASSIGN   2699>>ASSIGN   2939>>IF       3005>>ASSIGN
AC_TBL.LPP
       526**DCL      2776>>ASSIGN   2858>>ASSIGN   3030>>ASSIGN   3041>>ASSIGN
AC_TBL.PAGE_WRITTEN
       527**DCL      2668<<ASSIGN
AC_TBL.RANGE_HIGH
       523**DCL      2686>>DOWHILE  2696>>ASSIGN   3001>>IF       3004>>DOWHILE  3006>>ASSIGN
AC_TBL.RANGE_LOW
       522**DCL      2696>>ASSIGN   2697>>ASSIGN   3003>>ASSIGN
ALL_DONE
      2787**LABEL    2735--CALLALT  2763--CALLALT
ALL_PTR_EXTRACTED IN PROCEDURE REVERT_AN_OWNER
      3288**LABEL    3282--GOTO
ALT IN PROCEDURE OWNER_TO_BE_UPDATED
      3484**LABEL    3480--CALLALT
ALT IN PROCEDURE READ_NEXT_BLOCK
      2722**LABEL    2669--CALLALT  2677--CALLALT  2719--CALLALT
ALT IN PROCEDURE WRITE_PATCH_RECORD
      3228**LABEL    3219--CALLALT
ALT_CLOS
      3445**LABEL    3072--CALLALT
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:201  
ALT_OPEN
      3441**LABEL    2788--CALLALT  2993--CALLALT
AREA_KEY$
       430**DCL       433--IMP-PTR
ATBLK$
       151**DCL       152--IMP-PTR
ATBLK_PG.AREA_NM
       177**DCL       178--REDEF
ATBLK_PG.STATUS
       186**DCL       194--REDEF
B$EXCFR.ASL
      1962**DCL      1962--REDEF
B$EXCFR.ERR
      1976**DCL      3436>>ASSIGN
B$EXCFR.ERR.ERR#
      1976**DCL      1976--REDEF
B$EXCFR.EVID
      1975**DCL      1975--REDEF    1976--REDEF
B$EXCFR.IR
      1963**DCL      1963--REDEF
B$EXCFR.PREVSZ
      1962**DCL      1962--REDEF
B$EXCFR.SUBC
      1974**DCL      1974--REDEF    1975--REDEF    1975--REDEF
B$TCB.ALT$
      1980**DCL      3436>>ASSIGN
B$TCB$
       840**DCL      3436>>ASSIGN
BASE_DBK
       518**DCL      2623>>ASSIGN   2634>>ASSIGN   2848<<ASSIGN   2850<<ASSIGN   2946<<ASSIGN   2948<<ASSIGN
      3090<<ASSIGN   3092<<ASSIGN   3244<<ASSIGN   3246<<ASSIGN   3260>>ASSIGN   3352>>ASSIGN
BIN_CHAR
      2542**DCL-ENT  2777--CALL     2825--CALL     2873--CALL     2953--CALL     3140--CALL     3211--CALL
      3340--CALL     3440--CALL
BREAK_CLEANUP
        32**DCL      2681>>UNWIND   2722>>UNWIND   2981>>UNWIND   3142>>UNWIND   3213>>UNWIND   3252>>UNWIND
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:202  
      3342>>UNWIND   3389>>UNWIND
BREAK_FLAG
       850**DCL      2680>>IF       3251>>IF       3388>>IF
BUFLNSF
       741**DCL      2661<<ASSIGN   2711<<ASSIGN
BUFSF
       742**DCL      2663<<ASSIGN   2717<<ASSIGN
BUF_PTR
      2557**DCL      2645>>ASSIGN   2646>>ASSIGN   2647>>ASSIGN   2647>>ASSIGN   2648>>ASSIGN   2650>>ASSIGN
      2653>>ASSIGN   2654<<ASSIGN   2654>>ASSIGN   2660>>ASSIGN   2661>>ASSIGN   2662>>ASSIGN   2662>>ASSIGN
      2668>>ASSIGN   2673>>ASSIGN   2695>>ASSIGN   2696>>ASSIGN   2697>>ASSIGN   2699>>ASSIGN   2701>>IF
      2703>>ASSIGN   2704>>ASSIGN   2704>>ASSIGN   2708>>ASSIGN   2708>>ASSIGN   2709>>ASSIGN   2711>>ASSIGN
      2714>>ASSIGN   2731<<ASSIGN
CHAR_V
        30**DCL      2620<<ASSIGN   2620>>ASSIGN   2635<<ASSIGN   2635>>ASSIGN   3145<>CALL     3257<<ASSIGN
      3346<<ASSIGN   3350<<ASSIGN
CHECK_REC_TYPE
      2741**LABEL    2755--GOTO     2877--GOTO
CHKSUM
      2540**DCL-ENT  2759--CALL
COMMAND_TEXT
      2582**DCL      2862>>IF       2954<>CALL     3341<>CALL     3442<>CALL     3447<>CALL
COMMON_RETURN
      3069**LABEL    2921--GOTO     3415--GOTO
COMPACT_AN_OWNER
      3083**PROC     3054--CALL
COUNTSF
       792**DCL       793--REDEF
CURR_DBK
      2567**DCL      3197>>ASSIGN   3217>>ASSIGN   3225>>ASSIGN   3256<<ASSIGN   3257--ASSIGN   3260<<ASSIGN
      3260>>ASSIGN   3265>>ASSIGN   3271<>CALL     3290<>CALL     3291<<ASSIGN   3374<<ASSIGN   3427<<ASSIGN
      3465<<ASSIGN   3467<<ASSIGN   3477>>ASSIGN
CURR_LEVEL
      2584**DCL      3329<<ASSIGN   3354<<ASSIGN
CURR_LEVEL.DBK
      2585**DCL      3330<<ASSIGN   3355<<ASSIGN
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:203  
CURR_LEVEL.FIRST_PA
      2586**DCL      3160>>IF       3280>>IF       3295<>CALL     3300>>DOWHILE  3331<<ASSIGN   3356<<ASSIGN
CURR_LEVEL.REC$
      2590**DCL      3335<<ASSIGN   3358<<ASSIGN
CURR_LN
      2565**DCL      2649<<ASSIGN   2747<<ASSIGN   2747>>ASSIGN   2748>>IF       2750>>ASSIGN   2765<<ASSIGN
      2776>>ASSIGN   2858>>ASSIGN   3016<<DOINDEX  3017>>IF       3019>>ASSIGN   3030>>ASSIGN   3041>>ASSIGN
CURR_OWNER
      2566**DCL      2817<<ASSIGN   2918>>IF       2924>>IF       2926>>IF       2928>>IF       2930<<ASSIGN
      2932>>DOWHILE  2950<>CALL     2953<>CALL     2969>>ASSIGN   3051<<ASSIGN   3085<>CALL     3105>>IF
      3108>>IF       3110>>ASSIGN   3136>>IF       3176<>CALL     3196>>IF       3239<>CALL     3249>>ASSIGN
      3288<>CALL     3291>>ASSIGN   3310<>CALL     3327>>IF       3340<>CALL     3375>>IF       3377<<ASSIGN
      3379>>ASSIGN   3380>>IF       3390>>IF       3400<<ASSIGN   3402>>ASSIGN   3403>>IF       3413>>IF
      3427>>ASSIGN   3429>>IF       3431>>IF       3470>>ASSIGN
DATA$
       207**DCL       208--IMP-PTR  2651<<ASSIGN   2748>>IF       2750>>ASSIGN   2753>>ASSIGN   2760>>ASSIGN
      2767<<ASSIGN   2767>>ASSIGN   3012<<ASSIGN   3016>>DOINDEX  3017>>IF       3019>>ASSIGN   3019>>ASSIGN
DATA_PG.ACT_DATA
       220**DCL       221--REDEF     222--REDEF     223--REDEF
DATA_PG.ACT_DATA_18
       221**DCL      2750>>ASSIGN   3017>>IF
DATA_PG.CHKSUM_WD
       212**DCL      2760<<ASSIGN
DATA_PG.OFFSET
       222**DCL      3019>>ASSIGN
DATA_PG.OFF_LN.SEC
       219**DCL      2748>>IF       3016>>DOINDEX
DBKEY_SORT_DCB
      2568**DCL      3071>>ASSIGN   3437>>ASSIGN   3446<<ASSIGN
DCBSF
       721**DCL      2660<<ASSIGN   2676<<ASSIGN   2699<<ASSIGN   3005<<ASSIGN   3071<<ASSIGN   3437<<ASSIGN
EIS IN PROCEDURE GET_PTR
      2607**DCL      2604--PROC     2627--ENTRY
EIS.OFST IN PROCEDURE GET_PTR
      2609**DCL      2614>>ASSIGN   2629>>ASSIGN
EIS.SIZ IN PROCEDURE GET_PTR
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:204  
      2611**DCL      2615>>ASSIGN   2630>>ASSIGN
ENCRP_SEEDSF
       750**DCL       751--REDEF
ENTRY$
       878**DCL       869--IMP-PTR  3226>>ASSIGN   3253<<ASSIGN   3255>>ASSIGN   3257>>ASSIGN   3258>>IF
      3269>>ASSIGN   3276<<ASSIGN   3276>>ASSIGN   3344<<ASSIGN   3346>>ASSIGN   3347>>IF
ENTRY_LEN
        24**DCL      2598--IMP-SIZ  2964<<ASSIGN   3095<<ASSIGN   3096>>ASSIGN   3120>>ASSIGN   3155>>ASSIGN
      3248<<ASSIGN   3276>>ASSIGN
ERASE_IT
      2773**LABEL    2745--GOTO
ERASE_PAREC
      2548**DCL-ENT  2781--CALL     3298--CALL     3304--CALL
ERRCODESF
       752**DCL       757--REDEF
ERROR_MSG
      2543**DCL-ENT  2778--CALL     2827--CALL     2874--CALL     2954--CALL     3141--CALL     3212--CALL
      3341--CALL     3442--CALL     3447--CALL
FIDSF_RD
       768**DCL       769--REDEF
FIND_A_MEMBER
      2843**LABEL    2744--GOTO
FIND_DIRECT
      2547**DCL-ENT  2950--CALL     3085--CALL     3156--CALL     3166--CALL     3176--CALL     3239--CALL
      3283--CALL     3288--CALL     3295--CALL     3301--CALL     3310--CALL     3334--CALL     3357--CALL
FIND_FIRST_PA
      3322**PROC     3093--CALL     3247--CALL
FIND_TYPE IN PROCEDURE FIND_FIRST_PA
      3324**DCL      3322--PROC     3334<>CALL     3357<>CALL
FIRST_TIME_CALLED
       517**DCL      2671>>IF       2691<<ASSIGN   2725>>IF       2727<<ASSIGN   3116<<ASSIGN   3117>>DOWHILE
      3157>>DOWHILE  3160>>IF       3163<<ASSIGN
FLUSH_PAGES
        40**DCL-ENT  2920--CALL     2937--CALL     3062--CALL
FULLSF
       739**DCL      2666<<ASSIGN   2715<<ASSIGN
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:205  
GET_NEXT_LINE
      2747**LABEL    2737--GOTO     2742--GOTO     2752--GOTO     2770--GOTO     2784--GOTO
GET_NEXT_PAGE
      2757**LABEL    2749--GOTO
GET_PTR
      2604**PROC     2852--CALL     2961--CALL     3025--CALL     3326--CALL
GET_PTR2 IN PROCEDURE GET_PTR
      2617**ENTRY    2854--CALL     2855--CALL     3026--CALL     3104--CALL     3124--CALL     3159--CALL
      3271--CALL     3279--CALL     3297--CALL     3303--CALL
GROUP$
       879**DCL       874--IMP-PTR  3265<<ASSIGN   3266>>ASSIGN   3267>>ASSIGN   3349<<ASSIGN   3350>>ASSIGN
HELPCODE
       786**DCL       791--REDEF
HIGH_INDX
      2561**DCL      2562--REDEF    3100<<ASSIGN   3118>>IF       3151>>IF       3154>>ASSIGN   3157>>DOWHILE
      3266<<ASSIGN   3268>>DOWHILE  3273<<ASSIGN   3273>>ASSIGN
ICHKSUM
       851**DCL       852--REDEF    2760>>ASSIGN
INCL_ERR
       764**DCL      3438<<ASSIGN
INIT_CNTL_VARIABLES
      2813**PROC     2788--CALL     2993--CALL
I_O_BUF
       830**DCL      2651--ASSIGN   2663--ASSIGN   2717--ASSIGN   2994--ASSIGN   3012--ASSIGN
I_O_BUF$
       829**DCL       830--IMP-PTR  2651>>ASSIGN   2663>>ASSIGN   2717>>ASSIGN   2994>>ASSIGN   3012>>ASSIGN
KCNT
       822**DCL      3096>>ASSIGN
KEY
      2571**DCL      2005--DCLINIT
KEY.RC_PTR
      2574**DCL      2867<<ASSIGN   3029<<ASSIGN   3202<<ASSIGN   3204>>DOWHILE  3207<<ASSIGN   3207>>ASSIGN
      3441>>ASSIGN   3476<<ASSIGN
KEY.TXT
      2573**DCL      2866<<ASSIGN   3030<<ASSIGN   3218<<ASSIGN   3440<>CALL     3475<<ASSIGN
KEYSF
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:206  
       723**DCL      2664<<ASSIGN   2712<<ASSIGN
KEYVSF
       724**DCL       729--REDEF
KEYVSF.IDSKEY
       727**DCL      2662<<ASSIGN   2714<<ASSIGN
KEYVSF.LEN
       725**DCL      2667<<ASSIGN   2713<<ASSIGN
KEYVSF.WD_ONE
       726**DCL       727--REDEF
KEY_LEN
       881**DCL        17--IMP-SIZ  2887<<ASSIGN   2890>>ASSIGN   2910>>ASSIGN   2962<<ASSIGN   2964>>ASSIGN
      2975>>ASSIGN   2977>>CALL     3094<<ASSIGN   3095>>ASSIGN   3409>>ASSIGN
KEY_PTR
       506**DCL      2886<<ASSIGN   2893>>ASSIGN   2896<<ASSIGN   2896>>ASSIGN   2903>>ASSIGN   2904>>ASSIGN
      2906<<ASSIGN   2906>>ASSIGN   3020>>IF       3021>>DOINDEX
KEY_PTR2
        29**DCL      2891<<ASSIGN   2894>>ASSIGN   2897<<ASSIGN   2897>>ASSIGN
KEY_TBL.EIS
       508**DCL       509--REDEF    2893>>ASSIGN   2894>>ASSIGN   2903>>ASSIGN   2904>>ASSIGN   3022>>ASSIGN
LAST
      2552**DCL      2673<<ASSIGN   2673>>ASSIGN
LAST.AC_PTR
      2553**DCL      2645>>ASSIGN   2660>>ASSIGN   2668>>ASSIGN   2685>>ASSIGN   2695<<ASSIGN   2699>>ASSIGN
      2733<<ASSIGN
LAST.PAGES_LEFT
      2556**DCL      2683>>IF       2696<<ASSIGN   2701>>IF       2704<<ASSIGN   2704>>ASSIGN   2708>>ASSIGN
      2709<<ASSIGN   2734<<ASSIGN
LAST.PAGES_READ
      2554**DCL      2647>>ASSIGN   2661>>ASSIGN   2662>>ASSIGN   2703<<ASSIGN   2708<<ASSIGN   2711>>ASSIGN
LAST.RB
      2555**DCL      2646>>ASSIGN   2647<<ASSIGN   2648>>ASSIGN   2662>>ASSIGN   2697<<ASSIGN   2714>>ASSIGN
LAST_BUF
      2564**DCL      2653<<ASSIGN   2673>>ASSIGN   2683>>IF       2685>>ASSIGN
LEVEL#
        26**DCL      2966<<ASSIGN   3294<<DOINDEX  3295>>CALL     3299>>IF       3300>>DOWHILE  3333<<ASSIGN
      3338>>IF       3353<<ASSIGN   3353>>ASSIGN   3354>>ASSIGN   3355>>ASSIGN   3356>>ASSIGN   3358>>ASSIGN
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:207  
      3361>>ASSIGN   3362<<ASSIGN   3362>>ASSIGN
LOW_INDX
      2559**DCL      2560--REDEF    3099<<ASSIGN   3106<<ASSIGN   3118>>IF       3120>>ASSIGN   3136>>IF
      3147<<ASSIGN   3147>>ASSIGN   3157>>DOWHILE  3254<<DOINDEX
M$WRITE
      1350**DCL-ENT  2868--CALL     3033--CALL     3219--CALL     3480--CALL
MEMBER_TO_BE_UPDATED IN PROCEDURE OWNER_TO_BE_UPDATED
      3472**ENTRY    3394--CALL     3430--CALL
MONITOR_ERR
       759**DCL      3436<<ASSIGN
MSGCODE
       758**DCL       759--REDEF
MSTR$
       399**DCL       402--IMP-PTR
MSTR_REF.NXTHSH
       405**DCL       406--REDEF
MSTR_REF.PAENT
       411**DCL       412--REDEF
MSTR_REF.PAOFF
       408**DCL       409--REDEF
MUST_WRITE
      2560**DCL      2657>>IF       2659<<ASSIGN   2732<<ASSIGN   2782<<ASSIGN
NBUFS
        28**DCL      2650>>ASSIGN   2663>>ASSIGN   2701>>IF       2703>>ASSIGN   2704>>ASSIGN   2717>>ASSIGN
      2994>>ASSIGN   3007>>IF       3008>>ASSIGN   3096>>ASSIGN
NEXT_DBK
      2570**DCL      3101<>CALL     3112>>ASSIGN   3155<<ASSIGN   3156<>CALL     3159<>CALL     3160>>IF
      3166<>CALL     3167<>CALL     3211<>CALL     3279<>CALL     3280>>IF       3283<>CALL     3297<>CALL
      3300>>DOWHILE  3301<>CALL     3303<>CALL     3326<>CALL     3327>>IF       3330>>ASSIGN   3331>>ASSIGN
      3332>>ASSIGN   3334<>CALL     3345<<ASSIGN   3346--ASSIGN   3349>>ASSIGN   3350--ASSIGN   3352<<ASSIGN
      3352>>ASSIGN   3355>>ASSIGN   3356>>ASSIGN   3357<>CALL     3381<<ASSIGN   3384<<ASSIGN   3404<<ASSIGN
      3406<<ASSIGN   3431>>IF       3464>>IF       3465>>ASSIGN   3467>>ASSIGN
NO_AREAS
       441**DCL      2686>>DOWHILE  2689>>IF       2932>>DOWHILE  3000>>DOINDEX
NO_OF_LEVELS
        25**DCL      2965<<ASSIGN   3160>>IF       3160>>IF       3280>>IF       3280>>IF       3294>>DOINDEX
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:208  
      3361<<ASSIGN
NO_SETS
       462**DCL      2728>>DOINDEX  2818>>DOINDEX
OPEN_AREA
      2544**DCL-ENT  2940--CALL
OSTK$
      2593**DCL      2595--IMP-PTR  2994<<ASSIGN   3041>>ASSIGN   3049>>ASSIGN   3051>>ASSIGN
OUT_INDX
       831**DCL      2650<<ASSIGN   2651>>ASSIGN   2663>>ASSIGN   2717>>ASSIGN   3006<<ASSIGN   3007>>IF
      3008<<ASSIGN   3009<>CALL     3011>>DOINDEX  3048>>ASSIGN   3060>>ASSIGN
OWNER_CNT
      2563**DCL      2564--REDEF    3010<<ASSIGN   3040<<ASSIGN   3040>>ASSIGN   3041>>ASSIGN   3049>>ASSIGN
      3050>>DOINDEX  3061>>IF       3096>>ASSIGN
OWNER_STK
      2595**DCL      3041<<ASSIGN   3051>>ASSIGN
OWNER_TO_BE_UPDATED
      3462**PROC     3432--CALL
PAENT_STK.PA_DBK
      2597**DCL      3122>>ASSIGN   3155>>ASSIGN
PAENT_STK_SIZE
      2599**DCL      3096<<ASSIGN   3147>>ASSIGN   3152>>ASSIGN
PAGE_MODIFIED
      2562**DCL      2656<<ASSIGN   2757>>IF       2769<<ASSIGN   2783<<ASSIGN
PASTK$
      2594**DCL      3049<<ASSIGN   3103>>ASSIGN   3120>>ASSIGN   3155>>ASSIGN
PA_CLEANUP
      2546**DCL-ENT  2919--CALL     2927--CALL     3172--CALL
PA_ENTRY.C
       870**DCL      3258>>IF       3347>>IF
PA_ENTRY.PTRS
       873**DCL      3257>>ASSIGN   3346>>ASSIGN
PA_ENTRY.TYPE
       872**DCL      3121>>ASSIGN   3226>>ASSIGN   3269<<ASSIGN
PA_GROUP.NO_GROUPS
       875**DCL      3266>>ASSIGN
PA_GROUP.PTRS
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:209  
       877**DCL      3350>>ASSIGN
PA_GROUP.TYPE
       876**DCL      3269>>ASSIGN
PA_REC.ENTRIES
       867**DCL      3254>>DOINDEX
PA_REC.FIRST_IN_LEVEL
       863**DCL      3337<<ASSIGN   3359<<ASSIGN
PA_REC.NOT_LOWEST_LEVEL
       861**DCL      3336>>DOWHILE
PA_REC.TYPE
       859**DCL      2951>>IF       3023>>IF       3038>>IF       3086>>ASSIGN   3240>>ASSIGN
POINTER IN PROCEDURE GET_PTR
      2606**DCL      2604--PROC     2617--ENTRY    2619<<ASSIGN   2620--ASSIGN   2622>>IF       2623<<ASSIGN
      2623>>ASSIGN   2627--ENTRY    2632--ENTRY    2634>>ASSIGN
POOL.LOCKS
      2580**DCL      3014<<ASSIGN
POOL.MUST_WRITE
      2579**DCL      3015<<ASSIGN
POOL.PAGE#
      2581**DCL      3013<<ASSIGN
POOL_MAX
      2576**DCL      2815<<ASSIGN   3048<<ASSIGN
PRFR
        43**DCL      2893<<ASSIGN   2903<<ASSIGN   3121<<ASSIGN   3129>>DOWHILE
PRFR2
        44**DCL      2894<<ASSIGN   2904<<ASSIGN
PRIOR_DBK
      2569**DCL      3196>>IF       3215>>ASSIGN   3218>>ASSIGN   3224>>ASSIGN   3225<<ASSIGN   3249<<ASSIGN
      3428<<ASSIGN   3431>>IF
PTR_LEN
       880**DCL        30--IMP-SIZ   873--IMP-SIZ   877--IMP-SIZ  2615<<ASSIGN   2620>>ASSIGN   2620>>ASSIGN
      2620>>ASSIGN   2624>>ASSIGN   2630<<ASSIGN   2635>>ASSIGN   2635>>ASSIGN   2635>>ASSIGN   2636>>ASSIGN
      2963<<ASSIGN   2964>>ASSIGN   3095>>ASSIGN   3145>>CALL     3248>>ASSIGN   3253>>ASSIGN   3257>>ASSIGN
      3257>>ASSIGN   3257>>ASSIGN   3344>>ASSIGN   3346>>ASSIGN   3346>>ASSIGN   3346>>ASSIGN   3350>>ASSIGN
      3350>>ASSIGN   3350>>ASSIGN
PTR_TEMP IN PROCEDURE GET_PTR
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:210  
      2612**DCL      2634<<ASSIGN   2635--ASSIGN
PUSH_PAENTRY
      2550**DCL-ENT  3101--CALL     3167--CALL
RB
       811**DCL      2646<<ASSIGN   2647>>ASSIGN   2762>>IF       2766<<ASSIGN   2766>>ASSIGN   2776>>ASSIGN
      2858>>ASSIGN   3003<<ASSIGN   3004>>DOWHILE  3006>>ASSIGN   3009<>CALL     3013>>ASSIGN   3030>>ASSIGN
      3041>>ASSIGN   3060<<ASSIGN   3060>>ASSIGN
RC_PTR
       489**DCL      2741>>IF       2743>>IF       2754<<ASSIGN   2773>>ASSIGN   2843>>ASSIGN   2844>>ASSIGN
      2852>>CALL     2867>>ASSIGN   2871>>IF       2876<<ASSIGN   2876>>ASSIGN   2886>>ASSIGN   2902>>DOINDEX
      2911<<ASSIGN   2911>>ASSIGN   2949<<ASSIGN   2951>>IF       2961>>CALL     2970>>ASSIGN   3022<<ASSIGN
      3023>>IF       3025>>CALL     3029>>ASSIGN   3086<<ASSIGN   3087>>DOWHILE  3088>>ASSIGN   3111>>ASSIGN
      3174<<ASSIGN   3174>>ASSIGN   3175>>IF       3240<<ASSIGN   3241>>DOWHILE  3242>>ASSIGN   3289>>CALL
      3308<<ASSIGN   3308>>ASSIGN   3309>>IF       3326>>CALL
RC_TBL.KEY_PTR
       504**DCL      2886>>ASSIGN
RC_TBL.MANUAL
       502**DCL      2871>>IF
RC_TBL.NO_OF_KEYS
       503**DCL      2902>>DOINDEX
RC_TBL.NXPNT_EIS
       491**DCL       492--REDEF    2852<>CALL     2961<>CALL     3025<>CALL     3289<>CALL     3326<>CALL
RC_TBL.RC_NEXT
       499**DCL      2876>>ASSIGN   2911>>ASSIGN   3174>>ASSIGN   3308>>ASSIGN
RC_TBL.SC_PTR
       500**DCL      2844>>ASSIGN   3088>>ASSIGN   3242>>ASSIGN   3441>>ASSIGN
RC_TBL.TYPE
       496**DCL      2951>>IF       3023>>IF       3129>>DOWHILE  3204>>DOWHILE
RE
       812**DCL      2648<<ASSIGN   2762>>IF
READ_DB
      2541**DCL-ENT  3009--CALL
READ_NEXT_BLOCK
      2643**PROC     2735--CALL     2736--CALL     2763--CALL
REC$
       810**DCL       833--IMP-PTR   857--IMP-PTR  2614>>ASSIGN   2629>>ASSIGN   2753<<ASSIGN   2754>>ASSIGN
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:211  
      2951>>IF       3019<<ASSIGN   3023>>IF       3038>>IF       3086>>ASSIGN   3158>>ASSIGN   3240>>ASSIGN
      3253>>ASSIGN   3254>>DOINDEX  3265>>ASSIGN   3278>>ASSIGN   3296>>ASSIGN   3302>>ASSIGN   3335>>ASSIGN
      3336>>DOWHILE  3337>>ASSIGN   3344>>ASSIGN   3349>>ASSIGN   3358>>ASSIGN   3359>>ASSIGN
REC2$
        45**DCL      2614<<ASSIGN   2620>>ASSIGN   2624<<ASSIGN   2624>>ASSIGN   2629<<ASSIGN   2635>>ASSIGN
      2636<<ASSIGN   2636>>ASSIGN   2885<<ASSIGN   3103<<ASSIGN   3120<<ASSIGN   3121>>ASSIGN   3122>>ASSIGN
      3123<<ASSIGN   3123>>ASSIGN   3145>>CALL     3158<<ASSIGN   3255<<ASSIGN   3267<<ASSIGN   3269>>ASSIGN
      3270<<ASSIGN   3270>>ASSIGN   3278<<ASSIGN   3296<<ASSIGN   3302<<ASSIGN
REC_CNT
      2575**DCL      2869<<ASSIGN   2869>>ASSIGN   3034<<ASSIGN   3034>>ASSIGN   3069>>IF       3220<<ASSIGN
      3220>>ASSIGN   3482<<ASSIGN   3482>>ASSIGN
REC_DATA_LN
       838**DCL       837--IMP-SIZ
REC_FRMT.TYPE
       835**DCL      2754>>ASSIGN
REC_XREF$
       454**DCL       455--IMP-PTR
REVERT_AN_OWNER
      3236**PROC     3057--CALL
SC_CLEANUP
      3425**PROC     3399--CALL     3414--CALL
SC_PTR
       472**DCL      2773<<ASSIGN   2778>>CALL     2818<<DOINDEX  2820>>ASSIGN   2821>>ASSIGN   2824>>ASSIGN
      2827>>CALL     2844<<ASSIGN   2845>>ASSIGN   2847>>IF       2874>>CALL     2887>>ASSIGN   2888>>IF
      2891>>ASSIGN   2892>>DOINDEX  2924>>IF       2944<<ASSIGN   2945>>IF       2949>>ASSIGN   2954>>CALL
      2962>>ASSIGN   2963>>ASSIGN   3088<<ASSIGN   3089>>IF       3094>>ASSIGN   3127>>ASSIGN   3129>>DOWHILE
      3134>>IF       3137>>ASSIGN   3141>>CALL     3202>>ASSIGN   3204>>DOWHILE  3209>>IF       3212>>CALL
      3221>>ASSIGN   3221>>ASSIGN   3242<<ASSIGN   3243>>IF       3248>>ASSIGN   3341>>CALL     3378<<ASSIGN
      3390>>IF       3401<<ASSIGN   3441<<ASSIGN   3442>>CALL     3468>>ASSIGN   3474>>ASSIGN   3474>>ASSIGN
SC_TBL.COUNT
       487**DCL      2729<<ASSIGN   2821>>ASSIGN   2824<<ASSIGN   3474<<ASSIGN   3474>>ASSIGN
SC_TBL.COUNT2
       486**DCL      2820<<ASSIGN   3221<<ASSIGN   3221>>ASSIGN
SC_TBL.GLOBAL
       483**DCL      2847>>IF       2945>>IF       3089>>IF       3243>>IF
SC_TBL.KEY_PTR
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:212  
       485**DCL       486--REDEF    2891>>ASSIGN
SC_TBL.NAME
       474**DCL      2778<>CALL     2827<>CALL     2874<>CALL     2954<>CALL     3141<>CALL     3212<>CALL
      3341<>CALL     3442<>CALL
SC_TBL.NO_OF_KEYS
       482**DCL      2892>>DOINDEX
SC_TBL.NO_OF_SM
       481**DCL      3129>>DOWHILE  3134>>IF       3204>>DOWHILE  3209>>IF
SC_TBL.PA_KEYSIZE
       477**DCL      2887>>ASSIGN   2962>>ASSIGN   3094>>ASSIGN   3248>>ASSIGN
SC_TBL.PA_PTRSIZE
       476**DCL      2963>>ASSIGN
SC_TBL.RC_PTR
       484**DCL      2949>>ASSIGN   3127>>ASSIGN   3137>>ASSIGN   3202>>ASSIGN   3468>>ASSIGN
SC_TBL.SETYPE
       475**DCL      2888>>IF
SET_EMPTY IN PROCEDURE COMPACT_AN_OWNER
      3174**LABEL    3093--CALLALT
SET_EMPTY IN PROCEDURE REVERT_AN_OWNER
      3308**LABEL    3247--CALLALT
SET_XREF$
       443**DCL       444--IMP-PTR
SORTREC_SIZE
         8**DCL         6--PROC     2787<<ASSIGN   2910<<ASSIGN   2914--ENTRY    2916>>IF       3370--ENTRY
      3372>>IF
SORT_REC
         9**DCL         6--PROC     2910--ASSIGN   2914--ENTRY    2975>>ASSIGN   3370--ENTRY    3409>>ASSIGN
SORT_REC.AC_PTR
        14**DCL      2846<<ASSIGN
SORT_REC.KEY_LOC
        17**DCL      2885--ASSIGN   2890<<ASSIGN   2977<>CALL
SORT_REC.MEMBER_DBK
        12**DCL      2858<<ASSIGN   2866>>ASSIGN   2873<>CALL     3374>>ASSIGN   3381>>ASSIGN   3384>>ASSIGN
      3392>>IF       3404>>ASSIGN   3406>>ASSIGN
SORT_REC.N_PTR
        10**DCL      2852<>CALL     2857<<ASSIGN
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:213  
SORT_REC.O_PTR
        16**DCL      2855<>CALL     2860>>IF       2924>>IF       2928>>IF       2930>>ASSIGN   3377>>ASSIGN
      3390>>IF       3400>>ASSIGN
SORT_REC.P_PTR
        11**DCL      2854<>CALL     3380>>IF       3403>>IF
SORT_REC.RC_PTR
        13**DCL      2843<<ASSIGN
SORT_REC.SC_PTR
        15**DCL      2845<<ASSIGN   2924>>IF       2944>>ASSIGN   3378>>ASSIGN   3390>>IF       3401>>ASSIGN
STK
        18**DCL      2975<<ASSIGN   3395<<ASSIGN   3395>>ASSIGN   3409<<ASSIGN
STK.CURR
        21**DCL      2969<<ASSIGN   3110<<ASSIGN   3124<>CALL     3136>>IF       3204>>DOWHILE  3215<<ASSIGN
      3226<<ASSIGN   3379<<ASSIGN   3392>>IF       3402<<ASSIGN   3429>>IF       3469<<ASSIGN   3469>>ASSIGN
      3470<<ASSIGN   3475>>ASSIGN   3478>>ASSIGN
STK.NEXT
        19**DCL      2864<<ASSIGN   2959<<ASSIGN   2961<>CALL     3025<>CALL     3027>>IF       3112<<ASSIGN
      3122<<ASSIGN   3140<>CALL     3197<<ASSIGN   3217<<ASSIGN   3289<>CALL     3332<<ASSIGN   3392>>IF
      3428>>ASSIGN   3429>>IF       3477<<ASSIGN
STK.PRIOR
        20**DCL      2865<<ASSIGN   3026<>CALL     3027>>IF       3216<<ASSIGN   3216>>ASSIGN   3224<<ASSIGN
      3392>>IF       3429>>IF       3478<<ASSIGN
STK.RC_PTR
        22**DCL      2970<<ASSIGN   3111<<ASSIGN   3127<<ASSIGN   3129>>DOWHILE  3132<<ASSIGN   3132>>ASSIGN
      3137<<ASSIGN   3468<<ASSIGN   3476>>ASSIGN
STORE_AN_ENTRY
      2549**DCL-ENT  2971--CALL     2977--CALL     3113--CALL     3145--CALL
STORE_PTR IN PROCEDURE GET_PTR
      2627**ENTRY    3289--CALL
STORE_PTR2 IN PROCEDURE GET_PTR
      2632**ENTRY    3290--CALL
SWAP_PTR
      2577**DCL      2816<<ASSIGN
SYS_FUNC_CHECK
        37**DCL-ENT  2677--CALL
SYS_FUNC_CLOS
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:214  
        35**DCL-ENT  3072--CALL
SYS_FUNC_ERRMSG
        34**DCL-ENT  3439--CALL
SYS_FUNC_READ
        33**DCL-ENT  2719--CALL
SYS_FUNC_RELDCB
        36**DCL-ENT  3445--CALL
SYS_FUNC_WRIT
        38**DCL-ENT  2669--CALL
TYPE.MSTRINDX
       391**DCL      2754>>ASSIGN   3038>>IF       3086>>ASSIGN   3240>>ASSIGN
UN_WIND
      2981**LABEL    2779--GOTO     2940--CALLALT  2955--GOTO     3009--CALLALT  3448--GOTO
WAITSF
       737**DCL      2665<<ASSIGN   2716<<ASSIGN
WRITE_PATCH_RECORD
      3194**PROC     3261--CALL     3272--CALL     3292--CALL
WRITE_TEMP
      2005**DCL      2868<>CALL     3033<>CALL     3219<>CALL     3480<>CALL
WRITE_TEMP.STATION_
      2007**DCL      2007--REDEF
WRITE_TEMP.V
      2008**DCL      2005--DCLINIT
WRITE_TEMP.V.DVBYTE.VFC#
      2014**DCL      2014--REDEF
WRIT_ERR
      3436**LABEL    2868--CALLALT  2919--CALLALT  2927--CALLALT  2971--CALLALT  2977--CALLALT  3033--CALLALT
      3054--CALLALT  3057--CALLALT  3394--CALLALT
WRIT_ERR IN PROCEDURE COMPACT_AN_OWNER
      3180**LABEL    3113--CALLALT  3145--CALLALT  3172--CALLALT
WRIT_ERR IN PROCEDURE REVERT_AN_OWNER
      3313**LABEL    3261--CALLALT  3272--CALLALT
X
       827**DCL      2685<<ASSIGN   2686>>DOWHILE  2686>>DOWHILE  2687<<ASSIGN   2687>>ASSIGN   2689>>IF
      2695>>ASSIGN   2696>>ASSIGN   2696>>ASSIGN   2697>>ASSIGN   2728<<DOINDEX  2729>>ASSIGN   2750<<ASSIGN
      2751>>IF       2753>>ASSIGN   2776<<ASSIGN   2777<>CALL     2821<<ASSIGN   2822>>IF       2825<>CALL
PL6.E3A0      #002=ZIU$PA_SORTIN File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:215  
      2892<<DOINDEX  2902<<DOINDEX  2931<<ASSIGN   2932>>DOWHILE  2932>>DOWHILE  2933<<ASSIGN   2933>>ASSIGN
      2935>>IF       2938>>ASSIGN   3011<<DOINDEX  3012>>ASSIGN   3013>>ASSIGN   3013>>ASSIGN   3014>>ASSIGN
      3015>>ASSIGN   3030>>ASSIGN   3041>>ASSIGN   3104<>CALL     3105>>IF       3108>>IF       3128<<ASSIGN
      3129>>DOWHILE  3131<<ASSIGN   3131>>ASSIGN   3134>>IF       3152<<ASSIGN   3154<<ASSIGN   3155>>ASSIGN
      3203<<ASSIGN   3204>>DOWHILE  3206<<ASSIGN   3206>>ASSIGN   3209>>IF
Y
      2558**DCL      3021<<DOINDEX  3022>>ASSIGN   3050<<DOINDEX  3051>>ASSIGN
ZI$DIR.ALTKEY
      1112**DCL      1113--REDEF    1114--REDEF
ZI$DIR.AREAFID
      1078**DCL      1079--REDEF
ZI$DIR.CODE
      1094**DCL      2774>>IF       2819>>IF       2826>>IF       2826>>IF       2853>>IF       2856>>IF
      2958>>IF       3020>>IF       3053>>IF
ZI$DIR.DATE
      1117**DCL      1121--REDEF
ZI$DIR.DEST_SEED
      1073**DCL      1074--REDEF    1075--REDEF
ZI$DIR.ENCP_SEED
      1070**DCL      1071--REDEF    1072--REDEF
ZI$DIR.INSERT_DUMMY
      1114**DCL      2967>>IF       3105>>IF       3108>>IF
ZI$DIR.REPRT_ZERO
      1104**DCL      1105--REDEF
ZI$DIR.SCHFID
      1076**DCL      1077--REDEF
ZI$DIR.TIME
      1122**DCL      1127--REDEF
ZIU$DBAMP
        42**DCL-ENT  2895--CALL     2905--CALL

PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:216  
     1145        1        /*T***********************************************************/
     1146        2        /*T*                                                         */
     1147        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1148        4        /*T*                                                         */
     1149        5        /*T***********************************************************/
     1150        6
     1151        7        /*
     1152        8              SORT KCE PROCEDURE - ZIU$PA_CMPKEY
     1153        9        */
     1154       10        ZIU$PA_CMPKEY: PROC(REC1,REC2,RESULT) NOAUTO;
     1155       11
     1156       12    1   DCL RESULT SBIN WORD; /* 0 FOR =,1 FOR <,2 FOR > */
     1157       13    1   DCL 1 REC1 CALIGNED,
     1158       14    1         2 N_PTR UBIN UNAL,
     1159       15    1         2 P_PTR UBIN UNAL,
     1160       16    1         2 MEMBER_DBK UBIN UNAL,
     1161       17    1         2 RC_PTR UBIN BYTE UNAL,
     1162       18    1         2 AC_PTR UBIN BYTE UNAL,
     1163       19    1         2 SC_PTR UBIN BYTE UNAL,
     1164       20    1         2 O_PTR UBIN UNAL,
     1165       21    1         2 KEY_LOC CHAR(1) UNAL;
     1166       22    1   DCL 1 REC2 CALIGNED,
     1167       23    1         2 N_PTR UBIN UNAL,
     1168       24    1         2 P_PTR UBIN UNAL,
     1169       25    1         2 MEMBER_DBK UBIN UNAL,
     1170       26    1         2 RC_PTR UBIN BYTE UNAL,
     1171       27    1         2 AC_PTR UBIN BYTE UNAL,
     1172       28    1         2 SC_PTR UBIN BYTE UNAL,
     1173       29    1         2 O_PTR UBIN UNAL,
     1174       30    1         2 KEY_LOC CHAR(1) UNAL;
     1175       31
     1176       32    1   DCL ZIU$DBPCF ENTRY; /* BMAP KEY COMPARE SUBR (ORIG FROM ZIM$DBPCF) */
     1177       33
     1178       34    1   DCL X SBIN SYMREF ALIGNED;
     1179       35    1   DCL REC1$ PTR STATIC SYMDEF ALIGNED; /* CANT USE REC$ HERE */
     1180       36    1   DCL REC2$ PTR SYMREF ALIGNED;
     1181       37    1   DCL PRFR UBIN SYMREF ALIGNED;
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:217  
     1182       38    1   DCL PRFR2 UBIN SYMREF ALIGNED;
     1183       39    1   DCL RC SBIN STATIC ALIGNED; /* DONT TOUCH RC_PTR HERE */
     1184       40    1   DCL SC SBIN STATIC ALIGNED;
     1185       41
     1186       42        %INCLUDE ZI_DBU_XREF;
     1187      209         %PA_XREF_TBLS;
     1188      275        %INCLUDE ZI$DIR;
     1189      432         %DIR;
     1190      576        %INCLUDE ZI_PRSE_SUBS;
     1191      732
     1192      733    1       IF REC1.O_PTR < REC2.O_PTR THEN
     1193      734    1           RESULT = 1;
     1194      735    1       ELSE
     1195      736    1           IF REC1.O_PTR > REC2.O_PTR THEN
     1196      737    1               RESULT = 2;
     1197      738    1           ELSE
     1198      739    2           DO; /* OWNER DBK ARE EQUAL, NEXT COMPARE SC */
     1199      740    2               RC = REC1.RC_PTR;
     1200      741    2               SC = REC1.SC_PTR;
     1201      742    2               IF SC < REC2.SC_PTR THEN
     1202      743    2                   RESULT = 1;
     1203      744    2               ELSE
     1204      745    2                   IF SC > REC2.SC_PTR THEN
     1205      746    2                       RESULT = 2;
     1206      747    2                   ELSE
     1207      748    3                   DO; /* O_PTR AND SC ALL EQUAL, COMPARE SORT_KEYS */
     1208      749         /* BUT IF WE ARE SORTING A SET WITH SORT BY DEFINED KEYS
     1209      750            WITHIN RECORDS THEN WE SHOULD COMPARE RC FIRST */
     1210      751    3                       IF SC_TBL.SETYPE(SC)=2 AND RC~=REC2.RC_PTR THEN
     1211      752    4                       DO;
     1212      753    4                           IF RC < REC2.RC_PTR THEN
     1213      754    4                               RESULT = 1;
     1214      755    4                           ELSE
     1215      756    4                               RESULT = 2;
     1216      757    4                           RETURN;
     1217      758    4                           END;
     1218      759    3                       REC1$=ADDR(REC1.KEY_LOC);
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:218  
     1219      760    3                       REC2$=ADDR(REC2.KEY_LOC);
     1220      761    3                       PRFR=0;
     1221      762    3                       X=RC_TBL.NO_OF_KEYS(RC);
     1222      763    3                       IF ZI$DIR.CODE=#RESORT THEN
     1223      764    3                           KEY_PTR=RC_TBL.KEY_PTR(RC)+1; /* 1ST KEY */
     1224      765    3                       ELSE
     1225      766    3                           KEY_PTR=SC_TBL.KEY_PTR(SC); /* 1ST KEY FOR PA SETS */
     1226      767         /* DO UNTIL A NON-EQUAL KEY FOUND */
     1227      768    4                       DO WHILE(X>0 AND PRFR=0);
     1228      769    4                           PRFR=KEY_TBL.EIS(KEY_PTR);
     1229      770    4                           CALL ZIU$DBPCF;
     1230      771    4                           X=X-1;
     1231      772    4                           IF ZI$DIR.CODE=#RESORT THEN /* NON PA SET */
     1232      773    4                               KEY_PTR = KEY_PTR + 2;
     1233      774    4                           ELSE
     1234      775    4                               KEY_PTR = KEY_PTR + 1;
     1235      776    4                           END;
     1236      777        /*
     1237      778              ZIU$DBPCF RETURNS  COMPARING RESULT IN PRFR
     1238      779        */
     1239      780    3                       RESULT = PRFR;
     1240      781    3                       END;
     1241      782    2               END;
     1242      783    1   END ZIU$PA_CMPKEY;
     1243      784        %EOD;

PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:219  
--  Include file information  --

   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$PA_CMPKEY.

   Procedure ZIU$PA_CMPKEY requires 146 words for executable code.
   Procedure ZIU$PA_CMPKEY is declared NOAUTO and requires 10 words of local(STATIC) storage.

PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:220  

 Object Unit name= ZIU$PA_CMPKEY                              File name= ZIU$COMPACT.:ZIC0TOU
 UTS= SEP 05 '97 13:10:44.04 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    10     12  ZIU$PA_CMPKEY
    1   Proc  even  none   146    222  ZIU$PA_CMPKEY
    2  RoData even  none     4      4  ZIU$PA_CMPKEY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        3  ZIU$PA_CMPKEY

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      4  REC1$

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 ZIU$DBPCF
                       nStd      0 X66_STATIC_3
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:221  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     X                                     REC2$                                 PRFR
     PRFR2                                 TYPE                                  SC_PTR
     SC_TBL                                RC_PTR                                RC_TBL
     KEY_PTR                               KEY_TBL                               AC_PTR
     FIRST_TIME_CALLED                     BASE_DBK                              AC_TBL
     ZI$DIR                                SCHEMA_ACTIVE                         RECORD_LIST
     SET_LIST                              RETAIN_LIST                           DUMP_FID
     ALTKY                                 INIT_RG                               KEY_RNG
     ITEM_LIST
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:222  


     1145        1        /*T***********************************************************/
     1146        2        /*T*                                                         */
     1147        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1148        4        /*T*                                                         */
     1149        5        /*T***********************************************************/
     1150        6
     1151        7        /*
     1152        8              SORT KCE PROCEDURE - ZIU$PA_CMPKEY
     1153        9        */
     1154       10        ZIU$PA_CMPKEY: PROC(REC1,REC2,RESULT) NOAUTO;

     10  1 000000   000000 700200 xent  ZIU$PA_CMPK* TSX0  ! X66_STATIC_3
         1 000001   000000 000003 0                  ZERO    0,3

     1155       11
     1156       12    1   DCL RESULT SBIN WORD; /* 0 FOR =,1 FOR <,2 FOR > */
     1157       13    1   DCL 1 REC1 CALIGNED,
     1158       14    1         2 N_PTR UBIN UNAL,
     1159       15    1         2 P_PTR UBIN UNAL,
     1160       16    1         2 MEMBER_DBK UBIN UNAL,
     1161       17    1         2 RC_PTR UBIN BYTE UNAL,
     1162       18    1         2 AC_PTR UBIN BYTE UNAL,
     1163       19    1         2 SC_PTR UBIN BYTE UNAL,
     1164       20    1         2 O_PTR UBIN UNAL,
     1165       21    1         2 KEY_LOC CHAR(1) UNAL;
     1166       22    1   DCL 1 REC2 CALIGNED,
     1167       23    1         2 N_PTR UBIN UNAL,
     1168       24    1         2 P_PTR UBIN UNAL,
     1169       25    1         2 MEMBER_DBK UBIN UNAL,
     1170       26    1         2 RC_PTR UBIN BYTE UNAL,
     1171       27    1         2 AC_PTR UBIN BYTE UNAL,
     1172       28    1         2 SC_PTR UBIN BYTE UNAL,
     1173       29    1         2 O_PTR UBIN UNAL,
     1174       30    1         2 KEY_LOC CHAR(1) UNAL;
     1175       31
     1176       32    1   DCL ZIU$DBPCF ENTRY; /* BMAP KEY COMPARE SUBR (ORIG FROM ZIM$DBPCF) */
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:223  
     1177       33
     1178       34    1   DCL X SBIN SYMREF ALIGNED;
     1179       35    1   DCL REC1$ PTR STATIC SYMDEF ALIGNED; /* CANT USE REC$ HERE */
     1180       36    1   DCL REC2$ PTR SYMREF ALIGNED;
     1181       37    1   DCL PRFR UBIN SYMREF ALIGNED;
     1182       38    1   DCL PRFR2 UBIN SYMREF ALIGNED;
     1183       39    1   DCL RC SBIN STATIC ALIGNED; /* DONT TOUCH RC_PTR HERE */
     1184       40    1   DCL SC SBIN STATIC ALIGNED;
     1185       41
     1186       42        %INCLUDE ZI_DBU_XREF;
     1187      209         %PA_XREF_TBLS;
     1188      275        %INCLUDE ZI$DIR;
     1189      432         %DIR;
     1190      576        %INCLUDE ZI_PRSE_SUBS;
     1191      732
     1192      733    1       IF REC1.O_PTR < REC2.O_PTR THEN

    733  1 000002   000002 470400 0                  LDP0    @REC2
         1 000003   000000 100500                    MLR     fill='000'O
         1 000004   000003 600004                    ADSC9   3,,PR0                   cn=3,n=4
         1 000005   000010 000004 0                  ADSC9   SC+2                     cn=0,n=4
         1 000006   000001 471400 0                  LDP1    @REC1
         1 000007   000000 100500                    MLR     fill='000'O
         1 000010   100003 600004                    ADSC9   3,,PR1                   cn=3,n=4
         1 000011   000011 000004 0                  ADSC9   SC+3                     cn=0,n=4
         1 000012   000011 236000 0                  LDQ     SC+3
         1 000013   000010 116000 0                  CMPQ    SC+2
         1 000014   000021 603000 1                  TRC     s:736

     1193      734    1           RESULT = 1;

    734  1 000015   000001 235007                    LDA     1,DL
         1 000016   000003 473400 0                  LDP3    @RESULT
         1 000017   300000 755100                    STA     0,,PR3
         1 000020   000220 710000 1                  TRA     s:783

     1194      735    1       ELSE
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:224  
     1195      736    1           IF REC1.O_PTR > REC2.O_PTR THEN

    736  1 000021   000000 100500                    MLR     fill='000'O
         1 000022   100003 600004                    ADSC9   3,,PR1                   cn=3,n=4
         1 000023   000010 000004 0                  ADSC9   SC+2                     cn=0,n=4
         1 000024   000000 100500                    MLR     fill='000'O
         1 000025   000003 600004                    ADSC9   3,,PR0                   cn=3,n=4
         1 000026   000011 000004 0                  ADSC9   SC+3                     cn=0,n=4
         1 000027   000011 236000 0                  LDQ     SC+3
         1 000030   000010 116000 0                  CMPQ    SC+2
         1 000031   000036 603000 1                  TRC     s:740

     1196      737    1               RESULT = 2;

    737  1 000032   000002 235007                    LDA     2,DL
         1 000033   000003 473400 0                  LDP3    @RESULT
         1 000034   300000 755100                    STA     0,,PR3
         1 000035   000220 710000 1                  TRA     s:783

     1197      738    1           ELSE
     1198      739    2           DO; /* OWNER DBK ARE EQUAL, NEXT COMPARE SC */

     1199      740    2               RC = REC1.RC_PTR;

    740  1 000036   000000 101500                    MRL     fill='000'O
         1 000037   100003 000001                    ADSC9   3,,PR1                   cn=0,n=1
         1 000040   000005 000004 0                  ADSC9   RC                       cn=0,n=4

     1200      741    2               SC = REC1.SC_PTR;

    741  1 000041   000000 101500                    MRL     fill='000'O
         1 000042   100003 400001                    ADSC9   3,,PR1                   cn=2,n=1
         1 000043   000006 000004 0                  ADSC9   SC                       cn=0,n=4

     1201      742    2               IF SC < REC2.SC_PTR THEN

    742  1 000044   000000 101500                    MRL     fill='000'O
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:225  
         1 000045   000003 400001                    ADSC9   3,,PR0                   cn=2,n=1
         1 000046   000010 000004 0                  ADSC9   SC+2                     cn=0,n=4
         1 000047   000010 236000 0                  LDQ     SC+2
         1 000050   000006 116000 0                  CMPQ    SC
         1 000051   000056 604400 1                  TMOZ    s:745

     1202      743    2                   RESULT = 1;

    743  1 000052   000001 235007                    LDA     1,DL
         1 000053   000003 473400 0                  LDP3    @RESULT
         1 000054   300000 755100                    STA     0,,PR3
         1 000055   000220 710000 1                  TRA     s:783

     1203      744    2               ELSE
     1204      745    2                   IF SC > REC2.SC_PTR THEN

    745  1 000056   000000 101500                    MRL     fill='000'O
         1 000057   000003 400001                    ADSC9   3,,PR0                   cn=2,n=1
         1 000060   000010 000004 0                  ADSC9   SC+2                     cn=0,n=4
         1 000061   000010 236000 0                  LDQ     SC+2
         1 000062   000006 116000 0                  CMPQ    SC
         1 000063   000070 605000 1                  TPL     s:751

     1205      746    2                       RESULT = 2;

    746  1 000064   000002 235007                    LDA     2,DL
         1 000065   000003 473400 0                  LDP3    @RESULT
         1 000066   300000 755100                    STA     0,,PR3
         1 000067   000220 710000 1                  TRA     s:783

     1206      747    2                   ELSE
     1207      748    3                   DO; /* O_PTR AND SC ALL EQUAL, COMPARE SORT_KEYS */

     1208      749         /* BUT IF WE ARE SORTING A SET WITH SORT BY DEFINED KEYS
     1209      750            WITHIN RECORDS THEN WE SHOULD COMPARE RC FIRST */
     1210      751    3                       IF SC_TBL.SETYPE(SC)=2 AND RC~=REC2.RC_PTR THEN

PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:226  
    751  1 000070   000006 236000 0                  LDQ     SC
         1 000071   000405 402007                    MPY     261,DL
         1 000072   000000 116003                    CMPQ    0,DU
         1 000073   000075 605000 1                  TPL     s:751+5
         1 000074   000044 036003                    ADLQ    36,DU
         1 000075   003000 061406                    CSR     bolr='003'O
         1 000076   000004 000002 xsym               BDSC    SC_TBL+4,Q               by=0,bit=0,n=2
         1 000077   000010 000044 0                  BDSC    SC+2                     by=0,bit=0,n=36
         1 000100   000010 236000 0                  LDQ     SC+2
         1 000101   000002 116007                    CMPQ    2,DL
         1 000102   000130 601000 1                  TNZ     s:759
         1 000103   000000 101500                    MRL     fill='000'O
         1 000104   000003 000001                    ADSC9   3,,PR0                   cn=0,n=1
         1 000105   000011 000004 0                  ADSC9   SC+3                     cn=0,n=4
         1 000106   000011 236000 0                  LDQ     SC+3
         1 000107   000005 116000 0                  CMPQ    RC
         1 000110   000130 600000 1                  TZE     s:759

     1211      752    4                       DO;

     1212      753    4                           IF RC < REC2.RC_PTR THEN

    753  1 000111   000000 101500                    MRL     fill='000'O
         1 000112   000003 000001                    ADSC9   3,,PR0                   cn=0,n=1
         1 000113   000010 000004 0                  ADSC9   SC+2                     cn=0,n=4
         1 000114   000010 236000 0                  LDQ     SC+2
         1 000115   000005 116000 0                  CMPQ    RC
         1 000116   000123 604400 1                  TMOZ    s:756

     1213      754    4                               RESULT = 1;

    754  1 000117   000001 235007                    LDA     1,DL
         1 000120   000003 473400 0                  LDP3    @RESULT
         1 000121   300000 755100                    STA     0,,PR3
         1 000122   000126 710000 1                  TRA     s:757

     1214      755    4                           ELSE
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:227  
     1215      756    4                               RESULT = 2;

    756  1 000123   000002 235007                    LDA     2,DL
         1 000124   000003 473400 0                  LDP3    @RESULT
         1 000125   300000 755100                    STA     0,,PR3

     1216      757    4                           RETURN;

    757  1 000126   000000 221200 0                  LDX1  ! 0
         1 000127   000001 702211                    TSX2  ! 1,X1

     1217      758    4                           END;
     1218      759    3                       REC1$=ADDR(REC1.KEY_LOC);

    759  1 000130   000001 236000 0                  LDQ     @REC1
         1 000131   000000 036000 2                  ADLQ    0
         1 000132   000004 756000 0                  STQ     REC1$

     1219      760    3                       REC2$=ADDR(REC2.KEY_LOC);

    760  1 000133   000002 236000 0                  LDQ     @REC2
         1 000134   000000 036000 2                  ADLQ    0
         1 000135   000000 756000 xsym               STQ     REC2$

     1220      761    3                       PRFR=0;

    761  1 000136   000000 450000 xsym               STZ     PRFR

     1221      762    3                       X=RC_TBL.NO_OF_KEYS(RC);

    762  1 000137   000005 236000 0                  LDQ     RC
         1 000140   000003 402007                    MPY     3,DL
         1 000141   000002 236006 xsym               LDQ     RC_TBL+2,QL
         1 000142   000012 772000                    QRL     10
         1 000143   000077 376007                    ANQ     63,DL
         1 000144   000000 756000 xsym               STQ     X

PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:228  
     1222      763    3                       IF ZI$DIR.CODE=#RESORT THEN

    763  1 000145   000125 236000 xsym               LDQ     ZI$DIR+85
         1 000146   000001 376000 2                  ANQ     1
         1 000147   000002 116000 2                  CMPQ    2
         1 000150   000160 601000 1                  TNZ     s:766

     1223      764    3                           KEY_PTR=RC_TBL.KEY_PTR(RC)+1; /* 1ST KEY */

    764  1 000151   000005 236000 0                  LDQ     RC
         1 000152   000003 402007                    MPY     3,DL
         1 000153   000002 236006 xsym               LDQ     RC_TBL+2,QL
         1 000154   001777 376007                    ANQ     1023,DL
         1 000155   000001 036007                    ADLQ    1,DL
         1 000156   000000 756000 xsym               STQ     KEY_PTR
         1 000157   000170 710000 1                  TRA     s:768

     1224      765    3                       ELSE
     1225      766    3                           KEY_PTR=SC_TBL.KEY_PTR(SC); /* 1ST KEY FOR PA SETS */

    766  1 000160   000006 236000 0                  LDQ     SC
         1 000161   000405 402007                    MPY     261,DL
         1 000162   000000 116003                    CMPQ    0,DU
         1 000163   000165 605000 1                  TPL     s:766+5
         1 000164   000044 036003                    ADLQ    36,DU
         1 000165   003000 061406                    CSR     bolr='003'O
         1 000166   000006 050022 xsym               BDSC    SC_TBL+6,Q               by=0,bit=5,n=18
         1 000167   000000 000044 xsym               BDSC    KEY_PTR                  by=0,bit=0,n=36

     1226      767         /* DO UNTIL A NON-EQUAL KEY FOUND */
     1227      768    4                       DO WHILE(X>0 AND PRFR=0);

    768  1 000170   000211 710000 1                  TRA     s:776

     1228      769    4                           PRFR=KEY_TBL.EIS(KEY_PTR);

    769  1 000171   000000 720000 xsym               LXL0    KEY_PTR
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:229  
         1 000172   000000 235010 xsym               LDA     KEY_TBL,X0
         1 000173   000000 755000 xsym               STA     PRFR

     1229      770    4                           CALL ZIU$DBPCF;

    770  1 000174   000003 631400 2                  EPPR1   3
         1 000175   000000 701000 xent               TSX1    ZIU$DBPCF
         1 000176   000000 011000                    NOP     0

     1230      771    4                           X=X-1;

    771  1 000177   000001 336007                    LCQ     1,DL
         1 000200   000000 056000 xsym               ASQ     X

     1231      772    4                           IF ZI$DIR.CODE=#RESORT THEN /* NON PA SET */

    772  1 000201   000125 236000 xsym               LDQ     ZI$DIR+85
         1 000202   000001 376000 2                  ANQ     1
         1 000203   000002 116000 2                  CMPQ    2
         1 000204   000210 601000 1                  TNZ     s:775

     1232      773    4                               KEY_PTR = KEY_PTR + 2;

    773  1 000205   000002 236007                    LDQ     2,DL
         1 000206   000000 056000 xsym               ASQ     KEY_PTR
         1 000207   000211 710000 1                  TRA     s:776

     1233      774    4                           ELSE
     1234      775    4                               KEY_PTR = KEY_PTR + 1;

    775  1 000210   000000 054000 xsym               AOS     KEY_PTR

     1235      776    4                           END;

    776  1 000211   000000 235000 xsym               LDA     X
         1 000212   000215 604400 1                  TMOZ    s:780
         1 000213   000000 236000 xsym               LDQ     PRFR
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:230  
         1 000214   000171 600000 1                  TZE     s:769

     1236      777        /*
     1237      778              ZIU$DBPCF RETURNS  COMPARING RESULT IN PRFR
     1238      779        */
     1239      780    3                       RESULT = PRFR;

    780  1 000215   000000 236000 xsym               LDQ     PRFR
         1 000216   000003 470400 0                  LDP0    @RESULT
         1 000217   000000 756100                    STQ     0,,PR0

     1240      781    3                       END;

     1241      782    2               END;

     1242      783    1   END ZIU$PA_CMPKEY;

    783  1 000220   000000 221200 0                  LDX1  ! 0
         1 000221   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   2     000   000004 600000   000007 600000   000005 200000   000000 000000    ................
     1243      784        %EOD;

PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:231  
--  Include file information  --

   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIU$PA_CMPKEY.

   Procedure ZIU$PA_CMPKEY requires 146 words for executable code.
   Procedure ZIU$PA_CMPKEY is declared NOAUTO and requires 10 words of local(STATIC) storage.
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:232  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:233  
          MINI XREF LISTING

KEY_PTR
       248**DCL       764<<ASSIGN    766<<ASSIGN    769>>ASSIGN    773<<ASSIGN    773>>ASSIGN    775<<ASSIGN
       775>>ASSIGN
KEY_TBL.EIS
       250**DCL       251--REDEF     769>>ASSIGN
PRFR
        37**DCL       761<<ASSIGN    768>>DOWHILE   769<<ASSIGN    780>>ASSIGN
RC
        39**DCL       740<<ASSIGN    751>>IF        753>>IF        762>>ASSIGN    764>>ASSIGN
RC_TBL.KEY_PTR
       246**DCL       764>>ASSIGN
RC_TBL.NO_OF_KEYS
       245**DCL       762>>ASSIGN
RC_TBL.NXPNT_EIS
       233**DCL       234--REDEF
REC1
        13**DCL        10--PROC
REC1.KEY_LOC
        21**DCL       759--ASSIGN
REC1.O_PTR
        20**DCL       733>>IF        736>>IF
REC1.RC_PTR
        17**DCL       740>>ASSIGN
REC1.SC_PTR
        19**DCL       741>>ASSIGN
REC1$
        35**DCL       759<<ASSIGN
REC2
        22**DCL        10--PROC
REC2.KEY_LOC
        30**DCL       760--ASSIGN
REC2.O_PTR
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:234  
        29**DCL       733>>IF        736>>IF
REC2.RC_PTR
        26**DCL       751>>IF        753>>IF
REC2.SC_PTR
        28**DCL       742>>IF        745>>IF
REC2$
        36**DCL       760<<ASSIGN
RESULT
        12**DCL        10--PROC      734<<ASSIGN    737<<ASSIGN    743<<ASSIGN    746<<ASSIGN    754<<ASSIGN
       756<<ASSIGN    780<<ASSIGN
SC
        40**DCL       741<<ASSIGN    742>>IF        745>>IF        751>>IF        766>>ASSIGN
SC_TBL.KEY_PTR
       227**DCL       228--REDEF     766>>ASSIGN
SC_TBL.SETYPE
       217**DCL       751>>IF
X
        34**DCL       762<<ASSIGN    768>>DOWHILE   771<<ASSIGN    771>>ASSIGN
ZI$DIR.ALTKEY
       504**DCL       505--REDEF     506--REDEF
ZI$DIR.AREAFID
       470**DCL       471--REDEF
ZI$DIR.CODE
       486**DCL       763>>IF        772>>IF
ZI$DIR.DATE
       509**DCL       513--REDEF
ZI$DIR.DEST_SEED
       465**DCL       466--REDEF     467--REDEF
ZI$DIR.ENCP_SEED
       462**DCL       463--REDEF     464--REDEF
ZI$DIR.REPRT_ZERO
       496**DCL       497--REDEF
ZI$DIR.SCHFID
       468**DCL       469--REDEF
ZI$DIR.TIME
       514**DCL       519--REDEF
PL6.E3A0      #003=ZIU$PA_CMPKEY File=ZIU$COMPACT.:ZIC0TSI                       FRI 09/05/97 13:10 Page:235  
ZIU$DBPCF
        32**DCL-ENT   770--CALL

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:236  
     1244        1        /*T***********************************************************/
     1245        2        /*T*                                                         */
     1246        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1247        4        /*T*                                                         */
     1248        5        /*T***********************************************************/
     1249        6
     1250        7        /*
     1251        8              RECURSIVE SUBR  STORE_A_ENTRY - STORE A ENTRY IN THE
     1252        9                        PA_REC IN CURRENT OF LEVEL WITH KEY PASSED
     1253       10              SC_PTR -  POINTS TO THE PA SET IN SC_TBL
     1254       11        */
     1255       12        STORE_AN_ENTRY: PROC(PA_KEY) ALTRET; /* ALTRET ON WRIT TEMP IO ERR */
     1256       13
     1257       14    1   DCL ERROR_MSG ENTRY(4);
     1258       15    1   DCL BIN_CHAR ENTRY(2);
     1259       16    1   DCL FIND_DIRECT ENTRY(2);
     1260       17    1   DCL CREATE_PAREC ENTRY;
     1261       18    1   DCL PUSH_PAENTRY ENTRY(1);
     1262       19
     1263       20    1   DCL ERASE_PAREC ENTRY;
     1264       21    1   DCL PA_KEY CHAR(KEY_LEN) CALIGNED;
     1265       22    1   DCL LEVEL# SBIN SYMREF ALIGNED;
     1266       23    1   DCL CURR_OWNER UBIN SYMREF ALIGNED;
     1267       24    1   DCL REC_CNT SBIN SYMREF ALIGNED;
     1268       25    1   DCL 1 KEY SYMREF ALIGNED,
     1269       26    1         2 * UBIN BYTE UNAL,
     1270       27    1         2 TXT UBIN WORD UNAL,
     1271       28    1         2 RC_PTR UBIN BYTE UNAL;
     1272       29    1   DCL COMMAND_TEXT CHAR(9) SYMREF ALIGNED;
     1273       30    1   DCL BUF_PTR SBIN SYMREF ALIGNED;
     1274       31    1   DCL ENTRY_LEN UBIN SYMREF ALIGNED; /* ENTRY_LEN=2+KEY_LEN+PTR_LEN */
     1275       32    1   DCL NO_OF_LEVELS UBIN SYMREF ALIGNED;
     1276       33    1   DCL POOL_MAX SBIN WORD SYMREF ALIGNED;
     1277       34    1   DCL SWAP_PTR SBIN WORD SYMREF ALIGNED;
     1278       35    1   DCL 1 POOL(0:95) SYMREF ALIGNED,
     1279       36    1         2 MUST_WRITE BIT(1) UNAL,
     1280       37    1         2 LOCKS UBIN(9) UNAL,
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:237  
     1281       38    1         2 PAGE# UBIN(26) UNAL;
     1282       39    1   DCL 1 STK(0:1) SYMREF ALIGNED,
     1283       40    1         2 NEXT SBIN ALIGNED,
     1284       41    1         2 PRIOR SBIN ALIGNED,
     1285       42    1         2 CURR SBIN ALIGNED,
     1286       43    1         2 RC_PTR UBIN BYTE UNAL,
     1287       44    1         2 AC_PTR UBIN BYTE UNAL;
     1288       45    1   DCL 1 CURR_LEVEL(0:31) SYMREF ALIGNED,
     1289       46    1         2 DBK UBIN WORD ALIGNED,
     1290       47    1         2 FIRST_PA UBIN ALIGNED,
     1291       48    1         2 ENT_NO UBIN HALF UNAL,
     1292       49    1         2 DUPIND BIT(1) UNAL,
     1293       50    1         2 BUF_PTR UBIN(8) UNAL,
     1294       51    1         2 * UBIN(9) UNAL,
     1295       52    1         2 REC$ PTR ALIGNED;
     1296       53    1   DCL BREAK_CLEANUP BIT(72) SYMREF ALIGNED;
     1297       54    1   DCL Y SBIN STATIC ALIGNED;
     1298       55    1   DCL CHAR_V CHAR(Y) BASED CALIGNED;
     1299       56    1   DCL Z SBIN STATIC ALIGNED;
     1300       57    1   DCL NEW_HIGHEST UBIN STATIC ALIGNED;
     1301       58    1   DCL X SBIN STATIC ALIGNED; /* MUST BE LOCAL,DONT INCLUDE ZI_GLOBAL */
     1302       59    1   DCL BREAK_FLAG SBIN SYMREF ALIGNED;
     1303       60    1   DCL POINTER SBIN STATIC ALIGNED;
     1304       61    1   DCL REC2$ PTR SYMREF ALIGNED;
     1305       62    1   DCL REC$ PTR SYMREF ALIGNED;
     1306       63    1   DCL PTR_V CHAR(PTR_LEN) BASED(REC2$) CALIGNED;
     1307       64    1   DCL KEY_V CHAR(KEY_LEN) BASED(REC2$) CALIGNED;
     1308       65    1   DCL 1 DUMMY_V BASED(REC2$) CALIGNED,
     1309       66    1         2 * CHAR(KEY_LEN) CALIGNED;
     1310       67        /*
     1311       68              LOCAL AUTO VARIABLES
     1312       69        */
     1313       70    1   DCL LOC_PTR UBIN AUTO ALIGNED;
     1314       71    1   DCL GLO_PTR UBIN AUTO ALIGNED;
     1315       72    1   DCL RC_TYPE UBIN AUTO ALIGNED;
     1316       73        %EJECT;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:238  
     1317       74
     1318       75        %EQU LOCK_BUF = 2;
     1319       76        %EQU MUST_WRITE = 1;
     1320       77        %EQU DONT_LOCK = 0;
     1321       78        %EQU DONT_ERROR = -1;
     1322       79        %INCLUDE CP_6;
     1323      160         %FPT_WRITE(FPTN=WRITE_TEMP,STCLASS=SYMREF);
     1324      191        %INCLUDE ZI_DBU_XREF;
     1325      358         %PA_XREF_TBLS;
     1326      424        %INCLUDE ZI_GLOBAL_DBUTIL;
     1327      602         %PAREC(STCLASS=SYMREF); /* DONT INVOKE MISC_DCLS */
     1328      629        %INCLUDE ZI_PRSE_SUBS;
     1329      785        %INCLUDE ZI_ERRORS_SUBS;
     1330     1305        %INCLUDE CP_6_SUBS;
     1331     1845        %EJECT;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:239  
     1332     1846    1       IF BREAK_FLAG > 0 THEN /* IF BREAK HIT,WILL BE PICKEDUP HERE */
     1333     1847    1           UNWIND TO BREAK_CLEANUP;
     1334     1848
     1335     1849    1       IF LEVEL# = 0 THEN /* NEED TO CREATE HIGHEST LEVEL OF PA */
     1336     1850    2       DO;
     1337     1851    2           NO_OF_LEVELS = NO_OF_LEVELS + 1; /* INCREMENT TOTAL # LEVELS */
     1338     1852    2           IF NO_OF_LEVELS>32 THEN /* OVER 32 LEVELS ????,GOTO BE WRONG? */
     1339     1853    3           DO;
     1340     1854    3               CALL BIN_CHAR(2,CURR_OWNER);
     1341     1855    3               CALL ERROR_MSG(DBU#PALEV33,SC_TBL.NAME(SC_PTR),COMMAND_TEXT);
     1342     1856    3               UNWIND TO BREAK_CLEANUP;
     1343     1857         /*E* ERROR: ZIU-DBU#PALEV33-C
     1344     1858                    MESSAGE: Error: For an unknown reason, we are having more
     1345     1859                                    than 32 levels of PA, while set name is "%U1" and
     1346     1860                                    owner DBK# is %U3. %U2 cannot handle that many. */
     1347     1861    3               END;
     1348     1862    3           DO LEVEL#=NO_OF_LEVELS DOWNTO 1; /* MOVE EVERY LEVEL DOWN */
     1349     1863    3               CURR_LEVEL(LEVEL#)=CURR_LEVEL(LEVEL#-1);
     1350     1864    3               END;
     1351     1865
     1352     1866    2           CALL CREATE_PAREC; /* CREATE HIGHEST PA_REC */
     1353     1867
     1354     1868    2           PA_REC.FIRST_IN_LEVEL = '1'B; /* SETUP PA BITS */
     1355     1869    2           CURR_LEVEL.ENT_NO(0)=0; /* SETUP CONTROL VARIABLE */
     1356     1870    2           CURR_LEVEL.DUPIND(0)='0'B;
     1357     1871    2           CURR_LEVEL.FIRST_PA(0)=CURR_LEVEL.DBK(0);
     1358     1872    2           POINTER=CURR_OWNER; /* LINK NEXT,PRIOR,OWNER TO CURR OWNER */
     1359     1873    2           REC2$=PINCRC(REC$,8);
     1360     1874    2           CALL STORE_PTR;
     1361     1875    2           POINTER=CURR_OWNER;
     1362     1876    2           REC2$=PINCRC(REC2$,PTR_LEN);
     1363     1877    2           CALL STORE_PTR;
     1364     1878    2           REC2$=PINCRC(REC2$,PTR_LEN);
     1365     1879    2           POINTER=CURR_OWNER;
     1366     1880    2           CALL STORE_PTR;
     1367     1881    2           IF STK.CURR(1)=CURR_OWNER THEN /* INSERT DUMMY */
     1368     1882    2               STK.NEXT(1)=CURR_LEVEL.DBK(0); /* FAKE POINTER */
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:240  
     1369     1883    2           END;
     1370     1884    1       ELSE
     1371     1885    1           LEVEL# = LEVEL# - 1;
     1372     1886
     1373     1887    1       REC$ = CURR_LEVEL.REC$(LEVEL#); /* GET CURR PA IN LEVEL */
     1374     1888    1       IF LEVEL#=NO_OF_LEVELS THEN /* WE ARE IN LOWEST LEVEL OF PA */
     1375     1889    2       DO;
     1376     1890    2           RC_TYPE = RC_TBL.TYPE(STK.RC_PTR(1)); /* GET TYPE OF CURR MEMBER */
     1377     1891    2           GLO_PTR = STK.CURR(1); /* AND ITS DBK */
     1378     1892    2           END;
     1379     1893    1       ELSE
     1380     1894    2       DO; /* WE ARE STOREING AN ENTRY TO A PA_REC */
     1381     1895    2           RC_TYPE = SC_TBL.PA_TYPE(SC_PTR);
     1382     1896    2           GLO_PTR = CURR_LEVEL.DBK(LEVEL#+1); /* GET PA IN LOWER LEVEL */
     1383     1897    2           END;
     1384     1898    1       LOC_PTR = GLO_PTR - BASE_DBK; /* IF SC GLOBAL THEN BASE_DBK=0 */
     1385     1899    1       IF CURR_LEVEL.ENT_NO(LEVEL#)=0 THEN /* NO ENTRY STORED YET */
     1386     1900    2       DO;
     1387     1901    2   STORE_FIRST_ENTRY: /* ENTRY IS 1ST ONE TO BE STORED IN PA */
     1388     1902    2           IF CURR_LEVEL.DUPIND(LEVEL#) THEN
     1389     1903    2               PA_REC.LOWEST_KEY='1'B; /* LOWEST KEY REPEATED IN PRIOR */
     1390     1904    2           ELSE
     1391     1905    2               PA_REC.LOWEST_KEY='0'B;
     1392     1906    2           PA_REC.HIGHEST_KEY='0'B; /* INIT HIGHEST REPEAT BIT */
     1393     1907    2           PA_REC.ENTRIES=1;
     1394     1908    2           PA_REC.LAST_IN_LEVEL='0'B; /* SET TO 1 BY PA_CLEANUP */
     1395     1909    2           CURR_LEVEL.DUPIND(LEVEL#)='0'B; /* RESET INDICATOR */
     1396     1910    2           CURR_LEVEL.ENT_NO(LEVEL#)=2*4+3*PTR_LEN;
     1397     1911    2           PA_REC.AVAIL=PA_REC.SIZE-CURR_LEVEL.ENT_NO(LEVEL#)-ENTRY_LEN;
     1398     1912    2           ENTRY$=PINCRC(REC$,CURR_LEVEL.ENT_NO(LEVEL#)); /* TO PA_ENTRY */
     1399     1913    2           PA_ENTRY.C=0;
     1400     1914    2           PA_ENTRY.TYPE = RC_TYPE;
     1401     1915    2           PA_ENTRY.PTRS=PINCRC(ADDR(LOC_PTR),4-PTR_LEN)->PTR_V;
     1402     1916    2           REC2$=PINCRC(ENTRY$,2+PTR_LEN); /* POINT TO KEY_LOC */
     1403     1917    2           IF ADDR(PA_KEY)=ADDR(NIL) THEN /* DUMMY KEY */
     1404     1918    2               DUMMY_V = '0'B; /* USE BINARY 0 FOR KEY IN ENTRY */
     1405     1919    2           ELSE
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:241  
     1406     1920    2               KEY_V = PA_KEY; /* USE KEY THAT IS PASSED */
     1407     1921    2           END;
     1408     1922        %EJECT;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:242  
     1409     1923    1       ELSE
     1410     1924    2       DO; /* CURR_PA IS NOT EMPTY, SO CHK IF FULL FIRST */
     1411     1925    2           ENTRY$=PINCRC(REC$,CURR_LEVEL.ENT_NO(LEVEL#));
     1412     1926    2           REC2$=PINCRC(ENTRY$,2+PTR_LEN); /* POINT THE LAST KEY IN REC */
     1413     1927    2           IF PA_KEY=KEY_V THEN /* DUPLICATE KEYS */
     1414     1928    3           DO;
     1415     1929    3               IF PA_ENTRY.C=1 THEN /* PA_GROUP ALREADY EXISTS */
     1416     1930    3                   X=PTR_LEN+2; /* NEED 2 BYTES FOR TYPE AND PLUS PTR_LEN */
     1417     1931    3               ELSE
     1418     1932    3                   X=2*PTR_LEN+4+2; /* 2 PTRS+ 2 TYPES + 2 BYTES FOR COUNT */
     1419     1933    3               END;
     1420     1934    2           ELSE
     1421     1935    2               X=ENTRY_LEN; /* REGULAR ENTRY SIZE IS NEEDED */
     1422     1936
     1423     1937    2           IF PA_REC.AVAIL-X<SC_TBL.FULL_PERCENT(SC_PTR) THEN /* NO SPACE */
     1424     1938    3           DO;
     1425     1939    3               IF PA_KEY=KEY_V THEN /* DUP KEY OCCUR */
     1426     1940    4               DO;
     1427     1941    4                   CURR_LEVEL.DUPIND(LEVEL#)='1'B; /* SET INDICATOR */
     1428     1942    4                   PA_REC.HIGHEST_KEY='1'B; /* SET HIGHEST KEY REPEATED BIT */
     1429     1943    4                   END;
     1430     1944    3               REC2$=PINCRC(REC$,10+4*PTR_LEN); /* 1ST KEY IN LOWER LEVEL */
     1431     1945
     1432     1946    3               CALL STORE_AN_ENTRY(KEY_V) ALTRET(ALT_WRIT_TEMP);
     1433     1947         /* IN HIGHER LEVEL PA */
     1434     1948
     1435     1949    3               REC2$=PINCRC(REC$,8); /* POINT TO NEXT PTR LOC */
     1436     1950    3               CALL LOAD_PTR; /* LOAD NEXT PTR OF PA */
     1437     1951    3               IF POINTER~=CURR_LEVEL.FIRST_PA(LEVEL#) AND
     1438     1952    3                  POINTER~=CURR_OWNER THEN /* NEXT PA EXIST */
     1439     1953    4               DO;
     1440     1954    4                   BUF_PTR=CURR_LEVEL.BUF_PTR(LEVEL#); /* GET BUFF ADDR */
     1441     1955    4                   POOL.LOCKS(BUF_PTR)=POOL.LOCKS(BUF_PTR)-1; /* UNLOCK IT */
     1442     1956    4                   CALL FIND_DIRECT(POINTER,%LOCK_BUF);
     1443     1957    4                   CURR_LEVEL.DBK(LEVEL#)=POINTER; /* NEW CURR_OF_LEVEL */
     1444     1958    4                   CURR_LEVEL.REC$(LEVEL#)=REC$;
     1445     1959    4                   IF LEVEL# = NO_OF_LEVELS THEN /* LOWEST LEVEL */
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:243  
     1446     1960    4                       CALL PUSH_PAENTRY(POINTER); /* BET YOU DIR=COMPACT */
     1447     1961    4                   END;
     1448     1962    3               ELSE /* RUNNING OUT OF INDEX BLOCK, SO MAKE ONE */
     1449     1963    4               DO; /* AND LINK INTO CURR OF LEVEL */
     1450     1964    4                   IF LEVEL# = NO_OF_LEVELS THEN /* LOWEST LEVEL */
     1451     1965    4                       FIRST_TIME_CALLED=1; /* ONLY USED BY COMPACT FOR E-O-S */
     1452     1966    4                   X=CURR_LEVEL.DBK(LEVEL#); /* SAVE CURR (BECOME PRIOR) */
     1453     1967    4                   Y=CURR_LEVEL.BUF_PTR(LEVEL#); /* AND ITS BUF PTR */
     1454     1968
     1455     1969    4                   CALL CREATE_PAREC; /* CREATE A NEW ONE AND BECOME CURR */
     1456     1970
     1457     1971    4                   POOL.LOCKS(Y)=POOL.LOCKS(Y)-1; /* UNLOCK PRIOR */
     1458     1972    4                   POINTER=CURR_LEVEL.DBK(LEVEL#); /* LINK LAST PA TO NEW PA */
     1459     1973         /* REC2$ POINTS TO THE NEXT PTR LOC IN PRIOR REC */
     1460     1974    4                   CALL STORE_PTR; /* STORE NEW NEXT PTR */
     1461     1975         /* LET NEXT OF NEW PA BE OWNER, SO WE KNOW END OF SET
     1462     1976            AND WHEN WE DOING A PA_CLEANUP, WE KNOW THE PRIOR PTR
     1463     1977            OF THE FIRST PA IN LEVEL SHOULD BE UPDATED TOO */
     1464     1978    4                   POINTER = CURR_OWNER;
     1465     1979    4                   REC2$=PINCRC(REC$,8); /* LINK NEXT OF NEW PA TO OWNER */
     1466     1980    4                   CALL STORE_PTR;
     1467     1981    4                   POINTER=X; /* LINK PRIOR TO THE SAVED CURR */
     1468     1982    4                   REC2$=PINCRC(REC2$,PTR_LEN);
     1469     1983    4                   CALL STORE_PTR;
     1470     1984         /* DONT WORRY OWNER PTR , WILL BE CHECKED LATER */
     1471     1985    4                   END;
     1472     1986    3               GOTO STORE_FIRST_ENTRY;
     1473     1987    3               END;
     1474     1988
     1475     1989    2           PA_REC.AVAIL=PA_REC.AVAIL-X; /* UPDATE SPACE AVAIL */
     1476     1990    2           IF PA_KEY~=KEY_V THEN /* STORE A UNIQUE ENTRY */
     1477     1991    3           DO;
     1478     1992    3               CURR_LEVEL.ENT_NO(LEVEL#)=CURR_LEVEL.ENT_NO(LEVEL#)+X;
     1479     1993    3               ENTRY$=PINCRC(REC$,CURR_LEVEL.ENT_NO(LEVEL#));
     1480     1994    3               PA_REC.ENTRIES=PA_REC.ENTRIES+1;
     1481     1995    3               PA_ENTRY.C=0;
     1482     1996    3               PA_ENTRY.TYPE = RC_TYPE;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:244  
     1483     1997    3               PA_ENTRY.PTRS=PINCRC(ADDR(LOC_PTR),4-PTR_LEN)->PTR_V;
     1484     1998    3               REC2$=PINCRC(ENTRY$,2+PTR_LEN); /* POINT TO KEY IN ENTRY */
     1485     1999    3               KEY_V=PA_KEY;
     1486     2000    3               END;
     1487     2001    2           ELSE
     1488     2002    2               IF PA_ENTRY.C=0 THEN /* DUP KEY BUT PA_GROUP NOT PRESENT */
     1489     2003    3               DO;
     1490     2004    3                   X=CURR_LEVEL.ENT_NO(LEVEL#)+ENTRY_LEN+PA_REC.AVAIL;
     1491     2005    3                   GROUP$=PINCRC(REC$,X);
     1492     2006    3                   PA_GROUP.NO_GROUPS=2;
     1493     2007    3                   PA_GROUP.TYPE=PA_ENTRY.TYPE;
     1494     2008    3                   PA_GROUP.PTRS=PA_ENTRY.PTRS; /* GET PTR FROM ENTRY */
     1495     2009    3                   PA_ENTRY.C=1; /* SET PA_GROUP PRESENT */
     1496     2010    3                   PA_ENTRY.TYPE=0;
     1497     2011    3                   PA_ENTRY.PTRS=PINCRC(ADDR(X),4-PTR_LEN)->PTR_V;
     1498     2012    3                   GROUP$=PINCRC(GROUP$,2+PTR_LEN);
     1499     2013    3                   PA_GROUP.TYPE=RC_TYPE;
     1500     2014    3                   PA_GROUP.PTRS=PINCRC(ADDR(LOC_PTR),4-PTR_LEN)->PTR_V;
     1501     2015    3                   END;
     1502     2016    2               ELSE
     1503     2017    3               DO; /* DUP KEY AND PA_GROUP ALREADY THERE */
     1504     2018    3                   X=0;
     1505     2019    3                   PINCRC(ADDR(X),4-PTR_LEN)->PTR_V=PA_ENTRY.PTRS;
     1506     2020    3                   GROUP$=PINCRC(REC$,X); /* POINT TO OLD PA_GROUP */
     1507     2021    3                   X=X-2-PTR_LEN; /* NEW OFFSET FOR PA_GROUP */
     1508     2022    3                   PA_ENTRY.PTRS=PINCRC(ADDR(X),4-PTR_LEN)->PTR_V; /* UPDATE */
     1509     2023    3                   X=PA_GROUP.NO_GROUPS; /* GET OLD NUMBER OF PTRS IN GROUP */
     1510     2024    3                   Y=2+(2+PTR_LEN)*X; /* Y=THE SIZE OF OLD PTR GROUP */
     1511     2025    3                   PINCRC(GROUP$,-2-PTR_LEN)->CHAR_V = GROUP$->CHAR_V;
     1512     2026         /* SHIFT OLD PTR GROUP UP BY 2+PTR_LEN BYTES */
     1513     2027    3                   GROUP$ = PINCRC(GROUP$,-2-PTR_LEN); /* POINT TO NEW PA_GROUP */
     1514     2028    3                   PA_GROUP.NO_GROUPS = X+1; /* UPDATE NEW NUM OF PTRS */
     1515     2029    3                   GROUP$=PINCRC(GROUP$,X*(2+PTR_LEN)); /* POINT TO LAST PTR */
     1516     2030    3                   PA_GROUP.TYPE=RC_TYPE; /* STORE NEW PTR IN PTR GROUP */
     1517     2031    3                   PA_GROUP.PTRS=PINCRC(ADDR(LOC_PTR),4-PTR_LEN)->PTR_V;
     1518     2032    3                   END;
     1519     2033    2           END;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:245  
     1520     2034    1       LEVEL# = LEVEL# + 1;
     1521     2035    1       IF LEVEL#<=NO_OF_LEVELS THEN /* WE ARE IN HIGHER LEVEL */
     1522     2036    2       DO; /* RECURSIVE RETURNS, SO RESTORE REC$ */
     1523     2037    2           REC$ = CURR_LEVEL.REC$(LEVEL#);
     1524     2038    2           REC2$= PINCRC(REC$,8+2*PTR_LEN);
     1525     2039    2           CALL LOAD_PTR; /* LOAD THE OWNER PTR */
     1526     2040    2           IF POINTER~=CURR_LEVEL.DBK(LEVEL#-1) THEN
     1527     2041    3           DO; /* OWNER PTR OF THIS PA NEEDS  TO BE UPDATED */
     1528     2042    3               POINTER = CURR_LEVEL.DBK(LEVEL#-1);
     1529     2043    3               CALL STORE_PTR;
     1530     2044    3               END;
     1531     2045    2           END;
     1532     2046    1       ELSE
     1533     2047    1           IF STK.NEXT(1)~=CURR_LEVEL.DBK(LEVEL#-1) THEN
     1534     2048    2           DO; /* THE PA_OWNER PTR OF THIS PA_MEMBER NEEDS TO BE UPDATED */
     1535     2049    2               STK.NEXT(1)=CURR_LEVEL.DBK(LEVEL#-1); /* NEW PA OWNER PTR */
     1536     2050    2               KEY.TXT=STK.CURR(1);
     1537     2051    2               KEY.RC_PTR = STK.RC_PTR(1);
     1538     2052    2               CALL M$WRITE(WRITE_TEMP) ALTRET(ALT_WRIT_TEMP);
     1539     2053    2               REC_CNT = REC_CNT + 1;
     1540     2054    2               END;
     1541     2055    1       RETURN;
     1542     2056
     1543     2057        %EJECT;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:246  
     1544     2058        /*
     1545     2059              SUBR   LOAD_PTR   AND   STORE_PTR
     1546     2060                     INPUT:  POINTER - UBIN WORD CONTAINING AFTER LOAD PTR
     1547     2061                             REC2$   - PTR TO LOCATION OF PTR
     1548     2062        */
     1549     2063    1   LOAD_PTR: PROC;
     1550     2064
     1551     2065    2       POINTER=0; /* INIT BEFORE LOADING IN CASE GARBAGE */
     1552     2066    2       PINCRC(ADDR(POINTER),4-PTR_LEN)->PTR_V=PTR_V;
     1553     2067    2       IF POINTER>0 THEN /* IF =0,DONT ADJUST PTR */
     1554     2068    2           POINTER=POINTER+BASE_DBK; /* IF SC LOCAL,ADJUST DBK */
     1555     2069    2       RETURN; /* WITH PTR LOADED IN POINTER */
     1556     2070
     1557     2071    2   STORE_PTR: ENTRY;
     1558     2072
     1559     2073    2       POINTER = POINTER - BASE_DBK; /* CONV TO LOCAL IF SC IS LOCAL */
     1560     2074    2       PTR_V=PINCRC(ADDR(POINTER),4-PTR_LEN)->PTR_V;
     1561     2075
     1562     2076    2   END LOAD_PTR;
     1563     2077         %EJECT;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:247  
     1564     2078
     1565     2079    1   PA_CLEANUP: ENTRY ALTRET;
     1566     2080
     1567     2081    1       NEW_HIGHEST = 0;
     1568     2082    2       DO LEVEL#=NO_OF_LEVELS DOWNTO 1; /* NO NEED TO CHECK HIGHEST LEVEL */
     1569     2083    2           REC$ = CURR_LEVEL.REC$(LEVEL#);
     1570     2084    2           PA_REC.LAST_IN_LEVEL='1'B; /* SET LAST IN LEVEL BIT */
     1571     2085    2           REC2$=PINCRC(REC$,2*4+4*PTR_LEN+2); /* FIRST KEY IN PA */
     1572     2086
     1573     2087    2           CALL STORE_AN_ENTRY(KEY_V) ALTRET(ALT_WRIT_TEMP);
     1574     2088
     1575     2089    2           IF PA_REC.FIRST_IN_LEVEL AND NEW_HIGHEST=0 THEN
     1576     2090    2               NEW_HIGHEST = LEVEL#; /* THIS SHOULD BE THE NEW HIGHEST PA */
     1577     2091    2           REC2$=PINCRC(REC$,8); /* LOCATION OF NEXT PTR */
     1578     2092    2           CALL LOAD_PTR; /* LOAD IT */
     1579     2093    2           X = POINTER;
     1580     2094    2           IF X~= CURR_LEVEL.FIRST_PA(LEVEL#) THEN
     1581     2095    3           DO;
     1582     2096    3               POINTER = CURR_LEVEL.FIRST_PA(LEVEL#); /* NEW NEXT PTR */
     1583     2097    3               CALL STORE_PTR; /* UPDATE TO NEW PTR */
     1584     2098    3               CALL FIND_DIRECT(CURR_LEVEL.FIRST_PA(LEVEL#),%MUST_WRITE);
     1585     2099    3               REC2$=PINCRC(REC$,8+PTR_LEN); /* LOCATION OF PRIOR PTR */
     1586     2100    3               POINTER=CURR_LEVEL.DBK(LEVEL#); /* PRIOR OF FIRST PA */
     1587     2101    3               CALL STORE_PTR;
     1588     2102    3               IF X=CURR_OWNER THEN /* IT IS A NEW CREATED PA */
     1589     2103    3                   X=CURR_LEVEL.FIRST_PA(LEVEL#); /* FORCE A END OF SET */
     1590     2104    4               DO WHILE(X~=CURR_LEVEL.FIRST_PA(LEVEL#));
     1591     2105
     1592     2106         /* NOW WE WILL ERASE ALL PA FROM THEN ON */
     1593     2107    4                   CALL FIND_DIRECT(X,%MUST_WRITE);
     1594     2108    4                   REC2$ = PINCRC(REC$,8); /* GET THE NEXT PTR */
     1595     2109    4                   CALL LOAD_PTR;
     1596     2110    4                   X = POINTER; /* X=NEXT POINTER OF THIS ERASED PA */
     1597     2111    4                   CALL ERASE_PAREC; /* THEN ERASE IT */
     1598     2112         /* ONCE A RECORD IS ERASED, REC$ CAN NO LONGER TRUSTED */
     1599     2113    5                   DO Z=0 TO LEVEL#-1;
     1600     2114    5                       POINTER=CURR_LEVEL.DBK(Z); /* GET CURR IN LEVEL */
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:248  
     1601     2115    5                       CALL FIND_DIRECT(POINTER,%DONT_LOCK);
     1602     2116    5                       CURR_LEVEL.REC$(Z)=REC$; /* SETUP NEW REC$ */
     1603     2117    5                       END;
     1604     2118    4                   END;
     1605     2119    3               END;
     1606     2120    2           BUF_PTR=CURR_LEVEL.BUF_PTR(LEVEL#);
     1607     2121    2           POOL.LOCKS(BUF_PTR)=POOL.LOCKS(BUF_PTR)-1; /* UNLOCK CURR */
     1608     2122    2           END; /* CHKING EACH LEVEL,UNLOCKING, ERASING EXCESSIVE PAS */
     1609     2123    1       BUF_PTR=CURR_LEVEL.BUF_PTR(0);
     1610     2124    1       POOL.LOCKS(BUF_PTR)=POOL.LOCKS(BUF_PTR)-1; /* UNLOCK CURR OF LEVEL */
     1611     2125    1       REC$=CURR_LEVEL.REC$(0); /* GET HIGHEST LEVEL OF PA_EC */
     1612     2126    1       PA_REC.LAST_IN_LEVEL='1'B; /* SET LAST IN LEVEL BIT */
     1613     2127
     1614     2128    1       IF NEW_HIGHEST > 0 THEN /* WE CAN REDUCE NO_OF_LEVELS */
     1615     2129    2       DO;
     1616     2130    2           CALL FIND_DIRECT(CURR_LEVEL.DBK(NEW_HIGHEST),%MUST_WRITE);
     1617     2131    2           REC2$=PINCRC(REC$,8);
     1618     2132    2           POINTER=CURR_OWNER; /* NEXT PTR OF HIGHEST PA IS OWNER */
     1619     2133    2           CALL STORE_PTR;
     1620     2134    2           REC2$=PINCRC(REC2$,PTR_LEN); /* PRIOR IS ALSO OWNER */
     1621     2135    2           POINTER=CURR_OWNER;
     1622     2136    2           CALL STORE_PTR;
     1623     2137    2           REC2$=PINCRC(REC2$,PTR_LEN);
     1624     2138    2           POINTER=CURR_OWNER;
     1625     2139    2           CALL STORE_PTR;
     1626     2140    3           DO Z=0 TO NEW_HIGHEST-1; /* ERASE ALL THE HIGHER PA */
     1627     2141    3               CALL FIND_DIRECT(CURR_LEVEL.DBK(Z),%MUST_WRITE); /* GET THEM */
     1628     2142    3               CALL ERASE_PAREC; /* THEN ERASE IT */
     1629     2143    3               END;
     1630     2144    2           END; /* ALL EXCESSIVE HIGHER LEVEL PA ARE ERASED */
     1631     2145         /* NOW, CHECK IF OWNER'S PTRS NEEDED TO BE UPDATED */
     1632     2146    1       IF STK.NEXT(0)~=CURR_LEVEL.DBK(NEW_HIGHEST) THEN
     1633     2147    2       DO; /* THIS HAPPENS WHEN HIGHEST PA ERASED OR CREATED */
     1634     2148    2           STK.NEXT(1)=CURR_LEVEL.DBK(NEW_HIGHEST);
     1635     2149    2           STK.PRIOR(1)=STK.NEXT(1);
     1636     2150    2           KEY.RC_PTR=SC_TBL.RC_PTR(SC_PTR);
     1637     2151    2           KEY.TXT=CURR_OWNER;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:249  
     1638     2152    2           CALL M$WRITE(WRITE_TEMP) ALTRET(ALT_WRIT_TEMP);
     1639     2153    2           REC_CNT = REC_CNT + 1; /* OWNER WILL BE UPDATED LATER */
     1640     2154    2           END;
     1641     2155    1       RETURN;
     1642     2156
     1643     2157    1   ALT_WRIT_TEMP:
     1644     2158    1       ALTRETURN;
     1645     2159    1   END STORE_AN_ENTRY;
     1646     2160        %EOD;

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:250  
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure STORE_AN_ENTRY.

   Procedure STORE_AN_ENTRY requires 883 words for executable code.
   Procedure STORE_AN_ENTRY requires 14 words of local(AUTO) storage.

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:251  

 Object Unit name= STORE_AN_ENTRY                             File name= ZIU$COMPACT.:ZIC0TOU
 UTS= SEP 05 '97 13:10:48.80 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     5      5  STORE_AN_ENTRY
    1   DCB   even  none     0      0  M$UC
    2   Proc  even  none   883   1563  STORE_AN_ENTRY
    3  RoData even  none    26     32  STORE_AN_ENTRY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  STORE_AN_ENTRY
     2   1200          yes     yes      Std        0  PA_CLEANUP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 BIN_CHAR
         yes           Std       0 CREATE_PAREC
         yes           Std       1 PUSH_PAENTRY
         yes           Std       4 ERROR_MSG
         yes           Std       0 ERASE_PAREC
         yes           Std       2 FIND_DIRECT
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:252  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     LEVEL#                                CURR_OWNER                            REC_CNT
     KEY                                   COMMAND_TEXT                          BUF_PTR
     ENTRY_LEN                             NO_OF_LEVELS                          POOL_MAX
     SWAP_PTR                              POOL                                  STK
     CURR_LEVEL                            BREAK_CLEANUP                         BREAK_FLAG
     REC2$                                 REC$                                  M$UC
     WRITE_TEMP                            TYPE                                  SC_PTR
     SC_TBL                                RC_PTR                                RC_TBL
     KEY_PTR                               KEY_TBL                               AC_PTR
     FIRST_TIME_CALLED                     BASE_DBK                              AC_TBL
     ENTRY$                                GROUP$                                PTR_LEN
     KEY_LEN

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:253  


     1244        1        /*T***********************************************************/
     1245        2        /*T*                                                         */
     1246        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1247        4        /*T*                                                         */
     1248        5        /*T***********************************************************/
     1249        6
     1250        7        /*
     1251        8              RECURSIVE SUBR  STORE_A_ENTRY - STORE A ENTRY IN THE
     1252        9                        PA_REC IN CURRENT OF LEVEL WITH KEY PASSED
     1253       10              SC_PTR -  POINTS TO THE PA SET IN SC_TBL
     1254       11        */
     1255       12        STORE_AN_ENTRY: PROC(PA_KEY) ALTRET; /* ALTRET ON WRIT TEMP IO ERR */

     12  2 000000   000000 700200 xent  STORE_AN_EN* TSX0  ! X66_AUTO_1
         2 000001   000016 000001                    ZERO    14,1

     1256       13
     1257       14    1   DCL ERROR_MSG ENTRY(4);
     1258       15    1   DCL BIN_CHAR ENTRY(2);
     1259       16    1   DCL FIND_DIRECT ENTRY(2);
     1260       17    1   DCL CREATE_PAREC ENTRY;
     1261       18    1   DCL PUSH_PAENTRY ENTRY(1);
     1262       19
     1263       20    1   DCL ERASE_PAREC ENTRY;
     1264       21    1   DCL PA_KEY CHAR(KEY_LEN) CALIGNED;
     1265       22    1   DCL LEVEL# SBIN SYMREF ALIGNED;
     1266       23    1   DCL CURR_OWNER UBIN SYMREF ALIGNED;
     1267       24    1   DCL REC_CNT SBIN SYMREF ALIGNED;
     1268       25    1   DCL 1 KEY SYMREF ALIGNED,
     1269       26    1         2 * UBIN BYTE UNAL,
     1270       27    1         2 TXT UBIN WORD UNAL,
     1271       28    1         2 RC_PTR UBIN BYTE UNAL;
     1272       29    1   DCL COMMAND_TEXT CHAR(9) SYMREF ALIGNED;
     1273       30    1   DCL BUF_PTR SBIN SYMREF ALIGNED;
     1274       31    1   DCL ENTRY_LEN UBIN SYMREF ALIGNED; /* ENTRY_LEN=2+KEY_LEN+PTR_LEN */
     1275       32    1   DCL NO_OF_LEVELS UBIN SYMREF ALIGNED;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:254  
     1276       33    1   DCL POOL_MAX SBIN WORD SYMREF ALIGNED;
     1277       34    1   DCL SWAP_PTR SBIN WORD SYMREF ALIGNED;
     1278       35    1   DCL 1 POOL(0:95) SYMREF ALIGNED,
     1279       36    1         2 MUST_WRITE BIT(1) UNAL,
     1280       37    1         2 LOCKS UBIN(9) UNAL,
     1281       38    1         2 PAGE# UBIN(26) UNAL;
     1282       39    1   DCL 1 STK(0:1) SYMREF ALIGNED,
     1283       40    1         2 NEXT SBIN ALIGNED,
     1284       41    1         2 PRIOR SBIN ALIGNED,
     1285       42    1         2 CURR SBIN ALIGNED,
     1286       43    1         2 RC_PTR UBIN BYTE UNAL,
     1287       44    1         2 AC_PTR UBIN BYTE UNAL;
     1288       45    1   DCL 1 CURR_LEVEL(0:31) SYMREF ALIGNED,
     1289       46    1         2 DBK UBIN WORD ALIGNED,
     1290       47    1         2 FIRST_PA UBIN ALIGNED,
     1291       48    1         2 ENT_NO UBIN HALF UNAL,
     1292       49    1         2 DUPIND BIT(1) UNAL,
     1293       50    1         2 BUF_PTR UBIN(8) UNAL,
     1294       51    1         2 * UBIN(9) UNAL,
     1295       52    1         2 REC$ PTR ALIGNED;
     1296       53    1   DCL BREAK_CLEANUP BIT(72) SYMREF ALIGNED;
     1297       54    1   DCL Y SBIN STATIC ALIGNED;
     1298       55    1   DCL CHAR_V CHAR(Y) BASED CALIGNED;
     1299       56    1   DCL Z SBIN STATIC ALIGNED;
     1300       57    1   DCL NEW_HIGHEST UBIN STATIC ALIGNED;
     1301       58    1   DCL X SBIN STATIC ALIGNED; /* MUST BE LOCAL,DONT INCLUDE ZI_GLOBAL */
     1302       59    1   DCL BREAK_FLAG SBIN SYMREF ALIGNED;
     1303       60    1   DCL POINTER SBIN STATIC ALIGNED;
     1304       61    1   DCL REC2$ PTR SYMREF ALIGNED;
     1305       62    1   DCL REC$ PTR SYMREF ALIGNED;
     1306       63    1   DCL PTR_V CHAR(PTR_LEN) BASED(REC2$) CALIGNED;
     1307       64    1   DCL KEY_V CHAR(KEY_LEN) BASED(REC2$) CALIGNED;
     1308       65    1   DCL 1 DUMMY_V BASED(REC2$) CALIGNED,
     1309       66    1         2 * CHAR(KEY_LEN) CALIGNED;
     1310       67        /*
     1311       68              LOCAL AUTO VARIABLES
     1312       69        */
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:255  
     1313       70    1   DCL LOC_PTR UBIN AUTO ALIGNED;
     1314       71    1   DCL GLO_PTR UBIN AUTO ALIGNED;
     1315       72    1   DCL RC_TYPE UBIN AUTO ALIGNED;
     1316       73        %EJECT;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:256  
     1317       74
     1318       75        %EQU LOCK_BUF = 2;
     1319       76        %EQU MUST_WRITE = 1;
     1320       77        %EQU DONT_LOCK = 0;
     1321       78        %EQU DONT_ERROR = -1;
     1322       79        %INCLUDE CP_6;
     1323      160         %FPT_WRITE(FPTN=WRITE_TEMP,STCLASS=SYMREF);
     1324      191        %INCLUDE ZI_DBU_XREF;
     1325      358         %PA_XREF_TBLS;
     1326      424        %INCLUDE ZI_GLOBAL_DBUTIL;
     1327      602         %PAREC(STCLASS=SYMREF); /* DONT INVOKE MISC_DCLS */
     1328      629        %INCLUDE ZI_PRSE_SUBS;
     1329      785        %INCLUDE ZI_ERRORS_SUBS;
     1330     1305        %INCLUDE CP_6_SUBS;
     1331     1845        %EJECT;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:257  
     1332     1846    1       IF BREAK_FLAG > 0 THEN /* IF BREAK HIT,WILL BE PICKEDUP HERE */

   1846  2 000002   000000 235000 xsym               LDA     BREAK_FLAG
         2 000003   000012 604400 2                  TMOZ    s:1849

     1333     1847    1           UNWIND TO BREAK_CLEANUP;

   1847  2 000004   000100 100600                    MLR   ! fill='000'O
         2 000005   000000 000010 xsym               ADSC9   BREAK_CLEANUP            cn=0,n=8
         2 000006   200012 000010                    ADSC9   RC_TYPE+4,,AUTO          cn=0,n=8
         2 000007   200012 237300                    LDAQ  ! RC_TYPE+4,,AUTO
         2 000010   000000 700200 xent               TSX0  ! X66_AUNWIND
         2 000011   000000 000200                    ZERO    0,128

     1334     1848
     1335     1849    1       IF LEVEL# = 0 THEN /* NEED TO CREATE HIGHEST LEVEL OF PA */

   1849  2 000012   000000 236000 xsym               LDQ     LEVEL#
         2 000013   000134 601000 2                  TNZ     s:1885

     1336     1850    2       DO;

     1337     1851    2           NO_OF_LEVELS = NO_OF_LEVELS + 1; /* INCREMENT TOTAL # LEVELS */

   1851  2 000014   000000 235000 xsym               LDA     NO_OF_LEVELS
         2 000015   000001 035007                    ADLA    1,DL
         2 000016   000000 755000 xsym               STA     NO_OF_LEVELS

     1338     1852    2           IF NO_OF_LEVELS>32 THEN /* OVER 32 LEVELS ????,GOTO BE WRONG? */

   1852  2 000017   000041 115007                    CMPA    33,DL
         2 000020   000046 602000 2                  TNC     s:1862

     1339     1853    3           DO;

     1340     1854    3               CALL BIN_CHAR(2,CURR_OWNER);

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:258  
   1854  2 000021   000002 630400 3                  EPPR0   2
         2 000022   000000 631400 3                  EPPR1   0
         2 000023   000000 701000 xent               TSX1    BIN_CHAR
         2 000024   000000 011000                    NOP     0

     1341     1855    3               CALL ERROR_MSG(DBU#PALEV33,SC_TBL.NAME(SC_PTR),COMMAND_TEXT);

   1855  2 000025   000006 236000 3                  LDQ     6
         2 000026   200014 756100                    STQ     RC_TYPE+6,,AUTO
         2 000027   000000 236000 xsym               LDQ     SC_PTR
         2 000030   000010 402000 3                  MPY     8
         2 000031   000007 036000 3                  ADLQ    7
         2 000032   000011 235000 3                  LDA     9
         2 000033   200012 757100                    STAQ    RC_TYPE+4,,AUTO
         2 000034   200012 630500                    EPPR0   RC_TYPE+4,,AUTO
         2 000035   000004 631400 3                  EPPR1   4
         2 000036   000000 701000 xent               TSX1    ERROR_MSG
         2 000037   000000 011000                    NOP     0

     1342     1856    3               UNWIND TO BREAK_CLEANUP;

   1856  2 000040   000100 100600                    MLR   ! fill='000'O
         2 000041   000000 000010 xsym               ADSC9   BREAK_CLEANUP            cn=0,n=8
         2 000042   200012 000010                    ADSC9   RC_TYPE+4,,AUTO          cn=0,n=8
         2 000043   200012 237300                    LDAQ  ! RC_TYPE+4,,AUTO
         2 000044   000000 700200 xent               TSX0  ! X66_AUNWIND
         2 000045   000000 000200                    ZERO    0,128

     1343     1857         /*E* ERROR: ZIU-DBU#PALEV33-C
     1344     1858                    MESSAGE: Error: For an unknown reason, we are having more
     1345     1859                                    than 32 levels of PA, while set name is "%U1" and
     1346     1860                                    owner DBK# is %U3. %U2 cannot handle that many. */
     1347     1861    3               END;
     1348     1862    3           DO LEVEL#=NO_OF_LEVELS DOWNTO 1; /* MOVE EVERY LEVEL DOWN */

   1862  2 000046   000000 755000 xsym               STA     LEVEL#
         2 000047   000057 710000 2                  TRA     s:1864+2
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:259  

     1349     1863    3               CURR_LEVEL(LEVEL#)=CURR_LEVEL(LEVEL#-1);

   1863  2 000050   000000 235000 xsym               LDA     LEVEL#
         2 000051   000004 735000                    ALS     4
         2 000052   000005 100405                    MLR     fill='000'O
         2 000053   777774 000020 xsym               ADSC9   CURR_LEVEL-4,A           cn=0,n=16
         2 000054   000000 000020 xsym               ADSC9   CURR_LEVEL,A             cn=0,n=16

     1350     1864    3               END;

   1864  2 000055   000001 336007                    LCQ     1,DL
         2 000056   000000 056000 xsym               ASQ     LEVEL#
         2 000057   000000 235000 xsym               LDA     LEVEL#
         2 000060   000050 605400 2                  TPNZ    s:1863

     1351     1865
     1352     1866    2           CALL CREATE_PAREC; /* CREATE HIGHEST PA_REC */

   1866  2 000061   000012 631400 3                  EPPR1   10
         2 000062   000000 701000 xent               TSX1    CREATE_PAREC
         2 000063   000000 011000                    NOP     0

     1353     1867
     1354     1868    2           PA_REC.FIRST_IN_LEVEL = '1'B; /* SETUP PA BITS */

   1868  2 000064   000000 470400 xsym               LDP0    REC$
         2 000065   003100 060400                    CSL     bolr='003'O
         2 000066   000013 000001 3                  BDSC    11                       by=0,bit=0,n=1
         2 000067   000001 020001                    BDSC    1,,PR0                   by=0,bit=2,n=1

     1355     1869    2           CURR_LEVEL.ENT_NO(0)=0; /* SETUP CONTROL VARIABLE */

   1869  2 000070   000000 220003                    LDX0    0,DU
         2 000071   000002 740000 xsym               STX0    CURR_LEVEL+2

     1356     1870    2           CURR_LEVEL.DUPIND(0)='0'B;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:260  

   1870  2 000072   000014 236000 3                  LDQ     12
         2 000073   000002 356000 xsym               ANSQ    CURR_LEVEL+2

     1357     1871    2           CURR_LEVEL.FIRST_PA(0)=CURR_LEVEL.DBK(0);

   1871  2 000074   000000 235000 xsym               LDA     CURR_LEVEL
         2 000075   000001 755000 xsym               STA     CURR_LEVEL+1

     1358     1872    2           POINTER=CURR_OWNER; /* LINK NEXT,PRIOR,OWNER TO CURR OWNER */

   1872  2 000076   000000 235000 xsym               LDA     CURR_OWNER
         2 000077   000004 755000 0                  STA     POINTER

     1359     1873    2           REC2$=PINCRC(REC$,8);

   1873  2 000100   000000 236000 xsym               LDQ     REC$
         2 000101   000002 036003                    ADLQ    2,DU
         2 000102   000000 756000 xsym               STQ     REC2$

     1360     1874    2           CALL STORE_PTR;

   1874  2 000103   001164 701000 2                  TSX1    STORE_PTR
         2 000104   000000 011000                    NOP     0

     1361     1875    2           POINTER=CURR_OWNER;

   1875  2 000105   000000 235000 xsym               LDA     CURR_OWNER
         2 000106   000004 755000 0                  STA     POINTER

     1362     1876    2           REC2$=PINCRC(REC2$,PTR_LEN);

   1876  2 000107   000000 236000 xsym               LDQ     PTR_LEN
         2 000110   000020 736000                    QLS     16
         2 000111   000000 036000 xsym               ADLQ    REC2$
         2 000112   000000 756000 xsym               STQ     REC2$

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:261  
     1363     1877    2           CALL STORE_PTR;

   1877  2 000113   001164 701000 2                  TSX1    STORE_PTR
         2 000114   000000 011000                    NOP     0

     1364     1878    2           REC2$=PINCRC(REC2$,PTR_LEN);

   1878  2 000115   000000 236000 xsym               LDQ     PTR_LEN
         2 000116   000020 736000                    QLS     16
         2 000117   000000 036000 xsym               ADLQ    REC2$
         2 000120   000000 756000 xsym               STQ     REC2$

     1365     1879    2           POINTER=CURR_OWNER;

   1879  2 000121   000000 235000 xsym               LDA     CURR_OWNER
         2 000122   000004 755000 0                  STA     POINTER

     1366     1880    2           CALL STORE_PTR;

   1880  2 000123   001164 701000 2                  TSX1    STORE_PTR
         2 000124   000000 011000                    NOP     0

     1367     1881    2           IF STK.CURR(1)=CURR_OWNER THEN /* INSERT DUMMY */

   1881  2 000125   000006 236000 xsym               LDQ     STK+6
         2 000126   000136 604000 2                  TMI     s:1887
         2 000127   000000 116000 xsym               CMPQ    CURR_OWNER
         2 000130   000136 601000 2                  TNZ     s:1887

     1368     1882    2               STK.NEXT(1)=CURR_LEVEL.DBK(0); /* FAKE POINTER */

   1882  2 000131   000000 235000 xsym               LDA     CURR_LEVEL
         2 000132   000004 755000 xsym               STA     STK+4

     1369     1883    2           END;

   1883  2 000133   000136 710000 2                  TRA     s:1887
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:262  

     1370     1884    1       ELSE
     1371     1885    1           LEVEL# = LEVEL# - 1;

   1885  2 000134   000001 336007                    LCQ     1,DL
         2 000135   000000 056000 xsym               ASQ     LEVEL#

     1372     1886
     1373     1887    1       REC$ = CURR_LEVEL.REC$(LEVEL#); /* GET CURR PA IN LEVEL */

   1887  2 000136   000000 235000 xsym               LDA     LEVEL#
         2 000137   000002 735000                    ALS     2
         2 000140   000003 236005 xsym               LDQ     CURR_LEVEL+3,AL
         2 000141   000000 756000 xsym               STQ     REC$

     1374     1888    1       IF LEVEL#=NO_OF_LEVELS THEN /* WE ARE IN LOWEST LEVEL OF PA */

   1888  2 000142   000000 236000 xsym               LDQ     LEVEL#
         2 000143   000157 604000 2                  TMI     s:1895
         2 000144   000000 116000 xsym               CMPQ    NO_OF_LEVELS
         2 000145   000157 601000 2                  TNZ     s:1895

     1375     1889    2       DO;

     1376     1890    2           RC_TYPE = RC_TBL.TYPE(STK.RC_PTR(1)); /* GET TYPE OF CURR MEMBER */

   1890  2 000146   000007 236000 xsym               LDQ     STK+7
         2 000147   000033 772000                    QRL     27
         2 000150   000003 402007                    MPY     3,DL
         2 000151   000001 236006 xsym               LDQ     RC_TBL+1,QL
         2 000152   000022 772000                    QRL     18
         2 000153   200006 756100                    STQ     RC_TYPE,,AUTO

     1377     1891    2           GLO_PTR = STK.CURR(1); /* AND ITS DBK */

   1891  2 000154   000006 235000 xsym               LDA     STK+6
         2 000155   200005 755100                    STA     GLO_PTR,,AUTO
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:263  

     1378     1892    2           END;

   1892  2 000156   000173 710000 2                  TRA     s:1898

     1379     1893    1       ELSE
     1380     1894    2       DO; /* WE ARE STOREING AN ENTRY TO A PA_REC */

     1381     1895    2           RC_TYPE = SC_TBL.PA_TYPE(SC_PTR);

   1895  2 000157   000000 236000 xsym               LDQ     SC_PTR
         2 000160   000405 402007                    MPY     261,DL
         2 000161   000000 116003                    CMPQ    0,DU
         2 000162   000164 605000 2                  TPL     s:1895+5
         2 000163   000044 036003                    ADLQ    36,DU
         2 000164   003100 061406                    CSR     bolr='003'O
         2 000165   000004 250014 xsym               BDSC    SC_TBL+4,Q               by=1,bit=5,n=12
         2 000166   200006 000044                    BDSC    RC_TYPE,,AUTO            by=0,bit=0,n=36

     1382     1896    2           GLO_PTR = CURR_LEVEL.DBK(LEVEL#+1); /* GET PA IN LOWER LEVEL */

   1896  2 000167   000000 235000 xsym               LDA     LEVEL#
         2 000170   000002 735000                    ALS     2
         2 000171   000004 235005 xsym               LDA     CURR_LEVEL+4,AL
         2 000172   200005 755100                    STA     GLO_PTR,,AUTO

     1383     1897    2           END;

     1384     1898    1       LOC_PTR = GLO_PTR - BASE_DBK; /* IF SC GLOBAL THEN BASE_DBK=0 */

   1898  2 000173   200005 236100                    LDQ     GLO_PTR,,AUTO
         2 000174   000000 136000 xsym               SBLQ    BASE_DBK
         2 000175   200004 756100                    STQ     LOC_PTR,,AUTO

     1385     1899    1       IF CURR_LEVEL.ENT_NO(LEVEL#)=0 THEN /* NO ENTRY STORED YET */

   1899  2 000176   000000 235000 xsym               LDA     LEVEL#
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:264  
         2 000177   000002 735000                    ALS     2
         2 000200   000002 220005 xsym               LDX0    CURR_LEVEL+2,AL
         2 000201   000327 601000 2                  TNZ     s:1925

     1386     1900    2       DO;

     1387     1901    2   STORE_FIRST_ENTRY: /* ENTRY IS 1ST ONE TO BE STORED IN PA */
     1388     1902    2           IF CURR_LEVEL.DUPIND(LEVEL#) THEN

   1902  2 000202   000000 235000 xsym  STORE_FIRST* LDA     LEVEL#
         2 000203   000002 735000                    ALS     2
         2 000204   000002 236005 xsym               LDQ     CURR_LEVEL+2,AL
         2 000205   400000 316007                    CANQ    -131072,DL
         2 000206   000214 600000 2                  TZE     s:1905

     1389     1903    2               PA_REC.LOWEST_KEY='1'B; /* LOWEST KEY REPEATED IN PRIOR */

   1903  2 000207   000000 470400 xsym               LDP0    REC$
         2 000210   003100 060400                    CSL     bolr='003'O
         2 000211   000013 000001 3                  BDSC    11                       by=0,bit=0,n=1
         2 000212   000001 040001                    BDSC    1,,PR0                   by=0,bit=4,n=1
         2 000213   000220 710000 2                  TRA     s:1906

     1390     1904    2           ELSE
     1391     1905    2               PA_REC.LOWEST_KEY='0'B;

   1905  2 000214   000000 470400 xsym               LDP0    REC$
         2 000215   003100 060400                    CSL     bolr='003'O
         2 000216   000012 000001 3                  BDSC    10                       by=0,bit=0,n=1
         2 000217   000001 040001                    BDSC    1,,PR0                   by=0,bit=4,n=1

     1392     1906    2           PA_REC.HIGHEST_KEY='0'B; /* INIT HIGHEST REPEAT BIT */

   1906  2 000220   003100 060400                    CSL     bolr='003'O
         2 000221   000012 000001 3                  BDSC    10                       by=0,bit=0,n=1
         2 000222   000001 010001                    BDSC    1,,PR0                   by=0,bit=1,n=1

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:265  
     1393     1907    2           PA_REC.ENTRIES=1;

   1907  2 000223   003100 061400                    CSR     bolr='003'O
         2 000224   000015 000044 3                  BDSC    13                       by=0,bit=0,n=36
         2 000225   000001 060014                    BDSC    1,,PR0                   by=0,bit=6,n=12

     1394     1908    2           PA_REC.LAST_IN_LEVEL='0'B; /* SET TO 1 BY PA_CLEANUP */

   1908  2 000226   003100 060400                    CSL     bolr='003'O
         2 000227   000012 000001 3                  BDSC    10                       by=0,bit=0,n=1
         2 000230   000001 030001                    BDSC    1,,PR0                   by=0,bit=3,n=1

     1395     1909    2           CURR_LEVEL.DUPIND(LEVEL#)='0'B; /* RESET INDICATOR */

   1909  2 000231   000014 236000 3                  LDQ     12
         2 000232   000002 356005 xsym               ANSQ    CURR_LEVEL+2,AL

     1396     1910    2           CURR_LEVEL.ENT_NO(LEVEL#)=2*4+3*PTR_LEN;

   1910  2 000233   000000 236000 xsym               LDQ     PTR_LEN
         2 000234   000000 620005                    EAX0    0,AL
         2 000235   000003 402007                    MPY     3,DL
         2 000236   000010 621006                    EAX1    8,QL
         2 000237   000002 741010 xsym               STX1    CURR_LEVEL+2,X0

     1397     1911    2           PA_REC.AVAIL=PA_REC.SIZE-CURR_LEVEL.ENT_NO(LEVEL#)-ENTRY_LEN;

   1911  2 000240   000000 235000 xsym               LDA     LEVEL#
         2 000241   000002 735000                    ALS     2
         2 000242   000002 236005 xsym               LDQ     CURR_LEVEL+2,AL
         2 000243   000022 772000                    QRL     18
         2 000244   200012 756100                    STQ     RC_TYPE+4,,AUTO
         2 000245   000100 101500                    MRL     fill='000'O
         2 000246   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         2 000247   200013 000004                    ADSC9   RC_TYPE+5,,AUTO          cn=0,n=4
         2 000250   200013 236100                    LDQ     RC_TYPE+5,,AUTO
         2 000251   200012 136100                    SBLQ    RC_TYPE+4,,AUTO
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:266  
         2 000252   000000 136000 xsym               SBLQ    ENTRY_LEN
         2 000253   200014 756100                    STQ     RC_TYPE+6,,AUTO
         2 000254   000100 101500                    MRL     fill='000'O
         2 000255   200014 000004                    ADSC9   RC_TYPE+6,,AUTO          cn=0,n=4
         2 000256   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2

     1398     1912    2           ENTRY$=PINCRC(REC$,CURR_LEVEL.ENT_NO(LEVEL#)); /* TO PA_ENTRY */

   1912  2 000257   000002 236005 xsym               LDQ     CURR_LEVEL+2,AL
         2 000260   000022 772000                    QRL     18
         2 000261   000020 736000                    QLS     16
         2 000262   000000 036000 xsym               ADLQ    REC$
         2 000263   000000 756000 xsym               STQ     ENTRY$

     1399     1913    2           PA_ENTRY.C=0;

   1913  2 000264   000000 471400 xsym               LDP1    ENTRY$
         2 000265   003100 061400                    CSR     bolr='003'O
         2 000266   000012 000044 3                  BDSC    10                       by=0,bit=0,n=36
         2 000267   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

     1400     1914    2           PA_ENTRY.TYPE = RC_TYPE;

   1914  2 000270   000000 470400 xsym               LDP0    ENTRY$
         2 000271   003100 061500                    CSR     bolr='003'O
         2 000272   200006 000044                    BDSC    RC_TYPE,,AUTO            by=0,bit=0,n=36
         2 000273   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12

     1401     1915    2           PA_ENTRY.PTRS=PINCRC(ADDR(LOC_PTR),4-PTR_LEN)->PTR_V;

   1915  2 000274   000000 335000 xsym               LCA     PTR_LEN
         2 000275   000000 720000 xsym               LXL0    PTR_LEN
         2 000276   000000 470400 xsym               LDP0    ENTRY$
         2 000277   040140 100545                    MLR     fill='040'O
         2 000300   200005 000010                    ADSC9   GLO_PTR,A,AUTO           cn=0,n=*X0
         2 000301   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:267  
     1402     1916    2           REC2$=PINCRC(ENTRY$,2+PTR_LEN); /* POINT TO KEY_LOC */

   1916  2 000302   000000 236000 xsym               LDQ     PTR_LEN
         2 000303   000020 736000                    QLS     16
         2 000304   400000 036007                    ADLQ    -131072,DL
         2 000305   000000 036000 xsym               ADLQ    ENTRY$
         2 000306   000000 756000 xsym               STQ     REC2$

     1403     1917    2           IF ADDR(PA_KEY)=ADDR(NIL) THEN /* DUMMY KEY */

   1917  2 000307   200003 236100                    LDQ     @PA_KEY,,AUTO
         2 000310   000016 116000 3                  CMPQ    14
         2 000311   000320 601000 2                  TNZ     s:1920

     1404     1918    2               DUMMY_V = '0'B; /* USE BINARY 0 FOR KEY IN ENTRY */

   1918  2 000312   000000 470400 xsym               LDP0    REC2$
         2 000313   000000 720000 xsym               LXL0    KEY_LEN
         2 000314   000140 100400                    MLR     fill='000'O
         2 000315   000012 000001 3                  ADSC9   10                       cn=0,n=1
         2 000316   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000317   001070 710000 2                  TRA     s:2034

     1405     1919    2           ELSE
     1406     1920    2               KEY_V = PA_KEY; /* USE KEY THAT IS PASSED */

   1920  2 000320   200003 470500                    LDP0    @PA_KEY,,AUTO
         2 000321   000000 720000 xsym               LXL0    KEY_LEN
         2 000322   000000 471400 xsym               LDP1    REC2$
         2 000323   040140 100540                    MLR     fill='040'O
         2 000324   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000325   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1407     1921    2           END;

   1921  2 000326   001070 710000 2                  TRA     s:2034

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:268  
     1408     1922        %EJECT;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:269  
     1409     1923    1       ELSE
     1410     1924    2       DO; /* CURR_PA IS NOT EMPTY, SO CHK IF FULL FIRST */

     1411     1925    2           ENTRY$=PINCRC(REC$,CURR_LEVEL.ENT_NO(LEVEL#));

   1925  2 000327   000002 236005 xsym               LDQ     CURR_LEVEL+2,AL
         2 000330   000022 772000                    QRL     18
         2 000331   000020 736000                    QLS     16
         2 000332   000000 036000 xsym               ADLQ    REC$
         2 000333   000000 756000 xsym               STQ     ENTRY$

     1412     1926    2           REC2$=PINCRC(ENTRY$,2+PTR_LEN); /* POINT THE LAST KEY IN REC */

   1926  2 000334   000000 236000 xsym               LDQ     PTR_LEN
         2 000335   000020 736000                    QLS     16
         2 000336   400000 036007                    ADLQ    -131072,DL
         2 000337   000000 036000 xsym               ADLQ    ENTRY$
         2 000340   000000 756000 xsym               STQ     REC2$

     1413     1927    2           IF PA_KEY=KEY_V THEN /* DUPLICATE KEYS */

   1927  2 000341   200003 470500                    LDP0    @PA_KEY,,AUTO
         2 000342   000000 721000 xsym               LXL1    KEY_LEN
         2 000343   000000 471400 xsym               LDP1    REC2$
         2 000344   040140 106540                    CMPC    fill='040'O
         2 000345   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         2 000346   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         2 000347   000370 601000 2                  TNZ     s:1935

     1414     1928    3           DO;

     1415     1929    3               IF PA_ENTRY.C=1 THEN /* PA_GROUP ALREADY EXISTS */

   1929  2 000350   000000 473400 xsym               LDP3    ENTRY$
         2 000351   003100 061500                    CSR     bolr='003'O
         2 000352   300000 000001                    BDSC    0,,PR3                   by=0,bit=0,n=1
         2 000353   200012 000044                    BDSC    RC_TYPE+4,,AUTO          by=0,bit=0,n=36
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:270  
         2 000354   200012 236100                    LDQ     RC_TYPE+4,,AUTO
         2 000355   000001 116007                    CMPQ    1,DL
         2 000356   000363 601000 2                  TNZ     s:1932

     1416     1930    3                   X=PTR_LEN+2; /* NEED 2 BYTES FOR TYPE AND PLUS PTR_LEN */

   1930  2 000357   000000 236000 xsym               LDQ     PTR_LEN
         2 000360   000002 036007                    ADLQ    2,DL
         2 000361   000003 756000 0                  STQ     X
         2 000362   000372 710000 2                  TRA     s:1937

     1417     1931    3               ELSE
     1418     1932    3                   X=2*PTR_LEN+4+2; /* 2 PTRS+ 2 TYPES + 2 BYTES FOR COUNT */

   1932  2 000363   000000 235000 xsym               LDA     PTR_LEN
         2 000364   000001 735000                    ALS     1
         2 000365   000006 035007                    ADLA    6,DL
         2 000366   000003 755000 0                  STA     X

     1419     1933    3               END;

   1933  2 000367   000372 710000 2                  TRA     s:1937

     1420     1934    2           ELSE
     1421     1935    2               X=ENTRY_LEN; /* REGULAR ENTRY SIZE IS NEEDED */

   1935  2 000370   000000 235000 xsym               LDA     ENTRY_LEN
         2 000371   000003 755000 0                  STA     X

     1422     1936
     1423     1937    2           IF PA_REC.AVAIL-X<SC_TBL.FULL_PERCENT(SC_PTR) THEN /* NO SPACE */

   1937  2 000372   000000 473400 xsym               LDP3    REC$
         2 000373   000100 101500                    MRL     fill='000'O
         2 000374   300001 400002                    ADSC9   1,,PR3                   cn=2,n=2
         2 000375   200012 000004                    ADSC9   RC_TYPE+4,,AUTO          cn=0,n=4
         2 000376   200012 236100                    LDQ     RC_TYPE+4,,AUTO
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:271  
         2 000377   000003 136000 0                  SBLQ    X
         2 000400   200014 756100                    STQ     RC_TYPE+6,,AUTO
         2 000401   000000 236000 xsym               LDQ     SC_PTR
         2 000402   000405 402007                    MPY     261,DL
         2 000403   000000 116003                    CMPQ    0,DU
         2 000404   000406 605000 2                  TPL     s:1937+12
         2 000405   000044 036003                    ADLQ    36,DU
         2 000406   003100 061406                    CSR     bolr='003'O
         2 000407   000005 100014 xsym               BDSC    SC_TBL+5,Q               by=0,bit=8,n=12
         2 000410   200013 000044                    BDSC    RC_TYPE+5,,AUTO          by=0,bit=0,n=36
         2 000411   200014 236100                    LDQ     RC_TYPE+6,,AUTO
         2 000412   200013 116100                    CMPQ    RC_TYPE+5,,AUTO
         2 000413   000601 605000 2                  TPL     s:1989

     1424     1938    3           DO;

     1425     1939    3               IF PA_KEY=KEY_V THEN /* DUP KEY OCCUR */

   1939  2 000414   040140 106540                    CMPC    fill='040'O
         2 000415   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         2 000416   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         2 000417   000427 601000 2                  TNZ     s:1944

     1426     1940    4               DO;

     1427     1941    4                   CURR_LEVEL.DUPIND(LEVEL#)='1'B; /* SET INDICATOR */

   1941  2 000420   000000 235000 xsym               LDA     LEVEL#
         2 000421   000002 735000                    ALS     2
         2 000422   400000 236007                    LDQ     -131072,DL
         2 000423   000002 256005 xsym               ORSQ    CURR_LEVEL+2,AL

     1428     1942    4                   PA_REC.HIGHEST_KEY='1'B; /* SET HIGHEST KEY REPEATED BIT */

   1942  2 000424   003100 060400                    CSL     bolr='003'O
         2 000425   000013 000001 3                  BDSC    11                       by=0,bit=0,n=1
         2 000426   300001 010001                    BDSC    1,,PR3                   by=0,bit=1,n=1
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:272  

     1429     1943    4                   END;

     1430     1944    3               REC2$=PINCRC(REC$,10+4*PTR_LEN); /* 1ST KEY IN LOWER LEVEL */

   1944  2 000427   000000 236000 xsym               LDQ     PTR_LEN
         2 000430   000022 736000                    QLS     18
         2 000431   000017 036000 3                  ADLQ    15
         2 000432   000000 036000 xsym               ADLQ    REC$
         2 000433   000000 756000 xsym               STQ     REC2$

     1431     1945
     1432     1946    3               CALL STORE_AN_ENTRY(KEY_V) ALTRET(ALT_WRIT_TEMP);

   1946  2 000434   000000 630400 xsym               EPPR0   REC2$
         2 000435   000020 631400 3                  EPPR1   16
         2 000436   000000 701000 2                  TSX1    s:12
         2 000437   001562 702000 2                  TSX2    ALT_WRIT_TEMP

     1433     1947         /* IN HIGHER LEVEL PA */
     1434     1948
     1435     1949    3               REC2$=PINCRC(REC$,8); /* POINT TO NEXT PTR LOC */

   1949  2 000440   000000 236000 xsym               LDQ     REC$
         2 000441   000002 036003                    ADLQ    2,DU
         2 000442   000000 756000 xsym               STQ     REC2$

     1436     1950    3               CALL LOAD_PTR; /* LOAD NEXT PTR OF PA */

   1950  2 000443   001147 701000 2                  TSX1    LOAD_PTR
         2 000444   000000 011000                    NOP     0

     1437     1951    3               IF POINTER~=CURR_LEVEL.FIRST_PA(LEVEL#) AND

   1951  2 000445   000000 235000 xsym               LDA     LEVEL#
         2 000446   000002 735000                    ALS     2
         2 000447   000004 236000 0                  LDQ     POINTER
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:273  
         2 000450   000453 604000 2                  TMI     s:1951+6
         2 000451   000001 116005 xsym               CMPQ    CURR_LEVEL+1,AL
         2 000452   000517 600000 2                  TZE     s:1964
         2 000453   000000 116003                    CMPQ    0,DU
         2 000454   000457 604000 2                  TMI     s:1954
         2 000455   000000 116000 xsym               CMPQ    CURR_OWNER
         2 000456   000517 600000 2                  TZE     s:1964

     1438     1952    3                  POINTER~=CURR_OWNER THEN /* NEXT PA EXIST */
     1439     1953    4               DO;

     1440     1954    4                   BUF_PTR=CURR_LEVEL.BUF_PTR(LEVEL#); /* GET BUFF ADDR */

   1954  2 000457   000002 236005 xsym               LDQ     CURR_LEVEL+2,AL
         2 000460   000011 772000                    QRL     9
         2 000461   000377 376007                    ANQ     255,DL
         2 000462   000000 756000 xsym               STQ     BUF_PTR

     1441     1955    4                   POOL.LOCKS(BUF_PTR)=POOL.LOCKS(BUF_PTR)-1; /* UNLOCK IT */

   1955  2 000463   000000 720000 xsym               LXL0    BUF_PTR
         2 000464   000000 236006 xsym               LDQ     POOL,QL
         2 000465   000032 772000                    QRL     26
         2 000466   000777 376007                    ANQ     511,DL
         2 000467   000001 136007                    SBLQ    1,DL
         2 000470   000032 736000                    QLS     26
         2 000471   000000 676010 xsym               ERQ     POOL,X0
         2 000472   377400 376003                    ANQ     130816,DU
         2 000473   000000 656010 xsym               ERSQ    POOL,X0

     1442     1956    4                   CALL FIND_DIRECT(POINTER,%LOCK_BUF);

   1956  2 000474   000021 630400 3                  EPPR0   17
         2 000475   000000 631400 3                  EPPR1   0
         2 000476   000000 701000 xent               TSX1    FIND_DIRECT
         2 000477   000000 011000                    NOP     0

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:274  
     1443     1957    4                   CURR_LEVEL.DBK(LEVEL#)=POINTER; /* NEW CURR_OF_LEVEL */

   1957  2 000500   000000 235000 xsym               LDA     LEVEL#
         2 000501   000002 735000                    ALS     2
         2 000502   000004 236000 0                  LDQ     POINTER
         2 000503   000000 756005 xsym               STQ     CURR_LEVEL,AL

     1444     1958    4                   CURR_LEVEL.REC$(LEVEL#)=REC$;

   1958  2 000504   000000 236000 xsym               LDQ     REC$
         2 000505   000003 756005 xsym               STQ     CURR_LEVEL+3,AL

     1445     1959    4                   IF LEVEL# = NO_OF_LEVELS THEN /* LOWEST LEVEL */

   1959  2 000506   000000 236000 xsym               LDQ     LEVEL#
         2 000507   000600 604000 2                  TMI     s:1986
         2 000510   000000 116000 xsym               CMPQ    NO_OF_LEVELS
         2 000511   000600 601000 2                  TNZ     s:1986

     1446     1960    4                       CALL PUSH_PAENTRY(POINTER); /* BET YOU DIR=COMPACT */

   1960  2 000512   000021 630400 3                  EPPR0   17
         2 000513   000020 631400 3                  EPPR1   16
         2 000514   000000 701000 xent               TSX1    PUSH_PAENTRY
         2 000515   000000 011000                    NOP     0

     1447     1961    4                   END;

   1961  2 000516   000600 710000 2                  TRA     s:1986

     1448     1962    3               ELSE /* RUNNING OUT OF INDEX BLOCK, SO MAKE ONE */
     1449     1963    4               DO; /* AND LINK INTO CURR OF LEVEL */

     1450     1964    4                   IF LEVEL# = NO_OF_LEVELS THEN /* LOWEST LEVEL */

   1964  2 000517   000000 236000 xsym               LDQ     LEVEL#
         2 000520   000525 604000 2                  TMI     s:1966
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:275  
         2 000521   000000 116000 xsym               CMPQ    NO_OF_LEVELS
         2 000522   000525 601000 2                  TNZ     s:1966

     1451     1965    4                       FIRST_TIME_CALLED=1; /* ONLY USED BY COMPACT FOR E-O-S */

   1965  2 000523   000001 235007                    LDA     1,DL
         2 000524   000000 755000 xsym               STA     FIRST_TIME_CALLED

     1452     1966    4                   X=CURR_LEVEL.DBK(LEVEL#); /* SAVE CURR (BECOME PRIOR) */

   1966  2 000525   000000 235000 xsym               LDA     LEVEL#
         2 000526   000002 735000                    ALS     2
         2 000527   000000 235005 xsym               LDA     CURR_LEVEL,AL
         2 000530   000003 755000 0                  STA     X

     1453     1967    4                   Y=CURR_LEVEL.BUF_PTR(LEVEL#); /* AND ITS BUF PTR */

   1967  2 000531   000000 235000 xsym               LDA     LEVEL#
         2 000532   000002 735000                    ALS     2
         2 000533   000002 236005 xsym               LDQ     CURR_LEVEL+2,AL
         2 000534   000011 772000                    QRL     9
         2 000535   000377 376007                    ANQ     255,DL
         2 000536   000000 756000 0                  STQ     Y

     1454     1968
     1455     1969    4                   CALL CREATE_PAREC; /* CREATE A NEW ONE AND BECOME CURR */

   1969  2 000537   000012 631400 3                  EPPR1   10
         2 000540   000000 701000 xent               TSX1    CREATE_PAREC
         2 000541   000000 011000                    NOP     0

     1456     1970
     1457     1971    4                   POOL.LOCKS(Y)=POOL.LOCKS(Y)-1; /* UNLOCK PRIOR */

   1971  2 000542   000000 720000 0                  LXL0    Y
         2 000543   000000 236010 xsym               LDQ     POOL,X0
         2 000544   000032 772000                    QRL     26
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:276  
         2 000545   000777 376007                    ANQ     511,DL
         2 000546   000001 136007                    SBLQ    1,DL
         2 000547   000032 736000                    QLS     26
         2 000550   000000 676010 xsym               ERQ     POOL,X0
         2 000551   377400 376003                    ANQ     130816,DU
         2 000552   000000 656010 xsym               ERSQ    POOL,X0

     1458     1972    4                   POINTER=CURR_LEVEL.DBK(LEVEL#); /* LINK LAST PA TO NEW PA */

   1972  2 000553   000000 235000 xsym               LDA     LEVEL#
         2 000554   000002 735000                    ALS     2
         2 000555   000000 235005 xsym               LDA     CURR_LEVEL,AL
         2 000556   000004 755000 0                  STA     POINTER

     1459     1973         /* REC2$ POINTS TO THE NEXT PTR LOC IN PRIOR REC */
     1460     1974    4                   CALL STORE_PTR; /* STORE NEW NEXT PTR */

   1974  2 000557   001164 701000 2                  TSX1    STORE_PTR
         2 000560   000000 011000                    NOP     0

     1461     1975         /* LET NEXT OF NEW PA BE OWNER, SO WE KNOW END OF SET
     1462     1976            AND WHEN WE DOING A PA_CLEANUP, WE KNOW THE PRIOR PTR
     1463     1977            OF THE FIRST PA IN LEVEL SHOULD BE UPDATED TOO */
     1464     1978    4                   POINTER = CURR_OWNER;

   1978  2 000561   000000 235000 xsym               LDA     CURR_OWNER
         2 000562   000004 755000 0                  STA     POINTER

     1465     1979    4                   REC2$=PINCRC(REC$,8); /* LINK NEXT OF NEW PA TO OWNER */

   1979  2 000563   000000 236000 xsym               LDQ     REC$
         2 000564   000002 036003                    ADLQ    2,DU
         2 000565   000000 756000 xsym               STQ     REC2$

     1466     1980    4                   CALL STORE_PTR;

   1980  2 000566   001164 701000 2                  TSX1    STORE_PTR
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:277  
         2 000567   000000 011000                    NOP     0

     1467     1981    4                   POINTER=X; /* LINK PRIOR TO THE SAVED CURR */

   1981  2 000570   000003 235000 0                  LDA     X
         2 000571   000004 755000 0                  STA     POINTER

     1468     1982    4                   REC2$=PINCRC(REC2$,PTR_LEN);

   1982  2 000572   000000 236000 xsym               LDQ     PTR_LEN
         2 000573   000020 736000                    QLS     16
         2 000574   000000 036000 xsym               ADLQ    REC2$
         2 000575   000000 756000 xsym               STQ     REC2$

     1469     1983    4                   CALL STORE_PTR;

   1983  2 000576   001164 701000 2                  TSX1    STORE_PTR
         2 000577   000000 011000                    NOP     0

     1470     1984         /* DONT WORRY OWNER PTR , WILL BE CHECKED LATER */
     1471     1985    4                   END;

     1472     1986    3               GOTO STORE_FIRST_ENTRY;

   1986  2 000600   000202 710000 2                  TRA     STORE_FIRST_ENTRY

     1473     1987    3               END;
     1474     1988
     1475     1989    2           PA_REC.AVAIL=PA_REC.AVAIL-X; /* UPDATE SPACE AVAIL */

   1989  2 000601   000100 101500                    MRL     fill='000'O
         2 000602   300001 400002                    ADSC9   1,,PR3                   cn=2,n=2
         2 000603   200012 000004                    ADSC9   RC_TYPE+4,,AUTO          cn=0,n=4
         2 000604   200012 236100                    LDQ     RC_TYPE+4,,AUTO
         2 000605   000003 136000 0                  SBLQ    X
         2 000606   200013 756100                    STQ     RC_TYPE+5,,AUTO
         2 000607   000100 101500                    MRL     fill='000'O
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:278  
         2 000610   200013 000004                    ADSC9   RC_TYPE+5,,AUTO          cn=0,n=4
         2 000611   300001 400002                    ADSC9   1,,PR3                   cn=2,n=2

     1476     1990    2           IF PA_KEY~=KEY_V THEN /* STORE A UNIQUE ENTRY */

   1990  2 000612   040140 106540                    CMPC    fill='040'O
         2 000613   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         2 000614   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         2 000615   000674 600000 2                  TZE     s:2002

     1477     1991    3           DO;

     1478     1992    3               CURR_LEVEL.ENT_NO(LEVEL#)=CURR_LEVEL.ENT_NO(LEVEL#)+X;

   1992  2 000616   000000 235000 xsym               LDA     LEVEL#
         2 000617   000002 735000                    ALS     2
         2 000620   000002 236005 xsym               LDQ     CURR_LEVEL+2,AL
         2 000621   000022 772000                    QRL     18
         2 000622   000003 036000 0                  ADLQ    X
         2 000623   000000 620006                    EAX0    0,QL
         2 000624   000002 740005 xsym               STX0    CURR_LEVEL+2,AL

     1479     1993    3               ENTRY$=PINCRC(REC$,CURR_LEVEL.ENT_NO(LEVEL#));

   1993  2 000625   000002 236005 xsym               LDQ     CURR_LEVEL+2,AL
         2 000626   000022 772000                    QRL     18
         2 000627   000020 736000                    QLS     16
         2 000630   000000 036000 xsym               ADLQ    REC$
         2 000631   000000 756000 xsym               STQ     ENTRY$

     1480     1994    3               PA_REC.ENTRIES=PA_REC.ENTRIES+1;

   1994  2 000632   003100 061500                    CSR     bolr='003'O
         2 000633   300001 060014                    BDSC    1,,PR3                   by=0,bit=6,n=12
         2 000634   200013 000044                    BDSC    RC_TYPE+5,,AUTO          by=0,bit=0,n=36
         2 000635   200013 236100                    LDQ     RC_TYPE+5,,AUTO
         2 000636   000001 036007                    ADLQ    1,DL
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:279  
         2 000637   200012 756100                    STQ     RC_TYPE+4,,AUTO
         2 000640   003100 061500                    CSR     bolr='003'O
         2 000641   200012 000044                    BDSC    RC_TYPE+4,,AUTO          by=0,bit=0,n=36
         2 000642   300001 060014                    BDSC    1,,PR3                   by=0,bit=6,n=12

     1481     1995    3               PA_ENTRY.C=0;

   1995  2 000643   000000 474400 xsym               LDP4    ENTRY$
         2 000644   003100 061400                    CSR     bolr='003'O
         2 000645   000012 000044 3                  BDSC    10                       by=0,bit=0,n=36
         2 000646   400000 000001                    BDSC    0,,PR4                   by=0,bit=0,n=1

     1482     1996    3               PA_ENTRY.TYPE = RC_TYPE;

   1996  2 000647   000000 471400 xsym               LDP1    ENTRY$
         2 000650   003100 061500                    CSR     bolr='003'O
         2 000651   200006 000044                    BDSC    RC_TYPE,,AUTO            by=0,bit=0,n=36
         2 000652   100000 060014                    BDSC    0,,PR1                   by=0,bit=6,n=12

     1483     1997    3               PA_ENTRY.PTRS=PINCRC(ADDR(LOC_PTR),4-PTR_LEN)->PTR_V;

   1997  2 000653   000000 335000 xsym               LCA     PTR_LEN
         2 000654   000000 720000 xsym               LXL0    PTR_LEN
         2 000655   000000 471400 xsym               LDP1    ENTRY$
         2 000656   040140 100545                    MLR     fill='040'O
         2 000657   200005 000010                    ADSC9   GLO_PTR,A,AUTO           cn=0,n=*X0
         2 000660   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0

     1484     1998    3               REC2$=PINCRC(ENTRY$,2+PTR_LEN); /* POINT TO KEY IN ENTRY */

   1998  2 000661   000000 236000 xsym               LDQ     PTR_LEN
         2 000662   000020 736000                    QLS     16
         2 000663   400000 036007                    ADLQ    -131072,DL
         2 000664   000000 036000 xsym               ADLQ    ENTRY$
         2 000665   000000 756000 xsym               STQ     REC2$

     1485     1999    3               KEY_V=PA_KEY;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:280  

   1999  2 000666   000000 720000 xsym               LXL0    KEY_LEN
         2 000667   000000 471400 xsym               LDP1    REC2$
         2 000670   040140 100540                    MLR     fill='040'O
         2 000671   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 000672   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

     1486     2000    3               END;

   2000  2 000673   001070 710000 2                  TRA     s:2034

     1487     2001    2           ELSE
     1488     2002    2               IF PA_ENTRY.C=0 THEN /* DUP KEY BUT PA_GROUP NOT PRESENT */

   2002  2 000674   000000 474400 xsym               LDP4    ENTRY$
         2 000675   003100 061500                    CSR     bolr='003'O
         2 000676   400000 000001                    BDSC    0,,PR4                   by=0,bit=0,n=1
         2 000677   200012 000044                    BDSC    RC_TYPE+4,,AUTO          by=0,bit=0,n=36
         2 000700   200012 236100                    LDQ     RC_TYPE+4,,AUTO
         2 000701   000000 116003                    CMPQ    0,DU
         2 000702   000774 601000 2                  TNZ     s:2018

     1489     2003    3               DO;

     1490     2004    3                   X=CURR_LEVEL.ENT_NO(LEVEL#)+ENTRY_LEN+PA_REC.AVAIL;

   2004  2 000703   000000 235000 xsym               LDA     LEVEL#
         2 000704   000002 735000                    ALS     2
         2 000705   000002 236005 xsym               LDQ     CURR_LEVEL+2,AL
         2 000706   000022 772000                    QRL     18
         2 000707   000000 036000 xsym               ADLQ    ENTRY_LEN
         2 000710   000100 101500                    MRL     fill='000'O
         2 000711   300001 400002                    ADSC9   1,,PR3                   cn=2,n=2
         2 000712   200012 000004                    ADSC9   RC_TYPE+4,,AUTO          cn=0,n=4
         2 000713   200012 036100                    ADLQ    RC_TYPE+4,,AUTO
         2 000714   000003 756000 0                  STQ     X

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:281  
     1491     2005    3                   GROUP$=PINCRC(REC$,X);

   2005  2 000715   000020 736000                    QLS     16
         2 000716   000000 036000 xsym               ADLQ    REC$
         2 000717   000000 756000 xsym               STQ     GROUP$

     1492     2006    3                   PA_GROUP.NO_GROUPS=2;

   2006  2 000720   000000 475400 xsym               LDP5    GROUP$
         2 000721   000100 101400                    MRL     fill='000'O
         2 000722   000001 000004 3                  ADSC9   1                        cn=0,n=4
         2 000723   500000 000002                    ADSC9   0,,PR5                   cn=0,n=2

     1493     2007    3                   PA_GROUP.TYPE=PA_ENTRY.TYPE;

   2007  2 000724   000000 471400 xsym               LDP1    ENTRY$
         2 000725   000000 473400 xsym               LDP3    GROUP$
         2 000726   003100 061500                    CSR     bolr='003'O
         2 000727   100000 060014                    BDSC    0,,PR1                   by=0,bit=6,n=12
         2 000730   300000 400022                    BDSC    0,,PR3                   by=2,bit=0,n=18

     1494     2008    3                   PA_GROUP.PTRS=PA_ENTRY.PTRS; /* GET PTR FROM ENTRY */

   2008  2 000731   000000 471400 xsym               LDP1    ENTRY$
         2 000732   000000 720000 xsym               LXL0    PTR_LEN
         2 000733   000000 473400 xsym               LDP3    GROUP$
         2 000734   040140 100540                    MLR     fill='040'O
         2 000735   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0
         2 000736   300001 000010                    ADSC9   1,,PR3                   cn=0,n=*X0

     1495     2009    3                   PA_ENTRY.C=1; /* SET PA_GROUP PRESENT */

   2009  2 000737   003100 061400                    CSR     bolr='003'O
         2 000740   000015 000044 3                  BDSC    13                       by=0,bit=0,n=36
         2 000741   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

     1496     2010    3                   PA_ENTRY.TYPE=0;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:282  

   2010  2 000742   000000 471400 xsym               LDP1    ENTRY$
         2 000743   003100 061400                    CSR     bolr='003'O
         2 000744   000012 000044 3                  BDSC    10                       by=0,bit=0,n=36
         2 000745   100000 060014                    BDSC    0,,PR1                   by=0,bit=6,n=12

     1497     2011    3                   PA_ENTRY.PTRS=PINCRC(ADDR(X),4-PTR_LEN)->PTR_V;

   2011  2 000746   000000 335000 xsym               LCA     PTR_LEN
         2 000747   000000 720000 xsym               LXL0    PTR_LEN
         2 000750   000000 471400 xsym               LDP1    ENTRY$
         2 000751   040140 100445                    MLR     fill='040'O
         2 000752   000004 000010 0                  ADSC9   POINTER,A                cn=0,n=*X0
         2 000753   100000 400010                    ADSC9   0,,PR1                   cn=2,n=*X0

     1498     2012    3                   GROUP$=PINCRC(GROUP$,2+PTR_LEN);

   2012  2 000754   000000 236000 xsym               LDQ     PTR_LEN
         2 000755   000020 736000                    QLS     16
         2 000756   400000 036007                    ADLQ    -131072,DL
         2 000757   000000 036000 xsym               ADLQ    GROUP$
         2 000760   000000 756000 xsym               STQ     GROUP$

     1499     2013    3                   PA_GROUP.TYPE=RC_TYPE;

   2013  2 000761   000000 471400 xsym               LDP1    GROUP$
         2 000762   000100 101500                    MRL     fill='000'O
         2 000763   200006 000004                    ADSC9   RC_TYPE,,AUTO            cn=0,n=4
         2 000764   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2

     1500     2014    3                   PA_GROUP.PTRS=PINCRC(ADDR(LOC_PTR),4-PTR_LEN)->PTR_V;

   2014  2 000765   000000 335000 xsym               LCA     PTR_LEN
         2 000766   000000 720000 xsym               LXL0    PTR_LEN
         2 000767   000000 471400 xsym               LDP1    GROUP$
         2 000770   040140 100545                    MLR     fill='040'O
         2 000771   200005 000010                    ADSC9   GLO_PTR,A,AUTO           cn=0,n=*X0
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:283  
         2 000772   100001 000010                    ADSC9   1,,PR1                   cn=0,n=*X0

     1501     2015    3                   END;

   2015  2 000773   001070 710000 2                  TRA     s:2034

     1502     2016    2               ELSE
     1503     2017    3               DO; /* DUP KEY AND PA_GROUP ALREADY THERE */

     1504     2018    3                   X=0;

   2018  2 000774   000003 450000 0                  STZ     X

     1505     2019    3                   PINCRC(ADDR(X),4-PTR_LEN)->PTR_V=PA_ENTRY.PTRS;

   2019  2 000775   000000 335000 xsym               LCA     PTR_LEN
         2 000776   000000 720000 xsym               LXL0    PTR_LEN
         2 000777   040045 100540                    MLR     fill='040'O
         2 001000   400000 400010                    ADSC9   0,,PR4                   cn=2,n=*X0
         2 001001   000004 000010 0                  ADSC9   POINTER,A                cn=0,n=*X0

     1506     2020    3                   GROUP$=PINCRC(REC$,X); /* POINT TO OLD PA_GROUP */

   2020  2 001002   000003 236000 0                  LDQ     X
         2 001003   000020 736000                    QLS     16
         2 001004   000000 036000 xsym               ADLQ    REC$
         2 001005   000000 756000 xsym               STQ     GROUP$

     1507     2021    3                   X=X-2-PTR_LEN; /* NEW OFFSET FOR PA_GROUP */

   2021  2 001006   000003 236000 0                  LDQ     X
         2 001007   000000 136000 xsym               SBLQ    PTR_LEN
         2 001010   000002 136007                    SBLQ    2,DL
         2 001011   000003 756000 0                  STQ     X

     1508     2022    3                   PA_ENTRY.PTRS=PINCRC(ADDR(X),4-PTR_LEN)->PTR_V; /* UPDATE */

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:284  
   2022  2 001012   040140 100445                    MLR     fill='040'O
         2 001013   000004 000010 0                  ADSC9   POINTER,A                cn=0,n=*X0
         2 001014   400000 400010                    ADSC9   0,,PR4                   cn=2,n=*X0

     1509     2023    3                   X=PA_GROUP.NO_GROUPS; /* GET OLD NUMBER OF PTRS IN GROUP */

   2023  2 001015   000000 471400 xsym               LDP1    GROUP$
         2 001016   000000 101500                    MRL     fill='000'O
         2 001017   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         2 001020   000003 000004 0                  ADSC9   X                        cn=0,n=4

     1510     2024    3                   Y=2+(2+PTR_LEN)*X; /* Y=THE SIZE OF OLD PTR GROUP */

   2024  2 001021   000000 236000 xsym               LDQ     PTR_LEN
         2 001022   000002 036007                    ADLQ    2,DL
         2 001023   000003 402000 0                  MPY     X
         2 001024   000002 036007                    ADLQ    2,DL
         2 001025   000000 756000 0                  STQ     Y

     1511     2025    3                   PINCRC(GROUP$,-2-PTR_LEN)->CHAR_V = GROUP$->CHAR_V;

   2025  2 001026   000000 335000 xsym               LCA     PTR_LEN
         2 001027   000000 620006                    EAX0    0,QL
         2 001030   000000 721000 0                  LXL1    Y
         2 001031   040145 100540                    MLR     fill='040'O
         2 001032   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         2 001033   177777 400011                    ADSC9   -1,A,PR1                 cn=2,n=*X1

     1512     2026         /* SHIFT OLD PTR GROUP UP BY 2+PTR_LEN BYTES */
     1513     2027    3                   GROUP$ = PINCRC(GROUP$,-2-PTR_LEN); /* POINT TO NEW PA_GROUP */

   2027  2 001034   000002 336007                    LCQ     2,DL
         2 001035   000000 136000 xsym               SBLQ    PTR_LEN
         2 001036   000020 736000                    QLS     16
         2 001037   000000 036000 xsym               ADLQ    GROUP$
         2 001040   000000 756000 xsym               STQ     GROUP$

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:285  
     1514     2028    3                   PA_GROUP.NO_GROUPS = X+1; /* UPDATE NEW NUM OF PTRS */

   2028  2 001041   000003 236000 0                  LDQ     X
         2 001042   000001 036007                    ADLQ    1,DL
         2 001043   200012 756100                    STQ     RC_TYPE+4,,AUTO
         2 001044   000000 471400 xsym               LDP1    GROUP$
         2 001045   000100 101500                    MRL     fill='000'O
         2 001046   200012 000004                    ADSC9   RC_TYPE+4,,AUTO          cn=0,n=4
         2 001047   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

     1515     2029    3                   GROUP$=PINCRC(GROUP$,X*(2+PTR_LEN)); /* POINT TO LAST PTR */

   2029  2 001050   000000 236000 xsym               LDQ     PTR_LEN
         2 001051   000002 036007                    ADLQ    2,DL
         2 001052   000003 402000 0                  MPY     X
         2 001053   000020 736000                    QLS     16
         2 001054   000000 036000 xsym               ADLQ    GROUP$
         2 001055   000000 756000 xsym               STQ     GROUP$

     1516     2030    3                   PA_GROUP.TYPE=RC_TYPE; /* STORE NEW PTR IN PTR GROUP */

   2030  2 001056   000000 471400 xsym               LDP1    GROUP$
         2 001057   000100 101500                    MRL     fill='000'O
         2 001060   200006 000004                    ADSC9   RC_TYPE,,AUTO            cn=0,n=4
         2 001061   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2

     1517     2031    3                   PA_GROUP.PTRS=PINCRC(ADDR(LOC_PTR),4-PTR_LEN)->PTR_V;

   2031  2 001062   000000 335000 xsym               LCA     PTR_LEN
         2 001063   000000 720000 xsym               LXL0    PTR_LEN
         2 001064   000000 471400 xsym               LDP1    GROUP$
         2 001065   040140 100545                    MLR     fill='040'O
         2 001066   200005 000010                    ADSC9   GLO_PTR,A,AUTO           cn=0,n=*X0
         2 001067   100001 000010                    ADSC9   1,,PR1                   cn=0,n=*X0

     1518     2032    3                   END;

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:286  
     1519     2033    2           END;

     1520     2034    1       LEVEL# = LEVEL# + 1;

   2034  2 001070   000000 054000 xsym               AOS     LEVEL#

     1521     2035    1       IF LEVEL#<=NO_OF_LEVELS THEN /* WE ARE IN HIGHER LEVEL */

   2035  2 001071   000000 236000 xsym               LDQ     NO_OF_LEVELS
         2 001072   001075 604000 2                  TMI     s:2037
         2 001073   000000 116000 xsym               CMPQ    LEVEL#
         2 001074   001123 604000 2                  TMI     s:2047

     1522     2036    2       DO; /* RECURSIVE RETURNS, SO RESTORE REC$ */

     1523     2037    2           REC$ = CURR_LEVEL.REC$(LEVEL#);

   2037  2 001075   000000 235000 xsym               LDA     LEVEL#
         2 001076   000002 735000                    ALS     2
         2 001077   000003 236005 xsym               LDQ     CURR_LEVEL+3,AL
         2 001100   000000 756000 xsym               STQ     REC$

     1524     2038    2           REC2$= PINCRC(REC$,8+2*PTR_LEN);

   2038  2 001101   000000 236000 xsym               LDQ     PTR_LEN
         2 001102   000021 736000                    QLS     17
         2 001103   000002 036003                    ADLQ    2,DU
         2 001104   000000 036000 xsym               ADLQ    REC$
         2 001105   000000 756000 xsym               STQ     REC2$

     1525     2039    2           CALL LOAD_PTR; /* LOAD THE OWNER PTR */

   2039  2 001106   001147 701000 2                  TSX1    LOAD_PTR
         2 001107   000000 011000                    NOP     0

     1526     2040    2           IF POINTER~=CURR_LEVEL.DBK(LEVEL#-1) THEN

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:287  
   2040  2 001110   000000 235000 xsym               LDA     LEVEL#
         2 001111   000002 735000                    ALS     2
         2 001112   000004 236000 0                  LDQ     POINTER
         2 001113   001116 604000 2                  TMI     s:2042
         2 001114   777774 116005 xsym               CMPQ    CURR_LEVEL-4,AL
         2 001115   001146 600000 2                  TZE     s:2055

     1527     2041    3           DO; /* OWNER PTR OF THIS PA NEEDS  TO BE UPDATED */

     1528     2042    3               POINTER = CURR_LEVEL.DBK(LEVEL#-1);

   2042  2 001116   777774 235005 xsym               LDA     CURR_LEVEL-4,AL
         2 001117   000004 755000 0                  STA     POINTER

     1529     2043    3               CALL STORE_PTR;

   2043  2 001120   001164 701000 2                  TSX1    STORE_PTR
         2 001121   000000 011000                    NOP     0

     1530     2044    3               END;

     1531     2045    2           END;

   2045  2 001122   001146 710000 2                  TRA     s:2055

     1532     2046    1       ELSE
     1533     2047    1           IF STK.NEXT(1)~=CURR_LEVEL.DBK(LEVEL#-1) THEN

   2047  2 001123   000000 235000 xsym               LDA     LEVEL#
         2 001124   000002 735000                    ALS     2
         2 001125   000004 236000 xsym               LDQ     STK+4
         2 001126   001131 604000 2                  TMI     s:2049
         2 001127   777774 116005 xsym               CMPQ    CURR_LEVEL-4,AL
         2 001130   001146 600000 2                  TZE     s:2055

     1534     2048    2           DO; /* THE PA_OWNER PTR OF THIS PA_MEMBER NEEDS TO BE UPDATED */

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:288  
     1535     2049    2               STK.NEXT(1)=CURR_LEVEL.DBK(LEVEL#-1); /* NEW PA OWNER PTR */

   2049  2 001131   777774 235005 xsym               LDA     CURR_LEVEL-4,AL
         2 001132   000004 755000 xsym               STA     STK+4

     1536     2050    2               KEY.TXT=STK.CURR(1);

   2050  2 001133   000000 100400                    MLR     fill='000'O
         2 001134   000006 000004 xsym               ADSC9   STK+6                    cn=0,n=4
         2 001135   000000 200004 xsym               ADSC9   KEY                      cn=1,n=4

     1537     2051    2               KEY.RC_PTR = STK.RC_PTR(1);

   2051  2 001136   000007 236000 xsym               LDQ     STK+7
         2 001137   000011 772000                    QRL     9
         2 001140   000001 552020 xsym               STBQ    KEY+1,'20'O

     1538     2052    2               CALL M$WRITE(WRITE_TEMP) ALTRET(ALT_WRIT_TEMP);

   2052  2 001141   000000 630400 xsym               EPPR0   WRITE_TEMP
         2 001142   440001 713400                    CLIMB   alt,write
         2 001143   401400 401760                    pmme    nvectors=4
         2 001144   001562 702000 2                  TSX2    ALT_WRIT_TEMP

     1539     2053    2               REC_CNT = REC_CNT + 1;

   2053  2 001145   000000 054000 xsym               AOS     REC_CNT

     1540     2054    2               END;

     1541     2055    1       RETURN;

   2055  2 001146   000000 702200 xent               TSX2  ! X66_ARET

     1542     2056
     1543     2057        %EJECT;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:289  
     1544     2058        /*
     1545     2059              SUBR   LOAD_PTR   AND   STORE_PTR
     1546     2060                     INPUT:  POINTER - UBIN WORD CONTAINING AFTER LOAD PTR
     1547     2061                             REC2$   - PTR TO LOCATION OF PTR
     1548     2062        */
     1549     2063    1   LOAD_PTR: PROC;

   2063  2 001147   200010 741300       LOAD_PTR     STX1  ! RC_TYPE+2,,AUTO

     1550     2064
     1551     2065    2       POINTER=0; /* INIT BEFORE LOADING IN CASE GARBAGE */

   2065  2 001150   000004 450000 0                  STZ     POINTER

     1552     2066    2       PINCRC(ADDR(POINTER),4-PTR_LEN)->PTR_V=PTR_V;

   2066  2 001151   000000 335000 xsym               LCA     PTR_LEN
         2 001152   000000 470400 xsym               LDP0    REC2$
         2 001153   000000 720000 xsym               LXL0    PTR_LEN
         2 001154   040045 100540                    MLR     fill='040'O
         2 001155   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 001156   000005 000010 0                  ADSC9   POINTER+1,A              cn=0,n=*X0

     1553     2067    2       IF POINTER>0 THEN /* IF =0,DONT ADJUST PTR */

   2067  2 001157   000004 236000 0                  LDQ     POINTER
         2 001160   001163 604400 2                  TMOZ    s:2069

     1554     2068    2           POINTER=POINTER+BASE_DBK; /* IF SC LOCAL,ADJUST DBK */

   2068  2 001161   000000 036000 xsym               ADLQ    BASE_DBK
         2 001162   000004 756000 0                  STQ     POINTER

     1555     2069    2       RETURN; /* WITH PTR LOADED IN POINTER */

   2069  2 001163   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:290  
     1556     2070
     1557     2071    2   STORE_PTR: ENTRY;

   2071  2 001164   200010 741300       STORE_PTR    STX1  ! RC_TYPE+2,,AUTO

     1558     2072
     1559     2073    2       POINTER = POINTER - BASE_DBK; /* CONV TO LOCAL IF SC IS LOCAL */

   2073  2 001165   000004 236000 0                  LDQ     POINTER
         2 001166   000000 136000 xsym               SBLQ    BASE_DBK
         2 001167   000004 756000 0                  STQ     POINTER

     1560     2074    2       PTR_V=PINCRC(ADDR(POINTER),4-PTR_LEN)->PTR_V;

   2074  2 001170   000000 335000 xsym               LCA     PTR_LEN
         2 001171   000000 720000 xsym               LXL0    PTR_LEN
         2 001172   000000 470400 xsym               LDP0    REC2$
         2 001173   040140 100445                    MLR     fill='040'O
         2 001174   000005 000010 0                  ADSC9   POINTER+1,A              cn=0,n=*X0
         2 001175   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     1561     2075
     1562     2076    2   END LOAD_PTR;

   2076  2 001176   200010 221300                    LDX1  ! RC_TYPE+2,,AUTO
         2 001177   000001 702211                    TSX2  ! 1,X1

     1563     2077         %EJECT;
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:291  
     1564     2078
     1565     2079    1   PA_CLEANUP: ENTRY ALTRET;

   2079  2 001200   000000 700200 xent  PA_CLEANUP   TSX0  ! X66_AUTO_1
         2 001201   000016 000001                    ZERO    14,1

     1566     2080
     1567     2081    1       NEW_HIGHEST = 0;

   2081  2 001202   000002 450000 0                  STZ     NEW_HIGHEST

     1568     2082    2       DO LEVEL#=NO_OF_LEVELS DOWNTO 1; /* NO NEED TO CHECK HIGHEST LEVEL */

   2082  2 001203   000000 235000 xsym               LDA     NO_OF_LEVELS
         2 001204   000000 755000 xsym               STA     LEVEL#
         2 001205   001414 710000 2                  TRA     s:2122+2

     1569     2083    2           REC$ = CURR_LEVEL.REC$(LEVEL#);

   2083  2 001206   000000 235000 xsym               LDA     LEVEL#
         2 001207   000002 735000                    ALS     2
         2 001210   000003 236005 xsym               LDQ     CURR_LEVEL+3,AL
         2 001211   000000 756000 xsym               STQ     REC$

     1570     2084    2           PA_REC.LAST_IN_LEVEL='1'B; /* SET LAST IN LEVEL BIT */

   2084  2 001212   000000 470400 xsym               LDP0    REC$
         2 001213   003100 060400                    CSL     bolr='003'O
         2 001214   000013 000001 3                  BDSC    11                       by=0,bit=0,n=1
         2 001215   000001 030001                    BDSC    1,,PR0                   by=0,bit=3,n=1

     1571     2085    2           REC2$=PINCRC(REC$,2*4+4*PTR_LEN+2); /* FIRST KEY IN PA */

   2085  2 001216   000000 236000 xsym               LDQ     PTR_LEN
         2 001217   000022 736000                    QLS     18
         2 001220   000017 036000 3                  ADLQ    15
         2 001221   000000 036000 xsym               ADLQ    REC$
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:292  
         2 001222   000000 756000 xsym               STQ     REC2$

     1572     2086
     1573     2087    2           CALL STORE_AN_ENTRY(KEY_V) ALTRET(ALT_WRIT_TEMP);

   2087  2 001223   000000 630400 xsym               EPPR0   REC2$
         2 001224   000020 631400 3                  EPPR1   16
         2 001225   000000 701000 2                  TSX1    s:12
         2 001226   001562 702000 2                  TSX2    ALT_WRIT_TEMP

     1574     2088
     1575     2089    2           IF PA_REC.FIRST_IN_LEVEL AND NEW_HIGHEST=0 THEN

   2089  2 001227   000000 470400 xsym               LDP0    REC$
         2 001230   000000 066500                    CMPB    filb='0'B
         2 001231   000001 020001                    BDSC    1,,PR0                   by=0,bit=2,n=1
         2 001232   000012 000022 3                  BDSC    10                       by=0,bit=0,n=18
         2 001233   001240 600000 2                  TZE     s:2091
         2 001234   000002 235000 0                  LDA     NEW_HIGHEST
         2 001235   001240 601000 2                  TNZ     s:2091

     1576     2090    2               NEW_HIGHEST = LEVEL#; /* THIS SHOULD BE THE NEW HIGHEST PA */

   2090  2 001236   000000 236000 xsym               LDQ     LEVEL#
         2 001237   000002 756000 0                  STQ     NEW_HIGHEST

     1577     2091    2           REC2$=PINCRC(REC$,8); /* LOCATION OF NEXT PTR */

   2091  2 001240   000000 236000 xsym               LDQ     REC$
         2 001241   000002 036003                    ADLQ    2,DU
         2 001242   000000 756000 xsym               STQ     REC2$

     1578     2092    2           CALL LOAD_PTR; /* LOAD IT */

   2092  2 001243   001147 701000 2                  TSX1    LOAD_PTR
         2 001244   000000 011000                    NOP     0

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:293  
     1579     2093    2           X = POINTER;

   2093  2 001245   000004 235000 0                  LDA     POINTER
         2 001246   000003 755000 0                  STA     X

     1580     2094    2           IF X~= CURR_LEVEL.FIRST_PA(LEVEL#) THEN

   2094  2 001247   000000 236000 xsym               LDQ     LEVEL#
         2 001250   000002 736000                    QLS     2
         2 001251   000000 620006                    EAX0    0,QL
         2 001252   000003 236000 0                  LDQ     X
         2 001253   001256 604000 2                  TMI     s:2096
         2 001254   000001 116010 xsym               CMPQ    CURR_LEVEL+1,X0
         2 001255   001373 600000 2                  TZE     s:2120

     1581     2095    3           DO;

     1582     2096    3               POINTER = CURR_LEVEL.FIRST_PA(LEVEL#); /* NEW NEXT PTR */

   2096  2 001256   000001 235010 xsym               LDA     CURR_LEVEL+1,X0
         2 001257   000004 755000 0                  STA     POINTER

     1583     2097    3               CALL STORE_PTR; /* UPDATE TO NEW PTR */

   2097  2 001260   001164 701000 2                  TSX1    STORE_PTR
         2 001261   000000 011000                    NOP     0

     1584     2098    3               CALL FIND_DIRECT(CURR_LEVEL.FIRST_PA(LEVEL#),%MUST_WRITE);

   2098  2 001262   000023 236000 3                  LDQ     19
         2 001263   200013 756100                    STQ     RC_TYPE+5,,AUTO
         2 001264   000000 236000 xsym               LDQ     LEVEL#
         2 001265   000024 736000                    QLS     20
         2 001266   000024 036000 3                  ADLQ    20
         2 001267   200012 756100                    STQ     RC_TYPE+4,,AUTO
         2 001270   200012 630500                    EPPR0   RC_TYPE+4,,AUTO
         2 001271   000000 631400 3                  EPPR1   0
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:294  
         2 001272   000000 701000 xent               TSX1    FIND_DIRECT
         2 001273   000000 011000                    NOP     0

     1585     2099    3               REC2$=PINCRC(REC$,8+PTR_LEN); /* LOCATION OF PRIOR PTR */

   2099  2 001274   000000 236000 xsym               LDQ     PTR_LEN
         2 001275   000020 736000                    QLS     16
         2 001276   000002 036003                    ADLQ    2,DU
         2 001277   000000 036000 xsym               ADLQ    REC$
         2 001300   000000 756000 xsym               STQ     REC2$

     1586     2100    3               POINTER=CURR_LEVEL.DBK(LEVEL#); /* PRIOR OF FIRST PA */

   2100  2 001301   000000 235000 xsym               LDA     LEVEL#
         2 001302   000002 735000                    ALS     2
         2 001303   000000 235005 xsym               LDA     CURR_LEVEL,AL
         2 001304   000004 755000 0                  STA     POINTER

     1587     2101    3               CALL STORE_PTR;

   2101  2 001305   001164 701000 2                  TSX1    STORE_PTR
         2 001306   000000 011000                    NOP     0

     1588     2102    3               IF X=CURR_OWNER THEN /* IT IS A NEW CREATED PA */

   2102  2 001307   000003 236000 0                  LDQ     X
         2 001310   001317 604000 2                  TMI     s:2104
         2 001311   000000 116000 xsym               CMPQ    CURR_OWNER
         2 001312   001317 601000 2                  TNZ     s:2104

     1589     2103    3                   X=CURR_LEVEL.FIRST_PA(LEVEL#); /* FORCE A END OF SET */

   2103  2 001313   000000 235000 xsym               LDA     LEVEL#
         2 001314   000002 735000                    ALS     2
         2 001315   000001 235005 xsym               LDA     CURR_LEVEL+1,AL
         2 001316   000003 755000 0                  STA     X

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:295  
     1590     2104    4               DO WHILE(X~=CURR_LEVEL.FIRST_PA(LEVEL#));

   2104  2 001317   000000 235000 xsym               LDA     LEVEL#
         2 001320   000002 735000                    ALS     2
         2 001321   000003 236000 0                  LDQ     X
         2 001322   001325 604000 2                  TMI     s:2107
         2 001323   000001 116005 xsym               CMPQ    CURR_LEVEL+1,AL
         2 001324   001373 600000 2                  TZE     s:2120

     1591     2105
     1592     2106         /* NOW WE WILL ERASE ALL PA FROM THEN ON */
     1593     2107    4                   CALL FIND_DIRECT(X,%MUST_WRITE);

   2107  2 001325   000025 630400 3                  EPPR0   21
         2 001326   000000 631400 3                  EPPR1   0
         2 001327   000000 701000 xent               TSX1    FIND_DIRECT
         2 001330   000000 011000                    NOP     0

     1594     2108    4                   REC2$ = PINCRC(REC$,8); /* GET THE NEXT PTR */

   2108  2 001331   000000 236000 xsym               LDQ     REC$
         2 001332   000002 036003                    ADLQ    2,DU
         2 001333   000000 756000 xsym               STQ     REC2$

     1595     2109    4                   CALL LOAD_PTR;

   2109  2 001334   001147 701000 2                  TSX1    LOAD_PTR
         2 001335   000000 011000                    NOP     0

     1596     2110    4                   X = POINTER; /* X=NEXT POINTER OF THIS ERASED PA */

   2110  2 001336   000004 235000 0                  LDA     POINTER
         2 001337   000003 755000 0                  STA     X

     1597     2111    4                   CALL ERASE_PAREC; /* THEN ERASE IT */

   2111  2 001340   000012 631400 3                  EPPR1   10
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:296  
         2 001341   000000 701000 xent               TSX1    ERASE_PAREC
         2 001342   000000 011000                    NOP     0

     1598     2112         /* ONCE A RECORD IS ERASED, REC$ CAN NO LONGER TRUSTED */
     1599     2113    5                   DO Z=0 TO LEVEL#-1;

   2113  2 001343   000001 450000 0                  STZ     Z
         2 001344   001362 710000 2                  TRA     s:2117+1

     1600     2114    5                       POINTER=CURR_LEVEL.DBK(Z); /* GET CURR IN LEVEL */

   2114  2 001345   000001 235000 0                  LDA     Z
         2 001346   000002 735000                    ALS     2
         2 001347   000000 235005 xsym               LDA     CURR_LEVEL,AL
         2 001350   000004 755000 0                  STA     POINTER

     1601     2115    5                       CALL FIND_DIRECT(POINTER,%DONT_LOCK);

   2115  2 001351   000027 630400 3                  EPPR0   23
         2 001352   000000 631400 3                  EPPR1   0
         2 001353   000000 701000 xent               TSX1    FIND_DIRECT
         2 001354   000000 011000                    NOP     0

     1602     2116    5                       CURR_LEVEL.REC$(Z)=REC$; /* SETUP NEW REC$ */

   2116  2 001355   000001 235000 0                  LDA     Z
         2 001356   000002 735000                    ALS     2
         2 001357   000000 236000 xsym               LDQ     REC$
         2 001360   000003 756005 xsym               STQ     CURR_LEVEL+3,AL

     1603     2117    5                       END;

   2117  2 001361   000001 054000 0                  AOS     Z
         2 001362   000001 236000 0                  LDQ     Z
         2 001363   000000 116000 xsym               CMPQ    LEVEL#
         2 001364   001345 604000 2                  TMI     s:2114

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:297  
     1604     2118    4                   END;

   2118  2 001365   000000 235000 xsym               LDA     LEVEL#
         2 001366   000002 735000                    ALS     2
         2 001367   000003 236000 0                  LDQ     X
         2 001370   001325 604000 2                  TMI     s:2107
         2 001371   000001 116005 xsym               CMPQ    CURR_LEVEL+1,AL
         2 001372   001325 601000 2                  TNZ     s:2107

     1605     2119    3               END;

     1606     2120    2           BUF_PTR=CURR_LEVEL.BUF_PTR(LEVEL#);

   2120  2 001373   000000 235000 xsym               LDA     LEVEL#
         2 001374   000002 735000                    ALS     2
         2 001375   000002 236005 xsym               LDQ     CURR_LEVEL+2,AL
         2 001376   000011 772000                    QRL     9
         2 001377   000377 376007                    ANQ     255,DL
         2 001400   000000 756000 xsym               STQ     BUF_PTR

     1607     2121    2           POOL.LOCKS(BUF_PTR)=POOL.LOCKS(BUF_PTR)-1; /* UNLOCK CURR */

   2121  2 001401   000000 720000 xsym               LXL0    BUF_PTR
         2 001402   000000 236006 xsym               LDQ     POOL,QL
         2 001403   000032 772000                    QRL     26
         2 001404   000777 376007                    ANQ     511,DL
         2 001405   000001 136007                    SBLQ    1,DL
         2 001406   000032 736000                    QLS     26
         2 001407   000000 676010 xsym               ERQ     POOL,X0
         2 001410   377400 376003                    ANQ     130816,DU
         2 001411   000000 656010 xsym               ERSQ    POOL,X0

     1608     2122    2           END; /* CHKING EACH LEVEL,UNLOCKING, ERASING EXCESSIVE PAS */

   2122  2 001412   000001 336007                    LCQ     1,DL
         2 001413   000000 056000 xsym               ASQ     LEVEL#
         2 001414   000000 235000 xsym               LDA     LEVEL#
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:298  
         2 001415   001206 605400 2                  TPNZ    s:2083

     1609     2123    1       BUF_PTR=CURR_LEVEL.BUF_PTR(0);

   2123  2 001416   000002 236000 xsym               LDQ     CURR_LEVEL+2
         2 001417   000011 772000                    QRL     9
         2 001420   000377 376007                    ANQ     255,DL
         2 001421   000000 756000 xsym               STQ     BUF_PTR

     1610     2124    1       POOL.LOCKS(BUF_PTR)=POOL.LOCKS(BUF_PTR)-1; /* UNLOCK CURR OF LEVEL */

   2124  2 001422   000000 720000 xsym               LXL0    BUF_PTR
         2 001423   000000 236006 xsym               LDQ     POOL,QL
         2 001424   000032 772000                    QRL     26
         2 001425   000777 376007                    ANQ     511,DL
         2 001426   000001 136007                    SBLQ    1,DL
         2 001427   000032 736000                    QLS     26
         2 001430   000000 676010 xsym               ERQ     POOL,X0
         2 001431   377400 376003                    ANQ     130816,DU
         2 001432   000000 656010 xsym               ERSQ    POOL,X0

     1611     2125    1       REC$=CURR_LEVEL.REC$(0); /* GET HIGHEST LEVEL OF PA_EC */

   2125  2 001433   000003 236000 xsym               LDQ     CURR_LEVEL+3
         2 001434   000000 756000 xsym               STQ     REC$

     1612     2126    1       PA_REC.LAST_IN_LEVEL='1'B; /* SET LAST IN LEVEL BIT */

   2126  2 001435   000000 470400 xsym               LDP0    REC$
         2 001436   003100 060400                    CSL     bolr='003'O
         2 001437   000013 000001 3                  BDSC    11                       by=0,bit=0,n=1
         2 001440   000001 030001                    BDSC    1,,PR0                   by=0,bit=3,n=1

     1613     2127
     1614     2128    1       IF NEW_HIGHEST > 0 THEN /* WE CAN REDUCE NO_OF_LEVELS */

   2128  2 001441   000002 235000 0                  LDA     NEW_HIGHEST
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:299  
         2 001442   001530 600000 2                  TZE     s:2146

     1615     2129    2       DO;

     1616     2130    2           CALL FIND_DIRECT(CURR_LEVEL.DBK(NEW_HIGHEST),%MUST_WRITE);

   2130  2 001443   000023 236000 3                  LDQ     19
         2 001444   200013 756100                    STQ     RC_TYPE+5,,AUTO
         2 001445   000002 236000 0                  LDQ     NEW_HIGHEST
         2 001446   000024 736000                    QLS     20
         2 001447   000031 036000 3                  ADLQ    25
         2 001450   200012 756100                    STQ     RC_TYPE+4,,AUTO
         2 001451   200012 630500                    EPPR0   RC_TYPE+4,,AUTO
         2 001452   000000 631400 3                  EPPR1   0
         2 001453   000000 701000 xent               TSX1    FIND_DIRECT
         2 001454   000000 011000                    NOP     0

     1617     2131    2           REC2$=PINCRC(REC$,8);

   2131  2 001455   000000 236000 xsym               LDQ     REC$
         2 001456   000002 036003                    ADLQ    2,DU
         2 001457   000000 756000 xsym               STQ     REC2$

     1618     2132    2           POINTER=CURR_OWNER; /* NEXT PTR OF HIGHEST PA IS OWNER */

   2132  2 001460   000000 235000 xsym               LDA     CURR_OWNER
         2 001461   000004 755000 0                  STA     POINTER

     1619     2133    2           CALL STORE_PTR;

   2133  2 001462   001164 701000 2                  TSX1    STORE_PTR
         2 001463   000000 011000                    NOP     0

     1620     2134    2           REC2$=PINCRC(REC2$,PTR_LEN); /* PRIOR IS ALSO OWNER */

   2134  2 001464   000000 236000 xsym               LDQ     PTR_LEN
         2 001465   000020 736000                    QLS     16
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:300  
         2 001466   000000 036000 xsym               ADLQ    REC2$
         2 001467   000000 756000 xsym               STQ     REC2$

     1621     2135    2           POINTER=CURR_OWNER;

   2135  2 001470   000000 235000 xsym               LDA     CURR_OWNER
         2 001471   000004 755000 0                  STA     POINTER

     1622     2136    2           CALL STORE_PTR;

   2136  2 001472   001164 701000 2                  TSX1    STORE_PTR
         2 001473   000000 011000                    NOP     0

     1623     2137    2           REC2$=PINCRC(REC2$,PTR_LEN);

   2137  2 001474   000000 236000 xsym               LDQ     PTR_LEN
         2 001475   000020 736000                    QLS     16
         2 001476   000000 036000 xsym               ADLQ    REC2$
         2 001477   000000 756000 xsym               STQ     REC2$

     1624     2138    2           POINTER=CURR_OWNER;

   2138  2 001500   000000 235000 xsym               LDA     CURR_OWNER
         2 001501   000004 755000 0                  STA     POINTER

     1625     2139    2           CALL STORE_PTR;

   2139  2 001502   001164 701000 2                  TSX1    STORE_PTR
         2 001503   000000 011000                    NOP     0

     1626     2140    3           DO Z=0 TO NEW_HIGHEST-1; /* ERASE ALL THE HIGHER PA */

   2140  2 001504   000001 450000 0                  STZ     Z
         2 001505   001524 710000 2                  TRA     s:2143+1

     1627     2141    3               CALL FIND_DIRECT(CURR_LEVEL.DBK(Z),%MUST_WRITE); /* GET THEM */

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:301  
   2141  2 001506   000023 236000 3                  LDQ     19
         2 001507   200013 756100                    STQ     RC_TYPE+5,,AUTO
         2 001510   000001 236000 0                  LDQ     Z
         2 001511   000024 736000                    QLS     20
         2 001512   000031 036000 3                  ADLQ    25
         2 001513   200012 756100                    STQ     RC_TYPE+4,,AUTO
         2 001514   200012 630500                    EPPR0   RC_TYPE+4,,AUTO
         2 001515   000000 631400 3                  EPPR1   0
         2 001516   000000 701000 xent               TSX1    FIND_DIRECT
         2 001517   000000 011000                    NOP     0

     1628     2142    3               CALL ERASE_PAREC; /* THEN ERASE IT */

   2142  2 001520   000012 631400 3                  EPPR1   10
         2 001521   000000 701000 xent               TSX1    ERASE_PAREC
         2 001522   000000 011000                    NOP     0

     1629     2143    3               END;

   2143  2 001523   000001 054000 0                  AOS     Z
         2 001524   000001 236000 0                  LDQ     Z
         2 001525   001506 604000 2                  TMI     s:2141
         2 001526   000002 116000 0                  CMPQ    NEW_HIGHEST
         2 001527   001506 602000 2                  TNC     s:2141

     1630     2144    2           END; /* ALL EXCESSIVE HIGHER LEVEL PA ARE ERASED */

     1631     2145         /* NOW, CHECK IF OWNER'S PTRS NEEDED TO BE UPDATED */
     1632     2146    1       IF STK.NEXT(0)~=CURR_LEVEL.DBK(NEW_HIGHEST) THEN

   2146  2 001530   000002 235000 0                  LDA     NEW_HIGHEST
         2 001531   000002 735000                    ALS     2
         2 001532   000000 236000 xsym               LDQ     STK
         2 001533   001536 604000 2                  TMI     s:2148
         2 001534   000000 116005 xsym               CMPQ    CURR_LEVEL,AL
         2 001535   001561 600000 2                  TZE     s:2155

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:302  
     1633     2147    2       DO; /* THIS HAPPENS WHEN HIGHEST PA ERASED OR CREATED */

     1634     2148    2           STK.NEXT(1)=CURR_LEVEL.DBK(NEW_HIGHEST);

   2148  2 001536   000000 235005 xsym               LDA     CURR_LEVEL,AL
         2 001537   000004 755000 xsym               STA     STK+4

     1635     2149    2           STK.PRIOR(1)=STK.NEXT(1);

   2149  2 001540   000005 755000 xsym               STA     STK+5

     1636     2150    2           KEY.RC_PTR=SC_TBL.RC_PTR(SC_PTR);

   2150  2 001541   000000 236000 xsym               LDQ     SC_PTR
         2 001542   000405 402007                    MPY     261,DL
         2 001543   000000 116003                    CMPQ    0,DU
         2 001544   001546 605000 2                  TPL     s:2150+5
         2 001545   000044 036003                    ADLQ    36,DU
         2 001546   003000 060406                    CSL     bolr='003'O
         2 001547   000005 650011 xsym               BDSC    SC_TBL+5,Q               by=3,bit=5,n=9
         2 001550   000001 200011 xsym               BDSC    KEY+1                    by=1,bit=0,n=9

     1637     2151    2           KEY.TXT=CURR_OWNER;

   2151  2 001551   000000 100400                    MLR     fill='000'O
         2 001552   000000 000004 xsym               ADSC9   CURR_OWNER               cn=0,n=4
         2 001553   000000 200004 xsym               ADSC9   KEY                      cn=1,n=4

     1638     2152    2           CALL M$WRITE(WRITE_TEMP) ALTRET(ALT_WRIT_TEMP);

   2152  2 001554   000000 630400 xsym               EPPR0   WRITE_TEMP
         2 001555   440001 713400                    CLIMB   alt,write
         2 001556   401400 401760                    pmme    nvectors=4
         2 001557   001562 702000 2                  TSX2    ALT_WRIT_TEMP

     1639     2153    2           REC_CNT = REC_CNT + 1; /* OWNER WILL BE UPDATED LATER */

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:303  
   2153  2 001560   000000 054000 xsym               AOS     REC_CNT

     1640     2154    2           END;

     1641     2155    1       RETURN;

   2155  2 001561   000000 702200 xent               TSX2  ! X66_ARET

     1642     2156
     1643     2157    1   ALT_WRIT_TEMP:
     1644     2158    1       ALTRETURN;

   2158  2 001562   000000 702200 xent  ALT_WRIT_TE* TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   3     000   000002 000000   000000 000002   000001 006000   000000 006000    ................
   3     004   000003 000000   000000 021765   000000 006000   000000 006000    ................
   3     010   000007 200000   000005 006000   000000 000000   400000 000000    ................
   3     014   777777 377777   000000 000001   000000 006014   000002 400000    ................
   3     020   000001 000000   000004 006000   000001 006000   000015 006000    ................
   3     024   000001 006000   000003 006000   000015 006000   000004 006000    ................
   3     030   000012 006000   000000 006000                                    ........
     1645     2159    1   END STORE_AN_ENTRY;
     1646     2160        %EOD;

PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:304  
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure STORE_AN_ENTRY.

   Procedure STORE_AN_ENTRY requires 883 words for executable code.
   Procedure STORE_AN_ENTRY requires 14 words of local(AUTO) storage.
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:305  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:306  
          MINI XREF LISTING

ALT_WRIT_TEMP
      2158**LABEL    1946--CALLALT  2052--CALLALT  2087--CALLALT  2152--CALLALT
BASE_DBK
       409**DCL      1898>>ASSIGN   2068>>ASSIGN   2073>>ASSIGN
BIN_CHAR
        15**DCL-ENT  1854--CALL
BREAK_CLEANUP
        53**DCL      1847>>UNWIND   1856>>UNWIND
BREAK_FLAG
        59**DCL      1846>>IF
BUF_PTR
        30**DCL      1954<<ASSIGN   1955>>ASSIGN   1955>>ASSIGN   2120<<ASSIGN   2121>>ASSIGN   2121>>ASSIGN
      2123<<ASSIGN   2124>>ASSIGN   2124>>ASSIGN
CHAR_V
        55**DCL      2025<<ASSIGN   2025>>ASSIGN
COMMAND_TEXT
        29**DCL      1855<>CALL
CREATE_PAREC
        17**DCL-ENT  1866--CALL     1969--CALL
CURR_LEVEL
        45**DCL      1863<<ASSIGN   1863>>ASSIGN
CURR_LEVEL.BUF_PTR
        50**DCL      1954>>ASSIGN   1967>>ASSIGN   2120>>ASSIGN   2123>>ASSIGN
CURR_LEVEL.DBK
        46**DCL      1871>>ASSIGN   1882>>ASSIGN   1896>>ASSIGN   1957<<ASSIGN   1966>>ASSIGN   1972>>ASSIGN
      2040>>IF       2042>>ASSIGN   2047>>IF       2049>>ASSIGN   2100>>ASSIGN   2114>>ASSIGN   2130<>CALL
      2141<>CALL     2146>>IF       2148>>ASSIGN
CURR_LEVEL.DUPIND
        49**DCL      1870<<ASSIGN   1902>>IF       1909<<ASSIGN   1941<<ASSIGN
CURR_LEVEL.ENT_NO
        48**DCL      1869<<ASSIGN   1899>>IF       1910<<ASSIGN   1911>>ASSIGN   1912>>ASSIGN   1925>>ASSIGN
      1992<<ASSIGN   1992>>ASSIGN   1993>>ASSIGN   2004>>ASSIGN
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:307  
CURR_LEVEL.FIRST_PA
        47**DCL      1871<<ASSIGN   1951>>IF       2094>>IF       2096>>ASSIGN   2098<>CALL     2103>>ASSIGN
      2104>>DOWHILE
CURR_LEVEL.REC$
        52**DCL      1887>>ASSIGN   1958<<ASSIGN   2037>>ASSIGN   2083>>ASSIGN   2116<<ASSIGN   2125>>ASSIGN
CURR_OWNER
        23**DCL      1854<>CALL     1872>>ASSIGN   1875>>ASSIGN   1879>>ASSIGN   1881>>IF       1951>>IF
      1978>>ASSIGN   2102>>IF       2132>>ASSIGN   2135>>ASSIGN   2138>>ASSIGN   2151>>ASSIGN
DUMMY_V
        65**DCL      1918<<ASSIGN
ENTRY$
       624**DCL       615--IMP-PTR  1912<<ASSIGN   1913>>ASSIGN   1914>>ASSIGN   1915>>ASSIGN   1916>>ASSIGN
      1925<<ASSIGN   1926>>ASSIGN   1929>>IF       1993<<ASSIGN   1995>>ASSIGN   1996>>ASSIGN   1997>>ASSIGN
      1998>>ASSIGN   2002>>IF       2007>>ASSIGN   2008>>ASSIGN   2009>>ASSIGN   2010>>ASSIGN   2011>>ASSIGN
      2019>>ASSIGN   2022>>ASSIGN
ENTRY_LEN
        31**DCL      1911>>ASSIGN   1935>>ASSIGN   2004>>ASSIGN
ERASE_PAREC
        20**DCL-ENT  2111--CALL     2142--CALL
ERROR_MSG
        14**DCL-ENT  1855--CALL
FIND_DIRECT
        16**DCL-ENT  1956--CALL     2098--CALL     2107--CALL     2115--CALL     2130--CALL     2141--CALL
FIRST_TIME_CALLED
       408**DCL      1965<<ASSIGN
GLO_PTR
        71**DCL      1891<<ASSIGN   1896<<ASSIGN   1898>>ASSIGN
GROUP$
       625**DCL       620--IMP-PTR  2005<<ASSIGN   2006>>ASSIGN   2007>>ASSIGN   2008>>ASSIGN   2012<<ASSIGN
      2012>>ASSIGN   2013>>ASSIGN   2014>>ASSIGN   2020<<ASSIGN   2023>>ASSIGN   2025>>ASSIGN   2025>>ASSIGN
      2027<<ASSIGN   2027>>ASSIGN   2028>>ASSIGN   2029<<ASSIGN   2029>>ASSIGN   2030>>ASSIGN   2031>>ASSIGN
KEY.RC_PTR
        28**DCL      2051<<ASSIGN   2150<<ASSIGN
KEY.TXT
        27**DCL      2050<<ASSIGN   2151<<ASSIGN
KEY_LEN
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:308  
       627**DCL        21--IMP-SIZ    64--IMP-SIZ    66--IMP-SIZ  1918>>ASSIGN   1920>>ASSIGN   1920>>ASSIGN
      1927>>IF       1927>>IF       1939>>IF       1939>>IF       1946>>CALL     1990>>IF       1990>>IF
      1999>>ASSIGN   1999>>ASSIGN   2087>>CALL
KEY_TBL.EIS
       399**DCL       400--REDEF
KEY_V
        64**DCL      1920<<ASSIGN   1927>>IF       1939>>IF       1946<>CALL     1990>>IF       1999<<ASSIGN
      2087<>CALL
LEVEL#
        22**DCL      1849>>IF       1862<<DOINDEX  1863>>ASSIGN   1863>>ASSIGN   1885<<ASSIGN   1885>>ASSIGN
      1887>>ASSIGN   1888>>IF       1896>>ASSIGN   1899>>IF       1902>>IF       1909>>ASSIGN   1910>>ASSIGN
      1911>>ASSIGN   1912>>ASSIGN   1925>>ASSIGN   1941>>ASSIGN   1951>>IF       1954>>ASSIGN   1957>>ASSIGN
      1958>>ASSIGN   1959>>IF       1964>>IF       1966>>ASSIGN   1967>>ASSIGN   1972>>ASSIGN   1992>>ASSIGN
      1992>>ASSIGN   1993>>ASSIGN   2004>>ASSIGN   2034<<ASSIGN   2034>>ASSIGN   2035>>IF       2037>>ASSIGN
      2040>>IF       2042>>ASSIGN   2047>>IF       2049>>ASSIGN   2082<<DOINDEX  2083>>ASSIGN   2090>>ASSIGN
      2094>>IF       2096>>ASSIGN   2098>>CALL     2100>>ASSIGN   2103>>ASSIGN   2104>>DOWHILE  2113>>DOINDEX
      2120>>ASSIGN
LOAD_PTR
      2063**PROC     1950--CALL     2039--CALL     2092--CALL     2109--CALL
LOC_PTR
        70**DCL      1898<<ASSIGN   1915--ASSIGN   1997--ASSIGN   2014--ASSIGN   2031--ASSIGN
M$WRITE
        89**DCL-ENT  2052--CALL     2152--CALL
NEW_HIGHEST
        57**DCL      2081<<ASSIGN   2089>>IF       2090<<ASSIGN   2128>>IF       2130>>CALL     2140>>DOINDEX
      2146>>IF       2148>>ASSIGN
NO_OF_LEVELS
        32**DCL      1851<<ASSIGN   1851>>ASSIGN   1852>>IF       1862>>DOINDEX  1888>>IF       1959>>IF
      1964>>IF       2035>>IF       2082>>DOINDEX
PA_ENTRY.C
       616**DCL      1913<<ASSIGN   1929>>IF       1995<<ASSIGN   2002>>IF       2009<<ASSIGN
PA_ENTRY.PTRS
       619**DCL      1915<<ASSIGN   1997<<ASSIGN   2008>>ASSIGN   2011<<ASSIGN   2019>>ASSIGN   2022<<ASSIGN
PA_ENTRY.TYPE
       618**DCL      1914<<ASSIGN   1996<<ASSIGN   2007>>ASSIGN   2010<<ASSIGN
PA_GROUP.NO_GROUPS
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:309  
       621**DCL      2006<<ASSIGN   2023>>ASSIGN   2028<<ASSIGN
PA_GROUP.PTRS
       623**DCL      2008<<ASSIGN   2014<<ASSIGN   2031<<ASSIGN
PA_GROUP.TYPE
       622**DCL      2007<<ASSIGN   2013<<ASSIGN   2030<<ASSIGN
PA_KEY
        21**DCL        12--PROC     1917--IF       1920>>ASSIGN   1927>>IF       1939>>IF       1990>>IF
      1999>>ASSIGN
PA_REC.AVAIL
       614**DCL      1911<<ASSIGN   1937>>IF       1989<<ASSIGN   1989>>ASSIGN   2004>>ASSIGN
PA_REC.ENTRIES
       613**DCL      1907<<ASSIGN   1994<<ASSIGN   1994>>ASSIGN
PA_REC.FIRST_IN_LEVEL
       609**DCL      1868<<ASSIGN   2089>>IF
PA_REC.HIGHEST_KEY
       608**DCL      1906<<ASSIGN   1942<<ASSIGN
PA_REC.LAST_IN_LEVEL
       610**DCL      1908<<ASSIGN   2084<<ASSIGN   2126<<ASSIGN
PA_REC.LOWEST_KEY
       611**DCL      1903<<ASSIGN   1905<<ASSIGN
PA_REC.SIZE
       606**DCL      1911>>ASSIGN
POINTER
        60**DCL      1872<<ASSIGN   1875<<ASSIGN   1879<<ASSIGN   1951>>IF       1951>>IF       1956<>CALL
      1957>>ASSIGN   1960<>CALL     1972<<ASSIGN   1978<<ASSIGN   1981<<ASSIGN   2040>>IF       2042<<ASSIGN
      2065<<ASSIGN   2066--ASSIGN   2067>>IF       2068<<ASSIGN   2068>>ASSIGN   2073<<ASSIGN   2073>>ASSIGN
      2074--ASSIGN   2093>>ASSIGN   2096<<ASSIGN   2100<<ASSIGN   2110>>ASSIGN   2114<<ASSIGN   2115<>CALL
      2132<<ASSIGN   2135<<ASSIGN   2138<<ASSIGN
POOL.LOCKS
        37**DCL      1955<<ASSIGN   1955>>ASSIGN   1971<<ASSIGN   1971>>ASSIGN   2121<<ASSIGN   2121>>ASSIGN
      2124<<ASSIGN   2124>>ASSIGN
PTR_LEN
       626**DCL        63--IMP-SIZ   619--IMP-SIZ   623--IMP-SIZ  1876>>ASSIGN   1878>>ASSIGN   1910>>ASSIGN
      1915>>ASSIGN   1915>>ASSIGN   1915>>ASSIGN   1916>>ASSIGN   1926>>ASSIGN   1930>>ASSIGN   1932>>ASSIGN
      1944>>ASSIGN   1982>>ASSIGN   1997>>ASSIGN   1997>>ASSIGN   1997>>ASSIGN   1998>>ASSIGN   2008>>ASSIGN
      2008>>ASSIGN   2011>>ASSIGN   2011>>ASSIGN   2011>>ASSIGN   2012>>ASSIGN   2014>>ASSIGN   2014>>ASSIGN
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:310  
      2014>>ASSIGN   2019>>ASSIGN   2019>>ASSIGN   2019>>ASSIGN   2021>>ASSIGN   2022>>ASSIGN   2022>>ASSIGN
      2022>>ASSIGN   2024>>ASSIGN   2025>>ASSIGN   2027>>ASSIGN   2029>>ASSIGN   2031>>ASSIGN   2031>>ASSIGN
      2031>>ASSIGN   2038>>ASSIGN   2066>>ASSIGN   2066>>ASSIGN   2066>>ASSIGN   2074>>ASSIGN   2074>>ASSIGN
      2074>>ASSIGN   2085>>ASSIGN   2099>>ASSIGN   2134>>ASSIGN   2137>>ASSIGN
PTR_V
        63**DCL      1915>>ASSIGN   1997>>ASSIGN   2011>>ASSIGN   2014>>ASSIGN   2019<<ASSIGN   2022>>ASSIGN
      2031>>ASSIGN   2066<<ASSIGN   2066>>ASSIGN   2074<<ASSIGN   2074>>ASSIGN
PUSH_PAENTRY
        18**DCL-ENT  1960--CALL
RC_TBL.NXPNT_EIS
       382**DCL       383--REDEF
RC_TBL.TYPE
       387**DCL      1890>>ASSIGN
RC_TYPE
        72**DCL      1890<<ASSIGN   1895<<ASSIGN   1914>>ASSIGN   1996>>ASSIGN   2013>>ASSIGN   2030>>ASSIGN
REC$
        62**DCL       603--IMP-PTR  1868>>ASSIGN   1873>>ASSIGN   1887<<ASSIGN   1903>>ASSIGN   1905>>ASSIGN
      1906>>ASSIGN   1907>>ASSIGN   1908>>ASSIGN   1911>>ASSIGN   1911>>ASSIGN   1912>>ASSIGN   1925>>ASSIGN
      1937>>IF       1942>>ASSIGN   1944>>ASSIGN   1949>>ASSIGN   1958>>ASSIGN   1979>>ASSIGN   1989>>ASSIGN
      1989>>ASSIGN   1993>>ASSIGN   1994>>ASSIGN   1994>>ASSIGN   2004>>ASSIGN   2005>>ASSIGN   2020>>ASSIGN
      2037<<ASSIGN   2038>>ASSIGN   2083<<ASSIGN   2084>>ASSIGN   2085>>ASSIGN   2089>>IF       2091>>ASSIGN
      2099>>ASSIGN   2108>>ASSIGN   2116>>ASSIGN   2125<<ASSIGN   2126>>ASSIGN   2131>>ASSIGN
REC2$
        61**DCL        63--IMP-PTR    64--IMP-PTR    65--IMP-PTR  1873<<ASSIGN   1876<<ASSIGN   1876>>ASSIGN
      1878<<ASSIGN   1878>>ASSIGN   1916<<ASSIGN   1918>>ASSIGN   1920>>ASSIGN   1926<<ASSIGN   1927>>IF
      1939>>IF       1944<<ASSIGN   1946>>CALL     1949<<ASSIGN   1979<<ASSIGN   1982<<ASSIGN   1982>>ASSIGN
      1990>>IF       1998<<ASSIGN   1999>>ASSIGN   2038<<ASSIGN   2066>>ASSIGN   2074>>ASSIGN   2085<<ASSIGN
      2087>>CALL     2091<<ASSIGN   2099<<ASSIGN   2108<<ASSIGN   2131<<ASSIGN   2134<<ASSIGN   2134>>ASSIGN
      2137<<ASSIGN   2137>>ASSIGN
REC_CNT
        24**DCL      2053<<ASSIGN   2053>>ASSIGN   2153<<ASSIGN   2153>>ASSIGN
SC_PTR
       363**DCL      1855>>CALL     1895>>ASSIGN   1937>>IF       2150>>ASSIGN
SC_TBL.FULL_PERCENT
       371**DCL      1937>>IF
SC_TBL.KEY_PTR
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:311  
       376**DCL       377--REDEF
SC_TBL.NAME
       365**DCL      1855<>CALL
SC_TBL.PA_TYPE
       369**DCL      1895>>ASSIGN
SC_TBL.RC_PTR
       375**DCL      2150>>ASSIGN
STK.CURR
        42**DCL      1881>>IF       1891>>ASSIGN   2050>>ASSIGN
STK.NEXT
        40**DCL      1882<<ASSIGN   2047>>IF       2049<<ASSIGN   2146>>IF       2148<<ASSIGN   2149>>ASSIGN
STK.PRIOR
        41**DCL      2149<<ASSIGN
STK.RC_PTR
        43**DCL      1890>>ASSIGN   2051>>ASSIGN
STORE_AN_ENTRY
        12**PROC     1946--CALL     2087--CALL
STORE_FIRST_ENTRY
      1902**LABEL    1986--GOTO
STORE_PTR IN PROCEDURE LOAD_PTR
      2071**ENTRY    1874--CALL     1877--CALL     1880--CALL     1974--CALL     1980--CALL     1983--CALL
      2043--CALL     2097--CALL     2101--CALL     2133--CALL     2136--CALL     2139--CALL
WRITE_TEMP
       177**DCL      2052<>CALL     2152<>CALL
WRITE_TEMP.STATION_
       179**DCL       179--REDEF
WRITE_TEMP.V.DVBYTE.VFC#
       186**DCL       186--REDEF
X
        58**DCL      1930<<ASSIGN   1932<<ASSIGN   1935<<ASSIGN   1937>>IF       1966<<ASSIGN   1981>>ASSIGN
      1989>>ASSIGN   1992>>ASSIGN   2004<<ASSIGN   2005>>ASSIGN   2011--ASSIGN   2018<<ASSIGN   2019--ASSIGN
      2020>>ASSIGN   2021<<ASSIGN   2021>>ASSIGN   2022--ASSIGN   2023<<ASSIGN   2024>>ASSIGN   2028>>ASSIGN
      2029>>ASSIGN   2093<<ASSIGN   2094>>IF       2102>>IF       2103<<ASSIGN   2104>>DOWHILE  2107<>CALL
      2110<<ASSIGN
Y
        54**DCL        55--IMP-SIZ  1967<<ASSIGN   1971>>ASSIGN   1971>>ASSIGN   2024<<ASSIGN   2025>>ASSIGN
PL6.E3A0      #004=STORE_AN_ENTRY File=ZIU$COMPACT.:ZIC0TSI                      FRI 09/05/97 13:10 Page:312  
      2025>>ASSIGN
Z
        56**DCL      2113<<DOINDEX  2114>>ASSIGN   2116>>ASSIGN   2140<<DOINDEX  2141>>CALL

PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:313  
     1647        1        /*T***********************************************************/
     1648        2        /*T*                                                         */
     1649        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1650        4        /*T*                                                         */
     1651        5        /*T***********************************************************/
     1652        6
     1653        7
     1654        8        /*
     1655        9              EXTERNAL SUBR  FIND_DIRECT - BY GIVING THE GLOBAL DBK
     1656       10                       THIS PROC MAINTAIN A BUFFER POOL OF 2*NBUFS PAGES
     1657       11                       AND IMPLEMENTS THE ROUND ROBIN SWAPPING ALGORITHM
     1658       12                           WHICH IS MOST NATURE FOR THIS APPLICATION HERE.
     1659       13              AC_PTR - POINTS TO THE AREA THAT CONTAINS THIS DBK(PASSED)
     1660       14              FIND_TYPE - 2. FIND IT AND LOCK THE PAGE AND SET MUST WRITE
     1661       15                          1. FIND IT AND SET MUST WRITE OF THE PAGE, NO LOCK
     1662       16                          0. FIND IT DONT LOCK BUF, ABORT JOB IF NOT FOUND
     1663       17                         -1. DONT LOCK BUF,DONT ABORT JOB EVEN IF DBK NOT FOUND
     1664       18        */
     1665       19        FIND_DIRECT: PROC(DBK,FIND_TYPE) NOAUTO;
     1666       20
     1667       21        %EQU LOCK_BUF = 2;
     1668       22        %EQU MUST_WRITE = 1;
     1669       23        %EQU DONT_LOCK= 0;
     1670       24        %EQU DONT_ERROR=-1;
     1671       25    1   DCL DBK UBIN CALIGNED;
     1672       26    1   DCL FIND_TYPE SBIN ALIGNED;
     1673       27    1   DCL BREAK_CLEANUP BIT(72) SYMREF ALIGNED;
     1674       28
     1675       29        %INCLUDE ZI_DBU_XREF;
     1676      196         %PA_XREF_TBLS;
     1677      262        %INCLUDE ZI$DIR;
     1678      419         %DIR;
     1679      563        %INCLUDE ZI_GLOBAL_DBUTIL;
     1680      741         %SYS_FUNC;
     1681      833         %MISC_DCLS;
     1682      886    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
     1683      887    1   DCL READ_DB ENTRY(3) ALTRET;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:314  
     1684      888        %INCLUDE ZI$PG_STRUCTS;
     1685      991         %DATA_PG;
     1686     1010
     1687     1011    1   DCL BIN_CHAR ENTRY(2);
     1688     1012    1   DCL ERROR_MSG ENTRY(4);
     1689     1013    1   DCL CHKSUM ENTRY;
     1690     1014
     1691     1015    1   DCL LEVEL# SBIN SYMREF ALIGNED;
     1692     1016    1   DCL NO_OF_LEVELS SBIN SYMREF ALIGNED;
     1693     1017    1   DCL 1 CURR_LEVEL(0:31) SYMREF ALIGNED,
     1694     1018    1         2 DBK UBIN WORD ALIGNED,
     1695     1019    1         2 FIRST_PA UBIN ALIGNED,
     1696     1020    1         2 ENT_NO UBIN HALF UNAL,
     1697     1021    1         2 DUPIND BIT(1) UNAL,
     1698     1022    1         2 BUF_PTR UBIN(8) UNAL,
     1699     1023    1         2 * UBIN BYTE UNAL,
     1700     1024    1         2 REC$ PTR ALIGNED;
     1701     1025    1   DCL CURR_LN SBIN WORD SYMREF ALIGNED;
     1702     1026    1   DCL BUF_PTR SBIN WORD SYMREF ALIGNED;
     1703     1027    1   DCL CURR_OWNER SBIN WORD SYMREF ALIGNED;
     1704     1028    1   DCL COMMAND_TEXT CHAR(9) SYMREF ALIGNED;
     1705     1029    1   DCL Y SBIN WORD STATIC ALIGNED;
     1706     1030    1   DCL REC_SIZE SBIN WORD STATIC ALIGNED;
     1707     1031    1   DCL Z SBIN WORD STATIC ALIGNED;
     1708     1032    1   DCL 1 CHAR_V BASED CALIGNED,
     1709     1033    1         2 REC CHAR(Z) CALIGNED; /* USED TO ZERO A ERASED RECORD */
     1710     1034    1   DCL 1 REC BASED(REC$) CALIGNED,
     1711     1035    1         2 * UBIN(6) UNAL,
     1712     1036    1         2 TYPE UBIN(12) UNAL,
     1713     1037    1         2 SIZE UBIN(18) UNAL; /* GENERAL FORMAT OF RECORD HEADER */
     1714     1038    1   DCL POOL_MAX SBIN WORD STATIC SYMDEF ALIGNED;
     1715     1039    1   DCL SWAP_PTR SBIN WORD STATIC SYMDEF ALIGNED;
     1716     1040    1   DCL 1 POOL(0:95) STATIC SYMDEF ALIGNED,
     1717     1041    1         2 MUST_WRITE BIT(1) UNAL,
     1718     1042    1         2 LOCKS UBIN(9) UNAL,
     1719     1043    1         2 PAGE# UBIN(26) UNAL;
     1720     1044    1   DCL NBUFS UBIN SYMREF ALIGNED;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:315  
     1721     1045        %INCLUDE ZI_PRSE_SUBS;
     1722     1201        %INCLUDE ZI_ERRORS_SUBS;
     1723     1721        %INCLUDE CP_6_SUBS;
     1724     2261
     1725     2262    1       Z=(DBK-AC_TBL.BASE_DBK(AC_PTR)+AC_TBL.LPP(AC_PTR)-1)/AC_TBL.LPP(AC_PTR);
     1726     2263    1       CURR_LN=DBK-AC_TBL.BASE_DBK(AC_PTR)-(Z-1)*AC_TBL.LPP(AC_PTR)-1;
     1727     2264         /* Z=PAGE # TO CURR_LNAD, CURR_LN=LINE# IN PAGE OF DBK */
     1728     2265    1       IF Z>AC_TBL.NUM_DBPG(AC_PTR) THEN GOTO OUT_OF_AC_BOUND;
     1729     2266
     1730     2267    2       DO BUF_PTR=POOL_MAX-1 DOWNTO 0; /* SEARCH POOL (LAST USED FIRST) */
     1731     2268    2           IF Z=POOL.PAGE#(BUF_PTR) THEN /* SEARCH POOL FOR THIS PAGE */
     1732     2269    2               GOTO PAGE_HIT;
     1733     2270    2           END;
     1734     2271
     1735     2272    1       IF POOL_MAX = 2*NBUFS THEN /* TIME TO SWAP ONE PAGE OUT */
     1736     2273    2       DO;
     1737     2274    2           BUF_PTR=MOD(SWAP_PTR+1,2*NBUFS);
     1738     2275    3           DO WHILE(POOL.LOCKS(BUF_PTR)>0 AND BUF_PTR~=SWAP_PTR);
     1739     2276    3               BUF_PTR=MOD(BUF_PTR+1,2*NBUFS);
     1740     2277    3               END;
     1741     2278    2           IF BUF_PTR=SWAP_PTR THEN /* ALL BUFS ARE LOCKED, IMPOSSIBLE */
     1742     2279    3           DO; /* MEANS AT LEAST THERE ARE 32 LEVELS DEEP */
     1743     2280    3               CALL BIN_CHAR(1,NO_OF_LEVELS+1);
     1744     2281    3               CALL BIN_CHAR(2,CURR_OWNER);
     1745     2282    3               CALL ERROR_MSG(DBU#PABUFER1,SC_TBL.NAME(SC_PTR));
     1746     2283    3               GOTO UN_WIND; /* ABORT JOB */
     1747     2284    3               END;
     1748     2285         /* FIND A PAGE TO BE SWAPPED OUT */
     1749     2286    2           IF FIND_TYPE>=0 THEN /* IF REQ IS NOT DONT_ERROR */
     1750     2287    2               SWAP_PTR = BUF_PTR; /* NEXT BUF TO SWAP IS NEXT ONE */
     1751     2288    2           ELSE /* OTHERWISE, NEXT TIME SWAP THE SAME ONE */
     1752     2289    2               SWAP_PTR = BUF_PTR-1;
     1753     2290    2           IF POOL.MUST_WRITE(BUF_PTR) THEN /* PAGE MUST WRITE */
     1754     2291    2               CALL WRITE_A_PAGE ALTRET(WRIT_ERR);
     1755     2292    2           END;
     1756     2293    1       ELSE
     1757     2294    2       DO;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:316  
     1758     2295    2           BUF_PTR = POOL_MAX;
     1759     2296    2           POOL_MAX = POOL_MAX + 1;
     1760     2297    2           END;
     1761     2298    1       DCBSF = AC_TBL.DCB#(AC_PTR);
     1762     2299    1       CALL READ_DB(BUF_PTR,Z,1) ALTRET(READ_ERR);
     1763     2300    1       POOL.MUST_WRITE(BUF_PTR)='0'B; /* INIT BUFFER CONTROL FLAGS */
     1764     2301    1       POOL.LOCKS(BUF_PTR)=0;
     1765     2302    1       POOL.PAGE#(BUF_PTR) = Z;
     1766     2303    1   PAGE_HIT: /* BUF_PTR IS INDX INTO POOL AND ALSO I_O_BUF */
     1767     2304         /* X IS OFFSET OF THE DBK, CURR_LN IS THE LINE # */
     1768     2305    1       DATA$=ADDR(I_O_BUF(BUF_PTR));
     1769     2306
     1770     2307    1       X = DATA_PG.ACT_DATA_18(2035-CURR_LN); /* GET OFFSET IN PAGE */
     1771     2308    1       IF CURR_LN>DATA_PG.OFF_LN.SEC OR X<12 THEN
     1772     2309    1           GOTO NO_SUCH_DBK;
     1773     2310    1       REC$ = PINCRC(DATA$,12+X);
     1774     2311    1       IF DBK~=CURR_OWNER AND REC.TYPE~=SC_TBL.PA_TYPE(SC_PTR) THEN
     1775     2312    1           GOTO BAD_TYPE;
     1776     2313    1       IF FIND_TYPE=%LOCK_BUF THEN /* REQ TO LOCK THE BUFF */
     1777     2314    2       DO;
     1778     2315    2           POOL.LOCKS(BUF_PTR)=POOL.LOCKS(BUF_PTR)+1;
     1779     2316    2           CURR_LEVEL.BUF_PTR(LEVEL#)=BUF_PTR;
     1780     2317    2           END;
     1781     2318    1       IF FIND_TYPE>0 THEN /* REQ TO SET MUST WRITE SWITCH */
     1782     2319    1           POOL.MUST_WRITE(BUF_PTR)='1'B;
     1783     2320    1       RETURN; /* X=BUF_PTR,RE=LINE#,Z=PAGE#, REC$ IS THE REC */
     1784     2321        %EJECT;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:317  
     1785     2322
     1786     2323    1   ERASE_PAREC: ENTRY;
     1787     2324
     1788     2325        /*
     1789     2326              THIS SUB IS TO BE CALLED RIGHT AFTER FIND_DIRECT
     1790     2327              SO THAT   X, CURR_LN REMAIN UNCHANGED
     1791     2328        */
     1792     2329
     1793     2330    1       Y = DATA_PG.OFF_LN.FIR; /* GET FIRST AVAIL LINE # */
     1794     2331    1       IF (Y=0 AND DATA_PG.OFFSET(2035)<131072) OR /* NO AVAIL LINE */
     1795     2332    1          Y>CURR_LN THEN /* OR 1ST AVAIL>CURRENT LINE */
     1796     2333    2       DO;
     1797     2334    2           DATA_PG.OFF_LN.FIR=CURR_LN; /* MAKE IT 1ST AVAIL */
     1798     2335    2           DATA_PG.OFFSET(2035-CURR_LN)=131072+Y;
     1799     2336    2           END;
     1800     2337    1       ELSE
     1801     2338    2       DO; /* WALK THRU THE CHAIN TO FIND INSERTION POINT */
     1802     2339    3           DO WHILE(DATA_PG.OFFSET(2035-Y)-131072<CURR_LN AND
     1803     2340    3              DATA_PG.OFFSET(2035-Y)-131072~=0);
     1804     2341    3               Y=DATA_PG.OFFSET(2035-Y)-131072;
     1805     2342    3               END;
     1806     2343    2           DATA_PG.OFFSET(2035-CURR_LN)=DATA_PG.OFFSET(2035-Y);
     1807     2344    2           DATA_PG.OFFSET(2035-Y)=131072+CURR_LN;
     1808     2345    2           END;
     1809     2346
     1810     2347         /* NOW, UPDATE ALL LINE OFFSET IF THEY ARE SHIFTED */
     1811     2348    1       REC_SIZE=REC.SIZE; /* GET SIZE OF ERASED PA */
     1812     2349    2       DO Y=0 TO DATA_PG.OFF_LN.SEC; /* LOOP THRU CURR HIGH LINE */
     1813     2350    2           IF DATA_PG.OFFSET(2035-Y)<131072 AND
     1814     2351    2              DATA_PG.OFFSET(2035-Y)>X THEN /* X=OFFSET OF ERASED REC */
     1815     2352    2               DATA_PG.OFFSET(2035-Y)=DATA_PG.OFFSET(2035-Y)-REC_SIZE;
     1816     2353    2           END;
     1817     2354
     1818     2355         /* NOW, MOVE UP ALL THE RECORDS BELOW ERASED ONE */
     1819     2356    1       Y=4084-(DATA_PG.PG_SZ.SEC+DATA_PG.OFF_LN.SEC*2+2);
     1820     2357    1       DATA_PG.PG_SZ.SEC=DATA_PG.PG_SZ.SEC+REC_SIZE; /* UPDATE SP AVAIL */
     1821     2358    1       Z=Y-(X+REC_SIZE); /* NUMBER OF BYTES TO MOVED UP */
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:318  
     1822     2359    1       REC$->CHAR_V.REC = PINCRC(REC$,REC_SIZE)->CHAR_V.REC; /* SHIFT UP */
     1823     2360    1       REC$=PINCRC(REC$,Z); /* END OF NEW DATA BYTES */
     1824     2361    1       Z = REC_SIZE; /* SIZE TO FILL WITH ZERO */
     1825     2362
     1826     2363    1       REC$->CHAR_V = '0'B;
     1827     2364    1       SC_TBL.COUNT(SC_PTR)=SC_TBL.COUNT(SC_PTR)+1; /* SUMMARY COUNTER */
     1828     2365    1       RETURN;
     1829     2366        %EJECT;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:319  
     1830     2367    1   BAD_TYPE:
     1831     2368    1       IF FIND_TYPE=%DONT_ERROR THEN RETURN;
     1832     2369
     1833     2370    1       CALL BIN_CHAR(1,DBK);
     1834     2371    1       IF ZI$DIR.CODE=#REVERT THEN /* SET REVERT TO NON-PA IS NON-PA */
     1835     2372    1           CALL ERROR_MSG(DBU#PANONPA,SC_TBL.NAME(SC_PTR));
     1836     2373    1       ELSE
     1837     2374    1           CALL ERROR_MSG(DBU#PABADTYP,SC_TBL.NAME(SC_PTR),,COMMAND_TEXT);
     1838     2375    1       GOTO UN_WIND;
     1839     2376    1   NO_SUCH_DBK:
     1840     2377    1       IF FIND_TYPE=%DONT_ERROR THEN RETURN; /* REQ IS DONT ERROR */
     1841     2378
     1842     2379    1       CALL BIN_CHAR(1,DBK);
     1843     2380    1       IF DBK=CURR_OWNER THEN /* OWNER NOT FOUND */
     1844     2381    1           CALL ERROR_MSG(DBU#PABADLNK,SC_TBL.NAME(SC_PTR),,COMMAND_TEXT);
     1845     2382    1       ELSE
     1846     2383    2       DO;
     1847     2384    2           CALL BIN_CHAR(2,CURR_OWNER);
     1848     2385    2           CALL ERROR_MSG(DBU#PANOK,SC_TBL.NAME(SC_PTR));
     1849     2386    2           END;
     1850     2387    1   UN_WIND: UNWIND TO BREAK_CLEANUP;
     1851     2388    1   OUT_OF_AC_BOUND: /* SOME PTR OUT OF THE AREA THAT OWNER IS IN */
     1852     2389    1       CALL BIN_CHAR(1,CURR_OWNER);
     1853     2390    1       CALL BIN_CHAR(2,DBK);
     1854     2391    1       CALL ERROR_MSG(DBU#PAOUTAC,SC_TBL.NAME(SC_PTR));
     1855     2392    1       GOTO UN_WIND;
     1856     2393    1   WRIT_ERR: ;
     1857     2394    1   READ_ERR: X = KEYVSF.IDSKEY; /* PAGE NUMBER */
     1858     2395    1       CALL BIN_CHAR(1,X);
     1859     2396    1       CALL ERROR_MSG(DBU#PAERROR5,AC_TBL.NAME(AC_PTR),,COMMAND_TEXT);
     1860     2397    1       GOTO UN_WIND;
     1861     2398        %EJECT;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:320  
     1862     2399        /*E* ERROR: ZIU-DBU#PANOK-C
     1863     2400        MESSAGE: Error: The *PA_REC_%U1 at DBK# %U2 does not exist,
     1864     2401                            while owner's DBK# is %U3.
     1865     2402                        Broken set is suspected.
     1866     2403                        Run REBUILD PA to reconstruct this set. */
     1867     2404        /*E* ERROR: ZIU-DBU#PABADLNK-C
     1868     2405        MESSAGE: Error: There is no such owner record for the set "%U1"
     1869     2406                        at DBK# %U2. %U3 aborted.
     1870     2407                        You should run REPAIR to fix the set before next shot. */
     1871     2408        /*E* ERROR: ZIU-DBU#PABADTYP-C
     1872     2409        MESSAGE: Error: The record type at DBK# %U2 is not a PA_REC
     1873     2410                        for the set "%U1".  %U3 aborted.
     1874     2411                        Run REBUILD PA to reconstruct this set. */
     1875     2412        /*E*  ERROR: ZIU-DBU#PANONPA-C
     1876     2413        MESSAGE: Error: The record at DBK# %U2 is not a *PA_REC_%U1.
     1877     2414                        The set is either not in PA mode or is broken.
     1878     2415                        In latter case, run REBUILD PA to fix the set.
     1879     2416                        CONVERT TO CHAIN aborted. */
     1880     2417        /*E*  ERROR: ZIU-DBU#PAERROR5-C
     1881     2418        MESSAGE: Error in READ/WRITE on the IDS page# %U2
     1882     2419                       of area "%U1".  %U3 aborted. */
     1883     2420        /*E*  ERROR: ZIU-DBU#PABUFER1-C
     1884     2421        MESSAGE: All buffers are locked; the
     1885     2422                                     set name is "%U1", owner DBK# is %U3 and
     1886     2423                                     number of PA levels is %U2.
     1887     2424                 <<<< SOFTWARE ERROR >>>>  */
     1888     2425        /*E*  ERROR: ZIU-DBU#PABUFER2-C
     1889     2426        MESSAGE: There is a buffer locked while a final
     1890     2427                          cleanup is performed. This is a warning.
     1891     2428                          Set name at error is "%U1" and owner DBK# is %U2.
     1892     2429                 <<<< SOFTWARE ERROR >>>>  */
     1893     2430        /*E*  ERROR: ZIU-DBU#PAOUTAC-C
     1894     2431        MESSAGE: Error: The set "%U1" has a pointer %U3 to a *PA_REC
     1895     2432                        but it is out of the area's bound where the
     1896     2433                        current owner DBK# %U2 resides.
     1897     2434                        The set is either broken or you tried to CONV_TO_CHAIN a
     1898     2435                        set that is already in chained mode. */
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:321  
     1899     2436        %EJECT;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:322  
     1900     2437    1   FLUSH_PAGES: ENTRY;
     1901     2438
     1902     2439    2       DO BUF_PTR=0 TO POOL_MAX-1;
     1903     2440    2           IF POOL.MUST_WRITE(BUF_PTR) THEN
     1904     2441    2               CALL WRITE_A_PAGE ALTRET(WRIT_ERR);
     1905     2442    2           END;
     1906     2443    1       POOL_MAX = 0; /* RESET COUNT */
     1907     2444    1       SWAP_PTR = -1; /* RESET POINTERS */
     1908     2445    1       RETURN;
     1909     2446
     1910     2447    1   WRITE_A_PAGE: PROC ALTRET;
     1911     2448
     1912     2449    2       IF POOL.LOCKS(BUF_PTR)>0 THEN
     1913     2450    3       DO;
     1914     2451    3           CALL BIN_CHAR(1,CURR_OWNER);
     1915     2452    3           CALL ERROR_MSG(DBU#PABUFER2,SC_TBL.NAME(SC_PTR));
     1916     2453    3           POOL.LOCKS(BUF_PTR)=0;
     1917     2454    3           END;
     1918     2455    2       DATA$=ADDR(I_O_BUF(BUF_PTR));
     1919     2456    2       IF AC_TBL.CHECKSUM(AC_PTR) THEN
     1920     2457    3       DO;
     1921     2458    3           CALL CHKSUM;
     1922     2459    3           DATA_PG.CHKSUM_WD=ICHKSUM;
     1923     2460    3           END;
     1924     2461    2       DCBSF = AC_TBL.DCB#(AC_PTR);
     1925     2462    2       FULLSF = %YES#;
     1926     2463    2       KEYSF = %YES#;
     1927     2464    2       KEYVSF.LEN =4;
     1928     2465    2       KEYVSF.IDSKEY = POOL.PAGE#(BUF_PTR);
     1929     2466    2       BUFLNSF = 4096;
     1930     2467    2       BUFSF = VECTOR(I_O_BUF(BUF_PTR));
     1931     2468    2       AC_TBL.PAGE_WRITTEN(AC_PTR)='1'B; /* MARK AREA UPDATED */
     1932     2469    2       CALL SYS_FUNC_WRIT ALTRET(ALT);
     1933     2470    2       RETURN;
     1934     2471    2   ALT: ALTRETURN;
     1935     2472    2   END WRITE_A_PAGE;
     1936     2473
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:323  
     1937     2474    1   END FIND_DIRECT;
     1938     2475        %EOD;

PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:324  
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure FIND_DIRECT.

   Procedure FIND_DIRECT requires 610 words for executable code.
   Procedure FIND_DIRECT is declared NOAUTO and requires 112 words of local(STATIC) storage.

PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:325  

 Object Unit name= FIND_DIRECT                                File name= ZIU$COMPACT.:ZIC0TOU
 UTS= SEP 05 '97 13:11:05.04 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none   112    160  FIND_DIRECT
    1   DCB   even  none     0      0  M$LO
    2   Proc  even  none   610   1142  FIND_DIRECT
    3  RoData even  none    45     55  FIND_DIRECT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  FIND_DIRECT
     2    342                  yes      Std        0  ERASE_PAREC
     2   1004                  yes      Std        0  FLUSH_PAGES

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      6  POOL_MAX                           0      7  SWAP_PTR
    0     10  POOL
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:326  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 BIN_CHAR
         yes           Std       4 ERROR_MSG
 yes     yes           Std       3 READ_DB
         yes           Std       0 CHKSUM
 yes     yes           Std       0 SYS_FUNC_WRIT
                       nStd      0 X66_STATIC_2
                       nStd      0 X66_SUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     BREAK_CLEANUP                         TYPE                                  SC_PTR
     SC_TBL                                RC_PTR                                RC_TBL
     KEY_PTR                               KEY_TBL                               AC_PTR
     FIRST_TIME_CALLED                     BASE_DBK                              AC_TBL
     ZI$DIR                                SCHEMA_ACTIVE                         RECORD_LIST
     SET_LIST                              RETAIN_LIST                           DUMP_FID
     ALTKY                                 INIT_RG                               KEY_RNG
     ITEM_LIST                             BLKLSF                                KEYLSF
     KEYXSF                                DCBSF                                 ORGSF
     KEYSF                                 KEYVSF                                ACSSF
     NOTIMESF                              FUNSF                                 ASNSF
     TESTSF                                XTENSIZESF                            DISPSF
     WAITSF                                VFCSF                                 FULLSF
     BKUPSF                                BUFLNSF                               BUFSF
     SOURCESF                              DESTSF                                DATESF
     TIMESF                                UTSSF                                 DAYSF
     TSTAMPSF                              ENCRP_SEEDSF                          ERRCODESF
     MSGCODE                               INCL_ERR                              ERR_INSERT
     FIDSF_RD                              ACNT                                  EXISTSF
     SHARESF                               DCBNMSF                               KEYRSF
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:327  
     NO_KEYSF                              REASGNSF                              CARRY_ATTRIBUTESF
     SUBMESSF                              SPKY_OPNSF                            POSSF
     ERRFLGSF                              MERGESF                               FSA_FLAG
     RELGSF                                UNUSED                                HELPCODE
     COUNTSF                               INDEXSF                               GAP
     PSNSF                                 ACNTSF                                KEY_SHADWSF
     REC$                                  RB                                    RE
     IE                                    IB                                    CNT
     ICNT                                  RCNT                                  SCNT
     FIRST_SET                             RETCNT                                DMPCNT
     KCNT                                  ACNT_IDX                              I
     J                                     K                                     X
     STEPCC                                I_O_BUF$                              OUT_INDX
     I_O_SIZE                              REC_DATA_LN                           M$LO
     B$TCB$                                B$ROS$                                B$JIT$
     KEYFID                                I_O_KEY                               RESTART
     BREAK_FLAG                            ICHKSUM                               ITMCNT
     GAP1                                  DATA$                                 LEVEL#
     NO_OF_LEVELS                          CURR_LEVEL                            CURR_LN
     BUF_PTR                               CURR_OWNER                            COMMAND_TEXT
     NBUFS

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:328  


     1647        1        /*T***********************************************************/
     1648        2        /*T*                                                         */
     1649        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1650        4        /*T*                                                         */
     1651        5        /*T***********************************************************/
     1652        6
     1653        7
     1654        8        /*
     1655        9              EXTERNAL SUBR  FIND_DIRECT - BY GIVING THE GLOBAL DBK
     1656       10                       THIS PROC MAINTAIN A BUFFER POOL OF 2*NBUFS PAGES
     1657       11                       AND IMPLEMENTS THE ROUND ROBIN SWAPPING ALGORITHM
     1658       12                           WHICH IS MOST NATURE FOR THIS APPLICATION HERE.
     1659       13              AC_PTR - POINTS TO THE AREA THAT CONTAINS THIS DBK(PASSED)
     1660       14              FIND_TYPE - 2. FIND IT AND LOCK THE PAGE AND SET MUST WRITE
     1661       15                          1. FIND IT AND SET MUST WRITE OF THE PAGE, NO LOCK
     1662       16                          0. FIND IT DONT LOCK BUF, ABORT JOB IF NOT FOUND
     1663       17                         -1. DONT LOCK BUF,DONT ABORT JOB EVEN IF DBK NOT FOUND
     1664       18        */
     1665       19        FIND_DIRECT: PROC(DBK,FIND_TYPE) NOAUTO;

     19  2 000000   000000 700200 xent  FIND_DIRECT  TSX0  ! X66_STATIC_2
         2 000001   000000 000002 0                  ZERO    0,2

     1666       20
     1667       21        %EQU LOCK_BUF = 2;
     1668       22        %EQU MUST_WRITE = 1;
     1669       23        %EQU DONT_LOCK= 0;
     1670       24        %EQU DONT_ERROR=-1;
     1671       25    1   DCL DBK UBIN CALIGNED;
     1672       26    1   DCL FIND_TYPE SBIN ALIGNED;
     1673       27    1   DCL BREAK_CLEANUP BIT(72) SYMREF ALIGNED;
     1674       28
     1675       29        %INCLUDE ZI_DBU_XREF;
     1676      196         %PA_XREF_TBLS;
     1677      262        %INCLUDE ZI$DIR;
     1678      419         %DIR;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:329  
     1679      563        %INCLUDE ZI_GLOBAL_DBUTIL;
     1680      741         %SYS_FUNC;
     1681      833         %MISC_DCLS;
     1682      886    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
     1683      887    1   DCL READ_DB ENTRY(3) ALTRET;
     1684      888        %INCLUDE ZI$PG_STRUCTS;
     1685      991         %DATA_PG;
     1686     1010
     1687     1011    1   DCL BIN_CHAR ENTRY(2);
     1688     1012    1   DCL ERROR_MSG ENTRY(4);
     1689     1013    1   DCL CHKSUM ENTRY;
     1690     1014
     1691     1015    1   DCL LEVEL# SBIN SYMREF ALIGNED;
     1692     1016    1   DCL NO_OF_LEVELS SBIN SYMREF ALIGNED;
     1693     1017    1   DCL 1 CURR_LEVEL(0:31) SYMREF ALIGNED,
     1694     1018    1         2 DBK UBIN WORD ALIGNED,
     1695     1019    1         2 FIRST_PA UBIN ALIGNED,
     1696     1020    1         2 ENT_NO UBIN HALF UNAL,
     1697     1021    1         2 DUPIND BIT(1) UNAL,
     1698     1022    1         2 BUF_PTR UBIN(8) UNAL,
     1699     1023    1         2 * UBIN BYTE UNAL,
     1700     1024    1         2 REC$ PTR ALIGNED;
     1701     1025    1   DCL CURR_LN SBIN WORD SYMREF ALIGNED;
     1702     1026    1   DCL BUF_PTR SBIN WORD SYMREF ALIGNED;
     1703     1027    1   DCL CURR_OWNER SBIN WORD SYMREF ALIGNED;
     1704     1028    1   DCL COMMAND_TEXT CHAR(9) SYMREF ALIGNED;
     1705     1029    1   DCL Y SBIN WORD STATIC ALIGNED;
     1706     1030    1   DCL REC_SIZE SBIN WORD STATIC ALIGNED;
     1707     1031    1   DCL Z SBIN WORD STATIC ALIGNED;
     1708     1032    1   DCL 1 CHAR_V BASED CALIGNED,
     1709     1033    1         2 REC CHAR(Z) CALIGNED; /* USED TO ZERO A ERASED RECORD */
     1710     1034    1   DCL 1 REC BASED(REC$) CALIGNED,
     1711     1035    1         2 * UBIN(6) UNAL,
     1712     1036    1         2 TYPE UBIN(12) UNAL,
     1713     1037    1         2 SIZE UBIN(18) UNAL; /* GENERAL FORMAT OF RECORD HEADER */
     1714     1038    1   DCL POOL_MAX SBIN WORD STATIC SYMDEF ALIGNED;
     1715     1039    1   DCL SWAP_PTR SBIN WORD STATIC SYMDEF ALIGNED;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:330  
     1716     1040    1   DCL 1 POOL(0:95) STATIC SYMDEF ALIGNED,
     1717     1041    1         2 MUST_WRITE BIT(1) UNAL,
     1718     1042    1         2 LOCKS UBIN(9) UNAL,
     1719     1043    1         2 PAGE# UBIN(26) UNAL;
     1720     1044    1   DCL NBUFS UBIN SYMREF ALIGNED;
     1721     1045        %INCLUDE ZI_PRSE_SUBS;
     1722     1201        %INCLUDE ZI_ERRORS_SUBS;
     1723     1721        %INCLUDE CP_6_SUBS;
     1724     2261
     1725     2262    1       Z=(DBK-AC_TBL.BASE_DBK(AC_PTR)+AC_TBL.LPP(AC_PTR)-1)/AC_TBL.LPP(AC_PTR);

   2262  2 000002   000000 236000 xsym               LDQ     AC_PTR
         2 000003   000014 402007                    MPY     12,DL
         2 000004   000000 620006                    EAX0    0,QL
         2 000005   000001 470400 0                  LDP0    @DBK
         2 000006   000000 100500                    MLR     fill='000'O
         2 000007   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         2 000010   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000011   000152 236000 0                  LDQ     POOL+98
         2 000012   000000 136010 xsym               SBLQ    AC_TBL,X0
         2 000013   000153 756000 0                  STQ     POOL+99
         2 000014   000013 236010 xsym               LDQ     AC_TBL+11,X0
         2 000015   000032 772000                    QRL     26
         2 000016   000154 756000 0                  STQ     POOL+100
         2 000017   000153 236000 0                  LDQ     POOL+99
         2 000020   000154 036000 0                  ADLQ    POOL+100
         2 000021   000155 756000 0                  STQ     POOL+101
         2 000022   000013 236010 xsym               LDQ     AC_TBL+11,X0
         2 000023   000032 772000                    QRL     26
         2 000024   000156 756000 0                  STQ     POOL+102
         2 000025   000155 236000 0                  LDQ     POOL+101
         2 000026   000001 136007                    SBLQ    1,DL
         2 000027   000156 506000 0                  DIV     POOL+102
         2 000030   000005 756000 0                  STQ     Z

     1726     2263    1       CURR_LN=DBK-AC_TBL.BASE_DBK(AC_PTR)-(Z-1)*AC_TBL.LPP(AC_PTR)-1;

PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:331  
   2263  2 000031   000000 100500                    MLR     fill='000'O
         2 000032   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         2 000033   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000034   000152 236000 0                  LDQ     POOL+98
         2 000035   000000 136010 xsym               SBLQ    AC_TBL,X0
         2 000036   000153 756000 0                  STQ     POOL+99
         2 000037   000013 236010 xsym               LDQ     AC_TBL+11,X0
         2 000040   000032 772000                    QRL     26
         2 000041   000154 756000 0                  STQ     POOL+100
         2 000042   000005 236000 0                  LDQ     Z
         2 000043   000001 136007                    SBLQ    1,DL
         2 000044   000154 402000 0                  MPY     POOL+100
         2 000045   000155 756000 0                  STQ     POOL+101
         2 000046   000153 236000 0                  LDQ     POOL+99
         2 000047   000155 136000 0                  SBLQ    POOL+101
         2 000050   000001 136007                    SBLQ    1,DL
         2 000051   000000 756000 xsym               STQ     CURR_LN

     1727     2264         /* Z=PAGE # TO CURR_LNAD, CURR_LN=LINE# IN PAGE OF DBK */
     1728     2265    1       IF Z>AC_TBL.NUM_DBPG(AC_PTR) THEN GOTO OUT_OF_AC_BOUND;

   2265  2 000052   000003 236010 xsym               LDQ     AC_TBL+3,X0
         2 000053   000022 772000                    QRL     18
         2 000054   000005 116000 0                  CMPQ    Z
         2 000055   000732 604000 2                  TMI     OUT_OF_AC_BOUND

     1729     2266
     1730     2267    2       DO BUF_PTR=POOL_MAX-1 DOWNTO 0; /* SEARCH POOL (LAST USED FIRST) */

   2267  2 000056   000006 235000 0                  LDA     POOL_MAX
         2 000057   000001 135007                    SBLA    1,DL
         2 000060   000000 755000 xsym               STA     BUF_PTR
         2 000061   000071 710000 2                  TRA     s:2270+2

     1731     2268    2           IF Z=POOL.PAGE#(BUF_PTR) THEN /* SEARCH POOL FOR THIS PAGE */

   2268  2 000062   000000 720000 xsym               LXL0    BUF_PTR
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:332  
         2 000063   000010 236010 0                  LDQ     POOL,X0
         2 000064   000000 376000 3                  ANQ     0
         2 000065   000005 116000 0                  CMPQ    Z
         2 000066   000231 600000 2                  TZE     PAGE_HIT

     1732     2269    2               GOTO PAGE_HIT;
     1733     2270    2           END;

   2270  2 000067   000001 336007                    LCQ     1,DL
         2 000070   000000 056000 xsym               ASQ     BUF_PTR
         2 000071   000000 235000 xsym               LDA     BUF_PTR
         2 000072   000062 605000 2                  TPL     s:2268

     1734     2271
     1735     2272    1       IF POOL_MAX = 2*NBUFS THEN /* TIME TO SWAP ONE PAGE OUT */

   2272  2 000073   000000 236000 xsym               LDQ     NBUFS
         2 000074   000001 736000                    QLS     1
         2 000075   000204 604000 2                  TMI     s:2295
         2 000076   000006 116000 0                  CMPQ    POOL_MAX
         2 000077   000204 601000 2                  TNZ     s:2295

     1736     2273    2       DO;

     1737     2274    2           BUF_PTR=MOD(SWAP_PTR+1,2*NBUFS);

   2274  2 000100   000152 756000 0                  STQ     POOL+98
         2 000101   000007 236000 0                  LDQ     SWAP_PTR
         2 000102   000001 036007                    ADLQ    1,DL
         2 000103   000152 235000 0                  LDA     POOL+98
         2 000104   000107 605000 2                  TPL     s:2274+7
         2 000105   000044 737000                    LLS     36
         2 000106   000110 710000 2                  TRA     s:2274+8
         2 000107   000152 506000 0                  DIV     POOL+98
         2 000110   000000 755000 xsym               STA     BUF_PTR

     1738     2275    3           DO WHILE(POOL.LOCKS(BUF_PTR)>0 AND BUF_PTR~=SWAP_PTR);
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:333  

   2275  2 000111   000125 710000 2                  TRA     s:2277

     1739     2276    3               BUF_PTR=MOD(BUF_PTR+1,2*NBUFS);

   2276  2 000112   000000 235000 xsym               LDA     NBUFS
         2 000113   000001 735000                    ALS     1
         2 000114   000152 755000 0                  STA     POOL+98
         2 000115   000000 236000 xsym               LDQ     BUF_PTR
         2 000116   000001 036007                    ADLQ    1,DL
         2 000117   000000 115003                    CMPA    0,DU
         2 000120   000123 605000 2                  TPL     s:2276+9
         2 000121   000044 737000                    LLS     36
         2 000122   000124 710000 2                  TRA     s:2276+10
         2 000123   000152 506000 0                  DIV     POOL+98
         2 000124   000000 755000 xsym               STA     BUF_PTR

     1740     2277    3               END;

   2277  2 000125   000010 236005 0                  LDQ     POOL,AL
         2 000126   377400 316003                    CANQ    130816,DU
         2 000127   000133 600000 2                  TZE     s:2278
         2 000130   000000 236000 xsym               LDQ     BUF_PTR
         2 000131   000007 116000 0                  CMPQ    SWAP_PTR
         2 000132   000112 601000 2                  TNZ     s:2276

     1741     2278    2           IF BUF_PTR=SWAP_PTR THEN /* ALL BUFS ARE LOCKED, IMPOSSIBLE */

   2278  2 000133   000000 236000 xsym               LDQ     BUF_PTR
         2 000134   000007 116000 0                  CMPQ    SWAP_PTR
         2 000135   000167 601000 2                  TNZ     s:2286

     1742     2279    3           DO; /* MEANS AT LEAST THERE ARE 32 LEVELS DEEP */

     1743     2280    3               CALL BIN_CHAR(1,NO_OF_LEVELS+1);

   2280  2 000136   000000 235000 xsym               LDA     NO_OF_LEVELS
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:334  
         2 000137   000001 035007                    ADLA    1,DL
         2 000140   000152 755000 0                  STA     POOL+98
         2 000141   000152 630400 0                  EPPR0   POOL+98
         2 000142   000155 450400 0                  STP0    POOL+101
         2 000143   000003 236000 3                  LDQ     3
         2 000144   000154 756000 0                  STQ     POOL+100
         2 000145   000154 630400 0                  EPPR0   POOL+100
         2 000146   000001 631400 3                  EPPR1   1
         2 000147   000000 701000 xent               TSX1    BIN_CHAR
         2 000150   000000 011000                    NOP     0

     1744     2281    3               CALL BIN_CHAR(2,CURR_OWNER);

   2281  2 000151   000005 630400 3                  EPPR0   5
         2 000152   000001 631400 3                  EPPR1   1
         2 000153   000000 701000 xent               TSX1    BIN_CHAR
         2 000154   000000 011000                    NOP     0

     1745     2282    3               CALL ERROR_MSG(DBU#PABUFER1,SC_TBL.NAME(SC_PTR));

   2282  2 000155   000000 236000 xsym               LDQ     SC_PTR
         2 000156   000011 402000 3                  MPY     9
         2 000157   000010 036000 3                  ADLQ    8
         2 000160   000012 235000 3                  LDA     10
         2 000161   000152 757000 0                  STAQ    POOL+98
         2 000162   000152 630400 0                  EPPR0   POOL+98
         2 000163   000001 631400 3                  EPPR1   1
         2 000164   000000 701000 xent               TSX1    ERROR_MSG
         2 000165   000000 011000                    NOP     0

     1746     2283    3               GOTO UN_WIND; /* ABORT JOB */

   2283  2 000166   000724 710000 2                  TRA     UN_WIND

     1747     2284    3               END;
     1748     2285         /* FIND A PAGE TO BE SWAPPED OUT */
     1749     2286    2           IF FIND_TYPE>=0 THEN /* IF REQ IS NOT DONT_ERROR */
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:335  

   2286  2 000167   000002 470400 0                  LDP0    @FIND_TYPE
         2 000170   000000 235100                    LDA     0,,PR0
         2 000171   000174 604000 2                  TMI     s:2289

     1750     2287    2               SWAP_PTR = BUF_PTR; /* NEXT BUF TO SWAP IS NEXT ONE */

   2287  2 000172   000007 756000 0                  STQ     SWAP_PTR
         2 000173   000176 710000 2                  TRA     s:2290

     1751     2288    2           ELSE /* OTHERWISE, NEXT TIME SWAP THE SAME ONE */
     1752     2289    2               SWAP_PTR = BUF_PTR-1;

   2289  2 000174   000001 136007                    SBLQ    1,DL
         2 000175   000007 756000 0                  STQ     SWAP_PTR

     1753     2290    2           IF POOL.MUST_WRITE(BUF_PTR) THEN /* PAGE MUST WRITE */

   2290  2 000176   000000 720000 xsym               LXL0    BUF_PTR
         2 000177   000010 234010 0                  SZN     POOL,X0
         2 000200   000207 605000 2                  TPL     s:2298

     1754     2291    2               CALL WRITE_A_PAGE ALTRET(WRIT_ERR);

   2291  2 000201   001026 701000 2                  TSX1    WRITE_A_PAGE
         2 000202   000757 702000 2                  TSX2    WRIT_ERR

     1755     2292    2           END;

   2292  2 000203   000207 710000 2                  TRA     s:2298

     1756     2293    1       ELSE
     1757     2294    2       DO;

     1758     2295    2           BUF_PTR = POOL_MAX;

   2295  2 000204   000006 235000 0                  LDA     POOL_MAX
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:336  
         2 000205   000000 755000 xsym               STA     BUF_PTR

     1759     2296    2           POOL_MAX = POOL_MAX + 1;

   2296  2 000206   000006 054000 0                  AOS     POOL_MAX

     1760     2297    2           END;

     1761     2298    1       DCBSF = AC_TBL.DCB#(AC_PTR);

   2298  2 000207   000000 236000 xsym               LDQ     AC_PTR
         2 000210   000014 402007                    MPY     12,DL
         2 000211   000013 720006 xsym               LXL0    AC_TBL+11,QL
         2 000212   000377 360003                    ANX0    255,DU
         2 000213   000000 740000 xsym               STX0    DCBSF

     1762     2299    1       CALL READ_DB(BUF_PTR,Z,1) ALTRET(READ_ERR);

   2299  2 000214   000014 630400 3                  EPPR0   12
         2 000215   000013 631400 3                  EPPR1   11
         2 000216   000000 701000 xent               TSX1    READ_DB
         2 000217   000757 702000 2                  TSX2    WRIT_ERR

     1763     2300    1       POOL.MUST_WRITE(BUF_PTR)='0'B; /* INIT BUFFER CONTROL FLAGS */

   2300  2 000220   000000 720000 xsym               LXL0    BUF_PTR
         2 000221   000017 236000 3                  LDQ     15
         2 000222   000010 356010 0                  ANSQ    POOL,X0

     1764     2301    1       POOL.LOCKS(BUF_PTR)=0;

   2301  2 000223   000020 236000 3                  LDQ     16
         2 000224   000010 356010 0                  ANSQ    POOL,X0

     1765     2302    1       POOL.PAGE#(BUF_PTR) = Z;

   2302  2 000225   000005 236000 0                  LDQ     Z
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:337  
         2 000226   000010 676010 0                  ERQ     POOL,X0
         2 000227   000000 376000 3                  ANQ     0
         2 000230   000010 656010 0                  ERSQ    POOL,X0

     1766     2303    1   PAGE_HIT: /* BUF_PTR IS INDX INTO POOL AND ALSO I_O_BUF */
     1767     2304         /* X IS OFFSET OF THE DBK, CURR_LN IS THE LINE # */
     1768     2305    1       DATA$=ADDR(I_O_BUF(BUF_PTR));

   2305  2 000231   000000 236000 xsym  PAGE_HIT     LDQ     BUF_PTR
         2 000232   000034 736000                    QLS     28
         2 000233   000000 036000 xsym               ADLQ    I_O_BUF$
         2 000234   000000 756000 xsym               STQ     DATA$

     1769     2306
     1770     2307    1       X = DATA_PG.ACT_DATA_18(2035-CURR_LN); /* GET OFFSET IN PAGE */

   2307  2 000235   000000 335000 xsym               LCA     CURR_LN
         2 000236   000001 735000                    ALS     1
         2 000237   000000 470400 xsym               LDP0    DATA$
         2 000240   000000 100505                    MLR     fill='000'O
         2 000241   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000242   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000243   000152 236000 0                  LDQ     POOL+98
         2 000244   000022 732000                    QRS     18
         2 000245   000000 756000 xsym               STQ     X

     1771     2308    1       IF CURR_LN>DATA_PG.OFF_LN.SEC OR X<12 THEN

   2308  2 000246   000005 236100                    LDQ     5,,PR0
         2 000247   777777 376007                    ANQ     -1,DL
         2 000250   000000 116000 xsym               CMPQ    CURR_LN
         2 000251   000645 604000 2                  TMI     NO_SUCH_DBK
         2 000252   000000 235000 xsym               LDA     X
         2 000253   000014 115007                    CMPA    12,DL
         2 000254   000645 604000 2                  TMI     NO_SUCH_DBK

     1772     2309    1           GOTO NO_SUCH_DBK;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:338  
     1773     2310    1       REC$ = PINCRC(DATA$,12+X);

   2310  2 000255   000000 236000 xsym               LDQ     X
         2 000256   000020 736000                    QLS     16
         2 000257   000003 036003                    ADLQ    3,DU
         2 000260   000000 036000 xsym               ADLQ    DATA$
         2 000261   000000 756000 xsym               STQ     REC$

     1774     2311    1       IF DBK~=CURR_OWNER AND REC.TYPE~=SC_TBL.PA_TYPE(SC_PTR) THEN

   2311  2 000262   000001 471400 0                  LDP1    @DBK
         2 000263   000000 100500                    MLR     fill='000'O
         2 000264   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         2 000265   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000266   000152 236000 0                  LDQ     POOL+98
         2 000267   000272 604000 2                  TMI     s:2311+8
         2 000270   000000 116000 xsym               CMPQ    CURR_OWNER
         2 000271   000311 600000 2                  TZE     s:2313
         2 000272   000000 236000 xsym               LDQ     SC_PTR
         2 000273   000405 402007                    MPY     261,DL
         2 000274   000000 116003                    CMPQ    0,DU
         2 000275   000277 605000 2                  TPL     s:2311+13
         2 000276   000044 036003                    ADLQ    36,DU
         2 000277   003000 061406                    CSR     bolr='003'O
         2 000300   000004 250014 xsym               BDSC    SC_TBL+4,Q               by=1,bit=5,n=12
         2 000301   000153 000044 0                  BDSC    POOL+99                  by=0,bit=0,n=36
         2 000302   000000 473400 xsym               LDP3    REC$
         2 000303   003000 061500                    CSR     bolr='003'O
         2 000304   300000 060014                    BDSC    0,,PR3                   by=0,bit=6,n=12
         2 000305   000154 000044 0                  BDSC    POOL+100                 by=0,bit=0,n=36
         2 000306   000154 236000 0                  LDQ     POOL+100
         2 000307   000153 116000 0                  CMPQ    POOL+99
         2 000310   000575 601000 2                  TNZ     BAD_TYPE

     1775     2312    1           GOTO BAD_TYPE;
     1776     2313    1       IF FIND_TYPE=%LOCK_BUF THEN /* REQ TO LOCK THE BUFF */

PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:339  
   2313  2 000311   000002 473400 0                  LDP3    @FIND_TYPE
         2 000312   300000 235100                    LDA     0,,PR3
         2 000313   000002 115007                    CMPA    2,DL
         2 000314   000334 601000 2                  TNZ     s:2318

     1777     2314    2       DO;

     1778     2315    2           POOL.LOCKS(BUF_PTR)=POOL.LOCKS(BUF_PTR)+1;

   2315  2 000315   000010 236010 0                  LDQ     POOL,X0
         2 000316   000032 772000                    QRL     26
         2 000317   000777 376007                    ANQ     511,DL
         2 000320   000001 036007                    ADLQ    1,DL
         2 000321   000032 736000                    QLS     26
         2 000322   000010 676010 0                  ERQ     POOL,X0
         2 000323   377400 376003                    ANQ     130816,DU
         2 000324   000010 656010 0                  ERSQ    POOL,X0

     1779     2316    2           CURR_LEVEL.BUF_PTR(LEVEL#)=BUF_PTR;

   2316  2 000325   000000 235000 xsym               LDA     LEVEL#
         2 000326   000002 735000                    ALS     2
         2 000327   000000 236000 xsym               LDQ     BUF_PTR
         2 000330   000011 736000                    QLS     9
         2 000331   000002 676005 xsym               ERQ     CURR_LEVEL+2,AL
         2 000332   377000 376007                    ANQ     130560,DL
         2 000333   000002 656005 xsym               ERSQ    CURR_LEVEL+2,AL

     1780     2317    2           END;

     1781     2318    1       IF FIND_TYPE>0 THEN /* REQ TO SET MUST WRITE SWITCH */

   2318  2 000334   300000 235100                    LDA     0,,PR3
         2 000335   000340 604400 2                  TMOZ    s:2320

     1782     2319    1           POOL.MUST_WRITE(BUF_PTR)='1'B;

PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:340  
   2319  2 000336   400000 236003                    LDQ     -131072,DU
         2 000337   000010 256010 0                  ORSQ    POOL,X0

     1783     2320    1       RETURN; /* X=BUF_PTR,RE=LINE#,Z=PAGE#, REC$ IS THE REC */

   2320  2 000340   000000 221200 0                  LDX1  ! 0
         2 000341   000001 702211                    TSX2  ! 1,X1

     1784     2321        %EJECT;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:341  
     1785     2322
     1786     2323    1   ERASE_PAREC: ENTRY;

   2323  2 000342   000000 700200 xent  ERASE_PAREC  TSX0  ! X66_STATIC_2
         2 000343   000000 000002 0                  ZERO    0,2

     1787     2324
     1788     2325        /*
     1789     2326              THIS SUB IS TO BE CALLED RIGHT AFTER FIND_DIRECT
     1790     2327              SO THAT   X, CURR_LN REMAIN UNCHANGED
     1791     2328        */
     1792     2329
     1793     2330    1       Y = DATA_PG.OFF_LN.FIR; /* GET FIRST AVAIL LINE # */

   2330  2 000344   000000 470400 xsym               LDP0    DATA$
         2 000345   000005 236100                    LDQ     5,,PR0
         2 000346   000022 772000                    QRL     18
         2 000347   000003 756000 0                  STQ     Y

     1794     2331    1       IF (Y=0 AND DATA_PG.OFFSET(2035)<131072) OR /* NO AVAIL LINE */

   2331  2 000350   000354 601000 2                  TNZ     s:2331+4
         2 000351   001777 720100                    LXL0    1023,,PR0
         2 000352   400000 100003                    CMPX0   -131072,DU
         2 000353   000356 602000 2                  TNC     s:2334
         2 000354   000000 116000 xsym               CMPQ    CURR_LN
         2 000355   000370 604400 2                  TMOZ    s:2339

     1795     2332    1          Y>CURR_LN THEN /* OR 1ST AVAIL>CURRENT LINE */
     1796     2333    2       DO;

     1797     2334    2           DATA_PG.OFF_LN.FIR=CURR_LN; /* MAKE IT 1ST AVAIL */

   2334  2 000356   000000 720000 xsym               LXL0    CURR_LN
         2 000357   000005 740100                    STX0    5,,PR0

     1798     2335    2           DATA_PG.OFFSET(2035-CURR_LN)=131072+Y;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:342  

   2335  2 000360   400000 036007                    ADLQ    -131072,DL
         2 000361   000152 756000 0                  STQ     POOL+98
         2 000362   000000 335000 xsym               LCA     CURR_LN
         2 000363   000001 735000                    ALS     1
         2 000364   000105 101400                    MRL     fill='000'O
         2 000365   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000366   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2

     1799     2336    2           END;

   2336  2 000367   000435 710000 2                  TRA     s:2348

     1800     2337    1       ELSE
     1801     2338    2       DO; /* WALK THRU THE CHAIN TO FIND INSERTION POINT */

     1802     2339    3           DO WHILE(DATA_PG.OFFSET(2035-Y)-131072<CURR_LN AND

   2339  2 000370   000402 710000 2                  TRA     s:2342

     1803     2340    3              DATA_PG.OFFSET(2035-Y)-131072~=0);
     1804     2341    3               Y=DATA_PG.OFFSET(2035-Y)-131072;

   2341  2 000371   000003 335000 0                  LCA     Y
         2 000372   000001 735000                    ALS     1
         2 000373   000000 470400 xsym               LDP0    DATA$
         2 000374   000000 101505                    MRL     fill='000'O
         2 000375   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000376   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000377   000152 236000 0                  LDQ     POOL+98
         2 000400   400000 136007                    SBLQ    -131072,DL
         2 000401   000003 756000 0                  STQ     Y

     1805     2342    3               END;

   2342  2 000402   000003 335000 0                  LCA     Y
         2 000403   000001 735000                    ALS     1
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:343  
         2 000404   000000 101505                    MRL     fill='000'O
         2 000405   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000406   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000407   000152 236000 0                  LDQ     POOL+98
         2 000410   400000 136007                    SBLQ    -131072,DL
         2 000411   000000 116000 xsym               CMPQ    CURR_LN
         2 000412   000421 605000 2                  TPL     s:2343
         2 000413   000000 101505                    MRL     fill='000'O
         2 000414   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000415   000153 000004 0                  ADSC9   POOL+99                  cn=0,n=4
         2 000416   000153 236000 0                  LDQ     POOL+99
         2 000417   400000 116007                    CMPQ    -131072,DL
         2 000420   000371 601000 2                  TNZ     s:2341

     1806     2343    2           DATA_PG.OFFSET(2035-CURR_LN)=DATA_PG.OFFSET(2035-Y);

   2343  2 000421   000000 336000 xsym               LCQ     CURR_LN
         2 000422   000001 736000                    QLS     1
         2 000423   000106 100505                    MLR     fill='000'O
         2 000424   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000425   001777 400002                    ADSC9   1023,Q,PR0               cn=2,n=2

     1807     2344    2           DATA_PG.OFFSET(2035-Y)=131072+CURR_LN;

   2344  2 000426   000000 236000 xsym               LDQ     CURR_LN
         2 000427   400000 036007                    ADLQ    -131072,DL
         2 000430   000152 756000 0                  STQ     POOL+98
         2 000431   000000 470400 xsym               LDP0    DATA$
         2 000432   000105 101400                    MRL     fill='000'O
         2 000433   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000434   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2

     1808     2345    2           END;

     1809     2346
     1810     2347         /* NOW, UPDATE ALL LINE OFFSET IF THEY ARE SHIFTED */
     1811     2348    1       REC_SIZE=REC.SIZE; /* GET SIZE OF ERASED PA */
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:344  

   2348  2 000435   000000 470400 xsym               LDP0    REC$
         2 000436   000000 101500                    MRL     fill='000'O
         2 000437   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         2 000440   000004 000004 0                  ADSC9   REC_SIZE                 cn=0,n=4

     1812     2349    2       DO Y=0 TO DATA_PG.OFF_LN.SEC; /* LOOP THRU CURR HIGH LINE */

   2349  2 000441   000003 450000 0                  STZ     Y
         2 000442   000474 710000 2                  TRA     s:2353+1

     1813     2350    2           IF DATA_PG.OFFSET(2035-Y)<131072 AND

   2350  2 000443   000003 335000 0                  LCA     Y
         2 000444   000001 735000                    ALS     1
         2 000445   000000 470400 xsym               LDP0    DATA$
         2 000446   000000 101505                    MRL     fill='000'O
         2 000447   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000450   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000451   000152 236000 0                  LDQ     POOL+98
         2 000452   400000 116007                    CMPQ    -131072,DL
         2 000453   000473 605000 2                  TPL     s:2353
         2 000454   000000 101505                    MRL     fill='000'O
         2 000455   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000456   000153 000004 0                  ADSC9   POOL+99                  cn=0,n=4
         2 000457   000153 236000 0                  LDQ     POOL+99
         2 000460   000000 116000 xsym               CMPQ    X
         2 000461   000473 604400 2                  TMOZ    s:2353

     1814     2351    2              DATA_PG.OFFSET(2035-Y)>X THEN /* X=OFFSET OF ERASED REC */
     1815     2352    2               DATA_PG.OFFSET(2035-Y)=DATA_PG.OFFSET(2035-Y)-REC_SIZE;

   2352  2 000462   000000 101505                    MRL     fill='000'O
         2 000463   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000464   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000465   000152 236000 0                  LDQ     POOL+98
         2 000466   000004 136000 0                  SBLQ    REC_SIZE
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:345  
         2 000467   000153 756000 0                  STQ     POOL+99
         2 000470   000105 101400                    MRL     fill='000'O
         2 000471   000153 000004 0                  ADSC9   POOL+99                  cn=0,n=4
         2 000472   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2

     1816     2353    2           END;

   2353  2 000473   000003 054000 0                  AOS     Y
         2 000474   000000 470400 xsym               LDP0    DATA$
         2 000475   000005 236100                    LDQ     5,,PR0
         2 000476   777777 376007                    ANQ     -1,DL
         2 000477   000003 116000 0                  CMPQ    Y
         2 000500   000443 605000 2                  TPL     s:2350

     1817     2354
     1818     2355         /* NOW, MOVE UP ALL THE RECORDS BELOW ERASED ONE */
     1819     2356    1       Y=4084-(DATA_PG.PG_SZ.SEC+DATA_PG.OFF_LN.SEC*2+2);

   2356  2 000501   000003 236100                    LDQ     3,,PR0
         2 000502   777777 376007                    ANQ     -1,DL
         2 000503   000152 756000 0                  STQ     POOL+98
         2 000504   000005 236100                    LDQ     5,,PR0
         2 000505   000001 736000                    QLS     1
         2 000506   000021 376000 3                  ANQ     17
         2 000507   000152 036000 0                  ADLQ    POOL+98
         2 000510   000022 676000 3                  ERQ     18
         2 000511   007763 036007                    ADLQ    4083,DL
         2 000512   000003 756000 0                  STQ     Y

     1820     2357    1       DATA_PG.PG_SZ.SEC=DATA_PG.PG_SZ.SEC+REC_SIZE; /* UPDATE SP AVAIL */

   2357  2 000513   000003 236100                    LDQ     3,,PR0
         2 000514   777777 376007                    ANQ     -1,DL
         2 000515   000004 036000 0                  ADLQ    REC_SIZE
         2 000516   000000 620006                    EAX0    0,QL
         2 000517   000003 440100                    SXL0    3,,PR0

PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:346  
     1821     2358    1       Z=Y-(X+REC_SIZE); /* NUMBER OF BYTES TO MOVED UP */

   2358  2 000520   000000 236000 xsym               LDQ     X
         2 000521   000004 036000 0                  ADLQ    REC_SIZE
         2 000522   000152 756000 0                  STQ     POOL+98
         2 000523   000003 236000 0                  LDQ     Y
         2 000524   000152 136000 0                  SBLQ    POOL+98
         2 000525   000005 756000 0                  STQ     Z

     1822     2359    1       REC$->CHAR_V.REC = PINCRC(REC$,REC_SIZE)->CHAR_V.REC; /* SHIFT UP */

   2359  2 000526   000000 471400 xsym               LDP1    REC$
         2 000527   000000 620006                    EAX0    0,QL
         2 000530   000004 235000 0                  LDA     REC_SIZE
         2 000531   000005 721000 0                  LXL1    Z
         2 000532   040140 100545                    MLR     fill='040'O
         2 000533   100000 000010                    ADSC9   0,A,PR1                  cn=0,n=*X0
         2 000534   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1

     1823     2360    1       REC$=PINCRC(REC$,Z); /* END OF NEW DATA BYTES */

   2360  2 000535   000005 236000 0                  LDQ     Z
         2 000536   000020 736000                    QLS     16
         2 000537   000000 036000 xsym               ADLQ    REC$
         2 000540   000000 756000 xsym               STQ     REC$

     1824     2361    1       Z = REC_SIZE; /* SIZE TO FILL WITH ZERO */

   2361  2 000541   000005 755000 0                  STA     Z

     1825     2362
     1826     2363    1       REC$->CHAR_V = '0'B;

   2363  2 000542   000000 470400 xsym               LDP0    REC$
         2 000543   000000 620005                    EAX0    0,AL
         2 000544   000140 100400                    MLR     fill='000'O
         2 000545   000023 000001 3                  ADSC9   19                       cn=0,n=1
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:347  
         2 000546   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     1827     2364    1       SC_TBL.COUNT(SC_PTR)=SC_TBL.COUNT(SC_PTR)+1; /* SUMMARY COUNTER */

   2364  2 000547   000000 236000 xsym               LDQ     SC_PTR
         2 000550   000405 402007                    MPY     261,DL
         2 000551   000000 116003                    CMPQ    0,DU
         2 000552   000554 605000 2                  TPL     s:2364+5
         2 000553   000044 036003                    ADLQ    36,DU
         2 000554   003000 060406                    CSL     bolr='003'O
         2 000555   000006 450022 xsym               BDSC    SC_TBL+6,Q               by=2,bit=5,n=18
         2 000556   000153 000044 0                  BDSC    POOL+99                  by=0,bit=0,n=36
         2 000557   000153 236000 0                  LDQ     POOL+99
         2 000560   000022 732000                    QRS     18
         2 000561   000001 036007                    ADLQ    1,DL
         2 000562   000152 756000 0                  STQ     POOL+98
         2 000563   000000 236000 xsym               LDQ     SC_PTR
         2 000564   000405 402007                    MPY     261,DL
         2 000565   000000 116003                    CMPQ    0,DU
         2 000566   000570 605000 2                  TPL     s:2364+17
         2 000567   000044 036003                    ADLQ    36,DU
         2 000570   003006 061400                    CSR     bolr='003'O
         2 000571   000152 000044 0                  BDSC    POOL+98                  by=0,bit=0,n=36
         2 000572   000006 450022 xsym               BDSC    SC_TBL+6,Q               by=2,bit=5,n=18

     1828     2365    1       RETURN;

   2365  2 000573   000000 221200 0                  LDX1  ! 0
         2 000574   000001 702211                    TSX2  ! 1,X1

     1829     2366        %EJECT;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:348  
     1830     2367    1   BAD_TYPE:
     1831     2368    1       IF FIND_TYPE=%DONT_ERROR THEN RETURN;

   2368  2 000575   000002 474400 0     BAD_TYPE     LDP4    @FIND_TYPE
         2 000576   400000 235100                    LDA     0,,PR4
         2 000577   000022 115000 3                  CMPA    18
         2 000600   000603 601000 2                  TNZ     s:2370

   2368  2 000601   000000 221200 0                  LDX1  ! 0
         2 000602   000001 702211                    TSX2  ! 1,X1

     1832     2369
     1833     2370    1       CALL BIN_CHAR(1,DBK);

   2370  2 000603   000001 236000 0                  LDQ     @DBK
         2 000604   000003 235000 3                  LDA     3
         2 000605   000152 757000 0                  STAQ    POOL+98
         2 000606   000152 630400 0                  EPPR0   POOL+98
         2 000607   000001 631400 3                  EPPR1   1
         2 000610   000000 701000 xent               TSX1    BIN_CHAR
         2 000611   000000 011000                    NOP     0

     1834     2371    1       IF ZI$DIR.CODE=#REVERT THEN /* SET REVERT TO NON-PA IS NON-PA */

   2371  2 000612   000125 236000 xsym               LDQ     ZI$DIR+85
         2 000613   000024 376000 3                  ANQ     20
         2 000614   000025 116000 3                  CMPQ    21
         2 000615   000630 601000 2                  TNZ     s:2374

     1835     2372    1           CALL ERROR_MSG(DBU#PANONPA,SC_TBL.NAME(SC_PTR));

   2372  2 000616   000000 236000 xsym               LDQ     SC_PTR
         2 000617   000011 402000 3                  MPY     9
         2 000620   000010 036000 3                  ADLQ    8
         2 000621   000027 235000 3                  LDA     23
         2 000622   000152 757000 0                  STAQ    POOL+98
         2 000623   000152 630400 0                  EPPR0   POOL+98
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:349  
         2 000624   000001 631400 3                  EPPR1   1
         2 000625   000000 701000 xent               TSX1    ERROR_MSG
         2 000626   000000 011000                    NOP     0
         2 000627   000644 710000 2                  TRA     s:2375

     1836     2373    1       ELSE
     1837     2374    1           CALL ERROR_MSG(DBU#PABADTYP,SC_TBL.NAME(SC_PTR),,COMMAND_TEXT);

   2374  2 000630   000033 236000 3                  LDQ     27
         2 000631   000032 235000 3                  LDA     26
         2 000632   000154 757000 0                  STAQ    POOL+100
         2 000633   000000 236000 xsym               LDQ     SC_PTR
         2 000634   000011 402000 3                  MPY     9
         2 000635   000010 036000 3                  ADLQ    8
         2 000636   000034 235000 3                  LDA     28
         2 000637   000152 757000 0                  STAQ    POOL+98
         2 000640   000152 630400 0                  EPPR0   POOL+98
         2 000641   000030 631400 3                  EPPR1   24
         2 000642   000000 701000 xent               TSX1    ERROR_MSG
         2 000643   000000 011000                    NOP     0

     1838     2375    1       GOTO UN_WIND;

   2375  2 000644   000724 710000 2                  TRA     UN_WIND

     1839     2376    1   NO_SUCH_DBK:
     1840     2377    1       IF FIND_TYPE=%DONT_ERROR THEN RETURN; /* REQ IS DONT ERROR */

   2377  2 000645   000002 471400 0     NO_SUCH_DBK  LDP1    @FIND_TYPE
         2 000646   100000 235100                    LDA     0,,PR1
         2 000647   000022 115000 3                  CMPA    18
         2 000650   000653 601000 2                  TNZ     s:2379

   2377  2 000651   000000 221200 0                  LDX1  ! 0
         2 000652   000001 702211                    TSX2  ! 1,X1

     1841     2378
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:350  
     1842     2379    1       CALL BIN_CHAR(1,DBK);

   2379  2 000653   000001 236000 0                  LDQ     @DBK
         2 000654   000003 235000 3                  LDA     3
         2 000655   000152 757000 0                  STAQ    POOL+98
         2 000656   000152 630400 0                  EPPR0   POOL+98
         2 000657   000001 631400 3                  EPPR1   1
         2 000660   000000 701000 xent               TSX1    BIN_CHAR
         2 000661   000000 011000                    NOP     0

     1843     2380    1       IF DBK=CURR_OWNER THEN /* OWNER NOT FOUND */

   2380  2 000662   000001 470400 0                  LDP0    @DBK
         2 000663   000000 100500                    MLR     fill='000'O
         2 000664   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         2 000665   000152 000004 0                  ADSC9   POOL+98                  cn=0,n=4
         2 000666   000152 236000 0                  LDQ     POOL+98
         2 000667   000707 604000 2                  TMI     s:2384
         2 000670   000000 116000 xsym               CMPQ    CURR_OWNER
         2 000671   000707 601000 2                  TNZ     s:2384

     1844     2381    1           CALL ERROR_MSG(DBU#PABADLNK,SC_TBL.NAME(SC_PTR),,COMMAND_TEXT);

   2381  2 000672   000033 236000 3                  LDQ     27
         2 000673   000032 235000 3                  LDA     26
         2 000674   000154 757000 0                  STAQ    POOL+100
         2 000675   000000 236000 xsym               LDQ     SC_PTR
         2 000676   000011 402000 3                  MPY     9
         2 000677   000010 036000 3                  ADLQ    8
         2 000700   000036 235000 3                  LDA     30
         2 000701   000152 757000 0                  STAQ    POOL+98
         2 000702   000152 630400 0                  EPPR0   POOL+98
         2 000703   000030 631400 3                  EPPR1   24
         2 000704   000000 701000 xent               TSX1    ERROR_MSG
         2 000705   000000 011000                    NOP     0
         2 000706   000724 710000 2                  TRA     UN_WIND

PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:351  
     1845     2382    1       ELSE
     1846     2383    2       DO;

     1847     2384    2           CALL BIN_CHAR(2,CURR_OWNER);

   2384  2 000707   000005 630400 3                  EPPR0   5
         2 000710   000001 631400 3                  EPPR1   1
         2 000711   000000 701000 xent               TSX1    BIN_CHAR
         2 000712   000000 011000                    NOP     0

     1848     2385    2           CALL ERROR_MSG(DBU#PANOK,SC_TBL.NAME(SC_PTR));

   2385  2 000713   000000 236000 xsym               LDQ     SC_PTR
         2 000714   000011 402000 3                  MPY     9
         2 000715   000010 036000 3                  ADLQ    8
         2 000716   000040 235000 3                  LDA     32
         2 000717   000152 757000 0                  STAQ    POOL+98
         2 000720   000152 630400 0                  EPPR0   POOL+98
         2 000721   000001 631400 3                  EPPR1   1
         2 000722   000000 701000 xent               TSX1    ERROR_MSG
         2 000723   000000 011000                    NOP     0

     1849     2386    2           END;

     1850     2387    1   UN_WIND: UNWIND TO BREAK_CLEANUP;

   2387  2 000724   000000 100600       UN_WIND      MLR   ! fill='000'O
         2 000725   000000 000010 xsym               ADSC9   BREAK_CLEANUP            cn=0,n=8
         2 000726   000152 000010 0                  ADSC9   POOL+98                  cn=0,n=8
         2 000727   000152 237200 0                  LDAQ  ! POOL+98
         2 000730   000000 700200 xent               TSX0  ! X66_SUNWIND
         2 000731   000000 000200                    ZERO    0,128

     1851     2388    1   OUT_OF_AC_BOUND: /* SOME PTR OUT OF THE AREA THAT OWNER IS IN */
     1852     2389    1       CALL BIN_CHAR(1,CURR_OWNER);

   2389  2 000732   000041 630400 3     OUT_OF_AC_B* EPPR0   33
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:352  
         2 000733   000001 631400 3                  EPPR1   1
         2 000734   000000 701000 xent               TSX1    BIN_CHAR
         2 000735   000000 011000                    NOP     0

     1853     2390    1       CALL BIN_CHAR(2,DBK);

   2390  2 000736   000001 236000 0                  LDQ     @DBK
         2 000737   000005 235000 3                  LDA     5
         2 000740   000152 757000 0                  STAQ    POOL+98
         2 000741   000152 630400 0                  EPPR0   POOL+98
         2 000742   000001 631400 3                  EPPR1   1
         2 000743   000000 701000 xent               TSX1    BIN_CHAR
         2 000744   000000 011000                    NOP     0

     1854     2391    1       CALL ERROR_MSG(DBU#PAOUTAC,SC_TBL.NAME(SC_PTR));

   2391  2 000745   000000 236000 xsym               LDQ     SC_PTR
         2 000746   000011 402000 3                  MPY     9
         2 000747   000010 036000 3                  ADLQ    8
         2 000750   000044 235000 3                  LDA     36
         2 000751   000152 757000 0                  STAQ    POOL+98
         2 000752   000152 630400 0                  EPPR0   POOL+98
         2 000753   000001 631400 3                  EPPR1   1
         2 000754   000000 701000 xent               TSX1    ERROR_MSG
         2 000755   000000 011000                    NOP     0

     1855     2392    1       GOTO UN_WIND;

   2392  2 000756   000724 710000 2                  TRA     UN_WIND

   2387  2 000757                       WRIT_ERR     null
     1856     2393    1   WRIT_ERR: ;
     1857     2394    1   READ_ERR: X = KEYVSF.IDSKEY; /* PAGE NUMBER */

   2394  2 000757   000000 235000 xsym  READ_ERR     LDA     KEYVSF
         2 000760   000001 236000 xsym               LDQ     KEYVSF+1
         2 000761   000033 773000                    LRL     27
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:353  
         2 000762   000000 756000 xsym               STQ     X

     1858     2395    1       CALL BIN_CHAR(1,X);

   2395  2 000763   000045 630400 3                  EPPR0   37
         2 000764   000001 631400 3                  EPPR1   1
         2 000765   000000 701000 xent               TSX1    BIN_CHAR
         2 000766   000000 011000                    NOP     0

     1859     2396    1       CALL ERROR_MSG(DBU#PAERROR5,AC_TBL.NAME(AC_PTR),,COMMAND_TEXT);

   2396  2 000767   000033 236000 3                  LDQ     27
         2 000770   000032 235000 3                  LDA     26
         2 000771   000154 757000 0                  STAQ    POOL+100
         2 000772   000000 236000 xsym               LDQ     AC_PTR
         2 000773   000014 402003                    MPY     12,DU
         2 000774   000050 036000 3                  ADLQ    40
         2 000775   000051 235000 3                  LDA     41
         2 000776   000152 757000 0                  STAQ    POOL+98
         2 000777   000152 630400 0                  EPPR0   POOL+98
         2 001000   000030 631400 3                  EPPR1   24
         2 001001   000000 701000 xent               TSX1    ERROR_MSG
         2 001002   000000 011000                    NOP     0

     1860     2397    1       GOTO UN_WIND;

   2397  2 001003   000724 710000 2                  TRA     UN_WIND

     1861     2398        %EJECT;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:354  
     1862     2399        /*E* ERROR: ZIU-DBU#PANOK-C
     1863     2400        MESSAGE: Error: The *PA_REC_%U1 at DBK# %U2 does not exist,
     1864     2401                            while owner's DBK# is %U3.
     1865     2402                        Broken set is suspected.
     1866     2403                        Run REBUILD PA to reconstruct this set. */
     1867     2404        /*E* ERROR: ZIU-DBU#PABADLNK-C
     1868     2405        MESSAGE: Error: There is no such owner record for the set "%U1"
     1869     2406                        at DBK# %U2. %U3 aborted.
     1870     2407                        You should run REPAIR to fix the set before next shot. */
     1871     2408        /*E* ERROR: ZIU-DBU#PABADTYP-C
     1872     2409        MESSAGE: Error: The record type at DBK# %U2 is not a PA_REC
     1873     2410                        for the set "%U1".  %U3 aborted.
     1874     2411                        Run REBUILD PA to reconstruct this set. */
     1875     2412        /*E*  ERROR: ZIU-DBU#PANONPA-C
     1876     2413        MESSAGE: Error: The record at DBK# %U2 is not a *PA_REC_%U1.
     1877     2414                        The set is either not in PA mode or is broken.
     1878     2415                        In latter case, run REBUILD PA to fix the set.
     1879     2416                        CONVERT TO CHAIN aborted. */
     1880     2417        /*E*  ERROR: ZIU-DBU#PAERROR5-C
     1881     2418        MESSAGE: Error in READ/WRITE on the IDS page# %U2
     1882     2419                       of area "%U1".  %U3 aborted. */
     1883     2420        /*E*  ERROR: ZIU-DBU#PABUFER1-C
     1884     2421        MESSAGE: All buffers are locked; the
     1885     2422                                     set name is "%U1", owner DBK# is %U3 and
     1886     2423                                     number of PA levels is %U2.
     1887     2424                 <<<< SOFTWARE ERROR >>>>  */
     1888     2425        /*E*  ERROR: ZIU-DBU#PABUFER2-C
     1889     2426        MESSAGE: There is a buffer locked while a final
     1890     2427                          cleanup is performed. This is a warning.
     1891     2428                          Set name at error is "%U1" and owner DBK# is %U2.
     1892     2429                 <<<< SOFTWARE ERROR >>>>  */
     1893     2430        /*E*  ERROR: ZIU-DBU#PAOUTAC-C
     1894     2431        MESSAGE: Error: The set "%U1" has a pointer %U3 to a *PA_REC
     1895     2432                        but it is out of the area's bound where the
     1896     2433                        current owner DBK# %U2 resides.
     1897     2434                        The set is either broken or you tried to CONV_TO_CHAIN a
     1898     2435                        set that is already in chained mode. */
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:355  
     1899     2436        %EJECT;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:356  
     1900     2437    1   FLUSH_PAGES: ENTRY;

   2437  2 001004   000000 700200 xent  FLUSH_PAGES  TSX0  ! X66_STATIC_2
         2 001005   000000 000002 0                  ZERO    0,2

     1901     2438
     1902     2439    2       DO BUF_PTR=0 TO POOL_MAX-1;

   2439  2 001006   000000 450000 xsym               STZ     BUF_PTR
         2 001007   001016 710000 2                  TRA     s:2442+1

     1903     2440    2           IF POOL.MUST_WRITE(BUF_PTR) THEN

   2440  2 001010   000000 720000 xsym               LXL0    BUF_PTR
         2 001011   000010 234010 0                  SZN     POOL,X0
         2 001012   001015 605000 2                  TPL     s:2442

     1904     2441    2               CALL WRITE_A_PAGE ALTRET(WRIT_ERR);

   2441  2 001013   001026 701000 2                  TSX1    WRITE_A_PAGE
         2 001014   000757 702000 2                  TSX2    WRIT_ERR

     1905     2442    2           END;

   2442  2 001015   000000 054000 xsym               AOS     BUF_PTR
         2 001016   000000 236000 xsym               LDQ     BUF_PTR
         2 001017   000006 116000 0                  CMPQ    POOL_MAX
         2 001020   001010 604000 2                  TMI     s:2440

     1906     2443    1       POOL_MAX = 0; /* RESET COUNT */

   2443  2 001021   000006 450000 0                  STZ     POOL_MAX

     1907     2444    1       SWAP_PTR = -1; /* RESET POINTERS */

   2444  2 001022   000001 335007                    LCA     1,DL
         2 001023   000007 755000 0                  STA     SWAP_PTR
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:357  

     1908     2445    1       RETURN;

   2445  2 001024   000000 221200 0                  LDX1  ! 0
         2 001025   000001 702211                    TSX2  ! 1,X1

     1909     2446
     1910     2447    1   WRITE_A_PAGE: PROC ALTRET;

   2447  2 001026   000150 741200 0     WRITE_A_PAGE STX1  ! POOL+96

     1911     2448
     1912     2449    2       IF POOL.LOCKS(BUF_PTR)>0 THEN

   2449  2 001027   000000 720000 xsym               LXL0    BUF_PTR
         2 001030   000010 236010 0                  LDQ     POOL,X0
         2 001031   377400 316003                    CANQ    130816,DU
         2 001032   001053 600000 2                  TZE     s:2455

     1913     2450    3       DO;

     1914     2451    3           CALL BIN_CHAR(1,CURR_OWNER);

   2451  2 001033   000041 630400 3                  EPPR0   33
         2 001034   000001 631400 3                  EPPR1   1
         2 001035   000000 701000 xent               TSX1    BIN_CHAR
         2 001036   000000 011000                    NOP     0

     1915     2452    3           CALL ERROR_MSG(DBU#PABUFER2,SC_TBL.NAME(SC_PTR));

   2452  2 001037   000000 236000 xsym               LDQ     SC_PTR
         2 001040   000011 402000 3                  MPY     9
         2 001041   000010 036000 3                  ADLQ    8
         2 001042   000053 235000 3                  LDA     43
         2 001043   000152 757000 0                  STAQ    POOL+98
         2 001044   000152 630400 0                  EPPR0   POOL+98
         2 001045   000001 631400 3                  EPPR1   1
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:358  
         2 001046   000000 701000 xent               TSX1    ERROR_MSG
         2 001047   000000 011000                    NOP     0

     1916     2453    3           POOL.LOCKS(BUF_PTR)=0;

   2453  2 001050   000000 720000 xsym               LXL0    BUF_PTR
         2 001051   000020 236000 3                  LDQ     16
         2 001052   000010 356010 0                  ANSQ    POOL,X0

     1917     2454    3           END;

     1918     2455    2       DATA$=ADDR(I_O_BUF(BUF_PTR));

   2455  2 001053   000000 236000 xsym               LDQ     BUF_PTR
         2 001054   000034 736000                    QLS     28
         2 001055   000000 036000 xsym               ADLQ    I_O_BUF$
         2 001056   000000 756000 xsym               STQ     DATA$

     1919     2456    2       IF AC_TBL.CHECKSUM(AC_PTR) THEN

   2456  2 001057   000000 236000 xsym               LDQ     AC_PTR
         2 001060   000014 402007                    MPY     12,DL
         2 001061   000013 236006 xsym               LDQ     AC_TBL+11,QL
         2 001062   000400 316007                    CANQ    256,DL
         2 001063   001072 600000 2                  TZE     s:2461

     1920     2457    3       DO;

     1921     2458    3           CALL CHKSUM;

   2458  2 001064   000023 631400 3                  EPPR1   19
         2 001065   000000 701000 xent               TSX1    CHKSUM
         2 001066   000000 011000                    NOP     0

     1922     2459    3           DATA_PG.CHKSUM_WD=ICHKSUM;

   2459  2 001067   000000 470400 xsym               LDP0    DATA$
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:359  
         2 001070   000000 235000 xsym               LDA     ICHKSUM
         2 001071   000002 755100                    STA     2,,PR0

     1923     2460    3           END;

     1924     2461    2       DCBSF = AC_TBL.DCB#(AC_PTR);

   2461  2 001072   000000 236000 xsym               LDQ     AC_PTR
         2 001073   000014 402007                    MPY     12,DL
         2 001074   000013 720006 xsym               LXL0    AC_TBL+11,QL
         2 001075   000377 360003                    ANX0    255,DU
         2 001076   000000 740000 xsym               STX0    DCBSF

     1925     2462    2       FULLSF = %YES#;

   2462  2 001077   400000 236003                    LDQ     -131072,DU
         2 001100   000000 756000 xsym               STQ     FULLSF

     1926     2463    2       KEYSF = %YES#;

   2463  2 001101   000000 756000 xsym               STQ     KEYSF

     1927     2464    2       KEYVSF.LEN =4;

   2464  2 001102   004000 236003                    LDQ     2048,DU
         2 001103   000000 552040 xsym               STBQ    KEYVSF,'40'O

     1928     2465    2       KEYVSF.IDSKEY = POOL.PAGE#(BUF_PTR);

   2465  2 001104   000000 721000 xsym               LXL1    BUF_PTR
         2 001105   000000 636011                    EAQ     0,X1
         2 001106   000022 732000                    QRS     18
         2 001107   000044 402007                    MPY     36,DL
         2 001110   000000 116003                    CMPQ    0,DU
         2 001111   001113 605000 2                  TPL     s:2465+7
         2 001112   000044 036003                    ADLQ    36,DU
         2 001113   003000 061406                    CSR     bolr='003'O
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:360  
         2 001114   000010 210032 0                  BDSC    POOL,Q                   by=1,bit=1,n=26
         2 001115   000000 200044 xsym               BDSC    KEYVSF                   by=1,bit=0,n=36

     1929     2466    2       BUFLNSF = 4096;

   2466  2 001116   010000 235007                    LDA     4096,DL
         2 001117   000000 755000 xsym               STA     BUFLNSF

     1930     2467    2       BUFSF = VECTOR(I_O_BUF(BUF_PTR));

   2467  2 001120   000054 235000 3                  LDA     44
         2 001121   000000 236000 xsym               LDQ     BUF_PTR
         2 001122   000034 736000                    QLS     28
         2 001123   000000 036000 xsym               ADLQ    I_O_BUF$
         2 001124   000000 755000 xsym               STA     BUFSF
         2 001125   000001 756000 xsym               STQ     BUFSF+1

     1931     2468    2       AC_TBL.PAGE_WRITTEN(AC_PTR)='1'B; /* MARK AREA UPDATED */

   2468  2 001126   000000 236000 xsym               LDQ     AC_PTR
         2 001127   000014 402007                    MPY     12,DL
         2 001130   000000 622006                    EAX2    0,QL
         2 001131   000200 236003                    LDQ     128,DU
         2 001132   000013 256012 xsym               ORSQ    AC_TBL+11,X2

     1932     2469    2       CALL SYS_FUNC_WRIT ALTRET(ALT);

   2469  2 001133   000023 631400 3                  EPPR1   19
         2 001134   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         2 001135   001140 702000 2                  TSX2    ALT

     1933     2470    2       RETURN;

   2470  2 001136   000150 221200 0                  LDX1  ! POOL+96
         2 001137   000001 702211                    TSX2  ! 1,X1

     1934     2471    2   ALT: ALTRETURN;
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:361  

   2471  2 001140   000150 221200 0     ALT          LDX1  ! POOL+96
         2 001141   000000 702211                    TSX2  ! 0,X1

POOL
 Sect OctLoc
   0     010   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   0     150   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   3     000   000377 777777   000002 000000   000000 000001   000002 006000    ................
   3     004   000000 000002   000004 006000   000000 006000   000000 021763    ................
   3     010   000000 006000   000007 200000   000007 006000   000003 000000    ................
   3     014   000000 006000   000005 006000   000002 006000   377777 777777    ................
   3     020   400377 777777   000001 777776   777777 777777   000000 000000    ................
   3     024   000007 600000   000005 400000   000000 022000   000026 006000    ................
   3     030   000004 000000   000000 021754   000000 006014   000000 006000    ................
   3     034   000031 006000   000000 021742   000035 006000   000000 021740    ................
   3     040   000037 006000   000002 006000   000000 006000   000000 022001    ................
   3     044   000043 006000   000002 006000   000000 006000   000000 021736    .#..............
   3     050   000003 406000   000047 006000   000000 021764   000052 006000    .....'.......*..
   3     054   001777 777640                                                    ....
     1935     2472    2   END WRITE_A_PAGE;
     1936     2473
     1937     2474    1   END FIND_DIRECT;
     1938     2475        %EOD;

PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:362  
--  Include file information  --

   CP_6_SUBS.:LIB_E05  is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure FIND_DIRECT.

   Procedure FIND_DIRECT requires 610 words for executable code.
   Procedure FIND_DIRECT is declared NOAUTO and requires 112 words of local(STATIC) storage.
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:363  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:364  
          MINI XREF LISTING

AC_PTR
       245**DCL      2262>>ASSIGN   2262>>ASSIGN   2262>>ASSIGN   2263>>ASSIGN   2263>>ASSIGN   2265>>IF
      2298>>ASSIGN   2396>>CALL     2456>>IF       2461>>ASSIGN   2468>>ASSIGN
AC_TBL.BASE_DBK
       250**DCL      2262>>ASSIGN   2263>>ASSIGN
AC_TBL.CHECKSUM
       259**DCL      2456>>IF
AC_TBL.DCB#
       260**DCL      2298>>ASSIGN   2461>>ASSIGN
AC_TBL.LPP
       255**DCL      2262>>ASSIGN   2262>>ASSIGN   2263>>ASSIGN
AC_TBL.NAME
       254**DCL      2396<>CALL
AC_TBL.NUM_DBPG
       253**DCL      2265>>IF
AC_TBL.PAGE_WRITTEN
       256**DCL      2468<<ASSIGN
ALT IN PROCEDURE WRITE_A_PAGE
      2471**LABEL    2469--CALLALT
BAD_TYPE
      2368**LABEL    2312--GOTO
BIN_CHAR
      1011**DCL-ENT  2280--CALL     2281--CALL     2370--CALL     2379--CALL     2384--CALL     2389--CALL
      2390--CALL     2395--CALL     2451--CALL
BREAK_CLEANUP
        27**DCL      2387>>UNWIND
BUFLNSF
       771**DCL      2466<<ASSIGN
BUFSF
       772**DCL      2467<<ASSIGN
BUF_PTR
      1026**DCL      2267<<DOINDEX  2268>>IF       2274<<ASSIGN   2275>>DOWHILE  2275>>DOWHILE  2276<<ASSIGN
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:365  
      2276>>ASSIGN   2278>>IF       2287>>ASSIGN   2289>>ASSIGN   2290>>IF       2295<<ASSIGN   2299<>CALL
      2300>>ASSIGN   2301>>ASSIGN   2302>>ASSIGN   2305>>ASSIGN   2315>>ASSIGN   2315>>ASSIGN   2316>>ASSIGN
      2319>>ASSIGN   2439<<DOINDEX  2440>>IF       2449>>IF       2453>>ASSIGN   2455>>ASSIGN   2465>>ASSIGN
      2467>>ASSIGN
CHAR_V
      1032**DCL      2363<<ASSIGN
CHAR_V.REC
      1033**DCL      2359<<ASSIGN   2359>>ASSIGN
CHKSUM
      1013**DCL-ENT  2458--CALL
COMMAND_TEXT
      1028**DCL      2374<>CALL     2381<>CALL     2396<>CALL
COUNTSF
       822**DCL       823--REDEF
CURR_LEVEL.BUF_PTR
      1022**DCL      2316<<ASSIGN
CURR_LN
      1025**DCL      2263<<ASSIGN   2307>>ASSIGN   2308>>IF       2331>>IF       2334>>ASSIGN   2335>>ASSIGN
      2339>>DOWHILE  2343>>ASSIGN   2344>>ASSIGN
CURR_OWNER
      1027**DCL      2281<>CALL     2311>>IF       2380>>IF       2384<>CALL     2389<>CALL     2451<>CALL
DATA$
       992**DCL       993--IMP-PTR  2305<<ASSIGN   2307>>ASSIGN   2308>>IF       2310>>ASSIGN   2330>>ASSIGN
      2331>>IF       2334>>ASSIGN   2335>>ASSIGN   2339>>DOWHILE  2339>>DOWHILE  2341>>ASSIGN   2343>>ASSIGN
      2343>>ASSIGN   2344>>ASSIGN   2349>>DOINDEX  2350>>IF       2350>>IF       2352>>ASSIGN   2352>>ASSIGN
      2356>>ASSIGN   2356>>ASSIGN   2357>>ASSIGN   2357>>ASSIGN   2455<<ASSIGN   2459>>ASSIGN
DATA_PG.ACT_DATA
      1005**DCL      1006--REDEF    1007--REDEF    1008--REDEF
DATA_PG.ACT_DATA_18
      1006**DCL      2307>>ASSIGN
DATA_PG.CHKSUM_WD
       997**DCL      2459<<ASSIGN
DATA_PG.OFFSET
      1007**DCL      2331>>IF       2335<<ASSIGN   2339>>DOWHILE  2339>>DOWHILE  2341>>ASSIGN   2343<<ASSIGN
      2343>>ASSIGN   2344<<ASSIGN   2350>>IF       2350>>IF       2352<<ASSIGN   2352>>ASSIGN
DATA_PG.OFF_LN.FIR
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:366  
      1003**DCL      2330>>ASSIGN   2334<<ASSIGN
DATA_PG.OFF_LN.SEC
      1004**DCL      2308>>IF       2349>>DOINDEX  2356>>ASSIGN
DATA_PG.PG_SZ.SEC
      1000**DCL      2356>>ASSIGN   2357<<ASSIGN   2357>>ASSIGN
DBK
        25**DCL        19--PROC     2262>>ASSIGN   2263>>ASSIGN   2311>>IF       2370<>CALL     2379<>CALL
      2380>>IF       2390<>CALL
DCBSF
       751**DCL      2298<<ASSIGN   2461<<ASSIGN
ENCRP_SEEDSF
       780**DCL       781--REDEF
ERRCODESF
       782**DCL       787--REDEF
ERROR_MSG
      1012**DCL-ENT  2282--CALL     2372--CALL     2374--CALL     2381--CALL     2385--CALL     2391--CALL
      2396--CALL     2452--CALL
FIDSF_RD
       798**DCL       799--REDEF
FIND_TYPE
        26**DCL        19--PROC     2286>>IF       2313>>IF       2318>>IF       2368>>IF       2377>>IF
FULLSF
       769**DCL      2462<<ASSIGN
HELPCODE
       816**DCL       821--REDEF
ICHKSUM
       881**DCL       882--REDEF    2459>>ASSIGN
I_O_BUF
       860**DCL      2305--ASSIGN   2455--ASSIGN   2467--ASSIGN
I_O_BUF$
       859**DCL       860--IMP-PTR  2305>>ASSIGN   2455>>ASSIGN   2467>>ASSIGN
KEYSF
       753**DCL      2463<<ASSIGN
KEYVSF
       754**DCL       759--REDEF
KEYVSF.IDSKEY
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:367  
       757**DCL      2394>>ASSIGN   2465<<ASSIGN
KEYVSF.LEN
       755**DCL      2464<<ASSIGN
KEYVSF.WD_ONE
       756**DCL       757--REDEF
KEY_TBL.EIS
       237**DCL       238--REDEF
LEVEL#
      1015**DCL      2316>>ASSIGN
MSGCODE
       788**DCL       789--REDEF
NBUFS
      1044**DCL      2272>>IF       2274>>ASSIGN   2276>>ASSIGN
NO_OF_LEVELS
      1016**DCL      2280>>CALL
NO_SUCH_DBK
      2377**LABEL    2309--GOTO
OUT_OF_AC_BOUND
      2389**LABEL    2265--GOTO
PAGE_HIT
      2305**LABEL    2269--GOTO
POOL.LOCKS
      1042**DCL      2275>>DOWHILE  2301<<ASSIGN   2315<<ASSIGN   2315>>ASSIGN   2449>>IF       2453<<ASSIGN
POOL.MUST_WRITE
      1041**DCL      2290>>IF       2300<<ASSIGN   2319<<ASSIGN   2440>>IF
POOL.PAGE#
      1043**DCL      2268>>IF       2302<<ASSIGN   2465>>ASSIGN
POOL_MAX
      1038**DCL      2267>>DOINDEX  2272>>IF       2295>>ASSIGN   2296<<ASSIGN   2296>>ASSIGN   2439>>DOINDEX
      2443<<ASSIGN
RC_TBL.NXPNT_EIS
       220**DCL       221--REDEF
READ_DB
       887**DCL-ENT  2299--CALL
READ_ERR
      2394**LABEL    2299--CALLALT
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:368  
REC.SIZE
      1037**DCL      2348>>ASSIGN
REC.TYPE
      1036**DCL      2311>>IF
REC$
       840**DCL       863--IMP-PTR  1034--IMP-PTR  2310<<ASSIGN   2311>>IF       2348>>ASSIGN   2359>>ASSIGN
      2359>>ASSIGN   2360<<ASSIGN   2360>>ASSIGN   2363>>ASSIGN
REC_DATA_LN
       868**DCL       867--IMP-SIZ
REC_SIZE
      1030**DCL      2348<<ASSIGN   2352>>ASSIGN   2357>>ASSIGN   2358>>ASSIGN   2359>>ASSIGN   2361>>ASSIGN
SC_PTR
       201**DCL      2282>>CALL     2311>>IF       2364>>ASSIGN   2364>>ASSIGN   2372>>CALL     2374>>CALL
      2381>>CALL     2385>>CALL     2391>>CALL     2452>>CALL
SC_TBL.COUNT
       216**DCL      2364<<ASSIGN   2364>>ASSIGN
SC_TBL.KEY_PTR
       214**DCL       215--REDEF
SC_TBL.NAME
       203**DCL      2282<>CALL     2372<>CALL     2374<>CALL     2381<>CALL     2385<>CALL     2391<>CALL
      2452<>CALL
SC_TBL.PA_TYPE
       207**DCL      2311>>IF
SWAP_PTR
      1039**DCL      2274>>ASSIGN   2275>>DOWHILE  2278>>IF       2287<<ASSIGN   2289<<ASSIGN   2444<<ASSIGN
SYS_FUNC_WRIT
       886**DCL-ENT  2469--CALL
UN_WIND
      2387**LABEL    2283--GOTO     2375--GOTO     2392--GOTO     2397--GOTO
WRITE_A_PAGE
      2447**PROC     2291--CALL     2441--CALL
WRIT_ERR
      2387**LABEL    2291--CALLALT  2441--CALLALT
X
       857**DCL      2307<<ASSIGN   2308>>IF       2310>>ASSIGN   2350>>IF       2358>>ASSIGN   2394<<ASSIGN
      2395<>CALL
PL6.E3A0      #005=FIND_DIRECT File=ZIU$COMPACT.:ZIC0TSI                         FRI 09/05/97 13:11 Page:369  
Y
      1029**DCL      2330<<ASSIGN   2331>>IF       2331>>IF       2335>>ASSIGN   2339>>DOWHILE  2339>>DOWHILE
      2341<<ASSIGN   2341>>ASSIGN   2343>>ASSIGN   2344>>ASSIGN   2349<<DOINDEX  2350>>IF       2350>>IF
      2352>>ASSIGN   2352>>ASSIGN   2356<<ASSIGN   2358>>ASSIGN
Z
      1031**DCL      1033--IMP-SIZ  2262<<ASSIGN   2263>>ASSIGN   2265>>IF       2268>>IF       2299<>CALL
      2302>>ASSIGN   2358<<ASSIGN   2359>>ASSIGN   2359>>ASSIGN   2360>>ASSIGN   2361<<ASSIGN   2363>>ASSIGN
ZI$DIR.ALTKEY
       491**DCL       492--REDEF     493--REDEF
ZI$DIR.AREAFID
       457**DCL       458--REDEF
ZI$DIR.CODE
       473**DCL      2371>>IF
ZI$DIR.DATE
       496**DCL       500--REDEF
ZI$DIR.DEST_SEED
       452**DCL       453--REDEF     454--REDEF
ZI$DIR.ENCP_SEED
       449**DCL       450--REDEF     451--REDEF
ZI$DIR.REPRT_ZERO
       483**DCL       484--REDEF
ZI$DIR.SCHFID
       455**DCL       456--REDEF
ZI$DIR.TIME
       501**DCL       506--REDEF

PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:370  
     1939        1        /*T***********************************************************/
     1940        2        /*T*                                                         */
     1941        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1942        4        /*T*                                                         */
     1943        5        /*T***********************************************************/
     1944        6
     1945        7
     1946        8        /*
     1947        9              EXTERNAL SUB  CREATE_PAREC
     1948       10              INPUT:  LEVEL#   AND  THE TABLE  CURR_LEVEL
     1949       11                      IF LEVEL#=0 THEN WE ARE CREATING A PA_REC OF
     1950       12                      HIGHEST LEVEL, OTHERWISE A PA_REC IN LOWER LEVEL
     1951       13              UPON RETURN, CURR_LEVEL.DBK AND CURR_LEVEL.FIRST_PA WILL BE SETUP
     1952       14              SC_PTR - WILL GIVE INFO ABOUT THE SIZE,TYPE OF THE PA
     1953       15        */
     1954       16        CREATE_PAREC: PROC NOAUTO;
     1955       17
     1956       18    1   DCL LEVEL# SBIN SYMREF ALIGNED;
     1957       19    1   DCL NO_OF_LEVELS SBIN SYMREF ALIGNED;
     1958       20    1   DCL 1 CURR_LEVEL(0:31) SYMREF ALIGNED,
     1959       21    1         2 DBK UBIN WORD ALIGNED,
     1960       22    1         2 FIRST_PA UBIN ALIGNED,
     1961       23    1         2 ENT_NO UBIN HALF UNAL,
     1962       24    1         2 DUPIND BIT(1) UNAL,
     1963       25    1         2 BUF_PTR UBIN(8) UNAL,
     1964       26    1         2 * UBIN BYTE UNAL,
     1965       27    1         2 REC$ PTR ALIGNED;
     1966       28    1   DCL POOL_MAX SBIN WORD SYMREF ALIGNED;
     1967       29    1   DCL SWAP_PTR SBIN WORD SYMREF ALIGNED;
     1968       30    1   DCL 1 POOL(0:95) SYMREF ALIGNED,
     1969       31    1         2 MUST_WRITE BIT(1) UNAL,
     1970       32    1         2 LOCKS UBIN(9) UNAL,
     1971       33    1         2 PAGE# UBIN(26) UNAL;
     1972       34    1   DCL CURR_OWNER SBIN SYMREF ALIGNED;
     1973       35    1   DCL BUF_PTR UBIN SYMREF ALIGNED;
     1974       36    1   DCL COMMAND_TEXT CHAR(9) SYMREF ALIGNED;
     1975       37    1   DCL BREAK_CLEANUP BIT(72) SYMREF ALIGNED;
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:371  
     1976       38
     1977       39    1   DCL BASE_PAGE SBIN STATIC ALIGNED;
     1978       40    1   DCL START_PAGE SBIN STATIC ALIGNED;
     1979       41    1   DCL Y SBIN STATIC ALIGNED;
     1980       42    1   DCL SPACE_NEEDED SBIN STATIC ALIGNED;
     1981       43    1   DCL 1 CHAR_V BASED(REC$) CALIGNED,
     1982       44    1         2 * CHAR(16) UNAL; /* ONLY INIT FIRST 16 BYTES OF NEW PA REC */
     1983       45
     1984       46    1   DCL FIND_DIRECT ENTRY(2);
     1985       47    1   DCL ERROR_MSG ENTRY(4);
     1986       48
     1987       49        %INCLUDE ZI_GLOBAL_DBUTIL;
     1988      227         %SYS_FUNC;
     1989      319         %MISC_DCLS;
     1990      372         %PAREC(STCLASS=SYMREF);
     1991      399        %INCLUDE ZI_DBU_XREF;
     1992      566         %PA_XREF_TBLS;
     1993      632        %INCLUDE ZI$PG_STRUCTS;
     1994      735         %DATA_PG;
     1995      754        %INCLUDE ZI_ERRORS_SUBS;
     1996     1274
     1997     1275        %EQU DONT_LOCK = 0;
     1998     1276        %EQU DONT_ERROR=-1;
     1999     1277
     2000     1278        %EJECT;
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:372  
     2001     1279    1       IF LEVEL#=0 THEN /* IF CREATING HIGHEST LEVEL OF PA */
     2002     1280    1           CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK); /* USE OWNER AS BASE */
     2003     1281    1       ELSE
     2004     1282    1           CALL FIND_DIRECT(CURR_LEVEL.DBK(LEVEL#),%DONT_LOCK);
     2005     1283         /* USE PRIOR IN LEVEL */
     2006     1284    1       BASE_PAGE=DATA_PG.CON_INTRVAL; /* TRY TO FIND SPACE */
     2007     1285    1       START_PAGE = BASE_PAGE; /* FOR THIS NEW PA */
     2008     1286    1       SPACE_NEEDED=SC_TBL.PA_RECSIZE(SC_PTR); /* SPACE REQUIRED */
     2009     1287        /*
     2010     1288                Do until we find a page it will fit on.  This consists
     2011     1289                of making sure there is enough room on the page for the
     2012     1290                record, that there is a line number available on the page
     2013     1291                and that if we are on the last page the line number
     2014     1292                available is less than the max for the area.
     2015     1293        */
     2016     1294    2       DO WHILE(DATA_PG.PG_SZ.SEC<SPACE_NEEDED+2 OR /* +2 offset array entry */
     2017     1295    2          (DATA_PG.OFF_LN.FIR=0 AND DATA_PG.OFFSET(2035)<131072 AND
     2018     1296    2          (DATA_PG.OFF_LN.SEC+1>=AC_TBL.LPP(AC_PTR) OR
     2019     1297    2          (BASE_PAGE=AC_TBL.NUM_DBPG(AC_PTR) AND
     2020     1298    2          DATA_PG.OFF_LN.SEC+1>=AC_TBL.LNLP(AC_PTR)))));
     2021     1299    2           BASE_PAGE=MOD(BASE_PAGE,AC_TBL.NUM_DBPG(AC_PTR))+1;
     2022     1300    2           IF BASE_PAGE=START_PAGE THEN /* ALL PAGES CHECKED NO SPACE */
     2023     1301    3           DO;
     2024     1302    3               CALL ERROR_MSG(DBU#PANOSPS,AC_TBL.NAME(AC_PTR)
     2025     1303    3                  ,SC_TBL.NAME(SC_PTR)
     2026     1304    3                  ,COMMAND_TEXT);
     2027     1305    3               UNWIND TO BREAK_CLEANUP; /* ABORT JOB */
     2028     1306    3               END;
     2029     1307    2           CALL FIND_DIRECT(BASE_PAGE*AC_TBL.LPP(AC_PTR)+
     2030     1308    2              AC_TBL.BASE_DBK(AC_PTR),%DONT_ERROR);
     2031     1309    2           END; /* FOUND A PAGE WITH SPACE AND DBKEY AVAILABLE */
     2032     1310
     2033     1311    1       RE=4084-(DATA_PG.PG_SZ.SEC+DATA_PG.OFF_LN.SEC*2+2);
     2034     1312         /* OFFSET FOR NEW PA */
     2035     1313    1       Y=DATA_PG.OFF_LN.FIR; /* FIRST AVAIL LINE */
     2036     1314    1       IF Y=0 AND DATA_PG.OFFSET(2035)<131072 THEN /* MAKE A NEW OFF_ARRAY */
     2037     1315    2       DO;
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:373  
     2038     1316    2           DATA_PG.PG_SZ.SEC=DATA_PG.PG_SZ.SEC-SPACE_NEEDED-2;
     2039     1317    2           Y=DATA_PG.OFF_LN.SEC+1; /* CURRENT HIGH LINE + 1 */
     2040     1318    2           DATA_PG.OFF_LN.SEC=Y; /* UPDATE CURRENT HIGH LINE */
     2041     1319    2           END;
     2042     1320    1       ELSE
     2043     1321    2       DO; /* FIND A AVAILABLE LINE */
     2044     1322    2           DATA_PG.PG_SZ.SEC=DATA_PG.PG_SZ.SEC-SPACE_NEEDED;
     2045     1323    2           DATA_PG.OFF_LN.FIR=DATA_PG.OFFSET(2035-Y)-131072;
     2046     1324    2           END;
     2047     1325
     2048     1326         /* Y IS THE LINE# AND RE IS THE OFFSET VALUE */
     2049     1327    1       DATA_PG.OFFSET(2035-Y) = RE;
     2050     1328    1       REC$ = PINCRC(DATA$,RE+12);
     2051     1329    1       REC$ -> CHAR_V = '0'B; /* INIT THE RECORD IN CASE GARBAGE THER */
     2052     1330    1       CURR_LEVEL.DBK(LEVEL#)=(BASE_PAGE-1)*AC_TBL.LPP(AC_PTR)+
     2053     1331    1          AC_TBL.BASE_DBK(AC_PTR)+Y+1;
     2054     1332    1       CURR_LEVEL.REC$(LEVEL#)=REC$;
     2055     1333    1       CURR_LEVEL.BUF_PTR(LEVEL#)=BUF_PTR;
     2056     1334    1       POOL.MUST_WRITE(BUF_PTR)='1'B; /* SET PAGE MUST WRITE */
     2057     1335    1       POOL.LOCKS(BUF_PTR)=POOL.LOCKS(BUF_PTR)+1;
     2058     1336    1       PA_REC.TYPE=SC_TBL.PA_TYPE(SC_PTR);
     2059     1337    1       PA_REC.SIZE=SPACE_NEEDED; /* SET UP PA_REC HEADER */
     2060     1338    1       IF LEVEL#<NO_OF_LEVELS THEN
     2061     1339    1           PA_REC.NOT_LOWEST_LEVEL = '1'B;
     2062     1340    1       SC_TBL.COUNT(SC_PTR)=SC_TBL.COUNT(SC_PTR)-1;
     2063     1341        /*E* ERROR: ZIU-DBU#PANOSPS-C
     2064     1342        MESSAGE: Error: Ran out of space in area "%U1" when creating
     2065     1343                        a new *PA_REC_%U2. %U3 aborted. */
     2066     1344    1   END CREATE_PAREC;
     2067     1345        %EOD;

PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:374  
--  Include file information  --

   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CREATE_PAREC.

   Procedure CREATE_PAREC requires 260 words for executable code.
   Procedure CREATE_PAREC is declared NOAUTO and requires 10 words of local(STATIC) storage.

PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:375  

 Object Unit name= CREATE_PAREC                               File name= ZIU$COMPACT.:ZIC0TOU
 UTS= SEP 05 '97 13:11:18.28 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    10     12  CREATE_PAREC
    1   DCB   even  none     0      0  M$LO
    2   Proc  even  none   260    404  CREATE_PAREC
    3  RoData even  none    16     20  CREATE_PAREC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  CREATE_PAREC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 FIND_DIRECT
         yes           Std       4 ERROR_MSG
                       nStd      0 X66_SUNWIND
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:376  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     LEVEL#                                NO_OF_LEVELS                          CURR_LEVEL
     POOL_MAX                              SWAP_PTR                              POOL
     CURR_OWNER                            BUF_PTR                               COMMAND_TEXT
     BREAK_CLEANUP                         BLKLSF                                KEYLSF
     KEYXSF                                DCBSF                                 ORGSF
     KEYSF                                 KEYVSF                                ACSSF
     NOTIMESF                              FUNSF                                 ASNSF
     TESTSF                                XTENSIZESF                            DISPSF
     WAITSF                                VFCSF                                 FULLSF
     BKUPSF                                BUFLNSF                               BUFSF
     SOURCESF                              DESTSF                                DATESF
     TIMESF                                UTSSF                                 DAYSF
     TSTAMPSF                              ENCRP_SEEDSF                          ERRCODESF
     MSGCODE                               INCL_ERR                              ERR_INSERT
     FIDSF_RD                              ACNT                                  EXISTSF
     SHARESF                               DCBNMSF                               KEYRSF
     NO_KEYSF                              REASGNSF                              CARRY_ATTRIBUTESF
     SUBMESSF                              SPKY_OPNSF                            POSSF
     ERRFLGSF                              MERGESF                               FSA_FLAG
     RELGSF                                UNUSED                                HELPCODE
     COUNTSF                               INDEXSF                               GAP
     PSNSF                                 ACNTSF                                KEY_SHADWSF
     REC$                                  RB                                    RE
     IE                                    IB                                    CNT
     ICNT                                  RCNT                                  SCNT
     FIRST_SET                             RETCNT                                DMPCNT
     KCNT                                  ACNT_IDX                              I
     J                                     K                                     X
     STEPCC                                I_O_BUF$                              OUT_INDX
     I_O_SIZE                              REC_DATA_LN                           M$LO
     B$TCB$                                B$ROS$                                B$JIT$
     KEYFID                                I_O_KEY                               RESTART
     BREAK_FLAG                            ICHKSUM                               ITMCNT
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:377  
     GAP1                                  ENTRY$                                GROUP$
     PTR_LEN                               KEY_LEN                               TYPE
     SC_PTR                                SC_TBL                                RC_PTR
     RC_TBL                                KEY_PTR                               KEY_TBL
     AC_PTR                                FIRST_TIME_CALLED                     BASE_DBK
     AC_TBL                                DATA$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:378  


     1939        1        /*T***********************************************************/
     1940        2        /*T*                                                         */
     1941        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1942        4        /*T*                                                         */
     1943        5        /*T***********************************************************/
     1944        6
     1945        7
     1946        8        /*
     1947        9              EXTERNAL SUB  CREATE_PAREC
     1948       10              INPUT:  LEVEL#   AND  THE TABLE  CURR_LEVEL
     1949       11                      IF LEVEL#=0 THEN WE ARE CREATING A PA_REC OF
     1950       12                      HIGHEST LEVEL, OTHERWISE A PA_REC IN LOWER LEVEL
     1951       13              UPON RETURN, CURR_LEVEL.DBK AND CURR_LEVEL.FIRST_PA WILL BE SETUP
     1952       14              SC_PTR - WILL GIVE INFO ABOUT THE SIZE,TYPE OF THE PA
     1953       15        */
     1954       16        CREATE_PAREC: PROC NOAUTO;

     16  2 000000   000000 741200 0     CREATE_PAREC STX1  ! 0

     1955       17
     1956       18    1   DCL LEVEL# SBIN SYMREF ALIGNED;
     1957       19    1   DCL NO_OF_LEVELS SBIN SYMREF ALIGNED;
     1958       20    1   DCL 1 CURR_LEVEL(0:31) SYMREF ALIGNED,
     1959       21    1         2 DBK UBIN WORD ALIGNED,
     1960       22    1         2 FIRST_PA UBIN ALIGNED,
     1961       23    1         2 ENT_NO UBIN HALF UNAL,
     1962       24    1         2 DUPIND BIT(1) UNAL,
     1963       25    1         2 BUF_PTR UBIN(8) UNAL,
     1964       26    1         2 * UBIN BYTE UNAL,
     1965       27    1         2 REC$ PTR ALIGNED;
     1966       28    1   DCL POOL_MAX SBIN WORD SYMREF ALIGNED;
     1967       29    1   DCL SWAP_PTR SBIN WORD SYMREF ALIGNED;
     1968       30    1   DCL 1 POOL(0:95) SYMREF ALIGNED,
     1969       31    1         2 MUST_WRITE BIT(1) UNAL,
     1970       32    1         2 LOCKS UBIN(9) UNAL,
     1971       33    1         2 PAGE# UBIN(26) UNAL;
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:379  
     1972       34    1   DCL CURR_OWNER SBIN SYMREF ALIGNED;
     1973       35    1   DCL BUF_PTR UBIN SYMREF ALIGNED;
     1974       36    1   DCL COMMAND_TEXT CHAR(9) SYMREF ALIGNED;
     1975       37    1   DCL BREAK_CLEANUP BIT(72) SYMREF ALIGNED;
     1976       38
     1977       39    1   DCL BASE_PAGE SBIN STATIC ALIGNED;
     1978       40    1   DCL START_PAGE SBIN STATIC ALIGNED;
     1979       41    1   DCL Y SBIN STATIC ALIGNED;
     1980       42    1   DCL SPACE_NEEDED SBIN STATIC ALIGNED;
     1981       43    1   DCL 1 CHAR_V BASED(REC$) CALIGNED,
     1982       44    1         2 * CHAR(16) UNAL; /* ONLY INIT FIRST 16 BYTES OF NEW PA REC */
     1983       45
     1984       46    1   DCL FIND_DIRECT ENTRY(2);
     1985       47    1   DCL ERROR_MSG ENTRY(4);
     1986       48
     1987       49        %INCLUDE ZI_GLOBAL_DBUTIL;
     1988      227         %SYS_FUNC;
     1989      319         %MISC_DCLS;
     1990      372         %PAREC(STCLASS=SYMREF);
     1991      399        %INCLUDE ZI_DBU_XREF;
     1992      566         %PA_XREF_TBLS;
     1993      632        %INCLUDE ZI$PG_STRUCTS;
     1994      735         %DATA_PG;
     1995      754        %INCLUDE ZI_ERRORS_SUBS;
     1996     1274
     1997     1275        %EQU DONT_LOCK = 0;
     1998     1276        %EQU DONT_ERROR=-1;
     1999     1277
     2000     1278        %EJECT;
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:380  
     2001     1279    1       IF LEVEL#=0 THEN /* IF CREATING HIGHEST LEVEL OF PA */

   1279  2 000001   000000 235000 xsym               LDA     LEVEL#
         2 000002   000010 601000 2                  TNZ     s:1282

     2002     1280    1           CALL FIND_DIRECT(CURR_OWNER,%DONT_LOCK); /* USE OWNER AS BASE */

   1280  2 000003   000002 630400 3                  EPPR0   2
         2 000004   000000 631400 3                  EPPR1   0
         2 000005   000000 701000 xent               TSX1    FIND_DIRECT
         2 000006   000000 011000                    NOP     0
         2 000007   000022 710000 2                  TRA     s:1284

     2003     1281    1       ELSE
     2004     1282    1           CALL FIND_DIRECT(CURR_LEVEL.DBK(LEVEL#),%DONT_LOCK);

   1282  2 000010   000003 236000 3                  LDQ     3
         2 000011   000007 756000 0                  STQ     SPACE_NEEDED+3
         2 000012   000000 236000 xsym               LDQ     LEVEL#
         2 000013   000024 736000                    QLS     20
         2 000014   000004 036000 3                  ADLQ    4
         2 000015   000006 756000 0                  STQ     SPACE_NEEDED+2
         2 000016   000006 630400 0                  EPPR0   SPACE_NEEDED+2
         2 000017   000000 631400 3                  EPPR1   0
         2 000020   000000 701000 xent               TSX1    FIND_DIRECT
         2 000021   000000 011000                    NOP     0

     2005     1283         /* USE PRIOR IN LEVEL */
     2006     1284    1       BASE_PAGE=DATA_PG.CON_INTRVAL; /* TRY TO FIND SPACE */

   1284  2 000022   000000 470400 xsym               LDP0    DATA$
         2 000023   000004 235100                    LDA     4,,PR0
         2 000024   000001 755000 0                  STA     BASE_PAGE

     2007     1285    1       START_PAGE = BASE_PAGE; /* FOR THIS NEW PA */

   1285  2 000025   000002 755000 0                  STA     START_PAGE
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:381  

     2008     1286    1       SPACE_NEEDED=SC_TBL.PA_RECSIZE(SC_PTR); /* SPACE REQUIRED */

   1286  2 000026   000000 236000 xsym               LDQ     SC_PTR
         2 000027   000405 402007                    MPY     261,DL
         2 000030   000000 116003                    CMPQ    0,DU
         2 000031   000033 605000 2                  TPL     s:1286+5
         2 000032   000044 036003                    ADLQ    36,DU
         2 000033   003000 061406                    CSR     bolr='003'O
         2 000034   000004 500022 xsym               BDSC    SC_TBL+4,Q               by=2,bit=8,n=18
         2 000035   000004 000044 0                  BDSC    SPACE_NEEDED             by=0,bit=0,n=36

     2009     1287        /*
     2010     1288                Do until we find a page it will fit on.  This consists
     2011     1289                of making sure there is enough room on the page for the
     2012     1290                record, that there is a line number available on the page
     2013     1291                and that if we are on the last page the line number
     2014     1292                available is less than the max for the area.
     2015     1293        */
     2016     1294    2       DO WHILE(DATA_PG.PG_SZ.SEC<SPACE_NEEDED+2 OR /* +2 offset array entry */

   1294  2 000036   000124 710000 2                  TRA     s:1309

     2017     1295    2          (DATA_PG.OFF_LN.FIR=0 AND DATA_PG.OFFSET(2035)<131072 AND
     2018     1296    2          (DATA_PG.OFF_LN.SEC+1>=AC_TBL.LPP(AC_PTR) OR
     2019     1297    2          (BASE_PAGE=AC_TBL.NUM_DBPG(AC_PTR) AND
     2020     1298    2          DATA_PG.OFF_LN.SEC+1>=AC_TBL.LNLP(AC_PTR)))));
     2021     1299    2           BASE_PAGE=MOD(BASE_PAGE,AC_TBL.NUM_DBPG(AC_PTR))+1;

   1299  2 000037   000000 236000 xsym               LDQ     AC_PTR
         2 000040   000014 402007                    MPY     12,DL
         2 000041   000003 236006 xsym               LDQ     AC_TBL+3,QL
         2 000042   000022 772000                    QRL     18
         2 000043   000006 756000 0                  STQ     SPACE_NEEDED+2
         2 000044   000001 236000 0                  LDQ     BASE_PAGE
         2 000045   000006 506000 0                  DIV     SPACE_NEEDED+2
         2 000046   000001 035007                    ADLA    1,DL
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:382  
         2 000047   000001 755000 0                  STA     BASE_PAGE

     2022     1300    2           IF BASE_PAGE=START_PAGE THEN /* ALL PAGES CHECKED NO SPACE */

   1300  2 000050   000001 236000 0                  LDQ     BASE_PAGE
         2 000051   000002 116000 0                  CMPQ    START_PAGE
         2 000052   000100 601000 2                  TNZ     s:1307

     2023     1301    3           DO;

     2024     1302    3               CALL ERROR_MSG(DBU#PANOSPS,AC_TBL.NAME(AC_PTR)

   1302  2 000053   000007 236000 3                  LDQ     7
         2 000054   000011 756000 0                  STQ     SPACE_NEEDED+5
         2 000055   000000 236000 xsym               LDQ     SC_PTR
         2 000056   000011 402000 3                  MPY     9
         2 000057   000010 036000 3                  ADLQ    8
         2 000060   000010 756000 0                  STQ     SPACE_NEEDED+4
         2 000061   000000 236000 xsym               LDQ     AC_PTR
         2 000062   000014 402003                    MPY     12,DU
         2 000063   000012 036000 3                  ADLQ    10
         2 000064   000013 235000 3                  LDA     11
         2 000065   000006 757000 0                  STAQ    SPACE_NEEDED+2
         2 000066   000006 630400 0                  EPPR0   SPACE_NEEDED+2
         2 000067   000005 631400 3                  EPPR1   5
         2 000070   000000 701000 xent               TSX1    ERROR_MSG
         2 000071   000000 011000                    NOP     0

     2025     1303    3                  ,SC_TBL.NAME(SC_PTR)
     2026     1304    3                  ,COMMAND_TEXT);
     2027     1305    3               UNWIND TO BREAK_CLEANUP; /* ABORT JOB */

   1305  2 000072   000000 100600                    MLR   ! fill='000'O
         2 000073   000000 000010 xsym               ADSC9   BREAK_CLEANUP            cn=0,n=8
         2 000074   000006 000010 0                  ADSC9   SPACE_NEEDED+2           cn=0,n=8
         2 000075   000006 237200 0                  LDAQ  ! SPACE_NEEDED+2
         2 000076   000000 700200 xent               TSX0  ! X66_SUNWIND
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:383  
         2 000077   000000 000200                    ZERO    0,128

     2028     1306    3               END;
     2029     1307    2           CALL FIND_DIRECT(BASE_PAGE*AC_TBL.LPP(AC_PTR)+

   1307  2 000100   000000 236000 xsym               LDQ     AC_PTR
         2 000101   000014 402007                    MPY     12,DL
         2 000102   000013 236006 xsym               LDQ     AC_TBL+11,QL
         2 000103   000032 772000                    QRL     26
         2 000104   000001 402000 0                  MPY     BASE_PAGE
         2 000105   000006 756000 0                  STQ     SPACE_NEEDED+2
         2 000106   000000 236000 xsym               LDQ     AC_PTR
         2 000107   000014 402007                    MPY     12,DL
         2 000110   000000 620006                    EAX0    0,QL
         2 000111   000006 236000 0                  LDQ     SPACE_NEEDED+2
         2 000112   000000 036010 xsym               ADLQ    AC_TBL,X0
         2 000113   000007 756000 0                  STQ     SPACE_NEEDED+3
         2 000114   000015 236000 3                  LDQ     13
         2 000115   000011 756000 0                  STQ     SPACE_NEEDED+5
         2 000116   000007 630400 0                  EPPR0   SPACE_NEEDED+3
         2 000117   000010 450400 0                  STP0    SPACE_NEEDED+4
         2 000120   000010 630400 0                  EPPR0   SPACE_NEEDED+4
         2 000121   000000 631400 3                  EPPR1   0
         2 000122   000000 701000 xent               TSX1    FIND_DIRECT
         2 000123   000000 011000                    NOP     0

     2030     1308    2              AC_TBL.BASE_DBK(AC_PTR),%DONT_ERROR);
     2031     1309    2           END; /* FOUND A PAGE WITH SPACE AND DBKEY AVAILABLE */

   1309  2 000124   000004 235000 0                  LDA     SPACE_NEEDED
         2 000125   000002 035007                    ADLA    2,DL
         2 000126   000006 755000 0                  STA     SPACE_NEEDED+2
         2 000127   000000 470400 xsym               LDP0    DATA$
         2 000130   000003 236100                    LDQ     3,,PR0
         2 000131   777777 376007                    ANQ     -1,DL
         2 000132   000006 116000 0                  CMPQ    SPACE_NEEDED+2
         2 000133   000037 604000 2                  TMI     s:1299
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:384  
         2 000134   000005 220100                    LDX0    5,,PR0
         2 000135   000174 601000 2                  TNZ     s:1311
         2 000136   001777 721100                    LXL1    1023,,PR0
         2 000137   400000 101003                    CMPX1   -131072,DU
         2 000140   000174 603000 2                  TRC     s:1311
         2 000141   000000 236000 xsym               LDQ     AC_PTR
         2 000142   000014 402007                    MPY     12,DL
         2 000143   000013 236006 xsym               LDQ     AC_TBL+11,QL
         2 000144   000032 772000                    QRL     26
         2 000145   000007 756000 0                  STQ     SPACE_NEEDED+3
         2 000146   000005 236100                    LDQ     5,,PR0
         2 000147   777777 376007                    ANQ     -1,DL
         2 000150   000001 036007                    ADLQ    1,DL
         2 000151   000007 116000 0                  CMPQ    SPACE_NEEDED+3
         2 000152   000037 605000 2                  TPL     s:1299
         2 000153   000000 236000 xsym               LDQ     AC_PTR
         2 000154   000014 402007                    MPY     12,DL
         2 000155   000003 236006 xsym               LDQ     AC_TBL+3,QL
         2 000156   000022 772000                    QRL     18
         2 000157   000001 116000 0                  CMPQ    BASE_PAGE
         2 000160   000174 601000 2                  TNZ     s:1311
         2 000161   000000 236000 xsym               LDQ     AC_PTR
         2 000162   000014 402007                    MPY     12,DL
         2 000163   000013 236006 xsym               LDQ     AC_TBL+11,QL
         2 000164   000011 772000                    QRL     9
         2 000165   001777 376007                    ANQ     1023,DL
         2 000166   000010 756000 0                  STQ     SPACE_NEEDED+4
         2 000167   000005 236100                    LDQ     5,,PR0
         2 000170   777777 376007                    ANQ     -1,DL
         2 000171   000001 036007                    ADLQ    1,DL
         2 000172   000010 116000 0                  CMPQ    SPACE_NEEDED+4
         2 000173   000037 605000 2                  TPL     s:1299

     2032     1310
     2033     1311    1       RE=4084-(DATA_PG.PG_SZ.SEC+DATA_PG.OFF_LN.SEC*2+2);

   1311  2 000174   000003 236100                    LDQ     3,,PR0
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:385  
         2 000175   777777 376007                    ANQ     -1,DL
         2 000176   000006 756000 0                  STQ     SPACE_NEEDED+2
         2 000177   000005 236100                    LDQ     5,,PR0
         2 000200   000001 736000                    QLS     1
         2 000201   000016 376000 3                  ANQ     14
         2 000202   000006 036000 0                  ADLQ    SPACE_NEEDED+2
         2 000203   000014 676000 3                  ERQ     12
         2 000204   007763 036007                    ADLQ    4083,DL
         2 000205   000000 756000 xsym               STQ     RE

     2034     1312         /* OFFSET FOR NEW PA */
     2035     1313    1       Y=DATA_PG.OFF_LN.FIR; /* FIRST AVAIL LINE */

   1313  2 000206   000005 236100                    LDQ     5,,PR0
         2 000207   000022 772000                    QRL     18
         2 000210   000003 756000 0                  STQ     Y

     2036     1314    1       IF Y=0 AND DATA_PG.OFFSET(2035)<131072 THEN /* MAKE A NEW OFF_ARRAY */

   1314  2 000211   000231 601000 2                  TNZ     s:1322
         2 000212   001777 720100                    LXL0    1023,,PR0
         2 000213   400000 100003                    CMPX0   -131072,DU
         2 000214   000231 603000 2                  TRC     s:1322

     2037     1315    2       DO;

     2038     1316    2           DATA_PG.PG_SZ.SEC=DATA_PG.PG_SZ.SEC-SPACE_NEEDED-2;

   1316  2 000215   000003 236100                    LDQ     3,,PR0
         2 000216   777777 376007                    ANQ     -1,DL
         2 000217   000004 136000 0                  SBLQ    SPACE_NEEDED
         2 000220   777776 621006                    EAX1    -2,QL
         2 000221   000003 441100                    SXL1    3,,PR0

     2039     1317    2           Y=DATA_PG.OFF_LN.SEC+1; /* CURRENT HIGH LINE + 1 */

   1317  2 000222   000005 236100                    LDQ     5,,PR0
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:386  
         2 000223   777777 376007                    ANQ     -1,DL
         2 000224   000001 036007                    ADLQ    1,DL
         2 000225   000003 756000 0                  STQ     Y

     2040     1318    2           DATA_PG.OFF_LN.SEC=Y; /* UPDATE CURRENT HIGH LINE */

   1318  2 000226   000000 622006                    EAX2    0,QL
         2 000227   000005 442100                    SXL2    5,,PR0

     2041     1319    2           END;

   1319  2 000230   000246 710000 2                  TRA     s:1327

     2042     1320    1       ELSE
     2043     1321    2       DO; /* FIND A AVAILABLE LINE */

     2044     1322    2           DATA_PG.PG_SZ.SEC=DATA_PG.PG_SZ.SEC-SPACE_NEEDED;

   1322  2 000231   000003 236100                    LDQ     3,,PR0
         2 000232   777777 376007                    ANQ     -1,DL
         2 000233   000004 136000 0                  SBLQ    SPACE_NEEDED
         2 000234   000000 620006                    EAX0    0,QL
         2 000235   000003 440100                    SXL0    3,,PR0

     2045     1323    2           DATA_PG.OFF_LN.FIR=DATA_PG.OFFSET(2035-Y)-131072;

   1323  2 000236   000003 335000 0                  LCA     Y
         2 000237   000001 735000                    ALS     1
         2 000240   000000 100505                    MLR     fill='000'O
         2 000241   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         2 000242   000006 000004 0                  ADSC9   SPACE_NEEDED+2           cn=0,n=4
         2 000243   000006 220000 0                  LDX0    SPACE_NEEDED+2
         2 000244   400000 621010                    EAX1    -131072,X0
         2 000245   000005 741100                    STX1    5,,PR0

     2046     1324    2           END;

PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:387  
     2047     1325
     2048     1326         /* Y IS THE LINE# AND RE IS THE OFFSET VALUE */
     2049     1327    1       DATA_PG.OFFSET(2035-Y) = RE;

   1327  2 000246   000003 335000 0                  LCA     Y
         2 000247   000001 735000                    ALS     1
         2 000250   000105 101400                    MRL     fill='000'O
         2 000251   000000 000004 xsym               ADSC9   RE                       cn=0,n=4
         2 000252   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2

     2050     1328    1       REC$ = PINCRC(DATA$,RE+12);

   1328  2 000253   000000 236000 xsym               LDQ     RE
         2 000254   000020 736000                    QLS     16
         2 000255   000003 036003                    ADLQ    3,DU
         2 000256   000000 036000 xsym               ADLQ    DATA$
         2 000257   000000 756000 xsym               STQ     REC$

     2051     1329    1       REC$ -> CHAR_V = '0'B; /* INIT THE RECORD IN CASE GARBAGE THER */

   1329  2 000260   000000 470400 xsym               LDP0    REC$
         2 000261   000100 100400                    MLR     fill='000'O
         2 000262   000001 000001 3                  ADSC9   1                        cn=0,n=1
         2 000263   000000 000020                    ADSC9   0,,PR0                   cn=0,n=16

     2052     1330    1       CURR_LEVEL.DBK(LEVEL#)=(BASE_PAGE-1)*AC_TBL.LPP(AC_PTR)+

   1330  2 000264   000000 236000 xsym               LDQ     LEVEL#
         2 000265   000002 736000                    QLS     2
         2 000266   000000 620006                    EAX0    0,QL
         2 000267   000000 236000 xsym               LDQ     AC_PTR
         2 000270   000014 402007                    MPY     12,DL
         2 000271   000013 236006 xsym               LDQ     AC_TBL+11,QL
         2 000272   000032 772000                    QRL     26
         2 000273   000006 756000 0                  STQ     SPACE_NEEDED+2
         2 000274   000001 236000 0                  LDQ     BASE_PAGE
         2 000275   000001 136007                    SBLQ    1,DL
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:388  
         2 000276   000006 402000 0                  MPY     SPACE_NEEDED+2
         2 000277   000007 756000 0                  STQ     SPACE_NEEDED+3
         2 000300   000000 236000 xsym               LDQ     AC_PTR
         2 000301   000014 402007                    MPY     12,DL
         2 000302   000000 621006                    EAX1    0,QL
         2 000303   000007 236000 0                  LDQ     SPACE_NEEDED+3
         2 000304   000000 036011 xsym               ADLQ    AC_TBL,X1
         2 000305   000003 036000 0                  ADLQ    Y
         2 000306   000001 036007                    ADLQ    1,DL
         2 000307   000000 756010 xsym               STQ     CURR_LEVEL,X0

     2053     1331    1          AC_TBL.BASE_DBK(AC_PTR)+Y+1;
     2054     1332    1       CURR_LEVEL.REC$(LEVEL#)=REC$;

   1332  2 000310   000000 236000 xsym               LDQ     REC$
         2 000311   000003 756010 xsym               STQ     CURR_LEVEL+3,X0

     2055     1333    1       CURR_LEVEL.BUF_PTR(LEVEL#)=BUF_PTR;

   1333  2 000312   000000 236000 xsym               LDQ     BUF_PTR
         2 000313   000011 736000                    QLS     9
         2 000314   000002 676010 xsym               ERQ     CURR_LEVEL+2,X0
         2 000315   377000 376007                    ANQ     130560,DL
         2 000316   000002 656010 xsym               ERSQ    CURR_LEVEL+2,X0

     2056     1334    1       POOL.MUST_WRITE(BUF_PTR)='1'B; /* SET PAGE MUST WRITE */

   1334  2 000317   000000 722000 xsym               LXL2    BUF_PTR
         2 000320   400000 236003                    LDQ     -131072,DU
         2 000321   000000 256012 xsym               ORSQ    POOL,X2

     2057     1335    1       POOL.LOCKS(BUF_PTR)=POOL.LOCKS(BUF_PTR)+1;

   1335  2 000322   000000 236012 xsym               LDQ     POOL,X2
         2 000323   000032 772000                    QRL     26
         2 000324   000777 376007                    ANQ     511,DL
         2 000325   000001 036007                    ADLQ    1,DL
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:389  
         2 000326   000032 736000                    QLS     26
         2 000327   000000 676012 xsym               ERQ     POOL,X2
         2 000330   377400 376003                    ANQ     130816,DU
         2 000331   000000 656012 xsym               ERSQ    POOL,X2

     2058     1336    1       PA_REC.TYPE=SC_TBL.PA_TYPE(SC_PTR);

   1336  2 000332   000000 236000 xsym               LDQ     SC_PTR
         2 000333   000405 402007                    MPY     261,DL
         2 000334   000000 116003                    CMPQ    0,DU
         2 000335   000337 605000 2                  TPL     s:1336+5
         2 000336   000044 036003                    ADLQ    36,DU
         2 000337   000000 470400 xsym               LDP0    REC$
         2 000340   003100 060406                    CSL     bolr='003'O
         2 000341   000004 250014 xsym               BDSC    SC_TBL+4,Q               by=1,bit=5,n=12
         2 000342   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12

     2059     1337    1       PA_REC.SIZE=SPACE_NEEDED; /* SET UP PA_REC HEADER */

   1337  2 000343   000000 470400 xsym               LDP0    REC$
         2 000344   000100 101400                    MRL     fill='000'O
         2 000345   000004 000004 0                  ADSC9   SPACE_NEEDED             cn=0,n=4
         2 000346   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2

     2060     1338    1       IF LEVEL#<NO_OF_LEVELS THEN

   1338  2 000347   000000 236000 xsym               LDQ     LEVEL#
         2 000350   000000 116000 xsym               CMPQ    NO_OF_LEVELS
         2 000351   000356 605000 2                  TPL     s:1340

     2061     1339    1           PA_REC.NOT_LOWEST_LEVEL = '1'B;

   1339  2 000352   000000 470400 xsym               LDP0    REC$
         2 000353   003100 060400                    CSL     bolr='003'O
         2 000354   000017 000001 3                  BDSC    15                       by=0,bit=0,n=1
         2 000355   000001 000001                    BDSC    1,,PR0                   by=0,bit=0,n=1

PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:390  
     2062     1340    1       SC_TBL.COUNT(SC_PTR)=SC_TBL.COUNT(SC_PTR)-1;

   1340  2 000356   000000 236000 xsym               LDQ     SC_PTR
         2 000357   000405 402007                    MPY     261,DL
         2 000360   000000 116003                    CMPQ    0,DU
         2 000361   000363 605000 2                  TPL     s:1340+5
         2 000362   000044 036003                    ADLQ    36,DU
         2 000363   003000 060406                    CSL     bolr='003'O
         2 000364   000006 450022 xsym               BDSC    SC_TBL+6,Q               by=2,bit=5,n=18
         2 000365   000007 000044 0                  BDSC    SPACE_NEEDED+3           by=0,bit=0,n=36
         2 000366   000007 236000 0                  LDQ     SPACE_NEEDED+3
         2 000367   000022 732000                    QRS     18
         2 000370   000001 136007                    SBLQ    1,DL
         2 000371   000006 756000 0                  STQ     SPACE_NEEDED+2
         2 000372   000000 236000 xsym               LDQ     SC_PTR
         2 000373   000405 402007                    MPY     261,DL
         2 000374   000000 116003                    CMPQ    0,DU
         2 000375   000377 605000 2                  TPL     s:1340+17
         2 000376   000044 036003                    ADLQ    36,DU
         2 000377   003006 061400                    CSR     bolr='003'O
         2 000400   000006 000044 0                  BDSC    SPACE_NEEDED+2           by=0,bit=0,n=36
         2 000401   000006 450022 xsym               BDSC    SC_TBL+6,Q               by=2,bit=5,n=18

     2063     1341        /*E* ERROR: ZIU-DBU#PANOSPS-C
     2064     1342        MESSAGE: Error: Ran out of space in area "%U1" when creating
     2065     1343                        a new *PA_REC_%U2. %U3 aborted. */
     2066     1344    1   END CREATE_PAREC;

   1344  2 000402   000000 221200 0                  LDX1  ! 0
         2 000403   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   0     005   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:391  
   3     000   000002 000000   000000 000000   000000 006000   000001 006000    ................
   3     004   000000 006000   000004 000000   000000 021743   000000 006000    ................
   3     010   000000 006000   000007 200000   000003 406000   000006 006000    ................
   3     014   777777 777777   000014 006000   000001 777776   400000 000000    ................
     2067     1345        %EOD;

PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:392  
--  Include file information  --

   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CREATE_PAREC.

   Procedure CREATE_PAREC requires 260 words for executable code.
   Procedure CREATE_PAREC is declared NOAUTO and requires 10 words of local(STATIC) storage.
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:393  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:394  
          MINI XREF LISTING

AC_PTR
       615**DCL      1294>>DOWHILE  1294>>DOWHILE  1294>>DOWHILE  1299>>ASSIGN   1302>>CALL     1307>>CALL
      1307>>CALL     1330>>ASSIGN   1330>>ASSIGN
AC_TBL.BASE_DBK
       620**DCL      1307>>CALL     1330>>ASSIGN
AC_TBL.LNLP
       628**DCL      1294>>DOWHILE
AC_TBL.LPP
       625**DCL      1294>>DOWHILE  1307>>CALL     1330>>ASSIGN
AC_TBL.NAME
       624**DCL      1302<>CALL
AC_TBL.NUM_DBPG
       623**DCL      1294>>DOWHILE  1299>>ASSIGN
BASE_PAGE
        39**DCL      1284<<ASSIGN   1285>>ASSIGN   1294>>DOWHILE  1299<<ASSIGN   1299>>ASSIGN   1300>>IF
      1307>>CALL     1330>>ASSIGN
BREAK_CLEANUP
        37**DCL      1305>>UNWIND
BUF_PTR
        35**DCL      1333>>ASSIGN   1334>>ASSIGN   1335>>ASSIGN   1335>>ASSIGN
CHAR_V
        43**DCL      1329<<ASSIGN
COMMAND_TEXT
        36**DCL      1302<>CALL
COUNTSF
       308**DCL       309--REDEF
CURR_LEVEL.BUF_PTR
        25**DCL      1333<<ASSIGN
CURR_LEVEL.DBK
        21**DCL      1282<>CALL     1330<<ASSIGN
CURR_LEVEL.REC$
        27**DCL      1332<<ASSIGN
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:395  
CURR_OWNER
        34**DCL      1280<>CALL
DATA$
       736**DCL       737--IMP-PTR  1284>>ASSIGN   1294>>DOWHILE  1294>>DOWHILE  1294>>DOWHILE  1294>>DOWHILE
      1294>>DOWHILE  1311>>ASSIGN   1311>>ASSIGN   1313>>ASSIGN   1314>>IF       1316>>ASSIGN   1316>>ASSIGN
      1317>>ASSIGN   1318>>ASSIGN   1322>>ASSIGN   1322>>ASSIGN   1323>>ASSIGN   1323>>ASSIGN   1327>>ASSIGN
      1328>>ASSIGN
DATA_PG.ACT_DATA
       749**DCL       750--REDEF     751--REDEF     752--REDEF
DATA_PG.CON_INTRVAL
       745**DCL      1284>>ASSIGN
DATA_PG.OFFSET
       751**DCL      1294>>DOWHILE  1314>>IF       1323>>ASSIGN   1327<<ASSIGN
DATA_PG.OFF_LN.FIR
       747**DCL      1294>>DOWHILE  1313>>ASSIGN   1323<<ASSIGN
DATA_PG.OFF_LN.SEC
       748**DCL      1294>>DOWHILE  1294>>DOWHILE  1311>>ASSIGN   1317>>ASSIGN   1318<<ASSIGN
DATA_PG.PG_SZ.SEC
       744**DCL      1294>>DOWHILE  1311>>ASSIGN   1316<<ASSIGN   1316>>ASSIGN   1322<<ASSIGN   1322>>ASSIGN
ENCRP_SEEDSF
       266**DCL       267--REDEF
ENTRY$
       394**DCL       385--IMP-PTR
ERRCODESF
       268**DCL       273--REDEF
ERROR_MSG
        47**DCL-ENT  1302--CALL
FIDSF_RD
       284**DCL       285--REDEF
FIND_DIRECT
        46**DCL-ENT  1280--CALL     1282--CALL     1307--CALL
GROUP$
       395**DCL       390--IMP-PTR
HELPCODE
       302**DCL       307--REDEF
ICHKSUM
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:396  
       367**DCL       368--REDEF
I_O_BUF$
       345**DCL       346--IMP-PTR
KEYVSF
       240**DCL       245--REDEF
KEYVSF.WD_ONE
       242**DCL       243--REDEF
KEY_TBL.EIS
       607**DCL       608--REDEF
LEVEL#
        18**DCL      1279>>IF       1282>>CALL     1330>>ASSIGN   1332>>ASSIGN   1333>>ASSIGN   1338>>IF
MSGCODE
       274**DCL       275--REDEF
NO_OF_LEVELS
        19**DCL      1338>>IF
PA_REC.NOT_LOWEST_LEVEL
       377**DCL      1339<<ASSIGN
PA_REC.SIZE
       376**DCL      1337<<ASSIGN
PA_REC.TYPE
       375**DCL      1336<<ASSIGN
POOL.LOCKS
        32**DCL      1335<<ASSIGN   1335>>ASSIGN
POOL.MUST_WRITE
        31**DCL      1334<<ASSIGN
PTR_LEN
       396**DCL       389--IMP-SIZ   393--IMP-SIZ
RC_TBL.NXPNT_EIS
       590**DCL       591--REDEF
RE
       328**DCL      1311<<ASSIGN   1327>>ASSIGN   1328>>ASSIGN
REC$
       326**DCL        43--IMP-PTR   349--IMP-PTR   373--IMP-PTR  1328<<ASSIGN   1329>>ASSIGN   1332>>ASSIGN
      1336>>ASSIGN   1337>>ASSIGN   1339>>ASSIGN
REC_DATA_LN
       354**DCL       353--IMP-SIZ
PL6.E3A0      #006=CREATE_PAREC File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:397  
SC_PTR
       571**DCL      1286>>ASSIGN   1302>>CALL     1336>>ASSIGN   1340>>ASSIGN   1340>>ASSIGN
SC_TBL.COUNT
       586**DCL      1340<<ASSIGN   1340>>ASSIGN
SC_TBL.KEY_PTR
       584**DCL       585--REDEF
SC_TBL.NAME
       573**DCL      1302<>CALL
SC_TBL.PA_RECSIZE
       578**DCL      1286>>ASSIGN
SC_TBL.PA_TYPE
       577**DCL      1336>>ASSIGN
SPACE_NEEDED
        42**DCL      1286<<ASSIGN   1294>>DOWHILE  1316>>ASSIGN   1322>>ASSIGN   1337>>ASSIGN
START_PAGE
        40**DCL      1285<<ASSIGN   1300>>IF
Y
        41**DCL      1313<<ASSIGN   1314>>IF       1317<<ASSIGN   1318>>ASSIGN   1323>>ASSIGN   1327>>ASSIGN
      1330>>ASSIGN

PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:398  
     2068        1        /*T***********************************************************/
     2069        2        /*T*                                                         */
     2070        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2071        4        /*T*                                                         */
     2072        5        /*T***********************************************************/
     2073        6
     2074        7        /*
     2075        8              EXTERNAL  PUSH_PAENTRY - CALLED BY COMPACT DIRECTIVE
     2076        9                        PUSHES ALL THE ENTRY IN THE LOWEST PA RECROD
     2077       10                        TO A STACK OF 32K MAX.  THEN STORE EACH
     2078       11                        ONE BACK TO THE SAVE PA STRUCTURE.
     2079       12              INPUT: PA_DBK IS THE DBK OF THE PA_REC TO BE EXTRACTED
     2080       13                               OF ALL ITS ENTRIES
     2081       14        */
     2082       15        PUSH_PAENTRY: PROC(PA_DBK) NOAUTO;
     2083       16
     2084       17    1   DCL PA_DBK SBIN ALIGNED;
     2085       18    1   DCL LOW_INDX SBIN SYMREF ALIGNED;
     2086       19    1   DCL HIGH_INDX SBIN SYMREF ALIGNED;
     2087       20    1   DCL PAENT_STK_SIZE SBIN SYMREF ALIGNED;
     2088       21    1   DCL PASTK$ PTR SYMREF ALIGNED;
     2089       22    1   DCL 1 PAENT_STK BASED(REC2$) CALIGNED,
     2090       23    1         2 PA_DBK SBIN WORD CALIGNED,
     2091       24    1         2 ENT CHAR(ENTRY_LEN) CALIGNED;
     2092       25    1   DCL 1 PAENT2_STK BASED(REC2$) CALIGNED, /* REDEF PAENT_STK */
     2093       26    1         2 PA_DBK SBIN CALIGNED,
     2094       27    1         2 TYPE SBIN HALF CALIGNED,
     2095       28    1         2 PTRS CHAR(PTR_LEN) CALIGNED;
     2096       29    1   DCL CURR_OWNER SBIN SYMREF ALIGNED;
     2097       30    1   DCL ENTRY_LEN SBIN SYMREF ALIGNED;
     2098       31    1   DCL REC2$ PTR SYMREF ALIGNED;
     2099       32    1   DCL REC$ PTR SYMREF ALIGNED;
     2100       33    1   DCL X SBIN SYMREF ALIGNED;
     2101       34    1   DCL KEY$ PTR STATIC ALIGNED;
     2102       35    1   DCL KEY_V CHAR(KEY_LEN) BASED CALIGNED;
     2103       36    1   DCL PTR_V CHAR(PTR_LEN) BASED CALIGNED;
     2104       37    1   DCL Y SBIN STATIC ALIGNED;
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:399  
     2105       38
     2106       39        %INCLUDE ZI_DBU_XREF;
     2107      206         %PA_XREF_TBLS;
     2108      272        %INCLUDE ZI_GLOBAL_DBUTIL;
     2109      450         %PAREC(STCLASS=SYMREF);
     2110      477        %INCLUDE ZI_ERRORS_SUBS;
     2111      997
     2112      998    1   DCL PA_UNIQUE_ENTRY CHAR(ENTRY_LEN) BASED(ENTRY$);
     2113      999    1   DCL BREAK_CLEANUP BIT(72) SYMREF ALIGNED;
     2114     1000    1   DCL COMMAND_TEXT CHAR(9) SYMREF CALIGNED;
     2115     1001
     2116     1002    1   DCL BIN_CHAR ENTRY(2);
     2117     1003    1   DCL ERROR_MSG ENTRY(4);
     2118     1004
     2119     1005    1       X = PA_REC.ENTRIES; /* GET NUMBER OF ENTRIES IN PA_REC */
     2120     1006    1       ENTRY$ = PINCRC(REC$,8+3*PTR_LEN); /* POINT TO 1ST ENTRY */
     2121     1007    2       DO WHILE(X>0);
     2122     1008    2           IF PA_ENTRY.C=0 THEN /* REGULAR ENTRY */
     2123     1009    3           DO;
     2124     1010    3               REC2$ = PINCRC(PASTK$,HIGH_INDX*(4+ENTRY_LEN));
     2125     1011    3               PAENT_STK.PA_DBK = PA_DBK;
     2126     1012    3               PAENT_STK.ENT = PA_UNIQUE_ENTRY;
     2127     1013    3               HIGH_INDX=MOD(HIGH_INDX+1,PAENT_STK_SIZE);
     2128     1014    3               IF HIGH_INDX=LOW_INDX THEN /* OUT OF SPACE */
     2129     1015    3                   GOTO NO_SPACE_IN_STACK;
     2130     1016    3               END;
     2131     1017    2           ELSE
     2132     1018    3           DO; /* POINTER GROUP PRESENT */
     2133     1019    3               Y=0;
     2134     1020    3               PINCRC(ADDR(Y),4-PTR_LEN)->PTR_V=PA_ENTRY.PTRS;
     2135     1021    3               KEY$ = PINCRC(ENTRY$,2+PTR_LEN);
     2136     1022    3               GROUP$ = PINCRC(REC$,Y); /* GROUP$ POINTS TO PA GROUP */
     2137     1023    3               Y = PA_GROUP.NO_GROUPS;
     2138     1024    4               DO WHILE(Y>0);
     2139     1025    4                   REC2$ = PINCRC(PASTK$,HIGH_INDX*(4+ENTRY_LEN));
     2140     1026    4                   PAENT2_STK.PA_DBK = PA_DBK;
     2141     1027    4                   PAENT2_STK.TYPE = PA_GROUP.TYPE;
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:400  
     2142     1028    4                   PAENT2_STK.PTRS = PA_GROUP.PTRS;
     2143     1029    4                   PINCRC(REC2$,6+PTR_LEN)->KEY_V=KEY$->KEY_V;
     2144     1030    4                   GROUP$= PINCRC(GROUP$,2+PTR_LEN);
     2145     1031    4                   Y=Y-1;
     2146     1032    4                   HIGH_INDX=MOD(HIGH_INDX+1,PAENT_STK_SIZE);
     2147     1033    4                   IF HIGH_INDX=LOW_INDX THEN
     2148     1034    4                       GOTO NO_SPACE_IN_STACK;
     2149     1035    4                   END;
     2150     1036    3               END;
     2151     1037    2           X = X - 1;
     2152     1038    2           ENTRY$=PINCRC(ENTRY$,ENTRY_LEN); /* POINTS TO NEXT ENTRY */
     2153     1039    2           END;
     2154     1040    1       PA_REC.ENTRIES = 0; /* RESET TO 0 TO AVIOD PUSH AGAIN */
     2155     1041    1       RETURN;
     2156     1042    1   NO_SPACE_IN_STACK:
     2157     1043    1       CALL BIN_CHAR(2,(PAENT_STK_SIZE*(4+ENTRY_LEN))/4096);
     2158     1044    1       CALL BIN_CHAR(1,CURR_OWNER);
     2159     1045    1       CALL ERROR_MSG(DBU#PASTKER1,SC_TBL.NAME(SC_PTR));
     2160     1046    1       UNWIND TO BREAK_CLEANUP;
     2161     1047        /*E*  ERROR: ZIU-DBU#PASTKER1-C
     2162     1048        MESSAGE: Error: Ran out of space in PA entry stack;
     2163     1049                        the stack size is %U3 K, owner DBK# is %U2 and
     2164     1050                        the set name is "%U1".  COMPACT aborted.
     2165     1051                        Increase resource limit and try again. */
     2166     1052    1   END PUSH_PAENTRY;

PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:401  
--  Include file information  --

   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure PUSH_PAENTRY.

   Procedure PUSH_PAENTRY requires 154 words for executable code.
   Procedure PUSH_PAENTRY is declared NOAUTO and requires 8 words of local(STATIC) storage.

    No errors detected in file ZIU$COMPACT.:ZIC0TSI    .

PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:402  

 Object Unit name= PUSH_PAENTRY                               File name= ZIU$COMPACT.:ZIC0TOU
 UTS= SEP 05 '97 13:11:25.52 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     8     10  PUSH_PAENTRY
    1   Proc  even  none   154    232  PUSH_PAENTRY
    2  RoData even  none    11     13  PUSH_PAENTRY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  PUSH_PAENTRY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 BIN_CHAR
         yes           Std       4 ERROR_MSG
                       nStd      0 X66_STATIC_1
                       nStd      0 X66_SUNWIND
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:403  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     LOW_INDX                              HIGH_INDX                             PAENT_STK_SIZE
     PASTK$                                CURR_OWNER                            ENTRY_LEN
     REC2$                                 REC$                                  X
     TYPE                                  SC_PTR                                SC_TBL
     RC_PTR                                RC_TBL                                KEY_PTR
     KEY_TBL                               AC_PTR                                FIRST_TIME_CALLED
     BASE_DBK                              AC_TBL                                ENTRY$
     GROUP$                                PTR_LEN                               KEY_LEN
     BREAK_CLEANUP                         COMMAND_TEXT

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:404  


     2068        1        /*T***********************************************************/
     2069        2        /*T*                                                         */
     2070        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2071        4        /*T*                                                         */
     2072        5        /*T***********************************************************/
     2073        6
     2074        7        /*
     2075        8              EXTERNAL  PUSH_PAENTRY - CALLED BY COMPACT DIRECTIVE
     2076        9                        PUSHES ALL THE ENTRY IN THE LOWEST PA RECROD
     2077       10                        TO A STACK OF 32K MAX.  THEN STORE EACH
     2078       11                        ONE BACK TO THE SAVE PA STRUCTURE.
     2079       12              INPUT: PA_DBK IS THE DBK OF THE PA_REC TO BE EXTRACTED
     2080       13                               OF ALL ITS ENTRIES
     2081       14        */
     2082       15        PUSH_PAENTRY: PROC(PA_DBK) NOAUTO;

     15  1 000000   000000 700200 xent  PUSH_PAENTRY TSX0  ! X66_STATIC_1
         1 000001   000000 000001 0                  ZERO    0,1

     2083       16
     2084       17    1   DCL PA_DBK SBIN ALIGNED;
     2085       18    1   DCL LOW_INDX SBIN SYMREF ALIGNED;
     2086       19    1   DCL HIGH_INDX SBIN SYMREF ALIGNED;
     2087       20    1   DCL PAENT_STK_SIZE SBIN SYMREF ALIGNED;
     2088       21    1   DCL PASTK$ PTR SYMREF ALIGNED;
     2089       22    1   DCL 1 PAENT_STK BASED(REC2$) CALIGNED,
     2090       23    1         2 PA_DBK SBIN WORD CALIGNED,
     2091       24    1         2 ENT CHAR(ENTRY_LEN) CALIGNED;
     2092       25    1   DCL 1 PAENT2_STK BASED(REC2$) CALIGNED, /* REDEF PAENT_STK */
     2093       26    1         2 PA_DBK SBIN CALIGNED,
     2094       27    1         2 TYPE SBIN HALF CALIGNED,
     2095       28    1         2 PTRS CHAR(PTR_LEN) CALIGNED;
     2096       29    1   DCL CURR_OWNER SBIN SYMREF ALIGNED;
     2097       30    1   DCL ENTRY_LEN SBIN SYMREF ALIGNED;
     2098       31    1   DCL REC2$ PTR SYMREF ALIGNED;
     2099       32    1   DCL REC$ PTR SYMREF ALIGNED;
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:405  
     2100       33    1   DCL X SBIN SYMREF ALIGNED;
     2101       34    1   DCL KEY$ PTR STATIC ALIGNED;
     2102       35    1   DCL KEY_V CHAR(KEY_LEN) BASED CALIGNED;
     2103       36    1   DCL PTR_V CHAR(PTR_LEN) BASED CALIGNED;
     2104       37    1   DCL Y SBIN STATIC ALIGNED;
     2105       38
     2106       39        %INCLUDE ZI_DBU_XREF;
     2107      206         %PA_XREF_TBLS;
     2108      272        %INCLUDE ZI_GLOBAL_DBUTIL;
     2109      450         %PAREC(STCLASS=SYMREF);
     2110      477        %INCLUDE ZI_ERRORS_SUBS;
     2111      997
     2112      998    1   DCL PA_UNIQUE_ENTRY CHAR(ENTRY_LEN) BASED(ENTRY$);
     2113      999    1   DCL BREAK_CLEANUP BIT(72) SYMREF ALIGNED;
     2114     1000    1   DCL COMMAND_TEXT CHAR(9) SYMREF CALIGNED;
     2115     1001
     2116     1002    1   DCL BIN_CHAR ENTRY(2);
     2117     1003    1   DCL ERROR_MSG ENTRY(4);
     2118     1004
     2119     1005    1       X = PA_REC.ENTRIES; /* GET NUMBER OF ENTRIES IN PA_REC */

   1005  1 000002   000000 470400 xsym               LDP0    REC$
         1 000003   003000 061500                    CSR     bolr='003'O
         1 000004   000001 060014                    BDSC    1,,PR0                   by=0,bit=6,n=12
         1 000005   000000 000044 xsym               BDSC    X                        by=0,bit=0,n=36

     2120     1006    1       ENTRY$ = PINCRC(REC$,8+3*PTR_LEN); /* POINT TO 1ST ENTRY */

   1006  1 000006   000000 236000 xsym               LDQ     PTR_LEN
         1 000007   600000 402007                    MPY     -65536,DL
         1 000010   000002 036003                    ADLQ    2,DU
         1 000011   000000 036000 xsym               ADLQ    REC$
         1 000012   000000 756000 xsym               STQ     ENTRY$

     2121     1007    2       DO WHILE(X>0);

   1007  1 000013   000000 235000 xsym               LDA     X
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:406  
         1 000014   000164 604400 1                  TMOZ    s:1040

     2122     1008    2           IF PA_ENTRY.C=0 THEN /* REGULAR ENTRY */

   1008  1 000015   000000 470400 xsym               LDP0    ENTRY$
         1 000016   003000 061500                    CSR     bolr='003'O
         1 000017   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         1 000020   000004 000044 0                  BDSC    Y+1                      by=0,bit=0,n=36
         1 000021   000004 236000 0                  LDQ     Y+1
         1 000022   000000 116003                    CMPQ    0,DU
         1 000023   000055 601000 1                  TNZ     s:1019

     2123     1009    3           DO;

     2124     1010    3               REC2$ = PINCRC(PASTK$,HIGH_INDX*(4+ENTRY_LEN));

   1010  1 000024   000000 236000 xsym               LDQ     ENTRY_LEN
         1 000025   000004 036007                    ADLQ    4,DL
         1 000026   000000 402000 xsym               MPY     HIGH_INDX
         1 000027   000020 736000                    QLS     16
         1 000030   000000 036000 xsym               ADLQ    PASTK$
         1 000031   000000 756000 xsym               STQ     REC2$

     2125     1011    3               PAENT_STK.PA_DBK = PA_DBK;

   1011  1 000032   000001 471400 0                  LDP1    @PA_DBK
         1 000033   000000 473400 xsym               LDP3    REC2$
         1 000034   000100 100500                    MLR     fill='000'O
         1 000035   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         1 000036   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4

     2126     1012    3               PAENT_STK.ENT = PA_UNIQUE_ENTRY;

   1012  1 000037   000000 470400 xsym               LDP0    ENTRY$
         1 000040   000000 720000 xsym               LXL0    ENTRY_LEN
         1 000041   000000 473400 xsym               LDP3    REC2$
         1 000042   040140 100540                    MLR     fill='040'O
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:407  
         1 000043   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         1 000044   300001 000010                    ADSC9   1,,PR3                   cn=0,n=*X0

     2127     1013    3               HIGH_INDX=MOD(HIGH_INDX+1,PAENT_STK_SIZE);

   1013  1 000045   000000 236000 xsym               LDQ     HIGH_INDX
         1 000046   000001 036007                    ADLQ    1,DL
         1 000047   000000 506000 xsym               DIV     PAENT_STK_SIZE
         1 000050   000000 755000 xsym               STA     HIGH_INDX

     2128     1014    3               IF HIGH_INDX=LOW_INDX THEN /* OUT OF SPACE */

   1014  1 000051   000000 236000 xsym               LDQ     HIGH_INDX
         1 000052   000000 116000 xsym               CMPQ    LOW_INDX
         1 000053   000172 600000 1                  TZE     NO_SPACE_IN_STACK

     2129     1015    3                   GOTO NO_SPACE_IN_STACK;
     2130     1016    3               END;

   1016  1 000054   000154 710000 1                  TRA     s:1037

     2131     1017    2           ELSE
     2132     1018    3           DO; /* POINTER GROUP PRESENT */

     2133     1019    3               Y=0;

   1019  1 000055   000003 450000 0                  STZ     Y

     2134     1020    3               PINCRC(ADDR(Y),4-PTR_LEN)->PTR_V=PA_ENTRY.PTRS;

   1020  1 000056   000000 335000 xsym               LCA     PTR_LEN
         1 000057   000000 720000 xsym               LXL0    PTR_LEN
         1 000060   040045 100540                    MLR     fill='040'O
         1 000061   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         1 000062   000004 000010 0                  ADSC9   Y+1,A                    cn=0,n=*X0

     2135     1021    3               KEY$ = PINCRC(ENTRY$,2+PTR_LEN);
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:408  

   1021  1 000063   000000 236000 xsym               LDQ     PTR_LEN
         1 000064   000020 736000                    QLS     16
         1 000065   400000 036007                    ADLQ    -131072,DL
         1 000066   000000 036000 xsym               ADLQ    ENTRY$
         1 000067   000002 756000 0                  STQ     KEY$

     2136     1022    3               GROUP$ = PINCRC(REC$,Y); /* GROUP$ POINTS TO PA GROUP */

   1022  1 000070   000003 236000 0                  LDQ     Y
         1 000071   000020 736000                    QLS     16
         1 000072   000000 036000 xsym               ADLQ    REC$
         1 000073   000000 756000 xsym               STQ     GROUP$

     2137     1023    3               Y = PA_GROUP.NO_GROUPS;

   1023  1 000074   000000 471400 xsym               LDP1    GROUP$
         1 000075   000000 101500                    MRL     fill='000'O
         1 000076   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         1 000077   000003 000004 0                  ADSC9   Y                        cn=0,n=4

     2138     1024    4               DO WHILE(Y>0);

   1024  1 000100   000003 235000 0                  LDA     Y
         1 000101   000154 604400 1                  TMOZ    s:1037

     2139     1025    4                   REC2$ = PINCRC(PASTK$,HIGH_INDX*(4+ENTRY_LEN));

   1025  1 000102   000000 236000 xsym               LDQ     ENTRY_LEN
         1 000103   000004 036007                    ADLQ    4,DL
         1 000104   000000 402000 xsym               MPY     HIGH_INDX
         1 000105   000020 736000                    QLS     16
         1 000106   000000 036000 xsym               ADLQ    PASTK$
         1 000107   000000 756000 xsym               STQ     REC2$

     2140     1026    4                   PAENT2_STK.PA_DBK = PA_DBK;

PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:409  
   1026  1 000110   000001 470400 0                  LDP0    @PA_DBK
         1 000111   000000 471400 xsym               LDP1    REC2$
         1 000112   000100 100500                    MLR     fill='000'O
         1 000113   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         1 000114   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4

     2141     1027    4                   PAENT2_STK.TYPE = PA_GROUP.TYPE;

   1027  1 000115   000000 471400 xsym               LDP1    GROUP$
         1 000116   000000 473400 xsym               LDP3    REC2$
         1 000117   000100 100500                    MLR     fill='000'O
         1 000120   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2
         1 000121   300001 000002                    ADSC9   1,,PR3                   cn=0,n=2

     2142     1028    4                   PAENT2_STK.PTRS = PA_GROUP.PTRS;

   1028  1 000122   000000 720000 xsym               LXL0    PTR_LEN
         1 000123   040140 100540                    MLR     fill='040'O
         1 000124   100001 000010                    ADSC9   1,,PR1                   cn=0,n=*X0
         1 000125   300001 400010                    ADSC9   1,,PR3                   cn=2,n=*X0

     2143     1029    4                   PINCRC(REC2$,6+PTR_LEN)->KEY_V=KEY$->KEY_V;

   1029  1 000126   000002 474400 0                  LDP4    KEY$
         1 000127   000000 721000 xsym               LXL1    KEY_LEN
         1 000130   000000 235000 xsym               LDA     PTR_LEN
         1 000131   040145 100540                    MLR     fill='040'O
         1 000132   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
         1 000133   300001 400011                    ADSC9   1,A,PR3                  cn=2,n=*X1

     2144     1030    4                   GROUP$= PINCRC(GROUP$,2+PTR_LEN);

   1030  1 000134   000000 236000 xsym               LDQ     PTR_LEN
         1 000135   000020 736000                    QLS     16
         1 000136   400000 036007                    ADLQ    -131072,DL
         1 000137   000000 036000 xsym               ADLQ    GROUP$
         1 000140   000000 756000 xsym               STQ     GROUP$
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:410  

     2145     1031    4                   Y=Y-1;

   1031  1 000141   000001 336007                    LCQ     1,DL
         1 000142   000003 056000 0                  ASQ     Y

     2146     1032    4                   HIGH_INDX=MOD(HIGH_INDX+1,PAENT_STK_SIZE);

   1032  1 000143   000000 236000 xsym               LDQ     HIGH_INDX
         1 000144   000001 036007                    ADLQ    1,DL
         1 000145   000000 506000 xsym               DIV     PAENT_STK_SIZE
         1 000146   000000 755000 xsym               STA     HIGH_INDX

     2147     1033    4                   IF HIGH_INDX=LOW_INDX THEN

   1033  1 000147   000000 236000 xsym               LDQ     HIGH_INDX
         1 000150   000000 116000 xsym               CMPQ    LOW_INDX
         1 000151   000172 600000 1                  TZE     NO_SPACE_IN_STACK

     2148     1034    4                       GOTO NO_SPACE_IN_STACK;
     2149     1035    4                   END;

   1035  1 000152   000003 235000 0                  LDA     Y
         1 000153   000102 605400 1                  TPNZ    s:1025

     2150     1036    3               END;

     2151     1037    2           X = X - 1;

   1037  1 000154   000001 336007                    LCQ     1,DL
         1 000155   000000 056000 xsym               ASQ     X

     2152     1038    2           ENTRY$=PINCRC(ENTRY$,ENTRY_LEN); /* POINTS TO NEXT ENTRY */

   1038  1 000156   000000 236000 xsym               LDQ     ENTRY_LEN
         1 000157   000020 736000                    QLS     16
         1 000160   000000 036000 xsym               ADLQ    ENTRY$
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:411  
         1 000161   000000 756000 xsym               STQ     ENTRY$

     2153     1039    2           END;

   1039  1 000162   000000 235000 xsym               LDA     X
         1 000163   000015 605400 1                  TPNZ    s:1008

     2154     1040    1       PA_REC.ENTRIES = 0; /* RESET TO 0 TO AVIOD PUSH AGAIN */

   1040  1 000164   000000 470400 xsym               LDP0    REC$
         1 000165   003100 061400                    CSR     bolr='003'O
         1 000166   000000 000044 2                  BDSC    0                        by=0,bit=0,n=36
         1 000167   000001 060014                    BDSC    1,,PR0                   by=0,bit=6,n=12

     2155     1041    1       RETURN;

   1041  1 000170   000000 221200 0                  LDX1  ! 0
         1 000171   000001 702211                    TSX2  ! 1,X1

     2156     1042    1   NO_SPACE_IN_STACK:
     2157     1043    1       CALL BIN_CHAR(2,(PAENT_STK_SIZE*(4+ENTRY_LEN))/4096);

   1043  1 000172   000000 236000 xsym  NO_SPACE_IN* LDQ     ENTRY_LEN
         1 000173   000004 036007                    ADLQ    4,DL
         1 000174   000000 402000 xsym               MPY     PAENT_STK_SIZE
         1 000175   010000 506007                    DIV     4096,DL
         1 000176   000004 756000 0                  STQ     Y+1
         1 000177   000004 630400 0                  EPPR0   Y+1
         1 000200   000007 450400 0                  STP0    Y+4
         1 000201   000003 236000 2                  LDQ     3
         1 000202   000006 756000 0                  STQ     Y+3
         1 000203   000006 630400 0                  EPPR0   Y+3
         1 000204   000001 631400 2                  EPPR1   1
         1 000205   000000 701000 xent               TSX1    BIN_CHAR
         1 000206   000000 011000                    NOP     0

     2158     1044    1       CALL BIN_CHAR(1,CURR_OWNER);
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:412  

   1044  1 000207   000005 630400 2                  EPPR0   5
         1 000210   000001 631400 2                  EPPR1   1
         1 000211   000000 701000 xent               TSX1    BIN_CHAR
         1 000212   000000 011000                    NOP     0

     2159     1045    1       CALL ERROR_MSG(DBU#PASTKER1,SC_TBL.NAME(SC_PTR));

   1045  1 000213   000000 236000 xsym               LDQ     SC_PTR
         1 000214   000011 402000 2                  MPY     9
         1 000215   000010 036000 2                  ADLQ    8
         1 000216   000012 235000 2                  LDA     10
         1 000217   000004 757000 0                  STAQ    Y+1
         1 000220   000004 630400 0                  EPPR0   Y+1
         1 000221   000001 631400 2                  EPPR1   1
         1 000222   000000 701000 xent               TSX1    ERROR_MSG
         1 000223   000000 011000                    NOP     0

     2160     1046    1       UNWIND TO BREAK_CLEANUP;

   1046  1 000224   000000 100600                    MLR   ! fill='000'O
         1 000225   000000 000010 xsym               ADSC9   BREAK_CLEANUP            cn=0,n=8
         1 000226   000004 000010 0                  ADSC9   Y+1                      cn=0,n=8
         1 000227   000004 237200 0                  LDAQ  ! Y+1
         1 000230   000000 700200 xent               TSX0  ! X66_SUNWIND
         1 000231   000000 000200                    ZERO    0,128

(unnamed)
 Sect OctLoc
   2     000   000000 000000   000002 000000   000000 000002   000002 006000    ................
   2     004   000000 000001   000004 006000   000000 006000   000000 021766    ................
   2     010   000000 006000   000007 200000   000007 006000                    ............
     2161     1047        /*E*  ERROR: ZIU-DBU#PASTKER1-C
     2162     1048        MESSAGE: Error: Ran out of space in PA entry stack;
     2163     1049                        the stack size is %U3 K, owner DBK# is %U2 and
     2164     1050                        the set name is "%U1".  COMPACT aborted.
     2165     1051                        Increase resource limit and try again. */
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:413  
     2166     1052    1   END PUSH_PAENTRY;

PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:414  
--  Include file information  --

   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure PUSH_PAENTRY.

   Procedure PUSH_PAENTRY requires 154 words for executable code.
   Procedure PUSH_PAENTRY is declared NOAUTO and requires 8 words of local(STATIC) storage.

    No errors detected in file ZIU$COMPACT.:ZIC0TSI    .
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:415  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:416  
          MINI XREF LISTING

BIN_CHAR
      1002**DCL-ENT  1043--CALL     1044--CALL
BREAK_CLEANUP
       999**DCL      1046>>UNWIND
CURR_OWNER
        29**DCL      1044<>CALL
ENTRY$
       472**DCL       463--IMP-PTR   998--IMP-PTR  1006<<ASSIGN   1008>>IF       1012>>ASSIGN   1020>>ASSIGN
      1021>>ASSIGN   1038<<ASSIGN   1038>>ASSIGN
ENTRY_LEN
        30**DCL        24--IMP-SIZ   998--IMP-SIZ  1010>>ASSIGN   1012>>ASSIGN   1012>>ASSIGN   1025>>ASSIGN
      1038>>ASSIGN   1043>>CALL
ERROR_MSG
      1003**DCL-ENT  1045--CALL
GROUP$
       473**DCL       468--IMP-PTR  1022<<ASSIGN   1023>>ASSIGN   1027>>ASSIGN   1028>>ASSIGN   1030<<ASSIGN
      1030>>ASSIGN
HIGH_INDX
        19**DCL      1010>>ASSIGN   1013<<ASSIGN   1013>>ASSIGN   1014>>IF       1025>>ASSIGN   1032<<ASSIGN
      1032>>ASSIGN   1033>>IF
KEY$
        34**DCL      1021<<ASSIGN   1029>>ASSIGN
KEY_LEN
       475**DCL        35--IMP-SIZ  1029>>ASSIGN   1029>>ASSIGN
KEY_TBL.EIS
       247**DCL       248--REDEF
KEY_V
        35**DCL      1029<<ASSIGN   1029>>ASSIGN
LOW_INDX
        18**DCL      1014>>IF       1033>>IF
NO_SPACE_IN_STACK
      1043**LABEL    1015--GOTO     1034--GOTO
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:417  
PAENT2_STK.PA_DBK
        26**DCL      1026<<ASSIGN
PAENT2_STK.PTRS
        28**DCL      1028<<ASSIGN
PAENT2_STK.TYPE
        27**DCL      1027<<ASSIGN
PAENT_STK.ENT
        24**DCL      1012<<ASSIGN
PAENT_STK.PA_DBK
        23**DCL      1011<<ASSIGN
PAENT_STK_SIZE
        20**DCL      1013>>ASSIGN   1032>>ASSIGN   1043>>CALL
PASTK$
        21**DCL      1010>>ASSIGN   1025>>ASSIGN
PA_DBK
        17**DCL        15--PROC     1011>>ASSIGN   1026>>ASSIGN
PA_ENTRY.C
       464**DCL      1008>>IF
PA_ENTRY.PTRS
       467**DCL      1020>>ASSIGN
PA_GROUP.NO_GROUPS
       469**DCL      1023>>ASSIGN
PA_GROUP.PTRS
       471**DCL      1028>>ASSIGN
PA_GROUP.TYPE
       470**DCL      1027>>ASSIGN
PA_REC.ENTRIES
       461**DCL      1005>>ASSIGN   1040<<ASSIGN
PA_UNIQUE_ENTRY
       998**DCL      1012>>ASSIGN
PTR_LEN
       474**DCL        28--IMP-SIZ    36--IMP-SIZ   467--IMP-SIZ   471--IMP-SIZ  1006>>ASSIGN   1020>>ASSIGN
      1020>>ASSIGN   1020>>ASSIGN   1021>>ASSIGN   1028>>ASSIGN   1028>>ASSIGN   1029>>ASSIGN   1030>>ASSIGN
PTR_V
        36**DCL      1020<<ASSIGN
RC_TBL.NXPNT_EIS
PL6.E3A0      #007=PUSH_PAENTRY File=ZIU$COMPACT.:ZIC0TSI                        FRI 09/05/97 13:11 Page:418  
       230**DCL       231--REDEF
REC$
        32**DCL       451--IMP-PTR  1005>>ASSIGN   1006>>ASSIGN   1022>>ASSIGN   1040>>ASSIGN
REC2$
        31**DCL        22--IMP-PTR    25--IMP-PTR  1010<<ASSIGN   1011>>ASSIGN   1012>>ASSIGN   1025<<ASSIGN
      1026>>ASSIGN   1027>>ASSIGN   1028>>ASSIGN   1029>>ASSIGN
SC_PTR
       211**DCL      1045>>CALL
SC_TBL.KEY_PTR
       224**DCL       225--REDEF
SC_TBL.NAME
       213**DCL      1045<>CALL
X
        33**DCL      1005<<ASSIGN   1007>>DOWHILE  1037<<ASSIGN   1037>>ASSIGN
Y
        37**DCL      1019<<ASSIGN   1020--ASSIGN   1022>>ASSIGN   1023<<ASSIGN   1024>>DOWHILE  1031<<ASSIGN
      1031>>ASSIGN
