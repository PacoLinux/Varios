VERSION A06

PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:1    
        1        1        /*M* X8CL$ ??? -- Contains the modules which support CALL.          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8             NAME: X8CL$CALL
        9        9          PURPOSE: To handle the tasks associated with call identifier and
       10       10                   all external calls.
       11       11        */
       12       12
       13       13        /*-------*/
       14       14        X8CL$CALL:             PROC MATERIALIZE ($PR0 IN PR0$, $PR1 IN PR1$) ALTRET;
       15       15        /*-------*/
       16       16
       17       17            %INCLUDE X8A_LIBCOM;
       18      237            %INCLUDE X8A_CSIB;
       19      302            %INCLUDE X8A_ERRCOM;
       20      391            %INCLUDE X8A_MACROS;
       21      648            %INCLUDE X9A_MACROS;
       22      679
       23      680    1       DCL ARG$ ( 0:0 )      PTR BASED( PR0$ ); /* variable # of args */
       24      681    1       DCL 1 DESC            BASED( PR1$ ) ALIGNED,
       25      682                %DCL_RT_DESC( @DIM = "( 0:0 )" );
       26      704    1       DCL NAME_LEN          SBIN WORD;
       27      705    1       DCL NAME              CHAR( NAME_LEN ) BASED ( P$ );
       28      706    1       DCL 1 CALLEE          ALIGNED,
       29      707    1            2 LENGTH         UBIN(9)  UNAL,
       30      708    1            2 NAME           CHAR(31) UNAL;
       31      709    1       DCL P$                PTR;
       32      710    1       DCL NAME$             PTR;
       33      711    1       DCL PROC$             PTR;
       34      712    1       DCL PR0$              PTR;
       35      713    1       DCL PR1$              PTR;
       36      714    1       DCL CSIB$$            PTR;
       37      715    1       DCL CSIB$             PTR;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:2    
       38      716           %DCL_CSIB;
       39      745
       40      746
       41      747    1       DCL X8CL$SEARCH           ENTRY(5);
       42      748    1       DCL X8ER$ERROR            ENTRY(3);
       43      749    1       DCL X9CL$CALL             ENTRY(3);
       44      750    1       DCL X9OL$CALL_OLAY        ENTRY(2) ALTRET;
       45      751
       46      752    1       CSIB$ = PR0$-> ARG$( PR1$-> DESC.ARGS# + 1);
       47      753    1       NAME_LEN = DESC.D_WORD.DES_W.ADSC.ARG_SIZE(DESC.ARGS#);
       48      754    1       P$ = ARG$( DESC.ARGS# );
       49      755    1       NAME$ = ADDR(NIL);
       50      756    1       CSIB$$ = CSIB$;
       51      757
       52      758        %EJECT;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:3    
       53      759        /*V*           Recursive_Call
       54      760
       55      761              Check for the attempt of a recursive call.
       56      762
       57      763        */
       58      764
       59      765    1       IF CSIB$-> CSIB.NAME_TEXT = NAME THEN
       60      766    2         DO;
       61      767    2           CALL X8ER$ERROR ( %IPC_RECURSIVE_CALL, NAME, NAME_LEN );
       62      768    2           ALTRETURN;
       63      769    2         END;
       64      770        %EJECT;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:4    
       65      771        /*V*           Search_Sons
       66      772
       67      773               Callee is a son of the caller; check the active bit and
       68      774               make the call.
       69      775        */
       70      776
       71      777    1       CALL X8CL$SEARCH( CSIB$-> CSIB.SON$, NAME_LEN, NAME, NAME$, PROC$ );
       72      778    1       IF NAME$ ~= ADDR(NIL) THEN
       73      779    1         IF NAME$-> CSIB.B.ACTIVE THEN
       74      780    2           DO;
       75      781    2             CALL X8ER$ERROR( %IPC_RECURSIVE_CALL, NAME, NAME_LEN );
       76      782    2             ALTRETURN;
       77      783    2           END;
       78      784    1         ELSE
       79      785    2           DO;
       80      786    2             CALL X9CL$CALL( PROC$, ARG$, DESC );   /* one way call */
       81      787    2           END;
       82      788        %EJECT;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:5    
       83      789        /*V*           Search_Brothers
       84      790
       85      791                  Caller is the brother of the the callee or the caller is
       86      792              an uncle( great uncle ....) of the callee: check the active and
       87      793              the common bits then make the call.
       88      794
       89      795        */
       90      796
       91      797    1         CSIB$$ = CSIB$$-> CSIB.FATHER$;
       92      798    2         DO WHILE ( CSIB$$ ~= ADDR(NIL) AND NAME$ = ADDR(NIL) );
       93      799    2           CALL X8CL$SEARCH( CSIB$$-> CSIB.SON$, NAME_LEN, NAME, NAME$, PROC$ );
       94      800    2           CSIB$$ = CSIB$$-> CSIB.FATHER$;
       95      801    2         END;
       96      802
       97      803    1         IF NAME$ ~= ADDR(NIL) THEN
       98      804    1          IF NAME$-> CSIB.B.ACTIVE THEN
       99      805    2            DO;
      100      806    2              CALL X8ER$ERROR( %IPC_RECURSIVE_CALL, NAME, NAME_LEN );
      101      807    2              ALTRETURN;
      102      808    2            END;
      103      809    1          ELSE
      104      810    1            IF NAME$-> CSIB.B.COMMON THEN
      105      811    2              DO;
      106      812    2                CALL X9CL$CALL( PROC$, ARG$, DESC ); /* oneway call */
      107      813    2              END;
      108      814    1            ELSE
      109      815    2              DO;
      110      816    2                CALL X8ER$ERROR( %IPC_NOT_COMMON, NAME, NAME_LEN );
      111      817    2                ALTRETURN;
      112      818    2              END;
      113      819        %EJECT;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:6    
      114      820        /*V*                   OVERLAYS
      115      821
      116      822               If the callee is not found in the link list of csibs,
      117      823               call M$OLAY to bring in the module
      118      824        */
      119      825
      120      826    1       IF NAME$ = ADDR(NIL) THEN
      121      827    2         DO;
      122      828    2           CALLEE.LENGTH = NAME_LEN;
      123      829    2           CALLEE.NAME   = NAME;
      124      830    2           CALL X9OL$CALL_OLAY ( CALLEE, PROC$ )
      125      831    2           WHENRETURN
      126      832    3             DO;
      127      833    3               CALL X9CL$CALL ( PROC$, ARG$, DESC ); /* oneway call */
      128      834    3             END;
      129      835    2           WHENALTRETURN
      130      836    3             DO;
      131      837    3               CALL X8ER$ERROR( %IPC_PROGRAM_NOT_FOUND, NAME, NAME_LEN );
      132      838    3               ALTRETURN;
      133      839    3             END;
      134      840    2         END;
      135      841
      136      842
      137      843    1   END X8CL$CALL;  /* proc */
      138      844        %EJECT;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:7    
      139      845        %EOD;

PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:8    
--  Include file information  --

   X9A_MACROS.:X8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   X8A_MACROS.:X8A6TOU  is referenced.
   X8A_ERRCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$CALL.

   Procedure X8CL$CALL requires 185 words for executable code.
   Procedure X8CL$CALL requires 82 words of local(AUTO) storage.

PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:9    

 Object Unit name= X8CL$CALL                                  File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:43:40.32 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none    20     24  LIBCOM
    1  LblCom even  none     1      1  DEC_OR_COMMA
    2  LblCom even  none    20     24  IN_TEMP
    3  LblCom even  none     1      1  OVRCHR
    4  LblCom even  none     1      1  SELECT_TIME
    5  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    6  LblCom even  none    18     22  DSPLY_SAVE
    7  LblCom even  none     3      3  D_DATE
    8  LblCom even  none     3      3  D_TIME
    9  LblCom even  none     1      1  D_DAY
   10  LblCom even  none     2      2  C_DATE
   11  LblCom even  none     2      2  C_TIME
   12  LblCom even  none     2      2  C_DAY
   13  LblCom even  none     1      1  RTHOLD2
   14  LblCom even  none     1      1  LTHOLD2
   15  LblCom even  none     1      1  NDX2
   16  LblCom even  none     1      1  IN_LEN
   17   Proc  even  none   185    271  X8CL$CALL
   18  RoData even  none    10     12  X8CL$CALL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes    yes     yes      Std        0  X8CL$CALL
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:10   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 X8ER$ERROR
         yes           Std       5 X8CL$SEARCH
         yes           Std       3 X9CL$CALL
 yes     yes           Std       2 X9OL$CALL_OLAY
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:11   


        1        1        /*M* X8CL$ ??? -- Contains the modules which support CALL.          */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8             NAME: X8CL$CALL
        9        9          PURPOSE: To handle the tasks associated with call identifier and
       10       10                   all external calls.
       11       11        */
       12       12
       13       13        /*-------*/
       14       14        X8CL$CALL:             PROC MATERIALIZE ($PR0 IN PR0$, $PR1 IN PR1$) ALTRET;

     14 17 000000   000000 700200 xent  X8CL$CALL    TSX0  ! X66_AUTO_0
        17 000001   000122 000000                    ZERO    82,0
        17 000002   200110 450700                    STP0  ! PR0$,,AUTO
        17 000003   200111 451700                    STP1  ! PR1$,,AUTO

       15       15        /*-------*/
       16       16
       17       17            %INCLUDE X8A_LIBCOM;
       18      237            %INCLUDE X8A_CSIB;
       19      302            %INCLUDE X8A_ERRCOM;
       20      391            %INCLUDE X8A_MACROS;
       21      648            %INCLUDE X9A_MACROS;
       22      679
       23      680    1       DCL ARG$ ( 0:0 )      PTR BASED( PR0$ ); /* variable # of args */
       24      681    1       DCL 1 DESC            BASED( PR1$ ) ALIGNED,
       25      682                %DCL_RT_DESC( @DIM = "( 0:0 )" );
       26      704    1       DCL NAME_LEN          SBIN WORD;
       27      705    1       DCL NAME              CHAR( NAME_LEN ) BASED ( P$ );
       28      706    1       DCL 1 CALLEE          ALIGNED,
       29      707    1            2 LENGTH         UBIN(9)  UNAL,
       30      708    1            2 NAME           CHAR(31) UNAL;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:12   
       31      709    1       DCL P$                PTR;
       32      710    1       DCL NAME$             PTR;
       33      711    1       DCL PROC$             PTR;
       34      712    1       DCL PR0$              PTR;
       35      713    1       DCL PR1$              PTR;
       36      714    1       DCL CSIB$$            PTR;
       37      715    1       DCL CSIB$             PTR;
       38      716           %DCL_CSIB;
       39      745
       40      746
       41      747    1       DCL X8CL$SEARCH           ENTRY(5);
       42      748    1       DCL X8ER$ERROR            ENTRY(3);
       43      749    1       DCL X9CL$CALL             ENTRY(3);
       44      750    1       DCL X9OL$CALL_OLAY        ENTRY(2) ALTRET;
       45      751
       46      752    1       CSIB$ = PR0$-> ARG$( PR1$-> DESC.ARGS# + 1);

    752 17 000004   100000 220100                    LDX0    0,,PR1
        17 000005   000001 236110                    LDQ     1,X0,PR0
        17 000006   200113 756100                    STQ     CSIB$,,AUTO

       47      753    1       NAME_LEN = DESC.D_WORD.DES_W.ADSC.ARG_SIZE(DESC.ARGS#);

    753 17 000007   100001 236110                    LDQ     1,X0,PR1
        17 000010   017777 376007                    ANQ     8191,DL
        17 000011   200074 756100                    STQ     NAME_LEN,,AUTO

       48      754    1       P$ = ARG$( DESC.ARGS# );

    754 17 000012   100000 220100                    LDX0    0,,PR1
        17 000013   000000 236110                    LDQ     0,X0,PR0
        17 000014   200105 756100                    STQ     P$,,AUTO

       49      755    1       NAME$ = ADDR(NIL);

    755 17 000015   000000 236000 18                 LDQ     0
        17 000016   200106 756100                    STQ     NAME$,,AUTO
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:13   

       50      756    1       CSIB$$ = CSIB$;

    756 17 000017   200113 236100                    LDQ     CSIB$,,AUTO
        17 000020   200112 756100                    STQ     CSIB$$,,AUTO

       51      757
       52      758        %EJECT;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:14   
       53      759        /*V*           Recursive_Call
       54      760
       55      761              Check for the attempt of a recursive call.
       56      762
       57      763        */
       58      764
       59      765    1       IF CSIB$-> CSIB.NAME_TEXT = NAME THEN

    765 17 000021   200113 473500                    LDP3    CSIB$,,AUTO
        17 000022   300007 720100                    LXL0    7,,PR3
        17 000023   200105 474500                    LDP4    P$,,AUTO
        17 000024   200074 721100                    LXL1    NAME_LEN,,AUTO
        17 000025   040140 106540                    CMPC    fill='040'O
        17 000026   300010 000010                    ADSC9   8,,PR3                   cn=0,n=*X0
        17 000027   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
        17 000030   000043 601000 17                 TNZ     s:777

       60      766    2         DO;

       61      767    2           CALL X8ER$ERROR ( %IPC_RECURSIVE_CALL, NAME, NAME_LEN );

    767 17 000031   200074 635500                    EPPR5   NAME_LEN,,AUTO
        17 000032   200116 455500                    STP5    CSIB$+3,,AUTO
        17 000033   200105 236100                    LDQ     P$,,AUTO
        17 000034   000003 235000 18                 LDA     3
        17 000035   200114 757100                    STAQ    CSIB$+1,,AUTO
        17 000036   200114 630500                    EPPR0   CSIB$+1,,AUTO
        17 000037   000001 631400 18                 EPPR1   1
        17 000040   000000 701000 xent               TSX1    X8ER$ERROR
        17 000041   000000 011000                    NOP     0

       62      768    2           ALTRETURN;

    768 17 000042   000000 702200 xent               TSX2  ! X66_AALT

       63      769    2         END;
       64      770        %EJECT;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:15   
       65      771        /*V*           Search_Sons
       66      772
       67      773               Callee is a son of the caller; check the active bit and
       68      774               make the call.
       69      775        */
       70      776
       71      777    1       CALL X8CL$SEARCH( CSIB$-> CSIB.SON$, NAME_LEN, NAME, NAME$, PROC$ );

    777 17 000043   200107 635500                    EPPR5   PROC$,,AUTO
        17 000044   200120 455500                    STP5    CSIB$+5,,AUTO
        17 000045   200106 636500                    EPPR6   NAME$,,AUTO
        17 000046   200117 456500                    STP6    CSIB$+4,,AUTO
        17 000047   200105 236100                    LDQ     P$,,AUTO
        17 000050   200116 756100                    STQ     CSIB$+3,,AUTO
        17 000051   200074 637500                    EPPR7   NAME_LEN,,AUTO
        17 000052   200115 457500                    STP7    CSIB$+2,,AUTO
        17 000053   200113 236100                    LDQ     CSIB$,,AUTO
        17 000054   000001 036003                    ADLQ    1,DU
        17 000055   200114 756100                    STQ     CSIB$+1,,AUTO
        17 000056   200114 630500                    EPPR0   CSIB$+1,,AUTO
        17 000057   000004 631400 18                 EPPR1   4
        17 000060   000000 701000 xent               TSX1    X8CL$SEARCH
        17 000061   000000 011000                    NOP     0

       72      778    1       IF NAME$ ~= ADDR(NIL) THEN

    778 17 000062   200106 236100                    LDQ     NAME$,,AUTO
        17 000063   000000 116000 18                 CMPQ    0
        17 000064   000115 600000 17                 TZE     s:797

       73      779    1         IF NAME$-> CSIB.B.ACTIVE THEN

    779 17 000065   200106 470500                    LDP0    NAME$,,AUTO
        17 000066   000006 236100                    LDQ     6,,PR0
        17 000067   040000 316003                    CANQ    16384,DU
        17 000070   000103 600000 17                 TZE     s:786

PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:16   
       74      780    2           DO;

       75      781    2             CALL X8ER$ERROR( %IPC_RECURSIVE_CALL, NAME, NAME_LEN );

    781 17 000071   200074 631500                    EPPR1   NAME_LEN,,AUTO
        17 000072   200116 451500                    STP1    CSIB$+3,,AUTO
        17 000073   200105 236100                    LDQ     P$,,AUTO
        17 000074   000003 235000 18                 LDA     3
        17 000075   200114 757100                    STAQ    CSIB$+1,,AUTO
        17 000076   200114 630500                    EPPR0   CSIB$+1,,AUTO
        17 000077   000001 631400 18                 EPPR1   1
        17 000100   000000 701000 xent               TSX1    X8ER$ERROR
        17 000101   000000 011000                    NOP     0

       76      782    2             ALTRETURN;

    782 17 000102   000000 702200 xent               TSX2  ! X66_AALT

       77      783    2           END;
       78      784    1         ELSE
       79      785    2           DO;

       80      786    2             CALL X9CL$CALL( PROC$, ARG$, DESC );   /* one way call */

    786 17 000103   200111 236100                    LDQ     PR1$,,AUTO
        17 000104   200116 756100                    STQ     CSIB$+3,,AUTO
        17 000105   200110 236100                    LDQ     PR0$,,AUTO
        17 000106   200115 756100                    STQ     CSIB$+2,,AUTO
        17 000107   200107 631500                    EPPR1   PROC$,,AUTO
        17 000110   200114 451500                    STP1    CSIB$+1,,AUTO
        17 000111   200114 630500                    EPPR0   CSIB$+1,,AUTO
        17 000112   000001 631400 18                 EPPR1   1
        17 000113   000000 701000 xent               TSX1    X9CL$CALL
        17 000114   000000 011000                    NOP     0

       81      787    2           END;

PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:17   
       82      788        %EJECT;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:18   
       83      789        /*V*           Search_Brothers
       84      790
       85      791                  Caller is the brother of the the callee or the caller is
       86      792              an uncle( great uncle ....) of the callee: check the active and
       87      793              the common bits then make the call.
       88      794
       89      795        */
       90      796
       91      797    1         CSIB$$ = CSIB$$-> CSIB.FATHER$;

    797 17 000115   200112 470500                    LDP0    CSIB$$,,AUTO
        17 000116   000002 236100                    LDQ     2,,PR0
        17 000117   200112 756100                    STQ     CSIB$$,,AUTO

       92      798    2         DO WHILE ( CSIB$$ ~= ADDR(NIL) AND NAME$ = ADDR(NIL) );

    798 17 000120   000143 710000 17                 TRA     s:801

       93      799    2           CALL X8CL$SEARCH( CSIB$$-> CSIB.SON$, NAME_LEN, NAME, NAME$, PROC$ );

    799 17 000121   200107 630500                    EPPR0   PROC$,,AUTO
        17 000122   200120 450500                    STP0    CSIB$+5,,AUTO
        17 000123   200106 631500                    EPPR1   NAME$,,AUTO
        17 000124   200117 451500                    STP1    CSIB$+4,,AUTO
        17 000125   200105 236100                    LDQ     P$,,AUTO
        17 000126   200116 756100                    STQ     CSIB$+3,,AUTO
        17 000127   200074 633500                    EPPR3   NAME_LEN,,AUTO
        17 000130   200115 453500                    STP3    CSIB$+2,,AUTO
        17 000131   200112 236100                    LDQ     CSIB$$,,AUTO
        17 000132   000001 036003                    ADLQ    1,DU
        17 000133   200114 756100                    STQ     CSIB$+1,,AUTO
        17 000134   200114 630500                    EPPR0   CSIB$+1,,AUTO
        17 000135   000004 631400 18                 EPPR1   4
        17 000136   000000 701000 xent               TSX1    X8CL$SEARCH
        17 000137   000000 011000                    NOP     0

       94      800    2           CSIB$$ = CSIB$$-> CSIB.FATHER$;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:19   

    800 17 000140   200112 470500                    LDP0    CSIB$$,,AUTO
        17 000141   000002 236100                    LDQ     2,,PR0
        17 000142   200112 756100                    STQ     CSIB$$,,AUTO

       95      801    2         END;

    801 17 000143   000000 116000 18                 CMPQ    0
        17 000144   000150 600000 17                 TZE     s:803
        17 000145   200106 236100                    LDQ     NAME$,,AUTO
        17 000146   000000 116000 18                 CMPQ    0
        17 000147   000121 600000 17                 TZE     s:799

       96      802
       97      803    1         IF NAME$ ~= ADDR(NIL) THEN

    803 17 000150   200106 236100                    LDQ     NAME$,,AUTO
        17 000151   000000 116000 18                 CMPQ    0
        17 000152   000220 600000 17                 TZE     s:826

       98      804    1          IF NAME$-> CSIB.B.ACTIVE THEN

    804 17 000153   200106 470500                    LDP0    NAME$,,AUTO
        17 000154   000006 236100                    LDQ     6,,PR0
        17 000155   040000 316003                    CANQ    16384,DU
        17 000156   000171 600000 17                 TZE     s:810

       99      805    2            DO;

      100      806    2              CALL X8ER$ERROR( %IPC_RECURSIVE_CALL, NAME, NAME_LEN );

    806 17 000157   200074 631500                    EPPR1   NAME_LEN,,AUTO
        17 000160   200116 451500                    STP1    CSIB$+3,,AUTO
        17 000161   200105 236100                    LDQ     P$,,AUTO
        17 000162   000003 235000 18                 LDA     3
        17 000163   200114 757100                    STAQ    CSIB$+1,,AUTO
        17 000164   200114 630500                    EPPR0   CSIB$+1,,AUTO
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:20   
        17 000165   000001 631400 18                 EPPR1   1
        17 000166   000000 701000 xent               TSX1    X8ER$ERROR
        17 000167   000000 011000                    NOP     0

      101      807    2              ALTRETURN;

    807 17 000170   000000 702200 xent               TSX2  ! X66_AALT

      102      808    2            END;
      103      809    1          ELSE
      104      810    1            IF NAME$-> CSIB.B.COMMON THEN

    810 17 000171   100000 316003                    CANQ    32768,DU
        17 000172   000206 600000 17                 TZE     s:816

      105      811    2              DO;

      106      812    2                CALL X9CL$CALL( PROC$, ARG$, DESC ); /* oneway call */

    812 17 000173   200111 236100                    LDQ     PR1$,,AUTO
        17 000174   200116 756100                    STQ     CSIB$+3,,AUTO
        17 000175   200110 236100                    LDQ     PR0$,,AUTO
        17 000176   200115 756100                    STQ     CSIB$+2,,AUTO
        17 000177   200107 631500                    EPPR1   PROC$,,AUTO
        17 000200   200114 451500                    STP1    CSIB$+1,,AUTO
        17 000201   200114 630500                    EPPR0   CSIB$+1,,AUTO
        17 000202   000001 631400 18                 EPPR1   1
        17 000203   000000 701000 xent               TSX1    X9CL$CALL
        17 000204   000000 011000                    NOP     0

      107      813    2              END;

    813 17 000205   000220 710000 17                 TRA     s:826

      108      814    1            ELSE
      109      815    2              DO;

PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:21   
      110      816    2                CALL X8ER$ERROR( %IPC_NOT_COMMON, NAME, NAME_LEN );

    816 17 000206   200074 631500                    EPPR1   NAME_LEN,,AUTO
        17 000207   200116 451500                    STP1    CSIB$+3,,AUTO
        17 000210   200105 236100                    LDQ     P$,,AUTO
        17 000211   000006 235000 18                 LDA     6
        17 000212   200114 757100                    STAQ    CSIB$+1,,AUTO
        17 000213   200114 630500                    EPPR0   CSIB$+1,,AUTO
        17 000214   000001 631400 18                 EPPR1   1
        17 000215   000000 701000 xent               TSX1    X8ER$ERROR
        17 000216   000000 011000                    NOP     0

      111      817    2                ALTRETURN;

    817 17 000217   000000 702200 xent               TSX2  ! X66_AALT

      112      818    2              END;
      113      819        %EJECT;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:22   
      114      820        /*V*                   OVERLAYS
      115      821
      116      822               If the callee is not found in the link list of csibs,
      117      823               call M$OLAY to bring in the module
      118      824        */
      119      825
      120      826    1       IF NAME$ = ADDR(NIL) THEN

    826 17 000220   200106 236100                    LDQ     NAME$,,AUTO
        17 000221   000000 116000 18                 CMPQ    0
        17 000222   000270 601000 17                 TNZ     s:843

      121      827    2         DO;

      122      828    2           CALLEE.LENGTH = NAME_LEN;

    828 17 000223   200074 236100                    LDQ     NAME_LEN,,AUTO
        17 000224   000033 736000                    QLS     27
        17 000225   200075 552140                    STBQ    CALLEE,'40'O,AUTO

      123      829    2           CALLEE.NAME   = NAME;

    829 17 000226   200105 470500                    LDP0    P$,,AUTO
        17 000227   200074 720100                    LXL0    NAME_LEN,,AUTO
        17 000230   040100 100540                    MLR     fill='040'O
        17 000231   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        17 000232   200075 200037                    ADSC9   CALLEE,,AUTO             cn=1,n=31

      124      830    2           CALL X9OL$CALL_OLAY ( CALLEE, PROC$ )

    830 17 000233   200107 631500                    EPPR1   PROC$,,AUTO
        17 000234   200115 451500                    STP1    CSIB$+2,,AUTO
        17 000235   200075 633500                    EPPR3   CALLEE,,AUTO
        17 000236   200114 453500                    STP3    CSIB$+1,,AUTO
        17 000237   200114 630500                    EPPR0   CSIB$+1,,AUTO
        17 000240   000007 631400 18                 EPPR1   7
        17 000241   000000 701000 xent               TSX1    X9OL$CALL_OLAY
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:23   
        17 000242   000256 702000 17                 TSX2    s:837

      125      831    2           WHENRETURN
      126      832    3             DO;

      127      833    3               CALL X9CL$CALL ( PROC$, ARG$, DESC ); /* oneway call */

    833 17 000243   200111 236100                    LDQ     PR1$,,AUTO
        17 000244   200116 756100                    STQ     CSIB$+3,,AUTO
        17 000245   200110 236100                    LDQ     PR0$,,AUTO
        17 000246   200115 756100                    STQ     CSIB$+2,,AUTO
        17 000247   200107 630500                    EPPR0   PROC$,,AUTO
        17 000250   200114 450500                    STP0    CSIB$+1,,AUTO
        17 000251   200114 630500                    EPPR0   CSIB$+1,,AUTO
        17 000252   000001 631400 18                 EPPR1   1
        17 000253   000000 701000 xent               TSX1    X9CL$CALL
        17 000254   000000 011000                    NOP     0

      128      834    3             END;

    834 17 000255   000270 710000 17                 TRA     s:843

      129      835    2           WHENALTRETURN
      130      836    3             DO;

      131      837    3               CALL X8ER$ERROR( %IPC_PROGRAM_NOT_FOUND, NAME, NAME_LEN );

    837 17 000256   200074 630500                    EPPR0   NAME_LEN,,AUTO
        17 000257   200116 450500                    STP0    CSIB$+3,,AUTO
        17 000260   200105 236100                    LDQ     P$,,AUTO
        17 000261   000011 235000 18                 LDA     9
        17 000262   200114 757100                    STAQ    CSIB$+1,,AUTO
        17 000263   200114 630500                    EPPR0   CSIB$+1,,AUTO
        17 000264   000001 631400 18                 EPPR1   1
        17 000265   000000 701000 xent               TSX1    X8ER$ERROR
        17 000266   000000 011000                    NOP     0

PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:24   
      132      838    3               ALTRETURN;

    838 17 000267   000000 702200 xent               TSX2  ! X66_AALT

      133      839    3             END;
      134      840    2         END;

      135      841
      136      842
      137      843    1   END X8CL$CALL;  /* proc */

    843 17 000270   000000 702200 xent               TSX2  ! X66_ARET
      138      844        %EJECT;
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:25   
      139      845        %EOD;

PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:26   
--  Include file information  --

   X9A_MACROS.:X8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   X8A_MACROS.:X8A6TOU  is referenced.
   X8A_ERRCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$CALL.
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:27   

 **** Variables and constants ****

  ****  Section 000 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)         1 LIBCOM

  ****  Section 001 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 002 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 003 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 004 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:28   
  ****  Section 005 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 006 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 007 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 008 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 009 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 010 LblCom C_DATE

PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:29   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 011 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 012 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 013 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 014 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 015 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=X8CL$CALL File=X8CL.:X8A6TSI                                  SAT 08/09/97 10:43 Page:30   

     0-0-0/w SBIN              1 NDX2

  ****  Section 016 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    75-0-0/w STRC(288)   r     1 CALLEE                   113-0-0/w PTR         r     1 CSIB$
   112-0-0/w PTR         r     1 CSIB$$                     3-0-0/w SBIN              1 LT
     4-0-0/c CHAR(65)          1 LTHOLD                   106-0-0/w PTR         r     1 NAME$
    74-0-0/w SBIN        r     1 NAME_LEN                  46-0-0/w SBIN              1 NDX
    47-0-0/w SBIN              1 NDX3                     105-0-0/w PTR         r     1 P$
   110-0-0/w PTR         r     1 PR0$                     111-0-0/w PTR         r     1 PR1$
   107-0-0/w PTR         r     1 PROC$                     25-0-0/c CHAR(65)          1 RTHOLD
    50-0-0/c CHAR(80)          1 SPECIAL_ERR_MSG

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ARG$(0:0)                  0-0-0/w ASTR(288)   r     1 CSIB
     0-0-0/w STRC(72)    r     1 DESC                       0-0-0/c ACHR        r     1 NAME


   Procedure X8CL$CALL requires 185 words for executable code.
   Procedure X8CL$CALL requires 82 words of local(AUTO) storage.

PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:31   
      140        1        /*T***********************************************************/
      141        2        /*T*                                                         */
      142        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      143        4        /*T*                                                         */
      144        5        /*T***********************************************************/
      145        6
      146        7        /*---------*/
      147        8        X8CL$SEARCH:           PROC (CSIB$, NAME_LEN, NAME, NAME$, PROC$);
      148        9        /*---------*/
      149       10
      150       11            %INCLUDE X8A_LIBCOM;
      151      231            %INCLUDE X8A_CSIB;
      152      296
      153      297    1       DCL CSIB$          PTR;
      154      298    1       DCL NAME           CHAR (NAME_LEN);
      155      299    1       DCL NAME_LEN       UBIN ;
      156      300    1       DCL NAME$          PTR ;
      157      301    1       DCL PROC$          PTR;
      158      302           %DCL_CSIB;
      159      331
      160      332    1       DCL X8CL$SEARCH_ENTRY_PT  ENTRY(5);
      161      333
      162      334    1       IF CSIB$ ~= ADDR(NIL) THEN
      163      335    1         IF CSIB$-> CSIB.NAME_TEXT = NAME  THEN
      164      336    2           DO;
      165      337    2             NAME$ = CSIB$;  /* we found a match */
      166      338    2             PROC$ = CSIB$-> CSIB.ENTRY$;
      167      339    2           END;
      168      340    1         ELSE
      169      341    2           DO;
      170      342    2             IF CSIB$-> CSIB.CSIBE$ ~= ADDR(NIL) THEN
      171      343    2               CALL X8CL$SEARCH_ENTRY_PT ( CSIB$, NAME_LEN, NAME, NAME$ );
      172      344    2             IF NAME$ = ADDR(NIL) THEN      /* no match was found */
      173      345    2               CALL X8CL$SEARCH( CSIB$-> CSIB.BROTHER$, NAME_LEN,
      174      346    2                                             NAME, NAME$, PROC$);
      175      347    2           END;
      176      348
PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:32   
      177      349    1   END X8CL$SEARCH;
      178      350        %EJECT;
PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:33   
      179      351        %EOD;

PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:34   
--  Include file information  --

   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$SEARCH.

   Procedure X8CL$SEARCH requires 48 words for executable code.
   Procedure X8CL$SEARCH requires 52 words of local(AUTO) storage.

PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:35   

 Object Unit name= X8CL$SEARCH                                File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:44:31.88 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none    20     24  LIBCOM
    1  LblCom even  none     1      1  DEC_OR_COMMA
    2  LblCom even  none    20     24  IN_TEMP
    3  LblCom even  none     1      1  OVRCHR
    4  LblCom even  none     1      1  SELECT_TIME
    5  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    6  LblCom even  none    18     22  DSPLY_SAVE
    7  LblCom even  none     3      3  D_DATE
    8  LblCom even  none     3      3  D_TIME
    9  LblCom even  none     1      1  D_DAY
   10  LblCom even  none     2      2  C_DATE
   11  LblCom even  none     2      2  C_TIME
   12  LblCom even  none     2      2  C_DAY
   13  LblCom even  none     1      1  RTHOLD2
   14  LblCom even  none     1      1  LTHOLD2
   15  LblCom even  none     1      1  NDX2
   16  LblCom even  none     1      1  IN_LEN
   17   Proc  even  none    48     60  X8CL$SEARCH
   18  RoData even  none     3      3  X8CL$SEARCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes            yes      Std        5  X8CL$SEARCH
PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:36   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 X8CL$SEARCH_ENTRY_PT
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:37   


      140        1        /*T***********************************************************/
      141        2        /*T*                                                         */
      142        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      143        4        /*T*                                                         */
      144        5        /*T***********************************************************/
      145        6
      146        7        /*---------*/
      147        8        X8CL$SEARCH:           PROC (CSIB$, NAME_LEN, NAME, NAME$, PROC$);

      8 17 000000   000000 700200 xent  X8CL$SEARCH  TSX0  ! X66_AUTO_5
        17 000001   000064 000005                    ZERO    52,5

      148        9        /*---------*/
      149       10
      150       11            %INCLUDE X8A_LIBCOM;
      151      231            %INCLUDE X8A_CSIB;
      152      296
      153      297    1       DCL CSIB$          PTR;
      154      298    1       DCL NAME           CHAR (NAME_LEN);
      155      299    1       DCL NAME_LEN       UBIN ;
      156      300    1       DCL NAME$          PTR ;
      157      301    1       DCL PROC$          PTR;
      158      302           %DCL_CSIB;
      159      331
      160      332    1       DCL X8CL$SEARCH_ENTRY_PT  ENTRY(5);
      161      333
      162      334    1       IF CSIB$ ~= ADDR(NIL) THEN

    334 17 000002   200003 470500                    LDP0    @CSIB$,,AUTO
        17 000003   000000 236100                    LDQ     0,,PR0
        17 000004   000000 116000 18                 CMPQ    0
        17 000005   000057 600000 17                 TZE     s:349

      163      335    1         IF CSIB$-> CSIB.NAME_TEXT = NAME  THEN

    335 17 000006   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:38   
        17 000007   100007 720100                    LXL0    7,,PR1
        17 000010   200004 473500                    LDP3    @NAME_LEN,,AUTO
        17 000011   300000 721100                    LXL1    0,,PR3
        17 000012   200005 474500                    LDP4    @NAME,,AUTO
        17 000013   040140 106540                    CMPC    fill='040'O
        17 000014   100010 000010                    ADSC9   8,,PR1                   cn=0,n=*X0
        17 000015   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1
        17 000016   000026 601000 17                 TNZ     s:342

      164      336    2           DO;

      165      337    2             NAME$ = CSIB$;  /* we found a match */

    337 17 000017   200006 475500                    LDP5    @NAME$,,AUTO
        17 000020   500000 756100                    STQ     0,,PR5

      166      338    2             PROC$ = CSIB$-> CSIB.ENTRY$;

    338 17 000021   000000 471500                    LDP1    0,,PR0
        17 000022   100005 236100                    LDQ     5,,PR1
        17 000023   200007 476500                    LDP6    @PROC$,,AUTO
        17 000024   600000 756100                    STQ     0,,PR6

      167      339    2           END;

    339 17 000025   000057 710000 17                 TRA     s:349

      168      340    1         ELSE
      169      341    2           DO;

      170      342    2             IF CSIB$-> CSIB.CSIBE$ ~= ADDR(NIL) THEN

    342 17 000026   100004 236100                    LDQ     4,,PR1
        17 000027   000000 116000 18                 CMPQ    0
        17 000030   000035 600000 17                 TZE     s:344

      171      343    2               CALL X8CL$SEARCH_ENTRY_PT ( CSIB$, NAME_LEN, NAME, NAME$ );
PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:39   

    343 17 000031   200003 630500                    EPPR0   @CSIB$,,AUTO
        17 000032   000001 631400 18                 EPPR1   1
        17 000033   000000 701000 xent               TSX1    X8CL$SEARCH_ENTRY_PT
        17 000034   000000 011000                    NOP     0

      172      344    2             IF NAME$ = ADDR(NIL) THEN      /* no match was found */

    344 17 000035   200006 470500                    LDP0    @NAME$,,AUTO
        17 000036   000000 236100                    LDQ     0,,PR0
        17 000037   000000 116000 18                 CMPQ    0
        17 000040   000057 601000 17                 TNZ     s:349

      173      345    2               CALL X8CL$SEARCH( CSIB$-> CSIB.BROTHER$, NAME_LEN,

    345 17 000041   200003 471500                    LDP1    @CSIB$,,AUTO
        17 000042   100000 473500                    LDP3    0,,PR1
        17 000043   200007 236100                    LDQ     @PROC$,,AUTO
        17 000044   200062 756100                    STQ     NDX3+6,,AUTO
        17 000045   200006 236100                    LDQ     @NAME$,,AUTO
        17 000046   200005 235100                    LDA     @NAME,,AUTO
        17 000047   200060 757100                    STAQ    NDX3+4,,AUTO
        17 000050   200004 236100                    LDQ     @NAME_LEN,,AUTO
        17 000051   200057 756100                    STQ     NDX3+3,,AUTO
        17 000052   200056 453500                    STP3    NDX3+2,,AUTO
        17 000053   200056 630500                    EPPR0   NDX3+2,,AUTO
        17 000054   000002 631400 18                 EPPR1   2
        17 000055   000000 701000 17                 TSX1    s:8
        17 000056   000000 011000                    NOP     0

      174      346    2                                             NAME, NAME$, PROC$);
      175      347    2           END;

      176      348
      177      349    1   END X8CL$SEARCH;

    349 17 000057   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:40   
      178      350        %EJECT;
PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:41   
      179      351        %EOD;

PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:42   
--  Include file information  --

   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$SEARCH.
PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:43   

 **** Variables and constants ****

  ****  Section 000 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)         1 LIBCOM

  ****  Section 001 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 002 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 003 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 004 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:44   
  ****  Section 005 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 006 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 007 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 008 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 009 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 010 LblCom C_DATE

PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:45   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 011 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 012 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 013 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 014 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 015 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #002=X8CL$SEARCH File=X8CL.:X8A6TSI                                SAT 08/09/97 10:44 Page:46   

     0-0-0/w SBIN              1 NDX2

  ****  Section 016 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CSIB$                     5-0-0/w PTR         r     1 @NAME
     6-0-0/w PTR         r     1 @NAME$                     4-0-0/w PTR         r     1 @NAME_LEN
     7-0-0/w PTR         r     1 @PROC$                    *0-0-0/w PTR         r     1 CSIB$
    10-0-0/w SBIN              1 LT                        11-0-0/c CHAR(65)          1 LTHOLD
    *0-0-0/c ACHR        r     1 NAME                      *0-0-0/w PTR         r     1 NAME$
    *0-0-0/w UBIN        r     1 NAME_LEN                  53-0-0/w SBIN              1 NDX
    54-0-0/w SBIN              1 NDX3                      *0-0-0/w PTR         r     1 PROC$
    32-0-0/c CHAR(65)          1 RTHOLD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(288)   r     1 CSIB


   Procedure X8CL$SEARCH requires 48 words for executable code.
   Procedure X8CL$SEARCH requires 52 words of local(AUTO) storage.

PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:47   
      180        1        /*T***********************************************************/
      181        2        /*T*                                                         */
      182        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      183        4        /*T*                                                         */
      184        5        /*T***********************************************************/
      185        6
      186        7        /*------------------*/
      187        8        X8CL$SEARCH_ENTRY_PT:  PROC (CSIB$, NAME_LEN, NAME, NAME$, PROC$);
      188        9        /*------------------*/
      189       10
      190       11            %INCLUDE X8A_LIBCOM;
      191      231            %INCLUDE X8A_CSIB;
      192      296
      193      297            %DCL_CSIB;
      194      326            %DCL_CSIBE;
      195      333
      196      334    1       DCL CSIB$          PTR;
      197      335    1       DCL CSIBE$$        PTR;
      198      336    1       DCL NAME           CHAR(NAME_LEN);
      199      337    1       DCL NAME_LEN       UBIN ;
      200      338    1       DCL NAME$          PTR ;
      201      339    1       DCL PROC$          PTR;
      202      340
      203      341    1       CSIBE$$ = CSIB$-> CSIB.CSIBE$;
      204      342
      205      343    2       DO WHILE  CSIBE$$ ~= ADDR(NIL);
      206      344    2         IF CSIBE$$-> CSIBE.NAME_TEXT =  NAME  THEN
      207      345    3           DO;
      208      346    3             NAME$ = CSIBE$$;
      209      347    3             PROC$ = CSIBE$$-> CSIBE.ENTRY$;
      210      348    3           END;
      211      349    2         ELSE
      212      350    2           CSIBE$$ = CSIBE$$-> CSIBE.LINK$;
      213      351    2       END;  /* while */
      214      352
      215      353    1   END X8CL$SEARCH_ENTRY_PT;
      216      354        %EJECT;
PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:48   
      217      355        %EOD;

PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:49   
--  Include file information  --

   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$SEARCH_ENTRY_PT.

   Procedure X8CL$SEARCH_ENTRY_PT requires 29 words for executable code.
   Procedure X8CL$SEARCH_ENTRY_PT requires 46 words of local(AUTO) storage.

PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:50   

 Object Unit name= X8CL$SEARCH_ENTRY_PT                       File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:44:58.32 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none    20     24  LIBCOM
    1  LblCom even  none     1      1  DEC_OR_COMMA
    2  LblCom even  none    20     24  IN_TEMP
    3  LblCom even  none     1      1  OVRCHR
    4  LblCom even  none     1      1  SELECT_TIME
    5  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    6  LblCom even  none    18     22  DSPLY_SAVE
    7  LblCom even  none     3      3  D_DATE
    8  LblCom even  none     3      3  D_TIME
    9  LblCom even  none     1      1  D_DAY
   10  LblCom even  none     2      2  C_DATE
   11  LblCom even  none     2      2  C_TIME
   12  LblCom even  none     2      2  C_DAY
   13  LblCom even  none     1      1  RTHOLD2
   14  LblCom even  none     1      1  LTHOLD2
   15  LblCom even  none     1      1  NDX2
   16  LblCom even  none     1      1  IN_LEN
   17   Proc  even  none    29     35  X8CL$SEARCH_ENTRY_PT
   18  RoData even  none     1      1  X8CL$SEARCH_ENTRY_PT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes            yes      Std        5  X8CL$SEARCH_ENTRY_PT
PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:51   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:52   


      180        1        /*T***********************************************************/
      181        2        /*T*                                                         */
      182        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      183        4        /*T*                                                         */
      184        5        /*T***********************************************************/
      185        6
      186        7        /*------------------*/
      187        8        X8CL$SEARCH_ENTRY_PT:  PROC (CSIB$, NAME_LEN, NAME, NAME$, PROC$);

      8 17 000000   000000 700200 xent  X8CL$SEARCH* TSX0  ! X66_AUTO_5
        17 000001   000056 000005                    ZERO    46,5

      188        9        /*------------------*/
      189       10
      190       11            %INCLUDE X8A_LIBCOM;
      191      231            %INCLUDE X8A_CSIB;
      192      296
      193      297            %DCL_CSIB;
      194      326            %DCL_CSIBE;
      195      333
      196      334    1       DCL CSIB$          PTR;
      197      335    1       DCL CSIBE$$        PTR;
      198      336    1       DCL NAME           CHAR(NAME_LEN);
      199      337    1       DCL NAME_LEN       UBIN ;
      200      338    1       DCL NAME$          PTR ;
      201      339    1       DCL PROC$          PTR;
      202      340
      203      341    1       CSIBE$$ = CSIB$-> CSIB.CSIBE$;

    341 17 000002   200003 470500                    LDP0    @CSIB$,,AUTO
        17 000003   000000 471500                    LDP1    0,,PR0
        17 000004   100004 236100                    LDQ     4,,PR1
        17 000005   200055 756100                    STQ     CSIBE$$,,AUTO

      204      342
      205      343    2       DO WHILE  CSIBE$$ ~= ADDR(NIL);
PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:53   

    343 17 000006   000031 710000 17                 TRA     s:351

      206      344    2         IF CSIBE$$-> CSIBE.NAME_TEXT =  NAME  THEN

    344 17 000007   200055 470500                    LDP0    CSIBE$$,,AUTO
        17 000010   000002 720100                    LXL0    2,,PR0
        17 000011   200004 471500                    LDP1    @NAME_LEN,,AUTO
        17 000012   100000 721100                    LXL1    0,,PR1
        17 000013   200005 473500                    LDP3    @NAME,,AUTO
        17 000014   040140 106540                    CMPC    fill='040'O
        17 000015   000003 000010                    ADSC9   3,,PR0                   cn=0,n=*X0
        17 000016   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1
        17 000017   000027 601000 17                 TNZ     s:350

      207      345    3           DO;

      208      346    3             NAME$ = CSIBE$$;

    346 17 000020   200055 236100                    LDQ     CSIBE$$,,AUTO
        17 000021   200006 474500                    LDP4    @NAME$,,AUTO
        17 000022   400000 756100                    STQ     0,,PR4

      209      347    3             PROC$ = CSIBE$$-> CSIBE.ENTRY$;

    347 17 000023   000000 236100                    LDQ     0,,PR0
        17 000024   200007 475500                    LDP5    @PROC$,,AUTO
        17 000025   500000 756100                    STQ     0,,PR5

      210      348    3           END;

    348 17 000026   000031 710000 17                 TRA     s:351

      211      349    2         ELSE
      212      350    2           CSIBE$$ = CSIBE$$-> CSIBE.LINK$;

    350 17 000027   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:54   
        17 000030   200055 756100                    STQ     CSIBE$$,,AUTO

      213      351    2       END;  /* while */

    351 17 000031   200055 236100                    LDQ     CSIBE$$,,AUTO
        17 000032   000000 116000 18                 CMPQ    0
        17 000033   000007 601000 17                 TNZ     s:344

      214      352
      215      353    1   END X8CL$SEARCH_ENTRY_PT;

    353 17 000034   000000 702200 xent               TSX2  ! X66_ARET
      216      354        %EJECT;
PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:55   
      217      355        %EOD;

PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:56   
--  Include file information  --

   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$SEARCH_ENTRY_PT.
PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:57   

 **** Variables and constants ****

  ****  Section 000 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)         1 LIBCOM

  ****  Section 001 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 002 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 003 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 004 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:58   
  ****  Section 005 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 006 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 007 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 008 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 009 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 010 LblCom C_DATE

PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:59   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 011 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 012 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 013 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 014 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 015 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #003=X8CL$SEARCH_ENTRY_PT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:44 Page:60   

     0-0-0/w SBIN              1 NDX2

  ****  Section 016 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CSIB$                     5-0-0/w PTR         r     1 @NAME
     6-0-0/w PTR         r     1 @NAME$                     4-0-0/w PTR         r     1 @NAME_LEN
     7-0-0/w PTR         r     1 @PROC$                    *0-0-0/w PTR         r     1 CSIB$
    55-0-0/w PTR         r     1 CSIBE$$                   10-0-0/w SBIN              1 LT
    11-0-0/c CHAR(65)          1 LTHOLD                    *0-0-0/c ACHR        r     1 NAME
    *0-0-0/w PTR         r     1 NAME$                     *0-0-0/w UBIN        r     1 NAME_LEN
    53-0-0/w SBIN              1 NDX                       54-0-0/w SBIN              1 NDX3
    *0-0-0/w PTR         r     1 PROC$                     32-0-0/c CHAR(65)          1 RTHOLD

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(288)   r     1 CSIB                       0-0-0/w ASTR(108)   r     1 CSIBE


   Procedure X8CL$SEARCH_ENTRY_PT requires 29 words for executable code.
   Procedure X8CL$SEARCH_ENTRY_PT requires 46 words of local(AUTO) storage.

PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:61   
      218        1        /*T***********************************************************/
      219        2        /*T*                                                         */
      220        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      221        4        /*T*                                                         */
      222        5        /*T***********************************************************/
      223        6
      224        7        /*------------*/
      225        8        X8CL$CALL_INIT:        PROC (SON$$);
      226        9        /*------------*/
      227       10
      228       11            %INCLUDE X8A_CSIB;
      229       76
      230       77    1       DCL SON$$          PTR;
      231       78    1       DCL BROTHER$$      PTR;
      232       79           %DCL_CSIB;
      233      108
      234      109    1       IF SON$$ ~= ADDR(NIL) THEN
      235      110    2         DO;
      236      111    2           IF NOT  SON$$-> CSIB.B.INITIAL THEN
      237      112    2             IF SON$$-> CSIB.INIT_PROC$ ~= ENTADDR(NIL) THEN
      238      113    2               CALL SON$$-> CSIB.INIT_PROC$;
      239      114    2           BROTHER$$ = SON$$-> CSIB.BROTHER$;
      240      115
      241      116    3           DO WHILE ( BROTHER$$ ~= ADDR(NIL) );
      242      117    3             IF NOT BROTHER$$-> CSIB.B.INITIAL THEN
      243      118    3               IF BROTHER$$-> CSIB.INIT_PROC$ ~= ENTADDR(NIL) THEN
      244      119    3                 CALL BROTHER$$-> CSIB.INIT_PROC$;
      245      120    3             BROTHER$$ = BROTHER$$-> CSIB.BROTHER$;
      246      121    3           END;
      247      122
      248      123    2           CALL X8CL$CALL_INIT ( SON$$-> CSIB.SON$ );
      249      124    2         END;
      250      125
      251      126    1   END X8CL$CALL_INIT;
      252      127        %EJECT;
PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:62   
      253      128        %EOD;

PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:63   
--  Include file information  --

   X8A_CSIB.:X8A6TOU  is referenced.
      No diagnostics issued in procedure X8CL$CALL_INIT.

   Procedure X8CL$CALL_INIT requires 47 words for executable code.
   Procedure X8CL$CALL_INIT requires 8 words of local(AUTO) storage.

PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:64   

 Object Unit name= X8CL$CALL_INIT                             File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:45:25.32 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    47     57  X8CL$CALL_INIT
    1  RoData even  none     3      3  X8CL$CALL_INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  X8CL$CALL_INIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:65   


      218        1        /*T***********************************************************/
      219        2        /*T*                                                         */
      220        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      221        4        /*T*                                                         */
      222        5        /*T***********************************************************/
      223        6
      224        7        /*------------*/
      225        8        X8CL$CALL_INIT:        PROC (SON$$);

      8  0 000000   000000 700200 xent  X8CL$CALL_I* TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

      226        9        /*------------*/
      227       10
      228       11            %INCLUDE X8A_CSIB;
      229       76
      230       77    1       DCL SON$$          PTR;
      231       78    1       DCL BROTHER$$      PTR;
      232       79           %DCL_CSIB;
      233      108
      234      109    1       IF SON$$ ~= ADDR(NIL) THEN

    109  0 000002   200003 470500                    LDP0    @SON$$,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   000000 116000 1                  CMPQ    0
         0 000005   000056 600000 0                  TZE     s:126

      235      110    2         DO;

      236      111    2           IF NOT  SON$$-> CSIB.B.INITIAL THEN

    111  0 000006   000000 471500                    LDP1    0,,PR0
         0 000007   100006 236100                    LDQ     6,,PR1
         0 000010   200000 316003                    CANQ    65536,DU
         0 000011   000021 601000 0                  TNZ     s:114

PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:66   
      237      112    2             IF SON$$-> CSIB.INIT_PROC$ ~= ENTADDR(NIL) THEN

    112  0 000012   100003 236100                    LDQ     3,,PR1
         0 000013   000001 116000 1                  CMPQ    1
         0 000014   000021 600000 0                  TZE     s:114

      238      113    2               CALL SON$$-> CSIB.INIT_PROC$;

    113  0 000015   100003 220100                    LDX0    3,,PR1
         0 000016   000001 631400 1                  EPPR1   1
         0 000017   000000 701010                    TSX1    0,X0
         0 000020   000000 011000                    NOP     0

      239      114    2           BROTHER$$ = SON$$-> CSIB.BROTHER$;

    114  0 000021   200003 470500                    LDP0    @SON$$,,AUTO
         0 000022   000000 471500                    LDP1    0,,PR0
         0 000023   100000 236100                    LDQ     0,,PR1
         0 000024   200004 756100                    STQ     BROTHER$$,,AUTO

      240      115
      241      116    3           DO WHILE ( BROTHER$$ ~= ADDR(NIL) );

    116  0 000025   000044 710000 0                  TRA     s:121

      242      117    3             IF NOT BROTHER$$-> CSIB.B.INITIAL THEN

    117  0 000026   200004 470500                    LDP0    BROTHER$$,,AUTO
         0 000027   000006 236100                    LDQ     6,,PR0
         0 000030   200000 316003                    CANQ    65536,DU
         0 000031   000041 601000 0                  TNZ     s:120

      243      118    3               IF BROTHER$$-> CSIB.INIT_PROC$ ~= ENTADDR(NIL) THEN

    118  0 000032   000003 236100                    LDQ     3,,PR0
         0 000033   000001 116000 1                  CMPQ    1
         0 000034   000041 600000 0                  TZE     s:120
PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:67   

      244      119    3                 CALL BROTHER$$-> CSIB.INIT_PROC$;

    119  0 000035   000003 220100                    LDX0    3,,PR0
         0 000036   000001 631400 1                  EPPR1   1
         0 000037   000000 701010                    TSX1    0,X0
         0 000040   000000 011000                    NOP     0

      245      120    3             BROTHER$$ = BROTHER$$-> CSIB.BROTHER$;

    120  0 000041   200004 470500                    LDP0    BROTHER$$,,AUTO
         0 000042   000000 236100                    LDQ     0,,PR0
         0 000043   200004 756100                    STQ     BROTHER$$,,AUTO

      246      121    3           END;

    121  0 000044   000000 116000 1                  CMPQ    0
         0 000045   000026 601000 0                  TNZ     s:117

      247      122
      248      123    2           CALL X8CL$CALL_INIT ( SON$$-> CSIB.SON$ );

    123  0 000046   200003 470500                    LDP0    @SON$$,,AUTO
         0 000047   000000 471500                    LDP1    0,,PR0
         0 000050   100001 633500                    EPPR3   1,,PR1
         0 000051   200006 453500                    STP3    BROTHER$$+2,,AUTO
         0 000052   200006 630500                    EPPR0   BROTHER$$+2,,AUTO
         0 000053   000002 631400 1                  EPPR1   2
         0 000054   000000 701000 0                  TSX1    s:8
         0 000055   000000 011000                    NOP     0

      249      124    2         END;

      250      125
      251      126    1   END X8CL$CALL_INIT;

    126  0 000056   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:68   
      252      127        %EJECT;
PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:69   
      253      128        %EOD;

PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:70   
--  Include file information  --

   X8A_CSIB.:X8A6TOU  is referenced.
      No diagnostics issued in procedure X8CL$CALL_INIT.
PL6.E3A0      #004=X8CL$CALL_INIT File=X8CL.:X8A6TSI                             SAT 08/09/97 10:45 Page:71   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SON$$                     4-0-0/w PTR         r     1 BROTHER$$
    *0-0-0/w PTR         r     1 SON$$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(288)   r     1 CSIB


   Procedure X8CL$CALL_INIT requires 47 words for executable code.
   Procedure X8CL$CALL_INIT requires 8 words of local(AUTO) storage.

PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:72   
      254        1        /*T***********************************************************/
      255        2        /*T*                                                         */
      256        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      257        4        /*T*                                                         */
      258        5        /*T***********************************************************/
      259        6
      260        7            %INCLUDE Z9A_FLAGS;
      261       21        /*-------------------*/
      262       22        X8CL$SUBROUTINE_ENTRY:        PROC
      263       23        %IF GCOS;
      265       25        %ENDIF;
      266       26        %IF CP6;
      267       27                                           MATERIALIZE ($PR0 IN CSIB$, $PR1 IN REM$)
      268       28        %ENDIF;
      269       29                                           ALTRET;
      270       30        /*-------------------*/
      271       31
      272       32            %INCLUDE X8A_LIBCOM;
      273      252            %INCLUDE X8A_CSIB;
      274      317            %INCLUDE X8A_ERRCOM;
      275      406
      276      407            %IF GCOS;
      279      410            %ENDIF;
      280      411            %IF CP6;
      281      412            %DCL_CSIB (@STCLASS = "BASED (CSIB$)");
      282      441
      283      442    1       DCL CSIB$          PTR;
      284      443    1       DCL REM$           PTR;
      285      444    1       DCL REM1           REMEMBER BASED (REM$);
      286      445            %ENDIF;
      287      446    1       DCL 1 X9OS$EXIT_BLOCK SYMREF DALIGNED,
      288      447    1             2 REM (0:63) REMEMBER,
      289      448    1             2 ITEM (0:63) REDEF REM,
      290      449    1               3 TYPE SBIN,
      291      450    1               3 PTR$ PTR,
      292      451    1               3 EPTR$ REDEF PTR$ EPTR,
      293      452    1             2 PREV$ PTR,
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:73   
      294      453    1             2 NEXT$ PTR;
      295      454    1       DCL X9OS$EXIT_INDEX SBIN SYMREF;
      296      455    1       DCL 1 EXIT$BLOCK DALIGNED BASED (EXIT_BLOCK$),
      297      456    1             2 REM (0:63) REMEMBER,
      298      457    1             2 ITEM (0:63) REDEF REM,
      299      458    1               3 TYPE SBIN,
      300      459    1               3 PTR$ PTR,
      301      460    1               3 EPTR$ REDEF PTR$ EPTR,
      302      461    1             2 PREV$ PTR,
      303      462    1             2 NEXT$ PTR;
      304      463    1       DCL EXIT_BLOCK$ PTR;
      305      464    1       DCL I SBIN;
      306      465
      307      466    1       DCL X8CL$CALL_INIT        ENTRY(1);
      308      467    1       DCL X8CL$FIND_BLOCK       ENTRY(2);
      309      468            %IF GCOS;
      311      470            %ENDIF;
      312      471    1       DCL X8ER$ERROR            ENTRY(3);
      313      472        %EJECT;
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:74   
      314      473
      315      474    1           IF CSIB.B.ACTIVE THEN
      316      475    2             DO;
      317      476    2               CALL X8ER$ERROR (%IPC_RECURSIVE_CALL,
      318      477    2                                CSIB.NAME_TEXT,
      319      478    2                                CSIB.NAME_LENGTH );
      320      479    2                ALTRETURN;
      321      480    2              END;
      322      481
      323      482    1           IF LIBCOM.EXIT_PROG_IN_DECL THEN
      324      483    2             DO;
      325      484    2               EXIT_BLOCK$ = ADDR (X9OS$EXIT_BLOCK);
      326      485    2               IF X9OS$EXIT_INDEX >= 64 THEN
      327      486    3                 DO;
      328      487    3         CALL X8CL$FIND_BLOCK (I, EXIT_BLOCK$);
      329      488    3                   EXIT$BLOCK.REM (I) = REM1;
      330      489    3                 END; /* IF X9OS$EXIT_INDEX >= 64 */
      331      490    2               ELSE
      332      491    2                 EXIT$BLOCK.REM (X9OS$EXIT_INDEX) = REM1;
      333      492    2               X9OS$EXIT_INDEX = X9OS$EXIT_INDEX + 1;
      334      493    2             END; /* IF LIBCOM.EXIT_PROG_IN_DECL */
      335      494
      336      495                %IF GCOS;
      341      500                %ENDIF;
      342      501    1           IF CSIB.B.INITIAL
      343      502    1           OR CSIB.B.CANCELED THEN
      344      503    2             DO;
      345      504    2               IF CSIB.INIT_PROC$ ~= ENTADDR(NIL) THEN
      346      505    2                 CALL CSIB.INIT_PROC$;
      347      506    2               CALL X8CL$CALL_INIT( CSIB.SON$ );
      348      507    2             END;
      349      508
      350      509    1           CSIB.B.ACTIVE = %TRUE;
      351      510    1           CSIB.B.CANCELED = %FALSE;
      352      511    1           CSIB.B.USE_PROC_SAVE = LIBCOM.USE_PROC;
      353      512    1           LIBCOM.USE_PROC = '0'B; /* We are not in any USE procedure. */
      354      513
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:75   
      355      514    1   END X8CL$SUBROUTINE_ENTRY;
      356      515        %EJECT;
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:76   
      357      516        %EOD;

PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:77   
--  Include file information  --

   X8A_ERRCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure X8CL$SUBROUTINE_ENTRY.

   Procedure X8CL$SUBROUTINE_ENTRY requires 80 words for executable code.
   Procedure X8CL$SUBROUTINE_ENTRY requires 68 words of local(AUTO) storage.

PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:78   

 Object Unit name= X8CL$SUBROUTINE_ENTRY                      File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:45:44.88 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none    20     24  LIBCOM
    1  LblCom even  none     1      1  DEC_OR_COMMA
    2  LblCom even  none    20     24  IN_TEMP
    3  LblCom even  none     1      1  OVRCHR
    4  LblCom even  none     1      1  SELECT_TIME
    5  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    6  LblCom even  none    18     22  DSPLY_SAVE
    7  LblCom even  none     3      3  D_DATE
    8  LblCom even  none     3      3  D_TIME
    9  LblCom even  none     1      1  D_DAY
   10  LblCom even  none     2      2  C_DATE
   11  LblCom even  none     2      2  C_TIME
   12  LblCom even  none     2      2  C_DAY
   13  LblCom even  none     1      1  RTHOLD2
   14  LblCom even  none     1      1  LTHOLD2
   15  LblCom even  none     1      1  NDX2
   16  LblCom even  none     1      1  IN_LEN
   17   Proc  even  none    80    120  X8CL$SUBROUTINE_ENTRY
   18  RoData even  none     8     10  X8CL$SUBROUTINE_ENTRY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes    yes     yes      Std        0  X8CL$SUBROUTINE_ENTRY
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:79   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 X8ER$ERROR
         yes           Std       2 X8CL$FIND_BLOCK
         yes           Std       1 X8CL$CALL_INIT
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     X9OS$EXIT_BLOCK                       X9OS$EXIT_INDEX

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:80   


      254        1        /*T***********************************************************/
      255        2        /*T*                                                         */
      256        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      257        4        /*T*                                                         */
      258        5        /*T***********************************************************/
      259        6
      260        7            %INCLUDE Z9A_FLAGS;
      261       21        /*-------------------*/
      262       22        X8CL$SUBROUTINE_ENTRY:        PROC

     22 17 000000   000000 700200 xent  X8CL$SUBROU* TSX0  ! X66_AUTO_0
        17 000001   000104 000000                    ZERO    68,0
        17 000002   200074 450700                    STP0  ! CSIB$,,AUTO
        17 000003   200075 451700                    STP1  ! REM$,,AUTO

      263       23        %IF GCOS;
      265       25        %ENDIF;
      266       26        %IF CP6;
      267       27                                           MATERIALIZE ($PR0 IN CSIB$, $PR1 IN REM$)
      268       28        %ENDIF;
      269       29                                           ALTRET;
      270       30        /*-------------------*/
      271       31
      272       32            %INCLUDE X8A_LIBCOM;
      273      252            %INCLUDE X8A_CSIB;
      274      317            %INCLUDE X8A_ERRCOM;
      275      406
      276      407            %IF GCOS;
      279      410            %ENDIF;
      280      411            %IF CP6;
      281      412            %DCL_CSIB (@STCLASS = "BASED (CSIB$)");
      282      441
      283      442    1       DCL CSIB$          PTR;
      284      443    1       DCL REM$           PTR;
      285      444    1       DCL REM1           REMEMBER BASED (REM$);
      286      445            %ENDIF;
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:81   
      287      446    1       DCL 1 X9OS$EXIT_BLOCK SYMREF DALIGNED,
      288      447    1             2 REM (0:63) REMEMBER,
      289      448    1             2 ITEM (0:63) REDEF REM,
      290      449    1               3 TYPE SBIN,
      291      450    1               3 PTR$ PTR,
      292      451    1               3 EPTR$ REDEF PTR$ EPTR,
      293      452    1             2 PREV$ PTR,
      294      453    1             2 NEXT$ PTR;
      295      454    1       DCL X9OS$EXIT_INDEX SBIN SYMREF;
      296      455    1       DCL 1 EXIT$BLOCK DALIGNED BASED (EXIT_BLOCK$),
      297      456    1             2 REM (0:63) REMEMBER,
      298      457    1             2 ITEM (0:63) REDEF REM,
      299      458    1               3 TYPE SBIN,
      300      459    1               3 PTR$ PTR,
      301      460    1               3 EPTR$ REDEF PTR$ EPTR,
      302      461    1             2 PREV$ PTR,
      303      462    1             2 NEXT$ PTR;
      304      463    1       DCL EXIT_BLOCK$ PTR;
      305      464    1       DCL I SBIN;
      306      465
      307      466    1       DCL X8CL$CALL_INIT        ENTRY(1);
      308      467    1       DCL X8CL$FIND_BLOCK       ENTRY(2);
      309      468            %IF GCOS;
      311      470            %ENDIF;
      312      471    1       DCL X8ER$ERROR            ENTRY(3);
      313      472        %EJECT;
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:82   
      314      473
      315      474    1           IF CSIB.B.ACTIVE THEN

    474 17 000004   000006 236100                    LDQ     6,,PR0
        17 000005   040000 316003                    CANQ    16384,DU
        17 000006   000023 600000 17                 TZE     s:482

      316      475    2             DO;

      317      476    2               CALL X8ER$ERROR (%IPC_RECURSIVE_CALL,

    476 17 000007   200074 236100                    LDQ     CSIB$,,AUTO
        17 000010   000007 036003                    ADLQ    7,DU
        17 000011   200102 756100                    STQ     I+3,,AUTO
        17 000012   200074 236100                    LDQ     CSIB$,,AUTO
        17 000013   000010 036003                    ADLQ    8,DU
        17 000014   000002 235000 18                 LDA     2
        17 000015   200100 757100                    STAQ    I+1,,AUTO
        17 000016   200100 630500                    EPPR0   I+1,,AUTO
        17 000017   000000 631400 18                 EPPR1   0
        17 000020   000000 701000 xent               TSX1    X8ER$ERROR
        17 000021   000000 011000                    NOP     0

      318      477    2                                CSIB.NAME_TEXT,
      319      478    2                                CSIB.NAME_LENGTH );
      320      479    2                ALTRETURN;

    479 17 000022   000000 702200 xent               TSX2  ! X66_AALT

      321      480    2              END;
      322      481
      323      482    1           IF LIBCOM.EXIT_PROG_IN_DECL THEN

    482 17 000023   000023 234000 0                  SZN     LIBCOM+19
        17 000024   000060 605000 17                 TPL     s:501

      324      483    2             DO;
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:83   

      325      484    2               EXIT_BLOCK$ = ADDR (X9OS$EXIT_BLOCK);

    484 17 000025   000003 236000 18                 LDQ     3
        17 000026   200076 756100                    STQ     EXIT_BLOCK$,,AUTO

      326      485    2               IF X9OS$EXIT_INDEX >= 64 THEN

    485 17 000027   000000 235000 xsym               LDA     X9OS$EXIT_INDEX
        17 000030   000100 115007                    CMPA    64,DL
        17 000031   000052 604000 17                 TMI     s:491

      327      486    3                 DO;

      328      487    3         CALL X8CL$FIND_BLOCK (I, EXIT_BLOCK$);

    487 17 000032   200076 633500                    EPPR3   EXIT_BLOCK$,,AUTO
        17 000033   200101 453500                    STP3    I+2,,AUTO
        17 000034   200077 634500                    EPPR4   I,,AUTO
        17 000035   200100 454500                    STP4    I+1,,AUTO
        17 000036   200100 630500                    EPPR0   I+1,,AUTO
        17 000037   000004 631400 18                 EPPR1   4
        17 000040   000000 701000 xent               TSX1    X8CL$FIND_BLOCK
        17 000041   000000 011000                    NOP     0

      329      488    3                   EXIT$BLOCK.REM (I) = REM1;

    488 17 000042   200077 235100                    LDA     I,,AUTO
        17 000043   000001 735000                    ALS     1
        17 000044   200075 470500                    LDP0    REM$,,AUTO
        17 000045   000000 620005                    EAX0    0,AL
        17 000046   000000 237100                    LDAQ    0,,PR0
        17 000047   200076 471500                    LDP1    EXIT_BLOCK$,,AUTO
        17 000050   100000 757110                    STAQ    0,X0,PR1

      330      489    3                 END; /* IF X9OS$EXIT_INDEX >= 64 */

PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:84   
    489 17 000051   000057 710000 17                 TRA     s:492

      331      490    2               ELSE
      332      491    2                 EXIT$BLOCK.REM (X9OS$EXIT_INDEX) = REM1;

    491 17 000052   000001 735000                    ALS     1
        17 000053   000000 620005                    EAX0    0,AL
        17 000054   100000 237100                    LDAQ    0,,PR1
        17 000055   200076 473500                    LDP3    EXIT_BLOCK$,,AUTO
        17 000056   300000 757110                    STAQ    0,X0,PR3

      333      492    2               X9OS$EXIT_INDEX = X9OS$EXIT_INDEX + 1;

    492 17 000057   000000 054000 xsym               AOS     X9OS$EXIT_INDEX

      334      493    2             END; /* IF LIBCOM.EXIT_PROG_IN_DECL */

      335      494
      336      495                %IF GCOS;
      341      500                %ENDIF;
      342      501    1           IF CSIB.B.INITIAL

    501 17 000060   200074 470500                    LDP0    CSIB$,,AUTO
        17 000061   000006 236100                    LDQ     6,,PR0
        17 000062   200000 316003                    CANQ    65536,DU
        17 000063   000066 601000 17                 TNZ     s:504
        17 000064   020000 316003                    CANQ    8192,DU
        17 000065   000104 600000 17                 TZE     s:509

      343      502    1           OR CSIB.B.CANCELED THEN
      344      503    2             DO;

      345      504    2               IF CSIB.INIT_PROC$ ~= ENTADDR(NIL) THEN

    504 17 000066   000003 236100                    LDQ     3,,PR0
        17 000067   000005 116000 18                 CMPQ    5
        17 000070   000075 600000 17                 TZE     s:506
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:85   

      346      505    2                 CALL CSIB.INIT_PROC$;

    505 17 000071   000003 220100                    LDX0    3,,PR0
        17 000072   000005 631400 18                 EPPR1   5
        17 000073   000000 701010                    TSX1    0,X0
        17 000074   000000 011000                    NOP     0

      347      506    2               CALL X8CL$CALL_INIT( CSIB.SON$ );

    506 17 000075   200074 236100                    LDQ     CSIB$,,AUTO
        17 000076   000001 036003                    ADLQ    1,DU
        17 000077   200100 756100                    STQ     I+1,,AUTO
        17 000100   200100 630500                    EPPR0   I+1,,AUTO
        17 000101   000006 631400 18                 EPPR1   6
        17 000102   000000 701000 xent               TSX1    X8CL$CALL_INIT
        17 000103   000000 011000                    NOP     0

      348      507    2             END;

      349      508
      350      509    1           CSIB.B.ACTIVE = %TRUE;

    509 17 000104   200074 470500                    LDP0    CSIB$,,AUTO
        17 000105   040000 236003                    LDQ     16384,DU
        17 000106   000006 256100                    ORSQ    6,,PR0

      351      510    1           CSIB.B.CANCELED = %FALSE;

    510 17 000107   000007 236000 18                 LDQ     7
        17 000110   000006 356100                    ANSQ    6,,PR0

      352      511    1           CSIB.B.USE_PROC_SAVE = LIBCOM.USE_PROC;

    511 17 000111   000022 236000 0                  LDQ     LIBCOM+18
        17 000112   000005 772000                    QRL     5
        17 000113   000006 676100                    ERQ     6,,PR0
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:86   
        17 000114   010000 376003                    ANQ     4096,DU
        17 000115   000006 656100                    ERSQ    6,,PR0

      353      512    1           LIBCOM.USE_PROC = '0'B; /* We are not in any USE procedure. */

    512 17 000116   000022 450000 0                  STZ     LIBCOM+18

      354      513
      355      514    1   END X8CL$SUBROUTINE_ENTRY;

    514 17 000117   000000 702200 xent               TSX2  ! X66_ARET
      356      515        %EJECT;
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:87   
      357      516        %EOD;

PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:88   
--  Include file information  --

   X8A_ERRCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure X8CL$SUBROUTINE_ENTRY.
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:89   

 **** Variables and constants ****

  ****  Section 000 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)   r     1 LIBCOM

  ****  Section 001 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 002 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 003 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 004 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:90   
  ****  Section 005 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 006 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 007 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 008 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 009 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 010 LblCom C_DATE

PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:91   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 011 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 012 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 013 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 014 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 015 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:92   

     0-0-0/w SBIN              1 NDX2

  ****  Section 016 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    74-0-0/w PTR         r     1 CSIB$                     76-0-0/w PTR         r     1 EXIT_BLOCK$
    77-0-0/w SBIN        r     1 I                          3-0-0/w SBIN              1 LT
     4-0-0/c CHAR(65)          1 LTHOLD                    46-0-0/w SBIN              1 NDX
    47-0-0/w SBIN              1 NDX3                      75-0-0/w PTR         r     1 REM$
    25-0-0/c CHAR(65)          1 RTHOLD                    50-0-0/c CHAR(80)          1 SPECIAL_ERR_MSG

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4680)  r     1 X9OS$EXIT_BLOCK            0-0-0/w SBIN        r     1 X9OS$EXIT_INDEX

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(288)   r     1 CSIB                       0-0-0/d STRC(4680)  r     1 EXIT$BLOCK
     0-0-0/d REMB        r     1 REM1

PL6.E3A0      #005=X8CL$SUBROUTINE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:45 Page:93   

   Procedure X8CL$SUBROUTINE_ENTRY requires 80 words for executable code.
   Procedure X8CL$SUBROUTINE_ENTRY requires 68 words of local(AUTO) storage.

PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:94   
      358        1        /*T***********************************************************/
      359        2        /*T*                                                         */
      360        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      361        4        /*T*                                                         */
      362        5        /*T***********************************************************/
      363        6
      364        7        /*---------*/
      365        8        X8CL$CANCEL:           PROC MATERIALIZE ($PR0 IN PR0$, $PR1 IN PR1$) ALTRET;
      366        9        /*---------*/
      367       10
      368       11            %INCLUDE X8A_LIBCOM;
      369      231            %INCLUDE X8A_CSIB;
      370      296            %INCLUDE X8A_ERRCOM;
      371      385            %INCLUDE X8A_MACROS;
      372      642            %INCLUDE X9A_MACROS;
      373      673
      374      674            %DCL_CSIB;
      375      703
      376      704    1       DCL CSIB$          PTR;
      377      705    1       DCL CSIB$$         PTR;
      378      706    1       DCL NAME_LEN       SBIN WORD;
      379      707    1       DCL NAME           CHAR( NAME_LEN ) BASED ( P$ );
      380      708    1       DCL 1 CALLEE          ALIGNED,
      381      709    1            2 LENGTH         UBIN(9)  UNAL,
      382      710    1            2 NAME           CHAR(31) UNAL;
      383      711    1       DCL ARG$ (0:0)     PTR BASED( PR0$ );
      384      712    1       DCL 1 DESC         BASED( PR1$ ) ALIGNED,
      385      713            %DCL_RT_DESC       ( @DIM="(0:0)");
      386      735    1       DCL NAME$          PTR;
      387      736    1       DCL PROC$          PTR;
      388      737    1       DCL P$             PTR;
      389      738    1       DCL PR0$           PTR;
      390      739    1       DCL PR1$           PTR;
      391      740
      392      741    1       DCL X8CL$SEARCH           ENTRY(5);
      393      742    1       DCL X8CL$CANCEL_SONS      ENTRY(1);
      394      743    1       DCL X8ER$ERROR            ENTRY(3);
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:95   
      395      744    1       DCL X9OL$CANCEL_OLAY      ENTRY(1) ALTRET;
      396      745
      397      746    1       CSIB$ = PR0$-> ARG$ (1);
      398      747    1       NAME_LEN = DESC.D_WORD.DES_W.ADSC.ARG_SIZE(0);
      399      748    1       P$ = ARG$(0);
      400      749    1       NAME$ = ADDR(NIL);
      401      750    1       CSIB$$ = CSIB$;
      402      751        %EJECT;
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:96   
      403      752        /*V*           Search_Sons
      404      753
      405      754               Callee is a son of the caller; check the active bit and
      406      755               set the canceled bit.
      407      756        */
      408      757
      409      758    1       CALL X8CL$SEARCH( CSIB$-> CSIB.SON$, NAME_LEN, NAME, NAME$, PROC$ );
      410      759    1       IF NAME$ ~= ADDR(NIL) THEN
      411      760    1         IF NAME$-> CSIB.B.ACTIVE THEN
      412      761    2           DO;
      413      762    2             CALL X8ER$ERROR( %IPC_CANCEL_ACTIVE, NAME, NAME_LEN );
      414      763    2             ALTRETURN;
      415      764    2           END;
      416      765    1         ELSE
      417      766    1           CALL X8CL$CANCEL_SONS (NAME$);
      418      767        %EJECT;
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:97   
      419      768        /*V*           Search_Brothers
      420      769
      421      770                  Caller is the brother of the callee or the caller is
      422      771              an uncle( great uncle ....) of the callee: check the active and
      423      772              the common bits then set the canceled bit.
      424      773
      425      774        */
      426      775    1       IF NAME$ = ADDR(NIL) THEN
      427      776    2         DO;
      428      777    2           CSIB$$ = CSIB$$-> CSIB.FATHER$;
      429      778    3           DO WHILE ( CSIB$$ ~= ADDR(NIL) AND NAME$ = ADDR(NIL) );
      430      779    3             CALL X8CL$SEARCH( CSIB$$-> CSIB.SON$, NAME_LEN, NAME, NAME$, PROC$ );
      431      780    3             CSIB$$ = CSIB$$-> CSIB.FATHER$;
      432      781    3           END;
      433      782
      434      783    2           IF NAME$ ~= ADDR(NIL) THEN
      435      784    2            IF NAME$-> CSIB.B.ACTIVE THEN
      436      785    3              DO;
      437      786    3                CALL X8ER$ERROR( %IPC_CANCEL_ACTIVE, NAME, NAME_LEN );
      438      787    3              END;
      439      788    2            ELSE
      440      789    2              IF NAME$-> CSIB.B.COMMON THEN
      441      790    2                CALL X8CL$CANCEL_SONS (NAME$);
      442      791    2              ELSE
      443      792    3                DO;
      444      793    3                  CALL X8ER$ERROR( %IPC_NOT_COMMON, NAME, NAME_LEN );
      445      794    3                END;
      446      795    2         END;  /* if name$ = addr(nil) */
      447      796        %EJECT;
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:98   
      448      797        /*V*                   OVERLAYS
      449      798
      450      799               If the cancelee is not found in the link list of csibs,
      451      800               call M$OLAY to cancel the module
      452      801        */
      453      802
      454      803    1       IF NAME$ = ADDR(NIL) THEN
      455      804    2         DO;
      456      805    2           CALLEE.LENGTH = NAME_LEN;
      457      806    2           CALLEE.NAME   = NAME;
      458      807    2           CALL X9OL$CANCEL_OLAY ( CALLEE )
      459      808    2           WHENRETURN
      460      809    3             DO;
      461      810
      462      811    3             END;
      463      812    2           WHENALTRETURN
      464      813    3             DO;
      465      814    3               CALL X8ER$ERROR( %IPC_PROGRAM_NOT_FOUND, NAME, NAME_LEN );
      466      815    3             END;
      467      816    2         END;
      468      817
      469      818    1   END X8CL$CANCEL; /* proc */
      470      819        %EJECT;
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:99   
      471      820        %EOD;

PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:100  
--  Include file information  --

   X9A_MACROS.:X8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   X8A_MACROS.:X8A6TOU  is referenced.
   X8A_ERRCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$CANCEL.

   Procedure X8CL$CANCEL requires 146 words for executable code.
   Procedure X8CL$CANCEL requires 82 words of local(AUTO) storage.

PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:101  

 Object Unit name= X8CL$CANCEL                                File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:46:21.96 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none    20     24  LIBCOM
    1  LblCom even  none     1      1  DEC_OR_COMMA
    2  LblCom even  none    20     24  IN_TEMP
    3  LblCom even  none     1      1  OVRCHR
    4  LblCom even  none     1      1  SELECT_TIME
    5  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    6  LblCom even  none    18     22  DSPLY_SAVE
    7  LblCom even  none     3      3  D_DATE
    8  LblCom even  none     3      3  D_TIME
    9  LblCom even  none     1      1  D_DAY
   10  LblCom even  none     2      2  C_DATE
   11  LblCom even  none     2      2  C_TIME
   12  LblCom even  none     2      2  C_DAY
   13  LblCom even  none     1      1  RTHOLD2
   14  LblCom even  none     1      1  LTHOLD2
   15  LblCom even  none     1      1  NDX2
   16  LblCom even  none     1      1  IN_LEN
   17   Proc  even  none   146    222  X8CL$CANCEL
   18  RoData even  none    10     12  X8CL$CANCEL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes    yes     yes      Std        0  X8CL$CANCEL
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:102  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 X8CL$SEARCH
         yes           Std       1 X8CL$CANCEL_SONS
         yes           Std       3 X8ER$ERROR
 yes     yes           Std       1 X9OL$CANCEL_OLAY
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:103  


      358        1        /*T***********************************************************/
      359        2        /*T*                                                         */
      360        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      361        4        /*T*                                                         */
      362        5        /*T***********************************************************/
      363        6
      364        7        /*---------*/
      365        8        X8CL$CANCEL:           PROC MATERIALIZE ($PR0 IN PR0$, $PR1 IN PR1$) ALTRET;

      8 17 000000   000000 700200 xent  X8CL$CANCEL  TSX0  ! X66_AUTO_0
        17 000001   000122 000000                    ZERO    82,0
        17 000002   200112 450700                    STP0  ! PR0$,,AUTO
        17 000003   200113 451700                    STP1  ! PR1$,,AUTO

      366        9        /*---------*/
      367       10
      368       11            %INCLUDE X8A_LIBCOM;
      369      231            %INCLUDE X8A_CSIB;
      370      296            %INCLUDE X8A_ERRCOM;
      371      385            %INCLUDE X8A_MACROS;
      372      642            %INCLUDE X9A_MACROS;
      373      673
      374      674            %DCL_CSIB;
      375      703
      376      704    1       DCL CSIB$          PTR;
      377      705    1       DCL CSIB$$         PTR;
      378      706    1       DCL NAME_LEN       SBIN WORD;
      379      707    1       DCL NAME           CHAR( NAME_LEN ) BASED ( P$ );
      380      708    1       DCL 1 CALLEE          ALIGNED,
      381      709    1            2 LENGTH         UBIN(9)  UNAL,
      382      710    1            2 NAME           CHAR(31) UNAL;
      383      711    1       DCL ARG$ (0:0)     PTR BASED( PR0$ );
      384      712    1       DCL 1 DESC         BASED( PR1$ ) ALIGNED,
      385      713            %DCL_RT_DESC       ( @DIM="(0:0)");
      386      735    1       DCL NAME$          PTR;
      387      736    1       DCL PROC$          PTR;
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:104  
      388      737    1       DCL P$             PTR;
      389      738    1       DCL PR0$           PTR;
      390      739    1       DCL PR1$           PTR;
      391      740
      392      741    1       DCL X8CL$SEARCH           ENTRY(5);
      393      742    1       DCL X8CL$CANCEL_SONS      ENTRY(1);
      394      743    1       DCL X8ER$ERROR            ENTRY(3);
      395      744    1       DCL X9OL$CANCEL_OLAY      ENTRY(1) ALTRET;
      396      745
      397      746    1       CSIB$ = PR0$-> ARG$ (1);

    746 17 000004   000001 236100                    LDQ     1,,PR0
        17 000005   200074 756100                    STQ     CSIB$,,AUTO

      398      747    1       NAME_LEN = DESC.D_WORD.DES_W.ADSC.ARG_SIZE(0);

    747 17 000006   100001 236100                    LDQ     1,,PR1
        17 000007   017777 376007                    ANQ     8191,DL
        17 000010   200076 756100                    STQ     NAME_LEN,,AUTO

      399      748    1       P$ = ARG$(0);

    748 17 000011   000000 236100                    LDQ     0,,PR0
        17 000012   200111 756100                    STQ     P$,,AUTO

      400      749    1       NAME$ = ADDR(NIL);

    749 17 000013   000000 236000 18                 LDQ     0
        17 000014   200107 756100                    STQ     NAME$,,AUTO

      401      750    1       CSIB$$ = CSIB$;

    750 17 000015   200074 236100                    LDQ     CSIB$,,AUTO
        17 000016   200075 756100                    STQ     CSIB$$,,AUTO

      402      751        %EJECT;
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:105  
      403      752        /*V*           Search_Sons
      404      753
      405      754               Callee is a son of the caller; check the active bit and
      406      755               set the canceled bit.
      407      756        */
      408      757
      409      758    1       CALL X8CL$SEARCH( CSIB$-> CSIB.SON$, NAME_LEN, NAME, NAME$, PROC$ );

    758 17 000017   200110 633500                    EPPR3   PROC$,,AUTO
        17 000020   200120 453500                    STP3    PR1$+5,,AUTO
        17 000021   200107 634500                    EPPR4   NAME$,,AUTO
        17 000022   200117 454500                    STP4    PR1$+4,,AUTO
        17 000023   200111 236100                    LDQ     P$,,AUTO
        17 000024   200116 756100                    STQ     PR1$+3,,AUTO
        17 000025   200076 635500                    EPPR5   NAME_LEN,,AUTO
        17 000026   200115 455500                    STP5    PR1$+2,,AUTO
        17 000027   200074 236100                    LDQ     CSIB$,,AUTO
        17 000030   000001 036003                    ADLQ    1,DU
        17 000031   200114 756100                    STQ     PR1$+1,,AUTO
        17 000032   200114 630500                    EPPR0   PR1$+1,,AUTO
        17 000033   000001 631400 18                 EPPR1   1
        17 000034   000000 701000 xent               TSX1    X8CL$SEARCH
        17 000035   000000 011000                    NOP     0

      410      759    1       IF NAME$ ~= ADDR(NIL) THEN

    759 17 000036   200107 236100                    LDQ     NAME$,,AUTO
        17 000037   000000 116000 18                 CMPQ    0
        17 000040   000065 600000 17                 TZE     s:775

      411      760    1         IF NAME$-> CSIB.B.ACTIVE THEN

    760 17 000041   200107 470500                    LDP0    NAME$,,AUTO
        17 000042   000006 236100                    LDQ     6,,PR0
        17 000043   040000 316003                    CANQ    16384,DU
        17 000044   000057 600000 17                 TZE     s:766

PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:106  
      412      761    2           DO;

      413      762    2             CALL X8ER$ERROR( %IPC_CANCEL_ACTIVE, NAME, NAME_LEN );

    762 17 000045   200076 631500                    EPPR1   NAME_LEN,,AUTO
        17 000046   200116 451500                    STP1    PR1$+3,,AUTO
        17 000047   200111 236100                    LDQ     P$,,AUTO
        17 000050   000004 235000 18                 LDA     4
        17 000051   200114 757100                    STAQ    PR1$+1,,AUTO
        17 000052   200114 630500                    EPPR0   PR1$+1,,AUTO
        17 000053   000002 631400 18                 EPPR1   2
        17 000054   000000 701000 xent               TSX1    X8ER$ERROR
        17 000055   000000 011000                    NOP     0

      414      763    2             ALTRETURN;

    763 17 000056   000000 702200 xent               TSX2  ! X66_AALT

      415      764    2           END;
      416      765    1         ELSE
      417      766    1           CALL X8CL$CANCEL_SONS (NAME$);

    766 17 000057   200107 631500                    EPPR1   NAME$,,AUTO
        17 000060   200114 451500                    STP1    PR1$+1,,AUTO
        17 000061   200114 630500                    EPPR0   PR1$+1,,AUTO
        17 000062   000005 631400 18                 EPPR1   5
        17 000063   000000 701000 xent               TSX1    X8CL$CANCEL_SONS
        17 000064   000000 011000                    NOP     0

      418      767        %EJECT;
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:107  
      419      768        /*V*           Search_Brothers
      420      769
      421      770                  Caller is the brother of the callee or the caller is
      422      771              an uncle( great uncle ....) of the callee: check the active and
      423      772              the common bits then set the canceled bit.
      424      773
      425      774        */
      426      775    1       IF NAME$ = ADDR(NIL) THEN

    775 17 000065   200107 236100                    LDQ     NAME$,,AUTO
        17 000066   000000 116000 18                 CMPQ    0
        17 000067   000166 601000 17                 TNZ     s:803

      427      776    2         DO;

      428      777    2           CSIB$$ = CSIB$$-> CSIB.FATHER$;

    777 17 000070   200075 470500                    LDP0    CSIB$$,,AUTO
        17 000071   000002 236100                    LDQ     2,,PR0
        17 000072   200075 756100                    STQ     CSIB$$,,AUTO

      429      778    3           DO WHILE ( CSIB$$ ~= ADDR(NIL) AND NAME$ = ADDR(NIL) );

    778 17 000073   000116 710000 17                 TRA     s:781

      430      779    3             CALL X8CL$SEARCH( CSIB$$-> CSIB.SON$, NAME_LEN, NAME, NAME$, PROC$ );

    779 17 000074   200110 630500                    EPPR0   PROC$,,AUTO
        17 000075   200120 450500                    STP0    PR1$+5,,AUTO
        17 000076   200107 631500                    EPPR1   NAME$,,AUTO
        17 000077   200117 451500                    STP1    PR1$+4,,AUTO
        17 000100   200111 236100                    LDQ     P$,,AUTO
        17 000101   200116 756100                    STQ     PR1$+3,,AUTO
        17 000102   200076 633500                    EPPR3   NAME_LEN,,AUTO
        17 000103   200115 453500                    STP3    PR1$+2,,AUTO
        17 000104   200075 236100                    LDQ     CSIB$$,,AUTO
        17 000105   000001 036003                    ADLQ    1,DU
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:108  
        17 000106   200114 756100                    STQ     PR1$+1,,AUTO
        17 000107   200114 630500                    EPPR0   PR1$+1,,AUTO
        17 000110   000001 631400 18                 EPPR1   1
        17 000111   000000 701000 xent               TSX1    X8CL$SEARCH
        17 000112   000000 011000                    NOP     0

      431      780    3             CSIB$$ = CSIB$$-> CSIB.FATHER$;

    780 17 000113   200075 470500                    LDP0    CSIB$$,,AUTO
        17 000114   000002 236100                    LDQ     2,,PR0
        17 000115   200075 756100                    STQ     CSIB$$,,AUTO

      432      781    3           END;

    781 17 000116   000000 116000 18                 CMPQ    0
        17 000117   000123 600000 17                 TZE     s:783
        17 000120   200107 236100                    LDQ     NAME$,,AUTO
        17 000121   000000 116000 18                 CMPQ    0
        17 000122   000074 600000 17                 TZE     s:779

      433      782
      434      783    2           IF NAME$ ~= ADDR(NIL) THEN

    783 17 000123   200107 236100                    LDQ     NAME$,,AUTO
        17 000124   000000 116000 18                 CMPQ    0
        17 000125   000166 600000 17                 TZE     s:803

      435      784    2            IF NAME$-> CSIB.B.ACTIVE THEN

    784 17 000126   200107 470500                    LDP0    NAME$,,AUTO
        17 000127   000006 236100                    LDQ     6,,PR0
        17 000130   040000 316003                    CANQ    16384,DU
        17 000131   000144 600000 17                 TZE     s:789

      436      785    3              DO;

      437      786    3                CALL X8ER$ERROR( %IPC_CANCEL_ACTIVE, NAME, NAME_LEN );
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:109  

    786 17 000132   200076 631500                    EPPR1   NAME_LEN,,AUTO
        17 000133   200116 451500                    STP1    PR1$+3,,AUTO
        17 000134   200111 236100                    LDQ     P$,,AUTO
        17 000135   000004 235000 18                 LDA     4
        17 000136   200114 757100                    STAQ    PR1$+1,,AUTO
        17 000137   200114 630500                    EPPR0   PR1$+1,,AUTO
        17 000140   000002 631400 18                 EPPR1   2
        17 000141   000000 701000 xent               TSX1    X8ER$ERROR
        17 000142   000000 011000                    NOP     0

      438      787    3              END;

    787 17 000143   000166 710000 17                 TRA     s:803

      439      788    2            ELSE
      440      789    2              IF NAME$-> CSIB.B.COMMON THEN

    789 17 000144   100000 316003                    CANQ    32768,DU
        17 000145   000155 600000 17                 TZE     s:793

      441      790    2                CALL X8CL$CANCEL_SONS (NAME$);

    790 17 000146   200107 631500                    EPPR1   NAME$,,AUTO
        17 000147   200114 451500                    STP1    PR1$+1,,AUTO
        17 000150   200114 630500                    EPPR0   PR1$+1,,AUTO
        17 000151   000005 631400 18                 EPPR1   5
        17 000152   000000 701000 xent               TSX1    X8CL$CANCEL_SONS
        17 000153   000000 011000                    NOP     0
        17 000154   000166 710000 17                 TRA     s:803

      442      791    2              ELSE
      443      792    3                DO;

      444      793    3                  CALL X8ER$ERROR( %IPC_NOT_COMMON, NAME, NAME_LEN );

    793 17 000155   200076 631500                    EPPR1   NAME_LEN,,AUTO
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:110  
        17 000156   200116 451500                    STP1    PR1$+3,,AUTO
        17 000157   200111 236100                    LDQ     P$,,AUTO
        17 000160   000007 235000 18                 LDA     7
        17 000161   200114 757100                    STAQ    PR1$+1,,AUTO
        17 000162   200114 630500                    EPPR0   PR1$+1,,AUTO
        17 000163   000002 631400 18                 EPPR1   2
        17 000164   000000 701000 xent               TSX1    X8ER$ERROR
        17 000165   000000 011000                    NOP     0

      445      794    3                END;

      446      795    2         END;  /* if name$ = addr(nil) */

      447      796        %EJECT;
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:111  
      448      797        /*V*                   OVERLAYS
      449      798
      450      799               If the cancelee is not found in the link list of csibs,
      451      800               call M$OLAY to cancel the module
      452      801        */
      453      802
      454      803    1       IF NAME$ = ADDR(NIL) THEN

    803 17 000166   200107 236100                    LDQ     NAME$,,AUTO
        17 000167   000000 116000 18                 CMPQ    0
        17 000170   000221 601000 17                 TNZ     s:818

      455      804    2         DO;

      456      805    2           CALLEE.LENGTH = NAME_LEN;

    805 17 000171   200076 236100                    LDQ     NAME_LEN,,AUTO
        17 000172   000033 736000                    QLS     27
        17 000173   200077 552140                    STBQ    CALLEE,'40'O,AUTO

      457      806    2           CALLEE.NAME   = NAME;

    806 17 000174   200111 470500                    LDP0    P$,,AUTO
        17 000175   200076 720100                    LXL0    NAME_LEN,,AUTO
        17 000176   040100 100540                    MLR     fill='040'O
        17 000177   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        17 000200   200077 200037                    ADSC9   CALLEE,,AUTO             cn=1,n=31

      458      807    2           CALL X9OL$CANCEL_OLAY ( CALLEE )

    807 17 000201   200077 631500                    EPPR1   CALLEE,,AUTO
        17 000202   200114 451500                    STP1    PR1$+1,,AUTO
        17 000203   200114 630500                    EPPR0   PR1$+1,,AUTO
        17 000204   000005 631400 18                 EPPR1   5
        17 000205   000000 701000 xent               TSX1    X9OL$CANCEL_OLAY
        17 000206   000210 702000 17                 TSX2    s:814

PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:112  
      459      808    2           WHENRETURN
      460      809    3             DO;

      461      810
      462      811    3             END;

    811 17 000207   000221 710000 17                 TRA     s:818

      463      812    2           WHENALTRETURN
      464      813    3             DO;

      465      814    3               CALL X8ER$ERROR( %IPC_PROGRAM_NOT_FOUND, NAME, NAME_LEN );

    814 17 000210   200076 630500                    EPPR0   NAME_LEN,,AUTO
        17 000211   200116 450500                    STP0    PR1$+3,,AUTO
        17 000212   200111 236100                    LDQ     P$,,AUTO
        17 000213   000011 235000 18                 LDA     9
        17 000214   200114 757100                    STAQ    PR1$+1,,AUTO
        17 000215   200114 630500                    EPPR0   PR1$+1,,AUTO
        17 000216   000002 631400 18                 EPPR1   2
        17 000217   000000 701000 xent               TSX1    X8ER$ERROR
        17 000220   000000 011000                    NOP     0

      466      815    3             END;

      467      816    2         END;

      468      817
      469      818    1   END X8CL$CANCEL; /* proc */

    818 17 000221   000000 702200 xent               TSX2  ! X66_ARET
      470      819        %EJECT;
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:113  
      471      820        %EOD;

PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:114  
--  Include file information  --

   X9A_MACROS.:X8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   X8A_MACROS.:X8A6TOU  is referenced.
   X8A_ERRCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$CANCEL.
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:115  

 **** Variables and constants ****

  ****  Section 000 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)         1 LIBCOM

  ****  Section 001 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 002 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 003 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 004 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:116  
  ****  Section 005 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 006 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 007 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 008 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 009 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 010 LblCom C_DATE

PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:117  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 011 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 012 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 013 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 014 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 015 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #006=X8CL$CANCEL File=X8CL.:X8A6TSI                                SAT 08/09/97 10:46 Page:118  

     0-0-0/w SBIN              1 NDX2

  ****  Section 016 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    77-0-0/w STRC(288)   r     1 CALLEE                    74-0-0/w PTR         r     1 CSIB$
    75-0-0/w PTR         r     1 CSIB$$                     3-0-0/w SBIN              1 LT
     4-0-0/c CHAR(65)          1 LTHOLD                   107-0-0/w PTR         r     1 NAME$
    76-0-0/w SBIN        r     1 NAME_LEN                  46-0-0/w SBIN              1 NDX
    47-0-0/w SBIN              1 NDX3                     111-0-0/w PTR         r     1 P$
   112-0-0/w PTR         r     1 PR0$                     113-0-0/w PTR         r     1 PR1$
   110-0-0/w PTR         r     1 PROC$                     25-0-0/c CHAR(65)          1 RTHOLD
    50-0-0/c CHAR(80)          1 SPECIAL_ERR_MSG

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ARG$(0:0)                  0-0-0/w ASTR(288)   r     1 CSIB
     0-0-0/w STRC(72)    r     1 DESC                       0-0-0/c ACHR        r     1 NAME


   Procedure X8CL$CANCEL requires 146 words for executable code.
   Procedure X8CL$CANCEL requires 82 words of local(AUTO) storage.

PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:119  
      472        1        /*T***********************************************************/
      473        2        /*T*                                                         */
      474        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      475        4        /*T*                                                         */
      476        5        /*T***********************************************************/
      477        6
      478        7        /*P*
      479        8              NAME: X8CL$CANCEL_SONS
      480        9           PURPOSE: This procedure will search out and mark as canceled all
      481       10                    subrountines contained within the canceled subroutine.
      482       11
      483       12        */
      484       13        /*---------------*/
      485       14        X8CL$CANCEL_SONS :     PROC  (NAME$);
      486       15        /*---------------*/
      487       16
      488       17            %INCLUDE X8A_LIBCOM;
      489      237            %INCLUDE X8A_CSIB;
      490      302
      491      303            %DCL_CSIB;
      492      332
      493      333    1       DCL NAME$          PTR;   /* Ptr to program being canceled */
      494      334    1       DCL SON$           PTR;
      495      335    1       DCL SON$$          PTR;
      496      336    1       DCL BROTHER$       PTR;
      497      337        %EJECT;
PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:120  
      498      338    1         NAME$-> CSIB.B.CANCELED = %TRUE;
      499      339    1         SON$ = NAME$-> CSIB.SON$;
      500      340    1         IF SON$ ~= ADDR(NIL) THEN
      501      341    2   CANCEL: DO WHILE (%TRUE);  /* We must cancel the nested programs.   */
      502      342    2             BROTHER$ = SON$;
      503      343
      504      344    3             DO WHILE (BROTHER$ ~= ADDR(NIL));
      505      345    3               BROTHER$-> CSIB.B.CANCELED = %TRUE;
      506      346    3               SON$$ = BROTHER$-> CSIB.SON$;
      507      347
      508      348    4               DO WHILE (SON$$ ~= ADDR(NIL));
      509      349    4                 SON$$-> CSIB.B.CANCELED = %TRUE;
      510      350    4                 BROTHER$ = SON$$;
      511      351    4                 SON$$ = SON$$-> CSIB.SON$;
      512      352    4               END; /* while son$$ */
      513      353
      514      354    3               SON$ = BROTHER$;
      515      355    3               BROTHER$ = BROTHER$-> CSIB.BROTHER$;
      516      356    3             END; /* while brother$ */
      517      357
      518      358    3     LOOP:   DO WHILE (%TRUE);
      519      359    3               IF SON$-> CSIB.FATHER$ = NAME$ THEN
      520      360    3                 EXIT CANCEL;
      521      361    3               ELSE
      522      362    3                 IF SON$-> CSIB.FATHER$-> CSIB.BROTHER$ = ADDR(NIL) THEN
      523      363    3                   SON$ = SON$-> CSIB.FATHER$;
      524      364    3                 ELSE
      525      365    4                   DO;
      526      366    4                     SON$ = SON$-> CSIB.FATHER$-> CSIB.BROTHER$;
      527      367    4                     EXIT LOOP;
      528      368    4                   END;
      529      369    3              END; /* LOOP while true */
      530      370
      531      371    2            END; /* CANCEL while true */
      532      372    1   END X8CL$CANCEL_SONS; /* proc */
      533      373        %EJECT;
PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:121  
      534      374        %EOD;

PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:122  
--  Include file information  --

   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$CANCEL_SONS.

   Procedure X8CL$CANCEL_SONS requires 52 words for executable code.
   Procedure X8CL$CANCEL_SONS requires 44 words of local(AUTO) storage.

PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:123  

 Object Unit name= X8CL$CANCEL_SONS                           File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:47:07.64 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none    20     24  LIBCOM
    1  LblCom even  none     1      1  DEC_OR_COMMA
    2  LblCom even  none    20     24  IN_TEMP
    3  LblCom even  none     1      1  OVRCHR
    4  LblCom even  none     1      1  SELECT_TIME
    5  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    6  LblCom even  none    18     22  DSPLY_SAVE
    7  LblCom even  none     3      3  D_DATE
    8  LblCom even  none     3      3  D_TIME
    9  LblCom even  none     1      1  D_DAY
   10  LblCom even  none     2      2  C_DATE
   11  LblCom even  none     2      2  C_TIME
   12  LblCom even  none     2      2  C_DAY
   13  LblCom even  none     1      1  RTHOLD2
   14  LblCom even  none     1      1  LTHOLD2
   15  LblCom even  none     1      1  NDX2
   16  LblCom even  none     1      1  IN_LEN
   17   Proc  even  none    52     64  X8CL$CANCEL_SONS
   18  RoData even  none     1      1  X8CL$CANCEL_SONS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes            yes      Std        1  X8CL$CANCEL_SONS
PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:124  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:125  


      472        1        /*T***********************************************************/
      473        2        /*T*                                                         */
      474        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      475        4        /*T*                                                         */
      476        5        /*T***********************************************************/
      477        6
      478        7        /*P*
      479        8              NAME: X8CL$CANCEL_SONS
      480        9           PURPOSE: This procedure will search out and mark as canceled all
      481       10                    subrountines contained within the canceled subroutine.
      482       11
      483       12        */
      484       13        /*---------------*/
      485       14        X8CL$CANCEL_SONS :     PROC  (NAME$);

     14 17 000000   000000 700200 xent  X8CL$CANCEL* TSX0  ! X66_AUTO_1
        17 000001   000054 000001                    ZERO    44,1

      486       15        /*---------------*/
      487       16
      488       17            %INCLUDE X8A_LIBCOM;
      489      237            %INCLUDE X8A_CSIB;
      490      302
      491      303            %DCL_CSIB;
      492      332
      493      333    1       DCL NAME$          PTR;   /* Ptr to program being canceled */
      494      334    1       DCL SON$           PTR;
      495      335    1       DCL SON$$          PTR;
      496      336    1       DCL BROTHER$       PTR;
      497      337        %EJECT;
PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:126  
      498      338    1         NAME$-> CSIB.B.CANCELED = %TRUE;

    338 17 000002   200003 470500                    LDP0    @NAME$,,AUTO
        17 000003   000000 471500                    LDP1    0,,PR0
        17 000004   020000 236003                    LDQ     8192,DU
        17 000005   100006 256100                    ORSQ    6,,PR1

      499      339    1         SON$ = NAME$-> CSIB.SON$;

    339 17 000006   000000 471500                    LDP1    0,,PR0
        17 000007   100001 236100                    LDQ     1,,PR1
        17 000010   200051 756100                    STQ     SON$,,AUTO

      500      340    1         IF SON$ ~= ADDR(NIL) THEN

    340 17 000011   000000 116000 18                 CMPQ    0
        17 000012   000063 600000 17                 TZE     s:372

      501      341    2   CANCEL: DO WHILE (%TRUE);  /* We must cancel the nested programs.   */

    341 17 000013                       CANCEL       null
      502      342    2             BROTHER$ = SON$;

    342 17 000013   200051 236100                    LDQ     SON$,,AUTO
        17 000014   200053 756100                    STQ     BROTHER$,,AUTO

      503      343
      504      344    3             DO WHILE (BROTHER$ ~= ADDR(NIL));

    344 17 000015   000042 710000 17                 TRA     s:356

      505      345    3               BROTHER$-> CSIB.B.CANCELED = %TRUE;

    345 17 000016   200053 470500                    LDP0    BROTHER$,,AUTO
        17 000017   020000 236003                    LDQ     8192,DU
        17 000020   000006 256100                    ORSQ    6,,PR0

PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:127  
      506      346    3               SON$$ = BROTHER$-> CSIB.SON$;

    346 17 000021   000001 236100                    LDQ     1,,PR0
        17 000022   200052 756100                    STQ     SON$$,,AUTO

      507      347
      508      348    4               DO WHILE (SON$$ ~= ADDR(NIL));

    348 17 000023   000033 710000 17                 TRA     s:352

      509      349    4                 SON$$-> CSIB.B.CANCELED = %TRUE;

    349 17 000024   200052 470500                    LDP0    SON$$,,AUTO
        17 000025   020000 236003                    LDQ     8192,DU
        17 000026   000006 256100                    ORSQ    6,,PR0

      510      350    4                 BROTHER$ = SON$$;

    350 17 000027   200052 236100                    LDQ     SON$$,,AUTO
        17 000030   200053 756100                    STQ     BROTHER$,,AUTO

      511      351    4                 SON$$ = SON$$-> CSIB.SON$;

    351 17 000031   000001 236100                    LDQ     1,,PR0
        17 000032   200052 756100                    STQ     SON$$,,AUTO

      512      352    4               END; /* while son$$ */

    352 17 000033   000000 116000 18                 CMPQ    0
        17 000034   000024 601000 17                 TNZ     s:349

      513      353
      514      354    3               SON$ = BROTHER$;

    354 17 000035   200053 236100                    LDQ     BROTHER$,,AUTO
        17 000036   200051 756100                    STQ     SON$,,AUTO

PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:128  
      515      355    3               BROTHER$ = BROTHER$-> CSIB.BROTHER$;

    355 17 000037   200053 470500                    LDP0    BROTHER$,,AUTO
        17 000040   000000 236100                    LDQ     0,,PR0
        17 000041   200053 756100                    STQ     BROTHER$,,AUTO

      516      356    3             END; /* while brother$ */

    356 17 000042   000000 116000 18                 CMPQ    0
        17 000043   000016 601000 17                 TNZ     s:345

      517      357
      518      358    3     LOOP:   DO WHILE (%TRUE);

    358 17 000044                       LOOP         null
      519      359    3               IF SON$-> CSIB.FATHER$ = NAME$ THEN

    359 17 000044   200051 470500                    LDP0    SON$,,AUTO
        17 000045   200003 471500                    LDP1    @NAME$,,AUTO
        17 000046   000002 236100                    LDQ     2,,PR0
        17 000047   100000 116100                    CMPQ    0,,PR1
        17 000050   000063 600000 17                 TZE     s:372

      520      360    3                 EXIT CANCEL;
      521      361    3               ELSE
      522      362    3                 IF SON$-> CSIB.FATHER$-> CSIB.BROTHER$ = ADDR(NIL) THEN

    362 17 000051   000002 473500                    LDP3    2,,PR0
        17 000052   300000 236100                    LDQ     0,,PR3
        17 000053   000000 116000 18                 CMPQ    0
        17 000054   000060 601000 17                 TNZ     s:366

      523      363    3                   SON$ = SON$-> CSIB.FATHER$;

    363 17 000055   000002 236100                    LDQ     2,,PR0
        17 000056   200051 756100                    STQ     SON$,,AUTO
        17 000057   000044 710000 17                 TRA     LOOP
PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:129  

      524      364    3                 ELSE
      525      365    4                   DO;

      526      366    4                     SON$ = SON$-> CSIB.FATHER$-> CSIB.BROTHER$;

    366 17 000060   200051 756100                    STQ     SON$,,AUTO

      527      367    4                     EXIT LOOP;

    367 17 000061   000062 710000 17                 TRA     s:371

      528      368    4                   END;
      529      369    3              END; /* LOOP while true */

      530      370
      531      371    2            END; /* CANCEL while true */

    371 17 000062   000013 710000 17                 TRA     CANCEL

      532      372    1   END X8CL$CANCEL_SONS; /* proc */

    372 17 000063   000000 702200 xent               TSX2  ! X66_ARET
      533      373        %EJECT;
PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:130  
      534      374        %EOD;

PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:131  
--  Include file information  --

   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$CANCEL_SONS.
PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:132  

 **** Variables and constants ****

  ****  Section 000 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)         1 LIBCOM

  ****  Section 001 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 002 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 003 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 004 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:133  
  ****  Section 005 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 006 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 007 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 008 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 009 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 010 LblCom C_DATE

PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:134  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 011 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 012 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 013 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 014 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 015 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #007=X8CL$CANCEL_SONS File=X8CL.:X8A6TSI                           SAT 08/09/97 10:47 Page:135  

     0-0-0/w SBIN              1 NDX2

  ****  Section 016 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @NAME$                    53-0-0/w PTR         r     1 BROTHER$
     4-0-0/w SBIN              1 LT                         5-0-0/c CHAR(65)          1 LTHOLD
    *0-0-0/w PTR         r     1 NAME$                     47-0-0/w SBIN              1 NDX
    50-0-0/w SBIN              1 NDX3                      26-0-0/c CHAR(65)          1 RTHOLD
    51-0-0/w PTR         r     1 SON$                      52-0-0/w PTR         r     1 SON$$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(288)   r     1 CSIB


   Procedure X8CL$CANCEL_SONS requires 52 words for executable code.
   Procedure X8CL$CANCEL_SONS requires 44 words of local(AUTO) storage.

PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:136  
      535        1        /*T***********************************************************/
      536        2        /*T*                                                         */
      537        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      538        4        /*T*                                                         */
      539        5        /*T***********************************************************/
      540        6
      541        7        /*--------------------------*/
      542        8        X8CL$CANCEL_INTERNAL_LITERAL:        PROC (CSIB) ALTRET;
      543        9        /*--------------------------*/
      544       10
      545       11            %INCLUDE X8A_LIBCOM;
      546      231            %INCLUDE X8A_CSIB;
      547      296            %INCLUDE X8A_ERRCOM;
      548      385
      549      386            %DCL_CSIB ( @STCLASS="");
      550      415
      551      416    1       DCL X8ER$ERROR            ENTRY(3);
      552      417    1       DCL X8CL$CANCEL_SONS      ENTRY(1);
      553      418
      554      419    1       IF CSIB.B.ACTIVE THEN
      555      420    2         DO;
      556      421    2           CALL X8ER$ERROR( %IPC_CANCEL_ACTIVE, CSIB.NAME_TEXT,
      557      422    2                                              CSIB.NAME_LENGTH );
      558      423    2         END;
      559      424    1       ELSE
      560      425    1         CALL X8CL$CANCEL_SONS (ADDR (CSIB));
      561      426
      562      427    1   END X8CL$CANCEL_INTERNAL_LITERAL;
      563      428        %EJECT;
PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:137  
      564      429        %EOD;

PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:138  
--  Include file information  --

   X8A_ERRCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$CANCEL_INTERNAL_LITERAL.

   Procedure X8CL$CANCEL_INTERNAL_LITERAL requires 27 words for executable code.
   Procedure X8CL$CANCEL_INTERNAL_LITERAL requires 66 words of local(AUTO) storage.

PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:139  

 Object Unit name= X8CL$CANCEL_INTERNAL_LITERAL               File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:47:36.48 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none    20     24  LIBCOM
    1  LblCom even  none     1      1  DEC_OR_COMMA
    2  LblCom even  none    20     24  IN_TEMP
    3  LblCom even  none     1      1  OVRCHR
    4  LblCom even  none     1      1  SELECT_TIME
    5  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    6  LblCom even  none    18     22  DSPLY_SAVE
    7  LblCom even  none     3      3  D_DATE
    8  LblCom even  none     3      3  D_TIME
    9  LblCom even  none     1      1  D_DAY
   10  LblCom even  none     2      2  C_DATE
   11  LblCom even  none     2      2  C_TIME
   12  LblCom even  none     2      2  C_DAY
   13  LblCom even  none     1      1  RTHOLD2
   14  LblCom even  none     1      1  LTHOLD2
   15  LblCom even  none     1      1  NDX2
   16  LblCom even  none     1      1  IN_LEN
   17   Proc  even  none    27     33  X8CL$CANCEL_INTERNAL_LITERAL
   18  RoData even  none     4      4  X8CL$CANCEL_INTERNAL_LITERAL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes    yes     yes      Std        1  X8CL$CANCEL_INTERNAL_LITERAL
PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:140  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 X8ER$ERROR
         yes           Std       1 X8CL$CANCEL_SONS
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:141  


      535        1        /*T***********************************************************/
      536        2        /*T*                                                         */
      537        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      538        4        /*T*                                                         */
      539        5        /*T***********************************************************/
      540        6
      541        7        /*--------------------------*/
      542        8        X8CL$CANCEL_INTERNAL_LITERAL:        PROC (CSIB) ALTRET;

      8 17 000000   000000 700200 xent  X8CL$CANCEL* TSX0  ! X66_AUTO_1
        17 000001   000102 000001                    ZERO    66,1

      543        9        /*--------------------------*/
      544       10
      545       11            %INCLUDE X8A_LIBCOM;
      546      231            %INCLUDE X8A_CSIB;
      547      296            %INCLUDE X8A_ERRCOM;
      548      385
      549      386            %DCL_CSIB ( @STCLASS="");
      550      415
      551      416    1       DCL X8ER$ERROR            ENTRY(3);
      552      417    1       DCL X8CL$CANCEL_SONS      ENTRY(1);
      553      418
      554      419    1       IF CSIB.B.ACTIVE THEN

    419 17 000002   200003 470500                    LDP0    @CSIB,,AUTO
        17 000003   000006 236100                    LDQ     6,,PR0
        17 000004   040000 316003                    CANQ    16384,DU
        17 000005   000022 600000 17                 TZE     s:425

      555      420    2         DO;

      556      421    2           CALL X8ER$ERROR( %IPC_CANCEL_ACTIVE, CSIB.NAME_TEXT,

    421 17 000006   200003 236100                    LDQ     @CSIB,,AUTO
        17 000007   000007 036003                    ADLQ    7,DU
PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:142  
        17 000010   200100 756100                    STQ     SPECIAL_ERR_MSG+23,,AUTO
        17 000011   200003 236100                    LDQ     @CSIB,,AUTO
        17 000012   000010 036003                    ADLQ    8,DU
        17 000013   000002 235000 18                 LDA     2
        17 000014   200076 757100                    STAQ    SPECIAL_ERR_MSG+21,,AUTO
        17 000015   200076 630500                    EPPR0   SPECIAL_ERR_MSG+21,,AUTO
        17 000016   000000 631400 18                 EPPR1   0
        17 000017   000000 701000 xent               TSX1    X8ER$ERROR
        17 000020   000000 011000                    NOP     0

      557      422    2                                              CSIB.NAME_LENGTH );
      558      423    2         END;

    423 17 000021   000032 710000 17                 TRA     s:427

      559      424    1       ELSE
      560      425    1         CALL X8CL$CANCEL_SONS (ADDR (CSIB));

    425 17 000022   200003 236100                    LDQ     @CSIB,,AUTO
        17 000023   200076 756100                    STQ     SPECIAL_ERR_MSG+21,,AUTO
        17 000024   200076 631500                    EPPR1   SPECIAL_ERR_MSG+21,,AUTO
        17 000025   200077 451500                    STP1    SPECIAL_ERR_MSG+22,,AUTO
        17 000026   200077 630500                    EPPR0   SPECIAL_ERR_MSG+22,,AUTO
        17 000027   000003 631400 18                 EPPR1   3
        17 000030   000000 701000 xent               TSX1    X8CL$CANCEL_SONS
        17 000031   000000 011000                    NOP     0

      561      426
      562      427    1   END X8CL$CANCEL_INTERNAL_LITERAL;

    427 17 000032   000000 702200 xent               TSX2  ! X66_ARET
      563      428        %EJECT;
PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:143  
      564      429        %EOD;

PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:144  
--  Include file information  --

   X8A_ERRCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$CANCEL_INTERNAL_LITERAL.
PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:145  

 **** Variables and constants ****

  ****  Section 000 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)         1 LIBCOM

  ****  Section 001 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 002 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 003 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 004 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:146  
  ****  Section 005 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 006 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 007 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 008 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 009 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 010 LblCom C_DATE

PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:147  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 011 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 012 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 013 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 014 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 015 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #008=X8CL$CANCEL_INTERNAL_LITERAL File=X8CL.:X8A6TSI               SAT 08/09/97 10:47 Page:148  

     0-0-0/w SBIN              1 NDX2

  ****  Section 016 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CSIB                     *0-0-0/w ASTR(288)   r     1 CSIB
     4-0-0/w SBIN              1 LT                         5-0-0/c CHAR(65)          1 LTHOLD
    47-0-0/w SBIN              1 NDX                       50-0-0/w SBIN              1 NDX3
    26-0-0/c CHAR(65)          1 RTHOLD                    51-0-0/c CHAR(80)          1 SPECIAL_ERR_MSG


   Procedure X8CL$CANCEL_INTERNAL_LITERAL requires 27 words for executable code.
   Procedure X8CL$CANCEL_INTERNAL_LITERAL requires 66 words of local(AUTO) storage.

PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:149  
      565        1        /*T***********************************************************/
      566        2        /*T*                                                         */
      567        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      568        4        /*T*                                                         */
      569        5        /*T***********************************************************/
      570        6
      571        7            %INCLUDE Z9A_FLAGS;
      572       21        /*---------------*/
      573       22        X8CL$EXIT_PROGRAM:     PROC
      574       23        %IF GCOS;
      576       25        %ENDIF;
      577       26        %IF CP6;
      578       27                                    MATERIALIZE ($PR0 IN CSIB$)
      579       28        %ENDIF;
      580       29                                    ALTRET;
      581       30        /*---------------*/
      582       31
      583       32            %INCLUDE X8A_LIBCOM;
      584      252            %INCLUDE X8A_CSIB;
      585      317            %INCLUDE X9A_FAB;
      586      504
      587      505    1       DCL 1 DML$INTERFACE$AREA ALIGNED BASED,
      588      506    1             2 * (0:5) UBIN,
      589      507    1             2 * BIT (9),
      590      508    1             2 USE_PROC_SAVE BIT (1),
      591      509    1             2 * BIT (26);
      592      510            %IF GCOS;
      596      514            %ENDIF;
      597      515            %IF CP6;
      598      516            %DCL_CSIB (@STCLASS = "BASED (CSIB$)");
      599      545
      600      546    1       DCL CSIB$          PTR;
      601      547            %ENDIF;
      602      548    1       DCL 1 X9OS$EXIT_BLOCK SYMREF DALIGNED,
      603      549    1             2 REM (0:63) REMEMBER,
      604      550    1             2 ITEM (0:63) REDEF REM,
      605      551    1               3 TYPE SBIN,
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:150  
      606      552    1               3 PTR$ PTR,
      607      553    1               3 EPTR$ REDEF PTR$ EPTR,
      608      554    1             2 PREV$ PTR,
      609      555    1             2 NEXT$ PTR;
      610      556    1       DCL X9OS$EXIT_INDEX SBIN SYMREF;
      611      557    1       DCL 1 EXIT$BLOCK DALIGNED BASED (EXIT_BLOCK$),
      612      558    1             2 REM (0:63) REMEMBER,
      613      559    1             2 ITEM (0:63) REDEF REM,
      614      560    1               3 TYPE SBIN,
      615      561    1               3 PTR$ PTR,
      616      562    1               3 EPTR$ REDEF PTR$ EPTR,
      617      563    1             2 PREV$ PTR,
      618      564    1             2 NEXT$ PTR;
      619      565    1       DCL EXIT_BLOCK$ PTR;
      620      566    1       DCL I SBIN;
      621      567    1       DCL EPTR$ EPTR;
      622      568            %IF CP6;
      623      569            %DCL_FAB (@STCLASS=BASED);
      624      691            %ENDIF;
      625      692            %IF GCOS;
      628      695            %ENDIF;
      629      696         %EJECT;
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:151  
      630      697    1       IF NOT CSIB.B.ACTIVE THEN
      631      698    1         GOTO ERR_EXIT;
      632      699
      633      700    1       IF LIBCOM.EXIT_PROG_IN_DECL THEN
      634      701    2         DO;
      635      702    2           IF LIBCOM.USE_PROC THEN
      636      703    3             DO;
      637      704    3               LIBCOM.USE_PROC = %FALSE;
      638      705    3               EXIT_BLOCK$ = ADDR (X9OS$EXIT_BLOCK);
      639      706    4               DO I = 64 TO X9OS$EXIT_INDEX BY 64;
      640      707    4                 EXIT_BLOCK$ = EXIT$BLOCK.NEXT$;
      641      708    4               END;
      642      709    3               I = MOD (X9OS$EXIT_INDEX, 64);
      643      710    4               DO WHILE '1'B;
      644      711    4                 I = I - 1;
      645      712    5                 DO CASE (EXIT$BLOCK.ITEM.TYPE (I));
      646      713    5                   CASE (0); /* I/O or Report Writer USE procedure */
      647      714    5                     EXIT$BLOCK.ITEM.PTR$ (I) -> FAB.B.USE_PROC = %FALSE;
      648      715    5                   CASE (1); /* GLOBAL USE procedure */
      649      716    5                     EPTR$ = EXIT$BLOCK.ITEM.EPTR$ (I);
      650      717    5                     CALL EPTR$; /* Restore USE procedure pointers */
      651      718    5                   CASE (2); /* DML USE procedure */
      652      719    5                     EXIT$BLOCK.ITEM.PTR$ (I) -> DML$INTERFACE$AREA.USE_PROC_SAVE = %
               719                              FALSE;
      653      720                        %IF GCOS;
      664      731                        %ENDIF;
      665      732    5                   CASE (ELSE); /* Program to be exited */
      666      733    5                     UNWIND TO EXIT$BLOCK.REM (I);
      667      734                          /* Return to EXIT PROGRAM statement, which will exit
      668      735                             the program itself. */
      669      736    5                 END; /* CASE */
      670      737    4                 X9OS$EXIT_INDEX = X9OS$EXIT_INDEX - 1;
      671      738    4                 IF I = 0 THEN
      672      739    5                   DO;
      673      740    5                     I = 64;
      674      741    5                     EXIT_BLOCK$ = EXIT$BLOCK.PREV$;
      675      742    5                   END;
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:152  
      676      743    4               END; /* WHILE '1'B */
      677      744    3             END; /* LIBCOM.USE_PROC */
      678      745    2         END; /* LIBCOM.EXIT_PROG_IN_DECL */
      679      746
      680      747
      681      748    1       CSIB.B.ACTIVE = %FALSE;
      682      749
      683      750            %IF GCOS;
      686      753            %ENDIF;
      687      754    1       LIBCOM.USE_PROC = CSIB.B.USE_PROC_SAVE; /* Call could be from USE proc */
      688      755    1       LIBCOM.EXIT_PROG_IN_DECL = CSIB.B.EXIT_PROG_IN_DECL;
      689      756    1       CSIB.B.EXIT_PROG_IN_DECL = '0'B;
      690      757    1       CSIB.B.USE_PROC_SAVE = %FALSE;
      691      758
      692      759    1       RETURN;
      693      760
      694      761    1   ERR_EXIT: ALTRETURN;
      695      762    1   END X8CL$EXIT_PROGRAM; /* proc */
      696      763        %EOD;

PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:153  
--  Include file information  --

   XS_MACRO_C.:LIBRARY  is referenced.
   X9A_FAB.:X8A6TOU  is referenced.
   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure X8CL$EXIT_PROGRAM.

   Procedure X8CL$EXIT_PROGRAM requires 92 words for executable code.
   Procedure X8CL$EXIT_PROGRAM requires 44 words of local(AUTO) storage.

PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:154  

 Object Unit name= X8CL$EXIT_PROGRAM                          File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:47:59.80 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none    20     24  LIBCOM
    1  LblCom even  none     1      1  DEC_OR_COMMA
    2  LblCom even  none    20     24  IN_TEMP
    3  LblCom even  none     1      1  OVRCHR
    4  LblCom even  none     1      1  SELECT_TIME
    5  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    6  LblCom even  none    18     22  DSPLY_SAVE
    7  LblCom even  none     3      3  D_DATE
    8  LblCom even  none     3      3  D_TIME
    9  LblCom even  none     1      1  D_DAY
   10  LblCom even  none     2      2  C_DATE
   11  LblCom even  none     2      2  C_TIME
   12  LblCom even  none     2      2  C_DAY
   13  LblCom even  none     1      1  RTHOLD2
   14  LblCom even  none     1      1  LTHOLD2
   15  LblCom even  none     1      1  NDX2
   16  LblCom even  none     1      1  IN_LEN
   17   Proc  even  none    92    134  X8CL$EXIT_PROGRAM
   18  RoData even  none     7      7  X8CL$EXIT_PROGRAM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes    yes     yes      Std        0  X8CL$EXIT_PROGRAM
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:155  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AUNWIND
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     X9OS$EXIT_BLOCK                       X9OS$EXIT_INDEX

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:156  


      565        1        /*T***********************************************************/
      566        2        /*T*                                                         */
      567        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      568        4        /*T*                                                         */
      569        5        /*T***********************************************************/
      570        6
      571        7            %INCLUDE Z9A_FLAGS;
      572       21        /*---------------*/
      573       22        X8CL$EXIT_PROGRAM:     PROC

     22 17 000000   000000 700200 xent  X8CL$EXIT_P* TSX0  ! X66_AUTO_0
        17 000001   000054 000000                    ZERO    44,0
        17 000002   200050 450700                    STP0  ! CSIB$,,AUTO

      574       23        %IF GCOS;
      576       25        %ENDIF;
      577       26        %IF CP6;
      578       27                                    MATERIALIZE ($PR0 IN CSIB$)
      579       28        %ENDIF;
      580       29                                    ALTRET;
      581       30        /*---------------*/
      582       31
      583       32            %INCLUDE X8A_LIBCOM;
      584      252            %INCLUDE X8A_CSIB;
      585      317            %INCLUDE X9A_FAB;
      586      504
      587      505    1       DCL 1 DML$INTERFACE$AREA ALIGNED BASED,
      588      506    1             2 * (0:5) UBIN,
      589      507    1             2 * BIT (9),
      590      508    1             2 USE_PROC_SAVE BIT (1),
      591      509    1             2 * BIT (26);
      592      510            %IF GCOS;
      596      514            %ENDIF;
      597      515            %IF CP6;
      598      516            %DCL_CSIB (@STCLASS = "BASED (CSIB$)");
      599      545
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:157  
      600      546    1       DCL CSIB$          PTR;
      601      547            %ENDIF;
      602      548    1       DCL 1 X9OS$EXIT_BLOCK SYMREF DALIGNED,
      603      549    1             2 REM (0:63) REMEMBER,
      604      550    1             2 ITEM (0:63) REDEF REM,
      605      551    1               3 TYPE SBIN,
      606      552    1               3 PTR$ PTR,
      607      553    1               3 EPTR$ REDEF PTR$ EPTR,
      608      554    1             2 PREV$ PTR,
      609      555    1             2 NEXT$ PTR;
      610      556    1       DCL X9OS$EXIT_INDEX SBIN SYMREF;
      611      557    1       DCL 1 EXIT$BLOCK DALIGNED BASED (EXIT_BLOCK$),
      612      558    1             2 REM (0:63) REMEMBER,
      613      559    1             2 ITEM (0:63) REDEF REM,
      614      560    1               3 TYPE SBIN,
      615      561    1               3 PTR$ PTR,
      616      562    1               3 EPTR$ REDEF PTR$ EPTR,
      617      563    1             2 PREV$ PTR,
      618      564    1             2 NEXT$ PTR;
      619      565    1       DCL EXIT_BLOCK$ PTR;
      620      566    1       DCL I SBIN;
      621      567    1       DCL EPTR$ EPTR;
      622      568            %IF CP6;
      623      569            %DCL_FAB (@STCLASS=BASED);
      624      691            %ENDIF;
      625      692            %IF GCOS;
      628      695            %ENDIF;
      629      696         %EJECT;
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:158  
      630      697    1       IF NOT CSIB.B.ACTIVE THEN

    697 17 000003   000006 236100                    LDQ     6,,PR0
        17 000004   040000 316003                    CANQ    16384,DU
        17 000005   000133 600000 17                 TZE     ERR_EXIT

      631      698    1         GOTO ERR_EXIT;
      632      699
      633      700    1       IF LIBCOM.EXIT_PROG_IN_DECL THEN

    700 17 000006   000023 234000 0                  SZN     LIBCOM+19
        17 000007   000113 605000 17                 TPL     s:748

      634      701    2         DO;

      635      702    2           IF LIBCOM.USE_PROC THEN

    702 17 000010   000022 234000 0                  SZN     LIBCOM+18
        17 000011   000113 605000 17                 TPL     s:748

      636      703    3             DO;

      637      704    3               LIBCOM.USE_PROC = %FALSE;

    704 17 000012   000022 450000 0                  STZ     LIBCOM+18

      638      705    3               EXIT_BLOCK$ = ADDR (X9OS$EXIT_BLOCK);

    705 17 000013   000000 236000 18                 LDQ     0
        17 000014   200051 756100                    STQ     EXIT_BLOCK$,,AUTO

      639      706    4               DO I = 64 TO X9OS$EXIT_INDEX BY 64;

    706 17 000015   000100 235007                    LDA     64,DL
        17 000016   200052 755100                    STA     I,,AUTO
        17 000017   000025 710000 17                 TRA     s:708+2

PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:159  
      640      707    4                 EXIT_BLOCK$ = EXIT$BLOCK.NEXT$;

    707 17 000020   200051 470500                    LDP0    EXIT_BLOCK$,,AUTO
        17 000021   000201 236100                    LDQ     129,,PR0
        17 000022   200051 756100                    STQ     EXIT_BLOCK$,,AUTO

      641      708    4               END;

    708 17 000023   000100 236007                    LDQ     64,DL
        17 000024   200052 056100                    ASQ     I,,AUTO
        17 000025   200052 236100                    LDQ     I,,AUTO
        17 000026   000000 116000 xsym               CMPQ    X9OS$EXIT_INDEX
        17 000027   000020 604400 17                 TMOZ    s:707

      642      709    3               I = MOD (X9OS$EXIT_INDEX, 64);

    709 17 000030   000000 236000 xsym               LDQ     X9OS$EXIT_INDEX
        17 000031   000100 506007                    DIV     64,DL
        17 000032   200052 755100                    STA     I,,AUTO

      643      710    4               DO WHILE '1'B;

      644      711    4                 I = I - 1;

    711 17 000033   000001 336007                    LCQ     1,DL
        17 000034   200052 056100                    ASQ     I,,AUTO

      645      712    5                 DO CASE (EXIT$BLOCK.ITEM.TYPE (I));

    712 17 000035   200052 235100                    LDA     I,,AUTO
        17 000036   000001 735000                    ALS     1
        17 000037   200051 470500                    LDP0    EXIT_BLOCK$,,AUTO
        17 000040   000000 235105                    LDA     0,AL,PR0
        17 000041   000003 115007                    CMPA    3,DL
        17 000042   000044 602005 17                 TNC     s:712+7,AL
        17 000043   000074 710000 17                 TRA     s:733
        17 000044   000047 710000 17                 TRA     s:714
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:160  
        17 000045   000055 710000 17                 TRA     s:716
        17 000046   000066 710000 17                 TRA     s:719

      646      713    5                   CASE (0); /* I/O or Report Writer USE procedure */

      647      714    5                     EXIT$BLOCK.ITEM.PTR$ (I) -> FAB.B.USE_PROC = %FALSE;

    714 17 000047   200052 235100                    LDA     I,,AUTO
        17 000050   000001 735000                    ALS     1
        17 000051   000001 471505                    LDP1    1,AL,PR0
        17 000052   000001 236000 18                 LDQ     1
        17 000053   100032 356100                    ANSQ    26,,PR1
        17 000054   000101 710000 17                 TRA     s:737

      648      715    5                   CASE (1); /* GLOBAL USE procedure */

      649      716    5                     EPTR$ = EXIT$BLOCK.ITEM.EPTR$ (I);

    716 17 000055   200052 235100                    LDA     I,,AUTO
        17 000056   000001 735000                    ALS     1
        17 000057   000001 236105                    LDQ     1,AL,PR0
        17 000060   200053 756100                    STQ     EPTR$,,AUTO

      650      717    5                     CALL EPTR$; /* Restore USE procedure pointers */

    717 17 000061   200053 220100                    LDX0    EPTR$,,AUTO
        17 000062   000002 631400 18                 EPPR1   2
        17 000063   000000 701010                    TSX1    0,X0
        17 000064   000000 011000                    NOP     0
        17 000065   000101 710000 17                 TRA     s:737

      651      718    5                   CASE (2); /* DML USE procedure */

      652      719    5                     EXIT$BLOCK.ITEM.PTR$ (I) -> DML$INTERFACE$AREA.USE_PROC_SAVE = %
               719                              FALSE;

    719 17 000066   200052 235100                    LDA     I,,AUTO
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:161  
        17 000067   000001 735000                    ALS     1
        17 000070   000001 471505                    LDP1    1,AL,PR0
        17 000071   000003 236000 18                 LDQ     3
        17 000072   100006 356100                    ANSQ    6,,PR1
        17 000073   000101 710000 17                 TRA     s:737

      653      720                        %IF GCOS;
      664      731                        %ENDIF;
      665      732    5                   CASE (ELSE); /* Program to be exited */

      666      733    5                     UNWIND TO EXIT$BLOCK.REM (I);

    733 17 000074   200052 235300                    LDA   ! I,,AUTO
        17 000075   000001 735200                    ALS   ! 1
        17 000076   000000 237305                    LDAQ  ! 0,AL,PR0
        17 000077   000000 700200 xent               TSX0  ! X66_AUNWIND
        17 000100   000000 000200                    ZERO    0,128

      667      734                          /* Return to EXIT PROGRAM statement, which will exit
      668      735                             the program itself. */
      669      736    5                 END; /* CASE */

      670      737    4                 X9OS$EXIT_INDEX = X9OS$EXIT_INDEX - 1;

    737 17 000101   000001 336007                    LCQ     1,DL
        17 000102   000000 056000 xsym               ASQ     X9OS$EXIT_INDEX

      671      738    4                 IF I = 0 THEN

    738 17 000103   200052 235100                    LDA     I,,AUTO
        17 000104   000033 601000 17                 TNZ     s:711

      672      739    5                   DO;

      673      740    5                     I = 64;

    740 17 000105   000100 235007                    LDA     64,DL
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:162  
        17 000106   200052 755100                    STA     I,,AUTO

      674      741    5                     EXIT_BLOCK$ = EXIT$BLOCK.PREV$;

    741 17 000107   200051 470500                    LDP0    EXIT_BLOCK$,,AUTO
        17 000110   000200 236100                    LDQ     128,,PR0
        17 000111   200051 756100                    STQ     EXIT_BLOCK$,,AUTO

      675      742    5                   END;

      676      743    4               END; /* WHILE '1'B */

    743 17 000112   000033 710000 17                 TRA     s:711

      677      744    3             END; /* LIBCOM.USE_PROC */
      678      745    2         END; /* LIBCOM.EXIT_PROG_IN_DECL */
      679      746
      680      747
      681      748    1       CSIB.B.ACTIVE = %FALSE;

    748 17 000113   000004 236000 18                 LDQ     4
        17 000114   000006 356100                    ANSQ    6,,PR0

      682      749
      683      750            %IF GCOS;
      686      753            %ENDIF;
      687      754    1       LIBCOM.USE_PROC = CSIB.B.USE_PROC_SAVE; /* Call could be from USE proc */

    754 17 000115   200050 470500                    LDP0    CSIB$,,AUTO
        17 000116   000006 236100                    LDQ     6,,PR0
        17 000117   000005 736000                    QLS     5
        17 000120   400000 376003                    ANQ     -131072,DU
        17 000121   000022 756000 0                  STQ     LIBCOM+18

      688      755    1       LIBCOM.EXIT_PROG_IN_DECL = CSIB.B.EXIT_PROG_IN_DECL;

    755 17 000122   000006 236100                    LDQ     6,,PR0
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:163  
        17 000123   000007 736000                    QLS     7
        17 000124   400000 376003                    ANQ     -131072,DU
        17 000125   000023 756000 0                  STQ     LIBCOM+19

      689      756    1       CSIB.B.EXIT_PROG_IN_DECL = '0'B;

    756 17 000126   000005 236000 18                 LDQ     5
        17 000127   000006 356100                    ANSQ    6,,PR0

      690      757    1       CSIB.B.USE_PROC_SAVE = %FALSE;

    757 17 000130   000006 236000 18                 LDQ     6
        17 000131   000006 356100                    ANSQ    6,,PR0

      691      758
      692      759    1       RETURN;

    759 17 000132   000000 702200 xent               TSX2  ! X66_ARET

      693      760
      694      761    1   ERR_EXIT: ALTRETURN;

    761 17 000133   000000 702200 xent  ERR_EXIT     TSX2  ! X66_AALT
      695      762    1   END X8CL$EXIT_PROGRAM; /* proc */
      696      763        %EOD;

PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:164  
--  Include file information  --

   XS_MACRO_C.:LIBRARY  is referenced.
   X9A_FAB.:X8A6TOU  is referenced.
   X8A_CSIB.:X8A6TOU  is referenced.
   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure X8CL$EXIT_PROGRAM.
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:165  

 **** Variables and constants ****

  ****  Section 000 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)   r     1 LIBCOM

  ****  Section 001 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 002 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 003 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 004 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:166  
  ****  Section 005 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 006 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 007 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 008 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 009 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 010 LblCom C_DATE

PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:167  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 011 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 012 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 013 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 014 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 015 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:168  

     0-0-0/w SBIN              1 NDX2

  ****  Section 016 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    50-0-0/w PTR         r     1 CSIB$                     53-0-0/w EPTR        r     1 EPTR$
    51-0-0/w PTR         r     1 EXIT_BLOCK$               52-0-0/w SBIN        r     1 I
     3-0-0/w SBIN              1 LT                         4-0-0/c CHAR(65)          1 LTHOLD
    46-0-0/w SBIN              1 NDX                       47-0-0/w SBIN              1 NDX3
    25-0-0/c CHAR(65)          1 RTHOLD

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4680)  r     1 X9OS$EXIT_BLOCK            0-0-0/w SBIN        r     1 X9OS$EXIT_INDEX

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(288)   r     1 CSIB                       0-0-0/w STRC(252)   r     1 DML$INTERFACE$AREA
     0-0-0/d STRC(4680)  r     1 EXIT$BLOCK                 0-0-0/d STRC(2232)  r     1 FAB

PL6.E3A0      #009=X8CL$EXIT_PROGRAM File=X8CL.:X8A6TSI                          SAT 08/09/97 10:47 Page:169  

   Procedure X8CL$EXIT_PROGRAM requires 92 words for executable code.
   Procedure X8CL$EXIT_PROGRAM requires 44 words of local(AUTO) storage.

PL6.E3A0      #010=X8CL$USE_EXIT File=X8CL.:X8A6TSI                              SAT 08/09/97 10:48 Page:170  
      697        1        /*T***********************************************************/
      698        2        /*T*                                                         */
      699        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      700        4        /*T*                                                         */
      701        5        /*T***********************************************************/
      702        6        /*---------*/
      703        7        X8CL$USE_EXIT: PROC ALTRET;
      704        8        /*---------*/
      705        9        %SET INITIALIZE = '0'B;
      706       10        %INCLUDE X8A_LIBCOM;
      707      230          /**/
      708      231    1     IF LIBCOM.USE_PROC
      709      232    1       THEN RETURN;
      710      233    1     ALTRETURN;
      711      234    1   END X8CL$USE_EXIT;
      712      235        %EOD;

PL6.E3A0      #010=X8CL$USE_EXIT File=X8CL.:X8A6TSI                              SAT 08/09/97 10:48 Page:171  
--  Include file information  --

   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$USE_EXIT.

   Procedure X8CL$USE_EXIT requires 6 words for executable code.
   Procedure X8CL$USE_EXIT requires 40 words of local(AUTO) storage.

PL6.E3A0      #010=X8CL$USE_EXIT File=X8CL.:X8A6TSI                              SAT 08/09/97 10:48 Page:172  

 Object Unit name= X8CL$USE_EXIT                              File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:48:41.96 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none    20     24  LIBCOM
    1  LblCom even  none     1      1  DEC_OR_COMMA
    2  LblCom even  none    20     24  IN_TEMP
    3  LblCom even  none     1      1  OVRCHR
    4  LblCom even  none     1      1  SELECT_TIME
    5  LblCom even  none     1      1  NO_ADVANCE_OFFSET
    6  LblCom even  none    18     22  DSPLY_SAVE
    7  LblCom even  none     3      3  D_DATE
    8  LblCom even  none     3      3  D_TIME
    9  LblCom even  none     1      1  D_DAY
   10  LblCom even  none     2      2  C_DATE
   11  LblCom even  none     2      2  C_TIME
   12  LblCom even  none     2      2  C_DAY
   13  LblCom even  none     1      1  RTHOLD2
   14  LblCom even  none     1      1  LTHOLD2
   15  LblCom even  none     1      1  NDX2
   16  LblCom even  none     1      1  IN_LEN
   17   Proc  even  none     6      6  X8CL$USE_EXIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    17      0   yes    yes     yes      Std        0  X8CL$USE_EXIT
PL6.E3A0      #010=X8CL$USE_EXIT File=X8CL.:X8A6TSI                              SAT 08/09/97 10:48 Page:173  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #010=X8CL$USE_EXIT File=X8CL.:X8A6TSI                              SAT 08/09/97 10:48 Page:174  


      697        1        /*T***********************************************************/
      698        2        /*T*                                                         */
      699        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      700        4        /*T*                                                         */
      701        5        /*T***********************************************************/
      702        6        /*---------*/
      703        7        X8CL$USE_EXIT: PROC ALTRET;

      7 17 000000   000000 700200 xent  X8CL$USE_EX* TSX0  ! X66_AUTO_0
        17 000001   000050 000000                    ZERO    40,0

      704        8        /*---------*/
      705        9        %SET INITIALIZE = '0'B;
      706       10        %INCLUDE X8A_LIBCOM;
      707      230          /**/
      708      231    1     IF LIBCOM.USE_PROC

    231 17 000002   000022 234000 0                  SZN     LIBCOM+18
        17 000003   000005 605000 17                 TPL     s:233

      709      232    1       THEN RETURN;

    232 17 000004   000000 702200 xent               TSX2  ! X66_ARET

      710      233    1     ALTRETURN;

    233 17 000005   000000 702200 xent               TSX2  ! X66_AALT
      711      234    1   END X8CL$USE_EXIT;
      712      235        %EOD;

PL6.E3A0      #010=X8CL$USE_EXIT File=X8CL.:X8A6TSI                              SAT 08/09/97 10:48 Page:175  
--  Include file information  --

   X8A_LIBCOM.:X8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure X8CL$USE_EXIT.
PL6.E3A0      #010=X8CL$USE_EXIT File=X8CL.:X8A6TSI                              SAT 08/09/97 10:48 Page:176  

 **** Variables and constants ****

  ****  Section 000 LblCom LIBCOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)   r     1 LIBCOM

  ****  Section 001 LblCom DEC_OR_COMMA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 DEC_OR_COMMA

  ****  Section 002 LblCom IN_TEMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)          1 IN_TEMP

  ****  Section 003 LblCom OVRCHR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 OVRCHR

  ****  Section 004 LblCom SELECT_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 SELECT_TIME

PL6.E3A0      #010=X8CL$USE_EXIT File=X8CL.:X8A6TSI                              SAT 08/09/97 10:48 Page:177  
  ****  Section 005 LblCom NO_ADVANCE_OFFSET

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 NO_ADVANCE_OFFSET

  ****  Section 006 LblCom DSPLY_SAVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(72)          1 DSPLY_SAVE

  ****  Section 007 LblCom D_DATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)          1 D_DATE

  ****  Section 008 LblCom D_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(11)          1 D_TIME

  ****  Section 009 LblCom D_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(3)           1 D_DAY

  ****  Section 010 LblCom C_DATE

PL6.E3A0      #010=X8CL$USE_EXIT File=X8CL.:X8A6TSI                              SAT 08/09/97 10:48 Page:178  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(6)           1 C_DATE

  ****  Section 011 LblCom C_TIME

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(8)           1 C_TIME

  ****  Section 012 LblCom C_DAY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(5)           1 C_DAY

  ****  Section 013 LblCom RTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 RTHOLD2

  ****  Section 014 LblCom LTHOLD2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 LTHOLD2

  ****  Section 015 LblCom NDX2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #010=X8CL$USE_EXIT File=X8CL.:X8A6TSI                              SAT 08/09/97 10:48 Page:179  

     0-0-0/w SBIN              1 NDX2

  ****  Section 016 LblCom IN_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 IN_LEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w SBIN              1 LT                         4-0-0/c CHAR(65)          1 LTHOLD
    46-0-0/w SBIN              1 NDX                       47-0-0/w SBIN              1 NDX3
    25-0-0/c CHAR(65)          1 RTHOLD


   Procedure X8CL$USE_EXIT requires 6 words for executable code.
   Procedure X8CL$USE_EXIT requires 40 words of local(AUTO) storage.

PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:180  
      713        1        /*T***********************************************************/
      714        2        /*T*                                                         */
      715        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      716        4        /*T*                                                         */
      717        5        /*T***********************************************************/
      718        6            %INCLUDE Z9A_FLAGS;
      719       20        /*--------------------*/
      720       21        X8CL$GLOBAL_USE_ENTRY: PROC (USE_RESTORE$)
      721       22        %IF GCOS;
      723       24        %ENDIF;
      724       25                                                 ;
      725       26        /*-------------------*/
      726       27        /*P*
      727       28               NAME: X8CL$GLOBAL_USE_ENTRY
      728       29            PURPOSE: Push stack entry for GLOBAL USE procedure
      729       30        */
      730       31        /*D*
      731       32                   NAME: X8CL$GLOBAL_USE_ENTRY
      732       33                   CALL: CALL X8CL$GLOBAL_USE_ENTRY (USE_RESTORE$);
      733       34                  INPUT: USE_RESTORE$ -- EPTR to routine to restore all USE
      734       35                                         procedure pointers to their state as
      735       36                                         they were before the GLOBAL USE
      736       37                                         procedure was invoked. This entry
      737       38                                         point will need to be called if control
      738       39                                         exits the USE procedure by means of
      739       40                                         EXIT PROGRAM.
      740       41        */
      741       42
      742       43    1       DCL USE_RESTORE$ EPTR;
      743       44
      744       45    1       DCL 1 X9OS$EXIT_BLOCK SYMREF DALIGNED,
      745       46    1             2 REM (0:63) REMEMBER,
      746       47    1             2 ITEM (0:63) REDEF REM,
      747       48    1               3 TYPE SBIN,
      748       49    1               3 PTR$ PTR,
      749       50    1               3 EPTR$ REDEF PTR$ EPTR,
      750       51    1             2 PREV$ PTR,
PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:181  
      751       52    1             2 NEXT$ PTR;
      752       53    1       DCL X9OS$EXIT_INDEX SBIN SYMREF;
      753       54    1       DCL 1 EXIT$BLOCK DALIGNED BASED (EXIT_BLOCK$),
      754       55    1             2 REM (0:63) REMEMBER,
      755       56    1             2 ITEM (0:63) REDEF REM,
      756       57    1               3 TYPE SBIN,
      757       58    1               3 PTR$ PTR,
      758       59    1               3 EPTR$ REDEF PTR$ EPTR,
      759       60    1             2 PREV$ PTR,
      760       61    1             2 NEXT$ PTR;
      761       62    1       DCL EXIT_BLOCK$ PTR;
      762       63    1       DCL I SBIN;
      763       64
      764       65    1       DCL X8CL$FIND_BLOCK ENTRY (2);
      765       66
      766       67        %EJECT;
PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:182  
      767       68    1       EXIT_BLOCK$ = ADDR (X9OS$EXIT_BLOCK);
      768       69    1       I = X9OS$EXIT_INDEX;
      769       70    1       IF X9OS$EXIT_INDEX >= 64 THEN
      770       71    1       EXIT$BLOCK.ITEM.TYPE (I) = 1;
      771       72    1       EXIT$BLOCK.ITEM.EPTR$ (I) = USE_RESTORE$;
      772       73    1       X9OS$EXIT_INDEX = X9OS$EXIT_INDEX + 1;
      773       74    1   END X8CL$GLOBAL_USE_ENTRY;
      774       75        %EOD;

PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:183  
--  Include file information  --

   Z9A_FLAGS.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure X8CL$GLOBAL_USE_ENTRY.

   Procedure X8CL$GLOBAL_USE_ENTRY requires 20 words for executable code.
   Procedure X8CL$GLOBAL_USE_ENTRY requires 6 words of local(AUTO) storage.

PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:184  

 Object Unit name= X8CL$GLOBAL_USE_ENTRY                      File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:48:56.80 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    20     24  X8CL$GLOBAL_USE_ENTRY
    1  RoData even  none     1      1  X8CL$GLOBAL_USE_ENTRY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  X8CL$GLOBAL_USE_ENTRY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     X9OS$EXIT_BLOCK                       X9OS$EXIT_INDEX
PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:185  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:186  


      713        1        /*T***********************************************************/
      714        2        /*T*                                                         */
      715        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      716        4        /*T*                                                         */
      717        5        /*T***********************************************************/
      718        6            %INCLUDE Z9A_FLAGS;
      719       20        /*--------------------*/
      720       21        X8CL$GLOBAL_USE_ENTRY: PROC (USE_RESTORE$)

     21  0 000000   000000 700200 xent  X8CL$GLOBAL* TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

      721       22        %IF GCOS;
      723       24        %ENDIF;
      724       25                                                 ;
      725       26        /*-------------------*/
      726       27        /*P*
      727       28               NAME: X8CL$GLOBAL_USE_ENTRY
      728       29            PURPOSE: Push stack entry for GLOBAL USE procedure
      729       30        */
      730       31        /*D*
      731       32                   NAME: X8CL$GLOBAL_USE_ENTRY
      732       33                   CALL: CALL X8CL$GLOBAL_USE_ENTRY (USE_RESTORE$);
      733       34                  INPUT: USE_RESTORE$ -- EPTR to routine to restore all USE
      734       35                                         procedure pointers to their state as
      735       36                                         they were before the GLOBAL USE
      736       37                                         procedure was invoked. This entry
      737       38                                         point will need to be called if control
      738       39                                         exits the USE procedure by means of
      739       40                                         EXIT PROGRAM.
      740       41        */
      741       42
      742       43    1       DCL USE_RESTORE$ EPTR;
      743       44
      744       45    1       DCL 1 X9OS$EXIT_BLOCK SYMREF DALIGNED,
      745       46    1             2 REM (0:63) REMEMBER,
PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:187  
      746       47    1             2 ITEM (0:63) REDEF REM,
      747       48    1               3 TYPE SBIN,
      748       49    1               3 PTR$ PTR,
      749       50    1               3 EPTR$ REDEF PTR$ EPTR,
      750       51    1             2 PREV$ PTR,
      751       52    1             2 NEXT$ PTR;
      752       53    1       DCL X9OS$EXIT_INDEX SBIN SYMREF;
      753       54    1       DCL 1 EXIT$BLOCK DALIGNED BASED (EXIT_BLOCK$),
      754       55    1             2 REM (0:63) REMEMBER,
      755       56    1             2 ITEM (0:63) REDEF REM,
      756       57    1               3 TYPE SBIN,
      757       58    1               3 PTR$ PTR,
      758       59    1               3 EPTR$ REDEF PTR$ EPTR,
      759       60    1             2 PREV$ PTR,
      760       61    1             2 NEXT$ PTR;
      761       62    1       DCL EXIT_BLOCK$ PTR;
      762       63    1       DCL I SBIN;
      763       64
      764       65    1       DCL X8CL$FIND_BLOCK ENTRY (2);
      765       66
      766       67        %EJECT;
PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:188  
      767       68    1       EXIT_BLOCK$ = ADDR (X9OS$EXIT_BLOCK);

     68  0 000002   000000 236000 1                  LDQ     0
         0 000003   200004 756100                    STQ     EXIT_BLOCK$,,AUTO

      768       69    1       I = X9OS$EXIT_INDEX;

     69  0 000004   000000 235000 xsym               LDA     X9OS$EXIT_INDEX
         0 000005   200005 755100                    STA     I,,AUTO

      769       70    1       IF X9OS$EXIT_INDEX >= 64 THEN

     70  0 000006   000100 115007                    CMPA    64,DL
         0 000007   000014 604000 0                  TMI     s:72

      770       71    1       EXIT$BLOCK.ITEM.TYPE (I) = 1;

     71  0 000010   000001 735000                    ALS     1
         0 000011   000001 236007                    LDQ     1,DL
         0 000012   200004 470500                    LDP0    EXIT_BLOCK$,,AUTO
         0 000013   000000 756105                    STQ     0,AL,PR0

      771       72    1       EXIT$BLOCK.ITEM.EPTR$ (I) = USE_RESTORE$;

     72  0 000014   200005 235100                    LDA     I,,AUTO
         0 000015   000001 735000                    ALS     1
         0 000016   200003 470500                    LDP0    @USE_RESTORE$,,AUTO
         0 000017   000000 236100                    LDQ     0,,PR0
         0 000020   200004 471500                    LDP1    EXIT_BLOCK$,,AUTO
         0 000021   100001 756105                    STQ     1,AL,PR1

      772       73    1       X9OS$EXIT_INDEX = X9OS$EXIT_INDEX + 1;

     73  0 000022   000000 054000 xsym               AOS     X9OS$EXIT_INDEX

      773       74    1   END X8CL$GLOBAL_USE_ENTRY;

PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:189  
     74  0 000023   000000 702200 xent               TSX2  ! X66_ARET
      774       75        %EOD;

PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:190  
--  Include file information  --

   Z9A_FLAGS.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure X8CL$GLOBAL_USE_ENTRY.
PL6.E3A0      #011=X8CL$GLOBAL_USE_ENTRY File=X8CL.:X8A6TSI                      SAT 08/09/97 10:48 Page:191  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @USE_RESTORE$              4-0-0/w PTR         r     1 EXIT_BLOCK$
     5-0-0/w SBIN        r     1 I                         *0-0-0/w EPTR        r     1 USE_RESTORE$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4680)  r     1 X9OS$EXIT_BLOCK            0-0-0/w SBIN        r     1 X9OS$EXIT_INDEX

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4680)  r     1 EXIT$BLOCK


   Procedure X8CL$GLOBAL_USE_ENTRY requires 20 words for executable code.
   Procedure X8CL$GLOBAL_USE_ENTRY requires 6 words of local(AUTO) storage.

PL6.E3A0      #012=X8CL$GLOBAL_USE_EXIT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:49 Page:192  
      775        1        /*T***********************************************************/
      776        2        /*T*                                                         */
      777        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      778        4        /*T*                                                         */
      779        5        /*T***********************************************************/
      780        6        /*------------------*/
      781        7        X8CL$GLOBAL_USE_EXIT: PROC;
      782        8        /*------------------*/
      783        9        /*P*
      784       10               NAME: X8CL$GLOBAL_USE_EXIT
      785       11            PURPOSE: Pop stack entry
      786       12        */
      787       13        /*D*
      788       14                   NAME: X8CL$GLOBAL_USE_EXIT
      789       15                   CALL: CALL X8CL$GLOBAL_USE_EXIT;
      790       16            DESCRIPTION: On reaching the end of a GLOBAL USE procedure, pop a
      791       17                         stack entry as it is now known that the entry will not
      792       18                         be needed because of an EXIT PROGRAM statement.
      793       19        */
      794       20
      795       21    1       DCL X9OS$EXIT_INDEX SBIN SYMREF;
      796       22
      797       23    1       X9OS$EXIT_INDEX = X9OS$EXIT_INDEX - 1;
      798       24    1   END X8CL$GLOBAL_USE_EXIT;
      799       25        %EOD;

PL6.E3A0      #012=X8CL$GLOBAL_USE_EXIT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:49 Page:193  
      No diagnostics issued in procedure X8CL$GLOBAL_USE_EXIT.

   Procedure X8CL$GLOBAL_USE_EXIT requires 5 words for executable code.
   Procedure X8CL$GLOBAL_USE_EXIT requires 4 words of local(AUTO) storage.

PL6.E3A0      #012=X8CL$GLOBAL_USE_EXIT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:49 Page:194  

 Object Unit name= X8CL$GLOBAL_USE_EXIT                       File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:49:09.64 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     5      5  X8CL$GLOBAL_USE_EXIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  X8CL$GLOBAL_USE_EXIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     X9OS$EXIT_INDEX
PL6.E3A0      #012=X8CL$GLOBAL_USE_EXIT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:49 Page:195  


      775        1        /*T***********************************************************/
      776        2        /*T*                                                         */
      777        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      778        4        /*T*                                                         */
      779        5        /*T***********************************************************/
      780        6        /*------------------*/
      781        7        X8CL$GLOBAL_USE_EXIT: PROC;

      7  0 000000   000000 700200 xent  X8CL$GLOBAL* TSX0  ! X66_AUTO_0
         0 000001   000004 000000                    ZERO    4,0

      782        8        /*------------------*/
      783        9        /*P*
      784       10               NAME: X8CL$GLOBAL_USE_EXIT
      785       11            PURPOSE: Pop stack entry
      786       12        */
      787       13        /*D*
      788       14                   NAME: X8CL$GLOBAL_USE_EXIT
      789       15                   CALL: CALL X8CL$GLOBAL_USE_EXIT;
      790       16            DESCRIPTION: On reaching the end of a GLOBAL USE procedure, pop a
      791       17                         stack entry as it is now known that the entry will not
      792       18                         be needed because of an EXIT PROGRAM statement.
      793       19        */
      794       20
      795       21    1       DCL X9OS$EXIT_INDEX SBIN SYMREF;
      796       22
      797       23    1       X9OS$EXIT_INDEX = X9OS$EXIT_INDEX - 1;

     23  0 000002   000001 336007                    LCQ     1,DL
         0 000003   000000 056000 xsym               ASQ     X9OS$EXIT_INDEX

      798       24    1   END X8CL$GLOBAL_USE_EXIT;

     24  0 000004   000000 702200 xent               TSX2  ! X66_ARET
      799       25        %EOD;

PL6.E3A0      #012=X8CL$GLOBAL_USE_EXIT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:49 Page:196  
      No diagnostics issued in procedure X8CL$GLOBAL_USE_EXIT.
PL6.E3A0      #012=X8CL$GLOBAL_USE_EXIT File=X8CL.:X8A6TSI                       SAT 08/09/97 10:49 Page:197  

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 X9OS$EXIT_INDEX


   Procedure X8CL$GLOBAL_USE_EXIT requires 5 words for executable code.
   Procedure X8CL$GLOBAL_USE_EXIT requires 4 words of local(AUTO) storage.

PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:198  
      800        1        /*T***********************************************************/
      801        2        /*T*                                                         */
      802        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      803        4        /*T*                                                         */
      804        5        /*T***********************************************************/
      805        6            %INCLUDE Z9A_FLAGS;
      806       20        /*-----------*/
      807       21        X8CL$FIND_BLOCK: PROC (I, EXIT_BLOCK$)
      808       22        /*-----------*/
      809       23                              %IF GCOS;
      811       25                              %ENDIF;
      812       26                              ;
      813       27        /*P*
      814       28               NAME: X8CL$FIND_BLOCK
      815       29            PURPOSE: Find the current 64-entry stack block.
      816       30        */
      817       31        /*D*       NAME: X8CL$FIND_BLOCK
      818       32                   CALL: CALL X8CL$FIND_BLOCK (I, EXIT_BLOCK$);
      819       33                  INPUT: I - Number of desired stack entry
      820       34                         EXIT_BLOCK$ -- Pointer to first 64-entry block
      821       35                 OUTPUT: EXIT_BLOCK$ -- Pointer to desired block
      822       36            DESCRIPTION: If the desired entry is not in the first block, this
      823       37                         subroutine is called to walk the chain of blocks and
      824       38                         find the desired one. If the desired stack entry is to
      825       39                         be in a block that does not yet exist then create the
      826       40                         block. This is necessary so that if there is an EXIT
      827       41                         PROGRAM statement in DECLARATIVES, it may be able to
      828       42                         exit all USE procedures that are currently active as
      829       43                         well as the program.
      830       44        */
      831       45    1   DCL I SBIN;
      832       46    1   DCL EXIT_BLOCK$ PTR;
      833       47    1       DCL 1 EXIT$BLOCK DALIGNED BASED (EXIT_BLOCK$),
      834       48    1             2 REM (0:63) REMEMBER,
      835       49    1             2 ITEM (0:63) REDEF REM,
      836       50    1               3 TYPE SBIN,
      837       51    1               3 PTR$ PTR,
PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:199  
      838       52    1               3 EPTR$ REDEF PTR$ EPTR,
      839       53    1             2 PREV$ PTR,
      840       54    1             2 NEXT$ PTR;
      841       55    1       DCL X9MA$ALLOCATE ENTRY (2);
      842       56        %EJECT;
PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:200  
      843       57    2       DO WHILE I > 64;
      844       58    2         EXIT_BLOCK$ = EXIT$BLOCK.NEXT$;
      845       59    2         I = I - 64;
      846       60    2       END;
      847       61    1       IF I = 64 THEN
      848       62    2         DO;
      849       63    2           I = 0;
      850       64    2           IF EXIT$BLOCK.NEXT$ = ADDR (NIL) THEN
      851       65    3             DO;
      852       66    3               CALL X9MA$ALLOCATE (EXIT$BLOCK.NEXT$, SIZEC (EXIT$BLOCK));
      853       67    3               EXIT$BLOCK.NEXT$ -> EXIT$BLOCK.PREV$ = EXIT_BLOCK$;
      854       68    3             END; /* EXIT$BLOCK.NEXT$ = ADDR (NIL) */
      855       69    2           EXIT_BLOCK$ = EXIT$BLOCK.NEXT$;
      856       70    2         END; /* IF I = 64 */
      857       71    1   END X8CL$FIND_BLOCK;
      858       72        %EJECT;
PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:201  

PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:202  
--  Include file information  --

   Z9A_FLAGS.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure X8CL$FIND_BLOCK.

   Procedure X8CL$FIND_BLOCK requires 44 words for executable code.
   Procedure X8CL$FIND_BLOCK requires 8 words of local(AUTO) storage.

    No errors detected in file X8CL.:X8A6TSI    .

PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:203  

 Object Unit name= X8CL$FIND_BLOCK                            File name= X8CL.:X8A6TOU
 UTS= AUG 09 '97 10:49:17.76 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    44     54  X8CL$FIND_BLOCK
    1  RoData even  none     4      4  X8CL$FIND_BLOCK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  X8CL$FIND_BLOCK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 X9MA$ALLOCATE
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:204  


      800        1        /*T***********************************************************/
      801        2        /*T*                                                         */
      802        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      803        4        /*T*                                                         */
      804        5        /*T***********************************************************/
      805        6            %INCLUDE Z9A_FLAGS;
      806       20        /*-----------*/
      807       21        X8CL$FIND_BLOCK: PROC (I, EXIT_BLOCK$)

     21  0 000000   000000 700200 xent  X8CL$FIND_B* TSX0  ! X66_AUTO_2
         0 000001   000010 000002                    ZERO    8,2

      808       22        /*-----------*/
      809       23                              %IF GCOS;
      811       25                              %ENDIF;
      812       26                              ;
      813       27        /*P*
      814       28               NAME: X8CL$FIND_BLOCK
      815       29            PURPOSE: Find the current 64-entry stack block.
      816       30        */
      817       31        /*D*       NAME: X8CL$FIND_BLOCK
      818       32                   CALL: CALL X8CL$FIND_BLOCK (I, EXIT_BLOCK$);
      819       33                  INPUT: I - Number of desired stack entry
      820       34                         EXIT_BLOCK$ -- Pointer to first 64-entry block
      821       35                 OUTPUT: EXIT_BLOCK$ -- Pointer to desired block
      822       36            DESCRIPTION: If the desired entry is not in the first block, this
      823       37                         subroutine is called to walk the chain of blocks and
      824       38                         find the desired one. If the desired stack entry is to
      825       39                         be in a block that does not yet exist then create the
      826       40                         block. This is necessary so that if there is an EXIT
      827       41                         PROGRAM statement in DECLARATIVES, it may be able to
      828       42                         exit all USE procedures that are currently active as
      829       43                         well as the program.
      830       44        */
      831       45    1   DCL I SBIN;
      832       46    1   DCL EXIT_BLOCK$ PTR;
PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:205  
      833       47    1       DCL 1 EXIT$BLOCK DALIGNED BASED (EXIT_BLOCK$),
      834       48    1             2 REM (0:63) REMEMBER,
      835       49    1             2 ITEM (0:63) REDEF REM,
      836       50    1               3 TYPE SBIN,
      837       51    1               3 PTR$ PTR,
      838       52    1               3 EPTR$ REDEF PTR$ EPTR,
      839       53    1             2 PREV$ PTR,
      840       54    1             2 NEXT$ PTR;
      841       55    1       DCL X9MA$ALLOCATE ENTRY (2);
      842       56        %EJECT;
PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:206  
      843       57    2       DO WHILE I > 64;

     57  0 000002   200003 470500                    LDP0    @I,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000100 115007                    CMPA    64,DL
         0 000005   000020 604400 0                  TMOZ    s:61

      844       58    2         EXIT_BLOCK$ = EXIT$BLOCK.NEXT$;

     58  0 000006   200004 470500                    LDP0    @EXIT_BLOCK$,,AUTO
         0 000007   000000 471500                    LDP1    0,,PR0
         0 000010   100201 236100                    LDQ     129,,PR1
         0 000011   000000 756100                    STQ     0,,PR0

      845       59    2         I = I - 64;

     59  0 000012   200003 471500                    LDP1    @I,,AUTO
         0 000013   000100 336007                    LCQ     64,DL
         0 000014   100000 056100                    ASQ     0,,PR1

      846       60    2       END;

     60  0 000015   100000 235100                    LDA     0,,PR1
         0 000016   000100 115007                    CMPA    64,DL
         0 000017   000006 605400 0                  TPNZ    s:58

      847       61    1       IF I = 64 THEN

     61  0 000020   200003 470500                    LDP0    @I,,AUTO
         0 000021   000000 235100                    LDA     0,,PR0
         0 000022   000100 115007                    CMPA    64,DL
         0 000023   000053 601000 0                  TNZ     s:71

      848       62    2         DO;

      849       63    2           I = 0;

PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:207  
     63  0 000024   000000 450100                    STZ     0,,PR0

      850       64    2           IF EXIT$BLOCK.NEXT$ = ADDR (NIL) THEN

     64  0 000025   200004 471500                    LDP1    @EXIT_BLOCK$,,AUTO
         0 000026   100000 473500                    LDP3    0,,PR1
         0 000027   300201 236100                    LDQ     129,,PR3
         0 000030   000000 116000 1                  CMPQ    0
         0 000031   000047 601000 0                  TNZ     s:69

      851       65    3             DO;

      852       66    3               CALL X9MA$ALLOCATE (EXIT$BLOCK.NEXT$, SIZEC (EXIT$BLOCK));

     66  0 000032   000003 236000 1                  LDQ     3
         0 000033   200007 756100                    STQ     @EXIT_BLOCK$+3,,AUTO
         0 000034   300201 634500                    EPPR4   129,,PR3
         0 000035   200006 454500                    STP4    @EXIT_BLOCK$+2,,AUTO
         0 000036   200006 630500                    EPPR0   @EXIT_BLOCK$+2,,AUTO
         0 000037   000001 631400 1                  EPPR1   1
         0 000040   000000 701000 xent               TSX1    X9MA$ALLOCATE
         0 000041   000000 011000                    NOP     0

      853       67    3               EXIT$BLOCK.NEXT$ -> EXIT$BLOCK.PREV$ = EXIT_BLOCK$;

     67  0 000042   200004 470500                    LDP0    @EXIT_BLOCK$,,AUTO
         0 000043   000000 471500                    LDP1    0,,PR0
         0 000044   100201 473500                    LDP3    129,,PR1
         0 000045   000000 236100                    LDQ     0,,PR0
         0 000046   300200 756100                    STQ     128,,PR3

      854       68    3             END; /* EXIT$BLOCK.NEXT$ = ADDR (NIL) */

      855       69    2           EXIT_BLOCK$ = EXIT$BLOCK.NEXT$;

     69  0 000047   200004 470500                    LDP0    @EXIT_BLOCK$,,AUTO
         0 000050   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:208  
         0 000051   100201 236100                    LDQ     129,,PR1
         0 000052   000000 756100                    STQ     0,,PR0

      856       70    2         END; /* IF I = 64 */

      857       71    1   END X8CL$FIND_BLOCK;

     71  0 000053   000000 702200 xent               TSX2  ! X66_ARET
      858       72        %EJECT;
PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:209  

PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:210  
--  Include file information  --

   Z9A_FLAGS.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure X8CL$FIND_BLOCK.
PL6.E3A0      #013=X8CL$FIND_BLOCK File=X8CL.:X8A6TSI                            SAT 08/09/97 10:49 Page:211  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @EXIT_BLOCK$               3-0-0/w PTR         r     1 @I
    *0-0-0/w PTR         r     1 EXIT_BLOCK$               *0-0-0/w SBIN        r     1 I

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4680)  r     1 EXIT$BLOCK


   Procedure X8CL$FIND_BLOCK requires 44 words for executable code.
   Procedure X8CL$FIND_BLOCK requires 8 words of local(AUTO) storage.

    No errors detected in file X8CL.:X8A6TSI    .
