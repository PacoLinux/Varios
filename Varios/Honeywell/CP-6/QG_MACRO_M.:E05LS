

15:13 JUL 28 '97 QG_MACRO_M.:E05SI                                         1    
    1      /*M* QG_MACRO_M:  Macros for VDO-buffering library services.  */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*F* NAME:  QGB_INCLUDE Files
    8      The include file necessary to make use of the QGB services
    9      is located in the :LIBRARY account.  It is a PL-6 include file
   10      and contains MACRO and ENTRY definitions which are used to interface
   11      to the services.
   12      ..::TB "INCLUDE File for QGB Services\File\#15\Contents"
   13      ..::IT "QG_MACRO_M"
   14      QGB_PARAM macro which defines the parameter block that is passed to
   15      the QGB services.
   16
   17      QGB_ENTRIES macro which defines entry points for QGB services.
   18      ..::TB
   19      */
   20      /*F* NAME:  QGB_Linking Information
   21      The QGB services are FEP-resident routines that are not present
   22      in the :SHARED_LCP6_SYSTEM shared library.  They reside in the
   23      QGB$BUFFER_VDO object unit in the :LIBRARY account, and must be
   24      explicitly linked with the user's program with FEPLINK:
   25
   26      }  !FEPLINK my_ou, QGB$BUFFER_VDO.:LIBRARY OVER my_ru (options)
   27      */
   28      /*F* NAME:  QGB_PARAM
   29      The QGB_PARAM macro generates a structure that is passed to the QGB
   30      services.  This structure locates the buffer passed to the QGB$
   31      services and contains context information used by the
   32      library services.  Additional fields described below may be checked
   33      by the caller of the QGB services.  The caller should check these
   34      fields because the QGB services are unable to store this information
   35      in the normal places in the DCB and TCB.
   36      */
   37
15:13 JUL 28 '97 QG_MACRO_M.:E05SI                                         2    
   38        %MACRO QGB_PARAM ( NAME = QGB_PARAM,
   39                           STCLASS = STCLASS,
   40                           BBUF = NIL );
   41          %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   42          %IF (SUBSTR(STR,0,6)='STATIC')
   43           OR (SUBSTR(STR,0,8)='CONSTANT')
   44           OR (SUBSTR(STR,0,3)='EXT');
   45            %LSET INIT=CHARTEXT('INIT');
   46          %ELSE;
   47            %LSET INIT=CHARTEXT('/*');
   48          %ENDIF;
   49
   50        DCL 1 NAME STCLASS ALIGNED,
   51      /*K* BBUF_ - VECTOR.
   52      Contains the size and location of the blocking buffer to be used
   53      by the VDO packing and unpacking routines.  The buffer must be
   54      allocated by the caller, and this field must be initialized, before
   55      any QGB$ routines may be called.  A size of one or two FEP pages
   56      is recommended.  The keyword used to initialize this field is BBUF.
   57      */
   58            2 BBUF_ VECTOR %INIT(VECTOR(BBUF))%CHARTEXT('/**/'),
   59            2 BBUF_OFFSET$ CPTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   60      /*K* ERR - Contains a VLP_ERRCODE structure.  This portion of the
   61      structure corresponds to G$TCB$ -> G$TCB.ALT$ -> G$EXCFR.TRLR.ERR.
   62      */
   63            %VLP_ERRCODE ( FPTN = ERR,
   64                           STCLASS = STCLASS,
   65                           LVL = 2,
   66                           LAST = "," );
   67            2 MSG$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   68            2 MSGC$ REDEF MSG$ CPTR,
   69            2 MSGSZ SBIN WORD %INIT(0)%CHARTEXT('/**/'),
   70            2 DVE CALIGNED,
   71              3 DVBYTE UNAL,
   72                4 BP BIT(1) %INIT('1'B)%CHARTEXT('/**/'),
   73                4 VFC BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   74                4 REREAD REDEF VFC BIT(1),
15:13 JUL 28 '97 QG_MACRO_M.:E05SI                                         3    
   75                4 BIN BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   76                4 TRANS BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   77                4 RRR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   78                4 NODAT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   79                4 DCBHDR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   80                4 CONT BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   81      /*K* DVE.EOMCHAR - VALUE-CHAR(1).
   82      When the VDO returned to the caller corresponds to the field in
   83      which the activation character was typed, EOMCHAR is filled in with
   84      the activation character; otherwise, QGB_PARAM.EOM_EOR is set. */
   85              3 EOMCHAR CHAR(1) CALIGNED %INIT(BITASC('501'O))%CHARTEXT('/**/'),
   86              3 VFC REDEF EOMCHAR CHAR(1) CALIGNED,
   87            2 EOFNONE BIT(1) UNAL %INIT('0'B)%CHARTEXT('/**/'),
   88            2 EOM_EOR BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   89            2 CURRENTLY_READING BIT(1) %INIT('0'B)%CHARTEXT('/**/'),
   90            2 * BIT(5) UNAL %INIT('0'B)%CHARTEXT('/**/'),
   91            2 IP$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   92            2 UHDR$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   93            2 UHDRC$ REDEF UHDR$ CPTR,
   94            2 UHDRSZ UBIN %INIT(0)%CHARTEXT('/**/'),
   95            2 MRKTYP UBIN BYTE UNAL %INIT(0)%CHARTEXT('/**/'),
   96            2 STR UBIN BYTE UNAL %INIT(1)%CHARTEXT('/**/'),
   97            2 V$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   98            2 KEY$ PTR %INIT(ADDR(NIL))%CHARTEXT('/**/'),
   99            2 VSZ UBIN %INIT(0)%CHARTEXT('/**/'),
  100      /*K* FLDID - VALUE-UBIN.
  101      Contains the field ID reported by the most recent operation for an
  102      ORG=FORM DCB.  It is the same as that returned in KEY if KEYTYPE=FLDID,
  103      but is always returned here.  This is particularly useful for operations
  104      like M$DCLFLD that have no provision for returning a key.
  105      */
  106            2 FLDID UBIN %INIT(0)%CHARTEXT('/**/'),
  107      /*K* ACTPOS - VALUE-DEC(0-32767).
  108      Indicates the position in the record at which activation occurred.
  109      The first character of the record is at position one.  A value of
  110      zero means that the activation occurred at the end of the record.
  111      */
15:13 JUL 28 '97 QG_MACRO_M.:E05SI                                         4    
  112            2 ACTPOS UBIN %INIT(0)%CHARTEXT('/**/'),
  113      /*K* ARS - VALUE-UBIN.
  114      Contains the actual record size read (in bytes).
  115      */
  116            2 ARS UBIN %INIT(0)%CHARTEXT('/**/'),
  117            2 KEYTYPE UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/'),
  118            2 KEYSZ UBIN BYTE CALIGNED %INIT(0)%CHARTEXT('/**/');
  119
  120        %MEND;
  121
  122        %MACRO QGB_ENTRIES;
  123
  124        DCL QGB$OPEN ENTRY (2) ALTRET;
  125        DCL QGB$CLOSE ENTRY (2) ALTRET;
  126        DCL QGB$DCLFLD ENTRY (2) ALTRET;
  127        DCL QGB$MDFFLD ENTRY (2) ALTRET;
  128        DCL QGB$SLCFLD ENTRY (2) ALTRET;
  129        DCL QGB$RLSFLD ENTRY (2) ALTRET;
  130        DCL QGB$ERASE ENTRY (2) ALTRET;
  131        DCL QGB$WRITE ENTRY (2) ALTRET;
  132        DCL QGB$READ ENTRY (2) ALTRET;
  133        DCL QGB$DEVICE ENTRY (2) ALTRET;
  134        DCL QGB$FLUSH ENTRY (2) ALTRET;
  135
  136        %MEND;

