VERSION A01

PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:1    
        1        1        /*M*    XSC$ACSE        ISO ACSE 'layer' (part of Application layer)    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*F*    NAME:   XSC$COMMINIT
        9        9
       10       10                XSC$COMMINIT is called to set up a connection path through the
       11       11                layers.  The connection path is a set of connection contexts plus
       12       12                a DCB.  The DCB used for a connection is either the library-supplied
       13       13                M$XSS DCB or one allocated by the application before calling
       14       14                XSC$COMMINIT.
       15       15        */
       16       16        XSC$COMMINIT: PROC( CCB) ALTRET;
       17       17        %INCLUDE B_SEGIDS_C;
       18      556        %INCLUDE B$JIT_C;
       19      870            %B$JIT0;
       20      959            %U$JIT1X;
       21      962            %M$JIT2;
       22      972            %F$JIT3X;
       23      975            %S$JIT4X;
       24      978            %J$JIT5X;
       25      981            %A$JIT6X;
       26      984        %INCLUDE XSC_ACSE_E;
       27     1062        %INCLUDE XSC_ACSE_M;
       28     1371            %XSC_PRIMITIVES( STCLASS="CONSTANT SYMDEF");  /* const ACSE fpts here */
       29     1684        %INCLUDE K_ADDRESS_M;
       30     2187        %INCLUDE XSC_COMMON_M;
       31     2840            %XSC$CCB( NAME=CCB, STCLASS="");
       32     3137            %XSC$ADDRESS( NAME=XSC_SOURCE, STCLASS="STATIC SYMDEF");
       33     3420            %XSC$ADDRESS( NAME=XSC_TARGET, STCLASS="STATIC SYMDEF");
       34     3703        %INCLUDE XSC_INTERNAL_E;
       35     3791        %INCLUDE XSC_INTERNAL_M;
       36     4136            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( CTX$)");
       37     4182        %INCLUDE UM_CP6;
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:2    
       38     5034        %MACRO ERRORDEF( NAME=XSC_ERROR, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
       39     5035                         ERR#=0, SEV=0);
       40     5036            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
       41     5037                          MON='0'B, ERR#=ERR#, SEV=SEV);
       42     5038        %MEND;
       43     5039        %INCLUDE XSC_PERR_C;
       44     5116            %ERRORDEF( NAME=XSC_E$RDONLYCCB, ERR#=%E$RDONLYCCB);
       45     5164            /*E*  ERROR:  XSC-E$RDONLYCCB-0
       46     5165                MESSAGE:  CCB is read-only; must be writeable.
       47     5166            */
       48     5167
       49     5168    1       DCL XSC$CTXPTR ENTRY(2) ALTRET;
       50     5169    1       DCL XSC$GETCTX ENTRY(2) ALTRET;
       51     5170    1       DCL XSC$RELCTX ENTRY(1) ALTRET;
       52     5171    1       DCL XSC$PRECV ENTRY(1) ALTRET;
       53     5172    1       DCL XSP$COMMINIT ENTRY(1) ALTRET;
       54     5173    1       DCL XSP$COMMTERM ENTRY(1) ALTRET;
       55     5174    1       DCL XSS$SCREECH ENTRY(1);
       56     5175
       57     5176    1       DCL B$JIT$ PTR SYMREF;
       58     5177
       59     5178    1       DCL CTX$ PTR;
       60     5179    1       DCL CCID SBIN;
       61     5180    1       DCL TEMP REDEF CCID SBIN;
       62     5181    1       DCL P PTR;
       63     5182    1       DCL 1 PX REDEF P,
       64     5183    1            2 OFFSET UBIN(18) UNAL,
       65     5184    1            2 * BIT(6) UNAL,
       66     5185    1            2 SEGID BIT(12) UNAL;
       67     5186        %EJECT;
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:3    
       68     5187    1       P = ADDR( CCB);
       69     5188    2       IF PX.SEGID = %ISSID THEN DO;
       70     5189    2           TEMP = 64 + PX.OFFSET / 1024;  /* page number of CCB's page */
       71     5190    3           IF TEMP >= B$JIT.PLL AND TEMP <= B$JIT.PUL THEN DO;
       72     5191                    /* user's CCB was allocated in constant storage */
       73     5192    3               IF CCB.ERROR = XSC_E$RDONLYCCB THEN
       74     5193    3                   ALTRETURN;
       75     5194    3               CALL XSS$SCREECH( XSC_E$RDONLYCCB);
       76     5195    3               END;
       77     5196    2           END;
       78     5197    1       CCB.ERROR = '0'B;
       79     5198            /* have Presentation initialize first */
       80     5199    1       CCB.PRES$ = ENTADDR( XSC$PRECV);
       81     5200    1       CALL XSP$COMMINIT( CCB) ALTRET( OOPS);
       82     5201    1       CCID = CCB.LCID;
       83     5202            /* allocate space for ACSE connection context */
       84     5203    1       CALL XSC$GETCTX( CTX$, CCID)
       85     5204    2       WHENALTRETURN DO;
       86     5205    2   OOPS:
       87     5206    2           ALTRETURN;
       88     5207    2           END;
       89     5208    1       IF CCB.FLAGS.CVALID THEN
       90     5209    1           CCTX.ENTRY$ = CCB.ACSE$;  /* save handler proc address */
       91     5210    1       RETURN;
       92     5211        %EJECT;
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:4    
       93     5212    1   XSC$COMMTERM: ENTRY( CCB) ALTRET;
       94     5213
       95     5214            /* point at ACSE connection context */
       96     5215    1       CCID = CCB.LCID;
       97     5216    1       CALL XSC$CTXPTR( CCID, CTX$) ALTRET( OOPS);
       98     5217            /* call Presentation to terminate */
       99     5218    1       CALL XSP$COMMTERM( CCB) ALTRET( OOPS);
      100     5219            /* release ACSE connection context */
      101     5220    1       CALL XSC$RELCTX( CTX$)
      102     5221    2       WHENALTRETURN DO;
      103     5222    2           END;
      104     5223    1       RETURN;
      105     5224
      106     5225    1       END XSC$COMMINIT;
      107     5226        %EOD;

PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:5    
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   B$JIT_C.:LIB_E05  is referenced.
   B_SEGIDS_C.:LIB_E05  is referenced.
      No diagnostics issued in procedure XSC$COMMINIT.

   Procedure XSC$COMMINIT requires 87 words for executable code.
   Procedure XSC$COMMINIT requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:6    

 Object Unit name= XSC$COMMINIT                               File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:51:08.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     38     46  XSC$COMMINIT
    1   Data  even  none   152    230  XSC$COMMINIT
    2   Proc  even  none    87    127  XSC$COMMINIT
    3  RoData even  none     3      3  XSC$COMMINIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  XSC$COMMINIT
     2     75          yes     yes      Std        1  XSC$COMMTERM

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  XSC_GENERIC                        0     16  XSC_ASSOCIATE
    0     34  XSC_P_ABORT                        0     37  XSC_RELEASE
    0     42  XSC_U_ABORT                        1      0  XSC_SOURCE
    1    114  XSC_TARGET                         0     45  XSC_E$RDONLYCCB
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:7    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 XSS$SCREECH
 yes     yes           Std       1 XSC$PRECV
 yes     yes           Std       1 XSP$COMMINIT
 yes     yes           Std       2 XSC$GETCTX
 yes     yes           Std       1 XSP$COMMTERM
 yes     yes           Std       1 XSC$RELCTX
 yes     yes           Std       2 XSC$CTXPTR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:8    


        1        1        /*M*    XSC$ACSE        ISO ACSE 'layer' (part of Application layer)    */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*F*    NAME:   XSC$COMMINIT
        9        9
       10       10                XSC$COMMINIT is called to set up a connection path through the
       11       11                layers.  The connection path is a set of connection contexts plus
       12       12                a DCB.  The DCB used for a connection is either the library-supplied
       13       13                M$XSS DCB or one allocated by the application before calling
       14       14                XSC$COMMINIT.
       15       15        */
       16       16        XSC$COMMINIT: PROC( CCB) ALTRET;

     16  2 000000   000000 700200 xent  XSC$COMMINIT TSX0  ! X66_AUTO_1
         2 000001   000012 000001                    ZERO    10,1

       17       17        %INCLUDE B_SEGIDS_C;
       18      556        %INCLUDE B$JIT_C;
       19      870            %B$JIT0;
       20      959            %U$JIT1X;
       21      962            %M$JIT2;
       22      972            %F$JIT3X;
       23      975            %S$JIT4X;
       24      978            %J$JIT5X;
       25      981            %A$JIT6X;
       26      984        %INCLUDE XSC_ACSE_E;
       27     1062        %INCLUDE XSC_ACSE_M;
       28     1371            %XSC_PRIMITIVES( STCLASS="CONSTANT SYMDEF");  /* const ACSE fpts here */
       29     1684        %INCLUDE K_ADDRESS_M;
       30     2187        %INCLUDE XSC_COMMON_M;
       31     2840            %XSC$CCB( NAME=CCB, STCLASS="");
       32     3137            %XSC$ADDRESS( NAME=XSC_SOURCE, STCLASS="STATIC SYMDEF");
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:9    
       33     3420            %XSC$ADDRESS( NAME=XSC_TARGET, STCLASS="STATIC SYMDEF");
       34     3703        %INCLUDE XSC_INTERNAL_E;
       35     3791        %INCLUDE XSC_INTERNAL_M;
       36     4136            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( CTX$)");
       37     4182        %INCLUDE UM_CP6;
       38     5034        %MACRO ERRORDEF( NAME=XSC_ERROR, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
       39     5035                         ERR#=0, SEV=0);
       40     5036            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
       41     5037                          MON='0'B, ERR#=ERR#, SEV=SEV);
       42     5038        %MEND;
       43     5039        %INCLUDE XSC_PERR_C;
       44     5116            %ERRORDEF( NAME=XSC_E$RDONLYCCB, ERR#=%E$RDONLYCCB);
       45     5164            /*E*  ERROR:  XSC-E$RDONLYCCB-0
       46     5165                MESSAGE:  CCB is read-only; must be writeable.
       47     5166            */
       48     5167
       49     5168    1       DCL XSC$CTXPTR ENTRY(2) ALTRET;
       50     5169    1       DCL XSC$GETCTX ENTRY(2) ALTRET;
       51     5170    1       DCL XSC$RELCTX ENTRY(1) ALTRET;
       52     5171    1       DCL XSC$PRECV ENTRY(1) ALTRET;
       53     5172    1       DCL XSP$COMMINIT ENTRY(1) ALTRET;
       54     5173    1       DCL XSP$COMMTERM ENTRY(1) ALTRET;
       55     5174    1       DCL XSS$SCREECH ENTRY(1);
       56     5175
       57     5176    1       DCL B$JIT$ PTR SYMREF;
       58     5177
       59     5178    1       DCL CTX$ PTR;
       60     5179    1       DCL CCID SBIN;
       61     5180    1       DCL TEMP REDEF CCID SBIN;
       62     5181    1       DCL P PTR;
       63     5182    1       DCL 1 PX REDEF P,
       64     5183    1            2 OFFSET UBIN(18) UNAL,
       65     5184    1            2 * BIT(6) UNAL,
       66     5185    1            2 SEGID BIT(12) UNAL;
       67     5186        %EJECT;
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:10   
       68     5187    1       P = ADDR( CCB);

   5187  2 000002   200003 236100                    LDQ     @CCB,,AUTO
         2 000003   200006 756100                    STQ     P,,AUTO

       69     5188    2       IF PX.SEGID = %ISSID THEN DO;

   5188  2 000004   200006 236100                    LDQ     P,,AUTO
         2 000005   007777 376007                    ANQ     4095,DL
         2 000006   006000 116007                    CMPQ    3072,DL
         2 000007   000037 601000 2                  TNZ     s:5197

       70     5189    2           TEMP = 64 + PX.OFFSET / 1024;  /* page number of CCB's page */

   5189  2 000010   200006 236100                    LDQ     P,,AUTO
         2 000011   000022 772000                    QRL     18
         2 000012   000012 772000                    QRL     10
         2 000013   000100 036007                    ADLQ    64,DL
         2 000014   200005 756100                    STQ     CCID,,AUTO

       71     5190    3           IF TEMP >= B$JIT.PLL AND TEMP <= B$JIT.PUL THEN DO;

   5190  2 000015   000000 470400 xsym               LDP0    B$JIT$
         2 000016   000176 236100                    LDQ     126,,PR0
         2 000017   000022 772000                    QRL     18
         2 000020   200005 116100                    CMPQ    CCID,,AUTO
         2 000021   000037 605400 2                  TPNZ    s:5197
         2 000022   000176 236100                    LDQ     126,,PR0
         2 000023   777777 376007                    ANQ     -1,DL
         2 000024   200005 116100                    CMPQ    CCID,,AUTO
         2 000025   000037 604000 2                  TMI     s:5197

       72     5191                    /* user's CCB was allocated in constant storage */
       73     5192    3               IF CCB.ERROR = XSC_E$RDONLYCCB THEN

   5192  2 000026   200003 471500                    LDP1    @CCB,,AUTO
         2 000027   100001 236100                    LDQ     1,,PR1
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:11   
         2 000030   000045 116000 0                  CMPQ    XSC_E$RDONLYCCB
         2 000031   000033 601000 2                  TNZ     s:5194

       74     5193    3                   ALTRETURN;

   5193  2 000032   000000 702200 xent               TSX2  ! X66_AALT

       75     5194    3               CALL XSS$SCREECH( XSC_E$RDONLYCCB);

   5194  2 000033   000001 630400 3                  EPPR0   1
         2 000034   000000 631400 3                  EPPR1   0
         2 000035   000000 701000 xent               TSX1    XSS$SCREECH
         2 000036   000000 011000                    NOP     0

       76     5195    3               END;

       77     5196    2           END;

       78     5197    1       CCB.ERROR = '0'B;

   5197  2 000037   200003 470500                    LDP0    @CCB,,AUTO
         2 000040   000001 450100                    STZ     1,,PR0

       79     5198            /* have Presentation initialize first */
       80     5199    1       CCB.PRES$ = ENTADDR( XSC$PRECV);

   5199  2 000041   000000 636000 xent               EAQ     XSC$PRECV
         2 000042   000011 756100                    STQ     9,,PR0

       81     5200    1       CALL XSP$COMMINIT( CCB) ALTRET( OOPS);

   5200  2 000043   200003 630500                    EPPR0   @CCB,,AUTO
         2 000044   000000 631400 3                  EPPR1   0
         2 000045   000000 701000 xent               TSX1    XSP$COMMINIT
         2 000046   000064 702000 2                  TSX2    OOPS

       82     5201    1       CCID = CCB.LCID;
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:12   

   5201  2 000047   200003 470500                    LDP0    @CCB,,AUTO
         2 000050   000000 236100                    LDQ     0,,PR0
         2 000051   000777 376007                    ANQ     511,DL
         2 000052   200005 756100                    STQ     CCID,,AUTO

       83     5202            /* allocate space for ACSE connection context */
       84     5203    1       CALL XSC$GETCTX( CTX$, CCID)

   5203  2 000053   200005 631500                    EPPR1   CCID,,AUTO
         2 000054   200011 451500                    STP1    P+3,,AUTO
         2 000055   200004 633500                    EPPR3   CTX$,,AUTO
         2 000056   200010 453500                    STP3    P+2,,AUTO
         2 000057   200010 630500                    EPPR0   P+2,,AUTO
         2 000060   000002 631400 3                  EPPR1   2
         2 000061   000000 701000 xent               TSX1    XSC$GETCTX
         2 000062   000064 702000 2                  TSX2    OOPS
         2 000063   000065 710000 2                  TRA     s:5208

       85     5204    2       WHENALTRETURN DO;

       86     5205    2   OOPS:
       87     5206    2           ALTRETURN;

   5206  2 000064   000000 702200 xent  OOPS         TSX2  ! X66_AALT

       88     5207    2           END;
       89     5208    1       IF CCB.FLAGS.CVALID THEN

   5208  2 000065   200003 470500                    LDP0    @CCB,,AUTO
         2 000066   000000 236100                    LDQ     0,,PR0
         2 000067   040000 316007                    CANQ    16384,DL
         2 000070   000074 600000 2                  TZE     s:5210

       90     5209    1           CCTX.ENTRY$ = CCB.ACSE$;  /* save handler proc address */

   5209  2 000071   000012 236100                    LDQ     10,,PR0
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:13   
         2 000072   200004 471500                    LDP1    CTX$,,AUTO
         2 000073   100001 756100                    STQ     1,,PR1

       91     5210    1       RETURN;

   5210  2 000074   000000 702200 xent               TSX2  ! X66_ARET

       92     5211        %EJECT;
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:14   
       93     5212    1   XSC$COMMTERM: ENTRY( CCB) ALTRET;

   5212  2 000075   000000 700200 xent  XSC$COMMTERM TSX0  ! X66_AUTO_1
         2 000076   000012 000001                    ZERO    10,1

       94     5213
       95     5214            /* point at ACSE connection context */
       96     5215    1       CCID = CCB.LCID;

   5215  2 000077   200003 470500                    LDP0    @CCB,,AUTO
         2 000100   000000 236100                    LDQ     0,,PR0
         2 000101   000777 376007                    ANQ     511,DL
         2 000102   200005 756100                    STQ     CCID,,AUTO

       97     5216    1       CALL XSC$CTXPTR( CCID, CTX$) ALTRET( OOPS);

   5216  2 000103   200004 631500                    EPPR1   CTX$,,AUTO
         2 000104   200011 451500                    STP1    P+3,,AUTO
         2 000105   200005 633500                    EPPR3   CCID,,AUTO
         2 000106   200010 453500                    STP3    P+2,,AUTO
         2 000107   200010 630500                    EPPR0   P+2,,AUTO
         2 000110   000002 631400 3                  EPPR1   2
         2 000111   000000 701000 xent               TSX1    XSC$CTXPTR
         2 000112   000064 702000 2                  TSX2    OOPS

       98     5217            /* call Presentation to terminate */
       99     5218    1       CALL XSP$COMMTERM( CCB) ALTRET( OOPS);

   5218  2 000113   200003 630500                    EPPR0   @CCB,,AUTO
         2 000114   000000 631400 3                  EPPR1   0
         2 000115   000000 701000 xent               TSX1    XSP$COMMTERM
         2 000116   000064 702000 2                  TSX2    OOPS

      100     5219            /* release ACSE connection context */
      101     5220    1       CALL XSC$RELCTX( CTX$)

   5220  2 000117   200004 630500                    EPPR0   CTX$,,AUTO
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:15   
         2 000120   200010 450500                    STP0    P+2,,AUTO
         2 000121   200010 630500                    EPPR0   P+2,,AUTO
         2 000122   000000 631400 3                  EPPR1   0
         2 000123   000000 701000 xent               TSX1    XSC$RELCTX
         2 000124   000126 702000 2                  TSX2    s:5223
         2 000125   000126 710000 2                  TRA     s:5223

      102     5221    2       WHENALTRETURN DO;

      103     5222    2           END;

      104     5223    1       RETURN;

   5223  2 000126   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   000000 000000   302303 000200   000000 006014   000000 000000    ................
   0     004   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     014*  000000 000000   000000 000000   000000 000000   302303 000200    ................
   0     020   000000 006014   000000 006014   000000 006014   000000 006014    ................
   0     024   000000 000000   000000 000000   000000 006014   000000 006014    ................
   0     034*  013000 000000   302303 000200   000000 006014   000000 000000    ................
   0     040   302303 000200   000000 006014   011000 000000   302303 000200    ................
   0     044   000000 006014                                                    ....

XSC_E$RDONLYCCB
 Sect OctLoc
   0     045   302303 000170                                                    ...x

(unnamed)
 Sect OctLoc
   1     000   000040 040040   040040 040040   040040 040040   040040 040040    .
   1     004   040040 040040   040040 040040   040040 040040   040040 040040
   1     070*  040000 040040   040040 040040   040040 040040   040040 040040     .
   1     074   040040 ******   000000 040040   040040 040040   040040 040040      ....
   1     100   040040 040040   040040 040040   040040 040040   040040 040040
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:16   
   1     104   040040 040040   040040 ******   000067 000000   000000 000000          ...7......
   1     110   000000 000000   000000 000000   000000 000000   000000 ******    ................
   1     114   000040 040040   040040 040040   040040 040040   040040 040040    .
   1     120   040040 040040   040040 040040   040040 040040   040040 040040
   1     204*  040000 040040   040040 040040   040040 040040   040040 040040     .
   1     210   040040 ******   000000 040040   040040 040040   040040 040040      ....
   1     214   040040 040040   040040 040040   040040 040040   040040 040040
   1     220   040040 040040   040040 ******   000067 000000   000000 000000          ...7......
   1     224   000000 000000   000000 000000   000000 000000   000000 ******    ................

(unnamed)
 Sect OctLoc
   3     000   000001 000000   000045 006000   000002 000000                    .....%......
      105     5224
      106     5225    1       END XSC$COMMINIT;
      107     5226        %EOD;

PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:17   
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   B$JIT_C.:LIB_E05  is referenced.
   B_SEGIDS_C.:LIB_E05  is referenced.
      No diagnostics issued in procedure XSC$COMMINIT.
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:18   

 **** Variables and constants ****

  ****  Section 000 RoData XSC$COMMINIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    45-0-0/w STRC        r     1 XSC_E$RDONLYCCB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CCB                      *0-0-0/w STRC(504)   r     1 CCB
     5-0-0/w SBIN        r     1 CCID                       4-0-0/w PTR         r     1 CTX$
     6-0-0/w PTR         r     1 P                          6-0-0/w STRC        r     1 PX
     5-0-0/w SBIN        r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(216)   r     1 CCTX


   Procedure XSC$COMMINIT requires 87 words for executable code.
   Procedure XSC$COMMINIT requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:20   
          MINI XREF LISTING

B$JIT.ERR.MID
       877**DCL       877--REDEF
B$JIT.JRESPEAK
       967**DCL       968--REDEF
B$JIT.PLL
       963**DCL      5190>>IF
B$JIT.PUL
       963**DCL      5190>>IF
B$JIT$
      5176**DCL       871--IMP-PTR  5190>>IF       5190>>IF
CCB
      2857**DCL        16--PROC     5187--ASSIGN   5200<>CALL     5212--ENTRY    5218<>CALL
CCB.ACSE$
      3119**DCL      5209>>ASSIGN
CCB.ERRDEF
      2964**DCL      2984--REDEF
CCB.ERROR
      2984**DCL      5192>>IF       5197<<ASSIGN
CCB.FLAGS.CVALID
      2920**DCL      5208>>IF
CCB.LCID
      2956**DCL      5201>>ASSIGN   5215>>ASSIGN
CCB.PRES$
      3107**DCL      5199<<ASSIGN
CCID
      5179**DCL      5180--REDEF    5201<<ASSIGN   5203<>CALL     5215<<ASSIGN   5216<>CALL
CCTX.ENTRY$
      4176**DCL      5209<<ASSIGN
CCTX.HISTZ
      4177**DCL      4178--REDEF
CTX$
      5178**DCL      4153--IMP-PTR  5203<>CALL     5209>>ASSIGN   5216<>CALL     5220<>CALL
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:21   
OOPS
      5206**LABEL    5200--CALLALT  5216--CALLALT  5218--CALLALT
P
      5181**DCL      5182--REDEF    5187<<ASSIGN
PX.OFFSET
      5183**DCL      5189>>ASSIGN
PX.SEGID
      5185**DCL      5188>>IF
TEMP
      5180**DCL      5189<<ASSIGN   5190>>IF       5190>>IF
XSC$CTXPTR
      5168**DCL-ENT  5216--CALL
XSC$GETCTX
      5169**DCL-ENT  5203--CALL
XSC$PRECV
      5171**DCL-ENT  5199--ASSIGN
XSC$RELCTX
      5170**DCL-ENT  5220--CALL
XSC_ASSOCIATE.ERRDEF
      1463**DCL      1483--REDEF
XSC_E$RDONLYCCB
      5130**DCL      5192>>IF       5194<>CALL
XSC_GENERIC.ERRDEF
      1398**DCL      1418--REDEF
XSC_P_ABORT.ERRDEF
      1533**DCL      1553--REDEF
XSC_RELEASE.ERRDEF
      1592**DCL      1612--REDEF
XSC_SOURCE.NSAP.ADDRESS_N
      3415**DCL      3416--REDEF
XSC_TARGET.NSAP.ADDRESS_N
      3698**DCL      3699--REDEF
XSC_U_ABORT.ERRDEF
      1651**DCL      1671--REDEF
XSP$COMMINIT
      5172**DCL-ENT  5200--CALL
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:22   
XSP$COMMTERM
      5173**DCL-ENT  5218--CALL
XSS$SCREECH
      5174**DCL-ENT  5194--CALL
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:23   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSC$COMMINIT File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:51 Page:24   
              MINI UREF LISTING

XSC$COMMINIT      16**PROC
XSC$COMMTERM    5212**ENTRY

PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:25   
      108        1        /*T***********************************************************/
      109        2        /*T*                                                         */
      110        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      111        4        /*T*                                                         */
      112        5        /*T***********************************************************/
      113        6        /*F*    NAME:   XSC$GETCTX
      114        7
      115        8                XSC$GETCTX is called to obtain a new ACSE context block.
      116        9                The parameter CTX$ is set to point at the newly allocated context
      117       10                block.  The optional parameter CCID specifies the connection id
      118       11                to use if known in advance, i.e., for incoming connections.
      119       12        */
      120       13        XSC$GETCTX: PROC( CTX$, CCID) ALTRET;
      121       14        %INCLUDE XSC_ACSE_E;
      122       92        %INCLUDE XSC_INTERNAL_E;
      123      180        %INCLUDE XSC_INTERNAL_M;
      124      525            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( CTX$)");
      125      571            %XSC$CCTX( NAME=XSC_CCTX, STCLASS="CONSTANT SYMDEF");
      126      617        %INCLUDE XSS_INTERNAL_M;
      127     1206            %XSS$MEMBLK( NAME=B$BLOCK);
      128     1244
      129     1245    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
      130     1246    1       DCL XSS$GETMEM ENTRY(3) ALTRET;
      131     1247    1       DCL XSS$RELMEM ENTRY(1) ALTRET;
      132     1248
      133     1249    1       DCL XSS_MAX_LCID SBIN SYMREF;
      134     1250
      135     1251    1       DCL XSC_MAPCCID$ PTR INIT( ADDR( NIL)) STATIC SYMDEF;
      136     1252
      137     1253    1       DCL BLKX UBIN HALF HALIGNED;
      138     1254    1       DCL CCID SBIN;
      139     1255    1       DCL CTXINITED BIT(1) STATIC INIT( %FALSE);  /* set iff CTX array init'd */
      140     1256    1       DCL CTX$ PTR;
      141     1257    1       DCL I SBIN;
      142     1258    1       DCL LASTGET SBIN STATIC;
      143     1259    1       DCL MAPCCID(0:0) UBIN HALF BASED( XSC_MAPCCID$) HALIGNED;
      144     1260    1       DCL TMP$ PTR;
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:26   
      145     1261        %EJECT;
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:27   
      146     1262    2       IF NOT CTXINITED THEN DO;
      147     1263                /* figure out how many bytes to allocate for MAPCCID array */
      148     1264    2           I = 2 * ( 1 + XSS_MAX_LCID);
      149     1265                /* allocate the space and set it up */
      150     1266    2           CALL XSS$GETMEM( BLKX, XSC_MAPCCID$, I) ALTRET( OOPS);
      151     1267    3           DO I = 1 TO XSS_MAX_LCID;
      152     1268    3               MAPCCID( I) = %NULL;
      153     1269    3               END;
      154     1270    2           MAPCCID( 0) = 0;  /* unused */
      155     1271    2           LASTGET = XSS_MAX_LCID;
      156     1272    2           CTXINITED = %TRUE;
      157     1273    2           END;
      158     1274            /* allocate space for the context block */
      159     1275    1       CALL XSS$GETMEM( BLKX, CTX$, SIZEC( CCTX)) ALTRET( OOPS);
      160     1276            /* if connection id specified, try to use it */
      161     1277    2       IF ADDR( CCID) ~= ADDR( NIL) THEN DO;
      162     1278    2           I = CCID;
      163     1279    2           IF MAPCCID( I) = %NULL THEN
      164     1280    2               GOTO FOUND;
      165     1281    2           GOTO NOPE;
      166     1282    2           END;
      167     1283            /* find a free slot with aid of roving pointer */
      168     1284    1       I = LASTGET;
      169     1285    1   LOOP:
      170     1286    2       DO WHILE( %TRUE);
      171     1287    2           I = I + 1;
      172     1288    2           IF I > XSS_MAX_LCID THEN
      173     1289    2               I = 1;
      174     1290    3           IF I = LASTGET THEN DO;
      175     1291                    /* We cycled through all the slots and none were free */
      176     1292    3   NOPE:
      177     1293    3               CALL XSS$RELMEM( BLKX);
      178     1294    3               CTX$ = ADDR( NIL);
      179     1295    3   OOPS:
      180     1296    3               ALTRETURN;
      181     1297    3               END;
      182     1298    2           IF MAPCCID( I) = %NULL THEN
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:28   
      183     1299    2               EXIT LOOP;
      184     1300    2           END;
      185     1301            /* found a free slot */
      186     1302    1   FOUND:
      187     1303    1       MAPCCID( I) = BLKX;
      188     1304    1       CALL XSS$BUFPTR( BLKX, CTX$);  /* now point at buffer within mem blk */
      189     1305    1       CCTX = XSC_CCTX;
      190     1306    1       CCTX.CCID = I;
      191     1307    1       CCTX.STATE = %XSC_CST_0;  /* idle, unassociated */
      192     1308            /* update roving pointer for next time */
      193     1309    1       LASTGET = I;
      194     1310    1       RETURN;
      195     1311        %EJECT;
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:29   
      196     1312        /*F*    NAME:   XSC$RELCTX
      197     1313
      198     1314                XSC$RELCTX is called to release an ACSE connection context block.
      199     1315                The parameter CTX$ points at the context block to release.
      200     1316        */
      201     1317    1   XSC$RELCTX: ENTRY( CTX$) ALTRET;
      202     1318
      203     1319    1       I = CCTX.CCID;
      204     1320            /* consistency checks */
      205     1321    1       BLKX = MAPCCID( I);
      206     1322    1       IF BLKX = %NULL THEN
      207     1323    1           ALTRETURN;
      208     1324    1       TMP$ = PINCRW( CTX$, -2);  /*N* note hardwired B$BLOCK size here */
      209     1325    1       IF BLKX ~= TMP$->B$BLOCK.BLKX THEN
      210     1326    1           ALTRETURN;
      211     1327            /* looks good.. release context block */
      212     1328    1       CALL XSS$RELMEM( BLKX) ALTRET( OOPS);
      213     1329    1       MAPCCID( I) = %NULL;
      214     1330    1       RETURN;
      215     1331
      216     1332    1       END XSC$GETCTX;
      217     1333        %EOD;

PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:30   
--  Include file information  --

   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSC$GETCTX.

   Procedure XSC$GETCTX requires 161 words for executable code.
   Procedure XSC$GETCTX requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:31   

 Object Unit name= XSC$GETCTX                                 File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:51:39.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      6      6  XSC$GETCTX
    1   Data  even  none     3      3  XSC$GETCTX
    2   Proc  even  none   161    241  XSC$GETCTX
    3  RoData even  none     9     11  XSC$GETCTX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  XSC$GETCTX
     2    172          yes     yes      Std        1  XSC$RELCTX

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  XSC_CCTX                           1      0  XSC_MAPCCID$

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 XSS$GETMEM
 yes     yes           Std       1 XSS$RELMEM
 yes     yes           Std       2 XSS$BUFPTR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:32   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSS_MAX_LCID

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:33   


      108        1        /*T***********************************************************/
      109        2        /*T*                                                         */
      110        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      111        4        /*T*                                                         */
      112        5        /*T***********************************************************/
      113        6        /*F*    NAME:   XSC$GETCTX
      114        7
      115        8                XSC$GETCTX is called to obtain a new ACSE context block.
      116        9                The parameter CTX$ is set to point at the newly allocated context
      117       10                block.  The optional parameter CCID specifies the connection id
      118       11                to use if known in advance, i.e., for incoming connections.
      119       12        */
      120       13        XSC$GETCTX: PROC( CTX$, CCID) ALTRET;

     13  2 000000   000000 700200 xent  XSC$GETCTX   TSX0  ! X66_AUTO_2
         2 000001   000014 000002                    ZERO    12,2

      121       14        %INCLUDE XSC_ACSE_E;
      122       92        %INCLUDE XSC_INTERNAL_E;
      123      180        %INCLUDE XSC_INTERNAL_M;
      124      525            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( CTX$)");
      125      571            %XSC$CCTX( NAME=XSC_CCTX, STCLASS="CONSTANT SYMDEF");
      126      617        %INCLUDE XSS_INTERNAL_M;
      127     1206            %XSS$MEMBLK( NAME=B$BLOCK);
      128     1244
      129     1245    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
      130     1246    1       DCL XSS$GETMEM ENTRY(3) ALTRET;
      131     1247    1       DCL XSS$RELMEM ENTRY(1) ALTRET;
      132     1248
      133     1249    1       DCL XSS_MAX_LCID SBIN SYMREF;
      134     1250
      135     1251    1       DCL XSC_MAPCCID$ PTR INIT( ADDR( NIL)) STATIC SYMDEF;
      136     1252
      137     1253    1       DCL BLKX UBIN HALF HALIGNED;
      138     1254    1       DCL CCID SBIN;
      139     1255    1       DCL CTXINITED BIT(1) STATIC INIT( %FALSE);  /* set iff CTX array init'd */
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:34   
      140     1256    1       DCL CTX$ PTR;
      141     1257    1       DCL I SBIN;
      142     1258    1       DCL LASTGET SBIN STATIC;
      143     1259    1       DCL MAPCCID(0:0) UBIN HALF BASED( XSC_MAPCCID$) HALIGNED;
      144     1260    1       DCL TMP$ PTR;
      145     1261        %EJECT;
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:35   
      146     1262    2       IF NOT CTXINITED THEN DO;

   1262  2 000002   000001 234000 1                  SZN     CTXINITED
         2 000003   000047 604000 2                  TMI     s:1275

      147     1263                /* figure out how many bytes to allocate for MAPCCID array */
      148     1264    2           I = 2 * ( 1 + XSS_MAX_LCID);

   1264  2 000004   000000 235000 xsym               LDA     XSS_MAX_LCID
         2 000005   000001 735000                    ALS     1
         2 000006   000002 035007                    ADLA    2,DL
         2 000007   200006 755100                    STA     I,,AUTO

      149     1265                /* allocate the space and set it up */
      150     1266    2           CALL XSS$GETMEM( BLKX, XSC_MAPCCID$, I) ALTRET( OOPS);

   1266  2 000010   200006 630500                    EPPR0   I,,AUTO
         2 000011   200012 450500                    STP0    TMP$+3,,AUTO
         2 000012   000001 236000 3                  LDQ     1
         2 000013   200011 756100                    STQ     TMP$+2,,AUTO
         2 000014   200005 631500                    EPPR1   BLKX,,AUTO
         2 000015   200010 451500                    STP1    TMP$+1,,AUTO
         2 000016   200010 630500                    EPPR0   TMP$+1,,AUTO
         2 000017   000000 631400 3                  EPPR1   0
         2 000020   000000 701000 xent               TSX1    XSS$GETMEM
         2 000021   000124 702000 2                  TSX2    OOPS

      151     1267    3           DO I = 1 TO XSS_MAX_LCID;

   1267  2 000022   000001 235007                    LDA     1,DL
         2 000023   200006 755100                    STA     I,,AUTO
         2 000024   000034 710000 2                  TRA     s:1269+1

      152     1268    3               MAPCCID( I) = %NULL;

   1268  2 000025   200006 235100                    LDA     I,,AUTO
         2 000026   000001 735000                    ALS     1
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:36   
         2 000027   000000 470400 1                  LDP0    XSC_MAPCCID$
         2 000030   000105 101400                    MRL     fill='000'O
         2 000031   000002 000004 3                  ADSC9   2                        cn=0,n=4
         2 000032   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2

      153     1269    3               END;

   1269  2 000033   200006 054100                    AOS     I,,AUTO
         2 000034   200006 236100                    LDQ     I,,AUTO
         2 000035   000000 116000 xsym               CMPQ    XSS_MAX_LCID
         2 000036   000025 604400 2                  TMOZ    s:1268

      154     1270    2           MAPCCID( 0) = 0;  /* unused */

   1270  2 000037   000000 470400 1                  LDP0    XSC_MAPCCID$
         2 000040   000100 101400                    MRL     fill='000'O
         2 000041   000003 000004 3                  ADSC9   3                        cn=0,n=4
         2 000042   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

      155     1271    2           LASTGET = XSS_MAX_LCID;

   1271  2 000043   000000 235000 xsym               LDA     XSS_MAX_LCID
         2 000044   000002 755000 1                  STA     LASTGET

      156     1272    2           CTXINITED = %TRUE;

   1272  2 000045   400000 236003                    LDQ     -131072,DU
         2 000046   000001 756000 1                  STQ     CTXINITED

      157     1273    2           END;

      158     1274            /* allocate space for the context block */
      159     1275    1       CALL XSS$GETMEM( BLKX, CTX$, SIZEC( CCTX)) ALTRET( OOPS);

   1275  2 000047   000006 236000 3                  LDQ     6
         2 000050   200012 756100                    STQ     TMP$+3,,AUTO
         2 000051   200003 236100                    LDQ     @CTX$,,AUTO
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:37   
         2 000052   200011 756100                    STQ     TMP$+2,,AUTO
         2 000053   200005 630500                    EPPR0   BLKX,,AUTO
         2 000054   200010 450500                    STP0    TMP$+1,,AUTO
         2 000055   200010 630500                    EPPR0   TMP$+1,,AUTO
         2 000056   000000 631400 3                  EPPR1   0
         2 000057   000000 701000 xent               TSX1    XSS$GETMEM
         2 000060   000124 702000 2                  TSX2    OOPS

      160     1276            /* if connection id specified, try to use it */
      161     1277    2       IF ADDR( CCID) ~= ADDR( NIL) THEN DO;

   1277  2 000061   200004 236100                    LDQ     @CCID,,AUTO
         2 000062   000004 116000 3                  CMPQ    4
         2 000063   000100 600000 2                  TZE     s:1284

      162     1278    2           I = CCID;

   1278  2 000064   200004 470500                    LDP0    @CCID,,AUTO
         2 000065   000000 235100                    LDA     0,,PR0
         2 000066   200006 755100                    STA     I,,AUTO

      163     1279    2           IF MAPCCID( I) = %NULL THEN

   1279  2 000067   000001 735000                    ALS     1
         2 000070   000000 471400 1                  LDP1    XSC_MAPCCID$
         2 000071   000100 101505                    MRL     fill='000'O
         2 000072   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         2 000073   200010 000004                    ADSC9   TMP$+1,,AUTO             cn=0,n=4
         2 000074   200010 236100                    LDQ     TMP$+1,,AUTO
         2 000075   777777 116007                    CMPQ    -1,DL
         2 000076   000137 600000 2                  TZE     FOUND

      164     1280    2               GOTO FOUND;
      165     1281    2           GOTO NOPE;

   1281  2 000077   000113 710000 2                  TRA     NOPE

PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:38   
      166     1282    2           END;
      167     1283            /* find a free slot with aid of roving pointer */
      168     1284    1       I = LASTGET;

   1284  2 000100   000002 235000 1                  LDA     LASTGET
         2 000101   200006 755100                    STA     I,,AUTO

      169     1285    1   LOOP:
      170     1286    2       DO WHILE( %TRUE);

   1286  2 000102                       LOOP         null
      171     1287    2           I = I + 1;

   1287  2 000102   200006 054100                    AOS     I,,AUTO

      172     1288    2           IF I > XSS_MAX_LCID THEN

   1288  2 000103   200006 236100                    LDQ     I,,AUTO
         2 000104   000000 116000 xsym               CMPQ    XSS_MAX_LCID
         2 000105   000110 604400 2                  TMOZ    s:1290

      173     1289    2               I = 1;

   1289  2 000106   000001 235007                    LDA     1,DL
         2 000107   200006 755100                    STA     I,,AUTO

      174     1290    3           IF I = LASTGET THEN DO;

   1290  2 000110   200006 236100                    LDQ     I,,AUTO
         2 000111   000002 116000 1                  CMPQ    LASTGET
         2 000112   000125 601000 2                  TNZ     s:1298

      175     1291                    /* We cycled through all the slots and none were free */
      176     1292    3   NOPE:
      177     1293    3               CALL XSS$RELMEM( BLKX);

   1293  2 000113   200005 630500       NOPE         EPPR0   BLKX,,AUTO
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:39   
         2 000114   200010 450500                    STP0    TMP$+1,,AUTO
         2 000115   200010 630500                    EPPR0   TMP$+1,,AUTO
         2 000116   000007 631400 3                  EPPR1   7
         2 000117   000000 701000 xent               TSX1    XSS$RELMEM
         2 000120   000000 011000                    NOP     0

      178     1294    3               CTX$ = ADDR( NIL);

   1294  2 000121   000004 236000 3                  LDQ     4
         2 000122   200003 470500                    LDP0    @CTX$,,AUTO
         2 000123   000000 756100                    STQ     0,,PR0

      179     1295    3   OOPS:
      180     1296    3               ALTRETURN;

   1296  2 000124   000000 702200 xent  OOPS         TSX2  ! X66_AALT

      181     1297    3               END;
      182     1298    2           IF MAPCCID( I) = %NULL THEN

   1298  2 000125   200006 235100                    LDA     I,,AUTO
         2 000126   000001 735000                    ALS     1
         2 000127   000000 470400 1                  LDP0    XSC_MAPCCID$
         2 000130   000100 101505                    MRL     fill='000'O
         2 000131   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2
         2 000132   200010 000004                    ADSC9   TMP$+1,,AUTO             cn=0,n=4
         2 000133   200010 236100                    LDQ     TMP$+1,,AUTO
         2 000134   777777 116007                    CMPQ    -1,DL
         2 000135   000137 600000 2                  TZE     FOUND

      183     1299    2               EXIT LOOP;
      184     1300    2           END;

   1300  2 000136   000102 710000 2                  TRA     LOOP

      185     1301            /* found a free slot */
      186     1302    1   FOUND:
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:40   
      187     1303    1       MAPCCID( I) = BLKX;

   1303  2 000137   000000 470400 1     FOUND        LDP0    XSC_MAPCCID$
         2 000140   000105 100500                    MLR     fill='000'O
         2 000141   200005 000002                    ADSC9   BLKX,,AUTO               cn=0,n=2
         2 000142   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2

      188     1304    1       CALL XSS$BUFPTR( BLKX, CTX$);  /* now point at buffer within mem blk */

   1304  2 000143   200003 236100                    LDQ     @CTX$,,AUTO
         2 000144   200011 756100                    STQ     TMP$+2,,AUTO
         2 000145   200005 630500                    EPPR0   BLKX,,AUTO
         2 000146   200010 450500                    STP0    TMP$+1,,AUTO
         2 000147   200010 630500                    EPPR0   TMP$+1,,AUTO
         2 000150   000010 631400 3                  EPPR1   8
         2 000151   000000 701000 xent               TSX1    XSS$BUFPTR
         2 000152   000000 011000                    NOP     0

      189     1305    1       CCTX = XSC_CCTX;

   1305  2 000153   200003 470500                    LDP0    @CTX$,,AUTO
         2 000154   000000 471500                    LDP1    0,,PR0
         2 000155   000100 100400                    MLR     fill='000'O
         2 000156   000000 000030 0                  ADSC9   XSC_CCTX                 cn=0,n=24
         2 000157   100000 000030                    ADSC9   0,,PR1                   cn=0,n=24

      190     1306    1       CCTX.CCID = I;

   1306  2 000160   000000 471500                    LDP1    0,,PR0
         2 000161   200006 236100                    LDQ     I,,AUTO
         2 000162   000011 736000                    QLS     9
         2 000163   100000 552110                    STBQ    0,'10'O,PR1

      191     1307    1       CCTX.STATE = %XSC_CST_0;  /* idle, unassociated */

   1307  2 000164   000000 471500                    LDP1    0,,PR0
         2 000165   000000 236003                    LDQ     0,DU
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:41   
         2 000166   100000 552140                    STBQ    0,'40'O,PR1

      192     1308            /* update roving pointer for next time */
      193     1309    1       LASTGET = I;

   1309  2 000167   200006 235100                    LDA     I,,AUTO
         2 000170   000002 755000 1                  STA     LASTGET

      194     1310    1       RETURN;

   1310  2 000171   000000 702200 xent               TSX2  ! X66_ARET

      195     1311        %EJECT;
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:42   
      196     1312        /*F*    NAME:   XSC$RELCTX
      197     1313
      198     1314                XSC$RELCTX is called to release an ACSE connection context block.
      199     1315                The parameter CTX$ points at the context block to release.
      200     1316        */
      201     1317    1   XSC$RELCTX: ENTRY( CTX$) ALTRET;

   1317  2 000172   000000 700200 xent  XSC$RELCTX   TSX0  ! X66_AUTO_2
         2 000173   000014 000002                    ZERO    12,2

      202     1318
      203     1319    1       I = CCTX.CCID;

   1319  2 000174   200003 470500                    LDP0    @CTX$,,AUTO
         2 000175   000000 471500                    LDP1    0,,PR0
         2 000176   100000 236100                    LDQ     0,,PR1
         2 000177   000011 772000                    QRL     9
         2 000200   000777 376007                    ANQ     511,DL
         2 000201   200006 756100                    STQ     I,,AUTO

      204     1320            /* consistency checks */
      205     1321    1       BLKX = MAPCCID( I);

   1321  2 000202   200006 235100                    LDA     I,,AUTO
         2 000203   000001 735000                    ALS     1
         2 000204   000000 471400 1                  LDP1    XSC_MAPCCID$
         2 000205   000100 100505                    MLR     fill='000'O
         2 000206   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         2 000207   200005 000002                    ADSC9   BLKX,,AUTO               cn=0,n=2

      206     1322    1       IF BLKX = %NULL THEN

   1322  2 000210   200005 220100                    LDX0    BLKX,,AUTO
         2 000211   777777 100003                    CMPX0   -1,DU
         2 000212   000214 601000 2                  TNZ     s:1324

      207     1323    1           ALTRETURN;
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:43   

   1323  2 000213   000000 702200 xent               TSX2  ! X66_AALT

      208     1324    1       TMP$ = PINCRW( CTX$, -2);  /*N* note hardwired B$BLOCK size here */

   1324  2 000214   000000 236100                    LDQ     0,,PR0
         2 000215   777776 036003                    ADLQ    -2,DU
         2 000216   200007 756100                    STQ     TMP$,,AUTO

      209     1325    1       IF BLKX ~= TMP$->B$BLOCK.BLKX THEN

   1325  2 000217   200007 473500                    LDP3    TMP$,,AUTO
         2 000220   300000 721100                    LXL1    0,,PR3
         2 000221   200005 101100                    CMPX1   BLKX,,AUTO
         2 000222   000224 600000 2                  TZE     s:1328

      210     1326    1           ALTRETURN;

   1326  2 000223   000000 702200 xent               TSX2  ! X66_AALT

      211     1327            /* looks good.. release context block */
      212     1328    1       CALL XSS$RELMEM( BLKX) ALTRET( OOPS);

   1328  2 000224   200005 634500                    EPPR4   BLKX,,AUTO
         2 000225   200010 454500                    STP4    TMP$+1,,AUTO
         2 000226   200010 630500                    EPPR0   TMP$+1,,AUTO
         2 000227   000007 631400 3                  EPPR1   7
         2 000230   000000 701000 xent               TSX1    XSS$RELMEM
         2 000231   000124 702000 2                  TSX2    OOPS

      213     1329    1       MAPCCID( I) = %NULL;

   1329  2 000232   200006 235100                    LDA     I,,AUTO
         2 000233   000001 735000                    ALS     1
         2 000234   000000 470400 1                  LDP0    XSC_MAPCCID$
         2 000235   000105 101400                    MRL     fill='000'O
         2 000236   000002 000004 3                  ADSC9   2                        cn=0,n=4
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:44   
         2 000237   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2

      214     1330    1       RETURN;

   1330  2 000240   000000 702200 xent               TSX2  ! X66_ARET

XSC_CCTX
 Sect OctLoc
   0     000   143000 000000   000000 000000   000000 000000   000000 000000    c...............
   0     004   000000 000000   000000 000000                                    ........

XSC_MAPCCID$
 Sect OctLoc
   1     000   000000 006014                                                    ....

CTXINITED
 Sect OctLoc
   1     001   0***** ******                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000003 000000   000000 006000   000000 777777   000000 000000    ................
   3     004   000000 006014   000000 000030   000005 006000   000001 000000    ................
   3     010   000002 000000                                                    ....
      215     1331
      216     1332    1       END XSC$GETCTX;
      217     1333        %EOD;

PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:45   
--  Include file information  --

   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSC$GETCTX.
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:46   

 **** Variables and constants ****

  ****  Section 000 RoData XSC$GETCTX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(216)   r     1 XSC_CCTX

  ****  Section 001  Data  XSC$GETCTX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/b BIT         r     1 CTXINITED                  2-0-0/w SBIN        r     1 LASTGET
     0-0-0/w PTR         r     1 XSC_MAPCCID$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CCID                      3-0-0/w PTR         r     1 @CTX$
     5-0-0/h UBIN(18)    r     1 BLKX                      *0-0-0/w SBIN        r     1 CCID
    *0-0-0/w PTR         r     1 CTX$                       6-0-0/w SBIN        r     1 I
     7-0-0/w PTR         r     1 TMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 XSS_MAX_LCID

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:47   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 B$BLOCK                    0-0-0/w STRC(216)   r     1 CCTX
     0-0-0/h UBIN(18)    r     1 MAPCCID(0:0)


   Procedure XSC$GETCTX requires 161 words for executable code.
   Procedure XSC$GETCTX requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:48   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:49   
          MINI XREF LISTING

B$BLOCK.BLKX
      1238**DCL      1325>>IF
B$BLOCK.BLNKX
      1240**DCL      1241--REDEF
BLKX
      1253**DCL      1266<>CALL     1275<>CALL     1293<>CALL     1303>>ASSIGN   1304<>CALL     1321<<ASSIGN
      1322>>IF       1325>>IF       1328<>CALL
CCID
      1254**DCL        13--PROC     1277--IF       1278>>ASSIGN
CCTX
       542**DCL      1275--CALL     1305<<ASSIGN
CCTX.CCID
       558**DCL      1306<<ASSIGN   1319>>ASSIGN
CCTX.HISTZ
       566**DCL       567--REDEF
CCTX.STATE
       556**DCL      1307<<ASSIGN
CTX$
      1256**DCL        13--PROC      542--IMP-PTR  1275<>CALL     1294<<ASSIGN   1304<>CALL     1305>>ASSIGN
      1306>>ASSIGN   1307>>ASSIGN   1317--ENTRY    1319>>ASSIGN   1324>>ASSIGN
CTXINITED
      1255**DCL      1262>>IF       1272<<ASSIGN
FOUND
      1303**LABEL    1280--GOTO
I
      1257**DCL      1264<<ASSIGN   1266<>CALL     1267<<DOINDEX  1268>>ASSIGN   1278<<ASSIGN   1279>>IF
      1284<<ASSIGN   1287<<ASSIGN   1287>>ASSIGN   1288>>IF       1289<<ASSIGN   1290>>IF       1298>>IF
      1303>>ASSIGN   1306>>ASSIGN   1309>>ASSIGN   1319<<ASSIGN   1321>>ASSIGN   1329>>ASSIGN
LASTGET
      1258**DCL      1271<<ASSIGN   1284>>ASSIGN   1290>>IF       1309<<ASSIGN
LOOP
      1286**LABEL    1299--EXIT
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:50   
MAPCCID
      1259**DCL      1268<<ASSIGN   1270<<ASSIGN   1279>>IF       1298>>IF       1303<<ASSIGN   1321>>ASSIGN
      1329<<ASSIGN
NOPE
      1293**LABEL    1281--GOTO
OOPS
      1296**LABEL    1266--CALLALT  1275--CALLALT  1328--CALLALT
TMP$
      1260**DCL      1324<<ASSIGN   1325>>IF
XSC_CCTX
       588**DCL      1305>>ASSIGN
XSC_CCTX.HISTZ
       612**DCL       613--REDEF
XSC_MAPCCID$
      1251**DCL      1259--IMP-PTR  1266<>CALL     1268>>ASSIGN   1270>>ASSIGN   1279>>IF       1298>>IF
      1303>>ASSIGN   1321>>ASSIGN   1329>>ASSIGN
XSS$BUFPTR
      1245**DCL-ENT  1304--CALL
XSS$GETMEM
      1246**DCL-ENT  1266--CALL     1275--CALL
XSS$RELMEM
      1247**DCL-ENT  1293--CALL     1328--CALL
XSS_MAX_LCID
      1249**DCL      1264>>ASSIGN   1267>>DOINDEX  1271>>ASSIGN   1288>>IF
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:51   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSC$GETCTX File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:52   
              MINI UREF LISTING

XSC$GETCTX      13**PROC
XSC$RELCTX    1317**ENTRY

PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:53   
      218        1        /*T***********************************************************/
      219        2        /*T*                                                         */
      220        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      221        4        /*T*                                                         */
      222        5        /*T***********************************************************/
      223        6        /*F*    NAME:   XSC$CTXPTR
      224        7
      225        8                Given an ACSE connection id, returns a pointer to the context for
      226        9                that connection.
      227       10        */
      228       11        XSC$CTXPTR: PROC( CCID, CTX$) ALTRET;
      229       12
      230       13    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
      231       14
      232       15    1       DCL XSC_MAPCCID$ PTR SYMREF;
      233       16    1       DCL XSS_MAX_LCID SBIN SYMREF;
      234       17
      235       18    1       DCL BLKX UBIN HALF HALIGNED;
      236       19    1       DCL CCID SBIN;
      237       20    1       DCL CTX$ PTR;
      238       21    1       DCL MAPCCID(0:0) UBIN HALF BASED( XSC_MAPCCID$) HALIGNED;
      239       22
      240       23    1       IF CCID <= 0 OR CCID > XSS_MAX_LCID OR XSC_MAPCCID$ = ADDR( NIL) THEN
      241       24    1   OOPS:
      242       25    1           ALTRETURN;
      243       26    1       BLKX = MAPCCID( CCID);
      244       27    1       CALL XSS$BUFPTR( BLKX, CTX$) ALTRET( OOPS);
      245       28    1       RETURN;
      246       29
      247       30    1       END XSC$CTXPTR;
      248       31        %EOD;

PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:54   
      No diagnostics issued in procedure XSC$CTXPTR.

   Procedure XSC$CTXPTR requires 26 words for executable code.
   Procedure XSC$CTXPTR requires 8 words of local(AUTO) storage.

PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:55   

 Object Unit name= XSC$CTXPTR                                 File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:51:44.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    26     32  XSC$CTXPTR
    1  RoData even  none     2      2  XSC$CTXPTR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  XSC$CTXPTR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XSS$BUFPTR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSC_MAPCCID$                          XSS_MAX_LCID
PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:56   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:57   


      218        1        /*T***********************************************************/
      219        2        /*T*                                                         */
      220        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      221        4        /*T*                                                         */
      222        5        /*T***********************************************************/
      223        6        /*F*    NAME:   XSC$CTXPTR
      224        7
      225        8                Given an ACSE connection id, returns a pointer to the context for
      226        9                that connection.
      227       10        */
      228       11        XSC$CTXPTR: PROC( CCID, CTX$) ALTRET;

     11  0 000000   000000 700200 xent  XSC$CTXPTR   TSX0  ! X66_AUTO_2
         0 000001   000010 000002                    ZERO    8,2

      229       12
      230       13    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
      231       14
      232       15    1       DCL XSC_MAPCCID$ PTR SYMREF;
      233       16    1       DCL XSS_MAX_LCID SBIN SYMREF;
      234       17
      235       18    1       DCL BLKX UBIN HALF HALIGNED;
      236       19    1       DCL CCID SBIN;
      237       20    1       DCL CTX$ PTR;
      238       21    1       DCL MAPCCID(0:0) UBIN HALF BASED( XSC_MAPCCID$) HALIGNED;
      239       22
      240       23    1       IF CCID <= 0 OR CCID > XSS_MAX_LCID OR XSC_MAPCCID$ = ADDR( NIL) THEN

     23  0 000002   200003 470500                    LDP0    @CCID,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000013 604400 0                  TMOZ    OOPS
         0 000005   000000 236100                    LDQ     0,,PR0
         0 000006   000000 116000 xsym               CMPQ    XSS_MAX_LCID
         0 000007   000013 605400 0                  TPNZ    OOPS
         0 000010   000000 236000 xsym               LDQ     XSC_MAPCCID$
         0 000011   000000 116000 1                  CMPQ    0
PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:58   
         0 000012   000014 601000 0                  TNZ     s:26

      241       24    1   OOPS:
      242       25    1           ALTRETURN;

     25  0 000013   000000 702200 xent  OOPS         TSX2  ! X66_AALT

      243       26    1       BLKX = MAPCCID( CCID);

     26  0 000014   000001 735000                    ALS     1
         0 000015   000000 471400 xsym               LDP1    XSC_MAPCCID$
         0 000016   000100 100505                    MLR     fill='000'O
         0 000017   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         0 000020   200005 000002                    ADSC9   BLKX,,AUTO               cn=0,n=2

      244       27    1       CALL XSS$BUFPTR( BLKX, CTX$) ALTRET( OOPS);

     27  0 000021   200004 236100                    LDQ     @CTX$,,AUTO
         0 000022   200007 756100                    STQ     BLKX+2,,AUTO
         0 000023   200005 633500                    EPPR3   BLKX,,AUTO
         0 000024   200006 453500                    STP3    BLKX+1,,AUTO
         0 000025   200006 630500                    EPPR0   BLKX+1,,AUTO
         0 000026   000001 631400 1                  EPPR1   1
         0 000027   000000 701000 xent               TSX1    XSS$BUFPTR
         0 000030   000013 702000 0                  TSX2    OOPS

      245       28    1       RETURN;

     28  0 000031   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 006014   000002 000000                                    ........
      246       29
      247       30    1       END XSC$CTXPTR;
      248       31        %EOD;

PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:59   
      No diagnostics issued in procedure XSC$CTXPTR.
PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:60   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CCID                      4-0-0/w PTR         r     1 @CTX$
     5-0-0/h UBIN(18)    r     1 BLKX                      *0-0-0/w SBIN        r     1 CCID
    *0-0-0/w PTR         r     1 CTX$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 XSC_MAPCCID$               0-0-0/w SBIN        r     1 XSS_MAX_LCID

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h UBIN(18)    r     1 MAPCCID(0:0)


   Procedure XSC$CTXPTR requires 26 words for executable code.
   Procedure XSC$CTXPTR requires 8 words of local(AUTO) storage.
PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:61   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:62   
          MINI XREF LISTING

BLKX
        18**DCL        26<<ASSIGN     27<>CALL
CCID
        19**DCL        11--PROC       23>>IF         23>>IF         26>>ASSIGN
CTX$
        20**DCL        11--PROC       27<>CALL
MAPCCID
        21**DCL        26>>ASSIGN
OOPS
        25**LABEL      27--CALLALT
XSC_MAPCCID$
        15**DCL        21--IMP-PTR    23>>IF         26>>ASSIGN
XSS$BUFPTR
        13**DCL-ENT    27--CALL
XSS_MAX_LCID
        16**DCL        23>>IF
PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:63   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XSC$CTXPTR File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:51 Page:64   
              MINI UREF LISTING

XSC$CTXPTR      11**PROC

PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:65   
      249        1        /*T***********************************************************/
      250        2        /*T*                                                         */
      251        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      252        4        /*T*                                                         */
      253        5        /*T***********************************************************/
      254        6        /*F*    NAME:   XSC$ACSE
      255        7
      256        8                XSC$ACSE is the sole entry to the ACSE (Application Control Service
      257        9                Elements) portion of the ISO Application layer from an application.
      258       10                The programmer fills in the necessary parameters in an ACSE param
      259       11                block and calls this routine.
      260       12
      261       13                If the desired request is carried out successfully, this routine
      262       14                RETURNs.  Otherwise, the ALTRETURN is taken after the parameter
      263       15                block field ERROR is filled in with the appropriate error code.
      264       16        */
      265       17        XSC$ACSE: PROC( CFPT) ALTRET;
      266       18        %INCLUDE B_SEGIDS_C;
      267      557        %INCLUDE B$JIT_C;
      268      871            %B$JIT0;
      269      960            %U$JIT1X;
      270      963            %M$JIT2;
      271      973            %F$JIT3X;
      272      976            %S$JIT4X;
      273      979            %J$JIT5X;
      274      982            %A$JIT6X;
      275      985        %INCLUDE XSC_ACSE_E;
      276     1063        %INCLUDE XSC_ACSE_M;
      277     1372            %XSC$PRIMITIVES( STCLASS="BASED( CFPT$)");
      278     1685            %XSC$GENERIC( FPTN=CFPT, STCLASS="");
      279     1744        %INCLUDE XSC_INTERNAL_E;
      280     1832        %INCLUDE XSC_INTERNAL_M;
      281     2177            %XSC$VBLK( NAME=XSC_VBLK, STCLASS=SYMREF);
      282     2283            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( CTX$)");
      283     2329            %XSC$VBLK( NAME=VBLK, STCLASS=AUTO);
      284     2435        %INCLUDE XSP_PRESENTATION_E;
      285     2534        %INCLUDE XSP_PRESENTATION_M;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:66   
      286     4020            %XSP$CTXTLIST( NAME=CLST);
      287     4047        %INCLUDE XSP_ASN1_M;
      288     4393            %XSP_ASN1_FPT( FPTN=AFPT, STCLASS="BASED( AFPT$)");
      289     4413        %INCLUDE UM_CP6;
      290     5265        %MACRO ERRORDEF( NAME=XSC_ERROR, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      291     5266                         ERR#=0, SEV=0);
      292     5267            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
      293     5268                          MON='0'B, ERR#=ERR#, SEV=SEV);
      294     5269        %MEND;
      295     5270        %INCLUDE XSC_PERR_C;
      296     5347            %ERRORDEF( NAME=XSC_E$RDONLYFPT, ERR#=%E$RDONLYFPT);
      297     5395            /*E*  ERROR:  XSC-E$RDONLYFPT-0
      298     5396                MESSAGE:  FPT is read-only; must be writeable.
      299     5397            */
      300     5398            %ERRORDEF( NAME=XSC_E$BADCID, ERR#=%E$BADCID);
      301     5446            /*E*  ERROR:  XSC-E$BADCID-0
      302     5447                MESSAGE:  Illegal connection identifier.
      303     5448            */
      304     5449            %ERRORDEF( NAME=XSC_E$BADFNC, ERR#=%E$BADFNC);
      305     5497            /*E*  ERROR:  XSC-E$BADFNC-0
      306     5498                MESSAGE:  Illegal function code.
      307     5499            */
      308     5500            %ERRORDEF( NAME=XSC_E$STATE, ERR#=%E$STATE);
      309     5548            /*E*  ERROR:  XSC-E$STATE-0
      310     5549                MESSAGE:  Connection state prevents this action.
      311     5550            */
      312     5551            %ERRORDEF( NAME=XSC_E$ABRTSRC, ERR#=%E$ABRTSRC);
      313     5599            /*E*  ERROR:  XSC-E$ABRTSRC-0
      314     5600                MESSAGE:  ABRTSRC contains an illegal value.
      315     5601            */
      316     5602            %ERRORDEF( NAME=XSC_E$ACN, ERR#=%E$ACN);
      317     5650            /*E*  ERROR:  XSC-E$ACN-0
      318     5651                MESSAGE:  ACN$ contains an illegal value.
      319     5652            */
      320     5653            %ERRORDEF( NAME=XSC_E$CTXT, ERR#=%E$CTXT);
      321     5701            /*E*  ERROR:  XSC-E$CTXT-0
      322     5702                MESSAGE:  CTXT$ contains an illegal value.
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:67   
      323     5703            */
      324     5704            %ERRORDEF( NAME=XSC_E$CTXTID, ERR#=%E$CTXTID);
      325     5752            /*E*  ERROR:  XSC-E$CTXTID-0
      326     5753                MESSAGE:  XSP_ASN1_FPT.CTXTID contains an illegal value.
      327     5754            */
      328     5755            %ERRORDEF( NAME=XSC_E$DATA, ERR#=%E$DATA);
      329     5803            /*E*  ERROR:  XSC-E$DATA-0
      330     5804                MESSAGE:  DATA$ contains an illegal value.
      331     5805            */
      332     5806            %ERRORDEF( NAME=XSC_E$IAEID, ERR#=%E$IAEID);
      333     5854            /*E*  ERROR:  XSC-E$IAEID-0
      334     5855                MESSAGE:  IAEID contains an illegal value.
      335     5856            */
      336     5857            %ERRORDEF( NAME=XSC_E$IAEQ, ERR#=%E$IAEQ);
      337     5905            /*E*  ERROR:  XSC-E$IAEQ-0
      338     5906                MESSAGE:  IAEQ$ contains an illegal value.
      339     5907            */
      340     5908            %ERRORDEF( NAME=XSC_E$IAPID, ERR#=%E$IAPID);
      341     5956            /*E*  ERROR:  XSC-E$IAPID-0
      342     5957                MESSAGE:  IAPID contains an illegal value.
      343     5958            */
      344     5959            %ERRORDEF( NAME=XSC_E$IAPT, ERR#=%E$IAPT);
      345     6007            /*E*  ERROR:  XSC-E$IAPT-0
      346     6008                MESSAGE:  IAPT$ contains an illegal value.
      347     6009            */
      348     6010            %ERRORDEF( NAME=XSC_E$IMPL, ERR#=%E$IMPL);
      349     6058            /*E*  ERROR:  XSC-E$IMPL-0
      350     6059                MESSAGE:  IMPL$ contains an illegal value.
      351     6060            */
      352     6061            %ERRORDEF( NAME=XSC_E$NXTX, ERR#=%E$NXTX);
      353     6109            /*E*  ERROR:  XSC-E$NXTX-0
      354     6110                MESSAGE:  XSP_ASN1_FPT.NXTX contains an illegal value.
      355     6111            */
      356     6112            %ERRORDEF( NAME=XSC_E$RAEID, ERR#=%E$RAEID);
      357     6160            /*E*  ERROR:  XSC-E$RAEID-0
      358     6161                MESSAGE:  RAEID contains an illegal value.
      359     6162            */
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:68   
      360     6163            %ERRORDEF( NAME=XSC_E$RAEQ, ERR#=%E$RAEQ);
      361     6211            /*E*  ERROR:  XSC-E$RAEQ-0
      362     6212                MESSAGE:  RAEQ$ contains an illegal value.
      363     6213            */
      364     6214            %ERRORDEF( NAME=XSC_E$RAPID, ERR#=%E$RAPID);
      365     6262            /*E*  ERROR:  XSC-E$RAPID-0
      366     6263                MESSAGE:  RAPID contains an illegal value.
      367     6264            */
      368     6265            %ERRORDEF( NAME=XSC_E$RAPT, ERR#=%E$RAPT);
      369     6313            /*E*  ERROR:  XSC-E$RAPT-0
      370     6314                MESSAGE:  RAPT$ contains an illegal value.
      371     6315            */
      372     6316            %ERRORDEF( NAME=XSC_E$REASON, ERR#=%E$REASON);
      373     6364            /*E*  ERROR:  XSC-E$REASON-0
      374     6365                MESSAGE:  REASON contains an illegal value.
      375     6366            */
      376     6367            %ERRORDEF( NAME=XSC_E$RESULT, ERR#=%E$RESULT);
      377     6415            /*E*  ERROR:  XSC-E$RESULT-0
      378     6416                MESSAGE:  RESULT contains an illegal value.
      379     6417            */
      380     6418            %ERRORDEF( NAME=XSC_E$RSDIAG, ERR#=%E$RSDIAG);
      381     6466            /*E*  ERROR:  XSC-E$RSDIAG-0
      382     6467                MESSAGE:  RSDIAG contains an illegal value.
      383     6468            */
      384     6469
      385     6470    1       DCL XSC$AMACHINE ENTRY(1) ALTRET;
      386     6471    1       DCL XSC$CTXPTR ENTRY(2) ALTRET;
      387     6472    1       DCL XSC$DUMPFPT ENTRY(1);
      388     6473    1       DCL XSC$RESOLVE ENTRY(1) ALTRET;
      389     6474    1       DCL XSS$SCREECH ENTRY(1);
      390     6475
      391     6476    1       DCL B$JIT$ PTR SYMREF;
      392     6477    1       DCL XSS_TRACE SBIN SYMREF;
      393     6478
      394     6479    1       DCL AFPT$ PTR;
      395     6480    1       DCL CCID SBIN;
      396     6481    1       DCL TEMP REDEF CCID SBIN;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:69   
      397     6482    1       DCL CTX$ PTR;
      398     6483    1       DCL CFPT$ PTR;
      399     6484    1       DCL 1 PX REDEF CFPT$,
      400     6485    1            2 OFFSET UBIN(18) UNAL,
      401     6486    1            2 * BIT(6) UNAL,
      402     6487    1            2 SEGID BIT(12) UNAL;
      403     6488        %EJECT;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:70   
      404     6489    1       CFPT$ = ADDR( CFPT);
      405     6490    2       IF PX.SEGID = %ISSID THEN DO;
      406     6491    2           TEMP = 64 + PX.OFFSET / 1024;  /* page number of FPT's page */
      407     6492    3           IF TEMP >= B$JIT.PLL AND TEMP <= B$JIT.PUL THEN DO;
      408     6493                    /* user's FPT was allocated in constant storage */
      409     6494    3               IF XSC$GENERIC.ERROR = XSC_E$RDONLYFPT THEN
      410     6495    3                   ALTRETURN;
      411     6496    3               CALL XSS$SCREECH( XSC_E$RDONLYFPT);
      412     6497    3               END;
      413     6498    2           END;
      414     6499            /* Initialize returned error code */
      415     6500    1       XSC$GENERIC.ERROR = '0'B;
      416     6501            /* Initialize AUTO copy of VBLK structure */
      417     6502    1       VBLK = XSC_VBLK;
      418     6503    1       VBLK.FPT$ = CFPT$;
      419     6504            /* Determine which connection is being referred to */
      420     6505    1       CCID = XSC$GENERIC.CCID;
      421     6506    1       CALL XSC$CTXPTR( CCID, CTX$)
      422     6507    2       WHENALTRETURN DO;
      423     6508    2           XSC$GENERIC.ERROR = XSC_E$BADCID;
      424     6509    2           ALTRETURN;
      425     6510    2           END;
      426     6511            /* Update AUTO VBLK context ptr */
      427     6512    1       VBLK.CTX$ = CTX$;
      428     6513        %EJECT;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:71   
      429     6514            /* Split depending on the ACSE function code requested */
      430     6515    2       DO CASE( XSC$GENERIC.FNC);
      431     6516    2           CASE( %XSC_FNC_AASCREQ#);
      432     6517    2               CALL CKTXTH( XSC_E$ACN, XSC$ASSOCIATE.ACN$, %XSC_MAXACN#)
      433     6518    2                       ALTRET( GETOUT);
      434     6519    2               CALL CKTXTC( XSC_E$IAPT, XSC$ASSOCIATE.IAPT$, %XSC_MAXAPT#)
      435     6520    2                       ALTRET( GETOUT);
      436     6521    2               CALL CKTXTC( XSC_E$IAEQ, XSC$ASSOCIATE.IAEQ$, %XSC_MAXAEQ#)
      437     6522    2                       ALTRET( GETOUT);
      438     6523    2               CALL CKTXTC( XSC_E$RAPT, XSC$ASSOCIATE.RAPT$, %XSC_MAXAPT#)
      439     6524    2                       ALTRET( GETOUT);
      440     6525    2               CALL CKTXTC( XSC_E$RAEQ, XSC$ASSOCIATE.RAEQ$, %XSC_MAXAEQ#)
      441     6526    2                       ALTRET( GETOUT);
      442     6527    2               ;  /*N* validate IMPL$ */
      443     6528    2               CALL CKCTXT( XSC_E$CTXT, XSC$ASSOCIATE.CTXT$) ALTRET( GETOUT);
      444     6529    2               CALL CKDATA( XSC_E$DATA, XSC$ASSOCIATE.DATA$, %XSC_MAXDATA#)
      445     6530    2                       ALTRET( GETOUT);
      446     6531    2               CALL XSC$RESOLVE( XSC$ASSOCIATE) ALTRET( GETOUT);
      447     6532    2               VBLK.EVENT = %XSC_CEV_AASCREQ;
      448     6533    2           CASE( %XSC_FNC_AASCRSP#);
      449     6534    2               CALL CKTXTH( XSC_E$ACN, XSC$ASSOCIATE.ACN$, %XSC_MAXACN#)
      450     6535    2                       ALTRET( GETOUT);
      451     6536    2               CALL CKTXTC( XSC_E$RAPT, XSC$ASSOCIATE.RAPT$, %XSC_MAXAPT#)
      452     6537    2                       ALTRET( GETOUT);
      453     6538    2               CALL CKTXTC( XSC_E$RAEQ, XSC$ASSOCIATE.RAEQ$, %XSC_MAXAEQ#)
      454     6539    2                       ALTRET( GETOUT);
      455     6540    2               ;  /*N* validate IMPL$ */
      456     6541    2               CALL CKCTXT( XSC_E$CTXT, XSC$ASSOCIATE.CTXT$) ALTRET( GETOUT);
      457     6542    2               CALL CKDATA( XSC_E$DATA, XSC$ASSOCIATE.DATA$, %XSC_MAXDATA#)
      458     6543    2                       ALTRET( GETOUT);
      459     6544    2               CALL CKRSLT( XSC_E$RESULT) ALTRET( GETOUT);
      460     6545    2               CALL XSC$RESOLVE( XSC$ASSOCIATE) ALTRET( GETOUT);
      461     6546    2               IF XSC$ASSOCIATE.RESULT = 0 THEN
      462     6547    2                   VBLK.EVENT = %XSC_CEV_AASCRSP;
      463     6548    2               ELSE
      464     6549    2                   VBLK.EVENT = %XSC_CEV_AASCRSN;
      465     6550    2           CASE( %XSC_FNC_ARELREQ#);
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:72   
      466     6551    2               CALL CKDATA( XSC_E$DATA, XSC$RELEASE.DATA$, %XSC_MAXDATA#)
      467     6552    2                       ALTRET( GETOUT);
      468     6553    2               CALL CKRELREQRSN( XSC_E$REASON) ALTRET( GETOUT);
      469     6554    2               VBLK.EVENT = %XSC_CEV_ARELREQ;
      470     6555    2           CASE( %XSC_FNC_ARELRSP#);
      471     6556    2               CALL CKDATA( XSC_E$DATA, XSC$RELEASE.DATA$, %XSC_MAXDATA#)
      472     6557    2                       ALTRET( GETOUT);
      473     6558    2               CALL CKRELRSPRSN( XSC_E$REASON) ALTRET( GETOUT);
      474     6559    2               IF XSC$RELEASE.REASON = 0 THEN
      475     6560    2                   VBLK.EVENT = %XSC_CEV_ARELRSP;
      476     6561    2               ELSE
      477     6562    2                   VBLK.EVENT = %XSC_CEV_ARELRSN;
      478     6563    2           CASE( %XSC_FNC_AUABREQ#);
      479     6564    2               CALL CKDATA( XSC_E$DATA, XSC$U_ABORT.DATA$, %XSC_MAXDATA#)
      480     6565    2                       ALTRET( GETOUT);
      481     6566    2               CALL CKABRTSRC( XSC_E$ABRTSRC) ALTRET( GETOUT);
      482     6567    2               VBLK.EVENT = %XSC_CEV_AUABREQ;
      483     6568    2           CASE( ELSE);
      484     6569    2               XSC$GENERIC.ERROR = XSC_E$BADFNC;
      485     6570    2               ALTRETURN;
      486     6571    2           END;
      487     6572    1       IF XSS_TRACE > 0 THEN
      488     6573    1           CALL XSC$DUMPFPT( XSC$GENERIC);
      489     6574    1       CALL XSC$AMACHINE( VBLK)
      490     6575    2       WHENALTRETURN DO;
      491     6576    2   ABORT:
      492     6577    2           IF XSC$GENERIC.ERROR = '0'O THEN
      493     6578    2               XSC$GENERIC.ERROR = XSC_E$STATE;
      494     6579    2   GETOUT:
      495     6580    2           ALTRETURN;
      496     6581    2           END;
      497     6582    1       RETURN;
      498     6583        %EJECT;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:73   
      499     6584    1   CKDATA: PROC( ERR, PTR$, UB, LB) ALTRET;
      500     6585
      501     6586    2       DCL B$PTR PTR BASED CALIGNED;
      502     6587    2       DCL B$UBIN9 UBIN(9) BASED CALIGNED;
      503     6588    2       DCL B$UBIN18 UBIN(18) BASED HALIGNED;
      504     6589    2       DCL ERR BIT(36) ALIGNED;
      505     6590    2       DCL LB SBIN;  /* lower bound on size of framed data */
      506     6591    2       DCL LEN SBIN;
      507     6592    2       DCL LOWER SBIN;
      508     6593    2       DCL UB SBIN;  /* upper bound on size of framed data */
      509     6594    2       DCL UPPER REDEF UB SBIN;
      510     6595    2       DCL PTR$ PTR;
      511     6596
      512     6597    2       LEN = 0;
      513     6598    2       AFPT$ = PTR$;
      514     6599    3       DO WHILE( AFPT$ ~= ADDR( NIL));
      515     6600    4           IF AFPT.NXTX = 0 THEN DO;
      516     6601    4               XSC$GENERIC.ERROR = XSC_E$NXTX;
      517     6602    4               ALTRETURN;
      518     6603    4               END;
      519     6604    3           LEN = LEN + AFPT.NXTX;
      520     6605    3           VBLK.DATA.SIZE = LEN;
      521     6606    3           AFPT$ = AFPT.LINK$;
      522     6607    3           END;
      523     6608    2   COMMON:
      524     6609    2       IF ADDR( LB) = ADDR( NIL) THEN
      525     6610    2           LOWER = 0;
      526     6611    2       ELSE
      527     6612    2           LOWER = LB;
      528     6613    3       IF LEN < LOWER OR LEN > UPPER THEN DO;
      529     6614    3           XSC$GENERIC.ERROR = ERR;
      530     6615    3           ALTRETURN;
      531     6616    3           END;
      532     6617    2       RETURN;
      533     6618
      534     6619    2   CKTXTC: ENTRY( ERR, PTR$, UB, LB) ALTRET;
      535     6620
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:74   
      536     6621    2       IF PTR$ = ADDR( NIL) THEN
      537     6622    2           LEN = 0;
      538     6623    2       ELSE
      539     6624    2           LEN = PTR$->B$UBIN9;
      540     6625    2       GOTO COMMON;
      541     6626
      542     6627    2   CKTXTH: ENTRY( ERR, PTR$, UB, LB) ALTRET;
      543     6628
      544     6629    2       IF PTR$ = ADDR( NIL) THEN
      545     6630    2           LEN = 0;
      546     6631    2       ELSE
      547     6632    2           LEN = PTR$->B$UBIN18;
      548     6633    2       GOTO COMMON;
      549     6634
      550     6635    2       END CKDATA;
      551     6636
      552     6637    1   CKCTXT: PROC( ERR, PTR$) ALTRET;
      553     6638
      554     6639    2       DCL B$PTR PTR BASED CALIGNED;
      555     6640    2       DCL ERR BIT(36) ALIGNED;
      556     6641    2       DCL I SBIN;
      557     6642    2       DCL P$ PTR;
      558     6643    2       DCL PTR$ PTR;
      559     6644    2       DCL ZILCH SBIN;
      560     6645
      561     6646    2       IF PTR$ = ADDR( NIL) THEN
      562     6647    2           RETURN;  /* XSC$GENERIC.CTXT$ is ADDR( NIL).  Fine. */
      563     6648    2       ZILCH = 0;
      564     6649    3       DO I = 1 TO PTR$->CLST.COUNT(0);
      565     6650    3           P$ = PTR$->CLST.CTXT$( I);
      566     6651    3           IF P$ = ADDR( NIL) THEN
      567     6652    3               ZILCH = ZILCH + 1;  /* CLST.CTXT$( I) is ADDR( NIL).  O.K. */
      568     6653    3           ELSE
      569     6654    3               CALL CKTXTH( ERR, P$, 20, 1)
      570     6655    4               WHENALTRETURN DO;
      571     6656                        /* CLST.CTXT$( I) points at something incorrect */
      572     6657    4                   GOTO GETOUT;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:75   
      573     6658    4                   END;
      574     6659    3           END;
      575     6660    3       IF ZILCH >= PTR$->CLST.COUNT(0) THEN DO;
      576     6661                /* every CLST.CTXT$( I) is ADDR( NIL), or COUNT is zero */
      577     6662    3   GETOUT:
      578     6663    3           XSC$GENERIC.ERROR = ERR;
      579     6664    3           ALTRETURN;
      580     6665    3           END;
      581     6666    2       RETURN;
      582     6667
      583     6668    2       END CKCTXT;
      584     6669
      585     6670    1   CKRSLT: PROC( ERR) ALTRET;
      586     6671
      587     6672    2       DCL ERR BIT(36) ALIGNED;
      588     6673
      589     6674    3       IF XSC$ASSOCIATE.RESULT > %XSC_RSLT_TRANREJECT# THEN DO;
      590     6675    3   GETOUT:
      591     6676    3           XSC$GENERIC.ERROR = ERR;
      592     6677    3           ALTRETURN;
      593     6678    3           END;
      594     6679    2       IF XSC$ASSOCIATE.RSDIAG > %XSC_RSDIAG_BADRAEID# THEN
      595     6680    2           GOTO GETOUT;
      596     6681    2       RETURN;
      597     6682
      598     6683    2   CKRELREQRSN: ENTRY( ERR) ALTRET;
      599     6684
      600     6685    2       IF XSC$RELEASE.REASON > %XSC_RELREQ_URGENT# AND
      601     6686    2               XSC$RELEASE.REASON ~= %XSC_RELREQ_USERDEFINED# THEN
      602     6687    2           GOTO GETOUT;
      603     6688    2       RETURN;
      604     6689
      605     6690    2   CKRELRSPRSN: ENTRY( ERR) ALTRET;
      606     6691
      607     6692    2       IF XSC$RELEASE.REASON > %XSC_RELRSP_NOTFINISHED# AND
      608     6693    2               XSC$RELEASE.REASON ~= %XSC_RELRSP_USERDEFINED# THEN
      609     6694    2           GOTO GETOUT;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:76   
      610     6695    2       RETURN;
      611     6696
      612     6697    2   CKABRTSRC: ENTRY( ERR) ALTRET;
      613     6698
      614     6699    2       IF XSC$U_ABORT.ABRTSRC > %XSC_ABRTSRC_PROVIDER# THEN
      615     6700    2           GOTO GETOUT;
      616     6701    2       RETURN;
      617     6702
      618     6703    2       END CKRSLT;
      619     6704
      620     6705    1       END XSC$ACSE;
      621     6706        %EOD;

PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:77   
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   B$JIT_C.:LIB_E05  is referenced.
   B_SEGIDS_C.:LIB_E05  is referenced.
      No diagnostics issued in procedure XSC$ACSE.

   Procedure XSC$ACSE requires 464 words for executable code.
   Procedure XSC$ACSE requires 32 words of local(AUTO) storage.

PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:78   

 Object Unit name= XSC$ACSE                                   File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:51:46.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     22     26  XSC$ACSE
    1   Proc  even  none   464    720  XSC$ACSE
    2  RoData even  none    22     26  XSC$ACSE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  XSC$ACSE
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:79   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  XSC_E$RDONLYFPT                    0      1  XSC_E$BADCID
    0      2  XSC_E$BADFNC                       0      3  XSC_E$STATE
    0      4  XSC_E$ABRTSRC                      0      5  XSC_E$ACN
    0      6  XSC_E$CTXT                         0      7  XSC_E$CTXTID
    0     10  XSC_E$DATA                         0     11  XSC_E$IAEID
    0     12  XSC_E$IAEQ                         0     13  XSC_E$IAPID
    0     14  XSC_E$IAPT                         0     15  XSC_E$IMPL
    0     16  XSC_E$NXTX                         0     17  XSC_E$RAEID
    0     20  XSC_E$RAEQ                         0     21  XSC_E$RAPID
    0     22  XSC_E$RAPT                         0     23  XSC_E$REASON
    0     24  XSC_E$RESULT                       0     25  XSC_E$RSDIAG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 XSS$SCREECH
 yes     yes           Std       2 XSC$CTXPTR
 yes     yes           Std       1 XSC$RESOLVE
         yes           Std       1 XSC$DUMPFPT
 yes     yes           Std       1 XSC$AMACHINE
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSC_VBLK                              B$JIT$                                XSS_TRACE
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:80   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:81   


      249        1        /*T***********************************************************/
      250        2        /*T*                                                         */
      251        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      252        4        /*T*                                                         */
      253        5        /*T***********************************************************/
      254        6        /*F*    NAME:   XSC$ACSE
      255        7
      256        8                XSC$ACSE is the sole entry to the ACSE (Application Control Service
      257        9                Elements) portion of the ISO Application layer from an application.
      258       10                The programmer fills in the necessary parameters in an ACSE param
      259       11                block and calls this routine.
      260       12
      261       13                If the desired request is carried out successfully, this routine
      262       14                RETURNs.  Otherwise, the ALTRETURN is taken after the parameter
      263       15                block field ERROR is filled in with the appropriate error code.
      264       16        */
      265       17        XSC$ACSE: PROC( CFPT) ALTRET;

     17  1 000000   000000 700200 xent  XSC$ACSE     TSX0  ! X66_AUTO_1
         1 000001   000040 000001                    ZERO    32,1

      266       18        %INCLUDE B_SEGIDS_C;
      267      557        %INCLUDE B$JIT_C;
      268      871            %B$JIT0;
      269      960            %U$JIT1X;
      270      963            %M$JIT2;
      271      973            %F$JIT3X;
      272      976            %S$JIT4X;
      273      979            %J$JIT5X;
      274      982            %A$JIT6X;
      275      985        %INCLUDE XSC_ACSE_E;
      276     1063        %INCLUDE XSC_ACSE_M;
      277     1372            %XSC$PRIMITIVES( STCLASS="BASED( CFPT$)");
      278     1685            %XSC$GENERIC( FPTN=CFPT, STCLASS="");
      279     1744        %INCLUDE XSC_INTERNAL_E;
      280     1832        %INCLUDE XSC_INTERNAL_M;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:82   
      281     2177            %XSC$VBLK( NAME=XSC_VBLK, STCLASS=SYMREF);
      282     2283            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( CTX$)");
      283     2329            %XSC$VBLK( NAME=VBLK, STCLASS=AUTO);
      284     2435        %INCLUDE XSP_PRESENTATION_E;
      285     2534        %INCLUDE XSP_PRESENTATION_M;
      286     4020            %XSP$CTXTLIST( NAME=CLST);
      287     4047        %INCLUDE XSP_ASN1_M;
      288     4393            %XSP_ASN1_FPT( FPTN=AFPT, STCLASS="BASED( AFPT$)");
      289     4413        %INCLUDE UM_CP6;
      290     5265        %MACRO ERRORDEF( NAME=XSC_ERROR, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      291     5266                         ERR#=0, SEV=0);
      292     5267            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
      293     5268                          MON='0'B, ERR#=ERR#, SEV=SEV);
      294     5269        %MEND;
      295     5270        %INCLUDE XSC_PERR_C;
      296     5347            %ERRORDEF( NAME=XSC_E$RDONLYFPT, ERR#=%E$RDONLYFPT);
      297     5395            /*E*  ERROR:  XSC-E$RDONLYFPT-0
      298     5396                MESSAGE:  FPT is read-only; must be writeable.
      299     5397            */
      300     5398            %ERRORDEF( NAME=XSC_E$BADCID, ERR#=%E$BADCID);
      301     5446            /*E*  ERROR:  XSC-E$BADCID-0
      302     5447                MESSAGE:  Illegal connection identifier.
      303     5448            */
      304     5449            %ERRORDEF( NAME=XSC_E$BADFNC, ERR#=%E$BADFNC);
      305     5497            /*E*  ERROR:  XSC-E$BADFNC-0
      306     5498                MESSAGE:  Illegal function code.
      307     5499            */
      308     5500            %ERRORDEF( NAME=XSC_E$STATE, ERR#=%E$STATE);
      309     5548            /*E*  ERROR:  XSC-E$STATE-0
      310     5549                MESSAGE:  Connection state prevents this action.
      311     5550            */
      312     5551            %ERRORDEF( NAME=XSC_E$ABRTSRC, ERR#=%E$ABRTSRC);
      313     5599            /*E*  ERROR:  XSC-E$ABRTSRC-0
      314     5600                MESSAGE:  ABRTSRC contains an illegal value.
      315     5601            */
      316     5602            %ERRORDEF( NAME=XSC_E$ACN, ERR#=%E$ACN);
      317     5650            /*E*  ERROR:  XSC-E$ACN-0
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:83   
      318     5651                MESSAGE:  ACN$ contains an illegal value.
      319     5652            */
      320     5653            %ERRORDEF( NAME=XSC_E$CTXT, ERR#=%E$CTXT);
      321     5701            /*E*  ERROR:  XSC-E$CTXT-0
      322     5702                MESSAGE:  CTXT$ contains an illegal value.
      323     5703            */
      324     5704            %ERRORDEF( NAME=XSC_E$CTXTID, ERR#=%E$CTXTID);
      325     5752            /*E*  ERROR:  XSC-E$CTXTID-0
      326     5753                MESSAGE:  XSP_ASN1_FPT.CTXTID contains an illegal value.
      327     5754            */
      328     5755            %ERRORDEF( NAME=XSC_E$DATA, ERR#=%E$DATA);
      329     5803            /*E*  ERROR:  XSC-E$DATA-0
      330     5804                MESSAGE:  DATA$ contains an illegal value.
      331     5805            */
      332     5806            %ERRORDEF( NAME=XSC_E$IAEID, ERR#=%E$IAEID);
      333     5854            /*E*  ERROR:  XSC-E$IAEID-0
      334     5855                MESSAGE:  IAEID contains an illegal value.
      335     5856            */
      336     5857            %ERRORDEF( NAME=XSC_E$IAEQ, ERR#=%E$IAEQ);
      337     5905            /*E*  ERROR:  XSC-E$IAEQ-0
      338     5906                MESSAGE:  IAEQ$ contains an illegal value.
      339     5907            */
      340     5908            %ERRORDEF( NAME=XSC_E$IAPID, ERR#=%E$IAPID);
      341     5956            /*E*  ERROR:  XSC-E$IAPID-0
      342     5957                MESSAGE:  IAPID contains an illegal value.
      343     5958            */
      344     5959            %ERRORDEF( NAME=XSC_E$IAPT, ERR#=%E$IAPT);
      345     6007            /*E*  ERROR:  XSC-E$IAPT-0
      346     6008                MESSAGE:  IAPT$ contains an illegal value.
      347     6009            */
      348     6010            %ERRORDEF( NAME=XSC_E$IMPL, ERR#=%E$IMPL);
      349     6058            /*E*  ERROR:  XSC-E$IMPL-0
      350     6059                MESSAGE:  IMPL$ contains an illegal value.
      351     6060            */
      352     6061            %ERRORDEF( NAME=XSC_E$NXTX, ERR#=%E$NXTX);
      353     6109            /*E*  ERROR:  XSC-E$NXTX-0
      354     6110                MESSAGE:  XSP_ASN1_FPT.NXTX contains an illegal value.
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:84   
      355     6111            */
      356     6112            %ERRORDEF( NAME=XSC_E$RAEID, ERR#=%E$RAEID);
      357     6160            /*E*  ERROR:  XSC-E$RAEID-0
      358     6161                MESSAGE:  RAEID contains an illegal value.
      359     6162            */
      360     6163            %ERRORDEF( NAME=XSC_E$RAEQ, ERR#=%E$RAEQ);
      361     6211            /*E*  ERROR:  XSC-E$RAEQ-0
      362     6212                MESSAGE:  RAEQ$ contains an illegal value.
      363     6213            */
      364     6214            %ERRORDEF( NAME=XSC_E$RAPID, ERR#=%E$RAPID);
      365     6262            /*E*  ERROR:  XSC-E$RAPID-0
      366     6263                MESSAGE:  RAPID contains an illegal value.
      367     6264            */
      368     6265            %ERRORDEF( NAME=XSC_E$RAPT, ERR#=%E$RAPT);
      369     6313            /*E*  ERROR:  XSC-E$RAPT-0
      370     6314                MESSAGE:  RAPT$ contains an illegal value.
      371     6315            */
      372     6316            %ERRORDEF( NAME=XSC_E$REASON, ERR#=%E$REASON);
      373     6364            /*E*  ERROR:  XSC-E$REASON-0
      374     6365                MESSAGE:  REASON contains an illegal value.
      375     6366            */
      376     6367            %ERRORDEF( NAME=XSC_E$RESULT, ERR#=%E$RESULT);
      377     6415            /*E*  ERROR:  XSC-E$RESULT-0
      378     6416                MESSAGE:  RESULT contains an illegal value.
      379     6417            */
      380     6418            %ERRORDEF( NAME=XSC_E$RSDIAG, ERR#=%E$RSDIAG);
      381     6466            /*E*  ERROR:  XSC-E$RSDIAG-0
      382     6467                MESSAGE:  RSDIAG contains an illegal value.
      383     6468            */
      384     6469
      385     6470    1       DCL XSC$AMACHINE ENTRY(1) ALTRET;
      386     6471    1       DCL XSC$CTXPTR ENTRY(2) ALTRET;
      387     6472    1       DCL XSC$DUMPFPT ENTRY(1);
      388     6473    1       DCL XSC$RESOLVE ENTRY(1) ALTRET;
      389     6474    1       DCL XSS$SCREECH ENTRY(1);
      390     6475
      391     6476    1       DCL B$JIT$ PTR SYMREF;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:85   
      392     6477    1       DCL XSS_TRACE SBIN SYMREF;
      393     6478
      394     6479    1       DCL AFPT$ PTR;
      395     6480    1       DCL CCID SBIN;
      396     6481    1       DCL TEMP REDEF CCID SBIN;
      397     6482    1       DCL CTX$ PTR;
      398     6483    1       DCL CFPT$ PTR;
      399     6484    1       DCL 1 PX REDEF CFPT$,
      400     6485    1            2 OFFSET UBIN(18) UNAL,
      401     6486    1            2 * BIT(6) UNAL,
      402     6487    1            2 SEGID BIT(12) UNAL;
      403     6488        %EJECT;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:86   
      404     6489    1       CFPT$ = ADDR( CFPT);

   6489  1 000002   200003 236100                    LDQ     @CFPT,,AUTO
         1 000003   200016 756100                    STQ     CFPT$,,AUTO

      405     6490    2       IF PX.SEGID = %ISSID THEN DO;

   6490  1 000004   200016 236100                    LDQ     CFPT$,,AUTO
         1 000005   007777 376007                    ANQ     4095,DL
         1 000006   006000 116007                    CMPQ    3072,DL
         1 000007   000037 601000 1                  TNZ     s:6500

      406     6491    2           TEMP = 64 + PX.OFFSET / 1024;  /* page number of FPT's page */

   6491  1 000010   200016 236100                    LDQ     CFPT$,,AUTO
         1 000011   000022 772000                    QRL     18
         1 000012   000012 772000                    QRL     10
         1 000013   000100 036007                    ADLQ    64,DL
         1 000014   200014 756100                    STQ     CCID,,AUTO

      407     6492    3           IF TEMP >= B$JIT.PLL AND TEMP <= B$JIT.PUL THEN DO;

   6492  1 000015   000000 470400 xsym               LDP0    B$JIT$
         1 000016   000176 236100                    LDQ     126,,PR0
         1 000017   000022 772000                    QRL     18
         1 000020   200014 116100                    CMPQ    CCID,,AUTO
         1 000021   000037 605400 1                  TPNZ    s:6500
         1 000022   000176 236100                    LDQ     126,,PR0
         1 000023   777777 376007                    ANQ     -1,DL
         1 000024   200014 116100                    CMPQ    CCID,,AUTO
         1 000025   000037 604000 1                  TMI     s:6500

      408     6493                    /* user's FPT was allocated in constant storage */
      409     6494    3               IF XSC$GENERIC.ERROR = XSC_E$RDONLYFPT THEN

   6494  1 000026   200016 471500                    LDP1    CFPT$,,AUTO
         1 000027   100001 236100                    LDQ     1,,PR1
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:87   
         1 000030   000000 116000 0                  CMPQ    XSC_E$RDONLYFPT
         1 000031   000033 601000 1                  TNZ     s:6496

      410     6495    3                   ALTRETURN;

   6495  1 000032   000000 702200 xent               TSX2  ! X66_AALT

      411     6496    3               CALL XSS$SCREECH( XSC_E$RDONLYFPT);

   6496  1 000033   000001 630400 2                  EPPR0   1
         1 000034   000000 631400 2                  EPPR1   0
         1 000035   000000 701000 xent               TSX1    XSS$SCREECH
         1 000036   000000 011000                    NOP     0

      412     6497    3               END;

      413     6498    2           END;

      414     6499            /* Initialize returned error code */
      415     6500    1       XSC$GENERIC.ERROR = '0'B;

   6500  1 000037   200016 470500                    LDP0    CFPT$,,AUTO
         1 000040   000001 450100                    STZ     1,,PR0

      416     6501            /* Initialize AUTO copy of VBLK structure */
      417     6502    1       VBLK = XSC_VBLK;

   6502  1 000041   000100 100400                    MLR     fill='000'O
         1 000042   000000 000034 xsym               ADSC9   XSC_VBLK                 cn=0,n=28
         1 000043   200004 000034                    ADSC9   VBLK,,AUTO               cn=0,n=28

      418     6503    1       VBLK.FPT$ = CFPT$;

   6503  1 000044   200016 236100                    LDQ     CFPT$,,AUTO
         1 000045   200005 756100                    STQ     VBLK+1,,AUTO

      419     6504            /* Determine which connection is being referred to */
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:88   
      420     6505    1       CCID = XSC$GENERIC.CCID;

   6505  1 000046   000000 236100                    LDQ     0,,PR0
         1 000047   000022 772000                    QRL     18
         1 000050   000777 376007                    ANQ     511,DL
         1 000051   200014 756100                    STQ     CCID,,AUTO

      421     6506    1       CALL XSC$CTXPTR( CCID, CTX$)

   6506  1 000052   200015 631500                    EPPR1   CTX$,,AUTO
         1 000053   200037 451500                    STP1    LOWER+3,,AUTO
         1 000054   200014 633500                    EPPR3   CCID,,AUTO
         1 000055   200036 453500                    STP3    LOWER+2,,AUTO
         1 000056   200036 630500                    EPPR0   LOWER+2,,AUTO
         1 000057   000002 631400 2                  EPPR1   2
         1 000060   000000 701000 xent               TSX1    XSC$CTXPTR
         1 000061   000063 702000 1                  TSX2    s:6508
         1 000062   000067 710000 1                  TRA     s:6512

      422     6507    2       WHENALTRETURN DO;

      423     6508    2           XSC$GENERIC.ERROR = XSC_E$BADCID;

   6508  1 000063   000001 236000 0                  LDQ     XSC_E$BADCID
         1 000064   200016 470500                    LDP0    CFPT$,,AUTO
         1 000065   000001 756100                    STQ     1,,PR0

      424     6509    2           ALTRETURN;

   6509  1 000066   000000 702200 xent               TSX2  ! X66_AALT

      425     6510    2           END;
      426     6511            /* Update AUTO VBLK context ptr */
      427     6512    1       VBLK.CTX$ = CTX$;

   6512  1 000067   200015 236100                    LDQ     CTX$,,AUTO
         1 000070   200004 756100                    STQ     VBLK,,AUTO
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:89   

      428     6513        %EJECT;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:90   
      429     6514            /* Split depending on the ACSE function code requested */
      430     6515    2       DO CASE( XSC$GENERIC.FNC);

   6515  1 000071   200016 470500                    LDP0    CFPT$,,AUTO
         1 000072   000000 236100                    LDQ     0,,PR0
         1 000073   000033 772000                    QRL     27
         1 000074   000012 116007                    CMPQ    10,DL
         1 000075   000077 602006 1                  TNC     s:6515+6,QL
         1 000076   000433 710000 1                  TRA     s:6569
         1 000077   000433 710000 1                  TRA     s:6569
         1 000100   000111 710000 1                  TRA     s:6517
         1 000101   000433 710000 1                  TRA     s:6569
         1 000102   000231 710000 1                  TRA     s:6534
         1 000103   000433 710000 1                  TRA     s:6569
         1 000104   000336 710000 1                  TRA     s:6551
         1 000105   000433 710000 1                  TRA     s:6569
         1 000106   000360 710000 1                  TRA     s:6556
         1 000107   000433 710000 1                  TRA     s:6569
         1 000110   000411 710000 1                  TRA     s:6564

      431     6516    2           CASE( %XSC_FNC_AASCREQ#);

      432     6517    2               CALL CKTXTH( XSC_E$ACN, XSC$ASSOCIATE.ACN$, %XSC_MAXACN#)

   6517  1 000111   000004 236000 2                  LDQ     4
         1 000112   200032 756100                    STQ     @UB+1,,AUTO
         1 000113   000005 236000 2                  LDQ     5
         1 000114   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000115   200016 236100                    LDQ     CFPT$,,AUTO
         1 000116   000003 036003                    ADLQ    3,DU
         1 000117   200030 756100                    STQ     @ERR+1,,AUTO
         1 000120   000006 236000 2                  LDQ     6
         1 000121   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000122   000552 701000 1                  TSX1    CKTXTH
         1 000123   000460 702000 1                  TSX2    GETOUT

      433     6518    2                       ALTRET( GETOUT);
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:91   
      434     6519    2               CALL CKTXTC( XSC_E$IAPT, XSC$ASSOCIATE.IAPT$, %XSC_MAXAPT#)

   6519  1 000124   000004 236000 2                  LDQ     4
         1 000125   200032 756100                    STQ     @UB+1,,AUTO
         1 000126   000010 236000 2                  LDQ     8
         1 000127   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000130   200016 236100                    LDQ     CFPT$,,AUTO
         1 000131   000004 036003                    ADLQ    4,DU
         1 000132   200030 756100                    STQ     @ERR+1,,AUTO
         1 000133   000011 236000 2                  LDQ     9
         1 000134   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000135   000536 701000 1                  TSX1    CKTXTC
         1 000136   000460 702000 1                  TSX2    GETOUT

      435     6520    2                       ALTRET( GETOUT);
      436     6521    2               CALL CKTXTC( XSC_E$IAEQ, XSC$ASSOCIATE.IAEQ$, %XSC_MAXAEQ#)

   6521  1 000137   000004 236000 2                  LDQ     4
         1 000140   200032 756100                    STQ     @UB+1,,AUTO
         1 000141   000010 236000 2                  LDQ     8
         1 000142   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000143   200016 236100                    LDQ     CFPT$,,AUTO
         1 000144   000005 036003                    ADLQ    5,DU
         1 000145   200030 756100                    STQ     @ERR+1,,AUTO
         1 000146   000012 236000 2                  LDQ     10
         1 000147   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000150   000536 701000 1                  TSX1    CKTXTC
         1 000151   000460 702000 1                  TSX2    GETOUT

      437     6522    2                       ALTRET( GETOUT);
      438     6523    2               CALL CKTXTC( XSC_E$RAPT, XSC$ASSOCIATE.RAPT$, %XSC_MAXAPT#)

   6523  1 000152   000004 236000 2                  LDQ     4
         1 000153   200032 756100                    STQ     @UB+1,,AUTO
         1 000154   000010 236000 2                  LDQ     8
         1 000155   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000156   200016 236100                    LDQ     CFPT$,,AUTO
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:92   
         1 000157   000010 036003                    ADLQ    8,DU
         1 000160   200030 756100                    STQ     @ERR+1,,AUTO
         1 000161   000013 236000 2                  LDQ     11
         1 000162   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000163   000536 701000 1                  TSX1    CKTXTC
         1 000164   000460 702000 1                  TSX2    GETOUT

      439     6524    2                       ALTRET( GETOUT);
      440     6525    2               CALL CKTXTC( XSC_E$RAEQ, XSC$ASSOCIATE.RAEQ$, %XSC_MAXAEQ#)

   6525  1 000165   000004 236000 2                  LDQ     4
         1 000166   200032 756100                    STQ     @UB+1,,AUTO
         1 000167   000010 236000 2                  LDQ     8
         1 000170   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000171   200016 236100                    LDQ     CFPT$,,AUTO
         1 000172   000011 036003                    ADLQ    9,DU
         1 000173   200030 756100                    STQ     @ERR+1,,AUTO
         1 000174   000014 236000 2                  LDQ     12
         1 000175   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000176   000536 701000 1                  TSX1    CKTXTC
         1 000177   000460 702000 1                  TSX2    GETOUT

      441     6526    2                       ALTRET( GETOUT);
      442     6527    2               ;  /*N* validate IMPL$ */
      443     6528    2               CALL CKCTXT( XSC_E$CTXT, XSC$ASSOCIATE.CTXT$) ALTRET( GETOUT);

   6528  1 000200   200016 236100                    LDQ     CFPT$,,AUTO
         1 000201   000015 036003                    ADLQ    13,DU
         1 000202   200022 756100                    STQ     @ERR+1,,AUTO
         1 000203   000015 236000 2                  LDQ     13
         1 000204   200021 756100                    STQ     CFPT$+3,,AUTO
         1 000205   000566 701000 1                  TSX1    CKCTXT
         1 000206   000460 702000 1                  TSX2    GETOUT

      444     6529    2               CALL CKDATA( XSC_E$DATA, XSC$ASSOCIATE.DATA$, %XSC_MAXDATA#)

   6529  1 000207   000004 236000 2                  LDQ     4
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:93   
         1 000210   200032 756100                    STQ     @UB+1,,AUTO
         1 000211   000017 236000 2                  LDQ     15
         1 000212   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000213   200016 236100                    LDQ     CFPT$,,AUTO
         1 000214   000002 036003                    ADLQ    2,DU
         1 000215   200030 756100                    STQ     @ERR+1,,AUTO
         1 000216   000020 236000 2                  LDQ     16
         1 000217   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000220   000462 701000 1                  TSX1    CKDATA
         1 000221   000460 702000 1                  TSX2    GETOUT

      445     6530    2                       ALTRET( GETOUT);
      446     6531    2               CALL XSC$RESOLVE( XSC$ASSOCIATE) ALTRET( GETOUT);

   6531  1 000222   200016 630500                    EPPR0   CFPT$,,AUTO
         1 000223   000000 631400 2                  EPPR1   0
         1 000224   000000 701000 xent               TSX1    XSC$RESOLVE
         1 000225   000460 702000 1                  TSX2    GETOUT

      447     6532    2               VBLK.EVENT = %XSC_CEV_AASCREQ;

   6532  1 000226   000014 236007                    LDQ     12,DL
         1 000227   200012 552104                    STBQ    VBLK+6,'04'O,AUTO
         1 000230   000436 710000 1                  TRA     s:6572

      448     6533    2           CASE( %XSC_FNC_AASCRSP#);

      449     6534    2               CALL CKTXTH( XSC_E$ACN, XSC$ASSOCIATE.ACN$, %XSC_MAXACN#)

   6534  1 000231   000004 236000 2                  LDQ     4
         1 000232   200032 756100                    STQ     @UB+1,,AUTO
         1 000233   000005 236000 2                  LDQ     5
         1 000234   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000235   200016 236100                    LDQ     CFPT$,,AUTO
         1 000236   000003 036003                    ADLQ    3,DU
         1 000237   200030 756100                    STQ     @ERR+1,,AUTO
         1 000240   000006 236000 2                  LDQ     6
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:94   
         1 000241   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000242   000552 701000 1                  TSX1    CKTXTH
         1 000243   000460 702000 1                  TSX2    GETOUT

      450     6535    2                       ALTRET( GETOUT);
      451     6536    2               CALL CKTXTC( XSC_E$RAPT, XSC$ASSOCIATE.RAPT$, %XSC_MAXAPT#)

   6536  1 000244   000004 236000 2                  LDQ     4
         1 000245   200032 756100                    STQ     @UB+1,,AUTO
         1 000246   000010 236000 2                  LDQ     8
         1 000247   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000250   200016 236100                    LDQ     CFPT$,,AUTO
         1 000251   000010 036003                    ADLQ    8,DU
         1 000252   200030 756100                    STQ     @ERR+1,,AUTO
         1 000253   000013 236000 2                  LDQ     11
         1 000254   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000255   000536 701000 1                  TSX1    CKTXTC
         1 000256   000460 702000 1                  TSX2    GETOUT

      452     6537    2                       ALTRET( GETOUT);
      453     6538    2               CALL CKTXTC( XSC_E$RAEQ, XSC$ASSOCIATE.RAEQ$, %XSC_MAXAEQ#)

   6538  1 000257   000004 236000 2                  LDQ     4
         1 000260   200032 756100                    STQ     @UB+1,,AUTO
         1 000261   000010 236000 2                  LDQ     8
         1 000262   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000263   200016 236100                    LDQ     CFPT$,,AUTO
         1 000264   000011 036003                    ADLQ    9,DU
         1 000265   200030 756100                    STQ     @ERR+1,,AUTO
         1 000266   000014 236000 2                  LDQ     12
         1 000267   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000270   000536 701000 1                  TSX1    CKTXTC
         1 000271   000460 702000 1                  TSX2    GETOUT

      454     6539    2                       ALTRET( GETOUT);
      455     6540    2               ;  /*N* validate IMPL$ */
      456     6541    2               CALL CKCTXT( XSC_E$CTXT, XSC$ASSOCIATE.CTXT$) ALTRET( GETOUT);
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:95   

   6541  1 000272   200016 236100                    LDQ     CFPT$,,AUTO
         1 000273   000015 036003                    ADLQ    13,DU
         1 000274   200022 756100                    STQ     @ERR+1,,AUTO
         1 000275   000015 236000 2                  LDQ     13
         1 000276   200021 756100                    STQ     CFPT$+3,,AUTO
         1 000277   000566 701000 1                  TSX1    CKCTXT
         1 000300   000460 702000 1                  TSX2    GETOUT

      457     6542    2               CALL CKDATA( XSC_E$DATA, XSC$ASSOCIATE.DATA$, %XSC_MAXDATA#)

   6542  1 000301   000004 236000 2                  LDQ     4
         1 000302   200032 756100                    STQ     @UB+1,,AUTO
         1 000303   000017 236000 2                  LDQ     15
         1 000304   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000305   200016 236100                    LDQ     CFPT$,,AUTO
         1 000306   000002 036003                    ADLQ    2,DU
         1 000307   200030 756100                    STQ     @ERR+1,,AUTO
         1 000310   000020 236000 2                  LDQ     16
         1 000311   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000312   000462 701000 1                  TSX1    CKDATA
         1 000313   000460 702000 1                  TSX2    GETOUT

      458     6543    2                       ALTRET( GETOUT);
      459     6544    2               CALL CKRSLT( XSC_E$RESULT) ALTRET( GETOUT);

   6544  1 000314   000021 236000 2                  LDQ     17
         1 000315   200021 756100                    STQ     CFPT$+3,,AUTO
         1 000316   000646 701000 1                  TSX1    CKRSLT
         1 000317   000460 702000 1                  TSX2    GETOUT

      460     6545    2               CALL XSC$RESOLVE( XSC$ASSOCIATE) ALTRET( GETOUT);

   6545  1 000320   200016 630500                    EPPR0   CFPT$,,AUTO
         1 000321   000000 631400 2                  EPPR1   0
         1 000322   000000 701000 xent               TSX1    XSC$RESOLVE
         1 000323   000460 702000 1                  TSX2    GETOUT
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:96   

      461     6546    2               IF XSC$ASSOCIATE.RESULT = 0 THEN

   6546  1 000324   200016 470500                    LDP0    CFPT$,,AUTO
         1 000325   000000 236100                    LDQ     0,,PR0
         1 000326   000777 316007                    CANQ    511,DL
         1 000327   000333 601000 1                  TNZ     s:6549

      462     6547    2                   VBLK.EVENT = %XSC_CEV_AASCRSP;

   6547  1 000330   000016 236007                    LDQ     14,DL
         1 000331   200012 552104                    STBQ    VBLK+6,'04'O,AUTO
         1 000332   000436 710000 1                  TRA     s:6572

      463     6548    2               ELSE
      464     6549    2                   VBLK.EVENT = %XSC_CEV_AASCRSN;

   6549  1 000333   000020 236007                    LDQ     16,DL
         1 000334   200012 552104                    STBQ    VBLK+6,'04'O,AUTO
         1 000335   000436 710000 1                  TRA     s:6572

      465     6550    2           CASE( %XSC_FNC_ARELREQ#);

      466     6551    2               CALL CKDATA( XSC_E$DATA, XSC$RELEASE.DATA$, %XSC_MAXDATA#)

   6551  1 000336   000004 236000 2                  LDQ     4
         1 000337   200032 756100                    STQ     @UB+1,,AUTO
         1 000340   000017 236000 2                  LDQ     15
         1 000341   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000342   200016 236100                    LDQ     CFPT$,,AUTO
         1 000343   000002 036003                    ADLQ    2,DU
         1 000344   200030 756100                    STQ     @ERR+1,,AUTO
         1 000345   000020 236000 2                  LDQ     16
         1 000346   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000347   000462 701000 1                  TSX1    CKDATA
         1 000350   000460 702000 1                  TSX2    GETOUT

PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:97   
      467     6552    2                       ALTRET( GETOUT);
      468     6553    2               CALL CKRELREQRSN( XSC_E$REASON) ALTRET( GETOUT);

   6553  1 000351   000022 236000 2                  LDQ     18
         1 000352   200021 756100                    STQ     CFPT$+3,,AUTO
         1 000353   000667 701000 1                  TSX1    CKRELREQRSN
         1 000354   000460 702000 1                  TSX2    GETOUT

      469     6554    2               VBLK.EVENT = %XSC_CEV_ARELREQ;

   6554  1 000355   000022 236007                    LDQ     18,DL
         1 000356   200012 552104                    STBQ    VBLK+6,'04'O,AUTO
         1 000357   000436 710000 1                  TRA     s:6572

      470     6555    2           CASE( %XSC_FNC_ARELRSP#);

      471     6556    2               CALL CKDATA( XSC_E$DATA, XSC$RELEASE.DATA$, %XSC_MAXDATA#)

   6556  1 000360   000004 236000 2                  LDQ     4
         1 000361   200032 756100                    STQ     @UB+1,,AUTO
         1 000362   000017 236000 2                  LDQ     15
         1 000363   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000364   200016 236100                    LDQ     CFPT$,,AUTO
         1 000365   000002 036003                    ADLQ    2,DU
         1 000366   200030 756100                    STQ     @ERR+1,,AUTO
         1 000367   000020 236000 2                  LDQ     16
         1 000370   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000371   000462 701000 1                  TSX1    CKDATA
         1 000372   000460 702000 1                  TSX2    GETOUT

      472     6557    2                       ALTRET( GETOUT);
      473     6558    2               CALL CKRELRSPRSN( XSC_E$REASON) ALTRET( GETOUT);

   6558  1 000373   000022 236000 2                  LDQ     18
         1 000374   200021 756100                    STQ     CFPT$+3,,AUTO
         1 000375   000700 701000 1                  TSX1    CKRELRSPRSN
         1 000376   000460 702000 1                  TSX2    GETOUT
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:98   

      474     6559    2               IF XSC$RELEASE.REASON = 0 THEN

   6559  1 000377   200016 470500                    LDP0    CFPT$,,AUTO
         1 000400   000000 236100                    LDQ     0,,PR0
         1 000401   777000 316007                    CANQ    -512,DL
         1 000402   000406 601000 1                  TNZ     s:6562

      475     6560    2                   VBLK.EVENT = %XSC_CEV_ARELRSP;

   6560  1 000403   000024 236007                    LDQ     20,DL
         1 000404   200012 552104                    STBQ    VBLK+6,'04'O,AUTO
         1 000405   000436 710000 1                  TRA     s:6572

      476     6561    2               ELSE
      477     6562    2                   VBLK.EVENT = %XSC_CEV_ARELRSN;

   6562  1 000406   000026 236007                    LDQ     22,DL
         1 000407   200012 552104                    STBQ    VBLK+6,'04'O,AUTO
         1 000410   000436 710000 1                  TRA     s:6572

      478     6563    2           CASE( %XSC_FNC_AUABREQ#);

      479     6564    2               CALL CKDATA( XSC_E$DATA, XSC$U_ABORT.DATA$, %XSC_MAXDATA#)

   6564  1 000411   000004 236000 2                  LDQ     4
         1 000412   200032 756100                    STQ     @UB+1,,AUTO
         1 000413   000017 236000 2                  LDQ     15
         1 000414   200031 756100                    STQ     @PTR$+1,,AUTO
         1 000415   200016 236100                    LDQ     CFPT$,,AUTO
         1 000416   000002 036003                    ADLQ    2,DU
         1 000417   200030 756100                    STQ     @ERR+1,,AUTO
         1 000420   000020 236000 2                  LDQ     16
         1 000421   200027 756100                    STQ     ZILCH+2,,AUTO
         1 000422   000462 701000 1                  TSX1    CKDATA
         1 000423   000460 702000 1                  TSX2    GETOUT

PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:99   
      480     6565    2                       ALTRET( GETOUT);
      481     6566    2               CALL CKABRTSRC( XSC_E$ABRTSRC) ALTRET( GETOUT);

   6566  1 000424   000023 236000 2                  LDQ     19
         1 000425   200021 756100                    STQ     CFPT$+3,,AUTO
         1 000426   000711 701000 1                  TSX1    CKABRTSRC
         1 000427   000460 702000 1                  TSX2    GETOUT

      482     6567    2               VBLK.EVENT = %XSC_CEV_AUABREQ;

   6567  1 000430   000030 236007                    LDQ     24,DL
         1 000431   200012 552104                    STBQ    VBLK+6,'04'O,AUTO
         1 000432   000436 710000 1                  TRA     s:6572

      483     6568    2           CASE( ELSE);

      484     6569    2               XSC$GENERIC.ERROR = XSC_E$BADFNC;

   6569  1 000433   000002 236000 0                  LDQ     XSC_E$BADFNC
         1 000434   000001 756100                    STQ     1,,PR0

      485     6570    2               ALTRETURN;

   6570  1 000435   000000 702200 xent               TSX2  ! X66_AALT

      486     6571    2           END;

      487     6572    1       IF XSS_TRACE > 0 THEN

   6572  1 000436   000000 235000 xsym               LDA     XSS_TRACE
         1 000437   000444 604400 1                  TMOZ    s:6574

      488     6573    1           CALL XSC$DUMPFPT( XSC$GENERIC);

   6573  1 000440   200016 630500                    EPPR0   CFPT$,,AUTO
         1 000441   000000 631400 2                  EPPR1   0
         1 000442   000000 701000 xent               TSX1    XSC$DUMPFPT
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:100  
         1 000443   000000 011000                    NOP     0

      489     6574    1       CALL XSC$AMACHINE( VBLK)

   6574  1 000444   200004 630500                    EPPR0   VBLK,,AUTO
         1 000445   200036 450500                    STP0    LOWER+2,,AUTO
         1 000446   200036 630500                    EPPR0   LOWER+2,,AUTO
         1 000447   000000 631400 2                  EPPR1   0
         1 000450   000000 701000 xent               TSX1    XSC$AMACHINE
         1 000451   000453 702000 1                  TSX2    ABORT
         1 000452   000461 710000 1                  TRA     s:6582

      490     6575    2       WHENALTRETURN DO;

      491     6576    2   ABORT:
      492     6577    2           IF XSC$GENERIC.ERROR = '0'O THEN

   6577  1 000453   200016 470500       ABORT        LDP0    CFPT$,,AUTO
         1 000454   000001 235100                    LDA     1,,PR0
         1 000455   000460 601000 1                  TNZ     GETOUT

      493     6578    2               XSC$GENERIC.ERROR = XSC_E$STATE;

   6578  1 000456   000003 236000 0                  LDQ     XSC_E$STATE
         1 000457   000001 756100                    STQ     1,,PR0

      494     6579    2   GETOUT:
      495     6580    2           ALTRETURN;

   6580  1 000460   000000 702200 xent  GETOUT       TSX2  ! X66_AALT

      496     6581    2           END;
      497     6582    1       RETURN;

   6582  1 000461   000000 702200 xent               TSX2  ! X66_ARET

      498     6583        %EJECT;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:101  
      499     6584    1   CKDATA: PROC( ERR, PTR$, UB, LB) ALTRET;

   6584  1 000462   200026 741300       CKDATA       STX1  ! ZILCH+1,,AUTO

      500     6585
      501     6586    2       DCL B$PTR PTR BASED CALIGNED;
      502     6587    2       DCL B$UBIN9 UBIN(9) BASED CALIGNED;
      503     6588    2       DCL B$UBIN18 UBIN(18) BASED HALIGNED;
      504     6589    2       DCL ERR BIT(36) ALIGNED;
      505     6590    2       DCL LB SBIN;  /* lower bound on size of framed data */
      506     6591    2       DCL LEN SBIN;
      507     6592    2       DCL LOWER SBIN;
      508     6593    2       DCL UB SBIN;  /* upper bound on size of framed data */
      509     6594    2       DCL UPPER REDEF UB SBIN;
      510     6595    2       DCL PTR$ PTR;
      511     6596
      512     6597    2       LEN = 0;

   6597  1 000463   200033 450100                    STZ     LEN,,AUTO

      513     6598    2       AFPT$ = PTR$;

   6598  1 000464   200030 470500                    LDP0    @PTR$,,AUTO
         1 000465   000000 236100                    LDQ     0,,PR0
         1 000466   200013 756100                    STQ     AFPT$,,AUTO

      514     6599    3       DO WHILE( AFPT$ ~= ADDR( NIL));

   6599  1 000467   000506 710000 1                  TRA     s:6607

      515     6600    4           IF AFPT.NXTX = 0 THEN DO;

   6600  1 000470   200013 470500                    LDP0    AFPT$,,AUTO
         1 000471   000014 235100                    LDA     12,,PR0
         1 000472   000500 601000 1                  TNZ     s:6604

      516     6601    4               XSC$GENERIC.ERROR = XSC_E$NXTX;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:102  

   6601  1 000473   000016 236000 0                  LDQ     XSC_E$NXTX
         1 000474   200016 471500                    LDP1    CFPT$,,AUTO
         1 000475   100001 756100                    STQ     1,,PR1

      517     6602    4               ALTRETURN;

   6602  1 000476   200026 221300                    LDX1  ! ZILCH+1,,AUTO
         1 000477   000000 702211                    TSX2  ! 0,X1

      518     6603    4               END;
      519     6604    3           LEN = LEN + AFPT.NXTX;

   6604  1 000500   200033 236100                    LDQ     LEN,,AUTO
         1 000501   000014 036100                    ADLQ    12,,PR0
         1 000502   200033 756100                    STQ     LEN,,AUTO

      520     6605    3           VBLK.DATA.SIZE = LEN;

   6605  1 000503   200011 756100                    STQ     VBLK+5,,AUTO

      521     6606    3           AFPT$ = AFPT.LINK$;

   6606  1 000504   000004 236100                    LDQ     4,,PR0
         1 000505   200013 756100                    STQ     AFPT$,,AUTO

      522     6607    3           END;

   6607  1 000506   000004 116000 2                  CMPQ    4
         1 000507   000470 601000 1                  TNZ     s:6600

      523     6608    2   COMMON:
      524     6609    2       IF ADDR( LB) = ADDR( NIL) THEN

   6609  1 000510   200032 236100       COMMON       LDQ     @LB,,AUTO
         1 000511   000004 116000 2                  CMPQ    4
         1 000512   000515 601000 1                  TNZ     s:6612
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:103  

      525     6610    2           LOWER = 0;

   6610  1 000513   200034 450100                    STZ     LOWER,,AUTO
         1 000514   000520 710000 1                  TRA     s:6613

      526     6611    2       ELSE
      527     6612    2           LOWER = LB;

   6612  1 000515   200032 470500                    LDP0    @LB,,AUTO
         1 000516   000000 235100                    LDA     0,,PR0
         1 000517   200034 755100                    STA     LOWER,,AUTO

      528     6613    3       IF LEN < LOWER OR LEN > UPPER THEN DO;

   6613  1 000520   200033 236100                    LDQ     LEN,,AUTO
         1 000521   200034 116100                    CMPQ    LOWER,,AUTO
         1 000522   000526 604000 1                  TMI     s:6614
         1 000523   200031 470500                    LDP0    @UB,,AUTO
         1 000524   000000 116100                    CMPQ    0,,PR0
         1 000525   000534 604400 1                  TMOZ    s:6617

      529     6614    3           XSC$GENERIC.ERROR = ERR;

   6614  1 000526   200027 470500                    LDP0    @ERR,,AUTO
         1 000527   000000 236100                    LDQ     0,,PR0
         1 000530   200016 471500                    LDP1    CFPT$,,AUTO
         1 000531   100001 756100                    STQ     1,,PR1

      530     6615    3           ALTRETURN;

   6615  1 000532   200026 221300                    LDX1  ! ZILCH+1,,AUTO
         1 000533   000000 702211                    TSX2  ! 0,X1

      531     6616    3           END;
      532     6617    2       RETURN;

PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:104  
   6617  1 000534   200026 221300                    LDX1  ! ZILCH+1,,AUTO
         1 000535   000001 702211                    TSX2  ! 1,X1

      533     6618
      534     6619    2   CKTXTC: ENTRY( ERR, PTR$, UB, LB) ALTRET;

   6619  1 000536   200026 741300       CKTXTC       STX1  ! ZILCH+1,,AUTO

      535     6620
      536     6621    2       IF PTR$ = ADDR( NIL) THEN

   6621  1 000537   200030 470500                    LDP0    @PTR$,,AUTO
         1 000540   000000 236100                    LDQ     0,,PR0
         1 000541   000004 116000 2                  CMPQ    4
         1 000542   000545 601000 1                  TNZ     s:6624

      537     6622    2           LEN = 0;

   6622  1 000543   200033 450100                    STZ     LEN,,AUTO
         1 000544   000551 710000 1                  TRA     s:6625

      538     6623    2       ELSE
      539     6624    2           LEN = PTR$->B$UBIN9;

   6624  1 000545   000000 471500                    LDP1    0,,PR0
         1 000546   000100 101500                    MRL     fill='000'O
         1 000547   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000550   200033 000004                    ADSC9   LEN,,AUTO                cn=0,n=4

      540     6625    2       GOTO COMMON;

   6625  1 000551   000510 710000 1                  TRA     COMMON

      541     6626
      542     6627    2   CKTXTH: ENTRY( ERR, PTR$, UB, LB) ALTRET;

   6627  1 000552   200026 741300       CKTXTH       STX1  ! ZILCH+1,,AUTO
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:105  

      543     6628
      544     6629    2       IF PTR$ = ADDR( NIL) THEN

   6629  1 000553   200030 470500                    LDP0    @PTR$,,AUTO
         1 000554   000000 236100                    LDQ     0,,PR0
         1 000555   000004 116000 2                  CMPQ    4
         1 000556   000561 601000 1                  TNZ     s:6632

      545     6630    2           LEN = 0;

   6630  1 000557   200033 450100                    STZ     LEN,,AUTO
         1 000560   000565 710000 1                  TRA     s:6633

      546     6631    2       ELSE
      547     6632    2           LEN = PTR$->B$UBIN18;

   6632  1 000561   000000 471500                    LDP1    0,,PR0
         1 000562   000100 101500                    MRL     fill='000'O
         1 000563   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         1 000564   200033 000004                    ADSC9   LEN,,AUTO                cn=0,n=4

      548     6633    2       GOTO COMMON;

   6633  1 000565   000510 710000 1                  TRA     COMMON

      549     6634
      550     6635    2       END CKDATA;
      551     6636
      552     6637    1   CKCTXT: PROC( ERR, PTR$) ALTRET;

   6637  1 000566   200020 741300       CKCTXT       STX1  ! CFPT$+2,,AUTO

      553     6638
      554     6639    2       DCL B$PTR PTR BASED CALIGNED;
      555     6640    2       DCL ERR BIT(36) ALIGNED;
      556     6641    2       DCL I SBIN;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:106  
      557     6642    2       DCL P$ PTR;
      558     6643    2       DCL PTR$ PTR;
      559     6644    2       DCL ZILCH SBIN;
      560     6645
      561     6646    2       IF PTR$ = ADDR( NIL) THEN

   6646  1 000567   200022 470500                    LDP0    @PTR$,,AUTO
         1 000570   000000 236100                    LDQ     0,,PR0
         1 000571   000004 116000 2                  CMPQ    4
         1 000572   000574 601000 1                  TNZ     s:6648

      562     6647    2           RETURN;  /* XSC$GENERIC.CTXT$ is ADDR( NIL).  Fine. */

   6647  1 000573   000001 702211                    TSX2  ! 1,X1

      563     6648    2       ZILCH = 0;

   6648  1 000574   200025 450100                    STZ     ZILCH,,AUTO

      564     6649    3       DO I = 1 TO PTR$->CLST.COUNT(0);

   6649  1 000575   000001 235007                    LDA     1,DL
         1 000576   200023 755100                    STA     I,,AUTO
         1 000577   000626 710000 1                  TRA     s:6659+1

      565     6650    3           P$ = PTR$->CLST.CTXT$( I);

   6650  1 000600   200022 470500                    LDP0    @PTR$,,AUTO
         1 000601   000000 471500                    LDP1    0,,PR0
         1 000602   200023 720100                    LXL0    I,,AUTO
         1 000603   100000 236110                    LDQ     0,X0,PR1
         1 000604   200024 756100                    STQ     P$,,AUTO

      566     6651    3           IF P$ = ADDR( NIL) THEN

   6651  1 000605   000004 116000 2                  CMPQ    4
         1 000606   000611 601000 1                  TNZ     s:6654
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:107  

      567     6652    3               ZILCH = ZILCH + 1;  /* CLST.CTXT$( I) is ADDR( NIL).  O.K. */

   6652  1 000607   200025 054100                    AOS     ZILCH,,AUTO
         1 000610   000625 710000 1                  TRA     s:6659

      568     6653    3           ELSE
      569     6654    3               CALL CKTXTH( ERR, P$, 20, 1)

   6654  1 000611   000025 236000 2                  LDQ     21
         1 000612   200032 756100                    STQ     @LB,,AUTO
         1 000613   000005 236000 2                  LDQ     5
         1 000614   200031 756100                    STQ     @UB,,AUTO
         1 000615   200024 631500                    EPPR1   P$,,AUTO
         1 000616   200030 451500                    STP1    @PTR$,,AUTO
         1 000617   200021 236100                    LDQ     @ERR,,AUTO
         1 000620   200027 756100                    STQ     @ERR,,AUTO
         1 000621   000552 701000 1                  TSX1    CKTXTH
         1 000622   000624 702000 1                  TSX2    s:6657
         1 000623   000625 710000 1                  TRA     s:6659

      570     6655    4               WHENALTRETURN DO;

      571     6656                        /* CLST.CTXT$( I) points at something incorrect */
      572     6657    4                   GOTO GETOUT;

   6657  1 000624   000636 710000 1                  TRA     GETOUT

      573     6658    4                   END;
      574     6659    3           END;

   6659  1 000625   200023 054100                    AOS     I,,AUTO
         1 000626   200022 470500                    LDP0    @PTR$,,AUTO
         1 000627   000000 471500                    LDP1    0,,PR0
         1 000630   200023 236100                    LDQ     I,,AUTO
         1 000631   100000 116100                    CMPQ    0,,PR1
         1 000632   000600 604400 1                  TMOZ    s:6650
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:108  

      575     6660    3       IF ZILCH >= PTR$->CLST.COUNT(0) THEN DO;

   6660  1 000633   200025 236100                    LDQ     ZILCH,,AUTO
         1 000634   100000 116100                    CMPQ    0,,PR1
         1 000635   000644 604000 1                  TMI     s:6666

      576     6661                /* every CLST.CTXT$( I) is ADDR( NIL), or COUNT is zero */
      577     6662    3   GETOUT:
      578     6663    3           XSC$GENERIC.ERROR = ERR;

   6663  1 000636   200021 470500       GETOUT       LDP0    @ERR,,AUTO
         1 000637   000000 236100                    LDQ     0,,PR0
         1 000640   200016 471500                    LDP1    CFPT$,,AUTO
         1 000641   100001 756100                    STQ     1,,PR1

      579     6664    3           ALTRETURN;

   6664  1 000642   200020 221300                    LDX1  ! CFPT$+2,,AUTO
         1 000643   000000 702211                    TSX2  ! 0,X1

      580     6665    3           END;
      581     6666    2       RETURN;

   6666  1 000644   200020 221300                    LDX1  ! CFPT$+2,,AUTO
         1 000645   000001 702211                    TSX2  ! 1,X1

      582     6667
      583     6668    2       END CKCTXT;
      584     6669
      585     6670    1   CKRSLT: PROC( ERR) ALTRET;

   6670  1 000646   200020 741300       CKRSLT       STX1  ! CFPT$+2,,AUTO

      586     6671
      587     6672    2       DCL ERR BIT(36) ALIGNED;
      588     6673
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:109  
      589     6674    3       IF XSC$ASSOCIATE.RESULT > %XSC_RSLT_TRANREJECT# THEN DO;

   6674  1 000647   200016 470500                    LDP0    CFPT$,,AUTO
         1 000650   000000 236100                    LDQ     0,,PR0
         1 000651   000777 376007                    ANQ     511,DL
         1 000652   000003 116007                    CMPQ    3,DL
         1 000653   000662 602000 1                  TNC     s:6679

      590     6675    3   GETOUT:
      591     6676    3           XSC$GENERIC.ERROR = ERR;

   6676  1 000654   200021 470500       GETOUT       LDP0    @ERR,,AUTO
         1 000655   000000 236100                    LDQ     0,,PR0
         1 000656   200016 471500                    LDP1    CFPT$,,AUTO
         1 000657   100001 756100                    STQ     1,,PR1

      592     6677    3           ALTRETURN;

   6677  1 000660   200020 221300                    LDX1  ! CFPT$+2,,AUTO
         1 000661   000000 702211                    TSX2  ! 0,X1

      593     6678    3           END;
      594     6679    2       IF XSC$ASSOCIATE.RSDIAG > %XSC_RSDIAG_BADRAEID# THEN

   6679  1 000662   000000 236100                    LDQ     0,,PR0
         1 000663   777000 376007                    ANQ     -512,DL
         1 000664   013000 116007                    CMPQ    5632,DL
         1 000665   000654 603000 1                  TRC     GETOUT

      595     6680    2           GOTO GETOUT;
      596     6681    2       RETURN;

   6681  1 000666   000001 702211                    TSX2  ! 1,X1

      597     6682
      598     6683    2   CKRELREQRSN: ENTRY( ERR) ALTRET;

PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:110  
   6683  1 000667   200020 741300       CKRELREQRSN  STX1  ! CFPT$+2,,AUTO

      599     6684
      600     6685    2       IF XSC$RELEASE.REASON > %XSC_RELREQ_URGENT# AND

   6685  1 000670   200016 470500                    LDP0    CFPT$,,AUTO
         1 000671   000000 236100                    LDQ     0,,PR0
         1 000672   777000 376007                    ANQ     -512,DL
         1 000673   002000 116007                    CMPQ    1024,DL
         1 000674   000677 602000 1                  TNC     s:6688
         1 000675   036000 116007                    CMPQ    15360,DL
         1 000676   000654 601000 1                  TNZ     GETOUT

      601     6686    2               XSC$RELEASE.REASON ~= %XSC_RELREQ_USERDEFINED# THEN
      602     6687    2           GOTO GETOUT;
      603     6688    2       RETURN;

   6688  1 000677   000001 702211                    TSX2  ! 1,X1

      604     6689
      605     6690    2   CKRELRSPRSN: ENTRY( ERR) ALTRET;

   6690  1 000700   200020 741300       CKRELRSPRSN  STX1  ! CFPT$+2,,AUTO

      606     6691
      607     6692    2       IF XSC$RELEASE.REASON > %XSC_RELRSP_NOTFINISHED# AND

   6692  1 000701   200016 470500                    LDP0    CFPT$,,AUTO
         1 000702   000000 236100                    LDQ     0,,PR0
         1 000703   777000 376007                    ANQ     -512,DL
         1 000704   002000 116007                    CMPQ    1024,DL
         1 000705   000710 602000 1                  TNC     s:6695
         1 000706   036000 116007                    CMPQ    15360,DL
         1 000707   000654 601000 1                  TNZ     GETOUT

      608     6693    2               XSC$RELEASE.REASON ~= %XSC_RELRSP_USERDEFINED# THEN
      609     6694    2           GOTO GETOUT;
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:111  
      610     6695    2       RETURN;

   6695  1 000710   000001 702211                    TSX2  ! 1,X1

      611     6696
      612     6697    2   CKABRTSRC: ENTRY( ERR) ALTRET;

   6697  1 000711   200020 741300       CKABRTSRC    STX1  ! CFPT$+2,,AUTO

      613     6698
      614     6699    2       IF XSC$U_ABORT.ABRTSRC > %XSC_ABRTSRC_PROVIDER# THEN

   6699  1 000712   200016 470500                    LDP0    CFPT$,,AUTO
         1 000713   000000 236100                    LDQ     0,,PR0
         1 000714   777000 376007                    ANQ     -512,DL
         1 000715   002000 116007                    CMPQ    1024,DL
         1 000716   000654 603000 1                  TRC     GETOUT

      615     6700    2           GOTO GETOUT;
      616     6701    2       RETURN;

   6701  1 000717   000001 702211                    TSX2  ! 1,X1

XSC_E$RDONLYFPT
 Sect OctLoc
   0     000   302303 000200                                                    ....

XSC_E$BADCID
 Sect OctLoc
   0     001   302303 000010                                                    ....

XSC_E$BADFNC
 Sect OctLoc
   0     002   302303 000020                                                    ....

XSC_E$STATE
 Sect OctLoc
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:112  
   0     003   302303 000030                                                    ....

XSC_E$ABRTSRC
 Sect OctLoc
   0     004   302303 000740                                                    ....

XSC_E$ACN
 Sect OctLoc
   0     005   302303 000750                                                    ....

XSC_E$CTXT
 Sect OctLoc
   0     006   302303 000500                                                    ....

(unnamed)
 Sect OctLoc
   0     007   302303 000510                                                    ....

XSC_E$DATA
 Sect OctLoc
   0     010   302303 000310                                                    ....

(unnamed)
 Sect OctLoc
   0     011   302303 000760                                                    ....

XSC_E$IAEQ
 Sect OctLoc
   0     012   302303 000770                                                    ....

(unnamed)
 Sect OctLoc
   0     013   302303 001000                                                    ....

XSC_E$IAPT
 Sect OctLoc
   0     014   302303 001010                                                    ....
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:113  

(unnamed)
 Sect OctLoc
   0     015   302303 001020                                                    ....

XSC_E$NXTX
 Sect OctLoc
   0     016   302303 000540                                                    ....

(unnamed)
 Sect OctLoc
   0     017   302303 001030                                                    ....

XSC_E$RAEQ
 Sect OctLoc
   0     020   302303 001040                                                    ...

(unnamed)
 Sect OctLoc
   0     021   302303 001050                                                    ...(

XSC_E$RAPT
 Sect OctLoc
   0     022   302303 001060                                                    ...0

XSC_E$REASON
 Sect OctLoc
   0     023   302303 000360                                                    ....

XSC_E$RESULT
 Sect OctLoc
   0     024   302303 000400                                                    ....

(unnamed)
 Sect OctLoc
   0     025   302303 001070                                                    ...8

PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:114  
(unnamed)
 Sect OctLoc
   2     000   000001 000000   000000 006000   000002 000000   000000 000024    ................
   2     004   000000 006014   000003 006000   000005 006000   000000 000100    ...............@
   2     010   000007 006000   000014 006000   000012 006000   000022 006000    ................
   2     014   000020 006000   000006 006000   000000 000400   000016 006000    ................
   2     020   000010 006000   000024 006000   000023 006000   000004 006000    ................
   2     024   000000 000001   000024 006000                                    ........
      617     6702
      618     6703    2       END CKRSLT;
      619     6704
      620     6705    1       END XSC$ACSE;
      621     6706        %EOD;

PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:115  
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   B$JIT_C.:LIB_E05  is referenced.
   B_SEGIDS_C.:LIB_E05  is referenced.
      No diagnostics issued in procedure XSC$ACSE.
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:116  

 **** Variables and constants ****

  ****  Section 000 RoData XSC$ACSE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w STRC        r     1 XSC_E$ABRTSRC              5-0-0/w STRC        r     1 XSC_E$ACN
     1-0-0/w STRC        r     1 XSC_E$BADCID               2-0-0/w STRC        r     1 XSC_E$BADFNC
     6-0-0/w STRC        r     1 XSC_E$CTXT                10-0-0/w STRC        r     1 XSC_E$DATA
    12-0-0/w STRC        r     1 XSC_E$IAEQ                14-0-0/w STRC        r     1 XSC_E$IAPT
    16-0-0/w STRC        r     1 XSC_E$NXTX                20-0-0/w STRC        r     1 XSC_E$RAEQ
    22-0-0/w STRC        r     1 XSC_E$RAPT                 0-0-0/w STRC        r     1 XSC_E$RDONLYFPT
    23-0-0/w STRC        r     1 XSC_E$REASON              24-0-0/w STRC        r     1 XSC_E$RESULT
     3-0-0/w STRC        r     1 XSC_E$STATE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CFPT                     27-0-0/w PTR         r     1 @ERR
    21-0-0/w PTR         r     1 @ERR                      21-0-0/w PTR         r     1 @ERR
    32-0-0/w PTR         r     1 @LB                       30-0-0/w PTR         r     1 @PTR$
    22-0-0/w PTR         r     1 @PTR$                     31-0-0/w PTR         r     1 @UB
    13-0-0/w PTR         r     1 AFPT$                     14-0-0/w SBIN        r     1 CCID
    *0-0-0/w STRC(504)   r     1 CFPT                      16-0-0/w PTR         r     1 CFPT$
    15-0-0/w PTR         r     1 CTX$                      *0-0-0/w BIT         r     1 ERR
    *0-0-0/w BIT         r     1 ERR                       *0-0-0/w BIT         r     1 ERR
    23-0-0/w SBIN        r     1 I                         *0-0-0/w SBIN        r     1 LB
    33-0-0/w SBIN        r     1 LEN                       34-0-0/w SBIN        r     1 LOWER
    24-0-0/w PTR         r     1 P$                        *0-0-0/w PTR         r     1 PTR$
    *0-0-0/w PTR         r     1 PTR$                      16-0-0/w STRC        r     1 PX
    14-0-0/w SBIN        r     1 TEMP                      *0-0-0/w SBIN        r     1 UB
    *0-0-0/w SBIN        r     1 UPPER                      4-0-0/w STRC(252)   r     1 VBLK
    25-0-0/w SBIN        r     1 ZILCH

PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:117  
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w STRC(252)   r     1 XSC_VBLK
     0-0-0/w SBIN        r     1 XSS_TRACE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(504)   r     1 AFPT                       0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/h UBIN(18)    r     1 B$UBIN18                   0-0-0/c UBIN(9)     r     1 B$UBIN9
     0-0-0/d STRC        r     1 CLST                       0-0-0/w STRC(504)   r     1 XSC$ASSOCIATE
     0-0-0/w STRC(504)   r     1 XSC$GENERIC                0-0-0/w STRC(108)   r     1 XSC$RELEASE
     0-0-0/w STRC(108)   r     1 XSC$U_ABORT


   Procedure XSC$ACSE requires 464 words for executable code.
   Procedure XSC$ACSE requires 32 words of local(AUTO) storage.
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:118  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:119  
          MINI XREF LISTING

AFPT.C0
      4409**DCL      4409--REDEF
AFPT.DAT$
      4411**DCL      4411--REDEF
AFPT.LINK$
      4408**DCL      6606>>ASSIGN
AFPT.N0
      4410**DCL      4410--REDEF
AFPT.NXTX
      4410**DCL      6600>>IF       6604>>ASSIGN
AFPT.R0
      4408**DCL      4409--REDEF
AFPT$
      6479**DCL      4403--IMP-PTR  6598<<ASSIGN   6599>>DOWHILE  6600>>IF       6604>>ASSIGN   6606<<ASSIGN
      6606>>ASSIGN
B$JIT.ERR.MID
       878**DCL       878--REDEF
B$JIT.JRESPEAK
       968**DCL       969--REDEF
B$JIT.PLL
       964**DCL      6492>>IF
B$JIT.PUL
       964**DCL      6492>>IF
B$JIT$
      6476**DCL       872--IMP-PTR  6492>>IF       6492>>IF
B$UBIN18 IN PROCEDURE CKDATA
      6588**DCL      6632>>ASSIGN
B$UBIN9 IN PROCEDURE CKDATA
      6587**DCL      6624>>ASSIGN
CCID
      6480**DCL      6481--REDEF    6505<<ASSIGN   6506<>CALL
CCTX.HISTZ
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:120  
      2324**DCL      2325--REDEF
CFPT
      1702**DCL        17--PROC     6489--ASSIGN
CFPT.ERRDEF
      1711**DCL      1731--REDEF
CFPT$
      6483**DCL      1390--IMP-PTR  1449--IMP-PTR  1524--IMP-PTR  1583--IMP-PTR  1642--IMP-PTR  6484--REDEF
      6489<<ASSIGN   6494>>IF       6500>>ASSIGN   6503>>ASSIGN   6505>>ASSIGN   6508>>ASSIGN   6515>>DOCASE
      6517>>CALL     6519>>CALL     6521>>CALL     6523>>CALL     6525>>CALL     6528>>CALL     6529>>CALL
      6531>>CALL     6534>>CALL     6536>>CALL     6538>>CALL     6541>>CALL     6542>>CALL     6545>>CALL
      6546>>IF       6551>>CALL     6556>>CALL     6559>>IF       6564>>CALL     6569>>ASSIGN   6573>>CALL
      6577>>IF       6578>>ASSIGN   6601>>ASSIGN   6614>>ASSIGN   6663>>ASSIGN   6674>>IF       6676>>ASSIGN
      6679>>IF       6685>>IF       6685>>IF       6692>>IF       6692>>IF       6699>>IF
CKABRTSRC IN PROCEDURE CKRSLT
      6697**ENTRY    6566--CALL
CKCTXT
      6637**PROC     6528--CALL     6541--CALL
CKDATA
      6584**PROC     6529--CALL     6542--CALL     6551--CALL     6556--CALL     6564--CALL
CKRELREQRSN IN PROCEDURE CKRSLT
      6683**ENTRY    6553--CALL
CKRELRSPRSN IN PROCEDURE CKRSLT
      6690**ENTRY    6558--CALL
CKRSLT
      6670**PROC     6544--CALL
CKTXTC IN PROCEDURE CKDATA
      6619**ENTRY    6519--CALL     6521--CALL     6523--CALL     6525--CALL     6536--CALL     6538--CALL
CKTXTH IN PROCEDURE CKDATA
      6627**ENTRY    6517--CALL     6534--CALL     6654--CALL
CLST.COUNT
      4045**DCL      6649>>DOINDEX  6660>>IF
CLST.CTXT$
      4043**DCL      4044--REDEF    4045--REDEF    6650>>ASSIGN
COMMON IN PROCEDURE CKDATA
      6609**LABEL    6625--GOTO     6633--GOTO
CTX$
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:121  
      6482**DCL      2300--IMP-PTR  6506<>CALL     6512>>ASSIGN
ERR IN PROCEDURE CKCTXT
      6640**DCL      6637--PROC     6654<>CALL     6663>>ASSIGN
ERR IN PROCEDURE CKDATA
      6589**DCL      6584--PROC     6614>>ASSIGN   6619--ENTRY    6627--ENTRY
ERR IN PROCEDURE CKRSLT
      6672**DCL      6670--PROC     6676>>ASSIGN   6683--ENTRY    6690--ENTRY    6697--ENTRY
GETOUT
      6580**LABEL    6517--CALLALT  6519--CALLALT  6521--CALLALT  6523--CALLALT  6525--CALLALT  6528--CALLALT
      6529--CALLALT  6531--CALLALT  6534--CALLALT  6536--CALLALT  6538--CALLALT  6541--CALLALT  6542--CALLALT
      6544--CALLALT  6545--CALLALT  6551--CALLALT  6553--CALLALT  6556--CALLALT  6558--CALLALT  6564--CALLALT
      6566--CALLALT
GETOUT IN PROCEDURE CKCTXT
      6663**LABEL    6657--GOTO
GETOUT IN PROCEDURE CKRSLT
      6676**LABEL    6680--GOTO     6687--GOTO     6694--GOTO     6700--GOTO
I IN PROCEDURE CKCTXT
      6641**DCL      6649<<DOINDEX  6650>>ASSIGN
LB IN PROCEDURE CKDATA
      6590**DCL      6584--PROC     6609--IF       6612>>ASSIGN   6619--ENTRY    6627--ENTRY
LEN IN PROCEDURE CKDATA
      6591**DCL      6597<<ASSIGN   6604<<ASSIGN   6604>>ASSIGN   6605>>ASSIGN   6613>>IF       6613>>IF
      6622<<ASSIGN   6624<<ASSIGN   6630<<ASSIGN   6632<<ASSIGN
LOWER IN PROCEDURE CKDATA
      6592**DCL      6610<<ASSIGN   6612<<ASSIGN   6613>>IF
P$ IN PROCEDURE CKCTXT
      6642**DCL      6650<<ASSIGN   6651>>IF       6654<>CALL
PTR$ IN PROCEDURE CKCTXT
      6643**DCL      6637--PROC     6646>>IF       6649>>DOINDEX  6650>>ASSIGN   6660>>IF
PTR$ IN PROCEDURE CKDATA
      6595**DCL      6584--PROC     6598>>ASSIGN   6619--ENTRY    6621>>IF       6624>>ASSIGN   6627--ENTRY
      6629>>IF       6632>>ASSIGN
PX.OFFSET
      6485**DCL      6491>>ASSIGN
PX.SEGID
      6487**DCL      6490>>IF
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:122  
TEMP
      6481**DCL      6491<<ASSIGN   6492>>IF       6492>>IF
UB IN PROCEDURE CKDATA
      6593**DCL      6584--PROC     6594--REDEF    6619--ENTRY    6627--ENTRY
UPPER IN PROCEDURE CKDATA
      6594**DCL      6613>>IF
VBLK
      2346**DCL      6502<<ASSIGN   6574<>CALL
VBLK.CTX$
      2360**DCL      6512<<ASSIGN
VBLK.DATA.SIZE
      2428**DCL      6605<<ASSIGN
VBLK.EVENT
      2433**DCL      6532<<ASSIGN   6547<<ASSIGN   6549<<ASSIGN   6554<<ASSIGN   6560<<ASSIGN   6562<<ASSIGN
      6567<<ASSIGN
VBLK.FPT$
      2361**DCL      6503<<ASSIGN
XSC$AMACHINE
      6470**DCL-ENT  6574--CALL
XSC$ASSOCIATE
      1449**DCL      6531<>CALL     6545<>CALL
XSC$ASSOCIATE.ACN$
      1495**DCL      6517<>CALL     6534<>CALL
XSC$ASSOCIATE.CTXT$
      1505**DCL      6528<>CALL     6541<>CALL
XSC$ASSOCIATE.DATA$
      1494**DCL      6529<>CALL     6542<>CALL
XSC$ASSOCIATE.ERRDEF
      1464**DCL      1484--REDEF
XSC$ASSOCIATE.IAEQ$
      1497**DCL      6521<>CALL
XSC$ASSOCIATE.IAPT$
      1496**DCL      6519<>CALL
XSC$ASSOCIATE.RAEQ$
      1501**DCL      6525<>CALL     6538<>CALL
XSC$ASSOCIATE.RAPT$
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:123  
      1500**DCL      6523<>CALL     6536<>CALL
XSC$ASSOCIATE.RESULT
      1463**DCL      6546>>IF       6674>>IF
XSC$ASSOCIATE.RSDIAG
      1462**DCL      6679>>IF
XSC$CTXPTR
      6471**DCL-ENT  6506--CALL
XSC$DUMPFPT
      6472**DCL-ENT  6573--CALL
XSC$GENERIC
      1390**DCL      6573<>CALL
XSC$GENERIC.CCID
      1397**DCL      6505>>ASSIGN
XSC$GENERIC.ERRDEF
      1399**DCL      1419--REDEF
XSC$GENERIC.ERROR
      1419**DCL      6494>>IF       6500<<ASSIGN   6508<<ASSIGN   6569<<ASSIGN   6577>>IF       6578<<ASSIGN
      6601<<ASSIGN   6614<<ASSIGN   6663<<ASSIGN   6676<<ASSIGN
XSC$GENERIC.FNC
      1396**DCL      6515>>DOCASE
XSC$P_ABORT.ERRDEF
      1534**DCL      1554--REDEF
XSC$RELEASE.DATA$
      1623**DCL      6551<>CALL     6556<>CALL
XSC$RELEASE.ERRDEF
      1593**DCL      1613--REDEF
XSC$RELEASE.REASON
      1591**DCL      6559>>IF       6685>>IF       6685>>IF       6692>>IF       6692>>IF
XSC$RESOLVE
      6473**DCL-ENT  6531--CALL     6545--CALL
XSC$U_ABORT.ABRTSRC
      1650**DCL      6699>>IF
XSC$U_ABORT.DATA$
      1682**DCL      6564<>CALL
XSC$U_ABORT.ERRDEF
      1652**DCL      1672--REDEF
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:124  
XSC_E$ABRTSRC
      5565**DCL      6566<>CALL
XSC_E$ACN
      5616**DCL      6517<>CALL     6534<>CALL
XSC_E$BADCID
      5412**DCL      6508>>ASSIGN
XSC_E$BADFNC
      5463**DCL      6569>>ASSIGN
XSC_E$CTXT
      5667**DCL      6528<>CALL     6541<>CALL
XSC_E$DATA
      5769**DCL      6529<>CALL     6542<>CALL     6551<>CALL     6556<>CALL     6564<>CALL
XSC_E$IAEQ
      5871**DCL      6521<>CALL
XSC_E$IAPT
      5973**DCL      6519<>CALL
XSC_E$NXTX
      6075**DCL      6601>>ASSIGN
XSC_E$RAEQ
      6177**DCL      6525<>CALL     6538<>CALL
XSC_E$RAPT
      6279**DCL      6523<>CALL     6536<>CALL
XSC_E$RDONLYFPT
      5361**DCL      6494>>IF       6496<>CALL
XSC_E$REASON
      6330**DCL      6553<>CALL     6558<>CALL
XSC_E$RESULT
      6381**DCL      6544<>CALL
XSC_E$STATE
      5514**DCL      6578>>ASSIGN
XSC_VBLK
      2194**DCL      6502>>ASSIGN
XSS$SCREECH
      6474**DCL-ENT  6496--CALL
XSS_TRACE
      6477**DCL      6572>>IF
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:125  
ZILCH IN PROCEDURE CKCTXT
      6644**DCL      6648<<ASSIGN   6652<<ASSIGN   6652>>ASSIGN   6660>>IF
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:126  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XSC$ACSE File=XSC$ACSE.:XSA1TSI                               WED 10/01/97 11:51 Page:127  
              MINI UREF LISTING

ABORT    6577**LABEL
B$PTR IN PROCEDURE CKCTXT   6639**DCL
B$PTR IN PROCEDURE CKDATA   6586**DCL
XSC$ACSE      17**PROC
XSC_E$CTXTID    5718**DCL
XSC_E$IAEID    5820**DCL
XSC_E$IAPID    5922**DCL
XSC_E$IMPL    6024**DCL
XSC_E$RAEID    6126**DCL
XSC_E$RAPID    6228**DCL
XSC_E$RSDIAG    6432**DCL

PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:128  
      622        1        /*T***********************************************************/
      623        2        /*T*                                                         */
      624        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      625        4        /*T*                                                         */
      626        5        /*T***********************************************************/
      627        6        /*F*    NAME:   XSC$RESOLVE
      628        7
      629        8                XSC$RESOLVE is called by XSC$ACSE to resolve the two Application
      630        9                Process Titles (Application layer addresses) in the XSC$ASSOCIATE
      631       10                fpt into two Presentation addresses.
      632       11                (The Directory Service is the guy who does the real work for this).
      633       12        */
      634       13        XSC$RESOLVE: PROC( PARM1) ALTRET;
      635       14        %INCLUDE K_ADDRESS_M;
      636      517        %INCLUDE XSC_COMMON_M;
      637     1170            %XSC$ADDRESS( NAME=XSC_SOURCE, STCLASS=SYMREF);
      638     1453            %XSC$ADDRESS( NAME=XSC_TARGET, STCLASS=SYMREF);
      639     1736            %XSC$ADDRESS;
      640     2019        %INCLUDE XSC_ACSE_E;
      641     2097        %INCLUDE XSC_ACSE_M;
      642     2406            %XSC$ASSOCIATE( STCLASS="BASED( PARM1$)");
      643     2481        %INCLUDE XSC_INTERNAL_E;
      644     2569        %INCLUDE XSC_INTERNAL_M;
      645     2914        %INCLUDE UM_CP6;
      646     3766        %MACRO ERRORDEF( NAME=XSC_ERROR, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      647     3767                         ERR#=0, SEV=0);
      648     3768            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
      649     3769                          MON='0'B, ERR#=ERR#, SEV=SEV);
      650     3770        %MEND;
      651     3771        %INCLUDE XSC_PERR_C;
      652     3848            %ERRORDEF( NAME=XSC_E$NODIRSERV, ERR#=%E$NODIRSERV);
      653     3896            /*E*  ERROR:  XSC-E$NODIRSERV-0
      654     3897                MESSAGE:  Directory Service User Agent not available.
      655     3898            */
      656     3899        %INCLUDE XSD_SUBS_C;
      657     4234        %INCLUDE XSD_MACRO_M;
      658     5343            %XSD_SERVICE( NAME=XSC_XSD_SERVICE, STCLASS=CONSTANT,
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:129  
      659     5344                          FNC=%XSD_FNC_READ, SUBC=%XSD_SUBC_READ,
      660     5345                          MODE=%XSD_MODE_NAME,
      661     5346                          LOCALOKAY=YES, UPDATELOCAL=YES,
      662     5347                          UENTADDR=XSC$RESOLVED);
      663     5512            %XSD_SERVICE( NAME=DFPT, STCLASS=AUTO);
      664     5677            %XSD_SERVICE( STCLASS="BASED( PARM1$)");
      665     5842
      666     5843    1       DCL XSC$COMMWAIT ENTRY(1) ALTRET;
      667     5844    1       DCL XSD$DIRECTORY ENTRY(1) ALTRET OPTIONAL;
      668     5845
      669     5846    1       DCL ERR SBIN;
      670     5847    1       DCL PARM1 SBIN;
      671     5848    1       DCL PARM1$ PTR;
      672     5849    1       DCL TMP$ PTR;
      673     5850    1       DCL SOURCEDONE BIT(1) STATIC INIT( %FALSE);
      674     5851    1       DCL TARGETDONE BIT(1) STATIC INIT( %FALSE);
      675     5852    1       DCL SOURCEERR BIT(36) STATIC;
      676     5853    1       DCL TARGETERR BIT(36) STATIC;
      677     5854
      678     5855    1       PARM1$ = ADDR( PARM1);
      679     5856    2       IF ENTADDR( XSD$DIRECTORY) = ENTADDR( NIL) THEN DO;
      680     5857    2           XSC$ASSOCIATE.ERROR = XSC_E$NODIRSERV;
      681     5858    2           ALTRETURN;
      682     5859    2           END;
      683     5860            /* first, set up to resolve the source address */
      684     5861    1       DFPT = XSC_XSD_SERVICE;
      685     5862    1       DFPT.EVENTID = XSC$ASSOCIATE.CCID*2 + 0;
      686     5863    1       DFPT.ATTRIBUTE.TYPE(0) = %XSD_AT_COMMONNAME;
      687     5864    1       DFPT.ATTRIBUTE.VALUE$(0) = XSC$ASSOCIATE.IAPT$;
      688     5865    1       DFPT.RESULT_ = VECTOR( XSC_SOURCE);
      689     5866    1       SOURCEERR = '0'O;
      690     5867    1       SOURCEDONE = %FALSE;
      691     5868    1       CALL XSD$DIRECTORY( DFPT) ALTRET( GETOUT);
      692     5869            /* next, set up to resolve the target address */
      693     5870    1       DFPT = XSC_XSD_SERVICE;
      694     5871    1       DFPT.EVENTID = XSC$ASSOCIATE.CCID*2 + 1;
      695     5872    1       DFPT.ATTRIBUTE.TYPE(0) = %XSD_AT_COMMONNAME;
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:130  
      696     5873    1       DFPT.ATTRIBUTE.VALUE$(0) = XSC$ASSOCIATE.RAPT$;
      697     5874    1       DFPT.RESULT_ = VECTOR( XSC_TARGET);
      698     5875    1       TARGETERR = '0'O;
      699     5876    1       TARGETDONE = %FALSE;
      700     5877    1       CALL XSD$DIRECTORY( DFPT) ALTRET( GETOUT);
      701     5878            /* now wait for address resolution if we have to */
      702     5879    2       DO WHILE( ~SOURCEDONE AND ~TARGETDONE);
      703     5880                /* loop until we have both addresses resolved */
      704     5881    2           CALL XSC$COMMWAIT( 10)
      705     5882    3           WHENALTRETURN DO;
      706     5883                    /* event occurred.. but we'll loop until both addrs resolved */
      707     5884    3               END;
      708     5885    2           END;
      709     5886            /* see if there was an error resolving either address */
      710     5887    1       IF SOURCEERR ~= '0'O THEN
      711     5888    1           XSC$ASSOCIATE.ERROR = SOURCEERR;  /* let appl know what happened */
      712     5889    1       ELSE
      713     5890    1           IF TARGETERR ~= '0'O THEN
      714     5891    1               XSC$ASSOCIATE.ERROR = TARGETERR; /* let appl know what happened */
      715     5892    1           ELSE
      716     5893    1               RETURN;
      717     5894    1       ALTRETURN;
      718     5895    1   GETOUT:
      719     5896    1       XSC$ASSOCIATE.ERROR = DFPT.ERRCODE;  /* hand DUA's error back to appl */
      720     5897    1       ALTRETURN;
      721     5898        %EJECT;
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:131  
      722     5899        /*F*    NAME:   XSC$RESOLVED
      723     5900
      724     5901                XSC$RESOLVED is called by the Directory Service user agent 'DUA'
      725     5902                when it has resolved, possibly with the assistance of the 'DSA',
      726     5903                an earlier resolve request.
      727     5904        */
      728     5905    1   XSC$RESOLVED: ENTRY( PARM1) ALTRET;
      729     5906
      730     5907    1       PARM1$ = ADDR( PARM1);  /* load XSD_SERVICE pointer */
      731     5908    1       ERR = XSD_SERVICE.ERRCODE.ERR#;
      732     5909    1       TMP$ = VBASE( XSD_SERVICE.RESULT_);
      733     5910    2       DO CASE( MOD( XSD_SERVICE.EVENTID, 2));
      734     5911    2           CASE( 0);
      735     5912    2               IF ERR ~= 0 THEN
      736     5913    2                   IF TMP$ ~= ADDR( XSC_SOURCE) THEN
      737     5914    2                       XSC_SOURCE = TMP$->XSC$ADDRESS;
      738     5915    2               SOURCEERR = XSD_SERVICE.ERRCODE;
      739     5916    2               SOURCEDONE = %TRUE;
      740     5917    2           CASE( 1);
      741     5918    2               IF ERR ~= 0 THEN
      742     5919    2                   IF TMP$ ~= ADDR( XSC_TARGET) THEN
      743     5920    2                       XSC_TARGET = TMP$->XSC$ADDRESS;
      744     5921    2               TARGETERR = XSD_SERVICE.ERRCODE;
      745     5922    2               TARGETDONE = %TRUE;
      746     5923    2           END;
      747     5924    1       RETURN;
      748     5925
      749     5926    1       END XSC$RESOLVE;
      750     5927        %EOD;

PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:132  
--  Include file information  --

   XSD_MACRO_M.:XSA1TOU  is referenced.
   XSD_SUBS_C.:XSA1TOU  is referenced.
   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
      No diagnostics issued in procedure XSC$RESOLVE.

   Procedure XSC$RESOLVE requires 133 words for executable code.
   Procedure XSC$RESOLVE requires 24 words of local(AUTO) storage.

PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:133  

 Object Unit name= XSC$RESOLVE                                File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:52:05.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     16     20  XSC$RESOLVE
    1   Data  even  none     4      4  XSC$RESOLVE
    2   Proc  even  none   133    205  XSC$RESOLVE
    3  RoData even  none     8     10  XSC$RESOLVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  XSC$RESOLVE
     2    127          yes     yes      Std        1  XSC$RESOLVED

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  XSC_E$NODIRSERV

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes    yes    Std       1 XSD$DIRECTORY
 yes     yes           Std       1 XSC$COMMWAIT
 yes     yes           Std       1 XSC$RESOLVED
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:134  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSC_SOURCE                            XSC_TARGET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:135  


      622        1        /*T***********************************************************/
      623        2        /*T*                                                         */
      624        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      625        4        /*T*                                                         */
      626        5        /*T***********************************************************/
      627        6        /*F*    NAME:   XSC$RESOLVE
      628        7
      629        8                XSC$RESOLVE is called by XSC$ACSE to resolve the two Application
      630        9                Process Titles (Application layer addresses) in the XSC$ASSOCIATE
      631       10                fpt into two Presentation addresses.
      632       11                (The Directory Service is the guy who does the real work for this).
      633       12        */
      634       13        XSC$RESOLVE: PROC( PARM1) ALTRET;

     13  2 000000   000000 700200 xent  XSC$RESOLVE  TSX0  ! X66_AUTO_1
         2 000001   000030 000001                    ZERO    24,1

      635       14        %INCLUDE K_ADDRESS_M;
      636      517        %INCLUDE XSC_COMMON_M;
      637     1170            %XSC$ADDRESS( NAME=XSC_SOURCE, STCLASS=SYMREF);
      638     1453            %XSC$ADDRESS( NAME=XSC_TARGET, STCLASS=SYMREF);
      639     1736            %XSC$ADDRESS;
      640     2019        %INCLUDE XSC_ACSE_E;
      641     2097        %INCLUDE XSC_ACSE_M;
      642     2406            %XSC$ASSOCIATE( STCLASS="BASED( PARM1$)");
      643     2481        %INCLUDE XSC_INTERNAL_E;
      644     2569        %INCLUDE XSC_INTERNAL_M;
      645     2914        %INCLUDE UM_CP6;
      646     3766        %MACRO ERRORDEF( NAME=XSC_ERROR, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      647     3767                         ERR#=0, SEV=0);
      648     3768            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
      649     3769                          MON='0'B, ERR#=ERR#, SEV=SEV);
      650     3770        %MEND;
      651     3771        %INCLUDE XSC_PERR_C;
      652     3848            %ERRORDEF( NAME=XSC_E$NODIRSERV, ERR#=%E$NODIRSERV);
      653     3896            /*E*  ERROR:  XSC-E$NODIRSERV-0
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:136  
      654     3897                MESSAGE:  Directory Service User Agent not available.
      655     3898            */
      656     3899        %INCLUDE XSD_SUBS_C;
      657     4234        %INCLUDE XSD_MACRO_M;
      658     5343            %XSD_SERVICE( NAME=XSC_XSD_SERVICE, STCLASS=CONSTANT,
      659     5344                          FNC=%XSD_FNC_READ, SUBC=%XSD_SUBC_READ,
      660     5345                          MODE=%XSD_MODE_NAME,
      661     5346                          LOCALOKAY=YES, UPDATELOCAL=YES,
      662     5347                          UENTADDR=XSC$RESOLVED);
      663     5512            %XSD_SERVICE( NAME=DFPT, STCLASS=AUTO);
      664     5677            %XSD_SERVICE( STCLASS="BASED( PARM1$)");
      665     5842
      666     5843    1       DCL XSC$COMMWAIT ENTRY(1) ALTRET;
      667     5844    1       DCL XSD$DIRECTORY ENTRY(1) ALTRET OPTIONAL;
      668     5845
      669     5846    1       DCL ERR SBIN;
      670     5847    1       DCL PARM1 SBIN;
      671     5848    1       DCL PARM1$ PTR;
      672     5849    1       DCL TMP$ PTR;
      673     5850    1       DCL SOURCEDONE BIT(1) STATIC INIT( %FALSE);
      674     5851    1       DCL TARGETDONE BIT(1) STATIC INIT( %FALSE);
      675     5852    1       DCL SOURCEERR BIT(36) STATIC;
      676     5853    1       DCL TARGETERR BIT(36) STATIC;
      677     5854
      678     5855    1       PARM1$ = ADDR( PARM1);

   5855  2 000002   200003 236100                    LDQ     @PARM1,,AUTO
         2 000003   200023 756100                    STQ     PARM1$,,AUTO

      679     5856    2       IF ENTADDR( XSD$DIRECTORY) = ENTADDR( NIL) THEN DO;

   5856  2 000004   000000 636000 xent               EAQ     XSD$DIRECTORY
         2 000005   000000 116000 3                  CMPQ    0
         2 000006   000013 601000 2                  TNZ     s:5861

      680     5857    2           XSC$ASSOCIATE.ERROR = XSC_E$NODIRSERV;

PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:137  
   5857  2 000007   000000 236000 0                  LDQ     XSC_E$NODIRSERV
         2 000010   200023 470500                    LDP0    PARM1$,,AUTO
         2 000011   000001 756100                    STQ     1,,PR0

      681     5858    2           ALTRETURN;

   5858  2 000012   000000 702200 xent               TSX2  ! X66_AALT

      682     5859    2           END;
      683     5860            /* first, set up to resolve the source address */
      684     5861    1       DFPT = XSC_XSD_SERVICE;

   5861  2 000013   000100 100400                    MLR     fill='000'O
         2 000014   000002 000064 0                  ADSC9   XSC_XSD_SERVICE          cn=0,n=52
         2 000015   200004 000064                    ADSC9   DFPT,,AUTO               cn=0,n=52

      685     5862    1       DFPT.EVENTID = XSC$ASSOCIATE.CCID*2 + 0;

   5862  2 000016   200023 470500                    LDP0    PARM1$,,AUTO
         2 000017   000000 236100                    LDQ     0,,PR0
         2 000020   000021 772000                    QRL     17
         2 000021   001776 376007                    ANQ     1022,DL
         2 000022   200005 756100                    STQ     DFPT+1,,AUTO

      686     5863    1       DFPT.ATTRIBUTE.TYPE(0) = %XSD_AT_COMMONNAME;

   5863  2 000023   000003 235007                    LDA     3,DL
         2 000024   200017 755100                    STA     DFPT+11,,AUTO

      687     5864    1       DFPT.ATTRIBUTE.VALUE$(0) = XSC$ASSOCIATE.IAPT$;

   5864  2 000025   000004 236100                    LDQ     4,,PR0
         2 000026   200020 756100                    STQ     DFPT+12,,AUTO

      688     5865    1       DFPT.RESULT_ = VECTOR( XSC_SOURCE);

   5865  2 000027   000002 237000 3                  LDAQ    2
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:138  
         2 000030   200012 757100                    STAQ    DFPT+6,,AUTO

      689     5866    1       SOURCEERR = '0'O;

   5866  2 000031   000002 450000 1                  STZ     SOURCEERR

      690     5867    1       SOURCEDONE = %FALSE;

   5867  2 000032   000000 450000 1                  STZ     SOURCEDONE

      691     5868    1       CALL XSD$DIRECTORY( DFPT) ALTRET( GETOUT);

   5868  2 000033   200004 631500                    EPPR1   DFPT,,AUTO
         2 000034   200026 451500                    STP1    TMP$+2,,AUTO
         2 000035   200026 630500                    EPPR0   TMP$+2,,AUTO
         2 000036   000001 631400 3                  EPPR1   1
         2 000037   000000 701000 xent               TSX1    XSD$DIRECTORY
         2 000040   000123 702000 2                  TSX2    GETOUT

      692     5869            /* next, set up to resolve the target address */
      693     5870    1       DFPT = XSC_XSD_SERVICE;

   5870  2 000041   000100 100400                    MLR     fill='000'O
         2 000042   000002 000064 0                  ADSC9   XSC_XSD_SERVICE          cn=0,n=52
         2 000043   200004 000064                    ADSC9   DFPT,,AUTO               cn=0,n=52

      694     5871    1       DFPT.EVENTID = XSC$ASSOCIATE.CCID*2 + 1;

   5871  2 000044   200023 470500                    LDP0    PARM1$,,AUTO
         2 000045   000000 236100                    LDQ     0,,PR0
         2 000046   000021 772000                    QRL     17
         2 000047   001776 376007                    ANQ     1022,DL
         2 000050   000001 036007                    ADLQ    1,DL
         2 000051   200005 756100                    STQ     DFPT+1,,AUTO

      695     5872    1       DFPT.ATTRIBUTE.TYPE(0) = %XSD_AT_COMMONNAME;

PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:139  
   5872  2 000052   000003 235007                    LDA     3,DL
         2 000053   200017 755100                    STA     DFPT+11,,AUTO

      696     5873    1       DFPT.ATTRIBUTE.VALUE$(0) = XSC$ASSOCIATE.RAPT$;

   5873  2 000054   000010 236100                    LDQ     8,,PR0
         2 000055   200020 756100                    STQ     DFPT+12,,AUTO

      697     5874    1       DFPT.RESULT_ = VECTOR( XSC_TARGET);

   5874  2 000056   000004 237000 3                  LDAQ    4
         2 000057   200012 757100                    STAQ    DFPT+6,,AUTO

      698     5875    1       TARGETERR = '0'O;

   5875  2 000060   000003 450000 1                  STZ     TARGETERR

      699     5876    1       TARGETDONE = %FALSE;

   5876  2 000061   000001 450000 1                  STZ     TARGETDONE

      700     5877    1       CALL XSD$DIRECTORY( DFPT) ALTRET( GETOUT);

   5877  2 000062   200004 631500                    EPPR1   DFPT,,AUTO
         2 000063   200026 451500                    STP1    TMP$+2,,AUTO
         2 000064   200026 630500                    EPPR0   TMP$+2,,AUTO
         2 000065   000001 631400 3                  EPPR1   1
         2 000066   000000 701000 xent               TSX1    XSD$DIRECTORY
         2 000067   000123 702000 2                  TSX2    GETOUT

      701     5878            /* now wait for address resolution if we have to */
      702     5879    2       DO WHILE( ~SOURCEDONE AND ~TARGETDONE);

   5879  2 000070   000076 710000 2                  TRA     s:5885

      703     5880                /* loop until we have both addresses resolved */
      704     5881    2           CALL XSC$COMMWAIT( 10)
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:140  

   5881  2 000071   000007 630400 3                  EPPR0   7
         2 000072   000001 631400 3                  EPPR1   1
         2 000073   000000 701000 xent               TSX1    XSC$COMMWAIT
         2 000074   000076 702000 2                  TSX2    s:5885
         2 000075   000076 710000 2                  TRA     s:5885

      705     5882    3           WHENALTRETURN DO;

      706     5883                    /* event occurred.. but we'll loop until both addrs resolved */
      707     5884    3               END;

      708     5885    2           END;

   5885  2 000076   000000 236000 1                  LDQ     SOURCEDONE
         2 000077   400000 376003                    ANQ     -131072,DU
         2 000100   400000 676003                    ERQ     -131072,DU
         2 000101   000106 600000 2                  TZE     s:5887
         2 000102   000001 236000 1                  LDQ     TARGETDONE
         2 000103   400000 376003                    ANQ     -131072,DU
         2 000104   400000 676003                    ERQ     -131072,DU
         2 000105   000071 601000 2                  TNZ     s:5881

      709     5886            /* see if there was an error resolving either address */
      710     5887    1       IF SOURCEERR ~= '0'O THEN

   5887  2 000106   000002 235000 1                  LDA     SOURCEERR
         2 000107   000114 600000 2                  TZE     s:5890

      711     5888    1           XSC$ASSOCIATE.ERROR = SOURCEERR;  /* let appl know what happened */

   5888  2 000110   000002 236000 1                  LDQ     SOURCEERR
         2 000111   200023 470500                    LDP0    PARM1$,,AUTO
         2 000112   000001 756100                    STQ     1,,PR0
         2 000113   000122 710000 2                  TRA     s:5894

      712     5889    1       ELSE
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:141  
      713     5890    1           IF TARGETERR ~= '0'O THEN

   5890  2 000114   000003 236000 1                  LDQ     TARGETERR
         2 000115   000121 600000 2                  TZE     s:5893

      714     5891    1               XSC$ASSOCIATE.ERROR = TARGETERR; /* let appl know what happened */

   5891  2 000116   200023 470500                    LDP0    PARM1$,,AUTO
         2 000117   000001 756100                    STQ     1,,PR0
         2 000120   000122 710000 2                  TRA     s:5894

      715     5892    1           ELSE
      716     5893    1               RETURN;

   5893  2 000121   000000 702200 xent               TSX2  ! X66_ARET

      717     5894    1       ALTRETURN;

   5894  2 000122   000000 702200 xent               TSX2  ! X66_AALT

      718     5895    1   GETOUT:
      719     5896    1       XSC$ASSOCIATE.ERROR = DFPT.ERRCODE;  /* hand DUA's error back to appl */

   5896  2 000123   200007 236100       GETOUT       LDQ     DFPT+3,,AUTO
         2 000124   200023 470500                    LDP0    PARM1$,,AUTO
         2 000125   000001 756100                    STQ     1,,PR0

      720     5897    1       ALTRETURN;

   5897  2 000126   000000 702200 xent               TSX2  ! X66_AALT

      721     5898        %EJECT;
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:142  
      722     5899        /*F*    NAME:   XSC$RESOLVED
      723     5900
      724     5901                XSC$RESOLVED is called by the Directory Service user agent 'DUA'
      725     5902                when it has resolved, possibly with the assistance of the 'DSA',
      726     5903                an earlier resolve request.
      727     5904        */
      728     5905    1   XSC$RESOLVED: ENTRY( PARM1) ALTRET;

   5905  2 000127   000000 700200 xent  XSC$RESOLVED TSX0  ! X66_AUTO_1
         2 000130   000030 000001                    ZERO    24,1

      729     5906
      730     5907    1       PARM1$ = ADDR( PARM1);  /* load XSD_SERVICE pointer */

   5907  2 000131   200003 236100                    LDQ     @PARM1,,AUTO
         2 000132   200023 756100                    STQ     PARM1$,,AUTO

      731     5908    1       ERR = XSD_SERVICE.ERRCODE.ERR#;

   5908  2 000133   200023 470500                    LDP0    PARM1$,,AUTO
         2 000134   000003 236100                    LDQ     3,,PR0
         2 000135   000003 772000                    QRL     3
         2 000136   037777 376007                    ANQ     16383,DL
         2 000137   200022 756100                    STQ     ERR,,AUTO

      732     5909    1       TMP$ = VBASE( XSD_SERVICE.RESULT_);

   5909  2 000140   000007 236100                    LDQ     7,,PR0
         2 000141   200024 756100                    STQ     TMP$,,AUTO

      733     5910    2       DO CASE( MOD( XSD_SERVICE.EVENTID, 2));

   5910  2 000142   000001 236100                    LDQ     1,,PR0
         2 000143   000001 376007                    ANQ     1,DL
         2 000144   000002 116007                    CMPQ    2,DL
         2 000145   000147 602006 2                  TNC     s:5910+5,QL
         2 000146   000204 710000 2                  TRA     s:5924
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:143  
         2 000147   000151 710000 2                  TRA     s:5912
         2 000150   000167 710000 2                  TRA     s:5918

      734     5911    2           CASE( 0);

      735     5912    2               IF ERR ~= 0 THEN

   5912  2 000151   200022 235100                    LDA     ERR,,AUTO
         2 000152   000162 600000 2                  TZE     s:5915

      736     5913    2                   IF TMP$ ~= ADDR( XSC_SOURCE) THEN

   5913  2 000153   000003 236000 3                  LDQ     3
         2 000154   200024 116100                    CMPQ    TMP$,,AUTO
         2 000155   000162 600000 2                  TZE     s:5915

      737     5914    2                       XSC_SOURCE = TMP$->XSC$ADDRESS;

   5914  2 000156   200024 471500                    LDP1    TMP$,,AUTO
         2 000157   000000 100500                    MLR     fill='000'O
         2 000160   100000 000456                    ADSC9   0,,PR1                   cn=0,n=302
         2 000161   000000 000456 xsym               ADSC9   XSC_SOURCE               cn=0,n=302

      738     5915    2               SOURCEERR = XSD_SERVICE.ERRCODE;

   5915  2 000162   000003 236100                    LDQ     3,,PR0
         2 000163   000002 756000 1                  STQ     SOURCEERR

      739     5916    2               SOURCEDONE = %TRUE;

   5916  2 000164   400000 236003                    LDQ     -131072,DU
         2 000165   000000 756000 1                  STQ     SOURCEDONE
         2 000166   000204 710000 2                  TRA     s:5924

      740     5917    2           CASE( 1);

      741     5918    2               IF ERR ~= 0 THEN
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:144  

   5918  2 000167   200022 235100                    LDA     ERR,,AUTO
         2 000170   000200 600000 2                  TZE     s:5921

      742     5919    2                   IF TMP$ ~= ADDR( XSC_TARGET) THEN

   5919  2 000171   000005 236000 3                  LDQ     5
         2 000172   200024 116100                    CMPQ    TMP$,,AUTO
         2 000173   000200 600000 2                  TZE     s:5921

      743     5920    2                       XSC_TARGET = TMP$->XSC$ADDRESS;

   5920  2 000174   200024 471500                    LDP1    TMP$,,AUTO
         2 000175   000000 100500                    MLR     fill='000'O
         2 000176   100000 000456                    ADSC9   0,,PR1                   cn=0,n=302
         2 000177   000000 000456 xsym               ADSC9   XSC_TARGET               cn=0,n=302

      744     5921    2               TARGETERR = XSD_SERVICE.ERRCODE;

   5921  2 000200   000003 236100                    LDQ     3,,PR0
         2 000201   000003 756000 1                  STQ     TARGETERR

      745     5922    2               TARGETDONE = %TRUE;

   5922  2 000202   400000 236003                    LDQ     -131072,DU
         2 000203   000001 756000 1                  STQ     TARGETDONE

      746     5923    2           END;

      747     5924    1       RETURN;

   5924  2 000204   000000 702200 xent               TSX2  ! X66_ARET

XSC_E$NODIRSERV
 Sect OctLoc
   0     000   302303 000150                                                    ...h

PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:145  
XSC_XSD_SERVICE
 Sect OctLoc
   0     002   001001 001000   000000 000000   620000 000000   000000 000000    ................
   0     006   000000 006014   000000 000000   000000 177640   000000 006014    ................
   0     012   000000 000000   000000 006014   000000 006014   ****** ******    ................
   0     016   ****** ******                                                    ....

SOURCEDONE
 Sect OctLoc
   1     000   0***** ******                                                    ....

TARGETDONE
 Sect OctLoc
   1     001   0***** ******                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000000 000000   000001 000000   000113 777640   000000 006000    .........K......
   3     004   000113 777640   000000 006000   000000 000012   000006 006000    .K..............
      748     5925
      749     5926    1       END XSC$RESOLVE;
      750     5927        %EOD;

PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:146  
--  Include file information  --

   XSD_MACRO_M.:XSA1TOU  is referenced.
   XSD_SUBS_C.:XSA1TOU  is referenced.
   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
      No diagnostics issued in procedure XSC$RESOLVE.
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:147  

 **** Variables and constants ****

  ****  Section 000 RoData XSC$RESOLVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 XSC_E$NODIRSERV            2-0-0/d STRC(468)   r     1 XSC_XSD_SERVICE

  ****  Section 001  Data  XSC$RESOLVE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 SOURCEDONE                 2-0-0/b BIT         r     1 SOURCEERR
     1-0-0/b BIT         r     1 TARGETDONE                 3-0-0/b BIT         r     1 TARGETERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PARM1                     4-0-0/d STRC(468)   r     1 DFPT
    22-0-0/w SBIN        r     1 ERR                       *0-0-0/w SBIN        r     1 PARM1
    23-0-0/w PTR         r     1 PARM1$                    24-0-0/w PTR         r     1 TMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2718)  r     1 XSC_SOURCE                 0-0-0/w STRC(2718)  r     1 XSC_TARGET

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:148  

     0-0-0/w STRC(2718)  r     1 XSC$ADDRESS                0-0-0/w STRC(504)   r     1 XSC$ASSOCIATE
     0-0-0/d STRC(468)   r     1 XSD_SERVICE


   Procedure XSC$RESOLVE requires 133 words for executable code.
   Procedure XSC$RESOLVE requires 24 words of local(AUTO) storage.
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:149  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:150  
          MINI XREF LISTING

DFPT
      5533**DCL      5861<<ASSIGN   5868<>CALL     5870<<ASSIGN   5877<>CALL
DFPT.ATTRIBUTE.TYPE
      5670**DCL      5863<<ASSIGN   5872<<ASSIGN
DFPT.ATTRIBUTE.VALUE$
      5673**DCL      5864<<ASSIGN   5873<<ASSIGN
DFPT.ERRCODE
      5602**DCL      5633--REDEF    5634--REDEF    5896>>ASSIGN
DFPT.EVENTID
      5552**DCL      5862<<ASSIGN   5871<<ASSIGN
DFPT.RESULT_
      5645**DCL      5865<<ASSIGN   5874<<ASSIGN
DFPT.UENTADDR$
      5649**DCL      5653--REDEF    5656--REDEF
ERR
      5846**DCL      5908<<ASSIGN   5912>>IF       5918>>IF
GETOUT
      5896**LABEL    5868--CALLALT  5877--CALLALT
PARM1
      5847**DCL        13--PROC     5855--ASSIGN   5905--ENTRY    5907--ASSIGN
PARM1$
      5848**DCL      2423--IMP-PTR  5698--IMP-PTR  5855<<ASSIGN   5857>>ASSIGN   5862>>ASSIGN   5864>>ASSIGN
      5871>>ASSIGN   5873>>ASSIGN   5888>>ASSIGN   5891>>ASSIGN   5896>>ASSIGN   5907<<ASSIGN   5908>>ASSIGN
      5909>>ASSIGN   5910>>DOCASE   5915>>ASSIGN   5921>>ASSIGN
SOURCEDONE
      5850**DCL      5867<<ASSIGN   5879>>DOWHILE  5916<<ASSIGN
SOURCEERR
      5852**DCL      5866<<ASSIGN   5887>>IF       5888>>ASSIGN   5915<<ASSIGN
TARGETDONE
      5851**DCL      5876<<ASSIGN   5879>>DOWHILE  5922<<ASSIGN
TARGETERR
      5853**DCL      5875<<ASSIGN   5890>>IF       5891>>ASSIGN   5921<<ASSIGN
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:151  
TMP$
      5849**DCL      5909<<ASSIGN   5913>>IF       5914>>ASSIGN   5919>>IF       5920>>ASSIGN
XSC$ADDRESS
      1753**DCL      5914>>ASSIGN   5920>>ASSIGN
XSC$ADDRESS.NSAP.ADDRESS_N
      2014**DCL      2015--REDEF
XSC$ASSOCIATE.CCID
      2435**DCL      5862>>ASSIGN   5871>>ASSIGN
XSC$ASSOCIATE.ERRDEF
      2438**DCL      2458--REDEF
XSC$ASSOCIATE.ERROR
      2458**DCL      5857<<ASSIGN   5888<<ASSIGN   5891<<ASSIGN   5896<<ASSIGN
XSC$ASSOCIATE.IAPT$
      2470**DCL      5864>>ASSIGN
XSC$ASSOCIATE.RAPT$
      2474**DCL      5873>>ASSIGN
XSC$COMMWAIT
      5843**DCL-ENT  5881--CALL
XSC$RESOLVED
      5905**ENTRY    5484--DCLINIT
XSC_E$NODIRSERV
      3862**DCL      5857>>ASSIGN
XSC_SOURCE
      1187**DCL      5865--ASSIGN   5913--IF       5914<<ASSIGN
XSC_SOURCE.NSAP.ADDRESS_N
      1448**DCL      1449--REDEF
XSC_TARGET
      1470**DCL      5874--ASSIGN   5919--IF       5920<<ASSIGN
XSC_TARGET.NSAP.ADDRESS_N
      1731**DCL      1732--REDEF
XSC_XSD_SERVICE
      5368**DCL      5861>>ASSIGN   5870>>ASSIGN
XSC_XSD_SERVICE.ERRCODE
      5437**DCL      5468--REDEF    5469--REDEF
XSC_XSD_SERVICE.UENTADDR$
      5484**DCL      5488--REDEF    5491--REDEF
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:152  
XSD$DIRECTORY
      5844**DCL-ENT  5856--IF       5868--CALL     5877--CALL
XSD_SERVICE.ERRCODE
      5767**DCL      5798--REDEF    5799--REDEF    5915>>ASSIGN   5921>>ASSIGN
XSD_SERVICE.ERRCODE.ERR#
      5795**DCL      5908>>ASSIGN
XSD_SERVICE.EVENTID
      5717**DCL      5910>>DOCASE
XSD_SERVICE.RESULT_
      5810**DCL      5909>>ASSIGN
XSD_SERVICE.UENTADDR$
      5814**DCL      5818--REDEF    5821--REDEF
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:153  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #005=XSC$RESOLVE File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:52 Page:154  
              MINI UREF LISTING

XSC$RESOLVE      13**PROC

PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:155  
      751        1        /*T***********************************************************/
      752        2        /*T*                                                         */
      753        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      754        4        /*T*                                                         */
      755        5        /*T***********************************************************/
      756        6        /*F*    NAME:   XSC$PRECV
      757        7
      758        8                XSC$PRECV is the sole entry to the ACSE (Application Control Service
      759        9                Elements) portion of the ISO Application layer from the Presentation
      760       10                layer.  An incoming Presentation message has caused the Presentation
      761       11                layer to fill in a parameter block and call this routine to report
      762       12                the message.
      763       13        */
      764       14        XSC$PRECV: PROC( PFPT) ALTRET;
      765       15        %INCLUDE XSC_ACSE_E;
      766       93        %INCLUDE XSC_ACSE_M;
      767      402            %XSC$GENERIC( FPTN=CFPT, STCLASS=AUTO);
      768      461            %XSC$GENERIC( STCLASS="BASED( VBLK.FPT$)");
      769      520        %INCLUDE XSC_INTERNAL_E;
      770      608        %INCLUDE XSC_INTERNAL_M;
      771      953            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( CTX$)");
      772      999            %XSC$VBLK( NAME=VBLK, STCLASS=AUTO);
      773     1105            %XSC$VBLK( NAME=XSC_VBLK, STCLASS="STATIC SYMDEF");
      774     1211        %INCLUDE XSS_SESSION_E;
      775     1776        %INCLUDE XSP_PRESENTATION_E;
      776     1875        %INCLUDE XSP_PRESENTATION_M;
      777     3361            %XSP$PRIMITIVES( STCLASS="BASED( PFPT$)");
      778     5060            %XSP$GENERIC( FPTN=PFPT, STCLASS="");
      779     5156        %INCLUDE K_ADDRESS_M;
      780     5659        %INCLUDE XSC_COMMON_M;
      781     6312            %XSC$CCB;
      782     6609            %XSC$CCB( NAME=TCCB, STCLASS="BASED( TCCB$)");
      783     6906        %INCLUDE XSP_ASN1_M;
      784     7252            %XSP_ASN1_FPT( FPTN=AFPT, STCLASS="BASED( AFPT$)");
      785     7272        %INCLUDE UM_CP6;
      786     8124        %MACRO FATALDEF( NAME=XSC_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      787     8125                         ERR#=0, SEV=7);
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:156  
      788     8126            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
      789     8127                          MON='0'B, ERR#=ERR#, SEV=SEV);
      790     8128        %MEND;
      791     8129        %INCLUDE XSC_PERR_C;
      792     8206            %FATALDEF( NAME=XSC_F$NOPCID, ERR#=%F$NOPCID);
      793     8254            /*E*  ERROR:  XSC-F$NOPCID-7
      794     8255                MESSAGE:  Presentation didn't supply a PCID.
      795     8256            */
      796     8257
      797     8258    1       DCL XSC$AMACHINE ENTRY(1) ALTRET;
      798     8259    1       DCL XSC$CTXPTR ENTRY(2) ALTRET;
      799     8260    1       DCL XSC$DECODE ENTRY(2) ALTRET;
      800     8261    1       DCL XSC$GETCTX ENTRY(2) ALTRET;
      801     8262    1       DCL XSS$SCREECH ENTRY(1);
      802     8263
      803     8264    1       DCL XSS_CCB$$ PTR SYMREF;
      804     8265
      805     8266    1       DCL AFPT$ PTR;
      806     8267    1       DCL CCB$(0:0) PTR BASED( XSS_CCB$$) ALIGNED;
      807     8268    1       DCL CCID SBIN;
      808     8269    1       DCL CTX$ PTR;
      809     8270    1       DCL I SBIN;
      810     8271    1       DCL PFPT$ PTR;
      811     8272    1       DCL SASE$ EPTR;
      812     8273    1       DCL SASEONLY BIT(1);
      813     8274    1       DCL TCCB$ PTR;
      814     8275
      815     8276    1       PFPT$ = ADDR( PFPT);
      816     8277    2       IF XSP$GENERIC.PCID ~= 0 THEN DO;
      817     8278    2           CCID = XSP$GENERIC.PCID;
      818     8279    2           CALL XSC$CTXPTR( CCID, CTX$)
      819     8280    3           WHENALTRETURN DO;
      820     8281                    /* This appears to be an incoming connection attempt */
      821     8282    3               CALL XSC$GETCTX( CTX$, CCID)
      822     8283    4               WHENALTRETURN DO;
      823     8284    4                   ALTRETURN;  /* reject connect attempt */
      824     8285    4                   END;
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:157  
      825     8286    3               CCTX.ENTRY$ = CCB$( CCID)->XSC$CCB.ACSE$;  /* inherit entry */
      826     8287    3               END;
      827     8288    2           END;
      828     8289    1       ELSE
      829     8290                /* PCID not filled in.  Presentation fouled up. */
      830     8291    1           CALL XSS$SCREECH( XSC_F$NOPCID);
      831     8292    1       VBLK = XSC_VBLK;
      832     8293    1       VBLK.CTX$ = CTX$;
      833     8294    1       VBLK.FPT$ = ADDR( CFPT);
      834     8295    2       DO CASE( XSP$GENERIC.FNC);
      835     8296    2           CASE( %XSP_FNC_PACEIND#,
      836     8297    2                 %XSP_FNC_PACECNF#,
      837     8298    2                 %XSP_FNC_PACRIND#,
      838     8299    2                 %XSP_FNC_PACSIND#,
      839     8300    2                 %XSP_FNC_PALTIND#,
      840     8301    2                 %XSP_FNC_PALTCNF#,
      841     8302    2                 %XSP_FNC_PCADIND#,
      842     8303    2                 %XSP_FNC_PCADCNF#,
      843     8304    2                 %XSP_FNC_PCONIND#,
      844     8305    2                 %XSP_FNC_PCONCNF#,
      845     8306    2                 %XSP_FNC_PDATIND#,
      846     8307    2                 %XSP_FNC_PEXPIND#,
      847     8308    2                 %XSP_FNC_PRELIND#,
      848     8309    2                 %XSP_FNC_PRELCNF#,
      849     8310    2                 %XSP_FNC_PRSXIND#,
      850     8311    2                 %XSP_FNC_PRSXCNF#,
      851     8312    2                 %XSP_FNC_PSMAIND#,
      852     8313    2                 %XSP_FNC_PSMACNF#,
      853     8314    2                 %XSP_FNC_PSMIIND#,
      854     8315    2                 %XSP_FNC_PSMICNF#,
      855     8316    2                 %XSP_FNC_PTKPIND#,
      856     8317    2                 %XSP_FNC_PTYDIND#,
      857     8318    2                 %XSP_FNC_PUABIND#,
      858     8319    2                 %XSP_FNC_PPERIND#);
      859     8320    3               IF XSP$GENERIC.DATA$ ~= ADDR( NIL) THEN DO;
      860     8321    3                   AFPT$ = XSP$GENERIC.DATA$;
      861     8322    3                   VBLK.DATA.PTR$ = AFPT.BUF$;
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:158  
      862     8323    3                   VBLK.DATA.SIZE = AFPT.NXTX;
      863     8324    3                   END;
      864     8325    2           CASE( ELSE);
      865     8326                    /* otherwise, no data present */
      866     8327    2           END;
      867     8328    1       SASEONLY = %FALSE;
      868     8329    2       DO CASE( XSP$GENERIC.FNC);
      869     8330    2           CASE( %XSP_FNC_PCONIND#,
      870     8331    2                 %XSP_FNC_PRELCNF#);
      871     8332                    /* These functions are for ACSE only */
      872     8333    2               CALL XSC$DECODE( VBLK, PFPT$)
      873     8334    3               WHENALTRETURN DO;
      874     8335    3                   VBLK.APDUERR = 1;
      875     8336    3                   END;
      876     8337    2           CASE( %XSP_FNC_PCONCNF#,
      877     8338    2                 %XSP_FNC_PRELIND#,
      878     8339    2                 %XSP_FNC_PUABIND#,
      879     8340    2                 %XSP_FNC_PPABIND#);
      880     8341                    /* These functions are for both ACSE and any SASE routines */
      881     8342    2               CALL XSC$DECODE( VBLK, PFPT$)
      882     8343    3               WHENALTRETURN DO;
      883     8344    3                   VBLK.APDUERR = 1;
      884     8345    3                   END;
      885     8346    2               GOTO SASETOO;
      886     8347    2           CASE( ELSE);
      887     8348                    /* Any other functions are only for SASE routines */
      888     8349    2               SASEONLY = %TRUE;
      889     8350    2   SASETOO:
      890     8351    2               TCCB$ = CCB$( XSP$GENERIC.PCID);
      891     8352    3               DO I = 0 TO 2;
      892     8353    3                   SASE$ = TCCB.SASE$( I);
      893     8354    3                   IF SASE$ ~= ENTADDR( NIL) THEN
      894     8355    3                       CALL SASE$( XSP$GENERIC)
      895     8356    4                       WHENALTRETURN DO;
      896     8357                                /* ignore ALTRETURN from SASE routine */
      897     8358    4                           END;
      898     8359    3                   END;
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:159  
      899     8360    2               IF SASEONLY THEN
      900     8361                        /* this message supposedly transparent to ACSE... */
      901     8362    2                   RETURN;
      902     8363    2           END;
      903     8364    1       XSC$GENERIC.CCID = XSP$GENERIC.PCID;
      904     8365            /* VBLK.EVENT was filled in by XSC$DECODE above */
      905     8366    1       CALL XSC$AMACHINE( VBLK)
      906     8367    2       WHENALTRETURN DO;
      907     8368    2           ALTRETURN;  /* connection died or protocol error */
      908     8369    2           END;
      909     8370    1       RETURN;
      910     8371
      911     8372    1       END XSC$PRECV;
      912     8373        %EOD;

PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:160  
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSC$PRECV.

   Procedure XSC$PRECV requires 231 words for executable code.
   Procedure XSC$PRECV requires 36 words of local(AUTO) storage.

PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:161  

 Object Unit name= XSC$PRECV                                  File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:52:16.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     7      7  XSC$PRECV
    1  RoData even  UTS      1      1  XSC$PRECV
    2   Proc  even  none   231    347  XSC$PRECV
    3  RoData even  none     5      5  XSC$PRECV

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  XSC$PRECV

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  XSC_VBLK                           1      0  XSC_F$NOPCID
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:162  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XSC$CTXPTR
 yes     yes           Std       2 XSC$GETCTX
         yes           Std       1 XSS$SCREECH
 yes     yes           Std       1 XSC$AMACHINE
 yes     yes           Std       2 XSC$DECODE
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSS_CCB$$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:163  


      751        1        /*T***********************************************************/
      752        2        /*T*                                                         */
      753        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      754        4        /*T*                                                         */
      755        5        /*T***********************************************************/
      756        6        /*F*    NAME:   XSC$PRECV
      757        7
      758        8                XSC$PRECV is the sole entry to the ACSE (Application Control Service
      759        9                Elements) portion of the ISO Application layer from the Presentation
      760       10                layer.  An incoming Presentation message has caused the Presentation
      761       11                layer to fill in a parameter block and call this routine to report
      762       12                the message.
      763       13        */
      764       14        XSC$PRECV: PROC( PFPT) ALTRET;

     14  2 000000   000000 700200 xent  XSC$PRECV    TSX0  ! X66_AUTO_1
         2 000001   000044 000001                    ZERO    36,1

      765       15        %INCLUDE XSC_ACSE_E;
      766       93        %INCLUDE XSC_ACSE_M;
      767      402            %XSC$GENERIC( FPTN=CFPT, STCLASS=AUTO);
      768      461            %XSC$GENERIC( STCLASS="BASED( VBLK.FPT$)");
      769      520        %INCLUDE XSC_INTERNAL_E;
      770      608        %INCLUDE XSC_INTERNAL_M;
      771      953            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( CTX$)");
      772      999            %XSC$VBLK( NAME=VBLK, STCLASS=AUTO);
      773     1105            %XSC$VBLK( NAME=XSC_VBLK, STCLASS="STATIC SYMDEF");
      774     1211        %INCLUDE XSS_SESSION_E;
      775     1776        %INCLUDE XSP_PRESENTATION_E;
      776     1875        %INCLUDE XSP_PRESENTATION_M;
      777     3361            %XSP$PRIMITIVES( STCLASS="BASED( PFPT$)");
      778     5060            %XSP$GENERIC( FPTN=PFPT, STCLASS="");
      779     5156        %INCLUDE K_ADDRESS_M;
      780     5659        %INCLUDE XSC_COMMON_M;
      781     6312            %XSC$CCB;
      782     6609            %XSC$CCB( NAME=TCCB, STCLASS="BASED( TCCB$)");
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:164  
      783     6906        %INCLUDE XSP_ASN1_M;
      784     7252            %XSP_ASN1_FPT( FPTN=AFPT, STCLASS="BASED( AFPT$)");
      785     7272        %INCLUDE UM_CP6;
      786     8124        %MACRO FATALDEF( NAME=XSC_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      787     8125                         ERR#=0, SEV=7);
      788     8126            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
      789     8127                          MON='0'B, ERR#=ERR#, SEV=SEV);
      790     8128        %MEND;
      791     8129        %INCLUDE XSC_PERR_C;
      792     8206            %FATALDEF( NAME=XSC_F$NOPCID, ERR#=%F$NOPCID);
      793     8254            /*E*  ERROR:  XSC-F$NOPCID-7
      794     8255                MESSAGE:  Presentation didn't supply a PCID.
      795     8256            */
      796     8257
      797     8258    1       DCL XSC$AMACHINE ENTRY(1) ALTRET;
      798     8259    1       DCL XSC$CTXPTR ENTRY(2) ALTRET;
      799     8260    1       DCL XSC$DECODE ENTRY(2) ALTRET;
      800     8261    1       DCL XSC$GETCTX ENTRY(2) ALTRET;
      801     8262    1       DCL XSS$SCREECH ENTRY(1);
      802     8263
      803     8264    1       DCL XSS_CCB$$ PTR SYMREF;
      804     8265
      805     8266    1       DCL AFPT$ PTR;
      806     8267    1       DCL CCB$(0:0) PTR BASED( XSS_CCB$$) ALIGNED;
      807     8268    1       DCL CCID SBIN;
      808     8269    1       DCL CTX$ PTR;
      809     8270    1       DCL I SBIN;
      810     8271    1       DCL PFPT$ PTR;
      811     8272    1       DCL SASE$ EPTR;
      812     8273    1       DCL SASEONLY BIT(1);
      813     8274    1       DCL TCCB$ PTR;
      814     8275
      815     8276    1       PFPT$ = ADDR( PFPT);

   8276  2 000002   200003 236100                    LDQ     @PFPT,,AUTO
         2 000003   200035 756100                    STQ     PFPT$,,AUTO

PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:165  
      816     8277    2       IF XSP$GENERIC.PCID ~= 0 THEN DO;

   8277  2 000004   200035 470500                    LDP0    PFPT$,,AUTO
         2 000005   000000 236100                    LDQ     0,,PR0
         2 000006   000777 316003                    CANQ    511,DU
         2 000007   000046 600000 2                  TZE     s:8291

      817     8278    2           CCID = XSP$GENERIC.PCID;

   8278  2 000010   000000 236100                    LDQ     0,,PR0
         2 000011   000022 772000                    QRL     18
         2 000012   000777 376007                    ANQ     511,DL
         2 000013   200032 756100                    STQ     CCID,,AUTO

      818     8279    2           CALL XSC$CTXPTR( CCID, CTX$)

   8279  2 000014   200033 631500                    EPPR1   CTX$,,AUTO
         2 000015   200043 451500                    STP1    TCCB$+3,,AUTO
         2 000016   200032 633500                    EPPR3   CCID,,AUTO
         2 000017   200042 453500                    STP3    TCCB$+2,,AUTO
         2 000020   200042 630500                    EPPR0   TCCB$+2,,AUTO
         2 000021   000000 631400 3                  EPPR1   0
         2 000022   000000 701000 xent               TSX1    XSC$CTXPTR
         2 000023   000025 702000 2                  TSX2    s:8282
         2 000024   000045 710000 2                  TRA     s:8288

      819     8280    3           WHENALTRETURN DO;

      820     8281                    /* This appears to be an incoming connection attempt */
      821     8282    3               CALL XSC$GETCTX( CTX$, CCID)

   8282  2 000025   200032 630500                    EPPR0   CCID,,AUTO
         2 000026   200043 450500                    STP0    TCCB$+3,,AUTO
         2 000027   200033 631500                    EPPR1   CTX$,,AUTO
         2 000030   200042 451500                    STP1    TCCB$+2,,AUTO
         2 000031   200042 630500                    EPPR0   TCCB$+2,,AUTO
         2 000032   000000 631400 3                  EPPR1   0
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:166  
         2 000033   000000 701000 xent               TSX1    XSC$GETCTX
         2 000034   000036 702000 2                  TSX2    s:8284
         2 000035   000037 710000 2                  TRA     s:8286

      822     8283    4               WHENALTRETURN DO;

      823     8284    4                   ALTRETURN;  /* reject connect attempt */

   8284  2 000036   000000 702200 xent               TSX2  ! X66_AALT

      824     8285    4                   END;
      825     8286    3               CCTX.ENTRY$ = CCB$( CCID)->XSC$CCB.ACSE$;  /* inherit entry */

   8286  2 000037   000000 470400 xsym               LDP0    XSS_CCB$$
         2 000040   200032 720100                    LXL0    CCID,,AUTO
         2 000041   000000 471510                    LDP1    0,X0,PR0
         2 000042   100012 236100                    LDQ     10,,PR1
         2 000043   200033 473500                    LDP3    CTX$,,AUTO
         2 000044   300001 756100                    STQ     1,,PR3

      826     8287    3               END;

      827     8288    2           END;

   8288  2 000045   000052 710000 2                  TRA     s:8292

      828     8289    1       ELSE
      829     8290                /* PCID not filled in.  Presentation fouled up. */
      830     8291    1           CALL XSS$SCREECH( XSC_F$NOPCID);

   8291  2 000046   000002 630400 3                  EPPR0   2
         2 000047   000001 631400 3                  EPPR1   1
         2 000050   000000 701000 xent               TSX1    XSS$SCREECH
         2 000051   000000 011000                    NOP     0

      831     8292    1       VBLK = XSC_VBLK;

PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:167  
   8292  2 000052   000100 100400                    MLR     fill='000'O
         2 000053   000000 000034 0                  ADSC9   XSC_VBLK                 cn=0,n=28
         2 000054   200022 000034                    ADSC9   VBLK,,AUTO               cn=0,n=28

      832     8293    1       VBLK.CTX$ = CTX$;

   8293  2 000055   200033 236100                    LDQ     CTX$,,AUTO
         2 000056   200022 756100                    STQ     VBLK,,AUTO

      833     8294    1       VBLK.FPT$ = ADDR( CFPT);

   8294  2 000057   200004 630500                    EPPR0   CFPT,,AUTO
         2 000060   200023 450500                    STP0    VBLK+1,,AUTO

      834     8295    2       DO CASE( XSP$GENERIC.FNC);

   8295  2 000061   200035 471500                    LDP1    PFPT$,,AUTO
         2 000062   100000 236100                    LDQ     0,,PR1
         2 000063   000033 772000                    QRL     27
         2 000064   000006 136007                    SBLQ    6,DL
         2 000065   000071 116007                    CMPQ    57,DL
         2 000066   000070 602006 2                  TNC     s:8295+7,QL
         2 000067   000173 710000 2                  TRA     s:8328
         2 000070   000161 710000 2                  TRA     s:8320
         2 000071   000173 710000 2                  TRA     s:8328
         2 000072   000161 710000 2                  TRA     s:8320
         2 000073   000173 710000 2                  TRA     s:8328
         2 000074   000173 710000 2                  TRA     s:8328
         2 000075   000173 710000 2                  TRA     s:8328
         2 000076   000173 710000 2                  TRA     s:8328
         2 000077   000173 710000 2                  TRA     s:8328
         2 000100   000161 710000 2                  TRA     s:8320
         2 000101   000173 710000 2                  TRA     s:8328
         2 000102   000161 710000 2                  TRA     s:8320
         2 000103   000173 710000 2                  TRA     s:8328
         2 000104   000161 710000 2                  TRA     s:8320
         2 000105   000173 710000 2                  TRA     s:8328
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:168  
         2 000106   000161 710000 2                  TRA     s:8320
         2 000107   000173 710000 2                  TRA     s:8328
         2 000110   000161 710000 2                  TRA     s:8320
         2 000111   000173 710000 2                  TRA     s:8328
         2 000112   000161 710000 2                  TRA     s:8320
         2 000113   000173 710000 2                  TRA     s:8328
         2 000114   000161 710000 2                  TRA     s:8320
         2 000115   000173 710000 2                  TRA     s:8328
         2 000116   000161 710000 2                  TRA     s:8320
         2 000117   000173 710000 2                  TRA     s:8328
         2 000120   000173 710000 2                  TRA     s:8328
         2 000121   000173 710000 2                  TRA     s:8328
         2 000122   000161 710000 2                  TRA     s:8320
         2 000123   000173 710000 2                  TRA     s:8328
         2 000124   000161 710000 2                  TRA     s:8320
         2 000125   000173 710000 2                  TRA     s:8328
         2 000126   000161 710000 2                  TRA     s:8320
         2 000127   000173 710000 2                  TRA     s:8328
         2 000130   000161 710000 2                  TRA     s:8320
         2 000131   000173 710000 2                  TRA     s:8328
         2 000132   000161 710000 2                  TRA     s:8320
         2 000133   000173 710000 2                  TRA     s:8328
         2 000134   000161 710000 2                  TRA     s:8320
         2 000135   000173 710000 2                  TRA     s:8328
         2 000136   000161 710000 2                  TRA     s:8320
         2 000137   000173 710000 2                  TRA     s:8328
         2 000140   000161 710000 2                  TRA     s:8320
         2 000141   000173 710000 2                  TRA     s:8328
         2 000142   000161 710000 2                  TRA     s:8320
         2 000143   000173 710000 2                  TRA     s:8328
         2 000144   000161 710000 2                  TRA     s:8320
         2 000145   000173 710000 2                  TRA     s:8328
         2 000146   000173 710000 2                  TRA     s:8328
         2 000147   000173 710000 2                  TRA     s:8328
         2 000150   000161 710000 2                  TRA     s:8320
         2 000151   000173 710000 2                  TRA     s:8328
         2 000152   000161 710000 2                  TRA     s:8320
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:169  
         2 000153   000173 710000 2                  TRA     s:8328
         2 000154   000161 710000 2                  TRA     s:8320
         2 000155   000173 710000 2                  TRA     s:8328
         2 000156   000173 710000 2                  TRA     s:8328
         2 000157   000173 710000 2                  TRA     s:8328
         2 000160   000161 710000 2                  TRA     s:8320

      835     8296    2           CASE( %XSP_FNC_PACEIND#,

      836     8297    2                 %XSP_FNC_PACECNF#,
      837     8298    2                 %XSP_FNC_PACRIND#,
      838     8299    2                 %XSP_FNC_PACSIND#,
      839     8300    2                 %XSP_FNC_PALTIND#,
      840     8301    2                 %XSP_FNC_PALTCNF#,
      841     8302    2                 %XSP_FNC_PCADIND#,
      842     8303    2                 %XSP_FNC_PCADCNF#,
      843     8304    2                 %XSP_FNC_PCONIND#,
      844     8305    2                 %XSP_FNC_PCONCNF#,
      845     8306    2                 %XSP_FNC_PDATIND#,
      846     8307    2                 %XSP_FNC_PEXPIND#,
      847     8308    2                 %XSP_FNC_PRELIND#,
      848     8309    2                 %XSP_FNC_PRELCNF#,
      849     8310    2                 %XSP_FNC_PRSXIND#,
      850     8311    2                 %XSP_FNC_PRSXCNF#,
      851     8312    2                 %XSP_FNC_PSMAIND#,
      852     8313    2                 %XSP_FNC_PSMACNF#,
      853     8314    2                 %XSP_FNC_PSMIIND#,
      854     8315    2                 %XSP_FNC_PSMICNF#,
      855     8316    2                 %XSP_FNC_PTKPIND#,
      856     8317    2                 %XSP_FNC_PTYDIND#,
      857     8318    2                 %XSP_FNC_PUABIND#,
      858     8319    2                 %XSP_FNC_PPERIND#);
      859     8320    3               IF XSP$GENERIC.DATA$ ~= ADDR( NIL) THEN DO;

   8320  2 000161   100002 236100                    LDQ     2,,PR1
         2 000162   000003 116000 3                  CMPQ    3
         2 000163   000173 600000 2                  TZE     s:8328
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:170  

      860     8321    3                   AFPT$ = XSP$GENERIC.DATA$;

   8321  2 000164   200031 756100                    STQ     AFPT$,,AUTO

      861     8322    3                   VBLK.DATA.PTR$ = AFPT.BUF$;

   8322  2 000165   200031 473500                    LDP3    AFPT$,,AUTO
         2 000166   300001 236100                    LDQ     1,,PR3
         2 000167   200026 756100                    STQ     VBLK+4,,AUTO

      862     8323    3                   VBLK.DATA.SIZE = AFPT.NXTX;

   8323  2 000170   300014 235100                    LDA     12,,PR3
         2 000171   200027 755100                    STA     VBLK+5,,AUTO

      863     8324    3                   END;

   8324  2 000172   000173 710000 2                  TRA     s:8328

      864     8325    2           CASE( ELSE);

      865     8326                    /* otherwise, no data present */
      866     8327    2           END;

      867     8328    1       SASEONLY = %FALSE;

   8328  2 000173   200037 450100                    STZ     SASEONLY,,AUTO

      868     8329    2       DO CASE( XSP$GENERIC.FNC);

   8329  2 000174   100000 236100                    LDQ     0,,PR1
         2 000175   000033 772000                    QRL     27
         2 000176   000032 136007                    SBLQ    26,DL
         2 000177   000044 116007                    CMPQ    36,DL
         2 000200   000202 602006 2                  TNC     s:8329+6,QL
         2 000201   000276 710000 2                  TRA     s:8349
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:171  
         2 000202   000246 710000 2                  TRA     s:8333
         2 000203   000276 710000 2                  TRA     s:8349
         2 000204   000262 710000 2                  TRA     s:8342
         2 000205   000276 710000 2                  TRA     s:8349
         2 000206   000276 710000 2                  TRA     s:8349
         2 000207   000276 710000 2                  TRA     s:8349
         2 000210   000276 710000 2                  TRA     s:8349
         2 000211   000276 710000 2                  TRA     s:8349
         2 000212   000276 710000 2                  TRA     s:8349
         2 000213   000276 710000 2                  TRA     s:8349
         2 000214   000262 710000 2                  TRA     s:8342
         2 000215   000276 710000 2                  TRA     s:8349
         2 000216   000246 710000 2                  TRA     s:8333
         2 000217   000276 710000 2                  TRA     s:8349
         2 000220   000276 710000 2                  TRA     s:8349
         2 000221   000276 710000 2                  TRA     s:8349
         2 000222   000276 710000 2                  TRA     s:8349
         2 000223   000276 710000 2                  TRA     s:8349
         2 000224   000276 710000 2                  TRA     s:8349
         2 000225   000276 710000 2                  TRA     s:8349
         2 000226   000276 710000 2                  TRA     s:8349
         2 000227   000276 710000 2                  TRA     s:8349
         2 000230   000276 710000 2                  TRA     s:8349
         2 000231   000276 710000 2                  TRA     s:8349
         2 000232   000276 710000 2                  TRA     s:8349
         2 000233   000276 710000 2                  TRA     s:8349
         2 000234   000276 710000 2                  TRA     s:8349
         2 000235   000276 710000 2                  TRA     s:8349
         2 000236   000276 710000 2                  TRA     s:8349
         2 000237   000276 710000 2                  TRA     s:8349
         2 000240   000276 710000 2                  TRA     s:8349
         2 000241   000276 710000 2                  TRA     s:8349
         2 000242   000262 710000 2                  TRA     s:8342
         2 000243   000276 710000 2                  TRA     s:8349
         2 000244   000276 710000 2                  TRA     s:8349
         2 000245   000262 710000 2                  TRA     s:8342

PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:172  
      869     8330    2           CASE( %XSP_FNC_PCONIND#,

      870     8331    2                 %XSP_FNC_PRELCNF#);
      871     8332                    /* These functions are for ACSE only */
      872     8333    2               CALL XSC$DECODE( VBLK, PFPT$)

   8333  2 000246   200035 633500                    EPPR3   PFPT$,,AUTO
         2 000247   200043 453500                    STP3    TCCB$+3,,AUTO
         2 000250   200022 634500                    EPPR4   VBLK,,AUTO
         2 000251   200042 454500                    STP4    TCCB$+2,,AUTO
         2 000252   200042 630500                    EPPR0   TCCB$+2,,AUTO
         2 000253   000000 631400 3                  EPPR1   0
         2 000254   000000 701000 xent               TSX1    XSC$DECODE
         2 000255   000257 702000 2                  TSX2    s:8335
         2 000256   000261 710000 2                  TRA     s:8336

      873     8334    3               WHENALTRETURN DO;

      874     8335    3                   VBLK.APDUERR = 1;

   8335  2 000257   001000 236007                    LDQ     512,DL
         2 000260   200030 552110                    STBQ    VBLK+6,'10'O,AUTO

      875     8336    3                   END;

   8336  2 000261   000332 710000 2                  TRA     s:8364

      876     8337    2           CASE( %XSP_FNC_PCONCNF#,

      877     8338    2                 %XSP_FNC_PRELIND#,
      878     8339    2                 %XSP_FNC_PUABIND#,
      879     8340    2                 %XSP_FNC_PPABIND#);
      880     8341                    /* These functions are for both ACSE and any SASE routines */
      881     8342    2               CALL XSC$DECODE( VBLK, PFPT$)

   8342  2 000262   200035 633500                    EPPR3   PFPT$,,AUTO
         2 000263   200043 453500                    STP3    TCCB$+3,,AUTO
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:173  
         2 000264   200022 634500                    EPPR4   VBLK,,AUTO
         2 000265   200042 454500                    STP4    TCCB$+2,,AUTO
         2 000266   200042 630500                    EPPR0   TCCB$+2,,AUTO
         2 000267   000000 631400 3                  EPPR1   0
         2 000270   000000 701000 xent               TSX1    XSC$DECODE
         2 000271   000273 702000 2                  TSX2    s:8344
         2 000272   000275 710000 2                  TRA     s:8346

      882     8343    3               WHENALTRETURN DO;

      883     8344    3                   VBLK.APDUERR = 1;

   8344  2 000273   001000 236007                    LDQ     512,DL
         2 000274   200030 552110                    STBQ    VBLK+6,'10'O,AUTO

      884     8345    3                   END;

      885     8346    2               GOTO SASETOO;

   8346  2 000275   000300 710000 2                  TRA     SASETOO

      886     8347    2           CASE( ELSE);

      887     8348                    /* Any other functions are only for SASE routines */
      888     8349    2               SASEONLY = %TRUE;

   8349  2 000276   400000 236003                    LDQ     -131072,DU
         2 000277   200037 756100                    STQ     SASEONLY,,AUTO

      889     8350    2   SASETOO:
      890     8351    2               TCCB$ = CCB$( XSP$GENERIC.PCID);

   8351  2 000300   200035 470500       SASETOO      LDP0    PFPT$,,AUTO
         2 000301   000000 220100                    LDX0    0,,PR0
         2 000302   000777 360003                    ANX0    511,DU
         2 000303   000000 471400 xsym               LDP1    XSS_CCB$$
         2 000304   100000 236110                    LDQ     0,X0,PR1
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:174  
         2 000305   200040 756100                    STQ     TCCB$,,AUTO

      891     8352    3               DO I = 0 TO 2;

   8352  2 000306   200034 450100                    STZ     I,,AUTO

      892     8353    3                   SASE$ = TCCB.SASE$( I);

   8353  2 000307   200040 470500                    LDP0    TCCB$,,AUTO
         2 000310   200034 720100                    LXL0    I,,AUTO
         2 000311   000013 236110                    LDQ     11,X0,PR0
         2 000312   200036 756100                    STQ     SASE$,,AUTO

      893     8354    3                   IF SASE$ ~= ENTADDR( NIL) THEN

   8354  2 000313   000004 116000 3                  CMPQ    4
         2 000314   000323 600000 2                  TZE     s:8359

      894     8355    3                       CALL SASE$( XSP$GENERIC)

   8355  2 000315   200035 630500                    EPPR0   PFPT$,,AUTO
         2 000316   200036 221100                    LDX1    SASE$,,AUTO
         2 000317   000001 631400 3                  EPPR1   1
         2 000320   000000 701011                    TSX1    0,X1
         2 000321   000323 702000 2                  TSX2    s:8359
         2 000322   000323 710000 2                  TRA     s:8359

      895     8356    4                       WHENALTRETURN DO;

      896     8357                                /* ignore ALTRETURN from SASE routine */
      897     8358    4                           END;

      898     8359    3                   END;

   8359  2 000323   200034 054100                    AOS     I,,AUTO
         2 000324   200034 235100                    LDA     I,,AUTO
         2 000325   000002 115007                    CMPA    2,DL
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:175  
         2 000326   000307 604400 2                  TMOZ    s:8353

      899     8360    2               IF SASEONLY THEN

   8360  2 000327   200037 234100                    SZN     SASEONLY,,AUTO
         2 000330   000332 605000 2                  TPL     s:8364

      900     8361                        /* this message supposedly transparent to ACSE... */
      901     8362    2                   RETURN;

   8362  2 000331   000000 702200 xent               TSX2  ! X66_ARET

      902     8363    2           END;

      903     8364    1       XSC$GENERIC.CCID = XSP$GENERIC.PCID;

   8364  2 000332   200035 470500                    LDP0    PFPT$,,AUTO
         2 000333   200023 471500                    LDP1    VBLK+1,,AUTO
         2 000334   000000 236100                    LDQ     0,,PR0
         2 000335   100000 552120                    STBQ    0,'20'O,PR1

      904     8365            /* VBLK.EVENT was filled in by XSC$DECODE above */
      905     8366    1       CALL XSC$AMACHINE( VBLK)

   8366  2 000336   200022 630500                    EPPR0   VBLK,,AUTO
         2 000337   200042 450500                    STP0    TCCB$+2,,AUTO
         2 000340   200042 630500                    EPPR0   TCCB$+2,,AUTO
         2 000341   000001 631400 3                  EPPR1   1
         2 000342   000000 701000 xent               TSX1    XSC$AMACHINE
         2 000343   000345 702000 2                  TSX2    s:8368
         2 000344   000346 710000 2                  TRA     s:8370

      906     8367    2       WHENALTRETURN DO;

      907     8368    2           ALTRETURN;  /* connection died or protocol error */

   8368  2 000345   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:176  

      908     8369    2           END;
      909     8370    1       RETURN;

   8370  2 000346   000000 702200 xent               TSX2  ! X66_ARET

XSC_VBLK
 Sect OctLoc
   0     000   000000 006014   000000 006014   000000 006014   000000 000000    ................
   0     004   000000 006014   000000 000000   000000 000000                    ............

XSC_F$NOPCID
 Sect OctLoc
   1     000   302303 001407                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000002 000000   000001 000000   000000 006000   000000 006014    ................
   3     004   000000 000000                                                    ....
      910     8371
      911     8372    1       END XSC$PRECV;
      912     8373        %EOD;

PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:177  
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSC$PRECV.
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:178  

 **** Variables and constants ****

  ****  Section 000  Data  XSC$PRECV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(252)   r     1 XSC_VBLK

  ****  Section 001 RoData XSC$PRECV

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 XSC_F$NOPCID

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PFPT                     31-0-0/w PTR         r     1 AFPT$
    32-0-0/w SBIN        r     1 CCID                       4-0-0/w STRC(504)   r     1 CFPT
    33-0-0/w PTR         r     1 CTX$                      34-0-0/w SBIN        r     1 I
    *0-0-0/w STRC(504)   r     1 PFPT                      35-0-0/w PTR         r     1 PFPT$
    36-0-0/w EPTR        r     1 SASE$                     37-0-0/b BIT         r     1 SASEONLY
    40-0-0/w PTR         r     1 TCCB$                     22-0-0/w STRC(252)   r     1 VBLK

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 XSS_CCB$$

  ****  BASED and DCB variables  ****

PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:179  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(504)   r     1 AFPT                       0-0-0/w PTR         r     1 CCB$(0:0)
     0-0-0/w STRC(216)   r     1 CCTX                       0-0-0/w STRC(504)   r     1 TCCB
     0-0-0/w STRC(504)   r     1 XSC$CCB                    0-0-0/w STRC(504)   r     1 XSC$GENERIC
     0-0-0/w STRC(504)   r     1 XSP$GENERIC


   Procedure XSC$PRECV requires 231 words for executable code.
   Procedure XSC$PRECV requires 36 words of local(AUTO) storage.
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:180  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:181  
          MINI XREF LISTING

AFPT.BUF$
      7266**DCL      8322>>ASSIGN
AFPT.C0
      7268**DCL      7268--REDEF
AFPT.DAT$
      7270**DCL      7270--REDEF
AFPT.N0
      7269**DCL      7269--REDEF
AFPT.NXTX
      7269**DCL      8323>>ASSIGN
AFPT.R0
      7267**DCL      7268--REDEF
AFPT$
      8266**DCL      7262--IMP-PTR  8321<<ASSIGN   8322>>ASSIGN   8323>>ASSIGN
CCB$
      8267**DCL      8286>>ASSIGN   8351>>ASSIGN
CCID
      8268**DCL      8278<<ASSIGN   8279<>CALL     8282<>CALL     8286>>ASSIGN
CCTX.ENTRY$
       993**DCL      8286<<ASSIGN
CCTX.HISTZ
       994**DCL       995--REDEF
CFPT
       419**DCL      8294--ASSIGN
CFPT.ERRDEF
       428**DCL       448--REDEF
CTX$
      8269**DCL       970--IMP-PTR  8279<>CALL     8282<>CALL     8286>>ASSIGN   8293>>ASSIGN
I
      8270**DCL      8352<<DOINDEX  8353>>ASSIGN
PFPT
      5077**DCL        14--PROC     8276--ASSIGN
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:182  
PFPT.ERRDEF
      5123**DCL      5143--REDEF
PFPT$
      8271**DCL      3379--IMP-PTR  3475--IMP-PTR  3533--IMP-PTR  3598--IMP-PTR  3656--IMP-PTR  3747--IMP-PTR
      3822--IMP-PTR  3883--IMP-PTR  3941--IMP-PTR  4086--IMP-PTR  4180--IMP-PTR  4238--IMP-PTR  4296--IMP-PTR
      4354--IMP-PTR  4412--IMP-PTR  4471--IMP-PTR  4576--IMP-PTR  4642--IMP-PTR  4708--IMP-PTR  4804--IMP-PTR
      4901--IMP-PTR  4959--IMP-PTR  5017--IMP-PTR  8276<<ASSIGN   8277>>IF       8278>>ASSIGN   8295>>DOCASE
      8320>>IF       8321>>ASSIGN   8329>>DOCASE   8333<>CALL     8342<>CALL     8351>>ASSIGN   8355>>CALL
      8364>>ASSIGN
SASE$
      8272**DCL      8353<<ASSIGN   8354>>IF       8355>>CALL
SASEONLY
      8273**DCL      8328<<ASSIGN   8349<<ASSIGN   8360>>IF
SASETOO
      8351**LABEL    8346--GOTO
TCCB.ERRDEF
      6733**DCL      6753--REDEF
TCCB.SASE$
      6903**DCL      8353>>ASSIGN
TCCB$
      8274**DCL      6626--IMP-PTR  8351<<ASSIGN   8353>>ASSIGN
VBLK
      1016**DCL      8292<<ASSIGN   8333<>CALL     8342<>CALL     8366<>CALL
VBLK.APDUERR
      1102**DCL      8335<<ASSIGN   8344<<ASSIGN
VBLK.CTX$
      1030**DCL      8293<<ASSIGN
VBLK.DATA.PTR$
      1097**DCL      8322<<ASSIGN
VBLK.DATA.SIZE
      1098**DCL      8323<<ASSIGN
VBLK.FPT$
      1031**DCL       478--IMP-PTR  8294<<ASSIGN   8364>>ASSIGN
XSC$AMACHINE
      8258**DCL-ENT  8366--CALL
XSC$CCB.ACSE$
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:183  
      6591**DCL      8286>>ASSIGN
XSC$CCB.ERRDEF
      6436**DCL      6456--REDEF
XSC$CTXPTR
      8259**DCL-ENT  8279--CALL
XSC$DECODE
      8260**DCL-ENT  8333--CALL     8342--CALL
XSC$GENERIC.CCID
       485**DCL      8364<<ASSIGN
XSC$GENERIC.ERRDEF
       487**DCL       507--REDEF
XSC$GETCTX
      8261**DCL-ENT  8282--CALL
XSC_F$NOPCID
      8220**DCL      8291<>CALL
XSC_VBLK
      1122**DCL      8292>>ASSIGN
XSP$ACTIVITY_DISCARD.ERRDEF
      3485**DCL      3505--REDEF
XSP$ACTIVITY_END.ERRDEF
      3547**DCL      3567--REDEF
XSP$ACTIVITY_INTERRUPT.ERRDEF
      3608**DCL      3628--REDEF
XSP$ACTIVITY_RESUME.ERRDEF
      3672**DCL      3692--REDEF
XSP$ACTIVITY_START.ERRDEF
      3762**DCL      3782--REDEF
XSP$ALTER_CONTEXT.ERRDEF
      3831**DCL      3851--REDEF
XSP$CAPABILITY_DATA.ERRDEF
      3892**DCL      3912--REDEF
XSP$CONNECT.CALLED$
      4036**DCL      4037--REDEF
XSP$CONNECT.DFLT$
      4026**DCL      4027--REDEF
XSP$CONNECT.ERRDEF
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:184  
      3995**DCL      4015--REDEF
XSP$CONTROL_GIVE.ERRDEF
      4132**DCL      4152--REDEF
XSP$DATA.ERRDEF
      4189**DCL      4209--REDEF
XSP$EXPEDITED_DATA.ERRDEF
      4247**DCL      4267--REDEF
XSP$GENERIC
      3379**DCL      8355<>CALL
XSP$GENERIC.DATA$
      3455**DCL      8320>>IF       8321>>ASSIGN
XSP$GENERIC.ERRDEF
      3425**DCL      3445--REDEF
XSP$GENERIC.FNC
      3385**DCL      8295>>DOCASE   8329>>DOCASE
XSP$GENERIC.PCID
      3386**DCL      8277>>IF       8278>>ASSIGN   8351>>ASSIGN   8364>>ASSIGN
XSP$P_ABORT.ERRDEF
      4306**DCL      4326--REDEF
XSP$P_EXCEPTION_REPORT.ERRDEF
      4364**DCL      4384--REDEF
XSP$RELEASE.ERRDEF
      4422**DCL      4442--REDEF
XSP$RESYNCHRONIZE.ERRDEF
      4524**DCL      4544--REDEF
XSP$SYNC_MAJOR.ERRDEF
      4591**DCL      4611--REDEF
XSP$SYNC_MINOR.ERRDEF
      4657**DCL      4677--REDEF
XSP$TOKEN_GIVE.ERRDEF
      4756**DCL      4776--REDEF
XSP$TOKEN_PLEASE.ERRDEF
      4852**DCL      4872--REDEF
XSP$TYPED_DATA.ERRDEF
      4910**DCL      4930--REDEF
XSP$U_ABORT.ERRDEF
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:185  
      4968**DCL      4988--REDEF
XSP$U_EXCEPTION_REPORT.ERRDEF
      5027**DCL      5047--REDEF
XSS$SCREECH
      8262**DCL-ENT  8291--CALL
XSS_CCB$$
      8264**DCL      8267--IMP-PTR  8286>>ASSIGN   8351>>ASSIGN
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:186  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #006=XSC$PRECV File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:52 Page:187  
              MINI UREF LISTING

XSC$PRECV      14**PROC

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:188  
      913        1        /*T***********************************************************/
      914        2        /*T*                                                         */
      915        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      916        4        /*T*                                                         */
      917        5        /*T***********************************************************/
      918        6        /*F*    NAME:   XSC$DECODE
      919        7
      920        8                XSC$DECODE is called from the ACSE message handler when an incoming
      921        9                message needs to be decoded as an ACSE PDU.  As decoding takes place
      922       10                an ACSE parameter block is filled in.  The calling routine takes
      923       11                further action with the FPT built.  ALTRETURNs if APDU is malformed.
      924       12        */
      925       13        XSC$DECODE: PROC( VBLK, PFPT$) ALTRET;
      926       14        %INCLUDE XSS_SESSION_E;
      927      579        %INCLUDE XSP_PRESENTATION_E;
      928      678        %INCLUDE XSP_PRESENTATION_M;
      929     2164            %XSP$PRIMITIVES( STCLASS="BASED( PFPT$)");
      930     3863            %XSP$CTXTNAME( NAME=CTXT, STCLASS=BASED);
      931     3905            %XSP$CTXTNAME( NAME=ACN, STCLASS=STATIC, CTXT='....................');
      932     3947        %INCLUDE XSC_ACSE_E;
      933     4025        %INCLUDE XSC_ACSE_M;
      934     4334            %XSC$PRIMITIVES( STCLASS="BASED( VBLK.FPT$)");
      935     4647            %XSC_PRIMITIVES( STCLASS=SYMREF);
      936     4960        %INCLUDE XSC_INTERNAL_E;
      937     5048        %INCLUDE XSC_INTERNAL_M;
      938     5393            %XSC$VBLK( NAME=VBLK, STCLASS="");
      939     5499            %ENCDECMACS;
      940     5679        %EQU ITEMMAX = 20;
      941     5680        %EQU MAXDEPTH = 3;
      942     5681        /* in the following TAGxx equates, 32 is added if constructed */
      943     5682        %EQU TAGC1 = (129+32);
      944     5683        %EQU TAGC2 = (130+32);
      945     5684
      946     5685    1       DCL XSC_ITEMCNT SBIN SYMREF;
      947     5686
      948     5687            %ITEM( NAME=SCANITEM, STCLASS=AUTO);              /* THESE TWO LINES..  */
      949     5712            %ITEM( NAME="ITEMLIST(0:%ITEMMAX)", STCLASS=AUTO);/* MUST BE CONTIGUOUS */
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:189  
      950     5737    1       DCL ACN$ PTR;
      951     5738    1       DCL BSRC$ PTR UNAL;
      952     5739    1       DCL BDST$ PTR UNAL;
      953     5740    1       DCL BIT1 BIT(1) BASED UNAL;
      954     5741    1       DCL BIT8 BIT(8) BASED UNAL;
      955     5742    1       DCL BTMP BIT(36);
      956     5743    1       DCL DEPTH SBIN;
      957     5744    1       DCL DSTBYTES CHAR( DSTLEN) BASED CALIGNED;
      958     5745    1       DCL DSTLEN SBIN;
      959     5746    1       DCL I SBIN;
      960     5747    1       DCL INFOLVL SBIN;
      961     5748    1       DCL ITEMCUR SBIN;
      962     5749    1       DCL ITEMNUM SBIN;
      963     5750    1       DCL PDU$ PTR CALIGNED;
      964     5751    1       DCL PDU CHAR(16384) BASED( PDU$) CALIGNED;
      965     5752    1       DCL PDUIDX SBIN;
      966     5753    1       DCL PFPT$ PTR;
      967     5754    1       DCL SRC$ PTR CALIGNED;
      968     5755    1       DCL SRCBYTES CHAR( SRCLEN) BASED CALIGNED;
      969     5756    1       DCL SRCLEN SBIN;
      970     5757    1       DCL TAG SBIN;
      971     5758    1       DCL 1 TAGX REDEF TAG,
      972     5759    1            2 * BIT(28) UNAL,
      973     5760    1            2 CLASS UBIN(2) UNAL,
      974     5761    1            2 CONSTRUCTED BIT(1) UNAL,
      975     5762    1            2 VALUE UBIN(5) UNAL;
      976     5763    1       DCL TEMP SBIN;
      977     5764    1       DCL 1 TWOZEROES CONSTANT,
      978     5765    1            2 X(0:1) UBIN(9) INIT( 0, 0) CALIGNED,
      979     5766    1            2 C REDEF X CHAR(2) CALIGNED;
      980     5767    1       DCL CURRLEN(0:%MAXDEPTH) SBIN;
      981     5768    1       DCL INITLEN(0:%MAXDEPTH) SBIN;
      982     5769
      983     5770    1       ITEMLIST = '0'B;
      984     5771    1       TEMP = VBLK.DATA.SIZE;
      985     5772    1       INITLEN = '0'B;
      986     5773    1       INITLEN(0) = TEMP;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:190  
      987     5774    1       INITLEN(1) = TEMP;
      988     5775    1       CURRLEN = '0'B;
      989     5776    1       CURRLEN(0) = TEMP;
      990     5777    1       CURRLEN(1) = TEMP;
      991     5778    1       PDU$ = VBLK.DATA.PTR$;
      992     5779    1       PDUIDX = 0;
      993     5780    1       ITEMLIST.Z(0) = 32*512 + TEMP*262144;  /* set up CON and LEN */
      994     5781    1       ITEMLIST.P(0) = PDU$;
      995     5782    1       ITEMNUM = 1;
      996     5783    1       DEPTH = 1;
      997     5784    1       GOTO NEXTBYTE;
      998     5785    1   NEXTLEVEL:
      999     5786    1       DEPTH = DEPTH + 1;
     1000     5787    1       IF DEPTH > %MAXDEPTH THEN
     1001     5788    1           GOTO SCANERR;
     1002     5789    1       CURRLEN( DEPTH) = TEMP;
     1003     5790    1       IF TEMP >= 0 THEN
     1004     5791    1           INITLEN( DEPTH) = TEMP;
     1005     5792    1       ELSE
     1006     5793    1           INITLEN( DEPTH) = -( ITEMNUM - 1);  /* LEN will be fixed at ENDITEM */
     1007     5794    1   NEXTBYTE:
     1008     5795    2       IF CURRLEN( DEPTH) > 0 THEN DO;
     1009     5796    2           IF SUBSTR( PDU, PDUIDX, 2) = TWOZEROES.C THEN
     1010     5797    2               GOTO ENDITEM;
     1011     5798    2           TAG = ASCBIN( SUBSTR( PDU, PDUIDX, 1));
     1012     5799    2           PDUIDX = PDUIDX + 1;
     1013     5800    2           CURRLEN( DEPTH) = CURRLEN( DEPTH) - 1;
     1014     5801    2           CALL GETLEN;  /* parse length of item into TEMP */
     1015     5802    2           IF TEMP >= 0 THEN
     1016     5803    2               ITEMLIST.Z( ITEMNUM) = DEPTH + TAG*512 + TEMP*262144;
     1017     5804    2           ELSE
     1018     5805    2               ITEMLIST.Z( ITEMNUM) = DEPTH + TAG*512;  /* LEN fixed later */
     1019     5806    2           ITEMLIST.P( ITEMNUM) = PINCRC( PDU$, PDUIDX);
     1020     5807    2           ITEMNUM = ITEMNUM + 1;
     1021     5808    2           IF TAGX.CONSTRUCTED THEN
     1022     5809    2               GOTO NEXTLEVEL;
     1023     5810    2           IF TEMP < 0 THEN
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:191  
     1024     5811    2               GOTO SCANERR;  /* indefinite form illegal for primitive */
     1025     5812    2           PDUIDX = PDUIDX + TEMP;
     1026     5813    2           CURRLEN( DEPTH) = CURRLEN( DEPTH) - TEMP;
     1027     5814    2           IF VBLK.DATA.SIZE > PDUIDX THEN
     1028     5815    2               GOTO NEXTBYTE;
     1029     5816    2           END;
     1030     5817    1   ENDITEM:
     1031     5818    2       IF INITLEN( DEPTH) < 0 THEN DO;
     1032     5819                /* have to fix up length of an indefinite-length item */
     1033     5820    2           TEMP = -INITLEN( DEPTH);
     1034     5821    2           ITEMLIST.X.LEN( TEMP) = PDUIDX - POFFC( ITEMLIST.P( TEMP), PDU$);
     1035     5822    2           PDUIDX = PDUIDX + 2;
     1036     5823    2           CURRLEN( DEPTH) = CURRLEN( DEPTH) - 2;
     1037     5824    2           INITLEN( DEPTH) = - ( CURRLEN( DEPTH) + 1);
     1038     5825    2           END;
     1039     5826    1       TEMP = DEPTH;
     1040     5827    1       DEPTH = DEPTH - 1;
     1041     5828    2       IF DEPTH >= 0 THEN DO;
     1042     5829    2           CURRLEN( DEPTH) = CURRLEN( DEPTH) - INITLEN( TEMP);
     1043     5830    2           INITLEN( TEMP) = 0;
     1044     5831    2           GOTO NEXTBYTE;
     1045     5832    2           END;
     1046     5833            /* done scanning the APDU.. now try to decode it item by item */
     1047     5834    1       ACN$ = ADDR( ACN);
     1048     5835    1       XSC_ITEMCNT = -1;  /* make SCAN/LOAD load into SCANITEM, not ITEMLIST */
     1049     5836    1       ITEMCUR = 0;
     1050     5837    1       INFOLVL = 0;
     1051     5838            %SCAN( LVL=0, TYP=NONE, CON=Y, LEN="VBLK.DATA.SIZE");
     1052     5934    1   PFNCCASE:
     1053     5935    2       DO CASE( XSP$GENERIC.FNC);
     1054     5936        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:192  
     1055     5937        /*****************************************************************************
     1056     5938        *
     1057     5939        *       PCONIND
     1058     5940        *
     1059     5941        *****************************************************************************/
     1060     5942    2           CASE( %XSP_FNC_PCONIND#);  /* should be an AARQ APDU */
     1061     5943                    %SCAN( LVL=1, TAG=A0, IMP=Y, TYP=SEQ);  /* AARQApdu */
     1062     6039    2               VBLK.EVENT = %XSC_CEV_AARQ;
     1063     6040    2               XSC$ASSOCIATE = XSC_ASSOCIATE;
     1064     6041    2               XSC$ASSOCIATE.FNC = %XSC_FNC_AASCIND#;
     1065     6042                    %SCAN( LVL=2, TAG=C0, IMP=Y, TYP=BITSTR, OPT=Y,
     1066     6043                            LEN=1, VAL=BTMP);  /* ProtocolVersion */
     1067     6139    2               IF BTMP ~= '1'B THEN
     1068     6140    2                   GOTO SCANERR;
     1069     6141                    %SCAN( LVL=2, TAG=C1, TYP=OBJID,
     1070     6142                            LEN=20, VAL=ACN$);  /* ApplicationContextName */
     1071     6238                    %SCAN( LVL=2, TAG=C2, TYP=ANY, OPT=Y,
     1072     6239                            LEN=64, VAL=NIL);  /* CalledAPTitle */
     1073     6335                    %SCAN( LVL=2, TAG=C3, TYP=ANY, OPT=Y,
     1074     6336                            LEN=64, VAL=NIL);  /* CalledAEQualifier */
     1075     6432                    %SCAN( LVL=2, TAG=C4, TYP=INTG, OPT=Y,
     1076     6433                            LEN=4, VAL=TEMP); /* CalledAPInvocationId */
     1077     6529    2               XSC$ASSOCIATE.RAPID = TEMP;
     1078     6530                    %SCAN( LVL=2, TAG=C5, TYP=INTG, OPT=Y,
     1079     6531                            LEN=4, VAL=TEMP); /* CalledAEInvocationId */
     1080     6627    2               XSC$ASSOCIATE.RAEID = TEMP;
     1081     6628                    %SCAN( LVL=2, TAG=C6, TYP=ANY, OPT=Y,
     1082     6629                            LEN=64, VAL=NIL);  /* CallingAPTitle */
     1083     6725                    %SCAN( LVL=2, TAG=C7, TYP=ANY, OPT=Y,
     1084     6726                            LEN=64, VAL=NIL);  /* CallingAEQualifier */
     1085     6822                    %SCAN( LVL=2, TAG=C8, TYP=INTG, OPT=Y,
     1086     6823                            LEN=4, VAL=TEMP);/* CallingAPInvocationId */
     1087     6919    2               XSC$ASSOCIATE.IAPID = TEMP;
     1088     6920                    %SCAN( LVL=2, TAG=C9, TYP=INTG, OPT=Y,
     1089     6921                            LEN=4, VAL=TEMP);/* CallingAEInvocationId */
     1090     7017    2               XSC$ASSOCIATE.IAEID = TEMP;
     1091     7018                    %SCAN( LVL=2, TAG=C29, IMP=Y, TYP=GRFSTR, OPT=Y,
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:193  
     1092     7019                            LEN=64, VAL=NIL);  /* ImplementationData */
     1093     7115    2               XSC$ASSOCIATE.CTXT$ = XSP$CONNECT.CTXT$;
     1094     7116    2               INFOLVL = 2;
     1095     7117        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:194  
     1096     7118        /*****************************************************************************
     1097     7119        *
     1098     7120        *       PCONCNF
     1099     7121        *
     1100     7122        *****************************************************************************/
     1101     7123    2           CASE( %XSP_FNC_PCONCNF#);  /* should be an AARE APDU */
     1102     7124                    %SCAN( LVL=1, TAG=A1, IMP=Y, TYP=SEQ);  /* AAREApdu */
     1103     7220    2               XSC$ASSOCIATE = XSC_ASSOCIATE;
     1104     7221    2               XSC$ASSOCIATE.FNC = %XSC_FNC_AASCCNF#;
     1105     7222                    %SCAN( LVL=2, TAG=C0, IMP=Y, TYP=BITSTR, OPT=Y,
     1106     7223                            LEN=1, VAL=BTMP);  /* ProtocolVersion */
     1107     7319    2               IF BTMP ~= '1'B THEN
     1108     7320    2                   GOTO SCANERR;
     1109     7321                    %SCAN( LVL=2, TAG=C1, TYP=OBJID,
     1110     7322                            LEN=20, VAL=ACN$);  /* ApplicationContextName */
     1111     7418                    %SCAN( LVL=2, TAG=C2, TYP=INTG,
     1112     7419                            LEN=4, VAL=TEMP);  /* Result */
     1113     7515    2               IF TEMP = %XSC_RSLT_ACCEPTED# THEN
     1114     7516    2                   VBLK.EVENT = %XSC_CEV_AAREP;
     1115     7517    2               ELSE
     1116     7518    2                   VBLK.EVENT = %XSC_CEV_AAREN;
     1117     7519    2               XSC$ASSOCIATE.RESULT = TEMP;
     1118     7520                    %SCAN( LVL=2, TAG=C3, TYP=CHOICE);  /* ResultSourceDiagnostic */
     1119     7616    3               IF ITEMLIST.X.TAG( ITEMCUR) = %TAGC1 THEN DO;
     1120     7617                        %SCAN( LVL=3, TAG=C1, TYP=INTG,
     1121     7618                                LEN=4, VAL=TEMP);  /* ACSEServiceUser */
     1122     7714    3                   END;
     1123     7715    2               ELSE
     1124     7716    3                   IF ITEMLIST.X.TAG( ITEMCUR) = %TAGC2 THEN DO;
     1125     7717                            %SCAN( LVL=3, TAG=C2, TYP=INTG,
     1126     7718                                    LEN=4, VAL=TEMP);  /* ACSEServiceProvider */
     1127     7814    3                       END;
     1128     7815    2                   ELSE
     1129     7816    2                       GOTO SCANERR;
     1130     7817    2               XSC$ASSOCIATE.RSDIAG = TEMP;
     1131     7818                    %SCAN( LVL=2, TAG=C4, TYP=ANY, OPT=Y,
     1132     7819                            LEN=64, VAL=NIL);  /* RespondingAPTitle */
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:195  
     1133     7915                    %SCAN( LVL=2, TAG=C5, TYP=ANY, OPT=Y,
     1134     7916                            LEN=64, VAL=NIL); /* RespondingAEQualifier */
     1135     8012                    %SCAN( LVL=2, TAG=C6, TYP=INTG, OPT=Y,
     1136     8013                            LEN=4, VAL=TEMP);/*RespondingAPInvocationId*/
     1137     8109    2               XSC$ASSOCIATE.RAPID = TEMP;
     1138     8110                    %SCAN( LVL=2, TAG=C7, TYP=INTG, OPT=Y,
     1139     8111                            LEN=4, VAL=TEMP);/*RespondingAEInvocationId*/
     1140     8207    2               XSC$ASSOCIATE.RAEID = TEMP;
     1141     8208                    %SCAN( LVL=2, TAG=C29, IMP=Y, TYP=GRFSTR, OPT=Y,
     1142     8209                            LEN=64, VAL=NIL);  /* ImplementationData */
     1143     8305    2               XSC$ASSOCIATE.CTXT$ = XSP$CONNECT.CTXT$;
     1144     8306    2               INFOLVL = 2;
     1145     8307        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:196  
     1146     8308        /*****************************************************************************
     1147     8309        *
     1148     8310        *       PRELIND
     1149     8311        *
     1150     8312        *****************************************************************************/
     1151     8313    2           CASE( %XSP_FNC_PRELIND#);  /* should be an RLRQ APDU */
     1152     8314                    %SCAN( LVL=1, TAG=A2, IMP=Y, TYP=SEQ);  /* RLRQApdu */
     1153     8410    2               VBLK.EVENT = %XSC_CEV_RLRQ;
     1154     8411    2               XSC$RELEASE = XSC_RELEASE;
     1155     8412    2               XSC$RELEASE.FNC = %XSC_FNC_ARELIND#;
     1156     8413                    %SCAN( LVL=2, TAG=C0, IMP=Y, TYP=INTG, OPT=Y,
     1157     8414                            LEN=4, VAL=TEMP);  /* Reason */
     1158     8510    2               XSC$RELEASE.REASON = TEMP;
     1159     8511    2               INFOLVL = 2;
     1160     8512        /*****************************************************************************
     1161     8513        *
     1162     8514        *       PRELCNF
     1163     8515        *
     1164     8516        *****************************************************************************/
     1165     8517    2           CASE( %XSP_FNC_PRELCNF#);  /* should be an RLRE APDU */
     1166     8518                    %SCAN( LVL=1, TAG=A3, IMP=Y, TYP=SEQ);  /* RLREApdu */
     1167     8614    2               XSC$RELEASE = XSC_RELEASE;
     1168     8615    2               XSC$RELEASE.FNC = %XSC_FNC_ARELCNF#;
     1169     8616                    %SCAN( LVL=2, TAG=C0, IMP=Y, TYP=INTG, OPT=Y,
     1170     8617                            LEN=4, VAL=TEMP);  /* Reason */
     1171     8713    2               IF TEMP = %XSC_RELRSP_NORMAL# THEN
     1172     8714    2                   VBLK.EVENT = %XSC_CEV_RLREP;
     1173     8715    2               ELSE
     1174     8716    2                   VBLK.EVENT = %XSC_CEV_RLREN;
     1175     8717    2               XSC$RELEASE.REASON = TEMP;
     1176     8718    2               INFOLVL = 2;
     1177     8719        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:197  
     1178     8720        /*****************************************************************************
     1179     8721        *
     1180     8722        *       PUABIND
     1181     8723        *
     1182     8724        *****************************************************************************/
     1183     8725    2           CASE( %XSP_FNC_PUABIND#);  /* should be an ABRT APDU */
     1184     8726                    %SCAN( LVL=1, TAG=A4, IMP=Y, TYP=SEQ);  /* ABRTApdu */
     1185     8822    2               VBLK.EVENT = %XSC_CEV_ABRT;
     1186     8823    2               XSC$U_ABORT = XSC_U_ABORT;
     1187     8824    2               XSC$U_ABORT.FNC = %XSC_FNC_AUABIND#;
     1188     8825                    %SCAN( LVL=2, TAG=C0, IMP=Y, TYP=INTG,
     1189     8826                            LEN=4, VAL=TEMP);  /* AbortSource */
     1190     8922    2               XSC$U_ABORT.ABRTSRC = TEMP;
     1191     8923    2               INFOLVL = 2;
     1192     8924        /*****************************************************************************
     1193     8925        *
     1194     8926        *       PPABIND
     1195     8927        *
     1196     8928        *****************************************************************************/
     1197     8929    2           CASE( %XSP_FNC_PPABIND#);  /* no APDU for this event */
     1198     8930    2               VBLK.EVENT = %XSC_CEV_PPABIND;
     1199     8931    2               XSC$P_ABORT = XSC_P_ABORT;
     1200     8932    2               XSC$P_ABORT.FNC = %XSC_FNC_APABIND#;
     1201     8933        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:198  
     1202     8934        /*****************************************************************************
     1203     8935        *
     1204     8936        *       Illegal Presentation function -> error
     1205     8937        *
     1206     8938        *****************************************************************************/
     1207     8939    2           CASE( ELSE);
     1208     8940    2               GOTO SCANERR;
     1209     8941    2           END;
     1210     8942    2       IF INFOLVL > 0 AND ITEMCUR < ITEMNUM THEN DO;
     1211     8943                %SCAN( LVL=INFOLVL, TAG=C30, IMP=Y, TYP=SEQOF, OPT=Y); /* UserInformation */
     1212     9039    3           DO WHILE( ITEMLIST.X.LVL( ITEMCUR) > INFOLVL);
     1213     9040                    /*N* this code assumes SEQOF one EXTRN item */
     1214     9041    3               INFOLVL = INFOLVL + 1;
     1215     9042                    %SCAN( LVL=INFOLVL, TYP=EXTRN,
     1216     9043                            LEN=262143, VAL=NIL);
     1217     9139    3               INFOLVL = INFOLVL - 1;
     1218     9140    3               END;
     1219     9141    2           END;
     1220     9142    1       RETURN;
     1221     9143    1   SCANERR:
     1222     9144            /* An error occurred while decoding the APDU */
     1223     9145    1       ALTRETURN;
     1224     9146        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:199  
     1225     9147        /*I*    NAME:   SCAN
     1226     9148
     1227     9149                SCAN is called for each item of the APDU expected to be seen.  The
     1228     9150                contents of SCANITEM are compared with the current item.  If they
     1229     9151                match, the associated value is moved from the current item to the
     1230     9152                VAL field indicated in SCANITEM.  Otherwise, heuristics are used to
     1231     9153                figure out if the APDU is in error or we need to skip over optional
     1232     9154                items not supplied in the APDU.
     1233     9155        */
     1234     9156    1   SCAN: PROC ALTRET;
     1235     9157
     1236     9158    2       IF ITEMCUR > ITEMNUM THEN
     1237     9159                /* fell off the end of the APDU */
     1238     9160    2           ALTRETURN;
     1239     9161    2       TEMP = 0;
     1240     9162    2       BTMP = '000000000000'O;
     1241     9163            /* compare LVLs */
     1242     9164    2       IF ITEMLIST.X.LVL( ITEMCUR) < SCANITEM.X.LVL THEN
     1243     9165    2           RETURN;  /* skip ahead in order to resynchronize levels */
     1244     9166    3       IF ITEMLIST.X.LVL( ITEMCUR) = SCANITEM.X.LVL THEN DO;
     1245     9167                /* compare TAGs */
     1246     9168    4           IF ITEMLIST.X.TAG( ITEMCUR) = SCANITEM.X.TAG THEN DO;
     1247     9169                    /* O.K. We have a match!  Now we move the value part of the
     1248     9170                       matched tag-length-value item to the given buffer. */
     1249     9171    5               DO CASE( SCANITEM.X.TYP);
     1250     9172    5                   CASE( %XSC_TYP_NONE,
     1251     9173    5                         %XSC_TYP_NULL,
     1252     9174    5                         %XSC_TYP_EXTRN,
     1253     9175    5                         %XSC_TYP_SEQ,
     1254     9176    5                         %XSC_TYP_SET,
     1255     9177    5                         %XSC_TYP_SEQOF,
     1256     9178    5                         %XSC_TYP_SETOF,
     1257     9179    5                         %XSC_TYP_CHOICE);
     1258     9180    5                       ;  /* no need to do anything for these types */
     1259     9181    5                   CASE( %XSC_TYP_BOOL);
     1260     9182    5                       SRCLEN = ITEMLIST.X.LEN( ITEMCUR);
     1261     9183    5                       DSTLEN = SCANITEM.X.LEN;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:200  
     1262     9184    5                       IF SRCLEN > DSTLEN THEN
     1263     9185    5                           ALTRETURN;  /* source is too long for buffer */
     1264     9186    5                       SRC$ = ITEMLIST.P( ITEMCUR);
     1265     9187    5                       BDST$ = SCANITEM.P;
     1266     9188    5                       TEMP = ASCBIN( SUBSTR( SRC$->SRCBYTES, 0, 1));
     1267     9189    5                       IF TEMP = 0 THEN
     1268     9190    5                           BDST$->BIT1 = '0'B;
     1269     9191    5                       ELSE
     1270     9192    5                           BDST$->BIT1 = '1'B;
     1271     9193    5                   CASE( %XSC_TYP_INTG);
     1272     9194    5                       SRCLEN = ITEMLIST.X.LEN( ITEMCUR);
     1273     9195    5                       DSTLEN = SCANITEM.X.LEN;
     1274     9196    5                       IF SRCLEN > DSTLEN THEN
     1275     9197    5                           ALTRETURN;  /* source is too long for buffer */
     1276     9198    5                       BSRC$ = ITEMLIST.P( ITEMCUR);
     1277     9199    5                       BDST$ = PINCRB( SCANITEM.P, 4 + 8*(4-SRCLEN));
     1278     9200    6                       DO I = 1 TO SRCLEN;
     1279     9201    6                           BDST$->BIT8 = PINCRB( BSRC$, 1)->BIT8;
     1280     9202    6                           BDST$ = PINCRB( BDST$, 8);
     1281     9203    6                           BSRC$ = PINCRC( BSRC$, 1);
     1282     9204    6                           END;
     1283     9205    5                   CASE( %XSC_TYP_BITSTR);
     1284     9206    5                       SRC$ = ITEMLIST.P( ITEMCUR);
     1285     9207    5                       TEMP = ASCBIN( SUBSTR( SRC$->SRCBYTES, 0, 1)); /* slack */
     1286     9208    5                       SRCLEN = ITEMLIST.X.LEN( ITEMCUR);  /* byte-length */
     1287     9209    5                       SRCLEN = ( 8-TEMP) + ( SRCLEN-2)*8;  /* bit-length */
     1288     9210    5                       DSTLEN = SCANITEM.X.LEN;
     1289     9211                            /* NOTE: SRCLEN AND DSTLEN CONTAIN LENGTHS IN *BITS* */
     1290     9212    5                       IF SRCLEN > DSTLEN THEN
     1291     9213    5                           ALTRETURN;  /* source is too long for buffer */
     1292     9214                            /* move octets from source to destination */
     1293     9215    5                       BSRC$ = SRC$;
     1294     9216    5                       BDST$ = SCANITEM.P;
     1295     9217    5                       TEMP = ( DSTLEN + 8) / 9;
     1296     9218    6                       DO I = 1 TO TEMP;
     1297     9219    6                           BSRC$ = PINCRC( BSRC$, 1);
     1298     9220    6                           BDST$->BIT8 = PINCRB( BSRC$, 1)->BIT8;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:201  
     1299     9221    6                           BDST$ = PINCRB( BDST$, 8);
     1300     9222    6                           END;
     1301     9223    5                   CASE( %XSC_TYP_OCTETSTR,
     1302     9224    5                         %XSC_TYP_NUMSTR,
     1303     9225    5                         %XSC_TYP_PRNTSTR,
     1304     9226    5                         %XSC_TYP_TELSTR,
     1305     9227    5                         %XSC_TYP_VIDSTR,
     1306     9228    5                         %XSC_TYP_IA5STR,
     1307     9229    5                         %XSC_TYP_GRFSTR,
     1308     9230    5                         %XSC_TYP_VISSTR /* == %XSC_TYP_ISO646STR */,
     1309     9231    5                         %XSC_TYP_GENSTR,
     1310     9232    5                         %XSC_TYP_ANY);  /* treat ANY like a bytestring */
     1311     9233    5                       SRCLEN = ITEMLIST.X.LEN( ITEMCUR);
     1312     9234    5                       DSTLEN = SCANITEM.X.LEN;
     1313     9235    5                       IF SRCLEN > DSTLEN THEN
     1314     9236    5                           ALTRETURN;  /* source is too long for buffer */
     1315     9237    5                       DSTLEN = MINIMUM( DSTLEN, SRCLEN);
     1316     9238    6                       IF SCANITEM.P = ADDR( NIL) THEN DO;
     1317     9239                                /* don't copy data; just point at it in the APDU */
     1318     9240    6                           SCANITEM.P = ITEMLIST.P( ITEMCUR);
     1319     9241    6                           SCANITEM.X.LEN = DSTLEN;
     1320     9242    6                           END;
     1321     9243    5                       ELSE
     1322     9244    5                           SCANITEM.P->DSTBYTES = ITEMLIST.P( ITEMCUR)->SRCBYTES;
     1323     9245    5                   CASE( %XSC_TYP_OBJID,
     1324     9246    5                         %XSC_TYP_OBJDSCR);
     1325     9247                            /*N* convert encoding to num-num-num form */
     1326     9248    5                       SRCLEN = ITEMLIST.X.LEN( ITEMCUR);
     1327     9249    5                       SCANITEM.P = PINCRC( SCANITEM.P, -2);
     1328     9250    5                       SCANITEM.P->CTXT.LEN = SRCLEN;
     1329     9251    5                       SCANITEM.P->CTXT.TXT = ITEMLIST.P( ITEMCUR)->SRCBYTES;
     1330     9252    5                   CASE( %XSC_TYP_UTCTIM,
     1331     9253    5                         %XSC_TYP_GENTIM);
     1332     9254                            /*N* convert encoding to UTS value, someday */
     1333     9255    5                   CASE( ELSE);
     1334     9256                            /* bad SCANITEM.TYP */
     1335     9257    5                       ALTRETURN;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:202  
     1336     9258    5                   END;
     1337     9259    4               GOTO RET;
     1338     9260    4               END;
     1339     9261    3           IF SCANITEM.X.OPT = 1 THEN
     1340     9262                    /* looks like this optional item is not present */
     1341     9263    3               RETURN;
     1342     9264                /* this required item is not present */
     1343     9265    3           ALTRETURN;
     1344     9266    3           END;
     1345     9267            /* something's wrong with the heuristics */
     1346     9268    2       ALTRETURN;
     1347     9269    2   RET:
     1348     9270    2       ITEMCUR = ITEMCUR + 1;
     1349     9271    2       RETURN;
     1350     9272
     1351     9273    2       END SCAN;
     1352     9274        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:203  
     1353     9275        /*I*    NAME:   GETLEN
     1354     9276
     1355     9277                GETLEN is called to extract the length of the next item of the PDU.
     1356     9278                It handles both forms of definite length as well as indefinite length.
     1357     9279                The various PDU scan pointers are updated.  The length is stored in
     1358     9280                TEMP for use by the main code.
     1359     9281        */
     1360     9282    1   GETLEN: PROC;
     1361     9283
     1362     9284    2       TEMP = ASCBIN( SUBSTR( PDU, PDUIDX, 1));
     1363     9285    2       PDUIDX = PDUIDX + 1;
     1364     9286    2       CURRLEN( DEPTH) = CURRLEN( DEPTH) - 1;
     1365     9287    3       IF TEMP = 128 THEN DO;
     1366     9288                /* indefinite form */
     1367     9289    3           TEMP = -1;
     1368     9290    3           RETURN;
     1369     9291    3           END;
     1370     9292    3       IF TEMP > 128 THEN DO;
     1371     9293                /* long form */
     1372     9294    3           I = TEMP - 128;
     1373     9295    3           CURRLEN( DEPTH) = CURRLEN( DEPTH) - I;
     1374     9296    3           TEMP = 0;
     1375     9297    4           DO WHILE( I > 0);
     1376     9298    4               TEMP = TEMP*256 + ASCBIN( SUBSTR( PDU, PDUIDX, 1));
     1377     9299    4               PDUIDX = PDUIDX + 1;
     1378     9300    4               I = I - 1;
     1379     9301    4               END;
     1380     9302    3           END;
     1381     9303    2       RETURN;
     1382     9304
     1383     9305    2       END GETLEN;
     1384     9306
     1385     9307    1       END XSC$DECODE;
     1386     9308        %EOD;

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:204  
--  Include file information  --

   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSC$DECODE.

   Procedure XSC$DECODE requires 925 words for executable code.
   Procedure XSC$DECODE requires 78 words of local(AUTO) storage.

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:205  

 Object Unit name= XSC$DECODE                                 File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:52:33.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     6      6  XSC$DECODE
    1  RoData even  UTS      2      2  XSC$DECODE
    2   Proc  even  none   925   1635  XSC$DECODE
    3  RoData even  none    25     31  XSC$DECODE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  XSC$DECODE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSC_ASSOCIATE                         XSC_P_ABORT                           XSC_RELEASE
     XSC_U_ABORT                           XSC_ITEMCNT
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:206  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:207  


      913        1        /*T***********************************************************/
      914        2        /*T*                                                         */
      915        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      916        4        /*T*                                                         */
      917        5        /*T***********************************************************/
      918        6        /*F*    NAME:   XSC$DECODE
      919        7
      920        8                XSC$DECODE is called from the ACSE message handler when an incoming
      921        9                message needs to be decoded as an ACSE PDU.  As decoding takes place
      922       10                an ACSE parameter block is filled in.  The calling routine takes
      923       11                further action with the FPT built.  ALTRETURNs if APDU is malformed.
      924       12        */
      925       13        XSC$DECODE: PROC( VBLK, PFPT$) ALTRET;

     13  2 000000   000000 700200 xent  XSC$DECODE   TSX0  ! X66_AUTO_2
         2 000001   000116 000002                    ZERO    78,2

      926       14        %INCLUDE XSS_SESSION_E;
      927      579        %INCLUDE XSP_PRESENTATION_E;
      928      678        %INCLUDE XSP_PRESENTATION_M;
      929     2164            %XSP$PRIMITIVES( STCLASS="BASED( PFPT$)");
      930     3863            %XSP$CTXTNAME( NAME=CTXT, STCLASS=BASED);
      931     3905            %XSP$CTXTNAME( NAME=ACN, STCLASS=STATIC, CTXT='....................');
      932     3947        %INCLUDE XSC_ACSE_E;
      933     4025        %INCLUDE XSC_ACSE_M;
      934     4334            %XSC$PRIMITIVES( STCLASS="BASED( VBLK.FPT$)");
      935     4647            %XSC_PRIMITIVES( STCLASS=SYMREF);
      936     4960        %INCLUDE XSC_INTERNAL_E;
      937     5048        %INCLUDE XSC_INTERNAL_M;
      938     5393            %XSC$VBLK( NAME=VBLK, STCLASS="");
      939     5499            %ENCDECMACS;
      940     5679        %EQU ITEMMAX = 20;
      941     5680        %EQU MAXDEPTH = 3;
      942     5681        /* in the following TAGxx equates, 32 is added if constructed */
      943     5682        %EQU TAGC1 = (129+32);
      944     5683        %EQU TAGC2 = (130+32);
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:208  
      945     5684
      946     5685    1       DCL XSC_ITEMCNT SBIN SYMREF;
      947     5686
      948     5687            %ITEM( NAME=SCANITEM, STCLASS=AUTO);              /* THESE TWO LINES..  */
      949     5712            %ITEM( NAME="ITEMLIST(0:%ITEMMAX)", STCLASS=AUTO);/* MUST BE CONTIGUOUS */
      950     5737    1       DCL ACN$ PTR;
      951     5738    1       DCL BSRC$ PTR UNAL;
      952     5739    1       DCL BDST$ PTR UNAL;
      953     5740    1       DCL BIT1 BIT(1) BASED UNAL;
      954     5741    1       DCL BIT8 BIT(8) BASED UNAL;
      955     5742    1       DCL BTMP BIT(36);
      956     5743    1       DCL DEPTH SBIN;
      957     5744    1       DCL DSTBYTES CHAR( DSTLEN) BASED CALIGNED;
      958     5745    1       DCL DSTLEN SBIN;
      959     5746    1       DCL I SBIN;
      960     5747    1       DCL INFOLVL SBIN;
      961     5748    1       DCL ITEMCUR SBIN;
      962     5749    1       DCL ITEMNUM SBIN;
      963     5750    1       DCL PDU$ PTR CALIGNED;
      964     5751    1       DCL PDU CHAR(16384) BASED( PDU$) CALIGNED;
      965     5752    1       DCL PDUIDX SBIN;
      966     5753    1       DCL PFPT$ PTR;
      967     5754    1       DCL SRC$ PTR CALIGNED;
      968     5755    1       DCL SRCBYTES CHAR( SRCLEN) BASED CALIGNED;
      969     5756    1       DCL SRCLEN SBIN;
      970     5757    1       DCL TAG SBIN;
      971     5758    1       DCL 1 TAGX REDEF TAG,
      972     5759    1            2 * BIT(28) UNAL,
      973     5760    1            2 CLASS UBIN(2) UNAL,
      974     5761    1            2 CONSTRUCTED BIT(1) UNAL,
      975     5762    1            2 VALUE UBIN(5) UNAL;
      976     5763    1       DCL TEMP SBIN;
      977     5764    1       DCL 1 TWOZEROES CONSTANT,
      978     5765    1            2 X(0:1) UBIN(9) INIT( 0, 0) CALIGNED,
      979     5766    1            2 C REDEF X CHAR(2) CALIGNED;
      980     5767    1       DCL CURRLEN(0:%MAXDEPTH) SBIN;
      981     5768    1       DCL INITLEN(0:%MAXDEPTH) SBIN;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:209  
      982     5769
      983     5770    1       ITEMLIST = '0'B;

   5770  2 000002   000100 100400                    MLR     fill='000'O
         2 000003   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000004   200007 000250                    ADSC9   ITEMLIST,,AUTO           cn=0,n=168

      984     5771    1       TEMP = VBLK.DATA.SIZE;

   5771  2 000005   200003 470500                    LDP0    @VBLK,,AUTO
         2 000006   000005 235100                    LDA     5,,PR0
         2 000007   200100 755100                    STA     TEMP,,AUTO

      985     5772    1       INITLEN = '0'B;

   5772  2 000010   000100 100400                    MLR     fill='000'O
         2 000011   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000012   200105 000020                    ADSC9   INITLEN,,AUTO            cn=0,n=16

      986     5773    1       INITLEN(0) = TEMP;

   5773  2 000013   200105 755100                    STA     INITLEN,,AUTO

      987     5774    1       INITLEN(1) = TEMP;

   5774  2 000014   200106 755100                    STA     INITLEN+1,,AUTO

      988     5775    1       CURRLEN = '0'B;

   5775  2 000015   000100 100400                    MLR     fill='000'O
         2 000016   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000017   200101 000020                    ADSC9   CURRLEN,,AUTO            cn=0,n=16

      989     5776    1       CURRLEN(0) = TEMP;

   5776  2 000020   200101 755100                    STA     CURRLEN,,AUTO

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:210  
      990     5777    1       CURRLEN(1) = TEMP;

   5777  2 000021   200102 755100                    STA     CURRLEN+1,,AUTO

      991     5778    1       PDU$ = VBLK.DATA.PTR$;

   5778  2 000022   000004 236100                    LDQ     4,,PR0
         2 000023   200073 756100                    STQ     PDU$,,AUTO

      992     5779    1       PDUIDX = 0;

   5779  2 000024   200074 450100                    STZ     PDUIDX,,AUTO

      993     5780    1       ITEMLIST.Z(0) = 32*512 + TEMP*262144;  /* set up CON and LEN */

   5780  2 000025   000022 735000                    ALS     18
         2 000026   040000 035007                    ADLA    16384,DL
         2 000027   200007 755100                    STA     ITEMLIST,,AUTO

      994     5781    1       ITEMLIST.P(0) = PDU$;

   5781  2 000030   200010 756100                    STQ     ITEMLIST+1,,AUTO

      995     5782    1       ITEMNUM = 1;

   5782  2 000031   000001 235007                    LDA     1,DL
         2 000032   200072 755100                    STA     ITEMNUM,,AUTO

      996     5783    1       DEPTH = 1;

   5783  2 000033   200065 755100                    STA     DEPTH,,AUTO

      997     5784    1       GOTO NEXTBYTE;

   5784  2 000034   000053 710000 2                  TRA     NEXTBYTE

      998     5785    1   NEXTLEVEL:
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:211  
      999     5786    1       DEPTH = DEPTH + 1;

   5786  2 000035   200065 054100       NEXTLEVEL    AOS     DEPTH,,AUTO

     1000     5787    1       IF DEPTH > %MAXDEPTH THEN

   5787  2 000036   200065 235100                    LDA     DEPTH,,AUTO
         2 000037   000003 115007                    CMPA    3,DL
         2 000040   001200 605400 2                  TPNZ    SCANERR

     1001     5788    1           GOTO SCANERR;
     1002     5789    1       CURRLEN( DEPTH) = TEMP;

   5789  2 000041   200100 236100                    LDQ     TEMP,,AUTO
         2 000042   200101 756105                    STQ     CURRLEN,AL,AUTO

     1003     5790    1       IF TEMP >= 0 THEN

   5790  2 000043   000047 604000 2                  TMI     s:5793

     1004     5791    1           INITLEN( DEPTH) = TEMP;

   5791  2 000044   200065 720100                    LXL0    DEPTH,,AUTO
         2 000045   200105 756110                    STQ     INITLEN,X0,AUTO
         2 000046   000053 710000 2                  TRA     NEXTBYTE

     1005     5792    1       ELSE
     1006     5793    1           INITLEN( DEPTH) = -( ITEMNUM - 1);  /* LEN will be fixed at ENDITEM */

   5793  2 000047   200065 720100                    LXL0    DEPTH,,AUTO
         2 000050   000001 235007                    LDA     1,DL
         2 000051   200072 135100                    SBLA    ITEMNUM,,AUTO
         2 000052   200105 755110                    STA     INITLEN,X0,AUTO

     1007     5794    1   NEXTBYTE:
     1008     5795    2       IF CURRLEN( DEPTH) > 0 THEN DO;

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:212  
   5795  2 000053   200065 720100       NEXTBYTE     LXL0    DEPTH,,AUTO
         2 000054   200101 235110                    LDA     CURRLEN,X0,AUTO
         2 000055   000150 604400 2                  TMOZ    ENDITEM

     1009     5796    2           IF SUBSTR( PDU, PDUIDX, 2) = TWOZEROES.C THEN

   5796  2 000056   200073 470500                    LDP0    PDU$,,AUTO
         2 000057   200074 236100                    LDQ     PDUIDX,,AUTO
         2 000060   040000 106506                    CMPC    fill='040'O
         2 000061   000000 000002                    ADSC9   0,Q,PR0                  cn=0,n=2
         2 000062   000000 000002 1                  ADSC9   TWOZEROES                cn=0,n=2
         2 000063   000150 600000 2                  TZE     ENDITEM

     1010     5797    2               GOTO ENDITEM;
     1011     5798    2           TAG = ASCBIN( SUBSTR( PDU, PDUIDX, 1));

   5798  2 000064   000100 101506                    MRL     fill='000'O
         2 000065   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1
         2 000066   200114 000004                    ADSC9   INITLEN+7,,AUTO          cn=0,n=4
         2 000067   200114 236100                    LDQ     INITLEN+7,,AUTO
         2 000070   200077 756100                    STQ     TAG,,AUTO

     1012     5799    2           PDUIDX = PDUIDX + 1;

   5799  2 000071   200074 054100                    AOS     PDUIDX,,AUTO

     1013     5800    2           CURRLEN( DEPTH) = CURRLEN( DEPTH) - 1;

   5800  2 000072   000001 336007                    LCQ     1,DL
         2 000073   200101 056110                    ASQ     CURRLEN,X0,AUTO

     1014     5801    2           CALL GETLEN;  /* parse length of item into TEMP */

   5801  2 000074   001562 701000 2                  TSX1    GETLEN
         2 000075   000000 011000                    NOP     0

     1015     5802    2           IF TEMP >= 0 THEN
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:213  

   5802  2 000076   200100 235100                    LDA     TEMP,,AUTO
         2 000077   000114 604000 2                  TMI     s:5805

     1016     5803    2               ITEMLIST.Z( ITEMNUM) = DEPTH + TAG*512 + TEMP*262144;

   5803  2 000100   200072 236100                    LDQ     ITEMNUM,,AUTO
         2 000101   000001 736000                    QLS     1
         2 000102   000000 620006                    EAX0    0,QL
         2 000103   200077 236100                    LDQ     TAG,,AUTO
         2 000104   000011 736000                    QLS     9
         2 000105   200065 036100                    ADLQ    DEPTH,,AUTO
         2 000106   200114 756100                    STQ     INITLEN+7,,AUTO
         2 000107   200100 236100                    LDQ     TEMP,,AUTO
         2 000110   000022 736000                    QLS     18
         2 000111   200114 036100                    ADLQ    INITLEN+7,,AUTO
         2 000112   200007 756110                    STQ     ITEMLIST,X0,AUTO
         2 000113   000123 710000 2                  TRA     s:5806

     1017     5804    2           ELSE
     1018     5805    2               ITEMLIST.Z( ITEMNUM) = DEPTH + TAG*512;  /* LEN fixed later */

   5805  2 000114   200072 236100                    LDQ     ITEMNUM,,AUTO
         2 000115   000001 736000                    QLS     1
         2 000116   000000 620006                    EAX0    0,QL
         2 000117   200077 236100                    LDQ     TAG,,AUTO
         2 000120   000011 736000                    QLS     9
         2 000121   200065 036100                    ADLQ    DEPTH,,AUTO
         2 000122   200007 756110                    STQ     ITEMLIST,X0,AUTO

     1019     5806    2           ITEMLIST.P( ITEMNUM) = PINCRC( PDU$, PDUIDX);

   5806  2 000123   200074 236100                    LDQ     PDUIDX,,AUTO
         2 000124   000020 736000                    QLS     16
         2 000125   200073 036100                    ADLQ    PDU$,,AUTO
         2 000126   200010 756110                    STQ     ITEMLIST+1,X0,AUTO

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:214  
     1020     5807    2           ITEMNUM = ITEMNUM + 1;

   5807  2 000127   200072 054100                    AOS     ITEMNUM,,AUTO

     1021     5808    2           IF TAGX.CONSTRUCTED THEN

   5808  2 000130   200077 236100                    LDQ     TAG,,AUTO
         2 000131   000040 316007                    CANQ    32,DL
         2 000132   000035 601000 2                  TNZ     NEXTLEVEL

     1022     5809    2               GOTO NEXTLEVEL;
     1023     5810    2           IF TEMP < 0 THEN

   5810  2 000133   000000 115003                    CMPA    0,DU
         2 000134   001200 604000 2                  TMI     SCANERR

     1024     5811    2               GOTO SCANERR;  /* indefinite form illegal for primitive */
     1025     5812    2           PDUIDX = PDUIDX + TEMP;

   5812  2 000135   200074 236100                    LDQ     PDUIDX,,AUTO
         2 000136   200100 036100                    ADLQ    TEMP,,AUTO
         2 000137   200074 756100                    STQ     PDUIDX,,AUTO

     1026     5813    2           CURRLEN( DEPTH) = CURRLEN( DEPTH) - TEMP;

   5813  2 000140   200065 720100                    LXL0    DEPTH,,AUTO
         2 000141   200101 236110                    LDQ     CURRLEN,X0,AUTO
         2 000142   200100 136100                    SBLQ    TEMP,,AUTO
         2 000143   200101 756110                    STQ     CURRLEN,X0,AUTO

     1027     5814    2           IF VBLK.DATA.SIZE > PDUIDX THEN

   5814  2 000144   200003 470500                    LDP0    @VBLK,,AUTO
         2 000145   000005 236100                    LDQ     5,,PR0
         2 000146   200074 116100                    CMPQ    PDUIDX,,AUTO
         2 000147   000053 605400 2                  TPNZ    NEXTBYTE

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:215  
     1028     5815    2               GOTO NEXTBYTE;
     1029     5816    2           END;

     1030     5817    1   ENDITEM:
     1031     5818    2       IF INITLEN( DEPTH) < 0 THEN DO;

   5818  2 000150   200105 235110       ENDITEM      LDA     INITLEN,X0,AUTO
         2 000151   000200 605000 2                  TPL     s:5826

     1032     5819                /* have to fix up length of an indefinite-length item */
     1033     5820    2           TEMP = -INITLEN( DEPTH);

   5820  2 000152   200105 235110                    LDA     INITLEN,X0,AUTO
         2 000153   000000 531000                    NEG     0
         2 000154   200100 755100                    STA     TEMP,,AUTO

     1034     5821    2           ITEMLIST.X.LEN( TEMP) = PDUIDX - POFFC( ITEMLIST.P( TEMP), PDU$);

   5821  2 000155   000001 735000                    ALS     1
         2 000156   200073 236100                    LDQ     PDU$,,AUTO
         2 000157   000020 772000                    QRL     16
         2 000160   200114 756100                    STQ     INITLEN+7,,AUTO
         2 000161   200010 236105                    LDQ     ITEMLIST+1,AL,AUTO
         2 000162   000020 772000                    QRL     16
         2 000163   200114 136100                    SBLQ    INITLEN+7,,AUTO
         2 000164   200115 756100                    STQ     INITLEN+8,,AUTO
         2 000165   200074 236100                    LDQ     PDUIDX,,AUTO
         2 000166   200115 136100                    SBLQ    INITLEN+8,,AUTO
         2 000167   000000 621006                    EAX1    0,QL
         2 000170   200007 741105                    STX1    ITEMLIST,AL,AUTO

     1035     5822    2           PDUIDX = PDUIDX + 2;

   5822  2 000171   000002 236007                    LDQ     2,DL
         2 000172   200074 056100                    ASQ     PDUIDX,,AUTO

     1036     5823    2           CURRLEN( DEPTH) = CURRLEN( DEPTH) - 2;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:216  

   5823  2 000173   000002 336007                    LCQ     2,DL
         2 000174   200101 056110                    ASQ     CURRLEN,X0,AUTO

     1037     5824    2           INITLEN( DEPTH) = - ( CURRLEN( DEPTH) + 1);

   5824  2 000175   200101 235110                    LDA     CURRLEN,X0,AUTO
         2 000176   000001 675000 3                  ERA     1
         2 000177   200105 755110                    STA     INITLEN,X0,AUTO

     1038     5825    2           END;

     1039     5826    1       TEMP = DEPTH;

   5826  2 000200   200065 236100                    LDQ     DEPTH,,AUTO
         2 000201   200100 756100                    STQ     TEMP,,AUTO

     1040     5827    1       DEPTH = DEPTH - 1;

   5827  2 000202   000001 336007                    LCQ     1,DL
         2 000203   200065 056100                    ASQ     DEPTH,,AUTO

     1041     5828    2       IF DEPTH >= 0 THEN DO;

   5828  2 000204   000214 604000 2                  TMI     s:5834

     1042     5829    2           CURRLEN( DEPTH) = CURRLEN( DEPTH) - INITLEN( TEMP);

   5829  2 000205   200100 720100                    LXL0    TEMP,,AUTO
         2 000206   200065 721100                    LXL1    DEPTH,,AUTO
         2 000207   200101 236111                    LDQ     CURRLEN,X1,AUTO
         2 000210   200105 136110                    SBLQ    INITLEN,X0,AUTO
         2 000211   200101 756111                    STQ     CURRLEN,X1,AUTO

     1043     5830    2           INITLEN( TEMP) = 0;

   5830  2 000212   200105 450110                    STZ     INITLEN,X0,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:217  

     1044     5831    2           GOTO NEXTBYTE;

   5831  2 000213   000053 710000 2                  TRA     NEXTBYTE

     1045     5832    2           END;
     1046     5833            /* done scanning the APDU.. now try to decode it item by item */
     1047     5834    1       ACN$ = ADDR( ACN);

   5834  2 000214   000002 236000 3                  LDQ     2
         2 000215   200061 756100                    STQ     ACN$,,AUTO

     1048     5835    1       XSC_ITEMCNT = -1;  /* make SCAN/LOAD load into SCANITEM, not ITEMLIST */

   5835  2 000216   000001 335007                    LCA     1,DL
         2 000217   000000 755000 xsym               STA     XSC_ITEMCNT

     1049     5836    1       ITEMCUR = 0;

   5836  2 000220   200071 450100                    STZ     ITEMCUR,,AUTO

     1050     5837    1       INFOLVL = 0;

   5837  2 000221   200070 450100                    STZ     INFOLVL,,AUTO

     1051     5838            %SCAN( LVL=0, TYP=NONE, CON=Y, LEN="VBLK.DATA.SIZE");

   5924  2 000222   000001 735000                    ALS     1
         2 000223   200003 470500                    LDP0    @VBLK,,AUTO
         2 000224   000000 620005                    EAX0    0,AL
         2 000225   000005 235100                    LDA     5,,PR0
         2 000226   000022 735000                    ALS     18
         2 000227   040000 035007                    ADLA    16384,DL
         2 000230   200007 755110                    STA     ITEMLIST,X0,AUTO

   5931  2 000231   001201 701000 2                  TSX1    SCAN
         2 000232   001200 702000 2                  TSX2    SCANERR
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:218  

     1052     5934    1   PFNCCASE:
     1053     5935    2       DO CASE( XSP$GENERIC.FNC);

   5935  2 000233   200004 470500       PFNCCASE     LDP0    @PFPT$,,AUTO
         2 000234   000000 471500                    LDP1    0,,PR0
         2 000235   100000 236100                    LDQ     0,,PR1
         2 000236   000033 772000                    QRL     27
         2 000237   000032 136007                    SBLQ    26,DL
         2 000240   000044 116007                    CMPQ    36,DL
         2 000241   000243 602006 2                  TNC     PFNCCASE+8,QL
         2 000242   001127 710000 2                  TRA     s:8940
         2 000243   000307 710000 2                  TRA     s:6029
         2 000244   001127 710000 2                  TRA     s:8940
         2 000245   000517 710000 2                  TRA     s:7210
         2 000246   001127 710000 2                  TRA     s:8940
         2 000247   001127 710000 2                  TRA     s:8940
         2 000250   001127 710000 2                  TRA     s:8940
         2 000251   001127 710000 2                  TRA     s:8940
         2 000252   001127 710000 2                  TRA     s:8940
         2 000253   001127 710000 2                  TRA     s:8940
         2 000254   001127 710000 2                  TRA     s:8940
         2 000255   000746 710000 2                  TRA     s:8400
         2 000256   001127 710000 2                  TRA     s:8940
         2 000257   001006 710000 2                  TRA     s:8604
         2 000260   001127 710000 2                  TRA     s:8940
         2 000261   001127 710000 2                  TRA     s:8940
         2 000262   001127 710000 2                  TRA     s:8940
         2 000263   001127 710000 2                  TRA     s:8940
         2 000264   001127 710000 2                  TRA     s:8940
         2 000265   001127 710000 2                  TRA     s:8940
         2 000266   001127 710000 2                  TRA     s:8940
         2 000267   001127 710000 2                  TRA     s:8940
         2 000270   001127 710000 2                  TRA     s:8940
         2 000271   001127 710000 2                  TRA     s:8940
         2 000272   001127 710000 2                  TRA     s:8940
         2 000273   001127 710000 2                  TRA     s:8940
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:219  
         2 000274   001127 710000 2                  TRA     s:8940
         2 000275   001127 710000 2                  TRA     s:8940
         2 000276   001127 710000 2                  TRA     s:8940
         2 000277   001127 710000 2                  TRA     s:8940
         2 000300   001127 710000 2                  TRA     s:8940
         2 000301   001127 710000 2                  TRA     s:8940
         2 000302   001127 710000 2                  TRA     s:8940
         2 000303   001054 710000 2                  TRA     s:8812
         2 000304   001127 710000 2                  TRA     s:8940
         2 000305   001127 710000 2                  TRA     s:8940
         2 000306   001114 710000 2                  TRA     s:8930

     1054     5936        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:220  
     1055     5937        /*****************************************************************************
     1056     5938        *
     1057     5939        *       PCONIND
     1058     5940        *
     1059     5941        *****************************************************************************/
     1060     5942    2           CASE( %XSP_FNC_PCONIND#);  /* should be an AARQ APDU */

     1061     5943                    %SCAN( LVL=1, TAG=A0, IMP=Y, TYP=SEQ);  /* AARQApdu */

   6029  2 000307   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000310   000001 735000                    ALS     1
         2 000311   140601 236007                    LDQ     49537,DL
         2 000312   200007 756105                    STQ     ITEMLIST,AL,AUTO

   6036  2 000313   001201 701000 2                  TSX1    SCAN
         2 000314   001200 702000 2                  TSX2    SCANERR

     1062     6039    2               VBLK.EVENT = %XSC_CEV_AARQ;

   6039  2 000315   200003 470500                    LDP0    @VBLK,,AUTO
         2 000316   000001 236007                    LDQ     1,DL
         2 000317   000006 552104                    STBQ    6,'04'O,PR0

     1063     6040    2               XSC$ASSOCIATE = XSC_ASSOCIATE;

   6040  2 000320   000001 471500                    LDP1    1,,PR0
         2 000321   000100 100400                    MLR     fill='000'O
         2 000322   000000 000070 xsym               ADSC9   XSC_ASSOCIATE            cn=0,n=56
         2 000323   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

     1064     6041    2               XSC$ASSOCIATE.FNC = %XSC_FNC_AASCIND#;

   6041  2 000324   000001 471500                    LDP1    1,,PR0
         2 000325   002000 236003                    LDQ     1024,DU
         2 000326   100000 552140                    STBQ    0,'40'O,PR1

     1065     6042                    %SCAN( LVL=2, TAG=C0, IMP=Y, TYP=BITSTR, OPT=Y,
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:221  
     1066     6043                            LEN=1, VAL=BTMP);  /* ProtocolVersion */

   6102  2 000327   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000330   000001 735000                    ALS     1
         2 000331   200064 631500                    EPPR1   BTMP,,AUTO
         2 000332   200010 451505                    STP1    ITEMLIST+1,AL,AUTO

   6129  2 000333   000003 236000 3                  LDQ     3
         2 000334   200007 756105                    STQ     ITEMLIST,AL,AUTO

   6136  2 000335   001201 701000 2                  TSX1    SCAN
         2 000336   001200 702000 2                  TSX2    SCANERR

     1067     6139    2               IF BTMP ~= '1'B THEN

   6139  2 000337   200064 236100                    LDQ     BTMP,,AUTO
         2 000340   400000 116003                    CMPQ    -131072,DU
         2 000341   001200 601000 2                  TNZ     SCANERR

     1068     6140    2                   GOTO SCANERR;
     1069     6141                    %SCAN( LVL=2, TAG=C1, TYP=OBJID,
     1070     6142                            LEN=20, VAL=ACN$);  /* ApplicationContextName */

   6216  2 000342   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000343   000001 735000                    ALS     1
         2 000344   200061 236100                    LDQ     ACN$,,AUTO
         2 000345   400000 036007                    ADLQ    -131072,DL
         2 000346   200010 756105                    STQ     ITEMLIST+1,AL,AUTO

   6228  2 000347   200061 470500                    LDP0    ACN$,,AUTO
         2 000350   000000 236100                    LDQ     0,,PR0
         2 000351   777777 376003                    ANQ     -1,DU
         2 000352   201062 036007                    ADLQ    66098,DL
         2 000353   200007 756105                    STQ     ITEMLIST,AL,AUTO

   6235  2 000354   001201 701000 2                  TSX1    SCAN
         2 000355   001200 702000 2                  TSX2    SCANERR
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:222  

     1071     6238                    %SCAN( LVL=2, TAG=C2, TYP=ANY, OPT=Y,
     1072     6239                            LEN=64, VAL=NIL);  /* CalledAPTitle */

   6322  2 000356   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000357   000001 735000                    ALS     1
         2 000360   000004 236000 3                  LDQ     4
         2 000361   200010 756105                    STQ     ITEMLIST+1,AL,AUTO

   6325  2 000362   000005 236000 3                  LDQ     5
         2 000363   200007 756105                    STQ     ITEMLIST,AL,AUTO

   6332  2 000364   001201 701000 2                  TSX1    SCAN
         2 000365   001200 702000 2                  TSX2    SCANERR

     1073     6335                    %SCAN( LVL=2, TAG=C3, TYP=ANY, OPT=Y,
     1074     6336                            LEN=64, VAL=NIL);  /* CalledAEQualifier */

   6419  2 000366   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000367   000001 735000                    ALS     1
         2 000370   000004 236000 3                  LDQ     4
         2 000371   200010 756105                    STQ     ITEMLIST+1,AL,AUTO

   6422  2 000372   000006 236000 3                  LDQ     6
         2 000373   200007 756105                    STQ     ITEMLIST,AL,AUTO

   6429  2 000374   001201 701000 2                  TSX1    SCAN
         2 000375   001200 702000 2                  TSX2    SCANERR

     1075     6432                    %SCAN( LVL=2, TAG=C4, TYP=INTG, OPT=Y,
     1076     6433                            LEN=4, VAL=TEMP); /* CalledAPInvocationId */

   6486  2 000376   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000377   000001 735000                    ALS     1
         2 000400   200100 630500                    EPPR0   TEMP,,AUTO
         2 000401   200010 450505                    STP0    ITEMLIST+1,AL,AUTO

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:223  
   6519  2 000402   000007 236000 3                  LDQ     7
         2 000403   200007 756105                    STQ     ITEMLIST,AL,AUTO

   6526  2 000404   001201 701000 2                  TSX1    SCAN
         2 000405   001200 702000 2                  TSX2    SCANERR

     1077     6529    2               XSC$ASSOCIATE.RAPID = TEMP;

   6529  2 000406   200003 470500                    LDP0    @VBLK,,AUTO
         2 000407   000001 471500                    LDP1    1,,PR0
         2 000410   200100 235100                    LDA     TEMP,,AUTO
         2 000411   100012 755100                    STA     10,,PR1

     1078     6530                    %SCAN( LVL=2, TAG=C5, TYP=INTG, OPT=Y,
     1079     6531                            LEN=4, VAL=TEMP); /* CalledAEInvocationId */

   6584  2 000412   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000413   000001 735000                    ALS     1
         2 000414   200100 631500                    EPPR1   TEMP,,AUTO
         2 000415   200010 451505                    STP1    ITEMLIST+1,AL,AUTO

   6617  2 000416   000010 236000 3                  LDQ     8
         2 000417   200007 756105                    STQ     ITEMLIST,AL,AUTO

   6624  2 000420   001201 701000 2                  TSX1    SCAN
         2 000421   001200 702000 2                  TSX2    SCANERR

     1080     6627    2               XSC$ASSOCIATE.RAEID = TEMP;

   6627  2 000422   200003 470500                    LDP0    @VBLK,,AUTO
         2 000423   000001 471500                    LDP1    1,,PR0
         2 000424   200100 235100                    LDA     TEMP,,AUTO
         2 000425   100013 755100                    STA     11,,PR1

     1081     6628                    %SCAN( LVL=2, TAG=C6, TYP=ANY, OPT=Y,
     1082     6629                            LEN=64, VAL=NIL);  /* CallingAPTitle */

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:224  
   6712  2 000426   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000427   000001 735000                    ALS     1
         2 000430   000004 236000 3                  LDQ     4
         2 000431   200010 756105                    STQ     ITEMLIST+1,AL,AUTO

   6715  2 000432   000011 236000 3                  LDQ     9
         2 000433   200007 756105                    STQ     ITEMLIST,AL,AUTO

   6722  2 000434   001201 701000 2                  TSX1    SCAN
         2 000435   001200 702000 2                  TSX2    SCANERR

     1083     6725                    %SCAN( LVL=2, TAG=C7, TYP=ANY, OPT=Y,
     1084     6726                            LEN=64, VAL=NIL);  /* CallingAEQualifier */

   6809  2 000436   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000437   000001 735000                    ALS     1
         2 000440   000004 236000 3                  LDQ     4
         2 000441   200010 756105                    STQ     ITEMLIST+1,AL,AUTO

   6812  2 000442   000012 236000 3                  LDQ     10
         2 000443   200007 756105                    STQ     ITEMLIST,AL,AUTO

   6819  2 000444   001201 701000 2                  TSX1    SCAN
         2 000445   001200 702000 2                  TSX2    SCANERR

     1085     6822                    %SCAN( LVL=2, TAG=C8, TYP=INTG, OPT=Y,
     1086     6823                            LEN=4, VAL=TEMP);/* CallingAPInvocationId */

   6876  2 000446   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000447   000001 735000                    ALS     1
         2 000450   200100 630500                    EPPR0   TEMP,,AUTO
         2 000451   200010 450505                    STP0    ITEMLIST+1,AL,AUTO

   6909  2 000452   000013 236000 3                  LDQ     11
         2 000453   200007 756105                    STQ     ITEMLIST,AL,AUTO

   6916  2 000454   001201 701000 2                  TSX1    SCAN
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:225  
         2 000455   001200 702000 2                  TSX2    SCANERR

     1087     6919    2               XSC$ASSOCIATE.IAPID = TEMP;

   6919  2 000456   200003 470500                    LDP0    @VBLK,,AUTO
         2 000457   000001 471500                    LDP1    1,,PR0
         2 000460   200100 235100                    LDA     TEMP,,AUTO
         2 000461   100006 755100                    STA     6,,PR1

     1088     6920                    %SCAN( LVL=2, TAG=C9, TYP=INTG, OPT=Y,
     1089     6921                            LEN=4, VAL=TEMP);/* CallingAEInvocationId */

   6974  2 000462   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000463   000001 735000                    ALS     1
         2 000464   200100 631500                    EPPR1   TEMP,,AUTO
         2 000465   200010 451505                    STP1    ITEMLIST+1,AL,AUTO

   7007  2 000466   000014 236000 3                  LDQ     12
         2 000467   200007 756105                    STQ     ITEMLIST,AL,AUTO

   7014  2 000470   001201 701000 2                  TSX1    SCAN
         2 000471   001200 702000 2                  TSX2    SCANERR

     1090     7017    2               XSC$ASSOCIATE.IAEID = TEMP;

   7017  2 000472   200003 470500                    LDP0    @VBLK,,AUTO
         2 000473   000001 471500                    LDP1    1,,PR0
         2 000474   200100 235100                    LDA     TEMP,,AUTO
         2 000475   100007 755100                    STA     7,,PR1

     1091     7018                    %SCAN( LVL=2, TAG=C29, IMP=Y, TYP=GRFSTR, OPT=Y,
     1092     7019                            LEN=64, VAL=NIL);  /* ImplementationData */

   7102  2 000476   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000477   000001 735000                    ALS     1
         2 000500   000004 236000 3                  LDQ     4
         2 000501   200010 756105                    STQ     ITEMLIST+1,AL,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:226  

   7105  2 000502   000015 236000 3                  LDQ     13
         2 000503   200007 756105                    STQ     ITEMLIST,AL,AUTO

   7112  2 000504   001201 701000 2                  TSX1    SCAN
         2 000505   001200 702000 2                  TSX2    SCANERR

     1093     7115    2               XSC$ASSOCIATE.CTXT$ = XSP$CONNECT.CTXT$;

   7115  2 000506   200003 470500                    LDP0    @VBLK,,AUTO
         2 000507   000001 471500                    LDP1    1,,PR0
         2 000510   200004 473500                    LDP3    @PFPT$,,AUTO
         2 000511   300000 474500                    LDP4    0,,PR3
         2 000512   400005 236100                    LDQ     5,,PR4
         2 000513   100015 756100                    STQ     13,,PR1

     1094     7116    2               INFOLVL = 2;

   7116  2 000514   000002 235007                    LDA     2,DL
         2 000515   200070 755100                    STA     INFOLVL,,AUTO
         2 000516   001130 710000 2                  TRA     s:8942

     1095     7117        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:227  
     1096     7118        /*****************************************************************************
     1097     7119        *
     1098     7120        *       PCONCNF
     1099     7121        *
     1100     7122        *****************************************************************************/
     1101     7123    2           CASE( %XSP_FNC_PCONCNF#);  /* should be an AARE APDU */

     1102     7124                    %SCAN( LVL=1, TAG=A1, IMP=Y, TYP=SEQ);  /* AAREApdu */

   7210  2 000517   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000520   000001 735000                    ALS     1
         2 000521   141601 236007                    LDQ     50049,DL
         2 000522   200007 756105                    STQ     ITEMLIST,AL,AUTO

   7217  2 000523   001201 701000 2                  TSX1    SCAN
         2 000524   001200 702000 2                  TSX2    SCANERR

     1103     7220    2               XSC$ASSOCIATE = XSC_ASSOCIATE;

   7220  2 000525   200003 470500                    LDP0    @VBLK,,AUTO
         2 000526   000001 471500                    LDP1    1,,PR0
         2 000527   000100 100400                    MLR     fill='000'O
         2 000530   000000 000070 xsym               ADSC9   XSC_ASSOCIATE            cn=0,n=56
         2 000531   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56

     1104     7221    2               XSC$ASSOCIATE.FNC = %XSC_FNC_AASCCNF#;

   7221  2 000532   000001 471500                    LDP1    1,,PR0
         2 000533   004000 236003                    LDQ     2048,DU
         2 000534   100000 552140                    STBQ    0,'40'O,PR1

     1105     7222                    %SCAN( LVL=2, TAG=C0, IMP=Y, TYP=BITSTR, OPT=Y,
     1106     7223                            LEN=1, VAL=BTMP);  /* ProtocolVersion */

   7282  2 000535   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000536   000001 735000                    ALS     1
         2 000537   200064 631500                    EPPR1   BTMP,,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:228  
         2 000540   200010 451505                    STP1    ITEMLIST+1,AL,AUTO

   7309  2 000541   000003 236000 3                  LDQ     3
         2 000542   200007 756105                    STQ     ITEMLIST,AL,AUTO

   7316  2 000543   001201 701000 2                  TSX1    SCAN
         2 000544   001200 702000 2                  TSX2    SCANERR

     1107     7319    2               IF BTMP ~= '1'B THEN

   7319  2 000545   200064 236100                    LDQ     BTMP,,AUTO
         2 000546   400000 116003                    CMPQ    -131072,DU
         2 000547   001200 601000 2                  TNZ     SCANERR

     1108     7320    2                   GOTO SCANERR;
     1109     7321                    %SCAN( LVL=2, TAG=C1, TYP=OBJID,
     1110     7322                            LEN=20, VAL=ACN$);  /* ApplicationContextName */

   7396  2 000550   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000551   000001 735000                    ALS     1
         2 000552   200061 236100                    LDQ     ACN$,,AUTO
         2 000553   400000 036007                    ADLQ    -131072,DL
         2 000554   200010 756105                    STQ     ITEMLIST+1,AL,AUTO

   7408  2 000555   200061 470500                    LDP0    ACN$,,AUTO
         2 000556   000000 236100                    LDQ     0,,PR0
         2 000557   777777 376003                    ANQ     -1,DU
         2 000560   201062 036007                    ADLQ    66098,DL
         2 000561   200007 756105                    STQ     ITEMLIST,AL,AUTO

   7415  2 000562   001201 701000 2                  TSX1    SCAN
         2 000563   001200 702000 2                  TSX2    SCANERR

     1111     7418                    %SCAN( LVL=2, TAG=C2, TYP=INTG,
     1112     7419                            LEN=4, VAL=TEMP);  /* Result */

   7472  2 000564   000000 235000 xsym               LDA     XSC_ITEMCNT
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:229  
         2 000565   000001 735000                    ALS     1
         2 000566   200100 630500                    EPPR0   TEMP,,AUTO
         2 000567   200010 450505                    STP0    ITEMLIST+1,AL,AUTO

   7505  2 000570   000016 236000 3                  LDQ     14
         2 000571   200007 756105                    STQ     ITEMLIST,AL,AUTO

   7512  2 000572   001201 701000 2                  TSX1    SCAN
         2 000573   001200 702000 2                  TSX2    SCANERR

     1113     7515    2               IF TEMP = %XSC_RSLT_ACCEPTED# THEN

   7515  2 000574   200100 235100                    LDA     TEMP,,AUTO
         2 000575   000602 601000 2                  TNZ     s:7518

     1114     7516    2                   VBLK.EVENT = %XSC_CEV_AAREP;

   7516  2 000576   200003 470500                    LDP0    @VBLK,,AUTO
         2 000577   000002 236007                    LDQ     2,DL
         2 000600   000006 552104                    STBQ    6,'04'O,PR0
         2 000601   000605 710000 2                  TRA     s:7519

     1115     7517    2               ELSE
     1116     7518    2                   VBLK.EVENT = %XSC_CEV_AAREN;

   7518  2 000602   200003 470500                    LDP0    @VBLK,,AUTO
         2 000603   000003 236007                    LDQ     3,DL
         2 000604   000006 552104                    STBQ    6,'04'O,PR0

     1117     7519    2               XSC$ASSOCIATE.RESULT = TEMP;

   7519  2 000605   000001 471500                    LDP1    1,,PR0
         2 000606   200100 236100                    LDQ     TEMP,,AUTO
         2 000607   100000 552104                    STBQ    0,'04'O,PR1

     1118     7520                    %SCAN( LVL=2, TAG=C3, TYP=CHOICE);  /* ResultSourceDiagnostic */

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:230  
   7606  2 000610   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000611   000001 735000                    ALS     1
         2 000612   203152 236007                    LDQ     67178,DL
         2 000613   200007 756105                    STQ     ITEMLIST,AL,AUTO

   7613  2 000614   001201 701000 2                  TSX1    SCAN
         2 000615   001200 702000 2                  TSX2    SCANERR

     1119     7616    3               IF ITEMLIST.X.TAG( ITEMCUR) = %TAGC1 THEN DO;

   7616  2 000616   200071 235100                    LDA     ITEMCUR,,AUTO
         2 000617   000001 735000                    ALS     1
         2 000620   200007 236105                    LDQ     ITEMLIST,AL,AUTO
         2 000621   377000 376007                    ANQ     130560,DL
         2 000622   241000 116007                    CMPQ    82432,DL
         2 000623   000635 601000 2                  TNZ     s:7716

     1120     7617                        %SCAN( LVL=3, TAG=C1, TYP=INTG,
     1121     7618                                LEN=4, VAL=TEMP);  /* ACSEServiceUser */

   7671  2 000624   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000625   000001 735000                    ALS     1
         2 000626   200100 630500                    EPPR0   TEMP,,AUTO
         2 000627   200010 450505                    STP0    ITEMLIST+1,AL,AUTO

   7704  2 000630   000017 236000 3                  LDQ     15
         2 000631   200007 756105                    STQ     ITEMLIST,AL,AUTO

   7711  2 000632   001201 701000 2                  TSX1    SCAN
         2 000633   001200 702000 2                  TSX2    SCANERR

     1122     7714    3                   END;

   7714  2 000634   000650 710000 2                  TRA     s:7817

     1123     7715    2               ELSE
     1124     7716    3                   IF ITEMLIST.X.TAG( ITEMCUR) = %TAGC2 THEN DO;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:231  

   7716  2 000635   242000 116007                    CMPQ    82944,DL
         2 000636   001200 601000 2                  TNZ     SCANERR

     1125     7717                            %SCAN( LVL=3, TAG=C2, TYP=INTG,
     1126     7718                                    LEN=4, VAL=TEMP);  /* ACSEServiceProvider */

   7771  2 000637   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000640   000001 735000                    ALS     1
         2 000641   200100 630500                    EPPR0   TEMP,,AUTO
         2 000642   200010 450505                    STP0    ITEMLIST+1,AL,AUTO

   7804  2 000643   000020 236000 3                  LDQ     16
         2 000644   200007 756105                    STQ     ITEMLIST,AL,AUTO

   7811  2 000645   001201 701000 2                  TSX1    SCAN
         2 000646   001200 702000 2                  TSX2    SCANERR

     1127     7814    3                       END;

   7814  2 000647   000650 710000 2                  TRA     s:7817

     1128     7815    2                   ELSE
     1129     7816    2                       GOTO SCANERR;
     1130     7817    2               XSC$ASSOCIATE.RSDIAG = TEMP;

   7817  2 000650   200003 470500                    LDP0    @VBLK,,AUTO
         2 000651   000001 471500                    LDP1    1,,PR0
         2 000652   200100 236100                    LDQ     TEMP,,AUTO
         2 000653   000011 736000                    QLS     9
         2 000654   100000 552110                    STBQ    0,'10'O,PR1

     1131     7818                    %SCAN( LVL=2, TAG=C4, TYP=ANY, OPT=Y,
     1132     7819                            LEN=64, VAL=NIL);  /* RespondingAPTitle */

   7902  2 000655   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000656   000001 735000                    ALS     1
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:232  
         2 000657   000004 236000 3                  LDQ     4
         2 000660   200010 756105                    STQ     ITEMLIST+1,AL,AUTO

   7905  2 000661   000021 236000 3                  LDQ     17
         2 000662   200007 756105                    STQ     ITEMLIST,AL,AUTO

   7912  2 000663   001201 701000 2                  TSX1    SCAN
         2 000664   001200 702000 2                  TSX2    SCANERR

     1133     7915                    %SCAN( LVL=2, TAG=C5, TYP=ANY, OPT=Y,
     1134     7916                            LEN=64, VAL=NIL); /* RespondingAEQualifier */

   7999  2 000665   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000666   000001 735000                    ALS     1
         2 000667   000004 236000 3                  LDQ     4
         2 000670   200010 756105                    STQ     ITEMLIST+1,AL,AUTO

   8002  2 000671   000022 236000 3                  LDQ     18
         2 000672   200007 756105                    STQ     ITEMLIST,AL,AUTO

   8009  2 000673   001201 701000 2                  TSX1    SCAN
         2 000674   001200 702000 2                  TSX2    SCANERR

     1135     8012                    %SCAN( LVL=2, TAG=C6, TYP=INTG, OPT=Y,
     1136     8013                            LEN=4, VAL=TEMP);/*RespondingAPInvocationId*/

   8066  2 000675   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000676   000001 735000                    ALS     1
         2 000677   200100 630500                    EPPR0   TEMP,,AUTO
         2 000700   200010 450505                    STP0    ITEMLIST+1,AL,AUTO

   8099  2 000701   000023 236000 3                  LDQ     19
         2 000702   200007 756105                    STQ     ITEMLIST,AL,AUTO

   8106  2 000703   001201 701000 2                  TSX1    SCAN
         2 000704   001200 702000 2                  TSX2    SCANERR

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:233  
     1137     8109    2               XSC$ASSOCIATE.RAPID = TEMP;

   8109  2 000705   200003 470500                    LDP0    @VBLK,,AUTO
         2 000706   000001 471500                    LDP1    1,,PR0
         2 000707   200100 235100                    LDA     TEMP,,AUTO
         2 000710   100012 755100                    STA     10,,PR1

     1138     8110                    %SCAN( LVL=2, TAG=C7, TYP=INTG, OPT=Y,
     1139     8111                            LEN=4, VAL=TEMP);/*RespondingAEInvocationId*/

   8164  2 000711   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000712   000001 735000                    ALS     1
         2 000713   200100 631500                    EPPR1   TEMP,,AUTO
         2 000714   200010 451505                    STP1    ITEMLIST+1,AL,AUTO

   8197  2 000715   000024 236000 3                  LDQ     20
         2 000716   200007 756105                    STQ     ITEMLIST,AL,AUTO

   8204  2 000717   001201 701000 2                  TSX1    SCAN
         2 000720   001200 702000 2                  TSX2    SCANERR

     1140     8207    2               XSC$ASSOCIATE.RAEID = TEMP;

   8207  2 000721   200003 470500                    LDP0    @VBLK,,AUTO
         2 000722   000001 471500                    LDP1    1,,PR0
         2 000723   200100 235100                    LDA     TEMP,,AUTO
         2 000724   100013 755100                    STA     11,,PR1

     1141     8208                    %SCAN( LVL=2, TAG=C29, IMP=Y, TYP=GRFSTR, OPT=Y,
     1142     8209                            LEN=64, VAL=NIL);  /* ImplementationData */

   8292  2 000725   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000726   000001 735000                    ALS     1
         2 000727   000004 236000 3                  LDQ     4
         2 000730   200010 756105                    STQ     ITEMLIST+1,AL,AUTO

   8295  2 000731   000015 236000 3                  LDQ     13
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:234  
         2 000732   200007 756105                    STQ     ITEMLIST,AL,AUTO

   8302  2 000733   001201 701000 2                  TSX1    SCAN
         2 000734   001200 702000 2                  TSX2    SCANERR

     1143     8305    2               XSC$ASSOCIATE.CTXT$ = XSP$CONNECT.CTXT$;

   8305  2 000735   200003 470500                    LDP0    @VBLK,,AUTO
         2 000736   000001 471500                    LDP1    1,,PR0
         2 000737   200004 473500                    LDP3    @PFPT$,,AUTO
         2 000740   300000 474500                    LDP4    0,,PR3
         2 000741   400005 236100                    LDQ     5,,PR4
         2 000742   100015 756100                    STQ     13,,PR1

     1144     8306    2               INFOLVL = 2;

   8306  2 000743   000002 235007                    LDA     2,DL
         2 000744   200070 755100                    STA     INFOLVL,,AUTO
         2 000745   001130 710000 2                  TRA     s:8942

     1145     8307        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:235  
     1146     8308        /*****************************************************************************
     1147     8309        *
     1148     8310        *       PRELIND
     1149     8311        *
     1150     8312        *****************************************************************************/
     1151     8313    2           CASE( %XSP_FNC_PRELIND#);  /* should be an RLRQ APDU */

     1152     8314                    %SCAN( LVL=1, TAG=A2, IMP=Y, TYP=SEQ);  /* RLRQApdu */

   8400  2 000746   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000747   000001 735000                    ALS     1
         2 000750   142601 236007                    LDQ     50561,DL
         2 000751   200007 756105                    STQ     ITEMLIST,AL,AUTO

   8407  2 000752   001201 701000 2                  TSX1    SCAN
         2 000753   001200 702000 2                  TSX2    SCANERR

     1153     8410    2               VBLK.EVENT = %XSC_CEV_RLRQ;

   8410  2 000754   200003 470500                    LDP0    @VBLK,,AUTO
         2 000755   000004 236007                    LDQ     4,DL
         2 000756   000006 552104                    STBQ    6,'04'O,PR0

     1154     8411    2               XSC$RELEASE = XSC_RELEASE;

   8411  2 000757   000001 471500                    LDP1    1,,PR0
         2 000760   000100 100400                    MLR     fill='000'O
         2 000761   000000 000014 xsym               ADSC9   XSC_RELEASE              cn=0,n=12
         2 000762   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

     1155     8412    2               XSC$RELEASE.FNC = %XSC_FNC_ARELIND#;

   8412  2 000763   000001 471500                    LDP1    1,,PR0
         2 000764   006000 236003                    LDQ     3072,DU
         2 000765   100000 552140                    STBQ    0,'40'O,PR1

     1156     8413                    %SCAN( LVL=2, TAG=C0, IMP=Y, TYP=INTG, OPT=Y,
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:236  
     1157     8414                            LEN=4, VAL=TEMP);  /* Reason */

   8467  2 000766   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 000767   000001 735000                    ALS     1
         2 000770   200100 631500                    EPPR1   TEMP,,AUTO
         2 000771   200010 451505                    STP1    ITEMLIST+1,AL,AUTO

   8500  2 000772   000025 236000 3                  LDQ     21
         2 000773   200007 756105                    STQ     ITEMLIST,AL,AUTO

   8507  2 000774   001201 701000 2                  TSX1    SCAN
         2 000775   001200 702000 2                  TSX2    SCANERR

     1158     8510    2               XSC$RELEASE.REASON = TEMP;

   8510  2 000776   200003 470500                    LDP0    @VBLK,,AUTO
         2 000777   000001 471500                    LDP1    1,,PR0
         2 001000   200100 236100                    LDQ     TEMP,,AUTO
         2 001001   000011 736000                    QLS     9
         2 001002   100000 552110                    STBQ    0,'10'O,PR1

     1159     8511    2               INFOLVL = 2;

   8511  2 001003   000002 235007                    LDA     2,DL
         2 001004   200070 755100                    STA     INFOLVL,,AUTO
         2 001005   001130 710000 2                  TRA     s:8942

     1160     8512        /*****************************************************************************
     1161     8513        *
     1162     8514        *       PRELCNF
     1163     8515        *
     1164     8516        *****************************************************************************/
     1165     8517    2           CASE( %XSP_FNC_PRELCNF#);  /* should be an RLRE APDU */

     1166     8518                    %SCAN( LVL=1, TAG=A3, IMP=Y, TYP=SEQ);  /* RLREApdu */

   8604  2 001006   000000 235000 xsym               LDA     XSC_ITEMCNT
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:237  
         2 001007   000001 735000                    ALS     1
         2 001010   143601 236007                    LDQ     51073,DL
         2 001011   200007 756105                    STQ     ITEMLIST,AL,AUTO

   8611  2 001012   001201 701000 2                  TSX1    SCAN
         2 001013   001200 702000 2                  TSX2    SCANERR

     1167     8614    2               XSC$RELEASE = XSC_RELEASE;

   8614  2 001014   200003 470500                    LDP0    @VBLK,,AUTO
         2 001015   000001 471500                    LDP1    1,,PR0
         2 001016   000100 100400                    MLR     fill='000'O
         2 001017   000000 000014 xsym               ADSC9   XSC_RELEASE              cn=0,n=12
         2 001020   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

     1168     8615    2               XSC$RELEASE.FNC = %XSC_FNC_ARELCNF#;

   8615  2 001021   000001 471500                    LDP1    1,,PR0
         2 001022   010000 236003                    LDQ     4096,DU
         2 001023   100000 552140                    STBQ    0,'40'O,PR1

     1169     8616                    %SCAN( LVL=2, TAG=C0, IMP=Y, TYP=INTG, OPT=Y,
     1170     8617                            LEN=4, VAL=TEMP);  /* Reason */

   8670  2 001024   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 001025   000001 735000                    ALS     1
         2 001026   200100 631500                    EPPR1   TEMP,,AUTO
         2 001027   200010 451505                    STP1    ITEMLIST+1,AL,AUTO

   8703  2 001030   000025 236000 3                  LDQ     21
         2 001031   200007 756105                    STQ     ITEMLIST,AL,AUTO

   8710  2 001032   001201 701000 2                  TSX1    SCAN
         2 001033   001200 702000 2                  TSX2    SCANERR

     1171     8713    2               IF TEMP = %XSC_RELRSP_NORMAL# THEN

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:238  
   8713  2 001034   200100 235100                    LDA     TEMP,,AUTO
         2 001035   001042 601000 2                  TNZ     s:8716

     1172     8714    2                   VBLK.EVENT = %XSC_CEV_RLREP;

   8714  2 001036   200003 470500                    LDP0    @VBLK,,AUTO
         2 001037   000005 236007                    LDQ     5,DL
         2 001040   000006 552104                    STBQ    6,'04'O,PR0
         2 001041   001045 710000 2                  TRA     s:8717

     1173     8715    2               ELSE
     1174     8716    2                   VBLK.EVENT = %XSC_CEV_RLREN;

   8716  2 001042   200003 470500                    LDP0    @VBLK,,AUTO
         2 001043   000006 236007                    LDQ     6,DL
         2 001044   000006 552104                    STBQ    6,'04'O,PR0

     1175     8717    2               XSC$RELEASE.REASON = TEMP;

   8717  2 001045   000001 471500                    LDP1    1,,PR0
         2 001046   200100 236100                    LDQ     TEMP,,AUTO
         2 001047   000011 736000                    QLS     9
         2 001050   100000 552110                    STBQ    0,'10'O,PR1

     1176     8718    2               INFOLVL = 2;

   8718  2 001051   000002 235007                    LDA     2,DL
         2 001052   200070 755100                    STA     INFOLVL,,AUTO
         2 001053   001130 710000 2                  TRA     s:8942

     1177     8719        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:239  
     1178     8720        /*****************************************************************************
     1179     8721        *
     1180     8722        *       PUABIND
     1181     8723        *
     1182     8724        *****************************************************************************/
     1183     8725    2           CASE( %XSP_FNC_PUABIND#);  /* should be an ABRT APDU */

     1184     8726                    %SCAN( LVL=1, TAG=A4, IMP=Y, TYP=SEQ);  /* ABRTApdu */

   8812  2 001054   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 001055   000001 735000                    ALS     1
         2 001056   144601 236007                    LDQ     51585,DL
         2 001057   200007 756105                    STQ     ITEMLIST,AL,AUTO

   8819  2 001060   001201 701000 2                  TSX1    SCAN
         2 001061   001200 702000 2                  TSX2    SCANERR

     1185     8822    2               VBLK.EVENT = %XSC_CEV_ABRT;

   8822  2 001062   200003 470500                    LDP0    @VBLK,,AUTO
         2 001063   000007 236007                    LDQ     7,DL
         2 001064   000006 552104                    STBQ    6,'04'O,PR0

     1186     8823    2               XSC$U_ABORT = XSC_U_ABORT;

   8823  2 001065   000001 471500                    LDP1    1,,PR0
         2 001066   000100 100400                    MLR     fill='000'O
         2 001067   000000 000014 xsym               ADSC9   XSC_U_ABORT              cn=0,n=12
         2 001070   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

     1187     8824    2               XSC$U_ABORT.FNC = %XSC_FNC_AUABIND#;

   8824  2 001071   000001 471500                    LDP1    1,,PR0
         2 001072   012000 236003                    LDQ     5120,DU
         2 001073   100000 552140                    STBQ    0,'40'O,PR1

     1188     8825                    %SCAN( LVL=2, TAG=C0, IMP=Y, TYP=INTG,
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:240  
     1189     8826                            LEN=4, VAL=TEMP);  /* AbortSource */

   8879  2 001074   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 001075   000001 735000                    ALS     1
         2 001076   200100 631500                    EPPR1   TEMP,,AUTO
         2 001077   200010 451505                    STP1    ITEMLIST+1,AL,AUTO

   8912  2 001100   000026 236000 3                  LDQ     22
         2 001101   200007 756105                    STQ     ITEMLIST,AL,AUTO

   8919  2 001102   001201 701000 2                  TSX1    SCAN
         2 001103   001200 702000 2                  TSX2    SCANERR

     1190     8922    2               XSC$U_ABORT.ABRTSRC = TEMP;

   8922  2 001104   200003 470500                    LDP0    @VBLK,,AUTO
         2 001105   000001 471500                    LDP1    1,,PR0
         2 001106   200100 236100                    LDQ     TEMP,,AUTO
         2 001107   000011 736000                    QLS     9
         2 001110   100000 552110                    STBQ    0,'10'O,PR1

     1191     8923    2               INFOLVL = 2;

   8923  2 001111   000002 235007                    LDA     2,DL
         2 001112   200070 755100                    STA     INFOLVL,,AUTO
         2 001113   001130 710000 2                  TRA     s:8942

     1192     8924        /*****************************************************************************
     1193     8925        *
     1194     8926        *       PPABIND
     1195     8927        *
     1196     8928        *****************************************************************************/
     1197     8929    2           CASE( %XSP_FNC_PPABIND#);  /* no APDU for this event */

     1198     8930    2               VBLK.EVENT = %XSC_CEV_PPABIND;

   8930  2 001114   200003 473500                    LDP3    @VBLK,,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:241  
         2 001115   000013 236007                    LDQ     11,DL
         2 001116   300006 552104                    STBQ    6,'04'O,PR3

     1199     8931    2               XSC$P_ABORT = XSC_P_ABORT;

   8931  2 001117   300001 471500                    LDP1    1,,PR3
         2 001120   000100 100400                    MLR     fill='000'O
         2 001121   000000 000014 xsym               ADSC9   XSC_P_ABORT              cn=0,n=12
         2 001122   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

     1200     8932    2               XSC$P_ABORT.FNC = %XSC_FNC_APABIND#;

   8932  2 001123   300001 471500                    LDP1    1,,PR3
         2 001124   013000 236003                    LDQ     5632,DU
         2 001125   100000 552140                    STBQ    0,'40'O,PR1
         2 001126   001130 710000 2                  TRA     s:8942

     1201     8933        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:242  
     1202     8934        /*****************************************************************************
     1203     8935        *
     1204     8936        *       Illegal Presentation function -> error
     1205     8937        *
     1206     8938        *****************************************************************************/
     1207     8939    2           CASE( ELSE);

     1208     8940    2               GOTO SCANERR;

   8940  2 001127   001200 710000 2                  TRA     SCANERR

     1209     8941    2           END;

     1210     8942    2       IF INFOLVL > 0 AND ITEMCUR < ITEMNUM THEN DO;

   8942  2 001130   200070 235100                    LDA     INFOLVL,,AUTO
         2 001131   001177 604400 2                  TMOZ    s:9142
         2 001132   200071 236100                    LDQ     ITEMCUR,,AUTO
         2 001133   200072 116100                    CMPQ    ITEMNUM,,AUTO
         2 001134   001177 605000 2                  TPL     s:9142

     1211     8943               %SCAN( LVL=INFOLVL, TAG=C30, IMP=Y, TYP=SEQOF, OPT=Y); /* UserInformation */

   9029  2 001135   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 001136   000001 735000                    ALS     1
         2 001137   200070 236100                    LDQ     INFOLVL,,AUTO
         2 001140   676560 036007                    ADLQ    -33424,DL
         2 001141   200007 756105                    STQ     ITEMLIST,AL,AUTO

   9036  2 001142   001201 701000 2                  TSX1    SCAN
         2 001143   001200 702000 2                  TSX2    SCANERR

     1212     9039    3           DO WHILE( ITEMLIST.X.LVL( ITEMCUR) > INFOLVL);

   9039  2 001144   200071 235100                    LDA     ITEMCUR,,AUTO
         2 001145   000001 735000                    ALS     1
         2 001146   200007 236105                    LDQ     ITEMLIST,AL,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:243  
         2 001147   000007 376007                    ANQ     7,DL
         2 001150   200070 116100                    CMPQ    INFOLVL,,AUTO
         2 001151   001177 604400 2                  TMOZ    s:9142

     1213     9040                    /*N* this code assumes SEQOF one EXTRN item */
     1214     9041    3               INFOLVL = INFOLVL + 1;

   9041  2 001152   200070 054100                    AOS     INFOLVL,,AUTO

     1215     9042                    %SCAN( LVL=INFOLVL, TYP=EXTRN,
     1216     9043                            LEN=262143, VAL=NIL);

   9126  2 001153   000000 235000 xsym               LDA     XSC_ITEMCNT
         2 001154   000001 735000                    ALS     1
         2 001155   000004 236000 3                  LDQ     4
         2 001156   200010 756105                    STQ     ITEMLIST+1,AL,AUTO

   9129  2 001157   777777 236007                    LDQ     -1,DL
         2 001160   000000 620005                    EAX0    0,AL
         2 001161   000001 402003                    MPY     1,DU
         2 001162   200070 036100                    ADLQ    INFOLVL,,AUTO
         2 001163   010100 036007                    ADLQ    4160,DL
         2 001164   200007 756110                    STQ     ITEMLIST,X0,AUTO

   9136  2 001165   001201 701000 2                  TSX1    SCAN
         2 001166   001200 702000 2                  TSX2    SCANERR

     1217     9139    3               INFOLVL = INFOLVL - 1;

   9139  2 001167   000001 336007                    LCQ     1,DL
         2 001170   200070 056100                    ASQ     INFOLVL,,AUTO

     1218     9140    3               END;

   9140  2 001171   200071 235100                    LDA     ITEMCUR,,AUTO
         2 001172   000001 735000                    ALS     1
         2 001173   200007 236105                    LDQ     ITEMLIST,AL,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:244  
         2 001174   000007 376007                    ANQ     7,DL
         2 001175   200070 116100                    CMPQ    INFOLVL,,AUTO
         2 001176   001152 605400 2                  TPNZ    s:9041

     1219     9141    2           END;

     1220     9142    1       RETURN;

   9142  2 001177   000000 702200 xent               TSX2  ! X66_ARET

     1221     9143    1   SCANERR:
     1222     9144            /* An error occurred while decoding the APDU */
     1223     9145    1       ALTRETURN;

   9145  2 001200   000000 702200 xent  SCANERR      TSX2  ! X66_AALT

     1224     9146        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:245  
     1225     9147        /*I*    NAME:   SCAN
     1226     9148
     1227     9149                SCAN is called for each item of the APDU expected to be seen.  The
     1228     9150                contents of SCANITEM are compared with the current item.  If they
     1229     9151                match, the associated value is moved from the current item to the
     1230     9152                VAL field indicated in SCANITEM.  Otherwise, heuristics are used to
     1231     9153                figure out if the APDU is in error or we need to skip over optional
     1232     9154                items not supplied in the APDU.
     1233     9155        */
     1234     9156    1   SCAN: PROC ALTRET;

   9156  2 001201   200112 741300       SCAN         STX1  ! INITLEN+5,,AUTO

     1235     9157
     1236     9158    2       IF ITEMCUR > ITEMNUM THEN

   9158  2 001202   200071 236100                    LDQ     ITEMCUR,,AUTO
         2 001203   200072 116100                    CMPQ    ITEMNUM,,AUTO
         2 001204   001206 604400 2                  TMOZ    s:9161

     1237     9159                /* fell off the end of the APDU */
     1238     9160    2           ALTRETURN;

   9160  2 001205   000000 702211                    TSX2  ! 0,X1

     1239     9161    2       TEMP = 0;

   9161  2 001206   200100 450100                    STZ     TEMP,,AUTO

     1240     9162    2       BTMP = '000000000000'O;

   9162  2 001207   000001 236000 1                  LDQ     TWOZEROES+1
         2 001210   200064 756100                    STQ     BTMP,,AUTO

     1241     9163            /* compare LVLs */
     1242     9164    2       IF ITEMLIST.X.LVL( ITEMCUR) < SCANITEM.X.LVL THEN

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:246  
   9164  2 001211   200005 236100                    LDQ     SCANITEM,,AUTO
         2 001212   000007 376007                    ANQ     7,DL
         2 001213   200114 756100                    STQ     INITLEN+7,,AUTO
         2 001214   200071 235100                    LDA     ITEMCUR,,AUTO
         2 001215   000001 735000                    ALS     1
         2 001216   200007 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001217   000007 376007                    ANQ     7,DL
         2 001220   200114 116100                    CMPQ    INITLEN+7,,AUTO
         2 001221   001223 605000 2                  TPL     s:9166

     1243     9165    2           RETURN;  /* skip ahead in order to resynchronize levels */

   9165  2 001222   000001 702211                    TSX2  ! 1,X1

     1244     9166    3       IF ITEMLIST.X.LVL( ITEMCUR) = SCANITEM.X.LVL THEN DO;

   9166  2 001223   200007 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001224   200005 676100                    ERQ     SCANITEM,,AUTO
         2 001225   000007 376007                    ANQ     7,DL
         2 001226   001556 601000 2                  TNZ     s:9268

     1245     9167                /* compare TAGs */
     1246     9168    4           IF ITEMLIST.X.TAG( ITEMCUR) = SCANITEM.X.TAG THEN DO;

   9168  2 001227   200007 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001230   200005 676100                    ERQ     SCANITEM,,AUTO
         2 001231   377000 376007                    ANQ     130560,DL
         2 001232   001550 601000 2                  TNZ     s:9261

     1247     9169                    /* O.K. We have a match!  Now we move the value part of the
     1248     9170                       matched tag-length-value item to the given buffer. */
     1249     9171    5               DO CASE( SCANITEM.X.TYP);

   9171  2 001233   200005 236100                    LDQ     SCANITEM,,AUTO
         2 001234   000003 772000                    QRL     3
         2 001235   000037 376007                    ANQ     31,DL
         2 001236   000034 116007                    CMPQ    28,DL
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:247  
         2 001237   001241 602006 2                  TNC     s:9171+6,QL
         2 001240   001546 710000 2                  TRA     s:9257
         2 001241   001547 710000 2                  TRA     s:9259
         2 001242   001275 710000 2                  TRA     s:9182
         2 001243   001335 710000 2                  TRA     s:9194
         2 001244   001404 710000 2                  TRA     s:9206
         2 001245   001467 710000 2                  TRA     s:9233
         2 001246   001547 710000 2                  TRA     s:9259
         2 001247   001527 710000 2                  TRA     s:9248
         2 001250   001527 710000 2                  TRA     s:9248
         2 001251   001547 710000 2                  TRA     s:9259
         2 001252   001546 710000 2                  TRA     s:9257
         2 001253   001546 710000 2                  TRA     s:9257
         2 001254   001546 710000 2                  TRA     s:9257
         2 001255   001467 710000 2                  TRA     s:9233
         2 001256   001547 710000 2                  TRA     s:9259
         2 001257   001547 710000 2                  TRA     s:9259
         2 001260   001547 710000 2                  TRA     s:9259
         2 001261   001547 710000 2                  TRA     s:9259
         2 001262   001547 710000 2                  TRA     s:9259
         2 001263   001467 710000 2                  TRA     s:9233
         2 001264   001467 710000 2                  TRA     s:9233
         2 001265   001467 710000 2                  TRA     s:9233
         2 001266   001467 710000 2                  TRA     s:9233
         2 001267   001467 710000 2                  TRA     s:9233
         2 001270   001547 710000 2                  TRA     s:9259
         2 001271   001547 710000 2                  TRA     s:9259
         2 001272   001467 710000 2                  TRA     s:9233
         2 001273   001467 710000 2                  TRA     s:9233
         2 001274   001467 710000 2                  TRA     s:9233

     1250     9172    5                   CASE( %XSC_TYP_NONE,

     1251     9173    5                         %XSC_TYP_NULL,
     1252     9174    5                         %XSC_TYP_EXTRN,
     1253     9175    5                         %XSC_TYP_SEQ,
     1254     9176    5                         %XSC_TYP_SET,
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:248  
     1255     9177    5                         %XSC_TYP_SEQOF,
     1256     9178    5                         %XSC_TYP_SETOF,
     1257     9179    5                         %XSC_TYP_CHOICE);
     1258     9180    5                       ;  /* no need to do anything for these types */
     1259     9181    5                   CASE( %XSC_TYP_BOOL);

     1260     9182    5                       SRCLEN = ITEMLIST.X.LEN( ITEMCUR);

   9182  2 001275   200007 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001276   000022 772000                    QRL     18
         2 001277   200076 756100                    STQ     SRCLEN,,AUTO

     1261     9183    5                       DSTLEN = SCANITEM.X.LEN;

   9183  2 001300   200005 235100                    LDA     SCANITEM,,AUTO
         2 001301   000022 771000                    ARL     18
         2 001302   200066 755100                    STA     DSTLEN,,AUTO

     1262     9184    5                       IF SRCLEN > DSTLEN THEN

   9184  2 001303   200066 116100                    CMPQ    DSTLEN,,AUTO
         2 001304   001306 604400 2                  TMOZ    s:9186

     1263     9185    5                           ALTRETURN;  /* source is too long for buffer */

   9185  2 001305   000000 702211                    TSX2  ! 0,X1

     1264     9186    5                       SRC$ = ITEMLIST.P( ITEMCUR);

   9186  2 001306   200071 235100                    LDA     ITEMCUR,,AUTO
         2 001307   000001 735000                    ALS     1
         2 001310   200010 236105                    LDQ     ITEMLIST+1,AL,AUTO
         2 001311   200075 756100                    STQ     SRC$,,AUTO

     1265     9187    5                       BDST$ = SCANITEM.P;

   9187  2 001312   200006 236100                    LDQ     SCANITEM+1,,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:249  
         2 001313   200063 756100                    STQ     BDST$,,AUTO

     1266     9188    5                       TEMP = ASCBIN( SUBSTR( SRC$->SRCBYTES, 0, 1));

   9188  2 001314   200075 470500                    LDP0    SRC$,,AUTO
         2 001315   000100 101500                    MRL     fill='000'O
         2 001316   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 001317   200114 000004                    ADSC9   INITLEN+7,,AUTO          cn=0,n=4
         2 001320   200114 236100                    LDQ     INITLEN+7,,AUTO
         2 001321   200100 756100                    STQ     TEMP,,AUTO

     1267     9189    5                       IF TEMP = 0 THEN

   9189  2 001322   001330 601000 2                  TNZ     s:9192

     1268     9190    5                           BDST$->BIT1 = '0'B;

   9190  2 001323   200063 471500                    LDP1    BDST$,,AUTO
         2 001324   003100 060400                    CSL     bolr='003'O
         2 001325   000000 000001 3                  BDSC    0                        by=0,bit=0,n=1
         2 001326   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1
         2 001327   001547 710000 2                  TRA     s:9259

     1269     9191    5                       ELSE
     1270     9192    5                           BDST$->BIT1 = '1'B;

   9192  2 001330   200063 471500                    LDP1    BDST$,,AUTO
         2 001331   003100 060400                    CSL     bolr='003'O
         2 001332   000027 000001 3                  BDSC    23                       by=0,bit=0,n=1
         2 001333   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1
         2 001334   001547 710000 2                  TRA     s:9259

     1271     9193    5                   CASE( %XSC_TYP_INTG);

     1272     9194    5                       SRCLEN = ITEMLIST.X.LEN( ITEMCUR);

   9194  2 001335   200007 236105                    LDQ     ITEMLIST,AL,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:250  
         2 001336   000022 772000                    QRL     18
         2 001337   200076 756100                    STQ     SRCLEN,,AUTO

     1273     9195    5                       DSTLEN = SCANITEM.X.LEN;

   9195  2 001340   200005 235100                    LDA     SCANITEM,,AUTO
         2 001341   000022 771000                    ARL     18
         2 001342   200066 755100                    STA     DSTLEN,,AUTO

     1274     9196    5                       IF SRCLEN > DSTLEN THEN

   9196  2 001343   200066 116100                    CMPQ    DSTLEN,,AUTO
         2 001344   001346 604400 2                  TMOZ    s:9198

     1275     9197    5                           ALTRETURN;  /* source is too long for buffer */

   9197  2 001345   000000 702211                    TSX2  ! 0,X1

     1276     9198    5                       BSRC$ = ITEMLIST.P( ITEMCUR);

   9198  2 001346   200071 235100                    LDA     ITEMCUR,,AUTO
         2 001347   000001 735000                    ALS     1
         2 001350   200010 236105                    LDQ     ITEMLIST+1,AL,AUTO
         2 001351   200062 756100                    STQ     BSRC$,,AUTO

     1277     9199    5                       BDST$ = PINCRB( SCANITEM.P, 4 + 8*(4-SRCLEN));

   9199  2 001352   200006 470500                    LDP0    SCANITEM+1,,AUTO
         2 001353   200076 335100                    LCA     SRCLEN,,AUTO
         2 001354   000003 735000                    ALS     3
         2 001355   001357 605000 2                  TPL     s:9199+5
         2 001356   000044 035003                    ADLA    36,DU
         2 001357   000001 503505                    ABD     1,AL,PR0
         2 001360   200063 450500                    STP0    BDST$,,AUTO

     1278     9200    6                       DO I = 1 TO SRCLEN;

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:251  
   9200  2 001361   000001 235007                    LDA     1,DL
         2 001362   200067 755100                    STA     I,,AUTO
         2 001363   001400 710000 2                  TRA     s:9204+1

     1279     9201    6                           BDST$->BIT8 = PINCRB( BSRC$, 1)->BIT8;

   9201  2 001364   200062 470500                    LDP0    BSRC$,,AUTO
         2 001365   200063 471500                    LDP1    BDST$,,AUTO
         2 001366   003100 060500                    CSL     bolr='003'O
         2 001367   000000 010010                    BDSC    0,,PR0                   by=0,bit=1,n=8
         2 001370   100000 000010                    BDSC    0,,PR1                   by=0,bit=0,n=8

     1280     9202    6                           BDST$ = PINCRB( BDST$, 8);

   9202  2 001371   000010 220003                    LDX0    8,DU
         2 001372   100000 503510                    ABD     0,X0,PR1
         2 001373   200063 451500                    STP1    BDST$,,AUTO

     1281     9203    6                           BSRC$ = PINCRC( BSRC$, 1);

   9203  2 001374   200062 236100                    LDQ     BSRC$,,AUTO
         2 001375   200000 036007                    ADLQ    65536,DL
         2 001376   200062 756100                    STQ     BSRC$,,AUTO

     1282     9204    6                           END;

   9204  2 001377   200067 054100                    AOS     I,,AUTO
         2 001400   200067 236100                    LDQ     I,,AUTO
         2 001401   200076 116100                    CMPQ    SRCLEN,,AUTO
         2 001402   001364 604400 2                  TMOZ    s:9201
         2 001403   001547 710000 2                  TRA     s:9259

     1283     9205    5                   CASE( %XSC_TYP_BITSTR);

     1284     9206    5                       SRC$ = ITEMLIST.P( ITEMCUR);

   9206  2 001404   200010 236105                    LDQ     ITEMLIST+1,AL,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:252  
         2 001405   200075 756100                    STQ     SRC$,,AUTO

     1285     9207    5                       TEMP = ASCBIN( SUBSTR( SRC$->SRCBYTES, 0, 1)); /* slack */

   9207  2 001406   200075 470500                    LDP0    SRC$,,AUTO
         2 001407   000100 101500                    MRL     fill='000'O
         2 001410   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 001411   200114 000004                    ADSC9   INITLEN+7,,AUTO          cn=0,n=4
         2 001412   200114 236100                    LDQ     INITLEN+7,,AUTO
         2 001413   200100 756100                    STQ     TEMP,,AUTO

     1286     9208    5                       SRCLEN = ITEMLIST.X.LEN( ITEMCUR);  /* byte-length */

   9208  2 001414   200007 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001415   000022 772000                    QRL     18
         2 001416   200076 756100                    STQ     SRCLEN,,AUTO

     1287     9209    5                       SRCLEN = ( 8-TEMP) + ( SRCLEN-2)*8;  /* bit-length */

   9209  2 001417   000003 736000                    QLS     3
         2 001420   000001 676000 3                  ERQ     1
         2 001421   000001 036007                    ADLQ    1,DL
         2 001422   200100 036100                    ADLQ    TEMP,,AUTO
         2 001423   000001 676000 3                  ERQ     1
         2 001424   000007 136007                    SBLQ    7,DL
         2 001425   200076 756100                    STQ     SRCLEN,,AUTO

     1288     9210    5                       DSTLEN = SCANITEM.X.LEN;

   9210  2 001426   200005 235100                    LDA     SCANITEM,,AUTO
         2 001427   000022 771000                    ARL     18
         2 001430   200066 755100                    STA     DSTLEN,,AUTO

     1289     9211                            /* NOTE: SRCLEN AND DSTLEN CONTAIN LENGTHS IN *BITS* */
     1290     9212    5                       IF SRCLEN > DSTLEN THEN

   9212  2 001431   200066 116100                    CMPQ    DSTLEN,,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:253  
         2 001432   001434 604400 2                  TMOZ    s:9215

     1291     9213    5                           ALTRETURN;  /* source is too long for buffer */

   9213  2 001433   000000 702211                    TSX2  ! 0,X1

     1292     9214                            /* move octets from source to destination */
     1293     9215    5                       BSRC$ = SRC$;

   9215  2 001434   200075 236100                    LDQ     SRC$,,AUTO
         2 001435   200062 756100                    STQ     BSRC$,,AUTO

     1294     9216    5                       BDST$ = SCANITEM.P;

   9216  2 001436   200006 236100                    LDQ     SCANITEM+1,,AUTO
         2 001437   200063 756100                    STQ     BDST$,,AUTO

     1295     9217    5                       TEMP = ( DSTLEN + 8) / 9;

   9217  2 001440   200066 236100                    LDQ     DSTLEN,,AUTO
         2 001441   000010 036007                    ADLQ    8,DL
         2 001442   000011 506007                    DIV     9,DL
         2 001443   200100 756100                    STQ     TEMP,,AUTO

     1296     9218    6                       DO I = 1 TO TEMP;

   9218  2 001444   000001 235007                    LDA     1,DL
         2 001445   200067 755100                    STA     I,,AUTO
         2 001446   001463 710000 2                  TRA     s:9222+1

     1297     9219    6                           BSRC$ = PINCRC( BSRC$, 1);

   9219  2 001447   200062 236100                    LDQ     BSRC$,,AUTO
         2 001450   200000 036007                    ADLQ    65536,DL
         2 001451   200062 756100                    STQ     BSRC$,,AUTO

     1298     9220    6                           BDST$->BIT8 = PINCRB( BSRC$, 1)->BIT8;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:254  

   9220  2 001452   200062 470500                    LDP0    BSRC$,,AUTO
         2 001453   200063 471500                    LDP1    BDST$,,AUTO
         2 001454   003100 060500                    CSL     bolr='003'O
         2 001455   000000 010010                    BDSC    0,,PR0                   by=0,bit=1,n=8
         2 001456   100000 000010                    BDSC    0,,PR1                   by=0,bit=0,n=8

     1299     9221    6                           BDST$ = PINCRB( BDST$, 8);

   9221  2 001457   000010 220003                    LDX0    8,DU
         2 001460   100000 503510                    ABD     0,X0,PR1
         2 001461   200063 451500                    STP1    BDST$,,AUTO

     1300     9222    6                           END;

   9222  2 001462   200067 054100                    AOS     I,,AUTO
         2 001463   200067 236100                    LDQ     I,,AUTO
         2 001464   200100 116100                    CMPQ    TEMP,,AUTO
         2 001465   001447 604400 2                  TMOZ    s:9219
         2 001466   001547 710000 2                  TRA     s:9259

     1301     9223    5                   CASE( %XSC_TYP_OCTETSTR,

     1302     9224    5                         %XSC_TYP_NUMSTR,
     1303     9225    5                         %XSC_TYP_PRNTSTR,
     1304     9226    5                         %XSC_TYP_TELSTR,
     1305     9227    5                         %XSC_TYP_VIDSTR,
     1306     9228    5                         %XSC_TYP_IA5STR,
     1307     9229    5                         %XSC_TYP_GRFSTR,
     1308     9230    5                         %XSC_TYP_VISSTR /* == %XSC_TYP_ISO646STR */,
     1309     9231    5                         %XSC_TYP_GENSTR,
     1310     9232    5                         %XSC_TYP_ANY);  /* treat ANY like a bytestring */
     1311     9233    5                       SRCLEN = ITEMLIST.X.LEN( ITEMCUR);

   9233  2 001467   200007 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001470   000022 772000                    QRL     18
         2 001471   200076 756100                    STQ     SRCLEN,,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:255  

     1312     9234    5                       DSTLEN = SCANITEM.X.LEN;

   9234  2 001472   200005 235100                    LDA     SCANITEM,,AUTO
         2 001473   000022 771000                    ARL     18
         2 001474   200066 755100                    STA     DSTLEN,,AUTO

     1313     9235    5                       IF SRCLEN > DSTLEN THEN

   9235  2 001475   200066 116100                    CMPQ    DSTLEN,,AUTO
         2 001476   001500 604400 2                  TMOZ    s:9237

     1314     9236    5                           ALTRETURN;  /* source is too long for buffer */

   9236  2 001477   000000 702211                    TSX2  ! 0,X1

     1315     9237    5                       DSTLEN = MINIMUM( DSTLEN, SRCLEN);

   9237  2 001500   001502 604400 2                  TMOZ    s:9237+2
         2 001501   200066 236100                    LDQ     DSTLEN,,AUTO
         2 001502   200066 756100                    STQ     DSTLEN,,AUTO

     1316     9238    6                       IF SCANITEM.P = ADDR( NIL) THEN DO;

   9238  2 001503   200006 236100                    LDQ     SCANITEM+1,,AUTO
         2 001504   000004 116000 3                  CMPQ    4
         2 001505   001515 601000 2                  TNZ     s:9244

     1317     9239                                /* don't copy data; just point at it in the APDU */
     1318     9240    6                           SCANITEM.P = ITEMLIST.P( ITEMCUR);

   9240  2 001506   200071 235100                    LDA     ITEMCUR,,AUTO
         2 001507   000001 735000                    ALS     1
         2 001510   200010 236105                    LDQ     ITEMLIST+1,AL,AUTO
         2 001511   200006 756100                    STQ     SCANITEM+1,,AUTO

     1319     9241    6                           SCANITEM.X.LEN = DSTLEN;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:256  

   9241  2 001512   200066 720100                    LXL0    DSTLEN,,AUTO
         2 001513   200005 740100                    STX0    SCANITEM,,AUTO

     1320     9242    6                           END;

   9242  2 001514   001547 710000 2                  TRA     s:9259

     1321     9243    5                       ELSE
     1322     9244    5                           SCANITEM.P->DSTBYTES = ITEMLIST.P( ITEMCUR)->SRCBYTES;

   9244  2 001515   200071 235100                    LDA     ITEMCUR,,AUTO
         2 001516   000001 735000                    ALS     1
         2 001517   200010 470505                    LDP0    ITEMLIST+1,AL,AUTO
         2 001520   200076 720100                    LXL0    SRCLEN,,AUTO
         2 001521   200006 471500                    LDP1    SCANITEM+1,,AUTO
         2 001522   200066 722100                    LXL2    DSTLEN,,AUTO
         2 001523   040140 100540                    MLR     fill='040'O
         2 001524   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 001525   100000 000012                    ADSC9   0,,PR1                   cn=0,n=*X2
         2 001526   001547 710000 2                  TRA     s:9259

     1323     9245    5                   CASE( %XSC_TYP_OBJID,

     1324     9246    5                         %XSC_TYP_OBJDSCR);
     1325     9247                            /*N* convert encoding to num-num-num form */
     1326     9248    5                       SRCLEN = ITEMLIST.X.LEN( ITEMCUR);

   9248  2 001527   200007 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001530   000022 772000                    QRL     18
         2 001531   200076 756100                    STQ     SRCLEN,,AUTO

     1327     9249    5                       SCANITEM.P = PINCRC( SCANITEM.P, -2);

   9249  2 001532   200006 236100                    LDQ     SCANITEM+1,,AUTO
         2 001533   000030 036000 3                  ADLQ    24
         2 001534   200006 756100                    STQ     SCANITEM+1,,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:257  

     1328     9250    5                       SCANITEM.P->CTXT.LEN = SRCLEN;

   9250  2 001535   200076 720100                    LXL0    SRCLEN,,AUTO
         2 001536   200006 470500                    LDP0    SCANITEM+1,,AUTO
         2 001537   000000 740100                    STX0    0,,PR0

     1329     9251    5                       SCANITEM.P->CTXT.TXT = ITEMLIST.P( ITEMCUR)->SRCBYTES;

   9251  2 001540   200010 471505                    LDP1    ITEMLIST+1,AL,AUTO
         2 001541   200076 721100                    LXL1    SRCLEN,,AUTO
         2 001542   040140 100540                    MLR     fill='040'O
         2 001543   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         2 001544   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         2 001545   001547 710000 2                  TRA     s:9259

     1330     9252    5                   CASE( %XSC_TYP_UTCTIM,

     1331     9253    5                         %XSC_TYP_GENTIM);
     1332     9254                            /*N* convert encoding to UTS value, someday */
     1333     9255    5                   CASE( ELSE);

     1334     9256                            /* bad SCANITEM.TYP */
     1335     9257    5                       ALTRETURN;

   9257  2 001546   000000 702211                    TSX2  ! 0,X1

     1336     9258    5                   END;

     1337     9259    4               GOTO RET;

   9259  2 001547   001557 710000 2                  TRA     RET

     1338     9260    4               END;
     1339     9261    3           IF SCANITEM.X.OPT = 1 THEN

   9261  2 001550   200005 236100                    LDQ     SCANITEM,,AUTO
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:258  
         2 001551   400000 376007                    ANQ     -131072,DL
         2 001552   400000 116007                    CMPQ    -131072,DL
         2 001553   001555 601000 2                  TNZ     s:9265

     1340     9262                    /* looks like this optional item is not present */
     1341     9263    3               RETURN;

   9263  2 001554   000001 702211                    TSX2  ! 1,X1

     1342     9264                /* this required item is not present */
     1343     9265    3           ALTRETURN;

   9265  2 001555   000000 702211                    TSX2  ! 0,X1

     1344     9266    3           END;
     1345     9267            /* something's wrong with the heuristics */
     1346     9268    2       ALTRETURN;

   9268  2 001556   000000 702211                    TSX2  ! 0,X1

     1347     9269    2   RET:
     1348     9270    2       ITEMCUR = ITEMCUR + 1;

   9270  2 001557   200071 054100       RET          AOS     ITEMCUR,,AUTO

     1349     9271    2       RETURN;

   9271  2 001560   200112 221300                    LDX1  ! INITLEN+5,,AUTO
         2 001561   000001 702211                    TSX2  ! 1,X1

     1350     9272
     1351     9273    2       END SCAN;
     1352     9274        %EJECT;
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:259  
     1353     9275        /*I*    NAME:   GETLEN
     1354     9276
     1355     9277                GETLEN is called to extract the length of the next item of the PDU.
     1356     9278                It handles both forms of definite length as well as indefinite length.
     1357     9279                The various PDU scan pointers are updated.  The length is stored in
     1358     9280                TEMP for use by the main code.
     1359     9281        */
     1360     9282    1   GETLEN: PROC;

   9282  2 001562   200112 741300       GETLEN       STX1  ! INITLEN+5,,AUTO

     1361     9283
     1362     9284    2       TEMP = ASCBIN( SUBSTR( PDU, PDUIDX, 1));

   9284  2 001563   200073 470500                    LDP0    PDU$,,AUTO
         2 001564   200074 235100                    LDA     PDUIDX,,AUTO
         2 001565   000100 101505                    MRL     fill='000'O
         2 001566   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         2 001567   200114 000004                    ADSC9   INITLEN+7,,AUTO          cn=0,n=4
         2 001570   200114 236100                    LDQ     INITLEN+7,,AUTO
         2 001571   200100 756100                    STQ     TEMP,,AUTO

     1363     9285    2       PDUIDX = PDUIDX + 1;

   9285  2 001572   200074 054100                    AOS     PDUIDX,,AUTO

     1364     9286    2       CURRLEN( DEPTH) = CURRLEN( DEPTH) - 1;

   9286  2 001573   200065 720100                    LXL0    DEPTH,,AUTO
         2 001574   000001 336007                    LCQ     1,DL
         2 001575   200101 056110                    ASQ     CURRLEN,X0,AUTO

     1365     9287    3       IF TEMP = 128 THEN DO;

   9287  2 001576   200100 235100                    LDA     TEMP,,AUTO
         2 001577   000200 115007                    CMPA    128,DL
         2 001600   001603 601000 2                  TNZ     s:9292
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:260  

     1366     9288                /* indefinite form */
     1367     9289    3           TEMP = -1;

   9289  2 001601   200100 756100                    STQ     TEMP,,AUTO

     1368     9290    3           RETURN;

   9290  2 001602   000001 702211                    TSX2  ! 1,X1

     1369     9291    3           END;
     1370     9292    3       IF TEMP > 128 THEN DO;

   9292  2 001603   001633 604400 2                  TMOZ    s:9303

     1371     9293                /* long form */
     1372     9294    3           I = TEMP - 128;

   9294  2 001604   000200 135007                    SBLA    128,DL
         2 001605   200067 755100                    STA     I,,AUTO

     1373     9295    3           CURRLEN( DEPTH) = CURRLEN( DEPTH) - I;

   9295  2 001606   200101 236110                    LDQ     CURRLEN,X0,AUTO
         2 001607   200067 136100                    SBLQ    I,,AUTO
         2 001610   200101 756110                    STQ     CURRLEN,X0,AUTO

     1374     9296    3           TEMP = 0;

   9296  2 001611   200100 450100                    STZ     TEMP,,AUTO

     1375     9297    4           DO WHILE( I > 0);

   9297  2 001612   000000 115003                    CMPA    0,DU
         2 001613   001633 604400 2                  TMOZ    s:9303

     1376     9298    4               TEMP = TEMP*256 + ASCBIN( SUBSTR( PDU, PDUIDX, 1));
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:261  

   9298  2 001614   200073 470500                    LDP0    PDU$,,AUTO
         2 001615   200074 235100                    LDA     PDUIDX,,AUTO
         2 001616   000100 101505                    MRL     fill='000'O
         2 001617   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
         2 001620   200114 000004                    ADSC9   INITLEN+7,,AUTO          cn=0,n=4
         2 001621   200114 236100                    LDQ     INITLEN+7,,AUTO
         2 001622   200115 756100                    STQ     INITLEN+8,,AUTO
         2 001623   200100 236100                    LDQ     TEMP,,AUTO
         2 001624   000010 736000                    QLS     8
         2 001625   200115 036100                    ADLQ    INITLEN+8,,AUTO
         2 001626   200100 756100                    STQ     TEMP,,AUTO

     1377     9299    4               PDUIDX = PDUIDX + 1;

   9299  2 001627   200074 054100                    AOS     PDUIDX,,AUTO

     1378     9300    4               I = I - 1;

   9300  2 001630   000001 336007                    LCQ     1,DL
         2 001631   200067 056100                    ASQ     I,,AUTO

     1379     9301    4               END;

   9301  2 001632   001614 605400 2                  TPNZ    s:9298

     1380     9302    3           END;

     1381     9303    2       RETURN;

   9303  2 001633   200112 221300                    LDX1  ! INITLEN+5,,AUTO
         2 001634   000001 702211                    TSX2  ! 1,X1

ACN
 Sect OctLoc
   0     000   000026 047056   056056 056056   056056 056056   056056 056056    ..'.............
   0     004   056056 056056   056056 056047                                    .......'
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:262  

TWOZEROES
 Sect OctLoc
   1     000   000000 ******                                                    ....

(unnamed)
 Sect OctLoc
   1     001   000000 000000                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000000 000000   777777 777777   000000 006000   000001 600432    ................
   3     004   000000 006014   000100 602142   000100 603142   000004 604022    .....@.b.@.b....
   3     010   000004 605022   000100 606142   000100 607142   000004 610022    .....@.b.@.b....
   3     014   000004 611022   000100 635712   000004 202022   000004 201023    .....@..........
   3     020   000004 202023   000100 604142   000100 605142   000004 606022    .....@.b.@.b....
   3     024   000004 607022   000004 600422   000004 200422   400000 000000    ................
   3     030   777777 400000                                                    ....
     1382     9304
     1383     9305    2       END GETLEN;
     1384     9306
     1385     9307    1       END XSC$DECODE;
     1386     9308        %EOD;

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:263  
--  Include file information  --

   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSC$DECODE.
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:264  

 **** Variables and constants ****

  ****  Section 000  Data  XSC$DECODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(216)   r     1 ACN

  ****  Section 001 RoData XSC$DECODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(18)    r     1 TWOZEROES

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PFPT$                     3-0-0/w PTR         r     1 @VBLK
    61-0-0/w PTR         r     1 ACN$                      63-0-0/b PTR         r     1 BDST$
    62-0-0/b PTR         r     1 BSRC$                     64-0-0/b BIT         r     1 BTMP
   101-0-0/w SBIN        r     1 CURRLEN(0:3)
    65-0-0/w SBIN        r     1 DEPTH                     66-0-0/w SBIN        r     1 DSTLEN
    67-0-0/w SBIN        r     1 I                         70-0-0/w SBIN        r     1 INFOLVL
   105-0-0/w SBIN        r     1 INITLEN(0:3)
    71-0-0/w SBIN        r     1 ITEMCUR
     7-0-0/w STRC(72)    r     1 ITEMLIST(0:20)
    72-0-0/w SBIN        r     1 ITEMNUM                   73-0-0/c PTR         r     1 PDU$
    74-0-0/w SBIN        r     1 PDUIDX                    *0-0-0/w PTR         r     1 PFPT$
     5-0-0/w STRC(72)    r     1 SCANITEM                  75-0-0/c PTR         r     1 SRC$
    76-0-0/w SBIN        r     1 SRCLEN                    77-0-0/w SBIN        r     1 TAG
    77-0-0/w STRC        r     1 TAGX                     100-0-0/w SBIN        r     1 TEMP
    *0-0-0/w STRC(252)   r     1 VBLK

PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:265  
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(504)   r     1 XSC_ASSOCIATE              0-0-0/w SBIN        r     1 XSC_ITEMCNT
     0-0-0/w STRC(108)   r     1 XSC_P_ABORT                0-0-0/w STRC(108)   r     1 XSC_RELEASE
     0-0-0/w STRC(108)   r     1 XSC_U_ABORT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 BIT1                       0-0-0/b BIT (8)     r     1 BIT8
     0-0-0/w ASTR(18)    r     1 CTXT                       0-0-0/c ACHR        r     1 DSTBYTES
     0-0-0/c CHAR(16384) r     1 PDU                        0-0-0/c ACHR        r     1 SRCBYTES
     0-0-0/w STRC(504)   r     1 XSC$ASSOCIATE              0-0-0/w STRC(108)   r     1 XSC$P_ABORT
     0-0-0/w STRC(108)   r     1 XSC$RELEASE                0-0-0/w STRC(108)   r     1 XSC$U_ABORT
     0-0-0/w STRC(398)   r     1 XSP$CONNECT                0-0-0/w STRC(504)   r     1 XSP$GENERIC


   Procedure XSC$DECODE requires 925 words for executable code.
   Procedure XSC$DECODE requires 78 words of local(AUTO) storage.
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:266  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:267  
          MINI XREF LISTING

ACN
      3924**DCL      5834--ASSIGN
ACN$
      5737**DCL      5834<<ASSIGN   6216>>ASSIGN   6228>>ASSIGN   7396>>ASSIGN   7408>>ASSIGN
BDST$
      5739**DCL      9187<<ASSIGN   9190>>ASSIGN   9192>>ASSIGN   9199<<ASSIGN   9201>>ASSIGN   9202<<ASSIGN
      9202>>ASSIGN   9216<<ASSIGN   9220>>ASSIGN   9221<<ASSIGN   9221>>ASSIGN
BIT1
      5740**DCL      9190<<ASSIGN   9192<<ASSIGN
BIT8
      5741**DCL      9201<<ASSIGN   9201>>ASSIGN   9220<<ASSIGN   9220>>ASSIGN
BSRC$
      5738**DCL      9198<<ASSIGN   9201>>ASSIGN   9203<<ASSIGN   9203>>ASSIGN   9215<<ASSIGN   9219<<ASSIGN
      9219>>ASSIGN   9220>>ASSIGN
BTMP
      5742**DCL      6102--ASSIGN   6139>>IF       7282--ASSIGN   7319>>IF       9162<<ASSIGN
CTXT.LEN
      3901**DCL      3902--IMP-SIZ  6228>>ASSIGN   7408>>ASSIGN   9250<<ASSIGN   9251>>ASSIGN
CTXT.TXT
      3902**DCL      6216--ASSIGN   7396--ASSIGN   9251<<ASSIGN
CURRLEN
      5767**DCL      5775<<ASSIGN   5776<<ASSIGN   5777<<ASSIGN   5789<<ASSIGN   5795>>IF       5800<<ASSIGN
      5800>>ASSIGN   5813<<ASSIGN   5813>>ASSIGN   5823<<ASSIGN   5823>>ASSIGN   5824>>ASSIGN   5829<<ASSIGN
      5829>>ASSIGN   9286<<ASSIGN   9286>>ASSIGN   9295<<ASSIGN   9295>>ASSIGN
DEPTH
      5743**DCL      5783<<ASSIGN   5786<<ASSIGN   5786>>ASSIGN   5787>>IF       5789>>ASSIGN   5791>>ASSIGN
      5793>>ASSIGN   5795>>IF       5800>>ASSIGN   5800>>ASSIGN   5803>>ASSIGN   5805>>ASSIGN   5813>>ASSIGN
      5813>>ASSIGN   5818>>IF       5820>>ASSIGN   5823>>ASSIGN   5823>>ASSIGN   5824>>ASSIGN   5824>>ASSIGN
      5826>>ASSIGN   5827<<ASSIGN   5827>>ASSIGN   5828>>IF       5829>>ASSIGN   5829>>ASSIGN   9286>>ASSIGN
      9286>>ASSIGN   9295>>ASSIGN   9295>>ASSIGN
DSTBYTES
      5744**DCL      9244<<ASSIGN
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:268  
DSTLEN
      5745**DCL      5744--IMP-SIZ  9183<<ASSIGN   9184>>IF       9195<<ASSIGN   9196>>IF       9210<<ASSIGN
      9212>>IF       9217>>ASSIGN   9234<<ASSIGN   9235>>IF       9237<<ASSIGN   9237>>ASSIGN   9241>>ASSIGN
      9244>>ASSIGN
ENDITEM
      5818**LABEL    5797--GOTO
GETLEN
      9282**PROC     5801--CALL
I
      5746**DCL      9200<<DOINDEX  9218<<DOINDEX  9294<<ASSIGN   9295>>ASSIGN   9297>>DOWHILE  9300<<ASSIGN
      9300>>ASSIGN
INFOLVL
      5747**DCL      5837<<ASSIGN   7116<<ASSIGN   8306<<ASSIGN   8511<<ASSIGN   8718<<ASSIGN   8923<<ASSIGN
      8942>>IF       9029>>ASSIGN   9039>>DOWHILE  9041<<ASSIGN   9041>>ASSIGN   9129>>ASSIGN   9139<<ASSIGN
      9139>>ASSIGN
INITLEN
      5768**DCL      5772<<ASSIGN   5773<<ASSIGN   5774<<ASSIGN   5791<<ASSIGN   5793<<ASSIGN   5818>>IF
      5820>>ASSIGN   5824<<ASSIGN   5829>>ASSIGN   5830<<ASSIGN
ITEMCUR
      5748**DCL      5836<<ASSIGN   7616>>IF       7716>>IF       8942>>IF       9039>>DOWHILE  9158>>IF
      9164>>IF       9166>>IF       9168>>IF       9182>>ASSIGN   9186>>ASSIGN   9194>>ASSIGN   9198>>ASSIGN
      9206>>ASSIGN   9208>>ASSIGN   9233>>ASSIGN   9240>>ASSIGN   9244>>ASSIGN   9248>>ASSIGN   9251>>ASSIGN
      9270<<ASSIGN   9270>>ASSIGN
ITEMLIST
      5717**DCL      5770<<ASSIGN
ITEMLIST.P
      5734**DCL      5781<<ASSIGN   5806<<ASSIGN   5821>>ASSIGN   6102<<ASSIGN   6216<<ASSIGN   6322<<ASSIGN
      6419<<ASSIGN   6486<<ASSIGN   6584<<ASSIGN   6712<<ASSIGN   6809<<ASSIGN   6876<<ASSIGN   6974<<ASSIGN
      7102<<ASSIGN   7282<<ASSIGN   7396<<ASSIGN   7472<<ASSIGN   7671<<ASSIGN   7771<<ASSIGN   7902<<ASSIGN
      7999<<ASSIGN   8066<<ASSIGN   8164<<ASSIGN   8292<<ASSIGN   8467<<ASSIGN   8670<<ASSIGN   8879<<ASSIGN
      9126<<ASSIGN   9186>>ASSIGN   9198>>ASSIGN   9206>>ASSIGN   9240>>ASSIGN   9244>>ASSIGN   9251>>ASSIGN
ITEMLIST.U
      5732**DCL      5733--REDEF    5734--REDEF    5735--REDEF
ITEMLIST.X.LEN
      5726**DCL      5821<<ASSIGN   9182>>ASSIGN   9194>>ASSIGN   9208>>ASSIGN   9233>>ASSIGN   9248>>ASSIGN
ITEMLIST.X.LVL
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:269  
      5731**DCL      9039>>DOWHILE  9164>>IF       9166>>IF
ITEMLIST.X.TAG
      5728**DCL      7616>>IF       7716>>IF       9168>>IF
ITEMLIST.Z
      5724**DCL      5725--REDEF    5780<<ASSIGN   5803<<ASSIGN   5805<<ASSIGN   5924<<ASSIGN   6029<<ASSIGN
      6129<<ASSIGN   6228<<ASSIGN   6325<<ASSIGN   6422<<ASSIGN   6519<<ASSIGN   6617<<ASSIGN   6715<<ASSIGN
      6812<<ASSIGN   6909<<ASSIGN   7007<<ASSIGN   7105<<ASSIGN   7210<<ASSIGN   7309<<ASSIGN   7408<<ASSIGN
      7505<<ASSIGN   7606<<ASSIGN   7704<<ASSIGN   7804<<ASSIGN   7905<<ASSIGN   8002<<ASSIGN   8099<<ASSIGN
      8197<<ASSIGN   8295<<ASSIGN   8400<<ASSIGN   8500<<ASSIGN   8604<<ASSIGN   8703<<ASSIGN   8812<<ASSIGN
      8912<<ASSIGN   9029<<ASSIGN   9129<<ASSIGN
ITEMNUM
      5749**DCL      5782<<ASSIGN   5793>>ASSIGN   5803>>ASSIGN   5805>>ASSIGN   5806>>ASSIGN   5807<<ASSIGN
      5807>>ASSIGN   8942>>IF       9158>>IF
NEXTBYTE
      5795**LABEL    5784--GOTO     5815--GOTO     5831--GOTO
NEXTLEVEL
      5786**LABEL    5809--GOTO
PDU
      5751**DCL      5796>>IF       5798>>ASSIGN   9284>>ASSIGN   9298>>ASSIGN
PDU$
      5750**DCL      5751--IMP-PTR  5778<<ASSIGN   5781>>ASSIGN   5796>>IF       5798>>ASSIGN   5806>>ASSIGN
      5821>>ASSIGN   9284>>ASSIGN   9298>>ASSIGN
PDUIDX
      5752**DCL      5779<<ASSIGN   5796>>IF       5798>>ASSIGN   5799<<ASSIGN   5799>>ASSIGN   5806>>ASSIGN
      5812<<ASSIGN   5812>>ASSIGN   5814>>IF       5821>>ASSIGN   5822<<ASSIGN   5822>>ASSIGN   9284>>ASSIGN
      9285<<ASSIGN   9285>>ASSIGN   9298>>ASSIGN   9299<<ASSIGN   9299>>ASSIGN
PFPT$
      5753**DCL        13--PROC     2182--IMP-PTR  2278--IMP-PTR  2336--IMP-PTR  2401--IMP-PTR  2459--IMP-PTR
      2550--IMP-PTR  2625--IMP-PTR  2686--IMP-PTR  2744--IMP-PTR  2889--IMP-PTR  2983--IMP-PTR  3041--IMP-PTR
      3099--IMP-PTR  3157--IMP-PTR  3215--IMP-PTR  3274--IMP-PTR  3379--IMP-PTR  3445--IMP-PTR  3511--IMP-PTR
      3607--IMP-PTR  3704--IMP-PTR  3762--IMP-PTR  3820--IMP-PTR  5935>>DOCASE   7115>>ASSIGN   8305>>ASSIGN
RET IN PROCEDURE SCAN
      9270**LABEL    9259--GOTO
SCAN
      9156**PROC     5931--CALL     6036--CALL     6136--CALL     6235--CALL     6332--CALL     6429--CALL
      6526--CALL     6624--CALL     6722--CALL     6819--CALL     6916--CALL     7014--CALL     7112--CALL
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:270  
      7217--CALL     7316--CALL     7415--CALL     7512--CALL     7613--CALL     7711--CALL     7811--CALL
      7912--CALL     8009--CALL     8106--CALL     8204--CALL     8302--CALL     8407--CALL     8507--CALL
      8611--CALL     8710--CALL     8819--CALL     8919--CALL     9036--CALL     9136--CALL
SCANERR
      9145**LABEL    5788--GOTO     5811--GOTO     5931--CALLALT  6036--CALLALT  6136--CALLALT  6140--GOTO
      6235--CALLALT  6332--CALLALT  6429--CALLALT  6526--CALLALT  6624--CALLALT  6722--CALLALT  6819--CALLALT
      6916--CALLALT  7014--CALLALT  7112--CALLALT  7217--CALLALT  7316--CALLALT  7320--GOTO     7415--CALLALT
      7512--CALLALT  7613--CALLALT  7711--CALLALT  7811--CALLALT  7816--GOTO     7912--CALLALT  8009--CALLALT
      8106--CALLALT  8204--CALLALT  8302--CALLALT  8407--CALLALT  8507--CALLALT  8611--CALLALT  8710--CALLALT
      8819--CALLALT  8919--CALLALT  8940--GOTO     9036--CALLALT  9136--CALLALT
SCANITEM.P
      5709**DCL      9187>>ASSIGN   9199>>ASSIGN   9216>>ASSIGN   9238>>IF       9240<<ASSIGN   9244>>ASSIGN
      9249<<ASSIGN   9249>>ASSIGN   9250>>ASSIGN   9251>>ASSIGN   9251>>ASSIGN
SCANITEM.U
      5707**DCL      5708--REDEF    5709--REDEF    5710--REDEF
SCANITEM.X.LEN
      5701**DCL      9183>>ASSIGN   9195>>ASSIGN   9210>>ASSIGN   9234>>ASSIGN   9241<<ASSIGN
SCANITEM.X.LVL
      5706**DCL      9164>>IF       9166>>IF
SCANITEM.X.OPT
      5702**DCL      9261>>IF
SCANITEM.X.TAG
      5703**DCL      9168>>IF
SCANITEM.X.TYP
      5705**DCL      9171>>DOCASE
SCANITEM.Z
      5699**DCL      5700--REDEF
SRC$
      5754**DCL      9186<<ASSIGN   9188>>ASSIGN   9206<<ASSIGN   9207>>ASSIGN   9215>>ASSIGN
SRCBYTES
      5755**DCL      9188>>ASSIGN   9207>>ASSIGN   9244>>ASSIGN   9251>>ASSIGN
SRCLEN
      5756**DCL      5755--IMP-SIZ  9182<<ASSIGN   9184>>IF       9188>>ASSIGN   9194<<ASSIGN   9196>>IF
      9199>>ASSIGN   9200>>DOINDEX  9207>>ASSIGN   9208<<ASSIGN   9209<<ASSIGN   9209>>ASSIGN   9212>>IF
      9233<<ASSIGN   9235>>IF       9237>>ASSIGN   9244>>ASSIGN   9248<<ASSIGN   9250>>ASSIGN   9251>>ASSIGN
TAG
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:271  
      5757**DCL      5758--REDEF    5798<<ASSIGN   5803>>ASSIGN   5805>>ASSIGN
TAGX.CONSTRUCTED
      5761**DCL      5808>>IF
TEMP
      5763**DCL      5771<<ASSIGN   5773>>ASSIGN   5774>>ASSIGN   5776>>ASSIGN   5777>>ASSIGN   5780>>ASSIGN
      5789>>ASSIGN   5790>>IF       5791>>ASSIGN   5802>>IF       5803>>ASSIGN   5810>>IF       5812>>ASSIGN
      5813>>ASSIGN   5820<<ASSIGN   5821>>ASSIGN   5821>>ASSIGN   5826<<ASSIGN   5829>>ASSIGN   5830>>ASSIGN
      6486--ASSIGN   6529>>ASSIGN   6584--ASSIGN   6627>>ASSIGN   6876--ASSIGN   6919>>ASSIGN   6974--ASSIGN
      7017>>ASSIGN   7472--ASSIGN   7515>>IF       7519>>ASSIGN   7671--ASSIGN   7771--ASSIGN   7817>>ASSIGN
      8066--ASSIGN   8109>>ASSIGN   8164--ASSIGN   8207>>ASSIGN   8467--ASSIGN   8510>>ASSIGN   8670--ASSIGN
      8713>>IF       8717>>ASSIGN   8879--ASSIGN   8922>>ASSIGN   9161<<ASSIGN   9188<<ASSIGN   9189>>IF
      9207<<ASSIGN   9209>>ASSIGN   9217<<ASSIGN   9218>>DOINDEX  9284<<ASSIGN   9287>>IF       9289<<ASSIGN
      9292>>IF       9294>>ASSIGN   9296<<ASSIGN   9298<<ASSIGN   9298>>ASSIGN
TWOZEROES.C
      5766**DCL      5796>>IF
TWOZEROES.X
      5765**DCL      5766--REDEF
VBLK
      5410**DCL        13--PROC
VBLK.DATA.PTR$
      5491**DCL      5778>>ASSIGN
VBLK.DATA.SIZE
      5492**DCL      5771>>ASSIGN   5814>>IF       5924>>ASSIGN
VBLK.EVENT
      5497**DCL      6039<<ASSIGN   7516<<ASSIGN   7518<<ASSIGN   8410<<ASSIGN   8714<<ASSIGN   8716<<ASSIGN
      8822<<ASSIGN   8930<<ASSIGN
VBLK.FPT$
      5425**DCL      4352--IMP-PTR  4411--IMP-PTR  4486--IMP-PTR  4545--IMP-PTR  4604--IMP-PTR  6040>>ASSIGN
      6041>>ASSIGN   6529>>ASSIGN   6627>>ASSIGN   6919>>ASSIGN   7017>>ASSIGN   7115>>ASSIGN   7220>>ASSIGN
      7221>>ASSIGN   7519>>ASSIGN   7817>>ASSIGN   8109>>ASSIGN   8207>>ASSIGN   8305>>ASSIGN   8411>>ASSIGN
      8412>>ASSIGN   8510>>ASSIGN   8614>>ASSIGN   8615>>ASSIGN   8717>>ASSIGN   8823>>ASSIGN   8824>>ASSIGN
      8922>>ASSIGN   8931>>ASSIGN   8932>>ASSIGN
XSC$ASSOCIATE
      4411**DCL      6040<<ASSIGN   7220<<ASSIGN
XSC$ASSOCIATE.CTXT$
      4467**DCL      7115<<ASSIGN   8305<<ASSIGN
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:272  
XSC$ASSOCIATE.ERRDEF
      4426**DCL      4446--REDEF
XSC$ASSOCIATE.FNC
      4422**DCL      6041<<ASSIGN   7221<<ASSIGN
XSC$ASSOCIATE.IAEID
      4461**DCL      7017<<ASSIGN
XSC$ASSOCIATE.IAPID
      4460**DCL      6919<<ASSIGN
XSC$ASSOCIATE.RAEID
      4465**DCL      6627<<ASSIGN   8207<<ASSIGN
XSC$ASSOCIATE.RAPID
      4464**DCL      6529<<ASSIGN   8109<<ASSIGN
XSC$ASSOCIATE.RESULT
      4425**DCL      7519<<ASSIGN
XSC$ASSOCIATE.RSDIAG
      4424**DCL      7817<<ASSIGN
XSC$GENERIC.ERRDEF
      4361**DCL      4381--REDEF
XSC$P_ABORT
      4486**DCL      8931<<ASSIGN
XSC$P_ABORT.ERRDEF
      4496**DCL      4516--REDEF
XSC$P_ABORT.FNC
      4492**DCL      8932<<ASSIGN
XSC$RELEASE
      4545**DCL      8411<<ASSIGN   8614<<ASSIGN
XSC$RELEASE.ERRDEF
      4555**DCL      4575--REDEF
XSC$RELEASE.FNC
      4551**DCL      8412<<ASSIGN   8615<<ASSIGN
XSC$RELEASE.REASON
      4553**DCL      8510<<ASSIGN   8717<<ASSIGN
XSC$U_ABORT
      4604**DCL      8823<<ASSIGN
XSC$U_ABORT.ABRTSRC
      4612**DCL      8922<<ASSIGN
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:273  
XSC$U_ABORT.ERRDEF
      4614**DCL      4634--REDEF
XSC$U_ABORT.FNC
      4610**DCL      8824<<ASSIGN
XSC_ASSOCIATE
      4724**DCL      6040>>ASSIGN   7220>>ASSIGN
XSC_ASSOCIATE.ERRDEF
      4739**DCL      4759--REDEF
XSC_GENERIC.ERRDEF
      4674**DCL      4694--REDEF
XSC_ITEMCNT
      5685**DCL      5835<<ASSIGN   5924>>ASSIGN   6029>>ASSIGN   6102>>ASSIGN   6129>>ASSIGN   6216>>ASSIGN
      6228>>ASSIGN   6322>>ASSIGN   6325>>ASSIGN   6419>>ASSIGN   6422>>ASSIGN   6486>>ASSIGN   6519>>ASSIGN
      6584>>ASSIGN   6617>>ASSIGN   6712>>ASSIGN   6715>>ASSIGN   6809>>ASSIGN   6812>>ASSIGN   6876>>ASSIGN
      6909>>ASSIGN   6974>>ASSIGN   7007>>ASSIGN   7102>>ASSIGN   7105>>ASSIGN   7210>>ASSIGN   7282>>ASSIGN
      7309>>ASSIGN   7396>>ASSIGN   7408>>ASSIGN   7472>>ASSIGN   7505>>ASSIGN   7606>>ASSIGN   7671>>ASSIGN
      7704>>ASSIGN   7771>>ASSIGN   7804>>ASSIGN   7902>>ASSIGN   7905>>ASSIGN   7999>>ASSIGN   8002>>ASSIGN
      8066>>ASSIGN   8099>>ASSIGN   8164>>ASSIGN   8197>>ASSIGN   8292>>ASSIGN   8295>>ASSIGN   8400>>ASSIGN
      8467>>ASSIGN   8500>>ASSIGN   8604>>ASSIGN   8670>>ASSIGN   8703>>ASSIGN   8812>>ASSIGN   8879>>ASSIGN
      8912>>ASSIGN   9029>>ASSIGN   9126>>ASSIGN   9129>>ASSIGN
XSC_P_ABORT
      4799**DCL      8931>>ASSIGN
XSC_P_ABORT.ERRDEF
      4809**DCL      4829--REDEF
XSC_RELEASE
      4858**DCL      8411>>ASSIGN   8614>>ASSIGN
XSC_RELEASE.ERRDEF
      4868**DCL      4888--REDEF
XSC_U_ABORT
      4917**DCL      8823>>ASSIGN
XSC_U_ABORT.ERRDEF
      4927**DCL      4947--REDEF
XSP$ACTIVITY_DISCARD.ERRDEF
      2288**DCL      2308--REDEF
XSP$ACTIVITY_END.ERRDEF
      2350**DCL      2370--REDEF
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:274  
XSP$ACTIVITY_INTERRUPT.ERRDEF
      2411**DCL      2431--REDEF
XSP$ACTIVITY_RESUME.ERRDEF
      2475**DCL      2495--REDEF
XSP$ACTIVITY_START.ERRDEF
      2565**DCL      2585--REDEF
XSP$ALTER_CONTEXT.ERRDEF
      2634**DCL      2654--REDEF
XSP$CAPABILITY_DATA.ERRDEF
      2695**DCL      2715--REDEF
XSP$CONNECT.CALLED$
      2839**DCL      2840--REDEF
XSP$CONNECT.CTXT$
      2832**DCL      7115>>ASSIGN   8305>>ASSIGN
XSP$CONNECT.DFLT$
      2829**DCL      2830--REDEF
XSP$CONNECT.ERRDEF
      2798**DCL      2818--REDEF
XSP$CONTROL_GIVE.ERRDEF
      2935**DCL      2955--REDEF
XSP$DATA.ERRDEF
      2992**DCL      3012--REDEF
XSP$EXPEDITED_DATA.ERRDEF
      3050**DCL      3070--REDEF
XSP$GENERIC.ERRDEF
      2228**DCL      2248--REDEF
XSP$GENERIC.FNC
      2188**DCL      5935>>DOCASE
XSP$P_ABORT.ERRDEF
      3109**DCL      3129--REDEF
XSP$P_EXCEPTION_REPORT.ERRDEF
      3167**DCL      3187--REDEF
XSP$RELEASE.ERRDEF
      3225**DCL      3245--REDEF
XSP$RESYNCHRONIZE.ERRDEF
      3327**DCL      3347--REDEF
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:275  
XSP$SYNC_MAJOR.ERRDEF
      3394**DCL      3414--REDEF
XSP$SYNC_MINOR.ERRDEF
      3460**DCL      3480--REDEF
XSP$TOKEN_GIVE.ERRDEF
      3559**DCL      3579--REDEF
XSP$TOKEN_PLEASE.ERRDEF
      3655**DCL      3675--REDEF
XSP$TYPED_DATA.ERRDEF
      3713**DCL      3733--REDEF
XSP$U_ABORT.ERRDEF
      3771**DCL      3791--REDEF
XSP$U_EXCEPTION_REPORT.ERRDEF
      3830**DCL      3850--REDEF
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:276  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #007=XSC$DECODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:52 Page:277  
              MINI UREF LISTING

PFNCCASE    5935**LABEL
XSC$DECODE      13**PROC

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:278  
     1387        1        /*T***********************************************************/
     1388        2        /*T*                                                         */
     1389        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1390        4        /*T*                                                         */
     1391        5        /*T***********************************************************/
     1392        6        /*F*    NAME:   XSC$AMACHINE
     1393        7
     1394        8                XSC$AMACHINE is the ACSE state machine.  This routine mixes the
     1395        9                current state of a connection with an incoming event to form an
     1396       10                unpredictable brew of outgoing events and connection state changes.
     1397       11        */
     1398       12        XSC$AMACHINE: PROC( VBLK) ALTRET;
     1399       13        %INCLUDE XSC_ACSE_E;
     1400       91        %INCLUDE XSC_ACSE_M;
     1401      400            %XSC$GENERIC( STCLASS="BASED( CFPT$)");
     1402      459        %INCLUDE XSC_INTERNAL_E;
     1403      547        %INCLUDE XSC_INTERNAL_M;
     1404      892            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( VBLK.CTX$)");
     1405      938            %XSC$VBLK( NAME=VBLK, STCLASS="");
     1406     1044        %INCLUDE UM_CP6;
     1407     1896        %MACRO FATALDEF( NAME=XSC_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
     1408     1897                         ERR#=0, SEV=7);
     1409     1898            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
     1410     1899                          MON='0'B, ERR#=ERR#, SEV=SEV);
     1411     1900        %MEND;
     1412     1901        %INCLUDE XSC_PERR_C;
     1413     1978            %FATALDEF( NAME=XSC_F$NOACSE, ERR#=%F$NOACSE);
     1414     2026            /*E*  ERROR:  XSC-F$NOACSE-7
     1415     2027                MESSAGE:  No handler for this ACSE primitive.
     1416     2028            */
     1417     2029
     1418     2030    1       DCL XSC$DUMPFPT ENTRY(1);
     1419     2031    1       DCL XSC$ENCODE ENTRY(1) ALTRET;
     1420     2032    1       DCL XSC$RELCTX ENTRY(1) ALTRET;
     1421     2033    1       DCL XSS$SCREECH ENTRY(1);
     1422     2034
     1423     2035    1       DCL XSS_TRACE SBIN SYMREF;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:279  
     1424     2036
     1425     2037    1       DCL I SBIN;
     1426     2038    1       DCL CFPT$ PTR;
     1427     2039        %EJECT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:280  
     1428     2040        /************************************************************************
     1429     2041        *                                                                       *
     1430     2042        *       Various internal macros                                         *
     1431     2043        *                                                                       *
     1432     2044        ************************************************************************/
     1433     2045        %MACRO EVENT( EV=0); /* generate an output event of the specified type */
     1434     2046            CALL EVNT( EV) ALTRET( EVNTERR);
     1435     2047        %MEND;
     1436     2048        %MACRO INVALID; /* an illegal state/event combination has occurred */
     1437     2049            CALL OOPS;
     1438     2050        %MEND;
     1439     2051
     1440     2052        %SET P1 = CHARTEXT( 'VBLK.APDUERR = 0');
     1441     2053
     1442     2054        %SET P2 = CHARTEXT( 'CCTX.ORIGINATOR');
     1443     2055
     1444     2056        %EJECT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:281  
     1445     2057        /************************************************************************
     1446     2058        *                                                                       *
     1447     2059        *       Set up and then enter the ACSE state machine                    *
     1448     2060        *                                                                       *
     1449     2061        ************************************************************************/
     1450     2062    1       CFPT$ = VBLK.FPT$;
     1451     2063            /* update state/event history */
     1452     2064    1       I = 1 + CCTX.HISTX;
     1453     2065    1       IF I > 7 THEN
     1454     2066    1           I = 0;
     1455     2067    1       CCTX.HISTX = I;
     1456     2068    1       CCTX.HIST.EVENT( I) = VBLK.EVENT;
     1457     2069    1       CCTX.HIST.NXTST( I) = %XSC_CST_NULL;  /* filled in before RETURN */
     1458     2070            /* fan out on the state and event */
     1459     2071    2       DO CASE( VBLK.EVENT);
     1460     2072    2           CASE( %XSC_CEV_AASCREQ);
     1461     2073    3               IF CCTX.STATE = %XSC_CST_0 THEN DO;
     1462     2074    4                   IF( %P1) THEN DO;
     1463     2075                            %EVENT( EV=%XSC_CEV_AARQ);
     1464     2078    4                       CCTX.STATE = %XSC_CST_1;
     1465     2079    4                       END;
     1466     2080    3                   ELSE
     1467     2081                            %INVALID;
     1468     2084    3                   END;
     1469     2085    2               ELSE
     1470     2086                        %INVALID;
     1471     2089    2           CASE( %XSC_CEV_AASCRSP);
     1472     2090    3               IF CCTX.STATE = %XSC_CST_2 THEN DO;
     1473     2091                        %EVENT( EV=%XSC_CEV_AAREP);
     1474     2094    3                   CCTX.STATE = %XSC_CST_5;
     1475     2095    3                   END;
     1476     2096    2               ELSE
     1477     2097                        %INVALID;
     1478     2100    2           CASE( %XSC_CEV_AASCRSN);
     1479     2101    3               IF CCTX.STATE = %XSC_CST_2 THEN DO;
     1480     2102                        %EVENT( EV=%XSC_CEV_AAREN);
     1481     2105    3                   CCTX.STATE = %XSC_CST_0;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:282  
     1482     2106    3                   END;
     1483     2107    2               ELSE
     1484     2108                        %INVALID;
     1485     2111    2           CASE( %XSC_CEV_AARQ);
     1486     2112    3               IF CCTX.STATE = %XSC_CST_0 THEN DO;
     1487     2113    4                   IF( %P1) THEN DO;
     1488     2114                            %EVENT( EV=%XSC_CEV_AASCIND);
     1489     2117    4                       CCTX.STATE = %XSC_CST_2;
     1490     2118    4                       END;
     1491     2119    4                   ELSE DO;
     1492     2120                            %EVENT( EV=%XSC_CEV_AAREN);
     1493     2123    4                       CCTX.STATE = %XSC_CST_0;
     1494     2124    4                       END;
     1495     2125    3                   END;
     1496     2126    2               ELSE
     1497     2127                        %INVALID;
     1498     2130    2           CASE( %XSC_CEV_AAREP);
     1499     2131    3               IF CCTX.STATE = %XSC_CST_1 THEN DO;
     1500     2132                        %EVENT( EV=%XSC_CEV_AASCCNP);
     1501     2135    3                   CCTX.STATE = %XSC_CST_5;
     1502     2136    3                   END;
     1503     2137    2               ELSE
     1504     2138                        %INVALID;
     1505     2141    2           CASE( %XSC_CEV_AAREN);
     1506     2142    3               IF CCTX.STATE = %XSC_CST_1 THEN DO;
     1507     2143                        %EVENT( EV=%XSC_CEV_AASCCNN);
     1508     2146    3                   CCTX.STATE = %XSC_CST_0;
     1509     2147    3                   END;
     1510     2148    2               ELSE
     1511     2149                        %INVALID;
     1512     2152    2           CASE( %XSC_CEV_PCONCNN);
     1513     2153    3               IF CCTX.STATE = %XSC_CST_1 THEN DO;
     1514     2154                        %EVENT( EV=%XSC_CEV_AASCCNN);
     1515     2157    3                   CCTX.STATE = %XSC_CST_0;
     1516     2158    3                   END;
     1517     2159    2               ELSE
     1518     2160                        %INVALID;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:283  
     1519     2163    2           CASE( %XSC_CEV_ARELREQ);
     1520     2164    3               IF CCTX.STATE = %XSC_CST_5 THEN DO;
     1521     2165                        %EVENT( EV=%XSC_CEV_RLRQ);
     1522     2168    3                   CCTX.STATE = %XSC_CST_3;
     1523     2169    3                   END;
     1524     2170    2               ELSE
     1525     2171                        %INVALID;
     1526     2174    2           CASE( %XSC_CEV_ARELRSP);
     1527     2175    3               IF CCTX.STATE = %XSC_CST_4 THEN DO;
     1528     2176                        %EVENT( EV=%XSC_CEV_RLREP);
     1529     2179    3                   CCTX.STATE = %XSC_CST_0;
     1530     2180    3                   END;
     1531     2181    2               ELSE
     1532     2182    3                   IF CCTX.STATE = %XSC_CST_6 THEN DO;
     1533     2183                            %EVENT( EV=%XSC_CEV_RLREP);
     1534     2186    3                       CCTX.STATE = %XSC_CST_3;
     1535     2187    3                       END;
     1536     2188    2                   ELSE
     1537     2189                            %INVALID;
     1538     2192    2           CASE( %XSC_CEV_ARELRSN);
     1539     2193    3               IF CCTX.STATE = %XSC_CST_4 THEN DO;
     1540     2194                        %EVENT( EV=%XSC_CEV_RLREN);
     1541     2197    3                   CCTX.STATE = %XSC_CST_5;
     1542     2198    3                   END;
     1543     2199    2               ELSE
     1544     2200                        %INVALID;
     1545     2203    2           CASE( %XSC_CEV_RLRQ);
     1546     2204    3               IF CCTX.STATE = %XSC_CST_5 THEN DO;
     1547     2205                        %EVENT( EV=%XSC_CEV_ARELIND);
     1548     2208    3                   CCTX.STATE = %XSC_CST_4;
     1549     2209    3                   END;
     1550     2210    2               ELSE
     1551     2211    3                   IF CCTX.STATE = %XSC_CST_3 THEN DO;
     1552     2212    4                       IF( %P2) THEN DO;
     1553     2213                                %EVENT( EV=%XSC_CEV_ARELIND);
     1554     2216    4                           CCTX.STATE = %XSC_CST_6;
     1555     2217    4                           END;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:284  
     1556     2218    4                       ELSE DO;
     1557     2219                                %EVENT( EV=%XSC_CEV_ARELIND);
     1558     2222    4                           CCTX.STATE = %XSC_CST_7;
     1559     2223    4                           END;
     1560     2224    3                       END;
     1561     2225    2                   ELSE
     1562     2226                            %INVALID;
     1563     2229    2           CASE( %XSC_CEV_RLREP);
     1564     2230    3               IF CCTX.STATE = %XSC_CST_3 THEN DO;
     1565     2231                        %EVENT( EV=%XSC_CEV_ARELCNP);
     1566     2234    3                   CCTX.STATE = %XSC_CST_0;
     1567     2235    3                   END;
     1568     2236    2               ELSE
     1569     2237    3                   IF CCTX.STATE = %XSC_CST_7 THEN DO;
     1570     2238                            %EVENT( EV=%XSC_CEV_ARELCNP);
     1571     2241    3                       CCTX.STATE = %XSC_CST_4;
     1572     2242    3                       END;
     1573     2243    2                   ELSE
     1574     2244                            %INVALID;
     1575     2247    2           CASE( %XSC_CEV_RLREN);
     1576     2248    3               IF CCTX.STATE = %XSC_CST_3 THEN DO;
     1577     2249                        %EVENT( EV=%XSC_CEV_ARELCNN);
     1578     2252    3                   CCTX.STATE = %XSC_CST_5;
     1579     2253    3                   END;
     1580     2254    2               ELSE
     1581     2255                        %INVALID;
     1582     2258    2           CASE( %XSC_CEV_AUABREQ);
     1583     2259    3               IF CCTX.STATE ~= %XSC_CST_0 THEN DO;
     1584     2260                        %EVENT( EV=%XSC_CEV_ABRT);
     1585     2263    3                   CCTX.STATE = %XSC_CST_0;
     1586     2264    3                   END;
     1587     2265    2               ELSE
     1588     2266                        %INVALID;
     1589     2269    2           CASE( %XSC_CEV_ABRT);
     1590     2270    3               IF CCTX.STATE ~= %XSC_CST_0 THEN DO;
     1591     2271                        %EVENT( EV=%XSC_CEV_AUABIND);
     1592     2274    3                   CCTX.STATE = %XSC_CST_0;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:285  
     1593     2275    3                   END;
     1594     2276    2               ELSE
     1595     2277                        %INVALID;
     1596     2280    2           CASE( %XSC_CEV_PPABIND);
     1597     2281    3               IF CCTX.STATE ~= %XSC_CST_0 THEN DO;
     1598     2282                        %EVENT( EV=%XSC_CEV_APABIND);
     1599     2285    3                   CCTX.STATE = %XSC_CST_0;
     1600     2286    3                   END;
     1601     2287    2               ELSE
     1602     2288                        %INVALID;
     1603     2291    2           CASE( ELSE);
     1604     2292                    %INVALID;
     1605     2295    2           END;
     1606     2296        %EJECT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:286  
     1607     2297    2       DO WHILE( %FALSE);
     1608     2298    2   EVNTERR:
     1609     2299                /* the EVNT routine ALTRETURNed because of some internal error */
     1610     2300    2           GOTO DONE;
     1611     2301    2           END;
     1612     2302        /************************************************************************
     1613     2303        *                                                                       *
     1614     2304        *       Done with state machine; record state and light outa here       *
     1615     2305        *                                                                       *
     1616     2306        ************************************************************************/
     1617     2307    1       I = CCTX.HISTX;
     1618     2308    1       CCTX.HIST.NXTST( I) = CCTX.STATE;  /* record new state in hist buffer */
     1619     2309    1   DONE:
     1620     2310    2       IF CCTX.ABORTING THEN DO;
     1621     2311                /* There was a problem handling the application's request
     1622     2312                   (probably the connection was dropped out from under it) or an
     1623     2313                   APDU was received that is inconsistent with connection state,
     1624     2314                   so we force a 'provider abort'.                              */
     1625     2315    3           IF CCTX.STATE > %XSC_CST_0 THEN DO;
     1626     2316    3               CALL EVNT( %XSC_CEV_ABRT);
     1627     2317    3               CALL EVNT( %XSC_CEV_APABIND);
     1628     2318    3               CCTX.STATE = %XSC_CST_0;
     1629     2319    3               END;
     1630     2320    2           END;
     1631     2321    2       IF CCTX.STATE = %XSC_CST_0 THEN DO;
     1632     2322                /* State is 'idle - unassociated' so release context */
     1633     2323    2           CALL XSC$RELCTX( VBLK.CTX$);
     1634     2324    2           IF CCTX.ABORTING THEN
     1635     2325                    /* during this trip thru the state machine, connection aborted */
     1636     2326                    /* have E$STATE or other error reported to user */
     1637     2327    2               ALTRETURN;
     1638     2328    2           END;
     1639     2329    2       IF CCTX.STATE > 127 THEN DO;
     1640     2330                /* There was a user request inconsistent with connection state. */
     1641     2331    2           CCTX.STATE = CCTX.STATE - 128;
     1642     2332                /* have E$STATE reported to user */
     1643     2333    2           ALTRETURN;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:287  
     1644     2334    2           END;
     1645     2335    1       RETURN;
     1646     2336        %EJECT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:288  
     1647     2337        /************************************************************************
     1648     2338        *                                                                       *
     1649     2339        *       EVNT Routine                                                    *
     1650     2340        *                                                                       *
     1651     2341        ************************************************************************/
     1652     2342    1   EVNT: PROC( EVENT) ALTRET;
     1653     2343
     1654     2344    2       DCL EVENT SBIN;
     1655     2345            /* This table maps events destined for the ACSE-user into the function
     1656     2346               code identifying the ACSE FPT the user receives.                 */
     1657     2347    2       DCL CEV_TO_FNC(0:7) UBIN BYTE CONSTANT CALIGNED INIT(
     1658     2348    2           %XSC_FNC_AASCIND#,      /* XSC_CEV_AASCIND */
     1659     2349    2           %XSC_FNC_AASCCNF#,      /* XSC_CEV_AASCCNP */
     1660     2350    2           %XSC_FNC_AASCCNF#,      /* XSC_CEV_AASCCNN */
     1661     2351    2           %XSC_FNC_ARELIND#,      /* XSC_CEV_ARELIND */
     1662     2352    2           %XSC_FNC_ARELCNF#,      /* XSC_CEV_ARELCNP */
     1663     2353    2           %XSC_FNC_ARELCNF#,      /* XSC_CEV_ARELCNN */
     1664     2354    2           %XSC_FNC_AUABIND#,      /* XSC_CEV_AUABIND */
     1665     2355    2           %XSC_FNC_APABIND#);     /* XSC_CEV_APABIND */
     1666     2356
     1667     2357    2       IF EVENT <= %XSC_CEV_ABRT THEN
     1668     2358    2           GOTO SEND_APDU;
     1669     2359            /* determine whether event is to be reported to this user or other end */
     1670     2360    3       IF BINBIT( EVENT, 1) THEN DO;
     1671     2361                /* odd event number means report it (as FPT) to this user */
     1672     2362    3           XSC$GENERIC.FNC = CEV_TO_FNC( EVENT / 2 - 6);
     1673     2363    3           IF XSS_TRACE > 0 THEN
     1674     2364    3               CALL XSC$DUMPFPT( XSC$GENERIC);
     1675     2365    3           IF CCTX.ENTRY$ ~= ENTADDR( NIL) THEN
     1676     2366    3               CALL CCTX.ENTRY$( XSC$GENERIC)
     1677     2367    4               WHENALTRETURN DO;
     1678     2368    4                   CCTX.ABORTING = %TRUE;
     1679     2369    4                   END;
     1680     2370    3           ELSE
     1681     2371                    /* no ACSE-user handler routine defined.  This can't be! */
     1682     2372    3               CALL XSS$SCREECH( XSC_F$NOACSE);
     1683     2373    3           END;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:289  
     1684     2374    3       ELSE DO;
     1685     2375                /* even event number means send it (as APDU) to the other end */
     1686     2376    3   SEND_APDU:
     1687     2377    3           VBLK.EVENT = EVENT;
     1688     2378    3           CALL XSC$ENCODE( VBLK)
     1689     2379    4           WHENALTRETURN DO;
     1690     2380    4               CCTX.ABORTING = %TRUE;
     1691     2381    4               END;
     1692     2382    3           END;
     1693     2383    2       IF CCTX.ABORTING THEN
     1694     2384    2           ALTRETURN;
     1695     2385    2       RETURN;
     1696     2386
     1697     2387    2       END EVNT;
     1698     2388        %EJECT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:290  
     1699     2389        /************************************************************************
     1700     2390        *                                                                       *
     1701     2391        *       OOPS Routine                                                    *
     1702     2392        *                                                                       *
     1703     2393        ************************************************************************/
     1704     2394    1   OOPS: PROC;
     1705     2395            /* An illegal state/event combination was detected */
     1706     2396    2       IF VBLK.EVENT < %XSC_CEV_AASCREQ THEN
     1707     2397                /* Illegal incoming APDU or Presentation event, so abort connection */
     1708     2398    2           CCTX.ABORTING = %TRUE;
     1709     2399    2       ELSE
     1710     2400                /* Illegal event was a user request, so just crab about it */
     1711     2401    2           CCTX.STATE = CCTX.STATE + 128;
     1712     2402    2       RETURN;
     1713     2403
     1714     2404    2       END OOPS;
     1715     2405
     1716     2406    1       END XSC$AMACHINE;
     1717     2407        %EOD;

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:291  
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSC$AMACHINE.

   Procedure XSC$AMACHINE requires 522 words for executable code.
   Procedure XSC$AMACHINE requires 8 words of local(AUTO) storage.

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:292  

 Object Unit name= XSC$AMACHINE                               File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:53:01.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      3      3  XSC$AMACHINE
    1   Proc  even  none   522   1012  XSC$AMACHINE
    2  RoData even  none    34     42  XSC$AMACHINE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  XSC$AMACHINE

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  XSC_F$NOACSE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 XSC$RELCTX
         yes           Std       1 XSC$DUMPFPT
         yes           Std       1 XSS$SCREECH
 yes     yes           Std       1 XSC$ENCODE
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:293  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSS_TRACE

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:294  


     1387        1        /*T***********************************************************/
     1388        2        /*T*                                                         */
     1389        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1390        4        /*T*                                                         */
     1391        5        /*T***********************************************************/
     1392        6        /*F*    NAME:   XSC$AMACHINE
     1393        7
     1394        8                XSC$AMACHINE is the ACSE state machine.  This routine mixes the
     1395        9                current state of a connection with an incoming event to form an
     1396       10                unpredictable brew of outgoing events and connection state changes.
     1397       11        */
     1398       12        XSC$AMACHINE: PROC( VBLK) ALTRET;

     12  1 000000   000000 700200 xent  XSC$AMACHINE TSX0  ! X66_AUTO_1
         1 000001   000010 000001                    ZERO    8,1

     1399       13        %INCLUDE XSC_ACSE_E;
     1400       91        %INCLUDE XSC_ACSE_M;
     1401      400            %XSC$GENERIC( STCLASS="BASED( CFPT$)");
     1402      459        %INCLUDE XSC_INTERNAL_E;
     1403      547        %INCLUDE XSC_INTERNAL_M;
     1404      892            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( VBLK.CTX$)");
     1405      938            %XSC$VBLK( NAME=VBLK, STCLASS="");
     1406     1044        %INCLUDE UM_CP6;
     1407     1896        %MACRO FATALDEF( NAME=XSC_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
     1408     1897                         ERR#=0, SEV=7);
     1409     1898            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
     1410     1899                          MON='0'B, ERR#=ERR#, SEV=SEV);
     1411     1900        %MEND;
     1412     1901        %INCLUDE XSC_PERR_C;
     1413     1978            %FATALDEF( NAME=XSC_F$NOACSE, ERR#=%F$NOACSE);
     1414     2026            /*E*  ERROR:  XSC-F$NOACSE-7
     1415     2027                MESSAGE:  No handler for this ACSE primitive.
     1416     2028            */
     1417     2029
     1418     2030    1       DCL XSC$DUMPFPT ENTRY(1);
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:295  
     1419     2031    1       DCL XSC$ENCODE ENTRY(1) ALTRET;
     1420     2032    1       DCL XSC$RELCTX ENTRY(1) ALTRET;
     1421     2033    1       DCL XSS$SCREECH ENTRY(1);
     1422     2034
     1423     2035    1       DCL XSS_TRACE SBIN SYMREF;
     1424     2036
     1425     2037    1       DCL I SBIN;
     1426     2038    1       DCL CFPT$ PTR;
     1427     2039        %EJECT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:296  
     1428     2040        /************************************************************************
     1429     2041        *                                                                       *
     1430     2042        *       Various internal macros                                         *
     1431     2043        *                                                                       *
     1432     2044        ************************************************************************/
     1433     2045        %MACRO EVENT( EV=0); /* generate an output event of the specified type */
     1434     2046            CALL EVNT( EV) ALTRET( EVNTERR);
     1435     2047        %MEND;
     1436     2048        %MACRO INVALID; /* an illegal state/event combination has occurred */
     1437     2049            CALL OOPS;
     1438     2050        %MEND;
     1439     2051
     1440     2052        %SET P1 = CHARTEXT( 'VBLK.APDUERR = 0');
     1441     2053
     1442     2054        %SET P2 = CHARTEXT( 'CCTX.ORIGINATOR');
     1443     2055
     1444     2056        %EJECT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:297  
     1445     2057        /************************************************************************
     1446     2058        *                                                                       *
     1447     2059        *       Set up and then enter the ACSE state machine                    *
     1448     2060        *                                                                       *
     1449     2061        ************************************************************************/
     1450     2062    1       CFPT$ = VBLK.FPT$;

   2062  1 000002   200003 470500                    LDP0    @VBLK,,AUTO
         1 000003   000001 236100                    LDQ     1,,PR0
         1 000004   200005 756100                    STQ     CFPT$,,AUTO

     1451     2063            /* update state/event history */
     1452     2064    1       I = 1 + CCTX.HISTX;

   2064  1 000005   000000 471500                    LDP1    0,,PR0
         1 000006   100000 236100                    LDQ     0,,PR1
         1 000007   000022 772000                    QRL     18
         1 000010   000777 376007                    ANQ     511,DL
         1 000011   000001 036007                    ADLQ    1,DL
         1 000012   200004 756100                    STQ     I,,AUTO

     1453     2065    1       IF I > 7 THEN

   2065  1 000013   000007 116007                    CMPQ    7,DL
         1 000014   000016 604400 1                  TMOZ    s:2067

     1454     2066    1           I = 0;

   2066  1 000015   200004 450100                    STZ     I,,AUTO

     1455     2067    1       CCTX.HISTX = I;

   2067  1 000016   200004 236100                    LDQ     I,,AUTO
         1 000017   000022 736000                    QLS     18
         1 000020   100000 552120                    STBQ    0,'20'O,PR1

     1456     2068    1       CCTX.HIST.EVENT( I) = VBLK.EVENT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:298  

   2068  1 000021   000000 471500                    LDP1    0,,PR0
         1 000022   200004 235100                    LDA     I,,AUTO
         1 000023   000001 735000                    ALS     1
         1 000024   000105 100500                    MLR     fill='000'O
         1 000025   000006 600001                    ADSC9   6,,PR0                   cn=3,n=1
         1 000026   100002 000001                    ADSC9   2,A,PR1                  cn=0,n=1

     1457     2069    1       CCTX.HIST.NXTST( I) = %XSC_CST_NULL;  /* filled in before RETURN */

   2069  1 000027   000000 471500                    LDP1    0,,PR0
         1 000030   000105 101400                    MRL     fill='000'O
         1 000031   000000 000004 2                  ADSC9   0                        cn=0,n=4
         1 000032   100002 200001                    ADSC9   2,A,PR1                  cn=1,n=1

     1458     2070            /* fan out on the state and event */
     1459     2071    2       DO CASE( VBLK.EVENT);

   2071  1 000033   000006 720100                    LXL0    6,,PR0
         1 000034   000777 360003                    ANX0    511,DU
         1 000035   000031 100003                    CMPX0   25,DU
         1 000036   000040 602010 1                  TNC     s:2071+5,X0
         1 000037   000603 710000 1                  TRA     s:2293
         1 000040   000603 710000 1                  TRA     s:2293
         1 000041   000161 710000 1                  TRA     s:2112
         1 000042   000215 710000 1                  TRA     s:2131
         1 000043   000236 710000 1                  TRA     s:2142
         1 000044   000376 710000 1                  TRA     s:2204
         1 000045   000446 710000 1                  TRA     s:2230
         1 000046   000502 710000 1                  TRA     s:2248
         1 000047   000543 710000 1                  TRA     s:2270
         1 000050   000603 710000 1                  TRA     s:2293
         1 000051   000257 710000 1                  TRA     s:2153
         1 000052   000603 710000 1                  TRA     s:2293
         1 000053   000563 710000 1                  TRA     s:2281
         1 000054   000071 710000 1                  TRA     s:2073
         1 000055   000603 710000 1                  TRA     s:2293
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:299  
         1 000056   000117 710000 1                  TRA     s:2090
         1 000057   000603 710000 1                  TRA     s:2293
         1 000060   000140 710000 1                  TRA     s:2101
         1 000061   000603 710000 1                  TRA     s:2293
         1 000062   000300 710000 1                  TRA     s:2164
         1 000063   000603 710000 1                  TRA     s:2293
         1 000064   000321 710000 1                  TRA     s:2175
         1 000065   000603 710000 1                  TRA     s:2293
         1 000066   000355 710000 1                  TRA     s:2193
         1 000067   000603 710000 1                  TRA     s:2293
         1 000070   000523 710000 1                  TRA     s:2259

     1460     2072    2           CASE( %XSC_CEV_AASCREQ);

     1461     2073    3               IF CCTX.STATE = %XSC_CST_0 THEN DO;

   2073  1 000071   000000 471500                    LDP1    0,,PR0
         1 000072   100000 236100                    LDQ     0,,PR1
         1 000073   777000 316003                    CANQ    -512,DU
         1 000074   000114 601000 1                  TNZ     s:2087

     1462     2074    4                   IF( %P1) THEN DO;

   2074  1 000075   000006 236100                    LDQ     6,,PR0
         1 000076   777000 316007                    CANQ    -512,DL
         1 000077   000111 601000 1                  TNZ     s:2082

     1463     2075                            %EVENT( EV=%XSC_CEV_AARQ);

   2076  1 000100   000002 236000 2                  LDQ     2
         1 000101   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000102   000674 701000 1                  TSX1    EVNT
         1 000103   000606 702000 1                  TSX2    EVNTERR

     1464     2078    4                       CCTX.STATE = %XSC_CST_1;

   2078  1 000104   200003 470500                    LDP0    @VBLK,,AUTO
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:300  
         1 000105   000000 471500                    LDP1    0,,PR0
         1 000106   001000 236003                    LDQ     512,DU
         1 000107   100000 552140                    STBQ    0,'40'O,PR1

     1465     2079    4                       END;

   2079  1 000110   000605 710000 1                  TRA     s:2297

     1466     2080    3                   ELSE
     1467     2081                            %INVALID;

   2082  1 000111   000772 701000 1                  TSX1    OOPS
         1 000112   000000 011000                    NOP     0

     1468     2084    3                   END;

   2084  1 000113   000605 710000 1                  TRA     s:2297

     1469     2085    2               ELSE
     1470     2086                        %INVALID;

   2087  1 000114   000772 701000 1                  TSX1    OOPS
         1 000115   000000 011000                    NOP     0
         1 000116   000605 710000 1                  TRA     s:2297

     1471     2089    2           CASE( %XSC_CEV_AASCRSP);

     1472     2090    3               IF CCTX.STATE = %XSC_CST_2 THEN DO;

   2090  1 000117   000000 471500                    LDP1    0,,PR0
         1 000120   100000 236100                    LDQ     0,,PR1
         1 000121   777000 376003                    ANQ     -512,DU
         1 000122   002000 116003                    CMPQ    1024,DU
         1 000123   000135 601000 1                  TNZ     s:2098

     1473     2091                        %EVENT( EV=%XSC_CEV_AAREP);

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:301  
   2092  1 000124   000004 236000 2                  LDQ     4
         1 000125   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000126   000674 701000 1                  TSX1    EVNT
         1 000127   000606 702000 1                  TSX2    EVNTERR

     1474     2094    3                   CCTX.STATE = %XSC_CST_5;

   2094  1 000130   200003 470500                    LDP0    @VBLK,,AUTO
         1 000131   000000 471500                    LDP1    0,,PR0
         1 000132   005000 236003                    LDQ     2560,DU
         1 000133   100000 552140                    STBQ    0,'40'O,PR1

     1475     2095    3                   END;

   2095  1 000134   000605 710000 1                  TRA     s:2297

     1476     2096    2               ELSE
     1477     2097                        %INVALID;

   2098  1 000135   000772 701000 1                  TSX1    OOPS
         1 000136   000000 011000                    NOP     0
         1 000137   000605 710000 1                  TRA     s:2297

     1478     2100    2           CASE( %XSC_CEV_AASCRSN);

     1479     2101    3               IF CCTX.STATE = %XSC_CST_2 THEN DO;

   2101  1 000140   000000 471500                    LDP1    0,,PR0
         1 000141   100000 236100                    LDQ     0,,PR1
         1 000142   777000 376003                    ANQ     -512,DU
         1 000143   002000 116003                    CMPQ    1024,DU
         1 000144   000156 601000 1                  TNZ     s:2109

     1480     2102                        %EVENT( EV=%XSC_CEV_AAREN);

   2103  1 000145   000006 236000 2                  LDQ     6
         1 000146   200007 756100                    STQ     CFPT$+2,,AUTO
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:302  
         1 000147   000674 701000 1                  TSX1    EVNT
         1 000150   000606 702000 1                  TSX2    EVNTERR

     1481     2105    3                   CCTX.STATE = %XSC_CST_0;

   2105  1 000151   200003 470500                    LDP0    @VBLK,,AUTO
         1 000152   000000 471500                    LDP1    0,,PR0
         1 000153   000000 236003                    LDQ     0,DU
         1 000154   100000 552140                    STBQ    0,'40'O,PR1

     1482     2106    3                   END;

   2106  1 000155   000605 710000 1                  TRA     s:2297

     1483     2107    2               ELSE
     1484     2108                        %INVALID;

   2109  1 000156   000772 701000 1                  TSX1    OOPS
         1 000157   000000 011000                    NOP     0
         1 000160   000605 710000 1                  TRA     s:2297

     1485     2111    2           CASE( %XSC_CEV_AARQ);

     1486     2112    3               IF CCTX.STATE = %XSC_CST_0 THEN DO;

   2112  1 000161   000000 471500                    LDP1    0,,PR0
         1 000162   100000 236100                    LDQ     0,,PR1
         1 000163   777000 316003                    CANQ    -512,DU
         1 000164   000212 601000 1                  TNZ     s:2128

     1487     2113    4                   IF( %P1) THEN DO;

   2113  1 000165   000006 236100                    LDQ     6,,PR0
         1 000166   777000 316007                    CANQ    -512,DL
         1 000167   000201 601000 1                  TNZ     s:2121

     1488     2114                            %EVENT( EV=%XSC_CEV_AASCIND);
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:303  

   2115  1 000170   000010 236000 2                  LDQ     8
         1 000171   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000172   000674 701000 1                  TSX1    EVNT
         1 000173   000606 702000 1                  TSX2    EVNTERR

     1489     2117    4                       CCTX.STATE = %XSC_CST_2;

   2117  1 000174   200003 470500                    LDP0    @VBLK,,AUTO
         1 000175   000000 471500                    LDP1    0,,PR0
         1 000176   002000 236003                    LDQ     1024,DU
         1 000177   100000 552140                    STBQ    0,'40'O,PR1

     1490     2118    4                       END;

   2118  1 000200   000605 710000 1                  TRA     s:2297

     1491     2119    4                   ELSE DO;

     1492     2120                            %EVENT( EV=%XSC_CEV_AAREN);

   2121  1 000201   000006 236000 2                  LDQ     6
         1 000202   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000203   000674 701000 1                  TSX1    EVNT
         1 000204   000606 702000 1                  TSX2    EVNTERR

     1493     2123    4                       CCTX.STATE = %XSC_CST_0;

   2123  1 000205   200003 470500                    LDP0    @VBLK,,AUTO
         1 000206   000000 471500                    LDP1    0,,PR0
         1 000207   000000 236003                    LDQ     0,DU
         1 000210   100000 552140                    STBQ    0,'40'O,PR1

     1494     2124    4                       END;

     1495     2125    3                   END;

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:304  
   2125  1 000211   000605 710000 1                  TRA     s:2297

     1496     2126    2               ELSE
     1497     2127                        %INVALID;

   2128  1 000212   000772 701000 1                  TSX1    OOPS
         1 000213   000000 011000                    NOP     0
         1 000214   000605 710000 1                  TRA     s:2297

     1498     2130    2           CASE( %XSC_CEV_AAREP);

     1499     2131    3               IF CCTX.STATE = %XSC_CST_1 THEN DO;

   2131  1 000215   000000 471500                    LDP1    0,,PR0
         1 000216   100000 236100                    LDQ     0,,PR1
         1 000217   777000 376003                    ANQ     -512,DU
         1 000220   001000 116003                    CMPQ    512,DU
         1 000221   000233 601000 1                  TNZ     s:2139

     1500     2132                        %EVENT( EV=%XSC_CEV_AASCCNP);

   2133  1 000222   000012 236000 2                  LDQ     10
         1 000223   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000224   000674 701000 1                  TSX1    EVNT
         1 000225   000606 702000 1                  TSX2    EVNTERR

     1501     2135    3                   CCTX.STATE = %XSC_CST_5;

   2135  1 000226   200003 470500                    LDP0    @VBLK,,AUTO
         1 000227   000000 471500                    LDP1    0,,PR0
         1 000230   005000 236003                    LDQ     2560,DU
         1 000231   100000 552140                    STBQ    0,'40'O,PR1

     1502     2136    3                   END;

   2136  1 000232   000605 710000 1                  TRA     s:2297

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:305  
     1503     2137    2               ELSE
     1504     2138                        %INVALID;

   2139  1 000233   000772 701000 1                  TSX1    OOPS
         1 000234   000000 011000                    NOP     0
         1 000235   000605 710000 1                  TRA     s:2297

     1505     2141    2           CASE( %XSC_CEV_AAREN);

     1506     2142    3               IF CCTX.STATE = %XSC_CST_1 THEN DO;

   2142  1 000236   000000 471500                    LDP1    0,,PR0
         1 000237   100000 236100                    LDQ     0,,PR1
         1 000240   777000 376003                    ANQ     -512,DU
         1 000241   001000 116003                    CMPQ    512,DU
         1 000242   000254 601000 1                  TNZ     s:2150

     1507     2143                        %EVENT( EV=%XSC_CEV_AASCCNN);

   2144  1 000243   000014 236000 2                  LDQ     12
         1 000244   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000245   000674 701000 1                  TSX1    EVNT
         1 000246   000606 702000 1                  TSX2    EVNTERR

     1508     2146    3                   CCTX.STATE = %XSC_CST_0;

   2146  1 000247   200003 470500                    LDP0    @VBLK,,AUTO
         1 000250   000000 471500                    LDP1    0,,PR0
         1 000251   000000 236003                    LDQ     0,DU
         1 000252   100000 552140                    STBQ    0,'40'O,PR1

     1509     2147    3                   END;

   2147  1 000253   000605 710000 1                  TRA     s:2297

     1510     2148    2               ELSE
     1511     2149                        %INVALID;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:306  

   2150  1 000254   000772 701000 1                  TSX1    OOPS
         1 000255   000000 011000                    NOP     0
         1 000256   000605 710000 1                  TRA     s:2297

     1512     2152    2           CASE( %XSC_CEV_PCONCNN);

     1513     2153    3               IF CCTX.STATE = %XSC_CST_1 THEN DO;

   2153  1 000257   000000 471500                    LDP1    0,,PR0
         1 000260   100000 236100                    LDQ     0,,PR1
         1 000261   777000 376003                    ANQ     -512,DU
         1 000262   001000 116003                    CMPQ    512,DU
         1 000263   000275 601000 1                  TNZ     s:2161

     1514     2154                        %EVENT( EV=%XSC_CEV_AASCCNN);

   2155  1 000264   000014 236000 2                  LDQ     12
         1 000265   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000266   000674 701000 1                  TSX1    EVNT
         1 000267   000606 702000 1                  TSX2    EVNTERR

     1515     2157    3                   CCTX.STATE = %XSC_CST_0;

   2157  1 000270   200003 470500                    LDP0    @VBLK,,AUTO
         1 000271   000000 471500                    LDP1    0,,PR0
         1 000272   000000 236003                    LDQ     0,DU
         1 000273   100000 552140                    STBQ    0,'40'O,PR1

     1516     2158    3                   END;

   2158  1 000274   000605 710000 1                  TRA     s:2297

     1517     2159    2               ELSE
     1518     2160                        %INVALID;

   2161  1 000275   000772 701000 1                  TSX1    OOPS
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:307  
         1 000276   000000 011000                    NOP     0
         1 000277   000605 710000 1                  TRA     s:2297

     1519     2163    2           CASE( %XSC_CEV_ARELREQ);

     1520     2164    3               IF CCTX.STATE = %XSC_CST_5 THEN DO;

   2164  1 000300   000000 471500                    LDP1    0,,PR0
         1 000301   100000 236100                    LDQ     0,,PR1
         1 000302   777000 376003                    ANQ     -512,DU
         1 000303   005000 116003                    CMPQ    2560,DU
         1 000304   000316 601000 1                  TNZ     s:2172

     1521     2165                        %EVENT( EV=%XSC_CEV_RLRQ);

   2166  1 000305   000016 236000 2                  LDQ     14
         1 000306   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000307   000674 701000 1                  TSX1    EVNT
         1 000310   000606 702000 1                  TSX2    EVNTERR

     1522     2168    3                   CCTX.STATE = %XSC_CST_3;

   2168  1 000311   200003 470500                    LDP0    @VBLK,,AUTO
         1 000312   000000 471500                    LDP1    0,,PR0
         1 000313   003000 236003                    LDQ     1536,DU
         1 000314   100000 552140                    STBQ    0,'40'O,PR1

     1523     2169    3                   END;

   2169  1 000315   000605 710000 1                  TRA     s:2297

     1524     2170    2               ELSE
     1525     2171                        %INVALID;

   2172  1 000316   000772 701000 1                  TSX1    OOPS
         1 000317   000000 011000                    NOP     0
         1 000320   000605 710000 1                  TRA     s:2297
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:308  

     1526     2174    2           CASE( %XSC_CEV_ARELRSP);

     1527     2175    3               IF CCTX.STATE = %XSC_CST_4 THEN DO;

   2175  1 000321   000000 471500                    LDP1    0,,PR0
         1 000322   100000 236100                    LDQ     0,,PR1
         1 000323   777000 376003                    ANQ     -512,DU
         1 000324   004000 116003                    CMPQ    2048,DU
         1 000325   000337 601000 1                  TNZ     s:2182

     1528     2176                        %EVENT( EV=%XSC_CEV_RLREP);

   2177  1 000326   000020 236000 2                  LDQ     16
         1 000327   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000330   000674 701000 1                  TSX1    EVNT
         1 000331   000606 702000 1                  TSX2    EVNTERR

     1529     2179    3                   CCTX.STATE = %XSC_CST_0;

   2179  1 000332   200003 470500                    LDP0    @VBLK,,AUTO
         1 000333   000000 471500                    LDP1    0,,PR0
         1 000334   000000 236003                    LDQ     0,DU
         1 000335   100000 552140                    STBQ    0,'40'O,PR1

     1530     2180    3                   END;

   2180  1 000336   000605 710000 1                  TRA     s:2297

     1531     2181    2               ELSE
     1532     2182    3                   IF CCTX.STATE = %XSC_CST_6 THEN DO;

   2182  1 000337   006000 116003                    CMPQ    3072,DU
         1 000340   000352 601000 1                  TNZ     s:2190

     1533     2183                            %EVENT( EV=%XSC_CEV_RLREP);

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:309  
   2184  1 000341   000020 236000 2                  LDQ     16
         1 000342   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000343   000674 701000 1                  TSX1    EVNT
         1 000344   000606 702000 1                  TSX2    EVNTERR

     1534     2186    3                       CCTX.STATE = %XSC_CST_3;

   2186  1 000345   200003 470500                    LDP0    @VBLK,,AUTO
         1 000346   000000 471500                    LDP1    0,,PR0
         1 000347   003000 236003                    LDQ     1536,DU
         1 000350   100000 552140                    STBQ    0,'40'O,PR1

     1535     2187    3                       END;

   2187  1 000351   000605 710000 1                  TRA     s:2297

     1536     2188    2                   ELSE
     1537     2189                            %INVALID;

   2190  1 000352   000772 701000 1                  TSX1    OOPS
         1 000353   000000 011000                    NOP     0
         1 000354   000605 710000 1                  TRA     s:2297

     1538     2192    2           CASE( %XSC_CEV_ARELRSN);

     1539     2193    3               IF CCTX.STATE = %XSC_CST_4 THEN DO;

   2193  1 000355   000000 471500                    LDP1    0,,PR0
         1 000356   100000 236100                    LDQ     0,,PR1
         1 000357   777000 376003                    ANQ     -512,DU
         1 000360   004000 116003                    CMPQ    2048,DU
         1 000361   000373 601000 1                  TNZ     s:2201

     1540     2194                        %EVENT( EV=%XSC_CEV_RLREN);

   2195  1 000362   000022 236000 2                  LDQ     18
         1 000363   200007 756100                    STQ     CFPT$+2,,AUTO
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:310  
         1 000364   000674 701000 1                  TSX1    EVNT
         1 000365   000606 702000 1                  TSX2    EVNTERR

     1541     2197    3                   CCTX.STATE = %XSC_CST_5;

   2197  1 000366   200003 470500                    LDP0    @VBLK,,AUTO
         1 000367   000000 471500                    LDP1    0,,PR0
         1 000370   005000 236003                    LDQ     2560,DU
         1 000371   100000 552140                    STBQ    0,'40'O,PR1

     1542     2198    3                   END;

   2198  1 000372   000605 710000 1                  TRA     s:2297

     1543     2199    2               ELSE
     1544     2200                        %INVALID;

   2201  1 000373   000772 701000 1                  TSX1    OOPS
         1 000374   000000 011000                    NOP     0
         1 000375   000605 710000 1                  TRA     s:2297

     1545     2203    2           CASE( %XSC_CEV_RLRQ);

     1546     2204    3               IF CCTX.STATE = %XSC_CST_5 THEN DO;

   2204  1 000376   000000 471500                    LDP1    0,,PR0
         1 000377   100000 236100                    LDQ     0,,PR1
         1 000400   777000 376003                    ANQ     -512,DU
         1 000401   005000 116003                    CMPQ    2560,DU
         1 000402   000414 601000 1                  TNZ     s:2211

     1547     2205                        %EVENT( EV=%XSC_CEV_ARELIND);

   2206  1 000403   000024 236000 2                  LDQ     20
         1 000404   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000405   000674 701000 1                  TSX1    EVNT
         1 000406   000606 702000 1                  TSX2    EVNTERR
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:311  

     1548     2208    3                   CCTX.STATE = %XSC_CST_4;

   2208  1 000407   200003 470500                    LDP0    @VBLK,,AUTO
         1 000410   000000 471500                    LDP1    0,,PR0
         1 000411   004000 236003                    LDQ     2048,DU
         1 000412   100000 552140                    STBQ    0,'40'O,PR1

     1549     2209    3                   END;

   2209  1 000413   000605 710000 1                  TRA     s:2297

     1550     2210    2               ELSE
     1551     2211    3                   IF CCTX.STATE = %XSC_CST_3 THEN DO;

   2211  1 000414   003000 116003                    CMPQ    1536,DU
         1 000415   000443 601000 1                  TNZ     s:2227

     1552     2212    4                       IF( %P2) THEN DO;

   2212  1 000416   100000 236100                    LDQ     0,,PR1
         1 000417   000002 316007                    CANQ    2,DL
         1 000420   000432 600000 1                  TZE     s:2220

     1553     2213                                %EVENT( EV=%XSC_CEV_ARELIND);

   2214  1 000421   000024 236000 2                  LDQ     20
         1 000422   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000423   000674 701000 1                  TSX1    EVNT
         1 000424   000606 702000 1                  TSX2    EVNTERR

     1554     2216    4                           CCTX.STATE = %XSC_CST_6;

   2216  1 000425   200003 470500                    LDP0    @VBLK,,AUTO
         1 000426   000000 471500                    LDP1    0,,PR0
         1 000427   006000 236003                    LDQ     3072,DU
         1 000430   100000 552140                    STBQ    0,'40'O,PR1
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:312  

     1555     2217    4                           END;

   2217  1 000431   000605 710000 1                  TRA     s:2297

     1556     2218    4                       ELSE DO;

     1557     2219                                %EVENT( EV=%XSC_CEV_ARELIND);

   2220  1 000432   000024 236000 2                  LDQ     20
         1 000433   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000434   000674 701000 1                  TSX1    EVNT
         1 000435   000606 702000 1                  TSX2    EVNTERR

     1558     2222    4                           CCTX.STATE = %XSC_CST_7;

   2222  1 000436   200003 470500                    LDP0    @VBLK,,AUTO
         1 000437   000000 471500                    LDP1    0,,PR0
         1 000440   007000 236003                    LDQ     3584,DU
         1 000441   100000 552140                    STBQ    0,'40'O,PR1

     1559     2223    4                           END;

     1560     2224    3                       END;

   2224  1 000442   000605 710000 1                  TRA     s:2297

     1561     2225    2                   ELSE
     1562     2226                            %INVALID;

   2227  1 000443   000772 701000 1                  TSX1    OOPS
         1 000444   000000 011000                    NOP     0
         1 000445   000605 710000 1                  TRA     s:2297

     1563     2229    2           CASE( %XSC_CEV_RLREP);

     1564     2230    3               IF CCTX.STATE = %XSC_CST_3 THEN DO;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:313  

   2230  1 000446   000000 471500                    LDP1    0,,PR0
         1 000447   100000 236100                    LDQ     0,,PR1
         1 000450   777000 376003                    ANQ     -512,DU
         1 000451   003000 116003                    CMPQ    1536,DU
         1 000452   000464 601000 1                  TNZ     s:2237

     1565     2231                        %EVENT( EV=%XSC_CEV_ARELCNP);

   2232  1 000453   000026 236000 2                  LDQ     22
         1 000454   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000455   000674 701000 1                  TSX1    EVNT
         1 000456   000606 702000 1                  TSX2    EVNTERR

     1566     2234    3                   CCTX.STATE = %XSC_CST_0;

   2234  1 000457   200003 470500                    LDP0    @VBLK,,AUTO
         1 000460   000000 471500                    LDP1    0,,PR0
         1 000461   000000 236003                    LDQ     0,DU
         1 000462   100000 552140                    STBQ    0,'40'O,PR1

     1567     2235    3                   END;

   2235  1 000463   000605 710000 1                  TRA     s:2297

     1568     2236    2               ELSE
     1569     2237    3                   IF CCTX.STATE = %XSC_CST_7 THEN DO;

   2237  1 000464   007000 116003                    CMPQ    3584,DU
         1 000465   000477 601000 1                  TNZ     s:2245

     1570     2238                            %EVENT( EV=%XSC_CEV_ARELCNP);

   2239  1 000466   000026 236000 2                  LDQ     22
         1 000467   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000470   000674 701000 1                  TSX1    EVNT
         1 000471   000606 702000 1                  TSX2    EVNTERR
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:314  

     1571     2241    3                       CCTX.STATE = %XSC_CST_4;

   2241  1 000472   200003 470500                    LDP0    @VBLK,,AUTO
         1 000473   000000 471500                    LDP1    0,,PR0
         1 000474   004000 236003                    LDQ     2048,DU
         1 000475   100000 552140                    STBQ    0,'40'O,PR1

     1572     2242    3                       END;

   2242  1 000476   000605 710000 1                  TRA     s:2297

     1573     2243    2                   ELSE
     1574     2244                            %INVALID;

   2245  1 000477   000772 701000 1                  TSX1    OOPS
         1 000500   000000 011000                    NOP     0
         1 000501   000605 710000 1                  TRA     s:2297

     1575     2247    2           CASE( %XSC_CEV_RLREN);

     1576     2248    3               IF CCTX.STATE = %XSC_CST_3 THEN DO;

   2248  1 000502   000000 471500                    LDP1    0,,PR0
         1 000503   100000 236100                    LDQ     0,,PR1
         1 000504   777000 376003                    ANQ     -512,DU
         1 000505   003000 116003                    CMPQ    1536,DU
         1 000506   000520 601000 1                  TNZ     s:2256

     1577     2249                        %EVENT( EV=%XSC_CEV_ARELCNN);

   2250  1 000507   000030 236000 2                  LDQ     24
         1 000510   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000511   000674 701000 1                  TSX1    EVNT
         1 000512   000606 702000 1                  TSX2    EVNTERR

     1578     2252    3                   CCTX.STATE = %XSC_CST_5;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:315  

   2252  1 000513   200003 470500                    LDP0    @VBLK,,AUTO
         1 000514   000000 471500                    LDP1    0,,PR0
         1 000515   005000 236003                    LDQ     2560,DU
         1 000516   100000 552140                    STBQ    0,'40'O,PR1

     1579     2253    3                   END;

   2253  1 000517   000605 710000 1                  TRA     s:2297

     1580     2254    2               ELSE
     1581     2255                        %INVALID;

   2256  1 000520   000772 701000 1                  TSX1    OOPS
         1 000521   000000 011000                    NOP     0
         1 000522   000605 710000 1                  TRA     s:2297

     1582     2258    2           CASE( %XSC_CEV_AUABREQ);

     1583     2259    3               IF CCTX.STATE ~= %XSC_CST_0 THEN DO;

   2259  1 000523   000000 471500                    LDP1    0,,PR0
         1 000524   100000 236100                    LDQ     0,,PR1
         1 000525   777000 316003                    CANQ    -512,DU
         1 000526   000540 600000 1                  TZE     s:2267

     1584     2260                        %EVENT( EV=%XSC_CEV_ABRT);

   2261  1 000527   000032 236000 2                  LDQ     26
         1 000530   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000531   000674 701000 1                  TSX1    EVNT
         1 000532   000606 702000 1                  TSX2    EVNTERR

     1585     2263    3                   CCTX.STATE = %XSC_CST_0;

   2263  1 000533   200003 470500                    LDP0    @VBLK,,AUTO
         1 000534   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:316  
         1 000535   000000 236003                    LDQ     0,DU
         1 000536   100000 552140                    STBQ    0,'40'O,PR1

     1586     2264    3                   END;

   2264  1 000537   000605 710000 1                  TRA     s:2297

     1587     2265    2               ELSE
     1588     2266                        %INVALID;

   2267  1 000540   000772 701000 1                  TSX1    OOPS
         1 000541   000000 011000                    NOP     0
         1 000542   000605 710000 1                  TRA     s:2297

     1589     2269    2           CASE( %XSC_CEV_ABRT);

     1590     2270    3               IF CCTX.STATE ~= %XSC_CST_0 THEN DO;

   2270  1 000543   000000 471500                    LDP1    0,,PR0
         1 000544   100000 236100                    LDQ     0,,PR1
         1 000545   777000 316003                    CANQ    -512,DU
         1 000546   000560 600000 1                  TZE     s:2278

     1591     2271                        %EVENT( EV=%XSC_CEV_AUABIND);

   2272  1 000547   000034 236000 2                  LDQ     28
         1 000550   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000551   000674 701000 1                  TSX1    EVNT
         1 000552   000606 702000 1                  TSX2    EVNTERR

     1592     2274    3                   CCTX.STATE = %XSC_CST_0;

   2274  1 000553   200003 470500                    LDP0    @VBLK,,AUTO
         1 000554   000000 471500                    LDP1    0,,PR0
         1 000555   000000 236003                    LDQ     0,DU
         1 000556   100000 552140                    STBQ    0,'40'O,PR1

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:317  
     1593     2275    3                   END;

   2275  1 000557   000605 710000 1                  TRA     s:2297

     1594     2276    2               ELSE
     1595     2277                        %INVALID;

   2278  1 000560   000772 701000 1                  TSX1    OOPS
         1 000561   000000 011000                    NOP     0
         1 000562   000605 710000 1                  TRA     s:2297

     1596     2280    2           CASE( %XSC_CEV_PPABIND);

     1597     2281    3               IF CCTX.STATE ~= %XSC_CST_0 THEN DO;

   2281  1 000563   000000 471500                    LDP1    0,,PR0
         1 000564   100000 236100                    LDQ     0,,PR1
         1 000565   777000 316003                    CANQ    -512,DU
         1 000566   000600 600000 1                  TZE     s:2289

     1598     2282                        %EVENT( EV=%XSC_CEV_APABIND);

   2283  1 000567   000036 236000 2                  LDQ     30
         1 000570   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000571   000674 701000 1                  TSX1    EVNT
         1 000572   000606 702000 1                  TSX2    EVNTERR

     1599     2285    3                   CCTX.STATE = %XSC_CST_0;

   2285  1 000573   200003 470500                    LDP0    @VBLK,,AUTO
         1 000574   000000 471500                    LDP1    0,,PR0
         1 000575   000000 236003                    LDQ     0,DU
         1 000576   100000 552140                    STBQ    0,'40'O,PR1

     1600     2286    3                   END;

   2286  1 000577   000605 710000 1                  TRA     s:2297
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:318  

     1601     2287    2               ELSE
     1602     2288                        %INVALID;

   2289  1 000600   000772 701000 1                  TSX1    OOPS
         1 000601   000000 011000                    NOP     0
         1 000602   000605 710000 1                  TRA     s:2297

     1603     2291    2           CASE( ELSE);

     1604     2292                    %INVALID;

   2293  1 000603   000772 701000 1                  TSX1    OOPS
         1 000604   000000 011000                    NOP     0

     1605     2295    2           END;

     1606     2296        %EJECT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:319  
     1607     2297    2       DO WHILE( %FALSE);

   2297  1 000605   000607 710000 1                  TRA     s:2307

     1608     2298    2   EVNTERR:
     1609     2299                /* the EVNT routine ALTRETURNed because of some internal error */
     1610     2300    2           GOTO DONE;

   2300  1 000606   000622 710000 1     EVNTERR      TRA     DONE

     1611     2301    2           END;

     1612     2302        /************************************************************************
     1613     2303        *                                                                       *
     1614     2304        *       Done with state machine; record state and light outa here       *
     1615     2305        *                                                                       *
     1616     2306        ************************************************************************/
     1617     2307    1       I = CCTX.HISTX;

   2307  1 000607   200003 470500                    LDP0    @VBLK,,AUTO
         1 000610   000000 471500                    LDP1    0,,PR0
         1 000611   100000 236100                    LDQ     0,,PR1
         1 000612   000022 772000                    QRL     18
         1 000613   000777 376007                    ANQ     511,DL
         1 000614   200004 756100                    STQ     I,,AUTO

     1618     2308    1       CCTX.HIST.NXTST( I) = CCTX.STATE;  /* record new state in hist buffer */

   2308  1 000615   200004 235100                    LDA     I,,AUTO
         1 000616   000001 735000                    ALS     1
         1 000617   000105 100500                    MLR     fill='000'O
         1 000620   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         1 000621   100002 200001                    ADSC9   2,A,PR1                  cn=1,n=1

     1619     2309    1   DONE:
     1620     2310    2       IF CCTX.ABORTING THEN DO;

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:320  
   2310  1 000622   200003 470500       DONE         LDP0    @VBLK,,AUTO
         1 000623   000000 471500                    LDP1    0,,PR0
         1 000624   100000 236100                    LDQ     0,,PR1
         1 000625   000001 316007                    CANQ    1,DL
         1 000626   000645 600000 1                  TZE     s:2321

     1621     2311                /* There was a problem handling the application's request
     1622     2312                   (probably the connection was dropped out from under it) or an
     1623     2313                   APDU was received that is inconsistent with connection state,
     1624     2314                   so we force a 'provider abort'.                              */
     1625     2315    3           IF CCTX.STATE > %XSC_CST_0 THEN DO;

   2315  1 000627   777000 316003                    CANQ    -512,DU
         1 000630   000645 600000 1                  TZE     s:2321

     1626     2316    3               CALL EVNT( %XSC_CEV_ABRT);

   2316  1 000631   000032 236000 2                  LDQ     26
         1 000632   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000633   000674 701000 1                  TSX1    EVNT
         1 000634   000000 011000                    NOP     0

     1627     2317    3               CALL EVNT( %XSC_CEV_APABIND);

   2317  1 000635   000036 236000 2                  LDQ     30
         1 000636   200007 756100                    STQ     CFPT$+2,,AUTO
         1 000637   000674 701000 1                  TSX1    EVNT
         1 000640   000000 011000                    NOP     0

     1628     2318    3               CCTX.STATE = %XSC_CST_0;

   2318  1 000641   200003 470500                    LDP0    @VBLK,,AUTO
         1 000642   000000 471500                    LDP1    0,,PR0
         1 000643   000000 236003                    LDQ     0,DU
         1 000644   100000 552140                    STBQ    0,'40'O,PR1

     1629     2319    3               END;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:321  

     1630     2320    2           END;

     1631     2321    2       IF CCTX.STATE = %XSC_CST_0 THEN DO;

   2321  1 000645   000000 471500                    LDP1    0,,PR0
         1 000646   100000 236100                    LDQ     0,,PR1
         1 000647   777000 316003                    CANQ    -512,DU
         1 000650   000663 601000 1                  TNZ     s:2329

     1632     2322                /* State is 'idle - unassociated' so release context */
     1633     2323    2           CALL XSC$RELCTX( VBLK.CTX$);

   2323  1 000651   200003 630500                    EPPR0   @VBLK,,AUTO
         1 000652   000037 631400 2                  EPPR1   31
         1 000653   000000 701000 xent               TSX1    XSC$RELCTX
         1 000654   000000 011000                    NOP     0

     1634     2324    2           IF CCTX.ABORTING THEN

   2324  1 000655   200003 470500                    LDP0    @VBLK,,AUTO
         1 000656   000000 471500                    LDP1    0,,PR0
         1 000657   100000 236100                    LDQ     0,,PR1
         1 000660   000001 316007                    CANQ    1,DL
         1 000661   000663 600000 1                  TZE     s:2329

     1635     2325                    /* during this trip thru the state machine, connection aborted */
     1636     2326                    /* have E$STATE or other error reported to user */
     1637     2327    2               ALTRETURN;

   2327  1 000662   000000 702200 xent               TSX2  ! X66_AALT

     1638     2328    2           END;
     1639     2329    2       IF CCTX.STATE > 127 THEN DO;

   2329  1 000663   100000 236100                    LDQ     0,,PR1
         1 000664   777000 376003                    ANQ     -512,DU
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:322  
         1 000665   200000 116003                    CMPQ    65536,DU
         1 000666   000673 602000 1                  TNC     s:2335

     1640     2330                /* There was a user request inconsistent with connection state. */
     1641     2331    2           CCTX.STATE = CCTX.STATE - 128;

   2331  1 000667   100000 236100                    LDQ     0,,PR1
         1 000670   600000 036003                    ADLQ    -65536,DU
         1 000671   100000 552140                    STBQ    0,'40'O,PR1

     1642     2332                /* have E$STATE reported to user */
     1643     2333    2           ALTRETURN;

   2333  1 000672   000000 702200 xent               TSX2  ! X66_AALT

     1644     2334    2           END;
     1645     2335    1       RETURN;

   2335  1 000673   000000 702200 xent               TSX2  ! X66_ARET

     1646     2336        %EJECT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:323  
     1647     2337        /************************************************************************
     1648     2338        *                                                                       *
     1649     2339        *       EVNT Routine                                                    *
     1650     2340        *                                                                       *
     1651     2341        ************************************************************************/
     1652     2342    1   EVNT: PROC( EVENT) ALTRET;

   2342  1 000674   200006 741300       EVNT         STX1  ! CFPT$+1,,AUTO

     1653     2343
     1654     2344    2       DCL EVENT SBIN;
     1655     2345            /* This table maps events destined for the ACSE-user into the function
     1656     2346               code identifying the ACSE FPT the user receives.                 */
     1657     2347    2       DCL CEV_TO_FNC(0:7) UBIN BYTE CONSTANT CALIGNED INIT(
     1658     2348    2           %XSC_FNC_AASCIND#,      /* XSC_CEV_AASCIND */
     1659     2349    2           %XSC_FNC_AASCCNF#,      /* XSC_CEV_AASCCNP */
     1660     2350    2           %XSC_FNC_AASCCNF#,      /* XSC_CEV_AASCCNN */
     1661     2351    2           %XSC_FNC_ARELIND#,      /* XSC_CEV_ARELIND */
     1662     2352    2           %XSC_FNC_ARELCNF#,      /* XSC_CEV_ARELCNP */
     1663     2353    2           %XSC_FNC_ARELCNF#,      /* XSC_CEV_ARELCNN */
     1664     2354    2           %XSC_FNC_AUABIND#,      /* XSC_CEV_AUABIND */
     1665     2355    2           %XSC_FNC_APABIND#);     /* XSC_CEV_APABIND */
     1666     2356
     1667     2357    2       IF EVENT <= %XSC_CEV_ABRT THEN

   2357  1 000675   200007 470500                    LDP0    @EVENT,,AUTO
         1 000676   000000 235100                    LDA     0,,PR0
         1 000677   000007 115007                    CMPA    7,DL
         1 000700   000745 604400 1                  TMOZ    SEND_APDU

     1668     2358    2           GOTO SEND_APDU;
     1669     2359            /* determine whether event is to be reported to this user or other end */
     1670     2360    3       IF BINBIT( EVENT, 1) THEN DO;

   2360  1 000701   000000 236100                    LDQ     0,,PR0
         1 000702   000043 736000                    QLS     35
         1 000703   000745 600000 1                  TZE     SEND_APDU
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:324  

     1671     2361                /* odd event number means report it (as FPT) to this user */
     1672     2362    3           XSC$GENERIC.FNC = CEV_TO_FNC( EVENT / 2 - 6);

   2362  1 000704   000000 236100                    LDQ     0,,PR0
         1 000705   000002 506007                    DIV     2,DL
         1 000706   200005 471500                    LDP1    CFPT$,,AUTO
         1 000707   000100 100406                    MLR     fill='000'O
         1 000710   777777 400001 0                  ADSC9   CEV_TO_FNC-2,Q           cn=2,n=1
         1 000711   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1673     2363    3           IF XSS_TRACE > 0 THEN

   2363  1 000712   000000 235000 xsym               LDA     XSS_TRACE
         1 000713   000720 604400 1                  TMOZ    s:2365

     1674     2364    3               CALL XSC$DUMPFPT( XSC$GENERIC);

   2364  1 000714   200005 630500                    EPPR0   CFPT$,,AUTO
         1 000715   000037 631400 2                  EPPR1   31
         1 000716   000000 701000 xent               TSX1    XSC$DUMPFPT
         1 000717   000000 011000                    NOP     0

     1675     2365    3           IF CCTX.ENTRY$ ~= ENTADDR( NIL) THEN

   2365  1 000720   200003 470500                    LDP0    @VBLK,,AUTO
         1 000721   000000 471500                    LDP1    0,,PR0
         1 000722   100001 236100                    LDQ     1,,PR1
         1 000723   000040 116000 2                  CMPQ    32
         1 000724   000740 600000 1                  TZE     s:2372

     1676     2366    3               CALL CCTX.ENTRY$( XSC$GENERIC)

   2366  1 000725   200005 630500                    EPPR0   CFPT$,,AUTO
         1 000726   100001 220100                    LDX0    1,,PR1
         1 000727   000037 631400 2                  EPPR1   31
         1 000730   000000 701010                    TSX1    0,X0
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:325  
         1 000731   000733 702000 1                  TSX2    s:2368
         1 000732   000737 710000 1                  TRA     s:2369

     1677     2367    4               WHENALTRETURN DO;

     1678     2368    4                   CCTX.ABORTING = %TRUE;

   2368  1 000733   200003 470500                    LDP0    @VBLK,,AUTO
         1 000734   000000 471500                    LDP1    0,,PR0
         1 000735   000001 236007                    LDQ     1,DL
         1 000736   100000 256100                    ORSQ    0,,PR1

     1679     2369    4                   END;

   2369  1 000737   000761 710000 1                  TRA     s:2383

     1680     2370    3           ELSE
     1681     2371                    /* no ACSE-user handler routine defined.  This can't be! */
     1682     2372    3               CALL XSS$SCREECH( XSC_F$NOACSE);

   2372  1 000740   000041 630400 2                  EPPR0   33
         1 000741   000037 631400 2                  EPPR1   31
         1 000742   000000 701000 xent               TSX1    XSS$SCREECH
         1 000743   000000 011000                    NOP     0

     1683     2373    3           END;

   2373  1 000744   000761 710000 1                  TRA     s:2383

     1684     2374    3       ELSE DO;

     1685     2375                /* even event number means send it (as APDU) to the other end */
     1686     2376    3   SEND_APDU:
     1687     2377    3           VBLK.EVENT = EVENT;

   2377  1 000745   200003 471500       SEND_APDU    LDP1    @VBLK,,AUTO
         1 000746   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:326  
         1 000747   100006 552104                    STBQ    6,'04'O,PR1

     1688     2378    3           CALL XSC$ENCODE( VBLK)

   2378  1 000750   200003 630500                    EPPR0   @VBLK,,AUTO
         1 000751   000037 631400 2                  EPPR1   31
         1 000752   000000 701000 xent               TSX1    XSC$ENCODE
         1 000753   000755 702000 1                  TSX2    s:2380
         1 000754   000761 710000 1                  TRA     s:2383

     1689     2379    4           WHENALTRETURN DO;

     1690     2380    4               CCTX.ABORTING = %TRUE;

   2380  1 000755   200003 470500                    LDP0    @VBLK,,AUTO
         1 000756   000000 471500                    LDP1    0,,PR0
         1 000757   000001 236007                    LDQ     1,DL
         1 000760   100000 256100                    ORSQ    0,,PR1

     1691     2381    4               END;

     1692     2382    3           END;

     1693     2383    2       IF CCTX.ABORTING THEN

   2383  1 000761   200003 470500                    LDP0    @VBLK,,AUTO
         1 000762   000000 471500                    LDP1    0,,PR0
         1 000763   100000 236100                    LDQ     0,,PR1
         1 000764   000001 316007                    CANQ    1,DL
         1 000765   000770 600000 1                  TZE     s:2385

     1694     2384    2           ALTRETURN;

   2384  1 000766   200006 221300                    LDX1  ! CFPT$+1,,AUTO
         1 000767   000000 702211                    TSX2  ! 0,X1

     1695     2385    2       RETURN;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:327  

   2385  1 000770   200006 221300                    LDX1  ! CFPT$+1,,AUTO
         1 000771   000001 702211                    TSX2  ! 1,X1

     1696     2386
     1697     2387    2       END EVNT;
     1698     2388        %EJECT;
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:328  
     1699     2389        /************************************************************************
     1700     2390        *                                                                       *
     1701     2391        *       OOPS Routine                                                    *
     1702     2392        *                                                                       *
     1703     2393        ************************************************************************/
     1704     2394    1   OOPS: PROC;

   2394  1 000772   200006 741300       OOPS         STX1  ! CFPT$+1,,AUTO

     1705     2395            /* An illegal state/event combination was detected */
     1706     2396    2       IF VBLK.EVENT < %XSC_CEV_AASCREQ THEN

   2396  1 000773   200003 470500                    LDP0    @VBLK,,AUTO
         1 000774   000006 236100                    LDQ     6,,PR0
         1 000775   000777 376007                    ANQ     511,DL
         1 000776   000014 116007                    CMPQ    12,DL
         1 000777   001004 603000 1                  TRC     s:2401

     1707     2397                /* Illegal incoming APDU or Presentation event, so abort connection */
     1708     2398    2           CCTX.ABORTING = %TRUE;

   2398  1 001000   000000 471500                    LDP1    0,,PR0
         1 001001   000001 236007                    LDQ     1,DL
         1 001002   100000 256100                    ORSQ    0,,PR1
         1 001003   001010 710000 1                  TRA     s:2402

     1709     2399    2       ELSE
     1710     2400                /* Illegal event was a user request, so just crab about it */
     1711     2401    2           CCTX.STATE = CCTX.STATE + 128;

   2401  1 001004   000000 471500                    LDP1    0,,PR0
         1 001005   100000 236100                    LDQ     0,,PR1
         1 001006   200000 036003                    ADLQ    65536,DU
         1 001007   100000 552140                    STBQ    0,'40'O,PR1

     1712     2402    2       RETURN;

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:329  
   2402  1 001010   200006 221300                    LDX1  ! CFPT$+1,,AUTO
         1 001011   000001 702211                    TSX2  ! 1,X1

XSC_F$NOACSE
 Sect OctLoc
   0     000   302303 001367                                                    ....

CEV_TO_FNC
 Sect OctLoc
   0     001   002004 004006   010010 012013                                    ........

(unnamed)
 Sect OctLoc
   2     000   000000 000143   000000 000001   000001 006000   000000 000002    ...c............
   2     004   000003 006000   000000 000003   000005 006000   000000 000015    ................
   2     010   000007 006000   000000 000017   000011 006000   000000 000021    ................
   2     014   000013 006000   000000 000004   000015 006000   000000 000005    ................
   2     020   000017 006000   000000 000006   000021 006000   000000 000023    ................
   2     024   000023 006000   000000 000025   000025 006000   000000 000027    ................
   2     030   000027 006000   000000 000007   000031 006000   000000 000031    ................
   2     034   000033 006000   000000 000033   000035 006000   000001 000000    ................
   2     040   000000 000000   000000 006000                                    ........
     1713     2403
     1714     2404    2       END OOPS;
     1715     2405
     1716     2406    1       END XSC$AMACHINE;
     1717     2407        %EOD;

PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:330  
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSC$AMACHINE.
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:331  

 **** Variables and constants ****

  ****  Section 000 RoData XSC$AMACHINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/c UBIN(9)     r     1 CEV_TO_FNC(0:7)
     0-0-0/w STRC        r     1 XSC_F$NOACSE

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 @EVENT                     3-0-0/w PTR         r     1 @VBLK
     5-0-0/w PTR         r     1 CFPT$                     *0-0-0/w SBIN        r     1 EVENT
     4-0-0/w SBIN        r     1 I                         *0-0-0/w STRC(252)   r     1 VBLK

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 XSS_TRACE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(216)   r     1 CCTX                       0-0-0/w STRC(504)   r     1 XSC$GENERIC


   Procedure XSC$AMACHINE requires 522 words for executable code.
   Procedure XSC$AMACHINE requires 8 words of local(AUTO) storage.
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:332  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:333  
          MINI XREF LISTING

CCTX.ABORTING
       931**DCL      2310>>IF       2324>>IF       2368<<ASSIGN   2380<<ASSIGN   2383>>IF       2398<<ASSIGN
CCTX.ENTRY$
       932**DCL      2365>>IF       2366>>CALL
CCTX.HIST.EVENT
       935**DCL      2068<<ASSIGN
CCTX.HIST.NXTST
       936**DCL      2069<<ASSIGN   2308<<ASSIGN
CCTX.HISTX
       924**DCL      2064>>ASSIGN   2067<<ASSIGN   2307>>ASSIGN
CCTX.HISTZ
       933**DCL       934--REDEF
CCTX.ORIGINATOR
       930**DCL      2212>>IF
CCTX.STATE
       923**DCL      2073>>IF       2078<<ASSIGN   2090>>IF       2094<<ASSIGN   2101>>IF       2105<<ASSIGN
      2112>>IF       2117<<ASSIGN   2123<<ASSIGN   2131>>IF       2135<<ASSIGN   2142>>IF       2146<<ASSIGN
      2153>>IF       2157<<ASSIGN   2164>>IF       2168<<ASSIGN   2175>>IF       2179<<ASSIGN   2182>>IF
      2186<<ASSIGN   2193>>IF       2197<<ASSIGN   2204>>IF       2208<<ASSIGN   2211>>IF       2216<<ASSIGN
      2222<<ASSIGN   2230>>IF       2234<<ASSIGN   2237>>IF       2241<<ASSIGN   2248>>IF       2252<<ASSIGN
      2259>>IF       2263<<ASSIGN   2270>>IF       2274<<ASSIGN   2281>>IF       2285<<ASSIGN   2308>>ASSIGN
      2315>>IF       2318<<ASSIGN   2321>>IF       2329>>IF       2331<<ASSIGN   2331>>ASSIGN   2401<<ASSIGN
      2401>>ASSIGN
CEV_TO_FNC IN PROCEDURE EVNT
      2347**DCL      2362>>ASSIGN
CFPT$
      2038**DCL       417--IMP-PTR  2062<<ASSIGN   2362>>ASSIGN   2364>>CALL     2366>>CALL
DONE
      2310**LABEL    2300--GOTO
EVENT IN PROCEDURE EVNT
      2344**DCL      2342--PROC     2357>>IF       2360>>IF       2362>>ASSIGN   2377>>ASSIGN
EVNT
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:334  
      2342**PROC     2076--CALL     2092--CALL     2103--CALL     2115--CALL     2121--CALL     2133--CALL
      2144--CALL     2155--CALL     2166--CALL     2177--CALL     2184--CALL     2195--CALL     2206--CALL
      2214--CALL     2220--CALL     2232--CALL     2239--CALL     2250--CALL     2261--CALL     2272--CALL
      2283--CALL     2316--CALL     2317--CALL
EVNTERR
      2300**LABEL    2076--CALLALT  2092--CALLALT  2103--CALLALT  2115--CALLALT  2121--CALLALT  2133--CALLALT
      2144--CALLALT  2155--CALLALT  2166--CALLALT  2177--CALLALT  2184--CALLALT  2195--CALLALT  2206--CALLALT
      2214--CALLALT  2220--CALLALT  2232--CALLALT  2239--CALLALT  2250--CALLALT  2261--CALLALT  2272--CALLALT
      2283--CALLALT
I
      2037**DCL      2064<<ASSIGN   2065>>IF       2066<<ASSIGN   2067>>ASSIGN   2068>>ASSIGN   2069>>ASSIGN
      2307<<ASSIGN   2308>>ASSIGN
OOPS
      2394**PROC     2082--CALL     2087--CALL     2098--CALL     2109--CALL     2128--CALL     2139--CALL
      2150--CALL     2161--CALL     2172--CALL     2190--CALL     2201--CALL     2227--CALL     2245--CALL
      2256--CALL     2267--CALL     2278--CALL     2289--CALL     2293--CALL
SEND_APDU IN PROCEDURE EVNT
      2377**LABEL    2358--GOTO
VBLK
       955**DCL        12--PROC     2378<>CALL
VBLK.APDUERR
      1041**DCL      2074>>IF       2113>>IF
VBLK.CTX$
       969**DCL       909--IMP-PTR  2064>>ASSIGN   2067>>ASSIGN   2068>>ASSIGN   2069>>ASSIGN   2073>>IF
      2078>>ASSIGN   2090>>IF       2094>>ASSIGN   2101>>IF       2105>>ASSIGN   2112>>IF       2117>>ASSIGN
      2123>>ASSIGN   2131>>IF       2135>>ASSIGN   2142>>IF       2146>>ASSIGN   2153>>IF       2157>>ASSIGN
      2164>>IF       2168>>ASSIGN   2175>>IF       2179>>ASSIGN   2182>>IF       2186>>ASSIGN   2193>>IF
      2197>>ASSIGN   2204>>IF       2208>>ASSIGN   2211>>IF       2212>>IF       2216>>ASSIGN   2222>>ASSIGN
      2230>>IF       2234>>ASSIGN   2237>>IF       2241>>ASSIGN   2248>>IF       2252>>ASSIGN   2259>>IF
      2263>>ASSIGN   2270>>IF       2274>>ASSIGN   2281>>IF       2285>>ASSIGN   2307>>ASSIGN   2308>>ASSIGN
      2308>>ASSIGN   2310>>IF       2315>>IF       2318>>ASSIGN   2321>>IF       2323<>CALL     2324>>IF
      2329>>IF       2331>>ASSIGN   2331>>ASSIGN   2365>>IF       2366>>CALL     2368>>ASSIGN   2380>>ASSIGN
      2383>>IF       2398>>ASSIGN   2401>>ASSIGN   2401>>ASSIGN
VBLK.EVENT
      1042**DCL      2068>>ASSIGN   2071>>DOCASE   2377<<ASSIGN   2396>>IF
VBLK.FPT$
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:335  
       970**DCL      2062>>ASSIGN
XSC$DUMPFPT
      2030**DCL-ENT  2364--CALL
XSC$ENCODE
      2031**DCL-ENT  2378--CALL
XSC$GENERIC
       417**DCL      2364<>CALL     2366<>CALL
XSC$GENERIC.ERRDEF
       426**DCL       446--REDEF
XSC$GENERIC.FNC
       423**DCL      2362<<ASSIGN
XSC$RELCTX
      2032**DCL-ENT  2323--CALL
XSC_F$NOACSE
      1992**DCL      2372<>CALL
XSS$SCREECH
      2033**DCL-ENT  2372--CALL
XSS_TRACE
      2035**DCL      2363>>IF
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:336  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #008=XSC$AMACHINE File=XSC$ACSE.:XSA1TSI                           WED 10/01/97 11:53 Page:337  
              MINI UREF LISTING

XSC$AMACHINE      12**PROC

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:338  
     1718        1        /*T***********************************************************/
     1719        2        /*T*                                                         */
     1720        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1721        4        /*T*                                                         */
     1722        5        /*T***********************************************************/
     1723        6        /*F*    NAME:   XSC$ENCODE
     1724        7
     1725        8                XSC$ENCODE is called from XSC$AMACHINE when an APDU needs to be built
     1726        9                in order to send it to the other endpoint of an ACSE connection.
     1727       10        */
     1728       11        XSC$ENCODE: PROC( VBLK) ALTRET;
     1729       12        %INCLUDE XSS_SESSION_E;
     1730      577        %INCLUDE XSP_PRESENTATION_E;
     1731      676        %INCLUDE XSP_PRESENTATION_M;
     1732     2162            %XSP$CTXTNAME( NAME=CTXT, STCLASS=BASED);
     1733     2204        %INCLUDE XSC_ACSE_E;
     1734     2282        %INCLUDE XSC_ACSE_M;
     1735     2591            %XSC$PRIMITIVES( STCLASS="BASED( VBLK.FPT$)");
     1736     2904        %INCLUDE XSC_INTERNAL_E;
     1737     2992        %INCLUDE XSC_INTERNAL_M;
     1738     3337            %XSC$VBLK( NAME=VBLK, STCLASS="");
     1739     3443            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( VBLK.CTX$)");
     1740     3489            %ENCDECMACS;
     1741     3669        %INCLUDE XSP_ASN1_M;
     1742     4015            %XSP_ASN1_FPT( FPTN=AFPT, STCLASS="BASED( AFPT$)");
     1743     4035        %INCLUDE UM_CP6;
     1744     4887        %MACRO FATALDEF( NAME=XSC_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
     1745     4888                         ERR#=0, SEV=7);
     1746     4889            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
     1747     4890                          MON='0'B, ERR#=ERR#, SEV=SEV);
     1748     4891        %MEND;
     1749     4892        %INCLUDE XSC_PERR_C;
     1750     4969            %FATALDEF( NAME=XSC_F$ENCODE, ERR#=%F$ENCODE);
     1751     5017            /*E*  ERROR:  XSC-F$ENCODE-7
     1752     5018                MESSAGE:  VBLK.EVENT illegal for PDU encoder.
     1753     5019            */
     1754     5020        %EQU ITEMMAX = 20;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:339  
     1755     5021
     1756     5022    1       DCL XSC$PSEND ENTRY(1) ALTRET;
     1757     5023    1       DCL XSS$GETMEM ENTRY(3) ALTRET;
     1758     5024    1       DCL XSS$RELMEM ENTRY(1) ALTRET;
     1759     5025    1       DCL XSS$SCREECH ENTRY(1);
     1760     5026
     1761     5027    1       DCL XSC_ITEMCNT SBIN STATIC SYMDEF INIT( 0);
     1762     5028    1       DCL XSC_ITEMMAX SBIN STATIC SYMDEF INIT( %ITEMMAX);
     1763     5029
     1764     5030            %ITEM( NAME="ITEMLIST(0:%ITEMMAX)", STCLASS=AUTO);
     1765     5055    1       DCL AFPT$ PTR;
     1766     5056    1       DCL CTXT$ PTR;
     1767     5057    1       DCL I SBIN;
     1768     5058    1       DCL INFOLVL SBIN;
     1769     5059    1       DCL PDUBUF$ PTR;
     1770     5060    1       DCL PDUIDX SBIN;
     1771     5061    1       DCL PDUX UBIN HALF HALIGNED;
     1772     5062    1       DCL TEMP SBIN;
     1773     5063    1       DCL TEXT CHAR(16384) BASED CALIGNED;
     1774     5064    1       DCL 1 TXTC BASED( TXTC$) CALIGNED,
     1775     5065    1            2 LEN UBIN(9) CALIGNED,
     1776     5066    1            2 TXT CHAR( TXTC.LEN) CALIGNED;
     1777     5067    1       DCL TXTC$ PTR;
     1778     5068
     1779     5069    1       INFOLVL = 0;
     1780     5070    1       XSC_ITEMCNT = 0;
     1781     5071    1       ITEMLIST = '0'B;
     1782     5072            %LOAD( LVL=0, TYP=NONE, CON=Y);
     1783     5163    2       DO CASE( VBLK.EVENT);
     1784     5164        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:340  
     1785     5165        /*****************************************************************************
     1786     5166        *
     1787     5167        *       AARQ
     1788     5168        *
     1789     5169        *****************************************************************************/
     1790     5170    2           CASE( %XSC_CEV_AARQ);
     1791     5171                    %LOAD( LVL=1, TAG=A0, IMP=Y, TYP=SEQ);  /* AARQApdu */
     1792     5262                    %LOAD( LVL=2, TAG=C0, IMP=Y, TYP=BITSTR,
     1793     5263                            LEN=1, VAL='1'B);  /* ProtocolVersion */
     1794     5354    2               CTXT$ = XSC$ASSOCIATE.ACN$;
     1795     5355    3               IF CTXT$ ~= ADDR( NIL) THEN DO;
     1796     5356                        %LOAD( LVL=2, TAG=C1, TYP=OBJID,
     1797     5357                                VAL=CTXT$);  /* ApplicationContextName */
     1798     5448    3                   END;
     1799     5449    2               TXTC$ = XSC$ASSOCIATE.RAPT$;
     1800     5450    3               IF TXTC$ ~= ADDR( NIL) THEN DO;
     1801     5451                        %LOAD( LVL=2, TAG=C2, TYP=OCTETSTR,
     1802     5452                                LEN="TXTC.LEN", VAL="TXTC.TXT");  /* CalledAPTitle */
     1803     5543    3                   END;
     1804     5544    2               TXTC$ = XSC$ASSOCIATE.RAEQ$;
     1805     5545    3               IF TXTC$ ~= ADDR( NIL) THEN DO;
     1806     5546                        %LOAD( LVL=2, TAG=C3, TYP=OCTETSTR,
     1807     5547                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*CalledAEQualifier*/
     1808     5638    3                   END;
     1809     5639    3               IF XSC$ASSOCIATE.RAPID ~= 0 THEN DO;
     1810     5640                        %LOAD( LVL=2, TAG=C4, TYP=INTG,
     1811     5641                                LEN=4, VAL="XSC$ASSOCIATE.RAPID");
              5641                                    /* CalledAPInvocationId */
     1812     5732    3                   END;
     1813     5733    3               IF XSC$ASSOCIATE.RAEID ~= 0 THEN DO;
     1814     5734                        %LOAD( LVL=2, TAG=C5, TYP=INTG,
     1815     5735                                LEN=4, VAL="XSC$ASSOCIATE.RAEID");
              5735                                    /* CalledAEInvocationId */
     1816     5826    3                   END;
     1817     5827    2               TXTC$ = XSC$ASSOCIATE.IAPT$;
     1818     5828    3               IF TXTC$ ~= ADDR( NIL) THEN DO;
     1819     5829                        %LOAD( LVL=2, TAG=C6, TYP=OCTETSTR,
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:341  
     1820     5830                                LEN="TXTC.LEN", VAL="TXTC.TXT");  /* CallingAPTitle */
     1821     5921    3                   END;
     1822     5922    2               TXTC$ = XSC$ASSOCIATE.IAEQ$;
     1823     5923    3               IF TXTC$ ~= ADDR( NIL) THEN DO;
     1824     5924                        %LOAD( LVL=2, TAG=C7, TYP=OCTETSTR,
     1825     5925                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*CallingAEQualifier*/
     1826     6016    3                   END;
     1827     6017    3               IF XSC$ASSOCIATE.IAPID ~= 0 THEN DO;
     1828     6018                        %LOAD( LVL=2, TAG=C8, TYP=INTG,
     1829     6019                                LEN=4, VAL="XSC$ASSOCIATE.IAPID");
              6019                                    /* CallingAPInvocationId */
     1830     6110    3                   END;
     1831     6111    3               IF XSC$ASSOCIATE.IAEID ~= 0 THEN DO;
     1832     6112                        %LOAD( LVL=2, TAG=C9, TYP=INTG,
     1833     6113                                LEN=4, VAL="XSC$ASSOCIATE.IAEID");
              6113                                    /* CallingAEInvocationId */
     1834     6204    3                   END;
     1835     6205    2               TXTC$ = XSC$ASSOCIATE.IMPL$;
     1836     6206    3               IF TXTC$ ~= ADDR( NIL) THEN DO;
     1837     6207                        %LOAD( LVL=2, TAG=C29, IMP=Y, TYP=GRFSTR,
     1838     6208                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*ImplementationData*/
     1839     6299    3                   END;
     1840     6300    2               INFOLVL = 2;
     1841     6301        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:342  
     1842     6302        /*****************************************************************************
     1843     6303        *
     1844     6304        *       AARE+ and AARE-
     1845     6305        *
     1846     6306        *****************************************************************************/
     1847     6307    2           CASE( %XSC_CEV_AAREP,
     1848     6308    2                 %XSC_CEV_AAREN);
     1849     6309                    %LOAD( LVL=1, TAG=A1, IMP=Y, TYP=SEQ);  /* AAREApdu */
     1850     6400                    %LOAD( LVL=2, TAG=C0, IMP=Y, TYP=BITSTR,
     1851     6401                            LEN=1, VAL='1'B);  /* ProtocolVersion */
     1852     6492    2               CTXT$ = XSC$ASSOCIATE.ACN$;
     1853     6493    3               IF CTXT$ ~= ADDR( NIL) THEN DO;
     1854     6494                        %LOAD( LVL=2, TAG=C1, TYP=OBJID,
     1855     6495                                VAL=CTXT$);  /* ApplicationContextName */
     1856     6586    3                   END;
     1857     6587                    %LOAD( LVL=2, TAG=C2, TYP=INTG,
     1858     6588                            LEN=1, VAL="XSC$ASSOCIATE.RESULT");  /* Result */
     1859     6679                    %LOAD( LVL=2, TAG=C3, TYP=CHOICE);/* ResultSourceDiagnostic */
     1860     6770                    %LOAD( LVL=3, TAG=C1, TYP=INTG,
     1861     6771                            LEN=1, VAL="XSC$ASSOCIATE.RSDIAG");
     1862     6862    2               TXTC$ = XSC$ASSOCIATE.RAPT$;
     1863     6863    3               IF TXTC$ ~= ADDR( NIL) THEN DO;
     1864     6864                        %LOAD( LVL=2, TAG=C4, TYP=OCTETSTR,
     1865     6865                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*RespondingAPTitle*/
     1866     6956    3                   END;
     1867     6957    2               TXTC$ = XSC$ASSOCIATE.RAEQ$;
     1868     6958    3               IF TXTC$ ~= ADDR( NIL) THEN DO;
     1869     6959                        %LOAD( LVL=2, TAG=C5, TYP=OCTETSTR,
     1870     6960                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*RespondingAEQualifier*/
     1871     7051    3                   END;
     1872     7052    3               IF XSC$ASSOCIATE.RAPID ~= 0 THEN DO;
     1873     7053                        %LOAD( LVL=2, TAG=C6, TYP=INTG,
     1874     7054                                LEN=4, VAL="XSC$ASSOCIATE.RAPID");
              7054                                    /* RespondingAPInvocationId */
     1875     7145    3                   END;
     1876     7146    3               IF XSC$ASSOCIATE.RAEID ~= 0 THEN DO;
     1877     7147                        %LOAD( LVL=2, TAG=C9, TYP=INTG,
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:343  
     1878     7148                                LEN=4, VAL="XSC$ASSOCIATE.RAEID");
              7148                                    /* RespondingAEInvocationId */
     1879     7239    3                   END;
     1880     7240    2               TXTC$ = XSC$ASSOCIATE.IMPL$;
     1881     7241    3               IF TXTC$ ~= ADDR( NIL) THEN DO;
     1882     7242                        %LOAD( LVL=2, TAG=C29, IMP=Y, TYP=GRFSTR,
     1883     7243                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*ImplementationData*/
     1884     7334    3                   END;
     1885     7335    2               INFOLVL = 2;
     1886     7336        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:344  
     1887     7337        /*****************************************************************************
     1888     7338        *
     1889     7339        *       RLRQ
     1890     7340        *
     1891     7341        *****************************************************************************/
     1892     7342    2           CASE( %XSC_CEV_RLRQ);
     1893     7343                    %LOAD( LVL=1, TAG=A2, IMP=Y, TYP=SEQ);  /* RLRQApdu */
     1894     7434                    %LOAD( LVL=2, TAG=C0, IMP=Y, TYP=INTG,
     1895     7435                            LEN=1, VAL="XSC$RELEASE.REASON");  /* Reason */
     1896     7526    2               INFOLVL = 2;
     1897     7527        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:345  
     1898     7528        /*****************************************************************************
     1899     7529        *
     1900     7530        *       RLRE+ and RLRE-
     1901     7531        *
     1902     7532        *****************************************************************************/
     1903     7533    2           CASE( %XSC_CEV_RLREP,
     1904     7534    2                 %XSC_CEV_RLREN);
     1905     7535                    %LOAD( LVL=1, TAG=A3, IMP=Y, TYP=SEQ);  /* RLREApdu */
     1906     7626                    %LOAD( LVL=2, TAG=C0, IMP=Y, TYP=INTG,
     1907     7627                            LEN=1, VAL="XSC$RELEASE.REASON");  /* Reason */
     1908     7718    2               INFOLVL = 2;
     1909     7719        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:346  
     1910     7720        /*****************************************************************************
     1911     7721        *
     1912     7722        *       ABRT
     1913     7723        *
     1914     7724        *****************************************************************************/
     1915     7725    2           CASE( %XSC_CEV_ABRT);
     1916     7726                    %LOAD( LVL=1, TAG=A4, IMP=Y, TYP=SEQ);  /* ABRTApdu */
     1917     7817                    %LOAD( LVL=2, TAG=C0, IMP=Y, TYP=INTG,
     1918     7818                            LEN=1, VAL="XSC$U_ABORT.ABRTSRC");  /* AbortSource */
     1919     7909    2               INFOLVL = 2;
     1920     7910        /*****************************************************************************
     1921     7911        *
     1922     7912        *       Illegal VBLK.EVENT
     1923     7913        *
     1924     7914        *****************************************************************************/
     1925     7915    2           CASE( ELSE);
     1926     7916    2               CALL XSS$SCREECH( XSC_F$ENCODE);
     1927     7917    2           END;
     1928     7918        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:347  
     1929     7919            /* handle UserInformation if present */
     1930     7920    2       IF INFOLVL > 0 AND VBLK.DATA.SIZE > 0 THEN DO;
     1931     7921                %LOAD( LVL=INFOLVL, TAG=C30, IMP=Y, TYP=SEQOF);  /* UserInformation */
     1932     8012    2           INFOLVL = INFOLVL + 1;
     1933     8013    2           AFPT$ = XSC$GENERIC.DATA$;
     1934     8014    3           DO WHILE( AFPT$ ~= ADDR( NIL));
     1935     8015                    %LOAD( LVL=INFOLVL, TYP=EXTRN,
     1936     8016                            LEN="AFPT.NXTX", VAL="AFPT.BUF$->TEXT");
     1937     8107    3               AFPT$ = AFPT.LINK$;
     1938     8108    3               END;
     1939     8109    2           INFOLVL = INFOLVL - 1;
     1940     8110    2           END;
     1941     8111            /* Now, fix up the itemlist and build the PDU */
     1942     8112    1       CALL FIXITEMS;
     1943     8113    1       TEMP = ITEMLIST.X.LEN(0);  /* total length required for APDU */
     1944     8114    1       CALL XSS$GETMEM( PDUX, PDUBUF$, TEMP) ALTRET( OOPS);
     1945     8115    1       CALL BUILDPDU;
     1946     8116            /* Send the constructed PDU on to Presentation */
     1947     8117    1       VBLK.PDU.SIZE = PDUIDX;
     1948     8118    1       VBLK.PDU.PTR$ = PDUBUF$;
     1949     8119    1       CALL XSC$PSEND( VBLK)
     1950     8120    2       WHENALTRETURN DO;
     1951     8121    2           CALL XSS$RELMEM( PDUX);
     1952     8122    2   OOPS:
     1953     8123    2           ALTRETURN;
     1954     8124    2           END;
     1955     8125    1       CALL XSS$RELMEM( PDUX);
     1956     8126    1       RETURN;
     1957     8127        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:348  
     1958     8128        /*I*    NAME:   FIXITEMS
     1959     8129
     1960     8130                FIXITEMS is called to fix the itemlist.  'Fix'ing means trundling
     1961     8131                through the list figuring out the lengths of all constructor items
     1962     8132                now that we know how big each primitive item is.
     1963     8133        */
     1964     8134    1   FIXITEMS: PROC;
     1965     8135
     1966     8136    2       DCL I SBIN;
     1967     8137    2       DCL J SBIN;
     1968     8138    2       DCL LEN SBIN;
     1969     8139    2       DCL LVL SBIN;
     1970     8140    2       DCL TMP REDEF LVL SBIN;
     1971     8141    2       DCL UTMP REDEF LVL UBIN;
     1972     8142
     1973     8143    3       DO I = XSC_ITEMCNT - 1 DOWNTO 1;
     1974     8144    3           IF ITEMLIST.X.TAG( I) = 0 THEN
     1975     8145    3               ITEMLIST.X.TAG( I) = ITEMLIST.X.TYP( I);
     1976     8146    4           DO CASE( ITEMLIST.X.TYP( I));
     1977     8147    4               CASE( %XSC_TYP_BITSTR);
     1978     8148                        /* Have to convert bitstring lengths to bytelength + slack */
     1979     8149    4                   TMP = ITEMLIST.X.LEN( I);
     1980     8150    4                   IF TMP > 24 THEN
     1981     8151    4                       TMP = 24;  /* can't hold more than 24 bits in U */
     1982     8152    4                   ITEMLIST.X.LEN( I) = ( TMP + 15) / 8;  /* new bytelength */
     1983     8153    4                   UTMP = BITBIN( '007'O & BINBIT( 8-MOD( TMP, 8), 9)); /*slack*/
     1984     8154    4                   ITEMLIST.U( I) = UTMP*268435456 + ITEMLIST.U( I)/256;
     1985     8155                        /* U now has slack in highest 8 bits, followed by value */
     1986     8156    4               CASE( %XSC_TYP_NONE, %XSC_TYP_BOOL, %XSC_TYP_INTG,
     1987     8157    4                     %XSC_TYP_NULL, %XSC_TYP_SEQ, %XSC_TYP_SET,
     1988     8158    4                     %XSC_TYP_UTCTIM, %XSC_TYP_GENTIM, %XSC_TYP_CHOICE,
     1989     8159    4                     %XSC_TYP_SEQOF, %XSC_TYP_SETOF);
     1990     8160                        /* do nothing */
     1991     8161    4               CASE( %XSC_TYP_OBJID, %XSC_TYP_OBJDSCR);
     1992     8162    4                   ;  /*N* figure out final length by test-encoding */
     1993     8163    4               CASE( ELSE);
     1994     8164    4                   IF ITEMLIST.P( I) = ADDR( NIL) THEN
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:349  
     1995     8165    4                       ITEMLIST.X.LEN( I) = 0;  /* don't address NIL segment */
     1996     8166    4               END;
     1997     8167    3           LEN = 1;  /* 1 byte to represent length */
     1998     8168    3           TMP = ITEMLIST.X.LEN( I);
     1999     8169    3           IF TMP > 127 THEN
     2000     8170    4               DO WHILE( TMP > 0);
     2001     8171    4                   LEN = LEN + 1;  /* add another byte to represent length */
     2002     8172    4                   TMP = TMP / 256;  /* keep going to find length of length */
     2003     8173    4                   END;
     2004     8174                /* now add length of item itself */
     2005     8175    3           LEN = LEN + ITEMLIST.X.LEN( I);
     2006     8176                /* add length of tag if a tag will be encoded */
     2007     8177    3           IF ITEMLIST.X.TAG( I) ~= %XSC_TYP_NONE OR
     2008     8178    3                   ( ITEMLIST.X.TYP( I) ~= %XSC_TYP_NONE AND
     2009     8179    3                   ITEMLIST.X.IMP( I) = 0) THEN
     2010     8180    3               LEN = LEN + 1;  /* assume all tags 1 byte long... */
     2011     8181    3           LVL = ITEMLIST.X.LVL( I) - 1;
     2012     8182    3   INCRLOOP:
     2013     8183    4           DO J = I - 1 DOWNTO 0;
     2014     8184    5               IF LVL = ITEMLIST.X.LVL( J) THEN DO;
     2015     8185    5                   ITEMLIST.X.LEN( J) = LEN + ITEMLIST.X.LEN( J);
     2016     8186    5                   EXIT INCRLOOP;
     2017     8187    5                   END;
     2018     8188    4               END;
     2019     8189    3           END;
     2020     8190    2       RETURN;
     2021     8191
     2022     8192    2       END FIXITEMS;
     2023     8193        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:350  
     2024     8194        /*I*    NAME:   BUILDPDU
     2025     8195
     2026     8196                BUILDPDU is called to actually construct the PPDU from the itemlist.
     2027     8197        */
     2028     8198    1   BUILDPDU: PROC;
     2029     8199
     2030     8200    2       DCL BYTES CHAR( LEN) BASED;
     2031     8201    2       DCL I SBIN;
     2032     8202    2       DCL LEN SBIN;
     2033     8203    2       DCL TMP SBIN;
     2034     8204    2       DCL U36(0:1) UBIN;
     2035     8205    2       DCL U8(0:8) REDEF U36 UBIN(8) UNAL;
     2036     8206        %MACRO STORBYTE( BYT=0);
     2037     8207            CALL INSERT( PDUBUF$->TEXT, PDUIDX, 1, BINASC( BYT));
     2038     8208            PDUIDX = PDUIDX + 1;
     2039     8209        %MEND;
     2040     8210
     2041     8211    2       PDUIDX = 0;
     2042     8212    2       XSC_ITEMCNT = XSC_ITEMCNT - 1;
     2043     8213            /* Construct each item of the itemlist in turn.  Item 0 not used. */
     2044     8214    3       DO I = 1 TO XSC_ITEMCNT;
     2045     8215                /* Move the TAG field into the PDU buffer */
     2046     8216                %STORBYTE( BYT="ITEMLIST.X.TAG( I)");
     2047     8220                /* Move the length into the PDU buffer */
     2048     8221    3           TMP = ITEMLIST.X.LEN( I);
     2049     8222    4           IF TMP > 127 THEN DO;
     2050     8223    4               LEN = 0;
     2051     8224    5               DO WHILE( TMP > 0);
     2052     8225    5                   LEN = LEN + 1;
     2053     8226    5                   TMP = TMP / 256;
     2054     8227    5                   END;
     2055     8228                    %STORBYTE( BYT="LEN+128");
     2056     8232    4               CALL INSERT( PDUBUF$->TEXT, PDUIDX, LEN,
     2057     8233    4                       PINCRC( ADDR( ITEMLIST.X.LEN( I)), 4 - LEN)->BYTES);
     2058     8234    4               PDUIDX = PDUIDX + LEN;
     2059     8235    4               END;
     2060     8236    4           ELSE DO;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:351  
     2061     8237                    %STORBYTE( BYT="TMP");
     2062     8241    4               END;
     2063     8242    3           ;  /*N* handle case where TYP~=TAG and not IMP */
     2064     8243                /* And finally.... move the value itself into the PDU buffer */
     2065     8244    3           LEN = ITEMLIST.X.LEN( I);
     2066     8245    4           DO CASE( ITEMLIST.X.TYP( I));
     2067     8246    4               CASE( %XSC_TYP_NONE, %XSC_TYP_NULL,
     2068     8247    4                     %XSC_TYP_SEQ, %XSC_TYP_SEQOF,
     2069     8248    4                     %XSC_TYP_SET, %XSC_TYP_SETOF,
     2070     8249    4                     %XSC_TYP_CHOICE);
     2071     8250                        /* Set LEN zero so not to incr PDUIDX for enclosing item */
     2072     8251    4                   LEN = 0;
     2073     8252    4               CASE( %XSC_TYP_BOOL);  /* boolean */
     2074     8253    5                   IF ITEMLIST.S( I) ~= 0 THEN DO;
     2075     8254                            %STORBYTE( BYT="511");
     2076     8258    5                       END;
     2077     8259    5                   ELSE DO;
     2078     8260                            %STORBYTE( BYT="0");
     2079     8264    5                       END;
     2080     8265    4               CASE( %XSC_TYP_INTG);  /* signed integer of length LEN */
     2081     8266    4                   U36(0) = 0;
     2082     8267    4                   U36(1) = ITEMLIST.U( I);
     2083     8268    5                   DO WHILE( LEN > 0);
     2084     8269                            %STORBYTE( BYT="U8( 9 - LEN)");
     2085     8273    5                       LEN = LEN - 1;
     2086     8274    5                       END;
     2087     8275    4                   GOTO NEXTITEM;
     2088     8276    4               CASE( %XSC_TYP_BITSTR);  /* left-justified bitstring */
     2089     8277    4                   U36(0) = ITEMLIST.U( I);
     2090     8278    4                   U36(1) = 0;
     2091     8279    4                   TMP = 0;
     2092     8280    4                   IF LEN > 0 THEN
     2093     8281    5                       DO WHILE( TMP < LEN);
     2094     8282                            %STORBYTE( BYT="U8( TMP)");
     2095     8286    5                       TMP = TMP + 1;
     2096     8287    5                       END;
     2097     8288    4                   GOTO NEXTITEM;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:352  
     2098     8289    4               CASE( %XSC_TYP_OBJID,
     2099     8290    4                     %XSC_TYP_OBJDSCR);
     2100     8291    4                   ;  /*N* Encode into temp buffer, then move bytes in */
     2101     8292    4                   GOTO COMMON;  /*N* But for now, just move raw text... */
     2102     8293    4               CASE( %XSC_TYP_UTCTIM,
     2103     8294    4                     %XSC_TYP_GENTIM);  /* UTS to be converted to ISO time */
     2104     8295    4                   LEN = 0;  /*N* worry about this later... */
     2105     8296    4               CASE( ELSE);  /* anything else is pointer to LEN bytes of text */
     2106     8297    4   COMMON:
     2107     8298    4                   IF LEN > 0 THEN
     2108     8299    4                       CALL INSERT( PDUBUF$->TEXT, PDUIDX, LEN,
     2109     8300    4                               ITEMLIST.P( I)->BYTES);
     2110     8301    4               END;
     2111     8302    3           PDUIDX = LEN + PDUIDX;
     2112     8303    3   NEXTITEM:
     2113     8304    3           END;
     2114     8305    2       RETURN;
     2115     8306
     2116     8307    2       END BUILDPDU;
     2117     8308
     2118     8309    1       END XSC$ENCODE;
     2119     8310        %EOD;

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:353  
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSC$ENCODE.

   Procedure XSC$ENCODE requires 793 words for executable code.
   Procedure XSC$ENCODE requires 66 words of local(AUTO) storage.

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:354  

 Object Unit name= XSC$ENCODE                                 File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:53:12.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  XSC$ENCODE
    1   Data  even  none     2      2  XSC$ENCODE
    2   Proc  even  none   793   1431  XSC$ENCODE
    3  RoData even  none    17     21  XSC$ENCODE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  XSC$ENCODE

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  XSC_F$ENCODE                       1      0  XSC_ITEMCNT
    1      1  XSC_ITEMMAX
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:355  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 XSS$SCREECH
 yes     yes           Std       3 XSS$GETMEM
 yes     yes           Std       1 XSC$PSEND
 yes     yes           Std       1 XSS$RELMEM
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:356  


     1718        1        /*T***********************************************************/
     1719        2        /*T*                                                         */
     1720        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1721        4        /*T*                                                         */
     1722        5        /*T***********************************************************/
     1723        6        /*F*    NAME:   XSC$ENCODE
     1724        7
     1725        8                XSC$ENCODE is called from XSC$AMACHINE when an APDU needs to be built
     1726        9                in order to send it to the other endpoint of an ACSE connection.
     1727       10        */
     1728       11        XSC$ENCODE: PROC( VBLK) ALTRET;

     11  2 000000   000000 700200 xent  XSC$ENCODE   TSX0  ! X66_AUTO_1
         2 000001   000102 000001                    ZERO    66,1

     1729       12        %INCLUDE XSS_SESSION_E;
     1730      577        %INCLUDE XSP_PRESENTATION_E;
     1731      676        %INCLUDE XSP_PRESENTATION_M;
     1732     2162            %XSP$CTXTNAME( NAME=CTXT, STCLASS=BASED);
     1733     2204        %INCLUDE XSC_ACSE_E;
     1734     2282        %INCLUDE XSC_ACSE_M;
     1735     2591            %XSC$PRIMITIVES( STCLASS="BASED( VBLK.FPT$)");
     1736     2904        %INCLUDE XSC_INTERNAL_E;
     1737     2992        %INCLUDE XSC_INTERNAL_M;
     1738     3337            %XSC$VBLK( NAME=VBLK, STCLASS="");
     1739     3443            %XSC$CCTX( NAME=CCTX, STCLASS="BASED( VBLK.CTX$)");
     1740     3489            %ENCDECMACS;
     1741     3669        %INCLUDE XSP_ASN1_M;
     1742     4015            %XSP_ASN1_FPT( FPTN=AFPT, STCLASS="BASED( AFPT$)");
     1743     4035        %INCLUDE UM_CP6;
     1744     4887        %MACRO FATALDEF( NAME=XSC_FATAL, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
     1745     4888                         ERR#=0, SEV=7);
     1746     4889            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='C',
     1747     4890                          MON='0'B, ERR#=ERR#, SEV=SEV);
     1748     4891        %MEND;
     1749     4892        %INCLUDE XSC_PERR_C;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:357  
     1750     4969            %FATALDEF( NAME=XSC_F$ENCODE, ERR#=%F$ENCODE);
     1751     5017            /*E*  ERROR:  XSC-F$ENCODE-7
     1752     5018                MESSAGE:  VBLK.EVENT illegal for PDU encoder.
     1753     5019            */
     1754     5020        %EQU ITEMMAX = 20;
     1755     5021
     1756     5022    1       DCL XSC$PSEND ENTRY(1) ALTRET;
     1757     5023    1       DCL XSS$GETMEM ENTRY(3) ALTRET;
     1758     5024    1       DCL XSS$RELMEM ENTRY(1) ALTRET;
     1759     5025    1       DCL XSS$SCREECH ENTRY(1);
     1760     5026
     1761     5027    1       DCL XSC_ITEMCNT SBIN STATIC SYMDEF INIT( 0);
     1762     5028    1       DCL XSC_ITEMMAX SBIN STATIC SYMDEF INIT( %ITEMMAX);
     1763     5029
     1764     5030            %ITEM( NAME="ITEMLIST(0:%ITEMMAX)", STCLASS=AUTO);
     1765     5055    1       DCL AFPT$ PTR;
     1766     5056    1       DCL CTXT$ PTR;
     1767     5057    1       DCL I SBIN;
     1768     5058    1       DCL INFOLVL SBIN;
     1769     5059    1       DCL PDUBUF$ PTR;
     1770     5060    1       DCL PDUIDX SBIN;
     1771     5061    1       DCL PDUX UBIN HALF HALIGNED;
     1772     5062    1       DCL TEMP SBIN;
     1773     5063    1       DCL TEXT CHAR(16384) BASED CALIGNED;
     1774     5064    1       DCL 1 TXTC BASED( TXTC$) CALIGNED,
     1775     5065    1            2 LEN UBIN(9) CALIGNED,
     1776     5066    1            2 TXT CHAR( TXTC.LEN) CALIGNED;
     1777     5067    1       DCL TXTC$ PTR;
     1778     5068
     1779     5069    1       INFOLVL = 0;

   5069  2 000002   200061 450100                    STZ     INFOLVL,,AUTO

     1780     5070    1       XSC_ITEMCNT = 0;

   5070  2 000003   000000 450000 1                  STZ     XSC_ITEMCNT

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:358  
     1781     5071    1       ITEMLIST = '0'B;

   5071  2 000004   000100 100400                    MLR     fill='000'O
         2 000005   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000006   200004 000250                    ADSC9   ITEMLIST,,AUTO           cn=0,n=168

     1782     5072            %LOAD( LVL=0, TYP=NONE, CON=Y);

   5156  2 000007   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000010   000001 735000                    ALS     1
         2 000011   040000 236007                    LDQ     16384,DL
         2 000012   200004 756105                    STQ     ITEMLIST,AL,AUTO

   5159  2 000013   000000 054000 1                  AOS     XSC_ITEMCNT

     1783     5163    2       DO CASE( VBLK.EVENT);

   5163  2 000014   200003 470500                    LDP0    @VBLK,,AUTO
         2 000015   000006 720100                    LXL0    6,,PR0
         2 000016   000777 360003                    ANX0    511,DU
         2 000017   000010 100003                    CMPX0   8,DU
         2 000020   000022 602010 2                  TNC     s:5163+6,X0
         2 000021   000552 710000 2                  TRA     s:7916
         2 000022   000552 710000 2                  TRA     s:7916
         2 000023   000032 710000 2                  TRA     s:5255
         2 000024   000266 710000 2                  TRA     s:6393
         2 000025   000266 710000 2                  TRA     s:6393
         2 000026   000464 710000 2                  TRA     s:7427
         2 000027   000506 710000 2                  TRA     s:7619
         2 000030   000506 710000 2                  TRA     s:7619
         2 000031   000530 710000 2                  TRA     s:7810

     1784     5164        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:359  
     1785     5165        /*****************************************************************************
     1786     5166        *
     1787     5167        *       AARQ
     1788     5168        *
     1789     5169        *****************************************************************************/
     1790     5170    2           CASE( %XSC_CEV_AARQ);

     1791     5171                    %LOAD( LVL=1, TAG=A0, IMP=Y, TYP=SEQ);  /* AARQApdu */

   5255  2 000032   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000033   000001 735000                    ALS     1
         2 000034   140601 236007                    LDQ     49537,DL
         2 000035   200004 756105                    STQ     ITEMLIST,AL,AUTO

   5258  2 000036   000000 054000 1                  AOS     XSC_ITEMCNT

     1792     5262                    %LOAD( LVL=2, TAG=C0, IMP=Y, TYP=BITSTR,
     1793     5263                            LEN=1, VAL='1'B);  /* ProtocolVersion */

   5322  2 000037   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000040   000001 735000                    ALS     1
         2 000041   400000 236003                    LDQ     -131072,DU
         2 000042   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   5347  2 000043   000001 236000 3                  LDQ     1
         2 000044   200004 756105                    STQ     ITEMLIST,AL,AUTO

   5350  2 000045   000000 054000 1                  AOS     XSC_ITEMCNT

     1794     5354    2               CTXT$ = XSC$ASSOCIATE.ACN$;

   5354  2 000046   000001 471500                    LDP1    1,,PR0
         2 000047   100003 236100                    LDQ     3,,PR1
         2 000050   200057 756100                    STQ     CTXT$,,AUTO

     1795     5355    3               IF CTXT$ ~= ADDR( NIL) THEN DO;

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:360  
   5355  2 000051   000002 116000 3                  CMPQ    2
         2 000052   000065 600000 2                  TZE     s:5449

     1796     5356                        %LOAD( LVL=2, TAG=C1, TYP=OBJID,
     1797     5357                                VAL=CTXT$);  /* ApplicationContextName */

   5429  2 000053   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000054   000001 735000                    ALS     1
         2 000055   400000 036007                    ADLQ    -131072,DL
         2 000056   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   5441  2 000057   200057 471500                    LDP1    CTXT$,,AUTO
         2 000060   100000 236100                    LDQ     0,,PR1
         2 000061   777777 376003                    ANQ     -1,DU
         2 000062   201062 036007                    ADLQ    66098,DL
         2 000063   200004 756105                    STQ     ITEMLIST,AL,AUTO

   5444  2 000064   000000 054000 1                  AOS     XSC_ITEMCNT

     1798     5448    3                   END;

     1799     5449    2               TXTC$ = XSC$ASSOCIATE.RAPT$;

   5449  2 000065   000001 471500                    LDP1    1,,PR0
         2 000066   100010 236100                    LDQ     8,,PR1
         2 000067   200066 756100                    STQ     TXTC$,,AUTO

     1800     5450    3               IF TXTC$ ~= ADDR( NIL) THEN DO;

   5450  2 000070   000002 116000 3                  CMPQ    2
         2 000071   000107 600000 2                  TZE     s:5544

     1801     5451                        %LOAD( LVL=2, TAG=C2, TYP=OCTETSTR,
     1802     5452                                LEN="TXTC.LEN", VAL="TXTC.TXT");  /* CalledAPTitle */

   5533  2 000072   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000073   000001 735000                    ALS     1
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:361  
         2 000074   200000 036007                    ADLQ    65536,DL
         2 000075   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   5536  2 000076   200066 471500                    LDP1    TXTC$,,AUTO
         2 000077   000100 101500                    MRL     fill='000'O
         2 000100   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000101   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 000102   200076 236100                    LDQ     U36+2,,AUTO
         2 000103   000022 736000                    QLS     18
         2 000104   202042 036007                    ADLQ    66594,DL
         2 000105   200004 756105                    STQ     ITEMLIST,AL,AUTO

   5539  2 000106   000000 054000 1                  AOS     XSC_ITEMCNT

     1803     5543    3                   END;

     1804     5544    2               TXTC$ = XSC$ASSOCIATE.RAEQ$;

   5544  2 000107   000001 471500                    LDP1    1,,PR0
         2 000110   100011 236100                    LDQ     9,,PR1
         2 000111   200066 756100                    STQ     TXTC$,,AUTO

     1805     5545    3               IF TXTC$ ~= ADDR( NIL) THEN DO;

   5545  2 000112   000002 116000 3                  CMPQ    2
         2 000113   000131 600000 2                  TZE     s:5639

     1806     5546                        %LOAD( LVL=2, TAG=C3, TYP=OCTETSTR,
     1807     5547                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*CalledAEQualifier*/

   5628  2 000114   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000115   000001 735000                    ALS     1
         2 000116   200000 036007                    ADLQ    65536,DL
         2 000117   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   5631  2 000120   200066 471500                    LDP1    TXTC$,,AUTO
         2 000121   000100 101500                    MRL     fill='000'O
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:362  
         2 000122   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000123   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 000124   200076 236100                    LDQ     U36+2,,AUTO
         2 000125   000022 736000                    QLS     18
         2 000126   203042 036007                    ADLQ    67106,DL
         2 000127   200004 756105                    STQ     ITEMLIST,AL,AUTO

   5634  2 000130   000000 054000 1                  AOS     XSC_ITEMCNT

     1808     5638    3                   END;

     1809     5639    3               IF XSC$ASSOCIATE.RAPID ~= 0 THEN DO;

   5639  2 000131   000001 471500                    LDP1    1,,PR0
         2 000132   100012 235100                    LDA     10,,PR1
         2 000133   000142 600000 2                  TZE     s:5733

     1810     5640                        %LOAD( LVL=2, TAG=C4, TYP=INTG,
     1811     5641                                LEN=4, VAL="XSC$ASSOCIATE.RAPID");
              5641                                    /* CalledAPInvocationId */

   5694  2 000134   000000 236000 1                  LDQ     XSC_ITEMCNT
         2 000135   000001 736000                    QLS     1
         2 000136   200005 755106                    STA     ITEMLIST+1,QL,AUTO

   5725  2 000137   000003 235000 3                  LDA     3
         2 000140   200004 755106                    STA     ITEMLIST,QL,AUTO

   5728  2 000141   000000 054000 1                  AOS     XSC_ITEMCNT

     1812     5732    3                   END;

     1813     5733    3               IF XSC$ASSOCIATE.RAEID ~= 0 THEN DO;

   5733  2 000142   000001 471500                    LDP1    1,,PR0
         2 000143   100013 235100                    LDA     11,,PR1
         2 000144   000153 600000 2                  TZE     s:5827
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:363  

     1814     5734                        %LOAD( LVL=2, TAG=C5, TYP=INTG,
     1815     5735                                LEN=4, VAL="XSC$ASSOCIATE.RAEID");
              5735                                    /* CalledAEInvocationId */

   5788  2 000145   000000 236000 1                  LDQ     XSC_ITEMCNT
         2 000146   000001 736000                    QLS     1
         2 000147   200005 755106                    STA     ITEMLIST+1,QL,AUTO

   5819  2 000150   000004 235000 3                  LDA     4
         2 000151   200004 755106                    STA     ITEMLIST,QL,AUTO

   5822  2 000152   000000 054000 1                  AOS     XSC_ITEMCNT

     1816     5826    3                   END;

     1817     5827    2               TXTC$ = XSC$ASSOCIATE.IAPT$;

   5827  2 000153   000001 471500                    LDP1    1,,PR0
         2 000154   100004 236100                    LDQ     4,,PR1
         2 000155   200066 756100                    STQ     TXTC$,,AUTO

     1818     5828    3               IF TXTC$ ~= ADDR( NIL) THEN DO;

   5828  2 000156   000002 116000 3                  CMPQ    2
         2 000157   000175 600000 2                  TZE     s:5922

     1819     5829                        %LOAD( LVL=2, TAG=C6, TYP=OCTETSTR,
     1820     5830                                LEN="TXTC.LEN", VAL="TXTC.TXT");  /* CallingAPTitle */

   5911  2 000160   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000161   000001 735000                    ALS     1
         2 000162   200000 036007                    ADLQ    65536,DL
         2 000163   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   5914  2 000164   200066 471500                    LDP1    TXTC$,,AUTO
         2 000165   000100 101500                    MRL     fill='000'O
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:364  
         2 000166   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000167   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 000170   200076 236100                    LDQ     U36+2,,AUTO
         2 000171   000022 736000                    QLS     18
         2 000172   206042 036007                    ADLQ    68642,DL
         2 000173   200004 756105                    STQ     ITEMLIST,AL,AUTO

   5917  2 000174   000000 054000 1                  AOS     XSC_ITEMCNT

     1821     5921    3                   END;

     1822     5922    2               TXTC$ = XSC$ASSOCIATE.IAEQ$;

   5922  2 000175   000001 471500                    LDP1    1,,PR0
         2 000176   100005 236100                    LDQ     5,,PR1
         2 000177   200066 756100                    STQ     TXTC$,,AUTO

     1823     5923    3               IF TXTC$ ~= ADDR( NIL) THEN DO;

   5923  2 000200   000002 116000 3                  CMPQ    2
         2 000201   000217 600000 2                  TZE     s:6017

     1824     5924                        %LOAD( LVL=2, TAG=C7, TYP=OCTETSTR,
     1825     5925                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*CallingAEQualifier*/

   6006  2 000202   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000203   000001 735000                    ALS     1
         2 000204   200000 036007                    ADLQ    65536,DL
         2 000205   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   6009  2 000206   200066 471500                    LDP1    TXTC$,,AUTO
         2 000207   000100 101500                    MRL     fill='000'O
         2 000210   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000211   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 000212   200076 236100                    LDQ     U36+2,,AUTO
         2 000213   000022 736000                    QLS     18
         2 000214   207042 036007                    ADLQ    69154,DL
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:365  
         2 000215   200004 756105                    STQ     ITEMLIST,AL,AUTO

   6012  2 000216   000000 054000 1                  AOS     XSC_ITEMCNT

     1826     6016    3                   END;

     1827     6017    3               IF XSC$ASSOCIATE.IAPID ~= 0 THEN DO;

   6017  2 000217   000001 471500                    LDP1    1,,PR0
         2 000220   100006 235100                    LDA     6,,PR1
         2 000221   000230 600000 2                  TZE     s:6111

     1828     6018                        %LOAD( LVL=2, TAG=C8, TYP=INTG,
     1829     6019                                LEN=4, VAL="XSC$ASSOCIATE.IAPID");
              6019                                    /* CallingAPInvocationId */

   6072  2 000222   000000 236000 1                  LDQ     XSC_ITEMCNT
         2 000223   000001 736000                    QLS     1
         2 000224   200005 755106                    STA     ITEMLIST+1,QL,AUTO

   6103  2 000225   000005 235000 3                  LDA     5
         2 000226   200004 755106                    STA     ITEMLIST,QL,AUTO

   6106  2 000227   000000 054000 1                  AOS     XSC_ITEMCNT

     1830     6110    3                   END;

     1831     6111    3               IF XSC$ASSOCIATE.IAEID ~= 0 THEN DO;

   6111  2 000230   000001 471500                    LDP1    1,,PR0
         2 000231   100007 235100                    LDA     7,,PR1
         2 000232   000241 600000 2                  TZE     s:6205

     1832     6112                        %LOAD( LVL=2, TAG=C9, TYP=INTG,
     1833     6113                                LEN=4, VAL="XSC$ASSOCIATE.IAEID");
              6113                                    /* CallingAEInvocationId */

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:366  
   6166  2 000233   000000 236000 1                  LDQ     XSC_ITEMCNT
         2 000234   000001 736000                    QLS     1
         2 000235   200005 755106                    STA     ITEMLIST+1,QL,AUTO

   6197  2 000236   000006 235000 3                  LDA     6
         2 000237   200004 755106                    STA     ITEMLIST,QL,AUTO

   6200  2 000240   000000 054000 1                  AOS     XSC_ITEMCNT

     1834     6204    3                   END;

     1835     6205    2               TXTC$ = XSC$ASSOCIATE.IMPL$;

   6205  2 000241   000001 471500                    LDP1    1,,PR0
         2 000242   100014 236100                    LDQ     12,,PR1
         2 000243   200066 756100                    STQ     TXTC$,,AUTO

     1836     6206    3               IF TXTC$ ~= ADDR( NIL) THEN DO;

   6206  2 000244   000002 116000 3                  CMPQ    2
         2 000245   000263 600000 2                  TZE     s:6300

     1837     6207                        %LOAD( LVL=2, TAG=C29, IMP=Y, TYP=GRFSTR,
     1838     6208                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*ImplementationData*/

   6289  2 000246   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000247   000001 735000                    ALS     1
         2 000250   200000 036007                    ADLQ    65536,DL
         2 000251   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   6292  2 000252   200066 471500                    LDP1    TXTC$,,AUTO
         2 000253   000100 101500                    MRL     fill='000'O
         2 000254   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000255   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 000256   200076 236100                    LDQ     U36+2,,AUTO
         2 000257   000022 736000                    QLS     18
         2 000260   235712 036007                    ADLQ    80842,DL
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:367  
         2 000261   200004 756105                    STQ     ITEMLIST,AL,AUTO

   6295  2 000262   000000 054000 1                  AOS     XSC_ITEMCNT

     1839     6299    3                   END;

     1840     6300    2               INFOLVL = 2;

   6300  2 000263   000002 235007                    LDA     2,DL
         2 000264   200061 755100                    STA     INFOLVL,,AUTO
         2 000265   000556 710000 2                  TRA     s:7920

     1841     6301        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:368  
     1842     6302        /*****************************************************************************
     1843     6303        *
     1844     6304        *       AARE+ and AARE-
     1845     6305        *
     1846     6306        *****************************************************************************/
     1847     6307    2           CASE( %XSC_CEV_AAREP,

     1848     6308    2                 %XSC_CEV_AAREN);
     1849     6309                    %LOAD( LVL=1, TAG=A1, IMP=Y, TYP=SEQ);  /* AAREApdu */

   6393  2 000266   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000267   000001 735000                    ALS     1
         2 000270   141601 236007                    LDQ     50049,DL
         2 000271   200004 756105                    STQ     ITEMLIST,AL,AUTO

   6396  2 000272   000000 054000 1                  AOS     XSC_ITEMCNT

     1850     6400                    %LOAD( LVL=2, TAG=C0, IMP=Y, TYP=BITSTR,
     1851     6401                            LEN=1, VAL='1'B);  /* ProtocolVersion */

   6460  2 000273   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000274   000001 735000                    ALS     1
         2 000275   400000 236003                    LDQ     -131072,DU
         2 000276   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   6485  2 000277   000001 236000 3                  LDQ     1
         2 000300   200004 756105                    STQ     ITEMLIST,AL,AUTO

   6488  2 000301   000000 054000 1                  AOS     XSC_ITEMCNT

     1852     6492    2               CTXT$ = XSC$ASSOCIATE.ACN$;

   6492  2 000302   000001 471500                    LDP1    1,,PR0
         2 000303   100003 236100                    LDQ     3,,PR1
         2 000304   200057 756100                    STQ     CTXT$,,AUTO

     1853     6493    3               IF CTXT$ ~= ADDR( NIL) THEN DO;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:369  

   6493  2 000305   000002 116000 3                  CMPQ    2
         2 000306   000321 600000 2                  TZE     s:6641

     1854     6494                        %LOAD( LVL=2, TAG=C1, TYP=OBJID,
     1855     6495                                VAL=CTXT$);  /* ApplicationContextName */

   6567  2 000307   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000310   000001 735000                    ALS     1
         2 000311   400000 036007                    ADLQ    -131072,DL
         2 000312   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   6579  2 000313   200057 471500                    LDP1    CTXT$,,AUTO
         2 000314   100000 236100                    LDQ     0,,PR1
         2 000315   777777 376003                    ANQ     -1,DU
         2 000316   201062 036007                    ADLQ    66098,DL
         2 000317   200004 756105                    STQ     ITEMLIST,AL,AUTO

   6582  2 000320   000000 054000 1                  AOS     XSC_ITEMCNT

     1856     6586    3                   END;

     1857     6587                    %LOAD( LVL=2, TAG=C2, TYP=INTG,
     1858     6588                            LEN=1, VAL="XSC$ASSOCIATE.RESULT");  /* Result */

   6641  2 000321   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000322   000001 735000                    ALS     1
         2 000323   000001 471500                    LDP1    1,,PR0
         2 000324   100000 236100                    LDQ     0,,PR1
         2 000325   000777 376007                    ANQ     511,DL
         2 000326   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   6672  2 000327   000007 236000 3                  LDQ     7
         2 000330   200004 756105                    STQ     ITEMLIST,AL,AUTO

   6675  2 000331   000000 054000 1                  AOS     XSC_ITEMCNT

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:370  
     1859     6679                    %LOAD( LVL=2, TAG=C3, TYP=CHOICE);/* ResultSourceDiagnostic */

   6763  2 000332   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000333   000001 735000                    ALS     1
         2 000334   203152 236007                    LDQ     67178,DL
         2 000335   200004 756105                    STQ     ITEMLIST,AL,AUTO

   6766  2 000336   000000 054000 1                  AOS     XSC_ITEMCNT

     1860     6770                    %LOAD( LVL=3, TAG=C1, TYP=INTG,
     1861     6771                            LEN=1, VAL="XSC$ASSOCIATE.RSDIAG");

   6824  2 000337   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000340   000001 735000                    ALS     1
         2 000341   000001 471500                    LDP1    1,,PR0
         2 000342   100000 236100                    LDQ     0,,PR1
         2 000343   000011 772000                    QRL     9
         2 000344   000777 376007                    ANQ     511,DL
         2 000345   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   6855  2 000346   000010 236000 3                  LDQ     8
         2 000347   200004 756105                    STQ     ITEMLIST,AL,AUTO

   6858  2 000350   000000 054000 1                  AOS     XSC_ITEMCNT

     1862     6862    2               TXTC$ = XSC$ASSOCIATE.RAPT$;

   6862  2 000351   000001 471500                    LDP1    1,,PR0
         2 000352   100010 236100                    LDQ     8,,PR1
         2 000353   200066 756100                    STQ     TXTC$,,AUTO

     1863     6863    3               IF TXTC$ ~= ADDR( NIL) THEN DO;

   6863  2 000354   000002 116000 3                  CMPQ    2
         2 000355   000373 600000 2                  TZE     s:6957

     1864     6864                        %LOAD( LVL=2, TAG=C4, TYP=OCTETSTR,
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:371  
     1865     6865                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*RespondingAPTitle*/

   6946  2 000356   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000357   000001 735000                    ALS     1
         2 000360   200000 036007                    ADLQ    65536,DL
         2 000361   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   6949  2 000362   200066 471500                    LDP1    TXTC$,,AUTO
         2 000363   000100 101500                    MRL     fill='000'O
         2 000364   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000365   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 000366   200076 236100                    LDQ     U36+2,,AUTO
         2 000367   000022 736000                    QLS     18
         2 000370   204042 036007                    ADLQ    67618,DL
         2 000371   200004 756105                    STQ     ITEMLIST,AL,AUTO

   6952  2 000372   000000 054000 1                  AOS     XSC_ITEMCNT

     1866     6956    3                   END;

     1867     6957    2               TXTC$ = XSC$ASSOCIATE.RAEQ$;

   6957  2 000373   000001 471500                    LDP1    1,,PR0
         2 000374   100011 236100                    LDQ     9,,PR1
         2 000375   200066 756100                    STQ     TXTC$,,AUTO

     1868     6958    3               IF TXTC$ ~= ADDR( NIL) THEN DO;

   6958  2 000376   000002 116000 3                  CMPQ    2
         2 000377   000415 600000 2                  TZE     s:7052

     1869     6959                        %LOAD( LVL=2, TAG=C5, TYP=OCTETSTR,
     1870     6960                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*RespondingAEQualifier*/

   7041  2 000400   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000401   000001 735000                    ALS     1
         2 000402   200000 036007                    ADLQ    65536,DL
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:372  
         2 000403   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   7044  2 000404   200066 471500                    LDP1    TXTC$,,AUTO
         2 000405   000100 101500                    MRL     fill='000'O
         2 000406   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000407   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 000410   200076 236100                    LDQ     U36+2,,AUTO
         2 000411   000022 736000                    QLS     18
         2 000412   205042 036007                    ADLQ    68130,DL
         2 000413   200004 756105                    STQ     ITEMLIST,AL,AUTO

   7047  2 000414   000000 054000 1                  AOS     XSC_ITEMCNT

     1871     7051    3                   END;

     1872     7052    3               IF XSC$ASSOCIATE.RAPID ~= 0 THEN DO;

   7052  2 000415   000001 471500                    LDP1    1,,PR0
         2 000416   100012 235100                    LDA     10,,PR1
         2 000417   000426 600000 2                  TZE     s:7146

     1873     7053                        %LOAD( LVL=2, TAG=C6, TYP=INTG,
     1874     7054                                LEN=4, VAL="XSC$ASSOCIATE.RAPID");
              7054                                    /* RespondingAPInvocationId */

   7107  2 000420   000000 236000 1                  LDQ     XSC_ITEMCNT
         2 000421   000001 736000                    QLS     1
         2 000422   200005 755106                    STA     ITEMLIST+1,QL,AUTO

   7138  2 000423   000011 235000 3                  LDA     9
         2 000424   200004 755106                    STA     ITEMLIST,QL,AUTO

   7141  2 000425   000000 054000 1                  AOS     XSC_ITEMCNT

     1875     7145    3                   END;

     1876     7146    3               IF XSC$ASSOCIATE.RAEID ~= 0 THEN DO;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:373  

   7146  2 000426   000001 471500                    LDP1    1,,PR0
         2 000427   100013 235100                    LDA     11,,PR1
         2 000430   000437 600000 2                  TZE     s:7240

     1877     7147                        %LOAD( LVL=2, TAG=C9, TYP=INTG,
     1878     7148                                LEN=4, VAL="XSC$ASSOCIATE.RAEID");
              7148                                    /* RespondingAEInvocationId */

   7201  2 000431   000000 236000 1                  LDQ     XSC_ITEMCNT
         2 000432   000001 736000                    QLS     1
         2 000433   200005 755106                    STA     ITEMLIST+1,QL,AUTO

   7232  2 000434   000006 235000 3                  LDA     6
         2 000435   200004 755106                    STA     ITEMLIST,QL,AUTO

   7235  2 000436   000000 054000 1                  AOS     XSC_ITEMCNT

     1879     7239    3                   END;

     1880     7240    2               TXTC$ = XSC$ASSOCIATE.IMPL$;

   7240  2 000437   000001 471500                    LDP1    1,,PR0
         2 000440   100014 236100                    LDQ     12,,PR1
         2 000441   200066 756100                    STQ     TXTC$,,AUTO

     1881     7241    3               IF TXTC$ ~= ADDR( NIL) THEN DO;

   7241  2 000442   000002 116000 3                  CMPQ    2
         2 000443   000461 600000 2                  TZE     s:7335

     1882     7242                        %LOAD( LVL=2, TAG=C29, IMP=Y, TYP=GRFSTR,
     1883     7243                                LEN="TXTC.LEN", VAL="TXTC.TXT");/*ImplementationData*/

   7324  2 000444   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000445   000001 735000                    ALS     1
         2 000446   200000 036007                    ADLQ    65536,DL
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:374  
         2 000447   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   7327  2 000450   200066 471500                    LDP1    TXTC$,,AUTO
         2 000451   000100 101500                    MRL     fill='000'O
         2 000452   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         2 000453   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 000454   200076 236100                    LDQ     U36+2,,AUTO
         2 000455   000022 736000                    QLS     18
         2 000456   235712 036007                    ADLQ    80842,DL
         2 000457   200004 756105                    STQ     ITEMLIST,AL,AUTO

   7330  2 000460   000000 054000 1                  AOS     XSC_ITEMCNT

     1884     7334    3                   END;

     1885     7335    2               INFOLVL = 2;

   7335  2 000461   000002 235007                    LDA     2,DL
         2 000462   200061 755100                    STA     INFOLVL,,AUTO
         2 000463   000556 710000 2                  TRA     s:7920

     1886     7336        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:375  
     1887     7337        /*****************************************************************************
     1888     7338        *
     1889     7339        *       RLRQ
     1890     7340        *
     1891     7341        *****************************************************************************/
     1892     7342    2           CASE( %XSC_CEV_RLRQ);

     1893     7343                    %LOAD( LVL=1, TAG=A2, IMP=Y, TYP=SEQ);  /* RLRQApdu */

   7427  2 000464   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000465   000001 735000                    ALS     1
         2 000466   142601 236007                    LDQ     50561,DL
         2 000467   200004 756105                    STQ     ITEMLIST,AL,AUTO

   7430  2 000470   000000 054000 1                  AOS     XSC_ITEMCNT

     1894     7434                    %LOAD( LVL=2, TAG=C0, IMP=Y, TYP=INTG,
     1895     7435                            LEN=1, VAL="XSC$RELEASE.REASON");  /* Reason */

   7488  2 000471   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000472   000001 735000                    ALS     1
         2 000473   000001 471500                    LDP1    1,,PR0
         2 000474   100000 236100                    LDQ     0,,PR1
         2 000475   000011 772000                    QRL     9
         2 000476   000777 376007                    ANQ     511,DL
         2 000477   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   7519  2 000500   000012 236000 3                  LDQ     10
         2 000501   200004 756105                    STQ     ITEMLIST,AL,AUTO

   7522  2 000502   000000 054000 1                  AOS     XSC_ITEMCNT

     1896     7526    2               INFOLVL = 2;

   7526  2 000503   000002 235007                    LDA     2,DL
         2 000504   200061 755100                    STA     INFOLVL,,AUTO
         2 000505   000556 710000 2                  TRA     s:7920
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:376  

     1897     7527        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:377  
     1898     7528        /*****************************************************************************
     1899     7529        *
     1900     7530        *       RLRE+ and RLRE-
     1901     7531        *
     1902     7532        *****************************************************************************/
     1903     7533    2           CASE( %XSC_CEV_RLREP,

     1904     7534    2                 %XSC_CEV_RLREN);
     1905     7535                    %LOAD( LVL=1, TAG=A3, IMP=Y, TYP=SEQ);  /* RLREApdu */

   7619  2 000506   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000507   000001 735000                    ALS     1
         2 000510   143601 236007                    LDQ     51073,DL
         2 000511   200004 756105                    STQ     ITEMLIST,AL,AUTO

   7622  2 000512   000000 054000 1                  AOS     XSC_ITEMCNT

     1906     7626                    %LOAD( LVL=2, TAG=C0, IMP=Y, TYP=INTG,
     1907     7627                            LEN=1, VAL="XSC$RELEASE.REASON");  /* Reason */

   7680  2 000513   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000514   000001 735000                    ALS     1
         2 000515   000001 471500                    LDP1    1,,PR0
         2 000516   100000 236100                    LDQ     0,,PR1
         2 000517   000011 772000                    QRL     9
         2 000520   000777 376007                    ANQ     511,DL
         2 000521   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   7711  2 000522   000012 236000 3                  LDQ     10
         2 000523   200004 756105                    STQ     ITEMLIST,AL,AUTO

   7714  2 000524   000000 054000 1                  AOS     XSC_ITEMCNT

     1908     7718    2               INFOLVL = 2;

   7718  2 000525   000002 235007                    LDA     2,DL
         2 000526   200061 755100                    STA     INFOLVL,,AUTO
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:378  
         2 000527   000556 710000 2                  TRA     s:7920

     1909     7719        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:379  
     1910     7720        /*****************************************************************************
     1911     7721        *
     1912     7722        *       ABRT
     1913     7723        *
     1914     7724        *****************************************************************************/
     1915     7725    2           CASE( %XSC_CEV_ABRT);

     1916     7726                    %LOAD( LVL=1, TAG=A4, IMP=Y, TYP=SEQ);  /* ABRTApdu */

   7810  2 000530   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000531   000001 735000                    ALS     1
         2 000532   144601 236007                    LDQ     51585,DL
         2 000533   200004 756105                    STQ     ITEMLIST,AL,AUTO

   7813  2 000534   000000 054000 1                  AOS     XSC_ITEMCNT

     1917     7817                    %LOAD( LVL=2, TAG=C0, IMP=Y, TYP=INTG,
     1918     7818                            LEN=1, VAL="XSC$U_ABORT.ABRTSRC");  /* AbortSource */

   7871  2 000535   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000536   000001 735000                    ALS     1
         2 000537   000001 471500                    LDP1    1,,PR0
         2 000540   100000 236100                    LDQ     0,,PR1
         2 000541   000011 772000                    QRL     9
         2 000542   000777 376007                    ANQ     511,DL
         2 000543   200005 756105                    STQ     ITEMLIST+1,AL,AUTO

   7902  2 000544   000012 236000 3                  LDQ     10
         2 000545   200004 756105                    STQ     ITEMLIST,AL,AUTO

   7905  2 000546   000000 054000 1                  AOS     XSC_ITEMCNT

     1919     7909    2               INFOLVL = 2;

   7909  2 000547   000002 235007                    LDA     2,DL
         2 000550   200061 755100                    STA     INFOLVL,,AUTO
         2 000551   000556 710000 2                  TRA     s:7920
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:380  

     1920     7910        /*****************************************************************************
     1921     7911        *
     1922     7912        *       Illegal VBLK.EVENT
     1923     7913        *
     1924     7914        *****************************************************************************/
     1925     7915    2           CASE( ELSE);

     1926     7916    2               CALL XSS$SCREECH( XSC_F$ENCODE);

   7916  2 000552   000014 630400 3                  EPPR0   12
         2 000553   000013 631400 3                  EPPR1   11
         2 000554   000000 701000 xent               TSX1    XSS$SCREECH
         2 000555   000000 011000                    NOP     0

     1927     7917    2           END;

     1928     7918        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:381  
     1929     7919            /* handle UserInformation if present */
     1930     7920    2       IF INFOLVL > 0 AND VBLK.DATA.SIZE > 0 THEN DO;

   7920  2 000556   200061 235100                    LDA     INFOLVL,,AUTO
         2 000557   000617 604400 2                  TMOZ    s:8112
         2 000560   200003 470500                    LDP0    @VBLK,,AUTO
         2 000561   000005 235100                    LDA     5,,PR0
         2 000562   000617 604400 2                  TMOZ    s:8112

     1931     7921                %LOAD( LVL=INFOLVL, TAG=C30, IMP=Y, TYP=SEQOF);  /* UserInformation */

   8005  2 000563   000000 236000 1                  LDQ     XSC_ITEMCNT
         2 000564   000001 736000                    QLS     1
         2 000565   200061 235100                    LDA     INFOLVL,,AUTO
         2 000566   276560 035007                    ADLA    97648,DL
         2 000567   200004 755106                    STA     ITEMLIST,QL,AUTO

   8008  2 000570   000000 054000 1                  AOS     XSC_ITEMCNT

     1932     8012    2           INFOLVL = INFOLVL + 1;

   8012  2 000571   200061 054100                    AOS     INFOLVL,,AUTO

     1933     8013    2           AFPT$ = XSC$GENERIC.DATA$;

   8013  2 000572   000001 471500                    LDP1    1,,PR0
         2 000573   100002 236100                    LDQ     2,,PR1
         2 000574   200056 756100                    STQ     AFPT$,,AUTO

     1934     8014    3           DO WHILE( AFPT$ ~= ADDR( NIL));

   8014  2 000575   000613 710000 2                  TRA     s:8108

     1935     8015                    %LOAD( LVL=INFOLVL, TYP=EXTRN,
     1936     8016                            LEN="AFPT.NXTX", VAL="AFPT.BUF$->TEXT");

   8097  2 000576   000000 235000 1                  LDA     XSC_ITEMCNT
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:382  
         2 000577   000001 735000                    ALS     1
         2 000600   200056 470500                    LDP0    AFPT$,,AUTO
         2 000601   000001 471500                    LDP1    1,,PR0
         2 000602   200005 451505                    STP1    ITEMLIST+1,AL,AUTO

   8100  2 000603   000014 236100                    LDQ     12,,PR0
         2 000604   000022 736000                    QLS     18
         2 000605   200061 036100                    ADLQ    INFOLVL,,AUTO
         2 000606   010100 036007                    ADLQ    4160,DL
         2 000607   200004 756105                    STQ     ITEMLIST,AL,AUTO

   8103  2 000610   000000 054000 1                  AOS     XSC_ITEMCNT

     1937     8107    3               AFPT$ = AFPT.LINK$;

   8107  2 000611   000004 236100                    LDQ     4,,PR0
         2 000612   200056 756100                    STQ     AFPT$,,AUTO

     1938     8108    3               END;

   8108  2 000613   000002 116000 3                  CMPQ    2
         2 000614   000576 601000 2                  TNZ     s:8097

     1939     8109    2           INFOLVL = INFOLVL - 1;

   8109  2 000615   000001 336007                    LCQ     1,DL
         2 000616   200061 056100                    ASQ     INFOLVL,,AUTO

     1940     8110    2           END;

     1941     8111            /* Now, fix up the itemlist and build the PDU */
     1942     8112    1       CALL FIXITEMS;

   8112  2 000617   000670 701000 2                  TSX1    FIXITEMS
         2 000620   000000 011000                    NOP     0

     1943     8113    1       TEMP = ITEMLIST.X.LEN(0);  /* total length required for APDU */
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:383  

   8113  2 000621   200004 235100                    LDA     ITEMLIST,,AUTO
         2 000622   000022 771000                    ARL     18
         2 000623   200065 755100                    STA     TEMP,,AUTO

     1944     8114    1       CALL XSS$GETMEM( PDUX, PDUBUF$, TEMP) ALTRET( OOPS);

   8114  2 000624   200065 630500                    EPPR0   TEMP,,AUTO
         2 000625   200100 450500                    STP0    U36+4,,AUTO
         2 000626   200062 631500                    EPPR1   PDUBUF$,,AUTO
         2 000627   200077 451500                    STP1    U36+3,,AUTO
         2 000630   200064 633500                    EPPR3   PDUX,,AUTO
         2 000631   200076 453500                    STP3    U36+2,,AUTO
         2 000632   200076 630500                    EPPR0   U36+2,,AUTO
         2 000633   000015 631400 3                  EPPR1   13
         2 000634   000000 701000 xent               TSX1    XSS$GETMEM
         2 000635   000660 702000 2                  TSX2    OOPS

     1945     8115    1       CALL BUILDPDU;

   8115  2 000636   001113 701000 2                  TSX1    BUILDPDU
         2 000637   000000 011000                    NOP     0

     1946     8116            /* Send the constructed PDU on to Presentation */
     1947     8117    1       VBLK.PDU.SIZE = PDUIDX;

   8117  2 000640   200003 470500                    LDP0    @VBLK,,AUTO
         2 000641   200063 235100                    LDA     PDUIDX,,AUTO
         2 000642   000003 755100                    STA     3,,PR0

     1948     8118    1       VBLK.PDU.PTR$ = PDUBUF$;

   8118  2 000643   200062 236100                    LDQ     PDUBUF$,,AUTO
         2 000644   000002 756100                    STQ     2,,PR0

     1949     8119    1       CALL XSC$PSEND( VBLK)

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:384  
   8119  2 000645   200003 630500                    EPPR0   @VBLK,,AUTO
         2 000646   000013 631400 3                  EPPR1   11
         2 000647   000000 701000 xent               TSX1    XSC$PSEND
         2 000650   000652 702000 2                  TSX2    s:8121
         2 000651   000661 710000 2                  TRA     s:8125

     1950     8120    2       WHENALTRETURN DO;

     1951     8121    2           CALL XSS$RELMEM( PDUX);

   8121  2 000652   200064 630500                    EPPR0   PDUX,,AUTO
         2 000653   200076 450500                    STP0    U36+2,,AUTO
         2 000654   200076 630500                    EPPR0   U36+2,,AUTO
         2 000655   000013 631400 3                  EPPR1   11
         2 000656   000000 701000 xent               TSX1    XSS$RELMEM
         2 000657   000000 011000                    NOP     0

     1952     8122    2   OOPS:
     1953     8123    2           ALTRETURN;

   8123  2 000660   000000 702200 xent  OOPS         TSX2  ! X66_AALT

     1954     8124    2           END;
     1955     8125    1       CALL XSS$RELMEM( PDUX);

   8125  2 000661   200064 630500                    EPPR0   PDUX,,AUTO
         2 000662   200076 450500                    STP0    U36+2,,AUTO
         2 000663   200076 630500                    EPPR0   U36+2,,AUTO
         2 000664   000013 631400 3                  EPPR1   11
         2 000665   000000 701000 xent               TSX1    XSS$RELMEM
         2 000666   000000 011000                    NOP     0

     1956     8126    1       RETURN;

   8126  2 000667   000000 702200 xent               TSX2  ! X66_ARET

     1957     8127        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:385  
     1958     8128        /*I*    NAME:   FIXITEMS
     1959     8129
     1960     8130                FIXITEMS is called to fix the itemlist.  'Fix'ing means trundling
     1961     8131                through the list figuring out the lengths of all constructor items
     1962     8132                now that we know how big each primitive item is.
     1963     8133        */
     1964     8134    1   FIXITEMS: PROC;

   8134  2 000670   200070 741300       FIXITEMS     STX1  ! TXTC$+2,,AUTO

     1965     8135
     1966     8136    2       DCL I SBIN;
     1967     8137    2       DCL J SBIN;
     1968     8138    2       DCL LEN SBIN;
     1969     8139    2       DCL LVL SBIN;
     1970     8140    2       DCL TMP REDEF LVL SBIN;
     1971     8141    2       DCL UTMP REDEF LVL UBIN;
     1972     8142
     1973     8143    3       DO I = XSC_ITEMCNT - 1 DOWNTO 1;

   8143  2 000671   000000 235000 1                  LDA     XSC_ITEMCNT
         2 000672   000001 135007                    SBLA    1,DL
         2 000673   200071 755100                    STA     I,,AUTO
         2 000674   001107 710000 2                  TRA     s:8189+2

     1974     8144    3           IF ITEMLIST.X.TAG( I) = 0 THEN

   8144  2 000675   200071 235100                    LDA     I,,AUTO
         2 000676   000001 735000                    ALS     1
         2 000677   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 000700   377000 316007                    CANQ    130560,DL
         2 000701   000707 601000 2                  TNZ     s:8146

     1975     8145    3               ITEMLIST.X.TAG( I) = ITEMLIST.X.TYP( I);

   8145  2 000702   000370 376007                    ANQ     248,DL
         2 000703   000006 736000                    QLS     6
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:386  
         2 000704   200004 676105                    ERQ     ITEMLIST,AL,AUTO
         2 000705   377000 376007                    ANQ     130560,DL
         2 000706   200004 656105                    ERSQ    ITEMLIST,AL,AUTO

     1976     8146    4           DO CASE( ITEMLIST.X.TYP( I));

   8146  2 000707   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 000710   000003 772000                    QRL     3
         2 000711   000037 376007                    ANQ     31,DL
         2 000712   000031 116007                    CMPQ    25,DL
         2 000713   000715 602006 2                  TNC     s:8146+6,QL
         2 000714   001013 710000 2                  TRA     s:8164
         2 000715   001020 710000 2                  TRA     s:8167
         2 000716   001020 710000 2                  TRA     s:8167
         2 000717   001020 710000 2                  TRA     s:8167
         2 000720   000746 710000 2                  TRA     s:8149
         2 000721   001013 710000 2                  TRA     s:8164
         2 000722   001020 710000 2                  TRA     s:8167
         2 000723   001020 710000 2                  TRA     s:8167
         2 000724   001020 710000 2                  TRA     s:8167
         2 000725   001013 710000 2                  TRA     s:8164
         2 000726   001013 710000 2                  TRA     s:8164
         2 000727   001013 710000 2                  TRA     s:8164
         2 000730   001013 710000 2                  TRA     s:8164
         2 000731   001013 710000 2                  TRA     s:8164
         2 000732   001020 710000 2                  TRA     s:8167
         2 000733   001020 710000 2                  TRA     s:8167
         2 000734   001020 710000 2                  TRA     s:8167
         2 000735   001020 710000 2                  TRA     s:8167
         2 000736   001020 710000 2                  TRA     s:8167
         2 000737   001013 710000 2                  TRA     s:8164
         2 000740   001013 710000 2                  TRA     s:8164
         2 000741   001013 710000 2                  TRA     s:8164
         2 000742   001013 710000 2                  TRA     s:8164
         2 000743   001013 710000 2                  TRA     s:8164
         2 000744   001020 710000 2                  TRA     s:8167
         2 000745   001020 710000 2                  TRA     s:8167
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:387  

     1977     8147    4               CASE( %XSC_TYP_BITSTR);

     1978     8148                        /* Have to convert bitstring lengths to bytelength + slack */
     1979     8149    4                   TMP = ITEMLIST.X.LEN( I);

   8149  2 000746   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 000747   000022 772000                    QRL     18
         2 000750   200074 756100                    STQ     LVL,,AUTO

     1980     8150    4                   IF TMP > 24 THEN

   8150  2 000751   000030 116007                    CMPQ    24,DL
         2 000752   000755 604400 2                  TMOZ    s:8152

     1981     8151    4                       TMP = 24;  /* can't hold more than 24 bits in U */

   8151  2 000753   000030 235007                    LDA     24,DL
         2 000754   200074 755100                    STA     LVL,,AUTO

     1982     8152    4                   ITEMLIST.X.LEN( I) = ( TMP + 15) / 8;  /* new bytelength */

   8152  2 000755   200071 235100                    LDA     I,,AUTO
         2 000756   000001 735000                    ALS     1
         2 000757   200074 236100                    LDQ     LVL,,AUTO
         2 000760   000017 036007                    ADLQ    15,DL
         2 000761   000000 620005                    EAX0    0,AL
         2 000762   000010 506007                    DIV     8,DL
         2 000763   000000 621006                    EAX1    0,QL
         2 000764   200004 741110                    STX1    ITEMLIST,X0,AUTO

     1983     8153    4                   UTMP = BITBIN( '007'O & BINBIT( 8-MOD( TMP, 8), 9)); /*slack*/

   8153  2 000765   200074 236100                    LDQ     LVL,,AUTO
         2 000766   000010 506007                    DIV     8,DL
         2 000767   000044 733000                    LRS     36
         2 000770   000016 676000 3                  ERQ     14
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:388  
         2 000771   000011 036007                    ADLQ    9,DL
         2 000772   000033 736000                    QLS     27
         2 000773   000022 772000                    QRL     18
         2 000774   000000 620006                    EAX0    0,QL
         2 000775   007000 360003                    ANX0    3584,DU
         2 000776   000000 636010                    EAQ     0,X0
         2 000777   000033 772000                    QRL     27
         2 001000   200074 756100                    STQ     LVL,,AUTO

     1984     8154    4                   ITEMLIST.U( I) = UTMP*268435456 + ITEMLIST.U( I)/256;

   8154  2 001001   200071 235100                    LDA     I,,AUTO
         2 001002   000001 735000                    ALS     1
         2 001003   200005 236105                    LDQ     ITEMLIST+1,AL,AUTO
         2 001004   000010 772000                    QRL     8
         2 001005   200076 756100                    STQ     U36+2,,AUTO
         2 001006   200074 236100                    LDQ     LVL,,AUTO
         2 001007   000034 736000                    QLS     28
         2 001010   200076 036100                    ADLQ    U36+2,,AUTO
         2 001011   200005 756105                    STQ     ITEMLIST+1,AL,AUTO
         2 001012   001020 710000 2                  TRA     s:8167

     1985     8155                        /* U now has slack in highest 8 bits, followed by value */
     1986     8156    4               CASE( %XSC_TYP_NONE, %XSC_TYP_BOOL, %XSC_TYP_INTG,

     1987     8157    4                     %XSC_TYP_NULL, %XSC_TYP_SEQ, %XSC_TYP_SET,
     1988     8158    4                     %XSC_TYP_UTCTIM, %XSC_TYP_GENTIM, %XSC_TYP_CHOICE,
     1989     8159    4                     %XSC_TYP_SEQOF, %XSC_TYP_SETOF);
     1990     8160                        /* do nothing */
     1991     8161    4               CASE( %XSC_TYP_OBJID, %XSC_TYP_OBJDSCR);

     1992     8162    4                   ;  /*N* figure out final length by test-encoding */
     1993     8163    4               CASE( ELSE);

     1994     8164    4                   IF ITEMLIST.P( I) = ADDR( NIL) THEN

   8164  2 001013   200005 236105                    LDQ     ITEMLIST+1,AL,AUTO
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:389  
         2 001014   000002 116000 3                  CMPQ    2
         2 001015   001020 601000 2                  TNZ     s:8167

     1995     8165    4                       ITEMLIST.X.LEN( I) = 0;  /* don't address NIL segment */

   8165  2 001016   000000 220003                    LDX0    0,DU
         2 001017   200004 740105                    STX0    ITEMLIST,AL,AUTO

     1996     8166    4               END;

     1997     8167    3           LEN = 1;  /* 1 byte to represent length */

   8167  2 001020   000001 236007                    LDQ     1,DL
         2 001021   200073 756100                    STQ     LEN,,AUTO

     1998     8168    3           TMP = ITEMLIST.X.LEN( I);

   8168  2 001022   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001023   000022 772000                    QRL     18
         2 001024   200074 756100                    STQ     LVL,,AUTO

     1999     8169    3           IF TMP > 127 THEN

   8169  2 001025   000177 116007                    CMPQ    127,DL
         2 001026   001037 604400 2                  TMOZ    s:8175

     2000     8170    4               DO WHILE( TMP > 0);

   8170  2 001027   000000 116003                    CMPQ    0,DU
         2 001030   001037 604400 2                  TMOZ    s:8175

     2001     8171    4                   LEN = LEN + 1;  /* add another byte to represent length */

   8171  2 001031   200073 054100                    AOS     LEN,,AUTO

     2002     8172    4                   TMP = TMP / 256;  /* keep going to find length of length */

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:390  
   8172  2 001032   200074 236100                    LDQ     LVL,,AUTO
         2 001033   000400 506007                    DIV     256,DL
         2 001034   200074 756100                    STQ     LVL,,AUTO

     2003     8173    4                   END;

   8173  2 001035   000000 116003                    CMPQ    0,DU
         2 001036   001031 605400 2                  TPNZ    s:8171

     2004     8174                /* now add length of item itself */
     2005     8175    3           LEN = LEN + ITEMLIST.X.LEN( I);

   8175  2 001037   200071 235100                    LDA     I,,AUTO
         2 001040   000001 735000                    ALS     1
         2 001041   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001042   000022 772000                    QRL     18
         2 001043   200073 036100                    ADLQ    LEN,,AUTO
         2 001044   200073 756100                    STQ     LEN,,AUTO

     2006     8176                /* add length of tag if a tag will be encoded */
     2007     8177    3           IF ITEMLIST.X.TAG( I) ~= %XSC_TYP_NONE OR

   8177  2 001045   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001046   377000 316007                    CANQ    130560,DL
         2 001047   001054 601000 2                  TNZ     s:8180
         2 001050   000370 316007                    CANQ    248,DL
         2 001051   001055 600000 2                  TZE     s:8181
         2 001052   000400 316007                    CANQ    256,DL
         2 001053   001055 601000 2                  TNZ     s:8181

     2008     8178    3                   ( ITEMLIST.X.TYP( I) ~= %XSC_TYP_NONE AND
     2009     8179    3                   ITEMLIST.X.IMP( I) = 0) THEN
     2010     8180    3               LEN = LEN + 1;  /* assume all tags 1 byte long... */

   8180  2 001054   200073 054100                    AOS     LEN,,AUTO

     2011     8181    3           LVL = ITEMLIST.X.LVL( I) - 1;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:391  

   8181  2 001055   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001056   000007 376007                    ANQ     7,DL
         2 001057   000001 136007                    SBLQ    1,DL
         2 001060   200074 756100                    STQ     LVL,,AUTO

     2012     8182    3   INCRLOOP:
     2013     8183    4           DO J = I - 1 DOWNTO 0;

   8183  2 001061   200071 235100       INCRLOOP     LDA     I,,AUTO
         2 001062   000001 135007                    SBLA    1,DL
         2 001063   200072 755100                    STA     J,,AUTO
         2 001064   001103 710000 2                  TRA     s:8188+2

     2014     8184    5               IF LVL = ITEMLIST.X.LVL( J) THEN DO;

   8184  2 001065   200072 235100                    LDA     J,,AUTO
         2 001066   000001 735000                    ALS     1
         2 001067   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001070   000007 376007                    ANQ     7,DL
         2 001071   200074 116100                    CMPQ    LVL,,AUTO
         2 001072   001101 601000 2                  TNZ     s:8188

     2015     8185    5                   ITEMLIST.X.LEN( J) = LEN + ITEMLIST.X.LEN( J);

   8185  2 001073   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001074   000022 772000                    QRL     18
         2 001075   200073 036100                    ADLQ    LEN,,AUTO
         2 001076   000000 620006                    EAX0    0,QL
         2 001077   200004 740105                    STX0    ITEMLIST,AL,AUTO

     2016     8186    5                   EXIT INCRLOOP;

   8186  2 001100   001105 710000 2                  TRA     s:8189

     2017     8187    5                   END;
     2018     8188    4               END;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:392  

   8188  2 001101   000001 336007                    LCQ     1,DL
         2 001102   200072 056100                    ASQ     J,,AUTO
         2 001103   200072 235100                    LDA     J,,AUTO
         2 001104   001065 605000 2                  TPL     s:8184

     2019     8189    3           END;

   8189  2 001105   000001 336007                    LCQ     1,DL
         2 001106   200071 056100                    ASQ     I,,AUTO
         2 001107   200071 235100                    LDA     I,,AUTO
         2 001110   000675 605400 2                  TPNZ    s:8144

     2020     8190    2       RETURN;

   8190  2 001111   200070 221300                    LDX1  ! TXTC$+2,,AUTO
         2 001112   000001 702211                    TSX2  ! 1,X1

     2021     8191
     2022     8192    2       END FIXITEMS;
     2023     8193        %EJECT;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:393  
     2024     8194        /*I*    NAME:   BUILDPDU
     2025     8195
     2026     8196                BUILDPDU is called to actually construct the PPDU from the itemlist.
     2027     8197        */
     2028     8198    1   BUILDPDU: PROC;

   8198  2 001113   200070 741300       BUILDPDU     STX1  ! TXTC$+2,,AUTO

     2029     8199
     2030     8200    2       DCL BYTES CHAR( LEN) BASED;
     2031     8201    2       DCL I SBIN;
     2032     8202    2       DCL LEN SBIN;
     2033     8203    2       DCL TMP SBIN;
     2034     8204    2       DCL U36(0:1) UBIN;
     2035     8205    2       DCL U8(0:8) REDEF U36 UBIN(8) UNAL;
     2036     8206        %MACRO STORBYTE( BYT=0);
     2037     8207            CALL INSERT( PDUBUF$->TEXT, PDUIDX, 1, BINASC( BYT));
     2038     8208            PDUIDX = PDUIDX + 1;
     2039     8209        %MEND;
     2040     8210
     2041     8211    2       PDUIDX = 0;

   8211  2 001114   200063 450100                    STZ     PDUIDX,,AUTO

     2042     8212    2       XSC_ITEMCNT = XSC_ITEMCNT - 1;

   8212  2 001115   000001 336007                    LCQ     1,DL
         2 001116   000000 056000 1                  ASQ     XSC_ITEMCNT

     2043     8213            /* Construct each item of the itemlist in turn.  Item 0 not used. */
     2044     8214    3       DO I = 1 TO XSC_ITEMCNT;

   8214  2 001117   000001 235007                    LDA     1,DL
         2 001120   200071 755100                    STA     I,,AUTO
         2 001121   001424 710000 2                  TRA     NEXTITEM+1

     2045     8215                /* Move the TAG field into the PDU buffer */
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:394  
     2046     8216                %STORBYTE( BYT="ITEMLIST.X.TAG( I)");

   8217  2 001122   200071 235100                    LDA     I,,AUTO
         2 001123   000001 735000                    ALS     1
         2 001124   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001125   000011 772000                    QRL     9
         2 001126   000377 376007                    ANQ     255,DL
         2 001127   000033 736000                    QLS     27
         2 001130   000017 276000 3                  ORQ     15
         2 001131   200076 756100                    STQ     U36+2,,AUTO
         2 001132   200062 470500                    LDP0    PDUBUF$,,AUTO
         2 001133   200063 235100                    LDA     PDUIDX,,AUTO
         2 001134   040105 100500                    MLR     fill='040'O
         2 001135   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 001136   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

   8218  2 001137   200063 054100                    AOS     PDUIDX,,AUTO

     2047     8220                /* Move the length into the PDU buffer */
     2048     8221    3           TMP = ITEMLIST.X.LEN( I);

   8221  2 001140   200071 235100                    LDA     I,,AUTO
         2 001141   000001 735000                    ALS     1
         2 001142   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001143   000022 772000                    QRL     18
         2 001144   200073 756100                    STQ     TMP,,AUTO

     2049     8222    4           IF TMP > 127 THEN DO;

   8222  2 001145   000177 116007                    CMPQ    127,DL
         2 001146   001212 604400 2                  TMOZ    s:8238

     2050     8223    4               LEN = 0;

   8223  2 001147   200072 450100                    STZ     LEN,,AUTO

     2051     8224    5               DO WHILE( TMP > 0);
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:395  

   8224  2 001150   000000 116003                    CMPQ    0,DU
         2 001151   001160 604400 2                  TMOZ    s:8229

     2052     8225    5                   LEN = LEN + 1;

   8225  2 001152   200072 054100                    AOS     LEN,,AUTO

     2053     8226    5                   TMP = TMP / 256;

   8226  2 001153   200073 236100                    LDQ     TMP,,AUTO
         2 001154   000400 506007                    DIV     256,DL
         2 001155   200073 756100                    STQ     TMP,,AUTO

     2054     8227    5                   END;

   8227  2 001156   000000 116003                    CMPQ    0,DU
         2 001157   001152 605400 2                  TPNZ    s:8225

     2055     8228                    %STORBYTE( BYT="LEN+128");

   8229  2 001160   200072 236100                    LDQ     LEN,,AUTO
         2 001161   000200 036007                    ADLQ    128,DL
         2 001162   000033 736000                    QLS     27
         2 001163   000017 276000 3                  ORQ     15
         2 001164   200076 756100                    STQ     U36+2,,AUTO
         2 001165   200062 470500                    LDP0    PDUBUF$,,AUTO
         2 001166   200063 235100                    LDA     PDUIDX,,AUTO
         2 001167   040105 100500                    MLR     fill='040'O
         2 001170   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 001171   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

   8230  2 001172   200063 054100                    AOS     PDUIDX,,AUTO

     2056     8232    4               CALL INSERT( PDUBUF$->TEXT, PDUIDX, LEN,

   8232  2 001173   200071 336100                    LCQ     I,,AUTO
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:396  
         2 001174   000003 736000                    QLS     3
         2 001175   200072 036100                    ADLQ    LEN,,AUTO
         2 001176   000016 676000 3                  ERQ     14
         2 001177   000001 036007                    ADLQ    1,DL
         2 001200   200072 720100                    LXL0    LEN,,AUTO
         2 001201   200062 470500                    LDP0    PDUBUF$,,AUTO
         2 001202   200063 235100                    LDA     PDUIDX,,AUTO
         2 001203   040145 100546                    MLR     fill='040'O
         2 001204   200005 000010                    ADSC9   ITEMLIST+1,Q,AUTO        cn=0,n=*X0
         2 001205   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0

     2057     8233    4                       PINCRC( ADDR( ITEMLIST.X.LEN( I)), 4 - LEN)->BYTES);
     2058     8234    4               PDUIDX = PDUIDX + LEN;

   8234  2 001206   200063 236100                    LDQ     PDUIDX,,AUTO
         2 001207   200072 036100                    ADLQ    LEN,,AUTO
         2 001210   200063 756100                    STQ     PDUIDX,,AUTO

     2059     8235    4               END;

   8235  2 001211   001223 710000 2                  TRA     s:8244

     2060     8236    4           ELSE DO;

     2061     8237                    %STORBYTE( BYT="TMP");

   8238  2 001212   000033 736000                    QLS     27
         2 001213   000017 276000 3                  ORQ     15
         2 001214   200076 756100                    STQ     U36+2,,AUTO
         2 001215   200062 470500                    LDP0    PDUBUF$,,AUTO
         2 001216   200063 235100                    LDA     PDUIDX,,AUTO
         2 001217   040105 100500                    MLR     fill='040'O
         2 001220   200076 000004                    ADSC9   U36+2,,AUTO              cn=0,n=4
         2 001221   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

   8239  2 001222   200063 054100                    AOS     PDUIDX,,AUTO

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:397  
     2062     8241    4               END;

     2063     8242    3           ;  /*N* handle case where TYP~=TAG and not IMP */
     2064     8243                /* And finally.... move the value itself into the PDU buffer */
     2065     8244    3           LEN = ITEMLIST.X.LEN( I);

   8244  2 001223   200071 235100                    LDA     I,,AUTO
         2 001224   000001 735000                    ALS     1
         2 001225   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001226   000022 772000                    QRL     18
         2 001227   200072 756100                    STQ     LEN,,AUTO

     2066     8245    4           DO CASE( ITEMLIST.X.TYP( I));

   8245  2 001230   200004 236105                    LDQ     ITEMLIST,AL,AUTO
         2 001231   000003 772000                    QRL     3
         2 001232   000037 376007                    ANQ     31,DL
         2 001233   000031 116007                    CMPQ    25,DL
         2 001234   001236 602006 2                  TNC     s:8245+6,QL
         2 001235   001404 710000 2                  TRA     COMMON
         2 001236   001267 710000 2                  TRA     s:8251
         2 001237   001271 710000 2                  TRA     s:8253
         2 001240   001311 710000 2                  TRA     s:8266
         2 001241   001343 710000 2                  TRA     s:8277
         2 001242   001404 710000 2                  TRA     COMMON
         2 001243   001267 710000 2                  TRA     s:8251
         2 001244   001401 710000 2                  TRA     s:8292
         2 001245   001401 710000 2                  TRA     s:8292
         2 001246   001404 710000 2                  TRA     COMMON
         2 001247   001404 710000 2                  TRA     COMMON
         2 001250   001404 710000 2                  TRA     COMMON
         2 001251   001404 710000 2                  TRA     COMMON
         2 001252   001404 710000 2                  TRA     COMMON
         2 001253   001267 710000 2                  TRA     s:8251
         2 001254   001267 710000 2                  TRA     s:8251
         2 001255   001267 710000 2                  TRA     s:8251
         2 001256   001267 710000 2                  TRA     s:8251
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:398  
         2 001257   001267 710000 2                  TRA     s:8251
         2 001260   001404 710000 2                  TRA     COMMON
         2 001261   001404 710000 2                  TRA     COMMON
         2 001262   001404 710000 2                  TRA     COMMON
         2 001263   001404 710000 2                  TRA     COMMON
         2 001264   001404 710000 2                  TRA     COMMON
         2 001265   001402 710000 2                  TRA     s:8295
         2 001266   001402 710000 2                  TRA     s:8295

     2067     8246    4               CASE( %XSC_TYP_NONE, %XSC_TYP_NULL,

     2068     8247    4                     %XSC_TYP_SEQ, %XSC_TYP_SEQOF,
     2069     8248    4                     %XSC_TYP_SET, %XSC_TYP_SETOF,
     2070     8249    4                     %XSC_TYP_CHOICE);
     2071     8250                        /* Set LEN zero so not to incr PDUIDX for enclosing item */
     2072     8251    4                   LEN = 0;

   8251  2 001267   200072 450100                    STZ     LEN,,AUTO
         2 001270   001420 710000 2                  TRA     s:8302

     2073     8252    4               CASE( %XSC_TYP_BOOL);  /* boolean */

     2074     8253    5                   IF ITEMLIST.S( I) ~= 0 THEN DO;

   8253  2 001271   200005 235105                    LDA     ITEMLIST+1,AL,AUTO
         2 001272   001302 600000 2                  TZE     s:8261

     2075     8254                            %STORBYTE( BYT="511");

   8255  2 001273   200062 470500                    LDP0    PDUBUF$,,AUTO
         2 001274   200063 235100                    LDA     PDUIDX,,AUTO
         2 001275   040105 100400                    MLR     fill='040'O
         2 001276   000020 000001 3                  ADSC9   16                       cn=0,n=1
         2 001277   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

   8256  2 001300   200063 054100                    AOS     PDUIDX,,AUTO

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:399  
     2076     8258    5                       END;

   8258  2 001301   001420 710000 2                  TRA     s:8302

     2077     8259    5                   ELSE DO;

     2078     8260                            %STORBYTE( BYT="0");

   8261  2 001302   200062 470500                    LDP0    PDUBUF$,,AUTO
         2 001303   200063 235100                    LDA     PDUIDX,,AUTO
         2 001304   040105 100400                    MLR     fill='040'O
         2 001305   000017 000001 3                  ADSC9   15                       cn=0,n=1
         2 001306   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

   8262  2 001307   200063 054100                    AOS     PDUIDX,,AUTO

     2079     8264    5                       END;

   8264  2 001310   001420 710000 2                  TRA     s:8302

     2080     8265    4               CASE( %XSC_TYP_INTG);  /* signed integer of length LEN */

     2081     8266    4                   U36(0) = 0;

   8266  2 001311   200074 450100                    STZ     U36,,AUTO

     2082     8267    4                   U36(1) = ITEMLIST.U( I);

   8267  2 001312   200005 235105                    LDA     ITEMLIST+1,AL,AUTO
         2 001313   200075 755100                    STA     U36+1,,AUTO

     2083     8268    5                   DO WHILE( LEN > 0);

   8268  2 001314   200072 236100                    LDQ     LEN,,AUTO
         2 001315   001342 604400 2                  TMOZ    s:8275

     2084     8269                            %STORBYTE( BYT="U8( 9 - LEN)");
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:400  

   8270  2 001316   200072 335100                    LCA     LEN,,AUTO
         2 001317   000003 735000                    ALS     3
         2 001320   001322 605000 2                  TPL     s:8270+4
         2 001321   000044 035003                    ADLA    36,DU
         2 001322   003100 061505                    CSR     bolr='003'O
         2 001323   200076 000010                    BDSC    U36+2,A,AUTO             by=0,bit=0,n=8
         2 001324   200076 000044                    BDSC    U36+2,,AUTO              by=0,bit=0,n=36
         2 001325   200076 236100                    LDQ     U36+2,,AUTO
         2 001326   000033 736000                    QLS     27
         2 001327   000017 276000 3                  ORQ     15
         2 001330   200077 756100                    STQ     U36+3,,AUTO
         2 001331   200062 470500                    LDP0    PDUBUF$,,AUTO
         2 001332   200063 235100                    LDA     PDUIDX,,AUTO
         2 001333   040105 100500                    MLR     fill='040'O
         2 001334   200077 000004                    ADSC9   U36+3,,AUTO              cn=0,n=4
         2 001335   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

   8271  2 001336   200063 054100                    AOS     PDUIDX,,AUTO

     2085     8273    5                       LEN = LEN - 1;

   8273  2 001337   000001 336007                    LCQ     1,DL
         2 001340   200072 056100                    ASQ     LEN,,AUTO

     2086     8274    5                       END;

   8274  2 001341   001316 605400 2                  TPNZ    s:8270

     2087     8275    4                   GOTO NEXTITEM;

   8275  2 001342   001423 710000 2                  TRA     NEXTITEM

     2088     8276    4               CASE( %XSC_TYP_BITSTR);  /* left-justified bitstring */

     2089     8277    4                   U36(0) = ITEMLIST.U( I);

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:401  
   8277  2 001343   200005 235105                    LDA     ITEMLIST+1,AL,AUTO
         2 001344   200074 755100                    STA     U36,,AUTO

     2090     8278    4                   U36(1) = 0;

   8278  2 001345   200075 450100                    STZ     U36+1,,AUTO

     2091     8279    4                   TMP = 0;

   8279  2 001346   200073 450100                    STZ     TMP,,AUTO

     2092     8280    4                   IF LEN > 0 THEN

   8280  2 001347   200072 236100                    LDQ     LEN,,AUTO
         2 001350   001400 604400 2                  TMOZ    s:8288

     2093     8281    5                       DO WHILE( TMP < LEN);

   8281  2 001351   200073 116100                    CMPQ    TMP,,AUTO
         2 001352   001400 604400 2                  TMOZ    s:8288

     2094     8282                            %STORBYTE( BYT="U8( TMP)");

   8283  2 001353   200073 235100                    LDA     TMP,,AUTO
         2 001354   000003 735000                    ALS     3
         2 001355   001357 605000 2                  TPL     s:8283+4
         2 001356   000044 035003                    ADLA    36,DU
         2 001357   003100 061505                    CSR     bolr='003'O
         2 001360   200074 000010                    BDSC    U36,A,AUTO               by=0,bit=0,n=8
         2 001361   200076 000044                    BDSC    U36+2,,AUTO              by=0,bit=0,n=36
         2 001362   200076 236100                    LDQ     U36+2,,AUTO
         2 001363   000033 736000                    QLS     27
         2 001364   000017 276000 3                  ORQ     15
         2 001365   200077 756100                    STQ     U36+3,,AUTO
         2 001366   200062 470500                    LDP0    PDUBUF$,,AUTO
         2 001367   200063 235100                    LDA     PDUIDX,,AUTO
         2 001370   040105 100500                    MLR     fill='040'O
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:402  
         2 001371   200077 000004                    ADSC9   U36+3,,AUTO              cn=0,n=4
         2 001372   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

   8284  2 001373   200063 054100                    AOS     PDUIDX,,AUTO

     2095     8286    5                       TMP = TMP + 1;

   8286  2 001374   200073 054100                    AOS     TMP,,AUTO

     2096     8287    5                       END;

   8287  2 001375   200073 236100                    LDQ     TMP,,AUTO
         2 001376   200072 116100                    CMPQ    LEN,,AUTO
         2 001377   001353 604000 2                  TMI     s:8283

     2097     8288    4                   GOTO NEXTITEM;

   8288  2 001400   001423 710000 2                  TRA     NEXTITEM

     2098     8289    4               CASE( %XSC_TYP_OBJID,

     2099     8290    4                     %XSC_TYP_OBJDSCR);
     2100     8291    4                   ;  /*N* Encode into temp buffer, then move bytes in */
     2101     8292    4                   GOTO COMMON;  /*N* But for now, just move raw text... */

   8292  2 001401   001404 710000 2                  TRA     COMMON

     2102     8293    4               CASE( %XSC_TYP_UTCTIM,

     2103     8294    4                     %XSC_TYP_GENTIM);  /* UTS to be converted to ISO time */
     2104     8295    4                   LEN = 0;  /*N* worry about this later... */

   8295  2 001402   200072 450100                    STZ     LEN,,AUTO
         2 001403   001420 710000 2                  TRA     s:8302

     2105     8296    4               CASE( ELSE);  /* anything else is pointer to LEN bytes of text */

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:403  
     2106     8297    4   COMMON:
     2107     8298    4                   IF LEN > 0 THEN

   8298  2 001404   200072 235100       COMMON       LDA     LEN,,AUTO
         2 001405   001420 604400 2                  TMOZ    s:8302

     2108     8299    4                       CALL INSERT( PDUBUF$->TEXT, PDUIDX, LEN,

   8299  2 001406   200071 236100                    LDQ     I,,AUTO
         2 001407   000001 736000                    QLS     1
         2 001410   200005 470506                    LDP0    ITEMLIST+1,QL,AUTO
         2 001411   000000 620005                    EAX0    0,AL
         2 001412   200062 471500                    LDP1    PDUBUF$,,AUTO
         2 001413   200072 721100                    LXL1    LEN,,AUTO
         2 001414   200063 235100                    LDA     PDUIDX,,AUTO
         2 001415   040145 100540                    MLR     fill='040'O
         2 001416   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         2 001417   100000 000011                    ADSC9   0,A,PR1                  cn=0,n=*X1

     2109     8300    4                               ITEMLIST.P( I)->BYTES);
     2110     8301    4               END;

     2111     8302    3           PDUIDX = LEN + PDUIDX;

   8302  2 001420   200072 236100                    LDQ     LEN,,AUTO
         2 001421   200063 036100                    ADLQ    PDUIDX,,AUTO
         2 001422   200063 756100                    STQ     PDUIDX,,AUTO

     2112     8303    3   NEXTITEM:
     2113     8304    3           END;

   8304  2 001423   200071 054100       NEXTITEM     AOS     I,,AUTO
         2 001424   200071 236100                    LDQ     I,,AUTO
         2 001425   000000 116000 1                  CMPQ    XSC_ITEMCNT
         2 001426   001122 604400 2                  TMOZ    s:8217

     2114     8305    2       RETURN;
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:404  

   8305  2 001427   200070 221300                    LDX1  ! TXTC$+2,,AUTO
         2 001430   000001 702211                    TSX2  ! 1,X1

XSC_F$ENCODE
 Sect OctLoc
   0     000   302303 001327                                                    ....

XSC_ITEMCNT
 Sect OctLoc
   1     000   000000 000000                                                    ....

(unnamed)
 Sect OctLoc
   1     001   000000 000024                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000000 000000   000001 200432   000000 006014   000004 204022    ................
   3     004   000004 205022   000004 210022   000004 211022   000001 202022    ................
   3     010   000001 201023   000004 206022   000001 200422   000001 000000    ................
   3     014   000000 006000   000003 000000   777777 777777   000040 040040    .............
   3     020   777040 040040                                                    .
     2115     8306
     2116     8307    2       END BUILDPDU;
     2117     8308
     2118     8309    1       END XSC$ENCODE;
     2119     8310        %EOD;

PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:405  
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSC$ENCODE.
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:406  

 **** Variables and constants ****

  ****  Section 000 RoData XSC$ENCODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 XSC_F$ENCODE

  ****  Section 001  Data  XSC$ENCODE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 XSC_ITEMCNT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @VBLK                     56-0-0/w PTR         r     1 AFPT$
    57-0-0/w PTR         r     1 CTXT$                     71-0-0/w SBIN        r     1 I
    71-0-0/w SBIN        r     1 I                         61-0-0/w SBIN        r     1 INFOLVL
     4-0-0/w STRC(72)    r     1 ITEMLIST(0:20)
    72-0-0/w SBIN        r     1 J                         73-0-0/w SBIN        r     1 LEN
    72-0-0/w SBIN        r     1 LEN                       74-0-0/w SBIN        r     1 LVL
    62-0-0/w PTR         r     1 PDUBUF$                   63-0-0/w SBIN        r     1 PDUIDX
    64-0-0/h UBIN(18)    r     1 PDUX                      65-0-0/w SBIN        r     1 TEMP
    74-0-0/w SBIN        r     1 TMP                       73-0-0/w SBIN        r     1 TMP
    66-0-0/w PTR         r     1 TXTC$                     74-0-0/w UBIN        r     1 U36(0:1)
    74-0-0/w UBIN(8)     r     1 U8(0:8)                   74-0-0/w UBIN        r     1 UTMP
    *0-0-0/w STRC(252)   r     1 VBLK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:407  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(504)   r     1 AFPT                       0-0-0/c ACHR        r     1 BYTES
     0-0-0/w ASTR(18)    r     1 CTXT                       0-0-0/c CHAR(16384) r     1 TEXT
     0-0-0/c ASTR(9)     r     1 TXTC                       0-0-0/w STRC(504)   r     1 XSC$ASSOCIATE
     0-0-0/w STRC(504)   r     1 XSC$GENERIC                0-0-0/w STRC(108)   r     1 XSC$RELEASE
     0-0-0/w STRC(108)   r     1 XSC$U_ABORT


   Procedure XSC$ENCODE requires 793 words for executable code.
   Procedure XSC$ENCODE requires 66 words of local(AUTO) storage.
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:408  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:409  
          MINI XREF LISTING

AFPT.BUF$
      4029**DCL      8097>>ASSIGN
AFPT.C0
      4031**DCL      4031--REDEF
AFPT.DAT$
      4033**DCL      4033--REDEF
AFPT.LINK$
      4030**DCL      8107>>ASSIGN
AFPT.N0
      4032**DCL      4032--REDEF
AFPT.NXTX
      4032**DCL      8100>>ASSIGN
AFPT.R0
      4030**DCL      4031--REDEF
AFPT$
      5055**DCL      4025--IMP-PTR  8013<<ASSIGN   8014>>DOWHILE  8097>>ASSIGN   8100>>ASSIGN   8107<<ASSIGN
      8107>>ASSIGN
BUILDPDU
      8198**PROC     8115--CALL
BYTES IN PROCEDURE BUILDPDU
      8200**DCL      8232>>CALLBLT  8299>>CALLBLT
CCTX.HISTZ
      3484**DCL      3485--REDEF
COMMON IN PROCEDURE BUILDPDU
      8298**LABEL    8292--GOTO
CTXT.LEN
      2200**DCL      2201--IMP-SIZ  5441>>ASSIGN   6579>>ASSIGN
CTXT.TXT
      2201**DCL      5429--ASSIGN   6567--ASSIGN
CTXT$
      5056**DCL      5354<<ASSIGN   5355>>IF       5429>>ASSIGN   5441>>ASSIGN   6492<<ASSIGN   6493>>IF
      6567>>ASSIGN   6579>>ASSIGN
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:410  
FIXITEMS
      8134**PROC     8112--CALL
I IN PROCEDURE BUILDPDU
      8201**DCL      8214<<DOINDEX  8217>>CALLBLT  8221>>ASSIGN   8232>>CALLBLT  8244>>ASSIGN   8245>>DOCASE
      8253>>IF       8267>>ASSIGN   8277>>ASSIGN   8299>>CALLBLT
I IN PROCEDURE FIXITEMS
      8136**DCL      8143<<DOINDEX  8144>>IF       8145>>ASSIGN   8145>>ASSIGN   8146>>DOCASE   8149>>ASSIGN
      8152>>ASSIGN   8154>>ASSIGN   8154>>ASSIGN   8164>>IF       8165>>ASSIGN   8168>>ASSIGN   8175>>ASSIGN
      8177>>IF       8177>>IF       8177>>IF       8181>>ASSIGN   8183>>DOINDEX
INCRLOOP IN PROCEDURE FIXITEMS
      8183**LABEL    8186--EXIT
INFOLVL
      5058**DCL      5069<<ASSIGN   6300<<ASSIGN   7335<<ASSIGN   7526<<ASSIGN   7718<<ASSIGN   7909<<ASSIGN
      7920>>IF       8005>>ASSIGN   8012<<ASSIGN   8012>>ASSIGN   8100>>ASSIGN   8109<<ASSIGN   8109>>ASSIGN
ITEMLIST
      5035**DCL      5071<<ASSIGN
ITEMLIST.B
      5053**DCL      5322<<ASSIGN   6460<<ASSIGN
ITEMLIST.P
      5052**DCL      5429<<ASSIGN   5533<<ASSIGN   5628<<ASSIGN   5911<<ASSIGN   6006<<ASSIGN   6289<<ASSIGN
      6567<<ASSIGN   6946<<ASSIGN   7041<<ASSIGN   7324<<ASSIGN   8097<<ASSIGN   8164>>IF       8299>>CALLBLT
ITEMLIST.S
      5051**DCL      5694<<ASSIGN   5788<<ASSIGN   6072<<ASSIGN   6166<<ASSIGN   6641<<ASSIGN   6824<<ASSIGN
      7107<<ASSIGN   7201<<ASSIGN   7488<<ASSIGN   7680<<ASSIGN   7871<<ASSIGN   8253>>IF
ITEMLIST.U
      5050**DCL      5051--REDEF    5052--REDEF    5053--REDEF    8154<<ASSIGN   8154>>ASSIGN   8267>>ASSIGN
      8277>>ASSIGN
ITEMLIST.X.IMP
      5047**DCL      8177>>IF
ITEMLIST.X.LEN
      5044**DCL      8113>>ASSIGN   8149>>ASSIGN   8152<<ASSIGN   8165<<ASSIGN   8168>>ASSIGN   8175>>ASSIGN
      8185<<ASSIGN   8185>>ASSIGN   8221>>ASSIGN   8232--CALLBLT  8244>>ASSIGN
ITEMLIST.X.LVL
      5049**DCL      8181>>ASSIGN   8184>>IF
ITEMLIST.X.TAG
      5046**DCL      8144>>IF       8145<<ASSIGN   8177>>IF       8217>>CALLBLT
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:411  
ITEMLIST.X.TYP
      5048**DCL      8145>>ASSIGN   8146>>DOCASE   8177>>IF       8245>>DOCASE
ITEMLIST.Z
      5042**DCL      5043--REDEF    5156<<ASSIGN   5255<<ASSIGN   5347<<ASSIGN   5441<<ASSIGN   5536<<ASSIGN
      5631<<ASSIGN   5725<<ASSIGN   5819<<ASSIGN   5914<<ASSIGN   6009<<ASSIGN   6103<<ASSIGN   6197<<ASSIGN
      6292<<ASSIGN   6393<<ASSIGN   6485<<ASSIGN   6579<<ASSIGN   6672<<ASSIGN   6763<<ASSIGN   6855<<ASSIGN
      6949<<ASSIGN   7044<<ASSIGN   7138<<ASSIGN   7232<<ASSIGN   7327<<ASSIGN   7427<<ASSIGN   7519<<ASSIGN
      7619<<ASSIGN   7711<<ASSIGN   7810<<ASSIGN   7902<<ASSIGN   8005<<ASSIGN   8100<<ASSIGN
J IN PROCEDURE FIXITEMS
      8137**DCL      8183<<DOINDEX  8184>>IF       8185>>ASSIGN   8185>>ASSIGN
LEN IN PROCEDURE BUILDPDU
      8202**DCL      8200--IMP-SIZ  8223<<ASSIGN   8225<<ASSIGN   8225>>ASSIGN   8229>>CALLBLT  8232>>CALLBLT
      8232>>CALLBLT  8232>>CALLBLT  8234>>ASSIGN   8244<<ASSIGN   8251<<ASSIGN   8268>>DOWHILE  8270>>CALLBLT
      8273<<ASSIGN   8273>>ASSIGN   8280>>IF       8281>>DOWHILE  8295<<ASSIGN   8298>>IF       8299>>CALLBLT
      8299>>CALLBLT  8302>>ASSIGN
LEN IN PROCEDURE FIXITEMS
      8138**DCL      8167<<ASSIGN   8171<<ASSIGN   8171>>ASSIGN   8175<<ASSIGN   8175>>ASSIGN   8180<<ASSIGN
      8180>>ASSIGN   8185>>ASSIGN
LVL IN PROCEDURE FIXITEMS
      8139**DCL      8140--REDEF    8141--REDEF    8181<<ASSIGN   8184>>IF
NEXTITEM IN PROCEDURE BUILDPDU
      8304**LABEL    8275--GOTO     8288--GOTO
OOPS
      8123**LABEL    8114--CALLALT
PDUBUF$
      5059**DCL      8114<>CALL     8118>>ASSIGN   8217>>CALLBLT  8229>>CALLBLT  8232>>CALLBLT  8238>>CALLBLT
      8255>>CALLBLT  8261>>CALLBLT  8270>>CALLBLT  8283>>CALLBLT  8299>>CALLBLT
PDUIDX
      5060**DCL      8117>>ASSIGN   8211<<ASSIGN   8217>>CALLBLT  8218<<ASSIGN   8218>>ASSIGN   8229>>CALLBLT
      8230<<ASSIGN   8230>>ASSIGN   8232>>CALLBLT  8234<<ASSIGN   8234>>ASSIGN   8238>>CALLBLT  8239<<ASSIGN
      8239>>ASSIGN   8255>>CALLBLT  8256<<ASSIGN   8256>>ASSIGN   8261>>CALLBLT  8262<<ASSIGN   8262>>ASSIGN
      8270>>CALLBLT  8271<<ASSIGN   8271>>ASSIGN   8283>>CALLBLT  8284<<ASSIGN   8284>>ASSIGN   8299>>CALLBLT
      8302<<ASSIGN   8302>>ASSIGN
PDUX
      5061**DCL      8114<>CALL     8121<>CALL     8125<>CALL
TEMP
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:412  
      5062**DCL      8113<<ASSIGN   8114<>CALL
TEXT
      5063**DCL      8097--ASSIGN   8217<<CALLBLT  8229<<CALLBLT  8232<<CALLBLT  8238<<CALLBLT  8255<<CALLBLT
      8261<<CALLBLT  8270<<CALLBLT  8283<<CALLBLT  8299<<CALLBLT
TMP IN PROCEDURE BUILDPDU
      8203**DCL      8221<<ASSIGN   8222>>IF       8224>>DOWHILE  8226<<ASSIGN   8226>>ASSIGN   8238>>CALLBLT
      8279<<ASSIGN   8281>>DOWHILE  8283>>CALLBLT  8286<<ASSIGN   8286>>ASSIGN
TMP IN PROCEDURE FIXITEMS
      8140**DCL      8149<<ASSIGN   8150>>IF       8151<<ASSIGN   8152>>ASSIGN   8153>>ASSIGN   8168<<ASSIGN
      8169>>IF       8170>>DOWHILE  8172<<ASSIGN   8172>>ASSIGN
TXTC.LEN
      5065**DCL      5066--IMP-SIZ  5536>>ASSIGN   5631>>ASSIGN   5914>>ASSIGN   6009>>ASSIGN   6292>>ASSIGN
      6949>>ASSIGN   7044>>ASSIGN   7327>>ASSIGN
TXTC.TXT
      5066**DCL      5533--ASSIGN   5628--ASSIGN   5911--ASSIGN   6006--ASSIGN   6289--ASSIGN   6946--ASSIGN
      7041--ASSIGN   7324--ASSIGN
TXTC$
      5067**DCL      5064--IMP-PTR  5449<<ASSIGN   5450>>IF       5533>>ASSIGN   5536>>ASSIGN   5544<<ASSIGN
      5545>>IF       5628>>ASSIGN   5631>>ASSIGN   5827<<ASSIGN   5828>>IF       5911>>ASSIGN   5914>>ASSIGN
      5922<<ASSIGN   5923>>IF       6006>>ASSIGN   6009>>ASSIGN   6205<<ASSIGN   6206>>IF       6289>>ASSIGN
      6292>>ASSIGN   6862<<ASSIGN   6863>>IF       6946>>ASSIGN   6949>>ASSIGN   6957<<ASSIGN   6958>>IF
      7041>>ASSIGN   7044>>ASSIGN   7240<<ASSIGN   7241>>IF       7324>>ASSIGN   7327>>ASSIGN
U36 IN PROCEDURE BUILDPDU
      8204**DCL      8205--REDEF    8266<<ASSIGN   8267<<ASSIGN   8277<<ASSIGN   8278<<ASSIGN
U8 IN PROCEDURE BUILDPDU
      8205**DCL      8270>>CALLBLT  8283>>CALLBLT
UTMP IN PROCEDURE FIXITEMS
      8141**DCL      8153<<ASSIGN   8154>>ASSIGN
VBLK
      3354**DCL        11--PROC     8119<>CALL
VBLK.CTX$
      3368**DCL      3460--IMP-PTR
VBLK.DATA.SIZE
      3436**DCL      7920>>IF
VBLK.EVENT
      3441**DCL      5163>>DOCASE
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:413  
VBLK.FPT$
      3369**DCL      2609--IMP-PTR  2668--IMP-PTR  2743--IMP-PTR  2802--IMP-PTR  2861--IMP-PTR  5354>>ASSIGN
      5449>>ASSIGN   5544>>ASSIGN   5639>>IF       5694>>ASSIGN   5733>>IF       5788>>ASSIGN   5827>>ASSIGN
      5922>>ASSIGN   6017>>IF       6072>>ASSIGN   6111>>IF       6166>>ASSIGN   6205>>ASSIGN   6492>>ASSIGN
      6641>>ASSIGN   6824>>ASSIGN   6862>>ASSIGN   6957>>ASSIGN   7052>>IF       7107>>ASSIGN   7146>>IF
      7201>>ASSIGN   7240>>ASSIGN   7488>>ASSIGN   7680>>ASSIGN   7871>>ASSIGN   8013>>ASSIGN
VBLK.PDU.PTR$
      3401**DCL      8118<<ASSIGN
VBLK.PDU.SIZE
      3402**DCL      8117<<ASSIGN
XSC$ASSOCIATE.ACN$
      2714**DCL      5354>>ASSIGN   6492>>ASSIGN
XSC$ASSOCIATE.ERRDEF
      2683**DCL      2703--REDEF
XSC$ASSOCIATE.IAEID
      2718**DCL      6111>>IF       6166>>ASSIGN
XSC$ASSOCIATE.IAEQ$
      2716**DCL      5922>>ASSIGN
XSC$ASSOCIATE.IAPID
      2717**DCL      6017>>IF       6072>>ASSIGN
XSC$ASSOCIATE.IAPT$
      2715**DCL      5827>>ASSIGN
XSC$ASSOCIATE.IMPL$
      2723**DCL      6205>>ASSIGN   7240>>ASSIGN
XSC$ASSOCIATE.RAEID
      2722**DCL      5733>>IF       5788>>ASSIGN   7146>>IF       7201>>ASSIGN
XSC$ASSOCIATE.RAEQ$
      2720**DCL      5544>>ASSIGN   6957>>ASSIGN
XSC$ASSOCIATE.RAPID
      2721**DCL      5639>>IF       5694>>ASSIGN   7052>>IF       7107>>ASSIGN
XSC$ASSOCIATE.RAPT$
      2719**DCL      5449>>ASSIGN   6862>>ASSIGN
XSC$ASSOCIATE.RESULT
      2682**DCL      6641>>ASSIGN
XSC$ASSOCIATE.RSDIAG
      2681**DCL      6824>>ASSIGN
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:414  
XSC$GENERIC.DATA$
      2648**DCL      8013>>ASSIGN
XSC$GENERIC.ERRDEF
      2618**DCL      2638--REDEF
XSC$PSEND
      5022**DCL-ENT  8119--CALL
XSC$P_ABORT.ERRDEF
      2753**DCL      2773--REDEF
XSC$RELEASE.ERRDEF
      2812**DCL      2832--REDEF
XSC$RELEASE.REASON
      2810**DCL      7488>>ASSIGN   7680>>ASSIGN
XSC$U_ABORT.ABRTSRC
      2869**DCL      7871>>ASSIGN
XSC$U_ABORT.ERRDEF
      2871**DCL      2891--REDEF
XSC_F$ENCODE
      4983**DCL      7916<>CALL
XSC_ITEMCNT
      5027**DCL      5070<<ASSIGN   5156>>ASSIGN   5159<<ASSIGN   5159>>ASSIGN   5255>>ASSIGN   5258<<ASSIGN
      5258>>ASSIGN   5322>>ASSIGN   5347>>ASSIGN   5350<<ASSIGN   5350>>ASSIGN   5429>>ASSIGN   5441>>ASSIGN
      5444<<ASSIGN   5444>>ASSIGN   5533>>ASSIGN   5536>>ASSIGN   5539<<ASSIGN   5539>>ASSIGN   5628>>ASSIGN
      5631>>ASSIGN   5634<<ASSIGN   5634>>ASSIGN   5694>>ASSIGN   5725>>ASSIGN   5728<<ASSIGN   5728>>ASSIGN
      5788>>ASSIGN   5819>>ASSIGN   5822<<ASSIGN   5822>>ASSIGN   5911>>ASSIGN   5914>>ASSIGN   5917<<ASSIGN
      5917>>ASSIGN   6006>>ASSIGN   6009>>ASSIGN   6012<<ASSIGN   6012>>ASSIGN   6072>>ASSIGN   6103>>ASSIGN
      6106<<ASSIGN   6106>>ASSIGN   6166>>ASSIGN   6197>>ASSIGN   6200<<ASSIGN   6200>>ASSIGN   6289>>ASSIGN
      6292>>ASSIGN   6295<<ASSIGN   6295>>ASSIGN   6393>>ASSIGN   6396<<ASSIGN   6396>>ASSIGN   6460>>ASSIGN
      6485>>ASSIGN   6488<<ASSIGN   6488>>ASSIGN   6567>>ASSIGN   6579>>ASSIGN   6582<<ASSIGN   6582>>ASSIGN
      6641>>ASSIGN   6672>>ASSIGN   6675<<ASSIGN   6675>>ASSIGN   6763>>ASSIGN   6766<<ASSIGN   6766>>ASSIGN
      6824>>ASSIGN   6855>>ASSIGN   6858<<ASSIGN   6858>>ASSIGN   6946>>ASSIGN   6949>>ASSIGN   6952<<ASSIGN
      6952>>ASSIGN   7041>>ASSIGN   7044>>ASSIGN   7047<<ASSIGN   7047>>ASSIGN   7107>>ASSIGN   7138>>ASSIGN
      7141<<ASSIGN   7141>>ASSIGN   7201>>ASSIGN   7232>>ASSIGN   7235<<ASSIGN   7235>>ASSIGN   7324>>ASSIGN
      7327>>ASSIGN   7330<<ASSIGN   7330>>ASSIGN   7427>>ASSIGN   7430<<ASSIGN   7430>>ASSIGN   7488>>ASSIGN
      7519>>ASSIGN   7522<<ASSIGN   7522>>ASSIGN   7619>>ASSIGN   7622<<ASSIGN   7622>>ASSIGN   7680>>ASSIGN
      7711>>ASSIGN   7714<<ASSIGN   7714>>ASSIGN   7810>>ASSIGN   7813<<ASSIGN   7813>>ASSIGN   7871>>ASSIGN
      7902>>ASSIGN   7905<<ASSIGN   7905>>ASSIGN   8005>>ASSIGN   8008<<ASSIGN   8008>>ASSIGN   8097>>ASSIGN
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:415  
      8100>>ASSIGN   8103<<ASSIGN   8103>>ASSIGN   8143>>DOINDEX  8212<<ASSIGN   8212>>ASSIGN   8214>>DOINDEX
XSS$GETMEM
      5023**DCL-ENT  8114--CALL
XSS$RELMEM
      5024**DCL-ENT  8121--CALL     8125--CALL
XSS$SCREECH
      5025**DCL-ENT  7916--CALL
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:416  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #009=XSC$ENCODE File=XSC$ACSE.:XSA1TSI                             WED 10/01/97 11:53 Page:417  
              MINI UREF LISTING

I    5057**DCL
XSC$ENCODE      11**PROC
XSC_ITEMMAX    5028**DCL

PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:418  
     2120        1        /*T***********************************************************/
     2121        2        /*T*                                                         */
     2122        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2123        4        /*T*                                                         */
     2124        5        /*T***********************************************************/
     2125        6        /*F*    NAME:   XSC$PSEND
     2126        7
     2127        8                XSC$PSEND takes care of the details of forwarding an outbound APDU
     2128        9                to the Presentation layer for transfer to the other ACSE endpoint.
     2129       10                The ACSE event in VBLK.EVENT is mapped to a Presentation function.
     2130       11        */
     2131       12        XSC$PSEND: PROC( VBLK) ALTRET;
     2132       13        %INCLUDE K_ADDRESS_M;
     2133      516        %INCLUDE XSC_COMMON_M;
     2134     1169            %XSC$ADDRESS( NAME=XSC_SOURCE, STCLASS=SYMREF);
     2135     1452            %XSC$ADDRESS( NAME=XSC_TARGET, STCLASS=SYMREF);
     2136     1735        %INCLUDE XSP_ASN1_M;
     2137     2081            %XSP_ASN1_FPT( FPTN=AFPT, STCLASS=AUTO);
     2138     2101            %XSP_ASN1_FPT( FPTN=XSC_XSP_ASN1_FPT, STCLASS=CONSTANT);
     2139     2121        %INCLUDE XSS_SESSION_E;
     2140     2686        %INCLUDE XSP_PRESENTATION_E;
     2141     2785        %INCLUDE XSP_PRESENTATION_M;
     2142     4271            %XSP$GENERIC( FPTN=PFPT, STCLASS=AUTO);
     2143     4367            %XSP$PRIMITIVES( STCLASS="BASED( PFPT$)");
     2144     6066            %XSP_PRIMITIVES( STCLASS=SYMREF);
     2145     7765            %XSP$CTXTNAME( NAME=ACSECTXT, CTXT="2-2-1-0-1", STCLASS=CONSTANT);
     2146     7807        %INCLUDE XSC_ACSE_E;
     2147     7885        %INCLUDE XSC_ACSE_M;
     2148     8194            %XSC$PRIMITIVES( STCLASS="BASED( VBLK.FPT$)");
     2149     8507        %INCLUDE XSC_INTERNAL_E;
     2150     8595        %INCLUDE XSC_INTERNAL_M;
     2151     8940            %XSC$VBLK( NAME=VBLK, STCLASS="");
     2152     9046
     2153     9047    1       DCL XSP$PRESENTATION ENTRY(1) ALTRET;
     2154     9048
     2155     9049    1       DCL 1 CTXTLIST CONSTANT,
     2156     9050    1            2 * SBIN INIT( 1),
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:419  
     2157     9051    1            2 * PTR INIT( ADDR( ACSECTXT));
     2158     9052    1       DCL PFPT$ PTR;
     2159     9053
     2160     9054    1       PFPT$ = ADDR( PFPT);
     2161     9055            /* Determine the Presentation function code and init Presentation fpt */
     2162     9056    2       DO CASE( VBLK.EVENT);
     2163     9057    2           CASE( %XSC_CEV_AARQ);
     2164     9058    2               XSP$CONNECT = XSP_CONNECT;
     2165     9059    2               XSP$CONNECT.FNC = %XSP_FNC_PCONREQ#;
     2166     9060    2               XSP$CONNECT.DFLT$ = XSC$ASSOCIATE.CTXT$;
     2167     9061    2               XSP$CONNECT.CTXT$ = ADDR( CTXTLIST);
     2168     9062    2               XSP$CONNECT.CALLING$ = ADDR( XSC_TARGET);
     2169     9063    2               XSP$CONNECT.CALLED$ = ADDR( XSC_SOURCE);
     2170     9064    2               XSP$CONNECT.SFU.FD = %TRUE;
     2171     9065    2           CASE( %XSC_CEV_AAREP,
     2172     9066    2                 %XSC_CEV_AAREN);
     2173     9067    2               XSP$CONNECT = XSP_CONNECT;
     2174     9068    2               XSP$CONNECT.FNC = %XSP_FNC_PCONRSP#;
     2175     9069    2               XSP$CONNECT.DFLT$ = XSC$ASSOCIATE.CTXT$;
     2176     9070    2               XSP$CONNECT.CTXT$ = ADDR( CTXTLIST);
     2177     9071    2               XSP$CONNECT.CALLING$ = ADDR( XSC_SOURCE);
     2178     9072    2               XSP$CONNECT.RESPONDING$ = ADDR( XSC_TARGET);
     2179     9073    2               XSP$CONNECT.SFU.FD = %TRUE;
     2180     9074    2           CASE( %XSC_CEV_RLRQ);
     2181     9075    2               XSP$RELEASE = XSP_RELEASE;
     2182     9076    2               XSP$RELEASE.FNC = %XSP_FNC_PRELREQ#;
     2183     9077    2           CASE( %XSC_CEV_RLREP,
     2184     9078    2                 %XSC_CEV_RLREN);
     2185     9079    2               XSP$RELEASE = XSP_RELEASE;
     2186     9080    2               XSP$RELEASE.FNC = %XSP_FNC_PRELRSP#;
     2187     9081    2           CASE( %XSC_CEV_ABRT);
     2188     9082    2               XSP$U_ABORT = XSP_U_ABORT;
     2189     9083    2               XSP$U_ABORT.FNC = %XSP_FNC_PUABREQ#;
     2190     9084    2           CASE( ELSE);
     2191     9085    2               ALTRETURN;
     2192     9086    2           END;
     2193     9087    2       IF VBLK.PDU.SIZE > 0 THEN DO;
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:420  
     2194     9088    2           AFPT = XSC_XSP_ASN1_FPT;  /* initialize ASN1 fpt */
     2195     9089    2           AFPT.BUF$ = VBLK.PDU.PTR$;
     2196     9090    2           AFPT.NXTX = VBLK.PDU.SIZE;
     2197     9091    2           AFPT.CTXTID = 1;  /* PDU encoded by the first (only) CTXT in use... */
     2198     9092    2           XSP$GENERIC.DATA$ = ADDR( AFPT);
     2199     9093    2           END;
     2200     9094    1       XSP$GENERIC.PCID = XSC$GENERIC.CCID;
     2201     9095            /* ..and send it on its way  */
     2202     9096    1       CALL XSP$PRESENTATION( XSP$GENERIC)
     2203     9097    2       WHENALTRETURN DO;
     2204     9098    2           XSC$GENERIC.ERROR = XSP$GENERIC.ERROR;
     2205     9099    2           ALTRETURN;
     2206     9100    2           END;
     2207     9101    1       RETURN;
     2208     9102
     2209     9103    1       END XSC$PSEND;
     2210     9104        %EOD;

PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:421  
--  Include file information  --

   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
      No diagnostics issued in procedure XSC$PSEND.

   Procedure XSC$PSEND requires 99 words for executable code.
   Procedure XSC$PSEND requires 34 words of local(AUTO) storage.

PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:422  

 Object Unit name= XSC$PSEND                                  File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:53:33.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     19     23  XSC$PSEND
    1   Proc  even  none    99    143  XSC$PSEND
    2  RoData even  none     4      4  XSC$PSEND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  XSC$PSEND

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 XSP$PRESENTATION
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSC_SOURCE                            XSC_TARGET                            XSP_CONNECT
     XSP_RELEASE                           XSP_U_ABORT
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:423  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:424  


     2120        1        /*T***********************************************************/
     2121        2        /*T*                                                         */
     2122        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2123        4        /*T*                                                         */
     2124        5        /*T***********************************************************/
     2125        6        /*F*    NAME:   XSC$PSEND
     2126        7
     2127        8                XSC$PSEND takes care of the details of forwarding an outbound APDU
     2128        9                to the Presentation layer for transfer to the other ACSE endpoint.
     2129       10                The ACSE event in VBLK.EVENT is mapped to a Presentation function.
     2130       11        */
     2131       12        XSC$PSEND: PROC( VBLK) ALTRET;

     12  1 000000   000000 700200 xent  XSC$PSEND    TSX0  ! X66_AUTO_1
         1 000001   000042 000001                    ZERO    34,1

     2132       13        %INCLUDE K_ADDRESS_M;
     2133      516        %INCLUDE XSC_COMMON_M;
     2134     1169            %XSC$ADDRESS( NAME=XSC_SOURCE, STCLASS=SYMREF);
     2135     1452            %XSC$ADDRESS( NAME=XSC_TARGET, STCLASS=SYMREF);
     2136     1735        %INCLUDE XSP_ASN1_M;
     2137     2081            %XSP_ASN1_FPT( FPTN=AFPT, STCLASS=AUTO);
     2138     2101            %XSP_ASN1_FPT( FPTN=XSC_XSP_ASN1_FPT, STCLASS=CONSTANT);
     2139     2121        %INCLUDE XSS_SESSION_E;
     2140     2686        %INCLUDE XSP_PRESENTATION_E;
     2141     2785        %INCLUDE XSP_PRESENTATION_M;
     2142     4271            %XSP$GENERIC( FPTN=PFPT, STCLASS=AUTO);
     2143     4367            %XSP$PRIMITIVES( STCLASS="BASED( PFPT$)");
     2144     6066            %XSP_PRIMITIVES( STCLASS=SYMREF);
     2145     7765            %XSP$CTXTNAME( NAME=ACSECTXT, CTXT="2-2-1-0-1", STCLASS=CONSTANT);
     2146     7807        %INCLUDE XSC_ACSE_E;
     2147     7885        %INCLUDE XSC_ACSE_M;
     2148     8194            %XSC$PRIMITIVES( STCLASS="BASED( VBLK.FPT$)");
     2149     8507        %INCLUDE XSC_INTERNAL_E;
     2150     8595        %INCLUDE XSC_INTERNAL_M;
     2151     8940            %XSC$VBLK( NAME=VBLK, STCLASS="");
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:425  
     2152     9046
     2153     9047    1       DCL XSP$PRESENTATION ENTRY(1) ALTRET;
     2154     9048
     2155     9049    1       DCL 1 CTXTLIST CONSTANT,
     2156     9050    1            2 * SBIN INIT( 1),
     2157     9051    1            2 * PTR INIT( ADDR( ACSECTXT));
     2158     9052    1       DCL PFPT$ PTR;
     2159     9053
     2160     9054    1       PFPT$ = ADDR( PFPT);

   9054  1 000002   200022 630500                    EPPR0   PFPT,,AUTO
         1 000003   200040 450500                    STP0    PFPT$,,AUTO

     2161     9055            /* Determine the Presentation function code and init Presentation fpt */
     2162     9056    2       DO CASE( VBLK.EVENT);

   9056  1 000004   200003 471500                    LDP1    @VBLK,,AUTO
         1 000005   100006 720100                    LXL0    6,,PR1
         1 000006   000777 360003                    ANX0    511,DU
         1 000007   000010 100003                    CMPX0   8,DU
         1 000010   000012 602010 1                  TNC     s:9056+6,X0
         1 000011   000106 710000 1                  TRA     s:9085
         1 000012   000106 710000 1                  TRA     s:9085
         1 000013   000022 710000 1                  TRA     s:9058
         1 000014   000043 710000 1                  TRA     s:9067
         1 000015   000043 710000 1                  TRA     s:9067
         1 000016   000064 710000 1                  TRA     s:9075
         1 000017   000072 710000 1                  TRA     s:9079
         1 000020   000072 710000 1                  TRA     s:9079
         1 000021   000100 710000 1                  TRA     s:9082

     2163     9057    2           CASE( %XSC_CEV_AARQ);

     2164     9058    2               XSP$CONNECT = XSP_CONNECT;

   9058  1 000022   003100 060400                    CSL     bolr='003'O
         1 000023   000000 000616 xsym               BDSC    XSP_CONNECT              by=0,bit=0,n=398
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:426  
         1 000024   000000 000616                    BDSC    0,,PR0                   by=0,bit=0,n=398

     2165     9059    2               XSP$CONNECT.FNC = %XSP_FNC_PCONREQ#;

   9059  1 000025   031000 236003                    LDQ     12800,DU
         1 000026   000000 552140                    STBQ    0,'40'O,PR0

     2166     9060    2               XSP$CONNECT.DFLT$ = XSC$ASSOCIATE.CTXT$;

   9060  1 000027   100001 473500                    LDP3    1,,PR1
         1 000030   300015 236100                    LDQ     13,,PR3
         1 000031   000003 756100                    STQ     3,,PR0

     2167     9061    2               XSP$CONNECT.CTXT$ = ADDR( CTXTLIST);

   9061  1 000032   000000 236000 2                  LDQ     0
         1 000033   000005 756100                    STQ     5,,PR0

     2168     9062    2               XSP$CONNECT.CALLING$ = ADDR( XSC_TARGET);

   9062  1 000034   000001 236000 2                  LDQ     1
         1 000035   000006 756100                    STQ     6,,PR0

     2169     9063    2               XSP$CONNECT.CALLED$ = ADDR( XSC_SOURCE);

   9063  1 000036   000002 236000 2                  LDQ     2
         1 000037   000007 756100                    STQ     7,,PR0

     2170     9064    2               XSP$CONNECT.SFU.FD = %TRUE;

   9064  1 000040   000010 236007                    LDQ     8,DL
         1 000041   000010 256100                    ORSQ    8,,PR0
         1 000042   000107 710000 1                  TRA     s:9087

     2171     9065    2           CASE( %XSC_CEV_AAREP,

     2172     9066    2                 %XSC_CEV_AAREN);
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:427  
     2173     9067    2               XSP$CONNECT = XSP_CONNECT;

   9067  1 000043   003100 060400                    CSL     bolr='003'O
         1 000044   000000 000616 xsym               BDSC    XSP_CONNECT              by=0,bit=0,n=398
         1 000045   000000 000616                    BDSC    0,,PR0                   by=0,bit=0,n=398

     2174     9068    2               XSP$CONNECT.FNC = %XSP_FNC_PCONRSP#;

   9068  1 000046   033000 236003                    LDQ     13824,DU
         1 000047   000000 552140                    STBQ    0,'40'O,PR0

     2175     9069    2               XSP$CONNECT.DFLT$ = XSC$ASSOCIATE.CTXT$;

   9069  1 000050   100001 473500                    LDP3    1,,PR1
         1 000051   300015 236100                    LDQ     13,,PR3
         1 000052   000003 756100                    STQ     3,,PR0

     2176     9070    2               XSP$CONNECT.CTXT$ = ADDR( CTXTLIST);

   9070  1 000053   000000 236000 2                  LDQ     0
         1 000054   000005 756100                    STQ     5,,PR0

     2177     9071    2               XSP$CONNECT.CALLING$ = ADDR( XSC_SOURCE);

   9071  1 000055   000002 236000 2                  LDQ     2
         1 000056   000006 756100                    STQ     6,,PR0

     2178     9072    2               XSP$CONNECT.RESPONDING$ = ADDR( XSC_TARGET);

   9072  1 000057   000001 236000 2                  LDQ     1
         1 000060   000007 756100                    STQ     7,,PR0

     2179     9073    2               XSP$CONNECT.SFU.FD = %TRUE;

   9073  1 000061   000010 236007                    LDQ     8,DL
         1 000062   000010 256100                    ORSQ    8,,PR0
         1 000063   000107 710000 1                  TRA     s:9087
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:428  

     2180     9074    2           CASE( %XSC_CEV_RLRQ);

     2181     9075    2               XSP$RELEASE = XSP_RELEASE;

   9075  1 000064   000100 100400                    MLR     fill='000'O
         1 000065   000000 000014 xsym               ADSC9   XSP_RELEASE              cn=0,n=12
         1 000066   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

     2182     9076    2               XSP$RELEASE.FNC = %XSP_FNC_PRELREQ#;

   9076  1 000067   043000 236003                    LDQ     17920,DU
         1 000070   000000 552140                    STBQ    0,'40'O,PR0
         1 000071   000107 710000 1                  TRA     s:9087

     2183     9077    2           CASE( %XSC_CEV_RLREP,

     2184     9078    2                 %XSC_CEV_RLREN);
     2185     9079    2               XSP$RELEASE = XSP_RELEASE;

   9079  1 000072   000100 100400                    MLR     fill='000'O
         1 000073   000000 000014 xsym               ADSC9   XSP_RELEASE              cn=0,n=12
         1 000074   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12

     2186     9080    2               XSP$RELEASE.FNC = %XSP_FNC_PRELRSP#;

   9080  1 000075   045000 236003                    LDQ     18944,DU
         1 000076   000000 552140                    STBQ    0,'40'O,PR0
         1 000077   000107 710000 1                  TRA     s:9087

     2187     9081    2           CASE( %XSC_CEV_ABRT);

     2188     9082    2               XSP$U_ABORT = XSP_U_ABORT;

   9082  1 000100   000100 100400                    MLR     fill='000'O
         1 000101   000000 000014 xsym               ADSC9   XSP_U_ABORT              cn=0,n=12
         1 000102   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:429  

     2189     9083    2               XSP$U_ABORT.FNC = %XSP_FNC_PUABREQ#;

   9083  1 000103   071000 236003                    LDQ     29184,DU
         1 000104   000000 552140                    STBQ    0,'40'O,PR0
         1 000105   000107 710000 1                  TRA     s:9087

     2190     9084    2           CASE( ELSE);

     2191     9085    2               ALTRETURN;

   9085  1 000106   000000 702200 xent               TSX2  ! X66_AALT

     2192     9086    2           END;

     2193     9087    2       IF VBLK.PDU.SIZE > 0 THEN DO;

   9087  1 000107   100003 235100                    LDA     3,,PR1
         1 000110   000124 604400 1                  TMOZ    s:9094

     2194     9088    2           AFPT = XSC_XSP_ASN1_FPT;  /* initialize ASN1 fpt */

   9088  1 000111   000100 100400                    MLR     fill='000'O
         1 000112   000000 000070 0                  ADSC9   XSC_XSP_ASN1_FPT         cn=0,n=56
         1 000113   200004 000070                    ADSC9   AFPT,,AUTO               cn=0,n=56

     2195     9089    2           AFPT.BUF$ = VBLK.PDU.PTR$;

   9089  1 000114   100002 236100                    LDQ     2,,PR1
         1 000115   200005 756100                    STQ     AFPT+1,,AUTO

     2196     9090    2           AFPT.NXTX = VBLK.PDU.SIZE;

   9090  1 000116   100003 235100                    LDA     3,,PR1
         1 000117   200020 755100                    STA     AFPT+12,,AUTO

     2197     9091    2           AFPT.CTXTID = 1;  /* PDU encoded by the first (only) CTXT in use... */
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:430  

   9091  1 000120   000001 235007                    LDA     1,DL
         1 000121   200011 755100                    STA     AFPT+5,,AUTO

     2198     9092    2           XSP$GENERIC.DATA$ = ADDR( AFPT);

   9092  1 000122   200004 633500                    EPPR3   AFPT,,AUTO
         1 000123   000002 453500                    STP3    2,,PR0

     2199     9093    2           END;

     2200     9094    1       XSP$GENERIC.PCID = XSC$GENERIC.CCID;

   9094  1 000124   100001 473500                    LDP3    1,,PR1
         1 000125   300000 236100                    LDQ     0,,PR3
         1 000126   000000 552120                    STBQ    0,'20'O,PR0

     2201     9095            /* ..and send it on its way  */
     2202     9096    1       CALL XSP$PRESENTATION( XSP$GENERIC)

   9096  1 000127   200040 630500                    EPPR0   PFPT$,,AUTO
         1 000130   000003 631400 2                  EPPR1   3
         1 000131   000000 701000 xent               TSX1    XSP$PRESENTATION
         1 000132   000134 702000 1                  TSX2    s:9098
         1 000133   000142 710000 1                  TRA     s:9101

     2203     9097    2       WHENALTRETURN DO;

     2204     9098    2           XSC$GENERIC.ERROR = XSP$GENERIC.ERROR;

   9098  1 000134   200003 470500                    LDP0    @VBLK,,AUTO
         1 000135   000001 471500                    LDP1    1,,PR0
         1 000136   200040 473500                    LDP3    PFPT$,,AUTO
         1 000137   300001 236100                    LDQ     1,,PR3
         1 000140   100001 756100                    STQ     1,,PR1

     2205     9099    2           ALTRETURN;
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:431  

   9099  1 000141   000000 702200 xent               TSX2  ! X66_AALT

     2206     9100    2           END;
     2207     9101    1       RETURN;

   9101  1 000142   000000 702200 xent               TSX2  ! X66_ARET

XSC_XSP_ASN1_FPT
 Sect OctLoc
   0     000   000000 006014   000000 006014   000000 000000   000000 000000    ................
   0     004   000000 006014   000000 000000   000000 000000   000000 000000    ................
   0     010   400000 000000   000000 000000   000000 000000   000000 000000    ................
   0     014   000000 000000   000000 006014                                    ........

ACSECTXT
 Sect OctLoc
   0     016   000011 062055   062055 061055   060055 061***                    ..2-2-1-0-1.

CTXTLIST
 Sect OctLoc
   0     021   000000 000001   000016 006000                                    ........

(unnamed)
 Sect OctLoc
   2     000   000021 006000   000000 006000   000000 006000   000001 000000    ................
     2208     9102
     2209     9103    1       END XSC$PSEND;
     2210     9104        %EOD;

PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:432  
--  Include file information  --

   XSC_INTERNAL_M.:XSA1TOU  is referenced.
   XSC_INTERNAL_E.:XSA1TOU  is referenced.
   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSC_COMMON_M.:XSA1TOU  is referenced.
   K_ADDRESS_M.:LIB_E05  is referenced.
      No diagnostics issued in procedure XSC$PSEND.
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:433  

 **** Variables and constants ****

  ****  Section 000 RoData XSC$PSEND

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    16-0-0/w STRC(99)    r     1 ACSECTXT                  21-0-0/w STRC(72)    r     1 CTXTLIST
     0-0-0/w STRC(504)   r     1 XSC_XSP_ASN1_FPT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @VBLK                      4-0-0/w STRC(504)   r     1 AFPT
    22-0-0/w STRC(504)   r     1 PFPT                      40-0-0/w PTR         r     1 PFPT$
    *0-0-0/w STRC(252)   r     1 VBLK

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2718)  r     1 XSC_SOURCE                 0-0-0/w STRC(2718)  r     1 XSC_TARGET
     0-0-0/w STRC(398)   r     1 XSP_CONNECT                0-0-0/w STRC(108)   r     1 XSP_RELEASE
     0-0-0/w STRC(108)   r     1 XSP_U_ABORT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(504)   r     1 XSC$ASSOCIATE              0-0-0/w STRC(504)   r     1 XSC$GENERIC
     0-0-0/w STRC(398)   r     1 XSP$CONNECT                0-0-0/w STRC(504)   r     1 XSP$GENERIC
     0-0-0/w STRC(108)   r     1 XSP$RELEASE                0-0-0/w STRC(108)   r     1 XSP$U_ABORT

PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:434  

   Procedure XSC$PSEND requires 99 words for executable code.
   Procedure XSC$PSEND requires 34 words of local(AUTO) storage.
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:435  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:436  
          MINI XREF LISTING

ACSECTXT
      7784**DCL      9051--DCLINIT
AFPT
      2091**DCL      9088<<ASSIGN   9092--ASSIGN
AFPT.BUF$
      2095**DCL      9089<<ASSIGN
AFPT.C0
      2097**DCL      2097--REDEF
AFPT.CTXTID
      2096**DCL      9091<<ASSIGN
AFPT.DAT$
      2099**DCL      2099--REDEF
AFPT.N0
      2098**DCL      2098--REDEF
AFPT.NXTX
      2098**DCL      9090<<ASSIGN
AFPT.R0
      2096**DCL      2097--REDEF
CTXTLIST
      9049**DCL      9061--ASSIGN   9070--ASSIGN
PFPT
      4288**DCL      9054--ASSIGN
PFPT.ERRDEF
      4334**DCL      4354--REDEF
PFPT$
      9052**DCL      4385--IMP-PTR  4481--IMP-PTR  4539--IMP-PTR  4604--IMP-PTR  4662--IMP-PTR  4753--IMP-PTR
      4828--IMP-PTR  4889--IMP-PTR  4947--IMP-PTR  5092--IMP-PTR  5186--IMP-PTR  5244--IMP-PTR  5302--IMP-PTR
      5360--IMP-PTR  5418--IMP-PTR  5477--IMP-PTR  5582--IMP-PTR  5648--IMP-PTR  5714--IMP-PTR  5810--IMP-PTR
      5907--IMP-PTR  5965--IMP-PTR  6023--IMP-PTR  9054<<ASSIGN   9058>>ASSIGN   9059>>ASSIGN   9060>>ASSIGN
      9061>>ASSIGN   9062>>ASSIGN   9063>>ASSIGN   9064>>ASSIGN   9067>>ASSIGN   9068>>ASSIGN   9069>>ASSIGN
      9070>>ASSIGN   9071>>ASSIGN   9072>>ASSIGN   9073>>ASSIGN   9075>>ASSIGN   9076>>ASSIGN   9079>>ASSIGN
      9080>>ASSIGN   9082>>ASSIGN   9083>>ASSIGN   9092>>ASSIGN   9094>>ASSIGN   9096>>CALL     9098>>ASSIGN
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:437  
VBLK
      8957**DCL        12--PROC
VBLK.EVENT
      9044**DCL      9056>>DOCASE
VBLK.FPT$
      8972**DCL      8212--IMP-PTR  8271--IMP-PTR  8346--IMP-PTR  8405--IMP-PTR  8464--IMP-PTR  9060>>ASSIGN
      9069>>ASSIGN   9094>>ASSIGN   9098>>ASSIGN
VBLK.PDU.PTR$
      9004**DCL      9089>>ASSIGN
VBLK.PDU.SIZE
      9005**DCL      9087>>IF       9090>>ASSIGN
XSC$ASSOCIATE.CTXT$
      8327**DCL      9060>>ASSIGN   9069>>ASSIGN
XSC$ASSOCIATE.ERRDEF
      8286**DCL      8306--REDEF
XSC$GENERIC.CCID
      8219**DCL      9094>>ASSIGN
XSC$GENERIC.ERRDEF
      8221**DCL      8241--REDEF
XSC$GENERIC.ERROR
      8241**DCL      9098<<ASSIGN
XSC$P_ABORT.ERRDEF
      8356**DCL      8376--REDEF
XSC$RELEASE.ERRDEF
      8415**DCL      8435--REDEF
XSC$U_ABORT.ERRDEF
      8474**DCL      8494--REDEF
XSC_SOURCE
      1186**DCL      9063--ASSIGN   9071--ASSIGN
XSC_SOURCE.NSAP.ADDRESS_N
      1447**DCL      1448--REDEF
XSC_TARGET
      1469**DCL      9062--ASSIGN   9072--ASSIGN
XSC_TARGET.NSAP.ADDRESS_N
      1730**DCL      1731--REDEF
XSC_XSP_ASN1_FPT
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:438  
      2111**DCL      9088>>ASSIGN
XSC_XSP_ASN1_FPT.C0
      2117**DCL      2117--REDEF
XSC_XSP_ASN1_FPT.DAT$
      2119**DCL      2119--REDEF
XSC_XSP_ASN1_FPT.N0
      2118**DCL      2118--REDEF
XSC_XSP_ASN1_FPT.R0
      2116**DCL      2117--REDEF
XSP$ACTIVITY_DISCARD.ERRDEF
      4491**DCL      4511--REDEF
XSP$ACTIVITY_END.ERRDEF
      4553**DCL      4573--REDEF
XSP$ACTIVITY_INTERRUPT.ERRDEF
      4614**DCL      4634--REDEF
XSP$ACTIVITY_RESUME.ERRDEF
      4678**DCL      4698--REDEF
XSP$ACTIVITY_START.ERRDEF
      4768**DCL      4788--REDEF
XSP$ALTER_CONTEXT.ERRDEF
      4837**DCL      4857--REDEF
XSP$CAPABILITY_DATA.ERRDEF
      4898**DCL      4918--REDEF
XSP$CONNECT
      4947**DCL      9058<<ASSIGN   9067<<ASSIGN
XSP$CONNECT.CALLED$
      5042**DCL      5043--REDEF    9063<<ASSIGN
XSP$CONNECT.CALLING$
      5036**DCL      9062<<ASSIGN   9071<<ASSIGN
XSP$CONNECT.CTXT$
      5035**DCL      9061<<ASSIGN   9070<<ASSIGN
XSP$CONNECT.DFLT$
      5032**DCL      5033--REDEF    9060<<ASSIGN   9069<<ASSIGN
XSP$CONNECT.ERRDEF
      5001**DCL      5021--REDEF
XSP$CONNECT.FNC
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:439  
      4961**DCL      9059<<ASSIGN   9068<<ASSIGN
XSP$CONNECT.RESPONDING$
      5043**DCL      9072<<ASSIGN
XSP$CONNECT.SFU.FD
      5064**DCL      9064<<ASSIGN   9073<<ASSIGN
XSP$CONTROL_GIVE.ERRDEF
      5138**DCL      5158--REDEF
XSP$DATA.ERRDEF
      5195**DCL      5215--REDEF
XSP$EXPEDITED_DATA.ERRDEF
      5253**DCL      5273--REDEF
XSP$GENERIC
      4385**DCL      9096<>CALL
XSP$GENERIC.DATA$
      4461**DCL      9092<<ASSIGN
XSP$GENERIC.ERRDEF
      4431**DCL      4451--REDEF
XSP$GENERIC.ERROR
      4451**DCL      9098>>ASSIGN
XSP$GENERIC.PCID
      4392**DCL      9094<<ASSIGN
XSP$PRESENTATION
      9047**DCL-ENT  9096--CALL
XSP$P_ABORT.ERRDEF
      5312**DCL      5332--REDEF
XSP$P_EXCEPTION_REPORT.ERRDEF
      5370**DCL      5390--REDEF
XSP$RELEASE
      5418**DCL      9075<<ASSIGN   9079<<ASSIGN
XSP$RELEASE.ERRDEF
      5428**DCL      5448--REDEF
XSP$RELEASE.FNC
      5424**DCL      9076<<ASSIGN   9080<<ASSIGN
XSP$RESYNCHRONIZE.ERRDEF
      5530**DCL      5550--REDEF
XSP$SYNC_MAJOR.ERRDEF
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:440  
      5597**DCL      5617--REDEF
XSP$SYNC_MINOR.ERRDEF
      5663**DCL      5683--REDEF
XSP$TOKEN_GIVE.ERRDEF
      5762**DCL      5782--REDEF
XSP$TOKEN_PLEASE.ERRDEF
      5858**DCL      5878--REDEF
XSP$TYPED_DATA.ERRDEF
      5916**DCL      5936--REDEF
XSP$U_ABORT
      5965**DCL      9082<<ASSIGN
XSP$U_ABORT.ERRDEF
      5974**DCL      5994--REDEF
XSP$U_ABORT.FNC
      5971**DCL      9083<<ASSIGN
XSP$U_EXCEPTION_REPORT.ERRDEF
      6033**DCL      6053--REDEF
XSP_ACTIVITY_DISCARD.ERRDEF
      6190**DCL      6210--REDEF
XSP_ACTIVITY_END.ERRDEF
      6252**DCL      6272--REDEF
XSP_ACTIVITY_INTERRUPT.ERRDEF
      6313**DCL      6333--REDEF
XSP_ACTIVITY_RESUME.ERRDEF
      6377**DCL      6397--REDEF
XSP_ACTIVITY_START.ERRDEF
      6467**DCL      6487--REDEF
XSP_ALTER_CONTEXT.ERRDEF
      6536**DCL      6556--REDEF
XSP_CAPABILITY_DATA.ERRDEF
      6597**DCL      6617--REDEF
XSP_CONNECT
      6646**DCL      9058>>ASSIGN   9067>>ASSIGN
XSP_CONNECT.CALLED$
      6741**DCL      6742--REDEF
XSP_CONNECT.DFLT$
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:441  
      6731**DCL      6732--REDEF
XSP_CONNECT.ERRDEF
      6700**DCL      6720--REDEF
XSP_CONTROL_GIVE.ERRDEF
      6837**DCL      6857--REDEF
XSP_DATA.ERRDEF
      6894**DCL      6914--REDEF
XSP_EXPEDITED_DATA.ERRDEF
      6952**DCL      6972--REDEF
XSP_GENERIC.ERRDEF
      6130**DCL      6150--REDEF
XSP_P_ABORT.ERRDEF
      7011**DCL      7031--REDEF
XSP_P_EXCEPTION_REPORT.ERRDEF
      7069**DCL      7089--REDEF
XSP_RELEASE
      7117**DCL      9075>>ASSIGN   9079>>ASSIGN
XSP_RELEASE.ERRDEF
      7127**DCL      7147--REDEF
XSP_RESYNCHRONIZE.ERRDEF
      7229**DCL      7249--REDEF
XSP_SYNC_MAJOR.ERRDEF
      7296**DCL      7316--REDEF
XSP_SYNC_MINOR.ERRDEF
      7362**DCL      7382--REDEF
XSP_TOKEN_GIVE.ERRDEF
      7461**DCL      7481--REDEF
XSP_TOKEN_PLEASE.ERRDEF
      7557**DCL      7577--REDEF
XSP_TYPED_DATA.ERRDEF
      7615**DCL      7635--REDEF
XSP_U_ABORT
      7664**DCL      9082>>ASSIGN
XSP_U_ABORT.ERRDEF
      7673**DCL      7693--REDEF
XSP_U_EXCEPTION_REPORT.ERRDEF
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:442  
      7732**DCL      7752--REDEF
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:443  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #010=XSC$PSEND File=XSC$ACSE.:XSA1TSI                              WED 10/01/97 11:53 Page:444  
              MINI UREF LISTING

XSC$PSEND      12**PROC

PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:445  
     2211        1        /*T***********************************************************/
     2212        2        /*T*                                                         */
     2213        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2214        4        /*T*                                                         */
     2215        5        /*T***********************************************************/
     2216        6        /*F*    NAME:   XSC$DUMPFPT
     2217        7
     2218        8        */
     2219        9        XSC$DUMPFPT: PROC( XSC$GENERIC);
     2220       10        %INCLUDE CP_6;
     2221     5569            %FPT_WRITE( FPTN=FPT_DUMPFPT, DCB=M$DO, BUF=XSS_SCRITCH);
     2222     5600        %INCLUDE XSS_SESSION_E;
     2223     6165        %INCLUDE XSP_PRESENTATION_E;
     2224     6264        %INCLUDE XSC_ACSE_E;
     2225     6342        %INCLUDE XSC_ACSE_M;
     2226     6651            %XSC$GENERIC( STCLASS="");
     2227     6710
     2228     6711    1       DCL XSS_SCRITCH CHAR(80) SYMREF;
     2229     6712
     2230     6713    1       DCL I SBIN;
     2231     6714    1       DCL M$DO DCB;
     2232     6715    1       DCL CKID CHAR(2);
     2233     6716    1       DCL FNCGRP CHAR(15) CONSTANT INIT( 'BUGAscRelUAbPAb');
     2234     6717    1       DCL FNCTYP CHAR(15) CONSTANT INIT( 'BUGReqIndRspCnf');
     2235     6718    1       DCL FNCMAP(0:11) UBIN BYTE CONSTANT INIT(
     2236     6719    1           0,
     2237     6720    1           65, 129, 193, 257,
     2238     6721    1           66, 130, 194, 258,
     2239     6722    1           67, 131,
     2240     6723    1               132) CALIGNED;
     2241     6724
     2242     6725    1       CALL BINCHAR( CKID, XSC$GENERIC.CCID);
     2243     6726    1       I = FNCMAP( XSC$GENERIC.FNC);
     2244     6727    1       CALL INSERT( XSS_SCRITCH, , , '          ', CKID, ' A',
     2245     6728    1               SUBSTR( FNCGRP, 3 * MOD( I, 64), 3),
     2246     6729    1               SUBSTR( FNCTYP, 3 * ( I / 64), 3));
     2247     6730    1       FPT_DUMPFPT.BUF_.BOUND = 19;
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:446  
     2248     6731    1       CALL M$WRITE( FPT_DUMPFPT);
     2249     6732    1       RETURN;
     2250     6733
     2251     6734    1       END XSC$DUMPFPT;

PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:447  
--  Include file information  --

   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSC$DUMPFPT.

   Procedure XSC$DUMPFPT requires 47 words for executable code.
   Procedure XSC$DUMPFPT requires 8 words of local(AUTO) storage.

    No errors detected in file XSC$ACSE.:XSA1TSI    .

PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:448  

 Object Unit name= XSC$DUMPFPT                                File name= XSC$ACSE.:XSA1TOU
 UTS= OCT 01 '97 11:53:53.44 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    12     14  XSC$DUMPFPT
    2   DCB   even  none     0      0  M$DO
    3  RoData even  UTS     15     17  XSC$DUMPFPT
    4   Proc  even  none    47     57  XSC$DUMPFPT
    5  RoData even  none     1      1  XSC$DUMPFPT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        1  XSC$DUMPFPT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  XSS_SCRITCH                           M$DO
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:449  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:450  


     2211        1        /*T***********************************************************/
     2212        2        /*T*                                                         */
     2213        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2214        4        /*T*                                                         */
     2215        5        /*T***********************************************************/
     2216        6        /*F*    NAME:   XSC$DUMPFPT
     2217        7
     2218        8        */
     2219        9        XSC$DUMPFPT: PROC( XSC$GENERIC);

      9  4 000000   000000 700200 xent  XSC$DUMPFPT  TSX0  ! X66_AUTO_1
         4 000001   000010 000001                    ZERO    8,1

     2220       10        %INCLUDE CP_6;
     2221     5569            %FPT_WRITE( FPTN=FPT_DUMPFPT, DCB=M$DO, BUF=XSS_SCRITCH);
     2222     5600        %INCLUDE XSS_SESSION_E;
     2223     6165        %INCLUDE XSP_PRESENTATION_E;
     2224     6264        %INCLUDE XSC_ACSE_E;
     2225     6342        %INCLUDE XSC_ACSE_M;
     2226     6651            %XSC$GENERIC( STCLASS="");
     2227     6710
     2228     6711    1       DCL XSS_SCRITCH CHAR(80) SYMREF;
     2229     6712
     2230     6713    1       DCL I SBIN;
     2231     6714    1       DCL M$DO DCB;
     2232     6715    1       DCL CKID CHAR(2);
     2233     6716    1       DCL FNCGRP CHAR(15) CONSTANT INIT( 'BUGAscRelUAbPAb');
     2234     6717    1       DCL FNCTYP CHAR(15) CONSTANT INIT( 'BUGReqIndRspCnf');
     2235     6718    1       DCL FNCMAP(0:11) UBIN BYTE CONSTANT INIT(
     2236     6719    1           0,
     2237     6720    1           65, 129, 193, 257,
     2238     6721    1           66, 130, 194, 258,
     2239     6722    1           67, 131,
     2240     6723    1               132) CALIGNED;
     2241     6724
     2242     6725    1       CALL BINCHAR( CKID, XSC$GENERIC.CCID);
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:451  

   6725  4 000002   200003 470500                    LDP0    @XSC$GENERIC,,AUTO
         4 000003   000000 236100                    LDQ     0,,PR0
         4 000004   000022 772000                    QRL     18
         4 000005   000777 376007                    ANQ     511,DL
         4 000006   000000 235003                    LDA     0,DU
         4 000007   200006 757100                    STAQ    CKID+1,,AUTO
         4 000010   000100 301500                    BTD
         4 000011   200006 000010                    NDSC9   CKID+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 000012   200005 030002                    NDSC9   CKID,,AUTO               cn=0,s=nosgn,sf=0,n=2

     2243     6726    1       I = FNCMAP( XSC$GENERIC.FNC);

   6726  4 000013   000000 236100                    LDQ     0,,PR0
         4 000014   000033 772000                    QRL     27
         4 000015   000100 101406                    MRL     fill='000'O
         4 000016   000010 000001 3                  ADSC9   FNCMAP,Q                 cn=0,n=1
         4 000017   200004 000004                    ADSC9   I,,AUTO                  cn=0,n=4

     2244     6727    1       CALL INSERT( XSS_SCRITCH, , , '          ', CKID, ' A',

   6727  4 000020   200004 236100                    LDQ     I,,AUTO
         4 000021   000100 506007                    DIV     64,DL
         4 000022   200004 236100                    LDQ     I,,AUTO
         4 000023   200006 755100                    STA     CKID+1,,AUTO
         4 000024   000100 506007                    DIV     64,DL
         4 000025   040000 100400                    MLR     fill='040'O
         4 000026   000013 000012 3                  ADSC9   FNCMAP+3                 cn=0,n=10
         4 000027   000000 000012 xsym               ADSC9   XSS_SCRITCH              cn=0,n=10
         4 000030   200005 220100                    LDX0    CKID,,AUTO
         4 000031   000002 440000 xsym               SXL0    XSS_SCRITCH+2
         4 000032   000016 221000 3                  LDX1    FNCMAP+6
         4 000033   000003 741000 xsym               STX1    XSS_SCRITCH+3
         4 000034   200007 756100                    STQ     CKID+2,,AUTO
         4 000035   200006 236100                    LDQ     CKID+1,,AUTO
         4 000036   000003 402007                    MPY     3,DL
         4 000037   040000 100406                    MLR     fill='040'O
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:452  
         4 000040   000000 000003 3                  ADSC9   FNCGRP,Q                 cn=0,n=3
         4 000041   000003 400003 xsym               ADSC9   XSS_SCRITCH+3            cn=2,n=3
         4 000042   200007 236100                    LDQ     CKID+2,,AUTO
         4 000043   000003 402007                    MPY     3,DL
         4 000044   040000 100406                    MLR     fill='040'O
         4 000045   000004 000003 3                  ADSC9   FNCTYP,Q                 cn=0,n=3
         4 000046   000004 200077 xsym               ADSC9   XSS_SCRITCH+4            cn=1,n=63

     2245     6728    1               SUBSTR( FNCGRP, 3 * MOD( I, 64), 3),
     2246     6729    1               SUBSTR( FNCTYP, 3 * ( I / 64), 3));
     2247     6730    1       FPT_DUMPFPT.BUF_.BOUND = 19;

   6730  4 000047   000004 236000 1                  LDQ     FPT_DUMPFPT+4
         4 000050   177777 376007                    ANQ     65535,DL
         4 000051   000000 276000 5                  ORQ     0
         4 000052   000004 756000 1                  STQ     FPT_DUMPFPT+4

     2248     6731    1       CALL M$WRITE( FPT_DUMPFPT);

   6731  4 000053   000000 630400 1                  EPPR0   FPT_DUMPFPT
         4 000054   040001 713400                    CLIMB   write
         4 000055   401400 401760                    pmme    nvectors=4

     2249     6732    1       RETURN;

   6732  4 000056   000000 702200 xent               TSX2  ! X66_ARET

FPT_DUMPFPT
 Sect OctLoc
   1     000   000003 777640   000010 006000   000000 177640   000000 006014    ................
   1     004   000023 777640   000000 006000   000000 177640   000000 006014    ................
   1     010   000000 400400   000000 000000   000000 000000   000000 000000    ................

FNCGRP
 Sect OctLoc
   3     000   102125 107101   163143 122145   154125 101142   120101 142***    BUGAscRelUAbPAb.

PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:453  
FNCTYP
 Sect OctLoc
   3     004   102125 107122   145161 111156   144122 163160   103156 146***    BUGReqIndRspCnf.

FNCMAP
 Sect OctLoc
   3     010   000101 201301   401102 202302   402103 203204                    .A...B...C..

(unnamed)
 Sect OctLoc
   3     013   040040 040040   040040 040040   040040 040040   040101 040040                 A

(unnamed)
 Sect OctLoc
   5     000   000004 600000                                                    ....
     2250     6733
     2251     6734    1       END XSC$DUMPFPT;

PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:454  
--  Include file information  --

   XSC_ACSE_M.:XSA1TOU  is referenced.
   XSC_ACSE_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSC$DUMPFPT.
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:455  

 **** Variables and constants ****

  ****  Section 001  Data  XSC$DUMPFPT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 FPT_DUMPFPT

  ****  Section 003 RoData XSC$DUMPFPT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(15)    r     1 FNCGRP                    10-0-0/c UBIN(9)     r     1 FNCMAP(0:11)
     4-0-0/c CHAR(15)    r     1 FNCTYP

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @XSC$GENERIC               5-0-0/c CHAR(2)     r     1 CKID
     4-0-0/w SBIN        r     1 I                         *0-0-0/w STRC(504)   r     1 XSC$GENERIC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)    r     1 XSS_SCRITCH

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:456  
     0-0-0N  NULL        r     1 M$DO


   Procedure XSC$DUMPFPT requires 47 words for executable code.
   Procedure XSC$DUMPFPT requires 8 words of local(AUTO) storage.

    No errors detected in file XSC$ACSE.:XSA1TSI    .
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:457  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:458  
          MINI XREF LISTING

CKID
      6715**DCL      6725<<CALLBLT  6727>>CALLBLT
FNCGRP
      6716**DCL      6727>>CALLBLT
FNCMAP
      6718**DCL      6726>>ASSIGN
FNCTYP
      6717**DCL      6727>>CALLBLT
FPT_DUMPFPT
      5586**DCL      6731<>CALL
FPT_DUMPFPT.BUF_.BOUND
      5586**DCL      6730<<ASSIGN
FPT_DUMPFPT.STATION_
      5588**DCL      5588--REDEF
FPT_DUMPFPT.V
      5589**DCL      5586--DCLINIT
FPT_DUMPFPT.V.DVBYTE.VFC#
      5595**DCL      5595--REDEF
I
      6713**DCL      6726<<ASSIGN   6727>>CALLBLT  6727>>CALLBLT
M$WRITE
      5498**DCL-ENT  6731--CALL
XSC$GENERIC
      6668**DCL         9--PROC
XSC$GENERIC.CCID
      6675**DCL      6725>>CALLBLT
XSC$GENERIC.ERRDEF
      6677**DCL      6697--REDEF
XSC$GENERIC.FNC
      6674**DCL      6726>>ASSIGN
XSS_SCRITCH
      6711**DCL      5587--DCLINIT  5588--DCLINIT  6727<<CALLBLT
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:459  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:460  
              MINI UREF LISTING

M$ACCT    5514**DCL-ENT
M$ACTIVATE    5517**DCL-ENT
M$ALIB    5510**DCL-ENT
M$ASUSER    5512**DCL-ENT
M$ATTACH    5519**DCL-ENT
M$BADPP    5537**DCL-ENT
M$CGCTL    5518**DCL-ENT
M$CGINFO    5518**DCL-ENT
M$CHECK    5499**DCL-ENT
M$CHGUNIT    5557**DCL-ENT
M$CLOSE    5497**DCL-ENT
M$CLRSTK    5555**DCL-ENT
M$CMDVAR    5566**DCL-ENT
M$CONFIG    5527**DCL-ENT
M$CORRES    5502**DCL-ENT
M$CPEXIT    5511**DCL-ENT
M$CVM    5535**DCL-ENT
M$CVOL    5500**DCL-ENT
M$DCLFLD    5527**DCL-ENT
M$DEACTIVATE    5517**DCL-ENT
M$DELREC    5499**DCL-ENT
M$DEQ    5564**DCL-ENT
M$DETACH    5519**DCL-ENT
M$DEVICE    5501**DCL-ENT
M$DISPLAY    5564**DCL-ENT
M$DISPRES    5504**DCL-ENT
M$DLIB    5510**DCL-ENT
M$DO    6714**DCL
M$DRIBBLE    5527**DCL-ENT
M$DRTN    5555**DCL-ENT
M$DSUSER    5512**DCL-ENT
M$ENQ    5563**DCL-ENT
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:461  
M$EOM    5522**DCL-ENT
M$ERASE    5528**DCL-ENT
M$ERR    5509**DCL-ENT
M$ERRMSG    5560**DCL-ENT
M$EVENT    5552**DCL-ENT
M$EXHUME    5561**DCL-ENT
M$EXIT    5509**DCL-ENT
M$EXTEND    5501**DCL-ENT
M$FDP    5533**DCL-ENT
M$FDS    5532**DCL-ENT
M$FEBOOT    5525**DCL-ENT
M$FECTL    5526**DCL-ENT
M$FEDUMP    5525**DCL-ENT
M$FID    5560**DCL-ENT
M$FINDPROC    5514**DCL-ENT
M$FSUSER    5512**DCL-ENT
M$FVP    5534**DCL-ENT
M$FWCG    5518**DCL-ENT
M$GBPL    5538**DCL-ENT
M$GDDL    5534**DCL-ENT
M$GDP    5533**DCL-ENT
M$GDS    5532**DCL-ENT
M$GETDCB    5503**DCL-ENT
M$GETMOUSE    5543**DCL-ENT
M$GETPM    5544**DCL-ENT
M$GJOB    5562**DCL-ENT
M$GLINEATTR    5522**DCL-ENT
M$GOODPP    5537**DCL-ENT
M$GPLATEN    5530**DCL-ENT
M$GPROMPT    5529**DCL-ENT
M$GTRMATTR    5523**DCL-ENT
M$GTRMCTL    5521**DCL-ENT
M$GTRMTAB    5524**DCL-ENT
M$GVP    5533**DCL-ENT
M$HELP    5560**DCL-ENT
M$INT    5552**DCL-ENT
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:462  
M$INTRTN    5513**DCL-ENT
M$IOQ    5548**DCL-ENT
M$JOBSTATS    5562**DCL-ENT
M$KEYIN    5502**DCL-ENT
M$LDEV    5497**DCL-ENT
M$LDTRC    5510**DCL-ENT
M$LIMIT    5503**DCL-ENT
M$LINES    5502**DCL-ENT
M$LINK    5509**DCL-ENT
M$MADMUCK    5505**DCL-ENT
M$MAKUSER    5536**DCL-ENT
M$MBS    5504**DCL-ENT
M$MDFFLD    5528**DCL-ENT
M$MERC    5553**DCL-ENT
M$MERCS    5554**DCL-ENT
M$MIRROR    5548**DCL-ENT
M$MONINFO    5565**DCL-ENT
M$MPL    5538**DCL-ENT
M$NODEINFO    5529**DCL-ENT
M$NXTUSR    5563**DCL-ENT
M$OCMSG    5561**DCL-ENT
M$OLAY    5509**DCL-ENT
M$OPEN    5497**DCL-ENT
M$PAS    5538**DCL-ENT
M$PATHCON    5561**DCL-ENT
M$PDS    5532**DCL-ENT
M$PFIL    5499**DCL-ENT
M$PLATEN    5523**DCL-ENT
M$PRECORD    5501**DCL-ENT
M$PROCNAME    5514**DCL-ENT
M$PROFILE    5525**DCL-ENT
M$PROMPT    5521**DCL-ENT
M$RACST    5505**DCL-ENT
M$RDSYSLOG    5546**DCL-ENT
M$READ    5498**DCL-ENT
M$RELDCB    5503**DCL-ENT
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:463  
M$RELRES    5504**DCL-ENT
M$RELSTARF    5506**DCL-ENT
M$REM    5506**DCL-ENT
M$RENV    5553**DCL-ENT
M$REQUIRE    5505**DCL-ENT
M$RETRY    5554**DCL-ENT
M$RETRYS    5554**DCL-ENT
M$REW    5500**DCL-ENT
M$RLSFLD    5528**DCL-ENT
M$RPRIV    5556**DCL-ENT
M$RSPP    5535**DCL-ENT
M$RSWITCH    5557**DCL-ENT
M$RUE    5563**DCL-ENT
M$SAD    5536**DCL-ENT
M$SAVE    5512**DCL-ENT
M$SCON    5513**DCL-ENT
M$SCREECH    5511**DCL-ENT
M$SENV    5553**DCL-ENT
M$SETFMA    5497**DCL-ENT
M$SETFP    5526**DCL-ENT
M$SINPUT    5524**DCL-ENT
M$SLCFLD    5529**DCL-ENT
M$SMOUSE    5543**DCL-ENT
M$SMPRT    5535**DCL-ENT
M$SPRIV    5556**DCL-ENT
M$SSC    5536**DCL-ENT
M$SSWITCH    5556**DCL-ENT
M$STATE    5565**DCL-ENT
M$STD    5537**DCL-ENT
M$STIMER    5551**DCL-ENT
M$STLPP    5534**DCL-ENT
M$STRAP    5551**DCL-ENT
M$STRMATTR    5523**DCL-ENT
M$STRMCTL    5521**DCL-ENT
M$STRMTAB    5524**DCL-ENT
M$SYMBIO    5562**DCL-ENT
PL6.E3A0      #011=XSC$DUMPFPT File=XSC$ACSE.:XSA1TSI                            WED 10/01/97 11:53 Page:464  
M$SYSCON    5548**DCL-ENT
M$SYSID    5566**DCL-ENT
M$TDCLOSE    5547**DCL-ENT
M$TDIO    5547**DCL-ENT
M$TDOPEN    5546**DCL-ENT
M$TDREQCPU    5547**DCL-ENT
M$TEMPWROC    5541**DCL-ENT
M$TIME    5564**DCL-ENT
M$TRAP    5551**DCL-ENT
M$TRMISC    5526**DCL-ENT
M$TRMPRG    5522**DCL-ENT
M$TRTN    5555**DCL-ENT
M$TRUNC    5498**DCL-ENT
M$TTIMER    5551**DCL-ENT
M$UC    5521**DCL
M$UMPL    5538**DCL-ENT
M$UNFID    5560**DCL-ENT
M$UNLATCH    5517**DCL-ENT
M$UNSHARE    5514**DCL-ENT
M$USRFIELD    5557**DCL-ENT
M$VIRTUAL    5532**DCL-ENT
M$WAIT    5555**DCL-ENT
M$WEOF    5500**DCL-ENT
M$WRSYSLOG    5546**DCL-ENT
M$XCON    5552**DCL-ENT
M$XCONRTN    5513**DCL-ENT
M$XEQTIME    5565**DCL-ENT
M$XFLUSH    5506**DCL-ENT
M$XMOUSE    5543**DCL-ENT
M$XXX    5509**DCL-ENT
M$YC    5511**DCL-ENT
XSC$DUMPFPT       9**PROC
