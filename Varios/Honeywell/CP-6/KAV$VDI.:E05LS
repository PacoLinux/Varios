VERSION E05

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:1    
        1        1        /*M* KAV$VDI ASYNC VDI (virtual device interface)                             */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
        8        8
        9        9        KAV$VDI: PROC (PRM_USR_X) ALTRET;
       10       10        /* THE PURPOSE OF THIS ROUTINE IS TO RECEIVE CALLS FROM THE                   */
       11       11        /* VDH TO THE ASYNC HANDLER. THIS ROUTINE DETERMINES WHAT NEEDS               */
       12       12        /* TO BE DONE AND EITHER DOES IT, OR CALLS ANOTHER ROUTINE WITHIN             */
       13       13        /* ASYNC TO DO WHAT NEEDS TO BE DONE.                                         */
       14       14
       15       15        %INCLUDE KV_ASCCHR_E;
       16      152        %INCLUDE KA_SCODE_C;
       17      166        %INCLUDE KV_GLBASM_E;
       18      184 S      %INCLUDE KV_GLBCNS_E;                   /*  VDH CONSTANTS                     */
       19      185        %KV_STRTYP_E;
       20      223        %KV_SCHRSN_E;
       21      230        %KV_VDH_EVT_ID_E;
       22      236        %KV_USR_EVT_ID_E;
       23      256        %KV_USR_FNC_E;
       24      272        %KV_VDH_FNC_E;
       25      292        %KV_CLKNMB_E;
       26      301        %KV_CLKUNT_E;
       27      306        %KV_DSCRSN_E;
       28      315        %KV_INPOPRX_E;
       29      327
       30      328        %INCLUDE KH_SCREECH_M;                  /* screech macro                      */
       31      339        %INCLUDE KHA_FNC_E;
       32      439
       33      440        %INCLUDE KH$STT;                        /* For KA_STT                         */
       34      470
       35      471        %INCLUDE KV_INT_M;
       36      614        %INCLUDE KV$BPC;
       37      643 S      %INCLUDE KV$GLB;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:2    
       38      644 S      %INCLUDE KV$GLBCTX;
       39      645        %INCLUDE LCP_6;
       40      836        %VLP_SCODE (FPTN = Y_SCRILGEVTID, FCG = KA, MID = V, ERR# = %S$KA_ILGEVTID, STCLASS
               836            = CONSTANT);
       41      897        %VLP_SCODE (FPTN = Y_SCRILGINPPRCID, FCG = KA, MID = V, ERR# = %S$KA_ILGINPPRCID,
               897            STCLASS = CONSTANT);
       42      958        %VLP_SCODE (FPTN = Y_SCRILGSCHRSN, FCG = KA, MID = V, ERR# = %S$KA_ILGSCHRSN,
               958            STCLASS = CONSTANT);
       43     1019        %VLP_SCODE (FPTN = Y_SCRILGSETPRM, FCG = KA, MID = V, ERR# = %S$KA_ILGSETPRM,
              1019            STCLASS = CONSTANT);
       44     1080        %VLP_SCODE (FPTN = Y_SCRILGUSRFNC, FCG = KA, MID = V, ERR# = %S$KA_ILGUSRFNC,
              1080            STCLASS = CONSTANT);
       45     1141        %VLP_SCODE (FPTN = Y_SCRNO_MMROTPBFR, FCG = KA, MID = V, ERR# = %S$KA_NO_MMROTPBFR,
              1141            STCLASS = CONSTANT);
       46     1202        %INCLUDE KL_MACRO_C;
       47     4554        %INCLUDE KL_AFCN_C;
       48     4655        %INCLUDE K_ID_E;
       49     4705        %K#LYRID_E;
       50     4712        %K#ENTID_E;
       51     4731        %KV$ERD;                           /*  VDH EXTENDED REAL DEVICE DEFINITION    */
       52     4815        %KV$MRD;                                /*  MASTER REAL DEVICE CONTEXT BLOCK  */
       53     4862        %KV$MVD;                           /*  MASTER VIRTUAL DEVICE CONTEXT BLOCK    */
       54     4906        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
       55     4949        %KV$SSN;                                /*  SESSION CONTEXT                   */
       56     5028        %KV$STR;                                /*  STREAM  CONTEXT                   */
       57     5115        %KV$STT (NAME = KV_STT, STCLASS = SYMREF);
       58     5509        %KV$VDI;                                /*  VDI CONTEXT BLOCK                 */
       59     5580    1   DCL KA_INT_LEV UBIN SYMREF;
       60     5581 S      %INCLUDE KV_PRMID_E;
       61     5582        %KV_PRMID_E;                            /* set and get param stuff            */
       62     5738        %KV$SHRBFR;                             /*  SHARED BUFFER TEMPLATE            */
       63     5770        %INCLUDE KV_GLB_M;                      /*  VDH user macros                   */
       64     5892 S      %INCLUDE KV$INT;
       65     5893        %KV$TRNTBL;                             /*  TRANSLATE TABLE STUFF             */
       66     5951
       67     5952    1   DCL 1 KA$OTPMRK ALIGNED BASED,
       68     5953        %KV$OTPMRK(NAME=DAT,LVL=2,LAST=",");
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:3    
       69     5980    1          2 BYTCNT UBIN WORD ALIGNED;
       70     5981        /* some local variables */
       71     5982
       72     5983    1   DCL LVL UBIN;
       73     5984    1   DCL Y@BYTSIZ UBIN;
       74     5985    1   DCL Y@BYTSIZ2 UBIN;
       75     5986    1   DCL Y@PTR$ PTR;
       76     5987    1   DCL Y@INDEX SBIN;
       77     5988    1   DCL 1 KA@OTPMRK ALIGNED AUTO,
       78     5989        %KV$OTPMRK(NAME=DAT,LAST=",",LVL=2);
       79     6016    1          2 BYTCNT UBIN WORD ALIGNED;
       80     6017
       81     6018        %INCLUDE KA_GLBASM_E;
       82     6100        %INCLUDE KA_GLB_E;
       83     6178        %KA_HLTOTP_E;
       84     6187        %KA_INPFNC_E;                           /*  INPUT FUNCTION DEFINITIONS        */
       85     6232
       86     6233        %INCLUDE KA_GLB;
       87     6310        %KA_MSC;
       88     6332        %INCLUDE KA$GLB;
       89     6473        %INCLUDE KW_ALCT_E;
       90     6663        %INCLUDE KW_LCT_E;
       91     7018        %INCLUDE KA_LCT_E;
       92     7142        %KA$OTPBFR;                             /*  OUTPUT BUFFER TEMPLATE            */
       93     7170        %KA$BFRCTRSTR(FPTN=KA_BFRCTRSTR_INHPRG,STCLASS=CONSTANT,FNC=INHPRG);
       94     7197        %KA$BFRCTRSTR(FPTN=KA_BFRCTRSTR_RPTCHR,STCLASS=CONSTANT,FNC=RPTCHR);
       95     7224        %KA$BFRCTRSTR(FPTN=KA@BFRCTRSTR_INHPRG,STCLASS=AUTO,FNC=INHPRG);
       96     7251        %KA$BFRCTRSTR(FPTN=KA@BFRCTRSTR_RPTCHR,STCLASS=AUTO,FNC=RPTCHR);
       97     7278
       98     7279        %KA_STT;                                /*  ASYNC STATS BUFFER TEMPLATE       */
       99     7642 S      %INCLUDE KV$VDH;
      100     7643        %KA$CTX (STCLASS="BASED(BCTX$)");       /*  ASYNC CONTEXT BLOCK               */
      101     7767    1   DCL BCTX$ PTR AUTO;
      102     7768        %EQU KA_CTX=CHARTEXT('KA$CTX');
      103     7769        %KA_TRNTBL_MSC;                         /*  ASYNC TRANSLATE TABLE ITEMS       */
      104     7790 S      %INCLUDE KV$USR;
      105     7791    1   DCL PRM_USR_X CHAR(PRM_COPY);
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:4    
      106     7792    1   DCL PRM_COPY REDEF PRM_USR_X UBIN;
      107     7793        %KV$USR_DAT(NAME=PRM_USR_DAT,           /*  USER DATA                         */
      108     7794         STCLASS=REDEF PRM_USR_X);
      109     7878        %KV$USR_EVT(NAME=PRM_USR_EVT,           /*  REPORT EVENT TO USER              */
      110     7879         STCLASS=REDEF PRM_USR_X);
      111     7914        %KV$USR_EXTINPTRN(NAME=PRM_USR_EXTINPTRN,
      112     7915         STCLASS=REDEF PRM_USR_X);
      113     7951        %KV$USR_EXTOTPTRN(NAME=PRM_USR_EXTOTPTRN, /* USR EXTENDED OUTPUT TRANSLATION  */
      114     7952         STCLASS=REDEF PRM_USR_X);
      115     7988        %KV$USR_GETPRM(NAME=PRM_USR_GETPRM,     /*  GET PARAMETER                     */
      116     7989         STCLASS=REDEF PRM_USR_X);
      117     8050        %KV$USR_GETOTPBFR(NAME=PRM_USR_GETOTPBFR, /* GET OTPBFR  ARGUMENT STRUCTURE   */
      118     8051         STCLASS=REDEF PRM_USR_X);
      119     8086        %KV$USR_INPPRC(NAME=PRM_USR_INPPRC,     /*  INPUT PROCEDURE                   */
      120     8087         STCLASS=REDEF PRM_USR_X);
      121     8123        %KV$USR_OTPMRK(NAME=PRM_USR_OTPMRK,     /*  USER MARKER REQUEST               */
      122     8124         STCLASS=REDEF PRM_USR_X);
      123     8186        %KV$USR_OTPRPTCHR(NAME=PRM_USR_OTPRPTCHR, /* OUTPUT REPEATED CHARACTER        */
      124     8187         STCLASS=REDEF PRM_USR_X);
      125     8222        %KV$USR_RQSDAT(NAME=PRM_USR_RQSDAT,
      126     8223         STCLASS=REDEF PRM_USR_X);
      127     8286        %KV$USR_SETPRM(NAME=PRM_USR_SETPRM,     /*  USER SET PARAMETER ARGUMENT       */
      128     8287         STCLASS=REDEF PRM_USR_X);
      129     8349        %INCLUDE KH$CHN;                        /* channel table items                */
      130     8471        %KH$CHN;
      131     8595        %INCLUDE KH_CHN;
      132     8635        %KH_CHNDAT;
      133     8653
      134     8654        %INCLUDE GH_IOFNC_E;                    /* IO function codes                  */
      135     8723        %INCLUDE KH$IO;                         /* macro for IO routines              */
      136     8970        %KH$IO(FPTN=KH_IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=CONSTANT);
      137     9084        %KH$IO(FPTN=KH_IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=CONSTANT);
      138     9198        %KH$IO(FPTN=KH@IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=AUTO);
      139     9312        %KH$IO(FPTN=KH@IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=AUTO);
      140     9426
      141     9427        %INCLUDE KA_PERR_C;
      142     9446 S      %INCLUDE GT_LCP6_M;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:5    
      143     9447        %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_LINERRDSC, STCLASS = CONSTANT, FCG = KA, MID = V,
              9447            ERR = %E$ASN_LINERRDSC, SEV = 3);
      144     9542        %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_LINERRLOG, STCLASS = CONSTANT, FCG = KA, MID = V,
              9542            ERR = %E$ASN_LINERRLOG, SEV = 3);
      145     9637
      146     9638        /* get output buffer structure. Used by the marker request code
      147     9639           to call KAV$VDI itself. */
      148     9640
      149     9641        %KV$USR_GETOTPBFR(NAME=KV_USR_GETOTPBFR,STCLASS=STATIC);
      150     9676
      151     9677        /* Output buffer limit exceeded.                                              */
      152     9678
      153     9679    1   DCL KA_OTPBFRLMTEXC UBIN STATIC SYMDEF INIT(0);
      154     9680
      155     9681        /* constant array containing powers of 2 */
      156     9682
      157     9683    1   DCL Y_POWER_OF_2(0:15) UBIN WORD CONSTANT INIT(1,2,4,8,16,32,64,128,
      158     9684    1    256,512,1024,2048,4096,8192,16384,32768);
      159     9685
      160     9686
      161     9687    1   DCL 1 Y_VDI_LCL ALIGNED,
      162     9688    1          2 BUF(0:3) CHAR(1) CALIGNED,
      163     9689        /* ACTUAL NUMBER OF BYTES TO BE OBTAINED FOR THE OUTPUT BUFFER                */
      164     9690    1          2 BYTSIZ UBIN WORD,
      165     9691        /* ABOVE EXPRESSED AS A LOG BASE 2                                            */
      166     9692    1          2 BYTSIZLOG2 UBIN WORD,
      167     9693        /* ACTUAL NUMBER OF BYTES NEEDED ON THIS GET BUFFER CALL                      */
      168     9694    1          2 SIGSIZ UBIN WORD,
      169     9695        /* NEXT COUNT*                                                                */
      170     9696    1          2 NXTCNT UBIN WORD,
      171     9697        /* CAUSE A SYNCHRONOUS FLOW CONTROL HALT AFTER THE REPEATED CHARACTERS.       */
      172     9698    1          2 SNCFLWCTRHLT BIT(1) ALIGNED;
      173     9699
      174     9700        %KV$ERD (NAME=KV_ERD,STCLASS=CONSTANT);
      175     9784
      176     9785        %KV$VDH_EVT(NAME=KV_VDH_EVT_RLSVDI,ID=KV_VDH_EVT_ID_RLSVDI,
      177     9786         STCLASS=SYMREF);
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:6    
      178     9821        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP, ID=KV_VDH_EVT_ID_RQSOTP,
      179     9822         STCLASS=SYMREF);
      180     9857        %KV$VDH_EVT(NAME=KV_VDH_EVT_CMPOTP,ID=KV_VDH_EVT_ID_CMPOTP,
      181     9858         STCLASS=SYMREF);
      182     9893
      183     9894        %KV$VDH_DSC(NAME=KV_VDH_DSC,STCLASS=SYMREF);
      184     9930        %KV$VDH_DSC(NAME = KV@VDH_DSC, STCLASS = AUTO);
      185     9966        %KV$VDH_OTPLCL(NAME = KV_VDH_OTPLCL, STCLASS = SYMREF);
      186    10039        %KV$VDH_OTPLCL(NAME = KV@VDH_OTPLCL, STCLASS = AUTO);
      187    10112        %KV$VDH_OTPMRK(NAME = KV_VDH_OTPMRK, STCLASS = SYMREF);
      188    10174        %KV$VDH_OTPMRK(NAME = KV@VDH_OTPMRK, STCLASS = AUTO);
      189    10236        %KV$VDH_SETCLK(NAME = KV_VDH_SETCLK, STCLASS = SYMREF);
      190    10272        %KV$VDH_SETCLK(NAME = KV@VDH_SETCLK, STCLASS = AUTO);
      191    10308
      192    10309        /* external proc entry DCL's */
      193    10310
      194    10311    1   DCL KAO$SNCFLWCTRHLT ENTRY(1);
      195    10312    1   DCL KAO$SNCHLTOTP ENTRY(1);
      196    10313    1   DCL KAO$ASNRQSHLTOTP ENTRY(1);
      197    10314    1   DCL KAO$ASNRQS ENTRY(3) ALTRET;
      198    10315    1   DCL KAO$ASNRQSRSMOTP ENTRY(1);
      199    10316    1   DCL KAO$DLTOTP ENTRY(1);
      200    10317    1   DCL KAO$TRNOTPIOLD ENTRY;
      201    10318    1   DCL KAO$IOLD_OTP ENTRY;
      202    10319    1   DCL KAO$BFRCTRSTR ENTRY(1);
      203    10320    1   DCL KAO$BFRCRTCNF ENTRY;
      204    10321    1   DCL KAO$OTPINT ENTRY;
      205    10322    1   DCL KAI$INPINT ENTRY;
      206    10323    1   DCL KAI$EXTINPTRN ENTRY(1) ALTRET;
      207    10324    1   DCL KAS$DSC ENTRY(1);
      208    10325    1   DCL KHA$DVCADM ENTRY(6) ALTRET;
      209    10326    1   DCL KHD$SCREECH ENTRY(1);
      210    10327    1   DCL KHD$ERRLOG_SETTERMID_CHN ENTRY(2) ALTRET;
      211    10328    1   DCL KVV$VDI ENTRY(1) ALTRET;
      212    10329    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
      213    10330    1   DCL KHI$IO_INPLCTBYT ENTRY(2) ALTRET;
      214    10331    1   DCL KHI$IO_OTPLCTBYT ENTRY(2) ALTRET;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:7    
      215    10332    1   DCL KHI$DISABLE ENTRY(1);
      216    10333    1   DCL KHI$ENABLE ENTRY;
      217    10334
      218    10335
      219    10336
      220    10337        /* LOAD UP THE CONTEXT BLOCK POINTER.           */
      221    10338    1      BCTX$ = %KV_VDI.USRCTX$;
      222    10339    2      IF BCTX$=ADDR(NIL) THEN DO;
      223    10340        /*
      224    10341           We've had a KILL on this line. Don't do anything except release context.
      225    10342        */
      226    10343    2         IF PRM_USR_EVT.FNC~=%KV_USR_FNC_EVT
      227    10344    2           OR PRM_USR_EVT.ID~=%KV_USR_EVT_ID_RLSVDI
      228    10345    2           AND (PRM_USR_EVT.ID~=%KV_USR_EVT_ID_SCH
      229    10346    2           OR PRM_USR_EVT.PRM~=%KV_SCHRSN_DFR3) THEN ALTRETURN;
      230    10347    2         IF PRM_USR_EVT.ID=%KV_USR_EVT_ID_RLSVDI THEN RETURN;
      231    10348    2      END;
      232    10349
      233    10350    2      DO CASE( PRM_USR_EVT.FNC );
      234    10351
      235    10352        /* KV$USR_DAT - DATA. We get here if doing a transparent write                */
      236    10353        /* to a device that uses synchronous flow control.                            */
      237    10354
      238    10355    2      CASE(%KV_USR_FNC_DAT );
      239    10356    2         KV@VDH_OTPLCL = KV_VDH_OTPLCL;
      240    10357    2         KV@VDH_OTPLCL.TRN = '1'B;
      241    10358    2         KV@VDH_OTPLCL.BFR_.ADR$ = PRM_USR_DAT.DAT__.ADR$;
      242    10359    2         KV@VDH_OTPLCL.BFR_.BYTX = PRM_USR_DAT.DAT__.BYTX;
      243    10360    2         KV@VDH_OTPLCL.BFR_.BYTSIZ = PRM_USR_DAT.DAT__.DATBYTSIZ;
      244    10361    2         %KV_VDI.OTPCHRCNTAFTLF = %KV_VDI.OTPCHRCNTAFTLF+%KV_VDI.TMPOTPCHRCNT;
      245    10362    2         %KA_CTX.OTPCHRCNTUTLHLT = %KA_CTX.OTPCHRCNTUTLHLT-%KV_VDI.TMPOTPCHRCNT;
      246    10363    2         %KV_VDI.TMPOTPCHRCNT = 0;
      247    10364    3         IF (KV@VDH_OTPLCL.BFR_.BYTSIZ >= %KA_CTX.OTPCHRCNTUTLHLT) THEN DO;
      248    10365
      249    10366        /* The data in this record would require a flow control halt in               */
      250    10367        /* the middle of the record. Do the halt now.                                 */
      251    10368
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:8    
      252    10369    3            CALL KAO$SNCFLWCTRHLT ;
      253    10370    4            IF (KV@VDH_OTPLCL.BFR_.BYTSIZ >= %KA_CTX.OTPCHRCNTUTLHLT) THEN DO;
      254    10371
      255    10372        /* The data in this record would require a flow control halt in               */
      256    10373        /* the middle of the record. Adjust the counter up to avoid that.             */
      257    10374
      258    10375    4               %KA_CTX.OTPCHRCNTUTLHLT = KV@VDH_OTPLCL.BFR_.BYTSIZ+1;
      259    10376    4            END /* IF */;
      260    10377    3         END /* IF */;
      261    10378    2         CALL KVV$VDI(KV@VDH_OTPLCL) ;
      262    10379
      263    10380        /* KV$USR_FNC_EVT - REPORT EVENT                                              */
      264    10381
      265    10382    2      CASE(%KV_USR_FNC_EVT );
      266    10383
      267    10384        /* BRANCH OUT DEPENDING ON THE EVENT REPORTED                                 */
      268    10385
      269    10386    2   Y@DOCASE:
      270    10387    3         DO CASE( PRM_USR_EVT.ID );
      271    10388    3         CASE(%KV_USR_EVT_ID_BGNSETPRM );
      272    10389    3         CASE(%KV_USR_EVT_ID_CLKEXP );
      273    10390
      274    10391        /* Clock expired.                                                             */
      275    10392
      276    10393        /* The clock we set for timing line errors expired.                           */
      277    10394
      278    10395    3            %KA_CTX.ERRCLKSET = '0'B;
      279    10396    4            IF %KA_CTX.LINERRCNT>KA_LINERRLOGLMT THEN DO;
      280    10397
      281    10398        /* The line error count exceeds the limit. Log the error.                     */
      282    10399
      283    10400        /*E* ERROR: KAV-E$ASN_LINERRLOG                                            */
      284    10401        /*E* MESSAGE: Excessive Async input line errors                                */
      285    10402        /*E* REMARKS: An excessive number of line input errors (parity            */
      286    10403        /*,* or framing errors, or CLA over-runs) was received.                       */
      287    10404        /*,* The count, in 1 minute, exceeded KA_LINERRLOGLMT.                        */
      288    10405    4               CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_LINERRLOG, %KH_CHN);
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:9    
      289    10406
      290    10407
      291    10408    4            END /* IF */;
      292    10409    3         CASE(%KV_USR_EVT_ID_DLTOTP );
      293    10410
      294    10411        /* PURGE ALL Q'D OUTPUT TO THE REAL DEVICE                                    */
      295    10412
      296    10413    3            CALL KAO$DLTOTP(PRM_USR_EVT);
      297    10414    3            ALTRETURN;                /* USR_EVT.ACT is already properly set.    */
      298    10415    3         CASE(%KV_USR_EVT_ID_DSC );
      299    10416    3            CALL KAO$ASNRQSRSMOTP(%KA#HLTOTP_USRX) ;
      300    10417    3            CALL KAO$ASNRQSRSMOTP(%KA#HLTOTP_DVCX) ;
      301    10418    3         CASE(%KV_USR_EVT_ID_ENDSETPRM );
      302    10419    3         CASE(%KV_USR_EVT_ID_GETSTR );
      303    10420
      304    10421        /* VDH is getting a structure that we're interested in.                       */
      305    10422
      306    10423    4            IF (PRM_USR_EVT.PRM = %KV_STRTYP_MRD) THEN DO;
      307    10424
      308    10425        /* VDH is getting a KV$MRD structure.                                         */
      309    10426
      310    10427    4               %KV_MRD.MINSP_FORPST = KA_MINSP_FORPST(%KV_VDI.LINSPD);
      311    10428    4               %KV_MRD.CALUSR_ERS = '0'B;
      312    10429    4               %KV_MRD.CALUSR_PST = '0'B;
      313    10430    4               %KV_MRD.CALUSR_SETATR = '0'B;
      314    10431    4               %KV_MRD.ERD$ = ADDR(KV_ERD);
      315    10432    4            END /* IF */;
      316    10433    3         CASE(%KV_USR_EVT_ID_HLTOTP );
      317    10434
      318    10435        /* A SYNCHRONOUS OUTPUT HALT HAS BEEN REQUESTED                               */
      319    10436
      320    10437    3            CALL KAO$SNCHLTOTP(%KA#HLTOTP_USRX) ;
      321    10438    3         CASE(%KV_USR_EVT_ID_INHDLTOTP );
      322    10439
      323    10440        /* We are to inhibit deletes of output for n (KV$USR_EVT.PRM) characters.     */
      324    10441
      325    10442    4            IF (KA_DVCFLWCTRCHR(%KV_MRD.DVCFLWCTRALG) ~= 0) THEN DO;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:10   
      326    10443
      327    10444        /* THERE IS A SYNCHRONOUS FLOW CONTROL ALGORITHM IN EFFECT.                   */
      328    10445
      329    10446    5               IF (PRM_USR_EVT.PRM+%KV_VDI.TMPOTPCHRCNT >= %KA_CTX.OTPCHRCNTUTLHLT)
             10446                        THEN DO;
      330    10447
      331    10448        /* IF WE SENT OUT THE CHARACTERS, WE WOULD OVERFLOW                           */
      332    10449        /* (OR JUST FILL) THE DEVICE'S OUTPUT BUFFER.                                 */
      333    10450
      334    10451    5                  CALL KAO$SNCFLWCTRHLT;
      335    10452    5               END /* IF */;
      336    10453    4            END /* IF */;
      337    10454    3            IF %KV_VDI.OTPBFR_.ADR$~=ADDR(NIL) THEN
      338    10455    3            IF (PRM_USR_EVT.PRM >
      339    10456    3              Y_POWER_OF_2(%KV_VDI.OTPBFR_.ADR$->KA$OTPBFR.BYTSIZLOG2)
      340    10457    4              -%KV_VDI.OTPBFR_.BYTX-2) THEN DO;
      341    10458
      342    10459        /* Also dont split the characters across buffer boundaries. */
      343    10460
      344    10461    4               CALL KAO$TRNOTPIOLD ;
      345    10462    4               %KA_CTX.PRVOTPBFRDATEXCSML = '1'B;
      346    10463    4            END /* IF */;
      347    10464
      348    10465        /* BUFFER THE INHIBIT PURGE CONTROL STR_INHPRGING
             10465         */
      349    10466
      350    10467    3            KA@BFRCTRSTR_INHPRG = KA_BFRCTRSTR_INHPRG;
      351    10468    3            KA@BFRCTRSTR_INHPRG.INHPRG.X3F = PRM_USR_EVT.PRM;
      352    10469    3            KA@BFRCTRSTR_INHPRG.TXTSIZ = 2;
      353    10470    3            CALL KAO$BFRCTRSTR(KA@BFRCTRSTR_INHPRG) ;
      354    10471        %EJECT;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:11   
      355    10472
      356    10473        /* KV$USR_OTP1_CHR - OUTPUT-1-CHARACTER REQUEST                               */
      357    10474
      358    10475    3         CASE(%KV_USR_EVT_ID_OTP1_CHR );
      359    10476    3            IF (%KH_CHN.OTPCCBCNT = 0)
      360    10477    3              AND NOT %KA_CTX.ASNHLTOTP
      361    10478    3              AND NOT %KA_CTX.HLTOTP_ALL
      362    10479    3              AND NOT %KA_CTX.HLTOTPNXTBFR_ALL
      363    10480    4              AND (%KV_VDI.OTPBFR_.ADR$ = ADDR(NIL)) THEN DO;
      364    10481
      365    10482        /* It may be ok to directly output this character to the MLCP.                */
      366    10483
      367    10484    4               KH@IO_INPLCTBYT = KH_IO_INPLCTBYT;
      368    10485    4               KH@IO_INPLCTBYT.LCTBYT.ADR = %KA_LCT_OTPASNRQS;
      369    10486    4               CALL KHI$IO_INPLCTBYT(%KH_CHN,KH@IO_INPLCTBYT)
      370    10487    5               WHENRETURN DO;
      371    10488
      372    10489        /* The IO succeeded.                                                          */
      373    10490
      374    10491    5                  IF KH@IO_INPLCTBYT.LCTBYT.DAT~=0 THEN EXIT;
      375    10492
      376    10493        /* WE READ A 0 OUT OF KA_LCT_OTPASNRQS                                        */
      377    10494        /* Store the character into an MLCP LCT byte.                                 */
      378    10495
      379    10496    5                  KH@IO_OTPLCTBYT = KH_IO_OTPLCTBYT;
      380    10497    5                  KH@IO_OTPLCTBYT.LCTBYT.ADR = %KA_LCT_OTPTMP;
      381    10498    5                  KH@IO_OTPLCTBYT.LCTBYT.DAT = PRM_USR_EVT.PRM;
      382    10499    5                  CALL KHI$IO_OTPLCTBYT(%KH_CHN,KH@IO_OTPLCTBYT);
      383    10500
      384    10501        /* Store the asynchronous request identifier into an MLCP LCT byte.           */
      385    10502
      386    10503    5                  KH@IO_OTPLCTBYT.LCTBYT.ADR = %KA_LCT_OTPASNRQS;
      387    10504    5                  KH@IO_OTPLCTBYT.LCTBYT.DAT = %KA#OTPASNRQS_OTP1_CHR;
      388    10505    5                  CALL KHI$IO_OTPLCTBYT(%KH_CHN,KH@IO_OTPLCTBYT);
      389    10506
      390    10507        /* GET THE COMM LINE CONTROLLER GOING.                                        */
      391    10508
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:12   
      392    10509    5                  KH@IO_OTPLCTBYT.LCTBYT.ADR = %KW#TRNSTT;
      393    10510    5                  KH@IO_OTPLCTBYT.LCTBYT.DAT = BITBIN('1F'X);
      394    10511    5                  CALL KHI$IO_OTPLCTBYT(%KH_CHN,KH@IO_OTPLCTBYT);
      395    10512
      396    10513
      397    10514    5                  KH@IO_OTPLCTBYT.LCTBYT.ADR = %KW#TRNSTTMSK;
      398    10515    5                  KH@IO_OTPLCTBYT.LCTBYT.DAT = BITBIN('FF'X);
      399    10516    5                  CALL KHI$IO_OTPLCTBYT(%KH_CHN,KH@IO_OTPLCTBYT);
      400    10517    5                  RETURN;
      401    10518    5               END;                        /* WHENRETURN                         */
      402    10519    4            END /* IF */;
      403    10520    3            ALTRETURN;
      404    10521    3         CASE(%KV_USR_EVT_ID_RLSSTR );
      405    10522
      406    10523        /* VDH is releasing a structure that we're interested in.                     */
      407    10524
      408    10525    4            IF (PRM_USR_EVT.PRM = %KV_STRTYP_MRD) THEN DO;
      409    10526
      410    10527        /* %KV_VDI is being released. That's our queue to do our final                 */
      411    10528        /* phase of disconnect.                                                       */
      412    10529
      413    10530    4               CALL KAS$DSC (%KA_CTX);
      414    10531    4            END /* IF */;
      415    10532    3         CASE(%KV_USR_EVT_ID_RLSVDI );
      416    10533
      417    10534        /* VDH is ready to enter into the phase of disconnect where                   */
      418    10535        /* this instance of VDI will be released. See if we're ready.                 */
      419    10536
      420    10537    4            IF (%KA_CTX.OTPBFRBYTCNT ~= 0) THEN DO;
      421    10538
      422    10539        /* There are still output buffers Q'd. We aren't ready to                     */
      423    10540        /* disconnect. We'll get this call later, after we say                        */
      424    10541        /* %KV_VDH_EVT_ID_RLSVDI.                                                     */
      425    10542
      426    10543    4               ALTRETURN;
      427    10544    4            END;
      428    10545    4            IF %KH_CHN.DRPDTR OR %KV_VDI.INTPHSDSC OR %KV_VDI.PHSDSC THEN DO;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:13   
      429    10546
      430    10547        /* We're to drop data-set-ready on this line when disconnecting.              */
      431    10548        /* We'll set a clock for 2 seconds when we get to KAS$DSC. When it goes off, */
      432    10549        /* we'll raise DTR again to finish the disconnect.                           */
      433    10550
      434    10551    4               %KH_CHN.CLK = '1'B;         /* KAS$DSC flag to set the clock.     */
      435    10552    4               CALL KAO$ASNRQS(%KA#OTPASNRQS_BGNPHSDSC);
      436    10553
      437    10554    4            END /* IF */;
      438    10555    3         CASE(%KV_USR_EVT_ID_SCH );
      439    10556
      440    10557        /* VDH is calling us because we interrupted it with an interrupt.             */
      441    10558        /* We'll do the processing now that we would have done earlier.               */
      442    10559
      443    10560    4            DO CASE( PRM_USR_EVT.PRM );
      444    10561    4            CASE(%KV_SCHRSN_DFR1 );
      445    10562
      446    10563        /* Deferred input interrupt.                                                  */
      447    10564
      448    10565        /* Input interrupts expect to be disabled. */
      449    10566
      450    10567    4   Y@INPINT:   ;
      451    10568    4               LVL = KA_INT_LEV;
      452    10569    4               CALL KHI$DISABLE (LVL);
      453    10570    4               CALL KAI$INPINT;
      454    10571    4               CALL KHI$ENABLE;       /* This call is always from base-level     */
      455    10572    4            CASE(%KV_SCHRSN_DFR0 );
      456    10573
      457    10574        /* Deferred output interrupt.                                                 */
      458    10575
      459    10576    4               CALL KAO$OTPINT ;
      460    10577    4            CASE(%KV_SCHRSN_DFR3 );
      461    10578
      462    10579        /* A kill was issued for the line while it was busy. */
      463    10580
      464    10581    4               %KV_VDI.INTPHSDSC = '1'B;
      465    10582    4               KV@VDH_DSC = KV_VDH_DSC;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:14   
      466    10583    4               KV@VDH_DSC.RSN = %KV_DSCRSN_FRG;
      467    10584    4               CALL KVV$VDI(KV@VDH_DSC);
      468    10585    4            CASE(ELSE);
      469    10586        /*S* SCREECH_CODE: KAV-S$KA_ILGSCHRSN
      470    10587             MESSAGE: ASYNC got unrecognized %KV_SCHRSN on %KV_USR_EVT_ID_SCH         */
      471    10588                    %KH$SCREECH(COD = Y_SCRILGSCHRSN);
             10588                        /* ASYNC got unrecognized %KV_SCHRSN on %KV_USR_EVT_ID_SCH */
      472    10592    4            END /* CASE */;
      473    10593    3         CASE(%KV_USR_EVT_ID_TRMUSRRQSDAT );
      474    10594
      475    10595        /* Terminate user request data. VDH is activating the read.                   */
      476    10596        /* Shut off the paper tape reader, if in paper tape mode.                     */
      477    10597
      478    10598    4            IF %KV_VDI.HALFDUPLEXPAPERTAPE OR %KV_VDI.FULLDUPLEXPAPERTAPE THEN DO;
      479    10599
      480    10600        /* WE'RE IN PAPER TAPE MODE. SEND A DC3 (XOFF) CHARACTER TO                   */
      481    10601        /* STOP THE READER.                                                           */
      482    10602
      483    10603    4               IF NOT %KA_CTX.HLTOTP AND NOT %KV_VDI.PHSDSC
      484    10604    4               THEN CALL KAO$ASNRQS(%KA#OTPASNRQS_DC3);
      485    10605    4            END /* IF */;
      486    10606    3         CASE(%KV_USR_EVT_ID_VDHEXT );
      487    10607    4            IF %KH_CHN.OTPCCBCNT<4 AND NOT %KA_CTX.HLTOTP THEN DO;
      488    10608
      489    10609        /* THE OUTPUT CCB COUNT IS ZERO, SO POSITIONING AND/OR                        */
      490    10610        /* OUTPUT BUFFER TRUNCATING WON'T BE DONE BY THE OUTPUT                       */
      491    10611        /* INTERRUPT ROUTINE.                                                         */
      492    10612        /* IF THERE ARE MESSAGES IN THE Q WE'LL BE BACK HERE SHORTLY,                 */
      493    10613        /* SO WE DON'T HAVE TO DO ANY TRUNCATING NOW.                                 */
      494    10614
      495    10615    5               IF (%KA_CTX.OTPBFRBYTCNT ~= 0) THEN DO;
      496    10616
      497    10617        /* THERE IS AN OUTPUT BUFFER THAT NEEDS TO BE TRUNCATED/IOLD'D.               */
      498    10618
      499    10619    5                  CALL KAO$IOLD_OTP;
      500    10620    5               END /* IF */;
      501    10621    4               IF %KH_CHN.OTPCCBCNT~=0 OR %KA_CTX.HLTOTP THEN EXIT;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:15   
      502    10622
      503    10623        /* Don't CMPOTP if anything is now (or still) queued                          */
      504    10624
      505    10625    5               IF %KV_VDI.OTPCNDPND THEN DO;
      506    10626    5                  CALL KVV$VDI(KV_VDH_EVT_CMPOTP);
      507    10627    5                  CALL KAO$IOLD_OTP;
      508    10628    5               END /* IF */;
      509    10629    4            END /* IF */;
      510    10630    3            IF KV$PTR.INPCNDPND.TRN AND %KA_CTX.LCTSTT.PLD
      511    10631    4              AND %KV_STR.SNDMAXNMBRCR>0 THEN DO;
      512    10632
      513    10633        /* If there's a transparent pending in polled mode,                           */
      514    10634        /* tell the MLCP when to interrupt next,                                      */
      515    10635        /* and do a poll now in case the input is already there.                      */
      516    10636
      517    10637    4               Y@BYTSIZ = %KV_STR.MAXRCRBYTSIZ-%KV_SSN.REDBFR__.DATBYTSIZ
      518    10638    4                 +%KA_CTX.VDH_DAT.DAT__.BYTX;
      519    10639    4               Y@BYTSIZ2 = %KA_CTX.VDH_DAT.DAT__.BFRBYTSIZ/2;
      520    10640    5               DO WHILE Y@BYTSIZ>=Y@BYTSIZ2;
      521    10641    5                  Y@BYTSIZ = Y@BYTSIZ-Y@BYTSIZ2;
      522    10642    5               END;
      523    10643    4               KH@IO_OTPLCTBYT = KH_IO_OTPLCTBYT;
      524    10644    4               KH@IO_OTPLCTBYT.LCTBYT.ADR = %KA_LCT_PLDINTOFS;
      525    10645    4               KH@IO_OTPLCTBYT.LCTBYT.DAT = -Y@BYTSIZ;
      526    10646    4               CALL KHI$IO_OTPLCTBYT (%KH_CHN, KH@IO_OTPLCTBYT);
      527    10647    4               GOTO Y@INPINT;
      528    10648    4            END;
      529    10649    3         CASE (ELSE);
      530    10650
      531    10651        /* WE GOT AN EVENT WE DIDN'T UNDERSTAND.                                      */
      532    10652
      533    10653        /*S* SCREECH_CODE: KAV-S$KA_ILGEVTID
      534    10654             MESSAGE: ASYNC got KV$USR_EVT.ID that it didn't understand               */
      535    10655                 %KH$SCREECH(COD = Y_SCRILGEVTID);
             10655                     /* ASYNC GOT KV$USR_EVT.ID THAT IT DIDNT RECOGNIZE */
      536    10659    3         END Y@DOCASE;
      537    10660
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:16   
      538    10661        /* KV$USR_EXTINPTRN - EXTENDED INPUT TRANSLATION                              */
      539    10662
      540    10663    2      CASE(%KV_USR_FNC_EXTINPTRN );
      541    10664
      542    10665    2         CALL KAI$EXTINPTRN(PRM_USR_EXTINPTRN)
      543    10666    3         WHENALTRETURN DO;
      544    10667    3            ALTRETURN;
      545    10668    3         END;
      546    10669
      547    10670    2      CASE(%KV_USR_FNC_GETOTPBFR );
      548    10671
      549    10672
      550    10673        /* UPDATE A FEW COUNTERS SPECIFIC TO ASYNC                                    */
      551    10674
      552    10675    2         %KV_VDI.OTPCHRCNTAFTLF = %KV_VDI.OTPCHRCNTAFTLF+%KV_VDI.TMPOTPCHRCNT;
      553    10676    2         IF (%KA_CTX.OTPBFRBYTCNT > KA_OTPBLKLMT(%KV_VDI.LINSPD)*2
      554    10677    2           - KA_OTPUN_BLKLMT(%KV_VDI.LINSPD) + 5000)
      555    10678    3         THEN DO;
      556    10679
      557    10680        /* The output buffer byte count is getting excessive.                         */
      558    10681        /* Assume we're out of control, and not allocate any more                     */
      559    10682        /* space.                                                                     */
      560    10683
      561    10684    3            KA_OTPBFRLMTEXC = KA_OTPBFRLMTEXC+1;
      562    10685    3            ALTRETURN;
      563    10686    2         END; ELSE
      564    10687
      565    10688        /* We don't have excessive output buffers allocated.                          */
      566    10689
      567    10690        /* This GROUP is exited if we satisfy the caller's buffer                     */
      568    10691        /* requirements without allocating a new buffer.                              */
      569    10692
      570    10693        /* CHECK TO SEE IF FLOW CONTROL IS ON                                         */
      571    10694    3   Y@DOGROUP: DO;
      572    10695    4            IF (KA_DVCFLWCTRCHR(%KV_MRD.DVCFLWCTRALG) ~= 0) THEN DO;
      573    10696
      574    10697        /* FLOW CONTROL IS ON                                                         */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:17   
      575    10698
      576    10699    4               %KA_CTX.OTPCHRCNTUTLHLT = %KA_CTX.OTPCHRCNTUTLHLT-%KV_VDI.TMPOTPCHRCNT;
      577    10700    5               IF (%KA_CTX.OTPCHRCNTUTLHLT <= 0) THEN DO;
      578    10701
      579    10702        /* WE SHOULD SEND THE DEVICE FLOW CONTROL SEQUENCE                            */
      580    10703
      581    10704    5                  CALL KAO$SNCFLWCTRHLT ;
      582    10705    5               END /* IF */;
      583    10706
      584    10707        /* SETUP Y_VDI_LCL.SIGSIZ TO BE THE NUMBER OF CHARS TO NEXT HALT              */
      585    10708
      586    10709    4               Y_VDI_LCL.SIGSIZ = %KA_CTX.OTPCHRCNTUTLHLT;
      587    10710
      588    10711        /* SEE IF WE ACTUALLY NEED ANOTHER BUFFER OR WHETHER THERE IS                 */
      589    10712
      590    10713    5               IF (%KV_VDI.OTPBFR_.ADR$ ~= ADDR(NIL)) THEN DO;
      591    10714
      592    10715        /* SEE HOW BIG THIS BUFFER ACTUALLY IS                                        */
      593    10716
      594    10717    5                  Y@BYTSIZ =
      595    10718    5                    Y_POWER_OF_2(%KV_VDI.OTPBFR_.ADR$->KA$OTPBFR.BYTSIZLOG2)
      596    10719    5                    -%KV_VDI.OTPBFR_.BYTX
      597    10720    5                    -%KV_VDI.OTPBFR_.ADR$->KA$OTPBFR.NMBMRK*SIZEC(KA$OTPMRK);
      598    10721    6                  IF (Y@BYTSIZ >= 2) THEN DO;
      599    10722
      600    10723        /* There are at least two bytes left in the current output buffer.            */
      601    10724        /* Give some of them to the caller, rather than allocating another            */
      602    10725        /* buffer.                                                                    */
      603    10726
      604    10727    7                     IF (%KA_CTX.OTPCHRCNTUTLHLT <= Y@BYTSIZ) THEN DO;
      605    10728
      606    10729        /* We're to halt for flow control before we'd fill the rest of                */
      607    10730        /* the buffer. Declare the framed portion of the buffer to be the             */
      608    10731        /* character count until we halt.                                             */
      609    10732
      610    10733    7                        %KV_VDI.OTPBFR_.BYTSIZ = %KA_CTX.OTPCHRCNTUTLHLT;
      611    10734    7                     END; ELSE DO;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:18   
      612    10735
      613    10736        /* Give the caller the rest of the buffer.                                    */
      614    10737
      615    10738    7                        %KV_VDI.OTPBFR_.BYTSIZ = Y@BYTSIZ;
      616    10739    7                     END /* IF */;
      617    10740    6                     EXIT Y@DOGROUP;       /* LOOK BELOW                         */
      618    10741    6                  END /* IF */;
      619    10742    5               END /* IF */;
      620    10743    4            END; ELSE DO;
      621    10744
      622    10745        /* THERE IS NO FLOW CONTROL IN EFFECT. SETUP Y_VDI_LCL.SIGSIZ TO NOT 1        */
      623    10746        /* BE A LIMITING FACTOR                                                       */
      624    10747
      625    10748    4               Y_VDI_LCL.SIGSIZ = BITBIN('7FFF'X);
      626    10749    4            END /* IF */;
      627    10750
      628    10751        /* WE NEED TO TRUNCATE AND BUILD A NEW OUTPUT BUFFER                          */
      629    10752
      630    10753    3            CALL KAO$TRNOTPIOLD ;
      631    10754    4            IF (PRM_USR_GETOTPBFR.ESTBYTSIZ < Y_VDI_LCL.SIGSIZ) THEN DO;
      632    10755
      633    10756        /* The estimated byte size of the buffer needed is less than                  */
      634    10757        /* the maximum size otherwise needed. Use the estimated size                  */
      635    10758        /* in determining what size buffer to get.                                    */
      636    10759
      637    10760    4               Y@BYTSIZ = PRM_USR_GETOTPBFR.ESTBYTSIZ;
      638    10761    4            END /* IF */;
      639    10762
      640    10763        /* WE NEED TO ALLOCATE A BUFFER AT LEAST Y@BYTSIZ BYTES LONG. SEE WHICH       */
      641    10764        /* SIZE BUFFER WE SHOULD USE                                                  */
      642    10765
      643    10766    3            Y@BYTSIZ2 = Y@BYTSIZ;
      644    10767    3            Y@BYTSIZ = Y@BYTSIZ + (LENGTHC(KA$OTPBFR) - 1);
      645    10768    4            IF (Y@BYTSIZ2 = 1) AND (%KA_CTX.OTPBFRHED$ = ADDR(NIL)) THEN DO;
      646    10769
      647    10770        /* We're being asked to get only one byte of space, and we                    */
      648    10771        /* currently have no output buffers. Assume this is the                       */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:19   
      649    10772        /* echoplex case, and get a small buffer irregardless of                      */
      650    10773        /* the status of the previous output buffer used.                             */
      651    10774
      652    10775    4               Y_VDI_LCL.BYTSIZ = KA_OTPBFRBYTSIZ_SML;
      653    10776    4               Y_VDI_LCL.BYTSIZLOG2 = KA_OTPBFRBYTSIZ_SMLLOG2;
      654    10777    4               KA_STT.OTPBFRGETCNT_SML = KA_STT.OTPBFRGETCNT_SML+1;
      655    10778    4            END; ELSE IF (Y@BYTSIZ <= KA_OTPBFRBYTSIZ_SML) AND NOT %KA_CTX.
             10778                     PRVOTPBFRDATEXCSML THEN DO;
      656    10779
      657    10780        /* The amount of buffer space we're being asked to get is less                */
      658    10781        /* than what fits in a small buffer, and the previous output                  */
      659    10782        /* buffer's data didn't exceed what fits in a small buffer.                   */
      660    10783        /* Get a small buffer, on the assumption that what we're being                */
      661    10784        /* asked to get isn't only a small portion of our total buffer                */
      662    10785        /* requirements for the next few (hundred) milliseconds.                      */
      663    10786
      664    10787    4               Y_VDI_LCL.BYTSIZ = KA_OTPBFRBYTSIZ_SML;
      665    10788    4               Y_VDI_LCL.BYTSIZLOG2 = KA_OTPBFRBYTSIZ_SMLLOG2;
      666    10789    4               KA_STT.OTPBFRGETCNT_SML = KA_STT.OTPBFRGETCNT_SML+1;
      667    10790    4            END; ELSE DO;
      668    10791
      669    10792        /* Get a big output buffer.                                                   */
      670    10793
      671    10794    4               Y_VDI_LCL.BYTSIZ = KA_OTPBFRBYTSIZ_BIG;
      672    10795    4               Y_VDI_LCL.BYTSIZLOG2 = KA_OTPBFRBYTSIZ_BIGLOG2;
      673    10796    4               KA_STT.OTPBFRGETCNT_BIG = KA_STT.OTPBFRGETCNT_BIG+1;
      674    10797    4            END /* IF */;
      675    10798    3            Y@BYTSIZ = Y_VDI_LCL.BYTSIZ - (LENGTHC(KA$OTPBFR) - 1);
      676    10799    4            IF (Y_VDI_LCL.SIGSIZ > Y@BYTSIZ) THEN DO;
      677    10800
      678    10801        /* The data space in the buffer we'd like to have is less than                */
      679    10802        /* that in the buffer we're getting. Adjust the size we wanted                */
      680    10803        /* down, so that it is the size we're getting.                                */
      681    10804
      682    10805    4               Y_VDI_LCL.SIGSIZ = Y@BYTSIZ;
      683    10806    4            END /* IF */;
      684    10807
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:20   
      685    10808
      686    10809    3            LVL = KA_INT_LEV;
      687    10810        /*
      688    10811          If the current level is below the async inhibit level,
      689    10812          go to the async inhibit level.
      690    10813        */
      691    10814    3            CALL KHI$DISABLE (LVL);
      692    10815
      693    10816    3            CALL KVB$GETSYS(Y_VDI_LCL.BYTSIZ/2,%KV_VDI.OTPBFR_.ADR$)
      694    10817    4            WHENALTRETURN DO;
      695    10818    5               IF (Y_VDI_LCL.BYTSIZ <= KA_OTPBFRBYTSIZ_SML) THEN DO;
      696    10819        /*
      697    10820           we can't even get a small buffer. Screech
      698    10821        */
      699    10822        /*S* SCREECH_CODE: KAV-S$KA_NO_MMROTPBFR
      700    10823             MESSAGE: No memory for an async output buffer  */
      701    10824                       %KH$SCREECH(COD = Y_SCRNO_MMROTPBFR);
             10824                           /* CAN'T GET OUTPUT BUFFER SPACE */
      702    10828    5                  ALTRETURN;
      703    10829    5               END;
      704    10830    5               ELSE DO;
      705    10831        /*
      706    10832           try to get small buffer before screeching
      707    10833        */
      708    10834    5                  KA_STT.OTPBFRGETCNT_BIG = KA_STT.OTPBFRGETCNT_BIG - 1;
      709    10835    5                  KA_STT.OTPBFRGETCNT_SML = KA_STT.OTPBFRGETCNT_SML + 1;
      710    10836    5                  Y_VDI_LCL.BYTSIZ = KA_OTPBFRBYTSIZ_SML;
      711    10837    5                  Y_VDI_LCL.BYTSIZLOG2 = KA_OTPBFRBYTSIZ_SMLLOG2;
      712    10838    5                  Y@BYTSIZ = Y_VDI_LCL.BYTSIZ - (LENGTHC(KA$OTPBFR) - 1);
      713    10839    6                  IF (Y_VDI_LCL.SIGSIZ > Y@BYTSIZ) THEN DO;
      714    10840    6                     Y_VDI_LCL.SIGSIZ = Y@BYTSIZ;
      715    10841    6                  END;
      716    10842    5                  CALL KVB$GETSYS(Y_VDI_LCL.BYTSIZ/2,%KV_VDI.OTPBFR_.ADR$)
      717    10843    6                  WHENALTRETURN DO;
      718    10844                          %KH$SCREECH(COD = Y_SCRNO_MMROTPBFR);
             10844                              /* CAN'T GET OUTPUT BUFFER SPACE */
      719    10848    6                     ALTRETURN;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:21   
      720    10849    6                  END;
      721    10850    5               END;
      722    10851    4            END;                           /* WHENALTRETURN                      */
      723    10852
      724    10853        /* Go back to the level we were at */
      725    10854
      726    10855    3            IF (LVL > KA_INT_LEV) THEN CALL KHI$ENABLE;
      727    10856
      728    10857    3            KA_STT.KHSTT.OTPBFRBYTUTL = KA_STT.KHSTT.OTPBFRBYTUTL+Y_VDI_LCL.BYTSIZ;
      729    10858    3            %KV_VDI.OTPBFR_.BYTX = (LENGTHC(KA$OTPBFR)-1);
      730    10859    3            %KV_VDI.OTPBFR_.BYTSIZ = Y_VDI_LCL.SIGSIZ;
      731    10860
      732    10861        /* SETUP THE BUFFER HEADER                                                    */
      733    10862
      734    10863    3            %KV_VDI.OTPBFR_.ADR$->KA$OTPBFR = '0'B;
      735    10864    3            %KV_VDI.OTPBFR_.ADR$->KA$OTPBFR.BYTSIZLOG2 = Y_VDI_LCL.BYTSIZLOG2;
      736    10865
      737    10866
      738    10867    3            %KA_CTX.OTPBFRBYTCNT = %KA_CTX.OTPBFRBYTCNT+Y_VDI_LCL.BYTSIZ;
      739    10868    4            IF (%KA_CTX.OTPBFRBYTCNT >= KA_OTPBLKLMT(%KV_VDI.LINSPD)) THEN DO;
      740    10869
      741    10870        /* The output buffer byte count is greater than the block limit.              */
      742    10871        /* Wind down the flow of output.                                              */
      743    10872
      744    10873                    %KV$RQSOTP (RQSOTP=NO);
             10879    5           IF KV$PTR.VDI$->KV$VDI.RQSOTP THEN DO;
             10880    5              KV$PTR.VDI$->KV$VDI.RQSOTP = '0'B;
             10881    5              IF KV$PTR.VDI$->KV$VDI.SSNCNT>1
             10882    5              THEN CALL KVV$VDI (KV_VDH_EVT_RQSOTP);
             10883    5              END;
      745    10891    4            END /* IF */;
      746    10892
      747    10893        /* UPDATE THE OUTPUT BUFFER CHAIN                                             */
      748    10894
      749    10895    4            IF (%KA_CTX.OTPBFRTAL$ = ADDR(NIL)) THEN DO;
      750    10896
      751    10897        /* THERE IS NO CHAIN                                                          */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:22   
      752    10898
      753    10899    4               %KA_CTX.OTPBFRHED$ = %KV_VDI.OTPBFR_.ADR$;
      754    10900    4               %KA_CTX.OTPBFRNXTLOD$ = %KV_VDI.OTPBFR_.ADR$;
      755    10901
      756    10902        /* OTHERWISE, A CHAIN EXISTS. ADD THIS BUFFER TO THE TAIL                     */
      757    10903
      758    10904    4            END; ELSE DO;
      759    10905    4               %KV_VDI.OTPBFR_.ADR$->KA$OTPBFR.HLTOTP_ALL = %KA_CTX.HLTOTPNXTBFR_ALL;
      760    10906    4               %KA_CTX.HLTOTPNXTBFR = '0'B;
      761    10907    4               %KA_CTX.OTPBFRTAL$->KA$OTPBFR.LNK$ = %KV_VDI.OTPBFR_.ADR$;
      762    10908    5               IF (%KA_CTX.OTPBFRNXTLOD$ = ADDR(NIL)) THEN DO;
      763    10909
      764    10910        /* INIT THE IOLD BUFFER                                                       */
      765    10911
      766    10912    5                  %KA_CTX.OTPBFRNXTLOD$ = %KV_VDI.OTPBFR_.ADR$;
      767    10913    5               END /* IF */;
      768    10914    4            END /* IF */;
      769    10915
      770    10916        /* SETUP THE TAIL POINTER.                                                    */
      771    10917
      772    10918    3            %KA_CTX.OTPBFRTAL$ = %KV_VDI.OTPBFR_.ADR$;
      773    10919
      774    10920    3         END Y@DOGROUP;
      775    10921        /* CLEAR THE HANDLER SPECIFIC BYTE COUNT                                      */
      776    10922
      777    10923    2         %KV_VDI.TMPOTPCHRCNT = 0;
      778    10924
      779    10925        /* KV$USR_GETPRM - GET PARAMETER REQUEST                                      */
      780    10926
      781    10927    2      CASE(%KV_USR_FNC_GETPRM );
      782    10928
      783    10929        /* We don't do any GETPRMs, but we get asked about some things                */
      784    10930        /* we don't know about. Just doing nothing is ok.                             */
      785    10931
      786    10932
      787    10933        /* KV$USR_INPPRC - INPUT PROCEDURE                                            */
      788    10934
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:23   
      789    10935    2      CASE(%KV_USR_FNC_INPPRC );
      790    10936    3         DO CASE( PRM_USR_INPPRC.ID );
      791    10937    3         CASE(%KA#INPPRC_CLAOVRRUN, %KA#INPPRC_PRTERR );
      792    10938
      793    10939        /* THIS IS A CLA OVER-RUN OR PARITY ERROR.                                    */
      794    10940
      795    10941    3            IF KA_LINERRDSCLMT~=255 OR KA_LINERRLOGLMT~=255
      796    10942    4              AND NOT %KA_CTX.ERRCLKSET THEN DO;
      797    10943
      798    10944        /* We are to monitor errors for some reason, set a timer.                     */
      799    10945
      800    10946    4               KV@VDH_SETCLK = KV_VDH_SETCLK;
      801    10947    4               KV@VDH_SETCLK.UNT = %KV_CLKUNT_MNT;
      802    10948    4               KV@VDH_SETCLK.PRD = 1;
      803    10949    4               KV@VDH_SETCLK.CLKNMB = %KV_CLKNMB_USRCLK1;
      804    10950    5               CALL KVV$VDI(KV@VDH_SETCLK) WHENRETURN DO;
      805    10951    5                  %KA_CTX.ERRCLKSET = '1'B;
      806    10952    5                  %KA_CTX.LINERRCNT = 0;
      807    10953    5               END;
      808    10954    4            END;
      809    10955    3            %KA_CTX.LINERRCNT = %KA_CTX.LINERRCNT+1;
      810    10956    4            IF %KA_CTX.LINERRCNT>KA_LINERRDSCLMT THEN DO;
      811    10957
      812    10958        /* The line error count exceeds the limit. Disconnect, error-log,             */
      813    10959        /* and possibly disable the line.                                             */
      814    10960
      815    10961    4               IF %KH_CHN.DRCCNC AND NOT %KH_CHN.AUTBAD
      816    10962    5               THEN DO;
      817    10963
      818    10964        /* DISABLE IT TO PREVENT US FROM GETTING CONNECTED AGAIN AS SOON AS           */
      819    10965        /* WE DISCONNECT. THE LINE WILL HAVE TO BE ENABLED                            */
      820    10966        /* WITH FEPCON BEFORE WE WILL TRY AGAIN.                                      */
      821    10967
      822    10968    5                  CALL KHA$DVCADM(%KHA_FNC_DISABLE,Y@INDEX,%KH_CHN.TERMID);
      823    10969    5               END;
      824    10970        /*E* ERROR: KAV-E$ASN_LINERRDSC                                            */
      825    10971        /*E* MESSAGE: Disconnecting because of input line errors                      */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:24   
      826    10972        /*E* DESCRIPTION: An excessive number of line input errors (parity            */
      827    10973        /*,* or framing errors, or CLA over-runs) was received.                       */
      828    10974        /*,* The count, in 1 minute, exceeded KA_LINERRDSCLMT.                        */
      829    10975        /*,* A disconnect of the line has been initiated.                             */
      830    10976    4               CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_LINERRDSC, %KH_CHN);
      831    10977
      832    10978    4               %KV_VDI.INTPHSDSC = '1'B;
      833    10979    4               KV@VDH_DSC = KV_VDH_DSC;
      834    10980    4               KV@VDH_DSC.RSN = %KV_DSCRSN_HRDERR;
      835    10981    4               CALL KVV$VDI(KV@VDH_DSC) ;
      836    10982    4            END /* IF */;
      837    10983    3         CASE(%KA#INPPRC_DVCOTPBFRCLR );
      838    10984
      839    10985        /* THE DEVICE'S OUTPUT BUFFER HAS BEEN CLEARED.                               */
      840    10986        /* RESET THE OUTPUT CHARACTER COUNT UNTIL HALT BACK TO                        */
      841    10987        /* THE DEVICE'S OUTPUT BUFFER SIZE, SINCE THE BUFFER                          */
      842    10988        /* IS NOW EMPTY. THIS IS TO AVOID SENDING THE SYNCHRONOUS                     */
      843    10989        /* FLOW CONTROL CHARACTER (E.G., ETX) WHILE THE DEVICE IS                     */
      844    10990        /* THROWING AWAY CHARACTERS. IF WE DO, THE LINE GOES DEAD.                    */
      845    10991
      846    10992    3            %KA_CTX.OTPCHRCNTUTLHLT = %KV_ERD.DVCOTPBFRSIZ;
      847    10993    3            IF %KA_CTX.OTPCHRCNTUTLHLT<10 THEN %KA_CTX.OTPCHRCNTUTLHLT = 256;
      848    10994    3         CASE(%KA#INPPRC_HLTOTP );
      849    10995
      850    10996        /* THIS IS AN OUTPUT HALT REQUEST.                                            */
      851    10997
      852    10998    3            CALL KAO$ASNRQSHLTOTP(%KA#HLTOTP_USRX);
      853    10999    3            IF %KA_CTX.HLTOTP.BITT(%KA#HLTOTP_USRX)
      854    11000    3              AND %KA_CTX.OTPBFRTAL$=ADDR(NIL) AND %KV_VDI.USRRQSDAT.RED
      855    11001        /*
      856    11002           If a read is pending at the device, make it easier to continue.
      857    11003        */
      858    11004    3            THEN %KA_CTX.REDHLT = '1'B;
      859    11005    3         CASE(%KA#INPPRC_SETTRNTBL );
      860    11006
      861    11007        /* THIS IS A TOGGLE ASCII-APL REQUEST.                                        */
      862    11008
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:25   
      863    11009    3            Y@INDEX = 0;
      864    11010    3   Y@LOOP2:
      865    11011    4            DO WHILE ('1'B);               /* LOOP START                         */
      866    11012
      867    11013        /* THIS LOOP IS TRAVERSED FOR EACH CHARACTER IN THE KA_TRNTBLCHNCHR_...       */
      868    11014        /* TABLE EXAMINED.                                                            */
      869    11015
      870    11016    5               IF (PRM_USR_INPPRC.CHR = KA_TRNTBLCHNCHR$(%KV_TRNTBL.FNTCLS)->
             11016                        KA$TRNTBLCHNCHR(Y@INDEX)) THEN DO;
      871    11017
      872    11018        /* WE'VE FOUND THE TRANSLATED '$'. SET THE NEW TRANSLATE TABLE POINTER        */
      873    11019        /* TO THE TRANSLATE TABLE INDICATED BY THE '$' VALUE.                         */
      874    11020
      875    11021    6                  IF %KV_MVD.APLLCNRM THEN DO;
      876    11022
      877    11023        /* IF WE ARE GOING TO AN APL TRANSLATE TABLE, GO TO THE PARTIAL (PRINT 'LOWERC*/
      878    11024        /* CHARACTERS AS UPPERCASE) VERSION.                                          */
      879    11025
      880    11026    6                     %KV_MVD.TRNTBL$ = KA_TRNTBL_PRT$(Y@INDEX);
      881    11027    6                  END; ELSE DO;
      882    11028
      883    11029        /* IF WE ARE GOING TO AN APL TRANSLATE TABLE, GO TO THE FULL (UNDERSCORED     */
      884    11030        /* 'LOWERCASE' CHARACTERS) VERSION.                                           */
      885    11031
      886    11032    6                     %KV_MVD.TRNTBL$ = KA_TRNTBL_FUL$(Y@INDEX);
      887    11033    6                  END /* IF */;
      888    11034    5                  EXIT Y@LOOP2;            /* LOOK BELOW                         */
      889    11035    5               END /* IF */;
      890    11036    4               IF (Y@INDEX >= %KV_FNTCLS_HI) THEN EXIT Y@LOOP2;
      891    11037
      892    11038        /* EITHER THERE IS AN ERROR IN ONE OF THE TABLES THAT GETS US                 */
      893    11039        /* HERE, OR THIS IS AN ILLEGAL ESCAPE SEQUENCE.                               */
      894    11040
      895    11041    4               Y@INDEX = Y@INDEX+1;
      896    11042    4            END Y@LOOP2;
      897    11043    3         CASE(ELSE);
      898    11044
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:26   
      899    11045        /* WE GOT AN INPPRC ID WE DIDNT UNDERSTAND                                    */
      900    11046
      901    11047        /*S* SCREECH_CODE: KAV-S$KA_ILGINPPRCID
      902    11048             MESSAGE: ASYNC got a KV$USR_INPPRC.ID it didn't understand               */
      903    11049                 %KH$SCREECH(COD = Y_SCRILGINPPRCID);
             11049                     /* ASYNC GOT A KV$USR_INPPRC.ID IT DIDN'T UNDERSTAND */
      904    11053    3         END /* CASE */;
      905    11054
      906    11055        /* KV$USR_OTPMRK - OUTPUT MARKER REQUEST                                      */
      907    11056
      908    11057    2      CASE(%KV_USR_FNC_OTPMRK );
      909    11058
      910    11059    3         IF PRM_USR_OTPMRK.CMPOTP THEN DO;
      911    11060                 %KV$CMPOTP;
             11065    4           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;
             11066    4              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);
             11067    4              END;                         /* END IF                             */
      912    11069    3         END;
      913    11070
      914    11071        /* If there is no output buffer at all, send the marker right back            */
      915    11072
      916    11073    3         IF (%KA_CTX.OTPBFRBYTCNT = 0) THEN DO;
      917    11074    3            KV@VDH_OTPMRK = KV_VDH_OTPMRK;
      918    11075    3            KV@VDH_OTPMRK.DAT = PRM_USR_OTPMRK.DAT;
      919    11076    3            CALL KVV$VDI(KV@VDH_OTPMRK) ;
      920    11077    3         END; ELSE DO;
      921    11078        %EJECT;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:27   
      922    11079        /*
      923    11080           A picture is needed to explain the following code about where to put
      924    11081           the marker and how to update KV$VDI.OTPBFR_.BYTSIZ :
      925    11082
      926    11083                                   .__________________.
      927    11084                    Y@PTR$ ------->|       H D R      |
      928    11085                                   |__________________|
      929    11086                                   |                  |
      930    11087                                   |       O T P      |
      931    11088                                   |       C H R      |
      932    11089                                   |__________________|
      933    11090         KV$VDI.OTPBFR_.BYTX ---A->|                  |  A
      934    11091                                |  |                  |  |
      935    11092                                |  |                  | KV$VDI.OTPBFR_.BYTSIZ
      936    11093                                |  |                  |  |
      937    11094                      Spare space  |__________________|  V
      938    11095                                |  /  /  /  /  /  /  /|
      939    11096                                |  | /  /  /  /  /  / |
      940    11097                                |  |/  /  /  /  /  /  /
      941    11098                                   |__/__/__/__/__/__/|
      942    11099                   Y@INDEX -----V->|   NEW MARKER     |
      943    11100                                   |__________________|
      944    11101                                   |                  |
      945    11102                                   |       M R K      |
      946    11103                                   |__________________|
      947    11104
      948    11105        */
      949    11106
      950    11107    3            KA@OTPMRK.DAT = PRM_USR_OTPMRK.DAT;
      951    11108    3            Y@PTR$ = %KV_VDI.OTPBFR_.ADR$;
      952    11109    4            IF (Y@PTR$ ~= ADDR(NIL)) THEN DO;
      953    11110    4               Y@INDEX = Y_POWER_OF_2(Y@PTR$->KA$OTPBFR.BYTSIZLOG2)
      954    11111    4                 - (Y@PTR$->KA$OTPBFR.NMBMRK+1)*SIZEC(KA$OTPMRK);
      955    11112    4               IF (Y@INDEX > %KV_VDI.OTPBFR_.BYTX) THEN
      956    11113
      957    11114        /* We have room to put a marker at the current bottom of the
      958    11115           output buffer. (there may be previous markers beneath it) */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:28   
      959    11116
      960    11117    4               KA@OTPMRK.BYTCNT = %KV_VDI.OTPBFR_.BYTX-LENGTHC(KA$OTPBFR)+1;
      961    11118    5               ELSE DO;
      962    11119    5                  CALL KAO$TRNOTPIOLD;
      963    11120    5                  %KA_CTX.PRVOTPBFRDATEXCSML = '1'B;
      964    11121    5               END;
      965    11122    4            END;
      966    11123    4            IF %KV_VDI.OTPBFR_.ADR$ = ADDR(NIL) THEN DO;
      967    11124        /*
      968    11125           Either we have just truncated the last buffer in the chain,
      969    11126           or there is not enough room in the current buffer for the marker.
      970    11127           Request another output buffer and place the marker there.
      971    11128        */
      972    11129    4               KV_USR_GETOTPBFR.ESTBYTSIZ = 2; /* anything > 1 will do           */
      973    11130    4               CALL KAV$VDI(KV_USR_GETOTPBFR)
      974    11131    5               WHENALTRETURN DO; ALTRETURN; END;
      975    11132
      976    11133        /* Put the marker at the bottom of this newly obtained buffer */
      977    11134
      978    11135    4               Y@PTR$ = %KV_VDI.OTPBFR_.ADR$;
      979    11136    4               Y@INDEX = Y_POWER_OF_2(Y@PTR$->KA$OTPBFR.BYTSIZLOG2)
      980    11137    4                 - SIZEC(KA$OTPMRK);
      981    11138    4               KA@OTPMRK.BYTCNT = 0;  /* 0 shows that this marks a previous bfr. */
      982    11139    4            END;
      983    11140
      984    11141    3            PINCRC(Y@PTR$,Y@INDEX)->KA$OTPMRK = KA@OTPMRK;
      985    11142    3            Y@PTR$->KA$OTPBFR.NMBMRK = Y@PTR$->KA$OTPBFR.NMBMRK + 1;
      986    11143    3            IF %KV_VDI.OTPBFR_.BYTSIZ > Y@INDEX-%KV_VDI.OTPBFR_.BYTX
      987    11144    3            THEN %KV_VDI.OTPBFR_.BYTSIZ = Y@INDEX-%KV_VDI.OTPBFR_.BYTX;
      988    11145    3         END;
      989    11146    2         IF PRM_USR_OTPMRK.CMPOTP THEN
      990    11147              %KV$CMPOTP;
             11152    3           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;
             11153    3              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);
             11154    3              END;                         /* END IF                             */
      991    11156
      992    11157        /* KV$USR_OTPRPTCHR - OUTPUT REPEATED CHARACTER                               */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:29   
      993    11158
      994    11159    2      CASE(%KV_USR_FNC_OTPRPTCHR );
      995    11160    2         Y_VDI_LCL.SNCFLWCTRHLT = '0'B;
      996    11161    2         Y@BYTSIZ = PRM_USR_OTPRPTCHR.CNT;
      997    11162    2         Y_VDI_LCL.NXTCNT = Y@BYTSIZ;
      998    11163    3         DO UNTIL (Y_VDI_LCL.NXTCNT = 0);  /* LOOP START                         */
      999    11164
     1000    11165        /* THIS LOOP IS TRAVERSED ONCE FOR EACH CONTROL STRING GENERATED,             */
     1001    11166        /* AND ONCE IF THE REMAINING REPEAT COUNT IS 0, 1, OR 2.                      */
     1002    11167
     1003    11168
     1004    11169        /* IF THE REMAINING REPEAT COUNT IS GREATER THAN OR EQUAL                     */
     1005    11170        /* TO THE MAXIMUM VALUE FOR                                                   */
     1006    11171        /* A REPEAT COUNT IN THE CONTROL STRING,                                      */
     1007    11172        /* GENERATE A CONTROL STRING FOR '3F'X.                                       */
     1008    11173
     1009    11174    3            IF Y@BYTSIZ > BITBIN('3F'X) THEN Y@BYTSIZ = BITBIN('3F'X);
     1010    11175    4            IF (KA_DVCFLWCTRCHR(%KV_MRD.DVCFLWCTRALG) ~= 0) THEN DO;
     1011    11176
     1012    11177        /* THERE IS A SYNCHRONOUS FLOW CONTROL ALGORITHM IN EFFECT.                   */
     1013    11178
     1014    11179    4               Y@BYTSIZ2 = %KA_CTX.OTPCHRCNTUTLHLT-%KV_VDI.TMPOTPCHRCNT;
     1015    11180
     1016    11181        /* IF WE SENT OUT THE REPEATED CHARACTERS, WE WOULD OVERFLOW                  */
     1017    11182        /* (OR JUST FILL) THE DEVICE'S OUTPUT BUFFER. BREAK UP THE                    */
     1018    11183        /* REPEATED CHARACTER INTO A SERIES OF REPEATED CHARACTERS,                   */
     1019    11184        /* WITH OUTPUT HALTS INTERSPERSED.                                            */
     1020    11185
     1021    11186    4               IF Y@BYTSIZ > Y@BYTSIZ2 THEN Y@BYTSIZ = Y@BYTSIZ2;
     1022    11187    4               Y_VDI_LCL.SNCFLWCTRHLT = '1'B;
     1023    11188    4            END /* IF */;
     1024    11189    3            Y_VDI_LCL.NXTCNT = Y_VDI_LCL.NXTCNT-Y@BYTSIZ;
     1025    11190    4            IF (Y@BYTSIZ = 1) THEN DO;
     1026    11191
     1027    11192        /* THE REPEAT COUNT IS 1*                                                     */
     1028    11193    4               KA@BFRCTRSTR_RPTCHR = KA_BFRCTRSTR_RPTCHR;
     1029    11194    4               KA@BFRCTRSTR_RPTCHR.TXTSIZ = 1;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:30   
     1030    11195    4               KA@BFRCTRSTR_RPTCHR.TXT(0) = ASCBIN(PRM_USR_OTPRPTCHR.CHR);
     1031    11196    4               CALL KAO$BFRCTRSTR(KA@BFRCTRSTR_RPTCHR);
     1032    11197    4            END; ELSE IF (Y@BYTSIZ = 2) THEN DO;
     1033    11198
     1034    11199        /* THE REPEAT COUNT IS 2* THAN BUFFERING THE CHR TWICE.                       */
     1035    11200
     1036    11201    4               KA@BFRCTRSTR_RPTCHR = KA_BFRCTRSTR_RPTCHR;
     1037    11202    4               KA@BFRCTRSTR_RPTCHR.TXTSIZ = 2;
     1038    11203    4               KA@BFRCTRSTR_RPTCHR.TXT(0) = ASCBIN(PRM_USR_OTPRPTCHR.CHR);
     1039    11204    4               KA@BFRCTRSTR_RPTCHR.TXT(1) = ASCBIN(PRM_USR_OTPRPTCHR.CHR);
     1040    11205    4               CALL KAO$BFRCTRSTR(KA@BFRCTRSTR_RPTCHR);
     1041    11206    4            END; ELSE IF (Y@BYTSIZ >= 3) THEN DO;
     1042    11207
     1043    11208        /* THE REPEAT COUNT ISN'T LESS THAN THE MINIMUM NUMBER OF CHARACTERS          */
     1044    11209        /* REQUIRED FOR A REPEAT-CHARACTER CONTROL STRING (3), SO WE'LL               */
     1045    11210        /* EITHER BREAK EVEN OR SAVE BY USING THE CONTROL STRING.                     */
     1046    11211
     1047    11212    4               KA@BFRCTRSTR_RPTCHR = KA_BFRCTRSTR_RPTCHR;
     1048    11213    4               KA@BFRCTRSTR_RPTCHR.TXTSIZ = 3;
     1049    11214    4               KA@BFRCTRSTR_RPTCHR.TXT(0) = %KA#OTPCTRSTRCHR_BGN;
     1050    11215    4               KA@BFRCTRSTR_RPTCHR.TXT(1) = %KA#OTPCTRSTRCHR_RPTCHR + Y@BYTSIZ;
     1051    11216    4               KA@BFRCTRSTR_RPTCHR.TXT(2) = ASCBIN(PRM_USR_OTPRPTCHR.CHR);
     1052    11217    4               CALL KAO$BFRCTRSTR(KA@BFRCTRSTR_RPTCHR);
     1053    11218    4            END /* IF */;
     1054    11219    3            %KV_SSN.OTPCHRCNT = Y@BYTSIZ+%KV_SSN.OTPCHRCNT;
     1055    11220    3            KV_STT.OTPCHRCNT = Y@BYTSIZ+KV_STT.OTPCHRCNT;
     1056    11221    3            %KV_VDI.TMPOTPCHRCNT = Y@BYTSIZ+%KV_VDI.TMPOTPCHRCNT;
     1057    11222    3            IF Y_VDI_LCL.SNCFLWCTRHLT
     1058    11223
     1059    11224        /* WE ARE TO GENERATE A SYNCHRONOUS OUTPUT HALT FOR FLOW CONTROL.             */
     1060    11225
     1061    11226    3            THEN IF Y@BYTSIZ=Y@BYTSIZ2
     1062    11227    3            THEN CALL KAO$SNCFLWCTRHLT;
     1063    11228    4            ELSE DO;
     1064    11229
     1065    11230        /* MAKE SURE THE OTPBFR IS PROPERLY LIMITED                                   */
     1066    11231
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:31   
     1067    11232    4               Y@BYTSIZ2 = Y@BYTSIZ2-Y@BYTSIZ;
     1068    11233    4               IF %KV_VDI.OTPBFR_.BYTSIZ > Y@BYTSIZ2 THEN %KV_VDI.OTPBFR_.BYTSIZ =
             11233                        Y@BYTSIZ2;
     1069    11234    4            END /* IF */;
     1070    11235
     1071    11236    3            Y@BYTSIZ = Y_VDI_LCL.NXTCNT;
     1072    11237    3         END;                              /* DO UNTIL                           */
     1073    11238
     1074    11239        /* KV$USR_RQSDAT - REQUEST DATA                                               */
     1075    11240
     1076    11241    2      CASE(%KV_USR_FNC_RQSDAT );
     1077    11242
     1078    11243        /* KV$USR_SETPRM - SET PARAM PROCESSING                                       */
     1079    11244
     1080    11245    2      CASE(%KV_USR_FNC_SETPRM );
     1081    11246
     1082    11247        /* DETERMINE WHICH PARAMETER WE WERE INVOKED TO SET                           */
     1083    11248
     1084    11249    3         DO SELECT(PRM_USR_SETPRM.PRMID);
     1085    11250    3            SELECT(%KV_PRMID_DVCFLWCTRALG, %KV_PRMID_CTRCHR);
     1086    11251
     1087    11252        /* Handle miscellaneous parameters that influence other parameters.           */
     1088    11253
     1089    11254        /* If it affects flow control, and download the current configuration.        */
     1090    11255
     1091    11256    3            CALL KAO$BFRCRTCNF;
     1092    11257
     1093    11258
     1094    11259    3            IF (KA_DVCFLWCTRCHR(%KV_MRD.DVCFLWCTRALG) ~= 0) AND
     1095    11260    4              (%KV_ERD.DVCOTPBFRSIZ > 10) THEN DO;
     1096    11261
     1097    11262        /* There is a synchronous flow control algorithm in effect.                   */
     1098    11263        /* Ask for control when getting transparent writes so we can                  */
     1099    11264        /* do flow control at the beginning of the record (rather than                */
     1100    11265        /* in the middle, which causes bad problems occasionally).                    */
     1101    11266
     1102    11267    4               %KV_VDI.USEOTPBFRTRN = '0'B;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:32   
     1103    11268    4               %KV_VDI.USEOTPBFRBNR = '0'B;
     1104    11269    4            END; ELSE DO;
     1105    11270
     1106    11271        /* No synchronous flow control. Let VDH do the buffering directly.            */
     1107    11272
     1108    11273    4               %KV_VDI.USEOTPBFRTRN = '1'B;
     1109    11274    4               %KV_VDI.USEOTPBFRBNR = '1'B;
     1110    11275    4               %KA_CTX.OTPCHRCNTUTLHLT = 0;
     1111    11276    4            END /* IF */;
     1112    11277    3            SELECT(%KV_PRMID_PARITY);
     1113    11278
     1114    11279        /* THIS IS A POST PROCESSING CALL. ALL WE HAVE TO DO IS                       */
     1115    11280        /* CALL A ROUTINE TO DOWNLOAD THE CURRENT CONFIGURATION INFO                  */
     1116    11281
     1117    11282    3            CALL KAO$BFRCRTCNF ;
     1118    11283    3            SELECT(%KV_PRMID_CRTLINSPD);
     1119    11284    4            IF PRM_USR_SETPRM.PREPRC THEN DO;
     1120    11285
     1121    11286        /*  This is a pre-processing call to set the line speed.                      */
     1122    11287        /* Just do the line speed distribution accounting now, and                    */
     1123    11288        /* actually set the line speed on the post-processing call.                   */
     1124    11289
     1125    11290    4               KA_STT.LINSPDDST(%KV_VDI.LINSPD) = KA_STT.LINSPDDST(%KV_VDI.LINSPD) -1;
     1126    11291    4            END; ELSE DO;
     1127    11292
     1128    11293        /* THIS IS A POST PROCESSING CALL TO ALLOW US TO LOAD THE LINE                */
     1129    11294        /* SPEED INTO KA$CTX AND DOWNLOAD IT INTO THE MLCP                            */
     1130    11295
     1131    11296    4               CALL KAO$BFRCRTCNF ;
     1132    11297    4               KA_STT.LINSPDDST(%KV_VDI.LINSPD) = KA_STT.LINSPDDST(%KV_VDI.LINSPD) +1;
     1133    11298    4               %KV_MRD.MINSP_FORPST = KA_MINSP_FORPST(%KV_VDI.LINSPD);
     1134    11299    4               %KV_VDI.RCVFLWCTRMAXCRD = KA_OTPBLKLMT(%KV_VDI.LINSPD);
     1135    11300    4               %KV_VDI.RCVFLWCTRMINCRDINC = %KV_VDI.RCVFLWCTRMAXCRD/4;
     1136    11301    4            END /* IF */;
     1137    11302    3            SELECT(%KV_PRMID_HALFDUPLEXPAPERTAPE,%KV_PRMID_FULLDUPLEXPAPERTAPE);
     1138    11303
     1139    11304        /* If either half or full duplex paper tape is set, we need to                */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:33   
     1140    11305        /* be called when VDH no longer wants data so we can turn off the             */
     1141    11306        /* paper tape reader.                                                         */
     1142    11307
     1143    11308    3            %KV_VDI.USREVTENB(%KV_USR_EVT_ID_TRMUSRRQSDAT) =
     1144    11309    3              %KV_VDI.HALFDUPLEXPAPERTAPE|%KV_VDI.FULLDUPLEXPAPERTAPE;
     1145    11310    3            SELECT(ELSE);
     1146    11311
     1147    11312        /* WE GOT A PRMID WE DIDNT UNDERSTAND                                         */
     1148    11313
     1149    11314        /*S* SCREECH_CODE: KAV-S$KA_ILGSETPRM
     1150    11315             MESSAGE: ASYNC got a KV$USR_SETPRM it couldn't decode                  */
     1151    11316              %KH$SCREECH(COD = Y_SCRILGSETPRM);
             11316                  /* ASYNC GOT A KV$USR_SETPRM IT COULDN'T DECODE */
     1152    11320    3         END;                              /* DO SELECT                          */
     1153    11321
     1154    11322    2      CASE(ELSE);
     1155    11323
     1156    11324        /* WE GOT A FUNCTION CODE WE DIDNT UNDERSTAND                                 */
     1157    11325
     1158    11326        /*S* SCREECH_CODE: KAV-S$KA_ILGUSRFNC
     1159    11327             MESSAGE: ASYNC got K V$USR_..._FNC that it didn't understand              */
     1160    11328              %KH$SCREECH(COD = Y_SCRILGUSRFNC);
             11328                  /* ASYNC GOT KV$USR_..._FNC THAT IT DIDNT UNDERSTAND */
     1161    11332    2      END /* CASE */;
     1162    11333    1   END KAV$VDI;

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:34   
--  Include file information  --

   KA_PERR_C.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KA_LCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KW_ALCT_E.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLBASM_E.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV$BPC.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_SCREECH_M.:E05TOU  is referenced.
   KV_GLBASM_E.:E05TOU  is referenced.
   KA_SCODE_C.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:35   
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAV$VDI.

   Procedure KAV$VDI requires 2375 words for executable code.
   Procedure KAV$VDI requires 56 words of local(AUTO) storage.

    No errors detected in file KAV$VDI.:E05TSI    .

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:36   

 Object Unit name= KAV$VDI                                    File name= KAV$VDI.:E05TOU
 UTS= JUL 30 '97 00:04:55.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS    132     84  KAV$VDI
    1   Data  even  none     3      3  KAV$VDI
    2   Proc  even  none  2375    947  KAV$VDI
    3  RoData even  none    30     1E  KAV$VDI

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  KAV$VDI

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    1      2  KA_OTPBFRLMTEXC
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:37   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KAO$SNCFLWCTRHLT
 yes     yes           Std       1 KVV$VDI
 yes     yes           Std       2 KHD$ERRLOG_SETTERMID_CHN
         yes           Std       0 KAO$TRNOTPIOLD
         yes           Std       1 KAO$BFRCTRSTR
 yes     yes           Std       2 KVB$GETSYS
         yes           Std       1 KAO$DLTOTP
         yes           Std       1 KAO$ASNRQSRSMOTP
 yes     yes           Std       3 KAO$ASNRQS
         yes           Std       1 KAO$ASNRQSHLTOTP
         yes           Std       0 KAI$INPINT
         yes           Std       0 KAO$IOLD_OTP
         yes           Std       0 KHI$ENABLE
 yes     yes           Std       6 KHA$DVCADM
         yes           Std       0 KAO$BFRCRTCNF
         yes           Std       1 KAO$SNCHLTOTP
         yes           Std       1 KHI$DISABLE
 yes     yes           Std       2 KHI$IO_OTPLCTBYT
 yes     yes           Std       2 KHI$IO_INPLCTBYT
         yes           Std       0 KAO$OTPINT
 yes     yes           Std       1 KAI$EXTINPTRN
         yes           Std       1 KAS$DSC
         yes           Std       1 KHD$SCREECH
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:38   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV$PTR$                               KV_STT                                KA_INT_LEV
     KA_OTPBFRBYTSIZ_BIG                   KA_OTPBFRBYTSIZ_BIGLOG2               KA_OTPBFRBYTSIZ_SML
     KA_OTPBFRBYTSIZ_SMLLOG2               KA_OTPUN_BLKLMT                       KA_OTPBLKLMT
     KA_MINSP_FORPST                       KA_DVCFLWCTRCHR                       KA_LINERRDSCLMT
     KA_LINERRLOGLMT                       KA_STT                           r    KA_TRNTBLCHNCHR$
r    KA_TRNTBL_FUL$                   r    KA_TRNTBL_PRT$                   r    KH_CHNHI
r    KH_CHNLOW                             KV_VDH_EVT_RQSOTP                     KV_VDH_EVT_CMPOTP
     KV_VDH_DSC                            KV_VDH_OTPLCL                         KV_VDH_OTPMRK
     KV_VDH_SETCLK                    r    G$ROS$
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:39   


        1        1        /*M* KAV$VDI ASYNC VDI (virtual device interface)                             */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     NSO,PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0,IAD=3,IND=0 */
        8        8
        9        9        KAV$VDI: PROC (PRM_USR_X) ALTRET;

      9   2 000000  D380 0000 0000  xent KAV$VDI         LNJ,B5   X6A_AUTO_1
          2 000003       0038 0001                       DC       56,1

       10       10        /* THE PURPOSE OF THIS ROUTINE IS TO RECEIVE CALLS FROM THE                   */
       11       11        /* VDH TO THE ASYNC HANDLER. THIS ROUTINE DETERMINES WHAT NEEDS               */
       12       12        /* TO BE DONE AND EITHER DOES IT, OR CALLS ANOTHER ROUTINE WITHIN             */
       13       13        /* ASYNC TO DO WHAT NEEDS TO BE DONE.                                         */
       14       14
       15       15        %INCLUDE KV_ASCCHR_E;
       16      152        %INCLUDE KA_SCODE_C;
       17      166        %INCLUDE KV_GLBASM_E;
       18      184 S      %INCLUDE KV_GLBCNS_E;                   /*  VDH CONSTANTS                     */
       19      185        %KV_STRTYP_E;
       20      223        %KV_SCHRSN_E;
       21      230        %KV_VDH_EVT_ID_E;
       22      236        %KV_USR_EVT_ID_E;
       23      256        %KV_USR_FNC_E;
       24      272        %KV_VDH_FNC_E;
       25      292        %KV_CLKNMB_E;
       26      301        %KV_CLKUNT_E;
       27      306        %KV_DSCRSN_E;
       28      315        %KV_INPOPRX_E;
       29      327
       30      328        %INCLUDE KH_SCREECH_M;                  /* screech macro                      */
       31      339        %INCLUDE KHA_FNC_E;
       32      439
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:40   
       33      440        %INCLUDE KH$STT;                        /* For KA_STT                         */
       34      470
       35      471        %INCLUDE KV_INT_M;
       36      614        %INCLUDE KV$BPC;
       37      643 S      %INCLUDE KV$GLB;
       38      644 S      %INCLUDE KV$GLBCTX;
       39      645        %INCLUDE LCP_6;
       40      836        %VLP_SCODE (FPTN = Y_SCRILGEVTID, FCG = KA, MID = V, ERR# = %S$KA_ILGEVTID, STCLASS
               836            = CONSTANT);
       41      897        %VLP_SCODE (FPTN = Y_SCRILGINPPRCID, FCG = KA, MID = V, ERR# = %S$KA_ILGINPPRCID,
               897            STCLASS = CONSTANT);
       42      958        %VLP_SCODE (FPTN = Y_SCRILGSCHRSN, FCG = KA, MID = V, ERR# = %S$KA_ILGSCHRSN,
               958            STCLASS = CONSTANT);
       43     1019        %VLP_SCODE (FPTN = Y_SCRILGSETPRM, FCG = KA, MID = V, ERR# = %S$KA_ILGSETPRM,
              1019            STCLASS = CONSTANT);
       44     1080        %VLP_SCODE (FPTN = Y_SCRILGUSRFNC, FCG = KA, MID = V, ERR# = %S$KA_ILGUSRFNC,
              1080            STCLASS = CONSTANT);
       45     1141        %VLP_SCODE (FPTN = Y_SCRNO_MMROTPBFR, FCG = KA, MID = V, ERR# = %S$KA_NO_MMROTPBFR,
              1141            STCLASS = CONSTANT);
       46     1202        %INCLUDE KL_MACRO_C;
       47     4554        %INCLUDE KL_AFCN_C;
       48     4655        %INCLUDE K_ID_E;
       49     4705        %K#LYRID_E;
       50     4712        %K#ENTID_E;
       51     4731        %KV$ERD;                           /*  VDH EXTENDED REAL DEVICE DEFINITION    */
       52     4815        %KV$MRD;                                /*  MASTER REAL DEVICE CONTEXT BLOCK  */
       53     4862        %KV$MVD;                           /*  MASTER VIRTUAL DEVICE CONTEXT BLOCK    */
       54     4906        %KV$PTR;                                /*  VDH POINTER BLOCK                 */
       55     4949        %KV$SSN;                                /*  SESSION CONTEXT                   */
       56     5028        %KV$STR;                                /*  STREAM  CONTEXT                   */
       57     5115        %KV$STT (NAME = KV_STT, STCLASS = SYMREF);
       58     5509        %KV$VDI;                                /*  VDI CONTEXT BLOCK                 */
       59     5580    1   DCL KA_INT_LEV UBIN SYMREF;
       60     5581 S      %INCLUDE KV_PRMID_E;
       61     5582        %KV_PRMID_E;                            /* set and get param stuff            */
       62     5738        %KV$SHRBFR;                             /*  SHARED BUFFER TEMPLATE            */
       63     5770        %INCLUDE KV_GLB_M;                      /*  VDH user macros                   */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:41   
       64     5892 S      %INCLUDE KV$INT;
       65     5893        %KV$TRNTBL;                             /*  TRANSLATE TABLE STUFF             */
       66     5951
       67     5952    1   DCL 1 KA$OTPMRK ALIGNED BASED,
       68     5953        %KV$OTPMRK(NAME=DAT,LVL=2,LAST=",");
       69     5980    1          2 BYTCNT UBIN WORD ALIGNED;
       70     5981        /* some local variables */
       71     5982
       72     5983    1   DCL LVL UBIN;
       73     5984    1   DCL Y@BYTSIZ UBIN;
       74     5985    1   DCL Y@BYTSIZ2 UBIN;
       75     5986    1   DCL Y@PTR$ PTR;
       76     5987    1   DCL Y@INDEX SBIN;
       77     5988    1   DCL 1 KA@OTPMRK ALIGNED AUTO,
       78     5989        %KV$OTPMRK(NAME=DAT,LAST=",",LVL=2);
       79     6016    1          2 BYTCNT UBIN WORD ALIGNED;
       80     6017
       81     6018        %INCLUDE KA_GLBASM_E;
       82     6100        %INCLUDE KA_GLB_E;
       83     6178        %KA_HLTOTP_E;
       84     6187        %KA_INPFNC_E;                           /*  INPUT FUNCTION DEFINITIONS        */
       85     6232
       86     6233        %INCLUDE KA_GLB;
       87     6310        %KA_MSC;
       88     6332        %INCLUDE KA$GLB;
       89     6473        %INCLUDE KW_ALCT_E;
       90     6663        %INCLUDE KW_LCT_E;
       91     7018        %INCLUDE KA_LCT_E;
       92     7142        %KA$OTPBFR;                             /*  OUTPUT BUFFER TEMPLATE            */
       93     7170        %KA$BFRCTRSTR(FPTN=KA_BFRCTRSTR_INHPRG,STCLASS=CONSTANT,FNC=INHPRG);
       94     7197        %KA$BFRCTRSTR(FPTN=KA_BFRCTRSTR_RPTCHR,STCLASS=CONSTANT,FNC=RPTCHR);
       95     7224        %KA$BFRCTRSTR(FPTN=KA@BFRCTRSTR_INHPRG,STCLASS=AUTO,FNC=INHPRG);
       96     7251        %KA$BFRCTRSTR(FPTN=KA@BFRCTRSTR_RPTCHR,STCLASS=AUTO,FNC=RPTCHR);
       97     7278
       98     7279        %KA_STT;                                /*  ASYNC STATS BUFFER TEMPLATE       */
       99     7642 S      %INCLUDE KV$VDH;
      100     7643        %KA$CTX (STCLASS="BASED(BCTX$)");       /*  ASYNC CONTEXT BLOCK               */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:42   
      101     7767    1   DCL BCTX$ PTR AUTO;
      102     7768        %EQU KA_CTX=CHARTEXT('KA$CTX');
      103     7769        %KA_TRNTBL_MSC;                         /*  ASYNC TRANSLATE TABLE ITEMS       */
      104     7790 S      %INCLUDE KV$USR;
      105     7791    1   DCL PRM_USR_X CHAR(PRM_COPY);
      106     7792    1   DCL PRM_COPY REDEF PRM_USR_X UBIN;
      107     7793        %KV$USR_DAT(NAME=PRM_USR_DAT,           /*  USER DATA                         */
      108     7794         STCLASS=REDEF PRM_USR_X);
      109     7878        %KV$USR_EVT(NAME=PRM_USR_EVT,           /*  REPORT EVENT TO USER              */
      110     7879         STCLASS=REDEF PRM_USR_X);
      111     7914        %KV$USR_EXTINPTRN(NAME=PRM_USR_EXTINPTRN,
      112     7915         STCLASS=REDEF PRM_USR_X);
      113     7951        %KV$USR_EXTOTPTRN(NAME=PRM_USR_EXTOTPTRN, /* USR EXTENDED OUTPUT TRANSLATION  */
      114     7952         STCLASS=REDEF PRM_USR_X);
      115     7988        %KV$USR_GETPRM(NAME=PRM_USR_GETPRM,     /*  GET PARAMETER                     */
      116     7989         STCLASS=REDEF PRM_USR_X);
      117     8050        %KV$USR_GETOTPBFR(NAME=PRM_USR_GETOTPBFR, /* GET OTPBFR  ARGUMENT STRUCTURE   */
      118     8051         STCLASS=REDEF PRM_USR_X);
      119     8086        %KV$USR_INPPRC(NAME=PRM_USR_INPPRC,     /*  INPUT PROCEDURE                   */
      120     8087         STCLASS=REDEF PRM_USR_X);
      121     8123        %KV$USR_OTPMRK(NAME=PRM_USR_OTPMRK,     /*  USER MARKER REQUEST               */
      122     8124         STCLASS=REDEF PRM_USR_X);
      123     8186        %KV$USR_OTPRPTCHR(NAME=PRM_USR_OTPRPTCHR, /* OUTPUT REPEATED CHARACTER        */
      124     8187         STCLASS=REDEF PRM_USR_X);
      125     8222        %KV$USR_RQSDAT(NAME=PRM_USR_RQSDAT,
      126     8223         STCLASS=REDEF PRM_USR_X);
      127     8286        %KV$USR_SETPRM(NAME=PRM_USR_SETPRM,     /*  USER SET PARAMETER ARGUMENT       */
      128     8287         STCLASS=REDEF PRM_USR_X);
      129     8349        %INCLUDE KH$CHN;                        /* channel table items                */
      130     8471        %KH$CHN;
      131     8595        %INCLUDE KH_CHN;
      132     8635        %KH_CHNDAT;
      133     8653
      134     8654        %INCLUDE GH_IOFNC_E;                    /* IO function codes                  */
      135     8723        %INCLUDE KH$IO;                         /* macro for IO routines              */
      136     8970        %KH$IO(FPTN=KH_IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=CONSTANT);
      137     9084        %KH$IO(FPTN=KH_IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=CONSTANT);
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:43   
      138     9198        %KH$IO(FPTN=KH@IO_OTPLCTBYT,FNC=%GH#IO_OTPLCTBYT,STCLASS=AUTO);
      139     9312        %KH$IO(FPTN=KH@IO_INPLCTBYT,FNC=%GH#IO_INPLCTBYT,STCLASS=AUTO);
      140     9426
      141     9427        %INCLUDE KA_PERR_C;
      142     9446 S      %INCLUDE GT_LCP6_M;
      143     9447       %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_LINERRDSC, STCLASS = CONSTANT, FCG = KA, MID = V,
              9447            ERR = %E$ASN_LINERRDSC, SEV = 3);
      144     9542       %FPT_WRSYSLOG (FPTN = FPT_WRSYSLOG_LINERRLOG, STCLASS = CONSTANT, FCG = KA, MID = V,
              9542            ERR = %E$ASN_LINERRLOG, SEV = 3);
      145     9637
      146     9638        /* get output buffer structure. Used by the marker request code
      147     9639           to call KAV$VDI itself. */
      148     9640
      149     9641        %KV$USR_GETOTPBFR(NAME=KV_USR_GETOTPBFR,STCLASS=STATIC);
      150     9676
      151     9677        /* Output buffer limit exceeded.                                              */
      152     9678
      153     9679    1   DCL KA_OTPBFRLMTEXC UBIN STATIC SYMDEF INIT(0);
      154     9680
      155     9681        /* constant array containing powers of 2 */
      156     9682
      157     9683    1   DCL Y_POWER_OF_2(0:15) UBIN WORD CONSTANT INIT(1,2,4,8,16,32,64,128,
      158     9684    1    256,512,1024,2048,4096,8192,16384,32768);
      159     9685
      160     9686
      161     9687    1   DCL 1 Y_VDI_LCL ALIGNED,
      162     9688    1          2 BUF(0:3) CHAR(1) CALIGNED,
      163     9689        /* ACTUAL NUMBER OF BYTES TO BE OBTAINED FOR THE OUTPUT BUFFER                */
      164     9690    1          2 BYTSIZ UBIN WORD,
      165     9691        /* ABOVE EXPRESSED AS A LOG BASE 2                                            */
      166     9692    1          2 BYTSIZLOG2 UBIN WORD,
      167     9693        /* ACTUAL NUMBER OF BYTES NEEDED ON THIS GET BUFFER CALL                      */
      168     9694    1          2 SIGSIZ UBIN WORD,
      169     9695        /* NEXT COUNT*                                                                */
      170     9696    1          2 NXTCNT UBIN WORD,
      171     9697        /* CAUSE A SYNCHRONOUS FLOW CONTROL HALT AFTER THE REPEATED CHARACTERS.       */
      172     9698    1          2 SNCFLWCTRHLT BIT(1) ALIGNED;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:44   
      173     9699
      174     9700        %KV$ERD (NAME=KV_ERD,STCLASS=CONSTANT);
      175     9784
      176     9785        %KV$VDH_EVT(NAME=KV_VDH_EVT_RLSVDI,ID=KV_VDH_EVT_ID_RLSVDI,
      177     9786         STCLASS=SYMREF);
      178     9821        %KV$VDH_EVT (NAME=KV_VDH_EVT_RQSOTP, ID=KV_VDH_EVT_ID_RQSOTP,
      179     9822         STCLASS=SYMREF);
      180     9857        %KV$VDH_EVT(NAME=KV_VDH_EVT_CMPOTP,ID=KV_VDH_EVT_ID_CMPOTP,
      181     9858         STCLASS=SYMREF);
      182     9893
      183     9894        %KV$VDH_DSC(NAME=KV_VDH_DSC,STCLASS=SYMREF);
      184     9930        %KV$VDH_DSC(NAME = KV@VDH_DSC, STCLASS = AUTO);
      185     9966        %KV$VDH_OTPLCL(NAME = KV_VDH_OTPLCL, STCLASS = SYMREF);
      186    10039        %KV$VDH_OTPLCL(NAME = KV@VDH_OTPLCL, STCLASS = AUTO);
      187    10112        %KV$VDH_OTPMRK(NAME = KV_VDH_OTPMRK, STCLASS = SYMREF);
      188    10174        %KV$VDH_OTPMRK(NAME = KV@VDH_OTPMRK, STCLASS = AUTO);
      189    10236        %KV$VDH_SETCLK(NAME = KV_VDH_SETCLK, STCLASS = SYMREF);
      190    10272        %KV$VDH_SETCLK(NAME = KV@VDH_SETCLK, STCLASS = AUTO);
      191    10308
      192    10309        /* external proc entry DCL's */
      193    10310
      194    10311    1   DCL KAO$SNCFLWCTRHLT ENTRY(1);
      195    10312    1   DCL KAO$SNCHLTOTP ENTRY(1);
      196    10313    1   DCL KAO$ASNRQSHLTOTP ENTRY(1);
      197    10314    1   DCL KAO$ASNRQS ENTRY(3) ALTRET;
      198    10315    1   DCL KAO$ASNRQSRSMOTP ENTRY(1);
      199    10316    1   DCL KAO$DLTOTP ENTRY(1);
      200    10317    1   DCL KAO$TRNOTPIOLD ENTRY;
      201    10318    1   DCL KAO$IOLD_OTP ENTRY;
      202    10319    1   DCL KAO$BFRCTRSTR ENTRY(1);
      203    10320    1   DCL KAO$BFRCRTCNF ENTRY;
      204    10321    1   DCL KAO$OTPINT ENTRY;
      205    10322    1   DCL KAI$INPINT ENTRY;
      206    10323    1   DCL KAI$EXTINPTRN ENTRY(1) ALTRET;
      207    10324    1   DCL KAS$DSC ENTRY(1);
      208    10325    1   DCL KHA$DVCADM ENTRY(6) ALTRET;
      209    10326    1   DCL KHD$SCREECH ENTRY(1);
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:45   
      210    10327    1   DCL KHD$ERRLOG_SETTERMID_CHN ENTRY(2) ALTRET;
      211    10328    1   DCL KVV$VDI ENTRY(1) ALTRET;
      212    10329    1   DCL KVB$GETSYS ENTRY(2) ALTRET;
      213    10330    1   DCL KHI$IO_INPLCTBYT ENTRY(2) ALTRET;
      214    10331    1   DCL KHI$IO_OTPLCTBYT ENTRY(2) ALTRET;
      215    10332    1   DCL KHI$DISABLE ENTRY(1);
      216    10333    1   DCL KHI$ENABLE ENTRY;
      217    10334
      218    10335
      219    10336
      220    10337        /* LOAD UP THE CONTEXT BLOCK POINTER.           */
      221    10338    1      BCTX$ = %KV_VDI.USRCTX$;

  10338   2 000005  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000008  DC86                                 LDB,B5   ,B6
          2 000009  CCC5 0002                            LDB,B4   2,B5
          2 00000B  CFC7 0016                            STB,B4   BCTX$,AUTO

      222    10339    2      IF BCTX$=ADDR(NIL) THEN DO;

  10339   2 00000D  8DC7 0016                            CMN      BCTX$,AUTO
          2 00000F  0981 001E                            BNE      s:10350,PREL

      223    10340        /*
      224    10341           We've had a KILL on this line. Don't do anything except release context.
      225    10342        */
      226    10343    2         IF PRM_USR_EVT.FNC~=%KV_USR_FNC_EVT

  10343   2 000011  BCC7 0004                            LDB,B3   @PRM_USR_X,AUTO
          2 000013  E283                                 LLH,R6   ,B3
          2 000014  6D04                                 CMV,R6   4
          2 000015  0981 000F                            BNE      s:10346,PREL
          2 000017  D803                                 LDR,R5   ,B3
          2 000018  D570 007F                            AND,R5   127,IMO
          2 00001A  5D0F                                 CMV,R5   15
          2 00001B  0901 000C                            BE       s:10347,PREL
          2 00001D  5D0C                                 CMV,R5   12
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:46   
          2 00001E  0981 0006                            BNE      s:10346,PREL
          2 000020  C843 0001                            LDR,R4   1,B3
          2 000022  4D03                                 CMV,R4   3
          2 000023  0901 0004                            BE       s:10347,PREL

      227    10344    2           OR PRM_USR_EVT.ID~=%KV_USR_EVT_ID_RLSVDI
      228    10345    2           AND (PRM_USR_EVT.ID~=%KV_USR_EVT_ID_SCH
      229    10346    2           OR PRM_USR_EVT.PRM~=%KV_SCHRSN_DFR3) THEN ALTRETURN;

  10346   2 000025  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      230    10347    2         IF PRM_USR_EVT.ID=%KV_USR_EVT_ID_RLSVDI THEN RETURN;

  10347   2 000028  5D0F                                 CMV,R5   15
          2 000029  0981 0004                            BNE      s:10350,PREL

  10347   2 00002B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      231    10348    2      END;
      232    10349
      233    10350    2      DO CASE( PRM_USR_EVT.FNC );

  10350   2 00002E  BCC7 0004                            LDB,B3   @PRM_USR_X,AUTO
          2 000030  B283                                 LLH,R3   ,B3
          2 000031  3D10                                 CMV,R3   16
          2 000032  0281 0908                            BGE      s:11330,PREL
          2 000034  A830 0000 003A  02                   LDR,R2   s:10350+12,R3
          2 000037  83A0 0000 004A  02                   JMP      s:10356,R2
          2 00003A       08F1                            DC       s:11330,PREL
          2 00003B       0000                            DC       s:10356,PREL
          2 00003C       08F1                            DC       s:11330,PREL
          2 00003D       08F1                            DC       s:11330,PREL
          2 00003E       0058                            DC       s:10382,PREL
          2 00003F       0336                            DC       s:10665,PREL
          2 000040       08F1                            DC       s:11330,PREL
          2 000041       0345                            DC       s:10675,PREL
          2 000042       08FA                            DC       s:11333,PREL
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:47   
          2 000043       054B                            DC       s:10936,PREL
          2 000044       0664                            DC       s:11059,PREL
          2 000045       073F                            DC       s:11160,PREL
          2 000046       08F1                            DC       s:11330,PREL
          2 000047       08FA                            DC       s:11333,PREL
          2 000048       08F1                            DC       s:11330,PREL
          2 000049       0832                            DC       s:11249,PREL

      234    10351
      235    10352        /* KV$USR_DAT - DATA. We get here if doing a transparent write                */
      236    10353        /* to a device that uses synchronous flow control.                            */
      237    10354
      238    10355    2      CASE(%KV_USR_FNC_DAT );

      239    10356    2         KV@VDH_OTPLCL = KV_VDH_OTPLCL;

  10356   2 00004A  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_OTPLCL
          2 00004D  2C00                                 LDV,R2   0
          2 00004E  6C0A                                 LDV,R6   10
          2 00004F  BB87                                 LAB,B3   ,AUTO
          2 000050  3C4A                                 LDV,R3   74
          2 000051  0008                                 MMM

      240    10357    2         KV@VDH_OTPLCL.TRN = '1'B;

  10357   2 000052  8947 0025                            LBT,'0040'X       KV@VDH_OTPLCL,AUTO
  10357   2 000054       0040

      241    10358    2         KV@VDH_OTPLCL.BFR_.ADR$ = PRM_USR_DAT.DAT__.ADR$;

  10358   2 000055  ECC7 0004                            LDB,B6   @PRM_USR_X,AUTO
          2 000057  DCC6 0001                            LDB,B5   1,B6
          2 000059  DFC7 0026                            STB,B5   KV@VDH_OTPLCL+1,AUTO

      242    10359    2         KV@VDH_OTPLCL.BFR_.BYTX = PRM_USR_DAT.DAT__.BYTX;

  10359   2 00005B  E846 0003                            LDR,R6   3,B6
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:48   
          2 00005D  EF47 0028                            STR,R6   KV@VDH_OTPLCL+3,AUTO

      243    10360    2         KV@VDH_OTPLCL.BFR_.BYTSIZ = PRM_USR_DAT.DAT__.DATBYTSIZ;

  10360   2 00005F  D846 0004                            LDR,R5   4,B6
          2 000061  DF47 0029                            STR,R5   KV@VDH_OTPLCL+4,AUTO

      244    10361    2         %KV_VDI.OTPCHRCNTAFTLF = %KV_VDI.OTPCHRCNTAFTLF+%KV_VDI.TMPOTPCHRCNT;

  10361   2 000063  CC80 0000 0000  xsym                 LDB,B4   KV$PTR$
          2 000066  AC84                                 LDB,B2   ,B4
          2 000067  C842 001C                            LDR,R4   28,B2
          2 000069  CA42 0015                            ADD,R4   21,B2
          2 00006B  CF42 001C                            STR,R4   28,B2

      245    10362    2         %KA_CTX.OTPCHRCNTUTLHLT = %KA_CTX.OTPCHRCNTUTLHLT-%KV_VDI.TMPOTPCHRCNT;

  10362   2 00006D  DC84                                 LDB,B5   ,B4
          2 00006E  ACC7 0016                            LDB,B2   BCTX$,AUTO
          2 000070  E842 000C                            LDR,R6   12,B2
          2 000072  E245 0015                            SUB,R6   21,B5
          2 000074  EF42 000C                            STR,R6   12,B2

      246    10363    2         %KV_VDI.TMPOTPCHRCNT = 0;

  10363   2 000076  DC84                                 LDB,B5   ,B4
          2 000077  8745 0015                            CL       21,B5

      247    10364    3         IF (KV@VDH_OTPLCL.BFR_.BYTSIZ >= %KA_CTX.OTPCHRCNTUTLHLT) THEN DO;

  10364   2 000079  E847 0029                            LDR,R6   KV@VDH_OTPLCL+4,AUTO
          2 00007B  6801 0005                            BLZ,R6   s:10369,PREL
          2 00007D  E942 000C                            CMR,R6   12,B2
          2 00007F  0801 0014                            BAL      s:10378,PREL

      248    10365
      249    10366        /* The data in this record would require a flow control halt in               */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:49   
      250    10367        /* the middle of the record. Do the halt now.                                 */
      251    10368
      252    10369    3            CALL KAO$SNCFLWCTRHLT ;

  10369   2 000081  CBF0 0000                            LAB,B4   0,IMO
          2 000083  E380 0000 0000  xent                 LNJ,B6   KAO$SNCFLWCTRHLT
          2 000086       0001                            DC       s:10370,PREL

      253    10370    4            IF (KV@VDH_OTPLCL.BFR_.BYTSIZ >= %KA_CTX.OTPCHRCNTUTLHLT) THEN DO;

  10370   2 000087  ECC7 0016                            LDB,B6   BCTX$,AUTO
          2 000089  E847 0029                            LDR,R6   KV@VDH_OTPLCL+4,AUTO
          2 00008B  6801 0005                            BLZ,R6   s:10375,PREL
          2 00008D  E946 000C                            CMR,R6   12,B6
          2 00008F  0801 0004                            BAL      s:10378,PREL

      254    10371
      255    10372        /* The data in this record would require a flow control halt in               */
      256    10373        /* the middle of the record. Adjust the counter up to avoid that.             */
      257    10374
      258    10375    4               %KA_CTX.OTPCHRCNTUTLHLT = KV@VDH_OTPLCL.BFR_.BYTSIZ+1;

  10375   2 000091  6E01                                 ADV,R6   1
          2 000092  EF46 000C                            STR,R6   12,B6

      259    10376    4            END /* IF */;

      260    10377    3         END /* IF */;

      261    10378    2         CALL KVV$VDI(KV@VDH_OTPLCL) ;

  10378   2 000094  EBC7 0025                            LAB,B6   KV@VDH_OTPLCL,AUTO
          2 000096  EFC7 0032                            STB,B6   KV@VDH_SETCLK+3,AUTO
          2 000098  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 00009A  CBF0 0100                            LAB,B4   256,IMO
          2 00009C  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 00009F       0001                            DC       s:10378+12,PREL
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:50   
          2 0000A0  0F81 08A3                            B        s:11333,PREL

      262    10379
      263    10380        /* KV$USR_FNC_EVT - REPORT EVENT                                              */
      264    10381
      265    10382    2      CASE(%KV_USR_FNC_EVT );

      266    10383
      267    10384        /* BRANCH OUT DEPENDING ON THE EVENT REPORTED                                 */
      268    10385
      269    10386    2   Y@DOCASE:
      270    10387    3         DO CASE( PRM_USR_EVT.ID );

  10387   2 0000A2  9803                 Y@DOCASE        LDR,R1   ,B3
          2 0000A3  9570 007F                            AND,R1   127,IMO
          2 0000A5  1D13                                 CMV,R1   19
          2 0000A6  0281 02CE                            BGE      s:10657,PREL
          2 0000A8  B810 0000 00AE  02                   LDR,R3   Y@DOCASE+12,R1
          2 0000AB  83B0 0000 00C1  02                   JMP      s:10395,R3
          2 0000AE       02B4                            DC       s:10657,PREL
          2 0000AF       02BD                            DC       s:10659,PREL
          2 0000B0       02B4                            DC       s:10657,PREL
          2 0000B1       001D                            DC       s:10413,PREL
          2 0000B2       0028                            DC       s:10416,PREL
          2 0000B3       02BD                            DC       s:10659,PREL
          2 0000B4       003C                            DC       s:10423,PREL
          2 0000B5       0062                            DC       s:10437,PREL
          2 0000B6       02B4                            DC       s:10657,PREL
          2 0000B7       02B4                            DC       s:10657,PREL
          2 0000B8       02B4                            DC       s:10657,PREL
          2 0000B9       017A                            DC       s:10525,PREL
          2 0000BA       01AD                            DC       s:10560,PREL
          2 0000BB       0208                            DC       s:10598,PREL
          2 0000BC       0227                            DC       s:10607,PREL
          2 0000BD       0189                            DC       s:10537,PREL
          2 0000BE       0000                            DC       s:10395,PREL
          2 0000BF       006D                            DC       s:10442,PREL
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:51   
          2 0000C0       00CE                            DC       s:10476,PREL

      271    10388    3         CASE(%KV_USR_EVT_ID_BGNSETPRM );

      272    10389    3         CASE(%KV_USR_EVT_ID_CLKEXP );

      273    10390
      274    10391        /* Clock expired.                                                             */
      275    10392
      276    10393        /* The clock we set for timing line errors expired.                           */
      277    10394
      278    10395    3            %KA_CTX.ERRCLKSET = '0'B;

  10395   2 0000C1  8844 001C                            LBF,'0800'X       28,B4
  10395   2 0000C3       0800

      279    10396    4            IF %KA_CTX.LINERRCNT>KA_LINERRLOGLMT THEN DO;

  10396   2 0000C4  E2C4 001E                            LLH,R6   30,B4
          2 0000C6  E900 0000 0000  xsym                 CMR,R6   KA_LINERRLOGLMT
          2 0000C9  0381 087A                            BLE      s:11333,PREL

      280    10397
      281    10398        /* The line error count exceeds the limit. Log the error.                     */
      282    10399
      283    10400        /*E* ERROR: KAV-E$ASN_LINERRLOG                                            */
      284    10401        /*E* MESSAGE: Excessive Async input line errors                                */
      285    10402        /*E* REMARKS: An excessive number of line input errors (parity            */
      286    10403        /*,* or framing errors, or CLA over-runs) was received.                       */
      287    10404        /*,* The count, in 1 minute, exceeded KA_LINERRLOGLMT.                        */
      288    10405    4               CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_LINERRLOG, %KH_CHN);

  10405   2 0000CB  DC86                                 LDB,B5   ,B6
          2 0000CC  AC85                                 LDB,B2   ,B5
          2 0000CD  AFC7 0034                            STB,B2   KV@VDH_SETCLK+5,AUTO
          2 0000CF  DB80 0000 0031  00                   LAB,B5   FPT_WRSYSLOG_LINERRLOG
          2 0000D2  DFC7 0032                            STB,B5   KV@VDH_SETCLK+3,AUTO
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:52   
          2 0000D4  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 0000D6  CBF0 0200                            LAB,B4   512,IMO
          2 0000D8  E380 0000 0000  xent                 LNJ,B6   KHD$ERRLOG_SETTERMID_CHN
          2 0000DB       0001                            DC       s:10408,PREL

      289    10406
      290    10407
      291    10408    4            END /* IF */;

  10408   2 0000DC  0F81 0867                            B        s:11333,PREL

      292    10409    3         CASE(%KV_USR_EVT_ID_DLTOTP );

      293    10410
      294    10411        /* PURGE ALL Q'D OUTPUT TO THE REAL DEVICE                                    */
      295    10412
      296    10413    3            CALL KAO$DLTOTP(PRM_USR_EVT);

  10413   2 0000DE  BBC7 0004                            LAB,B3   @PRM_USR_X,AUTO
          2 0000E0  CBF0 0100                            LAB,B4   256,IMO
          2 0000E2  E380 0000 0000  xent                 LNJ,B6   KAO$DLTOTP
          2 0000E5       0001                            DC       s:10414,PREL

      297    10414    3            ALTRETURN;                /* USR_EVT.ACT is already properly set.    */

  10414   2 0000E6  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      298    10415    3         CASE(%KV_USR_EVT_ID_DSC );

      299    10416    3            CALL KAO$ASNRQSRSMOTP(%KA#HLTOTP_USRX) ;

  10416   2 0000E9  BB80 0000 0001  03                   LAB,B3   +1
          2 0000EC  CBF0 0100                            LAB,B4   256,IMO
          2 0000EE  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSRSMOTP
          2 0000F1       0001                            DC       s:10417,PREL

      300    10417    3            CALL KAO$ASNRQSRSMOTP(%KA#HLTOTP_DVCX) ;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:53   

  10417   2 0000F2  BB80 0000 0004  03                   LAB,B3   +4
          2 0000F5  CBF0 0100                            LAB,B4   256,IMO
          2 0000F7  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSRSMOTP
          2 0000FA       0001                            DC       s:10417+9,PREL
          2 0000FB  0F81 0848                            B        s:11333,PREL

      301    10418    3         CASE(%KV_USR_EVT_ID_ENDSETPRM );

      302    10419    3         CASE(%KV_USR_EVT_ID_GETSTR );

      303    10420
      304    10421        /* VDH is getting a structure that we're interested in.                       */
      305    10422
      306    10423    4            IF (PRM_USR_EVT.PRM = %KV_STRTYP_MRD) THEN DO;

  10423   2 0000FD  E843 0001                            LDR,R6   1,B3
          2 0000FF  6D0A                                 CMV,R6   10
          2 000100  0981 0843                            BNE      s:11333,PREL

      307    10424
      308    10425        /* VDH is getting a KV$MRD structure.                                         */
      309    10426
      310    10427    4               %KV_MRD.MINSP_FORPST = KA_MINSP_FORPST(%KV_VDI.LINSPD);

  10427   2 000102  ACC6 0008                            LDB,B2   8,B6
          2 000104  A2C5 001E                            LLH,R2   30,B5
          2 000106  D820 0000 0000  xsym                 LDR,R5   KA_MINSP_FORPST,R2
          2 000109  D7C2 000C                            STH,R5   12,B2

      311    10428    4               %KV_MRD.CALUSR_ERS = '0'B;

  10428   2 00010B  DCC6 0008                            LDB,B5   8,B6
          2 00010D  8845 000C                            LBF,'0080'X       12,B5
          2 00010F       0080

      312    10429    4               %KV_MRD.CALUSR_PST = '0'B;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:54   

  10429   2 000110  DCC6 0008                            LDB,B5   8,B6
          2 000112  8845 000C                            LBF,'0040'X       12,B5
          2 000114       0040

      313    10430    4               %KV_MRD.CALUSR_SETATR = '0'B;

  10430   2 000115  DCC6 0008                            LDB,B5   8,B6
          2 000117  8845 000C                            LBF,'0020'X       12,B5
          2 000119       0020

      314    10431    4               %KV_MRD.ERD$ = ADDR(KV_ERD);

  10431   2 00011A  DCC6 0008                            LDB,B5   8,B6
          2 00011C  AB80 0000 0056  00                   LAB,B2   KV_ERD
          2 00011F  AFC5 0008                            STB,B2   8,B5

      315    10432    4            END /* IF */;

  10432   2 000121  0F81 0822                            B        s:11333,PREL

      316    10433    3         CASE(%KV_USR_EVT_ID_HLTOTP );

      317    10434
      318    10435        /* A SYNCHRONOUS OUTPUT HALT HAS BEEN REQUESTED                               */
      319    10436
      320    10437    3            CALL KAO$SNCHLTOTP(%KA#HLTOTP_USRX) ;

  10437   2 000123  BB80 0000 0001  03                   LAB,B3   +1
          2 000126  CBF0 0100                            LAB,B4   256,IMO
          2 000128  E380 0000 0000  xent                 LNJ,B6   KAO$SNCHLTOTP
          2 00012B       0001                            DC       s:10437+9,PREL
          2 00012C  0F81 0817                            B        s:11333,PREL

      321    10438    3         CASE(%KV_USR_EVT_ID_INHDLTOTP );

      322    10439
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:55   
      323    10440        /* We are to inhibit deletes of output for n (KV$USR_EVT.PRM) characters.     */
      324    10441
      325    10442    4            IF (KA_DVCFLWCTRCHR(%KV_MRD.DVCFLWCTRALG) ~= 0) THEN DO;

  10442   2 00012E  ACC6 0008                            LDB,B2   8,B6
          2 000130  A842 0015                            LDR,R2   21,B2
          2 000132  A570 00FF                            AND,R2   255,IMO
          2 000134  2001                                 SOL,R2   1
          2 000135  E2A0 0000 0000  xsym                 LLH,R6   KA_DVCFLWCTRCHR,R2
          2 000138  6901 000F                            BEZ,R6   s:10454,PREL

      326    10443
      327    10444        /* THERE IS A SYNCHRONOUS FLOW CONTROL ALGORITHM IN EFFECT.                   */
      328    10445
      329    10446    5               IF (PRM_USR_EVT.PRM+%KV_VDI.TMPOTPCHRCNT >= %KA_CTX.OTPCHRCNTUTLHLT)
             10446                        THEN DO;

  10446   2 00013A  E843 0001                            LDR,R6   1,B3
          2 00013C  EA45 0015                            ADD,R6   21,B5
          2 00013E  E944 000C                            CMR,R6   12,B4
          2 000140  0801 0007                            BAL      s:10454,PREL

      330    10447
      331    10448        /* IF WE SENT OUT THE CHARACTERS, WE WOULD OVERFLOW                           */
      332    10449        /* (OR JUST FILL) THE DEVICE'S OUTPUT BUFFER.                                 */
      333    10450
      334    10451    5                  CALL KAO$SNCFLWCTRHLT;

  10451   2 000142  CBF0 0000                            LAB,B4   0,IMO
          2 000144  E380 0000 0000  xent                 LNJ,B6   KAO$SNCFLWCTRHLT
          2 000147       0001                            DC       s:10454,PREL

      335    10452    5               END /* IF */;

      336    10453    4            END /* IF */;

      337    10454    3            IF %KV_VDI.OTPBFR_.ADR$~=ADDR(NIL) THEN
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:56   

  10454   2 000148  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00014B  DC86                                 LDB,B5   ,B6
          2 00014C  8DC5 000A                            CMN      10,B5
          2 00014E  0901 001F                            BE       s:10467,PREL

      338    10455    3            IF (PRM_USR_EVT.PRM >

  10455   2 000150  CCC5 000A                            LDB,B4   10,B5
          2 000152  B844 0002                            LDR,R3   2,B4
          2 000154  304A                                 SOR,R3   10
          2 000155  B570 000F                            AND,R3   15,IMO
          2 000157  E830 0000 0046  00                   LDR,R6   Y_POWER_OF_2,R3
          2 00015A  E245 000C                            SUB,R6   12,B5
          2 00015C  BCC7 0004                            LDB,B3   @PRM_USR_X,AUTO
          2 00015E  6EFE                                 ADV,R6   -2
          2 00015F  E943 0001                            CMR,R6   1,B3
          2 000161  0881 000C                            BAGE     s:10467,PREL

      339    10456    3              Y_POWER_OF_2(%KV_VDI.OTPBFR_.ADR$->KA$OTPBFR.BYTSIZLOG2)
      340    10457    4              -%KV_VDI.OTPBFR_.BYTX-2) THEN DO;

      341    10458
      342    10459        /* Also dont split the characters across buffer boundaries. */
      343    10460
      344    10461    4               CALL KAO$TRNOTPIOLD ;

  10461   2 000163  CBF0 0000                            LAB,B4   0,IMO
          2 000165  E380 0000 0000  xent                 LNJ,B6   KAO$TRNOTPIOLD
          2 000168       0001                            DC       s:10462,PREL

      345    10462    4               %KA_CTX.PRVOTPBFRDATEXCSML = '1'B;

  10462   2 000169  ECC7 0016                            LDB,B6   BCTX$,AUTO
          2 00016B  8946 001C                            LBT,'2000'X       28,B6
          2 00016D       2000

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:57   
      346    10463    4            END /* IF */;

      347    10464
      348    10465        /* BUFFER THE INHIBIT PURGE CONTROL STR_INHPRGING
             10465         */
      349    10466
      350    10467    3            KA@BFRCTRSTR_INHPRG = KA_BFRCTRSTR_INHPRG;

  10467   2 00016E  AB80 0000 0000  00                   LAB,B2   Y_SCRILGEVTID
          2 000171  2C24                                 LDV,R2   36
          2 000172  6C05                                 LDV,R6   5
          2 000173  BB87                                 LAB,B3   ,AUTO
          2 000174  3C20                                 LDV,R3   32
          2 000175  0008                                 MMM

      351    10468    3            KA@BFRCTRSTR_INHPRG.INHPRG.X3F = PRM_USR_EVT.PRM;

  10468   2 000176  ECC7 0004                            LDB,B6   @PRM_USR_X,AUTO
          2 000178  E846 0001                            LDR,R6   1,B6
          2 00017A  6008                                 SOL,R6   8
          2 00017B  EAC7 0011                            SRM,R6,'3F00'X    KA@BFRCTRSTR_INHPRG+1,AUTO
          2 00017D       3F00

      352    10469    3            KA@BFRCTRSTR_INHPRG.TXTSIZ = 2;

  10469   2 00017E  6C02                                 LDV,R6   2
          2 00017F  E7C7 0010                            STH,R6   KA@BFRCTRSTR_INHPRG,AUTO

      353    10470    3            CALL KAO$BFRCTRSTR(KA@BFRCTRSTR_INHPRG) ;

  10470   2 000181  DBC7 0010                            LAB,B5   KA@BFRCTRSTR_INHPRG,AUTO
          2 000183  DFC7 0032                            STB,B5   KV@VDH_SETCLK+3,AUTO
          2 000185  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 000187  CBF0 0100                            LAB,B4   256,IMO
          2 000189  E380 0000 0000  xent                 LNJ,B6   KAO$BFRCTRSTR
          2 00018C       0001                            DC       s:10470+12,PREL
          2 00018D  0F81 07B6                            B        s:11333,PREL
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:58   

      354    10471        %EJECT;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:59   
      355    10472
      356    10473        /* KV$USR_OTP1_CHR - OUTPUT-1-CHARACTER REQUEST                               */
      357    10474
      358    10475    3         CASE(%KV_USR_EVT_ID_OTP1_CHR );

      359    10476    3            IF (%KH_CHN.OTPCCBCNT = 0)

  10476   2 00018F  AC85                                 LDB,B2   ,B5
          2 000190  82C2 0007                            LB,'000F'X        7,B2
          2 000192       000F
          2 000193  0501 00A4                            BBT      s:10520,PREL
          2 000195  82C4 001D                            LB,'0200'X        29,B4
          2 000197       0200
          2 000198  0501 009F                            BBT      s:10520,PREL
          2 00019A  82C4 001C                            LB,'C000'X        28,B4
          2 00019C       C000
          2 00019D  0501 009A                            BBT      s:10520,PREL
          2 00019F  82C4 001D                            LB,'C000'X        29,B4
          2 0001A1       C000
          2 0001A2  0501 0095                            BBT      s:10520,PREL
          2 0001A4  8DC5 000A                            CMN      10,B5
          2 0001A6  0981 0091                            BNE      s:10520,PREL

      360    10477    3              AND NOT %KA_CTX.ASNHLTOTP
      361    10478    3              AND NOT %KA_CTX.HLTOTP_ALL
      362    10479    3              AND NOT %KA_CTX.HLTOTPNXTBFR_ALL
      363    10480    4              AND (%KV_VDI.OTPBFR_.ADR$ = ADDR(NIL)) THEN DO;

      364    10481
      365    10482        /* It may be ok to directly output this character to the MLCP.                */
      366    10483
      367    10484    4               KH@IO_INPLCTBYT = KH_IO_INPLCTBYT;

  10484   2 0001A8  8C80 0000 001A  00                   LDI      KH_IO_INPLCTBYT
          2 0001AB  8D47 001A                            SDI      KH@IO_INPLCTBYT,AUTO

      368    10485    4               KH@IO_INPLCTBYT.LCTBYT.ADR = %KA_LCT_OTPASNRQS;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:60   

  10485   2 0001AD  5C17                                 LDV,R5   23
          2 0001AE  DAC7 001B                            SRM,R5,'00FF'X    KH@IO_INPLCTBYT+1,AUTO
          2 0001B0       00FF

      369    10486    4               CALL KHI$IO_INPLCTBYT(%KH_CHN,KH@IO_INPLCTBYT)

  10486   2 0001B1  DC86                                 LDB,B5   ,B6
          2 0001B2  AC85                                 LDB,B2   ,B5
          2 0001B3  9BC7 001A                            LAB,B1   KH@IO_INPLCTBYT,AUTO
          2 0001B5  9FC7 0034                            STB,B1   KV@VDH_SETCLK+5,AUTO
          2 0001B7  AFC7 0032                            STB,B2   KV@VDH_SETCLK+3,AUTO
          2 0001B9  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 0001BB  CBF0 0200                            LAB,B4   512,IMO
          2 0001BD  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          2 0001C0       0078                            DC       s:10520,PREL

      370    10487    5               WHENRETURN DO;

      371    10488
      372    10489        /* The IO succeeded.                                                          */
      373    10490
      374    10491    5                  IF KH@IO_INPLCTBYT.LCTBYT.DAT~=0 THEN EXIT;

  10491   2 0001C1  E2C7 001B                            LLH,R6   KH@IO_INPLCTBYT+1,AUTO
          2 0001C3  6981 0074                            BNEZ,R6  s:10520,PREL

      375    10492
      376    10493        /* WE READ A 0 OUT OF KA_LCT_OTPASNRQS                                        */
      377    10494        /* Store the character into an MLCP LCT byte.                                 */
      378    10495
      379    10496    5                  KH@IO_OTPLCTBYT = KH_IO_OTPLCTBYT;

  10496   2 0001C5  8C80 0000 0018  00                   LDI      KH_IO_OTPLCTBYT
          2 0001C8  8D47 0018                            SDI      KH@IO_OTPLCTBYT,AUTO

      380    10497    5                  KH@IO_OTPLCTBYT.LCTBYT.ADR = %KA_LCT_OTPTMP;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:61   

  10497   2 0001CA  5C39                                 LDV,R5   57
          2 0001CB  DAC7 0019                            SRM,R5,'00FF'X    KH@IO_OTPLCTBYT+1,AUTO
          2 0001CD       00FF

      381    10498    5                  KH@IO_OTPLCTBYT.LCTBYT.DAT = PRM_USR_EVT.PRM;

  10498   2 0001CE  ECC7 0004                            LDB,B6   @PRM_USR_X,AUTO
          2 0001D0  C846 0001                            LDR,R4   1,B6
          2 0001D2  C7C7 0019                            STH,R4   KH@IO_OTPLCTBYT+1,AUTO

      382    10499    5                  CALL KHI$IO_OTPLCTBYT(%KH_CHN,KH@IO_OTPLCTBYT);

  10499   2 0001D4  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0001D7  CC85                                 LDB,B4   ,B5
          2 0001D8  BC84                                 LDB,B3   ,B4
          2 0001D9  ABC7 0018                            LAB,B2   KH@IO_OTPLCTBYT,AUTO
          2 0001DB  AFC7 0034                            STB,B2   KV@VDH_SETCLK+5,AUTO
          2 0001DD  BFC7 0032                            STB,B3   KV@VDH_SETCLK+3,AUTO
          2 0001DF  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 0001E1  CBF0 0200                            LAB,B4   512,IMO
          2 0001E3  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 0001E6       0001                            DC       s:10503,PREL

      383    10500
      384    10501        /* Store the asynchronous request identifier into an MLCP LCT byte.           */
      385    10502
      386    10503    5                  KH@IO_OTPLCTBYT.LCTBYT.ADR = %KA_LCT_OTPASNRQS;

  10503   2 0001E7  6C17                                 LDV,R6   23
          2 0001E8  EAC7 0019                            SRM,R6,'00FF'X    KH@IO_OTPLCTBYT+1,AUTO
          2 0001EA       00FF

      387    10504    5                  KH@IO_OTPLCTBYT.LCTBYT.DAT = %KA#OTPASNRQS_OTP1_CHR;

  10504   2 0001EB  5C0B                                 LDV,R5   11
          2 0001EC  D7C7 0019                            STH,R5   KH@IO_OTPLCTBYT+1,AUTO
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:62   

      388    10505    5                  CALL KHI$IO_OTPLCTBYT(%KH_CHN,KH@IO_OTPLCTBYT);

  10505   2 0001EE  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0001F1  DC86                                 LDB,B5   ,B6
          2 0001F2  CC85                                 LDB,B4   ,B5
          2 0001F3  BBC7 0018                            LAB,B3   KH@IO_OTPLCTBYT,AUTO
          2 0001F5  BFC7 0034                            STB,B3   KV@VDH_SETCLK+5,AUTO
          2 0001F7  CFC7 0032                            STB,B4   KV@VDH_SETCLK+3,AUTO
          2 0001F9  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 0001FB  CBF0 0200                            LAB,B4   512,IMO
          2 0001FD  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 000200       0001                            DC       s:10509,PREL

      389    10506
      390    10507        /* GET THE COMM LINE CONTROLLER GOING.                                        */
      391    10508
      392    10509    5                  KH@IO_OTPLCTBYT.LCTBYT.ADR = %KW#TRNSTT;

  10509   2 000201  6C2E                                 LDV,R6   46
          2 000202  EAC7 0019                            SRM,R6,'00FF'X    KH@IO_OTPLCTBYT+1,AUTO
          2 000204       00FF

      393    10510    5                  KH@IO_OTPLCTBYT.LCTBYT.DAT = BITBIN('1F'X);

  10510   2 000205  5C1F                                 LDV,R5   31
          2 000206  D7C7 0019                            STH,R5   KH@IO_OTPLCTBYT+1,AUTO

      394    10511    5                  CALL KHI$IO_OTPLCTBYT(%KH_CHN,KH@IO_OTPLCTBYT);

  10511   2 000208  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00020B  DC86                                 LDB,B5   ,B6
          2 00020C  CC85                                 LDB,B4   ,B5
          2 00020D  BBC7 0018                            LAB,B3   KH@IO_OTPLCTBYT,AUTO
          2 00020F  BFC7 0034                            STB,B3   KV@VDH_SETCLK+5,AUTO
          2 000211  CFC7 0032                            STB,B4   KV@VDH_SETCLK+3,AUTO
          2 000213  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:63   
          2 000215  CBF0 0200                            LAB,B4   512,IMO
          2 000217  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 00021A       0001                            DC       s:10514,PREL

      395    10512
      396    10513
      397    10514    5                  KH@IO_OTPLCTBYT.LCTBYT.ADR = %KW#TRNSTTMSK;

  10514   2 00021B  6C2F                                 LDV,R6   47
          2 00021C  EAC7 0019                            SRM,R6,'00FF'X    KH@IO_OTPLCTBYT+1,AUTO
          2 00021E       00FF

      398    10515    5                  KH@IO_OTPLCTBYT.LCTBYT.DAT = BITBIN('FF'X);

  10515   2 00021F  8947 0019                            LBT,'FF00'X       KH@IO_OTPLCTBYT+1,AUTO
  10515   2 000221       FF00

      399    10516    5                  CALL KHI$IO_OTPLCTBYT(%KH_CHN,KH@IO_OTPLCTBYT);

  10516   2 000222  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000225  DC86                                 LDB,B5   ,B6
          2 000226  CC85                                 LDB,B4   ,B5
          2 000227  BBC7 0018                            LAB,B3   KH@IO_OTPLCTBYT,AUTO
          2 000229  BFC7 0034                            STB,B3   KV@VDH_SETCLK+5,AUTO
          2 00022B  CFC7 0032                            STB,B4   KV@VDH_SETCLK+3,AUTO
          2 00022D  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 00022F  CBF0 0200                            LAB,B4   512,IMO
          2 000231  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 000234       0001                            DC       s:10517,PREL

      400    10517    5                  RETURN;

  10517   2 000235  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      401    10518    5               END;                        /* WHENRETURN                         */
      402    10519    4            END /* IF */;

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:64   
      403    10520    3            ALTRETURN;

  10520   2 000238  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      404    10521    3         CASE(%KV_USR_EVT_ID_RLSSTR );

      405    10522
      406    10523        /* VDH is releasing a structure that we're interested in.                     */
      407    10524
      408    10525    4            IF (PRM_USR_EVT.PRM = %KV_STRTYP_MRD) THEN DO;

  10525   2 00023B  E843 0001                            LDR,R6   1,B3
          2 00023D  6D0A                                 CMV,R6   10
          2 00023E  0981 0705                            BNE      s:11333,PREL

      409    10526
      410    10527        /* %KV_VDI is being released. That's our queue to do our final                 */
      411    10528        /* phase of disconnect.                                                       */
      412    10529
      413    10530    4               CALL KAS$DSC (%KA_CTX);

  10530   2 000240  BBC7 0016                            LAB,B3   BCTX$,AUTO
          2 000242  CBF0 0100                            LAB,B4   256,IMO
          2 000244  E380 0000 0000  xent                 LNJ,B6   KAS$DSC
          2 000247       0001                            DC       s:10531,PREL

      414    10531    4            END /* IF */;

  10531   2 000248  0F81 06FB                            B        s:11333,PREL

      415    10532    3         CASE(%KV_USR_EVT_ID_RLSVDI );

      416    10533
      417    10534        /* VDH is ready to enter into the phase of disconnect where                   */
      418    10535        /* this instance of VDI will be released. See if we're ready.                 */
      419    10536
      420    10537    4            IF (%KA_CTX.OTPBFRBYTCNT ~= 0) THEN DO;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:65   

  10537   2 00024A  E844 000B                            LDR,R6   11,B4
          2 00024C  6901 0004                            BEZ,R6   s:10545,PREL

      421    10538
      422    10539        /* There are still output buffers Q'd. We aren't ready to                     */
      423    10540        /* disconnect. We'll get this call later, after we say                        */
      424    10541        /* %KV_VDH_EVT_ID_RLSVDI.                                                     */
      425    10542
      426    10543    4               ALTRETURN;

  10543   2 00024E  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      427    10544    4            END;
      428    10545    4            IF %KH_CHN.DRPDTR OR %KV_VDI.INTPHSDSC OR %KV_VDI.PHSDSC THEN DO;

  10545   2 000251  AC85                                 LDB,B2   ,B5
          2 000252  82C2 0008                            LB,'0020'X        8,B2
          2 000254       0020
          2 000255  0501 000B                            BBT      s:10551,PREL
          2 000257  82C5 001D                            LB,'0800'X        29,B5
          2 000259       0800
          2 00025A  0501 0006                            BBT      s:10551,PREL
          2 00025C  82C5 0019                            LB,'0040'X        25,B5
          2 00025E       0040
          2 00025F  0581 06E4                            BBF      s:11333,PREL

      429    10546
      430    10547        /* We're to drop data-set-ready on this line when disconnecting.              */
      431    10548        /* We'll set a clock for 2 seconds when we get to KAS$DSC. When it goes off, */
      432    10549        /* we'll raise DTR again to finish the disconnect.                           */
      433    10550
      434    10551    4               %KH_CHN.CLK = '1'B;         /* KAS$DSC flag to set the clock.     */

  10551   2 000261  8902                                 LBT,'0020'X       ,B2
  10551   2 000262       0020

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:66   
      435    10552    4               CALL KAO$ASNRQS(%KA#OTPASNRQS_BGNPHSDSC);

  10552   2 000263  BB80 0000 0007  03                   LAB,B3   +7
          2 000266  CBF0 0100                            LAB,B4   256,IMO
          2 000268  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQS
          2 00026B       0001                            DC       s:10554,PREL

      436    10553
      437    10554    4            END /* IF */;

  10554   2 00026C  0F81 06D7                            B        s:11333,PREL

      438    10555    3         CASE(%KV_USR_EVT_ID_SCH );

      439    10556
      440    10557        /* VDH is calling us because we interrupted it with an interrupt.             */
      441    10558        /* We'll do the processing now that we would have done earlier.               */
      442    10559
      443    10560    4            DO CASE( PRM_USR_EVT.PRM );

  10560   2 00026E  A843 0001                            LDR,R2   1,B3
          2 000270  2D04                                 CMV,R2   4
          2 000271  0281 004C                            BGE      s:10590,PREL
          2 000273  B820 0000 0279  02                   LDR,R3   s:10560+11,R2
          2 000276  83B0 0000 027D  02                   JMP      Y@INPINT,R3
          2 000279       001F                            DC       s:10576,PREL
          2 00027A       0000                            DC       s:10561,PREL
          2 00027B       0041                            DC       s:10590,PREL
          2 00027C       0027                            DC       s:10581,PREL

      444    10561    4            CASE(%KV_SCHRSN_DFR1 );

  10551   2                              Y@INPINT        null
      445    10562
      446    10563        /* Deferred input interrupt.                                                  */
      447    10564
      448    10565        /* Input interrupts expect to be disabled. */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:67   
      449    10566
      450    10567    4   Y@INPINT:   ;
      451    10568    4               LVL = KA_INT_LEV;

  10568   2 00027D  E800 0000 0000  xsym Y@INPINT        LDR,R6   KA_INT_LEV
          2 000280  EF47 0006                            STR,R6   LVL,AUTO

      452    10569    4               CALL KHI$DISABLE (LVL);

  10569   2 000282  EBC7 0006                            LAB,B6   LVL,AUTO
          2 000284  EFC7 0032                            STB,B6   KV@VDH_SETCLK+3,AUTO
          2 000286  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 000288  CBF0 0100                            LAB,B4   256,IMO
          2 00028A  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 00028D       0001                            DC       s:10570,PREL

      453    10570    4               CALL KAI$INPINT;

  10570   2 00028E  CBF0 0000                            LAB,B4   0,IMO
          2 000290  E380 0000 0000  xent                 LNJ,B6   KAI$INPINT
          2 000293       0001                            DC       s:10571,PREL

      454    10571    4               CALL KHI$ENABLE;       /* This call is always from base-level     */

  10571   2 000294  CBF0 0000                            LAB,B4   0,IMO
          2 000296  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 000299       0001                            DC       s:10571+6,PREL
          2 00029A  0F81 06A9                            B        s:11333,PREL

      455    10572    4            CASE(%KV_SCHRSN_DFR0 );

      456    10573
      457    10574        /* Deferred output interrupt.                                                 */
      458    10575
      459    10576    4               CALL KAO$OTPINT ;

  10576   2 00029C  CBF0 0000                            LAB,B4   0,IMO
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:68   
          2 00029E  E380 0000 0000  xent                 LNJ,B6   KAO$OTPINT
          2 0002A1       0001                            DC       s:10576+6,PREL
          2 0002A2  0F81 06A1                            B        s:11333,PREL

      460    10577    4            CASE(%KV_SCHRSN_DFR3 );

      461    10578
      462    10579        /* A kill was issued for the line while it was busy. */
      463    10580
      464    10581    4               %KV_VDI.INTPHSDSC = '1'B;

  10581   2 0002A4  8945 001D                            LBT,'0800'X       29,B5
  10581   2 0002A6       0800

      465    10582    4               KV@VDH_DSC = KV_VDH_DSC;

  10582   2 0002A7  8C80 0000 0000  xsym                 LDI      KV_VDH_DSC
          2 0002AA  8D47 0023                            SDI      KV@VDH_DSC,AUTO

      466    10583    4               KV@VDH_DSC.RSN = %KV_DSCRSN_FRG;

  10583   2 0002AC  5C03                                 LDV,R5   3
          2 0002AD  DAC7 0023                            SRM,R5,'00FF'X    KV@VDH_DSC,AUTO
          2 0002AF       00FF

      467    10584    4               CALL KVV$VDI(KV@VDH_DSC);

  10584   2 0002B0  DBC7 0023                            LAB,B5   KV@VDH_DSC,AUTO
          2 0002B2  DFC7 0032                            STB,B5   KV@VDH_SETCLK+3,AUTO
          2 0002B4  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 0002B6  CBF0 0100                            LAB,B4   256,IMO
          2 0002B8  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 0002BB       0001                            DC       s:10584+12,PREL
          2 0002BC  0F81 0687                            B        s:11333,PREL

      468    10585    4            CASE(ELSE);

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:69   
      469    10586        /*S* SCREECH_CODE: KAV-S$KA_ILGSCHRSN
      470    10587             MESSAGE: ASYNC got unrecognized %KV_SCHRSN on %KV_USR_EVT_ID_SCH         */
      471    10588                    %KH$SCREECH(COD = Y_SCRILGSCHRSN);
             10588                        /* ASYNC got unrecognized %KV_SCHRSN on %KV_USR_EVT_ID_SCH */

  10590   2 0002BE  BB80 0000 0009  03                   LAB,B3   +9
          2 0002C1  CBF0 0100                            LAB,B4   256,IMO
          2 0002C3  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 0002C6       0001                            DC       s:10592,PREL

      472    10592    4            END /* CASE */;

  10592   2 0002C7  0F81 067C                            B        s:11333,PREL

      473    10593    3         CASE(%KV_USR_EVT_ID_TRMUSRRQSDAT );

      474    10594
      475    10595        /* Terminate user request data. VDH is activating the read.                   */
      476    10596        /* Shut off the paper tape reader, if in paper tape mode.                     */
      477    10597
      478    10598    4            IF %KV_VDI.HALFDUPLEXPAPERTAPE OR %KV_VDI.FULLDUPLEXPAPERTAPE THEN DO;

  10598   2 0002C9  82C5 0019                            LB,'0002'X        25,B5
  10598   2 0002CB       0002
          2 0002CC  0501 0006                            BBT      s:10603,PREL
          2 0002CE  82C5 0019                            LB,'0020'X        25,B5
          2 0002D0       0020
          2 0002D1  0581 0672                            BBF      s:11333,PREL

      479    10599
      480    10600        /* WE'RE IN PAPER TAPE MODE. SEND A DC3 (XOFF) CHARACTER TO                   */
      481    10601        /* STOP THE READER.                                                           */
      482    10602
      483    10603    4               IF NOT %KA_CTX.HLTOTP AND NOT %KV_VDI.PHSDSC

  10603   2 0002D3  82C4 001C                            LB,'C000'X        28,B4
  10603   2 0002D5       C000
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:70   
          2 0002D6  0501 066D                            BBT      s:11333,PREL
          2 0002D8  82C5 0019                            LB,'0040'X        25,B5
          2 0002DA       0040
          2 0002DB  0501 0668                            BBT      s:11333,PREL

      484    10604    4               THEN CALL KAO$ASNRQS(%KA#OTPASNRQS_DC3);

  10604   2 0002DD  BB80 0000 000C  03                   LAB,B3   +12
          2 0002E0  CBF0 0100                            LAB,B4   256,IMO
          2 0002E2  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQS
          2 0002E5       0001                            DC       s:10605,PREL

      485    10605    4            END /* IF */;

  10605   2 0002E6  0F81 065D                            B        s:11333,PREL

      486    10606    3         CASE(%KV_USR_EVT_ID_VDHEXT );

      487    10607    4            IF %KH_CHN.OTPCCBCNT<4 AND NOT %KA_CTX.HLTOTP THEN DO;

  10607   2 0002E8  AC85                                 LDB,B2   ,B5
          2 0002E9  E842 0007                            LDR,R6   7,B2
          2 0002EB  E570 000F                            AND,R6   15,IMO
          2 0002ED  6D04                                 CMV,R6   4
          2 0002EE  0281 0034                            BGE      s:10630,PREL
          2 0002F0  82C4 001C                            LB,'C000'X        28,B4
          2 0002F2       C000
          2 0002F3  0501 002F                            BBT      s:10630,PREL

      488    10608
      489    10609        /* THE OUTPUT CCB COUNT IS ZERO, SO POSITIONING AND/OR                        */
      490    10610        /* OUTPUT BUFFER TRUNCATING WON'T BE DONE BY THE OUTPUT                       */
      491    10611        /* INTERRUPT ROUTINE.                                                         */
      492    10612        /* IF THERE ARE MESSAGES IN THE Q WE'LL BE BACK HERE SHORTLY,                 */
      493    10613        /* SO WE DON'T HAVE TO DO ANY TRUNCATING NOW.                                 */
      494    10614
      495    10615    5               IF (%KA_CTX.OTPBFRBYTCNT ~= 0) THEN DO;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:71   

  10615   2 0002F5  D844 000B                            LDR,R5   11,B4
          2 0002F7  5901 0007                            BEZ,R5   s:10621,PREL

      496    10616
      497    10617        /* THERE IS AN OUTPUT BUFFER THAT NEEDS TO BE TRUNCATED/IOLD'D.               */
      498    10618
      499    10619    5                  CALL KAO$IOLD_OTP;

  10619   2 0002F9  CBF0 0000                            LAB,B4   0,IMO
          2 0002FB  E380 0000 0000  xent                 LNJ,B6   KAO$IOLD_OTP
          2 0002FE       0001                            DC       s:10621,PREL

      500    10620    5               END /* IF */;

      501    10621    4               IF %KH_CHN.OTPCCBCNT~=0 OR %KA_CTX.HLTOTP THEN EXIT;

  10621   2 0002FF  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000302  DC86                                 LDB,B5   ,B6
          2 000303  CC85                                 LDB,B4   ,B5
          2 000304  82C4 0007                            LB,'000F'X        7,B4
          2 000306       000F
          2 000307  0501 001B                            BBT      s:10630,PREL
          2 000309  BCC7 0016                            LDB,B3   BCTX$,AUTO
          2 00030B  82C3 001C                            LB,'C000'X        28,B3
          2 00030D       C000
          2 00030E  0501 0014                            BBT      s:10630,PREL

      502    10622
      503    10623        /* Don't CMPOTP if anything is now (or still) queued                          */
      504    10624
      505    10625    5               IF %KV_VDI.OTPCNDPND THEN DO;

  10625   2 000310  E845 001A                            LDR,R6   26,B5
          2 000312  6901 0010                            BEZ,R6   s:10630,PREL

      506    10626    5                  CALL KVV$VDI(KV_VDH_EVT_CMPOTP);
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:72   

  10626   2 000314  BB80 0000 000E  03                   LAB,B3   +14
          2 000317  CBF0 0100                            LAB,B4   256,IMO
          2 000319  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 00031C       0001                            DC       s:10627,PREL

      507    10627    5                  CALL KAO$IOLD_OTP;

  10627   2 00031D  CBF0 0000                            LAB,B4   0,IMO
          2 00031F  E380 0000 0000  xent                 LNJ,B6   KAO$IOLD_OTP
          2 000322       0001                            DC       s:10630,PREL

      508    10628    5               END /* IF */;

      509    10629    4            END /* IF */;

      510    10630    3            IF KV$PTR.INPCNDPND.TRN AND %KA_CTX.LCTSTT.PLD

  10630   2 000323  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000326  89C6 001B                            CMZ      27,B6
          2 000328  0881 061B                            BAGE     s:11333,PREL
          2 00032A  DCC7 0016                            LDB,B5   BCTX$,AUTO
          2 00032C  82C5 001C                            LB,'0080'X        28,B5
          2 00032E       0080
          2 00032F  0581 0614                            BBF      s:11333,PREL
          2 000331  CCC6 0004                            LDB,B4   4,B6
          2 000333  E844 0019                            LDR,R6   25,B4
          2 000335  6A81 060E                            BLEZ,R6  s:11333,PREL

      511    10631    4              AND %KV_STR.SNDMAXNMBRCR>0 THEN DO;

      512    10632
      513    10633        /* If there's a transparent pending in polled mode,                           */
      514    10634        /* tell the MLCP when to interrupt next,                                      */
      515    10635        /* and do a poll now in case the input is already there.                      */
      516    10636
      517    10637    4               Y@BYTSIZ = %KV_STR.MAXRCRBYTSIZ-%KV_SSN.REDBFR__.DATBYTSIZ
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:73   

  10637   2 000337  BCC6 0002                            LDB,B3   2,B6
          2 000339  D844 0015                            LDR,R5   21,B4
          2 00033B  D243 0033                            SUB,R5   51,B3
          2 00033D  DA45 0013                            ADD,R5   19,B5
          2 00033F  DF47 0007                            STR,R5   Y@BYTSIZ,AUTO

      518    10638    4                 +%KA_CTX.VDH_DAT.DAT__.BYTX;
      519    10639    4               Y@BYTSIZ2 = %KA_CTX.VDH_DAT.DAT__.BFRBYTSIZ/2;

  10639   2 000341  C845 0015                            LDR,R4   21,B5
          2 000343  4041                                 SOR,R4   1
          2 000344  CF47 0008                            STR,R4   Y@BYTSIZ2,AUTO

      520    10640    5               DO WHILE Y@BYTSIZ>=Y@BYTSIZ2;

  10640   2 000346  D954                                 CMR,R5   R4
          2 000347  0201 000A                            BL       s:10643,PREL

      521    10641    5                  Y@BYTSIZ = Y@BYTSIZ-Y@BYTSIZ2;

  10641   2 000349  E847 0007                            LDR,R6   Y@BYTSIZ,AUTO
          2 00034B  E247 0008                            SUB,R6   Y@BYTSIZ2,AUTO
          2 00034D  EF47 0007                            STR,R6   Y@BYTSIZ,AUTO

      522    10642    5               END;

  10642   2 00034F  E947 0008                            CMR,R6   Y@BYTSIZ2,AUTO
          2 000351  02F8                                 BGE      s:10641,SPREL

      523    10643    4               KH@IO_OTPLCTBYT = KH_IO_OTPLCTBYT;

  10643   2 000352  8C80 0000 0018  00                   LDI      KH_IO_OTPLCTBYT
          2 000355  8D47 0018                            SDI      KH@IO_OTPLCTBYT,AUTO

      524    10644    4               KH@IO_OTPLCTBYT.LCTBYT.ADR = %KA_LCT_PLDINTOFS;

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:74   
  10644   2 000357  5C3A                                 LDV,R5   58
          2 000358  DAC7 0019                            SRM,R5,'00FF'X    KH@IO_OTPLCTBYT+1,AUTO
          2 00035A       00FF

      525    10645    4               KH@IO_OTPLCTBYT.LCTBYT.DAT = -Y@BYTSIZ;

  10645   2 00035B  C847 0007                            LDR,R4   Y@BYTSIZ,AUTO
          2 00035D  8254                                 NEG      R4
          2 00035E  C7C7 0019                            STH,R4   KH@IO_OTPLCTBYT+1,AUTO

      526    10646    4               CALL KHI$IO_OTPLCTBYT (%KH_CHN, KH@IO_OTPLCTBYT);

  10646   2 000360  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000363  DC86                                 LDB,B5   ,B6
          2 000364  CC85                                 LDB,B4   ,B5
          2 000365  BBC7 0018                            LAB,B3   KH@IO_OTPLCTBYT,AUTO
          2 000367  BFC7 0034                            STB,B3   KV@VDH_SETCLK+5,AUTO
          2 000369  CFC7 0032                            STB,B4   KV@VDH_SETCLK+3,AUTO
          2 00036B  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 00036D  CBF0 0200                            LAB,B4   512,IMO
          2 00036F  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 000372       0001                            DC       s:10647,PREL

      527    10647    4               GOTO Y@INPINT;

  10647   2 000373  0F81 FF09                            B        s:10561,PREL

      528    10648    4            END;
      529    10649    3         CASE (ELSE);

      530    10650
      531    10651        /* WE GOT AN EVENT WE DIDN'T UNDERSTAND.                                      */
      532    10652
      533    10653        /*S* SCREECH_CODE: KAV-S$KA_ILGEVTID
      534    10654             MESSAGE: ASYNC got KV$USR_EVT.ID that it didn't understand               */
      535    10655                 %KH$SCREECH(COD = Y_SCRILGEVTID);
             10655                     /* ASYNC GOT KV$USR_EVT.ID THAT IT DIDNT RECOGNIZE */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:75   

  10657   2 000375  BB80 0000 0010  03                   LAB,B3   +16
          2 000378  CBF0 0100                            LAB,B4   256,IMO
          2 00037A  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 00037D       0001                            DC       s:10659,PREL

      536    10659    3         END Y@DOCASE;

  10659   2 00037E  0F81 05C5                            B        s:11333,PREL

      537    10660
      538    10661        /* KV$USR_EXTINPTRN - EXTENDED INPUT TRANSLATION                              */
      539    10662
      540    10663    2      CASE(%KV_USR_FNC_EXTINPTRN );

      541    10664
      542    10665    2         CALL KAI$EXTINPTRN(PRM_USR_EXTINPTRN)

  10665   2 000380  BBC7 0004                            LAB,B3   @PRM_USR_X,AUTO
          2 000382  CBF0 0100                            LAB,B4   256,IMO
          2 000384  E380 0000 0000  xent                 LNJ,B6   KAI$EXTINPTRN
          2 000387       0003                            DC       s:10667,PREL
          2 000388  0F81 0004                            B        s:10667+3,PREL

      543    10666    3         WHENALTRETURN DO;

      544    10667    3            ALTRETURN;

  10667   2 00038A  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
          2 00038D  0F81 05B6                            B        s:11333,PREL

      545    10668    3         END;
      546    10669
      547    10670    2      CASE(%KV_USR_FNC_GETOTPBFR );

      548    10671
      549    10672
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:76   
      550    10673        /* UPDATE A FEW COUNTERS SPECIFIC TO ASYNC                                    */
      551    10674
      552    10675    2         %KV_VDI.OTPCHRCNTAFTLF = %KV_VDI.OTPCHRCNTAFTLF+%KV_VDI.TMPOTPCHRCNT;

  10675   2 00038F  E845 001C                            LDR,R6   28,B5
          2 000391  EA45 0015                            ADD,R6   21,B5
          2 000393  EF45 001C                            STR,R6   28,B5

      553    10676    2         IF (%KA_CTX.OTPBFRBYTCNT > KA_OTPBLKLMT(%KV_VDI.LINSPD)*2

  10676   2 000395  DC86                                 LDB,B5   ,B6
          2 000396  B2C5 001E                            LLH,R3   30,B5
          2 000398  E830 0000 0000  xsym                 LDR,R6   KA_OTPBLKLMT,R3
          2 00039B  6001                                 SOL,R6   1
          2 00039C  8256                                 NEG      R6
          2 00039D  EA30 0000 0000  xsym                 ADD,R6   KA_OTPUN_BLKLMT,R3
          2 0003A0  8256                                 NEG      R6
          2 0003A1  EA70 1388                            ADD,R6   5000,IMO
          2 0003A3  6801 0005                            BLZ,R6   s:10684,PREL
          2 0003A5  E944 000B                            CMR,R6   11,B4
          2 0003A7  0281 0007                            BGE      s:10694,PREL

      554    10677    2           - KA_OTPUN_BLKLMT(%KV_VDI.LINSPD) + 5000)
      555    10678    3         THEN DO;

      556    10679
      557    10680        /* The output buffer byte count is getting excessive.                         */
      558    10681        /* Assume we're out of control, and not allocate any more                     */
      559    10682        /* space.                                                                     */
      560    10683
      561    10684    3            KA_OTPBFRLMTEXC = KA_OTPBFRLMTEXC+1;

  10684   2 0003A9  8A80 0000 0002  01                   INC      KA_OTPBFRLMTEXC

      562    10685    3            ALTRETURN;

  10685   2 0003AC  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:77   

      563    10686    2         END; ELSE
      564    10687
      565    10688        /* We don't have excessive output buffers allocated.                          */
      566    10689
      567    10690        /* This GROUP is exited if we satisfy the caller's buffer                     */
      568    10691        /* requirements without allocating a new buffer.                              */
      569    10692
      570    10693        /* CHECK TO SEE IF FLOW CONTROL IS ON                                         */
      571    10694    3   Y@DOGROUP: DO;

  10694   2                              Y@DOGROUP       null
      572    10695    4            IF (KA_DVCFLWCTRCHR(%KV_MRD.DVCFLWCTRALG) ~= 0) THEN DO;

  10695   2 0003AF  ACC6 0008            Y@DOGROUP       LDB,B2   8,B6
          2 0003B1  A842 0015                            LDR,R2   21,B2
          2 0003B3  A570 00FF                            AND,R2   255,IMO
          2 0003B5  2001                                 SOL,R2   1
          2 0003B6  E2A0 0000 0000  xsym                 LLH,R6   KA_DVCFLWCTRCHR,R2
          2 0003B9  6901 0042                            BEZ,R6   s:10748,PREL

      573    10696
      574    10697        /* FLOW CONTROL IS ON                                                         */
      575    10698
      576    10699    4               %KA_CTX.OTPCHRCNTUTLHLT = %KA_CTX.OTPCHRCNTUTLHLT-%KV_VDI.TMPOTPCHRCNT;

  10699   2 0003BB  E844 000C                            LDR,R6   12,B4
          2 0003BD  E245 0015                            SUB,R6   21,B5
          2 0003BF  EF44 000C                            STR,R6   12,B4

      577    10700    5               IF (%KA_CTX.OTPCHRCNTUTLHLT <= 0) THEN DO;

  10700   2 0003C1  6A01 0007                            BGZ,R6   s:10709,PREL

      578    10701
      579    10702        /* WE SHOULD SEND THE DEVICE FLOW CONTROL SEQUENCE                            */
      580    10703
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:78   
      581    10704    5                  CALL KAO$SNCFLWCTRHLT ;

  10704   2 0003C3  CBF0 0000                            LAB,B4   0,IMO
          2 0003C5  E380 0000 0000  xent                 LNJ,B6   KAO$SNCFLWCTRHLT
          2 0003C8       0001                            DC       s:10709,PREL

      582    10705    5               END /* IF */;

      583    10706
      584    10707        /* SETUP Y_VDI_LCL.SIGSIZ TO BE THE NUMBER OF CHARS TO NEXT HALT              */
      585    10708
      586    10709    4               Y_VDI_LCL.SIGSIZ = %KA_CTX.OTPCHRCNTUTLHLT;

  10709   2 0003C9  ECC7 0016                            LDB,B6   BCTX$,AUTO
          2 0003CB  E846 000C                            LDR,R6   12,B6
          2 0003CD  EF47 0020                            STR,R6   Y_VDI_LCL+4,AUTO

      587    10710
      588    10711        /* SEE IF WE ACTUALLY NEED ANOTHER BUFFER OR WHETHER THERE IS                 */
      589    10712
      590    10713    5               IF (%KV_VDI.OTPBFR_.ADR$ ~= ADDR(NIL)) THEN DO;

  10713   2 0003CF  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0003D2  CC85                                 LDB,B4   ,B5
          2 0003D3  8DC4 000A                            CMN      10,B4
          2 0003D5  0901 002A                            BE       s:10753,PREL

      591    10714
      592    10715        /* SEE HOW BIG THIS BUFFER ACTUALLY IS                                        */
      593    10716
      594    10717    5                  Y@BYTSIZ =

  10717   2 0003D7  BCC4 000A                            LDB,B3   10,B4
          2 0003D9  B843 0002                            LDR,R3   2,B3
          2 0003DB  304A                                 SOR,R3   10
          2 0003DC  B570 000F                            AND,R3   15,IMO
          2 0003DE  D830 0000 0046  00                   LDR,R5   Y_POWER_OF_2,R3
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:79   
          2 0003E1  D244 000C                            SUB,R5   12,B4
          2 0003E3  C843 0003                            LDR,R4   3,B3
          2 0003E5  4047                                 SOR,R4   7
          2 0003E6  C570 01F8                            AND,R4   504,IMO
          2 0003E8  8254                                 NEG      R4
          2 0003E9  CA55                                 ADD,R4   R5
          2 0003EA  CF47 0007                            STR,R4   Y@BYTSIZ,AUTO

      595    10718    5                    Y_POWER_OF_2(%KV_VDI.OTPBFR_.ADR$->KA$OTPBFR.BYTSIZLOG2)
      596    10719    5                    -%KV_VDI.OTPBFR_.BYTX
      597    10720    5                    -%KV_VDI.OTPBFR_.ADR$->KA$OTPBFR.NMBMRK*SIZEC(KA$OTPMRK);
      598    10721    6                  IF (Y@BYTSIZ >= 2) THEN DO;

  10721   2 0003EC  4D02                                 CMV,R4   2
          2 0003ED  0201 0012                            BL       s:10753,PREL

      599    10722
      600    10723        /* There are at least two bytes left in the current output buffer.            */
      601    10724        /* Give some of them to the caller, rather than allocating another            */
      602    10725        /* buffer.                                                                    */
      603    10726
      604    10727    7                     IF (%KA_CTX.OTPCHRCNTUTLHLT <= Y@BYTSIZ) THEN DO;

  10727   2 0003EF  6801 0004                            BLZ,R6   s:10733,PREL
          2 0003F1  E954                                 CMR,R6   R4
          2 0003F2  0301 0005                            BG       s:10738,PREL

      605    10728
      606    10729        /* We're to halt for flow control before we'd fill the rest of                */
      607    10730        /* the buffer. Declare the framed portion of the buffer to be the             */
      608    10731        /* character count until we halt.                                             */
      609    10732
      610    10733    7                        %KV_VDI.OTPBFR_.BYTSIZ = %KA_CTX.OTPCHRCNTUTLHLT;

  10733   2 0003F4  EF44 000D                            STR,R6   13,B4

      611    10734    7                     END; ELSE DO;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:80   

  10734   2 0003F6  0F81 0003                            B        s:10740,PREL

      612    10735
      613    10736        /* Give the caller the rest of the buffer.                                    */
      614    10737
      615    10738    7                        %KV_VDI.OTPBFR_.BYTSIZ = Y@BYTSIZ;

  10738   2 0003F8  CF44 000D                            STR,R4   13,B4

      616    10739    7                     END /* IF */;

      617    10740    6                     EXIT Y@DOGROUP;       /* LOOK BELOW                         */

  10740   2 0003FA  0F81 0195                            B        s:10923,PREL

      618    10741    6                  END /* IF */;
      619    10742    5               END /* IF */;
      620    10743    4            END; ELSE DO;

      621    10744
      622    10745        /* THERE IS NO FLOW CONTROL IN EFFECT. SETUP Y_VDI_LCL.SIGSIZ TO NOT 1        */
      623    10746        /* BE A LIMITING FACTOR                                                       */
      624    10747
      625    10748    4               Y_VDI_LCL.SIGSIZ = BITBIN('7FFF'X);

  10748   2 0003FC  E870 7FFF                            LDR,R6   32767,IMO
          2 0003FE  EF47 0020                            STR,R6   Y_VDI_LCL+4,AUTO

      626    10749    4            END /* IF */;

      627    10750
      628    10751        /* WE NEED TO TRUNCATE AND BUILD A NEW OUTPUT BUFFER                          */
      629    10752
      630    10753    3            CALL KAO$TRNOTPIOLD ;

  10753   2 000400  CBF0 0000                            LAB,B4   0,IMO
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:81   
          2 000402  E380 0000 0000  xent                 LNJ,B6   KAO$TRNOTPIOLD
          2 000405       0001                            DC       s:10754,PREL

      631    10754    4            IF (PRM_USR_GETOTPBFR.ESTBYTSIZ < Y_VDI_LCL.SIGSIZ) THEN DO;

  10754   2 000406  ECC7 0004                            LDB,B6   @PRM_USR_X,AUTO
          2 000408  E846 0001                            LDR,R6   1,B6
          2 00040A  E947 0020                            CMR,R6   Y_VDI_LCL+4,AUTO
          2 00040C  0281 0003                            BGE      s:10766,PREL

      632    10755
      633    10756        /* The estimated byte size of the buffer needed is less than                  */
      634    10757        /* the maximum size otherwise needed. Use the estimated size                  */
      635    10758        /* in determining what size buffer to get.                                    */
      636    10759
      637    10760    4               Y@BYTSIZ = PRM_USR_GETOTPBFR.ESTBYTSIZ;

  10760   2 00040E  EF47 0007                            STR,R6   Y@BYTSIZ,AUTO

      638    10761    4            END /* IF */;

      639    10762
      640    10763        /* WE NEED TO ALLOCATE A BUFFER AT LEAST Y@BYTSIZ BYTES LONG. SEE WHICH       */
      641    10764        /* SIZE BUFFER WE SHOULD USE                                                  */
      642    10765
      643    10766    3            Y@BYTSIZ2 = Y@BYTSIZ;

  10766   2 000410  D847 0007                            LDR,R5   Y@BYTSIZ,AUTO
          2 000412  DF47 0008                            STR,R5   Y@BYTSIZ2,AUTO

      644    10767    3            Y@BYTSIZ = Y@BYTSIZ + (LENGTHC(KA$OTPBFR) - 1);

  10767   2 000414  5E07                                 ADV,R5   7
          2 000415  DF47 0007                            STR,R5   Y@BYTSIZ,AUTO

      645    10768    4            IF (Y@BYTSIZ2 = 1) AND (%KA_CTX.OTPBFRHED$ = ADDR(NIL)) THEN DO;

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:82   
  10768   2 000417  C847 0008                            LDR,R4   Y@BYTSIZ2,AUTO
          2 000419  4D01                                 CMV,R4   1
          2 00041A  0981 0019                            BNE      s:10778+2,PREL
          2 00041C  DCC7 0016                            LDB,B5   BCTX$,AUTO
          2 00041E  8DC5 0002                            CMN      2,B5
          2 000420  0981 0013                            BNE      s:10778+2,PREL

      646    10769
      647    10770        /* We're being asked to get only one byte of space, and we                    */
      648    10771        /* currently have no output buffers. Assume this is the                       */
      649    10772        /* echoplex case, and get a small buffer irregardless of                      */
      650    10773        /* the status of the previous output buffer used.                             */
      651    10774
      652    10775    4               Y_VDI_LCL.BYTSIZ = KA_OTPBFRBYTSIZ_SML;

  10775   2 000422  B800 0000 0000  xsym                 LDR,R3   KA_OTPBFRBYTSIZ_SML
          2 000425  BF47 001E                            STR,R3   Y_VDI_LCL+2,AUTO

      653    10776    4               Y_VDI_LCL.BYTSIZLOG2 = KA_OTPBFRBYTSIZ_SMLLOG2;

  10776   2 000427  A800 0000 0000  xsym                 LDR,R2   KA_OTPBFRBYTSIZ_SMLLOG2
          2 00042A  AF47 001F                            STR,R2   Y_VDI_LCL+3,AUTO

      654    10777    4               KA_STT.OTPBFRGETCNT_SML = KA_STT.OTPBFRGETCNT_SML+1;

  10777   2 00042C  8A80 0000 0045  xsym                 INC      KA_STT+69
          2 00042F  8E80 0000 0044  xsym                 CAD      KA_STT+68

      655    10778    4            END; ELSE IF (Y@BYTSIZ <= KA_OTPBFRBYTSIZ_SML) AND NOT %KA_CTX.
             10778                     PRVOTPBFRDATEXCSML THEN DO;

  10778   2 000432  0F81 002F                            B        s:10798,PREL

  10778   2 000434  D900 0000 0000  xsym                 CMR,R5   KA_OTPBFRBYTSIZ_SML
          2 000437  0301 001A                            BG       s:10794,PREL
          2 000439  DCC7 0016                            LDB,B5   BCTX$,AUTO
          2 00043B  82C5 001C                            LB,'2000'X        28,B5
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:83   
          2 00043D       2000
          2 00043E  0501 0013                            BBT      s:10794,PREL

      656    10779
      657    10780        /* The amount of buffer space we're being asked to get is less                */
      658    10781        /* than what fits in a small buffer, and the previous output                  */
      659    10782        /* buffer's data didn't exceed what fits in a small buffer.                   */
      660    10783        /* Get a small buffer, on the assumption that what we're being                */
      661    10784        /* asked to get isn't only a small portion of our total buffer                */
      662    10785        /* requirements for the next few (hundred) milliseconds.                      */
      663    10786
      664    10787    4               Y_VDI_LCL.BYTSIZ = KA_OTPBFRBYTSIZ_SML;

  10787   2 000440  B800 0000 0000  xsym                 LDR,R3   KA_OTPBFRBYTSIZ_SML
          2 000443  BF47 001E                            STR,R3   Y_VDI_LCL+2,AUTO

      665    10788    4               Y_VDI_LCL.BYTSIZLOG2 = KA_OTPBFRBYTSIZ_SMLLOG2;

  10788   2 000445  A800 0000 0000  xsym                 LDR,R2   KA_OTPBFRBYTSIZ_SMLLOG2
          2 000448  AF47 001F                            STR,R2   Y_VDI_LCL+3,AUTO

      666    10789    4               KA_STT.OTPBFRGETCNT_SML = KA_STT.OTPBFRGETCNT_SML+1;

  10789   2 00044A  8A80 0000 0045  xsym                 INC      KA_STT+69
          2 00044D  8E80 0000 0044  xsym                 CAD      KA_STT+68

      667    10790    4            END; ELSE DO;

  10790   2 000450  0F81 0011                            B        s:10798,PREL

      668    10791
      669    10792        /* Get a big output buffer.                                                   */
      670    10793
      671    10794    4               Y_VDI_LCL.BYTSIZ = KA_OTPBFRBYTSIZ_BIG;

  10794   2 000452  B800 0000 0000  xsym                 LDR,R3   KA_OTPBFRBYTSIZ_BIG
          2 000455  BF47 001E                            STR,R3   Y_VDI_LCL+2,AUTO
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:84   

      672    10795    4               Y_VDI_LCL.BYTSIZLOG2 = KA_OTPBFRBYTSIZ_BIGLOG2;

  10795   2 000457  A800 0000 0000  xsym                 LDR,R2   KA_OTPBFRBYTSIZ_BIGLOG2
          2 00045A  AF47 001F                            STR,R2   Y_VDI_LCL+3,AUTO

      673    10796    4               KA_STT.OTPBFRGETCNT_BIG = KA_STT.OTPBFRGETCNT_BIG+1;

  10796   2 00045C  8A80 0000 0047  xsym                 INC      KA_STT+71
          2 00045F  8E80 0000 0046  xsym                 CAD      KA_STT+70

      674    10797    4            END /* IF */;

      675    10798    3            Y@BYTSIZ = Y_VDI_LCL.BYTSIZ - (LENGTHC(KA$OTPBFR) - 1);

  10798   2 000462  D853                                 LDR,R5   R3
          2 000463  5EF9                                 ADV,R5   -7
          2 000464  DF47 0007                            STR,R5   Y@BYTSIZ,AUTO

      676    10799    4            IF (Y_VDI_LCL.SIGSIZ > Y@BYTSIZ) THEN DO;

  10799   2 000466  D947 0020                            CMR,R5   Y_VDI_LCL+4,AUTO
          2 000468  0281 0003                            BGE      s:10809,PREL

      677    10800
      678    10801        /* The data space in the buffer we'd like to have is less than                */
      679    10802        /* that in the buffer we're getting. Adjust the size we wanted                */
      680    10803        /* down, so that it is the size we're getting.                                */
      681    10804
      682    10805    4               Y_VDI_LCL.SIGSIZ = Y@BYTSIZ;

  10805   2 00046A  DF47 0020                            STR,R5   Y_VDI_LCL+4,AUTO

      683    10806    4            END /* IF */;

      684    10807
      685    10808
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:85   
      686    10809    3            LVL = KA_INT_LEV;

  10809   2 00046C  E800 0000 0000  xsym                 LDR,R6   KA_INT_LEV
          2 00046F  EF47 0006                            STR,R6   LVL,AUTO

      687    10810        /*
      688    10811          If the current level is below the async inhibit level,
      689    10812          go to the async inhibit level.
      690    10813        */
      691    10814    3            CALL KHI$DISABLE (LVL);

  10814   2 000471  DBC7 0006                            LAB,B5   LVL,AUTO
          2 000473  DFC7 0032                            STB,B5   KV@VDH_SETCLK+3,AUTO
          2 000475  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 000477  CBF0 0100                            LAB,B4   256,IMO
          2 000479  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 00047C       0001                            DC       s:10816,PREL

      692    10815
      693    10816    3            CALL KVB$GETSYS(Y_VDI_LCL.BYTSIZ/2,%KV_VDI.OTPBFR_.ADR$)

  10816   2 00047D  E847 001E                            LDR,R6   Y_VDI_LCL+2,AUTO
          2 00047F  6041                                 SOR,R6   1
          2 000480  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000483  DC86                                 LDB,B5   ,B6
          2 000484  EF47 0032                            STR,R6   KV@VDH_SETCLK+3,AUTO
          2 000486  CBC5 000A                            LAB,B4   10,B5
          2 000488  CFC7 0035                            STB,B4   KV@VDH_SETCLK+6,AUTO
          2 00048A  DBC7 0032                            LAB,B5   KV@VDH_SETCLK+3,AUTO
          2 00048C  DFC7 0033                            STB,B5   KV@VDH_SETCLK+4,AUTO
          2 00048E  BBC7 0033                            LAB,B3   KV@VDH_SETCLK+4,AUTO
          2 000490  CBF0 0200                            LAB,B4   512,IMO
          2 000492  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          2 000495       0003                            DC       s:10818,PREL
          2 000496  0F81 005D                            B        s:10855,PREL

      694    10817    4            WHENALTRETURN DO;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:86   

      695    10818    5               IF (Y_VDI_LCL.BYTSIZ <= KA_OTPBFRBYTSIZ_SML) THEN DO;

  10818   2 000498  E847 001E                            LDR,R6   Y_VDI_LCL+2,AUTO
          2 00049A  E900 0000 0000  xsym                 CMR,R6   KA_OTPBFRBYTSIZ_SML
          2 00049D  0301 000D                            BG       s:10834,PREL

      696    10819        /*
      697    10820           we can't even get a small buffer. Screech
      698    10821        */
      699    10822        /*S* SCREECH_CODE: KAV-S$KA_NO_MMROTPBFR
      700    10823             MESSAGE: No memory for an async output buffer  */
      701    10824                       %KH$SCREECH(COD = Y_SCRNO_MMROTPBFR);
             10824                           /* CAN'T GET OUTPUT BUFFER SPACE */

  10826   2 00049F  BB80 0000 0012  03                   LAB,B3   +18
          2 0004A2  CBF0 0100                            LAB,B4   256,IMO
          2 0004A4  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 0004A7       0001                            DC       s:10828,PREL

      702    10828    5                  ALTRETURN;

  10828   2 0004A8  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      703    10829    5               END;
      704    10830    5               ELSE DO;

      705    10831        /*
      706    10832           try to get small buffer before screeching
      707    10833        */
      708    10834    5                  KA_STT.OTPBFRGETCNT_BIG = KA_STT.OTPBFRGETCNT_BIG - 1;

  10834   2 0004AB  8C80 0000 0046  xsym                 LDI      KA_STT+70
          2 0004AE  8470 FFFF FFFF                       AID      -1,IMO
          2 0004B1  8D00 0000 0046  xsym                 SDI      KA_STT+70

      709    10835    5                  KA_STT.OTPBFRGETCNT_SML = KA_STT.OTPBFRGETCNT_SML + 1;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:87   

  10835   2 0004B4  8A80 0000 0045  xsym                 INC      KA_STT+69
          2 0004B7  8E80 0000 0044  xsym                 CAD      KA_STT+68

      710    10836    5                  Y_VDI_LCL.BYTSIZ = KA_OTPBFRBYTSIZ_SML;

  10836   2 0004BA  D800 0000 0000  xsym                 LDR,R5   KA_OTPBFRBYTSIZ_SML
          2 0004BD  DF47 001E                            STR,R5   Y_VDI_LCL+2,AUTO

      711    10837    5                  Y_VDI_LCL.BYTSIZLOG2 = KA_OTPBFRBYTSIZ_SMLLOG2;

  10837   2 0004BF  C800 0000 0000  xsym                 LDR,R4   KA_OTPBFRBYTSIZ_SMLLOG2
          2 0004C2  CF47 001F                            STR,R4   Y_VDI_LCL+3,AUTO

      712    10838    5                  Y@BYTSIZ = Y_VDI_LCL.BYTSIZ - (LENGTHC(KA$OTPBFR) - 1);

  10838   2 0004C4  5EF9                                 ADV,R5   -7
          2 0004C5  DF47 0007                            STR,R5   Y@BYTSIZ,AUTO

      713    10839    6                  IF (Y_VDI_LCL.SIGSIZ > Y@BYTSIZ) THEN DO;

  10839   2 0004C7  D947 0020                            CMR,R5   Y_VDI_LCL+4,AUTO
          2 0004C9  0281 0003                            BGE      s:10842,PREL

      714    10840    6                     Y_VDI_LCL.SIGSIZ = Y@BYTSIZ;

  10840   2 0004CB  DF47 0020                            STR,R5   Y_VDI_LCL+4,AUTO

      715    10841    6                  END;

      716    10842    5                  CALL KVB$GETSYS(Y_VDI_LCL.BYTSIZ/2,%KV_VDI.OTPBFR_.ADR$)

  10842   2 0004CD  B847 001E                            LDR,R3   Y_VDI_LCL+2,AUTO
          2 0004CF  3041                                 SOR,R3   1
          2 0004D0  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0004D3  DC86                                 LDB,B5   ,B6
          2 0004D4  BF47 0032                            STR,R3   KV@VDH_SETCLK+3,AUTO
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:88   
          2 0004D6  CBC5 000A                            LAB,B4   10,B5
          2 0004D8  CFC7 0035                            STB,B4   KV@VDH_SETCLK+6,AUTO
          2 0004DA  DBC7 0032                            LAB,B5   KV@VDH_SETCLK+3,AUTO
          2 0004DC  DFC7 0033                            STB,B5   KV@VDH_SETCLK+4,AUTO
          2 0004DE  BBC7 0033                            LAB,B3   KV@VDH_SETCLK+4,AUTO
          2 0004E0  CBF0 0200                            LAB,B4   512,IMO
          2 0004E2  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          2 0004E5       0003                            DC       s:10846,PREL
          2 0004E6  0F81 000D                            B        s:10855,PREL

      717    10843    6                  WHENALTRETURN DO;

      718    10844                          %KH$SCREECH(COD = Y_SCRNO_MMROTPBFR);
             10844                              /* CAN'T GET OUTPUT BUFFER SPACE */

  10846   2 0004E8  BB80 0000 0012  03                   LAB,B3   +18
          2 0004EB  CBF0 0100                            LAB,B4   256,IMO
          2 0004ED  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 0004F0       0001                            DC       s:10848,PREL

      719    10848    6                     ALTRETURN;

  10848   2 0004F1  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      720    10849    6                  END;
      721    10850    5               END;

      722    10851    4            END;                           /* WHENALTRETURN                      */

      723    10852
      724    10853        /* Go back to the level we were at */
      725    10854
      726    10855    3            IF (LVL > KA_INT_LEV) THEN CALL KHI$ENABLE;

  10855   2 0004F4  E847 0006                            LDR,R6   LVL,AUTO
          2 0004F6  E900 0000 0000  xsym                 CMR,R6   KA_INT_LEV
          2 0004F9  0381 0007                            BLE      s:10857,PREL
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:89   

  10855   2 0004FB  CBF0 0000                            LAB,B4   0,IMO
          2 0004FD  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 000500       0001                            DC       s:10857,PREL

      727    10856
      728    10857    3            KA_STT.KHSTT.OTPBFRBYTUTL = KA_STT.KHSTT.OTPBFRBYTUTL+Y_VDI_LCL.BYTSIZ;

  10857   2 000501  F847 001E                            LDR,R7   Y_VDI_LCL+2,AUTO
          2 000503  6C00                                 LDV,R6   0
          2 000504  8400 0000 001E  xsym                 AID      KA_STT+30
          2 000507  8D00 0000 001E  xsym                 SDI      KA_STT+30

      729    10858    3            %KV_VDI.OTPBFR_.BYTX = (LENGTHC(KA$OTPBFR)-1);

  10858   2 00050A  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00050D  DC86                                 LDB,B5   ,B6
          2 00050E  5C07                                 LDV,R5   7
          2 00050F  DF45 000C                            STR,R5   12,B5

      730    10859    3            %KV_VDI.OTPBFR_.BYTSIZ = Y_VDI_LCL.SIGSIZ;

  10859   2 000511  DC86                                 LDB,B5   ,B6
          2 000512  E847 0020                            LDR,R6   Y_VDI_LCL+4,AUTO
          2 000514  EF45 000D                            STR,R6   13,B5

      731    10860
      732    10861        /* SETUP THE BUFFER HEADER                                                    */
      733    10862
      734    10863    3            %KV_VDI.OTPBFR_.ADR$->KA$OTPBFR = '0'B;

  10863   2 000516  DC86                                 LDB,B5   ,B6
          2 000517  CCC5 000A                            LDB,B4   10,B5
          2 000519  5C08                                 LDV,R5   8
          2 00051A  0021                                 ALR      ;
          2 00051B       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 00051D       4004 0000                                ALPHANUM(0,B4,,R5,FILL)
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:90   

      735    10864    3            %KV_VDI.OTPBFR_.ADR$->KA$OTPBFR.BYTSIZLOG2 = Y_VDI_LCL.BYTSIZLOG2;

  10864   2 00051F  437F                                 CSYNC    s:10863+8,SPREL
          2 000520  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000523  DC86                                 LDB,B5   ,B6
          2 000524  CCC5 000A                            LDB,B4   10,B5
          2 000526  E847 001F                            LDR,R6   Y_VDI_LCL+3,AUTO
          2 000528  600A                                 SOL,R6   10
          2 000529  EAC4 0002                            SRM,R6,'3C00'X    2,B4
          2 00052B       3C00

      736    10865
      737    10866
      738    10867    3            %KA_CTX.OTPBFRBYTCNT = %KA_CTX.OTPBFRBYTCNT+Y_VDI_LCL.BYTSIZ;

  10867   2 00052C  DCC7 0016                            LDB,B5   BCTX$,AUTO
          2 00052E  E845 000B                            LDR,R6   11,B5
          2 000530  EA47 001E                            ADD,R6   Y_VDI_LCL+2,AUTO
          2 000532  EF45 000B                            STR,R6   11,B5

      739    10868    4            IF (%KA_CTX.OTPBFRBYTCNT >= KA_OTPBLKLMT(%KV_VDI.LINSPD)) THEN DO;

  10868   2 000534  CC86                                 LDB,B4   ,B6
          2 000535  B2C4 001E                            LLH,R3   30,B4
          2 000537  E930 0000 0000  xsym                 CMR,R6   KA_OTPBLKLMT,R3
          2 00053A  0201 0018                            BL       s:10895,PREL

      740    10869
      741    10870        /* The output buffer byte count is greater than the block limit.              */
      742    10871        /* Wind down the flow of output.                                              */
      743    10872
      744    10873                    %KV$RQSOTP (RQSOTP=NO);
             10879    5           IF KV$PTR.VDI$->KV$VDI.RQSOTP THEN DO;

  10879   2 00053C  82C4 0019                            LB,'0008'X        25,B4
  10879   2 00053E       0008
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:91   
          2 00053F  0581 0013                            BBF      s:10895,PREL

             10880    5              KV$PTR.VDI$->KV$VDI.RQSOTP = '0'B;

  10880   2 000541  8844 0019                            LBF,'0008'X       25,B4
  10880   2 000543       0008

             10881    5              IF KV$PTR.VDI$->KV$VDI.SSNCNT>1

  10881   2 000544  CC86                                 LDB,B4   ,B6
          2 000545  E844 000E                            LDR,R6   14,B4
          2 000547  6D01                                 CMV,R6   1
          2 000548  0381 000A                            BLE      s:10895,PREL

             10882    5              THEN CALL KVV$VDI (KV_VDH_EVT_RQSOTP);

  10882   2 00054A  BB80 0000 0014  03                   LAB,B3   +20
          2 00054D  CBF0 0100                            LAB,B4   256,IMO
          2 00054F  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 000552       0001                            DC       s:10895,PREL

             10883    5              END;

      745    10891    4            END /* IF */;

      746    10892
      747    10893        /* UPDATE THE OUTPUT BUFFER CHAIN                                             */
      748    10894
      749    10895    4            IF (%KA_CTX.OTPBFRTAL$ = ADDR(NIL)) THEN DO;

  10895   2 000553  ECC7 0016                            LDB,B6   BCTX$,AUTO
          2 000555  8DC6 0006                            CMN      6,B6
          2 000557  0981 0010                            BNE      s:10905,PREL

      750    10896
      751    10897        /* THERE IS NO CHAIN                                                          */
      752    10898
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:92   
      753    10899    4               %KA_CTX.OTPBFRHED$ = %KV_VDI.OTPBFR_.ADR$;

  10899   2 000559  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00055C  CC85                                 LDB,B4   ,B5
          2 00055D  BCC4 000A                            LDB,B3   10,B4
          2 00055F  BFC6 0002                            STB,B3   2,B6

      754    10900    4               %KA_CTX.OTPBFRNXTLOD$ = %KV_VDI.OTPBFR_.ADR$;

  10900   2 000561  CC85                                 LDB,B4   ,B5
          2 000562  ACC4 000A                            LDB,B2   10,B4
          2 000564  AFC6 0004                            STB,B2   4,B6

      755    10901
      756    10902        /* OTHERWISE, A CHAIN EXISTS. ADD THIS BUFFER TO THE TAIL                     */
      757    10903
      758    10904    4            END; ELSE DO;

  10904   2 000566  0F81 0021                            B        s:10918,PREL

      759    10905    4               %KV_VDI.OTPBFR_.ADR$->KA$OTPBFR.HLTOTP_ALL = %KA_CTX.HLTOTPNXTBFR_ALL;

  10905   2 000568  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00056B  CC85                                 LDB,B4   ,B5
          2 00056C  BCC4 000A                            LDB,B3   10,B4
          2 00056E  E846 001D                            LDR,R6   29,B6
          2 000570  EAC3 0002                            SRM,R6,'C000'X    2,B3
          2 000572       C000

      760    10906    4               %KA_CTX.HLTOTPNXTBFR = '0'B;

  10906   2 000573  8846 001D                            LBF,'C000'X       29,B6
  10906   2 000575       C000

      761    10907    4               %KA_CTX.OTPBFRTAL$->KA$OTPBFR.LNK$ = %KV_VDI.OTPBFR_.ADR$;

  10907   2 000576  CCC6 0006                            LDB,B4   6,B6
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:93   
          2 000578  BC85                                 LDB,B3   ,B5
          2 000579  ACC3 000A                            LDB,B2   10,B3
          2 00057B  AF84                                 STB,B2   ,B4

      762    10908    5               IF (%KA_CTX.OTPBFRNXTLOD$ = ADDR(NIL)) THEN DO;

  10908   2 00057C  8DC6 0004                            CMN      4,B6
          2 00057E  0981 0009                            BNE      s:10918,PREL

      763    10909
      764    10910        /* INIT THE IOLD BUFFER                                                       */
      765    10911
      766    10912    5                  %KA_CTX.OTPBFRNXTLOD$ = %KV_VDI.OTPBFR_.ADR$;

  10912   2 000580  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000583  CC85                                 LDB,B4   ,B5
          2 000584  BCC4 000A                            LDB,B3   10,B4
          2 000586  BFC6 0004                            STB,B3   4,B6

      767    10913    5               END /* IF */;

      768    10914    4            END /* IF */;

      769    10915
      770    10916        /* SETUP THE TAIL POINTER.                                                    */
      771    10917
      772    10918    3            %KA_CTX.OTPBFRTAL$ = %KV_VDI.OTPBFR_.ADR$;

  10918   2 000588  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00058B  CC85                                 LDB,B4   ,B5
          2 00058C  BCC4 000A                            LDB,B3   10,B4
          2 00058E  BFC6 0006                            STB,B3   6,B6

      773    10919
      774    10920    3         END Y@DOGROUP;

      775    10921        /* CLEAR THE HANDLER SPECIFIC BYTE COUNT                                      */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:94   
      776    10922
      777    10923    2         %KV_VDI.TMPOTPCHRCNT = 0;

  10923   2 000590  CC85                                 LDB,B4   ,B5
          2 000591  8744 0015                            CL       21,B4
          2 000593  0F81 03B0                            B        s:11333,PREL

      778    10924
      779    10925        /* KV$USR_GETPRM - GET PARAMETER REQUEST                                      */
      780    10926
      781    10927    2      CASE(%KV_USR_FNC_GETPRM );

      782    10928
      783    10929        /* We don't do any GETPRMs, but we get asked about some things                */
      784    10930        /* we don't know about. Just doing nothing is ok.                             */
      785    10931
      786    10932
      787    10933        /* KV$USR_INPPRC - INPUT PROCEDURE                                            */
      788    10934
      789    10935    2      CASE(%KV_USR_FNC_INPPRC );

      790    10936    3         DO CASE( PRM_USR_INPPRC.ID );

  10936   2 000595  92C3 0002                            LLH,R1   2,B3
          2 000597  1D06                                 CMV,R1   6
          2 000598  0281 010A                            BGE      s:11051,PREL
          2 00059A  B810 0000 05A0  02                   LDR,R3   s:10936+11,R1
          2 00059D  83B0 0000 05A6  02                   JMP      s:10941,R3
          2 0005A0       00FD                            DC       s:11051,PREL
          2 0005A1       0000                            DC       s:10941,PREL
          2 0005A2       0098                            DC       s:10992,PREL
          2 0005A3       00A9                            DC       s:10998,PREL
          2 0005A4       0000                            DC       s:10941,PREL
          2 0005A5       00CB                            DC       s:11009,PREL

      791    10937    3         CASE(%KA#INPPRC_CLAOVRRUN, %KA#INPPRC_PRTERR );

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:95   
      792    10938
      793    10939        /* THIS IS A CLA OVER-RUN OR PARITY ERROR.                                    */
      794    10940
      795    10941    3            IF KA_LINERRDSCLMT~=255 OR KA_LINERRLOGLMT~=255

  10941   2 0005A6  E800 0000 0000  xsym                 LDR,R6   KA_LINERRDSCLMT
          2 0005A9  E970 00FF                            CMR,R6   255,IMO
          2 0005AB  0981 000D                            BNE      s:10946,PREL
          2 0005AD  D800 0000 0000  xsym                 LDR,R5   KA_LINERRLOGLMT
          2 0005B0  D970 00FF                            CMR,R5   255,IMO
          2 0005B2  0901 0029                            BE       s:10955,PREL
          2 0005B4  82C4 001C                            LB,'0800'X        28,B4
          2 0005B6       0800
          2 0005B7  0501 0024                            BBT      s:10955,PREL

      796    10942    4              AND NOT %KA_CTX.ERRCLKSET THEN DO;

      797    10943
      798    10944        /* We are to monitor errors for some reason, set a timer.                     */
      799    10945
      800    10946    4               KV@VDH_SETCLK = KV_VDH_SETCLK;

  10946   2 0005B9  8C80 0000 0000  xsym                 LDI      KV_VDH_SETCLK
          2 0005BC  8D47 002F                            SDI      KV@VDH_SETCLK,AUTO

      801    10947    4               KV@VDH_SETCLK.UNT = %KV_CLKUNT_MNT;

  10947   2 0005BE  5C02                                 LDV,R5   2
          2 0005BF  DAC7 002F                            SRM,R5,'00FF'X    KV@VDH_SETCLK,AUTO
          2 0005C1       00FF

      802    10948    4               KV@VDH_SETCLK.PRD = 1;

  10948   2 0005C2  4C01                                 LDV,R4   1
          2 0005C3  C7C7 0030                            STH,R4   KV@VDH_SETCLK+1,AUTO

      803    10949    4               KV@VDH_SETCLK.CLKNMB = %KV_CLKNMB_USRCLK1;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:96   

  10949   2 0005C5  3C04                                 LDV,R3   4
          2 0005C6  BAC7 0030                            SRM,R3,'00FF'X    KV@VDH_SETCLK+1,AUTO
          2 0005C8       00FF

      804    10950    5               CALL KVV$VDI(KV@VDH_SETCLK) WHENRETURN DO;

  10950   2 0005C9  DBC7 002F                            LAB,B5   KV@VDH_SETCLK,AUTO
          2 0005CB  DFC7 0032                            STB,B5   KV@VDH_SETCLK+3,AUTO
          2 0005CD  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 0005CF  CBF0 0100                            LAB,B4   256,IMO
          2 0005D1  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 0005D4       0008                            DC       s:10955,PREL

      805    10951    5                  %KA_CTX.ERRCLKSET = '1'B;

  10951   2 0005D5  ECC7 0016                            LDB,B6   BCTX$,AUTO
          2 0005D7  8946 001C                            LBT,'0800'X       28,B6
          2 0005D9       0800

      806    10952    5                  %KA_CTX.LINERRCNT = 0;

  10952   2 0005DA  87C6 001E                            CLH      30,B6

      807    10953    5               END;

      808    10954    4            END;

      809    10955    3            %KA_CTX.LINERRCNT = %KA_CTX.LINERRCNT+1;

  10955   2 0005DC  ECC7 0016                            LDB,B6   BCTX$,AUTO
          2 0005DE  E2C6 001E                            LLH,R6   30,B6
          2 0005E0  6E01                                 ADV,R6   1
          2 0005E1  E7C6 001E                            STH,R6   30,B6

      810    10956    4            IF %KA_CTX.LINERRCNT>KA_LINERRDSCLMT THEN DO;

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:97   
  10956   2 0005E3  E2C6 001E                            LLH,R6   30,B6
          2 0005E5  E900 0000 0000  xsym                 CMR,R6   KA_LINERRDSCLMT
          2 0005E8  0381 035B                            BLE      s:11333,PREL

      811    10957
      812    10958        /* The line error count exceeds the limit. Disconnect, error-log,             */
      813    10959        /* and possibly disable the line.                                             */
      814    10960
      815    10961    4               IF %KH_CHN.DRCCNC AND NOT %KH_CHN.AUTBAD

  10961   2 0005EA  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 0005ED  CC85                                 LDB,B4   ,B5
          2 0005EE  BC84                                 LDB,B3   ,B4
          2 0005EF  89C3 0007                            CMZ      7,B3
          2 0005F1  0881 001A                            BAGE     s:10976,PREL
          2 0005F3  82C3 0008                            LB,'0010'X        8,B3
          2 0005F5       0010
          2 0005F6  0501 0015                            BBT      s:10976,PREL

      816    10962    5               THEN DO;

      817    10963
      818    10964        /* DISABLE IT TO PREVENT US FROM GETTING CONNECTED AGAIN AS SOON AS           */
      819    10965        /* WE DISCONNECT. THE LINE WILL HAVE TO BE ENABLED                            */
      820    10966        /* WITH FEPCON BEFORE WE WILL TRY AGAIN.                                      */
      821    10967
      822    10968    5                  CALL KHA$DVCADM(%KHA_FNC_DISABLE,Y@INDEX,%KH_CHN.TERMID);

  10968   2 0005F8  ABF0 0002                            LAB,B2   2,IMO
          2 0005FA  9BC3 0012                            LAB,B1   18,B3
          2 0005FC  9FC7 0036                            STB,B1   KV@VDH_SETCLK+7,AUTO
          2 0005FE  CBC7 000B                            LAB,B4   Y@INDEX,AUTO
          2 000600  CFC7 0034                            STB,B4   KV@VDH_SETCLK+5,AUTO
          2 000602  AFC7 0032                            STB,B2   KV@VDH_SETCLK+3,AUTO
          2 000604  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 000606  CBF0 0300                            LAB,B4   768,IMO
          2 000608  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:98   
          2 00060B       0001                            DC       s:10976,PREL

      823    10969    5               END;

      824    10970        /*E* ERROR: KAV-E$ASN_LINERRDSC                                            */
      825    10971        /*E* MESSAGE: Disconnecting because of input line errors                      */
      826    10972        /*E* DESCRIPTION: An excessive number of line input errors (parity            */
      827    10973        /*,* or framing errors, or CLA over-runs) was received.                       */
      828    10974        /*,* The count, in 1 minute, exceeded KA_LINERRDSCLMT.                        */
      829    10975        /*,* A disconnect of the line has been initiated.                             */
      830    10976    4               CALL KHD$ERRLOG_SETTERMID_CHN (FPT_WRSYSLOG_LINERRDSC, %KH_CHN);

  10976   2 00060C  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00060F  DC86                                 LDB,B5   ,B6
          2 000610  CC85                                 LDB,B4   ,B5
          2 000611  CFC7 0034                            STB,B4   KV@VDH_SETCLK+5,AUTO
          2 000613  DB80 0000 001C  00                   LAB,B5   FPT_WRSYSLOG_LINERRDSC
          2 000616  DFC7 0032                            STB,B5   KV@VDH_SETCLK+3,AUTO
          2 000618  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 00061A  CBF0 0200                            LAB,B4   512,IMO
          2 00061C  E380 0000 0000  xent                 LNJ,B6   KHD$ERRLOG_SETTERMID_CHN
          2 00061F       0001                            DC       s:10978,PREL

      831    10977
      832    10978    4               %KV_VDI.INTPHSDSC = '1'B;

  10978   2 000620  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000623  DC86                                 LDB,B5   ,B6
          2 000624  8945 001D                            LBT,'0800'X       29,B5
          2 000626       0800

      833    10979    4               KV@VDH_DSC = KV_VDH_DSC;

  10979   2 000627  8C80 0000 0000  xsym                 LDI      KV_VDH_DSC
          2 00062A  8D47 0023                            SDI      KV@VDH_DSC,AUTO

      834    10980    4               KV@VDH_DSC.RSN = %KV_DSCRSN_HRDERR;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:99   

  10980   2 00062C  5C04                                 LDV,R5   4
          2 00062D  DAC7 0023                            SRM,R5,'00FF'X    KV@VDH_DSC,AUTO
          2 00062F       00FF

      835    10981    4               CALL KVV$VDI(KV@VDH_DSC) ;

  10981   2 000630  DBC7 0023                            LAB,B5   KV@VDH_DSC,AUTO
          2 000632  DFC7 0032                            STB,B5   KV@VDH_SETCLK+3,AUTO
          2 000634  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 000636  CBF0 0100                            LAB,B4   256,IMO
          2 000638  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 00063B       0001                            DC       s:10982,PREL

      836    10982    4            END /* IF */;

  10982   2 00063C  0F81 0307                            B        s:11333,PREL

      837    10983    3         CASE(%KA#INPPRC_DVCOTPBFRCLR );

      838    10984
      839    10985        /* THE DEVICE'S OUTPUT BUFFER HAS BEEN CLEARED.                               */
      840    10986        /* RESET THE OUTPUT CHARACTER COUNT UNTIL HALT BACK TO                        */
      841    10987        /* THE DEVICE'S OUTPUT BUFFER SIZE, SINCE THE BUFFER                          */
      842    10988        /* IS NOW EMPTY. THIS IS TO AVOID SENDING THE SYNCHRONOUS                     */
      843    10989        /* FLOW CONTROL CHARACTER (E.G., ETX) WHILE THE DEVICE IS                     */
      844    10990        /* THROWING AWAY CHARACTERS. IF WE DO, THE LINE GOES DEAD.                    */
      845    10991
      846    10992    3            %KA_CTX.OTPCHRCNTUTLHLT = %KV_ERD.DVCOTPBFRSIZ;

  10992   2 00063E  ACC6 0008                            LDB,B2   8,B6
          2 000640  9CC2 0008                            LDB,B1   8,B2
          2 000642  E841 0013                            LDR,R6   19,B1
          2 000644  EF44 000C                            STR,R6   12,B4

      847    10993    3            IF %KA_CTX.OTPCHRCNTUTLHLT<10 THEN %KA_CTX.OTPCHRCNTUTLHLT = 256;

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:100  
  10993   2 000646  6D0A                                 CMV,R6   10
          2 000647  0881 02FC                            BAGE     s:11333,PREL

  10993   2 000649  E870 0100                            LDR,R6   256,IMO
          2 00064B  EF44 000C                            STR,R6   12,B4
          2 00064D  0F81 02F6                            B        s:11333,PREL

      848    10994    3         CASE(%KA#INPPRC_HLTOTP );

      849    10995
      850    10996        /* THIS IS AN OUTPUT HALT REQUEST.                                            */
      851    10997
      852    10998    3            CALL KAO$ASNRQSHLTOTP(%KA#HLTOTP_USRX);

  10998   2 00064F  BB80 0000 0001  03                   LAB,B3   +1
          2 000652  CBF0 0100                            LAB,B4   256,IMO
          2 000654  E380 0000 0000  xent                 LNJ,B6   KAO$ASNRQSHLTOTP
          2 000657       0001                            DC       s:10999,PREL

      853    10999    3            IF %KA_CTX.HLTOTP.BITT(%KA#HLTOTP_USRX)

  10999   2 000658  ECC7 0016                            LDB,B6   BCTX$,AUTO
          2 00065A  82C6 001C                            LB,'4000'X        28,B6
          2 00065C       4000
          2 00065D  0581 02E6                            BBF      s:11333,PREL
          2 00065F  8DC6 0006                            CMN      6,B6
          2 000661  0981 02E2                            BNE      s:11333,PREL
          2 000663  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000666  CC85                                 LDB,B4   ,B5
          2 000667  82C4 001D                            LB,'0010'X        29,B4
          2 000669       0010
          2 00066A  0581 02D9                            BBF      s:11333,PREL

      854    11000    3              AND %KA_CTX.OTPBFRTAL$=ADDR(NIL) AND %KV_VDI.USRRQSDAT.RED
      855    11001        /*
      856    11002           If a read is pending at the device, make it easier to continue.
      857    11003        */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:101  
      858    11004    3            THEN %KA_CTX.REDHLT = '1'B;

  11004   2 00066C  8946 001D                            LBT,'2000'X       29,B6
  11004   2 00066E       2000
          2 00066F  0F81 02D4                            B        s:11333,PREL

      859    11005    3         CASE(%KA#INPPRC_SETTRNTBL );

      860    11006
      861    11007        /* THIS IS A TOGGLE ASCII-APL REQUEST.                                        */
      862    11008
      863    11009    3            Y@INDEX = 0;

  11009   2 000671  8747 000B                            CL       Y@INDEX,AUTO

      864    11010    3   Y@LOOP2:
      865    11011    4            DO WHILE ('1'B);               /* LOOP START                         */

  11011   2                              Y@LOOP2         null
      866    11012
      867    11013        /* THIS LOOP IS TRAVERSED FOR EACH CHARACTER IN THE KA_TRNTBLCHNCHR_...       */
      868    11014        /* TABLE EXAMINED.                                                            */
      869    11015
      870    11016    5               IF (PRM_USR_INPPRC.CHR = KA_TRNTBLCHNCHR$(%KV_TRNTBL.FNTCLS)->
             11016                        KA$TRNTBLCHNCHR(Y@INDEX)) THEN DO;

  11016   2 000673  EC80 0000 0000  xsym Y@LOOP2         LDB,B6   KV$PTR$
          2 000676  DCC6 0006                            LDB,B5   6,B6
          2 000678  CCC5 000E                            LDB,B4   14,B5
          2 00067A  B2C4 001D                            LLH,R3   29,B4
          2 00067C  BCB0 0000 0000  xsym                 LDB,B3   KA_TRNTBLCHNCHR$,R3
          2 00067F  ACC7 0004                            LDB,B2   @PRM_USR_X,AUTO
          2 000681  A847 000B                            LDR,R2   Y@INDEX,AUTO
          2 000683  E2A3                                 LLH,R6   ,B3,R2
          2 000684  E942 0001                            CMR,R6   1,B2
          2 000686  0981 0014                            BNE      s:11036,PREL

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:102  
      871    11017
      872    11018        /* WE'VE FOUND THE TRANSLATED '$'. SET THE NEW TRANSLATE TABLE POINTER        */
      873    11019        /* TO THE TRANSLATE TABLE INDICATED BY THE '$' VALUE.                         */
      874    11020
      875    11021    6                  IF %KV_MVD.APLLCNRM THEN DO;

  11021   2 000688  82C5 0016                            LB,'0020'X        22,B5
  11021   2 00068A       0020
          2 00068B  0581 0008                            BBF      s:11032,PREL

      876    11022
      877    11023        /* IF WE ARE GOING TO AN APL TRANSLATE TABLE, GO TO THE PARTIAL (PRINT 'LOWERC*/
      878    11024        /* CHARACTERS AS UPPERCASE) VERSION.                                          */
      879    11025
      880    11026    6                     %KV_MVD.TRNTBL$ = KA_TRNTBL_PRT$(Y@INDEX);

  11026   2 00068D  9CA0 0000 0000  xsym                 LDB,B1   KA_TRNTBL_PRT$,R2
          2 000690  9FC5 000E                            STB,B1   14,B5

      881    11027    6                  END; ELSE DO;

  11027   2 000692  0F81 0006                            B        s:11034,PREL

      882    11028
      883    11029        /* IF WE ARE GOING TO AN APL TRANSLATE TABLE, GO TO THE FULL (UNDERSCORED     */
      884    11030        /* 'LOWERCASE' CHARACTERS) VERSION.                                           */
      885    11031
      886    11032    6                     %KV_MVD.TRNTBL$ = KA_TRNTBL_FUL$(Y@INDEX);

  11032   2 000694  9CA0 0000 0000  xsym                 LDB,B1   KA_TRNTBL_FUL$,R2
          2 000697  9FC5 000E                            STB,B1   14,B5

      887    11033    6                  END /* IF */;

      888    11034    5                  EXIT Y@LOOP2;            /* LOOK BELOW                         */

  11034   2 000699  0F81 0007                            B        s:11042+1,PREL
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:103  

      889    11035    5               END /* IF */;
      890    11036    4               IF (Y@INDEX >= %KV_FNTCLS_HI) THEN EXIT Y@LOOP2;

  11036   2 00069B  2D03                                 CMV,R2   3
          2 00069C  0881 0004                            BAGE     s:11042+1,PREL

      891    11037
      892    11038        /* EITHER THERE IS AN ERROR IN ONE OF THE TABLES THAT GETS US                 */
      893    11039        /* HERE, OR THIS IS AN ILLEGAL ESCAPE SEQUENCE.                               */
      894    11040
      895    11041    4               Y@INDEX = Y@INDEX+1;

  11041   2 00069E  8AC7 000B                            INC      Y@INDEX,AUTO

      896    11042    4            END Y@LOOP2;

  11042   2 0006A0  0FD3                                 B        s:11011,SPREL
          2 0006A1  0F81 02A2                            B        s:11333,PREL

      897    11043    3         CASE(ELSE);

      898    11044
      899    11045        /* WE GOT AN INPPRC ID WE DIDNT UNDERSTAND                                    */
      900    11046
      901    11047        /*S* SCREECH_CODE: KAV-S$KA_ILGINPPRCID
      902    11048             MESSAGE: ASYNC got a KV$USR_INPPRC.ID it didn't understand               */
      903    11049                 %KH$SCREECH(COD = Y_SCRILGINPPRCID);
             11049                     /* ASYNC GOT A KV$USR_INPPRC.ID IT DIDN'T UNDERSTAND */

  11051   2 0006A3  BB80 0000 0016  03                   LAB,B3   +22
          2 0006A6  CBF0 0100                            LAB,B4   256,IMO
          2 0006A8  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 0006AB       0001                            DC       s:11053,PREL

      904    11053    3         END /* CASE */;

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:104  
  11053   2 0006AC  0F81 0297                            B        s:11333,PREL

      905    11054
      906    11055        /* KV$USR_OTPMRK - OUTPUT MARKER REQUEST                                      */
      907    11056
      908    11057    2      CASE(%KV_USR_FNC_OTPMRK );

      909    11058
      910    11059    3         IF PRM_USR_OTPMRK.CMPOTP THEN DO;

  11059   2 0006AE  8283                                 LB,'0080'X        ,B3
  11059   2 0006AF       0080
          2 0006B0  0581 000E                            BBF      s:11073,PREL

      911    11060                 %KV$CMPOTP;
             11065    4           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;

  11065   2 0006B2  E845 001A                            LDR,R6   26,B5
          2 0006B4  6901 000A                            BEZ,R6   s:11073,PREL

             11066    4              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);

  11066   2 0006B6  BB80 0000 000E  03                   LAB,B3   +14
          2 0006B9  CBF0 0100                            LAB,B4   256,IMO
          2 0006BB  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 0006BE       0001                            DC       s:11073,PREL

             11067    4              END;                         /* END IF                             */

      912    11069    3         END;

      913    11070
      914    11071        /* If there is no output buffer at all, send the marker right back            */
      915    11072
      916    11073    3         IF (%KA_CTX.OTPBFRBYTCNT = 0) THEN DO;

  11073   2 0006BF  ECC7 0016                            LDB,B6   BCTX$,AUTO
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:105  
          2 0006C1  E846 000B                            LDR,R6   11,B6
          2 0006C3  6981 001E                            BNEZ,R6  s:11107,PREL

      917    11074    3            KV@VDH_OTPMRK = KV_VDH_OTPMRK;

  11074   2 0006C5  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_OTPMRK
          2 0006C8  2C00                                 LDV,R2   0
          2 0006C9  6C0A                                 LDV,R6   10
          2 0006CA  BB87                                 LAB,B3   ,AUTO
          2 0006CB  3C54                                 LDV,R3   84
          2 0006CC  0008                                 MMM

      918    11075    3            KV@VDH_OTPMRK.DAT = PRM_USR_OTPMRK.DAT;

  11075   2 0006CD  ACC7 0004                            LDB,B2   @PRM_USR_X,AUTO
          2 0006CF  2C02                                 LDV,R2   2
          2 0006D0  6C06                                 LDV,R6   6
          2 0006D1  BB87                                 LAB,B3   ,AUTO
          2 0006D2  3C56                                 LDV,R3   86
          2 0006D3  0008                                 MMM

      919    11076    3            CALL KVV$VDI(KV@VDH_OTPMRK) ;

  11076   2 0006D4  EBC7 002A                            LAB,B6   KV@VDH_OTPMRK,AUTO
          2 0006D6  EFC7 0032                            STB,B6   KV@VDH_SETCLK+3,AUTO
          2 0006D8  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 0006DA  CBF0 0100                            LAB,B4   256,IMO
          2 0006DC  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 0006DF       0001                            DC       s:11077,PREL

      920    11077    3         END; ELSE DO;

  11077   2 0006E0  0F81 008F                            B        s:11146,PREL

      921    11078        %EJECT;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:106  
      922    11079        /*
      923    11080           A picture is needed to explain the following code about where to put
      924    11081           the marker and how to update KV$VDI.OTPBFR_.BYTSIZ :
      925    11082
      926    11083                                   .__________________.
      927    11084                    Y@PTR$ ------->|       H D R      |
      928    11085                                   |__________________|
      929    11086                                   |                  |
      930    11087                                   |       O T P      |
      931    11088                                   |       C H R      |
      932    11089                                   |__________________|
      933    11090         KV$VDI.OTPBFR_.BYTX ---A->|                  |  A
      934    11091                                |  |                  |  |
      935    11092                                |  |                  | KV$VDI.OTPBFR_.BYTSIZ
      936    11093                                |  |                  |  |
      937    11094                      Spare space  |__________________|  V
      938    11095                                |  /  /  /  /  /  /  /|
      939    11096                                |  | /  /  /  /  /  / |
      940    11097                                |  |/  /  /  /  /  /  /
      941    11098                                   |__/__/__/__/__/__/|
      942    11099                   Y@INDEX -----V->|   NEW MARKER     |
      943    11100                                   |__________________|
      944    11101                                   |                  |
      945    11102                                   |       M R K      |
      946    11103                                   |__________________|
      947    11104
      948    11105        */
      949    11106
      950    11107    3            KA@OTPMRK.DAT = PRM_USR_OTPMRK.DAT;

  11107   2 0006E2  ACC7 0004                            LDB,B2   @PRM_USR_X,AUTO
          2 0006E4  2C02                                 LDV,R2   2
          2 0006E5  6C06                                 LDV,R6   6
          2 0006E6  BB87                                 LAB,B3   ,AUTO
          2 0006E7  3C18                                 LDV,R3   24
          2 0006E8  0008                                 MMM

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:107  
      951    11108    3            Y@PTR$ = %KV_VDI.OTPBFR_.ADR$;

  11108   2 0006E9  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0006EC  DC86                                 LDB,B5   ,B6
          2 0006ED  CCC5 000A                            LDB,B4   10,B5
          2 0006EF  CFC7 0009                            STB,B4   Y@PTR$,AUTO

      952    11109    4            IF (Y@PTR$ ~= ADDR(NIL)) THEN DO;

  11109   2 0006F1  8DC7 0009                            CMN      Y@PTR$,AUTO
          2 0006F3  0901 0029                            BE       s:11123,PREL

      953    11110    4               Y@INDEX = Y_POWER_OF_2(Y@PTR$->KA$OTPBFR.BYTSIZLOG2)

  11110   2 0006F5  B844 0002                            LDR,R3   2,B4
          2 0006F7  304A                                 SOR,R3   10
          2 0006F8  B570 000F                            AND,R3   15,IMO
          2 0006FA  E844 0003                            LDR,R6   3,B4
          2 0006FC  6047                                 SOR,R6   7
          2 0006FD  E570 01F8                            AND,R6   504,IMO
          2 0006FF  8256                                 NEG      R6
          2 000700  EA30 0000 0046  00                   ADD,R6   Y_POWER_OF_2,R3
          2 000703  6EF8                                 ADV,R6   -8
          2 000704  EF47 000B                            STR,R6   Y@INDEX,AUTO

      954    11111    4                 - (Y@PTR$->KA$OTPBFR.NMBMRK+1)*SIZEC(KA$OTPMRK);
      955    11112    4               IF (Y@INDEX > %KV_VDI.OTPBFR_.BYTX) THEN

  11112   2 000706  DC86                                 LDB,B5   ,B6
          2 000707  E945 000C                            CMR,R6   12,B5
          2 000709  0A81 0008                            BALE     s:11119,PREL

      956    11113
      957    11114        /* We have room to put a marker at the current bottom of the
      958    11115           output buffer. (there may be previous markers beneath it) */
      959    11116
      960    11117    4               KA@OTPMRK.BYTCNT = %KV_VDI.OTPBFR_.BYTX-LENGTHC(KA$OTPBFR)+1;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:108  

  11117   2 00070B  D845 000C                            LDR,R5   12,B5
          2 00070D  5EF9                                 ADV,R5   -7
          2 00070E  DF47 000F                            STR,R5   KA@OTPMRK+3,AUTO
          2 000710  0F81 000C                            B        s:11123,PREL

      961    11118    5               ELSE DO;

      962    11119    5                  CALL KAO$TRNOTPIOLD;

  11119   2 000712  CBF0 0000                            LAB,B4   0,IMO
          2 000714  E380 0000 0000  xent                 LNJ,B6   KAO$TRNOTPIOLD
          2 000717       0001                            DC       s:11120,PREL

      963    11120    5                  %KA_CTX.PRVOTPBFRDATEXCSML = '1'B;

  11120   2 000718  ECC7 0016                            LDB,B6   BCTX$,AUTO
          2 00071A  8946 001C                            LBT,'2000'X       28,B6
          2 00071C       2000

      964    11121    5               END;

      965    11122    4            END;

      966    11123    4            IF %KV_VDI.OTPBFR_.ADR$ = ADDR(NIL) THEN DO;

  11123   2 00071D  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000720  DC86                                 LDB,B5   ,B6
          2 000721  8DC5 000A                            CMN      10,B5
          2 000723  0981 0027                            BNE      s:11141,PREL

      967    11124        /*
      968    11125           Either we have just truncated the last buffer in the chain,
      969    11126           or there is not enough room in the current buffer for the marker.
      970    11127           Request another output buffer and place the marker there.
      971    11128        */
      972    11129    4               KV_USR_GETOTPBFR.ESTBYTSIZ = 2; /* anything > 1 will do           */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:109  

  11129   2 000725  6C02                                 LDV,R6   2
          2 000726  EF00 0000 0001  01                   STR,R6   KV_USR_GETOTPBFR+1

      973    11130    4               CALL KAV$VDI(KV_USR_GETOTPBFR)

  11130   2 000729  BB80 0000 0018  03                   LAB,B3   +24
          2 00072C  CBF0 0100                            LAB,B4   256,IMO
          2 00072E  E3C0 F8D1                            LNJ,B6   s:9,PREL
          2 000730       0003                            DC       s:11131,PREL
          2 000731  0F81 0004                            B        s:11135,PREL

      974    11131    5               WHENALTRETURN DO; ALTRETURN; END;

  11131   2 000733  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      975    11132
      976    11133        /* Put the marker at the bottom of this newly obtained buffer */
      977    11134
      978    11135    4               Y@PTR$ = %KV_VDI.OTPBFR_.ADR$;

  11135   2 000736  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 000739  DC86                                 LDB,B5   ,B6
          2 00073A  CCC5 000A                            LDB,B4   10,B5
          2 00073C  CFC7 0009                            STB,B4   Y@PTR$,AUTO

      979    11136    4               Y@INDEX = Y_POWER_OF_2(Y@PTR$->KA$OTPBFR.BYTSIZLOG2)

  11136   2 00073E  B844 0002                            LDR,R3   2,B4
          2 000740  304A                                 SOR,R3   10
          2 000741  B570 000F                            AND,R3   15,IMO
          2 000743  E830 0000 0046  00                   LDR,R6   Y_POWER_OF_2,R3
          2 000746  6EF8                                 ADV,R6   -8
          2 000747  EF47 000B                            STR,R6   Y@INDEX,AUTO

      980    11137    4                 - SIZEC(KA$OTPMRK);
      981    11138    4               KA@OTPMRK.BYTCNT = 0;  /* 0 shows that this marks a previous bfr. */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:110  

  11138   2 000749  8747 000F                            CL       KA@OTPMRK+3,AUTO

      982    11139    4            END;

      983    11140
      984    11141    3            PINCRC(Y@PTR$,Y@INDEX)->KA$OTPMRK = KA@OTPMRK;

  11141   2 00074B  AB87                                 LAB,B2   ,AUTO
          2 00074C  2C18                                 LDV,R2   24
          2 00074D  6C08                                 LDV,R6   8
          2 00074E  BCC7 0009                            LDB,B3   Y@PTR$,AUTO
          2 000750  B847 000B                            LDR,R3   Y@INDEX,AUTO
          2 000752  0008                                 MMM

      985    11142    3            Y@PTR$->KA$OTPBFR.NMBMRK = Y@PTR$->KA$OTPBFR.NMBMRK + 1;

  11142   2 000753  ECC7 0009                            LDB,B6   Y@PTR$,AUTO
          2 000755  E846 0003                            LDR,R6   3,B6
          2 000757  EA70 0400                            ADD,R6   1024,IMO
          2 000759  EAC6 0003                            SRM,R6,'FC00'X    3,B6
          2 00075B       FC00

      986    11143    3            IF %KV_VDI.OTPBFR_.BYTSIZ > Y@INDEX-%KV_VDI.OTPBFR_.BYTX

  11143   2 00075C  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 00075F  CC85                                 LDB,B4   ,B5
          2 000760  E847 000B                            LDR,R6   Y@INDEX,AUTO
          2 000762  E244 000C                            SUB,R6   12,B4
          2 000764  6801 0005                            BLZ,R6   s:11144,PREL
          2 000766  E944 000D                            CMR,R6   13,B4
          2 000768  0281 0007                            BGE      s:11146,PREL

      987    11144    3            THEN %KV_VDI.OTPBFR_.BYTSIZ = Y@INDEX-%KV_VDI.OTPBFR_.BYTX;

  11144   2 00076A  E847 000B                            LDR,R6   Y@INDEX,AUTO
          2 00076C  E244 000C                            SUB,R6   12,B4
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:111  
          2 00076E  EF44 000D                            STR,R6   13,B4

      988    11145    3         END;

      989    11146    2         IF PRM_USR_OTPMRK.CMPOTP THEN

  11146   2 000770  ECC7 0004                            LDB,B6   @PRM_USR_X,AUTO
          2 000772  8286                                 LB,'0080'X        ,B6
          2 000773       0080
          2 000774  0581 01CF                            BBF      s:11333,PREL

      990    11147              %KV$CMPOTP;
             11152    3           IF KV$PTR.VDI$->KV$VDI.OTPCNDPND THEN DO;

  11152   2 000776  DC80 0000 0000  xsym                 LDB,B5   KV$PTR$
          2 000779  CC85                                 LDB,B4   ,B5
          2 00077A  E844 001A                            LDR,R6   26,B4
          2 00077C  6901 01C7                            BEZ,R6   s:11333,PREL

             11153    3              CALL KVV$VDI(KV_VDH_EVT_CMPOTP);

  11153   2 00077E  BB80 0000 000E  03                   LAB,B3   +14
          2 000781  CBF0 0100                            LAB,B4   256,IMO
          2 000783  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          2 000786       0001                            DC       s:11154,PREL

             11154    3              END;                         /* END IF                             */

  11154   2 000787  0F81 01BC                            B        s:11333,PREL

      991    11156
      992    11157        /* KV$USR_OTPRPTCHR - OUTPUT REPEATED CHARACTER                               */
      993    11158
      994    11159    2      CASE(%KV_USR_FNC_OTPRPTCHR );

      995    11160    2         Y_VDI_LCL.SNCFLWCTRHLT = '0'B;

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:112  
  11160   2 000789  8747 0022                            CL       Y_VDI_LCL+6,AUTO

      996    11161    2         Y@BYTSIZ = PRM_USR_OTPRPTCHR.CNT;

  11161   2 00078B  E843 0001                            LDR,R6   1,B3
          2 00078D  EF47 0007                            STR,R6   Y@BYTSIZ,AUTO

      997    11162    2         Y_VDI_LCL.NXTCNT = Y@BYTSIZ;

  11162   2 00078F  EF47 0021                            STR,R6   Y_VDI_LCL+5,AUTO

      998    11163    3         DO UNTIL (Y_VDI_LCL.NXTCNT = 0);  /* LOOP START                         */

      999    11164
     1000    11165        /* THIS LOOP IS TRAVERSED ONCE FOR EACH CONTROL STRING GENERATED,             */
     1001    11166        /* AND ONCE IF THE REMAINING REPEAT COUNT IS 0, 1, OR 2.                      */
     1002    11167
     1003    11168
     1004    11169        /* IF THE REMAINING REPEAT COUNT IS GREATER THAN OR EQUAL                     */
     1005    11170        /* TO THE MAXIMUM VALUE FOR                                                   */
     1006    11171        /* A REPEAT COUNT IN THE CONTROL STRING,                                      */
     1007    11172        /* GENERATE A CONTROL STRING FOR '3F'X.                                       */
     1008    11173
     1009    11174    3            IF Y@BYTSIZ > BITBIN('3F'X) THEN Y@BYTSIZ = BITBIN('3F'X);

  11174   2 000791  E847 0007                            LDR,R6   Y@BYTSIZ,AUTO
          2 000793  6D3F                                 CMV,R6   63
          2 000794  0381 0004                            BLE      s:11175,PREL

  11174   2 000796  6C3F                                 LDV,R6   63
          2 000797  EF47 0007                            STR,R6   Y@BYTSIZ,AUTO

     1010    11175    4            IF (KA_DVCFLWCTRCHR(%KV_MRD.DVCFLWCTRALG) ~= 0) THEN DO;

  11175   2 000799  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00079C  DCC6 0008                            LDB,B5   8,B6
          2 00079E  B845 0015                            LDR,R3   21,B5
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:113  
          2 0007A0  B570 00FF                            AND,R3   255,IMO
          2 0007A2  3001                                 SOL,R3   1
          2 0007A3  D2B0 0000 0000  xsym                 LLH,R5   KA_DVCFLWCTRCHR,R3
          2 0007A6  5901 0013                            BEZ,R5   s:11189,PREL

     1011    11176
     1012    11177        /* THERE IS A SYNCHRONOUS FLOW CONTROL ALGORITHM IN EFFECT.                   */
     1013    11178
     1014    11179    4               Y@BYTSIZ2 = %KA_CTX.OTPCHRCNTUTLHLT-%KV_VDI.TMPOTPCHRCNT;

  11179   2 0007A8  CC86                                 LDB,B4   ,B6
          2 0007A9  BCC7 0016                            LDB,B3   BCTX$,AUTO
          2 0007AB  D843 000C                            LDR,R5   12,B3
          2 0007AD  D244 0015                            SUB,R5   21,B4
          2 0007AF  DF47 0008                            STR,R5   Y@BYTSIZ2,AUTO

     1015    11180
     1016    11181        /* IF WE SENT OUT THE REPEATED CHARACTERS, WE WOULD OVERFLOW                  */
     1017    11182        /* (OR JUST FILL) THE DEVICE'S OUTPUT BUFFER. BREAK UP THE                    */
     1018    11183        /* REPEATED CHARACTER INTO A SERIES OF REPEATED CHARACTERS,                   */
     1019    11184        /* WITH OUTPUT HALTS INTERSPERSED.                                            */
     1020    11185
     1021    11186    4               IF Y@BYTSIZ > Y@BYTSIZ2 THEN Y@BYTSIZ = Y@BYTSIZ2;

  11186   2 0007B1  E955                                 CMR,R6   R5
          2 0007B2  0381 0004                            BLE      s:11187,PREL

  11186   2 0007B4  E855                                 LDR,R6   R5
          2 0007B5  EF47 0007                            STR,R6   Y@BYTSIZ,AUTO

     1022    11187    4               Y_VDI_LCL.SNCFLWCTRHLT = '1'B;

  11187   2 0007B7  8947 0022                            LBT,'8000'X       Y_VDI_LCL+6,AUTO
  11187   2 0007B9       8000

     1023    11188    4            END /* IF */;

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:114  
     1024    11189    3            Y_VDI_LCL.NXTCNT = Y_VDI_LCL.NXTCNT-Y@BYTSIZ;

  11189   2 0007BA  E247 0021                            SUB,R6   Y_VDI_LCL+5,AUTO
          2 0007BC  8256                                 NEG      R6
          2 0007BD  EF47 0021                            STR,R6   Y_VDI_LCL+5,AUTO

     1025    11190    4            IF (Y@BYTSIZ = 1) THEN DO;

  11190   2 0007BF  D847 0007                            LDR,R5   Y@BYTSIZ,AUTO
          2 0007C1  5D01                                 CMV,R5   1
          2 0007C2  0981 0022                            BNE      s:11197+2,PREL

     1026    11191
     1027    11192        /* THE REPEAT COUNT IS 1*                                                     */
     1028    11193    4               KA@BFRCTRSTR_RPTCHR = KA_BFRCTRSTR_RPTCHR;

  11193   2 0007C4  AB80 0000 0000  00                   LAB,B2   Y_SCRILGEVTID
          2 0007C7  2C2A                                 LDV,R2   42
          2 0007C8  6C05                                 LDV,R6   5
          2 0007C9  BB87                                 LAB,B3   ,AUTO
          2 0007CA  3C26                                 LDV,R3   38
          2 0007CB  0008                                 MMM

     1029    11194    4               KA@BFRCTRSTR_RPTCHR.TXTSIZ = 1;

  11194   2 0007CC  6C01                                 LDV,R6   1
          2 0007CD  E7C7 0013                            STH,R6   KA@BFRCTRSTR_RPTCHR,AUTO

     1030    11195    4               KA@BFRCTRSTR_RPTCHR.TXT(0) = ASCBIN(PRM_USR_OTPRPTCHR.CHR);

  11195   2 0007CF  ECC7 0004                            LDB,B6   @PRM_USR_X,AUTO
          2 0007D1  D806                                 LDR,R5   ,B6
          2 0007D2  D570 00FF                            AND,R5   255,IMO
          2 0007D4  DAC7 0013                            SRM,R5,'00FF'X    KA@BFRCTRSTR_RPTCHR,AUTO
          2 0007D6       00FF

     1031    11196    4               CALL KAO$BFRCTRSTR(KA@BFRCTRSTR_RPTCHR);
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:115  

  11196   2 0007D7  DBC7 0013                            LAB,B5   KA@BFRCTRSTR_RPTCHR,AUTO
          2 0007D9  DFC7 0032                            STB,B5   KV@VDH_SETCLK+3,AUTO
          2 0007DB  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 0007DD  CBF0 0100                            LAB,B4   256,IMO
          2 0007DF  E380 0000 0000  xent                 LNJ,B6   KAO$BFRCTRSTR
          2 0007E2       0001                            DC       s:11197,PREL

     1032    11197    4            END; ELSE IF (Y@BYTSIZ = 2) THEN DO;

  11197   2 0007E3  0F81 0056                            B        s:11219,PREL

  11197   2 0007E5  5D02                                 CMV,R5   2
          2 0007E6  0981 0027                            BNE      s:11206+2,PREL

     1033    11198
     1034    11199        /* THE REPEAT COUNT IS 2* THAN BUFFERING THE CHR TWICE.                       */
     1035    11200
     1036    11201    4               KA@BFRCTRSTR_RPTCHR = KA_BFRCTRSTR_RPTCHR;

  11201   2 0007E8  AB80 0000 0000  00                   LAB,B2   Y_SCRILGEVTID
          2 0007EB  2C2A                                 LDV,R2   42
          2 0007EC  6C05                                 LDV,R6   5
          2 0007ED  BB87                                 LAB,B3   ,AUTO
          2 0007EE  3C26                                 LDV,R3   38
          2 0007EF  0008                                 MMM

     1037    11202    4               KA@BFRCTRSTR_RPTCHR.TXTSIZ = 2;

  11202   2 0007F0  6C02                                 LDV,R6   2
          2 0007F1  E7C7 0013                            STH,R6   KA@BFRCTRSTR_RPTCHR,AUTO

     1038    11203    4               KA@BFRCTRSTR_RPTCHR.TXT(0) = ASCBIN(PRM_USR_OTPRPTCHR.CHR);

  11203   2 0007F3  ECC7 0004                            LDB,B6   @PRM_USR_X,AUTO
          2 0007F5  D806                                 LDR,R5   ,B6
          2 0007F6  D570 00FF                            AND,R5   255,IMO
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:116  
          2 0007F8  DAC7 0013                            SRM,R5,'00FF'X    KA@BFRCTRSTR_RPTCHR,AUTO
          2 0007FA       00FF

     1039    11204    4               KA@BFRCTRSTR_RPTCHR.TXT(1) = ASCBIN(PRM_USR_OTPRPTCHR.CHR);

  11204   2 0007FB  D806                                 LDR,R5   ,B6
          2 0007FC  D570 00FF                            AND,R5   255,IMO
          2 0007FE  D7C7 0014                            STH,R5   KA@BFRCTRSTR_RPTCHR+1,AUTO

     1040    11205    4               CALL KAO$BFRCTRSTR(KA@BFRCTRSTR_RPTCHR);

  11205   2 000800  DBC7 0013                            LAB,B5   KA@BFRCTRSTR_RPTCHR,AUTO
          2 000802  DFC7 0032                            STB,B5   KV@VDH_SETCLK+3,AUTO
          2 000804  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 000806  CBF0 0100                            LAB,B4   256,IMO
          2 000808  E380 0000 0000  xent                 LNJ,B6   KAO$BFRCTRSTR
          2 00080B       0001                            DC       s:11206,PREL

     1041    11206    4            END; ELSE IF (Y@BYTSIZ >= 3) THEN DO;

  11206   2 00080C  0F81 002D                            B        s:11219,PREL

  11206   2 00080E  5D03                                 CMV,R5   3
          2 00080F  0201 002A                            BL       s:11219,PREL

     1042    11207
     1043    11208        /* THE REPEAT COUNT ISN'T LESS THAN THE MINIMUM NUMBER OF CHARACTERS          */
     1044    11209        /* REQUIRED FOR A REPEAT-CHARACTER CONTROL STRING (3), SO WE'LL               */
     1045    11210        /* EITHER BREAK EVEN OR SAVE BY USING THE CONTROL STRING.                     */
     1046    11211
     1047    11212    4               KA@BFRCTRSTR_RPTCHR = KA_BFRCTRSTR_RPTCHR;

  11212   2 000811  AB80 0000 0000  00                   LAB,B2   Y_SCRILGEVTID
          2 000814  2C2A                                 LDV,R2   42
          2 000815  6C05                                 LDV,R6   5
          2 000816  BB87                                 LAB,B3   ,AUTO
          2 000817  3C26                                 LDV,R3   38
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:117  
          2 000818  0008                                 MMM

     1048    11213    4               KA@BFRCTRSTR_RPTCHR.TXTSIZ = 3;

  11213   2 000819  6C03                                 LDV,R6   3
          2 00081A  E7C7 0013                            STH,R6   KA@BFRCTRSTR_RPTCHR,AUTO

     1049    11214    4               KA@BFRCTRSTR_RPTCHR.TXT(0) = %KA#OTPCTRSTRCHR_BGN;

  11214   2 00081C  D870 00FE                            LDR,R5   254,IMO
          2 00081E  DAC7 0013                            SRM,R5,'00FF'X    KA@BFRCTRSTR_RPTCHR,AUTO
          2 000820       00FF

     1050    11215    4               KA@BFRCTRSTR_RPTCHR.TXT(1) = %KA#OTPCTRSTRCHR_RPTCHR + Y@BYTSIZ;

  11215   2 000821  C847 0007                            LDR,R4   Y@BYTSIZ,AUTO
          2 000823  4E40                                 ADV,R4   64
          2 000824  C7C7 0014                            STH,R4   KA@BFRCTRSTR_RPTCHR+1,AUTO

     1051    11216    4               KA@BFRCTRSTR_RPTCHR.TXT(2) = ASCBIN(PRM_USR_OTPRPTCHR.CHR);

  11216   2 000826  ECC7 0004                            LDB,B6   @PRM_USR_X,AUTO
          2 000828  B806                                 LDR,R3   ,B6
          2 000829  B570 00FF                            AND,R3   255,IMO
          2 00082B  BAC7 0014                            SRM,R3,'00FF'X    KA@BFRCTRSTR_RPTCHR+1,AUTO
          2 00082D       00FF

     1052    11217    4               CALL KAO$BFRCTRSTR(KA@BFRCTRSTR_RPTCHR);

  11217   2 00082E  DBC7 0013                            LAB,B5   KA@BFRCTRSTR_RPTCHR,AUTO
          2 000830  DFC7 0032                            STB,B5   KV@VDH_SETCLK+3,AUTO
          2 000832  BBC7 0032                            LAB,B3   KV@VDH_SETCLK+3,AUTO
          2 000834  CBF0 0100                            LAB,B4   256,IMO
          2 000836  E380 0000 0000  xent                 LNJ,B6   KAO$BFRCTRSTR
          2 000839       0001                            DC       s:11219,PREL

     1053    11218    4            END /* IF */;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:118  

     1054    11219    3            %KV_SSN.OTPCHRCNT = Y@BYTSIZ+%KV_SSN.OTPCHRCNT;

  11219   2 00083A  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 00083D  DCC6 0002                            LDB,B5   2,B6
          2 00083F  F847 0007                            LDR,R7   Y@BYTSIZ,AUTO
          2 000841  6C00                                 LDV,R6   0
          2 000842  8445 0018                            AID      24,B5
          2 000844  8D45 0018                            SDI      24,B5

     1055    11220    3            KV_STT.OTPCHRCNT = Y@BYTSIZ+KV_STT.OTPCHRCNT;

  11220   2 000846  F847 0007                            LDR,R7   Y@BYTSIZ,AUTO
          2 000848  6C00                                 LDV,R6   0
          2 000849  8400 0000 0034  xsym                 AID      KV_STT+52
          2 00084C  8D00 0000 0034  xsym                 SDI      KV_STT+52

     1056    11221    3            %KV_VDI.TMPOTPCHRCNT = Y@BYTSIZ+%KV_VDI.TMPOTPCHRCNT;

  11221   2 00084F  DC86                                 LDB,B5   ,B6
          2 000850  D847 0007                            LDR,R5   Y@BYTSIZ,AUTO
          2 000852  DA45 0015                            ADD,R5   21,B5
          2 000854  DF45 0015                            STR,R5   21,B5

     1057    11222    3            IF Y_VDI_LCL.SNCFLWCTRHLT

  11222   2 000856  89C7 0022                            CMZ      Y_VDI_LCL+6,AUTO
          2 000858  0881 001B                            BAGE     s:11236,PREL

     1058    11223
     1059    11224        /* WE ARE TO GENERATE A SYNCHRONOUS OUTPUT HALT FOR FLOW CONTROL.             */
     1060    11225
     1061    11226    3            THEN IF Y@BYTSIZ=Y@BYTSIZ2

  11226   2 00085A  E847 0007                            LDR,R6   Y@BYTSIZ,AUTO
          2 00085C  E947 0008                            CMR,R6   Y@BYTSIZ2,AUTO
          2 00085E  0981 0009                            BNE      s:11232,PREL
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:119  

     1062    11227    3            THEN CALL KAO$SNCFLWCTRHLT;

  11227   2 000860  CBF0 0000                            LAB,B4   0,IMO
          2 000862  E380 0000 0000  xent                 LNJ,B6   KAO$SNCFLWCTRHLT
          2 000865       0001                            DC       s:11227+6,PREL
          2 000866  0F81 000D                            B        s:11236,PREL

     1063    11228    4            ELSE DO;

     1064    11229
     1065    11230        /* MAKE SURE THE OTPBFR IS PROPERLY LIMITED                                   */
     1066    11231
     1067    11232    4               Y@BYTSIZ2 = Y@BYTSIZ2-Y@BYTSIZ;

  11232   2 000868  E247 0008                            SUB,R6   Y@BYTSIZ2,AUTO
          2 00086A  8256                                 NEG      R6
          2 00086B  EF47 0008                            STR,R6   Y@BYTSIZ2,AUTO

     1068    11233    4               IF %KV_VDI.OTPBFR_.BYTSIZ > Y@BYTSIZ2 THEN %KV_VDI.OTPBFR_.BYTSIZ =
             11233                        Y@BYTSIZ2;

  11233   2 00086D  DC86                                 LDB,B5   ,B6
          2 00086E  E945 000D                            CMR,R6   13,B5
          2 000870  0281 0003                            BGE      s:11236,PREL

  11233   2 000872  EF45 000D                            STR,R6   13,B5

     1069    11234    4            END /* IF */;

     1070    11235
     1071    11236    3            Y@BYTSIZ = Y_VDI_LCL.NXTCNT;

  11236   2 000874  E847 0021                            LDR,R6   Y_VDI_LCL+5,AUTO
          2 000876  EF47 0007                            STR,R6   Y@BYTSIZ,AUTO

     1072    11237    3         END;                              /* DO UNTIL                           */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:120  

  11237   2 000878  6981 FF18                            BNEZ,R6  s:11174,PREL
          2 00087A  0F81 00C9                            B        s:11333,PREL

     1073    11238
     1074    11239        /* KV$USR_RQSDAT - REQUEST DATA                                               */
     1075    11240
     1076    11241    2      CASE(%KV_USR_FNC_RQSDAT );

     1077    11242
     1078    11243        /* KV$USR_SETPRM - SET PARAM PROCESSING                                       */
     1079    11244
     1080    11245    2      CASE(%KV_USR_FNC_SETPRM );

     1081    11246
     1082    11247        /* DETERMINE WHICH PARAMETER WE WERE INVOKED TO SET                           */
     1083    11248
     1084    11249    3         DO SELECT(PRM_USR_SETPRM.PRMID);

  11249   2 00087C  E843 0001                            LDR,R6   1,B3
          2 00087E  E970 004A                            CMR,R6   74,IMO
          2 000880  0201 0014                            BL       s:11249+25,PREL
          2 000882  0901 009C                            BE       s:11308,PREL
          2 000884  E970 0074                            CMR,R6   116,IMO
          2 000886  0201 0009                            BL       s:11249+20,PREL
          2 000888  0901 004B                            BE       s:11282,PREL
          2 00088A  E970 00A5                            CMR,R6   165,IMO
          2 00088C  0981 00A3                            BNE      s:11318,PREL
          2 00088E  0F81 0011                            B        s:11256,PREL
          2 000890  6D60                                 CMV,R6   96
          2 000891  0981 009E                            BNE      s:11318,PREL
          2 000893  0F81 0048                            B        s:11284,PREL
          2 000895  E970 000F                            CMR,R6   15,IMO
          2 000897  0201 0098                            BL       s:11318,PREL
          2 000899  0901 0006                            BE       s:11256,PREL
          2 00089B  6D49                                 CMV,R6   73
          2 00089C  0981 0093                            BNE      s:11318,PREL
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:121  
          2 00089E  0F81 0080                            B        s:11308,PREL

     1085    11250    3            SELECT(%KV_PRMID_DVCFLWCTRALG, %KV_PRMID_CTRCHR);

     1086    11251
     1087    11252        /* Handle miscellaneous parameters that influence other parameters.           */
     1088    11253
     1089    11254        /* If it affects flow control, and download the current configuration.        */
     1090    11255
     1091    11256    3            CALL KAO$BFRCRTCNF;

  11256   2 0008A0  CBF0 0000                            LAB,B4   0,IMO
          2 0008A2  E380 0000 0000  xent                 LNJ,B6   KAO$BFRCRTCNF
          2 0008A5       0001                            DC       s:11259,PREL

     1092    11257
     1093    11258
     1094    11259    3            IF (KA_DVCFLWCTRCHR(%KV_MRD.DVCFLWCTRALG) ~= 0) AND

  11259   2 0008A6  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0008A9  DCC6 0008                            LDB,B5   8,B6
          2 0008AB  B845 0015                            LDR,R3   21,B5
          2 0008AD  B570 00FF                            AND,R3   255,IMO
          2 0008AF  3001                                 SOL,R3   1
          2 0008B0  E2B0 0000 0000  xsym                 LLH,R6   KA_DVCFLWCTRCHR,R3
          2 0008B3  6901 0012                            BEZ,R6   s:11273,PREL
          2 0008B5  CCC5 0008                            LDB,B4   8,B5
          2 0008B7  E844 0013                            LDR,R6   19,B4
          2 0008B9  6D0A                                 CMV,R6   10
          2 0008BA  0381 000B                            BLE      s:11273,PREL

     1095    11260    4              (%KV_ERD.DVCOTPBFRSIZ > 10) THEN DO;

     1096    11261
     1097    11262        /* There is a synchronous flow control algorithm in effect.                   */
     1098    11263        /* Ask for control when getting transparent writes so we can                  */
     1099    11264        /* do flow control at the beginning of the record (rather than                */
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:122  
     1100    11265        /* in the middle, which causes bad problems occasionally).                    */
     1101    11266
     1102    11267    4               %KV_VDI.USEOTPBFRTRN = '0'B;

  11267   2 0008BC  BC86                                 LDB,B3   ,B6
          2 0008BD  8843 001D                            LBF,'0080'X       29,B3
          2 0008BF       0080

     1103    11268    4               %KV_VDI.USEOTPBFRBNR = '0'B;

  11268   2 0008C0  DC86                                 LDB,B5   ,B6
          2 0008C1  8845 001D                            LBF,'0100'X       29,B5
          2 0008C3       0100

     1104    11269    4            END; ELSE DO;

  11269   2 0008C4  0F81 007F                            B        s:11333,PREL

     1105    11270
     1106    11271        /* No synchronous flow control. Let VDH do the buffering directly.            */
     1107    11272
     1108    11273    4               %KV_VDI.USEOTPBFRTRN = '1'B;

  11273   2 0008C6  CC86                                 LDB,B4   ,B6
          2 0008C7  8944 001D                            LBT,'0080'X       29,B4
          2 0008C9       0080

     1109    11274    4               %KV_VDI.USEOTPBFRBNR = '1'B;

  11274   2 0008CA  DC86                                 LDB,B5   ,B6
          2 0008CB  8945 001D                            LBT,'0100'X       29,B5
          2 0008CD       0100

     1110    11275    4               %KA_CTX.OTPCHRCNTUTLHLT = 0;

  11275   2 0008CE  DCC7 0016                            LDB,B5   BCTX$,AUTO
          2 0008D0  8745 000C                            CL       12,B5
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:123  

     1111    11276    4            END /* IF */;

  11276   2 0008D2  0F81 0071                            B        s:11333,PREL

     1112    11277    3            SELECT(%KV_PRMID_PARITY);

     1113    11278
     1114    11279        /* THIS IS A POST PROCESSING CALL. ALL WE HAVE TO DO IS                       */
     1115    11280        /* CALL A ROUTINE TO DOWNLOAD THE CURRENT CONFIGURATION INFO                  */
     1116    11281
     1117    11282    3            CALL KAO$BFRCRTCNF ;

  11282   2 0008D4  CBF0 0000                            LAB,B4   0,IMO
          2 0008D6  E380 0000 0000  xent                 LNJ,B6   KAO$BFRCRTCNF
          2 0008D9       0001                            DC       s:11282+6,PREL
          2 0008DA  0F81 0069                            B        s:11333,PREL

     1118    11283    3            SELECT(%KV_PRMID_CRTLINSPD);

     1119    11284    4            IF PRM_USR_SETPRM.PREPRC THEN DO;

  11284   2 0008DC  8283                                 LB,'0080'X        ,B3
  11284   2 0008DD       0080
          2 0008DE  0581 000E                            BBF      s:11296,PREL

     1120    11285
     1121    11286        /*  This is a pre-processing call to set the line speed.                      */
     1122    11287        /* Just do the line speed distribution accounting now, and                    */
     1123    11288        /* actually set the line speed on the post-processing call.                   */
     1124    11289
     1125    11290    4               KA_STT.LINSPDDST(%KV_VDI.LINSPD) = KA_STT.LINSPDDST(%KV_VDI.LINSPD) -1;

  11290   2 0008E0  92C5 001E                            LLH,R1   30,B5
          2 0008E2  8C90 0000 0024  xsym                 LDI      KA_STT+36,R1
          2 0008E5  8470 FFFF FFFF                       AID      -1,IMO
          2 0008E8  8D10 0000 0024  xsym                 SDI      KA_STT+36,R1
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:124  

     1126    11291    4            END; ELSE DO;

  11291   2 0008EB  0F81 0058                            B        s:11333,PREL

     1127    11292
     1128    11293        /* THIS IS A POST PROCESSING CALL TO ALLOW US TO LOAD THE LINE                */
     1129    11294        /* SPEED INTO KA$CTX AND DOWNLOAD IT INTO THE MLCP                            */
     1130    11295
     1131    11296    4               CALL KAO$BFRCRTCNF ;

  11296   2 0008ED  CBF0 0000                            LAB,B4   0,IMO
          2 0008EF  E380 0000 0000  xent                 LNJ,B6   KAO$BFRCRTCNF
          2 0008F2       0001                            DC       s:11297,PREL

     1132    11297    4               KA_STT.LINSPDDST(%KV_VDI.LINSPD) = KA_STT.LINSPDDST(%KV_VDI.LINSPD) +1;

  11297   2 0008F3  EC80 0000 0000  xsym                 LDB,B6   KV$PTR$
          2 0008F6  DC86                                 LDB,B5   ,B6
          2 0008F7  B2C5 001E                            LLH,R3   30,B5
          2 0008F9  BF47 0032                            STR,R3   KV@VDH_SETCLK+3,AUTO
          2 0008FB  3001                                 SOL,R3   1
          2 0008FC  A847 0032                            LDR,R2   KV@VDH_SETCLK+3,AUTO
          2 0008FE  2001                                 SOL,R2   1
          2 0008FF  8AB0 0000 0025  xsym                 INC      KA_STT+37,R3
          2 000902  8EA0 0000 0024  xsym                 CAD      KA_STT+36,R2

     1133    11298    4               %KV_MRD.MINSP_FORPST = KA_MINSP_FORPST(%KV_VDI.LINSPD);

  11298   2 000905  DCC6 0008                            LDB,B5   8,B6
          2 000907  CC86                                 LDB,B4   ,B6
          2 000908  B2C4 001E                            LLH,R3   30,B4
          2 00090A  E830 0000 0000  xsym                 LDR,R6   KA_MINSP_FORPST,R3
          2 00090D  E7C5 000C                            STH,R6   12,B5

     1134    11299    4               %KV_VDI.RCVFLWCTRMAXCRD = KA_OTPBLKLMT(%KV_VDI.LINSPD);

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:125  
  11299   2 00090F  DC86                                 LDB,B5   ,B6
          2 000910  B2C5 001E                            LLH,R3   30,B5
          2 000912  E830 0000 0000  xsym                 LDR,R6   KA_OTPBLKLMT,R3
          2 000915  EF45 0017                            STR,R6   23,B5

     1135    11300    4               %KV_VDI.RCVFLWCTRMINCRDINC = %KV_VDI.RCVFLWCTRMAXCRD/4;

  11300   2 000917  DC86                                 LDB,B5   ,B6
          2 000918  E845 0017                            LDR,R6   23,B5
          2 00091A  6042                                 SOR,R6   2
          2 00091B  EF45 001B                            STR,R6   27,B5

     1136    11301    4            END /* IF */;

  11301   2 00091D  0F81 0026                            B        s:11333,PREL

     1137    11302    3            SELECT(%KV_PRMID_HALFDUPLEXPAPERTAPE,%KV_PRMID_FULLDUPLEXPAPERTAPE);

     1138    11303
     1139    11304        /* If either half or full duplex paper tape is set, we need to                */
     1140    11305        /* be called when VDH no longer wants data so we can turn off the             */
     1141    11306        /* paper tape reader.                                                         */
     1142    11307
     1143    11308    3            %KV_VDI.USREVTENB(%KV_USR_EVT_ID_TRMUSRRQSDAT) =

  11308   2 00091F  D845 0019                            LDR,R5   25,B5
          2 000921  500E                                 SOL,R5   14
          2 000922  D570 8000                            AND,R5   -32768,IMO
          2 000924  C845 0019                            LDR,R4   25,B5
          2 000926  400A                                 SOL,R4   10
          2 000927  C570 8000                            AND,R4   -32768,IMO
          2 000929  D454                                 OR,R5    R4
          2 00092A  5045                                 SOR,R5   5
          2 00092B  DAC5 001F                            SRM,R5,'0400'X    31,B5
          2 00092D       0400
          2 00092E  0F81 0015                            B        s:11333,PREL

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:126  
     1144    11309    3              %KV_VDI.HALFDUPLEXPAPERTAPE|%KV_VDI.FULLDUPLEXPAPERTAPE;
     1145    11310    3            SELECT(ELSE);

     1146    11311
     1147    11312        /* WE GOT A PRMID WE DIDNT UNDERSTAND                                         */
     1148    11313
     1149    11314        /*S* SCREECH_CODE: KAV-S$KA_ILGSETPRM
     1150    11315             MESSAGE: ASYNC got a KV$USR_SETPRM it couldn't decode                  */
     1151    11316              %KH$SCREECH(COD = Y_SCRILGSETPRM);
             11316                  /* ASYNC GOT A KV$USR_SETPRM IT COULDN'T DECODE */

  11318   2 000930  BB80 0000 001A  03                   LAB,B3   +26
          2 000933  CBF0 0100                            LAB,B4   256,IMO
          2 000935  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000938       0001                            DC       s:11320,PREL

     1152    11320    3         END;                              /* DO SELECT                          */

  11320   2 000939  0F81 000A                            B        s:11333,PREL

     1153    11321
     1154    11322    2      CASE(ELSE);

     1155    11323
     1156    11324        /* WE GOT A FUNCTION CODE WE DIDNT UNDERSTAND                                 */
     1157    11325
     1158    11326        /*S* SCREECH_CODE: KAV-S$KA_ILGUSRFNC
     1159    11327             MESSAGE: ASYNC got K V$USR_..._FNC that it didn't understand              */
     1160    11328              %KH$SCREECH(COD = Y_SCRILGUSRFNC);
             11328                  /* ASYNC GOT KV$USR_..._FNC THAT IT DIDNT UNDERSTAND */

  11330   2 00093B  BB80 0000 001C  03                   LAB,B3   +28
          2 00093E  CBF0 0100                            LAB,B4   256,IMO
          2 000940  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000943       0001                            DC       s:11333,PREL

     1161    11332    2      END /* CASE */;
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:127  

     1162    11333    1   END KAV$VDI;

  11333   2 000944  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:128  
--  Include file information  --

   KA_PERR_C.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   KA_LCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KW_ALCT_E.:E05TOU  is referenced.
   KA$GLB.:E05TOU  is referenced.
   KA_GLB.:E05TOU  is referenced.
   KA_GLB_E.:E05TOU  is referenced.
   KA_GLBASM_E.:E05TOU  is referenced.
   KV_GLB_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KV$BPC.:E05TOU  is referenced.
   KV_INT_M.:E05TOU  is referenced.
   KH$STT.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_SCREECH_M.:E05TOU  is referenced.
   KV_GLBASM_E.:E05TOU  is referenced.
   KA_SCODE_C.:E05TOU  is referenced.
   KV_ASCCHR_E.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  was found in the system file and is referenced.
   KV_GLBCNS_E.:E05TOU  was found in the system file and is referenced.
   KV$VDO.:E05TOU  was found in the system file and is never referenced.
   KV$VDH.:E05TOU  was found in the system file and is referenced.
   KV$USR.:E05TOU  was found in the system file and is referenced.
   KV$SND.:E05TOU  was found in the system file and is never referenced.
   KV$INT.:E05TOU  was found in the system file and is referenced.
   KV$GLBCTX.:E05TOU  was found in the system file and is referenced.
   KV$GLB.:E05TOU  was found in the system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:129  
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure KAV$VDI.
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:130  

 **** Variables and constants ****

  ****  Section 000 RoData KAV$VDI

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    1C-0-0/w STRC(336)   r     1 FPT_WRSYSLOG_LINERRDSC
    31-0-0/w STRC(336)   r     1 FPT_WRSYSLOG_LINERRLOG
    12-0-0/w STRC(40)    r     1 KA_BFRCTRSTR_INHPRG       15-0-0/w STRC(40)    r     1 KA_BFRCTRSTR_RPTCHR
    1A-0-0/w STRC(32)    r     1 KH_IO_INPLCTBYT           18-0-0/w STRC(32)    r     1 KH_IO_OTPLCTBYT
    56-0-0/w STRC(728)   r     1 KV_ERD
    46-0-0/w UBIN(16)    r     1 Y_POWER_OF_2(0:15)
     0-0-0/w STRC(48)    r     1 Y_SCRILGEVTID              3-0-0/w STRC(48)    r     1 Y_SCRILGINPPRCID
     6-0-0/w STRC(48)    r     1 Y_SCRILGSCHRSN             9-0-0/w STRC(48)    r     1 Y_SCRILGSETPRM
     C-0-0/w STRC(48)    r     1 Y_SCRILGUSRFNC             F-0-0/w STRC(48)    r     1 Y_SCRNO_MMROTPBFR

  ****  Section 001  Data  KAV$VDI

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w UBIN(16)    r     1 KA_OTPBFRLMTEXC            0-0-0/w STRC(32)    r     1 KV_USR_GETOTPBFR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PRM_USR_X                16-0-0/w PTR         r     1 BCTX$
    10-0-0/w STRC(40)    r     1 KA@BFRCTRSTR_INHPRG       13-0-0/w STRC(40)    r     1 KA@BFRCTRSTR_RPTCHR
     C-0-0/w STRC(64)    r     1 KA@OTPMRK                 1A-0-0/w STRC(32)    r     1 KH@IO_INPLCTBYT
    18-0-0/w STRC(32)    r     1 KH@IO_OTPLCTBYT           23-0-0/w STRC(32)    r     1 KV@VDH_DSC
    25-0-0/w STRC(80)    r     1 KV@VDH_OTPLCL             2A-0-0/w STRC(80)    r     1 KV@VDH_OTPMRK
    2F-0-0/w STRC(32)    r     1 KV@VDH_SETCLK              6-0-0/w UBIN(16)    r     1 LVL
    *0-0-0/w UBIN(16)    r     1 PRM_COPY                  *0-0-0/w STRC(128)   r     1 PRM_USR_DAT
    *0-0-0/w STRC(32)    r     1 PRM_USR_EVT               *0-0-0/w STRC(32)    r     1 PRM_USR_EXTINPTRN
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:131  
    *0-0-0/w STRC(32)    r     1 PRM_USR_GETOTPBFR         *0-0-0/w STRC(48)    r     1 PRM_USR_INPPRC
    *0-0-0/w STRC(64)    r     1 PRM_USR_OTPMRK            *0-0-0/w STRC(32)    r     1 PRM_USR_OTPRPTCHR
    *0-0-0/w STRC(128)   r     1 PRM_USR_SETPRM            *0-0-0/w ACHR        r     1 PRM_USR_X
     7-0-0/w UBIN(16)    r     1 Y@BYTSIZ                   8-0-0/w UBIN(16)    r     1 Y@BYTSIZ2
     B-0-0/w SBIN(16)    r     1 Y@INDEX                    9-0-0/w PTR         r     1 Y@PTR$
    1C-0-0/w STRC(112)   r     1 Y_VDI_LCL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(8)     r     1 KA_DVCFLWCTRCHR(0:3)
     0-0-0/w UBIN(16)    r     1 KA_INT_LEV                 0-0-0/w UBIN(16)    r     1 KA_LINERRDSCLMT
     0-0-0/w UBIN(16)    r     1 KA_LINERRLOGLMT
     0-0-0/w UBIN(16)    r     1 KA_MINSP_FORPST(0:15)
     0-0-0/w UBIN(16)    r     1 KA_OTPBFRBYTSIZ_BIG
     0-0-0/w UBIN(16)    r     1 KA_OTPBFRBYTSIZ_BIGLOG2
     0-0-0/w UBIN(16)    r     1 KA_OTPBFRBYTSIZ_SML
     0-0-0/w UBIN(16)    r     1 KA_OTPBFRBYTSIZ_SMLLOG2
     0-0-0/w UBIN(16)    r     1 KA_OTPBLKLMT(0:15)
     0-0-0/w UBIN(16)    r     1 KA_OTPUN_BLKLMT(0:15)
     0-0-0/w STRC(2528)  r     1 KA_STT
     0-0-0/b PTR         r     1 KA_TRNTBLCHNCHR$(0:3)
     0-0-0/b PTR         r     1 KA_TRNTBL_FUL$(0:3)
     0-0-0/b PTR         r     1 KA_TRNTBL_PRT$(0:3)
     0-0-0/w PTR         r     1 KV$PTR$                    0-0-0/w STRC(8960)  r     1 KV_STT
     0-0-0/w STRC(32)    r     1 KV_VDH_DSC                 0-0-0/w STRC(32)    r     1 KV_VDH_EVT_CMPOTP
     0-0-0/w STRC(32)    r     1 KV_VDH_EVT_RQSOTP          0-0-0/w STRC(80)    r     1 KV_VDH_OTPLCL
     0-0-0/w STRC(80)    r     1 KV_VDH_OTPMRK              0-0-0/w STRC(32)    r     1 KV_VDH_SETCLK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KA$CTX                     0-0-0/w STRC(64)    r     1 KA$OTPBFR
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:132  
     0-0-0/w STRC(64)    r     1 KA$OTPMRK
     0-0-0/c UBIN(8)     r     1 KA$TRNTBLCHNCHR(0:3)
     0-0-0/w STRC(512)   r     1 KH$CHN                     0-0-0/w STRC(728)   r     1 KV$ERD
     0-0-0/w STRC(512)   r     1 KV$MRD                     0-0-0/w STRC(512)   r     1 KV$MVD
     0-0-0/w STRC(480)   r     1 KV$PTR                     0-0-0/w STRC(1024)  r     1 KV$SSN
     0-0-0/w STRC(512)   r     1 KV$STR                     0-0-0/w STRC(499)   r     1 KV$TRNTBL
     0-0-0/w STRC(512)   r     1 KV$VDI


   Procedure KAV$VDI requires 2375 words for executable code.
   Procedure KAV$VDI requires 56 words of local(AUTO) storage.

    No errors detected in file KAV$VDI.:E05TSI    .
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:133  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:134  
          MINI XREF LISTING

BCTX$
      7767**DCL      7662--IMP-PTR 10338<<ASSIGN  10339>>IF      10362>>ASSIGN  10362>>ASSIGN  10364>>IF
     10370>>IF      10375>>ASSIGN  10395>>ASSIGN  10396>>IF      10446>>IF      10462>>ASSIGN  10476>>IF
     10476>>IF      10476>>IF      10530>>CALL    10537>>IF      10603>>IF      10607>>IF      10615>>IF
     10621>>IF      10630>>IF      10637>>ASSIGN  10639>>ASSIGN  10676>>IF      10699>>ASSIGN  10699>>ASSIGN
     10700>>IF      10709>>ASSIGN  10727>>IF      10733>>ASSIGN  10768>>IF      10778>>IF      10867>>ASSIGN
     10867>>ASSIGN  10868>>IF      10895>>IF      10899>>ASSIGN  10900>>ASSIGN  10905>>ASSIGN  10906>>ASSIGN
     10907>>ASSIGN  10908>>IF      10912>>ASSIGN  10918>>ASSIGN  10941>>IF      10951>>ASSIGN  10952>>ASSIGN
     10955>>ASSIGN  10955>>ASSIGN  10956>>IF      10992>>ASSIGN  10993>>IF      10993>>ASSIGN  10999>>IF
     10999>>IF      11004>>ASSIGN  11073>>IF      11120>>ASSIGN  11179>>ASSIGN  11275>>ASSIGN
FPT_WRSYSLOG_LINERRDSC
      9460**DCL     10976<>CALL
FPT_WRSYSLOG_LINERRDSC.V
      9464**DCL      9462--DCLINIT
FPT_WRSYSLOG_LINERRDSC.V.TERMID.TERM
      9529**DCL      9538--REDEF
FPT_WRSYSLOG_LINERRLOG
      9555**DCL     10405<>CALL
FPT_WRSYSLOG_LINERRLOG.V
      9559**DCL      9557--DCLINIT
FPT_WRSYSLOG_LINERRLOG.V.TERMID.TERM
      9624**DCL      9633--REDEF
KA$CTX
      7662**DCL     10530<>CALL
KA$CTX.ASNHLTOTP
      7764**DCL     10476>>IF
KA$CTX.ERRCLKSET
      7760**DCL     10395<<ASSIGN  10941>>IF      10951<<ASSIGN
KA$CTX.HLTOTP
      7757**DCL      7759--REDEF   10603>>IF      10607>>IF      10621>>IF
KA$CTX.HLTOTP.BITT
      7759**DCL     10999>>IF
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:135  
KA$CTX.HLTOTPNXTBFR
      7761**DCL      7762--REDEF   10906<<ASSIGN
KA$CTX.HLTOTPNXTBFR_ALL
      7762**DCL     10476>>IF      10905>>ASSIGN
KA$CTX.HLTOTP_ALL
      7759**DCL     10476>>IF
KA$CTX.LCTSTT.PLD
      7761**DCL     10630>>IF
KA$CTX.LINERRCNT
      7765**DCL     10396>>IF      10952<<ASSIGN  10955<<ASSIGN  10955>>ASSIGN  10956>>IF
KA$CTX.OTPBFRBYTCNT
      7672**DCL     10537>>IF      10615>>IF      10676>>IF      10867<<ASSIGN  10867>>ASSIGN  10868>>IF
     11073>>IF
KA$CTX.OTPBFRHED$
      7669**DCL     10768>>IF      10899<<ASSIGN
KA$CTX.OTPBFRNXTLOD$
      7669**DCL     10900<<ASSIGN  10908>>IF      10912<<ASSIGN
KA$CTX.OTPBFRTAL$
      7670**DCL     10895>>IF      10907>>ASSIGN  10918<<ASSIGN  10999>>IF
KA$CTX.OTPCHRCNTUTLHLT
      7672**DCL     10362<<ASSIGN  10362>>ASSIGN  10364>>IF      10370>>IF      10375<<ASSIGN  10446>>IF
     10699<<ASSIGN  10699>>ASSIGN  10700>>IF      10709>>ASSIGN  10727>>IF      10733>>ASSIGN  10992<<ASSIGN
     10993>>IF      10993<<ASSIGN  11179>>ASSIGN  11275<<ASSIGN
KA$CTX.PRVOTPBFRDATEXCSML
      7759**DCL     10462<<ASSIGN  10778>>IF      11120<<ASSIGN
KA$CTX.REDHLT
      7763**DCL     11004<<ASSIGN
KA$CTX.VDH_DAT.DAT__.BFRBYTSIZ
      7746**DCL     10639>>ASSIGN
KA$CTX.VDH_DAT.DAT__.BYTX
      7745**DCL     10637>>ASSIGN
KA$OTPBFR
      7161**DCL     10767--ASSIGN  10798--ASSIGN  10838--ASSIGN  10858--ASSIGN  10863<<ASSIGN  11117--ASSIGN
KA$OTPBFR.BYTSIZLOG2
      7166**DCL     10455>>IF      10717>>ASSIGN  10864<<ASSIGN  11110>>ASSIGN  11136>>ASSIGN
KA$OTPBFR.HLTOTP
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:136  
      7165**DCL      7166--REDEF
KA$OTPBFR.HLTOTP_ALL
      7166**DCL     10905<<ASSIGN
KA$OTPBFR.LNK$
      7165**DCL     10907<<ASSIGN
KA$OTPBFR.NMBMRK
      7167**DCL     10717>>ASSIGN  11110>>ASSIGN  11142<<ASSIGN  11142>>ASSIGN
KA$OTPMRK
      5952**DCL     10717--ASSIGN  11110--ASSIGN  11136--ASSIGN  11141<<ASSIGN
KA$OTPMRK.DAT.ID
      5977**DCL      5977--REDEF    5978--REDEF
KA$TRNTBLCHNCHR
      7788**DCL     11016>>IF
KA@BFRCTRSTR_INHPRG
      7237**DCL     10467<<ASSIGN  10470<>CALL
KA@BFRCTRSTR_INHPRG.INHPRG
      7244**DCL      7245--REDEF
KA@BFRCTRSTR_INHPRG.INHPRG.X3F
      7244**DCL     10468<<ASSIGN
KA@BFRCTRSTR_INHPRG.TXTSIZ
      7237**DCL     10469<<ASSIGN
KA@BFRCTRSTR_RPTCHR
      7264**DCL     11193<<ASSIGN  11196<>CALL    11201<<ASSIGN  11205<>CALL    11212<<ASSIGN  11217<>CALL
KA@BFRCTRSTR_RPTCHR.TXT
      7275**DCL     11195<<ASSIGN  11203<<ASSIGN  11204<<ASSIGN  11214<<ASSIGN  11215<<ASSIGN  11216<<ASSIGN
KA@BFRCTRSTR_RPTCHR.TXTSIZ
      7264**DCL     11194<<ASSIGN  11202<<ASSIGN  11213<<ASSIGN
KA@OTPMRK
      5988**DCL     11141>>ASSIGN
KA@OTPMRK.BYTCNT
      6016**DCL     11117<<ASSIGN  11138<<ASSIGN
KA@OTPMRK.DAT
      6010**DCL     11107<<ASSIGN
KA@OTPMRK.DAT.ID
      6013**DCL      6013--REDEF    6014--REDEF
KAI$EXTINPTRN
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:137  
     10323**DCL-ENT 10665--CALL
KAI$INPINT
     10322**DCL-ENT 10570--CALL
KAO$ASNRQS
     10314**DCL-ENT 10552--CALL    10604--CALL
KAO$ASNRQSHLTOTP
     10313**DCL-ENT 10998--CALL
KAO$ASNRQSRSMOTP
     10315**DCL-ENT 10416--CALL    10417--CALL
KAO$BFRCRTCNF
     10320**DCL-ENT 11256--CALL    11282--CALL    11296--CALL
KAO$BFRCTRSTR
     10319**DCL-ENT 10470--CALL    11196--CALL    11205--CALL    11217--CALL
KAO$DLTOTP
     10316**DCL-ENT 10413--CALL
KAO$IOLD_OTP
     10318**DCL-ENT 10619--CALL    10627--CALL
KAO$OTPINT
     10321**DCL-ENT 10576--CALL
KAO$SNCFLWCTRHLT
     10311**DCL-ENT 10369--CALL    10451--CALL    10704--CALL    11227--CALL
KAO$SNCHLTOTP
     10312**DCL-ENT 10437--CALL
KAO$TRNOTPIOLD
     10317**DCL-ENT 10461--CALL    10753--CALL    11119--CALL
KAS$DSC
     10324**DCL-ENT 10530--CALL
KAV$VDI
         9**PROC    11130--CALL
KA_BFRCTRSTR_INHPRG
      7183**DCL     10467>>ASSIGN
KA_BFRCTRSTR_INHPRG.INHPRG
      7190**DCL      7191--REDEF
KA_BFRCTRSTR_RPTCHR
      7210**DCL     11193>>ASSIGN  11201>>ASSIGN  11212>>ASSIGN
KA_DVCFLWCTRCHR
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:138  
      6328**DCL     10442>>IF      10695>>IF      11175>>IF      11259>>IF
KA_INT_LEV
      5580**DCL     10568>>ASSIGN  10809>>ASSIGN  10855>>IF
KA_LINERRDSCLMT
      6329**DCL     10941>>IF      10956>>IF
KA_LINERRLOGLMT
      6329**DCL     10396>>IF      10941>>IF
KA_MINSP_FORPST
      6326**DCL     10427>>ASSIGN  11298>>ASSIGN
KA_OTPBFRBYTSIZ_BIG
      6323**DCL     10794>>ASSIGN
KA_OTPBFRBYTSIZ_BIGLOG2
      6323**DCL     10795>>ASSIGN
KA_OTPBFRBYTSIZ_SML
      6323**DCL     10775>>ASSIGN  10778>>IF      10787>>ASSIGN  10818>>IF      10836>>ASSIGN
KA_OTPBFRBYTSIZ_SMLLOG2
      6324**DCL     10776>>ASSIGN  10788>>ASSIGN  10837>>ASSIGN
KA_OTPBFRLMTEXC
      9679**DCL     10684<<ASSIGN  10684>>ASSIGN
KA_OTPBLKLMT
      6325**DCL     10676>>IF      10868>>IF      11299>>ASSIGN
KA_OTPUN_BLKLMT
      6324**DCL     10676>>IF
KA_STT.KHSTT.OTPBFRBYTUTL
      7612**DCL     10857<<ASSIGN  10857>>ASSIGN
KA_STT.LINSPDDST
      7615**DCL     11290<<ASSIGN  11290>>ASSIGN  11297<<ASSIGN  11297>>ASSIGN
KA_STT.OTPBFRGETCNT_BIG
      7616**DCL     10796<<ASSIGN  10796>>ASSIGN  10834<<ASSIGN  10834>>ASSIGN
KA_STT.OTPBFRGETCNT_SML
      7616**DCL     10777<<ASSIGN  10777>>ASSIGN  10789<<ASSIGN  10789>>ASSIGN  10835<<ASSIGN  10835>>ASSIGN
KA_STT.REQSTATS.DSPMSK
      7540**DCL      7546--REDEF
KA_STT.REQSTATS.SLCMSK
      7581**DCL      7588--REDEF
KA_TRNTBLCHNCHR$
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:139  
      7784**DCL     11016>>IF
KA_TRNTBL_FUL$
      7786**DCL     11032>>ASSIGN
KA_TRNTBL_PRT$
      7787**DCL     11026>>ASSIGN
KH$CHN
      8486**DCL     10405<>CALL    10486<>CALL    10499<>CALL    10505<>CALL    10511<>CALL    10516<>CALL
     10646<>CALL    10976<>CALL
KH$CHN.AUTBAD
      8540**DCL     10961>>IF
KH$CHN.CLK
      8497**DCL     10551<<ASSIGN
KH$CHN.DRCCNC
      8524**DCL     10961>>IF
KH$CHN.DRPDTR
      8539**DCL     10545>>IF
KH$CHN.OTPCCBCNT
      8530**DCL     10476>>IF      10607>>IF      10621>>IF
KH$CHN.TERMID
      8580**DCL     10968<>CALL
KH$CHN.TERMID.TERM
      8582**DCL      8591--REDEF
KH@IO_INPLCTBYT
      9324**DCL     10484<<ASSIGN  10486<>CALL
KH@IO_INPLCTBYT.ASNSTT
      9333**DCL      9334--REDEF    9340--REDEF    9345--REDEF    9349--REDEF    9353--REDEF    9357--REDEF
      9364--REDEF    9370--REDEF    9376--REDEF    9381--REDEF    9388--REDEF    9391--REDEF    9395--REDEF
      9402--REDEF    9406--REDEF    9410--REDEF    9414--REDEF    9419--REDEF    9423--REDEF
KH@IO_INPLCTBYT.LCTBYT.ADR
      9340**DCL     10485<<ASSIGN
KH@IO_INPLCTBYT.LCTBYT.DAT
      9340**DCL     10491>>IF
KH@IO_OTPLCTBYT
      9210**DCL     10496<<ASSIGN  10499<>CALL    10505<>CALL    10511<>CALL    10516<>CALL    10643<<ASSIGN
     10646<>CALL
KH@IO_OTPLCTBYT.ASNSTT
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:140  
      9219**DCL      9220--REDEF    9226--REDEF    9231--REDEF    9235--REDEF    9239--REDEF    9243--REDEF
      9250--REDEF    9256--REDEF    9262--REDEF    9267--REDEF    9274--REDEF    9277--REDEF    9281--REDEF
      9288--REDEF    9292--REDEF    9296--REDEF    9300--REDEF    9305--REDEF    9309--REDEF
KH@IO_OTPLCTBYT.LCTBYT.ADR
      9226**DCL     10497<<ASSIGN  10503<<ASSIGN  10509<<ASSIGN  10514<<ASSIGN  10644<<ASSIGN
KH@IO_OTPLCTBYT.LCTBYT.DAT
      9226**DCL     10498<<ASSIGN  10504<<ASSIGN  10510<<ASSIGN  10515<<ASSIGN  10645<<ASSIGN
KHA$DVCADM
     10325**DCL-ENT 10968--CALL
KHD$ERRLOG_SETTERMID_CHN
     10327**DCL-ENT 10405--CALL    10976--CALL
KHD$SCREECH
     10326**DCL-ENT 10590--CALL    10657--CALL    10826--CALL    10846--CALL    11051--CALL    11318--CALL
     11330--CALL
KHI$DISABLE
     10332**DCL-ENT 10569--CALL    10814--CALL
KHI$ENABLE
     10333**DCL-ENT 10571--CALL    10855--CALL
KHI$IO_INPLCTBYT
     10330**DCL-ENT 10486--CALL
KHI$IO_OTPLCTBYT
     10331**DCL-ENT 10499--CALL    10505--CALL    10511--CALL    10516--CALL    10646--CALL
KH_CHNHI
      8648**DCL      8649--REDEF
KH_CHNLOW
      8649**DCL      8650--REDEF
KH_IO_INPLCTBYT
      9096**DCL     10484>>ASSIGN
KH_IO_OTPLCTBYT
      8982**DCL     10496>>ASSIGN  10643>>ASSIGN
KV$ERD.DVCOTPBFRSIZ
      4788**DCL     10992>>ASSIGN  11259>>IF
KV$ERD.EXTSRD_CHR
      4809**DCL      4809--REDEF    4810--REDEF
KV$MRD.CALUSR_ERS
      4839**DCL     10428<<ASSIGN
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:141  
KV$MRD.CALUSR_PST
      4839**DCL     10429<<ASSIGN
KV$MRD.CALUSR_SETATR
      4840**DCL     10430<<ASSIGN
KV$MRD.DVCFLWCTRALG
      4841**DCL     10442>>IF      10695>>IF      11175>>IF      11259>>IF
KV$MRD.ERD$
      4837**DCL     10431<<ASSIGN  10992>>ASSIGN  11259>>IF
KV$MRD.MINSP_FORPST
      4839**DCL     10427<<ASSIGN  11298<<ASSIGN
KV$MVD.APLLCNRM
      4892**DCL     11021>>IF
KV$MVD.TRNTBL$
      4886**DCL     11016>>IF      11026<<ASSIGN  11032<<ASSIGN
KV$PTR.INPCNDPND
      4933**DCL      4942--REDEF    4946--REDEF
KV$PTR.INPCNDPND.TRN
      4937**DCL     10630>>IF
KV$PTR.LINLST$
      4929**DCL      4930--REDEF
KV$PTR.MRD$
      4928**DCL     10427>>ASSIGN  10428>>ASSIGN  10429>>ASSIGN  10430>>ASSIGN  10431>>ASSIGN  10442>>IF
     10695>>IF      10992>>ASSIGN  11175>>IF      11259>>IF      11259>>IF      11298>>ASSIGN
KV$PTR.MVD$
      4928**DCL     11016>>IF      11021>>IF      11026>>ASSIGN  11032>>ASSIGN
KV$PTR.SSN$
      4927**DCL     10637>>ASSIGN  11219>>ASSIGN  11219>>ASSIGN
KV$PTR.STR$
      4927**DCL     10630>>IF      10637>>ASSIGN
KV$PTR.VDI$
      4927**DCL     10338>>ASSIGN  10361>>ASSIGN  10361>>ASSIGN  10361>>ASSIGN  10362>>ASSIGN  10363>>ASSIGN
     10405>>CALL    10427>>ASSIGN  10446>>IF      10454>>IF      10455>>IF      10455>>IF      10476>>IF
     10476>>IF      10486>>CALL    10499>>CALL    10505>>CALL    10511>>CALL    10516>>CALL    10545>>IF
     10545>>IF      10545>>IF      10551>>ASSIGN  10581>>ASSIGN  10598>>IF      10598>>IF      10603>>IF
     10607>>IF      10621>>IF      10625>>IF      10646>>CALL    10675>>ASSIGN  10675>>ASSIGN  10675>>ASSIGN
     10676>>IF      10676>>IF      10699>>ASSIGN  10713>>IF      10717>>ASSIGN  10717>>ASSIGN  10717>>ASSIGN
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:142  
     10733>>ASSIGN  10738>>ASSIGN  10816>>CALL    10842>>CALL    10858>>ASSIGN  10859>>ASSIGN  10863>>ASSIGN
     10864>>ASSIGN  10868>>IF      10879>>IF      10880>>ASSIGN  10881>>IF      10899>>ASSIGN  10900>>ASSIGN
     10905>>ASSIGN  10907>>ASSIGN  10912>>ASSIGN  10918>>ASSIGN  10923>>ASSIGN  10961>>IF      10961>>IF
     10968>>CALL    10976>>CALL    10978>>ASSIGN  10999>>IF      11065>>IF      11108>>ASSIGN  11112>>IF
     11117>>ASSIGN  11123>>IF      11135>>ASSIGN  11143>>IF      11143>>IF      11144>>ASSIGN  11144>>ASSIGN
     11152>>IF      11179>>ASSIGN  11221>>ASSIGN  11221>>ASSIGN  11233>>IF      11233>>ASSIGN  11267>>ASSIGN
     11268>>ASSIGN  11273>>ASSIGN  11274>>ASSIGN  11290>>ASSIGN  11290>>ASSIGN  11297>>ASSIGN  11297>>ASSIGN
     11298>>ASSIGN  11299>>ASSIGN  11299>>ASSIGN  11300>>ASSIGN  11300>>ASSIGN  11308>>ASSIGN  11308>>ASSIGN
     11308>>ASSIGN
KV$PTR$
      4921**DCL      4927--IMP-PTR 10338>>ASSIGN  10361>>ASSIGN  10361>>ASSIGN  10361>>ASSIGN  10362>>ASSIGN
     10363>>ASSIGN  10405>>CALL    10427>>ASSIGN  10427>>ASSIGN  10428>>ASSIGN  10429>>ASSIGN  10430>>ASSIGN
     10431>>ASSIGN  10442>>IF      10446>>IF      10454>>IF      10455>>IF      10455>>IF      10476>>IF
     10476>>IF      10486>>CALL    10499>>CALL    10505>>CALL    10511>>CALL    10516>>CALL    10545>>IF
     10545>>IF      10545>>IF      10551>>ASSIGN  10581>>ASSIGN  10598>>IF      10598>>IF      10603>>IF
     10607>>IF      10621>>IF      10625>>IF      10630>>IF      10630>>IF      10637>>ASSIGN  10637>>ASSIGN
     10646>>CALL    10675>>ASSIGN  10675>>ASSIGN  10675>>ASSIGN  10676>>IF      10676>>IF      10695>>IF
     10699>>ASSIGN  10713>>IF      10717>>ASSIGN  10717>>ASSIGN  10717>>ASSIGN  10733>>ASSIGN  10738>>ASSIGN
     10816>>CALL    10842>>CALL    10858>>ASSIGN  10859>>ASSIGN  10863>>ASSIGN  10864>>ASSIGN  10868>>IF
     10879>>IF      10880>>ASSIGN  10881>>IF      10899>>ASSIGN  10900>>ASSIGN  10905>>ASSIGN  10907>>ASSIGN
     10912>>ASSIGN  10918>>ASSIGN  10923>>ASSIGN  10961>>IF      10961>>IF      10968>>CALL    10976>>CALL
     10978>>ASSIGN  10992>>ASSIGN  10999>>IF      11016>>IF      11021>>IF      11026>>ASSIGN  11032>>ASSIGN
     11065>>IF      11108>>ASSIGN  11112>>IF      11117>>ASSIGN  11123>>IF      11135>>ASSIGN  11143>>IF
     11143>>IF      11144>>ASSIGN  11144>>ASSIGN  11152>>IF      11175>>IF      11179>>ASSIGN  11219>>ASSIGN
     11219>>ASSIGN  11221>>ASSIGN  11221>>ASSIGN  11233>>IF      11233>>ASSIGN  11259>>IF      11259>>IF
     11267>>ASSIGN  11268>>ASSIGN  11273>>ASSIGN  11274>>ASSIGN  11290>>ASSIGN  11290>>ASSIGN  11297>>ASSIGN
     11297>>ASSIGN  11298>>ASSIGN  11298>>ASSIGN  11299>>ASSIGN  11299>>ASSIGN  11300>>ASSIGN  11300>>ASSIGN
     11308>>ASSIGN  11308>>ASSIGN  11308>>ASSIGN
KV$SSN.OTPCHRCNT
      4978**DCL     11219<<ASSIGN  11219>>ASSIGN
KV$SSN.REDBFR__.DATBYTSIZ
      5018**DCL     10637>>ASSIGN
KV$SSN.REDRSPCNT
      4978**DCL      4979--REDEF
KV$STR.MAXRCRBYTSIZ
      5106**DCL     10637>>ASSIGN
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:143  
KV$STR.SNDMAXNMBRCR
      5107**DCL     10630>>IF
KV$TRNTBL.FNTCLS
      5946**DCL     11016>>IF
KV$TRNTBL.OTPESCCHR
      5944**DCL      5944--REDEF
KV$VDI.CHN$
      5530**DCL     10405>>CALL    10476>>IF      10486>>CALL    10499>>CALL    10505>>CALL    10511>>CALL
     10516>>CALL    10545>>IF      10551>>ASSIGN  10607>>IF      10621>>IF      10646>>CALL    10961>>IF
     10961>>IF      10968>>CALL    10976>>CALL
KV$VDI.FULLDUPLEXPAPERTAPE
      5565**DCL     10598>>IF      11308>>ASSIGN
KV$VDI.HALFDUPLEXPAPERTAPE
      5566**DCL     10598>>IF      11308>>ASSIGN
KV$VDI.INTPHSDSC
      5569**DCL     10545>>IF      10581<<ASSIGN  10978<<ASSIGN
KV$VDI.LINSPD
      5572**DCL     10427>>ASSIGN  10676>>IF      10676>>IF      10868>>IF      11290>>ASSIGN  11290>>ASSIGN
     11297>>ASSIGN  11297>>ASSIGN  11298>>ASSIGN  11299>>ASSIGN
KV$VDI.OTPBFR_.ADR$
      5556**DCL     10454>>IF      10455>>IF      10476>>IF      10713>>IF      10717>>ASSIGN  10717>>ASSIGN
     10816<>CALL    10842<>CALL    10863>>ASSIGN  10864>>ASSIGN  10899>>ASSIGN  10900>>ASSIGN  10905>>ASSIGN
     10907>>ASSIGN  10912>>ASSIGN  10918>>ASSIGN  11108>>ASSIGN  11123>>IF      11135>>ASSIGN
KV$VDI.OTPBFR_.BYTSIZ
      5556**DCL     10733<<ASSIGN  10738<<ASSIGN  10859<<ASSIGN  11143>>IF      11144<<ASSIGN  11233>>IF
     11233<<ASSIGN
KV$VDI.OTPBFR_.BYTX
      5556**DCL     10455>>IF      10717>>ASSIGN  10858<<ASSIGN  11112>>IF      11117>>ASSIGN  11143>>IF
     11144>>ASSIGN
KV$VDI.OTPCHRCNTAFTLF
      5568**DCL     10361<<ASSIGN  10361>>ASSIGN  10675<<ASSIGN  10675>>ASSIGN
KV$VDI.OTPCNDPND
      5567**DCL     10625>>IF      11065>>IF      11152>>IF
KV$VDI.PHSDSC
      5565**DCL     10545>>IF      10603>>IF
KV$VDI.RCVFLWCTRMAXCRD
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:144  
      5561**DCL     11299<<ASSIGN  11300>>ASSIGN
KV$VDI.RCVFLWCTRMINCRDINC
      5567**DCL     11300<<ASSIGN
KV$VDI.RQSOTP
      5566**DCL     10879>>IF      10880<<ASSIGN
KV$VDI.SSNCNT
      5559**DCL     10881>>IF
KV$VDI.TMPOTPCHRCNT
      5561**DCL     10361>>ASSIGN  10362>>ASSIGN  10363<<ASSIGN  10446>>IF      10675>>ASSIGN  10699>>ASSIGN
     10923<<ASSIGN  11179>>ASSIGN  11221<<ASSIGN  11221>>ASSIGN
KV$VDI.USEOTPBFRBNR
      5570**DCL     11268<<ASSIGN  11274<<ASSIGN
KV$VDI.USEOTPBFRTRN
      5571**DCL     11267<<ASSIGN  11273<<ASSIGN
KV$VDI.USRCTX$
      5530**DCL     10338>>ASSIGN
KV$VDI.USREVTENB
      5573**DCL     11308<<ASSIGN
KV$VDI.USRRQSDAT.RED
      5571**DCL     10999>>IF
KV@VDH_DSC
      9957**DCL     10582<<ASSIGN  10584<>CALL    10979<<ASSIGN  10981<>CALL
KV@VDH_DSC.RSN
      9963**DCL     10583<<ASSIGN  10980<<ASSIGN
KV@VDH_OTPLCL
     10075**DCL     10356<<ASSIGN  10378<>CALL
KV@VDH_OTPLCL.BFR_.ADR$
     10108**DCL     10358<<ASSIGN
KV@VDH_OTPLCL.BFR_.BYTSIZ
     10108**DCL     10360<<ASSIGN  10364>>IF      10370>>IF      10375>>ASSIGN
KV@VDH_OTPLCL.BFR_.BYTX
     10108**DCL     10359<<ASSIGN
KV@VDH_OTPLCL.TRN
     10081**DCL     10357<<ASSIGN
KV@VDH_OTPMRK
     10201**DCL     11074<<ASSIGN  11076<>CALL
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:145  
KV@VDH_OTPMRK.DAT
     10228**DCL     11075<<ASSIGN
KV@VDH_OTPMRK.DAT.ID
     10231**DCL     10231--REDEF   10232--REDEF
KV@VDH_SETCLK
     10299**DCL     10946<<ASSIGN  10950<>CALL
KV@VDH_SETCLK.CLKNMB
     10305**DCL     10949<<ASSIGN
KV@VDH_SETCLK.PRD
     10305**DCL     10948<<ASSIGN
KV@VDH_SETCLK.UNT
     10305**DCL     10947<<ASSIGN
KVB$GETSYS
     10329**DCL-ENT 10816--CALL    10842--CALL
KVV$VDI
     10328**DCL-ENT 10378--CALL    10584--CALL    10626--CALL    10882--CALL    10950--CALL    10981--CALL
     11066--CALL    11076--CALL    11153--CALL
KV_ERD
      9735**DCL      9744--DCLINIT 10431--ASSIGN
KV_ERD.EXTSRD_CHR
      9778**DCL      9778--REDEF    9779--REDEF
KV_STT.OTPCHRCNT
      5497**DCL     11220<<ASSIGN  11220>>ASSIGN
KV_STT.REQSTATS.DSPMSK
      5388**DCL      5394--REDEF
KV_STT.REQSTATS.SLCMSK
      5429**DCL      5436--REDEF
KV_USR_GETOTPBFR
      9668**DCL     11130<>CALL
KV_USR_GETOTPBFR.ESTBYTSIZ
      9674**DCL     11129<<ASSIGN
KV_VDH_DSC
      9921**DCL     10582>>ASSIGN  10979>>ASSIGN
KV_VDH_EVT_CMPOTP
      9885**DCL     10626<>CALL    11066<>CALL    11153<>CALL
KV_VDH_EVT_RQSOTP
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:146  
      9849**DCL     10882<>CALL
KV_VDH_OTPLCL
     10002**DCL     10356>>ASSIGN
KV_VDH_OTPMRK
     10139**DCL     11074>>ASSIGN
KV_VDH_OTPMRK.DAT.ID
     10169**DCL     10169--REDEF   10170--REDEF
KV_VDH_SETCLK
     10263**DCL     10946>>ASSIGN
LVL
      5983**DCL     10568<<ASSIGN  10569<>CALL    10809<<ASSIGN  10814<>CALL    10855>>IF
PRM_COPY
      7792**DCL      7791--IMP-SIZ
PRM_USR_DAT.DAT__.ADR$
      7866**DCL     10358>>ASSIGN
PRM_USR_DAT.DAT__.BYTX
      7866**DCL     10359>>ASSIGN
PRM_USR_DAT.DAT__.DATBYTSIZ
      7866**DCL     10360>>ASSIGN
PRM_USR_EVT
      7906**DCL     10413<>CALL
PRM_USR_EVT.FNC
      7910**DCL     10343>>IF      10350>>DOCASE
PRM_USR_EVT.ID
      7912**DCL     10343>>IF      10343>>IF      10347>>IF      10387>>DOCASE
PRM_USR_EVT.PRM
      7912**DCL     10343>>IF      10423>>IF      10446>>IF      10455>>IF      10468>>ASSIGN  10498>>ASSIGN
     10525>>IF      10560>>DOCASE
PRM_USR_EXTINPTRN
      7942**DCL     10665<>CALL
PRM_USR_GETOTPBFR.ESTBYTSIZ
      8084**DCL     10754>>IF      10760>>ASSIGN
PRM_USR_INPPRC.CHR
      8120**DCL     11016>>IF
PRM_USR_INPPRC.ID
      8120**DCL     10936>>DOCASE
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:147  
PRM_USR_OTPMRK.CMPOTP
      8157**DCL     11059>>IF      11146>>IF
PRM_USR_OTPMRK.DAT
      8179**DCL     11075>>ASSIGN  11107>>ASSIGN
PRM_USR_OTPMRK.DAT.ID
      8182**DCL      8182--REDEF    8183--REDEF
PRM_USR_OTPRPTCHR.CHR
      8220**DCL     11195>>ASSIGN  11203>>ASSIGN  11204>>ASSIGN  11216>>ASSIGN
PRM_USR_OTPRPTCHR.CNT
      8220**DCL     11161>>ASSIGN
PRM_USR_SETPRM.PREPRC
      8320**DCL     11284>>IF
PRM_USR_SETPRM.PRMID
      8320**DCL     11249>>DOSELCT
PRM_USR_X
      7791**DCL         9--PROC     7792--REDEF    7810--REDEF    7906--REDEF    7942--REDEF    7979--REDEF
      8016--REDEF    8078--REDEF    8114--REDEF    8151--REDEF    8214--REDEF    8250--REDEF    8314--REDEF
Y@BYTSIZ
      5984**DCL     10637<<ASSIGN  10640>>DOWHILE 10641<<ASSIGN  10641>>ASSIGN  10645>>ASSIGN  10717<<ASSIGN
     10721>>IF      10727>>IF      10738>>ASSIGN  10760<<ASSIGN  10766>>ASSIGN  10767<<ASSIGN  10767>>ASSIGN
     10778>>IF      10798<<ASSIGN  10799>>IF      10805>>ASSIGN  10838<<ASSIGN  10839>>IF      10840>>ASSIGN
     11161<<ASSIGN  11162>>ASSIGN  11174>>IF      11174<<ASSIGN  11186>>IF      11186<<ASSIGN  11189>>ASSIGN
     11190>>IF      11197>>IF      11206>>IF      11215>>ASSIGN  11219>>ASSIGN  11220>>ASSIGN  11221>>ASSIGN
     11226>>IF      11232>>ASSIGN  11236<<ASSIGN
Y@BYTSIZ2
      5985**DCL     10639<<ASSIGN  10640>>DOWHILE 10641>>ASSIGN  10766<<ASSIGN  10768>>IF      11179<<ASSIGN
     11186>>IF      11186>>ASSIGN  11226>>IF      11232<<ASSIGN  11232>>ASSIGN  11233>>IF      11233>>ASSIGN
Y@DOGROUP
     10694**LABEL   10740--EXIT
Y@INDEX
      5987**DCL     10968<>CALL    11009<<ASSIGN  11016>>IF      11026>>ASSIGN  11032>>ASSIGN  11036>>IF
     11041<<ASSIGN  11041>>ASSIGN  11110<<ASSIGN  11112>>IF      11136<<ASSIGN  11141>>ASSIGN  11143>>IF
     11144>>ASSIGN
Y@INPINT
     10551**LABEL   10647--GOTO
Y@LOOP2
PL6.E3A0      #001=KAV$VDI File=KAV$VDI.:E05TSI                                  WED 07/30/97 00:04 Page:148  
     11011**LABEL   11034--EXIT    11036--EXIT
Y@PTR$
      5986**DCL     11108<<ASSIGN  11109>>IF      11110>>ASSIGN  11110>>ASSIGN  11135<<ASSIGN  11136>>ASSIGN
     11141>>ASSIGN  11142>>ASSIGN  11142>>ASSIGN
Y_POWER_OF_2
      9683**DCL     10455>>IF      10717>>ASSIGN  11110>>ASSIGN  11136>>ASSIGN
Y_SCRILGEVTID
       863**DCL     10657<>CALL
Y_SCRILGINPPRCID
       924**DCL     11051<>CALL
Y_SCRILGSCHRSN
       985**DCL     10590<>CALL
Y_SCRILGSETPRM
      1046**DCL     11318<>CALL
Y_SCRILGUSRFNC
      1107**DCL     11330<>CALL
Y_SCRNO_MMROTPBFR
      1168**DCL     10826<>CALL    10846<>CALL
Y_VDI_LCL.BYTSIZ
      9690**DCL     10775<<ASSIGN  10787<<ASSIGN  10794<<ASSIGN  10798>>ASSIGN  10816>>CALL    10818>>IF
     10836<<ASSIGN  10838>>ASSIGN  10842>>CALL    10857>>ASSIGN  10867>>ASSIGN
Y_VDI_LCL.BYTSIZLOG2
      9692**DCL     10776<<ASSIGN  10788<<ASSIGN  10795<<ASSIGN  10837<<ASSIGN  10864>>ASSIGN
Y_VDI_LCL.NXTCNT
      9696**DCL     11162<<ASSIGN  11163>>DOUNTIL 11189<<ASSIGN  11189>>ASSIGN  11236>>ASSIGN
Y_VDI_LCL.SIGSIZ
      9694**DCL     10709<<ASSIGN  10748<<ASSIGN  10754>>IF      10799>>IF      10805<<ASSIGN  10839>>IF
     10840<<ASSIGN  10859>>ASSIGN
Y_VDI_LCL.SNCFLWCTRHLT
      9698**DCL     11160<<ASSIGN  11187<<ASSIGN  11222>>IF
