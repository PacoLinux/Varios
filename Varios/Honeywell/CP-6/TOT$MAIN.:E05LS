VERSION E05

PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:1    
        1        1        /*M* TOT$MAIN     Total On-Line Testing System MAIN procedure */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P* NAME:         TOT$MAIN
       12       12             AUTHOR:       Scott S. Sheppard
       13       13             PURPOSE:      TOLTS Main Procedure
       14       14             DESCRIPTION:  Main program for the Total On-Line Testing System
       15       15             REFERENCE:    CP-6 Release D0E0
       16       16             LAST UPDATE:  03/05/86
       17       17        */
       18       18
       19       19        /*F* NAME:         TOT$MAIN
       20       20             PURPOSE:      The initial entry for CP6 into TOLTS.
       21       21             DESCRIPTION:  CP-6 enters TOLTS  though this  routine.  Once
       22       22                           called,  this  routine   does  some  one  time
       23       23                           initialization  and setup  for TOLTS  and then
       24       24                           transfer  control to TOT$ROOT.   From then on,
       25       25                           TOT$ROOT will  asynchronously handle accepting
       26       26                           and processing test requests.
       27       27             REFERENCE:    CP-6 Release C0K0
       28       28        */
       29       29        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:2    
       30       30        /*D* NAME:         TOT$MAIN
       31       31             ENTRY:        Main entry point into TOLTS for CP6.
       32       32             INTERFACE:    TOT$ROOT
       33       33             DESCRIPTION:
       34       34
       35       35        The  overview documentation for  TOLTS to be  presented here will
       36       36        consist of (1) an overview from  a user's point of view, and will
       37       37        be suited for general distribution  in a field manual, and (2) an
       38       38        overview  of the TOLTS  program logic from  a designer's point of
       39       39        view.
       40       40
       41       41        DESCRIPTION OF CP6 TOLTS FUNCTIONALITY
       42       42
       43       43        TOLTS is the executive program  for an online Test and Diagnostic
       44       44        system which is designed to maximize the availability of a system
       45       45        to  a customer.  It  provides a comprehensive  test capability of
       46       46        the  Honeywell  L66  hardware  in  an  environment  which  allows
       47       47        concurrent customer operation.  The test programs themselves have
       48       48        evolved over the years in the Honeywell GCOS III environment, and
       49       49        are currently in use on Honeywell's GCOS, Multics and CP6 sites.
       50       50
       51       51        The following test subsystems are available to the CP6 site:
       52       52
       53       53             1.  POLTS--peripheral testing
       54       54             2.  MOLTS--MPC testing
       55       55             3.  SOLTS--CPU testing
       56       56             4.  COLTS--L6 FEP testing
       57       57             5.  PACT--EIS CPU confidence test
       58       58             6.  TURTLE--terminal test
       59       59
       60       60        Much care has been taken  to ensure that the user (FED) interface
       61       61        between  CP6 TOLTS closely  resembles that interface  on GCOS and
       62       62        Multics systems.  Thus except  for logon and startup differences,
       63       63        a FED user can run both GCOS, Multics and CP6 TOLTS.
       64       64
       65       65        A CP6  system comes with TOLTS; however,  all the test pages that
       66       66        run  under  TOLTS  must  be  separately  installed by FED for the
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:3    
       67       67        customers  who have a  maintenance contract.  The  test pages are
       68       68        shipped  to designated  sites on  an IFAD(Integrated Firmware and
       69       69        Diagnostic)  tape which is  used to build  the file of test pages
       70       70        called the Deckfile.
       71       71
       72       72        Once  the Deckfile  is installed,  TOLTS can  be run from any CP6
       73       73        account  with  the  proper  priviledge.   Note that TOLTS need no
       74       74        longer  run from  the system  console only.   It is intended that
       75       75        TOLTS be run through  a CP6 timesharing terminal.  However, there
       76       76        is  a provision for  still running TOLTS  from the system console
       77       77        using  a Console Ghost.   This alternative is  not recommended or
       78       78        necessary.
       79       79
       80       80        The principle difference between TOLTS on a GCOS and a CP6 system
       81       81        is that  CP6 TOLTS does not do  its own peripheral allocation for
       82       82        testing  as  GCOS  TOLTS  does.   Instead,  a  peripheral must be
       83       83        deallocated(or partitioned) from the system by an operator before
       84       84        TOLTS  is started.  Once  this is done,  TOLTS operation for both
       85       85        systems  becomes  similar.   The   SYSCON  program   is  used  to
       86       86        partition and return devices to the system.
       87       87
       88       88        Following  is a  general scenario  for installing  TOLTS and then
       89       89        running peripheral T&D:
       90       90
       91       91             1.  The  CP6 PO tape shipped to  the customer site will have
       92       92                 on it the following:
       93       93                 a.  TOLTS run unit.
       94       94                 b.  DEER  run unit.
       95       95                 c.  TURTLE run unit.
       96       96                 d.  DEERHELP data file.
       97       97             2.  All of the above will reside in :SYS as a result of
       98       98                 the normal CP6 installation process.
       99       99             3.  As  part of the installation  process, a special account
      100      100                 will be created  for  the  use of FED. It will remain on
      101      101                 system at the discretion of the system's manager.
      102      102             4.  The  FER, in order to completely  install the T&D system
      103      103                 needs to  do the  following (all  with the  cooperation of the
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:4    
      104      104                 system manager):
      105      105                 a.  Logon to the special FED account.
      106      106                 b.  Mount the IFAD tape which was sent to the site from
      107      107                     Phoenix with the firmware and offline T&D tapes.
      108      108                 c.  Run DEER which will read the tape and create
      109      109                     a disk file in  the  current file management account
      110      110                     called TANDD_DECK_FILE_ID  which will then  contain all the
      111      111                     tests for the site.
      112      112                 e.  Dismount the IFAD tape.
      113      113             5.  The procedure to run peripheral tests differs most from
      114      114                 GCOS so it will be elaborated on here.  See the field
      115      115                 document for instructions for COLTS and SOLTS.
      116      116                 The following procedure needs to be done in coopertation
      117      117                 with a customer operator:
      118      118                 a.   Have  the  operator  partition  the perpheral using
      119      119                      SYSCON.
      120      120                 b.  Logon to the FED account and type the following:
      121      121                     !PRIV TND
      122      122                     !DIR .:SYS
      123      123                     !TOLTS
      124      124                     --tolts logon message comes here
      125      125                     ???TEST P00801
      126      126                 c.  CP6 will now double check and ask the operator for
      127      127                     permission  to  run  peripheral  T&D.  He can either
      128      128                     allow or disallow it via a console KEYIN.
      129      129                 d.   POLTS will  then assume  control and  the operating
      130      130                     interface from  that point  on is  the same  as it  is on GCOS
      131      131                     systems.
      132      132                 e.  On completion of  the test, have the operator return
      133      133                     the peripheral to the system with SYSCON and logoff.
      134      134                 f.  The above scenario applies to MOLTS testing also.
      135      135                 g.  SOLTS, COLTS and PACT testing more closely resemble
      136      136                     GCOS operation.
      137      137
      138      138        PACT provides a quick confidence test of the EIS portion of a L66
      139      139        CPU.   It runs very  quickly and while  being very comprehensive,
      140      140        provides  little  insight  into  the  exact nature of the problem
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:5    
      141      141        other  than one  exists.  When  one does  exit, SOLTS  is used to
      142      142        further  isolate it.  PACT  is started from  TOLTS using the same
      143      143        syntax that GCOS uses, and provides the same cycling and looping
      144      144        options.
      145      145
      146      146        TURTLE provides a test of  CP6 supported terminals.  It is merely
      147      147        a  terminal  exerciser  and  provides  no  failure diagnosis.  It
      148      148        provides  a  standard  set  of  output  to  test  a suspected bad
      149      149        terminal.
      150      150
      151      151        DEER is the  Deckfile Editor Routine  used to build and edit the
      152      152        CP-6 deckfile, normally, TANDD_DECK_FILE_ID.:FED.
      153      153
      154      154        Additional  operational information  can be  found in  the online
      155      155        TOLTS HELP facility and in the TOLTS field manual.
      156      156
      157      157
      158      158        PROGRAM LOGIC DESCRIPTION--
      159      159
      160      160        The  TOLTS run unit  is linked together,  combining the following
      161      161        files:
      162      162
      163      163               TOB$BREAK_HANDLER
      164      164               TOC$COLTS
      165      165               TOD$DISPATCHER
      166      166               TOE$EVENT_HANDLER
      167      167               TOF$FAULTS
      168      168               TOF$SFR
      169      169               TOF$SISR
      170      170               TOG$GCOS_MMES
      171      171               TOK$CCALL
      172      172               TOL$BAD_CARD
      173      173               TOL$CLEAR_DATA
      174      174               TOL$FREE_BUFFER
      175      175               TOL$GET_DATA
      176      176               TOL$GET_NEXT_DCW
      177      177               TOL$LOADER
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:6    
      178      178               TOM$MOLTS
      179      179               TOO$TOLTS_MMES
      180      180               TOP$POLTS
      181      181               TOQ$DEBUG
      182      182               TOS$RSW2
      183      183               TOS$SOLTS
      184      184               TOT$ASCII_BCD
      185      185               TOT$BCD_ASCII
      186      186               TOT$MAIN
      187      187               TOT$OCTASC
      188      188               TOT$ROOT
      189      189               TOT$SOLTS_SNUMB
      190      190               TOX$ERR
      191      191
      192      192        In  addition  to  the  above,  the  following  files are integral
      193      193        portions of TOLTS, but are not linked into the run unit:
      194      194
      195      195             TOT_TOLTS_M          Global Substitutions and Macros
      196      196             TOT_RQSTS_E          Substitutions used in Request Parsing
      197      197             TOT_NODES_D          Partridge Syntax Definition for TOLTS
      198      198             TO_PERR_C            Processor Error Messages
      199      199             TO_SCODE_C           TOLTS Screech codes
      200      200             TO_TOLTS_HELP        HERMAN help message text
      201      201
      202      202        In addition to TOLTS, 2 other run units are shipped with a CP6 PO
      203      203        tape:   (1) TURTLE    and    (2) DEER.     Extensive documentatin
      204      204        on these will not provided here;  the link file for each of these
      205      205        should define what files are used to build each of these.
      206      206
      207      207        The main idea behind the implementation of CP6 TOLTS is that test
      208      208        pages and the subexecutives to  drive these will be common to all
      209      209        L66 operating  sysems, and will distributed  to GCOS, MULTICS and
      210      210        CP6 sites via an  IFAD (Integrated Firmware and Diagnostic) tape.
      211      211        The subexecs and test pages have their own well defined operating
      212      212        interface that is totally transparent to CP6 TOLTS.  The subexecs
      213      213        provide  the  interface  between  the  test  pages  and  the host
      214      214        operating  system.   This  is  done  by using the MME(Master Mode
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:7    
      215      215        Entry) instruction.  This instruction creates are hardware fault,
      216      216        and  provides  a  clean  interface  between  the subexecs and CP6
      217      217        TOLTS.  A MME  is executed anytime there is a  need for a service
      218      218        of  the operating  system.  The  MME calling  sequences between a
      219      219        subexec and a host operating system is well defined, and the same
      220      220        for all operating systems.  It is the job of the interface module
      221      221        on an operating systme to provide the service requested in a MME.
      222      222
      223      223        Thus,  everything revolves around  the Fault Handler  in CP6.  It
      224      224        traps the MME instructions, decides which MME it is and calls the
      225      225        appropriate  MME  service  routine,  and  finally  returns to the
      226      226        subexec  when the  MME service  is complete.   Following is the a
      227      227        fairly detailed sequence of  starting TOLTS and executing one MME
      228      228        instruction:
      229      229
      230      230             1.  User logs on and enters !TOLTS
      231      231             2.  TOLTS run unit is loaded in memory by CP6 and put into
      232      232                 execution.   It  gives  its  logon  salutation and logon
      233      233                 message.
      234      234             3.  In  the process of doing  this, TOLTS initializes itself by
      235      235                 establishing condition handlers for (1) all faults,
      236      236                 (2)  events and  (3) breaks.  It then  goes back  to the terminal
      237      237                 to get the first test request.
      238      238             4.  User enters the first request, specifying a subexc by
      239      239                 entering ???TEST P00801.
      240      240             5.  After the request is validated, 2 dispatcher entries are built
      241      241                 one to initialize a subexec and the second containing
      242      242                 the initial test request.  TOLTS then transfers to the
      243      243                 Dispatcher to service the first one.
      244      244             6.   The  Dispatcher  will  allocate  memory  to load in the subexec
      245      245                 requested, and then call the Loader to read it in from
      246      246                 the Deckfile and relocate it into the TOLTS run unit
      247      247                 dynamically.  (This may take a while on a loaded system
      248      248                 because of the number of disk I/O required and the
      249      249                 attendant  processing.)   The  Dispatcher then transfers into
      250      250                 the entry point for the subexec which then assumes
      251      251                 control.
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:8    
      252      252             7.  The subexec initializes itself  and then does a MME for
      253      253                 its  first  sevice  request.   The  MME  fault  is first trapped by
      254      254                 the  CP6 fault handler  which will in  turn return it to the
      255      255                 TOLTS fault Handler.  The Fault Handler decides
      256      256                 which  MME  it  is  and  calls  one  of  the MME service routines to
      257      257                 service it.  When it completes, control is returned to
      258      258                 the Fault Handler which will return information
      259      259                 to  the  subexec  and  then  return  control to it.  The
      260      260                 subexec then resumes processing.
      261      261             8.  The above is a real simplification of the the fault
      262      262                 handling process.  The fault handler is able to
      263      263                 differentiate between MME faults for service requests
      264      264                 and legitimate faults created by a test page which need
      265      265                 to be  handled by the subexecs.  Also,  there is a great deal
      266      266                 of manipulation of the TCB and auto stacks which is
      267      267                 quite complicated and is not detailed here.
      268      268
      269      269        So  in summary,  TOLTS revolves  around the  fault handler  and a
      270      270        series  of  modules  which  contain  MME  service  routines.  The
      271      271        remaining  modules  provide  executive  type services required to
      272      272        support  the service  routines.  The  details of  all of this are
      273      273        contained in the documentation for the individual modules.
      274      274        */
      275      275        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:9    
      276      276        TOT$MAIN: PROC MAIN ;
      277      277
      278      278        /* Include Files */
      279      279
      280      280           %INCLUDE B$JIT ;
      281      883           %INCLUDE B$OBJECT_C ;
      282     4313           %INCLUDE CP_6 ;
      283     9872           %INCLUDE CP_6_SUBS ;
      284    10412           %INCLUDE TOT_TOLTS_M ;
      285    11530           %INCLUDE TO_PERR_C ;
      286    12115           %INCLUDE XUG_ENTRY ;
      287    12146           %INCLUDE XU_MACRO_C ;
      288    15252           %INCLUDE XUH_MACRO_C;
      289    15336
      290    15337        /* Variables */
      291    15338
      292    15339           %B$ALT ;
      293    15347           %B$TCB ;
      294    15350           %F$DCB ;
      295    15407           %VLP_ERRCODE (FPTN = TOT_ERROR_CODE,
      296    15408                         FCG  = 'TO',
      297    15409                         MID  = 'T',
      298    15410                         SEV  = 4) ;
      299    15455           %XUG_INIT (NAME              = TOLTS_INIT,
      300    15456                      ALWAYS_SET_PROMPT = YES,
      301    15457                      COMMANDS          = YES,
      302    15458                      GOODCMD           = YES,
      303    15459                      SYNTAX            = YES);
      304    15872           %XUG_GETCMD (STCLASS           = "STATIC SYMDEF",
      305    15873                        NAME              = TOLTS_GETCMD,
      306    15874                        ALWAYS_SET_PROMPT = YES,
      307    15875                        XUH               = TOLTS_HELP,
      308    15876                        DCB2_PARAM        = M$DO,
      309    15877                        NODES             = TOLTS_ROOT_NODE);
      310    16215           %XUH_PARAM (NAME     = TOLTS_HELP,
      311    16216                       PROCNAME = TOLTS_NAME);
      312    16277           %VLP_NAME (FPTN = TOLTS_NAME,
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:10   
      313    16278                      NAME = 'TOLTS');
      314    16305        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:11   
      315    16306        /* External Variables */
      316    16307
      317    16308    1      DCL B$JIT$               PTR SYMREF ALIGNED ;
      318    16309    1      DCL B$TCB$               PTR SYMREF ALIGNED ;
      319    16310    1      DCL 1 B_VERSION SYMREF,
      320    16311    1            2 LGTH             UBIN BYTE UNAL,
      321    16312    1            2 TEXT             CHAR (10) CALIGNED ;
      322    16313           %FPT_WRITE (FPTN    = CONSOLE_FPT,
      323    16314                       STCLASS = SYMREF) ;
      324    16345           %TOT$DMC (STCLASS = "STATIC SYMDEF") ;
      325    16379           %TOT$IFAD (STCLASS = "STATIC SYMDEF") ;
      326    16396    1      DCL TOT$REINITIALIZE     REMEMBER STATIC SYMDEF DALIGNED ;
      327    16397           %TOT$TOLTS (STCLASS = "STATIC SYMDEF") ;
      328    16418           %TOP$TCP;
      329    16506    1      DCL TOLTS_ROOT_NODE SBIN SYMREF ALIGNED;
      330    16507
      331    16508        /* Data Control Blocks */
      332    16509
      333    16510           %M$DCB (ACCT  = %DECKFILE_ACCT,
      334    16511                   ASN   = FILE,
      335    16512                   DCBN  = M$DECKFILE,
      336    16513                   DISP  = NAMED,
      337    16514                   EXIST = OLDFILE,
      338    16515                   FUN   = IN,
      339    16516                   NAME  = %DECKFILE_NAME,
      340    16517                   ORG   = KEYED,
      341    16518                   SHARE = IN) ;
      342    16592    1      DCL M$LM                 DCB ;
      343    16593    1      DCL M$DO                 DCB;
      344    16594    1      DCL M$LO                 DCB;
      345    16595           %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:12   
      346    16596        /* External Entry Points */
      347    16597
      348    16598    1      DCL TOB$BREAK_HANDLER    ENTRY ASYNC ;
      349    16599    1      DCL TOE$EVENT_HANDLER    ENTRY ASYNC ;
      350    16600    1      DCL TOF$FAULTS           ENTRY ASYNC ;
      351    16601    1      DCL TOF$REMEMBER_SFR     ENTRY ;
      352    16602    1      DCL TOF$REMEMBER_SISR    ENTRY ;
      353    16603    1      DCL TOT$ASCII_BCD        ENTRY (3) ;
      354    16604    1      DCL TOT$CONSOLE_OUT      ENTRY ;
      355    16605    1      DCL TOT$ROOT             ENTRY ;
      356    16606           %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:13   
      357    16607        /* *******************
      358    16608           ** Main  Program **
      359    16609           ******************* */
      360    16610
      361    16611    1      REMEMBER RESTART IN TOT$REINITIALIZE ;
      362    16612
      363    16613    1      CALL SYSTEM_INITIAL ;
      364    16614    1      CALL EST_COND_HANDLERS ;
      365    16615    1      CALL GET_DATA_SEGMENT (%TOO$IO_BUFFER_LGTH, TOT$DMC.TOO$IO_BUFFER) ;
      366    16616    1      CALL GET_DATA_SEGMENT (SIZEW (TOP$TCP), TOT$DMC.TOP$TCP) ;
      367    16617    1      CALL TOF$REMEMBER_SFR ;
      368    16618    1      CALL TOF$REMEMBER_SISR ;
      369    16619    1      CALL GET_TOLTS_VERSION ;
      370    16620    1      CALL SYSTEM_START_UP ;
      371    16621    1      CALL GET_DECKFILE_FID ;
      372    16622    1      CALL GET_IFAD_VERSION ;
      373    16623    1      CALL IDENTIFY_DECKFILE ;
      374    16624
      375    16625    1   RESTART:
      376    16626    1      CALL TOT$ROOT ;
      377    16627
      378    16628        /* *******************
      379    16629           ** End  Of  Main **
      380    16630           ******************* */
      381    16631        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:14   
      382    16632        /*I* NAME:         SYSTEM_INITIAL
      383    16633             AUTHOR:       Scott S. Sheppard
      384    16634             PURPOSE:      One time Initialization for TOLTS
      385    16635             INTERFACE:    XUR$INIT
      386    16636                           XUR$SETERRMSG
      387    16637                           M$SPRIV
      388    16638             PARAMETERS:   None passed.
      389    16639             DATA:         No external data accessed.
      390    16640             DESCRIPTION:  XUR$INIT is  called to set up  future calls to
      391    16641                           library  service  routines.  It  establishes a
      392    16642                           work  area  called  the  Parse  Control Block.
      393    16643                           XUR$SETEERMSG    is   called    to   establish
      394    16644                           :ERRMSG.:SYS  as the  error message  file from
      395    16645                           which  to  read  error  messages.  This is the
      396    16646                           default but  this call is made  anyway so that
      397    16647                           during  development  of  TOLTS, the ERROR_FILE
      398    16648                           equate may be changed and TOT$MAIN recompiled.
      399    16649                           This  allows developers  to easily  change the
      400    16650                           error message file to  a local one for testing
      401    16651                           of new error  messages. M$SPRIV is then called
      402    16652                           to  ensure that  a user  has TND privilege. If
      403    16653                           the  user is authorized  for TND privilege, he
      404    16654                           need   not  invoke  it   explicitly.   If  not
      405    16655                           authorized,  M$SPRIV  altreturns  and TOLTS is
      406    16656                           shut down.  Note that other privileges such as
      407    16657                           those  for  partitioning  peripherals  are not
      408    16658                           required, but may be necessary for some users.
      409    16659        */
      410    16660        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:15   
      411    16661    1   SYSTEM_INITIAL: PROC ;
      412    16662
      413    16663           %FPT_PRIV (FPTN = TOLTS_PRIVS,
      414    16664                      AUTH = YES,
      415    16665                      PRIV = %PR_TND#);
      416    16680           %VLP_NAME (FPTN = ERR_FID,
      417    16681                      LEN  = 31,
      418    16682                      NAME = %ERROR_FILE) ;
      419    16709
      420    16710        /* Code */
      421    16711
      422    16712    2      CALL XUG$INIT (TOLTS_GETCMD, TOLTS_INIT) WHENALTRETURN
      423    16713    3           DO ;
      424    16714    3              TOLTS_GETCMD.ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      425    16715    3              CALL XUG$ERRMSG (TOLTS_GETCMD);
      426    16716    3              CALL M$ERR ;
      427    16717    3           END /* WHENALTRETURN */ ;
      428    16718    2      TOLTS_GETCMD.ERRMFID$ = ADDR (ERR_FID);
      429    16719    2      CALL XUG$SETERRMSG (TOLTS_GETCMD) WHENALTRETURN
      430    16720    3           DO ;
      431    16721    3              TOLTS_GETCMD.ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      432    16722    3              CALL XUG$ERRMSG (TOLTS_GETCMD);
      433    16723    3              CALL M$ERR ;
      434    16724    3           END /* WHENALTRETURN */ ;
      435    16725    2      CALL M$SPRIV (TOLTS_PRIVS) WHENALTRETURN
      436    16726    3           DO ;
      437    16727    3              TOT_ERROR_CODE.ERR# = %E$NOTOLTSPRIV ;
      438    16728    3              TOLTS_GETCMD.ERR_CODE = TOT_ERROR_CODE;
      439    16729    3              CALL XUG$ERRMSG (TOLTS_GETCMD) ;
      440    16730    3              CALL M$EXIT ;
      441    16731    3           END /* WHENALTRETURN */ ;
      442    16732    2      RETURN ;
      443    16733
      444    16734    2   END SYSTEM_INITIAL;
      445    16735        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:16   
      446    16736        /*I* NAME:         EST_COND_HANDLERS
      447    16737             INTERFACE:    M$TRAP
      448    16738                           M$EVENT
      449    16739                           M$INT
      450    16740             DESCRIPTION:  The above Monitior Service Routines are called
      451    16741                           to  establish  with  CP6  the addresses of the
      452    16742                           routines  which   will  handle  the  exception
      453    16743                           conditons  for   TOLTS.   All  information  is
      454    16744                           already in the FPTs.
      455    16745
      456    16746                           EST_COND_HANDLERS is  called to establish with
      457    16747                           CP6  the  TOLTS  handlers  for  the  following
      458    16748                           conditions--
      459    16749                             All fault conditions.
      460    16750                             All event completions.
      461    16751                             Any "break" condition from the terminal.
      462    16752
      463    16753                           M$TRAP    establishes   TOF$FAULTS    as   the
      464    16754                           asynchronous  routine to  be entered  when any
      465    16755                           fault condition occurs within TOLTS.
      466    16756
      467    16757                           M$EVENT  establishes TOE$EVENT_HANDLER  as the
      468    16758                           asynchrounous  routine to be  entered when any
      469    16759                           event completes.
      470    16760
      471    16761                           M$INT  established  TOB$BREAK_HANDLER  as  the
      472    16762                           asynchronous  routine  to  be entered whenever
      473    16763                           the break key is hit on the terminal.
      474    16764        */
      475    16765        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:17   
      476    16766    1   EST_COND_HANDLERS: PROC;
      477    16767
      478    16768           %FPT_TRAP (FPTN         = SETUP_TRAP,
      479    16769                      ARITHMETIC   = TOF$FAULTS,
      480    16770                      OVERFLOW     = TRAP,
      481    16771                      DIVIDE_CHECK = TRAP,
      482    16772                      PROGRAMMED   = TOF$FAULTS,
      483    16773                      MME          = TRAP,
      484    16774                      DERAIL       = TRAP,
      485    16775                      FAULT_TAG    = TRAP,
      486    16776                      ERRORS       = TOF$FAULTS,
      487    16777                      MEMORY       = TRAP,
      488    16778                      COMMAND      = TRAP,
      489    16779                      LOCKUP       = TRAP,
      490    16780                      IPR          = TRAP,
      491    16781                      MISSING_SEG  = TRAP,
      492    16782                      MISSING_PAGE = TRAP,
      493    16783                      SECURITY_1   = TRAP,
      494    16784                      SECURITY_2   = TRAP,
      495    16785                      HARDWARE     = TRAP,
      496    16786                      HISTORY_REGS = YES,
      497    16787                      PMME         = TOF$FAULTS);
      498    16810           %FPT_EVENT (FPTN   = SETUP_EVENT,
      499    16811                       UENTRY = TOE$EVENT_HANDLER);
      500    16825           %FPT_INT (FPTN   = SETUP_BREAK,
      501    16826                     UENTRY = TOB$BREAK_HANDLER);
      502    16840           %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:18   
      503    16841        /* Code */
      504    16842
      505    16843    2      CALL M$TRAP (SETUP_TRAP) ALTRET (ERROR) ;
      506    16844    2      CALL M$EVENT (SETUP_EVENT) ALTRET (ERROR) ;
      507    16845    2      CALL M$INT (SETUP_BREAK) ALTRET (ERROR) ;
      508    16846    2      RETURN;
      509    16847
      510    16848    2   ERROR:
      511    16849    2      TOLTS_GETCMD.ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      512    16850    2      CALL XUG$ERRMSG (TOLTS_GETCMD);
      513    16851    2      CALL M$ERR ;
      514    16852
      515    16853    2   END EST_COND_HANDLERS;
      516    16854        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:19   
      517    16855        /*I*  NAME:        GET_DATA_SEGMENT
      518    16856              AUTHOR:      Scott S. Sheppard
      519    16857              PURPOSE:     Gets Dynamic Memory Space
      520    16858              INTERFACE:   M$GDS Monitor Service
      521    16859                           M$ERR Monitor Service
      522    16860                           XUG$ERRMSG
      523    16861              PARAMETERS:  WORD_COUNT   - number of words needed by TOLTS
      524    16862                           WORD_VECTOR  - vector to the set of words
      525    16863              DESCRIPTION: This procedure gets a set of dynamic words to be
      526    16864                           used as data area for TOLTS.
      527    16865        */
      528    16866
      529    16867    1   GET_DATA_SEGMENT: PROC (WORD_COUNT, WORD_VECTOR) ;
      530    16868
      531    16869    2      DCL WORD_COUNT     UBIN WORD ALIGNED ;
      532    16870    2      DCL WORD_VECTOR    BIT (72) DALIGNED ;
      533    16871           %FPT_GDS (FPTN    = GET_BUFFER,
      534    16872                     FREE    = YES) ;
      535    16888
      536    16889        /* Code */
      537    16890
      538    16891    2      GET_BUFFER.V.SEGSIZE# = WORD_COUNT ;
      539    16892    2      GET_BUFFER.RESULTS_ = VECTOR (WORD_VECTOR) ;
      540    16893    2      CALL M$GDS (GET_BUFFER) ALTRET (GET_ERROR) ;
      541    16894    2      RETURN ;
      542    16895
      543    16896    2   GET_ERROR:
      544    16897    2      TOLTS_GETCMD.ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      545    16898    2      CALL XUG$ERRMSG (TOLTS_GETCMD);
      546    16899    2      CALL M$ERR ;
      547    16900
      548    16901    2   END GET_DATA_SEGMENT ;
      549    16902        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:20   
      550    16903        /*I* NAME:         GET_TOLTS_VERSION
      551    16904             AUTHOR:       Scott S. Sheppard
      552    16905             PURPOSE:      Obtains Link Time, Date, and Release
      553    16906             INTERFACE:    M$READ
      554    16907                           M$TIME
      555    16908             PARAMETERS:   None passed.
      556    16909             DATA:         B_VERSION - input
      557    16910                           TOT$TOLTS.LINK_DATE.ASCII - output
      558    16911                           TOT$TOLTS.LINK_DATE.BCD - output
      559    16912                           TOT$TOLTS.LINK_TIME - output
      560    16913                           TOT$TOLTS.LINK_VERSION.LGTH - output
      561    16914                           TOT$TOLTS.LINK_VERSION.TEXT - output
      562    16915             DESCRIPTION:  This  procedure  sets  up  the  TOLTS  version
      563    16916                           information.  The   CP-6  release  version  is
      564    16917                           obtained from a  SYMREF called B_VERSION which
      565    16918                           obtains  its  value  as  part  of  the JCL for
      566    16919                           linking   TOLTS.    However,   the   B_VERSION
      567    16920                           structure does NOT contain the date when TOLTS
      568    16921                           was  linked. This  is obtained  by reading the
      569    16922                           head  record of  the TOLTS  module and culling
      570    16923                           out the link date and time.
      571    16924        */
      572    16925        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:21   
      573    16926    1   GET_TOLTS_VERSION: PROC ;
      574    16927
      575    16928    2      DCL 1 BIRTH_KEY CONSTANT,
      576    16929    2            2 * UBIN BYTE CALIGNED INIT (5),
      577    16930    2            2 * CHAR (5)  CALIGNED INIT ('BIRTH') ;
      578    16931    2      DCL CC              UBIN WORD STATIC ALIGNED INIT (6) ;
      579    16932           %B$RUBIRTH (NAME = B_RUBIRTH,
      580    16933                       STCLASS = STATIC) ;
      581    16942           %FPT_READ (FPTN = GET_LINK_DATE,
      582    16943                      BUF  = B_RUBIRTH,
      583    16944                      BIN  = YES,
      584    16945                      DCB  = M$LM,
      585    16946                      KEY  = BIRTH_KEY,
      586    16947                      KEYS = YES,
      587    16948                      WAIT = YES) ;
      588    16987           %FPT_TIME (FPTN   = COMP_LINK_DATE,
      589    16988                      SOURCE = UTS,
      590    16989                      DEST   = ANS,
      591    16990                      DATE   = TOT$TOLTS.LINK_DATE.ASCII,
      592    16991                      TIME   = TOT$TOLTS.LINK_TIME,
      593    16992                      TSTAMP = B_RUBIRTH.CREATE_UTS) ;
      594    17011
      595    17012        /* Code */
      596    17013
      597    17014    2      CALL M$READ (GET_LINK_DATE) ALTRET (ERROR) ;
      598    17015    2      CALL M$TIME (COMP_LINK_DATE) ALTRET (ERROR) ;
      599    17016    2      CALL TOT$ASCII_BCD (TOT$TOLTS.LINK_DATE.ASCII, TOT$TOLTS.LINK_DATE.BCD, CC);
      600    17017    2      TOT$TOLTS.LINK_VERSION.LGTH = B_VERSION.LGTH ;
      601    17018    2      TOT$TOLTS.LINK_VERSION.TEXT = SUBSTR (B_VERSION.TEXT, 0, B_VERSION.LGTH) ;
      602    17019    2      RETURN ;
      603    17020
      604    17021    2   ERROR:
      605    17022    2      TOLTS_GETCMD.ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      606    17023    2      TOLTS_GETCMD.FLGLEV# = 4;
      607    17024    2      CALL XUG$ERRMSG (TOLTS_GETCMD);
      608    17025    2      CALL M$ERR ;
      609    17026
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:22   
      610    17027    2   END GET_TOLTS_VERSION ;
      611    17028        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:23   
      612    17029        /*I* NAME:         SYSTEM_START_UP
      613    17030             INTERFACE:    M$TIME
      614    17031                           TOT$CONSOLE_OUT
      615    17032             INPUT:        TOT$TOLTS.LINK_VERSION - version used when linked
      616    17033             OUTPUT:       No external data accessed.
      617    17034             DESCRIPTION:  This procedure forms the TOLTS log on salutation
      618    17035                           using the version from the link processor (found
      619    17036                           in the   VERSION SYMREF) and the  date and  time
      620    17037                           of the current day (obtained by calling M$TIME).
      621    17038             FORM: ***TOLTS Executive Version <version> <link date> on <date> at <time>
      622    17039        */
      623    17040
      624    17041    1   SYSTEM_START_UP: PROC;
      625    17042
      626    17043    2      DCL 1 ON_DATE STATIC,
      627    17044    2            2 *     CHAR (4) CALIGNED INIT (' on '),
      628    17045    2            2 DATE  CHAR (8) CALIGNED ;
      629    17046    2      DCL ON_DATE_ REDEF ON_DATE CHAR (12) CALIGNED ;
      630    17047    2      DCL 1 AT_TIME STATIC,
      631    17048    2            2 *     CHAR (4) CALIGNED INIT (' at '),
      632    17049    2            2 TIME  CHAR (11) CALIGNED ;
      633    17050    2      DCL AT_TIME_ REDEF AT_TIME CHAR (15) CALIGNED ;
      634    17051    2      DCL 1 LINK_DATE STATIC,
      635    17052    2            2 *     CHAR (1) CALIGNED INIT (' '),
      636    17053    2            2 DATE  CHAR (6) CALIGNED ;
      637    17054    2      DCL LINK_DATE_ REDEF LINK_DATE CHAR (7) CALIGNED ;
      638    17055    2      DCL OUTPUT_BUFFER CHAR (80) STATIC CALIGNED ;
      639    17056           %FPT_TIME (FPTN   = START_TOLTS,
      640    17057                      SOURCE = CLOCK,
      641    17058                      DEST   = LOCAL,
      642    17059                      DATE   = ON_DATE.DATE,
      643    17060                      TIME   = AT_TIME.TIME) ;
      644    17079           %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:24   
      645    17080        /* Code */
      646    17081
      647    17082    2      CALL M$TIME (START_TOLTS) ;
      648    17083    2      LINK_DATE.DATE = TOT$TOLTS.LINK_DATE.ASCII ;
      649    17084    2      CALL CONCAT (OUTPUT_BUFFER,
      650    17085    2              '***TOLTS Executive Version ',
      651    17086    2              SUBSTR (TOT$TOLTS.LINK_VERSION.TEXT,0,TOT$TOLTS.LINK_VERSION.LGTH),
      652    17087    2              LINK_DATE_,
      653    17088    2              ON_DATE_,
      654    17089    2              SUBSTR (AT_TIME_, 0, 9)) ;
      655    17090    2      CONSOLE_FPT.BUF_ = VECTOR (OUTPUT_BUFFER) ;
      656    17091    2      CALL TOT$CONSOLE_OUT;
      657    17092    2      RETURN;
      658    17093
      659    17094    2   END SYSTEM_START_UP;
      660    17095        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:25   
      661    17096        /*I* NAME:         GET_DECKFILE_FID
      662    17097             AUTHOR:       Scott S. Sheppard
      663    17098             PURPOSE:      obtains the file identifier for the deckfile
      664    17099             DESCRIPTION:  This procedure  initializes the DECKFILE structure
      665    17100                           to  appropriate values. The  file name and account
      666    17101                           are fetched from the  Data Control Block (DCB) for
      667    17102                           the  M$DECKFILE  DCB.
      668    17103        */
      669    17104
      670    17105    1   GET_DECKFILE_FID: PROC ;
      671    17106
      672    17107    2      DCL DCB$        PTR ALIGNED ;
      673    17108    2      DCL ACCT        CHAR (8) CALIGNED ;
      674    17109    2      DCL ACCT_LGTH   UBIN WORD ALIGNED ;
      675    17110
      676    17111        /* Code */
      677    17112
      678    17113    2      DCB$ = DCBADDR (DCBNUM (M$DECKFILE)) ;
      679    17114    2      IF DCB$ -> F$DCB.ACCT# = ' '
      680    17115    2      THEN ACCT = B$JIT$ -> B$JIT.FACCN ;
      681    17116    2      ELSE ACCT = DCB$ -> F$DCB.ACCT# ;
      682    17117    2      CALL CONCAT (TOT$TOLTS.DECKFILE.FID,
      683    17118    2              SUBSTR (DCB$ -> F$DCB.NAME#.C, 0, DCB$ -> F$DCB.NAME#.L),
      684    17119    2              '.',
      685    17120    2              ACCT) ;
      686    17121    2      CALL INDEX (ACCT_LGTH, ' ', ACCT, 0) ;
      687    17122    2      TOT$TOLTS.DECKFILE.LGTH = DCB$ -> F$DCB.NAME#.L + 1 + ACCT_LGTH ;
      688    17123    2      RETURN ;
      689    17124
      690    17125    2   END GET_DECKFILE_FID ;
      691    17126        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:26   
      692    17127        /*I* NAME:         GET_IFAD_VERSION
      693    17128             AUTHOR:       Scott S. Sheppard
      694    17129             INTERFACE:    M$OPEN
      695    17130                           M$READ
      696    17131                           M$CLOSE
      697    17132             INPUT:        No external data accessed.
      698    17133             OUTPUT:       TOT$IFAD.VERSION
      699    17134                           TOT$IFAD.MAINTENANCE.CONTRACT
      700    17135             DESCRIPTION:  This procedure reads  the revision record from
      701    17136                           the  deckfile  to  determine  the IFAD release
      702    17137                           version used to create the deckfile.  The read
      703    17138                           to do this also  returns a bit which indicates
      704    17139                           if the site has a maintenance contract or not.
      705    17140                           If  the  read  is  unsuccessful, TOLTS is shut
      706    17141                           down. This forces C00 sites to build deckfiles
      707    17142                           using   DEER  C00  so   that  the  maintenance
      708    17143                           contract requirement can be enforced.
      709    17144        */
      710    17145        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:27   
      711    17146    1   GET_IFAD_VERSION: PROC ;
      712    17147
      713    17148    2      DCL 1 IFAD_KEY CONSTANT,
      714    17149    2            2 *       UBIN BYTE CALIGNED INIT (8),
      715    17150    2            2 *       CHAR (8) CALIGNED INIT ('REVISION') ;
      716    17151           %FPT_OPEN (FPTN  = OPEN_DECKFILE,
      717    17152                      ACS   = DIRECT,
      718    17153                      DCB   = M$DECKFILE,
      719    17154                      FUN   = IN,
      720    17155                      ORG   = KEYED,
      721    17156                      SHARE = IN) ;
      722    17265           %FPT_READ (FPTN  = GET_IFAD_VERSION,
      723    17266                      BUF   = TOT$IFAD,
      724    17267                      DCB   = M$DECKFILE,
      725    17268                      KEY   = IFAD_KEY,
      726    17269                      KEYS  = YES,
      727    17270                      WAIT  = YES) ;
      728    17309           %FPT_CLOSE (FPTN = CLOSE_DECKFILE,
      729    17310                       DCB  = M$DECKFILE) ;
      730    17352           %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:28   
      731    17353        /* Code */
      732    17354
      733    17355    2      CALL M$OPEN (OPEN_DECKFILE) ALTRET (ERROR) ;
      734    17356    2      CALL M$READ (GET_IFAD_VERSION) ALTRET (ERROR) ;
      735    17357    2      CALL M$CLOSE (CLOSE_DECKFILE) ALTRET (ERROR) ;
      736    17358    2      RETURN ;
      737    17359
      738    17360    2   ERROR:
      739    17361    2      TOT_ERROR_CODE.ERR# = %E$NODKFLREV ;
      740    17362    2      TOLTS_GETCMD.ERR_CODE = TOT_ERROR_CODE;
      741    17363    2      TOLTS_GETCMD.F1_ = VECTOR (TOT$TOLTS.DECKFILE);
      742    17364    2      TOLTS_GETCMD.F2_ = VECTOR (TOT$TOLTS.LINK_VERSION);
      743    17365    2      TOLTS_GETCMD.FLGLEV# = 4;
      744    17366    2      CALL XUG$ERRMSG (TOLTS_GETCMD);
      745    17367    2      CALL M$ERR ;
      746    17368
      747    17369    2   END GET_IFAD_VERSION ;
      748    17370        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:29   
      749    17371        /*I* NAME:         IDENTIFY_DECKFILE
      750    17372             AUTHOR:       Scott S. Sheppard
      751    17373             INTERFACE:    CONCAT
      752    17374                           TOT$CONSOLE_OUT
      753    17375                           SUBSTR
      754    17376             INPUT:        TOT$TOLTS.DECKFILE
      755    17377                           TOT$IFAD.VERSION
      756    17378             OUTPUT:       OUTPUT_BUFFER
      757    17379             DESCRIPTION:  This procedure issues the message that identifies
      758    17380                           the deckfile being accessed.
      759    17381        */
      760    17382
      761    17383    1   IDENTIFY_DECKFILE: PROC ;
      762    17384
      763    17385    2      DCL OUTPUT_BUFFER CHAR (80) STATIC CALIGNED ;
      764    17386
      765    17387        /* Code */
      766    17388
      767    17389    2      IF TOT$IFAD.VERSION = ' '
      768    17390    2      THEN CALL CONCAT (OUTPUT_BUFFER,
      769    17391    2                 '***Deckfile: ',
      770    17392    2                 SUBSTR (TOT$TOLTS.DECKFILE.FID, 0, TOT$TOLTS.DECKFILE.LGTH)) ;
      771    17393    2      ELSE CALL CONCAT (OUTPUT_BUFFER,
      772    17394    2                 '***Deckfile: ',
      773    17395    2                 SUBSTR (TOT$TOLTS.DECKFILE.FID, 0, TOT$TOLTS.DECKFILE.LGTH),
      774    17396    2                 ' (IFAD Release: ',
      775    17397    2                 TOT$IFAD.VERSION,
      776    17398    2                 ')') ;
      777    17399    2      CONSOLE_FPT.BUF_ = VECTOR (OUTPUT_BUFFER) ;
      778    17400    2      CALL TOT$CONSOLE_OUT ;
      779    17401    2      RETURN ;
      780    17402
      781    17403    2   END IDENTIFY_DECKFILE ;
      782    17404    1   END TOT$MAIN ;

PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:30   
--  Include file information  --

   XUH_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOT_TOLTS_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOT$MAIN.

   Procedure TOT$MAIN requires 367 words for executable code.
   Procedure TOT$MAIN requires 10 words of local(AUTO) storage.

    No errors detected in file TOT$MAIN.:E05TSI    .

PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:31   

 Object Unit name= TOT$MAIN                                   File name= TOT$MAIN.:E05TOU
 UTS= JUL 30 '97 06:36:21.84 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none  1716   3264  TOT$MAIN
    2   DCB   even  none    98    142  M$DECKFILE
    3   DCB   even  none     0      0  M$LM
    4   DCB   even  none     0      0  M$DO
    5   DCB   even  none     0      0  M$LO
    6  RoData even  UTS     20     24  TOT$MAIN
    7   Proc  even  none   367    557  TOT$MAIN
    8  RoData even  none    28     34  TOT$MAIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     7      0   yes            yes      Main       0  TOT$MAIN

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1     46  TOLTS_GETCMD                       1    214  TOT$DMC
    1    224  TOT$IFAD                           1    232  TOT$REINITIALIZE
    1    234  TOT$TOLTS
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:32   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XTX$ADAPT
         yes           Std       0 TOT$ROOT
         yes           Std       0 TOF$REMEMBER_SFR
         yes           Std       0 TOF$REMEMBER_SISR
 yes     yes           Std       2 XUG$INIT
 yes     yes           Std       1 XUG$ERRMSG
 yes     yes           Std       1 XUG$SETERRMSG
         yes          Async      0 TOF$FAULTS
         yes          Async      0 TOE$EVENT_HANDLER
         yes          Async      0 TOB$BREAK_HANDLER
         yes           Std       3 TOT$ASCII_BCD
         yes           Std       0 TOT$CONSOLE_OUT
                       nStd      0 X66_MAUTO
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_MARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$JIT$                                B$TCB$
     B_VERSION                             CONSOLE_FPT                           TOLTS_ROOT_NODE
     M$DECKFILE                            M$LM                                  M$DO
     M$LO                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:33   


        1        1        /*M* TOT$MAIN     Total On-Line Testing System MAIN procedure */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P* NAME:         TOT$MAIN
       12       12             AUTHOR:       Scott S. Sheppard
       13       13             PURPOSE:      TOLTS Main Procedure
       14       14             DESCRIPTION:  Main program for the Total On-Line Testing System
       15       15             REFERENCE:    CP-6 Release D0E0
       16       16             LAST UPDATE:  03/05/86
       17       17        */
       18       18
       19       19        /*F* NAME:         TOT$MAIN
       20       20             PURPOSE:      The initial entry for CP6 into TOLTS.
       21       21             DESCRIPTION:  CP-6 enters TOLTS  though this  routine.  Once
       22       22                           called,  this  routine   does  some  one  time
       23       23                           initialization  and setup  for TOLTS  and then
       24       24                           transfer  control to TOT$ROOT.   From then on,
       25       25                           TOT$ROOT will  asynchronously handle accepting
       26       26                           and processing test requests.
       27       27             REFERENCE:    CP-6 Release C0K0
       28       28        */
       29       29        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:34   
       30       30        /*D* NAME:         TOT$MAIN
       31       31             ENTRY:        Main entry point into TOLTS for CP6.
       32       32             INTERFACE:    TOT$ROOT
       33       33             DESCRIPTION:
       34       34
       35       35        The  overview documentation for  TOLTS to be  presented here will
       36       36        consist of (1) an overview from  a user's point of view, and will
       37       37        be suited for general distribution  in a field manual, and (2) an
       38       38        overview  of the TOLTS  program logic from  a designer's point of
       39       39        view.
       40       40
       41       41        DESCRIPTION OF CP6 TOLTS FUNCTIONALITY
       42       42
       43       43        TOLTS is the executive program  for an online Test and Diagnostic
       44       44        system which is designed to maximize the availability of a system
       45       45        to  a customer.  It  provides a comprehensive  test capability of
       46       46        the  Honeywell  L66  hardware  in  an  environment  which  allows
       47       47        concurrent customer operation.  The test programs themselves have
       48       48        evolved over the years in the Honeywell GCOS III environment, and
       49       49        are currently in use on Honeywell's GCOS, Multics and CP6 sites.
       50       50
       51       51        The following test subsystems are available to the CP6 site:
       52       52
       53       53             1.  POLTS--peripheral testing
       54       54             2.  MOLTS--MPC testing
       55       55             3.  SOLTS--CPU testing
       56       56             4.  COLTS--L6 FEP testing
       57       57             5.  PACT--EIS CPU confidence test
       58       58             6.  TURTLE--terminal test
       59       59
       60       60        Much care has been taken  to ensure that the user (FED) interface
       61       61        between  CP6 TOLTS closely  resembles that interface  on GCOS and
       62       62        Multics systems.  Thus except  for logon and startup differences,
       63       63        a FED user can run both GCOS, Multics and CP6 TOLTS.
       64       64
       65       65        A CP6  system comes with TOLTS; however,  all the test pages that
       66       66        run  under  TOLTS  must  be  separately  installed by FED for the
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:35   
       67       67        customers  who have a  maintenance contract.  The  test pages are
       68       68        shipped  to designated  sites on  an IFAD(Integrated Firmware and
       69       69        Diagnostic)  tape which is  used to build  the file of test pages
       70       70        called the Deckfile.
       71       71
       72       72        Once  the Deckfile  is installed,  TOLTS can  be run from any CP6
       73       73        account  with  the  proper  priviledge.   Note that TOLTS need no
       74       74        longer  run from  the system  console only.   It is intended that
       75       75        TOLTS be run through  a CP6 timesharing terminal.  However, there
       76       76        is  a provision for  still running TOLTS  from the system console
       77       77        using  a Console Ghost.   This alternative is  not recommended or
       78       78        necessary.
       79       79
       80       80        The principle difference between TOLTS on a GCOS and a CP6 system
       81       81        is that  CP6 TOLTS does not do  its own peripheral allocation for
       82       82        testing  as  GCOS  TOLTS  does.   Instead,  a  peripheral must be
       83       83        deallocated(or partitioned) from the system by an operator before
       84       84        TOLTS  is started.  Once  this is done,  TOLTS operation for both
       85       85        systems  becomes  similar.   The   SYSCON  program   is  used  to
       86       86        partition and return devices to the system.
       87       87
       88       88        Following  is a  general scenario  for installing  TOLTS and then
       89       89        running peripheral T&D:
       90       90
       91       91             1.  The  CP6 PO tape shipped to  the customer site will have
       92       92                 on it the following:
       93       93                 a.  TOLTS run unit.
       94       94                 b.  DEER  run unit.
       95       95                 c.  TURTLE run unit.
       96       96                 d.  DEERHELP data file.
       97       97             2.  All of the above will reside in :SYS as a result of
       98       98                 the normal CP6 installation process.
       99       99             3.  As  part of the installation  process, a special account
      100      100                 will be created  for  the  use of FED. It will remain on
      101      101                 system at the discretion of the system's manager.
      102      102             4.  The  FER, in order to completely  install the T&D system
      103      103                 needs to  do the  following (all  with the  cooperation of the
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:36   
      104      104                 system manager):
      105      105                 a.  Logon to the special FED account.
      106      106                 b.  Mount the IFAD tape which was sent to the site from
      107      107                     Phoenix with the firmware and offline T&D tapes.
      108      108                 c.  Run DEER which will read the tape and create
      109      109                     a disk file in  the  current file management account
      110      110                     called TANDD_DECK_FILE_ID  which will then  contain all the
      111      111                     tests for the site.
      112      112                 e.  Dismount the IFAD tape.
      113      113             5.  The procedure to run peripheral tests differs most from
      114      114                 GCOS so it will be elaborated on here.  See the field
      115      115                 document for instructions for COLTS and SOLTS.
      116      116                 The following procedure needs to be done in coopertation
      117      117                 with a customer operator:
      118      118                 a.   Have  the  operator  partition  the perpheral using
      119      119                      SYSCON.
      120      120                 b.  Logon to the FED account and type the following:
      121      121                     !PRIV TND
      122      122                     !DIR .:SYS
      123      123                     !TOLTS
      124      124                     --tolts logon message comes here
      125      125                     ???TEST P00801
      126      126                 c.  CP6 will now double check and ask the operator for
      127      127                     permission  to  run  peripheral  T&D.  He can either
      128      128                     allow or disallow it via a console KEYIN.
      129      129                 d.   POLTS will  then assume  control and  the operating
      130      130                     interface from  that point  on is  the same  as it  is on GCOS
      131      131                     systems.
      132      132                 e.  On completion of  the test, have the operator return
      133      133                     the peripheral to the system with SYSCON and logoff.
      134      134                 f.  The above scenario applies to MOLTS testing also.
      135      135                 g.  SOLTS, COLTS and PACT testing more closely resemble
      136      136                     GCOS operation.
      137      137
      138      138        PACT provides a quick confidence test of the EIS portion of a L66
      139      139        CPU.   It runs very  quickly and while  being very comprehensive,
      140      140        provides  little  insight  into  the  exact nature of the problem
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:37   
      141      141        other  than one  exists.  When  one does  exit, SOLTS  is used to
      142      142        further  isolate it.  PACT  is started from  TOLTS using the same
      143      143        syntax that GCOS uses, and provides the same cycling and looping
      144      144        options.
      145      145
      146      146        TURTLE provides a test of  CP6 supported terminals.  It is merely
      147      147        a  terminal  exerciser  and  provides  no  failure diagnosis.  It
      148      148        provides  a  standard  set  of  output  to  test  a suspected bad
      149      149        terminal.
      150      150
      151      151        DEER is the  Deckfile Editor Routine  used to build and edit the
      152      152        CP-6 deckfile, normally, TANDD_DECK_FILE_ID.:FED.
      153      153
      154      154        Additional  operational information  can be  found in  the online
      155      155        TOLTS HELP facility and in the TOLTS field manual.
      156      156
      157      157
      158      158        PROGRAM LOGIC DESCRIPTION--
      159      159
      160      160        The  TOLTS run unit  is linked together,  combining the following
      161      161        files:
      162      162
      163      163               TOB$BREAK_HANDLER
      164      164               TOC$COLTS
      165      165               TOD$DISPATCHER
      166      166               TOE$EVENT_HANDLER
      167      167               TOF$FAULTS
      168      168               TOF$SFR
      169      169               TOF$SISR
      170      170               TOG$GCOS_MMES
      171      171               TOK$CCALL
      172      172               TOL$BAD_CARD
      173      173               TOL$CLEAR_DATA
      174      174               TOL$FREE_BUFFER
      175      175               TOL$GET_DATA
      176      176               TOL$GET_NEXT_DCW
      177      177               TOL$LOADER
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:38   
      178      178               TOM$MOLTS
      179      179               TOO$TOLTS_MMES
      180      180               TOP$POLTS
      181      181               TOQ$DEBUG
      182      182               TOS$RSW2
      183      183               TOS$SOLTS
      184      184               TOT$ASCII_BCD
      185      185               TOT$BCD_ASCII
      186      186               TOT$MAIN
      187      187               TOT$OCTASC
      188      188               TOT$ROOT
      189      189               TOT$SOLTS_SNUMB
      190      190               TOX$ERR
      191      191
      192      192        In  addition  to  the  above,  the  following  files are integral
      193      193        portions of TOLTS, but are not linked into the run unit:
      194      194
      195      195             TOT_TOLTS_M          Global Substitutions and Macros
      196      196             TOT_RQSTS_E          Substitutions used in Request Parsing
      197      197             TOT_NODES_D          Partridge Syntax Definition for TOLTS
      198      198             TO_PERR_C            Processor Error Messages
      199      199             TO_SCODE_C           TOLTS Screech codes
      200      200             TO_TOLTS_HELP        HERMAN help message text
      201      201
      202      202        In addition to TOLTS, 2 other run units are shipped with a CP6 PO
      203      203        tape:   (1) TURTLE    and    (2) DEER.     Extensive documentatin
      204      204        on these will not provided here;  the link file for each of these
      205      205        should define what files are used to build each of these.
      206      206
      207      207        The main idea behind the implementation of CP6 TOLTS is that test
      208      208        pages and the subexecutives to  drive these will be common to all
      209      209        L66 operating  sysems, and will distributed  to GCOS, MULTICS and
      210      210        CP6 sites via an  IFAD (Integrated Firmware and Diagnostic) tape.
      211      211        The subexecs and test pages have their own well defined operating
      212      212        interface that is totally transparent to CP6 TOLTS.  The subexecs
      213      213        provide  the  interface  between  the  test  pages  and  the host
      214      214        operating  system.   This  is  done  by using the MME(Master Mode
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:39   
      215      215        Entry) instruction.  This instruction creates are hardware fault,
      216      216        and  provides  a  clean  interface  between  the subexecs and CP6
      217      217        TOLTS.  A MME  is executed anytime there is a  need for a service
      218      218        of  the operating  system.  The  MME calling  sequences between a
      219      219        subexec and a host operating system is well defined, and the same
      220      220        for all operating systems.  It is the job of the interface module
      221      221        on an operating systme to provide the service requested in a MME.
      222      222
      223      223        Thus,  everything revolves around  the Fault Handler  in CP6.  It
      224      224        traps the MME instructions, decides which MME it is and calls the
      225      225        appropriate  MME  service  routine,  and  finally  returns to the
      226      226        subexec  when the  MME service  is complete.   Following is the a
      227      227        fairly detailed sequence of  starting TOLTS and executing one MME
      228      228        instruction:
      229      229
      230      230             1.  User logs on and enters !TOLTS
      231      231             2.  TOLTS run unit is loaded in memory by CP6 and put into
      232      232                 execution.   It  gives  its  logon  salutation and logon
      233      233                 message.
      234      234             3.  In  the process of doing  this, TOLTS initializes itself by
      235      235                 establishing condition handlers for (1) all faults,
      236      236                 (2)  events and  (3) breaks.  It then  goes back  to the terminal
      237      237                 to get the first test request.
      238      238             4.  User enters the first request, specifying a subexc by
      239      239                 entering ???TEST P00801.
      240      240             5.  After the request is validated, 2 dispatcher entries are built
      241      241                 one to initialize a subexec and the second containing
      242      242                 the initial test request.  TOLTS then transfers to the
      243      243                 Dispatcher to service the first one.
      244      244             6.   The  Dispatcher  will  allocate  memory  to load in the subexec
      245      245                 requested, and then call the Loader to read it in from
      246      246                 the Deckfile and relocate it into the TOLTS run unit
      247      247                 dynamically.  (This may take a while on a loaded system
      248      248                 because of the number of disk I/O required and the
      249      249                 attendant  processing.)   The  Dispatcher then transfers into
      250      250                 the entry point for the subexec which then assumes
      251      251                 control.
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:40   
      252      252             7.  The subexec initializes itself  and then does a MME for
      253      253                 its  first  sevice  request.   The  MME  fault  is first trapped by
      254      254                 the  CP6 fault handler  which will in  turn return it to the
      255      255                 TOLTS fault Handler.  The Fault Handler decides
      256      256                 which  MME  it  is  and  calls  one  of  the MME service routines to
      257      257                 service it.  When it completes, control is returned to
      258      258                 the Fault Handler which will return information
      259      259                 to  the  subexec  and  then  return  control to it.  The
      260      260                 subexec then resumes processing.
      261      261             8.  The above is a real simplification of the the fault
      262      262                 handling process.  The fault handler is able to
      263      263                 differentiate between MME faults for service requests
      264      264                 and legitimate faults created by a test page which need
      265      265                 to be  handled by the subexecs.  Also,  there is a great deal
      266      266                 of manipulation of the TCB and auto stacks which is
      267      267                 quite complicated and is not detailed here.
      268      268
      269      269        So  in summary,  TOLTS revolves  around the  fault handler  and a
      270      270        series  of  modules  which  contain  MME  service  routines.  The
      271      271        remaining  modules  provide  executive  type services required to
      272      272        support  the service  routines.  The  details of  all of this are
      273      273        contained in the documentation for the individual modules.
      274      274        */
      275      275        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:41   
      276      276        TOT$MAIN: PROC MAIN ;

    276  7 000000   000000 700200 xent  TOT$MAIN     TSX0  ! X66_MAUTO
         7 000001   000012 000000                    ZERO    10,0

      277      277
      278      278        /* Include Files */
      279      279
      280      280           %INCLUDE B$JIT ;
      281      883           %INCLUDE B$OBJECT_C ;
      282     4313           %INCLUDE CP_6 ;
      283     9872           %INCLUDE CP_6_SUBS ;
      284    10412           %INCLUDE TOT_TOLTS_M ;
      285    11530           %INCLUDE TO_PERR_C ;
      286    12115           %INCLUDE XUG_ENTRY ;
      287    12146           %INCLUDE XU_MACRO_C ;
      288    15252           %INCLUDE XUH_MACRO_C;
      289    15336
      290    15337        /* Variables */
      291    15338
      292    15339           %B$ALT ;
      293    15347           %B$TCB ;
      294    15350           %F$DCB ;
      295    15407           %VLP_ERRCODE (FPTN = TOT_ERROR_CODE,
      296    15408                         FCG  = 'TO',
      297    15409                         MID  = 'T',
      298    15410                         SEV  = 4) ;
      299    15455           %XUG_INIT (NAME              = TOLTS_INIT,
      300    15456                      ALWAYS_SET_PROMPT = YES,
      301    15457                      COMMANDS          = YES,
      302    15458                      GOODCMD           = YES,
      303    15459                      SYNTAX            = YES);
      304    15872           %XUG_GETCMD (STCLASS           = "STATIC SYMDEF",
      305    15873                        NAME              = TOLTS_GETCMD,
      306    15874                        ALWAYS_SET_PROMPT = YES,
      307    15875                        XUH               = TOLTS_HELP,
      308    15876                        DCB2_PARAM        = M$DO,
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:42   
      309    15877                        NODES             = TOLTS_ROOT_NODE);
      310    16215           %XUH_PARAM (NAME     = TOLTS_HELP,
      311    16216                       PROCNAME = TOLTS_NAME);
      312    16277           %VLP_NAME (FPTN = TOLTS_NAME,
      313    16278                      NAME = 'TOLTS');
      314    16305        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:43   
      315    16306        /* External Variables */
      316    16307
      317    16308    1      DCL B$JIT$               PTR SYMREF ALIGNED ;
      318    16309    1      DCL B$TCB$               PTR SYMREF ALIGNED ;
      319    16310    1      DCL 1 B_VERSION SYMREF,
      320    16311    1            2 LGTH             UBIN BYTE UNAL,
      321    16312    1            2 TEXT             CHAR (10) CALIGNED ;
      322    16313           %FPT_WRITE (FPTN    = CONSOLE_FPT,
      323    16314                       STCLASS = SYMREF) ;
      324    16345           %TOT$DMC (STCLASS = "STATIC SYMDEF") ;
      325    16379           %TOT$IFAD (STCLASS = "STATIC SYMDEF") ;
      326    16396    1      DCL TOT$REINITIALIZE     REMEMBER STATIC SYMDEF DALIGNED ;
      327    16397           %TOT$TOLTS (STCLASS = "STATIC SYMDEF") ;
      328    16418           %TOP$TCP;
      329    16506    1      DCL TOLTS_ROOT_NODE SBIN SYMREF ALIGNED;
      330    16507
      331    16508        /* Data Control Blocks */
      332    16509
      333    16510           %M$DCB (ACCT  = %DECKFILE_ACCT,
      334    16511                   ASN   = FILE,
      335    16512                   DCBN  = M$DECKFILE,
      336    16513                   DISP  = NAMED,
      337    16514                   EXIST = OLDFILE,
      338    16515                   FUN   = IN,
      339    16516                   NAME  = %DECKFILE_NAME,
      340    16517                   ORG   = KEYED,
      341    16518                   SHARE = IN) ;
      342    16592    1      DCL M$LM                 DCB ;
      343    16593    1      DCL M$DO                 DCB;
      344    16594    1      DCL M$LO                 DCB;
      345    16595           %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:44   
      346    16596        /* External Entry Points */
      347    16597
      348    16598    1      DCL TOB$BREAK_HANDLER    ENTRY ASYNC ;
      349    16599    1      DCL TOE$EVENT_HANDLER    ENTRY ASYNC ;
      350    16600    1      DCL TOF$FAULTS           ENTRY ASYNC ;
      351    16601    1      DCL TOF$REMEMBER_SFR     ENTRY ;
      352    16602    1      DCL TOF$REMEMBER_SISR    ENTRY ;
      353    16603    1      DCL TOT$ASCII_BCD        ENTRY (3) ;
      354    16604    1      DCL TOT$CONSOLE_OUT      ENTRY ;
      355    16605    1      DCL TOT$ROOT             ENTRY ;
      356    16606           %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:45   
      357    16607        /* *******************
      358    16608           ** Main  Program **
      359    16609           ******************* */
      360    16610
      361    16611    1      REMEMBER RESTART IN TOT$REINITIALIZE ;

  16611  7 000002   000045 635000 7                  EAA     RESTART
         7 000003   000232 452400 1                  STP2    TOT$REINITIALIZE
         7 000004   000233 755000 1                  STA     TOT$REINITIALIZE+1

      362    16612
      363    16613    1      CALL SYSTEM_INITIAL ;

  16613  7 000005   000051 701000 7                  TSX1    SYSTEM_INITIAL
         7 000006   000000 011000                    NOP     0

      364    16614    1      CALL EST_COND_HANDLERS ;

  16614  7 000007   000135 701000 7                  TSX1    EST_COND_HANDLERS
         7 000010   000000 011000                    NOP     0

      365    16615    1      CALL GET_DATA_SEGMENT (%TOO$IO_BUFFER_LGTH, TOT$DMC.TOO$IO_BUFFER) ;

  16615  7 000011   000001 236000 8                  LDQ     1
         7 000012   200006 756100                    STQ     DCB$+1,,AUTO
         7 000013   000002 236000 8                  LDQ     2
         7 000014   200005 756100                    STQ     5,,AUTO
         7 000015   000170 701000 7                  TSX1    GET_DATA_SEGMENT
         7 000016   000000 011000                    NOP     0

      366    16616    1      CALL GET_DATA_SEGMENT (SIZEW (TOP$TCP), TOT$DMC.TOP$TCP) ;

  16616  7 000017   000004 236000 8                  LDQ     4
         7 000020   200006 756100                    STQ     DCB$+1,,AUTO
         7 000021   000005 236000 8                  LDQ     5
         7 000022   200005 756100                    STQ     5,,AUTO
         7 000023   000170 701000 7                  TSX1    GET_DATA_SEGMENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:46   
         7 000024   000000 011000                    NOP     0

      367    16617    1      CALL TOF$REMEMBER_SFR ;

  16617  7 000025   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 000026   000000 701000 xent               TSX1    TOF$REMEMBER_SFR
         7 000027   000000 011000                    NOP     0

      368    16618    1      CALL TOF$REMEMBER_SISR ;

  16618  7 000030   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 000031   000000 701000 xent               TSX1    TOF$REMEMBER_SISR
         7 000032   000000 011000                    NOP     0

      369    16619    1      CALL GET_TOLTS_VERSION ;

  16619  7 000033   000221 701000 7                  TSX1    GET_TOLTS_VERSION
         7 000034   000000 011000                    NOP     0

      370    16620    1      CALL SYSTEM_START_UP ;

  16620  7 000035   000267 701000 7                  TSX1    SYSTEM_START_UP
         7 000036   000000 011000                    NOP     0

      371    16621    1      CALL GET_DECKFILE_FID ;

  16621  7 000037   000344 701000 7                  TSX1    GET_DECKFILE_FID
         7 000040   000000 011000                    NOP     0

      372    16622    1      CALL GET_IFAD_VERSION ;

  16622  7 000041   000423 701000 7                  TSX1    GET_IFAD_VERSION
         7 000042   000000 011000                    NOP     0

      373    16623    1      CALL IDENTIFY_DECKFILE ;

  16623  7 000043   000470 701000 7                  TSX1    IDENTIFY_DECKFILE
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:47   
         7 000044   000000 011000                    NOP     0

      374    16624
      375    16625    1   RESTART:
      376    16626    1      CALL TOT$ROOT ;

  16626  7 000045   000002 631400 xsym  RESTART      EPPR1   B_VECTNIL+2
         7 000046   000000 701000 xent               TSX1    TOT$ROOT
         7 000047   000000 011000                    NOP     0
         7 000050   000556 710000 7                  TRA     s:17404

      377    16627
      378    16628        /* *******************
      379    16629           ** End  Of  Main **
      380    16630           ******************* */
      381    16631        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:48   
      382    16632        /*I* NAME:         SYSTEM_INITIAL
      383    16633             AUTHOR:       Scott S. Sheppard
      384    16634             PURPOSE:      One time Initialization for TOLTS
      385    16635             INTERFACE:    XUR$INIT
      386    16636                           XUR$SETERRMSG
      387    16637                           M$SPRIV
      388    16638             PARAMETERS:   None passed.
      389    16639             DATA:         No external data accessed.
      390    16640             DESCRIPTION:  XUR$INIT is  called to set up  future calls to
      391    16641                           library  service  routines.  It  establishes a
      392    16642                           work  area  called  the  Parse  Control Block.
      393    16643                           XUR$SETEERMSG    is   called    to   establish
      394    16644                           :ERRMSG.:SYS  as the  error message  file from
      395    16645                           which  to  read  error  messages.  This is the
      396    16646                           default but  this call is made  anyway so that
      397    16647                           during  development  of  TOLTS, the ERROR_FILE
      398    16648                           equate may be changed and TOT$MAIN recompiled.
      399    16649                           This  allows developers  to easily  change the
      400    16650                           error message file to  a local one for testing
      401    16651                           of new error  messages. M$SPRIV is then called
      402    16652                           to  ensure that  a user  has TND privilege. If
      403    16653                           the  user is authorized  for TND privilege, he
      404    16654                           need   not  invoke  it   explicitly.   If  not
      405    16655                           authorized,  M$SPRIV  altreturns  and TOLTS is
      406    16656                           shut down.  Note that other privileges such as
      407    16657                           those  for  partitioning  peripherals  are not
      408    16658                           required, but may be necessary for some users.
      409    16659        */
      410    16660        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:49   
      411    16661    1   SYSTEM_INITIAL: PROC ;

  16661  7 000051   200004 741300       SYSTEM_INIT* STX1  ! 4,,AUTO

      412    16662
      413    16663           %FPT_PRIV (FPTN = TOLTS_PRIVS,
      414    16664                      AUTH = YES,
      415    16665                      PRIV = %PR_TND#);
      416    16680           %VLP_NAME (FPTN = ERR_FID,
      417    16681                      LEN  = 31,
      418    16682                      NAME = %ERROR_FILE) ;
      419    16709
      420    16710        /* Code */
      421    16711
      422    16712    2      CALL XUG$INIT (TOLTS_GETCMD, TOLTS_INIT) WHENALTRETURN

  16712  7 000052   000006 630400 8                  EPPR0   6
         7 000053   000020 631400 xsym               EPPR1   B_VECTNIL+16
         7 000054   000000 701000 xent               TSX1    XUG$INIT
         7 000055   000057 702000 7                  TSX2    s:16714
         7 000056   000071 710000 7                  TRA     s:16718

      423    16713    3           DO ;

      424    16714    3              TOLTS_GETCMD.ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

  16714  7 000057   000000 470400 xsym               LDP0    B$TCB$
         7 000060   000000 471500                    LDP1    0,,PR0
         7 000061   100102 236100                    LDQ     66,,PR1
         7 000062   000056 756000 1                  STQ     TOLTS_GETCMD+8

      425    16715    3              CALL XUG$ERRMSG (TOLTS_GETCMD);

  16715  7 000063   000006 630400 8                  EPPR0   6
         7 000064   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000065   000000 701000 xent               TSX1    XUG$ERRMSG
         7 000066   000000 011000                    NOP     0
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:50   

      426    16716    3              CALL M$ERR ;

  16716  7 000067   000002 713400                    CLIMB   err
         7 000070   000000 401760                    pmme    nvectors=0

      427    16717    3           END /* WHENALTRETURN */ ;

      428    16718    2      TOLTS_GETCMD.ERRMFID$ = ADDR (ERR_FID);

  16718  7 000071   000010 236000 8                  LDQ     8
         7 000072   000050 756000 1                  STQ     TOLTS_GETCMD+2

      429    16719    2      CALL XUG$SETERRMSG (TOLTS_GETCMD) WHENALTRETURN

  16719  7 000073   000006 630400 8                  EPPR0   6
         7 000074   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000075   000000 701000 xent               TSX1    XUG$SETERRMSG
         7 000076   000100 702000 7                  TSX2    s:16721
         7 000077   000112 710000 7                  TRA     s:16725

      430    16720    3           DO ;

      431    16721    3              TOLTS_GETCMD.ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

  16721  7 000100   000000 470400 xsym               LDP0    B$TCB$
         7 000101   000000 471500                    LDP1    0,,PR0
         7 000102   100102 236100                    LDQ     66,,PR1
         7 000103   000056 756000 1                  STQ     TOLTS_GETCMD+8

      432    16722    3              CALL XUG$ERRMSG (TOLTS_GETCMD);

  16722  7 000104   000006 630400 8                  EPPR0   6
         7 000105   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000106   000000 701000 xent               TSX1    XUG$ERRMSG
         7 000107   000000 011000                    NOP     0

PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:51   
      433    16723    3              CALL M$ERR ;

  16723  7 000110   000002 713400                    CLIMB   err
         7 000111   000000 401760                    pmme    nvectors=0

      434    16724    3           END /* WHENALTRETURN */ ;

      435    16725    2      CALL M$SPRIV (TOLTS_PRIVS) WHENALTRETURN

  16725  7 000112   002716 630400 1                  EPPR0   TOLTS_PRIVS
         7 000113   420012 713400                    CLIMB   alt,+8202
         7 000114   400000 401760                    pmme    nvectors=1
         7 000115   000117 702000 7                  TSX2    s:16727
         7 000116   000133 710000 7                  TRA     s:16732

      436    16726    3           DO ;

      437    16727    3              TOT_ERROR_CODE.ERR# = %E$NOTOLTSPRIV ;

  16727  7 000117   000000 236000 1                  LDQ     TOT_ERROR_CODE
         7 000120   000011 376000 8                  ANQ     9
         7 000121   004050 276007                    ORQ     2088,DL
         7 000122   000000 756000 1                  STQ     TOT_ERROR_CODE

      438    16728    3              TOLTS_GETCMD.ERR_CODE = TOT_ERROR_CODE;

  16728  7 000123   000000 236000 1                  LDQ     TOT_ERROR_CODE
         7 000124   000056 756000 1                  STQ     TOLTS_GETCMD+8

      439    16729    3              CALL XUG$ERRMSG (TOLTS_GETCMD) ;

  16729  7 000125   000006 630400 8                  EPPR0   6
         7 000126   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000127   000000 701000 xent               TSX1    XUG$ERRMSG
         7 000130   000000 011000                    NOP     0

      440    16730    3              CALL M$EXIT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:52   

  16730  7 000131   000001 713400                    CLIMB   exit
         7 000132   000000 401760                    pmme    nvectors=0

      441    16731    3           END /* WHENALTRETURN */ ;

      442    16732    2      RETURN ;

  16732  7 000133   200004 221300                    LDX1  ! 4,,AUTO
         7 000134   000001 702211                    TSX2  ! 1,X1

      443    16733
      444    16734    2   END SYSTEM_INITIAL;
      445    16735        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:53   
      446    16736        /*I* NAME:         EST_COND_HANDLERS
      447    16737             INTERFACE:    M$TRAP
      448    16738                           M$EVENT
      449    16739                           M$INT
      450    16740             DESCRIPTION:  The above Monitior Service Routines are called
      451    16741                           to  establish  with  CP6  the addresses of the
      452    16742                           routines  which   will  handle  the  exception
      453    16743                           conditons  for   TOLTS.   All  information  is
      454    16744                           already in the FPTs.
      455    16745
      456    16746                           EST_COND_HANDLERS is  called to establish with
      457    16747                           CP6  the  TOLTS  handlers  for  the  following
      458    16748                           conditions--
      459    16749                             All fault conditions.
      460    16750                             All event completions.
      461    16751                             Any "break" condition from the terminal.
      462    16752
      463    16753                           M$TRAP    establishes   TOF$FAULTS    as   the
      464    16754                           asynchronous  routine to  be entered  when any
      465    16755                           fault condition occurs within TOLTS.
      466    16756
      467    16757                           M$EVENT  establishes TOE$EVENT_HANDLER  as the
      468    16758                           asynchrounous  routine to be  entered when any
      469    16759                           event completes.
      470    16760
      471    16761                           M$INT  established  TOB$BREAK_HANDLER  as  the
      472    16762                           asynchronous  routine  to  be entered whenever
      473    16763                           the break key is hit on the terminal.
      474    16764        */
      475    16765        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:54   
      476    16766    1   EST_COND_HANDLERS: PROC;

  16766  7 000135   200004 741300       EST_COND_HA* STX1  ! 4,,AUTO

      477    16767
      478    16768           %FPT_TRAP (FPTN         = SETUP_TRAP,
      479    16769                      ARITHMETIC   = TOF$FAULTS,
      480    16770                      OVERFLOW     = TRAP,
      481    16771                      DIVIDE_CHECK = TRAP,
      482    16772                      PROGRAMMED   = TOF$FAULTS,
      483    16773                      MME          = TRAP,
      484    16774                      DERAIL       = TRAP,
      485    16775                      FAULT_TAG    = TRAP,
      486    16776                      ERRORS       = TOF$FAULTS,
      487    16777                      MEMORY       = TRAP,
      488    16778                      COMMAND      = TRAP,
      489    16779                      LOCKUP       = TRAP,
      490    16780                      IPR          = TRAP,
      491    16781                      MISSING_SEG  = TRAP,
      492    16782                      MISSING_PAGE = TRAP,
      493    16783                      SECURITY_1   = TRAP,
      494    16784                      SECURITY_2   = TRAP,
      495    16785                      HARDWARE     = TRAP,
      496    16786                      HISTORY_REGS = YES,
      497    16787                      PMME         = TOF$FAULTS);
      498    16810           %FPT_EVENT (FPTN   = SETUP_EVENT,
      499    16811                       UENTRY = TOE$EVENT_HANDLER);
      500    16825           %FPT_INT (FPTN   = SETUP_BREAK,
      501    16826                     UENTRY = TOB$BREAK_HANDLER);
      502    16840           %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:55   
      503    16841        /* Code */
      504    16842
      505    16843    2      CALL M$TRAP (SETUP_TRAP) ALTRET (ERROR) ;

  16843  7 000136   002732 630400 1                  EPPR0   SETUP_TRAP
         7 000137   410004 713400                    CLIMB   alt,+4100
         7 000140   400400 401760                    pmme    nvectors=2
         7 000141   000154 702000 7                  TSX2    ERROR

      506    16844    2      CALL M$EVENT (SETUP_EVENT) ALTRET (ERROR) ;

  16844  7 000142   002744 630400 1                  EPPR0   SETUP_EVENT
         7 000143   410001 713400                    CLIMB   alt,+4097
         7 000144   400000 401760                    pmme    nvectors=1
         7 000145   000154 702000 7                  TSX2    ERROR

      507    16845    2      CALL M$INT (SETUP_BREAK) ALTRET (ERROR) ;

  16845  7 000146   002750 630400 1                  EPPR0   SETUP_BREAK
         7 000147   410002 713400                    CLIMB   alt,+4098
         7 000150   400000 401760                    pmme    nvectors=1
         7 000151   000154 702000 7                  TSX2    ERROR

      508    16846    2      RETURN;

  16846  7 000152   200004 221300                    LDX1  ! 4,,AUTO
         7 000153   000001 702211                    TSX2  ! 1,X1

      509    16847
      510    16848    2   ERROR:
      511    16849    2      TOLTS_GETCMD.ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

  16849  7 000154   000000 470400 xsym  ERROR        LDP0    B$TCB$
         7 000155   000000 471500                    LDP1    0,,PR0
         7 000156   100102 236100                    LDQ     66,,PR1
         7 000157   000056 756000 1                  STQ     TOLTS_GETCMD+8

PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:56   
      512    16850    2      CALL XUG$ERRMSG (TOLTS_GETCMD);

  16850  7 000160   000006 630400 8                  EPPR0   6
         7 000161   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000162   000000 701000 xent               TSX1    XUG$ERRMSG
         7 000163   000000 011000                    NOP     0

      513    16851    2      CALL M$ERR ;

  16851  7 000164   000002 713400                    CLIMB   err
         7 000165   000000 401760                    pmme    nvectors=0

      514    16852
      515    16853    2   END EST_COND_HANDLERS;

  16853  7 000166   200004 221300                    LDX1  ! 4,,AUTO
         7 000167   000001 702211                    TSX2  ! 1,X1

      516    16854        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:57   
      517    16855        /*I*  NAME:        GET_DATA_SEGMENT
      518    16856              AUTHOR:      Scott S. Sheppard
      519    16857              PURPOSE:     Gets Dynamic Memory Space
      520    16858              INTERFACE:   M$GDS Monitor Service
      521    16859                           M$ERR Monitor Service
      522    16860                           XUG$ERRMSG
      523    16861              PARAMETERS:  WORD_COUNT   - number of words needed by TOLTS
      524    16862                           WORD_VECTOR  - vector to the set of words
      525    16863              DESCRIPTION: This procedure gets a set of dynamic words to be
      526    16864                           used as data area for TOLTS.
      527    16865        */
      528    16866
      529    16867    1   GET_DATA_SEGMENT: PROC (WORD_COUNT, WORD_VECTOR) ;

  16867  7 000170   200004 741300       GET_DATA_SE* STX1  ! 4,,AUTO

      530    16868
      531    16869    2      DCL WORD_COUNT     UBIN WORD ALIGNED ;
      532    16870    2      DCL WORD_VECTOR    BIT (72) DALIGNED ;
      533    16871           %FPT_GDS (FPTN    = GET_BUFFER,
      534    16872                     FREE    = YES) ;
      535    16888
      536    16889        /* Code */
      537    16890
      538    16891    2      GET_BUFFER.V.SEGSIZE# = WORD_COUNT ;

  16891  7 000171   200005 470500                    LDP0    @WORD_COUNT,,AUTO
         7 000172   000000 720100                    LXL0    0,,PR0
         7 000173   002760 440000 1                  SXL0    GET_BUFFER+4

      539    16892    2      GET_BUFFER.RESULTS_ = VECTOR (WORD_VECTOR) ;

  16892  7 000174   000012 235000 8                  LDA     10
         7 000175   200006 236100                    LDQ     @WORD_VECTOR,,AUTO
         7 000176   002756 757000 1                  STAQ    GET_BUFFER+2

      540    16893    2      CALL M$GDS (GET_BUFFER) ALTRET (GET_ERROR) ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:58   

  16893  7 000177   002754 630400 1                  EPPR0   GET_BUFFER
         7 000200   430001 713400                    CLIMB   alt,gds
         7 000201   400400 401760                    pmme    nvectors=2
         7 000202   000205 702000 7                  TSX2    GET_ERROR

      541    16894    2      RETURN ;

  16894  7 000203   200004 221300                    LDX1  ! 4,,AUTO
         7 000204   000001 702211                    TSX2  ! 1,X1

      542    16895
      543    16896    2   GET_ERROR:
      544    16897    2      TOLTS_GETCMD.ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

  16897  7 000205   000000 470400 xsym  GET_ERROR    LDP0    B$TCB$
         7 000206   000000 471500                    LDP1    0,,PR0
         7 000207   100102 236100                    LDQ     66,,PR1
         7 000210   000056 756000 1                  STQ     TOLTS_GETCMD+8

      545    16898    2      CALL XUG$ERRMSG (TOLTS_GETCMD);

  16898  7 000211   000006 630400 8                  EPPR0   6
         7 000212   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000213   000000 701000 xent               TSX1    XUG$ERRMSG
         7 000214   000000 011000                    NOP     0

      546    16899    2      CALL M$ERR ;

  16899  7 000215   000002 713400                    CLIMB   err
         7 000216   000000 401760                    pmme    nvectors=0

      547    16900
      548    16901    2   END GET_DATA_SEGMENT ;

  16901  7 000217   200004 221300                    LDX1  ! 4,,AUTO
         7 000220   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:59   

      549    16902        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:60   
      550    16903        /*I* NAME:         GET_TOLTS_VERSION
      551    16904             AUTHOR:       Scott S. Sheppard
      552    16905             PURPOSE:      Obtains Link Time, Date, and Release
      553    16906             INTERFACE:    M$READ
      554    16907                           M$TIME
      555    16908             PARAMETERS:   None passed.
      556    16909             DATA:         B_VERSION - input
      557    16910                           TOT$TOLTS.LINK_DATE.ASCII - output
      558    16911                           TOT$TOLTS.LINK_DATE.BCD - output
      559    16912                           TOT$TOLTS.LINK_TIME - output
      560    16913                           TOT$TOLTS.LINK_VERSION.LGTH - output
      561    16914                           TOT$TOLTS.LINK_VERSION.TEXT - output
      562    16915             DESCRIPTION:  This  procedure  sets  up  the  TOLTS  version
      563    16916                           information.  The   CP-6  release  version  is
      564    16917                           obtained from a  SYMREF called B_VERSION which
      565    16918                           obtains  its  value  as  part  of  the JCL for
      566    16919                           linking   TOLTS.    However,   the   B_VERSION
      567    16920                           structure does NOT contain the date when TOLTS
      568    16921                           was  linked. This  is obtained  by reading the
      569    16922                           head  record of  the TOLTS  module and culling
      570    16923                           out the link date and time.
      571    16924        */
      572    16925        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:61   
      573    16926    1   GET_TOLTS_VERSION: PROC ;

  16926  7 000221   200004 741300       GET_TOLTS_V* STX1  ! 4,,AUTO

      574    16927
      575    16928    2      DCL 1 BIRTH_KEY CONSTANT,
      576    16929    2            2 * UBIN BYTE CALIGNED INIT (5),
      577    16930    2            2 * CHAR (5)  CALIGNED INIT ('BIRTH') ;
      578    16931    2      DCL CC              UBIN WORD STATIC ALIGNED INIT (6) ;
      579    16932           %B$RUBIRTH (NAME = B_RUBIRTH,
      580    16933                       STCLASS = STATIC) ;
      581    16942           %FPT_READ (FPTN = GET_LINK_DATE,
      582    16943                      BUF  = B_RUBIRTH,
      583    16944                      BIN  = YES,
      584    16945                      DCB  = M$LM,
      585    16946                      KEY  = BIRTH_KEY,
      586    16947                      KEYS = YES,
      587    16948                      WAIT = YES) ;
      588    16987           %FPT_TIME (FPTN   = COMP_LINK_DATE,
      589    16988                      SOURCE = UTS,
      590    16989                      DEST   = ANS,
      591    16990                      DATE   = TOT$TOLTS.LINK_DATE.ASCII,
      592    16991                      TIME   = TOT$TOLTS.LINK_TIME,
      593    16992                      TSTAMP = B_RUBIRTH.CREATE_UTS) ;
      594    17011
      595    17012        /* Code */
      596    17013
      597    17014    2      CALL M$READ (GET_LINK_DATE) ALTRET (ERROR) ;

  17014  7 000222   002766 630400 1                  EPPR0   GET_LINK_DATE
         7 000223   440000 713400                    CLIMB   alt,read
         7 000224   401400 401760                    pmme    nvectors=4
         7 000225   000251 702000 7                  TSX2    ERROR

      598    17015    2      CALL M$TIME (COMP_LINK_DATE) ALTRET (ERROR) ;

  17015  7 000226   003004 630400 1                  EPPR0   COMP_LINK_DATE
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:62   
         7 000227   420004 713400                    CLIMB   alt,+8196
         7 000230   402000 401760                    pmme    nvectors=5
         7 000231   000251 702000 7                  TSX2    ERROR

      599    17016    2      CALL TOT$ASCII_BCD (TOT$TOLTS.LINK_DATE.ASCII, TOT$TOLTS.LINK_DATE.BCD, CC);

  17016  7 000232   000013 630400 8                  EPPR0   11
         7 000233   000021 631400 xsym               EPPR1   B_VECTNIL+17
         7 000234   000000 701000 xent               TSX1    TOT$ASCII_BCD
         7 000235   000000 011000                    NOP     0

      600    17017    2      TOT$TOLTS.LINK_VERSION.LGTH = B_VERSION.LGTH ;

  17017  7 000236   000000 236000 xsym               LDQ     B_VERSION
         7 000237   000022 772000                    QRL     18
         7 000240   000240 552010 1                  STBQ    TOT$TOLTS+4,'10'O

      601    17018    2      TOT$TOLTS.LINK_VERSION.TEXT = SUBSTR (B_VERSION.TEXT, 0, B_VERSION.LGTH) ;

  17018  7 000241   000000 236000 xsym               LDQ     B_VERSION
         7 000242   000033 772000                    QRL     27
         7 000243   000000 620006                    EAX0    0,QL
         7 000244   040000 100440                    MLR     fill='040'O
         7 000245   000000 200010 xsym               ADSC9   B_VERSION                cn=1,n=*X0
         7 000246   000240 600013 1                  ADSC9   TOT$TOLTS+4              cn=3,n=11

      602    17019    2      RETURN ;

  17019  7 000247   200004 221300                    LDX1  ! 4,,AUTO
         7 000250   000001 702211                    TSX2  ! 1,X1

      603    17020
      604    17021    2   ERROR:
      605    17022    2      TOLTS_GETCMD.ERR_CODE = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

  17022  7 000251   000000 470400 xsym  ERROR        LDP0    B$TCB$
         7 000252   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:63   
         7 000253   100102 236100                    LDQ     66,,PR1
         7 000254   000056 756000 1                  STQ     TOLTS_GETCMD+8

      606    17023    2      TOLTS_GETCMD.FLGLEV# = 4;

  17023  7 000255   000004 236003                    LDQ     4,DU
         7 000256   000054 552020 1                  STBQ    TOLTS_GETCMD+6,'20'O

      607    17024    2      CALL XUG$ERRMSG (TOLTS_GETCMD);

  17024  7 000257   000006 630400 8                  EPPR0   6
         7 000260   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000261   000000 701000 xent               TSX1    XUG$ERRMSG
         7 000262   000000 011000                    NOP     0

      608    17025    2      CALL M$ERR ;

  17025  7 000263   000002 713400                    CLIMB   err
         7 000264   000000 401760                    pmme    nvectors=0

      609    17026
      610    17027    2   END GET_TOLTS_VERSION ;

  17027  7 000265   200004 221300                    LDX1  ! 4,,AUTO
         7 000266   000001 702211                    TSX2  ! 1,X1

      611    17028        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:64   
      612    17029        /*I* NAME:         SYSTEM_START_UP
      613    17030             INTERFACE:    M$TIME
      614    17031                           TOT$CONSOLE_OUT
      615    17032             INPUT:        TOT$TOLTS.LINK_VERSION - version used when linked
      616    17033             OUTPUT:       No external data accessed.
      617    17034             DESCRIPTION:  This procedure forms the TOLTS log on salutation
      618    17035                           using the version from the link processor (found
      619    17036                           in the   VERSION SYMREF) and the  date and  time
      620    17037                           of the current day (obtained by calling M$TIME).
      621    17038             FORM: ***TOLTS Executive Version <version> <link date> on <date> at <time>
      622    17039        */
      623    17040
      624    17041    1   SYSTEM_START_UP: PROC;

  17041  7 000267   200004 741300       SYSTEM_STAR* STX1  ! 4,,AUTO

      625    17042
      626    17043    2      DCL 1 ON_DATE STATIC,
      627    17044    2            2 *     CHAR (4) CALIGNED INIT (' on '),
      628    17045    2            2 DATE  CHAR (8) CALIGNED ;
      629    17046    2      DCL ON_DATE_ REDEF ON_DATE CHAR (12) CALIGNED ;
      630    17047    2      DCL 1 AT_TIME STATIC,
      631    17048    2            2 *     CHAR (4) CALIGNED INIT (' at '),
      632    17049    2            2 TIME  CHAR (11) CALIGNED ;
      633    17050    2      DCL AT_TIME_ REDEF AT_TIME CHAR (15) CALIGNED ;
      634    17051    2      DCL 1 LINK_DATE STATIC,
      635    17052    2            2 *     CHAR (1) CALIGNED INIT (' '),
      636    17053    2            2 DATE  CHAR (6) CALIGNED ;
      637    17054    2      DCL LINK_DATE_ REDEF LINK_DATE CHAR (7) CALIGNED ;
      638    17055    2      DCL OUTPUT_BUFFER CHAR (80) STATIC CALIGNED ;
      639    17056           %FPT_TIME (FPTN   = START_TOLTS,
      640    17057                      SOURCE = CLOCK,
      641    17058                      DEST   = LOCAL,
      642    17059                      DATE   = ON_DATE.DATE,
      643    17060                      TIME   = AT_TIME.TIME) ;
      644    17079           %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:65   
      645    17080        /* Code */
      646    17081
      647    17082    2      CALL M$TIME (START_TOLTS) ;

  17082  7 000270   003056 630400 1                  EPPR0   START_TOLTS
         7 000271   020004 713400                    CLIMB   8196
         7 000272   402000 401760                    pmme    nvectors=5

      648    17083    2      LINK_DATE.DATE = TOT$TOLTS.LINK_DATE.ASCII ;

  17083  7 000273   040000 100400                    MLR     fill='040'O
         7 000274   000234 000006 1                  ADSC9   TOT$TOLTS                cn=0,n=6
         7 000275   003027 200006 1                  ADSC9   LINK_DATE                cn=1,n=6

      649    17084    2      CALL CONCAT (OUTPUT_BUFFER,

  17084  7 000276   000240 236000 1                  LDQ     TOT$TOLTS+4
         7 000277   000011 772000                    QRL     9
         7 000300   000777 376007                    ANQ     511,DL
         7 000301   040000 100400                    MLR     fill='040'O
         7 000302   000005 000033 6                  ADSC9   IFAD_KEY+3               cn=0,n=27
         7 000303   003031 000033 1                  ADSC9   OUTPUT_BUFFER            cn=0,n=27
         7 000304   000000 620006                    EAX0    0,QL
         7 000305   040000 100440                    MLR     fill='040'O
         7 000306   000240 600010 1                  ADSC9   TOT$TOLTS+4              cn=3,n=*X0
         7 000307   003037 600065 1                  ADSC9   OUTPUT_BUFFER+6          cn=3,n=53
         7 000310   000065 116007                    CMPQ    53,DL
         7 000311   000335 603000 7                  TRC     s:17090
         7 000312   777712 620006                    EAX0    -54,QL
         7 000313   777777 660003                    ERX0    -1,DU
         7 000314   040046 100400                    MLR     fill='040'O
         7 000315   003027 000007 1                  ADSC9   LINK_DATE                cn=0,n=7
         7 000316   003037 600010 1                  ADSC9   OUTPUT_BUFFER+6,Q        cn=3,n=*X0
         7 000317   000056 116007                    CMPQ    46,DL
         7 000320   000335 603000 7                  TRC     s:17090
         7 000321   777721 620006                    EAX0    -47,QL
         7 000322   777777 660003                    ERX0    -1,DU
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:66   
         7 000323   040046 100400                    MLR     fill='040'O
         7 000324   003020 000014 1                  ADSC9   ON_DATE                  cn=0,n=12
         7 000325   003041 400010 1                  ADSC9   OUTPUT_BUFFER+8,Q        cn=2,n=*X0
         7 000326   000042 116007                    CMPQ    34,DL
         7 000327   000335 603000 7                  TRC     s:17090
         7 000330   777735 620006                    EAX0    -35,QL
         7 000331   777777 660003                    ERX0    -1,DU
         7 000332   040046 100400                    MLR     fill='040'O
         7 000333   003023 000011 1                  ADSC9   AT_TIME                  cn=0,n=9
         7 000334   003044 400010 1                  ADSC9   OUTPUT_BUFFER+11,Q       cn=2,n=*X0

      650    17085    2              '***TOLTS Executive Version ',
      651    17086    2              SUBSTR (TOT$TOLTS.LINK_VERSION.TEXT,0,TOT$TOLTS.LINK_VERSION.LGTH),
      652    17087    2              LINK_DATE_,
      653    17088    2              ON_DATE_,
      654    17089    2              SUBSTR (AT_TIME_, 0, 9)) ;
      655    17090    2      CONSOLE_FPT.BUF_ = VECTOR (OUTPUT_BUFFER) ;

  17090  7 000335   000016 237000 8                  LDAQ    14
         7 000336   000004 757000 xsym               STAQ    CONSOLE_FPT+4

      656    17091    2      CALL TOT$CONSOLE_OUT;

  17091  7 000337   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 000340   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         7 000341   000000 011000                    NOP     0

      657    17092    2      RETURN;

  17092  7 000342   200004 221300                    LDX1  ! 4,,AUTO
         7 000343   000001 702211                    TSX2  ! 1,X1

      658    17093
      659    17094    2   END SYSTEM_START_UP;
      660    17095        %EJECT;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:67   
      661    17096        /*I* NAME:         GET_DECKFILE_FID
      662    17097             AUTHOR:       Scott S. Sheppard
      663    17098             PURPOSE:      obtains the file identifier for the deckfile
      664    17099             DESCRIPTION:  This procedure  initializes the DECKFILE structure
      665    17100                           to  appropriate values. The  file name and account
      666    17101                           are fetched from the  Data Control Block (DCB) for
      667    17102                           the  M$DECKFILE  DCB.
      668    17103        */
      669    17104
      670    17105    1   GET_DECKFILE_FID: PROC ;

  17105  7 000344   200004 741300       GET_DECKFIL* STX1  ! 4,,AUTO

      671    17106
      672    17107    2      DCL DCB$        PTR ALIGNED ;
      673    17108    2      DCL ACCT        CHAR (8) CALIGNED ;
      674    17109    2      DCL ACCT_LGTH   UBIN WORD ALIGNED ;
      675    17110
      676    17111        /* Code */
      677    17112
      678    17113    2      DCB$ = DCBADDR (DCBNUM (M$DECKFILE)) ;

  17113  7 000345   000000 236007 xsym               LDQ     M$DECKFILE,DL
         7 000346   000020 470400 8                  LDP0    16
         7 000347   000000 471500                    LDP1    0,,PR0
         7 000350   100000 236106                    LDQ     0,QL,PR1
         7 000351   200005 756100                    STQ     DCB$,,AUTO

      679    17114    2      IF DCB$ -> F$DCB.ACCT# = ' '

  17114  7 000352   200005 473500                    LDP3    DCB$,,AUTO
         7 000353   300020 237100                    LDAQ    16,,PR3
         7 000354   000022 117000 8                  CMPAQ   18
         7 000355   000362 601000 7                  TNZ     s:17116

      680    17115    2      THEN ACCT = B$JIT$ -> B$JIT.FACCN ;

PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:68   
  17115  7 000356   000000 474400 xsym               LDP4    B$JIT$
         7 000357   400006 237100                    LDAQ    6,,PR4
         7 000360   200006 757100                    STAQ    ACCT,,AUTO
         7 000361   000364 710000 7                  TRA     s:17117

      681    17116    2      ELSE ACCT = DCB$ -> F$DCB.ACCT# ;

  17116  7 000362   300020 237100                    LDAQ    16,,PR3
         7 000363   200006 757100                    STAQ    ACCT,,AUTO

      682    17117    2      CALL CONCAT (TOT$TOLTS.DECKFILE.FID,

  17117  7 000364   300010 236100                    LDQ     8,,PR3
         7 000365   000033 772000                    QRL     27
         7 000366   000000 620006                    EAX0    0,QL
         7 000367   040000 100540                    MLR     fill='040'O
         7 000370   300010 200010                    ADSC9   8,,PR3                   cn=1,n=*X0
         7 000371   000243 600050 1                  ADSC9   TOT$TOLTS+7              cn=3,n=40
         7 000372   000050 116007                    CMPQ    40,DL
         7 000373   000410 603000 7                  TRC     s:17121
         7 000374   777727 620006                    EAX0    -41,QL
         7 000375   777777 660003                    ERX0    -1,DU
         7 000376   040046 100400                    MLR     fill='040'O
         7 000377   000024 000001 8                  ADSC9   20                       cn=0,n=1
         7 000400   000243 600010 1                  ADSC9   TOT$TOLTS+7,Q            cn=3,n=*X0
         7 000401   000047 116007                    CMPQ    39,DL
         7 000402   000410 603000 7                  TRC     s:17121
         7 000403   777730 620006                    EAX0    -40,QL
         7 000404   777777 660003                    ERX0    -1,DU
         7 000405   040046 100500                    MLR     fill='040'O
         7 000406   200006 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         7 000407   000244 000010 1                  ADSC9   TOT$TOLTS+8,Q            cn=0,n=*X0

      683    17118    2              SUBSTR (DCB$ -> F$DCB.NAME#.C, 0, DCB$ -> F$DCB.NAME#.L),
      684    17119    2              '.',
      685    17120    2              ACCT) ;
      686    17121    2      CALL INDEX (ACCT_LGTH, ' ', ACCT, 0) ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:69   

  17121  7 000410   000000 124500                    SCM     mask='000'O
         7 000411   200006 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8
         7 000412   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 000413   200010 000100                    ARG     ACCT_LGTH,,AUTO

      687    17122    2      TOT$TOLTS.DECKFILE.LGTH = DCB$ -> F$DCB.NAME#.L + 1 + ACCT_LGTH ;

  17122  7 000414   300010 236100                    LDQ     8,,PR3
         7 000415   000033 772000                    QRL     27
         7 000416   200010 036100                    ADLQ    ACCT_LGTH,,AUTO
         7 000417   000001 036007                    ADLQ    1,DL
         7 000420   000011 736000                    QLS     9
         7 000421   000243 552010 1                  STBQ    TOT$TOLTS+7,'10'O

      688    17123    2      RETURN ;

  17123  7 000422   000001 702211                    TSX2  ! 1,X1

      689    17124
      690    17125    2   END GET_DECKFILE_FID ;
      691    17126        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:70   
      692    17127        /*I* NAME:         GET_IFAD_VERSION
      693    17128             AUTHOR:       Scott S. Sheppard
      694    17129             INTERFACE:    M$OPEN
      695    17130                           M$READ
      696    17131                           M$CLOSE
      697    17132             INPUT:        No external data accessed.
      698    17133             OUTPUT:       TOT$IFAD.VERSION
      699    17134                           TOT$IFAD.MAINTENANCE.CONTRACT
      700    17135             DESCRIPTION:  This procedure reads  the revision record from
      701    17136                           the  deckfile  to  determine  the IFAD release
      702    17137                           version used to create the deckfile.  The read
      703    17138                           to do this also  returns a bit which indicates
      704    17139                           if the site has a maintenance contract or not.
      705    17140                           If  the  read  is  unsuccessful, TOLTS is shut
      706    17141                           down. This forces C00 sites to build deckfiles
      707    17142                           using   DEER  C00  so   that  the  maintenance
      708    17143                           contract requirement can be enforced.
      709    17144        */
      710    17145        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:71   
      711    17146    1   GET_IFAD_VERSION: PROC ;

  17146  7 000423   200004 741300       GET_IFAD_VE* STX1  ! 4,,AUTO

      712    17147
      713    17148    2      DCL 1 IFAD_KEY CONSTANT,
      714    17149    2            2 *       UBIN BYTE CALIGNED INIT (8),
      715    17150    2            2 *       CHAR (8) CALIGNED INIT ('REVISION') ;
      716    17151           %FPT_OPEN (FPTN  = OPEN_DECKFILE,
      717    17152                      ACS   = DIRECT,
      718    17153                      DCB   = M$DECKFILE,
      719    17154                      FUN   = IN,
      720    17155                      ORG   = KEYED,
      721    17156                      SHARE = IN) ;
      722    17265           %FPT_READ (FPTN  = GET_IFAD_VERSION,
      723    17266                      BUF   = TOT$IFAD,
      724    17267                      DCB   = M$DECKFILE,
      725    17268                      KEY   = IFAD_KEY,
      726    17269                      KEYS  = YES,
      727    17270                      WAIT  = YES) ;
      728    17309           %FPT_CLOSE (FPTN = CLOSE_DECKFILE,
      729    17310                       DCB  = M$DECKFILE) ;
      730    17352           %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:72   
      731    17353        /* Code */
      732    17354
      733    17355    2      CALL M$OPEN (OPEN_DECKFILE) ALTRET (ERROR) ;

  17355  7 000424   003072 630400 1                  EPPR0   OPEN_DECKFILE
         7 000425   450000 713400                    CLIMB   alt,open
         7 000426   410400 401760                    pmme    nvectors=18
         7 000427   000442 702000 7                  TSX2    ERROR

      734    17356    2      CALL M$READ (GET_IFAD_VERSION) ALTRET (ERROR) ;

  17356  7 000430   003164 630400 1                  EPPR0   GET_IFAD_VERSION
         7 000431   440000 713400                    CLIMB   alt,read
         7 000432   401400 401760                    pmme    nvectors=4
         7 000433   000442 702000 7                  TSX2    ERROR

      735    17357    2      CALL M$CLOSE (CLOSE_DECKFILE) ALTRET (ERROR) ;

  17357  7 000434   003202 630400 1                  EPPR0   CLOSE_DECKFILE
         7 000435   450001 713400                    CLIMB   alt,close
         7 000436   406000 401760                    pmme    nvectors=13
         7 000437   000442 702000 7                  TSX2    ERROR

      736    17358    2      RETURN ;

  17358  7 000440   200004 221300                    LDX1  ! 4,,AUTO
         7 000441   000001 702211                    TSX2  ! 1,X1

      737    17359
      738    17360    2   ERROR:
      739    17361    2      TOT_ERROR_CODE.ERR# = %E$NODKFLREV ;

  17361  7 000442   000000 236000 1     ERROR        LDQ     TOT_ERROR_CODE
         7 000443   000011 376000 8                  ANQ     9
         7 000444   004070 276007                    ORQ     2104,DL
         7 000445   000000 756000 1                  STQ     TOT_ERROR_CODE

PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:73   
      740    17362    2      TOLTS_GETCMD.ERR_CODE = TOT_ERROR_CODE;

  17362  7 000446   000000 236000 1                  LDQ     TOT_ERROR_CODE
         7 000447   000056 756000 1                  STQ     TOLTS_GETCMD+8

      741    17363    2      TOLTS_GETCMD.F1_ = VECTOR (TOT$TOLTS.DECKFILE);

  17363  7 000450   000026 237000 8                  LDAQ    22
         7 000451   000065 755000 1                  STA     TOLTS_GETCMD+15
         7 000452   000066 756000 1                  STQ     TOLTS_GETCMD+16

      742    17364    2      TOLTS_GETCMD.F2_ = VECTOR (TOT$TOLTS.LINK_VERSION);

  17364  7 000453   000030 237000 8                  LDAQ    24
         7 000454   000067 755000 1                  STA     TOLTS_GETCMD+17
         7 000455   000070 756000 1                  STQ     TOLTS_GETCMD+18

      743    17365    2      TOLTS_GETCMD.FLGLEV# = 4;

  17365  7 000456   000004 236003                    LDQ     4,DU
         7 000457   000054 552020 1                  STBQ    TOLTS_GETCMD+6,'20'O

      744    17366    2      CALL XUG$ERRMSG (TOLTS_GETCMD);

  17366  7 000460   000006 630400 8                  EPPR0   6
         7 000461   000017 631400 xsym               EPPR1   B_VECTNIL+15
         7 000462   000000 701000 xent               TSX1    XUG$ERRMSG
         7 000463   000000 011000                    NOP     0

      745    17367    2      CALL M$ERR ;

  17367  7 000464   000002 713400                    CLIMB   err
         7 000465   000000 401760                    pmme    nvectors=0

      746    17368
      747    17369    2   END GET_IFAD_VERSION ;

PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:74   
  17369  7 000466   200004 221300                    LDX1  ! 4,,AUTO
         7 000467   000001 702211                    TSX2  ! 1,X1

      748    17370        %EJECT ;
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:75   
      749    17371        /*I* NAME:         IDENTIFY_DECKFILE
      750    17372             AUTHOR:       Scott S. Sheppard
      751    17373             INTERFACE:    CONCAT
      752    17374                           TOT$CONSOLE_OUT
      753    17375                           SUBSTR
      754    17376             INPUT:        TOT$TOLTS.DECKFILE
      755    17377                           TOT$IFAD.VERSION
      756    17378             OUTPUT:       OUTPUT_BUFFER
      757    17379             DESCRIPTION:  This procedure issues the message that identifies
      758    17380                           the deckfile being accessed.
      759    17381        */
      760    17382
      761    17383    1   IDENTIFY_DECKFILE: PROC ;

  17383  7 000470   200004 741300       IDENTIFY_DE* STX1  ! 4,,AUTO

      762    17384
      763    17385    2      DCL OUTPUT_BUFFER CHAR (80) STATIC CALIGNED ;
      764    17386
      765    17387        /* Code */
      766    17388
      767    17389    2      IF TOT$IFAD.VERSION = ' '

  17389  7 000471   040000 106400                    CMPC    fill='040'O
         7 000472   000224 000006 1                  ADSC9   TOT$IFAD                 cn=0,n=6
         7 000473   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         7 000474   000510 601000 7                  TNZ     s:17393

      768    17390    2      THEN CALL CONCAT (OUTPUT_BUFFER,

  17390  7 000475   000243 236000 1                  LDQ     TOT$TOLTS+7
         7 000476   000011 772000                    QRL     9
         7 000477   000777 376007                    ANQ     511,DL
         7 000500   040000 100400                    MLR     fill='040'O
         7 000501   000014 000015 6                  ADSC9   IFAD_KEY+10              cn=0,n=13
         7 000502   003240 000015 1                  ADSC9   OUTPUT_BUFFER            cn=0,n=13
         7 000503   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:76   
         7 000504   040000 100440                    MLR     fill='040'O
         7 000505   000243 600010 1                  ADSC9   TOT$TOLTS+7              cn=3,n=*X0
         7 000506   003243 200103 1                  ADSC9   OUTPUT_BUFFER+3          cn=1,n=67
         7 000507   000547 710000 7                  TRA     s:17399

      769    17391    2                 '***Deckfile: ',
      770    17392    2                 SUBSTR (TOT$TOLTS.DECKFILE.FID, 0, TOT$TOLTS.DECKFILE.LGTH)) ;
      771    17393    2      ELSE CALL CONCAT (OUTPUT_BUFFER,

  17393  7 000510   000243 236000 1                  LDQ     TOT$TOLTS+7
         7 000511   000011 772000                    QRL     9
         7 000512   000777 376007                    ANQ     511,DL
         7 000513   040000 100400                    MLR     fill='040'O
         7 000514   000014 000015 6                  ADSC9   IFAD_KEY+10              cn=0,n=13
         7 000515   003240 000015 1                  ADSC9   OUTPUT_BUFFER            cn=0,n=13
         7 000516   000000 620006                    EAX0    0,QL
         7 000517   040000 100440                    MLR     fill='040'O
         7 000520   000243 600010 1                  ADSC9   TOT$TOLTS+7              cn=3,n=*X0
         7 000521   003243 200103 1                  ADSC9   OUTPUT_BUFFER+3          cn=1,n=67
         7 000522   000103 116007                    CMPQ    67,DL
         7 000523   000547 603000 7                  TRC     s:17399
         7 000524   777674 620006                    EAX0    -68,QL
         7 000525   777777 660003                    ERX0    -1,DU
         7 000526   040046 100400                    MLR     fill='040'O
         7 000527   000020 000020 6                  ADSC9   IFAD_KEY+14              cn=0,n=16
         7 000530   003243 200010 1                  ADSC9   OUTPUT_BUFFER+3,Q        cn=1,n=*X0
         7 000531   000063 116007                    CMPQ    51,DL
         7 000532   000547 603000 7                  TRC     s:17399
         7 000533   777714 620006                    EAX0    -52,QL
         7 000534   777777 660003                    ERX0    -1,DU
         7 000535   040046 100400                    MLR     fill='040'O
         7 000536   000224 000006 1                  ADSC9   TOT$IFAD                 cn=0,n=6
         7 000537   003247 200010 1                  ADSC9   OUTPUT_BUFFER+7,Q        cn=1,n=*X0
         7 000540   000055 116007                    CMPQ    45,DL
         7 000541   000547 603000 7                  TRC     s:17399
         7 000542   777722 620006                    EAX0    -46,QL
         7 000543   777777 660003                    ERX0    -1,DU
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:77   
         7 000544   040046 100400                    MLR     fill='040'O
         7 000545   000025 000001 8                  ADSC9   21                       cn=0,n=1
         7 000546   003250 600010 1                  ADSC9   OUTPUT_BUFFER+8,Q        cn=3,n=*X0

      772    17394    2                 '***Deckfile: ',
      773    17395    2                 SUBSTR (TOT$TOLTS.DECKFILE.FID, 0, TOT$TOLTS.DECKFILE.LGTH),
      774    17396    2                 ' (IFAD Release: ',
      775    17397    2                 TOT$IFAD.VERSION,
      776    17398    2                 ')') ;
      777    17399    2      CONSOLE_FPT.BUF_ = VECTOR (OUTPUT_BUFFER) ;

  17399  7 000547   000032 237000 8                  LDAQ    26
         7 000550   000004 757000 xsym               STAQ    CONSOLE_FPT+4

      778    17400    2      CALL TOT$CONSOLE_OUT ;

  17400  7 000551   000002 631400 xsym               EPPR1   B_VECTNIL+2
         7 000552   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         7 000553   000000 011000                    NOP     0

      779    17401    2      RETURN ;

  17401  7 000554   200004 221300                    LDX1  ! 4,,AUTO
         7 000555   000001 702211                    TSX2  ! 1,X1

      780    17402
      781    17403    2   END IDENTIFY_DECKFILE ;
      782    17404    1   END TOT$MAIN ;

  17404  7 000556   000000 702200 xent               TSX2  ! X66_MARET

TOT_ERROR_CODE
 Sect OctLoc
   1     000   241724 000004                                                    ....

TOLTS_INIT
 Sect OctLoc
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:78   
   1     002   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     012*  000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     016   000000 006014   000000 177640   000000 006014   000000 006014    ................
   1     022   000000 006014   000000 177640   000000 006014   000000 000454    ................
   1     026   000144 000144   000000 000000   474000 000000   000000 000000    .d.d............
   1     032   000000 000000   000000 000000   000000 000000   000000 006014    ................
   1     036   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     042   00000* ******   000000 000000   000000 000000   000000 000000    ................

TOLTS_GETCMD
 Sect OctLoc
   1     046   000000 006000   000000 006014   000000 006014   000000 006014    ................
   1     052   000000 006014   000120 006000   242000 000000   04000* ***000    .....P...... ...
   1     056   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     062   000000 000000   000000 000000   000000 000000   000000 177640    ................
   1     066   000000 006014   000000 177640   000000 006014   000000 177640    ................
   1     076*  000000 006014   000000 000000   000000 000000   000000 000000    ................
   1     102   000000 177640   000000 006014   000000 006014   000000 000000    ................
   1     106   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     112   000000 006014   000000 006014   000000 000000   000000 000000    ................
   1     116   000000 000000   000000 000000                                    ........

TOLTS_HELP
 Sect OctLoc
   1     120   000001 377640   000212 006000   000000 177640   000000 006014    ................
   1     124   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     130   000000 000000   000000 006014   000000 000000   0***** ******    ................
   1     134   000000 000000   000000 000000   003040 040040   040040 040040    .........
   1     140   040040 040040   040040 040040   040040 040040   040040 040040
   1     144   040040 040040   040040 040040   040040 040000   040040 040040               .
   1     150   040040 040040   040040 040040   040040 040040   040040 040040
   1     164*  040*** ******   ****** ******   000000 177640   000000 006014     ...............
   1     170   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     174   000000 177640   000000 006014   000000 361101   000000 000000    ...........A....
   1     200   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     210*  000000 000000                                                    ....

PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:79   
TOLTS_NAME
 Sect OctLoc
   1     212   005124 117114   124123 ******                                    .TOLTS..

TOT$DMC
 Sect OctLoc
   1     214   000000 000000   000000 006014   000000 000000   000000 006014    ................
   1     220   000000 000000   000000 006014   000000 000000   000000 006014    ................

TOT$IFAD
 Sect OctLoc
   1     224   040040 040040   040040 000000   000000 040040   040040 040040          ....
   1     230   040040 040040   040*** ******                                         ...

TOT$TOLTS
 Sect OctLoc
   1     234   040040 040040   040040 000000   000000 040040   040040 040040          ....
   1     240   040040 000040   040040 040040   040040 040040   040040 000040      .           .
   1     244   040040 040040   040040 040040   040040 040040   040040 040040
   1     254*  040040 040040   040040 040***                                           .

TOP$TCP
 Sect OctLoc
   1     256   0***** ******   000000 0*****   040040 040040   040040 040040    ........
   1     262   040040 040040   040040 040040   040040 040***   000000 000000               .....
   1     266   000000 000000   000000 000000   00000* 00*0**   040040 040040    ............
   1     272   040040 040040   040040 040040   000000 000000   000000 000000            ........
   1     276   040040 040040   040040 040040   040040 ******   ****** ******              ......
   1     302   040040 040040   040040 040040   040040 040040   040040 040040
   1     522*  0***** ******   000000 0*****   040040 040040   040040 040040    ........
   1     526   040040 040040   040040 040040   040040 040***   000000 000000               .....
   1     532   000000 000000   000000 000000   00000* 00*0**   040040 040040    ............
   1     536   040040 040040   040040 040040   000000 000000   000000 000000            ........
   1     542   040040 040040   040040 040040   040040 ******   ****** ******              ......
   1     546   040040 040040   040040 040040   040040 040040   040040 040040
   1     766*  0***** ******   000000 0*****   040040 040040   040040 040040    ........
   1     772   040040 040040   040040 040040   040040 040***   000000 000000               .....
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:80   
   1     776   000000 000000   000000 000000   00000* 00*0**   040040 040040    ............
   1    1002   040040 040040   040040 040040   000000 000000   000000 000000            ........
   1    1006   040040 040040   040040 040040   040040 ******   ****** ******              ......
   1    1012   040040 040040   040040 040040   040040 040040   040040 040040
   1    1232*  0***** ******   000000 0*****   040040 040040   040040 040040    ........
   1    1236   040040 040040   040040 040040   040040 040***   000000 000000               .....
   1    1242   000000 000000   000000 000000   00000* 00*0**   040040 040040    ............
   1    1246   040040 040040   040040 040040   000000 000000   000000 000000            ........
   1    1252   040040 040040   040040 040040   040040 ******   ****** ******              ......
   1    1256   040040 040040   040040 040040   040040 040040   040040 040040
   1    1476*  0***** ******   000000 0*****   040040 040040   040040 040040    ........
   1    1502   040040 040040   040040 040040   040040 040***   000000 000000               .....
   1    1506   000000 000000   000000 000000   00000* 00*0**   040040 040040    ............
   1    1512   040040 040040   040040 040040   000000 000000   000000 000000            ........
   1    1516   040040 040040   040040 040040   040040 ******   ****** ******              ......
   1    1522   040040 040040   040040 040040   040040 040040   040040 040040
   1    1742*  0***** ******   000000 0*****   040040 040040   040040 040040    ........
   1    1746   040040 040040   040040 040040   040040 040***   000000 000000               .....
   1    1752   000000 000000   000000 000000   00000* 00*0**   040040 040040    ............
   1    1756   040040 040040   040040 040040   000000 000000   000000 000000            ........
   1    1762   040040 040040   040040 040040   040040 ******   ****** ******              ......
   1    1766   040040 040040   040040 040040   040040 040040   040040 040040
   1    2206*  0***** ******   000000 0*****   040040 040040   040040 040040    ........
   1    2212   040040 040040   040040 040040   040040 040***   000000 000000               .....
   1    2216   000000 000000   000000 000000   00000* 00*0**   040040 040040    ............
   1    2222   040040 040040   040040 040040   000000 000000   000000 000000            ........
   1    2226   040040 040040   040040 040040   040040 ******   ****** ******              ......
   1    2232   040040 040040   040040 040040   040040 040040   040040 040040
   1    2452*  0***** ******   000000 0*****   040040 040040   040040 040040    ........
   1    2456   040040 040040   040040 040040   040040 040***   000000 000000               .....
   1    2462   000000 000000   000000 000000   00000* 00*0**   040040 040040    ............
   1    2466   040040 040040   040040 040040   000000 000000   000000 000000            ........
   1    2472   040040 040040   040040 040040   040040 ******   ****** ******              ......
   1    2476   040040 040040   040040 040040   040040 040040   040040 040040
   1    2712*  040040 040040   040040 040040   040040 040040   040040 040040

TOLTS_PRIVS
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:81   
 Sect OctLoc
   1    2716   000001 777640   002720 006000   000000 000100   400000 000000    ...........@....

ERR_FID
 Sect OctLoc
   1    2722   014072 105122   122115 123107   056072 123131   123040 040040    .:ERRMSG.:SYS
   1    2726   040040 040040   040040 040040   040040 040040   040040 040040

SETUP_TRAP
 Sect OctLoc
   1    2732   000005 777640   002736 006000   000000 177640   000000 006014    ................
   1    2736   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1    2742   525062 525252   000000 000000                                    .2......

SETUP_EVENT
 Sect OctLoc
   1    2744   000001 777640   002746 006000   000000 000000   000000 000000    ................

SETUP_BREAK
 Sect OctLoc
   1    2750   000001 777640   002752 006000   000000 000000   000000 000000    ................

GET_BUFFER
 Sect OctLoc
   1    2754   000001 777640   002760 006000   000000 177640   000000 006014    ................
   1    2760   100600 000000   ****** ******                                    @.......

CC
 Sect OctLoc
   1    2762   000000 000006                                                    ....

B_RUBIRTH
 Sect OctLoc
   1    2763   ****** ******   ****** ******   000000 000000                    ............

GET_LINK_DATE
 Sect OctLoc
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:82   
   1    2766   000005 777640   002776 006000   000001 377640   000000 006000    ................
   1    2772   000002 777640   002763 006000   000000 177640   000000 006014    ................
   1    2776   000000 600000   000000 000000   000000 000000   040000 000000    ............ ...
   1    3002   000000 000000   000000 000000                                    ........

COMP_LINK_DATE
 Sect OctLoc
   1    3004   000001 777640   003016 006000   000001 377640   000234 006000    ................
   1    3010   000001 777640   000236 406000   000000 177640   000000 006014    ................
   1    3014   000000 777640   002763 006000   004002 000000   ****** ******    ................

ON_DATE
 Sect OctLoc
   1    3020   040157 156040   ****** ******   ****** ******                     on ........

AT_TIME
 Sect OctLoc
   1    3023   040141 164040   ****** ******   ****** ******   ****** ******     at ............

LINK_DATE
 Sect OctLoc
   1    3027   040*** ******   ****** ******                                     .......

OUTPUT_BUFFER
 Sect OctLoc
   1    3031   ****** ******   ****** ******   ****** ******   ****** ******    ................

START_TOLTS
 Sect OctLoc
   1    3056   000001 777640   003070 006000   000001 777640   003021 006000    .....8..........
   1    3062   000002 577640   003024 006000   000000 177640   000000 006014    ................
   1    3066   000000 177640   000000 006014   000003 000000   ****** ******    ................

OPEN_DECKFILE
 Sect OctLoc
   1    3072   000025 777640   003136 006000   000000 177640   000000 006014    .....^..........
   1    3076   000000 177640   000000 006014   000000 177640   000000 006014    ................
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:83   
   1    3136*  000000 000062   000000 002000   252525 002002   000040 252520    ...2......... ..
   1    3142   000040 040040   000000 000000   000000 777777   000000 000000    .   ............
   1    3146   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1    3152   251000 622000   000000 000000   000000 000000   111250 000000    ............I...
   1    3156   040040 040040   000000 000000   000000 000000   000000 000000        ............
   1    3162   000000 000000   ****** ******                                    ........

GET_IFAD_VERSION
 Sect OctLoc
   1    3164   000005 777640   003174 006000   000002 177640   000002 006000    .....|..........
   1    3170   000005 177640   000224 006000   000000 177640   000000 006014    ................
   1    3174   000000 600000   000000 000000   000000 000000   000000 000000    ................
   1    3200   000000 000000   000000 000000                                    ........

CLOSE_DECKFILE
 Sect OctLoc
   1    3202   000003 777640   003234 006000   000000 177640   000000 006014    ................
   1    3206   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1    3232*  000000 177640   000000 006014   000000 000000   000000 000040    ...............
   1    3236   000220 000000   000000 000000                                    ........

OUTPUT_BUFFER
 Sect OctLoc
   1    3240   ****** ******   ****** ******   ****** ******   ****** ******    ................

(unnamed)
 Sect OctLoc
   2     000   000000 000000   000000 000000   000000 000000   000000 000501    ................
   2     004   000000 000000   000000 000000   000000 006014   000000 006014    ................
   2     010   022124 101116   104104 137104   105103 113137   106111 114105    .TANDD_DECK_FILE
   2     014   137111 104040   040040 040040   040040 040040   040040 040040    _ID
   2     020   072106 105104   040040 040040   040040 040040   040040 040040    :FED
   2     024   040040 040040   040040 040040   115105 040040   040040 040040            ME
   2     030   040040 040040   000000 202415   002002 001002   000000 000000        ............
   2     034   000000 000000   000000 000000   000000 000000   000002 776003    ................
   2     040   001000 000000   000000 000002   000000 000000   000000 000000    ................
   2     044   000000 000111   040040 040040   000000 006014   000000 006014    ...I    ........
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:84   
   2     050   000000 006014   000000 000000   000000 000000   000000 006014    ................
   2     054   000000 000000   000000 000000   000000 000000   000000 000000    ................
   2     060   000000 010000   000000 000000   000000 000000   000000 000000    ................
   2     064   000000 000020   000000 000000   000000 006014   000000 000000    ................
   2     070   000000 000000   000000 000000   000000 000000   000000 000000    ................
   2     074   000000 000000   000000 006014   000000 000000   000000 000000    ................
   2     100   000000 000000   000000 000000   000000 000000   000000 000000    ................
   2     104   ****** ******   ****** ******   000000 000000   ****** ******    ................
   2     110   000000 000000   000000 000000   000000 000000   000000 000000    ................
   2     124*  000000 000000   000000 000000   000000 000000   ****** ******    ................
   2     134*  ****** ******   ****** ******   ****** ******   000000 070707    ..............8.
   2     140   ****** ******   ****** ******                                    ........

BIRTH_KEY
 Sect OctLoc
   6     000   005102 111122   124110 ******                                    .BIRTH..

IFAD_KEY
 Sect OctLoc
   6     002   010122 105126   111123 111117   116*** ******                    .REVISION...

(unnamed)
 Sect OctLoc
   6     005   052052 052124   117114 124123   040105 170145   143165 164151    ***TOLTS Executi
   6     011   166145 040126   145162 163151   157156 040040   052052 052104    ve Version  ***D
   6     015   145143 153146   151154 145072   040040 040040   040050 111106    eckfile:     (IF
   6     021   101104 040122   145154 145141   163145 072040                    AD Release:

(unnamed)
 Sect OctLoc
   8     000   000000 034400   000214 006000   000000 006000   000000 002440    ................
   8     004   000216 006000   000003 006000   000046 006000   000002 006000    .........&......
   8     010   002722 006000   777777 400007   000001 777640   000234 006000    ................
   8     014   000235 406000   002762 006000   000023 777640   003031 006000    ................
   8     020   000000 006003   000000 000000   040040 040040   040040 040040    ........
   8     024   056040 040040   051040 040040   000012 177640   000243 406000    .   )   ........
   8     030   000002 777640   000240 406000   000023 777640   003240 006000    ................
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:85   

PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:86   
--  Include file information  --

   XUH_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOT_TOLTS_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOT$MAIN.
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:87   

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0   276- 17404    103    55     7      0  y   y    0   1 TOT$MAIN
  1 16661- 16734     22     3     7     51  y   y    0     2 SYSTEM_INITIAL
  2 16766- 16853      9     6     7    135  y   y    0     2 EST_COND_HANDLERS
  3 16867- 16901      9     8     7    170  y   y    2     2 GET_DATA_SEGMENT
  4 16926- 17027     12     8     7    221  y   y    0     2 GET_TOLTS_VERSION
  5 17041- 17094      7    12     7    267  y   y    0     2 SYSTEM_START_UP
  6 17105- 17125      9     3     7    344  y   y    0     2 GET_DECKFILE_FID
  7 17146- 17369     13     7     7    423  y   y    0     2 GET_IFAD_VERSION
  8 17383- 17403      7     1     7    470  y   y    0     2 IDENTIFY_DECKFILE
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:88   

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

             276   7      0 Proc    0                             16611   7      2 Rememb  0
           16613   7      5 Call    0                             16614   7      7 Call    0
         $ 16615   7     11 Call    0                           $ 16616   7     17 Call    0
           16617   7     25 Call    0                             16618   7     30 Call    0
           16619   7     33 Call    0                             16620   7     35 Call    0
           16621   7     37 Call    0                             16622   7     41 Call    0
           16623   7     43 Call    0                             16626   7     45 Call    0 RESTART
           16661   7     51 Proc    1                           $ 16712   7     52 Call    1
           16713   7     57 Do      1                          $$ 16714   7     57 Assign  1
           16715   7     63 Call    1                      $$$$$$ 16716   7     67 MonCal  1
           16717   7     71 EndDo   1                             16718   7     71 Assign  1
         $ 16719   7     73 Call    1                             16720   7    100 Do      1
        $$ 16721   7    100 Assign  1                             16722   7    104 Call    1
    $$$$$$ 16723   7    110 MonCal  1                             16724   7    112 EndDo   1
 $$$$$$$$$ 16725   7    112 MonCal  1                             16726   7    117 Do      1
           16727   7    117 Assign  1                             16728   7    123 Assign  1
           16729   7    125 Call    1                      $$$$$$ 16730   7    131 MonCal  1
           16731   7    133 EndDo   1                             16732   7    133 Return  1
           16766   7    135 Proc    2                  $$$$$$$$$$ 16843   7    136 MonCal  2
 $$$$$$$$$ 16844   7    142 MonCal  2                   $$$$$$$$$ 16845   7    146 MonCal  2
           16846   7    152 Return  2                          $$ 16849   7    154 Assign  2 ERROR
           16850   7    160 Call    2                      $$$$$$ 16851   7    164 MonCal  2
           16853   7    166 EndPrc  2                             16867   7    170 Proc    3
           16891   7    171 Assign  3                             16892   7    174 Assign  3
$$$$$$$$$$ 16893   7    177 MonCal  3                             16894   7    203 Return  3
        $$ 16897   7    205 Assign  3 GET_ERROR                   16898   7    211 Call    3
    $$$$$$ 16899   7    215 MonCal  3                             16901   7    217 EndPrc  3
           16926   7    221 Proc    4                  $$$$$$$$$$ 17014   7    222 MonCal  4
$$$$$$$$$$ 17015   7    226 MonCal  4                             17016   7    232 Call    4
           17017   7    236 Assign  4                           $ 17018   7    241 Assign  4
           17019   7    247 Return  4                          $$ 17022   7    251 Assign  4 ERROR
           17023   7    255 Assign  4                             17024   7    257 Call    4
    $$$$$$ 17025   7    263 MonCal  4                             17027   7    265 EndPrc  4
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:89   
           17041   7    267 Proc    5                  $$$$$$$$$$ 17082   7    270 MonCal  5
           17083   7    273 Assign  5                  $$$$$$$$$$ 17084   7    276 IntCal  5
           17090   7    335 Assign  5                             17091   7    337 Call    5
           17092   7    342 Return  5                             17105   7    344 Proc    6
        $$ 17113   7    345 Assign  6                           $ 17114   7    352 If      6
         $ 17115   7    356 Assign  6                             17116   7    362 Assign  6
    $$$$$$ 17117   7    364 IntCal  6                          $$ 17121   7    410 IntCal  6
         $ 17122   7    414 Assign  6                             17123   7    422 Return  6
           17146   7    423 Proc    7                  $$$$$$$$$$ 17355   7    424 MonCal  7
$$$$$$$$$$ 17356   7    430 MonCal  7                  $$$$$$$$$$ 17357   7    434 MonCal  7
           17358   7    440 Return  7                             17361   7    442 Assign  7 ERROR
           17362   7    446 Assign  7                             17363   7    450 Assign  7
           17364   7    453 Assign  7                             17365   7    456 Assign  7
           17366   7    460 Call    7                      $$$$$$ 17367   7    464 MonCal  7
           17369   7    466 EndPrc  7                             17383   7    470 Proc    8
           17389   7    471 If      8                         $$$ 17390   7    475 IntCal  8
$$$$$$$$$$ 17393   7    510 IntCal  8                             17399   7    547 Assign  8
           17400   7    551 Call    8                             17401   7    554 Return  8
           17404   7    556 EndPrc  0

  **** Statement type totals  ****

    25 Assign    24 Call      18 MonCal     2 If         8 Return     1 Rememb
     5 IntCal     3 Do         3 EndDo      9 Proc       5 EndPrc     5 Labels


 # major stmts=   83 Code/major= 4.42 # stmts=  103 Code/stmt= 3.56  Point total= 96.3
 Cost/major stmt=  9.0 Cost/stmt=  7.3 Total cost=    754.3

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $$$$$$$$
   6-8  $$$$$$$
  8-10  $
 10-12
 12-14
 14-16  $$$$$$$$
 16-18
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:90   
 18-20
 20-22  $$$
 22-??  $$$$$$$$$$
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:91   

 **** Variables and constants ****

  ****  Section 001  Data  TOT$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  3023-0-0/c CHAR(15)    r     1 AT_TIME_                2762-0-0/w UBIN        r     1 CC
  2722-0-0/c STRC(288)   r     1 ERR_FID                 3027-0-0/c CHAR(7)     r     1 LINK_DATE_
  3020-0-0/c CHAR(12)    r     1 ON_DATE_                3031-0-0/c CHAR(80)    r     1 OUTPUT_BUFFER
  3240-0-0/c CHAR(80)    r     1 OUTPUT_BUFFER            120-0-0/d STRC(2052)  r     1 TOLTS_HELP
     2-0-0/d STRC(1296)  r     1 TOLTS_INIT               212-0-0/c STRC(54)    r     1 TOLTS_NAME
   256-0-0/d STRC(5904)  r     1 TOP$TCP(0:7)
   232-0-0/d REMB        r     1 TOT$REINITIALIZE

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

  3023-0-0/c STRC(135)   r     1 AT_TIME
  3024-0-0/c CHAR(11)    r         2 TIME

  2763-0-0/w STRC(108)   r     1 B_RUBIRTH
  2763-0-0/w UBIN        r         2 CREATE_UTS

  3202-0-0/d STRC(1080)  r     1 CLOSE_DECKFILE
  3234-0-0/d STRC(144)   r         2 V

  3004-0-0/d STRC(432)   r     1 COMP_LINK_DATE
  3016-0-0/d STRC        r         2 V

  2754-0-0/d STRC(216)   r     1 GET_BUFFER
  2756-0-0/b BIT (72)    r         2 RESULTS_
  2760-0-0/d STRC        r         2 V
  2760-2-0/b UBIN(18)    r          3 SEGSIZE#

  3164-0-0/d STRC(504)   r     1 GET_IFAD_VERSION
  3174-0-0/d STRC(216)   r         2 V
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:92   

  2766-0-0/d STRC(504)   r     1 GET_LINK_DATE
  2776-0-0/d STRC(216)   r         2 V

  3027-0-0/c STRC(63)    r     1 LINK_DATE
  3027-1-0/c CHAR(6)     r         2 DATE

  3020-0-0/c STRC(108)   r     1 ON_DATE
  3021-0-0/c CHAR(8)     r         2 DATE

  3072-0-0/d STRC(2088)  r     1 OPEN_DECKFILE
  3136-0-0/d STRC(756)   r         2 V

  2750-0-0/d STRC(144)   r     1 SETUP_BREAK
  2752-0-0/d STRC(72)    r         2 V

  2744-0-0/d STRC(144)   r     1 SETUP_EVENT
  2746-0-0/d STRC(72)    r         2 V

  2732-0-0/d STRC(360)   r     1 SETUP_TRAP
  2736-0-0/d STRC(216)   r         2 V

  3056-0-0/d STRC(432)   r     1 START_TOLTS
  3070-0-0/d STRC        r         2 V

    46-0-0/d STRC(1512)  r     1 TOLTS_GETCMD
    50-0-0/w PTR         r         2 ERRMFID$
    54-1-0/c UBIN(9)     r         2 FLGLEV#
    56-0-0/w STRC        r         2 ERR_CODE
    65-0-0/w VECT        r         2 F1_
    67-0-0/w VECT        r         2 F2_

  2716-0-0/d STRC(144)   r     1 TOLTS_PRIVS
  2720-0-0/d STRC(72)    r         2 V

   214-0-0/d STRC(288)   r     1 TOT$DMC
   214-0-0/d STRC(72)    r         2 TOO$IO_BUFFER
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:93   
   216-0-0/d STRC(72)    r         2 TOP$TCP

   224-0-0/c STRC(189)   r     1 TOT$IFAD
   224-0-0/c CHAR(6)     r         2 VERSION

   234-0-0/c STRC(639)   r     1 TOT$TOLTS
   234-0-0/c STRC(90)    r         2 LINK_DATE
   234-0-0/c CHAR(6)     r          3 ASCII
   235-2-0/c BIT         r          3 BCD
   236-2-0/c CHAR(8)     r         2 LINK_TIME
   240-2-0/c STRC(108)   r         2 LINK_VERSION
   240-2-0/c UBIN(9)     r          3 LGTH
   240-3-0/c CHAR(11)    r          3 TEXT
   243-2-0/c STRC(369)   r         2 DECKFILE
   243-2-0/c UBIN(9)     r          3 LGTH
   243-3-0/c CHAR(40)    r          3 FID

     0-0-0/w STRC        r     1 TOT_ERROR_CODE
     0-2-1/b UBIN(14)    r         2 ERR#


  ****  Section 006 RoData TOT$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(54)    r     1 BIRTH_KEY                  2-0-0/c STRC(81)    r     1 IFAD_KEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @WORD_COUNT                6-0-0/w PTR         r     1 @WORD_VECTOR
     6-0-0/c CHAR(8)     r     1 ACCT                      10-0-0/w UBIN        r     1 ACCT_LGTH
     5-0-0/w PTR         r     1 DCB$                      *0-0-0/w UBIN        r     1 WORD_COUNT
    *0-0-0/d BIT (72)    r     1 WORD_VECTOR
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:94   

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w SBIN        r     1 TOLTS_ROOT_NODE

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(99)    r     1 B_VERSION
     0-0-0/b UBIN(9)     r         2 LGTH
     0-1-0/c CHAR(10)    r         2 TEXT

     0-0-0/d STRC(432)   r     1 CONSOLE_FPT
     4-0-0/w STRC(72)    r         2 BUF_


  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DO                       0-0-0N  NULL        r     1 M$LM

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT
   102-0-0/b STRC        r         2 ERR

     0-0-0/d STRC(8856)  r     1 B$JIT
     6-0-0/c CHAR(8)     r         2 FACCN

     0-0-0/w STRC(144)   r     1 B$TCB
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:95   
     0-0-0/w PTR         r         2 ALT$

     0-0-0/d ASTR(3528)  r     1 F$DCB
    10-0-0/c STRC(288)   r         2 NAME#
    10-0-0/b UBIN(9)     r          3 L
    10-1-0/c CHAR(31)    r          3 C
    20-0-0/c CHAR(8)     r         2 ACCT#
   140-0-0/d ASTR(9)     r         2 DCBNAME
   140-0-4/b UBIN(5)     r          3 L

     0-0-0/d ASTR(3528)  r     1 M$DECKFILE
   140-0-0/d ASTR(9)     r         2 DCBNAME
   140-0-4/b UBIN(5)     r          3 L



   Procedure TOT$MAIN requires 367 words for executable code.
   Procedure TOT$MAIN requires 10 words of local(AUTO) storage.

    No errors detected in file TOT$MAIN.:E05TSI    .
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:96   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:97   
          MINI XREF LISTING

ACCT IN PROCEDURE GET_DECKFILE_FID
     17108**DCL     17115<<ASSIGN  17116<<ASSIGN  17117>>CALLBLT 17121>>CALLBLT
ACCT_LGTH IN PROCEDURE GET_DECKFILE_FID
     17109**DCL     17121<<CALLBLT 17122>>ASSIGN
AT_TIME IN PROCEDURE SYSTEM_START_UP
     17047**DCL     17050--REDEF
AT_TIME.TIME IN PROCEDURE SYSTEM_START_UP
     17049**DCL     17073--DCLINIT 17074--DCLINIT
AT_TIME_ IN PROCEDURE SYSTEM_START_UP
     17050**DCL     17084>>CALLBLT
B$ALT.CODE
     15341**DCL     15341--REDEF   15342--REDEF   15342--REDEF
B$ALT.ERR
     15342**DCL     16714>>ASSIGN  16721>>ASSIGN  16849>>ASSIGN  16897>>ASSIGN  17022>>ASSIGN
B$ALT.ERR.ERR#
     15343**DCL     15343--REDEF
B$ALT.EVID
     15342**DCL     15342--REDEF   15342--REDEF
B$JIT.CPFLAGS1.SLEAZE
       701**DCL       701--REDEF
B$JIT.ERR.MID
       608**DCL       608--REDEF
B$JIT.FACCN
       607**DCL     17115>>ASSIGN
B$JIT.JRESPEAK
       769**DCL       770--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       878**DCL       878--REDEF     879--REDEF
B$JIT.PNR
       782**DCL       782--REDEF
B$JIT.TSLINE
       876**DCL       877--REDEF
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:98   
B$JIT$
     16308**DCL       602--IMP-PTR 17115>>ASSIGN
B$TCB.ALT$
     15348**DCL     16714>>ASSIGN  16721>>ASSIGN  16849>>ASSIGN  16897>>ASSIGN  17022>>ASSIGN
B$TCB$
     16309**DCL     16714>>ASSIGN  16721>>ASSIGN  16849>>ASSIGN  16897>>ASSIGN  17022>>ASSIGN
BIRTH_KEY IN PROCEDURE GET_TOLTS_VERSION
     16928**DCL     16965--DCLINIT 16966--DCLINIT
B_RUBIRTH IN PROCEDURE GET_TOLTS_VERSION
     16934**DCL     16967--DCLINIT 16968--DCLINIT
B_RUBIRTH.CREATE_UTS IN PROCEDURE GET_TOLTS_VERSION
     16935**DCL     17007--DCLINIT
B_VERSION.LGTH
     16311**DCL     17017>>ASSIGN  17018>>ASSIGN
B_VERSION.TEXT
     16312**DCL     17018>>ASSIGN
CC IN PROCEDURE GET_TOLTS_VERSION
     16931**DCL     17016<>CALL
CLOSE_DECKFILE IN PROCEDURE GET_IFAD_VERSION
     17333**DCL     17357<>CALL
CLOSE_DECKFILE.SN_ IN PROCEDURE GET_IFAD_VERSION
     17333**DCL     17333--REDEF
CLOSE_DECKFILE.UTL_ IN PROCEDURE GET_IFAD_VERSION
     17334**DCL     17334--REDEF
CLOSE_DECKFILE.V IN PROCEDURE GET_IFAD_VERSION
     17338**DCL     17333--DCLINIT
CLOSE_DECKFILE.V.EXPIRE# IN PROCEDURE GET_IFAD_VERSION
     17348**DCL     17348--REDEF
CLOSE_DECKFILE.V.TYPE# IN PROCEDURE GET_IFAD_VERSION
     17346**DCL     17346--REDEF
CLOSE_DECKFILE.V.XTNSIZE# IN PROCEDURE GET_IFAD_VERSION
     17343**DCL     17343--REDEF   17345--REDEF
COMP_LINK_DATE IN PROCEDURE GET_TOLTS_VERSION
     17003**DCL     17015<>CALL
COMP_LINK_DATE.V IN PROCEDURE GET_TOLTS_VERSION
     17007**DCL     17003--DCLINIT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:99   
CONSOLE_FPT.BUF_
     16331**DCL     17090<<ASSIGN  17399<<ASSIGN
CONSOLE_FPT.STATION_
     16333**DCL     16333--REDEF
CONSOLE_FPT.V.DVBYTE.VFC#
     16340**DCL     16340--REDEF
DCB$ IN PROCEDURE GET_DECKFILE_FID
     17107**DCL     17113<<ASSIGN  17114>>IF      17116>>ASSIGN  17117>>CALLBLT 17117>>CALLBLT 17122>>ASSIGN
ERROR IN PROCEDURE EST_COND_HANDLERS
     16849**LABEL   16843--CALLALT 16844--CALLALT 16845--CALLALT
ERROR IN PROCEDURE GET_IFAD_VERSION
     17361**LABEL   17355--CALLALT 17356--CALLALT 17357--CALLALT
ERROR IN PROCEDURE GET_TOLTS_VERSION
     17022**LABEL   17014--CALLALT 17015--CALLALT
ERR_FID IN PROCEDURE SYSTEM_INITIAL
     16707**DCL     16718--ASSIGN
EST_COND_HANDLERS
     16766**PROC    16614--CALL
F$DCB.ACCT#
     15367**DCL     17114>>IF      17116>>ASSIGN
F$DCB.ACTPOS
     15383**DCL     15383--REDEF
F$DCB.ARS#
     15357**DCL     15357--REDEF
F$DCB.ATTR
     15376**DCL     15377--REDEF
F$DCB.BORROW
     15391**DCL     15391--REDEF   15391--REDEF   15391--REDEF
F$DCB.DCBNAME.L
     15405**DCL     15405--IMP-SIZ
F$DCB.EOMCHAR#
     15361**DCL     15361--REDEF
F$DCB.FLDID
     15386**DCL     15386--REDEF
F$DCB.FORM$
     15380**DCL     15380--REDEF
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:100  
F$DCB.FSECT
     15396**DCL     15396--REDEF
F$DCB.FSN#
     15373**DCL     15373--REDEF   15373--REDEF   15374--REDEF
F$DCB.HEADER$
     15379**DCL     15379--REDEF
F$DCB.IXTNSIZE#
     15377**DCL     15377--REDEF
F$DCB.LASTSTA$
     15366**DCL     15366--REDEF
F$DCB.LVL
     15392**DCL     15392--REDEF
F$DCB.NAME#.C
     15367**DCL     15367--REDEF   17117>>CALLBLT
F$DCB.NAME#.L
     15367**DCL     17117>>CALLBLT 17122>>ASSIGN
F$DCB.NOEOF
     15389**DCL     15389--REDEF
F$DCB.NRECS#
     15378**DCL     15378--REDEF
F$DCB.NRECX
     15397**DCL     15397--REDEF
F$DCB.OHDR
     15389**DCL     15389--REDEF
F$DCB.ORG#
     15372**DCL     15372--REDEF
F$DCB.PRECNO
     15395**DCL     15395--REDEF
F$DCB.RCSZ
     15401**DCL     15401--REDEF
F$DCB.RES#
     15368**DCL     15368--REDEF
F$DCB.SETX
     15380**DCL     15380--REDEF
F$DCB.TAB$
     15380**DCL     15380--REDEF
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:101  
F$DCB.TDA
     15394**DCL     15395--REDEF
F$DCB.WSN#
     15368**DCL     15368--REDEF
GET_BUFFER IN PROCEDURE GET_DATA_SEGMENT
     16883**DCL     16893<>CALL
GET_BUFFER.RESULTS_ IN PROCEDURE GET_DATA_SEGMENT
     16883**DCL     16892<<ASSIGN
GET_BUFFER.V IN PROCEDURE GET_DATA_SEGMENT
     16883**DCL     16883--DCLINIT
GET_BUFFER.V.SEGSIZE# IN PROCEDURE GET_DATA_SEGMENT
     16886**DCL     16891<<ASSIGN
GET_DATA_SEGMENT
     16867**PROC    16615--CALL    16616--CALL
GET_DECKFILE_FID
     17105**PROC    16621--CALL
GET_ERROR IN PROCEDURE GET_DATA_SEGMENT
     16897**LABEL   16893--CALLALT
GET_IFAD_VERSION
     17146**PROC    16622--CALL
GET_IFAD_VERSION IN PROCEDURE GET_IFAD_VERSION
     17287**DCL     17356<>CALL
GET_IFAD_VERSION.STATION_ IN PROCEDURE GET_IFAD_VERSION
     17290**DCL     17291--REDEF
GET_IFAD_VERSION.V IN PROCEDURE GET_IFAD_VERSION
     17291**DCL     17287--DCLINIT
GET_IFAD_VERSION.V.DVBYTE.REREAD# IN PROCEDURE GET_IFAD_VERSION
     17302**DCL     17302--REDEF
GET_IFAD_VERSION.V.INDX# IN PROCEDURE GET_IFAD_VERSION
     17300**DCL     17300--REDEF
GET_LINK_DATE IN PROCEDURE GET_TOLTS_VERSION
     16965**DCL     17014<>CALL
GET_LINK_DATE.STATION_ IN PROCEDURE GET_TOLTS_VERSION
     16968**DCL     16969--REDEF
GET_LINK_DATE.V IN PROCEDURE GET_TOLTS_VERSION
     16969**DCL     16965--DCLINIT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:102  
GET_LINK_DATE.V.DVBYTE.REREAD# IN PROCEDURE GET_TOLTS_VERSION
     16980**DCL     16980--REDEF
GET_LINK_DATE.V.INDX# IN PROCEDURE GET_TOLTS_VERSION
     16978**DCL     16978--REDEF
GET_TOLTS_VERSION
     16926**PROC    16619--CALL
IDENTIFY_DECKFILE
     17383**PROC    16623--CALL
IFAD_KEY IN PROCEDURE GET_IFAD_VERSION
     17148**DCL     17287--DCLINIT 17288--DCLINIT
LINK_DATE IN PROCEDURE SYSTEM_START_UP
     17051**DCL     17054--REDEF
LINK_DATE.DATE IN PROCEDURE SYSTEM_START_UP
     17053**DCL     17083<<ASSIGN
LINK_DATE_ IN PROCEDURE SYSTEM_START_UP
     17054**DCL     17084>>CALLBLT
M$CLOSE
      9800**DCL-ENT 17357--CALL
M$DECKFILE
     16519**DCL     17113--ASSIGN
M$DECKFILE.ACTPOS
     16560**DCL     16560--REDEF
M$DECKFILE.ARS#
     16519**DCL     16519--REDEF
M$DECKFILE.ATTR#
     16549**DCL     16549--REDEF   16551--REDEF
M$DECKFILE.BORROW
     16571**DCL     16571--REDEF   16571--REDEF   16571--REDEF
M$DECKFILE.DCBNAME.L
     16590**DCL     16590--IMP-SIZ 17113>>ASSIGN
M$DECKFILE.EOMCHAR#
     16526**DCL     16527--REDEF
M$DECKFILE.FLDID
     16563**DCL     16564--REDEF
M$DECKFILE.FORM$
     16555**DCL     16555--REDEF
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:103  
M$DECKFILE.FSECT
     16578**DCL     16578--REDEF
M$DECKFILE.FSN#
     16545**DCL     16545--REDEF   16545--REDEF   16546--REDEF
M$DECKFILE.HEADER$
     16554**DCL     16555--REDEF
M$DECKFILE.IXTNSIZE#
     16551**DCL     16552--REDEF
M$DECKFILE.LASTSTA$
     16535**DCL     16535--REDEF
M$DECKFILE.LVL
     16572**DCL     16572--REDEF
M$DECKFILE.NAME#.C
     16535**DCL     16536--REDEF
M$DECKFILE.NOEOF
     16567**DCL     16567--REDEF
M$DECKFILE.NRECS#
     16552**DCL     16552--REDEF
M$DECKFILE.NRECX
     16579**DCL     16579--REDEF
M$DECKFILE.OHDR
     16568**DCL     16568--REDEF
M$DECKFILE.ORG#
     16543**DCL     16544--REDEF
M$DECKFILE.PRECNO
     16576**DCL     16576--REDEF
M$DECKFILE.RCSZ
     16584**DCL     16584--REDEF
M$DECKFILE.RES#
     16537**DCL     16537--REDEF
M$DECKFILE.SETX
     16556**DCL     16556--REDEF
M$DECKFILE.TAB$
     16555**DCL     16555--REDEF
M$DECKFILE.TDA
     16575**DCL     16576--REDEF
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:104  
M$DECKFILE.WSN#
     16537**DCL     16538--REDEF
M$ERR
      9812**DCL-ENT 16716--CALL    16723--CALL    16851--CALL    16899--CALL    17025--CALL    17367--CALL
M$EVENT
      9855**DCL-ENT 16844--CALL
M$EXIT
      9812**DCL-ENT 16730--CALL
M$GDS
      9835**DCL-ENT 16893--CALL
M$INT
      9855**DCL-ENT 16845--CALL
M$OPEN
      9800**DCL-ENT 17355--CALL
M$READ
      9801**DCL-ENT 17014--CALL    17356--CALL
M$SPRIV
      9859**DCL-ENT 16725--CALL
M$TIME
      9867**DCL-ENT 17015--CALL    17082--CALL
M$TRAP
      9854**DCL-ENT 16843--CALL
ON_DATE IN PROCEDURE SYSTEM_START_UP
     17043**DCL     17046--REDEF
ON_DATE.DATE IN PROCEDURE SYSTEM_START_UP
     17045**DCL     17071--DCLINIT 17072--DCLINIT
ON_DATE_ IN PROCEDURE SYSTEM_START_UP
     17046**DCL     17084>>CALLBLT
OPEN_DECKFILE IN PROCEDURE GET_IFAD_VERSION
     17221**DCL     17355<>CALL
OPEN_DECKFILE.ACSVEH_ IN PROCEDURE GET_IFAD_VERSION
     17223**DCL     17224--REDEF
OPEN_DECKFILE.ALTKEYS_ IN PROCEDURE GET_IFAD_VERSION
     17229**DCL     17230--REDEF   17230--REDEF
OPEN_DECKFILE.HDR_ IN PROCEDURE GET_IFAD_VERSION
     17228**DCL     17229--REDEF
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:105  
OPEN_DECKFILE.TAB_ IN PROCEDURE GET_IFAD_VERSION
     17227**DCL     17228--REDEF
OPEN_DECKFILE.UHL_ IN PROCEDURE GET_IFAD_VERSION
     17221**DCL     17222--REDEF   17222--REDEF
OPEN_DECKFILE.V IN PROCEDURE GET_IFAD_VERSION
     17230**DCL     17221--DCLINIT
OPEN_DECKFILE.V.FSN# IN PROCEDURE GET_IFAD_VERSION
     17261**DCL     17261--REDEF   17261--REDEF
OPEN_DECKFILE.WSN_ IN PROCEDURE GET_IFAD_VERSION
     17227**DCL     17227--REDEF
OUTPUT_BUFFER IN PROCEDURE IDENTIFY_DECKFILE
     17385**DCL     17390<<CALLBLT 17393<<CALLBLT 17399--ASSIGN
OUTPUT_BUFFER IN PROCEDURE SYSTEM_START_UP
     17055**DCL     17084<<CALLBLT 17090--ASSIGN
RESTART
     16626**LABEL   16611--REMEMBR
SETUP_BREAK IN PROCEDURE EST_COND_HANDLERS
     16837**DCL     16845<>CALL
SETUP_BREAK.V IN PROCEDURE EST_COND_HANDLERS
     16837**DCL     16837--DCLINIT
SETUP_EVENT IN PROCEDURE EST_COND_HANDLERS
     16822**DCL     16844<>CALL
SETUP_EVENT.V IN PROCEDURE EST_COND_HANDLERS
     16822**DCL     16822--DCLINIT
SETUP_TRAP IN PROCEDURE EST_COND_HANDLERS
     16798**DCL     16843<>CALL
SETUP_TRAP.V IN PROCEDURE EST_COND_HANDLERS
     16798**DCL     16798--DCLINIT
START_TOLTS IN PROCEDURE SYSTEM_START_UP
     17071**DCL     17082<>CALL
START_TOLTS.V IN PROCEDURE SYSTEM_START_UP
     17075**DCL     17071--DCLINIT
SYSTEM_INITIAL
     16661**PROC    16613--CALL
SYSTEM_START_UP
     17041**PROC    16620--CALL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:106  
TOB$BREAK_HANDLER
     16598**DCL-ENT 16837--DCLINIT
TOE$EVENT_HANDLER
     16599**DCL-ENT 16822--DCLINIT
TOF$FAULTS
     16600**DCL-ENT 16799--DCLINIT 16799--DCLINIT 16800--DCLINIT 16800--DCLINIT
TOF$REMEMBER_SFR
     16601**DCL-ENT 16617--CALL
TOF$REMEMBER_SISR
     16602**DCL-ENT 16618--CALL
TOLTS_GETCMD
     15890**DCL     16712<>CALL    16715<>CALL    16719<>CALL    16722<>CALL    16729<>CALL    16850<>CALL
     16898<>CALL    17024<>CALL    17366<>CALL
TOLTS_GETCMD.ERRMFID$
     15909**DCL     16718<<ASSIGN
TOLTS_GETCMD.ERR_CODE
     16038**DCL     16714<<ASSIGN  16721<<ASSIGN  16728<<ASSIGN  16849<<ASSIGN  16897<<ASSIGN  17022<<ASSIGN
     17362<<ASSIGN
TOLTS_GETCMD.F1_
     16087**DCL     17363<<ASSIGN
TOLTS_GETCMD.F2_
     16091**DCL     17364<<ASSIGN
TOLTS_GETCMD.FLGLEV#
     15995**DCL     17023<<ASSIGN  17365<<ASSIGN
TOLTS_GETCMD.OUT$
     15895**DCL     15901--REDEF
TOLTS_HELP
     16236**DCL     15928--DCLINIT
TOLTS_INIT
     15481**DCL     16712<>CALL
TOLTS_NAME
     16303**DCL     16240--DCLINIT
TOLTS_PRIVS IN PROCEDURE SYSTEM_INITIAL
     16676**DCL     16725<>CALL
TOLTS_PRIVS.V IN PROCEDURE SYSTEM_INITIAL
     16676**DCL     16676--DCLINIT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:107  
TOLTS_ROOT_NODE
     16506**DCL     15891--DCLINIT
TOP$TCP
     16427**DCL     16616--CALL
TOP$TCP.FICCDD
     16430**DCL     16436--REDEF   16439--REDEF
TOT$ASCII_BCD
     16603**DCL-ENT 17016--CALL
TOT$CONSOLE_OUT
     16604**DCL-ENT 17091--CALL    17400--CALL
TOT$DMC.TOO$IO_BUFFER
     16358**DCL     16615<>CALL
TOT$DMC.TOP$TCP
     16363**DCL     16616<>CALL
TOT$IFAD
     16388**DCL     17289--DCLINIT 17290--DCLINIT
TOT$IFAD.VERSION
     16389**DCL     17389>>IF      17393>>CALLBLT
TOT$REINITIALIZE
     16396**DCL     16611<<REMEMBR
TOT$ROOT
     16605**DCL-ENT 16626--CALL
TOT$TOLTS.DECKFILE
     16414**DCL     17363--ASSIGN
TOT$TOLTS.DECKFILE.FID
     16416**DCL     17117<<CALLBLT 17390>>CALLBLT 17393>>CALLBLT
TOT$TOLTS.DECKFILE.LGTH
     16415**DCL     17122<<ASSIGN  17390>>CALLBLT 17393>>CALLBLT
TOT$TOLTS.LINK_DATE.ASCII
     16408**DCL     17003--DCLINIT 17004--DCLINIT 17016<>CALL    17083>>ASSIGN
TOT$TOLTS.LINK_DATE.BCD
     16409**DCL     17016<>CALL
TOT$TOLTS.LINK_TIME
     16410**DCL     17005--DCLINIT 17006--DCLINIT
TOT$TOLTS.LINK_VERSION
     16411**DCL     17364--ASSIGN
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:108  
TOT$TOLTS.LINK_VERSION.LGTH
     16412**DCL     17017<<ASSIGN  17084>>CALLBLT
TOT$TOLTS.LINK_VERSION.TEXT
     16413**DCL     17018<<ASSIGN  17084>>CALLBLT
TOT_ERROR_CODE
     15422**DCL     16728>>ASSIGN  17362>>ASSIGN
TOT_ERROR_CODE.ERR#
     15452**DCL     16727<<ASSIGN  17361<<ASSIGN
WORD_COUNT IN PROCEDURE GET_DATA_SEGMENT
     16869**DCL     16867--PROC    16891>>ASSIGN
WORD_VECTOR IN PROCEDURE GET_DATA_SEGMENT
     16870**DCL     16867--PROC    16892--ASSIGN
XTX$ADAPT
     15476**DCL-ENT 15792--DCLINIT
XUG$ERRMSG
     12129**DCL-ENT 16715--CALL    16722--CALL    16729--CALL    16850--CALL    16898--CALL    17024--CALL
     17366--CALL
XUG$INIT
     12126**DCL-ENT 16712--CALL
XUG$SETERRMSG
     12130**DCL-ENT 16719--CALL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:109  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:110  
              FULL UREF LISTING

B$ALT
     15341**DCL
B$ALT.BRKCNT
     15342**DCL
B$ALT.DCB#
     15342**DCL
B$ALT.ERR.CODE
     15343**DCL
B$ALT.ERR.FCG
     15343**DCL
B$ALT.ERR.MID
     15343**DCL
B$ALT.ERR.MON
     15343**DCL
B$ALT.ERR.SEV
     15343**DCL
B$ALT.EVSC
     15342**DCL
B$ALT.FPT
     15341**DCL
B$ALT.FPT.FCG
     15341**DCL
B$ALT.FPT.PMME
     15341**DCL
B$ALT.P#
     15345**DCL
B$ALT.SSFRAME
     15341**DCL
B$ALT.SUBC
     15342**DCL
B$JIT
       602**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:111  
B$JIT.ACCEPT_FLAGS
       755**DCL
B$JIT.ACCEPT_FLAGS.ANNOUNCE
       755**DCL
B$JIT.ACCEPT_FLAGS.BROADCAST
       755**DCL
B$JIT.ACCEPT_FLAGS.SEND
       755**DCL
B$JIT.ACCESS
       875**DCL
B$JIT.ACCESS.FORMS
       875**DCL
B$JIT.ACCESS.PACKS
       875**DCL
B$JIT.ACCESS.TAPES
       875**DCL
B$JIT.ACCN
       607**DCL
B$JIT.APATTR
       880**DCL
B$JIT.ARECX
       875**DCL
B$JIT.BILL
       755**DCL
B$JIT.BLINDACCTNG
       755**DCL
B$JIT.BUDLIM
       744**DCL
B$JIT.CALCNT
       781**DCL
B$JIT.CCARS
       695**DCL
B$JIT.CCBUF
       695**DCL
B$JIT.CCDISP
       695**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:112  
B$JIT.CHECK_CFU
       777**DCL
B$JIT.CLRES
       874**DCL
B$JIT.CPFLAGS1
       696**DCL
B$JIT.CPFLAGS1.BRK
       700**DCL
B$JIT.CPFLAGS1.BUFFULL
       700**DCL
B$JIT.CPFLAGS1.CFREAD
       700**DCL
B$JIT.CPFLAGS1.DELTA
       701**DCL
B$JIT.CPFLAGS1.DONTRFEXT3
       697**DCL
B$JIT.CPFLAGS1.DRIBBLE
       699**DCL
B$JIT.CPFLAGS1.ECHO
       700**DCL
B$JIT.CPFLAGS1.ECHO_LINK
       697**DCL
B$JIT.CPFLAGS1.EXIT#
       699**DCL
B$JIT.CPFLAGS1.FIRSTCP
       698**DCL
B$JIT.CPFLAGS1.INITIALIZE
       699**DCL
B$JIT.CPFLAGS1.JSTEP
       696**DCL
B$JIT.CPFLAGS1.KEEPDS
       699**DCL
B$JIT.CPFLAGS1.LASTCP
       698**DCL
B$JIT.CPFLAGS1.LASTCPEXISTS
       698**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:113  
B$JIT.CPFLAGS1.LNKPMME
       697**DCL
B$JIT.CPFLAGS1.LOGOFF
       696**DCL
B$JIT.CPFLAGS1.NOTIFY
       699**DCL
B$JIT.CPFLAGS1.PROCACCT
       699**DCL
B$JIT.CPFLAGS1.PROTECT
       700**DCL
B$JIT.CPFLAGS1.RUND
       696**DCL
B$JIT.CPFLAGS1.SCREECH
       700**DCL
B$JIT.CPFLAGS1.SKIPABORT
       699**DCL
B$JIT.CPFLAGS1.SOMENOTIFY
       698**DCL
B$JIT.CPFLAGS1.SSTART
       697**DCL
B$JIT.CPFLAGS1.STARPROC
       698**DCL
B$JIT.CPFLAGS1.STARSACC
       698**DCL
B$JIT.CPFLAGS1.STEPACCT
       700**DCL
B$JIT.CPFLAGS1.STEPLMT
       700**DCL
B$JIT.CPFLAGS1.TESTMODE
       698**DCL
B$JIT.CPFLAGS1.TRMNATE
       699**DCL
B$JIT.CPFLAGS1.WHEN_INPUT
       697**DCL
B$JIT.CPFLAGS1.YC
       696**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:114  
B$JIT.CPFLAGS1.YCGET
       697**DCL
B$JIT.CPFLAGS1.YCPMME
       697**DCL
B$JIT.CSLEV
       762**DCL
B$JIT.CTIME
       780**DCL
B$JIT.CURPNUM
       861**DCL
B$JIT.CURRCORE
       769**DCL
B$JIT.CURSUDO
       876**DCL
B$JIT.CURTMPDP
       776**DCL
B$JIT.DCB$
       775**DCL
B$JIT.DCBNO
       688**DCL
B$JIT.DDLL
       765**DCL
B$JIT.DDUL
       765**DCL
B$JIT.DEFEXP
       775**DCL
B$JIT.DEFPRI
       755**DCL
B$JIT.DLL
       765**DCL
B$JIT.DO$
       775**DCL
B$JIT.DUL
       765**DCL
B$JIT.ENQS
       880**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:115  
B$JIT.ERR
       607**DCL
B$JIT.ERR.CODE
       608**DCL
B$JIT.ERR.FCG
       607**DCL
B$JIT.ERR.MON
       608**DCL
B$JIT.ERR.SEV
       608**DCL
B$JIT.ERR.UMID
       608**DCL
B$JIT.EUP
       767**DCL
B$JIT.EXTUS
       783**DCL
B$JIT.FACNACS
       775**DCL
B$JIT.FACNCM
       777**DCL
B$JIT.FBUC
       767**DCL
B$JIT.FBUL
       767**DCL
B$JIT.FEXT
       775**DCL
B$JIT.FPSN
       688**DCL
B$JIT.FRS
       803**DCL
B$JIT.GAC
       776**DCL
B$JIT.HIGHPNUM
       861**DCL
B$JIT.HPSN
       775**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:116  
B$JIT.IDELTAT
       781**DCL
B$JIT.INSTWORD
       695**DCL
B$JIT.INTER
       874**DCL
B$JIT.INTTIME
       780**DCL
B$JIT.JOBNAME
       756**DCL
B$JIT.JOBUNIT
       696**DCL
B$JIT.JORG
       743**DCL
B$JIT.JPEAK
       769**DCL
B$JIT.JSLEV
       744**DCL
B$JIT.JTMPDPPK
       776**DCL
B$JIT.JUNK
       807**DCL
B$JIT.JUNK2
       861**DCL
B$JIT.LANG
       743**DCL
B$JIT.LBJID
       783**DCL
B$JIT.LLL
       771**DCL
B$JIT.LNKCNT
       807**DCL
B$JIT.LOCK
       756**DCL
B$JIT.LOGONTIME
       744**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:117  
B$JIT.LUL
       771**DCL
B$JIT.MAXCORE
       768**DCL
B$JIT.MAXENQ
       880**DCL
B$JIT.MAXEXP
       775**DCL
B$JIT.MAXPRI
       755**DCL
B$JIT.MAXTMPDP
       776**DCL
B$JIT.MMFLGS
       768**DCL
B$JIT.MMFLGS.FREE_PPGS
       768**DCL
B$JIT.MODE
       602**DCL
B$JIT.MOUNTS
       875**DCL
B$JIT.MRT
       781**DCL
B$JIT.MSGID
       756**DCL
B$JIT.MSGID.PRIMARY
       756**DCL
B$JIT.MSGID.XT
       757**DCL
B$JIT.NEXTCC
       749**DCL
B$JIT.NODOEVER
       874**DCL
B$JIT.NOLOEVER
       874**DCL
B$JIT.NOPOEVER
       874**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:118  
B$JIT.NUTS
       782**DCL
B$JIT.OLTA
       875**DCL
B$JIT.ORIGINATOR_MODE
       874**DCL
B$JIT.ORIGINATOR_PORT
       877**DCL
B$JIT.ORIGINATOR_PORT.FROM_CR.DEVICE
       878**DCL
B$JIT.ORIGINATOR_PORT.FROM_CR.TNAME
       878**DCL
B$JIT.ORIGINATOR_PORT.FROM_GHOST
       878**DCL
B$JIT.ORIGINATOR_PORT.FROM_GHOST.SYSID
       878**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT
       879**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT.SYSID
       879**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT.TSLINE
       879**DCL
B$JIT.OUTPRIO
       688**DCL
B$JIT.PCADS
       771**DCL
B$JIT.PCC
       766**DCL
B$JIT.PCD
       766**DCL
B$JIT.PCDD
       767**DCL
B$JIT.PCDDS
       770**DCL
B$JIT.PCDS
       766**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:119  
B$JIT.PCL
       771**DCL
B$JIT.PCP
       766**DCL
B$JIT.PCROS
       766**DCL
B$JIT.PCV
       771**DCL
B$JIT.PLL
       765**DCL
B$JIT.PMEMTIM
       781**DCL
B$JIT.PMME_COUNT
       879**DCL
B$JIT.PMME_DATA
       879**DCL
B$JIT.PMME_DATA.CPU
       879**DCL
B$JIT.PMME_DATA.I_O
       879**DCL
B$JIT.PMME_DATA.MISC1
       879**DCL
B$JIT.PMME_DATA.MISC2
       880**DCL
B$JIT.PPC
       768**DCL
B$JIT.PPRIV
       663**DCL
B$JIT.PPRIV.CNTRLC
       663**DCL
B$JIT.PPRIV.CNTRLD
       663**DCL
B$JIT.PPRIV.EFT
       663**DCL
B$JIT.PPRIV.EL
       663**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:120  
B$JIT.PPRIV.LABEL
       664**DCL
B$JIT.PPRIV.NETCON
       664**DCL
B$JIT.PPRIV.PADMIN
       665**DCL
B$JIT.PPRIV.PIGC
       664**DCL
B$JIT.PPRIV.PIGD
       664**DCL
B$JIT.PPRIV.PIGETTE
       666**DCL
B$JIT.PPRIV.RATES
       665**DCL
B$JIT.PPRIV.REPLAY
       665**DCL
B$JIT.PPRIV.SPIDERC
       664**DCL
B$JIT.PPRIV.SPIDERD
       664**DCL
B$JIT.PPRIV.SUPER
       664**DCL
B$JIT.PPRIV.SUPERAUTH
       664**DCL
B$JIT.PPRIV.SUPERD
       665**DCL
B$JIT.PPRIV.SUPERFORM
       665**DCL
B$JIT.PPRIV.SUPERWSN
       665**DCL
B$JIT.PPRIV.SYSCON
       665**DCL
B$JIT.PPRIV.VOLINIT
       665**DCL
B$JIT.PRDPRM
       776**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:121  
B$JIT.PRFLAGS
       691**DCL
B$JIT.PRFLAGS.COMMENT
       691**DCL
B$JIT.PRFLAGS.CONTINUED
       691**DCL
B$JIT.PRFLAGS.CORRECT
       692**DCL
B$JIT.PRFLAGS.EXPOUND
       692**DCL
B$JIT.PRFLAGS.LIST
       691**DCL
B$JIT.PRFLAGS.LS
       691**DCL
B$JIT.PRFLAGS.NOSCAN
       692**DCL
B$JIT.PRFLAGS.NSSYNTAX
       691**DCL
B$JIT.PRFLAGS.OU
       691**DCL
B$JIT.PRFLAGS.OUTPUT
       691**DCL
B$JIT.PRFLAGS.POINT
       692**DCL
B$JIT.PRFLAGS.POSITION
       692**DCL
B$JIT.PRFLAGS.SI
       691**DCL
B$JIT.PRFLAGS.UI
       691**DCL
B$JIT.PRFLAGS.WHEN
       692**DCL
B$JIT.PRIINC
       782**DCL
B$JIT.PRIOB
       780**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:122  
B$JIT.PRIOCORE
       768**DCL
B$JIT.PRIOR_CP
       871**DCL
B$JIT.PRIV
       608**DCL
B$JIT.PRIV.ACTIVE
       608**DCL
B$JIT.PRIV.ACTIVE.ASAVE
       610**DCL
B$JIT.PRIV.ACTIVE.CFEP
       611**DCL
B$JIT.PRIV.ACTIVE.CQ
       611**DCL
B$JIT.PRIV.ACTIVE.DISPJOB
       610**DCL
B$JIT.PRIV.ACTIVE.DOMANE
       609**DCL
B$JIT.PRIV.ACTIVE.EXMM
       612**DCL
B$JIT.PRIV.ACTIVE.EXPM
       611**DCL
B$JIT.PRIV.ACTIVE.FMBLK
       608**DCL
B$JIT.PRIV.ACTIVE.FMDIAG
       609**DCL
B$JIT.PRIV.ACTIVE.FMEFT
       608**DCL
B$JIT.PRIV.ACTIVE.FMREAD
       609**DCL
B$JIT.PRIV.ACTIVE.FMSEC
       609**DCL
B$JIT.PRIV.ACTIVE.GPP
       610**DCL
B$JIT.PRIV.ACTIVE.INTCON
       611**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:123  
B$JIT.PRIV.ACTIVE.IOQ
       611**DCL
B$JIT.PRIV.ACTIVE.IOQW
       611**DCL
B$JIT.PRIV.ACTIVE.JIT
       612**DCL
B$JIT.PRIV.ACTIVE.MAXMEM
       612**DCL
B$JIT.PRIV.ACTIVE.MFEP
       611**DCL
B$JIT.PRIV.ACTIVE.MODE
       609**DCL
B$JIT.PRIV.ACTIVE.MSYS
       612**DCL
B$JIT.PRIV.ACTIVE.PM
       611**DCL
B$JIT.PRIV.ACTIVE.SCREECH
       610**DCL
B$JIT.PRIV.ACTIVE.SNAP
       610**DCL
B$JIT.PRIV.ACTIVE.SPCLMM
       612**DCL
B$JIT.PRIV.ACTIVE.SYSACCT
       609**DCL
B$JIT.PRIV.ACTIVE.SYSCON
       610**DCL
B$JIT.PRIV.ACTIVE.SYSLOG
       611**DCL
B$JIT.PRIV.ACTIVE.TND
       611**DCL
B$JIT.PRIV.AUTH
       648**DCL
B$JIT.PRIV.AUTH.ASAVE
       649**DCL
B$JIT.PRIV.AUTH.CFEP
       650**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:124  
B$JIT.PRIV.AUTH.CQ
       650**DCL
B$JIT.PRIV.AUTH.DISPJOB
       649**DCL
B$JIT.PRIV.AUTH.DOMANE
       648**DCL
B$JIT.PRIV.AUTH.EXMM
       651**DCL
B$JIT.PRIV.AUTH.EXPM
       650**DCL
B$JIT.PRIV.AUTH.FMBLK
       648**DCL
B$JIT.PRIV.AUTH.FMDIAG
       648**DCL
B$JIT.PRIV.AUTH.FMEFT
       648**DCL
B$JIT.PRIV.AUTH.FMREAD
       648**DCL
B$JIT.PRIV.AUTH.FMSEC
       648**DCL
B$JIT.PRIV.AUTH.GPP
       650**DCL
B$JIT.PRIV.AUTH.INTCON
       650**DCL
B$JIT.PRIV.AUTH.IOQ
       650**DCL
B$JIT.PRIV.AUTH.IOQW
       650**DCL
B$JIT.PRIV.AUTH.JIT
       651**DCL
B$JIT.PRIV.AUTH.MAXMEM
       651**DCL
B$JIT.PRIV.AUTH.MFEP
       650**DCL
B$JIT.PRIV.AUTH.MODE
       648**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:125  
B$JIT.PRIV.AUTH.MSYS
       651**DCL
B$JIT.PRIV.AUTH.PM
       651**DCL
B$JIT.PRIV.AUTH.SCREECH
       649**DCL
B$JIT.PRIV.AUTH.SNAP
       649**DCL
B$JIT.PRIV.AUTH.SPCLMM
       651**DCL
B$JIT.PRIV.AUTH.SYSACCT
       648**DCL
B$JIT.PRIV.AUTH.SYSCON
       649**DCL
B$JIT.PRIV.AUTH.SYSLOG
       650**DCL
B$JIT.PRIV.AUTH.TND
       651**DCL
B$JIT.PRIV.JOB
       651**DCL
B$JIT.PRIV.JOB.ASAVE
       653**DCL
B$JIT.PRIV.JOB.CFEP
       654**DCL
B$JIT.PRIV.JOB.CQ
       654**DCL
B$JIT.PRIV.JOB.DISPJOB
       653**DCL
B$JIT.PRIV.JOB.DOMANE
       652**DCL
B$JIT.PRIV.JOB.EXMM
       655**DCL
B$JIT.PRIV.JOB.EXPM
       654**DCL
B$JIT.PRIV.JOB.FMBLK
       652**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:126  
B$JIT.PRIV.JOB.FMDIAG
       652**DCL
B$JIT.PRIV.JOB.FMEFT
       651**DCL
B$JIT.PRIV.JOB.FMREAD
       652**DCL
B$JIT.PRIV.JOB.FMSEC
       652**DCL
B$JIT.PRIV.JOB.GPP
       653**DCL
B$JIT.PRIV.JOB.INTCON
       654**DCL
B$JIT.PRIV.JOB.IOQ
       654**DCL
B$JIT.PRIV.JOB.IOQW
       654**DCL
B$JIT.PRIV.JOB.JIT
       655**DCL
B$JIT.PRIV.JOB.MAXMEM
       655**DCL
B$JIT.PRIV.JOB.MFEP
       654**DCL
B$JIT.PRIV.JOB.MODE
       652**DCL
B$JIT.PRIV.JOB.MSYS
       655**DCL
B$JIT.PRIV.JOB.PM
       654**DCL
B$JIT.PRIV.JOB.SCREECH
       653**DCL
B$JIT.PRIV.JOB.SNAP
       653**DCL
B$JIT.PRIV.JOB.SPCLMM
       655**DCL
B$JIT.PRIV.JOB.SYSACCT
       652**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:127  
B$JIT.PRIV.JOB.SYSCON
       653**DCL
B$JIT.PRIV.JOB.SYSLOG
       654**DCL
B$JIT.PRIV.JOB.TND
       655**DCL
B$JIT.PRIV.PRC
       655**DCL
B$JIT.PRIV.PRC.ASAVE
       657**DCL
B$JIT.PRIV.PRC.CFEP
       658**DCL
B$JIT.PRIV.PRC.CQ
       658**DCL
B$JIT.PRIV.PRC.DISPJOB
       657**DCL
B$JIT.PRIV.PRC.DOMANE
       656**DCL
B$JIT.PRIV.PRC.EXMM
       659**DCL
B$JIT.PRIV.PRC.EXPM
       658**DCL
B$JIT.PRIV.PRC.FMBLK
       655**DCL
B$JIT.PRIV.PRC.FMDIAG
       656**DCL
B$JIT.PRIV.PRC.FMEFT
       655**DCL
B$JIT.PRIV.PRC.FMREAD
       656**DCL
B$JIT.PRIV.PRC.FMSEC
       656**DCL
B$JIT.PRIV.PRC.GPP
       657**DCL
B$JIT.PRIV.PRC.INTCON
       658**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:128  
B$JIT.PRIV.PRC.IOQ
       658**DCL
B$JIT.PRIV.PRC.IOQW
       658**DCL
B$JIT.PRIV.PRC.JIT
       659**DCL
B$JIT.PRIV.PRC.MAXMEM
       659**DCL
B$JIT.PRIV.PRC.MFEP
       658**DCL
B$JIT.PRIV.PRC.MODE
       656**DCL
B$JIT.PRIV.PRC.MSYS
       659**DCL
B$JIT.PRIV.PRC.PM
       658**DCL
B$JIT.PRIV.PRC.SCREECH
       657**DCL
B$JIT.PRIV.PRC.SNAP
       657**DCL
B$JIT.PRIV.PRC.SPCLMM
       659**DCL
B$JIT.PRIV.PRC.SYSACCT
       656**DCL
B$JIT.PRIV.PRC.SYSCON
       657**DCL
B$JIT.PRIV.PRC.SYSLOG
       657**DCL
B$JIT.PRIV.PRC.TND
       658**DCL
B$JIT.PRIV.SAVED
       659**DCL
B$JIT.PRIV.SAVED.ASAVE
       661**DCL
B$JIT.PRIV.SAVED.CFEP
       662**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:129  
B$JIT.PRIV.SAVED.CQ
       662**DCL
B$JIT.PRIV.SAVED.DISPJOB
       661**DCL
B$JIT.PRIV.SAVED.DOMANE
       660**DCL
B$JIT.PRIV.SAVED.EXMM
       663**DCL
B$JIT.PRIV.SAVED.EXPM
       662**DCL
B$JIT.PRIV.SAVED.FMBLK
       659**DCL
B$JIT.PRIV.SAVED.FMDIAG
       660**DCL
B$JIT.PRIV.SAVED.FMEFT
       659**DCL
B$JIT.PRIV.SAVED.FMREAD
       660**DCL
B$JIT.PRIV.SAVED.FMSEC
       659**DCL
B$JIT.PRIV.SAVED.GPP
       661**DCL
B$JIT.PRIV.SAVED.INTCON
       662**DCL
B$JIT.PRIV.SAVED.IOQ
       662**DCL
B$JIT.PRIV.SAVED.IOQW
       662**DCL
B$JIT.PRIV.SAVED.JIT
       662**DCL
B$JIT.PRIV.SAVED.MAXMEM
       663**DCL
B$JIT.PRIV.SAVED.MFEP
       662**DCL
B$JIT.PRIV.SAVED.MODE
       660**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:130  
B$JIT.PRIV.SAVED.MSYS
       663**DCL
B$JIT.PRIV.SAVED.PM
       662**DCL
B$JIT.PRIV.SAVED.SCREECH
       661**DCL
B$JIT.PRIV.SAVED.SNAP
       661**DCL
B$JIT.PRIV.SAVED.SPCLMM
       663**DCL
B$JIT.PRIV.SAVED.SYSACCT
       660**DCL
B$JIT.PRIV.SAVED.SYSCON
       661**DCL
B$JIT.PRIV.SAVED.SYSLOG
       661**DCL
B$JIT.PRIV.SAVED.TND
       662**DCL
B$JIT.PROG_ENTRY
       757**DCL
B$JIT.PROMPTS
       756**DCL
B$JIT.PSEUDOPGS
       770**DCL
B$JIT.PSEUDO_COUNT
       871**DCL
B$JIT.PSEUDO_TEXT
       871**DCL
B$JIT.PSLEV
       744**DCL
B$JIT.PTSIZ
       771**DCL
B$JIT.PUL
       765**DCL
B$JIT.QUAN
       780**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:131  
B$JIT.REMCPO
       880**DCL
B$JIT.REMDO
       880**DCL
B$JIT.REMLO
       880**DCL
B$JIT.RERUN
       782**DCL
B$JIT.RESCORE
       876**DCL
B$JIT.RESPEAK
       770**DCL
B$JIT.RNST
       786**DCL
B$JIT.RUNFLAGS
       803**DCL
B$JIT.SAVEDCB$
       777**DCL
B$JIT.SCHTIME
       780**DCL
B$JIT.SINPUTSZ
       756**DCL
B$JIT.SPEAK
       769**DCL
B$JIT.SRESPEAK
       770**DCL
B$JIT.SSLEV
       744**DCL
B$JIT.STAR
       775**DCL
B$JIT.STAR.DA
       775**DCL
B$JIT.STDLOPGS
       875**DCL
B$JIT.STEPCC
       834**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:132  
B$JIT.STEPS
       828**DCL
B$JIT.STEPUNIT
       696**DCL
B$JIT.STIME
       780**DCL
B$JIT.STMPDPPK
       776**DCL
B$JIT.SVLDTF
       848**DCL
B$JIT.SVTUS
       783**DCL
B$JIT.SWITCH
       695**DCL
B$JIT.SYSID
       607**DCL
B$JIT.TDP
       767**DCL
B$JIT.TMPGAC
       776**DCL
B$JIT.TMPGAC.N
       776**DCL
B$JIT.TMPGAC.TIME
       776**DCL
B$JIT.TPEXT
       781**DCL
B$JIT.TPSVT
       781**DCL
B$JIT.TSLINE.FEX
       876**DCL
B$JIT.TSLINE.LEV
       877**DCL
B$JIT.TSLINE.PORT
       876**DCL
B$JIT.TSLINE.SPEED
       876**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:133  
B$JIT.TSLINE.SUBDEVICE
       877**DCL
B$JIT.TSLINE.SUBSUBDEVICE
       877**DCL
B$JIT.TSLINE.TTYP
       877**DCL
B$JIT.TUEXT
       781**DCL
B$JIT.TUSVT
       781**DCL
B$JIT.UMEMTIM
       781**DCL
B$JIT.UNAME
       607**DCL
B$JIT.USER
       607**DCL
B$JIT.USERWORD
       695**DCL
B$JIT.USRDCB
       756**DCL
B$JIT.USRERR
       743**DCL
B$JIT.USRERR.CODE
       743**DCL
B$JIT.USRERR.FCG
       743**DCL
B$JIT.USRERR.MID
       743**DCL
B$JIT.USRERR.MON
       743**DCL
B$JIT.USRERR.SEV
       743**DCL
B$JIT.USRIC
       744**DCL
B$JIT.USRRNST
       743**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:134  
B$JIT.UTIMER
       782**DCL
B$JIT.VIRTUAL
       772**DCL
B$JIT.VIRTUAL.DCB#
       772**DCL
B$JIT.WOO
       607**DCL
B$JIT.XCONF
       828**DCL
B$JIT.XLIMFLG
       838**DCL
B$JIT.XTIME
       780**DCL
B$JIT.YC0SZ
       744**DCL
B$JIT.YC2SZ
       762**DCL
B$TCB
     15348**DCL
B$TCB.CURRSZ
     15348**DCL
B$TCB.STK$
     15348**DCL
B$TCB.TCBAVSZ
     15348**DCL
B_RUBIRTH.COUNT IN PROCEDURE GET_TOLTS_VERSION
     16939**DCL
B_RUBIRTH.RUMED_UTS IN PROCEDURE GET_TOLTS_VERSION
     16937**DCL
B_VERSION
     16310**DCL
CLOSE_DECKFILE.ACCESS_ IN PROCEDURE GET_IFAD_VERSION
     17335**DCL
CLOSE_DECKFILE.ACCT_ IN PROCEDURE GET_IFAD_VERSION
     17337**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:135  
CLOSE_DECKFILE.ACSVEH_ IN PROCEDURE GET_IFAD_VERSION
     17336**DCL
CLOSE_DECKFILE.ALTKEYS_ IN PROCEDURE GET_IFAD_VERSION
     17338**DCL
CLOSE_DECKFILE.IFPARAM_ IN PROCEDURE GET_IFAD_VERSION
     17338**DCL
CLOSE_DECKFILE.INSTATTR_ IN PROCEDURE GET_IFAD_VERSION
     17336**DCL
CLOSE_DECKFILE.IRREC_ IN PROCEDURE GET_IFAD_VERSION
     17333**DCL
CLOSE_DECKFILE.NAME_ IN PROCEDURE GET_IFAD_VERSION
     17334**DCL
CLOSE_DECKFILE.PASS_ IN PROCEDURE GET_IFAD_VERSION
     17335**DCL
CLOSE_DECKFILE.PROCATTR_ IN PROCEDURE GET_IFAD_VERSION
     17337**DCL
CLOSE_DECKFILE.RECFIELD_ IN PROCEDURE GET_IFAD_VERSION
     17334**DCL
CLOSE_DECKFILE.UATTR_ IN PROCEDURE GET_IFAD_VERSION
     17336**DCL
CLOSE_DECKFILE.V.ALTBLD# IN PROCEDURE GET_IFAD_VERSION
     17347**DCL
CLOSE_DECKFILE.V.BUPM# IN PROCEDURE GET_IFAD_VERSION
     17346**DCL
CLOSE_DECKFILE.V.CLDCB# IN PROCEDURE GET_IFAD_VERSION
     17346**DCL
CLOSE_DECKFILE.V.CLINFO# IN PROCEDURE GET_IFAD_VERSION
     17348**DCL
CLOSE_DECKFILE.V.CLSYSID# IN PROCEDURE GET_IFAD_VERSION
     17345**DCL
CLOSE_DECKFILE.V.DCB# IN PROCEDURE GET_IFAD_VERSION
     17339**DCL
CLOSE_DECKFILE.V.DESC IN PROCEDURE GET_IFAD_VERSION
     17343**DCL
CLOSE_DECKFILE.V.DESC.ACTIVE# IN PROCEDURE GET_IFAD_VERSION
     17345**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:136  
CLOSE_DECKFILE.V.DESC.ARCHIVE# IN PROCEDURE GET_IFAD_VERSION
     17344**DCL
CLOSE_DECKFILE.V.DESC.BAD# IN PROCEDURE GET_IFAD_VERSION
     17344**DCL
CLOSE_DECKFILE.V.DESC.BUF# IN PROCEDURE GET_IFAD_VERSION
     17344**DCL
CLOSE_DECKFILE.V.DESC.BUPM# IN PROCEDURE GET_IFAD_VERSION
     17344**DCL
CLOSE_DECKFILE.V.DESC.DELF# IN PROCEDURE GET_IFAD_VERSION
     17343**DCL
CLOSE_DECKFILE.V.DESC.FETCH# IN PROCEDURE GET_IFAD_VERSION
     17345**DCL
CLOSE_DECKFILE.V.DESC.NBUF# IN PROCEDURE GET_IFAD_VERSION
     17345**DCL
CLOSE_DECKFILE.V.DESC.NOLIST# IN PROCEDURE GET_IFAD_VERSION
     17344**DCL
CLOSE_DECKFILE.V.DESC.ODSTOW# IN PROCEDURE GET_IFAD_VERSION
     17344**DCL
CLOSE_DECKFILE.V.DESC.QS# IN PROCEDURE GET_IFAD_VERSION
     17344**DCL
CLOSE_DECKFILE.V.DESC.TERMINATE# IN PROCEDURE GET_IFAD_VERSION
     17345**DCL
CLOSE_DECKFILE.V.DESC.TPB# IN PROCEDURE GET_IFAD_VERSION
     17345**DCL
CLOSE_DECKFILE.V.DISP# IN PROCEDURE GET_IFAD_VERSION
     17342**DCL
CLOSE_DECKFILE.V.EFTOPER IN PROCEDURE GET_IFAD_VERSION
     17340**DCL
CLOSE_DECKFILE.V.EFTOPER.ASTOW# IN PROCEDURE GET_IFAD_VERSION
     17341**DCL
CLOSE_DECKFILE.V.EFTOPER.BACKUP# IN PROCEDURE GET_IFAD_VERSION
     17340**DCL
CLOSE_DECKFILE.V.EFTOPER.DELFDE# IN PROCEDURE GET_IFAD_VERSION
     17342**DCL
CLOSE_DECKFILE.V.EFTOPER.ISTOW# IN PROCEDURE GET_IFAD_VERSION
     17341**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:137  
CLOSE_DECKFILE.V.EFTOPER.UPDDESC# IN PROCEDURE GET_IFAD_VERSION
     17341**DCL
CLOSE_DECKFILE.V.GHSTACS# IN PROCEDURE GET_IFAD_VERSION
     17347**DCL
CLOSE_DECKFILE.V.LRDL0# IN PROCEDURE GET_IFAD_VERSION
     17349**DCL
CLOSE_DECKFILE.V.LSLIDE# IN PROCEDURE GET_IFAD_VERSION
     17349**DCL
CLOSE_DECKFILE.V.NOMARKS# IN PROCEDURE GET_IFAD_VERSION
     17347**DCL
CLOSE_DECKFILE.V.OPER IN PROCEDURE GET_IFAD_VERSION
     17339**DCL
CLOSE_DECKFILE.V.OPER.CHGATT# IN PROCEDURE GET_IFAD_VERSION
     17339**DCL
CLOSE_DECKFILE.V.OPER.REBLD# IN PROCEDURE GET_IFAD_VERSION
     17340**DCL
CLOSE_DECKFILE.V.OPER.RELG# IN PROCEDURE GET_IFAD_VERSION
     17339**DCL
CLOSE_DECKFILE.V.POS# IN PROCEDURE GET_IFAD_VERSION
     17346**DCL
CLOSE_DECKFILE.V.SPARE# IN PROCEDURE GET_IFAD_VERSION
     17349**DCL
CLOSE_DECKFILE.V.TRUNCATE# IN PROCEDURE GET_IFAD_VERSION
     17342**DCL
CLOSE_DECKFILE.V_ IN PROCEDURE GET_IFAD_VERSION
     17333**DCL
COMP_LINK_DATE.DATE_ IN PROCEDURE GET_TOLTS_VERSION
     17003**DCL
COMP_LINK_DATE.DATE_.BOUND IN PROCEDURE GET_TOLTS_VERSION
     17003**DCL
COMP_LINK_DATE.DATE_.DATE$ IN PROCEDURE GET_TOLTS_VERSION
     17004**DCL
COMP_LINK_DATE.DAY_ IN PROCEDURE GET_TOLTS_VERSION
     17006**DCL
COMP_LINK_DATE.TIME_ IN PROCEDURE GET_TOLTS_VERSION
     17005**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:138  
COMP_LINK_DATE.TIME_.BOUND IN PROCEDURE GET_TOLTS_VERSION
     17005**DCL
COMP_LINK_DATE.TIME_.TIME$ IN PROCEDURE GET_TOLTS_VERSION
     17006**DCL
COMP_LINK_DATE.TSTAMP_ IN PROCEDURE GET_TOLTS_VERSION
     17006**DCL
COMP_LINK_DATE.V.DEST# IN PROCEDURE GET_TOLTS_VERSION
     17007**DCL
COMP_LINK_DATE.V.DEST_BASIS# IN PROCEDURE GET_TOLTS_VERSION
     17008**DCL
COMP_LINK_DATE.V.SOURCE# IN PROCEDURE GET_TOLTS_VERSION
     17007**DCL
COMP_LINK_DATE.V.SOURCE_BASIS# IN PROCEDURE GET_TOLTS_VERSION
     17008**DCL
COMP_LINK_DATE.V_ IN PROCEDURE GET_TOLTS_VERSION
     17003**DCL
CONSOLE_FPT
     16331**DCL
CONSOLE_FPT.BUF_.BOUND
     16331**DCL
CONSOLE_FPT.BUF_.BUF$
     16333**DCL
CONSOLE_FPT.IDBUF_
     16333**DCL
CONSOLE_FPT.KEY_
     16331**DCL
CONSOLE_FPT.V
     16334**DCL
CONSOLE_FPT.V.DCB#
     16334**DCL
CONSOLE_FPT.V.DVBYTE
     16339**DCL
CONSOLE_FPT.V.DVBYTE.BIN#
     16340**DCL
CONSOLE_FPT.V.DVBYTE.BP#
     16340**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:139  
CONSOLE_FPT.V.DVBYTE.CONT#
     16342**DCL
CONSOLE_FPT.V.DVBYTE.NODAT#
     16341**DCL
CONSOLE_FPT.V.DVBYTE.REREAD#
     16340**DCL
CONSOLE_FPT.V.DVBYTE.RRR#
     16341**DCL
CONSOLE_FPT.V.DVBYTE.TOP#
     16339**DCL
CONSOLE_FPT.V.DVBYTE.TRANS#
     16341**DCL
CONSOLE_FPT.V.EVENT#
     16339**DCL
CONSOLE_FPT.V.FULL#
     16336**DCL
CONSOLE_FPT.V.ID#
     16335**DCL
CONSOLE_FPT.V.IOERROK#
     16338**DCL
CONSOLE_FPT.V.KEYTYPE#
     16338**DCL
CONSOLE_FPT.V.NEWKEY#
     16337**DCL
CONSOLE_FPT.V.NOTIME#
     16337**DCL
CONSOLE_FPT.V.ODFNC#
     16343**DCL
CONSOLE_FPT.V.ONEWKEY#
     16336**DCL
CONSOLE_FPT.V.REWRITE#
     16337**DCL
CONSOLE_FPT.V.SEED#
     16339**DCL
CONSOLE_FPT.V.WAIT#
     16334**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:140  
CONSOLE_FPT.V_
     16331**DCL
ERR_FID.L# IN PROCEDURE SYSTEM_INITIAL
     16707**DCL
ERR_FID.NAME# IN PROCEDURE SYSTEM_INITIAL
     16707**DCL
F$DCB
     15351**DCL
F$DCB.ACS#
     15375**DCL
F$DCB.AFTRBLK
     15391**DCL
F$DCB.AGE
     15402**DCL
F$DCB.ALTKEYX
     15382**DCL
F$DCB.AMFLG
     15388**DCL
F$DCB.AMFLG.ACCF
     15388**DCL
F$DCB.AMFLG.ACSF
     15388**DCL
F$DCB.AMFLG.INSF
     15388**DCL
F$DCB.AMFLG.PROF
     15388**DCL
F$DCB.AMFLG.SNLF
     15388**DCL
F$DCB.AMFLG.USRF
     15388**DCL
F$DCB.AMR#
     15370**DCL
F$DCB.AMRSETSTA
     15369**DCL
F$DCB.ANSISPANSEQ#
     15385**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:141  
F$DCB.ASN#
     15372**DCL
F$DCB.ATTR.APL#
     15377**DCL
F$DCB.ATTR.BIN#
     15377**DCL
F$DCB.ATTR.DENS#
     15376**DCL
F$DCB.ATTR.GRLGL#
     15376**DCL
F$DCB.ATTR.LOWERCASE#
     15377**DCL
F$DCB.ATTR.NATL#
     15376**DCL
F$DCB.ATTR.NOXLATE#
     15376**DCL
F$DCB.ATTR.TRANSLGL#
     15376**DCL
F$DCB.ATTR.TRUOVRPRT#
     15376**DCL
F$DCB.ATTR.UPPERCASE#
     15376**DCL
F$DCB.AU#
     15369**DCL
F$DCB.AUTHFFLG
     15383**DCL
F$DCB.AUTHFFLG.AU#
     15385**DCL
F$DCB.AUTHFFLG.AURD#
     15385**DCL
F$DCB.AUTHFFLG.CREATE#
     15385**DCL
F$DCB.AUTHFFLG.DELF#
     15384**DCL
F$DCB.AUTHFFLG.DELR#
     15384**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:142  
F$DCB.AUTHFFLG.EXEC#
     15384**DCL
F$DCB.AUTHFFLG.NOLIST#
     15384**DCL
F$DCB.AUTHFFLG.READ#
     15384**DCL
F$DCB.AUTHFFLG.REATTR#
     15384**DCL
F$DCB.AUTHFFLG.TCTL#
     15385**DCL
F$DCB.AUTHFFLG.UPD#
     15384**DCL
F$DCB.AUTHFFLG.WNEW#
     15384**DCL
F$DCB.BADARS#
     15386**DCL
F$DCB.BFR
     15402**DCL
F$DCB.BFR.BUFUP
     15403**DCL
F$DCB.BFR.BUFX
     15403**DCL
F$DCB.BFR.CHNG
     15403**DCL
F$DCB.BFR.CVM
     15403**DCL
F$DCB.BFR.DA
     15403**DCL
F$DCB.BFR.SCRUB
     15403**DCL
F$DCB.BFR1
     15403**DCL
F$DCB.BFR1.CX
     15404**DCL
F$DCB.BFR1.FLAGS
     15403**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:143  
F$DCB.BFR1.FLAGS.ONE_WORD_HEADER
     15403**DCL
F$DCB.BFR1.SIZ
     15404**DCL
F$DCB.BLKL#
     15373**DCL
F$DCB.BLKLEN
     15396**DCL
F$DCB.BLOCKED#
     15371**DCL
F$DCB.BOL#
     15374**DCL
F$DCB.BUPF
     15361**DCL
F$DCB.BUPM#
     15372**DCL
F$DCB.BYTESLEFT
     15395**DCL
F$DCB.CACHE
     15390**DCL
F$DCB.CBUFNUM
     15394**DCL
F$DCB.CFU$
     15392**DCL
F$DCB.CHAIN#
     15378**DCL
F$DCB.CHANTIME#
     15378**DCL
F$DCB.CNVRT#
     15370**DCL
F$DCB.CODE16$
     15382**DCL
F$DCB.COMP#
     15371**DCL
F$DCB.CONNCT#
     15377**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:144  
F$DCB.CONT
     15390**DCL
F$DCB.CRECNO
     15395**DCL
F$DCB.CRECX
     15394**DCL
F$DCB.CSEED
     15395**DCL
F$DCB.CTG#
     15371**DCL
F$DCB.CTLCMDIN
     15399**DCL
F$DCB.CVOL#
     15371**DCL
F$DCB.CWORD
     15400**DCL
F$DCB.CX
     15400**DCL
F$DCB.DBGDCBNO#
     15373**DCL
F$DCB.DBGSYSID#
     15373**DCL
F$DCB.DCB#
     15385**DCL
F$DCB.DCBNAME
     15404**DCL
F$DCB.DCBNAME.N
     15405**DCL
F$DCB.DCBNAME.S
     15405**DCL
F$DCB.DCBNAME.X
     15405**DCL
F$DCB.DCT$
     15380**DCL
F$DCB.DDEV
     15363**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:145  
F$DCB.DDEV.CP#
     15363**DCL
F$DCB.DDEV.GR#
     15364**DCL
F$DCB.DDEV.IC#
     15363**DCL
F$DCB.DDEV.LP#
     15363**DCL
F$DCB.DDEV.UCOUT#
     15364**DCL
F$DCB.DDEV.XEQ#
     15364**DCL
F$DCB.DECRYPT
     15398**DCL
F$DCB.DENSITY#
     15378**DCL
F$DCB.DESC
     15364**DCL
F$DCB.DESC.ACTIVE#
     15366**DCL
F$DCB.DESC.ARCHIVE#
     15365**DCL
F$DCB.DESC.BAD#
     15365**DCL
F$DCB.DESC.BUF#
     15365**DCL
F$DCB.DESC.BUPM#
     15365**DCL
F$DCB.DESC.DELF#
     15364**DCL
F$DCB.DESC.FETCH#
     15366**DCL
F$DCB.DESC.NBUF#
     15365**DCL
F$DCB.DESC.NOLIST#
     15365**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:146  
F$DCB.DESC.ODSTOW#
     15365**DCL
F$DCB.DESC.QS#
     15365**DCL
F$DCB.DESC.TERMINATE#
     15366**DCL
F$DCB.DESC.TPB#
     15366**DCL
F$DCB.DEVADR
     15380**DCL
F$DCB.DEVADR.CHAN#
     15381**DCL
F$DCB.DEVADR.DVN#
     15381**DCL
F$DCB.DEVADR.IOM#
     15381**DCL
F$DCB.DISP#
     15372**DCL
F$DCB.DQH$
     15379**DCL
F$DCB.DVBYTE
     15360**DCL
F$DCB.DVBYTE.BIN#
     15360**DCL
F$DCB.DVBYTE.TOP#
     15360**DCL
F$DCB.DVBYTE.TRANS#
     15360**DCL
F$DCB.DVBYTE.VFC#
     15360**DCL
F$DCB.DVFC#
     15379**DCL
F$DCB.DVTYPE#
     15372**DCL
F$DCB.EBCDIC#
     15370**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:147  
F$DCB.ENQF
     15390**DCL
F$DCB.EOMVAL#
     15361**DCL
F$DCB.EOMVAL#.VALUE#
     15362**DCL
F$DCB.EOMVAL#.VFLG#
     15361**DCL
F$DCB.EOP
     15387**DCL
F$DCB.EVENT
     15382**DCL
F$DCB.EXIST#
     15371**DCL
F$DCB.EXPIRE#
     15374**DCL
F$DCB.FCD#
     15370**DCL
F$DCB.FCI#
     15370**DCL
F$DCB.FCN
     15396**DCL
F$DCB.FCN.CNT
     15396**DCL
F$DCB.FCN.F
     15396**DCL
F$DCB.FDCM
     15395**DCL
F$DCB.FEPIO
     15402**DCL
F$DCB.FEPIO.BPP
     15402**DCL
F$DCB.FEPIO.BUFX
     15402**DCL
F$DCB.FEPIO.EVENT
     15402**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:148  
F$DCB.FEPIO.KEYX
     15402**DCL
F$DCB.FEPIO.KPP
     15402**DCL
F$DCB.FEPIO2
     15404**DCL
F$DCB.FEPIO3
     15404**DCL
F$DCB.FEPSIZ
     15401**DCL
F$DCB.FEPSIZ.BUF
     15401**DCL
F$DCB.FEPSIZ.KEY
     15401**DCL
F$DCB.FEXT
     15387**DCL
F$DCB.FEXTX
     15374**DCL
F$DCB.FFLG
     15362**DCL
F$DCB.FFLG.AU#
     15363**DCL
F$DCB.FFLG.AURD#
     15363**DCL
F$DCB.FFLG.CREATE#
     15363**DCL
F$DCB.FFLG.DELF#
     15362**DCL
F$DCB.FFLG.DELR#
     15362**DCL
F$DCB.FFLG.EXEC#
     15363**DCL
F$DCB.FFLG.NOLIST#
     15362**DCL
F$DCB.FFLG.READ#
     15362**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:149  
F$DCB.FFLG.REATTR#
     15362**DCL
F$DCB.FFLG.TCTL#
     15363**DCL
F$DCB.FFLG.UPD#
     15362**DCL
F$DCB.FFLG.WNEW#
     15362**DCL
F$DCB.FIELDX
     15382**DCL
F$DCB.FLPW#
     15357**DCL
F$DCB.FMOD
     15387**DCL
F$DCB.FPRGX
     15382**DCL
F$DCB.FPSTR
     15397**DCL
F$DCB.FTAM
     15391**DCL
F$DCB.FTAM.CTX
     15392**DCL
F$DCB.FTAM.PMME
     15392**DCL
F$DCB.FTAM.USR
     15392**DCL
F$DCB.FUN#
     15372**DCL
F$DCB.GDISP
     15398**DCL
F$DCB.GHSTACS#
     15381**DCL
F$DCB.GRPOS
     15390**DCL
F$DCB.GTYP
     15387**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:150  
F$DCB.HASH
     15395**DCL
F$DCB.IASN
     15400**DCL
F$DCB.ID
     15401**DCL
F$DCB.ID.DA
     15401**DCL
F$DCB.ID.GX
     15401**DCL
F$DCB.IFMT
     15399**DCL
F$DCB.IGNOREFSN#
     15369**DCL
F$DCB.INDX
     15396**DCL
F$DCB.IOERROK#
     15369**DCL
F$DCB.IORG
     15394**DCL
F$DCB.IRRECX
     15386**DCL
F$DCB.IWL
     15399**DCL
F$DCB.IWL.HDRIWL
     15399**DCL
F$DCB.IWL.SEQIWL
     15399**DCL
F$DCB.IWL.TABIWL
     15399**DCL
F$DCB.JRNLBYPASS#
     15381**DCL
F$DCB.KEYL#
     15374**DCL
F$DCB.KEYTYPE#
     15383**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:151  
F$DCB.KEYX#
     15374**DCL
F$DCB.KFIELDX
     15383**DCL
F$DCB.LASTKEY
     15391**DCL
F$DCB.LASTKEY$
     15391**DCL
F$DCB.LDCTX
     15380**DCL
F$DCB.LDFLG
     15389**DCL
F$DCB.LINES#
     15379**DCL
F$DCB.LOAD#
     15369**DCL
F$DCB.LOGSEC
     15398**DCL
F$DCB.LPOOL
     15392**DCL
F$DCB.LRDL0#
     15375**DCL
F$DCB.LSLIDE#
     15375**DCL
F$DCB.LSTAOR#
     15369**DCL
F$DCB.LSTBLK
     15391**DCL
F$DCB.MAXVOL#
     15378**DCL
F$DCB.MEDIA
     15399**DCL
F$DCB.MODCNT
     15397**DCL
F$DCB.MOUNT
     15389**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:152  
F$DCB.MOVED
     15400**DCL
F$DCB.MPC$
     15380**DCL
F$DCB.MUST_CVOL
     15388**DCL
F$DCB.NAME#
     15367**DCL
F$DCB.NAME#.C17
     15367**DCL
F$DCB.NAME#.C17.CC
     15367**DCL
F$DCB.NEW_FSECT
     15389**DCL
F$DCB.OLDIOERR
     15398**DCL
F$DCB.OWNER
     15389**DCL
F$DCB.PASS#
     15367**DCL
F$DCB.PASSF#
     15370**DCL
F$DCB.PATH
     15386**DCL
F$DCB.PATH.CHAN#
     15386**DCL
F$DCB.PATH.IOM#
     15386**DCL
F$DCB.PGINGRAN
     15398**DCL
F$DCB.PRIVOPN
     15398**DCL
F$DCB.PSN#
     15367**DCL
F$DCB.QISS#
     15369**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:153  
F$DCB.RA
     15390**DCL
F$DCB.RDL0#
     15361**DCL
F$DCB.REALSPAN
     15398**DCL
F$DCB.RECL#
     15373**DCL
F$DCB.RESNT
     15368**DCL
F$DCB.RESNT.NUM
     15368**DCL
F$DCB.RESNT.TYP
     15368**DCL
F$DCB.RETRYCNT#
     15364**DCL
F$DCB.RPOS
     15390**DCL
F$DCB.SEED#
     15387**DCL
F$DCB.SEGX
     15397**DCL
F$DCB.SEQ#
     15379**DCL
F$DCB.SEQCOL#
     15379**DCL
F$DCB.SEQID#
     15379**DCL
F$DCB.SETSTA$
     15366**DCL
F$DCB.SEZ_OK
     15388**DCL
F$DCB.SHARE#
     15371**DCL
F$DCB.SHARED
     15387**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:154  
F$DCB.SLIDE#
     15361**DCL
F$DCB.SPAN
     15389**DCL
F$DCB.SPANNED#
     15371**DCL
F$DCB.SPARE#
     15375**DCL
F$DCB.STARF
     15387**DCL
F$DCB.STARTX
     15383**DCL
F$DCB.STARX
     15390**DCL
F$DCB.STR#
     15397**DCL
F$DCB.SYSID#
     15374**DCL
F$DCB.TAPTYP
     15393**DCL
F$DCB.TAPTYP.CP6F
     15393**DCL
F$DCB.TAPTYP.HAVLASTKEY
     15393**DCL
F$DCB.TAPTYP.MANAGED
     15394**DCL
F$DCB.TAPTYP.NOCVOL
     15394**DCL
F$DCB.TAPTYP.PASTFM
     15394**DCL
F$DCB.TAPTYP.RWASC
     15393**DCL
F$DCB.TAPTYP.USRBUF
     15393**DCL
F$DCB.TDALVL
     15392**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:155  
F$DCB.TDEXTST$
     15366**DCL
F$DCB.TDFLG
     15377**DCL
F$DCB.TDFLG.SDSK#
     15377**DCL
F$DCB.TDSTAT#
     15368**DCL
F$DCB.TRNC
     15390**DCL
F$DCB.TYC
     15357**DCL
F$DCB.TYC.BLNKTP#
     15357**DCL
F$DCB.TYC.BOF#
     15357**DCL
F$DCB.TYC.BOT#
     15357**DCL
F$DCB.TYC.CDALRT#
     15359**DCL
F$DCB.TYC.CGCRCW
     15360**DCL
F$DCB.TYC.CGCWRV
     15360**DCL
F$DCB.TYC.CGFULL
     15359**DCL
F$DCB.TYC.CGKEYV
     15359**DCL
F$DCB.TYC.CGLWRV
     15359**DCL
F$DCB.TYC.DACT#
     15358**DCL
F$DCB.TYC.DI#
     15358**DCL
F$DCB.TYC.EGV#
     15357**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:156  
F$DCB.TYC.EOD#
     15358**DCL
F$DCB.TYC.EOF#
     15358**DCL
F$DCB.TYC.EOT#
     15357**DCL
F$DCB.TYC.FRAW#
     15359**DCL
F$DCB.TYC.IOERR#
     15358**DCL
F$DCB.TYC.LAST#
     15359**DCL
F$DCB.TYC.LD#
     15358**DCL
F$DCB.TYC.LDISC#
     15358**DCL
F$DCB.TYC.MTRAP#
     15358**DCL
F$DCB.TYC.OPER#
     15357**DCL
F$DCB.TYC.PROT#
     15359**DCL
F$DCB.TYC.TIMO#
     15359**DCL
F$DCB.TYC.XTRARD
     15359**DCL
F$DCB.TYPE#
     15368**DCL
F$DCB.UB$
     15396**DCL
F$DCB.UBYTES
     15396**DCL
F$DCB.UCOUT
     15393**DCL
F$DCB.UNIQUEBLD
     15400**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:157  
F$DCB.UOPT#
     15370**DCL
F$DCB.UPDCNT
     15400**DCL
F$DCB.VFCCHAR#
     15382**DCL
F$DCB.VOL#
     15378**DCL
F$DCB.VOLACCESS#
     15370**DCL
F$DCB.WAIT
     15390**DCL
F$DCB.WCDATA
     15393**DCL
F$DCB.WIDTH#
     15364**DCL
F$DCB.WRCMP
     15393**DCL
F$DCB.WSR#
     15375**DCL
F$DCB.XTEND#
     15371**DCL
F$DCB.XTNSIZE#
     15375**DCL
GET_BUFFER.V.AUTOSEG# IN PROCEDURE GET_DATA_SEGMENT
     16884**DCL
GET_BUFFER.V.COMMON# IN PROCEDURE GET_DATA_SEGMENT
     16884**DCL
GET_BUFFER.V.FREE# IN PROCEDURE GET_DATA_SEGMENT
     16884**DCL
GET_BUFFER.V.PROTECTION# IN PROCEDURE GET_DATA_SEGMENT
     16885**DCL
GET_BUFFER.V.VIRTONLY# IN PROCEDURE GET_DATA_SEGMENT
     16885**DCL
GET_BUFFER.V_ IN PROCEDURE GET_DATA_SEGMENT
     16883**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:158  
GET_IFAD_VERSION.BUF_ IN PROCEDURE GET_IFAD_VERSION
     17289**DCL
GET_IFAD_VERSION.BUF_.BOUND IN PROCEDURE GET_IFAD_VERSION
     17289**DCL
GET_IFAD_VERSION.BUF_.BUF$ IN PROCEDURE GET_IFAD_VERSION
     17290**DCL
GET_IFAD_VERSION.IDBUF_ IN PROCEDURE GET_IFAD_VERSION
     17291**DCL
GET_IFAD_VERSION.KEY_ IN PROCEDURE GET_IFAD_VERSION
     17287**DCL
GET_IFAD_VERSION.KEY_.BOUND IN PROCEDURE GET_IFAD_VERSION
     17287**DCL
GET_IFAD_VERSION.KEY_.KEY$ IN PROCEDURE GET_IFAD_VERSION
     17288**DCL
GET_IFAD_VERSION.V.DCB# IN PROCEDURE GET_IFAD_VERSION
     17291**DCL
GET_IFAD_VERSION.V.DVBYTE IN PROCEDURE GET_IFAD_VERSION
     17301**DCL
GET_IFAD_VERSION.V.DVBYTE.BIN# IN PROCEDURE GET_IFAD_VERSION
     17302**DCL
GET_IFAD_VERSION.V.DVBYTE.BP# IN PROCEDURE GET_IFAD_VERSION
     17301**DCL
GET_IFAD_VERSION.V.DVBYTE.CONT# IN PROCEDURE GET_IFAD_VERSION
     17304**DCL
GET_IFAD_VERSION.V.DVBYTE.NODAT# IN PROCEDURE GET_IFAD_VERSION
     17303**DCL
GET_IFAD_VERSION.V.DVBYTE.TOP# IN PROCEDURE GET_IFAD_VERSION
     17301**DCL
GET_IFAD_VERSION.V.DVBYTE.TRANS# IN PROCEDURE GET_IFAD_VERSION
     17303**DCL
GET_IFAD_VERSION.V.DVBYTE.VFC# IN PROCEDURE GET_IFAD_VERSION
     17302**DCL
GET_IFAD_VERSION.V.EVENT# IN PROCEDURE GET_IFAD_VERSION
     17300**DCL
GET_IFAD_VERSION.V.FULL# IN PROCEDURE GET_IFAD_VERSION
     17293**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:159  
GET_IFAD_VERSION.V.ID# IN PROCEDURE GET_IFAD_VERSION
     17292**DCL
GET_IFAD_VERSION.V.IDS# IN PROCEDURE GET_IFAD_VERSION
     17293**DCL
GET_IFAD_VERSION.V.IOERROK# IN PROCEDURE GET_IFAD_VERSION
     17294**DCL
GET_IFAD_VERSION.V.KEYCHNG# IN PROCEDURE GET_IFAD_VERSION
     17293**DCL
GET_IFAD_VERSION.V.KEYR# IN PROCEDURE GET_IFAD_VERSION
     17292**DCL
GET_IFAD_VERSION.V.KEYS# IN PROCEDURE GET_IFAD_VERSION
     17292**DCL
GET_IFAD_VERSION.V.KEYTYPE# IN PROCEDURE GET_IFAD_VERSION
     17300**DCL
GET_IFAD_VERSION.V.ODFNC# IN PROCEDURE GET_IFAD_VERSION
     17305**DCL
GET_IFAD_VERSION.V.RECNUM# IN PROCEDURE GET_IFAD_VERSION
     17305**DCL
GET_IFAD_VERSION.V.REREADPOS# IN PROCEDURE GET_IFAD_VERSION
     17306**DCL
GET_IFAD_VERSION.V.SEED# IN PROCEDURE GET_IFAD_VERSION
     17301**DCL
GET_IFAD_VERSION.V.SINPUTSIZE# IN PROCEDURE GET_IFAD_VERSION
     17305**DCL
GET_IFAD_VERSION.V.STRPVFC# IN PROCEDURE GET_IFAD_VERSION
     17304**DCL
GET_IFAD_VERSION.V.WAIT# IN PROCEDURE GET_IFAD_VERSION
     17291**DCL
GET_IFAD_VERSION.V_ IN PROCEDURE GET_IFAD_VERSION
     17287**DCL
GET_LINK_DATE.BUF_ IN PROCEDURE GET_TOLTS_VERSION
     16967**DCL
GET_LINK_DATE.BUF_.BOUND IN PROCEDURE GET_TOLTS_VERSION
     16967**DCL
GET_LINK_DATE.BUF_.BUF$ IN PROCEDURE GET_TOLTS_VERSION
     16968**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:160  
GET_LINK_DATE.IDBUF_ IN PROCEDURE GET_TOLTS_VERSION
     16969**DCL
GET_LINK_DATE.KEY_ IN PROCEDURE GET_TOLTS_VERSION
     16965**DCL
GET_LINK_DATE.KEY_.BOUND IN PROCEDURE GET_TOLTS_VERSION
     16965**DCL
GET_LINK_DATE.KEY_.KEY$ IN PROCEDURE GET_TOLTS_VERSION
     16966**DCL
GET_LINK_DATE.V.DCB# IN PROCEDURE GET_TOLTS_VERSION
     16969**DCL
GET_LINK_DATE.V.DVBYTE IN PROCEDURE GET_TOLTS_VERSION
     16979**DCL
GET_LINK_DATE.V.DVBYTE.BIN# IN PROCEDURE GET_TOLTS_VERSION
     16980**DCL
GET_LINK_DATE.V.DVBYTE.BP# IN PROCEDURE GET_TOLTS_VERSION
     16979**DCL
GET_LINK_DATE.V.DVBYTE.CONT# IN PROCEDURE GET_TOLTS_VERSION
     16982**DCL
GET_LINK_DATE.V.DVBYTE.NODAT# IN PROCEDURE GET_TOLTS_VERSION
     16981**DCL
GET_LINK_DATE.V.DVBYTE.TOP# IN PROCEDURE GET_TOLTS_VERSION
     16979**DCL
GET_LINK_DATE.V.DVBYTE.TRANS# IN PROCEDURE GET_TOLTS_VERSION
     16981**DCL
GET_LINK_DATE.V.DVBYTE.VFC# IN PROCEDURE GET_TOLTS_VERSION
     16980**DCL
GET_LINK_DATE.V.EVENT# IN PROCEDURE GET_TOLTS_VERSION
     16978**DCL
GET_LINK_DATE.V.FULL# IN PROCEDURE GET_TOLTS_VERSION
     16971**DCL
GET_LINK_DATE.V.ID# IN PROCEDURE GET_TOLTS_VERSION
     16970**DCL
GET_LINK_DATE.V.IDS# IN PROCEDURE GET_TOLTS_VERSION
     16971**DCL
GET_LINK_DATE.V.IOERROK# IN PROCEDURE GET_TOLTS_VERSION
     16972**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:161  
GET_LINK_DATE.V.KEYCHNG# IN PROCEDURE GET_TOLTS_VERSION
     16971**DCL
GET_LINK_DATE.V.KEYR# IN PROCEDURE GET_TOLTS_VERSION
     16970**DCL
GET_LINK_DATE.V.KEYS# IN PROCEDURE GET_TOLTS_VERSION
     16970**DCL
GET_LINK_DATE.V.KEYTYPE# IN PROCEDURE GET_TOLTS_VERSION
     16978**DCL
GET_LINK_DATE.V.ODFNC# IN PROCEDURE GET_TOLTS_VERSION
     16983**DCL
GET_LINK_DATE.V.RECNUM# IN PROCEDURE GET_TOLTS_VERSION
     16983**DCL
GET_LINK_DATE.V.REREADPOS# IN PROCEDURE GET_TOLTS_VERSION
     16984**DCL
GET_LINK_DATE.V.SEED# IN PROCEDURE GET_TOLTS_VERSION
     16979**DCL
GET_LINK_DATE.V.SINPUTSIZE# IN PROCEDURE GET_TOLTS_VERSION
     16983**DCL
GET_LINK_DATE.V.STRPVFC# IN PROCEDURE GET_TOLTS_VERSION
     16982**DCL
GET_LINK_DATE.V.WAIT# IN PROCEDURE GET_TOLTS_VERSION
     16969**DCL
GET_LINK_DATE.V_ IN PROCEDURE GET_TOLTS_VERSION
     16965**DCL
M$ACCT
      9817**DCL-ENT
M$ACTIVATE
      9820**DCL-ENT
M$ALIB
      9813**DCL-ENT
M$ASUSER
      9815**DCL-ENT
M$ATTACH
      9822**DCL-ENT
M$BADPP
      9840**DCL-ENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:162  
M$CGCTL
      9821**DCL-ENT
M$CGINFO
      9821**DCL-ENT
M$CHECK
      9802**DCL-ENT
M$CHGUNIT
      9860**DCL-ENT
M$CLRSTK
      9858**DCL-ENT
M$CMDVAR
      9869**DCL-ENT
M$CONFIG
      9830**DCL-ENT
M$CORRES
      9805**DCL-ENT
M$CPEXIT
      9814**DCL-ENT
M$CVM
      9838**DCL-ENT
M$CVOL
      9803**DCL-ENT
M$DCLFLD
      9830**DCL-ENT
M$DEACTIVATE
      9820**DCL-ENT
M$DECKFILE.ACCT#
     16536**DCL
M$DECKFILE.ACS#
     16547**DCL
M$DECKFILE.AFTRBLK
     16570**DCL
M$DECKFILE.AGE
     16586**DCL
M$DECKFILE.ALTKEYX
     16558**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:163  
M$DECKFILE.AMFLG
     16565**DCL
M$DECKFILE.AMFLG.ACCF
     16565**DCL
M$DECKFILE.AMFLG.ACSF
     16566**DCL
M$DECKFILE.AMFLG.INSF
     16566**DCL
M$DECKFILE.AMFLG.PROF
     16566**DCL
M$DECKFILE.AMFLG.SNLF
     16566**DCL
M$DECKFILE.AMFLG.USRF
     16566**DCL
M$DECKFILE.AMR#
     16541**DCL
M$DECKFILE.AMRSETSTA
     16539**DCL
M$DECKFILE.ANSISPANSEQ#
     16562**DCL
M$DECKFILE.ASN#
     16544**DCL
M$DECKFILE.ATTR
     16549**DCL
M$DECKFILE.ATTR.APL#
     16550**DCL
M$DECKFILE.ATTR.BIN#
     16550**DCL
M$DECKFILE.ATTR.DENS#
     16549**DCL
M$DECKFILE.ATTR.GRLGL#
     16549**DCL
M$DECKFILE.ATTR.LOWERCASE#
     16551**DCL
M$DECKFILE.ATTR.NATL#
     16550**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:164  
M$DECKFILE.ATTR.NOXLATE#
     16550**DCL
M$DECKFILE.ATTR.TRANSLGL#
     16550**DCL
M$DECKFILE.ATTR.TRUOVRPRT#
     16550**DCL
M$DECKFILE.ATTR.UPPERCASE#
     16550**DCL
M$DECKFILE.AU#
     16538**DCL
M$DECKFILE.AUTHFFLG
     16560**DCL
M$DECKFILE.AUTHFFLG.AU#
     16561**DCL
M$DECKFILE.AUTHFFLG.AURD#
     16562**DCL
M$DECKFILE.AUTHFFLG.CREATE#
     16561**DCL
M$DECKFILE.AUTHFFLG.DELF#
     16561**DCL
M$DECKFILE.AUTHFFLG.DELR#
     16561**DCL
M$DECKFILE.AUTHFFLG.EXEC#
     16561**DCL
M$DECKFILE.AUTHFFLG.NOLIST#
     16561**DCL
M$DECKFILE.AUTHFFLG.READ#
     16560**DCL
M$DECKFILE.AUTHFFLG.REATTR#
     16561**DCL
M$DECKFILE.AUTHFFLG.TCTL#
     16562**DCL
M$DECKFILE.AUTHFFLG.UPD#
     16561**DCL
M$DECKFILE.AUTHFFLG.WNEW#
     16561**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:165  
M$DECKFILE.BADARS#
     16564**DCL
M$DECKFILE.BFR
     16587**DCL
M$DECKFILE.BFR.BUFUP
     16587**DCL
M$DECKFILE.BFR.BUFX
     16587**DCL
M$DECKFILE.BFR.CHNG
     16587**DCL
M$DECKFILE.BFR.CVM
     16587**DCL
M$DECKFILE.BFR.DA
     16588**DCL
M$DECKFILE.BFR.SCRUB
     16587**DCL
M$DECKFILE.BFR1
     16588**DCL
M$DECKFILE.BFR1.CX
     16589**DCL
M$DECKFILE.BFR1.FLAGS
     16588**DCL
M$DECKFILE.BFR1.FLAGS.ONE_WORD_HEADER
     16588**DCL
M$DECKFILE.BFR1.SIZ
     16589**DCL
M$DECKFILE.BLKL#
     16544**DCL
M$DECKFILE.BLKLEN
     16577**DCL
M$DECKFILE.BLOCKED#
     16543**DCL
M$DECKFILE.BOL#
     16546**DCL
M$DECKFILE.BUPF
     16526**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:166  
M$DECKFILE.BUPM#
     16543**DCL
M$DECKFILE.BYTESLEFT
     16576**DCL
M$DECKFILE.CACHE
     16569**DCL
M$DECKFILE.CBUFNUM
     16575**DCL
M$DECKFILE.CFU$
     16572**DCL
M$DECKFILE.CHAIN#
     16553**DCL
M$DECKFILE.CHANTIME#
     16552**DCL
M$DECKFILE.CNVRT#
     16540**DCL
M$DECKFILE.CODE16$
     16558**DCL
M$DECKFILE.COMP#
     16542**DCL
M$DECKFILE.CONNCT#
     16552**DCL
M$DECKFILE.CONT
     16570**DCL
M$DECKFILE.CRECNO
     16576**DCL
M$DECKFILE.CRECX
     16575**DCL
M$DECKFILE.CSEED
     16576**DCL
M$DECKFILE.CTG#
     16541**DCL
M$DECKFILE.CTLCMDIN
     16582**DCL
M$DECKFILE.CVOL#
     16542**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:167  
M$DECKFILE.CWORD
     16584**DCL
M$DECKFILE.CX
     16584**DCL
M$DECKFILE.DBGDCBNO#
     16545**DCL
M$DECKFILE.DBGSYSID#
     16545**DCL
M$DECKFILE.DCB#
     16562**DCL
M$DECKFILE.DCBNAME
     16590**DCL
M$DECKFILE.DCBNAME.N
     16590**DCL
M$DECKFILE.DCBNAME.S
     16590**DCL
M$DECKFILE.DCBNAME.X
     16590**DCL
M$DECKFILE.DCT$
     16555**DCL
M$DECKFILE.DDEV
     16530**DCL
M$DECKFILE.DDEV.CP#
     16530**DCL
M$DECKFILE.DDEV.GR#
     16531**DCL
M$DECKFILE.DDEV.IC#
     16530**DCL
M$DECKFILE.DDEV.LP#
     16530**DCL
M$DECKFILE.DDEV.UCOUT#
     16530**DCL
M$DECKFILE.DDEV.XEQ#
     16530**DCL
M$DECKFILE.DECRYPT
     16581**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:168  
M$DECKFILE.DENSITY#
     16553**DCL
M$DECKFILE.DESC
     16531**DCL
M$DECKFILE.DESC.ACTIVE#
     16533**DCL
M$DECKFILE.DESC.ARCHIVE#
     16533**DCL
M$DECKFILE.DESC.BAD#
     16532**DCL
M$DECKFILE.DESC.BUF#
     16532**DCL
M$DECKFILE.DESC.BUPM#
     16533**DCL
M$DECKFILE.DESC.DELF#
     16532**DCL
M$DECKFILE.DESC.FETCH#
     16534**DCL
M$DECKFILE.DESC.NBUF#
     16533**DCL
M$DECKFILE.DESC.NOLIST#
     16532**DCL
M$DECKFILE.DESC.ODSTOW#
     16532**DCL
M$DECKFILE.DESC.QS#
     16533**DCL
M$DECKFILE.DESC.TERMINATE#
     16534**DCL
M$DECKFILE.DESC.TPB#
     16534**DCL
M$DECKFILE.DEVADR
     16556**DCL
M$DECKFILE.DEVADR.CHAN#
     16556**DCL
M$DECKFILE.DEVADR.DVN#
     16556**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:169  
M$DECKFILE.DEVADR.IOM#
     16556**DCL
M$DECKFILE.DISP#
     16544**DCL
M$DECKFILE.DQH$
     16555**DCL
M$DECKFILE.DVBYTE
     16525**DCL
M$DECKFILE.DVBYTE.BIN#
     16525**DCL
M$DECKFILE.DVBYTE.TOP#
     16525**DCL
M$DECKFILE.DVBYTE.TRANS#
     16525**DCL
M$DECKFILE.DVBYTE.VFC#
     16525**DCL
M$DECKFILE.DVFC#
     16554**DCL
M$DECKFILE.DVTYPE#
     16544**DCL
M$DECKFILE.EBCDIC#
     16541**DCL
M$DECKFILE.ENQF
     16569**DCL
M$DECKFILE.EOMVAL#
     16527**DCL
M$DECKFILE.EOMVAL#.VALUE#
     16527**DCL
M$DECKFILE.EOMVAL#.VFLG#
     16527**DCL
M$DECKFILE.EOP
     16565**DCL
M$DECKFILE.EVENT
     16559**DCL
M$DECKFILE.EXIST#
     16542**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:170  
M$DECKFILE.EXPIRE#
     16546**DCL
M$DECKFILE.FCD#
     16541**DCL
M$DECKFILE.FCI#
     16541**DCL
M$DECKFILE.FCN
     16577**DCL
M$DECKFILE.FCN.CNT
     16577**DCL
M$DECKFILE.FCN.F
     16577**DCL
M$DECKFILE.FDCM
     16577**DCL
M$DECKFILE.FEPIO
     16585**DCL
M$DECKFILE.FEPIO.BPP
     16586**DCL
M$DECKFILE.FEPIO.BUFX
     16586**DCL
M$DECKFILE.FEPIO.EVENT
     16585**DCL
M$DECKFILE.FEPIO.KEYX
     16585**DCL
M$DECKFILE.FEPIO.KPP
     16586**DCL
M$DECKFILE.FEPIO2
     16589**DCL
M$DECKFILE.FEPIO3
     16589**DCL
M$DECKFILE.FEPSIZ
     16584**DCL
M$DECKFILE.FEPSIZ.BUF
     16584**DCL
M$DECKFILE.FEPSIZ.KEY
     16584**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:171  
M$DECKFILE.FEXT
     16564**DCL
M$DECKFILE.FEXTX
     16546**DCL
M$DECKFILE.FFLG
     16527**DCL
M$DECKFILE.FFLG.AU#
     16529**DCL
M$DECKFILE.FFLG.AURD#
     16529**DCL
M$DECKFILE.FFLG.CREATE#
     16529**DCL
M$DECKFILE.FFLG.DELF#
     16528**DCL
M$DECKFILE.FFLG.DELR#
     16527**DCL
M$DECKFILE.FFLG.EXEC#
     16529**DCL
M$DECKFILE.FFLG.NOLIST#
     16528**DCL
M$DECKFILE.FFLG.READ#
     16527**DCL
M$DECKFILE.FFLG.REATTR#
     16528**DCL
M$DECKFILE.FFLG.TCTL#
     16529**DCL
M$DECKFILE.FFLG.UPD#
     16528**DCL
M$DECKFILE.FFLG.WNEW#
     16528**DCL
M$DECKFILE.FIELDX
     16558**DCL
M$DECKFILE.FLPW#
     16519**DCL
M$DECKFILE.FMOD
     16565**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:172  
M$DECKFILE.FPRGX
     16558**DCL
M$DECKFILE.FPSTR
     16578**DCL
M$DECKFILE.FTAM
     16571**DCL
M$DECKFILE.FTAM.CTX
     16571**DCL
M$DECKFILE.FTAM.PMME
     16572**DCL
M$DECKFILE.FTAM.USR
     16571**DCL
M$DECKFILE.FUN#
     16544**DCL
M$DECKFILE.GDISP
     16580**DCL
M$DECKFILE.GHSTACS#
     16557**DCL
M$DECKFILE.GRPOS
     16569**DCL
M$DECKFILE.GTYP
     16565**DCL
M$DECKFILE.HASH
     16576**DCL
M$DECKFILE.IASN
     16583**DCL
M$DECKFILE.ID
     16585**DCL
M$DECKFILE.ID.DA
     16585**DCL
M$DECKFILE.ID.GX
     16585**DCL
M$DECKFILE.IFMT
     16581**DCL
M$DECKFILE.IGNOREFSN#
     16538**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:173  
M$DECKFILE.INDX
     16578**DCL
M$DECKFILE.IOERROK#
     16539**DCL
M$DECKFILE.IORG
     16575**DCL
M$DECKFILE.IRRECX
     16563**DCL
M$DECKFILE.IWL
     16582**DCL
M$DECKFILE.IWL.HDRIWL
     16582**DCL
M$DECKFILE.IWL.SEQIWL
     16582**DCL
M$DECKFILE.IWL.TABIWL
     16582**DCL
M$DECKFILE.JRNLBYPASS#
     16557**DCL
M$DECKFILE.KEYL#
     16547**DCL
M$DECKFILE.KEYTYPE#
     16559**DCL
M$DECKFILE.KEYX#
     16547**DCL
M$DECKFILE.KFIELDX
     16559**DCL
M$DECKFILE.LASTKEY
     16571**DCL
M$DECKFILE.LASTKEY$
     16571**DCL
M$DECKFILE.LDCTX
     16556**DCL
M$DECKFILE.LDFLG
     16568**DCL
M$DECKFILE.LINES#
     16553**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:174  
M$DECKFILE.LOAD#
     16538**DCL
M$DECKFILE.LOGSEC
     16580**DCL
M$DECKFILE.LPOOL
     16572**DCL
M$DECKFILE.LRDL0#
     16548**DCL
M$DECKFILE.LSLIDE#
     16548**DCL
M$DECKFILE.LSTAOR#
     16539**DCL
M$DECKFILE.LSTBLK
     16570**DCL
M$DECKFILE.MAXVOL#
     16552**DCL
M$DECKFILE.MEDIA
     16581**DCL
M$DECKFILE.MODCNT
     16579**DCL
M$DECKFILE.MOUNT
     16567**DCL
M$DECKFILE.MOVED
     16583**DCL
M$DECKFILE.MPC$
     16555**DCL
M$DECKFILE.MUST_CVOL
     16567**DCL
M$DECKFILE.NAME#
     16535**DCL
M$DECKFILE.NAME#.C17
     16536**DCL
M$DECKFILE.NAME#.C17.CC
     16536**DCL
M$DECKFILE.NAME#.L
     16535**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:175  
M$DECKFILE.NEW_FSECT
     16567**DCL
M$DECKFILE.OLDIOERR
     16580**DCL
M$DECKFILE.OWNER
     16568**DCL
M$DECKFILE.PASS#
     16536**DCL
M$DECKFILE.PASSF#
     16540**DCL
M$DECKFILE.PATH
     16563**DCL
M$DECKFILE.PATH.CHAN#
     16563**DCL
M$DECKFILE.PATH.IOM#
     16563**DCL
M$DECKFILE.PGINGRAN
     16581**DCL
M$DECKFILE.PRIVOPN
     16580**DCL
M$DECKFILE.PSN#
     16536**DCL
M$DECKFILE.QISS#
     16538**DCL
M$DECKFILE.RA
     16568**DCL
M$DECKFILE.RDL0#
     16526**DCL
M$DECKFILE.REALSPAN
     16581**DCL
M$DECKFILE.RECL#
     16545**DCL
M$DECKFILE.RESNT
     16537**DCL
M$DECKFILE.RESNT.NUM
     16537**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:176  
M$DECKFILE.RESNT.TYP
     16537**DCL
M$DECKFILE.RETRYCNT#
     16531**DCL
M$DECKFILE.RPOS
     16569**DCL
M$DECKFILE.SEED#
     16564**DCL
M$DECKFILE.SEGX
     16579**DCL
M$DECKFILE.SEQ#
     16554**DCL
M$DECKFILE.SEQCOL#
     16554**DCL
M$DECKFILE.SEQID#
     16554**DCL
M$DECKFILE.SETSTA$
     16534**DCL
M$DECKFILE.SEZ_OK
     16567**DCL
M$DECKFILE.SHARE#
     16542**DCL
M$DECKFILE.SHARED
     16565**DCL
M$DECKFILE.SLIDE#
     16526**DCL
M$DECKFILE.SPAN
     16568**DCL
M$DECKFILE.SPANNED#
     16543**DCL
M$DECKFILE.SPARE#
     16548**DCL
M$DECKFILE.STARF
     16564**DCL
M$DECKFILE.STARTX
     16560**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:177  
M$DECKFILE.STARX
     16569**DCL
M$DECKFILE.STR#
     16579**DCL
M$DECKFILE.SYSID#
     16546**DCL
M$DECKFILE.TAPTYP
     16573**DCL
M$DECKFILE.TAPTYP.CP6F
     16573**DCL
M$DECKFILE.TAPTYP.HAVLASTKEY
     16574**DCL
M$DECKFILE.TAPTYP.MANAGED
     16574**DCL
M$DECKFILE.TAPTYP.NOCVOL
     16574**DCL
M$DECKFILE.TAPTYP.PASTFM
     16574**DCL
M$DECKFILE.TAPTYP.RWASC
     16573**DCL
M$DECKFILE.TAPTYP.USRBUF
     16574**DCL
M$DECKFILE.TDALVL
     16572**DCL
M$DECKFILE.TDEXTST$
     16535**DCL
M$DECKFILE.TDFLG
     16551**DCL
M$DECKFILE.TDFLG.SDSK#
     16551**DCL
M$DECKFILE.TDSTAT#
     16538**DCL
M$DECKFILE.TRNC
     16570**DCL
M$DECKFILE.TYC
     16519**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:178  
M$DECKFILE.TYC.BLNKTP#
     16520**DCL
M$DECKFILE.TYC.BOF#
     16520**DCL
M$DECKFILE.TYC.BOT#
     16520**DCL
M$DECKFILE.TYC.CDALRT#
     16523**DCL
M$DECKFILE.TYC.CGCRCW
     16524**DCL
M$DECKFILE.TYC.CGCWRV
     16524**DCL
M$DECKFILE.TYC.CGFULL
     16524**DCL
M$DECKFILE.TYC.CGKEYV
     16523**DCL
M$DECKFILE.TYC.CGLWRV
     16523**DCL
M$DECKFILE.TYC.DACT#
     16522**DCL
M$DECKFILE.TYC.DI#
     16521**DCL
M$DECKFILE.TYC.EGV#
     16519**DCL
M$DECKFILE.TYC.EOD#
     16521**DCL
M$DECKFILE.TYC.EOF#
     16520**DCL
M$DECKFILE.TYC.EOT#
     16520**DCL
M$DECKFILE.TYC.FRAW#
     16522**DCL
M$DECKFILE.TYC.IOERR#
     16521**DCL
M$DECKFILE.TYC.LAST#
     16523**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:179  
M$DECKFILE.TYC.LD#
     16521**DCL
M$DECKFILE.TYC.LDISC#
     16522**DCL
M$DECKFILE.TYC.MTRAP#
     16521**DCL
M$DECKFILE.TYC.OPER#
     16519**DCL
M$DECKFILE.TYC.PROT#
     16522**DCL
M$DECKFILE.TYC.TIMO#
     16522**DCL
M$DECKFILE.TYC.XTRARD
     16523**DCL
M$DECKFILE.TYPE#
     16537**DCL
M$DECKFILE.UB$
     16578**DCL
M$DECKFILE.UBYTES
     16578**DCL
M$DECKFILE.UCOUT
     16573**DCL
M$DECKFILE.UNIQUEBLD
     16583**DCL
M$DECKFILE.UOPT#
     16540**DCL
M$DECKFILE.UPDCNT
     16583**DCL
M$DECKFILE.VFCCHAR#
     16559**DCL
M$DECKFILE.VOL#
     16552**DCL
M$DECKFILE.VOLACCESS#
     16539**DCL
M$DECKFILE.WAIT
     16570**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:180  
M$DECKFILE.WCDATA
     16573**DCL
M$DECKFILE.WIDTH#
     16531**DCL
M$DECKFILE.WRCMP
     16573**DCL
M$DECKFILE.WSR#
     16548**DCL
M$DECKFILE.XTEND#
     16542**DCL
M$DECKFILE.XTNSIZE#
     16547**DCL
M$DELREC
      9802**DCL-ENT
M$DEQ
      9867**DCL-ENT
M$DETACH
      9822**DCL-ENT
M$DEVICE
      9804**DCL-ENT
M$DISPLAY
      9867**DCL-ENT
M$DISPRES
      9807**DCL-ENT
M$DLIB
      9813**DCL-ENT
M$DO
     16593**DCL
M$DRIBBLE
      9830**DCL-ENT
M$DRTN
      9858**DCL-ENT
M$DSUSER
      9815**DCL-ENT
M$ENQ
      9866**DCL-ENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:181  
M$EOM
      9825**DCL-ENT
M$ERASE
      9831**DCL-ENT
M$ERRMSG
      9863**DCL-ENT
M$EXHUME
      9864**DCL-ENT
M$EXTEND
      9804**DCL-ENT
M$FDP
      9836**DCL-ENT
M$FDS
      9835**DCL-ENT
M$FEBOOT
      9828**DCL-ENT
M$FECTL
      9829**DCL-ENT
M$FEDUMP
      9828**DCL-ENT
M$FID
      9863**DCL-ENT
M$FINDPROC
      9817**DCL-ENT
M$FSUSER
      9815**DCL-ENT
M$FVP
      9837**DCL-ENT
M$FWCG
      9821**DCL-ENT
M$GBPL
      9841**DCL-ENT
M$GDDL
      9837**DCL-ENT
M$GDP
      9836**DCL-ENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:182  
M$GETDCB
      9806**DCL-ENT
M$GETMOUSE
      9846**DCL-ENT
M$GETPM
      9847**DCL-ENT
M$GJOB
      9865**DCL-ENT
M$GLINEATTR
      9825**DCL-ENT
M$GOODPP
      9840**DCL-ENT
M$GPLATEN
      9833**DCL-ENT
M$GPROMPT
      9832**DCL-ENT
M$GTRMATTR
      9826**DCL-ENT
M$GTRMCTL
      9824**DCL-ENT
M$GTRMTAB
      9827**DCL-ENT
M$GVP
      9836**DCL-ENT
M$HELP
      9863**DCL-ENT
M$INTRTN
      9816**DCL-ENT
M$IOQ
      9851**DCL-ENT
M$JOBSTATS
      9865**DCL-ENT
M$KEYIN
      9805**DCL-ENT
M$LDEV
      9800**DCL-ENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:183  
M$LDTRC
      9813**DCL-ENT
M$LIMIT
      9806**DCL-ENT
M$LINES
      9805**DCL-ENT
M$LINK
      9812**DCL-ENT
M$LM
     16592**DCL
M$LO
     16594**DCL
M$MADMUCK
      9808**DCL-ENT
M$MAKUSER
      9839**DCL-ENT
M$MBS
      9807**DCL-ENT
M$MDFFLD
      9831**DCL-ENT
M$MERC
      9856**DCL-ENT
M$MERCS
      9857**DCL-ENT
M$MIRROR
      9851**DCL-ENT
M$MONINFO
      9868**DCL-ENT
M$MPL
      9841**DCL-ENT
M$NODEINFO
      9832**DCL-ENT
M$NXTUSR
      9866**DCL-ENT
M$OCMSG
      9864**DCL-ENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:184  
M$OLAY
      9812**DCL-ENT
M$PAS
      9841**DCL-ENT
M$PATHCON
      9864**DCL-ENT
M$PDS
      9835**DCL-ENT
M$PFIL
      9802**DCL-ENT
M$PLATEN
      9826**DCL-ENT
M$PRECORD
      9804**DCL-ENT
M$PROCNAME
      9817**DCL-ENT
M$PROFILE
      9828**DCL-ENT
M$PROMPT
      9824**DCL-ENT
M$RACST
      9808**DCL-ENT
M$RDSYSLOG
      9849**DCL-ENT
M$RELDCB
      9806**DCL-ENT
M$RELRES
      9807**DCL-ENT
M$RELSTARF
      9809**DCL-ENT
M$REM
      9809**DCL-ENT
M$RENV
      9856**DCL-ENT
M$REQUIRE
      9808**DCL-ENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:185  
M$RETRY
      9857**DCL-ENT
M$RETRYS
      9857**DCL-ENT
M$REW
      9803**DCL-ENT
M$RLSFLD
      9831**DCL-ENT
M$RPRIV
      9859**DCL-ENT
M$RSPP
      9838**DCL-ENT
M$RSWITCH
      9860**DCL-ENT
M$RUE
      9866**DCL-ENT
M$SAD
      9839**DCL-ENT
M$SAVE
      9815**DCL-ENT
M$SCON
      9816**DCL-ENT
M$SCREECH
      9814**DCL-ENT
M$SENV
      9856**DCL-ENT
M$SETFMA
      9800**DCL-ENT
M$SETFP
      9829**DCL-ENT
M$SINPUT
      9827**DCL-ENT
M$SLCFLD
      9832**DCL-ENT
M$SMOUSE
      9846**DCL-ENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:186  
M$SMPRT
      9838**DCL-ENT
M$SSC
      9839**DCL-ENT
M$SSWITCH
      9859**DCL-ENT
M$STATE
      9868**DCL-ENT
M$STD
      9840**DCL-ENT
M$STIMER
      9854**DCL-ENT
M$STLPP
      9837**DCL-ENT
M$STRAP
      9854**DCL-ENT
M$STRMATTR
      9826**DCL-ENT
M$STRMCTL
      9824**DCL-ENT
M$STRMTAB
      9827**DCL-ENT
M$SYMBIO
      9865**DCL-ENT
M$SYSCON
      9851**DCL-ENT
M$SYSID
      9869**DCL-ENT
M$TDCLOSE
      9850**DCL-ENT
M$TDIO
      9850**DCL-ENT
M$TDOPEN
      9849**DCL-ENT
M$TDREQCPU
      9850**DCL-ENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:187  
M$TEMPWROC
      9844**DCL-ENT
M$TRMISC
      9829**DCL-ENT
M$TRMPRG
      9825**DCL-ENT
M$TRTN
      9858**DCL-ENT
M$TRUNC
      9801**DCL-ENT
M$TTIMER
      9854**DCL-ENT
M$UC
      9824**DCL
M$UMPL
      9841**DCL-ENT
M$UNFID
      9863**DCL-ENT
M$UNLATCH
      9820**DCL-ENT
M$UNSHARE
      9817**DCL-ENT
M$USRFIELD
      9860**DCL-ENT
M$VIRTUAL
      9835**DCL-ENT
M$WAIT
      9858**DCL-ENT
M$WEOF
      9803**DCL-ENT
M$WRITE
      9801**DCL-ENT
M$WRSYSLOG
      9849**DCL-ENT
M$XCON
      9855**DCL-ENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:188  
M$XCONRTN
      9816**DCL-ENT
M$XEQTIME
      9868**DCL-ENT
M$XFLUSH
      9809**DCL-ENT
M$XMOUSE
      9846**DCL-ENT
M$XXX
      9812**DCL-ENT
M$YC
      9814**DCL-ENT
OPEN_DECKFILE.ACCESS_ IN PROCEDURE GET_IFAD_VERSION
     17223**DCL
OPEN_DECKFILE.ACCT_ IN PROCEDURE GET_IFAD_VERSION
     17225**DCL
OPEN_DECKFILE.FORM_ IN PROCEDURE GET_IFAD_VERSION
     17229**DCL
OPEN_DECKFILE.FPARAM_ IN PROCEDURE GET_IFAD_VERSION
     17226**DCL
OPEN_DECKFILE.FPRG_ IN PROCEDURE GET_IFAD_VERSION
     17230**DCL
OPEN_DECKFILE.IFPARAM_ IN PROCEDURE GET_IFAD_VERSION
     17226**DCL
OPEN_DECKFILE.INSTATTR_ IN PROCEDURE GET_IFAD_VERSION
     17225**DCL
OPEN_DECKFILE.IRKEYS_ IN PROCEDURE GET_IFAD_VERSION
     17230**DCL
OPEN_DECKFILE.IRREC_ IN PROCEDURE GET_IFAD_VERSION
     17229**DCL
OPEN_DECKFILE.NAME_ IN PROCEDURE GET_IFAD_VERSION
     17222**DCL
OPEN_DECKFILE.NODENAME_ IN PROCEDURE GET_IFAD_VERSION
     17227**DCL
OPEN_DECKFILE.PASS_ IN PROCEDURE GET_IFAD_VERSION
     17223**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:189  
OPEN_DECKFILE.PROCATTR_ IN PROCEDURE GET_IFAD_VERSION
     17225**DCL
OPEN_DECKFILE.RECFIELD_ IN PROCEDURE GET_IFAD_VERSION
     17228**DCL
OPEN_DECKFILE.SETSTA_ IN PROCEDURE GET_IFAD_VERSION
     17222**DCL
OPEN_DECKFILE.SN_ IN PROCEDURE GET_IFAD_VERSION
     17221**DCL
OPEN_DECKFILE.UATTR_ IN PROCEDURE GET_IFAD_VERSION
     17224**DCL
OPEN_DECKFILE.V.ACS# IN PROCEDURE GET_IFAD_VERSION
     17241**DCL
OPEN_DECKFILE.V.ANSISPANSEQ# IN PROCEDURE GET_IFAD_VERSION
     17254**DCL
OPEN_DECKFILE.V.ASN# IN PROCEDURE GET_IFAD_VERSION
     17240**DCL
OPEN_DECKFILE.V.ATTR# IN PROCEDURE GET_IFAD_VERSION
     17257**DCL
OPEN_DECKFILE.V.AU# IN PROCEDURE GET_IFAD_VERSION
     17259**DCL
OPEN_DECKFILE.V.BLKL# IN PROCEDURE GET_IFAD_VERSION
     17247**DCL
OPEN_DECKFILE.V.BLOCKED# IN PROCEDURE GET_IFAD_VERSION
     17242**DCL
OPEN_DECKFILE.V.BUPM# IN PROCEDURE GET_IFAD_VERSION
     17243**DCL
OPEN_DECKFILE.V.CHAIN# IN PROCEDURE GET_IFAD_VERSION
     17256**DCL
OPEN_DECKFILE.V.CNVRT# IN PROCEDURE GET_IFAD_VERSION
     17250**DCL
OPEN_DECKFILE.V.COMP# IN PROCEDURE GET_IFAD_VERSION
     17242**DCL
OPEN_DECKFILE.V.COPIES# IN PROCEDURE GET_IFAD_VERSION
     17262**DCL
OPEN_DECKFILE.V.CTG# IN PROCEDURE GET_IFAD_VERSION
     17234**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:190  
OPEN_DECKFILE.V.CVOL# IN PROCEDURE GET_IFAD_VERSION
     17235**DCL
OPEN_DECKFILE.V.DBGDCBNO# IN PROCEDURE GET_IFAD_VERSION
     17261**DCL
OPEN_DECKFILE.V.DBGSYSID# IN PROCEDURE GET_IFAD_VERSION
     17261**DCL
OPEN_DECKFILE.V.DCB# IN PROCEDURE GET_IFAD_VERSION
     17230**DCL
OPEN_DECKFILE.V.DCBCONLGL# IN PROCEDURE GET_IFAD_VERSION
     17252**DCL
OPEN_DECKFILE.V.DELETE# IN PROCEDURE GET_IFAD_VERSION
     17232**DCL
OPEN_DECKFILE.V.DENSITY# IN PROCEDURE GET_IFAD_VERSION
     17262**DCL
OPEN_DECKFILE.V.DISP# IN PROCEDURE GET_IFAD_VERSION
     17246**DCL
OPEN_DECKFILE.V.DVFC# IN PROCEDURE GET_IFAD_VERSION
     17257**DCL
OPEN_DECKFILE.V.EBCDIC# IN PROCEDURE GET_IFAD_VERSION
     17250**DCL
OPEN_DECKFILE.V.EVENT# IN PROCEDURE GET_IFAD_VERSION
     17260**DCL
OPEN_DECKFILE.V.EXIST# IN PROCEDURE GET_IFAD_VERSION
     17234**DCL
OPEN_DECKFILE.V.EXPIRE# IN PROCEDURE GET_IFAD_VERSION
     17250**DCL
OPEN_DECKFILE.V.FINDPOS# IN PROCEDURE GET_IFAD_VERSION
     17236**DCL
OPEN_DECKFILE.V.FUN# IN PROCEDURE GET_IFAD_VERSION
     17240**DCL
OPEN_DECKFILE.V.GHSTACS# IN PROCEDURE GET_IFAD_VERSION
     17245**DCL
OPEN_DECKFILE.V.IGNOREFSN# IN PROCEDURE GET_IFAD_VERSION
     17254**DCL
OPEN_DECKFILE.V.INITZ IN PROCEDURE GET_IFAD_VERSION
     17231**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:191  
OPEN_DECKFILE.V.INITZ.REASSIGN# IN PROCEDURE GET_IFAD_VERSION
     17231**DCL
OPEN_DECKFILE.V.INITZ.SCRUB# IN PROCEDURE GET_IFAD_VERSION
     17231**DCL
OPEN_DECKFILE.V.IOERROK# IN PROCEDURE GET_IFAD_VERSION
     17252**DCL
OPEN_DECKFILE.V.IXTNSIZE# IN PROCEDURE GET_IFAD_VERSION
     17249**DCL
OPEN_DECKFILE.V.JRNLBYPASS# IN PROCEDURE GET_IFAD_VERSION
     17244**DCL
OPEN_DECKFILE.V.KEYL# IN PROCEDURE GET_IFAD_VERSION
     17246**DCL
OPEN_DECKFILE.V.KEYTYPE# IN PROCEDURE GET_IFAD_VERSION
     17256**DCL
OPEN_DECKFILE.V.KEYX# IN PROCEDURE GET_IFAD_VERSION
     17245**DCL
OPEN_DECKFILE.V.LINES# IN PROCEDURE GET_IFAD_VERSION
     17260**DCL
OPEN_DECKFILE.V.LOAD# IN PROCEDURE GET_IFAD_VERSION
     17244**DCL
OPEN_DECKFILE.V.LRDL0# IN PROCEDURE GET_IFAD_VERSION
     17248**DCL
OPEN_DECKFILE.V.LSLIDE# IN PROCEDURE GET_IFAD_VERSION
     17247**DCL
OPEN_DECKFILE.V.LSTAOR# IN PROCEDURE GET_IFAD_VERSION
     17244**DCL
OPEN_DECKFILE.V.MAXVOL# IN PROCEDURE GET_IFAD_VERSION
     17256**DCL
OPEN_DECKFILE.V.NRECS# IN PROCEDURE GET_IFAD_VERSION
     17249**DCL
OPEN_DECKFILE.V.OPER IN PROCEDURE GET_IFAD_VERSION
     17232**DCL
OPEN_DECKFILE.V.OPER.MNTONLY# IN PROCEDURE GET_IFAD_VERSION
     17234**DCL
OPEN_DECKFILE.V.OPER.NXTA# IN PROCEDURE GET_IFAD_VERSION
     17233**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:192  
OPEN_DECKFILE.V.OPER.NXTF# IN PROCEDURE GET_IFAD_VERSION
     17233**DCL
OPEN_DECKFILE.V.OPER.TEST# IN PROCEDURE GET_IFAD_VERSION
     17232**DCL
OPEN_DECKFILE.V.OPER.THISF# IN PROCEDURE GET_IFAD_VERSION
     17233**DCL
OPEN_DECKFILE.V.ORG# IN PROCEDURE GET_IFAD_VERSION
     17241**DCL
OPEN_DECKFILE.V.OVERFDE# IN PROCEDURE GET_IFAD_VERSION
     17253**DCL
OPEN_DECKFILE.V.QISS# IN PROCEDURE GET_IFAD_VERSION
     17259**DCL
OPEN_DECKFILE.V.RECL# IN PROCEDURE GET_IFAD_VERSION
     17247**DCL
OPEN_DECKFILE.V.RES# IN PROCEDURE GET_IFAD_VERSION
     17245**DCL
OPEN_DECKFILE.V.SEED# IN PROCEDURE GET_IFAD_VERSION
     17263**DCL
OPEN_DECKFILE.V.SEEDSPECIFIED# IN PROCEDURE GET_IFAD_VERSION
     17254**DCL
OPEN_DECKFILE.V.SEQ# IN PROCEDURE GET_IFAD_VERSION
     17258**DCL
OPEN_DECKFILE.V.SEQCOL# IN PROCEDURE GET_IFAD_VERSION
     17258**DCL
OPEN_DECKFILE.V.SEQID# IN PROCEDURE GET_IFAD_VERSION
     17260**DCL
OPEN_DECKFILE.V.SETDCB# IN PROCEDURE GET_IFAD_VERSION
     17231**DCL
OPEN_DECKFILE.V.SHARE# IN PROCEDURE GET_IFAD_VERSION
     17235**DCL
OPEN_DECKFILE.V.SPANNED# IN PROCEDURE GET_IFAD_VERSION
     17243**DCL
OPEN_DECKFILE.V.SPARE# IN PROCEDURE GET_IFAD_VERSION
     17248**DCL
OPEN_DECKFILE.V.SRCHCOND IN PROCEDURE GET_IFAD_VERSION
     17236**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:193  
OPEN_DECKFILE.V.SRCHCOND.ANYF# IN PROCEDURE GET_IFAD_VERSION
     17239**DCL
OPEN_DECKFILE.V.SRCHCOND.ARCHIVE# IN PROCEDURE GET_IFAD_VERSION
     17238**DCL
OPEN_DECKFILE.V.SRCHCOND.BAD# IN PROCEDURE GET_IFAD_VERSION
     17237**DCL
OPEN_DECKFILE.V.SRCHCOND.BUF# IN PROCEDURE GET_IFAD_VERSION
     17237**DCL
OPEN_DECKFILE.V.SRCHCOND.DELF# IN PROCEDURE GET_IFAD_VERSION
     17236**DCL
OPEN_DECKFILE.V.SRCHCOND.NOLIST# IN PROCEDURE GET_IFAD_VERSION
     17236**DCL
OPEN_DECKFILE.V.SRCHCOND.QS# IN PROCEDURE GET_IFAD_VERSION
     17238**DCL
OPEN_DECKFILE.V.SRCHCOND.REV# IN PROCEDURE GET_IFAD_VERSION
     17239**DCL
OPEN_DECKFILE.V.TERMCONLGL# IN PROCEDURE GET_IFAD_VERSION
     17253**DCL
OPEN_DECKFILE.V.TYPE# IN PROCEDURE GET_IFAD_VERSION
     17242**DCL
OPEN_DECKFILE.V.UOPT# IN PROCEDURE GET_IFAD_VERSION
     17240**DCL
OPEN_DECKFILE.V.VOL# IN PROCEDURE GET_IFAD_VERSION
     17255**DCL
OPEN_DECKFILE.V.VOLACCESS# IN PROCEDURE GET_IFAD_VERSION
     17259**DCL
OPEN_DECKFILE.V.XONLY# IN PROCEDURE GET_IFAD_VERSION
     17251**DCL
OPEN_DECKFILE.V.XTEND# IN PROCEDURE GET_IFAD_VERSION
     17251**DCL
OPEN_DECKFILE.V.XTNSIZE# IN PROCEDURE GET_IFAD_VERSION
     17249**DCL
OPEN_DECKFILE.VIRTUAL_ IN PROCEDURE GET_IFAD_VERSION
     17222**DCL
OPEN_DECKFILE.V_ IN PROCEDURE GET_IFAD_VERSION
     17221**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:194  
OPEN_DECKFILE.WINDOW_ IN PROCEDURE GET_IFAD_VERSION
     17224**DCL
SETUP_BREAK.V.UENTRY# IN PROCEDURE EST_COND_HANDLERS
     16837**DCL
SETUP_BREAK.V_ IN PROCEDURE EST_COND_HANDLERS
     16837**DCL
SETUP_EVENT.V.UENTRY# IN PROCEDURE EST_COND_HANDLERS
     16822**DCL
SETUP_EVENT.V.YC# IN PROCEDURE EST_COND_HANDLERS
     16823**DCL
SETUP_EVENT.V_ IN PROCEDURE EST_COND_HANDLERS
     16822**DCL
SETUP_TRAP.PTC_ IN PROCEDURE EST_COND_HANDLERS
     16798**DCL
SETUP_TRAP.V.ARITHMETIC# IN PROCEDURE EST_COND_HANDLERS
     16799**DCL
SETUP_TRAP.V.ERRORS# IN PROCEDURE EST_COND_HANDLERS
     16800**DCL
SETUP_TRAP.V.FLAGS IN PROCEDURE EST_COND_HANDLERS
     16800**DCL
SETUP_TRAP.V.FLAGS.COMMAND# IN PROCEDURE EST_COND_HANDLERS
     16804**DCL
SETUP_TRAP.V.FLAGS.DERAIL# IN PROCEDURE EST_COND_HANDLERS
     16802**DCL
SETUP_TRAP.V.FLAGS.DIVIDE_CHECK# IN PROCEDURE EST_COND_HANDLERS
     16801**DCL
SETUP_TRAP.V.FLAGS.FAULT_TAG# IN PROCEDURE EST_COND_HANDLERS
     16802**DCL
SETUP_TRAP.V.FLAGS.HARDWARE# IN PROCEDURE EST_COND_HANDLERS
     16807**DCL
SETUP_TRAP.V.FLAGS.HISTORY_REGS# IN PROCEDURE EST_COND_HANDLERS
     16807**DCL
SETUP_TRAP.V.FLAGS.IPR# IN PROCEDURE EST_COND_HANDLERS
     16805**DCL
SETUP_TRAP.V.FLAGS.LOCKUP# IN PROCEDURE EST_COND_HANDLERS
     16805**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:195  
SETUP_TRAP.V.FLAGS.MEMORY# IN PROCEDURE EST_COND_HANDLERS
     16804**DCL
SETUP_TRAP.V.FLAGS.MISSING_PAGE# IN PROCEDURE EST_COND_HANDLERS
     16806**DCL
SETUP_TRAP.V.FLAGS.MISSING_SEG# IN PROCEDURE EST_COND_HANDLERS
     16805**DCL
SETUP_TRAP.V.FLAGS.MME# IN PROCEDURE EST_COND_HANDLERS
     16801**DCL
SETUP_TRAP.V.FLAGS.OVERFLOW# IN PROCEDURE EST_COND_HANDLERS
     16800**DCL
SETUP_TRAP.V.FLAGS.RESTORE# IN PROCEDURE EST_COND_HANDLERS
     16803**DCL
SETUP_TRAP.V.FLAGS.SECURITY_1# IN PROCEDURE EST_COND_HANDLERS
     16803**DCL
SETUP_TRAP.V.FLAGS.SECURITY_2# IN PROCEDURE EST_COND_HANDLERS
     16806**DCL
SETUP_TRAP.V.PMME# IN PROCEDURE EST_COND_HANDLERS
     16799**DCL
SETUP_TRAP.V.PROGRAMMED# IN PROCEDURE EST_COND_HANDLERS
     16799**DCL
SETUP_TRAP.V_ IN PROCEDURE EST_COND_HANDLERS
     16798**DCL
START_TOLTS.DATE_ IN PROCEDURE SYSTEM_START_UP
     17071**DCL
START_TOLTS.DATE_.BOUND IN PROCEDURE SYSTEM_START_UP
     17071**DCL
START_TOLTS.DATE_.DATE$ IN PROCEDURE SYSTEM_START_UP
     17072**DCL
START_TOLTS.DAY_ IN PROCEDURE SYSTEM_START_UP
     17074**DCL
START_TOLTS.TIME_ IN PROCEDURE SYSTEM_START_UP
     17073**DCL
START_TOLTS.TIME_.BOUND IN PROCEDURE SYSTEM_START_UP
     17073**DCL
START_TOLTS.TIME_.TIME$ IN PROCEDURE SYSTEM_START_UP
     17074**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:196  
START_TOLTS.TSTAMP_ IN PROCEDURE SYSTEM_START_UP
     17074**DCL
START_TOLTS.V.DEST# IN PROCEDURE SYSTEM_START_UP
     17075**DCL
START_TOLTS.V.DEST_BASIS# IN PROCEDURE SYSTEM_START_UP
     17076**DCL
START_TOLTS.V.SOURCE# IN PROCEDURE SYSTEM_START_UP
     17075**DCL
START_TOLTS.V.SOURCE_BASIS# IN PROCEDURE SYSTEM_START_UP
     17076**DCL
START_TOLTS.V_ IN PROCEDURE SYSTEM_START_UP
     17071**DCL
TOLTS_GETCMD.ALWAYS_SET_PROMPT#
     15978**DCL
TOLTS_GETCMD.BUF$
     16167**DCL
TOLTS_GETCMD.CONTINUED#
     15950**DCL
TOLTS_GETCMD.CONTINUE_OK#
     15954**DCL
TOLTS_GETCMD.DCB2_PARAM#
     16075**DCL
TOLTS_GETCMD.DCB_PARAM#
     16070**DCL
TOLTS_GETCMD.DISP#
     16081**DCL
TOLTS_GETCMD.ECHO
     16010**DCL
TOLTS_GETCMD.EOMCHAR#
     16030**DCL
TOLTS_GETCMD.EPOS#
     16000**DCL
TOLTS_GETCMD.ERR#
     15901**DCL
TOLTS_GETCMD.ERR#.CODE#
     15904**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:197  
TOLTS_GETCMD.ERR#.FCG#
     15902**DCL
TOLTS_GETCMD.ERR#.MON#
     15903**DCL
TOLTS_GETCMD.ERR#.SEV#
     15905**DCL
TOLTS_GETCMD.ERRDCB#
     16049**DCL
TOLTS_GETCMD.ERRMSG_VFC#
     16005**DCL
TOLTS_GETCMD.ERR_CODE.CODE#
     16041**DCL
TOLTS_GETCMD.ERR_CODE.FCG#
     16039**DCL
TOLTS_GETCMD.ERR_CODE.MON#
     16040**DCL
TOLTS_GETCMD.ERR_CODE.SEV#
     16042**DCL
TOLTS_GETCMD.F3_
     16095**DCL
TOLTS_GETCMD.FPT$
     16187**DCL
TOLTS_GETCMD.INDCB#
     16061**DCL
TOLTS_GETCMD.INFOMSG#
     15986**DCL
TOLTS_GETCMD.NLINES
     16206**DCL
TOLTS_GETCMD.NODES$
     15891**DCL
TOLTS_GETCMD.OUTDCB#
     16066**DCL
TOLTS_GETCMD.PASS
     16020**DCL
TOLTS_GETCMD.PCB$
     15915**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:198  
TOLTS_GETCMD.PP_FUN$$
     16108**DCL
TOLTS_GETCMD.PP_ROOT$
     16195**DCL
TOLTS_GETCMD.PROMPT_
     16099**DCL
TOLTS_GETCMD.PROMPT_VFC#
     15965**DCL
TOLTS_GETCMD.RCVD_PROMPT#
     15960**DCL
TOLTS_GETCMD.READR$$
     16113**DCL
TOLTS_GETCMD.RFU10#
     16211**DCL
TOLTS_GETCMD.RFU11#
     16212**DCL
TOLTS_GETCMD.RFU12#
     16213**DCL
TOLTS_GETCMD.RFU2$
     16166**DCL
TOLTS_GETCMD.RFU9#
     16210**DCL
TOLTS_GETCMD.RFUBIT2
     16029**DCL
TOLTS_GETCMD.RFUBYTE
     16037**DCL
TOLTS_GETCMD.RLT$
     16172**DCL
TOLTS_GETCMD.RPROMPT_
     16103**DCL
TOLTS_GETCMD.SFROUTINE$
     16140**DCL
TOLTS_GETCMD.SKIP_PREPROCESS#
     15971**DCL
TOLTS_GETCMD.SYNERR_NODES$
     16179**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:199  
TOLTS_GETCMD.TEXT_
     16153**DCL
TOLTS_GETCMD.TREAD#
     15939**DCL
TOLTS_GETCMD.USE_EPOS#
     15933**DCL
TOLTS_GETCMD.UTIL$
     16191**DCL
TOLTS_GETCMD.WORK$
     15923**DCL
TOLTS_GETCMD.XT_PARAM$
     16159**DCL
TOLTS_GETCMD.XUH$
     15928**DCL
TOLTS_HELP.ALL#
     16248**DCL
TOLTS_HELP.CHARPOS
     16260**DCL
TOLTS_HELP.ERR
     16253**DCL
TOLTS_HELP.ERR.ERR#
     16257**DCL
TOLTS_HELP.ERR.FCG
     16254**DCL
TOLTS_HELP.ERR.MID
     16255**DCL
TOLTS_HELP.ERR.MON
     16256**DCL
TOLTS_HELP.ERR.SEV
     16258**DCL
TOLTS_HELP.ERR_DCB#
     16259**DCL
TOLTS_HELP.FPT_VERSION
     16274**DCL
TOLTS_HELP.HELP$
     16246**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:200  
TOLTS_HELP.HELP_CODE#
     16261**DCL
TOLTS_HELP.HELP_CODE#.LEN
     16262**DCL
TOLTS_HELP.HELP_CODE#.PACCT
     16267**DCL
TOLTS_HELP.HELP_CODE#.PNAME
     16264**DCL
TOLTS_HELP.HELP_CODE#.PNAME.LEN
     16265**DCL
TOLTS_HELP.HELP_CODE#.PNAME.TEXT
     16266**DCL
TOLTS_HELP.HELP_CODE#.PPASS
     16268**DCL
TOLTS_HELP.HELP_CODE#.PPSN
     16269**DCL
TOLTS_HELP.HELP_CODE#.TEXT
     16263**DCL
TOLTS_HELP.KEYWORD_
     16243**DCL
TOLTS_HELP.MORE#
     16249**DCL
TOLTS_HELP.OTHER_PROC#
     16251**DCL
TOLTS_HELP.OUTDCB1#
     16244**DCL
TOLTS_HELP.OUTDCB2#
     16245**DCL
TOLTS_HELP.PROCACCT_
     16241**DCL
TOLTS_HELP.PROCNAME_
     16240**DCL
TOLTS_HELP.PROCPASS_
     16242**DCL
TOLTS_HELP.PROCPSN_
     16270**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:201  
TOLTS_HELP.RESERVED
     16275**DCL
TOLTS_HELP.SPARE1_
     16273**DCL
TOLTS_HELP.SPARE2_
     16272**DCL
TOLTS_HELP.SPARE3_
     16271**DCL
TOLTS_HELP.TOPICS#
     16250**DCL
TOLTS_HELP.VFC#
     16247**DCL
TOLTS_INIT.ABORT$
     15482**DCL
TOLTS_INIT.ADAPT$$
     15792**DCL
TOLTS_INIT.ADDL_NRECS#
     15638**DCL
TOLTS_INIT.ALWAYS_SET_PROMPT#
     15760**DCL
TOLTS_INIT.BRKMSG$
     15497**DCL
TOLTS_INIT.CMDSZ#
     15632**DCL
TOLTS_INIT.COMMANDS#
     15689**DCL
TOLTS_INIT.CONTINUE$
     15490**DCL
TOLTS_INIT.DONT_REREAD_CCBUF#
     15775**DCL
TOLTS_INIT.DONT_STRIP_PROMPT#
     15783**DCL
TOLTS_INIT.ECHO#
     15652**DCL
TOLTS_INIT.GOODCMD#
     15743**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:202  
TOLTS_INIT.INHIBITS
     15813**DCL
TOLTS_INIT.INHIBITS.DATE#
     15814**DCL
TOLTS_INIT.INHIBITS.DIRECTORY#
     15819**DCL
TOLTS_INIT.INHIBITS.DO#
     15824**DCL
TOLTS_INIT.INHIBITS.END#
     15829**DCL
TOLTS_INIT.INHIBITS.ENTER#
     15864**DCL
TOLTS_INIT.INHIBITS.ERASE#
     15834**DCL
TOLTS_INIT.INHIBITS.HELP#
     15839**DCL
TOLTS_INIT.INHIBITS.NULL#
     15844**DCL
TOLTS_INIT.INHIBITS.OUTPUT#
     15849**DCL
TOLTS_INIT.INHIBITS.PRINT#
     15854**DCL
TOLTS_INIT.INHIBITS.QMARK#
     15859**DCL
TOLTS_INIT.INIT_NRECS#
     15645**DCL
TOLTS_INIT.MOREMEM$$
     15555**DCL
TOLTS_INIT.NO_DOWNGRADE#
     15766**DCL
TOLTS_INIT.PARAMS$
     15597**DCL
TOLTS_INIT.PASS#
     15662**DCL
TOLTS_INIT.PCB$
     15614**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:203  
TOLTS_INIT.POST_EXEC$$
     15537**DCL
TOLTS_INIT.PPCB$
     15621**DCL
TOLTS_INIT.PP_DCB#
     15670**DCL
TOLTS_INIT.PP_PROCNAME_
     15626**DCL
TOLTS_INIT.PP_ROOT$
     15805**DCL
TOLTS_INIT.PREPROCESS#
     15724**DCL
TOLTS_INIT.PREPROCESSOR$$
     15577**DCL
TOLTS_INIT.PRE_EXEC$$
     15519**DCL
TOLTS_INIT.PROCACCT_
     15591**DCL
TOLTS_INIT.PROCNAME_
     15586**DCL
TOLTS_INIT.REQ_PROMPT#
     15731**DCL
TOLTS_INIT.RFU10#
     15868**DCL
TOLTS_INIT.RFU11#
     15869**DCL
TOLTS_INIT.RFU12#
     15870**DCL
TOLTS_INIT.RFU2$
     15801**DCL
TOLTS_INIT.RFU3$
     15802**DCL
TOLTS_INIT.RFU4$
     15803**DCL
TOLTS_INIT.RFU5$
     15804**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:204  
TOLTS_INIT.RFU6$
     15810**DCL
TOLTS_INIT.RFU7$
     15811**DCL
TOLTS_INIT.RFU8$
     15812**DCL
TOLTS_INIT.RFUBIT
     15791**DCL
TOLTS_INIT.SPELLING#
     15755**DCL
TOLTS_INIT.SPHANDLE$
     15504**DCL
TOLTS_INIT.SYNTAX#
     15738**DCL
TOLTS_INIT.WORK_
     15601**DCL
TOLTS_INIT.WSEG#
     15679**DCL
TOLTS_NAME.L#
     16303**DCL
TOLTS_NAME.NAME#
     16303**DCL
TOLTS_PRIVS.V.AUTH# IN PROCEDURE SYSTEM_INITIAL
     16677**DCL
TOLTS_PRIVS.V.PPRIV# IN PROCEDURE SYSTEM_INITIAL
     16677**DCL
TOLTS_PRIVS.V.PRIV# IN PROCEDURE SYSTEM_INITIAL
     16676**DCL
TOLTS_PRIVS.V_ IN PROCEDURE SYSTEM_INITIAL
     16676**DCL
TOP$TCP.ADR
     16451**DCL
TOP$TCP.ADR.CSCT
     16454**DCL
TOP$TCP.ADR.IOENTRY
     16458**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:205  
TOP$TCP.ADR.PAT
     16456**DCL
TOP$TCP.ADR.SCT
     16452**DCL
TOP$TCP.BFR
     16500**DCL
TOP$TCP.BFR.TRAIN_IMAGE
     16501**DCL
TOP$TCP.BFR.VFC_IMAGE
     16503**DCL
TOP$TCP.DCB#
     16449**DCL
TOP$TCP.DEVICE_CODE
     16447**DCL
TOP$TCP.DEVICE_MODEL
     16446**DCL
TOP$TCP.FICCDD.CHAN#
     16434**DCL
TOP$TCP.FICCDD.DEV#
     16435**DCL
TOP$TCP.FICCDD.FLAG#
     16431**DCL
TOP$TCP.FICCDD.FORMAT#
     16432**DCL
TOP$TCP.FICCDD.IOM#
     16433**DCL
TOP$TCP.FIRMWARE
     16482**DCL
TOP$TCP.FIRMWARE.CHOICE_MADE
     16483**DCL
TOP$TCP.FIRMWARE.LP_TYPE
     16487**DCL
TOP$TCP.FIRMWARE.RP_TYPE
     16489**DCL
TOP$TCP.FIRMWARE.TYPE
     16485**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:206  
TOP$TCP.ICC
     16439**DCL
TOP$TCP.ICC.ICC#
     16441**DCL
TOP$TCP.ICCDD
     16436**DCL
TOP$TCP.ICCDD.ICCDD#
     16438**DCL
TOP$TCP.IN_USE
     16428**DCL
TOP$TCP.IO
     16460**DCL
TOP$TCP.IO.CC_PAID
     16471**DCL
TOP$TCP.IO.CONTROLLER
     16465**DCL
TOP$TCP.IO.DONE
     16469**DCL
TOP$TCP.IO.ISSUED
     16467**DCL
TOP$TCP.IO.ITR_INTERRUPT
     16461**DCL
TOP$TCP.IO.TERMINATED
     16463**DCL
TOP$TCP.MPC_MODEL
     16445**DCL
TOP$TCP.SCT
     16473**DCL
TOP$TCP.SCT.BIT12
     16478**DCL
TOP$TCP.SCT.BIT13
     16476**DCL
TOP$TCP.SCT.BIT17
     16474**DCL
TOP$TCP.SCT.TAPE_DENSITY
     16480**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:207  
TOP$TCP.STATS
     16491**DCL
TOP$TCP.STATS.EDIT_NAME
     16496**DCL
TOP$TCP.STATS.GECALL_NAME
     16498**DCL
TOP$TCP.STATS.LOAD_ADDR
     16492**DCL
TOP$TCP.STATS.MAX_LOAD
     16494**DCL
TOP$TCP.TEST_TYPE
     16443**DCL
TOT$DMC
     16357**DCL
TOT$DMC.TOM$ITRTBL
     16368**DCL
TOT$DMC.TOM$ITRTBL.PTR$
     16371**DCL
TOT$DMC.TOM$SEGTBLS
     16373**DCL
TOT$DMC.TOM$SEGTBLS.PTR$
     16376**DCL
TOT$DMC.TOO$IO_BUFFER.PTR$
     16361**DCL
TOT$DMC.TOP$TCP.PTR$
     16366**DCL
TOT$IFAD.DEER
     16394**DCL
TOT$IFAD.MAINTENANCE
     16390**DCL
TOT$IFAD.MAINTENANCE.CONTRACT
     16392**DCL
TOT$MAIN
       276**PROC
TOT$TOLTS
     16406**DCL
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:208  
TOT$TOLTS.LINK_DATE
     16407**DCL
TOT_ERROR_CODE.FCG
     15438**DCL
TOT_ERROR_CODE.MID
     15451**DCL
TOT_ERROR_CODE.MON
     15451**DCL
TOT_ERROR_CODE.SEV
     15452**DCL
XUG$ALLMSG
     12139**DCL-ENT
XUG$BLANK_PASSWORD
     12142**DCL-ENT
XUG$BREAK
     12132**DCL-ENT
XUG$CLOSE_DCBS
     12131**DCL-ENT
XUG$CLRENABLE
     12135**DCL-ENT
XUG$CORRES
     12127**DCL-ENT
XUG$DISABLE
     12133**DCL-ENT
XUG$ECHO
     12125**DCL-ENT
XUG$ECHOIF
     12124**DCL-ENT
XUG$ECHOLAST
     12128**DCL-ENT
XUG$ENABLE
     12134**DCL-ENT
XUG$ERRCNVRT
     12144**DCL-ENT
XUG$ERRPTR
     12123**DCL-ENT
PL6.E3A0      #001=TOT$MAIN File=TOT$MAIN.:E05TSI                                WED 07/30/97 06:36 Page:209  
XUG$ERRTOLCP6
     12145**DCL-ENT
XUG$FINDDCB
     12140**DCL-ENT
XUG$GETCMD
     12122**DCL-ENT
XUG$GETDCB
     12141**DCL-ENT
XUG$HELP
     12137**DCL-ENT
XUG$MOREMSG
     12138**DCL-ENT
XUG$OPENOUT
     12143**DCL-ENT
XUG$SIMULATE_BREAK
     12136**DCL-ENT
