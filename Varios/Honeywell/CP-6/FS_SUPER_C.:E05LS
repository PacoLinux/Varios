

14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         1    
    1      /*M* FS_SUPER_C structures for records in Forms file. */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* */
    8      /**/
    9      /*  THESE ARE THE AVALIBLE CHAIN IMAGES                    */
   10      %MACRO C500;
   11              '=5678GHIJKL|0.-*/MNOPQR:&(9),STUVWX}0123',
   12                '4YZ$`#+!?5678ABCDEF~0.-*/GHIJKL<>(9),MNO',
   13                'PQR{01234STUVWX;''5678YZ$@#%_0.-*/ABCDEF"',
   14                '=(9),GHIJKL\01234MNOPQR:&5678STUVWX]0.-*',
   15                '/YZ$@#+!?(9),ABCDEF^01234GHIJKL<>5678MNO',
   16                'PQR[0.-*/STUVWX;''(9),YZ$@#%_01234ABCDEF"')
   17                %MEND;
   18      /*
   19      */
   20      %MACRO C600;
   21                'BDFGHJgS0ACEINORLTabcdefKhijklmM0PQUVWXY',
   22                'Z:;?!%7xynoprstw0z123456#89.,()@$=&/''\^_',
   23                '0"<>[]gS~ACEINOR{Tabcdef0hijklm}|`-*+quv',
   24                'BDFGHJ7x0noprstwLz123456K89.,()M0PQUVWXY',
   25                'Z:;?!%gSyACEINOR0Tabcdef#hijklm@$=&/''\^_',
   26                '0"<>[]7x~noprstw{z123456089.,()}|`-*+quv')
   27                %MEND;
   28      /*
   29      */
   30      %MACRO FS$FORMREC(NAME=FS$FORMREC,STCLASS=BASED,
   31                         FRMNAME='  ',
   32                         SETDISP=0,
   33                         ACCDISP=0,
   34                         BANDISP=0,
   35                         ALGDISP=0,
   36                         ACCTSDISP=0,
   37                         WDTH=0,
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         2    
   38                         LNGTH=0,
   39                         LMBO=0,
   40                         FLINE=0,
   41                         EXTWDTH='0'B,
   42                         LPI_=6,
   43                         LP_OK(YES='1'B,NO='0'B)='0'B,
   44                         TS_OK(YES='1'B,NO='0'B)='0'B,
   45                         ELS_OK(YES='1'B,NO='0'B)='0'B,
   46                         ONE_OK(YES='1'B,NO='0'B)='0'B,
   47                         GRAPHICS_OK(YES='1'B,NO='0'B)='0'B,
   48                         LTYPE=' '
   49                              );
   50      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   51      %IF (SUBSTR(STR,0,6)='STATIC') OR
   52       (SUBSTR(STR,0,8)='CONSTANT') OR
   53       (SUBSTR(STR,0,3)='EXT');
   54      %LSET INIT=CHARTEXT('INIT');
   55      %ELSE;
   56      %LSET INIT=CHARTEXT('/*');
   57      %ENDIF;
   58      /*
   59      */
   60      DCL 1 NAME STCLASS ALIGNED,
   61            2 FNAME CHAR(6) %INIT(FRMNAME)%CHARTEXT('/**/'), /* FORM NAME           */
   62            2 ACCTDISP UBIN HALF UNAL %INIT(ACCTSDISP)%CHARTEXT('/**/'),
   63            2 SETUPDISP UBIN HALF UNAL %INIT(SETDISP)%CHARTEXT('/**/'), /* WD DISP TO SETUP */
   64            2 ACCSDISP UBIN HALF UNAL %INIT(ACCDISP)%CHARTEXT('/**/'), /* DISP TO ACCESS */
   65            2 BANRDISP UBIN HALF UNAL %INIT(BANDISP)%CHARTEXT('/**/'), /* DISP TO BANNER */
   66            2 ALGNDISP UBIN HALF UNAL %INIT(ALGDISP)%CHARTEXT('/**/'), /* DISP TO ALGNMENT */
   67            2 FLAGS BIT(7) %INIT('0000000'B) %CHARTEXT('/**/'), /* SETABLE BUT NOT USED */
   68            2 * BIT(1) %INIT('0'B)%CHARTEXT('/**/'), /* THIS BIT IS FREE            */
   69            2 GRAPHIC BIT(1) %INIT(GRAPHICS_OK)%CHARTEXT('/**/'), /* GRAPHIC FORM   */
   70      /**/
   71      /*  LEGAL TYPE OF DEVICES FOR THIS FORM */
   72      /*   The LGLTYPS field here is duplicated in the FS$CHARSET record
   73           and when this macro is changed, this one should be checked!
   74      */
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         3    
   75      /**/
   76            2 LGLTYPS,
   77              3 LPOK BIT(1) %INIT(LP_OK)%CHARTEXT('/**/'), /* LEGAL ON LP           */
   78              3 TSOK BIT(1) %INIT(TS_OK)%CHARTEXT('/**/'), /* LEGAL ON TS           */
   79              3 ELSOK BIT(1) %INIT(ELS_OK)%CHARTEXT('/**/'), /* LEGAL ON ALL BUT TS+LP */
   80              3 ONEOK BIT(1) %INIT(ONE_OK)%CHARTEXT('/**/'), /* LEGAL ON TYP=LTYP   */
   81              3 * BIT(5) %INIT('00000'B)%CHARTEXT('/**/'),
   82              3 LTYP CHAR(2) %INIT(LTYPE)%CHARTEXT('/**/'), /* LEGAL IF ONEOK=YES   */
   83            2 ATTR BIT(18) UNAL %INIT('000006'O) %CHARTEXT('/**/'),
   84            2 SOFTFORM,                       /*SOFT VFU/PLATEN INFO                */
   85      /**/
   86      /*  WRITE SOFTFORM WITH VFC_VFU AND BP ON IN DVBYTE */
   87      /**/
   88              3 VLPPLATEN,                    /* SEE KI_CP6_C FOR DESC              */
   89                4 TL,
   90                  5 T UBIN BYTE UNAL %INIT(8)%CHARTEXT('/**/'),
   91                  5 L UBIN BYTE UNAL %INIT(16)%CHARTEXT('/**/'),
   92                4 WIDTH UBIN BYTE UNAL %INIT(WDTH)%CHARTEXT('/**/'),
   93                4 LENGTH UBIN BYTE UNAL %INIT(LNGTH)%CHARTEXT('/**/'),
   94                4 LIMBO UBIN BYTE UNAL %INIT(LMBO)%CHARTEXT('/**/'),
   95                4 FIRSTLINE UBIN BYTE UNAL %INIT(FLINE)%CHARTEXT('/**/'),
   96                4 * BIT(8) %INIT('00000000'B)%CHARTEXT('/**/'),
   97                4 EXTWID BIT(1) %INIT(EXTWDTH)%CHARTEXT('/**/'),
   98                4 LPI UBIN BYTE UNAL %INIT(LPI_)%CHARTEXT('/**/'),
   99                4 * (0:9) UBIN BYTE UNAL %INIT(0*0)%CHARTEXT('/**/'),
  100              3 VFUIM,                        /* TED AND PAULS SOFT VFU IMAGE       */
  101                4 TL,
  102                  5 T UBIN BYTE UNAL %INIT(18)%CHARTEXT('/**/'),
  103                  5 L UBIN BYTE UNAL %INIT(64)%CHARTEXT('/**/'),
  104                4 V,
  105                  5 LINE(0:31) UBIN BYTE UNAL %INIT(0*0)%CHARTEXT('/**/'),
  106                  5 NEXT(0:31) UBIN BYTE UNAL %INIT(0*0)%CHARTEXT('/**/'),
  107            2 CHAIN_NAME CHAR(8) UNAL %INIT('600')%CHARTEXT('/**/'),
  108            2 CHAINS(0:5) CHAR(40) UNAL %INIT(
  109              %C600;
  110              %CHARTEXT('/**/'),
  111            2 CHAINIMAGE REDEF CHAINS CHAR(240) UNAL;
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         4    
  112      %MEND;
  113      %MACRO FS$BAN_INIT(NAME=FS$FINST,
  114                    STCLASS=BASED,
  115                    CNT=0,
  116                    REPTS=0,
  117                    CHRG=0,
  118                    INR=0);
  119      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  120      %IF ( SUBSTR(STR,0,5)='BASED') OR
  121       (SUBSTR(STR,0,8)='        ');
  122      DCL 1 NAME STCLASS,
  123            2 CHARGE UBIN BYTE UNAL,          /* DO WE CHARGE FOR BANNER            */
  124            2 ALIGNCTL REDEF CHARGE UNAL,
  125              3 EVERY BIT(1) UNAL,
  126              3 * BIT(8) UNAL,
  127            2 REPEATS UBIN BYTE UNAL,         /* NUM OF TIMES TO PRINT THIS BANNER  */
  128            2 INTR UBIN BYTE UNAL,            /* ARE INTRINSICS  ALLOWED            */
  129            2 NUM_ENTRIES UBIN BYTE UNAL,     /* NUM OF ENTRIES IN THE TABLE        */
  130            2 ENTRIES(0:0),
  131              3 ROW UBIN BYTE UNAL,           /* START ROW                          */
  132              3 COL UBIN BYTE UNAL,           /* START COL                          */
  133              3 FONT UBIN BYTE UNAL,          /* FONT TO BE USED                    */
  134              3 STRIKES UBIN BYTE UNAL,       /* NUMBER OF PRINT STRIKES            */
  135              3 ICSH UBIN BYTE UNAL,          /* INTER CHAR SPACING HORZ.           */
  136              3 REPS UBIN BYTE UNAL,          /* NUM OF TIME TO PRINT THIS ENTRY    */
  137              3 RINC UBIN BYTE UNAL,          /* ROW INCERMENT PER REPEAT           */
  138              3 CINC UBIN BYTE UNAL,          /* COL INCERMENT PER REPEAT           */
  139              3 TYPE UBIN BYTE UNAL,     /* TYPE OF ENTRY(PLAIN TEXT, INTRINIC)     */
  140              3 DISP UBIN HALF UNAL,          /* DISP(IN WORDS) TO TEXT(IF ANY)     */
  141              3 B REDEF DISP,
  142                4 START UBIN BYTE UNAL,
  143                4 LEN UBIN BYTE UNAL,
  144              3 COUNT UBIN BYTE UNAL,         /* COUNT OF TEXT(IF ANY)              */
  145              3 CHR REDEF COUNT CHAR(1),      /* OR CHAR TO BE REPEATED ACROSS PAGE */
  146              3 TOTLEN UBIN(27) UNAL,         /* TOTLEN OF ENTRY(INTERNAL)          */
  147              3 MARK UBIN BYTE UNAL;          /* MARK(INTERNAL)                     */
  148      %ELSE;
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         5    
  149      DCL 1 NAME STCLASS,
  150            2 CHARGE UBIN BYTE INIT (CHRG) UNAL,
  151            2 ALIGNCTL REDEF CHARGE UNAL,
  152              3 EVERY BIT(1) UNAL,
  153              3 * BIT(8) UNAL,
  154            2 REPEATS UBIN BYTE INIT (REPTS) UNAL,
  155            2 INTR UBIN BYTE INIT (INR) UNAL,
  156            2 NUM_ENTRIES UBIN BYTE INIT (CNT) UNAL,
  157      %SET BCNT=CNT-1;
  158            2 ENTRIES(0:%BCNT),
  159      %SET BROW='';
  160      %SET BCOL='';
  161      %SET BFONT='';
  162      %SET BSTRIKES='';
  163      %SET BICSH='';
  164      %SET BREPS='';
  165      %SET BRINC='';
  166      %SET BCINC='';
  167      %SET BTYPE='';
  168      %SET BDISP='';
  169      %SET BCOUNT='';
  170      %SET BTEXT='';
  171      %SET DISP#=1+CNT*4;
  172      %SET TEXT_LEN#=0;
  173      %ENDIF;
  174      %MEND;
  175      /*
  176      */
  177      %MACRO FS$BAN_ENT(ROW=0,
  178                         COL=0,
  179                         FONT=0,
  180                         STRIKES=1,
  181                         ICSH=0,
  182                         REPS=1,
  183                         RINC=0,
  184                         CINC=0,
  185                         TYPE=0,
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         6    
  186                         TEXT=NIL);
  187      %SET BROW=CONCAT(BROW,TEXTCHAR(ROW),',');
  188      %SET BCOL=CONCAT(BCOL,TEXTCHAR(COL),',');
  189      %SET BFONT=CONCAT(BFONT,TEXTCHAR(FONT),',');
  190      %SET BSTRIKES=CONCAT(BSTRIKES,TEXTCHAR(STRIKES),',');
  191      %SET BICSH=CONCAT(BICSH,TEXTCHAR(ICSH),',');
  192      %SET BREPS=CONCAT(BREPS,TEXTCHAR(REPS),',');
  193      %SET BRINC=CONCAT(BRINC,TEXTCHAR(RINC),',');
  194      %SET BCINC=CONCAT(BCINC,TEXTCHAR(CINC),',');
  195      %SET BTYPE=CONCAT(BTYPE,TEXTCHAR(TYPE),',');
  196      %IF (TYPE=FS_X_INT);
  197      %SET QUOTE='''';
  198      %SET BCOUNT=CONCAT(BCOUNT,'ASCBIN(',QUOTE,TEXT,QUOTE,'),');
  199      %SET BDISP=CONCAT(BDISP,'0,');
  200      %ELSEIF (TYPE~=FS_PLAIN_TEXT);
  201      %SET BCOUNT=CONCAT(BCOUNT,'0,');
  202      %SET BDISP=CONCAT(BDISP,'0,');
  203      %ELSE;
  204      %SET TEXT_LEN=LENGTHC(TEXT);
  205      %SET TOT_LEN=(TEXT_LEN+3)/4;
  206      %SET BCOUNT=CONCAT(BCOUNT,BINCHAR(TEXT_LEN,3),',');
  207      %SET BDISP=CONCAT(BDISP,BINCHAR(DISP#,4),',');
  208      %SET DISP#=DISP#+TOT_LEN;
  209      %SET TEXT_LEN#=TEXT_LEN#+TOT_LEN*4;
  210      %SET DIFF=TOT_LEN*4-TEXT_LEN;
  211      %IF (DIFF=1);
  212      %SET TEXT_VAL=CONCAT(TEXT,' ');
  213      %ENDIF;
  214      %IF(DIFF=2);
  215      %SET TEXT_VAL=CONCAT(TEXT,'  ');
  216      %ENDIF;
  217      %IF(DIFF=3);
  218      %SET TEXT_VAL=CONCAT(TEXT,'   ');
  219      %ENDIF;
  220      %SET BTEXT=CONCAT(BTEXT,TEXT_VAL);
  221      %ENDIF;
  222      %MEND;
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         7    
  223      %MACRO FS$BAN_GEN;
  224              3 ROW UBIN BYTE UNAL INIT(%CHARTEXT(SUBSTR(BROW,0,LENGTHC(BROW)-1))),
  225                3 COL UBIN BYTE UNAL INIT(%CHARTEXT(SUBSTR(BCOL,0,LENGTHC(BCOL)-1))),
  226                3 FONT UBIN BYTE UNAL INIT(%CHARTEXT(SUBSTR(BFONT,0,LENGTHC(BFONT)-1))),
  227                3 STRIKES UBIN BYTE UNAL INIT(%CHARTEXT(SUBSTR(BSTRIKES,0,LENGTHC(BSTRIKES)-1))),
  228                3 ICSH UBIN BYTE UNAL INIT(%CHARTEXT(SUBSTR(BICSH,0,LENGTHC(BICSH)-1))),
  229                3 REPS UBIN BYTE UNAL INIT(%CHARTEXT(SUBSTR(BREPS,0,LENGTHC(BREPS)-1))),
  230                3 RINC UBIN BYTE UNAL INIT(%CHARTEXT(SUBSTR(BRINC,0,LENGTHC(BRINC)-1))),
  231                3 CINC UBIN BYTE UNAL INIT(%CHARTEXT(SUBSTR(BCINC,0,LENGTHC(BCINC)-1))),
  232                3 TYPE UBIN BYTE UNAL INIT(%CHARTEXT(SUBSTR(BTYPE,0,LENGTHC(BTYPE)-1))),
  233                3 DISP UBIN HALF UNAL INIT(%CHARTEXT(SUBSTR(BDISP,0,LENGTHC(BDISP)-1))),
  234                3 B REDEF DISP,
  235                4 START UBIN BYTE UNAL,
  236                4 LEN UBIN BYTE UNAL,
  237                3 COUNT UBIN BYTE UNAL INIT(%CHARTEXT(SUBSTR(BCOUNT,0,LENGTHC(BCOUNT)-1))),
  238                3 TOTLEN UBIN(27) UNAL INIT(0*0),
  239                3 MARK UBIN BYTE UNAL INIT(0*0),
  240                2 TEXT CHAR(%TEXT_LEN#) INIT (%BTEXT);
  241      %MEND;
  242      /**/
  243      /*
  244               THESE ARE THE SUBS USED TO CREATE BANNERS
  245      */
  246      %SUB FS_FONT#=3/*FONT#*/;               /* NUMBER OF FONTS CURRENTLY DEFINED  */
  247      %SUB FS_PLAIN_TEXT=0/*TEXT*/;           /* TYPE CODE FOR PLAIN TEXT           */
  248      %SUB FS_SYSID_INT=1/*SYSID*/;           /* CODE FOR SYSID INTRINSIC           */
  249      %SUB FS_ACCN_INT=2/*ACCN*/;             /* CODE FOR ACCOUNT NAME              */
  250      %SUB FS_UNAME_INT=3/*UNAME*/;           /* CODE FOR USER NAME                 */
  251      %SUB FS_WOO_INT=4/*WOO*/;               /* CODE FOR WSN OF ORGIN              */
  252      %SUB FS_JOBNAME_INT=5/*JNAME*/;         /* CODE FOR BATCH JOBNAME             */
  253      %SUB FS_TIME_INT=6/*TIME*/;             /* CODE FOR CURRENT TIME              */
  254      %SUB FS_DATE_INT=7/*DATE*/;             /* CODE FOR CURRENT DATE              */
  255      %SUB FS_VERSION_INT=8/*VERS*/;          /* CODE FOR SYSTEM VERSION            */
  256      %SUB FS_SUBFILE_INT=9/*SFILE*/;         /* CODE FOR PRINT SUBFILE             */
  257      %SUB FS_LOGO_INT=10/*LOGO*/;            /* CODE FOR CP6 LOGO                  */
  258      %SUB FS_X_INT=11/*RPTX*/;               /* CODE FOR 'X' REPEATED ACROSS PAGE  */
  259      %SUB FS_WOD_INT=12/*WOD*/;              /* CODE FORM WSN OF DEST              */
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         8    
  260      %SUB FS_SITENAME_INT=14/*SITENAME*/;    /* CODE FOR SITE NAME                 */
  261      %SUB FS_SALUTE_INT=15/*SALUTE*/;        /* CODE FOR SYSTEM SALUTATION         */
  262      %SUB FS_FORM_INT=16/*FORM*/;            /* CODE FOR FORM NAME                 */
  263      %SUB FS_MINI_ID_INT=17/*MINI_ID*/;      /* CODE FOR MINI_ID                   */
  264      %SUB FS_BANNERTEXT0_INT=18/*BANRTEXT0*/;/* CODE FOR BANNERTEXT                */
  265      %SUB FS_BANNERTEXT1_INT=19/*BANRTEXT1*/;/* CODE FOR BANNERTEXT                */
  266      %SUB FS_BANNERTEXT2_INT=20/*BANRTEXT2*/;/* CODE FOR BANNERTEXT                */
  267      %SUB FS_BANNERTEXT3_INT=21/*BANRTEXT3*/;/* CODE FOR BANNERTEXT                */
  268      %SUB FS_BANNERTEXT4_INT=22/*BANRTEXT4*/;/* CODE FOR BANNERTEXT                */
  269      %SUB FS_BANNERTEXT5_INT=23/*BANRTEXT5*/;/* CODE FOR BANNERTEXT                */
  270      %SUB FS_BANNERTEXT6_INT=24/*BANRTEXT6*/;/* CODE FOR BANNERTEXT                */
  271      %SUB FS_BANNERTEXT7_INT=25/*BANRTEXT7*/;/* CODE FOR BANNERTEXT                */
  272      %SUB FS_BANNERTEXT8_INT=26/*BANRTEXT8*/;/* CODE FOR BANNERTEXT                */
  273      %SUB FS_BANNERTEXT9_INT=27/*BANRTEXT9*/;/* CODE FOR BANNERTEXT                */
  274      %SUB FS_REGISTEREDNAME_INT=28/*RGSTDNAM*/;/* CODE FOR BANNERTEXT        E     */
  275      /**/
  276      /**/
  277      %MACRO FS$WRSP (NAME=FS$WRSP,STCLASS=BASED);
  278      DCL 1 NAME STCLASS,                     /* WORKSPACE STRUCTURE FOR FSK$BANNER */
  279            2 START SBIN WORD,                /* STARTING OR FINISHING THIS BANNER  */
  280            2 ROW UBIN WORD,                  /* LAST ROW PRINTED                   */
  281            2 STRIKES UBIN WORD,              /* LAST STRIKES PRINTED               */
  282            2 REPEAT UBIN WORD,               /* LAST REPEAT PRINTED                */
  283            2 MAXROW UBIN WORD,               /* MAX ROW IN THIS BANNER             */
  284            2 TIME CHAR(5) UNAL,              /* TIME THIS BANNER WAS CREATED       */
  285            2 FIL CHAR(3) UNAL,               /* FILLER                             */
  286            2 DATE CHAR(8) UNAL,              /*  DATE THIS BANNER WAS CREATED      */
  287            2 MAXBYTES UBIN WORD UNAL,        /* MAX NUMBER OF BYTES IN THIS BUFFER */
  288            2 * CHAR(20),                     /* UNUSED                             */
  289            2 SUBFILE$ PTR,                   /* POINTER TO SUBFILE FIELD           */
  290            2 JIT$ PTR,                       /* A JIT PTR                          */
  291            2 SITEINFO PTR,                   /* PTR TO SITEINFO                    */
  292            2 WIDTH UBIN WORD,                /* WIDTH OF THE PAGE                  */
  293            2 DATE_TIME EPTR;                 /* AND ENTRY POINT TO GET DATE/TIME   */
  294      %MEND;
  295      /**/
  296      /**/
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         9    
  297      %MACRO FS$SVFU (NAME=FS$SVFU,STCLASS=BASED); /* WHAT VFC_VFU BETTER LOOK LIKE */
  298      DCL 1 NAME STCLASS,
  299            2 TLP,
  300              3 T UBIN(9)UNAL,                /*INIT(8)*/
  301              3 L UBIN BYTE UNAL,             /*INIT(16)*/
  302            2 WIDTH UBIN BYTE UNAL,
  303            2 LENGTH UBIN BYTE UNAL,
  304            2 LIMBO UBIN BYTE UNAL,
  305            2 FIRSTLINE UBIN BYTE UNAL,
  306            2 * BIT(8),
  307            2 EXTWID BIT(1),
  308            2 LPI UBIN BYTE UNAL,
  309            2 *(0:9)UBIN BYTE UNAL,
  310            2 TLV,
  311              3 T UBIN BYTE UNAL,             /*INIT(18)*/
  312              3 L UBIN BYTE UNAL,             /*INIT(64)*/
  313            2 V,
  314              3 LINE (0:31) UBIN BYTE UNAL,
  315              3 NEXT (0:31) UBIN BYTE UNAL;
  316      %MEND;
  317      /**/
  318      /**/
  319      %MACRO FS$HVFU (NAME=FS$HVFU,STCLASS=BASED); /* WHAT HARD VFU LOOKS LIKE      */
  320      DCL 1 NAME STCLASS ALIGNED,
  321            2 LPI UBIN BYTE UNAL,
  322            2 LNG UBIN BYTE UNAL,
  323            2 TOF,
  324              3 LN UBIN BYTE UNAL,
  325              3 CHN BIT(9) UNAL,
  326            2 V (0:28),
  327              3 LN UBIN BYTE UNAL,
  328              3 CHN UBIN BYTE UNAL,
  329            2 BOF,
  330              3 LN UBIN BYTE UNAL,
  331              3 CHN BIT(9) UNAL;
  332      %MEND;
  333      /**/
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         10   
  334      /**/
  335      %MACRO FS$SET_INIT(NAME=FS$SETUP,
  336                         STCLASS=BASED,
  337                         CNT=0);
  338      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  339      %IF (SUBSTR(STR,0,5)='BASED') OR
  340          (SUBSTR(STR,0,8)='       ');
  341      DCL 1 NAME STCLASS,
  342            2 LINES UBIN BYTE UNAL,           /* NUM OF LINES                       */
  343            2 * UBIN BYTE UNAL,
  344            2 * UBIN HALF UNAL,
  345            2 TXT(0:0) CHAR(72);
  346      %ELSE;
  347      DCL 1 NAME STCLASS,
  348            2 LINES UBIN BYTE UNAL INIT(CNT), /* NUM OF LINES                       */
  349            2 * UBIN BYTE UNAL INIT(0),
  350            2 * UBIN HALF UNAL INIT(0),
  351      %SET BCNT=CNT-1;
  352            2 TXT(0:%BCNT) CHAR(72) INIT(
  353      %ENDIF;
  354      %MEND;
  355      /*
  356      */
  357      %MACRO FS$SET_ENT(TXT=NIL);
  358              %TXT,
  359      %MEND;
  360      /*
  361      */
  362      %MACRO FS$SET_GEN;
  363                ' '*0);
  364      %MEND;
  365      %MACRO FS$ACC_INIT(NAME=FS$ACCESS,
  366                         STCLASS=BASED,
  367                         CNT=0);
  368      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  369      %IF (SUBSTR(STR,0,5)='BASED') OR
  370          (SUBSTR(STR,0,8)='       ');
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         11   
  371      DCL 1 NAME STCLASS,
  372            2 TNAMES UBIN WORD UNAL,          /* NUM OF NAMES                       */
  373            2 LIST(0:0) CHAR(8);
  374      %ELSE;
  375      DCL 1 NAME STCLASS,
  376            2 TNAMES UBIN WORD UNAL INIT(CNT), /* NUM OF NAMES                      */
  377      %SET BCNT=CNT-1;
  378            2 LIST(0:%BCNT) CHAR(8) INIT(
  379      %ENDIF;
  380      %MEND;
  381      /*
  382      */
  383      %MACRO FS$ACC_ENT(TXT=NIL);
  384              %TXT,
  385      %MEND;
  386      /*
  387      */
  388      %MACRO FS$ACC_GEN;
  389                ' '*0);
  390      %MEND;
  391      %MACRO FS$ACCT_INIT(NAME=FS$ACCOUNTS,
  392                         STCLASS=BASED,
  393                         CNT=0);
  394      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  395      %IF (SUBSTR(STR,0,5)='BASED') OR
  396          (SUBSTR(STR,0,8)='       ');
  397      DCL 1 NAME STCLASS,
  398            2 TACCTS UBIN WORD UNAL,          /* NUM OF ACCTS                       */
  399            2 LIST(0:0) CHAR(8);
  400      %ELSE;
  401      DCL 1 NAME STCLASS,
  402            2 TACCTS UBIN WORD UNAL INIT(CNT), /* NUM OF ACCTS                      */
  403      %SET BCNT=CNT-1;
  404            2 LIST(0:%BCNT) CHAR(8) INIT(
  405      %ENDIF;
  406      %MEND;
  407      /*
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         12   
  408      */
  409      %MACRO FS$ACCT_ENT(TXT=NIL);
  410              %TXT,
  411      %MEND;
  412      /*
  413      */
  414      %MACRO FS$ACCT_GEN;
  415                ' '*0);
  416      %MEND;
  417
  418      /*   This macro describes some of the large character storage
  419           areas used inside the CO-OP.  The reason for doing this like
  420           this is to eliminate some of the AUTO storage for this segment.
  421           The area described by these macros is gotten dynamically and
  422           passed into FSK$BANNER.  Passing the area instead of the pointer
  423           makes FSK$BANNER run faster since there is only one pointer
  424           evaluation done at CALL instead of for each reference.
  425      */
  426      %MACRO FS$WORKAUTO (NAME=FS$WORKAUTO,
  427                          STCLASS=BASED);
  428
  429      %LSET LISTDIR = '0'B;
  430      %LSET LISTEXP = '1'B;
  431      %LSET LISTCOM = '0'B;
  432      %LSET LISTSUB = '1'B;
  433      %EQU BTEXT_REC_SIZE = 824;
  434      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  435      %IF (SUBSTR(STR,0,6)='STATIC') OR
  436          (SUBSTR(STR,0,8)='CONSTANT') OR
  437          (SUBSTR(STR,0,3)='EXT');
  438      %LSET INIT=CHARTEXT('INIT');
  439      %ELSE;
  440      %LSET INIT=CHARTEXT('/*');
  441      %ENDIF;
  442
  443      DCL 1 NAME STCLASS ALIGNED,
  444            2 TWORK,
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         13   
  445              3 COUNT UBIN BYTE UNAL %INIT (0) %CHARTEXT ('/**/'),
  446              3 TEXT CHAR(256) %INIT (' ') %CHARTEXT ('/**/');
  447
  448      %MEND;
  449      /*
  450           Macros to structure the charset record.
  451           FS$CHARSET is the header of the record.
  452           This macro uses the same structure as FS$FORMREC to describe
  453           the legal devices, when that macro is changed, this one should
  454           be checked.
  455      */
  456      /*
  457           Default charset is the 600 image!
  458      */
  459      %MACRO FS$CHARSET(NAME=FS$CHARSET,STCLASS=BASED,
  460                         LP_OK='0'B,
  461                         TS_OK='0'B,
  462                         ELS_OK='0'B,
  463                         ONE_OK='0'B,
  464                         LTYPE='  ',
  465                         ATTRIBUTES='000001'O,
  466                         CHARSET0="'BDFGHJgS0ACEINORLTabcdef'",
  467                         CHARSET1="'KhijklmM0PQUVWXYZ:;?!%7x'",
  468                         CHARSET2="'ynoprstw0z123456#89.,()@'",
  469                         CHARSET3='$=&/''\^_0"<>[]gS~ACEINOR',
  470                         CHARSET4="'{Tabcdef0hijklm}|`-*+quv'",
  471                         CHARSET5="'BDFGHJ7x0noprstwLz123456'",
  472                         CHARSET6="'K89.,()M0PQUVWXYZ:;?!%gS'",
  473                         CHARSET7="'yACEINOR0Tabcdef#hijklm@'",
  474                         CHARSET8='$=&/''\^_0"<>[]7x~noprstw',
  475                         CHARSET9="'{z123456089.,()}|`-*+quv'"
  476                                                            );
  477
  478      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  479      %IF (SUBSTR(STR,0,6)='STATIC') OR
  480       (SUBSTR(STR,0,8)='CONSTANT') OR
  481       (SUBSTR(STR,0,3)='EXT');
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         14   
  482      %LSET INIT=CHARTEXT('INIT');
  483      %ELSE;
  484      %LSET INIT=CHARTEXT('/*');
  485      %ENDIF;
  486
  487      DCL 1 NAME STCLASS ALIGNED,
  488            2 SETS (0:9) CHAR (24) %INIT (CHARSET0,
  489                                       CHARSET1,
  490                                       CHARSET2,
  491                                       CHARSET3,
  492                                       CHARSET4,
  493                                       CHARSET5,
  494                                       CHARSET6,
  495                                       CHARSET7,
  496                                       CHARSET8,
  497                                       CHARSET9) %CHARTEXT ('/**/'),
  498            2 CHAINIMAGE REDEF SETS CHAR (240) UNAL,
  499
  500            2 ATTRS BIT (18) %INIT (ATTRIBUTES) %CHARTEXT ('/**/'),
  501            2 LGLTYPS,
  502              3 LPOK BIT(1) %INIT(LP_OK)%CHARTEXT('/**/'),
  503              3 TSOK BIT(1) %INIT(TS_OK)%CHARTEXT('/**/'),
  504              3 ELSOK BIT(1) %INIT(ELS_OK)%CHARTEXT('/**/'),
  505              3 ONEOK BIT(1) %INIT(ONE_OK)%CHARTEXT('/**/'),
  506              3 * BIT(5) %INIT('00000'B)%CHARTEXT('/**/'),
  507              3 LTYP CHAR(2) %INIT(LTYPE)%CHARTEXT('/**/'),
  508              3 * BIT(27) %INIT('000000000'O)%CHARTEXT('/**/');
  509
  510      %MEND;
  511      %MACRO FS$GFORMREC(NAME=FS$GFORMREC,STCLASS=BASED,
  512                         FRMNAME = '  ',
  513                         CHNAME = 'NONE',
  514                         SETDISP = 0,
  515                         ACCDISP = 0,
  516                         BANDISP = 0,
  517                         ALGDISP = 0,
  518                         ACCTSDISP = 0,
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         15   
  519                         X_SIZE_ = '000000'O,
  520                         X_USIZE_ = 0,
  521                         Y_SIZE_ = '000000'O,
  522                         Y_USIZE_ = 0,
  523                         Z_SIZE_ = '000000'O,
  524                         Z_USIZE_ = 0,
  525                         X_OFFSET_ = '000000'O,
  526                         X_UOFFSET_ = 0,
  527                         Y_OFFSET_ = '000000'O,
  528                         Y_UOFFSET_ = 0,
  529                         Z_OFFSET_ = '000000'O,
  530                         Z_UOFFSET_ = 0,
  531                         SPARAM6_ = '000000'O,
  532                         SPARAM7_ = '000000'O,
  533                         SPARAM8_ = '000000'O,
  534                         SPARAM9_ = '000000'O,
  535                         UPARAM0_ = '000000'O,
  536                         UPARAM1_ = '000000'O,
  537                         UPARAM2_ = '000000'O,
  538                         UPARAM3_ = '000000'O,
  539                         UPARAM4_ = '000000'O,
  540                         UPARAM5_ = '000000'O,
  541                         UPARAM6_ = '000000'O,
  542                         UPARAM7_ = '000000'O,
  543                         UPARAM8_ = '000000'O,
  544                         UPARAM9_ = '000000'O,
  545                         GRAPHICS_OK(YES='1'B,NO='0'B) = '1'B,
  546                         TRANS_OK(YES='1'B,NO='0'B)='0'B,
  547                         LP_OK(YES='1'B,NO='0'B) = '0'B,
  548                         TS_OK(YES='1'B,NO='0'B) = '0'B,
  549                         ELS_OK(YES='1'B,NO='0'B) = '0'B,
  550                         ONE_OK(YES='1'B,NO='0'B) = '1'B,
  551                         LTYPE = 'GR' );
  552      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  553      %IF (SUBSTR(STR,0,6)='STATIC') OR
  554       (SUBSTR(STR,0,8)='CONSTANT') OR
  555       (SUBSTR(STR,0,3)='EXT');
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         16   
  556      %LSET INIT=CHARTEXT('INIT');
  557      %ELSE;
  558      %LSET INIT=CHARTEXT('/*');
  559      %ENDIF;
  560
  561      DCL 1 NAME STCLASS ALIGNED,
  562            2 FNAME CHAR(6) %INIT(FRMNAME)%CHARTEXT('/**/'), /* GRAPHIC FORM NAME   */
  563            2 ACCTDISP UBIN HALF UNAL %INIT(ACCTSDISP)%CHARTEXT('/**/'),
  564            2 SETUPDISP UBIN HALF UNAL %INIT(SETDISP)%CHARTEXT('/**/'), /* WD DISP TO SETUP */
  565            2 ACCSDISP UBIN HALF UNAL %INIT(ACCDISP)%CHARTEXT('/**/'), /* DISP TO ACCESS */
  566            2 BANRDISP UBIN HALF UNAL %INIT(BANDISP)%CHARTEXT('/**/'), /* DISP TO BANNER */
  567            2 ALGNDISP UBIN HALF UNAL %INIT(ALGDISP)%CHARTEXT('/**/'), /* DISP TO ALGNMENT */
  568            2 * BIT(7) %INIT('0000000'B)%CHARTEXT('/**/'),
  569            2 TRANSLGL BIT(1) %INIT(TRANS_OK)%CHARTEXT('/**/'), /* TRANSPARENT LEGAL */
  570            2 GRAPHIC BIT(1) %INIT(GRAPHICS_OK)%CHARTEXT('/**/'), /* GRAPHIC FORM   */
  571
  572      /*   The LGLTYPS field here is duplicated in the FS$CHARSET record
  573           and when that structure is changed, this one should be checked!
  574
  575          CHAIN is specified in the form definition to bring in the
  576         attributes and the legal devices list...
  577      */
  578      /*  LEGAL TYPE OF DEVICES FOR THIS GRAPHIC FORM */
  579            2 LGLTYPS,
  580              3 LPOK BIT(1) %INIT(LP_OK)%CHARTEXT('/**/'), /* LEGAL ON LP           */
  581              3 TSOK BIT(1) %INIT(TS_OK)%CHARTEXT('/**/'), /* LEGAL ON TS           */
  582              3 ELSOK BIT(1) %INIT(ELS_OK)%CHARTEXT('/**/'), /* LEGAL ON ALL BUT TS+LP */
  583              3 ONEOK BIT(1) %INIT(ONE_OK)%CHARTEXT('/**/'), /* LEGAL ON TYP=LTYP   */
  584              3 * BIT(5) %INIT('00000'B)%CHARTEXT('/**/'),
  585              3 LTYP CHAR(2) %INIT(LTYPE)%CHARTEXT('/**/'), /* LEGAL IF ONEOK=YES   */
  586            2 ATTR BIT(18) UNAL %INIT('000002'O) %CHARTEXT('/**/'),
  587            2 CHAIN_NAME CHAR(8) %INIT(CHNAME)%CHARTEXT('/**/'),
  588            2 X_SIZE UBIN (18) UNAL %INIT (X_USIZE_) %CHARTEXT('/**/'),
  589            2 Y_SIZE UBIN (18) UNAL %INIT (Y_USIZE_) %CHARTEXT('/**/'),
  590            2 Z_SIZE UBIN (18) UNAL %INIT (Z_USIZE_) %CHARTEXT('/**/'),
  591            2 X_OFFSET UBIN (18) UNAL %INIT(X_UOFFSET_) %CHARTEXT('/**/'),
  592            2 Y_OFFSET UBIN (18) UNAL %INIT(Y_UOFFSET_) %CHARTEXT('/**/'),
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         17   
  593            2 Z_OFFSET UBIN (18) UNAL %INIT(Z_UOFFSET_) %CHARTEXT('/**/'),
  594            2 SET_DEV_LIM,
  595              3 DEV_LIM_OPCODE,
  596                4 CLASS UBIN (9) UNAL %INIT(%XG_COOP_CONTROL#) %CHARTEXT ('/**/'),
  597                4 INDX UBIN (9) UNAL %INIT(%XG_COOP_SET_DEV_LIM#) %CHARTEXT ('/**/'),
  598              3 X_SIZE BIT (18) UNAL %INIT(X_SIZE_) %CHARTEXT('/**/'),
  599              3 Y_SIZE BIT (18) UNAL %INIT(Y_SIZE_) %CHARTEXT('/**/'),
  600              3 Z_SIZE BIT (18) UNAL %INIT(Z_SIZE_) %CHARTEXT('/**/'),
  601              3 X_OFFSET BIT (18) UNAL %INIT(X_OFFSET_) %CHARTEXT('/**/'),
  602              3 Y_OFFSET BIT (18) UNAL %INIT(Y_OFFSET_) %CHARTEXT('/**/'),
  603              3 Z_OFFSET BIT (18) UNAL %INIT(Z_OFFSET_) %CHARTEXT('/**/'),
  604              3 SPARAM6 BIT (18) UNAL %INIT(SPARAM6_) %CHARTEXT('/**/'),
  605              3 SPARAM7 BIT (18) UNAL %INIT(SPARAM7_) %CHARTEXT('/**/'),
  606              3 SPARAM8 BIT (18) UNAL %INIT(SPARAM8_) %CHARTEXT('/**/'),
  607              3 SPARAM9 BIT (18) UNAL %INIT(SPARAM9_) %CHARTEXT('/**/'),
  608              3 UPARAM (0:9) BIT (18) UNAL %INIT(UPARAM0_,UPARAM1_,
  609                         UPARAM2_,UPARAM3_,UPARAM4_,UPARAM5_,UPARAM6_,
  610                         UPARAM7_,UPARAM8_,UPARAM9_) %CHARTEXT('/**/'),
  611            2 SET_DEV_LIM_CMD REDEF SET_DEV_LIM CHAR (42) UNAL;
  612      %MEND;
  613      /* The following math should be handled by the routines which
  614         work with these graphic banners.
  615
  616         1) Any value which is stored as a percentage (ie. CW, CH, CS) will
  617            have to first be run through a conversion as follows.
  618            Given X as a percentage of the default device space, and Y is
  619            the 16 bit value to store-
  620
  621            Y = INT ((X * 65535) / 100)
  622
  623            Y is now a 16 bit value tha must be converted as described
  624            following.
  625
  626         2) Any value which will appear in a sixteen bit field has to
  627            be stored in an 18 bit host field.  The garbage bits are
  628            every ninth bit starting from the right.  i.e. Right to
  629            left one host byte would have the following Significant and
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         18   
  630            garbage bits.
  631                              +---------+
  632                              |gSSSSSSSS|
  633                              +---------+
  634
  635            This is easiest done with two structures and the
  636            following code.
  637
  638            DCL 1 HOST,
  639                2 * BIT (2) UNAL,
  640                2 UPPER UBIN (8) UNAL,
  641                2 LOWER UBIN (8) UNAL;
  642            DCL HOST18 REDEF HOST UBIN (18) UNAL;
  643
  644            DCL 1 FEP,
  645                2 * BIT (1) UNAL,
  646                2 UPPER UBIN (8) UNAL,
  647                2 * BIT (1) UNAL,
  648                2 LOWER UBIN (8) UNAL;
  649            DCL FEP18 REDEF FEP UBIN (18) UNAL;
  650            DCL Y UBIN;
  651
  652            Y = (X * 65535) / 100;
  653            HOST18 = 0;
  654            FEP18 = 0;
  655            HOST18 = Y;
  656            FEP.UPPER = HOST.UPPER;
  657            FEP.LOWER = HOST.LOWER;
  658
  659            Now send FEP as the 16 bit operand to the fep.
  660
  661      */
  662      %MACRO FS$GRAPHIC_BANNER (NAME=FS$GRAPHIC_BANNER,
  663                    STCLASS=BASED,
  664                    CNT=0,
  665                    REPTS=0,
  666                    CHRG=0,
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         19   
  667                    CWID=1167,
  668                    CHIT=1167,
  669                    CSPAC=1167,
  670                    CWID_=655,
  671                    CHIT_=655,
  672                    CSPAC_=655,
  673                    DIR=90,
  674                    X_DIR=65535,
  675                    Y_DIR=0,
  676                    Z_DIR=0,
  677                    INR=0);
  678
  679      %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
  680      %IF (SUBSTR(STR,0,6)='STATIC') OR
  681       (SUBSTR(STR,0,8)='CONSTANT') OR
  682       (SUBSTR(STR,0,3)='EXT');
  683      %LSET INIT=CHARTEXT('INIT');
  684      %ELSE;
  685      %LSET INIT=CHARTEXT('/*');
  686      %ENDIF;
  687
  688
  689      DCL 1 NAME STCLASS,
  690            2 CHARGE UBIN BYTE UNAL %INIT(CHRG) %CHARTEXT('/**/'), /* DO WE CHARGE FOR BANNER */
  691            2 ALIGNCTL REDEF CHARGE UNAL,
  692              3 EVERY BIT(1) UNAL,            /* DO WE ALIGN EVERY MOUNT            */
  693              3 * BIT(8) UNAL,
  694            2 REPEATS UBIN BYTE UNAL %INIT(REPTS) %CHARTEXT('/**/'), /* NUM OF TIMES TO PRINT THIS BANNER */
  695            2 INTR UBIN BYTE UNAL %INIT(INR) %CHARTEXT('/**/'), /* ARE INTRINSICS  ALLOWED */
  696            2 NUM_ENTRIES UBIN BYTE UNAL %INIT(CNT) %CHARTEXT('/**/'), /* NUM OF ENTRIES IN THE TABLE */
  697            2 ENTRIES(0:0),
  698              3 CHARUP,
  699                4 CHARUP_OPCODE,
  700                  5 CLASS UBIN (9) UNAL %INIT (%XG_COOP_SEGM_BASIC#) %CHARTEXT('/**/'),
  701                  5 INDX UBIN (9) UNAL %INIT (%XG_COOP_SET_CHARACTER_UP#) %CHARTEXT('/**/'),
  702                4 X UBIN (18) UNAL %INIT (X_DIR) %CHARTEXT ('/**/'),
  703                4 Y UBIN (18) UNAL %INIT (Y_DIR) %CHARTEXT ('/**/'),
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         20   
  704                4 Z UBIN (18) UNAL %INIT (Z_DIR) %CHARTEXT ('/**/'),
  705              3 SET_CHARUP_CMD REDEF CHARUP CHAR (8) UNAL,
  706              3 DIRECTION UBIN (9) UNAL %INIT (DIR) %CHARTEXT ('/**/'),
  707              3 CHARSIZE,
  708                4 CHARSIZE_OPCODE,
  709                  5 CLASS UBIN (9) UNAL %INIT (%XG_COOP_ATTR_BAS_NONE_2#) %CHARTEXT('/**/'),
  710                  5 INDX UBIN (9) UNAL %INIT (%XG_COOP_SET_CHARSIZE#) %CHARTEXT('/**/'),
  711                4 CHAR_WIDTH BIT (18) UNAL %INIT (CWID) %CHARTEXT ('/**/'),
  712                4 CHAR_HITE BIT (18) UNAL %INIT (CHIT) %CHARTEXT ('/**/'),
  713              3 SET_CHARSIZE_CMD REDEF CHARSIZE CHAR (6) UNAL,
  714              3 CHAR_WIDTH UBIN (18) UNAL %INIT (CWID_) %CHARTEXT ('/**/'),
  715              3 CHAR_HITE UBIN (18) UNAL %INIT (CHIT_) %CHARTEXT ('/**/'),
  716              3 CHARSPACE,
  717                4 CHARSPACE_OPCODE,
  718                  5 CLASS UBIN (9) UNAL %INIT (%XG_COOP_ATTR_BAS_NONE_2#) %CHARTEXT('/**/'),
  719                  5 INDX UBIN (9) UNAL %INIT (%XG_COOP_SET_CHARSPACE#) %CHARTEXT('/**/'),
  720                4 CHAR_SPACE BIT (18) UNAL %INIT (CSPAC) %CHARTEXT ('/**/'),
  721              3 SET_CHARSPACE_CMD REDEF CHARSPACE CHAR (4) UNAL,
  722              3 CHAR_SPACE UBIN (18) UNAL %INIT (CSPAC_) %CHARTEXT ('/**/'),
  723              3 X_VAL UBIN (18) UNAL,
  724              3 Y_VAL UBIN (18) UNAL,
  725              3 Z_VAL UBIN (18) UNAL,
  726              3 NDC_X_VAL UBIN (18) UNAL,
  727              3 NDC_Y_VAL UBIN (18) UNAL,
  728              3 NDC_Z_VAL UBIN (18) UNAL,
  729              3 TYPE UBIN BYTE UNAL,          /* TYPE OF ENTRY(INTRINSIC/PLAIN)     */
  730              3 COUNT UBIN BYTE UNAL,         /* COUNT OF TEXT (IF ANY) OR          */
  731              3 CHR REDEF COUNT CHAR (1),     /*CHAR FOR REPEAT ACCROSS PAGE        */
  732              3 DISP UBIN HALF UNAL,          /* DISP IN WORDS TO TEXT (IF ANY)     */
  733              3 TOTLEN UBIN (27) UNAL,        /* TOTLEN OF ENTRY (INTERNAL)         */
  734              3 * UBIN (27) UNAL,
  735              3 MARK UBIN BYTE UNAL;          /* MARK (INTERNAL)                    */
  736      %MEND;
  737      /**/
  738
  739      %MACRO FS$GWRSP (NAME=FS$GWRSP,STCLASS=BASED);
  740      DCL 1 NAME STCLASS,                /* WORKSPACE STRUCTURE FOR FSK$GBANNER     */
14:30 JUL 28 '97 FS_SUPER_C.:E05SI                                         21   
  741            2 START SBIN,                     /* STARTING OR FINISHING THIS BANNER  */
  742            2 LINE_CNT UBIN,             /* COUNTS HOW MANY LINES PER ENTRY OUT     */
  743            2 CUR_ENT UBIN,                   /* LAST ENTRY PRINTED                 */
  744            2 CHAR_CNT UBIN (18),             /* LAST CHAR PRINTED FOR THIS ENTRY   */
  745            2 REPEATS UBIN (18),              /* NUMBER OF PAGES TO PRINT           */
  746            2 MAXBYTES UBIN,                  /* MAX NUMBER OF BYTES IN THIS BUFFER */
  747            2 X_MAX UBIN,                     /* X MAX OF THIS BANNER ENTRY         */
  748            2 Y_MAX UBIN,                     /* Y MAX OF THIS BANNER ENTRY         */
  749            2 Z_MAX UBIN,                     /* Z MAX OF THE BANNER ENTRY          */
  750            2 DELTA_X SBIN,                   /* DELTA X FOR THIS BANNER ENTRY      */
  751            2 DELTA_Y SBIN,                   /* DELTA Y FOR THIS BANNER ENTRY      */
  752            2 DELTA_Z SBIN,                   /* DELTA Z FOR THIS BANNER ENTRY      */
  753            2 TIME CHAR(5) UNAL,              /* TIME THIS BANNER WAS CREATED       */
  754            2 DATE CHAR(8) UNAL,              /*  DATE THIS BANNER WAS CREATED      */
  755            2 FIL BIT (27) UNAL,              /* FOR TEMP USE AS FILLER             */
  756            2 SUBFILE$ PTR,                   /* POINTER TO SUBFILE FIELD           */
  757            2 JIT$ PTR,                       /* A JIT PTR                          */
  758            2 ENTDISP$ PTR,              /* POINTER TO START OF BANNER OR ALIGN     */
  759            2 ENTDISP REDEF ENTDISP$ UBIN,    /* WORD OFFSET TO BANNER/ALIGN*/
  760            2 SITEINFO PTR,                   /* PTR TO SITEINFO                    */
  761            2 DATE_TIME EPTR;                 /* AND ENTRY POINT TO GET DATE/TIME   */
  762      %MEND;

