      PROGRAM GRAFLINE2
C*T***********************************************************
C*T*                                                         *
C*T* Copyright (c) Bull HN Information Systems Inc., 1989    *
C*T*                                                         *
C*T***********************************************************
C     SAVE
C
C*X* JR,IND=3,FMT=1000,STMT=100
C
C     PROGRAM TO PLOT STEP CHARTS ON A STANDARD
C     8.5" HIGH AND 11" WIDE SHEET
C
C     PROGRAM PROMPTS ON F$108 FOR ALL INPUT, READING FROM F$105
C
C
      DIMENSION DARRAY(4,204),KOUNTS(4)
      DIMENSION XTITL(4),YTITL(4)
      DATA XTITL/2.,4.,6.,8./
      DATA YTITL/6.45,6.45,6.45,6.45/
      DIMENSION TEMPARY(816)
      CHARACTER SUBTITLE(200)*12
      DATA XTITL /2.,4.,6.,8./
      CHARACTER TITLE*80, XTITLE*40, YTITLE*40, NOTES*40, TESTIT*80
      CHARACTER LINNAME(4)*12,SOMETITLE*80,TESTTITLE*12
      CHARACTER FIT*1,SCALEIT*1
      CHARACTER KFLAG(4)*4,SCRATCH*80
      DIMENSION SCALEARR (6,3)
      INTEGER OPTS(16),VIEWSURF/0/
      INTEGER KHAR(4)
      DATA KHAR/3,4,5,6/
      REAL SUMX,SUMY,SUMXSQ,SUMXY
      INTEGER LINESTYLES(4)/2525,5252,4848,9292/
C
C         N.B. ADJUST THESE VALUES FOR YOUR MACHINE
C
      DATA DMAX,DMIN /-8.E152,8.E152/
C
C     CLEAR THE ARRAYS
C
      CALL CCBUF(OPTS)
      IF (OPTS(1).EQ.9999) THEN
         OUTPUT 'Bad command line option -- aborting'
         STOP
      ENDIF
      DO 110 J = 1, 204
         DO 100 I = 1, 4
            DARRAY(I,J) = -900.
  100    CONTINUE
  110 CONTINUE
      DO 120 I=1,4
         LINNAME(I)=' '
         KFLAG(I)=' '
  120 CONTINUE
      XTITLE = ' '
      YTITLE = ' '
      TITLE = ' '
      IXGRID = 0
      IYGRID = 0
C
C     PROMPT HERE FOR TITLES
C
      WRITE (108,1150)
      READ (105,1160) TITLE
      WRITE (108,1020)
      READ (105,1030) SCRATCH
      DO 130 I=1,(80-5)
         IF (SCRATCH(I:I+4) .EQ. ',GRID') THEN
            SCRATCH(I:I+5)= '     '
            IXGRID=1
            WRITE (108,1050) 'X'
            GOTO 140
         ENDIF
  130 CONTINUE
  140 CONTINUE
      XTITLE = SCRATCH(1:40)
      WRITE (108,1040)
      READ (105,1030) SCRATCH
      DO 150 I=1,(80-5)
         IF (SCRATCH(I:I+4) .EQ. ',GRID') THEN
            SCRATCH(I:I+5)= '     '
            IYGRID=1
            WRITE (108,1050) 'Y'
            GOTO 160
         ENDIF
  150 CONTINUE
  160 CONTINUE
      YTITLE = SCRATCH(1:40)
      WRITE (108,1210)
      READ (105,1220) NOTES
C
C
C          OBTAIN DATA TO DETERMINE HOW MUCH WE'RE GOING
C          TO PLOT
C
  170 CONTINUE
      SCALEIT = 'Z'
      FIT = 'N'
      WRITE (108,1170)
      READ (105,1030) SCRATCH
      DO 180 I=1,80
         IF (SCRATCH(I:I) .EQ. ',')GOTO 190
  180 CONTINUE
  190 CONTINUE
      DECODE (30,1000,SCRATCH(1:I-1)) NLINES
      IF (NLINES .GT. 4)GOTO 170
      IF (NLINES .LT. 1)GOTO 170
      IF (I .GT. 12) THEN
         FIT = 'N'
      ELSE
         I=I+1
  200    CONTINUE
         IF (SCRATCH(I:I) .NE. ' ')GOTO 210
         I = I+1
         IF (I .GT. 79)GOTO 210
         GOTO 200
  210    CONTINUE
         FIT = SCRATCH(I:I)
      ENDIF
  220 CONTINUE
      I=I+1
      IF (I .GT. 79)GOTO 230
      IF (SCRATCH(I:I) .EQ. ',')GOTO 230
      GOTO 220
  230 CONTINUE
      I=I+1
      IF (I .GT. 79)GOTO 240
      IF (SCRATCH(I:I) .NE. ' ')  THEN
         SCALEIT = SCRATCH(I:I)
         GOTO 240
      ENDIF
      GOTO 230
  240 CONTINUE
      IF ((SCALEIT .EQ. 'Z')  .OR. (SCALEIT .EQ. 'A')) THEN
         GOTO 250
      ELSE
         OUTPUT  ' *** Invalid scaling code'
         STOP
      ENDIF
  250 CONTINUE
      IF (FIT .EQ. 'Y' .AND. NLINES .GT. 1) THEN
         OUTPUT ' *** Can only do regression with 1 data line '
         STOP
      ENDIF
      IF (FIT.NE.'Y') FIT='N'
  260 CONTINUE
      WRITE (108,1130)
      READ (105,1140) NINTERV
      IF (NINTERV .GT. 200)GOTO 260
      I = 1
      WRITE (108,1060) I
      READ (105,1070) SCRATCH
      DO 270 J=1,(80-7)
         IF (SCRATCH(J:J+6) .EQ. ',NOLINE') THEN
            SCRATCH (J:J+6) = '       '
            KFLAG (I) = 'SCAT'
            WRITE (108,1010)
         ENDIF
  270 CONTINUE
      LINNAME (I) = SCRATCH(1:12)
      WRITE (108,1180) I
      KOUNTS (I) = 0
      DO 290 J = 1,200
         READ (105,1090,END=300) TESTIT
         IF (TESTIT(1:4) .EQ. '!EOD') THEN
            GOTO 300
         ENDIF
         DECODE (80,1190,TESTIT,IXX) DARRAY(I,J),SOMETITLE
         IF (DARRAY(I,J) .LT. 0. .AND. DARRAY(I,J).NE.-1.) THEN
            WRITE (108,1100) DARRAY(I,J),SOMETITLE
            STOP
         ENDIF
         IBEG = 0
  280    IBEG=IBEG+1
         IF (SOMETITLE(IBEG:IBEG).EQ.' ')GOTO 280
         SUBTITLE(J) = SOMETITLE(IBEG:IBEG+11)
         IF (DARRAY(I,J) .GE. 0.) THEN
            IF (DARRAY(I,J) .LT. DMIN) DMIN=DARRAY(I,J)
            IF (DARRAY(I,J) .GT. DMAX) DMAX=DARRAY(I,J)
         ENDIF
         KOUNTS(I) = KOUNTS(I)+1
         IF (NINTERV .NE. 0 .AND. KOUNTS(I) .GT. NINTERV) THEN
            WRITE (108,1200) I
            STOP
         ENDIF
  290 CONTINUE
  300 CONTINUE
      IF (NINTERV .EQ. 0) NINTERV=KOUNTS(1)
      DO 370 I = 2,NLINES
         WRITE (108,1060) I
         READ (105,1070) SCRATCH
         DO 310 J=1,(80-7)
            IF (SCRATCH(J:J+6) .EQ. ',NOLINE') THEN
               SCRATCH (J:J+6) = '       '
               KFLAG (I) = 'SCAT'
               WRITE (108,1010)
            ENDIF
  310    CONTINUE
         LINNAME (I) = SCRATCH(1:12)
         WRITE (108,1180) I
         KOUNTS (I) = 0
         DO 350 J = 1,200
            READ (105,1090,END=360) TESTIT
            IF (TESTIT(1:4) .EQ. '!EOD') THEN
               GOTO 360
            ENDIF
            DECODE (80,1190,TESTIT,IXX) SOMEDATA,SOMETITLE
            IF (SOMEDATA .LT. 0. .AND. SOMEDATA .NE. -1.) THEN
               WRITE (108,1100) SOMEDATA,SOMETITLE
               STOP
            ENDIF
            IBEG = 0
  320       IBEG = IBEG+1
            IF (SOMETITLE(IBEG:IBEG).EQ.' ')GOTO 320
            TESTTITLE = SOMETITLE(IBEG:IBEG+11)
            DO 330 L=1,NINTERV
               IF (SUBTITLE(L) .NE. TESTTITLE)GOTO 330
               IF (DARRAY(I,L) .NE. -900.) THEN
                  WRITE (108,1110) SOMEDATA,TESTTITLE
                  STOP
               ENDIF
               DARRAY(I,L) = SOMEDATA
               GOTO 340
  330       CONTINUE
            WRITE (108,1120) TESTTITLE
            STOP
  340       CONTINUE
            IF (DARRAY(I,J) .LT. DMIN) DMIN=DARRAY(I,J)
            IF (DARRAY(I,J) .GT. DMAX) DMAX=DARRAY(I,J)
            KOUNTS(I) = NINTERV
  350    CONTINUE
  360    CONTINUE
  370 CONTINUE
C
C          DATA SHOULD BE GATHERED NOW, GO AHEAD AND
C          SCALE AND PLOT IT
C
      CALL XG$INITIALIZE_CORE ('BUFFERED','NONE','2D','NONE')
      CALL XG$SET_COORD_SYSTEM_TYPE ('RIGHT')
      CALL XG$SET_NDC_SPACE_2 (1.0,.7)
      CALL XG$INITIALIZE_VIEW_SURFACE  (VIEWSURF,'INTENSITY')
      CALL XG$SELECT_VIEW_SURFACE  (VIEWSURF)
      CALL XG$SET_IMMEDIATE_VISIBILITY('OFF')
      CALL XG$SET_WINDOW_CLIPPING  ('ON')
      CALL XG$SET_WINDOW  (0.,10.,0.,7.)
      IF (OPTS(1).EQ.1) THEN
         CALL XG$SET_VIEWPORT_2 (.05,.95,.035,.665)
      ELSE
         CALL XG$SET_VIEWPORT_2 (0.,1.,0.,.7)
      ENDIF
      CALL XG$CREATE_TEMPORARY_SEG
      IF (OPTS(2).EQ.1) THEN
         CALL XG$MOVE_ABS_2 (.001,.001)
         CALL XG$LINE_ABS_2 (.001,6.999)
         CALL XG$LINE_ABS_2 (9.999,6.999)
         CALL XG$LINE_ABS_2 (9.999,.001)
         CALL XG$LINE_ABS_2 (.001,.001)
      ENDIF
      CALL XG$SET_CHARPRECISION ('stroke')
      CALL XG$SET_LINEWIDTH(.15)
C
C          FIGURE OUT SCALE FACTORS FOR EACH ARRAY
C
      IF (SCALEIT .EQ. 'Z') THEN
         ITEMP = 1
         TEMPARY(ITEMP) = 0.
      ELSE
         ITEMP = 0
      ENDIF
      DATAMAX = -1.
      DO 390 I = 1, NLINES
         DO 380 M=1,KOUNTS(I)
            IF (DARRAY(I,M) .GE. 0.) THEN
               ITEMP = ITEMP + 1
               TEMPARY(ITEMP) = DARRAY(I,M)
               IF (TEMPARY(ITEMP) .GT. DATAMAX) THEN
                  DATAMAX = TEMPARY(ITEMP)
               ENDIF
            ENDIF
  380    CONTINUE
  390 CONTINUE
      J = 10
      DO 400 I=1,6
         SCALEARR(I,1) = 5./FLOAT(J)
         J = J - 1
  400 CONTINUE
      DO 410 I=1,6
         CALL SCALE (TEMPARY,5.0,ITEMP,1,SCALEARR(I,1))
         SCALEARR(I,2) = TEMPARY (ITEMP+1)
         SCALEARR(I,3) = TEMPARY (ITEMP+2)
  410 CONTINUE
      STARTD = SCALEARR(1,2)
      SCALED = SCALEARR(1,3)
      YSTEP = SCALEARR(1,1)
      YMAX = (5.0 * SCALED) * (1./YSTEP) + STARTD
      RATIO = DATAMAX/YMAX
      DO 420 I=1,6
         YTEMP = (5.0 * SCALEARR(I,3))*(1./SCALEARR(I,1))+SCALEARR(I,2)
         IF ((DATAMAX/YTEMP).GT. RATIO) THEN
            RATIO = DATAMAX / YTEMP
            STARTD = SCALEARR(I,2)
            SCALED = SCALEARR(I,3)
            YSTEP  = SCALEARR (I,1)
         ENDIF
  420 CONTINUE
C
C          FIGURE OUT HOW MANY CHARACTERS TO PASS TO AXIS
C
      DO 430 K = 40,1,-1
         KOUNTX=K
         IF (XTITLE(KOUNTX:KOUNTX) .NE. ' ')GOTO 440
  430 CONTINUE
  440 CONTINUE
      DO 450 K = 40,1,-1
         KOUNTY = K
         IF (YTITLE(KOUNTY:KOUNTY) .NE.' ')GOTO 460
  450 CONTINUE
  460 CONTINUE
      DO 470 K = 80,1,-1
         KOUNTT = K
         IF (TITLE(KOUNTT:KOUNTT) .NE. ' ')GOTO 480
  470 CONTINUE
  480 CONTINUE
C
C     MAKE AXES
C
      CALL AXIS (1.5,1.25,YTITLE,KOUNTY,5.,90.,-1,STARTD,SCALED,YSTEP,
     113, 1, 1000.)
      CALL XG$MOVE_ABS_2 (1.5,1.25)
      CALL XG$LINE_REL_2 (8.0,0.00)
      SIZEINT = 8.0/FLOAT(NINTERV)
      CURR = 0.0
      TEXTINT = SIZEINT/2. + (SIZEINT*.10)
      CALL XG$SET_CHARUP_2 (1.,0.)
      CALL XG$SET_CHARJUST ('LEFT','CENTER')
      CALL XG$SET_CHARPRECISION ('stroke')
      TEMP = SIZEINT*.5
      IF (TEMP.GT. 0.20) TEMP= 0.20
      CALL XG$SET_CHARSIZE(TEMP,TEMP)
      ICKSIZE = TEMP*260.
      CALL XG$ESCAPE(2,1,ICKSIZE)
      CALL XG$SET_FONT (13)
      DO 490 L = 1,NINTERV
         CALL XG$MOVE_ABS_2(1.5+CURR,1.25)
         CALL XG$LINE_REL_2(0.,-0.25)
         CALL XG$MOVE_ABS_2 (1.5+TEXTINT+CURR,1.25-.15)
         CALL XG$TEXT_COUNT (SUBTITLE(L),12)
         CURR = CURR + SIZEINT
  490 CONTINUE
      CALL XG$MOVE_ABS_2 (9.5,1.25)
      CALL XG$LINE_REL_2 (0.,-0.25)
      CALL XG$MOVE_ABS_2 (5.5,1.25)
      CALL XG$MOVE_REL_2 (0.,-.900)
      CALL XG$SET_CHARUP_2 (0.,1.)
      CALL XG$SET_CHARSIZE (.25,.25)
      ICKSIZE = .25*260.
      CALL XG$ESCAPE (2,1,ICKSIZE)
      CALL XG$SET_FONT (13)
      CALL XG$SET_CHARJUST('CENTER','CENTER')
      CALL XG$TEXT_COUNT (XTITLE,KOUNTX)
C
C              check for and make grid pattern
C
      IF (IYGRID.EQ.0 .AND. IXGRID.EQ.0)GOTO 530
      CALL XG$MOVE_ABS_2 (1.5,6.25)
      CALL XG$LINE_ABS_2 (9.5,6.25)
      CALL XG$LINE_ABS_2 (9.5,1.25)
      CALL XG$SET_LINESTYLE(5454)
      CALL XG$SET_LINEWIDTH (.10)
      IF (IXGRID.EQ.0)GOTO 510
      SIZEINT = 8.0 / FLOAT (NINTERV)
      CURR = 0.0
      TEMP = SIZEINT * .5
      DO 500 L1=1,NINTERV
         CALL XG$MOVE_ABS_2(CURR+1.5+TEMP,1.25)
         CALL XG$LINE_ABS_2(CURR+1.5+TEMP,6.25)
         CURR = CURR+ SIZEINT
  500 CONTINUE
  510 CONTINUE
      IF (IYGRID.EQ.0)GOTO 530
      NOW=(5./YSTEP)-1
      HERE=1.25+YSTEP
      DO 520 L1=1,NOW
         CALL XG$MOVE_ABS_2(1.5,HERE)
         CALL XG$LINE_ABS_2(9.5,HERE)
         HERE=HERE+YSTEP
  520 CONTINUE
  530 CONTINUE
      CALL XG$SET_LINESTYLE (1)
      CALL XG$SET_LINEWIDTH (.20)
C
C          DRAW THE PLOT TITLE
C
      CALL XG$MOVE_ABS_2 (5.,6.825)
      CALL XG$SET_CHARSIZE (.40,.40)
      ICKSIZE = .40*260.
      CALL XG$ESCAPE (2,1,ICKSIZE)
      CALL XG$SET_FONT(13)
      CALL XG$SET_CHARJUST ('CENTER','CENTER')
      CALL XG$SET_CHARUP_2 (0.,1.)
      CALL XG$TEXT_COUNT (TITLE, KOUNTT)
C
C         draw plot notation
C
      DO 540 J=40,1,-1
         KOUNTT=J
         IF (NOTES(J:J) .NE. ' ')GOTO 550
  540 CONTINUE
  550 CONTINUE
      CALL XG$SET_CHARJUST('RIGHT','BOTTOM')
      CALL XG$SET_CHARSIZE (.15,.15)
      ICKSIZE=.15*260.
      CALL XG$ESCAPE(2,1,ICKSIZE)
      CALL XG$MOVE_ABS_2 (9.9,0.01)
      CALL XG$TEXT_COUNT(NOTES,KOUNTT)
C
C          DO THE LEGENDS
C
      ICKSIZE=.15*260.
      CALL XG$ESCAPE(2,1,ICKSIZE)
      CALL XG$SET_CHARSIZE(.15,.15)
      CALL XG$SET_CHARUP_2 (0.,1.)
      CALL XG$SET_FONT(13)
      CALL XG$SET_CHARJUST('LEFT','CENTER')
      DO 570 I = 1,NLINES
         IF (LINNAME(I) .EQ. 'DUMMY LABEL')GOTO 560
         IF (LINNAME(I) .EQ. ' ')GOTO 560
         CALL XG$SET_MARKER_SYMBOL(KHAR(I))
         CALL XG$MARKER_ABS_2 (XTITL(I)-.2,YTITL(I))
         CALL XG$MOVE_ABS_2 (XTITL(I),YTITL(I))
         CALL XG$TEXT_COUNT (LINNAME(I),12)
  560    CONTINUE
  570 CONTINUE
      CALL XG$CLOSE_TEMPORARY_SEG
      IF (OPTS(1).EQ.1) THEN
         CALL XG$SET_VIEWPORT_2 (.185,.905,.1475,.5975)
      ELSE
         CALL XG$SET_VIEWPORT_2 (.15,.95,.125,.6250)
      ENDIF
      YMAX=(5.0 * SCALED)*(1./YSTEP)+ STARTD
      CALL XG$SET_WINDOW (0.,8.,STARTD,YMAX)
      CALL XG$CREATE_TEMPORARY_SEG
      CALL XG$SET_LINEWIDTH (.20)
      DO 600 K = 1,2
         DO 590 I=1,NLINES
            IF (LINNAME(I) .EQ. 'DUMMY LABEL')GOTO 590
            IF (LINNAME(I) .NE. '  ') THEN
               CALL XG$SET_MARKER_SYMBOL (KHAR(I))
            ENDIF
            SUMX=0.
            SUMY=0.
            SUMXSQ=0.
            SUMXY=0.
            XPOS=0.
            NPOINTS=0
            DO 580 L=1,KOUNTS(I)
               VAL = DARRAY(I,L)
               IF (FIT .EQ. 'Y') THEN
                  NPOINTS=NPOINTS+1
                  THISX = FLOAT(NPOINTS)-.5
                  SUMX=SUMX+THISX
                  SUMY=SUMY+VAL
                  SUMXSQ=SUMXSQ+(THISX**2)
                  SUMXY=SUMXY+(THISX*VAL)
               ENDIF
C              OUTPUT XPOS,SIZEINT
               X1 = XPOS+(SIZEINT/2.)
C              OUTPUT XPOS,SIZEINT,X1
               Y1 = VAL
               X2 = X1 - SIZEINT
               Y2 = DARRAY(I,L-1)
               IF (L.GT.1 .AND. L.LE.KOUNTS(I)) THEN
                  IF (Y2 .GE. 0. .AND. Y1 .GE. 0) THEN
                     CALL XG$MOVE_ABS_2 (X2,Y2)
                     CALL XG$LINE_ABS_2 (X1,Y1)
                  ENDIF
               ENDIF
               IF (VAL.GE.0.) THEN
                  IF (LINNAME(I) .NE. ' ') THEN
                     CALL XG$MARKER_ABS_2(X1,Y1)
                  ENDIF
               ENDIF
               XPOS = XPOS + SIZEINT
  580       CONTINUE
C
C         IF FITTING, SET LINESTYLE AND PERFORM COMPUTATIONS
C
            IF (FIT .EQ. 'Y') THEN
               FORMA=(SUMXY - ((SUMX*SUMY)/FLOAT(NPOINTS)))/(SUMXSQ-
     1                  (SUMX**2/FLOAT(NPOINTS)))
               FORMB=(SUMY/FLOAT(NPOINTS))-(FORMA*(SUMX/FLOAT(NPOINTS)))
               CALL XG$SET_LINESTYLE (LINESTYLES(I))
               CALL XG$MOVE_ABS_2 (0.,FORMB)
               XTEMP = XPOS
               YTEMP = (FORMA*(FLOAT(NPOINTS)))+FORMB
               CALL XG$LINE_ABS_2 (XTEMP, YTEMP)
               CALL XG$SET_LINESTYLE (1)
            ENDIF
  590    CONTINUE
  600 CONTINUE
      CALL XG$CLOSE_TEMPORARY_SEG
      IF (FIT .EQ. 'Y') THEN
         CALL XG$SET_WINDOW  (0.,10.,0.,7.)
         IF (OPTS(1).EQ.1) THEN
            CALL XG$SET_VIEWPORT_2 (.05,.95,.035,.665)
         ELSE
            CALL XG$SET_VIEWPORT_2 (0.,1.,0.,.7)
         ENDIF
         CALL XG$CREATE_TEMPORARY_SEG
         ICKSIZE=.15*260.
         CALL XG$ESCAPE (2,1,ICKSIZE)
         CALL XG$SET_CHARSIZE (.15,.15)
         CALL XG$SET_CHARJUST('LEFT','BOTTOM')
         CALL XG$SET_FONT(13)
         YCUR=0.
         XCUR=(YCUR-FORMB)/FORMA
         ENCODE (80,1080,TESTIT) YCUR,XCUR
         CALL XG$MOVE_ABS_2 (.05,.20)
         DO 610 K=80,1,-1
            KOUNTX=K
            IF (TESTIT(KOUNTX:KOUNTX) .NE. ' ')GOTO 620
  610    CONTINUE
  620    CONTINUE
         CALL XG$TEXT_COUNT(TESTIT,KOUNTX)
         YCUR=YMAX
         XCUR=(YCUR-FORMB)/FORMA
         ENCODE (80,1080,TESTIT) YCUR,XCUR
         CALL XG$MOVE_ABS_2 (.05,.05)
         DO 630 K=80,1,-1
            KOUNTX=K
            IF (TESTIT(KOUNTX:KOUNTX) .NE. ' ')GOTO 640
  630    CONTINUE
  640    CONTINUE
         CALL XG$TEXT_COUNT(TESTIT,KOUNTX)
         CALL XG$CLOSE_TEMPORARY_SEG
      ENDIF
      CALL XG$SET_IMMEDIATE_VISIBILITY('ON')
      CALL XG$DESELECT_VIEW_SURFACE (VIEWSURF)
      CALL XG$TERMINATE_VIEW_SURFACE(VIEWSURF)
      CALL XG$TERMINATE_CORE
C
C         following routines are for my own sanity, and are
C         CP-6 specific
C
      CALL DVCHKCNT (NCH)
      IF (NCH.GE.NINTERV) THEN
         OUTPUT '*** Lots of divide checks'
         OUTPUT NCH
      ENDIF
      CALL OVFLOCNT (NOV)
      IF (NOV.GE.NINTERV) THEN
         OUTPUT '*** Lots of overflows'
         OUTPUT NOV
      ENDIF
      STOP
 1000     FORMAT (I)
 1010  FORMAT (1X,'Scatterplot set for this line')
 1020 FORMAT (' Title along X-axis (40 char max, [,GRID])')
 1030 FORMAT (A80)
 1040 FORMAT (' Title along Y-axis (40 char max, [,GRID])')
 1050     FORMAT (' ',A1,'-axis grid set on')
 1060 FORMAT (' What is the "name" of line #',I1,'(12 char max,',
     -              '[,NOLINE])' )
 1070 FORMAT (A80)
 1080  FORMAT ('Trend crosses Y=',F.2,' at X=',F.2)
 1090 FORMAT (A80)
 1100 FORMAT (' Negative value at: ',F,' ',A,' not allowed',
     1         ' ** ABORTING **')
 1110  FORMAT(' Duplicate data: ',F,' ',A,' ** ABORTING **')
 1120 FORMAT (' Unmatching interval title in this data set: ',A,
     1        ' ** ABORTING **')
 1130 FORMAT (' How many intervals to plot (up to 200)')
 1140 FORMAT (I)
 1150 FORMAT (' Title of chart (80 CHARS.)')
 1160 FORMAT (A80)
 1170 FORMAT (' Number of lines to be charted(1-4),Regression(Y/N)',
     -         ',Auto or Zero Scaling(A/Z)')
 1180 FORMAT (' Accepting value and interval data for line #',I1,/,
     1        ' type <escape F> to stop inputting')
 1190 FORMAT (F,A)
 1200 FORMAT (1X,'*** too many points for line ',I,'...ABORTING')
 1210 FORMAT (' Notation text for lower-right-hand corner (40 chars.)')
 1220 FORMAT (A40)
      END
