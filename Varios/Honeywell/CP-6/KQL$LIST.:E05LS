VERSION E05

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:1    
        1        1        /*M* KQL$LIST COMGROUP routines for manipulating MBLK lists */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         KQL$LIST
       10       10             PURPOSE:      To provide COMGROUP routines for manipulation of
       11       11                           MBLK lists
       12       12             DESCRIPTION:  Contains routines for insertion into, searching of,
       13       13                           deletion of, and checking of, MBLK lists defined by
       14       14                           an MBLK list head (KQ_MLH).
       15       15        */
       16       16        /**/
       17       17        /*I* NAME:         MBLK lists
       18       18
       19       19            The MLH (MBLK list header) is one of the central structures
       20       20        of comgroups.  With few exceptions, a message resides
       21       21        in an MBLK list headed by an MLH unless it is actually
       22       22        being read.
       23       23            MBLK lists are not simply linear linklists of MBLKs.
       24       24        They have a richness of structure because of the complex
       25       25        ways in which they are accessed.
       26       26            MBLK lists are accessed in the following ways:
       27       27
       28       28                 o insertion of a single message
       29       29                 o deletion of the entire list
       30       30                 o 'reading' for a single message
       31       31                   satisfying a set of criteria
       32       32                 o 'scanning' for all messages
       33       33                   satisfying a set of criteria
       34       34                 o 'garbage collection': that is,
       35       35                   spilling MBLKs to disk
       36       36
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:2    
       37       37            All of these listed operations except the last,
       38       38        are implemented by KQL$LIST:
       39       39
       40       40                 o KQL$INSERT (insertion)
       41       41                 o KQL$DELMLH (deletion)
       42       42                 o KQL$DDFIND (reading)
       43       43                   KQL$DTFIND (  "    )
       44       44                   KQL$QDFIND (  "    )
       45       45                 o KQL$DFFIND (scanning)
       46       46                   KQL$QFFIND (scanning)
       47       47
       48       48            An MBLK list, headed by an MLH, is 'busy' if it
       49       49        is being accessed in such a way as to require the
       50       50        list to be static, that is, unchanging.  This condition
       51       51        is signalled by MLH.BUSY being nonzero, and requires
       52       52        the insert process to add the inserted message not to
       53       53        the list itself, but to a 'delayed operation' list
       54       54        headed by MLH.DELAY$.  Processes which set BUSY must,
       55       55        upon completion of their labours, merge the DELAY$
       56       56        list into the true list.
       57       57            The most important such process is the read case.
       58       58        Here, someone is searching for a single message of
       59       59        a particular kind.  If one is found, it will be
       60       60        removed.  If one is not found, the read request will
       61       61        be set pending.  The message delivery logic will
       62       62        first attempt to satisfy a pending read, and if
       63       63        an appropriate read is not pending, insert the
       64       64        message in the list.  Thus, we have a window
       65       65        during which the reader is searching the list
       66       66        and a writer may write an appropriate message.
       67       67        If the writer is permitted to insert the message,
       68       68        then the reader may miss it and falsly set the
       69       69        read pending.  The solution to this is to
       70       70        'write' the DELAY$ list (of messages written
       71       71        while BUSY was set) using the message delivery
       72       72        logic, when the search is complete.  Hence the
       73       73        setting of BUSY by the various FIND routines,
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:3    
       74       74        and the corresponding call to KQL$XXFDUN when
       75       75        the read has been set pending.
       76       76
       77       77            In fact, this process is a bit more complex.  In
       78       78        order to ensure that writes AND reads are processed in
       79       79        the correct chronological order, the 'delayed operation'
       80       80        list contains both messages to be written into the MLH,
       81       81        and read requests.  The delay list is circular, and
       82       82        DELAY$ points to the tail item.  Thus when anyone
       83       83        finishes with the MLH, he simply processes the list
       84       84        from head to tail, until encountering a read request.
       85       85        When he does, he gives the MLH to that reader and
       86       86        exits.
       87       87            Requests by the garbage collector are entered by
       88       88        him setting GACT.  When someone finishes with the
       89       89        MLH he sees GACT and gives the MLH away to the GC
       90       90        (garbage collector).
       91       91            MLH.RUSR# is the user number of the user currently
       92       92        reading the MLH, or zero if the reader is a terminal
       93       93        station.  This allows any station to read any other
       94       94        station's MLH by simply calling KQL$DDFIND with the
       95       95        appropriate parameters.  The item entered in the
       96       96        delay queue by a requesting reader is his OWN station
       97       97        block.  Thus when he gets the MLH, the guy giving
       98       98        it to him checks to see if he's a DCB or terminal
       99       99        station.  If the former, RUSR# is set to the DCB station's
      100      100        user # and the user is unREGed.  Else RUSR# is set to zero
      101      101        and KQL$DTCONT is called passing the KQ$STA of the
      102      102        station owning the MLH (the reading terminal is expected
      103      103        to have his own way of figuring out who he himself
      104      104        is).
      105      105
      106      106            The access the the anonymous queue MLHs is
      107      107        resolved at the level of the whole queue, which has
      108      108        a delay scheme exactly parallel to that of an individual
      109      109        MLH.
      110      110
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:4    
      111      111            MBLK lists may be garbage-collected by
      112      112        the garbage collector KQS$SCUM.  In brief,
      113      113        this process involves taking many MBLKs out
      114      114        of the list, writing them to disk, and
      115      115        replacing them in the list by a 'super' MBLK,
      116      116        one which points to the DBLK(s) in which
      117      117        they live on disk.  Almost all of the
      118      118        complexity of KQL$LIST derives from this
      119      119        spillage.  Were it not sometimes necessary
      120      120        to go to disk to seach an MBLK list, the
      121      121        entire search/read process could be conducted
      122      122        with the appropriate gate locked, and with
      123      123        all contention for the list being resolved
      124      124        by the gate.  Going to disk involves waiting
      125      125        (REG or delay) for the I/O to complete,
      126      126        during which time the associated gate must
      127      127        be unlocked, and the contention problem must
      128      128        be resolved another way, as explained below.
      129      129
      130      130            This scheme is complicated when a reader
      131      131        finds his desired message on disk within
      132      132        a garbage-collected MBLK list, but can't get
      133      133        memory to move the MBLK into.  If he were simply
      134      134        to post a request for memory and REG, a deadly
      135      135        embrace could result if all available memory
      136      136        were tied up by MBLKs in the queue, since the
      137      137        GC can't get at it (due to BUSY.RIP).  In fact,
      138      138        the memory request will cause the GC to be
      139      139        activated, and the first thing he'll want to
      140      140        do is garbage collect the queue.  Since
      141      141        BUSY.RIP is set, he'd just set GACT and go
      142      142        away - instant cold meat.  This strange
      143      143        case is resolved thusly.  When the reader
      144      144        wants to REG for memory, he
      145      145        sets RQMEM (reader queued for memory), and
      146      146        then gooses the GC if it's waiting.
      147      147        Eventually the
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:5    
      148      148        reader gets unblocked via memory becoming available
      149      149        (or by the comgroup being deemed full), and wakes
      150      150        up.  Note that the GC may still be running at
      151      151        this time, and in particular may still be looking
      152      152        at the queue.  Thus the reader examines QUEUE.GACT,
      153      153        and if it's set, sets QUEUE.RQGC (queued for the
      154      154        GC), and REGs again.  The GC, when he's finished
      155      155        with the queue, sees QUEUE.RQGC, and kicks the reader, who
      156      156        then starts at FDA of the super MBLK which contained
      157      157        his desired message, and reads 'till he finds the
      158      158        message he wants.  This requires the GC to not
      159      159        concatenate that particular super MBLK with others;
      160      160        he avoids this by recognizing certain flags set by
      161      161        the reader in the super MBLK before he went to
      162      162        sleep.
      163      163            One might think that this starting over at
      164      164        FDA business is wrong for M$FWCG, because after
      165      165        all in that case we are interested in all messages
      166      166        of a certain class, not just one, and we will then
      167      167        be scanning messages twice.  However, the M$FWCG
      168      168        (or 'search') process only finds itself in this
      169      169        situation when it needs to move an MBLK on disk
      170      170        into memory.  Now, this only happens if the funciton
      171      171        is DELETE or REATTR.  By definition, then, all
      172      172        qualifying messages in the super MBLK's disk chain
      173      173        before the one which caused the REG have already
      174      174        been removed.
      175      175
      176      176        */
      177      177        /**/
      178      178        KQL$DELMLHR: PROC (PARM,PARM$,PARM2) ALTRET;
      179      179        /**/
      180      180
      181      181
      182      182
      183      183        /**/
      184      184        /* INCLUDES */
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:6    
      185      185        /**/
      186      186        %INCLUDE KQ_SUBS_C;
      187      486        %INCLUDE KQ_MAC_C;
      188     3036        %INCLUDE HF_LOCK_C;
      189     3050        %INCLUDE KQ_DATA_R;
      190     3882        %INCLUDE NK$LDCT;
      191     3984        %INCLUDE NK_VFC_C;
      192     4058        %INCLUDE NK_SUBS;
      193     4083        %INCLUDE JG_GHOSTS_C;
      194     4173        %INCLUDE CP_6_SUBS;
      195     4713        %INCLUDE SS_SCHED_C;
      196     4946        %INCLUDE KC$CP6V_C;
      197     5066        %INCLUDE KC_CP6;
      198     5626        %INCLUDE EL$TABLES;
      199     5949
      200     5950
      201     5951
      202     5952        /**/
      203     5953        /* PARAMETERS */
      204     5954        /**/
      205     5955    1   DCL PARM UBIN;
      206     5956    1   DCL PARM$ PTR;
      207     5957    1   DCL PARM$R REDEF PARM$ SBIN;
      208     5958    1   DCL PARM2 UBIN;
      209     5959    1   DCL PARM2R$ REDEF PARM2 PTR;
      210     5960
      211     5961
      212     5962
      213     5963        /**/
      214     5964        /* BASED STRUCTURES */
      215     5965        /**/
      216     5966    1   DCL B$$PTR PTR BASED ALIGNED;
      217     5967    1   DCL 1 B$$UPARM BASED ALIGNED,
      218     5968    1         2 DISP UBIN(18) UNAL,
      219     5969    1         2 ERR  UBIN(6)  UNAL,
      220     5970    1         2 SID  UBIN(12) UNAL;
      221     5971        %NK$LDCT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:7    
      222     6017        %KQ_CG   (FPTN=KQ$CG  ,STCLASS="BASED(CG$)");
      223     6756        %KQ_STA  (FPTN=KQ$STA ,STCLASS="BASED(STA$)");
      224     7095        %KQ_RBLK (FPTN=KQ$RBLK,STCLASS="BASED(RBLK$)");
      225     7281        %KQ_MBLK (FPTN=KQ$MBLK,STCLASS="BASED(MBLK$)",SUPR=1);
      226     7551        %KQ_MLH  (FPTN=KQ$MLH ,STCLASS="BASED(MLH$)");
      227     7621        %KQ_FWP  (FPTN=KQ$FWP ,STCLASS="BASED(FWP$)");
      228     7722        %KQ_THDR (FPTN=KQ$THDR,STCLASS=BASED);
      229     7760        %KQ_DBLK (FPTN=KQ$DBLK,STCLASS="BASED(DBLK$)");
      230     7813        %KQ_QTN  (FPTN=KQ$QTN ,STCLASS="BASED(QTN$)");
      231     8286        %KQ_DFRPARM (FPTN=KQ$DFRPARM,STCLASS="BASED(DFRP$)");
      232     8315        %KQ_DFRBLK (FPTN=KQ$DFRBLK,STCLASS=BASED);
      233     8365        %KQ_MBLK (FPTN=KQ$NRMLMBLK,STCLASS="BASED(MBLK$)",SUPR=0);
      234     8635        %KQ_RBLK (FPTN=KQ$RBLKT,STCLASS="BASED(RBLK$)",TERM=1);
      235     8821        %KQ$DPTR;
      236     8848    1   DCL B$$KEY1 CHAR(KEY1L) BASED ALIGNED;
      237     8849    1   DCL B$$KEY2 CHAR(KEY2L) BASED ALIGNED;
      238     8850    1   DCL B$$CHARS CHAR(I) BASED UNAL;
      239     8851
      240     8852
      241     8853
      242     8854        /**/
      243     8855        /* AUTO */
      244     8856        /**/
      245     8857    1   DCL TIMCHK BIT(72) DALIGNED;
      246     8858    1   DCL STA$ PTR;
      247     8859    1   DCL RBLK$ PTR;
      248     8860    1   DCL MBLK$ PTR;
      249     8861    1   DCL MBLK$R REDEF MBLK$ SBIN;
      250     8862    1   DCL CG$ PTR;
      251     8863    1   DCL KEY1L UBIN HALF HALIGNED;
      252     8864    1   DCL KEY2L UBIN HALF HALIGNED;
      253     8865    1   DCL P$ PTR;
      254     8866    1   DCL DFRP$ PTR;
      255     8867    1   DCL DBLK$ PTR;
      256     8868    1   DCL DBLK$R REDEF DBLK$ UBIN;
      257     8869    1   DCL I SBIN;
      258     8870    1   DCL DDA UBIN;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:8    
      259     8871    1   DCL RCVR UBIN;
      260     8872    1   DCL MLH$ PTR;
      261     8873    1   DCL Q UBIN;
      262     8874    1   DCL TERM UBIN;
      263     8875    1   DCL FOUNDIT SBIN;
      264     8876    1   DCL ENTFLAG UBIN;
      265     8877    1   DCL J SBIN;
      266     8878    1   DCL MBS UBIN;
      267     8879    1   DCL M$ PTR;
      268     8880    1   DCL X$ PTR;
      269     8881    1   DCL Z$ PTR;
      270     8882    1   DCL QTN$ PTR;
      271     8883    1   DCL FWP$ PTR;
      272     8884    1   DCL FWCG REDEF FWP$ UBIN;
      273     8885    1   DCL TCOUNT SBIN;
      274     8886
      275     8887
      276     8888
      277     8889        /**/
      278     8890        /* REFS */
      279     8891        /**/
      280     8892    1   DCL KQD$DEFERGO   ENTRY(3) ALTRET;
      281     8893    1   DCL KQD$DELDDA    ENTRY(3) ALTRET;
      282     8894    1   DCL KQD$DELETE    ENTRY(2) ALTRET;
      283     8895    1   DCL KQD$ERRLOG    ENTRY(1) ALTRET;
      284     8896    1   DCL KQD$FETCH     ENTRY(3) ALTRET;
      285     8897    1   DCL KQD$UNLOCK    ENTRY(2) ALTRET;
      286     8898    1   DCL KQD$UPDATE    ENTRY(2) ALTRET;
      287     8899    1   DCL KQD$UPDATED   ENTRY(2) ALTRET;
      288     8900    1   DCL KQF$CHKMSG    ENTRY(2) ALTRET;
      289     8901    1   DCL KQF$GOTMSG    ENTRY(2) ALTRET;
      290     8902    1   DCL KQG$GOTMSG    ENTRY(1) ALTRET;
      291     8903    1   DCL KQG$GOTMSGSTA ENTRY(1) ALTRET;
      292     8904    1   DCL KQL$COUNTDLY  ENTRY(2) ALTRET;
      293     8905    1   DCL KQL$MDELAYM   ENTRY(2) ALTRET;
      294     8906    1   DCL KQL$MDELAYR   ENTRY(2) ALTRET;
      295     8907    1   DCL KQM$GETB      ENTRY(3) ALTRET;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:9    
      296     8908    1   DCL KQM$GETBM     ENTRY(3) ALTRET;
      297     8909    1   DCL KQM$GETMBLK   ENTRY(3) ALTRET;
      298     8910    1   DCL KQM$RELMBLK   ENTRY(2) ALTRET;
      299     8911    1   DCL KQS$CQUEUE    ENTRY(1) ALTRET;
      300     8912    1   DCL KQS$CSQUISH   ENTRY(1) ALTRET;
      301     8913    1   DCL KQU$DELMSG    ENTRY(2) ALTRET;
      302     8914    1   DCL KQW$XMITQ     ENTRY(1) ALTRET;
      303     8915    1   DCL KQW$XMITSELF  ENTRY(1) ALTRET;
      304     8916    1   DCL KQX$CHKTIME   ENTRY(1) ALTRET;
      305     8917    1   DCL KQX$SETTIME   ENTRY(1);
      306     8918    1   DCL KQZ$LOG       ENTRY(8) ALTRET;
      307     8919    1   DCL SC_BCGRRC     ENTRY    CONV(2,0);
      308     8920    1   DCL SC_BCGXRL     ENTRY    CONV(2,0);
      309     8921    1   DCL SC_CGSUPR     ENTRY    CONV(2,0);
      310     8922    1   DCL SC_CGSUSN     ENTRY    CONV(2,0);
      311     8923    1   DCL SSR$REG       ENTRY(3) ALTRET;
      312     8924    1   DCL SSR$RUE       ENTRY(4);
      313     8925    1   DCL S_CUN UBIN WORD SYMREF;
      314     8926        %EL$CGERR (NAME=KQ_ERRLOG_BFR,STCLASS=SYMREF,N=50);
      315     8930
      316     8931
      317     8932
      318     8933        /**/
      319     8934        /* SUBS */
      320     8935        /**/
      321     8936        %SUB KQ$QTREE="CG$->KQ$CG.QUEUE.QTREE$->KQ$THDR";
      322     8937        %SUB KQ$QUEUE="CG$->KQ$CG.QUEUE";
      323     8938        %SUB KQ$STREE="CG$->KQ$CG.STREE";
      324     8939        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:10   
      325     8940        /*
      326     8941              DDDD   EEEEE  L      EEEEE  TTTTT  EEEEE
      327     8942              D   D  E      L      E        T    E
      328     8943              D   D  E      L      E        T    E
      329     8944              D   D  EEEE   L      EEEE     T    EEEE
      330     8945              D   D  E      L      E        T    E
      331     8946              D   D  E      L      E        T    E
      332     8947              DDDD   EEEEE  LLLLL  EEEEE    T    EEEEE
      333     8948        */
      334     8949        /**/
      335     8950        /*F* NAME:         KQL$DELMLHR
      336     8951             PURPOSE:      To delete an MLH
      337     8952             CALL:         KQL$DELMLHR (KQ$CG,MLH$)
      338     8953             DESCRIPTION:  See DELMLH
      339     8954
      340     8955        KQL$DELMLHR: ENTRY (PARM,PARM$) ALTRET;    !!Doesn't ALTRET!! */
      341     8956        /**/
      342     8957    1         CG$=ADDR(PARM);
      343     8958    1         RCVR=1;
      344     8959    1         CALL DELMLH (PARM$->KQ$MLH);
      345     8960    1         RETURN;
      346     8961        /**/
      347     8962        /*F* NAME:         KQL$DELMLH
      348     8963             PURPOSE:      To delete an MLH
      349     8964             CALL:         KQL$DELMLH (KQ$CG,MLH$)
      350     8965             DESCRIPTION:  See DELMLH
      351     8966        */
      352     8967    1   KQL$DELMLH: ENTRY (PARM,PARM$) ALTRET; /* !!Doesn't ALTRET!! */
      353     8968        /**/
      354     8969    1         CG$=ADDR(PARM);
      355     8970    1         RCVR=0;
      356     8971    1         CALL DELMLH (PARM$->KQ$MLH);
      357     8972    1         RETURN;
      358     8973        /**/
      359     8974        /*F* NAME:         KQL$CHKMLH
      360     8975             PURPOSE:      To check if an MLH is empty
      361     8976             CALL:         KQL$CHKMLH (KQ$MLH)
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:11   
      362     8977             DESCRIPTION:  ALTRETs if nonempty
      363     8978        */
      364     8979    1   KQL$CHKMLH: ENTRY (PARM) ALTRET;
      365     8980        /**/
      366     8981    1         CALL CHKMLH (PARM) ALTRET(ALTRT);
      367     8982    1         RETURN;
      368     8983        /****************************************************************
      369     8984        *****************************************************************/
      370     8985        /*D* NAME:         DELMLH
      371     8986             PURPOSE:      To delete the messages in an MLH
      372     8987             DESCRIPTION:  Moves it onto the DELMSG$ list and sets the
      373     8988                           MLH to fresh.
      374     8989                           Adjusts KQ$CG.STATS.CCMS(Q) by the count in
      375     8990                           the deleted MLH.
      376     8991
      377     8992                           If the MLH is being played with or RCVR is set,
      378     8993                           then we just set the DELETE bit in the pointer
      379     8994                           on the tail of the DELAY$ list and go
      380     8995                           away.  The deletion will be performed
      381     8996                           at the proper time.
      382     8997
      383     8998                           The gate for the MLH in question is assumed to be
      384     8999                           locked upon entry, and is not touched throughout.
      385     9000        */
      386     9001    1   DELMLH: PROC (KQ$MLH) ALTRET; /* !!Doesn't ALTRET!! */
      387     9002        /**/
      388     9003        %KQ_MLH (FPTN=KQ$MLH,STCLASS="");
      389     9073    2   DCL H$ PTR;
      390     9074    2   DCL T$ PTR;
      391     9075        /**/
      392     9076    2         IF KQ$MLH.BUSY OR RCVR=1 THEN
      393     9077    3           DO;
      394     9078    3           H$=KQ$MLH.DELAY$;
      395     9079    3           ADDR(H$)->KQ$DPTR.X='0'B;
      396     9080    3           IF H$ = ADDR(NIL) THEN
      397     9081    3            ADDR(KQ$MLH.DELAY$)->KQ$DPTR.X.FLGS='1'B;
      398     9082    3           ELSE
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:12   
      399     9083    4             DO CASE (ADDR(KQ$MLH.DELAY$)->KQ$DPTR.X.CODE);
      400     9084    4               CASE (KQRA_MBLK#);
      401     9085    4                 ADDR(H$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS='1'B;
      402     9086    4               CASE (KQRA_RSTA#);
      403     9087    4                 ADDR(H$->KQ$STA.RQLNK$)->KQ$DPTR.X.FLGS='1'B;
      404     9088    4               CASE (ELSE);
      405     9089    4                 CALL SC_BCGRRC;
      406     9090        /*S* SCREECH_CODE: KQL-S$BCGRRC
      407     9091             TYPE:         SCREECH
      408     9092             MESSAGE:      COMGROUP read request list inconsistency
      409     9093             REMARKS:      A read request list has been clobbered and
      410     9094                           the comgroup cannot recover from this.  Note
      411     9095                           that when the comgroup is reopened special
      412     9096                           care must be excercised to prevent this
      413     9097                           screech from simply occuring again.  Note
      414     9098                           also that messages may be lost as a result
      415     9099                           of this error. */
      416     9100    4             END;
      417     9101    3           RETURN;
      418     9102    3           END;
      419     9103        /**/
      420     9104    2   DELCONT: ENTRY (KQ$MLH) ALTRET; /* !!Doesn't ALTRET!! */
      421     9105        /**/
      422     9106    2         CALL CHK;
      423     9107    2         I=KQRA_MBLK#;
      424     9108    2         CALL KQL$COUNTDLY (KQ$MLH.DELAY$,I);
      425     9109    3           DO INHIBIT;
      426     9110                %LOCK (G=CG$->KQ$CG.GATE.MISC);
      427     9113    3           H$=KQ$MLH.HEAD$;
      428     9114    3           T$=KQ$MLH.TAIL$;
      429     9115    3           IF KQ$MLH.QUEUE = 0 THEN
      430     9116    3            CG$->KQ$CG.STATS.CCMS=CG$->KQ$CG.STATS.CCMS-KQ$MLH.COUNT+I;
      431     9117    3           ELSE CG$->KQ$CG.STATS.CCMQ=CG$->KQ$CG.STATS.CCMQ-KQ$MLH.COUNT+I;
      432     9118    3           KQ$MLH.COUNT=I;
      433     9119    3           KQ$MLH.SUPERCNT=0;
      434     9120    3           KQ$MLH.HEAD$=ADDR(NIL);
      435     9121    3           KQ$MLH.TAIL$=ADDR(NIL);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:13   
      436     9122    3           IF H$ ~= ADDR(NIL) THEN
      437     9123    4             DO;
      438     9124    4             T$->KQ$MBLK.LNK$=CG$->KQ$CG.DELMSG$;
      439     9125    4             CG$->KQ$CG.DELMSG$=H$;
      440     9126    4             END;
      441     9127                %UNLOCK (G=CG$->KQ$CG.GATE.MISC);
      442     9130    3           END;
      443     9131    2         RETURN;
      444     9132        /****************************************************************
      445     9133        *****************************************************************/
      446     9134        /*D* NAME:         CHKMLH
      447     9135             PURPOSE:      To see if an MLH is empty
      448     9136             DESCRIPTION:  ALTRETs if it is not
      449     9137        */
      450     9138    2   CHKMLH: ENTRY (KQ$MLH) ALTRET;
      451     9139        /**/
      452     9140    2         CALL CHK ALTRET(ALTRT);
      453     9141    2         RETURN;
      454     9142    2   ALTRT:ALTRETURN;
      455     9143        /**/
      456     9144    2   CHK:  PROC ALTRET;
      457     9145        /**/
      458     9146    3         IF KQ$MLH.DELAY$ ~= ADDR(NIL)
      459     9147    3         OR KQ$MLH.HEAD$ ~= ADDR(NIL) THEN ALTRETURN;
      460     9148    3         RETURN;
      461     9149    3   END CHK;
      462     9150    2   END DELMLH;
      463     9151        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:14   
      464     9152        /*
      465     9153               III   N   N   SSS   EEEEE  RRRR   TTTTT
      466     9154                I    N   N  S   S  E      R   R    T
      467     9155                I    NN  N  S      E      R   R    T
      468     9156                I    N N N   SSS   EEEE   RRRR     T
      469     9157                I    N  NN      S  E      R R      T
      470     9158                I    N   N  S   S  E      R  R     T
      471     9159               III   N   N   SSS   EEEEE  R   R    T
      472     9160        */
      473     9161        /**/
      474     9162        /*F* NAME:         KQL$INSERT
      475     9163             PURPOSE:      To insert an MBLK into an MBLK list
      476     9164             CALL:         KQL$INSERT (KQ$CG,KQ$MLH,MBLK$);
      477     9165             DESCRIPTION:  MBLK$ points to an MBLK which is inserted into
      478     9166                           the given list in prio & UTS order.  When done,
      479     9167                           MBLK$ is set to the MBLK's old LNK$.
      480     9168
      481     9169                           The gate for the MLH in question is assumed to
      482     9170                           be locked upon entry, and is not touched throughout.
      483     9171        */
      484     9172    1   KQL$INSERT: ENTRY (PARM,PARM$,PARM2) ALTRET; /* !!Doesn't ALTRET!! */
      485     9173        /**/
      486     9174    1         CG$=ADDR(PARM);
      487     9175    1         MLH$=ADDR(PARM$);
      488     9176    1         MBLK$=PARM2R$;
      489     9177        /**/
      490     9178    1         MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT+1;
      491     9179    1         IF MLH$->KQ$MLH.QUEUE = 0 THEN
      492     9180    1          CG$->KQ$CG.STATS.CCMS=CG$->KQ$CG.STATS.CCMS+1;
      493     9181    1         ELSE CG$->KQ$CG.STATS.CCMQ=CG$->KQ$CG.STATS.CCMQ+1;
      494     9182        /**/
      495     9183    1         IF MLH$->KQ$MLH.BUSY THEN
      496     9184    2           DO; /* Someone is messing with it */
      497     9185    2           CALL KQL$MDELAYM (MLH$->KQ$MLH,PARM2R$);
      498     9186    2           RETURN;
      499     9187    2           END;
      500     9188        /**/
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:15   
      501     9189    1   INS:  IF MLH$->KQ$MLH.TAIL$ ~= ADDR(NIL) THEN
      502     9190    1          IF NOT MLH$->KQ$MLH.TAIL$->KQ$MBLK.SUPER THEN
      503     9191    1           IF  MBLK$->KQ$MBLK.PRIO < MLH$->KQ$MLH.TAIL$->KQ$MBLK.PRIO
      504     9192    1           OR  (MBLK$->KQ$MBLK.PRIO = MLH$->KQ$MLH.TAIL$->KQ$MBLK.PRIO
      505     9193    1           AND MBLK$->KQ$MBLK.UTS > MLH$->KQ$MLH.TAIL$->KQ$MBLK.UTS) THEN
      506     9194                           /* Insert @ tail */
      507     9195    2             DO INHIBIT;
      508     9196    2             PARM2R$=MBLK$->KQ$MBLK.LNK$;
      509     9197    2             MBLK$->KQ$MBLK.LNK$=ADDR(NIL);
      510     9198    2             MLH$->KQ$MLH.TAIL$->KQ$MBLK.LNK$=MBLK$;
      511     9199    2             MLH$->KQ$MLH.TAIL$=MBLK$;
      512     9200    2             RETURN;
      513     9201    2             END;
      514     9202        /**/
      515     9203    1         P$=ADDR(NIL);
      516     9204    1         X$=MLH$->KQ$MLH.HEAD$;
      517     9205    1         IF MLH$->KQ$MLH.SUPERCNT = 0 THEN
      518     9206                           /* No super MBLKs in list */
      519     9207    2           DO WHILE (X$ ~= ADDR(NIL));
      520     9208    2           IF MBLK$->KQ$MBLK.PRIO > X$->KQ$MBLK.PRIO THEN GOTO INS1;
      521     9209    2           ELSE IF MBLK$->KQ$MBLK.PRIO = X$->KQ$MBLK.PRIO THEN
      522     9210    2             IF MBLK$->KQ$MBLK.UTS < X$->KQ$MBLK.UTS THEN GOTO INS1;
      523     9211    2             ELSE IF MBLK$->KQ$MBLK.UTS = X$->KQ$MBLK.UTS THEN
      524     9212    2               IF MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.STAMP THEN GOTO INS1;
      525     9213    2           P$=X$;
      526     9214    2           X$=X$->KQ$MBLK.LNK$;
      527     9215    2           END;
      528     9216    1         ELSE
      529     9217        /**/
      530     9218        /**/
      531     9219                           /* Super MBLKs in list */
      532     9220    2           DO WHILE (X$ ~= ADDR(NIL));
      533     9221    2           IF MBLK$->KQ$MBLK.PRIO > X$->KQ$MBLK.PRIO THEN GOTO INS1;
      534     9222    2           ELSE IF MBLK$->KQ$MBLK.PRIO = X$->KQ$MBLK.PRIO THEN
      535     9223    3              DO;
      536     9224    3              IF MBLK$->KQ$MBLK.UTS < X$->KQ$MBLK.UTS THEN GOTO INS1;
      537     9225    3              ELSE IF MBLK$->KQ$MBLK.UTS = X$->KQ$MBLK.UTS THEN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:16   
      538     9226    4                 DO;  /* MBLK$ UTS = X$ UTS */
      539     9227    4                 IF NOT X$->KQ$MBLK.SUPER THEN
      540     9228    5                   DO;
      541     9229    5                   IF MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.STAMP THEN GOTO INS1;
      542     9230    5                   END;
      543     9231    4                 ELSE
      544     9232    5                   DO;  /* X$ SUPER */
      545     9233    5                   IF MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.UTSXTLO THEN GOTO INS1;
      546     9234    5                   IF X$->KQ$MBLK.PRIO  ~= X$->KQ$MBLK.PRIOLO
      547     9235    5                   OR X$->KQ$MBLK.UTS   ~= X$->KQ$MBLK.UTSHI
      548     9236    5                   OR MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.UTSXTHI THEN
      549     9237    6                     DO;  /* Insert in this super MBLK */
      550     9238    6   INS0:             P$=ADDR(X$->KQ$MBLK.INSHD$);
      551     9239    6                     Z$=P$->B$$PTR;
      552     9240    7                       DO WHILE (Z$ ~= ADDR(NIL));
      553     9241    7                       IF MBLK$->KQ$MBLK.PRIO > Z$->KQ$MBLK.PRIO THEN GOTO INS01;
      554     9242    7                       ELSE IF MBLK$->KQ$MBLK.PRIO = Z$->KQ$MBLK.PRIO THEN
      555     9243    7                         IF MBLK$->KQ$MBLK.UTS < Z$->KQ$MBLK.UTS THEN GOTO INS01;
      556     9244    7                         ELSE IF MBLK$->KQ$MBLK.UTS = Z$->KQ$MBLK.UTS THEN
      557     9245    7                           IF MBLK$->KQ$MBLK.STAMP < Z$->KQ$MBLK.STAMP THEN GOTO INS01;
      558     9246    7                       P$=ADDR(Z$->KQ$MBLK.LNK$);
      559     9247    7                       Z$=Z$->KQ$MBLK.LNK$;
      560     9248    7                       END;
      561     9249    7                       DO INHIBIT;
      562     9250    7   INS01:              PARM2R$=MBLK$->KQ$MBLK.LNK$;
      563     9251    7                       MBLK$->KQ$MBLK.LNK$=Z$;
      564     9252    7                       P$->B$$PTR=MBLK$;
      565     9253    7                       IF X$->KQ$MBLK.KEY1ALL THEN
      566     9254    7                        IF MBLK$->KQ$MBLK.KEY1 ~= X$->KQ$MBLK.KEY1 THEN
      567     9255    7                         X$->KQ$MBLK.KEY1ALL='0'B;
      568     9256    7                       IF X$->KQ$MBLK.KEY2ALL THEN
      569     9257    7                        IF MBLK$->KQ$MBLK.KEY2 ~= X$->KQ$MBLK.KEY2 THEN
      570     9258    7                         X$->KQ$MBLK.KEY2ALL='0'B;
      571     9259    7                       END;
      572     9260    6                     RETURN;
      573     9261    6                     END; /* Insert in this super MBLK */
      574     9262    5                   END; /* X$ SUPER */
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:17   
      575     9263    4                 END; /* MBLK$ UTS = X$ UTS */
      576     9264
      577     9265
      578     9266    3               ELSE
      579     9267    4                 DO;  /* MBLK$ UTS > X$ UTS */
      580     9268    4                 IF X$->KQ$MBLK.SUPER THEN
      581     9269    4                  IF X$->KQ$MBLK.PRIO ~= X$->KQ$MBLK.PRIOLO
      582     9270    4                  OR MBLK$->KQ$MBLK.UTS < X$->KQ$MBLK.UTSHI THEN GOTO INS0;
      583     9271    4                  ELSE IF MBLK$->KQ$MBLK.UTS = X$->KQ$MBLK.UTSHI THEN
      584     9272    4                    IF MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.UTSXTHI THEN GOTO INS0;
      585     9273    4                 END; /* MBLK$ UTS > X$ UTS */
      586     9274    3              END; /* MBLK$ PRIO = X$ PRIO */
      587     9275
      588     9276
      589     9277
      590     9278
      591     9279    2            ELSE
      592     9280    3              DO;  /* MBLK$ PRIO < X$ PRIO */
      593     9281    3              IF X$->KQ$MBLK.SUPER THEN
      594     9282    3               IF MBLK$->KQ$MBLK.PRIO > X$->KQ$MBLK.PRIOLO THEN GOTO INS0;
      595     9283    3               ELSE IF MBLK$->KQ$MBLK.PRIO = X$->KQ$MBLK.PRIOLO THEN
      596     9284    3                 IF MBLK$->KQ$MBLK.UTS < X$->KQ$MBLK.UTSHI THEN GOTO INS0;
      597     9285    3                 ELSE IF MBLK$->KQ$MBLK.UTS = X$->KQ$MBLK.UTSHI THEN
      598     9286    3                   IF MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.UTSXTHI THEN GOTO INS0;
      599     9287    3              END; /* MBLK$ PRIO < X$ PRIO */
      600     9288    2           P$=X$;
      601     9289    2           X$=X$->KQ$MBLK.LNK$;
      602     9290    2           END;
      603     9291        /**/
      604     9292        /**/
      605     9293    1   INS1: ;
      606     9294    2           DO INHIBIT;
      607     9295    2           PARM2R$=MBLK$->KQ$MBLK.LNK$;
      608     9296    2           MBLK$->KQ$MBLK.LNK$=X$;
      609     9297    2           IF X$ = ADDR(NIL) THEN MLH$->KQ$MLH.TAIL$=MBLK$;
      610     9298    2           IF P$ = ADDR(NIL) THEN MLH$->KQ$MLH.HEAD$=MBLK$;
      611     9299    2           ELSE P$->KQ$MBLK.LNK$=MBLK$;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:18   
      612     9300    2   RTN:    RETURN;
      613     9301    2           END; /* Inhibit */
      614     9302        /**/
      615     9303        /*F* NAME:         KQL$INSERTF
      616     9304             PURPOSE:      To force insertion into an MLH
      617     9305             CALL:         KQL$INSERTF (KQ$CG,KQ$MLH,MBLK$)
      618     9306             DESCRIPTION:  Does not increment COUNT, and skips the BUSY
      619     9307                           check. */
      620     9308    1   KQL$INSERTF: ENTRY (PARM,PARM$,PARM2) ALTRET; /* !!Doesn't ALTRET!! */
      621     9309        /**/
      622     9310    1         CG$=ADDR(PARM);
      623     9311    1         MLH$=ADDR(PARM$);
      624     9312    1         MBLK$=PARM2R$;
      625     9313    1         GOTO INS;
      626     9314        /**/
      627     9315        /*F* NAME:         KQL$MERGEMLH
      628     9316             PURPOSE:      To merge one MLH into another
      629     9317             CALL:         KQL$MERGEMLH (KQ$MLH,MLH$)
      630     9318             DESCRIPTION:  The second MLH is moved onto the front of
      631     9319                           first (without looking @ prios), and then
      632     9320                           reset to fresh.
      633     9321                           The appropriate gates are assumed locked.
      634     9322        */
      635     9323    1   KQL$MERGEMLH: ENTRY (PARM,PARM$) ALTRET; /* !!Doesn't ALTRET!! */
      636     9324        /**/
      637     9325    1         MLH$=ADDR(PARM);
      638     9326    1         P$=PARM$;
      639     9327    1         IF P$->KQ$MLH.BUSY THEN
      640     9328    1          CALL SC_BCGXRL;
      641     9329    1         IF P$->KQ$MLH.HEAD$ = ADDR(NIL) THEN RETURN ;
      642     9330        /**/
      643     9331    2           DO INHIBIT;
      644     9332    2           MBLK$=MLH$->KQ$MLH.HEAD$;
      645     9333    2           MLH$->KQ$MLH.HEAD$=P$->KQ$MLH.HEAD$;
      646     9334    2           P$->KQ$MLH.TAIL$->KQ$MBLK.LNK$=MBLK$;
      647     9335    2           MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT+P$->KQ$MLH.COUNT;
      648     9336    2           MLH$->KQ$MLH.SUPERCNT=MLH$->KQ$MLH.SUPERCNT+P$->KQ$MLH.SUPERCNT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:19   
      649     9337    2           P$->KQ$MLH=KQ_IMLH;
      650     9338    2           END;
      651     9339    1         RETURN;
      652     9340        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:20   
      653     9341        /*
      654     9342                 FFFFF   III   N   N  DDDD
      655     9343                 F        I    N   N  D   D
      656     9344                 F        I    NN  N  D   D
      657     9345                 FFFF     I    N N N  D   D
      658     9346                 F        I    N  NN  D   D
      659     9347                 F        I    N   N  D   D
      660     9348                 F       III   N   N  DDDD
      661     9349        */
      662     9350        /**/
      663     9351        /*F* NAME:         KQL$DTFIND
      664     9352             PURPOSE:      To find a directed message for a terminal
      665     9353             CALL:         KQL$DTFIND (KQ$STA,MBLK$)
      666     9354             INPUT:        Station gate locked, station RBLK$ points to an
      667     9355                           RBLK with state KQRS_RSIP, and keys desribing
      668     9356                           the message desired.
      669     9357             OUTPUT:       - Message found: ALTRET with MBLK$ = msg
      670     9358                                            station gate unlocked
      671     9359                           - No msg       : RETURN with MBLK$ = 0
      672     9360                                            station gate still locked
      673     9361                                            KQ$RBLK.ERR = KQGE_EOF# if
      674     9362                                                              RBLK.EOFNONE set
      675     9363                                                        = 0 else
      676     9364                           - I/O reqd     : RETURN with MBLK$ < 0
      677     9365                                            station gate unlocked
      678     9366             DESCRIPTION:  The station's directed message list is searched
      679     9367                           for an appropriate message.
      680     9368
      681     9369                           If one is found immediately, then we ALTRET with
      682     9370                            - the station gate unlocked
      683     9371                            - RBLK.STATE = KQRS_XFIP
      684     9372                            - RBLK.NCDDA set to MBLK.DDA
      685     9373                            - RBLK.MBLK$ pointing to the MBLK
      686     9374                            - MBLK$ pointing to the MBLK
      687     9375                            - MBLK.LNK$ = ADDR(NIL)
      688     9376                            - CG.STATS.CCMS decremented
      689     9377
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:21   
      690     9378                           Otherwise, if it can be determined immediately that
      691     9379                           no such message is present, we RETURN with the
      692     9380                           station gate still locked and MBLK$ = 0.
      693     9381
      694     9382                           Lastly, if it cannot be determined immediately
      695     9383                           whether or not there is such a message, then we
      696     9384                           return with the station gate unlocked, and MBLK$ < 0.
      697     9385                           The station LOCKCNT has been incremented, and
      698     9386                           when the search finishes,
      699     9387                           the following is done:
      700     9388
      701     9389                            o   if a message was found then KQG$GOTMSG is
      702     9390                                called with the RBLK set up as for the immediate
      703     9391                                success return
      704     9392                            o   if no message could be found due to a full
      705     9393                                comgroup, KQG$GOTMSG is called with RBLK.MBLK$
      706     9394                                = ADDR(NIL) and RBLK.ERR = KQGE_QFUL#
      707     9395                            o   if no message was found and RBLK.EOFNONE is
      708     9396                                set then KQG$GOTMSG is called with RBLK.MBLK$
      709     9397                                = ADDR(NIL) and RBLK.ERR = KQGE_EOF#
      710     9398                            o   if the terminal station is trying to disconnect
      711     9399                                then KQG$GOTMSG is called with RBLK.MBLK$
      712     9400                                = ADDR(NIL) and RBLK.ERR = KQGE_DISC#
      713     9401                            o   otherwise the RBLK.STATE is set KQRS_PEND#
      714     9402                                and left that way
      715     9403
      716     9404                           To prevent re-entrancy, a soft gate is set in the
      717     9405                           station's MLH which prevents
      718     9406                           directed writes to the station while the search
      719     9407                           is ongoing.  This gate must be reset and some work
      720     9408                           done when the search is finished.  In the case of
      721     9409                           an immediate find (ALTRET) this is unnecessary
      722     9410                           since the MLH has remained locked.
      723     9411                           In the case of a delayed find (RETURN, MBLK$ < 0)
      724     9412                           KQL$LIST will do this work.  In the last case,
      725     9413                           that of immediate failure, no work need be done
      726     9414                           either.
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:22   
      727     9415        */
      728     9416    1   KQL$DTFIND: ENTRY (PARM,PARM$) ALTRET;
      729     9417        /**/
      730     9418    1         TERM=1;
      731     9419    1         ENTFLAG=0;
      732     9420    1         GOTO DFINDI;
      733     9421        /**/
      734     9422        /*F* NAME:         KQL$DTCONT
      735     9423             PURPOSE:      To continue KQL$DTFIND
      736     9424             CALL:         KQL$DTCONT (KQ$STA)
      737     9425             INPUT:        Station gate locked
      738     9426             OUTPUT:       Read process continued (or finished), station
      739     9427                           gate unlocked
      740     9428             DESCRIPTION:  Called when someone
      741     9429                           finishes with a terminal station's MLH, and
      742     9430                           finds that the station was trying to read the
      743     9431                           MBLK list but had to delay due to its being
      744     9432                           used by the someone.
      745     9433        */
      746     9434    1   KQL$DTCONT: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */
      747     9435        /**/
      748     9436    1         STA$=ADDR(PARM);
      749     9437    1         MLH$=ADDR(STA$->KQ$STA.MLH);
      750     9438    1         TERM=1;
      751     9439    1         ENTFLAG=1;
      752     9440    1         FWCG=0;
      753     9441    1         RBLK$=STA$->KQ$STA.RBLK$;
      754     9442    1         GOTO DFINDI2;
      755     9443        /**/
      756     9444        /*F* NAME:         KQL$DDFIND
      757     9445             PURPOSE:      To find a directed message for a DCB
      758     9446             CALL:         KQL$DDFIND (KQ$STA,MBLK$)
      759     9447             INPUT:        Same as KQL$DTFIND
      760     9448             OUTPUT:       - Message found: ALTRET with MBLK$ = msg
      761     9449                                            station gate unlocked
      762     9450                           - No msg       : RETURN with MBLK$ = 0
      763     9451                                            station gate locked
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:23   
      764     9452                                            KQ$RBLK.ERR = KQGE_QFUL# if comgroup
      765     9453                                                              full
      766     9454                                                        = 0 else
      767     9455             DESCRIPTION:  Same as KQL$DTFIND, except regs the user while
      768     9456                           the search is ongoing, thus always either ALTRETs
      769     9457                           or RETURNs with MBLK$ = 0
      770     9458
      771     9459                           The soft gate described under KQL$DTFIND remains
      772     9460                           set in the RETURN case.  To reset this, the user
      773     9461                           must call KQL$DDFDUN when he is finished setting up
      774     9462                           this read.  Note that if the read is to be left
      775     9463                           pending, it MUST be marked that way so that directed
      776     9464                           writes delayed by the soft gate can satisfy the
      777     9465                           read.
      778     9466        */
      779     9467    1   KQL$DDFIND: ENTRY (PARM,PARM$) ALTRET;
      780     9468        /**/
      781     9469    1         TERM=0;
      782     9470    1   DFINDI:;
      783     9471    1         STA$=ADDR(PARM);
      784     9472    1         MLH$=ADDR(STA$->KQ$STA.MLH);
      785     9473    1         FWCG=0;
      786     9474    1         RBLK$=STA$->KQ$STA.RBLK$;
      787     9475        /**/
      788     9476    1   DFINDI1:;
      789     9477    1         IF MLH$->KQ$MLH.BUSY THEN
      790     9478    2           DO;
      791     9479    2           IF FWCG=0
      792     9480    2           THEN CALL KQL$MDELAYR (MLH$->KQ$MLH,STA$->KQ$STA);
      793     9481    2           ELSE CALL KQL$MDELAYR (MLH$->KQ$MLH,FWP$->KQ$FWP.MYSTA$->KQ$STA);
      794     9482                %UNLOCK (G=STA$->KQ$STA.GATE);
      795     9485    2           IF TERM ~= 0 THEN
      796     9486    3             DO;
      797     9487    3             PARM$R=-1;
      798     9488    3             RETURN;
      799     9489    3             END;
      800     9490    2           CALL SSR$REG (%SS_QA);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:24   
      801     9491                %LOCK (G=STA$->KQ$STA.GATE);
      802     9494    2           IF NOT MLH$->KQ$MLH.BUSY.RIP
      803     9495    2           OR MLH$->KQ$MLH.RUSR# ~= S_CUN THEN
      804     9496    2            CALL SC_CGSUPR;
      805     9497    2           END;
      806     9498    1         ELSE
      807     9499    2           DO;
      808     9500    2           MLH$->KQ$MLH.BUSY.RIP='1'B;
      809     9501    2           IF TERM ~= 0 THEN MLH$->KQ$MLH.RUSR#=0;
      810     9502    2           ELSE MLH$->KQ$MLH.RUSR# = S_CUN;
      811     9503    2           END;
      812     9504    1   DFINDI2:;
      813     9505    1         Q=0;
      814     9506    1         CG$=STA$->KQ$STA.CG$;
      815     9507    1         RBLK$->KQ$RBLK.ERR=0;
      816     9508    1         KEY1L=RBLK$->KQ$RBLK.KEY1L;
      817     9509    1         KEY2L=RBLK$->KQ$RBLK.KEY2L;
      818     9510    1         P$=ADDR(NIL);
      819     9511    1         MBLK$=MLH$->KQ$MLH.HEAD$;
      820     9512    1         IF FWCG=0
      821     9513    1         THEN CALL KQX$SETTIME(TIMCHK);
      822     9514    1         ELSE TIMCHK=FWP$->KQ$FWP.TIMCHK;
      823     9515    1         IF MLH$->KQ$MLH.SUPERCNT = 0 THEN GOTO DFIND;
      824     9516    1         GOTO SDFIND;
      825     9517        /**/
      826     9518        /*F* NAME:         KQL$DFFIND
      827     9519             PURPOSE:      To search a station MLH for M$FWCG
      828     9520             CALL:         KQL$DFFIND (KQ$FWP)
      829     9521             INPUT:        Target station gate locked.
      830     9522                           Target station LOCKCNT incremented
      831     9523                           KQ$FWP.MYSTA$  - current user's station
      832     9524                           KQ$FWP.RBLK$   - points to an RBLK which has
      833     9525                                            KEY1L, KEY2L, KEY1, KEY2, and
      834     9526                                            MID describing the desired class
      835     9527                                            of messages, and HONK set.
      836     9528                           KQ$FWP.NODE$   - points to the target station
      837     9529                           KQ$FWP.TELLME  - set if KQF$GOTMSG is to be called
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:25   
      838     9530                                            for each message found
      839     9531                           KQ$FWP.FC      - indicates the function to be
      840     9532                                            performed on each message found
      841     9533                                            after the call (if any) to KQF$GOTMSG:
      842     9534                                            = 0 : nothing
      843     9535                                            < 0 : delete
      844     9536                                            > 0 : reattr (the message is to be
      845     9537                                                  removed from its queue, and
      846     9538                                                  sent to the *FWCG station).
      847     9539                           KQ$FWP.RSTA$   - points to the *FWCG station.
      848     9540             DESCRIPTION:  The target station's MBLK list is searched.  For
      849     9541                           each message found of the selected class, the
      850     9542                           indicated function is performed.  When the list
      851     9543                           has been searched, KQL$DDFDUN is called on the
      852     9544                           target station, and we return to the caller.
      853     9545                           The station's gate will be unlocked, and he must
      854     9546                           call KQP$UNLOCK on it.
      855     9547                           ALTRETs if the comgroup is full.
      856     9548        */
      857     9549    1   KQL$DFFIND: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */
      858     9550        /**/
      859     9551    1         FWP$=ADDR(PARM);
      860     9552    1         STA$=FWP$->KQ$FWP.NODE$;
      861     9553    1         MLH$=ADDR(STA$->KQ$STA.MLH);
      862     9554    1         TERM=0;
      863     9555    1         RBLK$=FWP$->KQ$FWP.RBLK$;
      864     9556    1         GOTO DFINDI1;
      865     9557        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:26   
      866     9558        /**/
      867     9559        /*F* NAME:         KQL$QDFIND
      868     9560             PURPOSE:      To find a message from the QUEUE for a DCB
      869     9561             CALL:         KQL$QDFIND (KQ$STA,MBLK$)
      870     9562             INPUT:        Same as KQL$DDFIND but MBLK$ points to the
      871     9563                           desired Q-tree node, Q gate locked instead of station.
      872     9564                           Also, the caller must be the sole current reader
      873     9565                           of the queue, having set RIP and RUSR#.
      874     9566             OUTPUT:       - Message found: ALTRET with MBLK$=msg
      875     9567                                            Q gate locked
      876     9568                           - No msg       : RETURN with MBLK$ = 0
      877     9569                                            Q gate locked
      878     9570                                            RBLK.ERR as for KQL$DDFIND
      879     9571             DESCRIPTION:  Basically the same as KQL$DDFIND except that the
      880     9572                           desired Q-tree node is searched, and the soft gate
      881     9573                           is for the entire queue, not for the station.  Since
      882     9574                           the Q gate is left locked for the success return,
      883     9575                           the soft gate resetting cannot be done by KQL$LIST
      884     9576                           for the caller.  Thus when the caller has finished
      885     9577                           reading the queue, he must call KQL$QDFDUN.
      886     9578        */
      887     9579    1   KQL$QDFIND: ENTRY (PARM,PARM$) ALTRET;
      888     9580        /**/
      889     9581    1         STA$=ADDR(PARM);
      890     9582    1         QTN$=PARM$;
      891     9583    1         RBLK$=STA$->KQ$STA.RBLK$;
      892     9584    1         FWCG=0;
      893     9585    1   QFINDI:;
      894     9586    1         TERM=0;
      895     9587    1         MLH$=ADDR(QTN$->KQ$QTN.MLH);
      896     9588    1         Q=1;
      897     9589    1         CG$=STA$->KQ$STA.CG$;
      898     9590    1         RBLK$->KQ$RBLK.ERR=0;
      899     9591    1         KEY1L=RBLK$->KQ$RBLK.KEY1L;
      900     9592    1         KEY2L=RBLK$->KQ$RBLK.KEY2L;
      901     9593    1         P$=ADDR(NIL);
      902     9594    1         MBLK$=MLH$->KQ$MLH.HEAD$;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:27   
      903     9595    1         IF FWCG=0
      904     9596    1         THEN CALL KQX$SETTIME(TIMCHK);
      905     9597    1         ELSE TIMCHK=FWP$->KQ$FWP.TIMCHK;
      906     9598    1         IF MLH$->KQ$MLH.SUPERCNT = 0 THEN GOTO QFIND;
      907     9599    1         GOTO SQFIND;
      908     9600        /**/
      909     9601        /*F* NAME:         KQL$QFFIND
      910     9602             PURPOSE:      To search a Q-node MLH for M$FWCG
      911     9603             CALL:         KQL$QFFIND (KQ$FWP)
      912     9604             INPUT:        Q gate locked
      913     9605                           KQ$FWP         - same as for KQL$DFFIND except
      914     9606                                            NODE$ points to the Q-tree node.
      915     9607             DESCRIPTION:  The Q-tree node's MBLK list is searched.  For
      916     9608                           each message found of the selected class, the
      917     9609                           indicated function is performed.  When the list
      918     9610                           has been searched, we return to the caller.
      919     9611                           When he has finished with the entire queue, he
      920     9612                           must call KQL$QXFDUN.  ALTRETs if the comgroup
      921     9613                           is full.
      922     9614        */
      923     9615    1   KQL$QFFIND: ENTRY (PARM) ALTRET;
      924     9616        /**/
      925     9617    1         FWP$=ADDR(PARM);
      926     9618    1         STA$=FWP$->KQ$FWP.MYSTA$;
      927     9619    1         QTN$=FWP$->KQ$FWP.NODE$;
      928     9620    1         RBLK$=FWP$->KQ$FWP.RBLK$;
      929     9621    1         GOTO QFINDI;
      930     9622        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:28   
      931     9623        /**/
      932     9624        /*D* NAME:         QFIND
      933     9625             PURPOSE:      To find a msg in a Q-node having no super MBLKs
      934     9626        */
      935     9627        /**/
      936     9628    1   QFIND:;
      937     9629    2           DO WHILE (MBLK$ ~= ADDR(NIL));
      938     9630    2           IF ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 = ADDR(MBLK$->KQ$MBLK.KEY2)->B$$KEY2
              9630                    THEN
      939     9631    2            IF RBLK$->KQ$RBLK.MID.PRIMARY = 0
      940     9632    2            OR (RBLK$->KQ$RBLK.MID.PRIMARY = MBLK$->KQ$NRMLMBLK.MID.PRIMARY) THEN
      941     9633    2             IF FWCG = 0 THEN
      942     9634    3               DO;
      943     9635    3               CALL CHECKVFC ALTRET(QFIND0);
      944     9636    3               GOTO SFOUND;
      945     9637    3               END;
      946     9638    2             ELSE CALL FWCGL ALTRET(QFIND0);
      947     9639    2           P$=MBLK$;
      948     9640    2           MBLK$=MBLK$->KQ$MBLK.LNK$;
      949     9641    2   QFIND0: END;
      950     9642    1         GOTO NOTFOUND;
      951     9643        /**/
      952     9644        /*D* NAME:         DFIND
      953     9645             PURPOSE:      To find a directed message in an MLH having no
      954     9646                           super MBLKs
      955     9647        */
      956     9648        /**/
      957     9649    1   DFIND:;
      958     9650    1         IF MBLK$ ~= ADDR(NIL) THEN
      959     9651    1          IF MBLK$->KQ$MBLK.PRIO >= %KQ_AUEP# THEN
      960     9652    1           IF NOT RBLK$->KQ$RBLK.HONK THEN
      961     9653    2             DO;
      962     9654    2             CALL CHECKVFC ALTRET(QFIND0);
      963     9655    2             GOTO SFOUND;
      964     9656    2             END;
      965     9657    2           DO WHILE (MBLK$ ~= ADDR(NIL));
      966     9658    2           IF  ADDR(RBLK$->KQ$RBLK.KEY1)->B$$KEY1 = ADDR(MBLK$->KQ$MBLK.KEY1)->B$$KEY1
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:29   
      967     9659    2           AND ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 = ADDR(MBLK$->KQ$MBLK.KEY2)->B$$KEY2
              9659                    THEN
      968     9660    2            IF  MBLK$->KQ$NRMLMBLK.MID.PRIMARY < STA$->KQ$STA.DSID
      969     9661    2            AND MBLK$->KQ$MBLK.PRIO < %KQ_AUEP#
      970     9662    2            AND MBLK$->KQ$NRMLMBLK.STAR THEN
      971     9663    3              DO;
      972     9664    3              CALL DELMSG  ALTRET(DFIND1); /* Always Altrets */
      973     9665    3              END;  /* never come here */
      974     9666    2            ELSE
      975     9667    2             IF RBLK$->KQ$RBLK.MID.PRIMARY = 0
      976     9668    2             OR (RBLK$->KQ$RBLK.MID.PRIMARY = MBLK$->KQ$NRMLMBLK.MID.PRIMARY) THEN
      977     9669    3              IF FWCG = 0 THEN DO;
      978     9670    3                CALL CHECKVFC ALTRET (DFIND1);
      979     9671    3                GOTO SFOUND;
      980     9672    3                END;
      981     9673    2              ELSE IF (FWP$->KQ$FWP.FC >= 0) OR
      982     9674    2               (NOT FWP$->KQ$FWP.EXMPTSTAR) OR
      983     9675    2               (NOT MBLK$->KQ$NRMLMBLK.STAR) THEN
      984     9676    2                CALL FWCGL ALTRET(DFIND1);
      985     9677    2           P$=MBLK$;
      986     9678    2           MBLK$=MBLK$->KQ$MBLK.LNK$;
      987     9679    2   DFIND1: END;
      988     9680    1         GOTO NOTFOUND;
      989     9681        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:30   
      990     9682        /**/
      991     9683        /*D* NAME:         SQFIND
      992     9684             PURPOSE:      To find a msg in a Q node having some super MBLKs
      993     9685        */
      994     9686        /**/
      995     9687    1   SQFIND:;
      996     9688    2           DO WHILE (MBLK$ ~= ADDR(NIL));
      997     9689    2           IF ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 ~= ADDR(MBLK$->KQ$MBLK.KEY2)->B$$KEY2
              9689                    THEN
      998     9690    2            IF  MBLK$->KQ$MBLK.SUPER
      999     9691    2            AND MBLK$->KQ$MBLK.KEY2ALL = '0'B THEN GOTO SDFIND0;
     1000     9692    2            ELSE;
     1001     9693    2           ELSE /* KEYs equal */ IF MBLK$->KQ$MBLK.SUPER THEN GOTO SDFIND0;
     1002     9694    2            ELSE IF RBLK$->KQ$RBLK.MID.PRIMARY = 0
     1003     9695    2             OR (RBLK$->KQ$RBLK.MID.PRIMARY = MBLK$->KQ$NRMLMBLK.MID.PRIMARY) THEN
     1004     9696    3              IF FWCG = 0 THEN DO;
     1005     9697    3                CALL CHECKVFC ALTRET (SQFIND0);
     1006     9698    3                GOTO SFOUND;
     1007     9699    3                END;
     1008     9700    2              ELSE CALL FWCGL ALTRET(SQFIND0);
     1009     9701    2           P$=MBLK$;
     1010     9702    2           MBLK$=MBLK$->KQ$MBLK.LNK$;
     1011     9703    2   SQFIND0:END;
     1012     9704    1         GOTO NOTFOUND;
     1013     9705        /**/
     1014     9706        /*D* NAME:         SDFIND
     1015     9707             PURPOSE:      To find a directed message in an MLH having some
     1016     9708                           super MBLKs
     1017     9709        */
     1018     9710        /**/
     1019     9711    1   SDFIND:;
     1020     9712    1         IF MBLK$ ~= ADDR(NIL) THEN
     1021     9713    1          IF MBLK$->KQ$MBLK.PRIO >= %KQ_AUEP# THEN
     1022     9714    1           IF NOT RBLK$->KQ$RBLK.HONK THEN
     1023     9715    1            IF MBLK$->KQ$MBLK.SUPER THEN GOTO SDFIND0;
     1024     9716    2            ELSE DO;
     1025     9717    2              CALL CHECKVFC ALTRET (SDFIND);  /* START AT THE TOP */
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:31   
     1026     9718    2              GOTO SFOUND;
     1027     9719    2              END;
     1028     9720    2           DO WHILE (MBLK$ ~= ADDR(NIL));
     1029     9721    2           IF ADDR(RBLK$->KQ$RBLK.KEY1)->B$$KEY1 ~= ADDR(MBLK$->KQ$MBLK.KEY1)->B$$KEY1
              9721                    THEN
     1030     9722    2            IF  MBLK$->KQ$MBLK.SUPER
     1031     9723    2            AND MBLK$->KQ$MBLK.KEY1ALL = '0'B THEN
     1032     9724    3              DO INHIBIT;
     1033     9725    3   SDFIND0:   MBS=MBLK$->KQ$MBLK.STATE;
     1034     9726    3              IF MBS ~= KQSS_IDLE# THEN CALL SC_CGSUPR;
     1035     9727    3   SDFIND01:  CALL SRCHSUPER ALTRET(SDFIND2);
     1036     9728    4              IF FOUNDIT > 0 THEN DO;
     1037     9729    4                CALL CHECKVFC1 ALTRET (SDFIND1);  /* START AT THE TOP */
     1038     9730    4                GOTO SFOUND0;
     1039     9731    4                END;
     1040     9732    3              ELSE IF FOUNDIT < 0 THEN GOTO NOTFOUND;
     1041     9733    3              END;
     1042     9734    2            ELSE; /* Skip it */
     1043     9735    2           ELSE /* KEY1s equal */
     1044     9736    2            IF ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 ~= ADDR(MBLK$->KQ$MBLK.KEY2)->B$$KEY2
              9736                     THEN
     1045     9737    2             IF  MBLK$->KQ$MBLK.SUPER
     1046     9738    2             AND MBLK$->KQ$MBLK.KEY2ALL = '0'B THEN GOTO SDFIND0;
     1047     9739    2             ELSE; /* Skip it */
     1048     9740    2            ELSE /* KEYs equal */ IF MBLK$->KQ$MBLK.SUPER THEN GOTO SDFIND0;
     1049     9741    2             ELSE
     1050     9742    2              IF  MBLK$->KQ$NRMLMBLK.MID.PRIMARY < STA$->KQ$STA.DSID
     1051     9743    2              AND MBLK$->KQ$MBLK.PRIO < %KQ_AUEP#
     1052     9744    2              AND MBLK$->KQ$NRMLMBLK.STAR THEN
     1053     9745    3                DO;
     1054     9746    3                CALL DELMSG ALTRET(SDFIND1) ; /* Always ALTRETs */
     1055     9747    3                END;  /* Never come here */
     1056     9748    2              ELSE
     1057     9749    2               IF RBLK$->KQ$RBLK.MID.PRIMARY = 0
     1058     9750    2               OR (RBLK$->KQ$RBLK.MID.PRIMARY = MBLK$->KQ$NRMLMBLK.MID.PRIMARY) THEN
     1059     9751    3                IF FWCG = 0 THEN DO;
     1060     9752    3                  CALL CHECKVFC ALTRET (SDFIND1);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:32   
     1061     9753    3                  GOTO SFOUND;
     1062     9754    3                  END;
     1063     9755    2                ELSE IF (FWP$->KQ$FWP.FC >= 0) OR
     1064     9756    2                 (NOT FWP$->KQ$FWP.EXMPTSTAR) OR
     1065     9757    2                 (NOT MBLK$->KQ$NRMLMBLK.STAR) THEN
     1066     9758    2                  CALL FWCGL ALTRET(SDFIND1);
     1067     9759    2           P$=MBLK$;
     1068     9760    2           MBLK$=MBLK$->KQ$MBLK.LNK$;
     1069     9761    2   SDFIND1:END;
     1070     9762        /**/
     1071     9763                     /**********************************************
     1072     9764                      *                                            *
     1073     9765                      *              Nothing found                 *
     1074     9766                      *                                            *
     1075     9767                      **********************************************/
     1076     9768    1   NOTFOUND:;
     1077     9769    1         IF TERM ~= 0 THEN
     1078     9770    2           DO;
     1079     9771                          /******************************
     1080     9772                           *                            *
     1081     9773                           *         Terminal           *
     1082     9774                           *                            *
     1083     9775                           ******************************/
     1084     9776    2           IF ENTFLAG ~= 0 THEN
     1085     9777    3             DO;
     1086     9778    3             IF RBLK$->KQ$RBLK.ERR ~= 0 THEN GOTO SFOUND1;
     1087     9779    3             IF RBLK$->KQ$RBLK.EOFNONE THEN
     1088     9780    4               DO;
     1089     9781    4               RBLK$->KQ$RBLK.ERR=KQGE_EOF#;
     1090     9782    4               GOTO SFOUND1;
     1091     9783    4               END;
     1092     9784    3             RBLK$->KQ$RBLK.STATE=KQRS_PEND#;
     1093     9785    3             CALL DXFDUN;
     1094     9786    3             RETURN;
     1095     9787    3             END;
     1096     9788    2           IF RBLK$->KQ$RBLK.EOFNONE THEN RBLK$->KQ$RBLK.ERR=KQGE_EOF#;
     1097     9789    2           MLH$->KQ$MLH.BUSY.RIP='0'B;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:33   
     1098     9790    2           END;
     1099     9791    1         ELSE
     1100     9792    2           DO;
     1101     9793                          /******************************
     1102     9794                           *                            *
     1103     9795                           *            DCB             *
     1104     9796                           *                            *
     1105     9797                           ******************************/
     1106     9798    2           IF FWCG ~= 0 THEN
     1107     9799    3             DO;
     1108     9800                     /*    FWCG never 'finds' a message,
     1109     9801                      *    so we always come here after
     1110     9802                      *    we've examined the entire list
     1111     9803                      */
     1112     9804    3             IF Q = 0 THEN CALL DXFDUN;
     1113     9805    3             IF RBLK$->KQ$RBLK.ERR ~= 0 THEN ALTRETURN;
     1114     9806    3             RETURN;
     1115     9807    3             END;
     1116     9808    2           END;
     1117     9809    1         PARM$R=0;
     1118     9810    1         RETURN;
     1119     9811    1   SDFIND2:;
     1120     9812    1         IF ENTFLAG = 0 THEN
     1121     9813    1          PARM$R=-1;
     1122     9814    1         RETURN;
     1123     9815        /**/
     1124     9816                     /**********************************************
     1125     9817                      *                                            *
     1126     9818                      *              Message found                 *
     1127     9819                      *                                            *
     1128     9820                      **********************************************/
     1129     9821    2           DO INHIBIT;
     1130     9822    2   SFOUND: CALL REMOVE;
     1131     9823    2   SFOUND0:RBLK$->KQ$RBLK.STATE=KQRS_XFIP#;
     1132     9824    2           MBLK$->KQ$MBLK.LNK$=ADDR(NIL);
     1133     9825    2           IF RBLK$->KQ$RBLK.MBLK$~=ADDR(NIL) THEN
     1134     9826    2            RBLK$->KQ$RBLK.MBLK$->KQ$NRMLMBLK.RBLK = '0'B;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:34   
     1135     9827    2           RBLK$->KQ$RBLK.MBLK$=MBLK$;
     1136     9828    2           MBLK$->KQ$NRMLMBLK.RBLK = '1'B;
     1137     9829    2           RBLK$->KQ$RBLK.NCDDA=MBLK$->KQ$MBLK.DDA;
     1138     9830    2           IF TERM = 0 THEN
     1139     9831    3             DO;
     1140     9832                          /******************************
     1141     9833                           *                            *
     1142     9834                           *            DCB             *
     1143     9835                           *                            *
     1144     9836                           ******************************/
     1145     9837    3             IF Q = 0 THEN
     1146     9838    3              CALL DXFDUN;
     1147     9839    3             PARM$=MBLK$;
     1148     9840    3   ALTRT:    ALTRETURN;
     1149     9841    3             END;
     1150     9842                          /******************************
     1151     9843                           *                            *
     1152     9844                           *         Terminal           *
     1153     9845                           *                            *
     1154     9846                           ******************************/
     1155     9847    2           IF ENTFLAG = 0 THEN
     1156     9848    3             DO;
     1157     9849    3             PARM$=MBLK$;
     1158     9850    3             MLH$->KQ$MLH.BUSY.RIP='0'B;
     1159     9851                  %UNLOCK (G=STA$->KQ$STA.GATE);
     1160     9854    3             ALTRETURN;
     1161     9855    3             END;
     1162     9856    2   SFOUND1:STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;
     1163     9857    2           CALL DXFDUN;
     1164     9858    2           IF STA$->KQ$STA.LDCT$ ~= ADDR(NIL) THEN
     1165     9859    2            CALL KQG$GOTMSG (STA$->KQ$STA.LDCT$->NK$LDCT);
     1166     9860    2           ELSE  /* terminal not currently there - RCVR */
     1167     9861    2            CALL KQG$GOTMSGSTA (STA$->KQ$STA);
     1168     9862    2           RETURN;
     1169     9863    2           END;
     1170     9864        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:35   
     1171     9865        /**/
     1172     9866        /*D* NAME:         SRCHSUPER
     1173     9867             PURPOSE:      To pull a super MBLK into memory & search it.
     1174     9868                           ENTFLAG is used only for TERM requests, and
     1175     9869                                   indicates whether (1) or not (0) we
     1176     9870                                   have ever exited from KQL, delaying
     1177     9871                                   processin of the request.
     1178     9872                           MBS     is the state of the MBLK when we
     1179     9873                                   were entered.
     1180     9874                           TERM    0/1 for DCB/TERMINAL
     1181     9875                           STA$    points to the station
     1182     9876                           MLH$    points to the MLH
     1183     9877                           Q       0/1 for STA/Q search
     1184     9878                           MBLK$   points to super MBLK to search
     1185     9879                           P$      its predescessor pointer (see REMOVE)
     1186     9880                           FWCG    indicates whether or not this is FWCG;
     1187     9881                                   if ~= 0 (yes) then we always return
     1188     9882                                   with FOUNDIT = 0 after performing the
     1189     9883                                   indicated function on all messages
     1190     9884                                   found.
     1191     9885             OUTPUT:       ALTRET  if a TERM request had to be delayed in
     1192     9886                                   order to do I/O, with station unlocked
     1193     9887                                   and LOCKCNT incremented.
     1194     9888
     1195     9889
     1196     9890                           RETURN  otherwise, i.e. search has been completed,
     1197     9891                                   with:
     1198     9892                           FOUNDIT = 0 ---> look @ nxt MBLK in MLH, this one
     1199     9893                                            has nothing interesting
     1200     9894                                   > 0 ---> got one removed; goto SFOUND0
     1201     9895                                            appropriate gate is still locked.
     1202     9896                                   < 0 ---> quit - comgroup full
     1203     9897
     1204     9898        */
     1205     9899    1   SRCHSUPER: PROC ALTRET;
     1206     9900        /**/
     1207     9901    2   DCL ATFDA BIT(36) ALIGNED;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:36   
     1208     9902    2   DCL L$ PTR;
     1209     9903    2   DCL NMBLKS SBIN;
     1210     9904    2   DCL SAVP$ PTR;
     1211     9905    2   DCL IP$ REDEF SAVP$ PTR;
     1212     9906    2   DCL CTLBLK$ PTR;
     1213     9907        /**/
     1214     9908    3   S0:     DO INHIBIT;
     1215     9909    3           FOUNDIT=0;
     1216     9910    4             DO CASE (MBS);
     1217     9911
     1218     9912    4               CASE (KQSS_IDLE#);
     1219     9913    4                 IF MBLK$->KQ$MBLK.STATE ~= KQSS_IDLE# THEN CALL SC_CGSUPR;
     1220     9914    4   S00:          TCOUNT=0;
     1221     9915    4                 MBLK$->KQ$MBLK.PCDDA=0;
     1222     9916    4                 MBLK$->KQ$MBLK.CCSTAMP=MBLK$->KQ$MBLK.STAMP;
     1223     9917    4                 IF MBLK$->KQ$MBLK.KEY1VALID = '0'B THEN
     1224     9918    4                  MBLK$->KQ$MBLK.SDA.CCDDA=MBLK$->KQ$MBLK.DDA;
     1225     9919    4   S01:          DBLK$=ADDR(NIL);
     1226     9920    4                 CALL SFETCH ALTRET(ALTRT);
     1227     9921
     1228     9922    4               CASE (KQSS_NDFR#);
     1229     9923    4                 GOTO S01;
     1230     9924
     1231     9925    4               CASE (KQSS_NMEM#);
     1232     9926    4                 IF MBLK$->KQ$MBLK.MREQ >= 0 THEN CALL SC_CGSUPR;
     1233     9927    4                 IF Q = 0 THEN
     1234     9928    4                  MLH$->KQ$MLH.RQMEM='0'B;
     1235     9929    4                 ELSE
     1236     9930    4                  KQ$QUEUE.RQMEM='0'B;
     1237     9931    4                 IF MBLK$->KQ$MBLK.XSP.MREQ$ ~= ADDR(NIL) THEN
     1238     9932    5                   DO;
     1239     9933    5                   IF Q = 0 THEN
     1240     9934    6                     DO;
     1241     9935    6                     IF MLH$->KQ$MLH.GACT THEN CALL REG (KQSS_Q4GC#) ALTRET(ALTRT);
     1242     9936    6                     END;
     1243     9937    5                   ELSE IF KQ$QUEUE.GACT THEN CALL REG (KQSS_Q4GC#) ALTRET(ALTRT);
     1244     9938    5                   GOTO S00;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:37   
     1245     9939    5                   END;
     1246     9940    4                 RBLK$->KQ$RBLK.ERR=KQGE_QFUL#;
     1247     9941    4                 FOUNDIT=-1;
     1248     9942    4                 RETURN;
     1249     9943
     1250     9944    4               CASE (KQSS_Q4GC#);
     1251     9945    4                 GOTO S00;
     1252     9946
     1253     9947    4               CASE (KQSS_IOIP#);
     1254     9948
     1255     9949    4               CASE (ELSE);
     1256     9950    4                 CALL SC_CGSUPR;
     1257     9951
     1258     9952    4             END;
     1259     9953        /**/
     1260     9954        /**/
     1261     9955    3   S1:     ;
     1262     9956                     /*    Search the
     1263     9957                      *    DBLK looking for
     1264     9958                      *    a good message.
     1265     9959                      *    If we find one,
     1266     9960                      *    then go look at
     1267     9961                      *    the INSHD$ list.
     1268     9962                      *    Else try to FLINK
     1269     9963                      *    to the next DBLK.
     1270     9964                      */
     1271     9965    3           SAVP$=ADDR(NIL);
     1272     9966    3           IF DBLK$ = ADDR(NIL) THEN
     1273     9967    4             DO;
     1274     9968                     /*    Error fetching
     1275     9969                      *    the DBLK.
     1276     9970                      *    Truncate the
     1277     9971                      *    disc list at
     1278     9972                      *    the end of the
     1279     9973                      *    BLINK DBLK, by
     1280     9974                      *    copying TCOUNT
     1281     9975                      *    over COUNT.
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:38   
     1282     9976                      */
     1283     9977    4             IF MBLK$->KQ$MBLK.DDA ~= 0 THEN CALL DISKERR;
     1284     9978    4   S2:       I=MBLK$->KQ$MBLK.COUNT-TCOUNT;
     1285     9979    4             MBLK$->KQ$MBLK.COUNT=TCOUNT;
     1286     9980    4             MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT-I;
     1287     9981    4             IF MBLK$->KQ$MBLK.KEY1VALID
     1288     9982    4             OR MBLK$->KQ$MBLK.SDA.CCDDA = MBLK$->KQ$MBLK.DDA THEN
     1289     9983    5               DO;
     1290     9984    5               MBLK$->KQ$MBLK.DDA=0;
     1291     9985    5               GOTO S30;
     1292     9986    5               END;
     1293     9987    4             MBLK$->KQ$MBLK.SDA.LDA=MBLK$->KQ$MBLK.PCDDA;
     1294     9988    4             MBLK$->KQ$MBLK.LCSTAMP=MLH$->KQ$MLH.PCSTAMP;
     1295     9989    4             GOTO S30;
     1296     9990    4             END;
     1297     9991
     1298     9992
     1299     9993                     /*    The read succeeded.
     1300     9994                      *    Validate the
     1301     9995                      *    DBLK we just
     1302     9996                      *    read.
     1303     9997                      */
     1304     9998    3           CTLBLK$=PINCRW(DBLK$,DBLK$->KQ$DBLK.SIZW-SIZEW(KQ$MBLK));
     1305     9999    3           P$=PINCRW(DBLK$,SIZEW(KQ$DBLK)+CTLBLK$->KQ$MBLK.FIRSTX);
     1306    10000    3           NMBLKS=DBLK$->KQ$DBLK.DSIZE/SIZEC(KQ$MBLK);
     1307    10001    3           IF TCOUNT+NMBLKS > MBLK$->KQ$MBLK.COUNT THEN
     1308    10002    3            CALL SC_CGSUPR;
     1309    10003    3           IF MBLK$->KQ$MBLK.KEY1VALID
     1310    10004    3           OR MBLK$->KQ$MBLK.SDA.CCDDA = MBLK$->KQ$MBLK.DDA THEN
     1311    10005    4             DO;
     1312    10006    4             ATFDA='1'B;
     1313    10007    4             IF CTLBLK$->KQ$MBLK.PCVALID THEN
     1314    10008    5               DO;
     1315    10009    5               IF CTLBLK$->KQ$MBLK.PCDDA ~= 0 THEN
     1316    10010    6                 DO;
     1317    10011    6                 CALL DISKERR;
     1318    10012    6                 GOTO S2;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:39   
     1319    10013    6                 END;
     1320    10014    5               END;
     1321    10015    4             ELSE
     1322    10016    5               DO;
     1323    10017    5               CTLBLK$->KQ$MBLK.PCVALID='1'B;
     1324    10018    5               CTLBLK$->KQ$MBLK.PCDDA=0;
     1325    10019    5               CALL UPDATE;
     1326    10020    5               END;
     1327    10021    4             END;
     1328    10022    3           ELSE
     1329    10023    4             DO;
     1330    10024    4             ATFDA='0'B;
     1331    10025    4             IF CTLBLK$->KQ$MBLK.PCDDA ~= MBLK$->KQ$MBLK.PCDDA THEN
     1332    10026    5               DO;
     1333    10027    5               CALL DISKERR;
     1334    10028    5               GOTO S2;
     1335    10029    5               END;
     1336    10030    4             END;
     1337    10031    3           IF MBLK$->KQ$MBLK.KEY1VALID
     1338    10032    3           OR MBLK$->KQ$MBLK.SDA.CCDDA = MBLK$->KQ$MBLK.SDA.LDA THEN
     1339    10033    3            IF TCOUNT+NMBLKS ~= MBLK$->KQ$MBLK.COUNT THEN
     1340    10034    4              DO;
     1341    10035    4              CALL SC_CGSUPR;
     1342    10036    4              END;
     1343    10037
     1344    10038
     1345    10039
     1346    10040                     /*    Search
     1347    10041                      *    thru the
     1348    10042                      *    DBLK.
     1349    10043                      *
     1350    10044                      *    If this is FWCG, then do
     1351    10045                      *    the required thing for
     1352    10046                      *    each qualifying message
     1353    10047                      *    we find, then fall thru.
     1354    10048                      *    Otherwise, try to find
     1355    10049                      *    a good message.  If none,
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:40   
     1356    10050                      *    fall thru to read the
     1357    10051                      *    next DBLK.  Else remember
     1358    10052                      *    the one we found, (SAVP$) and go
     1359    10053                      *    look at the INSHD$ list.
     1360    10054                      *    If this is the AU, and we are
     1361    10055                      *    not forced to honour his read
     1362    10056                      *    keys, then we must give him
     1363    10057                      *    the highest-prio AU message
     1364    10058                      *    regardless of whether it matches
     1365    10059                      *    his keys or not.
     1366    10060                      */
     1367    10061    3           IF MBLK$->KQ$MBLK.PRIO >= %KQ_AUEP# THEN
     1368    10062    3            IF NOT RBLK$->KQ$RBLK.HONK THEN
     1369    10063    4              DO;
     1370    10064    4              SAVP$=P$;
     1371    10065    4              IF NMBLKS ~= 0 THEN
     1372    10066    4               IF P$->KQ$MBLK.PRIO >= %KQ_AUEP# THEN
     1373    10067    5                 DO;
     1374    10068    5                 J=0;
     1375    10069    5                 IF MBLK$->KQ$MBLK.INSHD$ ~= ADDR(NIL) THEN
     1376    10070    6                   DO;
     1377    10071    6                   P$=ADDR(NIL);
     1378    10072    6                   M$=MBLK$->KQ$MBLK.INSHD$;
     1379    10073    6                   IF M$->KQ$MBLK.PRIO > SAVP$->KQ$MBLK.PRIO THEN GOTO S94;
     1380    10074    6                   ELSE IF M$->KQ$MBLK.PRIO = SAVP$->KQ$MBLK.PRIO THEN
     1381    10075    6                     IF M$->KQ$MBLK.UTS < SAVP$->KQ$MBLK.UTS THEN GOTO S94;
     1382    10076    6                     ELSE IF M$->KQ$MBLK.UTS = SAVP$->KQ$MBLK.UTS THEN
     1383    10077    6                       IF M$->KQ$MBLK.STAMP < SAVP$->KQ$MBLK.STAMP THEN GOTO S94;
     1384    10078    6                   END;
     1385    10079    5                 GOTO S50;
     1386    10080    5                 END;
     1387    10081    4              IF MBLK$->KQ$MBLK.INSHD$ ~= ADDR(NIL) THEN
     1388    10082    5                DO;
     1389    10083    5                P$=ADDR(NIL);
     1390    10084    5                M$=MBLK$->KQ$MBLK.INSHD$;
     1391    10085    5                IF M$->KQ$MBLK.PRIO >= %KQ_AUEP# THEN GOTO S94;
     1392    10086    5                END;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:41   
     1393    10087    4              P$=SAVP$;
     1394    10088    4              END;
     1395    10089
     1396    10090    3           J=0;
     1397    10091    3   S3:     IF J < NMBLKS THEN
     1398    10092    4             DO;
     1399    10093    4             IF  ADDR(RBLK$->KQ$RBLK.KEY1)->B$$KEY1 = ADDR(P$->KQ$MBLK.KEY1)->B$$KEY1
     1400    10094    4             AND ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 = ADDR(P$->KQ$MBLK.KEY2)->B$$KEY2
             10094                      THEN
     1401    10095    4              IF  P$->KQ$NRMLMBLK.MID.PRIMARY < STA$->KQ$STA.DSID
     1402    10096    4              AND P$->KQ$MBLK.PRIO < %KQ_AUEP#
     1403    10097    4              AND P$->KQ$NRMLMBLK.STAR THEN
     1404    10098    5                DO;
     1405    10099    5                IF P$->KQ$MBLK.DDA ~= 0 THEN
     1406    10100    6                  DO;
     1407    10101    6                  DDA=P$->KQ$MBLK.DDA;
     1408    10102    6                  I=P$->KQ$MBLK.STAMP;
     1409    10103    6                  CALL KQD$DELDDA (CG$->KQ$CG,I,DDA) ALTRET(S10);
     1410    10104    6                  GOTO S12;
     1411    10105    6   S10:           IF DDA = %KQDE_NDFRBLK THEN GOTO S98; /* No defer blks */
     1412    10106    6                  END;
     1413    10107    5   S12:         CALL PULLONE;
     1414    10108    5                GOTO S3;
     1415    10109    5                END;
     1416    10110    4              ELSE
     1417    10111    4               IF RBLK$->KQ$RBLK.MID.PRIMARY = 0
     1418    10112    4               OR (RBLK$->KQ$RBLK.MID.PRIMARY = MBLK$->KQ$NRMLMBLK.MID.PRIMARY) THEN
     1419    10113    5                 DO;
     1420    10114    5                 IF FWCG = 0 THEN
     1421    10115    6                   DO;
     1422    10116    6                   SAVP$=P$;
     1423    10117    6                   GOTO S30;
     1424    10118    6                   END;
     1425    10119    5                 IF FWP$->KQ$FWP.FC ~= 0 THEN
     1426    10120    6                   DO; /* Need to remove it */
     1427    10121    6                   CALL KQF$CHKMSG (FWP$->KQ$FWP,P$->KQ$MBLK) ALTRET(S16);
     1428    10122    6                   CALL GETMB (M$) ALTRET(S14);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:42   
     1429    10123    6                   GOTO S15;
     1430    10124    6   S14:            CALL KQM$GETMBLK (CG$->KQ$CG,M$,I) ALTRET(S99);
     1431    10125    6   S15:            M$->KQ$MBLK=P$->KQ$MBLK;
     1432    10126    6                   CALL PULLONE;
     1433    10127    6                   CALL FWCGP;
     1434    10128    6                   GOTO S3;
     1435    10129    6                   END;
     1436    10130    5                 CALL FWCGD; /* No removal */
     1437    10131    5                 END;
     1438    10132    4   S16:      P$=PINCRW(P$,SIZEW(KQ$MBLK));
     1439    10133    4             J=J+1;
     1440    10134    4             GOTO S3;
     1441    10135    4             END;
     1442    10136
     1443    10137
     1444    10138                     /*    We have reached the end
     1445    10139                      *    of this DBLK and must
     1446    10140                      *    march on.
     1447    10141                      *    Read next DBLK if any.
     1448    10142                      *    Delete this one if
     1449    10143                      *    it's empty and is FDA.
     1450    10144                      */
     1451    10145    3           IF DBLK$->KQ$DBLK.FLNKDA = 0 THEN
     1452    10146    4             DO;
     1453    10147    4             IF NMBLKS = 0 THEN
     1454    10148    4              IF ATFDA THEN
     1455    10149    5                DO;
     1456    10150    5   S21:         IF MBLK$->KQ$MBLK.COUNT ~= 0 THEN CALL SC_CGSUPR;
     1457    10151    5                MBLK$->KQ$MBLK.DDA=0;
     1458    10152    5                CALL DELETE;
     1459    10153    5                GOTO S30;
     1460    10154    5                END;
     1461    10155    4             END;
     1462    10156    3           ELSE
     1463    10157    4             DO;
     1464    10158    4             TCOUNT=TCOUNT+NMBLKS;
     1465    10159    4             IF TCOUNT < MBLK$->KQ$MBLK.COUNT THEN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:43   
     1466    10160    5               DO;
     1467    10161    5               MBLK$->KQ$MBLK.PCDDA=MBLK$->KQ$MBLK.SDA.CCDDA;
     1468    10162    5               MBLK$->KQ$MBLK.CCSTAMP=CTLBLK$->KQ$MBLK.CCSTAMP;
     1469    10163    5               MBLK$->KQ$MBLK.SDA.CCDDA=DBLK$->KQ$DBLK.FLNKDA;
     1470    10164    5               MLH$->KQ$MLH.PCSTAMP=DBLK$->KQ$DBLK.STAMP;
     1471    10165    5               IF  NMBLKS = 0
     1472    10166    5               AND ATFDA THEN
     1473    10167    6                 DO;
     1474    10168    6                 MBLK$->KQ$MBLK.DDA=MBLK$->KQ$MBLK.SDA.CCDDA;
     1475    10169    6                 MBLK$->KQ$MBLK.STAMP=MBLK$->KQ$MBLK.CCSTAMP;
     1476    10170    6                 CALL DELETE;
     1477    10171    6                 END;
     1478    10172    5               ELSE CALL UNLOCK;
     1479    10173    5               CALL SFETCH ALTRET(ALTRT);
     1480    10174    5               GOTO S1;
     1481    10175    5               END;
     1482    10176    4             IF NMBLKS = 0 THEN
     1483    10177    4              IF ATFDA THEN GOTO S21;
     1484    10178    4             END;
     1485    10179        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:44   
     1486    10180        /**/
     1487    10181    3   S30:    M$=ADDR(NIL);
     1488    10182                     /*    Search the INSHD$ list.
     1489    10183                      *    If FWCG, search it all.
     1490    10184                      *    Else (read), look for
     1491    10185                      *    one of higher prio than
     1492    10186                      *    the one in the DBLK
     1493    10187                      *    (if any).  If we find
     1494    10188                      *    one here, M$ will point
     1495    10189                      *    to it.
     1496    10190                      */
     1497    10191    3           P$=ADDR(NIL);
     1498    10192    3           M$=MBLK$->KQ$MBLK.INSHD$;
     1499    10193    4             DO WHILE (M$ ~= ADDR(NIL));
     1500    10194    4             IF  ADDR(RBLK$->KQ$RBLK.KEY1)->B$$KEY1 = ADDR(M$->KQ$MBLK.KEY1)->B$$KEY1
     1501    10195    4             AND ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 = ADDR(M$->KQ$MBLK.KEY2)->B$$KEY2
             10195                      THEN
     1502    10196    4              IF  M$->KQ$NRMLMBLK.MID.PRIMARY < STA$->KQ$STA.DSID
     1503    10197    4              AND M$->KQ$MBLK.PRIO < %KQ_AUEP#
     1504    10198    4              AND M$->KQ$NRMLMBLK.STAR THEN
     1505    10199    5                DO;
     1506    10200    5                CALL REMOVEI (P$,M$);
     1507    10201    5                CALL KQU$DELMSG (CG$->KQ$CG,M$->KQ$MBLK);
     1508    10202    5                IF P$ = ADDR(NIL) THEN M$=MBLK$->KQ$MBLK.INSHD$;
     1509    10203    5                ELSE M$=P$->KQ$MBLK.LNK$;
     1510    10204    5                GOTO S40;
     1511    10205    5                END;
     1512    10206    4              ELSE
     1513    10207    4               IF RBLK$->KQ$RBLK.MID.PRIMARY = 0
     1514    10208    4               OR (RBLK$->KQ$RBLK.MID.PRIMARY = M$->KQ$NRMLMBLK.MID.PRIMARY) THEN
     1515    10209    5                 DO;
     1516    10210    5                 IF FWCG = 0 THEN
     1517    10211    6                   DO;
     1518    10212    6                   IF SAVP$ ~= ADDR(NIL) THEN
     1519    10213    6                    IF SAVP$->KQ$MBLK.PRIO > M$->KQ$MBLK.PRIO THEN GOTO S50;
     1520    10214    6                    ELSE IF SAVP$->KQ$MBLK.PRIO = M$->KQ$MBLK.PRIO THEN
     1521    10215    6                      IF SAVP$->KQ$MBLK.UTS < M$->KQ$MBLK.UTS THEN GOTO S50;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:45   
     1522    10216    6                      ELSE IF SAVP$->KQ$MBLK.UTS = M$->KQ$MBLK.UTS THEN
     1523    10217    6                        IF SAVP$->KQ$MBLK.STAMP < M$->KQ$MBLK.STAMP THEN GOTO S50;
     1524    10218    6                   GOTO S94;
     1525    10219    6                   END;
     1526    10220    5                 CALL FWCGI ALTRET(S40);
     1527    10221    5                 END;
     1528    10222    4             P$=M$;
     1529    10223    4             M$=M$->KQ$MBLK.LNK$;
     1530    10224    4   S40:      END;
     1531    10225    3           IF SAVP$ ~= ADDR(NIL) THEN GOTO S50;
     1532    10226
     1533    10227        /**/
     1534    10228                     /*    Nothing was found so say so and return.
     1535    10229                      *    The DBLK gets unlocked, unless there isn't
     1536    10230                      *    one.
     1537    10231                      */
     1538    10232    3           CALL UNLOCK;
     1539    10233    3           CALL RELMB;
     1540    10234    3           RETURN;
     1541    10235
     1542    10236        /**/
     1543    10237        /**/
     1544    10238                     /*
     1545    10239                      *    The one we want is in the DBLK.
     1546    10240                      *    If we're at FDA then
     1547    10241                      *    try to get enuff memory to
     1548    10242                      *    hold all the DBLK's MBLKs.
     1549    10243                      */
     1550    10244    3   S50:    IF ATFDA THEN
     1551    10245    4             DO;
     1552    10246    4             I=NMBLKS*SIZEW(KQ$MBLK);
     1553    10247    4             CALL KQM$GETB (CG$->KQ$CG,M$,I) ALTRET(S9);
     1554    10248    4             CALL RELMB;
     1555    10249
     1556    10250                     /*    Now we have room to hold all
     1557    10251                      *    the MBLKs.  Merge them into
     1558    10252                      *    the MLH by linking them together and
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:46   
     1559    10253                      *    putting them before the super MBLK.
     1560    10254                      *    Take the part of the INSHD$ list
     1561    10255                      *    that belongs inside this DBLK and
     1562    10256                      *    merge it into the MLH list.  Update the bounds
     1563    10257                      *    in the super MBLK.  Update the FDA
     1564    10258                      *    too.  Delete the DBLK and return
     1565    10259                      *    saying we found one.
     1566    10260                      */
     1567    10261    4             I=NMBLKS*SIZEC(KQ$MBLK);
     1568    10262    4             M$->B$$CHARS=PINCRW(DBLK$,SIZEW(KQ$DBLK)+CTLBLK$->KQ$MBLK.FIRSTX)->
             10262                      B$$CHARS;
     1569    10263    4             L$=M$;
     1570    10264    5               DO I = 1 TO NMBLKS-1;
     1571    10265    5               L$->KQ$MBLK.LNK$=PINCRW(L$,SIZEW(KQ$MBLK));
     1572    10266    5               L$=L$->KQ$MBLK.LNK$;
     1573    10267    5               END;
     1574    10268    4             L$->KQ$MBLK.LNK$=MBLK$;
     1575    10269    4             CALL GETPRED;
     1576    10270    4             MBLK$->KQ$MBLK.COUNT=MBLK$->KQ$MBLK.COUNT-NMBLKS;
     1577    10271    4             MBLK$->KQ$MBLK.DDA=DBLK$->KQ$DBLK.FLNKDA;
     1578    10272    4             MBLK$->KQ$MBLK.STAMP=CTLBLK$->KQ$MBLK.CCSTAMP;
     1579    10273    4             MBLK$->KQ$MBLK.PRIO=L$->KQ$MBLK.PRIO;
     1580    10274    4             MBLK$->KQ$MBLK.UTSXTLO=L$->KQ$MBLK.STAMP+1;
     1581    10275    4             IF MBLK$->KQ$MBLK.UTSXTLO = 0 THEN
     1582    10276    4              MBLK$->KQ$MBLK.UTSXTLO=BITBIN('777777'O);
     1583    10277    4             MBLK$->KQ$MBLK.UTS=L$->KQ$MBLK.UTS;
     1584    10278    4             IF P$ = ADDR(NIL) THEN MLH$->KQ$MLH.HEAD$=M$;
     1585    10279    4             ELSE P$->KQ$MBLK.LNK$=M$;
     1586    10280    5               DO WHILE (MBLK$->KQ$MBLK.INSHD$ ~= ADDR(NIL));
     1587    10281    5               X$=MBLK$->KQ$MBLK.INSHD$;
     1588    10282    5               IF X$->KQ$MBLK.PRIO < L$->KQ$MBLK.PRIO THEN GOTO S60;
     1589    10283    5               ELSE IF X$->KQ$MBLK.PRIO = L$->KQ$MBLK.PRIO THEN
     1590    10284    5                 IF X$->KQ$MBLK.UTS > L$->KQ$MBLK.UTS THEN GOTO S60;
     1591    10285    5                 ELSE IF X$->KQ$MBLK.UTS = L$->KQ$MBLK.UTS THEN
     1592    10286    5                   IF X$->KQ$MBLK.STAMP > L$->KQ$MBLK.STAMP THEN GOTO S60;
     1593    10287    5               CALL MERGEIT;
     1594    10288    5               END;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:47   
     1595    10289    4   S60:      CALL DELETE;
     1596    10290    4             IF MBLK$->KQ$MBLK.COUNT = 0 THEN
     1597    10291    4              IF MBLK$->KQ$MBLK.DDA ~= 0 THEN CALL SC_CGSUPR;
     1598    10292    4              ELSE IF MBLK$->KQ$MBLK.INSHD$ = ADDR(NIL) THEN
     1599    10293    5                 DO;
     1600    10294    5                 SAVP$=P$;
     1601    10295    5                 P$=L$;
     1602    10296    5                 CALL REMOVES;
     1603    10297    5                 P$=SAVP$;
     1604    10298    5                 END;
     1605    10299    4             IF J ~= 0 THEN
     1606    10300    5               DO;
     1607    10301    5               P$=PINCRW(M$,(J-1)*SIZEW(KQ$MBLK));
     1608    10302    5               MBLK$=P$->KQ$MBLK.LNK$;
     1609    10303    5               END;
     1610    10304    4             ELSE MBLK$=M$;
     1611    10305    4             FOUNDIT=1;
     1612    10306    4             CALL REMOVE;
     1613    10307    4             RETURN;
     1614    10308    4             END;
     1615    10309        /**/
     1616    10310
     1617    10311                     /*    Not at FDA or there isn't
     1618    10312                      *    room to hold all
     1619    10313                      *    the DBLK's MBLKs.  Just get
     1620    10314                      *    space for one, and pull it
     1621    10315                      *    out of the DBLK into the
     1622    10316                      *    allocated buffer, closing up
     1623    10317                      *    the gap in the DBLK.  Then
     1624    10318                      *    return saying we have one already
     1625    10319                      *    removed from the list (since we
     1626    10320                      *    never put it in the list), after
     1627    10321                      *    unlocking the DBLK.
     1628    10322                      */
     1629    10323    3   S9:     CALL GETMB (M$) ALTRET(S90);
     1630    10324    3           GOTO S92;
     1631    10325    3   S90:    CALL KQM$GETMBLK (CG$->KQ$CG,M$,I) ALTRET(S99);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:48   
     1632    10326    3   S92:    M$->KQ$MBLK=SAVP$->KQ$MBLK;
     1633    10327    3           M$->KQ$MBLK.LNK$=MBLK$->KQ$MBLK.INSHD$; /* Save here */
     1634    10328    3           MBLK$->KQ$MBLK.INSHD$=M$;
     1635    10329    3           MBLK$->KQ$MBLK.COUNT=MBLK$->KQ$MBLK.COUNT-1;
     1636    10330    3           DBLK$->KQ$DBLK.DSIZE=DBLK$->KQ$DBLK.DSIZE-SIZEC(KQ$MBLK);
     1637    10331    3           IF DBLK$->KQ$DBLK.DSIZE = 0 THEN
     1638    10332    4             DO;
     1639    10333    4             IF NOT ATFDA THEN CALL UPDATED;
     1640    10334    4             ELSE
     1641    10335    5               DO;
     1642    10336    5               IF MBLK$->KQ$MBLK.KEY1VALID
     1643    10337    5               OR TCOUNT >= MBLK$->KQ$MBLK.COUNT THEN
     1644    10338    5                MBLK$->KQ$MBLK.DDA=0;
     1645    10339    5               ELSE
     1646    10340    6                 DO;
     1647    10341    6                 MBLK$->KQ$MBLK.DDA=DBLK$->KQ$DBLK.FLNKDA;
     1648    10342    6                 MBLK$->KQ$MBLK.STAMP=CTLBLK$->KQ$MBLK.CCSTAMP;
     1649    10343    6                 END;
     1650    10344    5               CALL DELETE;
     1651    10345    5               END;
     1652    10346    4             END;
     1653    10347        /**/
     1654    10348    3           ELSE
     1655    10349    4             DO;
     1656    10350    4             IF J > 0 THEN
     1657    10351    5               DO;
     1658    10352    5               I=DBLK$->KQ$DBLK.DSIZE-(J*SIZEC(KQ$MBLK));
     1659    10353    5               SAVP$->B$$CHARS=PINCRW(SAVP$,SIZEW(KQ$MBLK))->B$$CHARS; /* Close up */
     1660    10354    5               END;
     1661    10355    4             ELSE CTLBLK$->KQ$MBLK.FIRSTX=CTLBLK$->KQ$MBLK.FIRSTX+SIZEW(KQ$MBLK);
     1662    10356    4             CALL UPDATED;
     1663    10357    4             END;
     1664    10358        /**/
     1665    10359    3           P$=ADDR(NIL);
     1666    10360    3   S94:    FOUNDIT=1;
     1667    10361    3           CALL UNLOCK;
     1668    10362    3           CALL REMOVEI (P$,M$);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:49   
     1669    10363    3           CALL RELMB;
     1670    10364    3           MBLK$=M$;
     1671    10365    3           RETURN;
     1672    10366        /**/
     1673    10367
     1674    10368                     /*    Block
     1675    10369                      *    for
     1676    10370                      *    no
     1677    10371                      *    defer
     1678    10372                      *    blocks.
     1679    10373                      */
     1680    10374    3   S98:    CALL REG (KQSS_NDFR#) ALTRET(ALTRT);
     1681    10375    3           GOTO S0;
     1682    10376                     /*    Block
     1683    10377                      *    for
     1684    10378                      *    no
     1685    10379                      *    memory
     1686    10380                      */
     1687    10381    3   S99:    CALL REG (KQSS_NMEM#) ALTRET(ALTRT1);
     1688    10382    3           IF M$ ~= ADDR(NIL) THEN
     1689    10383    4             DO;
     1690    10384    4             MBLK$->KQ$MBLK.MREQ=-KQMR_MBLK#;
     1691    10385    4             MBLK$->KQ$MBLK.XSP.MREQ$=M$;
     1692    10386    4             END;
     1693    10387    3           GOTO S0;
     1694    10388    3   ALTRT:  ;
     1695    10389    3           CALL RELMB;
     1696    10390    3   ALTRT1: ;
     1697    10391    3           ALTRETURN;
     1698    10392        /**/
     1699    10393    3           END; /* Inhibit */
     1700    10394        /**/
     1701    10395        /*D* NAME:         PULLONE
     1702    10396             PURPOSE:      To adjust things when an MBLK is being pulled
     1703    10397                           out of a DBLK.
     1704    10398        */
     1705    10399    2   PULLONE: PROC;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:50   
     1706    10400        /**/
     1707    10401    4           DO INHIBIT;
     1708    10402    4           IF Q=0 THEN
     1709    10403    4            CG$->KQ$CG.STATS.CCMS=CG$->KQ$CG.STATS.CCMS-1;
     1710    10404    4           ELSE CG$->KQ$CG.STATS.CCMQ=CG$->KQ$CG.STATS.CCMQ-1;
     1711    10405    4           MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT-1;
     1712    10406    4           MBLK$->KQ$MBLK.COUNT=MBLK$->KQ$MBLK.COUNT-1;
     1713    10407    4           DBLK$->KQ$DBLK.DSIZE=DBLK$->KQ$DBLK.DSIZE-SIZEC(KQ$MBLK);
     1714    10408    4           IF J > 0 THEN
     1715    10409    5             DO;
     1716    10410    5             I=DBLK$->KQ$DBLK.DSIZE-(J*SIZEC(KQ$MBLK));
     1717    10411    5             P$->B$$CHARS=PINCRW(P$,SIZEW(KQ$MBLK))->B$$CHARS;
     1718    10412    5             END;
     1719    10413    4           ELSE /* Removal of 1st just updates FIRSTX */
     1720    10414    5             DO;
     1721    10415    5             CTLBLK$->KQ$MBLK.FIRSTX=CTLBLK$->KQ$MBLK.FIRSTX+SIZEW(KQ$MBLK);
     1722    10416    5             P$=PINCRW(P$,SIZEW(KQ$MBLK));
     1723    10417    5             END;
     1724    10418    4           CALL UPDATE;
     1725    10419    4           NMBLKS=NMBLKS-1;
     1726    10420    4           RETURN;
     1727    10421    4           END; /* Inhibit */
     1728    10422    3   END PULLONE;
     1729    10423        /**/
     1730    10424        /*D* NAME:         MERGEIT
     1731    10425             PURPOSE:      To merge the head of the INSHD$ list into the
     1732    10426                           MBLKs that were pulled from the DBLK
     1733    10427             INPUT:        M$   - the first pulled MBLK
     1734    10428                           P$   - predecessor of M$
     1735    10429                           L$   - the last pulled MBLK
     1736    10430        */
     1737    10431    2   MERGEIT: PROC;
     1738    10432        /**/
     1739    10433    3         IP$=P$;
     1740    10434    3         Z$=M$;
     1741    10435    4           DO FOREVER;
     1742    10436    4           IF X$->KQ$MBLK.PRIO > Z$->KQ$MBLK.PRIO THEN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:51   
     1743    10437    5   M0:       DO INHIBIT;
     1744    10438    5             MBLK$->KQ$MBLK.INSHD$=X$->KQ$MBLK.LNK$;
     1745    10439    5             IF IP$=ADDR(NIL) THEN
     1746    10440    5              MLH$->KQ$MLH.HEAD$=X$;
     1747    10441    5             ELSE IP$->KQ$MBLK.LNK$=X$;
     1748    10442    5             X$->KQ$MBLK.LNK$=Z$;
     1749    10443    5             RETURN;
     1750    10444    5             END;
     1751    10445    4           ELSE IF X$->KQ$MBLK.PRIO = Z$->KQ$MBLK.PRIO THEN
     1752    10446    4             IF X$->KQ$MBLK.UTS < Z$->KQ$MBLK.UTS THEN GOTO M0;
     1753    10447    4             ELSE IF X$->KQ$MBLK.UTS = Z$->KQ$MBLK.UTS THEN
     1754    10448    4               IF X$->KQ$MBLK.STAMP < Z$->KQ$MBLK.STAMP THEN GOTO M0;
     1755    10449    4           IP$=Z$;
     1756    10450    4           Z$=Z$->KQ$MBLK.LNK$;
     1757    10451    4           END;
     1758    10452    3   END MERGEIT;
     1759    10453    2   END SRCHSUPER;
     1760    10454        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:52   
     1761    10455        /********************************************************
     1762    10456        *********************************************************/
     1763    10457        /*D* NAME:         FWCGL
     1764    10458             PURPOSE:      To perform the FWCG functions when
     1765    10459                           an appropriate message is found.
     1766    10460             INPUT:        MBLK$    - MBLK
     1767    10461                           P$       - its predecessor
     1768    10462             DESCRIPTION:  Calls KQF$GOTMSG if TELLME is set
     1769    10463                           in KQ$FWP.  Conducts the correct
     1770    10464                           dialogue with KQF$GOTMSG when he
     1771    10465                           needs to REG for a DBLK.  When
     1772    10466                           KQF$GOTMSG is finished (or not
     1773    10467                           called at all), then we do the
     1774    10468                           delete/reattr if KQ$FWP.FC says
     1775    10469                           so.  This routine ALTRETs if
     1776    10470                           the MBLK disappears, setting P$
     1777    10471                           and MBLK$ as required.
     1778    10472        */
     1779    10473    1   FWCGL: PROC ALTRET;
     1780    10474        /**/
     1781    10475    2   DCL MB$ PTR;
     1782    10476        /**/
     1783    10477    2         MB$=MBLK$;
     1784    10478    2         CALL TELL ALTRET(RTN);
     1785    10479    3           DO INHIBIT;
     1786    10480    3           CALL REMOVE;
     1787    10481    3           IF P$ = ADDR(NIL) THEN MBLK$=MLH$->KQ$MLH.HEAD$;
     1788    10482    3           ELSE MBLK$=P$->KQ$MBLK.LNK$;
     1789    10483    3   COM:    IF FWP$->KQ$FWP.FC < 0 THEN
     1790    10484    3            CALL KQU$DELMSG (CG$->KQ$CG,MB$->KQ$MBLK);
     1791    10485    3           ELSE
     1792    10486    3            CALL KQL$INSERT (CG$->KQ$CG,FWP$->KQ$FWP.FWCGS$->KQ$STA.MLH,MB$);
     1793    10487    3           ALTRETURN;
     1794    10488    3           END; /* Inhibit */
     1795    10489    2   RTN:  RETURN;
     1796    10490        /**/
     1797    10491        /*D* NAME:         FWCGD
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:53   
     1798    10492             PURPOSE:      Same as FWCGL
     1799    10493             INPUT:        P$       - points to the MBLK in the DBLK.
     1800    10494                           FC       - guaranteed to be 0 (i.e. no
     1801    10495                                      removal will be required).
     1802    10496             DESCRIPTION:  Does not ALTRET; just tells KQF$GOTMSG
     1803    10497        */
     1804    10498    2   FWCGD: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     1805    10499        /**/
     1806    10500    2         MB$=P$;
     1807    10501    2         CALL TELL ALTRET(RTN);
     1808    10502    2   SC:   CALL SC_CGSUPR;
     1809    10503    2         GOTO SC;
     1810    10504        /**/
     1811    10505        /*D* NAME:         FWCGP
     1812    10506             PURPOSE:      Same as FWCGL
     1813    10507             INPUT:        M$       - points to MBLK in memory.  MBLK has
     1814    10508                                      already been removed because
     1815    10509                                      KQF$CHKMSG has already said the msg
     1816    10510                                      qualifies, and FC is nonzero so
     1817    10511                                      removal is required.
     1818    10512             DESCRIPTON:   Always altrets; else same as FWCGL
     1819    10513        */
     1820    10514    2   FWCGP: ENTRY ALTRET; /* !!Always ALTRETs!! */
     1821    10515        /**/
     1822    10516    2         MB$=M$;
     1823    10517    2         CALL TELL ALTRET(SC);
     1824    10518    2         GOTO COM;
     1825    10519        /**/
     1826    10520        /*D* NAME:         FWCGI
     1827    10521             PURPOSE:      Same as FWCGL
     1828    10522             INPUT:        M$       - points to MBLK on INSHD$ list of
     1829    10523                                      super MBLK pointed to by MBLK$
     1830    10524                           P$       - its predecessor
     1831    10525             DESCRIPTION:  Same as FWCGL
     1832    10526        */
     1833    10527    2   FWCGI: ENTRY ALTRET;
     1834    10528        /**/
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:54   
     1835    10529    2         MB$=M$;
     1836    10530    2         CALL TELL ALTRET(RTN);
     1837    10531    3           DO INHIBIT;
     1838    10532    3           CALL REMOVEI (P$,M$);
     1839    10533    3           IF P$ = ADDR(NIL) THEN M$=MBLK$->KQ$MBLK.INSHD$;
     1840    10534    3           ELSE M$=P$->KQ$MBLK.LNK$;
     1841    10535    3           GOTO COM;
     1842    10536    3           END; /* Inhibit */
     1843    10537        /**/
     1844    10538        /*D* NAME:         TELL
     1845    10539             PURPOSE:      To call KQF$GOTMSG
     1846    10540             DESRIPTION:   If KQ$FWP.TELLME is reset then ALTRETs if FC = 0;
     1847    10541                           else returns.  Else calls KQF$GOTMSG, handling
     1848    10542                           the case where he needs to REG for a DBLK.  If
     1849    10543                           no DBLK is obtained, zaps TELLME and FC, and
     1850    10544                           sets RBLK.ERR to KQGE_QFUL#, & then ALTRETs.
     1851    10545                           Otherwise RETURNs if FC is zero or TOOKIT is
     1852    10546                           reset (i.e. there's nothing more to do); else
     1853    10547                           ALTRETs (i.e. removal is required and the msg
     1854    10548                           qualifies).
     1855    10549        */
     1856    10550    2   TELL: PROC ALTRET;
     1857    10551        /**/
     1858    10552    3         CALL KQX$CHKTIME (TIMCHK) ALTRET(GO);
     1859    10553    3         CALL UNL;
     1860    10554    3         CALL SSR$REG (%SS_QE);
     1861    10555    3         CALL KQX$SETTIME (TIMCHK);
     1862    10556    3         FWP$->KQ$FWP.TIMCHK=TIMCHK;
     1863    10557    3         CALL LOCK;
     1864    10558    3   GO:   ;
     1865    10559        /**/
     1866    10560    3         IF NOT FWP$->KQ$FWP.TELLME THEN
     1867    10561    3          IF FWP$->KQ$FWP.FC = 0 THEN ALTRETURN;
     1868    10562    3          ELSE RETURN;
     1869    10563    3         FWP$->KQ$FWP.REGOK='0'B;
     1870    10564    3         FWP$->KQ$FWP.TOOKIT='0'B;
     1871    10565    3         CALL KQF$GOTMSG (FWP$->KQ$FWP,MB$->KQ$MBLK) ALTRET(REG);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:55   
     1872    10566    3   OUT:  IF NOT FWP$->KQ$FWP.TOOKIT
     1873    10567    3         OR FWP$->KQ$FWP.FC = 0 THEN ALTRETURN;
     1874    10568    3         RETURN;
     1875    10569    3   REG:  CALL UNL;
     1876    10570    3         FWP$->KQ$FWP.TOOKIT='0'B;
     1877    10571    3         FWP$->KQ$FWP.REGOK='1'B;
     1878    10572    3         CALL KQF$GOTMSG (FWP$->KQ$FWP,MB$->KQ$MBLK) ALTRET(NODB);
     1879    10573    3         GOTO LOUT;
     1880    10574    3   NODB: FWP$->KQ$FWP.FC=0;
     1881    10575    3         FWP$->KQ$FWP.TELLME='0'B;
     1882    10576    3         RBLK$->KQ$RBLK.ERR=KQGE_QFUL#;
     1883    10577    3   LOUT: CALL LOCK;
     1884    10578    3         GOTO OUT;
     1885    10579        /**/
     1886    10580    3   UNL:  PROC;
     1887    10581    4         IF Q = 0 THEN
     1888    10582    5           DO;
     1889    10583                %UNLOCK (G=STA$->KQ$STA.GATE);
     1890    10586    5           END;
     1891    10587    4         ELSE
     1892    10588    5           DO;
     1893    10589    5           QTN$->KQ$QTN.LOCKCNT=QTN$->KQ$QTN.LOCKCNT+1;
     1894    10590                %UNLOCK (G=KQ$QTREE.GATE);
     1895    10593    5           END;
     1896    10594    4         RETURN;
     1897    10595    4   END UNL;
     1898    10596        /**/
     1899    10597    3   LOCK: PROC;
     1900    10598    4         IF Q = 0 THEN
     1901    10599    5           DO;
     1902    10600                %LOCK (G=STA$->KQ$STA.GATE);
     1903    10603    5           END;
     1904    10604    4         ELSE
     1905    10605    5           DO;
     1906    10606                %LOCK (G=KQ$QTREE.GATE);
     1907    10609    5           QTN$->KQ$QTN.LOCKCNT=QTN$->KQ$QTN.LOCKCNT-1;
     1908    10610    5           END;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:56   
     1909    10611    4         RETURN;
     1910    10612    4   END LOCK;
     1911    10613    3   END TELL;
     1912    10614    2   END FWCGL;
     1913    10615        /********************************************************
     1914    10616        *********************************************************/
     1915    10617        /**/
     1916    10618        /*D* NAME:         DELETE
     1917    10619             PURPOSE:      To delete the in-core data block
     1918    10620             DESCRIPTION:  Calls KQD$DELETE & sets DBLK$=ADDR(NIL)
     1919    10621        */
     1920    10622    1   DELETE: PROC;
     1921    10623        /**/
     1922    10624    2         CALL KQD$DELETE (CG$->KQ$CG,DBLK$);
     1923    10625    2   XIT:  DBLK$=ADDR(NIL);
     1924    10626    2         RETURN;
     1925    10627        /**/
     1926    10628        /*D* NAME:         UPDATED
     1927    10629             PURPOSE:      To unlock & mark updated the current data block
     1928    10630             DESCRIPTION:  Calls KQD$UPDATED and sets DBLK$=ADDR(NIL)
     1929    10631        */
     1930    10632    2   UPDATED: ENTRY;
     1931    10633        /**/
     1932    10634    2         CALL KQD$UPDATED (CG$->KQ$CG,DBLK$);
     1933    10635    2         GOTO XIT;
     1934    10636        /**/
     1935    10637        /*D* NAME:         UNLOCK
     1936    10638             PURPOSE:      To unlock any current data block
     1937    10639             DESCRIPTION:  If DBLK$ ~= ADDR(NIL) then calls KQD$UNLOCK.
     1938    10640                           Sets DBLK$=ADDR(NIL)
     1939    10641        */
     1940    10642    2   UNLOCK: ENTRY;
     1941    10643        /**/
     1942    10644    2         IF DBLK$ ~= ADDR(NIL) THEN
     1943    10645    2          CALL KQD$UNLOCK (CG$->KQ$CG,DBLK$);
     1944    10646    2         GOTO XIT;
     1945    10647        /**/
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:57   
     1946    10648        /*D* NAME:         UPDATE
     1947    10649             PURPOSE:      To mark the current DBLK updated
     1948    10650        */
     1949    10651    2   UPDATE: ENTRY;
     1950    10652        /**/
     1951    10653    2         CALL KQD$UPDATE (CG$->KQ$CG,DBLK$);
     1952    10654    2         RETURN;
     1953    10655    2   END DELETE;
     1954    10656        /********************************************************
     1955    10657        *********************************************************/
     1956    10658        /**/
     1957    10659        /*D* NAME:         DISKERR
     1958    10660             PURPOSE:      To log errors encountered while
     1959    10661                           reading disc chains.
     1960    10662             DESCRIPTION:  KQ$MBLK.SDA.CCDDA (or KQ$MBLK.DDA) is
     1961    10663                           the disc address we read.  DDA is the
     1962    10664                           error code.
     1963    10665        */
     1964    10666    1   DISKERR: PROC;
     1965    10667        /**/
     1966    10668    2   DCL F$ PTR;
     1967    10669    2   DCL 1 FRAME BASED ALIGNED,
     1968    10670              %KQ_LOGENT (FPTN=LOGENT,STCLASS=BASED,LVL=2,LAST=",");
     1969    10712    2         2 STA     CHAR(8)   CALIGNED,
     1970    10713    2         2 NODE    CHAR(8)   CALIGNED,
     1971    10714              %KQ_MLH (FPTN=MLH,STCLASS=BASED,LVL=2);
     1972    10784        /**/
     1973    10785    2         IF KQ_DEBUG ~= 0 THEN
     1974    10786    2          CALL SC_CGSUSN;
     1975    10787        /*S* SCREECH_CODE: KQL-S$CGSUSN
     1976    10788             TYPE:         SNAP
     1977    10789             MESSAGE:      COMGROUP super MBLK inconsistency
     1978    10790             REMARKS:      This SNAP occurs when a recoverable inconsistency
     1979    10791                           is discovered in an MLH containing super MBLKs. */
     1980    10792        /**/
     1981    10793                                /* Log the error */
     1982    10794              %LOCK (G=KQ_ERRLOG_GATE);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:58   
     1983    10797    2         KQ_ERRLOG_BFR.CODE=%KQELOG_KQL_FTCH;
     1984    10798    2         KQ_ERRLOG_BFR.SIZ=SIZEW(FRAME)+SIZEW(KQ$RBLK)+SIZEW(KQ$MBLK);
     1985    10799    2         KQ_ERRLOG_BFR.INFO='0'B;
     1986    10800    2         F$=ADDR(KQ_ERRLOG_BFR.INFO);
     1987    10801    2         CALL KQZ$LOG (CG$->KQ$CG,Q,TERM,ENTFLAG,0,DDA,0,F$) ALTRET(A1);
     1988    10802    2         RETURN;
     1989    10803    2   A1:   F$->FRAME.STA    =STA$->KQ$STA.BTN.KEY;
     1990    10804    2         IF Q ~= 0 THEN
     1991    10805    2          F$->FRAME.NODE  =QTN$->KQ$QTN.STA.BTN.KEY;
     1992    10806    2         F$->FRAME.MLH    =MLH$->KQ$MLH;
     1993    10807    2         F$=PINCRW(F$,SIZEW(FRAME));
     1994    10808    2         IF TERM = 0 THEN
     1995    10809    2          F$->KQ$RBLK=RBLK$->KQ$RBLK;
     1996    10810    2         ELSE F$->KQ$RBLKT=RBLK$->KQ$RBLKT;
     1997    10811    2         F$=PINCRW(F$,SIZEW(KQ$RBLK));
     1998    10812    2         F$->KQ$MBLK=MBLK$->KQ$MBLK;
     1999    10813    2         CALL KQD$ERRLOG (CG$->KQ$CG);
     2000    10814    2         RETURN;
     2001    10815    2   END DISKERR;
     2002    10816        /********************************************************
     2003    10817        *********************************************************/
     2004    10818        /**/
     2005    10819        /*D* NAME:         RELMB
     2006    10820             PURPOSE:      To release a possible MBLK
     2007    10821             DESCRIPTION:  Releases any MBLK acquired via KQM$GETBM but
     2008    10822                           not used
     2009    10823        */
     2010    10824    1   RELMB: PROC;
     2011    10825        /**/
     2012    10826    2   DCL REL$ PTR;
     2013    10827        /**/
     2014    10828    2         CALL GETMB (REL$) ALTRET(RTN);
     2015    10829    2         CALL KQM$RELMBLK (CG$->KQ$CG,REL$);
     2016    10830    2   RTN:  RETURN;
     2017    10831    2   END RELMB;
     2018    10832        /**/
     2019    10833        /*D* NAME:         GETMB
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:59   
     2020    10834             PURPOSE:      To get an MBLK previously acquired via KQM$GETBM
     2021    10835        */
     2022    10836    1   GETMB: PROC (M$) ALTRET;
     2023    10837        /**/
     2024    10838    2   DCL M$ PTR;
     2025    10839        /**/
     2026    10840    2         IF MBLK$->KQ$MBLK.MREQ > 0 THEN CALL SC_CGSUPR;
     2027    10841    2         ELSE IF MBLK$->KQ$MBLK.MREQ < 0 THEN
     2028    10842    3            DO;
     2029    10843    3            IF MBLK$->KQ$MBLK.KEY2VALID THEN CALL SC_CGSUPR;
     2030    10844    3            MBLK$->KQ$MBLK.MREQ=0;
     2031    10845    3            M$=MBLK$->KQ$MBLK.XSP.MREQ$;
     2032    10846    3            MBLK$->KQ$MBLK.XSP.MREQ$=ADDR(NIL);
     2033    10847    3            IF M$ ~= ADDR(NIL) THEN RETURN;
     2034    10848    3            END;
     2035    10849    2         ALTRETURN;
     2036    10850    2   END GETMB;
     2037    10851        /********************************************************
     2038    10852        *********************************************************/
     2039    10853        /**/
     2040    10854        /*D* NAME:         SFETCH
     2041    10855             PURPOSE:      To fetch a super MBLK's DBLK into memory
     2042    10856             DESCRIPTION:  The DBLK to be fetched is described by:
     2043    10857                             DDA    :         KQ$MBLK.DDA/KQ$MBLK.SDA.CCDDA
     2044    10858                             STAMP  :         KQ$MBLK.CCSTAMP
     2045    10859                             BLINK  :         KQ$MBLK.PCDDA
     2046    10860
     2047    10861                           Fetches it.  Returns if fetched OK or immediate
     2048    10862                           error.  Else REGs, ALTRETing if TERM request and
     2049    10863                           returning when done otherwise.
     2050    10864        */
     2051    10865    1   SFETCH: PROC ALTRET;
     2052    10866        /**/
     2053    10867    2   DCL T1$ PTR;
     2054    10868    2   DCL 1 T1$R REDEF T1$,
     2055    10869    2         2 H1 UBIN HALF UNAL,
     2056    10870    2         2 H2 UBIN HALF UNAL;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:60   
     2057    10871    2   DCL T2$ PTR;
     2058    10872        /**/
     2059    10873    2   RETRY:;
     2060    10874    2         CALL KQX$CHKTIME (TIMCHK) ALTRET(GO);
     2061    10875    2         CALL REG (KQSS_Q4EX#) ALTRET(ALTRT);
     2062    10876    2   GO:   ;
     2063    10877        /**/
     2064    10878    2         DBLK$R=MBLK$->KQ$MBLK.CCSTAMP;
     2065    10879    2         IF MBLK$->KQ$MBLK.KEY1VALID THEN
     2066    10880    2          DDA=MBLK$->KQ$MBLK.DDA;
     2067    10881    2         ELSE DDA=MBLK$->KQ$MBLK.SDA.CCDDA;
     2068    10882    2         IF DDA = 0 THEN
     2069    10883    3           DO; /* prev fetch err */
     2070    10884    3           DBLK$=ADDR(NIL);
     2071    10885    3           RETURN;
     2072    10886    3           END;
     2073    10887    2         IF KQ_LOG.KQL THEN
     2074    10888    3           DO;
     2075    10889    3           T1$=MLH$;
     2076    10890    3           T2$=MBLK$;
     2077    10891    3           CALL KQZ$LOG (CG$->KQ$CG,%KQLOG_SFET,S_CUN,T1$,T1$R.H1,T2$,DDA) ALTRET(A1);
     2078    10892    3           RETURN;
     2079    10893    3   A1:     END;
     2080    10894    2         CALL KQD$FETCH (CG$->KQ$CG,DBLK$,DDA) ALTRET(NOFETCH);
     2081    10895    2         RETURN;
     2082    10896    2   NOFETCH:;
     2083    10897    2         IF DBLK$ = ADDR(NIL) THEN
     2084    10898    3           DO CASE (DDA);
     2085    10899
     2086    10900    3             CASE (%KQDE_NDFRBLK); /* no defer blocks avail */
     2087    10901    3               CALL REG (KQSS_NDFR#) ALTRET(ALTRT);
     2088    10902    3               GOTO RETRY;
     2089    10903
     2090    10904    3             CASE (%KQDE_STMP,%KQDE_BDDA,%KQDE_STATE,%KQDE_IOERR);
     2091    10905    3               RETURN;
     2092    10906
     2093    10907    3             CASE (ELSE);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:61   
     2094    10908    3               CALL SC_CGSUPR;
     2095    10909        /*S* SCREECH_CODE: KQL-S$CGSUPR
     2096    10910             TYPE:         SCREECH
     2097    10911             MESSAGE:      Inconsistency in COMGROUP super MBLK
     2098    10912             REMARKS:      An inconsistency has been encountered while
     2099    10913                           processing a super MBLK.  The nature of the
     2100    10914                           error depends upon the place from which the
     2101    10915                           SCREECH was called.
     2102    10916        */
     2103    10917    3               RETURN;
     2104    10918    3           END;
     2105    10919        /**/
     2106    10920    2         DFRP$=DBLK$;
     2107    10921    2         DBLK$=ADDR(NIL);
     2108    10922    2         DFRP$->KQ$DFRBLK.INFO$=MBLK$;
     2109    10923    2         CALL REG (KQSS_IOIP#) ALTRET(ALTRT);
     2110    10924    2         DBLK$=MBLK$->KQ$MBLK.STA$;
     2111    10925    2         DDA=ADDR(DBLK$)->B$$UPARM.ERR;
     2112    10926    2         ADDR(DBLK$)->B$$UPARM.ERR=0;
     2113    10927    2         RETURN;
     2114    10928    2   ALTRT:ALTRETURN;
     2115    10929    2   END SFETCH;
     2116    10930        /********************************************************
     2117    10931        *********************************************************/
     2118    10932        /**/
     2119    10933        /*D* NAME:         REG
     2120    10934             PURPOSE:      To block the search process
     2121    10935             DESCRIPTION:  The MBLK is placed in the appropriate state,
     2122    10936                           and then we ALTRET if TERM, else block the user
     2123    10937                           and fall thru to ENDREG when unblocked.
     2124    10938        */
     2125    10939    1   REG:  PROC (STATE) ALTRET;
     2126    10940        /**/
     2127    10941    2   DCL STATE UBIN;
     2128    10942        /**/
     2129    10943    2         IF MBLK$->KQ$MBLK.STATE ~= KQSS_IDLE# THEN CALL SC_CGSUPR;
     2130    10944    2         MBLK$->KQ$MBLK.STATE=STATE;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:62   
     2131    10945    2         IF TERM = 0 THEN
     2132    10946    3           DO;
     2133    10947    3           MBLK$->KQ$MBLK.USR='1'B;
     2134    10948    3           MBLK$->KQ$MBLK.USR#=S_CUN;
     2135    10949    3           END;
     2136    10950    2         ELSE
     2137    10951    3           DO;
     2138    10952    3           MBLK$->KQ$MBLK.USR='0'B;
     2139    10953    3           MBLK$->KQ$MBLK.STA$=STA$;
     2140    10954    3           END;
     2141    10955    2         IF Q ~= 0 THEN
     2142    10956    3           DO;
     2143    10957    3           QTN$->KQ$QTN.LOCKCNT=QTN$->KQ$QTN.LOCKCNT+1;
     2144    10958                %LOCK (G=STA$->KQ$STA.GATE);
     2145    10961    3           END;
     2146    10962    2         STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;
     2147    10963    2         IF TERM ~= 0 THEN STA$->KQ$STA.TCOUNT=TCOUNT;
     2148    10964
     2149    10965    3           DO CASE (STATE);
     2150    10966
     2151    10967    3             CASE (KQSS_NMEM#);
     2152    10968    3               IF Q = 0 THEN
     2153    10969    4                 DO;
     2154    10970    4                 MLH$->KQ$MLH.RQMEM='1'B;
     2155    10971    4                 IF MLH$->KQ$MLH.GACT THEN
     2156    10972    5                   DO;
     2157    10973    5                   IF MLH$->KQ$MLH.BUSY.GIP THEN CALL SC_CGSUPR;
     2158    10974    5                   MLH$->KQ$MLH.BUSY.GIP='1'B;
     2159    10975    5                   CALL UNL;
     2160    10976    5                   CALL KQS$CSQUISH (CG$->KQ$CG);
     2161    10977    5                   END;
     2162    10978    4                 ELSE CALL UNL;
     2163    10979    4                 END;
     2164    10980    3               ELSE
     2165    10981    4                 DO; /* Q */
     2166    10982    4                 KQ$QUEUE.RQMEM='1'B;
     2167    10983    4                 IF KQ$QUEUE.GACT THEN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:63   
     2168    10984    5                   DO;
     2169    10985    5                   IF KQ$QUEUE.BUSY.GIP THEN CALL SC_CGSUPR;
     2170    10986    5                   KQ$QUEUE.BUSY.GIP='1'B;
     2171    10987    5                   CALL UNL;
     2172    10988    5                   CALL KQS$CQUEUE (CG$->KQ$CG);
     2173    10989    5                   END;
     2174    10990    4                 ELSE CALL UNL;
     2175    10991    4                 END;
     2176    10992    3               MBLK$->KQ$MBLK.KEY2VALID='0'B;
     2177    10993    3               MBLK$->KQ$MBLK.KEY2ALL='0'B;
     2178    10994    3               MBLK$->KQ$MBLK.XSP.MREQ$=ADDR(NIL);
     2179    10995    3               M$=MBLK$;
     2180    10996    3               I=KQMR_MBLK#;
     2181    10997    3               CALL KQM$GETBM (CG$->KQ$CG,M$,I) ALTRET(ALT1);
     2182    10998    3               GOTO NOW;
     2183    10999    3   ALT1:       M$=ADDR(NIL);
     2184    11000    3               GOTO LATER;
     2185    11001
     2186    11002    3             CASE (KQSS_NDFR#);
     2187    11003    3   NDFR:       ;
     2188    11004    3               CALL UNL;
     2189    11005    3               CALL RELMB;
     2190    11006    3               MBLK$->KQ$MBLK.KEY2VALID='0'B;
     2191    11007    3               MBLK$->KQ$MBLK.KEY2ALL='0'B;
     2192    11008    3               MBLK$->KQ$MBLK.XSP.MREQ$=ADDR(NIL);
     2193    11009                    %LOCK (G=CG$->KQ$CG.GATE.CG);
     2194    11012    3               MBLK$->KQ$MBLK.XSP.SLNK$=CG$->KQ$CG.SRQHD$;
     2195    11013    3               CG$->KQ$CG.SRQHD$=MBLK$;
     2196    11014                    %UNLOCK (G=CG$->KQ$CG.GATE.CG);
     2197    11017
     2198    11018    3             CASE (KQSS_IOIP#);
     2199    11019    3               CALL UNL;
     2200    11020    3               CALL KQD$DEFERGO (CG$->KQ$CG,DFRP$,ENTADDR(KQL$FCONT));
     2201    11021
     2202    11022    3             CASE (KQSS_Q4GC#);
     2203    11023    3               IF Q = 0 THEN
     2204    11024    3                MLH$->KQ$MLH.RQGC='1'B;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:64   
     2205    11025    3               ELSE
     2206    11026    4                 DO;
     2207    11027    4                 KQ$QUEUE.MLH$=MLH$;
     2208    11028    4                 KQ$QUEUE.RQGC='1'B;
     2209    11029    4                 END;
     2210    11030    3               CALL UNL;
     2211    11031
     2212    11032    3             CASE (KQSS_Q4EX#);
     2213    11033    3               IF TERM ~= 0 THEN
     2214    11034    4                 DO;
     2215    11035    4                 MBLK$->KQ$MBLK.STATE=KQSS_NDFR#;
     2216    11036    4                 GOTO NDFR;
     2217    11037    4                 END;
     2218    11038    3               CALL UNL;
     2219    11039    3               CALL SSR$REG (%SS_QE);
     2220    11040    3               GOTO NOW;
     2221    11041
     2222    11042    3             CASE (ELSE);
     2223    11043    3               CALL UNL;
     2224    11044    3           END;
     2225    11045
     2226    11046    2   LATER:;
     2227    11047    2         IF TERM ~= 0 THEN
     2228    11048    2   ALTRT: ALTRETURN;
     2229    11049    2         CALL SSR$REG (%SS_QA);
     2230    11050    2   NOW:  ;
     2231    11051        /**/
     2232    11052        /*D* NAME:         ENDREG
     2233    11053             PURPOSE:      To re-lock stuff after a REG
     2234    11054             DESCRIPTION:  Sets MBS to MBLK state, sets MBLK state
     2235    11055                           to KQSS_IDLE#, decrements station LOCKCNT.
     2236    11056                           Sets ENTFLAG to 1.
     2237    11057
     2238    11058                           ALTRETs if the station is a terminal and IDSC
     2239    11059                           is set, with station gate locked and LOCKCNT
     2240    11060                           decremented.
     2241    11061
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:65   
     2242    11062                           Else decrements QTN LOCKCNT (if appropriate), and exits with
     2243    11063                           appropriate gate locked.
     2244    11064        */
     2245    11065    2   ENDREG: ENTRY ALTRET;
     2246    11066        /**/
     2247    11067    2         CALL KQX$SETTIME(TIMCHK);
     2248    11068    2         IF FWCG~=0 THEN FWP$->KQ$FWP.TIMCHK=TIMCHK;
     2249    11069              %LOCK (G=STA$->KQ$STA.GATE);
     2250    11072    2         MBS=MBLK$->KQ$MBLK.STATE;
     2251    11073    2         ENTFLAG=1;
     2252    11074    2         MBLK$->KQ$MBLK.STATE=KQSS_IDLE#;
     2253    11075    2         STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT-1;
     2254    11076    2         IF TERM ~= 0 THEN
     2255    11077    2          IF STA$->KQ$STA.IDSC THEN
     2256    11078    2           IF STA$->KQ$STA.LOCKCNT = 0 THEN ALTRETURN;
     2257    11079    2         IF Q ~= 0 THEN
     2258    11080    3           DO;
     2259    11081                %UNLOCK (G=STA$->KQ$STA.GATE);
     2260    11084                %LOCK (G=KQ$QTREE.GATE);
     2261    11087    3           QTN$->KQ$QTN.LOCKCNT=QTN$->KQ$QTN.LOCKCNT-1;
     2262    11088    3           END;
     2263    11089    2         RETURN;
     2264    11090        /**/
     2265    11091    2   UNL:  PROC;
     2266    11092              %UNLOCK (G=STA$->KQ$STA.GATE);
     2267    11095    3         IF Q ~= 0 THEN
     2268    11096    4           DO;
     2269    11097                %UNLOCK (G=KQ$QTREE.GATE);
     2270    11100    4           END;
     2271    11101    3         CALL UNLOCK;
     2272    11102    3   END UNL;
     2273    11103    2   END REG;
     2274    11104        /********************************************************
     2275    11105        *********************************************************/
     2276    11106        /*D* NAME:         UNREG
     2277    11107             PURPOSE:      To un REG an MBLK
     2278    11108             DESCRIPTION:  ALTRETs if not a user waiting (TERM request).
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:66   
     2279    11109                           Else un REGs him.
     2280    11110        */
     2281    11111    1   UNREG: PROC ALTRET;
     2282    11112        /**/
     2283    11113    2   DCL USR# UBIN BYTE CALIGNED;
     2284    11114        /**/
     2285    11115    3           DO CASE (MBLK$->KQ$MBLK.STATE);
     2286    11116    3             CASE (KQSS_NDFR#);
     2287    11117    3               IF MBLK$->KQ$MBLK.MREQ ~= 0 THEN
     2288    11118    3                CALL SC_CGSUPR;
     2289    11119    3             CASE (KQSS_NMEM#);
     2290    11120    3               IF MBLK$->KQ$MBLK.MREQ >= 0 THEN CALL SC_CGSUPR;
     2291    11121    3             CASE (KQSS_Q4GC#,KQSS_IOIP#);
     2292    11122    3             CASE (ELSE);
     2293    11123    3               CALL SC_CGSUPR;
     2294    11124    3           END;
     2295    11125
     2296    11126    2         IF MBLK$->KQ$MBLK.USR = '0'B THEN ALTRETURN;
     2297    11127    2         USR#=MBLK$->KQ$MBLK.USR#;
     2298    11128    2         MBLK$->KQ$MBLK.STA$=DBLK$;
     2299    11129    2         ADDR(MBLK$->KQ$MBLK.STA$)->B$$UPARM.ERR=DDA;
     2300    11130    2         CALL SSR$RUE (%SS_UQA,USR#);
     2301    11131    2         RETURN;
     2302    11132    2   END UNREG;
     2303    11133        /********************************************************
     2304    11134        *********************************************************/
     2305    11135        /**/
     2306    11136        /*D* NAME:         REMOVES
     2307    11137             PURPOSE:      To remove a super MBLK from an MLH
     2308    11138             DESCRIPTION:  See REMOVE
     2309    11139        */
     2310    11140    1   REMOVES: PROC;
     2311    11141        /**/
     2312    11142    3           DO INHIBIT;
     2313    11143    3           MLH$->KQ$MLH.SUPERCNT=MLH$->KQ$MLH.SUPERCNT-1;
     2314    11144    3           GOTO REM;
     2315    11145    3           END;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:67   
     2316    11146        /**/
     2317    11147        /*D* NAME:         REMOVE
     2318    11148             PURPOSE:      To remove an MBLK from an MLH
     2319    11149             DESCRIPTION:  MBLK$ is the one to remove.
     2320    11150                           P$ is ADDR(NIL) if MBLK$ is first in the list,
     2321    11151                           else is its predecessor
     2322    11152        */
     2323    11153    2   REMOVE: ENTRY;
     2324    11154        /**/
     2325    11155    3           DO INHIBIT;
     2326    11156    3           MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT-1;
     2327    11157    3           IF Q = 0 THEN
     2328    11158    3            CG$->KQ$CG.STATS.CCMS=CG$->KQ$CG.STATS.CCMS-1;
     2329    11159    3           ELSE CG$->KQ$CG.STATS.CCMQ=CG$->KQ$CG.STATS.CCMQ-1;
     2330    11160    3   REM:    ;
     2331    11161    3           IF P$ = ADDR(NIL) THEN
     2332    11162    4             DO;
     2333    11163    4             MLH$->KQ$MLH.HEAD$=MBLK$->KQ$MBLK.LNK$;
     2334    11164    4             IF MBLK$->KQ$MBLK.LNK$ = ADDR(NIL) THEN MLH$->KQ$MLH.TAIL$=ADDR(NIL);
     2335    11165    4             END;
     2336    11166    3           ELSE
     2337    11167    4             DO;
     2338    11168    4             P$->KQ$MBLK.LNK$=MBLK$->KQ$MBLK.LNK$;
     2339    11169    4             IF MBLK$->KQ$MBLK.LNK$ = ADDR(NIL) THEN MLH$->KQ$MLH.TAIL$=P$;
     2340    11170    4             END;
     2341    11171    3           RETURN;
     2342    11172    3           END; /* Inhibit */
     2343    11173    2   END REMOVES;
     2344    11174        /********************************************************
     2345    11175        *********************************************************/
     2346    11176        /**/
     2347    11177        /*D* NAME:         REMOVEI
     2348    11178             PURPOSE:      To remove an MBLK from an INSHD$ list
     2349    11179             DESCRIPTION:  MBLK$ points to the MBLK owning the list,
     2350    11180                           M$ points to the one to remove, P$ is ADDR(NIL)
     2351    11181                           if it's the first in the list and points to
     2352    11182                           its predecessor else.
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:68   
     2353    11183        */
     2354    11184    1   REMOVEI: PROC (P$,M$);
     2355    11185        /**/
     2356    11186    2   DCL P$ PTR;
     2357    11187    2   DCL M$ PTR;
     2358    11188        /**/
     2359    11189    3           DO INHIBIT;
     2360    11190    3           IF P$ = ADDR(NIL) THEN
     2361    11191    3            MBLK$->KQ$MBLK.INSHD$=M$->KQ$MBLK.LNK$;
     2362    11192    3           ELSE
     2363    11193    3            P$->KQ$MBLK.LNK$=M$->KQ$MBLK.LNK$;
     2364    11194    3           MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT-1;
     2365    11195    3           IF Q = 0 THEN
     2366    11196    3            CG$->KQ$CG.STATS.CCMS=CG$->KQ$CG.STATS.CCMS-1;
     2367    11197    3           ELSE CG$->KQ$CG.STATS.CCMQ=CG$->KQ$CG.STATS.CCMQ-1;
     2368    11198    3           RETURN;
     2369    11199    3           END; /* Inhibit */
     2370    11200    2   END REMOVEI;
     2371    11201        /********************************************************
     2372    11202        *********************************************************/
     2373    11203        /**/
     2374    11204        /*D* NAME:         GETPRED
     2375    11205             PURPOSE:      To find the pred needed by REMOVE
     2376    11206        */
     2377    11207    1   GETPRED: PROC;
     2378    11208    2         P$=ADDR(NIL);
     2379    11209    2         IF MBLK$=MLH$->KQ$MLH.HEAD$ THEN RETURN;
     2380    11210    2         P$=MLH$->KQ$MLH.HEAD$;
     2381    11211    3           DO FOREVER;
     2382    11212    3           IF P$->KQ$MBLK.LNK$=MBLK$ THEN RETURN;
     2383    11213    3           P$=P$->KQ$MBLK.LNK$;
     2384    11214    3           END;
     2385    11215    2   END GETPRED;
     2386    11216        /********************************************************
     2387    11217        *********************************************************/
     2388    11218        /**/
     2389    11219        /*D* NAME:         CHECKVFC
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:69   
     2390    11220             PURPOSE:      To determine if this MBLK contains
     2391    11221                           a VFC char,  Only valid for terminals.
     2392    11222                           If so and this is a DCB or an FPRG, It deletes
     2393    11223                           the message and ALTRETURNs with MBLK$ pointing
     2394    11224                           at the next message to be checked.
     2395    11225        */
     2396    11226    1   CHECKVFC: PROC ALTRET;
     2397    11227
     2398    11228    2   DCL  ENT BIT (1) ALIGNED;
     2399    11229
     2400    11230    2         ENT = '0'B;
     2401    11231    2         GOTO CHECK;
     2402    11232    2   CHECKVFC1: ENTRY ALTRET;
     2403    11233    2         ENT = '1'B;
     2404    11234    2   CHECK: ;
     2405    11235    2         IF (MBLK$->KQ$NRMLMBLK.DVE.VFC >  %VFC_SLPP) OR
     2406    11236    2         (MBLK$->KQ$NRMLMBLK.DVE.VFC <  %VFC_OTB)
     2407    11237    2         THEN RETURN;
     2408    11238              /*  It is a SET VFC MBLK check to see if it is a DCB */
     2409    11239
     2410    11240              /* If there is no LDCT$, the station is *GORGO and the message
     2411    11241                 should be removed.                                         */
     2412    11242    2         IF (STA$->KQ$STA.LDCT$ = ADDR(NIL)) THEN GOTO DEL;
     2413    11243
     2414    11244              /* If the read is from a CGTRM or KEYIN  let it pass */
     2415    11245    2         IF (STA$->KQ$STA.LDCT$->NK$LDCT.USER = JG_KEYIN#) OR
     2416    11246    2         (STA$->KQ$STA.LDCT$->NK$LDCT.RESCOD = NK_CGTRM)
     2417    11247    2         THEN RETURN;
     2418    11248
     2419    11249              /* Funny message is bound for a DCB or an FPRG, delete it. */
     2420    11250    2         GOTO DEL;
     2421    11251    2   DELMSG: ENTRY ALTRET;    /* Always  ALTRETURNS */
     2422    11252    2         ENT = '0'B;
     2423    11253    2   DEL:  ;
     2424    11254              /* Message is bad.  Must Be Removed and Deleted */
     2425    11255    2         IF (NOT ENT) THEN CALL REMOVE;
     2426    11256    2         CALL KQU$DELMSG(CG$->KQ$CG,MBLK$->KQ$MBLK);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:70   
     2427    11257    2         IF P$ = ADDR(NIL) THEN MBLK$ = MLH$->KQ$MLH.HEAD$;
     2428    11258    2         ELSE MBLK$ = P$->KQ$MBLK.LNK$;
     2429    11259
     2430    11260    2         ALTRETURN;
     2431    11261    2   END CHECKVFC;
     2432    11262        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:71   
     2433    11263        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:72   
     2434    11264        /**/
     2435    11265        /**/
     2436    11266        /*F* NAME:         KQL$FCONT
     2437    11267             PURPOSE:      To continue a deferred fetch of a super MBLK's DBLK
     2438    11268             CALL:         KQL$FCONT (KQ$DFRPARM)
     2439    11269             DESCRIPTION:  The request for a super MBLK has been
     2440    11270                           completed.
     2441    11271        */
     2442    11272    1   KQL$FCONT: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */
     2443    11273        /**/
     2444    11274    1         DFRP$=ADDR(PARM);
     2445    11275    1         MBLK$=DFRP$->KQ$DFRPARM.INFO$;
     2446    11276    1         DBLK$=DFRP$->KQ$DFRPARM.DBLK$;
     2447    11277    1         DDA=DFRP$->KQ$DFRPARM.ERR;
     2448    11278    1         IF MBLK$->KQ$MBLK.STATE ~= KQSS_IOIP# THEN CALL SC_CGSUPR;
     2449    11279    1         CALL UNREG ALTRET(FCONT0);
     2450    11280    1         RETURN;
     2451    11281    1   FCONT0:;
     2452    11282    1         STA$=MBLK$->KQ$MBLK.STA$;
     2453    11283    1         MLH$=ADDR(STA$->KQ$STA.MLH);
     2454    11284    1         CG$=STA$->KQ$STA.CG$;
     2455    11285    1         RBLK$=STA$->KQ$STA.RBLK$;
     2456    11286    1         KEY1L=RBLK$->KQ$RBLK.KEY1L;
     2457    11287    1         KEY2L=RBLK$->KQ$RBLK.KEY2L;
     2458    11288    1         TERM=1;
     2459    11289    1         Q=0;
     2460    11290    1         FWCG=0;
     2461    11291    1         TCOUNT=STA$->KQ$STA.TCOUNT;
     2462    11292    1         CALL ENDREG ALTRET(FCONT1 /* Station disconnecting */);
     2463    11293    1         GOTO SDFIND01;
     2464    11294    1   FCONT1:;
     2465    11295    1         CALL UNLOCK;
     2466    11296    1         CALL RELMB;
     2467    11297    1         RBLK$->KQ$RBLK.ERR=KQGE_DISC#;
     2468    11298    1         GOTO NOTFOUND;
     2469    11299        /**/
     2470    11300        /*F* NAME:         KQL$SRQ
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:73   
     2471    11301             PURPOSE:      To re-try a SRCHSUPER which failed due to lack
     2472    11302                           of something.
     2473    11303             CALL:         KQL$SRQ (KQ$MBLK)
     2474    11304             DESCRIPTION:  Called from KCC$CLOCK, KQM$MM2, KQL$SQUISH
     2475    11305                           We dive back into SRCHSUPER and try the fetch
     2476    11306                           again if terminal, else un-REG the user.
     2477    11307        */
     2478    11308    1   KQL$SRQ: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */
     2479    11309        /**/
     2480    11310    1         MBLK$=ADDR(PARM);
     2481    11311    1         DBLK$=ADDR(NIL);
     2482    11312    1         CALL UNREG ALTRET(FCONT0);
     2483    11313    1         RETURN;
     2484    11314        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:74   
     2485    11315        /**/
     2486    11316        /*F* NAME:         KQL$DDFDUN
     2487    11317             PURPOSE:      To reset READ-IN-PROGRESS on a station
     2488    11318             CALL:         KQL$DDFDUN (KQ$STA);
     2489    11319             INPUT:        Station gate locked
     2490    11320             OUTPUT:       Station gate unlocked
     2491    11321             DESCRIPTION:  Releases the station MLH, processing the
     2492    11322                           DELAY$ list if required.
     2493    11323
     2494    11324                           Thus a reader calls KQL$DDFIND and if it fails,
     2495    11325                           he can muck around for as long as he wants, then
     2496    11326                           lock the station gate, set his read to PENDing,
     2497    11327                           and call KQL$DDFDUN and be sure of catching any
     2498    11328                           messages written to him since he started the
     2499    11329                           read process.
     2500    11330        */
     2501    11331    1   KQL$DDFDUN: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */
     2502    11332        /**/
     2503    11333    1         STA$=ADDR(PARM);
     2504    11334    1         CG$=STA$->KQ$STA.CG$;
     2505    11335    1         CALL DXFDUN;
     2506    11336    1         RETURN;
     2507    11337        /**/
     2508    11338        /*F* NAME:         KQL$DDFDUNL
     2509    11339             PURPOSE:      To reset read-in-progress on a station
     2510    11340             DESCRIPTION:  Same as KQL$DDFDUN but gate isn't locked coming
     2511    11341                           in
     2512    11342        */
     2513    11343    1   DDFDUNL:;
     2514    11344              %LOCK (G=STA$->KQ$STA.GATE);
     2515    11347    1         CALL DXFDUN;
     2516    11348    1         RETURN;
     2517    11349        /**/
     2518    11350    1   DXFDUN: PROC;
     2519    11351        /**/
     2520    11352    2   DCL GARB UBIN;
     2521    11353    2   DCL RCVR UBIN;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:75   
     2522    11354    2   DCL D$ PTR;
     2523    11355        /**/
     2524    11356    2         RCVR=0;
     2525    11357    2         GARB=0;
     2526    11358    2   MRG:  MLH$ = ADDR(STA$->KQ$STA.MLH);
     2527    11359    2         IF  MLH$->KQ$MLH.GACT
     2528    11360    2         AND GARB = 0 THEN GOTO MRGDUN;
     2529    11361    2         CALL KQW$XMITSELF (STA$) ALTRET(MRGDUN);
     2530    11362    2         IF ADDR(STA$->KQ$STA.MLH.DELAYDQ$)->KQ$DPTR.X.FLGS
     2531    11363    3         THEN DO;
     2532    11364    3           CALL DELCONT (MLH$->KQ$MLH);
     2533    11365    3           ADDR(STA$->KQ$STA.MLH.DELAYDQ$)->KQ$DPTR.X.FLGS='0'B;
     2534    11366    3           GOTO MRG;
     2535    11367    3           END;
     2536    11368        /**/
     2537    11369    2         IF ADDR(STA$->KQ$STA.MLH.DELAYDQ$)->KQ$DPTR.X.CODE ~= KQRA_RSTA# THEN CALL
             11369                  SC_BCGRRC;
     2538    11370
     2539    11371    2         IF RCVR = 1                    /* Ignore delayed reads during reopen */
     2540    11372    3         THEN DO;
     2541    11373    3           STA$->KQ$STA.MLH.DELAYDQ$=ADDR(NIL);
     2542    11374    3           GOTO MRG;
     2543    11375    3           END;
     2544    11376    2         MLH$->KQ$MLH.BUSY.RIP='1'B;
     2545    11377    2         IF GARB ~= 0 THEN
     2546    11378    3           DO;
     2547    11379    3           MLH$->KQ$MLH.BUSY.GIP='0'B;
     2548    11380    3           MLH$->KQ$MLH.GACT='0'B;
     2549    11381    3           END;
     2550    11382    2         D$=STA$->KQ$STA.MLH.DELAYDQ$;
     2551    11383    2         ADDR(D$)->KQ$DPTR.X='0'B;
     2552    11384    2         MLH$->KQ$MLH.RUSR#=D$->KQ$STA.USR#;
     2553    11385    2         IF MLH$->KQ$MLH.RUSR# = 0 THEN
     2554    11386    2          CALL KQL$DTCONT (STA$->KQ$STA); /* unlocks gate */
     2555    11387    2         ELSE
     2556    11388    3           DO;
     2557    11389                %UNLOCK (G=STA$->KQ$STA.GATE);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:76   
     2558    11392    3           CALL SSR$RUE (%SS_UQA,MLH$->KQ$MLH.RUSR#);
     2559    11393    3           END;
     2560    11394    2         STA$->KQ$STA.MLH.DELAYDQ$=ADDR(NIL);
     2561    11395    2         RETURN;
     2562    11396    2   MRGDUN:;
     2563    11397    2         IF GARB = 0 THEN
     2564    11398    3           DO;
     2565    11399    3           MLH$->KQ$MLH.BUSY.RIP='0'B;
     2566    11400    3           MLH$->KQ$MLH.RUSR#=0;
     2567    11401    3           IF MLH$->KQ$MLH.GACT THEN
     2568    11402    4             DO;
     2569    11403    4             MLH$->KQ$MLH.BUSY.GIP='1'B;
     2570    11404                  %UNLOCK (G=STA$->KQ$STA.GATE);
     2571    11407    4             CALL KQS$CSQUISH (CG$->KQ$CG);
     2572    11408    4             RETURN;
     2573    11409    4             END;
     2574    11410    3           END;
     2575    11411    2         ELSE
     2576    11412    3           DO;
     2577    11413    3           MLH$->KQ$MLH.BUSY.GIP='0'B;
     2578    11414    3           MLH$->KQ$MLH.GACT='0'B;
     2579    11415    3           END;
     2580    11416              %UNLOCK (G=STA$->KQ$STA.GATE);
     2581    11419    2         RETURN;
     2582    11420        /**/
     2583    11421    2   DGDUN: ENTRY;
     2584    11422        /**/
     2585    11423    2         RCVR=0;
     2586    11424    2         GARB=1;
     2587    11425    2         GOTO MRG;
     2588    11426        /**/
     2589    11427    2   DGDUNR: ENTRY;
     2590    11428        /**/
     2591    11429    2         GARB=1;
     2592    11430    2         RCVR=1;
     2593    11431    2         GOTO MRG;
     2594    11432    2   END DXFDUN;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:77   
     2595    11433        /**/
     2596    11434        /*F* NAME:         KQL$GARBDUNS
     2597    11435             PURPOSE:      To un-busy a station MLH after garbage
     2598    11436                           collection
     2599    11437             CALL:         KQL$GARBDUNS (KQ$STA)
     2600    11438             INPUT:        Station gate locked
     2601    11439             OUTPUT:       Station gate unlocked.
     2602    11440             DESCRIPTION:  Does a DDFDUN-like process of merging the
     2603    11441                           delay list in, and then exits after turning
     2604    11442                           off BUSY.GIP, and GACT.  Assumes RQGC and RQMEM
     2605    11443                           have already been checked for by the
     2606    11444                           garbage collector. */
     2607    11445    1   KQL$GARBDUNS: ENTRY (PARM) ALTRET; /* Doesn't ALTRET */
     2608    11446        /**/
     2609    11447    1         STA$=ADDR(PARM);
     2610    11448    1         CG$=STA$->KQ$STA.CG$;
     2611    11449    1         CALL DGDUN;
     2612    11450    1         RETURN;
     2613    11451        /**/
     2614    11452        /*F* NAME:         KQL$GARBDUNSR
     2615    11453             PURPOSE:      To merge a station's MLH delay list into
     2616    11454                           its message list during comgroup reopen
     2617    11455             INPUT:        Station gate unlocked
     2618    11456                           Station MLH busy flags clear
     2619    11457             OUTPUT:       Station gate unlocked.
     2620    11458             DESCRIPTION:  Just like KQL$GARBDUNS except ignores station
     2621    11459                           read requests in the delay list.
     2622    11460        */
     2623    11461    1   KQL$GARBDUNSR: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */
     2624    11462        /**/
     2625    11463    1         STA$=ADDR(PARM);
     2626    11464    1         CG$=STA$->KQ$STA.CG$;
     2627    11465              %LOCK (G=STA$->KQ$STA.GATE);
     2628    11468    1         CALL DGDUNR;
     2629    11469    1         RETURN;
     2630    11470        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:78   
     2631    11471        /**/
     2632    11472        /*F* NAME:         KQL$QDFDUN
     2633    11473             PURPOSE:      To reset read-in-progress for the queue and station
     2634    11474             CALL:         KQL$QDFDUN (KQ$STA)
     2635    11475             INPUT:        Q gate locked, caller is sole reader of queue
     2636    11476             DESCRIPTION:  Writes all delayed messages into the queue.
     2637    11477                           Then gives queue to next guy waiting for it,
     2638    11478                           or resets queue RIP.  Unlocks queue gate
     2639    11479                           Then does a KQL$DDFDUNL
     2640    11480                           and returns.
     2641    11481        */
     2642    11482    1   KQL$QDFDUN: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */
     2643    11483        /**/
     2644    11484    1         CALL QFDUN;
     2645    11485    1         GOTO DDFDUNL;
     2646    11486        /**/
     2647    11487        /*F* NAME:         KQL$QXFDUN
     2648    11488             PURPOSE:      To reset read-in-progress for the queue only
     2649    11489             CALL:         KQL$QXFDUN (KQ$STA)
     2650    11490             DESCRIPTION:  Like KQL$QDFDUN but does not do a DDFDUN
     2651    11491                           when finished.
     2652    11492        */
     2653    11493    1   KQL$QXFDUN: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */
     2654    11494        /**/
     2655    11495    1         CALL QFDUN;
     2656    11496    1         RETURN;
     2657    11497        /**/
     2658    11498    1   QFDUN: PROC;
     2659    11499        /**/
     2660    11500    2   DCL GARB UBIN;
     2661    11501    2   DCL D$ PTR;
     2662    11502        /**/
     2663    11503    2         STA$=ADDR(PARM);
     2664    11504    2         CG$=STA$->KQ$STA.CG$;
     2665    11505    2         GARB=0;
     2666    11506    2   MRG:  IF  KQ$QUEUE.GACT
     2667    11507    2         AND GARB = 0 THEN GOTO MRGDUN;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:79   
     2668    11508    2         CALL KQW$XMITQ (CG$) ALTRET(MRGDUN);
     2669    11509                 /* Note that the ANON-Q does not use the KQ$DPTR.X.FLGS facility */
     2670    11510    2         IF ADDR(KQ$QUEUE.DELAYDQ$)->KQ$DPTR.X.CODE ~= KQRA_RSTA# THEN CALL SC_BCGRRC;
     2671    11511
     2672    11512    2         KQ$QUEUE.BUSY.RIP='1'B;
     2673    11513    2         IF GARB ~= 0 THEN
     2674    11514    3           DO;
     2675    11515    3           KQ$QUEUE.BUSY.GIP='0'B;
     2676    11516    3           KQ$QUEUE.GACT='0'B;
     2677    11517    3           END;
     2678    11518    2         D$=KQ$QUEUE.DELAYDQ$;
     2679    11519    2         ADDR(D$)->KQ$DPTR.X='0'B;
     2680    11520    2         KQ$QUEUE.RUSR#=D$->KQ$STA.USR#;
     2681    11521    2         KQ$QUEUE.DELAYDQ$=ADDR(NIL);
     2682    11522              %UNLOCK (G=KQ$QTREE.GATE);
     2683    11525    2         CALL SSR$RUE(%SS_UQA,D$->KQ$STA.USR#);
     2684    11526    2         RETURN;
     2685    11527    2   MRGDUN:;
     2686    11528    2         IF GARB = 0 THEN
     2687    11529    3           DO;
     2688    11530    3           KQ$QUEUE.BUSY.RIP='0'B;
     2689    11531    3           KQ$QUEUE.RUSR#=0;
     2690    11532    3           IF KQ$QUEUE.GACT THEN
     2691    11533    4             DO;
     2692    11534    4             KQ$QUEUE.BUSY.GIP='1'B;
     2693    11535                  %UNLOCK (G=KQ$QTREE.GATE);
     2694    11538    4             CALL KQS$CQUEUE (CG$->KQ$CG);
     2695    11539    4             RETURN;
     2696    11540    4             END;
     2697    11541    3           END;
     2698    11542    2         ELSE
     2699    11543    3           DO;
     2700    11544    3           KQ$QUEUE.BUSY.GIP='0'B;
     2701    11545    3           KQ$QUEUE.GACT='0'B;
     2702    11546    3           END;
     2703    11547              %UNLOCK (G=KQ$QTREE.GATE);
     2704    11550    2         RETURN;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:80   
     2705    11551        /**/
     2706    11552    2   QGDUN: ENTRY;
     2707    11553        /**/
     2708    11554    2         CG$=ADDR(PARM);
     2709    11555    2         GARB=1;
     2710    11556    2         GOTO MRG;
     2711    11557    2   END QFDUN;
     2712    11558        /**/
     2713    11559        /*F* NAME:        KQL$GARBDUNQ
     2714    11560             PURPOSE:     To reset read-in-progress for the queue
     2715    11561             CALL:        KQL$GARBDUNQ (KQ$CG)
     2716    11562             INPUT:       Q gate locked, caller is sole reader of queue
     2717    11563             DESCRIPTION: Writes all delayed messages into the queue
     2718    11564                          and then resets BUSY.GIP and GACT. If a delayed
     2719    11565                          reader is found while processing the DELAY$ list,
     2720    11566                          BUSY.GIP and GACT are reset, BUSY.RIP is set,
     2721    11567                          and the queue is given up to that reader.
     2722    11568        */
     2723    11569    1   KQL$GARBDUNQ: ENTRY(PARM) ALTRET; /* !!Doesn't ALTRET!! */
     2724    11570        /**/
     2725    11571    1         CALL QGDUN;
     2726    11572    1         RETURN;
     2727    11573        /**/
     2728    11574    1   END KQL$DELMLHR;
     2729    11575        %EOD;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:81   
--  Include file information  --

   EL$TABLES.:E05TOU  is referenced.
   KC_CP6.:E05TOU  is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   NK_SUBS.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   NK$LDCT.:E05TOU  is referenced.
   KQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQL$DELMLHR.

   Procedure KQL$DELMLHR requires 3295 words for executable code.
   Procedure KQL$DELMLHR requires 58 words of local(AUTO) storage.

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:82   

 Object Unit name= KQL$DELMLHR                                File name= KQL$LIST.:E05TOU
 UTS= JUL 30 '97 01:29:56.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none  3295   6337  KQL$DELMLHR
    1  RoData even  none    30     36  KQL$DELMLHR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  KQL$DELMLHR
     0     14          yes     yes      Std        2  KQL$DELMLH
     0     27          yes     yes      Std        1  KQL$CHKMLH
     0    240          yes     yes      Std        3  KQL$INSERT
     0    630          yes     yes      Std        3  KQL$INSERTF
     0    642          yes     yes      Std        2  KQL$MERGEMLH
     0    717          yes     yes      Std        2  KQL$DTFIND
     0    725          yes     yes      Std        1  KQL$DTCONT
     0    743          yes     yes      Std        2  KQL$DDFIND
     0   1126          yes     yes      Std        1  KQL$DFFIND
     0   1143          yes     yes      Std        2  KQL$QDFIND
     0   1227          yes     yes      Std        1  KQL$QFFIND
     0   5553          yes     yes      Std        1  KQL$FCONT
     0   5646          yes     yes      Std        1  KQL$SRQ
     0   5657          yes     yes      Std        1  KQL$DDFDUN
     0   6115          yes     yes      Std        1  KQL$GARBDUNS
     0   6127          yes     yes      Std        1  KQL$GARBDUNSR
     0   6150          yes     yes      Std        1  KQL$QDFDUN
     0   6155          yes     yes      Std        1  KQL$QXFDUN
     0   6332          yes     yes      Std        1  KQL$GARBDUNQ
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:83   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       3 SSR$REG
 yes     yes           Std       2 KQL$MDELAYM
 yes     yes           Std       2 KQL$MDELAYR
         yes           Std       1 HFC$LOCK
         yes           Std       1 KQX$SETTIME
 yes     yes           Std       1 KQG$GOTMSG
 yes     yes           Std       1 KQG$GOTMSGSTA
 yes     yes           Std       2 KQL$COUNTDLY
 yes     yes           Std       3 KQD$DELDDA
 yes     yes           Std       3 KQM$GETMBLK
 yes     yes           Std       3 KQM$GETB
 yes     yes           Std       2 KQF$CHKMSG
 yes     yes           Std       2 KQU$DELMSG
 yes     yes           Std       1 KQX$CHKTIME
 yes     yes           Std       2 KQF$GOTMSG
 yes     yes           Std       2 KQD$DELETE
 yes     yes           Std       2 KQD$UNLOCK
 yes     yes           Std       2 KQD$UPDATED
 yes     yes           Std       2 KQD$UPDATE
 yes     yes           Std       8 KQZ$LOG
 yes     yes           Std       1 KQD$ERRLOG
 yes     yes           Std       2 KQM$RELMBLK
 yes     yes           Std       3 KQD$FETCH
 yes     yes           Std       1 KQS$CSQUISH
 yes     yes           Std       3 KQD$DEFERGO
 yes     yes           Std       1 KQS$CQUEUE
 yes     yes           Std       3 KQM$GETBM
         yes           Std       4 SSR$RUE
 yes     yes           Std       1 KQW$XMITSELF
 yes     yes           Std       1 KQW$XMITQ
 yes     yes           Std       1 KQL$FCONT
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:84   
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_CGSUPR                             SC_BCGXRL                             SC_BCGRRC
     SC_CGSUSN                             KQ_DEBUG                              KQ_LOG
     KQ_ERRLOG_GATE                        KQ_IMLH                               S_CUN
     KQ_ERRLOG_BFR                         B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:85   


        1        1        /*M* KQL$LIST COMGROUP routines for manipulating MBLK lists */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         KQL$LIST
       10       10             PURPOSE:      To provide COMGROUP routines for manipulation of
       11       11                           MBLK lists
       12       12             DESCRIPTION:  Contains routines for insertion into, searching of,
       13       13                           deletion of, and checking of, MBLK lists defined by
       14       14                           an MBLK list head (KQ_MLH).
       15       15        */
       16       16        /**/
       17       17        /*I* NAME:         MBLK lists
       18       18
       19       19            The MLH (MBLK list header) is one of the central structures
       20       20        of comgroups.  With few exceptions, a message resides
       21       21        in an MBLK list headed by an MLH unless it is actually
       22       22        being read.
       23       23            MBLK lists are not simply linear linklists of MBLKs.
       24       24        They have a richness of structure because of the complex
       25       25        ways in which they are accessed.
       26       26            MBLK lists are accessed in the following ways:
       27       27
       28       28                 o insertion of a single message
       29       29                 o deletion of the entire list
       30       30                 o 'reading' for a single message
       31       31                   satisfying a set of criteria
       32       32                 o 'scanning' for all messages
       33       33                   satisfying a set of criteria
       34       34                 o 'garbage collection': that is,
       35       35                   spilling MBLKs to disk
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:86   
       36       36
       37       37            All of these listed operations except the last,
       38       38        are implemented by KQL$LIST:
       39       39
       40       40                 o KQL$INSERT (insertion)
       41       41                 o KQL$DELMLH (deletion)
       42       42                 o KQL$DDFIND (reading)
       43       43                   KQL$DTFIND (  "    )
       44       44                   KQL$QDFIND (  "    )
       45       45                 o KQL$DFFIND (scanning)
       46       46                   KQL$QFFIND (scanning)
       47       47
       48       48            An MBLK list, headed by an MLH, is 'busy' if it
       49       49        is being accessed in such a way as to require the
       50       50        list to be static, that is, unchanging.  This condition
       51       51        is signalled by MLH.BUSY being nonzero, and requires
       52       52        the insert process to add the inserted message not to
       53       53        the list itself, but to a 'delayed operation' list
       54       54        headed by MLH.DELAY$.  Processes which set BUSY must,
       55       55        upon completion of their labours, merge the DELAY$
       56       56        list into the true list.
       57       57            The most important such process is the read case.
       58       58        Here, someone is searching for a single message of
       59       59        a particular kind.  If one is found, it will be
       60       60        removed.  If one is not found, the read request will
       61       61        be set pending.  The message delivery logic will
       62       62        first attempt to satisfy a pending read, and if
       63       63        an appropriate read is not pending, insert the
       64       64        message in the list.  Thus, we have a window
       65       65        during which the reader is searching the list
       66       66        and a writer may write an appropriate message.
       67       67        If the writer is permitted to insert the message,
       68       68        then the reader may miss it and falsly set the
       69       69        read pending.  The solution to this is to
       70       70        'write' the DELAY$ list (of messages written
       71       71        while BUSY was set) using the message delivery
       72       72        logic, when the search is complete.  Hence the
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:87   
       73       73        setting of BUSY by the various FIND routines,
       74       74        and the corresponding call to KQL$XXFDUN when
       75       75        the read has been set pending.
       76       76
       77       77            In fact, this process is a bit more complex.  In
       78       78        order to ensure that writes AND reads are processed in
       79       79        the correct chronological order, the 'delayed operation'
       80       80        list contains both messages to be written into the MLH,
       81       81        and read requests.  The delay list is circular, and
       82       82        DELAY$ points to the tail item.  Thus when anyone
       83       83        finishes with the MLH, he simply processes the list
       84       84        from head to tail, until encountering a read request.
       85       85        When he does, he gives the MLH to that reader and
       86       86        exits.
       87       87            Requests by the garbage collector are entered by
       88       88        him setting GACT.  When someone finishes with the
       89       89        MLH he sees GACT and gives the MLH away to the GC
       90       90        (garbage collector).
       91       91            MLH.RUSR# is the user number of the user currently
       92       92        reading the MLH, or zero if the reader is a terminal
       93       93        station.  This allows any station to read any other
       94       94        station's MLH by simply calling KQL$DDFIND with the
       95       95        appropriate parameters.  The item entered in the
       96       96        delay queue by a requesting reader is his OWN station
       97       97        block.  Thus when he gets the MLH, the guy giving
       98       98        it to him checks to see if he's a DCB or terminal
       99       99        station.  If the former, RUSR# is set to the DCB station's
      100      100        user # and the user is unREGed.  Else RUSR# is set to zero
      101      101        and KQL$DTCONT is called passing the KQ$STA of the
      102      102        station owning the MLH (the reading terminal is expected
      103      103        to have his own way of figuring out who he himself
      104      104        is).
      105      105
      106      106            The access the the anonymous queue MLHs is
      107      107        resolved at the level of the whole queue, which has
      108      108        a delay scheme exactly parallel to that of an individual
      109      109        MLH.
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:88   
      110      110
      111      111            MBLK lists may be garbage-collected by
      112      112        the garbage collector KQS$SCUM.  In brief,
      113      113        this process involves taking many MBLKs out
      114      114        of the list, writing them to disk, and
      115      115        replacing them in the list by a 'super' MBLK,
      116      116        one which points to the DBLK(s) in which
      117      117        they live on disk.  Almost all of the
      118      118        complexity of KQL$LIST derives from this
      119      119        spillage.  Were it not sometimes necessary
      120      120        to go to disk to seach an MBLK list, the
      121      121        entire search/read process could be conducted
      122      122        with the appropriate gate locked, and with
      123      123        all contention for the list being resolved
      124      124        by the gate.  Going to disk involves waiting
      125      125        (REG or delay) for the I/O to complete,
      126      126        during which time the associated gate must
      127      127        be unlocked, and the contention problem must
      128      128        be resolved another way, as explained below.
      129      129
      130      130            This scheme is complicated when a reader
      131      131        finds his desired message on disk within
      132      132        a garbage-collected MBLK list, but can't get
      133      133        memory to move the MBLK into.  If he were simply
      134      134        to post a request for memory and REG, a deadly
      135      135        embrace could result if all available memory
      136      136        were tied up by MBLKs in the queue, since the
      137      137        GC can't get at it (due to BUSY.RIP).  In fact,
      138      138        the memory request will cause the GC to be
      139      139        activated, and the first thing he'll want to
      140      140        do is garbage collect the queue.  Since
      141      141        BUSY.RIP is set, he'd just set GACT and go
      142      142        away - instant cold meat.  This strange
      143      143        case is resolved thusly.  When the reader
      144      144        wants to REG for memory, he
      145      145        sets RQMEM (reader queued for memory), and
      146      146        then gooses the GC if it's waiting.
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:89   
      147      147        Eventually the
      148      148        reader gets unblocked via memory becoming available
      149      149        (or by the comgroup being deemed full), and wakes
      150      150        up.  Note that the GC may still be running at
      151      151        this time, and in particular may still be looking
      152      152        at the queue.  Thus the reader examines QUEUE.GACT,
      153      153        and if it's set, sets QUEUE.RQGC (queued for the
      154      154        GC), and REGs again.  The GC, when he's finished
      155      155        with the queue, sees QUEUE.RQGC, and kicks the reader, who
      156      156        then starts at FDA of the super MBLK which contained
      157      157        his desired message, and reads 'till he finds the
      158      158        message he wants.  This requires the GC to not
      159      159        concatenate that particular super MBLK with others;
      160      160        he avoids this by recognizing certain flags set by
      161      161        the reader in the super MBLK before he went to
      162      162        sleep.
      163      163            One might think that this starting over at
      164      164        FDA business is wrong for M$FWCG, because after
      165      165        all in that case we are interested in all messages
      166      166        of a certain class, not just one, and we will then
      167      167        be scanning messages twice.  However, the M$FWCG
      168      168        (or 'search') process only finds itself in this
      169      169        situation when it needs to move an MBLK on disk
      170      170        into memory.  Now, this only happens if the funciton
      171      171        is DELETE or REATTR.  By definition, then, all
      172      172        qualifying messages in the super MBLK's disk chain
      173      173        before the one which caused the REG have already
      174      174        been removed.
      175      175
      176      176        */
      177      177        /**/
      178      178        KQL$DELMLHR: PROC (PARM,PARM$,PARM2) ALTRET;

    178  0 000000   000000 700200 xent  KQL$DELMLHR  TSX0  ! X66_AUTO_3
         0 000001   000072 000003                    ZERO    58,3

      179      179        /**/
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:90   
      180      180
      181      181
      182      182
      183      183        /**/
      184      184        /* INCLUDES */
      185      185        /**/
      186      186        %INCLUDE KQ_SUBS_C;
      187      486        %INCLUDE KQ_MAC_C;
      188     3036        %INCLUDE HF_LOCK_C;
      189     3050        %INCLUDE KQ_DATA_R;
      190     3882        %INCLUDE NK$LDCT;
      191     3984        %INCLUDE NK_VFC_C;
      192     4058        %INCLUDE NK_SUBS;
      193     4083        %INCLUDE JG_GHOSTS_C;
      194     4173        %INCLUDE CP_6_SUBS;
      195     4713        %INCLUDE SS_SCHED_C;
      196     4946        %INCLUDE KC$CP6V_C;
      197     5066        %INCLUDE KC_CP6;
      198     5626        %INCLUDE EL$TABLES;
      199     5949
      200     5950
      201     5951
      202     5952        /**/
      203     5953        /* PARAMETERS */
      204     5954        /**/
      205     5955    1   DCL PARM UBIN;
      206     5956    1   DCL PARM$ PTR;
      207     5957    1   DCL PARM$R REDEF PARM$ SBIN;
      208     5958    1   DCL PARM2 UBIN;
      209     5959    1   DCL PARM2R$ REDEF PARM2 PTR;
      210     5960
      211     5961
      212     5962
      213     5963        /**/
      214     5964        /* BASED STRUCTURES */
      215     5965        /**/
      216     5966    1   DCL B$$PTR PTR BASED ALIGNED;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:91   
      217     5967    1   DCL 1 B$$UPARM BASED ALIGNED,
      218     5968    1         2 DISP UBIN(18) UNAL,
      219     5969    1         2 ERR  UBIN(6)  UNAL,
      220     5970    1         2 SID  UBIN(12) UNAL;
      221     5971        %NK$LDCT;
      222     6017        %KQ_CG   (FPTN=KQ$CG  ,STCLASS="BASED(CG$)");
      223     6756        %KQ_STA  (FPTN=KQ$STA ,STCLASS="BASED(STA$)");
      224     7095        %KQ_RBLK (FPTN=KQ$RBLK,STCLASS="BASED(RBLK$)");
      225     7281        %KQ_MBLK (FPTN=KQ$MBLK,STCLASS="BASED(MBLK$)",SUPR=1);
      226     7551        %KQ_MLH  (FPTN=KQ$MLH ,STCLASS="BASED(MLH$)");
      227     7621        %KQ_FWP  (FPTN=KQ$FWP ,STCLASS="BASED(FWP$)");
      228     7722        %KQ_THDR (FPTN=KQ$THDR,STCLASS=BASED);
      229     7760        %KQ_DBLK (FPTN=KQ$DBLK,STCLASS="BASED(DBLK$)");
      230     7813        %KQ_QTN  (FPTN=KQ$QTN ,STCLASS="BASED(QTN$)");
      231     8286        %KQ_DFRPARM (FPTN=KQ$DFRPARM,STCLASS="BASED(DFRP$)");
      232     8315        %KQ_DFRBLK (FPTN=KQ$DFRBLK,STCLASS=BASED);
      233     8365        %KQ_MBLK (FPTN=KQ$NRMLMBLK,STCLASS="BASED(MBLK$)",SUPR=0);
      234     8635        %KQ_RBLK (FPTN=KQ$RBLKT,STCLASS="BASED(RBLK$)",TERM=1);
      235     8821        %KQ$DPTR;
      236     8848    1   DCL B$$KEY1 CHAR(KEY1L) BASED ALIGNED;
      237     8849    1   DCL B$$KEY2 CHAR(KEY2L) BASED ALIGNED;
      238     8850    1   DCL B$$CHARS CHAR(I) BASED UNAL;
      239     8851
      240     8852
      241     8853
      242     8854        /**/
      243     8855        /* AUTO */
      244     8856        /**/
      245     8857    1   DCL TIMCHK BIT(72) DALIGNED;
      246     8858    1   DCL STA$ PTR;
      247     8859    1   DCL RBLK$ PTR;
      248     8860    1   DCL MBLK$ PTR;
      249     8861    1   DCL MBLK$R REDEF MBLK$ SBIN;
      250     8862    1   DCL CG$ PTR;
      251     8863    1   DCL KEY1L UBIN HALF HALIGNED;
      252     8864    1   DCL KEY2L UBIN HALF HALIGNED;
      253     8865    1   DCL P$ PTR;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:92   
      254     8866    1   DCL DFRP$ PTR;
      255     8867    1   DCL DBLK$ PTR;
      256     8868    1   DCL DBLK$R REDEF DBLK$ UBIN;
      257     8869    1   DCL I SBIN;
      258     8870    1   DCL DDA UBIN;
      259     8871    1   DCL RCVR UBIN;
      260     8872    1   DCL MLH$ PTR;
      261     8873    1   DCL Q UBIN;
      262     8874    1   DCL TERM UBIN;
      263     8875    1   DCL FOUNDIT SBIN;
      264     8876    1   DCL ENTFLAG UBIN;
      265     8877    1   DCL J SBIN;
      266     8878    1   DCL MBS UBIN;
      267     8879    1   DCL M$ PTR;
      268     8880    1   DCL X$ PTR;
      269     8881    1   DCL Z$ PTR;
      270     8882    1   DCL QTN$ PTR;
      271     8883    1   DCL FWP$ PTR;
      272     8884    1   DCL FWCG REDEF FWP$ UBIN;
      273     8885    1   DCL TCOUNT SBIN;
      274     8886
      275     8887
      276     8888
      277     8889        /**/
      278     8890        /* REFS */
      279     8891        /**/
      280     8892    1   DCL KQD$DEFERGO   ENTRY(3) ALTRET;
      281     8893    1   DCL KQD$DELDDA    ENTRY(3) ALTRET;
      282     8894    1   DCL KQD$DELETE    ENTRY(2) ALTRET;
      283     8895    1   DCL KQD$ERRLOG    ENTRY(1) ALTRET;
      284     8896    1   DCL KQD$FETCH     ENTRY(3) ALTRET;
      285     8897    1   DCL KQD$UNLOCK    ENTRY(2) ALTRET;
      286     8898    1   DCL KQD$UPDATE    ENTRY(2) ALTRET;
      287     8899    1   DCL KQD$UPDATED   ENTRY(2) ALTRET;
      288     8900    1   DCL KQF$CHKMSG    ENTRY(2) ALTRET;
      289     8901    1   DCL KQF$GOTMSG    ENTRY(2) ALTRET;
      290     8902    1   DCL KQG$GOTMSG    ENTRY(1) ALTRET;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:93   
      291     8903    1   DCL KQG$GOTMSGSTA ENTRY(1) ALTRET;
      292     8904    1   DCL KQL$COUNTDLY  ENTRY(2) ALTRET;
      293     8905    1   DCL KQL$MDELAYM   ENTRY(2) ALTRET;
      294     8906    1   DCL KQL$MDELAYR   ENTRY(2) ALTRET;
      295     8907    1   DCL KQM$GETB      ENTRY(3) ALTRET;
      296     8908    1   DCL KQM$GETBM     ENTRY(3) ALTRET;
      297     8909    1   DCL KQM$GETMBLK   ENTRY(3) ALTRET;
      298     8910    1   DCL KQM$RELMBLK   ENTRY(2) ALTRET;
      299     8911    1   DCL KQS$CQUEUE    ENTRY(1) ALTRET;
      300     8912    1   DCL KQS$CSQUISH   ENTRY(1) ALTRET;
      301     8913    1   DCL KQU$DELMSG    ENTRY(2) ALTRET;
      302     8914    1   DCL KQW$XMITQ     ENTRY(1) ALTRET;
      303     8915    1   DCL KQW$XMITSELF  ENTRY(1) ALTRET;
      304     8916    1   DCL KQX$CHKTIME   ENTRY(1) ALTRET;
      305     8917    1   DCL KQX$SETTIME   ENTRY(1);
      306     8918    1   DCL KQZ$LOG       ENTRY(8) ALTRET;
      307     8919    1   DCL SC_BCGRRC     ENTRY    CONV(2,0);
      308     8920    1   DCL SC_BCGXRL     ENTRY    CONV(2,0);
      309     8921    1   DCL SC_CGSUPR     ENTRY    CONV(2,0);
      310     8922    1   DCL SC_CGSUSN     ENTRY    CONV(2,0);
      311     8923    1   DCL SSR$REG       ENTRY(3) ALTRET;
      312     8924    1   DCL SSR$RUE       ENTRY(4);
      313     8925    1   DCL S_CUN UBIN WORD SYMREF;
      314     8926        %EL$CGERR (NAME=KQ_ERRLOG_BFR,STCLASS=SYMREF,N=50);
      315     8930
      316     8931
      317     8932
      318     8933        /**/
      319     8934        /* SUBS */
      320     8935        /**/
      321     8936        %SUB KQ$QTREE="CG$->KQ$CG.QUEUE.QTREE$->KQ$THDR";
      322     8937        %SUB KQ$QUEUE="CG$->KQ$CG.QUEUE";
      323     8938        %SUB KQ$STREE="CG$->KQ$CG.STREE";
      324     8939        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:94   
      325     8940        /*
      326     8941              DDDD   EEEEE  L      EEEEE  TTTTT  EEEEE
      327     8942              D   D  E      L      E        T    E
      328     8943              D   D  E      L      E        T    E
      329     8944              D   D  EEEE   L      EEEE     T    EEEE
      330     8945              D   D  E      L      E        T    E
      331     8946              D   D  E      L      E        T    E
      332     8947              DDDD   EEEEE  LLLLL  EEEEE    T    EEEEE
      333     8948        */
      334     8949        /**/
      335     8950        /*F* NAME:         KQL$DELMLHR
      336     8951             PURPOSE:      To delete an MLH
      337     8952             CALL:         KQL$DELMLHR (KQ$CG,MLH$)
      338     8953             DESCRIPTION:  See DELMLH
      339     8954
      340     8955        KQL$DELMLHR: ENTRY (PARM,PARM$) ALTRET;    !!Doesn't ALTRET!! */
      341     8956        /**/
      342     8957    1         CG$=ADDR(PARM);

   8957  0 000002   200003 236100                    LDQ     @PARM,,AUTO
         0 000003   200013 756100                    STQ     CG$,,AUTO

      343     8958    1         RCVR=1;

   8958  0 000004   000001 235007                    LDA     1,DL
         0 000005   200023 755100                    STA     RCVR,,AUTO

      344     8959    1         CALL DELMLH (PARM$->KQ$MLH);

   8959  0 000006   200004 470500                    LDP0    @PARM$,,AUTO
         0 000007   000000 471500                    LDP1    0,,PR0
         0 000010   200047 451500                    STP1    SAVP$+1,,AUTO
         0 000011   000036 701000 0                  TSX1    DELMLH
         0 000012   000000 011000                    NOP     0

      345     8960    1         RETURN;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:95   
   8960  0 000013   000000 702200 xent               TSX2  ! X66_ARET

      346     8961        /**/
      347     8962        /*F* NAME:         KQL$DELMLH
      348     8963             PURPOSE:      To delete an MLH
      349     8964             CALL:         KQL$DELMLH (KQ$CG,MLH$)
      350     8965             DESCRIPTION:  See DELMLH
      351     8966        */
      352     8967    1   KQL$DELMLH: ENTRY (PARM,PARM$) ALTRET; /* !!Doesn't ALTRET!! */

   8967  0 000014   000000 700200 xent  KQL$DELMLH   TSX0  ! X66_AUTO_3
         0 000015   000072 000003                    ZERO    58,3

      353     8968        /**/
      354     8969    1         CG$=ADDR(PARM);

   8969  0 000016   200003 236100                    LDQ     @PARM,,AUTO
         0 000017   200013 756100                    STQ     CG$,,AUTO

      355     8970    1         RCVR=0;

   8970  0 000020   200023 450100                    STZ     RCVR,,AUTO

      356     8971    1         CALL DELMLH (PARM$->KQ$MLH);

   8971  0 000021   200004 470500                    LDP0    @PARM$,,AUTO
         0 000022   000000 471500                    LDP1    0,,PR0
         0 000023   200047 451500                    STP1    SAVP$+1,,AUTO
         0 000024   000036 701000 0                  TSX1    DELMLH
         0 000025   000000 011000                    NOP     0

      357     8972    1         RETURN;

   8972  0 000026   000000 702200 xent               TSX2  ! X66_ARET

      358     8973        /**/
      359     8974        /*F* NAME:         KQL$CHKMLH
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:96   
      360     8975             PURPOSE:      To check if an MLH is empty
      361     8976             CALL:         KQL$CHKMLH (KQ$MLH)
      362     8977             DESCRIPTION:  ALTRETs if nonempty
      363     8978        */
      364     8979    1   KQL$CHKMLH: ENTRY (PARM) ALTRET;

   8979  0 000027   000000 700200 xent  KQL$CHKMLH   TSX0  ! X66_AUTO_3
         0 000030   000072 000003                    ZERO    58,3

      365     8980        /**/
      366     8981    1         CALL CHKMLH (PARM) ALTRET(ALTRT);

   8981  0 000031   200003 236100                    LDQ     @PARM,,AUTO
         0 000032   200047 756100                    STQ     SAVP$+1,,AUTO
         0 000033   000217 701000 0                  TSX1    CHKMLH
         0 000034   001740 702000 0                  TSX2    ALTRT

      367     8982    1         RETURN;

   8982  0 000035   000000 702200 xent               TSX2  ! X66_ARET

      368     8983        /****************************************************************
      369     8984        *****************************************************************/
      370     8985        /*D* NAME:         DELMLH
      371     8986             PURPOSE:      To delete the messages in an MLH
      372     8987             DESCRIPTION:  Moves it onto the DELMSG$ list and sets the
      373     8988                           MLH to fresh.
      374     8989                           Adjusts KQ$CG.STATS.CCMS(Q) by the count in
      375     8990                           the deleted MLH.
      376     8991
      377     8992                           If the MLH is being played with or RCVR is set,
      378     8993                           then we just set the DELETE bit in the pointer
      379     8994                           on the tail of the DELAY$ list and go
      380     8995                           away.  The deletion will be performed
      381     8996                           at the proper time.
      382     8997
      383     8998                           The gate for the MLH in question is assumed to be
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:97   
      384     8999                           locked upon entry, and is not touched throughout.
      385     9000        */
      386     9001    1   DELMLH: PROC (KQ$MLH) ALTRET; /* !!Doesn't ALTRET!! */

   9001  0 000036   200046 741300       DELMLH       STX1  ! D$+1,,AUTO

      387     9002        /**/
      388     9003        %KQ_MLH (FPTN=KQ$MLH,STCLASS="");
      389     9073    2   DCL H$ PTR;
      390     9074    2   DCL T$ PTR;
      391     9075        /**/
      392     9076    2         IF KQ$MLH.BUSY OR RCVR=1 THEN

   9076  0 000037   200047 470500                    LDP0    @KQ$MLH,,AUTO
         0 000040   000003 236100                    LDQ     3,,PR0
         0 000041   000600 316003                    CANQ    384,DU
         0 000042   000046 601000 0                  TNZ     s:9078
         0 000043   200023 235100                    LDA     RCVR,,AUTO
         0 000044   000001 115007                    CMPA    1,DL
         0 000045   000113 601000 0                  TNZ     s:9101+2

      393     9077    3           DO;

      394     9078    3           H$=KQ$MLH.DELAY$;

   9078  0 000046   000002 236100                    LDQ     2,,PR0
         0 000047   200050 756100                    STQ     H$,,AUTO

      395     9079    3           ADDR(H$)->KQ$DPTR.X='0'B;

   9079  0 000050   000000 236003                    LDQ     0,DU
         0 000051   200050 752104                    STCQ    H$,'04'O,AUTO

      396     9080    3           IF H$ = ADDR(NIL) THEN

   9080  0 000052   200050 236100                    LDQ     H$,,AUTO
         0 000053   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:98   
         0 000054   000062 601000 0                  TNZ     s:9083

      397     9081    3            ADDR(KQ$MLH.DELAY$)->KQ$DPTR.X.FLGS='1'B;

   9081  0 000055   000002 236100                    LDQ     2,,PR0
         0 000056   000000 376000 1                  ANQ     0
         0 000057   400000 276007                    ORQ     -131072,DL
         0 000060   000002 756100                    STQ     2,,PR0
         0 000061   000111 710000 0                  TRA     s:9101

      398     9082    3           ELSE
      399     9083    4             DO CASE (ADDR(KQ$MLH.DELAY$)->KQ$DPTR.X.CODE);

   9083  0 000062   000002 236100                    LDQ     2,,PR0
         0 000063   000014 772000                    QRL     12
         0 000064   000007 376007                    ANQ     7,DL
         0 000065   000003 116007                    CMPQ    3,DL
         0 000066   000070 602006 0                  TNC     s:9083+6,QL
         0 000067   000107 710000 0                  TRA     s:9089
         0 000070   000107 710000 0                  TRA     s:9089
         0 000071   000073 710000 0                  TRA     s:9085
         0 000072   000101 710000 0                  TRA     s:9087

      400     9084    4               CASE (KQRA_MBLK#);

      401     9085    4                 ADDR(H$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS='1'B;

   9085  0 000073   200050 471500                    LDP1    H$,,AUTO
         0 000074   100000 236100                    LDQ     0,,PR1
         0 000075   000000 376000 1                  ANQ     0
         0 000076   400000 276007                    ORQ     -131072,DL
         0 000077   100000 756100                    STQ     0,,PR1
         0 000100   000111 710000 0                  TRA     s:9101

      402     9086    4               CASE (KQRA_RSTA#);

      403     9087    4                 ADDR(H$->KQ$STA.RQLNK$)->KQ$DPTR.X.FLGS='1'B;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:99   

   9087  0 000101   200050 471500                    LDP1    H$,,AUTO
         0 000102   100030 236100                    LDQ     24,,PR1
         0 000103   000000 376000 1                  ANQ     0
         0 000104   400000 276007                    ORQ     -131072,DL
         0 000105   100030 756100                    STQ     24,,PR1
         0 000106   000111 710000 0                  TRA     s:9101

      404     9088    4               CASE (ELSE);

      405     9089    4                 CALL SC_BCGRRC;

   9089  0 000107   000000 713400 xsym               CLIMB   SC_BCGRRC
         0 000110   000000 600000 xsid               climb   nvectors=         0

      406     9090        /*S* SCREECH_CODE: KQL-S$BCGRRC
      407     9091             TYPE:         SCREECH
      408     9092             MESSAGE:      COMGROUP read request list inconsistency
      409     9093             REMARKS:      A read request list has been clobbered and
      410     9094                           the comgroup cannot recover from this.  Note
      411     9095                           that when the comgroup is reopened special
      412     9096                           care must be excercised to prevent this
      413     9097                           screech from simply occuring again.  Note
      414     9098                           also that messages may be lost as a result
      415     9099                           of this error. */
      416     9100    4             END;

      417     9101    3           RETURN;

   9101  0 000111   200046 221300                    LDX1  ! D$+1,,AUTO
         0 000112   000001 702211                    TSX2  ! 1,X1
         0 000113   000115 710000 0                  TRA     s:9106

      418     9102    3           END;
      419     9103        /**/
      420     9104    2   DELCONT: ENTRY (KQ$MLH) ALTRET; /* !!Doesn't ALTRET!! */

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:100  
   9104  0 000114   200046 741300       DELCONT      STX1  ! D$+1,,AUTO

      421     9105        /**/
      422     9106    2         CALL CHK;

   9106  0 000115   000226 701000 0                  TSX1    CHK
         0 000116   000000 011000                    NOP     0

      423     9107    2         I=KQRA_MBLK#;

   9107  0 000117   000001 235007                    LDA     1,DL
         0 000120   200021 755100                    STA     I,,AUTO

      424     9108    2         CALL KQL$COUNTDLY (KQ$MLH.DELAY$,I);

   9108  0 000121   200021 630500                    EPPR0   I,,AUTO
         0 000122   200063 450500                    STP0    @M$+2,,AUTO
         0 000123   200047 236100                    LDQ     @KQ$MLH,,AUTO
         0 000124   000002 036003                    ADLQ    2,DU
         0 000125   200062 756100                    STQ     @M$+1,,AUTO
         0 000126   200062 630500                    EPPR0   @M$+1,,AUTO
         0 000127   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000130   000000 701000 xent               TSX1    KQL$COUNTDLY
         0 000131   000000 011000                    NOP     0

      425     9109    3           DO INHIBIT;

      426     9110                %LOCK (G=CG$->KQ$CG.GATE.MISC);

   9111  0 000132   200013 236300                    LDQ   ! CG$,,AUTO
         0 000133   000111 036203                    ADLQ  ! 73,DU
         0 000134   200062 756300                    STQ   ! @M$+1,,AUTO
         0 000135   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 000136   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000137   000000 701200 xent               TSX1  ! HFC$LOCK
         0 000140   000000 011200                    NOP   ! 0

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:101  
      427     9113    3           H$=KQ$MLH.HEAD$;

   9113  0 000141   200047 470700                    LDP0  ! @KQ$MLH,,AUTO
         0 000142   000000 236300                    LDQ   ! 0,,PR0
         0 000143   200050 756300                    STQ   ! H$,,AUTO

      428     9114    3           T$=KQ$MLH.TAIL$;

   9114  0 000144   000001 236300                    LDQ   ! 1,,PR0
         0 000145   200051 756300                    STQ   ! T$,,AUTO

      429     9115    3           IF KQ$MLH.QUEUE = 0 THEN

   9115  0 000146   000003 236300                    LDQ   ! 3,,PR0
         0 000147   000100 316203                    CANQ  ! 64,DU
         0 000150   000157 601200 0                  TNZ   ! s:9117

      430     9116    3            CG$->KQ$CG.STATS.CCMS=CG$->KQ$CG.STATS.CCMS-KQ$MLH.COUNT+I;

   9116  0 000151   200013 471700                    LDP1  ! CG$,,AUTO
         0 000152   100172 236300                    LDQ   ! 122,,PR1
         0 000153   000005 136300                    SBLQ  ! 5,,PR0
         0 000154   200021 036300                    ADLQ  ! I,,AUTO
         0 000155   100172 756300                    STQ   ! 122,,PR1
         0 000156   000164 710200 0                  TRA   ! s:9118

      431     9117    3           ELSE CG$->KQ$CG.STATS.CCMQ=CG$->KQ$CG.STATS.CCMQ-KQ$MLH.COUNT+I;

   9117  0 000157   200013 471700                    LDP1  ! CG$,,AUTO
         0 000160   100171 236300                    LDQ   ! 121,,PR1
         0 000161   000005 136300                    SBLQ  ! 5,,PR0
         0 000162   200021 036300                    ADLQ  ! I,,AUTO
         0 000163   100171 756300                    STQ   ! 121,,PR1

      432     9118    3           KQ$MLH.COUNT=I;

   9118  0 000164   200021 235300                    LDA   ! I,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:102  
         0 000165   000005 755300                    STA   ! 5,,PR0

      433     9119    3           KQ$MLH.SUPERCNT=0;

   9119  0 000166   000000 220203                    LDX0  ! 0,DU
         0 000167   000004 440300                    SXL0  ! 4,,PR0

      434     9120    3           KQ$MLH.HEAD$=ADDR(NIL);

   9120  0 000170   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 000171   000000 756300                    STQ   ! 0,,PR0

      435     9121    3           KQ$MLH.TAIL$=ADDR(NIL);

   9121  0 000172   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 000173   000001 756300                    STQ   ! 1,,PR0

      436     9122    3           IF H$ ~= ADDR(NIL) THEN

   9122  0 000174   200050 236300                    LDQ   ! H$,,AUTO
         0 000175   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000176   000206 600200 0                  TZE   ! s:9128

      437     9123    4             DO;

      438     9124    4             T$->KQ$MBLK.LNK$=CG$->KQ$CG.DELMSG$;

   9124  0 000177   200013 471700                    LDP1  ! CG$,,AUTO
         0 000200   100114 236300                    LDQ   ! 76,,PR1
         0 000201   200051 473700                    LDP3  ! T$,,AUTO
         0 000202   300000 756300                    STQ   ! 0,,PR3

      439     9125    4             CG$->KQ$CG.DELMSG$=H$;

   9125  0 000203   200050 236300                    LDQ   ! H$,,AUTO
         0 000204   200013 471700                    LDP1  ! CG$,,AUTO
         0 000205   100114 756300                    STQ   ! 76,,PR1
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:103  

      440     9126    4             END;

      441     9127                %UNLOCK (G=CG$->KQ$CG.GATE.MISC);

   9128  0 000206   200013 236300                    LDQ   ! CG$,,AUTO
         0 000207   000111 036203                    ADLQ  ! 73,DU
         0 000210   200062 756300                    STQ   ! @M$+1,,AUTO
         0 000211   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 000212   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 000213   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 000214   000000 011200                    NOP   ! 0

      442     9130    3           END;

      443     9131    2         RETURN;

   9131  0 000215   200046 221300                    LDX1  ! D$+1,,AUTO
         0 000216   000001 702211                    TSX2  ! 1,X1

      444     9132        /****************************************************************
      445     9133        *****************************************************************/
      446     9134        /*D* NAME:         CHKMLH
      447     9135             PURPOSE:      To see if an MLH is empty
      448     9136             DESCRIPTION:  ALTRETs if it is not
      449     9137        */
      450     9138    2   CHKMLH: ENTRY (KQ$MLH) ALTRET;

   9138  0 000217   200046 741300       CHKMLH       STX1  ! D$+1,,AUTO

      451     9139        /**/
      452     9140    2         CALL CHK ALTRET(ALTRT);

   9140  0 000220   000226 701000 0                  TSX1    CHK
         0 000221   000224 702000 0                  TSX2    ALTRT

      453     9141    2         RETURN;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:104  

   9141  0 000222   200046 221300                    LDX1  ! D$+1,,AUTO
         0 000223   000001 702211                    TSX2  ! 1,X1

      454     9142    2   ALTRT:ALTRETURN;

   9142  0 000224   200046 221300       ALTRT        LDX1  ! D$+1,,AUTO
         0 000225   000000 702211                    TSX2  ! 0,X1

      455     9143        /**/
      456     9144    2   CHK:  PROC ALTRET;

   9144  0 000226   200052 741300       CHK          STX1  ! T1$+1,,AUTO

      457     9145        /**/
      458     9146    3         IF KQ$MLH.DELAY$ ~= ADDR(NIL)

   9146  0 000227   200047 470500                    LDP0    @KQ$MLH,,AUTO
         0 000230   000002 236100                    LDQ     2,,PR0
         0 000231   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000232   000236 601000 0                  TNZ     s:9147
         0 000233   000000 236100                    LDQ     0,,PR0
         0 000234   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000235   000237 600000 0                  TZE     s:9148

      459     9147    3         OR KQ$MLH.HEAD$ ~= ADDR(NIL) THEN ALTRETURN;

   9147  0 000236   000000 702211                    TSX2  ! 0,X1

      460     9148    3         RETURN;

   9148  0 000237   000001 702211                    TSX2  ! 1,X1

      461     9149    3   END CHK;
      462     9150    2   END DELMLH;
      463     9151        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:105  
      464     9152        /*
      465     9153               III   N   N   SSS   EEEEE  RRRR   TTTTT
      466     9154                I    N   N  S   S  E      R   R    T
      467     9155                I    NN  N  S      E      R   R    T
      468     9156                I    N N N   SSS   EEEE   RRRR     T
      469     9157                I    N  NN      S  E      R R      T
      470     9158                I    N   N  S   S  E      R  R     T
      471     9159               III   N   N   SSS   EEEEE  R   R    T
      472     9160        */
      473     9161        /**/
      474     9162        /*F* NAME:         KQL$INSERT
      475     9163             PURPOSE:      To insert an MBLK into an MBLK list
      476     9164             CALL:         KQL$INSERT (KQ$CG,KQ$MLH,MBLK$);
      477     9165             DESCRIPTION:  MBLK$ points to an MBLK which is inserted into
      478     9166                           the given list in prio & UTS order.  When done,
      479     9167                           MBLK$ is set to the MBLK's old LNK$.
      480     9168
      481     9169                           The gate for the MLH in question is assumed to
      482     9170                           be locked upon entry, and is not touched throughout.
      483     9171        */
      484     9172    1   KQL$INSERT: ENTRY (PARM,PARM$,PARM2) ALTRET; /* !!Doesn't ALTRET!! */

   9172  0 000240   000000 700200 xent  KQL$INSERT   TSX0  ! X66_AUTO_3
         0 000241   000072 000003                    ZERO    58,3

      485     9173        /**/
      486     9174    1         CG$=ADDR(PARM);

   9174  0 000242   200003 236100                    LDQ     @PARM,,AUTO
         0 000243   200013 756100                    STQ     CG$,,AUTO

      487     9175    1         MLH$=ADDR(PARM$);

   9175  0 000244   200004 236100                    LDQ     @PARM$,,AUTO
         0 000245   200024 756100                    STQ     MLH$,,AUTO

      488     9176    1         MBLK$=PARM2R$;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:106  

   9176  0 000246   200005 470500                    LDP0    @PARM2,,AUTO
         0 000247   000000 236100                    LDQ     0,,PR0
         0 000250   200012 756100                    STQ     MBLK$,,AUTO

      489     9177        /**/
      490     9178    1         MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT+1;

   9178  0 000251   200024 471500                    LDP1    MLH$,,AUTO
         0 000252   100005 054100                    AOS     5,,PR1

      491     9179    1         IF MLH$->KQ$MLH.QUEUE = 0 THEN

   9179  0 000253   100003 236100                    LDQ     3,,PR1
         0 000254   000100 316003                    CANQ    64,DU
         0 000255   000261 601000 0                  TNZ     s:9181

      492     9180    1          CG$->KQ$CG.STATS.CCMS=CG$->KQ$CG.STATS.CCMS+1;

   9180  0 000256   200013 473500                    LDP3    CG$,,AUTO
         0 000257   300172 054100                    AOS     122,,PR3
         0 000260   000263 710000 0                  TRA     s:9183

      493     9181    1         ELSE CG$->KQ$CG.STATS.CCMQ=CG$->KQ$CG.STATS.CCMQ+1;

   9181  0 000261   200013 473500                    LDP3    CG$,,AUTO
         0 000262   300171 054100                    AOS     121,,PR3

      494     9182        /**/
      495     9183    1         IF MLH$->KQ$MLH.BUSY THEN

   9183  0 000263   100003 236100                    LDQ     3,,PR1
         0 000264   000600 316003                    CANQ    384,DU
         0 000265   000276 600000 0                  TZE     INS

      496     9184    2           DO; /* Someone is messing with it */

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:107  
      497     9185    2           CALL KQL$MDELAYM (MLH$->KQ$MLH,PARM2R$);

   9185  0 000266   200005 236100                    LDQ     @PARM2,,AUTO
         0 000267   200024 235100                    LDA     MLH$,,AUTO
         0 000270   200062 757100                    STAQ    @M$+1,,AUTO
         0 000271   200062 630500                    EPPR0   @M$+1,,AUTO
         0 000272   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000273   000000 701000 xent               TSX1    KQL$MDELAYM
         0 000274   000000 011000                    NOP     0

      498     9186    2           RETURN;

   9186  0 000275   000000 702200 xent               TSX2  ! X66_ARET

      499     9187    2           END;
      500     9188        /**/
      501     9189    1   INS:  IF MLH$->KQ$MLH.TAIL$ ~= ADDR(NIL) THEN

   9189  0 000276   200024 470500       INS          LDP0    MLH$,,AUTO
         0 000277   000001 236100                    LDQ     1,,PR0
         0 000300   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000301   000327 600000 0                  TZE     s:9203

      502     9190    1          IF NOT MLH$->KQ$MLH.TAIL$->KQ$MBLK.SUPER THEN

   9190  0 000302   000001 471500                    LDP1    1,,PR0
         0 000303   100010 234100                    SZN     8,,PR1
         0 000304   000327 604000 0                  TMI     s:9203

      503     9191    1           IF  MBLK$->KQ$MBLK.PRIO < MLH$->KQ$MLH.TAIL$->KQ$MBLK.PRIO

   9191  0 000305   200012 473500                    LDP3    MBLK$,,AUTO
         0 000306   300001 220100                    LDX0    1,,PR3
         0 000307   100001 100100                    CMPX0   1,,PR1
         0 000310   000315 602000 0                  TNC     s:9196
         0 000311   000327 601000 0                  TNZ     s:9203
         0 000312   100007 236100                    LDQ     7,,PR1
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:108  
         0 000313   300007 116100                    CMPQ    7,,PR3
         0 000314   000327 603000 0                  TRC     s:9203

      504     9192    1           OR  (MBLK$->KQ$MBLK.PRIO = MLH$->KQ$MLH.TAIL$->KQ$MBLK.PRIO
      505     9193    1           AND MBLK$->KQ$MBLK.UTS > MLH$->KQ$MLH.TAIL$->KQ$MBLK.UTS) THEN
      506     9194                           /* Insert @ tail */
      507     9195    2             DO INHIBIT;

      508     9196    2             PARM2R$=MBLK$->KQ$MBLK.LNK$;

   9196  0 000315   300000 236300                    LDQ   ! 0,,PR3
         0 000316   200005 474700                    LDP4  ! @PARM2,,AUTO
         0 000317   400000 756300                    STQ   ! 0,,PR4

      509     9197    2             MBLK$->KQ$MBLK.LNK$=ADDR(NIL);

   9197  0 000320   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 000321   300000 756300                    STQ   ! 0,,PR3

      510     9198    2             MLH$->KQ$MLH.TAIL$->KQ$MBLK.LNK$=MBLK$;

   9198  0 000322   000001 471700                    LDP1  ! 1,,PR0
         0 000323   200012 236300                    LDQ   ! MBLK$,,AUTO
         0 000324   100000 756300                    STQ   ! 0,,PR1

      511     9199    2             MLH$->KQ$MLH.TAIL$=MBLK$;

   9199  0 000325   000001 756300                    STQ   ! 1,,PR0

      512     9200    2             RETURN;

   9200  0 000326   000000 702200 xent               TSX2  ! X66_ARET

      513     9201    2             END;

      514     9202        /**/
      515     9203    1         P$=ADDR(NIL);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:109  

   9203  0 000327   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000330   200016 756100                    STQ     P$,,AUTO

      516     9204    1         X$=MLH$->KQ$MLH.HEAD$;

   9204  0 000331   000000 236100                    LDQ     0,,PR0
         0 000332   200034 756100                    STQ     X$,,AUTO

      517     9205    1         IF MLH$->KQ$MLH.SUPERCNT = 0 THEN

   9205  0 000333   000004 720100                    LXL0    4,,PR0
         0 000334   000370 601000 0                  TNZ     s:9220

      518     9206                           /* No super MBLKs in list */
      519     9207    2           DO WHILE (X$ ~= ADDR(NIL));

   9207  0 000335   000365 710000 0                  TRA     s:9215

      520     9208    2           IF MBLK$->KQ$MBLK.PRIO > X$->KQ$MBLK.PRIO THEN GOTO INS1;

   9208  0 000336   200034 470500                    LDP0    X$,,AUTO
         0 000337   000001 220100                    LDX0    1,,PR0
         0 000340   200012 471500                    LDP1    MBLK$,,AUTO
         0 000341   100001 100100                    CMPX0   1,,PR1
         0 000342   000601 602000 0                  TNC     INS1

      521     9209    2           ELSE IF MBLK$->KQ$MBLK.PRIO = X$->KQ$MBLK.PRIO THEN

   9209  0 000343   100001 221100                    LDX1    1,,PR1
         0 000344   000001 101100                    CMPX1   1,,PR0
         0 000345   000361 601000 0                  TNZ     s:9213

      522     9210    2             IF MBLK$->KQ$MBLK.UTS < X$->KQ$MBLK.UTS THEN GOTO INS1;

   9210  0 000346   100007 236100                    LDQ     7,,PR1
         0 000347   000007 116100                    CMPQ    7,,PR0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:110  
         0 000350   000601 602000 0                  TNC     INS1

      523     9211    2             ELSE IF MBLK$->KQ$MBLK.UTS = X$->KQ$MBLK.UTS THEN

   9211  0 000351   000361 601000 0                  TNZ     s:9213

      524     9212    2               IF MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.STAMP THEN GOTO INS1;

   9212  0 000352   000001 236100                    LDQ     1,,PR0
         0 000353   777777 376007                    ANQ     -1,DL
         0 000354   200062 756100                    STQ     @M$+1,,AUTO
         0 000355   100001 236100                    LDQ     1,,PR1
         0 000356   777777 376007                    ANQ     -1,DL
         0 000357   200062 116100                    CMPQ    @M$+1,,AUTO
         0 000360   000601 604000 0                  TMI     INS1

      525     9213    2           P$=X$;

   9213  0 000361   200034 236100                    LDQ     X$,,AUTO
         0 000362   200016 756100                    STQ     P$,,AUTO

      526     9214    2           X$=X$->KQ$MBLK.LNK$;

   9214  0 000363   000000 236100                    LDQ     0,,PR0
         0 000364   200034 756100                    STQ     X$,,AUTO

      527     9215    2           END;

   9215  0 000365   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000366   000336 601000 0                  TNZ     s:9208
         0 000367   000601 710000 0                  TRA     INS1

      528     9216    1         ELSE
      529     9217        /**/
      530     9218        /**/
      531     9219                           /* Super MBLKs in list */
      532     9220    2           DO WHILE (X$ ~= ADDR(NIL));
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:111  

   9220  0 000370   000577 710000 0                  TRA     s:9290

      533     9221    2           IF MBLK$->KQ$MBLK.PRIO > X$->KQ$MBLK.PRIO THEN GOTO INS1;

   9221  0 000371   200034 470500                    LDP0    X$,,AUTO
         0 000372   000001 220100                    LDX0    1,,PR0
         0 000373   200012 471500                    LDP1    MBLK$,,AUTO
         0 000374   100001 100100                    CMPX0   1,,PR1
         0 000375   000601 602000 0                  TNC     INS1

      534     9222    2           ELSE IF MBLK$->KQ$MBLK.PRIO = X$->KQ$MBLK.PRIO THEN

   9222  0 000376   100001 221100                    LDX1    1,,PR1
         0 000377   000001 101100                    CMPX1   1,,PR0
         0 000400   000552 601000 0                  TNZ     s:9281

      535     9223    3              DO;

      536     9224    3              IF MBLK$->KQ$MBLK.UTS < X$->KQ$MBLK.UTS THEN GOTO INS1;

   9224  0 000401   100007 236100                    LDQ     7,,PR1
         0 000402   000007 116100                    CMPQ    7,,PR0
         0 000403   000601 602000 0                  TNC     INS1

      537     9225    3              ELSE IF MBLK$->KQ$MBLK.UTS = X$->KQ$MBLK.UTS THEN

   9225  0 000404   000532 601000 0                  TNZ     s:9268

      538     9226    4                 DO;  /* MBLK$ UTS = X$ UTS */

      539     9227    4                 IF NOT X$->KQ$MBLK.SUPER THEN

   9227  0 000405   000010 234100                    SZN     8,,PR0
         0 000406   000417 604000 0                  TMI     s:9233

      540     9228    5                   DO;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:112  

      541     9229    5                   IF MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.STAMP THEN GOTO INS1;

   9229  0 000407   000001 236100                    LDQ     1,,PR0
         0 000410   777777 376007                    ANQ     -1,DL
         0 000411   200062 756100                    STQ     @M$+1,,AUTO
         0 000412   100001 236100                    LDQ     1,,PR1
         0 000413   777777 376007                    ANQ     -1,DL
         0 000414   200062 116100                    CMPQ    @M$+1,,AUTO
         0 000415   000601 604000 0                  TMI     INS1

      542     9230    5                   END;

   9230  0 000416   000573 710000 0                  TRA     s:9288

      543     9231    4                 ELSE
      544     9232    5                   DO;  /* X$ SUPER */

      545     9233    5                   IF MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.UTSXTLO THEN GOTO INS1;

   9233  0 000417   100001 722100                    LXL2    1,,PR1
         0 000420   000014 102100                    CMPX2   12,,PR0
         0 000421   000601 602000 0                  TNC     INS1

      546     9234    5                   IF X$->KQ$MBLK.PRIO  ~= X$->KQ$MBLK.PRIOLO

   9234  0 000422   000010 723100                    LXL3    8,,PR0
         0 000423   000001 103100                    CMPX3   1,,PR0
         0 000424   000437 601000 0                  TNZ     INS0
         0 000425   000007 236100                    LDQ     7,,PR0
         0 000426   000011 116100                    CMPQ    9,,PR0
         0 000427   000437 601000 0                  TNZ     INS0
         0 000430   000014 236100                    LDQ     12,,PR0
         0 000431   777777 376007                    ANQ     -1,DL
         0 000432   200062 756100                    STQ     @M$+1,,AUTO
         0 000433   100001 236100                    LDQ     1,,PR1
         0 000434   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:113  
         0 000435   200062 116100                    CMPQ    @M$+1,,AUTO
         0 000436   000573 605000 0                  TPL     s:9288

      547     9235    5                   OR X$->KQ$MBLK.UTS   ~= X$->KQ$MBLK.UTSHI
      548     9236    5                   OR MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.UTSXTHI THEN
      549     9237    6                     DO;  /* Insert in this super MBLK */

      550     9238    6   INS0:             P$=ADDR(X$->KQ$MBLK.INSHD$);

   9238  0 000437   200034 236100       INS0         LDQ     X$,,AUTO
         0 000440   000012 036003                    ADLQ    10,DU
         0 000441   200016 756100                    STQ     P$,,AUTO

      551     9239    6                     Z$=P$->B$$PTR;

   9239  0 000442   200016 470500                    LDP0    P$,,AUTO
         0 000443   000000 236100                    LDQ     0,,PR0
         0 000444   200035 756100                    STQ     Z$,,AUTO

      552     9240    7                       DO WHILE (Z$ ~= ADDR(NIL));

   9240  0 000445   000475 710000 0                  TRA     s:9248

      553     9241    7                       IF MBLK$->KQ$MBLK.PRIO > Z$->KQ$MBLK.PRIO THEN GOTO INS01;

   9241  0 000446   200035 470500                    LDP0    Z$,,AUTO
         0 000447   000001 220100                    LDX0    1,,PR0
         0 000450   200012 471500                    LDP1    MBLK$,,AUTO
         0 000451   100001 100100                    CMPX0   1,,PR1
         0 000452   000477 602000 0                  TNC     INS01

      554     9242    7                       ELSE IF MBLK$->KQ$MBLK.PRIO = Z$->KQ$MBLK.PRIO THEN

   9242  0 000453   100001 221100                    LDX1    1,,PR1
         0 000454   000001 101100                    CMPX1   1,,PR0
         0 000455   000471 601000 0                  TNZ     s:9246

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:114  
      555     9243    7                         IF MBLK$->KQ$MBLK.UTS < Z$->KQ$MBLK.UTS THEN GOTO INS01;

   9243  0 000456   100007 236100                    LDQ     7,,PR1
         0 000457   000007 116100                    CMPQ    7,,PR0
         0 000460   000477 602000 0                  TNC     INS01

      556     9244    7                         ELSE IF MBLK$->KQ$MBLK.UTS = Z$->KQ$MBLK.UTS THEN

   9244  0 000461   000471 601000 0                  TNZ     s:9246

      557     9245    7                          IF MBLK$->KQ$MBLK.STAMP < Z$->KQ$MBLK.STAMP THEN GOTO INS01;

   9245  0 000462   000001 236100                    LDQ     1,,PR0
         0 000463   777777 376007                    ANQ     -1,DL
         0 000464   200062 756100                    STQ     @M$+1,,AUTO
         0 000465   100001 236100                    LDQ     1,,PR1
         0 000466   777777 376007                    ANQ     -1,DL
         0 000467   200062 116100                    CMPQ    @M$+1,,AUTO
         0 000470   000477 604000 0                  TMI     INS01

      558     9246    7                       P$=ADDR(Z$->KQ$MBLK.LNK$);

   9246  0 000471   200035 236100                    LDQ     Z$,,AUTO
         0 000472   200016 756100                    STQ     P$,,AUTO

      559     9247    7                       Z$=Z$->KQ$MBLK.LNK$;

   9247  0 000473   000000 236100                    LDQ     0,,PR0
         0 000474   200035 756100                    STQ     Z$,,AUTO

      560     9248    7                       END;

   9248  0 000475   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000476   000446 601000 0                  TNZ     s:9241

      561     9249    7                       DO INHIBIT;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:115  
      562     9250    7   INS01:              PARM2R$=MBLK$->KQ$MBLK.LNK$;

   9250  0 000477   200012 470700       INS01        LDP0  ! MBLK$,,AUTO
         0 000500   000000 236300                    LDQ   ! 0,,PR0
         0 000501   200005 471700                    LDP1  ! @PARM2,,AUTO
         0 000502   100000 756300                    STQ   ! 0,,PR1

      563     9251    7                       MBLK$->KQ$MBLK.LNK$=Z$;

   9251  0 000503   200035 236300                    LDQ   ! Z$,,AUTO
         0 000504   000000 756300                    STQ   ! 0,,PR0

      564     9252    7                       P$->B$$PTR=MBLK$;

   9252  0 000505   200012 236300                    LDQ   ! MBLK$,,AUTO
         0 000506   200016 473700                    LDP3  ! P$,,AUTO
         0 000507   300000 756300                    STQ   ! 0,,PR3

      565     9253    7                       IF X$->KQ$MBLK.KEY1ALL THEN

   9253  0 000510   200034 473700                    LDP3  ! X$,,AUTO
         0 000511   300010 236300                    LDQ   ! 8,,PR3
         0 000512   200000 316203                    CANQ  ! 65536,DU
         0 000513   000521 600200 0                  TZE   ! s:9256

      566     9254    7                        IF MBLK$->KQ$MBLK.KEY1 ~= X$->KQ$MBLK.KEY1 THEN

   9254  0 000514   000002 237300                    LDAQ  ! 2,,PR0
         0 000515   300002 117300                    CMPAQ ! 2,,PR3
         0 000516   000521 600200 0                  TZE   ! s:9256

      567     9255    7                         X$->KQ$MBLK.KEY1ALL='0'B;

   9255  0 000517   000001 236200 1                  LDQ   ! 1
         0 000520   300010 356300                    ANSQ  ! 8,,PR3

      568     9256    7                       IF X$->KQ$MBLK.KEY2ALL THEN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:116  

   9256  0 000521   300010 236300                    LDQ   ! 8,,PR3
         0 000522   100000 316203                    CANQ  ! 32768,DU
         0 000523   000531 600200 0                  TZE   ! s:9260

      569     9257    7                        IF MBLK$->KQ$MBLK.KEY2 ~= X$->KQ$MBLK.KEY2 THEN

   9257  0 000524   000004 237300                    LDAQ  ! 4,,PR0
         0 000525   300004 117300                    CMPAQ ! 4,,PR3
         0 000526   000531 600200 0                  TZE   ! s:9260

      570     9258    7                         X$->KQ$MBLK.KEY2ALL='0'B;

   9258  0 000527   000002 236200 1                  LDQ   ! 2
         0 000530   300010 356300                    ANSQ  ! 8,,PR3

      571     9259    7                       END;

      572     9260    6                     RETURN;

   9260  0 000531   000000 702200 xent               TSX2  ! X66_ARET

      573     9261    6                     END; /* Insert in this super MBLK */
      574     9262    5                   END; /* X$ SUPER */
      575     9263    4                 END; /* MBLK$ UTS = X$ UTS */
      576     9264
      577     9265
      578     9266    3               ELSE
      579     9267    4                 DO;  /* MBLK$ UTS > X$ UTS */

      580     9268    4                 IF X$->KQ$MBLK.SUPER THEN

   9268  0 000532   000010 234100                    SZN     8,,PR0
         0 000533   000573 605000 0                  TPL     s:9288

      581     9269    4                  IF X$->KQ$MBLK.PRIO ~= X$->KQ$MBLK.PRIOLO

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:117  
   9269  0 000534   000010 722100                    LXL2    8,,PR0
         0 000535   000001 102100                    CMPX2   1,,PR0
         0 000536   000437 601000 0                  TNZ     INS0
         0 000537   000011 116100                    CMPQ    9,,PR0
         0 000540   000437 602000 0                  TNC     INS0

      582     9270    4                  OR MBLK$->KQ$MBLK.UTS < X$->KQ$MBLK.UTSHI THEN GOTO INS0;
      583     9271    4                  ELSE IF MBLK$->KQ$MBLK.UTS = X$->KQ$MBLK.UTSHI THEN

   9271  0 000541   000573 601000 0                  TNZ     s:9288

      584     9272    4                    IF MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.UTSXTHI THEN GOTO INS0;

   9272  0 000542   000014 236100                    LDQ     12,,PR0
         0 000543   777777 376007                    ANQ     -1,DL
         0 000544   200062 756100                    STQ     @M$+1,,AUTO
         0 000545   100001 236100                    LDQ     1,,PR1
         0 000546   777777 376007                    ANQ     -1,DL
         0 000547   200062 116100                    CMPQ    @M$+1,,AUTO
         0 000550   000437 604000 0                  TMI     INS0

      585     9273    4                 END; /* MBLK$ UTS > X$ UTS */

      586     9274    3              END; /* MBLK$ PRIO = X$ PRIO */

   9274  0 000551   000573 710000 0                  TRA     s:9288

      587     9275
      588     9276
      589     9277
      590     9278
      591     9279    2            ELSE
      592     9280    3              DO;  /* MBLK$ PRIO < X$ PRIO */

      593     9281    3              IF X$->KQ$MBLK.SUPER THEN

   9281  0 000552   000010 234100                    SZN     8,,PR0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:118  
         0 000553   000573 605000 0                  TPL     s:9288

      594     9282    3               IF MBLK$->KQ$MBLK.PRIO > X$->KQ$MBLK.PRIOLO THEN GOTO INS0;

   9282  0 000554   000010 722100                    LXL2    8,,PR0
         0 000555   100001 102100                    CMPX2   1,,PR1
         0 000556   000437 602000 0                  TNC     INS0

      595     9283    3               ELSE IF MBLK$->KQ$MBLK.PRIO = X$->KQ$MBLK.PRIOLO THEN

   9283  0 000557   000573 601000 0                  TNZ     s:9288

      596     9284    3                 IF MBLK$->KQ$MBLK.UTS < X$->KQ$MBLK.UTSHI THEN GOTO INS0;

   9284  0 000560   100007 236100                    LDQ     7,,PR1
         0 000561   000011 116100                    CMPQ    9,,PR0
         0 000562   000437 602000 0                  TNC     INS0

      597     9285    3                 ELSE IF MBLK$->KQ$MBLK.UTS = X$->KQ$MBLK.UTSHI THEN

   9285  0 000563   000573 601000 0                  TNZ     s:9288

      598     9286    3                   IF MBLK$->KQ$MBLK.STAMP < X$->KQ$MBLK.UTSXTHI THEN GOTO INS0;

   9286  0 000564   000014 236100                    LDQ     12,,PR0
         0 000565   777777 376007                    ANQ     -1,DL
         0 000566   200062 756100                    STQ     @M$+1,,AUTO
         0 000567   100001 236100                    LDQ     1,,PR1
         0 000570   777777 376007                    ANQ     -1,DL
         0 000571   200062 116100                    CMPQ    @M$+1,,AUTO
         0 000572   000437 604000 0                  TMI     INS0

      599     9287    3              END; /* MBLK$ PRIO < X$ PRIO */

      600     9288    2           P$=X$;

   9288  0 000573   200034 236100                    LDQ     X$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:119  
         0 000574   200016 756100                    STQ     P$,,AUTO

      601     9289    2           X$=X$->KQ$MBLK.LNK$;

   9289  0 000575   000000 236100                    LDQ     0,,PR0
         0 000576   200034 756100                    STQ     X$,,AUTO

      602     9290    2           END;

   9290  0 000577   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000600   000371 601000 0                  TNZ     s:9221

   9290  0 000601                       INS1         null
      603     9291        /**/
      604     9292        /**/
      605     9293    1   INS1: ;
      606     9294    2           DO INHIBIT;

      607     9295    2           PARM2R$=MBLK$->KQ$MBLK.LNK$;

   9295  0 000601   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 000602   000000 236300                    LDQ   ! 0,,PR0
         0 000603   200005 471700                    LDP1  ! @PARM2,,AUTO
         0 000604   100000 756300                    STQ   ! 0,,PR1

      608     9296    2           MBLK$->KQ$MBLK.LNK$=X$;

   9296  0 000605   200034 236300                    LDQ   ! X$,,AUTO
         0 000606   000000 756300                    STQ   ! 0,,PR0

      609     9297    2           IF X$ = ADDR(NIL) THEN MLH$->KQ$MLH.TAIL$=MBLK$;

   9297  0 000607   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000610   000614 601200 0                  TNZ   ! s:9298

   9297  0 000611   200012 236300                    LDQ   ! MBLK$,,AUTO
         0 000612   200024 473700                    LDP3  ! MLH$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:120  
         0 000613   300001 756300                    STQ   ! 1,,PR3

      610     9298    2           IF P$ = ADDR(NIL) THEN MLH$->KQ$MLH.HEAD$=MBLK$;

   9298  0 000614   200016 236300                    LDQ   ! P$,,AUTO
         0 000615   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000616   000623 601200 0                  TNZ   ! s:9299

   9298  0 000617   200012 236300                    LDQ   ! MBLK$,,AUTO
         0 000620   200024 473700                    LDP3  ! MLH$,,AUTO
         0 000621   300000 756300                    STQ   ! 0,,PR3
         0 000622   000626 710200 0                  TRA   ! RTN

      611     9299    2           ELSE P$->KQ$MBLK.LNK$=MBLK$;

   9299  0 000623   200012 236300                    LDQ   ! MBLK$,,AUTO
         0 000624   200016 473700                    LDP3  ! P$,,AUTO
         0 000625   300000 756300                    STQ   ! 0,,PR3

      612     9300    2   RTN:    RETURN;

   9300  0 000626   000000 702200 xent  RTN          TSX2  ! X66_ARET

      613     9301    2           END; /* Inhibit */

   9301  0 000627   000632 710000 0                  TRA     s:9310

      614     9302        /**/
      615     9303        /*F* NAME:         KQL$INSERTF
      616     9304             PURPOSE:      To force insertion into an MLH
      617     9305             CALL:         KQL$INSERTF (KQ$CG,KQ$MLH,MBLK$)
      618     9306             DESCRIPTION:  Does not increment COUNT, and skips the BUSY
      619     9307                           check. */
      620     9308    1   KQL$INSERTF: ENTRY (PARM,PARM$,PARM2) ALTRET; /* !!Doesn't ALTRET!! */

   9308  0 000630   000000 700200 xent  KQL$INSERTF  TSX0  ! X66_AUTO_3
         0 000631   000072 000003                    ZERO    58,3
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:121  

      621     9309        /**/
      622     9310    1         CG$=ADDR(PARM);

   9310  0 000632   200003 236100                    LDQ     @PARM,,AUTO
         0 000633   200013 756100                    STQ     CG$,,AUTO

      623     9311    1         MLH$=ADDR(PARM$);

   9311  0 000634   200004 236100                    LDQ     @PARM$,,AUTO
         0 000635   200024 756100                    STQ     MLH$,,AUTO

      624     9312    1         MBLK$=PARM2R$;

   9312  0 000636   200005 470500                    LDP0    @PARM2,,AUTO
         0 000637   000000 236100                    LDQ     0,,PR0
         0 000640   200012 756100                    STQ     MBLK$,,AUTO

      625     9313    1         GOTO INS;

   9313  0 000641   000276 710000 0                  TRA     INS

      626     9314        /**/
      627     9315        /*F* NAME:         KQL$MERGEMLH
      628     9316             PURPOSE:      To merge one MLH into another
      629     9317             CALL:         KQL$MERGEMLH (KQ$MLH,MLH$)
      630     9318             DESCRIPTION:  The second MLH is moved onto the front of
      631     9319                           first (without looking @ prios), and then
      632     9320                           reset to fresh.
      633     9321                           The appropriate gates are assumed locked.
      634     9322        */
      635     9323    1   KQL$MERGEMLH: ENTRY (PARM,PARM$) ALTRET; /* !!Doesn't ALTRET!! */

   9323  0 000642   000000 700200 xent  KQL$MERGEMLH TSX0  ! X66_AUTO_3
         0 000643   000072 000003                    ZERO    58,3

      636     9324        /**/
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:122  
      637     9325    1         MLH$=ADDR(PARM);

   9325  0 000644   200003 236100                    LDQ     @PARM,,AUTO
         0 000645   200024 756100                    STQ     MLH$,,AUTO

      638     9326    1         P$=PARM$;

   9326  0 000646   200004 470500                    LDP0    @PARM$,,AUTO
         0 000647   000000 236100                    LDQ     0,,PR0
         0 000650   200016 756100                    STQ     P$,,AUTO

      639     9327    1         IF P$->KQ$MLH.BUSY THEN

   9327  0 000651   200016 471500                    LDP1    P$,,AUTO
         0 000652   100003 236100                    LDQ     3,,PR1
         0 000653   000600 316003                    CANQ    384,DU
         0 000654   000657 600000 0                  TZE     s:9329

      640     9328    1          CALL SC_BCGXRL;

   9328  0 000655   000000 713400 xsym               CLIMB   SC_BCGXRL
         0 000656   000000 600000 xsid               climb   nvectors=         0

      641     9329    1         IF P$->KQ$MLH.HEAD$ = ADDR(NIL) THEN RETURN ;

   9329  0 000657   200016 470500                    LDP0    P$,,AUTO
         0 000660   000000 236100                    LDQ     0,,PR0
         0 000661   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000662   000664 601000 0                  TNZ     s:9332

   9329  0 000663   000000 702200 xent               TSX2  ! X66_ARET

      642     9330        /**/
      643     9331    2           DO INHIBIT;

      644     9332    2           MBLK$=MLH$->KQ$MLH.HEAD$;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:123  
   9332  0 000664   200024 471700                    LDP1  ! MLH$,,AUTO
         0 000665   100000 236300                    LDQ   ! 0,,PR1
         0 000666   200012 756300                    STQ   ! MBLK$,,AUTO

      645     9333    2           MLH$->KQ$MLH.HEAD$=P$->KQ$MLH.HEAD$;

   9333  0 000667   000000 236300                    LDQ   ! 0,,PR0
         0 000670   100000 756300                    STQ   ! 0,,PR1

      646     9334    2           P$->KQ$MLH.TAIL$->KQ$MBLK.LNK$=MBLK$;

   9334  0 000671   200016 470700                    LDP0  ! P$,,AUTO
         0 000672   000001 473700                    LDP3  ! 1,,PR0
         0 000673   200012 236300                    LDQ   ! MBLK$,,AUTO
         0 000674   300000 756300                    STQ   ! 0,,PR3

      647     9335    2           MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT+P$->KQ$MLH.COUNT;

   9335  0 000675   200016 470700                    LDP0  ! P$,,AUTO
         0 000676   100005 236300                    LDQ   ! 5,,PR1
         0 000677   000005 036300                    ADLQ  ! 5,,PR0
         0 000700   100005 756300                    STQ   ! 5,,PR1

      648     9336    2           MLH$->KQ$MLH.SUPERCNT=MLH$->KQ$MLH.SUPERCNT+P$->KQ$MLH.SUPERCNT;

   9336  0 000701   200016 470700                    LDP0  ! P$,,AUTO
         0 000702   000004 236300                    LDQ   ! 4,,PR0
         0 000703   777777 376207                    ANQ   ! -1,DL
         0 000704   200062 756300                    STQ   ! @M$+1,,AUTO
         0 000705   100004 236300                    LDQ   ! 4,,PR1
         0 000706   777777 376207                    ANQ   ! -1,DL
         0 000707   200062 036300                    ADLQ  ! @M$+1,,AUTO
         0 000710   000000 620206                    EAX0  ! 0,QL
         0 000711   100004 440300                    SXL0  ! 4,,PR1

      649     9337    2           P$->KQ$MLH=KQ_IMLH;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:124  
   9337  0 000712   200016 470700                    LDP0  ! P$,,AUTO
         0 000713   000100 100600                    MLR   ! fill='000'O
         0 000714   000000 000040 xsym               ADSC9   KQ_IMLH                  cn=0,n=32
         0 000715   000000 000040                    ADSC9   0,,PR0                   cn=0,n=32

      650     9338    2           END;

      651     9339    1         RETURN;

   9339  0 000716   000000 702200 xent               TSX2  ! X66_ARET

      652     9340        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:125  
      653     9341        /*
      654     9342                 FFFFF   III   N   N  DDDD
      655     9343                 F        I    N   N  D   D
      656     9344                 F        I    NN  N  D   D
      657     9345                 FFFF     I    N N N  D   D
      658     9346                 F        I    N  NN  D   D
      659     9347                 F        I    N   N  D   D
      660     9348                 F       III   N   N  DDDD
      661     9349        */
      662     9350        /**/
      663     9351        /*F* NAME:         KQL$DTFIND
      664     9352             PURPOSE:      To find a directed message for a terminal
      665     9353             CALL:         KQL$DTFIND (KQ$STA,MBLK$)
      666     9354             INPUT:        Station gate locked, station RBLK$ points to an
      667     9355                           RBLK with state KQRS_RSIP, and keys desribing
      668     9356                           the message desired.
      669     9357             OUTPUT:       - Message found: ALTRET with MBLK$ = msg
      670     9358                                            station gate unlocked
      671     9359                           - No msg       : RETURN with MBLK$ = 0
      672     9360                                            station gate still locked
      673     9361                                            KQ$RBLK.ERR = KQGE_EOF# if
      674     9362                                                              RBLK.EOFNONE set
      675     9363                                                        = 0 else
      676     9364                           - I/O reqd     : RETURN with MBLK$ < 0
      677     9365                                            station gate unlocked
      678     9366             DESCRIPTION:  The station's directed message list is searched
      679     9367                           for an appropriate message.
      680     9368
      681     9369                           If one is found immediately, then we ALTRET with
      682     9370                            - the station gate unlocked
      683     9371                            - RBLK.STATE = KQRS_XFIP
      684     9372                            - RBLK.NCDDA set to MBLK.DDA
      685     9373                            - RBLK.MBLK$ pointing to the MBLK
      686     9374                            - MBLK$ pointing to the MBLK
      687     9375                            - MBLK.LNK$ = ADDR(NIL)
      688     9376                            - CG.STATS.CCMS decremented
      689     9377
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:126  
      690     9378                           Otherwise, if it can be determined immediately that
      691     9379                           no such message is present, we RETURN with the
      692     9380                           station gate still locked and MBLK$ = 0.
      693     9381
      694     9382                           Lastly, if it cannot be determined immediately
      695     9383                           whether or not there is such a message, then we
      696     9384                           return with the station gate unlocked, and MBLK$ < 0.
      697     9385                           The station LOCKCNT has been incremented, and
      698     9386                           when the search finishes,
      699     9387                           the following is done:
      700     9388
      701     9389                            o   if a message was found then KQG$GOTMSG is
      702     9390                                called with the RBLK set up as for the immediate
      703     9391                                success return
      704     9392                            o   if no message could be found due to a full
      705     9393                                comgroup, KQG$GOTMSG is called with RBLK.MBLK$
      706     9394                                = ADDR(NIL) and RBLK.ERR = KQGE_QFUL#
      707     9395                            o   if no message was found and RBLK.EOFNONE is
      708     9396                                set then KQG$GOTMSG is called with RBLK.MBLK$
      709     9397                                = ADDR(NIL) and RBLK.ERR = KQGE_EOF#
      710     9398                            o   if the terminal station is trying to disconnect
      711     9399                                then KQG$GOTMSG is called with RBLK.MBLK$
      712     9400                                = ADDR(NIL) and RBLK.ERR = KQGE_DISC#
      713     9401                            o   otherwise the RBLK.STATE is set KQRS_PEND#
      714     9402                                and left that way
      715     9403
      716     9404                           To prevent re-entrancy, a soft gate is set in the
      717     9405                           station's MLH which prevents
      718     9406                           directed writes to the station while the search
      719     9407                           is ongoing.  This gate must be reset and some work
      720     9408                           done when the search is finished.  In the case of
      721     9409                           an immediate find (ALTRET) this is unnecessary
      722     9410                           since the MLH has remained locked.
      723     9411                           In the case of a delayed find (RETURN, MBLK$ < 0)
      724     9412                           KQL$LIST will do this work.  In the last case,
      725     9413                           that of immediate failure, no work need be done
      726     9414                           either.
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:127  
      727     9415        */
      728     9416    1   KQL$DTFIND: ENTRY (PARM,PARM$) ALTRET;

   9416  0 000717   000000 700200 xent  KQL$DTFIND   TSX0  ! X66_AUTO_3
         0 000720   000072 000003                    ZERO    58,3

      729     9417        /**/
      730     9418    1         TERM=1;

   9418  0 000721   000001 235007                    LDA     1,DL
         0 000722   200026 755100                    STA     TERM,,AUTO

      731     9419    1         ENTFLAG=0;

   9419  0 000723   200030 450100                    STZ     ENTFLAG,,AUTO

      732     9420    1         GOTO DFINDI;

   9420  0 000724   000746 710000 0                  TRA     DFINDI

      733     9421        /**/
      734     9422        /*F* NAME:         KQL$DTCONT
      735     9423             PURPOSE:      To continue KQL$DTFIND
      736     9424             CALL:         KQL$DTCONT (KQ$STA)
      737     9425             INPUT:        Station gate locked
      738     9426             OUTPUT:       Read process continued (or finished), station
      739     9427                           gate unlocked
      740     9428             DESCRIPTION:  Called when someone
      741     9429                           finishes with a terminal station's MLH, and
      742     9430                           finds that the station was trying to read the
      743     9431                           MBLK list but had to delay due to its being
      744     9432                           used by the someone.
      745     9433        */
      746     9434    1   KQL$DTCONT: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */

   9434  0 000725   000000 700200 xent  KQL$DTCONT   TSX0  ! X66_AUTO_3
         0 000726   000072 000003                    ZERO    58,3
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:128  

      747     9435        /**/
      748     9436    1         STA$=ADDR(PARM);

   9436  0 000727   200003 236100                    LDQ     @PARM,,AUTO
         0 000730   200010 756100                    STQ     STA$,,AUTO

      749     9437    1         MLH$=ADDR(STA$->KQ$STA.MLH);

   9437  0 000731   000034 036003                    ADLQ    28,DU
         0 000732   200024 756100                    STQ     MLH$,,AUTO

      750     9438    1         TERM=1;

   9438  0 000733   000001 235007                    LDA     1,DL
         0 000734   200026 755100                    STA     TERM,,AUTO

      751     9439    1         ENTFLAG=1;

   9439  0 000735   200030 755100                    STA     ENTFLAG,,AUTO

      752     9440    1         FWCG=0;

   9440  0 000736   200037 450100                    STZ     FWP$,,AUTO

      753     9441    1         RBLK$=STA$->KQ$STA.RBLK$;

   9441  0 000737   200010 470500                    LDP0    STA$,,AUTO
         0 000740   000011 236100                    LDQ     9,,PR0
         0 000741   200011 756100                    STQ     RBLK$,,AUTO

      754     9442    1         GOTO DFINDI2;

   9442  0 000742   001062 710000 0                  TRA     DFINDI2

      755     9443        /**/
      756     9444        /*F* NAME:         KQL$DDFIND
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:129  
      757     9445             PURPOSE:      To find a directed message for a DCB
      758     9446             CALL:         KQL$DDFIND (KQ$STA,MBLK$)
      759     9447             INPUT:        Same as KQL$DTFIND
      760     9448             OUTPUT:       - Message found: ALTRET with MBLK$ = msg
      761     9449                                            station gate unlocked
      762     9450                           - No msg       : RETURN with MBLK$ = 0
      763     9451                                            station gate locked
      764     9452                                            KQ$RBLK.ERR = KQGE_QFUL# if comgroup
      765     9453                                                              full
      766     9454                                                        = 0 else
      767     9455             DESCRIPTION:  Same as KQL$DTFIND, except regs the user while
      768     9456                           the search is ongoing, thus always either ALTRETs
      769     9457                           or RETURNs with MBLK$ = 0
      770     9458
      771     9459                           The soft gate described under KQL$DTFIND remains
      772     9460                           set in the RETURN case.  To reset this, the user
      773     9461                           must call KQL$DDFDUN when he is finished setting up
      774     9462                           this read.  Note that if the read is to be left
      775     9463                           pending, it MUST be marked that way so that directed
      776     9464                           writes delayed by the soft gate can satisfy the
      777     9465                           read.
      778     9466        */
      779     9467    1   KQL$DDFIND: ENTRY (PARM,PARM$) ALTRET;

   9467  0 000743   000000 700200 xent  KQL$DDFIND   TSX0  ! X66_AUTO_3
         0 000744   000072 000003                    ZERO    58,3

      780     9468        /**/
      781     9469    1         TERM=0;

   9469  0 000745   200026 450100                    STZ     TERM,,AUTO

   9469  0 000746                       DFINDI       null
      782     9470    1   DFINDI:;
      783     9471    1         STA$=ADDR(PARM);

   9471  0 000746   200003 236100                    LDQ     @PARM,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:130  
         0 000747   200010 756100                    STQ     STA$,,AUTO

      784     9472    1         MLH$=ADDR(STA$->KQ$STA.MLH);

   9472  0 000750   000034 036003                    ADLQ    28,DU
         0 000751   200024 756100                    STQ     MLH$,,AUTO

      785     9473    1         FWCG=0;

   9473  0 000752   200037 450100                    STZ     FWP$,,AUTO

      786     9474    1         RBLK$=STA$->KQ$STA.RBLK$;

   9474  0 000753   200010 470500                    LDP0    STA$,,AUTO
         0 000754   000011 236100                    LDQ     9,,PR0
         0 000755   200011 756100                    STQ     RBLK$,,AUTO

   9474  0 000756                       DFINDI1      null
      787     9475        /**/
      788     9476    1   DFINDI1:;
      789     9477    1         IF MLH$->KQ$MLH.BUSY THEN

   9477  0 000756   200024 470500                    LDP0    MLH$,,AUTO
         0 000757   000003 236100                    LDQ     3,,PR0
         0 000760   000600 316003                    CANQ    384,DU
         0 000761   001050 600000 0                  TZE     s:9500

      790     9478    2           DO;

      791     9479    2           IF FWCG=0

   9479  0 000762   200037 235100                    LDA     FWP$,,AUTO
         0 000763   000774 601000 0                  TNZ     s:9481

      792     9480    2           THEN CALL KQL$MDELAYR (MLH$->KQ$MLH,STA$->KQ$STA);

   9480  0 000764   200010 236100                    LDQ     STA$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:131  
         0 000765   200024 235100                    LDA     MLH$,,AUTO
         0 000766   200062 757100                    STAQ    @M$+1,,AUTO
         0 000767   200062 630500                    EPPR0   @M$+1,,AUTO
         0 000770   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000771   000000 701000 xent               TSX1    KQL$MDELAYR
         0 000772   000000 011000                    NOP     0
         0 000773   001005 710000 0                  TRA     s:9483

      793     9481    2           ELSE CALL KQL$MDELAYR (MLH$->KQ$MLH,FWP$->KQ$FWP.MYSTA$->KQ$STA);

   9481  0 000774   200037 471500                    LDP1    FWP$,,AUTO
         0 000775   100002 473500                    LDP3    2,,PR1
         0 000776   200063 453500                    STP3    @M$+2,,AUTO
         0 000777   200024 236100                    LDQ     MLH$,,AUTO
         0 001000   200062 756100                    STQ     @M$+1,,AUTO
         0 001001   200062 630500                    EPPR0   @M$+1,,AUTO
         0 001002   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 001003   000000 701000 xent               TSX1    KQL$MDELAYR
         0 001004   000000 011000                    NOP     0

      794     9482                %UNLOCK (G=STA$->KQ$STA.GATE);

   9483  0 001005   200010 236100                    LDQ     STA$,,AUTO
         0 001006   000016 036003                    ADLQ    14,DU
         0 001007   200062 756100                    STQ     @M$+1,,AUTO
         0 001010   200062 630500                    EPPR0   @M$+1,,AUTO
         0 001011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001012   000000 701000 xent               TSX1    HFC$UNLOCK
         0 001013   000000 011000                    NOP     0

      795     9485    2           IF TERM ~= 0 THEN

   9485  0 001014   200026 235100                    LDA     TERM,,AUTO
         0 001015   001022 600000 0                  TZE     s:9490

      796     9486    3             DO;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:132  
      797     9487    3             PARM$R=-1;

   9487  0 001016   000001 336007                    LCQ     1,DL
         0 001017   200004 470500                    LDP0    @PARM$,,AUTO
         0 001020   000000 756100                    STQ     0,,PR0

      798     9488    3             RETURN;

   9488  0 001021   000000 702200 xent               TSX2  ! X66_ARET

      799     9489    3             END;
      800     9490    2           CALL SSR$REG (%SS_QA);

   9490  0 001022   000004 630400 1                  EPPR0   4
         0 001023   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001024   000000 701000 xent               TSX1    SSR$REG
         0 001025   000000 011000                    NOP     0

      801     9491                %LOCK (G=STA$->KQ$STA.GATE);

   9492  0 001026   200010 236100                    LDQ     STA$,,AUTO
         0 001027   000016 036003                    ADLQ    14,DU
         0 001030   200062 756100                    STQ     @M$+1,,AUTO
         0 001031   200062 630500                    EPPR0   @M$+1,,AUTO
         0 001032   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001033   000000 701000 xent               TSX1    HFC$LOCK
         0 001034   000000 011000                    NOP     0

      802     9494    2           IF NOT MLH$->KQ$MLH.BUSY.RIP

   9494  0 001035   200024 470500                    LDP0    MLH$,,AUTO
         0 001036   000003 236100                    LDQ     3,,PR0
         0 001037   000400 316003                    CANQ    256,DU
         0 001040   001045 600000 0                  TZE     s:9496
         0 001041   000003 236100                    LDQ     3,,PR0
         0 001042   000033 772000                    QRL     27
         0 001043   000000 116000 xsym               CMPQ    S_CUN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:133  
         0 001044   001062 600000 0                  TZE     DFINDI2

      803     9495    2           OR MLH$->KQ$MLH.RUSR# ~= S_CUN THEN
      804     9496    2            CALL SC_CGSUPR;

   9496  0 001045   000000 713400 xsym               CLIMB   SC_CGSUPR
         0 001046   000000 600000 xsid               climb   nvectors=         0

      805     9497    2           END;

   9497  0 001047   001062 710000 0                  TRA     DFINDI2

      806     9498    1         ELSE
      807     9499    2           DO;

      808     9500    2           MLH$->KQ$MLH.BUSY.RIP='1'B;

   9500  0 001050   000400 236003                    LDQ     256,DU
         0 001051   000003 256100                    ORSQ    3,,PR0

      809     9501    2           IF TERM ~= 0 THEN MLH$->KQ$MLH.RUSR#=0;

   9501  0 001052   200026 235100                    LDA     TERM,,AUTO
         0 001053   001057 600000 0                  TZE     s:9502

   9501  0 001054   000000 236003                    LDQ     0,DU
         0 001055   000003 552140                    STBQ    3,'40'O,PR0
         0 001056   001062 710000 0                  TRA     DFINDI2

      810     9502    2           ELSE MLH$->KQ$MLH.RUSR# = S_CUN;

   9502  0 001057   000000 236000 xsym               LDQ     S_CUN
         0 001060   000033 736000                    QLS     27
         0 001061   000003 552140                    STBQ    3,'40'O,PR0

      811     9503    2           END;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:134  
   9496  0 001062                       DFINDI2      null
      812     9504    1   DFINDI2:;
      813     9505    1         Q=0;

   9505  0 001062   200025 450100                    STZ     Q,,AUTO

      814     9506    1         CG$=STA$->KQ$STA.CG$;

   9506  0 001063   200010 470500                    LDP0    STA$,,AUTO
         0 001064   000007 236100                    LDQ     7,,PR0
         0 001065   200013 756100                    STQ     CG$,,AUTO

      815     9507    1         RBLK$->KQ$RBLK.ERR=0;

   9507  0 001066   200011 471500                    LDP1    RBLK$,,AUTO
         0 001067   000005 236000 1                  LDQ     5
         0 001070   100001 356100                    ANSQ    1,,PR1

      816     9508    1         KEY1L=RBLK$->KQ$RBLK.KEY1L;

   9508  0 001071   100001 236100                    LDQ     1,,PR1
         0 001072   000004 772000                    QRL     4
         0 001073   000017 376007                    ANQ     15,DL
         0 001074   000000 620006                    EAX0    0,QL
         0 001075   200014 740100                    STX0    KEY1L,,AUTO

      817     9509    1         KEY2L=RBLK$->KQ$RBLK.KEY2L;

   9509  0 001076   100001 721100                    LXL1    1,,PR1
         0 001077   000017 361003                    ANX1    15,DU
         0 001100   200015 741100                    STX1    KEY2L,,AUTO

      818     9510    1         P$=ADDR(NIL);

   9510  0 001101   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001102   200016 756100                    STQ     P$,,AUTO

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:135  
      819     9511    1         MBLK$=MLH$->KQ$MLH.HEAD$;

   9511  0 001103   200024 470500                    LDP0    MLH$,,AUTO
         0 001104   000000 236100                    LDQ     0,,PR0
         0 001105   200012 756100                    STQ     MBLK$,,AUTO

      820     9512    1         IF FWCG=0

   9512  0 001106   200037 235100                    LDA     FWP$,,AUTO
         0 001107   001117 601000 0                  TNZ     s:9514

      821     9513    1         THEN CALL KQX$SETTIME(TIMCHK);

   9513  0 001110   200006 633500                    EPPR3   TIMCHK,,AUTO
         0 001111   200062 453500                    STP3    @M$+1,,AUTO
         0 001112   200062 630500                    EPPR0   @M$+1,,AUTO
         0 001113   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001114   000000 701000 xent               TSX1    KQX$SETTIME
         0 001115   000000 011000                    NOP     0
         0 001116   001122 710000 0                  TRA     s:9515

      822     9514    1         ELSE TIMCHK=FWP$->KQ$FWP.TIMCHK;

   9514  0 001117   200037 473500                    LDP3    FWP$,,AUTO
         0 001120   300000 237100                    LDAQ    0,,PR3
         0 001121   200006 757100                    STAQ    TIMCHK,,AUTO

      823     9515    1         IF MLH$->KQ$MLH.SUPERCNT = 0 THEN GOTO DFIND;

   9515  0 001122   200024 470500                    LDP0    MLH$,,AUTO
         0 001123   000004 720100                    LXL0    4,,PR0
         0 001124   001300 600000 0                  TZE     DFIND

      824     9516    1         GOTO SDFIND;

   9516  0 001125   001453 710000 0                  TRA     SDFIND

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:136  
      825     9517        /**/
      826     9518        /*F* NAME:         KQL$DFFIND
      827     9519             PURPOSE:      To search a station MLH for M$FWCG
      828     9520             CALL:         KQL$DFFIND (KQ$FWP)
      829     9521             INPUT:        Target station gate locked.
      830     9522                           Target station LOCKCNT incremented
      831     9523                           KQ$FWP.MYSTA$  - current user's station
      832     9524                           KQ$FWP.RBLK$   - points to an RBLK which has
      833     9525                                            KEY1L, KEY2L, KEY1, KEY2, and
      834     9526                                            MID describing the desired class
      835     9527                                            of messages, and HONK set.
      836     9528                           KQ$FWP.NODE$   - points to the target station
      837     9529                           KQ$FWP.TELLME  - set if KQF$GOTMSG is to be called
      838     9530                                            for each message found
      839     9531                           KQ$FWP.FC      - indicates the function to be
      840     9532                                            performed on each message found
      841     9533                                            after the call (if any) to KQF$GOTMSG:
      842     9534                                            = 0 : nothing
      843     9535                                            < 0 : delete
      844     9536                                            > 0 : reattr (the message is to be
      845     9537                                                  removed from its queue, and
      846     9538                                                  sent to the *FWCG station).
      847     9539                           KQ$FWP.RSTA$   - points to the *FWCG station.
      848     9540             DESCRIPTION:  The target station's MBLK list is searched.  For
      849     9541                           each message found of the selected class, the
      850     9542                           indicated function is performed.  When the list
      851     9543                           has been searched, KQL$DDFDUN is called on the
      852     9544                           target station, and we return to the caller.
      853     9545                           The station's gate will be unlocked, and he must
      854     9546                           call KQP$UNLOCK on it.
      855     9547                           ALTRETs if the comgroup is full.
      856     9548        */
      857     9549    1   KQL$DFFIND: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */

   9549  0 001126   000000 700200 xent  KQL$DFFIND   TSX0  ! X66_AUTO_3
         0 001127   000072 000003                    ZERO    58,3

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:137  
      858     9550        /**/
      859     9551    1         FWP$=ADDR(PARM);

   9551  0 001130   200003 236100                    LDQ     @PARM,,AUTO
         0 001131   200037 756100                    STQ     FWP$,,AUTO

      860     9552    1         STA$=FWP$->KQ$FWP.NODE$;

   9552  0 001132   200037 470500                    LDP0    FWP$,,AUTO
         0 001133   000003 236100                    LDQ     3,,PR0
         0 001134   200010 756100                    STQ     STA$,,AUTO

      861     9553    1         MLH$=ADDR(STA$->KQ$STA.MLH);

   9553  0 001135   000034 036003                    ADLQ    28,DU
         0 001136   200024 756100                    STQ     MLH$,,AUTO

      862     9554    1         TERM=0;

   9554  0 001137   200026 450100                    STZ     TERM,,AUTO

      863     9555    1         RBLK$=FWP$->KQ$FWP.RBLK$;

   9555  0 001140   000004 236100                    LDQ     4,,PR0
         0 001141   200011 756100                    STQ     RBLK$,,AUTO

      864     9556    1         GOTO DFINDI1;

   9556  0 001142   000756 710000 0                  TRA     DFINDI1

      865     9557        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:138  
      866     9558        /**/
      867     9559        /*F* NAME:         KQL$QDFIND
      868     9560             PURPOSE:      To find a message from the QUEUE for a DCB
      869     9561             CALL:         KQL$QDFIND (KQ$STA,MBLK$)
      870     9562             INPUT:        Same as KQL$DDFIND but MBLK$ points to the
      871     9563                           desired Q-tree node, Q gate locked instead of station.
      872     9564                           Also, the caller must be the sole current reader
      873     9565                           of the queue, having set RIP and RUSR#.
      874     9566             OUTPUT:       - Message found: ALTRET with MBLK$=msg
      875     9567                                            Q gate locked
      876     9568                           - No msg       : RETURN with MBLK$ = 0
      877     9569                                            Q gate locked
      878     9570                                            RBLK.ERR as for KQL$DDFIND
      879     9571             DESCRIPTION:  Basically the same as KQL$DDFIND except that the
      880     9572                           desired Q-tree node is searched, and the soft gate
      881     9573                           is for the entire queue, not for the station.  Since
      882     9574                           the Q gate is left locked for the success return,
      883     9575                           the soft gate resetting cannot be done by KQL$LIST
      884     9576                           for the caller.  Thus when the caller has finished
      885     9577                           reading the queue, he must call KQL$QDFDUN.
      886     9578        */
      887     9579    1   KQL$QDFIND: ENTRY (PARM,PARM$) ALTRET;

   9579  0 001143   000000 700200 xent  KQL$QDFIND   TSX0  ! X66_AUTO_3
         0 001144   000072 000003                    ZERO    58,3

      888     9580        /**/
      889     9581    1         STA$=ADDR(PARM);

   9581  0 001145   200003 236100                    LDQ     @PARM,,AUTO
         0 001146   200010 756100                    STQ     STA$,,AUTO

      890     9582    1         QTN$=PARM$;

   9582  0 001147   200004 470500                    LDP0    @PARM$,,AUTO
         0 001150   000000 236100                    LDQ     0,,PR0
         0 001151   200036 756100                    STQ     QTN$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:139  

      891     9583    1         RBLK$=STA$->KQ$STA.RBLK$;

   9583  0 001152   200010 471500                    LDP1    STA$,,AUTO
         0 001153   100011 236100                    LDQ     9,,PR1
         0 001154   200011 756100                    STQ     RBLK$,,AUTO

      892     9584    1         FWCG=0;

   9584  0 001155   200037 450100                    STZ     FWP$,,AUTO

   9584  0 001156                       QFINDI       null
      893     9585    1   QFINDI:;
      894     9586    1         TERM=0;

   9586  0 001156   200026 450100                    STZ     TERM,,AUTO

      895     9587    1         MLH$=ADDR(QTN$->KQ$QTN.MLH);

   9587  0 001157   200036 236100                    LDQ     QTN$,,AUTO
         0 001160   000055 036003                    ADLQ    45,DU
         0 001161   200024 756100                    STQ     MLH$,,AUTO

      896     9588    1         Q=1;

   9588  0 001162   000001 235007                    LDA     1,DL
         0 001163   200025 755100                    STA     Q,,AUTO

      897     9589    1         CG$=STA$->KQ$STA.CG$;

   9589  0 001164   200010 470500                    LDP0    STA$,,AUTO
         0 001165   000007 236100                    LDQ     7,,PR0
         0 001166   200013 756100                    STQ     CG$,,AUTO

      898     9590    1         RBLK$->KQ$RBLK.ERR=0;

   9590  0 001167   200011 471500                    LDP1    RBLK$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:140  
         0 001170   000005 236000 1                  LDQ     5
         0 001171   100001 356100                    ANSQ    1,,PR1

      899     9591    1         KEY1L=RBLK$->KQ$RBLK.KEY1L;

   9591  0 001172   100001 236100                    LDQ     1,,PR1
         0 001173   000004 772000                    QRL     4
         0 001174   000017 376007                    ANQ     15,DL
         0 001175   000000 620006                    EAX0    0,QL
         0 001176   200014 740100                    STX0    KEY1L,,AUTO

      900     9592    1         KEY2L=RBLK$->KQ$RBLK.KEY2L;

   9592  0 001177   100001 721100                    LXL1    1,,PR1
         0 001200   000017 361003                    ANX1    15,DU
         0 001201   200015 741100                    STX1    KEY2L,,AUTO

      901     9593    1         P$=ADDR(NIL);

   9593  0 001202   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 001203   200016 756100                    STQ     P$,,AUTO

      902     9594    1         MBLK$=MLH$->KQ$MLH.HEAD$;

   9594  0 001204   200024 470500                    LDP0    MLH$,,AUTO
         0 001205   000000 236100                    LDQ     0,,PR0
         0 001206   200012 756100                    STQ     MBLK$,,AUTO

      903     9595    1         IF FWCG=0

   9595  0 001207   200037 235100                    LDA     FWP$,,AUTO
         0 001210   001220 601000 0                  TNZ     s:9597

      904     9596    1         THEN CALL KQX$SETTIME(TIMCHK);

   9596  0 001211   200006 633500                    EPPR3   TIMCHK,,AUTO
         0 001212   200062 453500                    STP3    @M$+1,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:141  
         0 001213   200062 630500                    EPPR0   @M$+1,,AUTO
         0 001214   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 001215   000000 701000 xent               TSX1    KQX$SETTIME
         0 001216   000000 011000                    NOP     0
         0 001217   001223 710000 0                  TRA     s:9598

      905     9597    1         ELSE TIMCHK=FWP$->KQ$FWP.TIMCHK;

   9597  0 001220   200037 473500                    LDP3    FWP$,,AUTO
         0 001221   300000 237100                    LDAQ    0,,PR3
         0 001222   200006 757100                    STAQ    TIMCHK,,AUTO

      906     9598    1         IF MLH$->KQ$MLH.SUPERCNT = 0 THEN GOTO QFIND;

   9598  0 001223   200024 470500                    LDP0    MLH$,,AUTO
         0 001224   000004 720100                    LXL0    4,,PR0
         0 001225   001243 600000 0                  TZE     QFIND

      907     9599    1         GOTO SQFIND;

   9599  0 001226   001406 710000 0                  TRA     SQFIND

      908     9600        /**/
      909     9601        /*F* NAME:         KQL$QFFIND
      910     9602             PURPOSE:      To search a Q-node MLH for M$FWCG
      911     9603             CALL:         KQL$QFFIND (KQ$FWP)
      912     9604             INPUT:        Q gate locked
      913     9605                           KQ$FWP         - same as for KQL$DFFIND except
      914     9606                                            NODE$ points to the Q-tree node.
      915     9607             DESCRIPTION:  The Q-tree node's MBLK list is searched.  For
      916     9608                           each message found of the selected class, the
      917     9609                           indicated function is performed.  When the list
      918     9610                           has been searched, we return to the caller.
      919     9611                           When he has finished with the entire queue, he
      920     9612                           must call KQL$QXFDUN.  ALTRETs if the comgroup
      921     9613                           is full.
      922     9614        */
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:142  
      923     9615    1   KQL$QFFIND: ENTRY (PARM) ALTRET;

   9615  0 001227   000000 700200 xent  KQL$QFFIND   TSX0  ! X66_AUTO_3
         0 001230   000072 000003                    ZERO    58,3

      924     9616        /**/
      925     9617    1         FWP$=ADDR(PARM);

   9617  0 001231   200003 236100                    LDQ     @PARM,,AUTO
         0 001232   200037 756100                    STQ     FWP$,,AUTO

      926     9618    1         STA$=FWP$->KQ$FWP.MYSTA$;

   9618  0 001233   200037 470500                    LDP0    FWP$,,AUTO
         0 001234   000002 236100                    LDQ     2,,PR0
         0 001235   200010 756100                    STQ     STA$,,AUTO

      927     9619    1         QTN$=FWP$->KQ$FWP.NODE$;

   9619  0 001236   000003 236100                    LDQ     3,,PR0
         0 001237   200036 756100                    STQ     QTN$,,AUTO

      928     9620    1         RBLK$=FWP$->KQ$FWP.RBLK$;

   9620  0 001240   000004 236100                    LDQ     4,,PR0
         0 001241   200011 756100                    STQ     RBLK$,,AUTO

      929     9621    1         GOTO QFINDI;

   9621  0 001242   001156 710000 0                  TRA     QFINDI

   9620  0 001243                       QFIND        null
      930     9622        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:143  
      931     9623        /**/
      932     9624        /*D* NAME:         QFIND
      933     9625             PURPOSE:      To find a msg in a Q-node having no super MBLKs
      934     9626        */
      935     9627        /**/
      936     9628    1   QFIND:;
      937     9629    2           DO WHILE (MBLK$ ~= ADDR(NIL));

   9629  0 001243   001274 710000 0                  TRA     QFIND0

      938     9630    2           IF ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 = ADDR(MBLK$->KQ$MBLK.KEY2)->B$$KEY2
              9630                    THEN

   9630  0 001244   200011 470500                    LDP0    RBLK$,,AUTO
         0 001245   200015 220100                    LDX0    KEY2L,,AUTO
         0 001246   200012 471500                    LDP1    MBLK$,,AUTO
         0 001247   040140 106540                    CMPC    fill='040'O
         0 001250   000004 000010                    ADSC9   4,,PR0                   cn=0,n=*X0
         0 001251   100004 000010                    ADSC9   4,,PR1                   cn=0,n=*X0
         0 001252   001267 601000 0                  TNZ     s:9639

      939     9631    2            IF RBLK$->KQ$RBLK.MID.PRIMARY = 0

   9631  0 001253   000006 235100                    LDA     6,,PR0
         0 001254   001260 600000 0                  TZE     s:9633
         0 001255   000006 236100                    LDQ     6,,PR0
         0 001256   100014 116100                    CMPQ    12,,PR1
         0 001257   001267 601000 0                  TNZ     s:9639

      940     9632    2            OR (RBLK$->KQ$RBLK.MID.PRIMARY = MBLK$->KQ$NRMLMBLK.MID.PRIMARY) THEN
      941     9633    2             IF FWCG = 0 THEN

   9633  0 001260   200037 236100                    LDQ     FWP$,,AUTO
         0 001261   001265 601000 0                  TNZ     s:9638

      942     9634    3               DO;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:144  
      943     9635    3               CALL CHECKVFC ALTRET(QFIND0);

   9635  0 001262   005462 701000 0                  TSX1    CHECKVFC
         0 001263   001274 702000 0                  TSX2    QFIND0

      944     9636    3               GOTO SFOUND;

   9636  0 001264   001703 710000 0                  TRA     SFOUND

      945     9637    3               END;
      946     9638    2             ELSE CALL FWCGL ALTRET(QFIND0);

   9638  0 001265   003547 701000 0                  TSX1    FWCGL
         0 001266   001274 702000 0                  TSX2    QFIND0

      947     9639    2           P$=MBLK$;

   9639  0 001267   200012 236100                    LDQ     MBLK$,,AUTO
         0 001270   200016 756100                    STQ     P$,,AUTO

      948     9640    2           MBLK$=MBLK$->KQ$MBLK.LNK$;

   9640  0 001271   200012 470500                    LDP0    MBLK$,,AUTO
         0 001272   000000 236100                    LDQ     0,,PR0
         0 001273   200012 756100                    STQ     MBLK$,,AUTO

      949     9641    2   QFIND0: END;

   9641  0 001274   200012 236100       QFIND0       LDQ     MBLK$,,AUTO
         0 001275   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001276   001244 601000 0                  TNZ     s:9630

      950     9642    1         GOTO NOTFOUND;

   9642  0 001277   001620 710000 0                  TRA     NOTFOUND

   9641  0 001300                       DFIND        null
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:145  
      951     9643        /**/
      952     9644        /*D* NAME:         DFIND
      953     9645             PURPOSE:      To find a directed message in an MLH having no
      954     9646                           super MBLKs
      955     9647        */
      956     9648        /**/
      957     9649    1   DFIND:;
      958     9650    1         IF MBLK$ ~= ADDR(NIL) THEN

   9650  0 001300   200012 236100                    LDQ     MBLK$,,AUTO
         0 001301   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001302   001316 600000 0                  TZE     s:9657

      959     9651    1          IF MBLK$->KQ$MBLK.PRIO >= %KQ_AUEP# THEN

   9651  0 001303   200012 471500                    LDP1    MBLK$,,AUTO
         0 001304   100001 221100                    LDX1    1,,PR1
         0 001305   765000 101003                    CMPX1   -5632,DU
         0 001306   001316 602000 0                  TNC     s:9657

      960     9652    1           IF NOT RBLK$->KQ$RBLK.HONK THEN

   9652  0 001307   200011 473500                    LDP3    RBLK$,,AUTO
         0 001310   300001 236100                    LDQ     1,,PR3
         0 001311   000400 316007                    CANQ    256,DL
         0 001312   001316 601000 0                  TNZ     s:9657

      961     9653    2             DO;

      962     9654    2             CALL CHECKVFC ALTRET(QFIND0);

   9654  0 001313   005462 701000 0                  TSX1    CHECKVFC
         0 001314   001274 702000 0                  TSX2    QFIND0

      963     9655    2             GOTO SFOUND;

   9655  0 001315   001703 710000 0                  TRA     SFOUND
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:146  

      964     9656    2             END;
      965     9657    2           DO WHILE (MBLK$ ~= ADDR(NIL));

   9657  0 001316   001402 710000 0                  TRA     DFIND1

      966     9658    2           IF  ADDR(RBLK$->KQ$RBLK.KEY1)->B$$KEY1 = ADDR(MBLK$->KQ$MBLK.KEY1)->B$$KEY1

   9658  0 001317   200011 470500                    LDP0    RBLK$,,AUTO
         0 001320   200014 220100                    LDX0    KEY1L,,AUTO
         0 001321   200012 471500                    LDP1    MBLK$,,AUTO
         0 001322   040140 106540                    CMPC    fill='040'O
         0 001323   000002 000010                    ADSC9   2,,PR0                   cn=0,n=*X0
         0 001324   100002 000010                    ADSC9   2,,PR1                   cn=0,n=*X0
         0 001325   001375 601000 0                  TNZ     s:9677
         0 001326   200015 221100                    LDX1    KEY2L,,AUTO
         0 001327   040140 106540                    CMPC    fill='040'O
         0 001330   000004 000011                    ADSC9   4,,PR0                   cn=0,n=*X1
         0 001331   100004 000011                    ADSC9   4,,PR1                   cn=0,n=*X1
         0 001332   001375 601000 0                  TNZ     s:9677

      967     9659    2           AND ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 = ADDR(MBLK$->KQ$MBLK.KEY2)->B$$KEY2
              9659                    THEN
      968     9660    2            IF  MBLK$->KQ$NRMLMBLK.MID.PRIMARY < STA$->KQ$STA.DSID

   9660  0 001333   200010 473500                    LDP3    STA$,,AUTO
         0 001334   100014 236100                    LDQ     12,,PR1
         0 001335   300022 116100                    CMPQ    18,,PR3
         0 001336   001350 603000 0                  TRC     s:9667
         0 001337   100001 222100                    LDX2    1,,PR1
         0 001340   765000 102003                    CMPX2   -5632,DU
         0 001341   001350 603000 0                  TRC     s:9667
         0 001342   100010 236100                    LDQ     8,,PR1
         0 001343   100000 316003                    CANQ    32768,DU
         0 001344   001350 600000 0                  TZE     s:9667

      969     9661    2            AND MBLK$->KQ$MBLK.PRIO < %KQ_AUEP#
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:147  
      970     9662    2            AND MBLK$->KQ$NRMLMBLK.STAR THEN
      971     9663    3              DO;

      972     9664    3              CALL DELMSG  ALTRET(DFIND1); /* Always Altrets */

   9664  0 001345   005522 701000 0                  TSX1    DELMSG
         0 001346   001402 702000 0                  TSX2    DFIND1

      973     9665    3              END;  /* never come here */

   9665  0 001347   001375 710000 0                  TRA     s:9677

      974     9666    2            ELSE
      975     9667    2             IF RBLK$->KQ$RBLK.MID.PRIMARY = 0

   9667  0 001350   000006 235100                    LDA     6,,PR0
         0 001351   001355 600000 0                  TZE     s:9669
         0 001352   000006 236100                    LDQ     6,,PR0
         0 001353   100014 116100                    CMPQ    12,,PR1
         0 001354   001375 601000 0                  TNZ     s:9677

      976     9668    2             OR (RBLK$->KQ$RBLK.MID.PRIMARY = MBLK$->KQ$NRMLMBLK.MID.PRIMARY) THEN
      977     9669    3              IF FWCG = 0 THEN DO;

   9669  0 001355   200037 236100                    LDQ     FWP$,,AUTO
         0 001356   001362 601000 0                  TNZ     s:9673

      978     9670    3                CALL CHECKVFC ALTRET (DFIND1);

   9670  0 001357   005462 701000 0                  TSX1    CHECKVFC
         0 001360   001402 702000 0                  TSX2    DFIND1

      979     9671    3                GOTO SFOUND;

   9671  0 001361   001703 710000 0                  TRA     SFOUND

      980     9672    3                END;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:148  
      981     9673    2              ELSE IF (FWP$->KQ$FWP.FC >= 0) OR

   9673  0 001362   200037 474500                    LDP4    FWP$,,AUTO
         0 001363   400006 235100                    LDA     6,,PR4
         0 001364   001373 605000 0                  TPL     s:9676
         0 001365   400007 236100                    LDQ     7,,PR4
         0 001366   000020 316007                    CANQ    16,DL
         0 001367   001373 600000 0                  TZE     s:9676
         0 001370   100010 236100                    LDQ     8,,PR1
         0 001371   100000 316003                    CANQ    32768,DU
         0 001372   001375 601000 0                  TNZ     s:9677

      982     9674    2               (NOT FWP$->KQ$FWP.EXMPTSTAR) OR
      983     9675    2               (NOT MBLK$->KQ$NRMLMBLK.STAR) THEN
      984     9676    2                CALL FWCGL ALTRET(DFIND1);

   9676  0 001373   003547 701000 0                  TSX1    FWCGL
         0 001374   001402 702000 0                  TSX2    DFIND1

      985     9677    2           P$=MBLK$;

   9677  0 001375   200012 236100                    LDQ     MBLK$,,AUTO
         0 001376   200016 756100                    STQ     P$,,AUTO

      986     9678    2           MBLK$=MBLK$->KQ$MBLK.LNK$;

   9678  0 001377   200012 470500                    LDP0    MBLK$,,AUTO
         0 001400   000000 236100                    LDQ     0,,PR0
         0 001401   200012 756100                    STQ     MBLK$,,AUTO

      987     9679    2   DFIND1: END;

   9679  0 001402   200012 236100       DFIND1       LDQ     MBLK$,,AUTO
         0 001403   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001404   001317 601000 0                  TNZ     s:9658

      988     9680    1         GOTO NOTFOUND;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:149  

   9680  0 001405   001620 710000 0                  TRA     NOTFOUND

   9673  0 001406                       SQFIND       null
      989     9681        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:150  
      990     9682        /**/
      991     9683        /*D* NAME:         SQFIND
      992     9684             PURPOSE:      To find a msg in a Q node having some super MBLKs
      993     9685        */
      994     9686        /**/
      995     9687    1   SQFIND:;
      996     9688    2           DO WHILE (MBLK$ ~= ADDR(NIL));

   9688  0 001406   001447 710000 0                  TRA     SQFIND0

      997     9689    2           IF ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 ~= ADDR(MBLK$->KQ$MBLK.KEY2)->B$$KEY2
              9689                    THEN

   9689  0 001407   200011 470500                    LDP0    RBLK$,,AUTO
         0 001410   200015 220100                    LDX0    KEY2L,,AUTO
         0 001411   200012 471500                    LDP1    MBLK$,,AUTO
         0 001412   040140 106540                    CMPC    fill='040'O
         0 001413   000004 000010                    ADSC9   4,,PR0                   cn=0,n=*X0
         0 001414   100004 000010                    ADSC9   4,,PR1                   cn=0,n=*X0
         0 001415   001424 600000 0                  TZE     s:9693

      998     9690    2            IF  MBLK$->KQ$MBLK.SUPER

   9690  0 001416   100010 234100                    SZN     8,,PR1
         0 001417   001423 605000 0                  TPL     s:9690+5
         0 001420   100010 236100                    LDQ     8,,PR1
         0 001421   100000 316003                    CANQ    32768,DU
         0 001422   001510 600000 0                  TZE     SDFIND0
         0 001423   001442 710000 0                  TRA     s:9701

      999     9691    2            AND MBLK$->KQ$MBLK.KEY2ALL = '0'B THEN GOTO SDFIND0;
     1000     9692    2            ELSE;
     1001     9693    2           ELSE /* KEYs equal */ IF MBLK$->KQ$MBLK.SUPER THEN GOTO SDFIND0;

   9693  0 001424   100010 234100                    SZN     8,,PR1
         0 001425   001510 604000 0                  TMI     SDFIND0

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:151  
     1002     9694    2            ELSE IF RBLK$->KQ$RBLK.MID.PRIMARY = 0

   9694  0 001426   000006 235100                    LDA     6,,PR0
         0 001427   001433 600000 0                  TZE     s:9696
         0 001430   000006 236100                    LDQ     6,,PR0
         0 001431   100014 116100                    CMPQ    12,,PR1
         0 001432   001442 601000 0                  TNZ     s:9701

     1003     9695    2             OR (RBLK$->KQ$RBLK.MID.PRIMARY = MBLK$->KQ$NRMLMBLK.MID.PRIMARY) THEN
     1004     9696    3              IF FWCG = 0 THEN DO;

   9696  0 001433   200037 236100                    LDQ     FWP$,,AUTO
         0 001434   001440 601000 0                  TNZ     s:9700

     1005     9697    3                CALL CHECKVFC ALTRET (SQFIND0);

   9697  0 001435   005462 701000 0                  TSX1    CHECKVFC
         0 001436   001447 702000 0                  TSX2    SQFIND0

     1006     9698    3                GOTO SFOUND;

   9698  0 001437   001703 710000 0                  TRA     SFOUND

     1007     9699    3                END;
     1008     9700    2              ELSE CALL FWCGL ALTRET(SQFIND0);

   9700  0 001440   003547 701000 0                  TSX1    FWCGL
         0 001441   001447 702000 0                  TSX2    SQFIND0

     1009     9701    2           P$=MBLK$;

   9701  0 001442   200012 236100                    LDQ     MBLK$,,AUTO
         0 001443   200016 756100                    STQ     P$,,AUTO

     1010     9702    2           MBLK$=MBLK$->KQ$MBLK.LNK$;

   9702  0 001444   200012 470500                    LDP0    MBLK$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:152  
         0 001445   000000 236100                    LDQ     0,,PR0
         0 001446   200012 756100                    STQ     MBLK$,,AUTO

     1011     9703    2   SQFIND0:END;

   9703  0 001447   200012 236100       SQFIND0      LDQ     MBLK$,,AUTO
         0 001450   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001451   001407 601000 0                  TNZ     s:9689

     1012     9704    1         GOTO NOTFOUND;

   9704  0 001452   001620 710000 0                  TRA     NOTFOUND

   9697  0 001453                       SDFIND       null
     1013     9705        /**/
     1014     9706        /*D* NAME:         SDFIND
     1015     9707             PURPOSE:      To find a directed message in an MLH having some
     1016     9708                           super MBLKs
     1017     9709        */
     1018     9710        /**/
     1019     9711    1   SDFIND:;
     1020     9712    1         IF MBLK$ ~= ADDR(NIL) THEN

   9712  0 001453   200012 236100                    LDQ     MBLK$,,AUTO
         0 001454   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001455   001473 600000 0                  TZE     s:9720

     1021     9713    1          IF MBLK$->KQ$MBLK.PRIO >= %KQ_AUEP# THEN

   9713  0 001456   200012 470500                    LDP0    MBLK$,,AUTO
         0 001457   000001 220100                    LDX0    1,,PR0
         0 001460   765000 100003                    CMPX0   -5632,DU
         0 001461   001473 602000 0                  TNC     s:9720

     1022     9714    1           IF NOT RBLK$->KQ$RBLK.HONK THEN

   9714  0 001462   200011 471500                    LDP1    RBLK$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:153  
         0 001463   100001 236100                    LDQ     1,,PR1
         0 001464   000400 316007                    CANQ    256,DL
         0 001465   001473 601000 0                  TNZ     s:9720

     1023     9715    1            IF MBLK$->KQ$MBLK.SUPER THEN GOTO SDFIND0;

   9715  0 001466   000010 234100                    SZN     8,,PR0
         0 001467   001510 604000 0                  TMI     SDFIND0

     1024     9716    2            ELSE DO;

     1025     9717    2              CALL CHECKVFC ALTRET (SDFIND);  /* START AT THE TOP */

   9717  0 001470   005462 701000 0                  TSX1    CHECKVFC
         0 001471   001453 702000 0                  TSX2    SDFIND

     1026     9718    2              GOTO SFOUND;

   9718  0 001472   001703 710000 0                  TRA     SFOUND

     1027     9719    2              END;
     1028     9720    2           DO WHILE (MBLK$ ~= ADDR(NIL));

   9720  0 001473   001615 710000 0                  TRA     SDFIND1

     1029     9721    2           IF ADDR(RBLK$->KQ$RBLK.KEY1)->B$$KEY1 ~= ADDR(MBLK$->KQ$MBLK.KEY1)->B$$KEY1
              9721                    THEN

   9721  0 001474   200011 470500                    LDP0    RBLK$,,AUTO
         0 001475   200014 220100                    LDX0    KEY1L,,AUTO
         0 001476   200012 471500                    LDP1    MBLK$,,AUTO
         0 001477   040140 106540                    CMPC    fill='040'O
         0 001500   000002 000010                    ADSC9   2,,PR0                   cn=0,n=*X0
         0 001501   100002 000010                    ADSC9   2,,PR1                   cn=0,n=*X0
         0 001502   001531 600000 0                  TZE     s:9736

     1030     9722    2            IF  MBLK$->KQ$MBLK.SUPER
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:154  

   9722  0 001503   100010 234100                    SZN     8,,PR1
         0 001504   001610 605000 0                  TPL     s:9759
         0 001505   100010 236100                    LDQ     8,,PR1
         0 001506   200000 316003                    CANQ    65536,DU
         0 001507   001610 601000 0                  TNZ     s:9759

     1031     9723    2            AND MBLK$->KQ$MBLK.KEY1ALL = '0'B THEN
     1032     9724    3              DO INHIBIT;

     1033     9725    3   SDFIND0:   MBS=MBLK$->KQ$MBLK.STATE;

   9725  0 001510   200012 470700       SDFIND0      LDP0  ! MBLK$,,AUTO
         0 001511   000010 236300                    LDQ   ! 8,,PR0
         0 001512   000033 772200                    QRL   ! 27
         0 001513   000007 376207                    ANQ   ! 7,DL
         0 001514   200032 756300                    STQ   ! MBS,,AUTO

     1034     9726    3              IF MBS ~= KQSS_IDLE# THEN CALL SC_CGSUPR;

   9726  0 001515   001520 600200 0                  TZE   ! SDFIND01

   9726  0 001516   000000 713600 xsym               CLIMB ! SC_CGSUPR
         0 001517   000000 600000 xsid               climb   nvectors=         0

     1035     9727    3   SDFIND01:  CALL SRCHSUPER ALTRET(SDFIND2);

   9727  0 001520   002007 701200 0     SDFIND01     TSX1  ! SRCHSUPER
         0 001521   001675 702200 0                  TSX2  ! SDFIND2

     1036     9728    4              IF FOUNDIT > 0 THEN DO;

   9728  0 001522   200027 235300                    LDA   ! FOUNDIT,,AUTO
         0 001523   001527 604600 0                  TMOZ  ! s:9732

     1037     9729    4                CALL CHECKVFC1 ALTRET (SDFIND1);  /* START AT THE TOP */

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:155  
   9729  0 001524   005465 701200 0                  TSX1  ! CHECKVFC1
         0 001525   001615 702200 0                  TSX2  ! SDFIND1

     1038     9730    4                GOTO SFOUND0;

   9730  0 001526   001705 710200 0                  TRA   ! SFOUND0

     1039     9731    4                END;
     1040     9732    3              ELSE IF FOUNDIT < 0 THEN GOTO NOTFOUND;

   9732  0 001527   001620 604200 0                  TMI   ! NOTFOUND

     1041     9733    3              END;

   9733  0 001530   001610 710000 0                  TRA     s:9759

     1042     9734    2            ELSE; /* Skip it */
     1043     9735    2           ELSE /* KEY1s equal */
     1044     9736    2           IF ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 ~= ADDR(MBLK$->KQ$MBLK.KEY2)->B$$KEY2
              9736                     THEN

   9736  0 001531   200015 221100                    LDX1    KEY2L,,AUTO
         0 001532   040140 106540                    CMPC    fill='040'O
         0 001533   000004 000011                    ADSC9   4,,PR0                   cn=0,n=*X1
         0 001534   100004 000011                    ADSC9   4,,PR1                   cn=0,n=*X1
         0 001535   001544 600000 0                  TZE     s:9740

     1045     9737    2             IF  MBLK$->KQ$MBLK.SUPER

   9737  0 001536   100010 234100                    SZN     8,,PR1
         0 001537   001543 605000 0                  TPL     s:9737+5
         0 001540   100010 236100                    LDQ     8,,PR1
         0 001541   100000 316003                    CANQ    32768,DU
         0 001542   001510 600000 0                  TZE     SDFIND0
         0 001543   001610 710000 0                  TRA     s:9759

     1046     9738    2             AND MBLK$->KQ$MBLK.KEY2ALL = '0'B THEN GOTO SDFIND0;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:156  
     1047     9739    2             ELSE; /* Skip it */
     1048     9740    2            ELSE /* KEYs equal */ IF MBLK$->KQ$MBLK.SUPER THEN GOTO SDFIND0;

   9740  0 001544   100010 234100                    SZN     8,,PR1
         0 001545   001510 604000 0                  TMI     SDFIND0

     1049     9741    2             ELSE
     1050     9742    2              IF  MBLK$->KQ$NRMLMBLK.MID.PRIMARY < STA$->KQ$STA.DSID

   9742  0 001546   200010 473500                    LDP3    STA$,,AUTO
         0 001547   100014 236100                    LDQ     12,,PR1
         0 001550   300022 116100                    CMPQ    18,,PR3
         0 001551   001563 603000 0                  TRC     s:9749
         0 001552   100001 222100                    LDX2    1,,PR1
         0 001553   765000 102003                    CMPX2   -5632,DU
         0 001554   001563 603000 0                  TRC     s:9749
         0 001555   100010 236100                    LDQ     8,,PR1
         0 001556   100000 316003                    CANQ    32768,DU
         0 001557   001563 600000 0                  TZE     s:9749

     1051     9743    2              AND MBLK$->KQ$MBLK.PRIO < %KQ_AUEP#
     1052     9744    2              AND MBLK$->KQ$NRMLMBLK.STAR THEN
     1053     9745    3                DO;

     1054     9746    3                CALL DELMSG ALTRET(SDFIND1) ; /* Always ALTRETs */

   9746  0 001560   005522 701000 0                  TSX1    DELMSG
         0 001561   001615 702000 0                  TSX2    SDFIND1

     1055     9747    3                END;  /* Never come here */

   9747  0 001562   001610 710000 0                  TRA     s:9759

     1056     9748    2              ELSE
     1057     9749    2               IF RBLK$->KQ$RBLK.MID.PRIMARY = 0

   9749  0 001563   000006 235100                    LDA     6,,PR0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:157  
         0 001564   001570 600000 0                  TZE     s:9751
         0 001565   000006 236100                    LDQ     6,,PR0
         0 001566   100014 116100                    CMPQ    12,,PR1
         0 001567   001610 601000 0                  TNZ     s:9759

     1058     9750    2               OR (RBLK$->KQ$RBLK.MID.PRIMARY = MBLK$->KQ$NRMLMBLK.MID.PRIMARY) THEN
     1059     9751    3                IF FWCG = 0 THEN DO;

   9751  0 001570   200037 236100                    LDQ     FWP$,,AUTO
         0 001571   001575 601000 0                  TNZ     s:9755

     1060     9752    3                  CALL CHECKVFC ALTRET (SDFIND1);

   9752  0 001572   005462 701000 0                  TSX1    CHECKVFC
         0 001573   001615 702000 0                  TSX2    SDFIND1

     1061     9753    3                  GOTO SFOUND;

   9753  0 001574   001703 710000 0                  TRA     SFOUND

     1062     9754    3                  END;
     1063     9755    2                ELSE IF (FWP$->KQ$FWP.FC >= 0) OR

   9755  0 001575   200037 474500                    LDP4    FWP$,,AUTO
         0 001576   400006 235100                    LDA     6,,PR4
         0 001577   001606 605000 0                  TPL     s:9758
         0 001600   400007 236100                    LDQ     7,,PR4
         0 001601   000020 316007                    CANQ    16,DL
         0 001602   001606 600000 0                  TZE     s:9758
         0 001603   100010 236100                    LDQ     8,,PR1
         0 001604   100000 316003                    CANQ    32768,DU
         0 001605   001610 601000 0                  TNZ     s:9759

     1064     9756    2                 (NOT FWP$->KQ$FWP.EXMPTSTAR) OR
     1065     9757    2                 (NOT MBLK$->KQ$NRMLMBLK.STAR) THEN
     1066     9758    2                  CALL FWCGL ALTRET(SDFIND1);

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:158  
   9758  0 001606   003547 701000 0                  TSX1    FWCGL
         0 001607   001615 702000 0                  TSX2    SDFIND1

     1067     9759    2           P$=MBLK$;

   9759  0 001610   200012 236100                    LDQ     MBLK$,,AUTO
         0 001611   200016 756100                    STQ     P$,,AUTO

     1068     9760    2           MBLK$=MBLK$->KQ$MBLK.LNK$;

   9760  0 001612   200012 470500                    LDP0    MBLK$,,AUTO
         0 001613   000000 236100                    LDQ     0,,PR0
         0 001614   200012 756100                    STQ     MBLK$,,AUTO

     1069     9761    2   SDFIND1:END;

   9761  0 001615   200012 236100       SDFIND1      LDQ     MBLK$,,AUTO
         0 001616   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 001617   001474 601000 0                  TNZ     s:9721

     1070     9762        /**/
     1071     9763                     /**********************************************
     1072     9764                      *                                            *
     1073     9765                      *              Nothing found                 *
     1074     9766                      *                                            *
     1075     9767                      **********************************************/
     1076     9768    1   NOTFOUND:;

   9768  0 001620                       NOTFOUND     null
     1077     9769    1         IF TERM ~= 0 THEN

   9769  0 001620   200026 235100                    LDA     TERM,,AUTO
         0 001621   001656 600000 0                  TZE     s:9798

     1078     9770    2           DO;

     1079     9771                          /******************************
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:159  
     1080     9772                           *                            *
     1081     9773                           *         Terminal           *
     1082     9774                           *                            *
     1083     9775                           ******************************/
     1084     9776    2           IF ENTFLAG ~= 0 THEN

   9776  0 001622   200030 236100                    LDQ     ENTFLAG,,AUTO
         0 001623   001643 600000 0                  TZE     s:9788

     1085     9777    3             DO;

     1086     9778    3             IF RBLK$->KQ$RBLK.ERR ~= 0 THEN GOTO SFOUND1;

   9778  0 001624   200011 470500                    LDP0    RBLK$,,AUTO
         0 001625   000001 236100                    LDQ     1,,PR0
         0 001626   007000 316007                    CANQ    3584,DL
         0 001627   001761 601000 0                  TNZ     SFOUND1

     1087     9779    3             IF RBLK$->KQ$RBLK.EOFNONE THEN

   9779  0 001630   200000 316007                    CANQ    65536,DL
         0 001631   001636 600000 0                  TZE     s:9784

     1088     9780    4               DO;

     1089     9781    4               RBLK$->KQ$RBLK.ERR=KQGE_EOF#;

   9781  0 001632   000005 376000 1                  ANQ     5
         0 001633   004000 276007                    ORQ     2048,DL
         0 001634   000001 756100                    STQ     1,,PR0

     1090     9782    4               GOTO SFOUND1;

   9782  0 001635   001761 710000 0                  TRA     SFOUND1

     1091     9783    4               END;
     1092     9784    3             RBLK$->KQ$RBLK.STATE=KQRS_PEND#;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:160  

   9784  0 001636   000002 220003                    LDX0    2,DU
         0 001637   000001 740100                    STX0    1,,PR0

     1093     9785    3             CALL DXFDUN;

   9785  0 001640   005703 701000 0                  TSX1    DXFDUN
         0 001641   000000 011000                    NOP     0

     1094     9786    3             RETURN;

   9786  0 001642   000000 702200 xent               TSX2  ! X66_ARET

     1095     9787    3             END;
     1096     9788    2           IF RBLK$->KQ$RBLK.EOFNONE THEN RBLK$->KQ$RBLK.ERR=KQGE_EOF#;

   9788  0 001643   200011 470500                    LDP0    RBLK$,,AUTO
         0 001644   000001 236100                    LDQ     1,,PR0
         0 001645   200000 316007                    CANQ    65536,DL
         0 001646   001652 600000 0                  TZE     s:9789

   9788  0 001647   000005 376000 1                  ANQ     5
         0 001650   004000 276007                    ORQ     2048,DL
         0 001651   000001 756100                    STQ     1,,PR0

     1097     9789    2           MLH$->KQ$MLH.BUSY.RIP='0'B;

   9789  0 001652   200024 471500                    LDP1    MLH$,,AUTO
         0 001653   000006 236000 1                  LDQ     6
         0 001654   100003 356100                    ANSQ    3,,PR1

     1098     9790    2           END;

   9790  0 001655   001672 710000 0                  TRA     s:9809

     1099     9791    1         ELSE
     1100     9792    2           DO;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:161  

     1101     9793                          /******************************
     1102     9794                           *                            *
     1103     9795                           *            DCB             *
     1104     9796                           *                            *
     1105     9797                           ******************************/
     1106     9798    2           IF FWCG ~= 0 THEN

   9798  0 001656   200037 236100                    LDQ     FWP$,,AUTO
         0 001657   001672 600000 0                  TZE     s:9809

     1107     9799    3             DO;

     1108     9800                     /*    FWCG never 'finds' a message,
     1109     9801                      *    so we always come here after
     1110     9802                      *    we've examined the entire list
     1111     9803                      */
     1112     9804    3             IF Q = 0 THEN CALL DXFDUN;

   9804  0 001660   200025 235100                    LDA     Q,,AUTO
         0 001661   001664 601000 0                  TNZ     s:9805

   9804  0 001662   005703 701000 0                  TSX1    DXFDUN
         0 001663   000000 011000                    NOP     0

     1113     9805    3             IF RBLK$->KQ$RBLK.ERR ~= 0 THEN ALTRETURN;

   9805  0 001664   200011 470500                    LDP0    RBLK$,,AUTO
         0 001665   000001 236100                    LDQ     1,,PR0
         0 001666   007000 316007                    CANQ    3584,DL
         0 001667   001671 600000 0                  TZE     s:9806

   9805  0 001670   000000 702200 xent               TSX2  ! X66_AALT

     1114     9806    3             RETURN;

   9806  0 001671   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:162  

     1115     9807    3             END;
     1116     9808    2           END;
     1117     9809    1         PARM$R=0;

   9809  0 001672   200004 470500                    LDP0    @PARM$,,AUTO
         0 001673   000000 450100                    STZ     0,,PR0

     1118     9810    1         RETURN;

   9810  0 001674   000000 702200 xent               TSX2  ! X66_ARET

   9809  0 001675                       SDFIND2      null
     1119     9811    1   SDFIND2:;
     1120     9812    1         IF ENTFLAG = 0 THEN

   9812  0 001675   200030 235100                    LDA     ENTFLAG,,AUTO
         0 001676   001702 601000 0                  TNZ     s:9814

     1121     9813    1          PARM$R=-1;

   9813  0 001677   000001 336007                    LCQ     1,DL
         0 001700   200004 470500                    LDP0    @PARM$,,AUTO
         0 001701   000000 756100                    STQ     0,,PR0

     1122     9814    1         RETURN;

   9814  0 001702   000000 702200 xent               TSX2  ! X66_ARET

     1123     9815        /**/
     1124     9816                     /**********************************************
     1125     9817                      *                                            *
     1126     9818                      *              Message found                 *
     1127     9819                      *                                            *
     1128     9820                      **********************************************/
     1129     9821    2           DO INHIBIT;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:163  
     1130     9822    2   SFOUND: CALL REMOVE;

   9822  0 001703   005340 701200 0     SFOUND       TSX1  ! REMOVE
         0 001704   000000 011200                    NOP   ! 0

     1131     9823    2   SFOUND0:RBLK$->KQ$RBLK.STATE=KQRS_XFIP#;

   9823  0 001705   000003 220203       SFOUND0      LDX0  ! 3,DU
         0 001706   200011 470700                    LDP0  ! RBLK$,,AUTO
         0 001707   000001 740300                    STX0  ! 1,,PR0

     1132     9824    2           MBLK$->KQ$MBLK.LNK$=ADDR(NIL);

   9824  0 001710   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 001711   200012 471700                    LDP1  ! MBLK$,,AUTO
         0 001712   100000 756300                    STQ   ! 0,,PR1

     1133     9825    2           IF RBLK$->KQ$RBLK.MBLK$~=ADDR(NIL) THEN

   9825  0 001713   000000 236300                    LDQ   ! 0,,PR0
         0 001714   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 001715   001721 600200 0                  TZE   ! s:9827

     1134     9826    2            RBLK$->KQ$RBLK.MBLK$->KQ$NRMLMBLK.RBLK = '0'B;

   9826  0 001716   000000 473700                    LDP3  ! 0,,PR0
         0 001717   000007 236200 1                  LDQ   ! 7
         0 001720   300010 356300                    ANSQ  ! 8,,PR3

     1135     9827    2           RBLK$->KQ$RBLK.MBLK$=MBLK$;

   9827  0 001721   200012 236300                    LDQ   ! MBLK$,,AUTO
         0 001722   000000 756300                    STQ   ! 0,,PR0

     1136     9828    2           MBLK$->KQ$NRMLMBLK.RBLK = '1'B;

   9828  0 001723   000100 236207                    LDQ   ! 64,DL
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:164  
         0 001724   100010 256300                    ORSQ  ! 8,,PR1

     1137     9829    2           RBLK$->KQ$RBLK.NCDDA=MBLK$->KQ$MBLK.DDA;

   9829  0 001725   100006 235300                    LDA   ! 6,,PR1
         0 001726   000011 755300                    STA   ! 9,,PR0

     1138     9830    2           IF TERM = 0 THEN

   9830  0 001727   200026 235300                    LDA   ! TERM,,AUTO
         0 001730   001741 601200 0                  TNZ   ! s:9847

     1139     9831    3             DO;

     1140     9832                          /******************************
     1141     9833                           *                            *
     1142     9834                           *            DCB             *
     1143     9835                           *                            *
     1144     9836                           ******************************/
     1145     9837    3             IF Q = 0 THEN

   9837  0 001731   200025 235300                    LDA   ! Q,,AUTO
         0 001732   001735 601200 0                  TNZ   ! s:9839

     1146     9838    3              CALL DXFDUN;

   9838  0 001733   005703 701200 0                  TSX1  ! DXFDUN
         0 001734   000000 011200                    NOP   ! 0

     1147     9839    3             PARM$=MBLK$;

   9839  0 001735   200012 236300                    LDQ   ! MBLK$,,AUTO
         0 001736   200004 470700                    LDP0  ! @PARM$,,AUTO
         0 001737   000000 756300                    STQ   ! 0,,PR0

     1148     9840    3   ALTRT:    ALTRETURN;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:165  
   9840  0 001740   000000 702200 xent  ALTRT        TSX2  ! X66_AALT

     1149     9841    3             END;
     1150     9842                          /******************************
     1151     9843                           *                            *
     1152     9844                           *         Terminal           *
     1153     9845                           *                            *
     1154     9846                           ******************************/
     1155     9847    2           IF ENTFLAG = 0 THEN

   9847  0 001741   200030 235300                    LDA   ! ENTFLAG,,AUTO
         0 001742   001761 601200 0                  TNZ   ! SFOUND1

     1156     9848    3             DO;

     1157     9849    3             PARM$=MBLK$;

   9849  0 001743   200012 236300                    LDQ   ! MBLK$,,AUTO
         0 001744   200004 473700                    LDP3  ! @PARM$,,AUTO
         0 001745   300000 756300                    STQ   ! 0,,PR3

     1158     9850    3             MLH$->KQ$MLH.BUSY.RIP='0'B;

   9850  0 001746   200024 474700                    LDP4  ! MLH$,,AUTO
         0 001747   000006 236200 1                  LDQ   ! 6
         0 001750   400003 356300                    ANSQ  ! 3,,PR4

     1159     9851                  %UNLOCK (G=STA$->KQ$STA.GATE);

   9852  0 001751   200010 236300                    LDQ   ! STA$,,AUTO
         0 001752   000016 036203                    ADLQ  ! 14,DU
         0 001753   200062 756300                    STQ   ! @M$+1,,AUTO
         0 001754   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 001755   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 001756   000000 701200 xent               TSX1  ! HFC$UNLOCK
         0 001757   000000 011200                    NOP   ! 0

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:166  
     1160     9854    3             ALTRETURN;

   9854  0 001760   000000 702200 xent               TSX2  ! X66_AALT

     1161     9855    3             END;
     1162     9856    2   SFOUND1:STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;

   9856  0 001761   200010 471700       SFOUND1      LDP1  ! STA$,,AUTO
         0 001762   100020 236300                    LDQ   ! 16,,PR1
         0 001763   000001 036207                    ADLQ  ! 1,DL
         0 001764   100020 552304                    STBQ  ! 16,'04'O,PR1

     1163     9857    2           CALL DXFDUN;

   9857  0 001765   005703 701200 0                  TSX1  ! DXFDUN
         0 001766   000000 011200                    NOP   ! 0

     1164     9858    2           IF STA$->KQ$STA.LDCT$ ~= ADDR(NIL) THEN

   9858  0 001767   200010 470700                    LDP0  ! STA$,,AUTO
         0 001770   000010 236300                    LDQ   ! 8,,PR0
         0 001771   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 001772   002002 600200 0                  TZE   ! s:9861

     1165     9859    2            CALL KQG$GOTMSG (STA$->KQ$STA.LDCT$->NK$LDCT);

   9859  0 001773   000010 471700                    LDP1  ! 8,,PR0
         0 001774   200062 451700                    STP1  ! @M$+1,,AUTO
         0 001775   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 001776   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 001777   000000 701200 xent               TSX1  ! KQG$GOTMSG
         0 002000   000000 011200                    NOP   ! 0
         0 002001   002006 710200 0                  TRA   ! s:9862

     1166     9860    2           ELSE  /* terminal not currently there - RCVR */
     1167     9861    2            CALL KQG$GOTMSGSTA (STA$->KQ$STA);

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:167  
   9861  0 002002   200010 630700                    EPPR0 ! STA$,,AUTO
         0 002003   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         0 002004   000000 701200 xent               TSX1  ! KQG$GOTMSGSTA
         0 002005   000000 011200                    NOP   ! 0

     1168     9862    2           RETURN;

   9862  0 002006   000000 702200 xent               TSX2  ! X66_ARET

     1169     9863    2           END;

     1170     9864        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:168  
     1171     9865        /**/
     1172     9866        /*D* NAME:         SRCHSUPER
     1173     9867             PURPOSE:      To pull a super MBLK into memory & search it.
     1174     9868                           ENTFLAG is used only for TERM requests, and
     1175     9869                                   indicates whether (1) or not (0) we
     1176     9870                                   have ever exited from KQL, delaying
     1177     9871                                   processin of the request.
     1178     9872                           MBS     is the state of the MBLK when we
     1179     9873                                   were entered.
     1180     9874                           TERM    0/1 for DCB/TERMINAL
     1181     9875                           STA$    points to the station
     1182     9876                           MLH$    points to the MLH
     1183     9877                           Q       0/1 for STA/Q search
     1184     9878                           MBLK$   points to super MBLK to search
     1185     9879                           P$      its predescessor pointer (see REMOVE)
     1186     9880                           FWCG    indicates whether or not this is FWCG;
     1187     9881                                   if ~= 0 (yes) then we always return
     1188     9882                                   with FOUNDIT = 0 after performing the
     1189     9883                                   indicated function on all messages
     1190     9884                                   found.
     1191     9885             OUTPUT:       ALTRET  if a TERM request had to be delayed in
     1192     9886                                   order to do I/O, with station unlocked
     1193     9887                                   and LOCKCNT incremented.
     1194     9888
     1195     9889
     1196     9890                           RETURN  otherwise, i.e. search has been completed,
     1197     9891                                   with:
     1198     9892                           FOUNDIT = 0 ---> look @ nxt MBLK in MLH, this one
     1199     9893                                            has nothing interesting
     1200     9894                                   > 0 ---> got one removed; goto SFOUND0
     1201     9895                                            appropriate gate is still locked.
     1202     9896                                   < 0 ---> quit - comgroup full
     1203     9897
     1204     9898        */
     1205     9899    1   SRCHSUPER: PROC ALTRET;

   9899  0 002007   200042 741300       SRCHSUPER    STX1  ! TCOUNT+2,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:169  

     1206     9900        /**/
     1207     9901    2   DCL ATFDA BIT(36) ALIGNED;
     1208     9902    2   DCL L$ PTR;
     1209     9903    2   DCL NMBLKS SBIN;
     1210     9904    2   DCL SAVP$ PTR;
     1211     9905    2   DCL IP$ REDEF SAVP$ PTR;
     1212     9906    2   DCL CTLBLK$ PTR;
     1213     9907        /**/
     1214     9908    3   S0:     DO INHIBIT;

   9908  0 002010                       S0           null
     1215     9909    3           FOUNDIT=0;

   9909  0 002010   200027 450300                    STZ   ! FOUNDIT,,AUTO

     1216     9910    4             DO CASE (MBS);

   9910  0 002011   200032 235300                    LDA   ! MBS,,AUTO
         0 002012   000005 115207                    CMPA  ! 5,DL
         0 002013   002015 602205 0                  TNC   ! s:9910+4,AL
         0 002014   002133 710200 0                  TRA   ! s:9950
         0 002015   002022 710200 0                  TRA   ! s:9913
         0 002016   002047 710200 0                  TRA   ! s:9923
         0 002017   002050 710200 0                  TRA   ! s:9926
         0 002020   002135 710200 0                  TRA   ! S1
         0 002021   002132 710200 0                  TRA   ! s:9945

     1217     9911
     1218     9912    4               CASE (KQSS_IDLE#);

     1219     9913    4                 IF MBLK$->KQ$MBLK.STATE ~= KQSS_IDLE# THEN CALL SC_CGSUPR;

   9913  0 002022   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002023   000010 236300                    LDQ   ! 8,,PR0
         0 002024   007000 316203                    CANQ  ! 3584,DU
         0 002025   002030 600200 0                  TZE   ! S00
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:170  

   9913  0 002026   000000 713600 xsym               CLIMB ! SC_CGSUPR
         0 002027   000000 600000 xsid               climb   nvectors=         0

     1220     9914    4   S00:          TCOUNT=0;

   9914  0 002030   200040 450300       S00          STZ   ! TCOUNT,,AUTO

     1221     9915    4                 MBLK$->KQ$MBLK.PCDDA=0;

   9915  0 002031   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002032   000017 450300                    STZ   ! 15,,PR0

     1222     9916    4                 MBLK$->KQ$MBLK.CCSTAMP=MBLK$->KQ$MBLK.STAMP;

   9916  0 002033   000001 720300                    LXL0  ! 1,,PR0
         0 002034   000016 440300                    SXL0  ! 14,,PR0

     1223     9917    4                 IF MBLK$->KQ$MBLK.KEY1VALID = '0'B THEN

   9917  0 002035   000010 236300                    LDQ   ! 8,,PR0
         0 002036   020000 316203                    CANQ  ! 8192,DU
         0 002037   002042 601200 0                  TNZ   ! S01

     1224     9918    4                  MBLK$->KQ$MBLK.SDA.CCDDA=MBLK$->KQ$MBLK.DDA;

   9918  0 002040   000006 235300                    LDA   ! 6,,PR0
         0 002041   000003 755300                    STA   ! 3,,PR0

     1225     9919    4   S01:          DBLK$=ADDR(NIL);

   9919  0 002042   000001 236200 xsym  S01          LDQ   ! B_VECTNIL+1
         0 002043   200020 756300                    STQ   ! DBLK$,,AUTO

     1226     9920    4                 CALL SFETCH ALTRET(ALTRT);

   9920  0 002044   004367 701200 0                  TSX1  ! SFETCH
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:171  
         0 002045   003377 702200 0                  TSX2  ! ALTRT
         0 002046   002135 710200 0                  TRA   ! S1

     1227     9921
     1228     9922    4               CASE (KQSS_NDFR#);

     1229     9923    4                 GOTO S01;

   9923  0 002047   002042 710200 0                  TRA   ! S01

     1230     9924
     1231     9925    4               CASE (KQSS_NMEM#);

     1232     9926    4                 IF MBLK$->KQ$MBLK.MREQ >= 0 THEN CALL SC_CGSUPR;

   9926  0 002050   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002051   000010 236300                    LDQ   ! 8,,PR0
         0 002052   000011 736200                    QLS   ! 9
         0 002053   000033 732200                    QRS   ! 27
         0 002054   000000 116203                    CMPQ  ! 0,DU
         0 002055   002060 604200 0                  TMI   ! s:9927

   9926  0 002056   000000 713600 xsym               CLIMB ! SC_CGSUPR
         0 002057   000000 600000 xsid               climb   nvectors=         0

     1233     9927    4                 IF Q = 0 THEN

   9927  0 002060   200025 235300                    LDA   ! Q,,AUTO
         0 002061   002066 601200 0                  TNZ   ! s:9930

     1234     9928    4                  MLH$->KQ$MLH.RQMEM='0'B;

   9928  0 002062   200024 470700                    LDP0  ! MLH$,,AUTO
         0 002063   000010 236200 1                  LDQ   ! 8
         0 002064   000003 356300                    ANSQ  ! 3,,PR0
         0 002065   002071 710200 0                  TRA   ! s:9931

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:172  
     1235     9929    4                 ELSE
     1236     9930    4                  KQ$QUEUE.RQMEM='0'B;

   9930  0 002066   200013 470700                    LDP0  ! CG$,,AUTO
         0 002067   000010 236200 1                  LDQ   ! 8
         0 002070   000063 356300                    ANSQ  ! 51,,PR0

     1237     9931    4                 IF MBLK$->KQ$MBLK.XSP.MREQ$ ~= ADDR(NIL) THEN

   9931  0 002071   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002072   000004 236300                    LDQ   ! 4,,PR0
         0 002073   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 002074   002121 600200 0                  TZE   ! s:9940

     1238     9932    5                   DO;

     1239     9933    5                   IF Q = 0 THEN

   9933  0 002075   200025 235300                    LDA   ! Q,,AUTO
         0 002076   002110 601200 0                  TNZ   ! s:9937

     1240     9934    6                     DO;

     1241     9935    6                     IF MLH$->KQ$MLH.GACT THEN CALL REG (KQSS_Q4GC#) ALTRET(ALTRT);

   9935  0 002077   200024 471700                    LDP1  ! MLH$,,AUTO
         0 002100   100003 236300                    LDQ   ! 3,,PR1
         0 002101   000040 316203                    CANQ  ! 32,DU
         0 002102   002120 600200 0                  TZE   ! s:9938

   9935  0 002103   000011 236200 1                  LDQ   ! 9
         0 002104   200055 756300                    STQ   ! @M$+1,,AUTO
         0 002105   004555 701200 0                  TSX1  ! REG
         0 002106   003377 702200 0                  TSX2  ! ALTRT

     1242     9936    6                     END;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:173  
   9936  0 002107   002120 710200 0                  TRA   ! s:9938

     1243     9937    5                   ELSE IF KQ$QUEUE.GACT THEN CALL REG (KQSS_Q4GC#) ALTRET(ALTRT);

   9937  0 002110   200013 471700                    LDP1  ! CG$,,AUTO
         0 002111   100063 236300                    LDQ   ! 51,,PR1
         0 002112   000040 316203                    CANQ  ! 32,DU
         0 002113   002120 600200 0                  TZE   ! s:9938

   9937  0 002114   000011 236200 1                  LDQ   ! 9
         0 002115   200055 756300                    STQ   ! @M$+1,,AUTO
         0 002116   004555 701200 0                  TSX1  ! REG
         0 002117   003377 702200 0                  TSX2  ! ALTRT

     1244     9938    5                   GOTO S00;

   9938  0 002120   002030 710200 0                  TRA   ! S00

     1245     9939    5                   END;
     1246     9940    4                 RBLK$->KQ$RBLK.ERR=KQGE_QFUL#;

   9940  0 002121   200011 471700                    LDP1  ! RBLK$,,AUTO
         0 002122   100001 236300                    LDQ   ! 1,,PR1
         0 002123   000005 376200 1                  ANQ   ! 5
         0 002124   001000 276207                    ORQ   ! 512,DL
         0 002125   100001 756300                    STQ   ! 1,,PR1

     1247     9941    4                 FOUNDIT=-1;

   9941  0 002126   000001 335207                    LCA   ! 1,DL
         0 002127   200027 755300                    STA   ! FOUNDIT,,AUTO

     1248     9942    4                 RETURN;

   9942  0 002130   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 002131   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:174  
     1249     9943
     1250     9944    4               CASE (KQSS_Q4GC#);

     1251     9945    4                 GOTO S00;

   9945  0 002132   002030 710200 0                  TRA   ! S00

     1252     9946
     1253     9947    4               CASE (KQSS_IOIP#);

     1254     9948
     1255     9949    4               CASE (ELSE);

     1256     9950    4                 CALL SC_CGSUPR;

   9950  0 002133   000000 713600 xsym               CLIMB ! SC_CGSUPR
         0 002134   000000 600000 xsid               climb   nvectors=         0

     1257     9951
     1258     9952    4             END;

   9940  0 002135                       S1           null
     1259     9953        /**/
     1260     9954        /**/
     1261     9955    3   S1:     ;
     1262     9956                     /*    Search the
     1263     9957                      *    DBLK looking for
     1264     9958                      *    a good message.
     1265     9959                      *    If we find one,
     1266     9960                      *    then go look at
     1267     9961                      *    the INSHD$ list.
     1268     9962                      *    Else try to FLINK
     1269     9963                      *    to the next DBLK.
     1270     9964                      */
     1271     9965    3           SAVP$=ADDR(NIL);

   9965  0 002135   000001 236200 xsym               LDQ   ! B_VECTNIL+1
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:175  
         0 002136   200046 756300                    STQ   ! SAVP$,,AUTO

     1272     9966    3           IF DBLK$ = ADDR(NIL) THEN

   9966  0 002137   200020 236300                    LDQ   ! DBLK$,,AUTO
         0 002140   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 002141   002176 601200 0                  TNZ   ! s:9998

     1273     9967    4             DO;

     1274     9968                     /*    Error fetching
     1275     9969                      *    the DBLK.
     1276     9970                      *    Truncate the
     1277     9971                      *    disc list at
     1278     9972                      *    the end of the
     1279     9973                      *    BLINK DBLK, by
     1280     9974                      *    copying TCOUNT
     1281     9975                      *    over COUNT.
     1282     9976                      */
     1283     9977    4             IF MBLK$->KQ$MBLK.DDA ~= 0 THEN CALL DISKERR;

   9977  0 002142   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002143   000006 235300                    LDA   ! 6,,PR0
         0 002144   002147 600200 0                  TZE   ! S2

   9977  0 002145   004163 701200 0                  TSX1  ! DISKERR
         0 002146   000000 011200                    NOP   ! 0

     1284     9978    4   S2:       I=MBLK$->KQ$MBLK.COUNT-TCOUNT;

   9978  0 002147   200012 470700       S2           LDP0  ! MBLK$,,AUTO
         0 002150   000015 236300                    LDQ   ! 13,,PR0
         0 002151   200040 136300                    SBLQ  ! TCOUNT,,AUTO
         0 002152   200021 756300                    STQ   ! I,,AUTO

     1285     9979    4             MBLK$->KQ$MBLK.COUNT=TCOUNT;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:176  
   9979  0 002153   200040 235300                    LDA   ! TCOUNT,,AUTO
         0 002154   000015 755300                    STA   ! 13,,PR0

     1286     9980    4             MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT-I;

   9980  0 002155   200024 471700                    LDP1  ! MLH$,,AUTO
         0 002156   100005 236300                    LDQ   ! 5,,PR1
         0 002157   200021 136300                    SBLQ  ! I,,AUTO
         0 002160   100005 756300                    STQ   ! 5,,PR1

     1287     9981    4             IF MBLK$->KQ$MBLK.KEY1VALID

   9981  0 002161   000010 236300                    LDQ   ! 8,,PR0
         0 002162   020000 316203                    CANQ  ! 8192,DU
         0 002163   002167 601200 0                  TNZ   ! s:9984
         0 002164   000003 236300                    LDQ   ! 3,,PR0
         0 002165   000006 116300                    CMPQ  ! 6,,PR0
         0 002166   002171 601200 0                  TNZ   ! s:9987

     1288     9982    4             OR MBLK$->KQ$MBLK.SDA.CCDDA = MBLK$->KQ$MBLK.DDA THEN
     1289     9983    5               DO;

     1290     9984    5               MBLK$->KQ$MBLK.DDA=0;

   9984  0 002167   000006 450300                    STZ   ! 6,,PR0

     1291     9985    5               GOTO S30;

   9985  0 002170   002625 710200 0                  TRA   ! S30

     1292     9986    5               END;
     1293     9987    4             MBLK$->KQ$MBLK.SDA.LDA=MBLK$->KQ$MBLK.PCDDA;

   9987  0 002171   000017 235300                    LDA   ! 15,,PR0
         0 002172   000002 755300                    STA   ! 2,,PR0

     1294     9988    4             MBLK$->KQ$MBLK.LCSTAMP=MLH$->KQ$MLH.PCSTAMP;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:177  

   9988  0 002173   100004 220300                    LDX0  ! 4,,PR1
         0 002174   000016 740300                    STX0  ! 14,,PR0

     1295     9989    4             GOTO S30;

   9989  0 002175   002625 710200 0                  TRA   ! S30

     1296     9990    4             END;
     1297     9991
     1298     9992
     1299     9993                     /*    The read succeeded.
     1300     9994                      *    Validate the
     1301     9995                      *    DBLK we just
     1302     9996                      *    read.
     1303     9997                      */
     1304     9998    3           CTLBLK$=PINCRW(DBLK$,DBLK$->KQ$DBLK.SIZW-SIZEW(KQ$MBLK));

   9998  0 002176   200020 470700                    LDP0  ! DBLK$,,AUTO
         0 002177   000004 220300                    LDX0  ! 4,,PR0
         0 002200   777760 636210                    EAQ   ! -16,X0
         0 002201   200020 036300                    ADLQ  ! DBLK$,,AUTO
         0 002202   200047 756300                    STQ   ! CTLBLK$,,AUTO

     1305     9999    3           P$=PINCRW(DBLK$,SIZEW(KQ$DBLK)+CTLBLK$->KQ$MBLK.FIRSTX);

   9999  0 002203   200047 471700                    LDP1  ! CTLBLK$,,AUTO
         0 002204   100013 721300                    LXL1  ! 11,,PR1
         0 002205   000006 636211                    EAQ   ! 6,X1
         0 002206   200020 036300                    ADLQ  ! DBLK$,,AUTO
         0 002207   200016 756300                    STQ   ! P$,,AUTO

     1306    10000    3           NMBLKS=DBLK$->KQ$DBLK.DSIZE/SIZEC(KQ$MBLK);

  10000  0 002210   000000 236300                    LDQ   ! 0,,PR0
         0 002211   777777 376207                    ANQ   ! -1,DL
         0 002212   000006 772200                    QRL   ! 6
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:178  
         0 002213   200045 756300                    STQ   ! NMBLKS,,AUTO

     1307    10001    3           IF TCOUNT+NMBLKS > MBLK$->KQ$MBLK.COUNT THEN

  10001  0 002214   200040 036300                    ADLQ  ! TCOUNT,,AUTO
         0 002215   200012 473700                    LDP3  ! MBLK$,,AUTO
         0 002216   300015 116300                    CMPQ  ! 13,,PR3
         0 002217   002222 604600 0                  TMOZ  ! s:10003

     1308    10002    3            CALL SC_CGSUPR;

  10002  0 002220   000000 713600 xsym               CLIMB ! SC_CGSUPR
         0 002221   000000 600000 xsid               climb   nvectors=         0

     1309    10003    3           IF MBLK$->KQ$MBLK.KEY1VALID

  10003  0 002222   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002223   000010 236300                    LDQ   ! 8,,PR0
         0 002224   020000 316203                    CANQ  ! 8192,DU
         0 002225   002231 601200 0                  TNZ   ! s:10006
         0 002226   000003 236300                    LDQ   ! 3,,PR0
         0 002227   000006 116300                    CMPQ  ! 6,,PR0
         0 002230   002252 601200 0                  TNZ   ! s:10024

     1310    10004    3           OR MBLK$->KQ$MBLK.SDA.CCDDA = MBLK$->KQ$MBLK.DDA THEN
     1311    10005    4             DO;

     1312    10006    4             ATFDA='1'B;

  10006  0 002231   400000 236203                    LDQ   ! -131072,DU
         0 002232   200043 756300                    STQ   ! ATFDA,,AUTO

     1313    10007    4             IF CTLBLK$->KQ$MBLK.PCVALID THEN

  10007  0 002233   200047 471700                    LDP1  ! CTLBLK$,,AUTO
         0 002234   100010 236300                    LDQ   ! 8,,PR1
         0 002235   010000 316203                    CANQ  ! 4096,DU
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:179  
         0 002236   002244 600200 0                  TZE   ! s:10017

     1314    10008    5               DO;

     1315    10009    5               IF CTLBLK$->KQ$MBLK.PCDDA ~= 0 THEN

  10009  0 002237   100017 235300                    LDA   ! 15,,PR1
         0 002240   002262 600200 0                  TZE   ! s:10031

     1316    10010    6                 DO;

     1317    10011    6                 CALL DISKERR;

  10011  0 002241   004163 701200 0                  TSX1  ! DISKERR
         0 002242   000000 011200                    NOP   ! 0

     1318    10012    6                 GOTO S2;

  10012  0 002243   002147 710200 0                  TRA   ! S2

     1319    10013    6                 END;
     1320    10014    5               END;
     1321    10015    4             ELSE
     1322    10016    5               DO;

     1323    10017    5               CTLBLK$->KQ$MBLK.PCVALID='1'B;

  10017  0 002244   010000 236203                    LDQ   ! 4096,DU
         0 002245   100010 256300                    ORSQ  ! 8,,PR1

     1324    10018    5               CTLBLK$->KQ$MBLK.PCDDA=0;

  10018  0 002246   100017 450300                    STZ   ! 15,,PR1

     1325    10019    5               CALL UPDATE;

  10019  0 002247   004150 701200 0                  TSX1  ! UPDATE
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:180  
         0 002250   000000 011200                    NOP   ! 0

     1326    10020    5               END;

     1327    10021    4             END;

  10021  0 002251   002262 710200 0                  TRA   ! s:10031

     1328    10022    3           ELSE
     1329    10023    4             DO;

     1330    10024    4             ATFDA='0'B;

  10024  0 002252   200043 450300                    STZ   ! ATFDA,,AUTO

     1331    10025    4             IF CTLBLK$->KQ$MBLK.PCDDA ~= MBLK$->KQ$MBLK.PCDDA THEN

  10025  0 002253   200047 471700                    LDP1  ! CTLBLK$,,AUTO
         0 002254   100017 236300                    LDQ   ! 15,,PR1
         0 002255   000017 116300                    CMPQ  ! 15,,PR0
         0 002256   002262 600200 0                  TZE   ! s:10031

     1332    10026    5               DO;

     1333    10027    5               CALL DISKERR;

  10027  0 002257   004163 701200 0                  TSX1  ! DISKERR
         0 002260   000000 011200                    NOP   ! 0

     1334    10028    5               GOTO S2;

  10028  0 002261   002147 710200 0                  TRA   ! S2

     1335    10029    5               END;
     1336    10030    4             END;
     1337    10031    3           IF MBLK$->KQ$MBLK.KEY1VALID

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:181  
  10031  0 002262   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002263   000010 236300                    LDQ   ! 8,,PR0
         0 002264   020000 316203                    CANQ  ! 8192,DU
         0 002265   002271 601200 0                  TNZ   ! s:10033
         0 002266   000003 236300                    LDQ   ! 3,,PR0
         0 002267   000002 116300                    CMPQ  ! 2,,PR0
         0 002270   002277 601200 0                  TNZ   ! s:10061

     1338    10032    3           OR MBLK$->KQ$MBLK.SDA.CCDDA = MBLK$->KQ$MBLK.SDA.LDA THEN
     1339    10033    3            IF TCOUNT+NMBLKS ~= MBLK$->KQ$MBLK.COUNT THEN

  10033  0 002271   200040 236300                    LDQ   ! TCOUNT,,AUTO
         0 002272   200045 036300                    ADLQ  ! NMBLKS,,AUTO
         0 002273   000015 116300                    CMPQ  ! 13,,PR0
         0 002274   002277 600200 0                  TZE   ! s:10061

     1340    10034    4              DO;

     1341    10035    4              CALL SC_CGSUPR;

  10035  0 002275   000000 713600 xsym               CLIMB ! SC_CGSUPR
         0 002276   000000 600000 xsid               climb   nvectors=         0

     1342    10036    4              END;

     1343    10037
     1344    10038
     1345    10039
     1346    10040                     /*    Search
     1347    10041                      *    thru the
     1348    10042                      *    DBLK.
     1349    10043                      *
     1350    10044                      *    If this is FWCG, then do
     1351    10045                      *    the required thing for
     1352    10046                      *    each qualifying message
     1353    10047                      *    we find, then fall thru.
     1354    10048                      *    Otherwise, try to find
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:182  
     1355    10049                      *    a good message.  If none,
     1356    10050                      *    fall thru to read the
     1357    10051                      *    next DBLK.  Else remember
     1358    10052                      *    the one we found, (SAVP$) and go
     1359    10053                      *    look at the INSHD$ list.
     1360    10054                      *    If this is the AU, and we are
     1361    10055                      *    not forced to honour his read
     1362    10056                      *    keys, then we must give him
     1363    10057                      *    the highest-prio AU message
     1364    10058                      *    regardless of whether it matches
     1365    10059                      *    his keys or not.
     1366    10060                      */
     1367    10061    3           IF MBLK$->KQ$MBLK.PRIO >= %KQ_AUEP# THEN

  10061  0 002277   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002300   000001 220300                    LDX0  ! 1,,PR0
         0 002301   765000 100203                    CMPX0 ! -5632,DU
         0 002302   002370 602200 0                  TNC   ! s:10090

     1368    10062    3            IF NOT RBLK$->KQ$RBLK.HONK THEN

  10062  0 002303   200011 471700                    LDP1  ! RBLK$,,AUTO
         0 002304   100001 236300                    LDQ   ! 1,,PR1
         0 002305   000400 316207                    CANQ  ! 256,DL
         0 002306   002370 601200 0                  TNZ   ! s:10090

     1369    10063    4              DO;

     1370    10064    4              SAVP$=P$;

  10064  0 002307   200016 236300                    LDQ   ! P$,,AUTO
         0 002310   200046 756300                    STQ   ! SAVP$,,AUTO

     1371    10065    4              IF NMBLKS ~= 0 THEN

  10065  0 002311   200045 235300                    LDA   ! NMBLKS,,AUTO
         0 002312   002353 600200 0                  TZE   ! s:10081
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:183  

     1372    10066    4               IF P$->KQ$MBLK.PRIO >= %KQ_AUEP# THEN

  10066  0 002313   200016 473700                    LDP3  ! P$,,AUTO
         0 002314   300001 221300                    LDX1  ! 1,,PR3
         0 002315   765000 101203                    CMPX1 ! -5632,DU
         0 002316   002353 602200 0                  TNC   ! s:10081

     1373    10067    5                 DO;

     1374    10068    5                 J=0;

  10068  0 002317   200031 450300                    STZ   ! J,,AUTO

     1375    10069    5                 IF MBLK$->KQ$MBLK.INSHD$ ~= ADDR(NIL) THEN

  10069  0 002320   000012 236300                    LDQ   ! 10,,PR0
         0 002321   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 002322   002352 600200 0                  TZE   ! s:10079

     1376    10070    6                   DO;

     1377    10071    6                   P$=ADDR(NIL);

  10071  0 002323   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 002324   200016 756300                    STQ   ! P$,,AUTO

     1378    10072    6                   M$=MBLK$->KQ$MBLK.INSHD$;

  10072  0 002325   000012 236300                    LDQ   ! 10,,PR0
         0 002326   200033 756300                    STQ   ! M$,,AUTO

     1379    10073    6                   IF M$->KQ$MBLK.PRIO > SAVP$->KQ$MBLK.PRIO THEN GOTO S94;

  10073  0 002327   200046 473700                    LDP3  ! SAVP$,,AUTO
         0 002330   300001 220300                    LDX0  ! 1,,PR3
         0 002331   200033 474700                    LDP4  ! M$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:184  
         0 002332   400001 100300                    CMPX0 ! 1,,PR4
         0 002333   003335 602200 0                  TNC   ! S94

     1380    10074    6                   ELSE IF M$->KQ$MBLK.PRIO = SAVP$->KQ$MBLK.PRIO THEN

  10074  0 002334   400001 221300                    LDX1  ! 1,,PR4
         0 002335   300001 101300                    CMPX1 ! 1,,PR3
         0 002336   002352 601200 0                  TNZ   ! s:10079

     1381    10075    6                     IF M$->KQ$MBLK.UTS < SAVP$->KQ$MBLK.UTS THEN GOTO S94;

  10075  0 002337   400007 236300                    LDQ   ! 7,,PR4
         0 002340   300007 116300                    CMPQ  ! 7,,PR3
         0 002341   003335 602200 0                  TNC   ! S94

     1382    10076    6                     ELSE IF M$->KQ$MBLK.UTS = SAVP$->KQ$MBLK.UTS THEN

  10076  0 002342   002352 601200 0                  TNZ   ! s:10079

     1383    10077    6                       IF M$->KQ$MBLK.STAMP < SAVP$->KQ$MBLK.STAMP THEN GOTO S94;

  10077  0 002343   300001 236300                    LDQ   ! 1,,PR3
         0 002344   777777 376207                    ANQ   ! -1,DL
         0 002345   200062 756300                    STQ   ! @M$+1,,AUTO
         0 002346   400001 236300                    LDQ   ! 1,,PR4
         0 002347   777777 376207                    ANQ   ! -1,DL
         0 002350   200062 116300                    CMPQ  ! @M$+1,,AUTO
         0 002351   003335 604200 0                  TMI   ! S94

     1384    10078    6                   END;

     1385    10079    5                 GOTO S50;

  10079  0 002352   002772 710200 0                  TRA   ! S50

     1386    10080    5                 END;
     1387    10081    4              IF MBLK$->KQ$MBLK.INSHD$ ~= ADDR(NIL) THEN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:185  

  10081  0 002353   000012 236300                    LDQ   ! 10,,PR0
         0 002354   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 002355   002366 600200 0                  TZE   ! s:10087

     1388    10082    5                DO;

     1389    10083    5                P$=ADDR(NIL);

  10083  0 002356   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 002357   200016 756300                    STQ   ! P$,,AUTO

     1390    10084    5                M$=MBLK$->KQ$MBLK.INSHD$;

  10084  0 002360   000012 236300                    LDQ   ! 10,,PR0
         0 002361   200033 756300                    STQ   ! M$,,AUTO

     1391    10085    5                IF M$->KQ$MBLK.PRIO >= %KQ_AUEP# THEN GOTO S94;

  10085  0 002362   200033 473700                    LDP3  ! M$,,AUTO
         0 002363   300001 220300                    LDX0  ! 1,,PR3
         0 002364   765000 100203                    CMPX0 ! -5632,DU
         0 002365   003335 603200 0                  TRC   ! S94

     1392    10086    5                END;

     1393    10087    4              P$=SAVP$;

  10087  0 002366   200046 236300                    LDQ   ! SAVP$,,AUTO
         0 002367   200016 756300                    STQ   ! P$,,AUTO

     1394    10088    4              END;

     1395    10089
     1396    10090    3           J=0;

  10090  0 002370   200031 450300                    STZ   ! J,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:186  

     1397    10091    3   S3:     IF J < NMBLKS THEN

  10091  0 002371   200031 236300       S3           LDQ   ! J,,AUTO
         0 002372   200045 116300                    CMPQ  ! NMBLKS,,AUTO
         0 002373   002536 605200 0                  TPL   ! s:10145

     1398    10092    4             DO;

     1399    10093    4             IF  ADDR(RBLK$->KQ$RBLK.KEY1)->B$$KEY1 = ADDR(P$->KQ$MBLK.KEY1)->B$$KEY1

  10093  0 002374   200011 470700                    LDP0  ! RBLK$,,AUTO
         0 002375   200014 220300                    LDX0  ! KEY1L,,AUTO
         0 002376   200016 471700                    LDP1  ! P$,,AUTO
         0 002377   040140 106740                    CMPC  ! fill='040'O
         0 002400   000002 000010                    ADSC9   2,,PR0                   cn=0,n=*X0
         0 002401   100002 000010                    ADSC9   2,,PR1                   cn=0,n=*X0
         0 002402   002531 601200 0                  TNZ   ! S16
         0 002403   200015 221300                    LDX1  ! KEY2L,,AUTO
         0 002404   040140 106740                    CMPC  ! fill='040'O
         0 002405   000004 000011                    ADSC9   4,,PR0                   cn=0,n=*X1
         0 002406   100004 000011                    ADSC9   4,,PR1                   cn=0,n=*X1
         0 002407   002531 601200 0                  TNZ   ! S16

     1400    10094    4             AND ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 = ADDR(P$->KQ$MBLK.KEY2)->B$$KEY2
             10094                      THEN
     1401    10095    4              IF  P$->KQ$NRMLMBLK.MID.PRIMARY < STA$->KQ$STA.DSID

  10095  0 002410   200010 473700                    LDP3  ! STA$,,AUTO
         0 002411   100014 236300                    LDQ   ! 12,,PR1
         0 002412   300022 116300                    CMPQ  ! 18,,PR3
         0 002413   002451 603200 0                  TRC   ! s:10111
         0 002414   100001 222300                    LDX2  ! 1,,PR1
         0 002415   765000 102203                    CMPX2 ! -5632,DU
         0 002416   002451 603200 0                  TRC   ! s:10111
         0 002417   100010 236300                    LDQ   ! 8,,PR1
         0 002420   100000 316203                    CANQ  ! 32768,DU
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:187  
         0 002421   002451 600200 0                  TZE   ! s:10111

     1402    10096    4              AND P$->KQ$MBLK.PRIO < %KQ_AUEP#
     1403    10097    4              AND P$->KQ$NRMLMBLK.STAR THEN
     1404    10098    5                DO;

     1405    10099    5                IF P$->KQ$MBLK.DDA ~= 0 THEN

  10099  0 002422   100006 235300                    LDA   ! 6,,PR1
         0 002423   002446 600200 0                  TZE   ! S12

     1406    10100    6                  DO;

     1407    10101    6                  DDA=P$->KQ$MBLK.DDA;

  10101  0 002424   200022 755300                    STA   ! DDA,,AUTO

     1408    10102    6                  I=P$->KQ$MBLK.STAMP;

  10102  0 002425   100001 236300                    LDQ   ! 1,,PR1
         0 002426   777777 376207                    ANQ   ! -1,DL
         0 002427   200021 756300                    STQ   ! I,,AUTO

     1409    10103    6                  CALL KQD$DELDDA (CG$->KQ$CG,I,DDA) ALTRET(S10);

  10103  0 002430   200022 634700                    EPPR4 ! DDA,,AUTO
         0 002431   200064 454700                    STP4  ! @M$+3,,AUTO
         0 002432   200021 635700                    EPPR5 ! I,,AUTO
         0 002433   200063 455700                    STP5  ! @M$+2,,AUTO
         0 002434   200013 236300                    LDQ   ! CG$,,AUTO
         0 002435   200062 756300                    STQ   ! @M$+1,,AUTO
         0 002436   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 002437   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 002440   000000 701200 xent               TSX1  ! KQD$DELDDA
         0 002441   002443 702200 0                  TSX2  ! S10

     1410    10104    6                  GOTO S12;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:188  

  10104  0 002442   002446 710200 0                  TRA   ! S12

     1411    10105    6   S10:           IF DDA = %KQDE_NDFRBLK THEN GOTO S98; /* No defer blks */

  10105  0 002443   200022 235300       S10          LDA   ! DDA,,AUTO
         0 002444   000012 115207                    CMPA  ! 10,DL
         0 002445   003355 600200 0                  TZE   ! S98

     1412    10106    6                  END;

     1413    10107    5   S12:         CALL PULLONE;

  10107  0 002446   003404 701200 0     S12          TSX1  ! PULLONE
         0 002447   000000 011200                    NOP   ! 0

     1414    10108    5                GOTO S3;

  10108  0 002450   002371 710200 0                  TRA   ! S3

     1415    10109    5                END;
     1416    10110    4              ELSE
     1417    10111    4               IF RBLK$->KQ$RBLK.MID.PRIMARY = 0

  10111  0 002451   000006 235300                    LDA   ! 6,,PR0
         0 002452   002457 600200 0                  TZE   ! s:10114
         0 002453   200012 474700                    LDP4  ! MBLK$,,AUTO
         0 002454   000006 236300                    LDQ   ! 6,,PR0
         0 002455   400014 116300                    CMPQ  ! 12,,PR4
         0 002456   002531 601200 0                  TNZ   ! S16

     1418    10112    4               OR (RBLK$->KQ$RBLK.MID.PRIMARY = MBLK$->KQ$NRMLMBLK.MID.PRIMARY) THEN
     1419    10113    5                 DO;

     1420    10114    5                 IF FWCG = 0 THEN

  10114  0 002457   200037 236300                    LDQ   ! FWP$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:189  
         0 002460   002464 601200 0                  TNZ   ! s:10119

     1421    10115    6                   DO;

     1422    10116    6                   SAVP$=P$;

  10116  0 002461   200016 236300                    LDQ   ! P$,,AUTO
         0 002462   200046 756300                    STQ   ! SAVP$,,AUTO

     1423    10117    6                   GOTO S30;

  10117  0 002463   002625 710200 0                  TRA   ! S30

     1424    10118    6                   END;
     1425    10119    5                 IF FWP$->KQ$FWP.FC ~= 0 THEN

  10119  0 002464   200037 474700                    LDP4  ! FWP$,,AUTO
         0 002465   400006 235300                    LDA   ! 6,,PR4
         0 002466   002527 600200 0                  TZE   ! s:10130

     1426    10120    6                   DO; /* Need to remove it */

     1427    10121    6                   CALL KQF$CHKMSG (FWP$->KQ$FWP,P$->KQ$MBLK) ALTRET(S16);

  10121  0 002467   200016 236300                    LDQ   ! P$,,AUTO
         0 002470   200037 235300                    LDA   ! FWP$,,AUTO
         0 002471   200062 757300                    STAQ  ! @M$+1,,AUTO
         0 002472   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 002473   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         0 002474   000000 701200 xent               TSX1  ! KQF$CHKMSG
         0 002475   002531 702200 0                  TSX2  ! S16

     1428    10122    6                   CALL GETMB (M$) ALTRET(S14);

  10122  0 002476   200033 630700                    EPPR0 ! M$,,AUTO
         0 002477   200061 450700                    STP0  ! REL$+2,,AUTO
         0 002500   004330 701200 0                  TSX1  ! GETMB
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:190  
         0 002501   002503 702200 0                  TSX2  ! S14

     1429    10123    6                   GOTO S15;

  10123  0 002502   002515 710200 0                  TRA   ! S15

     1430    10124    6   S14:            CALL KQM$GETMBLK (CG$->KQ$CG,M$,I) ALTRET(S99);

  10124  0 002503   200021 630700       S14          EPPR0 ! I,,AUTO
         0 002504   200064 450700                    STP0  ! @M$+3,,AUTO
         0 002505   200033 631700                    EPPR1 ! M$,,AUTO
         0 002506   200063 451700                    STP1  ! @M$+2,,AUTO
         0 002507   200013 236300                    LDQ   ! CG$,,AUTO
         0 002510   200062 756300                    STQ   ! @M$+1,,AUTO
         0 002511   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 002512   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 002513   000000 701200 xent               TSX1  ! KQM$GETMBLK
         0 002514   003362 702200 0                  TSX2  ! S99

     1431    10125    6   S15:            M$->KQ$MBLK=P$->KQ$MBLK;

  10125  0 002515   200016 470700       S15          LDP0  ! P$,,AUTO
         0 002516   200033 471700                    LDP1  ! M$,,AUTO
         0 002517   000100 100700                    MLR   ! fill='000'O
         0 002520   000000 000100                    ADSC9   0,,PR0                   cn=0,n=64
         0 002521   100000 000100                    ADSC9   0,,PR1                   cn=0,n=64

     1432    10126    6                   CALL PULLONE;

  10126  0 002522   003404 701200 0                  TSX1  ! PULLONE
         0 002523   000000 011200                    NOP   ! 0

     1433    10127    6                   CALL FWCGP;

  10127  0 002524   003632 701200 0                  TSX1  ! FWCGP
         0 002525   000000 011200                    NOP   ! 0

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:191  
     1434    10128    6                   GOTO S3;

  10128  0 002526   002371 710200 0                  TRA   ! S3

     1435    10129    6                   END;
     1436    10130    5                 CALL FWCGD; /* No removal */

  10130  0 002527   003622 701200 0                  TSX1  ! FWCGD
         0 002530   000000 011200                    NOP   ! 0

     1437    10131    5                 END;

     1438    10132    4   S16:      P$=PINCRW(P$,SIZEW(KQ$MBLK));

  10132  0 002531   200016 236300       S16          LDQ   ! P$,,AUTO
         0 002532   000020 036203                    ADLQ  ! 16,DU
         0 002533   200016 756300                    STQ   ! P$,,AUTO

     1439    10133    4             J=J+1;

  10133  0 002534   200031 054300                    AOS   ! J,,AUTO

     1440    10134    4             GOTO S3;

  10134  0 002535   002371 710200 0                  TRA   ! S3

     1441    10135    4             END;
     1442    10136
     1443    10137
     1444    10138                     /*    We have reached the end
     1445    10139                      *    of this DBLK and must
     1446    10140                      *    march on.
     1447    10141                      *    Read next DBLK if any.
     1448    10142                      *    Delete this one if
     1449    10143                      *    it's empty and is FDA.
     1450    10144                      */
     1451    10145    3           IF DBLK$->KQ$DBLK.FLNKDA = 0 THEN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:192  

  10145  0 002536   200020 470700                    LDP0  ! DBLK$,,AUTO
         0 002537   000001 235300                    LDA   ! 1,,PR0
         0 002540   002557 601200 0                  TNZ   ! s:10158

     1452    10146    4             DO;

     1453    10147    4             IF NMBLKS = 0 THEN

  10147  0 002541   200045 235300                    LDA   ! NMBLKS,,AUTO
         0 002542   002625 601200 0                  TNZ   ! S30

     1454    10148    4              IF ATFDA THEN

  10148  0 002543   200043 235300                    LDA   ! ATFDA,,AUTO
         0 002544   002625 600200 0                  TZE   ! S30

     1455    10149    5                DO;

     1456    10150    5   S21:         IF MBLK$->KQ$MBLK.COUNT ~= 0 THEN CALL SC_CGSUPR;

  10150  0 002545   200012 470700       S21          LDP0  ! MBLK$,,AUTO
         0 002546   000015 235300                    LDA   ! 13,,PR0
         0 002547   002552 600200 0                  TZE   ! s:10151

  10150  0 002550   000000 713600 xsym               CLIMB ! SC_CGSUPR
         0 002551   000000 600000 xsid               climb   nvectors=         0

     1457    10151    5                MBLK$->KQ$MBLK.DDA=0;

  10151  0 002552   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002553   000006 450300                    STZ   ! 6,,PR0

     1458    10152    5                CALL DELETE;

  10152  0 002554   004104 701200 0                  TSX1  ! DELETE
         0 002555   000000 011200                    NOP   ! 0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:193  

     1459    10153    5                GOTO S30;

  10153  0 002556   002625 710200 0                  TRA   ! S30

     1460    10154    5                END;
     1461    10155    4             END;
     1462    10156    3           ELSE
     1463    10157    4             DO;

     1464    10158    4             TCOUNT=TCOUNT+NMBLKS;

  10158  0 002557   200040 236300                    LDQ   ! TCOUNT,,AUTO
         0 002560   200045 036300                    ADLQ  ! NMBLKS,,AUTO
         0 002561   200040 756300                    STQ   ! TCOUNT,,AUTO

     1465    10159    4             IF TCOUNT < MBLK$->KQ$MBLK.COUNT THEN

  10159  0 002562   200012 471700                    LDP1  ! MBLK$,,AUTO
         0 002563   100015 116300                    CMPQ  ! 13,,PR1
         0 002564   002621 605200 0                  TPL   ! s:10176

     1466    10160    5               DO;

     1467    10161    5               MBLK$->KQ$MBLK.PCDDA=MBLK$->KQ$MBLK.SDA.CCDDA;

  10161  0 002565   100003 235300                    LDA   ! 3,,PR1
         0 002566   100017 755300                    STA   ! 15,,PR1

     1468    10162    5               MBLK$->KQ$MBLK.CCSTAMP=CTLBLK$->KQ$MBLK.CCSTAMP;

  10162  0 002567   200047 470700                    LDP0  ! CTLBLK$,,AUTO
         0 002570   000016 720300                    LXL0  ! 14,,PR0
         0 002571   100016 440300                    SXL0  ! 14,,PR1

     1469    10163    5               MBLK$->KQ$MBLK.SDA.CCDDA=DBLK$->KQ$DBLK.FLNKDA;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:194  
  10163  0 002572   200020 473700                    LDP3  ! DBLK$,,AUTO
         0 002573   300001 235300                    LDA   ! 1,,PR3
         0 002574   100003 755300                    STA   ! 3,,PR1

     1470    10164    5               MLH$->KQ$MLH.PCSTAMP=DBLK$->KQ$DBLK.STAMP;

  10164  0 002575   200020 473700                    LDP3  ! DBLK$,,AUTO
         0 002576   300000 221300                    LDX1  ! 0,,PR3
         0 002577   200024 474700                    LDP4  ! MLH$,,AUTO
         0 002600   400004 741300                    STX1  ! 4,,PR4

     1471    10165    5               IF  NMBLKS = 0

  10165  0 002601   200045 235300                    LDA   ! NMBLKS,,AUTO
         0 002602   002614 601200 0                  TNZ   ! s:10172
         0 002603   200043 235300                    LDA   ! ATFDA,,AUTO
         0 002604   002614 600200 0                  TZE   ! s:10172

     1472    10166    5               AND ATFDA THEN
     1473    10167    6                 DO;

     1474    10168    6                 MBLK$->KQ$MBLK.DDA=MBLK$->KQ$MBLK.SDA.CCDDA;

  10168  0 002605   100003 235300                    LDA   ! 3,,PR1
         0 002606   100006 755300                    STA   ! 6,,PR1

     1475    10169    6                 MBLK$->KQ$MBLK.STAMP=MBLK$->KQ$MBLK.CCSTAMP;

  10169  0 002607   100016 720300                    LXL0  ! 14,,PR1
         0 002610   100001 440300                    SXL0  ! 1,,PR1

     1476    10170    6                 CALL DELETE;

  10170  0 002611   004104 701200 0                  TSX1  ! DELETE
         0 002612   000000 011200                    NOP   ! 0

     1477    10171    6                 END;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:195  

  10171  0 002613   002616 710200 0                  TRA   ! s:10173

     1478    10172    5               ELSE CALL UNLOCK;

  10172  0 002614   004133 701200 0                  TSX1  ! UNLOCK
         0 002615   000000 011200                    NOP   ! 0

     1479    10173    5               CALL SFETCH ALTRET(ALTRT);

  10173  0 002616   004367 701200 0                  TSX1  ! SFETCH
         0 002617   003377 702200 0                  TSX2  ! ALTRT

     1480    10174    5               GOTO S1;

  10174  0 002620   002135 710200 0                  TRA   ! S1

     1481    10175    5               END;
     1482    10176    4             IF NMBLKS = 0 THEN

  10176  0 002621   200045 235300                    LDA   ! NMBLKS,,AUTO
         0 002622   002625 601200 0                  TNZ   ! S30

     1483    10177    4              IF ATFDA THEN GOTO S21;

  10177  0 002623   200043 235300                    LDA   ! ATFDA,,AUTO
         0 002624   002545 601200 0                  TNZ   ! S21

     1484    10178    4             END;

     1485    10179        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:196  
     1486    10180        /**/
     1487    10181    3   S30:    M$=ADDR(NIL);

  10181  0 002625   000001 236200 xsym  S30          LDQ   ! B_VECTNIL+1
         0 002626   200033 756300                    STQ   ! M$,,AUTO

     1488    10182                     /*    Search the INSHD$ list.
     1489    10183                      *    If FWCG, search it all.
     1490    10184                      *    Else (read), look for
     1491    10185                      *    one of higher prio than
     1492    10186                      *    the one in the DBLK
     1493    10187                      *    (if any).  If we find
     1494    10188                      *    one here, M$ will point
     1495    10189                      *    to it.
     1496    10190                      */
     1497    10191    3           P$=ADDR(NIL);

  10191  0 002627   200016 756300                    STQ   ! P$,,AUTO

     1498    10192    3           M$=MBLK$->KQ$MBLK.INSHD$;

  10192  0 002630   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002631   000012 236300                    LDQ   ! 10,,PR0
         0 002632   200033 756300                    STQ   ! M$,,AUTO

     1499    10193    4             DO WHILE (M$ ~= ADDR(NIL));

  10193  0 002633   002756 710200 0                  TRA   ! S40

     1500    10194    4             IF  ADDR(RBLK$->KQ$RBLK.KEY1)->B$$KEY1 = ADDR(M$->KQ$MBLK.KEY1)->B$$KEY1

  10194  0 002634   200011 470700                    LDP0  ! RBLK$,,AUTO
         0 002635   200014 220300                    LDX0  ! KEY1L,,AUTO
         0 002636   200033 471700                    LDP1  ! M$,,AUTO
         0 002637   040140 106740                    CMPC  ! fill='040'O
         0 002640   000002 000010                    ADSC9   2,,PR0                   cn=0,n=*X0
         0 002641   100002 000010                    ADSC9   2,,PR1                   cn=0,n=*X0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:197  
         0 002642   002751 601200 0                  TNZ   ! s:10222
         0 002643   200015 221300                    LDX1  ! KEY2L,,AUTO
         0 002644   040140 106740                    CMPC  ! fill='040'O
         0 002645   000004 000011                    ADSC9   4,,PR0                   cn=0,n=*X1
         0 002646   100004 000011                    ADSC9   4,,PR1                   cn=0,n=*X1
         0 002647   002751 601200 0                  TNZ   ! s:10222

     1501    10195    4             AND ADDR(RBLK$->KQ$RBLK.KEY2)->B$$KEY2 = ADDR(M$->KQ$MBLK.KEY2)->B$$KEY2
             10195                      THEN
     1502    10196    4              IF  M$->KQ$NRMLMBLK.MID.PRIMARY < STA$->KQ$STA.DSID

  10196  0 002650   200010 473700                    LDP3  ! STA$,,AUTO
         0 002651   100014 236300                    LDQ   ! 12,,PR1
         0 002652   300022 116300                    CMPQ  ! 18,,PR3
         0 002653   002712 603200 0                  TRC   ! s:10207
         0 002654   100001 222300                    LDX2  ! 1,,PR1
         0 002655   765000 102203                    CMPX2 ! -5632,DU
         0 002656   002712 603200 0                  TRC   ! s:10207
         0 002657   100010 236300                    LDQ   ! 8,,PR1
         0 002660   100000 316203                    CANQ  ! 32768,DU
         0 002661   002712 600200 0                  TZE   ! s:10207

     1503    10197    4              AND M$->KQ$MBLK.PRIO < %KQ_AUEP#
     1504    10198    4              AND M$->KQ$NRMLMBLK.STAR THEN
     1505    10199    5                DO;

     1506    10200    5                CALL REMOVEI (P$,M$);

  10200  0 002662   200033 634700                    EPPR4 ! M$,,AUTO
         0 002663   200054 454700                    STP4  ! @P$+1,,AUTO
         0 002664   200016 635700                    EPPR5 ! P$,,AUTO
         0 002665   200053 455700                    STP5  ! T2$+1,,AUTO
         0 002666   005403 701200 0                  TSX1  ! REMOVEI
         0 002667   000000 011200                    NOP   ! 0

     1507    10201    5                CALL KQU$DELMSG (CG$->KQ$CG,M$->KQ$MBLK);

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:198  
  10201  0 002670   200033 236300                    LDQ   ! M$,,AUTO
         0 002671   200013 235300                    LDA   ! CG$,,AUTO
         0 002672   200062 757300                    STAQ  ! @M$+1,,AUTO
         0 002673   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 002674   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         0 002675   000000 701200 xent               TSX1  ! KQU$DELMSG
         0 002676   000000 011200                    NOP   ! 0

     1508    10202    5                IF P$ = ADDR(NIL) THEN M$=MBLK$->KQ$MBLK.INSHD$;

  10202  0 002677   200016 236300                    LDQ   ! P$,,AUTO
         0 002700   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 002701   002706 601200 0                  TNZ   ! s:10203

  10202  0 002702   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 002703   000012 236300                    LDQ   ! 10,,PR0
         0 002704   200033 756300                    STQ   ! M$,,AUTO
         0 002705   002711 710200 0                  TRA   ! s:10204

     1509    10203    5                ELSE M$=P$->KQ$MBLK.LNK$;

  10203  0 002706   200016 470700                    LDP0  ! P$,,AUTO
         0 002707   000000 236300                    LDQ   ! 0,,PR0
         0 002710   200033 756300                    STQ   ! M$,,AUTO

     1510    10204    5                GOTO S40;

  10204  0 002711   002756 710200 0                  TRA   ! S40

     1511    10205    5                END;
     1512    10206    4              ELSE
     1513    10207    4               IF RBLK$->KQ$RBLK.MID.PRIMARY = 0

  10207  0 002712   000006 235300                    LDA   ! 6,,PR0
         0 002713   002717 600200 0                  TZE   ! s:10210
         0 002714   000006 236300                    LDQ   ! 6,,PR0
         0 002715   100014 116300                    CMPQ  ! 12,,PR1
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:199  
         0 002716   002751 601200 0                  TNZ   ! s:10222

     1514    10208    4               OR (RBLK$->KQ$RBLK.MID.PRIMARY = M$->KQ$NRMLMBLK.MID.PRIMARY) THEN
     1515    10209    5                 DO;

     1516    10210    5                 IF FWCG = 0 THEN

  10210  0 002717   200037 236300                    LDQ   ! FWP$,,AUTO
         0 002720   002747 601200 0                  TNZ   ! s:10220

     1517    10211    6                   DO;

     1518    10212    6                   IF SAVP$ ~= ADDR(NIL) THEN

  10212  0 002721   200046 236300                    LDQ   ! SAVP$,,AUTO
         0 002722   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 002723   002746 600200 0                  TZE   ! s:10218

     1519    10213    6                    IF SAVP$->KQ$MBLK.PRIO > M$->KQ$MBLK.PRIO THEN GOTO S50;

  10213  0 002724   100001 222300                    LDX2  ! 1,,PR1
         0 002725   200046 474700                    LDP4  ! SAVP$,,AUTO
         0 002726   400001 102300                    CMPX2 ! 1,,PR4
         0 002727   002772 602200 0                  TNC   ! S50

     1520    10214    6                    ELSE IF SAVP$->KQ$MBLK.PRIO = M$->KQ$MBLK.PRIO THEN

  10214  0 002730   400001 223300                    LDX3  ! 1,,PR4
         0 002731   100001 103300                    CMPX3 ! 1,,PR1
         0 002732   002746 601200 0                  TNZ   ! s:10218

     1521    10215    6                      IF SAVP$->KQ$MBLK.UTS < M$->KQ$MBLK.UTS THEN GOTO S50;

  10215  0 002733   400007 236300                    LDQ   ! 7,,PR4
         0 002734   100007 116300                    CMPQ  ! 7,,PR1
         0 002735   002772 602200 0                  TNC   ! S50

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:200  
     1522    10216    6                      ELSE IF SAVP$->KQ$MBLK.UTS = M$->KQ$MBLK.UTS THEN

  10216  0 002736   002746 601200 0                  TNZ   ! s:10218

     1523    10217    6                        IF SAVP$->KQ$MBLK.STAMP < M$->KQ$MBLK.STAMP THEN GOTO S50;

  10217  0 002737   100001 236300                    LDQ   ! 1,,PR1
         0 002740   777777 376207                    ANQ   ! -1,DL
         0 002741   200062 756300                    STQ   ! @M$+1,,AUTO
         0 002742   400001 236300                    LDQ   ! 1,,PR4
         0 002743   777777 376207                    ANQ   ! -1,DL
         0 002744   200062 116300                    CMPQ  ! @M$+1,,AUTO
         0 002745   002772 604200 0                  TMI   ! S50

     1524    10218    6                   GOTO S94;

  10218  0 002746   003335 710200 0                  TRA   ! S94

     1525    10219    6                   END;
     1526    10220    5                 CALL FWCGI ALTRET(S40);

  10220  0 002747   003640 701200 0                  TSX1  ! FWCGI
         0 002750   002756 702200 0                  TSX2  ! S40

     1527    10221    5                 END;

     1528    10222    4             P$=M$;

  10222  0 002751   200033 236300                    LDQ   ! M$,,AUTO
         0 002752   200016 756300                    STQ   ! P$,,AUTO

     1529    10223    4             M$=M$->KQ$MBLK.LNK$;

  10223  0 002753   200033 470700                    LDP0  ! M$,,AUTO
         0 002754   000000 236300                    LDQ   ! 0,,PR0
         0 002755   200033 756300                    STQ   ! M$,,AUTO

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:201  
     1530    10224    4   S40:      END;

  10224  0 002756   200033 236300       S40          LDQ   ! M$,,AUTO
         0 002757   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 002760   002634 601200 0                  TNZ   ! s:10194

     1531    10225    3           IF SAVP$ ~= ADDR(NIL) THEN GOTO S50;

  10225  0 002761   200046 236300                    LDQ   ! SAVP$,,AUTO
         0 002762   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 002763   002772 601200 0                  TNZ   ! S50

     1532    10226
     1533    10227        /**/
     1534    10228                     /*    Nothing was found so say so and return.
     1535    10229                      *    The DBLK gets unlocked, unless there isn't
     1536    10230                      *    one.
     1537    10231                      */
     1538    10232    3           CALL UNLOCK;

  10232  0 002764   004133 701200 0                  TSX1  ! UNLOCK
         0 002765   000000 011200                    NOP   ! 0

     1539    10233    3           CALL RELMB;

  10233  0 002766   004311 701200 0                  TSX1  ! RELMB
         0 002767   000000 011200                    NOP   ! 0

     1540    10234    3           RETURN;

  10234  0 002770   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 002771   000001 702211                    TSX2  ! 1,X1

     1541    10235
     1542    10236        /**/
     1543    10237        /**/
     1544    10238                     /*
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:202  
     1545    10239                      *    The one we want is in the DBLK.
     1546    10240                      *    If we're at FDA then
     1547    10241                      *    try to get enuff memory to
     1548    10242                      *    hold all the DBLK's MBLKs.
     1549    10243                      */
     1550    10244    3   S50:    IF ATFDA THEN

  10244  0 002772   200043 235300       S50          LDA   ! ATFDA,,AUTO
         0 002773   003216 600200 0                  TZE   ! S9

     1551    10245    4             DO;

     1552    10246    4             I=NMBLKS*SIZEW(KQ$MBLK);

  10246  0 002774   200045 236300                    LDQ   ! NMBLKS,,AUTO
         0 002775   000004 736200                    QLS   ! 4
         0 002776   200021 756300                    STQ   ! I,,AUTO

     1553    10247    4             CALL KQM$GETB (CG$->KQ$CG,M$,I) ALTRET(S9);

  10247  0 002777   200021 630700                    EPPR0 ! I,,AUTO
         0 003000   200064 450700                    STP0  ! @M$+3,,AUTO
         0 003001   200033 631700                    EPPR1 ! M$,,AUTO
         0 003002   200063 451700                    STP1  ! @M$+2,,AUTO
         0 003003   200013 236300                    LDQ   ! CG$,,AUTO
         0 003004   200062 756300                    STQ   ! @M$+1,,AUTO
         0 003005   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 003006   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 003007   000000 701200 xent               TSX1  ! KQM$GETB
         0 003010   003216 702200 0                  TSX2  ! S9

     1554    10248    4             CALL RELMB;

  10248  0 003011   004311 701200 0                  TSX1  ! RELMB
         0 003012   000000 011200                    NOP   ! 0

     1555    10249
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:203  
     1556    10250                     /*    Now we have room to hold all
     1557    10251                      *    the MBLKs.  Merge them into
     1558    10252                      *    the MLH by linking them together and
     1559    10253                      *    putting them before the super MBLK.
     1560    10254                      *    Take the part of the INSHD$ list
     1561    10255                      *    that belongs inside this DBLK and
     1562    10256                      *    merge it into the MLH list.  Update the bounds
     1563    10257                      *    in the super MBLK.  Update the FDA
     1564    10258                      *    too.  Delete the DBLK and return
     1565    10259                      *    saying we found one.
     1566    10260                      */
     1567    10261    4             I=NMBLKS*SIZEC(KQ$MBLK);

  10261  0 003013   200045 235300                    LDA   ! NMBLKS,,AUTO
         0 003014   000006 735200                    ALS   ! 6
         0 003015   200021 755300                    STA   ! I,,AUTO

     1568    10262    4             M$->B$$CHARS=PINCRW(DBLK$,SIZEW(KQ$DBLK)+CTLBLK$->KQ$MBLK.FIRSTX)->
             10262                      B$$CHARS;

  10262  0 003016   200047 470700                    LDP0  ! CTLBLK$,,AUTO
         0 003017   000013 720300                    LXL0  ! 11,,PR0
         0 003020   000000 636210                    EAQ   ! 0,X0
         0 003021   000020 772200                    QRL   ! 16
         0 003022   200020 471700                    LDP1  ! DBLK$,,AUTO
         0 003023   000000 621205                    EAX1  ! 0,AL
         0 003024   200033 473700                    LDP3  ! M$,,AUTO
         0 003025   200021 722300                    LXL2  ! I,,AUTO
         0 003026   040140 100746                    MLR   ! fill='040'O
         0 003027   100006 000011                    ADSC9   6,Q,PR1                  cn=0,n=*X1
         0 003030   300000 000012                    ADSC9   0,,PR3                   cn=0,n=*X2

     1569    10263    4             L$=M$;

  10263  0 003031   200033 236300                    LDQ   ! M$,,AUTO
         0 003032   200044 756300                    STQ   ! L$,,AUTO

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:204  
     1570    10264    5               DO I = 1 TO NMBLKS-1;

  10264  0 003033   000001 235207                    LDA   ! 1,DL
         0 003034   200021 755300                    STA   ! I,,AUTO
         0 003035   003044 710200 0                  TRA   ! s:10267+1

     1571    10265    5               L$->KQ$MBLK.LNK$=PINCRW(L$,SIZEW(KQ$MBLK));

  10265  0 003036   200044 236300                    LDQ   ! L$,,AUTO
         0 003037   000020 036203                    ADLQ  ! 16,DU
         0 003040   200044 470700                    LDP0  ! L$,,AUTO
         0 003041   000000 756300                    STQ   ! 0,,PR0

     1572    10266    5               L$=L$->KQ$MBLK.LNK$;

  10266  0 003042   200044 756300                    STQ   ! L$,,AUTO

     1573    10267    5               END;

  10267  0 003043   200021 054300                    AOS   ! I,,AUTO
         0 003044   200021 236300                    LDQ   ! I,,AUTO
         0 003045   200045 116300                    CMPQ  ! NMBLKS,,AUTO
         0 003046   003036 604200 0                  TMI   ! s:10265

     1574    10268    4             L$->KQ$MBLK.LNK$=MBLK$;

  10268  0 003047   200012 236300                    LDQ   ! MBLK$,,AUTO
         0 003050   200044 470700                    LDP0  ! L$,,AUTO
         0 003051   000000 756300                    STQ   ! 0,,PR0

     1575    10269    4             CALL GETPRED;

  10269  0 003052   005440 701200 0                  TSX1  ! GETPRED
         0 003053   000000 011200                    NOP   ! 0

     1576    10270    4             MBLK$->KQ$MBLK.COUNT=MBLK$->KQ$MBLK.COUNT-NMBLKS;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:205  
  10270  0 003054   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 003055   000015 236300                    LDQ   ! 13,,PR0
         0 003056   200045 136300                    SBLQ  ! NMBLKS,,AUTO
         0 003057   000015 756300                    STQ   ! 13,,PR0

     1577    10271    4             MBLK$->KQ$MBLK.DDA=DBLK$->KQ$DBLK.FLNKDA;

  10271  0 003060   200020 471700                    LDP1  ! DBLK$,,AUTO
         0 003061   100001 235300                    LDA   ! 1,,PR1
         0 003062   000006 755300                    STA   ! 6,,PR0

     1578    10272    4             MBLK$->KQ$MBLK.STAMP=CTLBLK$->KQ$MBLK.CCSTAMP;

  10272  0 003063   200047 471700                    LDP1  ! CTLBLK$,,AUTO
         0 003064   100016 720300                    LXL0  ! 14,,PR1
         0 003065   000001 440300                    SXL0  ! 1,,PR0

     1579    10273    4             MBLK$->KQ$MBLK.PRIO=L$->KQ$MBLK.PRIO;

  10273  0 003066   200044 473700                    LDP3  ! L$,,AUTO
         0 003067   300001 221300                    LDX1  ! 1,,PR3
         0 003070   000001 741300                    STX1  ! 1,,PR0

     1580    10274    4             MBLK$->KQ$MBLK.UTSXTLO=L$->KQ$MBLK.STAMP+1;

  10274  0 003071   300001 722300                    LXL2  ! 1,,PR3
         0 003072   000001 623212                    EAX3  ! 1,X2
         0 003073   000014 743300                    STX3  ! 12,,PR0

     1581    10275    4             IF MBLK$->KQ$MBLK.UTSXTLO = 0 THEN

  10275  0 003074   003077 601200 0                  TNZ   ! s:10277

     1582    10276    4              MBLK$->KQ$MBLK.UTSXTLO=BITBIN('777777'O);

  10276  0 003075   777777 222203                    LDX2  ! -1,DU
         0 003076   000014 742300                    STX2  ! 12,,PR0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:206  

     1583    10277    4             MBLK$->KQ$MBLK.UTS=L$->KQ$MBLK.UTS;

  10277  0 003077   300007 235300                    LDA   ! 7,,PR3
         0 003100   000007 755300                    STA   ! 7,,PR0

     1584    10278    4             IF P$ = ADDR(NIL) THEN MLH$->KQ$MLH.HEAD$=M$;

  10278  0 003101   200016 236300                    LDQ   ! P$,,AUTO
         0 003102   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 003103   003110 601200 0                  TNZ   ! s:10279

  10278  0 003104   200033 236300                    LDQ   ! M$,,AUTO
         0 003105   200024 474700                    LDP4  ! MLH$,,AUTO
         0 003106   400000 756300                    STQ   ! 0,,PR4
         0 003107   003113 710200 0                  TRA   ! s:10280

     1585    10279    4             ELSE P$->KQ$MBLK.LNK$=M$;

  10279  0 003110   200033 236300                    LDQ   ! M$,,AUTO
         0 003111   200016 474700                    LDP4  ! P$,,AUTO
         0 003112   400000 756300                    STQ   ! 0,,PR4

     1586    10280    5               DO WHILE (MBLK$->KQ$MBLK.INSHD$ ~= ADDR(NIL));

  10280  0 003113   003142 710200 0                  TRA   ! s:10288

     1587    10281    5               X$=MBLK$->KQ$MBLK.INSHD$;

  10281  0 003114   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 003115   000012 236300                    LDQ   ! 10,,PR0
         0 003116   200034 756300                    STQ   ! X$,,AUTO

     1588    10282    5               IF X$->KQ$MBLK.PRIO < L$->KQ$MBLK.PRIO THEN GOTO S60;

  10282  0 003117   200034 471700                    LDP1  ! X$,,AUTO
         0 003120   100001 220300                    LDX0  ! 1,,PR1
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:207  
         0 003121   200044 473700                    LDP3  ! L$,,AUTO
         0 003122   300001 100300                    CMPX0 ! 1,,PR3
         0 003123   003146 602200 0                  TNC   ! S60

     1589    10283    5               ELSE IF X$->KQ$MBLK.PRIO = L$->KQ$MBLK.PRIO THEN

  10283  0 003124   003140 601200 0                  TNZ   ! s:10287

     1590    10284    5                 IF X$->KQ$MBLK.UTS > L$->KQ$MBLK.UTS THEN GOTO S60;

  10284  0 003125   300007 236300                    LDQ   ! 7,,PR3
         0 003126   100007 116300                    CMPQ  ! 7,,PR1
         0 003127   003146 602200 0                  TNC   ! S60

     1591    10285    5                 ELSE IF X$->KQ$MBLK.UTS = L$->KQ$MBLK.UTS THEN

  10285  0 003130   003140 601200 0                  TNZ   ! s:10287

     1592    10286    5                   IF X$->KQ$MBLK.STAMP > L$->KQ$MBLK.STAMP THEN GOTO S60;

  10286  0 003131   100001 236300                    LDQ   ! 1,,PR1
         0 003132   777777 376207                    ANQ   ! -1,DL
         0 003133   200062 756300                    STQ   ! @M$+1,,AUTO
         0 003134   300001 236300                    LDQ   ! 1,,PR3
         0 003135   777777 376207                    ANQ   ! -1,DL
         0 003136   200062 116300                    CMPQ  ! @M$+1,,AUTO
         0 003137   003146 604200 0                  TMI   ! S60

     1593    10287    5               CALL MERGEIT;

  10287  0 003140   003465 701200 0                  TSX1  ! MERGEIT
         0 003141   000000 011200                    NOP   ! 0

     1594    10288    5               END;

  10288  0 003142   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 003143   000012 236300                    LDQ   ! 10,,PR0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:208  
         0 003144   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 003145   003114 601200 0                  TNZ   ! s:10281

     1595    10289    4   S60:      CALL DELETE;

  10289  0 003146   004104 701200 0     S60          TSX1  ! DELETE
         0 003147   000000 011200                    NOP   ! 0

     1596    10290    4             IF MBLK$->KQ$MBLK.COUNT = 0 THEN

  10290  0 003150   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 003151   000015 235300                    LDA   ! 13,,PR0
         0 003152   003173 601200 0                  TNZ   ! s:10299

     1597    10291    4              IF MBLK$->KQ$MBLK.DDA ~= 0 THEN CALL SC_CGSUPR;

  10291  0 003153   000006 235300                    LDA   ! 6,,PR0
         0 003154   003160 600200 0                  TZE   ! s:10292

  10291  0 003155   000000 713600 xsym               CLIMB ! SC_CGSUPR
         0 003156   000000 600000 xsid               climb   nvectors=         0
         0 003157   003173 710200 0                  TRA   ! s:10299

     1598    10292    4              ELSE IF MBLK$->KQ$MBLK.INSHD$ = ADDR(NIL) THEN

  10292  0 003160   000012 236300                    LDQ   ! 10,,PR0
         0 003161   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 003162   003173 601200 0                  TNZ   ! s:10299

     1599    10293    5                 DO;

     1600    10294    5                 SAVP$=P$;

  10294  0 003163   200016 236300                    LDQ   ! P$,,AUTO
         0 003164   200046 756300                    STQ   ! SAVP$,,AUTO

     1601    10295    5                 P$=L$;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:209  

  10295  0 003165   200044 236300                    LDQ   ! L$,,AUTO
         0 003166   200016 756300                    STQ   ! P$,,AUTO

     1602    10296    5                 CALL REMOVES;

  10296  0 003167   005331 701200 0                  TSX1  ! REMOVES
         0 003170   000000 011200                    NOP   ! 0

     1603    10297    5                 P$=SAVP$;

  10297  0 003171   200046 236300                    LDQ   ! SAVP$,,AUTO
         0 003172   200016 756300                    STQ   ! P$,,AUTO

     1604    10298    5                 END;

     1605    10299    4             IF J ~= 0 THEN

  10299  0 003173   200031 235300                    LDA   ! J,,AUTO
         0 003174   003206 600200 0                  TZE   ! s:10304

     1606    10300    5               DO;

     1607    10301    5               P$=PINCRW(M$,(J-1)*SIZEW(KQ$MBLK));

  10301  0 003175   200031 236300                    LDQ   ! J,,AUTO
         0 003176   000026 736200                    QLS   ! 22
         0 003177   000020 136203                    SBLQ  ! 16,DU
         0 003200   200033 036300                    ADLQ  ! M$,,AUTO
         0 003201   200016 756300                    STQ   ! P$,,AUTO

     1608    10302    5               MBLK$=P$->KQ$MBLK.LNK$;

  10302  0 003202   200016 470700                    LDP0  ! P$,,AUTO
         0 003203   000000 236300                    LDQ   ! 0,,PR0
         0 003204   200012 756300                    STQ   ! MBLK$,,AUTO

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:210  
     1609    10303    5               END;

  10303  0 003205   003210 710200 0                  TRA   ! s:10305

     1610    10304    4             ELSE MBLK$=M$;

  10304  0 003206   200033 236300                    LDQ   ! M$,,AUTO
         0 003207   200012 756300                    STQ   ! MBLK$,,AUTO

     1611    10305    4             FOUNDIT=1;

  10305  0 003210   000001 235207                    LDA   ! 1,DL
         0 003211   200027 755300                    STA   ! FOUNDIT,,AUTO

     1612    10306    4             CALL REMOVE;

  10306  0 003212   005340 701200 0                  TSX1  ! REMOVE
         0 003213   000000 011200                    NOP   ! 0

     1613    10307    4             RETURN;

  10307  0 003214   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 003215   000001 702211                    TSX2  ! 1,X1

     1614    10308    4             END;
     1615    10309        /**/
     1616    10310
     1617    10311                     /*    Not at FDA or there isn't
     1618    10312                      *    room to hold all
     1619    10313                      *    the DBLK's MBLKs.  Just get
     1620    10314                      *    space for one, and pull it
     1621    10315                      *    out of the DBLK into the
     1622    10316                      *    allocated buffer, closing up
     1623    10317                      *    the gap in the DBLK.  Then
     1624    10318                      *    return saying we have one already
     1625    10319                      *    removed from the list (since we
     1626    10320                      *    never put it in the list), after
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:211  
     1627    10321                      *    unlocking the DBLK.
     1628    10322                      */
     1629    10323    3   S9:     CALL GETMB (M$) ALTRET(S90);

  10323  0 003216   200033 630700       S9           EPPR0 ! M$,,AUTO
         0 003217   200061 450700                    STP0  ! REL$+2,,AUTO
         0 003220   004330 701200 0                  TSX1  ! GETMB
         0 003221   003223 702200 0                  TSX2  ! S90

     1630    10324    3           GOTO S92;

  10324  0 003222   003235 710200 0                  TRA   ! S92

     1631    10325    3   S90:    CALL KQM$GETMBLK (CG$->KQ$CG,M$,I) ALTRET(S99);

  10325  0 003223   200021 630700       S90          EPPR0 ! I,,AUTO
         0 003224   200064 450700                    STP0  ! @M$+3,,AUTO
         0 003225   200033 631700                    EPPR1 ! M$,,AUTO
         0 003226   200063 451700                    STP1  ! @M$+2,,AUTO
         0 003227   200013 236300                    LDQ   ! CG$,,AUTO
         0 003230   200062 756300                    STQ   ! @M$+1,,AUTO
         0 003231   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 003232   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 003233   000000 701200 xent               TSX1  ! KQM$GETMBLK
         0 003234   003362 702200 0                  TSX2  ! S99

     1632    10326    3   S92:    M$->KQ$MBLK=SAVP$->KQ$MBLK;

  10326  0 003235   200046 470700       S92          LDP0  ! SAVP$,,AUTO
         0 003236   200033 471700                    LDP1  ! M$,,AUTO
         0 003237   000100 100700                    MLR   ! fill='000'O
         0 003240   000000 000100                    ADSC9   0,,PR0                   cn=0,n=64
         0 003241   100000 000100                    ADSC9   0,,PR1                   cn=0,n=64

     1633    10327    3           M$->KQ$MBLK.LNK$=MBLK$->KQ$MBLK.INSHD$; /* Save here */

  10327  0 003242   200012 471700                    LDP1  ! MBLK$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:212  
         0 003243   100012 236300                    LDQ   ! 10,,PR1
         0 003244   200033 473700                    LDP3  ! M$,,AUTO
         0 003245   300000 756300                    STQ   ! 0,,PR3

     1634    10328    3           MBLK$->KQ$MBLK.INSHD$=M$;

  10328  0 003246   200033 236300                    LDQ   ! M$,,AUTO
         0 003247   100012 756300                    STQ   ! 10,,PR1

     1635    10329    3           MBLK$->KQ$MBLK.COUNT=MBLK$->KQ$MBLK.COUNT-1;

  10329  0 003250   000001 336207                    LCQ   ! 1,DL
         0 003251   100015 056300                    ASQ   ! 13,,PR1

     1636    10330    3           DBLK$->KQ$DBLK.DSIZE=DBLK$->KQ$DBLK.DSIZE-SIZEC(KQ$MBLK);

  10330  0 003252   200020 473700                    LDP3  ! DBLK$,,AUTO
         0 003253   300000 720300                    LXL0  ! 0,,PR3
         0 003254   777700 621210                    EAX1  ! -64,X0
         0 003255   300000 441300                    SXL1  ! 0,,PR3

     1637    10331    3           IF DBLK$->KQ$DBLK.DSIZE = 0 THEN

  10331  0 003256   200020 473700                    LDP3  ! DBLK$,,AUTO
         0 003257   300000 720300                    LXL0  ! 0,,PR3
         0 003260   003306 601200 0                  TNZ   ! s:10350

     1638    10332    4             DO;

     1639    10333    4             IF NOT ATFDA THEN CALL UPDATED;

  10333  0 003261   200043 235300                    LDA   ! ATFDA,,AUTO
         0 003262   003266 601200 0                  TNZ   ! s:10336

  10333  0 003263   004121 701200 0                  TSX1  ! UPDATED
         0 003264   000000 011200                    NOP   ! 0
         0 003265   003333 710200 0                  TRA   ! s:10359
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:213  

     1640    10334    4             ELSE
     1641    10335    5               DO;

     1642    10336    5               IF MBLK$->KQ$MBLK.KEY1VALID

  10336  0 003266   100010 236300                    LDQ   ! 8,,PR1
         0 003267   020000 316203                    CANQ  ! 8192,DU
         0 003270   003274 601200 0                  TNZ   ! s:10338
         0 003271   200040 236300                    LDQ   ! TCOUNT,,AUTO
         0 003272   100015 116300                    CMPQ  ! 13,,PR1
         0 003273   003276 604200 0                  TMI   ! s:10341

     1643    10337    5               OR TCOUNT >= MBLK$->KQ$MBLK.COUNT THEN
     1644    10338    5                MBLK$->KQ$MBLK.DDA=0;

  10338  0 003274   100006 450300                    STZ   ! 6,,PR1
         0 003275   003303 710200 0                  TRA   ! s:10344

     1645    10339    5               ELSE
     1646    10340    6                 DO;

     1647    10341    6                 MBLK$->KQ$MBLK.DDA=DBLK$->KQ$DBLK.FLNKDA;

  10341  0 003276   300001 235300                    LDA   ! 1,,PR3
         0 003277   100006 755300                    STA   ! 6,,PR1

     1648    10342    6                 MBLK$->KQ$MBLK.STAMP=CTLBLK$->KQ$MBLK.CCSTAMP;

  10342  0 003300   200047 473700                    LDP3  ! CTLBLK$,,AUTO
         0 003301   300016 720300                    LXL0  ! 14,,PR3
         0 003302   100001 440300                    SXL0  ! 1,,PR1

     1649    10343    6                 END;

     1650    10344    5               CALL DELETE;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:214  
  10344  0 003303   004104 701200 0                  TSX1  ! DELETE
         0 003304   000000 011200                    NOP   ! 0

     1651    10345    5               END;

     1652    10346    4             END;

  10346  0 003305   003333 710200 0                  TRA   ! s:10359

     1653    10347        /**/
     1654    10348    3           ELSE
     1655    10349    4             DO;

     1656    10350    4             IF J > 0 THEN

  10350  0 003306   200031 235300                    LDA   ! J,,AUTO
         0 003307   003325 604600 0                  TMOZ  ! s:10355

     1657    10351    5               DO;

     1658    10352    5               I=DBLK$->KQ$DBLK.DSIZE-(J*SIZEC(KQ$MBLK));

  10352  0 003310   300000 236300                    LDQ   ! 0,,PR3
         0 003311   777777 376207                    ANQ   ! -1,DL
         0 003312   200062 756300                    STQ   ! @M$+1,,AUTO
         0 003313   200031 336300                    LCQ   ! J,,AUTO
         0 003314   000006 736200                    QLS   ! 6
         0 003315   200062 036300                    ADLQ  ! @M$+1,,AUTO
         0 003316   200021 756300                    STQ   ! I,,AUTO

     1659    10353    5               SAVP$->B$$CHARS=PINCRW(SAVP$,SIZEW(KQ$MBLK))->B$$CHARS; /* Close up */

  10353  0 003317   000000 620206                    EAX0  ! 0,QL
         0 003320   200021 721300                    LXL1  ! I,,AUTO
         0 003321   040140 100740                    MLR   ! fill='040'O
         0 003322   000020 000010                    ADSC9   16,,PR0                  cn=0,n=*X0
         0 003323   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:215  

     1660    10354    5               END;

  10354  0 003324   003331 710200 0                  TRA   ! s:10356

     1661    10355    4             ELSE CTLBLK$->KQ$MBLK.FIRSTX=CTLBLK$->KQ$MBLK.FIRSTX+SIZEW(KQ$MBLK);

  10355  0 003325   200047 474700                    LDP4  ! CTLBLK$,,AUTO
         0 003326   400013 235300                    LDA   ! 11,,PR4
         0 003327   000020 035207                    ADLA  ! 16,DL
         0 003330   400013 755300                    STA   ! 11,,PR4

     1662    10356    4             CALL UPDATED;

  10356  0 003331   004121 701200 0                  TSX1  ! UPDATED
         0 003332   000000 011200                    NOP   ! 0

     1663    10357    4             END;

     1664    10358        /**/
     1665    10359    3           P$=ADDR(NIL);

  10359  0 003333   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 003334   200016 756300                    STQ   ! P$,,AUTO

     1666    10360    3   S94:    FOUNDIT=1;

  10360  0 003335   000001 235207       S94          LDA   ! 1,DL
         0 003336   200027 755300                    STA   ! FOUNDIT,,AUTO

     1667    10361    3           CALL UNLOCK;

  10361  0 003337   004133 701200 0                  TSX1  ! UNLOCK
         0 003340   000000 011200                    NOP   ! 0

     1668    10362    3           CALL REMOVEI (P$,M$);

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:216  
  10362  0 003341   200033 630700                    EPPR0 ! M$,,AUTO
         0 003342   200054 450700                    STP0  ! @P$+1,,AUTO
         0 003343   200016 631700                    EPPR1 ! P$,,AUTO
         0 003344   200053 451700                    STP1  ! T2$+1,,AUTO
         0 003345   005403 701200 0                  TSX1  ! REMOVEI
         0 003346   000000 011200                    NOP   ! 0

     1669    10363    3           CALL RELMB;

  10363  0 003347   004311 701200 0                  TSX1  ! RELMB
         0 003350   000000 011200                    NOP   ! 0

     1670    10364    3           MBLK$=M$;

  10364  0 003351   200033 236300                    LDQ   ! M$,,AUTO
         0 003352   200012 756300                    STQ   ! MBLK$,,AUTO

     1671    10365    3           RETURN;

  10365  0 003353   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 003354   000001 702211                    TSX2  ! 1,X1

     1672    10366        /**/
     1673    10367
     1674    10368                     /*    Block
     1675    10369                      *    for
     1676    10370                      *    no
     1677    10371                      *    defer
     1678    10372                      *    blocks.
     1679    10373                      */
     1680    10374    3   S98:    CALL REG (KQSS_NDFR#) ALTRET(ALTRT);

  10374  0 003355   000012 236200 1     S98          LDQ   ! 10
         0 003356   200055 756300                    STQ   ! @M$+1,,AUTO
         0 003357   004555 701200 0                  TSX1  ! REG
         0 003360   003377 702200 0                  TSX2  ! ALTRT

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:217  
     1681    10375    3           GOTO S0;

  10375  0 003361   002010 710200 0                  TRA   ! S0

     1682    10376                     /*    Block
     1683    10377                      *    for
     1684    10378                      *    no
     1685    10379                      *    memory
     1686    10380                      */
     1687    10381    3   S99:    CALL REG (KQSS_NMEM#) ALTRET(ALTRT1);

  10381  0 003362   000013 236200 1     S99          LDQ   ! 11
         0 003363   200055 756300                    STQ   ! @M$+1,,AUTO
         0 003364   004555 701200 0                  TSX1  ! REG
         0 003365   003401 702200 0                  TSX2  ! ALTRT1

     1688    10382    3           IF M$ ~= ADDR(NIL) THEN

  10382  0 003366   200033 236300                    LDQ   ! M$,,AUTO
         0 003367   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 003370   003376 600200 0                  TZE   ! s:10387

     1689    10383    4             DO;

     1690    10384    4             MBLK$->KQ$MBLK.MREQ=-KQMR_MBLK#;

  10384  0 003371   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 003372   000777 236203                    LDQ   ! 511,DU
         0 003373   000010 552320                    STBQ  ! 8,'20'O,PR0

     1691    10385    4             MBLK$->KQ$MBLK.XSP.MREQ$=M$;

  10385  0 003374   200033 236300                    LDQ   ! M$,,AUTO
         0 003375   000004 756300                    STQ   ! 4,,PR0

     1692    10386    4             END;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:218  
     1693    10387    3           GOTO S0;

  10387  0 003376   002010 710200 0                  TRA   ! S0

  10382  0 003377                       ALTRT        null
     1694    10388    3   ALTRT:  ;
     1695    10389    3           CALL RELMB;

  10389  0 003377   004311 701200 0                  TSX1  ! RELMB
         0 003400   000000 011200                    NOP   ! 0

  10382  0 003401                       ALTRT1       null
     1696    10390    3   ALTRT1: ;
     1697    10391    3           ALTRETURN;

  10391  0 003401   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 003402   000000 702211                    TSX2  ! 0,X1

     1698    10392        /**/
     1699    10393    3           END; /* Inhibit */

  10393  0 003403   003546 710000 0                  TRA     s:10453

     1700    10394        /**/
     1701    10395        /*D* NAME:         PULLONE
     1702    10396             PURPOSE:      To adjust things when an MBLK is being pulled
     1703    10397                           out of a DBLK.
     1704    10398        */
     1705    10399    2   PULLONE: PROC;

  10399  0 003404   200050 741300       PULLONE      STX1  ! H$,,AUTO

     1706    10400        /**/
     1707    10401    4           DO INHIBIT;

     1708    10402    4           IF Q=0 THEN

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:219  
  10402  0 003405   200025 235300                    LDA   ! Q,,AUTO
         0 003406   003413 601200 0                  TNZ   ! s:10404

     1709    10403    4            CG$->KQ$CG.STATS.CCMS=CG$->KQ$CG.STATS.CCMS-1;

  10403  0 003407   200013 470700                    LDP0  ! CG$,,AUTO
         0 003410   000001 336207                    LCQ   ! 1,DL
         0 003411   000172 056300                    ASQ   ! 122,,PR0
         0 003412   003416 710200 0                  TRA   ! s:10405

     1710    10404    4           ELSE CG$->KQ$CG.STATS.CCMQ=CG$->KQ$CG.STATS.CCMQ-1;

  10404  0 003413   200013 470700                    LDP0  ! CG$,,AUTO
         0 003414   000001 336207                    LCQ   ! 1,DL
         0 003415   000171 056300                    ASQ   ! 121,,PR0

     1711    10405    4           MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT-1;

  10405  0 003416   200024 471700                    LDP1  ! MLH$,,AUTO
         0 003417   100005 056300                    ASQ   ! 5,,PR1

     1712    10406    4           MBLK$->KQ$MBLK.COUNT=MBLK$->KQ$MBLK.COUNT-1;

  10406  0 003420   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 003421   000015 056300                    ASQ   ! 13,,PR0

     1713    10407    4           DBLK$->KQ$DBLK.DSIZE=DBLK$->KQ$DBLK.DSIZE-SIZEC(KQ$MBLK);

  10407  0 003422   200020 473700                    LDP3  ! DBLK$,,AUTO
         0 003423   300000 720300                    LXL0  ! 0,,PR3
         0 003424   777700 621210                    EAX1  ! -64,X0
         0 003425   300000 441300                    SXL1  ! 0,,PR3

     1714    10408    4           IF J > 0 THEN

  10408  0 003426   200031 235300                    LDA   ! J,,AUTO
         0 003427   003447 604600 0                  TMOZ  ! s:10415
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:220  

     1715    10409    5             DO;

     1716    10410    5             I=DBLK$->KQ$DBLK.DSIZE-(J*SIZEC(KQ$MBLK));

  10410  0 003430   200020 473700                    LDP3  ! DBLK$,,AUTO
         0 003431   300000 236300                    LDQ   ! 0,,PR3
         0 003432   777777 376207                    ANQ   ! -1,DL
         0 003433   200062 756300                    STQ   ! @M$+1,,AUTO
         0 003434   200031 336300                    LCQ   ! J,,AUTO
         0 003435   000006 736200                    QLS   ! 6
         0 003436   200062 036300                    ADLQ  ! @M$+1,,AUTO
         0 003437   200021 756300                    STQ   ! I,,AUTO

     1717    10411    5             P$->B$$CHARS=PINCRW(P$,SIZEW(KQ$MBLK))->B$$CHARS;

  10411  0 003440   200016 474700                    LDP4  ! P$,,AUTO
         0 003441   000000 620206                    EAX0  ! 0,QL
         0 003442   200021 721300                    LXL1  ! I,,AUTO
         0 003443   040140 100740                    MLR   ! fill='040'O
         0 003444   400020 000010                    ADSC9   16,,PR4                  cn=0,n=*X0
         0 003445   400000 000011                    ADSC9   0,,PR4                   cn=0,n=*X1

     1718    10412    5             END;

  10412  0 003446   003456 710200 0                  TRA   ! s:10418

     1719    10413    4           ELSE /* Removal of 1st just updates FIRSTX */
     1720    10414    5             DO;

     1721    10415    5             CTLBLK$->KQ$MBLK.FIRSTX=CTLBLK$->KQ$MBLK.FIRSTX+SIZEW(KQ$MBLK);

  10415  0 003447   200047 473700                    LDP3  ! CTLBLK$,,AUTO
         0 003450   300013 235300                    LDA   ! 11,,PR3
         0 003451   000020 035207                    ADLA  ! 16,DL
         0 003452   300013 755300                    STA   ! 11,,PR3

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:221  
     1722    10416    5             P$=PINCRW(P$,SIZEW(KQ$MBLK));

  10416  0 003453   200016 236300                    LDQ   ! P$,,AUTO
         0 003454   000020 036203                    ADLQ  ! 16,DU
         0 003455   200016 756300                    STQ   ! P$,,AUTO

     1723    10417    5             END;

     1724    10418    4           CALL UPDATE;

  10418  0 003456   004150 701200 0                  TSX1  ! UPDATE
         0 003457   000000 011200                    NOP   ! 0

     1725    10419    4           NMBLKS=NMBLKS-1;

  10419  0 003460   000001 336207                    LCQ   ! 1,DL
         0 003461   200045 056300                    ASQ   ! NMBLKS,,AUTO

     1726    10420    4           RETURN;

  10420  0 003462   200050 221300                    LDX1  ! H$,,AUTO
         0 003463   000001 702211                    TSX2  ! 1,X1

     1727    10421    4           END; /* Inhibit */

     1728    10422    3   END PULLONE;

  10422  0 003464   000001 702211                    TSX2  ! 1,X1

     1729    10423        /**/
     1730    10424        /*D* NAME:         MERGEIT
     1731    10425             PURPOSE:      To merge the head of the INSHD$ list into the
     1732    10426                           MBLKs that were pulled from the DBLK
     1733    10427             INPUT:        M$   - the first pulled MBLK
     1734    10428                           P$   - predecessor of M$
     1735    10429                           L$   - the last pulled MBLK
     1736    10430        */
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:222  
     1737    10431    2   MERGEIT: PROC;

  10431  0 003465   200050 741300       MERGEIT      STX1  ! H$,,AUTO

     1738    10432        /**/
     1739    10433    3         IP$=P$;

  10433  0 003466   200016 236100                    LDQ     P$,,AUTO
         0 003467   200046 756100                    STQ     SAVP$,,AUTO

     1740    10434    3         Z$=M$;

  10434  0 003470   200033 236100                    LDQ     M$,,AUTO
         0 003471   200035 756100                    STQ     Z$,,AUTO

     1741    10435    4           DO FOREVER;

     1742    10436    4           IF X$->KQ$MBLK.PRIO > Z$->KQ$MBLK.PRIO THEN

  10436  0 003472   200035 470500                    LDP0    Z$,,AUTO
         0 003473   000001 220100                    LDX0    1,,PR0
         0 003474   200034 471500                    LDP1    X$,,AUTO
         0 003475   100001 100100                    CMPX0   1,,PR1
         0 003476   003522 603000 0                  TRC     s:10445

     1743    10437    5   M0:       DO INHIBIT;

  10437  0 003477                       M0           null
     1744    10438    5             MBLK$->KQ$MBLK.INSHD$=X$->KQ$MBLK.LNK$;

  10438  0 003477   200034 470700                    LDP0  ! X$,,AUTO
         0 003500   000000 236300                    LDQ   ! 0,,PR0
         0 003501   200012 471700                    LDP1  ! MBLK$,,AUTO
         0 003502   100012 756300                    STQ   ! 10,,PR1

     1745    10439    5             IF IP$=ADDR(NIL) THEN

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:223  
  10439  0 003503   200046 236300                    LDQ   ! SAVP$,,AUTO
         0 003504   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 003505   003512 601200 0                  TNZ   ! s:10441

     1746    10440    5              MLH$->KQ$MLH.HEAD$=X$;

  10440  0 003506   200034 236300                    LDQ   ! X$,,AUTO
         0 003507   200024 473700                    LDP3  ! MLH$,,AUTO
         0 003510   300000 756300                    STQ   ! 0,,PR3
         0 003511   003515 710200 0                  TRA   ! s:10442

     1747    10441    5             ELSE IP$->KQ$MBLK.LNK$=X$;

  10441  0 003512   200034 236300                    LDQ   ! X$,,AUTO
         0 003513   200046 473700                    LDP3  ! SAVP$,,AUTO
         0 003514   300000 756300                    STQ   ! 0,,PR3

     1748    10442    5             X$->KQ$MBLK.LNK$=Z$;

  10442  0 003515   200035 236300                    LDQ   ! Z$,,AUTO
         0 003516   000000 756300                    STQ   ! 0,,PR0

     1749    10443    5             RETURN;

  10443  0 003517   200050 221300                    LDX1  ! H$,,AUTO
         0 003520   000001 702211                    TSX2  ! 1,X1

     1750    10444    5             END;

  10444  0 003521   003540 710000 0                  TRA     s:10449

     1751    10445    4           ELSE IF X$->KQ$MBLK.PRIO = Z$->KQ$MBLK.PRIO THEN

  10445  0 003522   100001 221100                    LDX1    1,,PR1
         0 003523   000001 101100                    CMPX1   1,,PR0
         0 003524   003540 601000 0                  TNZ     s:10449

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:224  
     1752    10446    4             IF X$->KQ$MBLK.UTS < Z$->KQ$MBLK.UTS THEN GOTO M0;

  10446  0 003525   100007 236100                    LDQ     7,,PR1
         0 003526   000007 116100                    CMPQ    7,,PR0
         0 003527   003477 602000 0                  TNC     M0

     1753    10447    4             ELSE IF X$->KQ$MBLK.UTS = Z$->KQ$MBLK.UTS THEN

  10447  0 003530   003540 601000 0                  TNZ     s:10449

     1754    10448    4               IF X$->KQ$MBLK.STAMP < Z$->KQ$MBLK.STAMP THEN GOTO M0;

  10448  0 003531   000001 236100                    LDQ     1,,PR0
         0 003532   777777 376007                    ANQ     -1,DL
         0 003533   200062 756100                    STQ     @M$+1,,AUTO
         0 003534   100001 236100                    LDQ     1,,PR1
         0 003535   777777 376007                    ANQ     -1,DL
         0 003536   200062 116100                    CMPQ    @M$+1,,AUTO
         0 003537   003477 604000 0                  TMI     M0

     1755    10449    4           IP$=Z$;

  10449  0 003540   200035 236100                    LDQ     Z$,,AUTO
         0 003541   200046 756100                    STQ     SAVP$,,AUTO

     1756    10450    4           Z$=Z$->KQ$MBLK.LNK$;

  10450  0 003542   200035 470500                    LDP0    Z$,,AUTO
         0 003543   000000 236100                    LDQ     0,,PR0
         0 003544   200035 756100                    STQ     Z$,,AUTO

     1757    10451    4           END;

  10451  0 003545   003472 710000 0                  TRA     s:10436

     1758    10452    3   END MERGEIT;
     1759    10453    2   END SRCHSUPER;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:225  

  10453  0 003546   000001 702211                    TSX2  ! 1,X1

     1760    10454        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:226  
     1761    10455        /********************************************************
     1762    10456        *********************************************************/
     1763    10457        /*D* NAME:         FWCGL
     1764    10458             PURPOSE:      To perform the FWCG functions when
     1765    10459                           an appropriate message is found.
     1766    10460             INPUT:        MBLK$    - MBLK
     1767    10461                           P$       - its predecessor
     1768    10462             DESCRIPTION:  Calls KQF$GOTMSG if TELLME is set
     1769    10463                           in KQ$FWP.  Conducts the correct
     1770    10464                           dialogue with KQF$GOTMSG when he
     1771    10465                           needs to REG for a DBLK.  When
     1772    10466                           KQF$GOTMSG is finished (or not
     1773    10467                           called at all), then we do the
     1774    10468                           delete/reattr if KQ$FWP.FC says
     1775    10469                           so.  This routine ALTRETs if
     1776    10470                           the MBLK disappears, setting P$
     1777    10471                           and MBLK$ as required.
     1778    10472        */
     1779    10473    1   FWCGL: PROC ALTRET;

  10473  0 003547   200050 741300       FWCGL        STX1  ! H$,,AUTO

     1780    10474        /**/
     1781    10475    2   DCL MB$ PTR;
     1782    10476        /**/
     1783    10477    2         MB$=MBLK$;

  10477  0 003550   200012 236100                    LDQ     MBLK$,,AUTO
         0 003551   200051 756100                    STQ     MB$,,AUTO

     1784    10478    2         CALL TELL ALTRET(RTN);

  10478  0 003552   003667 701000 0                  TSX1    TELL
         0 003553   003620 702000 0                  TSX2    RTN

     1785    10479    3           DO INHIBIT;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:227  
     1786    10480    3           CALL REMOVE;

  10480  0 003554   005340 701200 0                  TSX1  ! REMOVE
         0 003555   000000 011200                    NOP   ! 0

     1787    10481    3           IF P$ = ADDR(NIL) THEN MBLK$=MLH$->KQ$MLH.HEAD$;

  10481  0 003556   200016 236300                    LDQ   ! P$,,AUTO
         0 003557   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 003560   003565 601200 0                  TNZ   ! s:10482

  10481  0 003561   200024 470700                    LDP0  ! MLH$,,AUTO
         0 003562   000000 236300                    LDQ   ! 0,,PR0
         0 003563   200012 756300                    STQ   ! MBLK$,,AUTO
         0 003564   003570 710200 0                  TRA   ! COM

     1788    10482    3           ELSE MBLK$=P$->KQ$MBLK.LNK$;

  10482  0 003565   200016 470700                    LDP0  ! P$,,AUTO
         0 003566   000000 236300                    LDQ   ! 0,,PR0
         0 003567   200012 756300                    STQ   ! MBLK$,,AUTO

     1789    10483    3   COM:    IF FWP$->KQ$FWP.FC < 0 THEN

  10483  0 003570   200037 470700       COM          LDP0  ! FWP$,,AUTO
         0 003571   000006 235300                    LDA   ! 6,,PR0
         0 003572   003603 605200 0                  TPL   ! s:10486

     1790    10484    3            CALL KQU$DELMSG (CG$->KQ$CG,MB$->KQ$MBLK);

  10484  0 003573   200051 236300                    LDQ   ! MB$,,AUTO
         0 003574   200013 235300                    LDA   ! CG$,,AUTO
         0 003575   200062 757300                    STAQ  ! @M$+1,,AUTO
         0 003576   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 003577   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         0 003600   000000 701200 xent               TSX1  ! KQU$DELMSG
         0 003601   000000 011200                    NOP   ! 0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:228  
         0 003602   003616 710200 0                  TRA   ! s:10487

     1791    10485    3           ELSE
     1792    10486    3            CALL KQL$INSERT (CG$->KQ$CG,FWP$->KQ$FWP.FWCGS$->KQ$STA.MLH,MB$);

  10486  0 003603   000005 471700                    LDP1  ! 5,,PR0
         0 003604   200051 633700                    EPPR3 ! MB$,,AUTO
         0 003605   200064 453700                    STP3  ! @M$+3,,AUTO
         0 003606   100034 634700                    EPPR4 ! 28,,PR1
         0 003607   200063 454700                    STP4  ! @M$+2,,AUTO
         0 003610   200013 236300                    LDQ   ! CG$,,AUTO
         0 003611   200062 756300                    STQ   ! @M$+1,,AUTO
         0 003612   200062 630700                    EPPR0 ! @M$+1,,AUTO
         0 003613   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         0 003614   000240 701200 0                  TSX1  ! s:9172
         0 003615   000000 011200                    NOP   ! 0

     1793    10487    3           ALTRETURN;

  10487  0 003616   200050 221300                    LDX1  ! H$,,AUTO
         0 003617   000000 702211                    TSX2  ! 0,X1

     1794    10488    3           END; /* Inhibit */

     1795    10489    2   RTN:  RETURN;

  10489  0 003620   200050 221300       RTN          LDX1  ! H$,,AUTO
         0 003621   000001 702211                    TSX2  ! 1,X1

     1796    10490        /**/
     1797    10491        /*D* NAME:         FWCGD
     1798    10492             PURPOSE:      Same as FWCGL
     1799    10493             INPUT:        P$       - points to the MBLK in the DBLK.
     1800    10494                           FC       - guaranteed to be 0 (i.e. no
     1801    10495                                      removal will be required).
     1802    10496             DESCRIPTION:  Does not ALTRET; just tells KQF$GOTMSG
     1803    10497        */
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:229  
     1804    10498    2   FWCGD: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

  10498  0 003622   200050 741300       FWCGD        STX1  ! H$,,AUTO

     1805    10499        /**/
     1806    10500    2         MB$=P$;

  10500  0 003623   200016 236100                    LDQ     P$,,AUTO
         0 003624   200051 756100                    STQ     MB$,,AUTO

     1807    10501    2         CALL TELL ALTRET(RTN);

  10501  0 003625   003667 701000 0                  TSX1    TELL
         0 003626   003620 702000 0                  TSX2    RTN

     1808    10502    2   SC:   CALL SC_CGSUPR;

  10502  0 003627   000000 713400 xsym  SC           CLIMB   SC_CGSUPR
         0 003630   000000 600000 xsid               climb   nvectors=         0

     1809    10503    2         GOTO SC;

  10503  0 003631   003627 710000 0                  TRA     SC

     1810    10504        /**/
     1811    10505        /*D* NAME:         FWCGP
     1812    10506             PURPOSE:      Same as FWCGL
     1813    10507             INPUT:        M$       - points to MBLK in memory.  MBLK has
     1814    10508                                      already been removed because
     1815    10509                                      KQF$CHKMSG has already said the msg
     1816    10510                                      qualifies, and FC is nonzero so
     1817    10511                                      removal is required.
     1818    10512             DESCRIPTON:   Always altrets; else same as FWCGL
     1819    10513        */
     1820    10514    2   FWCGP: ENTRY ALTRET; /* !!Always ALTRETs!! */

  10514  0 003632   200050 741300       FWCGP        STX1  ! H$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:230  

     1821    10515        /**/
     1822    10516    2         MB$=M$;

  10516  0 003633   200033 236100                    LDQ     M$,,AUTO
         0 003634   200051 756100                    STQ     MB$,,AUTO

     1823    10517    2         CALL TELL ALTRET(SC);

  10517  0 003635   003667 701000 0                  TSX1    TELL
         0 003636   003627 702000 0                  TSX2    SC

     1824    10518    2         GOTO COM;

  10518  0 003637   003570 710000 0                  TRA     COM

     1825    10519        /**/
     1826    10520        /*D* NAME:         FWCGI
     1827    10521             PURPOSE:      Same as FWCGL
     1828    10522             INPUT:        M$       - points to MBLK on INSHD$ list of
     1829    10523                                      super MBLK pointed to by MBLK$
     1830    10524                           P$       - its predecessor
     1831    10525             DESCRIPTION:  Same as FWCGL
     1832    10526        */
     1833    10527    2   FWCGI: ENTRY ALTRET;

  10527  0 003640   200050 741300       FWCGI        STX1  ! H$,,AUTO

     1834    10528        /**/
     1835    10529    2         MB$=M$;

  10529  0 003641   200033 236100                    LDQ     M$,,AUTO
         0 003642   200051 756100                    STQ     MB$,,AUTO

     1836    10530    2         CALL TELL ALTRET(RTN);

  10530  0 003643   003667 701000 0                  TSX1    TELL
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:231  
         0 003644   003620 702000 0                  TSX2    RTN

     1837    10531    3           DO INHIBIT;

     1838    10532    3           CALL REMOVEI (P$,M$);

  10532  0 003645   200033 630700                    EPPR0 ! M$,,AUTO
         0 003646   200054 450700                    STP0  ! @P$+1,,AUTO
         0 003647   200016 631700                    EPPR1 ! P$,,AUTO
         0 003650   200053 451700                    STP1  ! T2$+1,,AUTO
         0 003651   005403 701200 0                  TSX1  ! REMOVEI
         0 003652   000000 011200                    NOP   ! 0

     1839    10533    3           IF P$ = ADDR(NIL) THEN M$=MBLK$->KQ$MBLK.INSHD$;

  10533  0 003653   200016 236300                    LDQ   ! P$,,AUTO
         0 003654   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 003655   003662 601200 0                  TNZ   ! s:10534

  10533  0 003656   200012 470700                    LDP0  ! MBLK$,,AUTO
         0 003657   000012 236300                    LDQ   ! 10,,PR0
         0 003660   200033 756300                    STQ   ! M$,,AUTO
         0 003661   003665 710200 0                  TRA   ! s:10535

     1840    10534    3           ELSE M$=P$->KQ$MBLK.LNK$;

  10534  0 003662   200016 470700                    LDP0  ! P$,,AUTO
         0 003663   000000 236300                    LDQ   ! 0,,PR0
         0 003664   200033 756300                    STQ   ! M$,,AUTO

     1841    10535    3           GOTO COM;

  10535  0 003665   003570 710200 0                  TRA   ! COM

     1842    10536    3           END; /* Inhibit */

  10536  0 003666   004102 710000 0                  TRA     s:10614
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:232  

     1843    10537        /**/
     1844    10538        /*D* NAME:         TELL
     1845    10539             PURPOSE:      To call KQF$GOTMSG
     1846    10540             DESRIPTION:   If KQ$FWP.TELLME is reset then ALTRETs if FC = 0;
     1847    10541                           else returns.  Else calls KQF$GOTMSG, handling
     1848    10542                           the case where he needs to REG for a DBLK.  If
     1849    10543                           no DBLK is obtained, zaps TELLME and FC, and
     1850    10544                           sets RBLK.ERR to KQGE_QFUL#, & then ALTRETs.
     1851    10545                           Otherwise RETURNs if FC is zero or TOOKIT is
     1852    10546                           reset (i.e. there's nothing more to do); else
     1853    10547                           ALTRETs (i.e. removal is required and the msg
     1854    10548                           qualifies).
     1855    10549        */
     1856    10550    2   TELL: PROC ALTRET;

  10550  0 003667   200052 741300       TELL         STX1  ! T1$+1,,AUTO

     1857    10551        /**/
     1858    10552    3         CALL KQX$CHKTIME (TIMCHK) ALTRET(GO);

  10552  0 003670   200006 630500                    EPPR0   TIMCHK,,AUTO
         0 003671   200062 450500                    STP0    @M$+1,,AUTO
         0 003672   200062 630500                    EPPR0   @M$+1,,AUTO
         0 003673   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003674   000000 701000 xent               TSX1    KQX$CHKTIME
         0 003675   003717 702000 0                  TSX2    GO

     1859    10553    3         CALL UNL;

  10553  0 003676   004010 701000 0                  TSX1    UNL
         0 003677   000000 011000                    NOP     0

     1860    10554    3         CALL SSR$REG (%SS_QE);

  10554  0 003700   000015 630400 1                  EPPR0   13
         0 003701   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:233  
         0 003702   000000 701000 xent               TSX1    SSR$REG
         0 003703   000000 011000                    NOP     0

     1861    10555    3         CALL KQX$SETTIME (TIMCHK);

  10555  0 003704   200006 630500                    EPPR0   TIMCHK,,AUTO
         0 003705   200062 450500                    STP0    @M$+1,,AUTO
         0 003706   200062 630500                    EPPR0   @M$+1,,AUTO
         0 003707   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 003710   000000 701000 xent               TSX1    KQX$SETTIME
         0 003711   000000 011000                    NOP     0

     1862    10556    3         FWP$->KQ$FWP.TIMCHK=TIMCHK;

  10556  0 003712   200006 237100                    LDAQ    TIMCHK,,AUTO
         0 003713   200037 470500                    LDP0    FWP$,,AUTO
         0 003714   000000 757100                    STAQ    0,,PR0

     1863    10557    3         CALL LOCK;

  10557  0 003715   004045 701000 0                  TSX1    LOCK
         0 003716   000000 011000                    NOP     0

  10556  0 003717                       GO           null
     1864    10558    3   GO:   ;
     1865    10559        /**/
     1866    10560    3         IF NOT FWP$->KQ$FWP.TELLME THEN

  10560  0 003717   200037 470500                    LDP0    FWP$,,AUTO
         0 003720   000007 234100                    SZN     7,,PR0
         0 003721   003730 604000 0                  TMI     s:10563

     1867    10561    3          IF FWP$->KQ$FWP.FC = 0 THEN ALTRETURN;

  10561  0 003722   000006 235100                    LDA     6,,PR0
         0 003723   003726 601000 0                  TNZ     s:10562

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:234  
  10561  0 003724   200052 221300                    LDX1  ! T1$+1,,AUTO
         0 003725   000000 702211                    TSX2  ! 0,X1

     1868    10562    3          ELSE RETURN;

  10562  0 003726   200052 221300                    LDX1  ! T1$+1,,AUTO
         0 003727   000001 702211                    TSX2  ! 1,X1

     1869    10563    3         FWP$->KQ$FWP.REGOK='0'B;

  10563  0 003730   000002 236000 1                  LDQ     2
         0 003731   000007 356100                    ANSQ    7,,PR0

     1870    10564    3         FWP$->KQ$FWP.TOOKIT='0'B;

  10564  0 003732   000001 236000 1                  LDQ     1
         0 003733   000007 356100                    ANSQ    7,,PR0

     1871    10565    3         CALL KQF$GOTMSG (FWP$->KQ$FWP,MB$->KQ$MBLK) ALTRET(REG);

  10565  0 003734   200051 236100                    LDQ     MB$,,AUTO
         0 003735   200037 235100                    LDA     FWP$,,AUTO
         0 003736   200062 757100                    STAQ    @M$+1,,AUTO
         0 003737   200062 630500                    EPPR0   @M$+1,,AUTO
         0 003740   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 003741   000000 701000 xent               TSX1    KQF$GOTMSG
         0 003742   003755 702000 0                  TSX2    REG

     1872    10566    3   OUT:  IF NOT FWP$->KQ$FWP.TOOKIT

  10566  0 003743   200037 470500       OUT          LDP0    FWP$,,AUTO
         0 003744   000007 236100                    LDQ     7,,PR0
         0 003745   200000 316003                    CANQ    65536,DU
         0 003746   003751 600000 0                  TZE     s:10567
         0 003747   000006 235100                    LDA     6,,PR0
         0 003750   003753 601000 0                  TNZ     s:10568

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:235  
     1873    10567    3         OR FWP$->KQ$FWP.FC = 0 THEN ALTRETURN;

  10567  0 003751   200052 221300                    LDX1  ! T1$+1,,AUTO
         0 003752   000000 702211                    TSX2  ! 0,X1

     1874    10568    3         RETURN;

  10568  0 003753   200052 221300                    LDX1  ! T1$+1,,AUTO
         0 003754   000001 702211                    TSX2  ! 1,X1

     1875    10569    3   REG:  CALL UNL;

  10569  0 003755   004010 701000 0     REG          TSX1    UNL
         0 003756   000000 011000                    NOP     0

     1876    10570    3         FWP$->KQ$FWP.TOOKIT='0'B;

  10570  0 003757   200037 470500                    LDP0    FWP$,,AUTO
         0 003760   000001 236000 1                  LDQ     1
         0 003761   000007 356100                    ANSQ    7,,PR0

     1877    10571    3         FWP$->KQ$FWP.REGOK='1'B;

  10571  0 003762   100000 236003                    LDQ     32768,DU
         0 003763   000007 256100                    ORSQ    7,,PR0

     1878    10572    3         CALL KQF$GOTMSG (FWP$->KQ$FWP,MB$->KQ$MBLK) ALTRET(NODB);

  10572  0 003764   200051 236100                    LDQ     MB$,,AUTO
         0 003765   200037 235100                    LDA     FWP$,,AUTO
         0 003766   200062 757100                    STAQ    @M$+1,,AUTO
         0 003767   200062 630500                    EPPR0   @M$+1,,AUTO
         0 003770   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 003771   000000 701000 xent               TSX1    KQF$GOTMSG
         0 003772   003774 702000 0                  TSX2    NODB

     1879    10573    3         GOTO LOUT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:236  

  10573  0 003773   004005 710000 0                  TRA     LOUT

     1880    10574    3   NODB: FWP$->KQ$FWP.FC=0;

  10574  0 003774   200037 470500       NODB         LDP0    FWP$,,AUTO
         0 003775   000006 450100                    STZ     6,,PR0

     1881    10575    3         FWP$->KQ$FWP.TELLME='0'B;

  10575  0 003776   000031 236000 xsym               LDQ     B_VECTNIL+25
         0 003777   000007 356100                    ANSQ    7,,PR0

     1882    10576    3         RBLK$->KQ$RBLK.ERR=KQGE_QFUL#;

  10576  0 004000   200011 471500                    LDP1    RBLK$,,AUTO
         0 004001   100001 236100                    LDQ     1,,PR1
         0 004002   000005 376000 1                  ANQ     5
         0 004003   001000 276007                    ORQ     512,DL
         0 004004   100001 756100                    STQ     1,,PR1

     1883    10577    3   LOUT: CALL LOCK;

  10577  0 004005   004045 701000 0     LOUT         TSX1    LOCK
         0 004006   000000 011000                    NOP     0

     1884    10578    3         GOTO OUT;

  10578  0 004007   003743 710000 0                  TRA     OUT

     1885    10579        /**/
     1886    10580    3   UNL:  PROC;

  10580  0 004010   200054 741300       UNL          STX1  ! @P$+1,,AUTO

     1887    10581    4         IF Q = 0 THEN

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:237  
  10581  0 004011   200025 235100                    LDA     Q,,AUTO
         0 004012   004023 601000 0                  TNZ     s:10589

     1888    10582    5           DO;

     1889    10583                %UNLOCK (G=STA$->KQ$STA.GATE);

  10584  0 004013   200010 236100                    LDQ     STA$,,AUTO
         0 004014   000016 036003                    ADLQ    14,DU
         0 004015   200062 756100                    STQ     @M$+1,,AUTO
         0 004016   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004017   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 004020   000000 701000 xent               TSX1    HFC$UNLOCK
         0 004021   000000 011000                    NOP     0

     1890    10586    5           END;

  10586  0 004022   004043 710000 0                  TRA     s:10594

     1891    10587    4         ELSE
     1892    10588    5           DO;

     1893    10589    5           QTN$->KQ$QTN.LOCKCNT=QTN$->KQ$QTN.LOCKCNT+1;

  10589  0 004023   200036 470500                    LDP0    QTN$,,AUTO
         0 004024   000050 236100                    LDQ     40,,PR0
         0 004025   000033 772000                    QRL     27
         0 004026   000177 376007                    ANQ     127,DL
         0 004027   000001 036007                    ADLQ    1,DL
         0 004030   000033 736000                    QLS     27
         0 004031   000050 676100                    ERQ     40,,PR0
         0 004032   177000 376003                    ANQ     65024,DU
         0 004033   000050 656100                    ERSQ    40,,PR0

     1894    10590                %UNLOCK (G=KQ$QTREE.GATE);

  10591  0 004034   200013 471500                    LDP1    CG$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:238  
         0 004035   100057 473500                    LDP3    47,,PR1
         0 004036   200062 453500                    STP3    @M$+1,,AUTO
         0 004037   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004040   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 004041   000000 701000 xent               TSX1    HFC$UNLOCK
         0 004042   000000 011000                    NOP     0

     1895    10593    5           END;

     1896    10594    4         RETURN;

  10594  0 004043   200054 221300                    LDX1  ! @P$+1,,AUTO
         0 004044   000001 702211                    TSX2  ! 1,X1

     1897    10595    4   END UNL;
     1898    10596        /**/
     1899    10597    3   LOCK: PROC;

  10597  0 004045   200054 741300       LOCK         STX1  ! @P$+1,,AUTO

     1900    10598    4         IF Q = 0 THEN

  10598  0 004046   200025 235100                    LDA     Q,,AUTO
         0 004047   004060 601000 0                  TNZ     s:10607

     1901    10599    5           DO;

     1902    10600                %LOCK (G=STA$->KQ$STA.GATE);

  10601  0 004050   200010 236100                    LDQ     STA$,,AUTO
         0 004051   000016 036003                    ADLQ    14,DU
         0 004052   200062 756100                    STQ     @M$+1,,AUTO
         0 004053   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004054   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 004055   000000 701000 xent               TSX1    HFC$LOCK
         0 004056   000000 011000                    NOP     0

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:239  
     1903    10603    5           END;

  10603  0 004057   004100 710000 0                  TRA     s:10611

     1904    10604    4         ELSE
     1905    10605    5           DO;

     1906    10606                %LOCK (G=KQ$QTREE.GATE);

  10607  0 004060   200013 470500                    LDP0    CG$,,AUTO
         0 004061   000057 471500                    LDP1    47,,PR0
         0 004062   200062 451500                    STP1    @M$+1,,AUTO
         0 004063   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004064   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 004065   000000 701000 xent               TSX1    HFC$LOCK
         0 004066   000000 011000                    NOP     0

     1907    10609    5           QTN$->KQ$QTN.LOCKCNT=QTN$->KQ$QTN.LOCKCNT-1;

  10609  0 004067   200036 470500                    LDP0    QTN$,,AUTO
         0 004070   000050 236100                    LDQ     40,,PR0
         0 004071   000033 772000                    QRL     27
         0 004072   000177 376007                    ANQ     127,DL
         0 004073   000001 136007                    SBLQ    1,DL
         0 004074   000033 736000                    QLS     27
         0 004075   000050 676100                    ERQ     40,,PR0
         0 004076   177000 376003                    ANQ     65024,DU
         0 004077   000050 656100                    ERSQ    40,,PR0

     1908    10610    5           END;

     1909    10611    4         RETURN;

  10611  0 004100   200054 221300                    LDX1  ! @P$+1,,AUTO
         0 004101   000001 702211                    TSX2  ! 1,X1

     1910    10612    4   END LOCK;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:240  
     1911    10613    3   END TELL;
     1912    10614    2   END FWCGL;

  10614  0 004102   200050 221300                    LDX1  ! H$,,AUTO
         0 004103   000001 702211                    TSX2  ! 1,X1

     1913    10615        /********************************************************
     1914    10616        *********************************************************/
     1915    10617        /**/
     1916    10618        /*D* NAME:         DELETE
     1917    10619             PURPOSE:      To delete the in-core data block
     1918    10620             DESCRIPTION:  Calls KQD$DELETE & sets DBLK$=ADDR(NIL)
     1919    10621        */
     1920    10622    1   DELETE: PROC;

  10622  0 004104   200060 741300       DELETE       STX1  ! REL$+1,,AUTO

     1921    10623        /**/
     1922    10624    2         CALL KQD$DELETE (CG$->KQ$CG,DBLK$);

  10624  0 004105   200020 630500                    EPPR0   DBLK$,,AUTO
         0 004106   200063 450500                    STP0    @M$+2,,AUTO
         0 004107   200013 236100                    LDQ     CG$,,AUTO
         0 004110   200062 756100                    STQ     @M$+1,,AUTO
         0 004111   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004112   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 004113   000000 701000 xent               TSX1    KQD$DELETE
         0 004114   000000 011000                    NOP     0

     1923    10625    2   XIT:  DBLK$=ADDR(NIL);

  10625  0 004115   000001 236000 xsym  XIT          LDQ     B_VECTNIL+1
         0 004116   200020 756100                    STQ     DBLK$,,AUTO

     1924    10626    2         RETURN;

  10626  0 004117   200060 221300                    LDX1  ! REL$+1,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:241  
         0 004120   000001 702211                    TSX2  ! 1,X1

     1925    10627        /**/
     1926    10628        /*D* NAME:         UPDATED
     1927    10629             PURPOSE:      To unlock & mark updated the current data block
     1928    10630             DESCRIPTION:  Calls KQD$UPDATED and sets DBLK$=ADDR(NIL)
     1929    10631        */
     1930    10632    2   UPDATED: ENTRY;

  10632  0 004121   200060 741300       UPDATED      STX1  ! REL$+1,,AUTO

     1931    10633        /**/
     1932    10634    2         CALL KQD$UPDATED (CG$->KQ$CG,DBLK$);

  10634  0 004122   200020 630500                    EPPR0   DBLK$,,AUTO
         0 004123   200063 450500                    STP0    @M$+2,,AUTO
         0 004124   200013 236100                    LDQ     CG$,,AUTO
         0 004125   200062 756100                    STQ     @M$+1,,AUTO
         0 004126   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004127   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 004130   000000 701000 xent               TSX1    KQD$UPDATED
         0 004131   000000 011000                    NOP     0

     1933    10635    2         GOTO XIT;

  10635  0 004132   004115 710000 0                  TRA     XIT

     1934    10636        /**/
     1935    10637        /*D* NAME:         UNLOCK
     1936    10638             PURPOSE:      To unlock any current data block
     1937    10639             DESCRIPTION:  If DBLK$ ~= ADDR(NIL) then calls KQD$UNLOCK.
     1938    10640                           Sets DBLK$=ADDR(NIL)
     1939    10641        */
     1940    10642    2   UNLOCK: ENTRY;

  10642  0 004133   200060 741300       UNLOCK       STX1  ! REL$+1,,AUTO

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:242  
     1941    10643        /**/
     1942    10644    2         IF DBLK$ ~= ADDR(NIL) THEN

  10644  0 004134   200020 236100                    LDQ     DBLK$,,AUTO
         0 004135   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 004136   004147 600000 0                  TZE     s:10646

     1943    10645    2          CALL KQD$UNLOCK (CG$->KQ$CG,DBLK$);

  10645  0 004137   200020 630500                    EPPR0   DBLK$,,AUTO
         0 004140   200063 450500                    STP0    @M$+2,,AUTO
         0 004141   200013 236100                    LDQ     CG$,,AUTO
         0 004142   200062 756100                    STQ     @M$+1,,AUTO
         0 004143   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004144   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 004145   000000 701000 xent               TSX1    KQD$UNLOCK
         0 004146   000000 011000                    NOP     0

     1944    10646    2         GOTO XIT;

  10646  0 004147   004115 710000 0                  TRA     XIT

     1945    10647        /**/
     1946    10648        /*D* NAME:         UPDATE
     1947    10649             PURPOSE:      To mark the current DBLK updated
     1948    10650        */
     1949    10651    2   UPDATE: ENTRY;

  10651  0 004150   200060 741300       UPDATE       STX1  ! REL$+1,,AUTO

     1950    10652        /**/
     1951    10653    2         CALL KQD$UPDATE (CG$->KQ$CG,DBLK$);

  10653  0 004151   200020 630500                    EPPR0   DBLK$,,AUTO
         0 004152   200063 450500                    STP0    @M$+2,,AUTO
         0 004153   200013 236100                    LDQ     CG$,,AUTO
         0 004154   200062 756100                    STQ     @M$+1,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:243  
         0 004155   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004156   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 004157   000000 701000 xent               TSX1    KQD$UPDATE
         0 004160   000000 011000                    NOP     0

     1952    10654    2         RETURN;

  10654  0 004161   200060 221300                    LDX1  ! REL$+1,,AUTO
         0 004162   000001 702211                    TSX2  ! 1,X1

     1953    10655    2   END DELETE;
     1954    10656        /********************************************************
     1955    10657        *********************************************************/
     1956    10658        /**/
     1957    10659        /*D* NAME:         DISKERR
     1958    10660             PURPOSE:      To log errors encountered while
     1959    10661                           reading disc chains.
     1960    10662             DESCRIPTION:  KQ$MBLK.SDA.CCDDA (or KQ$MBLK.DDA) is
     1961    10663                           the disc address we read.  DDA is the
     1962    10664                           error code.
     1963    10665        */
     1964    10666    1   DISKERR: PROC;

  10666  0 004163   200050 741300       DISKERR      STX1  ! H$,,AUTO

     1965    10667        /**/
     1966    10668    2   DCL F$ PTR;
     1967    10669    2   DCL 1 FRAME BASED ALIGNED,
     1968    10670              %KQ_LOGENT (FPTN=LOGENT,STCLASS=BASED,LVL=2,LAST=",");
     1969    10712    2         2 STA     CHAR(8)   CALIGNED,
     1970    10713    2         2 NODE    CHAR(8)   CALIGNED,
     1971    10714              %KQ_MLH (FPTN=MLH,STCLASS=BASED,LVL=2);
     1972    10784        /**/
     1973    10785    2         IF KQ_DEBUG ~= 0 THEN

  10785  0 004164   000000 235000 xsym               LDA     KQ_DEBUG
         0 004165   004170 600000 0                  TZE     s:10795
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:244  

     1974    10786    2          CALL SC_CGSUSN;

  10786  0 004166   000000 713400 xsym               CLIMB   SC_CGSUSN
         0 004167   000000 600000 xsid               climb   nvectors=         0

     1975    10787        /*S* SCREECH_CODE: KQL-S$CGSUSN
     1976    10788             TYPE:         SNAP
     1977    10789             MESSAGE:      COMGROUP super MBLK inconsistency
     1978    10790             REMARKS:      This SNAP occurs when a recoverable inconsistency
     1979    10791                           is discovered in an MLH containing super MBLKs. */
     1980    10792        /**/
     1981    10793                                /* Log the error */
     1982    10794              %LOCK (G=KQ_ERRLOG_GATE);

  10795  0 004170   000016 630400 1                  EPPR0   14
         0 004171   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 004172   000000 701000 xent               TSX1    HFC$LOCK
         0 004173   000000 011000                    NOP     0

     1983    10797    2         KQ_ERRLOG_BFR.CODE=%KQELOG_KQL_FTCH;

  10797  0 004174   013000 236003                    LDQ     5632,DU
         0 004175   000000 552040 xsym               STBQ    KQ_ERRLOG_BFR,'40'O

     1984    10798    2         KQ_ERRLOG_BFR.SIZ=SIZEW(FRAME)+SIZEW(KQ$RBLK)+SIZEW(KQ$MBLK);

  10798  0 004176   000066 235007                    LDA     54,DL
         0 004177   000015 755000 xsym               STA     KQ_ERRLOG_BFR+13

     1985    10799    2         KQ_ERRLOG_BFR.INFO='0'B;

  10799  0 004200   000000 100400                    MLR     fill='000'O
         0 004201   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 004202   000016 000310 xsym               ADSC9   KQ_ERRLOG_BFR+14         cn=0,n=200

     1986    10800    2         F$=ADDR(KQ_ERRLOG_BFR.INFO);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:245  

  10800  0 004203   000017 236000 1                  LDQ     15
         0 004204   200051 756100                    STQ     F$,,AUTO

     1987    10801    2         CALL KQZ$LOG (CG$->KQ$CG,Q,TERM,ENTFLAG,0,DDA,0,F$) ALTRET(A1);

  10801  0 004205   200051 630500                    EPPR0   F$,,AUTO
         0 004206   200071 450500                    STP0    @M$+8,,AUTO
         0 004207   000020 236000 1                  LDQ     16
         0 004210   200070 756100                    STQ     @M$+7,,AUTO
         0 004211   200022 631500                    EPPR1   DDA,,AUTO
         0 004212   200067 451500                    STP1    @M$+6,,AUTO
         0 004213   200066 756100                    STQ     @M$+5,,AUTO
         0 004214   200030 633500                    EPPR3   ENTFLAG,,AUTO
         0 004215   200065 453500                    STP3    @M$+4,,AUTO
         0 004216   200026 634500                    EPPR4   TERM,,AUTO
         0 004217   200064 454500                    STP4    @M$+3,,AUTO
         0 004220   200025 635500                    EPPR5   Q,,AUTO
         0 004221   200063 455500                    STP5    @M$+2,,AUTO
         0 004222   200013 236100                    LDQ     CG$,,AUTO
         0 004223   200062 756100                    STQ     @M$+1,,AUTO
         0 004224   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004225   000026 631400 xsym               EPPR1   B_VECTNIL+22
         0 004226   000000 701000 xent               TSX1    KQZ$LOG
         0 004227   004232 702000 0                  TSX2    A1

     1988    10802    2         RETURN;

  10802  0 004230   200050 221300                    LDX1  ! H$,,AUTO
         0 004231   000001 702211                    TSX2  ! 1,X1

     1989    10803    2   A1:   F$->FRAME.STA    =STA$->KQ$STA.BTN.KEY;

  10803  0 004232   200010 470500       A1           LDP0    STA$,,AUTO
         0 004233   200051 471500                    LDP1    F$,,AUTO
         0 004234   040100 100500                    MLR     fill='040'O
         0 004235   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:246  
         0 004236   100010 000010                    ADSC9   8,,PR1                   cn=0,n=8

     1990    10804    2         IF Q ~= 0 THEN

  10804  0 004237   200025 235100                    LDA     Q,,AUTO
         0 004240   004246 600000 0                  TZE     s:10806

     1991    10805    2          F$->FRAME.NODE  =QTN$->KQ$QTN.STA.BTN.KEY;

  10805  0 004241   200036 470500                    LDP0    QTN$,,AUTO
         0 004242   200051 471500                    LDP1    F$,,AUTO
         0 004243   040100 100500                    MLR     fill='040'O
         0 004244   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         0 004245   100012 000010                    ADSC9   10,,PR1                  cn=0,n=8

     1992    10806    2         F$->FRAME.MLH    =MLH$->KQ$MLH;

  10806  0 004246   200024 470500                    LDP0    MLH$,,AUTO
         0 004247   200051 471500                    LDP1    F$,,AUTO
         0 004250   000100 100500                    MLR     fill='000'O
         0 004251   000000 000040                    ADSC9   0,,PR0                   cn=0,n=32
         0 004252   100014 000040                    ADSC9   12,,PR1                  cn=0,n=32

     1993    10807    2         F$=PINCRW(F$,SIZEW(FRAME));

  10807  0 004253   200051 236100                    LDQ     F$,,AUTO
         0 004254   000024 036003                    ADLQ    20,DU
         0 004255   200051 756100                    STQ     F$,,AUTO

     1994    10808    2         IF TERM = 0 THEN

  10808  0 004256   200026 235100                    LDA     TERM,,AUTO
         0 004257   004266 601000 0                  TNZ     s:10810

     1995    10809    2          F$->KQ$RBLK=RBLK$->KQ$RBLK;

  10809  0 004260   200011 471500                    LDP1    RBLK$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:247  
         0 004261   200051 473500                    LDP3    F$,,AUTO
         0 004262   000100 100500                    MLR     fill='000'O
         0 004263   100000 000110                    ADSC9   0,,PR1                   cn=0,n=72
         0 004264   300000 000110                    ADSC9   0,,PR3                   cn=0,n=72
         0 004265   004273 710000 0                  TRA     s:10811

     1996    10810    2         ELSE F$->KQ$RBLKT=RBLK$->KQ$RBLKT;

  10810  0 004266   200011 471500                    LDP1    RBLK$,,AUTO
         0 004267   200051 473500                    LDP3    F$,,AUTO
         0 004270   000100 100500                    MLR     fill='000'O
         0 004271   100000 000070                    ADSC9   0,,PR1                   cn=0,n=56
         0 004272   300000 000070                    ADSC9   0,,PR3                   cn=0,n=56

     1997    10811    2         F$=PINCRW(F$,SIZEW(KQ$RBLK));

  10811  0 004273   200051 236100                    LDQ     F$,,AUTO
         0 004274   000022 036003                    ADLQ    18,DU
         0 004275   200051 756100                    STQ     F$,,AUTO

     1998    10812    2         F$->KQ$MBLK=MBLK$->KQ$MBLK;

  10812  0 004276   200012 473500                    LDP3    MBLK$,,AUTO
         0 004277   200051 474500                    LDP4    F$,,AUTO
         0 004300   000100 100500                    MLR     fill='000'O
         0 004301   300000 000100                    ADSC9   0,,PR3                   cn=0,n=64
         0 004302   400000 000100                    ADSC9   0,,PR4                   cn=0,n=64

     1999    10813    2         CALL KQD$ERRLOG (CG$->KQ$CG);

  10813  0 004303   200013 630500                    EPPR0   CG$,,AUTO
         0 004304   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 004305   000000 701000 xent               TSX1    KQD$ERRLOG
         0 004306   000000 011000                    NOP     0

     2000    10814    2         RETURN;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:248  
  10814  0 004307   200050 221300                    LDX1  ! H$,,AUTO
         0 004310   000001 702211                    TSX2  ! 1,X1

     2001    10815    2   END DISKERR;
     2002    10816        /********************************************************
     2003    10817        *********************************************************/
     2004    10818        /**/
     2005    10819        /*D* NAME:         RELMB
     2006    10820             PURPOSE:      To release a possible MBLK
     2007    10821             DESCRIPTION:  Releases any MBLK acquired via KQM$GETBM but
     2008    10822                           not used
     2009    10823        */
     2010    10824    1   RELMB: PROC;

  10824  0 004311   200056 741300       RELMB        STX1  ! @STATE+1,,AUTO

     2011    10825        /**/
     2012    10826    2   DCL REL$ PTR;
     2013    10827        /**/
     2014    10828    2         CALL GETMB (REL$) ALTRET(RTN);

  10828  0 004312   200057 630500                    EPPR0   REL$,,AUTO
         0 004313   200061 450500                    STP0    REL$+2,,AUTO
         0 004314   004330 701000 0                  TSX1    GETMB
         0 004315   004326 702000 0                  TSX2    RTN

     2015    10829    2         CALL KQM$RELMBLK (CG$->KQ$CG,REL$);

  10829  0 004316   200057 630500                    EPPR0   REL$,,AUTO
         0 004317   200063 450500                    STP0    @M$+2,,AUTO
         0 004320   200013 236100                    LDQ     CG$,,AUTO
         0 004321   200062 756100                    STQ     @M$+1,,AUTO
         0 004322   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004323   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 004324   000000 701000 xent               TSX1    KQM$RELMBLK
         0 004325   000000 011000                    NOP     0

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:249  
     2016    10830    2   RTN:  RETURN;

  10830  0 004326   200056 221300       RTN          LDX1  ! @STATE+1,,AUTO
         0 004327   000001 702211                    TSX2  ! 1,X1

     2017    10831    2   END RELMB;
     2018    10832        /**/
     2019    10833        /*D* NAME:         GETMB
     2020    10834             PURPOSE:      To get an MBLK previously acquired via KQM$GETBM
     2021    10835        */
     2022    10836    1   GETMB: PROC (M$) ALTRET;

  10836  0 004330   200060 741300       GETMB        STX1  ! REL$+1,,AUTO

     2023    10837        /**/
     2024    10838    2   DCL M$ PTR;
     2025    10839        /**/
     2026    10840    2         IF MBLK$->KQ$MBLK.MREQ > 0 THEN CALL SC_CGSUPR;

  10840  0 004331   200012 470500                    LDP0    MBLK$,,AUTO
         0 004332   000010 236100                    LDQ     8,,PR0
         0 004333   000011 736000                    QLS     9
         0 004334   000033 732000                    QRS     27
         0 004335   000000 116003                    CMPQ    0,DU
         0 004336   004342 604400 0                  TMOZ    s:10841

  10840  0 004337   000000 713400 xsym               CLIMB   SC_CGSUPR
         0 004340   000000 600000 xsid               climb   nvectors=         0
         0 004341   004365 710000 0                  TRA     s:10849

     2027    10841    2         ELSE IF MBLK$->KQ$MBLK.MREQ < 0 THEN

  10841  0 004342   004365 605000 0                  TPL     s:10849

     2028    10842    3            DO;

     2029    10843    3            IF MBLK$->KQ$MBLK.KEY2VALID THEN CALL SC_CGSUPR;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:250  

  10843  0 004343   000010 236100                    LDQ     8,,PR0
         0 004344   040000 316003                    CANQ    16384,DU
         0 004345   004350 600000 0                  TZE     s:10844

  10843  0 004346   000000 713400 xsym               CLIMB   SC_CGSUPR
         0 004347   000000 600000 xsid               climb   nvectors=         0

     2030    10844    3            MBLK$->KQ$MBLK.MREQ=0;

  10844  0 004350   200012 470500                    LDP0    MBLK$,,AUTO
         0 004351   000000 236003                    LDQ     0,DU
         0 004352   000010 552120                    STBQ    8,'20'O,PR0

     2031    10845    3            M$=MBLK$->KQ$MBLK.XSP.MREQ$;

  10845  0 004353   000004 236100                    LDQ     4,,PR0
         0 004354   200061 471500                    LDP1    @M$,,AUTO
         0 004355   100000 756100                    STQ     0,,PR1

     2032    10846    3            MBLK$->KQ$MBLK.XSP.MREQ$=ADDR(NIL);

  10846  0 004356   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 004357   000004 756100                    STQ     4,,PR0

     2033    10847    3            IF M$ ~= ADDR(NIL) THEN RETURN;

  10847  0 004360   100000 236100                    LDQ     0,,PR1
         0 004361   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 004362   004365 600000 0                  TZE     s:10849

  10847  0 004363   200060 221300                    LDX1  ! REL$+1,,AUTO
         0 004364   000001 702211                    TSX2  ! 1,X1

     2034    10848    3            END;
     2035    10849    2         ALTRETURN;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:251  
  10849  0 004365   200060 221300                    LDX1  ! REL$+1,,AUTO
         0 004366   000000 702211                    TSX2  ! 0,X1

     2036    10850    2   END GETMB;
     2037    10851        /********************************************************
     2038    10852        *********************************************************/
     2039    10853        /**/
     2040    10854        /*D* NAME:         SFETCH
     2041    10855             PURPOSE:      To fetch a super MBLK's DBLK into memory
     2042    10856             DESCRIPTION:  The DBLK to be fetched is described by:
     2043    10857                             DDA    :         KQ$MBLK.DDA/KQ$MBLK.SDA.CCDDA
     2044    10858                             STAMP  :         KQ$MBLK.CCSTAMP
     2045    10859                             BLINK  :         KQ$MBLK.PCDDA
     2046    10860
     2047    10861                           Fetches it.  Returns if fetched OK or immediate
     2048    10862                           error.  Else REGs, ALTRETing if TERM request and
     2049    10863                           returning when done otherwise.
     2050    10864        */
     2051    10865    1   SFETCH: PROC ALTRET;

  10865  0 004367   200050 741300       SFETCH       STX1  ! H$,,AUTO

     2052    10866        /**/
     2053    10867    2   DCL T1$ PTR;
     2054    10868    2   DCL 1 T1$R REDEF T1$,
     2055    10869    2         2 H1 UBIN HALF UNAL,
     2056    10870    2         2 H2 UBIN HALF UNAL;
     2057    10871    2   DCL T2$ PTR;

  10871  0 004370                       RETRY        null
     2058    10872        /**/
     2059    10873    2   RETRY:;
     2060    10874    2         CALL KQX$CHKTIME (TIMCHK) ALTRET(GO);

  10874  0 004370   200006 630500                    EPPR0   TIMCHK,,AUTO
         0 004371   200062 450500                    STP0    @M$+1,,AUTO
         0 004372   200062 630500                    EPPR0   @M$+1,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:252  
         0 004373   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 004374   000000 701000 xent               TSX1    KQX$CHKTIME
         0 004375   004402 702000 0                  TSX2    GO

     2061    10875    2         CALL REG (KQSS_Q4EX#) ALTRET(ALTRT);

  10875  0 004376   000021 236000 1                  LDQ     17
         0 004377   200055 756100                    STQ     @M$+1,,AUTO
         0 004400   004555 701000 0                  TSX1    REG
         0 004401   004553 702000 0                  TSX2    ALTRT

  10869  0 004402                       GO           null
     2062    10876    2   GO:   ;
     2063    10877        /**/
     2064    10878    2         DBLK$R=MBLK$->KQ$MBLK.CCSTAMP;

  10878  0 004402   200012 470500                    LDP0    MBLK$,,AUTO
         0 004403   000016 236100                    LDQ     14,,PR0
         0 004404   777777 376007                    ANQ     -1,DL
         0 004405   200020 756100                    STQ     DBLK$,,AUTO

     2065    10879    2         IF MBLK$->KQ$MBLK.KEY1VALID THEN

  10879  0 004406   000010 236100                    LDQ     8,,PR0
         0 004407   020000 316003                    CANQ    8192,DU
         0 004410   004414 600000 0                  TZE     s:10881

     2066    10880    2          DDA=MBLK$->KQ$MBLK.DDA;

  10880  0 004411   000006 235100                    LDA     6,,PR0
         0 004412   200022 755100                    STA     DDA,,AUTO
         0 004413   004416 710000 0                  TRA     s:10882

     2067    10881    2         ELSE DDA=MBLK$->KQ$MBLK.SDA.CCDDA;

  10881  0 004414   000003 235100                    LDA     3,,PR0
         0 004415   200022 755100                    STA     DDA,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:253  

     2068    10882    2         IF DDA = 0 THEN

  10882  0 004416   004423 601000 0                  TNZ     s:10887

     2069    10883    3           DO; /* prev fetch err */

     2070    10884    3           DBLK$=ADDR(NIL);

  10884  0 004417   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 004420   200020 756100                    STQ     DBLK$,,AUTO

     2071    10885    3           RETURN;

  10885  0 004421   200050 221300                    LDX1  ! H$,,AUTO
         0 004422   000001 702211                    TSX2  ! 1,X1

     2072    10886    3           END;
     2073    10887    2         IF KQ_LOG.KQL THEN

  10887  0 004423   000000 236000 xsym               LDQ     KQ_LOG
         0 004424   100000 316003                    CANQ    32768,DU
         0 004425   004455 600000 0                  TZE     s:10894

     2074    10888    3           DO;

     2075    10889    3           T1$=MLH$;

  10889  0 004426   200024 236100                    LDQ     MLH$,,AUTO
         0 004427   200051 756100                    STQ     T1$,,AUTO

     2076    10890    3           T2$=MBLK$;

  10890  0 004430   200012 236100                    LDQ     MBLK$,,AUTO
         0 004431   200052 756100                    STQ     T2$,,AUTO

     2077    10891    3           CALL KQZ$LOG (CG$->KQ$CG,%KQLOG_SFET,S_CUN,T1$,T1$R.H1,T2$,DDA) ALTRET(A1);
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:254  

  10891  0 004432   200022 631500                    EPPR1   DDA,,AUTO
         0 004433   200070 451500                    STP1    @M$+7,,AUTO
         0 004434   200052 633500                    EPPR3   T2$,,AUTO
         0 004435   200067 453500                    STP3    @M$+6,,AUTO
         0 004436   200051 634500                    EPPR4   T1$,,AUTO
         0 004437   200066 454500                    STP4    @M$+5,,AUTO
         0 004440   200051 635500                    EPPR5   T1$,,AUTO
         0 004441   200065 455500                    STP5    @M$+4,,AUTO
         0 004442   000023 236000 1                  LDQ     19
         0 004443   200064 756100                    STQ     @M$+3,,AUTO
         0 004444   000024 236000 1                  LDQ     20
         0 004445   200013 235100                    LDA     CG$,,AUTO
         0 004446   200062 757100                    STAQ    @M$+1,,AUTO
         0 004447   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004450   000025 631400 xsym               EPPR1   B_VECTNIL+21
         0 004451   000000 701000 xent               TSX1    KQZ$LOG
         0 004452   004455 702000 0                  TSX2    s:10894

     2078    10892    3           RETURN;

  10892  0 004453   200050 221300                    LDX1  ! H$,,AUTO
         0 004454   000001 702211                    TSX2  ! 1,X1

     2079    10893    3   A1:     END;
     2080    10894    2         CALL KQD$FETCH (CG$->KQ$CG,DBLK$,DDA) ALTRET(NOFETCH);

  10894  0 004455   200022 630500                    EPPR0   DDA,,AUTO
         0 004456   200064 450500                    STP0    @M$+3,,AUTO
         0 004457   200020 631500                    EPPR1   DBLK$,,AUTO
         0 004460   200063 451500                    STP1    @M$+2,,AUTO
         0 004461   200013 236100                    LDQ     CG$,,AUTO
         0 004462   200062 756100                    STQ     @M$+1,,AUTO
         0 004463   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004464   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 004465   000000 701000 xent               TSX1    KQD$FETCH
         0 004466   004471 702000 0                  TSX2    NOFETCH
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:255  

     2081    10895    2         RETURN;

  10895  0 004467   200050 221300                    LDX1  ! H$,,AUTO
         0 004470   000001 702211                    TSX2  ! 1,X1

  10894  0 004471                       NOFETCH      null
     2082    10896    2   NOFETCH:;
     2083    10897    2         IF DBLK$ = ADDR(NIL) THEN

  10897  0 004471   200020 236100                    LDQ     DBLK$,,AUTO
         0 004472   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 004473   004526 601000 0                  TNZ     s:10920

     2084    10898    3           DO CASE (DDA);

  10898  0 004474   200022 235100                    LDA     DDA,,AUTO
         0 004475   000013 115007                    CMPA    11,DL
         0 004476   004500 602005 0                  TNC     s:10898+4,AL
         0 004477   004522 710000 0                  TRA     s:10908
         0 004500   004522 710000 0                  TRA     s:10908
         0 004501   004522 710000 0                  TRA     s:10908
         0 004502   004522 710000 0                  TRA     s:10908
         0 004503   004520 710000 0                  TRA     s:10905
         0 004504   004520 710000 0                  TRA     s:10905
         0 004505   004520 710000 0                  TRA     s:10905
         0 004506   004520 710000 0                  TRA     s:10905
         0 004507   004522 710000 0                  TRA     s:10908
         0 004510   004522 710000 0                  TRA     s:10908
         0 004511   004522 710000 0                  TRA     s:10908
         0 004512   004513 710000 0                  TRA     s:10901

     2085    10899
     2086    10900    3             CASE (%KQDE_NDFRBLK); /* no defer blocks avail */

     2087    10901    3               CALL REG (KQSS_NDFR#) ALTRET(ALTRT);

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:256  
  10901  0 004513   000012 236000 1                  LDQ     10
         0 004514   200055 756100                    STQ     @M$+1,,AUTO
         0 004515   004555 701000 0                  TSX1    REG
         0 004516   004553 702000 0                  TSX2    ALTRT

     2088    10902    3               GOTO RETRY;

  10902  0 004517   004370 710000 0                  TRA     RETRY

     2089    10903
     2090    10904    3             CASE (%KQDE_STMP,%KQDE_BDDA,%KQDE_STATE,%KQDE_IOERR);

     2091    10905    3               RETURN;

  10905  0 004520   200050 221300                    LDX1  ! H$,,AUTO
         0 004521   000001 702211                    TSX2  ! 1,X1

     2092    10906
     2093    10907    3             CASE (ELSE);

     2094    10908    3               CALL SC_CGSUPR;

  10908  0 004522   000000 713400 xsym               CLIMB   SC_CGSUPR
         0 004523   000000 600000 xsid               climb   nvectors=         0

     2095    10909        /*S* SCREECH_CODE: KQL-S$CGSUPR
     2096    10910             TYPE:         SCREECH
     2097    10911             MESSAGE:      Inconsistency in COMGROUP super MBLK
     2098    10912             REMARKS:      An inconsistency has been encountered while
     2099    10913                           processing a super MBLK.  The nature of the
     2100    10914                           error depends upon the place from which the
     2101    10915                           SCREECH was called.
     2102    10916        */
     2103    10917    3               RETURN;

  10917  0 004524   200050 221300                    LDX1  ! H$,,AUTO
         0 004525   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:257  

     2104    10918    3           END;

     2105    10919        /**/
     2106    10920    2         DFRP$=DBLK$;

  10920  0 004526   200017 756100                    STQ     DFRP$,,AUTO

     2107    10921    2         DBLK$=ADDR(NIL);

  10921  0 004527   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 004530   200020 756100                    STQ     DBLK$,,AUTO

     2108    10922    2         DFRP$->KQ$DFRBLK.INFO$=MBLK$;

  10922  0 004531   200012 236100                    LDQ     MBLK$,,AUTO
         0 004532   200017 470500                    LDP0    DFRP$,,AUTO
         0 004533   000006 756100                    STQ     6,,PR0

     2109    10923    2         CALL REG (KQSS_IOIP#) ALTRET(ALTRT);

  10923  0 004534   000025 236000 1                  LDQ     21
         0 004535   200055 756100                    STQ     @M$+1,,AUTO
         0 004536   004555 701000 0                  TSX1    REG
         0 004537   004553 702000 0                  TSX2    ALTRT

     2110    10924    2         DBLK$=MBLK$->KQ$MBLK.STA$;

  10924  0 004540   200012 470500                    LDP0    MBLK$,,AUTO
         0 004541   000013 236100                    LDQ     11,,PR0
         0 004542   200020 756100                    STQ     DBLK$,,AUTO

     2111    10925    2         DDA=ADDR(DBLK$)->B$$UPARM.ERR;

  10925  0 004543   200020 236100                    LDQ     DBLK$,,AUTO
         0 004544   000014 772000                    QRL     12
         0 004545   000077 376007                    ANQ     63,DL
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:258  
         0 004546   200022 756100                    STQ     DDA,,AUTO

     2112    10926    2         ADDR(DBLK$)->B$$UPARM.ERR=0;

  10926  0 004547   000000 236003                    LDQ     0,DU
         0 004550   200020 752104                    STCQ    DBLK$,'04'O,AUTO

     2113    10927    2         RETURN;

  10927  0 004551   200050 221300                    LDX1  ! H$,,AUTO
         0 004552   000001 702211                    TSX2  ! 1,X1

     2114    10928    2   ALTRT:ALTRETURN;

  10928  0 004553   200050 221300       ALTRT        LDX1  ! H$,,AUTO
         0 004554   000000 702211                    TSX2  ! 0,X1

     2115    10929    2   END SFETCH;
     2116    10930        /********************************************************
     2117    10931        *********************************************************/
     2118    10932        /**/
     2119    10933        /*D* NAME:         REG
     2120    10934             PURPOSE:      To block the search process
     2121    10935             DESCRIPTION:  The MBLK is placed in the appropriate state,
     2122    10936                           and then we ALTRET if TERM, else block the user
     2123    10937                           and fall thru to ENDREG when unblocked.
     2124    10938        */
     2125    10939    1   REG:  PROC (STATE) ALTRET;

  10939  0 004555   200054 741300       REG          STX1  ! @P$+1,,AUTO

     2126    10940        /**/
     2127    10941    2   DCL STATE UBIN;
     2128    10942        /**/
     2129    10943    2         IF MBLK$->KQ$MBLK.STATE ~= KQSS_IDLE# THEN CALL SC_CGSUPR;

  10943  0 004556   200012 470500                    LDP0    MBLK$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:259  
         0 004557   000010 236100                    LDQ     8,,PR0
         0 004560   007000 316003                    CANQ    3584,DU
         0 004561   004564 600000 0                  TZE     s:10944

  10943  0 004562   000000 713400 xsym               CLIMB   SC_CGSUPR
         0 004563   000000 600000 xsid               climb   nvectors=         0

     2130    10944    2         MBLK$->KQ$MBLK.STATE=STATE;

  10944  0 004564   200055 470500                    LDP0    @STATE,,AUTO
         0 004565   200012 471500                    LDP1    MBLK$,,AUTO
         0 004566   000000 236100                    LDQ     0,,PR0
         0 004567   000033 736000                    QLS     27
         0 004570   100010 676100                    ERQ     8,,PR1
         0 004571   007000 376003                    ANQ     3584,DU
         0 004572   100010 656100                    ERSQ    8,,PR1

     2131    10945    2         IF TERM = 0 THEN

  10945  0 004573   200026 235100                    LDA     TERM,,AUTO
         0 004574   004602 601000 0                  TNZ     s:10952

     2132    10946    3           DO;

     2133    10947    3           MBLK$->KQ$MBLK.USR='1'B;

  10947  0 004575   010000 236003                    LDQ     4096,DU
         0 004576   100010 256100                    ORSQ    8,,PR1

     2134    10948    3           MBLK$->KQ$MBLK.USR#=S_CUN;

  10948  0 004577   000000 235000 xsym               LDA     S_CUN
         0 004600   100013 755100                    STA     11,,PR1

     2135    10949    3           END;

  10949  0 004601   004606 710000 0                  TRA     s:10955
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:260  

     2136    10950    2         ELSE
     2137    10951    3           DO;

     2138    10952    3           MBLK$->KQ$MBLK.USR='0'B;

  10952  0 004602   000026 236000 1                  LDQ     22
         0 004603   100010 356100                    ANSQ    8,,PR1

     2139    10953    3           MBLK$->KQ$MBLK.STA$=STA$;

  10953  0 004604   200010 236100                    LDQ     STA$,,AUTO
         0 004605   100013 756100                    STQ     11,,PR1

     2140    10954    3           END;

     2141    10955    2         IF Q ~= 0 THEN

  10955  0 004606   200025 235100                    LDA     Q,,AUTO
         0 004607   004630 600000 0                  TZE     s:10962

     2142    10956    3           DO;

     2143    10957    3           QTN$->KQ$QTN.LOCKCNT=QTN$->KQ$QTN.LOCKCNT+1;

  10957  0 004610   200036 473500                    LDP3    QTN$,,AUTO
         0 004611   300050 236100                    LDQ     40,,PR3
         0 004612   000033 772000                    QRL     27
         0 004613   000177 376007                    ANQ     127,DL
         0 004614   000001 036007                    ADLQ    1,DL
         0 004615   000033 736000                    QLS     27
         0 004616   300050 676100                    ERQ     40,,PR3
         0 004617   177000 376003                    ANQ     65024,DU
         0 004620   300050 656100                    ERSQ    40,,PR3

     2144    10958                %LOCK (G=STA$->KQ$STA.GATE);

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:261  
  10959  0 004621   200010 236100                    LDQ     STA$,,AUTO
         0 004622   000016 036003                    ADLQ    14,DU
         0 004623   200062 756100                    STQ     @M$+1,,AUTO
         0 004624   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004625   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 004626   000000 701000 xent               TSX1    HFC$LOCK
         0 004627   000000 011000                    NOP     0

     2145    10961    3           END;

     2146    10962    2         STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;

  10962  0 004630   200010 470500                    LDP0    STA$,,AUTO
         0 004631   000020 236100                    LDQ     16,,PR0
         0 004632   000001 036007                    ADLQ    1,DL
         0 004633   000020 552104                    STBQ    16,'04'O,PR0

     2147    10963    2         IF TERM ~= 0 THEN STA$->KQ$STA.TCOUNT=TCOUNT;

  10963  0 004634   200026 235100                    LDA     TERM,,AUTO
         0 004635   004640 600000 0                  TZE     s:10965

  10963  0 004636   200040 236100                    LDQ     TCOUNT,,AUTO
         0 004637   000030 756100                    STQ     24,,PR0

     2148    10964
     2149    10965    3           DO CASE (STATE);

  10965  0 004640   200055 471500                    LDP1    @STATE,,AUTO
         0 004641   100000 235100                    LDA     0,,PR1
         0 004642   000006 115007                    CMPA    6,DL
         0 004643   004645 602005 0                  TNC     s:10965+5,AL
         0 004644   005100 710000 0                  TRA     s:11043
         0 004645   005100 710000 0                  TRA     s:11043
         0 004646   004763 710000 0                  TRA     NDFR
         0 004647   004653 710000 0                  TRA     s:10968
         0 004650   005024 710000 0                  TRA     s:11019
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:262  
         0 004651   005043 710000 0                  TRA     s:11023
         0 004652   005061 710000 0                  TRA     s:11033

     2150    10966
     2151    10967    3             CASE (KQSS_NMEM#);

     2152    10968    3               IF Q = 0 THEN

  10968  0 004653   200025 236100                    LDQ     Q,,AUTO
         0 004654   004704 601000 0                  TNZ     s:10982

     2153    10969    4                 DO;

     2154    10970    4                 MLH$->KQ$MLH.RQMEM='1'B;

  10970  0 004655   200024 473500                    LDP3    MLH$,,AUTO
         0 004656   000020 236003                    LDQ     16,DU
         0 004657   300003 256100                    ORSQ    3,,PR3

     2155    10971    4                 IF MLH$->KQ$MLH.GACT THEN

  10971  0 004660   300003 236100                    LDQ     3,,PR3
         0 004661   000040 316003                    CANQ    32,DU
         0 004662   004701 600000 0                  TZE     s:10978

     2156    10972    5                   DO;

     2157    10973    5                   IF MLH$->KQ$MLH.BUSY.GIP THEN CALL SC_CGSUPR;

  10973  0 004663   000200 316003                    CANQ    128,DU
         0 004664   004667 600000 0                  TZE     s:10974

  10973  0 004665   000000 713400 xsym               CLIMB   SC_CGSUPR
         0 004666   000000 600000 xsid               climb   nvectors=         0

     2158    10974    5                   MLH$->KQ$MLH.BUSY.GIP='1'B;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:263  
  10974  0 004667   200024 470500                    LDP0    MLH$,,AUTO
         0 004670   000200 236003                    LDQ     128,DU
         0 004671   000003 256100                    ORSQ    3,,PR0

     2159    10975    5                   CALL UNL;

  10975  0 004672   005217 701000 0                  TSX1    UNL
         0 004673   000000 011000                    NOP     0

     2160    10976    5                   CALL KQS$CSQUISH (CG$->KQ$CG);

  10976  0 004674   200013 630500                    EPPR0   CG$,,AUTO
         0 004675   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 004676   000000 701000 xent               TSX1    KQS$CSQUISH
         0 004677   000000 011000                    NOP     0

     2161    10977    5                   END;

  10977  0 004700   004732 710000 0                  TRA     s:10992

     2162    10978    4                 ELSE CALL UNL;

  10978  0 004701   005217 701000 0                  TSX1    UNL
         0 004702   000000 011000                    NOP     0

     2163    10979    4                 END;

  10979  0 004703   004732 710000 0                  TRA     s:10992

     2164    10980    3               ELSE
     2165    10981    4                 DO; /* Q */

     2166    10982    4                 KQ$QUEUE.RQMEM='1'B;

  10982  0 004704   200013 473500                    LDP3    CG$,,AUTO
         0 004705   000020 236003                    LDQ     16,DU
         0 004706   300063 256100                    ORSQ    51,,PR3
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:264  

     2167    10983    4                 IF KQ$QUEUE.GACT THEN

  10983  0 004707   300063 236100                    LDQ     51,,PR3
         0 004710   000040 316003                    CANQ    32,DU
         0 004711   004730 600000 0                  TZE     s:10990

     2168    10984    5                   DO;

     2169    10985    5                   IF KQ$QUEUE.BUSY.GIP THEN CALL SC_CGSUPR;

  10985  0 004712   000200 316003                    CANQ    128,DU
         0 004713   004716 600000 0                  TZE     s:10986

  10985  0 004714   000000 713400 xsym               CLIMB   SC_CGSUPR
         0 004715   000000 600000 xsid               climb   nvectors=         0

     2170    10986    5                   KQ$QUEUE.BUSY.GIP='1'B;

  10986  0 004716   200013 470500                    LDP0    CG$,,AUTO
         0 004717   000200 236003                    LDQ     128,DU
         0 004720   000063 256100                    ORSQ    51,,PR0

     2171    10987    5                   CALL UNL;

  10987  0 004721   005217 701000 0                  TSX1    UNL
         0 004722   000000 011000                    NOP     0

     2172    10988    5                   CALL KQS$CQUEUE (CG$->KQ$CG);

  10988  0 004723   200013 630500                    EPPR0   CG$,,AUTO
         0 004724   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 004725   000000 701000 xent               TSX1    KQS$CQUEUE
         0 004726   000000 011000                    NOP     0

     2173    10989    5                   END;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:265  
  10989  0 004727   004732 710000 0                  TRA     s:10992

     2174    10990    4                 ELSE CALL UNL;

  10990  0 004730   005217 701000 0                  TSX1    UNL
         0 004731   000000 011000                    NOP     0

     2175    10991    4                 END;

     2176    10992    3               MBLK$->KQ$MBLK.KEY2VALID='0'B;

  10992  0 004732   200012 470500                    LDP0    MBLK$,,AUTO
         0 004733   000027 236000 1                  LDQ     23
         0 004734   000010 356100                    ANSQ    8,,PR0

     2177    10993    3               MBLK$->KQ$MBLK.KEY2ALL='0'B;

  10993  0 004735   000002 236000 1                  LDQ     2
         0 004736   000010 356100                    ANSQ    8,,PR0

     2178    10994    3               MBLK$->KQ$MBLK.XSP.MREQ$=ADDR(NIL);

  10994  0 004737   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 004740   000004 756100                    STQ     4,,PR0

     2179    10995    3               M$=MBLK$;

  10995  0 004741   200012 236100                    LDQ     MBLK$,,AUTO
         0 004742   200033 756100                    STQ     M$,,AUTO

     2180    10996    3               I=KQMR_MBLK#;

  10996  0 004743   000001 235007                    LDA     1,DL
         0 004744   200021 755100                    STA     I,,AUTO

     2181    10997    3               CALL KQM$GETBM (CG$->KQ$CG,M$,I) ALTRET(ALT1);

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:266  
  10997  0 004745   200021 631500                    EPPR1   I,,AUTO
         0 004746   200064 451500                    STP1    @M$+3,,AUTO
         0 004747   200033 633500                    EPPR3   M$,,AUTO
         0 004750   200063 453500                    STP3    @M$+2,,AUTO
         0 004751   200013 236100                    LDQ     CG$,,AUTO
         0 004752   200062 756100                    STQ     @M$+1,,AUTO
         0 004753   200062 630500                    EPPR0   @M$+1,,AUTO
         0 004754   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 004755   000000 701000 xent               TSX1    KQM$GETBM
         0 004756   004760 702000 0                  TSX2    ALT1

     2182    10998    3               GOTO NOW;

  10998  0 004757   005112 710000 0                  TRA     NOW

     2183    10999    3   ALT1:       M$=ADDR(NIL);

  10999  0 004760   000001 236000 xsym  ALT1         LDQ     B_VECTNIL+1
         0 004761   200033 756100                    STQ     M$,,AUTO

     2184    11000    3               GOTO LATER;

  11000  0 004762   005102 710000 0                  TRA     LATER

     2185    11001
     2186    11002    3             CASE (KQSS_NDFR#);

  10996  0 004763                       NDFR         null
     2187    11003    3   NDFR:       ;
     2188    11004    3               CALL UNL;

  11004  0 004763   005217 701000 0                  TSX1    UNL
         0 004764   000000 011000                    NOP     0

     2189    11005    3               CALL RELMB;

  11005  0 004765   004311 701000 0                  TSX1    RELMB
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:267  
         0 004766   000000 011000                    NOP     0

     2190    11006    3               MBLK$->KQ$MBLK.KEY2VALID='0'B;

  11006  0 004767   200012 470500                    LDP0    MBLK$,,AUTO
         0 004770   000027 236000 1                  LDQ     23
         0 004771   000010 356100                    ANSQ    8,,PR0

     2191    11007    3               MBLK$->KQ$MBLK.KEY2ALL='0'B;

  11007  0 004772   000002 236000 1                  LDQ     2
         0 004773   000010 356100                    ANSQ    8,,PR0

     2192    11008    3               MBLK$->KQ$MBLK.XSP.MREQ$=ADDR(NIL);

  11008  0 004774   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 004775   000004 756100                    STQ     4,,PR0

     2193    11009                    %LOCK (G=CG$->KQ$CG.GATE.CG);

  11010  0 004776   200013 236100                    LDQ     CG$,,AUTO
         0 004777   000107 036003                    ADLQ    71,DU
         0 005000   200062 756100                    STQ     @M$+1,,AUTO
         0 005001   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005002   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005003   000000 701000 xent               TSX1    HFC$LOCK
         0 005004   000000 011000                    NOP     0

     2194    11012    3               MBLK$->KQ$MBLK.XSP.SLNK$=CG$->KQ$CG.SRQHD$;

  11012  0 005005   200013 470500                    LDP0    CG$,,AUTO
         0 005006   000021 236100                    LDQ     17,,PR0
         0 005007   200012 471500                    LDP1    MBLK$,,AUTO
         0 005010   100004 756100                    STQ     4,,PR1

     2195    11013    3               CG$->KQ$CG.SRQHD$=MBLK$;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:268  
  11013  0 005011   200012 236100                    LDQ     MBLK$,,AUTO
         0 005012   200013 470500                    LDP0    CG$,,AUTO
         0 005013   000021 756100                    STQ     17,,PR0

     2196    11014                    %UNLOCK (G=CG$->KQ$CG.GATE.CG);

  11015  0 005014   200013 236100                    LDQ     CG$,,AUTO
         0 005015   000107 036003                    ADLQ    71,DU
         0 005016   200062 756100                    STQ     @M$+1,,AUTO
         0 005017   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005020   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005021   000000 701000 xent               TSX1    HFC$UNLOCK
         0 005022   000000 011000                    NOP     0
         0 005023   005102 710000 0                  TRA     LATER

     2197    11017
     2198    11018    3             CASE (KQSS_IOIP#);

     2199    11019    3               CALL UNL;

  11019  0 005024   005217 701000 0                  TSX1    UNL
         0 005025   000000 011000                    NOP     0

     2200    11020    3               CALL KQD$DEFERGO (CG$->KQ$CG,DFRP$,ENTADDR(KQL$FCONT));

  11020  0 005026   005553 636000 0                  EAQ     s:11272
         0 005027   200062 756100                    STQ     @M$+1,,AUTO
         0 005030   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005031   200065 450500                    STP0    @M$+4,,AUTO
         0 005032   200017 631500                    EPPR1   DFRP$,,AUTO
         0 005033   200064 451500                    STP1    @M$+3,,AUTO
         0 005034   200013 236100                    LDQ     CG$,,AUTO
         0 005035   200063 756100                    STQ     @M$+2,,AUTO
         0 005036   200063 630500                    EPPR0   @M$+2,,AUTO
         0 005037   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 005040   000000 701000 xent               TSX1    KQD$DEFERGO
         0 005041   000000 011000                    NOP     0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:269  
         0 005042   005102 710000 0                  TRA     LATER

     2201    11021
     2202    11022    3             CASE (KQSS_Q4GC#);

     2203    11023    3               IF Q = 0 THEN

  11023  0 005043   200025 236100                    LDQ     Q,,AUTO
         0 005044   005051 601000 0                  TNZ     s:11027

     2204    11024    3                MLH$->KQ$MLH.RQGC='1'B;

  11024  0 005045   200024 473500                    LDP3    MLH$,,AUTO
         0 005046   000010 236003                    LDQ     8,DU
         0 005047   300003 256100                    ORSQ    3,,PR3
         0 005050   005056 710000 0                  TRA     s:11030

     2205    11025    3               ELSE
     2206    11026    4                 DO;

     2207    11027    4                 KQ$QUEUE.MLH$=MLH$;

  11027  0 005051   200024 236100                    LDQ     MLH$,,AUTO
         0 005052   200013 473500                    LDP3    CG$,,AUTO
         0 005053   300065 756100                    STQ     53,,PR3

     2208    11028    4                 KQ$QUEUE.RQGC='1'B;

  11028  0 005054   000010 236003                    LDQ     8,DU
         0 005055   300063 256100                    ORSQ    51,,PR3

     2209    11029    4                 END;

     2210    11030    3               CALL UNL;

  11030  0 005056   005217 701000 0                  TSX1    UNL
         0 005057   000000 011000                    NOP     0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:270  
         0 005060   005102 710000 0                  TRA     LATER

     2211    11031
     2212    11032    3             CASE (KQSS_Q4EX#);

     2213    11033    3               IF TERM ~= 0 THEN

  11033  0 005061   200026 236100                    LDQ     TERM,,AUTO
         0 005062   005071 600000 0                  TZE     s:11038

     2214    11034    4                 DO;

     2215    11035    4                 MBLK$->KQ$MBLK.STATE=KQSS_NDFR#;

  11035  0 005063   200012 473500                    LDP3    MBLK$,,AUTO
         0 005064   300010 236100                    LDQ     8,,PR3
         0 005065   000030 376000 1                  ANQ     24
         0 005066   001000 276003                    ORQ     512,DU
         0 005067   300010 756100                    STQ     8,,PR3

     2216    11036    4                 GOTO NDFR;

  11036  0 005070   004763 710000 0                  TRA     NDFR

     2217    11037    4                 END;
     2218    11038    3               CALL UNL;

  11038  0 005071   005217 701000 0                  TSX1    UNL
         0 005072   000000 011000                    NOP     0

     2219    11039    3               CALL SSR$REG (%SS_QE);

  11039  0 005073   000015 630400 1                  EPPR0   13
         0 005074   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005075   000000 701000 xent               TSX1    SSR$REG
         0 005076   000000 011000                    NOP     0

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:271  
     2220    11040    3               GOTO NOW;

  11040  0 005077   005112 710000 0                  TRA     NOW

     2221    11041
     2222    11042    3             CASE (ELSE);

     2223    11043    3               CALL UNL;

  11043  0 005100   005217 701000 0                  TSX1    UNL
         0 005101   000000 011000                    NOP     0

     2224    11044    3           END;

  11042  0 005102                       LATER        null
     2225    11045
     2226    11046    2   LATER:;
     2227    11047    2         IF TERM ~= 0 THEN

  11047  0 005102   200026 235100                    LDA     TERM,,AUTO
         0 005103   005106 600000 0                  TZE     s:11049

     2228    11048    2   ALTRT: ALTRETURN;

  11048  0 005104   200054 221300       ALTRT        LDX1  ! @P$+1,,AUTO
         0 005105   000000 702211                    TSX2  ! 0,X1

     2229    11049    2         CALL SSR$REG (%SS_QA);

  11049  0 005106   000004 630400 1                  EPPR0   4
         0 005107   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005110   000000 701000 xent               TSX1    SSR$REG
         0 005111   000000 011000                    NOP     0

  11047  0 005112   005114 710000 0     NOW          TRA     s:11067

     2230    11050    2   NOW:  ;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:272  
     2231    11051        /**/
     2232    11052        /*D* NAME:         ENDREG
     2233    11053             PURPOSE:      To re-lock stuff after a REG
     2234    11054             DESCRIPTION:  Sets MBS to MBLK state, sets MBLK state
     2235    11055                           to KQSS_IDLE#, decrements station LOCKCNT.
     2236    11056                           Sets ENTFLAG to 1.
     2237    11057
     2238    11058                           ALTRETs if the station is a terminal and IDSC
     2239    11059                           is set, with station gate locked and LOCKCNT
     2240    11060                           decremented.
     2241    11061
     2242    11062                           Else decrements QTN LOCKCNT (if appropriate), and exits with
     2243    11063                           appropriate gate locked.
     2244    11064        */
     2245    11065    2   ENDREG: ENTRY ALTRET;

  11065  0 005113   200054 741300       ENDREG       STX1  ! @P$+1,,AUTO

     2246    11066        /**/
     2247    11067    2         CALL KQX$SETTIME(TIMCHK);

  11067  0 005114   200006 630500                    EPPR0   TIMCHK,,AUTO
         0 005115   200062 450500                    STP0    @M$+1,,AUTO
         0 005116   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005120   000000 701000 xent               TSX1    KQX$SETTIME
         0 005121   000000 011000                    NOP     0

     2248    11068    2         IF FWCG~=0 THEN FWP$->KQ$FWP.TIMCHK=TIMCHK;

  11068  0 005122   200037 235100                    LDA     FWP$,,AUTO
         0 005123   005127 600000 0                  TZE     s:11070

  11068  0 005124   200006 237100                    LDAQ    TIMCHK,,AUTO
         0 005125   200037 470500                    LDP0    FWP$,,AUTO
         0 005126   000000 757100                    STAQ    0,,PR0

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:273  
     2249    11069              %LOCK (G=STA$->KQ$STA.GATE);

  11070  0 005127   200010 236100                    LDQ     STA$,,AUTO
         0 005130   000016 036003                    ADLQ    14,DU
         0 005131   200062 756100                    STQ     @M$+1,,AUTO
         0 005132   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005133   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005134   000000 701000 xent               TSX1    HFC$LOCK
         0 005135   000000 011000                    NOP     0

     2250    11072    2         MBS=MBLK$->KQ$MBLK.STATE;

  11072  0 005136   200012 470500                    LDP0    MBLK$,,AUTO
         0 005137   000010 236100                    LDQ     8,,PR0
         0 005140   000033 772000                    QRL     27
         0 005141   000007 376007                    ANQ     7,DL
         0 005142   200032 756100                    STQ     MBS,,AUTO

     2251    11073    2         ENTFLAG=1;

  11073  0 005143   000001 235007                    LDA     1,DL
         0 005144   200030 755100                    STA     ENTFLAG,,AUTO

     2252    11074    2         MBLK$->KQ$MBLK.STATE=KQSS_IDLE#;

  11074  0 005145   000030 236000 1                  LDQ     24
         0 005146   000010 356100                    ANSQ    8,,PR0

     2253    11075    2         STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT-1;

  11075  0 005147   200010 471500                    LDP1    STA$,,AUTO
         0 005150   100020 236100                    LDQ     16,,PR1
         0 005151   000777 036007                    ADLQ    511,DL
         0 005152   100020 552104                    STBQ    16,'04'O,PR1

     2254    11076    2         IF TERM ~= 0 THEN

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:274  
  11076  0 005153   200026 236100                    LDQ     TERM,,AUTO
         0 005154   005164 600000 0                  TZE     s:11079

     2255    11077    2          IF STA$->KQ$STA.IDSC THEN

  11077  0 005155   100020 234100                    SZN     16,,PR1
         0 005156   005164 605000 0                  TPL     s:11079

     2256    11078    2           IF STA$->KQ$STA.LOCKCNT = 0 THEN ALTRETURN;

  11078  0 005157   100020 236100                    LDQ     16,,PR1
         0 005160   000777 316007                    CANQ    511,DL
         0 005161   005164 601000 0                  TNZ     s:11079

  11078  0 005162   200054 221300                    LDX1  ! @P$+1,,AUTO
         0 005163   000000 702211                    TSX2  ! 0,X1

     2257    11079    2         IF Q ~= 0 THEN

  11079  0 005164   200025 236100                    LDQ     Q,,AUTO
         0 005165   005215 600000 0                  TZE     s:11089

     2258    11080    3           DO;

     2259    11081                %UNLOCK (G=STA$->KQ$STA.GATE);

  11082  0 005166   200010 236100                    LDQ     STA$,,AUTO
         0 005167   000016 036003                    ADLQ    14,DU
         0 005170   200062 756100                    STQ     @M$+1,,AUTO
         0 005171   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005172   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005173   000000 701000 xent               TSX1    HFC$UNLOCK
         0 005174   000000 011000                    NOP     0

     2260    11084                %LOCK (G=KQ$QTREE.GATE);

  11085  0 005175   200013 470500                    LDP0    CG$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:275  
         0 005176   000057 471500                    LDP1    47,,PR0
         0 005177   200062 451500                    STP1    @M$+1,,AUTO
         0 005200   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005201   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005202   000000 701000 xent               TSX1    HFC$LOCK
         0 005203   000000 011000                    NOP     0

     2261    11087    3           QTN$->KQ$QTN.LOCKCNT=QTN$->KQ$QTN.LOCKCNT-1;

  11087  0 005204   200036 470500                    LDP0    QTN$,,AUTO
         0 005205   000050 236100                    LDQ     40,,PR0
         0 005206   000033 772000                    QRL     27
         0 005207   000177 376007                    ANQ     127,DL
         0 005210   000001 136007                    SBLQ    1,DL
         0 005211   000033 736000                    QLS     27
         0 005212   000050 676100                    ERQ     40,,PR0
         0 005213   177000 376003                    ANQ     65024,DU
         0 005214   000050 656100                    ERSQ    40,,PR0

     2262    11088    3           END;

     2263    11089    2         RETURN;

  11089  0 005215   200054 221300                    LDX1  ! @P$+1,,AUTO
         0 005216   000001 702211                    TSX2  ! 1,X1

     2264    11090        /**/
     2265    11091    2   UNL:  PROC;

  11091  0 005217   200056 741300       UNL          STX1  ! @STATE+1,,AUTO

     2266    11092              %UNLOCK (G=STA$->KQ$STA.GATE);

  11093  0 005220   200010 236100                    LDQ     STA$,,AUTO
         0 005221   000016 036003                    ADLQ    14,DU
         0 005222   200062 756100                    STQ     @M$+1,,AUTO
         0 005223   200062 630500                    EPPR0   @M$+1,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:276  
         0 005224   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005225   000000 701000 xent               TSX1    HFC$UNLOCK
         0 005226   000000 011000                    NOP     0

     2267    11095    3         IF Q ~= 0 THEN

  11095  0 005227   200025 235100                    LDA     Q,,AUTO
         0 005230   005240 600000 0                  TZE     s:11101

     2268    11096    4           DO;

     2269    11097                %UNLOCK (G=KQ$QTREE.GATE);

  11098  0 005231   200013 470500                    LDP0    CG$,,AUTO
         0 005232   000057 471500                    LDP1    47,,PR0
         0 005233   200062 451500                    STP1    @M$+1,,AUTO
         0 005234   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005235   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005236   000000 701000 xent               TSX1    HFC$UNLOCK
         0 005237   000000 011000                    NOP     0

     2270    11100    4           END;

     2271    11101    3         CALL UNLOCK;

  11101  0 005240   004133 701000 0                  TSX1    UNLOCK
         0 005241   000000 011000                    NOP     0

     2272    11102    3   END UNL;

  11102  0 005242   200056 221300                    LDX1  ! @STATE+1,,AUTO
         0 005243   000001 702211                    TSX2  ! 1,X1

     2273    11103    2   END REG;
     2274    11104        /********************************************************
     2275    11105        *********************************************************/
     2276    11106        /*D* NAME:         UNREG
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:277  
     2277    11107             PURPOSE:      To un REG an MBLK
     2278    11108             DESCRIPTION:  ALTRETs if not a user waiting (TERM request).
     2279    11109                           Else un REGs him.
     2280    11110        */
     2281    11111    1   UNREG: PROC ALTRET;

  11111  0 005244   200042 741300       UNREG        STX1  ! TCOUNT+2,,AUTO

     2282    11112        /**/
     2283    11113    2   DCL USR# UBIN BYTE CALIGNED;
     2284    11114        /**/
     2285    11115    3           DO CASE (MBLK$->KQ$MBLK.STATE);

  11115  0 005245   200012 470500                    LDP0    MBLK$,,AUTO
         0 005246   000010 236100                    LDQ     8,,PR0
         0 005247   000033 772000                    QRL     27
         0 005250   000007 376007                    ANQ     7,DL
         0 005251   000005 116007                    CMPQ    5,DL
         0 005252   005254 602006 0                  TNC     s:11115+7,QL
         0 005253   005277 710000 0                  TRA     s:11123
         0 005254   005277 710000 0                  TRA     s:11123
         0 005255   005261 710000 0                  TRA     s:11117
         0 005256   005267 710000 0                  TRA     s:11120
         0 005257   005301 710000 0                  TRA     s:11126
         0 005260   005301 710000 0                  TRA     s:11126

     2286    11116    3             CASE (KQSS_NDFR#);

     2287    11117    3               IF MBLK$->KQ$MBLK.MREQ ~= 0 THEN

  11117  0 005261   000010 236100                    LDQ     8,,PR0
         0 005262   000777 316003                    CANQ    511,DU
         0 005263   005301 600000 0                  TZE     s:11126

     2288    11118    3                CALL SC_CGSUPR;

  11118  0 005264   000000 713400 xsym               CLIMB   SC_CGSUPR
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:278  
         0 005265   000000 600000 xsid               climb   nvectors=         0
         0 005266   005301 710000 0                  TRA     s:11126

     2289    11119    3             CASE (KQSS_NMEM#);

     2290    11120    3               IF MBLK$->KQ$MBLK.MREQ >= 0 THEN CALL SC_CGSUPR;

  11120  0 005267   000010 236100                    LDQ     8,,PR0
         0 005270   000011 736000                    QLS     9
         0 005271   000033 732000                    QRS     27
         0 005272   000000 116003                    CMPQ    0,DU
         0 005273   005301 604000 0                  TMI     s:11126

  11120  0 005274   000000 713400 xsym               CLIMB   SC_CGSUPR
         0 005275   000000 600000 xsid               climb   nvectors=         0
         0 005276   005301 710000 0                  TRA     s:11126

     2291    11121    3             CASE (KQSS_Q4GC#,KQSS_IOIP#);

     2292    11122    3             CASE (ELSE);

     2293    11123    3               CALL SC_CGSUPR;

  11123  0 005277   000000 713400 xsym               CLIMB   SC_CGSUPR
         0 005300   000000 600000 xsid               climb   nvectors=         0

     2294    11124    3           END;

     2295    11125
     2296    11126    2         IF MBLK$->KQ$MBLK.USR = '0'B THEN ALTRETURN;

  11126  0 005301   200012 470500                    LDP0    MBLK$,,AUTO
         0 005302   000010 236100                    LDQ     8,,PR0
         0 005303   010000 316003                    CANQ    4096,DU
         0 005304   005307 601000 0                  TNZ     s:11127

  11126  0 005305   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:279  
         0 005306   000000 702211                    TSX2  ! 0,X1

     2297    11127    2         USR#=MBLK$->KQ$MBLK.USR#;

  11127  0 005307   000013 235100                    LDA     11,,PR0
         0 005310   000033 735000                    ALS     27
         0 005311   200043 755100                    STA     USR#,,AUTO

     2298    11128    2         MBLK$->KQ$MBLK.STA$=DBLK$;

  11128  0 005312   200020 236100                    LDQ     DBLK$,,AUTO
         0 005313   000013 756100                    STQ     11,,PR0

     2299    11129    2         ADDR(MBLK$->KQ$MBLK.STA$)->B$$UPARM.ERR=DDA;

  11129  0 005314   200022 236100                    LDQ     DDA,,AUTO
         0 005315   000014 736000                    QLS     12
         0 005316   000013 752104                    STCQ    11,'04'O,PR0

     2300    11130    2         CALL SSR$RUE (%SS_UQA,USR#);

  11130  0 005317   200043 631500                    EPPR1   USR#,,AUTO
         0 005320   200063 451500                    STP1    @M$+2,,AUTO
         0 005321   000032 236000 1                  LDQ     26
         0 005322   200062 756100                    STQ     @M$+1,,AUTO
         0 005323   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005324   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 005325   000000 701000 xent               TSX1    SSR$RUE
         0 005326   000000 011000                    NOP     0

     2301    11131    2         RETURN;

  11131  0 005327   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 005330   000001 702211                    TSX2  ! 1,X1

     2302    11132    2   END UNREG;
     2303    11133        /********************************************************
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:280  
     2304    11134        *********************************************************/
     2305    11135        /**/
     2306    11136        /*D* NAME:         REMOVES
     2307    11137             PURPOSE:      To remove a super MBLK from an MLH
     2308    11138             DESCRIPTION:  See REMOVE
     2309    11139        */
     2310    11140    1   REMOVES: PROC;

  11140  0 005331   200052 741300       REMOVES      STX1  ! T2$,,AUTO

     2311    11141        /**/
     2312    11142    3           DO INHIBIT;

     2313    11143    3           MLH$->KQ$MLH.SUPERCNT=MLH$->KQ$MLH.SUPERCNT-1;

  11143  0 005332   200024 470700                    LDP0  ! MLH$,,AUTO
         0 005333   000004 720300                    LXL0  ! 4,,PR0
         0 005334   777777 622210                    EAX2  ! -1,X0
         0 005335   000004 442300                    SXL2  ! 4,,PR0

     2314    11144    3           GOTO REM;

  11144  0 005336   005353 710200 0                  TRA   ! REM

     2315    11145    3           END;

  11145  0 005337   005341 710000 0                  TRA     s:11156

     2316    11146        /**/
     2317    11147        /*D* NAME:         REMOVE
     2318    11148             PURPOSE:      To remove an MBLK from an MLH
     2319    11149             DESCRIPTION:  MBLK$ is the one to remove.
     2320    11150                           P$ is ADDR(NIL) if MBLK$ is first in the list,
     2321    11151                           else is its predecessor
     2322    11152        */
     2323    11153    2   REMOVE: ENTRY;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:281  
  11153  0 005340   200052 741300       REMOVE       STX1  ! T2$,,AUTO

     2324    11154        /**/
     2325    11155    3           DO INHIBIT;

     2326    11156    3           MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT-1;

  11156  0 005341   200024 470700                    LDP0  ! MLH$,,AUTO
         0 005342   000001 336207                    LCQ   ! 1,DL
         0 005343   000005 056300                    ASQ   ! 5,,PR0

     2327    11157    3           IF Q = 0 THEN

  11157  0 005344   200025 235300                    LDA   ! Q,,AUTO
         0 005345   005351 601200 0                  TNZ   ! s:11159

     2328    11158    3            CG$->KQ$CG.STATS.CCMS=CG$->KQ$CG.STATS.CCMS-1;

  11158  0 005346   200013 471700                    LDP1  ! CG$,,AUTO
         0 005347   100172 056300                    ASQ   ! 122,,PR1
         0 005350   005353 710200 0                  TRA   ! REM

     2329    11159    3           ELSE CG$->KQ$CG.STATS.CCMQ=CG$->KQ$CG.STATS.CCMQ-1;

  11159  0 005351   200013 471700                    LDP1  ! CG$,,AUTO
         0 005352   100171 056300                    ASQ   ! 121,,PR1

  11157  0 005353                       REM          null
     2330    11160    3   REM:    ;
     2331    11161    3           IF P$ = ADDR(NIL) THEN

  11161  0 005353   200016 236300                    LDQ   ! P$,,AUTO
         0 005354   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 005355   005367 601200 0                  TNZ   ! s:11168

     2332    11162    4             DO;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:282  
     2333    11163    4             MLH$->KQ$MLH.HEAD$=MBLK$->KQ$MBLK.LNK$;

  11163  0 005356   200012 471700                    LDP1  ! MBLK$,,AUTO
         0 005357   100000 236300                    LDQ   ! 0,,PR1
         0 005360   000000 756300                    STQ   ! 0,,PR0

     2334    11164    4             IF MBLK$->KQ$MBLK.LNK$ = ADDR(NIL) THEN MLH$->KQ$MLH.TAIL$=ADDR(NIL);

  11164  0 005361   100000 236300                    LDQ   ! 0,,PR1
         0 005362   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 005363   005400 601200 0                  TNZ   ! s:11171

  11164  0 005364   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 005365   000001 756300                    STQ   ! 1,,PR0

     2335    11165    4             END;

  11165  0 005366   005400 710200 0                  TRA   ! s:11171

     2336    11166    3           ELSE
     2337    11167    4             DO;

     2338    11168    4             P$->KQ$MBLK.LNK$=MBLK$->KQ$MBLK.LNK$;

  11168  0 005367   200012 471700                    LDP1  ! MBLK$,,AUTO
         0 005370   100000 236300                    LDQ   ! 0,,PR1
         0 005371   200016 473700                    LDP3  ! P$,,AUTO
         0 005372   300000 756300                    STQ   ! 0,,PR3

     2339    11169    4             IF MBLK$->KQ$MBLK.LNK$ = ADDR(NIL) THEN MLH$->KQ$MLH.TAIL$=P$;

  11169  0 005373   100000 236300                    LDQ   ! 0,,PR1
         0 005374   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 005375   005400 601200 0                  TNZ   ! s:11171

  11169  0 005376   200016 236300                    LDQ   ! P$,,AUTO
         0 005377   000001 756300                    STQ   ! 1,,PR0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:283  

     2340    11170    4             END;

     2341    11171    3           RETURN;

  11171  0 005400   200052 221300                    LDX1  ! T2$,,AUTO
         0 005401   000001 702211                    TSX2  ! 1,X1

     2342    11172    3           END; /* Inhibit */

     2343    11173    2   END REMOVES;

  11173  0 005402   000001 702211                    TSX2  ! 1,X1

     2344    11174        /********************************************************
     2345    11175        *********************************************************/
     2346    11176        /**/
     2347    11177        /*D* NAME:         REMOVEI
     2348    11178             PURPOSE:      To remove an MBLK from an INSHD$ list
     2349    11179             DESCRIPTION:  MBLK$ points to the MBLK owning the list,
     2350    11180                           M$ points to the one to remove, P$ is ADDR(NIL)
     2351    11181                           if it's the first in the list and points to
     2352    11182                           its predecessor else.
     2353    11183        */
     2354    11184    1   REMOVEI: PROC (P$,M$);

  11184  0 005403   200052 741300       REMOVEI      STX1  ! T2$,,AUTO

     2355    11185        /**/
     2356    11186    2   DCL P$ PTR;
     2357    11187    2   DCL M$ PTR;
     2358    11188        /**/
     2359    11189    3           DO INHIBIT;

     2360    11190    3           IF P$ = ADDR(NIL) THEN

  11190  0 005404   200053 470700                    LDP0  ! @P$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:284  
         0 005405   000000 236300                    LDQ   ! 0,,PR0
         0 005406   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 005407   005416 601200 0                  TNZ   ! s:11193

     2361    11191    3            MBLK$->KQ$MBLK.INSHD$=M$->KQ$MBLK.LNK$;

  11191  0 005410   200054 471700                    LDP1  ! @M$,,AUTO
         0 005411   100000 473700                    LDP3  ! 0,,PR1
         0 005412   300000 236300                    LDQ   ! 0,,PR3
         0 005413   200012 474700                    LDP4  ! MBLK$,,AUTO
         0 005414   400012 756300                    STQ   ! 10,,PR4
         0 005415   005423 710200 0                  TRA   ! s:11194

     2362    11192    3           ELSE
     2363    11193    3            P$->KQ$MBLK.LNK$=M$->KQ$MBLK.LNK$;

  11193  0 005416   000000 471700                    LDP1  ! 0,,PR0
         0 005417   200054 473700                    LDP3  ! @M$,,AUTO
         0 005420   300000 474700                    LDP4  ! 0,,PR3
         0 005421   400000 236300                    LDQ   ! 0,,PR4
         0 005422   100000 756300                    STQ   ! 0,,PR1

     2364    11194    3           MLH$->KQ$MLH.COUNT=MLH$->KQ$MLH.COUNT-1;

  11194  0 005423   200024 471700                    LDP1  ! MLH$,,AUTO
         0 005424   000001 336207                    LCQ   ! 1,DL
         0 005425   100005 056300                    ASQ   ! 5,,PR1

     2365    11195    3           IF Q = 0 THEN

  11195  0 005426   200025 235300                    LDA   ! Q,,AUTO
         0 005427   005433 601200 0                  TNZ   ! s:11197

     2366    11196    3            CG$->KQ$CG.STATS.CCMS=CG$->KQ$CG.STATS.CCMS-1;

  11196  0 005430   200013 473700                    LDP3  ! CG$,,AUTO
         0 005431   300172 056300                    ASQ   ! 122,,PR3
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:285  
         0 005432   005435 710200 0                  TRA   ! s:11198

     2367    11197    3           ELSE CG$->KQ$CG.STATS.CCMQ=CG$->KQ$CG.STATS.CCMQ-1;

  11197  0 005433   200013 473700                    LDP3  ! CG$,,AUTO
         0 005434   300171 056300                    ASQ   ! 121,,PR3

     2368    11198    3           RETURN;

  11198  0 005435   200052 221300                    LDX1  ! T2$,,AUTO
         0 005436   000001 702211                    TSX2  ! 1,X1

     2369    11199    3           END; /* Inhibit */

     2370    11200    2   END REMOVEI;

  11200  0 005437   000001 702211                    TSX2  ! 1,X1

     2371    11201        /********************************************************
     2372    11202        *********************************************************/
     2373    11203        /**/
     2374    11204        /*D* NAME:         GETPRED
     2375    11205             PURPOSE:      To find the pred needed by REMOVE
     2376    11206        */
     2377    11207    1   GETPRED: PROC;

  11207  0 005440   200050 741300       GETPRED      STX1  ! H$,,AUTO

     2378    11208    2         P$=ADDR(NIL);

  11208  0 005441   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 005442   200016 756100                    STQ     P$,,AUTO

     2379    11209    2         IF MBLK$=MLH$->KQ$MLH.HEAD$ THEN RETURN;

  11209  0 005443   200024 470500                    LDP0    MLH$,,AUTO
         0 005444   200012 236100                    LDQ     MBLK$,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:286  
         0 005445   000000 116100                    CMPQ    0,,PR0
         0 005446   005450 601000 0                  TNZ     s:11210

  11209  0 005447   000001 702211                    TSX2  ! 1,X1

     2380    11210    2         P$=MLH$->KQ$MLH.HEAD$;

  11210  0 005450   000000 236100                    LDQ     0,,PR0
         0 005451   200016 756100                    STQ     P$,,AUTO

     2381    11211    3           DO FOREVER;

     2382    11212    3           IF P$->KQ$MBLK.LNK$=MBLK$ THEN RETURN;

  11212  0 005452   200016 470500                    LDP0    P$,,AUTO
         0 005453   000000 236100                    LDQ     0,,PR0
         0 005454   200012 116100                    CMPQ    MBLK$,,AUTO
         0 005455   005460 601000 0                  TNZ     s:11213

  11212  0 005456   200050 221300                    LDX1  ! H$,,AUTO
         0 005457   000001 702211                    TSX2  ! 1,X1

     2383    11213    3           P$=P$->KQ$MBLK.LNK$;

  11213  0 005460   200016 756100                    STQ     P$,,AUTO

     2384    11214    3           END;

  11214  0 005461   005452 710000 0                  TRA     s:11212

     2385    11215    2   END GETPRED;
     2386    11216        /********************************************************
     2387    11217        *********************************************************/
     2388    11218        /**/
     2389    11219        /*D* NAME:         CHECKVFC
     2390    11220             PURPOSE:      To determine if this MBLK contains
     2391    11221                           a VFC char,  Only valid for terminals.
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:287  
     2392    11222                           If so and this is a DCB or an FPRG, It deletes
     2393    11223                           the message and ALTRETURNs with MBLK$ pointing
     2394    11224                           at the next message to be checked.
     2395    11225        */
     2396    11226    1   CHECKVFC: PROC ALTRET;

  11226  0 005462   200042 741300       CHECKVFC     STX1  ! TCOUNT+2,,AUTO

     2397    11227
     2398    11228    2   DCL  ENT BIT (1) ALIGNED;
     2399    11229
     2400    11230    2         ENT = '0'B;

  11230  0 005463   200043 450100                    STZ     ENT,,AUTO

     2401    11231    2         GOTO CHECK;

  11231  0 005464   005470 710000 0                  TRA     CHECK

     2402    11232    2   CHECKVFC1: ENTRY ALTRET;

  11232  0 005465   200042 741300       CHECKVFC1    STX1  ! TCOUNT+2,,AUTO

     2403    11233    2         ENT = '1'B;

  11233  0 005466   400000 236003                    LDQ     -131072,DU
         0 005467   200043 756100                    STQ     ENT,,AUTO

  11233  0 005470                       CHECK        null
     2404    11234    2   CHECK: ;
     2405    11235    2         IF (MBLK$->KQ$NRMLMBLK.DVE.VFC >  %VFC_SLPP) OR

  11235  0 005470   200012 470500                    LDP0    MBLK$,,AUTO
         0 005471   000010 236100                    LDQ     8,,PR0
         0 005472   777000 376007                    ANQ     -512,DL
         0 005473   031000 116007                    CMPQ    12800,DL
         0 005474   005476 600000 0                  TZE     CHECK+6
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:288  
         0 005475   005502 603000 0                  TRC     s:11237
         0 005476   000010 236100                    LDQ     8,,PR0
         0 005477   777000 376007                    ANQ     -512,DL
         0 005500   021000 116007                    CMPQ    8704,DL
         0 005501   005503 603000 0                  TRC     s:11242

     2406    11236    2         (MBLK$->KQ$NRMLMBLK.DVE.VFC <  %VFC_OTB)
     2407    11237    2         THEN RETURN;

  11237  0 005502   000001 702211                    TSX2  ! 1,X1

     2408    11238              /*  It is a SET VFC MBLK check to see if it is a DCB */
     2409    11239
     2410    11240              /* If there is no LDCT$, the station is *GORGO and the message
     2411    11241                 should be removed.                                         */
     2412    11242    2         IF (STA$->KQ$STA.LDCT$ = ADDR(NIL)) THEN GOTO DEL;

  11242  0 005503   200010 471500                    LDP1    STA$,,AUTO
         0 005504   100010 236100                    LDQ     8,,PR1
         0 005505   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 005506   005524 600000 0                  TZE     DEL

     2413    11243
     2414    11244              /* If the read is from a CGTRM or KEYIN  let it pass */
     2415    11245    2         IF (STA$->KQ$STA.LDCT$->NK$LDCT.USER = JG_KEYIN#) OR

  11245  0 005507   100010 473500                    LDP3    8,,PR1
         0 005510   300007 236100                    LDQ     7,,PR3
         0 005511   000777 376003                    ANQ     511,DU
         0 005512   000002 116003                    CMPQ    2,DU
         0 005513   005520 600000 0                  TZE     s:11247
         0 005514   300006 236100                    LDQ     6,,PR3
         0 005515   000017 376007                    ANQ     15,DL
         0 005516   000002 116007                    CMPQ    2,DL
         0 005517   005521 601000 0                  TNZ     s:11250

     2416    11246    2         (STA$->KQ$STA.LDCT$->NK$LDCT.RESCOD = NK_CGTRM)
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:289  
     2417    11247    2         THEN RETURN;

  11247  0 005520   000001 702211                    TSX2  ! 1,X1

     2418    11248
     2419    11249              /* Funny message is bound for a DCB or an FPRG, delete it. */
     2420    11250    2         GOTO DEL;

  11250  0 005521   005524 710000 0                  TRA     DEL

     2421    11251    2   DELMSG: ENTRY ALTRET;    /* Always  ALTRETURNS */

  11251  0 005522   200042 741300       DELMSG       STX1  ! TCOUNT+2,,AUTO

     2422    11252    2         ENT = '0'B;

  11252  0 005523   200043 450100                    STZ     ENT,,AUTO

  11252  0 005524                       DEL          null
     2423    11253    2   DEL:  ;
     2424    11254              /* Message is bad.  Must Be Removed and Deleted */
     2425    11255    2         IF (NOT ENT) THEN CALL REMOVE;

  11255  0 005524   200043 234100                    SZN     ENT,,AUTO
         0 005525   005530 604000 0                  TMI     s:11256

  11255  0 005526   005340 701000 0                  TSX1    REMOVE
         0 005527   000000 011000                    NOP     0

     2426    11256    2         CALL KQU$DELMSG(CG$->KQ$CG,MBLK$->KQ$MBLK);

  11256  0 005530   200012 236100                    LDQ     MBLK$,,AUTO
         0 005531   200013 235100                    LDA     CG$,,AUTO
         0 005532   200062 757100                    STAQ    @M$+1,,AUTO
         0 005533   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005534   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 005535   000000 701000 xent               TSX1    KQU$DELMSG
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:290  
         0 005536   000000 011000                    NOP     0

     2427    11257    2         IF P$ = ADDR(NIL) THEN MBLK$ = MLH$->KQ$MLH.HEAD$;

  11257  0 005537   200016 236100                    LDQ     P$,,AUTO
         0 005540   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 005541   005546 601000 0                  TNZ     s:11258

  11257  0 005542   200024 470500                    LDP0    MLH$,,AUTO
         0 005543   000000 236100                    LDQ     0,,PR0
         0 005544   200012 756100                    STQ     MBLK$,,AUTO
         0 005545   005551 710000 0                  TRA     s:11260

     2428    11258    2         ELSE MBLK$ = P$->KQ$MBLK.LNK$;

  11258  0 005546   200016 470500                    LDP0    P$,,AUTO
         0 005547   000000 236100                    LDQ     0,,PR0
         0 005550   200012 756100                    STQ     MBLK$,,AUTO

     2429    11259
     2430    11260    2         ALTRETURN;

  11260  0 005551   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 005552   000000 702211                    TSX2  ! 0,X1

     2431    11261    2   END CHECKVFC;
     2432    11262        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:291  
     2433    11263        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:292  
     2434    11264        /**/
     2435    11265        /**/
     2436    11266        /*F* NAME:         KQL$FCONT
     2437    11267             PURPOSE:      To continue a deferred fetch of a super MBLK's DBLK
     2438    11268             CALL:         KQL$FCONT (KQ$DFRPARM)
     2439    11269             DESCRIPTION:  The request for a super MBLK has been
     2440    11270                           completed.
     2441    11271        */
     2442    11272    1   KQL$FCONT: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */

  11272  0 005553   000000 700200 xent  KQL$FCONT    TSX0  ! X66_AUTO_3
         0 005554   000072 000003                    ZERO    58,3

     2443    11273        /**/
     2444    11274    1         DFRP$=ADDR(PARM);

  11274  0 005555   200003 236100                    LDQ     @PARM,,AUTO
         0 005556   200017 756100                    STQ     DFRP$,,AUTO

     2445    11275    1         MBLK$=DFRP$->KQ$DFRPARM.INFO$;

  11275  0 005557   200017 470500                    LDP0    DFRP$,,AUTO
         0 005560   000000 236100                    LDQ     0,,PR0
         0 005561   200012 756100                    STQ     MBLK$,,AUTO

     2446    11276    1         DBLK$=DFRP$->KQ$DFRPARM.DBLK$;

  11276  0 005562   000001 236100                    LDQ     1,,PR0
         0 005563   200020 756100                    STQ     DBLK$,,AUTO

     2447    11277    1         DDA=DFRP$->KQ$DFRPARM.ERR;

  11277  0 005564   000004 235100                    LDA     4,,PR0
         0 005565   200022 755100                    STA     DDA,,AUTO

     2448    11278    1         IF MBLK$->KQ$MBLK.STATE ~= KQSS_IOIP# THEN CALL SC_CGSUPR;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:293  
  11278  0 005566   200012 471500                    LDP1    MBLK$,,AUTO
         0 005567   100010 236100                    LDQ     8,,PR1
         0 005570   007000 376003                    ANQ     3584,DU
         0 005571   003000 116003                    CMPQ    1536,DU
         0 005572   005575 600000 0                  TZE     s:11279

  11278  0 005573   000000 713400 xsym               CLIMB   SC_CGSUPR
         0 005574   000000 600000 xsid               climb   nvectors=         0

     2449    11279    1         CALL UNREG ALTRET(FCONT0);

  11279  0 005575   005244 701000 0                  TSX1    UNREG
         0 005576   005600 702000 0                  TSX2    FCONT0

     2450    11280    1         RETURN;

  11280  0 005577   000000 702200 xent               TSX2  ! X66_ARET

  11278  0 005600                       FCONT0       null
     2451    11281    1   FCONT0:;
     2452    11282    1         STA$=MBLK$->KQ$MBLK.STA$;

  11282  0 005600   200012 470500                    LDP0    MBLK$,,AUTO
         0 005601   000013 236100                    LDQ     11,,PR0
         0 005602   200010 756100                    STQ     STA$,,AUTO

     2453    11283    1         MLH$=ADDR(STA$->KQ$STA.MLH);

  11283  0 005603   000034 036003                    ADLQ    28,DU
         0 005604   200024 756100                    STQ     MLH$,,AUTO

     2454    11284    1         CG$=STA$->KQ$STA.CG$;

  11284  0 005605   200010 471500                    LDP1    STA$,,AUTO
         0 005606   100007 236100                    LDQ     7,,PR1
         0 005607   200013 756100                    STQ     CG$,,AUTO

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:294  
     2455    11285    1         RBLK$=STA$->KQ$STA.RBLK$;

  11285  0 005610   100011 236100                    LDQ     9,,PR1
         0 005611   200011 756100                    STQ     RBLK$,,AUTO

     2456    11286    1         KEY1L=RBLK$->KQ$RBLK.KEY1L;

  11286  0 005612   200011 473500                    LDP3    RBLK$,,AUTO
         0 005613   300001 236100                    LDQ     1,,PR3
         0 005614   000004 772000                    QRL     4
         0 005615   000017 376007                    ANQ     15,DL
         0 005616   000000 620006                    EAX0    0,QL
         0 005617   200014 740100                    STX0    KEY1L,,AUTO

     2457    11287    1         KEY2L=RBLK$->KQ$RBLK.KEY2L;

  11287  0 005620   300001 721100                    LXL1    1,,PR3
         0 005621   000017 361003                    ANX1    15,DU
         0 005622   200015 741100                    STX1    KEY2L,,AUTO

     2458    11288    1         TERM=1;

  11288  0 005623   000001 235007                    LDA     1,DL
         0 005624   200026 755100                    STA     TERM,,AUTO

     2459    11289    1         Q=0;

  11289  0 005625   200025 450100                    STZ     Q,,AUTO

     2460    11290    1         FWCG=0;

  11290  0 005626   200037 450100                    STZ     FWP$,,AUTO

     2461    11291    1         TCOUNT=STA$->KQ$STA.TCOUNT;

  11291  0 005627   100030 235100                    LDA     24,,PR1
         0 005630   200040 755100                    STA     TCOUNT,,AUTO
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:295  

     2462    11292    1         CALL ENDREG ALTRET(FCONT1 /* Station disconnecting */);

  11292  0 005631   005113 701000 0                  TSX1    ENDREG
         0 005632   005634 702000 0                  TSX2    FCONT1

     2463    11293    1         GOTO SDFIND01;

  11293  0 005633   001520 710000 0                  TRA     SDFIND01

  11291  0 005634                       FCONT1       null
     2464    11294    1   FCONT1:;
     2465    11295    1         CALL UNLOCK;

  11295  0 005634   004133 701000 0                  TSX1    UNLOCK
         0 005635   000000 011000                    NOP     0

     2466    11296    1         CALL RELMB;

  11296  0 005636   004311 701000 0                  TSX1    RELMB
         0 005637   000000 011000                    NOP     0

     2467    11297    1         RBLK$->KQ$RBLK.ERR=KQGE_DISC#;

  11297  0 005640   200011 470500                    LDP0    RBLK$,,AUTO
         0 005641   000001 236100                    LDQ     1,,PR0
         0 005642   000005 376000 1                  ANQ     5
         0 005643   006000 276007                    ORQ     3072,DL
         0 005644   000001 756100                    STQ     1,,PR0

     2468    11298    1         GOTO NOTFOUND;

  11298  0 005645   001620 710000 0                  TRA     NOTFOUND

     2469    11299        /**/
     2470    11300        /*F* NAME:         KQL$SRQ
     2471    11301             PURPOSE:      To re-try a SRCHSUPER which failed due to lack
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:296  
     2472    11302                           of something.
     2473    11303             CALL:         KQL$SRQ (KQ$MBLK)
     2474    11304             DESCRIPTION:  Called from KCC$CLOCK, KQM$MM2, KQL$SQUISH
     2475    11305                           We dive back into SRCHSUPER and try the fetch
     2476    11306                           again if terminal, else un-REG the user.
     2477    11307        */
     2478    11308    1   KQL$SRQ: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */

  11308  0 005646   000000 700200 xent  KQL$SRQ      TSX0  ! X66_AUTO_3
         0 005647   000072 000003                    ZERO    58,3

     2479    11309        /**/
     2480    11310    1         MBLK$=ADDR(PARM);

  11310  0 005650   200003 236100                    LDQ     @PARM,,AUTO
         0 005651   200012 756100                    STQ     MBLK$,,AUTO

     2481    11311    1         DBLK$=ADDR(NIL);

  11311  0 005652   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 005653   200020 756100                    STQ     DBLK$,,AUTO

     2482    11312    1         CALL UNREG ALTRET(FCONT0);

  11312  0 005654   005244 701000 0                  TSX1    UNREG
         0 005655   005600 702000 0                  TSX2    FCONT0

     2483    11313    1         RETURN;

  11313  0 005656   000000 702200 xent               TSX2  ! X66_ARET

     2484    11314        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:297  
     2485    11315        /**/
     2486    11316        /*F* NAME:         KQL$DDFDUN
     2487    11317             PURPOSE:      To reset READ-IN-PROGRESS on a station
     2488    11318             CALL:         KQL$DDFDUN (KQ$STA);
     2489    11319             INPUT:        Station gate locked
     2490    11320             OUTPUT:       Station gate unlocked
     2491    11321             DESCRIPTION:  Releases the station MLH, processing the
     2492    11322                           DELAY$ list if required.
     2493    11323
     2494    11324                           Thus a reader calls KQL$DDFIND and if it fails,
     2495    11325                           he can muck around for as long as he wants, then
     2496    11326                           lock the station gate, set his read to PENDing,
     2497    11327                           and call KQL$DDFDUN and be sure of catching any
     2498    11328                           messages written to him since he started the
     2499    11329                           read process.
     2500    11330        */
     2501    11331    1   KQL$DDFDUN: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */

  11331  0 005657   000000 700200 xent  KQL$DDFDUN   TSX0  ! X66_AUTO_3
         0 005660   000072 000003                    ZERO    58,3

     2502    11332        /**/
     2503    11333    1         STA$=ADDR(PARM);

  11333  0 005661   200003 236100                    LDQ     @PARM,,AUTO
         0 005662   200010 756100                    STQ     STA$,,AUTO

     2504    11334    1         CG$=STA$->KQ$STA.CG$;

  11334  0 005663   200010 470500                    LDP0    STA$,,AUTO
         0 005664   000007 236100                    LDQ     7,,PR0
         0 005665   200013 756100                    STQ     CG$,,AUTO

     2505    11335    1         CALL DXFDUN;

  11335  0 005666   005703 701000 0                  TSX1    DXFDUN
         0 005667   000000 011000                    NOP     0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:298  

     2506    11336    1         RETURN;

  11336  0 005670   000000 702200 xent               TSX2  ! X66_ARET

  11334  0 005671                       DDFDUNL      null
     2507    11337        /**/
     2508    11338        /*F* NAME:         KQL$DDFDUNL
     2509    11339             PURPOSE:      To reset read-in-progress on a station
     2510    11340             DESCRIPTION:  Same as KQL$DDFDUN but gate isn't locked coming
     2511    11341                           in
     2512    11342        */
     2513    11343    1   DDFDUNL:;
     2514    11344              %LOCK (G=STA$->KQ$STA.GATE);

  11345  0 005671   200010 236100                    LDQ     STA$,,AUTO
         0 005672   000016 036003                    ADLQ    14,DU
         0 005673   200062 756100                    STQ     @M$+1,,AUTO
         0 005674   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005675   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005676   000000 701000 xent               TSX1    HFC$LOCK
         0 005677   000000 011000                    NOP     0

     2515    11347    1         CALL DXFDUN;

  11347  0 005700   005703 701000 0                  TSX1    DXFDUN
         0 005701   000000 011000                    NOP     0

     2516    11348    1         RETURN;

  11348  0 005702   000000 702200 xent               TSX2  ! X66_ARET

     2517    11349        /**/
     2518    11350    1   DXFDUN: PROC;

  11350  0 005703   200042 741300       DXFDUN       STX1  ! TCOUNT+2,,AUTO

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:299  
     2519    11351        /**/
     2520    11352    2   DCL GARB UBIN;
     2521    11353    2   DCL RCVR UBIN;
     2522    11354    2   DCL D$ PTR;
     2523    11355        /**/
     2524    11356    2         RCVR=0;

  11356  0 005704   200044 450100                    STZ     RCVR,,AUTO

     2525    11357    2         GARB=0;

  11357  0 005705   200043 450100                    STZ     GARB,,AUTO

     2526    11358    2   MRG:  MLH$ = ADDR(STA$->KQ$STA.MLH);

  11358  0 005706   200010 236100       MRG          LDQ     STA$,,AUTO
         0 005707   000034 036003                    ADLQ    28,DU
         0 005710   200024 756100                    STQ     MLH$,,AUTO

     2527    11359    2         IF  MLH$->KQ$MLH.GACT

  11359  0 005711   200024 470500                    LDP0    MLH$,,AUTO
         0 005712   000003 236100                    LDQ     3,,PR0
         0 005713   000040 316003                    CANQ    32,DU
         0 005714   005717 600000 0                  TZE     s:11361
         0 005715   200043 235100                    LDA     GARB,,AUTO
         0 005716   006034 600000 0                  TZE     MRGDUN

     2528    11360    2         AND GARB = 0 THEN GOTO MRGDUN;
     2529    11361    2         CALL KQW$XMITSELF (STA$) ALTRET(MRGDUN);

  11361  0 005717   200010 631500                    EPPR1   STA$,,AUTO
         0 005720   200062 451500                    STP1    @M$+1,,AUTO
         0 005721   200062 630500                    EPPR0   @M$+1,,AUTO
         0 005722   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 005723   000000 701000 xent               TSX1    KQW$XMITSELF
         0 005724   006034 702000 0                  TSX2    MRGDUN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:300  

     2530    11362    2         IF ADDR(STA$->KQ$STA.MLH.DELAYDQ$)->KQ$DPTR.X.FLGS

  11362  0 005725   200010 470500                    LDP0    STA$,,AUTO
         0 005726   000042 236100                    LDQ     34,,PR0
         0 005727   700000 316007                    CANQ    -32768,DL
         0 005730   005741 600000 0                  TZE     s:11369

     2531    11363    3         THEN DO;

     2532    11364    3           CALL DELCONT (MLH$->KQ$MLH);

  11364  0 005731   200024 236100                    LDQ     MLH$,,AUTO
         0 005732   200047 756100                    STQ     CTLBLK$,,AUTO
         0 005733   000114 701000 0                  TSX1    DELCONT
         0 005734   000000 011000                    NOP     0

     2533    11365    3           ADDR(STA$->KQ$STA.MLH.DELAYDQ$)->KQ$DPTR.X.FLGS='0'B;

  11365  0 005735   200010 470500                    LDP0    STA$,,AUTO
         0 005736   000000 236000 1                  LDQ     0
         0 005737   000042 356100                    ANSQ    34,,PR0

     2534    11366    3           GOTO MRG;

  11366  0 005740   005706 710000 0                  TRA     MRG

     2535    11367    3           END;
     2536    11368        /**/
     2537    11369    2         IF ADDR(STA$->KQ$STA.MLH.DELAYDQ$)->KQ$DPTR.X.CODE ~= KQRA_RSTA# THEN CALL
             11369                  SC_BCGRRC;

  11369  0 005741   000042 236100                    LDQ     34,,PR0
         0 005742   070000 376007                    ANQ     28672,DL
         0 005743   020000 116007                    CMPQ    8192,DL
         0 005744   005747 600000 0                  TZE     s:11371

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:301  
  11369  0 005745   000000 713400 xsym               CLIMB   SC_BCGRRC
         0 005746   000000 600000 xsid               climb   nvectors=         0

     2538    11370
     2539    11371    2         IF RCVR = 1                    /* Ignore delayed reads during reopen */

  11371  0 005747   200044 235100                    LDA     RCVR,,AUTO
         0 005750   000001 115007                    CMPA    1,DL
         0 005751   005756 601000 0                  TNZ     s:11376

     2540    11372    3         THEN DO;

     2541    11373    3           STA$->KQ$STA.MLH.DELAYDQ$=ADDR(NIL);

  11373  0 005752   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 005753   200010 470500                    LDP0    STA$,,AUTO
         0 005754   000042 756100                    STQ     34,,PR0

     2542    11374    3           GOTO MRG;

  11374  0 005755   005706 710000 0                  TRA     MRG

     2543    11375    3           END;
     2544    11376    2         MLH$->KQ$MLH.BUSY.RIP='1'B;

  11376  0 005756   200024 470500                    LDP0    MLH$,,AUTO
         0 005757   000400 236003                    LDQ     256,DU
         0 005760   000003 256100                    ORSQ    3,,PR0

     2545    11377    2         IF GARB ~= 0 THEN

  11377  0 005761   200043 235100                    LDA     GARB,,AUTO
         0 005762   005767 600000 0                  TZE     s:11382

     2546    11378    3           DO;

     2547    11379    3           MLH$->KQ$MLH.BUSY.GIP='0'B;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:302  

  11379  0 005763   000033 236000 1                  LDQ     27
         0 005764   000003 356100                    ANSQ    3,,PR0

     2548    11380    3           MLH$->KQ$MLH.GACT='0'B;

  11380  0 005765   000034 236000 1                  LDQ     28
         0 005766   000003 356100                    ANSQ    3,,PR0

     2549    11381    3           END;

     2550    11382    2         D$=STA$->KQ$STA.MLH.DELAYDQ$;

  11382  0 005767   200010 471500                    LDP1    STA$,,AUTO
         0 005770   100042 236100                    LDQ     34,,PR1
         0 005771   200045 756100                    STQ     D$,,AUTO

     2551    11383    2         ADDR(D$)->KQ$DPTR.X='0'B;

  11383  0 005772   000000 236003                    LDQ     0,DU
         0 005773   200045 752104                    STCQ    D$,'04'O,AUTO

     2552    11384    2         MLH$->KQ$MLH.RUSR#=D$->KQ$STA.USR#;

  11384  0 005774   200045 473500                    LDP3    D$,,AUTO
         0 005775   300020 236100                    LDQ     16,,PR3
         0 005776   000022 736000                    QLS     18
         0 005777   000003 552140                    STBQ    3,'40'O,PR0

     2553    11385    2         IF MLH$->KQ$MLH.RUSR# = 0 THEN

  11385  0 006000   000003 236100                    LDQ     3,,PR0
         0 006001   777000 316003                    CANQ    -512,DU
         0 006002   006010 601000 0                  TNZ     s:11390

     2554    11386    2          CALL KQL$DTCONT (STA$->KQ$STA); /* unlocks gate */

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:303  
  11386  0 006003   200010 630500                    EPPR0   STA$,,AUTO
         0 006004   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 006005   000725 701000 0                  TSX1    s:9434
         0 006006   000000 011000                    NOP     0
         0 006007   006027 710000 0                  TRA     s:11394

     2555    11387    2         ELSE
     2556    11388    3           DO;

     2557    11389                %UNLOCK (G=STA$->KQ$STA.GATE);

  11390  0 006010   200010 236100                    LDQ     STA$,,AUTO
         0 006011   000016 036003                    ADLQ    14,DU
         0 006012   200062 756100                    STQ     @M$+1,,AUTO
         0 006013   200062 630500                    EPPR0   @M$+1,,AUTO
         0 006014   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 006015   000000 701000 xent               TSX1    HFC$UNLOCK
         0 006016   000000 011000                    NOP     0

     2558    11392    3           CALL SSR$RUE (%SS_UQA,MLH$->KQ$MLH.RUSR#);

  11392  0 006017   200024 236100                    LDQ     MLH$,,AUTO
         0 006020   000003 036003                    ADLQ    3,DU
         0 006021   000032 235000 1                  LDA     26
         0 006022   200062 757100                    STAQ    @M$+1,,AUTO
         0 006023   200062 630500                    EPPR0   @M$+1,,AUTO
         0 006024   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 006025   000000 701000 xent               TSX1    SSR$RUE
         0 006026   000000 011000                    NOP     0

     2559    11393    3           END;

     2560    11394    2         STA$->KQ$STA.MLH.DELAYDQ$=ADDR(NIL);

  11394  0 006027   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 006030   200010 470500                    LDP0    STA$,,AUTO
         0 006031   000042 756100                    STQ     34,,PR0
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:304  

     2561    11395    2         RETURN;

  11395  0 006032   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 006033   000001 702211                    TSX2  ! 1,X1

  11394  0 006034                       MRGDUN       null
     2562    11396    2   MRGDUN:;
     2563    11397    2         IF GARB = 0 THEN

  11397  0 006034   200043 235100                    LDA     GARB,,AUTO
         0 006035   006065 601000 0                  TNZ     s:11413

     2564    11398    3           DO;

     2565    11399    3           MLH$->KQ$MLH.BUSY.RIP='0'B;

  11399  0 006036   200024 470500                    LDP0    MLH$,,AUTO
         0 006037   000006 236000 1                  LDQ     6
         0 006040   000003 356100                    ANSQ    3,,PR0

     2566    11400    3           MLH$->KQ$MLH.RUSR#=0;

  11400  0 006041   000000 236003                    LDQ     0,DU
         0 006042   000003 552140                    STBQ    3,'40'O,PR0

     2567    11401    3           IF MLH$->KQ$MLH.GACT THEN

  11401  0 006043   000003 236100                    LDQ     3,,PR0
         0 006044   000040 316003                    CANQ    32,DU
         0 006045   006072 600000 0                  TZE     s:11417

     2568    11402    4             DO;

     2569    11403    4             MLH$->KQ$MLH.BUSY.GIP='1'B;

  11403  0 006046   000200 236003                    LDQ     128,DU
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:305  
         0 006047   000003 256100                    ORSQ    3,,PR0

     2570    11404                  %UNLOCK (G=STA$->KQ$STA.GATE);

  11405  0 006050   200010 236100                    LDQ     STA$,,AUTO
         0 006051   000016 036003                    ADLQ    14,DU
         0 006052   200062 756100                    STQ     @M$+1,,AUTO
         0 006053   200062 630500                    EPPR0   @M$+1,,AUTO
         0 006054   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 006055   000000 701000 xent               TSX1    HFC$UNLOCK
         0 006056   000000 011000                    NOP     0

     2571    11407    4             CALL KQS$CSQUISH (CG$->KQ$CG);

  11407  0 006057   200013 630500                    EPPR0   CG$,,AUTO
         0 006060   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 006061   000000 701000 xent               TSX1    KQS$CSQUISH
         0 006062   000000 011000                    NOP     0

     2572    11408    4             RETURN;

  11408  0 006063   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 006064   000001 702211                    TSX2  ! 1,X1

     2573    11409    4             END;
     2574    11410    3           END;
     2575    11411    2         ELSE
     2576    11412    3           DO;

     2577    11413    3           MLH$->KQ$MLH.BUSY.GIP='0'B;

  11413  0 006065   200024 470500                    LDP0    MLH$,,AUTO
         0 006066   000033 236000 1                  LDQ     27
         0 006067   000003 356100                    ANSQ    3,,PR0

     2578    11414    3           MLH$->KQ$MLH.GACT='0'B;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:306  
  11414  0 006070   000034 236000 1                  LDQ     28
         0 006071   000003 356100                    ANSQ    3,,PR0

     2579    11415    3           END;

     2580    11416              %UNLOCK (G=STA$->KQ$STA.GATE);

  11417  0 006072   200010 236100                    LDQ     STA$,,AUTO
         0 006073   000016 036003                    ADLQ    14,DU
         0 006074   200062 756100                    STQ     @M$+1,,AUTO
         0 006075   200062 630500                    EPPR0   @M$+1,,AUTO
         0 006076   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 006077   000000 701000 xent               TSX1    HFC$UNLOCK
         0 006100   000000 011000                    NOP     0

     2581    11419    2         RETURN;

  11419  0 006101   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 006102   000001 702211                    TSX2  ! 1,X1

     2582    11420        /**/
     2583    11421    2   DGDUN: ENTRY;

  11421  0 006103   200042 741300       DGDUN        STX1  ! TCOUNT+2,,AUTO

     2584    11422        /**/
     2585    11423    2         RCVR=0;

  11423  0 006104   200044 450100                    STZ     RCVR,,AUTO

     2586    11424    2         GARB=1;

  11424  0 006105   000001 235007                    LDA     1,DL
         0 006106   200043 755100                    STA     GARB,,AUTO

     2587    11425    2         GOTO MRG;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:307  
  11425  0 006107   005706 710000 0                  TRA     MRG

     2588    11426        /**/
     2589    11427    2   DGDUNR: ENTRY;

  11427  0 006110   200042 741300       DGDUNR       STX1  ! TCOUNT+2,,AUTO

     2590    11428        /**/
     2591    11429    2         GARB=1;

  11429  0 006111   000001 235007                    LDA     1,DL
         0 006112   200043 755100                    STA     GARB,,AUTO

     2592    11430    2         RCVR=1;

  11430  0 006113   200044 755100                    STA     RCVR,,AUTO

     2593    11431    2         GOTO MRG;

  11431  0 006114   005706 710000 0                  TRA     MRG

     2594    11432    2   END DXFDUN;
     2595    11433        /**/
     2596    11434        /*F* NAME:         KQL$GARBDUNS
     2597    11435             PURPOSE:      To un-busy a station MLH after garbage
     2598    11436                           collection
     2599    11437             CALL:         KQL$GARBDUNS (KQ$STA)
     2600    11438             INPUT:        Station gate locked
     2601    11439             OUTPUT:       Station gate unlocked.
     2602    11440             DESCRIPTION:  Does a DDFDUN-like process of merging the
     2603    11441                           delay list in, and then exits after turning
     2604    11442                           off BUSY.GIP, and GACT.  Assumes RQGC and RQMEM
     2605    11443                           have already been checked for by the
     2606    11444                           garbage collector. */
     2607    11445    1   KQL$GARBDUNS: ENTRY (PARM) ALTRET; /* Doesn't ALTRET */

  11445  0 006115   000000 700200 xent  KQL$GARBDUNS TSX0  ! X66_AUTO_3
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:308  
         0 006116   000072 000003                    ZERO    58,3

     2608    11446        /**/
     2609    11447    1         STA$=ADDR(PARM);

  11447  0 006117   200003 236100                    LDQ     @PARM,,AUTO
         0 006120   200010 756100                    STQ     STA$,,AUTO

     2610    11448    1         CG$=STA$->KQ$STA.CG$;

  11448  0 006121   200010 470500                    LDP0    STA$,,AUTO
         0 006122   000007 236100                    LDQ     7,,PR0
         0 006123   200013 756100                    STQ     CG$,,AUTO

     2611    11449    1         CALL DGDUN;

  11449  0 006124   006103 701000 0                  TSX1    DGDUN
         0 006125   000000 011000                    NOP     0

     2612    11450    1         RETURN;

  11450  0 006126   000000 702200 xent               TSX2  ! X66_ARET

     2613    11451        /**/
     2614    11452        /*F* NAME:         KQL$GARBDUNSR
     2615    11453             PURPOSE:      To merge a station's MLH delay list into
     2616    11454                           its message list during comgroup reopen
     2617    11455             INPUT:        Station gate unlocked
     2618    11456                           Station MLH busy flags clear
     2619    11457             OUTPUT:       Station gate unlocked.
     2620    11458             DESCRIPTION:  Just like KQL$GARBDUNS except ignores station
     2621    11459                           read requests in the delay list.
     2622    11460        */
     2623    11461    1   KQL$GARBDUNSR: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */

  11461  0 006127   000000 700200 xent  KQL$GARBDUN* TSX0  ! X66_AUTO_3
         0 006130   000072 000003                    ZERO    58,3
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:309  

     2624    11462        /**/
     2625    11463    1         STA$=ADDR(PARM);

  11463  0 006131   200003 236100                    LDQ     @PARM,,AUTO
         0 006132   200010 756100                    STQ     STA$,,AUTO

     2626    11464    1         CG$=STA$->KQ$STA.CG$;

  11464  0 006133   200010 470500                    LDP0    STA$,,AUTO
         0 006134   000007 236100                    LDQ     7,,PR0
         0 006135   200013 756100                    STQ     CG$,,AUTO

     2627    11465              %LOCK (G=STA$->KQ$STA.GATE);

  11466  0 006136   200010 236100                    LDQ     STA$,,AUTO
         0 006137   000016 036003                    ADLQ    14,DU
         0 006140   200062 756100                    STQ     @M$+1,,AUTO
         0 006141   200062 630500                    EPPR0   @M$+1,,AUTO
         0 006142   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 006143   000000 701000 xent               TSX1    HFC$LOCK
         0 006144   000000 011000                    NOP     0

     2628    11468    1         CALL DGDUNR;

  11468  0 006145   006110 701000 0                  TSX1    DGDUNR
         0 006146   000000 011000                    NOP     0

     2629    11469    1         RETURN;

  11469  0 006147   000000 702200 xent               TSX2  ! X66_ARET

     2630    11470        %EJECT;
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:310  
     2631    11471        /**/
     2632    11472        /*F* NAME:         KQL$QDFDUN
     2633    11473             PURPOSE:      To reset read-in-progress for the queue and station
     2634    11474             CALL:         KQL$QDFDUN (KQ$STA)
     2635    11475             INPUT:        Q gate locked, caller is sole reader of queue
     2636    11476             DESCRIPTION:  Writes all delayed messages into the queue.
     2637    11477                           Then gives queue to next guy waiting for it,
     2638    11478                           or resets queue RIP.  Unlocks queue gate
     2639    11479                           Then does a KQL$DDFDUNL
     2640    11480                           and returns.
     2641    11481        */
     2642    11482    1   KQL$QDFDUN: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */

  11482  0 006150   000000 700200 xent  KQL$QDFDUN   TSX0  ! X66_AUTO_3
         0 006151   000072 000003                    ZERO    58,3

     2643    11483        /**/
     2644    11484    1         CALL QFDUN;

  11484  0 006152   006162 701000 0                  TSX1    QFDUN
         0 006153   000000 011000                    NOP     0

     2645    11485    1         GOTO DDFDUNL;

  11485  0 006154   005671 710000 0                  TRA     DDFDUNL

     2646    11486        /**/
     2647    11487        /*F* NAME:         KQL$QXFDUN
     2648    11488             PURPOSE:      To reset read-in-progress for the queue only
     2649    11489             CALL:         KQL$QXFDUN (KQ$STA)
     2650    11490             DESCRIPTION:  Like KQL$QDFDUN but does not do a DDFDUN
     2651    11491                           when finished.
     2652    11492        */
     2653    11493    1   KQL$QXFDUN: ENTRY (PARM) ALTRET; /* !!Doesn't ALTRET!! */

  11493  0 006155   000000 700200 xent  KQL$QXFDUN   TSX0  ! X66_AUTO_3
         0 006156   000072 000003                    ZERO    58,3
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:311  

     2654    11494        /**/
     2655    11495    1         CALL QFDUN;

  11495  0 006157   006162 701000 0                  TSX1    QFDUN
         0 006160   000000 011000                    NOP     0

     2656    11496    1         RETURN;

  11496  0 006161   000000 702200 xent               TSX2  ! X66_ARET

     2657    11497        /**/
     2658    11498    1   QFDUN: PROC;

  11498  0 006162   200042 741300       QFDUN        STX1  ! TCOUNT+2,,AUTO

     2659    11499        /**/
     2660    11500    2   DCL GARB UBIN;
     2661    11501    2   DCL D$ PTR;
     2662    11502        /**/
     2663    11503    2         STA$=ADDR(PARM);

  11503  0 006163   200003 236100                    LDQ     @PARM,,AUTO
         0 006164   200010 756100                    STQ     STA$,,AUTO

     2664    11504    2         CG$=STA$->KQ$STA.CG$;

  11504  0 006165   200010 470500                    LDP0    STA$,,AUTO
         0 006166   000007 236100                    LDQ     7,,PR0
         0 006167   200013 756100                    STQ     CG$,,AUTO

     2665    11505    2         GARB=0;

  11505  0 006170   200043 450100                    STZ     GARB,,AUTO

     2666    11506    2   MRG:  IF  KQ$QUEUE.GACT

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:312  
  11506  0 006171   200013 470500       MRG          LDP0    CG$,,AUTO
         0 006172   000063 236100                    LDQ     51,,PR0
         0 006173   000040 316003                    CANQ    32,DU
         0 006174   006177 600000 0                  TZE     s:11508
         0 006175   200043 235100                    LDA     GARB,,AUTO
         0 006176   006257 600000 0                  TZE     MRGDUN

     2667    11507    2         AND GARB = 0 THEN GOTO MRGDUN;
     2668    11508    2         CALL KQW$XMITQ (CG$) ALTRET(MRGDUN);

  11508  0 006177   200013 631500                    EPPR1   CG$,,AUTO
         0 006200   200062 451500                    STP1    @M$+1,,AUTO
         0 006201   200062 630500                    EPPR0   @M$+1,,AUTO
         0 006202   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 006203   000000 701000 xent               TSX1    KQW$XMITQ
         0 006204   006257 702000 0                  TSX2    MRGDUN

     2669    11509                 /* Note that the ANON-Q does not use the KQ$DPTR.X.FLGS facility */
     2670    11510    2         IF ADDR(KQ$QUEUE.DELAYDQ$)->KQ$DPTR.X.CODE ~= KQRA_RSTA# THEN CALL SC_BCGRRC;

  11510  0 006205   200013 470500                    LDP0    CG$,,AUTO
         0 006206   000064 236100                    LDQ     52,,PR0
         0 006207   070000 376007                    ANQ     28672,DL
         0 006210   020000 116007                    CMPQ    8192,DL
         0 006211   006214 600000 0                  TZE     s:11512

  11510  0 006212   000000 713400 xsym               CLIMB   SC_BCGRRC
         0 006213   000000 600000 xsid               climb   nvectors=         0

     2671    11511
     2672    11512    2         KQ$QUEUE.BUSY.RIP='1'B;

  11512  0 006214   200013 470500                    LDP0    CG$,,AUTO
         0 006215   000400 236003                    LDQ     256,DU
         0 006216   000063 256100                    ORSQ    51,,PR0

     2673    11513    2         IF GARB ~= 0 THEN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:313  

  11513  0 006217   200043 235100                    LDA     GARB,,AUTO
         0 006220   006225 600000 0                  TZE     s:11518

     2674    11514    3           DO;

     2675    11515    3           KQ$QUEUE.BUSY.GIP='0'B;

  11515  0 006221   000033 236000 1                  LDQ     27
         0 006222   000063 356100                    ANSQ    51,,PR0

     2676    11516    3           KQ$QUEUE.GACT='0'B;

  11516  0 006223   000034 236000 1                  LDQ     28
         0 006224   000063 356100                    ANSQ    51,,PR0

     2677    11517    3           END;

     2678    11518    2         D$=KQ$QUEUE.DELAYDQ$;

  11518  0 006225   000064 236100                    LDQ     52,,PR0
         0 006226   200044 756100                    STQ     D$,,AUTO

     2679    11519    2         ADDR(D$)->KQ$DPTR.X='0'B;

  11519  0 006227   000000 236003                    LDQ     0,DU
         0 006230   200044 752104                    STCQ    D$,'04'O,AUTO

     2680    11520    2         KQ$QUEUE.RUSR#=D$->KQ$STA.USR#;

  11520  0 006231   200044 471500                    LDP1    D$,,AUTO
         0 006232   100020 236100                    LDQ     16,,PR1
         0 006233   000022 736000                    QLS     18
         0 006234   000063 552140                    STBQ    51,'40'O,PR0

     2681    11521    2         KQ$QUEUE.DELAYDQ$=ADDR(NIL);

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:314  
  11521  0 006235   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 006236   000064 756100                    STQ     52,,PR0

     2682    11522              %UNLOCK (G=KQ$QTREE.GATE);

  11523  0 006237   000057 473500                    LDP3    47,,PR0
         0 006240   200062 453500                    STP3    @M$+1,,AUTO
         0 006241   200062 630500                    EPPR0   @M$+1,,AUTO
         0 006242   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 006243   000000 701000 xent               TSX1    HFC$UNLOCK
         0 006244   000000 011000                    NOP     0

     2683    11525    2         CALL SSR$RUE(%SS_UQA,D$->KQ$STA.USR#);

  11525  0 006245   200044 236100                    LDQ     D$,,AUTO
         0 006246   000035 036000 1                  ADLQ    29
         0 006247   000032 235000 1                  LDA     26
         0 006250   200062 757100                    STAQ    @M$+1,,AUTO
         0 006251   200062 630500                    EPPR0   @M$+1,,AUTO
         0 006252   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 006253   000000 701000 xent               TSX1    SSR$RUE
         0 006254   000000 011000                    NOP     0

     2684    11526    2         RETURN;

  11526  0 006255   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 006256   000001 702211                    TSX2  ! 1,X1

  11521  0 006257                       MRGDUN       null
     2685    11527    2   MRGDUN:;
     2686    11528    2         IF GARB = 0 THEN

  11528  0 006257   200043 235100                    LDA     GARB,,AUTO
         0 006260   006307 601000 0                  TNZ     s:11544

     2687    11529    3           DO;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:315  
     2688    11530    3           KQ$QUEUE.BUSY.RIP='0'B;

  11530  0 006261   200013 470500                    LDP0    CG$,,AUTO
         0 006262   000006 236000 1                  LDQ     6
         0 006263   000063 356100                    ANSQ    51,,PR0

     2689    11531    3           KQ$QUEUE.RUSR#=0;

  11531  0 006264   000000 236003                    LDQ     0,DU
         0 006265   000063 552140                    STBQ    51,'40'O,PR0

     2690    11532    3           IF KQ$QUEUE.GACT THEN

  11532  0 006266   000063 236100                    LDQ     51,,PR0
         0 006267   000040 316003                    CANQ    32,DU
         0 006270   006314 600000 0                  TZE     s:11548

     2691    11533    4             DO;

     2692    11534    4             KQ$QUEUE.BUSY.GIP='1'B;

  11534  0 006271   000200 236003                    LDQ     128,DU
         0 006272   000063 256100                    ORSQ    51,,PR0

     2693    11535                  %UNLOCK (G=KQ$QTREE.GATE);

  11536  0 006273   000057 471500                    LDP1    47,,PR0
         0 006274   200062 451500                    STP1    @M$+1,,AUTO
         0 006275   200062 630500                    EPPR0   @M$+1,,AUTO
         0 006276   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 006277   000000 701000 xent               TSX1    HFC$UNLOCK
         0 006300   000000 011000                    NOP     0

     2694    11538    4             CALL KQS$CQUEUE (CG$->KQ$CG);

  11538  0 006301   200013 630500                    EPPR0   CG$,,AUTO
         0 006302   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:316  
         0 006303   000000 701000 xent               TSX1    KQS$CQUEUE
         0 006304   000000 011000                    NOP     0

     2695    11539    4             RETURN;

  11539  0 006305   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 006306   000001 702211                    TSX2  ! 1,X1

     2696    11540    4             END;
     2697    11541    3           END;
     2698    11542    2         ELSE
     2699    11543    3           DO;

     2700    11544    3           KQ$QUEUE.BUSY.GIP='0'B;

  11544  0 006307   200013 470500                    LDP0    CG$,,AUTO
         0 006310   000033 236000 1                  LDQ     27
         0 006311   000063 356100                    ANSQ    51,,PR0

     2701    11545    3           KQ$QUEUE.GACT='0'B;

  11545  0 006312   000034 236000 1                  LDQ     28
         0 006313   000063 356100                    ANSQ    51,,PR0

     2702    11546    3           END;

     2703    11547              %UNLOCK (G=KQ$QTREE.GATE);

  11548  0 006314   000057 471500                    LDP1    47,,PR0
         0 006315   200062 451500                    STP1    @M$+1,,AUTO
         0 006316   200062 630500                    EPPR0   @M$+1,,AUTO
         0 006317   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 006320   000000 701000 xent               TSX1    HFC$UNLOCK
         0 006321   000000 011000                    NOP     0

     2704    11550    2         RETURN;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:317  
  11550  0 006322   200042 221300                    LDX1  ! TCOUNT+2,,AUTO
         0 006323   000001 702211                    TSX2  ! 1,X1

     2705    11551        /**/
     2706    11552    2   QGDUN: ENTRY;

  11552  0 006324   200042 741300       QGDUN        STX1  ! TCOUNT+2,,AUTO

     2707    11553        /**/
     2708    11554    2         CG$=ADDR(PARM);

  11554  0 006325   200003 236100                    LDQ     @PARM,,AUTO
         0 006326   200013 756100                    STQ     CG$,,AUTO

     2709    11555    2         GARB=1;

  11555  0 006327   000001 235007                    LDA     1,DL
         0 006330   200043 755100                    STA     GARB,,AUTO

     2710    11556    2         GOTO MRG;

  11556  0 006331   006171 710000 0                  TRA     MRG

     2711    11557    2   END QFDUN;
     2712    11558        /**/
     2713    11559        /*F* NAME:        KQL$GARBDUNQ
     2714    11560             PURPOSE:     To reset read-in-progress for the queue
     2715    11561             CALL:        KQL$GARBDUNQ (KQ$CG)
     2716    11562             INPUT:       Q gate locked, caller is sole reader of queue
     2717    11563             DESCRIPTION: Writes all delayed messages into the queue
     2718    11564                          and then resets BUSY.GIP and GACT. If a delayed
     2719    11565                          reader is found while processing the DELAY$ list,
     2720    11566                          BUSY.GIP and GACT are reset, BUSY.RIP is set,
     2721    11567                          and the queue is given up to that reader.
     2722    11568        */
     2723    11569    1   KQL$GARBDUNQ: ENTRY(PARM) ALTRET; /* !!Doesn't ALTRET!! */

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:318  
  11569  0 006332   000000 700200 xent  KQL$GARBDUNQ TSX0  ! X66_AUTO_3
         0 006333   000072 000003                    ZERO    58,3

     2724    11570        /**/
     2725    11571    1         CALL QGDUN;

  11571  0 006334   006324 701000 0                  TSX1    QGDUN
         0 006335   000000 011000                    NOP     0

     2726    11572    1         RETURN;

  11572  0 006336   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   777777 077777   577777 777777   677777 777777   000000 000033    ..?.............
   1     004   000003 006000   777777 770777   777377 777777   777777 777677    ................
   1     010   777757 777777   000006 006000   000003 006000   000004 006000    ................
   1     014   000000 000035   000014 006000   000000 006000   000016 006000    ................
   1     020   000002 006000   000007 006000   000000 000030   000000 006000    ................
   1     024   000022 006000   000005 006000   767777 777777   737777 777777    ................
   1     030   770777 777777   000000 000034   000031 006000   777577 777777    ................
   1     034   777737 777777   000020 400000                                    ........
     2727    11573        /**/
     2728    11574    1   END KQL$DELMLHR;
     2729    11575        %EOD;

PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:319  
--  Include file information  --

   EL$TABLES.:E05TOU  is referenced.
   KC_CP6.:E05TOU  is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   NK_SUBS.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   NK$LDCT.:E05TOU  is referenced.
   KQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQL$DELMLHR.
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:320  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    47-0-0/w PTR         r     1 @KQ$MLH                   61-0-0/w PTR         r     1 @M$
    54-0-0/w PTR         r     1 @M$                       53-0-0/w PTR         r     1 @P$
     3-0-0/w PTR         r     1 @PARM                      4-0-0/w PTR         r     1 @PARM$
     5-0-0/w PTR         r     1 @PARM2                    55-0-0/w PTR         r     1 @STATE
    43-0-0/w BIT         r     1 ATFDA                     13-0-0/w PTR         r     1 CG$
    47-0-0/w PTR         r     1 CTLBLK$                   45-0-0/w PTR         r     1 D$
    44-0-0/w PTR         r     1 D$                        20-0-0/w PTR         r     1 DBLK$
    20-0-0/w UBIN        r     1 DBLK$R                    22-0-0/w UBIN        r     1 DDA
    17-0-0/w PTR         r     1 DFRP$                     43-0-0/w BIT         r     1 ENT
    30-0-0/w UBIN        r     1 ENTFLAG                   51-0-0/w PTR         r     1 F$
    27-0-0/w SBIN        r     1 FOUNDIT                   37-0-0/w UBIN        r     1 FWCG
    37-0-0/w PTR         r     1 FWP$                      43-0-0/w UBIN        r     1 GARB
    43-0-0/w UBIN        r     1 GARB                      50-0-0/w PTR         r     1 H$
    21-0-0/w SBIN        r     1 I                         46-0-0/w PTR         r     1 IP$
    31-0-0/w SBIN        r     1 J                         14-0-0/h UBIN(18)    r     1 KEY1L
    15-0-0/h UBIN(18)    r     1 KEY2L                     *0-0-0/w STRC(288)   r     1 KQ$MLH
    44-0-0/w PTR         r     1 L$                        33-0-0/w PTR         r     1 M$
    *0-0-0/w PTR         r     1 M$                        *0-0-0/w PTR         r     1 M$
    51-0-0/w PTR         r     1 MB$                       12-0-0/w PTR         r     1 MBLK$
    32-0-0/w UBIN        r     1 MBS                       24-0-0/w PTR         r     1 MLH$
    45-0-0/w SBIN        r     1 NMBLKS                    16-0-0/w PTR         r     1 P$
    *0-0-0/w PTR         r     1 P$                        *0-0-0/w UBIN        r     1 PARM
    *0-0-0/w PTR         r     1 PARM$                     *0-0-0/w SBIN        r     1 PARM$R
    *0-0-0/w UBIN        r     1 PARM2                     *0-0-0/w PTR         r     1 PARM2R$
    25-0-0/w UBIN        r     1 Q                         36-0-0/w PTR         r     1 QTN$
    11-0-0/w PTR         r     1 RBLK$                     23-0-0/w UBIN        r     1 RCVR
    44-0-0/w UBIN        r     1 RCVR                      57-0-0/w PTR         r     1 REL$
    46-0-0/w PTR         r     1 SAVP$                     10-0-0/w PTR         r     1 STA$
    *0-0-0/w UBIN        r     1 STATE                     51-0-0/w PTR         r     1 T$
    51-0-0/w PTR         r     1 T1$                       51-0-0/w STRC        r     1 T1$R
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:321  
    52-0-0/w PTR         r     1 T2$                       40-0-0/w SBIN        r     1 TCOUNT
    26-0-0/w UBIN        r     1 TERM                       6-0-0/d BIT (72)    r     1 TIMCHK
    43-0-0/c UBIN(9)     r     1 USR#                      34-0-0/w PTR         r     1 X$
    35-0-0/w PTR         r     1 Z$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 KQ_DEBUG                   0-0-0/w STRC(2304)  r     1 KQ_ERRLOG_BFR
     0-0-0/b BIT (72)    r     1 KQ_ERRLOG_GATE             0-0-0/w STRC(288)   r     1 KQ_IMLH
     0-0-0/b STRC        r     1 KQ_LOG                     0-0-0/w UBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 B$$CHARS                   0-0-0/w ACHR        r     1 B$$KEY1
     0-0-0/w ACHR        r     1 B$$KEY2                    0-0-0/w PTR         r     1 B$$PTR
     0-0-0/w STRC        r     1 B$$UPARM                   0-0-0/w STRC(720)   r     1 FRAME
     0-0-0/d STRC(6516)  r     1 KQ$CG                      0-0-0/d STRC(216)   r     1 KQ$DBLK
     0-0-0/d STRC(288)   r     1 KQ$DFRBLK                  0-0-0/w STRC(180)   r     1 KQ$DFRPARM
     0-0-0/w STRC        r     1 KQ$DPTR                    0-0-0/d STRC(828)   r     1 KQ$FWP
     0-0-0/d STRC(576)   r     1 KQ$MBLK                    0-0-0/w STRC(288)   r     1 KQ$MLH
     0-0-0/d STRC(576)   r     1 KQ$NRMLMBLK                0-0-0/d STRC(1908)  r     1 KQ$QTN
     0-0-0/d STRC(648)   r     1 KQ$RBLK                    0-0-0/d STRC(504)   r     1 KQ$RBLKT
     0-0-0/d STRC(1296)  r     1 KQ$STA                     0-0-0/w STRC(216)   r     1 KQ$THDR
     0-0-0/d STRC(864)   r     1 NK$LDCT


   Procedure KQL$DELMLHR requires 3295 words for executable code.
   Procedure KQL$DELMLHR requires 58 words of local(AUTO) storage.
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:322  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:323  
          MINI XREF LISTING

A1 IN PROCEDURE DISKERR
     10803**LABEL   10801--CALLALT
A1 IN PROCEDURE SFETCH
     10893**LABEL   10891--CALLALT
ALT1 IN PROCEDURE REG
     10999**LABEL   10997--CALLALT
ALTRT
      9840**LABEL    8981--CALLALT
ALTRT IN PROCEDURE DELMLH
      9142**LABEL    9140--CALLALT
ALTRT IN PROCEDURE SFETCH
     10928**LABEL   10875--CALLALT 10901--CALLALT 10923--CALLALT
ALTRT IN PROCEDURE SRCHSUPER
     10382**LABEL    9920--CALLALT  9935--CALLALT  9937--CALLALT 10173--CALLALT 10374--CALLALT
ALTRT1 IN PROCEDURE SRCHSUPER
     10382**LABEL   10381--CALLALT
ATFDA IN PROCEDURE SRCHSUPER
      9901**DCL     10006<<ASSIGN  10024<<ASSIGN  10148>>IF      10165>>IF      10177>>IF      10244>>IF
     10333>>IF
B$$CHARS
      8850**DCL     10262<<ASSIGN  10262>>ASSIGN  10353<<ASSIGN  10353>>ASSIGN  10411<<ASSIGN  10411>>ASSIGN
B$$KEY1
      8848**DCL      9658>>IF       9658>>IF       9721>>IF       9721>>IF      10093>>IF      10093>>IF
     10194>>IF      10194>>IF
B$$KEY2
      8849**DCL      9630>>IF       9630>>IF       9658>>IF       9658>>IF       9689>>IF       9689>>IF
      9736>>IF       9736>>IF      10093>>IF      10093>>IF      10194>>IF      10194>>IF
B$$PTR
      5966**DCL      9239>>ASSIGN   9252<<ASSIGN
B$$UPARM.ERR
      5969**DCL     10925>>ASSIGN  10926<<ASSIGN  11129<<ASSIGN
CG$
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:324  
      8862**DCL      6032--IMP-PTR  8957<<ASSIGN   8969<<ASSIGN   9111>>CALL     9116>>ASSIGN   9116>>ASSIGN
      9117>>ASSIGN   9117>>ASSIGN   9124>>ASSIGN   9125>>ASSIGN   9128>>CALL     9174<<ASSIGN   9180>>ASSIGN
      9180>>ASSIGN   9181>>ASSIGN   9181>>ASSIGN   9310<<ASSIGN   9506<<ASSIGN   9589<<ASSIGN   9930>>ASSIGN
      9937>>IF      10103>>CALL    10124>>CALL    10201>>CALL    10247>>CALL    10325>>CALL    10403>>ASSIGN
     10403>>ASSIGN  10404>>ASSIGN  10404>>ASSIGN  10484>>CALL    10486>>CALL    10591>>CALL    10607>>CALL
     10624>>CALL    10634>>CALL    10645>>CALL    10653>>CALL    10801>>CALL    10813>>CALL    10829>>CALL
     10891>>CALL    10894>>CALL    10976>>CALL    10982>>ASSIGN  10983>>IF      10985>>IF      10986>>ASSIGN
     10988>>CALL    10997>>CALL    11010>>CALL    11012>>ASSIGN  11013>>ASSIGN  11015>>CALL    11020>>CALL
     11027>>ASSIGN  11028>>ASSIGN  11085>>CALL    11098>>CALL    11158>>ASSIGN  11158>>ASSIGN  11159>>ASSIGN
     11159>>ASSIGN  11196>>ASSIGN  11196>>ASSIGN  11197>>ASSIGN  11197>>ASSIGN  11256>>CALL    11284<<ASSIGN
     11334<<ASSIGN  11407>>CALL    11448<<ASSIGN  11464<<ASSIGN  11504<<ASSIGN  11506>>IF      11508<>CALL
     11510>>IF      11512>>ASSIGN  11515>>ASSIGN  11516>>ASSIGN  11518>>ASSIGN  11520>>ASSIGN  11521>>ASSIGN
     11523>>CALL    11530>>ASSIGN  11531>>ASSIGN  11532>>IF      11534>>ASSIGN  11536>>CALL    11538>>CALL
     11544>>ASSIGN  11545>>ASSIGN  11548>>CALL    11554<<ASSIGN
CHECK IN PROCEDURE CHECKVFC
     11233**LABEL   11231--GOTO
CHECKVFC
     11226**PROC     9635--CALL     9654--CALL     9670--CALL     9697--CALL     9717--CALL     9752--CALL
CHECKVFC1 IN PROCEDURE CHECKVFC
     11232**ENTRY    9729--CALL
CHK IN PROCEDURE DELMLH
      9144**PROC     9106--CALL     9140--CALL
CHKMLH IN PROCEDURE DELMLH
      9138**ENTRY    8981--CALL
COM IN PROCEDURE FWCGL
     10483**LABEL   10518--GOTO    10535--GOTO
CTLBLK$ IN PROCEDURE SRCHSUPER
      9906**DCL      9998<<ASSIGN   9999>>ASSIGN  10007>>IF      10009>>IF      10017>>ASSIGN  10018>>ASSIGN
     10025>>IF      10162>>ASSIGN  10262>>ASSIGN  10272>>ASSIGN  10342>>ASSIGN  10355>>ASSIGN  10355>>ASSIGN
     10415>>ASSIGN  10415>>ASSIGN
D$ IN PROCEDURE DXFDUN
     11354**DCL     11382<<ASSIGN  11383--ASSIGN  11384>>ASSIGN
D$ IN PROCEDURE QFDUN
     11501**DCL     11518<<ASSIGN  11519--ASSIGN  11520>>ASSIGN  11525>>CALL
DBLK$
      8867**DCL      7773--IMP-PTR  8868--REDEF    9919<<ASSIGN   9966>>IF       9998>>ASSIGN   9998>>ASSIGN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:325  
      9999>>ASSIGN  10000>>ASSIGN  10145>>IF      10163>>ASSIGN  10164>>ASSIGN  10262>>ASSIGN  10271>>ASSIGN
     10330>>ASSIGN  10330>>ASSIGN  10331>>IF      10341>>ASSIGN  10352>>ASSIGN  10407>>ASSIGN  10407>>ASSIGN
     10410>>ASSIGN  10624<>CALL    10625<<ASSIGN  10634<>CALL    10644>>IF      10645<>CALL    10653<>CALL
     10884<<ASSIGN  10894<>CALL    10897>>IF      10920>>ASSIGN  10921<<ASSIGN  10924<<ASSIGN  10925--ASSIGN
     10926--ASSIGN  11128>>ASSIGN  11276<<ASSIGN  11311<<ASSIGN
DBLK$R
      8868**DCL     10878<<ASSIGN
DDA
      8870**DCL     10101<<ASSIGN  10103<>CALL    10105>>IF      10801<>CALL    10880<<ASSIGN  10881<<ASSIGN
     10882>>IF      10891<>CALL    10894<>CALL    10898>>DOCASE  10925<<ASSIGN  11129>>ASSIGN  11277<<ASSIGN
DDFDUNL
     11334**LABEL   11485--GOTO
DEL IN PROCEDURE CHECKVFC
     11252**LABEL   11242--GOTO    11250--GOTO
DELCONT IN PROCEDURE DELMLH
      9104**ENTRY   11364--CALL
DELETE
     10622**PROC    10152--CALL    10170--CALL    10289--CALL    10344--CALL
DELMLH
      9001**PROC     8959--CALL     8971--CALL
DELMSG IN PROCEDURE CHECKVFC
     11251**ENTRY    9664--CALL     9746--CALL
DFIND
      9641**LABEL    9515--GOTO
DFIND1
      9679**LABEL    9664--CALLALT  9670--CALLALT  9676--CALLALT
DFINDI
      9469**LABEL    9420--GOTO
DFINDI1
      9474**LABEL    9556--GOTO
DFINDI2
      9496**LABEL    9442--GOTO
DFRP$
      8866**DCL      8299--IMP-PTR 10920<<ASSIGN  10922>>ASSIGN  11020<>CALL    11274<<ASSIGN  11275>>ASSIGN
     11276>>ASSIGN  11277>>ASSIGN
DGDUN IN PROCEDURE DXFDUN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:326  
     11421**ENTRY   11449--CALL
DGDUNR IN PROCEDURE DXFDUN
     11427**ENTRY   11468--CALL
DISKERR
     10666**PROC     9977--CALL    10011--CALL    10027--CALL
DXFDUN
     11350**PROC     9785--CALL     9804--CALL     9838--CALL     9857--CALL    11335--CALL    11347--CALL
ENDREG IN PROCEDURE REG
     11065**ENTRY   11292--CALL
ENT IN PROCEDURE CHECKVFC
     11228**DCL     11230<<ASSIGN  11233<<ASSIGN  11252<<ASSIGN  11255>>IF
ENTFLAG
      8876**DCL      9419<<ASSIGN   9439<<ASSIGN   9776>>IF       9812>>IF       9847>>IF      10801<>CALL
     11073<<ASSIGN
F$ IN PROCEDURE DISKERR
     10668**DCL     10800<<ASSIGN  10801<>CALL    10803>>ASSIGN  10805>>ASSIGN  10806>>ASSIGN  10807<<ASSIGN
     10807>>ASSIGN  10809>>ASSIGN  10810>>ASSIGN  10811<<ASSIGN  10811>>ASSIGN  10812>>ASSIGN
FCONT0
     11278**LABEL   11279--CALLALT 11312--CALLALT
FCONT1
     11291**LABEL   11292--CALLALT
FOUNDIT
      8875**DCL      9728>>IF       9732>>IF       9909<<ASSIGN   9941<<ASSIGN  10305<<ASSIGN  10360<<ASSIGN
FRAME IN PROCEDURE DISKERR
     10669**DCL     10798--ASSIGN  10807--ASSIGN
FRAME.MLH IN PROCEDURE DISKERR
     10730**DCL     10806<<ASSIGN
FRAME.NODE IN PROCEDURE DISKERR
     10713**DCL     10805<<ASSIGN
FRAME.STA IN PROCEDURE DISKERR
     10712**DCL     10803<<ASSIGN
FWCG
      8884**DCL      9440<<ASSIGN   9473<<ASSIGN   9479>>IF       9512>>IF       9584<<ASSIGN   9595>>IF
      9633>>IF       9669>>IF       9696>>IF       9751>>IF       9798>>IF      10114>>IF      10210>>IF
     11068>>IF      11290<<ASSIGN
FWCGD IN PROCEDURE FWCGL
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:327  
     10498**ENTRY   10130--CALL
FWCGI IN PROCEDURE FWCGL
     10527**ENTRY   10220--CALL
FWCGL
     10473**PROC     9638--CALL     9676--CALL     9700--CALL     9758--CALL
FWCGP IN PROCEDURE FWCGL
     10514**ENTRY   10127--CALL
FWP$
      8883**DCL      7634--IMP-PTR  8884--REDEF    9481>>CALL     9514>>ASSIGN   9551<<ASSIGN   9552>>ASSIGN
      9555>>ASSIGN   9597>>ASSIGN   9617<<ASSIGN   9618>>ASSIGN   9619>>ASSIGN   9620>>ASSIGN   9673>>IF
      9673>>IF       9755>>IF       9755>>IF      10119>>IF      10121>>CALL    10483>>IF      10486>>CALL
     10556>>ASSIGN  10560>>IF      10561>>IF      10563>>ASSIGN  10564>>ASSIGN  10565>>CALL    10566>>IF
     10566>>IF      10570>>ASSIGN  10571>>ASSIGN  10572>>CALL    10574>>ASSIGN  10575>>ASSIGN  11068>>ASSIGN
GARB IN PROCEDURE DXFDUN
     11352**DCL     11357<<ASSIGN  11359>>IF      11377>>IF      11397>>IF      11424<<ASSIGN  11429<<ASSIGN
GARB IN PROCEDURE QFDUN
     11500**DCL     11505<<ASSIGN  11506>>IF      11513>>IF      11528>>IF      11555<<ASSIGN
GETMB
     10836**PROC    10122--CALL    10323--CALL    10828--CALL
GETPRED
     11207**PROC    10269--CALL
GO IN PROCEDURE SFETCH
     10869**LABEL   10874--CALLALT
GO IN PROCEDURE TELL
     10556**LABEL   10552--CALLALT
H$ IN PROCEDURE DELMLH
      9073**DCL      9078<<ASSIGN   9079--ASSIGN   9080>>IF       9085>>ASSIGN   9087>>ASSIGN   9113<<ASSIGN
      9122>>IF       9125>>ASSIGN
HFC$LOCK
      3049**DCL-ENT  9111--CALL     9492--CALL    10601--CALL    10607--CALL    10795--CALL    10959--CALL
     11010--CALL    11070--CALL    11085--CALL    11345--CALL    11466--CALL
HFC$UNLOCK
      3049**DCL-ENT  9128--CALL     9483--CALL     9852--CALL    10584--CALL    10591--CALL    11015--CALL
     11082--CALL    11093--CALL    11098--CALL    11390--CALL    11405--CALL    11417--CALL    11523--CALL
     11536--CALL    11548--CALL
I
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:328  
      8869**DCL      8850--IMP-SIZ  9107<<ASSIGN   9108<>CALL     9116>>ASSIGN   9117>>ASSIGN   9118>>ASSIGN
      9978<<ASSIGN   9980>>ASSIGN  10102<<ASSIGN  10103<>CALL    10124<>CALL    10246<<ASSIGN  10247<>CALL
     10261<<ASSIGN  10262>>ASSIGN  10262>>ASSIGN  10264<<DOINDEX 10325<>CALL    10352<<ASSIGN  10353>>ASSIGN
     10353>>ASSIGN  10410<<ASSIGN  10411>>ASSIGN  10411>>ASSIGN  10996<<ASSIGN  10997<>CALL
INS
      9189**LABEL    9313--GOTO
INS0
      9238**LABEL    9270--GOTO     9272--GOTO     9282--GOTO     9284--GOTO     9286--GOTO
INS01
      9250**LABEL    9241--GOTO     9243--GOTO     9245--GOTO
INS1
      9290**LABEL    9208--GOTO     9210--GOTO     9212--GOTO     9221--GOTO     9224--GOTO     9229--GOTO
      9233--GOTO
IP$ IN PROCEDURE SRCHSUPER
      9905**DCL     10433<<ASSIGN  10439>>IF      10441>>ASSIGN  10449<<ASSIGN
J
      8877**DCL     10068<<ASSIGN  10090<<ASSIGN  10091>>IF      10133<<ASSIGN  10133>>ASSIGN  10299>>IF
     10301>>ASSIGN  10350>>IF      10352>>ASSIGN  10408>>IF      10410>>ASSIGN
KEY1L
      8863**DCL      8848--IMP-SIZ  9508<<ASSIGN   9591<<ASSIGN   9658>>IF       9658>>IF       9721>>IF
      9721>>IF      10093>>IF      10093>>IF      10194>>IF      10194>>IF      11286<<ASSIGN
KEY2L
      8864**DCL      8849--IMP-SIZ  9509<<ASSIGN   9592<<ASSIGN   9630>>IF       9630>>IF       9658>>IF
      9658>>IF       9689>>IF       9689>>IF       9736>>IF       9736>>IF      10093>>IF      10093>>IF
     10194>>IF      10194>>IF      11287<<ASSIGN
KQ$CG
      6032**DCL     10103<>CALL    10124<>CALL    10201<>CALL    10247<>CALL    10325<>CALL    10484<>CALL
     10486<>CALL    10624<>CALL    10634<>CALL    10645<>CALL    10653<>CALL    10801<>CALL    10813<>CALL
     10829<>CALL    10891<>CALL    10894<>CALL    10976<>CALL    10988<>CALL    10997<>CALL    11020<>CALL
     11256<>CALL    11407<>CALL    11538<>CALL
KQ$CG.AUCTL.DVBYTE.REREAD
      6475**DCL      6476--REDEF
KQ$CG.DELMSG$
      6428**DCL      9124>>ASSIGN   9125<<ASSIGN
KQ$CG.GATE.CG
      6422**DCL     11010<>CALL    11015<>CALL
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:329  
KQ$CG.GATE.MISC
      6424**DCL      9111<>CALL     9128<>CALL
KQ$CG.QUEUE.BUSY.GIP
      6282**DCL     10985>>IF      10986<<ASSIGN  11515<<ASSIGN  11534<<ASSIGN  11544<<ASSIGN
KQ$CG.QUEUE.BUSY.RIP
      6280**DCL     11512<<ASSIGN  11530<<ASSIGN
KQ$CG.QUEUE.DELAYDQ$
      6295**DCL     11510--IF      11518>>ASSIGN  11521<<ASSIGN
KQ$CG.QUEUE.GACT
      6285**DCL      9937>>IF      10983>>IF      11506>>IF      11516<<ASSIGN  11532>>IF      11545<<ASSIGN
KQ$CG.QUEUE.MLH$
      6299**DCL     11027<<ASSIGN
KQ$CG.QUEUE.QTREE$
      6254**DCL     10591>>CALL    10607>>CALL    11085>>CALL    11098>>CALL    11523>>CALL    11536>>CALL
     11548>>CALL
KQ$CG.QUEUE.RQGC
      6289**DCL     11028<<ASSIGN
KQ$CG.QUEUE.RQMEM
      6287**DCL      9930<<ASSIGN  10982<<ASSIGN
KQ$CG.QUEUE.RUSR#
      6274**DCL     11520<<ASSIGN  11531<<ASSIGN
KQ$CG.SRQHD$
      6123**DCL     11012>>ASSIGN  11013<<ASSIGN
KQ$CG.STATS.CCMQ
      6524**DCL      9117<<ASSIGN   9117>>ASSIGN   9181<<ASSIGN   9181>>ASSIGN  10404<<ASSIGN  10404>>ASSIGN
     11159<<ASSIGN  11159>>ASSIGN  11197<<ASSIGN  11197>>ASSIGN
KQ$CG.STATS.CCMS
      6524**DCL      9116<<ASSIGN   9116>>ASSIGN   9180<<ASSIGN   9180>>ASSIGN  10403<<ASSIGN  10403>>ASSIGN
     11158<<ASSIGN  11158>>ASSIGN  11196<<ASSIGN  11196>>ASSIGN
KQ$DBLK
      7773**DCL      9999--ASSIGN  10262--ASSIGN
KQ$DBLK.DSIZE
      7778**DCL     10000>>ASSIGN  10330<<ASSIGN  10330>>ASSIGN  10331>>IF      10352>>ASSIGN  10407<<ASSIGN
     10407>>ASSIGN  10410>>ASSIGN
KQ$DBLK.FLNKDA
      7780**DCL     10145>>IF      10163>>ASSIGN  10271>>ASSIGN  10341>>ASSIGN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:330  
KQ$DBLK.SIZW
      7807**DCL      9998>>ASSIGN
KQ$DBLK.STAMP
      7774**DCL     10164>>ASSIGN
KQ$DFRBLK.DBLK$
      8350**DCL      8352--REDEF
KQ$DFRBLK.INFO
      8358**DCL      8360--REDEF
KQ$DFRBLK.INFO$
      8360**DCL     10922<<ASSIGN
KQ$DFRPARM.DBLK$
      8304**DCL      8306--REDEF   11276>>ASSIGN
KQ$DFRPARM.ERR
      8312**DCL     11277>>ASSIGN
KQ$DFRPARM.INFO
      8300**DCL      8302--REDEF
KQ$DFRPARM.INFO$
      8302**DCL     11275>>ASSIGN
KQ$DPTR.X
      8838**DCL      9079<<ASSIGN  11383<<ASSIGN  11519<<ASSIGN
KQ$DPTR.X.CODE
      8843**DCL      9083>>DOCASE  11369>>IF      11510>>IF
KQ$DPTR.X.FLGS
      8841**DCL      9081<<ASSIGN   9085<<ASSIGN   9087<<ASSIGN  11362>>IF      11365<<ASSIGN
KQ$FWP
      7634**DCL     10121<>CALL    10565<>CALL    10572<>CALL
KQ$FWP.DBLK$
      7699**DCL      7701--REDEF
KQ$FWP.EXMPTSTAR
      7685**DCL      9673>>IF       9755>>IF
KQ$FWP.FC
      7655**DCL      9673>>IF       9755>>IF      10119>>IF      10483>>IF      10561>>IF      10566>>IF
     10574<<ASSIGN
KQ$FWP.FWCGS$
      7652**DCL     10486>>CALL
KQ$FWP.MYSTA$
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:331  
      7642**DCL      9481>>CALL     9618>>ASSIGN
KQ$FWP.NODE$
      7645**DCL      9552>>ASSIGN   9619>>ASSIGN
KQ$FWP.RBLK$
      7649**DCL      9555>>ASSIGN   9620>>ASSIGN
KQ$FWP.REGOK
      7673**DCL     10563<<ASSIGN  10571<<ASSIGN
KQ$FWP.TELLME
      7660**DCL     10560>>IF      10575<<ASSIGN
KQ$FWP.TIMCHK
      7640**DCL      9514>>ASSIGN   9597>>ASSIGN  10556<<ASSIGN  11068<<ASSIGN
KQ$FWP.TOOKIT
      7664**DCL     10564<<ASSIGN  10566>>IF      10570<<ASSIGN
KQ$MBLK
      7294**DCL      9998--ASSIGN  10000--ASSIGN  10121<>CALL    10125<<ASSIGN  10125>>ASSIGN  10132--ASSIGN
     10201<>CALL    10246--ASSIGN  10261--ASSIGN  10265--ASSIGN  10301--ASSIGN  10326<<ASSIGN  10326>>ASSIGN
     10330--ASSIGN  10352--ASSIGN  10353--ASSIGN  10355--ASSIGN  10407--ASSIGN  10410--ASSIGN  10411--ASSIGN
     10415--ASSIGN  10416--ASSIGN  10484<>CALL    10565<>CALL    10572<>CALL    10798--ASSIGN  10812<<ASSIGN
     10812>>ASSIGN  11256<>CALL
KQ$MBLK.CCSTAMP
      7540**DCL      9916<<ASSIGN  10162<<ASSIGN  10162>>ASSIGN  10169>>ASSIGN  10272>>ASSIGN  10342>>ASSIGN
     10878>>ASSIGN
KQ$MBLK.COUNT
      7534**DCL      9978>>ASSIGN   9979<<ASSIGN  10001>>IF      10033>>IF      10150>>IF      10159>>IF
     10270<<ASSIGN  10270>>ASSIGN  10290>>IF      10329<<ASSIGN  10329>>ASSIGN  10336>>IF      10406<<ASSIGN
     10406>>ASSIGN
KQ$MBLK.DDA
      7359**DCL      9829>>ASSIGN   9918>>ASSIGN   9977>>IF       9981>>IF       9984<<ASSIGN  10003>>IF
     10099>>IF      10101>>ASSIGN  10151<<ASSIGN  10168<<ASSIGN  10271<<ASSIGN  10291>>IF      10338<<ASSIGN
     10341<<ASSIGN  10880>>ASSIGN
KQ$MBLK.FIRSTX
      7523**DCL      9999>>ASSIGN  10262>>ASSIGN  10355<<ASSIGN  10355>>ASSIGN  10415<<ASSIGN  10415>>ASSIGN
KQ$MBLK.INSHD$
      7513**DCL      9238--ASSIGN  10069>>IF      10072>>ASSIGN  10081>>IF      10084>>ASSIGN  10192>>ASSIGN
     10202>>ASSIGN  10280>>DOWHILE 10281>>ASSIGN  10292>>IF      10327>>ASSIGN  10328<<ASSIGN  10438<<ASSIGN
     10533>>ASSIGN  11191<<ASSIGN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:332  
KQ$MBLK.KEY1
      7322**DCL      7324--REDEF    9254>>IF       9254>>IF       9658--IF       9721--IF      10093--IF
     10194--IF
KQ$MBLK.KEY1ALL
      7468**DCL      9253>>IF       9255<<ASSIGN   9722>>IF
KQ$MBLK.KEY1VALID
      7481**DCL      9917>>IF       9981>>IF      10003>>IF      10031>>IF      10336>>IF      10879>>IF
KQ$MBLK.KEY2
      7331**DCL      7349--REDEF    9257>>IF       9257>>IF       9630--IF       9658--IF       9689--IF
      9736--IF      10093--IF      10194--IF
KQ$MBLK.KEY2ALL
      7471**DCL      9256>>IF       9258<<ASSIGN   9690>>IF       9737>>IF      10993<<ASSIGN  11007<<ASSIGN
KQ$MBLK.KEY2VALID
      7474**DCL     10843>>IF      10992<<ASSIGN  11006<<ASSIGN
KQ$MBLK.LCSTAMP
      7538**DCL      9988<<ASSIGN
KQ$MBLK.LNK$
      7296**DCL      7298--REDEF    7304--REDEF    7308--REDEF    9085--ASSIGN   9124<<ASSIGN   9196>>ASSIGN
      9197<<ASSIGN   9198<<ASSIGN   9214>>ASSIGN   9246--ASSIGN   9247>>ASSIGN   9250>>ASSIGN   9251<<ASSIGN
      9289>>ASSIGN   9295>>ASSIGN   9296<<ASSIGN   9299<<ASSIGN   9334<<ASSIGN   9640>>ASSIGN   9678>>ASSIGN
      9702>>ASSIGN   9760>>ASSIGN   9824<<ASSIGN  10203>>ASSIGN  10223>>ASSIGN  10265<<ASSIGN  10266>>ASSIGN
     10268<<ASSIGN  10279<<ASSIGN  10302>>ASSIGN  10327<<ASSIGN  10438>>ASSIGN  10441<<ASSIGN  10442<<ASSIGN
     10450>>ASSIGN  10482>>ASSIGN  10534>>ASSIGN  11163>>ASSIGN  11164>>IF      11168<<ASSIGN  11168>>ASSIGN
     11169>>IF      11191>>ASSIGN  11193<<ASSIGN  11193>>ASSIGN  11212>>IF      11213>>ASSIGN  11258>>ASSIGN
KQ$MBLK.MREQ
      7506**DCL      9926>>IF      10384<<ASSIGN  10840>>IF      10841>>IF      10844<<ASSIGN  11117>>IF
     11120>>IF
KQ$MBLK.PCDDA
      7545**DCL      9915<<ASSIGN   9987>>ASSIGN  10009>>IF      10018<<ASSIGN  10025>>IF      10025>>IF
     10161<<ASSIGN
KQ$MBLK.PCVALID
      7492**DCL     10007>>IF      10017<<ASSIGN
KQ$MBLK.PRIO
      7312**DCL      9191>>IF       9191>>IF       9191>>IF       9191>>IF       9208>>IF       9208>>IF
      9209>>IF       9209>>IF       9221>>IF       9221>>IF       9222>>IF       9222>>IF       9234>>IF
      9241>>IF       9241>>IF       9242>>IF       9242>>IF       9269>>IF       9282>>IF       9283>>IF
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:333  
      9651>>IF       9660>>IF       9713>>IF       9742>>IF      10061>>IF      10066>>IF      10073>>IF
     10073>>IF      10074>>IF      10074>>IF      10085>>IF      10095>>IF      10196>>IF      10213>>IF
     10213>>IF      10214>>IF      10214>>IF      10273<<ASSIGN  10273>>ASSIGN  10282>>IF      10282>>IF
     10283>>IF      10283>>IF      10436>>IF      10436>>IF      10445>>IF      10445>>IF
KQ$MBLK.PRIOLO
      7508**DCL      9234>>IF       9269>>IF       9282>>IF       9283>>IF
KQ$MBLK.SDA.CCDDA
      7329**DCL      9918<<ASSIGN   9981>>IF      10003>>IF      10031>>IF      10161>>ASSIGN  10163<<ASSIGN
     10168>>ASSIGN  10881>>ASSIGN
KQ$MBLK.SDA.LDA
      7326**DCL      9987<<ASSIGN  10031>>IF
KQ$MBLK.STA$
      7516**DCL      7519--REDEF    7523--REDEF   10924>>ASSIGN  10953<<ASSIGN  11128<<ASSIGN  11129--ASSIGN
     11282>>ASSIGN
KQ$MBLK.STAMP
      7316**DCL      9212>>IF       9212>>IF       9229>>IF       9229>>IF       9233>>IF       9234>>IF
      9245>>IF       9245>>IF       9272>>IF       9286>>IF       9916>>ASSIGN  10077>>IF      10077>>IF
     10102>>ASSIGN  10169<<ASSIGN  10217>>IF      10217>>IF      10272<<ASSIGN  10274>>ASSIGN  10286>>IF
     10286>>IF      10342<<ASSIGN  10448>>IF      10448>>IF
KQ$MBLK.STATE
      7504**DCL      9725>>ASSIGN   9913>>IF      10943>>IF      10944<<ASSIGN  11035<<ASSIGN  11072>>ASSIGN
     11074<<ASSIGN  11115>>DOCASE  11278>>IF
KQ$MBLK.SUPER
      7375**DCL      9190>>IF       9227>>IF       9268>>IF       9281>>IF       9690>>IF       9693>>IF
      9715>>IF       9722>>IF       9737>>IF       9740>>IF
KQ$MBLK.USR
      7487**DCL      7492--REDEF   10947<<ASSIGN  10952<<ASSIGN  11126>>IF
KQ$MBLK.USR#
      7519**DCL     10948<<ASSIGN  11127>>ASSIGN
KQ$MBLK.UTS
      7366**DCL      9191>>IF       9191>>IF       9210>>IF       9210>>IF       9211>>IF       9211>>IF
      9224>>IF       9224>>IF       9225>>IF       9225>>IF       9234>>IF       9243>>IF       9243>>IF
      9244>>IF       9244>>IF       9269>>IF       9271>>IF       9284>>IF       9285>>IF      10075>>IF
     10075>>IF      10076>>IF      10076>>IF      10215>>IF      10215>>IF      10216>>IF      10216>>IF
     10277<<ASSIGN  10277>>ASSIGN  10284>>IF      10284>>IF      10285>>IF      10285>>IF      10446>>IF
     10446>>IF      10447>>IF      10447>>IF
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:334  
KQ$MBLK.UTSHI
      7510**DCL      9234>>IF       9269>>IF       9271>>IF       9284>>IF       9285>>IF
KQ$MBLK.UTSXTHI
      7532**DCL      9234>>IF       9272>>IF       9286>>IF
KQ$MBLK.UTSXTLO
      7530**DCL      9233>>IF      10274<<ASSIGN  10275>>IF      10276<<ASSIGN
KQ$MBLK.XSP.MREQ$
      7351**DCL      7355--REDEF    9931>>IF      10385<<ASSIGN  10845>>ASSIGN  10846<<ASSIGN  10994<<ASSIGN
     11008<<ASSIGN
KQ$MBLK.XSP.SLNK$
      7355**DCL     11012<<ASSIGN
KQ$MLH
      7565**DCL      8959<>CALL     8971<>CALL     9185<>CALL     9337<<ASSIGN   9480<>CALL     9481<>CALL
     10806>>ASSIGN  11364<>CALL
KQ$MLH.BUSY
      7581**DCL      9183>>IF       9327>>IF       9477>>IF
KQ$MLH.BUSY.GIP
      7586**DCL     10973>>IF      10974<<ASSIGN  11379<<ASSIGN  11403<<ASSIGN  11413<<ASSIGN
KQ$MLH.BUSY.RIP
      7584**DCL      9494>>IF       9500<<ASSIGN   9789<<ASSIGN   9850<<ASSIGN  11376<<ASSIGN  11399<<ASSIGN
KQ$MLH.COUNT
      7612**DCL      9178<<ASSIGN   9178>>ASSIGN   9335<<ASSIGN   9335>>ASSIGN   9335>>ASSIGN   9980<<ASSIGN
      9980>>ASSIGN  10405<<ASSIGN  10405>>ASSIGN  11156<<ASSIGN  11156>>ASSIGN  11194<<ASSIGN  11194>>ASSIGN
KQ$MLH.GACT
      7591**DCL      9935>>IF      10971>>IF      11359>>IF      11380<<ASSIGN  11401>>IF      11414<<ASSIGN
KQ$MLH.HEAD$
      7569**DCL      9204>>ASSIGN   9298<<ASSIGN   9329>>IF       9332>>ASSIGN   9333<<ASSIGN   9333>>ASSIGN
      9511>>ASSIGN   9594>>ASSIGN  10278<<ASSIGN  10440<<ASSIGN  10481>>ASSIGN  11163<<ASSIGN  11209>>IF
     11210>>ASSIGN  11257>>ASSIGN
KQ$MLH.PCSTAMP
      7606**DCL      9988>>ASSIGN  10164<<ASSIGN
KQ$MLH.QUEUE
      7588**DCL      9179>>IF
KQ$MLH.RQGC
      7597**DCL     11024<<ASSIGN
KQ$MLH.RQMEM
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:335  
      7595**DCL      9928<<ASSIGN  10970<<ASSIGN
KQ$MLH.RUSR#
      7578**DCL      9494>>IF       9501<<ASSIGN   9502<<ASSIGN  11384<<ASSIGN  11385>>IF      11392<>CALL
     11400<<ASSIGN
KQ$MLH.SUPERCNT
      7610**DCL      9205>>IF       9336<<ASSIGN   9336>>ASSIGN   9336>>ASSIGN   9515>>IF       9598>>IF
     11143<<ASSIGN  11143>>ASSIGN
KQ$MLH.TAIL$
      7571**DCL      9189>>IF       9190>>IF       9191>>IF       9191>>IF       9191>>IF       9198>>ASSIGN
      9199<<ASSIGN   9297<<ASSIGN   9334>>ASSIGN  11164<<ASSIGN  11169<<ASSIGN
KQ$MLH IN PROCEDURE DELMLH
      9017**DCL      9001--PROC     9104--ENTRY    9138--ENTRY
KQ$MLH.BUSY IN PROCEDURE DELMLH
      9033**DCL      9076>>IF
KQ$MLH.COUNT IN PROCEDURE DELMLH
      9064**DCL      9116>>ASSIGN   9117>>ASSIGN   9118<<ASSIGN
KQ$MLH.DELAY$ IN PROCEDURE DELMLH
      9025**DCL      9078>>ASSIGN   9081--ASSIGN   9083--DOCASE   9108<>CALL     9146>>IF
KQ$MLH.HEAD$ IN PROCEDURE DELMLH
      9021**DCL      9113>>ASSIGN   9120<<ASSIGN   9146>>IF
KQ$MLH.QUEUE IN PROCEDURE DELMLH
      9040**DCL      9115>>IF
KQ$MLH.SUPERCNT IN PROCEDURE DELMLH
      9062**DCL      9119<<ASSIGN
KQ$MLH.TAIL$ IN PROCEDURE DELMLH
      9023**DCL      9114>>ASSIGN   9121<<ASSIGN
KQ$NRMLMBLK.DVE.EOMCHAR
      8480**DCL      8482--REDEF
KQ$NRMLMBLK.DVE.VFC
      8482**DCL     11235>>IF      11235>>IF
KQ$NRMLMBLK.KEY1
      8406**DCL      8408--REDEF
KQ$NRMLMBLK.KEY2
      8415**DCL      8433--REDEF
KQ$NRMLMBLK.LNK$
      8380**DCL      8382--REDEF    8388--REDEF    8392--REDEF
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:336  
KQ$NRMLMBLK.MID.PRIMARY
      8539**DCL      9631>>IF       9660>>IF       9667>>IF       9694>>IF       9742>>IF       9749>>IF
     10095>>IF      10111>>IF      10196>>IF      10207>>IF
KQ$NRMLMBLK.RBLK
      8519**DCL      9826<<ASSIGN   9828<<ASSIGN
KQ$NRMLMBLK.STAR
      8468**DCL      9660>>IF       9673>>IF       9742>>IF       9755>>IF      10095>>IF      10196>>IF
KQ$NRMLMBLK.TYC
      8529**DCL      8531--REDEF
KQ$NRMLMBLK.XSP.MREQ$
      8435**DCL      8439--REDEF
KQ$QTN.LOCKCNT
      8188**DCL     10589<<ASSIGN  10589>>ASSIGN  10609<<ASSIGN  10609>>ASSIGN  10957<<ASSIGN  10957>>ASSIGN
     11087<<ASSIGN  11087>>ASSIGN
KQ$QTN.MLH
      8230**DCL      9587--ASSIGN
KQ$QTN.MXACT
      8172**DCL      8174--REDEF
KQ$QTN.STA.ACTTYC
      7894**DCL      7898--REDEF
KQ$QTN.STA.BTN.KEY
      7878**DCL     10805>>ASSIGN
KQ$QTN.STA.DCBLNK$
      7901**DCL      7904--REDEF    7908--REDEF
KQ$QTN.STA.EVCNT
      7987**DCL      7990--REDEF
KQ$QTN.STA.EVNT
      7953**DCL      7957--REDEF    7960--REDEF
KQ$QTN.STA.OPNBLKED
      8014**DCL      8017--REDEF
KQ$QTN.STA.OPNREJ
      8020**DCL      8022--REDEF
KQ$QTN.STA.SUCCREAD
      7943**DCL      7947--REDEF
KQ$QTN.STA.TCOUNT
      8072**DCL      8078--REDEF
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:337  
KQ$QTN.STA.VGOT$
      8057**DCL      8061--REDEF    8065--REDEF
KQ$RBLK
      7108**DCL     10798--ASSIGN  10809<<ASSIGN  10809>>ASSIGN  10811--ASSIGN
KQ$RBLK.BUF$
      7230**DCL      7232--REDEF
KQ$RBLK.CNACTD
      7144**DCL      7153--REDEF
KQ$RBLK.DBLKX
      7250**DCL      7254--REDEF
KQ$RBLK.EOFNONE
      7122**DCL      7125--REDEF    9779>>IF       9788>>IF
KQ$RBLK.ERR
      7156**DCL      9507<<ASSIGN   9590<<ASSIGN   9778>>IF       9781<<ASSIGN   9788<<ASSIGN   9805>>IF
      9940<<ASSIGN  10576<<ASSIGN  11297<<ASSIGN
KQ$RBLK.FROMQ
      7128**DCL      7131--REDEF
KQ$RBLK.HONK
      7159**DCL      9652>>IF       9714>>IF      10062>>IF
KQ$RBLK.KEY1
      7170**DCL      9658--IF       9721--IF      10093--IF      10194--IF
KQ$RBLK.KEY1L
      7165**DCL      9508>>ASSIGN   9591>>ASSIGN  11286>>ASSIGN
KQ$RBLK.KEY1R
      7169**DCL      7170--REDEF
KQ$RBLK.KEY2
      7175**DCL      9630--IF       9658--IF       9689--IF       9736--IF      10093--IF      10194--IF
KQ$RBLK.KEY2L
      7167**DCL      9509>>ASSIGN   9592>>ASSIGN  11287>>ASSIGN
KQ$RBLK.KEY2R
      7174**DCL      7175--REDEF
KQ$RBLK.LATCH
      7117**DCL      7119--REDEF
KQ$RBLK.LWRITES$
      7261**DCL      7265--REDEF
KQ$RBLK.MBLK$
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:338  
      7109**DCL      9825>>IF       9826>>ASSIGN   9827<<ASSIGN
KQ$RBLK.MID.PRIMARY
      7185**DCL      9631>>IF       9631>>IF       9667>>IF       9667>>IF       9694>>IF       9694>>IF
      9749>>IF       9749>>IF      10111>>IF      10111>>IF      10207>>IF      10207>>IF
KQ$RBLK.NCDDA
      7191**DCL      9829<<ASSIGN
KQ$RBLK.STATE
      7114**DCL      9784<<ASSIGN   9823<<ASSIGN
KQ$RBLKT
      8648**DCL     10810<<ASSIGN  10810>>ASSIGN
KQ$RBLKT.CNACTD
      8684**DCL      8693--REDEF
KQ$RBLKT.DBLK$
      8747**DCL      8751--REDEF    8754--REDEF
KQ$RBLKT.EOFNONE
      8662**DCL      8665--REDEF
KQ$RBLKT.FROMQ
      8668**DCL      8671--REDEF
KQ$RBLKT.KEY1R
      8709**DCL      8710--REDEF
KQ$RBLKT.KEY2R
      8714**DCL      8715--REDEF
KQ$RBLKT.LATCH
      8657**DCL      8659--REDEF
KQ$STA
      6770**DCL      9480<>CALL     9481<>CALL     9861<>CALL    11386<>CALL
KQ$STA.ACTTYC
      6822**DCL      6826--REDEF
KQ$STA.BTN.KEY
      6806**DCL     10803>>ASSIGN
KQ$STA.CG$
      6809**DCL      9506>>ASSIGN   9589>>ASSIGN  11284>>ASSIGN  11334>>ASSIGN  11448>>ASSIGN  11464>>ASSIGN
     11504>>ASSIGN
KQ$STA.DCBLNK$
      6829**DCL      6832--REDEF    6836--REDEF
KQ$STA.DSID
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:339  
      6909**DCL      9660>>IF       9742>>IF      10095>>IF      10196>>IF
KQ$STA.EVCNT
      6915**DCL      6918--REDEF
KQ$STA.EVNT
      6881**DCL      6885--REDEF    6888--REDEF
KQ$STA.GATE
      6848**DCL      9483<>CALL     9492<>CALL     9852<>CALL    10584<>CALL    10601<>CALL    10959<>CALL
     11070<>CALL    11082<>CALL    11093<>CALL    11345<>CALL    11390<>CALL    11405<>CALL    11417<>CALL
     11466<>CALL
KQ$STA.IDSC
      6850**DCL     11077>>IF
KQ$STA.LDCT$
      6811**DCL      9858>>IF       9859>>CALL    11242>>IF      11245>>IF      11245>>IF
KQ$STA.LOCKCNT
      6904**DCL      9856<<ASSIGN   9856>>ASSIGN  10962<<ASSIGN  10962>>ASSIGN  11075<<ASSIGN  11075>>ASSIGN
     11078>>IF
KQ$STA.MLH
      7038**DCL      9437--ASSIGN   9472--ASSIGN   9553--ASSIGN  10486<>CALL    11283--ASSIGN  11358--ASSIGN
KQ$STA.MLH.DELAYDQ$
      7085**DCL     11362--IF      11365--ASSIGN  11369--IF      11373<<ASSIGN  11382>>ASSIGN  11394<<ASSIGN
KQ$STA.OPNBLKED
      6942**DCL      6945--REDEF
KQ$STA.OPNREJ
      6948**DCL      6950--REDEF
KQ$STA.RBLK$
      6813**DCL      9441>>ASSIGN   9474>>ASSIGN   9583>>ASSIGN  11285>>ASSIGN
KQ$STA.RQLNK$
      7006**DCL      9087--ASSIGN
KQ$STA.SUCCREAD
      6871**DCL      6875--REDEF
KQ$STA.TCOUNT
      7000**DCL      7006--REDEF   10963<<ASSIGN  11291>>ASSIGN
KQ$STA.USR#
      6901**DCL     11384>>ASSIGN  11520>>ASSIGN  11525<>CALL
KQ$STA.VGOT$
      6985**DCL      6989--REDEF    6993--REDEF
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:340  
KQ$THDR.GATE
      7740**DCL     10591<>CALL    10607<>CALL    11085<>CALL    11098<>CALL    11523<>CALL    11536<>CALL
     11548<>CALL
KQD$DEFERGO
      8892**DCL-ENT 11020--CALL
KQD$DELDDA
      8893**DCL-ENT 10103--CALL
KQD$DELETE
      8894**DCL-ENT 10624--CALL
KQD$ERRLOG
      8895**DCL-ENT 10813--CALL
KQD$FETCH
      8896**DCL-ENT 10894--CALL
KQD$UNLOCK
      8897**DCL-ENT 10645--CALL
KQD$UPDATE
      8898**DCL-ENT 10653--CALL
KQD$UPDATED
      8899**DCL-ENT 10634--CALL
KQF$CHKMSG
      8900**DCL-ENT 10121--CALL
KQF$GOTMSG
      8901**DCL-ENT 10565--CALL    10572--CALL
KQG$GOTMSG
      8902**DCL-ENT  9859--CALL
KQG$GOTMSGSTA
      8903**DCL-ENT  9861--CALL
KQL$COUNTDLY
      8904**DCL-ENT  9108--CALL
KQL$DTCONT
      9434**ENTRY   11386--CALL
KQL$FCONT
     11272**ENTRY   11020--CALL
KQL$INSERT
      9172**ENTRY   10486--CALL
KQL$MDELAYM
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:341  
      8905**DCL-ENT  9185--CALL
KQL$MDELAYR
      8906**DCL-ENT  9480--CALL     9481--CALL
KQM$GETB
      8907**DCL-ENT 10247--CALL
KQM$GETBM
      8908**DCL-ENT 10997--CALL
KQM$GETMBLK
      8909**DCL-ENT 10124--CALL    10325--CALL
KQM$RELMBLK
      8910**DCL-ENT 10829--CALL
KQS$CQUEUE
      8911**DCL-ENT 10988--CALL    11538--CALL
KQS$CSQUISH
      8912**DCL-ENT 10976--CALL    11407--CALL
KQU$DELMSG
      8913**DCL-ENT 10201--CALL    10484--CALL    11256--CALL
KQW$XMITQ
      8914**DCL-ENT 11508--CALL
KQW$XMITSELF
      8915**DCL-ENT 11361--CALL
KQX$CHKTIME
      8916**DCL-ENT 10552--CALL    10874--CALL
KQX$SETTIME
      8917**DCL-ENT  9513--CALL     9596--CALL    10555--CALL    11067--CALL
KQZ$LOG
      8918**DCL-ENT 10801--CALL    10891--CALL
KQ_DEBUG
      3062**DCL     10785>>IF
KQ_ERRLOG_BFR.CODE
      8927**DCL     10797<<ASSIGN
KQ_ERRLOG_BFR.INFO
      8928**DCL     10799<<ASSIGN  10800--ASSIGN
KQ_ERRLOG_BFR.SIZ
      8928**DCL     10798<<ASSIGN
KQ_ERRLOG_GATE
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:342  
      3092**DCL     10795<>CALL
KQ_IMBLK.DVE.EOMCHAR
      3724**DCL      3726--REDEF
KQ_IMBLK.KEY1
      3650**DCL      3652--REDEF
KQ_IMBLK.KEY2
      3659**DCL      3677--REDEF
KQ_IMBLK.LNK$
      3624**DCL      3626--REDEF    3632--REDEF    3636--REDEF
KQ_IMBLK.TYC
      3773**DCL      3775--REDEF
KQ_IMBLK.XSP.MREQ$
      3679**DCL      3683--REDEF
KQ_IMLH
      3553**DCL      9337>>ASSIGN
KQ_IRBLK.BUF$
      3228**DCL      3230--REDEF
KQ_IRBLK.CNACTD
      3142**DCL      3151--REDEF
KQ_IRBLK.DBLKX
      3248**DCL      3252--REDEF
KQ_IRBLK.EOFNONE
      3120**DCL      3123--REDEF
KQ_IRBLK.FROMQ
      3126**DCL      3129--REDEF
KQ_IRBLK.KEY1R
      3167**DCL      3168--REDEF
KQ_IRBLK.KEY2R
      3172**DCL      3173--REDEF
KQ_IRBLK.LATCH
      3115**DCL      3117--REDEF
KQ_IRBLK.LWRITES$
      3259**DCL      3263--REDEF
KQ_IRBLKT.CNACTD
      3328**DCL      3337--REDEF
KQ_IRBLKT.DBLK$
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:343  
      3391**DCL      3395--REDEF    3398--REDEF
KQ_IRBLKT.EOFNONE
      3306**DCL      3309--REDEF
KQ_IRBLKT.FROMQ
      3312**DCL      3315--REDEF
KQ_IRBLKT.KEY1R
      3353**DCL      3354--REDEF
KQ_IRBLKT.KEY2R
      3358**DCL      3359--REDEF
KQ_IRBLKT.LATCH
      3301**DCL      3303--REDEF
KQ_LOG.KQL
      3078**DCL     10887>>IF
L$ IN PROCEDURE SRCHSUPER
      9902**DCL     10263<<ASSIGN  10265>>ASSIGN  10265>>ASSIGN  10266<<ASSIGN  10266>>ASSIGN  10268>>ASSIGN
     10273>>ASSIGN  10274>>ASSIGN  10277>>ASSIGN  10282>>IF      10283>>IF      10284>>IF      10285>>IF
     10286>>IF      10295>>ASSIGN
LATER IN PROCEDURE REG
     11042**LABEL   11000--GOTO
LOCK IN PROCEDURE TELL
     10597**PROC    10557--CALL    10577--CALL
LOUT IN PROCEDURE TELL
     10577**LABEL   10573--GOTO
M$
      8879**DCL     10072<<ASSIGN  10073>>IF      10074>>IF      10075>>IF      10076>>IF      10077>>IF
     10084<<ASSIGN  10085>>IF      10122<>CALL    10124<>CALL    10125>>ASSIGN  10181<<ASSIGN  10192<<ASSIGN
     10193>>DOWHILE 10194>>IF      10194>>IF      10196>>IF      10196>>IF      10196>>IF      10200<>CALL
     10201>>CALL    10202<<ASSIGN  10203<<ASSIGN  10207>>IF      10213>>IF      10214>>IF      10215>>IF
     10216>>IF      10217>>IF      10222>>ASSIGN  10223<<ASSIGN  10223>>ASSIGN  10247<>CALL    10262>>ASSIGN
     10263>>ASSIGN  10278>>ASSIGN  10279>>ASSIGN  10301>>ASSIGN  10304>>ASSIGN  10323<>CALL    10325<>CALL
     10326>>ASSIGN  10327>>ASSIGN  10328>>ASSIGN  10362<>CALL    10364>>ASSIGN  10382>>IF      10385>>ASSIGN
     10434>>ASSIGN  10516>>ASSIGN  10529>>ASSIGN  10532<>CALL    10533<<ASSIGN  10534<<ASSIGN  10995<<ASSIGN
     10997<>CALL    10999<<ASSIGN
M$ IN PROCEDURE GETMB
     10838**DCL     10836--PROC    10845<<ASSIGN  10847>>IF
M$ IN PROCEDURE REMOVEI
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:344  
     11187**DCL     11184--PROC    11191>>ASSIGN  11193>>ASSIGN
M0 IN PROCEDURE MERGEIT
     10437**LABEL   10446--GOTO    10448--GOTO
MB$ IN PROCEDURE FWCGL
     10475**DCL     10477<<ASSIGN  10484>>CALL    10486<>CALL    10500<<ASSIGN  10516<<ASSIGN  10529<<ASSIGN
     10565>>CALL    10572>>CALL
MBLK$
      8860**DCL      7294--IMP-PTR  8378--IMP-PTR  8861--REDEF    9176<<ASSIGN   9191>>IF       9191>>IF
      9191>>IF       9196>>ASSIGN   9197>>ASSIGN   9198>>ASSIGN   9199>>ASSIGN   9208>>IF       9209>>IF
      9210>>IF       9211>>IF       9212>>IF       9221>>IF       9222>>IF       9224>>IF       9225>>IF
      9229>>IF       9233>>IF       9234>>IF       9241>>IF       9242>>IF       9243>>IF       9244>>IF
      9245>>IF       9250>>ASSIGN   9251>>ASSIGN   9252>>ASSIGN   9254>>IF       9257>>IF       9269>>IF
      9271>>IF       9272>>IF       9282>>IF       9283>>IF       9284>>IF       9285>>IF       9286>>IF
      9295>>ASSIGN   9296>>ASSIGN   9297>>ASSIGN   9298>>ASSIGN   9299>>ASSIGN   9312<<ASSIGN   9332<<ASSIGN
      9334>>ASSIGN   9511<<ASSIGN   9594<<ASSIGN   9629>>DOWHILE  9630>>IF       9631>>IF       9639>>ASSIGN
      9640<<ASSIGN   9640>>ASSIGN   9650>>IF       9651>>IF       9657>>DOWHILE  9658>>IF       9658>>IF
      9660>>IF       9660>>IF       9660>>IF       9667>>IF       9673>>IF       9677>>ASSIGN   9678<<ASSIGN
      9678>>ASSIGN   9688>>DOWHILE  9689>>IF       9690>>IF       9690>>IF       9693>>IF       9694>>IF
      9701>>ASSIGN   9702<<ASSIGN   9702>>ASSIGN   9712>>IF       9713>>IF       9715>>IF       9720>>DOWHILE
      9721>>IF       9722>>IF       9722>>IF       9725>>ASSIGN   9736>>IF       9737>>IF       9737>>IF
      9740>>IF       9742>>IF       9742>>IF       9742>>IF       9749>>IF       9755>>IF       9759>>ASSIGN
      9760<<ASSIGN   9760>>ASSIGN   9824>>ASSIGN   9827>>ASSIGN   9828>>ASSIGN   9829>>ASSIGN   9839>>ASSIGN
      9849>>ASSIGN   9913>>IF       9915>>ASSIGN   9916>>ASSIGN   9916>>ASSIGN   9917>>IF       9918>>ASSIGN
      9918>>ASSIGN   9926>>IF       9931>>IF       9977>>IF       9978>>ASSIGN   9979>>ASSIGN   9981>>IF
      9981>>IF       9981>>IF       9984>>ASSIGN   9987>>ASSIGN   9987>>ASSIGN   9988>>ASSIGN  10001>>IF
     10003>>IF      10003>>IF      10003>>IF      10025>>IF      10031>>IF      10031>>IF      10031>>IF
     10033>>IF      10061>>IF      10069>>IF      10072>>ASSIGN  10081>>IF      10084>>ASSIGN  10111>>IF
     10150>>IF      10151>>ASSIGN  10159>>IF      10161>>ASSIGN  10161>>ASSIGN  10162>>ASSIGN  10163>>ASSIGN
     10168>>ASSIGN  10168>>ASSIGN  10169>>ASSIGN  10169>>ASSIGN  10192>>ASSIGN  10202>>ASSIGN  10268>>ASSIGN
     10270>>ASSIGN  10270>>ASSIGN  10271>>ASSIGN  10272>>ASSIGN  10273>>ASSIGN  10274>>ASSIGN  10275>>IF
     10276>>ASSIGN  10277>>ASSIGN  10280>>DOWHILE 10281>>ASSIGN  10290>>IF      10291>>IF      10292>>IF
     10302<<ASSIGN  10304<<ASSIGN  10327>>ASSIGN  10328>>ASSIGN  10329>>ASSIGN  10329>>ASSIGN  10336>>IF
     10336>>IF      10338>>ASSIGN  10341>>ASSIGN  10342>>ASSIGN  10364<<ASSIGN  10384>>ASSIGN  10385>>ASSIGN
     10406>>ASSIGN  10406>>ASSIGN  10438>>ASSIGN  10477>>ASSIGN  10481<<ASSIGN  10482<<ASSIGN  10533>>ASSIGN
     10812>>ASSIGN  10840>>IF      10841>>IF      10843>>IF      10844>>ASSIGN  10845>>ASSIGN  10846>>ASSIGN
     10878>>ASSIGN  10879>>IF      10880>>ASSIGN  10881>>ASSIGN  10890>>ASSIGN  10922>>ASSIGN  10924>>ASSIGN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:345  
     10943>>IF      10944>>ASSIGN  10947>>ASSIGN  10948>>ASSIGN  10952>>ASSIGN  10953>>ASSIGN  10992>>ASSIGN
     10993>>ASSIGN  10994>>ASSIGN  10995>>ASSIGN  11006>>ASSIGN  11007>>ASSIGN  11008>>ASSIGN  11012>>ASSIGN
     11013>>ASSIGN  11035>>ASSIGN  11072>>ASSIGN  11074>>ASSIGN  11115>>DOCASE  11117>>IF      11120>>IF
     11126>>IF      11127>>ASSIGN  11128>>ASSIGN  11129>>ASSIGN  11163>>ASSIGN  11164>>IF      11168>>ASSIGN
     11169>>IF      11191>>ASSIGN  11209>>IF      11212>>IF      11235>>IF      11235>>IF      11256>>CALL
     11257<<ASSIGN  11258<<ASSIGN  11275<<ASSIGN  11278>>IF      11282>>ASSIGN  11310<<ASSIGN
MBS
      8878**DCL      9725<<ASSIGN   9726>>IF       9910>>DOCASE  11072<<ASSIGN
MERGEIT IN PROCEDURE SRCHSUPER
     10431**PROC    10287--CALL
MLH$
      8872**DCL      7565--IMP-PTR  9175<<ASSIGN   9178>>ASSIGN   9178>>ASSIGN   9179>>IF       9183>>IF
      9185>>CALL     9189>>IF       9190>>IF       9191>>IF       9191>>IF       9191>>IF       9198>>ASSIGN
      9199>>ASSIGN   9204>>ASSIGN   9205>>IF       9297>>ASSIGN   9298>>ASSIGN   9311<<ASSIGN   9325<<ASSIGN
      9332>>ASSIGN   9333>>ASSIGN   9335>>ASSIGN   9335>>ASSIGN   9336>>ASSIGN   9336>>ASSIGN   9437<<ASSIGN
      9472<<ASSIGN   9477>>IF       9480>>CALL     9481>>CALL     9494>>IF       9494>>IF       9500>>ASSIGN
      9501>>ASSIGN   9502>>ASSIGN   9511>>ASSIGN   9515>>IF       9553<<ASSIGN   9587<<ASSIGN   9594>>ASSIGN
      9598>>IF       9789>>ASSIGN   9850>>ASSIGN   9928>>ASSIGN   9935>>IF       9980>>ASSIGN   9980>>ASSIGN
      9988>>ASSIGN  10164>>ASSIGN  10278>>ASSIGN  10405>>ASSIGN  10405>>ASSIGN  10440>>ASSIGN  10481>>ASSIGN
     10806>>ASSIGN  10889>>ASSIGN  10970>>ASSIGN  10971>>IF      10973>>IF      10974>>ASSIGN  11024>>ASSIGN
     11027>>ASSIGN  11143>>ASSIGN  11143>>ASSIGN  11156>>ASSIGN  11156>>ASSIGN  11163>>ASSIGN  11164>>ASSIGN
     11169>>ASSIGN  11194>>ASSIGN  11194>>ASSIGN  11209>>IF      11210>>ASSIGN  11257>>ASSIGN  11283<<ASSIGN
     11358<<ASSIGN  11359>>IF      11364>>CALL    11376>>ASSIGN  11379>>ASSIGN  11380>>ASSIGN  11384>>ASSIGN
     11385>>IF      11392>>CALL    11399>>ASSIGN  11400>>ASSIGN  11401>>IF      11403>>ASSIGN  11413>>ASSIGN
     11414>>ASSIGN
MRG IN PROCEDURE DXFDUN
     11358**LABEL   11366--GOTO    11374--GOTO    11425--GOTO    11431--GOTO
MRG IN PROCEDURE QFDUN
     11506**LABEL   11556--GOTO
MRGDUN IN PROCEDURE DXFDUN
     11394**LABEL   11360--GOTO    11361--CALLALT
MRGDUN IN PROCEDURE QFDUN
     11521**LABEL   11507--GOTO    11508--CALLALT
NDFR IN PROCEDURE REG
     10996**LABEL   11036--GOTO
NK$LDCT
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:346  
      5984**DCL      9859<>CALL
NK$LDCT.DDT$
      5986**DCL      5986--REDEF
NK$LDCT.IOQ$
      5985**DCL      5986--REDEF
NK$LDCT.LDCTX
      5987**DCL      5987--REDEF
NK$LDCT.LKFLG.ABORTED
      5999**DCL      6000--REDEF
NK$LDCT.RESCOD
      5992**DCL     11245>>IF
NK$LDCT.RLCID.LDCTX
      6009**DCL      6009--REDEF
NK$LDCT.STA$
      6005**DCL      6006--REDEF
NK$LDCT.SYMB$
      5984**DCL      5984--REDEF    5984--REDEF    5985--REDEF
NK$LDCT.USER
      5994**DCL     11245>>IF
NMBLKS IN PROCEDURE SRCHSUPER
      9903**DCL     10000<<ASSIGN  10001>>IF      10033>>IF      10065>>IF      10091>>IF      10147>>IF
     10158>>ASSIGN  10165>>IF      10176>>IF      10246>>ASSIGN  10261>>ASSIGN  10264>>DOINDEX 10270>>ASSIGN
     10419<<ASSIGN  10419>>ASSIGN
NODB IN PROCEDURE TELL
     10574**LABEL   10572--CALLALT
NOFETCH IN PROCEDURE SFETCH
     10894**LABEL   10894--CALLALT
NOTFOUND
      9768**LABEL    9642--GOTO     9680--GOTO     9704--GOTO     9732--GOTO    11298--GOTO
NOW IN PROCEDURE REG
     11047**LABEL   10998--GOTO    11040--GOTO
OUT IN PROCEDURE TELL
     10566**LABEL   10578--GOTO
P$
      8865**DCL      9203<<ASSIGN   9213<<ASSIGN   9238<<ASSIGN   9239>>ASSIGN   9246<<ASSIGN   9252>>ASSIGN
      9288<<ASSIGN   9298>>IF       9299>>ASSIGN   9326<<ASSIGN   9327>>IF       9329>>IF       9333>>ASSIGN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:347  
      9334>>ASSIGN   9335>>ASSIGN   9336>>ASSIGN   9337>>ASSIGN   9510<<ASSIGN   9593<<ASSIGN   9639<<ASSIGN
      9677<<ASSIGN   9701<<ASSIGN   9759<<ASSIGN   9999<<ASSIGN  10064>>ASSIGN  10066>>IF      10071<<ASSIGN
     10083<<ASSIGN  10087<<ASSIGN  10093>>IF      10093>>IF      10095>>IF      10095>>IF      10095>>IF
     10099>>IF      10101>>ASSIGN  10102>>ASSIGN  10116>>ASSIGN  10121>>CALL    10125>>ASSIGN  10132<<ASSIGN
     10132>>ASSIGN  10191<<ASSIGN  10200<>CALL    10202>>IF      10203>>ASSIGN  10222<<ASSIGN  10278>>IF
     10279>>ASSIGN  10294>>ASSIGN  10295<<ASSIGN  10297<<ASSIGN  10301<<ASSIGN  10302>>ASSIGN  10359<<ASSIGN
     10362<>CALL    10411>>ASSIGN  10411>>ASSIGN  10416<<ASSIGN  10416>>ASSIGN  10433>>ASSIGN  10481>>IF
     10482>>ASSIGN  10500>>ASSIGN  10532<>CALL    10533>>IF      10534>>ASSIGN  11161>>IF      11168>>ASSIGN
     11169>>ASSIGN  11208<<ASSIGN  11210<<ASSIGN  11212>>IF      11213<<ASSIGN  11213>>ASSIGN  11257>>IF
     11258>>ASSIGN
P$ IN PROCEDURE REMOVEI
     11186**DCL     11184--PROC    11190>>IF      11193>>ASSIGN
PARM
      5955**DCL       178--PROC     8957--ASSIGN   8967--ENTRY    8969--ASSIGN   8979--ENTRY    8981<>CALL
      9172--ENTRY    9174--ASSIGN   9308--ENTRY    9310--ASSIGN   9323--ENTRY    9325--ASSIGN   9416--ENTRY
      9434--ENTRY    9436--ASSIGN   9467--ENTRY    9471--ASSIGN   9549--ENTRY    9551--ASSIGN   9579--ENTRY
      9581--ASSIGN   9615--ENTRY    9617--ASSIGN  11272--ENTRY   11274--ASSIGN  11308--ENTRY   11310--ASSIGN
     11331--ENTRY   11333--ASSIGN  11445--ENTRY   11447--ASSIGN  11461--ENTRY   11463--ASSIGN  11482--ENTRY
     11493--ENTRY   11503--ASSIGN  11554--ASSIGN  11569--ENTRY
PARM$
      5956**DCL       178--PROC     5957--REDEF    8959>>CALL     8967--ENTRY    8971>>CALL     9172--ENTRY
      9175--ASSIGN   9308--ENTRY    9311--ASSIGN   9323--ENTRY    9326>>ASSIGN   9416--ENTRY    9467--ENTRY
      9579--ENTRY    9582>>ASSIGN   9839<<ASSIGN   9849<<ASSIGN
PARM$R
      5957**DCL      9487<<ASSIGN   9809<<ASSIGN   9813<<ASSIGN
PARM2
      5958**DCL       178--PROC     5959--REDEF    9172--ENTRY    9308--ENTRY
PARM2R$
      5959**DCL      9176>>ASSIGN   9185<>CALL     9196<<ASSIGN   9250<<ASSIGN   9295<<ASSIGN   9312>>ASSIGN
PULLONE IN PROCEDURE SRCHSUPER
     10399**PROC    10107--CALL    10126--CALL
Q
      8873**DCL      9505<<ASSIGN   9588<<ASSIGN   9804>>IF       9837>>IF       9927>>IF       9933>>IF
     10402>>IF      10581>>IF      10598>>IF      10801<>CALL    10804>>IF      10955>>IF      10968>>IF
     11023>>IF      11079>>IF      11095>>IF      11157>>IF      11195>>IF      11289<<ASSIGN
QFDUN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:348  
     11498**PROC    11484--CALL    11495--CALL
QFIND
      9620**LABEL    9598--GOTO
QFIND0
      9641**LABEL    9635--CALLALT  9638--CALLALT  9654--CALLALT
QFINDI
      9584**LABEL    9621--GOTO
QGDUN IN PROCEDURE QFDUN
     11552**ENTRY   11571--CALL
QTN$
      8882**DCL      7826--IMP-PTR  9582<<ASSIGN   9587>>ASSIGN   9619<<ASSIGN  10589>>ASSIGN  10589>>ASSIGN
     10609>>ASSIGN  10609>>ASSIGN  10805>>ASSIGN  10957>>ASSIGN  10957>>ASSIGN  11087>>ASSIGN  11087>>ASSIGN
RBLK$
      8859**DCL      7108--IMP-PTR  8648--IMP-PTR  9441<<ASSIGN   9474<<ASSIGN   9507>>ASSIGN   9508>>ASSIGN
      9509>>ASSIGN   9555<<ASSIGN   9583<<ASSIGN   9590>>ASSIGN   9591>>ASSIGN   9592>>ASSIGN   9620<<ASSIGN
      9630>>IF       9631>>IF       9631>>IF       9652>>IF       9658>>IF       9658>>IF       9667>>IF
      9667>>IF       9689>>IF       9694>>IF       9694>>IF       9714>>IF       9721>>IF       9736>>IF
      9749>>IF       9749>>IF       9778>>IF       9779>>IF       9781>>ASSIGN   9784>>ASSIGN   9788>>IF
      9788>>ASSIGN   9805>>IF       9823>>ASSIGN   9825>>IF       9826>>ASSIGN   9827>>ASSIGN   9829>>ASSIGN
      9940>>ASSIGN  10062>>IF      10093>>IF      10093>>IF      10111>>IF      10111>>IF      10194>>IF
     10194>>IF      10207>>IF      10207>>IF      10576>>ASSIGN  10809>>ASSIGN  10810>>ASSIGN  11285<<ASSIGN
     11286>>ASSIGN  11287>>ASSIGN  11297>>ASSIGN
RCVR
      8871**DCL      8958<<ASSIGN   8970<<ASSIGN   9076>>IF
RCVR IN PROCEDURE DXFDUN
     11353**DCL     11356<<ASSIGN  11371>>IF      11423<<ASSIGN  11430<<ASSIGN
REG
     10939**PROC     9935--CALL     9937--CALL    10374--CALL    10381--CALL    10875--CALL    10901--CALL
     10923--CALL
REG IN PROCEDURE TELL
     10569**LABEL   10565--CALLALT
REL$ IN PROCEDURE RELMB
     10826**DCL     10828<>CALL    10829<>CALL
RELMB
     10824**PROC    10233--CALL    10248--CALL    10363--CALL    10389--CALL    11005--CALL    11296--CALL
REM IN PROCEDURE REMOVES
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:349  
     11157**LABEL   11144--GOTO
REMOVE IN PROCEDURE REMOVES
     11153**ENTRY    9822--CALL    10306--CALL    10480--CALL    11255--CALL
REMOVEI
     11184**PROC    10200--CALL    10362--CALL    10532--CALL
REMOVES
     11140**PROC    10296--CALL
RETRY IN PROCEDURE SFETCH
     10871**LABEL   10902--GOTO
RTN IN PROCEDURE FWCGL
     10489**LABEL   10478--CALLALT 10501--CALLALT 10530--CALLALT
RTN IN PROCEDURE RELMB
     10830**LABEL   10828--CALLALT
S0 IN PROCEDURE SRCHSUPER
      9908**LABEL   10375--GOTO    10387--GOTO
S00 IN PROCEDURE SRCHSUPER
      9914**LABEL    9938--GOTO     9945--GOTO
S01 IN PROCEDURE SRCHSUPER
      9919**LABEL    9923--GOTO
S1 IN PROCEDURE SRCHSUPER
      9940**LABEL   10174--GOTO
S10 IN PROCEDURE SRCHSUPER
     10105**LABEL   10103--CALLALT
S12 IN PROCEDURE SRCHSUPER
     10107**LABEL   10104--GOTO
S14 IN PROCEDURE SRCHSUPER
     10124**LABEL   10122--CALLALT
S15 IN PROCEDURE SRCHSUPER
     10125**LABEL   10123--GOTO
S16 IN PROCEDURE SRCHSUPER
     10132**LABEL   10121--CALLALT
S2 IN PROCEDURE SRCHSUPER
      9978**LABEL   10012--GOTO    10028--GOTO
S21 IN PROCEDURE SRCHSUPER
     10150**LABEL   10177--GOTO
S3 IN PROCEDURE SRCHSUPER
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:350  
     10091**LABEL   10108--GOTO    10128--GOTO    10134--GOTO
S30 IN PROCEDURE SRCHSUPER
     10181**LABEL    9985--GOTO     9989--GOTO    10117--GOTO    10153--GOTO
S40 IN PROCEDURE SRCHSUPER
     10224**LABEL   10204--GOTO    10220--CALLALT
S50 IN PROCEDURE SRCHSUPER
     10244**LABEL   10079--GOTO    10213--GOTO    10215--GOTO    10217--GOTO    10225--GOTO
S60 IN PROCEDURE SRCHSUPER
     10289**LABEL   10282--GOTO    10284--GOTO    10286--GOTO
S9 IN PROCEDURE SRCHSUPER
     10323**LABEL   10247--CALLALT
S90 IN PROCEDURE SRCHSUPER
     10325**LABEL   10323--CALLALT
S92 IN PROCEDURE SRCHSUPER
     10326**LABEL   10324--GOTO
S94 IN PROCEDURE SRCHSUPER
     10360**LABEL   10073--GOTO    10075--GOTO    10077--GOTO    10085--GOTO    10218--GOTO
S98 IN PROCEDURE SRCHSUPER
     10374**LABEL   10105--GOTO
S99 IN PROCEDURE SRCHSUPER
     10381**LABEL   10124--CALLALT 10325--CALLALT
SAVP$ IN PROCEDURE SRCHSUPER
      9904**DCL      9905--REDEF    9965<<ASSIGN  10064<<ASSIGN  10073>>IF      10074>>IF      10075>>IF
     10076>>IF      10077>>IF      10087>>ASSIGN  10116<<ASSIGN  10212>>IF      10213>>IF      10214>>IF
     10215>>IF      10216>>IF      10217>>IF      10225>>IF      10294<<ASSIGN  10297>>ASSIGN  10326>>ASSIGN
     10353>>ASSIGN  10353>>ASSIGN
SC IN PROCEDURE FWCGL
     10502**LABEL   10503--GOTO    10517--CALLALT
SC_BCGRRC
      8919**DCL-ENT  9089--CALL    11369--CALL    11510--CALL
SC_BCGXRL
      8920**DCL-ENT  9328--CALL
SC_CGSUPR
      8921**DCL-ENT  9496--CALL     9726--CALL     9913--CALL     9926--CALL     9950--CALL    10002--CALL
     10035--CALL    10150--CALL    10291--CALL    10502--CALL    10840--CALL    10843--CALL    10908--CALL
     10943--CALL    10973--CALL    10985--CALL    11118--CALL    11120--CALL    11123--CALL    11278--CALL
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:351  
SC_CGSUSN
      8922**DCL-ENT 10786--CALL
SDFIND
      9697**LABEL    9516--GOTO     9717--CALLALT
SDFIND0
      9725**LABEL    9691--GOTO     9693--GOTO     9715--GOTO     9738--GOTO     9740--GOTO
SDFIND01
      9727**LABEL   11293--GOTO
SDFIND1
      9761**LABEL    9729--CALLALT  9746--CALLALT  9752--CALLALT  9758--CALLALT
SDFIND2
      9809**LABEL    9727--CALLALT
SFETCH
     10865**PROC     9920--CALL    10173--CALL
SFOUND
      9822**LABEL    9636--GOTO     9655--GOTO     9671--GOTO     9698--GOTO     9718--GOTO     9753--GOTO
SFOUND0
      9823**LABEL    9730--GOTO
SFOUND1
      9856**LABEL    9778--GOTO     9782--GOTO
SQFIND
      9673**LABEL    9599--GOTO
SQFIND0
      9703**LABEL    9697--CALLALT  9700--CALLALT
SRCHSUPER
      9899**PROC     9727--CALL
SSR$REG
      8923**DCL-ENT  9490--CALL    10554--CALL    11039--CALL    11049--CALL
SSR$RUE
      8924**DCL-ENT 11130--CALL    11392--CALL    11525--CALL
STA$
      8858**DCL      6770--IMP-PTR  9436<<ASSIGN   9437>>ASSIGN   9441>>ASSIGN   9471<<ASSIGN   9472>>ASSIGN
      9474>>ASSIGN   9480>>CALL     9483>>CALL     9492>>CALL     9506>>ASSIGN   9552<<ASSIGN   9553>>ASSIGN
      9581<<ASSIGN   9583>>ASSIGN   9589>>ASSIGN   9618<<ASSIGN   9660>>IF       9742>>IF       9852>>CALL
      9856>>ASSIGN   9856>>ASSIGN   9858>>IF       9859>>CALL     9861>>CALL    10095>>IF      10196>>IF
     10584>>CALL    10601>>CALL    10803>>ASSIGN  10953>>ASSIGN  10959>>CALL    10962>>ASSIGN  10962>>ASSIGN
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:352  
     10963>>ASSIGN  11070>>CALL    11075>>ASSIGN  11075>>ASSIGN  11077>>IF      11078>>IF      11082>>CALL
     11093>>CALL    11242>>IF      11245>>IF      11245>>IF      11282<<ASSIGN  11283>>ASSIGN  11284>>ASSIGN
     11285>>ASSIGN  11291>>ASSIGN  11333<<ASSIGN  11334>>ASSIGN  11345>>CALL    11358>>ASSIGN  11361<>CALL
     11362>>IF      11365>>ASSIGN  11369>>IF      11373>>ASSIGN  11382>>ASSIGN  11386>>CALL    11390>>CALL
     11394>>ASSIGN  11405>>CALL    11417>>CALL    11447<<ASSIGN  11448>>ASSIGN  11463<<ASSIGN  11464>>ASSIGN
     11466>>CALL    11503<<ASSIGN  11504>>ASSIGN
STATE IN PROCEDURE REG
     10941**DCL     10939--PROC    10944>>ASSIGN  10965>>DOCASE
S_CUN
      8925**DCL      9494>>IF       9502>>ASSIGN  10891<>CALL    10948>>ASSIGN
T$ IN PROCEDURE DELMLH
      9074**DCL      9114<<ASSIGN   9124>>ASSIGN
T1$ IN PROCEDURE SFETCH
     10867**DCL     10868--REDEF   10889<<ASSIGN  10891<>CALL
T1$R.H1 IN PROCEDURE SFETCH
     10869**DCL     10891<>CALL
T2$ IN PROCEDURE SFETCH
     10871**DCL     10890<<ASSIGN  10891<>CALL
TCOUNT
      8885**DCL      9914<<ASSIGN   9978>>ASSIGN   9979>>ASSIGN  10001>>IF      10033>>IF      10158<<ASSIGN
     10158>>ASSIGN  10159>>IF      10336>>IF      10963>>ASSIGN  11291<<ASSIGN
TELL IN PROCEDURE FWCGL
     10550**PROC    10478--CALL    10501--CALL    10517--CALL    10530--CALL
TERM
      8874**DCL      9418<<ASSIGN   9438<<ASSIGN   9469<<ASSIGN   9485>>IF       9501>>IF       9554<<ASSIGN
      9586<<ASSIGN   9769>>IF       9830>>IF      10801<>CALL    10808>>IF      10945>>IF      10963>>IF
     11033>>IF      11047>>IF      11076>>IF      11288<<ASSIGN
TIMCHK
      8857**DCL      9513<>CALL     9514<<ASSIGN   9596<>CALL     9597<<ASSIGN  10552<>CALL    10555<>CALL
     10556>>ASSIGN  10874<>CALL    11067<>CALL    11068>>ASSIGN
UNL IN PROCEDURE REG
     11091**PROC    10975--CALL    10978--CALL    10987--CALL    10990--CALL    11004--CALL    11019--CALL
     11030--CALL    11038--CALL    11043--CALL
UNL IN PROCEDURE TELL
     10580**PROC    10553--CALL    10569--CALL
UNLOCK IN PROCEDURE DELETE
PL6.E3A0      #001=KQL$DELMLHR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:29 Page:353  
     10642**ENTRY   10172--CALL    10232--CALL    10361--CALL    11101--CALL    11295--CALL
UNREG
     11111**PROC    11279--CALL    11312--CALL
UPDATE IN PROCEDURE DELETE
     10651**ENTRY   10019--CALL    10418--CALL
UPDATED IN PROCEDURE DELETE
     10632**ENTRY   10333--CALL    10356--CALL
USR# IN PROCEDURE UNREG
     11113**DCL     11127<<ASSIGN  11130<>CALL
X$
      8880**DCL      9204<<ASSIGN   9207>>DOWHILE  9208>>IF       9209>>IF       9210>>IF       9211>>IF
      9212>>IF       9213>>ASSIGN   9214<<ASSIGN   9214>>ASSIGN   9220>>DOWHILE  9221>>IF       9222>>IF
      9224>>IF       9225>>IF       9227>>IF       9229>>IF       9233>>IF       9234>>IF       9234>>IF
      9234>>IF       9234>>IF       9234>>IF       9238>>ASSIGN   9253>>IF       9254>>IF       9255>>ASSIGN
      9256>>IF       9257>>IF       9258>>ASSIGN   9268>>IF       9269>>IF       9269>>IF       9269>>IF
      9271>>IF       9272>>IF       9281>>IF       9282>>IF       9283>>IF       9284>>IF       9285>>IF
      9286>>IF       9288>>ASSIGN   9289<<ASSIGN   9289>>ASSIGN   9296>>ASSIGN   9297>>IF      10281<<ASSIGN
     10282>>IF      10283>>IF      10284>>IF      10285>>IF      10286>>IF      10436>>IF      10438>>ASSIGN
     10440>>ASSIGN  10441>>ASSIGN  10442>>ASSIGN  10445>>IF      10446>>IF      10447>>IF      10448>>IF
XIT IN PROCEDURE DELETE
     10625**LABEL   10635--GOTO    10646--GOTO
Z$
      8881**DCL      9239<<ASSIGN   9240>>DOWHILE  9241>>IF       9242>>IF       9243>>IF       9244>>IF
      9245>>IF       9246>>ASSIGN   9247<<ASSIGN   9247>>ASSIGN   9251>>ASSIGN  10434<<ASSIGN  10436>>IF
     10442>>ASSIGN  10445>>IF      10446>>IF      10447>>IF      10448>>IF      10449>>ASSIGN  10450<<ASSIGN
     10450>>ASSIGN

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:354  
     2730        1        /*T***********************************************************/
     2731        2        /*T*                                                         */
     2732        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2733        4        /*T*                                                         */
     2734        5        /*T***********************************************************/
     2735        6        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 6        ,IAD=0,PRB */
     2736        7        /**/
     2737        8        /**/
     2738        9        /*F* NAME:         KQL$DELAY
     2739       10             PURPOSE:      To provide routines for manipulating
     2740       11                           delay lists
     2741       12             DESCRIPTION:  A delay list is a circular linklist accessed
     2742       13                           via a pointer to its tail.
     2743       14
     2744       15                           Each link is actually two things, a pointer
     2745       16                           plus a code which tells what sort of item
     2746       17                           is being pointed to.  This pointer structure
     2747       18                           is framed by KQ$DPTR.  There is also a delete
     2748       19                           bit meaningful only to the caller and to
     2749       20                           KQL$DELAYDQ.
     2750       21        */
     2751       22        KQL$QDELAYR: PROC (PARM1,PARM2) ALTRET;
     2752       23        /**/
     2753       24
     2754       25
     2755       26
     2756       27        /**/
     2757       28        /* INCLUDES */
     2758       29        /**/
     2759       30        %INCLUDE KQ_SUBS_C;
     2760      330        %INCLUDE KQ_MAC_C;
     2761     2880        %INCLUDE KC$CP6V_C;
     2762     3000        %INCLUDE KC_CP6;
     2763     3560
     2764     3561
     2765     3562
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:355  
     2766     3563        /**/
     2767     3564        /* PARAMETERS */
     2768     3565        /**/
     2769     3566    1   DCL PARM1 UBIN;
     2770     3567    1   DCL PARM2 UBIN;
     2771     3568
     2772     3569
     2773     3570
     2774     3571        /**/
     2775     3572        /* BASED STRUCTURES */
     2776     3573        /**/
     2777     3574    1   DCL B$$PTR PTR BASED ALIGNED;
     2778     3575        %KQ$DPTR;
     2779     3602        %KQ_STA (FPTN=KQ$STA,STCLASS=BASED);
     2780     3941        %KQ_MBLK (FPTN=KQ$MBLK,STCLASS=BASED);
     2781     4211        %KQ_CG (FPTN=KQ$CG,STCLASS=BASED);
     2782     4950        %KQ_MLH (FPTN=KQ$MLH,STCLASS=BASED);
     2783     5020
     2784     5021
     2785     5022
     2786     5023        /**/
     2787     5024        /* AUTO */
     2788     5025        /**/
     2789     5026
     2790     5027
     2791     5028
     2792     5029        /**/
     2793     5030        /* ENTREFS */
     2794     5031        /**/
     2795     5032    1   DCL SC_BCGRRC     ENTRY    CONV(2,0);
     2796     5033        %EJECT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:356  
     2797     5034        /*F* NAME:         KQL$QDELAYR
     2798     5035             PURPOSE:      To enqueue a station for the anonymous
     2799     5036                           queue
     2800     5037             CALL:         KQL$QDELAYR (KQ$CG,KQ$STA)
     2801     5038             INPUT:        QUEUE gate locked.
     2802     5039             ENVIRONMENT:  On behalf of user.
     2803     5040             DESCRIPTION:  Puts the station on the anonymous queue
     2804     5041                           delay list.
     2805     5042        KQL$QDELAYR: ENTRY (PARM1,PARM2) ALTRET;  */
     2806     5043        /**/
     2807     5044    2           DO INHIBIT;
     2808     5045    2           CALL DELAYR (ADDR(PARM1)->KQ$CG.QUEUE.DELAY$,ADDR(PARM2));
     2809     5046    2           RETURN;
     2810     5047    2           END;
     2811     5048        /**/
     2812     5049        /*F* NAME:         KQL$QDELAYM
     2813     5050             PURPOSE:      To enqueue a message on the anonymous queue
     2814     5051                           delay list
     2815     5052             CALL:         KQL$QDELAYM (KQ$CG,MBLK$)
     2816     5053             INPUT:        QUEUE gate locked
     2817     5054             OUTPUT:       MBLK$ set to the MBLK's old LNK$
     2818     5055             DESCRIPTION:  Puts the msg pointed to by MBLK$ on the queue
     2819     5056                           delay list. */
     2820     5057    1   KQL$QDELAYM: ENTRY (PARM1,PARM2) ALTRET;
     2821     5058        /**/
     2822     5059    2           DO INHIBIT;
     2823     5060    2           CALL DELAYM (ADDR(PARM1)->KQ$CG.QUEUE.DELAY$,PARM2);
     2824     5061    2           RETURN;
     2825     5062    2           END;
     2826     5063        /**/
     2827     5064        /*F* NAME:         KQL$MDELAYR
     2828     5065             PURPOSE:      To enqueue a station for a station MLH
     2829     5066             CALL:         KQL$MDELAYR (KQ$MLH,KQ$STA)
     2830     5067             INPUT:        Target station (owner of MLH) gate locked
     2831     5068             DESCRIPTION:  Enqueues the passed station for access to
     2832     5069                           the given MLH. */
     2833     5070    1   KQL$MDELAYR: ENTRY (PARM1,PARM2) ALTRET;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:357  
     2834     5071        /**/
     2835     5072    2           DO INHIBIT;
     2836     5073    2           CALL DELAYR (ADDR(PARM1)->KQ$MLH.DELAY$,ADDR(PARM2));
     2837     5074    2           RETURN;
     2838     5075    2           END;
     2839     5076        /**/
     2840     5077        /*F* NAME:         KQL$MDELAYM
     2841     5078             PURPOSE:      To enqueue a message on an MLH's
     2842     5079                           delay list
     2843     5080             CALL:         KQL$MDELAYM (KQ$MLH,MBLK$)
     2844     5081             INPUT:        Target station (owner of MLH) gate locked
     2845     5082             OUTPUT:       MBLK$ set to the MBLK's old LNK$
     2846     5083             DESCRIPTION:  Puts the msg pointed to by MBLK$ on the MLH
     2847     5084                           delay list. */
     2848     5085    1   KQL$MDELAYM: ENTRY (PARM1,PARM2) ALTRET;
     2849     5086        /**/
     2850     5087    2           DO INHIBIT;
     2851     5088    2           CALL DELAYM (ADDR(PARM1)->KQ$MLH.DELAY$,PARM2);
     2852     5089    2           RETURN;
     2853     5090    2           END;
     2854     5091        %EJECT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:358  
     2855     5092        /*D* NAME:         DELAYM
     2856     5093             PURPOSE:      To insert an MBLK on a delay list
     2857     5094             CALL:         DELAYM (DELAY$,MBLK$)
     2858     5095             OUTPUT:       Item inserted, MBLK$ set to MBLK's old LNK$
     2859     5096        */
     2860     5097    1   DELAYM: PROC (DELAY$,MBLK$);
     2861     5098        /**/
     2862     5099    2   DCL DELAY$ PTR;
     2863     5100    2   DCL MBLK$ PTR;
     2864     5101    2   DCL D$ PTR;
     2865     5102    2   DCL M$ PTR;
     2866     5103    2   DCL ITEM$ PTR;
     2867     5104        /**/
     2868     5105    3           DO INHIBIT;
     2869     5106    3           D$=DELAY$;
     2870     5107    3           ADDR(D$)->KQ$DPTR.X='0'B;
     2871     5108    3           M$=MBLK$;
     2872     5109    3           MBLK$=MBLK$->KQ$MBLK.LNK$;
     2873     5110    3           ITEM$=M$;
     2874     5111    3           ADDR(ITEM$)->KQ$DPTR.X.CODE=KQRA_MBLK#;
     2875     5112    3           IF D$ = ADDR(NIL) THEN
     2876     5113    4             DO;
     2877     5114    4             M$->KQ$MBLK.LNK$=ITEM$;
     2878     5115    4   M_OUT:    ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(DELAY$)->KQ$DPTR.X.FLGS;
     2879     5116    4             DELAY$=ITEM$;
     2880     5117    4             RETURN;
     2881     5118    4             END;
     2882     5119        /**/
     2883     5120    4             DO CASE (ADDR(DELAY$)->KQ$DPTR.X.CODE);
     2884     5121    4               CASE (KQRA_MBLK#);
     2885     5122    4                 M$->KQ$MBLK.LNK$=D$->KQ$MBLK.LNK$;
     2886     5123    4                 ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(D$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS;
     2887     5124    4                 D$->KQ$MBLK.LNK$=ITEM$;
     2888     5125    4               CASE (KQRA_RSTA#);
     2889     5126    4                 M$->KQ$MBLK.LNK$=D$->KQ$STA.RQLNK$;
     2890     5127    4                 ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(D$->KQ$STA.RQLNK$)->KQ$DPTR.X.FLGS;
     2891     5128    4                 D$->KQ$STA.RQLNK$=ITEM$;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:359  
     2892     5129    4             END;
     2893     5130    3           ADDR(M$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS='0'B;
     2894     5131    3           GOTO M_OUT;
     2895     5132    3           END; /* INHIBIT */
     2896     5133        /**/
     2897     5134        /**/
     2898     5135        /*D* NAME:         DELAYR
     2899     5136             PURPOSE:      To insert a reader's KQ$STA on a delay list
     2900     5137             CALL:         DELAYR (DELAY$,STA$);
     2901     5138             OUTPUT:       Item inserted.
     2902     5139        */
     2903     5140    2   DELAYR: ENTRY (DELAY$,MBLK$);
     2904     5141        /**/
     2905     5142    3           DO INHIBIT;
     2906     5143    3           D$=DELAY$;
     2907     5144    3           ADDR(D$)->KQ$DPTR.X='0'B;
     2908     5145    3           ITEM$=MBLK$;
     2909     5146    3           ADDR(ITEM$)->KQ$DPTR.X.CODE=KQRA_RSTA#;
     2910     5147    3           IF D$ = ADDR(NIL) THEN
     2911     5148    4             DO;
     2912     5149    4             MBLK$->KQ$STA.RQLNK$=ITEM$;
     2913     5150    4   R_OUT:    ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(DELAY$)->KQ$DPTR.X.FLGS;
     2914     5151    4             DELAY$=ITEM$;
     2915     5152    4             RETURN;
     2916     5153    4             END;
     2917     5154        /**/
     2918     5155    4             DO CASE (ADDR(DELAY$)->KQ$DPTR.X.CODE);
     2919     5156    4               CASE (KQRA_MBLK#);
     2920     5157    4                 MBLK$->KQ$STA.RQLNK$=D$->KQ$MBLK.LNK$;
     2921     5158    4                 ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(D$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS;
     2922     5159    4                 D$->KQ$MBLK.LNK$=ITEM$;
     2923     5160    4               CASE (KQRA_RSTA#);
     2924     5161    4                 MBLK$->KQ$STA.RQLNK$=D$->KQ$STA.RQLNK$;
     2925     5162    4                 ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(D$->KQ$STA.RQLNK$)->KQ$DPTR.X.FLGS;
     2926     5163    4                 D$->KQ$STA.RQLNK$=ITEM$;
     2927     5164    4             END;
     2928     5165    3           ADDR(MBLK$->KQ$STA.RQLNK$)->KQ$DPTR.X.FLGS='0'B;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:360  
     2929     5166    3           GOTO R_OUT;
     2930     5167    3           END; /* INHIBIT */
     2931     5168    2   END DELAYM;
     2932     5169        %EJECT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:361  
     2933     5170        /**/
     2934     5171        /*F* NAME:         KQL$COUNTDLY
     2935     5172             PURPOSE:      To count the items in a delay list
     2936     5173             CALL:         KQL$COUNTDLY (DELAY$,TYP)
     2937     5174             INPUT:        TYP = KQRA_XXXX#  ---> type of item to be counted
     2938     5175             OUTPUT:       TYP = count found
     2939     5176             DESCRIPTION:  The number of items of the specified type on the
     2940     5177                           specified DELAY$ list are counted and returned in
     2941     5178                           TYP. The owning MLH's gate is assumed to be locked
     2942     5179                           upon entry and is not touched throughout.
     2943     5180        */
     2944     5181    1   KQL$COUNTDLY: ENTRY (PARM1,PARM2) ALTRET;
     2945     5182        /**/
     2946     5183    1         CALL COUNTIT (PARM1,PARM2);
     2947     5184    1         RETURN;
     2948     5185        /**/
     2949     5186    1   COUNTIT: PROC (DELAY$,COUNT);
     2950     5187        /**/
     2951     5188    2   DCL DELAY$ PTR;
     2952     5189    2   DCL COUNT UBIN;
     2953     5190    2   DCL TYP UBIN;
     2954     5191    2   DCL CODE UBIN;
     2955     5192    2   DCL D$ PTR;
     2956     5193    2   DCL DLY$ PTR;
     2957     5194        /**/
     2958     5195    2         TYP=COUNT;
     2959     5196    2         COUNT=0;
     2960     5197    2         DLY$=DELAY$;
     2961     5198    2         ADDR(DLY$)->KQ$DPTR.X = '0'B;
     2962     5199    2         IF DLY$=ADDR(NIL) THEN RETURN;
     2963     5200    2         D$=DELAY$;
     2964     5201    2         CODE=ADDR(D$)->KQ$DPTR.X.CODE;
     2965     5202    2         ADDR(D$)->KQ$DPTR.X='0'B;
     2966     5203    3           DO WHILE('1'B);
     2967     5204    3           IF CODE=TYP THEN COUNT=COUNT+1;
     2968     5205    4             DO CASE (CODE);
     2969     5206    4               CASE (KQRA_MBLK#);
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:362  
     2970     5207    4                 D$=D$->KQ$MBLK.LNK$;
     2971     5208    4               CASE (KQRA_RSTA#);
     2972     5209    4                 D$=D$->KQ$STA.RQLNK$;
     2973     5210    4               CASE (ELSE);
     2974     5211    4                 CALL SC_BCGRRC;
     2975     5212    4             END;
     2976     5213    3           CODE=ADDR(D$)->KQ$DPTR.X.CODE;
     2977     5214    3           ADDR(D$)->KQ$DPTR.X='0'B;
     2978     5215    3           IF D$=DLY$ THEN RETURN;
     2979     5216    3           END;
     2980     5217    2   END COUNTIT;
     2981     5218        %EJECT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:363  
     2982     5219        /**/
     2983     5220        /*F* NAME:         KQL$DELAYDQ
     2984     5221             PURPOSE:      To dequeue a delayed item from a delay list
     2985     5222             CALL:         KQL$DELAYDQ (DELAY$,DQ$) ALTRET(DONE)
     2986     5223             DESCRIPTION:  ALTRETs if the list is empty.
     2987     5224                           Else RETURNs with DQ$, a KQ$DPTR
     2988     5225                           which points to the item.
     2989     5226
     2990     5227                           If the KQ$DPTR has any FLGS set then the caller
     2991     5228                           is expected to process them, zap the FLGS, and
     2992     5229                           return.
     2993     5230
     2994     5231                           The caller is expected to pass as DQ$, either
     2995     5232                           KQ$CG.QUEUE.DELAYDQ$ or STA$->KQ$STA.MLH.DELAYDQ$
     2996     5233                           so that KQL$RCVRDLY may be able to rebuild the
     2997     5234                           DELAY$ list if we crash before completing delivery
     2998     5235                           of the MBLK, deletion of the message list or
     2999     5236                           continuing the delayed read. It is very important
     3000     5237                           that these pointers be used so that we don't lose
     3001     5238                           a message in the event of a crash at this time.
     3002     5239        */
     3003     5240    1   KQL$DELAYDQ: ENTRY (PARM1,PARM2) ALTRET;
     3004     5241        /**/
     3005     5242    1         CALL DEQ (PARM1,PARM2) ALTRET(ALTRT);
     3006     5243    1         RETURN;
     3007     5244    1   ALTRT: ;
     3008     5245    1         ALTRETURN;
     3009     5246        /**/
     3010     5247    1   DEQ:  PROC (DELAY$,P$) ALTRET;
     3011     5248        /**/
     3012     5249    2   DCL DELAY$ PTR;
     3013     5250    2   DCL P$ PTR;
     3014     5251    2   DCL D$ PTR;
     3015     5252    2   DCL D1$ PTR;
     3016     5253    2   DCL D2$ PTR;
     3017     5254    2   DCL SVDELBIT BIT(1);
     3018     5255        /**/
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:364  
     3019     5256    3           DO INHIBIT;
     3020     5257    3           IF DELAY$=ADDR(NIL) THEN ALTRETURN;
     3021     5258    4           IF ADDR(DELAY$)->KQ$DPTR.X.FLGS THEN DO;
     3022     5259    4             P$=ADDR(NIL);
     3023     5260    4             ADDR(P$)->KQ$DPTR.X.FLGS='1'B;
     3024     5261    4             ADDR(DELAY$)->KQ$DPTR.X.FLGS='0'B;
     3025     5262    4             RETURN;
     3026     5263    4             END;
     3027     5264    3           D$=DELAY$;
     3028     5265    3           ADDR(D$)->KQ$DPTR.X='0'B;
     3029     5266    4             DO CASE(ADDR(DELAY$)->KQ$DPTR.X.CODE);
     3030     5267    4               CASE(KQRA_MBLK#);
     3031     5268    4                 D1$=ADDR(D$->KQ$MBLK.LNK$);
     3032     5269    4               CASE(KQRA_RSTA#);
     3033     5270    4                 D1$=ADDR(D$->KQ$STA.RQLNK$);
     3034     5271    4               CASE (ELSE);
     3035     5272    4                 CALL SC_BCGRRC;
     3036     5273    4             END;
     3037     5274    3           P$=D1$->B$$PTR;
     3038     5275    3           D2$=P$;
     3039     5276    3           ADDR(D2$)->KQ$DPTR.X='0'B;
     3040     5277    3           IF D$=D2$
     3041     5278    3           THEN DELAY$=ADDR(NIL);
     3042     5279    4           ELSE DO;
     3043     5280    4             SVDELBIT=D1$->KQ$DPTR.X.FLGS;
     3044     5281    5               DO CASE(ADDR(P$)->KQ$DPTR.X.CODE);
     3045     5282    5                 CASE(KQRA_MBLK#);
     3046     5283    5                   D1$->B$$PTR=D2$->KQ$MBLK.LNK$;
     3047     5284    5                 CASE(KQRA_RSTA#);
     3048     5285    5                   D1$->B$$PTR=D2$->KQ$STA.RQLNK$;
     3049     5286    5                 CASE (ELSE);
     3050     5287    5                   CALL SC_BCGRRC;
     3051     5288    5               END;
     3052     5289    4             D1$->KQ$DPTR.X.FLGS=SVDELBIT;
     3053     5290    4             END;
     3054     5291    4             DO CASE(ADDR(P$)->KQ$DPTR.X.CODE);
     3055     5292    4               CASE(KQRA_MBLK#);
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:365  
     3056     5293    4                 ADDR(DELAY$)->KQ$DPTR.X.FLGS=ADDR(D2$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS;
     3057     5294    4                 D2$->KQ$MBLK.LNK$=ADDR(NIL);
     3058     5295    4               CASE(KQRA_RSTA#);
     3059     5296    4                 ADDR(DELAY$)->KQ$DPTR.X.FLGS=ADDR(D2$->KQ$STA.RQLNK$)->KQ$DPTR.X.FLGS;
     3060     5297    4                 D2$->KQ$STA.RQLNK$=ADDR(NIL);
     3061     5298    4               CASE (ELSE);
     3062     5299    4                 CALL SC_BCGRRC;
     3063     5300    4             END;
     3064     5301    3           END; /* INHIBIT */
     3065     5302    2   END DEQ;
     3066     5303        %EJECT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:366  
     3067     5304        /**/
     3068     5305        /*F* NAME:         KQL$RCVRDLY
     3069     5306             PURPOSE:      To recover a crashed delay list
     3070     5307             CALL:         CALL KQL$RCVRDLY(DELAY$,DQ$)
     3071     5308                             where DELAY$ is KQ$CG.QUEUE.DELAY$ for the anon-Q
     3072     5309                                          or KQ$STA.MLH.DELAY$ for a directed list
     3073     5310                               and DQ$ is KQ$CG.QUEUE.DELAYDQ$ for the anon-Q
     3074     5311                                       or KQ$STA.MLH.DELAYDQ$ for a directed list
     3075     5312             DESCRIPTION:  When the anon-Q or an MLH is busy and some process
     3076     5313                           needs to access the MLH, we place this process on
     3077     5314                           the DELAY$ list for later processing. The DELAY$
     3078     5315                           list may then have on it MBLKs for messages waiting
     3079     5316                           to be written into the list or STATION blocks for
     3080     5317                           readers waiting to read the list. Also, the
     3081     5318                           delete-message-list process is ordered on the
     3082     5319                           DELAY$ chain by setting a bit in an item's pointer
     3083     5320                           to the next item. The deletion process is to occur
     3084     5321                           AFTER the block carrying the pointer is processed.
     3085     5322                           This delete bit (KQ$DPTR.X.FLGS) is carried around
     3086     5323                           in the chain until it makes its way onto the DELAY$
     3087     5324                           pointer. At this point, the list is to deleted.
     3088     5325
     3089     5326                           When a process which restricts access to an MLH
     3090     5327                           completes, it must call KQL$xDFDUN(L) to process
     3091     5328                           this DELAY$ list (among other things). When we
     3092     5329                           process this list, we MUST make sure we don't lose
     3093     5330                           any MBLKs or neglect to delete the message list if
     3094     5331                           a SCREECH occurs. In order to do this, we place
     3095     5332                           the process's block (STATION or MBLK) on the
     3096     5333                           DELAYDQ$ pointer. This is then examined when we
     3097     5334                           re-open a CG and this procedure is called to
     3098     5335                           re-build the DELAY$ list.
     3099     5336        */
     3100     5337    1   KQL$RCVRDLY: ENTRY (PARM1,PARM2) ALTRET;
     3101     5338        /**/
     3102     5339    1         CALL RCVR (PARM1,PARM2);
     3103     5340    1         RETURN;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:367  
     3104     5341        /**/
     3105     5342    1   RCVR: PROC (DELAY$,DQ$);
     3106     5343        /**/
     3107     5344    2   DCL DELAY$ PTR;
     3108     5345    2   DCL DQ$ PTR;
     3109     5346    2   DCL DQ$R REDEF DQ$ UBIN;
     3110     5347    2   DCL D$ PTR;
     3111     5348    2   DCL MBLK$ PTR;
     3112     5349    2   DCL P$ PTR;
     3113     5350    2   DCL DELBIT BIT(1);
     3114     5351        /**/
     3115     5352    3           DO INHIBIT;
     3116     5353    3           IF DQ$=ADDR(NIL) OR DQ$R=0 OR ADDR(DQ$)->KQ$DPTR.X.CODE=KQRA_RSTA#
     3117     5354    3           THEN GOTO NILOUT;
     3118     5355    4           IF ADDR(DQ$)->KQ$DPTR.X.FLGS THEN DO;
     3119     5356    4             ADDR(DELAY$)->KQ$DPTR.X.FLGS='1'B;
     3120     5357    4             GOTO NILOUT;
     3121     5358    4             END;
     3122     5359    3           ADDR(DQ$)->KQ$DPTR.X.CODE=KQRA_MBLK#;
     3123     5360                             /* We must put KQRA_MBLK# into the code field since     */
     3124     5361                             /* we obliterate the CODE field to turn the KQ$DPTR     */
     3125     5362                             /* to make it look like a pointer when we try to        */
     3126     5363                             /* deliver the MBLK out of KQW$XMITxxx.                 */
     3127     5364    3           DELBIT=ADDR(DELAY$)->KQ$DPTR.X.FLGS;
     3128     5365    3           ADDR(DELAY$)->KQ$DPTR.X.FLGS='0'B;
     3129     5366    3           MBLK$=DQ$;
     3130     5367    3           ADDR(MBLK$)->KQ$DPTR.X='0'B;
     3131     5368    3           IF DELAY$=ADDR(NIL)
     3132     5369    4           THEN DO;
     3133     5370    4             DELAY$=DQ$;
     3134     5371    4             MBLK$->KQ$MBLK.LNK$=DQ$;
     3135     5372    4             ADDR(MBLK$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS=DELBIT;
     3136     5373    4             END;
     3137     5374    4           ELSE DO;
     3138     5375    4             D$=DELAY$;
     3139     5376    4             ADDR(D$)->KQ$DPTR.X='0'B;
     3140     5377    5               DO CASE(ADDR(DELAY$)->KQ$DPTR.X.CODE);
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:368  
     3141     5378    5                 CASE(KQRA_MBLK#);
     3142     5379    5                   P$=ADDR(D$->KQ$MBLK.LNK$);
     3143     5380    5                 CASE(KQRA_RSTA#);
     3144     5381    5                   P$=ADDR(D$->KQ$STA.RQLNK$);
     3145     5382    5               END;
     3146     5383    4             MBLK$->KQ$MBLK.LNK$=P$->B$$PTR;
     3147     5384    4             P$->B$$PTR=DQ$;
     3148     5385    4             P$->KQ$DPTR.X.FLGS=ADDR(MBLK$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS;
     3149     5386    4             ADDR(MBLK$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS=DELBIT;
     3150     5387    4             END;
     3151     5388    3   NILOUT: ;
     3152     5389    3           DQ$=ADDR(NIL);
     3153     5390    3           RETURN;
     3154     5391    3           END; /* INHIBIT */
     3155     5392    2   END RCVR;
     3156     5393    1   END KQL$QDELAYR;

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:369  
--  Include file information  --

   KC_CP6.:E05TOU  is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQL$QDELAYR.

   Procedure KQL$QDELAYR requires 479 words for executable code.
   Procedure KQL$QDELAYR requires 16 words of local(AUTO) storage.

    No errors detected in file KQL$LIST.:E05TSI    .

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:370  

 Object Unit name= KQL$QDELAYR                                File name= KQL$LIST.:E05TOU
 UTS= JUL 30 '97 01:33:51.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   479    737  KQL$QDELAYR
    1  RoData even  none     2      2  KQL$QDELAYR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  KQL$QDELAYR
     0     15          yes     yes      Std        2  KQL$QDELAYM
     0     30          yes     yes      Std        2  KQL$MDELAYR
     0     45          yes     yes      Std        2  KQL$MDELAYM
     0    267          yes     yes      Std        2  KQL$COUNTDLY
     0    371          yes     yes      Std        2  KQL$DELAYDQ
     0    573          yes     yes      Std        2  KQL$RCVRDLY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:371  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_BCGRRC                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:372  


     2730        1        /*T***********************************************************/
     2731        2        /*T*                                                         */
     2732        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     2733        4        /*T*                                                         */
     2734        5        /*T***********************************************************/
     2735        6       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 6        ,IAD=0,PRB */
     2736        7        /**/
     2737        8        /**/
     2738        9        /*F* NAME:         KQL$DELAY
     2739       10             PURPOSE:      To provide routines for manipulating
     2740       11                           delay lists
     2741       12             DESCRIPTION:  A delay list is a circular linklist accessed
     2742       13                           via a pointer to its tail.
     2743       14
     2744       15                           Each link is actually two things, a pointer
     2745       16                           plus a code which tells what sort of item
     2746       17                           is being pointed to.  This pointer structure
     2747       18                           is framed by KQ$DPTR.  There is also a delete
     2748       19                           bit meaningful only to the caller and to
     2749       20                           KQL$DELAYDQ.
     2750       21        */
     2751       22        KQL$QDELAYR: PROC (PARM1,PARM2) ALTRET;

     22  0 000000   000000 700200 xent  KQL$QDELAYR  TSX0  ! X66_AUTO_2
         0 000001   000020 000002                    ZERO    16,2

     2752       23        /**/
     2753       24
     2754       25
     2755       26
     2756       27        /**/
     2757       28        /* INCLUDES */
     2758       29        /**/
     2759       30        %INCLUDE KQ_SUBS_C;
     2760      330        %INCLUDE KQ_MAC_C;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:373  
     2761     2880        %INCLUDE KC$CP6V_C;
     2762     3000        %INCLUDE KC_CP6;
     2763     3560
     2764     3561
     2765     3562
     2766     3563        /**/
     2767     3564        /* PARAMETERS */
     2768     3565        /**/
     2769     3566    1   DCL PARM1 UBIN;
     2770     3567    1   DCL PARM2 UBIN;
     2771     3568
     2772     3569
     2773     3570
     2774     3571        /**/
     2775     3572        /* BASED STRUCTURES */
     2776     3573        /**/
     2777     3574    1   DCL B$$PTR PTR BASED ALIGNED;
     2778     3575        %KQ$DPTR;
     2779     3602        %KQ_STA (FPTN=KQ$STA,STCLASS=BASED);
     2780     3941        %KQ_MBLK (FPTN=KQ$MBLK,STCLASS=BASED);
     2781     4211        %KQ_CG (FPTN=KQ$CG,STCLASS=BASED);
     2782     4950        %KQ_MLH (FPTN=KQ$MLH,STCLASS=BASED);
     2783     5020
     2784     5021
     2785     5022
     2786     5023        /**/
     2787     5024        /* AUTO */
     2788     5025        /**/
     2789     5026
     2790     5027
     2791     5028
     2792     5029        /**/
     2793     5030        /* ENTREFS */
     2794     5031        /**/
     2795     5032    1   DCL SC_BCGRRC     ENTRY    CONV(2,0);
     2796     5033        %EJECT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:374  
     2797     5034        /*F* NAME:         KQL$QDELAYR
     2798     5035             PURPOSE:      To enqueue a station for the anonymous
     2799     5036                           queue
     2800     5037             CALL:         KQL$QDELAYR (KQ$CG,KQ$STA)
     2801     5038             INPUT:        QUEUE gate locked.
     2802     5039             ENVIRONMENT:  On behalf of user.
     2803     5040             DESCRIPTION:  Puts the station on the anonymous queue
     2804     5041                           delay list.
     2805     5042        KQL$QDELAYR: ENTRY (PARM1,PARM2) ALTRET;  */
     2806     5043        /**/
     2807     5044    2           DO INHIBIT;

     2808     5045    2           CALL DELAYR (ADDR(PARM1)->KQ$CG.QUEUE.DELAY$,ADDR(PARM2));

   5045  0 000002   200004 236300                    LDQ   ! @PARM2,,AUTO
         0 000003   200016 756300                    STQ   ! DELBIT+2,,AUTO
         0 000004   200016 630700                    EPPR0 ! DELBIT+2,,AUTO
         0 000005   200010 450700                    STP0  ! @DELAY$+1,,AUTO
         0 000006   200003 236300                    LDQ   ! @PARM1,,AUTO
         0 000007   000062 036203                    ADLQ  ! 50,DU
         0 000010   200007 756300                    STQ   ! @PARM2+3,,AUTO
         0 000011   000166 701200 0                  TSX1  ! DELAYR
         0 000012   000000 011200                    NOP   ! 0

     2809     5046    2           RETURN;

   5046  0 000013   000000 702200 xent               TSX2  ! X66_ARET

     2810     5047    2           END;

   5047  0 000014   000017 710000 0                  TRA     s:5060

     2811     5048        /**/
     2812     5049        /*F* NAME:         KQL$QDELAYM
     2813     5050             PURPOSE:      To enqueue a message on the anonymous queue
     2814     5051                           delay list
     2815     5052             CALL:         KQL$QDELAYM (KQ$CG,MBLK$)
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:375  
     2816     5053             INPUT:        QUEUE gate locked
     2817     5054             OUTPUT:       MBLK$ set to the MBLK's old LNK$
     2818     5055             DESCRIPTION:  Puts the msg pointed to by MBLK$ on the queue
     2819     5056                           delay list. */
     2820     5057    1   KQL$QDELAYM: ENTRY (PARM1,PARM2) ALTRET;

   5057  0 000015   000000 700200 xent  KQL$QDELAYM  TSX0  ! X66_AUTO_2
         0 000016   000020 000002                    ZERO    16,2

     2821     5058        /**/
     2822     5059    2           DO INHIBIT;

     2823     5060    2           CALL DELAYM (ADDR(PARM1)->KQ$CG.QUEUE.DELAY$,PARM2);

   5060  0 000017   200004 236300                    LDQ   ! @PARM2,,AUTO
         0 000020   200010 756300                    STQ   ! @DELAY$+1,,AUTO
         0 000021   200003 236300                    LDQ   ! @PARM1,,AUTO
         0 000022   000062 036203                    ADLQ  ! 50,DU
         0 000023   200007 756300                    STQ   ! @PARM2+3,,AUTO
         0 000024   000060 701200 0                  TSX1  ! DELAYM
         0 000025   000000 011200                    NOP   ! 0

     2824     5061    2           RETURN;

   5061  0 000026   000000 702200 xent               TSX2  ! X66_ARET

     2825     5062    2           END;

   5062  0 000027   000032 710000 0                  TRA     s:5073

     2826     5063        /**/
     2827     5064        /*F* NAME:         KQL$MDELAYR
     2828     5065             PURPOSE:      To enqueue a station for a station MLH
     2829     5066             CALL:         KQL$MDELAYR (KQ$MLH,KQ$STA)
     2830     5067             INPUT:        Target station (owner of MLH) gate locked
     2831     5068             DESCRIPTION:  Enqueues the passed station for access to
     2832     5069                           the given MLH. */
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:376  
     2833     5070    1   KQL$MDELAYR: ENTRY (PARM1,PARM2) ALTRET;

   5070  0 000030   000000 700200 xent  KQL$MDELAYR  TSX0  ! X66_AUTO_2
         0 000031   000020 000002                    ZERO    16,2

     2834     5071        /**/
     2835     5072    2           DO INHIBIT;

     2836     5073    2           CALL DELAYR (ADDR(PARM1)->KQ$MLH.DELAY$,ADDR(PARM2));

   5073  0 000032   200004 236300                    LDQ   ! @PARM2,,AUTO
         0 000033   200017 756300                    STQ   ! DELBIT+3,,AUTO
         0 000034   200017 630700                    EPPR0 ! DELBIT+3,,AUTO
         0 000035   200010 450700                    STP0  ! @DELAY$+1,,AUTO
         0 000036   200003 236300                    LDQ   ! @PARM1,,AUTO
         0 000037   000002 036203                    ADLQ  ! 2,DU
         0 000040   200007 756300                    STQ   ! @PARM2+3,,AUTO
         0 000041   000166 701200 0                  TSX1  ! DELAYR
         0 000042   000000 011200                    NOP   ! 0

     2837     5074    2           RETURN;

   5074  0 000043   000000 702200 xent               TSX2  ! X66_ARET

     2838     5075    2           END;

   5075  0 000044   000047 710000 0                  TRA     s:5088

     2839     5076        /**/
     2840     5077        /*F* NAME:         KQL$MDELAYM
     2841     5078             PURPOSE:      To enqueue a message on an MLH's
     2842     5079                           delay list
     2843     5080             CALL:         KQL$MDELAYM (KQ$MLH,MBLK$)
     2844     5081             INPUT:        Target station (owner of MLH) gate locked
     2845     5082             OUTPUT:       MBLK$ set to the MBLK's old LNK$
     2846     5083             DESCRIPTION:  Puts the msg pointed to by MBLK$ on the MLH
     2847     5084                           delay list. */
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:377  
     2848     5085    1   KQL$MDELAYM: ENTRY (PARM1,PARM2) ALTRET;

   5085  0 000045   000000 700200 xent  KQL$MDELAYM  TSX0  ! X66_AUTO_2
         0 000046   000020 000002                    ZERO    16,2

     2849     5086        /**/
     2850     5087    2           DO INHIBIT;

     2851     5088    2           CALL DELAYM (ADDR(PARM1)->KQ$MLH.DELAY$,PARM2);

   5088  0 000047   200004 236300                    LDQ   ! @PARM2,,AUTO
         0 000050   200010 756300                    STQ   ! @DELAY$+1,,AUTO
         0 000051   200003 236300                    LDQ   ! @PARM1,,AUTO
         0 000052   000002 036203                    ADLQ  ! 2,DU
         0 000053   200007 756300                    STQ   ! @PARM2+3,,AUTO
         0 000054   000060 701200 0                  TSX1  ! DELAYM
         0 000055   000000 011200                    NOP   ! 0

     2852     5089    2           RETURN;

   5089  0 000056   000000 702200 xent               TSX2  ! X66_ARET

     2853     5090    2           END;

   5090  0 000057   000266 710000 0                  TRA     s:5168+2

     2854     5091        %EJECT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:378  
     2855     5092        /*D* NAME:         DELAYM
     2856     5093             PURPOSE:      To insert an MBLK on a delay list
     2857     5094             CALL:         DELAYM (DELAY$,MBLK$)
     2858     5095             OUTPUT:       Item inserted, MBLK$ set to MBLK's old LNK$
     2859     5096        */
     2860     5097    1   DELAYM: PROC (DELAY$,MBLK$);

   5097  0 000060   200006 741300       DELAYM       STX1  ! @PARM2+2,,AUTO

     2861     5098        /**/
     2862     5099    2   DCL DELAY$ PTR;
     2863     5100    2   DCL MBLK$ PTR;
     2864     5101    2   DCL D$ PTR;
     2865     5102    2   DCL M$ PTR;
     2866     5103    2   DCL ITEM$ PTR;
     2867     5104        /**/
     2868     5105    3           DO INHIBIT;

     2869     5106    3           D$=DELAY$;

   5106  0 000061   200007 470700                    LDP0  ! @DELAY$,,AUTO
         0 000062   000000 236300                    LDQ   ! 0,,PR0
         0 000063   200011 756300                    STQ   ! D$,,AUTO

     2870     5107    3           ADDR(D$)->KQ$DPTR.X='0'B;

   5107  0 000064   000000 236203                    LDQ   ! 0,DU
         0 000065   200011 752304                    STCQ  ! D$,'04'O,AUTO

     2871     5108    3           M$=MBLK$;

   5108  0 000066   200010 471700                    LDP1  ! @MBLK$,,AUTO
         0 000067   100000 236300                    LDQ   ! 0,,PR1
         0 000070   200012 756300                    STQ   ! M$,,AUTO

     2872     5109    3           MBLK$=MBLK$->KQ$MBLK.LNK$;

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:379  
   5109  0 000071   100000 473700                    LDP3  ! 0,,PR1
         0 000072   300000 236300                    LDQ   ! 0,,PR3
         0 000073   100000 756300                    STQ   ! 0,,PR1

     2873     5110    3           ITEM$=M$;

   5110  0 000074   200012 236300                    LDQ   ! M$,,AUTO
         0 000075   200013 756300                    STQ   ! ITEM$,,AUTO

     2874     5111    3           ADDR(ITEM$)->KQ$DPTR.X.CODE=KQRA_MBLK#;

   5111  0 000076   200013 236300                    LDQ   ! ITEM$,,AUTO
         0 000077   000000 376200 1                  ANQ   ! 0
         0 000100   010000 276207                    ORQ   ! 4096,DL
         0 000101   200013 756300                    STQ   ! ITEM$,,AUTO

     2875     5112    3           IF D$ = ADDR(NIL) THEN

   5112  0 000102   200011 236300                    LDQ   ! D$,,AUTO
         0 000103   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000104   000121 601200 0                  TNZ   ! s:5120

     2876     5113    4             DO;

     2877     5114    4             M$->KQ$MBLK.LNK$=ITEM$;

   5114  0 000105   200013 236300                    LDQ   ! ITEM$,,AUTO
         0 000106   200012 473700                    LDP3  ! M$,,AUTO
         0 000107   300000 756300                    STQ   ! 0,,PR3

     2878     5115    4   M_OUT:    ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(DELAY$)->KQ$DPTR.X.FLGS;

   5115  0 000110   200007 470700       M_OUT        LDP0  ! @DELAY$,,AUTO
         0 000111   000000 236300                    LDQ   ! 0,,PR0
         0 000112   200013 676300                    ERQ   ! ITEM$,,AUTO
         0 000113   700000 376207                    ANQ   ! -32768,DL
         0 000114   200013 656300                    ERSQ  ! ITEM$,,AUTO
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:380  

     2879     5116    4             DELAY$=ITEM$;

   5116  0 000115   200013 236300                    LDQ   ! ITEM$,,AUTO
         0 000116   000000 756300                    STQ   ! 0,,PR0

     2880     5117    4             RETURN;

   5117  0 000117   200006 221300                    LDX1  ! @PARM2+2,,AUTO
         0 000120   000001 702211                    TSX2  ! 1,X1

     2881     5118    4             END;
     2882     5119        /**/
     2883     5120    4             DO CASE (ADDR(DELAY$)->KQ$DPTR.X.CODE);

   5120  0 000121   000000 236300                    LDQ   ! 0,,PR0
         0 000122   000014 772200                    QRL   ! 12
         0 000123   000007 376207                    ANQ   ! 7,DL
         0 000124   000003 116207                    CMPQ  ! 3,DL
         0 000125   000127 602206 0                  TNC   ! s:5120+6,QL
         0 000126   000161 710200 0                  TRA   ! s:5130
         0 000127   000161 710200 0                  TRA   ! s:5130
         0 000130   000132 710200 0                  TRA   ! s:5122
         0 000131   000146 710200 0                  TRA   ! s:5126

     2884     5121    4               CASE (KQRA_MBLK#);

     2885     5122    4                 M$->KQ$MBLK.LNK$=D$->KQ$MBLK.LNK$;

   5122  0 000132   200011 473700                    LDP3  ! D$,,AUTO
         0 000133   300000 236300                    LDQ   ! 0,,PR3
         0 000134   200012 474700                    LDP4  ! M$,,AUTO
         0 000135   400000 756300                    STQ   ! 0,,PR4

     2886     5123    4                 ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(D$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS;

   5123  0 000136   200011 473700                    LDP3  ! D$,,AUTO
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:381  
         0 000137   300000 236300                    LDQ   ! 0,,PR3
         0 000140   200013 676300                    ERQ   ! ITEM$,,AUTO
         0 000141   700000 376207                    ANQ   ! -32768,DL
         0 000142   200013 656300                    ERSQ  ! ITEM$,,AUTO

     2887     5124    4                 D$->KQ$MBLK.LNK$=ITEM$;

   5124  0 000143   200013 236300                    LDQ   ! ITEM$,,AUTO
         0 000144   300000 756300                    STQ   ! 0,,PR3
         0 000145   000161 710200 0                  TRA   ! s:5130

     2888     5125    4               CASE (KQRA_RSTA#);

     2889     5126    4                 M$->KQ$MBLK.LNK$=D$->KQ$STA.RQLNK$;

   5126  0 000146   200011 473700                    LDP3  ! D$,,AUTO
         0 000147   300030 236300                    LDQ   ! 24,,PR3
         0 000150   200012 474700                    LDP4  ! M$,,AUTO
         0 000151   400000 756300                    STQ   ! 0,,PR4

     2890     5127    4                 ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(D$->KQ$STA.RQLNK$)->KQ$DPTR.X.FLGS;

   5127  0 000152   200011 473700                    LDP3  ! D$,,AUTO
         0 000153   300030 236300                    LDQ   ! 24,,PR3
         0 000154   200013 676300                    ERQ   ! ITEM$,,AUTO
         0 000155   700000 376207                    ANQ   ! -32768,DL
         0 000156   200013 656300                    ERSQ  ! ITEM$,,AUTO

     2891     5128    4                 D$->KQ$STA.RQLNK$=ITEM$;

   5128  0 000157   200013 236300                    LDQ   ! ITEM$,,AUTO
         0 000160   300030 756300                    STQ   ! 24,,PR3

     2892     5129    4             END;

     2893     5130    3           ADDR(M$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS='0'B;

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:382  
   5130  0 000161   200012 473700                    LDP3  ! M$,,AUTO
         0 000162   000001 236200 1                  LDQ   ! 1
         0 000163   300000 356300                    ANSQ  ! 0,,PR3

     2894     5131    3           GOTO M_OUT;

   5131  0 000164   000110 710200 0                  TRA   ! M_OUT

     2895     5132    3           END; /* INHIBIT */

   5132  0 000165   000167 710000 0                  TRA     s:5143

     2896     5133        /**/
     2897     5134        /**/
     2898     5135        /*D* NAME:         DELAYR
     2899     5136             PURPOSE:      To insert a reader's KQ$STA on a delay list
     2900     5137             CALL:         DELAYR (DELAY$,STA$);
     2901     5138             OUTPUT:       Item inserted.
     2902     5139        */
     2903     5140    2   DELAYR: ENTRY (DELAY$,MBLK$);

   5140  0 000166   200006 741300       DELAYR       STX1  ! @PARM2+2,,AUTO

     2904     5141        /**/
     2905     5142    3           DO INHIBIT;

     2906     5143    3           D$=DELAY$;

   5143  0 000167   200007 470700                    LDP0  ! @DELAY$,,AUTO
         0 000170   000000 236300                    LDQ   ! 0,,PR0
         0 000171   200011 756300                    STQ   ! D$,,AUTO

     2907     5144    3           ADDR(D$)->KQ$DPTR.X='0'B;

   5144  0 000172   000000 236203                    LDQ   ! 0,DU
         0 000173   200011 752304                    STCQ  ! D$,'04'O,AUTO

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:383  
     2908     5145    3           ITEM$=MBLK$;

   5145  0 000174   200010 471700                    LDP1  ! @MBLK$,,AUTO
         0 000175   100000 236300                    LDQ   ! 0,,PR1
         0 000176   200013 756300                    STQ   ! ITEM$,,AUTO

     2909     5146    3           ADDR(ITEM$)->KQ$DPTR.X.CODE=KQRA_RSTA#;

   5146  0 000177   200013 236300                    LDQ   ! ITEM$,,AUTO
         0 000200   000000 376200 1                  ANQ   ! 0
         0 000201   020000 276207                    ORQ   ! 8192,DL
         0 000202   200013 756300                    STQ   ! ITEM$,,AUTO

     2910     5147    3           IF D$ = ADDR(NIL) THEN

   5147  0 000203   200011 236300                    LDQ   ! D$,,AUTO
         0 000204   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000205   000222 601200 0                  TNZ   ! s:5155

     2911     5148    4             DO;

     2912     5149    4             MBLK$->KQ$STA.RQLNK$=ITEM$;

   5149  0 000206   100000 473700                    LDP3  ! 0,,PR1
         0 000207   200013 236300                    LDQ   ! ITEM$,,AUTO
         0 000210   300030 756300                    STQ   ! 24,,PR3

     2913     5150    4   R_OUT:    ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(DELAY$)->KQ$DPTR.X.FLGS;

   5150  0 000211   200007 470700       R_OUT        LDP0  ! @DELAY$,,AUTO
         0 000212   000000 236300                    LDQ   ! 0,,PR0
         0 000213   200013 676300                    ERQ   ! ITEM$,,AUTO
         0 000214   700000 376207                    ANQ   ! -32768,DL
         0 000215   200013 656300                    ERSQ  ! ITEM$,,AUTO

     2914     5151    4             DELAY$=ITEM$;

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:384  
   5151  0 000216   200013 236300                    LDQ   ! ITEM$,,AUTO
         0 000217   000000 756300                    STQ   ! 0,,PR0

     2915     5152    4             RETURN;

   5152  0 000220   200006 221300                    LDX1  ! @PARM2+2,,AUTO
         0 000221   000001 702211                    TSX2  ! 1,X1

     2916     5153    4             END;
     2917     5154        /**/
     2918     5155    4             DO CASE (ADDR(DELAY$)->KQ$DPTR.X.CODE);

   5155  0 000222   000000 236300                    LDQ   ! 0,,PR0
         0 000223   000014 772200                    QRL   ! 12
         0 000224   000007 376207                    ANQ   ! 7,DL
         0 000225   000003 116207                    CMPQ  ! 3,DL
         0 000226   000230 602206 0                  TNC   ! s:5155+6,QL
         0 000227   000260 710200 0                  TRA   ! s:5165
         0 000230   000260 710200 0                  TRA   ! s:5165
         0 000231   000233 710200 0                  TRA   ! s:5157
         0 000232   000246 710200 0                  TRA   ! s:5161

     2919     5156    4               CASE (KQRA_MBLK#);

     2920     5157    4                 MBLK$->KQ$STA.RQLNK$=D$->KQ$MBLK.LNK$;

   5157  0 000233   100000 473700                    LDP3  ! 0,,PR1
         0 000234   200011 474700                    LDP4  ! D$,,AUTO
         0 000235   400000 236300                    LDQ   ! 0,,PR4
         0 000236   300030 756300                    STQ   ! 24,,PR3

     2921     5158    4                 ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(D$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS;

   5158  0 000237   400000 236300                    LDQ   ! 0,,PR4
         0 000240   200013 676300                    ERQ   ! ITEM$,,AUTO
         0 000241   700000 376207                    ANQ   ! -32768,DL
         0 000242   200013 656300                    ERSQ  ! ITEM$,,AUTO
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:385  

     2922     5159    4                 D$->KQ$MBLK.LNK$=ITEM$;

   5159  0 000243   200013 236300                    LDQ   ! ITEM$,,AUTO
         0 000244   400000 756300                    STQ   ! 0,,PR4
         0 000245   000260 710200 0                  TRA   ! s:5165

     2923     5160    4               CASE (KQRA_RSTA#);

     2924     5161    4                 MBLK$->KQ$STA.RQLNK$=D$->KQ$STA.RQLNK$;

   5161  0 000246   100000 473700                    LDP3  ! 0,,PR1
         0 000247   200011 474700                    LDP4  ! D$,,AUTO
         0 000250   400030 236300                    LDQ   ! 24,,PR4
         0 000251   300030 756300                    STQ   ! 24,,PR3

     2925     5162    4                 ADDR(ITEM$)->KQ$DPTR.X.FLGS=ADDR(D$->KQ$STA.RQLNK$)->KQ$DPTR.X.FLGS;

   5162  0 000252   400030 236300                    LDQ   ! 24,,PR4
         0 000253   200013 676300                    ERQ   ! ITEM$,,AUTO
         0 000254   700000 376207                    ANQ   ! -32768,DL
         0 000255   200013 656300                    ERSQ  ! ITEM$,,AUTO

     2926     5163    4                 D$->KQ$STA.RQLNK$=ITEM$;

   5163  0 000256   200013 236300                    LDQ   ! ITEM$,,AUTO
         0 000257   400030 756300                    STQ   ! 24,,PR4

     2927     5164    4             END;

     2928     5165    3           ADDR(MBLK$->KQ$STA.RQLNK$)->KQ$DPTR.X.FLGS='0'B;

   5165  0 000260   100000 473700                    LDP3  ! 0,,PR1
         0 000261   000001 236200 1                  LDQ   ! 1
         0 000262   300030 356300                    ANSQ  ! 24,,PR3

     2929     5166    3           GOTO R_OUT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:386  

   5166  0 000263   000211 710200 0                  TRA   ! R_OUT

     2930     5167    3           END; /* INHIBIT */

     2931     5168    2   END DELAYM;

   5168  0 000264   200006 221300                    LDX1  ! @PARM2+2,,AUTO
         0 000265   000001 702211                    TSX2  ! 1,X1
         0 000266   000271 710000 0                  TRA     s:5183

     2932     5169        %EJECT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:387  
     2933     5170        /**/
     2934     5171        /*F* NAME:         KQL$COUNTDLY
     2935     5172             PURPOSE:      To count the items in a delay list
     2936     5173             CALL:         KQL$COUNTDLY (DELAY$,TYP)
     2937     5174             INPUT:        TYP = KQRA_XXXX#  ---> type of item to be counted
     2938     5175             OUTPUT:       TYP = count found
     2939     5176             DESCRIPTION:  The number of items of the specified type on the
     2940     5177                           specified DELAY$ list are counted and returned in
     2941     5178                           TYP. The owning MLH's gate is assumed to be locked
     2942     5179                           upon entry and is not touched throughout.
     2943     5180        */
     2944     5181    1   KQL$COUNTDLY: ENTRY (PARM1,PARM2) ALTRET;

   5181  0 000267   000000 700200 xent  KQL$COUNTDLY TSX0  ! X66_AUTO_2
         0 000270   000020 000002                    ZERO    16,2

     2945     5182        /**/
     2946     5183    1         CALL COUNTIT (PARM1,PARM2);

   5183  0 000271   200004 236100                    LDQ     @PARM2,,AUTO
         0 000272   200010 756100                    STQ     @DELAY$+1,,AUTO
         0 000273   200003 236100                    LDQ     @PARM1,,AUTO
         0 000274   200007 756100                    STQ     @PARM2+3,,AUTO
         0 000275   000300 701000 0                  TSX1    COUNTIT
         0 000276   000000 011000                    NOP     0

     2947     5184    1         RETURN;

   5184  0 000277   000000 702200 xent               TSX2  ! X66_ARET

     2948     5185        /**/
     2949     5186    1   COUNTIT: PROC (DELAY$,COUNT);

   5186  0 000300   200006 741300       COUNTIT      STX1  ! @PARM2+2,,AUTO

     2950     5187        /**/
     2951     5188    2   DCL DELAY$ PTR;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:388  
     2952     5189    2   DCL COUNT UBIN;
     2953     5190    2   DCL TYP UBIN;
     2954     5191    2   DCL CODE UBIN;
     2955     5192    2   DCL D$ PTR;
     2956     5193    2   DCL DLY$ PTR;
     2957     5194        /**/
     2958     5195    2         TYP=COUNT;

   5195  0 000301   200010 470500                    LDP0    @COUNT,,AUTO
         0 000302   000000 235100                    LDA     0,,PR0
         0 000303   200011 755100                    STA     TYP,,AUTO

     2959     5196    2         COUNT=0;

   5196  0 000304   000000 450100                    STZ     0,,PR0

     2960     5197    2         DLY$=DELAY$;

   5197  0 000305   200007 471500                    LDP1    @DELAY$,,AUTO
         0 000306   100000 236100                    LDQ     0,,PR1
         0 000307   200014 756100                    STQ     DLY$,,AUTO

     2961     5198    2         ADDR(DLY$)->KQ$DPTR.X = '0'B;

   5198  0 000310   000000 236003                    LDQ     0,DU
         0 000311   200014 752104                    STCQ    DLY$,'04'O,AUTO

     2962     5199    2         IF DLY$=ADDR(NIL) THEN RETURN;

   5199  0 000312   200014 236100                    LDQ     DLY$,,AUTO
         0 000313   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000314   000317 601000 0                  TNZ     s:5200

   5199  0 000315   200006 221300                    LDX1  ! @PARM2+2,,AUTO
         0 000316   000001 702211                    TSX2  ! 1,X1

     2963     5200    2         D$=DELAY$;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:389  

   5200  0 000317   100000 236100                    LDQ     0,,PR1
         0 000320   200013 756100                    STQ     D$,,AUTO

     2964     5201    2         CODE=ADDR(D$)->KQ$DPTR.X.CODE;

   5201  0 000321   200013 236100                    LDQ     D$,,AUTO
         0 000322   000014 772000                    QRL     12
         0 000323   000007 376007                    ANQ     7,DL
         0 000324   200012 756100                    STQ     CODE,,AUTO

     2965     5202    2         ADDR(D$)->KQ$DPTR.X='0'B;

   5202  0 000325   000000 236003                    LDQ     0,DU
         0 000326   200013 752104                    STCQ    D$,'04'O,AUTO

     2966     5203    3           DO WHILE('1'B);

     2967     5204    3           IF CODE=TYP THEN COUNT=COUNT+1;

   5204  0 000327   200012 236100                    LDQ     CODE,,AUTO
         0 000330   200011 116100                    CMPQ    TYP,,AUTO
         0 000331   000336 601000 0                  TNZ     s:5205

   5204  0 000332   200010 470500                    LDP0    @COUNT,,AUTO
         0 000333   000000 235100                    LDA     0,,PR0
         0 000334   000001 035007                    ADLA    1,DL
         0 000335   000000 755100                    STA     0,,PR0

     2968     5205    4             DO CASE (CODE);

   5205  0 000336   000003 116007                    CMPQ    3,DL
         0 000337   000341 602006 0                  TNC     s:5205+3,QL
         0 000340   000354 710000 0                  TRA     s:5211
         0 000341   000354 710000 0                  TRA     s:5211
         0 000342   000344 710000 0                  TRA     s:5207
         0 000343   000350 710000 0                  TRA     s:5209
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:390  

     2969     5206    4               CASE (KQRA_MBLK#);

     2970     5207    4                 D$=D$->KQ$MBLK.LNK$;

   5207  0 000344   200013 470500                    LDP0    D$,,AUTO
         0 000345   000000 236100                    LDQ     0,,PR0
         0 000346   200013 756100                    STQ     D$,,AUTO
         0 000347   000356 710000 0                  TRA     s:5213

     2971     5208    4               CASE (KQRA_RSTA#);

     2972     5209    4                 D$=D$->KQ$STA.RQLNK$;

   5209  0 000350   200013 470500                    LDP0    D$,,AUTO
         0 000351   000030 236100                    LDQ     24,,PR0
         0 000352   200013 756100                    STQ     D$,,AUTO
         0 000353   000356 710000 0                  TRA     s:5213

     2973     5210    4               CASE (ELSE);

     2974     5211    4                 CALL SC_BCGRRC;

   5211  0 000354   000000 713400 xsym               CLIMB   SC_BCGRRC
         0 000355   000000 600000 xsid               climb   nvectors=         0

     2975     5212    4             END;

     2976     5213    3           CODE=ADDR(D$)->KQ$DPTR.X.CODE;

   5213  0 000356   200013 236100                    LDQ     D$,,AUTO
         0 000357   000014 772000                    QRL     12
         0 000360   000007 376007                    ANQ     7,DL
         0 000361   200012 756100                    STQ     CODE,,AUTO

     2977     5214    3           ADDR(D$)->KQ$DPTR.X='0'B;

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:391  
   5214  0 000362   000000 236003                    LDQ     0,DU
         0 000363   200013 752104                    STCQ    D$,'04'O,AUTO

     2978     5215    3           IF D$=DLY$ THEN RETURN;

   5215  0 000364   200013 236100                    LDQ     D$,,AUTO
         0 000365   200014 116100                    CMPQ    DLY$,,AUTO
         0 000366   000327 601000 0                  TNZ     s:5204

   5215  0 000367   200006 221300                    LDX1  ! @PARM2+2,,AUTO
         0 000370   000001 702211                    TSX2  ! 1,X1

     2979     5216    3           END;

     2980     5217    2   END COUNTIT;
     2981     5218        %EJECT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:392  
     2982     5219        /**/
     2983     5220        /*F* NAME:         KQL$DELAYDQ
     2984     5221             PURPOSE:      To dequeue a delayed item from a delay list
     2985     5222             CALL:         KQL$DELAYDQ (DELAY$,DQ$) ALTRET(DONE)
     2986     5223             DESCRIPTION:  ALTRETs if the list is empty.
     2987     5224                           Else RETURNs with DQ$, a KQ$DPTR
     2988     5225                           which points to the item.
     2989     5226
     2990     5227                           If the KQ$DPTR has any FLGS set then the caller
     2991     5228                           is expected to process them, zap the FLGS, and
     2992     5229                           return.
     2993     5230
     2994     5231                           The caller is expected to pass as DQ$, either
     2995     5232                           KQ$CG.QUEUE.DELAYDQ$ or STA$->KQ$STA.MLH.DELAYDQ$
     2996     5233                           so that KQL$RCVRDLY may be able to rebuild the
     2997     5234                           DELAY$ list if we crash before completing delivery
     2998     5235                           of the MBLK, deletion of the message list or
     2999     5236                           continuing the delayed read. It is very important
     3000     5237                           that these pointers be used so that we don't lose
     3001     5238                           a message in the event of a crash at this time.
     3002     5239        */
     3003     5240    1   KQL$DELAYDQ: ENTRY (PARM1,PARM2) ALTRET;

   5240  0 000371   000000 700200 xent  KQL$DELAYDQ  TSX0  ! X66_AUTO_2
         0 000372   000020 000002                    ZERO    16,2

     3004     5241        /**/
     3005     5242    1         CALL DEQ (PARM1,PARM2) ALTRET(ALTRT);

   5242  0 000373   200004 236100                    LDQ     @PARM2,,AUTO
         0 000374   200010 756100                    STQ     @DELAY$+1,,AUTO
         0 000375   200003 236100                    LDQ     @PARM1,,AUTO
         0 000376   200007 756100                    STQ     @PARM2+3,,AUTO
         0 000377   000403 701000 0                  TSX1    DEQ
         0 000400   000402 702000 0                  TSX2    ALTRT

     3006     5243    1         RETURN;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:393  

   5243  0 000401   000000 702200 xent               TSX2  ! X66_ARET

   5240  0 000402                       ALTRT        null
     3007     5244    1   ALTRT: ;
     3008     5245    1         ALTRETURN;

   5245  0 000402   000000 702200 xent               TSX2  ! X66_AALT

     3009     5246        /**/
     3010     5247    1   DEQ:  PROC (DELAY$,P$) ALTRET;

   5247  0 000403   200006 741300       DEQ          STX1  ! @PARM2+2,,AUTO

     3011     5248        /**/
     3012     5249    2   DCL DELAY$ PTR;
     3013     5250    2   DCL P$ PTR;
     3014     5251    2   DCL D$ PTR;
     3015     5252    2   DCL D1$ PTR;
     3016     5253    2   DCL D2$ PTR;
     3017     5254    2   DCL SVDELBIT BIT(1);
     3018     5255        /**/
     3019     5256    3           DO INHIBIT;

     3020     5257    3           IF DELAY$=ADDR(NIL) THEN ALTRETURN;

   5257  0 000404   200007 470700                    LDP0  ! @DELAY$,,AUTO
         0 000405   000000 236300                    LDQ   ! 0,,PR0
         0 000406   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000407   000411 601200 0                  TNZ   ! s:5258

   5257  0 000410   000000 702211                    TSX2  ! 0,X1

     3021     5258    4           IF ADDR(DELAY$)->KQ$DPTR.X.FLGS THEN DO;

   5258  0 000411   000000 236300                    LDQ   ! 0,,PR0
         0 000412   700000 316207                    CANQ  ! -32768,DL
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:394  
         0 000413   000427 600200 0                  TZE   ! s:5264

     3022     5259    4             P$=ADDR(NIL);

   5259  0 000414   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 000415   200010 471700                    LDP1  ! @P$,,AUTO
         0 000416   100000 756300                    STQ   ! 0,,PR1

     3023     5260    4             ADDR(P$)->KQ$DPTR.X.FLGS='1'B;

   5260  0 000417   100000 236300                    LDQ   ! 0,,PR1
         0 000420   000001 376200 1                  ANQ   ! 1
         0 000421   400000 276207                    ORQ   ! -131072,DL
         0 000422   100000 756300                    STQ   ! 0,,PR1

     3024     5261    4             ADDR(DELAY$)->KQ$DPTR.X.FLGS='0'B;

   5261  0 000423   000001 236200 1                  LDQ   ! 1
         0 000424   000000 356300                    ANSQ  ! 0,,PR0

     3025     5262    4             RETURN;

   5262  0 000425   200006 221300                    LDX1  ! @PARM2+2,,AUTO
         0 000426   000001 702211                    TSX2  ! 1,X1

     3026     5263    4             END;
     3027     5264    3           D$=DELAY$;

   5264  0 000427   000000 236300                    LDQ   ! 0,,PR0
         0 000430   200011 756300                    STQ   ! D$,,AUTO

     3028     5265    3           ADDR(D$)->KQ$DPTR.X='0'B;

   5265  0 000431   000000 236203                    LDQ   ! 0,DU
         0 000432   200011 752304                    STCQ  ! D$,'04'O,AUTO

     3029     5266    4             DO CASE(ADDR(DELAY$)->KQ$DPTR.X.CODE);
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:395  

   5266  0 000433   000000 236300                    LDQ   ! 0,,PR0
         0 000434   000014 772200                    QRL   ! 12
         0 000435   000007 376207                    ANQ   ! 7,DL
         0 000436   000003 116207                    CMPQ  ! 3,DL
         0 000437   000441 602206 0                  TNC   ! s:5266+6,QL
         0 000440   000453 710200 0                  TRA   ! s:5272
         0 000441   000453 710200 0                  TRA   ! s:5272
         0 000442   000444 710200 0                  TRA   ! s:5268
         0 000443   000447 710200 0                  TRA   ! s:5270

     3030     5267    4               CASE(KQRA_MBLK#);

     3031     5268    4                 D1$=ADDR(D$->KQ$MBLK.LNK$);

   5268  0 000444   200011 236300                    LDQ   ! D$,,AUTO
         0 000445   200012 756300                    STQ   ! D1$,,AUTO
         0 000446   000455 710200 0                  TRA   ! s:5274

     3032     5269    4               CASE(KQRA_RSTA#);

     3033     5270    4                 D1$=ADDR(D$->KQ$STA.RQLNK$);

   5270  0 000447   200011 236300                    LDQ   ! D$,,AUTO
         0 000450   000030 036203                    ADLQ  ! 24,DU
         0 000451   200012 756300                    STQ   ! D1$,,AUTO
         0 000452   000455 710200 0                  TRA   ! s:5274

     3034     5271    4               CASE (ELSE);

     3035     5272    4                 CALL SC_BCGRRC;

   5272  0 000453   000000 713600 xsym               CLIMB ! SC_BCGRRC
         0 000454   000000 600000 xsid               climb   nvectors=         0

     3036     5273    4             END;

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:396  
     3037     5274    3           P$=D1$->B$$PTR;

   5274  0 000455   200012 470700                    LDP0  ! D1$,,AUTO
         0 000456   000000 236300                    LDQ   ! 0,,PR0
         0 000457   200010 471700                    LDP1  ! @P$,,AUTO
         0 000460   100000 756300                    STQ   ! 0,,PR1

     3038     5275    3           D2$=P$;

   5275  0 000461   200013 756300                    STQ   ! D2$,,AUTO

     3039     5276    3           ADDR(D2$)->KQ$DPTR.X='0'B;

   5276  0 000462   000000 236203                    LDQ   ! 0,DU
         0 000463   200013 752304                    STCQ  ! D2$,'04'O,AUTO

     3040     5277    3           IF D$=D2$

   5277  0 000464   200011 236300                    LDQ   ! D$,,AUTO
         0 000465   200013 116300                    CMPQ  ! D2$,,AUTO
         0 000466   000473 601200 0                  TNZ   ! s:5280

     3041     5278    3           THEN DELAY$=ADDR(NIL);

   5278  0 000467   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 000470   200007 473700                    LDP3  ! @DELAY$,,AUTO
         0 000471   300000 756300                    STQ   ! 0,,PR3
         0 000472   000531 710200 0                  TRA   ! s:5291

     3042     5279    4           ELSE DO;

     3043     5280    4             SVDELBIT=D1$->KQ$DPTR.X.FLGS;

   5280  0 000473   000000 236300                    LDQ   ! 0,,PR0
         0 000474   000022 736200                    QLS   ! 18
         0 000475   400000 376203                    ANQ   ! -131072,DU
         0 000476   200014 756300                    STQ   ! SVDELBIT,,AUTO
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:397  

     3044     5281    5               DO CASE(ADDR(P$)->KQ$DPTR.X.CODE);

   5281  0 000477   100000 236300                    LDQ   ! 0,,PR1
         0 000500   000014 772200                    QRL   ! 12
         0 000501   000007 376207                    ANQ   ! 7,DL
         0 000502   000003 116207                    CMPQ  ! 3,DL
         0 000503   000505 602206 0                  TNC   ! s:5281+6,QL
         0 000504   000520 710200 0                  TRA   ! s:5287
         0 000505   000520 710200 0                  TRA   ! s:5287
         0 000506   000510 710200 0                  TRA   ! s:5283
         0 000507   000514 710200 0                  TRA   ! s:5285

     3045     5282    5                 CASE(KQRA_MBLK#);

     3046     5283    5                   D1$->B$$PTR=D2$->KQ$MBLK.LNK$;

   5283  0 000510   200013 473700                    LDP3  ! D2$,,AUTO
         0 000511   300000 236300                    LDQ   ! 0,,PR3
         0 000512   000000 756300                    STQ   ! 0,,PR0
         0 000513   000522 710200 0                  TRA   ! s:5289

     3047     5284    5                 CASE(KQRA_RSTA#);

     3048     5285    5                   D1$->B$$PTR=D2$->KQ$STA.RQLNK$;

   5285  0 000514   200013 473700                    LDP3  ! D2$,,AUTO
         0 000515   300030 236300                    LDQ   ! 24,,PR3
         0 000516   000000 756300                    STQ   ! 0,,PR0
         0 000517   000522 710200 0                  TRA   ! s:5289

     3049     5286    5                 CASE (ELSE);

     3050     5287    5                   CALL SC_BCGRRC;

   5287  0 000520   000000 713600 xsym               CLIMB ! SC_BCGRRC
         0 000521   000000 600000 xsid               climb   nvectors=         0
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:398  

     3051     5288    5               END;

     3052     5289    4             D1$->KQ$DPTR.X.FLGS=SVDELBIT;

   5289  0 000522   200012 470700                    LDP0  ! D1$,,AUTO
         0 000523   200014 236300                    LDQ   ! SVDELBIT,,AUTO
         0 000524   400000 376203                    ANQ   ! -131072,DU
         0 000525   000022 772200                    QRL   ! 18
         0 000526   000000 676300                    ERQ   ! 0,,PR0
         0 000527   700000 376207                    ANQ   ! -32768,DL
         0 000530   000000 656300                    ERSQ  ! 0,,PR0

     3053     5290    4             END;

     3054     5291    4             DO CASE(ADDR(P$)->KQ$DPTR.X.CODE);

   5291  0 000531   200010 471700                    LDP1  ! @P$,,AUTO
         0 000532   100000 236300                    LDQ   ! 0,,PR1
         0 000533   000014 772200                    QRL   ! 12
         0 000534   000007 376207                    ANQ   ! 7,DL
         0 000535   000003 116207                    CMPQ  ! 3,DL
         0 000536   000540 602206 0                  TNC   ! s:5291+7,QL
         0 000537   000567 710200 0                  TRA   ! s:5299
         0 000540   000567 710200 0                  TRA   ! s:5299
         0 000541   000543 710200 0                  TRA   ! s:5293
         0 000542   000555 710200 0                  TRA   ! s:5296

     3055     5292    4               CASE(KQRA_MBLK#);

     3056     5293    4                 ADDR(DELAY$)->KQ$DPTR.X.FLGS=ADDR(D2$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS;

   5293  0 000543   200007 473700                    LDP3  ! @DELAY$,,AUTO
         0 000544   200013 474700                    LDP4  ! D2$,,AUTO
         0 000545   400000 236300                    LDQ   ! 0,,PR4
         0 000546   300000 676300                    ERQ   ! 0,,PR3
         0 000547   700000 376207                    ANQ   ! -32768,DL
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:399  
         0 000550   300000 656300                    ERSQ  ! 0,,PR3

     3057     5294    4                 D2$->KQ$MBLK.LNK$=ADDR(NIL);

   5294  0 000551   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 000552   200013 474700                    LDP4  ! D2$,,AUTO
         0 000553   400000 756300                    STQ   ! 0,,PR4
         0 000554   000571 710200 0                  TRA   ! s:5302

     3058     5295    4               CASE(KQRA_RSTA#);

     3059     5296    4                ADDR(DELAY$)->KQ$DPTR.X.FLGS=ADDR(D2$->KQ$STA.RQLNK$)->KQ$DPTR.X.FLGS;

   5296  0 000555   200007 473700                    LDP3  ! @DELAY$,,AUTO
         0 000556   200013 474700                    LDP4  ! D2$,,AUTO
         0 000557   400030 236300                    LDQ   ! 24,,PR4
         0 000560   300000 676300                    ERQ   ! 0,,PR3
         0 000561   700000 376207                    ANQ   ! -32768,DL
         0 000562   300000 656300                    ERSQ  ! 0,,PR3

     3060     5297    4                 D2$->KQ$STA.RQLNK$=ADDR(NIL);

   5297  0 000563   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 000564   200013 474700                    LDP4  ! D2$,,AUTO
         0 000565   400030 756300                    STQ   ! 24,,PR4
         0 000566   000571 710200 0                  TRA   ! s:5302

     3061     5298    4               CASE (ELSE);

     3062     5299    4                 CALL SC_BCGRRC;

   5299  0 000567   000000 713600 xsym               CLIMB ! SC_BCGRRC
         0 000570   000000 600000 xsid               climb   nvectors=         0

     3063     5300    4             END;

     3064     5301    3           END; /* INHIBIT */
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:400  

     3065     5302    2   END DEQ;

   5302  0 000571   200006 221300                    LDX1  ! @PARM2+2,,AUTO
         0 000572   000001 702211                    TSX2  ! 1,X1

     3066     5303        %EJECT;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:401  
     3067     5304        /**/
     3068     5305        /*F* NAME:         KQL$RCVRDLY
     3069     5306             PURPOSE:      To recover a crashed delay list
     3070     5307             CALL:         CALL KQL$RCVRDLY(DELAY$,DQ$)
     3071     5308                             where DELAY$ is KQ$CG.QUEUE.DELAY$ for the anon-Q
     3072     5309                                          or KQ$STA.MLH.DELAY$ for a directed list
     3073     5310                               and DQ$ is KQ$CG.QUEUE.DELAYDQ$ for the anon-Q
     3074     5311                                       or KQ$STA.MLH.DELAYDQ$ for a directed list
     3075     5312             DESCRIPTION:  When the anon-Q or an MLH is busy and some process
     3076     5313                           needs to access the MLH, we place this process on
     3077     5314                           the DELAY$ list for later processing. The DELAY$
     3078     5315                           list may then have on it MBLKs for messages waiting
     3079     5316                           to be written into the list or STATION blocks for
     3080     5317                           readers waiting to read the list. Also, the
     3081     5318                           delete-message-list process is ordered on the
     3082     5319                           DELAY$ chain by setting a bit in an item's pointer
     3083     5320                           to the next item. The deletion process is to occur
     3084     5321                           AFTER the block carrying the pointer is processed.
     3085     5322                           This delete bit (KQ$DPTR.X.FLGS) is carried around
     3086     5323                           in the chain until it makes its way onto the DELAY$
     3087     5324                           pointer. At this point, the list is to deleted.
     3088     5325
     3089     5326                           When a process which restricts access to an MLH
     3090     5327                           completes, it must call KQL$xDFDUN(L) to process
     3091     5328                           this DELAY$ list (among other things). When we
     3092     5329                           process this list, we MUST make sure we don't lose
     3093     5330                           any MBLKs or neglect to delete the message list if
     3094     5331                           a SCREECH occurs. In order to do this, we place
     3095     5332                           the process's block (STATION or MBLK) on the
     3096     5333                           DELAYDQ$ pointer. This is then examined when we
     3097     5334                           re-open a CG and this procedure is called to
     3098     5335                           re-build the DELAY$ list.
     3099     5336        */
     3100     5337    1   KQL$RCVRDLY: ENTRY (PARM1,PARM2) ALTRET;

   5337  0 000573   000000 700200 xent  KQL$RCVRDLY  TSX0  ! X66_AUTO_2
         0 000574   000020 000002                    ZERO    16,2
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:402  

     3101     5338        /**/
     3102     5339    1         CALL RCVR (PARM1,PARM2);

   5339  0 000575   200004 236100                    LDQ     @PARM2,,AUTO
         0 000576   200010 756100                    STQ     @DELAY$+1,,AUTO
         0 000577   200003 236100                    LDQ     @PARM1,,AUTO
         0 000600   200007 756100                    STQ     @PARM2+3,,AUTO
         0 000601   000604 701000 0                  TSX1    RCVR
         0 000602   000000 011000                    NOP     0

     3103     5340    1         RETURN;

   5340  0 000603   000000 702200 xent               TSX2  ! X66_ARET

     3104     5341        /**/
     3105     5342    1   RCVR: PROC (DELAY$,DQ$);

   5342  0 000604   200006 741300       RCVR         STX1  ! @PARM2+2,,AUTO

     3106     5343        /**/
     3107     5344    2   DCL DELAY$ PTR;
     3108     5345    2   DCL DQ$ PTR;
     3109     5346    2   DCL DQ$R REDEF DQ$ UBIN;
     3110     5347    2   DCL D$ PTR;
     3111     5348    2   DCL MBLK$ PTR;
     3112     5349    2   DCL P$ PTR;
     3113     5350    2   DCL DELBIT BIT(1);
     3114     5351        /**/
     3115     5352    3           DO INHIBIT;

     3116     5353    3           IF DQ$=ADDR(NIL) OR DQ$R=0 OR ADDR(DQ$)->KQ$DPTR.X.CODE=KQRA_RSTA#

   5353  0 000605   200010 470700                    LDP0  ! @DQ$,,AUTO
         0 000606   000000 236300                    LDQ   ! 0,,PR0
         0 000607   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000610   000732 600200 0                  TZE   ! NILOUT
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:403  
         0 000611   000000 235300                    LDA   ! 0,,PR0
         0 000612   000732 600200 0                  TZE   ! NILOUT
         0 000613   000000 236300                    LDQ   ! 0,,PR0
         0 000614   070000 376207                    ANQ   ! 28672,DL
         0 000615   020000 116207                    CMPQ  ! 8192,DL
         0 000616   000732 600200 0                  TZE   ! NILOUT

     3117     5354    3           THEN GOTO NILOUT;
     3118     5355    4           IF ADDR(DQ$)->KQ$DPTR.X.FLGS THEN DO;

   5355  0 000617   000000 236300                    LDQ   ! 0,,PR0
         0 000620   700000 316207                    CANQ  ! -32768,DL
         0 000621   000630 600200 0                  TZE   ! s:5359

     3119     5356    4             ADDR(DELAY$)->KQ$DPTR.X.FLGS='1'B;

   5356  0 000622   200007 471700                    LDP1  ! @DELAY$,,AUTO
         0 000623   100000 236300                    LDQ   ! 0,,PR1
         0 000624   000001 376200 1                  ANQ   ! 1
         0 000625   400000 276207                    ORQ   ! -131072,DL
         0 000626   100000 756300                    STQ   ! 0,,PR1

     3120     5357    4             GOTO NILOUT;

   5357  0 000627   000732 710200 0                  TRA   ! NILOUT

     3121     5358    4             END;
     3122     5359    3           ADDR(DQ$)->KQ$DPTR.X.CODE=KQRA_MBLK#;

   5359  0 000630   000000 376200 1                  ANQ   ! 0
         0 000631   010000 276207                    ORQ   ! 4096,DL
         0 000632   000000 756300                    STQ   ! 0,,PR0

     3123     5360                             /* We must put KQRA_MBLK# into the code field since     */
     3124     5361                             /* we obliterate the CODE field to turn the KQ$DPTR     */
     3125     5362                             /* to make it look like a pointer when we try to        */
     3126     5363                             /* deliver the MBLK out of KQW$XMITxxx.                 */
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:404  
     3127     5364    3           DELBIT=ADDR(DELAY$)->KQ$DPTR.X.FLGS;

   5364  0 000633   200007 471700                    LDP1  ! @DELAY$,,AUTO
         0 000634   100000 236300                    LDQ   ! 0,,PR1
         0 000635   000022 736200                    QLS   ! 18
         0 000636   400000 376203                    ANQ   ! -131072,DU
         0 000637   200014 756300                    STQ   ! DELBIT,,AUTO

     3128     5365    3           ADDR(DELAY$)->KQ$DPTR.X.FLGS='0'B;

   5365  0 000640   000001 236200 1                  LDQ   ! 1
         0 000641   100000 356300                    ANSQ  ! 0,,PR1

     3129     5366    3           MBLK$=DQ$;

   5366  0 000642   000000 236300                    LDQ   ! 0,,PR0
         0 000643   200012 756300                    STQ   ! MBLK$,,AUTO

     3130     5367    3           ADDR(MBLK$)->KQ$DPTR.X='0'B;

   5367  0 000644   000000 236203                    LDQ   ! 0,DU
         0 000645   200012 752304                    STCQ  ! MBLK$,'04'O,AUTO

     3131     5368    3           IF DELAY$=ADDR(NIL)

   5368  0 000646   100000 236300                    LDQ   ! 0,,PR1
         0 000647   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         0 000650   000666 601200 0                  TNZ   ! s:5375

     3132     5369    4           THEN DO;

     3133     5370    4             DELAY$=DQ$;

   5370  0 000651   000000 236300                    LDQ   ! 0,,PR0
         0 000652   100000 756300                    STQ   ! 0,,PR1

     3134     5371    4             MBLK$->KQ$MBLK.LNK$=DQ$;
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:405  

   5371  0 000653   000000 236300                    LDQ   ! 0,,PR0
         0 000654   200012 473700                    LDP3  ! MBLK$,,AUTO
         0 000655   300000 756300                    STQ   ! 0,,PR3

     3135     5372    4             ADDR(MBLK$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS=DELBIT;

   5372  0 000656   200012 473700                    LDP3  ! MBLK$,,AUTO
         0 000657   200014 236300                    LDQ   ! DELBIT,,AUTO
         0 000660   400000 376203                    ANQ   ! -131072,DU
         0 000661   000022 772200                    QRL   ! 18
         0 000662   300000 676300                    ERQ   ! 0,,PR3
         0 000663   700000 376207                    ANQ   ! -32768,DL
         0 000664   300000 656300                    ERSQ  ! 0,,PR3

     3136     5373    4             END;

   5373  0 000665   000732 710200 0                  TRA   ! NILOUT

     3137     5374    4           ELSE DO;

     3138     5375    4             D$=DELAY$;

   5375  0 000666   200011 756300                    STQ   ! D$,,AUTO

     3139     5376    4             ADDR(D$)->KQ$DPTR.X='0'B;

   5376  0 000667   000000 236203                    LDQ   ! 0,DU
         0 000670   200011 752304                    STCQ  ! D$,'04'O,AUTO

     3140     5377    5               DO CASE(ADDR(DELAY$)->KQ$DPTR.X.CODE);

   5377  0 000671   100000 236300                    LDQ   ! 0,,PR1
         0 000672   000014 772200                    QRL   ! 12
         0 000673   000007 376207                    ANQ   ! 7,DL
         0 000674   000003 116207                    CMPQ  ! 3,DL
         0 000675   000677 602206 0                  TNC   ! s:5377+6,QL
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:406  
         0 000676   000710 710200 0                  TRA   ! s:5383
         0 000677   000710 710200 0                  TRA   ! s:5383
         0 000700   000702 710200 0                  TRA   ! s:5379
         0 000701   000705 710200 0                  TRA   ! s:5381

     3141     5378    5                 CASE(KQRA_MBLK#);

     3142     5379    5                   P$=ADDR(D$->KQ$MBLK.LNK$);

   5379  0 000702   200011 236300                    LDQ   ! D$,,AUTO
         0 000703   200013 756300                    STQ   ! P$,,AUTO
         0 000704   000710 710200 0                  TRA   ! s:5383

     3143     5380    5                 CASE(KQRA_RSTA#);

     3144     5381    5                   P$=ADDR(D$->KQ$STA.RQLNK$);

   5381  0 000705   200011 236300                    LDQ   ! D$,,AUTO
         0 000706   000030 036203                    ADLQ  ! 24,DU
         0 000707   200013 756300                    STQ   ! P$,,AUTO

     3145     5382    5               END;

     3146     5383    4             MBLK$->KQ$MBLK.LNK$=P$->B$$PTR;

   5383  0 000710   200013 473700                    LDP3  ! P$,,AUTO
         0 000711   300000 236300                    LDQ   ! 0,,PR3
         0 000712   200012 474700                    LDP4  ! MBLK$,,AUTO
         0 000713   400000 756300                    STQ   ! 0,,PR4

     3147     5384    4             P$->B$$PTR=DQ$;

   5384  0 000714   000000 236300                    LDQ   ! 0,,PR0
         0 000715   300000 756300                    STQ   ! 0,,PR3

     3148     5385    4             P$->KQ$DPTR.X.FLGS=ADDR(MBLK$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS;

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:407  
   5385  0 000716   200012 474700                    LDP4  ! MBLK$,,AUTO
         0 000717   400000 236300                    LDQ   ! 0,,PR4
         0 000720   300000 676300                    ERQ   ! 0,,PR3
         0 000721   700000 376207                    ANQ   ! -32768,DL
         0 000722   300000 656300                    ERSQ  ! 0,,PR3

     3149     5386    4             ADDR(MBLK$->KQ$MBLK.LNK$)->KQ$DPTR.X.FLGS=DELBIT;

   5386  0 000723   200012 474700                    LDP4  ! MBLK$,,AUTO
         0 000724   200014 236300                    LDQ   ! DELBIT,,AUTO
         0 000725   400000 376203                    ANQ   ! -131072,DU
         0 000726   000022 772200                    QRL   ! 18
         0 000727   400000 676300                    ERQ   ! 0,,PR4
         0 000730   700000 376207                    ANQ   ! -32768,DL
         0 000731   400000 656300                    ERSQ  ! 0,,PR4

     3150     5387    4             END;

   5386  0 000732                       NILOUT       null
     3151     5388    3   NILOUT: ;
     3152     5389    3           DQ$=ADDR(NIL);

   5389  0 000732   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         0 000733   000000 756300                    STQ   ! 0,,PR0

     3153     5390    3           RETURN;

   5390  0 000734   200006 221300                    LDX1  ! @PARM2+2,,AUTO
         0 000735   000001 702211                    TSX2  ! 1,X1

     3154     5391    3           END; /* INHIBIT */

     3155     5392    2   END RCVR;

   5392  0 000736   000001 702211                    TSX2  ! 1,X1

(unnamed)
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:408  
 Sect OctLoc
   1     000   777777 707777   777777 077777                                    ......?.
     3156     5393    1   END KQL$QDELAYR;

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:409  
--  Include file information  --

   KC_CP6.:E05TOU  is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQL$QDELAYR.
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:410  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/w PTR         r     1 @COUNT                     7-0-0/w PTR         r     1 @DELAY$
     7-0-0/w PTR         r     1 @DELAY$                    7-0-0/w PTR         r     1 @DELAY$
     7-0-0/w PTR         r     1 @DELAY$                   10-0-0/w PTR         r     1 @DQ$
    10-0-0/w PTR         r     1 @MBLK$                    10-0-0/w PTR         r     1 @P$
     3-0-0/w PTR         r     1 @PARM1                     4-0-0/w PTR         r     1 @PARM2
    12-0-0/w UBIN        r     1 CODE                      *0-0-0/w UBIN        r     1 COUNT
    11-0-0/w PTR         r     1 D$                        13-0-0/w PTR         r     1 D$
    11-0-0/w PTR         r     1 D$                        11-0-0/w PTR         r     1 D$
    12-0-0/w PTR         r     1 D1$                       13-0-0/w PTR         r     1 D2$
    *0-0-0/w PTR         r     1 DELAY$                    *0-0-0/w PTR         r     1 DELAY$
    *0-0-0/w PTR         r     1 DELAY$                    *0-0-0/w PTR         r     1 DELAY$
    14-0-0/b BIT         r     1 DELBIT                    14-0-0/w PTR         r     1 DLY$
    *0-0-0/w PTR         r     1 DQ$                       *0-0-0/w UBIN        r     1 DQ$R
    13-0-0/w PTR         r     1 ITEM$                     12-0-0/w PTR         r     1 M$
    *0-0-0/w PTR         r     1 MBLK$                     12-0-0/w PTR         r     1 MBLK$
    *0-0-0/w PTR         r     1 P$                        13-0-0/w PTR         r     1 P$
    *0-0-0/w UBIN        r     1 PARM1                     *0-0-0/w UBIN        r     1 PARM2
    14-0-0/b BIT         r     1 SVDELBIT                  11-0-0/w UBIN        r     1 TYP

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$$PTR                     0-0-0/d STRC(6516)  r     1 KQ$CG
     0-0-0/w STRC        r     1 KQ$DPTR                    0-0-0/d STRC(576)   r     1 KQ$MBLK
     0-0-0/w STRC(288)   r     1 KQ$MLH                     0-0-0/d STRC(1296)  r     1 KQ$STA

PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:411  

   Procedure KQL$QDELAYR requires 479 words for executable code.
   Procedure KQL$QDELAYR requires 16 words of local(AUTO) storage.

    No errors detected in file KQL$LIST.:E05TSI    .
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:412  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:413  
          MINI XREF LISTING

ALTRT
      5240**LABEL    5242--CALLALT
B$$PTR
      3574**DCL      5274>>ASSIGN   5283<<ASSIGN   5285<<ASSIGN   5383>>ASSIGN   5384<<ASSIGN
CODE IN PROCEDURE COUNTIT
      5191**DCL      5201<<ASSIGN   5204>>IF       5205>>DOCASE   5213<<ASSIGN
COUNT IN PROCEDURE COUNTIT
      5189**DCL      5186--PROC     5195>>ASSIGN   5196<<ASSIGN   5204<<ASSIGN   5204>>ASSIGN
COUNTIT
      5186**PROC     5183--CALL
D$ IN PROCEDURE COUNTIT
      5192**DCL      5200<<ASSIGN   5201--ASSIGN   5202--ASSIGN   5207<<ASSIGN   5207>>ASSIGN   5209<<ASSIGN
      5209>>ASSIGN   5213--ASSIGN   5214--ASSIGN   5215>>IF
D$ IN PROCEDURE DELAYM
      5101**DCL      5106<<ASSIGN   5107--ASSIGN   5112>>IF       5122>>ASSIGN   5123>>ASSIGN   5124>>ASSIGN
      5126>>ASSIGN   5127>>ASSIGN   5128>>ASSIGN   5143<<ASSIGN   5144--ASSIGN   5147>>IF       5157>>ASSIGN
      5158>>ASSIGN   5159>>ASSIGN   5161>>ASSIGN   5162>>ASSIGN   5163>>ASSIGN
D$ IN PROCEDURE DEQ
      5251**DCL      5264<<ASSIGN   5265--ASSIGN   5268>>ASSIGN   5270>>ASSIGN   5277>>IF
D$ IN PROCEDURE RCVR
      5347**DCL      5375<<ASSIGN   5376--ASSIGN   5379>>ASSIGN   5381>>ASSIGN
D1$ IN PROCEDURE DEQ
      5252**DCL      5268<<ASSIGN   5270<<ASSIGN   5274>>ASSIGN   5280>>ASSIGN   5283>>ASSIGN   5285>>ASSIGN
      5289>>ASSIGN
D2$ IN PROCEDURE DEQ
      5253**DCL      5275<<ASSIGN   5276--ASSIGN   5277>>IF       5283>>ASSIGN   5285>>ASSIGN   5293>>ASSIGN
      5294>>ASSIGN   5296>>ASSIGN   5297>>ASSIGN
DELAY$ IN PROCEDURE COUNTIT
      5188**DCL      5186--PROC     5197>>ASSIGN   5200>>ASSIGN
DELAY$ IN PROCEDURE DELAYM
      5099**DCL      5097--PROC     5106>>ASSIGN   5115--ASSIGN   5116<<ASSIGN   5120--DOCASE   5140--ENTRY
      5143>>ASSIGN   5150--ASSIGN   5151<<ASSIGN   5155--DOCASE
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:414  
DELAY$ IN PROCEDURE DEQ
      5249**DCL      5247--PROC     5257>>IF       5258--IF       5261--ASSIGN   5264>>ASSIGN   5266--DOCASE
      5278<<ASSIGN   5293--ASSIGN   5296--ASSIGN
DELAY$ IN PROCEDURE RCVR
      5344**DCL      5342--PROC     5356--ASSIGN   5364--ASSIGN   5365--ASSIGN   5368>>IF       5370<<ASSIGN
      5375>>ASSIGN   5377--DOCASE
DELAYM
      5097**PROC     5060--CALL     5088--CALL
DELAYR IN PROCEDURE DELAYM
      5140**ENTRY    5045--CALL     5073--CALL
DELBIT IN PROCEDURE RCVR
      5350**DCL      5364<<ASSIGN   5372>>ASSIGN   5386>>ASSIGN
DEQ
      5247**PROC     5242--CALL
DLY$ IN PROCEDURE COUNTIT
      5193**DCL      5197<<ASSIGN   5198--ASSIGN   5199>>IF       5215>>IF
DQ$ IN PROCEDURE RCVR
      5345**DCL      5342--PROC     5346--REDEF    5353>>IF       5353--IF       5355--IF       5359--ASSIGN
      5366>>ASSIGN   5370>>ASSIGN   5371>>ASSIGN   5384>>ASSIGN   5389<<ASSIGN
DQ$R IN PROCEDURE RCVR
      5346**DCL      5353>>IF
ITEM$ IN PROCEDURE DELAYM
      5103**DCL      5110<<ASSIGN   5111--ASSIGN   5114>>ASSIGN   5115--ASSIGN   5116>>ASSIGN   5123--ASSIGN
      5124>>ASSIGN   5127--ASSIGN   5128>>ASSIGN   5145<<ASSIGN   5146--ASSIGN   5149>>ASSIGN   5150--ASSIGN
      5151>>ASSIGN   5158--ASSIGN   5159>>ASSIGN   5162--ASSIGN   5163>>ASSIGN
KQ$CG.AUCTL.DVBYTE.REREAD
      4669**DCL      4670--REDEF
KQ$CG.QUEUE.DELAY$
      4463**DCL      5045<>CALL     5060<>CALL
KQ$DPTR.X
      3592**DCL      5107<<ASSIGN   5144<<ASSIGN   5198<<ASSIGN   5202<<ASSIGN   5214<<ASSIGN   5265<<ASSIGN
      5276<<ASSIGN   5367<<ASSIGN   5376<<ASSIGN
KQ$DPTR.X.CODE
      3597**DCL      5111<<ASSIGN   5120>>DOCASE   5146<<ASSIGN   5155>>DOCASE   5201>>ASSIGN   5213>>ASSIGN
      5266>>DOCASE   5281>>DOCASE   5291>>DOCASE   5353>>IF       5359<<ASSIGN   5377>>DOCASE
KQ$DPTR.X.FLGS
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:415  
      3595**DCL      5115<<ASSIGN   5115>>ASSIGN   5123<<ASSIGN   5123>>ASSIGN   5127<<ASSIGN   5127>>ASSIGN
      5130<<ASSIGN   5150<<ASSIGN   5150>>ASSIGN   5158<<ASSIGN   5158>>ASSIGN   5162<<ASSIGN   5162>>ASSIGN
      5165<<ASSIGN   5258>>IF       5260<<ASSIGN   5261<<ASSIGN   5280>>ASSIGN   5289<<ASSIGN   5293<<ASSIGN
      5293>>ASSIGN   5296<<ASSIGN   5296>>ASSIGN   5355>>IF       5356<<ASSIGN   5364>>ASSIGN   5365<<ASSIGN
      5372<<ASSIGN   5385<<ASSIGN   5385>>ASSIGN   5386<<ASSIGN
KQ$MBLK.DVE.EOMCHAR
      4056**DCL      4058--REDEF
KQ$MBLK.KEY1
      3982**DCL      3984--REDEF
KQ$MBLK.KEY2
      3991**DCL      4009--REDEF
KQ$MBLK.LNK$
      3956**DCL      3958--REDEF    3964--REDEF    3968--REDEF    5109>>ASSIGN   5114<<ASSIGN   5122<<ASSIGN
      5122>>ASSIGN   5123--ASSIGN   5124<<ASSIGN   5126<<ASSIGN   5130--ASSIGN   5157>>ASSIGN   5158--ASSIGN
      5159<<ASSIGN   5207>>ASSIGN   5268--ASSIGN   5283>>ASSIGN   5293--ASSIGN   5294<<ASSIGN   5371<<ASSIGN
      5372--ASSIGN   5379--ASSIGN   5383<<ASSIGN   5385--ASSIGN   5386--ASSIGN
KQ$MBLK.TYC
      4105**DCL      4107--REDEF
KQ$MBLK.XSP.MREQ$
      4011**DCL      4015--REDEF
KQ$MLH.DELAY$
      4972**DCL      5073<>CALL     5088<>CALL
KQ$STA.ACTTYC
      3668**DCL      3672--REDEF
KQ$STA.DCBLNK$
      3675**DCL      3678--REDEF    3682--REDEF
KQ$STA.EVCNT
      3761**DCL      3764--REDEF
KQ$STA.EVNT
      3727**DCL      3731--REDEF    3734--REDEF
KQ$STA.OPNBLKED
      3788**DCL      3791--REDEF
KQ$STA.OPNREJ
      3794**DCL      3796--REDEF
KQ$STA.RQLNK$
      3852**DCL      5126>>ASSIGN   5127--ASSIGN   5128<<ASSIGN   5149<<ASSIGN   5157<<ASSIGN   5161<<ASSIGN
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:416  
      5161>>ASSIGN   5162--ASSIGN   5163<<ASSIGN   5165--ASSIGN   5209>>ASSIGN   5270--ASSIGN   5285>>ASSIGN
      5296--ASSIGN   5297<<ASSIGN   5381--ASSIGN
KQ$STA.SUCCREAD
      3717**DCL      3721--REDEF
KQ$STA.TCOUNT
      3846**DCL      3852--REDEF
KQ$STA.VGOT$
      3831**DCL      3835--REDEF    3839--REDEF
M$ IN PROCEDURE DELAYM
      5102**DCL      5108<<ASSIGN   5110>>ASSIGN   5114>>ASSIGN   5122>>ASSIGN   5126>>ASSIGN   5130>>ASSIGN
MBLK$ IN PROCEDURE DELAYM
      5100**DCL      5097--PROC     5108>>ASSIGN   5109<<ASSIGN   5109>>ASSIGN   5140--ENTRY    5145>>ASSIGN
      5149>>ASSIGN   5157>>ASSIGN   5161>>ASSIGN   5165>>ASSIGN
MBLK$ IN PROCEDURE RCVR
      5348**DCL      5366<<ASSIGN   5367--ASSIGN   5371>>ASSIGN   5372>>ASSIGN   5383>>ASSIGN   5385>>ASSIGN
      5386>>ASSIGN
M_OUT IN PROCEDURE DELAYM
      5115**LABEL    5131--GOTO
NILOUT IN PROCEDURE RCVR
      5386**LABEL    5354--GOTO     5357--GOTO
P$ IN PROCEDURE DEQ
      5250**DCL      5247--PROC     5259<<ASSIGN   5260--ASSIGN   5274<<ASSIGN   5275>>ASSIGN   5281--DOCASE
      5291--DOCASE
P$ IN PROCEDURE RCVR
      5349**DCL      5379<<ASSIGN   5381<<ASSIGN   5383>>ASSIGN   5384>>ASSIGN   5385>>ASSIGN
PARM1
      3566**DCL        22--PROC     5045--CALL     5057--ENTRY    5060--CALL     5070--ENTRY    5073--CALL
      5085--ENTRY    5088--CALL     5181--ENTRY    5183<>CALL     5240--ENTRY    5242<>CALL     5337--ENTRY
      5339<>CALL
PARM2
      3567**DCL        22--PROC     5045--CALL     5057--ENTRY    5060<>CALL     5070--ENTRY    5073--CALL
      5085--ENTRY    5088<>CALL     5181--ENTRY    5183<>CALL     5240--ENTRY    5242<>CALL     5337--ENTRY
      5339<>CALL
RCVR
      5342**PROC     5339--CALL
R_OUT IN PROCEDURE DELAYM
PL6.E3A0      #002=KQL$QDELAYR File=KQL$LIST.:E05TSI                             WED 07/30/97 01:33 Page:417  
      5150**LABEL    5166--GOTO
SC_BCGRRC
      5032**DCL-ENT  5211--CALL     5272--CALL     5287--CALL     5299--CALL
SVDELBIT IN PROCEDURE DEQ
      5254**DCL      5280<<ASSIGN   5289>>ASSIGN
TYP IN PROCEDURE COUNTIT
      5190**DCL      5195<<ASSIGN   5204>>IF
