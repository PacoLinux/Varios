VERSION E05

PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:1    
        1        1        /*M* KYS$IUR_SCHED - Input Unit Record Scheduler */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
        8        8               ECI=0,DIN=7,CSU=3,AND      */
        9        9        /* This procedure is called with two parameters: the context block
       10       10        and a type code.  The type code indicates that the scheduler is being
       11       11        called as a result of: 1) A logon accept or close msg from the host
       12       12                               2) A request data msg from VDH
       13       13
       14       14        If DVC_STATE is not idle, or there are no cards in the hopper to be
       15       15        read, just return.  Otherwise DO CASE on CODE:
       16       16                CALL_VDH:    call VDH with break event.
       17       17                READ:        call KYI$IO to do the I/O.              */
       18       18
       19       19        KYS$IUR_SCHED: PROC(KY$CTX,CODE);
       20       20        /**/
       21       21        %INCLUDE KV_GLBCNS_E;
       22      362        %INCLUDE KY_URP_M;
       23      657        %INCLUDE KY_SUBS_C;
       24      746        %INCLUDE KV$GLB;
       25     1165        %INCLUDE KV$VDH;
       26     1596        %INCLUDE OC_SUBS_C;
       27     2327        /**/
       28     2328        %KY$CTX;
       29     2505    1          DCL CODE UBIN WORD;
       30     2506        %KV$VDH_EVT (NAME=KV_VDH_EVT,STCLASS=SYMREF);
       31     2541        %KV$VDH_EVT (STCLASS=AUTO);
       32     2576    1          DCL KY_IUR_CALLED SBIN WORD SYMREF;
       33     2577        /**/
       34     2578    1          DCL KYI$IO ENTRY(2) ALTRET;
       35     2579    1          DCL KVV$VDI ENTRY(1) ALTRET;
       36     2580    1          DCL KYK$OPCON ENTRY(2);
       37     2581        /**/
PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:2    
       38     2582        /* EQUs */
       39     2583        %KV_VDH_EVT_ID_E;
       40     2589        %EJECT;
PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:3    
       41     2590    1          IF NOT KY$CTX.CR_9107_STATUS.DEV_READY THEN
       42     2591    1             RETURN;
       43     2592    1          KY$CTX.TIMEOUT = 2;
       44     2593    2          DO CASE(CODE);
       45     2594    2             CASE(%KY#CALL_VDH);
       46     2595    2                KV$VDH_EVT = KV_VDH_EVT;
       47     2596    2                KV$VDH_EVT.ID = %KV_VDH_EVT_ID_ATN;
       48     2597    2                KV$VDH_EVT.PRM = 1;
       49     2598    2                CALL KVV$VDI(KV$VDH_EVT);
       50     2599    2             CASE(%KY#READ);
       51     2600    2                KY$CTX.DVC_STATE = %KY#ST_BUSY;
       52     2601    2                CALL KYI$IO(KY$CTX,%KY#IO) ALTRET(ALT);
       53     2602    2          END;                             /* DO CASE(CODE) */
       54     2603    1          RETURN;
       55     2604    1   ALT:   IF KY_IUR_CALLED=1 THEN
       56     2605    1             RETURN;
       57     2606    1          KY$CTX.DVC_STATE=%KY#ST_RDYWAIT;
       58     2607    1          KY$CTX.DVC_STATUS = %KY#DVC_UNREADY;
       59     2608    1          CALL KYK$OPCON(KY$CTX,OC_WRTM);
       60     2609    1          RETURN;
       61     2610    1   END KYS$IUR_SCHED;
       62     2611        %EOD;

PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:4    
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KYS$IUR_SCHED.

   Procedure KYS$IUR_SCHED requires 114 words for executable code.
   Procedure KYS$IUR_SCHED requires 14 words of local(AUTO) storage.

PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:5    

 Object Unit name= KYS$IUR_SCHED                              File name= KYS$SCHED.:E05TOU
 UTS= JUL 30 '97 02:44:56.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   114     72  KYS$IUR_SCHED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  KYS$IUR_SCHED

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVV$VDI
 yes     yes           Std       2 KYI$IO
         yes           Std       2 KYK$OPCON
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV_VDH_EVT                            KY_IUR_CALLED                    r    G$ROS$
PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:6    


        1        1        /*M* KYS$IUR_SCHED - Input Unit Record Scheduler */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
        8        8               ECI=0,DIN=7,CSU=3,AND      */
        9        9        /* This procedure is called with two parameters: the context block
       10       10        and a type code.  The type code indicates that the scheduler is being
       11       11        called as a result of: 1) A logon accept or close msg from the host
       12       12                               2) A request data msg from VDH
       13       13
       14       14        If DVC_STATE is not idle, or there are no cards in the hopper to be
       15       15        read, just return.  Otherwise DO CASE on CODE:
       16       16                CALL_VDH:    call VDH with break event.
       17       17                READ:        call KYI$IO to do the I/O.              */
       18       18
       19       19        KYS$IUR_SCHED: PROC(KY$CTX,CODE);

     19   0 000000  D380 0000 0000  xent KYS$IUR_SCHED   LNJ,B5   X6A_AUTO_2
          0 000003       000E 0002                       DC       14,2

       20       20        /**/
       21       21        %INCLUDE KV_GLBCNS_E;
       22      362        %INCLUDE KY_URP_M;
       23      657        %INCLUDE KY_SUBS_C;
       24      746        %INCLUDE KV$GLB;
       25     1165        %INCLUDE KV$VDH;
       26     1596        %INCLUDE OC_SUBS_C;
       27     2327        /**/
       28     2328        %KY$CTX;
       29     2505    1          DCL CODE UBIN WORD;
       30     2506        %KV$VDH_EVT (NAME=KV_VDH_EVT,STCLASS=SYMREF);
       31     2541        %KV$VDH_EVT (STCLASS=AUTO);
       32     2576    1          DCL KY_IUR_CALLED SBIN WORD SYMREF;
PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:7    
       33     2577        /**/
       34     2578    1          DCL KYI$IO ENTRY(2) ALTRET;
       35     2579    1          DCL KVV$VDI ENTRY(1) ALTRET;
       36     2580    1          DCL KYK$OPCON ENTRY(2);
       37     2581        /**/
       38     2582        /* EQUs */
       39     2583        %KV_VDH_EVT_ID_E;
       40     2589        %EJECT;
PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:8    
       41     2590    1          IF NOT KY$CTX.CR_9107_STATUS.DEV_READY THEN

   2590   0 000005  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 000007  89C6 0006                            CMZ      6,B6
          0 000009  0801 0004                            BAL      s:2592,PREL

       42     2591    1             RETURN;

   2591   0 00000B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       43     2592    1          KY$CTX.TIMEOUT = 2;

   2592   0 00000E  6C02                                 LDV,R6   2
          0 00000F  EAC6 000B                            SRM,R6,'00FF'X    11,B6
          0 000011       00FF

       44     2593    2          DO CASE(CODE);

   2593   0 000012  DCC7 0006                            LDB,B5   @CODE,AUTO
          0 000014  B805                                 LDR,R3   ,B5
          0 000015  3D03                                 CMV,R3   3
          0 000016  0281 0035                            BGE      s:2603,PREL
          0 000018  A830 0000 001E  00                   LDR,R2   s:2593+12,R3
          0 00001B  83A0 0000 0021  00                   JMP      s:2595,R2
          0 00001E       002B                            DC       s:2603,PREL
          0 00001F       0000                            DC       s:2595,PREL
          0 000020       001A                            DC       s:2600,PREL

       45     2594    2             CASE(%KY#CALL_VDH);

       46     2595    2                KV$VDH_EVT = KV_VDH_EVT;

   2595   0 000021  8C80 0000 0000  xsym                 LDI      KV_VDH_EVT
          0 000024  8D47 0008                            SDI      KV$VDH_EVT,AUTO

       47     2596    2                KV$VDH_EVT.ID = %KV_VDH_EVT_ID_ATN;

PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:9    
   2596   0 000026  5C04                                 LDV,R5   4
          0 000027  DAC7 0008                            SRM,R5,'00FF'X    KV$VDH_EVT,AUTO
          0 000029       00FF

       48     2597    2                KV$VDH_EVT.PRM = 1;

   2597   0 00002A  4C01                                 LDV,R4   1
          0 00002B  CF47 0009                            STR,R4   KV$VDH_EVT+1,AUTO

       49     2598    2                CALL KVV$VDI(KV$VDH_EVT);

   2598   0 00002D  CBC7 0008                            LAB,B4   KV$VDH_EVT,AUTO
          0 00002F  CFC7 000A                            STB,B4   KV$VDH_EVT+2,AUTO
          0 000031  BBC7 000A                            LAB,B3   KV$VDH_EVT+2,AUTO
          0 000033  CBF0 0100                            LAB,B4   256,IMO
          0 000035  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          0 000038       0001                            DC       s:2598+12,PREL
          0 000039  0F81 0012                            B        s:2603,PREL

       50     2599    2             CASE(%KY#READ);

       51     2600    2                KY$CTX.DVC_STATE = %KY#ST_BUSY;

   2600   0 00003B  5C04                                 LDV,R5   4
          0 00003C  D7C6 0004                            STH,R5   4,B6

       52     2601    2                CALL KYI$IO(KY$CTX,%KY#IO) ALTRET(ALT);

   2601   0 00003E  CBF0 0004                            LAB,B4   4,IMO
          0 000040  CFC7 000C                            STB,B4   KV$VDH_EVT+4,AUTO
          0 000042  EFC7 000A                            STB,B6   KV$VDH_EVT+2,AUTO
          0 000044  BBC7 000A                            LAB,B3   KV$VDH_EVT+2,AUTO
          0 000046  CBF0 0200                            LAB,B4   512,IMO
          0 000048  E380 0000 0000  xent                 LNJ,B6   KYI$IO
          0 00004B       0004                            DC       s:2604,PREL

       53     2602    2          END;                             /* DO CASE(CODE) */
PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:10   

       54     2603    1          RETURN;

   2603   0 00004C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       55     2604    1   ALT:   IF KY_IUR_CALLED=1 THEN

   2604   0 00004F  E800 0000 0000  xsym ALT             LDR,R6   KY_IUR_CALLED
          0 000052  6D01                                 CMV,R6   1
          0 000053  0981 0004                            BNE      s:2606,PREL

       56     2605    1             RETURN;

   2605   0 000055  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

       57     2606    1          KY$CTX.DVC_STATE=%KY#ST_RDYWAIT;

   2606   0 000058  5C02                                 LDV,R5   2
          0 000059  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 00005B  D7C6 0004                            STH,R5   4,B6

       58     2607    1          KY$CTX.DVC_STATUS = %KY#DVC_UNREADY;

   2607   0 00005D  4C01                                 LDV,R4   1
          0 00005E  CAC6 0004                            SRM,R4,'00FF'X    4,B6
          0 000060       00FF

       59     2608    1          CALL KYK$OPCON(KY$CTX,OC_WRTM);

   2608   0 000061  DBF0 0002                            LAB,B5   2,IMO
          0 000063  DFC7 000C                            STB,B5   KV$VDH_EVT+4,AUTO
          0 000065  EFC7 000A                            STB,B6   KV$VDH_EVT+2,AUTO
          0 000067  BBC7 000A                            LAB,B3   KV$VDH_EVT+2,AUTO
          0 000069  CBF0 0200                            LAB,B4   512,IMO
          0 00006B  E380 0000 0000  xent                 LNJ,B6   KYK$OPCON
          0 00006E       0001                            DC       s:2609,PREL

PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:11   
       60     2609    1          RETURN;

   2609   0 00006F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
       61     2610    1   END KYS$IUR_SCHED;
       62     2611        %EOD;

PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:12   
--  Include file information  --

   OC_SUBS_C.:E05TOU  is referenced.
   KV$VDH.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KYS$IUR_SCHED.
PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:13   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CODE                      4-0-0/w PTR         r     1 @KY$CTX
    *0-0-0/w UBIN(16)    r     1 CODE                       8-0-0/w STRC(32)    r     1 KV$VDH_EVT
    *0-0-0/w STRC(608)   r     1 KY$CTX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 KV_VDH_EVT                 0-0-0/w SBIN(16)    r     1 KY_IUR_CALLED


   Procedure KYS$IUR_SCHED requires 114 words for executable code.
   Procedure KYS$IUR_SCHED requires 14 words of local(AUTO) storage.
PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:15   
          MINI XREF LISTING

ALT
      2604**LABEL    2601--CALLALT
CODE
      2505**DCL        19--PROC     2593>>DOCASE
KV$VDH_EVT
      2568**DCL      2595<<ASSIGN   2598<>CALL
KV$VDH_EVT.ID
      2574**DCL      2596<<ASSIGN
KV$VDH_EVT.PRM
      2574**DCL      2597<<ASSIGN
KVV$VDI
      2579**DCL-ENT  2598--CALL
KV_VDH_EVT
      2533**DCL      2595>>ASSIGN
KY$CTX
      2339**DCL        19--PROC     2601<>CALL     2608<>CALL
KY$CTX.CR_9107_STATUS.DEV_READY
      2410**DCL      2590>>IF
KY$CTX.DEFRD.STATUSW
      2481**DCL      2483--REDEF
KY$CTX.DVC_STATE
      2342**DCL      2600<<ASSIGN   2606<<ASSIGN
KY$CTX.DVC_STATUS
      2343**DCL      2607<<ASSIGN
KY$CTX.MODE
      2430**DCL      2438--REDEF
KY$CTX.STATUSW
      2357**DCL      2359--REDEF    2367--REDEF    2381--REDEF    2395--REDEF    2409--REDEF
KY$CTX.TIMEOUT
      2428**DCL      2592<<ASSIGN
KY$CTX.VDIENB
      2495**DCL      2501--REDEF
PL6.E3A0      #001=KYS$IUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:44 Page:16   
KYI$IO
      2578**DCL-ENT  2601--CALL
KYK$OPCON
      2580**DCL-ENT  2608--CALL
KY_IUR_CALLED
      2576**DCL      2604>>IF

PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:17   
       63        1        /*M* KYS$OUR_SCHED              OUTPUT UNIT RECORD SCHEDULER */
       64        2        /*T***********************************************************/
       65        3        /*T*                                                         */
       66        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       67        5        /*T*                                                         */
       68        6        /*T***********************************************************/
       69        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
       70        8               ECI=0,DIN=7,CSU=3,AND      */
       71        9        /*
       72       10
       73       11          E X T E R N A L    I N T E R F A C E    D E S C R I P T I O N
       74       12
       75       13        KYS$OUR_SCHED is output device independant.
       76       14
       77       15        KYS$OUR_SCHED is always called at at least the interrupt level of
       78       16        the device.  It can be called by the Queue Routines, the Keyin
       79       17        Routine, or the Device Handler.  KYS$OUR_SCHED can be viewed as a
       80       18        black box that responds to a 'I think there is more that can be
       81       19        done now.' feeling on the part of those routines.
       82       20
       83       21        If the I/O that the scheduler has attempted to start is NACK'd then
       84       22        the scheduler simply returns, leaving the DVC_STATE as IDLE.  It is up
       85       23        to the calling routine to determine what to do when a new interrupt
       86       24        occurs.  Note that it is not possible for a timeout to happen since
       87       25        you can't timeout an idle device.
       88       26
       89       27        */
       90       28        %EJECT;
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:18   
       91       29        /*P* NAME: KYS$OUR_SCHED      Handle the output devic I/O scheduleing */
       92       30        /*
       93       31
       94       32        First a few items that I believe are true.
       95       33        The only information that the scheduler uses to determine what to do
       96       34        do is found in:
       97       35              KY$REC.PRINTED    - the flag in the queue'd record
       98       36              KY$REC.TYPE       - indication as to what the record is
       99       37              KY$CTX.DVC_STATE      - software indication of the device state
      100       38              KY$CTX.Q.OUTPUT$  - Location of next I/O command
      101       39
      102       40          Is the DVC_STATE 'IDLE?'
      103       41           YES:
      104       42        LOOP_POINT
      105       43             Locate item indicated by KY$CTX.Q.OUTPUT$.
      106       44             Is said item ready to be processed?
      107       45              YES:
      108       46                Do Case on KY$REC.TYPE
      109       47                Case KY#TYPE_REC
      110       48                   Is that item PRINTED?
      111       49                    NO:
      112       50                      Call IO_LOC with an I/O command.
      113       51                       ACK:
      114       52                         DVC_STATE  <=  BUSY
      115       53                       NACK:
      116       54                         DVC_STATE  <=  DVC_STATE   ( IDLE )
      117       55                      Return back to wherever you came from.
      118       56                    YES:
      119       57                      Remove said item from the queue.
      120       58                      GOTO LOOP_POINT
      121       59
      122       60                Case KY#TYPE_OUTMRK
      123       61                   Return the Output Marker
      124       62                   Remove said item from the queue.
      125       63                   GOTO LOOP_POINT
      126       64
      127       65                End Case
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:19   
      128       66
      129       67           NO:             ( the DVC_STATE is not IDLE )
      130       68              Return back to wherever you came from.
      131       69
      132       70        */
      133       71
      134       72        KYS$OUR_SCHED: PROC( KY$CTX ) ALTRET;
      135       73
      136       74        %INCLUDE KY_URP_M;
      137      369        %INCLUDE KY_SUBS_C;
      138      458        %KY$REC;
      139      497        %KY$OUTMRK;
      140      514
      141      515        %INCLUDE KV_GLBCNS_E;                   /* VDI equates */
      142      856        %INCLUDE KV$GLB;
      143     1275        %INCLUDE KV$VDH;
      144     1706        /* EQUs */
      145     1707        %KV_CMPCOD_E;
      146     1721
      147     1722        %KY$CTX;
      148     1899
      149     1900    1          DCL KVV$VDI ENTRY(1) ALTRET;
      150     1901    1          DCL KYI$IO ENTRY(2) ALTRET;
      151     1902    1          DCL KYQ$FREE ENTRY(1);
      152     1903    1          DCL KYP$TRANS ENTRY(2);
      153     1904
      154     1905        %KV$VDH_OTPMRK( STCLASS=AUTO );         /* Output Marker Return Structure */
      155     1967    1          DCL TEMP$ PTR;
      156     1968    1          DCL SIZE UBIN WORD;
      157     1969        %KV$VDH_OTPMRK  ( NAME = KV_VDH_OTPMRK, STCLASS = SYMREF );
      158     2031
      159     2032
      160     2033        %EJECT;
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:20   
      161     2034    1          IF ( KY$CTX.DVC_STATE = %KY#ST_IDLE ) THEN
      162     2035    2             DO WHILE NOT( KY$CTX.Q.INPUT$ = KY$CTX.Q.OUTPUT$ );
      163     2036    2                IF ( KY$CTX.Q.OUTPUT$->KY$REC.TYPE = %KY#TYPE_REC ) OR
      164     2037    2                   ( KY$CTX.Q.OUTPUT$->KY$REC.TYPE = %KY#TYPE_VFU) THEN
      165     2038    3                   DO;
      166     2039    3                      IF KY$CTX.Q.OUTPUT$ -> KY$REC.PRINTED THEN
      167     2040    4                         DO;
      168     2041    4                            IF KY$CTX.Q.OUTPUT$ -> KY$REC.TYPE = %KY#TYPE_VFU THEN
      169     2042    4                               KY$CTX.VFU_LOADED = '1'B;
      170     2043    4                            IF KY$CTX.Q.OUTPUT$ -> KY$REC.REP_OTPMRK THEN
      171     2044    5                               DO;
      172     2045    5                                  KV$VDH_OTPMRK = KV_VDH_OTPMRK;
      173     2046    5                                  KV$VDH_OTPMRK.DAT =
      174     2047    5                                     KY$CTX.Q.OUTPUT$ -> KY$REC.OTPMRK;
      175     2048    5                                  IF KY$CTX.DSCPND THEN
      176     2049    5                                     KV$VDH_OTPMRK.CMPCOD = %KV_CMPCOD_DLT;
      177     2050    5                                  ELSE
      178     2051    5                                     KV$VDH_OTPMRK.CMPCOD = %KV_CMPCOD_NRM;
      179     2052
      180     2053    5                                  CALL KVV$VDI( KV$VDH_OTPMRK );
      181     2054    5                               END;
      182     2055
      183     2056    4                            CALL KYQ$FREE( KY$CTX );
      184     2057    4                         END;
      185     2058    3                      ELSE
      186     2059    4                         DO;
      187     2060        /*
      188     2061            Before issueing the I/O instruction, check to see if the device
      189     2062            ( Logicaly/Physicaly ) will be online when the command is issued.
      190     2063            If it won't be then don't bother.
      191     2064        */
      192     2065    4                            IF NOT( KY$CTX.DEFRD.ONLINE ) THEN
      193     2066    4                               GOTO ALTEND;
      194     2067    4                            IF KY$CTX.DVCTYP = %KY#TYP_CP AND
      195     2068    4                               NOT KY$CTX.Q.OUTPUT$->KY$REC.BIN THEN
      196     2069    5                               DO;
      197     2070    5                                  TEMP$ = ADDR(KY$CTX.Q.OUTPUT$->KY$REC.TXT);
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:21   
      198     2071    5                                  SIZE = KY$CTX.Q.OUTPUT$->KY$REC.RECSIZE;
      199     2072    5                                  CALL KYP$TRANS(TEMP$,SIZE);
      200     2073    5                               END;        /* IF DVCTYP = CP */
      201     2074    4                            KY$CTX.DVC_STATE = %KY#ST_BUSY;
      202     2075    4                            CALL KYI$IO( KY$CTX, %KY#IO ) ALTRET( ALTEND );
      203     2076    4                            GOTO ENDLOOP;
      204     2077    4                         END;
      205     2078    3                   END;
      206     2079    2                ELSE
      207     2080    3                   DO;                     /* It's an Output Marker */
      208     2081    3                      KV$VDH_OTPMRK = KV_VDH_OTPMRK;
      209     2082    3                      KV$VDH_OTPMRK.DAT =
      210     2083    3                         KY$CTX.Q.OUTPUT$ -> KY$OUTMRK.MARKER;
      211     2084    3                      IF KY$CTX.DSCPND THEN
      212     2085    3                         KV$VDH_OTPMRK.CMPCOD = %KV_CMPCOD_DLT;
      213     2086    3                      ELSE
      214     2087    3                         KV$VDH_OTPMRK.CMPCOD = %KV_CMPCOD_NRM;
      215     2088
      216     2089    3                      CALL KVV$VDI( KV$VDH_OTPMRK );
      217     2090    3                      CALL KYQ$FREE( KY$CTX );
      218     2091    3                   END;
      219     2092    2             END;                          /* DO WHILE */
      220     2093    1   ENDLOOP: ;
      221     2094    1          RETURN;
      222     2095
      223     2096    1   ALTEND: ;
      224     2097    1          ALTRETURN;
      225     2098    1   END KYS$OUR_SCHED;

PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:22   
--  Include file information  --

   KV$VDH.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYS$OUR_SCHED.

   Procedure KYS$OUR_SCHED requires 215 words for executable code.
   Procedure KYS$OUR_SCHED requires 18 words of local(AUTO) storage.

    No errors detected in file KYS$SCHED.:E05TSI    .

PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:23   

 Object Unit name= KYS$OUR_SCHED                              File name= KYS$SCHED.:E05TOU
 UTS= JUL 30 '97 02:45:09.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   215     D7  KYS$OUR_SCHED

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KYS$OUR_SCHED

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KVV$VDI
         yes           Std       1 KYQ$FREE
         yes           Std       2 KYP$TRANS
 yes     yes           Std       2 KYI$IO
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KV_VDH_OTPMRK                    r    G$ROS$
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:24   


       63        1        /*M* KYS$OUR_SCHED              OUTPUT UNIT RECORD SCHEDULER */
       64        2        /*T***********************************************************/
       65        3        /*T*                                                         */
       66        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       67        5        /*T*                                                         */
       68        6        /*T***********************************************************/
       69        7        /*X*   DMR,PLM=7,IND=3,CTI=3,SDI=3,MCL=10,CSI=3,DTI=3,DCI=6,
       70        8               ECI=0,DIN=7,CSU=3,AND      */
       71        9        /*
       72       10
       73       11          E X T E R N A L    I N T E R F A C E    D E S C R I P T I O N
       74       12
       75       13        KYS$OUR_SCHED is output device independant.
       76       14
       77       15        KYS$OUR_SCHED is always called at at least the interrupt level of
       78       16        the device.  It can be called by the Queue Routines, the Keyin
       79       17        Routine, or the Device Handler.  KYS$OUR_SCHED can be viewed as a
       80       18        black box that responds to a 'I think there is more that can be
       81       19        done now.' feeling on the part of those routines.
       82       20
       83       21        If the I/O that the scheduler has attempted to start is NACK'd then
       84       22        the scheduler simply returns, leaving the DVC_STATE as IDLE.  It is up
       85       23        to the calling routine to determine what to do when a new interrupt
       86       24        occurs.  Note that it is not possible for a timeout to happen since
       87       25        you can't timeout an idle device.
       88       26
       89       27        */
       90       28        %EJECT;
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:25   
       91       29        /*P* NAME: KYS$OUR_SCHED      Handle the output devic I/O scheduleing */
       92       30        /*
       93       31
       94       32        First a few items that I believe are true.
       95       33        The only information that the scheduler uses to determine what to do
       96       34        do is found in:
       97       35              KY$REC.PRINTED    - the flag in the queue'd record
       98       36              KY$REC.TYPE       - indication as to what the record is
       99       37              KY$CTX.DVC_STATE      - software indication of the device state
      100       38              KY$CTX.Q.OUTPUT$  - Location of next I/O command
      101       39
      102       40          Is the DVC_STATE 'IDLE?'
      103       41           YES:
      104       42        LOOP_POINT
      105       43             Locate item indicated by KY$CTX.Q.OUTPUT$.
      106       44             Is said item ready to be processed?
      107       45              YES:
      108       46                Do Case on KY$REC.TYPE
      109       47                Case KY#TYPE_REC
      110       48                   Is that item PRINTED?
      111       49                    NO:
      112       50                      Call IO_LOC with an I/O command.
      113       51                       ACK:
      114       52                         DVC_STATE  <=  BUSY
      115       53                       NACK:
      116       54                         DVC_STATE  <=  DVC_STATE   ( IDLE )
      117       55                      Return back to wherever you came from.
      118       56                    YES:
      119       57                      Remove said item from the queue.
      120       58                      GOTO LOOP_POINT
      121       59
      122       60                Case KY#TYPE_OUTMRK
      123       61                   Return the Output Marker
      124       62                   Remove said item from the queue.
      125       63                   GOTO LOOP_POINT
      126       64
      127       65                End Case
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:26   
      128       66
      129       67           NO:             ( the DVC_STATE is not IDLE )
      130       68              Return back to wherever you came from.
      131       69
      132       70        */
      133       71
      134       72        KYS$OUR_SCHED: PROC( KY$CTX ) ALTRET;

     72   0 000000  D380 0000 0000  xent KYS$OUR_SCHED   LNJ,B5   X6A_AUTO_1
          0 000003       0012 0001                       DC       18,1

      135       73
      136       74        %INCLUDE KY_URP_M;
      137      369        %INCLUDE KY_SUBS_C;
      138      458        %KY$REC;
      139      497        %KY$OUTMRK;
      140      514
      141      515        %INCLUDE KV_GLBCNS_E;                   /* VDI equates */
      142      856        %INCLUDE KV$GLB;
      143     1275        %INCLUDE KV$VDH;
      144     1706        /* EQUs */
      145     1707        %KV_CMPCOD_E;
      146     1721
      147     1722        %KY$CTX;
      148     1899
      149     1900    1          DCL KVV$VDI ENTRY(1) ALTRET;
      150     1901    1          DCL KYI$IO ENTRY(2) ALTRET;
      151     1902    1          DCL KYQ$FREE ENTRY(1);
      152     1903    1          DCL KYP$TRANS ENTRY(2);
      153     1904
      154     1905        %KV$VDH_OTPMRK( STCLASS=AUTO );         /* Output Marker Return Structure */
      155     1967    1          DCL TEMP$ PTR;
      156     1968    1          DCL SIZE UBIN WORD;
      157     1969        %KV$VDH_OTPMRK  ( NAME = KV_VDH_OTPMRK, STCLASS = SYMREF );
      158     2031
      159     2032
      160     2033        %EJECT;
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:27   
      161     2034    1          IF ( KY$CTX.DVC_STATE = %KY#ST_IDLE ) THEN

   2034   0 000005  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 000007  E2C6 0004                            LLH,R6   4,B6
          0 000009  6D01                                 CMV,R6   1
          0 00000A  0981 00C6                            BNE      s:2083,PREL

      162     2035    2             DO WHILE NOT( KY$CTX.Q.INPUT$ = KY$CTX.Q.OUTPUT$ );

   2035   0 00000C  0F81 00BC                            B        s:2092,PREL

      163     2036    2                IF ( KY$CTX.Q.OUTPUT$->KY$REC.TYPE = %KY#TYPE_REC ) OR

   2036   0 00000E  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 000010  DCC6 0014                            LDB,B5   20,B6
          0 000012  E805                                 LDR,R6   ,B5
          0 000013  6048                                 SOR,R6   8
          0 000014  E570 007F                            AND,R6   127,IMO
          0 000016  6D01                                 CMV,R6   1
          0 000017  0901 0004                            BE       s:2039,PREL
          0 000019  6D03                                 CMV,R6   3
          0 00001A  0981 007E                            BNE      s:2081,PREL

      164     2037    2                   ( KY$CTX.Q.OUTPUT$->KY$REC.TYPE = %KY#TYPE_VFU) THEN
      165     2038    3                   DO;

      166     2039    3                      IF KY$CTX.Q.OUTPUT$ -> KY$REC.PRINTED THEN

   2039   0 00001C  89C5 0001                            CMZ      1,B5
          0 00001E  0881 003E                            BAGE     s:2065,PREL

      167     2040    4                         DO;

      168     2041    4                            IF KY$CTX.Q.OUTPUT$ -> KY$REC.TYPE = %KY#TYPE_VFU THEN

   2041   0 000020  6D03                                 CMV,R6   3
          0 000021  0981 0004                            BNE      s:2043,PREL
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:28   

      169     2042    4                               KY$CTX.VFU_LOADED = '1'B;

   2042   0 000023  8946 0005                            LBT,'0040'X       5,B6
   2042   0 000025       0040

      170     2043    4                            IF KY$CTX.Q.OUTPUT$ -> KY$REC.REP_OTPMRK THEN

   2043   0 000026  82C5 0001                            LB,'1000'X        1,B5
   2043   0 000028       1000
          0 000029  0581 0029                            BBF      s:2056,PREL

      171     2044    5                               DO;

      172     2045    5                                  KV$VDH_OTPMRK = KV_VDH_OTPMRK;

   2045   0 00002B  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_OTPMRK
          0 00002E  2C00                                 LDV,R2   0
          0 00002F  6C0A                                 LDV,R6   10
          0 000030  BB87                                 LAB,B3   ,AUTO
          0 000031  3C0C                                 LDV,R3   12
          0 000032  0008                                 MMM

      173     2046    5                                  KV$VDH_OTPMRK.DAT =

   2046   0 000033  DCC6 0014                            LDB,B5   20,B6
          0 000035  AB85                                 LAB,B2   ,B5
          0 000036  2C04                                 LDV,R2   4
          0 000037  6C06                                 LDV,R6   6
          0 000038  BB87                                 LAB,B3   ,AUTO
          0 000039  3C0E                                 LDV,R3   14
          0 00003A  0008                                 MMM

      174     2047    5                                     KY$CTX.Q.OUTPUT$ -> KY$REC.OTPMRK;
      175     2048    5                                  IF KY$CTX.DSCPND THEN

   2048   0 00003B  82C6 0005                            LB,'0080'X        5,B6
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:29   
   2048   0 00003D       0080
          0 00003E  0581 0006                            BBF      s:2051,PREL

      176     2049    5                                     KV$VDH_OTPMRK.CMPCOD = %KV_CMPCOD_DLT;

   2049   0 000040  6C0C                                 LDV,R6   12
          0 000041  EF47 000A                            STR,R6   KV$VDH_OTPMRK+4,AUTO
          0 000043  0F81 0003                            B        s:2053,PREL

      177     2050    5                                  ELSE
      178     2051    5                                     KV$VDH_OTPMRK.CMPCOD = %KV_CMPCOD_NRM;

   2051   0 000045  8747 000A                            CL       KV$VDH_OTPMRK+4,AUTO

      179     2052
      180     2053    5                                  CALL KVV$VDI( KV$VDH_OTPMRK );

   2053   0 000047  CBC7 0006                            LAB,B4   KV$VDH_OTPMRK,AUTO
          0 000049  CFC7 000E                            STB,B4   SIZE+1,AUTO
          0 00004B  BBC7 000E                            LAB,B3   SIZE+1,AUTO
          0 00004D  CBF0 0100                            LAB,B4   256,IMO
          0 00004F  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          0 000052       0001                            DC       s:2056,PREL

      181     2054    5                               END;

      182     2055
      183     2056    4                            CALL KYQ$FREE( KY$CTX );

   2056   0 000053  BBC7 0004                            LAB,B3   @KY$CTX,AUTO
          0 000055  CBF0 0100                            LAB,B4   256,IMO
          0 000057  E380 0000 0000  xent                 LNJ,B6   KYQ$FREE
          0 00005A       0001                            DC       s:2057,PREL

      184     2057    4                         END;

   2057   0 00005B  0F81 006D                            B        s:2092,PREL
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:30   

      185     2058    3                      ELSE
      186     2059    4                         DO;

      187     2060        /*
      188     2061            Before issueing the I/O instruction, check to see if the device
      189     2062            ( Logicaly/Physicaly ) will be online when the command is issued.
      190     2063            If it won't be then don't bother.
      191     2064        */
      192     2065    4                            IF NOT( KY$CTX.DEFRD.ONLINE ) THEN

   2065   0 00005D  89C6 0020                            CMZ      32,B6
          0 00005F  0881 0074                            BAGE     s:2096,PREL

      193     2066    4                               GOTO ALTEND;
      194     2067    4                            IF KY$CTX.DVCTYP = %KY#TYP_CP AND

   2067   0 000061  D2C6 000B                            LLH,R5   11,B6
          0 000063  5D02                                 CMV,R5   2
          0 000064  0981 001F                            BNE      s:2074,PREL
          0 000066  82C5 0001                            LB,'4000'X        1,B5
          0 000068       4000
          0 000069  0501 001A                            BBT      s:2074,PREL

      195     2068    4                               NOT KY$CTX.Q.OUTPUT$->KY$REC.BIN THEN
      196     2069    5                               DO;

      197     2070    5                                  TEMP$ = ADDR(KY$CTX.Q.OUTPUT$->KY$REC.TXT);

   2070   0 00006B  CBC5 0005                            LAB,B4   5,B5
          0 00006D  CFC7 000B                            STB,B4   TEMP$,AUTO

      198     2071    5                                  SIZE = KY$CTX.Q.OUTPUT$->KY$REC.RECSIZE;

   2071   0 00006F  E805                                 LDR,R6   ,B5
          0 000070  E570 00FF                            AND,R6   255,IMO
          0 000072  EF47 000D                            STR,R6   SIZE,AUTO
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:31   

      199     2072    5                                  CALL KYP$TRANS(TEMP$,SIZE);

   2072   0 000074  BBC7 000D                            LAB,B3   SIZE,AUTO
          0 000076  BFC7 0010                            STB,B3   SIZE+3,AUTO
          0 000078  ABC7 000B                            LAB,B2   TEMP$,AUTO
          0 00007A  AFC7 000E                            STB,B2   SIZE+1,AUTO
          0 00007C  BBC7 000E                            LAB,B3   SIZE+1,AUTO
          0 00007E  CBF0 0200                            LAB,B4   512,IMO
          0 000080  E380 0000 0000  xent                 LNJ,B6   KYP$TRANS
          0 000083       0001                            DC       s:2074,PREL

      200     2073    5                               END;        /* IF DVCTYP = CP */

      201     2074    4                            KY$CTX.DVC_STATE = %KY#ST_BUSY;

   2074   0 000084  6C04                                 LDV,R6   4
          0 000085  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 000087  E7C6 0004                            STH,R6   4,B6

      202     2075    4                            CALL KYI$IO( KY$CTX, %KY#IO ) ALTRET( ALTEND );

   2075   0 000089  DBF0 0004                            LAB,B5   4,IMO
          0 00008B  DFC7 0010                            STB,B5   SIZE+3,AUTO
          0 00008D  EFC7 000E                            STB,B6   SIZE+1,AUTO
          0 00008F  BBC7 000E                            LAB,B3   SIZE+1,AUTO
          0 000091  CBF0 0200                            LAB,B4   512,IMO
          0 000093  E380 0000 0000  xent                 LNJ,B6   KYI$IO
          0 000096       003E                            DC       s:2096,PREL

      203     2076    4                            GOTO ENDLOOP;

   2076   0 000097  0F81 0039                            B        s:2083,PREL

      204     2077    4                         END;
      205     2078    3                   END;
      206     2079    2                ELSE
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:32   
      207     2080    3                   DO;                     /* It's an Output Marker */

      208     2081    3                      KV$VDH_OTPMRK = KV_VDH_OTPMRK;

   2081   0 000099  AB80 0000 0000  xsym                 LAB,B2   KV_VDH_OTPMRK
          0 00009C  2C00                                 LDV,R2   0
          0 00009D  6C0A                                 LDV,R6   10
          0 00009E  BB87                                 LAB,B3   ,AUTO
          0 00009F  3C0C                                 LDV,R3   12
          0 0000A0  0008                                 MMM

      209     2082    3                      KV$VDH_OTPMRK.DAT =

   2082   0 0000A1  DCC6 0014                            LDB,B5   20,B6
          0 0000A3  AB85                                 LAB,B2   ,B5
          0 0000A4  2C02                                 LDV,R2   2
          0 0000A5  6C06                                 LDV,R6   6
          0 0000A6  BB87                                 LAB,B3   ,AUTO
          0 0000A7  3C0E                                 LDV,R3   14
          0 0000A8  0008                                 MMM

      210     2083    3                         KY$CTX.Q.OUTPUT$ -> KY$OUTMRK.MARKER;
      211     2084    3                      IF KY$CTX.DSCPND THEN

   2084   0 0000A9  82C6 0005                            LB,'0080'X        5,B6
   2084   0 0000AB       0080
          0 0000AC  0581 0006                            BBF      s:2087,PREL

      212     2085    3                         KV$VDH_OTPMRK.CMPCOD = %KV_CMPCOD_DLT;

   2085   0 0000AE  6C0C                                 LDV,R6   12
          0 0000AF  EF47 000A                            STR,R6   KV$VDH_OTPMRK+4,AUTO
          0 0000B1  0F81 0003                            B        s:2089,PREL

      213     2086    3                      ELSE
      214     2087    3                         KV$VDH_OTPMRK.CMPCOD = %KV_CMPCOD_NRM;

PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:33   
   2087   0 0000B3  8747 000A                            CL       KV$VDH_OTPMRK+4,AUTO

      215     2088
      216     2089    3                      CALL KVV$VDI( KV$VDH_OTPMRK );

   2089   0 0000B5  CBC7 0006                            LAB,B4   KV$VDH_OTPMRK,AUTO
          0 0000B7  CFC7 000E                            STB,B4   SIZE+1,AUTO
          0 0000B9  BBC7 000E                            LAB,B3   SIZE+1,AUTO
          0 0000BB  CBF0 0100                            LAB,B4   256,IMO
          0 0000BD  E380 0000 0000  xent                 LNJ,B6   KVV$VDI
          0 0000C0       0001                            DC       s:2090,PREL

      217     2090    3                      CALL KYQ$FREE( KY$CTX );

   2090   0 0000C1  BBC7 0004                            LAB,B3   @KY$CTX,AUTO
          0 0000C3  CBF0 0100                            LAB,B4   256,IMO
          0 0000C5  E380 0000 0000  xent                 LNJ,B6   KYQ$FREE
          0 0000C8       0001                            DC       s:2092,PREL

      218     2091    3                   END;

      219     2092    2             END;                          /* DO WHILE */

   2092   0 0000C9  ECC7 0004                            LDB,B6   @KY$CTX,AUTO
          0 0000CB  DCC6 0012                            LDB,B5   18,B6
          0 0000CD  DDC6 0014                            CMB,B5   20,B6
          0 0000CF  0981 FF3E                            BNE      s:2036,PREL

   2083   0                              ENDLOOP         null
      220     2093    1   ENDLOOP: ;
      221     2094    1          RETURN;

   2094   0 0000D1  C380 0000 0000  xent ENDLOOP         LNJ,B4   X6A_ARET

      222     2095
      223     2096    1   ALTEND: ;

PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:34   
   2096   0                              ALTEND          null
      224     2097    1          ALTRETURN;

   2097   0 0000D4  C380 0000 0000  xent ALTEND          LNJ,B4   X6A_AALT
      225     2098    1   END KYS$OUR_SCHED;

PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:35   
--  Include file information  --

   KV$VDH.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KY_SUBS_C.:E05TOU  is referenced.
   KY_URP_M.:E05TOU  is referenced.
      No diagnostics issued in procedure KYS$OUR_SCHED.
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:36   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KY$CTX                    6-0-0/w STRC(80)    r     1 KV$VDH_OTPMRK
    *0-0-0/w STRC(608)   r     1 KY$CTX                     D-0-0/w UBIN(16)    r     1 SIZE
     B-0-0/w PTR         r     1 TEMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(80)    r     1 KV_VDH_OTPMRK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(64)    r     1 KY$OUTMRK                  0-0-0/w ASTR(80)    r     1 KY$REC


   Procedure KYS$OUR_SCHED requires 215 words for executable code.
   Procedure KYS$OUR_SCHED requires 18 words of local(AUTO) storage.

    No errors detected in file KYS$SCHED.:E05TSI    .
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:37   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:38   
          MINI XREF LISTING

ALTEND
      2096**LABEL    2066--GOTO     2075--CALLALT
ENDLOOP
      2083**LABEL    2076--GOTO
KV$VDH_OTPMRK
      1932**DCL      2045<<ASSIGN   2053<>CALL     2081<<ASSIGN   2089<>CALL
KV$VDH_OTPMRK.CMPCOD
      1965**DCL      2049<<ASSIGN   2051<<ASSIGN   2085<<ASSIGN   2087<<ASSIGN
KV$VDH_OTPMRK.DAT
      1959**DCL      2046<<ASSIGN   2082<<ASSIGN
KV$VDH_OTPMRK.DAT.ID
      1962**DCL      1962--REDEF    1963--REDEF
KVV$VDI
      1900**DCL-ENT  2053--CALL     2089--CALL
KV_VDH_OTPMRK
      1996**DCL      2045>>ASSIGN   2081>>ASSIGN
KV_VDH_OTPMRK.DAT.ID
      2026**DCL      2026--REDEF    2027--REDEF
KY$CTX
      1733**DCL        72--PROC     2056<>CALL     2075<>CALL     2090<>CALL
KY$CTX.DEFRD.ONLINE
      1877**DCL      2065>>IF
KY$CTX.DEFRD.STATUSW
      1875**DCL      1877--REDEF
KY$CTX.DSCPND
      1742**DCL      2048>>IF       2084>>IF
KY$CTX.DVCTYP
      1821**DCL      2067>>IF
KY$CTX.DVC_STATE
      1736**DCL      2034>>IF       2074<<ASSIGN
KY$CTX.MODE
      1824**DCL      1832--REDEF
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:39   
KY$CTX.Q.INPUT$
      1838**DCL      2035>>DOWHILE
KY$CTX.Q.OUTPUT$
      1839**DCL      2035>>DOWHILE  2036>>IF       2036>>IF       2039>>IF       2041>>IF       2043>>IF
      2046>>ASSIGN   2067>>IF       2070>>ASSIGN   2071>>ASSIGN   2082>>ASSIGN
KY$CTX.STATUSW
      1751**DCL      1753--REDEF    1761--REDEF    1775--REDEF    1789--REDEF    1803--REDEF
KY$CTX.VDIENB
      1889**DCL      1895--REDEF
KY$CTX.VFU_LOADED
      1743**DCL      2042<<ASSIGN
KY$OUTMRK.MARKER
       511**DCL      2082>>ASSIGN
KY$REC.BIN
       487**DCL      2067>>IF
KY$REC.OTPMRK
       492**DCL      2046>>ASSIGN
KY$REC.PRINTED
       486**DCL      2039>>IF
KY$REC.RECSIZE
       485**DCL       495--IMP-SIZ  2071>>ASSIGN
KY$REC.REP_OTPMRK
       489**DCL      2043>>IF
KY$REC.TXT
       495**DCL      2070--ASSIGN
KY$REC.TXTARRAY
       494**DCL       495--REDEF
KY$REC.TYPE
       484**DCL      2036>>IF       2036>>IF       2041>>IF
KYI$IO
      1901**DCL-ENT  2075--CALL
KYP$TRANS
      1903**DCL-ENT  2072--CALL
KYQ$FREE
      1902**DCL-ENT  2056--CALL     2090--CALL
SIZE
PL6.E3A0      #002=KYS$OUR_SCHED File=KYS$SCHED.:E05TSI                          WED 07/30/97 02:45 Page:40   
      1968**DCL      2071<<ASSIGN   2072<>CALL
TEMP$
      1967**DCL      2070<<ASSIGN   2072<>CALL
