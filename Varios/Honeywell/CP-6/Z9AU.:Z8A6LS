
     DIRECTORY AND SEGMENT LIST  (OBJECT UNIT NAME '')

      * SYMDEF *        GLOBAL NAME               SEGMENT  OFFSET      ACCESS ATTRIBUTES
     1  POSOFF 'Z9AU$OFFSET'                       Z9AU        0          R  W  E  L  U
     2  .MVN.  'Z9AU$MOVE_NUMERIC'                 Z9AU       72          R  W  E  L  U
     3  .MVE.  'Z9AU$MOVE_EBCDIC'                  Z9AU      120          R  W  E  L  U
     4  .MVG.  'Z9AU$MOVE_GBCD'                    Z9AU      171          R  W  E  L  U
     5  .MVNP. 'Z9AU$MOVE_C3_NUMERIC'              Z9AU      231          R  W  E  L  U

      * COMMON SECTION *  GLOBAL NAME                       SIZE          KIND                  ATTRIBUTES
     6  TEMPS  'TEMPS'                                        12           DATA

      * SYMREF *        GLOBAL NAME                                    ACCESS ATTRIBUTES
     7  GBCD   'GBCD'                                                     R  W NE  L  U

      * SECTION *          SIZE          KIND
     8  Z9AU                260           CODE


     PROGRAM BREAK         272

                                      1 *M* Z9AU -- OFFSET HANDLER AND MOVE_NUMERIC CONVERTER
                                      2 *T***********************************************************
                                      3 *T*                                                         *
                                      4 *T* COPYRIGHT (C) BULL HN INFORMATION SYSTEMS INC., 1997    *
                                      5 *T*                                                         *
                                      6 *T***********************************************************
                        000000        7        ENTDEF  (POSOFF,Z9AU$OFFSET)
                        000000        8        SECT    Z9AU,CODE
                        000000        9        SYMREF  GBCD
                        000000       10 .TYD   EQU     0               %TYD, TYPE DECIMAL (PACKED)

                                     12 *P*
                                     13 *P*
                                     14 *P*        NAME: Z9AU
                                     15 *P*     PURPOSE: ADD OR SUBTRACT VARIOUS UNITS FROM A DESCRIPTOR.
                                     16
                                     17
                                     18 *D*        NAME: POSOFF
                                     19 *D*       ENTRY: POSOFF
                                     20 *D*   INTERFACE: NONE
                                     21 *D*       INPUT:
                                     22 *D*                 OFFSET  - NUMBER OF UNITS TO ADD OR SUBTRACT.
                                     23 *D*                 CODE    - UNIT CODE AS FOLLOWS:
                                     24 *D*
                                     25 *D*                                  CODE       UNIT
                                     26 *D*                                  ----       ----
                                     27 *D*
                                     28 *D*                                   00        BIT
                                     29 *D*                                   01        4-BIT NUMERIC
                                     30 *D*                                   02        4-BIT ALPHANUMERIC
                                     31 *D*                                   03        6-BIT ALPHANUMERIC
                                     32 *D*                                   04        9-BIT NUMERIC
                                     33 *D*                                   05        9-BIT ALPHANUMERIC
                                     34 *D*                                   06        WORD
                                     35 *D*
                                     36 *D*                  DESC - ADDRESS OF DESCRIPTOR TO BE MODIFIED.
                                     37 *D*
                                     38 *D* DESCRIPTION: ADD OR SUBTRACT OFFSET PLACING RESULT IN A POINTER
                                     39 *D*              REGISTER, STORE THAT RESULT BACK INTO LOCATION OF
                                     40 *D*              ORIGINAL DESCRIPTOR.
                                     41 *D*
                        000000       42 POSOFF NULL
      000000 000000 4715 00          43        LDP1    0,,0            PTR TO ARG#1, OFFSET
      000001 100000 2351 00          44        LDA     0,,1            VALUE OF OFFSET
      000002 000001 4715 00          45        LDP1    1,,0            PTR TO ARG#2, CODE
      000003 100000 2361 00          46        LDQ     0,,1            VALUE OF CODE
      000004 000002 4775 00          47        LDP7    2,,0            PTR TO ARG#3, DESC
                                     48

      000005 000000 1150 07          49        CMPA    0,DL            IF OFFSET IS NEGATIVE, USE NEGOFF
      000006 000013 6040 00 010NN    50        TMI     NEGOFF
      000007 000001 7360 00          51        QLS     1               CODE * 2
      000010 000020 7170 06 010NN    52        XED     POSTAB,QL       POSITIVE OFFSET
      000011 000054 7170 06 010NN    53        XED     PUTAWY,QL       MAKE INTELLIGIBLE
      000012 000001 7100 11          54        TRA     1,1             RETURN
                                     55
                                     56 *V*
                                     57 *V*        NAME: NEGOFF
                                     58 *V*              INTERNAL LABEL
                                     59 *V*
                        000013       60 NEGOFF NULL
      000013 000000 5310 00          61        NEG                     NEGATE THE OFFSET BEFORE USING NEGOFF
      000014 000001 7360 00          62        QLS     1               CODE * 2
      000015 000036 7170 06 010NN    63        XED     NEGTAB,QL       NEGATIVE OFFSET
      000016 000054 7170 06 010NN    64        XED     PUTAWY,QL       MAKE INTELLIGIBLE
      000017 000001 7100 11          65        TRA     1,1             RETURN
                                     66
                                     67 *
                                     68 *  TABLES
                                     69 *
                                     70
                        000020       71 POSTAB EVEN
      000020 700000 7665 00          72        LAR6    0,,7            0  BIT
      000021 600000 5035 05          73        ABD     0,AL,6
      000022 700000 6665 00          74        NAR6    0,,7            1  4-BIT NUMERIC
      000023 600000 5025 05          75        A4BD    0,AL,6
      000024 700000 5665 00          76        AAR6    0,,7            2  4-BIT ALPHANUMERIC
      000025 600000 5025 05          77        A4BD    0,AL,6
      000026 700000 5665 00          78        AAR6    0,,7            3  6-BIT ALPHANUMERIC
      000027 600000 5015 05          79        A6BD    0,AL,6
      000030 700000 6665 00          80        NAR6    0,,7            4  9-BIT NUMERIC
      000031 600000 5005 05          81        A9BD    0,AL,6
      000032 700000 5665 00          82        AAR6    0,,7            5  9-BIT ALPHANUMERIC
      000033 600000 5005 05          83        A9BD    0,AL,6
      000034 700000 7665 00          84        LAR6    0,,7            6  WORD
      000035 600000 5075 05          85        AWD     0,AL,6

                                     86
                        000036       87 NEGTAB EVEN
      000036 700000 7665 00          88        LAR6    0,,7            0  BIT
      000037 600000 5235 05          89        SBD     0,AL,6
      000040 700000 6665 00          90        NAR6    0,,7            1  4-BIT NUMERIC
      000041 600000 5225 05          91        S4BD    0,AL,6
      000042 700000 5665 00          92        AAR6    0,,7            2  4-BIT ALPHANUMERIC
      000043 600000 5225 05          93        S4BD    0,AL,6
      000044 700000 5665 00          94        AAR6    0,,7            3  6-BIT ALPHANUMERIC
      000045 600000 5215 05          95        S6BD    0,AL,6
      000046 700000 6665 00          96        NAR6    0,,7            4  9-BIT NUMERIC
      000047 600000 5205 05          97        S9BD    0,AL,6
      000050 700000 5665 00          98        AAR6    0,,7            5  9-BIT ALPHANUMERIC
      000051 600000 5205 05          99        S9BD    0,AL,6
      000052 700000 7665 00         100        LAR6    0,,7            6  WORD
      000053 600000 5275 05         101        SWD     0,AL,6
                                    102
                        000054      103 PUTAWY EVEN
      000054 700000 7465 00         104        SAR6    0,,7            0  BIT
      000055 000000 0110 07         105        NOP     0,DL
      000056 700000 6465 00         106        ARN6    0,,7            1  4-BIT NUMERIC
      000057 000000 0110 07         107        NOP     0,DL
      000060 700000 5465 00         108        ARA6    0,,7            2  4-BIT ALPHANUMERIC
      000061 000000 0110 07         109        NOP     0,DL
      000062 700000 5465 00         110        ARA6    0,,7            3  6-BIT ALPHANUMERIC
      000063 000000 0110 07         111        NOP     0,DL
      000064 700000 6465 00         112        ARN6    0,,7            4  9-BIT NUMERIC
      000065 000000 0110 07         113        NOP     0,DL
      000066 700000 5465 00         114        ARA6    0,,7            5  9-BIT ALPHANUMERIC
      000067 000000 0110 07         115        NOP     0,DL
      000070 600000 6271 00         116        EAX7    0,,6            6  WORD
      000071 700000 7471 00         117        STX7    0,,7
                                    118
                                    119
                                    120 *D*
                                    121 *D*        NAME: Z9AU$MOVE_NUMERIC
                                    122 *D*       INPUT: ARG#1 -- FROM DESCRIPTOR

                                    123 *D*              ARG#2 -- "TO" DESCRIPTOR
                                    124 *D*              ARG#3 -- FROM POINTER
                                    125 *D*              ARG#4 -- "TO" POINTER
                                    126 *D*
                        000072      127        ENTDEF  (.MVN.,Z9AU$MOVE_NUMERIC)
                        000072      128 .MVN.  NULL
      000072 000010 4500 00 010NN   129        STZ     FROM
      000073 000000 4775 00         130        LDP7    0,,0
      000074 000000 1005 00         131        MLR     (1,0,0,N),(0,0,0,N)
      000075 700000 0000 02         132        ADSC9   0,0,2,7         MOVE DESCRIPTOR TO FROM
      000076 000010 4000 02 010NN   133        ADSC9   FROM,2,2
      000077 700000 2350 03         134        LDA     =O700000,DU     PREPARE POINTER REGISTER TAG
      000100 000010 2550 00 010NN   135        ORSA    FROM            FULL DESCRIPTOR NOW BUILT FOR FROM
                                    136
      000101 000011 4500 00 010NN   137        STZ     TO              START FRESH
      000102 000001 4765 00         138        LDP6    1,,0
      000103 000000 1005 00         139        MLR     (1,0,0,N),(0,0,0,N)
      000104 600000 0000 02         140        ADSC9   0,0,2,6         MOVE DESCRIPTOR TO TO
      000105 000011 4000 02 010NN   141        ADSC9   TO,2,2
      000106 600000 2350 03         142        LDA     =O600000,DU     PREPARE POINTER REGISTER 6 TAG
      000107 000011 2550 00 010NN   143        ORSA    TO              FULL TO DESCRIPTOR NOW BUILT
                                    144
      000110 000002 4775 00         145        LDP7    2,,0
      000111 700000 4775 00         146        LDP7    0,,7            POINTS TO CONSTANT STRING
      000112 000003 4765 00         147        LDP6    3,,0
      000113 600000 4765 00         148        LDP6    0,,6            POINTS TO BUFFER TO BE FILLED
                                    149
      000114 000120 3005 20         150        MVN     (1,0,1,N),(1,0,1,N)
      000115 000010 0000 00 010NN   151        ARG     FROM            INDIRECT TO FROM
      000116 000011 0000 00 010NN   152        ARG     TO              INDIRECT TO TO
                                    153
      000117 000001 7100 11         154        TRA     1,1             RETURN TO PL6

                                    156 *D*
                                    157 *D*        NAME: Z9AU$MOVE_EBCDIC
                                    158 *D*       INPUT: ARG#1 -- FROM DESCRIPTOR
                                    159 *D*              ARG#2 -- "TO" DESCRIPTOR
                                    160 *D*              ARG#3 -- FROM POINTER
                                    161 *D*              ARG#4 -- "TO" POINTER
                                    162 *D*
                        000120      163        ENTDEF  (.MVE.,Z9AU$MOVE_EBCDIC)
                        000120      164 .MVE.  NULL
      000120 000000 4775 00         165        LDP7    0,,0
      000121 077777 2350 07         166        LDA     =O077777,DL
      000122 700000 3751 00         167        ANA     ,,7
      000123 040000 3150 07         168        CANA    =O040000,DL     CHECK, OVERPUNCHED OR PACKED DECIMAL
      000124 000126 6010 00 010NN   169        TNZ     ISPKD           PACKED DECIMAL
      000125 010000 6750 07         170        ERA     =O010000,DL     OVERPUNCHED, CORRECT S FIELD
      000126 700000 2750 03         171 ISPKD  ORA     =O700000,DU     PREPARE POINTER REGISTER TAG
      000127 000010 7550 00 010NN   172        STA     FROM            FULL DESCRIPTOR NOW BUILT FOR FROM
                                    173
      000130 000001 4765 00         174        LDP6    1,,0
      000131 777777 2350 07         175        LDA     -1,DL
      000132 600000 3751 00         176        ANA     ,,6
      000133 600000 2750 03         177        ORA     =O600000,DU     PREPARE POINTER REGISTER 6 TAG
      000134 600000 7201 00         178        LXL0    ,,6
      000135 030000 3600 03         179        ANX0    =O030000,DU
      000136 030000 1000 03         180        CMPX0   =O030000,DU
                                    181
      000137 000002 4775 00         182        LDP7    2,,0
      000140 700000 4775 00         183        LDP7    0,,7            POINTS TO CONSTANT STRING
      000141 000003 4765 00         184        LDP6    3,,0
      000142 600000 4765 00         185        LDP6    0,,6            POINTS TO BUFFER TO BE FILLED
      000143 000164 6000 00 010NN   186        TZE     NSMOVE          NO SIGN, NEED MVNX, NS BIT ON
      000144 040000 3150 07         187        CANA    =O040000,DL
      000145 000157 6000 00 010NN   188        TZE     NOTOVP          NOT OVERPUNCHED
      000146 050000 6750 07         189        ERA     =O050000,DL     OVP, TN OFF, SET S FOR OVP
      000147 000011 7550 00 010NN   190        STA     TO                                     SIGN
      000150 400000340520           191        OCT     400000340520    MVNX WILL NOT MOVE OVERPUNCHED ASCII TO
      000151 000010 0000 00 010NN   192        ARG     FROM            OVERPUNCHED EBCDIC (IPR FAULT IF SIGN

      000152 000000 0400 77 010NN   193        NDSC4   TEMP,0,63,0     OVERPUNCHED WITH A ZERO); THEREFORE,
      000153 000120340400           194        OCT     000120340400    NEED TWO MOVES WITH INTERMEDIATE
      000154 000000 0400 77 010NN   195        NDSC4   TEMP,0,63,0     OPERAND
      000155 000011 0000 00 010NN   196        ARG     TO
      000156 000001 7100 11         197        TRA     1,1             RETURN TO PL6
      000157 000011 7550 00 010NN   198 NOTOVP STA     TO                                     SIGN
                                    199
      000160 000120340520           200        OCT     000120340520    MVNX
      000161 000010 0000 00 010NN   201        ARG     FROM            INDIRECT TO FROM
      000162 000011 0000 00 010NN   202        ARG     TO              INDIRECT TO TO
                                    203
      000163 000001 7100 11         204        TRA     1,1             RETURN TO PL6
      000164 000011 7550 00 010NN   205 NSMOVE STA     TO
                                    206
      000165 200120340520           207        OCT     200120340520    MVNX WITH NS BIT SET
      000166 000010 0000 00 010NN   208        ARG     FROM            INDIRECT TO FROM
      000167 000011 0000 00 010NN   209        ARG     TO              INDIRECT TO TO
                                    210
      000170 000001 7100 11         211        TRA     1,1             RETURN TO PL6

                                    213 *D*
                                    214 *D*        NAME: Z9AU$MOVE_GBCD
                                    215 *D*       INPUT: ARG#1 -- FROM DESCRIPTOR
                                    216 *D*              ARG#2 -- "TO" DESCRIPTOR
                                    217 *D*              ARG#3 -- FROM POINTER
                                    218 *D*              ARG#4 -- "TO" POINTER
                                    219 *D*
                        000171      220        ENTDEF  (.MVG.,Z9AU$MOVE_GBCD)
                        000171      221 .MVG.  NULL
      000171 000000 4775 00         222        LDP7    0,,0
      000172 040077 2350 07         223        LDA     =O040077,DL     SELECT TN AND N FIELDS
      000173 700000 3751 00         224        ANA     ,,7
      000174 700000 2750 03         225        ORA     =O700000,DU     PREPARE POINTER REGISTER TAG
      000175 000010 7550 00 010NN   226        STA     FROM            FULL DESCRIPTOR NOW BUILT FOR FROM
      000176 700001 2201 00         227        LDX0    1,,7            CONSTANT TYPE, %TYD OR %TYO
      000177 000001 4765 00         228        LDP6    1,,0
      000200 700077 2350 07         229        LDA     =O700077,DL     SELECT CN AND N FIELDS
      000201 600000 3751 00         230        ANA     ,,6
      000202 000224 2750 00 010NN   231        ORA     BCDDSC          PREPARE POINTER REGISTER 6 TAG
      000203 000011 7550 00 010NN   232        STA     TO              FULL TO DESCRIPTOR NOW BUILT
                                    233
      000204 000002 4775 00         234        LDP7    2,,0
      000205 700000 4775 00         235        LDP7    0,,7            POINTS TO CONSTANT STRING
      000206 000003 4765 00         236        LDP6    3,,0
      000207 600000 4765 00         237        LDP6    0,,6            POINTS TO BUFFER TO BE FILLED
                                    238
      000210 000000 1000 03         239        CMPX0   .TYD,DU         CHECK CONSTANT TYPE
      000211 000217 6000 00 010NN   240        TZE     PKDBCD          CONSTANT IS PACKED DECIMAL
      000212 000120 1605 20         241        MVT     (1,0,1,N),(1,0,1,N)   CONSTANT IS ASCII DECIMAL
      000213 000010 0000 00 010NN   242        ARG     FROM            INDIRECT TO FROM
      000214 000011 0000 00 010NN   243        ARG     TO              INDIRECT TO TO
      000215 000000 0000 00 020NN   244        ARG     GBCD
                                    245
      000216 000001 7100 11         246        TRA     1,1             RETURN TO PL6
                                    247 *
      000217 000120 1605 20         248 PKDBCD MVT     (1,0,1,N),(1,0,1,N)
      000220 000010 0000 00 010NN   249        ARG     FROM

      000221 000011 0000 00 010NN   250        ARG     TO
      000222 000225 0000 00 010NN   251        ARG     U.PTOG
      000223 000001 7100 11         252        TRA     1,1
      000224 600000 0200 00         253 BCDDSC ADSC6   **,0,0,6
      000225 000001002003           254 U.PTOG OCT     000001002003,004005006007,010011060060,060052060060
      000226 004005006007
      000227 010011060060
      000230 060052060060

                                    256 *D*
                                    257 *D*        NAME: Z9AU$MOVE_C3_NUMERIC
                                    258 *D*       INPUT: ARG#1 -- FROM DESCRIPTOR
                                    259 *D*              ARG#2 -- "TO" DESCRIPTOR
                                    260 *D*              ARG#3 -- FROM POINTER
                                    261 *D*              ARG#4 -- "TO" POINTER
                                    262 *D*
                        000231      263        ENTDEF  (.MVNP.,Z9AU$MOVE_C3_NUMERIC)
                        000231      264 .MVNP. NULL
      000231 000010 4500 00 010NN   265        STZ     FROM
      000232 000000 4775 00         266        LDP7    0,,0
      000233 000000 1005 00         267        MLR     (1,0,0,N),(0,0,0,N)
      000234 700000 0000 02         268        ADSC9   0,0,2,7         MOVE DESCRIPTOR TO FROM
      000235 000010 4000 02 010NN   269        ADSC9   FROM,2,2
      000236 700000 2350 03         270        LDA     =O700000,DU     PREPARE POINTER REGISTER TAG
      000237 000010 2550 00 010NN   271        ORSA    FROM            FULL DESCRIPTOR NOW BUILT FOR FROM
                                    272
      000240 000011 4500 00 010NN   273        STZ     TO              START FRESH
      000241 000001 4765 00         274        LDP6    1,,0
      000242 000000 1005 00         275        MLR     (1,0,0,N),(0,0,0,N)
      000243 600000 0000 02         276        ADSC9   0,0,2,6         MOVE DESCRIPTOR TO TO
      000244 000011 4000 02 010NN   277        ADSC9   TO,2,2
      000245 600000 2350 03         278        LDA     =O600000,DU     PREPARE POINTER REGISTER 6 TAG
      000246 000011 2550 00 010NN   279        ORSA    TO              FULL TO DESCRIPTOR NOW BUILT
                                    280
      000247 000002 4775 00         281        LDP7    2,,0
      000250 700000 4775 00         282        LDP7    0,,7            POINTS TO CONSTANT STRING
      000251 000003 4765 00         283        LDP6    3,,0
      000252 600000 4765 00         284        LDP6    0,,6            POINTS TO BUFFER TO BE FILLED
                                    285
      000253 400120 3005 20         286        MVN     (1,0,1,N),(1,0,1,N),,1
      000254 000010 0000 00 010NN   287        ARG     FROM            INDIRECT TO FROM
      000255 000011 0000 00 010NN   288        ARG     TO              INDIRECT TO TO
                                    289
      000256 000001 7100 11         290        TRA     1,1             RETURN TO PL6

                        000000      292        CSECT   TEMPS,DATA
                        000000      293        EVEN
                        000000      294 TEMP   BSS     8
                        000010      295 FROM   BSS     1
                        000011      296 TO     BSS     1
                                    297        END
 GMAP6 VERSION/ASSEMBLY DATES  JNPA NO TTL/2(_00]      JNPB NO TTL/2(_00]      JNPC NO TTL/2(_00]
 THERE WERE    NO  WARNING FLAGS IN THE ABOVE ASSEMBLY

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
   224   BCDDSC   REL   Z9AU     253  231R  253
    10   FROM     REL   TEMPS    295  129W  133D  135A  151   172W  192   201   208   226W  242   249   265W  269D
                                      295
NO VAL   GBCD     EXT   SYMREF          9   244
   126   ISPKD    REL   Z9AU     171  169T  171
   120   .MVE.    REL   Z9AU     164  163   164
   171   .MVG.    REL   Z9AU     221  220   221
    72   .MVN.    REL   Z9AU     128  127   128
   231   .MVNP.   REL   Z9AU     264  263   264
     0   .TYD     ABS             10   10   239R
    13   NEGOFF   REL   Z9AU      60   50T   60
    36   NEGTAB   REL   Z9AU      87   63R   87
   157   NOTOVP   REL   Z9AU     198  188T  198
   164   NSMOVE   REL   Z9AU     205  186T  205
   217   PKDBCD   REL   Z9AU     248  240T  248
     0   POSOFF   REL   Z9AU      42    7    42
    20   POSTAB   REL   Z9AU      71   52R   71
    54   PUTAWY   REL   Z9AU     103   53R   64R  103
     0   TEMP     REL   TEMPS    294  193D  195D  294
  6001   TEMPS    SEC   CSECT    292  292
    11   TO       REL   TEMPS    296  137W  141D  143A  152   190W  196   198W  202   205W  209   232W  243   250
                                      279A  288   296
   225   U.PTOG   REL   Z9AU     254  251   254
  6000   Z9AU     SEC   SECT       8    8
