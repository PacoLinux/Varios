VERSION E05

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI                                                                1    BMAP - B00     
                                         1  *M* IRM$SCREECH   Monitor Resident portion of Recovery - BMAP
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                2    BMAP - B00     
                                         7         TTL     IRM$SCREECH
                                         8  *
                                         9         ENTDEF  IRM$USER$SCREECH
                                        10         ENTDEF  IRM$USER_SCREECH
                                        11         ENTDEF  IRM$SCREECH
                                        12         ENTDEF  IRM$RETURN
                                        13         ENTDEF  IRM$REBOOT
                                        14         ENTDEF  IRM$QUIT
                                        15         ENTDEF  IRM$DELTAQ
                                        16  *
                                        17         ENTREF  HFA$XDELRTN
                                        18         ENTREF  HFA$STOPCPU
                                        19         ENTREF  HFA$STARTCPU
                                        20         ENTREF  HFA$SCRCPU
                                        21         ENTREF  HFC$BMAP_CLOCK
                                        22         ENTREF  IRM$LOGERR
                                        23         ENTREF  SSS$BLOCK
                                        24         ENTREF  SSS$STOP
                                        25         ENTREF  JSD$DELUSR
                                        26         ENTREF  IRM$RCVR2
                                        27  *
                                        28         SEGREF  SCUSID
                                        29  *
                                        30         SYMREF  B$MONTSTACK$
                                        31         SYMREF  B$TSTACK$
                                        32         SYMREF  B$JIT$
                                        33         SYMREF  H_RPM_FLG
                                        34         SYMREF  IT_XDELTA
                                        35         SYMREF  S_PNO
                                        36         SYMREF  S_PORTNR
                                        37         SYMREF  S_CUN
                                        38         SYMREF  F_CWUSER
                                        39         SYMREF  F_CWLK
                                        40         SYMREF  H_GATECNT
                                        41         SYMREF  NI$DS
                                        42         SYMREF  JG_MING
                                        43         SYMREF  JG_SCREECHG
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                3    BMAP - B00     
                                        44         SYMREF  SC_RVA1000
                                        45         SYMREF  SC_USER
                                        46         SYMREF  SS_MS_COOKIE
                                        47         SYMREF  SS_UTS_COOKIE
                                        48  *
                                        49         LODM    B_BMACROS_C
                                        50         PMC     ON
                                        51  *
                                        52  *  SEGIDS FOR MONITOR LINKAGE SEGMENT
                                        53  *
             000000006000               54  MONIS  BOOL    6000
             000000006001               55  JITSID BOOL    6001
             000000006025               56  ASLENTSID BOOL 6025
             000000006026               57  XDEL   BOOL    6026
             000000006035               58  MLS0   BOOL    6035
             000000006054               59  MISC   BOOL    6054
             000000006131               60  RCVENT BOOL    6131
                                        61  *
                                        62  *
                                        63  *
             000000001762               64  ISR    BOOL    1762
             000000001766               65  ASR    BOOL    1766
             000000001761               66  TYP    BOOL    1761
             000000001764               67  SSR    BOOL    1764
                                        68  *
                                        69  *  MON LSEG DEFINITIONS  (2*LS.XXX TO GET OFFSET)
                                        70  *
                                        71         MONLS
             000000000000                   LS.IS EQU 0             MONITOR INSTRUCTION SEGMENT
             000000000001                   LS.JITU EQU LS.IS+1       USER JIT
             000000000002                   LS.BUF EQU LS.JITU+1     USER FILE MANAGEMENT BUFFERS
             000000000003                   LS.ROSEG EQU LS.BUF+1      USER READ ONLY SEGMENT
             000000000004                   LS.DS1 EQU LS.ROSEG+1    MONITOR DATA SEGMENT 1
             000000000004                   LS.CFU EQU LS.DS1        MON DS1 -- CFUS
             000000000005                   LS.DS2 EQU LS.DS1+1      MONITOR DATA SEGMENT 2
             000000000006                   LS.DS3 EQU LS.DS2+1      MONITOR DATA SEGMENT 3
             000000000007                   LS.DS4 EQU LS.DS3+1      MONITOR DATA SEGMENT 4
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                4    BMAP - B00     
             000000000010                   LS.DS5 EQU LS.DS4+1      MONITOR DATA SEGMENT 5
             000000000011                   LS.DS6 EQU LS.DS5+1      MONITOR DATA SEGMENT 6
             000000000012                   LS.DS7 EQU LS.DS6+1      MONITOR DATA SEGMENT 7
             000000000013                   LS.DS8 EQU LS.DS7+1      MONITOR DATA SEGMENT 8
             000000000013                   LS.LDCT EQU LS.DS8        MON DS8 -- LDCTS
             000000000014                   LS.NULL EQU LS.DS8+1      NULL DESCRIPTOR
             000000000015                   LS.XLAT EQU LS.NULL+1     XLATE/SEARCH TABLES
             000000000016                   LS.ECCB EQU LS.XLAT+1     ECCB
             000000000017                   LS.TCB EQU LS.ECCB+1     TCB
             000000000020                   LS.TSTACK EQU LS.TCB+1      TSTACK
             000000000021                   LS.REAL EQU LS.TSTACK+1   REAL PG 0-3
             000000000022                   LS.USSS EQU LS.REAL+1     USER SS AREA
             000000000023                   LS.USDS0 EQU LS.USSS+1     USER SDS TYPE 0
             000000000024                   LS.USDS1 EQU LS.USDS0+1    USER SDS TYPE 1
             000000000025                   LS.SCR EQU LS.USDS1+1    SCREECH ENTRY
             000000000026                   LS.XD EQU LS.SCR+1      XDELTA ENTRY DESCRIPTOR
             000000000027                   LS.PMME EQU LS.XD+1       PMME ENTRY DESCRIPTOR
             000000000030                   LS.REG EQU LS.PMME+1     SCHED REG ENTRY DESCRIPTOR
             000000000031                   LS.ULS EQU LS.REG+1      USER LINKAGE SEGMENT
             000000000032                   LS.DBLS EQU LS.ULS+1      DEBUGGER LINKAGE SEGMENT
             000000000033                   LS.ASLLS EQU LS.DBLS+1     ASL LINKAGE SEGMENT
             000000000034                   LS.CPLS EQU LS.ASLLS+1    COMMAND PROCESSOR LINKAGE SEGMENT
             000000000035                   LS.MLS EQU LS.CPLS+1     MONITOR LINKAGE SEGMENT
             000000000036                   LS.UPT EQU LS.MLS+1      USER PAGE TABLE
             000000000037                   LS.MPT EQU LS.UPT+1      MONITOR PAGE TABLE
             000000000040                   LS.USRIS EQU LS.MPT+1      USER INSTRUCTION SEGMENT
             000000000041                   LS.MTSTACK EQU LS.USRIS+1    TSTACKU
             000000000042                   LS.MJIT EQU LS.MTSTACK+1  MONITOR JIT
             000000000043                   LS.MHJIT EQU LS.MJIT+1     MONITOR HJIT
             000000000044                   LS.MONSSS EQU LS.MHJIT+1    MONITOR SSS -- TYPE 0
             000000000045                   LS.HJITU EQU LS.MONSSS+1   USER HJIT
             000000000046                   LS.SBUF1 EQU LS.HJITU+1    SPECIAL BUFFER 1
             000000000047                   LS.SBUF2 EQU LS.SBUF1+1    SPECIAL BUFFER 2
             000000000050                   LS.ISB EQU LS.SBUF2+1    MON ISR -- BYPASS CACHE
             000000000051                   LS.SCU EQU LS.ISB+1      SPECIAL PAGES FOR GETTING SCU ADDR
             000000000052                   LS.WINDOW EQU LS.SCU+1      WINDOW AREA
             000000000053                   LS.ASR EQU LS.WINDOW+1   MONITOR ARGUMENT STACK DESC
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                5    BMAP - B00     
             000000000054                   LS.MISC EQU LS.ASR+1      MISCELLANEOUS (can be used @ int level)
             000000000055                   LS.CWSQ1 EQU LS.MISC+1     COMMUNICATIONS WSQ
             000000000075                   LS.CPGT1 EQU LS.CWSQ1+16   CWSQ PG TABLE
             000000000115                   LS.JITPG EQU LS.CPGT1+16
             000000000116                   LS.PPUT EQU LS.JITPG+1
             000000000117                   LS.VPT EQU LS.PPUT+1
             000000000120                   LS.MOUSE EQU LS.VPT+1
             000000000121                   LS.LOWMEM EQU LS.MOUSE+1
             000000000122                   LS.IOEND EQU LS.LOWMEM+1
             000000000123                   LS.TIGR EQU LS.IOEND+1    TIGR DATA
             000000000124                   LS.RONC EQU LS.TIGR+1     READ ONLY SEG -- BYPASS CACHE
             000000000125                   LS.ROSEG8 EQU LS.RONC+1     READ ONLY SEG -- AT IO END ACT (WSQ8)
             000000000126                   LS.XDRTN EQU LS.ROSEG8+1   XDELTA RETURN ENTRY DESCRIPTOR
             000000000127                   LS.RCVRTN EQU LS.XDRTN+1    SUA OR SNAP RETURN ENTRY DESCRIPTOR
             000000000130                   LS.MISC2 EQU LS.RCVRTN+1   MISCELLANEOUS (used on behalf of user only)
             000000000131                   LS.RCVENT EQU LS.MISC2+1    RECOVERY ENTRY DESCRIPTOR
             000000000132                   LS.MLS1 EQU LS.RCVENT+1   MON LS -- TYPE 1 FOR ANLZ
             000000000133                   LS.WS3MLS EQU LS.MLS1+1
             000000000134                   LS.LDCTNC EQU LS.WS3MLS+1
             000000000135                   LS.MSTRPT EQU LS.LDCTNC+1
             000000000136                   LS.SLV1PT EQU LS.MSTRPT+1
             000000000137                   LS.SLV2PT EQU LS.SLV1PT+1
             000000000140                   LS.SLV3PT EQU LS.SLV2PT+1
             000000000141                   LS.SLV4PT EQU LS.SLV3PT+1
             000000000142                   LS.SLV5PT EQU LS.SLV4PT+1
             000000000143                   LS.SLV6PT EQU LS.SLV5PT+1
             000000000144                   LS.SLV7PT EQU LS.SLV6PT+1
             000000000145                   LS.MSTRHJ EQU LS.SLV7PT+1
             000000000146                   LS.SLV1HJ EQU LS.MSTRHJ+1
             000000000147                   LS.SLV2HJ EQU LS.SLV1HJ+1
             000000000150                   LS.SLV3HJ EQU LS.SLV2HJ+1
             000000000151                   LS.SLV4HJ EQU LS.SLV3HJ+1
             000000000152                   LS.SLV5HJ EQU LS.SLV4HJ+1
             000000000153                   LS.SLV6HJ EQU LS.SLV5HJ+1
             000000000154                   LS.SLV7HJ EQU LS.SLV6HJ+1
             000000000155                   LS.AARDV EQU LS.SLV7HJ+1
             000000000155                   LS.FLT EQU LS.AARDV      AARDVARK FAULT ENTRY DESCR
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                6    BMAP - B00     
             000000000156                   LS.AARDV2 EQU LS.AARDV+1
             000000000156                   LS.MONRL EQU LS.AARDV2     REAL MON ISR FOR MINIQ
             000000000157                   LS.FIRM EQU LS.AARDV2+1
             000000000160                   LS.WS3MLSNW EQU LS.FIRM+1
             000000000161                   LS.BUFCACH EQU LS.WS3MLSNW+1
             000000000162                   LS.IMX EQU LS.BUFCACH+1  IMX DATA
             000000000163                   LS.CGPT EQU LS.IMX+1      CG PAGE TABLE
             000000000164                   LS.CGCTXT EQU LS.CGPT+1     CG CONTEXT & DESCRIPTOR SEG BLKS
             000000000165                   LS.MAGSS EQU LS.CGCTXT+1   MAGIC SS FRAME
             000000000166                   LS.MAGLS EQU LS.MAGSS+1    MAGIC LS
             000000000167                   LS.MAGAS EQU LS.MAGLS+1    MAGIC AS
             000000000170                   LS.MAGPS EQU LS.MAGAS+1    MAGIC PS
             000000000171                   LS.MAGTCB EQU LS.MAGPS+1    MAGIC TCB
             000000000172                   LS.MAGECCB EQU LS.MAGTCB+1   MAGIC ECCB
             000000000173                   LS.MLSREAD EQU LS.MAGECCB+1  MLS - READ ONLY
             000000000174                   LS.SEGTBL EQU LS.MLSREAD+1    MON OVERLAY SEGMENT TABLE
             000000000175                   LS.WSQ0PT EQU LS.SEGTBL+1     WSQ #0 Page Table.  DPS-90 only
             000000000176                   LS.IPHY_MAP EQU LS.WSQ0PT+1   Inverse physical map for DPS-90
             000000000177                   LS.MINIQ_ENT EQU LS.IPHY_MAP+1 Entry for MINIQ's climb to itself
             000000000200                   LS.XLNORM EQU LS.MINIQ_ENT+1 Normal XLATE tables (Note space reserved for X1000)
             000000000201                   LS.XLALT EQU LS.XLNORM+1   Alternate XLATE tables
             000000000202                   LS.DVT EQU LS.XLALT+1    DVT TABLE
                                        72  *
                                        73  *
             000000000000               74  PR0    EQU     0
             000000000001               75  PR1    EQU     1
             000000000002               76  PR2    EQU     2
             000000000003               77  PR3    EQU     3
             000000000004               78  PR4    EQU     4
             000000000007               79  PR7    EQU     7
                                        80  *
                                        81  *
             000000000001               82  CON    EQU     1
             000000000001               83  SLEW1  EQU     1
             000000000002               84  SLEW2  EQU     2
                                        85  *
                                        86  *  REAL MEMORY ADDRESSES
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                7    BMAP - B00     
                                        87  *
             000000000032               88  FLTLOC BOOL    32
             000000000040               89  AFLTLC BOOL    40
                                        90  *
                                        91  *  KNOWN ADDRESS WITHIN AARDVARK
                                        92  *
             000000020000               93  MINIQ  BOOL    20000
             000000020002               94  QUIT   BOOL    20002
                                        95  *
                                        96  * JIT OFFSETS
                                        97  *
                                        98         BJIT0
             000000000000                   J.BJIT0 EQU 0
             000000000000                   J.MODE EQU J.BJIT0
             000000000000                   J.USER EQU J.MODE
             000000000000                   J.SYSID EQU J.MODE
             000000000001                   J.ACCN EQU J.MODE+1
             000000000003                   J.UNAME EQU J.ACCN+2
             000000000006                   J.FACCN EQU J.UNAME+3
             000000000010                   J.WOO EQU J.FACCN+2
             000000000012                   J.ERR EQU J.WOO+2
             000000000013                   J.PRIV EQU J.ERR+1
             000000000013                   J.ACTIVE EQU J.PRIV
             000000000014                   J.AUTH EQU J.PRIV+1
             000000000015                   J.JOB EQU J.PRIV+2
             000000000016                   J.PRC EQU J.PRIV+3
             000000000017                   J.SAVED EQU J.PRIV+4
             000000000020                   J.PPRIV EQU J.PRIV+5
             000000000021                   J.FPSN EQU J.PPRIV+1
             000000000022                   J.OUTPRIO EQU J.FPSN+1
             000000000022                   J.DCBNO EQU J.OUTPRIO
             000000000023                   J.JOBNAME EQU J.FPSN+2

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                8    BMAP - B00     
                                        99         EJECT
                                       100  *
                                       101  * THIS ROUTINE IS USED BY JSP$PMME FOR M$SCREECH.
                                       102  * IT REMOVES JSP$PMME ADDR FROM XDEL MESSAGE AND
                                       103  * IT PROVIDES FOR ALTRET ON M$SCREECH(SNAP) IF DUMP FILE BUSY
                                       104  *
                                       105  *
 0 000000                              106         USE     IRM_PROC,1
                                       107         INHIB   ON
   000000                              108  IRM$USER$SCREECH NULL
   000000  X 000000 7134 00            109         ENTER   ASLENTSID,0,SC_USER
   000001    0 000 000 60 6025
   000002                              110  IRM$USER_SCREECH NULL
   000002    000001 7102 11            111         TRA     1,1

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                9    BMAP - B00     
                                       112         EJECT
                                       113  *
                                       114  *
                                       115         ENTDEF  IRM$FPTCHECK
                                       116  *  THIS ROUTINE ASSUMES SCREECH CODE IS IN THE MONITOR INSTRUCTION
                                       117  *  SEGMENT AND DOES AN LTRAD.
                                       118  *
                                       119  *  USED TO ENTER RECOVERY FROM PL6 ROUTINES WHERE THE TOP FRAME
                                       120  *  IS ALREADY THE FRAME OF INTEREST
                                       121  *
   000003                              122  IRM$FPTCHECK NULL
   000003    0 00000 2203 00           123         LDX0    0,,0            EA OF SCREECH CODE TO X0
   000004    000000 7134 00            124         GOTO    ASLENTSID
   000005    0 000 000 23 6025
                                       125  *
                                       126  *
                                       127  *  NOTE THAT A CALL FOR SNAPPING MUST USE SCREECH SO WE
                                       128  *  HAVE A FRAME TO RETURN TO.   BEWARE OF STACK OVERFLOW PROBLEMS.
                                       129  *

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                10   BMAP - B00     
                                       130         EJECT
                                       131         INHIB   ON
                                       132  *
                                       133  *                              THIS ROUTINE ENTERED VIA FULL CLIMB
                                       134  *                               OR VIA LTRAD IF FROM FAULT HANDLER
   000006                              135  IRM$SCREECH NULL
   000006    000000 2352 10            136         LDA     0,X0            MOVE SCREECH CODE ONE WORD AT
   000007 (2)000000 7552 00            137         STA     IRM_SCODE          A TIME UNTIL ALL MODULES
   000010    000001 2352 10            138         LDA     1,X0                 HAVE THEM GENERATED
   000011 (2)000001 7552 00            139         STA     IRM_SCODE+1              AS DALIGNED
   000012    000002 2352 10            140         LDA     2,X0            PICK UP SNAP USER#
   000013 (2)000002 7552 00            141         STA     IRM_SCODE+2      IF ANY
   000014  X 000000 7012 00            142         TSX1    HFA$STOPCPU
   000015    000000 0112 00            143         NOP
                                       144  *
                                       145  *                              THIS ROUTINE ENTERED VIA TRA FROM
                                       146                                 HFA$FAULT ON A QUIT TO XDELTA.
                                       147  *                              HFA$FAULT HAS PUT THE SCREECH CODE
                                       148  *                              IN IRM_SCODE.
                                       149  *
   000016                              150  IRM$DELTAQ NULL
   000016    006035 4706 07            151         LDP0    MLS0,DL         SAVE MISC DESCRIPTOR
   000017    0 00130 2373 00           152         LDAQ    2*LS.MISC,,0      SO IT CAN BE USED TO
   000020 (2)000170 7572 00            153         STAQ    HOLDMISC            GET TO MINIQ
   000021 (0)000512 2372 00            154         LDAQ    RMDESR          AND PUT REAL MEMORY
   000022    0 00130 7573 00           155         STAQ    2*LS.MISC,,0      DESCRIPTOR IN THERE
   000023 (2)000000 2352 00            156         LDA     IRM_SCODE
   000024 (2)000154 7552 00            157         STA     REPORTC
   000025 (2)000147 4502 00            158         STZ     SUATAB          RESET BAD SUA FLAG
   000026    006001 4776 07            159         LDP7    JITSID,DL       GET SYSID
   000027    7 00000 2363 00           160         LDQ     J.SYSID,,7
   000030    777777 3762 07            161         ANQ     =O777777,DL
   000031 (2)000000 7222 00            162         LXL2    IRM_SCODE       GET SCREECH CODE
   000032    000007 3622 03            163         ANX2    =O7,DU          ISOLATE TYPE
   000033    000003 1022 03            164         CMPX2   =03,DU          IS IT THE FEP
   000034 (0)000036 6002 00            165         TZE     CHECK.SEV       YES
   000035 (2)000006 7562 00            166         STQ     IRM_SYSID       ALWAYS REFLECTS LAST CALLER - NOT FEP
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                11   BMAP - B00     
   000036                              167  CHECK.SEV NULL
   000036    000006 1022 03            168         CMPX2   =O6,DU          SUA
   000037 (0)000044 6002 00            169         TZE     SUA.BEGIN       YES
   000040    000003 1022 03            170         CMPX2   =O3,DU          VALID SEVERITY
   000041 (0)000076 6052 00            171         TPL     SUA.OK          YES-LET IT RIP
   000042    000000 2262 03            172         LDX6    0,DU            FOR SUATAB
   000043 (0)000074 7102 00            173         TRA     FORCE.SCREECH   FULL SCREECH IF SEV= 0-2
                                       174  *
                                       175  *
   000044                              176  SUA.BEGIN NULL
   000044 (2)000007 1162 00            177         CMPQ    IRM_SUASYSID    SAME SUA USER AS LAST TIME
   000045 (0)000050 6012 00            178         TNZ     CHECK.CUN       NO
   000046    000002 2262 03            179         LDX6    =2,DU           TO PRINT - SAME SUA USER
   000047 (0)000074 7102 00            180         TRA     FORCE.SCREECH
                                       181  *
   000050                              182  CHECK.CUN NULL
   000050 (2)000007 7562 00            183         STQ     IRM_SUASYSID    ALWAYS REFLECTS LAST SUA USER
   000051  X 000000 2362 00            184         LDQ     S_CUN           GET CURRENT USER NUMBER
   000052 (0)000055 6012 00            185         TNZ     CHECK.GHOST     THERE IS ONE
   000053    000001 2262 03            186         LDX6    =1,DU           TO PRINT - NO CURRENT USER
   000054 (0)000074 7102 00            187         TRA     FORCE.SCREECH
                                       188  *
   000055                              189  CHECK.GHOST NULL
   000055  X 000000 1162 00            190         CMPQ    JG_MING         IS THIS A SYSTEM GHOST
   000056 (0)000064 6052 00            191         TPL     CHECK.DIS       NO
   000057  X 000000 7222 00            192         LXL2    S_CUN           YES-
   000060  X 000000 2362 12            193         LDQ     JG_SCREECHG,2   SHOULD WE SCREECH
   000061 (0)000064 6002 00            194         TZE     CHECK.DIS       NO
   000062    000004 2262 03            195         LDX6    =4,DU           TO PRINT - REQUIRED GHOST SUA
   000063 (0)000074 7102 00            196         TRA     FORCE.SCREECH
                                       197  *
                                       198  *              SEE IF SUA ON MASTER WITH DISABLE COUNT NON-ZERO
   000064                              199  CHECK.DIS NULL
   000064  X 000000 2362 00            200         LDQ     S_PNO           RUNNING ON MASTER?
   000065 (0)000071 6012 00            201         TNZ     CHECK.GATE      NO
   000066  X 000000 2362 00            202         LDQ     NI$DS           GET DISABLE COUNT
   000067    000002 1162 07            203         CMPQ    2,DL            (HFA$STOPCPU BUMPED IT BY 1)
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                12   BMAP - B00     
   000070 (0)000073 6032 00            204         TRC     GATE.SCREECH    NI$DS >= 2
                                       205  *
                                       206  *              SEE IF SUA USER HAS GATES LOCKED
   000071                              207  CHECK.GATE NULL
   000071  X 000000 2362 00            208         LDQ     H_GATECNT       ANY GATES LOCKED?
   000072 (0)000076 6002 00            209         TZE     SUA.OK          ALL OK - SUA HIM
                                       210  *
                                       211  *
   000073                              212  GATE.SCREECH NULL
   000073    000003 2262 03            213         LDX6    =3,DU           TO PRINT - USER HAS GATES LOCKED
   000074                              214  FORCE.SCREECH NULL
   000074    000007 2752 07            215         ORA     =O7,DL          MAKE SEV = FULL SCREECH
   000075 (2)000147 7462 00            216         STX6    SUATAB
                                       217  *
   000076                              218  SUA.OK NULL
   000076 (2)000000 7552 00            219         STA     IRM_SCODE        REMEMBER SCREECH CODE
   000077    000007 3752 07            220         ANA     =O7,DL          Check for full screech
   000100    000007 1152 07            221         CMPA    =O7,DL
   000101 (0)000105 6002 00            222         TZE     PRINT.IT        If so, put out OC messages
   000102  X 000000 2352 00            223         LDA     IT_XDELTA       Non-zero if no XDELTA
   000103 (2)000016 0752 00            224         ADA     IRM_NOKP_SCR    Non-zero if not keep screech
   000104 (0)000227 6012 00            225         TNZ     NOSMSG          Skip OC messages
   000105                              226  PRINT.IT NULL
   000105 (0)000400 7012 00            227         TSX1    OCOUTPUT        Print a bunch of stars
   000106 (2)000117 0002 00            228         ARG     TSTARS
   000107 (0)000400 7012 00            229         TSX1    OCOUTPUT
   000110 (2)000117 0002 00            230         ARG     TSTARS
   000111 (2)000154 7232 00            231         LXL3    REPORTC
   000112    000007 3632 03            232         ANX3    =O7,DU
   000113 (2)000120 2222 13            233         LDX2    MESSTAB,3
   000114    000000 2372 12            234         LDAQ    0,2
   000115 (2)000026 7572 00            235         STAQ    S1MES1
   000116    000006 1032 03            236         CMPX3   =O6,DU
   000117 (0)000122 6002 00            237         TZE     RESETM
   000120    000005 1032 03            238         CMPX3   =O5,DU
   000121 (0)000131 6012 00            239         TNZ     NRESET
   000122                              240  RESETM NULL
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                13   BMAP - B00     
   000122  X 000000 2352 00            241         LDA     S_CUN
   000123 (2)000031 6222 00            242         EAX2    S1MES2
   000124 (0)000435 7072 00            243         TSX7    OCTASC
   000125 (2)000033 2362 00            244         LDQ     S1MES2+2
   000126 (2)000027 7562 00            245         STQ     S1MES1+1
   000127    056000 2352 03            246         LDA     =O056000,DU
   000130 (2)000027 5512 40            247         STBA    S1MES1+1,40
   000131                              248  NRESET NULL
   000131    001764 4776 07            249         LDP7    SSR,DL
   000132    001761 4776 07            250         LDP7    TYP,DL
   000133    7 00004 2353 00           251         LDA     4,,PR7          GET IC OUT OF SAFE-STORE
   000134    000022 7712 00            252         ARL     18
   000135 (2)000031 6222 00            253         EAX2    S1MES2
   000136 (0)000435 7072 00            254         TSX7    OCTASC
   000137 (2)000032 2372 00            255         LDAQ    S1MES2+1
   000140    000022 7372 00            256         LLS     18
   000141    040040 2762 07            257         ORQ     =O040040,DL
   000142 (2)000031 7552 00            258         STA     S1MES2
   000143 (2)000032 7562 00            259         STQ     S1MES2+1
   000144  X 000000 7222 00            260         LXL2    S_PNO           GET CPU PORT#
   000145  X 000000 2362 12            261         LDQ     S_PORTNR,2
   000146    000033 7362 00            262         QLS     27
   000147 (2)000142 2762 00            263         ORQ     M_PORTNR
   000150 (2)000034 7562 00            264         STQ     S1MES3
   000151 (2)000143 2362 00            265         LDQ     M_PORT
   000152 (2)000033 7562 00            266         STQ     S1MES2+2
   000153 (0)000400 7012 00            267         TSX1    OCOUTPUT
   000154 (2)000144 0002 00            268         ARG     TS1MES1         --SCREECH AT
   000155 (2)000021 2352 00            269         LDA     ERRW2           REFRESH THE SEVERITY
   000156 (2)000041 7552 00            270         STA     S2MES2+2           CODE IN THE OC MESSAGES
   000157 (2)000050 7552 00            271         STA     S3MES2+2               SO ORSQ WILL WORK
   000160    006000 4736 07            272         LDP     PR3,MONIS,DL
   000161 (2)000000 2352 00            273         LDA     IRM_SCODE
   000162 (2)000037 6222 00            274         EAX2    S2MES2
   000163 (0)000454 7072 00            275         TSX7    LHASC           CONVERT AU FROM GOOFY TO UASCI        MPR
   000164 (2)000000 2362 00            276         LDQ     IRM_SCODE        PICK IT UP AGAIN
   000165    377770 3762 07            277         ANQ     =O377770,DL     MASK OFF ALL BUT DESIRED 14 BITS      MPR
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                14   BMAP - B00     
   000166    000003 7722 00            278         QRL     3               RIGHT JUSTIFY 'EM                     MPR
   000167 (2)000042 2352 00            279         LDA     S2MES3          APPROPRIATE OUTPUT TALLYB WORD -> A   MPR
   000170 (0)000477 7072 00            280         TSX7    DECIMAL         CONVERT QL TO DECIMAL ASCII           MPR
   000171 (2)000000 2362 00            281         LDQ     IRM_SCODE
   000172    000007 3762 07            282         ANQ     =O7,DL          JUST KEEP LOWER 3 BITS                MPR
   000173    000060 2762 07            283         ORQ     =O060,DL        MAKE IT ASCII                         MPR
   000174    000002 2562 12            284         ORSQ    2,2             STICK IT INTO MESSAGE                 MPR
   000175 (0)000400 7012 00            285         TSX1    OCOUTPUT
   000176 (2)000145 0002 00            286         ARG     TS2MES1         --CODE:
   000177    006001 4706 07            287         LDP     PR0,JITSID,DL
   000200    0 00012 2353 00           288         LDA     J.ERR,,PR0
   000201 (0)000203 6012 00            289         TNZ     *+2             N.Z. -> GO TO IT                      MPR
   000202    333333 2352 03            290         LDA     =O333333,DU     0 -> PRINT 000-00000- 0               MPR
   000203 (2)000046 6222 00            291         EAX2    S3MES2
   000204 (0)000454 7072 00            292         TSX7    LHASC           CONVERT AU FROM GOOFY TO UASCI        MPR
   000205    0 00012 2363 00           293         LDQ     J.ERR,,PR0      PICK IT UP AGAIN
   000206    377770 3762 07            294         ANQ     =O377770,DL     MASK OFF ALL BUT DESIRED 14 BITS      MPR
   000207    000003 7722 00            295         QRL     3               RIGHT JUSTIFY 'EM                     MPR
   000210 (2)000051 2352 00            296         LDA     S3MES3          APPROPRIATE OUTPUT TALLYB WORD -> A   MPR
   000211 (0)000477 7072 00            297         TSX7    DECIMAL         CONVERT QL TO DECIMAL ASCII           MPR
   000212    0 00012 2363 00           298         LDQ     J.ERR,,PR0      PICK IT UP AGAIN
   000213    000007 3762 07            299         ANQ     =O7,DL          JUST KEEP LOWER 3 BITS                MPR
   000214    000060 2762 07            300         ORQ     =O060,DL        MAKE IT ASCII                         MPR
   000215    000002 2562 12            301         ORSQ    2,2             STICK IT INTO MESSAGE                 MPR
   000216 (0)000400 7012 00            302         TSX1    OCOUTPUT
   000217 (2)000146 0002 00            303         ARG     TS3MES1         --JIT.ERR
   000220 (2)000147 2222 00            304         LDX2    SUATAB          ANY FUNNY SUA MESSAGES
   000221 (0)000227 6002 00            305         TZE     NOSMSG          NO
   000222 (2)000147 2352 12            306         LDA     SUATAB,2        GET TALLY WORD
   000223 (0)000402 7012 00            307         TSX1    OCOUTPUT2       AND PRINT SUA MESSAGE
                                       308  *                              Also dump mon data if SUA->full screech
   000224 (2)000001 2352 00            309         LDA     IRM_SCODE+1
   000225 (2)000024 2752 00            310         ORA     MDATABITS
   000226 (2)000001 7552 00            311         STA     IRM_SCODE+1

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                15   BMAP - B00     
                                       312         EJECT
   000227                              313  NOSMSG NULL
   000227    006035 4766 07            314         LDP6    MLS0,DL         PUT MISC DESCRIPTOR BACK
   000230 (2)000170 2372 00            315         LDAQ    HOLDMISC          SO IT LOOKS RIGHT
   000231    6 00130 7573 00           316         STAQ    2*LS.MISC,,6        IN THE DUMPS
   000232  X 000000 2352 00            317         LDA     IT_XDELTA       ARE WE RUNNING UNDER XDELTA
   000233 (0)000253 6012 00            318         TNZ     IRM$RECVGO      NO-ENTER AARDVARK
   000234 (0)000241 6272 00            319         EAX7    IRM$XDELRTN     TELL XDELTA WHERE TO RETURN TO
   000235    6 00254 7473 00           320         STX7    2*LS.XDRTN,,6
   000236    006026 4766 07            321         LDP6    XDEL,DL         XDELTA ENTRY DESCRIPTOR
   000237    000001 7134 00            322         GOTO    1022,,1         LTRAD THRU DR6- X0=1
   000240    0 000 000 63 1776
                                       323  *
                                       324  *                              XDELTA RETURNS TO HERE
   000241                              325  IRM$XDELRTN NULL
   000241    006035 4766 07            326         LDP6    MLS0,DL         TYPE 0 OF MONITOR LS
   000242    000002 5326 00            327         CAMP    2                CLEAR PTWAM
   000243  X 000000 6272 00            328         EAX7    HFA$XDELRTN     PUT EVERYTHING BACK
   000244    6 00254 7473 00           329         STX7    2*LS.XDRTN,,6
   000245    000001 1002 03            330         CMPX0   1,DU            CHECK WHAT XDELTA WANTS TO DO
   000246 (0)000253 6012 00            331         TNZ     IRM$RECVGO      CONTINUE RECOVERY IF 0 OR 2.
   000247  X 000000 7012 00            332         TSX1    HFA$STARTCPU
   000250    000000 0112 00            333         NOP
   000251    000000 7134 00            334         EXIT                    DELTA HAS RESET IC
   000252    0 000 000 01 0000
                                       335  *

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                16   BMAP - B00     
                                       336         EJECT
                                       337  *                              NO XDELTA-GO COMMAND TO XDELTA
   000253                              338  IRM$RECVGO NULL
   000253 (2)000000 6202 00            339         EAX0    IRM_SCODE
   000254    006131 4776 07            340         LDP7    RCVENT,DL       GET RECOVERY ENT DESC
   000255    000000 7134 00            341         GOTO    =O1777          AND LTRAD THRU IT
   000256    0 000 000 23 1777
                                       342  *                              RECOVERY RETURNS TO HERE AFTER SUA OR SNAP
                                       343  *                              X0=0 IF DUMP FILE WRITTEN
                                       344  *                              X0=1 IF PARTIAL FILE WRITTEN
                                       345  *                              X0=2 IF NO DUMP FILE WRITTEN
   000257                              346  IRM$RETURN NULL
   000257 (2)000000 7272 00            347         LXL7    IRM_SCODE        FETCH SCREECH CODE
   000260    000007 3672 03            348         ANX7    =O7,DU          GET SCREECH TYPE
   000261    000007 1072 03            349         CMPX7   7,DU            CHECK IF FULL SCREECH
   000262 (0)000367 6002 00            350         TZE     IRM$QUIT        AND COME AROUND IF SO
   000263    001764 4776 07            351         LDP7    SSR,DL          GET SET TO BLOCK
   000264    001761 4776 07            352         LDP7    TYP,DL
   000265    7 00012 7707 00           353         LDAS    10,,7             RESTORE ASR
   000266    7 00016 7717 00           354         LDPS    14,,7             RESTORE PSR
   000267    7 00022 4727 00           355         LDP2    18,,7             RESTORE PR2
   000270 (2)000017 2352 10            356         LDA     DFERR,0         GET DUMP FILE ERR CODE
   000271 (2)000012 7552 00            357         STA     IRM_NODUMP       STORE FOR SNAP CALLER
   000272  X 000000 7012 00            358         TSX1    HFA$STARTCPU    START OTHER CPUS
   000273    000000 0112 00            359         NOP
   000274 (2)000000 7272 00            360         LXL7    IRM_SCODE
   000275    000007 3672 03            361         ANX7    7,DU
   000276    000006 1072 03            362         CMPX7   6,DU            IS IT SINGLE USER ABORT
   000277 (0)000315 6002 00            363         TZE     RVA.ZAP         YES
                                       364  *
                                       365  *      SET BYTE 0, 1, OR 2 OF IRM_SNAPSLOT NON-ZERO TO INDICATE
                                       366  *      THAT A SNAPSHOT SLOT IS USED.  IRM_SNAPSLOT WILL BE
                                       367  *      LOOKED AT EVERY TIMER RUNOUT INTERRUPT ON THE MASTER
                                       368  *
   000300 (2)000014 2352 00            369         LDA     IRM_DINDEX       DUMP SLOT USED
   000301    000001 7352 00            370         ALS     1
   000302    001000 3362 07            371         LCQ     =O1000,DL
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                17   BMAP - B00     
   000303 (0)000304 7102 05            372         TRA     *+1,AL
   000304 (2)000015 5522 44            373         STBQ    IRM_SNAPSLOT,44 SET BYTE 0-CLEAR BYTE 3
   000305 (0)000311 7102 00            374         TRA     RVA.SNAP1
   000306 (2)000015 5522 24            375         STBQ    IRM_SNAPSLOT,24 SET BYTE 1-CLEAR BYTE 3
   000307 (0)000311 7102 00            376         TRA     RVA.SNAP1
   000310 (2)000015 5522 14            377         STBQ    IRM_SNAPSLOT,14 SET BYTE 2-CLEAR BYTE 3
   000311                              378  RVA.SNAP1 NULL
   000311  X 000000 7012 00            379         TSX1    IRM$LOGERR
   000312    000000 0112 00            380         NOP
   000313    000000 7134 00            381         EXIT
   000314    0 000 000 01 0000
   000315                              382  RVA.ZAP NULL
   000315  X 000000 4706 07            383         LDP0    SCUSID,DL
   000316  X 000000 7042 00            384         TSX4    HFC$BMAP_CLOCK  SYSTIME
   000317  X 000000 1172 00            385         CMPAQ    SS_MS_COOKIE       PASSED ROLLOVER DAT E?
   000320 (0)000331 6022 00            386         TNC      PRE_COOKIE         NOPE
   000321  X 000000 1772 00            387         SBAQ     SS_MS_COOKIE       DECREMENT BY ROLLOVER MS
   000322    116100 5072 07            388         DVF      40000,DL           CONVERT TO 1/25
   000323    000001 7352 00            389         ALS      1
   000324    047040 1162 07            390         CMPQ     20000,DL           ODD OR EVEN
   000325 (0)000327 6042 00            391         TMI      *+2
   000326    000001 0352 07            392         ADLA     1,DL
   000327  X 000000 0352 00            393         ADLA     SS_UTS_COOKIE      ADD IN COOKIE DATE
   000330 (0)000336 7102 00            394         TRA      *+6                BRANCH AROUND PRE-COOKIE CODE
   000331                              395  PRE_COOKIE NULL
   000331    023420 5072 07            396         DVF      10000,DL           CONVERT TO CENTISECONDS
   000332    000001 7352 00            397         ALS      1
   000333    011610 1162 07            398         CMPQ     5000,DL            ODD OR EVEN
   000334 (0)000336 6042 00            399         TMI      *+2
   000335    000001 0352 07            400         ADLA     1,DL
   000336 (2)000010 7552 00            401         STA      IRM_SUAUTS
   000337  X 000000 7272 00            402         LXL7    S_CUN
   000340  X 000000 1072 00            403         CMPX7   F_CWUSER
   000341 (0)000343 6012 00            404         TNZ     *+2
   000342  X 000000 0542 00            405         AOS     F_CWLK          UNLOCK CFU AREA
   000343  X 000000 4726 00            406         LDP2    B$MONTSTACK$    REINITIALIZE MON AUTO
   000344    777773 2202 03            407         LDX0    -5,DU
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                18   BMAP - B00     
   000345    2 00000 4403 00           408         SXL0    0,,2
   000346  X 000000 4726 00            409         LDP2    B$TSTACK$       REINITIALIZE AUTO
   000347    2 00000 4403 00           410         SXL0    0,,2
   000350    2 00004 5076 00           411         AWDX    4,,2            FIX PR2
   000351    000011 2202 03            412         LDX0    9,DU
   000352    2 00002 7403 00           413         STX0    2,,2
   000353 (0)000514 7736 00            414         LDSS    SSINIT
   000354  X 000000 4716 00            415         LDP1    B$JIT$
   000355    000004 2362 07            416         LDQ     4,DL
   000356    1 00013 2563 00           417         ORSQ    =O13,,PR1               GIVE MAXMEM DURING SUA
   000357  X 000000 7012 00            418         TSX1    SSS$BLOCK
   000360    000000 0112 00            419         NOP
   000361  X 000000 7012 00            420         TSX1    IRM$RCVR2       GOOSE THE DUMP CONVERTER
   000362    000000 0112 00            421         NOP
   000363  X 000000 7012 00            422         TSX1    JSD$DELUSR      DELETE THIS USER
   000364    000000 0112 00            423         NOP
   000365  X 000000 6202 00            424         EAX0    SC_RVA1000      IF WE SHOULD EVER GET BACK
   000366 (0)000006 7102 00            425         TRA     IRM$SCREECH     SOMETHING IS REALLY WRONG
                                       426  *
                                       427  *S*    SCREECH_CODE:     RVA-S$SUA
                                       428  *S*    TYPE:   SCREECH
                                       429  *S*    MESSAGE: Return to SCREECH after a call to JSD$DELUSR.

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                19   BMAP - B00     
                                       430         EJECT
   000367                              431  IRM$QUIT  NULL
   000367  X 000000 7012 00            432         TSX1    HFA$SCRCPU      STOP OTHER CPUS
   000370    000000 0112 00            433         NOP     0
   000371  X 000000 2342 00            434         SZN     S_PNO
   000372  X 000000 6012 00            435         TNZ     SSS$STOP        STOP OURSELF IF SLAVE
                                       436                                 *PR1 HAS RMDESR
   000373                              437  IRM$REBOOT  NULL               REBOOT SYSTEM IF MASTER
   000373    006035 4706 07            438         LDP0    MLS0,DL         MONITOR LSEG-TYPE 0
   000374 (0)000512 2372 00            439         LDAQ    RMDESR          REAL MEMORY DESCRIPTOR
   000375    0 00130 7573 00           440         STAQ    2*LS.MISC,,PR0  STORE IN MISC
   000376    006054 4716 07            441         LDP1    MISC,DL
   000377    1 20002 7073 00           442         TSX7    QUIT,,PR1       ENTER AARDVARK
                                       443  *

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                20   BMAP - B00     
                                       444         EJECT
                                       445  *
                                       446  *              OUTPUT ON THE OC VIA MINIQ
                                       447  *
   000400                              448  OCOUTPUT NULL
   000400    000000 2222 11            449         LDX2    0,1             GET ADDR OF TALLY WORD
   000401    000000 2352 12            450         LDA     0,2             TALLY WORD TO A REG
   000402                              451  OCOUTPUT2 NULL
   000402 (2)000172 7412 00            452         STX1    HOLD_X1
   000403    000001 2232 03            453         LDX3    1,DU            FCN CODE FOR WRITE CONSOLE ASCII
   000404    000001 2242 03            454         LDX4    1,DU            DEVICE INDEX FOR CONSOLE
   000405    001762 4776 07            455         LDP7    ISR,DL          SO MINIQ CAN RETURN
   000406    006054 4716 07            456         LDP1    MISC,DL         SO WE CAN GET TO MINIQ
   000407    1 20000 7073 00           457         TSX7    MINIQ,,PR1
   000410    000000 0112 00            458         NOP
   000411 (2)000172 2212 00            459         LDX1    HOLD_X1
   000412    000001 7102 11            460         TRA     1,1
                                       461  *
                                       462  *
                                       463  *

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                21   BMAP - B00     
                                       464         EJECT
                                       465  *              *******************************************************
                                       466  *              *
                                       467  *              * CONVERSION ROUTINES
                                       468  *              *
                                       469  *              *******************************************************
                                       470  *
                                       471  *
                                       472  *              * ASCII TO OCTAL
                                       473  ***
                                       474  *      X2 - ADDRESS OF ASCII STRING OF LENGTH X3
                                       475  *      X3 - LENGTH OF ASCII STRING
                                       476  *      AR - (OUTPUT) OCTAL VALUE; -1 IF ERROR
                                       477  ***
                                       478  *
   000413                              479  ASCOCT NULL
   000413    000000 2352 07            480         LDA     =0,DL
   000414    000000 2362 12            481  NEWWRD LDQ     0,2             PICK UP ASCII WORD
   000415    000003 2242 03            482         LDX4    3,DU            COUNT CHARS PER WORD
                                       483  *
                                       484  *      TEST THAT CHAR IS 060-067 ONLY
   000416                              485  SAMEWD NULL
   000416 (2)000022 7522 40            486         STCQ    TESTQ,40        REST OF TEST IS 0
   000417 (2)000022 2252 00            487         LDX5    TESTQ
   000420    060000 1052 03            488         CMPX5   =O060000,DU
   000421 (0)000433 6012 00            489         TNZ     ERRORA
                                       490  *
   000422    000006 7362 00            491         QLS     6               THROUGH AWAY UPPER 6 BITS OF CHAR
   000423    000003 7772 00            492         LLR     3               PUT LOWER 3 BITS (OCTET) IN A
   000424    000001 1232 03            493         SBLX3   1,DU            SUBTRACT 1 FROM CHAR COUNT
   000425 (0)000432 6002 00            494         TZE     DONAO
   000426    000001 1242 03            495         SBLX4   1,DU            DONE WITH WORD YET
   000427 (0)000416 6052 00            496         TPL     SAMEWD          NO
   000430    000001 0222 03            497         ADLX2   1,DU            PICK UP NEXT WORD TO CONVERT
   000431 (0)000414 7102 00            498         TRA     NEWWRD
                                       499  *
                                       500  *      NOTE; X3 NEVER <1 OR > 12
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                22   BMAP - B00     
                                       501  *            X2 IS EVEN WORD ADDRESS
                                       502  *
   000432    000000 7102 17            503  DONAO  TRA     0,7             AR IS OCTAL VALUE
                                       504  *
   000433 (1)000000 2352 00            505  ERRORA LDA     =-1             SET ERROR INDICATION
   000434    000000 7102 17            506         TRA     0,7
                                       507  *              * OCTAL TO ASCII
                                       508  ***
                                       509  *      AR - INPUT -OCTAL- VALUE
                                       510  *      X2 - ADDRESS OF WHERE TO PLACE RESULT
                                       511  ***
                                       512  *
   000435                              513  OCTASC NULL
   000435    000000 2362 07            514         LDQ     =0,DL
   000436    000044 7772 00            515         LLR     36              SWITCH A AND Q
                                       516  *
   000437    000002 2232 03            517         LDX3    2,DU            COUNT NUMBER OF WORDS TO FILL (3)
   000440                              518  NXTWRD NULL
   000440    000003 2242 03            519         LDX4    3,DU            COUNT CHARS PER WORD (4)
                                       520  *
   000441                              521  PUTINA NULL
   000441    000006 7752 00            522         ALR     6               MAKE ROOM
   000442    000003 7772 00            523         LLR     3               PUT OCTET INTO LOWER 3 BITS OF A
   000443    000060 0352 07            524         ADLA    =O060,DL        CONVERT TO ASCII
   000444    000001 1242 03            525         SBLX4   1,DU            DONE WITH WORD YET
   000445 (0)000441 6052 00            526         TPL     PUTINA          NO
   000446    000000 7552 12            527         STA     0,2             YES, STORE WORD
   000447    000001 0222 03            528         ADLX2   1,DU            UPDATE STORE ADDRESS
   000450    000000 2352 07            529         LDA     =0,DL           CLEAR A TO START FRESH
   000451    000001 1232 03            530         SBLX3   1,DU            DONE ALL 3 WORDS YET
   000452 (0)000440 6052 00            531         TPL     NXTWRD          NO
   000453    000000 7102 17            532         TRA     0,7             3 WORDS ARE DONE

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                23   BMAP - B00     
                                       533         EJECT                                                         MPR
                                       534  *                                                                    MPR
                                       535  *      CONVERT LEFT-HALF OF A FROM GOOFY 6 CHARACTER CODE TO UASCI   MPR
                                       536  *      RESULT STORED IN ADDRESS POINTED AT BY X2                     MPR
                                       537  *                                                                    MPR
   000454                              538  LHASC  NULL                                                          MPR
   000454    000000 6362 00            539         EAQ     0               0 -> Q                                MPR
   000455    000044 7772 00            540         LLR     36              SWITCH A AND Q                        MPR
   000456    000002 6242 00            541         EAX4    2               CONVERT 3 GOOFY 6 BIT CHARS           MPR
   000457                              542  LHASC1 NULL                                                          MPR
   000457    000011 7352 00            543         ALS     9               MAKE ROOM FOR NEXT UASCI CHARACTER    MPR
   000460    000000 7552 12            544         STA     0,2             SAVE PARTIAL RESULT                   MPR
   000461    000006 7772 00            545         LLR     6               MOVE GOOFY 6 BIT CHARACTER -> A       MPR
   000462    000077 3752 07            546         ANA     =O77,DL         MASK OFF OLD PARTIAL RESULT           MPR
   000463    000032 1152 07            547         CMPA    =26,DL          IS IT GOOFY ALPHA CHAR                MPR
   000464 (0)000467 6046 00            548         TMOZ    *+3             YES                                   MPR
   000465    000025 0752 07            549         ADA     =O025,DL        NO -> CONVERT GOOFY NUMERIC CHAR      MPR
   000466 (0)000470 7102 00            550         TRA     *+2                                                   MPR
   000467    000100 0752 07            551         ADA     =O100,DL        CONVERT GOOFY ALPHA TO UASCI          MPR
   000470    000000 2752 12            552         ORA     0,2             COMBINE WITH PREVIOUS PARTIAL         MPR
   000471    777777 6242 14            553         EAX4    -1,4            DECREMENT CHAR COUNT                  MPR
   000472 (0)000457 6052 00            554         TPL     LHASC1          MORE TO COME                          MPR
   000473    000011 7352 00            555         ALS     9               FINISHED -> MAKE ROOM FOR -           MPR
   000474    000055 2752 07            556         ORA     =O055,DL        STICK IN -                            MPR
   000475    000000 7552 12            557         STA     0,2             STORE FINAL RESULT                    MPR
   000476    000000 7102 17            558         TRA     0,7             AND RETURN                            MPR
                                       559  *                                                                    MPR

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                24   BMAP - B00     
                                       560         EJECT                                                         MPR
                                       561  *      CONVERT 18 BIT NUMBER IN QL TO DECIMAL ASCII                  MPR
                                       562  *      RESULT TO LOCATION SPECIFIED IN TALLYB WORD IN A              MPR
                                       563  *                                                                    MPR
   000477                              564  DECIMAL NULL                                                         MPR
   000477 (2)000023 7552 00            565         STA     DTALLY          STORE OUTPUT TALLY WORD               MPR
   000500    000012 5062 07            566         DIV     10,DL           REMAINDER -> A                        MPR
   000501    000060 2752 07            567         ORA     =O060,DL        MAKE IT ASCII                         MPR
   000502 (2)000023 7552 45            568         STA     DTALLY,SCR      STORE LEAST SIGNIFICANT DIGIT         MPR
   000503    000000 6066 17            569         TTN     0,7             RETURN IF TALLY USED UP               MPR
   000504    000000 1162 07            570         CMPQ    0,DL            ANY MORE DIGITS TO CONVERT?           MPR
   000505 (0)000500 6012 00            571         TNZ     DECIMAL+1       YES -> CONVERT NEXT LEAST SIGN.       MPR
   000506 (1)000001 2352 00            572         LDA     =O040           NO -> BLANK OUT LEADING ZEROES        MPR
   000507 (2)000023 7552 45            573         STA     DTALLY,SCR                                            MPR
   000510 (0)000507 6072 00            574         TTF     *-1                                                   MPR
   000511    000000 7102 17            575         TRA     0,7             RETURN                                MPR
                                       576  *
                                       577         INHIB   OFF
                                       578         EVEN
   000512                              579  RMDESR NULL                    REAL DESCRIPTOR FOR AARDVARK          MPR
   000512    777777 3 617 2 00         580         VFD     18/256*1024-1,2/3,O9/617,3/2,4/0
   000513    000000000000              581         VFD     36/0
   000514    001077 3 743 7 01         582  SSINIT VFD     18/9*64-1,2/3,O9/743,3/7,4/1
   000515    00000015 0500 0           583         VFD     24/13,10/5*64,2/0

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                25   BMAP - B00     
                                       584         EJECT
                                       585         SYMDEF  IRM_SCODE
                                       586         SYMDEF  IRM_SYSID
                                       587         SYMDEF  IRM_SUASYSID
                                       588         SYMDEF  IRM_SUAUTS
                                       589         SYMDEF  IRM_SSF
                                       590         SYMDEF  IRM_ASCOUNT
                                       591         SYMDEF  IRM_NODUMP
                                       592         SYMDEF  IRM_RTRAPS
                                       593         SYMDEF  IRM_DINDEX
                                       594         SYMDEF  IRM_SNAPSLOT
                                       595         SYMDEF  IRM_NOKP_SCR
 2 000000                              596         USE     IRM_DATA,0
                                       597         EVEN
   000000    000000000000              598  IRM_SCODE OCT   0,0,0,0
   000001    000000000000
   000002    000000000000
   000003    000000000000
   000004                              599  IRM_SSF BSS     2               SSR STORED HERE BY HFA AND NIS
   000006    000000000000              600  IRM_SYSID DEC   0               SCREECH USERS SYSID
   000007    000000000000              601  IRM_SUASYSID DEC 0              SYSID OF LAST SUA USER
   000010    000000000000              602  IRM_SUAUTS DEC  0               TIME OF LAST SUA
   000011    000000000000              603  IRM_ASCOUNT OCT 0               SCREECH COUNT
   000012    000000000000              604  IRM_NODUMP DEC  0               DUMP FILE BUSY FLAG
   000013    000000000000              605  IRM_RTRAPS OCT  0               RECOVERY TRAP FLAGS
   000014    000000000000              606  IRM_DINDEX OCT  0               DUMP FILE INDEX
   000015    000000000000              607  IRM_SNAPSLOT OCT 0              BYTE 0, 1 OR 2 SET IF SLOT USED
   000016    000000000001              608  IRM_NOKP_SCR OCT 1              SET BY XDELTA IF NOT KEEP SCREECH
   000017    000000000000              609  DFERR  OCT     0               NO ERROR
   000020    12 23 20 1 00442 4        610         VFD     A6/J,A6/S,A6/P,1/1,14/290,3/4     NO DUMP
   000021    060055040060              611  ERRW2  UASCI   1,0- 0          TO REFRESH FOR ORSQ SEVERITY
   000022    000000000000              612  TESTQ  DEC     0
   000023                              613  DTALLY BSS     1               TEMP CELL FOR DECIMAL TALLYB WORD     MPR
   000024    777777777776              614  MDATABITS OCT  777777777776
   000025    000000 0110 00            615         EVEN
   000026
   000026    123103122105              616  S1MES1 UASCI   3,SCREECH  AT.
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                26   BMAP - B00     
   000027    105103110040
   000030    040101124056
   000031                              617  S1MES2 BSS     3
   000034                              618  S1MES3 BSS     1
   000035    103117104105              619  S2MES1 UASCI   2,CODE:
   000036    072040040040
   000037    130130130055              620  S2MES2 UASCI   3,XXX-00000- 0  SCREECH CODE GOES HERE                MPR
   000040    060060060060
   000041    060055040060
   000042 (2)000041 7773 41            621  S2MES3 TALLYB  S2MES2+2,-5,1   OUTPUT TALLYB WORD FOR DECIMAL        MPR
   000043    112111124056              622  S3MES1 UASCI   3,JIT.ERROR:
   000044    105122122117
   000045    122072040040
   000046    130130130055              623  S3MES2 UASCI   3,XXX-00000- 0  JIT.ERROR CODE GOES HERE              MPR
   000047    060060060060
   000050    060055040060
   000051 (2)000050 7773 41            624  S3MES3 TALLYB  S3MES2+2,-5,1   OUTPUT TALLYB WORD FOR DECIMAL        MPR
   000052                              625  STEMP  BSS     1
   000053    116117040103              626  NSUAUSR UASCI  4,NO CURRENT USER
   000054    125122122105
   000055    116124040125
   000056    123105122040
   000057    123101115105              627  SUAUSR  UASCI  4,SAME SUA USER
   000060    040123125101
   000061    040125123105
   000062    122040040040
   000063    125123105122              628  LOCKUSR UASCI  5,USER HAS GATE LOCKED
   000064    040110101123
   000065    040107101124
   000066    105040114117
   000067    103113105104
   000070    122105121125              629  MING   UASCI   5,REQUIRED GHOST SUA
   000071    111122105104
   000072    040107110117
   000073    123124040123
   000074    125101040040
   000075    052052052052              630  STARS  UASCI   18,******************************************************************
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                27   BMAP - B00     
   000076    052052052052
   000077    052052052052
   000100    052052052052
   000101    052052052052
   000102    052052052052
   000103    052052052052
   000104    052052052052
   000105    052052052052
   000106    052052052052
   000107    052052052052
   000110    052052052052
   000111    052052052052
   000112    052052052052
   000113    052052052052
   000114    052052052052
   000115    052052052052
   000116    052052052052
   000117 (2)000075 0110 1 00          631  TSTARS VFD     18/STARS,12/72,1/1,5/0
                                       632         EVEN
   000120                              633  MESSTAB NULL
   000120 (2)000140 0000 00            634         ARG     MESSSCR
   000121 (2)000140 0000 00            635         ARG     MESSSCR
   000122 (2)000140 0000 00            636         ARG     MESSSCR
   000123 (2)000130 0000 00            637         ARG     MESSFESNAP
   000124 (2)000132 0000 00            638         ARG     MESSZAP
   000125 (2)000134 0000 00            639         ARG     MESSSNAP
   000126 (2)000136 0000 00            640         ARG     MESSSUA
   000127 (2)000140 0000 00            641         ARG     MESSSCR
                                       642         EVEN
   000130    106105040123              643  MESSFESNAP UASCI 2,FE SNAP
   000131    116101120040
   000132    132101120040              644  MESSZAP UASCI  2,ZAP
   000133    040040040040
   000134    123116101120              645  MESSSNAP UASCI 2,SNAP XXX
   000135    040130130130
   000136    123125101040              646  MESSSUA UASCI  2,SUA  XXX
   000137    040130130130
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                28   BMAP - B00     
   000140    123103122105              647  MESSSCR UASCI  2,SCREECH
   000141    105103110040
                                       648  *
   000142    060040040040              649  M_PORTNR UASCI    1,0
   000143    120117122124              650  M_PORT UASCI   1,PORT
   000144 (2)000026 0034 1 00          651  TS1MES1 VFD  18/S1MES1,12/28,1/1,5/0
   000145 (2)000035 0024 1 00          652  TS2MES1 VFD  18/S2MES1,12/20,1/1,5/0
   000146 (2)000043 0030 1 00          653  TS3MES1 VFD  18/S3MES1,12/24,1/1,5/0
                                       654  *
   000147    000000000000              655  SUATAB DEC     0
   000150 (2)000053 0020 1 00          656  TNSUAUSR VFD 18/NSUAUSR,12/16,1/1,5/0
   000151 (2)000057 0020 1 00          657  TSUAUSR VFD  18/SUAUSR,12/16,1/1,5/0
   000152 (2)000063 0024 1 00          658  TLOCKUSR VFD 18/LOCKUSR,12/20,1/1,5/0
   000153 (2)000070 0024 1 00          659  TMING   VFD  18/MING,12/20,1/1,5/0
                                       660  *
   000154    000000000000              661  REPORTC DEC    0
   000155    000003 7100 04            662         EIGHT
   000160
   000160                              663  OREGS  BSS     8
   000170    000000000000              664  HOLDMISC OCT   0,0
   000171    000000000000
   000172    000000000000              665  HOLD_X1 DEC   0

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                29   BMAP - B00     
                                       666         EJECT
                                       667  *O*
                                       668  *O*    MESSAGE:   SCREECH  AT ic   port#
                                       669  *O*    MESSAGE:   SUA  xxx AT ic   port#
                                       670  *O*    MESSAGE:   SNAP xxx AT ic   port#
                                       671  *O*    MESSAGE:   ZAP      AT ic   port#
                                       672  *O*
                                       673  *O*               CODE: mid-screechcode-sev
                                       674  *O*
                                       675  *O*    MEANING:   where:
                                       676  *O*
                                       677  *O*                     xxx  is Current User Number (octal)
                                       678  *O*
                                       679  *O*                     ic   is the monitor's instruction counter.
                                       680  *O*                          Locates where the call to screech
                                       681  *O*                          was initiated.
                                       682  *O*
                                       683  *O*                     port#   is the value from S_PORTNR.
                                       684  *O*
                                       685  *O*                     mid  identifies the monitor routine that
                                       686  *O*                          initiated the automatic recovery.
                                       687  *O*
                                       688  *O*                     screechcode   is the unique decimal number
                                       689  *O*                          identification of the failure that
                                       690  *O*                          caused the automatic recovery.
                                       691  *O*
                                       692  *O*                     sev  is the severity of the failure that
                                       693  *O*                          caused recovery to be initiated, as
                                       694  *O*                          follows:
                                       695  *O*                                   7 - Screech
                                       696  *O*                                   6 - Single User Abort
                                       697  *O*                                   5 - Snapshot Dump
                                       698  *O*                                   4 - Zap
                                       699  *O*
                                       700  *O*
                                       701  *O*
                                       702  *O*    MESSAGE:   NO CURRENT USER
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     IRM$SCREECH                                                30   BMAP - B00     
                                       703  *O*    MEANING:   SCREECH was called for a Single User
                                       704  *O*               Abort when there is no current user.
                                       705  *O*               The Single User Abort is converted to
                                       706  *O*               a full Screech.
                                       707  *O*
                                       708  *O*
                                       709  *O*    MESSAGE:   SAME SUA USER
                                       710  *O*    MEANING:   A SUAed user caused an abort in rundown.
                                       711  *O*               The Single User Abort is converted to
                                       712  *O*               a full Screech.
                                       713  *O*
                                       714  *O*
                                       715  *O*    MESSAGE:   USER HAS GATE LOCKED
                                       716  *O*    MEANING:   SCREECH was called for a Single User
                                       717  *O*               Abort on a user that has a gate locked.
                                       718  *O*               The Single User Abort is converted to
                                       719  *O*               a full Screech.
                                       720  *O*
                                       721  *O*
                                       722  *O*    MESSAGE:   REQUIRED GHOST SUA
                                       723  *O*    MEANING:   A required System Ghost has been Single
                                       724  *O*               User Aborted.  The Single User Abort is
                                       725  *O*               converted to a full Screech.
                                       726  *O*
                                       727  *O*
 0 000516                              728         USE     PREVIOUS
                                       729         END
 1 000000    777777777777
   000001    000000000040

  CONTROL SECTION TABLE

   0 CODE   EVEN  000516 IRM_PROC
   1 RODATA EVEN  000002 LITERALS
   2 DATA   EIGHT 000173 IRM_DATA

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     SYMBOL TABLE                                               31   BMAP - B00     
 40000000 000000000040 AFLTLC         *89
 00101000 000000000413 ASCOCT        *479
 41000000 000000006025 ASLENTSID      *56       109       124
 40000000 000000001766 ASR            *65
 03301002 000000000000 B$JIT$         *32       415
 03301000 000000000000 B$MONTSTACK$   *30       406
 03301001 000000000000 B$TSTACK$      *31       409
 01101000 000000000050 CHECK.CUN      178      *182
 01101000 000000000064 CHECK.DIS      191       194      *199
 01101000 000000000071 CHECK.GATE     201      *207
 01101000 000000000055 CHECK.GHOST    185      *189
 01101000 000000000036 CHECK.SEV      165      *167
 40000000 000000000001 CON            *82
 01101000 000000000477 DECIMAL        280       297      *564       571
 01101002 000000000017 DFERR          356      *609
 01101000 000000000432 DONAO          494      *503
 01101002 000000000023 DTALLY         565       568       573      *613
 01101000 000000000433 ERRORA         489      *505
 01101002 000000000021 ERRW2          269      *611
 40000000 000000000032 FLTLOC         *88
 01101000 000000000074 FORCE.SCREECH  173       180       187       196      *214
 03301009 000000000000 F_CWLK         *39       405
 03301008 000000000000 F_CWUSER       *38       403
 01101000 000000000073 GATE.SCREECH   204      *212
 03201003 000000000000 HFA$SCRCPU     *20       432
 03201002 000000000000 HFA$STARTCPU   *19       332       358
 03201001 000000000000 HFA$STOPCPU    *18       142
 03201000 000000000000 HFA$XDELRTN    *17       328
 03201004 000000000000 HFC$BMAP_CLOCK           *21       384
 01101002 000000000170 HOLDMISC       153       315      *664
 01101002 000000000172 HOLD_X1        452       459      *665
 03301010 000000000000 H_GATECNT      *40       208
 02301003 000000000000 H_RPM_FLG      *33
 12101000 000000000016 IRM$DELTAQ      15      *150
 12101000 000000000003 IRM$FPTCHECK   115      *122
 03201005 000000000000 IRM$LOGERR     *22       379
 13101000 000000000367 IRM$QUIT        14       350      *431
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     SYMBOL TABLE                                               32   BMAP - B00     
 03201009 000000000000 IRM$RCVR2      *26       420
 12101000 000000000373 IRM$REBOOT      13      *437
 01101000 000000000253 IRM$RECVGO     318       331      *338
 12101000 000000000257 IRM$RETURN      12      *346
 13101000 000000000006 IRM$SCREECH     11      *135       425
 12101000 000000000000 IRM$USER$SCREECH           9      *108
 12101000 000000000002 IRM$USER_SCREECH          10      *110
 01101000 000000000241 IRM$XDELRTN    319      *325
 06101002 000000000011 IRM_ASCOUNT    590      *603
 07101002 000000000014 IRM_DINDEX     369       593      *606
 07101002 000000000012 IRM_NODUMP     357       591      *604
 07101002 000000000016 IRM_NOKP_SCR   224       595      *608
 06101002 000000000013 IRM_RTRAPS     592      *605
 07101002 000000000000 IRM_SCODE      137       139       141       156       162       219       273
                                      276       281       309       311       339       347       360
                                      585      *598
 07101002 000000000015 IRM_SNAPSLOT   373       375       377       594      *607
 06101002 000000000004 IRM_SSF        589      *599
 07101002 000000000007 IRM_SUASYSID   177       183       587      *601
 07101002 000000000010 IRM_SUAUTS     401       588      *602
 07101002 000000000006 IRM_SYSID      166       586      *600
 41000000 000000001762 ISR            *64       455
 03301004 000000000000 IT_XDELTA      *34       223       317
 41000000 000000000001 J.ACCN         *98
 40000000 000000000013 J.ACTIVE       *98
 40000000 000000000014 J.AUTH         *98
 41000000 000000000000 J.BJIT0        *98
 40000000 000000000022 J.DCBNO        *98
 41000000 000000000012 J.ERR          *98       288       293       298
 41000000 000000000006 J.FACCN        *98
 41000000 000000000021 J.FPSN         *98
 40000000 000000000015 J.JOB          *98
 40000000 000000000023 J.JOBNAME      *98
 41000000 000000000000 J.MODE         *98
 41000000 000000000022 J.OUTPRIO      *98
 41000000 000000000020 J.PPRIV        *98
 40000000 000000000016 J.PRC          *98
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     SYMBOL TABLE                                               33   BMAP - B00     
 41000000 000000000013 J.PRIV         *98
 40000000 000000000017 J.SAVED        *98
 41000000 000000000000 J.SYSID        *98       160
 41000000 000000000003 J.UNAME        *98
 40000000 000000000000 J.USER         *98
 41000000 000000000010 J.WOO          *98
 03301012 000000000000 JG_MING        *42       190
 03301013 000000000000 JG_SCREECHG    *43       193
 41000000 000000006001 JITSID         *55       159       287
 03201008 000000000000 JSD$DELUSR     *25       422
 01101000 000000000454 LHASC          275       292      *538
 01101000 000000000457 LHASC1        *542       554
 01101002 000000000063 LOCKUSR       *628       658
 41000000 000000000155 LS.AARDV       *71
 41000000 000000000156 LS.AARDV2      *71
 41000000 000000000033 LS.ASLLS       *71
 41000000 000000000053 LS.ASR         *71
 41000000 000000000002 LS.BUF         *71
 41000000 000000000161 LS.BUFCACH     *71
 40000000 000000000004 LS.CFU         *71
 41000000 000000000164 LS.CGCTXT      *71
 41000000 000000000163 LS.CGPT        *71
 41000000 000000000075 LS.CPGT1       *71
 41000000 000000000034 LS.CPLS        *71
 41000000 000000000055 LS.CWSQ1       *71
 41000000 000000000032 LS.DBLS        *71
 41000000 000000000004 LS.DS1         *71
 41000000 000000000005 LS.DS2         *71
 41000000 000000000006 LS.DS3         *71
 41000000 000000000007 LS.DS4         *71
 41000000 000000000010 LS.DS5         *71
 41000000 000000000011 LS.DS6         *71
 41000000 000000000012 LS.DS7         *71
 41000000 000000000013 LS.DS8         *71
 40000000 000000000202 LS.DVT         *71
 41000000 000000000016 LS.ECCB        *71
 41000000 000000000157 LS.FIRM        *71
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     SYMBOL TABLE                                               34   BMAP - B00     
 40000000 000000000155 LS.FLT         *71
 41000000 000000000045 LS.HJITU       *71
 41000000 000000000162 LS.IMX         *71
 41000000 000000000122 LS.IOEND       *71
 41000000 000000000176 LS.IPHY_MAP    *71
 41000000 000000000000 LS.IS          *71
 41000000 000000000050 LS.ISB         *71
 41000000 000000000115 LS.JITPG       *71
 41000000 000000000001 LS.JITU        *71
 40000000 000000000013 LS.LDCT        *71
 41000000 000000000134 LS.LDCTNC      *71
 41000000 000000000121 LS.LOWMEM      *71
 41000000 000000000167 LS.MAGAS       *71
 41000000 000000000172 LS.MAGECCB     *71
 41000000 000000000166 LS.MAGLS       *71
 41000000 000000000170 LS.MAGPS       *71
 41000000 000000000165 LS.MAGSS       *71
 41000000 000000000171 LS.MAGTCB      *71
 41000000 000000000043 LS.MHJIT       *71
 41000000 000000000177 LS.MINIQ_ENT   *71
 41000000 000000000054 LS.MISC        *71       152       155       316       440
 41000000 000000000130 LS.MISC2       *71
 41000000 000000000042 LS.MJIT        *71
 41000000 000000000035 LS.MLS         *71
 41000000 000000000132 LS.MLS1        *71
 41000000 000000000173 LS.MLSREAD     *71
 40000000 000000000156 LS.MONRL       *71
 41000000 000000000044 LS.MONSSS      *71
 41000000 000000000120 LS.MOUSE       *71
 41000000 000000000037 LS.MPT         *71
 41000000 000000000145 LS.MSTRHJ      *71
 41000000 000000000135 LS.MSTRPT      *71
 41000000 000000000041 LS.MTSTACK     *71
 41000000 000000000014 LS.NULL        *71
 41000000 000000000027 LS.PMME        *71
 41000000 000000000116 LS.PPUT        *71
 41000000 000000000131 LS.RCVENT      *71
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     SYMBOL TABLE                                               35   BMAP - B00     
 41000000 000000000127 LS.RCVRTN      *71
 41000000 000000000021 LS.REAL        *71
 41000000 000000000030 LS.REG         *71
 41000000 000000000124 LS.RONC        *71
 41000000 000000000003 LS.ROSEG       *71
 41000000 000000000125 LS.ROSEG8      *71
 41000000 000000000046 LS.SBUF1       *71
 41000000 000000000047 LS.SBUF2       *71
 41000000 000000000025 LS.SCR         *71
 41000000 000000000051 LS.SCU         *71
 41000000 000000000174 LS.SEGTBL      *71
 41000000 000000000146 LS.SLV1HJ      *71
 41000000 000000000136 LS.SLV1PT      *71
 41000000 000000000147 LS.SLV2HJ      *71
 41000000 000000000137 LS.SLV2PT      *71
 41000000 000000000150 LS.SLV3HJ      *71
 41000000 000000000140 LS.SLV3PT      *71
 41000000 000000000151 LS.SLV4HJ      *71
 41000000 000000000141 LS.SLV4PT      *71
 41000000 000000000152 LS.SLV5HJ      *71
 41000000 000000000142 LS.SLV5PT      *71
 41000000 000000000153 LS.SLV6HJ      *71
 41000000 000000000143 LS.SLV6PT      *71
 41000000 000000000154 LS.SLV7HJ      *71
 41000000 000000000144 LS.SLV7PT      *71
 41000000 000000000017 LS.TCB         *71
 41000000 000000000123 LS.TIGR        *71
 41000000 000000000020 LS.TSTACK      *71
 41000000 000000000031 LS.ULS         *71
 41000000 000000000036 LS.UPT         *71
 41000000 000000000023 LS.USDS0       *71
 41000000 000000000024 LS.USDS1       *71
 41000000 000000000040 LS.USRIS       *71
 41000000 000000000022 LS.USSS        *71
 41000000 000000000117 LS.VPT         *71
 41000000 000000000052 LS.WINDOW      *71
 41000000 000000000133 LS.WS3MLS      *71
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     SYMBOL TABLE                                               36   BMAP - B00     
 41000000 000000000160 LS.WS3MLSNW    *71
 41000000 000000000175 LS.WSQ0PT      *71
 41000000 000000000026 LS.XD          *71
 41000000 000000000126 LS.XDRTN       *71       320       329
 41000000 000000000201 LS.XLALT       *71
 41000000 000000000015 LS.XLAT        *71
 41000000 000000000200 LS.XLNORM      *71
 01101002 000000000024 MDATABITS      310      *614
 01101002 000000000130 MESSFESNAP     637      *643
 01101002 000000000140 MESSSCR        634       635       636       641      *647
 01101002 000000000134 MESSSNAP       639      *645
 01101002 000000000136 MESSSUA        640      *646
 01101002 000000000120 MESSTAB        233      *633
 01101002 000000000132 MESSZAP        638      *644
 01101002 000000000070 MING          *629       659
 41000000 000000020000 MINIQ          *93       457
 41000000 000000006054 MISC           *59       441       456
 41000000 000000006035 MLS0           *58       151       314       326       438
 41000000 000000006000 MONIS          *54       272
 01101002 000000000143 M_PORT         265      *650
 01101002 000000000142 M_PORTNR       263      *649
 01101000 000000000414 NEWWRD        *481       498
 03301011 000000000000 NI$DS          *41       202
 01101000 000000000227 NOSMSG         225       305      *313
 01101000 000000000131 NRESET         239      *248
 01101002 000000000053 NSUAUSR       *626       656
 01101000 000000000440 NXTWRD        *518       531
 01101000 000000000400 OCOUTPUT       227       229       267       285       302      *448
 01101000 000000000402 OCOUTPUT2      307      *451
 01101000 000000000435 OCTASC         243       254      *513
 00101002 000000000160 OREGS         *663
 41000000 000000000000 PR0            *74       287       288       293       298       440
 41000000 000000000001 PR1            *75       417       442       457
 40000000 000000000002 PR2            *76
 41000000 000000000003 PR3            *77       272
 40000000 000000000004 PR4            *78
 41000000 000000000007 PR7            *79       251
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     SYMBOL TABLE                                               37   BMAP - B00     
 01101000 000000000331 PRE_COOKIE     386      *395
 01101000 000000000105 PRINT.IT       222      *226
 01101000 000000000441 PUTINA        *521       526
 41000000 000000020002 QUIT           *94       442
 41000000 000000006131 RCVENT         *60       340
 01101002 000000000154 REPORTC        157       231      *661
 01101000 000000000122 RESETM         237      *240
 01101000 000000000512 RMDESR         154       439      *579
 01101000 000000000311 RVA.SNAP1      374       376      *378
 01101000 000000000315 RVA.ZAP        363      *382
 01101002 000000000026 S1MES1         235       245       247      *616       651
 01101002 000000000031 S1MES2         242       244       253       255       258       259       266
                                     *617
 01101002 000000000034 S1MES3         264      *618
 01101002 000000000035 S2MES1        *619       652
 01101002 000000000037 S2MES2         270       274      *620       621
 01101002 000000000042 S2MES3         279      *621
 01101002 000000000043 S3MES1        *622       653
 01101002 000000000046 S3MES2         271       291      *623       624
 01101002 000000000051 S3MES3         296      *624
 01101000 000000000416 SAMEWD        *485       496
 03601000 000000000000 SCUSID         *28       383
 03301014 000000000000 SC_RVA1000     *44       424
 03301015 000000000000 SC_USER        *45       109
 40000000 000000000001 SLEW1          *83
 40000000 000000000002 SLEW2          *84
 01101000 000000000514 SSINIT         414      *582
 41000000 000000001764 SSR            *67       249       351
 03201006 000000000000 SSS$BLOCK      *23       418
 03201007 000000000000 SSS$STOP       *24       435
 03301016 000000000000 SS_MS_COOKIE   *46       385       387
 03301017 000000000000 SS_UTS_COOKIE  *47       393
 01101002 000000000075 STARS         *630       631
 00101002 000000000052 STEMP         *625
 01101000 000000000044 SUA.BEGIN      169      *176
 01101000 000000000076 SUA.OK         171       209      *218
 01101002 000000000147 SUATAB         158       216       304       306      *655
 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     SYMBOL TABLE                                               38   BMAP - B00     
 01101002 000000000057 SUAUSR        *627       657
 03301007 000000000000 S_CUN          *37       184       192       241       402
 03301005 000000000000 S_PNO          *35       200       260       434
 03301006 000000000000 S_PORTNR       *36       261
 01101002 000000000022 TESTQ          486       487      *612
 00101002 000000000152 TLOCKUSR      *658
 00101002 000000000153 TMING         *659
 00101002 000000000150 TNSUAUSR      *656
 01101002 000000000144 TS1MES1        268      *651
 01101002 000000000145 TS2MES1        286      *652
 01101002 000000000146 TS3MES1        303      *653
 01101002 000000000117 TSTARS         228       230      *631
 00101002 000000000151 TSUAUSR       *657
 41000000 000000001761 TYP            *66       250       352
 41000000 000000006026 XDEL           *57       321

     271 SYMBOLS

 22:46 07/29/97  FILE=IRM$SCREECH.:E05TSI     MACRO TABLE                                                39   BMAP - B00     
 BJIT0           98
 MONLS           71

      16 MACROS

    SYMBOL SPACE USED  3138 WORDS
     MACRO SPACE USED  3324 WORDS
   INPUT RECORDS READ  1913
 STATEMENTS PROCESSED   904
         ELAPSED TIME  0:07.88
             CPU TIME     7.10 SEC.
        ASSEMBLY RATE  7639 STATEMENTS/CPU MIN.

      NO ERRORS

