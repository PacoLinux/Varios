VERSION E05

PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:1    
        1        1        /*M* DDS$LA_SRCH Label array search routine for Delta. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$LA_SRCH
        9        9             PURPOSE: To resolve a labeled array reference.
       10       10             DESCRIPTION: Searches through the executable statements record
       11       11             within the current logical block for the given labeled array
       12       12             reference. */
       13       13        /*D* NAME: DDS$LA_SRCH
       14       14             CALL: CALL DDS$LA_SRCH(SUBSCRIPT,ENTRY$) ALTRET(found);
       15       15             INTERFACE: "STATIC DATA" schema access variables.
       16       16             ENVIRONMENT: Delta.
       17       17             INPUT: SUBSCRIPT - Subscript reference value.
       18       18                    ENTRY$ - Pointer to a labeled array entry with a random subscript.
       19       19             OUTPUT: ENTRY$ - Pointer to entry in executable statements table.
       20       20             SCRATCH: Local auto only.
       21       21             DESCRIPTION: Searches through the executable statements record
       22       22             within the current logical block for the given labeled array reference.
       23       23             ALTRETURNs if the labeled array reference was found, else RETURNs. */
       24       24                                                /**/
       25       25        DDS$LA_SRCH: PROC(SUBSCRIPT,ENTRY$) ALTRET;
       26       26                                                /**/
       27       27    1   DCL SUBSCRIPT SBIN;                     /* Subscript desired */
       28       28    1   DCL ENTRY$ PTR;                         /* Pointer to found entry */
       29       29    1   DCL EXST$ PTR;                          /* Pointer to current entry */
       30       30    1   DCL EXSTEND SBIN;                       /* Table index end */
       31       31    1   DCL EXSTART SBIN;                       /* Table index start */
       32       32    1   DCL IX SBIN;                            /* "DO" index */
       33       33    1   DCL NP# SBIN;                           /* Temp name pointer number */
       34       34        /*D* EXSTART, EXSTEND, IX, & NP# must be SBIN */
       35       35    1   DCL SYM$ PTR;                           /* Label name text pointer */
       36       36    1   DCL CLB$ PTR;                           /* Current logical block pointer */
       37       37    1   DCL TNAME CHAR(128);                    /* Remembers array name */
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:2    
       38       38                                                /**/
       39       39        %INCLUDE B$OBJECT_C;                    /* Object language structures */
       40     3469        %B$DNAME;
       41     3488        %B$EXST (STCLASS="BASED(EXST$)");
       42     3595        %B$LOGBLK;
       43     3626        %INCLUDE XUH_MACRO_C;
       44     3710        %INCLUDE DD_SD_M;                       /* "STATIC DATA " */
       45     5046        %S_D;
       46     6364    1   DCL DDF$DBG_# ENTRY(2) ALTRET;
       47     6365    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       48     6366    1   DCL DDF$N_EXST ENTRY(1) ALTRET;
       49     6367                                                /**/
       50     6368                                                /* Make sure we can access the schema */
       51     6369    1        IF ( NOT S_D.SCHEMA ) OR ( NOT S_D.QSCH.OK ) OR ( S_D.DBG$ = ADDR( NIL ) ) OR (
              6369                 S_D.EXST$ = ADDR( NIL ) )
       52     6370    1        THEN GOTO RETN;
       53     6371    1        CLB$ = PINCRW( S_D.LB$, S_D.QSCH.LB# * SIZEW( B$LOGBLK ) );
       54     6372    1        EXSTART = CLB$ -> B$LOGBLK.STOFFST / SIZEW( B$EXST );
       55     6373    1        EXSTEND = CLB$ -> B$LOGBLK.STSIZE + EXSTART - 1;
       56     6374    1        NP# = ENTRY$ -> B$EXST.NPOINTER;
       57     6375    1        CALL DDF$DBG_#( NP#, SYM$ ) ALTRET( RETN );
       58     6376    1        TNAME = SYM$ -> B$DNAME.TEXT;
       59     6377    1        CALL DDF$EXST_#( EXSTART, EXST$ ) ALTRET( RETN );
       60     6378    2        DO IX = EXSTART TO EXSTEND;        /* Search through the table */
       61     6379    2             NP# = B$EXST.NPOINTER;
       62     6380    2             IF ( B$EXST.LBE = S_D.QSCH.LB# ) /* Check for same logical block */
       63     6381    2               AND
       64     6382    2               ( NP# >= 0 )                /* Label exists */
       65     6383    2               AND
       66     6384    2               ( B$EXST.LA )               /* It's a labeled array reference */
       67     6385    2               AND
       68     6386    2               ( B$EXST.SUBSCRIPT = SUBSCRIPT ) /* Desired subscript */
       69     6387    3             THEN DO;
       70     6388    3                  CALL DDF$DBG_#( NP#, SYM$ ) ALTRET( RETN );
       71     6389    3                  IF SYM$ -> B$DNAME.TEXT = TNAME
       72     6390    4                  THEN DO;                 /* Got it */
       73     6391    4                       ENTRY$ = EXST$;
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:3    
       74     6392    4                       ALTRETURN;          /* Split */
       75     6393    4                     END;
       76     6394    3                END;
       77     6395    2             CALL DDF$N_EXST( EXST$ ) ALTRET( RETN ); /* Try next entry */
       78     6396    2           END;                            /* "DO IX" */
       79     6397    1   RETN:                                   /* Couldn't find specified label */
       80     6398    1        RETURN;
       81     6399                                                /**/
       82     6400    1   END DDS$LA_SRCH;

PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:4    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$LA_SRCH.

   Procedure DDS$LA_SRCH requires 105 words for executable code.
   Procedure DDS$LA_SRCH requires 46 words of local(AUTO) storage.

    No errors detected in file DDS$LA_SRCH.:E05TSI    .

PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:5    

 Object Unit name= DDS$LA_SRCH                                File name= DDS$LA_SRCH.:E05TOU
 UTS= JUL 29 '97 14:18:02.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   105    151  DDS$LA_SRCH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDS$LA_SRCH

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDF$DBG_#
 yes     yes           Std       2 DDF$EXST_#
 yes     yes           Std       1 DDF$N_EXST
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:6    


        1        1        /*M* DDS$LA_SRCH Label array search routine for Delta. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$LA_SRCH
        9        9             PURPOSE: To resolve a labeled array reference.
       10       10             DESCRIPTION: Searches through the executable statements record
       11       11             within the current logical block for the given labeled array
       12       12             reference. */
       13       13        /*D* NAME: DDS$LA_SRCH
       14       14             CALL: CALL DDS$LA_SRCH(SUBSCRIPT,ENTRY$) ALTRET(found);
       15       15             INTERFACE: "STATIC DATA" schema access variables.
       16       16             ENVIRONMENT: Delta.
       17       17             INPUT: SUBSCRIPT - Subscript reference value.
       18       18                    ENTRY$ - Pointer to a labeled array entry with a random subscript.
       19       19             OUTPUT: ENTRY$ - Pointer to entry in executable statements table.
       20       20             SCRATCH: Local auto only.
       21       21             DESCRIPTION: Searches through the executable statements record
       22       22             within the current logical block for the given labeled array reference.
       23       23             ALTRETURNs if the labeled array reference was found, else RETURNs. */
       24       24                                                /**/
       25       25        DDS$LA_SRCH: PROC(SUBSCRIPT,ENTRY$) ALTRET;

     25  0 000000   000000 700200 xent  DDS$LA_SRCH  TSX0  ! X66_AUTO_2
         0 000001   000056 000002                    ZERO    46,2

       26       26                                                /**/
       27       27    1   DCL SUBSCRIPT SBIN;                     /* Subscript desired */
       28       28    1   DCL ENTRY$ PTR;                         /* Pointer to found entry */
       29       29    1   DCL EXST$ PTR;                          /* Pointer to current entry */
       30       30    1   DCL EXSTEND SBIN;                       /* Table index end */
       31       31    1   DCL EXSTART SBIN;                       /* Table index start */
       32       32    1   DCL IX SBIN;                            /* "DO" index */
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:7    
       33       33    1   DCL NP# SBIN;                           /* Temp name pointer number */
       34       34        /*D* EXSTART, EXSTEND, IX, & NP# must be SBIN */
       35       35    1   DCL SYM$ PTR;                           /* Label name text pointer */
       36       36    1   DCL CLB$ PTR;                           /* Current logical block pointer */
       37       37    1   DCL TNAME CHAR(128);                    /* Remembers array name */
       38       38                                                /**/
       39       39        %INCLUDE B$OBJECT_C;                    /* Object language structures */
       40     3469        %B$DNAME;
       41     3488        %B$EXST (STCLASS="BASED(EXST$)");
       42     3595        %B$LOGBLK;
       43     3626        %INCLUDE XUH_MACRO_C;
       44     3710        %INCLUDE DD_SD_M;                       /* "STATIC DATA " */
       45     5046        %S_D;
       46     6364    1   DCL DDF$DBG_# ENTRY(2) ALTRET;
       47     6365    1   DCL DDF$EXST_# ENTRY(2) ALTRET;
       48     6366    1   DCL DDF$N_EXST ENTRY(1) ALTRET;
       49     6367                                                /**/
       50     6368                                                /* Make sure we can access the schema */
       51     6369    1       IF ( NOT S_D.SCHEMA ) OR ( NOT S_D.QSCH.OK ) OR ( S_D.DBG$ = ADDR( NIL ) ) OR (
              6369                 S_D.EXST$ = ADDR( NIL ) )

   6369  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   000052 234100                    SZN     42,,PR0
         0 000004   000150 605000 0                  TPL     RETN
         0 000005   000733 234100                    SZN     475,,PR0
         0 000006   000150 605000 0                  TPL     RETN
         0 000007   001005 236100                    LDQ     517,,PR0
         0 000010   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000011   000150 600000 0                  TZE     RETN
         0 000012   001010 236100                    LDQ     520,,PR0
         0 000013   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000014   000150 600000 0                  TZE     RETN

       52     6370    1        THEN GOTO RETN;
       53     6371    1        CLB$ = PINCRW( S_D.LB$, S_D.QSCH.LB# * SIZEW( B$LOGBLK ) );

   6371  0 000015   000740 720100                    LXL0    480,,PR0
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:8    
         0 000016   001037 471500                    LDP1    543,,PR0
         0 000017   000000 635010                    EAA     0,X0
         0 000020   000020 771000                    ARL     16
         0 000021   100000 633505                    EPPR3   0,AL,PR1
         0 000022   200013 453500                    STP3    CLB$,,AUTO

       54     6372    1        EXSTART = CLB$ -> B$LOGBLK.STOFFST / SIZEW( B$EXST );

   6372  0 000023   300002 236100                    LDQ     2,,PR3
         0 000024   000022 772000                    QRL     18
         0 000025   000003 506007                    DIV     3,DL
         0 000026   200007 756100                    STQ     EXSTART,,AUTO

       55     6373    1        EXSTEND = CLB$ -> B$LOGBLK.STSIZE + EXSTART - 1;

   6373  0 000027   300002 236100                    LDQ     2,,PR3
         0 000030   777777 376007                    ANQ     -1,DL
         0 000031   200007 036100                    ADLQ    EXSTART,,AUTO
         0 000032   000001 136007                    SBLQ    1,DL
         0 000033   200006 756100                    STQ     EXSTEND,,AUTO

       56     6374    1        NP# = ENTRY$ -> B$EXST.NPOINTER;

   6374  0 000034   200004 474500                    LDP4    @ENTRY$,,AUTO
         0 000035   400000 475500                    LDP5    0,,PR4
         0 000036   500001 236100                    LDQ     1,,PR5
         0 000037   000022 732000                    QRS     18
         0 000040   200011 756100                    STQ     NP#,,AUTO

       57     6375    1        CALL DDF$DBG_#( NP#, SYM$ ) ALTRET( RETN );

   6375  0 000041   200012 635500                    EPPR5   SYM$,,AUTO
         0 000042   200055 455500                    STP5    TNAME+33,,AUTO
         0 000043   200011 636500                    EPPR6   NP#,,AUTO
         0 000044   200054 456500                    STP6    TNAME+32,,AUTO
         0 000045   200054 630500                    EPPR0   TNAME+32,,AUTO
         0 000046   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:9    
         0 000047   000000 701000 xent               TSX1    DDF$DBG_#
         0 000050   000150 702000 0                  TSX2    RETN

       58     6376    1        TNAME = SYM$ -> B$DNAME.TEXT;

   6376  0 000051   200012 470500                    LDP0    SYM$,,AUTO
         0 000052   000000 220100                    LDX0    0,,PR0
         0 000053   040100 100540                    MLR     fill='040'O
         0 000054   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         0 000055   200014 000200                    ADSC9   TNAME,,AUTO              cn=0,n=128

       59     6377    1        CALL DDF$EXST_#( EXSTART, EXST$ ) ALTRET( RETN );

   6377  0 000056   200005 631500                    EPPR1   EXST$,,AUTO
         0 000057   200055 451500                    STP1    TNAME+33,,AUTO
         0 000060   200007 633500                    EPPR3   EXSTART,,AUTO
         0 000061   200054 453500                    STP3    TNAME+32,,AUTO
         0 000062   200054 630500                    EPPR0   TNAME+32,,AUTO
         0 000063   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000064   000000 701000 xent               TSX1    DDF$EXST_#
         0 000065   000150 702000 0                  TSX2    RETN

       60     6378    2        DO IX = EXSTART TO EXSTEND;        /* Search through the table */

   6378  0 000066   200007 235100                    LDA     EXSTART,,AUTO
         0 000067   200010 755100                    STA     IX,,AUTO
         0 000070   000145 710000 0                  TRA     s:6396+1

       61     6379    2             NP# = B$EXST.NPOINTER;

   6379  0 000071   200005 470500                    LDP0    EXST$,,AUTO
         0 000072   000001 236100                    LDQ     1,,PR0
         0 000073   000022 732000                    QRS     18
         0 000074   200011 756100                    STQ     NP#,,AUTO

       62     6380    2             IF ( B$EXST.LBE = S_D.QSCH.LB# ) /* Check for same logical block */

PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:10   
   6380  0 000075   000000 471400 xsym               LDP1    S_D$
         0 000076   000001 236100                    LDQ     1,,PR0
         0 000077   777777 376007                    ANQ     -1,DL
         0 000100   100740 116100                    CMPQ    480,,PR1
         0 000101   000136 601000 0                  TNZ     s:6395
         0 000102   200011 235100                    LDA     NP#,,AUTO
         0 000103   000136 604000 0                  TMI     s:6395
         0 000104   000000 234100                    SZN     0,,PR0
         0 000105   000136 605000 0                  TPL     s:6395
         0 000106   200003 473500                    LDP3    @SUBSCRIPT,,AUTO
         0 000107   000000 236100                    LDQ     0,,PR0
         0 000110   000001 736000                    QLS     1
         0 000111   000034 732000                    QRS     28
         0 000112   300000 116100                    CMPQ    0,,PR3
         0 000113   000136 601000 0                  TNZ     s:6395

       63     6381    2               AND
       64     6382    2               ( NP# >= 0 )                /* Label exists */
       65     6383    2               AND
       66     6384    2               ( B$EXST.LA )               /* It's a labeled array reference */
       67     6385    2               AND
       68     6386    2               ( B$EXST.SUBSCRIPT = SUBSCRIPT ) /* Desired subscript */
       69     6387    3             THEN DO;

       70     6388    3                  CALL DDF$DBG_#( NP#, SYM$ ) ALTRET( RETN );

   6388  0 000114   200012 634500                    EPPR4   SYM$,,AUTO
         0 000115   200055 454500                    STP4    TNAME+33,,AUTO
         0 000116   200011 635500                    EPPR5   NP#,,AUTO
         0 000117   200054 455500                    STP5    TNAME+32,,AUTO
         0 000120   200054 630500                    EPPR0   TNAME+32,,AUTO
         0 000121   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000122   000000 701000 xent               TSX1    DDF$DBG_#
         0 000123   000150 702000 0                  TSX2    RETN

       71     6389    3                  IF SYM$ -> B$DNAME.TEXT = TNAME

PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:11   
   6389  0 000124   200012 470500                    LDP0    SYM$,,AUTO
         0 000125   000000 220100                    LDX0    0,,PR0
         0 000126   040100 106540                    CMPC    fill='040'O
         0 000127   000000 400010                    ADSC9   0,,PR0                   cn=2,n=*X0
         0 000130   200014 000200                    ADSC9   TNAME,,AUTO              cn=0,n=128
         0 000131   000136 601000 0                  TNZ     s:6395

       72     6390    4                  THEN DO;                 /* Got it */

       73     6391    4                       ENTRY$ = EXST$;

   6391  0 000132   200005 236100                    LDQ     EXST$,,AUTO
         0 000133   200004 471500                    LDP1    @ENTRY$,,AUTO
         0 000134   100000 756100                    STQ     0,,PR1

       74     6392    4                       ALTRETURN;          /* Split */

   6392  0 000135   000000 702200 xent               TSX2  ! X66_AALT

       75     6393    4                     END;
       76     6394    3                END;
       77     6395    2             CALL DDF$N_EXST( EXST$ ) ALTRET( RETN ); /* Try next entry */

   6395  0 000136   200005 630500                    EPPR0   EXST$,,AUTO
         0 000137   200054 450500                    STP0    TNAME+32,,AUTO
         0 000140   200054 630500                    EPPR0   TNAME+32,,AUTO
         0 000141   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000142   000000 701000 xent               TSX1    DDF$N_EXST
         0 000143   000150 702000 0                  TSX2    RETN

       78     6396    2           END;                            /* "DO IX" */

   6396  0 000144   200010 054100                    AOS     IX,,AUTO
         0 000145   200010 236100                    LDQ     IX,,AUTO
         0 000146   200006 116100                    CMPQ    EXSTEND,,AUTO
         0 000147   000071 604400 0                  TMOZ    s:6379

PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:12   
       79     6397    1   RETN:                                   /* Couldn't find specified label */
       80     6398    1        RETURN;

   6398  0 000150   000000 702200 xent  RETN         TSX2  ! X66_ARET
       81     6399                                                /**/
       82     6400    1   END DDS$LA_SRCH;

PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:13   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$LA_SRCH.

   Procedure DDS$LA_SRCH requires 105 words for executable code.
   Procedure DDS$LA_SRCH requires 46 words of local(AUTO) storage.

    No errors detected in file DDS$LA_SRCH.:E05TSI    .
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:15   
          MINI XREF LISTING

B$DNAME.COUNT
      3478**DCL      3485--IMP-SIZ  6376>>ASSIGN   6389>>IF
B$DNAME.TEXT
      3485**DCL      6376>>ASSIGN   6389>>IF
B$EXST
      3489**DCL      6372--ASSIGN
B$EXST.LA
      3490**DCL      6380>>IF
B$EXST.LBE
      3510**DCL      6380>>IF
B$EXST.NPOINTER
      3506**DCL      6374>>ASSIGN   6379>>ASSIGN
B$EXST.OU
      3498**DCL      3504--REDEF
B$EXST.SUBSCRIPT
      3494**DCL      6380>>IF
B$LOGBLK
      3596**DCL      6371--ASSIGN
B$LOGBLK.STOFFST
      3611**DCL      6372>>ASSIGN
B$LOGBLK.STSIZE
      3615**DCL      6373>>ASSIGN
CLB$
        36**DCL      6371<<ASSIGN   6372>>ASSIGN   6373>>ASSIGN
DDF$DBG_#
      6364**DCL-ENT  6375--CALL     6388--CALL
DDF$EXST_#
      6365**DCL-ENT  6377--CALL
DDF$N_EXST
      6366**DCL-ENT  6395--CALL
ENTRY$
        28**DCL        25--PROC     6374>>ASSIGN   6391<<ASSIGN
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:16   
EXST$
        29**DCL      3489--IMP-PTR  6377<>CALL     6379>>ASSIGN   6380>>IF       6380>>IF       6380>>IF
      6391>>ASSIGN   6395<>CALL
EXSTART
        31**DCL      6372<<ASSIGN   6373>>ASSIGN   6377<>CALL     6378>>DOINDEX
EXSTEND
        30**DCL      6373<<ASSIGN   6378>>DOINDEX
IX
        32**DCL      6378<<DOINDEX
NP#
        33**DCL      6374<<ASSIGN   6375<>CALL     6379<<ASSIGN   6380>>IF       6388<>CALL
RETN
      6398**LABEL    6370--GOTO     6375--CALLALT  6377--CALLALT  6388--CALLALT  6395--CALLALT
SUBSCRIPT
        27**DCL        25--PROC     6380>>IF
SYM$
        35**DCL      6375<>CALL     6376>>ASSIGN   6376>>ASSIGN   6388<>CALL     6389>>IF       6389>>IF
S_D.CURRENT_CHANNEL
      5998**DCL      6000--REDEF
S_D.DBG$
      5448**DCL      6369>>IF
S_D.DEBUGA
      5150**DCL      5152--REDEF
S_D.EIS
      6108**DCL      6137--REDEF
S_D.EXST$
      5454**DCL      6369>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
      6041**DCL      6042--REDEF    6056--REDEF
S_D.JDE
      5655**DCL      5656--REDEF
S_D.L$.VALUE
      5208**DCL      5214--REDEF    5222--REDEF    5225--REDEF    5228--REDEF    5231--REDEF
S_D.L$.VALUE.L
      5209**DCL      5210--REDEF    5211--REDEF
S_D.L6_MESSAGE_BUF
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:17   
      6062**DCL      6064--REDEF
S_D.LB$
      5488**DCL      6371>>ASSIGN
S_D.OUTPUT
      6028**DCL      6030--REDEF
S_D.QSCH.LB#
      5364**DCL      6371>>ASSIGN   6380>>IF
S_D.QSCH.OK
      5354**DCL      6369>>IF
S_D.REMOTE_MSG.FNCC
      6047**DCL      6048--REDEF
S_D.REMOTE_MSG.STXC
      6043**DCL      6044--REDEF
S_D.REMOTE_MSG.SUBFNCC
      6051**DCL      6052--REDEF
S_D.SCHEMA
      5148**DCL      6369>>IF
S_D.SV
      5107**DCL      5128--REDEF
S_D$
      6359**DCL      5055--IMP-PTR  6369>>IF       6369>>IF       6369>>IF       6369>>IF       6371>>ASSIGN
      6371>>ASSIGN   6380>>IF
TNAME
        37**DCL      6376<<ASSIGN   6389>>IF
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:18   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$LA_SRCH File=DDS$LA_SRCH.:E05TSI                          TUE 07/29/97 14:18 Page:19   
              MINI UREF LISTING

DDS$LA_SRCH      25**PROC
