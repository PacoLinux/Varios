VERSION E05

PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:1    
        1        1        /*M* DX_SD_D "Static" data definitions for XDelta */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,DFC */
        8        8                                                /**/
        9        9        DX_SD_D: PROC;
       10       10                                                /**/
       11       11        %INCLUDE XUH_MACRO_C;
       12       95        %INCLUDE DD_SD_M;
       13     1431        %SET LISTMAC='1'B;
       14     1432        %SET LISTEXP='1'B;
       15     1433        %SET LISTCOM='1'B;
       16     1434        %SET LISTSUB='1'B;
       17     1435        %S_D(NAME=S_D, STCLASS="STATIC SYMDEF");
              1436        %LSET STR='STA';
              1437        %IF '1'B;
              1438         %LSET INIT=INIT;
              1439         %LSET EINIT= ;
              1440        %ELSE;
              1443        %ENDIF;
              1444    1   DCL 1 S_D STATIC SYMDEF ALIGNED,
              1445    1         2 INITED BIT(1) INIT('0'B)  UNAL,
              1446                /*B* INITED - Set if DELTA has been initialized */
              1447    1         2 * BIT(35) INIT('0'B)  UNAL,
              1448    1         2 GOIC UBIN,
              1449                /* IC VALUE USED TO RETURN TO THE USERS PROGRAM */
              1450    1         2 SAVEIC UBIN,
              1451                /* USER'S LAST IC VALUE  */
              1452    1         2 FAULTINS$ PTR,
              1453                /* PTR TO INSTRUCTION WHICH CAUSED THE FAULT */
              1454    1         2 FAULTCMD$ PTR,
              1455                /* PTR TO DELTA COMMAND WHICH CAUSED THE FAULT */
              1456    1         2 USS$ PTR,
              1457                /* PTR TO SAFE-STORE FRAME */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:2    
              1458    1         2 SL$ PTR,
              1459                /* SPECIAL LOCATION IN USERS PROGRAM ALLOCATED BY LINKER */
              1460    1         2 SLP1$ PTR,
              1461                /* SPECIAL LOCATION + 1, USED FOR TRANSFER SAVEIC+1 */
              1462    1         2 SL UBIN,
              1463                /* IC OF SPECIAL LOCATION */
              1464    1         2 EWSQ# SBIN,
              1465                /* EFFECTIVE WORKING SPACE QUARTER OF THE FAULT */
              1466    1         2 RETURNN SBIN,
              1467                /* FLAG FOR USERGO, INDICATING FAULT/RETURN */
              1468    1         2 ERROR UBIN(36),
              1469                /* ERROR NUMBER */
              1470    1         2 OUT_WIDTH SBIN,
              1471                /* OUTPUT DEVICE WIDTH */
              1472    1         2 IXFIX SBIN,
              1473                /* INDEX OF STORED COMMAND WHICH PRODUCED THIS FAULT */
              1474    1         2 ACCESS BIT(1) ALIGNED,
              1475                /* USER ACCESS FLAG */
              1476    1         2 DO_SCAN BIT(1) ALIGNED,
              1477                /* XDELTA IN DO/SCAN EXECUTION CYCLE */
              1478    1         2 GO_MODE BIT(1) ALIGNED,
              1479                /* STOP/GO MODE FLAG */
              1480    1         2 REM_DO_SCAN REMEMBER,
              1481                /* REMEMBER AUTO AND LABEL INCASE OF FAULT IN DELTA */
              1482    1         2 REM_ACCESS REMEMBER,
              1483                /* REMEMBER AUTO AND LABEL IN CASE OF FAULT ACCESSING USER */
              1484    1         2 BREAK BIT(1) ALIGNED,
              1485                /* BREAK KEY FLAG */
              1486    1         2 TIC SBIN,
              1487                /* LOCATION OF FAULT-CAUSING INSTRUCTION */
              1488    1         2 FAULT SBIN,
              1489                /* FAULT CODE FROM SAFE-STORE */
              1490    1         2 DO$ PTR,
              1491                /* PTR TO COMMAND WHICH IS TO BE 'DONE' IN SOME DO ROUTINE */
              1492    1         2 ERROR_SYM$ PTR,
              1493                /* TOKEN FOR ERROR MSG (TEXTC FORMAT) */
              1494    1         2 VARNEXT$ PTR,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:3    
              1495                /* PTR TO NEXT AVAILABLE WORD IN VARCOM AREA */
              1496    1         2 SV,
              1497                /* Value type special symbols */
              1498    1           3 HIGH SBIN,
              1499                  /* High limit for FIND/ZERO */
              1500    1           3 LOW SBIN,
              1501                  /* Low limit for FIND/ZERO */
              1502    1           3 MASK SBIN,
              1503                  /* Mask for FIND/ZERO */
              1504    1           3 DELENT SBIN,
              1505                  /* Entry type code '$ENT$
              1506                         Value:
              1507                            1 - Program EXIT
              1508                            2 - Program TRAP
              1509                            3 - LIBRARY detected error
              1510                            4 - MONITOR detected error
              1511                            5 - M$SEGLD
              1512                            6 - BREAK
              1513                            7 - TRAP in DELTA
              1514                                                            */
              1515    1           3 IOBUFSZ SBIN,
              1516                  /* Size for IOBUF last read/next write */
              1517    1         2 SPEC(0:4) REDEF SV SBIN,
              1518                /* ARRAY ACCESS TO SPECIAL SYMBOLS */
              1519    1         2 DESC$ PTR,
              1520                /* POINTER WHERE TO START BUILDING DATA DESCRIPTOR */
              1521    1         2 DESCL$ PTR,
              1522                /* POINTER TO 1ST WORD BEYOND DESCR$ */
              1523    1         2 SCHSEG_BEGIN$ PTR,
              1524                /* Pointer to beginning of schema in data segment */
              1525    1         2 D$ PTR,
              1526                /* POINTER TO 1ST WORD BEYOND WHERE BUILDING STOPPED */
              1527    1         2 UREG$ PTR,
              1528                /* POINTS TO USER REGS (Xn, A, Q, E, IND) */
              1529    1         2 IND$ PTR,
              1530                /* POINTS TO INDICATOR REGISTER */
              1531    1         2 FIXLAST SBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:4    
              1532                /* LAST ALLOCATED SLOT IN FIXCOM */
              1533    1         2 STOP BIT(1) ALIGNED,
              1534                /* FLAG STOP ENCOUNTERED IN ATTACHMENTS */
              1535    1         2 RUM_SKIP BIT(1) ALIGNED,
              1536                /* RUM skip flag - while RUMing system processors */
              1537    1         2 SCHEMA BIT(1) ALIGNED,
              1538                /* SCHEMA FLAG */
              1539    1         2 DEBUGA(0:35) BIT(1) UNAL,
              1540                /* Internal debug flags */
              1541    1         2 DEBUGF REDEF DEBUGA UBIN,
              1542                /* Internal debug flags as a word */
              1543    1         2 SIMBLEOK BIT(1) ALIGNED,
              1544                /* SIMBLE REFERENCE OK FOR SIMEXP/SDO */
              1545    1         2 IFSPEC$ PTR,
              1546                /* POINTER TO IFSPEC NODE IF PRESENT, ELSE ADDR(NIL) */
              1547    1         2 SDOS BIT(1) ALIGNED,
              1548                /* SDO SIMBLE ENCOUNTERED */
              1549    1         2 SDOD BIT(1) ALIGNED,
              1550                /* SDO DECIMAL ENCOUNTERED */
              1551    1         2 SDOO BIT(1) ALIGNED,
              1552                /* SDO OCTIL ENCOUNTERED */
              1553    1         2 SDOSDEF BIT(1) ALIGNED,
              1554                /* SDO SEARCH SYMDEFS BEFORE ENTDEFS */
              1555    1         2 RANGE_CNT SBIN,
              1556                /* COUNT OF RANGE SPECIFICATIONS IN DISPLAY REQUEST */
              1557    1         2 KILL1 SBIN,
              1558                /* ID OF COMMAND TO BE KILLED FOR DDA$KILL1 */
              1559    1         2 SHOW1 SBIN ALIGNED,
              1560                /* ID OF COMMAND TO BE 'SHOWN' FOR DDA$SHOW1 */
              1561    1         2 NCHARS SBIN,
              1562                /* NUMBER OF CHARACTERS READ FROM INPUT DEVICE */
              1563    1         2 SAVE_TEXT_STPOS UBIN,
              1564                /* Save starting position of text for data descriptor */
              1565    1         2 ALIB_SAID_ECHO BIT(1) ALIGNED,
              1566                /* ECHO parameter in ALIB fpt set - echo ALIB command */
              1567    1         2 ALIB_SAID_QUIET BIT(1) ALIGNED,
              1568                /* QUIET parameter in ALIb fpt set - used for PLOVER only */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:5    
              1569    1         2 HEAD_LIB BIT(1) ALIGNED,
              1570                /* LIB bit in Head record */
              1571    1         2 RUM_COMMAND BIT(1) ALIGNED,
              1572                /* Set if RUM command was processed */
              1573    1         2 FIND_RUM BIT(1) ALIGNED,
              1574                /* Set if do FIND in RUM mode - ignore errors from DUU$GETMVAL */
              1575    1         2 BYPASS_SAVE BIT(1) ALIGNED,
              1576                /* Save BYPASS flag */
              1577    1         2 ALIB_SAID_GOBACK BIT(1) ALIGNED,
              1578                /* RETRN parameter in ALIB fpt */
              1579    1         2 FPRG_CONTEXT$ PTR,
              1580                /* Pointer to the first entry for FPRG context, ADDR(NIL) means no FPRGS */
              1581    1         2 FPRG_CONTEXT_END$ PTR,
              1582                /* Pointer to the last entry for FPRG context, ADDR(NIL) means no FPRGS */
              1583    1         2 FPRGDCB UBIN,
              1584                /* FPRG dcb */
              1585    1         2 FPRG BIT(1) ALIGNED,
              1586                /* Set when debugging an FPRG */
              1587    1         2 CURRENT_FPRG_CONTEXT$ PTR,
              1588                /* Pointer to currently active FPRG's context */
              1589    1         2 FPRG_CONTEXT_AVAIL$ PTR,
              1590                /* Pointer to the list of available slots for FPRG context */
              1591    1         2 FPRG_CONTEXT_AVAIL_END$ PTR,
              1592                /* Pointer to the end of the list of available slots for FPRG context */
              1593    1         2 KILLEDEF BIT(1) ALIGNED,
              1594                /* Tell POSIT not to use ENTDEFS */
              1595    1         2 L$,
              1596                /* For retaining info about $L (last item typed) */
              1597    1           3 VALUE DALIGNED,
              1598    1             4 L SBIN,
              1599    1             4 E REDEF L UBIN(18) ALIGNED,
              1600    1             4 HLF(0:1)  REDEF L UBIN(18) UNAL,
              1601    1             4 R SBIN,
              1602    1             4 * (0:13) UBIN,
              1603    1           3 PVALUE REDEF VALUE,
              1604    1             4 W UBIN(18) UNAL,
              1605    1             4 C UBIN(2) UNAL,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:6    
              1606    1             4 B UBIN(4) UNAL,
              1607    1             4 SEG,
              1608    1               5 S UBIN(2) UNAL,
              1609    1               5 D UBIN(10) UNAL,
              1610    1             4 * (0:14) UBIN,
              1611    1           3 VB REDEF VALUE,
              1612    1             4 VBITS(0:71) UBIN(1) UNAL,
              1613    1             4 * (0:13) UBIN UNAL,
              1614    1           3 VC REDEF VALUE,
              1615    1             4 VCHARS(0:7) CHAR(1) UNAL,
              1616    1             4 * (0:13) UBIN UNAL,
              1617    1           3 CV REDEF VALUE,
              1618    1             4 CVALUE CHAR(8),
              1619    1             4 * (0:13) UBIN UNAL,
              1620    1           3 L6_VALUE REDEF VALUE,
              1621    1             4 OPS(0:15) UBIN,
              1622    1           3 SIZE SBIN,
              1623    1           3 FMT UBIN,
              1624    1         2 O$,
              1625                /* For retaining info about $O (current open cell) */
              1626    1           3 SEG UBIN,
              1627    1           3 DESC# UBIN,
              1628    1           3 ADDRESS UBIN,
              1629    1           3 NOT_IS BIT(1) HALIGNED,
              1630    1           3 FMT UBIN(18) HALIGNED,
              1631    1         2 LASTBLT$ PTR,
              1632                /* PTR TO BEGINNING OF CURRENT COMMAND BEING BUILT */
              1633    1         2 STORED SBIN,
              1634                /* CURRENT STORED COMMAND BEING BUILT */
              1635    1         2 OP SBIN,
              1636                /* START OPERATOR FOR SIMEXP */
              1637    1         2 ACCUM SBIN,
              1638                /* START ACCUMULATOR FOR SIMEXP */
              1639    1         2 UD(0:24),
              1640                /* USER DEFINED SYMBOLS */
              1641    1           3 VALUE SBIN,
              1642    1           3 TEXTSZ UBIN(9) UNAL,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:7    
              1643    1           3 TEXT CHAR(31) UNAL,
              1644    1         2 SACT BIT(1) ALIGNED,
              1645                /* Special activation character terminated last read flag */
              1646    1         2 RUM_BIRTH$ PTR,
              1647                /* Pointer to RUM birth record */
              1648    1         2 ACT CHAR(1) ALIGNED,
              1649                /* Activation character that terminated last read */
              1650    1         2 IGNPR BIT(1) ALIGNED,
              1651                /* Ignore PR modification for BLD routines */
              1652    1         2 AWDX BIT(1) ALIGNED,
              1653                /* AWDX type PR modification for BLD routines */
              1654    1         2 REMACTIVE BIT(1) ALIGNED,
              1655                /* DDS$SCAN <--> DDS$BLD communication */
              1656    1         2 ACMDS_OFF UBIN,
              1657                /* Offset to text remaining after parse with D_ACMDS tree */
              1658    1         2 ACMDS$ PTR,
              1659                /* Pointer to buffer to be scanned with D_ACMDS tree */
              1660    1         2 ACMDS_SIZE UBIN,
              1661                /* Size of buffer pointed to by S_D.ACMDS$ */
              1662    1         2 DO_ATTACH UBIN,
              1663                /* Number of times DDA$DO_ATTACH has been called */
              1664    1         2 FNDOFFSET BIT(1) ALIGNED,
              1665                /* Set by DDR$POSIT if offset was printed (set if 0) */
              1666    1         2 RUM_ERRORS UBIN,
              1667                /* Count of errors while RUMing current run unit */
              1668    1         2 RUM_TOTAL_ERRORS UBIN,
              1669                /* Total RUM errors for all run units */
              1670    1         2 RCBC,
              1671                /* RUM cache buffer control */
              1672    1           3 WRITE_THRU BIT(1) ALIGNED,
              1673                  /* Whether to write-thru buffers */
              1674    1           3 CUR_SEQ UBIN,
              1675                  /* LRU sequence counter */
              1676    1           3 BUFSIZE SBIN,
              1677                  /* Size of each buffer */
              1678    1           3 BUFSM1 UBIN,
              1679                  /* Number of buffers in use, minus 1 */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:8    
              1680    1           3 BUF$(0:9) PTR,
              1681                  /* Pointer to buffer for program records */
              1682    1           3 PAGE(0:9) SBIN,
              1683                  /* Beginning page word address of contents of BUF$ */
              1684    1           3 SIZE(0:9) SBIN,
              1685                  /* Size of contents of BUF$, -1 means empty */
              1686    1           3 WRITTEN(0:9) BIT(1) HALIGNED,
              1687                  /* Whether buffer was ever written */
              1688    1           3 NODE(0:9) UBIN HALF HALIGNED,
              1689                  /* Current node for contents of BUF$ */
              1690    1           3 SEQ(0:9) UBIN,
              1691                  /* Last time this buffer was used */
              1692    1         2 JDCBERR UBIN,
              1693                /* DCB of error corresponding to S_D.JITERR for DUE$HERRMSG */
              1694    1         2 GHOST1 BIT(1) ALIGNED,
              1695                /* RUMing system processors/USE GHOST1 */
              1696    1         2 M$DELTA_RES CHAR(4) UNAL,
              1697                /* Default RES for M$DELTA */
              1698    1         2 * CHAR(3) UNAL,
              1699                /* Padding preceeding vfc character */
              1700    1         2 IBUFVFC CHAR(1) UNAL,
              1701                /* Vfc immediately preceeding input buffer */
              1702    1         2 INPUT CHAR(256) ALIGNED,
              1703                /* Input buffer, on word boundary, following vfc */
              1704    1         2 REM_DISKBOOT REMEMBER,
              1705                /* Unwind remember cell for XDELTA disk boot */
              1706    1         2 QUALIFIED BIT(1) ALIGNED,
              1707                /* QUALIFICATION FOUND */
              1708    1         2 MACTIVE BIT(1) ALIGNED,
              1709                /* MODIFY ACTIVE */
              1710    1         2 OFFSET_REF BIT(1) ALIGNED,
              1711                /* OFFSET REFERENCE ENCOUNTERED FOR SKIP COMMAND */
              1712    1         2 ARRAY,
              1713                /* Array processing control info */
              1714    1           3 FIRST BIT(1) ALIGNED,
              1715    1           3 CUR SBIN,
              1716    1           3 HIGH SBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:9    
              1717    1         2 ISBASE UBIN ALIGNED,
              1718               /* Shrunken IS offset or 0 */
              1719    1         2 FNDENTDEF BIT(1) ALIGNED,
              1720                /* BIT SET BY DDR$POSIT FOR MODIFY DEFAULT FMT */
              1721    1         2 STEP BIT(1) ALIGNED,
              1722                /* WAS STEP LAST COMMAND ? 1=YES */
              1723    1         2 FMT_DEFAULT UBIN,
              1724                /* USER SPECIFIED DEFAULT FORMAT */
              1725    1         2 SCH,
              1726                /* Current schema */
              1727    1           3 OK BIT(1) ALIGNED,
              1728                  /* 1= Schema exists */
              1729    1           3 PEDEF# UBIN,
              1730                  /* Primary entdef number */
              1731    1           3 NODE UBIN,
              1732                  /* Node */
              1733    1           3 NPOINTER UBIN,
              1734                  /* Primary entdef name pointer */
              1735    1           3 IC UBIN,
              1736                  /* Instruction counter value */
              1737    1           3 LB# UBIN,
              1738                  /* Logical block number */
              1739    1           3 PTR$ PTR,
              1740                  /* XDELTA pointer to in memory schema */
              1741    1         2 QSCH,
              1742                /* Qualified schema */
              1743    1           3 OK BIT(1) ALIGNED,
              1744                  /* 1= Schema exists */
              1745    1           3 PEDEF# UBIN,
              1746                  /* Primary entdef number */
              1747    1           3 NODE UBIN,
              1748                  /* Node */
              1749    1           3 NPOINTER UBIN,
              1750                  /* Primary entdef name pointer */
              1751    1           3 IC UBIN,
              1752                  /* Instruction counter value */
              1753    1           3 LB# UBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:10   
              1754                  /* Logical block number */
              1755    1           3 PTR$ PTR,
              1756                  /* XDELTA pointer to in memory schema */
              1757    1         2 DSCH,
              1758                /* Default schema */
              1759    1           3 OK BIT(1) ALIGNED,
              1760                  /* 1= Schema exists */
              1761    1           3 PEDEF# UBIN,
              1762                  /* Primary entdef number */
              1763    1           3 NODE UBIN,
              1764                  /* Node */
              1765    1           3 NPOINTER UBIN,
              1766                  /* Primary entdef name pointer */
              1767    1           3 IC UBIN,
              1768                  /* Instruction counter value */
              1769    1           3 LB# UBIN,
              1770                  /* Logical block number */
              1771    1           3 PTR$ PTR,
              1772                  /* XDELTA pointer to in memory schema */
              1773    1         2 XSCH,
              1774                /* Last resort schema */
              1775    1           3 OK BIT(1) ALIGNED,
              1776                  /* 1= Schema exists */
              1777    1           3 PEDEF# UBIN,
              1778                  /* Primary entdef number */
              1779    1           3 NODE UBIN,
              1780                  /* Node */
              1781    1           3 NPOINTER UBIN,
              1782                  /* Primary entdef name pointer */
              1783    1           3 IC UBIN,
              1784                  /* Instruction counter value */
              1785    1           3 LB# UBIN,
              1786                  /* Logical block number */
              1787    1           3 PTR$ PTR,
              1788                  /* XDELTA pointer to in memory schema */
              1789    1         2 TSCH,
              1790                /* Temporary schema */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:11   
              1791    1           3 OK BIT(1) ALIGNED,
              1792                  /* 1= Schema exists */
              1793    1           3 PEDEF# UBIN,
              1794                  /* Primary entdef number */
              1795    1           3 NODE UBIN,
              1796                  /* Node */
              1797    1           3 NPOINTER UBIN,
              1798                  /* Primary entdef name pointer */
              1799    1           3 IC UBIN,
              1800                  /* Instruction counter value */
              1801    1           3 LB# UBIN,
              1802                  /* Logical block number */
              1803    1           3 PTR$ PTR,
              1804                  /* XDELTA pointer to in memory schema */
              1805    1         2 MXSCH,
              1806                /* Last resort schema for MON */
              1807    1           3 OK BIT(1) ALIGNED,
              1808                  /* 1= Schema exists */
              1809    1           3 PEDEF# UBIN,
              1810                  /* Primary entdef number */
              1811    1           3 NODE UBIN,
              1812                  /* Node */
              1813    1           3 NPOINTER UBIN,
              1814                  /* Primary entdef name pointer */
              1815    1           3 IC UBIN,
              1816                  /* Instruction counter value */
              1817    1           3 LB# UBIN,
              1818                  /* Logical block number */
              1819    1           3 PTR$ PTR,
              1820                  /* XDELTA pointer to in memory schema */
              1821    1         2 AXSCH,
              1822                /* Last resort schema for ALT */
              1823    1           3 OK BIT(1) ALIGNED,
              1824                  /* 1= Schema exists */
              1825    1           3 PEDEF# UBIN,
              1826                  /* Primary entdef number */
              1827    1           3 NODE UBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:12   
              1828                  /* Node */
              1829    1           3 NPOINTER UBIN,
              1830                  /* Primary entdef name pointer */
              1831    1           3 IC UBIN,
              1832                  /* Instruction counter value */
              1833    1           3 LB# UBIN,
              1834                  /* Logical block number */
              1835    1           3 PTR$ PTR,
              1836                  /* XDELTA pointer to in memory schema */
              1837    1         2 DBG$ PTR,
              1838                /* Debug names record page buffer, ADDR(NIL) means none */
              1839    1         2 DBG_LAST UBIN,
              1840                /* Last entry number */
              1841    1         2 DBG_PAGE SBIN,
              1842                /* Current page in memory, -1 means none */
              1843    1         2 EXST$ PTR,
              1844                /* Executable statements record page buffer */
              1845    1         2 EXST_END$ PTR,
              1846                /* Last entry pointer */
              1847    1         2 EXST_PAGE SBIN,
              1848                /* Current page in memory, -1 means none */
              1849    1         2 IE$ PTR,
              1850                /* Internal entrys record page buffer */
              1851    1         2 IE_END$ PTR,
              1852                /* Last entry pointer */
              1853    1         2 IE_PAGE SBIN,
              1854                /* Current page in memory, -1 means none */
              1855    1         2 VREBL$ PTR,
              1856                /* Program variables record page buffer */
              1857    1         2 VREBL_END$ PTR,
              1858                /* Last entry pointer */
              1859    1         2 VREBL_PAGE SBIN,
              1860                /* Current page in memory, -1 means none */
              1861    1         2 XOU_NAME,
              1862                /* Default schema OU name - Textc */
              1863    1           3 SIZE UBIN BYTE UNAL,
              1864    1           3 TEXT CHAR(31) UNAL,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:13   
              1865    1         2 RANGE SBIN,
              1866                /* OFFSET RANGE FOR USER DEFINED SYMBOLS DISPLAYS */
              1867    1         2 BYPASS BIT(1) ALIGNED,
              1868                /* STEP BYPASS FLAG */
              1869    1         2 PARSIZE UBIN,
              1870                /* Size of X$PARSE work buffer */
              1871    1         2 SCHSEG$ PTR,
              1872                /* Next unallocated word of data segment containing schema */
              1873    1         2 LB0$ PTR,
              1874                /* Pointer to LB0 */
              1875    1         2 LB1$ PTR,
              1876                /* Pointer to LB1 */
              1877    1         2 LB$ PTR,
              1878                /* Pointer to start of "real" logical block table */
              1879    1         2 LB_EYOND$ PTR,
              1880                /* Pointer off of end of logical block table */
              1881    1         2 DNAME$ PTR,
              1882                /* DEF names record */
              1883    1         2 EDEF$ PTR,
              1884                /* ENTDEFs record */
              1885    1         2 SDEF$ PTR,
              1886                /* SYMDEFs record */
              1887    1         2 EDEF_END$ PTR,
              1888                /* ENTDEFs record end */
              1889    1         2 SDEF_END$ PTR,
              1890                /* SYMDEFs record end */
              1891    1         2 DIRCOM(0:99) UBIN,
              1892                /* Direct command buffer */
              1893    1         2 FIXCOM(0:299),
              1894                /* Fixed length part of stored commands buffer */
              1895    1           3 CMD UBIN(9) UNAL,
              1896    1           3 INACTIVE BIT(1) UNAL,
              1897    1           3 SILENT BIT(1) UNAL,
              1898    1           3 NOT_IN BIT(1) UNAL,
              1899    1           3 * BIT(4) UNAL,
              1900    1           3 FPRG BIT(1) UNAL,
              1901    1           3 USER BIT(1) UNAL,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:14   
              1902    1           3 TAL UBIN HALF UNAL,
              1903    1            3 CDF UBIN UNAL,
              1904    1            3 * UBIN HALF UNAL,
              1905    1           3 FAI UBIN HALF UNAL,
              1906    1           3 FPRG_RES CHAR(8) UNAL,
              1907    1           3 FPRG_RES_SIZE UBIN UNAL,
              1908    1         2 VARCOM$ PTR,
              1909                /* Pointer to variable length part of stored commands buffer */
              1910    1         2 VARCOM_HIGH$ PTR,
              1911                /* Pointer to highest word allocated in the data segment for VARCOM */
              1912    1         2 STAND_ALONE BIT(1) ALIGNED,
              1913                /* 1= No program associated */
              1914    1         2 BATCH BIT(1) ALIGNED,
              1915                /* Batch flag (yes=1) */
              1916    1         2 K$EEP,
              1917    1           3 TYPE UBIN,
              1918                /* KEEP FAULTS mode */
              1919    1         2 TR$INFO,
              1920                /* TRACE STUFF, IF TYPE=TT, SEE ALSO T$T */
              1921    1           3 SET BIT(1) ALIGNED,
              1922                  /* SET IF ANY OF THIS STUFF IS VALID, RESET BY KILL TRACE */
              1923    1           3 ACTIVE BIT(1) ALIGNED,
              1924                  /* SET BY TRACE ON, OR BY WHEN EVER A NEW TRACE TYPE IS SET */
              1925    1           3 SILENT BIT(1) ALIGNED,
              1926                  /* BUILD HIST BUFFER ONLY */
              1927    1           3 X BIT(1) ALIGNED,
              1928                  /* EXTERNAL */
              1929    1           3 P BIT(1) ALIGNED,
              1930                  /* PREFIXED */
              1931    1           3 TYPE UBIN,
              1932                  /* TRACE TYPE COMMAND CODE */
              1933    1           3 PSIZ UBIN,
              1934                  /* PREFIX SIZE */
              1935    1           3 PTXT CHAR(24) UNAL,
              1936                  /* THE PREFIX */
              1937    1           3 USE_TYPE UBIN WORD,
              1938                  /* For XDELTA, USER or MON */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:15   
              1939    1           3 USE_DOM UBIN WORD,
              1940                  /* For XDELTA, if USER, DOMAIN */
              1941    1         2 X$EQ,
              1942                /* X$EQ frame */
              1943    1           3 ACTIVE BIT(1) ALIGNED,
              1944    1           3 LOC UBIN,
              1945    1           3 INS_LENGTH UBIN,
              1946    1           3 SAVED UBIN,
              1947    1           3 INS(0:3) UBIN,
              1948    1         2 ACTUALIC UBIN ALIGNED,
              1949                /* IC from TCB frame without ISBASE added */
              1950    1         2 E$IS,
              1951                /* E$IS frame */
              1952    1           3 ACTIVE BIT(1) ALIGNED,
              1953    1           3 LOC UBIN,
              1954    1           3 SAVED UBIN,
              1955    1           3 C,
              1956    1             4 JUNK(0:1) UBIN,
              1957    1         2 SDOH BIT(1) ALIGNED,
              1958                /* SDO HEXIL Encountered */
              1959    1         2 DEBUG_CMD BIT(1) ALIGNED,
              1960                /* Bit indicating that a DEBUG fprg command has been given to DELTA */
              1961    1         2 DEBUG_CMD_CONTEXT$ PTR,
              1962                /* Pointer to fprg context for the fprg in the DEBUG command */
              1963    1         2 PEDEF UBIN,
              1964                /* TEMP CELL FOR HOLDING PRIM ENTDEF # OF THIS ITEM IN DDESC */
              1965    1         2 ASTACKOFF UBIN,
              1966                /* TEMP CELL FOR HOLDING STACK OFFSET FOR CURRENT AUTO REFERENCE */
              1967    1         2 REM UBIN,
              1968                /* REMainder for DDR$MOVE */
              1969    1         2 CURPOS UBIN,
              1970                /* CURrent POSition for DDR$MOVE */
              1971    1         2 SNAP_TAKEN BIT(1) ALIGNED,
              1972                /* Snap dump already taken flag for DUX$XCON1 */
              1973    1         2 DID_ATTACH BIT(1) ALIGNED,
              1974                /* Set when an AT on ONCALL breakpoint is hit with
              1975                   a true condition.  Used to avoid duplicate reporting
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:16   
              1976                   when ONCALLS hits same spot.  Set by DDA$DELTA,
              1977                   reset by DDA$GO. */
              1978    1         2 DIRECT_SIZE UBIN,
              1979                /* Size of direct text buffer (S_D.DIRECT_TEXT) */
              1980    1         2 DIRECT_OFF UBIN,
              1981                /* Current offset into direct text buffer */
              1982    1         2 DO_NESTING_LEVEL UBIN,
              1983                /* Current nesting level of DO commands */
              1984    1         2 ECCS DALIGNED,
              1985                /* ECCS   3-word block for M$DRTN fpt */
              1986    1           3 SUBC UBIN(36),
              1987                  /* ECC sub code */
              1988    1           3 EVID UBIN(36),
              1989                  /* Event id */
              1990    1           3 ERR  UBIN(36),
              1991                  /* error flags and stuff */
              1992    1         2 DRTN$ PTR,
              1993                /* Pointer to FPT$DRTN in DUA$DELTA auto */
              1994    1         2 SCHEMADCB UBIN ALIGNED,
              1995                /* Schema DCB for SCHEMA fid or Remote Debug or FANLZ */
              1996    1         2 NODE UBIN,
              1997                /* Node of active DEFs */
              1998    1         2 T$T,
              1999                /* TRACE TRANSFER STUFF */
              2000    1           3 ACTIVE BIT(1) ALIGNED,
              2001                  /* ACTIVE FLAG */
              2002    1           3 LOC_SAVED BIT(1) ALIGNED,
              2003                  /* LOC VALID FLAG */
              2004    1           3 RET_SAVED BIT(1) ALIGNED,
              2005                  /* FOR CLIMBS */
              2006    1           3 SHARED BIT(1) ALIGNED,
              2007                  /* Set when last transfer was into shared code */
              2008    1           3 SAVEINS UBIN,
              2009                  /* REPLACED INSTRUCTION */
              2010    1           3 SAVELOC UBIN(18) UNAL,
              2011                  /* IC OF SAVEINS */
              2012    1           3 RETLOC UBIN(18) UNAL,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:17   
              2013                  /* IC OF RETINS */
              2014    1           3 RETINS UBIN,
              2015                  /* FOR CLIMBS */
              2016    1         2 RESET_IN BIT(1) ALIGNED,
              2017                /* Set by DUX$BREAK, to stop read from FID */
              2018    1         2 HIST,
              2019                /* HISTORY BUFFER STUFF */
              2020    1           3 START$ PTR,
              2021                  /* POINTS AT FIRST AVAILABLE SPACE */
              2022    1           3 END$ PTR,
              2023                  /* POINTS AT LAST AVAILABLE SPACE */
              2024    1           3 CURR$ PTR,
              2025                  /* POINTS AT CURRENT ENTRY */
              2026    1           3 OUT$ PTR,
              2027                  /* POINTS AT NEXT OUTPUT ENTRY */
              2028    1           3 ROLLOVER BIT(1) ALIGNED,
              2029                  /* SET IF CURR$ HAS WRAPPED AROUND */
              2030    1           3 OUT_ACTIVE BIT(1) ALIGNED,
              2031                  /* SET IF HISTORY HAS BEEN OUTPUT SINCE LAST 'GO', RESET AT EACH 'GO' */
              2032    1           3 ACTIVE BIT(1) ALIGNED,
              2033                  /* SET IF HISTORY MODE HAS BEEN TURNED ON */
              2034    1           3 EMPTY BIT(1) ALIGNED,
              2035                  /* SET IF HISTORY BUFFER IS EMPTY */
              2036    1         2 KEEP ALIGNED,
              2037    1           3 FLAG(0:35) BIT(1) UNAL,
              2038    1         2 TRAP ALIGNED,
              2039    1           3 FLAG(0:35) BIT(1) UNAL,
              2040    1         2 IGNORE ALIGNED,
              2041    1           3 FLAG(0:35) BIT(1) UNAL,
              2042    1         2 DEBUG BIT(1) ALIGNED,
              2043                /* SET BY DICOFF, RESET BY DICON, USED TO CONTROL ENTRY TO DUD$MINI */
              2044    1         2 JDE UBIN,
              2045    1         2 JITERR REDEF JDE,
              2046    1           3 FCG BIT(12) UNAL,
              2047    1           3 MID BIT(6) UNAL,
              2048    1           3 MON BIT(1) UNAL,
              2049    1           3 CODE UBIN(14) UNAL,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:18   
              2050    1           3 SEV UBIN(3) UNAL,
              2051    1         2 LAST_NODE_LOADED UBIN,
              2052                /* USED BY EXECUTION CONTROL ROUTINES */
              2053    1         2 SILENT BIT(1) ALIGNED,
              2054                /*SILENT BREAKPOINT IN EFFECT, TELLS MODIFY NOT TO PRINT. */
              2055    1         2 EFMT_DEFAULT UBIN,
              2056                /* EVAL DEFAULT FORMAT */
              2057    1         2 SDOB BIT(1) ALIGNED,
              2058                /* Bit string found by DDS$SDO */
              2059    1         2 SDOOB BIT(1) ALIGNED,
              2060                /* Octal bit string found by DDS$SDO */
              2061    1         2 SDOT BIT(1) ALIGNED,
              2062                /* Text string found by DDS$SDO */
              2063    1         2 COPY BIT(1) ALIGNED,
              2064                /* Copy DO to UC flag */
              2065    1         2 ECHO BIT(1) ALIGNED,
              2066                /* Echo M$DELTA on DO */
              2067    1         2 ONABORT UBIN,
              2068                /* Cmd id in FIXCOM of ONABORT frame, 0 =none */
              2069    1         2 ONCALLS UBIN,
              2070                /* Cmd id in FIXCOM of ONCALLS frame, 0 =none */
              2071    1         2 ONEXIT UBIN,
              2072                /* Cmd id in FIXCOM of ONEXIT frame, 0 =none */
              2073    1         2 ONNODES UBIN,
              2074                /* Cmd id in FIXCOM of ONNODES frame, 0 =none */
              2075    1         2 NCMD$ PTR,
              2076                /* Ptr to head of current command parse output node */
              2077    1         2 TCB$ PTR,
              2078                /* Ptr to user's top TCB frame */
              2079    1         2 EOM BIT(1) ALIGNED,
              2080                /* Set if DELTA activation character set in effect */
              2081    1         2 ERROR_HICHAR UBIN UNAL,
              2082                /* PCB.HI_CHAR reported by X$PARSE */
              2083    1         2 PATCH BIT(1) ALIGNED,
              2084                /* SET IF THIS IS PATCH ENTRY FOR DELTA */
              2085    1         2 RUM BIT(1) ALIGNED,
              2086                /* SET DURING RUM MODE */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:19   
              2087    1         2 ANLZ BIT(1) ALIGNED,
              2088                /* SET BY DUA$ANLZ */
              2089    1         2 UNODE,
              2090                /* USE info for User DELTA */
              2091    1           3 CURRENT UBIN,
              2092                  /* Node of current IC */
              2093    1           3 USENODE UBIN,
              2094                  /* Node of USE NODE request */
              2095    1         2 TREE$ PTR,
              2096                /* CURRENT OVERLAY STATUS TREE */
              2097    1         2 MTREE$ PTR,
              2098                /* IN MEMORY TREE */
              2099    1         2 UTREE$ PTR,
              2100                /* USE TREE */
              2101    1         2 OVERLAID BIT(1) ALIGNED,
              2102                /* SET IF PROGRAM IS OVERLAID */
              2103    1         2 PADDR UBIN,
              2104                /* PROCEDURE START ADDRESS */
              2105    1         2 NODE#M1 UBIN,
              2106                /* NUMBER OF NODES, MINUS ONE */
              2107    1         2 B$TREE$ PTR,
              2108                /* PTR TO TREE TABLE IN READ-ONLY-SEGMENT */
              2109    1         2 B$TREEHDR$ PTR,
              2110                /* PTR TO TREE TABLE HEADER IN READ-ONLY-SEGMENT */
              2111    1         2 NODESEG_USED$ PTR,
              2112                /* Beyond current word allocated */
              2113    1         2 NODESEG_NEXT$ PTR,
              2114                /* Next word to be used */
              2115    1         2 GOTQUAL3 BIT(1) ALIGNED,
              2116                /* Set if QUAL3 (:) encountered by DDS$POSITION */
              2117    1         2 LMDCB UBIN,
              2118                /* Dcb used to access RU */
              2119    1         2 B$ROS$ PTR,
              2120                /* Pointer to RU/RUM read-only-segment */
              2121    1         2 RUMDCB UBIN,
              2122                /* RUM dcb */
              2123    1         2 RUMUTS UBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:20   
              2124                /* UTS of current RUM command */
              2125    1         2 RUMSEQ UBIN,
              2126                /* Sequence of current RUM command */
              2127    1         2 RUM_HEAD$ PTR,
              2128                /* Pointer to RUM head record */
              2129    1         2 RUM_ROS$ PTR,
              2130                /* Pointer to RUM read-only-segment */
              2131    1         2 NODESEG$ PTR,
              2132                /* Pointer to start of overlay control tables */
              2133    1         2 RUM_TEST BIT(1) ALIGNED,
              2134                /* RUM test mode in effect */
              2135    1         2 WHEN_ASL BIT(1) ALIGNED,
              2136                /* ASL in control for WHEN */
              2137    1         2 UREG$_SAVE PTR,
              2138                /* Save pointer to User registers (Xn, A, Q, E, IND) */
              2139    1         2 DBGFEPDCB UBIN ALIGNED,
              2140                /* DCB for Remote Debug */
              2141    1         2 DLIB BIT(1) ALIGNED,
              2142                /* Set if XCON entered because of M$DLIB */
              2143    1         2 PIMAGE CHAR(120),
              2144                /* Patch print image buffer */
              2145    1         2 PCHARS UBIN,
              2146                /* Size of contents of S_D.PIMAGE */
              2147    1         2 PADDR_SAVE UBIN,
              2148                /* S_D.PADDR before RUMing */
              2149    1         2 SAVEIC_SAVE UBIN,
              2150                /* S_D.SAVEIC before RUMing */
              2151    1         2 ANLZ_FILE BIT(1) ALIGNED,
              2152                /* SET if ANLZ FID */
              2153    1         2 ANLZDCB UBIN,
              2154                /* Crash dump file dcb number */
              2155    1         2 GOT@ BIT(1) ALIGNED,
              2156                /* Set if B_PATCHIH found in root node */
              2157    1         2 NEXT@ UBIN,
              2158                /* Next IS address in patch space for procedure */
              2159    1         2 RSPACE@ SBIN,
              2160                /* Remaining patch space for procedure */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:21   
              2161    1         2 HEAD@ UBIN,
              2162                /* Offset to B_PATCHIH in user IS */
              2163    1         2 DEFINED@ BIT(1) ALIGNED,
              2164                /* Set if information in S_D about @ is currently defined */
              2165    1         2 GOT# BIT(1) ALIGNED,
              2166                /* Set if B_PATCHDH found in root node */
              2167    1         2 NEXT# UBIN,
              2168                /* Next IS address in patch space for data */
              2169    1         2 RSPACE# SBIN,
              2170                /* Remaining patch space for data */
              2171    1         2 HEAD# UBIN,
              2172                /* Offset to B_PATCHDH in user IS */
              2173    1         2 DEFINED# BIT(1) ALIGNED,
              2174                /* Set if information in S_D about # is currently defined */
              2175    1         2 RI$,
              2176    1           3 SIZE UBIN,
              2177    1           3 OPS(0:15) UBIN,
              2178                /* Replaced instruction value */
              2179    1         2 NA$ UBIN,
              2180                /* Next address (after TRA to @) */
              2181    1         2 ANLZRUM_IC UBIN,
              2182                /* Used during return to user by M$ALIB to remember schema ic */
              2183    1         2 POVALUE,
              2184    1           3 SIZE UBIN,
              2185    1           3 OPS(0:15) UBIN,
              2186                /* Remember old value for interactive patching */
              2187    1         2 POFMT UBIN,
              2188                /* Remember old value's format */
              2189    1         2 HIGH@ UBIN,
              2190                /* Offset to upper limit of proc patch space in user IS */
              2191    1         2 ALIB BIT(1) ALIGNED,
              2192                /* SET if entry was due to M$ALIB */
              2193    1         2 DUMPDCB UBIN,
              2194                /* Dcb number for DUMP command to output through */
              2195    1         2 HIGH# UBIN,
              2196               /* Offset to upper limit of data patch space in user IS */
              2197    1         2 E$XIT BIT(1) ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:22   
              2198                /* SET if EXIT command was given, used by DDA$DELTA */
              2199    1         2 LINK_ENTRY BIT(1) ALIGNED,
              2200                /* Set if entry to DELTA was via M$LINK, EXIT is legal if this bit is set */
              2201    1         2 USS$_SAVE PTR,
              2202                /* Save SS pointer when in ANLZ_FILE mode */
              2203    1         2 READPOS UBIN,
              2204                /* Sequential record number of record just read */
              2205    1         2 TRACE_STATE BIT(1) ALIGNED,
              2206                /* Save trace state for RUM/ANLZ */
              2207    1         2 USVFC BIT(1) ALIGNED,
              2208                /* Use special VFC to avoid over-printing */
              2209    1         2 RUM_ONLY BIT(1) ALIGNED,
              2210                /* Entered from IBEX by RUM command */
              2211    1         2 PMD_ONLY BIT(1) ALIGNED,
              2212                /* Entered from IBEX by PMD command */
              2213    1         2 PROMPT_SIZE UBIN,
              2214                /* Prompt size */
              2215    1         2 PROMPT,
              2216                /* Prompt VFC + text */
              2217    1           3 VFC CHAR(1) UNAL,
              2218                  /* Prompt VFC */
              2219    1           3 TEXT CHAR(30) UNAL,
              2220                  /* Prompt character string */
              2221    1           3 * CHAR(1) UNAL,
              2222                  /* Unused */
              2223    1         2 UPROMPT CHAR(24),
              2224                /* User specified prompt */
              2225    1         2 UPROMPT_SIZE UBIN,
              2226                /* Size of user specified prompt */
              2227    1         2 UFPROMPT CHAR(24),
              2228                /* User specified prompt for FPRGs */
              2229    1         2 UFPROMPT_SIZE UBIN,
              2230                /* Size of user specified prompt for FPRGs */
              2231    1         2 FEP_PADDR UBIN,
              2232                /* Start address of procedure for FPRGs */
              2233    1         2 FEP_PSIZE UBIN,
              2234                /* Size of procedure for FPRGs */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:23   
              2235    1         2 REM_DRTN_QUIT REMEMBER,
              2236                /* REMEMBER cell for DRTN_QUIT in DDA$DELTA */
              2237    1         2 LWEXTEND BIT(1) ALIGNED,
              2238                /* Last Write was EXTEND */
              2239    1         2 ENTRYCMD$ PTR,
              2240                /* To remember the real FAULTCMD$ in the recursive sections
              2241                   of attachment processing, when FAULTCMD$ points to a
              2242                   SAVEd string of attachments and not the entry condition. */
              2243    1         2 FIND,
              2244                /* SAVE VALUES FOR FIND/STORE */
              2245    1           3 SEG UBIN,
              2246    1           3 ADDRESS UBIN,
              2247    1           3 DESC# UBIN,
              2248    1           3 NUM UBIN,
              2249    1           3 NOT_IS BIT(1) ALIGNED,
              2250    1           3 MASK_F SBIN,
              2251    1           3 * UBIN,
              2252    1         2 BREAK_PRINTED BIT(1) ALIGNED,
              2253                /* Break message was already printed flag */
              2254    1         2 REPORT_FLAGS(0:13) ALIGNED,
              2255                /* Current report print flags  - Room for 14 compilers */
              2256    1           3 OFFSET BIT(1) UNAL,
              2257    1           3 LINE BIT(1) UNAL,
              2258    1           3 TYPE BIT(1) UNAL,
              2259    1           3 * BIT(33) UNAL,
              2260    1         2 REM_USERGO REMEMBER,
              2261                /* Remember cell for USERDO for USERGO */
              2262    1         2 LAST_ERROR,
              2263                /* Last error code used by DDE$ERROR, DUE$ERRMSG, DUE$UERRRMSG */
              2264    1           3 FCG_MID BIT(18) UNAL,
              2265    1           3 MON BIT(1) UNAL,
              2266    1           3 ERR# UBIN(14) UNAL,
              2267    1           3 SEV UBIN(3) UNAL,
              2268    1         2 SYNTAX UBIN,
              2269                /* Current syntax in effect */
              2270    1         2 GOT$RI BIT(1) ALIGNED,
              2271                /* Set if DDK$EVAL got $RI special symbol - need for L6 mode */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:24   
              2272    1         2 IS_PTR BIT(1) ALIGNED,
              2273                /* Set if $Bn used as a pointer */
              2274    1         2 BRKRSP_ERRCODE UBIN,
              2275                /* ERRCODE for BRKRSP message from FD */
              2276    1         2 USERNO UBIN,
              2277                /* User number received in BRKRSP message in L6 XDELTA */
              2278    1         2 REM_BREAK REMEMBER,
              2279                /* REMEMBER variable to remember BREAK in DDA$DELTA */
              2280    1         2 MBU BIT(1) ALIGNED,
              2281                /* GD$MSG.BRKRSP.MBU - Monitor running on behalf of user for L6 XDELTA */
              2282    1         2 L6_CACHE BIT(1) ALIGNED,
              2283                /* If set use L6 cache - else always go get values from FD */
              2284    1         2 INTERPRETIVE BIT(1) ALIGNED,
              2285                /* If not set - debugging interpreter in FEP */
              2286    1         2 DUMP_HEAD BIT(1) ALIGNED,
              2287                /* Used if dumping HEAD record when RUMming L6 RU */
              2288    1         2 SCREECH_IC REMEMBER,
              2289                /* REMEMBER variable for screech IC */
              2290    1         2 HELPING BIT(1) ALIGNED,
              2291                /* Set when X$HELPing */
              2292    1         2 SYNTAX_DEFAULT UBIN,
              2293                /* Default syntax, established in DUI$RU_ACCESS/DXI$1STIME */
              2294    1         2 PROTECT BIT(1) ALIGNED,
              2295                /* PROTECT flag */
              2296    1         2 SAD SBIN,
              2297                /* $SAD descriptor number, -1 if none */
              2298    1         2 LASTPD ALIGNED,
              2299                /* Info about last primary ENTDEF found */
              2300    1           3 NODE UBIN,
              2301                  /* Associated node */
              2302    1           3 RANGE SBIN,
              2303                  /* Range, unknown if < 0,
              2304                            unsignificant if = 0 */
              2305    1           3 IC UBIN,
              2306                  /* Where it's at */
              2307    1           3 PEDEF# UBIN,
              2308                  /* Entdef number */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:25   
              2309    1         2 ANYSD ALIGNED,
              2310                /* Info about last SYMDEF found */
              2311    1           3 NODE UBIN,
              2312                  /* Associated node */
              2313    1           3 RANGE SBIN,
              2314                  /* Range, unknown if < 0,
              2315                            unsignificant if = 0 */
              2316    1           3 IC UBIN,
              2317                  /* Where it's at */
              2318    1           3 SDEF# UBIN,
              2319                  /* Symdef number */
              2320    1         2 NCNSD ALIGNED,
              2321                /* Info about last non-constant SYMDEF found */
              2322    1           3 NODE UBIN,
              2323                  /* Associated node */
              2324    1           3 RANGE SBIN,
              2325                  /* Range, unknown if < 0,
              2326                            unsignificant if = 0 */
              2327    1           3 IC UBIN,
              2328                  /* Where it's at */
              2329    1           3 SDEF# UBIN,
              2330                  /* Symdef number */
              2331    1         2 REM_DRTN_KLDELTA REMEMBER,
              2332                /* REMEMBER cell for DRTN_DLIB in DDA$DELTA */
              2333    1         2 STEP_L6 BIT(1) ALIGNED,
              2334                /* Set if stepping if FPRG */
              2335    1         2 RUM_FEP_USE UBIN,
              2336                /* SECTION USED FOR RUMMING M:FEP */
              2337    1         2 S$TEP,
              2338                /* STEP control frame */
              2339    1           3 ACTIVE BIT(1) ALIGNED,
              2340                  /* Set when step in progress */
              2341    1           3 ALT BIT(1) UNAL,
              2342                  /* Set when CLIMB or call has altret */
              2343    1           3 ONE_FLAG BIT(1) UNAL,
              2344                  /* Set if step one call is current step command */
              2345    1           3 DOING_SOC BIT(1) UNAL,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:26   
              2346                  /* Set if we're SOCing a subroutine call (TSXn) */
              2347    1           3 * BIT(33) UNAL,
              2348    1           3 LOC UBIN,
              2349                  /* return location */
              2350    1           3 ALTLOC UBIN,
              2351                  /* altreturn location */
              2352    1           3 SAVED UBIN,
              2353                  /* saved return instruction */
              2354    1           3 ALTSAVED UBIN,
              2355                  /* save altreturn instruction */
              2356    1           3 EWSQ UBIN,
              2357                  /* wsq number of step domain */
              2358    1           3 OLD_PTR$ PTR,
              2359                  /* pointer to stepped instruction,
              2360                     used by XDELTA to restore inhibit bit state */
              2361    1           3 CMD_COUNT UBIN,
              2362                  /* n of STEP n */
              2363    1           3 CUR_COUNT UBIN,
              2364                  /* current steps during this STEP n */
              2365    1           3 MODE UBIN,
              2366                  /* current step mode (STATEMENT, PARA, etc.) */
              2367    1         2 ANLZ_MODIFIED BIT(1) ALIGNED,
              2368                /* Set the first time something is modified in ANLZ
              2369                   mode.  Used to control output of message on console. */
              2370    1         2 WHEN_HIGH$ PTR,
              2371                /* Points to highest word allocated in when data segment */
              2372    1         2 WHEN_NEXT$ PTR,
              2373                /* Points to next word to be used */
              2374    1         2 WHEN_SET BIT(1) ALIGNED,
              2375                /* Set if an active when directive exists */
              2376    1         2 DO_CALLED BIT(1) ALIGNED,
              2377                /* Set when DDA$DO is called,
              2378                   used to tell if any directives have been performed
              2379                   during this trip thru DELTA.  If not, WHEN
              2380                   old values don't have to be gathered again. */
              2381    1         2 WHEN_IC UBIN,
              2382                /* IC where WHEN derail was put */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:27   
              2383    1         2 WHEN_INS UBIN,
              2384                /* WHEN replaced instruction */
              2385    1         2 WHEN_ACTIVE BIT(1) ALIGNED,
              2386                /* WHEN derail is planted. */
              2387    1         2 CURRENT_CHANNEL UBIN UNAL,
              2388                /* Currently selected channel for L6 XDELTA or FANLZ */
              2389    1         2 CURRENT_CHANNEL_R REDEF CURRENT_CHANNEL,
              2390    1           3 * BIT(20) UNAL,
              2391    1           3 CHAN BIT(16) UNAL,
              2392    1         2 LCTNUM UBIN,
              2393                /* current LCT # for MLCT active */
              2394    1         2 MLCT BIT(1) ALIGNED,
              2395                /* Set if MLCT active */
              2396    1         2 ANLZ_KLUDGE BIT(1) ALIGNED,
              2397                /* SET IF ANLZ @ USES M:MON */
              2398    1         2 EXEC_DOMAIN_SAVE UBIN,
              2399                /* Save EXEC_DOMAIN when go into RUM or ANLZ mode */
              2400    1         2 IPRFLT BIT(1) ALIGNED,
              2401                /* Set by DUX$TRAP when the fault code is ipr.  Used
              2402                   to differentiate between str fault and illegal decimal
              2403                   faults. */
              2404    1         2 LABEL_FOUND BIT(1) ALIGNED,
              2405                /* Set if DDF$STATEMENT encountered
              2406                   a statement with a label when skipping
              2407                   statements with the same ic. */
              2408    1         2 FAULTINS UBIN,
              2409                /* The instruction underneath a breakpoint derail
              2410                   when the SL is used */
              2411    1         2 DA_CPN(0:2) UBIN,
              2412                /* CWSQPGS WSQ number for anlz_file */
              2413    1         2 * CHAR(3) UNAL,
              2414                /* Padding preceeding vfc character */
              2415    1         2 OBUFVFC CHAR(1) UNAL,
              2416                /* Vfc immediately preceeding output buffer */
              2417    1         2 OUTPUT CHAR(2048) ALIGNED,
              2418                /* Output buffer, on word boundary, following vfc */
              2419    1          2 XDP REDEF OUTPUT,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:28   
              2420                /* Output buffer - redefined for XDELTA for patch buffer */
              2421    1           3 IMAGE UNAL,
              2422                  /* Patch image sent to AARDVARK */
              2423    1             4 INP CHAR(80) UNAL,
              2424                    /* Input image */
              2425    1             4 OTP CHAR(120) UNAL,
              2426                    /* Output image */
              2427    1           3 * CHAR(1848) UNAL,
              2428    1         2 DIRECT_TEXT CHAR(256) ALIGNED,
              2429                /* Direct command text buffer, to allow imbedded MACTIVEs */
              2430    1         2 HOST_MESSAGE_BUF_REMOTE CHAR(415) CALIGNED,
              2431    1         2 REMOTE_MSG REDEF HOST_MESSAGE_BUF_REMOTE,
              2432    1           3 STXC CHAR(1),
              2433    1           3 STX REDEF STXC,
              2434    1             4 * BIT(1),
              2435    1             4 C UBIN(8) UNAL,
              2436    1           3 FNCC CHAR(1),
              2437    1           3 FNC REDEF FNCC,
              2438    1             4 * BIT(1),
              2439    1             4 C BIT(8) UNAL,
              2440    1           3 SUBFNCC CHAR(1),
              2441    1           3 SUBFNC REDEF SUBFNCC,
              2442    1             4 * BIT(1),
              2443    1             4 C BIT(8) UNAL,
              2444    1           3 TXT CHAR(412),
              2445    1         2 HOST_MESSAGE_BUF REDEF HOST_MESSAGE_BUF_REMOTE,
              2446         /* Message buffer for message exchange with FED - message is in unconverted form */
              2447    1           3 C CHAR(314) CALIGNED,
              2448    1           3 * CHAR(101) CALIGNED,
              2449    1         2 * CHAR(1) UNAL,
              2450                /* UNUSED */
              2451    1         2 L6_MESSAGE_BUF CHAR(280) CALIGNED,
              2452           /* Message buffer for message exchange with FED - message is in converted form */
              2453    1         2 REMOTE_MSG_L6 REDEF L6_MESSAGE_BUF,
              2454                /* Message buffer for message exchange with FD for L6 XDELTA */
              2455    1           3 FNC BIT(8) UNAL,
              2456    1           3 SUBFNC BIT(8) UNAL,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:29   
              2457    1           3 TXT(0:311) UBIN(8) UNAL,
              2458    1           3 * BIT(8) UNAL,
              2459    1         2 * CHAR(3) UNAL,
              2460                /* UNUSED */
              2461    1         2 ONE_TO_TWO,
              2462    1           3 EXEC_DOMAIN UBIN,
              2463                  /* Execution Domain */
              2464    1         2 SHOW BIT(1) ALIGNED,
              2465                /* Set if showing breakpoints so don't go to FD for patch space info */
              2466    1         2 INT# BIT(1) ALIGNED,
              2467                /* Set in DDA$DELTA is get ECC = %ECC_INT# */
              2468    1         2 AFD# BIT(1) ALIGNED,
              2469                /* Set if DUX$EVENT if get SUBC2_AFD# event and S_D.INT# is set */
              2470    1         2 OPDCBNO UBIN,
              2471                /* Set to dcb number from event frame in DUX$EVENT if sets S_D.AFD# */
              2472    1         2 GOTRAPPOS BIT(1) ALIGNED,
              2473                /* SET IF GOTRAP pos was specified */
              2474    1         2 GOTRAP_POSITION UBIN,
              2475                /* position specified for GOTRAP */
              2476    1         2 GOT$L BIT(1) ALIGNED,
              2477                /* Set if $L special symbol found in DDK$EVAL */
              2478    1         2 MDW BIT(1) ALIGNED,
              2479                /* SET if Modify DW command was last modify command */
              2480    1         2 FIRST_TIME BIT(1) ALIGNED,
              2481                /* Set if this is first time accessing patch space information
              2482                   so we will get it in DUI$1STIME */
              2483    1         2 BEEN_TO_SCANREAD BIT(1) ALIGNED,
              2484                /* Set if we need to UNWIND from DUS$SCANREAD */
              2485    1         2 DO_ATTACHMENTS REMEMBER,
              2486                /* DO_ATTACH labEL in DDA$DELTA */
              2487    1         2 PARSMORE_REM REMEMBER,
              2488                /* PARSMORE label in DUS$SCAN (unwound from DUS$SCANREAD) */
              2489    1         2 L6_TAB BIT(1) ALIGNED,
              2490                /* Set if valid L6 TAB value */
              2491    1         2 L6_TAB_VALUE SBIN,
              2492                /* L6 TAB VALUE */
              2493    1         2 CAN_I_DO_BREAK BIT(1) ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:30   
              2494                /* IF RESET, PROCESSING EVENT FOR USER, DONT ALLOW BREAK COMMAND */
              2495    1         2 POST_ASSOC BIT(1) ALIGNED,
              2496                /* SET IF ENTERED FOR CNTL-Y */
              2497    1         2 EIS ALIGNED,         /* used when LFing in modify active */
              2498    1           3 DESC# BIT(1) UNAL,  /* set if there's a descriptor left */
              2499    1           3 DESC_TYPE UBIN(3) UNAL, /* type of the descriptor */
              2500    1           3 MODS UNAL,
              2501    1             4 AR BIT(1) UNAL, /* set if AR modification for this 1 */
              2502    1             4 RL BIT(1) UNAL, /* set if RL modification for this 1 */
              2503    1             4 ID BIT(1) UNAL, /* set if ID modification for this 1 */
              2504    1           3 DESC1 UNAL,
              2505    1             4 DESC# BIT(1) UNAL,
              2506    1             4 DESC_TYPE UBIN(3) UNAL,
              2507    1             4 MODS UNAL,
              2508    1               5 AR BIT(1) UNAL,
              2509    1               5 RL BIT(1) UNAL,
              2510    1               5 ID BIT(1) UNAL,
              2511    1           3 DESC2 UNAL,
              2512    1             4 DESC# BIT(1) UNAL,
              2513    1             4 DESC_TYPE UBIN(3) UNAL,
              2514    1             4 MODS UNAL,
              2515    1               5 AR BIT(1) UNAL,
              2516    1               5 RL BIT(1) UNAL,
              2517    1               5 ID BIT(1) UNAL,
              2518    1           3 DESC3 UNAL,
              2519    1             4 DESC# BIT(1) UNAL,
              2520    1             4 DESC_TYPE UBIN(3) UNAL,
              2521    1             4 MODS UNAL,
              2522    1               5 AR BIT(1) UNAL,
              2523    1               5 RL BIT(1) UNAL,
              2524    1               5 ID BIT(1) UNAL,
              2525    1           3 * BIT(8) UNAL,
              2526    1         2 EIS_SHIFT REDEF EIS,
              2527    1           3 * BIT(7) UNAL,
              2528    1           3 X BIT(29) UNAL,
              2529    1         2 EIS_ACTIVE BIT(1) ALIGNED,
              2530                 /* set if DDR$INSTR is allowed to use/set EIS. */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:31   
              2531    1         2 XUG_BUILTIN BIT(1) ALIGNED,
              2532                /* XUG BUILTIN WAS EXECUTED */
              2533    1         2 LMDCB_SAVE UBIN,
              2534                /* TEMP TO SAVE LMDCB */
              2535    1         2 NODEFS4 BIT(1) ALIGNED,
              2536                /* E@NODEFS4 WAS PRINTED, RESET IN DFA$FPRG (27819) */
              2537    1         2 LADC BIT(1) ALIGNED,
              2538                /* SET IF SITE IS LADC, MAKES MINI AVAILABLE */
              2539    1         2 STATUS BIT(1) ALIGNED,
              2540                /* FPL STATUS MODE SET */
              2541    1         2 ERRFID,
              2542    1           3 L UBIN(9) CALIGNED,
              2543    1           3 C CHAR(31) CALIGNED,
              2544                 /* NAME FOR ERRFID */
              2545    1         2 ERRACCT CHAR(8) ALIGNED,
              2546                 /* ACCOUNT FOR ERRFID */
              2547    1         2 ERRPASS CHAR(8) ALIGNED,
              2548                 /* PASSWORD FOR ERRFID */
              2549    1         2 O$SIZE UBIN, /* Size of $O (for fep modes) in words */
              2550    1         2 XCONING BIT(1) ALIGNED,
              2551                /* SET IF ENTERED BECAUSE OF USER XCON */
              2552    1         2 REPORTING_ONCALL BIT(1) ALIGNED,
              2553                /* USED BY POSIT TO DETERMINE IF :line OR :sdef */
              2554    1         2 SIM_UPDATE BIT(1) ALIGNED,
              2555                /* TELLS POSIT TO PRETEND ITS DOING AN UPDATE */
              2556    1         2 DO_MESSAGE REMEMBER,
              2557                /* DO_MESSAGE label in DDA$DELTA */
              2558    1         2 MOD_L6,
              2559                /* Cache for L6 memory fetch */
              2560    1           3 ADDRESS SBIN,
              2561    1           3 SEG UBIN,
              2562    1           3 DESC# UBIN,
              2563    1           3 NOT_IS BIT(1) ALIGNED,
              2564    1           3 VALUE,
              2565    1             4 SIZE UBIN,
              2566    1             4 OPS(0:15) UBIN,
              2567    1         2 RUM_FEP BIT(1) ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:32   
              2568    1         2 MONENT,
              2569    1           3 GOT@ BIT(1) ALIGNED,
              2570                  /* Set if B_PATCHIH_ME found in root node */
              2571    1           3 NEXT@ UBIN,
              2572                  /* Next IS address in patch space for procedure */
              2573    1           3 RSPACE@ SBIN,
              2574                  /* Remaining patch space for procedure */
              2575    1           3 HEAD@ UBIN,
              2576                  /* Offset to B_PATCHIH_ME in user IS */
              2577    1           3 HIGH@ UBIN,
              2578                  /* Offset to upper limit of proc patch space in user IS */
              2579    1           3 DEFINED@ BIT(1) ALIGNED,
              2580                /* Set if information in S_D about @ is currently defined */
              2581    1           3 GOT# BIT(1) ALIGNED,
              2582                  /* Set if B_PATCHDH_ME found in root node */
              2583    1           3 NEXT# UBIN,
              2584                  /* Next IS address in patch space for data */
              2585    1           3 RSPACE# SBIN,
              2586                  /* Remaining patch space for data */
              2587    1           3 HEAD# UBIN,
              2588                  /* Offset to B_PATCHDH_ME in user IS */
              2589    1           3 HIGH# UBIN,
              2590                  /* Offset to upper limit of proc patch space in user IS */
              2591    1           3 DEFINED# BIT(1) ALIGNED,
              2592                /* Set if information in S_D about # is currently defined */
              2593    1         2 MONIS,
              2594    1           3 GOT@ BIT(1) ALIGNED,
              2595                  /* Set if B_PATCHIH_IS found in root node */
              2596    1           3 NEXT@ UBIN,
              2597                  /* Next IS address in patch space for procedure */
              2598    1           3 RSPACE@ SBIN,
              2599                  /* Remaining patch space for procedure */
              2600    1           3 HEAD@ UBIN,
              2601                  /* Offset to B_PATCHIH_IS in user IS */
              2602    1           3 HIGH@ UBIN,
              2603                  /* Offset to upper limit of proc patch space in user IS */
              2604    1           3 DEFINED@ BIT(1) ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:33   
              2605                /* Set if information in S_D about @ is currently defined */
              2606    1           3 GOT# BIT(1) ALIGNED,
              2607                  /* Set if B_PATCHDH_IS found in root node */
              2608    1           3 NEXT# UBIN,
              2609                  /* Next IS address in patch space for data */
              2610    1           3 RSPACE# SBIN,
              2611                  /* Remaining patch space for data */
              2612    1           3 HEAD# UBIN,
              2613                  /* Offset to B_PATCHDH_IS in user IS */
              2614    1           3 HIGH# UBIN,
              2615                  /* Offset to upper limit of proc patch space in user IS */
              2616    1           3 DEFINED# BIT(1) ALIGNED,
              2617                /* Set if information in S_D about # is currently defined */
              2618    1         2 FD,
              2619    1           3 GOT@ BIT(1) ALIGNED,
              2620                  /* Set if B_PATCHIH_FD found in root node */
              2621    1           3 NEXT@ UBIN,
              2622                  /* Next IS address in patch space for procedure */
              2623    1           3 RSPACE@ SBIN,
              2624                  /* Remaining patch space for procedure */
              2625    1           3 HEAD@ UBIN,
              2626                  /* Offset to B_PATCHIH_FD in user IS */
              2627    1           3 HIGH@ UBIN,
              2628                  /* Offset to upper limit of proc patch space in user IS */
              2629    1           3 DEFINED@ BIT(1) ALIGNED,
              2630                /* Set if information in S_D about @ is currently defined */
              2631    1           3 GOT# BIT(1) ALIGNED,
              2632                  /* Set if B_PATCHDH_FD found in root node */
              2633    1           3 NEXT# UBIN,
              2634                  /* Next IS address in patch space for data */
              2635    1           3 RSPACE# SBIN,
              2636                  /* Remaining patch space for data */
              2637    1           3 HEAD# UBIN,
              2638                  /* Offset to B_PATCHDH_FD in user IS */
              2639    1           3 HIGH# UBIN,
              2640                  /* Offset to upper limit of proc patch space in user IS */
              2641    1           3 DEFINED# BIT(1) ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:34   
              2642                /* Set if information in S_D about # is currently defined */
              2643    1         2 BF,
              2644    1           3 GOT@ BIT(1) ALIGNED,
              2645                  /* Set if B_PATCHIH_BF found in root node */
              2646    1           3 NEXT@ UBIN,
              2647                  /* Next IS address in patch space for procedure */
              2648    1           3 RSPACE@ SBIN,
              2649                  /* Remaining patch space for procedure */
              2650    1           3 HEAD@ UBIN,
              2651                  /* Offset to B_PATCHIH_BF in user IS */
              2652    1           3 HIGH@ UBIN,
              2653                  /* Offset to upper limit of proc patch space in user IS */
              2654    1           3 DEFINED@ BIT(1) ALIGNED,
              2655                /* Set if information in S_D about @ is currently defined */
              2656    1           3 GOT# BIT(1) ALIGNED,
              2657                  /* Set if B_PATCHDH_BF found in root node */
              2658    1           3 NEXT# UBIN,
              2659                  /* Next IS address in patch space for data */
              2660    1           3 RSPACE# SBIN,
              2661                  /* Remaining patch space for data */
              2662    1           3 HEAD# UBIN,
              2663                  /* Offset to B_PATCHDH_BF in user IS */
              2664    1           3 HIGH# UBIN,
              2665                  /* Offset to upper limit of proc patch space in user IS */
              2666    1           3 DEFINED# BIT(1) ALIGNED,
              2667                /* Set if information in S_D about # is currently defined */
              2668    1         2 HW_TYPE UBIN WORD ALIGNED,
              2669                 /* SAME AS MON SYMBOL FOR HW FLAGS =0,4=D90,5=D90XA,6=DPS8000 */
              2670    1         2 HW_FLTIC_OK BIT(1) ALIGNED,
              2671                 /* SAME AS MON SYMBOL FOR HW FLAGS */
              2672    1         2 HW_RES_MEM BIT(1) ALIGNED,
              2673                 /* SAME AS MON SYMBOL FOR HW FLAGS */
              2674    1         2 HW_PTB_UNITS SBIN WORD ALIGNED,
              2675                 /* SAME AS MON SYMBOL FOR HW FLAGS */
              2676    1         2 HW_WSQ0PT BIT(1) ALIGNED,
              2677                 /* SAME AS MON SYMBOL FOR HW FLAGS */
              2678    1         2 TEMP$O UBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:35   
              2679                /* Temporary $O for preevaluation of $O in an expression */
              2680    1         2 TEMP$O_ACTIVE BIT(1) ALIGNED,
              2681                /* TEMP$O is valid if set */
              2682             %XUH_PARAM(NAME=XUH_PARAM,STCLASS=" ",LVL=2);
              2683        /**/
              2684        %LSET STR='         ';
              2685        %IF
              2687            '0'B;
              2689        %ELSE;
              2690          %LSET INIT=/*;
              2691        %ENDIF;
              2692        %IF '1'B;
              2693          %IF '0'B;
              2695          %ELSE;
              2696            %LSET TERM=',';
              2697          %ENDIF;
              2698        %ELSE;
              2700        %ENDIF;
              2701        %IF '0'B;
              2703        %ELSE;
              2704    1      2 XUH_PARAM DALIGNED,
              2705        %ENDIF;
              2706    1        3 PROCNAME_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2707    1        3 PROCACCT_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2708    1        3 PROCPASS_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2709    1        3 KEYWORD_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2710    1        3 OUTDCB1# UBIN HALF UNAL /*(DCBNUM(NIL)) /**/,
              2711    1        3 OUTDCB2# UBIN HALF UNAL /*(DCBNUM(NIL)) /**/,
              2712    1        3 HELP$ PTR /*(ADDR(NIL)) /**/,
              2713    1        3 VFC# CHAR(1) UNAL /*(BINASC(0)) /**/,
              2714    1        3 ALL# BIT(1) UNAL /*('0'B) /**/,
              2715    1        3 MORE# BIT(1) UNAL /*('0'B) /**/,
              2716    1        3 TOPICS# BIT(1) UNAL /*('0'B) /**/,
              2717    1        3 OTHER_PROC# BIT(1) UNAL /*('0'B) /**/,
              2718    1        3 * BIT(23) UNAL /*('0'B) /**/,
              2719    1        3 ERR,
              2720    1           4 FCG BIT(12) UNAL,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:36   
              2721    1           4 MID BIT(6) UNAL,
              2722    1           4 MON BIT(1) UNAL,
              2723    1           4 ERR# UBIN (14) UNAL,
              2724    1           4 SEV UBIN (3) UNAL,
              2725    1        3 ERR_DCB# UBIN WORD /*(0) /**/,
              2726    1        3 CHARPOS UBIN WORD /*(0) /**/,
              2727    1        3 HELP_CODE# UNAL,
              2728    1           4 LEN UBIN(9) UNAL /*(3) /**/,
              2729    1           4 TEXT CHAR(34) UNAL /*(' ') /**/,
              2730    1           4 PNAME,
              2731    1              5 LEN UBIN(9) UNAL /*(0) /**/,
              2732    1              5 TEXT CHAR(31) UNAL /*(' ') /**/,
              2733    1           4 PACCT CHAR(8) /*(' ') /**/,
              2734    1           4 PPASS CHAR(8) /*(' ') /**/,
              2735    1           4 PPSN CHAR(6) /*(' ') /**/,
              2736    1        3 PROCPSN_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2737    1        3 SPARE3_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2738    1        3 SPARE2_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2739    1        3 SPARE1_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2740    1        3 FPT_VERSION UBIN WORD /*(123457) /**/,
              2741    1        3 RESERVED (0:9) UBIN WORD /*(0*10) /**/ ,
              2743                /* X$HELP parameter block */
              2744    1         2 DUMMY UBIN DALIGNED;
              2745                /* GOOD PLACE TO PUT THE SEMI-COLON */
              2746        %LSET STR = 'STATIC SYMDEF        ';
              2747        %IF '0'B;
              2749        %ELSE;
              2750    1        DCL S_D$ PTR CONSTANT SYMDEF INIT( ADDR(S_D) );
              2751        %ENDIF;
       18     2753        %S_D_PTRS(STCLASS="CONSTANT SYMDEF");
              2754             %LSET STR = 'CONSTANT SYMDEF        ';
              2755             %IF '1'B;
              2756                  %LSET INIT = INIT;
              2757                  %LSET INIT_END =  ;
              2758               %ELSE;
              2761               %ENDIF;
              2762    1     DCL S_D_SEG$ PTR CONSTANT SYMDEF INIT (ADDR(S_D))   ;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:37   
              2763    1     DCL S_D_ACCESS$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.ACCESS))   ;
              2764    1     DCL S_D_ASTACKOFF$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.ASTACKOFF))   ;
              2765    1     DCL S_D_ANLZ$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.ANLZ))   ;
              2766    1     DCL S_D_BREAK$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.BREAK))   ;
              2767    1     DCL S_D_DO_SCAN$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.DO_SCAN))   ;
              2768    1     DCL S_D_ERROR$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.ERROR))   ;
              2769    1     DCL S_D_FAULTCMD$$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.FAULTCMD$))   ;
              2770    1     DCL S_D_FAULTINS$$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.FAULTINS$))   ;
              2771    1     DCL S_D_GOIC$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.GOIC))   ;
              2772    1     DCL S_D_GO_MODE$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.GO_MODE))   ;
              2773    1     DCL S_D_IXFIX$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.IXFIX))   ;
              2774    1     DCL S_D_IPRFLT$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.IPRFLT))   ;
              2775    1     DCL S_D_REM_ACCESS$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.REM_ACCESS))   ;
              2776    1     DCL S_D_REM_DO_SCAN$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.REM_DO_SCAN))   ;
              2777    1     DCL S_D_REM_DISKBOOT$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.REM_DISKBOOT))   ;
              2778    1     DCL S_D_RETURNN$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.RETURNN))   ;
              2779    1     DCL S_D_SAD$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.SAD))   ;
              2780    1     DCL S_D_SAVEIC$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.SAVEIC))   ;
              2781    1     DCL S_D_TCB$$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.TCB$))   ;
              2782    1     DCL S_D_UREG$$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.UREG$))   ;
              2783    1     DCL S_D_USS$$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.USS$))   ;
              2784    1     DCL S_D_HOST_MESSAGE$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.HOST_MESSAGE_BUF.C))   ;
              2785    1     DCL S_D_L6_MESSAGE$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.L6_MESSAGE_BUF))   ;
              2786    1     DCL S_D_HW_RES_MEM$ PTR CONSTANT SYMDEF INIT(ADDR(S_D.HW_RES_MEM))   ;
              2787    1     DCL S_D_HW_WSQ0PT$ PTR CONSTANT SYMDEF INIT(ADDR(S_D.HW_WSQ0PT))   ;
              2788    1     DCL S_D_HW_PTB_UNITS$ PTR CONSTANT SYMDEF INIT(ADDR(S_D.HW_PTB_UNITS))   ;
       19     2790        %INCLUDE XU_MACRO_C;
       20     5896        %INCLUDE DD_KNODES_D;
       21     6112        %NODE_DEFS(STCLASS="STATIC SYMDEF", FCG=NX_);
              6113        %LSET STR = 'STATIC SYMDEF        ';
              6114        %IF '0'B;
              6124        %ELSE;
              6125             %P$NODE(NAME=DD_CNR4,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6126        /*F*  NAME:     P$NODE
              6127              FUNCTION: a structure used to describe syntax nodes, as built by
              6128                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6129                  used to examine all of the attributes of nodes of several
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:38   
              6130                  types:  koncat, list, alternative, and reducing alternative.
              6131                  It may also be used to examine a few of the attributes of
              6132                  symbol and delimited-string nodes, as indicated.
              6133        */
              6134        %LSET STR='STATIC SYMDEF        ';
              6135        %IF '1'B;
              6136        %LSET INIT=INIT;
              6137        %LSET ENDINIT=;
              6138        %ELSE;
              6141        %ENDIF;
              6142        %IF '1'B;
              6143    1   DCL 1 DD_CNR4 STATIC SYMDEF ALIGNED,
              6144        %ELSE;
              6146        %ENDIF;
              6147    1         2 TYPE UBIN(3) UNAL INIT(4),
              6148        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6149                  file for the permissible values in this field (%TYPE_whatever#).
              6150        */
              6151    1         2 P_F BIT(1) UNAL INIT('0'B),
              6152        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6153                  any attempt to match this node.  This flag is set if the
              6154                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6155                  of this node.
              6156        */
              6157    1         2 S_F BIT(1) UNAL INIT('0'B),
              6158        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6159                  any successful attempts to match this node;  set if the user
              6160                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6161                  node.
              6162        */
              6163    1         2 F_F BIT(1) UNAL INIT('0'B),
              6164        /*K* F_F - specifies that the user wants to be notified of any
              6165                  failed attempts to match this node;  set if the user specified
              6166                  the "(FAIL)" option in the PARTRGE definition of this node.
              6167        */
              6168    1         2 O_F BIT(1) UNAL INIT('0'B),
              6169        /*K* O_F - specifies that this node is to result in the creation of
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:39   
              6170                  a block in the X$PARSE output tree.  The setting of this
              6171                  flag is controlled by several PARTRGE attributes:  the
              6172                  "OUT" option, the "NOUT" option, the "code" option, and the
              6173                  node's basic type.  If the user specifies "OUT", this flag
              6174                  will be set;  if the user specifies "NOUT", this flag will
              6175                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6176                  this flag will be set if the "code" option was specified or
              6177                  if the node is of the "delimited string" or "symbol" varieties.
              6178        */
              6179    1         2 OPT BIT(1) UNAL INIT('0'B),
              6180        /*K* OPT - set if this node is "optional".  This flag is set if the
              6181                  PARTRGE definition of this node was enclosed in a set
              6182                  of [square-brackets].
              6183        */
              6184    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6185        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6186                  once).  This flag is set of the PARTRGE definition of this node
              6187                  was enclosed in a set of *asterisks*.
              6188        */
              6189    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6190        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6191                  after this node.  This flag is set unless the PARTRGE
              6192                  definition of this node included a trailing hyphen-.
              6193        */
              6194    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6195        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6196                  incorporating all of the text (and blanks and/or comments)
              6197                  accepted by this node, with no editing or case conversion.
              6198                  This flag is set if the PARTRGE definition of this node
              6199                  included the "(RTEXT)" option.
              6200        */
              6201    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6202        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6203        */
              6204    1         2 CODE UBIN (16) UNAL INIT(0),
              6205        /*K* CODE - specifies the "code number" for this parse node.  This
              6206                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:40   
              6207                  any parse block built by X$PARSE which corresponds to this node.
              6208        */
              6209    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6210        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6211                  this parse node.
              6212        */
              6213        %IF '1'B;
              6214    1         ;
              6215        %ELSE;
              6217        %ENDIF;
              6219             %P$NODE(NAME=DD_L@DIV,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6220        /*F*  NAME:     P$NODE
              6221              FUNCTION: a structure used to describe syntax nodes, as built by
              6222                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6223                  used to examine all of the attributes of nodes of several
              6224                  types:  koncat, list, alternative, and reducing alternative.
              6225                  It may also be used to examine a few of the attributes of
              6226                  symbol and delimited-string nodes, as indicated.
              6227        */
              6228        %LSET STR='STATIC SYMDEF        ';
              6229        %IF '1'B;
              6230        %LSET INIT=INIT;
              6231        %LSET ENDINIT=;
              6232        %ELSE;
              6235        %ENDIF;
              6236        %IF '1'B;
              6237    1   DCL 1 DD_L@DIV STATIC SYMDEF ALIGNED,
              6238        %ELSE;
              6240        %ENDIF;
              6241    1         2 TYPE UBIN(3) UNAL INIT(4),
              6242        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6243                  file for the permissible values in this field (%TYPE_whatever#).
              6244        */
              6245    1         2 P_F BIT(1) UNAL INIT('0'B),
              6246        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6247                  any attempt to match this node.  This flag is set if the
              6248                  user supplied the "(PRE)" option in jhir PARTRGE definition
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:41   
              6249                  of this node.
              6250        */
              6251    1         2 S_F BIT(1) UNAL INIT('0'B),
              6252        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6253                  any successful attempts to match this node;  set if the user
              6254                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6255                  node.
              6256        */
              6257    1         2 F_F BIT(1) UNAL INIT('0'B),
              6258        /*K* F_F - specifies that the user wants to be notified of any
              6259                  failed attempts to match this node;  set if the user specified
              6260                  the "(FAIL)" option in the PARTRGE definition of this node.
              6261        */
              6262    1         2 O_F BIT(1) UNAL INIT('0'B),
              6263        /*K* O_F - specifies that this node is to result in the creation of
              6264                  a block in the X$PARSE output tree.  The setting of this
              6265                  flag is controlled by several PARTRGE attributes:  the
              6266                  "OUT" option, the "NOUT" option, the "code" option, and the
              6267                  node's basic type.  If the user specifies "OUT", this flag
              6268                  will be set;  if the user specifies "NOUT", this flag will
              6269                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6270                  this flag will be set if the "code" option was specified or
              6271                  if the node is of the "delimited string" or "symbol" varieties.
              6272        */
              6273    1         2 OPT BIT(1) UNAL INIT('0'B),
              6274        /*K* OPT - set if this node is "optional".  This flag is set if the
              6275                  PARTRGE definition of this node was enclosed in a set
              6276                  of [square-brackets].
              6277        */
              6278    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6279        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6280                  once).  This flag is set of the PARTRGE definition of this node
              6281                  was enclosed in a set of *asterisks*.
              6282        */
              6283    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6284        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6285                  after this node.  This flag is set unless the PARTRGE
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:42   
              6286                  definition of this node included a trailing hyphen-.
              6287        */
              6288    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6289        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6290                  incorporating all of the text (and blanks and/or comments)
              6291                  accepted by this node, with no editing or case conversion.
              6292                  This flag is set if the PARTRGE definition of this node
              6293                  included the "(RTEXT)" option.
              6294        */
              6295    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6296        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6297        */
              6298    1         2 CODE UBIN (16) UNAL INIT(0),
              6299        /*K* CODE - specifies the "code number" for this parse node.  This
              6300                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6301                  any parse block built by X$PARSE which corresponds to this node.
              6302        */
              6303    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6304        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6305                  this parse node.
              6306        */
              6307        %IF '1'B;
              6308    1         ;
              6309        %ELSE;
              6311        %ENDIF;
              6313             %P$NODE(NAME=DD_L@LSHIFT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6314        /*F*  NAME:     P$NODE
              6315              FUNCTION: a structure used to describe syntax nodes, as built by
              6316                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6317                  used to examine all of the attributes of nodes of several
              6318                  types:  koncat, list, alternative, and reducing alternative.
              6319                  It may also be used to examine a few of the attributes of
              6320                  symbol and delimited-string nodes, as indicated.
              6321        */
              6322        %LSET STR='STATIC SYMDEF        ';
              6323        %IF '1'B;
              6324        %LSET INIT=INIT;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:43   
              6325        %LSET ENDINIT=;
              6326        %ELSE;
              6329        %ENDIF;
              6330        %IF '1'B;
              6331    1   DCL 1 DD_L@LSHIFT STATIC SYMDEF ALIGNED,
              6332        %ELSE;
              6334        %ENDIF;
              6335    1         2 TYPE UBIN(3) UNAL INIT(4),
              6336        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6337                  file for the permissible values in this field (%TYPE_whatever#).
              6338        */
              6339    1         2 P_F BIT(1) UNAL INIT('0'B),
              6340        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6341                  any attempt to match this node.  This flag is set if the
              6342                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6343                  of this node.
              6344        */
              6345    1         2 S_F BIT(1) UNAL INIT('0'B),
              6346        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6347                  any successful attempts to match this node;  set if the user
              6348                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6349                  node.
              6350        */
              6351    1         2 F_F BIT(1) UNAL INIT('0'B),
              6352        /*K* F_F - specifies that the user wants to be notified of any
              6353                  failed attempts to match this node;  set if the user specified
              6354                  the "(FAIL)" option in the PARTRGE definition of this node.
              6355        */
              6356    1         2 O_F BIT(1) UNAL INIT('0'B),
              6357        /*K* O_F - specifies that this node is to result in the creation of
              6358                  a block in the X$PARSE output tree.  The setting of this
              6359                  flag is controlled by several PARTRGE attributes:  the
              6360                  "OUT" option, the "NOUT" option, the "code" option, and the
              6361                  node's basic type.  If the user specifies "OUT", this flag
              6362                  will be set;  if the user specifies "NOUT", this flag will
              6363                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6364                  this flag will be set if the "code" option was specified or
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:44   
              6365                  if the node is of the "delimited string" or "symbol" varieties.
              6366        */
              6367    1         2 OPT BIT(1) UNAL INIT('0'B),
              6368        /*K* OPT - set if this node is "optional".  This flag is set if the
              6369                  PARTRGE definition of this node was enclosed in a set
              6370                  of [square-brackets].
              6371        */
              6372    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6373        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6374                  once).  This flag is set of the PARTRGE definition of this node
              6375                  was enclosed in a set of *asterisks*.
              6376        */
              6377    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6378        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6379                  after this node.  This flag is set unless the PARTRGE
              6380                  definition of this node included a trailing hyphen-.
              6381        */
              6382    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6383        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6384                  incorporating all of the text (and blanks and/or comments)
              6385                  accepted by this node, with no editing or case conversion.
              6386                  This flag is set if the PARTRGE definition of this node
              6387                  included the "(RTEXT)" option.
              6388        */
              6389    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6390        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6391        */
              6392    1         2 CODE UBIN (16) UNAL INIT(0),
              6393        /*K* CODE - specifies the "code number" for this parse node.  This
              6394                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6395                  any parse block built by X$PARSE which corresponds to this node.
              6396        */
              6397    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6398        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6399                  this parse node.
              6400        */
              6401        %IF '1'B;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:45   
              6402    1         ;
              6403        %ELSE;
              6405        %ENDIF;
              6407             %P$NODE(NAME=DD_L@MINUS,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6408        /*F*  NAME:     P$NODE
              6409              FUNCTION: a structure used to describe syntax nodes, as built by
              6410                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6411                  used to examine all of the attributes of nodes of several
              6412                  types:  koncat, list, alternative, and reducing alternative.
              6413                  It may also be used to examine a few of the attributes of
              6414                  symbol and delimited-string nodes, as indicated.
              6415        */
              6416        %LSET STR='STATIC SYMDEF        ';
              6417        %IF '1'B;
              6418        %LSET INIT=INIT;
              6419        %LSET ENDINIT=;
              6420        %ELSE;
              6423        %ENDIF;
              6424        %IF '1'B;
              6425    1   DCL 1 DD_L@MINUS STATIC SYMDEF ALIGNED,
              6426        %ELSE;
              6428        %ENDIF;
              6429    1         2 TYPE UBIN(3) UNAL INIT(4),
              6430        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6431                  file for the permissible values in this field (%TYPE_whatever#).
              6432        */
              6433    1         2 P_F BIT(1) UNAL INIT('0'B),
              6434        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6435                  any attempt to match this node.  This flag is set if the
              6436                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6437                  of this node.
              6438        */
              6439    1         2 S_F BIT(1) UNAL INIT('0'B),
              6440        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6441                  any successful attempts to match this node;  set if the user
              6442                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6443                  node.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:46   
              6444        */
              6445    1         2 F_F BIT(1) UNAL INIT('0'B),
              6446        /*K* F_F - specifies that the user wants to be notified of any
              6447                  failed attempts to match this node;  set if the user specified
              6448                  the "(FAIL)" option in the PARTRGE definition of this node.
              6449        */
              6450    1         2 O_F BIT(1) UNAL INIT('0'B),
              6451        /*K* O_F - specifies that this node is to result in the creation of
              6452                  a block in the X$PARSE output tree.  The setting of this
              6453                  flag is controlled by several PARTRGE attributes:  the
              6454                  "OUT" option, the "NOUT" option, the "code" option, and the
              6455                  node's basic type.  If the user specifies "OUT", this flag
              6456                  will be set;  if the user specifies "NOUT", this flag will
              6457                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6458                  this flag will be set if the "code" option was specified or
              6459                  if the node is of the "delimited string" or "symbol" varieties.
              6460        */
              6461    1         2 OPT BIT(1) UNAL INIT('0'B),
              6462        /*K* OPT - set if this node is "optional".  This flag is set if the
              6463                  PARTRGE definition of this node was enclosed in a set
              6464                  of [square-brackets].
              6465        */
              6466    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6467        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6468                  once).  This flag is set of the PARTRGE definition of this node
              6469                  was enclosed in a set of *asterisks*.
              6470        */
              6471    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6472        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6473                  after this node.  This flag is set unless the PARTRGE
              6474                  definition of this node included a trailing hyphen-.
              6475        */
              6476    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6477        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6478                  incorporating all of the text (and blanks and/or comments)
              6479                  accepted by this node, with no editing or case conversion.
              6480                  This flag is set if the PARTRGE definition of this node
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:47   
              6481                  included the "(RTEXT)" option.
              6482        */
              6483    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6484        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6485        */
              6486    1         2 CODE UBIN (16) UNAL INIT(0),
              6487        /*K* CODE - specifies the "code number" for this parse node.  This
              6488                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6489                  any parse block built by X$PARSE which corresponds to this node.
              6490        */
              6491    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6492        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6493                  this parse node.
              6494        */
              6495        %IF '1'B;
              6496    1         ;
              6497        %ELSE;
              6499        %ENDIF;
              6501             %P$NODE(NAME=DD_L@MULT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6502        /*F*  NAME:     P$NODE
              6503              FUNCTION: a structure used to describe syntax nodes, as built by
              6504                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6505                  used to examine all of the attributes of nodes of several
              6506                  types:  koncat, list, alternative, and reducing alternative.
              6507                  It may also be used to examine a few of the attributes of
              6508                  symbol and delimited-string nodes, as indicated.
              6509        */
              6510        %LSET STR='STATIC SYMDEF        ';
              6511        %IF '1'B;
              6512        %LSET INIT=INIT;
              6513        %LSET ENDINIT=;
              6514        %ELSE;
              6517        %ENDIF;
              6518        %IF '1'B;
              6519    1   DCL 1 DD_L@MULT STATIC SYMDEF ALIGNED,
              6520        %ELSE;
              6522        %ENDIF;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:48   
              6523    1         2 TYPE UBIN(3) UNAL INIT(4),
              6524        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6525                  file for the permissible values in this field (%TYPE_whatever#).
              6526        */
              6527    1         2 P_F BIT(1) UNAL INIT('0'B),
              6528        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6529                  any attempt to match this node.  This flag is set if the
              6530                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6531                  of this node.
              6532        */
              6533    1         2 S_F BIT(1) UNAL INIT('0'B),
              6534        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6535                  any successful attempts to match this node;  set if the user
              6536                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6537                  node.
              6538        */
              6539    1         2 F_F BIT(1) UNAL INIT('0'B),
              6540        /*K* F_F - specifies that the user wants to be notified of any
              6541                  failed attempts to match this node;  set if the user specified
              6542                  the "(FAIL)" option in the PARTRGE definition of this node.
              6543        */
              6544    1         2 O_F BIT(1) UNAL INIT('0'B),
              6545        /*K* O_F - specifies that this node is to result in the creation of
              6546                  a block in the X$PARSE output tree.  The setting of this
              6547                  flag is controlled by several PARTRGE attributes:  the
              6548                  "OUT" option, the "NOUT" option, the "code" option, and the
              6549                  node's basic type.  If the user specifies "OUT", this flag
              6550                  will be set;  if the user specifies "NOUT", this flag will
              6551                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6552                  this flag will be set if the "code" option was specified or
              6553                  if the node is of the "delimited string" or "symbol" varieties.
              6554        */
              6555    1         2 OPT BIT(1) UNAL INIT('0'B),
              6556        /*K* OPT - set if this node is "optional".  This flag is set if the
              6557                  PARTRGE definition of this node was enclosed in a set
              6558                  of [square-brackets].
              6559        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:49   
              6560    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6561        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6562                  once).  This flag is set of the PARTRGE definition of this node
              6563                  was enclosed in a set of *asterisks*.
              6564        */
              6565    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6566        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6567                  after this node.  This flag is set unless the PARTRGE
              6568                  definition of this node included a trailing hyphen-.
              6569        */
              6570    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6571        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6572                  incorporating all of the text (and blanks and/or comments)
              6573                  accepted by this node, with no editing or case conversion.
              6574                  This flag is set if the PARTRGE definition of this node
              6575                  included the "(RTEXT)" option.
              6576        */
              6577    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6578        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6579        */
              6580    1         2 CODE UBIN (16) UNAL INIT(0),
              6581        /*K* CODE - specifies the "code number" for this parse node.  This
              6582                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6583                  any parse block built by X$PARSE which corresponds to this node.
              6584        */
              6585    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6586        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6587                  this parse node.
              6588        */
              6589        %IF '1'B;
              6590    1         ;
              6591        %ELSE;
              6593        %ENDIF;
              6595             %P$NODE(NAME=DD_L@PLUS,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6596        /*F*  NAME:     P$NODE
              6597              FUNCTION: a structure used to describe syntax nodes, as built by
              6598                  PARTRGE and interrogated by X$PARSE.  This structure may be
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:50   
              6599                  used to examine all of the attributes of nodes of several
              6600                  types:  koncat, list, alternative, and reducing alternative.
              6601                  It may also be used to examine a few of the attributes of
              6602                  symbol and delimited-string nodes, as indicated.
              6603        */
              6604        %LSET STR='STATIC SYMDEF        ';
              6605        %IF '1'B;
              6606        %LSET INIT=INIT;
              6607        %LSET ENDINIT=;
              6608        %ELSE;
              6611        %ENDIF;
              6612        %IF '1'B;
              6613    1   DCL 1 DD_L@PLUS STATIC SYMDEF ALIGNED,
              6614        %ELSE;
              6616        %ENDIF;
              6617    1         2 TYPE UBIN(3) UNAL INIT(4),
              6618        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6619                  file for the permissible values in this field (%TYPE_whatever#).
              6620        */
              6621    1         2 P_F BIT(1) UNAL INIT('0'B),
              6622        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6623                  any attempt to match this node.  This flag is set if the
              6624                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6625                  of this node.
              6626        */
              6627    1         2 S_F BIT(1) UNAL INIT('0'B),
              6628        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6629                  any successful attempts to match this node;  set if the user
              6630                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6631                  node.
              6632        */
              6633    1         2 F_F BIT(1) UNAL INIT('0'B),
              6634        /*K* F_F - specifies that the user wants to be notified of any
              6635                  failed attempts to match this node;  set if the user specified
              6636                  the "(FAIL)" option in the PARTRGE definition of this node.
              6637        */
              6638    1         2 O_F BIT(1) UNAL INIT('0'B),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:51   
              6639        /*K* O_F - specifies that this node is to result in the creation of
              6640                  a block in the X$PARSE output tree.  The setting of this
              6641                  flag is controlled by several PARTRGE attributes:  the
              6642                  "OUT" option, the "NOUT" option, the "code" option, and the
              6643                  node's basic type.  If the user specifies "OUT", this flag
              6644                  will be set;  if the user specifies "NOUT", this flag will
              6645                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6646                  this flag will be set if the "code" option was specified or
              6647                  if the node is of the "delimited string" or "symbol" varieties.
              6648        */
              6649    1         2 OPT BIT(1) UNAL INIT('0'B),
              6650        /*K* OPT - set if this node is "optional".  This flag is set if the
              6651                  PARTRGE definition of this node was enclosed in a set
              6652                  of [square-brackets].
              6653        */
              6654    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6655        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6656                  once).  This flag is set of the PARTRGE definition of this node
              6657                  was enclosed in a set of *asterisks*.
              6658        */
              6659    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6660        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6661                  after this node.  This flag is set unless the PARTRGE
              6662                  definition of this node included a trailing hyphen-.
              6663        */
              6664    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6665        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6666                  incorporating all of the text (and blanks and/or comments)
              6667                  accepted by this node, with no editing or case conversion.
              6668                  This flag is set if the PARTRGE definition of this node
              6669                  included the "(RTEXT)" option.
              6670        */
              6671    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6672        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6673        */
              6674    1         2 CODE UBIN (16) UNAL INIT(0),
              6675        /*K* CODE - specifies the "code number" for this parse node.  This
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:52   
              6676                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6677                  any parse block built by X$PARSE which corresponds to this node.
              6678        */
              6679    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6680        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6681                  this parse node.
              6682        */
              6683        %IF '1'B;
              6684    1         ;
              6685        %ELSE;
              6687        %ENDIF;
              6689             %P$NODE(NAME=DD_L@RSHIFT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6690        /*F*  NAME:     P$NODE
              6691              FUNCTION: a structure used to describe syntax nodes, as built by
              6692                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6693                  used to examine all of the attributes of nodes of several
              6694                  types:  koncat, list, alternative, and reducing alternative.
              6695                  It may also be used to examine a few of the attributes of
              6696                  symbol and delimited-string nodes, as indicated.
              6697        */
              6698        %LSET STR='STATIC SYMDEF        ';
              6699        %IF '1'B;
              6700        %LSET INIT=INIT;
              6701        %LSET ENDINIT=;
              6702        %ELSE;
              6705        %ENDIF;
              6706        %IF '1'B;
              6707    1   DCL 1 DD_L@RSHIFT STATIC SYMDEF ALIGNED,
              6708        %ELSE;
              6710        %ENDIF;
              6711    1         2 TYPE UBIN(3) UNAL INIT(4),
              6712        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6713                  file for the permissible values in this field (%TYPE_whatever#).
              6714        */
              6715    1         2 P_F BIT(1) UNAL INIT('0'B),
              6716        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6717                  any attempt to match this node.  This flag is set if the
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:53   
              6718                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6719                  of this node.
              6720        */
              6721    1         2 S_F BIT(1) UNAL INIT('0'B),
              6722        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6723                  any successful attempts to match this node;  set if the user
              6724                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6725                  node.
              6726        */
              6727    1         2 F_F BIT(1) UNAL INIT('0'B),
              6728        /*K* F_F - specifies that the user wants to be notified of any
              6729                  failed attempts to match this node;  set if the user specified
              6730                  the "(FAIL)" option in the PARTRGE definition of this node.
              6731        */
              6732    1         2 O_F BIT(1) UNAL INIT('0'B),
              6733        /*K* O_F - specifies that this node is to result in the creation of
              6734                  a block in the X$PARSE output tree.  The setting of this
              6735                  flag is controlled by several PARTRGE attributes:  the
              6736                  "OUT" option, the "NOUT" option, the "code" option, and the
              6737                  node's basic type.  If the user specifies "OUT", this flag
              6738                  will be set;  if the user specifies "NOUT", this flag will
              6739                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6740                  this flag will be set if the "code" option was specified or
              6741                  if the node is of the "delimited string" or "symbol" varieties.
              6742        */
              6743    1         2 OPT BIT(1) UNAL INIT('0'B),
              6744        /*K* OPT - set if this node is "optional".  This flag is set if the
              6745                  PARTRGE definition of this node was enclosed in a set
              6746                  of [square-brackets].
              6747        */
              6748    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6749        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6750                  once).  This flag is set of the PARTRGE definition of this node
              6751                  was enclosed in a set of *asterisks*.
              6752        */
              6753    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6754        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:54   
              6755                  after this node.  This flag is set unless the PARTRGE
              6756                  definition of this node included a trailing hyphen-.
              6757        */
              6758    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6759        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6760                  incorporating all of the text (and blanks and/or comments)
              6761                  accepted by this node, with no editing or case conversion.
              6762                  This flag is set if the PARTRGE definition of this node
              6763                  included the "(RTEXT)" option.
              6764        */
              6765    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6766        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6767        */
              6768    1         2 CODE UBIN (16) UNAL INIT(0),
              6769        /*K* CODE - specifies the "code number" for this parse node.  This
              6770                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6771                  any parse block built by X$PARSE which corresponds to this node.
              6772        */
              6773    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6774        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6775                  this parse node.
              6776        */
              6777        %IF '1'B;
              6778    1         ;
              6779        %ELSE;
              6781        %ENDIF;
              6783             %P$NODE(NAME=DD_L@OR,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6784        /*F*  NAME:     P$NODE
              6785              FUNCTION: a structure used to describe syntax nodes, as built by
              6786                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6787                  used to examine all of the attributes of nodes of several
              6788                  types:  koncat, list, alternative, and reducing alternative.
              6789                  It may also be used to examine a few of the attributes of
              6790                  symbol and delimited-string nodes, as indicated.
              6791        */
              6792        %LSET STR='STATIC SYMDEF        ';
              6793        %IF '1'B;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:55   
              6794        %LSET INIT=INIT;
              6795        %LSET ENDINIT=;
              6796        %ELSE;
              6799        %ENDIF;
              6800        %IF '1'B;
              6801    1   DCL 1 DD_L@OR STATIC SYMDEF ALIGNED,
              6802        %ELSE;
              6804        %ENDIF;
              6805    1         2 TYPE UBIN(3) UNAL INIT(4),
              6806        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6807                  file for the permissible values in this field (%TYPE_whatever#).
              6808        */
              6809    1         2 P_F BIT(1) UNAL INIT('0'B),
              6810        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6811                  any attempt to match this node.  This flag is set if the
              6812                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6813                  of this node.
              6814        */
              6815    1         2 S_F BIT(1) UNAL INIT('0'B),
              6816        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6817                  any successful attempts to match this node;  set if the user
              6818                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6819                  node.
              6820        */
              6821    1         2 F_F BIT(1) UNAL INIT('0'B),
              6822        /*K* F_F - specifies that the user wants to be notified of any
              6823                  failed attempts to match this node;  set if the user specified
              6824                  the "(FAIL)" option in the PARTRGE definition of this node.
              6825        */
              6826    1         2 O_F BIT(1) UNAL INIT('0'B),
              6827        /*K* O_F - specifies that this node is to result in the creation of
              6828                  a block in the X$PARSE output tree.  The setting of this
              6829                  flag is controlled by several PARTRGE attributes:  the
              6830                  "OUT" option, the "NOUT" option, the "code" option, and the
              6831                  node's basic type.  If the user specifies "OUT", this flag
              6832                  will be set;  if the user specifies "NOUT", this flag will
              6833                  not be set;  if the user specifies neither "OUT" nor "NOUT",
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:56   
              6834                  this flag will be set if the "code" option was specified or
              6835                  if the node is of the "delimited string" or "symbol" varieties.
              6836        */
              6837    1         2 OPT BIT(1) UNAL INIT('0'B),
              6838        /*K* OPT - set if this node is "optional".  This flag is set if the
              6839                  PARTRGE definition of this node was enclosed in a set
              6840                  of [square-brackets].
              6841        */
              6842    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6843        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6844                  once).  This flag is set of the PARTRGE definition of this node
              6845                  was enclosed in a set of *asterisks*.
              6846        */
              6847    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6848        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6849                  after this node.  This flag is set unless the PARTRGE
              6850                  definition of this node included a trailing hyphen-.
              6851        */
              6852    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6853        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6854                  incorporating all of the text (and blanks and/or comments)
              6855                  accepted by this node, with no editing or case conversion.
              6856                  This flag is set if the PARTRGE definition of this node
              6857                  included the "(RTEXT)" option.
              6858        */
              6859    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6860        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6861        */
              6862    1         2 CODE UBIN (16) UNAL INIT(0),
              6863        /*K* CODE - specifies the "code number" for this parse node.  This
              6864                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6865                  any parse block built by X$PARSE which corresponds to this node.
              6866        */
              6867    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6868        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6869                  this parse node.
              6870        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:57   
              6871        %IF '1'B;
              6872    1         ;
              6873        %ELSE;
              6875        %ENDIF;
              6877             %P$NODE(NAME=DD_L@AND,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6878        /*F*  NAME:     P$NODE
              6879              FUNCTION: a structure used to describe syntax nodes, as built by
              6880                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6881                  used to examine all of the attributes of nodes of several
              6882                  types:  koncat, list, alternative, and reducing alternative.
              6883                  It may also be used to examine a few of the attributes of
              6884                  symbol and delimited-string nodes, as indicated.
              6885        */
              6886        %LSET STR='STATIC SYMDEF        ';
              6887        %IF '1'B;
              6888        %LSET INIT=INIT;
              6889        %LSET ENDINIT=;
              6890        %ELSE;
              6893        %ENDIF;
              6894        %IF '1'B;
              6895    1   DCL 1 DD_L@AND STATIC SYMDEF ALIGNED,
              6896        %ELSE;
              6898        %ENDIF;
              6899    1         2 TYPE UBIN(3) UNAL INIT(4),
              6900        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6901                  file for the permissible values in this field (%TYPE_whatever#).
              6902        */
              6903    1         2 P_F BIT(1) UNAL INIT('0'B),
              6904        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6905                  any attempt to match this node.  This flag is set if the
              6906                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6907                  of this node.
              6908        */
              6909    1         2 S_F BIT(1) UNAL INIT('0'B),
              6910        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6911                  any successful attempts to match this node;  set if the user
              6912                  supplied the "(SUCC)" option in the PARTRGE definition of this
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:58   
              6913                  node.
              6914        */
              6915    1         2 F_F BIT(1) UNAL INIT('0'B),
              6916        /*K* F_F - specifies that the user wants to be notified of any
              6917                  failed attempts to match this node;  set if the user specified
              6918                  the "(FAIL)" option in the PARTRGE definition of this node.
              6919        */
              6920    1         2 O_F BIT(1) UNAL INIT('0'B),
              6921        /*K* O_F - specifies that this node is to result in the creation of
              6922                  a block in the X$PARSE output tree.  The setting of this
              6923                  flag is controlled by several PARTRGE attributes:  the
              6924                  "OUT" option, the "NOUT" option, the "code" option, and the
              6925                  node's basic type.  If the user specifies "OUT", this flag
              6926                  will be set;  if the user specifies "NOUT", this flag will
              6927                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6928                  this flag will be set if the "code" option was specified or
              6929                  if the node is of the "delimited string" or "symbol" varieties.
              6930        */
              6931    1         2 OPT BIT(1) UNAL INIT('0'B),
              6932        /*K* OPT - set if this node is "optional".  This flag is set if the
              6933                  PARTRGE definition of this node was enclosed in a set
              6934                  of [square-brackets].
              6935        */
              6936    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6937        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6938                  once).  This flag is set of the PARTRGE definition of this node
              6939                  was enclosed in a set of *asterisks*.
              6940        */
              6941    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6942        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6943                  after this node.  This flag is set unless the PARTRGE
              6944                  definition of this node included a trailing hyphen-.
              6945        */
              6946    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6947        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6948                  incorporating all of the text (and blanks and/or comments)
              6949                  accepted by this node, with no editing or case conversion.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:59   
              6950                  This flag is set if the PARTRGE definition of this node
              6951                  included the "(RTEXT)" option.
              6952        */
              6953    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6954        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6955        */
              6956    1         2 CODE UBIN (16) UNAL INIT(0),
              6957        /*K* CODE - specifies the "code number" for this parse node.  This
              6958                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6959                  any parse block built by X$PARSE which corresponds to this node.
              6960        */
              6961    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6962        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6963                  this parse node.
              6964        */
              6965        %IF '1'B;
              6966    1         ;
              6967        %ELSE;
              6969        %ENDIF;
              6971             %P$NODE(NAME=DD_SYMBOLS,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6972        /*F*  NAME:     P$NODE
              6973              FUNCTION: a structure used to describe syntax nodes, as built by
              6974                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6975                  used to examine all of the attributes of nodes of several
              6976                  types:  koncat, list, alternative, and reducing alternative.
              6977                  It may also be used to examine a few of the attributes of
              6978                  symbol and delimited-string nodes, as indicated.
              6979        */
              6980        %LSET STR='STATIC SYMDEF        ';
              6981        %IF '1'B;
              6982        %LSET INIT=INIT;
              6983        %LSET ENDINIT=;
              6984        %ELSE;
              6987        %ENDIF;
              6988        %IF '1'B;
              6989    1   DCL 1 DD_SYMBOLS STATIC SYMDEF ALIGNED,
              6990        %ELSE;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:60   
              6992        %ENDIF;
              6993    1         2 TYPE UBIN(3) UNAL INIT(4),
              6994        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6995                  file for the permissible values in this field (%TYPE_whatever#).
              6996        */
              6997    1         2 P_F BIT(1) UNAL INIT('0'B),
              6998        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6999                  any attempt to match this node.  This flag is set if the
              7000                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7001                  of this node.
              7002        */
              7003    1         2 S_F BIT(1) UNAL INIT('0'B),
              7004        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7005                  any successful attempts to match this node;  set if the user
              7006                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7007                  node.
              7008        */
              7009    1         2 F_F BIT(1) UNAL INIT('0'B),
              7010        /*K* F_F - specifies that the user wants to be notified of any
              7011                  failed attempts to match this node;  set if the user specified
              7012                  the "(FAIL)" option in the PARTRGE definition of this node.
              7013        */
              7014    1         2 O_F BIT(1) UNAL INIT('0'B),
              7015        /*K* O_F - specifies that this node is to result in the creation of
              7016                  a block in the X$PARSE output tree.  The setting of this
              7017                  flag is controlled by several PARTRGE attributes:  the
              7018                  "OUT" option, the "NOUT" option, the "code" option, and the
              7019                  node's basic type.  If the user specifies "OUT", this flag
              7020                  will be set;  if the user specifies "NOUT", this flag will
              7021                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7022                  this flag will be set if the "code" option was specified or
              7023                  if the node is of the "delimited string" or "symbol" varieties.
              7024        */
              7025    1         2 OPT BIT(1) UNAL INIT('0'B),
              7026        /*K* OPT - set if this node is "optional".  This flag is set if the
              7027                  PARTRGE definition of this node was enclosed in a set
              7028                  of [square-brackets].
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:61   
              7029        */
              7030    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7031        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7032                  once).  This flag is set of the PARTRGE definition of this node
              7033                  was enclosed in a set of *asterisks*.
              7034        */
              7035    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7036        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7037                  after this node.  This flag is set unless the PARTRGE
              7038                  definition of this node included a trailing hyphen-.
              7039        */
              7040    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7041        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7042                  incorporating all of the text (and blanks and/or comments)
              7043                  accepted by this node, with no editing or case conversion.
              7044                  This flag is set if the PARTRGE definition of this node
              7045                  included the "(RTEXT)" option.
              7046        */
              7047    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7048        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7049        */
              7050    1         2 CODE UBIN (16) UNAL INIT(0),
              7051        /*K* CODE - specifies the "code number" for this parse node.  This
              7052                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7053                  any parse block built by X$PARSE which corresponds to this node.
              7054        */
              7055    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              7056        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7057                  this parse node.
              7058        */
              7059        %IF '1'B;
              7060    1         ;
              7061        %ELSE;
              7063        %ENDIF;
              7065             %P$NODE(NAME=DD_SYMDEL,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              7066        /*F*  NAME:     P$NODE
              7067              FUNCTION: a structure used to describe syntax nodes, as built by
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:62   
              7068                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7069                  used to examine all of the attributes of nodes of several
              7070                  types:  koncat, list, alternative, and reducing alternative.
              7071                  It may also be used to examine a few of the attributes of
              7072                  symbol and delimited-string nodes, as indicated.
              7073        */
              7074        %LSET STR='STATIC SYMDEF        ';
              7075        %IF '1'B;
              7076        %LSET INIT=INIT;
              7077        %LSET ENDINIT=;
              7078        %ELSE;
              7081        %ENDIF;
              7082        %IF '1'B;
              7083    1   DCL 1 DD_SYMDEL STATIC SYMDEF ALIGNED,
              7084        %ELSE;
              7086        %ENDIF;
              7087    1         2 TYPE UBIN(3) UNAL INIT(4),
              7088        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7089                  file for the permissible values in this field (%TYPE_whatever#).
              7090        */
              7091    1         2 P_F BIT(1) UNAL INIT('0'B),
              7092        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7093                  any attempt to match this node.  This flag is set if the
              7094                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7095                  of this node.
              7096        */
              7097    1         2 S_F BIT(1) UNAL INIT('0'B),
              7098        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7099                  any successful attempts to match this node;  set if the user
              7100                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7101                  node.
              7102        */
              7103    1         2 F_F BIT(1) UNAL INIT('0'B),
              7104        /*K* F_F - specifies that the user wants to be notified of any
              7105                  failed attempts to match this node;  set if the user specified
              7106                  the "(FAIL)" option in the PARTRGE definition of this node.
              7107        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:63   
              7108    1         2 O_F BIT(1) UNAL INIT('0'B),
              7109        /*K* O_F - specifies that this node is to result in the creation of
              7110                  a block in the X$PARSE output tree.  The setting of this
              7111                  flag is controlled by several PARTRGE attributes:  the
              7112                  "OUT" option, the "NOUT" option, the "code" option, and the
              7113                  node's basic type.  If the user specifies "OUT", this flag
              7114                  will be set;  if the user specifies "NOUT", this flag will
              7115                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7116                  this flag will be set if the "code" option was specified or
              7117                  if the node is of the "delimited string" or "symbol" varieties.
              7118        */
              7119    1         2 OPT BIT(1) UNAL INIT('0'B),
              7120        /*K* OPT - set if this node is "optional".  This flag is set if the
              7121                  PARTRGE definition of this node was enclosed in a set
              7122                  of [square-brackets].
              7123        */
              7124    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7125        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7126                  once).  This flag is set of the PARTRGE definition of this node
              7127                  was enclosed in a set of *asterisks*.
              7128        */
              7129    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7130        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7131                  after this node.  This flag is set unless the PARTRGE
              7132                  definition of this node included a trailing hyphen-.
              7133        */
              7134    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7135        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7136                  incorporating all of the text (and blanks and/or comments)
              7137                  accepted by this node, with no editing or case conversion.
              7138                  This flag is set if the PARTRGE definition of this node
              7139                  included the "(RTEXT)" option.
              7140        */
              7141    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7142        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7143        */
              7144    1         2 CODE UBIN (16) UNAL INIT(0),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:64   
              7145        /*K* CODE - specifies the "code number" for this parse node.  This
              7146                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7147                  any parse block built by X$PARSE which corresponds to this node.
              7148        */
              7149    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              7150        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7151                  this parse node.
              7152        */
              7153        %IF '1'B;
              7154    1         ;
              7155        %ELSE;
              7157        %ENDIF;
              7159             %P$NODE(NAME=DD_SYMLIST,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              7160        /*F*  NAME:     P$NODE
              7161              FUNCTION: a structure used to describe syntax nodes, as built by
              7162                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7163                  used to examine all of the attributes of nodes of several
              7164                  types:  koncat, list, alternative, and reducing alternative.
              7165                  It may also be used to examine a few of the attributes of
              7166                  symbol and delimited-string nodes, as indicated.
              7167        */
              7168        %LSET STR='STATIC SYMDEF        ';
              7169        %IF '1'B;
              7170        %LSET INIT=INIT;
              7171        %LSET ENDINIT=;
              7172        %ELSE;
              7175        %ENDIF;
              7176        %IF '1'B;
              7177    1   DCL 1 DD_SYMLIST STATIC SYMDEF ALIGNED,
              7178        %ELSE;
              7180        %ENDIF;
              7181    1         2 TYPE UBIN(3) UNAL INIT(4),
              7182        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7183                  file for the permissible values in this field (%TYPE_whatever#).
              7184        */
              7185    1         2 P_F BIT(1) UNAL INIT('0'B),
              7186        /*K* P_F - specifies that the user wants to be able to "pre-approve"
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:65   
              7187                  any attempt to match this node.  This flag is set if the
              7188                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7189                  of this node.
              7190        */
              7191    1         2 S_F BIT(1) UNAL INIT('0'B),
              7192        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7193                  any successful attempts to match this node;  set if the user
              7194                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7195                  node.
              7196        */
              7197    1         2 F_F BIT(1) UNAL INIT('0'B),
              7198        /*K* F_F - specifies that the user wants to be notified of any
              7199                  failed attempts to match this node;  set if the user specified
              7200                  the "(FAIL)" option in the PARTRGE definition of this node.
              7201        */
              7202    1         2 O_F BIT(1) UNAL INIT('0'B),
              7203        /*K* O_F - specifies that this node is to result in the creation of
              7204                  a block in the X$PARSE output tree.  The setting of this
              7205                  flag is controlled by several PARTRGE attributes:  the
              7206                  "OUT" option, the "NOUT" option, the "code" option, and the
              7207                  node's basic type.  If the user specifies "OUT", this flag
              7208                  will be set;  if the user specifies "NOUT", this flag will
              7209                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7210                  this flag will be set if the "code" option was specified or
              7211                  if the node is of the "delimited string" or "symbol" varieties.
              7212        */
              7213    1         2 OPT BIT(1) UNAL INIT('0'B),
              7214        /*K* OPT - set if this node is "optional".  This flag is set if the
              7215                  PARTRGE definition of this node was enclosed in a set
              7216                  of [square-brackets].
              7217        */
              7218    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7219        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7220                  once).  This flag is set of the PARTRGE definition of this node
              7221                  was enclosed in a set of *asterisks*.
              7222        */
              7223    1         2 SKBL BIT(1) UNAL INIT('0'B),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:66   
              7224        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7225                  after this node.  This flag is set unless the PARTRGE
              7226                  definition of this node included a trailing hyphen-.
              7227        */
              7228    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7229        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7230                  incorporating all of the text (and blanks and/or comments)
              7231                  accepted by this node, with no editing or case conversion.
              7232                  This flag is set if the PARTRGE definition of this node
              7233                  included the "(RTEXT)" option.
              7234        */
              7235    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7236        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7237        */
              7238    1         2 CODE UBIN (16) UNAL INIT(0),
              7239        /*K* CODE - specifies the "code number" for this parse node.  This
              7240                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7241                  any parse block built by X$PARSE which corresponds to this node.
              7242        */
              7243    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              7244        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7245                  this parse node.
              7246        */
              7247        %IF '1'B;
              7248    1         ;
              7249        %ELSE;
              7251        %ENDIF;
              7253             %P$NODE(NAME=DD_INSTR_CONT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              7254        /*F*  NAME:     P$NODE
              7255              FUNCTION: a structure used to describe syntax nodes, as built by
              7256                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7257                  used to examine all of the attributes of nodes of several
              7258                  types:  koncat, list, alternative, and reducing alternative.
              7259                  It may also be used to examine a few of the attributes of
              7260                  symbol and delimited-string nodes, as indicated.
              7261        */
              7262        %LSET STR='STATIC SYMDEF        ';
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:67   
              7263        %IF '1'B;
              7264        %LSET INIT=INIT;
              7265        %LSET ENDINIT=;
              7266        %ELSE;
              7269        %ENDIF;
              7270        %IF '1'B;
              7271    1   DCL 1 DD_INSTR_CONT STATIC SYMDEF ALIGNED,
              7272        %ELSE;
              7274        %ENDIF;
              7275    1         2 TYPE UBIN(3) UNAL INIT(4),
              7276        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7277                  file for the permissible values in this field (%TYPE_whatever#).
              7278        */
              7279    1         2 P_F BIT(1) UNAL INIT('0'B),
              7280        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7281                  any attempt to match this node.  This flag is set if the
              7282                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7283                  of this node.
              7284        */
              7285    1         2 S_F BIT(1) UNAL INIT('0'B),
              7286        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7287                  any successful attempts to match this node;  set if the user
              7288                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7289                  node.
              7290        */
              7291    1         2 F_F BIT(1) UNAL INIT('0'B),
              7292        /*K* F_F - specifies that the user wants to be notified of any
              7293                  failed attempts to match this node;  set if the user specified
              7294                  the "(FAIL)" option in the PARTRGE definition of this node.
              7295        */
              7296    1         2 O_F BIT(1) UNAL INIT('0'B),
              7297        /*K* O_F - specifies that this node is to result in the creation of
              7298                  a block in the X$PARSE output tree.  The setting of this
              7299                  flag is controlled by several PARTRGE attributes:  the
              7300                  "OUT" option, the "NOUT" option, the "code" option, and the
              7301                  node's basic type.  If the user specifies "OUT", this flag
              7302                  will be set;  if the user specifies "NOUT", this flag will
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:68   
              7303                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7304                  this flag will be set if the "code" option was specified or
              7305                  if the node is of the "delimited string" or "symbol" varieties.
              7306        */
              7307    1         2 OPT BIT(1) UNAL INIT('0'B),
              7308        /*K* OPT - set if this node is "optional".  This flag is set if the
              7309                  PARTRGE definition of this node was enclosed in a set
              7310                  of [square-brackets].
              7311        */
              7312    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7313        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7314                  once).  This flag is set of the PARTRGE definition of this node
              7315                  was enclosed in a set of *asterisks*.
              7316        */
              7317    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7318        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7319                  after this node.  This flag is set unless the PARTRGE
              7320                  definition of this node included a trailing hyphen-.
              7321        */
              7322    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7323        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7324                  incorporating all of the text (and blanks and/or comments)
              7325                  accepted by this node, with no editing or case conversion.
              7326                  This flag is set if the PARTRGE definition of this node
              7327                  included the "(RTEXT)" option.
              7328        */
              7329    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7330        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7331        */
              7332    1         2 CODE UBIN (16) UNAL INIT(0),
              7333        /*K* CODE - specifies the "code number" for this parse node.  This
              7334                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7335                  any parse block built by X$PARSE which corresponds to this node.
              7336        */
              7337    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              7338        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7339                  this parse node.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:69   
              7340        */
              7341        %IF '1'B;
              7342    1         ;
              7343        %ELSE;
              7345        %ENDIF;
              7347        %LSET P=NX_;
              7348    1        DCL NX_DUMP SBIN SYMREF;
              7349    1        DCL NX_ECHO SBIN SYMREF;
              7350    1        DCL NX_OUTPUT SBIN SYMREF;
              7351    1        DCL NX_READ SBIN SYMREF;
              7352             %P$NODE(NAME=DD_CNR2,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(CNR2_HOST)");
              7353        /*F*  NAME:     P$NODE
              7354              FUNCTION: a structure used to describe syntax nodes, as built by
              7355                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7356                  used to examine all of the attributes of nodes of several
              7357                  types:  koncat, list, alternative, and reducing alternative.
              7358                  It may also be used to examine a few of the attributes of
              7359                  symbol and delimited-string nodes, as indicated.
              7360        */
              7361        %LSET STR='STATIC SYMDEF        ';
              7362        %IF '1'B;
              7363        %LSET INIT=INIT;
              7364        %LSET ENDINIT=;
              7365        %ELSE;
              7368        %ENDIF;
              7369        %IF '1'B;
              7370    1   DCL 1 DD_CNR2 STATIC SYMDEF ALIGNED,
              7371        %ELSE;
              7373        %ENDIF;
              7374    1         2 TYPE UBIN(3) UNAL INIT(4),
              7375        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7376                  file for the permissible values in this field (%TYPE_whatever#).
              7377        */
              7378    1         2 P_F BIT(1) UNAL INIT('0'B),
              7379        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7380                  any attempt to match this node.  This flag is set if the
              7381                  user supplied the "(PRE)" option in jhir PARTRGE definition
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:70   
              7382                  of this node.
              7383        */
              7384    1         2 S_F BIT(1) UNAL INIT('0'B),
              7385        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7386                  any successful attempts to match this node;  set if the user
              7387                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7388                  node.
              7389        */
              7390    1         2 F_F BIT(1) UNAL INIT('0'B),
              7391        /*K* F_F - specifies that the user wants to be notified of any
              7392                  failed attempts to match this node;  set if the user specified
              7393                  the "(FAIL)" option in the PARTRGE definition of this node.
              7394        */
              7395    1         2 O_F BIT(1) UNAL INIT('0'B),
              7396        /*K* O_F - specifies that this node is to result in the creation of
              7397                  a block in the X$PARSE output tree.  The setting of this
              7398                  flag is controlled by several PARTRGE attributes:  the
              7399                  "OUT" option, the "NOUT" option, the "code" option, and the
              7400                  node's basic type.  If the user specifies "OUT", this flag
              7401                  will be set;  if the user specifies "NOUT", this flag will
              7402                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7403                  this flag will be set if the "code" option was specified or
              7404                  if the node is of the "delimited string" or "symbol" varieties.
              7405        */
              7406    1         2 OPT BIT(1) UNAL INIT('0'B),
              7407        /*K* OPT - set if this node is "optional".  This flag is set if the
              7408                  PARTRGE definition of this node was enclosed in a set
              7409                  of [square-brackets].
              7410        */
              7411    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7412        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7413                  once).  This flag is set of the PARTRGE definition of this node
              7414                  was enclosed in a set of *asterisks*.
              7415        */
              7416    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7417        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7418                  after this node.  This flag is set unless the PARTRGE
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:71   
              7419                  definition of this node included a trailing hyphen-.
              7420        */
              7421    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7422        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7423                  incorporating all of the text (and blanks and/or comments)
              7424                  accepted by this node, with no editing or case conversion.
              7425                  This flag is set if the PARTRGE definition of this node
              7426                  included the "(RTEXT)" option.
              7427        */
              7428    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7429        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7430        */
              7431    1         2 CODE UBIN (16) UNAL INIT(0),
              7432        /*K* CODE - specifies the "code number" for this parse node.  This
              7433                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7434                  any parse block built by X$PARSE which corresponds to this node.
              7435        */
              7436    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(CNR2_HOST))
              7437        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7438                  this parse node.
              7439        */
              7440        %IF '1'B;
              7441    1         ;
              7442        %ELSE;
              7444        %ENDIF;
              7446             %P$NODE(NAME=DD_BASE,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(OCTIL)");
              7447        /*F*  NAME:     P$NODE
              7448              FUNCTION: a structure used to describe syntax nodes, as built by
              7449                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7450                  used to examine all of the attributes of nodes of several
              7451                  types:  koncat, list, alternative, and reducing alternative.
              7452                  It may also be used to examine a few of the attributes of
              7453                  symbol and delimited-string nodes, as indicated.
              7454        */
              7455        %LSET STR='STATIC SYMDEF        ';
              7456        %IF '1'B;
              7457        %LSET INIT=INIT;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:72   
              7458        %LSET ENDINIT=;
              7459        %ELSE;
              7462        %ENDIF;
              7463        %IF '1'B;
              7464    1   DCL 1 DD_BASE STATIC SYMDEF ALIGNED,
              7465        %ELSE;
              7467        %ENDIF;
              7468    1         2 TYPE UBIN(3) UNAL INIT(4),
              7469        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7470                  file for the permissible values in this field (%TYPE_whatever#).
              7471        */
              7472    1         2 P_F BIT(1) UNAL INIT('0'B),
              7473        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7474                  any attempt to match this node.  This flag is set if the
              7475                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7476                  of this node.
              7477        */
              7478    1         2 S_F BIT(1) UNAL INIT('0'B),
              7479        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7480                  any successful attempts to match this node;  set if the user
              7481                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7482                  node.
              7483        */
              7484    1         2 F_F BIT(1) UNAL INIT('0'B),
              7485        /*K* F_F - specifies that the user wants to be notified of any
              7486                  failed attempts to match this node;  set if the user specified
              7487                  the "(FAIL)" option in the PARTRGE definition of this node.
              7488        */
              7489    1         2 O_F BIT(1) UNAL INIT('0'B),
              7490        /*K* O_F - specifies that this node is to result in the creation of
              7491                  a block in the X$PARSE output tree.  The setting of this
              7492                  flag is controlled by several PARTRGE attributes:  the
              7493                  "OUT" option, the "NOUT" option, the "code" option, and the
              7494                  node's basic type.  If the user specifies "OUT", this flag
              7495                  will be set;  if the user specifies "NOUT", this flag will
              7496                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7497                  this flag will be set if the "code" option was specified or
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:73   
              7498                  if the node is of the "delimited string" or "symbol" varieties.
              7499        */
              7500    1         2 OPT BIT(1) UNAL INIT('0'B),
              7501        /*K* OPT - set if this node is "optional".  This flag is set if the
              7502                  PARTRGE definition of this node was enclosed in a set
              7503                  of [square-brackets].
              7504        */
              7505    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7506        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7507                  once).  This flag is set of the PARTRGE definition of this node
              7508                  was enclosed in a set of *asterisks*.
              7509        */
              7510    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7511        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7512                  after this node.  This flag is set unless the PARTRGE
              7513                  definition of this node included a trailing hyphen-.
              7514        */
              7515    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7516        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7517                  incorporating all of the text (and blanks and/or comments)
              7518                  accepted by this node, with no editing or case conversion.
              7519                  This flag is set if the PARTRGE definition of this node
              7520                  included the "(RTEXT)" option.
              7521        */
              7522    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7523        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7524        */
              7525    1         2 CODE UBIN (16) UNAL INIT(0),
              7526        /*K* CODE - specifies the "code number" for this parse node.  This
              7527                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7528                  any parse block built by X$PARSE which corresponds to this node.
              7529        */
              7530    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(OCTIL))
              7531        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7532                  this parse node.
              7533        */
              7534        %IF '1'B;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:74   
              7535    1         ;
              7536        %ELSE;
              7538        %ENDIF;
              7540             %P$NODE(NAME=DD_BASE1,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(OCTIL1)");
              7541        /*F*  NAME:     P$NODE
              7542              FUNCTION: a structure used to describe syntax nodes, as built by
              7543                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7544                  used to examine all of the attributes of nodes of several
              7545                  types:  koncat, list, alternative, and reducing alternative.
              7546                  It may also be used to examine a few of the attributes of
              7547                  symbol and delimited-string nodes, as indicated.
              7548        */
              7549        %LSET STR='STATIC SYMDEF        ';
              7550        %IF '1'B;
              7551        %LSET INIT=INIT;
              7552        %LSET ENDINIT=;
              7553        %ELSE;
              7556        %ENDIF;
              7557        %IF '1'B;
              7558    1   DCL 1 DD_BASE1 STATIC SYMDEF ALIGNED,
              7559        %ELSE;
              7561        %ENDIF;
              7562    1         2 TYPE UBIN(3) UNAL INIT(4),
              7563        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7564                  file for the permissible values in this field (%TYPE_whatever#).
              7565        */
              7566    1         2 P_F BIT(1) UNAL INIT('0'B),
              7567        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7568                  any attempt to match this node.  This flag is set if the
              7569                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7570                  of this node.
              7571        */
              7572    1         2 S_F BIT(1) UNAL INIT('0'B),
              7573        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7574                  any successful attempts to match this node;  set if the user
              7575                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7576                  node.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:75   
              7577        */
              7578    1         2 F_F BIT(1) UNAL INIT('0'B),
              7579        /*K* F_F - specifies that the user wants to be notified of any
              7580                  failed attempts to match this node;  set if the user specified
              7581                  the "(FAIL)" option in the PARTRGE definition of this node.
              7582        */
              7583    1         2 O_F BIT(1) UNAL INIT('0'B),
              7584        /*K* O_F - specifies that this node is to result in the creation of
              7585                  a block in the X$PARSE output tree.  The setting of this
              7586                  flag is controlled by several PARTRGE attributes:  the
              7587                  "OUT" option, the "NOUT" option, the "code" option, and the
              7588                  node's basic type.  If the user specifies "OUT", this flag
              7589                  will be set;  if the user specifies "NOUT", this flag will
              7590                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7591                  this flag will be set if the "code" option was specified or
              7592                  if the node is of the "delimited string" or "symbol" varieties.
              7593        */
              7594    1         2 OPT BIT(1) UNAL INIT('0'B),
              7595        /*K* OPT - set if this node is "optional".  This flag is set if the
              7596                  PARTRGE definition of this node was enclosed in a set
              7597                  of [square-brackets].
              7598        */
              7599    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7600        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7601                  once).  This flag is set of the PARTRGE definition of this node
              7602                  was enclosed in a set of *asterisks*.
              7603        */
              7604    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7605        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7606                  after this node.  This flag is set unless the PARTRGE
              7607                  definition of this node included a trailing hyphen-.
              7608        */
              7609    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7610        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7611                  incorporating all of the text (and blanks and/or comments)
              7612                  accepted by this node, with no editing or case conversion.
              7613                  This flag is set if the PARTRGE definition of this node
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:76   
              7614                  included the "(RTEXT)" option.
              7615        */
              7616    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7617        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7618        */
              7619    1         2 CODE UBIN (16) UNAL INIT(0),
              7620        /*K* CODE - specifies the "code number" for this parse node.  This
              7621                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7622                  any parse block built by X$PARSE which corresponds to this node.
              7623        */
              7624    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(OCTIL1))
              7625        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7626                  this parse node.
              7627        */
              7628        %IF '1'B;
              7629    1         ;
              7630        %ELSE;
              7632        %ENDIF;
              7634             %P$NODE(NAME=DD_BASEDIG,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(ODIG)");
              7635        /*F*  NAME:     P$NODE
              7636              FUNCTION: a structure used to describe syntax nodes, as built by
              7637                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7638                  used to examine all of the attributes of nodes of several
              7639                  types:  koncat, list, alternative, and reducing alternative.
              7640                  It may also be used to examine a few of the attributes of
              7641                  symbol and delimited-string nodes, as indicated.
              7642        */
              7643        %LSET STR='STATIC SYMDEF        ';
              7644        %IF '1'B;
              7645        %LSET INIT=INIT;
              7646        %LSET ENDINIT=;
              7647        %ELSE;
              7650        %ENDIF;
              7651        %IF '1'B;
              7652    1   DCL 1 DD_BASEDIG STATIC SYMDEF ALIGNED,
              7653        %ELSE;
              7655        %ENDIF;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:77   
              7656    1         2 TYPE UBIN(3) UNAL INIT(4),
              7657        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7658                  file for the permissible values in this field (%TYPE_whatever#).
              7659        */
              7660    1         2 P_F BIT(1) UNAL INIT('0'B),
              7661        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7662                  any attempt to match this node.  This flag is set if the
              7663                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7664                  of this node.
              7665        */
              7666    1         2 S_F BIT(1) UNAL INIT('0'B),
              7667        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7668                  any successful attempts to match this node;  set if the user
              7669                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7670                  node.
              7671        */
              7672    1         2 F_F BIT(1) UNAL INIT('0'B),
              7673        /*K* F_F - specifies that the user wants to be notified of any
              7674                  failed attempts to match this node;  set if the user specified
              7675                  the "(FAIL)" option in the PARTRGE definition of this node.
              7676        */
              7677    1         2 O_F BIT(1) UNAL INIT('0'B),
              7678        /*K* O_F - specifies that this node is to result in the creation of
              7679                  a block in the X$PARSE output tree.  The setting of this
              7680                  flag is controlled by several PARTRGE attributes:  the
              7681                  "OUT" option, the "NOUT" option, the "code" option, and the
              7682                  node's basic type.  If the user specifies "OUT", this flag
              7683                  will be set;  if the user specifies "NOUT", this flag will
              7684                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7685                  this flag will be set if the "code" option was specified or
              7686                  if the node is of the "delimited string" or "symbol" varieties.
              7687        */
              7688    1         2 OPT BIT(1) UNAL INIT('0'B),
              7689        /*K* OPT - set if this node is "optional".  This flag is set if the
              7690                  PARTRGE definition of this node was enclosed in a set
              7691                  of [square-brackets].
              7692        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:78   
              7693    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7694        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7695                  once).  This flag is set of the PARTRGE definition of this node
              7696                  was enclosed in a set of *asterisks*.
              7697        */
              7698    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7699        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7700                  after this node.  This flag is set unless the PARTRGE
              7701                  definition of this node included a trailing hyphen-.
              7702        */
              7703    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7704        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7705                  incorporating all of the text (and blanks and/or comments)
              7706                  accepted by this node, with no editing or case conversion.
              7707                  This flag is set if the PARTRGE definition of this node
              7708                  included the "(RTEXT)" option.
              7709        */
              7710    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7711        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7712        */
              7713    1         2 CODE UBIN (16) UNAL INIT(0),
              7714        /*K* CODE - specifies the "code number" for this parse node.  This
              7715                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7716                  any parse block built by X$PARSE which corresponds to this node.
              7717        */
              7718    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(ODIG))
              7719        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7720                  this parse node.
              7721        */
              7722        %IF '1'B;
              7723    1         ;
              7724        %ELSE;
              7726        %ENDIF;
              7728             %P$NODE(NAME=DD_BASEBOTH,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES=
              7728                 "ADDR(OCTILBOTH)");
              7729        /*F*  NAME:     P$NODE
              7730              FUNCTION: a structure used to describe syntax nodes, as built by
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:79   
              7731                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7732                  used to examine all of the attributes of nodes of several
              7733                  types:  koncat, list, alternative, and reducing alternative.
              7734                  It may also be used to examine a few of the attributes of
              7735                  symbol and delimited-string nodes, as indicated.
              7736        */
              7737        %LSET STR='STATIC SYMDEF        ';
              7738        %IF '1'B;
              7739        %LSET INIT=INIT;
              7740        %LSET ENDINIT=;
              7741        %ELSE;
              7744        %ENDIF;
              7745        %IF '1'B;
              7746    1   DCL 1 DD_BASEBOTH STATIC SYMDEF ALIGNED,
              7747        %ELSE;
              7749        %ENDIF;
              7750    1         2 TYPE UBIN(3) UNAL INIT(4),
              7751        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7752                  file for the permissible values in this field (%TYPE_whatever#).
              7753        */
              7754    1         2 P_F BIT(1) UNAL INIT('0'B),
              7755        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7756                  any attempt to match this node.  This flag is set if the
              7757                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7758                  of this node.
              7759        */
              7760    1         2 S_F BIT(1) UNAL INIT('0'B),
              7761        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7762                  any successful attempts to match this node;  set if the user
              7763                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7764                  node.
              7765        */
              7766    1         2 F_F BIT(1) UNAL INIT('0'B),
              7767        /*K* F_F - specifies that the user wants to be notified of any
              7768                  failed attempts to match this node;  set if the user specified
              7769                  the "(FAIL)" option in the PARTRGE definition of this node.
              7770        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:80   
              7771    1         2 O_F BIT(1) UNAL INIT('0'B),
              7772        /*K* O_F - specifies that this node is to result in the creation of
              7773                  a block in the X$PARSE output tree.  The setting of this
              7774                  flag is controlled by several PARTRGE attributes:  the
              7775                  "OUT" option, the "NOUT" option, the "code" option, and the
              7776                  node's basic type.  If the user specifies "OUT", this flag
              7777                  will be set;  if the user specifies "NOUT", this flag will
              7778                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7779                  this flag will be set if the "code" option was specified or
              7780                  if the node is of the "delimited string" or "symbol" varieties.
              7781        */
              7782    1         2 OPT BIT(1) UNAL INIT('0'B),
              7783        /*K* OPT - set if this node is "optional".  This flag is set if the
              7784                  PARTRGE definition of this node was enclosed in a set
              7785                  of [square-brackets].
              7786        */
              7787    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7788        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7789                  once).  This flag is set of the PARTRGE definition of this node
              7790                  was enclosed in a set of *asterisks*.
              7791        */
              7792    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7793        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7794                  after this node.  This flag is set unless the PARTRGE
              7795                  definition of this node included a trailing hyphen-.
              7796        */
              7797    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7798        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7799                  incorporating all of the text (and blanks and/or comments)
              7800                  accepted by this node, with no editing or case conversion.
              7801                  This flag is set if the PARTRGE definition of this node
              7802                  included the "(RTEXT)" option.
              7803        */
              7804    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7805        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7806        */
              7807    1         2 CODE UBIN (16) UNAL INIT(0),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:81   
              7808        /*K* CODE - specifies the "code number" for this parse node.  This
              7809                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7810                  any parse block built by X$PARSE which corresponds to this node.
              7811        */
              7812    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(OCTILBOTH))
              7813        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7814                  this parse node.
              7815        */
              7816        %IF '1'B;
              7817    1         ;
              7818        %ELSE;
              7820        %ENDIF;
              7822             %P$NODE(NAME=DD_INSTR,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(INSTR)");
              7823        /*F*  NAME:     P$NODE
              7824              FUNCTION: a structure used to describe syntax nodes, as built by
              7825                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7826                  used to examine all of the attributes of nodes of several
              7827                  types:  koncat, list, alternative, and reducing alternative.
              7828                  It may also be used to examine a few of the attributes of
              7829                  symbol and delimited-string nodes, as indicated.
              7830        */
              7831        %LSET STR='STATIC SYMDEF        ';
              7832        %IF '1'B;
              7833        %LSET INIT=INIT;
              7834        %LSET ENDINIT=;
              7835        %ELSE;
              7838        %ENDIF;
              7839        %IF '1'B;
              7840    1   DCL 1 DD_INSTR STATIC SYMDEF ALIGNED,
              7841        %ELSE;
              7843        %ENDIF;
              7844    1         2 TYPE UBIN(3) UNAL INIT(4),
              7845        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7846                  file for the permissible values in this field (%TYPE_whatever#).
              7847        */
              7848    1         2 P_F BIT(1) UNAL INIT('0'B),
              7849        /*K* P_F - specifies that the user wants to be able to "pre-approve"
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:82   
              7850                  any attempt to match this node.  This flag is set if the
              7851                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7852                  of this node.
              7853        */
              7854    1         2 S_F BIT(1) UNAL INIT('0'B),
              7855        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7856                  any successful attempts to match this node;  set if the user
              7857                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7858                  node.
              7859        */
              7860    1         2 F_F BIT(1) UNAL INIT('0'B),
              7861        /*K* F_F - specifies that the user wants to be notified of any
              7862                  failed attempts to match this node;  set if the user specified
              7863                  the "(FAIL)" option in the PARTRGE definition of this node.
              7864        */
              7865    1         2 O_F BIT(1) UNAL INIT('0'B),
              7866        /*K* O_F - specifies that this node is to result in the creation of
              7867                  a block in the X$PARSE output tree.  The setting of this
              7868                  flag is controlled by several PARTRGE attributes:  the
              7869                  "OUT" option, the "NOUT" option, the "code" option, and the
              7870                  node's basic type.  If the user specifies "OUT", this flag
              7871                  will be set;  if the user specifies "NOUT", this flag will
              7872                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7873                  this flag will be set if the "code" option was specified or
              7874                  if the node is of the "delimited string" or "symbol" varieties.
              7875        */
              7876    1         2 OPT BIT(1) UNAL INIT('0'B),
              7877        /*K* OPT - set if this node is "optional".  This flag is set if the
              7878                  PARTRGE definition of this node was enclosed in a set
              7879                  of [square-brackets].
              7880        */
              7881    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7882        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7883                  once).  This flag is set of the PARTRGE definition of this node
              7884                  was enclosed in a set of *asterisks*.
              7885        */
              7886    1         2 SKBL BIT(1) UNAL INIT('0'B),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:83   
              7887        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7888                  after this node.  This flag is set unless the PARTRGE
              7889                  definition of this node included a trailing hyphen-.
              7890        */
              7891    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7892        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7893                  incorporating all of the text (and blanks and/or comments)
              7894                  accepted by this node, with no editing or case conversion.
              7895                  This flag is set if the PARTRGE definition of this node
              7896                  included the "(RTEXT)" option.
              7897        */
              7898    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7899        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7900        */
              7901    1         2 CODE UBIN (16) UNAL INIT(0),
              7902        /*K* CODE - specifies the "code number" for this parse node.  This
              7903                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7904                  any parse block built by X$PARSE which corresponds to this node.
              7905        */
              7906    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(INSTR))
              7907        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7908                  this parse node.
              7909        */
              7910        %IF '1'B;
              7911    1         ;
              7912        %ELSE;
              7914        %ENDIF;
              7916             %P$NODE(NAME=DD_DUMP,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)DUMP)");
              7917        /*F*  NAME:     P$NODE
              7918              FUNCTION: a structure used to describe syntax nodes, as built by
              7919                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7920                  used to examine all of the attributes of nodes of several
              7921                  types:  koncat, list, alternative, and reducing alternative.
              7922                  It may also be used to examine a few of the attributes of
              7923                  symbol and delimited-string nodes, as indicated.
              7924        */
              7925        %LSET STR='STATIC SYMDEF        ';
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:84   
              7926        %IF '1'B;
              7927        %LSET INIT=INIT;
              7928        %LSET ENDINIT=;
              7929        %ELSE;
              7932        %ENDIF;
              7933        %IF '1'B;
              7934    1   DCL 1 DD_DUMP STATIC SYMDEF ALIGNED,
              7935        %ELSE;
              7937        %ENDIF;
              7938    1         2 TYPE UBIN(3) UNAL INIT(4),
              7939        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7940                  file for the permissible values in this field (%TYPE_whatever#).
              7941        */
              7942    1         2 P_F BIT(1) UNAL INIT('0'B),
              7943        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7944                  any attempt to match this node.  This flag is set if the
              7945                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7946                  of this node.
              7947        */
              7948    1         2 S_F BIT(1) UNAL INIT('0'B),
              7949        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7950                  any successful attempts to match this node;  set if the user
              7951                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7952                  node.
              7953        */
              7954    1         2 F_F BIT(1) UNAL INIT('0'B),
              7955        /*K* F_F - specifies that the user wants to be notified of any
              7956                  failed attempts to match this node;  set if the user specified
              7957                  the "(FAIL)" option in the PARTRGE definition of this node.
              7958        */
              7959    1         2 O_F BIT(1) UNAL INIT('0'B),
              7960        /*K* O_F - specifies that this node is to result in the creation of
              7961                  a block in the X$PARSE output tree.  The setting of this
              7962                  flag is controlled by several PARTRGE attributes:  the
              7963                  "OUT" option, the "NOUT" option, the "code" option, and the
              7964                  node's basic type.  If the user specifies "OUT", this flag
              7965                  will be set;  if the user specifies "NOUT", this flag will
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:85   
              7966                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7967                  this flag will be set if the "code" option was specified or
              7968                  if the node is of the "delimited string" or "symbol" varieties.
              7969        */
              7970    1         2 OPT BIT(1) UNAL INIT('0'B),
              7971        /*K* OPT - set if this node is "optional".  This flag is set if the
              7972                  PARTRGE definition of this node was enclosed in a set
              7973                  of [square-brackets].
              7974        */
              7975    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7976        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7977                  once).  This flag is set of the PARTRGE definition of this node
              7978                  was enclosed in a set of *asterisks*.
              7979        */
              7980    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7981        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7982                  after this node.  This flag is set unless the PARTRGE
              7983                  definition of this node included a trailing hyphen-.
              7984        */
              7985    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7986        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7987                  incorporating all of the text (and blanks and/or comments)
              7988                  accepted by this node, with no editing or case conversion.
              7989                  This flag is set if the PARTRGE definition of this node
              7990                  included the "(RTEXT)" option.
              7991        */
              7992    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7993        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7994        */
              7995    1         2 CODE UBIN (16) UNAL INIT(0),
              7996        /*K* CODE - specifies the "code number" for this parse node.  This
              7997                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7998                  any parse block built by X$PARSE which corresponds to this node.
              7999        */
              8000    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NX_DUMP))
              8001        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8002                  this parse node.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:86   
              8003        */
              8004        %IF '1'B;
              8005    1         ;
              8006        %ELSE;
              8008        %ENDIF;
              8010             %P$NODE(NAME=DD_ECHO,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)ECHO)");
              8011        /*F*  NAME:     P$NODE
              8012              FUNCTION: a structure used to describe syntax nodes, as built by
              8013                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8014                  used to examine all of the attributes of nodes of several
              8015                  types:  koncat, list, alternative, and reducing alternative.
              8016                  It may also be used to examine a few of the attributes of
              8017                  symbol and delimited-string nodes, as indicated.
              8018        */
              8019        %LSET STR='STATIC SYMDEF        ';
              8020        %IF '1'B;
              8021        %LSET INIT=INIT;
              8022        %LSET ENDINIT=;
              8023        %ELSE;
              8026        %ENDIF;
              8027        %IF '1'B;
              8028    1   DCL 1 DD_ECHO STATIC SYMDEF ALIGNED,
              8029        %ELSE;
              8031        %ENDIF;
              8032    1         2 TYPE UBIN(3) UNAL INIT(4),
              8033        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8034                  file for the permissible values in this field (%TYPE_whatever#).
              8035        */
              8036    1         2 P_F BIT(1) UNAL INIT('0'B),
              8037        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8038                  any attempt to match this node.  This flag is set if the
              8039                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8040                  of this node.
              8041        */
              8042    1         2 S_F BIT(1) UNAL INIT('0'B),
              8043        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8044                  any successful attempts to match this node;  set if the user
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:87   
              8045                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8046                  node.
              8047        */
              8048    1         2 F_F BIT(1) UNAL INIT('0'B),
              8049        /*K* F_F - specifies that the user wants to be notified of any
              8050                  failed attempts to match this node;  set if the user specified
              8051                  the "(FAIL)" option in the PARTRGE definition of this node.
              8052        */
              8053    1         2 O_F BIT(1) UNAL INIT('0'B),
              8054        /*K* O_F - specifies that this node is to result in the creation of
              8055                  a block in the X$PARSE output tree.  The setting of this
              8056                  flag is controlled by several PARTRGE attributes:  the
              8057                  "OUT" option, the "NOUT" option, the "code" option, and the
              8058                  node's basic type.  If the user specifies "OUT", this flag
              8059                  will be set;  if the user specifies "NOUT", this flag will
              8060                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8061                  this flag will be set if the "code" option was specified or
              8062                  if the node is of the "delimited string" or "symbol" varieties.
              8063        */
              8064    1         2 OPT BIT(1) UNAL INIT('0'B),
              8065        /*K* OPT - set if this node is "optional".  This flag is set if the
              8066                  PARTRGE definition of this node was enclosed in a set
              8067                  of [square-brackets].
              8068        */
              8069    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8070        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8071                  once).  This flag is set of the PARTRGE definition of this node
              8072                  was enclosed in a set of *asterisks*.
              8073        */
              8074    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8075        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8076                  after this node.  This flag is set unless the PARTRGE
              8077                  definition of this node included a trailing hyphen-.
              8078        */
              8079    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8080        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8081                  incorporating all of the text (and blanks and/or comments)
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:88   
              8082                  accepted by this node, with no editing or case conversion.
              8083                  This flag is set if the PARTRGE definition of this node
              8084                  included the "(RTEXT)" option.
              8085        */
              8086    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8087        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8088        */
              8089    1         2 CODE UBIN (16) UNAL INIT(0),
              8090        /*K* CODE - specifies the "code number" for this parse node.  This
              8091                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8092                  any parse block built by X$PARSE which corresponds to this node.
              8093        */
              8094    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NX_ECHO))
              8095        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8096                  this parse node.
              8097        */
              8098        %IF '1'B;
              8099    1         ;
              8100        %ELSE;
              8102        %ENDIF;
              8104             %P$NODE(NAME=DD_KEEP,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)KEEP)");
              8105        /*F*  NAME:     P$NODE
              8106              FUNCTION: a structure used to describe syntax nodes, as built by
              8107                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8108                  used to examine all of the attributes of nodes of several
              8109                  types:  koncat, list, alternative, and reducing alternative.
              8110                  It may also be used to examine a few of the attributes of
              8111                  symbol and delimited-string nodes, as indicated.
              8112        */
              8113        %LSET STR='STATIC SYMDEF        ';
              8114        %IF '1'B;
              8115        %LSET INIT=INIT;
              8116        %LSET ENDINIT=;
              8117        %ELSE;
              8120        %ENDIF;
              8121        %IF '1'B;
              8122    1   DCL 1 DD_KEEP STATIC SYMDEF ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:89   
              8123        %ELSE;
              8125        %ENDIF;
              8126    1         2 TYPE UBIN(3) UNAL INIT(4),
              8127        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8128                  file for the permissible values in this field (%TYPE_whatever#).
              8129        */
              8130    1         2 P_F BIT(1) UNAL INIT('0'B),
              8131        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8132                  any attempt to match this node.  This flag is set if the
              8133                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8134                  of this node.
              8135        */
              8136    1         2 S_F BIT(1) UNAL INIT('0'B),
              8137        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8138                  any successful attempts to match this node;  set if the user
              8139                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8140                  node.
              8141        */
              8142    1         2 F_F BIT(1) UNAL INIT('0'B),
              8143        /*K* F_F - specifies that the user wants to be notified of any
              8144                  failed attempts to match this node;  set if the user specified
              8145                  the "(FAIL)" option in the PARTRGE definition of this node.
              8146        */
              8147    1         2 O_F BIT(1) UNAL INIT('0'B),
              8148        /*K* O_F - specifies that this node is to result in the creation of
              8149                  a block in the X$PARSE output tree.  The setting of this
              8150                  flag is controlled by several PARTRGE attributes:  the
              8151                  "OUT" option, the "NOUT" option, the "code" option, and the
              8152                  node's basic type.  If the user specifies "OUT", this flag
              8153                  will be set;  if the user specifies "NOUT", this flag will
              8154                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8155                  this flag will be set if the "code" option was specified or
              8156                  if the node is of the "delimited string" or "symbol" varieties.
              8157        */
              8158    1         2 OPT BIT(1) UNAL INIT('0'B),
              8159        /*K* OPT - set if this node is "optional".  This flag is set if the
              8160                  PARTRGE definition of this node was enclosed in a set
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:90   
              8161                  of [square-brackets].
              8162        */
              8163    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8164        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8165                  once).  This flag is set of the PARTRGE definition of this node
              8166                  was enclosed in a set of *asterisks*.
              8167        */
              8168    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8169        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8170                  after this node.  This flag is set unless the PARTRGE
              8171                  definition of this node included a trailing hyphen-.
              8172        */
              8173    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8174        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8175                  incorporating all of the text (and blanks and/or comments)
              8176                  accepted by this node, with no editing or case conversion.
              8177                  This flag is set if the PARTRGE definition of this node
              8178                  included the "(RTEXT)" option.
              8179        */
              8180    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8181        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8182        */
              8183    1         2 CODE UBIN (16) UNAL INIT(0),
              8184        /*K* CODE - specifies the "code number" for this parse node.  This
              8185                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8186                  any parse block built by X$PARSE which corresponds to this node.
              8187        */
              8188    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NX_KEEP))
              8189        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8190                  this parse node.
              8191        */
              8192        %IF '1'B;
              8193    1         ;
              8194        %ELSE;
              8196        %ENDIF;
              8198             %P$NODE(NAME=DD_IGNORE,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(NU_IGNORE)"
              8198                 );
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:91   
              8199        /*F*  NAME:     P$NODE
              8200              FUNCTION: a structure used to describe syntax nodes, as built by
              8201                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8202                  used to examine all of the attributes of nodes of several
              8203                  types:  koncat, list, alternative, and reducing alternative.
              8204                  It may also be used to examine a few of the attributes of
              8205                  symbol and delimited-string nodes, as indicated.
              8206        */
              8207        %LSET STR='STATIC SYMDEF        ';
              8208        %IF '1'B;
              8209        %LSET INIT=INIT;
              8210        %LSET ENDINIT=;
              8211        %ELSE;
              8214        %ENDIF;
              8215        %IF '1'B;
              8216    1   DCL 1 DD_IGNORE STATIC SYMDEF ALIGNED,
              8217        %ELSE;
              8219        %ENDIF;
              8220    1         2 TYPE UBIN(3) UNAL INIT(4),
              8221        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8222                  file for the permissible values in this field (%TYPE_whatever#).
              8223        */
              8224    1         2 P_F BIT(1) UNAL INIT('0'B),
              8225        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8226                  any attempt to match this node.  This flag is set if the
              8227                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8228                  of this node.
              8229        */
              8230    1         2 S_F BIT(1) UNAL INIT('0'B),
              8231        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8232                  any successful attempts to match this node;  set if the user
              8233                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8234                  node.
              8235        */
              8236    1         2 F_F BIT(1) UNAL INIT('0'B),
              8237        /*K* F_F - specifies that the user wants to be notified of any
              8238                  failed attempts to match this node;  set if the user specified
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:92   
              8239                  the "(FAIL)" option in the PARTRGE definition of this node.
              8240        */
              8241    1         2 O_F BIT(1) UNAL INIT('0'B),
              8242        /*K* O_F - specifies that this node is to result in the creation of
              8243                  a block in the X$PARSE output tree.  The setting of this
              8244                  flag is controlled by several PARTRGE attributes:  the
              8245                  "OUT" option, the "NOUT" option, the "code" option, and the
              8246                  node's basic type.  If the user specifies "OUT", this flag
              8247                  will be set;  if the user specifies "NOUT", this flag will
              8248                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8249                  this flag will be set if the "code" option was specified or
              8250                  if the node is of the "delimited string" or "symbol" varieties.
              8251        */
              8252    1         2 OPT BIT(1) UNAL INIT('0'B),
              8253        /*K* OPT - set if this node is "optional".  This flag is set if the
              8254                  PARTRGE definition of this node was enclosed in a set
              8255                  of [square-brackets].
              8256        */
              8257    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8258        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8259                  once).  This flag is set of the PARTRGE definition of this node
              8260                  was enclosed in a set of *asterisks*.
              8261        */
              8262    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8263        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8264                  after this node.  This flag is set unless the PARTRGE
              8265                  definition of this node included a trailing hyphen-.
              8266        */
              8267    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8268        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8269                  incorporating all of the text (and blanks and/or comments)
              8270                  accepted by this node, with no editing or case conversion.
              8271                  This flag is set if the PARTRGE definition of this node
              8272                  included the "(RTEXT)" option.
              8273        */
              8274    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8275        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:93   
              8276        */
              8277    1         2 CODE UBIN (16) UNAL INIT(0),
              8278        /*K* CODE - specifies the "code number" for this parse node.  This
              8279                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8280                  any parse block built by X$PARSE which corresponds to this node.
              8281        */
              8282    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NU_IGNORE))
              8283        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8284                  this parse node.
              8285        */
              8286        %IF '1'B;
              8287    1         ;
              8288        %ELSE;
              8290        %ENDIF;
              8292             %P$NODE(NAME=DD_TRAP,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(NU_TRAP)");
              8293        /*F*  NAME:     P$NODE
              8294              FUNCTION: a structure used to describe syntax nodes, as built by
              8295                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8296                  used to examine all of the attributes of nodes of several
              8297                  types:  koncat, list, alternative, and reducing alternative.
              8298                  It may also be used to examine a few of the attributes of
              8299                  symbol and delimited-string nodes, as indicated.
              8300        */
              8301        %LSET STR='STATIC SYMDEF        ';
              8302        %IF '1'B;
              8303        %LSET INIT=INIT;
              8304        %LSET ENDINIT=;
              8305        %ELSE;
              8308        %ENDIF;
              8309        %IF '1'B;
              8310    1   DCL 1 DD_TRAP STATIC SYMDEF ALIGNED,
              8311        %ELSE;
              8313        %ENDIF;
              8314    1         2 TYPE UBIN(3) UNAL INIT(4),
              8315        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8316                  file for the permissible values in this field (%TYPE_whatever#).
              8317        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:94   
              8318    1         2 P_F BIT(1) UNAL INIT('0'B),
              8319        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8320                  any attempt to match this node.  This flag is set if the
              8321                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8322                  of this node.
              8323        */
              8324    1         2 S_F BIT(1) UNAL INIT('0'B),
              8325        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8326                  any successful attempts to match this node;  set if the user
              8327                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8328                  node.
              8329        */
              8330    1         2 F_F BIT(1) UNAL INIT('0'B),
              8331        /*K* F_F - specifies that the user wants to be notified of any
              8332                  failed attempts to match this node;  set if the user specified
              8333                  the "(FAIL)" option in the PARTRGE definition of this node.
              8334        */
              8335    1         2 O_F BIT(1) UNAL INIT('0'B),
              8336        /*K* O_F - specifies that this node is to result in the creation of
              8337                  a block in the X$PARSE output tree.  The setting of this
              8338                  flag is controlled by several PARTRGE attributes:  the
              8339                  "OUT" option, the "NOUT" option, the "code" option, and the
              8340                  node's basic type.  If the user specifies "OUT", this flag
              8341                  will be set;  if the user specifies "NOUT", this flag will
              8342                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8343                  this flag will be set if the "code" option was specified or
              8344                  if the node is of the "delimited string" or "symbol" varieties.
              8345        */
              8346    1         2 OPT BIT(1) UNAL INIT('0'B),
              8347        /*K* OPT - set if this node is "optional".  This flag is set if the
              8348                  PARTRGE definition of this node was enclosed in a set
              8349                  of [square-brackets].
              8350        */
              8351    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8352        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8353                  once).  This flag is set of the PARTRGE definition of this node
              8354                  was enclosed in a set of *asterisks*.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:95   
              8355        */
              8356    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8357        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8358                  after this node.  This flag is set unless the PARTRGE
              8359                  definition of this node included a trailing hyphen-.
              8360        */
              8361    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8362        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8363                  incorporating all of the text (and blanks and/or comments)
              8364                  accepted by this node, with no editing or case conversion.
              8365                  This flag is set if the PARTRGE definition of this node
              8366                  included the "(RTEXT)" option.
              8367        */
              8368    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8369        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8370        */
              8371    1         2 CODE UBIN (16) UNAL INIT(0),
              8372        /*K* CODE - specifies the "code number" for this parse node.  This
              8373                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8374                  any parse block built by X$PARSE which corresponds to this node.
              8375        */
              8376    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NU_TRAP))
              8377        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8378                  this parse node.
              8379        */
              8380        %IF '1'B;
              8381    1         ;
              8382        %ELSE;
              8384        %ENDIF;
              8386             %P$NODE(NAME=DD_OUTPUT,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES=
              8386                 "ADDR(%(P)OUTPUT)");
              8387        /*F*  NAME:     P$NODE
              8388              FUNCTION: a structure used to describe syntax nodes, as built by
              8389                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8390                  used to examine all of the attributes of nodes of several
              8391                  types:  koncat, list, alternative, and reducing alternative.
              8392                  It may also be used to examine a few of the attributes of
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:96   
              8393                  symbol and delimited-string nodes, as indicated.
              8394        */
              8395        %LSET STR='STATIC SYMDEF        ';
              8396        %IF '1'B;
              8397        %LSET INIT=INIT;
              8398        %LSET ENDINIT=;
              8399        %ELSE;
              8402        %ENDIF;
              8403        %IF '1'B;
              8404    1   DCL 1 DD_OUTPUT STATIC SYMDEF ALIGNED,
              8405        %ELSE;
              8407        %ENDIF;
              8408    1         2 TYPE UBIN(3) UNAL INIT(4),
              8409        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8410                  file for the permissible values in this field (%TYPE_whatever#).
              8411        */
              8412    1         2 P_F BIT(1) UNAL INIT('0'B),
              8413        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8414                  any attempt to match this node.  This flag is set if the
              8415                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8416                  of this node.
              8417        */
              8418    1         2 S_F BIT(1) UNAL INIT('0'B),
              8419        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8420                  any successful attempts to match this node;  set if the user
              8421                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8422                  node.
              8423        */
              8424    1         2 F_F BIT(1) UNAL INIT('0'B),
              8425        /*K* F_F - specifies that the user wants to be notified of any
              8426                  failed attempts to match this node;  set if the user specified
              8427                  the "(FAIL)" option in the PARTRGE definition of this node.
              8428        */
              8429    1         2 O_F BIT(1) UNAL INIT('0'B),
              8430        /*K* O_F - specifies that this node is to result in the creation of
              8431                  a block in the X$PARSE output tree.  The setting of this
              8432                  flag is controlled by several PARTRGE attributes:  the
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:97   
              8433                  "OUT" option, the "NOUT" option, the "code" option, and the
              8434                  node's basic type.  If the user specifies "OUT", this flag
              8435                  will be set;  if the user specifies "NOUT", this flag will
              8436                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8437                  this flag will be set if the "code" option was specified or
              8438                  if the node is of the "delimited string" or "symbol" varieties.
              8439        */
              8440    1         2 OPT BIT(1) UNAL INIT('0'B),
              8441        /*K* OPT - set if this node is "optional".  This flag is set if the
              8442                  PARTRGE definition of this node was enclosed in a set
              8443                  of [square-brackets].
              8444        */
              8445    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8446        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8447                  once).  This flag is set of the PARTRGE definition of this node
              8448                  was enclosed in a set of *asterisks*.
              8449        */
              8450    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8451        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8452                  after this node.  This flag is set unless the PARTRGE
              8453                  definition of this node included a trailing hyphen-.
              8454        */
              8455    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8456        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8457                  incorporating all of the text (and blanks and/or comments)
              8458                  accepted by this node, with no editing or case conversion.
              8459                  This flag is set if the PARTRGE definition of this node
              8460                  included the "(RTEXT)" option.
              8461        */
              8462    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8463        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8464        */
              8465    1         2 CODE UBIN (16) UNAL INIT(0),
              8466        /*K* CODE - specifies the "code number" for this parse node.  This
              8467                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8468                  any parse block built by X$PARSE which corresponds to this node.
              8469        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:98   
              8470    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NX_OUTPUT))
              8471        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8472                  this parse node.
              8473        */
              8474        %IF '1'B;
              8475    1         ;
              8476        %ELSE;
              8478        %ENDIF;
              8480             %P$NODE(NAME=DD_READ,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)READ)");
              8481        /*F*  NAME:     P$NODE
              8482              FUNCTION: a structure used to describe syntax nodes, as built by
              8483                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8484                  used to examine all of the attributes of nodes of several
              8485                  types:  koncat, list, alternative, and reducing alternative.
              8486                  It may also be used to examine a few of the attributes of
              8487                  symbol and delimited-string nodes, as indicated.
              8488        */
              8489        %LSET STR='STATIC SYMDEF        ';
              8490        %IF '1'B;
              8491        %LSET INIT=INIT;
              8492        %LSET ENDINIT=;
              8493        %ELSE;
              8496        %ENDIF;
              8497        %IF '1'B;
              8498    1   DCL 1 DD_READ STATIC SYMDEF ALIGNED,
              8499        %ELSE;
              8501        %ENDIF;
              8502    1         2 TYPE UBIN(3) UNAL INIT(4),
              8503        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8504                  file for the permissible values in this field (%TYPE_whatever#).
              8505        */
              8506    1         2 P_F BIT(1) UNAL INIT('0'B),
              8507        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8508                  any attempt to match this node.  This flag is set if the
              8509                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8510                  of this node.
              8511        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:99   
              8512    1         2 S_F BIT(1) UNAL INIT('0'B),
              8513        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8514                  any successful attempts to match this node;  set if the user
              8515                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8516                  node.
              8517        */
              8518    1         2 F_F BIT(1) UNAL INIT('0'B),
              8519        /*K* F_F - specifies that the user wants to be notified of any
              8520                  failed attempts to match this node;  set if the user specified
              8521                  the "(FAIL)" option in the PARTRGE definition of this node.
              8522        */
              8523    1         2 O_F BIT(1) UNAL INIT('0'B),
              8524        /*K* O_F - specifies that this node is to result in the creation of
              8525                  a block in the X$PARSE output tree.  The setting of this
              8526                  flag is controlled by several PARTRGE attributes:  the
              8527                  "OUT" option, the "NOUT" option, the "code" option, and the
              8528                  node's basic type.  If the user specifies "OUT", this flag
              8529                  will be set;  if the user specifies "NOUT", this flag will
              8530                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8531                  this flag will be set if the "code" option was specified or
              8532                  if the node is of the "delimited string" or "symbol" varieties.
              8533        */
              8534    1         2 OPT BIT(1) UNAL INIT('0'B),
              8535        /*K* OPT - set if this node is "optional".  This flag is set if the
              8536                  PARTRGE definition of this node was enclosed in a set
              8537                  of [square-brackets].
              8538        */
              8539    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8540        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8541                  once).  This flag is set of the PARTRGE definition of this node
              8542                  was enclosed in a set of *asterisks*.
              8543        */
              8544    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8545        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8546                  after this node.  This flag is set unless the PARTRGE
              8547                  definition of this node included a trailing hyphen-.
              8548        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:100  
              8549    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8550        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8551                  incorporating all of the text (and blanks and/or comments)
              8552                  accepted by this node, with no editing or case conversion.
              8553                  This flag is set if the PARTRGE definition of this node
              8554                  included the "(RTEXT)" option.
              8555        */
              8556    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8557        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8558        */
              8559    1         2 CODE UBIN (16) UNAL INIT(0),
              8560        /*K* CODE - specifies the "code number" for this parse node.  This
              8561                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8562                  any parse block built by X$PARSE which corresponds to this node.
              8563        */
              8564    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NX_READ))
              8565        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8566                  this parse node.
              8567        */
              8568        %IF '1'B;
              8569    1         ;
              8570        %ELSE;
              8572        %ENDIF;
              8574    1        DCL CNR4_FORTRAN SBIN SYMREF;
              8575    1        DCL CNR4_PL6 SBIN SYMREF;
              8576    1        DCL L@DIV SBIN SYMREF;
              8577    1        DCL L@LSHIFT SBIN SYMREF;
              8578    1        DCL L@PLUS SBIN SYMREF;
              8579    1        DCL L@MINUS SBIN SYMREF;
              8580    1        DCL L@MULT SBIN SYMREF;
              8581    1        DCL L@RSHIFT SBIN SYMREF;
              8582    1        DCL L@OR SBIN SYMREF;
              8583    1        DCL L@AND SBIN SYMREF;
              8584    1        DCL SYMBOL_PL6 SBIN SYMREF;
              8585    1        DCL SYMDEL_PL6 SBIN SYMREF;
              8586    1        DCL SYMLIST SBIN SYMREF;
              8587    1        DCL SYMBOL_CC SBIN SYMREF;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:101  
              8588    1        DCL CNR4_COBOL SBIN SYMREF;
              8589    1        DCL L@DIVC SBIN SYMREF;
              8590    1        DCL L@LSHIFTC SBIN SYMREF;
              8591    1        DCL L@PLUSC SBIN SYMREF;
              8592    1        DCL L@MINUSC SBIN SYMREF;
              8593    1        DCL L@MULTC SBIN SYMREF;
              8594    1        DCL L@RSHIFTC SBIN SYMREF;
              8595    1        DCL L@ORC SBIN SYMREF;
              8596    1        DCL L@ANDC SBIN SYMREF;
              8597    1        DCL SYMBOL_COBOL SBIN SYMREF;
              8598    1        DCL SYMDEL_COBOL SBIN SYMREF;
              8599    1        DCL SYMLISTC SBIN SYMREF;
              8600    1        DCL NU_KEEP SBIN SYMREF;
              8601    1        DCL NU_TRAP SBIN SYMREF;
              8602    1        DCL NU_IGNORE SBIN SYMREF;
              8603    1        DCL OCTIL SBIN SYMREF;
              8604    1        DCL OCTIL1 SBIN SYMREF;
              8605    1        DCL ODIG SBIN SYMREF;
              8606    1        DCL OCTILBOTH SBIN SYMREF;
              8607    1        DCL INSTR SBIN SYMREF;
              8608    1        DCL CNR2_HOST SBIN SYMREF;
              8609    1        DCL NF_KEEP SBIN SYMREF;
              8610    1        DCL NF_TRAP SBIN SYMREF;
              8611    1        DCL NF_IGNORE SBIN SYMREF;
              8612    1        DCL HEXIL SBIN SYMREF;
              8613    1        DCL HEXIL1 SBIN SYMREF;
              8614    1        DCL HDIG SBIN SYMREF;
              8615    1        DCL HEXBOTH SBIN SYMREF;
              8616    1        DCL INSTR_L6 SBIN SYMREF;
              8617    1        DCL CNR2_L6 SBIN SYMREF;
              8618    1        DCL NX_KEEP SBIN SYMREF;
              8619    1        DCL DD_MODE_NODE_PTR$(0:8) PTR CONSTANT SYMDEF INIT(
              8620    1          ADDR(DD_KEEP),  /* must be first, for L6XDELTA */
              8621    1          ADDR(DD_TRAP),
              8622    1          ADDR(DD_IGNORE),
              8623    1          ADDR(DD_BASE),
              8624    1          ADDR(DD_BASE1),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:102  
              8625    1          ADDR(DD_BASEDIG),
              8626    1          ADDR(DD_BASEBOTH),
              8627    1          ADDR(DD_INSTR),
              8628    1          ADDR(DD_CNR2));
              8629    1        DCL DD_HOST_NODE_PTR$(0:8) PTR CONSTANT SYMDEF INIT(
              8630    1          ADDR(NU_KEEP),  /* must be first, for L6XDELTA */
              8631    1          ADDR(NU_TRAP),
              8632    1          ADDR(NU_IGNORE),
              8633    1          ADDR(OCTIL),
              8634    1          ADDR(OCTIL1),
              8635    1          ADDR(ODIG),
              8636    1          ADDR(OCTILBOTH),
              8637    1          ADDR(INSTR),
              8638    1          ADDR(CNR2_HOST));
              8639    1        DCL DD_L6_NODE_PTR$(0:8) PTR CONSTANT SYMDEF INIT(
              8640    1          ADDR(NF_KEEP),  /* must be first, for L6XDELTA */
              8641    1          ADDR(NF_TRAP),
              8642    1          ADDR(NF_IGNORE),
              8643    1          ADDR(HEXIL),
              8644    1          ADDR(HEXIL1),
              8645    1          ADDR(HDIG),
              8646    1          ADDR(HEXBOTH),
              8647    1          ADDR(INSTR_L6),
              8648    1          ADDR(CNR2_L6));
              8649    1        DCL DD_L6X_NODE_PTR$(0:0) PTR CONSTANT SYMDEF INIT(
              8650    1          ADDR(NX_KEEP)); /* must be first, for L6XDELTA - see? */
              8651    1        DCL DD_COMP_NODE_PTR$(0:11) PTR CONSTANT SYMDEF INIT(
              8652    1          ADDR(DD_CNR4),
              8653    1          ADDR(DD_L@DIV),
              8654    1          ADDR(DD_L@LSHIFT),
              8655    1          ADDR(DD_L@PLUS),
              8656    1          ADDR(DD_L@MINUS),
              8657    1          ADDR(DD_L@MULT),
              8658    1          ADDR(DD_L@RSHIFT),
              8659    1          ADDR(DD_L@OR),
              8660    1          ADDR(DD_L@AND),
              8661    1          ADDR(DD_SYMBOLS),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:103  
              8662    1          ADDR(DD_SYMDEL),
              8663    1          ADDR(DD_SYMLIST) );
              8664    1        DCL DD_SYN_PL6(0:11) PTR CONSTANT SYMDEF INIT(
              8665    1          ADDR(CNR4_PL6),
              8666    1          ADDR(L@DIV),
              8667    1          ADDR(L@LSHIFT),
              8668    1          ADDR(L@PLUS),
              8669    1          ADDR(L@MINUS),
              8670    1          ADDR(L@MULT),
              8671    1          ADDR(L@RSHIFT),
              8672    1          ADDR(L@OR),
              8673    1          ADDR(L@AND),
              8674    1          ADDR(SYMBOL_PL6),
              8675    1          ADDR(SYMDEL_PL6),
              8676    1          ADDR(SYMLIST) );
              8677    1        DCL DD_SYN_FORT(0:11) PTR CONSTANT SYMDEF INIT(
              8678    1          ADDR(CNR4_FORTRAN),
              8679    1          ADDR(L@DIV),
              8680    1          ADDR(L@LSHIFT),
              8681    1          ADDR(L@PLUS),
              8682    1          ADDR(L@MINUS),
              8683    1          ADDR(L@MULT),
              8684    1          ADDR(L@RSHIFT),
              8685    1          ADDR(L@OR),
              8686    1          ADDR(L@AND),
              8687    1          ADDR(SYMBOL_PL6),
              8688    1          ADDR(SYMDEL_PL6),
              8689    1          ADDR(SYMLIST) );
              8690    1        DCL DD_SYN_CC(0:11) PTR CONSTANT SYMDEF INIT(
              8691    1          ADDR(CNR4_PL6),
              8692    1          ADDR(L@DIV),
              8693    1          ADDR(L@LSHIFT),
              8694    1          ADDR(L@PLUS),
              8695    1          ADDR(L@MINUS),
              8696    1          ADDR(L@MULT),
              8697    1          ADDR(L@RSHIFT),
              8698    1          ADDR(L@OR),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:104  
              8699    1          ADDR(L@AND),
              8700    1          ADDR(SYMBOL_CC),
              8701    1          ADDR(SYMDEL_PL6),
              8702    1          ADDR(SYMLIST) ); /* Could fix to allow "A -> first sublevel" */
              8703    1        DCL DD_SYN_COBOL(0:11) PTR CONSTANT SYMDEF INIT(
              8704    1          ADDR(CNR4_COBOL),
              8705    1          ADDR(L@DIVC),
              8706    1          ADDR(L@LSHIFTC),
              8707    1          ADDR(L@PLUSC),
              8708    1          ADDR(L@MINUSC),
              8709    1          ADDR(L@MULTC),
              8710    1          ADDR(L@RSHIFTC),
              8711    1          ADDR(L@ORC),
              8712    1          ADDR(L@ANDC),
              8713    1          ADDR(SYMBOL_COBOL),
              8714    1          ADDR(SYMDEL_COBOL),
              8715    1          ADDR(SYMLISTC) );
              8716    1        DCL DD_COMPNODE$(0:13) PTR CONSTANT SYMDEF INIT(
              8717    1          ADDR(DD_SYN_PL6),  /* GMAP */
              8718    1          ADDR(DD_SYN_PL6),  /* PL6 */
              8719    1          ADDR(DD_SYN_FORT),  /* FORTRAN */
              8720    1          ADDR(DD_SYN_COBOL),  /* COBOL */
              8721    1          ADDR(DD_SYN_PL6),  /* PL1 */
              8722    1          ADDR(DD_SYN_PL6),  /* RPG */
              8723    1          ADDR(DD_SYN_PL6),  /* PASCAL */
              8724    1          ADDR(DD_SYN_PL6),  /* MOMUS */
              8725    1          ADDR(DD_SYN_COBOL),  /* FPL */
              8726    1          ADDR(DD_SYN_PL6),  /* PARTRGE */
              8727    1          ADDR(DD_SYN_PL6),  /* IDL */
              8728    1          ADDR(DD_SYN_PL6),  /* ELSIE */
              8729    1          ADDR(DD_SYN_PL6),  /* CALF */
              8730    1          ADDR(DD_SYN_CC) ); /* C */
              8731        %ENDIF;
       22     8733    1   DCL 1 DX_VARCOM_BUF STATIC SYMDEF ALIGNED,
       23     8734    1         2 WORDS(0:999) UBIN WORD;
       24     8735    1   DCL DX_DUMMY UBIN STATIC SYMDEF ALIGNED;
       25     8736    1   DCL DX_VARCOM$ PTR CONSTANT SYMDEF INIT(ADDR(DX_VARCOM_BUF));
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:105  
       26     8737    1   DCL DX_VARCOM_HIGH$ PTR CONSTANT SYMDEF INIT(ADDR(DX_DUMMY));
       27     8738                                                /**/
       28     8739    1   END DX_SD_D;

PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:106  
--  Include file information  --

   DD_KNODES_D.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DX_SD_D.

   No code generated for procedure DX_SD_D .
   Procedure DX_SD_D requires 4 words of local(AUTO) storage.

    No errors detected in file DX_SD_D.:E05TSI    .

PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:107  

 Object Unit name= DX_SD_D                                    File name= DX_SD_D.:E05TOU
 UTS= JUL 29 '97 15:16:17.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none  4769  11241  DX_SD_D
    1  RoData even  UTS    132    204  DX_SD_D
    2   Proc  even  none     0      0  DX_SD_D

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     ~proc       0  DX_SD_D
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:108  

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  S_D                                1      0  S_D$
    1      1  S_D_SEG$                           1      2  S_D_ACCESS$
    1      3  S_D_ASTACKOFF$                     1      4  S_D_ANLZ$
    1      5  S_D_BREAK$                         1      6  S_D_DO_SCAN$
    1      7  S_D_ERROR$                         1     10  S_D_FAULTCMD$$
    1     11  S_D_FAULTINS$$                     1     12  S_D_GOIC$
    1     13  S_D_GO_MODE$                       1     14  S_D_IXFIX$
    1     15  S_D_IPRFLT$                        1     16  S_D_REM_ACCESS$
    1     17  S_D_REM_DO_SCAN$                   1     20  S_D_REM_DISKBOOT$
    1     21  S_D_RETURNN$                       1     22  S_D_SAD$
    1     23  S_D_SAVEIC$                        1     24  S_D_TCB$$
    1     25  S_D_UREG$$                         1     26  S_D_USS$$
    1     27  S_D_HOST_MESSAGE$                  1     30  S_D_L6_MESSAGE$
    1     31  S_D_HW_RES_MEM$                    1     32  S_D_HW_WSQ0PT$
    1     33  S_D_HW_PTB_UNITS$                  0   7204  DD_CNR4
    0   7206  DD_L@DIV                           0   7210  DD_L@LSHIFT
    0   7212  DD_L@MINUS                         0   7214  DD_L@MULT
    0   7216  DD_L@PLUS                          0   7220  DD_L@RSHIFT
    0   7222  DD_L@OR                            0   7224  DD_L@AND
    0   7226  DD_SYMBOLS                         0   7230  DD_SYMDEL
    0   7232  DD_SYMLIST                         0   7234  DD_INSTR_CONT
    0   7236  DD_CNR2                            0   7240  DD_BASE
    0   7242  DD_BASE1                           0   7244  DD_BASEDIG
    0   7246  DD_BASEBOTH                        0   7250  DD_INSTR
    0   7252  DD_DUMP                            0   7254  DD_ECHO
    0   7256  DD_KEEP                            0   7260  DD_IGNORE
    0   7262  DD_TRAP                            0   7264  DD_OUTPUT
    0   7266  DD_READ                            1     34  DD_MODE_NODE_PTR$
    1     45  DD_HOST_NODE_PTR$                  1     56  DD_L6_NODE_PTR$
    1     67  DD_L6X_NODE_PTR$                   1     70  DD_COMP_NODE_PTR$
    1    104  DD_SYN_PL6                         1    120  DD_SYN_FORT
    1    134  DD_SYN_CC                          1    150  DD_SYN_COBOL
    1    164  DD_COMPNODE$                       0   7270  DX_VARCOM_BUF
    0  11240  DX_DUMMY                           1    202  DX_VARCOM$
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:109  
    1    203  DX_VARCOM_HIGH$

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NX_DUMP                               NX_ECHO                               NX_OUTPUT
     NX_READ                               CNR4_FORTRAN                          CNR4_PL6
     L@DIV                                 L@LSHIFT                              L@PLUS
     L@MINUS                               L@MULT                                L@RSHIFT
     L@OR                                  L@AND                                 SYMBOL_PL6
     SYMDEL_PL6                            SYMLIST                               SYMBOL_CC
     CNR4_COBOL                            L@DIVC                                L@LSHIFTC
     L@PLUSC                               L@MINUSC                              L@MULTC
     L@RSHIFTC                             L@ORC                                 L@ANDC
     SYMBOL_COBOL                          SYMDEL_COBOL                          SYMLISTC
     NU_KEEP                               NU_TRAP                               NU_IGNORE
     OCTIL                                 OCTIL1                                ODIG
     OCTILBOTH                             INSTR                                 CNR2_HOST
     NF_KEEP                               NF_TRAP                               NF_IGNORE
     HEXIL                                 HEXIL1                                HDIG
     HEXBOTH                               INSTR_L6                              CNR2_L6
     NX_KEEP

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:110  


S_D
 Sect OctLoc
   0     000   000000 000000   0***** ******   ****** ******   ****** ******    ................
   0    7200*  ****** ******   ****** ******   ****** ******   ****** ******    ................

DD_CNR4
 Sect OctLoc
   0    7204   400000 200000   000000 006014                                    ........

DD_L@DIV
 Sect OctLoc
   0    7206   400000 200000   000000 006014                                    ........

DD_L@LSHIFT
 Sect OctLoc
   0    7210   400000 200000   000000 006014                                    ........

DD_L@MINUS
 Sect OctLoc
   0    7212   400000 200000   000000 006014                                    ........

DD_L@MULT
 Sect OctLoc
   0    7214   400000 200000   000000 006014                                    ........

DD_L@PLUS
 Sect OctLoc
   0    7216   400000 200000   000000 006014                                    ........

DD_L@RSHIFT
 Sect OctLoc
   0    7220   400000 200000   000000 006014                                    ........

DD_L@OR
 Sect OctLoc
   0    7222   400000 200000   000000 006014                                    ........
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:111  

DD_L@AND
 Sect OctLoc
   0    7224   400000 200000   000000 006014                                    ........

DD_SYMBOLS
 Sect OctLoc
   0    7226   400000 200000   000000 006014                                    ........

DD_SYMDEL
 Sect OctLoc
   0    7230   400000 200000   000000 006014                                    ........

DD_SYMLIST
 Sect OctLoc
   0    7232   400000 200000   000000 006014                                    ........

DD_INSTR_CONT
 Sect OctLoc
   0    7234   400000 200000   000000 006014                                    ........

DD_CNR2
 Sect OctLoc
   0    7236   400000 200000   000000 006000                                    ........

DD_BASE
 Sect OctLoc
   0    7240   400000 200000   000000 006000                                    ........

DD_BASE1
 Sect OctLoc
   0    7242   400000 200000   000000 006000                                    ........

DD_BASEDIG
 Sect OctLoc
   0    7244   400000 200000   000000 006000                                    ........

PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:112  
DD_BASEBOTH
 Sect OctLoc
   0    7246   400000 200000   000000 006000                                    ........

DD_INSTR
 Sect OctLoc
   0    7250   400000 200000   000000 006000                                    ........

DD_DUMP
 Sect OctLoc
   0    7252   400000 200000   000000 006000                                    ........

DD_ECHO
 Sect OctLoc
   0    7254   400000 200000   000000 006000                                    ........

DD_KEEP
 Sect OctLoc
   0    7256   400000 200000   000000 006000                                    ........

DD_IGNORE
 Sect OctLoc
   0    7260   400000 200000   000000 006000                                    ........

DD_TRAP
 Sect OctLoc
   0    7262   400000 200000   000000 006000                                    ........

DD_OUTPUT
 Sect OctLoc
   0    7264   400000 200000   000000 006000                                    ........

DD_READ
 Sect OctLoc
   0    7266   400000 200000   000000 006000                                    ........

DX_VARCOM_BUF
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:113  
 Sect OctLoc
   0    7270   ****** ******   ****** ******   ****** ******   ****** ******    ................

S_D$
 Sect OctLoc
   1     000   000000 006000                                                    ....

S_D_SEG$
 Sect OctLoc
   1     001   000000 006000                                                    ....

S_D_ACCESS$
 Sect OctLoc
   1     002   000016 006000                                                    ....

S_D_ASTACKOFF$
 Sect OctLoc
   1     003   004670 006000                                                    ....

S_D_ANLZ$
 Sect OctLoc
   1     004   004756 006000                                                    ....

S_D_BREAK$
 Sect OctLoc
   1     005   000026 006000                                                    ....

S_D_DO_SCAN$
 Sect OctLoc
   1     006   000017 006000                                                    ....

S_D_ERROR$
 Sect OctLoc
   1     007   000013 006000                                                    ....

S_D_FAULTCMD$$
 Sect OctLoc
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:114  
   1     010   000004 006000                                                    ....

S_D_FAULTINS$$
 Sect OctLoc
   1     011   000003 006000                                                    ....

S_D_GOIC$
 Sect OctLoc
   1     012   000001 006000                                                    ....

S_D_GO_MODE$
 Sect OctLoc
   1     013   000020 006000                                                    ....

S_D_IXFIX$
 Sect OctLoc
   1     014   000015 006000                                                    ....

S_D_IPRFLT$
 Sect OctLoc
   1     015   005326 006000                                                    ....

S_D_REM_ACCESS$
 Sect OctLoc
   1     016   000024 006000                                                    ....

S_D_REM_DO_SCAN$
 Sect OctLoc
   1     017   000022 006000                                                    ....

S_D_REM_DISKBOOT$
 Sect OctLoc
   1     020   000710 006000                                                    ....

S_D_RETURNN$
 Sect OctLoc
   1     021   000012 006000                                                    ....
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:115  

S_D_SAD$
 Sect OctLoc
   1     022   005255 006000                                                    ....

S_D_SAVEIC$
 Sect OctLoc
   1     023   000002 006000                                                    ....

S_D_TCB$$
 Sect OctLoc
   1     024   004751 006000                                                    ....

S_D_UREG$$
 Sect OctLoc
   1     025   000045 006000                                                    .%..

S_D_USS$$
 Sect OctLoc
   1     026   000005 006000                                                    ....

S_D_HOST_MESSAGE$
 Sect OctLoc
   1     027   006435 006000                                                    ....

S_D_L6_MESSAGE$
 Sect OctLoc
   1     030   006605 006000                                                    ....

S_D_HW_RES_MEM$
 Sect OctLoc
   1     031   007102 006000                                                    .B..

S_D_HW_WSQ0PT$
 Sect OctLoc
   1     032   007104 006000                                                    .D..

PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:116  
S_D_HW_PTB_UNITS$
 Sect OctLoc
   1     033   007103 006000                                                    .C..

DD_MODE_NODE_PTR$
 Sect OctLoc
   1     034   007256 006000   007262 006000   007260 006000   007240 006000    ................
   1     040   007242 006000   007244 006000   007246 006000   007250 006000    ................
   1     044   007236 006000                                                    ....

DD_HOST_NODE_PTR$
 Sect OctLoc
   1     045   000000 006000   000000 006000   000000 006000   000000 006000    ................
   1     055*  000000 006000                                                    ....

DD_L6_NODE_PTR$
 Sect OctLoc
   1     056   000000 006000   000000 006000   000000 006000   000000 006000    ................
   1     066*  000000 006000                                                    ....

DD_L6X_NODE_PTR$
 Sect OctLoc
   1     067   000000 006000                                                    ....

DD_COMP_NODE_PTR$
 Sect OctLoc
   1     070   007204 006000   007206 006000   007210 006000   007216 006000    ................
   1     074   007212 006000   007214 006000   007220 006000   007222 006000    ................
   1     100   007224 006000   007226 006000   007230 006000   007232 006000    ................

DD_SYN_PL6
 Sect OctLoc
   1     104   000000 006000   000000 006000   000000 006000   000000 006000    ................
   1     114*  000000 006000   000000 006000   000000 006000   000000 006000    ................

DD_SYN_FORT
 Sect OctLoc
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:117  
   1     120   000000 006000   000000 006000   000000 006000   000000 006000    ................
   1     130*  000000 006000   000000 006000   000000 006000   000000 006000    ................

DD_SYN_CC
 Sect OctLoc
   1     134   000000 006000   000000 006000   000000 006000   000000 006000    ................
   1     144*  000000 006000   000000 006000   000000 006000   000000 006000    ................

DD_SYN_COBOL
 Sect OctLoc
   1     150   000000 006000   000000 006000   000000 006000   000000 006000    ................
   1     160*  000000 006000   000000 006000   000000 006000   000000 006000    ................

DD_COMPNODE$
 Sect OctLoc
   1     164   000104 006000   000104 006000   000120 006000   000150 006000    .D...D...P...h..
   1     170   000104 006000   000104 006000   000104 006000   000104 006000    .D...D...D...D..
   1     174   000150 006000   000104 006000   000104 006000   000104 006000    .h...D...D...D..
   1     200   000104 006000   000134 006000                                    .D...\..

DX_VARCOM$
 Sect OctLoc
   1     202   007270 006000                                                    ....

DX_VARCOM_HIGH$
 Sect OctLoc
   1     203   011240 006000                                                    ....
        1        1        /*M* DX_SD_D "Static" data definitions for XDelta */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,DFC */
        8        8                                                /**/
        9        9        DX_SD_D: PROC;
       10       10                                                /**/
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:118  
       11       11        %INCLUDE XUH_MACRO_C;
       12       95        %INCLUDE DD_SD_M;
       13     1431        %SET LISTMAC='1'B;
       14     1432        %SET LISTEXP='1'B;
       15     1433        %SET LISTCOM='1'B;
       16     1434        %SET LISTSUB='1'B;
       17     1435        %S_D(NAME=S_D, STCLASS="STATIC SYMDEF");
              1436        %LSET STR='STA';
              1437        %IF '1'B;
              1438         %LSET INIT=INIT;
              1439         %LSET EINIT= ;
              1440        %ELSE;
              1443        %ENDIF;
              1444    1   DCL 1 S_D STATIC SYMDEF ALIGNED,
              1445    1         2 INITED BIT(1) INIT('0'B)  UNAL,
              1446                /*B* INITED - Set if DELTA has been initialized */
              1447    1         2 * BIT(35) INIT('0'B)  UNAL,
              1448    1         2 GOIC UBIN,
              1449                /* IC VALUE USED TO RETURN TO THE USERS PROGRAM */
              1450    1         2 SAVEIC UBIN,
              1451                /* USER'S LAST IC VALUE  */
              1452    1         2 FAULTINS$ PTR,
              1453                /* PTR TO INSTRUCTION WHICH CAUSED THE FAULT */
              1454    1         2 FAULTCMD$ PTR,
              1455                /* PTR TO DELTA COMMAND WHICH CAUSED THE FAULT */
              1456    1         2 USS$ PTR,
              1457                /* PTR TO SAFE-STORE FRAME */
              1458    1         2 SL$ PTR,
              1459                /* SPECIAL LOCATION IN USERS PROGRAM ALLOCATED BY LINKER */
              1460    1         2 SLP1$ PTR,
              1461                /* SPECIAL LOCATION + 1, USED FOR TRANSFER SAVEIC+1 */
              1462    1         2 SL UBIN,
              1463                /* IC OF SPECIAL LOCATION */
              1464    1         2 EWSQ# SBIN,
              1465                /* EFFECTIVE WORKING SPACE QUARTER OF THE FAULT */
              1466    1         2 RETURNN SBIN,
              1467                /* FLAG FOR USERGO, INDICATING FAULT/RETURN */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:119  
              1468    1         2 ERROR UBIN(36),
              1469                /* ERROR NUMBER */
              1470    1         2 OUT_WIDTH SBIN,
              1471                /* OUTPUT DEVICE WIDTH */
              1472    1         2 IXFIX SBIN,
              1473                /* INDEX OF STORED COMMAND WHICH PRODUCED THIS FAULT */
              1474    1         2 ACCESS BIT(1) ALIGNED,
              1475                /* USER ACCESS FLAG */
              1476    1         2 DO_SCAN BIT(1) ALIGNED,
              1477                /* XDELTA IN DO/SCAN EXECUTION CYCLE */
              1478    1         2 GO_MODE BIT(1) ALIGNED,
              1479                /* STOP/GO MODE FLAG */
              1480    1         2 REM_DO_SCAN REMEMBER,
              1481                /* REMEMBER AUTO AND LABEL INCASE OF FAULT IN DELTA */
              1482    1         2 REM_ACCESS REMEMBER,
              1483                /* REMEMBER AUTO AND LABEL IN CASE OF FAULT ACCESSING USER */
              1484    1         2 BREAK BIT(1) ALIGNED,
              1485                /* BREAK KEY FLAG */
              1486    1         2 TIC SBIN,
              1487                /* LOCATION OF FAULT-CAUSING INSTRUCTION */
              1488    1         2 FAULT SBIN,
              1489                /* FAULT CODE FROM SAFE-STORE */
              1490    1         2 DO$ PTR,
              1491                /* PTR TO COMMAND WHICH IS TO BE 'DONE' IN SOME DO ROUTINE */
              1492    1         2 ERROR_SYM$ PTR,
              1493                /* TOKEN FOR ERROR MSG (TEXTC FORMAT) */
              1494    1         2 VARNEXT$ PTR,
              1495                /* PTR TO NEXT AVAILABLE WORD IN VARCOM AREA */
              1496    1         2 SV,
              1497                /* Value type special symbols */
              1498    1           3 HIGH SBIN,
              1499                  /* High limit for FIND/ZERO */
              1500    1           3 LOW SBIN,
              1501                  /* Low limit for FIND/ZERO */
              1502    1           3 MASK SBIN,
              1503                  /* Mask for FIND/ZERO */
              1504    1           3 DELENT SBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:120  
              1505                  /* Entry type code '$ENT$
              1506                         Value:
              1507                            1 - Program EXIT
              1508                            2 - Program TRAP
              1509                            3 - LIBRARY detected error
              1510                            4 - MONITOR detected error
              1511                            5 - M$SEGLD
              1512                            6 - BREAK
              1513                            7 - TRAP in DELTA
              1514                                                            */
              1515    1           3 IOBUFSZ SBIN,
              1516                  /* Size for IOBUF last read/next write */
              1517    1         2 SPEC(0:4) REDEF SV SBIN,
              1518                /* ARRAY ACCESS TO SPECIAL SYMBOLS */
              1519    1         2 DESC$ PTR,
              1520                /* POINTER WHERE TO START BUILDING DATA DESCRIPTOR */
              1521    1         2 DESCL$ PTR,
              1522                /* POINTER TO 1ST WORD BEYOND DESCR$ */
              1523    1         2 SCHSEG_BEGIN$ PTR,
              1524                /* Pointer to beginning of schema in data segment */
              1525    1         2 D$ PTR,
              1526                /* POINTER TO 1ST WORD BEYOND WHERE BUILDING STOPPED */
              1527    1         2 UREG$ PTR,
              1528                /* POINTS TO USER REGS (Xn, A, Q, E, IND) */
              1529    1         2 IND$ PTR,
              1530                /* POINTS TO INDICATOR REGISTER */
              1531    1         2 FIXLAST SBIN,
              1532                /* LAST ALLOCATED SLOT IN FIXCOM */
              1533    1         2 STOP BIT(1) ALIGNED,
              1534                /* FLAG STOP ENCOUNTERED IN ATTACHMENTS */
              1535    1         2 RUM_SKIP BIT(1) ALIGNED,
              1536                /* RUM skip flag - while RUMing system processors */
              1537    1         2 SCHEMA BIT(1) ALIGNED,
              1538                /* SCHEMA FLAG */
              1539    1         2 DEBUGA(0:35) BIT(1) UNAL,
              1540                /* Internal debug flags */
              1541    1         2 DEBUGF REDEF DEBUGA UBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:121  
              1542                /* Internal debug flags as a word */
              1543    1         2 SIMBLEOK BIT(1) ALIGNED,
              1544                /* SIMBLE REFERENCE OK FOR SIMEXP/SDO */
              1545    1         2 IFSPEC$ PTR,
              1546                /* POINTER TO IFSPEC NODE IF PRESENT, ELSE ADDR(NIL) */
              1547    1         2 SDOS BIT(1) ALIGNED,
              1548                /* SDO SIMBLE ENCOUNTERED */
              1549    1         2 SDOD BIT(1) ALIGNED,
              1550                /* SDO DECIMAL ENCOUNTERED */
              1551    1         2 SDOO BIT(1) ALIGNED,
              1552                /* SDO OCTIL ENCOUNTERED */
              1553    1         2 SDOSDEF BIT(1) ALIGNED,
              1554                /* SDO SEARCH SYMDEFS BEFORE ENTDEFS */
              1555    1         2 RANGE_CNT SBIN,
              1556                /* COUNT OF RANGE SPECIFICATIONS IN DISPLAY REQUEST */
              1557    1         2 KILL1 SBIN,
              1558                /* ID OF COMMAND TO BE KILLED FOR DDA$KILL1 */
              1559    1         2 SHOW1 SBIN ALIGNED,
              1560                /* ID OF COMMAND TO BE 'SHOWN' FOR DDA$SHOW1 */
              1561    1         2 NCHARS SBIN,
              1562                /* NUMBER OF CHARACTERS READ FROM INPUT DEVICE */
              1563    1         2 SAVE_TEXT_STPOS UBIN,
              1564                /* Save starting position of text for data descriptor */
              1565    1         2 ALIB_SAID_ECHO BIT(1) ALIGNED,
              1566                /* ECHO parameter in ALIB fpt set - echo ALIB command */
              1567    1         2 ALIB_SAID_QUIET BIT(1) ALIGNED,
              1568                /* QUIET parameter in ALIb fpt set - used for PLOVER only */
              1569    1         2 HEAD_LIB BIT(1) ALIGNED,
              1570                /* LIB bit in Head record */
              1571    1         2 RUM_COMMAND BIT(1) ALIGNED,
              1572                /* Set if RUM command was processed */
              1573    1         2 FIND_RUM BIT(1) ALIGNED,
              1574                /* Set if do FIND in RUM mode - ignore errors from DUU$GETMVAL */
              1575    1         2 BYPASS_SAVE BIT(1) ALIGNED,
              1576                /* Save BYPASS flag */
              1577    1         2 ALIB_SAID_GOBACK BIT(1) ALIGNED,
              1578                /* RETRN parameter in ALIB fpt */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:122  
              1579    1         2 FPRG_CONTEXT$ PTR,
              1580                /* Pointer to the first entry for FPRG context, ADDR(NIL) means no FPRGS */
              1581    1         2 FPRG_CONTEXT_END$ PTR,
              1582                /* Pointer to the last entry for FPRG context, ADDR(NIL) means no FPRGS */
              1583    1         2 FPRGDCB UBIN,
              1584                /* FPRG dcb */
              1585    1         2 FPRG BIT(1) ALIGNED,
              1586                /* Set when debugging an FPRG */
              1587    1         2 CURRENT_FPRG_CONTEXT$ PTR,
              1588                /* Pointer to currently active FPRG's context */
              1589    1         2 FPRG_CONTEXT_AVAIL$ PTR,
              1590                /* Pointer to the list of available slots for FPRG context */
              1591    1         2 FPRG_CONTEXT_AVAIL_END$ PTR,
              1592                /* Pointer to the end of the list of available slots for FPRG context */
              1593    1         2 KILLEDEF BIT(1) ALIGNED,
              1594                /* Tell POSIT not to use ENTDEFS */
              1595    1         2 L$,
              1596                /* For retaining info about $L (last item typed) */
              1597    1           3 VALUE DALIGNED,
              1598    1             4 L SBIN,
              1599    1             4 E REDEF L UBIN(18) ALIGNED,
              1600    1             4 HLF(0:1)  REDEF L UBIN(18) UNAL,
              1601    1             4 R SBIN,
              1602    1             4 * (0:13) UBIN,
              1603    1           3 PVALUE REDEF VALUE,
              1604    1             4 W UBIN(18) UNAL,
              1605    1             4 C UBIN(2) UNAL,
              1606    1             4 B UBIN(4) UNAL,
              1607    1             4 SEG,
              1608    1               5 S UBIN(2) UNAL,
              1609    1               5 D UBIN(10) UNAL,
              1610    1             4 * (0:14) UBIN,
              1611    1           3 VB REDEF VALUE,
              1612    1             4 VBITS(0:71) UBIN(1) UNAL,
              1613    1             4 * (0:13) UBIN UNAL,
              1614    1           3 VC REDEF VALUE,
              1615    1             4 VCHARS(0:7) CHAR(1) UNAL,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:123  
              1616    1             4 * (0:13) UBIN UNAL,
              1617    1           3 CV REDEF VALUE,
              1618    1             4 CVALUE CHAR(8),
              1619    1             4 * (0:13) UBIN UNAL,
              1620    1           3 L6_VALUE REDEF VALUE,
              1621    1             4 OPS(0:15) UBIN,
              1622    1           3 SIZE SBIN,
              1623    1           3 FMT UBIN,
              1624    1         2 O$,
              1625                /* For retaining info about $O (current open cell) */
              1626    1           3 SEG UBIN,
              1627    1           3 DESC# UBIN,
              1628    1           3 ADDRESS UBIN,
              1629    1           3 NOT_IS BIT(1) HALIGNED,
              1630    1           3 FMT UBIN(18) HALIGNED,
              1631    1         2 LASTBLT$ PTR,
              1632                /* PTR TO BEGINNING OF CURRENT COMMAND BEING BUILT */
              1633    1         2 STORED SBIN,
              1634                /* CURRENT STORED COMMAND BEING BUILT */
              1635    1         2 OP SBIN,
              1636                /* START OPERATOR FOR SIMEXP */
              1637    1         2 ACCUM SBIN,
              1638                /* START ACCUMULATOR FOR SIMEXP */
              1639    1         2 UD(0:24),
              1640                /* USER DEFINED SYMBOLS */
              1641    1           3 VALUE SBIN,
              1642    1           3 TEXTSZ UBIN(9) UNAL,
              1643    1           3 TEXT CHAR(31) UNAL,
              1644    1         2 SACT BIT(1) ALIGNED,
              1645                /* Special activation character terminated last read flag */
              1646    1         2 RUM_BIRTH$ PTR,
              1647                /* Pointer to RUM birth record */
              1648    1         2 ACT CHAR(1) ALIGNED,
              1649                /* Activation character that terminated last read */
              1650    1         2 IGNPR BIT(1) ALIGNED,
              1651                /* Ignore PR modification for BLD routines */
              1652    1         2 AWDX BIT(1) ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:124  
              1653                /* AWDX type PR modification for BLD routines */
              1654    1         2 REMACTIVE BIT(1) ALIGNED,
              1655                /* DDS$SCAN <--> DDS$BLD communication */
              1656    1         2 ACMDS_OFF UBIN,
              1657                /* Offset to text remaining after parse with D_ACMDS tree */
              1658    1         2 ACMDS$ PTR,
              1659                /* Pointer to buffer to be scanned with D_ACMDS tree */
              1660    1         2 ACMDS_SIZE UBIN,
              1661                /* Size of buffer pointed to by S_D.ACMDS$ */
              1662    1         2 DO_ATTACH UBIN,
              1663                /* Number of times DDA$DO_ATTACH has been called */
              1664    1         2 FNDOFFSET BIT(1) ALIGNED,
              1665                /* Set by DDR$POSIT if offset was printed (set if 0) */
              1666    1         2 RUM_ERRORS UBIN,
              1667                /* Count of errors while RUMing current run unit */
              1668    1         2 RUM_TOTAL_ERRORS UBIN,
              1669                /* Total RUM errors for all run units */
              1670    1         2 RCBC,
              1671                /* RUM cache buffer control */
              1672    1           3 WRITE_THRU BIT(1) ALIGNED,
              1673                  /* Whether to write-thru buffers */
              1674    1           3 CUR_SEQ UBIN,
              1675                  /* LRU sequence counter */
              1676    1           3 BUFSIZE SBIN,
              1677                  /* Size of each buffer */
              1678    1           3 BUFSM1 UBIN,
              1679                  /* Number of buffers in use, minus 1 */
              1680    1           3 BUF$(0:9) PTR,
              1681                  /* Pointer to buffer for program records */
              1682    1           3 PAGE(0:9) SBIN,
              1683                  /* Beginning page word address of contents of BUF$ */
              1684    1           3 SIZE(0:9) SBIN,
              1685                  /* Size of contents of BUF$, -1 means empty */
              1686    1           3 WRITTEN(0:9) BIT(1) HALIGNED,
              1687                  /* Whether buffer was ever written */
              1688    1           3 NODE(0:9) UBIN HALF HALIGNED,
              1689                  /* Current node for contents of BUF$ */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:125  
              1690    1           3 SEQ(0:9) UBIN,
              1691                  /* Last time this buffer was used */
              1692    1         2 JDCBERR UBIN,
              1693                /* DCB of error corresponding to S_D.JITERR for DUE$HERRMSG */
              1694    1         2 GHOST1 BIT(1) ALIGNED,
              1695                /* RUMing system processors/USE GHOST1 */
              1696    1         2 M$DELTA_RES CHAR(4) UNAL,
              1697                /* Default RES for M$DELTA */
              1698    1         2 * CHAR(3) UNAL,
              1699                /* Padding preceeding vfc character */
              1700    1         2 IBUFVFC CHAR(1) UNAL,
              1701                /* Vfc immediately preceeding input buffer */
              1702    1         2 INPUT CHAR(256) ALIGNED,
              1703                /* Input buffer, on word boundary, following vfc */
              1704    1         2 REM_DISKBOOT REMEMBER,
              1705                /* Unwind remember cell for XDELTA disk boot */
              1706    1         2 QUALIFIED BIT(1) ALIGNED,
              1707                /* QUALIFICATION FOUND */
              1708    1         2 MACTIVE BIT(1) ALIGNED,
              1709                /* MODIFY ACTIVE */
              1710    1         2 OFFSET_REF BIT(1) ALIGNED,
              1711                /* OFFSET REFERENCE ENCOUNTERED FOR SKIP COMMAND */
              1712    1         2 ARRAY,
              1713                /* Array processing control info */
              1714    1           3 FIRST BIT(1) ALIGNED,
              1715    1           3 CUR SBIN,
              1716    1           3 HIGH SBIN,
              1717    1         2 ISBASE UBIN ALIGNED,
              1718               /* Shrunken IS offset or 0 */
              1719    1         2 FNDENTDEF BIT(1) ALIGNED,
              1720                /* BIT SET BY DDR$POSIT FOR MODIFY DEFAULT FMT */
              1721    1         2 STEP BIT(1) ALIGNED,
              1722                /* WAS STEP LAST COMMAND ? 1=YES */
              1723    1         2 FMT_DEFAULT UBIN,
              1724                /* USER SPECIFIED DEFAULT FORMAT */
              1725    1         2 SCH,
              1726                /* Current schema */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:126  
              1727    1           3 OK BIT(1) ALIGNED,
              1728                  /* 1= Schema exists */
              1729    1           3 PEDEF# UBIN,
              1730                  /* Primary entdef number */
              1731    1           3 NODE UBIN,
              1732                  /* Node */
              1733    1           3 NPOINTER UBIN,
              1734                  /* Primary entdef name pointer */
              1735    1           3 IC UBIN,
              1736                  /* Instruction counter value */
              1737    1           3 LB# UBIN,
              1738                  /* Logical block number */
              1739    1           3 PTR$ PTR,
              1740                  /* XDELTA pointer to in memory schema */
              1741    1         2 QSCH,
              1742                /* Qualified schema */
              1743    1           3 OK BIT(1) ALIGNED,
              1744                  /* 1= Schema exists */
              1745    1           3 PEDEF# UBIN,
              1746                  /* Primary entdef number */
              1747    1           3 NODE UBIN,
              1748                  /* Node */
              1749    1           3 NPOINTER UBIN,
              1750                  /* Primary entdef name pointer */
              1751    1           3 IC UBIN,
              1752                  /* Instruction counter value */
              1753    1           3 LB# UBIN,
              1754                  /* Logical block number */
              1755    1           3 PTR$ PTR,
              1756                  /* XDELTA pointer to in memory schema */
              1757    1         2 DSCH,
              1758                /* Default schema */
              1759    1           3 OK BIT(1) ALIGNED,
              1760                  /* 1= Schema exists */
              1761    1           3 PEDEF# UBIN,
              1762                  /* Primary entdef number */
              1763    1           3 NODE UBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:127  
              1764                  /* Node */
              1765    1           3 NPOINTER UBIN,
              1766                  /* Primary entdef name pointer */
              1767    1           3 IC UBIN,
              1768                  /* Instruction counter value */
              1769    1           3 LB# UBIN,
              1770                  /* Logical block number */
              1771    1           3 PTR$ PTR,
              1772                  /* XDELTA pointer to in memory schema */
              1773    1         2 XSCH,
              1774                /* Last resort schema */
              1775    1           3 OK BIT(1) ALIGNED,
              1776                  /* 1= Schema exists */
              1777    1           3 PEDEF# UBIN,
              1778                  /* Primary entdef number */
              1779    1           3 NODE UBIN,
              1780                  /* Node */
              1781    1           3 NPOINTER UBIN,
              1782                  /* Primary entdef name pointer */
              1783    1           3 IC UBIN,
              1784                  /* Instruction counter value */
              1785    1           3 LB# UBIN,
              1786                  /* Logical block number */
              1787    1           3 PTR$ PTR,
              1788                  /* XDELTA pointer to in memory schema */
              1789    1         2 TSCH,
              1790                /* Temporary schema */
              1791    1           3 OK BIT(1) ALIGNED,
              1792                  /* 1= Schema exists */
              1793    1           3 PEDEF# UBIN,
              1794                  /* Primary entdef number */
              1795    1           3 NODE UBIN,
              1796                  /* Node */
              1797    1           3 NPOINTER UBIN,
              1798                  /* Primary entdef name pointer */
              1799    1           3 IC UBIN,
              1800                  /* Instruction counter value */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:128  
              1801    1           3 LB# UBIN,
              1802                  /* Logical block number */
              1803    1           3 PTR$ PTR,
              1804                  /* XDELTA pointer to in memory schema */
              1805    1         2 MXSCH,
              1806                /* Last resort schema for MON */
              1807    1           3 OK BIT(1) ALIGNED,
              1808                  /* 1= Schema exists */
              1809    1           3 PEDEF# UBIN,
              1810                  /* Primary entdef number */
              1811    1           3 NODE UBIN,
              1812                  /* Node */
              1813    1           3 NPOINTER UBIN,
              1814                  /* Primary entdef name pointer */
              1815    1           3 IC UBIN,
              1816                  /* Instruction counter value */
              1817    1           3 LB# UBIN,
              1818                  /* Logical block number */
              1819    1           3 PTR$ PTR,
              1820                  /* XDELTA pointer to in memory schema */
              1821    1         2 AXSCH,
              1822                /* Last resort schema for ALT */
              1823    1           3 OK BIT(1) ALIGNED,
              1824                  /* 1= Schema exists */
              1825    1           3 PEDEF# UBIN,
              1826                  /* Primary entdef number */
              1827    1           3 NODE UBIN,
              1828                  /* Node */
              1829    1           3 NPOINTER UBIN,
              1830                  /* Primary entdef name pointer */
              1831    1           3 IC UBIN,
              1832                  /* Instruction counter value */
              1833    1           3 LB# UBIN,
              1834                  /* Logical block number */
              1835    1           3 PTR$ PTR,
              1836                  /* XDELTA pointer to in memory schema */
              1837    1         2 DBG$ PTR,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:129  
              1838                /* Debug names record page buffer, ADDR(NIL) means none */
              1839    1         2 DBG_LAST UBIN,
              1840                /* Last entry number */
              1841    1         2 DBG_PAGE SBIN,
              1842                /* Current page in memory, -1 means none */
              1843    1         2 EXST$ PTR,
              1844                /* Executable statements record page buffer */
              1845    1         2 EXST_END$ PTR,
              1846                /* Last entry pointer */
              1847    1         2 EXST_PAGE SBIN,
              1848                /* Current page in memory, -1 means none */
              1849    1         2 IE$ PTR,
              1850                /* Internal entrys record page buffer */
              1851    1         2 IE_END$ PTR,
              1852                /* Last entry pointer */
              1853    1         2 IE_PAGE SBIN,
              1854                /* Current page in memory, -1 means none */
              1855    1         2 VREBL$ PTR,
              1856                /* Program variables record page buffer */
              1857    1         2 VREBL_END$ PTR,
              1858                /* Last entry pointer */
              1859    1         2 VREBL_PAGE SBIN,
              1860                /* Current page in memory, -1 means none */
              1861    1         2 XOU_NAME,
              1862                /* Default schema OU name - Textc */
              1863    1           3 SIZE UBIN BYTE UNAL,
              1864    1           3 TEXT CHAR(31) UNAL,
              1865    1         2 RANGE SBIN,
              1866                /* OFFSET RANGE FOR USER DEFINED SYMBOLS DISPLAYS */
              1867    1         2 BYPASS BIT(1) ALIGNED,
              1868                /* STEP BYPASS FLAG */
              1869    1         2 PARSIZE UBIN,
              1870                /* Size of X$PARSE work buffer */
              1871    1         2 SCHSEG$ PTR,
              1872                /* Next unallocated word of data segment containing schema */
              1873    1         2 LB0$ PTR,
              1874                /* Pointer to LB0 */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:130  
              1875    1         2 LB1$ PTR,
              1876                /* Pointer to LB1 */
              1877    1         2 LB$ PTR,
              1878                /* Pointer to start of "real" logical block table */
              1879    1         2 LB_EYOND$ PTR,
              1880                /* Pointer off of end of logical block table */
              1881    1         2 DNAME$ PTR,
              1882                /* DEF names record */
              1883    1         2 EDEF$ PTR,
              1884                /* ENTDEFs record */
              1885    1         2 SDEF$ PTR,
              1886                /* SYMDEFs record */
              1887    1         2 EDEF_END$ PTR,
              1888                /* ENTDEFs record end */
              1889    1         2 SDEF_END$ PTR,
              1890                /* SYMDEFs record end */
              1891    1         2 DIRCOM(0:99) UBIN,
              1892                /* Direct command buffer */
              1893    1         2 FIXCOM(0:299),
              1894                /* Fixed length part of stored commands buffer */
              1895    1           3 CMD UBIN(9) UNAL,
              1896    1           3 INACTIVE BIT(1) UNAL,
              1897    1           3 SILENT BIT(1) UNAL,
              1898    1           3 NOT_IN BIT(1) UNAL,
              1899    1           3 * BIT(4) UNAL,
              1900    1           3 FPRG BIT(1) UNAL,
              1901    1           3 USER BIT(1) UNAL,
              1902    1           3 TAL UBIN HALF UNAL,
              1903    1            3 CDF UBIN UNAL,
              1904    1            3 * UBIN HALF UNAL,
              1905    1           3 FAI UBIN HALF UNAL,
              1906    1           3 FPRG_RES CHAR(8) UNAL,
              1907    1           3 FPRG_RES_SIZE UBIN UNAL,
              1908    1         2 VARCOM$ PTR,
              1909                /* Pointer to variable length part of stored commands buffer */
              1910    1         2 VARCOM_HIGH$ PTR,
              1911                /* Pointer to highest word allocated in the data segment for VARCOM */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:131  
              1912    1         2 STAND_ALONE BIT(1) ALIGNED,
              1913                /* 1= No program associated */
              1914    1         2 BATCH BIT(1) ALIGNED,
              1915                /* Batch flag (yes=1) */
              1916    1         2 K$EEP,
              1917    1           3 TYPE UBIN,
              1918                /* KEEP FAULTS mode */
              1919    1         2 TR$INFO,
              1920                /* TRACE STUFF, IF TYPE=TT, SEE ALSO T$T */
              1921    1           3 SET BIT(1) ALIGNED,
              1922                  /* SET IF ANY OF THIS STUFF IS VALID, RESET BY KILL TRACE */
              1923    1           3 ACTIVE BIT(1) ALIGNED,
              1924                  /* SET BY TRACE ON, OR BY WHEN EVER A NEW TRACE TYPE IS SET */
              1925    1           3 SILENT BIT(1) ALIGNED,
              1926                  /* BUILD HIST BUFFER ONLY */
              1927    1           3 X BIT(1) ALIGNED,
              1928                  /* EXTERNAL */
              1929    1           3 P BIT(1) ALIGNED,
              1930                  /* PREFIXED */
              1931    1           3 TYPE UBIN,
              1932                  /* TRACE TYPE COMMAND CODE */
              1933    1           3 PSIZ UBIN,
              1934                  /* PREFIX SIZE */
              1935    1           3 PTXT CHAR(24) UNAL,
              1936                  /* THE PREFIX */
              1937    1           3 USE_TYPE UBIN WORD,
              1938                  /* For XDELTA, USER or MON */
              1939    1           3 USE_DOM UBIN WORD,
              1940                  /* For XDELTA, if USER, DOMAIN */
              1941    1         2 X$EQ,
              1942                /* X$EQ frame */
              1943    1           3 ACTIVE BIT(1) ALIGNED,
              1944    1           3 LOC UBIN,
              1945    1           3 INS_LENGTH UBIN,
              1946    1           3 SAVED UBIN,
              1947    1           3 INS(0:3) UBIN,
              1948    1         2 ACTUALIC UBIN ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:132  
              1949                /* IC from TCB frame without ISBASE added */
              1950    1         2 E$IS,
              1951                /* E$IS frame */
              1952    1           3 ACTIVE BIT(1) ALIGNED,
              1953    1           3 LOC UBIN,
              1954    1           3 SAVED UBIN,
              1955    1           3 C,
              1956    1             4 JUNK(0:1) UBIN,
              1957    1         2 SDOH BIT(1) ALIGNED,
              1958                /* SDO HEXIL Encountered */
              1959    1         2 DEBUG_CMD BIT(1) ALIGNED,
              1960                /* Bit indicating that a DEBUG fprg command has been given to DELTA */
              1961    1         2 DEBUG_CMD_CONTEXT$ PTR,
              1962                /* Pointer to fprg context for the fprg in the DEBUG command */
              1963    1         2 PEDEF UBIN,
              1964                /* TEMP CELL FOR HOLDING PRIM ENTDEF # OF THIS ITEM IN DDESC */
              1965    1         2 ASTACKOFF UBIN,
              1966                /* TEMP CELL FOR HOLDING STACK OFFSET FOR CURRENT AUTO REFERENCE */
              1967    1         2 REM UBIN,
              1968                /* REMainder for DDR$MOVE */
              1969    1         2 CURPOS UBIN,
              1970                /* CURrent POSition for DDR$MOVE */
              1971    1         2 SNAP_TAKEN BIT(1) ALIGNED,
              1972                /* Snap dump already taken flag for DUX$XCON1 */
              1973    1         2 DID_ATTACH BIT(1) ALIGNED,
              1974                /* Set when an AT on ONCALL breakpoint is hit with
              1975                   a true condition.  Used to avoid duplicate reporting
              1976                   when ONCALLS hits same spot.  Set by DDA$DELTA,
              1977                   reset by DDA$GO. */
              1978    1         2 DIRECT_SIZE UBIN,
              1979                /* Size of direct text buffer (S_D.DIRECT_TEXT) */
              1980    1         2 DIRECT_OFF UBIN,
              1981                /* Current offset into direct text buffer */
              1982    1         2 DO_NESTING_LEVEL UBIN,
              1983                /* Current nesting level of DO commands */
              1984    1         2 ECCS DALIGNED,
              1985                /* ECCS   3-word block for M$DRTN fpt */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:133  
              1986    1           3 SUBC UBIN(36),
              1987                  /* ECC sub code */
              1988    1           3 EVID UBIN(36),
              1989                  /* Event id */
              1990    1           3 ERR  UBIN(36),
              1991                  /* error flags and stuff */
              1992    1         2 DRTN$ PTR,
              1993                /* Pointer to FPT$DRTN in DUA$DELTA auto */
              1994    1         2 SCHEMADCB UBIN ALIGNED,
              1995                /* Schema DCB for SCHEMA fid or Remote Debug or FANLZ */
              1996    1         2 NODE UBIN,
              1997                /* Node of active DEFs */
              1998    1         2 T$T,
              1999                /* TRACE TRANSFER STUFF */
              2000    1           3 ACTIVE BIT(1) ALIGNED,
              2001                  /* ACTIVE FLAG */
              2002    1           3 LOC_SAVED BIT(1) ALIGNED,
              2003                  /* LOC VALID FLAG */
              2004    1           3 RET_SAVED BIT(1) ALIGNED,
              2005                  /* FOR CLIMBS */
              2006    1           3 SHARED BIT(1) ALIGNED,
              2007                  /* Set when last transfer was into shared code */
              2008    1           3 SAVEINS UBIN,
              2009                  /* REPLACED INSTRUCTION */
              2010    1           3 SAVELOC UBIN(18) UNAL,
              2011                  /* IC OF SAVEINS */
              2012    1           3 RETLOC UBIN(18) UNAL,
              2013                  /* IC OF RETINS */
              2014    1           3 RETINS UBIN,
              2015                  /* FOR CLIMBS */
              2016    1         2 RESET_IN BIT(1) ALIGNED,
              2017                /* Set by DUX$BREAK, to stop read from FID */
              2018    1         2 HIST,
              2019                /* HISTORY BUFFER STUFF */
              2020    1           3 START$ PTR,
              2021                  /* POINTS AT FIRST AVAILABLE SPACE */
              2022    1           3 END$ PTR,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:134  
              2023                  /* POINTS AT LAST AVAILABLE SPACE */
              2024    1           3 CURR$ PTR,
              2025                  /* POINTS AT CURRENT ENTRY */
              2026    1           3 OUT$ PTR,
              2027                  /* POINTS AT NEXT OUTPUT ENTRY */
              2028    1           3 ROLLOVER BIT(1) ALIGNED,
              2029                  /* SET IF CURR$ HAS WRAPPED AROUND */
              2030    1           3 OUT_ACTIVE BIT(1) ALIGNED,
              2031                  /* SET IF HISTORY HAS BEEN OUTPUT SINCE LAST 'GO', RESET AT EACH 'GO' */
              2032    1           3 ACTIVE BIT(1) ALIGNED,
              2033                  /* SET IF HISTORY MODE HAS BEEN TURNED ON */
              2034    1           3 EMPTY BIT(1) ALIGNED,
              2035                  /* SET IF HISTORY BUFFER IS EMPTY */
              2036    1         2 KEEP ALIGNED,
              2037    1           3 FLAG(0:35) BIT(1) UNAL,
              2038    1         2 TRAP ALIGNED,
              2039    1           3 FLAG(0:35) BIT(1) UNAL,
              2040    1         2 IGNORE ALIGNED,
              2041    1           3 FLAG(0:35) BIT(1) UNAL,
              2042    1         2 DEBUG BIT(1) ALIGNED,
              2043                /* SET BY DICOFF, RESET BY DICON, USED TO CONTROL ENTRY TO DUD$MINI */
              2044    1         2 JDE UBIN,
              2045    1         2 JITERR REDEF JDE,
              2046    1           3 FCG BIT(12) UNAL,
              2047    1           3 MID BIT(6) UNAL,
              2048    1           3 MON BIT(1) UNAL,
              2049    1           3 CODE UBIN(14) UNAL,
              2050    1           3 SEV UBIN(3) UNAL,
              2051    1         2 LAST_NODE_LOADED UBIN,
              2052                /* USED BY EXECUTION CONTROL ROUTINES */
              2053    1         2 SILENT BIT(1) ALIGNED,
              2054                /*SILENT BREAKPOINT IN EFFECT, TELLS MODIFY NOT TO PRINT. */
              2055    1         2 EFMT_DEFAULT UBIN,
              2056                /* EVAL DEFAULT FORMAT */
              2057    1         2 SDOB BIT(1) ALIGNED,
              2058                /* Bit string found by DDS$SDO */
              2059    1         2 SDOOB BIT(1) ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:135  
              2060                /* Octal bit string found by DDS$SDO */
              2061    1         2 SDOT BIT(1) ALIGNED,
              2062                /* Text string found by DDS$SDO */
              2063    1         2 COPY BIT(1) ALIGNED,
              2064                /* Copy DO to UC flag */
              2065    1         2 ECHO BIT(1) ALIGNED,
              2066                /* Echo M$DELTA on DO */
              2067    1         2 ONABORT UBIN,
              2068                /* Cmd id in FIXCOM of ONABORT frame, 0 =none */
              2069    1         2 ONCALLS UBIN,
              2070                /* Cmd id in FIXCOM of ONCALLS frame, 0 =none */
              2071    1         2 ONEXIT UBIN,
              2072                /* Cmd id in FIXCOM of ONEXIT frame, 0 =none */
              2073    1         2 ONNODES UBIN,
              2074                /* Cmd id in FIXCOM of ONNODES frame, 0 =none */
              2075    1         2 NCMD$ PTR,
              2076                /* Ptr to head of current command parse output node */
              2077    1         2 TCB$ PTR,
              2078                /* Ptr to user's top TCB frame */
              2079    1         2 EOM BIT(1) ALIGNED,
              2080                /* Set if DELTA activation character set in effect */
              2081    1         2 ERROR_HICHAR UBIN UNAL,
              2082                /* PCB.HI_CHAR reported by X$PARSE */
              2083    1         2 PATCH BIT(1) ALIGNED,
              2084                /* SET IF THIS IS PATCH ENTRY FOR DELTA */
              2085    1         2 RUM BIT(1) ALIGNED,
              2086                /* SET DURING RUM MODE */
              2087    1         2 ANLZ BIT(1) ALIGNED,
              2088                /* SET BY DUA$ANLZ */
              2089    1         2 UNODE,
              2090                /* USE info for User DELTA */
              2091    1           3 CURRENT UBIN,
              2092                  /* Node of current IC */
              2093    1           3 USENODE UBIN,
              2094                  /* Node of USE NODE request */
              2095    1         2 TREE$ PTR,
              2096                /* CURRENT OVERLAY STATUS TREE */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:136  
              2097    1         2 MTREE$ PTR,
              2098                /* IN MEMORY TREE */
              2099    1         2 UTREE$ PTR,
              2100                /* USE TREE */
              2101    1         2 OVERLAID BIT(1) ALIGNED,
              2102                /* SET IF PROGRAM IS OVERLAID */
              2103    1         2 PADDR UBIN,
              2104                /* PROCEDURE START ADDRESS */
              2105    1         2 NODE#M1 UBIN,
              2106                /* NUMBER OF NODES, MINUS ONE */
              2107    1         2 B$TREE$ PTR,
              2108                /* PTR TO TREE TABLE IN READ-ONLY-SEGMENT */
              2109    1         2 B$TREEHDR$ PTR,
              2110                /* PTR TO TREE TABLE HEADER IN READ-ONLY-SEGMENT */
              2111    1         2 NODESEG_USED$ PTR,
              2112                /* Beyond current word allocated */
              2113    1         2 NODESEG_NEXT$ PTR,
              2114                /* Next word to be used */
              2115    1         2 GOTQUAL3 BIT(1) ALIGNED,
              2116                /* Set if QUAL3 (:) encountered by DDS$POSITION */
              2117    1         2 LMDCB UBIN,
              2118                /* Dcb used to access RU */
              2119    1         2 B$ROS$ PTR,
              2120                /* Pointer to RU/RUM read-only-segment */
              2121    1         2 RUMDCB UBIN,
              2122                /* RUM dcb */
              2123    1         2 RUMUTS UBIN,
              2124                /* UTS of current RUM command */
              2125    1         2 RUMSEQ UBIN,
              2126                /* Sequence of current RUM command */
              2127    1         2 RUM_HEAD$ PTR,
              2128                /* Pointer to RUM head record */
              2129    1         2 RUM_ROS$ PTR,
              2130                /* Pointer to RUM read-only-segment */
              2131    1         2 NODESEG$ PTR,
              2132                /* Pointer to start of overlay control tables */
              2133    1         2 RUM_TEST BIT(1) ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:137  
              2134                /* RUM test mode in effect */
              2135    1         2 WHEN_ASL BIT(1) ALIGNED,
              2136                /* ASL in control for WHEN */
              2137    1         2 UREG$_SAVE PTR,
              2138                /* Save pointer to User registers (Xn, A, Q, E, IND) */
              2139    1         2 DBGFEPDCB UBIN ALIGNED,
              2140                /* DCB for Remote Debug */
              2141    1         2 DLIB BIT(1) ALIGNED,
              2142                /* Set if XCON entered because of M$DLIB */
              2143    1         2 PIMAGE CHAR(120),
              2144                /* Patch print image buffer */
              2145    1         2 PCHARS UBIN,
              2146                /* Size of contents of S_D.PIMAGE */
              2147    1         2 PADDR_SAVE UBIN,
              2148                /* S_D.PADDR before RUMing */
              2149    1         2 SAVEIC_SAVE UBIN,
              2150                /* S_D.SAVEIC before RUMing */
              2151    1         2 ANLZ_FILE BIT(1) ALIGNED,
              2152                /* SET if ANLZ FID */
              2153    1         2 ANLZDCB UBIN,
              2154                /* Crash dump file dcb number */
              2155    1         2 GOT@ BIT(1) ALIGNED,
              2156                /* Set if B_PATCHIH found in root node */
              2157    1         2 NEXT@ UBIN,
              2158                /* Next IS address in patch space for procedure */
              2159    1         2 RSPACE@ SBIN,
              2160                /* Remaining patch space for procedure */
              2161    1         2 HEAD@ UBIN,
              2162                /* Offset to B_PATCHIH in user IS */
              2163    1         2 DEFINED@ BIT(1) ALIGNED,
              2164                /* Set if information in S_D about @ is currently defined */
              2165    1         2 GOT# BIT(1) ALIGNED,
              2166                /* Set if B_PATCHDH found in root node */
              2167    1         2 NEXT# UBIN,
              2168                /* Next IS address in patch space for data */
              2169    1         2 RSPACE# SBIN,
              2170                /* Remaining patch space for data */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:138  
              2171    1         2 HEAD# UBIN,
              2172                /* Offset to B_PATCHDH in user IS */
              2173    1         2 DEFINED# BIT(1) ALIGNED,
              2174                /* Set if information in S_D about # is currently defined */
              2175    1         2 RI$,
              2176    1           3 SIZE UBIN,
              2177    1           3 OPS(0:15) UBIN,
              2178                /* Replaced instruction value */
              2179    1         2 NA$ UBIN,
              2180                /* Next address (after TRA to @) */
              2181    1         2 ANLZRUM_IC UBIN,
              2182                /* Used during return to user by M$ALIB to remember schema ic */
              2183    1         2 POVALUE,
              2184    1           3 SIZE UBIN,
              2185    1           3 OPS(0:15) UBIN,
              2186                /* Remember old value for interactive patching */
              2187    1         2 POFMT UBIN,
              2188                /* Remember old value's format */
              2189    1         2 HIGH@ UBIN,
              2190                /* Offset to upper limit of proc patch space in user IS */
              2191    1         2 ALIB BIT(1) ALIGNED,
              2192                /* SET if entry was due to M$ALIB */
              2193    1         2 DUMPDCB UBIN,
              2194                /* Dcb number for DUMP command to output through */
              2195    1         2 HIGH# UBIN,
              2196               /* Offset to upper limit of data patch space in user IS */
              2197    1         2 E$XIT BIT(1) ALIGNED,
              2198                /* SET if EXIT command was given, used by DDA$DELTA */
              2199    1         2 LINK_ENTRY BIT(1) ALIGNED,
              2200               /* Set if entry to DELTA was via M$LINK, EXIT is legal if this bit is set */
              2201    1         2 USS$_SAVE PTR,
              2202                /* Save SS pointer when in ANLZ_FILE mode */
              2203    1         2 READPOS UBIN,
              2204                /* Sequential record number of record just read */
              2205    1         2 TRACE_STATE BIT(1) ALIGNED,
              2206                /* Save trace state for RUM/ANLZ */
              2207    1         2 USVFC BIT(1) ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:139  
              2208                /* Use special VFC to avoid over-printing */
              2209    1         2 RUM_ONLY BIT(1) ALIGNED,
              2210                /* Entered from IBEX by RUM command */
              2211    1         2 PMD_ONLY BIT(1) ALIGNED,
              2212                /* Entered from IBEX by PMD command */
              2213    1         2 PROMPT_SIZE UBIN,
              2214                /* Prompt size */
              2215    1         2 PROMPT,
              2216                /* Prompt VFC + text */
              2217    1           3 VFC CHAR(1) UNAL,
              2218                  /* Prompt VFC */
              2219    1           3 TEXT CHAR(30) UNAL,
              2220                  /* Prompt character string */
              2221    1           3 * CHAR(1) UNAL,
              2222                  /* Unused */
              2223    1         2 UPROMPT CHAR(24),
              2224                /* User specified prompt */
              2225    1         2 UPROMPT_SIZE UBIN,
              2226                /* Size of user specified prompt */
              2227    1         2 UFPROMPT CHAR(24),
              2228                /* User specified prompt for FPRGs */
              2229    1         2 UFPROMPT_SIZE UBIN,
              2230                /* Size of user specified prompt for FPRGs */
              2231    1         2 FEP_PADDR UBIN,
              2232                /* Start address of procedure for FPRGs */
              2233    1         2 FEP_PSIZE UBIN,
              2234                /* Size of procedure for FPRGs */
              2235    1         2 REM_DRTN_QUIT REMEMBER,
              2236                /* REMEMBER cell for DRTN_QUIT in DDA$DELTA */
              2237    1         2 LWEXTEND BIT(1) ALIGNED,
              2238                /* Last Write was EXTEND */
              2239    1         2 ENTRYCMD$ PTR,
              2240                /* To remember the real FAULTCMD$ in the recursive sections
              2241                   of attachment processing, when FAULTCMD$ points to a
              2242                   SAVEd string of attachments and not the entry condition. */
              2243    1         2 FIND,
              2244                /* SAVE VALUES FOR FIND/STORE */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:140  
              2245    1           3 SEG UBIN,
              2246    1           3 ADDRESS UBIN,
              2247    1           3 DESC# UBIN,
              2248    1           3 NUM UBIN,
              2249    1           3 NOT_IS BIT(1) ALIGNED,
              2250    1           3 MASK_F SBIN,
              2251    1           3 * UBIN,
              2252    1         2 BREAK_PRINTED BIT(1) ALIGNED,
              2253                /* Break message was already printed flag */
              2254    1         2 REPORT_FLAGS(0:13) ALIGNED,
              2255                /* Current report print flags  - Room for 14 compilers */
              2256    1           3 OFFSET BIT(1) UNAL,
              2257    1           3 LINE BIT(1) UNAL,
              2258    1           3 TYPE BIT(1) UNAL,
              2259    1           3 * BIT(33) UNAL,
              2260    1         2 REM_USERGO REMEMBER,
              2261                /* Remember cell for USERDO for USERGO */
              2262    1         2 LAST_ERROR,
              2263                /* Last error code used by DDE$ERROR, DUE$ERRMSG, DUE$UERRRMSG */
              2264    1           3 FCG_MID BIT(18) UNAL,
              2265    1           3 MON BIT(1) UNAL,
              2266    1           3 ERR# UBIN(14) UNAL,
              2267    1           3 SEV UBIN(3) UNAL,
              2268    1         2 SYNTAX UBIN,
              2269                /* Current syntax in effect */
              2270    1         2 GOT$RI BIT(1) ALIGNED,
              2271                /* Set if DDK$EVAL got $RI special symbol - need for L6 mode */
              2272    1         2 IS_PTR BIT(1) ALIGNED,
              2273                /* Set if $Bn used as a pointer */
              2274    1         2 BRKRSP_ERRCODE UBIN,
              2275                /* ERRCODE for BRKRSP message from FD */
              2276    1         2 USERNO UBIN,
              2277                /* User number received in BRKRSP message in L6 XDELTA */
              2278    1         2 REM_BREAK REMEMBER,
              2279                /* REMEMBER variable to remember BREAK in DDA$DELTA */
              2280    1         2 MBU BIT(1) ALIGNED,
              2281                /* GD$MSG.BRKRSP.MBU - Monitor running on behalf of user for L6 XDELTA */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:141  
              2282    1         2 L6_CACHE BIT(1) ALIGNED,
              2283                /* If set use L6 cache - else always go get values from FD */
              2284    1         2 INTERPRETIVE BIT(1) ALIGNED,
              2285                /* If not set - debugging interpreter in FEP */
              2286    1         2 DUMP_HEAD BIT(1) ALIGNED,
              2287                /* Used if dumping HEAD record when RUMming L6 RU */
              2288    1         2 SCREECH_IC REMEMBER,
              2289                /* REMEMBER variable for screech IC */
              2290    1         2 HELPING BIT(1) ALIGNED,
              2291                /* Set when X$HELPing */
              2292    1         2 SYNTAX_DEFAULT UBIN,
              2293                /* Default syntax, established in DUI$RU_ACCESS/DXI$1STIME */
              2294    1         2 PROTECT BIT(1) ALIGNED,
              2295                /* PROTECT flag */
              2296    1         2 SAD SBIN,
              2297                /* $SAD descriptor number, -1 if none */
              2298    1         2 LASTPD ALIGNED,
              2299                /* Info about last primary ENTDEF found */
              2300    1           3 NODE UBIN,
              2301                  /* Associated node */
              2302    1           3 RANGE SBIN,
              2303                  /* Range, unknown if < 0,
              2304                            unsignificant if = 0 */
              2305    1           3 IC UBIN,
              2306                  /* Where it's at */
              2307    1           3 PEDEF# UBIN,
              2308                  /* Entdef number */
              2309    1         2 ANYSD ALIGNED,
              2310                /* Info about last SYMDEF found */
              2311    1           3 NODE UBIN,
              2312                  /* Associated node */
              2313    1           3 RANGE SBIN,
              2314                  /* Range, unknown if < 0,
              2315                            unsignificant if = 0 */
              2316    1           3 IC UBIN,
              2317                  /* Where it's at */
              2318    1           3 SDEF# UBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:142  
              2319                  /* Symdef number */
              2320    1         2 NCNSD ALIGNED,
              2321                /* Info about last non-constant SYMDEF found */
              2322    1           3 NODE UBIN,
              2323                  /* Associated node */
              2324    1           3 RANGE SBIN,
              2325                  /* Range, unknown if < 0,
              2326                            unsignificant if = 0 */
              2327    1           3 IC UBIN,
              2328                  /* Where it's at */
              2329    1           3 SDEF# UBIN,
              2330                  /* Symdef number */
              2331    1         2 REM_DRTN_KLDELTA REMEMBER,
              2332                /* REMEMBER cell for DRTN_DLIB in DDA$DELTA */
              2333    1         2 STEP_L6 BIT(1) ALIGNED,
              2334                /* Set if stepping if FPRG */
              2335    1         2 RUM_FEP_USE UBIN,
              2336                /* SECTION USED FOR RUMMING M:FEP */
              2337    1         2 S$TEP,
              2338                /* STEP control frame */
              2339    1           3 ACTIVE BIT(1) ALIGNED,
              2340                  /* Set when step in progress */
              2341    1           3 ALT BIT(1) UNAL,
              2342                  /* Set when CLIMB or call has altret */
              2343    1           3 ONE_FLAG BIT(1) UNAL,
              2344                  /* Set if step one call is current step command */
              2345    1           3 DOING_SOC BIT(1) UNAL,
              2346                  /* Set if we're SOCing a subroutine call (TSXn) */
              2347    1           3 * BIT(33) UNAL,
              2348    1           3 LOC UBIN,
              2349                  /* return location */
              2350    1           3 ALTLOC UBIN,
              2351                  /* altreturn location */
              2352    1           3 SAVED UBIN,
              2353                  /* saved return instruction */
              2354    1           3 ALTSAVED UBIN,
              2355                  /* save altreturn instruction */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:143  
              2356    1           3 EWSQ UBIN,
              2357                  /* wsq number of step domain */
              2358    1           3 OLD_PTR$ PTR,
              2359                  /* pointer to stepped instruction,
              2360                     used by XDELTA to restore inhibit bit state */
              2361    1           3 CMD_COUNT UBIN,
              2362                  /* n of STEP n */
              2363    1           3 CUR_COUNT UBIN,
              2364                  /* current steps during this STEP n */
              2365    1           3 MODE UBIN,
              2366                  /* current step mode (STATEMENT, PARA, etc.) */
              2367    1         2 ANLZ_MODIFIED BIT(1) ALIGNED,
              2368                /* Set the first time something is modified in ANLZ
              2369                   mode.  Used to control output of message on console. */
              2370    1         2 WHEN_HIGH$ PTR,
              2371                /* Points to highest word allocated in when data segment */
              2372    1         2 WHEN_NEXT$ PTR,
              2373                /* Points to next word to be used */
              2374    1         2 WHEN_SET BIT(1) ALIGNED,
              2375                /* Set if an active when directive exists */
              2376    1         2 DO_CALLED BIT(1) ALIGNED,
              2377                /* Set when DDA$DO is called,
              2378                   used to tell if any directives have been performed
              2379                   during this trip thru DELTA.  If not, WHEN
              2380                   old values don't have to be gathered again. */
              2381    1         2 WHEN_IC UBIN,
              2382                /* IC where WHEN derail was put */
              2383    1         2 WHEN_INS UBIN,
              2384                /* WHEN replaced instruction */
              2385    1         2 WHEN_ACTIVE BIT(1) ALIGNED,
              2386                /* WHEN derail is planted. */
              2387    1         2 CURRENT_CHANNEL UBIN UNAL,
              2388                /* Currently selected channel for L6 XDELTA or FANLZ */
              2389    1         2 CURRENT_CHANNEL_R REDEF CURRENT_CHANNEL,
              2390    1           3 * BIT(20) UNAL,
              2391    1           3 CHAN BIT(16) UNAL,
              2392    1         2 LCTNUM UBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:144  
              2393                /* current LCT # for MLCT active */
              2394    1         2 MLCT BIT(1) ALIGNED,
              2395                /* Set if MLCT active */
              2396    1         2 ANLZ_KLUDGE BIT(1) ALIGNED,
              2397                /* SET IF ANLZ @ USES M:MON */
              2398    1         2 EXEC_DOMAIN_SAVE UBIN,
              2399                /* Save EXEC_DOMAIN when go into RUM or ANLZ mode */
              2400    1         2 IPRFLT BIT(1) ALIGNED,
              2401                /* Set by DUX$TRAP when the fault code is ipr.  Used
              2402                   to differentiate between str fault and illegal decimal
              2403                   faults. */
              2404    1         2 LABEL_FOUND BIT(1) ALIGNED,
              2405                /* Set if DDF$STATEMENT encountered
              2406                   a statement with a label when skipping
              2407                   statements with the same ic. */
              2408    1         2 FAULTINS UBIN,
              2409                /* The instruction underneath a breakpoint derail
              2410                   when the SL is used */
              2411    1         2 DA_CPN(0:2) UBIN,
              2412                /* CWSQPGS WSQ number for anlz_file */
              2413    1         2 * CHAR(3) UNAL,
              2414                /* Padding preceeding vfc character */
              2415    1         2 OBUFVFC CHAR(1) UNAL,
              2416                /* Vfc immediately preceeding output buffer */
              2417    1         2 OUTPUT CHAR(2048) ALIGNED,
              2418                /* Output buffer, on word boundary, following vfc */
              2419    1          2 XDP REDEF OUTPUT,
              2420                /* Output buffer - redefined for XDELTA for patch buffer */
              2421    1           3 IMAGE UNAL,
              2422                  /* Patch image sent to AARDVARK */
              2423    1             4 INP CHAR(80) UNAL,
              2424                    /* Input image */
              2425    1             4 OTP CHAR(120) UNAL,
              2426                    /* Output image */
              2427    1           3 * CHAR(1848) UNAL,
              2428    1         2 DIRECT_TEXT CHAR(256) ALIGNED,
              2429                /* Direct command text buffer, to allow imbedded MACTIVEs */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:145  
              2430    1         2 HOST_MESSAGE_BUF_REMOTE CHAR(415) CALIGNED,
              2431    1         2 REMOTE_MSG REDEF HOST_MESSAGE_BUF_REMOTE,
              2432    1           3 STXC CHAR(1),
              2433    1           3 STX REDEF STXC,
              2434    1             4 * BIT(1),
              2435    1             4 C UBIN(8) UNAL,
              2436    1           3 FNCC CHAR(1),
              2437    1           3 FNC REDEF FNCC,
              2438    1             4 * BIT(1),
              2439    1             4 C BIT(8) UNAL,
              2440    1           3 SUBFNCC CHAR(1),
              2441    1           3 SUBFNC REDEF SUBFNCC,
              2442    1             4 * BIT(1),
              2443    1             4 C BIT(8) UNAL,
              2444    1           3 TXT CHAR(412),
              2445    1         2 HOST_MESSAGE_BUF REDEF HOST_MESSAGE_BUF_REMOTE,
              2446        /* Message buffer for message exchange with FED - message is in unconverted form */
              2447    1           3 C CHAR(314) CALIGNED,
              2448    1           3 * CHAR(101) CALIGNED,
              2449    1         2 * CHAR(1) UNAL,
              2450                /* UNUSED */
              2451    1         2 L6_MESSAGE_BUF CHAR(280) CALIGNED,
              2452          /* Message buffer for message exchange with FED - message is in converted form */
              2453    1         2 REMOTE_MSG_L6 REDEF L6_MESSAGE_BUF,
              2454                /* Message buffer for message exchange with FD for L6 XDELTA */
              2455    1           3 FNC BIT(8) UNAL,
              2456    1           3 SUBFNC BIT(8) UNAL,
              2457    1           3 TXT(0:311) UBIN(8) UNAL,
              2458    1           3 * BIT(8) UNAL,
              2459    1         2 * CHAR(3) UNAL,
              2460                /* UNUSED */
              2461    1         2 ONE_TO_TWO,
              2462    1           3 EXEC_DOMAIN UBIN,
              2463                  /* Execution Domain */
              2464    1         2 SHOW BIT(1) ALIGNED,
              2465                /* Set if showing breakpoints so don't go to FD for patch space info */
              2466    1         2 INT# BIT(1) ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:146  
              2467                /* Set in DDA$DELTA is get ECC = %ECC_INT# */
              2468    1         2 AFD# BIT(1) ALIGNED,
              2469                /* Set if DUX$EVENT if get SUBC2_AFD# event and S_D.INT# is set */
              2470    1         2 OPDCBNO UBIN,
              2471                /* Set to dcb number from event frame in DUX$EVENT if sets S_D.AFD# */
              2472    1         2 GOTRAPPOS BIT(1) ALIGNED,
              2473                /* SET IF GOTRAP pos was specified */
              2474    1         2 GOTRAP_POSITION UBIN,
              2475                /* position specified for GOTRAP */
              2476    1         2 GOT$L BIT(1) ALIGNED,
              2477                /* Set if $L special symbol found in DDK$EVAL */
              2478    1         2 MDW BIT(1) ALIGNED,
              2479                /* SET if Modify DW command was last modify command */
              2480    1         2 FIRST_TIME BIT(1) ALIGNED,
              2481                /* Set if this is first time accessing patch space information
              2482                   so we will get it in DUI$1STIME */
              2483    1         2 BEEN_TO_SCANREAD BIT(1) ALIGNED,
              2484                /* Set if we need to UNWIND from DUS$SCANREAD */
              2485    1         2 DO_ATTACHMENTS REMEMBER,
              2486                /* DO_ATTACH labEL in DDA$DELTA */
              2487    1         2 PARSMORE_REM REMEMBER,
              2488                /* PARSMORE label in DUS$SCAN (unwound from DUS$SCANREAD) */
              2489    1         2 L6_TAB BIT(1) ALIGNED,
              2490                /* Set if valid L6 TAB value */
              2491    1         2 L6_TAB_VALUE SBIN,
              2492                /* L6 TAB VALUE */
              2493    1         2 CAN_I_DO_BREAK BIT(1) ALIGNED,
              2494                /* IF RESET, PROCESSING EVENT FOR USER, DONT ALLOW BREAK COMMAND */
              2495    1         2 POST_ASSOC BIT(1) ALIGNED,
              2496                /* SET IF ENTERED FOR CNTL-Y */
              2497    1         2 EIS ALIGNED,         /* used when LFing in modify active */
              2498    1           3 DESC# BIT(1) UNAL,  /* set if there's a descriptor left */
              2499    1           3 DESC_TYPE UBIN(3) UNAL, /* type of the descriptor */
              2500    1           3 MODS UNAL,
              2501    1             4 AR BIT(1) UNAL, /* set if AR modification for this 1 */
              2502    1             4 RL BIT(1) UNAL, /* set if RL modification for this 1 */
              2503    1             4 ID BIT(1) UNAL, /* set if ID modification for this 1 */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:147  
              2504    1           3 DESC1 UNAL,
              2505    1             4 DESC# BIT(1) UNAL,
              2506    1             4 DESC_TYPE UBIN(3) UNAL,
              2507    1             4 MODS UNAL,
              2508    1               5 AR BIT(1) UNAL,
              2509    1               5 RL BIT(1) UNAL,
              2510    1               5 ID BIT(1) UNAL,
              2511    1           3 DESC2 UNAL,
              2512    1             4 DESC# BIT(1) UNAL,
              2513    1             4 DESC_TYPE UBIN(3) UNAL,
              2514    1             4 MODS UNAL,
              2515    1               5 AR BIT(1) UNAL,
              2516    1               5 RL BIT(1) UNAL,
              2517    1               5 ID BIT(1) UNAL,
              2518    1           3 DESC3 UNAL,
              2519    1             4 DESC# BIT(1) UNAL,
              2520    1             4 DESC_TYPE UBIN(3) UNAL,
              2521    1             4 MODS UNAL,
              2522    1               5 AR BIT(1) UNAL,
              2523    1               5 RL BIT(1) UNAL,
              2524    1               5 ID BIT(1) UNAL,
              2525    1           3 * BIT(8) UNAL,
              2526    1         2 EIS_SHIFT REDEF EIS,
              2527    1           3 * BIT(7) UNAL,
              2528    1           3 X BIT(29) UNAL,
              2529    1         2 EIS_ACTIVE BIT(1) ALIGNED,
              2530                 /* set if DDR$INSTR is allowed to use/set EIS. */
              2531    1         2 XUG_BUILTIN BIT(1) ALIGNED,
              2532                /* XUG BUILTIN WAS EXECUTED */
              2533    1         2 LMDCB_SAVE UBIN,
              2534                /* TEMP TO SAVE LMDCB */
              2535    1         2 NODEFS4 BIT(1) ALIGNED,
              2536                /* E@NODEFS4 WAS PRINTED, RESET IN DFA$FPRG (27819) */
              2537    1         2 LADC BIT(1) ALIGNED,
              2538                /* SET IF SITE IS LADC, MAKES MINI AVAILABLE */
              2539    1         2 STATUS BIT(1) ALIGNED,
              2540                /* FPL STATUS MODE SET */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:148  
              2541    1         2 ERRFID,
              2542    1           3 L UBIN(9) CALIGNED,
              2543    1           3 C CHAR(31) CALIGNED,
              2544                 /* NAME FOR ERRFID */
              2545    1         2 ERRACCT CHAR(8) ALIGNED,
              2546                 /* ACCOUNT FOR ERRFID */
              2547    1         2 ERRPASS CHAR(8) ALIGNED,
              2548                 /* PASSWORD FOR ERRFID */
              2549    1         2 O$SIZE UBIN, /* Size of $O (for fep modes) in words */
              2550    1         2 XCONING BIT(1) ALIGNED,
              2551                /* SET IF ENTERED BECAUSE OF USER XCON */
              2552    1         2 REPORTING_ONCALL BIT(1) ALIGNED,
              2553                /* USED BY POSIT TO DETERMINE IF :line OR :sdef */
              2554    1         2 SIM_UPDATE BIT(1) ALIGNED,
              2555                /* TELLS POSIT TO PRETEND ITS DOING AN UPDATE */
              2556    1         2 DO_MESSAGE REMEMBER,
              2557                /* DO_MESSAGE label in DDA$DELTA */
              2558    1         2 MOD_L6,
              2559                /* Cache for L6 memory fetch */
              2560    1           3 ADDRESS SBIN,
              2561    1           3 SEG UBIN,
              2562    1           3 DESC# UBIN,
              2563    1           3 NOT_IS BIT(1) ALIGNED,
              2564    1           3 VALUE,
              2565    1             4 SIZE UBIN,
              2566    1             4 OPS(0:15) UBIN,
              2567    1         2 RUM_FEP BIT(1) ALIGNED,
              2568    1         2 MONENT,
              2569    1           3 GOT@ BIT(1) ALIGNED,
              2570                  /* Set if B_PATCHIH_ME found in root node */
              2571    1           3 NEXT@ UBIN,
              2572                  /* Next IS address in patch space for procedure */
              2573    1           3 RSPACE@ SBIN,
              2574                  /* Remaining patch space for procedure */
              2575    1           3 HEAD@ UBIN,
              2576                  /* Offset to B_PATCHIH_ME in user IS */
              2577    1           3 HIGH@ UBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:149  
              2578                  /* Offset to upper limit of proc patch space in user IS */
              2579    1           3 DEFINED@ BIT(1) ALIGNED,
              2580                /* Set if information in S_D about @ is currently defined */
              2581    1           3 GOT# BIT(1) ALIGNED,
              2582                  /* Set if B_PATCHDH_ME found in root node */
              2583    1           3 NEXT# UBIN,
              2584                  /* Next IS address in patch space for data */
              2585    1           3 RSPACE# SBIN,
              2586                  /* Remaining patch space for data */
              2587    1           3 HEAD# UBIN,
              2588                  /* Offset to B_PATCHDH_ME in user IS */
              2589    1           3 HIGH# UBIN,
              2590                  /* Offset to upper limit of proc patch space in user IS */
              2591    1           3 DEFINED# BIT(1) ALIGNED,
              2592                /* Set if information in S_D about # is currently defined */
              2593    1         2 MONIS,
              2594    1           3 GOT@ BIT(1) ALIGNED,
              2595                  /* Set if B_PATCHIH_IS found in root node */
              2596    1           3 NEXT@ UBIN,
              2597                  /* Next IS address in patch space for procedure */
              2598    1           3 RSPACE@ SBIN,
              2599                  /* Remaining patch space for procedure */
              2600    1           3 HEAD@ UBIN,
              2601                  /* Offset to B_PATCHIH_IS in user IS */
              2602    1           3 HIGH@ UBIN,
              2603                  /* Offset to upper limit of proc patch space in user IS */
              2604    1           3 DEFINED@ BIT(1) ALIGNED,
              2605                /* Set if information in S_D about @ is currently defined */
              2606    1           3 GOT# BIT(1) ALIGNED,
              2607                  /* Set if B_PATCHDH_IS found in root node */
              2608    1           3 NEXT# UBIN,
              2609                  /* Next IS address in patch space for data */
              2610    1           3 RSPACE# SBIN,
              2611                  /* Remaining patch space for data */
              2612    1           3 HEAD# UBIN,
              2613                  /* Offset to B_PATCHDH_IS in user IS */
              2614    1           3 HIGH# UBIN,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:150  
              2615                  /* Offset to upper limit of proc patch space in user IS */
              2616    1           3 DEFINED# BIT(1) ALIGNED,
              2617                /* Set if information in S_D about # is currently defined */
              2618    1         2 FD,
              2619    1           3 GOT@ BIT(1) ALIGNED,
              2620                  /* Set if B_PATCHIH_FD found in root node */
              2621    1           3 NEXT@ UBIN,
              2622                  /* Next IS address in patch space for procedure */
              2623    1           3 RSPACE@ SBIN,
              2624                  /* Remaining patch space for procedure */
              2625    1           3 HEAD@ UBIN,
              2626                  /* Offset to B_PATCHIH_FD in user IS */
              2627    1           3 HIGH@ UBIN,
              2628                  /* Offset to upper limit of proc patch space in user IS */
              2629    1           3 DEFINED@ BIT(1) ALIGNED,
              2630                /* Set if information in S_D about @ is currently defined */
              2631    1           3 GOT# BIT(1) ALIGNED,
              2632                  /* Set if B_PATCHDH_FD found in root node */
              2633    1           3 NEXT# UBIN,
              2634                  /* Next IS address in patch space for data */
              2635    1           3 RSPACE# SBIN,
              2636                  /* Remaining patch space for data */
              2637    1           3 HEAD# UBIN,
              2638                  /* Offset to B_PATCHDH_FD in user IS */
              2639    1           3 HIGH# UBIN,
              2640                  /* Offset to upper limit of proc patch space in user IS */
              2641    1           3 DEFINED# BIT(1) ALIGNED,
              2642                /* Set if information in S_D about # is currently defined */
              2643    1         2 BF,
              2644    1           3 GOT@ BIT(1) ALIGNED,
              2645                  /* Set if B_PATCHIH_BF found in root node */
              2646    1           3 NEXT@ UBIN,
              2647                  /* Next IS address in patch space for procedure */
              2648    1           3 RSPACE@ SBIN,
              2649                  /* Remaining patch space for procedure */
              2650    1           3 HEAD@ UBIN,
              2651                  /* Offset to B_PATCHIH_BF in user IS */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:151  
              2652    1           3 HIGH@ UBIN,
              2653                  /* Offset to upper limit of proc patch space in user IS */
              2654    1           3 DEFINED@ BIT(1) ALIGNED,
              2655                /* Set if information in S_D about @ is currently defined */
              2656    1           3 GOT# BIT(1) ALIGNED,
              2657                  /* Set if B_PATCHDH_BF found in root node */
              2658    1           3 NEXT# UBIN,
              2659                  /* Next IS address in patch space for data */
              2660    1           3 RSPACE# SBIN,
              2661                  /* Remaining patch space for data */
              2662    1           3 HEAD# UBIN,
              2663                  /* Offset to B_PATCHDH_BF in user IS */
              2664    1           3 HIGH# UBIN,
              2665                  /* Offset to upper limit of proc patch space in user IS */
              2666    1           3 DEFINED# BIT(1) ALIGNED,
              2667                /* Set if information in S_D about # is currently defined */
              2668    1         2 HW_TYPE UBIN WORD ALIGNED,
              2669                 /* SAME AS MON SYMBOL FOR HW FLAGS =0,4=D90,5=D90XA,6=DPS8000 */
              2670    1         2 HW_FLTIC_OK BIT(1) ALIGNED,
              2671                 /* SAME AS MON SYMBOL FOR HW FLAGS */
              2672    1         2 HW_RES_MEM BIT(1) ALIGNED,
              2673                 /* SAME AS MON SYMBOL FOR HW FLAGS */
              2674    1         2 HW_PTB_UNITS SBIN WORD ALIGNED,
              2675                 /* SAME AS MON SYMBOL FOR HW FLAGS */
              2676    1         2 HW_WSQ0PT BIT(1) ALIGNED,
              2677                 /* SAME AS MON SYMBOL FOR HW FLAGS */
              2678    1         2 TEMP$O UBIN,
              2679                /* Temporary $O for preevaluation of $O in an expression */
              2680    1         2 TEMP$O_ACTIVE BIT(1) ALIGNED,
              2681                /* TEMP$O is valid if set */
              2682             %XUH_PARAM(NAME=XUH_PARAM,STCLASS=" ",LVL=2);
              2683        /**/
              2684        %LSET STR='         ';
              2685        %IF
              2687            '0'B;
              2689        %ELSE;
              2690          %LSET INIT=/*;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:152  
              2691        %ENDIF;
              2692        %IF '1'B;
              2693          %IF '0'B;
              2695          %ELSE;
              2696            %LSET TERM=',';
              2697          %ENDIF;
              2698        %ELSE;
              2700        %ENDIF;
              2701        %IF '0'B;
              2703        %ELSE;
              2704    1      2 XUH_PARAM DALIGNED,
              2705        %ENDIF;
              2706    1        3 PROCNAME_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2707    1        3 PROCACCT_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2708    1        3 PROCPASS_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2709    1        3 KEYWORD_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2710    1        3 OUTDCB1# UBIN HALF UNAL /*(DCBNUM(NIL)) /**/,
              2711    1        3 OUTDCB2# UBIN HALF UNAL /*(DCBNUM(NIL)) /**/,
              2712    1        3 HELP$ PTR /*(ADDR(NIL)) /**/,
              2713    1        3 VFC# CHAR(1) UNAL /*(BINASC(0)) /**/,
              2714    1        3 ALL# BIT(1) UNAL /*('0'B) /**/,
              2715    1        3 MORE# BIT(1) UNAL /*('0'B) /**/,
              2716    1        3 TOPICS# BIT(1) UNAL /*('0'B) /**/,
              2717    1        3 OTHER_PROC# BIT(1) UNAL /*('0'B) /**/,
              2718    1        3 * BIT(23) UNAL /*('0'B) /**/,
              2719    1        3 ERR,
              2720    1           4 FCG BIT(12) UNAL,
              2721    1           4 MID BIT(6) UNAL,
              2722    1           4 MON BIT(1) UNAL,
              2723    1           4 ERR# UBIN (14) UNAL,
              2724    1           4 SEV UBIN (3) UNAL,
              2725    1        3 ERR_DCB# UBIN WORD /*(0) /**/,
              2726    1        3 CHARPOS UBIN WORD /*(0) /**/,
              2727    1        3 HELP_CODE# UNAL,
              2728    1           4 LEN UBIN(9) UNAL /*(3) /**/,
              2729    1           4 TEXT CHAR(34) UNAL /*(' ') /**/,
              2730    1           4 PNAME,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:153  
              2731    1              5 LEN UBIN(9) UNAL /*(0) /**/,
              2732    1              5 TEXT CHAR(31) UNAL /*(' ') /**/,
              2733    1           4 PACCT CHAR(8) /*(' ') /**/,
              2734    1           4 PPASS CHAR(8) /*(' ') /**/,
              2735    1           4 PPSN CHAR(6) /*(' ') /**/,
              2736    1        3 PROCPSN_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2737    1        3 SPARE3_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2738    1        3 SPARE2_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2739    1        3 SPARE1_ VECTOR DALIGNED /*(VECTOR(NIL)) /**/,
              2740    1        3 FPT_VERSION UBIN WORD /*(123457) /**/,
              2741    1        3 RESERVED (0:9) UBIN WORD /*(0*10) /**/ ,
              2743                /* X$HELP parameter block */
              2744    1         2 DUMMY UBIN DALIGNED;
              2745                /* GOOD PLACE TO PUT THE SEMI-COLON */
              2746        %LSET STR = 'STATIC SYMDEF        ';
              2747        %IF '0'B;
              2749        %ELSE;
              2750    1        DCL S_D$ PTR CONSTANT SYMDEF INIT( ADDR(S_D) );
              2751        %ENDIF;
       18     2753        %S_D_PTRS(STCLASS="CONSTANT SYMDEF");
              2754             %LSET STR = 'CONSTANT SYMDEF        ';
              2755             %IF '1'B;
              2756                  %LSET INIT = INIT;
              2757                  %LSET INIT_END =  ;
              2758               %ELSE;
              2761               %ENDIF;
              2762    1     DCL S_D_SEG$ PTR CONSTANT SYMDEF INIT (ADDR(S_D))   ;
              2763    1     DCL S_D_ACCESS$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.ACCESS))   ;
              2764    1     DCL S_D_ASTACKOFF$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.ASTACKOFF))   ;
              2765    1     DCL S_D_ANLZ$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.ANLZ))   ;
              2766    1     DCL S_D_BREAK$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.BREAK))   ;
              2767    1     DCL S_D_DO_SCAN$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.DO_SCAN))   ;
              2768    1     DCL S_D_ERROR$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.ERROR))   ;
              2769    1     DCL S_D_FAULTCMD$$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.FAULTCMD$))   ;
              2770    1     DCL S_D_FAULTINS$$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.FAULTINS$))   ;
              2771    1     DCL S_D_GOIC$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.GOIC))   ;
              2772    1     DCL S_D_GO_MODE$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.GO_MODE))   ;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:154  
              2773    1     DCL S_D_IXFIX$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.IXFIX))   ;
              2774    1     DCL S_D_IPRFLT$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.IPRFLT))   ;
              2775    1     DCL S_D_REM_ACCESS$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.REM_ACCESS))   ;
              2776    1     DCL S_D_REM_DO_SCAN$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.REM_DO_SCAN))   ;
              2777    1     DCL S_D_REM_DISKBOOT$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.REM_DISKBOOT))   ;
              2778    1     DCL S_D_RETURNN$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.RETURNN))   ;
              2779    1     DCL S_D_SAD$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.SAD))   ;
              2780    1     DCL S_D_SAVEIC$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.SAVEIC))   ;
              2781    1     DCL S_D_TCB$$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.TCB$))   ;
              2782    1     DCL S_D_UREG$$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.UREG$))   ;
              2783    1     DCL S_D_USS$$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.USS$))   ;
              2784    1     DCL S_D_HOST_MESSAGE$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.HOST_MESSAGE_BUF.C))   ;
              2785    1     DCL S_D_L6_MESSAGE$ PTR CONSTANT SYMDEF INIT (ADDR(S_D.L6_MESSAGE_BUF))   ;
              2786    1     DCL S_D_HW_RES_MEM$ PTR CONSTANT SYMDEF INIT(ADDR(S_D.HW_RES_MEM))   ;
              2787    1     DCL S_D_HW_WSQ0PT$ PTR CONSTANT SYMDEF INIT(ADDR(S_D.HW_WSQ0PT))   ;
              2788    1     DCL S_D_HW_PTB_UNITS$ PTR CONSTANT SYMDEF INIT(ADDR(S_D.HW_PTB_UNITS))   ;
       19     2790        %INCLUDE XU_MACRO_C;
       20     5896        %INCLUDE DD_KNODES_D;
       21     6112        %NODE_DEFS(STCLASS="STATIC SYMDEF", FCG=NX_);
              6113        %LSET STR = 'STATIC SYMDEF        ';
              6114        %IF '0'B;
              6124        %ELSE;
              6125             %P$NODE(NAME=DD_CNR4,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6126        /*F*  NAME:     P$NODE
              6127              FUNCTION: a structure used to describe syntax nodes, as built by
              6128                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6129                  used to examine all of the attributes of nodes of several
              6130                  types:  koncat, list, alternative, and reducing alternative.
              6131                  It may also be used to examine a few of the attributes of
              6132                  symbol and delimited-string nodes, as indicated.
              6133        */
              6134        %LSET STR='STATIC SYMDEF        ';
              6135        %IF '1'B;
              6136        %LSET INIT=INIT;
              6137        %LSET ENDINIT=;
              6138        %ELSE;
              6141        %ENDIF;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:155  
              6142        %IF '1'B;
              6143    1   DCL 1 DD_CNR4 STATIC SYMDEF ALIGNED,
              6144        %ELSE;
              6146        %ENDIF;
              6147    1         2 TYPE UBIN(3) UNAL INIT(4),
              6148        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6149                  file for the permissible values in this field (%TYPE_whatever#).
              6150        */
              6151    1         2 P_F BIT(1) UNAL INIT('0'B),
              6152        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6153                  any attempt to match this node.  This flag is set if the
              6154                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6155                  of this node.
              6156        */
              6157    1         2 S_F BIT(1) UNAL INIT('0'B),
              6158        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6159                  any successful attempts to match this node;  set if the user
              6160                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6161                  node.
              6162        */
              6163    1         2 F_F BIT(1) UNAL INIT('0'B),
              6164        /*K* F_F - specifies that the user wants to be notified of any
              6165                  failed attempts to match this node;  set if the user specified
              6166                  the "(FAIL)" option in the PARTRGE definition of this node.
              6167        */
              6168    1         2 O_F BIT(1) UNAL INIT('0'B),
              6169        /*K* O_F - specifies that this node is to result in the creation of
              6170                  a block in the X$PARSE output tree.  The setting of this
              6171                  flag is controlled by several PARTRGE attributes:  the
              6172                  "OUT" option, the "NOUT" option, the "code" option, and the
              6173                  node's basic type.  If the user specifies "OUT", this flag
              6174                  will be set;  if the user specifies "NOUT", this flag will
              6175                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6176                  this flag will be set if the "code" option was specified or
              6177                  if the node is of the "delimited string" or "symbol" varieties.
              6178        */
              6179    1         2 OPT BIT(1) UNAL INIT('0'B),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:156  
              6180        /*K* OPT - set if this node is "optional".  This flag is set if the
              6181                  PARTRGE definition of this node was enclosed in a set
              6182                  of [square-brackets].
              6183        */
              6184    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6185        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6186                  once).  This flag is set of the PARTRGE definition of this node
              6187                  was enclosed in a set of *asterisks*.
              6188        */
              6189    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6190        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6191                  after this node.  This flag is set unless the PARTRGE
              6192                  definition of this node included a trailing hyphen-.
              6193        */
              6194    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6195        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6196                  incorporating all of the text (and blanks and/or comments)
              6197                  accepted by this node, with no editing or case conversion.
              6198                  This flag is set if the PARTRGE definition of this node
              6199                  included the "(RTEXT)" option.
              6200        */
              6201    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6202        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6203        */
              6204    1         2 CODE UBIN (16) UNAL INIT(0),
              6205        /*K* CODE - specifies the "code number" for this parse node.  This
              6206                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6207                  any parse block built by X$PARSE which corresponds to this node.
              6208        */
              6209    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6210        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6211                  this parse node.
              6212        */
              6213        %IF '1'B;
              6214    1         ;
              6215        %ELSE;
              6217        %ENDIF;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:157  
              6219             %P$NODE(NAME=DD_L@DIV,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6220        /*F*  NAME:     P$NODE
              6221              FUNCTION: a structure used to describe syntax nodes, as built by
              6222                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6223                  used to examine all of the attributes of nodes of several
              6224                  types:  koncat, list, alternative, and reducing alternative.
              6225                  It may also be used to examine a few of the attributes of
              6226                  symbol and delimited-string nodes, as indicated.
              6227        */
              6228        %LSET STR='STATIC SYMDEF        ';
              6229        %IF '1'B;
              6230        %LSET INIT=INIT;
              6231        %LSET ENDINIT=;
              6232        %ELSE;
              6235        %ENDIF;
              6236        %IF '1'B;
              6237    1   DCL 1 DD_L@DIV STATIC SYMDEF ALIGNED,
              6238        %ELSE;
              6240        %ENDIF;
              6241    1         2 TYPE UBIN(3) UNAL INIT(4),
              6242        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6243                  file for the permissible values in this field (%TYPE_whatever#).
              6244        */
              6245    1         2 P_F BIT(1) UNAL INIT('0'B),
              6246        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6247                  any attempt to match this node.  This flag is set if the
              6248                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6249                  of this node.
              6250        */
              6251    1         2 S_F BIT(1) UNAL INIT('0'B),
              6252        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6253                  any successful attempts to match this node;  set if the user
              6254                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6255                  node.
              6256        */
              6257    1         2 F_F BIT(1) UNAL INIT('0'B),
              6258        /*K* F_F - specifies that the user wants to be notified of any
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:158  
              6259                  failed attempts to match this node;  set if the user specified
              6260                  the "(FAIL)" option in the PARTRGE definition of this node.
              6261        */
              6262    1         2 O_F BIT(1) UNAL INIT('0'B),
              6263        /*K* O_F - specifies that this node is to result in the creation of
              6264                  a block in the X$PARSE output tree.  The setting of this
              6265                  flag is controlled by several PARTRGE attributes:  the
              6266                  "OUT" option, the "NOUT" option, the "code" option, and the
              6267                  node's basic type.  If the user specifies "OUT", this flag
              6268                  will be set;  if the user specifies "NOUT", this flag will
              6269                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6270                  this flag will be set if the "code" option was specified or
              6271                  if the node is of the "delimited string" or "symbol" varieties.
              6272        */
              6273    1         2 OPT BIT(1) UNAL INIT('0'B),
              6274        /*K* OPT - set if this node is "optional".  This flag is set if the
              6275                  PARTRGE definition of this node was enclosed in a set
              6276                  of [square-brackets].
              6277        */
              6278    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6279        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6280                  once).  This flag is set of the PARTRGE definition of this node
              6281                  was enclosed in a set of *asterisks*.
              6282        */
              6283    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6284        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6285                  after this node.  This flag is set unless the PARTRGE
              6286                  definition of this node included a trailing hyphen-.
              6287        */
              6288    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6289        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6290                  incorporating all of the text (and blanks and/or comments)
              6291                  accepted by this node, with no editing or case conversion.
              6292                  This flag is set if the PARTRGE definition of this node
              6293                  included the "(RTEXT)" option.
              6294        */
              6295    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:159  
              6296        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6297        */
              6298    1         2 CODE UBIN (16) UNAL INIT(0),
              6299        /*K* CODE - specifies the "code number" for this parse node.  This
              6300                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6301                  any parse block built by X$PARSE which corresponds to this node.
              6302        */
              6303    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6304        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6305                  this parse node.
              6306        */
              6307        %IF '1'B;
              6308    1         ;
              6309        %ELSE;
              6311        %ENDIF;
              6313             %P$NODE(NAME=DD_L@LSHIFT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6314        /*F*  NAME:     P$NODE
              6315              FUNCTION: a structure used to describe syntax nodes, as built by
              6316                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6317                  used to examine all of the attributes of nodes of several
              6318                  types:  koncat, list, alternative, and reducing alternative.
              6319                  It may also be used to examine a few of the attributes of
              6320                  symbol and delimited-string nodes, as indicated.
              6321        */
              6322        %LSET STR='STATIC SYMDEF        ';
              6323        %IF '1'B;
              6324        %LSET INIT=INIT;
              6325        %LSET ENDINIT=;
              6326        %ELSE;
              6329        %ENDIF;
              6330        %IF '1'B;
              6331    1   DCL 1 DD_L@LSHIFT STATIC SYMDEF ALIGNED,
              6332        %ELSE;
              6334        %ENDIF;
              6335    1         2 TYPE UBIN(3) UNAL INIT(4),
              6336        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6337                  file for the permissible values in this field (%TYPE_whatever#).
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:160  
              6338        */
              6339    1         2 P_F BIT(1) UNAL INIT('0'B),
              6340        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6341                  any attempt to match this node.  This flag is set if the
              6342                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6343                  of this node.
              6344        */
              6345    1         2 S_F BIT(1) UNAL INIT('0'B),
              6346        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6347                  any successful attempts to match this node;  set if the user
              6348                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6349                  node.
              6350        */
              6351    1         2 F_F BIT(1) UNAL INIT('0'B),
              6352        /*K* F_F - specifies that the user wants to be notified of any
              6353                  failed attempts to match this node;  set if the user specified
              6354                  the "(FAIL)" option in the PARTRGE definition of this node.
              6355        */
              6356    1         2 O_F BIT(1) UNAL INIT('0'B),
              6357        /*K* O_F - specifies that this node is to result in the creation of
              6358                  a block in the X$PARSE output tree.  The setting of this
              6359                  flag is controlled by several PARTRGE attributes:  the
              6360                  "OUT" option, the "NOUT" option, the "code" option, and the
              6361                  node's basic type.  If the user specifies "OUT", this flag
              6362                  will be set;  if the user specifies "NOUT", this flag will
              6363                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6364                  this flag will be set if the "code" option was specified or
              6365                  if the node is of the "delimited string" or "symbol" varieties.
              6366        */
              6367    1         2 OPT BIT(1) UNAL INIT('0'B),
              6368        /*K* OPT - set if this node is "optional".  This flag is set if the
              6369                  PARTRGE definition of this node was enclosed in a set
              6370                  of [square-brackets].
              6371        */
              6372    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6373        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6374                  once).  This flag is set of the PARTRGE definition of this node
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:161  
              6375                  was enclosed in a set of *asterisks*.
              6376        */
              6377    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6378        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6379                  after this node.  This flag is set unless the PARTRGE
              6380                  definition of this node included a trailing hyphen-.
              6381        */
              6382    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6383        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6384                  incorporating all of the text (and blanks and/or comments)
              6385                  accepted by this node, with no editing or case conversion.
              6386                  This flag is set if the PARTRGE definition of this node
              6387                  included the "(RTEXT)" option.
              6388        */
              6389    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6390        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6391        */
              6392    1         2 CODE UBIN (16) UNAL INIT(0),
              6393        /*K* CODE - specifies the "code number" for this parse node.  This
              6394                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6395                  any parse block built by X$PARSE which corresponds to this node.
              6396        */
              6397    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6398        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6399                  this parse node.
              6400        */
              6401        %IF '1'B;
              6402    1         ;
              6403        %ELSE;
              6405        %ENDIF;
              6407             %P$NODE(NAME=DD_L@MINUS,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6408        /*F*  NAME:     P$NODE
              6409              FUNCTION: a structure used to describe syntax nodes, as built by
              6410                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6411                  used to examine all of the attributes of nodes of several
              6412                  types:  koncat, list, alternative, and reducing alternative.
              6413                  It may also be used to examine a few of the attributes of
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:162  
              6414                  symbol and delimited-string nodes, as indicated.
              6415        */
              6416        %LSET STR='STATIC SYMDEF        ';
              6417        %IF '1'B;
              6418        %LSET INIT=INIT;
              6419        %LSET ENDINIT=;
              6420        %ELSE;
              6423        %ENDIF;
              6424        %IF '1'B;
              6425    1   DCL 1 DD_L@MINUS STATIC SYMDEF ALIGNED,
              6426        %ELSE;
              6428        %ENDIF;
              6429    1         2 TYPE UBIN(3) UNAL INIT(4),
              6430        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6431                  file for the permissible values in this field (%TYPE_whatever#).
              6432        */
              6433    1         2 P_F BIT(1) UNAL INIT('0'B),
              6434        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6435                  any attempt to match this node.  This flag is set if the
              6436                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6437                  of this node.
              6438        */
              6439    1         2 S_F BIT(1) UNAL INIT('0'B),
              6440        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6441                  any successful attempts to match this node;  set if the user
              6442                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6443                  node.
              6444        */
              6445    1         2 F_F BIT(1) UNAL INIT('0'B),
              6446        /*K* F_F - specifies that the user wants to be notified of any
              6447                  failed attempts to match this node;  set if the user specified
              6448                  the "(FAIL)" option in the PARTRGE definition of this node.
              6449        */
              6450    1         2 O_F BIT(1) UNAL INIT('0'B),
              6451        /*K* O_F - specifies that this node is to result in the creation of
              6452                  a block in the X$PARSE output tree.  The setting of this
              6453                  flag is controlled by several PARTRGE attributes:  the
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:163  
              6454                  "OUT" option, the "NOUT" option, the "code" option, and the
              6455                  node's basic type.  If the user specifies "OUT", this flag
              6456                  will be set;  if the user specifies "NOUT", this flag will
              6457                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6458                  this flag will be set if the "code" option was specified or
              6459                  if the node is of the "delimited string" or "symbol" varieties.
              6460        */
              6461    1         2 OPT BIT(1) UNAL INIT('0'B),
              6462        /*K* OPT - set if this node is "optional".  This flag is set if the
              6463                  PARTRGE definition of this node was enclosed in a set
              6464                  of [square-brackets].
              6465        */
              6466    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6467        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6468                  once).  This flag is set of the PARTRGE definition of this node
              6469                  was enclosed in a set of *asterisks*.
              6470        */
              6471    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6472        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6473                  after this node.  This flag is set unless the PARTRGE
              6474                  definition of this node included a trailing hyphen-.
              6475        */
              6476    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6477        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6478                  incorporating all of the text (and blanks and/or comments)
              6479                  accepted by this node, with no editing or case conversion.
              6480                  This flag is set if the PARTRGE definition of this node
              6481                  included the "(RTEXT)" option.
              6482        */
              6483    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6484        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6485        */
              6486    1         2 CODE UBIN (16) UNAL INIT(0),
              6487        /*K* CODE - specifies the "code number" for this parse node.  This
              6488                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6489                  any parse block built by X$PARSE which corresponds to this node.
              6490        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:164  
              6491    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6492        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6493                  this parse node.
              6494        */
              6495        %IF '1'B;
              6496    1         ;
              6497        %ELSE;
              6499        %ENDIF;
              6501             %P$NODE(NAME=DD_L@MULT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6502        /*F*  NAME:     P$NODE
              6503              FUNCTION: a structure used to describe syntax nodes, as built by
              6504                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6505                  used to examine all of the attributes of nodes of several
              6506                  types:  koncat, list, alternative, and reducing alternative.
              6507                  It may also be used to examine a few of the attributes of
              6508                  symbol and delimited-string nodes, as indicated.
              6509        */
              6510        %LSET STR='STATIC SYMDEF        ';
              6511        %IF '1'B;
              6512        %LSET INIT=INIT;
              6513        %LSET ENDINIT=;
              6514        %ELSE;
              6517        %ENDIF;
              6518        %IF '1'B;
              6519    1   DCL 1 DD_L@MULT STATIC SYMDEF ALIGNED,
              6520        %ELSE;
              6522        %ENDIF;
              6523    1         2 TYPE UBIN(3) UNAL INIT(4),
              6524        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6525                  file for the permissible values in this field (%TYPE_whatever#).
              6526        */
              6527    1         2 P_F BIT(1) UNAL INIT('0'B),
              6528        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6529                  any attempt to match this node.  This flag is set if the
              6530                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6531                  of this node.
              6532        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:165  
              6533    1         2 S_F BIT(1) UNAL INIT('0'B),
              6534        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6535                  any successful attempts to match this node;  set if the user
              6536                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6537                  node.
              6538        */
              6539    1         2 F_F BIT(1) UNAL INIT('0'B),
              6540        /*K* F_F - specifies that the user wants to be notified of any
              6541                  failed attempts to match this node;  set if the user specified
              6542                  the "(FAIL)" option in the PARTRGE definition of this node.
              6543        */
              6544    1         2 O_F BIT(1) UNAL INIT('0'B),
              6545        /*K* O_F - specifies that this node is to result in the creation of
              6546                  a block in the X$PARSE output tree.  The setting of this
              6547                  flag is controlled by several PARTRGE attributes:  the
              6548                  "OUT" option, the "NOUT" option, the "code" option, and the
              6549                  node's basic type.  If the user specifies "OUT", this flag
              6550                  will be set;  if the user specifies "NOUT", this flag will
              6551                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6552                  this flag will be set if the "code" option was specified or
              6553                  if the node is of the "delimited string" or "symbol" varieties.
              6554        */
              6555    1         2 OPT BIT(1) UNAL INIT('0'B),
              6556        /*K* OPT - set if this node is "optional".  This flag is set if the
              6557                  PARTRGE definition of this node was enclosed in a set
              6558                  of [square-brackets].
              6559        */
              6560    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6561        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6562                  once).  This flag is set of the PARTRGE definition of this node
              6563                  was enclosed in a set of *asterisks*.
              6564        */
              6565    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6566        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6567                  after this node.  This flag is set unless the PARTRGE
              6568                  definition of this node included a trailing hyphen-.
              6569        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:166  
              6570    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6571        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6572                  incorporating all of the text (and blanks and/or comments)
              6573                  accepted by this node, with no editing or case conversion.
              6574                  This flag is set if the PARTRGE definition of this node
              6575                  included the "(RTEXT)" option.
              6576        */
              6577    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6578        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6579        */
              6580    1         2 CODE UBIN (16) UNAL INIT(0),
              6581        /*K* CODE - specifies the "code number" for this parse node.  This
              6582                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6583                  any parse block built by X$PARSE which corresponds to this node.
              6584        */
              6585    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6586        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6587                  this parse node.
              6588        */
              6589        %IF '1'B;
              6590    1         ;
              6591        %ELSE;
              6593        %ENDIF;
              6595             %P$NODE(NAME=DD_L@PLUS,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6596        /*F*  NAME:     P$NODE
              6597              FUNCTION: a structure used to describe syntax nodes, as built by
              6598                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6599                  used to examine all of the attributes of nodes of several
              6600                  types:  koncat, list, alternative, and reducing alternative.
              6601                  It may also be used to examine a few of the attributes of
              6602                  symbol and delimited-string nodes, as indicated.
              6603        */
              6604        %LSET STR='STATIC SYMDEF        ';
              6605        %IF '1'B;
              6606        %LSET INIT=INIT;
              6607        %LSET ENDINIT=;
              6608        %ELSE;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:167  
              6611        %ENDIF;
              6612        %IF '1'B;
              6613    1   DCL 1 DD_L@PLUS STATIC SYMDEF ALIGNED,
              6614        %ELSE;
              6616        %ENDIF;
              6617    1         2 TYPE UBIN(3) UNAL INIT(4),
              6618        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6619                  file for the permissible values in this field (%TYPE_whatever#).
              6620        */
              6621    1         2 P_F BIT(1) UNAL INIT('0'B),
              6622        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6623                  any attempt to match this node.  This flag is set if the
              6624                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6625                  of this node.
              6626        */
              6627    1         2 S_F BIT(1) UNAL INIT('0'B),
              6628        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6629                  any successful attempts to match this node;  set if the user
              6630                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6631                  node.
              6632        */
              6633    1         2 F_F BIT(1) UNAL INIT('0'B),
              6634        /*K* F_F - specifies that the user wants to be notified of any
              6635                  failed attempts to match this node;  set if the user specified
              6636                  the "(FAIL)" option in the PARTRGE definition of this node.
              6637        */
              6638    1         2 O_F BIT(1) UNAL INIT('0'B),
              6639        /*K* O_F - specifies that this node is to result in the creation of
              6640                  a block in the X$PARSE output tree.  The setting of this
              6641                  flag is controlled by several PARTRGE attributes:  the
              6642                  "OUT" option, the "NOUT" option, the "code" option, and the
              6643                  node's basic type.  If the user specifies "OUT", this flag
              6644                  will be set;  if the user specifies "NOUT", this flag will
              6645                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6646                  this flag will be set if the "code" option was specified or
              6647                  if the node is of the "delimited string" or "symbol" varieties.
              6648        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:168  
              6649    1         2 OPT BIT(1) UNAL INIT('0'B),
              6650        /*K* OPT - set if this node is "optional".  This flag is set if the
              6651                  PARTRGE definition of this node was enclosed in a set
              6652                  of [square-brackets].
              6653        */
              6654    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6655        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6656                  once).  This flag is set of the PARTRGE definition of this node
              6657                  was enclosed in a set of *asterisks*.
              6658        */
              6659    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6660        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6661                  after this node.  This flag is set unless the PARTRGE
              6662                  definition of this node included a trailing hyphen-.
              6663        */
              6664    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6665        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6666                  incorporating all of the text (and blanks and/or comments)
              6667                  accepted by this node, with no editing or case conversion.
              6668                  This flag is set if the PARTRGE definition of this node
              6669                  included the "(RTEXT)" option.
              6670        */
              6671    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6672        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6673        */
              6674    1         2 CODE UBIN (16) UNAL INIT(0),
              6675        /*K* CODE - specifies the "code number" for this parse node.  This
              6676                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6677                  any parse block built by X$PARSE which corresponds to this node.
              6678        */
              6679    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6680        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6681                  this parse node.
              6682        */
              6683        %IF '1'B;
              6684    1         ;
              6685        %ELSE;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:169  
              6687        %ENDIF;
              6689             %P$NODE(NAME=DD_L@RSHIFT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6690        /*F*  NAME:     P$NODE
              6691              FUNCTION: a structure used to describe syntax nodes, as built by
              6692                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6693                  used to examine all of the attributes of nodes of several
              6694                  types:  koncat, list, alternative, and reducing alternative.
              6695                  It may also be used to examine a few of the attributes of
              6696                  symbol and delimited-string nodes, as indicated.
              6697        */
              6698        %LSET STR='STATIC SYMDEF        ';
              6699        %IF '1'B;
              6700        %LSET INIT=INIT;
              6701        %LSET ENDINIT=;
              6702        %ELSE;
              6705        %ENDIF;
              6706        %IF '1'B;
              6707    1   DCL 1 DD_L@RSHIFT STATIC SYMDEF ALIGNED,
              6708        %ELSE;
              6710        %ENDIF;
              6711    1         2 TYPE UBIN(3) UNAL INIT(4),
              6712        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6713                  file for the permissible values in this field (%TYPE_whatever#).
              6714        */
              6715    1         2 P_F BIT(1) UNAL INIT('0'B),
              6716        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6717                  any attempt to match this node.  This flag is set if the
              6718                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6719                  of this node.
              6720        */
              6721    1         2 S_F BIT(1) UNAL INIT('0'B),
              6722        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6723                  any successful attempts to match this node;  set if the user
              6724                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6725                  node.
              6726        */
              6727    1         2 F_F BIT(1) UNAL INIT('0'B),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:170  
              6728        /*K* F_F - specifies that the user wants to be notified of any
              6729                  failed attempts to match this node;  set if the user specified
              6730                  the "(FAIL)" option in the PARTRGE definition of this node.
              6731        */
              6732    1         2 O_F BIT(1) UNAL INIT('0'B),
              6733        /*K* O_F - specifies that this node is to result in the creation of
              6734                  a block in the X$PARSE output tree.  The setting of this
              6735                  flag is controlled by several PARTRGE attributes:  the
              6736                  "OUT" option, the "NOUT" option, the "code" option, and the
              6737                  node's basic type.  If the user specifies "OUT", this flag
              6738                  will be set;  if the user specifies "NOUT", this flag will
              6739                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6740                  this flag will be set if the "code" option was specified or
              6741                  if the node is of the "delimited string" or "symbol" varieties.
              6742        */
              6743    1         2 OPT BIT(1) UNAL INIT('0'B),
              6744        /*K* OPT - set if this node is "optional".  This flag is set if the
              6745                  PARTRGE definition of this node was enclosed in a set
              6746                  of [square-brackets].
              6747        */
              6748    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6749        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6750                  once).  This flag is set of the PARTRGE definition of this node
              6751                  was enclosed in a set of *asterisks*.
              6752        */
              6753    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6754        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6755                  after this node.  This flag is set unless the PARTRGE
              6756                  definition of this node included a trailing hyphen-.
              6757        */
              6758    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6759        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6760                  incorporating all of the text (and blanks and/or comments)
              6761                  accepted by this node, with no editing or case conversion.
              6762                  This flag is set if the PARTRGE definition of this node
              6763                  included the "(RTEXT)" option.
              6764        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:171  
              6765    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6766        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6767        */
              6768    1         2 CODE UBIN (16) UNAL INIT(0),
              6769        /*K* CODE - specifies the "code number" for this parse node.  This
              6770                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6771                  any parse block built by X$PARSE which corresponds to this node.
              6772        */
              6773    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6774        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6775                  this parse node.
              6776        */
              6777        %IF '1'B;
              6778    1         ;
              6779        %ELSE;
              6781        %ENDIF;
              6783             %P$NODE(NAME=DD_L@OR,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6784        /*F*  NAME:     P$NODE
              6785              FUNCTION: a structure used to describe syntax nodes, as built by
              6786                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6787                  used to examine all of the attributes of nodes of several
              6788                  types:  koncat, list, alternative, and reducing alternative.
              6789                  It may also be used to examine a few of the attributes of
              6790                  symbol and delimited-string nodes, as indicated.
              6791        */
              6792        %LSET STR='STATIC SYMDEF        ';
              6793        %IF '1'B;
              6794        %LSET INIT=INIT;
              6795        %LSET ENDINIT=;
              6796        %ELSE;
              6799        %ENDIF;
              6800        %IF '1'B;
              6801    1   DCL 1 DD_L@OR STATIC SYMDEF ALIGNED,
              6802        %ELSE;
              6804        %ENDIF;
              6805    1         2 TYPE UBIN(3) UNAL INIT(4),
              6806        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:172  
              6807                  file for the permissible values in this field (%TYPE_whatever#).
              6808        */
              6809    1         2 P_F BIT(1) UNAL INIT('0'B),
              6810        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6811                  any attempt to match this node.  This flag is set if the
              6812                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6813                  of this node.
              6814        */
              6815    1         2 S_F BIT(1) UNAL INIT('0'B),
              6816        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6817                  any successful attempts to match this node;  set if the user
              6818                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6819                  node.
              6820        */
              6821    1         2 F_F BIT(1) UNAL INIT('0'B),
              6822        /*K* F_F - specifies that the user wants to be notified of any
              6823                  failed attempts to match this node;  set if the user specified
              6824                  the "(FAIL)" option in the PARTRGE definition of this node.
              6825        */
              6826    1         2 O_F BIT(1) UNAL INIT('0'B),
              6827        /*K* O_F - specifies that this node is to result in the creation of
              6828                  a block in the X$PARSE output tree.  The setting of this
              6829                  flag is controlled by several PARTRGE attributes:  the
              6830                  "OUT" option, the "NOUT" option, the "code" option, and the
              6831                  node's basic type.  If the user specifies "OUT", this flag
              6832                  will be set;  if the user specifies "NOUT", this flag will
              6833                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6834                  this flag will be set if the "code" option was specified or
              6835                  if the node is of the "delimited string" or "symbol" varieties.
              6836        */
              6837    1         2 OPT BIT(1) UNAL INIT('0'B),
              6838        /*K* OPT - set if this node is "optional".  This flag is set if the
              6839                  PARTRGE definition of this node was enclosed in a set
              6840                  of [square-brackets].
              6841        */
              6842    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6843        /*K* RPEAT - specifies that this node can be repeated (may occur more than
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:173  
              6844                  once).  This flag is set of the PARTRGE definition of this node
              6845                  was enclosed in a set of *asterisks*.
              6846        */
              6847    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6848        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6849                  after this node.  This flag is set unless the PARTRGE
              6850                  definition of this node included a trailing hyphen-.
              6851        */
              6852    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6853        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6854                  incorporating all of the text (and blanks and/or comments)
              6855                  accepted by this node, with no editing or case conversion.
              6856                  This flag is set if the PARTRGE definition of this node
              6857                  included the "(RTEXT)" option.
              6858        */
              6859    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6860        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6861        */
              6862    1         2 CODE UBIN (16) UNAL INIT(0),
              6863        /*K* CODE - specifies the "code number" for this parse node.  This
              6864                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6865                  any parse block built by X$PARSE which corresponds to this node.
              6866        */
              6867    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6868        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6869                  this parse node.
              6870        */
              6871        %IF '1'B;
              6872    1         ;
              6873        %ELSE;
              6875        %ENDIF;
              6877             %P$NODE(NAME=DD_L@AND,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6878        /*F*  NAME:     P$NODE
              6879              FUNCTION: a structure used to describe syntax nodes, as built by
              6880                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6881                  used to examine all of the attributes of nodes of several
              6882                  types:  koncat, list, alternative, and reducing alternative.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:174  
              6883                  It may also be used to examine a few of the attributes of
              6884                  symbol and delimited-string nodes, as indicated.
              6885        */
              6886        %LSET STR='STATIC SYMDEF        ';
              6887        %IF '1'B;
              6888        %LSET INIT=INIT;
              6889        %LSET ENDINIT=;
              6890        %ELSE;
              6893        %ENDIF;
              6894        %IF '1'B;
              6895    1   DCL 1 DD_L@AND STATIC SYMDEF ALIGNED,
              6896        %ELSE;
              6898        %ENDIF;
              6899    1         2 TYPE UBIN(3) UNAL INIT(4),
              6900        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6901                  file for the permissible values in this field (%TYPE_whatever#).
              6902        */
              6903    1         2 P_F BIT(1) UNAL INIT('0'B),
              6904        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6905                  any attempt to match this node.  This flag is set if the
              6906                  user supplied the "(PRE)" option in jhir PARTRGE definition
              6907                  of this node.
              6908        */
              6909    1         2 S_F BIT(1) UNAL INIT('0'B),
              6910        /*K* S_F - specifies that the user wants to be able to "post-approve"
              6911                  any successful attempts to match this node;  set if the user
              6912                  supplied the "(SUCC)" option in the PARTRGE definition of this
              6913                  node.
              6914        */
              6915    1         2 F_F BIT(1) UNAL INIT('0'B),
              6916        /*K* F_F - specifies that the user wants to be notified of any
              6917                  failed attempts to match this node;  set if the user specified
              6918                  the "(FAIL)" option in the PARTRGE definition of this node.
              6919        */
              6920    1         2 O_F BIT(1) UNAL INIT('0'B),
              6921        /*K* O_F - specifies that this node is to result in the creation of
              6922                  a block in the X$PARSE output tree.  The setting of this
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:175  
              6923                  flag is controlled by several PARTRGE attributes:  the
              6924                  "OUT" option, the "NOUT" option, the "code" option, and the
              6925                  node's basic type.  If the user specifies "OUT", this flag
              6926                  will be set;  if the user specifies "NOUT", this flag will
              6927                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              6928                  this flag will be set if the "code" option was specified or
              6929                  if the node is of the "delimited string" or "symbol" varieties.
              6930        */
              6931    1         2 OPT BIT(1) UNAL INIT('0'B),
              6932        /*K* OPT - set if this node is "optional".  This flag is set if the
              6933                  PARTRGE definition of this node was enclosed in a set
              6934                  of [square-brackets].
              6935        */
              6936    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              6937        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              6938                  once).  This flag is set of the PARTRGE definition of this node
              6939                  was enclosed in a set of *asterisks*.
              6940        */
              6941    1         2 SKBL BIT(1) UNAL INIT('0'B),
              6942        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              6943                  after this node.  This flag is set unless the PARTRGE
              6944                  definition of this node included a trailing hyphen-.
              6945        */
              6946    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              6947        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              6948                  incorporating all of the text (and blanks and/or comments)
              6949                  accepted by this node, with no editing or case conversion.
              6950                  This flag is set if the PARTRGE definition of this node
              6951                  included the "(RTEXT)" option.
              6952        */
              6953    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              6954        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              6955        */
              6956    1         2 CODE UBIN (16) UNAL INIT(0),
              6957        /*K* CODE - specifies the "code number" for this parse node.  This
              6958                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              6959                  any parse block built by X$PARSE which corresponds to this node.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:176  
              6960        */
              6961    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              6962        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              6963                  this parse node.
              6964        */
              6965        %IF '1'B;
              6966    1         ;
              6967        %ELSE;
              6969        %ENDIF;
              6971             %P$NODE(NAME=DD_SYMBOLS,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              6972        /*F*  NAME:     P$NODE
              6973              FUNCTION: a structure used to describe syntax nodes, as built by
              6974                  PARTRGE and interrogated by X$PARSE.  This structure may be
              6975                  used to examine all of the attributes of nodes of several
              6976                  types:  koncat, list, alternative, and reducing alternative.
              6977                  It may also be used to examine a few of the attributes of
              6978                  symbol and delimited-string nodes, as indicated.
              6979        */
              6980        %LSET STR='STATIC SYMDEF        ';
              6981        %IF '1'B;
              6982        %LSET INIT=INIT;
              6983        %LSET ENDINIT=;
              6984        %ELSE;
              6987        %ENDIF;
              6988        %IF '1'B;
              6989    1   DCL 1 DD_SYMBOLS STATIC SYMDEF ALIGNED,
              6990        %ELSE;
              6992        %ENDIF;
              6993    1         2 TYPE UBIN(3) UNAL INIT(4),
              6994        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              6995                  file for the permissible values in this field (%TYPE_whatever#).
              6996        */
              6997    1         2 P_F BIT(1) UNAL INIT('0'B),
              6998        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              6999                  any attempt to match this node.  This flag is set if the
              7000                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7001                  of this node.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:177  
              7002        */
              7003    1         2 S_F BIT(1) UNAL INIT('0'B),
              7004        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7005                  any successful attempts to match this node;  set if the user
              7006                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7007                  node.
              7008        */
              7009    1         2 F_F BIT(1) UNAL INIT('0'B),
              7010        /*K* F_F - specifies that the user wants to be notified of any
              7011                  failed attempts to match this node;  set if the user specified
              7012                  the "(FAIL)" option in the PARTRGE definition of this node.
              7013        */
              7014    1         2 O_F BIT(1) UNAL INIT('0'B),
              7015        /*K* O_F - specifies that this node is to result in the creation of
              7016                  a block in the X$PARSE output tree.  The setting of this
              7017                  flag is controlled by several PARTRGE attributes:  the
              7018                  "OUT" option, the "NOUT" option, the "code" option, and the
              7019                  node's basic type.  If the user specifies "OUT", this flag
              7020                  will be set;  if the user specifies "NOUT", this flag will
              7021                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7022                  this flag will be set if the "code" option was specified or
              7023                  if the node is of the "delimited string" or "symbol" varieties.
              7024        */
              7025    1         2 OPT BIT(1) UNAL INIT('0'B),
              7026        /*K* OPT - set if this node is "optional".  This flag is set if the
              7027                  PARTRGE definition of this node was enclosed in a set
              7028                  of [square-brackets].
              7029        */
              7030    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7031        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7032                  once).  This flag is set of the PARTRGE definition of this node
              7033                  was enclosed in a set of *asterisks*.
              7034        */
              7035    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7036        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7037                  after this node.  This flag is set unless the PARTRGE
              7038                  definition of this node included a trailing hyphen-.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:178  
              7039        */
              7040    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7041        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7042                  incorporating all of the text (and blanks and/or comments)
              7043                  accepted by this node, with no editing or case conversion.
              7044                  This flag is set if the PARTRGE definition of this node
              7045                  included the "(RTEXT)" option.
              7046        */
              7047    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7048        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7049        */
              7050    1         2 CODE UBIN (16) UNAL INIT(0),
              7051        /*K* CODE - specifies the "code number" for this parse node.  This
              7052                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7053                  any parse block built by X$PARSE which corresponds to this node.
              7054        */
              7055    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              7056        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7057                  this parse node.
              7058        */
              7059        %IF '1'B;
              7060    1         ;
              7061        %ELSE;
              7063        %ENDIF;
              7065             %P$NODE(NAME=DD_SYMDEL,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              7066        /*F*  NAME:     P$NODE
              7067              FUNCTION: a structure used to describe syntax nodes, as built by
              7068                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7069                  used to examine all of the attributes of nodes of several
              7070                  types:  koncat, list, alternative, and reducing alternative.
              7071                  It may also be used to examine a few of the attributes of
              7072                  symbol and delimited-string nodes, as indicated.
              7073        */
              7074        %LSET STR='STATIC SYMDEF        ';
              7075        %IF '1'B;
              7076        %LSET INIT=INIT;
              7077        %LSET ENDINIT=;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:179  
              7078        %ELSE;
              7081        %ENDIF;
              7082        %IF '1'B;
              7083    1   DCL 1 DD_SYMDEL STATIC SYMDEF ALIGNED,
              7084        %ELSE;
              7086        %ENDIF;
              7087    1         2 TYPE UBIN(3) UNAL INIT(4),
              7088        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7089                  file for the permissible values in this field (%TYPE_whatever#).
              7090        */
              7091    1         2 P_F BIT(1) UNAL INIT('0'B),
              7092        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7093                  any attempt to match this node.  This flag is set if the
              7094                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7095                  of this node.
              7096        */
              7097    1         2 S_F BIT(1) UNAL INIT('0'B),
              7098        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7099                  any successful attempts to match this node;  set if the user
              7100                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7101                  node.
              7102        */
              7103    1         2 F_F BIT(1) UNAL INIT('0'B),
              7104        /*K* F_F - specifies that the user wants to be notified of any
              7105                  failed attempts to match this node;  set if the user specified
              7106                  the "(FAIL)" option in the PARTRGE definition of this node.
              7107        */
              7108    1         2 O_F BIT(1) UNAL INIT('0'B),
              7109        /*K* O_F - specifies that this node is to result in the creation of
              7110                  a block in the X$PARSE output tree.  The setting of this
              7111                  flag is controlled by several PARTRGE attributes:  the
              7112                  "OUT" option, the "NOUT" option, the "code" option, and the
              7113                  node's basic type.  If the user specifies "OUT", this flag
              7114                  will be set;  if the user specifies "NOUT", this flag will
              7115                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7116                  this flag will be set if the "code" option was specified or
              7117                  if the node is of the "delimited string" or "symbol" varieties.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:180  
              7118        */
              7119    1         2 OPT BIT(1) UNAL INIT('0'B),
              7120        /*K* OPT - set if this node is "optional".  This flag is set if the
              7121                  PARTRGE definition of this node was enclosed in a set
              7122                  of [square-brackets].
              7123        */
              7124    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7125        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7126                  once).  This flag is set of the PARTRGE definition of this node
              7127                  was enclosed in a set of *asterisks*.
              7128        */
              7129    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7130        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7131                  after this node.  This flag is set unless the PARTRGE
              7132                  definition of this node included a trailing hyphen-.
              7133        */
              7134    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7135        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7136                  incorporating all of the text (and blanks and/or comments)
              7137                  accepted by this node, with no editing or case conversion.
              7138                  This flag is set if the PARTRGE definition of this node
              7139                  included the "(RTEXT)" option.
              7140        */
              7141    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7142        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7143        */
              7144    1         2 CODE UBIN (16) UNAL INIT(0),
              7145        /*K* CODE - specifies the "code number" for this parse node.  This
              7146                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7147                  any parse block built by X$PARSE which corresponds to this node.
              7148        */
              7149    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              7150        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7151                  this parse node.
              7152        */
              7153        %IF '1'B;
              7154    1         ;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:181  
              7155        %ELSE;
              7157        %ENDIF;
              7159             %P$NODE(NAME=DD_SYMLIST,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              7160        /*F*  NAME:     P$NODE
              7161              FUNCTION: a structure used to describe syntax nodes, as built by
              7162                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7163                  used to examine all of the attributes of nodes of several
              7164                  types:  koncat, list, alternative, and reducing alternative.
              7165                  It may also be used to examine a few of the attributes of
              7166                  symbol and delimited-string nodes, as indicated.
              7167        */
              7168        %LSET STR='STATIC SYMDEF        ';
              7169        %IF '1'B;
              7170        %LSET INIT=INIT;
              7171        %LSET ENDINIT=;
              7172        %ELSE;
              7175        %ENDIF;
              7176        %IF '1'B;
              7177    1   DCL 1 DD_SYMLIST STATIC SYMDEF ALIGNED,
              7178        %ELSE;
              7180        %ENDIF;
              7181    1         2 TYPE UBIN(3) UNAL INIT(4),
              7182        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7183                  file for the permissible values in this field (%TYPE_whatever#).
              7184        */
              7185    1         2 P_F BIT(1) UNAL INIT('0'B),
              7186        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7187                  any attempt to match this node.  This flag is set if the
              7188                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7189                  of this node.
              7190        */
              7191    1         2 S_F BIT(1) UNAL INIT('0'B),
              7192        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7193                  any successful attempts to match this node;  set if the user
              7194                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7195                  node.
              7196        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:182  
              7197    1         2 F_F BIT(1) UNAL INIT('0'B),
              7198        /*K* F_F - specifies that the user wants to be notified of any
              7199                  failed attempts to match this node;  set if the user specified
              7200                  the "(FAIL)" option in the PARTRGE definition of this node.
              7201        */
              7202    1         2 O_F BIT(1) UNAL INIT('0'B),
              7203        /*K* O_F - specifies that this node is to result in the creation of
              7204                  a block in the X$PARSE output tree.  The setting of this
              7205                  flag is controlled by several PARTRGE attributes:  the
              7206                  "OUT" option, the "NOUT" option, the "code" option, and the
              7207                  node's basic type.  If the user specifies "OUT", this flag
              7208                  will be set;  if the user specifies "NOUT", this flag will
              7209                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7210                  this flag will be set if the "code" option was specified or
              7211                  if the node is of the "delimited string" or "symbol" varieties.
              7212        */
              7213    1         2 OPT BIT(1) UNAL INIT('0'B),
              7214        /*K* OPT - set if this node is "optional".  This flag is set if the
              7215                  PARTRGE definition of this node was enclosed in a set
              7216                  of [square-brackets].
              7217        */
              7218    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7219        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7220                  once).  This flag is set of the PARTRGE definition of this node
              7221                  was enclosed in a set of *asterisks*.
              7222        */
              7223    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7224        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7225                  after this node.  This flag is set unless the PARTRGE
              7226                  definition of this node included a trailing hyphen-.
              7227        */
              7228    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7229        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7230                  incorporating all of the text (and blanks and/or comments)
              7231                  accepted by this node, with no editing or case conversion.
              7232                  This flag is set if the PARTRGE definition of this node
              7233                  included the "(RTEXT)" option.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:183  
              7234        */
              7235    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7236        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7237        */
              7238    1         2 CODE UBIN (16) UNAL INIT(0),
              7239        /*K* CODE - specifies the "code number" for this parse node.  This
              7240                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7241                  any parse block built by X$PARSE which corresponds to this node.
              7242        */
              7243    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              7244        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7245                  this parse node.
              7246        */
              7247        %IF '1'B;
              7248    1         ;
              7249        %ELSE;
              7251        %ENDIF;
              7253             %P$NODE(NAME=DD_INSTR_CONT,STCLASS=STCLASS,NDTYPE=KONCAT,#SUBNODES=1);
              7254        /*F*  NAME:     P$NODE
              7255              FUNCTION: a structure used to describe syntax nodes, as built by
              7256                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7257                  used to examine all of the attributes of nodes of several
              7258                  types:  koncat, list, alternative, and reducing alternative.
              7259                  It may also be used to examine a few of the attributes of
              7260                  symbol and delimited-string nodes, as indicated.
              7261        */
              7262        %LSET STR='STATIC SYMDEF        ';
              7263        %IF '1'B;
              7264        %LSET INIT=INIT;
              7265        %LSET ENDINIT=;
              7266        %ELSE;
              7269        %ENDIF;
              7270        %IF '1'B;
              7271    1   DCL 1 DD_INSTR_CONT STATIC SYMDEF ALIGNED,
              7272        %ELSE;
              7274        %ENDIF;
              7275    1         2 TYPE UBIN(3) UNAL INIT(4),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:184  
              7276        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7277                  file for the permissible values in this field (%TYPE_whatever#).
              7278        */
              7279    1         2 P_F BIT(1) UNAL INIT('0'B),
              7280        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7281                  any attempt to match this node.  This flag is set if the
              7282                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7283                  of this node.
              7284        */
              7285    1         2 S_F BIT(1) UNAL INIT('0'B),
              7286        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7287                  any successful attempts to match this node;  set if the user
              7288                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7289                  node.
              7290        */
              7291    1         2 F_F BIT(1) UNAL INIT('0'B),
              7292        /*K* F_F - specifies that the user wants to be notified of any
              7293                  failed attempts to match this node;  set if the user specified
              7294                  the "(FAIL)" option in the PARTRGE definition of this node.
              7295        */
              7296    1         2 O_F BIT(1) UNAL INIT('0'B),
              7297        /*K* O_F - specifies that this node is to result in the creation of
              7298                  a block in the X$PARSE output tree.  The setting of this
              7299                  flag is controlled by several PARTRGE attributes:  the
              7300                  "OUT" option, the "NOUT" option, the "code" option, and the
              7301                  node's basic type.  If the user specifies "OUT", this flag
              7302                  will be set;  if the user specifies "NOUT", this flag will
              7303                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7304                  this flag will be set if the "code" option was specified or
              7305                  if the node is of the "delimited string" or "symbol" varieties.
              7306        */
              7307    1         2 OPT BIT(1) UNAL INIT('0'B),
              7308        /*K* OPT - set if this node is "optional".  This flag is set if the
              7309                  PARTRGE definition of this node was enclosed in a set
              7310                  of [square-brackets].
              7311        */
              7312    1         2 RPEAT BIT(1) UNAL INIT('0'B),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:185  
              7313        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7314                  once).  This flag is set of the PARTRGE definition of this node
              7315                  was enclosed in a set of *asterisks*.
              7316        */
              7317    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7318        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7319                  after this node.  This flag is set unless the PARTRGE
              7320                  definition of this node included a trailing hyphen-.
              7321        */
              7322    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7323        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7324                  incorporating all of the text (and blanks and/or comments)
              7325                  accepted by this node, with no editing or case conversion.
              7326                  This flag is set if the PARTRGE definition of this node
              7327                  included the "(RTEXT)" option.
              7328        */
              7329    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7330        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7331        */
              7332    1         2 CODE UBIN (16) UNAL INIT(0),
              7333        /*K* CODE - specifies the "code number" for this parse node.  This
              7334                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7335                  any parse block built by X$PARSE which corresponds to this node.
              7336        */
              7337    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NIL))
              7338        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7339                  this parse node.
              7340        */
              7341        %IF '1'B;
              7342    1         ;
              7343        %ELSE;
              7345        %ENDIF;
              7347        %LSET P=NX_;
              7348    1        DCL NX_DUMP SBIN SYMREF;
              7349    1        DCL NX_ECHO SBIN SYMREF;
              7350    1        DCL NX_OUTPUT SBIN SYMREF;
              7351    1        DCL NX_READ SBIN SYMREF;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:186  
              7352            %P$NODE(NAME=DD_CNR2,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(CNR2_HOST)");
              7353        /*F*  NAME:     P$NODE
              7354              FUNCTION: a structure used to describe syntax nodes, as built by
              7355                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7356                  used to examine all of the attributes of nodes of several
              7357                  types:  koncat, list, alternative, and reducing alternative.
              7358                  It may also be used to examine a few of the attributes of
              7359                  symbol and delimited-string nodes, as indicated.
              7360        */
              7361        %LSET STR='STATIC SYMDEF        ';
              7362        %IF '1'B;
              7363        %LSET INIT=INIT;
              7364        %LSET ENDINIT=;
              7365        %ELSE;
              7368        %ENDIF;
              7369        %IF '1'B;
              7370    1   DCL 1 DD_CNR2 STATIC SYMDEF ALIGNED,
              7371        %ELSE;
              7373        %ENDIF;
              7374    1         2 TYPE UBIN(3) UNAL INIT(4),
              7375        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7376                  file for the permissible values in this field (%TYPE_whatever#).
              7377        */
              7378    1         2 P_F BIT(1) UNAL INIT('0'B),
              7379        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7380                  any attempt to match this node.  This flag is set if the
              7381                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7382                  of this node.
              7383        */
              7384    1         2 S_F BIT(1) UNAL INIT('0'B),
              7385        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7386                  any successful attempts to match this node;  set if the user
              7387                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7388                  node.
              7389        */
              7390    1         2 F_F BIT(1) UNAL INIT('0'B),
              7391        /*K* F_F - specifies that the user wants to be notified of any
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:187  
              7392                  failed attempts to match this node;  set if the user specified
              7393                  the "(FAIL)" option in the PARTRGE definition of this node.
              7394        */
              7395    1         2 O_F BIT(1) UNAL INIT('0'B),
              7396        /*K* O_F - specifies that this node is to result in the creation of
              7397                  a block in the X$PARSE output tree.  The setting of this
              7398                  flag is controlled by several PARTRGE attributes:  the
              7399                  "OUT" option, the "NOUT" option, the "code" option, and the
              7400                  node's basic type.  If the user specifies "OUT", this flag
              7401                  will be set;  if the user specifies "NOUT", this flag will
              7402                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7403                  this flag will be set if the "code" option was specified or
              7404                  if the node is of the "delimited string" or "symbol" varieties.
              7405        */
              7406    1         2 OPT BIT(1) UNAL INIT('0'B),
              7407        /*K* OPT - set if this node is "optional".  This flag is set if the
              7408                  PARTRGE definition of this node was enclosed in a set
              7409                  of [square-brackets].
              7410        */
              7411    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7412        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7413                  once).  This flag is set of the PARTRGE definition of this node
              7414                  was enclosed in a set of *asterisks*.
              7415        */
              7416    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7417        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7418                  after this node.  This flag is set unless the PARTRGE
              7419                  definition of this node included a trailing hyphen-.
              7420        */
              7421    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7422        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7423                  incorporating all of the text (and blanks and/or comments)
              7424                  accepted by this node, with no editing or case conversion.
              7425                  This flag is set if the PARTRGE definition of this node
              7426                  included the "(RTEXT)" option.
              7427        */
              7428    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:188  
              7429        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7430        */
              7431    1         2 CODE UBIN (16) UNAL INIT(0),
              7432        /*K* CODE - specifies the "code number" for this parse node.  This
              7433                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7434                  any parse block built by X$PARSE which corresponds to this node.
              7435        */
              7436    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(CNR2_HOST))
              7437        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7438                  this parse node.
              7439        */
              7440        %IF '1'B;
              7441    1         ;
              7442        %ELSE;
              7444        %ENDIF;
              7446             %P$NODE(NAME=DD_BASE,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(OCTIL)");
              7447        /*F*  NAME:     P$NODE
              7448              FUNCTION: a structure used to describe syntax nodes, as built by
              7449                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7450                  used to examine all of the attributes of nodes of several
              7451                  types:  koncat, list, alternative, and reducing alternative.
              7452                  It may also be used to examine a few of the attributes of
              7453                  symbol and delimited-string nodes, as indicated.
              7454        */
              7455        %LSET STR='STATIC SYMDEF        ';
              7456        %IF '1'B;
              7457        %LSET INIT=INIT;
              7458        %LSET ENDINIT=;
              7459        %ELSE;
              7462        %ENDIF;
              7463        %IF '1'B;
              7464    1   DCL 1 DD_BASE STATIC SYMDEF ALIGNED,
              7465        %ELSE;
              7467        %ENDIF;
              7468    1         2 TYPE UBIN(3) UNAL INIT(4),
              7469        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7470                  file for the permissible values in this field (%TYPE_whatever#).
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:189  
              7471        */
              7472    1         2 P_F BIT(1) UNAL INIT('0'B),
              7473        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7474                  any attempt to match this node.  This flag is set if the
              7475                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7476                  of this node.
              7477        */
              7478    1         2 S_F BIT(1) UNAL INIT('0'B),
              7479        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7480                  any successful attempts to match this node;  set if the user
              7481                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7482                  node.
              7483        */
              7484    1         2 F_F BIT(1) UNAL INIT('0'B),
              7485        /*K* F_F - specifies that the user wants to be notified of any
              7486                  failed attempts to match this node;  set if the user specified
              7487                  the "(FAIL)" option in the PARTRGE definition of this node.
              7488        */
              7489    1         2 O_F BIT(1) UNAL INIT('0'B),
              7490        /*K* O_F - specifies that this node is to result in the creation of
              7491                  a block in the X$PARSE output tree.  The setting of this
              7492                  flag is controlled by several PARTRGE attributes:  the
              7493                  "OUT" option, the "NOUT" option, the "code" option, and the
              7494                  node's basic type.  If the user specifies "OUT", this flag
              7495                  will be set;  if the user specifies "NOUT", this flag will
              7496                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7497                  this flag will be set if the "code" option was specified or
              7498                  if the node is of the "delimited string" or "symbol" varieties.
              7499        */
              7500    1         2 OPT BIT(1) UNAL INIT('0'B),
              7501        /*K* OPT - set if this node is "optional".  This flag is set if the
              7502                  PARTRGE definition of this node was enclosed in a set
              7503                  of [square-brackets].
              7504        */
              7505    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7506        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7507                  once).  This flag is set of the PARTRGE definition of this node
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:190  
              7508                  was enclosed in a set of *asterisks*.
              7509        */
              7510    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7511        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7512                  after this node.  This flag is set unless the PARTRGE
              7513                  definition of this node included a trailing hyphen-.
              7514        */
              7515    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7516        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7517                  incorporating all of the text (and blanks and/or comments)
              7518                  accepted by this node, with no editing or case conversion.
              7519                  This flag is set if the PARTRGE definition of this node
              7520                  included the "(RTEXT)" option.
              7521        */
              7522    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7523        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7524        */
              7525    1         2 CODE UBIN (16) UNAL INIT(0),
              7526        /*K* CODE - specifies the "code number" for this parse node.  This
              7527                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7528                  any parse block built by X$PARSE which corresponds to this node.
              7529        */
              7530    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(OCTIL))
              7531        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7532                  this parse node.
              7533        */
              7534        %IF '1'B;
              7535    1         ;
              7536        %ELSE;
              7538        %ENDIF;
              7540             %P$NODE(NAME=DD_BASE1,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(OCTIL1)");
              7541        /*F*  NAME:     P$NODE
              7542              FUNCTION: a structure used to describe syntax nodes, as built by
              7543                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7544                  used to examine all of the attributes of nodes of several
              7545                  types:  koncat, list, alternative, and reducing alternative.
              7546                  It may also be used to examine a few of the attributes of
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:191  
              7547                  symbol and delimited-string nodes, as indicated.
              7548        */
              7549        %LSET STR='STATIC SYMDEF        ';
              7550        %IF '1'B;
              7551        %LSET INIT=INIT;
              7552        %LSET ENDINIT=;
              7553        %ELSE;
              7556        %ENDIF;
              7557        %IF '1'B;
              7558    1   DCL 1 DD_BASE1 STATIC SYMDEF ALIGNED,
              7559        %ELSE;
              7561        %ENDIF;
              7562    1         2 TYPE UBIN(3) UNAL INIT(4),
              7563        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7564                  file for the permissible values in this field (%TYPE_whatever#).
              7565        */
              7566    1         2 P_F BIT(1) UNAL INIT('0'B),
              7567        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7568                  any attempt to match this node.  This flag is set if the
              7569                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7570                  of this node.
              7571        */
              7572    1         2 S_F BIT(1) UNAL INIT('0'B),
              7573        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7574                  any successful attempts to match this node;  set if the user
              7575                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7576                  node.
              7577        */
              7578    1         2 F_F BIT(1) UNAL INIT('0'B),
              7579        /*K* F_F - specifies that the user wants to be notified of any
              7580                  failed attempts to match this node;  set if the user specified
              7581                  the "(FAIL)" option in the PARTRGE definition of this node.
              7582        */
              7583    1         2 O_F BIT(1) UNAL INIT('0'B),
              7584        /*K* O_F - specifies that this node is to result in the creation of
              7585                  a block in the X$PARSE output tree.  The setting of this
              7586                  flag is controlled by several PARTRGE attributes:  the
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:192  
              7587                  "OUT" option, the "NOUT" option, the "code" option, and the
              7588                  node's basic type.  If the user specifies "OUT", this flag
              7589                  will be set;  if the user specifies "NOUT", this flag will
              7590                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7591                  this flag will be set if the "code" option was specified or
              7592                  if the node is of the "delimited string" or "symbol" varieties.
              7593        */
              7594    1         2 OPT BIT(1) UNAL INIT('0'B),
              7595        /*K* OPT - set if this node is "optional".  This flag is set if the
              7596                  PARTRGE definition of this node was enclosed in a set
              7597                  of [square-brackets].
              7598        */
              7599    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7600        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7601                  once).  This flag is set of the PARTRGE definition of this node
              7602                  was enclosed in a set of *asterisks*.
              7603        */
              7604    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7605        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7606                  after this node.  This flag is set unless the PARTRGE
              7607                  definition of this node included a trailing hyphen-.
              7608        */
              7609    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7610        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7611                  incorporating all of the text (and blanks and/or comments)
              7612                  accepted by this node, with no editing or case conversion.
              7613                  This flag is set if the PARTRGE definition of this node
              7614                  included the "(RTEXT)" option.
              7615        */
              7616    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7617        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7618        */
              7619    1         2 CODE UBIN (16) UNAL INIT(0),
              7620        /*K* CODE - specifies the "code number" for this parse node.  This
              7621                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7622                  any parse block built by X$PARSE which corresponds to this node.
              7623        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:193  
              7624    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(OCTIL1))
              7625        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7626                  this parse node.
              7627        */
              7628        %IF '1'B;
              7629    1         ;
              7630        %ELSE;
              7632        %ENDIF;
              7634             %P$NODE(NAME=DD_BASEDIG,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(ODIG)");
              7635        /*F*  NAME:     P$NODE
              7636              FUNCTION: a structure used to describe syntax nodes, as built by
              7637                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7638                  used to examine all of the attributes of nodes of several
              7639                  types:  koncat, list, alternative, and reducing alternative.
              7640                  It may also be used to examine a few of the attributes of
              7641                  symbol and delimited-string nodes, as indicated.
              7642        */
              7643        %LSET STR='STATIC SYMDEF        ';
              7644        %IF '1'B;
              7645        %LSET INIT=INIT;
              7646        %LSET ENDINIT=;
              7647        %ELSE;
              7650        %ENDIF;
              7651        %IF '1'B;
              7652    1   DCL 1 DD_BASEDIG STATIC SYMDEF ALIGNED,
              7653        %ELSE;
              7655        %ENDIF;
              7656    1         2 TYPE UBIN(3) UNAL INIT(4),
              7657        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7658                  file for the permissible values in this field (%TYPE_whatever#).
              7659        */
              7660    1         2 P_F BIT(1) UNAL INIT('0'B),
              7661        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7662                  any attempt to match this node.  This flag is set if the
              7663                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7664                  of this node.
              7665        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:194  
              7666    1         2 S_F BIT(1) UNAL INIT('0'B),
              7667        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7668                  any successful attempts to match this node;  set if the user
              7669                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7670                  node.
              7671        */
              7672    1         2 F_F BIT(1) UNAL INIT('0'B),
              7673        /*K* F_F - specifies that the user wants to be notified of any
              7674                  failed attempts to match this node;  set if the user specified
              7675                  the "(FAIL)" option in the PARTRGE definition of this node.
              7676        */
              7677    1         2 O_F BIT(1) UNAL INIT('0'B),
              7678        /*K* O_F - specifies that this node is to result in the creation of
              7679                  a block in the X$PARSE output tree.  The setting of this
              7680                  flag is controlled by several PARTRGE attributes:  the
              7681                  "OUT" option, the "NOUT" option, the "code" option, and the
              7682                  node's basic type.  If the user specifies "OUT", this flag
              7683                  will be set;  if the user specifies "NOUT", this flag will
              7684                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7685                  this flag will be set if the "code" option was specified or
              7686                  if the node is of the "delimited string" or "symbol" varieties.
              7687        */
              7688    1         2 OPT BIT(1) UNAL INIT('0'B),
              7689        /*K* OPT - set if this node is "optional".  This flag is set if the
              7690                  PARTRGE definition of this node was enclosed in a set
              7691                  of [square-brackets].
              7692        */
              7693    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7694        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7695                  once).  This flag is set of the PARTRGE definition of this node
              7696                  was enclosed in a set of *asterisks*.
              7697        */
              7698    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7699        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7700                  after this node.  This flag is set unless the PARTRGE
              7701                  definition of this node included a trailing hyphen-.
              7702        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:195  
              7703    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7704        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7705                  incorporating all of the text (and blanks and/or comments)
              7706                  accepted by this node, with no editing or case conversion.
              7707                  This flag is set if the PARTRGE definition of this node
              7708                  included the "(RTEXT)" option.
              7709        */
              7710    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7711        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7712        */
              7713    1         2 CODE UBIN (16) UNAL INIT(0),
              7714        /*K* CODE - specifies the "code number" for this parse node.  This
              7715                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7716                  any parse block built by X$PARSE which corresponds to this node.
              7717        */
              7718    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(ODIG))
              7719        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7720                  this parse node.
              7721        */
              7722        %IF '1'B;
              7723    1         ;
              7724        %ELSE;
              7726        %ENDIF;
              7728             %P$NODE(NAME=DD_BASEBOTH,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES=
              7728                 "ADDR(OCTILBOTH)");
              7729        /*F*  NAME:     P$NODE
              7730              FUNCTION: a structure used to describe syntax nodes, as built by
              7731                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7732                  used to examine all of the attributes of nodes of several
              7733                  types:  koncat, list, alternative, and reducing alternative.
              7734                  It may also be used to examine a few of the attributes of
              7735                  symbol and delimited-string nodes, as indicated.
              7736        */
              7737        %LSET STR='STATIC SYMDEF        ';
              7738        %IF '1'B;
              7739        %LSET INIT=INIT;
              7740        %LSET ENDINIT=;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:196  
              7741        %ELSE;
              7744        %ENDIF;
              7745        %IF '1'B;
              7746    1   DCL 1 DD_BASEBOTH STATIC SYMDEF ALIGNED,
              7747        %ELSE;
              7749        %ENDIF;
              7750    1         2 TYPE UBIN(3) UNAL INIT(4),
              7751        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7752                  file for the permissible values in this field (%TYPE_whatever#).
              7753        */
              7754    1         2 P_F BIT(1) UNAL INIT('0'B),
              7755        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7756                  any attempt to match this node.  This flag is set if the
              7757                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7758                  of this node.
              7759        */
              7760    1         2 S_F BIT(1) UNAL INIT('0'B),
              7761        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7762                  any successful attempts to match this node;  set if the user
              7763                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7764                  node.
              7765        */
              7766    1         2 F_F BIT(1) UNAL INIT('0'B),
              7767        /*K* F_F - specifies that the user wants to be notified of any
              7768                  failed attempts to match this node;  set if the user specified
              7769                  the "(FAIL)" option in the PARTRGE definition of this node.
              7770        */
              7771    1         2 O_F BIT(1) UNAL INIT('0'B),
              7772        /*K* O_F - specifies that this node is to result in the creation of
              7773                  a block in the X$PARSE output tree.  The setting of this
              7774                  flag is controlled by several PARTRGE attributes:  the
              7775                  "OUT" option, the "NOUT" option, the "code" option, and the
              7776                  node's basic type.  If the user specifies "OUT", this flag
              7777                  will be set;  if the user specifies "NOUT", this flag will
              7778                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7779                  this flag will be set if the "code" option was specified or
              7780                  if the node is of the "delimited string" or "symbol" varieties.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:197  
              7781        */
              7782    1         2 OPT BIT(1) UNAL INIT('0'B),
              7783        /*K* OPT - set if this node is "optional".  This flag is set if the
              7784                  PARTRGE definition of this node was enclosed in a set
              7785                  of [square-brackets].
              7786        */
              7787    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7788        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7789                  once).  This flag is set of the PARTRGE definition of this node
              7790                  was enclosed in a set of *asterisks*.
              7791        */
              7792    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7793        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7794                  after this node.  This flag is set unless the PARTRGE
              7795                  definition of this node included a trailing hyphen-.
              7796        */
              7797    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7798        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7799                  incorporating all of the text (and blanks and/or comments)
              7800                  accepted by this node, with no editing or case conversion.
              7801                  This flag is set if the PARTRGE definition of this node
              7802                  included the "(RTEXT)" option.
              7803        */
              7804    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7805        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7806        */
              7807    1         2 CODE UBIN (16) UNAL INIT(0),
              7808        /*K* CODE - specifies the "code number" for this parse node.  This
              7809                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7810                  any parse block built by X$PARSE which corresponds to this node.
              7811        */
              7812    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(OCTILBOTH))
              7813        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7814                  this parse node.
              7815        */
              7816        %IF '1'B;
              7817    1         ;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:198  
              7818        %ELSE;
              7820        %ENDIF;
              7822             %P$NODE(NAME=DD_INSTR,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(INSTR)");
              7823        /*F*  NAME:     P$NODE
              7824              FUNCTION: a structure used to describe syntax nodes, as built by
              7825                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7826                  used to examine all of the attributes of nodes of several
              7827                  types:  koncat, list, alternative, and reducing alternative.
              7828                  It may also be used to examine a few of the attributes of
              7829                  symbol and delimited-string nodes, as indicated.
              7830        */
              7831        %LSET STR='STATIC SYMDEF        ';
              7832        %IF '1'B;
              7833        %LSET INIT=INIT;
              7834        %LSET ENDINIT=;
              7835        %ELSE;
              7838        %ENDIF;
              7839        %IF '1'B;
              7840    1   DCL 1 DD_INSTR STATIC SYMDEF ALIGNED,
              7841        %ELSE;
              7843        %ENDIF;
              7844    1         2 TYPE UBIN(3) UNAL INIT(4),
              7845        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7846                  file for the permissible values in this field (%TYPE_whatever#).
              7847        */
              7848    1         2 P_F BIT(1) UNAL INIT('0'B),
              7849        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7850                  any attempt to match this node.  This flag is set if the
              7851                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7852                  of this node.
              7853        */
              7854    1         2 S_F BIT(1) UNAL INIT('0'B),
              7855        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7856                  any successful attempts to match this node;  set if the user
              7857                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7858                  node.
              7859        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:199  
              7860    1         2 F_F BIT(1) UNAL INIT('0'B),
              7861        /*K* F_F - specifies that the user wants to be notified of any
              7862                  failed attempts to match this node;  set if the user specified
              7863                  the "(FAIL)" option in the PARTRGE definition of this node.
              7864        */
              7865    1         2 O_F BIT(1) UNAL INIT('0'B),
              7866        /*K* O_F - specifies that this node is to result in the creation of
              7867                  a block in the X$PARSE output tree.  The setting of this
              7868                  flag is controlled by several PARTRGE attributes:  the
              7869                  "OUT" option, the "NOUT" option, the "code" option, and the
              7870                  node's basic type.  If the user specifies "OUT", this flag
              7871                  will be set;  if the user specifies "NOUT", this flag will
              7872                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7873                  this flag will be set if the "code" option was specified or
              7874                  if the node is of the "delimited string" or "symbol" varieties.
              7875        */
              7876    1         2 OPT BIT(1) UNAL INIT('0'B),
              7877        /*K* OPT - set if this node is "optional".  This flag is set if the
              7878                  PARTRGE definition of this node was enclosed in a set
              7879                  of [square-brackets].
              7880        */
              7881    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              7882        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7883                  once).  This flag is set of the PARTRGE definition of this node
              7884                  was enclosed in a set of *asterisks*.
              7885        */
              7886    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7887        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7888                  after this node.  This flag is set unless the PARTRGE
              7889                  definition of this node included a trailing hyphen-.
              7890        */
              7891    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7892        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7893                  incorporating all of the text (and blanks and/or comments)
              7894                  accepted by this node, with no editing or case conversion.
              7895                  This flag is set if the PARTRGE definition of this node
              7896                  included the "(RTEXT)" option.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:200  
              7897        */
              7898    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7899        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7900        */
              7901    1         2 CODE UBIN (16) UNAL INIT(0),
              7902        /*K* CODE - specifies the "code number" for this parse node.  This
              7903                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7904                  any parse block built by X$PARSE which corresponds to this node.
              7905        */
              7906    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(INSTR))
              7907        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              7908                  this parse node.
              7909        */
              7910        %IF '1'B;
              7911    1         ;
              7912        %ELSE;
              7914        %ENDIF;
              7916             %P$NODE(NAME=DD_DUMP,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)DUMP)");
              7917        /*F*  NAME:     P$NODE
              7918              FUNCTION: a structure used to describe syntax nodes, as built by
              7919                  PARTRGE and interrogated by X$PARSE.  This structure may be
              7920                  used to examine all of the attributes of nodes of several
              7921                  types:  koncat, list, alternative, and reducing alternative.
              7922                  It may also be used to examine a few of the attributes of
              7923                  symbol and delimited-string nodes, as indicated.
              7924        */
              7925        %LSET STR='STATIC SYMDEF        ';
              7926        %IF '1'B;
              7927        %LSET INIT=INIT;
              7928        %LSET ENDINIT=;
              7929        %ELSE;
              7932        %ENDIF;
              7933        %IF '1'B;
              7934    1   DCL 1 DD_DUMP STATIC SYMDEF ALIGNED,
              7935        %ELSE;
              7937        %ENDIF;
              7938    1         2 TYPE UBIN(3) UNAL INIT(4),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:201  
              7939        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              7940                  file for the permissible values in this field (%TYPE_whatever#).
              7941        */
              7942    1         2 P_F BIT(1) UNAL INIT('0'B),
              7943        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              7944                  any attempt to match this node.  This flag is set if the
              7945                  user supplied the "(PRE)" option in jhir PARTRGE definition
              7946                  of this node.
              7947        */
              7948    1         2 S_F BIT(1) UNAL INIT('0'B),
              7949        /*K* S_F - specifies that the user wants to be able to "post-approve"
              7950                  any successful attempts to match this node;  set if the user
              7951                  supplied the "(SUCC)" option in the PARTRGE definition of this
              7952                  node.
              7953        */
              7954    1         2 F_F BIT(1) UNAL INIT('0'B),
              7955        /*K* F_F - specifies that the user wants to be notified of any
              7956                  failed attempts to match this node;  set if the user specified
              7957                  the "(FAIL)" option in the PARTRGE definition of this node.
              7958        */
              7959    1         2 O_F BIT(1) UNAL INIT('0'B),
              7960        /*K* O_F - specifies that this node is to result in the creation of
              7961                  a block in the X$PARSE output tree.  The setting of this
              7962                  flag is controlled by several PARTRGE attributes:  the
              7963                  "OUT" option, the "NOUT" option, the "code" option, and the
              7964                  node's basic type.  If the user specifies "OUT", this flag
              7965                  will be set;  if the user specifies "NOUT", this flag will
              7966                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              7967                  this flag will be set if the "code" option was specified or
              7968                  if the node is of the "delimited string" or "symbol" varieties.
              7969        */
              7970    1         2 OPT BIT(1) UNAL INIT('0'B),
              7971        /*K* OPT - set if this node is "optional".  This flag is set if the
              7972                  PARTRGE definition of this node was enclosed in a set
              7973                  of [square-brackets].
              7974        */
              7975    1         2 RPEAT BIT(1) UNAL INIT('0'B),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:202  
              7976        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              7977                  once).  This flag is set of the PARTRGE definition of this node
              7978                  was enclosed in a set of *asterisks*.
              7979        */
              7980    1         2 SKBL BIT(1) UNAL INIT('0'B),
              7981        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              7982                  after this node.  This flag is set unless the PARTRGE
              7983                  definition of this node included a trailing hyphen-.
              7984        */
              7985    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              7986        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              7987                  incorporating all of the text (and blanks and/or comments)
              7988                  accepted by this node, with no editing or case conversion.
              7989                  This flag is set if the PARTRGE definition of this node
              7990                  included the "(RTEXT)" option.
              7991        */
              7992    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              7993        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              7994        */
              7995    1         2 CODE UBIN (16) UNAL INIT(0),
              7996        /*K* CODE - specifies the "code number" for this parse node.  This
              7997                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              7998                  any parse block built by X$PARSE which corresponds to this node.
              7999        */
              8000    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NX_DUMP))
              8001        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8002                  this parse node.
              8003        */
              8004        %IF '1'B;
              8005    1         ;
              8006        %ELSE;
              8008        %ENDIF;
              8010             %P$NODE(NAME=DD_ECHO,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)ECHO)");
              8011        /*F*  NAME:     P$NODE
              8012              FUNCTION: a structure used to describe syntax nodes, as built by
              8013                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8014                  used to examine all of the attributes of nodes of several
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:203  
              8015                  types:  koncat, list, alternative, and reducing alternative.
              8016                  It may also be used to examine a few of the attributes of
              8017                  symbol and delimited-string nodes, as indicated.
              8018        */
              8019        %LSET STR='STATIC SYMDEF        ';
              8020        %IF '1'B;
              8021        %LSET INIT=INIT;
              8022        %LSET ENDINIT=;
              8023        %ELSE;
              8026        %ENDIF;
              8027        %IF '1'B;
              8028    1   DCL 1 DD_ECHO STATIC SYMDEF ALIGNED,
              8029        %ELSE;
              8031        %ENDIF;
              8032    1         2 TYPE UBIN(3) UNAL INIT(4),
              8033        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8034                  file for the permissible values in this field (%TYPE_whatever#).
              8035        */
              8036    1         2 P_F BIT(1) UNAL INIT('0'B),
              8037        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8038                  any attempt to match this node.  This flag is set if the
              8039                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8040                  of this node.
              8041        */
              8042    1         2 S_F BIT(1) UNAL INIT('0'B),
              8043        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8044                  any successful attempts to match this node;  set if the user
              8045                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8046                  node.
              8047        */
              8048    1         2 F_F BIT(1) UNAL INIT('0'B),
              8049        /*K* F_F - specifies that the user wants to be notified of any
              8050                  failed attempts to match this node;  set if the user specified
              8051                  the "(FAIL)" option in the PARTRGE definition of this node.
              8052        */
              8053    1         2 O_F BIT(1) UNAL INIT('0'B),
              8054        /*K* O_F - specifies that this node is to result in the creation of
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:204  
              8055                  a block in the X$PARSE output tree.  The setting of this
              8056                  flag is controlled by several PARTRGE attributes:  the
              8057                  "OUT" option, the "NOUT" option, the "code" option, and the
              8058                  node's basic type.  If the user specifies "OUT", this flag
              8059                  will be set;  if the user specifies "NOUT", this flag will
              8060                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8061                  this flag will be set if the "code" option was specified or
              8062                  if the node is of the "delimited string" or "symbol" varieties.
              8063        */
              8064    1         2 OPT BIT(1) UNAL INIT('0'B),
              8065        /*K* OPT - set if this node is "optional".  This flag is set if the
              8066                  PARTRGE definition of this node was enclosed in a set
              8067                  of [square-brackets].
              8068        */
              8069    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8070        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8071                  once).  This flag is set of the PARTRGE definition of this node
              8072                  was enclosed in a set of *asterisks*.
              8073        */
              8074    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8075        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8076                  after this node.  This flag is set unless the PARTRGE
              8077                  definition of this node included a trailing hyphen-.
              8078        */
              8079    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8080        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8081                  incorporating all of the text (and blanks and/or comments)
              8082                  accepted by this node, with no editing or case conversion.
              8083                  This flag is set if the PARTRGE definition of this node
              8084                  included the "(RTEXT)" option.
              8085        */
              8086    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8087        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8088        */
              8089    1         2 CODE UBIN (16) UNAL INIT(0),
              8090        /*K* CODE - specifies the "code number" for this parse node.  This
              8091                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:205  
              8092                  any parse block built by X$PARSE which corresponds to this node.
              8093        */
              8094    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NX_ECHO))
              8095        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8096                  this parse node.
              8097        */
              8098        %IF '1'B;
              8099    1         ;
              8100        %ELSE;
              8102        %ENDIF;
              8104             %P$NODE(NAME=DD_KEEP,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)KEEP)");
              8105        /*F*  NAME:     P$NODE
              8106              FUNCTION: a structure used to describe syntax nodes, as built by
              8107                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8108                  used to examine all of the attributes of nodes of several
              8109                  types:  koncat, list, alternative, and reducing alternative.
              8110                  It may also be used to examine a few of the attributes of
              8111                  symbol and delimited-string nodes, as indicated.
              8112        */
              8113        %LSET STR='STATIC SYMDEF        ';
              8114        %IF '1'B;
              8115        %LSET INIT=INIT;
              8116        %LSET ENDINIT=;
              8117        %ELSE;
              8120        %ENDIF;
              8121        %IF '1'B;
              8122    1   DCL 1 DD_KEEP STATIC SYMDEF ALIGNED,
              8123        %ELSE;
              8125        %ENDIF;
              8126    1         2 TYPE UBIN(3) UNAL INIT(4),
              8127        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8128                  file for the permissible values in this field (%TYPE_whatever#).
              8129        */
              8130    1         2 P_F BIT(1) UNAL INIT('0'B),
              8131        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8132                  any attempt to match this node.  This flag is set if the
              8133                  user supplied the "(PRE)" option in jhir PARTRGE definition
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:206  
              8134                  of this node.
              8135        */
              8136    1         2 S_F BIT(1) UNAL INIT('0'B),
              8137        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8138                  any successful attempts to match this node;  set if the user
              8139                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8140                  node.
              8141        */
              8142    1         2 F_F BIT(1) UNAL INIT('0'B),
              8143        /*K* F_F - specifies that the user wants to be notified of any
              8144                  failed attempts to match this node;  set if the user specified
              8145                  the "(FAIL)" option in the PARTRGE definition of this node.
              8146        */
              8147    1         2 O_F BIT(1) UNAL INIT('0'B),
              8148        /*K* O_F - specifies that this node is to result in the creation of
              8149                  a block in the X$PARSE output tree.  The setting of this
              8150                  flag is controlled by several PARTRGE attributes:  the
              8151                  "OUT" option, the "NOUT" option, the "code" option, and the
              8152                  node's basic type.  If the user specifies "OUT", this flag
              8153                  will be set;  if the user specifies "NOUT", this flag will
              8154                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8155                  this flag will be set if the "code" option was specified or
              8156                  if the node is of the "delimited string" or "symbol" varieties.
              8157        */
              8158    1         2 OPT BIT(1) UNAL INIT('0'B),
              8159        /*K* OPT - set if this node is "optional".  This flag is set if the
              8160                  PARTRGE definition of this node was enclosed in a set
              8161                  of [square-brackets].
              8162        */
              8163    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8164        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8165                  once).  This flag is set of the PARTRGE definition of this node
              8166                  was enclosed in a set of *asterisks*.
              8167        */
              8168    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8169        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8170                  after this node.  This flag is set unless the PARTRGE
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:207  
              8171                  definition of this node included a trailing hyphen-.
              8172        */
              8173    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8174        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8175                  incorporating all of the text (and blanks and/or comments)
              8176                  accepted by this node, with no editing or case conversion.
              8177                  This flag is set if the PARTRGE definition of this node
              8178                  included the "(RTEXT)" option.
              8179        */
              8180    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8181        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8182        */
              8183    1         2 CODE UBIN (16) UNAL INIT(0),
              8184        /*K* CODE - specifies the "code number" for this parse node.  This
              8185                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8186                  any parse block built by X$PARSE which corresponds to this node.
              8187        */
              8188    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NX_KEEP))
              8189        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8190                  this parse node.
              8191        */
              8192        %IF '1'B;
              8193    1         ;
              8194        %ELSE;
              8196        %ENDIF;
              8198            %P$NODE(NAME=DD_IGNORE,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(NU_IGNORE)"
              8198                 );
              8199        /*F*  NAME:     P$NODE
              8200              FUNCTION: a structure used to describe syntax nodes, as built by
              8201                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8202                  used to examine all of the attributes of nodes of several
              8203                  types:  koncat, list, alternative, and reducing alternative.
              8204                  It may also be used to examine a few of the attributes of
              8205                  symbol and delimited-string nodes, as indicated.
              8206        */
              8207        %LSET STR='STATIC SYMDEF        ';
              8208        %IF '1'B;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:208  
              8209        %LSET INIT=INIT;
              8210        %LSET ENDINIT=;
              8211        %ELSE;
              8214        %ENDIF;
              8215        %IF '1'B;
              8216    1   DCL 1 DD_IGNORE STATIC SYMDEF ALIGNED,
              8217        %ELSE;
              8219        %ENDIF;
              8220    1         2 TYPE UBIN(3) UNAL INIT(4),
              8221        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8222                  file for the permissible values in this field (%TYPE_whatever#).
              8223        */
              8224    1         2 P_F BIT(1) UNAL INIT('0'B),
              8225        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8226                  any attempt to match this node.  This flag is set if the
              8227                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8228                  of this node.
              8229        */
              8230    1         2 S_F BIT(1) UNAL INIT('0'B),
              8231        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8232                  any successful attempts to match this node;  set if the user
              8233                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8234                  node.
              8235        */
              8236    1         2 F_F BIT(1) UNAL INIT('0'B),
              8237        /*K* F_F - specifies that the user wants to be notified of any
              8238                  failed attempts to match this node;  set if the user specified
              8239                  the "(FAIL)" option in the PARTRGE definition of this node.
              8240        */
              8241    1         2 O_F BIT(1) UNAL INIT('0'B),
              8242        /*K* O_F - specifies that this node is to result in the creation of
              8243                  a block in the X$PARSE output tree.  The setting of this
              8244                  flag is controlled by several PARTRGE attributes:  the
              8245                  "OUT" option, the "NOUT" option, the "code" option, and the
              8246                  node's basic type.  If the user specifies "OUT", this flag
              8247                  will be set;  if the user specifies "NOUT", this flag will
              8248                  not be set;  if the user specifies neither "OUT" nor "NOUT",
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:209  
              8249                  this flag will be set if the "code" option was specified or
              8250                  if the node is of the "delimited string" or "symbol" varieties.
              8251        */
              8252    1         2 OPT BIT(1) UNAL INIT('0'B),
              8253        /*K* OPT - set if this node is "optional".  This flag is set if the
              8254                  PARTRGE definition of this node was enclosed in a set
              8255                  of [square-brackets].
              8256        */
              8257    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8258        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8259                  once).  This flag is set of the PARTRGE definition of this node
              8260                  was enclosed in a set of *asterisks*.
              8261        */
              8262    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8263        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8264                  after this node.  This flag is set unless the PARTRGE
              8265                  definition of this node included a trailing hyphen-.
              8266        */
              8267    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8268        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8269                  incorporating all of the text (and blanks and/or comments)
              8270                  accepted by this node, with no editing or case conversion.
              8271                  This flag is set if the PARTRGE definition of this node
              8272                  included the "(RTEXT)" option.
              8273        */
              8274    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8275        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8276        */
              8277    1         2 CODE UBIN (16) UNAL INIT(0),
              8278        /*K* CODE - specifies the "code number" for this parse node.  This
              8279                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8280                  any parse block built by X$PARSE which corresponds to this node.
              8281        */
              8282    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NU_IGNORE))
              8283        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8284                  this parse node.
              8285        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:210  
              8286        %IF '1'B;
              8287    1         ;
              8288        %ELSE;
              8290        %ENDIF;
              8292             %P$NODE(NAME=DD_TRAP,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(NU_TRAP)");
              8293        /*F*  NAME:     P$NODE
              8294              FUNCTION: a structure used to describe syntax nodes, as built by
              8295                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8296                  used to examine all of the attributes of nodes of several
              8297                  types:  koncat, list, alternative, and reducing alternative.
              8298                  It may also be used to examine a few of the attributes of
              8299                  symbol and delimited-string nodes, as indicated.
              8300        */
              8301        %LSET STR='STATIC SYMDEF        ';
              8302        %IF '1'B;
              8303        %LSET INIT=INIT;
              8304        %LSET ENDINIT=;
              8305        %ELSE;
              8308        %ENDIF;
              8309        %IF '1'B;
              8310    1   DCL 1 DD_TRAP STATIC SYMDEF ALIGNED,
              8311        %ELSE;
              8313        %ENDIF;
              8314    1         2 TYPE UBIN(3) UNAL INIT(4),
              8315        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8316                  file for the permissible values in this field (%TYPE_whatever#).
              8317        */
              8318    1         2 P_F BIT(1) UNAL INIT('0'B),
              8319        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8320                  any attempt to match this node.  This flag is set if the
              8321                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8322                  of this node.
              8323        */
              8324    1         2 S_F BIT(1) UNAL INIT('0'B),
              8325        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8326                  any successful attempts to match this node;  set if the user
              8327                  supplied the "(SUCC)" option in the PARTRGE definition of this
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:211  
              8328                  node.
              8329        */
              8330    1         2 F_F BIT(1) UNAL INIT('0'B),
              8331        /*K* F_F - specifies that the user wants to be notified of any
              8332                  failed attempts to match this node;  set if the user specified
              8333                  the "(FAIL)" option in the PARTRGE definition of this node.
              8334        */
              8335    1         2 O_F BIT(1) UNAL INIT('0'B),
              8336        /*K* O_F - specifies that this node is to result in the creation of
              8337                  a block in the X$PARSE output tree.  The setting of this
              8338                  flag is controlled by several PARTRGE attributes:  the
              8339                  "OUT" option, the "NOUT" option, the "code" option, and the
              8340                  node's basic type.  If the user specifies "OUT", this flag
              8341                  will be set;  if the user specifies "NOUT", this flag will
              8342                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8343                  this flag will be set if the "code" option was specified or
              8344                  if the node is of the "delimited string" or "symbol" varieties.
              8345        */
              8346    1         2 OPT BIT(1) UNAL INIT('0'B),
              8347        /*K* OPT - set if this node is "optional".  This flag is set if the
              8348                  PARTRGE definition of this node was enclosed in a set
              8349                  of [square-brackets].
              8350        */
              8351    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8352        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8353                  once).  This flag is set of the PARTRGE definition of this node
              8354                  was enclosed in a set of *asterisks*.
              8355        */
              8356    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8357        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8358                  after this node.  This flag is set unless the PARTRGE
              8359                  definition of this node included a trailing hyphen-.
              8360        */
              8361    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8362        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8363                  incorporating all of the text (and blanks and/or comments)
              8364                  accepted by this node, with no editing or case conversion.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:212  
              8365                  This flag is set if the PARTRGE definition of this node
              8366                  included the "(RTEXT)" option.
              8367        */
              8368    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8369        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8370        */
              8371    1         2 CODE UBIN (16) UNAL INIT(0),
              8372        /*K* CODE - specifies the "code number" for this parse node.  This
              8373                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8374                  any parse block built by X$PARSE which corresponds to this node.
              8375        */
              8376    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NU_TRAP))
              8377        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8378                  this parse node.
              8379        */
              8380        %IF '1'B;
              8381    1         ;
              8382        %ELSE;
              8384        %ENDIF;
              8386             %P$NODE(NAME=DD_OUTPUT,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES=
              8386                 "ADDR(%(P)OUTPUT)");
              8387        /*F*  NAME:     P$NODE
              8388              FUNCTION: a structure used to describe syntax nodes, as built by
              8389                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8390                  used to examine all of the attributes of nodes of several
              8391                  types:  koncat, list, alternative, and reducing alternative.
              8392                  It may also be used to examine a few of the attributes of
              8393                  symbol and delimited-string nodes, as indicated.
              8394        */
              8395        %LSET STR='STATIC SYMDEF        ';
              8396        %IF '1'B;
              8397        %LSET INIT=INIT;
              8398        %LSET ENDINIT=;
              8399        %ELSE;
              8402        %ENDIF;
              8403        %IF '1'B;
              8404    1   DCL 1 DD_OUTPUT STATIC SYMDEF ALIGNED,
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:213  
              8405        %ELSE;
              8407        %ENDIF;
              8408    1         2 TYPE UBIN(3) UNAL INIT(4),
              8409        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8410                  file for the permissible values in this field (%TYPE_whatever#).
              8411        */
              8412    1         2 P_F BIT(1) UNAL INIT('0'B),
              8413        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8414                  any attempt to match this node.  This flag is set if the
              8415                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8416                  of this node.
              8417        */
              8418    1         2 S_F BIT(1) UNAL INIT('0'B),
              8419        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8420                  any successful attempts to match this node;  set if the user
              8421                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8422                  node.
              8423        */
              8424    1         2 F_F BIT(1) UNAL INIT('0'B),
              8425        /*K* F_F - specifies that the user wants to be notified of any
              8426                  failed attempts to match this node;  set if the user specified
              8427                  the "(FAIL)" option in the PARTRGE definition of this node.
              8428        */
              8429    1         2 O_F BIT(1) UNAL INIT('0'B),
              8430        /*K* O_F - specifies that this node is to result in the creation of
              8431                  a block in the X$PARSE output tree.  The setting of this
              8432                  flag is controlled by several PARTRGE attributes:  the
              8433                  "OUT" option, the "NOUT" option, the "code" option, and the
              8434                  node's basic type.  If the user specifies "OUT", this flag
              8435                  will be set;  if the user specifies "NOUT", this flag will
              8436                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8437                  this flag will be set if the "code" option was specified or
              8438                  if the node is of the "delimited string" or "symbol" varieties.
              8439        */
              8440    1         2 OPT BIT(1) UNAL INIT('0'B),
              8441        /*K* OPT - set if this node is "optional".  This flag is set if the
              8442                  PARTRGE definition of this node was enclosed in a set
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:214  
              8443                  of [square-brackets].
              8444        */
              8445    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8446        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8447                  once).  This flag is set of the PARTRGE definition of this node
              8448                  was enclosed in a set of *asterisks*.
              8449        */
              8450    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8451        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8452                  after this node.  This flag is set unless the PARTRGE
              8453                  definition of this node included a trailing hyphen-.
              8454        */
              8455    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8456        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8457                  incorporating all of the text (and blanks and/or comments)
              8458                  accepted by this node, with no editing or case conversion.
              8459                  This flag is set if the PARTRGE definition of this node
              8460                  included the "(RTEXT)" option.
              8461        */
              8462    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8463        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8464        */
              8465    1         2 CODE UBIN (16) UNAL INIT(0),
              8466        /*K* CODE - specifies the "code number" for this parse node.  This
              8467                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8468                  any parse block built by X$PARSE which corresponds to this node.
              8469        */
              8470    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NX_OUTPUT))
              8471        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8472                  this parse node.
              8473        */
              8474        %IF '1'B;
              8475    1         ;
              8476        %ELSE;
              8478        %ENDIF;
              8480             %P$NODE(NAME=DD_READ,STCLASS=STCLASS,NDTYPE=KONCAT,SUBNODES="ADDR(%(P)READ)");
              8481        /*F*  NAME:     P$NODE
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:215  
              8482              FUNCTION: a structure used to describe syntax nodes, as built by
              8483                  PARTRGE and interrogated by X$PARSE.  This structure may be
              8484                  used to examine all of the attributes of nodes of several
              8485                  types:  koncat, list, alternative, and reducing alternative.
              8486                  It may also be used to examine a few of the attributes of
              8487                  symbol and delimited-string nodes, as indicated.
              8488        */
              8489        %LSET STR='STATIC SYMDEF        ';
              8490        %IF '1'B;
              8491        %LSET INIT=INIT;
              8492        %LSET ENDINIT=;
              8493        %ELSE;
              8496        %ENDIF;
              8497        %IF '1'B;
              8498    1   DCL 1 DD_READ STATIC SYMDEF ALIGNED,
              8499        %ELSE;
              8501        %ENDIF;
              8502    1         2 TYPE UBIN(3) UNAL INIT(4),
              8503        /*K* TYPE - specifies the "major type" of this node.  See the XU_SUBS_C
              8504                  file for the permissible values in this field (%TYPE_whatever#).
              8505        */
              8506    1         2 P_F BIT(1) UNAL INIT('0'B),
              8507        /*K* P_F - specifies that the user wants to be able to "pre-approve"
              8508                  any attempt to match this node.  This flag is set if the
              8509                  user supplied the "(PRE)" option in jhir PARTRGE definition
              8510                  of this node.
              8511        */
              8512    1         2 S_F BIT(1) UNAL INIT('0'B),
              8513        /*K* S_F - specifies that the user wants to be able to "post-approve"
              8514                  any successful attempts to match this node;  set if the user
              8515                  supplied the "(SUCC)" option in the PARTRGE definition of this
              8516                  node.
              8517        */
              8518    1         2 F_F BIT(1) UNAL INIT('0'B),
              8519        /*K* F_F - specifies that the user wants to be notified of any
              8520                  failed attempts to match this node;  set if the user specified
              8521                  the "(FAIL)" option in the PARTRGE definition of this node.
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:216  
              8522        */
              8523    1         2 O_F BIT(1) UNAL INIT('0'B),
              8524        /*K* O_F - specifies that this node is to result in the creation of
              8525                  a block in the X$PARSE output tree.  The setting of this
              8526                  flag is controlled by several PARTRGE attributes:  the
              8527                  "OUT" option, the "NOUT" option, the "code" option, and the
              8528                  node's basic type.  If the user specifies "OUT", this flag
              8529                  will be set;  if the user specifies "NOUT", this flag will
              8530                  not be set;  if the user specifies neither "OUT" nor "NOUT",
              8531                  this flag will be set if the "code" option was specified or
              8532                  if the node is of the "delimited string" or "symbol" varieties.
              8533        */
              8534    1         2 OPT BIT(1) UNAL INIT('0'B),
              8535        /*K* OPT - set if this node is "optional".  This flag is set if the
              8536                  PARTRGE definition of this node was enclosed in a set
              8537                  of [square-brackets].
              8538        */
              8539    1         2 RPEAT BIT(1) UNAL INIT('0'B),
              8540        /*K* RPEAT - specifies that this node can be repeated (may occur more than
              8541                  once).  This flag is set of the PARTRGE definition of this node
              8542                  was enclosed in a set of *asterisks*.
              8543        */
              8544    1         2 SKBL BIT(1) UNAL INIT('0'B),
              8545        /*K* SKBL - specifies that blanks (and/or comments) may legally appear
              8546                  after this node.  This flag is set unless the PARTRGE
              8547                  definition of this node included a trailing hyphen-.
              8548        */
              8549    1         2 RTEXT BIT(1) UNAL INIT('0'B),
              8550        /*K* RTEXT - specifies that this node should produce an OUT$SYM block
              8551                  incorporating all of the text (and blanks and/or comments)
              8552                  accepted by this node, with no editing or case conversion.
              8553                  This flag is set if the PARTRGE definition of this node
              8554                  included the "(RTEXT)" option.
              8555        */
              8556    1         2 NSUBNDS UBIN BYTE UNAL INIT(1),
              8557        /*K* NSUBNDS - specifies the number of sub-nodes within this parse block.
              8558        */
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:217  
              8559    1         2 CODE UBIN (16) UNAL INIT(0),
              8560        /*K* CODE - specifies the "code number" for this parse node.  This
              8561                  value will be returned in OUT$BLK.CODE (or OUT$SYM.CODE) in
              8562                  any parse block built by X$PARSE which corresponds to this node.
              8563        */
              8564    1         2 SUBNDS$(0:0) PTR UNAL INIT(ADDR(NX_READ))
              8565        /*K* SUBNDS$ - an array of PTRs, which point to the NSUBNDS sub-nodes of
              8566                  this parse node.
              8567        */
              8568        %IF '1'B;
              8569    1         ;
              8570        %ELSE;
              8572        %ENDIF;
              8574    1        DCL CNR4_FORTRAN SBIN SYMREF;
              8575    1        DCL CNR4_PL6 SBIN SYMREF;
              8576    1        DCL L@DIV SBIN SYMREF;
              8577    1        DCL L@LSHIFT SBIN SYMREF;
              8578    1        DCL L@PLUS SBIN SYMREF;
              8579    1        DCL L@MINUS SBIN SYMREF;
              8580    1        DCL L@MULT SBIN SYMREF;
              8581    1        DCL L@RSHIFT SBIN SYMREF;
              8582    1        DCL L@OR SBIN SYMREF;
              8583    1        DCL L@AND SBIN SYMREF;
              8584    1        DCL SYMBOL_PL6 SBIN SYMREF;
              8585    1        DCL SYMDEL_PL6 SBIN SYMREF;
              8586    1        DCL SYMLIST SBIN SYMREF;
              8587    1        DCL SYMBOL_CC SBIN SYMREF;
              8588    1        DCL CNR4_COBOL SBIN SYMREF;
              8589    1        DCL L@DIVC SBIN SYMREF;
              8590    1        DCL L@LSHIFTC SBIN SYMREF;
              8591    1        DCL L@PLUSC SBIN SYMREF;
              8592    1        DCL L@MINUSC SBIN SYMREF;
              8593    1        DCL L@MULTC SBIN SYMREF;
              8594    1        DCL L@RSHIFTC SBIN SYMREF;
              8595    1        DCL L@ORC SBIN SYMREF;
              8596    1        DCL L@ANDC SBIN SYMREF;
              8597    1        DCL SYMBOL_COBOL SBIN SYMREF;
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:218  
              8598    1        DCL SYMDEL_COBOL SBIN SYMREF;
              8599    1        DCL SYMLISTC SBIN SYMREF;
              8600    1        DCL NU_KEEP SBIN SYMREF;
              8601    1        DCL NU_TRAP SBIN SYMREF;
              8602    1        DCL NU_IGNORE SBIN SYMREF;
              8603    1        DCL OCTIL SBIN SYMREF;
              8604    1        DCL OCTIL1 SBIN SYMREF;
              8605    1        DCL ODIG SBIN SYMREF;
              8606    1        DCL OCTILBOTH SBIN SYMREF;
              8607    1        DCL INSTR SBIN SYMREF;
              8608    1        DCL CNR2_HOST SBIN SYMREF;
              8609    1        DCL NF_KEEP SBIN SYMREF;
              8610    1        DCL NF_TRAP SBIN SYMREF;
              8611    1        DCL NF_IGNORE SBIN SYMREF;
              8612    1        DCL HEXIL SBIN SYMREF;
              8613    1        DCL HEXIL1 SBIN SYMREF;
              8614    1        DCL HDIG SBIN SYMREF;
              8615    1        DCL HEXBOTH SBIN SYMREF;
              8616    1        DCL INSTR_L6 SBIN SYMREF;
              8617    1        DCL CNR2_L6 SBIN SYMREF;
              8618    1        DCL NX_KEEP SBIN SYMREF;
              8619    1        DCL DD_MODE_NODE_PTR$(0:8) PTR CONSTANT SYMDEF INIT(
              8620    1          ADDR(DD_KEEP),  /* must be first, for L6XDELTA */
              8621    1          ADDR(DD_TRAP),
              8622    1          ADDR(DD_IGNORE),
              8623    1          ADDR(DD_BASE),
              8624    1          ADDR(DD_BASE1),
              8625    1          ADDR(DD_BASEDIG),
              8626    1          ADDR(DD_BASEBOTH),
              8627    1          ADDR(DD_INSTR),
              8628    1          ADDR(DD_CNR2));
              8629    1        DCL DD_HOST_NODE_PTR$(0:8) PTR CONSTANT SYMDEF INIT(
              8630    1          ADDR(NU_KEEP),  /* must be first, for L6XDELTA */
              8631    1          ADDR(NU_TRAP),
              8632    1          ADDR(NU_IGNORE),
              8633    1          ADDR(OCTIL),
              8634    1          ADDR(OCTIL1),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:219  
              8635    1          ADDR(ODIG),
              8636    1          ADDR(OCTILBOTH),
              8637    1          ADDR(INSTR),
              8638    1          ADDR(CNR2_HOST));
              8639    1        DCL DD_L6_NODE_PTR$(0:8) PTR CONSTANT SYMDEF INIT(
              8640    1          ADDR(NF_KEEP),  /* must be first, for L6XDELTA */
              8641    1          ADDR(NF_TRAP),
              8642    1          ADDR(NF_IGNORE),
              8643    1          ADDR(HEXIL),
              8644    1          ADDR(HEXIL1),
              8645    1          ADDR(HDIG),
              8646    1          ADDR(HEXBOTH),
              8647    1          ADDR(INSTR_L6),
              8648    1          ADDR(CNR2_L6));
              8649    1        DCL DD_L6X_NODE_PTR$(0:0) PTR CONSTANT SYMDEF INIT(
              8650    1          ADDR(NX_KEEP)); /* must be first, for L6XDELTA - see? */
              8651    1        DCL DD_COMP_NODE_PTR$(0:11) PTR CONSTANT SYMDEF INIT(
              8652    1          ADDR(DD_CNR4),
              8653    1          ADDR(DD_L@DIV),
              8654    1          ADDR(DD_L@LSHIFT),
              8655    1          ADDR(DD_L@PLUS),
              8656    1          ADDR(DD_L@MINUS),
              8657    1          ADDR(DD_L@MULT),
              8658    1          ADDR(DD_L@RSHIFT),
              8659    1          ADDR(DD_L@OR),
              8660    1          ADDR(DD_L@AND),
              8661    1          ADDR(DD_SYMBOLS),
              8662    1          ADDR(DD_SYMDEL),
              8663    1          ADDR(DD_SYMLIST) );
              8664    1        DCL DD_SYN_PL6(0:11) PTR CONSTANT SYMDEF INIT(
              8665    1          ADDR(CNR4_PL6),
              8666    1          ADDR(L@DIV),
              8667    1          ADDR(L@LSHIFT),
              8668    1          ADDR(L@PLUS),
              8669    1          ADDR(L@MINUS),
              8670    1          ADDR(L@MULT),
              8671    1          ADDR(L@RSHIFT),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:220  
              8672    1          ADDR(L@OR),
              8673    1          ADDR(L@AND),
              8674    1          ADDR(SYMBOL_PL6),
              8675    1          ADDR(SYMDEL_PL6),
              8676    1          ADDR(SYMLIST) );
              8677    1        DCL DD_SYN_FORT(0:11) PTR CONSTANT SYMDEF INIT(
              8678    1          ADDR(CNR4_FORTRAN),
              8679    1          ADDR(L@DIV),
              8680    1          ADDR(L@LSHIFT),
              8681    1          ADDR(L@PLUS),
              8682    1          ADDR(L@MINUS),
              8683    1          ADDR(L@MULT),
              8684    1          ADDR(L@RSHIFT),
              8685    1          ADDR(L@OR),
              8686    1          ADDR(L@AND),
              8687    1          ADDR(SYMBOL_PL6),
              8688    1          ADDR(SYMDEL_PL6),
              8689    1          ADDR(SYMLIST) );
              8690    1        DCL DD_SYN_CC(0:11) PTR CONSTANT SYMDEF INIT(
              8691    1          ADDR(CNR4_PL6),
              8692    1          ADDR(L@DIV),
              8693    1          ADDR(L@LSHIFT),
              8694    1          ADDR(L@PLUS),
              8695    1          ADDR(L@MINUS),
              8696    1          ADDR(L@MULT),
              8697    1          ADDR(L@RSHIFT),
              8698    1          ADDR(L@OR),
              8699    1          ADDR(L@AND),
              8700    1          ADDR(SYMBOL_CC),
              8701    1          ADDR(SYMDEL_PL6),
              8702    1          ADDR(SYMLIST) ); /* Could fix to allow "A -> first sublevel" */
              8703    1        DCL DD_SYN_COBOL(0:11) PTR CONSTANT SYMDEF INIT(
              8704    1          ADDR(CNR4_COBOL),
              8705    1          ADDR(L@DIVC),
              8706    1          ADDR(L@LSHIFTC),
              8707    1          ADDR(L@PLUSC),
              8708    1          ADDR(L@MINUSC),
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:221  
              8709    1          ADDR(L@MULTC),
              8710    1          ADDR(L@RSHIFTC),
              8711    1          ADDR(L@ORC),
              8712    1          ADDR(L@ANDC),
              8713    1          ADDR(SYMBOL_COBOL),
              8714    1          ADDR(SYMDEL_COBOL),
              8715    1          ADDR(SYMLISTC) );
              8716    1        DCL DD_COMPNODE$(0:13) PTR CONSTANT SYMDEF INIT(
              8717    1          ADDR(DD_SYN_PL6),  /* GMAP */
              8718    1          ADDR(DD_SYN_PL6),  /* PL6 */
              8719    1          ADDR(DD_SYN_FORT),  /* FORTRAN */
              8720    1          ADDR(DD_SYN_COBOL),  /* COBOL */
              8721    1          ADDR(DD_SYN_PL6),  /* PL1 */
              8722    1          ADDR(DD_SYN_PL6),  /* RPG */
              8723    1          ADDR(DD_SYN_PL6),  /* PASCAL */
              8724    1          ADDR(DD_SYN_PL6),  /* MOMUS */
              8725    1          ADDR(DD_SYN_COBOL),  /* FPL */
              8726    1          ADDR(DD_SYN_PL6),  /* PARTRGE */
              8727    1          ADDR(DD_SYN_PL6),  /* IDL */
              8728    1          ADDR(DD_SYN_PL6),  /* ELSIE */
              8729    1          ADDR(DD_SYN_PL6),  /* CALF */
              8730    1          ADDR(DD_SYN_CC) ); /* C */
              8731        %ENDIF;
       22     8733    1   DCL 1 DX_VARCOM_BUF STATIC SYMDEF ALIGNED,
       23     8734    1         2 WORDS(0:999) UBIN WORD;
       24     8735    1   DCL DX_DUMMY UBIN STATIC SYMDEF ALIGNED;
       25     8736    1   DCL DX_VARCOM$ PTR CONSTANT SYMDEF INIT(ADDR(DX_VARCOM_BUF));
       26     8737    1   DCL DX_VARCOM_HIGH$ PTR CONSTANT SYMDEF INIT(ADDR(DX_DUMMY));
       27     8738                                                /**/
       28     8739    1   END DX_SD_D;

PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:222  
--  Include file information  --

   DD_KNODES_D.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DX_SD_D.

   No code generated for procedure DX_SD_D .
   Procedure DX_SD_D requires 4 words of local(AUTO) storage.

    No errors detected in file DX_SD_D.:E05TSI    .
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:223  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:224  
          MINI XREF LISTING

CNR2_HOST
      8608**DCL      7436--DCLINIT  8638--DCLINIT
CNR2_L6
      8617**DCL      8648--DCLINIT
CNR4_COBOL
      8588**DCL      8704--DCLINIT
CNR4_FORTRAN
      8574**DCL      8678--DCLINIT
CNR4_PL6
      8575**DCL      8665--DCLINIT  8691--DCLINIT
DD_BASE
      7464**DCL      8623--DCLINIT
DD_BASE1
      7558**DCL      8624--DCLINIT
DD_BASEBOTH
      7746**DCL      8626--DCLINIT
DD_BASEDIG
      7652**DCL      8625--DCLINIT
DD_CNR2
      7370**DCL      8628--DCLINIT
DD_CNR4
      6143**DCL      8652--DCLINIT
DD_IGNORE
      8216**DCL      8622--DCLINIT
DD_INSTR
      7840**DCL      8627--DCLINIT
DD_KEEP
      8122**DCL      8620--DCLINIT
DD_L@AND
      6895**DCL      8660--DCLINIT
DD_L@DIV
      6237**DCL      8653--DCLINIT
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:225  
DD_L@LSHIFT
      6331**DCL      8654--DCLINIT
DD_L@MINUS
      6425**DCL      8656--DCLINIT
DD_L@MULT
      6519**DCL      8657--DCLINIT
DD_L@OR
      6801**DCL      8659--DCLINIT
DD_L@PLUS
      6613**DCL      8655--DCLINIT
DD_L@RSHIFT
      6707**DCL      8658--DCLINIT
DD_SYMBOLS
      6989**DCL      8661--DCLINIT
DD_SYMDEL
      7083**DCL      8662--DCLINIT
DD_SYMLIST
      7177**DCL      8663--DCLINIT
DD_SYN_CC
      8690**DCL      8730--DCLINIT
DD_SYN_COBOL
      8703**DCL      8720--DCLINIT  8725--DCLINIT
DD_SYN_FORT
      8677**DCL      8719--DCLINIT
DD_SYN_PL6
      8664**DCL      8717--DCLINIT  8718--DCLINIT  8721--DCLINIT  8722--DCLINIT  8723--DCLINIT  8724--DCLINIT
      8726--DCLINIT  8727--DCLINIT  8728--DCLINIT  8729--DCLINIT
DD_TRAP
      8310**DCL      8621--DCLINIT
DX_DUMMY
      8735**DCL      8737--DCLINIT
DX_VARCOM_BUF
      8733**DCL      8736--DCLINIT
HDIG
      8614**DCL      8645--DCLINIT
HEXBOTH
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:226  
      8615**DCL      8646--DCLINIT
HEXIL
      8612**DCL      8643--DCLINIT
HEXIL1
      8613**DCL      8644--DCLINIT
INSTR
      8607**DCL      7906--DCLINIT  8637--DCLINIT
INSTR_L6
      8616**DCL      8647--DCLINIT
L@AND
      8583**DCL      8673--DCLINIT  8686--DCLINIT  8699--DCLINIT
L@ANDC
      8596**DCL      8712--DCLINIT
L@DIV
      8576**DCL      8666--DCLINIT  8679--DCLINIT  8692--DCLINIT
L@DIVC
      8589**DCL      8705--DCLINIT
L@LSHIFT
      8577**DCL      8667--DCLINIT  8680--DCLINIT  8693--DCLINIT
L@LSHIFTC
      8590**DCL      8706--DCLINIT
L@MINUS
      8579**DCL      8669--DCLINIT  8682--DCLINIT  8695--DCLINIT
L@MINUSC
      8592**DCL      8708--DCLINIT
L@MULT
      8580**DCL      8670--DCLINIT  8683--DCLINIT  8696--DCLINIT
L@MULTC
      8593**DCL      8709--DCLINIT
L@OR
      8582**DCL      8672--DCLINIT  8685--DCLINIT  8698--DCLINIT
L@ORC
      8595**DCL      8711--DCLINIT
L@PLUS
      8578**DCL      8668--DCLINIT  8681--DCLINIT  8694--DCLINIT
L@PLUSC
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:227  
      8591**DCL      8707--DCLINIT
L@RSHIFT
      8581**DCL      8671--DCLINIT  8684--DCLINIT  8697--DCLINIT
L@RSHIFTC
      8594**DCL      8710--DCLINIT
NF_IGNORE
      8611**DCL      8642--DCLINIT
NF_KEEP
      8609**DCL      8640--DCLINIT
NF_TRAP
      8610**DCL      8641--DCLINIT
NU_IGNORE
      8602**DCL      8282--DCLINIT  8632--DCLINIT
NU_KEEP
      8600**DCL      8630--DCLINIT
NU_TRAP
      8601**DCL      8376--DCLINIT  8631--DCLINIT
NX_DUMP
      7348**DCL      8000--DCLINIT
NX_ECHO
      7349**DCL      8094--DCLINIT
NX_KEEP
      8618**DCL      8188--DCLINIT  8650--DCLINIT
NX_OUTPUT
      7350**DCL      8470--DCLINIT
NX_READ
      7351**DCL      8564--DCLINIT
OCTIL
      8603**DCL      7530--DCLINIT  8633--DCLINIT
OCTIL1
      8604**DCL      7624--DCLINIT  8634--DCLINIT
OCTILBOTH
      8606**DCL      7812--DCLINIT  8636--DCLINIT
ODIG
      8605**DCL      7718--DCLINIT  8635--DCLINIT
SYMBOL_CC
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:228  
      8587**DCL      8700--DCLINIT
SYMBOL_COBOL
      8597**DCL      8713--DCLINIT
SYMBOL_PL6
      8584**DCL      8674--DCLINIT  8687--DCLINIT
SYMDEL_COBOL
      8598**DCL      8714--DCLINIT
SYMDEL_PL6
      8585**DCL      8675--DCLINIT  8688--DCLINIT  8701--DCLINIT
SYMLIST
      8586**DCL      8676--DCLINIT  8689--DCLINIT  8702--DCLINIT
SYMLISTC
      8599**DCL      8715--DCLINIT
S_D
      1444**DCL      2750--DCLINIT  2762--DCLINIT
S_D.ACCESS
      1474**DCL      2763--DCLINIT
S_D.ANLZ
      2087**DCL      2765--DCLINIT
S_D.ASTACKOFF
      1965**DCL      2764--DCLINIT
S_D.BREAK
      1484**DCL      2766--DCLINIT
S_D.CURRENT_CHANNEL
      2387**DCL      2389--REDEF
S_D.DEBUGA
      1539**DCL      1541--REDEF
S_D.DO_SCAN
      1476**DCL      2767--DCLINIT
S_D.EIS
      2497**DCL      2526--REDEF
S_D.ERROR
      1468**DCL      2768--DCLINIT
S_D.FAULTCMD$
      1454**DCL      2769--DCLINIT
S_D.FAULTINS$
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:229  
      1452**DCL      2770--DCLINIT
S_D.GOIC
      1448**DCL      2771--DCLINIT
S_D.GO_MODE
      1478**DCL      2772--DCLINIT
S_D.HOST_MESSAGE_BUF.C
      2447**DCL      2784--DCLINIT
S_D.HOST_MESSAGE_BUF_REMOTE
      2430**DCL      2431--REDEF    2445--REDEF
S_D.HW_PTB_UNITS
      2674**DCL      2788--DCLINIT
S_D.HW_RES_MEM
      2672**DCL      2786--DCLINIT
S_D.HW_WSQ0PT
      2676**DCL      2787--DCLINIT
S_D.IPRFLT
      2400**DCL      2774--DCLINIT
S_D.IXFIX
      1472**DCL      2773--DCLINIT
S_D.JDE
      2044**DCL      2045--REDEF
S_D.L$.VALUE
      1597**DCL      1603--REDEF    1611--REDEF    1614--REDEF    1617--REDEF    1620--REDEF
S_D.L$.VALUE.L
      1598**DCL      1599--REDEF    1600--REDEF
S_D.L6_MESSAGE_BUF
      2451**DCL      2453--REDEF    2785--DCLINIT
S_D.OUTPUT
      2417**DCL      2419--REDEF
S_D.REMOTE_MSG.FNCC
      2436**DCL      2437--REDEF
S_D.REMOTE_MSG.STXC
      2432**DCL      2433--REDEF
S_D.REMOTE_MSG.SUBFNCC
      2440**DCL      2441--REDEF
S_D.REM_ACCESS
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:230  
      1482**DCL      2775--DCLINIT
S_D.REM_DISKBOOT
      1704**DCL      2777--DCLINIT
S_D.REM_DO_SCAN
      1480**DCL      2776--DCLINIT
S_D.RETURNN
      1466**DCL      2778--DCLINIT
S_D.SAD
      2296**DCL      2779--DCLINIT
S_D.SAVEIC
      1450**DCL      2780--DCLINIT
S_D.SV
      1496**DCL      1517--REDEF
S_D.TCB$
      2077**DCL      2781--DCLINIT
S_D.UREG$
      1527**DCL      2782--DCLINIT
S_D.USS$
      1456**DCL      2783--DCLINIT
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:231  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:232  
              MINI UREF LISTING

DD_COMPNODE$    8716**DCL
DD_COMP_NODE_PTR$    8651**DCL
DD_DUMP    7934**DCL
DD_ECHO    8028**DCL
DD_HOST_NODE_PTR$    8629**DCL
DD_INSTR_CONT    7271**DCL
DD_L6X_NODE_PTR$    8649**DCL
DD_L6_NODE_PTR$    8639**DCL
DD_MODE_NODE_PTR$    8619**DCL
DD_OUTPUT    8404**DCL
DD_READ    8498**DCL
DX_SD_D       9**PROC
DX_VARCOM$    8736**DCL
DX_VARCOM_HIGH$    8737**DCL
S_D$    2750**DCL
S_D_ACCESS$    2763**DCL
S_D_ANLZ$    2765**DCL
S_D_ASTACKOFF$    2764**DCL
S_D_BREAK$    2766**DCL
S_D_DO_SCAN$    2767**DCL
S_D_ERROR$    2768**DCL
S_D_FAULTCMD$$    2769**DCL
S_D_FAULTINS$$    2770**DCL
S_D_GOIC$    2771**DCL
S_D_GO_MODE$    2772**DCL
S_D_HOST_MESSAGE$    2784**DCL
S_D_HW_PTB_UNITS$    2788**DCL
S_D_HW_RES_MEM$    2786**DCL
S_D_HW_WSQ0PT$    2787**DCL
S_D_IPRFLT$    2774**DCL
S_D_IXFIX$    2773**DCL
S_D_L6_MESSAGE$    2785**DCL
PL6.E3A0      #001=DX_SD_D File=DX_SD_D.:E05TSI                                  TUE 07/29/97 15:16 Page:233  
S_D_REM_ACCESS$    2775**DCL
S_D_REM_DISKBOOT$    2777**DCL
S_D_REM_DO_SCAN$    2776**DCL
S_D_RETURNN$    2778**DCL
S_D_SAD$    2779**DCL
S_D_SAVEIC$    2780**DCL
S_D_SEG$    2762**DCL
S_D_TCB$$    2781**DCL
S_D_UREG$$    2782**DCL
S_D_USS$$    2783**DCL
