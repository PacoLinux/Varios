

10:54 AUG 20 '97 zbm$em_comp:h.:ZBC3TSI                                    1    
    1      /*
    2       * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
    3       * See the copyright notice in the ACK home directory, in the file "Copyright".
    4       */
    5      /* $Header: em_comp.h,v 1.3 87/03/09 14:53:27 ceriel Exp $ */
    6
    7      struct e_instr {
    8       int   em_type;    /* Type of this instr */
    9      #define EM_MNEM    256      /* A machine instruction */
   10      #define   EM_PSEU     257      /* A pseudo */
   11      #define EM_STARTMES   258      /* Start of a MES pseudo */
   12      #define EM_MESARG  259      /* A member in a MES list */
   13      #define EM_ENDMES  260      /* End of a MES pseudo */
   14      #define EM_DEFILB  261      /* An instruction label definition */
   15      #define EM_DEFDLB  262      /* A numeric data label definition */
   16      #define EM_DEFDNAM 263      /* A non-numeric data label def */
   17      #define EM_ERROR   264      /* Recoverable error */
   18      #define EM_FATAL   265      /* Unrecoverable error */
   19       union {
   20             struct {
   21                  int emus_opcode;   /* Opcode of instruction */
   22                  struct e_args *emus_args;   /* Arguments of instruction */
   23             } emu_mp;
   24             label emu_deflb;  /* Numeric label definition */
   25             char  *emu_defdnam;  /* Non-numeric label definition */
   26             struct e_args  *emu_arg;   /* For an argument */
   27       } em_i;
   28      #define em_opcode  em_i.emu_mp.emus_opcode
   29      #define em_args    em_i.emu_mp.emus_args
   30      #define em_deflb   em_i.emu_deflb
   31      #define em_defdnam em_i.emu_defdnam
   32      #define em_arg     em_i.emu_arg
   33      };
   34
   35      struct e_args {
   36       struct e_args  *em_next;   /* Next argument */
   37       short em_argtype;    /* Type of this argument */
10:54 AUG 20 '97 zbm$em_comp:h.:ZBC3TSI                                    2    
   38       union {
   39              arith   emu_cst;    /* A constant */
   40              label   emu_ilb;    /* An instruction label */
   41              char *emu_pnam;  /* A procedure name (not including '$') */
   42              struct {
   43                     label  emus_dlb;
   44                     arith  emus_noff;
   45              } emu_ndlb;      /* Numeric data label + offset */
   46              struct {
   47                     char   *emus_dnam;
   48                     arith  emus_soff;
   49              } emu_sdlb;      /* String data label + offset */
   50              struct {
   51                     char   *emus_str;
   52                     arith  emus_size;
   53              } emu_con;       /* An scon, icon, ucon or fcon */
   54       } em_value;
   55      #define em_cst     em_value.emu_cst
   56      #define em_ilb     em_value.emu_ilb
   57      #define em_pnam    em_value.emu_pnam
   58      #define em_dlb     em_value.emu_ndlb.emus_dlb
   59      #define em_noff    em_value.emu_ndlb.emus_noff
   60      #define em_dnam    em_value.emu_sdlb.emus_dnam
   61      #define em_soff    em_value.emu_sdlb.emus_soff
   62      #define em_str     em_value.emu_con.emus_str
   63      #define em_size    em_value.emu_con.emus_size
   64      };
   65
   66      extern char *EM_error;
   67      extern unsigned int EM_lineno;
   68      extern char *EM_filename;
   69      extern int EM_wordsize, EM_pointersize;
   70

