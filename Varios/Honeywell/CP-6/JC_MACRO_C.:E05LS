

14:41 JUL 28 '97 JC_MACRO_C.:E05SI                                         1    
    1      /*M* JC_MACRO_C Macro file for SLUG-related structures */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*D* NAME:        JC_CITE
    8           PURPOSE:     To provide a structure for events passed to SLUG
    9           DESCRIPTION: Events passed to SLUG use this structure.
   10                        All events passed to SLUG thru the CSCG have
   11                        this structure.  They are distinguishable from
   12                        keyins in that their upper halfword (the KIN
   13                        item) is zero.  We nicely ensure that STATIC
   14                        or CONTSTANT generations of this structure make
   15                        it zero, but   !!!!WARNING!!!! if you generate
   16                        this sucker in AUTO, set KIN to 0 before
   17                        sending it to SLUG.  If you don't, you will
   18                        get an 'UNIMPLEMENTED KEYIN' message, or maybe
   19                        something worse.
   20      */
   21      %MACRO JC_CITE (FPTN=JC_CITE,STCLASS=STATIC,
   22               TYP       (PCMP=1,OFF=2,UGJOB=3,SUSR=0)=0,
   23               COD       = 0,
   24               USR       = 0);
   25
   26       %LSET LISTDIR='0'B;
   27       %LSET LISTEXP='1'B;
   28       %LSET LISTCOM='0'B;
   29       %LSET LISTSUB='1'B;
   30       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   31       %IF (SUBSTR(STR,0,6)='STATIC') OR
   32       (SUBSTR(STR,0,8)='CONSTANT') OR
   33       (SUBSTR(STR,0,3)='EXT');
   34       %LSET INIT=CHARTEXT('INIT');
   35       %ELSE;
   36       %LSET INIT=CHARTEXT('/*');
   37       %ENDIF;
14:41 JUL 28 '97 JC_MACRO_C.:E05SI                                         2    
   38
   39      DCL 1 FPTN STCLASS ALIGNED,
   40            2 KIN UBIN HALF HALIGNED %INIT(0)%CHARTEXT('/**/'),
   41                              /* KIN - MUST BE ZERO (to distinguish from a
   42                                       actual KEYIN). */
   43            2 CODE UBIN HALF HALIGNED %INIT(COD)%CHARTEXT('/**/'),
   44                              /* CODE     : JCEV_XXXX#; identifies the event
   45                                            being cited. See JG_EVID_C */
   46      %IF TYP=0; /* Default for TYPs needing no additional info */
   47            2 * UBIN BYTE UNAL;
   48      %ELSEIF TYP=1; /* Phase complete message from a system ghost */
   49            2 USER UBIN HALF HALIGNED %INIT(USR)%CHARTEXT('/**/');
   50                              /* USER - User number of ghost reporting */
   51      %ELSEIF TYP=2; /* Ghost off event. Comes from JSD$DEL. */
   52            2 USER UBIN HALF HALIGNED %INIT(USR)%CHARTEXT('/**/');
   53                              /* USER - User number of ghost going off */
   54      %ELSEIF TYP=3; /* Gunge from M$GJOB PMME */
   55            2 PRIINC UBIN BYTE UNAL,          /* Priority increment                 */
   56            2 SSID UBIN HALF UNAL,            /* Originator's sysid or special      */
   57                                              /* code defining type of TP or ghost  */
   58            2 TP BIT(1) UNAL,                 /* Set if this is a TP user start;    */
   59                                              /* Reset if a ghost start.            */
   60            2 SLEAZE BIT(1) UNAL,             /* Set if this user is NOT to go      */
   61                                              /* through LOGON                      */
   62            2 NOPASSCK BIT(1) UNAL,           /* Set if the password is NOT to be   */
   63                                              /* checked when logging this user on  */
   64            2 * BIT(6) UNAL,
   65            2 ACCT CHAR(8) UNAL,              /* Acount for this user               */
   66            2 UNAME,                          /* Name for this user                 */
   67              3 CNT UBIN BYTE UNAL,
   68              3 TXT CHAR(12) UNAL,
   69            2 PASS CHAR(8) UNAL,              /* Scrambled password for this user   */
   70            2 CCBUF,                          /* String to place in CCBUF if CNT~=0 */
   71                                              /* for this user                      */
   72              3 CNT UBIN BYTE UNAL,
   73              3 TXT CHAR(256) UNAL;
   74      %ENDIF;
14:41 JUL 28 '97 JC_MACRO_C.:E05SI                                         3    
   75      %MEND;
   76
   77
   78
   79      /*D* NAME:        JC_QEV
   80           PURPOSE:     To provide a structure for SLUG's event queue
   81           DESCRIPTION: SLUG's event queue is made up of several JC_QEV
   82                        entries linked together. Each entry contains an event
   83                        for SLUG to process. */
   84      %MACRO JC_QEV (FPTN=JC_QEV,STCLASS=STATIC,
   85                     ARY=0);
   86
   87       %LSET LISTDIR='0'B;
   88       %LSET LISTEXP='1'B;
   89       %LSET LISTCOM='0'B;
   90       %LSET LISTSUB='1'B;
   91       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   92       %IF (SUBSTR(STR,0,6)='STATIC') OR
   93       (SUBSTR(STR,0,8)='CONSTANT') OR
   94       (SUBSTR(STR,0,3)='EXT');
   95       %LSET INIT=CHARTEXT('INIT');
   96       %ELSE;
   97       %LSET INIT=CHARTEXT('/*');
   98       %ENDIF;
   99
  100      %IF ARY=0;
  101      DCL 1 FPTN STCLASS ALIGNED,
  102      %ELSE;
  103      DCL 1 FPTN(0:%(ARY-1)) STCLASS ALIGNED,
  104      %ENDIF;
  105            2 EVNT UBIN %INIT(0*0)%CHARTEXT('/**/'),
  106                        /* EVNT - JCQEV_XXXX#; identifies the type of queued
  107                           event. See JG_EVID_C */
  108            2 LNK$ PTR, /* LNK$ - a pointer to the following entry */
  109            2 * BIT(72),   /* Reserved for future use */
  110            2 * BIT(72),   /* Reserved for future use */
  111            2 * BIT(72),   /* Reserved for future use */
14:41 JUL 28 '97 JC_MACRO_C.:E05SI                                         4    
  112            2 * BIT(72);   /* Reserved for future use */
  113      %MEND;

