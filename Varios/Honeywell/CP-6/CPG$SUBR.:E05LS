VERSION E05

PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:1    
        1        1        /*M* CPG$SUBR  - Implements the IBEX specific $functions. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8             NAME: CPG$FUN$$
        9        9             PURPOSE:
       10       10                  To handle escapes from X$EVAL
       11       11             DESCRIPTION:
       12       12                  When X$EVAL recognises an IBEX specific $function it
       13       13                  will call this routine.
       14       14             REFERENCE:
       15       15                  PROGRAMMER REF MANUAL
       16       16        */
       17       17        CPG$FUN$$: PROC (XUE_FUNPARAM);
       18       18        /***** Include files *****/
       19       19          %INCLUDE B$JIT;
       20      309          %INCLUDE B_MACROS_C;
       21      420          %INCLUDE CP_6;
       22      501          %INCLUDE CP_6_SUBS;
       23     1041          %INCLUDE CP_MACROS_C;
       24     1793          %INCLUDE CP_SUBS_C;
       25     2710          %INCLUDE XUE_MACRO_C;
       26     3454          %INCLUDE XUE_SUBS_C;
       27     3634        /***** Macros *****/
       28     3635          %XUE_FUNPARAM (STCLASS=" ");
       29     3739          %XUE_OPTION (STCLASS=BASED);
       30     3795          %TEXTC (NAME=X$STRING,STCLASS=BASED);
       31     3800        /***** Symref data *****/
       32     3801    1     DCL B$JIT$ PTR SYMREF READONLY;
       33     3802        /***** Local data *****/
       34     3803    1     DCL OPTION$ PTR AUTO;
       35     3804    1     DCL INDX SBIN WORD AUTO;
       36     3805        %EJECT;
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:2    
       37     3806    2     DO CASE (XUE_FUNPARAM.CODE#);
       38     3807    2        CASE (%$OK#);
       39     3808    2           XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 1;
       40     3809    2           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_SKIPABORT#;
       41     3810    2           IF B$JIT.USRRNST = %RS_EXIT#
       42     3811    2              THEN
       43     3812    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '1';
       44     3813    2              ELSE
       45     3814    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '0';
       46     3815    2        CASE (%$ERROR#);
       47     3816    2           XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 1;
       48     3817    2           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_SKIPABORT#;
       49     3818    2           IF B$JIT.USRRNST = %RS_ERR#
       50     3819    2           OR B$JIT.USRRNST = %RS_EKEY#
       51     3820    2              THEN
       52     3821    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '1';
       53     3822    2              ELSE
       54     3823    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '0';
       55     3824    2        CASE (%$ABORT#);
       56     3825    2           XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 1;
       57     3826    2           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_SKIPABORT#;
       58     3827    2           IF B$JIT.USRRNST = %RS_XXX#
       59     3828    2           OR B$JIT.USRRNST = %RS_ABRT#
       60     3829    2           OR B$JIT.USRRNST = %RS_SSP#
       61     3830    2              THEN
       62     3831    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '1';
       63     3832    2              ELSE
       64     3833    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '0';
       65     3834    2        CASE (%$STEPCC#);
       66     3835    2           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_SKIPABORT#;
       67     3836    2           IF B$JIT.STEPCC < 10
       68     3837    2              THEN
       69     3838    2                 XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 1;
       70     3839    2              ELSE
       71     3840    2                 IF B$JIT.STEPCC < 100
       72     3841    2                    THEN
       73     3842    2                       XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 2;
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:3    
       74     3843    2                    ELSE
       75     3844    2                       XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 3;
       76     3845    2           CALL BINCHAR (XUE_FUNPARAM.OUT$ -> X$STRING.TEXT,B$JIT.STEPCC);
       77     3846    2     END;   /* Do case ... end */
       78     3847    1     RETURN;
       79     3848    1   END CPG$FUN$$;
       80     3849        %EOD ;

PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:4    
--  Include file information  --

   XUE_SUBS_C.:E05TOU  is referenced.
   XUE_MACRO_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPG$FUN$$.

   Procedure CPG$FUN$$ requires 151 words for executable code.
   Procedure CPG$FUN$$ requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:5    

 Object Unit name= CPG$FUN$$                                  File name= CPG$SUBR.:E05TOU
 UTS= JUL 29 '97 11:43:45.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  CPG$FUN$$
    2   Proc  even  none   151    227  CPG$FUN$$
    3  RoData even  none     2      2  CPG$FUN$$

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  CPG$FUN$$

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$JIT$                                B_VECTNIL
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:6    


        1        1        /*M* CPG$SUBR  - Implements the IBEX specific $functions. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8             NAME: CPG$FUN$$
        9        9             PURPOSE:
       10       10                  To handle escapes from X$EVAL
       11       11             DESCRIPTION:
       12       12                  When X$EVAL recognises an IBEX specific $function it
       13       13                  will call this routine.
       14       14             REFERENCE:
       15       15                  PROGRAMMER REF MANUAL
       16       16        */
       17       17        CPG$FUN$$: PROC (XUE_FUNPARAM);

     17  2 000000   000000 700200 xent  CPG$FUN$$    TSX0  ! X66_AUTO_1
         2 000001   000012 000001                    ZERO    10,1

       18       18        /***** Include files *****/
       19       19          %INCLUDE B$JIT;
       20      309          %INCLUDE B_MACROS_C;
       21      420          %INCLUDE CP_6;
       22      501          %INCLUDE CP_6_SUBS;
       23     1041          %INCLUDE CP_MACROS_C;
       24     1793          %INCLUDE CP_SUBS_C;
       25     2710          %INCLUDE XUE_MACRO_C;
       26     3454          %INCLUDE XUE_SUBS_C;
       27     3634        /***** Macros *****/
       28     3635          %XUE_FUNPARAM (STCLASS=" ");
       29     3739          %XUE_OPTION (STCLASS=BASED);
       30     3795          %TEXTC (NAME=X$STRING,STCLASS=BASED);
       31     3800        /***** Symref data *****/
       32     3801    1     DCL B$JIT$ PTR SYMREF READONLY;
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:7    
       33     3802        /***** Local data *****/
       34     3803    1     DCL OPTION$ PTR AUTO;
       35     3804    1     DCL INDX SBIN WORD AUTO;
       36     3805        %EJECT;
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:8    
       37     3806    2     DO CASE (XUE_FUNPARAM.CODE#);

   3806  2 000002   200003 470500                    LDP0    @XUE_FUNPARAM,,AUTO
         2 000003   000000 235100                    LDA     0,,PR0
         2 000004   000005 115007                    CMPA    5,DL
         2 000005   000007 602005 2                  TNC     s:3806+5,AL
         2 000006   000226 710000 2                  TRA     s:3847
         2 000007   000226 710000 2                  TRA     s:3847
         2 000010   000014 710000 2                  TRA     s:3808
         2 000011   000051 710000 2                  TRA     s:3816
         2 000012   000113 710000 2                  TRA     s:3825
         2 000013   000161 710000 2                  TRA     s:3835

       38     3807    2        CASE (%$OK#);

       39     3808    2           XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 1;

   3808  2 000014   000004 471500                    LDP1    4,,PR0
         2 000015   000100 101400                    MRL     fill='000'O
         2 000016   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         2 000017   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

       40     3809    2           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_SKIPABORT#;

   3809  2 000020   000000 471400 xsym               LDP1    B$JIT$
         2 000021   100143 236100                    LDQ     99,,PR1
         2 000022   000000 276000 1                  ORQ     0
         2 000023   100143 756100                    STQ     99,,PR1

       41     3810    2           IF B$JIT.USRRNST = %RS_EXIT#

   3810  2 000024   100145 236100                    LDQ     101,,PR1
         2 000025   777000 316007                    CANQ    -512,DL
         2 000026   000040 601000 2                  TNZ     s:3814

       42     3811    2              THEN
       43     3812    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '1';
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:9    

   3812  2 000027   000004 473500                    LDP3    4,,PR0
         2 000030   000100 101500                    MRL     fill='000'O
         2 000031   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000032   200006 000002                    ADSC9   @XUE_FUNPARAM+3,,AUTO    cn=0,n=2
         2 000033   200006 220100                    LDX0    @XUE_FUNPARAM+3,,AUTO
         2 000034   040140 100400                    MLR     fill='040'O
         2 000035   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000036   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         2 000037   000226 710000 2                  TRA     s:3847

       44     3813    2              ELSE
       45     3814    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '0';

   3814  2 000040   000004 473500                    LDP3    4,,PR0
         2 000041   000100 101500                    MRL     fill='000'O
         2 000042   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000043   200006 000002                    ADSC9   @XUE_FUNPARAM+3,,AUTO    cn=0,n=2
         2 000044   200006 220100                    LDX0    @XUE_FUNPARAM+3,,AUTO
         2 000045   040140 100400                    MLR     fill='040'O
         2 000046   000001 000001 3                  ADSC9   1                        cn=0,n=1
         2 000047   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         2 000050   000226 710000 2                  TRA     s:3847

       46     3815    2        CASE (%$ERROR#);

       47     3816    2           XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 1;

   3816  2 000051   000004 471500                    LDP1    4,,PR0
         2 000052   000100 101400                    MRL     fill='000'O
         2 000053   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         2 000054   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

       48     3817    2           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_SKIPABORT#;

   3817  2 000055   000000 471400 xsym               LDP1    B$JIT$
         2 000056   100143 236100                    LDQ     99,,PR1
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:10   
         2 000057   000000 276000 1                  ORQ     0
         2 000060   100143 756100                    STQ     99,,PR1

       49     3818    2           IF B$JIT.USRRNST = %RS_ERR#

   3818  2 000061   100145 236100                    LDQ     101,,PR1
         2 000062   777000 376007                    ANQ     -512,DL
         2 000063   001000 116007                    CMPQ    512,DL
         2 000064   000071 600000 2                  TZE     s:3821
         2 000065   100145 236100                    LDQ     101,,PR1
         2 000066   777000 376007                    ANQ     -512,DL
         2 000067   020000 116007                    CMPQ    8192,DL
         2 000070   000102 601000 2                  TNZ     s:3823

       50     3819    2           OR B$JIT.USRRNST = %RS_EKEY#
       51     3820    2              THEN
       52     3821    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '1';

   3821  2 000071   000004 473500                    LDP3    4,,PR0
         2 000072   000100 101500                    MRL     fill='000'O
         2 000073   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000074   200006 000002                    ADSC9   @XUE_FUNPARAM+3,,AUTO    cn=0,n=2
         2 000075   200006 220100                    LDX0    @XUE_FUNPARAM+3,,AUTO
         2 000076   040140 100400                    MLR     fill='040'O
         2 000077   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000100   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         2 000101   000226 710000 2                  TRA     s:3847

       53     3822    2              ELSE
       54     3823    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '0';

   3823  2 000102   000004 473500                    LDP3    4,,PR0
         2 000103   000100 101500                    MRL     fill='000'O
         2 000104   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000105   200006 000002                    ADSC9   @XUE_FUNPARAM+3,,AUTO    cn=0,n=2
         2 000106   200006 220100                    LDX0    @XUE_FUNPARAM+3,,AUTO
         2 000107   040140 100400                    MLR     fill='040'O
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:11   
         2 000110   000001 000001 3                  ADSC9   1                        cn=0,n=1
         2 000111   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         2 000112   000226 710000 2                  TRA     s:3847

       55     3824    2        CASE (%$ABORT#);

       56     3825    2           XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 1;

   3825  2 000113   000004 471500                    LDP1    4,,PR0
         2 000114   000100 101400                    MRL     fill='000'O
         2 000115   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         2 000116   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

       57     3826    2           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_SKIPABORT#;

   3826  2 000117   000000 471400 xsym               LDP1    B$JIT$
         2 000120   100143 236100                    LDQ     99,,PR1
         2 000121   000000 276000 1                  ORQ     0
         2 000122   100143 756100                    STQ     99,,PR1

       58     3827    2           IF B$JIT.USRRNST = %RS_XXX#

   3827  2 000123   100145 236100                    LDQ     101,,PR1
         2 000124   777000 376007                    ANQ     -512,DL
         2 000125   002000 116007                    CMPQ    1024,DL
         2 000126   000137 600000 2                  TZE     s:3831
         2 000127   100145 236100                    LDQ     101,,PR1
         2 000130   777000 376007                    ANQ     -512,DL
         2 000131   010000 116007                    CMPQ    4096,DL
         2 000132   000137 600000 2                  TZE     s:3831
         2 000133   100145 236100                    LDQ     101,,PR1
         2 000134   777000 376007                    ANQ     -512,DL
         2 000135   004000 116007                    CMPQ    2048,DL
         2 000136   000150 601000 2                  TNZ     s:3833

       59     3828    2           OR B$JIT.USRRNST = %RS_ABRT#
       60     3829    2           OR B$JIT.USRRNST = %RS_SSP#
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:12   
       61     3830    2              THEN
       62     3831    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '1';

   3831  2 000137   000004 473500                    LDP3    4,,PR0
         2 000140   000100 101500                    MRL     fill='000'O
         2 000141   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000142   200006 000002                    ADSC9   @XUE_FUNPARAM+3,,AUTO    cn=0,n=2
         2 000143   200006 220100                    LDX0    @XUE_FUNPARAM+3,,AUTO
         2 000144   040140 100400                    MLR     fill='040'O
         2 000145   000000 000001 3                  ADSC9   0                        cn=0,n=1
         2 000146   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         2 000147   000226 710000 2                  TRA     s:3847

       63     3832    2              ELSE
       64     3833    2                 XUE_FUNPARAM.OUT$ -> X$STRING.TEXT = '0';

   3833  2 000150   000004 473500                    LDP3    4,,PR0
         2 000151   000100 101500                    MRL     fill='000'O
         2 000152   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000153   200006 000002                    ADSC9   @XUE_FUNPARAM+3,,AUTO    cn=0,n=2
         2 000154   200006 220100                    LDX0    @XUE_FUNPARAM+3,,AUTO
         2 000155   040140 100400                    MLR     fill='040'O
         2 000156   000001 000001 3                  ADSC9   1                        cn=0,n=1
         2 000157   300000 200010                    ADSC9   0,,PR3                   cn=1,n=*X0
         2 000160   000226 710000 2                  TRA     s:3847

       65     3834    2        CASE (%$STEPCC#);

       66     3835    2           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_SKIPABORT#;

   3835  2 000161   000000 471400 xsym               LDP1    B$JIT$
         2 000162   100143 236100                    LDQ     99,,PR1
         2 000163   000000 276000 1                  ORQ     0
         2 000164   100143 756100                    STQ     99,,PR1

       67     3836    2           IF B$JIT.STEPCC < 10

PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:13   
   3836  2 000165   100316 236100                    LDQ     206,,PR1
         2 000166   000777 376003                    ANQ     511,DU
         2 000167   000012 116003                    CMPQ    10,DU
         2 000170   000176 603000 2                  TRC     s:3840

       68     3837    2              THEN
       69     3838    2                 XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 1;

   3838  2 000171   000004 473500                    LDP3    4,,PR0
         2 000172   000100 101400                    MRL     fill='000'O
         2 000173   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         2 000174   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000175   000211 710000 2                  TRA     s:3845

       70     3839    2              ELSE
       71     3840    2                 IF B$JIT.STEPCC < 100

   3840  2 000176   000144 116003                    CMPQ    100,DU
         2 000177   000205 603000 2                  TRC     s:3844

       72     3841    2                    THEN
       73     3842    2                       XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 2;

   3842  2 000200   000004 473500                    LDP3    4,,PR0
         2 000201   000100 101400                    MRL     fill='000'O
         2 000202   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         2 000203   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000204   000211 710000 2                  TRA     s:3845

       74     3843    2                    ELSE
       75     3844    2                       XUE_FUNPARAM.OUT$ -> X$STRING.SIZ = 3;

   3844  2 000205   000004 473500                    LDP3    4,,PR0
         2 000206   000100 101400                    MRL     fill='000'O
         2 000207   000005 000004 xsym               ADSC9   B_VECTNIL+5              cn=0,n=4
         2 000210   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:14   
       76     3845    2           CALL BINCHAR (XUE_FUNPARAM.OUT$ -> X$STRING.TEXT,B$JIT.STEPCC);

   3845  2 000211   000004 473500                    LDP3    4,,PR0
         2 000212   000100 101500                    MRL     fill='000'O
         2 000213   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1
         2 000214   200006 000002                    ADSC9   @XUE_FUNPARAM+3,,AUTO    cn=0,n=2
         2 000215   200006 220100                    LDX0    @XUE_FUNPARAM+3,,AUTO
         2 000216   100316 236100                    LDQ     206,,PR1
         2 000217   000022 772000                    QRL     18
         2 000220   000777 376007                    ANQ     511,DL
         2 000221   000000 235003                    LDA     0,DU
         2 000222   200010 757100                    STAQ    @XUE_FUNPARAM+5,,AUTO
         2 000223   000140 301500                    BTD
         2 000224   200010 000010                    NDSC9   @XUE_FUNPARAM+5,,AUTO    cn=0,s=lsgnf,sf=0,n=8
         2 000225   300000 230010                    NDSC9   0,,PR3                   cn=1,s=nosgn,sf=0,n=*X0

       77     3846    2     END;   /* Do case ... end */

       78     3847    1     RETURN;

   3847  2 000226   000000 702200 xent               TSX2  ! X66_ARET
       79     3848    1   END CPG$FUN$$;
       80     3849        %EOD ;

PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:15   
--  Include file information  --

   XUE_SUBS_C.:E05TOU  is referenced.
   XUE_MACRO_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPG$FUN$$.
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:16   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @XUE_FUNPARAM             *0-0-0/w STRC(288)   r     1 XUE_FUNPARAM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/c ASTR(9)     r     1 X$STRING
     0-0-0/w ASTR(81)    r     1 XUE_OPTION


   Procedure CPG$FUN$$ requires 151 words for executable code.
   Procedure CPG$FUN$$ requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:17   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:18   
          MINI XREF LISTING

B$JIT.CPFLAGS1
       122**DCL      3809<<ASSIGN   3809>>ASSIGN   3817<<ASSIGN   3817>>ASSIGN   3826<<ASSIGN   3826>>ASSIGN
      3835<<ASSIGN   3835>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       127**DCL       127--REDEF
B$JIT.ERR.MID
        34**DCL        34--REDEF
B$JIT.JRESPEAK
       195**DCL       196--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       304**DCL       304--REDEF     305--REDEF
B$JIT.PNR
       208**DCL       208--REDEF
B$JIT.STEPCC
       260**DCL      3836>>IF       3840>>IF       3845>>CALLBLT
B$JIT.TSLINE
       302**DCL       303--REDEF
B$JIT.USRRNST
       169**DCL      3810>>IF       3818>>IF       3818>>IF       3827>>IF       3827>>IF       3827>>IF
B$JIT$
      3801**DCL        28--IMP-PTR  3809>>ASSIGN   3809>>ASSIGN   3810>>IF       3817>>ASSIGN   3817>>ASSIGN
      3818>>IF       3818>>IF       3826>>ASSIGN   3826>>ASSIGN   3827>>IF       3827>>IF       3827>>IF
      3835>>ASSIGN   3835>>ASSIGN   3836>>IF       3840>>IF       3845>>CALLBLT
X$STRING.SIZ
      3797**DCL      3798--IMP-SIZ  3808<<ASSIGN   3812>>ASSIGN   3814>>ASSIGN   3816<<ASSIGN   3821>>ASSIGN
      3823>>ASSIGN   3825<<ASSIGN   3831>>ASSIGN   3833>>ASSIGN   3838<<ASSIGN   3842<<ASSIGN   3844<<ASSIGN
      3845>>CALLBLT
X$STRING.TEXT
      3798**DCL      3812<<ASSIGN   3814<<ASSIGN   3821<<ASSIGN   3823<<ASSIGN   3831<<ASSIGN   3833<<ASSIGN
      3845<<CALLBLT
XUE_FUNPARAM
      3649**DCL        17--PROC
PL6.E3A0      #001=CPG$FUN$$ File=CPG$SUBR.:E05TSI                               TUE 07/29/97 11:43 Page:19   
XUE_FUNPARAM.CODE#
      3653**DCL      3806>>DOCASE
XUE_FUNPARAM.OUT$
      3698**DCL      3808>>ASSIGN   3812>>ASSIGN   3812>>ASSIGN   3814>>ASSIGN   3814>>ASSIGN   3816>>ASSIGN
      3821>>ASSIGN   3821>>ASSIGN   3823>>ASSIGN   3823>>ASSIGN   3825>>ASSIGN   3831>>ASSIGN   3831>>ASSIGN
      3833>>ASSIGN   3833>>ASSIGN   3838>>ASSIGN   3842>>ASSIGN   3844>>ASSIGN   3845>>CALLBLT  3845>>CALLBLT
XUE_OPTION.COUNT#
      3770**DCL      3785--IMP-SIZ

PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:20   
       81        1        /*T***********************************************************/
       82        2        /*T*                                                         */
       83        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       84        4        /*T*                                                         */
       85        5        /*T***********************************************************/
       86        6        /*P*
       87        7             NAME: CPG$GET_WHEN_CNTL_REC
       88        8             PURPOSE:
       89        9                  To READ in the WHEN command's control record and updated it.
       90       10             DESCRIPTION:
       91       11                  READ the WHEN command control record into SEG$2 and update it
       92       12                  so that the levels are correct.
       93       13             REFERENCE:
       94       14                  PROGRAMMER REF MANUAL
       95       15        */
       96       16        CPG$GET_WHEN_CNTL_REC: PROC (RECORD_CHANGED,STAR_S_OPENED) ALTRET ;
       97       17        /***** Include files *****/
       98       18          %INCLUDE CP_6;
       99       99          %INCLUDE XU_MACRO_C ;
      100     3205          %INCLUDE CP_DATA_R ;
      101     5768          %INCLUDE B$JIT;
      102     6058          %INCLUDE B_MACROS_C;
      103     6169          %INCLUDE CP_6_SUBS;
      104     6709          %INCLUDE CP_MACROS_C;
      105     7461          %INCLUDE CP_SUBS_C;
      106     8378        /***** Parameter *****/
      107     8379    1   DCL RECORD_CHANGED BIT(1) PARAM ;
      108     8380    1   DCL STAR_S_OPENED BIT(1) PARAM ;  /*  Flag to indicate if we open *S file */
      109     8381        /***** Entries *****/
      110     8382    1   DCL CPC$OPEN_S ENTRY(1) ALTRET ;
      111     8383    1   DCL CPJ$READ_S ENTRY(3) ALTRET ;
      112     8384
      113     8385        /***** Local FPTs ****/
      114     8386        %FPT_DELREC (FPTN=FPT_DELREC,STCLASS=AUTO) ;
      115     8405        /***** Macro defs *****/
      116     8406        %SEG$2(NAME=SEG$2);
      117     8466        /***** Local data *****/
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:21   
      118     8467        %WHEN_CNTL_REC (NAME=WHEN$CNTL_REC, STCLASS=BASED) ;
      119     8488        %K_WHEN (NAME=FIRST_WHEN_KEY,STCLASS=AUTO) ;
      120     8506        %K_WHEN (NAME=LAST_WHEN_KEY,STCLASS=AUTO) ;
      121     8524        %K_WHEN (NAME=CK_WHEN,STCLASS=CONSTANT) ;
      122     8542    1   DCL I UBIN WORD ;
      123     8543    1   DCL SAVE_I UBIN WORD ;
      124     8544    1   DCL NOT_DONE BIT(1) ;
      125     8545    1   DCL CHANGED_FLG BIT(1) ;
      126     8546    1   DCL DEL BIT(1) ;
      127     8547
      128     8548        /***** Procedure *****/
      129     8549
      130     8550    1     STAR_S_OPENED = ~(SEG$2.FLAGS.GOT_WHEN_CNTL_REC);
      131     8551    1     IF STAR_S_OPENED  /* ie, it will be opened after this code is executed! */
      132     8552    1       THEN
      133     8553    2         DO;         /* Open *S and get WHEN_CNTL_REC */
      134     8554    2             CALL CPC$OPEN_S(M$IBEX1_NUM) ALTRET(GET_WHEN_ERR) ;
      135     8555    2             CALL CPJ$READ_S(M$IBEX1_NUM, VECTOR(K_WHEN_CNTL),
      136     8556    2                             VECTOR(SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC))
      137     8557    2                             ALTRET(GET_WHEN_ERR) ;
      138     8558    2             SEG$2.FLAGS.GOT_WHEN_CNTL_REC = '1'B;
      139     8559    2         END;  /* Then Do */
      140     8560    1     CHANGED_FLG = '0'B ;
      141     8561    1     DEL = '0'B ;
      142     8562    1     IF B$JIT.CSLEV ~= SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV
      143     8563    1         THEN        /* Need to correct WHEN command control record. */
      144     8564    1             IF B$JIT.CSLEV < SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV
      145     8565    1               THEN
      146     8566    2                 DO ;
      147     8567    3                   DO I = B$JIT.CSLEV+1 TO SEG$2.WHEN_CNTL_REC$->
      148     8568    3                                               WHEN$CNTL_REC.CUR_LEV ;
      149     8569    3                     SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.OPT(I) = %WHEN_NONE# ;
      150     8570    3                     IF SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.REC(I)
      151     8571    3                       THEN
      152     8572    4                         DO;
      153     8573    4                           DEL = '1'B;
      154     8574    4                           SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.REC(I) = '0'B;
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:22   
      155     8575    4                         END ; /* Then Do */
      156     8576    3                   END ; /* Do I */
      157     8577    2                   FPT_DELREC = CFPT_DELREC ;
      158     8578    2                   FPT_DELREC.V_ = VECTOR(FPT_DELREC.V) ;
      159     8579    2                   FPT_DELREC.KEY_ = VECTOR(FIRST_WHEN_KEY) ;
      160     8580    2                   FPT_DELREC.LKEY_ = VECTOR(LAST_WHEN_KEY) ;
      161     8581    2                   FPT_DELREC.V.DCB# = M$IBEX1_NUM ;
      162     8582    2                   FIRST_WHEN_KEY = CK_WHEN ;
      163     8583    2                   FIRST_WHEN_KEY.NUM = B$JIT.CSLEV+1 ;
      164     8584    2                   LAST_WHEN_KEY = CK_WHEN ;
      165     8585    2                   LAST_WHEN_KEY.NUM = SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV ;
      166     8586    2                   IF DEL
      167     8587    2                     THEN
      168     8588    3                       DO;
      169     8589    3                         IF ~STAR_S_OPENED
      170     8590    3                           THEN
      171     8591    4                             DO;
      172     8592    4                               CALL CPC$OPEN_S(M$IBEX1_NUM) ALTRET(GET_WHEN_ERR);
      173     8593    4                               STAR_S_OPENED = '1'B;
      174     8594    4                             END;  /* Then Do */
      175     8595    4                         CALL M$DELREC(FPT_DELREC) WHENALTRETURN DO ;
      176     8596    4                                                   END ;
      177     8597    3                       END;  /* Then Do */
      178     8598    2                   SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV = B$JIT.CSLEV ;
      179     8599    2                   SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.STATE_LEV = B$JIT.CSLEV ;
      180     8600    2                   CHANGED_FLG = '1'B ;
      181     8601    2                 END ; /* Then Do */
      182     8602    1               ELSE
      183     8603    2                 DO ;
      184     8604    2                   DO I = SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV+1 TO
      185     8605    3                                                              B$JIT.CSLEV ;
      186     8606    3                     SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.OPT(I) = %WHEN_NONE# ;
      187     8607    3                   END ; /* Do I */
      188     8608    2                   SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV = B$JIT.CSLEV ;
      189     8609    2                   SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.STATE_LEV = B$JIT.CSLEV ;
      190     8610    2                   CHANGED_FLG = '1'B ;
      191     8611    2                 END ; /* Else Do */
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:23   
      192     8612
      193     8613    1     NOT_DONE = '1'B ;
      194     8614    1     I = SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.STATE_LEV ;
      195     8615    1     SAVE_I = I ;
      196     8616    2     DO WHILE(NOT_DONE) ;
      197     8617    2         IF SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.OPT(I) = %WHEN_NONE#
      198     8618    2             THEN
      199     8619    2               IF I = 0
      200     8620    2                 THEN
      201     8621    2                   NOT_DONE = '0'B ;
      202     8622    2                 ELSE
      203     8623    2                   I = I - 1 ;
      204     8624    2             ELSE
      205     8625    2               NOT_DONE = '0'B ;
      206     8626    2     END ;   /* Do While */
      207     8627
      208     8628    1     IF SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.OPT(I) = %WHEN#
      209     8629    1         THEN
      210     8630    1             B$JIT.PRFLAGS.WHEN = '1'B ;
      211     8631    1         ELSE
      212     8632    1             B$JIT.PRFLAGS.WHEN = '0'B ;
      213     8633    1     SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.STATE_LEV = I ;
      214     8634    1     IF I ~= SAVE_I
      215     8635    1       THEN
      216     8636    1         CHANGED_FLG = '1'B ;
      217     8637    1     IF ADDR(RECORD_CHANGED) ~= ADDR(NIL) AND CHANGED_FLG
      218     8638    1       THEN
      219     8639    1         RECORD_CHANGED = '1'B ;
      220     8640
      221     8641    1     RETURN ;
      222     8642
      223     8643    1   GET_WHEN_ERR:
      224     8644    1     ALTRETURN ;
      225     8645
      226     8646    1   END   CPG$GET_WHEN_CNTL_REC ;
      227     8647        %EOD ;

PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:24   
--  Include file information  --

   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPG$GET_WHEN_CNTL_REC.

   Procedure CPG$GET_WHEN_CNTL_REC requires 252 words for executable code.
   Procedure CPG$GET_WHEN_CNTL_REC requires 34 words of local(AUTO) storage.

PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:25   

 Object Unit name= CPG$GET_WHEN_CNTL_REC                      File name= CPG$SUBR.:E05TOU
 UTS= JUL 29 '97 11:43:54.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  CPG$GET_WHEN_CNTL_REC
    2   Proc  even  none   252    374  CPG$GET_WHEN_CNTL_REC
    3  RoData even  none     7      7  CPG$GET_WHEN_CNTL_REC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  CPG$GET_WHEN_CNTL_REC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 CPC$OPEN_S
 yes     yes           Std       3 CPJ$READ_S
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:26   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_DELREC                      r    SEG2$
r    B$JIT$                                M$IBEX1_NUM                           K_WHEN_CNTL
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:27   


       81        1        /*T***********************************************************/
       82        2        /*T*                                                         */
       83        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       84        4        /*T*                                                         */
       85        5        /*T***********************************************************/
       86        6        /*P*
       87        7             NAME: CPG$GET_WHEN_CNTL_REC
       88        8             PURPOSE:
       89        9                  To READ in the WHEN command's control record and updated it.
       90       10             DESCRIPTION:
       91       11                  READ the WHEN command control record into SEG$2 and update it
       92       12                  so that the levels are correct.
       93       13             REFERENCE:
       94       14                  PROGRAMMER REF MANUAL
       95       15        */
       96       16        CPG$GET_WHEN_CNTL_REC: PROC (RECORD_CHANGED,STAR_S_OPENED) ALTRET ;

     16  2 000000   000000 700200 xent  CPG$GET_WHE* TSX0  ! X66_AUTO_2
         2 000001   000042 000002                    ZERO    34,2

       97       17        /***** Include files *****/
       98       18          %INCLUDE CP_6;
       99       99          %INCLUDE XU_MACRO_C ;
      100     3205          %INCLUDE CP_DATA_R ;
      101     5768          %INCLUDE B$JIT;
      102     6058          %INCLUDE B_MACROS_C;
      103     6169          %INCLUDE CP_6_SUBS;
      104     6709          %INCLUDE CP_MACROS_C;
      105     7461          %INCLUDE CP_SUBS_C;
      106     8378        /***** Parameter *****/
      107     8379    1   DCL RECORD_CHANGED BIT(1) PARAM ;
      108     8380    1   DCL STAR_S_OPENED BIT(1) PARAM ;  /*  Flag to indicate if we open *S file */
      109     8381        /***** Entries *****/
      110     8382    1   DCL CPC$OPEN_S ENTRY(1) ALTRET ;
      111     8383    1   DCL CPJ$READ_S ENTRY(3) ALTRET ;
      112     8384
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:28   
      113     8385        /***** Local FPTs ****/
      114     8386        %FPT_DELREC (FPTN=FPT_DELREC,STCLASS=AUTO) ;
      115     8405        /***** Macro defs *****/
      116     8406        %SEG$2(NAME=SEG$2);
      117     8466        /***** Local data *****/
      118     8467        %WHEN_CNTL_REC (NAME=WHEN$CNTL_REC, STCLASS=BASED) ;
      119     8488        %K_WHEN (NAME=FIRST_WHEN_KEY,STCLASS=AUTO) ;
      120     8506        %K_WHEN (NAME=LAST_WHEN_KEY,STCLASS=AUTO) ;
      121     8524        %K_WHEN (NAME=CK_WHEN,STCLASS=CONSTANT) ;
      122     8542    1   DCL I UBIN WORD ;
      123     8543    1   DCL SAVE_I UBIN WORD ;
      124     8544    1   DCL NOT_DONE BIT(1) ;
      125     8545    1   DCL CHANGED_FLG BIT(1) ;
      126     8546    1   DCL DEL BIT(1) ;
      127     8547
      128     8548        /***** Procedure *****/
      129     8549
      130     8550    1     STAR_S_OPENED = ~(SEG$2.FLAGS.GOT_WHEN_CNTL_REC);

   8550  2 000002   000000 470400 xsym               LDP0    SEG2$
         2 000003   000000 236100                    LDQ     0,,PR0
         2 000004   000020 736000                    QLS     16
         2 000005   400000 376003                    ANQ     -131072,DU
         2 000006   400000 676003                    ERQ     -131072,DU
         2 000007   200032 756100                    STQ     DEL+2,,AUTO
         2 000010   200004 471500                    LDP1    @STAR_S_OPENED,,AUTO
         2 000011   003100 060500                    CSL     bolr='003'O
         2 000012   200032 000044                    BDSC    DEL+2,,AUTO              by=0,bit=0,n=36
         2 000013   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

      131     8551    1     IF STAR_S_OPENED  /* ie, it will be opened after this code is executed! */

   8551  2 000014   000000 066500                    CMPB    filb='0'B
         2 000015   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1
         2 000016   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 000017   000045 600000 2                  TZE     s:8560

PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:29   
      132     8552    1       THEN
      133     8553    2         DO;         /* Open *S and get WHEN_CNTL_REC */

      134     8554    2             CALL CPC$OPEN_S(M$IBEX1_NUM) ALTRET(GET_WHEN_ERR) ;

   8554  2 000020   000000 630400 3                  EPPR0   0
         2 000021   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000022   000000 701000 xent               TSX1    CPC$OPEN_S
         2 000023   000373 702000 2                  TSX2    GET_WHEN_ERR

      135     8555    2             CALL CPJ$READ_S(M$IBEX1_NUM, VECTOR(K_WHEN_CNTL),

   8555  2 000024   000000 470400 xsym               LDP0    SEG2$
         2 000025   000175 471500                    LDP1    125,,PR0
         2 000026   000004 235000 3                  LDA     4
         2 000027   200032 451500                    STP1    DEL+2,,AUTO
         2 000030   200032 236100                    LDQ     DEL+2,,AUTO
         2 000031   200034 757100                    STAQ    DEL+4,,AUTO
         2 000032   200034 633500                    EPPR3   DEL+4,,AUTO
         2 000033   200040 453500                    STP3    DEL+8,,AUTO
         2 000034   000000 237000 3                  LDAQ    0
         2 000035   200036 757100                    STAQ    DEL+6,,AUTO
         2 000036   200036 630500                    EPPR0   DEL+6,,AUTO
         2 000037   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000040   000000 701000 xent               TSX1    CPJ$READ_S
         2 000041   000373 702000 2                  TSX2    GET_WHEN_ERR

      136     8556    2                             VECTOR(SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC))
      137     8557    2                             ALTRET(GET_WHEN_ERR) ;
      138     8558    2             SEG$2.FLAGS.GOT_WHEN_CNTL_REC = '1'B;

   8558  2 000042   000000 470400 xsym               LDP0    SEG2$
         2 000043   000002 236003                    LDQ     2,DU
         2 000044   000000 256100                    ORSQ    0,,PR0

      139     8559    2         END;  /* Then Do */

PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:30   
      140     8560    1     CHANGED_FLG = '0'B ;

   8560  2 000045   200027 450100                    STZ     CHANGED_FLG,,AUTO

      141     8561    1     DEL = '0'B ;

   8561  2 000046   200030 450100                    STZ     DEL,,AUTO

      142     8562    1     IF B$JIT.CSLEV ~= SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV

   8562  2 000047   000175 471500                    LDP1    125,,PR0
         2 000050   100000 236100                    LDQ     0,,PR1
         2 000051   000033 772000                    QRL     27
         2 000052   200032 756100                    STQ     DEL+2,,AUTO
         2 000053   000000 473400 xsym               LDP3    B$JIT$
         2 000054   300170 236100                    LDQ     120,,PR3
         2 000055   000022 772000                    QRL     18
         2 000056   000777 376007                    ANQ     511,DL
         2 000057   200032 116100                    CMPQ    DEL+2,,AUTO
         2 000060   000273 600000 2                  TZE     s:8613

      143     8563    1         THEN        /* Need to correct WHEN command control record. */
      144     8564    1             IF B$JIT.CSLEV < SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV

   8564  2 000061   100000 236100                    LDQ     0,,PR1
         2 000062   000033 772000                    QRL     27
         2 000063   200032 756100                    STQ     DEL+2,,AUTO
         2 000064   300170 236100                    LDQ     120,,PR3
         2 000065   000022 772000                    QRL     18
         2 000066   000777 376007                    ANQ     511,DL
         2 000067   200032 116100                    CMPQ    DEL+2,,AUTO
         2 000070   000235 605000 2                  TPL     s:8604

      145     8565    1               THEN
      146     8566    2                 DO ;

      147     8567    3                   DO I = B$JIT.CSLEV+1 TO SEG$2.WHEN_CNTL_REC$->
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:31   

   8567  2 000071   000001 036007                    ADLQ    1,DL
         2 000072   200024 756100                    STQ     I,,AUTO
         2 000073   000122 710000 2                  TRA     s:8576+3

      148     8568    3                                               WHEN$CNTL_REC.CUR_LEV ;
      149     8569    3                     SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.OPT(I) = %WHEN_NONE# ;

   8569  2 000074   000000 470400 xsym               LDP0    SEG2$
         2 000075   000175 471500                    LDP1    125,,PR0
         2 000076   200024 236100                    LDQ     I,,AUTO
         2 000077   000003 402007                    MPY     3,DL
         2 000100   003106 061400                    CSR     bolr='003'O
         2 000101   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         2 000102   100001 000002                    BDSC    1,Q,PR1                  by=0,bit=0,n=2

      150     8570    3                     IF SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.REC(I)

   8570  2 000103   000175 471500                    LDP1    125,,PR0
         2 000104   000000 066506                    CMPB    filb='0'B
         2 000105   100001 020001                    BDSC    1,Q,PR1                  by=0,bit=2,n=1
         2 000106   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         2 000107   000117 600000 2                  TZE     s:8576

      151     8571    3                       THEN
      152     8572    4                         DO;

      153     8573    4                           DEL = '1'B;

   8573  2 000110   400000 236003                    LDQ     -131072,DU
         2 000111   200030 756100                    STQ     DEL,,AUTO

      154     8574    4                           SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.REC(I) = '0'B;

   8574  2 000112   200024 236100                    LDQ     I,,AUTO
         2 000113   000003 402007                    MPY     3,DL
         2 000114   003106 060400                    CSL     bolr='003'O
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:32   
         2 000115   000002 000001 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=1
         2 000116   100001 020001                    BDSC    1,Q,PR1                  by=0,bit=2,n=1

      155     8575    4                         END ; /* Then Do */

      156     8576    3                   END ; /* Do I */

   8576  2 000117   200024 235100                    LDA     I,,AUTO
         2 000120   000001 035007                    ADLA    1,DL
         2 000121   200024 755100                    STA     I,,AUTO
         2 000122   000175 471500                    LDP1    125,,PR0
         2 000123   100000 236100                    LDQ     0,,PR1
         2 000124   000033 772000                    QRL     27
         2 000125   200024 116100                    CMPQ    I,,AUTO
         2 000126   000074 603000 2                  TRC     s:8569

      157     8577    2                   FPT_DELREC = CFPT_DELREC ;

   8577  2 000127   000100 100400                    MLR     fill='000'O
         2 000130   000000 000050 xsym               ADSC9   CFPT_DELREC              cn=0,n=40
         2 000131   200006 000050                    ADSC9   FPT_DELREC,,AUTO         cn=0,n=40

      158     8578    2                   FPT_DELREC.V_ = VECTOR(FPT_DELREC.V) ;

   8578  2 000132   000005 235000 3                  LDA     5
         2 000133   200032 452500                    STP2    DEL+2,,AUTO
         2 000134   200032 236100                    LDQ     DEL+2,,AUTO
         2 000135   000016 036003                    ADLQ    14,DU
         2 000136   200006 757100                    STAQ    FPT_DELREC,,AUTO

      159     8579    2                   FPT_DELREC.KEY_ = VECTOR(FIRST_WHEN_KEY) ;

   8579  2 000137   000005 235000 3                  LDA     5
         2 000140   200032 452500                    STP2    DEL+2,,AUTO
         2 000141   200032 236100                    LDQ     DEL+2,,AUTO
         2 000142   000020 036003                    ADLQ    16,DU
         2 000143   200010 757100                    STAQ    FPT_DELREC+2,,AUTO
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:33   

      160     8580    2                   FPT_DELREC.LKEY_ = VECTOR(LAST_WHEN_KEY) ;

   8580  2 000144   000005 235000 3                  LDA     5
         2 000145   200032 452500                    STP2    DEL+2,,AUTO
         2 000146   200032 236100                    LDQ     DEL+2,,AUTO
         2 000147   000022 036003                    ADLQ    18,DU
         2 000150   200012 757100                    STAQ    FPT_DELREC+4,,AUTO

      161     8581    2                   FPT_DELREC.V.DCB# = M$IBEX1_NUM ;

   8581  2 000151   000000 720000 xsym               LXL0    M$IBEX1_NUM
         2 000152   200016 740100                    STX0    FPT_DELREC+8,,AUTO

      162     8582    2                   FIRST_WHEN_KEY = CK_WHEN ;

   8582  2 000153   000100 100400                    MLR     fill='000'O
         2 000154   000000 000006 1                  ADSC9   CK_WHEN                  cn=0,n=6
         2 000155   200020 000006                    ADSC9   FIRST_WHEN_KEY,,AUTO     cn=0,n=6

      163     8583    2                   FIRST_WHEN_KEY.NUM = B$JIT.CSLEV+1 ;

   8583  2 000156   000000 473400 xsym               LDP3    B$JIT$
         2 000157   300170 236100                    LDQ     120,,PR3
         2 000160   000022 772000                    QRL     18
         2 000161   000777 376007                    ANQ     511,DL
         2 000162   000001 036007                    ADLQ    1,DL
         2 000163   000022 736000                    QLS     18
         2 000164   200021 552120                    STBQ    FIRST_WHEN_KEY+1,'20'O,AUTO

      164     8584    2                   LAST_WHEN_KEY = CK_WHEN ;

   8584  2 000165   000100 100400                    MLR     fill='000'O
         2 000166   000000 000006 1                  ADSC9   CK_WHEN                  cn=0,n=6
         2 000167   200022 000006                    ADSC9   LAST_WHEN_KEY,,AUTO      cn=0,n=6

      165     8585    2                   LAST_WHEN_KEY.NUM = SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV ;
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:34   

   8585  2 000170   100000 236100                    LDQ     0,,PR1
         2 000171   000011 772000                    QRL     9
         2 000172   200023 552120                    STBQ    LAST_WHEN_KEY+1,'20'O,AUTO

      166     8586    2                   IF DEL

   8586  2 000173   200030 234100                    SZN     DEL,,AUTO
         2 000174   000221 605000 2                  TPL     s:8598

      167     8587    2                     THEN
      168     8588    3                       DO;

      169     8589    3                         IF ~STAR_S_OPENED

   8589  2 000175   200004 474500                    LDP4    @STAR_S_OPENED,,AUTO
         2 000176   003100 060500                    CSL     bolr='003'O
         2 000177   400000 000001                    BDSC    0,,PR4                   by=0,bit=0,n=1
         2 000200   200032 000044                    BDSC    DEL+2,,AUTO              by=0,bit=0,n=36
         2 000201   200032 236100                    LDQ     DEL+2,,AUTO
         2 000202   400000 676003                    ERQ     -131072,DU
         2 000203   000214 600000 2                  TZE     s:8595

      170     8590    3                           THEN
      171     8591    4                             DO;

      172     8592    4                               CALL CPC$OPEN_S(M$IBEX1_NUM) ALTRET(GET_WHEN_ERR);

   8592  2 000204   000000 630400 3                  EPPR0   0
         2 000205   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000206   000000 701000 xent               TSX1    CPC$OPEN_S
         2 000207   000373 702000 2                  TSX2    GET_WHEN_ERR

      173     8593    4                               STAR_S_OPENED = '1'B;

   8593  2 000210   200004 470500                    LDP0    @STAR_S_OPENED,,AUTO
         2 000211   003100 060400                    CSL     bolr='003'O
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:35   
         2 000212   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         2 000213   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1

      174     8594    4                             END;  /* Then Do */

      175     8595    4                         CALL M$DELREC(FPT_DELREC) WHENALTRETURN DO ;

   8595  2 000214   200006 630500                    EPPR0   FPT_DELREC,,AUTO
         2 000215   440002 713400                    CLIMB   alt,+16386
         2 000216   401400 401760                    pmme    nvectors=4
         2 000217   000221 702000 2                  TSX2    s:8598
         2 000220   000221 710000 2                  TRA     s:8598

      176     8596    4                                                   END ;

      177     8597    3                       END;  /* Then Do */

      178     8598    2                   SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV = B$JIT.CSLEV ;

   8598  2 000221   000000 470400 xsym               LDP0    SEG2$
         2 000222   000175 471500                    LDP1    125,,PR0
         2 000223   000000 473400 xsym               LDP3    B$JIT$
         2 000224   300170 236100                    LDQ     120,,PR3
         2 000225   000011 736000                    QLS     9
         2 000226   100000 552140                    STBQ    0,'40'O,PR1

      179     8599    2                   SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.STATE_LEV = B$JIT.CSLEV ;

   8599  2 000227   000175 471500                    LDP1    125,,PR0
         2 000230   300170 236100                    LDQ     120,,PR3
         2 000231   100000 552120                    STBQ    0,'20'O,PR1

      180     8600    2                   CHANGED_FLG = '1'B ;

   8600  2 000232   400000 236003                    LDQ     -131072,DU
         2 000233   200027 756100                    STQ     CHANGED_FLG,,AUTO

PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:36   
      181     8601    2                 END ; /* Then Do */

   8601  2 000234   000273 710000 2                  TRA     s:8613

      182     8602    1               ELSE
      183     8603    2                 DO ;

      184     8604    2                   DO I = SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV+1 TO

   8604  2 000235   100000 236100                    LDQ     0,,PR1
         2 000236   000033 772000                    QRL     27
         2 000237   000001 036007                    ADLQ    1,DL
         2 000240   200024 756100                    STQ     I,,AUTO
         2 000241   000254 710000 2                  TRA     s:8607+3

      185     8605    3                                                              B$JIT.CSLEV ;
      186     8606    3                     SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.OPT(I) = %WHEN_NONE# ;

   8606  2 000242   000000 470400 xsym               LDP0    SEG2$
         2 000243   000175 471500                    LDP1    125,,PR0
         2 000244   200024 236100                    LDQ     I,,AUTO
         2 000245   000003 402007                    MPY     3,DL
         2 000246   003106 061400                    CSR     bolr='003'O
         2 000247   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         2 000250   100001 000002                    BDSC    1,Q,PR1                  by=0,bit=0,n=2

      187     8607    3                   END ; /* Do I */

   8607  2 000251   200024 235100                    LDA     I,,AUTO
         2 000252   000001 035007                    ADLA    1,DL
         2 000253   200024 755100                    STA     I,,AUTO
         2 000254   000000 471400 xsym               LDP1    B$JIT$
         2 000255   100170 236100                    LDQ     120,,PR1
         2 000256   000022 772000                    QRL     18
         2 000257   000777 376007                    ANQ     511,DL
         2 000260   200024 116100                    CMPQ    I,,AUTO
         2 000261   000242 603000 2                  TRC     s:8606
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:37   

      188     8608    2                   SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV = B$JIT.CSLEV ;

   8608  2 000262   000175 473500                    LDP3    125,,PR0
         2 000263   100170 236100                    LDQ     120,,PR1
         2 000264   000011 736000                    QLS     9
         2 000265   300000 552140                    STBQ    0,'40'O,PR3

      189     8609    2                   SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.STATE_LEV = B$JIT.CSLEV ;

   8609  2 000266   000175 473500                    LDP3    125,,PR0
         2 000267   100170 236100                    LDQ     120,,PR1
         2 000270   300000 552120                    STBQ    0,'20'O,PR3

      190     8610    2                   CHANGED_FLG = '1'B ;

   8610  2 000271   400000 236003                    LDQ     -131072,DU
         2 000272   200027 756100                    STQ     CHANGED_FLG,,AUTO

      191     8611    2                 END ; /* Else Do */

      192     8612
      193     8613    1     NOT_DONE = '1'B ;

   8613  2 000273   400000 236003                    LDQ     -131072,DU
         2 000274   200026 756100                    STQ     NOT_DONE,,AUTO

      194     8614    1     I = SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.STATE_LEV ;

   8614  2 000275   000175 471500                    LDP1    125,,PR0
         2 000276   100000 236100                    LDQ     0,,PR1
         2 000277   000022 772000                    QRL     18
         2 000300   000777 376007                    ANQ     511,DL
         2 000301   200024 756100                    STQ     I,,AUTO

      195     8615    1     SAVE_I = I ;

PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:38   
   8615  2 000302   200025 756100                    STQ     SAVE_I,,AUTO

      196     8616    2     DO WHILE(NOT_DONE) ;

   8616  2 000303   200026 234100                    SZN     NOT_DONE,,AUTO
         2 000304   000331 605000 2                  TPL     s:8628

      197     8617    2         IF SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.OPT(I) = %WHEN_NONE#

   8617  2 000305   000000 470400 xsym               LDP0    SEG2$
         2 000306   000175 471500                    LDP1    125,,PR0
         2 000307   200024 236100                    LDQ     I,,AUTO
         2 000310   000003 402007                    MPY     3,DL
         2 000311   003100 061506                    CSR     bolr='003'O
         2 000312   100001 000002                    BDSC    1,Q,PR1                  by=0,bit=0,n=2
         2 000313   200032 000044                    BDSC    DEL+2,,AUTO              by=0,bit=0,n=36
         2 000314   200032 236100                    LDQ     DEL+2,,AUTO
         2 000315   000000 116003                    CMPQ    0,DU
         2 000316   000326 601000 2                  TNZ     s:8625

      198     8618    2             THEN
      199     8619    2               IF I = 0

   8619  2 000317   200024 235100                    LDA     I,,AUTO
         2 000320   000323 601000 2                  TNZ     s:8623

      200     8620    2                 THEN
      201     8621    2                   NOT_DONE = '0'B ;

   8621  2 000321   200026 450100                    STZ     NOT_DONE,,AUTO
         2 000322   000327 710000 2                  TRA     s:8626

      202     8622    2                 ELSE
      203     8623    2                   I = I - 1 ;

   8623  2 000323   000001 135007                    SBLA    1,DL
         2 000324   200024 755100                    STA     I,,AUTO
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:39   
         2 000325   000327 710000 2                  TRA     s:8626

      204     8624    2             ELSE
      205     8625    2               NOT_DONE = '0'B ;

   8625  2 000326   200026 450100                    STZ     NOT_DONE,,AUTO

      206     8626    2     END ;   /* Do While */

   8626  2 000327   200026 234100                    SZN     NOT_DONE,,AUTO
         2 000330   000305 604000 2                  TMI     s:8617

      207     8627
      208     8628    1     IF SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.WHEN.OPT(I) = %WHEN#

   8628  2 000331   200024 236100                    LDQ     I,,AUTO
         2 000332   000003 402007                    MPY     3,DL
         2 000333   003100 061506                    CSR     bolr='003'O
         2 000334   100001 000002                    BDSC    1,Q,PR1                  by=0,bit=0,n=2
         2 000335   200032 000044                    BDSC    DEL+2,,AUTO              by=0,bit=0,n=36
         2 000336   200032 236100                    LDQ     DEL+2,,AUTO
         2 000337   000001 116007                    CMPQ    1,DL
         2 000340   000345 601000 2                  TNZ     s:8632

      209     8629    1         THEN
      210     8630    1             B$JIT.PRFLAGS.WHEN = '1'B ;

   8630  2 000341   000000 473400 xsym               LDP3    B$JIT$
         2 000342   000010 236003                    LDQ     8,DU
         2 000343   300030 256100                    ORSQ    24,,PR3
         2 000344   000350 710000 2                  TRA     s:8633

      211     8631    1         ELSE
      212     8632    1             B$JIT.PRFLAGS.WHEN = '0'B ;

   8632  2 000345   000000 473400 xsym               LDP3    B$JIT$
         2 000346   000006 236000 3                  LDQ     6
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:40   
         2 000347   300030 356100                    ANSQ    24,,PR3

      213     8633    1     SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.STATE_LEV = I ;

   8633  2 000350   000175 471500                    LDP1    125,,PR0
         2 000351   200024 236100                    LDQ     I,,AUTO
         2 000352   000022 736000                    QLS     18
         2 000353   100000 552120                    STBQ    0,'20'O,PR1

      214     8634    1     IF I ~= SAVE_I

   8634  2 000354   200024 236100                    LDQ     I,,AUTO
         2 000355   200025 116100                    CMPQ    SAVE_I,,AUTO
         2 000356   000361 600000 2                  TZE     s:8637

      215     8635    1       THEN
      216     8636    1         CHANGED_FLG = '1'B ;

   8636  2 000357   400000 236003                    LDQ     -131072,DU
         2 000360   200027 756100                    STQ     CHANGED_FLG,,AUTO

      217     8637    1     IF ADDR(RECORD_CHANGED) ~= ADDR(NIL) AND CHANGED_FLG

   8637  2 000361   200003 236100                    LDQ     @RECORD_CHANGED,,AUTO
         2 000362   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000363   000372 600000 2                  TZE     s:8641
         2 000364   200027 234100                    SZN     CHANGED_FLG,,AUTO
         2 000365   000372 605000 2                  TPL     s:8641

      218     8638    1       THEN
      219     8639    1         RECORD_CHANGED = '1'B ;

   8639  2 000366   200003 471500                    LDP1    @RECORD_CHANGED,,AUTO
         2 000367   003100 060400                    CSL     bolr='003'O
         2 000370   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         2 000371   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1

PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:41   
      220     8640
      221     8641    1     RETURN ;

   8641  2 000372   000000 702200 xent               TSX2  ! X66_ARET

      222     8642
      223     8643    1   GET_WHEN_ERR:
      224     8644    1     ALTRETURN ;

   8644  2 000373   000000 702200 xent  GET_WHEN_ERR TSX2  ! X66_AALT
      225     8645
      226     8646    1   END   CPG$GET_WHEN_CNTL_REC ;
      227     8647        %EOD ;

PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:42   
--  Include file information  --

   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPG$GET_WHEN_CNTL_REC.
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:43   

 **** Variables and constants ****

  ****  Section 001 RoData CPG$GET_WHEN_CNTL_REC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(54)    r     1 CK_WHEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @RECORD_CHANGED            4-0-0/w PTR         r     1 @STAR_S_OPENED
    27-0-0/b BIT         r     1 CHANGED_FLG               30-0-0/b BIT         r     1 DEL
    20-0-0/d STRC(54)    r     1 FIRST_WHEN_KEY             6-0-0/d STRC(360)   r     1 FPT_DELREC
    24-0-0/w UBIN        r     1 I                         22-0-0/d STRC(54)    r     1 LAST_WHEN_KEY
    26-0-0/b BIT         r     1 NOT_DONE                  *0-0-0/b BIT         r     1 RECORD_CHANGED
    25-0-0/w UBIN        r     1 SAVE_I                    *0-0-0/b BIT         r     1 STAR_S_OPENED

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/d STRC(360)   r     1 CFPT_DELREC
     0-0-0/c STRC(90)    r     1 K_WHEN_CNTL                0-0-0/w UBIN        r     1 M$IBEX1_NUM
     0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(6264)  r     1 SEG$2
     0-0-0/d STRC(333)   r     1 WHEN$CNTL_REC
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:44   


   Procedure CPG$GET_WHEN_CNTL_REC requires 252 words for executable code.
   Procedure CPG$GET_WHEN_CNTL_REC requires 34 words of local(AUTO) storage.
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:45   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:46   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      5876**DCL      5876--REDEF
B$JIT.CSLEV
      5937**DCL      8562>>IF       8564>>IF       8567>>DOINDEX  8583>>ASSIGN   8598>>ASSIGN   8599>>ASSIGN
      8604>>DOINDEX  8608>>ASSIGN   8609>>ASSIGN
B$JIT.ERR.MID
      5783**DCL      5783--REDEF
B$JIT.JRESPEAK
      5944**DCL      5945--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      6053**DCL      6053--REDEF    6054--REDEF
B$JIT.PNR
      5957**DCL      5957--REDEF
B$JIT.PRFLAGS.WHEN
      5867**DCL      8630<<ASSIGN   8632<<ASSIGN
B$JIT.TSLINE
      6051**DCL      6052--REDEF
B$JIT$
      5701**DCL      5777--IMP-PTR  8562>>IF       8564>>IF       8567>>DOINDEX  8583>>ASSIGN   8598>>ASSIGN
      8599>>ASSIGN   8604>>DOINDEX  8608>>ASSIGN   8609>>ASSIGN   8630>>ASSIGN   8632>>ASSIGN
CAMR_REC.ACSVEH_
      4740**DCL      4741--REDEF
CAMR_REC.ALTKEYS_
      4746**DCL      4747--REDEF    4747--REDEF
CAMR_REC.HDR_
      4745**DCL      4746--REDEF
CAMR_REC.TAB_
      4744**DCL      4745--REDEF
CAMR_REC.UHL_
      4738**DCL      4739--REDEF    4739--REDEF
CAMR_REC.V.FSN#
      4778**DCL      4778--REDEF    4778--REDEF
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:47   
CAMR_REC.WSN_
      4744**DCL      4744--REDEF
CFPT_CLOSE.SN_
      3582**DCL      3582--REDEF
CFPT_CLOSE.UTL_
      3583**DCL      3583--REDEF
CFPT_CLOSE.V.EXPIRE#
      3597**DCL      3597--REDEF
CFPT_CLOSE.V.TYPE#
      3595**DCL      3595--REDEF
CFPT_CLOSE.V.XTNSIZE#
      3592**DCL      3592--REDEF    3594--REDEF
CFPT_DELREC
      3790**DCL      8577>>ASSIGN
CFPT_OPEN.ACSVEH_
      3517**DCL      3518--REDEF
CFPT_OPEN.ALTKEYS_
      3523**DCL      3524--REDEF    3524--REDEF
CFPT_OPEN.HDR_
      3522**DCL      3523--REDEF
CFPT_OPEN.TAB_
      3521**DCL      3522--REDEF
CFPT_OPEN.UHL_
      3515**DCL      3516--REDEF    3516--REDEF
CFPT_OPEN.V.FSN#
      3555**DCL      3555--REDEF    3555--REDEF
CFPT_OPEN.WSN_
      3521**DCL      3521--REDEF
CFPT_READ.STATION_
      3621**DCL      3622--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      3633**DCL      3633--REDEF
CFPT_READ.V.INDX#
      3631**DCL      3631--REDEF
CFPT_READUC.STATION_
      3991**DCL      3992--REDEF
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:48   
CFPT_READUC.V.DVBYTE.REREAD#
      4003**DCL      4003--REDEF
CFPT_READUC.V.INDX#
      4001**DCL      4001--REDEF
CFPT_TRTN.V.IR#
      4227**DCL      4228--REDEF
CFPT_WRITE.STATION_
      3659**DCL      3659--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      3666**DCL      3666--REDEF
CFPT_WRITEUC.STATION_
      3959**DCL      3959--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      3966**DCL      3966--REDEF
CFPT_XXX.V.STEPCC#
      4939**DCL      4939--REDEF
CGETCMD.OUT$
      4960**DCL      4966--REDEF
CHANGED_FLG
      8545**DCL      8560<<ASSIGN   8600<<ASSIGN   8610<<ASSIGN   8636<<ASSIGN   8637>>IF
CK_WHEN
      8537**DCL      8582>>ASSIGN   8584>>ASSIGN
CPC$OPEN_S
      8382**DCL-ENT  8554--CALL     8592--CALL
CPJ$READ_S
      8383**DCL-ENT  8555--CALL
CVLP_TRMCTL.BREAKCOUNT
      4551**DCL      4552--REDEF
CVLP_WINDOW.FWINDOW#
      4647**DCL      4647--REDEF    4648--REDEF
DEL
      8546**DCL      8561<<ASSIGN   8573<<ASSIGN   8586>>IF
FIRST_WHEN_KEY
      8501**DCL      8579--ASSIGN   8582<<ASSIGN
FIRST_WHEN_KEY.NUM
      8504**DCL      8583<<ASSIGN
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:49   
FPT_DELREC
      8397**DCL      8577<<ASSIGN   8595<>CALL
FPT_DELREC.KEY_
      8397**DCL      8579<<ASSIGN
FPT_DELREC.LKEY_
      8399**DCL      8580<<ASSIGN
FPT_DELREC.V
      8400**DCL      8578--ASSIGN
FPT_DELREC.V.DCB#
      8401**DCL      8581<<ASSIGN
FPT_DELREC.V_
      8397**DCL      8578<<ASSIGN
GET_WHEN_ERR
      8644**LABEL    8554--CALLALT  8555--CALLALT  8592--CALLALT
I
      8542**DCL      8567<<DOINDEX  8569>>ASSIGN   8570>>IF       8574>>ASSIGN   8604<<DOINDEX  8606>>ASSIGN
      8614<<ASSIGN   8615>>ASSIGN   8617>>IF       8619>>IF       8623<<ASSIGN   8623>>ASSIGN   8628>>IF
      8633>>ASSIGN   8634>>IF
K_WHEN_CNTL
      5744**DCL      8555--CALL
LAST_WHEN_KEY
      8519**DCL      8580--ASSIGN   8584<<ASSIGN
LAST_WHEN_KEY.NUM
      8522**DCL      8585<<ASSIGN
M$DELREC
        29**DCL-ENT  8595--CALL
M$IBEX1_NUM
      5707**DCL      8554<>CALL     8555<>CALL     8581>>ASSIGN   8592<>CALL
NOT_DONE
      8544**DCL      8613<<ASSIGN   8616>>DOWHILE  8621<<ASSIGN   8625<<ASSIGN
RECORD_CHANGED
      8379**DCL        16--PROC     8637--IF       8639<<ASSIGN
SAVE_I
      8543**DCL      8615<<ASSIGN   8634>>IF
SEG$2.FLAGS.GOT_WHEN_CNTL_REC
      8425**DCL      8550>>ASSIGN   8558<<ASSIGN
PL6.E3A0      #002=CPG$GET_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:43 Page:50   
SEG$2.WHEN_CNTL_REC$
      8455**DCL      8555>>CALL     8562>>IF       8564>>IF       8567>>DOINDEX  8569>>ASSIGN   8570>>IF
      8574>>ASSIGN   8585>>ASSIGN   8598>>ASSIGN   8599>>ASSIGN   8604>>DOINDEX  8606>>ASSIGN   8608>>ASSIGN
      8609>>ASSIGN   8614>>ASSIGN   8617>>IF       8628>>IF       8633>>ASSIGN
SEG2$
      5694**DCL      8407--IMP-PTR  8550>>ASSIGN   8555>>CALL     8558>>ASSIGN   8562>>IF       8564>>IF
      8567>>DOINDEX  8569>>ASSIGN   8570>>IF       8574>>ASSIGN   8585>>ASSIGN   8598>>ASSIGN   8599>>ASSIGN
      8604>>DOINDEX  8606>>ASSIGN   8608>>ASSIGN   8609>>ASSIGN   8614>>ASSIGN   8617>>IF       8628>>IF
      8633>>ASSIGN
STAR_S_OPENED
      8380**DCL        16--PROC     8550<<ASSIGN   8551>>IF       8589>>IF       8593<<ASSIGN
WHEN$CNTL_REC
      8480**DCL      8555--CALL
WHEN$CNTL_REC.CUR_LEV
      8481**DCL      8562>>IF       8564>>IF       8567>>DOINDEX  8585>>ASSIGN   8598<<ASSIGN   8604>>DOINDEX
      8608<<ASSIGN
WHEN$CNTL_REC.STATE_LEV
      8482**DCL      8599<<ASSIGN   8609<<ASSIGN   8614>>ASSIGN   8633<<ASSIGN
WHEN$CNTL_REC.WHEN.OPT
      8485**DCL      8569<<ASSIGN   8606<<ASSIGN   8617>>IF       8628>>IF
WHEN$CNTL_REC.WHEN.REC
      8486**DCL      8570>>IF       8574<<ASSIGN

PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:51   
      228        1        /*T***********************************************************/
      229        2        /*T*                                                         */
      230        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      231        4        /*T*                                                         */
      232        5        /*T***********************************************************/
      233        6        /*P*
      234        7             NAME: CPG$PUT_WHEN_CNTL_REC
      235        8             PURPOSE:
      236        9                  To WRITE out the WHEN command's control record.
      237       10             DESCRIPTION:
      238       11                  WRITE the WHEN command control record from the SEG$2 to *S.
      239       12             REFERENCE:
      240       13                  PROGRAMMER REF MANUAL
      241       14        */
      242       15        CPG$PUT_WHEN_CNTL_REC: PROC (STAR_S_OPENED) ALTRET ;
      243       16        /***** Include files *****/
      244       17          %INCLUDE CP_6;
      245       98          %INCLUDE XU_MACRO_C ;
      246     3204          %INCLUDE CP_DATA_R ;
      247     5767          %INCLUDE B$JIT;
      248     6057          %INCLUDE B_MACROS_C;
      249     6168          %INCLUDE CP_6_SUBS;
      250     6708          %INCLUDE CP_MACROS_C;
      251     7460          %INCLUDE CP_SUBS_C;
      252     8377        /***** Parameter *****/
      253     8378    1   DCL STAR_S_OPENED BIT(1) PARAM ;  /*  Flag to indicate if *S is already open */
      254     8379        /***** Entries *****/
      255     8380    1   DCL CPJ$WRITE_S ENTRY(3) ALTRET ;
      256     8381    1   DCL CPC$OPEN_S ENTRY(1) ALTRET ;
      257     8382        /***** Macro defs *****/
      258     8383        %SEG$2(NAME=SEG$2);
      259     8443        /***** Local FPTs ****/
      260     8444        /***** Local data *****/
      261     8445    1   DCL BUF_VEC VECTOR ;
      262     8446        %WHEN_CNTL_REC (NAME=WHEN$CNTL_REC, STCLASS=BASED) ;
      263     8467
      264     8468        /***** Procedure *****/
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:52   
      265     8469    1     BUF_VEC = VECTOR(SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC) ;
      266     8470    1     VBOUND(BUF_VEC) = 4 + (SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV/3) ;
      267     8471    1     IF NOT STAR_S_OPENED
      268     8472    1       THEN
      269     8473    2         DO;   /* Open It. */
      270     8474    2             CALL CPC$OPEN_S(M$IBEX1_NUM) ALTRET(PUT_WHEN_CNTL_REC_ERR);
      271     8475    2             STAR_S_OPENED = '1'B;
      272     8476    2         END;  /* Then Do */
      273     8477    1     CALL CPJ$WRITE_S(M$IBEX1_NUM, VECTOR(K_WHEN_CNTL), BUF_VEC)
      274     8478    1         ALTRET(PUT_WHEN_CNTL_REC_ERR) ;
      275     8479
      276     8480    1     RETURN ;
      277     8481
      278     8482    1   PUT_WHEN_CNTL_REC_ERR:
      279     8483    1     ALTRETURN ;
      280     8484
      281     8485    1   END   CPG$PUT_WHEN_CNTL_REC ;
      282     8486        %EOD;

PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:53   
--  Include file information  --

   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPG$PUT_WHEN_CNTL_REC.

   Procedure CPG$PUT_WHEN_CNTL_REC requires 39 words for executable code.
   Procedure CPG$PUT_WHEN_CNTL_REC requires 10 words of local(AUTO) storage.

PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:54   

 Object Unit name= CPG$PUT_WHEN_CNTL_REC                      File name= CPG$SUBR.:E05TOU
 UTS= JUL 29 '97 11:44:27.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    39     47  CPG$PUT_WHEN_CNTL_REC
    2  RoData even  none     6      6  CPG$PUT_WHEN_CNTL_REC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  CPG$PUT_WHEN_CNTL_REC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 CPC$OPEN_S
 yes     yes           Std       3 CPJ$WRITE_S
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:55   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    SEG2$                            r    B$JIT$
     M$IBEX1_NUM                           K_WHEN_CNTL                           B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:56   


      228        1        /*T***********************************************************/
      229        2        /*T*                                                         */
      230        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      231        4        /*T*                                                         */
      232        5        /*T***********************************************************/
      233        6        /*P*
      234        7             NAME: CPG$PUT_WHEN_CNTL_REC
      235        8             PURPOSE:
      236        9                  To WRITE out the WHEN command's control record.
      237       10             DESCRIPTION:
      238       11                  WRITE the WHEN command control record from the SEG$2 to *S.
      239       12             REFERENCE:
      240       13                  PROGRAMMER REF MANUAL
      241       14        */
      242       15        CPG$PUT_WHEN_CNTL_REC: PROC (STAR_S_OPENED) ALTRET ;

     15  1 000000   000000 700200 xent  CPG$PUT_WHE* TSX0  ! X66_AUTO_1
         1 000001   000012 000001                    ZERO    10,1

      243       16        /***** Include files *****/
      244       17          %INCLUDE CP_6;
      245       98          %INCLUDE XU_MACRO_C ;
      246     3204          %INCLUDE CP_DATA_R ;
      247     5767          %INCLUDE B$JIT;
      248     6057          %INCLUDE B_MACROS_C;
      249     6168          %INCLUDE CP_6_SUBS;
      250     6708          %INCLUDE CP_MACROS_C;
      251     7460          %INCLUDE CP_SUBS_C;
      252     8377        /***** Parameter *****/
      253     8378    1   DCL STAR_S_OPENED BIT(1) PARAM ;  /*  Flag to indicate if *S is already open */
      254     8379        /***** Entries *****/
      255     8380    1   DCL CPJ$WRITE_S ENTRY(3) ALTRET ;
      256     8381    1   DCL CPC$OPEN_S ENTRY(1) ALTRET ;
      257     8382        /***** Macro defs *****/
      258     8383        %SEG$2(NAME=SEG$2);
      259     8443        /***** Local FPTs ****/
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:57   
      260     8444        /***** Local data *****/
      261     8445    1   DCL BUF_VEC VECTOR ;
      262     8446        %WHEN_CNTL_REC (NAME=WHEN$CNTL_REC, STCLASS=BASED) ;
      263     8467
      264     8468        /***** Procedure *****/
      265     8469    1     BUF_VEC = VECTOR(SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC) ;

   8469  1 000002   000000 470400 xsym               LDP0    SEG2$
         1 000003   000175 471500                    LDP1    125,,PR0
         1 000004   000000 235000 2                  LDA     0
         1 000005   200006 451500                    STP1    BUF_VEC+2,,AUTO
         1 000006   200006 236100                    LDQ     BUF_VEC+2,,AUTO
         1 000007   200004 757100                    STAQ    BUF_VEC,,AUTO

      266     8470    1     VBOUND(BUF_VEC) = 4 + (SEG$2.WHEN_CNTL_REC$->WHEN$CNTL_REC.CUR_LEV/3) ;

   8470  1 000010   100000 236100                    LDQ     0,,PR1
         1 000011   000033 772000                    QRL     27
         1 000012   000003 506007                    DIV     3,DL
         1 000013   000004 036007                    ADLQ    4,DL
         1 000014   000020 736000                    QLS     16
         1 000015   200004 676100                    ERQ     BUF_VEC,,AUTO
         1 000016   000034 376000 xsym               ANQ     B_VECTNIL+28
         1 000017   200004 656100                    ERSQ    BUF_VEC,,AUTO

      267     8471    1     IF NOT STAR_S_OPENED

   8471  1 000020   200003 473500                    LDP3    @STAR_S_OPENED,,AUTO
         1 000021   000000 066500                    CMPB    filb='0'B
         1 000022   300000 000001                    BDSC    0,,PR3                   by=0,bit=0,n=1
         1 000023   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         1 000024   000035 601000 1                  TNZ     s:8477

      268     8472    1       THEN
      269     8473    2         DO;   /* Open It. */

      270     8474    2             CALL CPC$OPEN_S(M$IBEX1_NUM) ALTRET(PUT_WHEN_CNTL_REC_ERR);
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:58   

   8474  1 000025   000001 630400 2                  EPPR0   1
         1 000026   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000027   000000 701000 xent               TSX1    CPC$OPEN_S
         1 000030   000046 702000 1                  TSX2    PUT_WHEN_CNTL_REC_ERR

      271     8475    2             STAR_S_OPENED = '1'B;

   8475  1 000031   200003 470500                    LDP0    @STAR_S_OPENED,,AUTO
         1 000032   003100 060400                    CSL     bolr='003'O
         1 000033   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         1 000034   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1

      272     8476    2         END;  /* Then Do */

      273     8477    1     CALL CPJ$WRITE_S(M$IBEX1_NUM, VECTOR(K_WHEN_CNTL), BUF_VEC)

   8477  1 000035   200004 630500                    EPPR0   BUF_VEC,,AUTO
         1 000036   200010 450500                    STP0    BUF_VEC+4,,AUTO
         1 000037   000004 237000 2                  LDAQ    4
         1 000040   200006 757100                    STAQ    BUF_VEC+2,,AUTO
         1 000041   200006 630500                    EPPR0   BUF_VEC+2,,AUTO
         1 000042   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000043   000000 701000 xent               TSX1    CPJ$WRITE_S
         1 000044   000046 702000 1                  TSX2    PUT_WHEN_CNTL_REC_ERR

      274     8478    1         ALTRET(PUT_WHEN_CNTL_REC_ERR) ;
      275     8479
      276     8480    1     RETURN ;

   8480  1 000045   000000 702200 xent               TSX2  ! X66_ARET

      277     8481
      278     8482    1   PUT_WHEN_CNTL_REC_ERR:
      279     8483    1     ALTRETURN ;

   8483  1 000046   000000 702200 xent  PUT_WHEN_CN* TSX2  ! X66_AALT
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:59   
      280     8484
      281     8485    1   END   CPG$PUT_WHEN_CNTL_REC ;
      282     8486        %EOD;

PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:60   
--  Include file information  --

   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPG$PUT_WHEN_CNTL_REC.
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:61   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @STAR_S_OPENED             4-0-0/d VECT        r     1 BUF_VEC
    *0-0-0/b BIT         r     1 STAR_S_OPENED

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/c STRC(90)    r     1 K_WHEN_CNTL
     0-0-0/w UBIN        r     1 M$IBEX1_NUM                0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(6264)  r     1 SEG$2                      0-0-0/d STRC(333)   r     1 WHEN$CNTL_REC


   Procedure CPG$PUT_WHEN_CNTL_REC requires 39 words for executable code.
   Procedure CPG$PUT_WHEN_CNTL_REC requires 10 words of local(AUTO) storage.
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:62   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:63   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
      5875**DCL      5875--REDEF
B$JIT.ERR.MID
      5782**DCL      5782--REDEF
B$JIT.JRESPEAK
      5943**DCL      5944--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      6052**DCL      6052--REDEF    6053--REDEF
B$JIT.PNR
      5956**DCL      5956--REDEF
B$JIT.TSLINE
      6050**DCL      6051--REDEF
B$JIT$
      5700**DCL      5776--IMP-PTR
BUF_VEC
      8445**DCL      8469<<ASSIGN   8470<<ASSIGN   8477<>CALL
CAMR_REC.ACSVEH_
      4739**DCL      4740--REDEF
CAMR_REC.ALTKEYS_
      4745**DCL      4746--REDEF    4746--REDEF
CAMR_REC.HDR_
      4744**DCL      4745--REDEF
CAMR_REC.TAB_
      4743**DCL      4744--REDEF
CAMR_REC.UHL_
      4737**DCL      4738--REDEF    4738--REDEF
CAMR_REC.V.FSN#
      4777**DCL      4777--REDEF    4777--REDEF
CAMR_REC.WSN_
      4743**DCL      4743--REDEF
CFPT_CLOSE.SN_
      3581**DCL      3581--REDEF
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:64   
CFPT_CLOSE.UTL_
      3582**DCL      3582--REDEF
CFPT_CLOSE.V.EXPIRE#
      3596**DCL      3596--REDEF
CFPT_CLOSE.V.TYPE#
      3594**DCL      3594--REDEF
CFPT_CLOSE.V.XTNSIZE#
      3591**DCL      3591--REDEF    3593--REDEF
CFPT_OPEN.ACSVEH_
      3516**DCL      3517--REDEF
CFPT_OPEN.ALTKEYS_
      3522**DCL      3523--REDEF    3523--REDEF
CFPT_OPEN.HDR_
      3521**DCL      3522--REDEF
CFPT_OPEN.TAB_
      3520**DCL      3521--REDEF
CFPT_OPEN.UHL_
      3514**DCL      3515--REDEF    3515--REDEF
CFPT_OPEN.V.FSN#
      3554**DCL      3554--REDEF    3554--REDEF
CFPT_OPEN.WSN_
      3520**DCL      3520--REDEF
CFPT_READ.STATION_
      3620**DCL      3621--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      3632**DCL      3632--REDEF
CFPT_READ.V.INDX#
      3630**DCL      3630--REDEF
CFPT_READUC.STATION_
      3990**DCL      3991--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      4002**DCL      4002--REDEF
CFPT_READUC.V.INDX#
      4000**DCL      4000--REDEF
CFPT_TRTN.V.IR#
      4226**DCL      4227--REDEF
PL6.E3A0      #003=CPG$PUT_WHEN_CNTL_REC File=CPG$SUBR.:E05TSI                   TUE 07/29/97 11:44 Page:65   
CFPT_WRITE.STATION_
      3658**DCL      3658--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      3665**DCL      3665--REDEF
CFPT_WRITEUC.STATION_
      3958**DCL      3958--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      3965**DCL      3965--REDEF
CFPT_XXX.V.STEPCC#
      4938**DCL      4938--REDEF
CGETCMD.OUT$
      4959**DCL      4965--REDEF
CPC$OPEN_S
      8381**DCL-ENT  8474--CALL
CPJ$WRITE_S
      8380**DCL-ENT  8477--CALL
CVLP_TRMCTL.BREAKCOUNT
      4550**DCL      4551--REDEF
CVLP_WINDOW.FWINDOW#
      4646**DCL      4646--REDEF    4647--REDEF
K_WHEN_CNTL
      5743**DCL      8477--CALL
M$IBEX1_NUM
      5706**DCL      8474<>CALL     8477<>CALL
PUT_WHEN_CNTL_REC_ERR
      8483**LABEL    8474--CALLALT  8477--CALLALT
SEG$2.WHEN_CNTL_REC$
      8432**DCL      8469>>ASSIGN   8470>>ASSIGN
SEG2$
      5693**DCL      8384--IMP-PTR  8469>>ASSIGN   8470>>ASSIGN
STAR_S_OPENED
      8378**DCL        15--PROC     8471>>IF       8475<<ASSIGN
WHEN$CNTL_REC
      8459**DCL      8469--ASSIGN
WHEN$CNTL_REC.CUR_LEV
      8460**DCL      8470>>ASSIGN

PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:66   
      283        1        /*T***********************************************************/
      284        2        /*T*                                                         */
      285        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      286        4        /*T*                                                         */
      287        5        /*T***********************************************************/
      288        6        /*P*
      289        7             NAME: CPG$SET_WHEN_STATE
      290        8             PURPOSE:
      291        9                  To SET the WHEN state to the correct level.
      292       10             DESCRIPTION:
      293       11                  Call CPG$GET_WHEN_CNTL_REC to read and update the WHEN control
      294       12                  record.  Call CPG$PUT_WHEN_CNTL_REC to write the updated record to *S.
      295       13             REFERENCE:
      296       14                  PROGRAMMER REF MANUAL
      297       15        */
      298       16        CPG$SET_WHEN_STATE: PROC ALTRET ;
      299       17        /***** Include files *****/
      300       18          %INCLUDE CP_6;
      301       99          %INCLUDE XU_MACRO_C;
      302     3205          %INCLUDE CP_DATA_R ;
      303     5768          %INCLUDE CP_6_SUBS;
      304     6308        /***** Local FPTs ****/
      305     6309        %FPT_CLOSE (FPTN=FPT_CLOSE,STCLASS=AUTO) ;
      306     6351        /***** Auto data *****/
      307     6352    1   DCL CHANGED BIT(1) ;
      308     6353    1   DCL STAR_S_IS_OPEN BIT(1) ;
      309     6354        /***** Entries *****/
      310     6355    1   DCL CPG$GET_WHEN_CNTL_REC ENTRY(2) ALTRET ;
      311     6356    1   DCL CPG$PUT_WHEN_CNTL_REC ENTRY(1) ALTRET ;
      312     6357
      313     6358    1     FPT_CLOSE = CFPT_CLOSE;
      314     6359    1     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);
      315     6360    1     FPT_CLOSE.V.DCB# = M$IBEX1_NUM;
      316     6361    1     FPT_CLOSE.V.DISP# = %SAVE#;
      317     6362
      318     6363    1     CALL CPG$GET_WHEN_CNTL_REC(CHANGED, STAR_S_IS_OPEN) ALTRET(STATE_ERR);
      319     6364    1     IF CHANGED
PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:67   
      320     6365    1       THEN
      321     6366    1         CALL CPG$PUT_WHEN_CNTL_REC(STAR_S_IS_OPEN) ALTRET(STATE_ERR);
      322     6367    1     IF STAR_S_IS_OPEN
      323     6368    1       THEN
      324     6369    2         CALL M$CLOSE(FPT_CLOSE) WHENALTRETURN DO;
      325     6370    2                                 END;
      326     6371    1     RETURN;
      327     6372
      328     6373    1   STATE_ERR:
      329     6374    1     IF STAR_S_IS_OPEN
      330     6375    1       THEN
      331     6376    2         CALL M$CLOSE(FPT_CLOSE) WHENALTRETURN DO;
      332     6377    2                                 END;
      333     6378    1     ALTRETURN;
      334     6379    1   END   CPG$SET_WHEN_STATE;

PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:68   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPG$SET_WHEN_STATE.

   Procedure CPG$SET_WHEN_STATE requires 46 words for executable code.
   Procedure CPG$SET_WHEN_STATE requires 38 words of local(AUTO) storage.

    No errors detected in file CPG$SUBR.:E05TSI    .

PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:69   

 Object Unit name= CPG$SET_WHEN_STATE                         File name= CPG$SUBR.:E05TOU
 UTS= JUL 29 '97 11:44:56.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    46     56  CPG$SET_WHEN_STATE
    2  RoData even  none     1      1  CPG$SET_WHEN_STATE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        0  CPG$SET_WHEN_STATE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 CPG$GET_WHEN_CNTL_REC
 yes     yes           Std       1 CPG$PUT_WHEN_CNTL_REC
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:70   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_CLOSE                            M$IBEX1_NUM
     B_VECTNIL
PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:71   


      283        1        /*T***********************************************************/
      284        2        /*T*                                                         */
      285        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      286        4        /*T*                                                         */
      287        5        /*T***********************************************************/
      288        6        /*P*
      289        7             NAME: CPG$SET_WHEN_STATE
      290        8             PURPOSE:
      291        9                  To SET the WHEN state to the correct level.
      292       10             DESCRIPTION:
      293       11                  Call CPG$GET_WHEN_CNTL_REC to read and update the WHEN control
      294       12                  record.  Call CPG$PUT_WHEN_CNTL_REC to write the updated record to *S.
      295       13             REFERENCE:
      296       14                  PROGRAMMER REF MANUAL
      297       15        */
      298       16        CPG$SET_WHEN_STATE: PROC ALTRET ;

     16  1 000000   000000 700200 xent  CPG$SET_WHE* TSX0  ! X66_AUTO_0
         1 000001   000046 000000                    ZERO    38,0

      299       17        /***** Include files *****/
      300       18          %INCLUDE CP_6;
      301       99          %INCLUDE XU_MACRO_C;
      302     3205          %INCLUDE CP_DATA_R ;
      303     5768          %INCLUDE CP_6_SUBS;
      304     6308        /***** Local FPTs ****/
      305     6309        %FPT_CLOSE (FPTN=FPT_CLOSE,STCLASS=AUTO) ;
      306     6351        /***** Auto data *****/
      307     6352    1   DCL CHANGED BIT(1) ;
      308     6353    1   DCL STAR_S_IS_OPEN BIT(1) ;
      309     6354        /***** Entries *****/
      310     6355    1   DCL CPG$GET_WHEN_CNTL_REC ENTRY(2) ALTRET ;
      311     6356    1   DCL CPG$PUT_WHEN_CNTL_REC ENTRY(1) ALTRET ;
      312     6357
      313     6358    1     FPT_CLOSE = CFPT_CLOSE;

PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:72   
   6358  1 000002   000100 100400                    MLR     fill='000'O
         1 000003   000000 000170 xsym               ADSC9   CFPT_CLOSE               cn=0,n=120
         1 000004   200004 000170                    ADSC9   FPT_CLOSE,,AUTO          cn=0,n=120

      314     6359    1     FPT_CLOSE.V_ = VECTOR(FPT_CLOSE.V);

   6359  1 000005   000000 235000 2                  LDA     0
         1 000006   200044 452500                    STP2    STAR_S_IS_OPEN+1,,AUTO
         1 000007   200044 236100                    LDQ     STAR_S_IS_OPEN+1,,AUTO
         1 000010   000036 036003                    ADLQ    30,DU
         1 000011   200004 757100                    STAQ    FPT_CLOSE,,AUTO

      315     6360    1     FPT_CLOSE.V.DCB# = M$IBEX1_NUM;

   6360  1 000012   000000 720000 xsym               LXL0    M$IBEX1_NUM
         1 000013   200036 740100                    STX0    FPT_CLOSE+26,,AUTO

      316     6361    1     FPT_CLOSE.V.DISP# = %SAVE#;

   6361  1 000014   000002 236007                    LDQ     2,DL
         1 000015   200036 552104                    STBQ    FPT_CLOSE+26,'04'O,AUTO

      317     6362
      318     6363    1     CALL CPG$GET_WHEN_CNTL_REC(CHANGED, STAR_S_IS_OPEN) ALTRET(STATE_ERR);

   6363  1 000016   200043 630500                    EPPR0   STAR_S_IS_OPEN,,AUTO
         1 000017   200045 450500                    STP0    STAR_S_IS_OPEN+2,,AUTO
         1 000020   200042 631500                    EPPR1   CHANGED,,AUTO
         1 000021   200044 451500                    STP1    STAR_S_IS_OPEN+1,,AUTO
         1 000022   200044 630500                    EPPR0   STAR_S_IS_OPEN+1,,AUTO
         1 000023   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000024   000000 701000 xent               TSX1    CPG$GET_WHEN_CNTL_REC
         1 000025   000046 702000 1                  TSX2    STATE_ERR

      319     6364    1     IF CHANGED

   6364  1 000026   200042 234100                    SZN     CHANGED,,AUTO
PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:73   
         1 000027   000036 605000 1                  TPL     s:6367

      320     6365    1       THEN
      321     6366    1         CALL CPG$PUT_WHEN_CNTL_REC(STAR_S_IS_OPEN) ALTRET(STATE_ERR);

   6366  1 000030   200043 630500                    EPPR0   STAR_S_IS_OPEN,,AUTO
         1 000031   200044 450500                    STP0    STAR_S_IS_OPEN+1,,AUTO
         1 000032   200044 630500                    EPPR0   STAR_S_IS_OPEN+1,,AUTO
         1 000033   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000034   000000 701000 xent               TSX1    CPG$PUT_WHEN_CNTL_REC
         1 000035   000046 702000 1                  TSX2    STATE_ERR

      322     6367    1     IF STAR_S_IS_OPEN

   6367  1 000036   200043 234100                    SZN     STAR_S_IS_OPEN,,AUTO
         1 000037   000045 605000 1                  TPL     s:6371

      323     6368    1       THEN
      324     6369    2         CALL M$CLOSE(FPT_CLOSE) WHENALTRETURN DO;

   6369  1 000040   200004 630500                    EPPR0   FPT_CLOSE,,AUTO
         1 000041   450001 713400                    CLIMB   alt,close
         1 000042   406000 401760                    pmme    nvectors=13
         1 000043   000045 702000 1                  TSX2    s:6371
         1 000044   000045 710000 1                  TRA     s:6371

      325     6370    2                                 END;

      326     6371    1     RETURN;

   6371  1 000045   000000 702200 xent               TSX2  ! X66_ARET

      327     6372
      328     6373    1   STATE_ERR:
      329     6374    1     IF STAR_S_IS_OPEN

   6374  1 000046   200043 234100       STATE_ERR    SZN     STAR_S_IS_OPEN,,AUTO
PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:74   
         1 000047   000055 605000 1                  TPL     s:6378

      330     6375    1       THEN
      331     6376    2         CALL M$CLOSE(FPT_CLOSE) WHENALTRETURN DO;

   6376  1 000050   200004 630500                    EPPR0   FPT_CLOSE,,AUTO
         1 000051   450001 713400                    CLIMB   alt,close
         1 000052   406000 401760                    pmme    nvectors=13
         1 000053   000055 702000 1                  TSX2    s:6378
         1 000054   000055 710000 1                  TRA     s:6378

      332     6377    2                                 END;

      333     6378    1     ALTRETURN;

   6378  1 000055   000000 702200 xent               TSX2  ! X66_AALT
      334     6379    1   END   CPG$SET_WHEN_STATE;

PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:75   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPG$SET_WHEN_STATE.
PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:76   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    42-0-0/b BIT         r     1 CHANGED                    4-0-0/d STRC(1080)  r     1 FPT_CLOSE
    43-0-0/b BIT         r     1 STAR_S_IS_OPEN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1080)  r     1 CFPT_CLOSE                 0-0-0/w UBIN        r     1 M$IBEX1_NUM


   Procedure CPG$SET_WHEN_STATE requires 46 words for executable code.
   Procedure CPG$SET_WHEN_STATE requires 38 words of local(AUTO) storage.

    No errors detected in file CPG$SUBR.:E05TSI    .
PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:77   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:78   
          MINI XREF LISTING

CAMR_REC.ACSVEH_
      4740**DCL      4741--REDEF
CAMR_REC.ALTKEYS_
      4746**DCL      4747--REDEF    4747--REDEF
CAMR_REC.HDR_
      4745**DCL      4746--REDEF
CAMR_REC.TAB_
      4744**DCL      4745--REDEF
CAMR_REC.UHL_
      4738**DCL      4739--REDEF    4739--REDEF
CAMR_REC.V.FSN#
      4778**DCL      4778--REDEF    4778--REDEF
CAMR_REC.WSN_
      4744**DCL      4744--REDEF
CFPT_CLOSE
      3582**DCL      6358>>ASSIGN
CFPT_CLOSE.SN_
      3582**DCL      3582--REDEF
CFPT_CLOSE.UTL_
      3583**DCL      3583--REDEF
CFPT_CLOSE.V.EXPIRE#
      3597**DCL      3597--REDEF
CFPT_CLOSE.V.TYPE#
      3595**DCL      3595--REDEF
CFPT_CLOSE.V.XTNSIZE#
      3592**DCL      3592--REDEF    3594--REDEF
CFPT_OPEN.ACSVEH_
      3517**DCL      3518--REDEF
CFPT_OPEN.ALTKEYS_
      3523**DCL      3524--REDEF    3524--REDEF
CFPT_OPEN.HDR_
      3522**DCL      3523--REDEF
PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:79   
CFPT_OPEN.TAB_
      3521**DCL      3522--REDEF
CFPT_OPEN.UHL_
      3515**DCL      3516--REDEF    3516--REDEF
CFPT_OPEN.V.FSN#
      3555**DCL      3555--REDEF    3555--REDEF
CFPT_OPEN.WSN_
      3521**DCL      3521--REDEF
CFPT_READ.STATION_
      3621**DCL      3622--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      3633**DCL      3633--REDEF
CFPT_READ.V.INDX#
      3631**DCL      3631--REDEF
CFPT_READUC.STATION_
      3991**DCL      3992--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      4003**DCL      4003--REDEF
CFPT_READUC.V.INDX#
      4001**DCL      4001--REDEF
CFPT_TRTN.V.IR#
      4227**DCL      4228--REDEF
CFPT_WRITE.STATION_
      3659**DCL      3659--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      3666**DCL      3666--REDEF
CFPT_WRITEUC.STATION_
      3959**DCL      3959--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      3966**DCL      3966--REDEF
CFPT_XXX.V.STEPCC#
      4939**DCL      4939--REDEF
CGETCMD.OUT$
      4960**DCL      4966--REDEF
CHANGED
      6352**DCL      6363<>CALL     6364>>IF
PL6.E3A0      #004=CPG$SET_WHEN_STATE File=CPG$SUBR.:E05TSI                      TUE 07/29/97 11:44 Page:80   
CPG$GET_WHEN_CNTL_REC
      6355**DCL-ENT  6363--CALL
CPG$PUT_WHEN_CNTL_REC
      6356**DCL-ENT  6366--CALL
CVLP_TRMCTL.BREAKCOUNT
      4551**DCL      4552--REDEF
CVLP_WINDOW.FWINDOW#
      4647**DCL      4647--REDEF    4648--REDEF
FPT_CLOSE
      6332**DCL      6358<<ASSIGN   6369<>CALL     6376<>CALL
FPT_CLOSE.SN_
      6332**DCL      6332--REDEF
FPT_CLOSE.UTL_
      6333**DCL      6333--REDEF
FPT_CLOSE.V
      6337**DCL      6359--ASSIGN
FPT_CLOSE.V.DCB#
      6338**DCL      6360<<ASSIGN
FPT_CLOSE.V.DISP#
      6341**DCL      6361<<ASSIGN
FPT_CLOSE.V.EXPIRE#
      6347**DCL      6347--REDEF
FPT_CLOSE.V.TYPE#
      6345**DCL      6345--REDEF
FPT_CLOSE.V.XTNSIZE#
      6342**DCL      6342--REDEF    6344--REDEF
FPT_CLOSE.V_
      6332**DCL      6359<<ASSIGN
M$CLOSE
        27**DCL-ENT  6369--CALL     6376--CALL
M$IBEX1_NUM
      5707**DCL      6360>>ASSIGN
STAR_S_IS_OPEN
      6353**DCL      6363<>CALL     6366<>CALL     6367>>IF       6374>>IF
STATE_ERR
      6374**LABEL    6363--CALLALT  6366--CALLALT
