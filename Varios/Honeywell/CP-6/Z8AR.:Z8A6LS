VERSION A06

PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:1    
        1        1        /*M* Z8AR$RESERVER -- Compiler I.L. Table Space Manager. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9        /*P*
       10       10               NAME: Z8AR$RESERVER
       11       11             AUTHOR: MJ GLENN
       12       12            PURPOSE: MANAGES MEMORY AT THE COMPILER TABLE LEVEL.
       13       13        */
       14       14
       15       15        /*D*   NAME: Z8AR$RESERVER
       16       16               CALL: %RESERVE_table (ITEM = %id, POINTER = ptr) ;
       17       17          INTERFACE: Calls Z9AR to get a segment.
       18       18        DESCRIPTION: SYSTEM INDEPENDENT.
       19       19                     MOST TABLE RESERVING IS DONE IN-LINE.  WHEN IT IS
       20       20                     NECESSARY TO ALLOCATE A PAGE FOR A TABLE, THIS
       21       21                     ROUTINE IS THEN CALLED.  IF PAGES HAVE BEEN FREED
       22       22                     FROM PREVIOUS USE, OF COURSE WE WILL USE THOSE FIRST.
       23       23                     OTHERWISE, WE NEED TO ASK THE SYSTEM FOR MORE (THIS
       24       24                     IS A SYSTEM-DEPENDENT FUNCTION). ONCE A PAGE IS ACQUIRED,
       25       25                     WE FILL IT WITH BINARY ZEROS TO AVOID ANY PROBLEMS
       26       26                     WITH STRAY GARBAGE.  ALL POINTERS ASSOCIATED WITH
       27       27                     A GIVEN TABLE ARE EITHER SET, OR RESET, DEPENDING
       28       28                     ON WHETHER THIS IS THE FIRST PAGE ALLOCATED FOR THIS
       29       29                     PARTICULAR TABLE.
       30       30        */
       31       31
       32       32        %EJECT;
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:2    
       33       33        Z8AR$RESERVER:PROC(TABLE$) NOAUTO;
       34       34
       35       35    1        DCL TABLE$ PTR;
       36       36
       37       37        %SET PHASE = 0 ;
       38       38        %INCLUDE Z8A_DEFC;
       39      106        %INCLUDE Z8A_SUPP_MAC;
       40     2506        %INCLUDE Z8A_COMCOM ;
       41     3156
       42     3157    1        DCL PTR$          PTR ;
       43     3158    1        DCL FREE$         PTR ;
       44     3159    1        DCL NEXT$         PTR ;
       45     3160    1        DCL I             SBIN WORD ;
       46     3161    1        DCL Z9AR$GET_DYNAMIC_SEGMENT ENTRY(1) ALTRET;
       47     3162
       48     3163    1        DCL 1 CLEAR DALIGNED BASED,
       49     3164    1              2 PAGE(0:%(PAGE_SIZE - 1)) BIT(36) UNAL;
       50     3165
       51     3166
       52     3167    1        DCL 1 TABLE ALIGNED BASED(TABLE$),
       53     3168    1              2 TOP PTR,               /* FIRST ITEM IN TABLE */
       54     3169    1              2 FIRST PTR,             /* FIRST ITEM IN PAGE  */
       55     3170    1              2 BOTTOM UBIN WORD UNAL, /* NEXT AVAILABLE      */
       56     3171    1              2 FLOOR UBIN WORD UNAL,  /* LAST WORD IN PAGE   */
       57     3172    1              2 SIZE  UBIN WORD UNAL;  /* Size in #pages      */
       58     3173
       59     3174        %EJECT;
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:3    
       60     3175
       61     3176
       62     3177    2        IF COMCOM.FREE$ = ADDR(NIL) THEN DO ;
       63     3178    2          CALL Z9AR$GET_DYNAMIC_SEGMENT(/*->*/ PTR$)
       64     3179    2            WHENRETURN
       65     3180    3              DO;
       66     3181    3                COMCOM.IL_SPACE(0) = COMCOM.IL_SPACE(0) + %BLOCK_SIZE ;
       67     3182
       68     3183                     /* Use the first page and put the remaining in the free pool */
       69     3184
       70     3185    3                FREE$ = PINCRW (PTR$, %PAGE_SIZE) ;
       71     3186    3                COMCOM.FREE$ = FREE$ ;
       72     3187
       73     3188    4                DO I = 1 TO %(PAGES_PER_BLOCK - 2) ;
       74     3189    4                  NEXT$ = PINCRW (FREE$, %PAGE_SIZE) ;
       75     3190    4                  FREE$ -> PAGE.NEXT = NEXT$ ;
       76     3191    4                  FREE$ = NEXT$ ;
       77     3192    4                END ; /* Perform %Blocks_Per_Page - 2 Times */
       78     3193
       79     3194    3                FREE$ -> PAGE.NEXT = ADDR(NIL) ;
       80     3195    3                TABLE$ -> TABLE.SIZE = TABLE$ -> TABLE.SIZE + 1 ;
       81     3196    3              END;
       82     3197
       83     3198    2            WHENALTRETURN
       84     3199    3              DO;
       85     3200                     /* We were able to get only one page */
       86     3201    3                TABLE$ -> TABLE.SIZE = TABLE$ -> TABLE.SIZE + 1;
       87     3202    3              END;
       88     3203
       89     3204    2        END ;
       90     3205    2        ELSE DO ; /* Freed space is available */
       91     3206    2          TABLE$ -> TABLE.SIZE = TABLE$ -> TABLE.SIZE + 1 ;
       92     3207    2          PTR$ = COMCOM.FREE$ ;
       93     3208    2          COMCOM.FREE$ = COMCOM.FREE$ -> PAGE.NEXT ;
       94     3209    2        END;
       95     3210
       96     3211    1        PTR$ -> CLEAR.PAGE = '0'B;    /* Start with a clean slate */
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:4    
       97     3212
       98     3213    1        IF TABLE.TOP = ADDR(NIL) THEN   /* IF FIRST PAGE FOR TABLE */
       99     3214    1          TABLE.TOP = PTR$;
      100     3215    1        ELSE
      101     3216    2          DO;
      102     3217    2            TABLE.FIRST -> PAGE.NEXT = PTR$;
      103     3218    2            PINCRW(TABLE.FIRST,TABLE.BOTTOM) -> CONT.NEXT = PTR$;
      104     3219    2          END;
      105     3220
      106     3221    1        PTR$ -> PAGE.NEXT = ADDR(NIL);
      107     3222    1        TABLE.FIRST = PTR$;
      108     3223    1        TABLE.BOTTOM = 0;
      109     3224    1        TABLE.FLOOR = %(PAGE_SIZE - 1);
      110     3225
      111     3226    1        RETURN;
      112     3227
      113     3228        %EJECT;
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:5    
      114     3229        /*D*   NAME: Z8AR$FREER
      115     3230               CALL: CALL Z8AR$FREER (Pointer_to_table_info_block) ;
      116     3231          INTERFACE: None.
      117     3232        DESCRIPTION: Frees all the space reserved for a particular
      118     3233                     I.L. table.  This space can then be re-used
      119     3234                     on the next call to Z8AR$RESERVER.
      120     3235        */
      121     3236
      122     3237    1   Z8AR$FREER: ENTRY(TABLE$);
      123     3238
      124     3239    2        IF TABLE.TOP ~= ADDR (NIL) THEN DO ;
      125     3240    2          TABLE.FIRST->PAGE.NEXT = COMCOM.FREE$ ;
      126     3241    2          COMCOM.FREE$ = TABLE.TOP ;
      127     3242    2        END ;
      128     3243
      129     3244    1        TABLE.TOP = ADDR(NIL);
      130     3245    1        TABLE.BOTTOM = 0 ;
      131     3246    1        TABLE.FLOOR  = 0 ;
      132     3247    1        RETURN;
      133     3248
      134     3249    1   END Z8AR$RESERVER;
      135     3250
      136     3251        %EOD ;

PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:6    
--  Include file information  --

   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8AR$RESERVER.

   Procedure Z8AR$RESERVER requires 107 words for executable code.
   Procedure Z8AR$RESERVER is declared NOAUTO and requires 6 words of local(STATIC) storage.

PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:7    

 Object Unit name= Z8AR$RESERVER                              File name= Z8AR.:Z8A6TOU
 UTS= AUG 09 '97 09:38:11.32 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     6      6  Z8AR$RESERVER
    1  LblCom even  none     1      1  ITERATION
    2   Proc  even  none   107    153  Z8AR$RESERVER
    3  RoData even  none     4      4  Z8AR$RESERVER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  Z8AR$RESERVER
     2    125                  yes      Std        1  Z8AR$FREER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 Z9AR$GET_DYNAMIC_SEGMENT
                       nStd      0 X66_STATIC_1

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:8    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:9    


        1        1        /*M* Z8AR$RESERVER -- Compiler I.L. Table Space Manager. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9        /*P*
       10       10               NAME: Z8AR$RESERVER
       11       11             AUTHOR: MJ GLENN
       12       12            PURPOSE: MANAGES MEMORY AT THE COMPILER TABLE LEVEL.
       13       13        */
       14       14
       15       15        /*D*   NAME: Z8AR$RESERVER
       16       16               CALL: %RESERVE_table (ITEM = %id, POINTER = ptr) ;
       17       17          INTERFACE: Calls Z9AR to get a segment.
       18       18        DESCRIPTION: SYSTEM INDEPENDENT.
       19       19                     MOST TABLE RESERVING IS DONE IN-LINE.  WHEN IT IS
       20       20                     NECESSARY TO ALLOCATE A PAGE FOR A TABLE, THIS
       21       21                     ROUTINE IS THEN CALLED.  IF PAGES HAVE BEEN FREED
       22       22                     FROM PREVIOUS USE, OF COURSE WE WILL USE THOSE FIRST.
       23       23                     OTHERWISE, WE NEED TO ASK THE SYSTEM FOR MORE (THIS
       24       24                     IS A SYSTEM-DEPENDENT FUNCTION). ONCE A PAGE IS ACQUIRED,
       25       25                     WE FILL IT WITH BINARY ZEROS TO AVOID ANY PROBLEMS
       26       26                     WITH STRAY GARBAGE.  ALL POINTERS ASSOCIATED WITH
       27       27                     A GIVEN TABLE ARE EITHER SET, OR RESET, DEPENDING
       28       28                     ON WHETHER THIS IS THE FIRST PAGE ALLOCATED FOR THIS
       29       29                     PARTICULAR TABLE.
       30       30        */
       31       31
       32       32        %EJECT;
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:10   
       33       33        Z8AR$RESERVER:PROC(TABLE$) NOAUTO;

     33  2 000000   000000 700200 xent  Z8AR$RESERV* TSX0  ! X66_STATIC_1
         2 000001   000000 000001 0                  ZERO    0,1

       34       34
       35       35    1        DCL TABLE$ PTR;
       36       36
       37       37        %SET PHASE = 0 ;
       38       38        %INCLUDE Z8A_DEFC;
       39      106        %INCLUDE Z8A_SUPP_MAC;
       40     2506        %INCLUDE Z8A_COMCOM ;
       41     3156
       42     3157    1        DCL PTR$          PTR ;
       43     3158    1        DCL FREE$         PTR ;
       44     3159    1        DCL NEXT$         PTR ;
       45     3160    1        DCL I             SBIN WORD ;
       46     3161    1        DCL Z9AR$GET_DYNAMIC_SEGMENT ENTRY(1) ALTRET;
       47     3162
       48     3163    1        DCL 1 CLEAR DALIGNED BASED,
       49     3164    1              2 PAGE(0:%(PAGE_SIZE - 1)) BIT(36) UNAL;
       50     3165
       51     3166
       52     3167    1        DCL 1 TABLE ALIGNED BASED(TABLE$),
       53     3168    1              2 TOP PTR,               /* FIRST ITEM IN TABLE */
       54     3169    1              2 FIRST PTR,             /* FIRST ITEM IN PAGE  */
       55     3170    1              2 BOTTOM UBIN WORD UNAL, /* NEXT AVAILABLE      */
       56     3171    1              2 FLOOR UBIN WORD UNAL,  /* LAST WORD IN PAGE   */
       57     3172    1              2 SIZE  UBIN WORD UNAL;  /* Size in #pages      */
       58     3173
       59     3174        %EJECT;
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:11   
       60     3175
       61     3176
       62     3177    2        IF COMCOM.FREE$ = ADDR(NIL) THEN DO ;

   3177  2 000002   000425 236000 xsym               LDQ     COMCOM+277
         2 000003   000000 116000 3                  CMPQ    0
         2 000004   000052 601000 2                  TNZ     s:3206

       63     3178    2          CALL Z9AR$GET_DYNAMIC_SEGMENT(/*->*/ PTR$)

   3178  2 000005   000002 630400 3                  EPPR0   2
         2 000006   000001 631400 3                  EPPR1   1
         2 000007   000000 701000 xent               TSX1    Z9AR$GET_DYNAMIC_SEGMENT
         2 000010   000044 702000 2                  TSX2    s:3201

       64     3179    2            WHENRETURN
       65     3180    3              DO;

       66     3181    3                COMCOM.IL_SPACE(0) = COMCOM.IL_SPACE(0) + %BLOCK_SIZE ;

   3181  2 000011   020000 236007                    LDQ     8192,DL
         2 000012   000324 056000 xsym               ASQ     COMCOM+212

       67     3182
       68     3183                     /* Use the first page and put the remaining in the free pool */
       69     3184
       70     3185    3                FREE$ = PINCRW (PTR$, %PAGE_SIZE) ;

   3185  2 000013   000002 236000 0                  LDQ     PTR$
         2 000014   002000 036003                    ADLQ    1024,DU
         2 000015   000003 756000 0                  STQ     FREE$

       71     3186    3                COMCOM.FREE$ = FREE$ ;

   3186  2 000016   000425 756000 xsym               STQ     COMCOM+277

       72     3187
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:12   
       73     3188    4                DO I = 1 TO %(PAGES_PER_BLOCK - 2) ;

   3188  2 000017   000001 235007                    LDA     1,DL
         2 000020   000005 755000 0                  STA     I

       74     3189    4                  NEXT$ = PINCRW (FREE$, %PAGE_SIZE) ;

   3189  2 000021   000003 236000 0                  LDQ     FREE$
         2 000022   002000 036003                    ADLQ    1024,DU
         2 000023   000004 756000 0                  STQ     NEXT$

       75     3190    4                  FREE$ -> PAGE.NEXT = NEXT$ ;

   3190  2 000024   000003 470400 0                  LDP0    FREE$
         2 000025   001777 756100                    STQ     1023,,PR0

       76     3191    4                  FREE$ = NEXT$ ;

   3191  2 000026   000003 756000 0                  STQ     FREE$

       77     3192    4                END ; /* Perform %Blocks_Per_Page - 2 Times */

   3192  2 000027   000005 054000 0                  AOS     I
         2 000030   000005 235000 0                  LDA     I
         2 000031   000006 115007                    CMPA    6,DL
         2 000032   000021 604400 2                  TMOZ    s:3189

       78     3193
       79     3194    3                FREE$ -> PAGE.NEXT = ADDR(NIL) ;

   3194  2 000033   000000 236000 3                  LDQ     0
         2 000034   000003 470400 0                  LDP0    FREE$
         2 000035   001777 756100                    STQ     1023,,PR0

       80     3195    3                TABLE$ -> TABLE.SIZE = TABLE$ -> TABLE.SIZE + 1 ;

   3195  2 000036   000001 471400 0                  LDP1    @TABLE$
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:13   
         2 000037   100000 473500                    LDP3    0,,PR1
         2 000040   300004 235100                    LDA     4,,PR3
         2 000041   000001 035007                    ADLA    1,DL
         2 000042   300004 755100                    STA     4,,PR3

       81     3196    3              END;

   3196  2 000043   000051 710000 2                  TRA     s:3204

       82     3197
       83     3198    2            WHENALTRETURN
       84     3199    3              DO;

       85     3200                     /* We were able to get only one page */
       86     3201    3                TABLE$ -> TABLE.SIZE = TABLE$ -> TABLE.SIZE + 1;

   3201  2 000044   000001 470400 0                  LDP0    @TABLE$
         2 000045   000000 471500                    LDP1    0,,PR0
         2 000046   100004 235100                    LDA     4,,PR1
         2 000047   000001 035007                    ADLA    1,DL
         2 000050   100004 755100                    STA     4,,PR1

       87     3202    3              END;

       88     3203
       89     3204    2        END ;

   3204  2 000051   000064 710000 2                  TRA     s:3211

       90     3205    2        ELSE DO ; /* Freed space is available */

       91     3206    2          TABLE$ -> TABLE.SIZE = TABLE$ -> TABLE.SIZE + 1 ;

   3206  2 000052   000001 470400 0                  LDP0    @TABLE$
         2 000053   000000 471500                    LDP1    0,,PR0
         2 000054   100004 235100                    LDA     4,,PR1
         2 000055   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:14   
         2 000056   100004 755100                    STA     4,,PR1

       92     3207    2          PTR$ = COMCOM.FREE$ ;

   3207  2 000057   000425 236000 xsym               LDQ     COMCOM+277
         2 000060   000002 756000 0                  STQ     PTR$

       93     3208    2          COMCOM.FREE$ = COMCOM.FREE$ -> PAGE.NEXT ;

   3208  2 000061   000425 471400 xsym               LDP1    COMCOM+277
         2 000062   101777 236100                    LDQ     1023,,PR1
         2 000063   000425 756000 xsym               STQ     COMCOM+277

       94     3209    2        END;

       95     3210
       96     3211    1        PTR$ -> CLEAR.PAGE = '0'B;    /* Start with a clean slate */

   3211  2 000064   000002 470400 0                  LDP0    PTR$
         2 000065   010000 220003                    LDX0    4096,DU
         2 000066   000140 100400                    MLR     fill='000'O
         2 000067   000003 000001 3                  ADSC9   3                        cn=0,n=1
         2 000070   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

       97     3212
       98     3213    1        IF TABLE.TOP = ADDR(NIL) THEN   /* IF FIRST PAGE FOR TABLE */

   3213  2 000071   000001 470400 0                  LDP0    @TABLE$
         2 000072   000000 471500                    LDP1    0,,PR0
         2 000073   100000 236100                    LDQ     0,,PR1
         2 000074   000000 116000 3                  CMPQ    0
         2 000075   000101 601000 2                  TNZ     s:3217

       99     3214    1          TABLE.TOP = PTR$;

   3214  2 000076   000002 236000 0                  LDQ     PTR$
         2 000077   100000 756100                    STQ     0,,PR1
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:15   
         2 000100   000110 710000 2                  TRA     s:3221

      100     3215    1        ELSE
      101     3216    2          DO;

      102     3217    2            TABLE.FIRST -> PAGE.NEXT = PTR$;

   3217  2 000101   100001 473500                    LDP3    1,,PR1
         2 000102   000002 236000 0                  LDQ     PTR$
         2 000103   301777 756100                    STQ     1023,,PR3

      103     3218    2            PINCRW(TABLE.FIRST,TABLE.BOTTOM) -> CONT.NEXT = PTR$;

   3218  2 000104   000000 471500                    LDP1    0,,PR0
         2 000105   100002 721100                    LXL1    2,,PR1
         2 000106   100001 473500                    LDP3    1,,PR1
         2 000107   300001 756111                    STQ     1,X1,PR3

      104     3219    2          END;

      105     3220
      106     3221    1        PTR$ -> PAGE.NEXT = ADDR(NIL);

   3221  2 000110   000000 236000 3                  LDQ     0
         2 000111   000002 471400 0                  LDP1    PTR$
         2 000112   101777 756100                    STQ     1023,,PR1

      107     3222    1        TABLE.FIRST = PTR$;

   3222  2 000113   000000 473500                    LDP3    0,,PR0
         2 000114   000002 236000 0                  LDQ     PTR$
         2 000115   300001 756100                    STQ     1,,PR3

      108     3223    1        TABLE.BOTTOM = 0;

   3223  2 000116   000000 471500                    LDP1    0,,PR0
         2 000117   100002 450100                    STZ     2,,PR1
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:16   

      109     3224    1        TABLE.FLOOR = %(PAGE_SIZE - 1);

   3224  2 000120   000000 471500                    LDP1    0,,PR0
         2 000121   001777 235007                    LDA     1023,DL
         2 000122   100003 755100                    STA     3,,PR1

      110     3225
      111     3226    1        RETURN;

   3226  2 000123   000000 221200 0                  LDX1  ! 0
         2 000124   000001 702211                    TSX2  ! 1,X1

      112     3227
      113     3228        %EJECT;
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:17   
      114     3229        /*D*   NAME: Z8AR$FREER
      115     3230               CALL: CALL Z8AR$FREER (Pointer_to_table_info_block) ;
      116     3231          INTERFACE: None.
      117     3232        DESCRIPTION: Frees all the space reserved for a particular
      118     3233                     I.L. table.  This space can then be re-used
      119     3234                     on the next call to Z8AR$RESERVER.
      120     3235        */
      121     3236
      122     3237    1   Z8AR$FREER: ENTRY(TABLE$);

   3237  2 000125   000000 700200 xent  Z8AR$FREER   TSX0  ! X66_STATIC_1
         2 000126   000000 000001 0                  ZERO    0,1

      123     3238
      124     3239    2        IF TABLE.TOP ~= ADDR (NIL) THEN DO ;

   3239  2 000127   000001 470400 0                  LDP0    @TABLE$
         2 000130   000000 471500                    LDP1    0,,PR0
         2 000131   100000 236100                    LDQ     0,,PR1
         2 000132   000000 116000 3                  CMPQ    0
         2 000133   000142 600000 2                  TZE     s:3244

      125     3240    2          TABLE.FIRST->PAGE.NEXT = COMCOM.FREE$ ;

   3240  2 000134   100001 473500                    LDP3    1,,PR1
         2 000135   000425 236000 xsym               LDQ     COMCOM+277
         2 000136   301777 756100                    STQ     1023,,PR3

      126     3241    2          COMCOM.FREE$ = TABLE.TOP ;

   3241  2 000137   000000 471500                    LDP1    0,,PR0
         2 000140   100000 236100                    LDQ     0,,PR1
         2 000141   000425 756000 xsym               STQ     COMCOM+277

      127     3242    2        END ;

      128     3243
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:18   
      129     3244    1        TABLE.TOP = ADDR(NIL);

   3244  2 000142   000000 471500                    LDP1    0,,PR0
         2 000143   000000 236000 3                  LDQ     0
         2 000144   100000 756100                    STQ     0,,PR1

      130     3245    1        TABLE.BOTTOM = 0 ;

   3245  2 000145   000000 471500                    LDP1    0,,PR0
         2 000146   100002 450100                    STZ     2,,PR1

      131     3246    1        TABLE.FLOOR  = 0 ;

   3246  2 000147   000000 471500                    LDP1    0,,PR0
         2 000150   100003 450100                    STZ     3,,PR1

      132     3247    1        RETURN;

   3247  2 000151   000000 221200 0                  LDX1  ! 0
         2 000152   000001 702211                    TSX2  ! 1,X1
      133     3248
      134     3249    1   END Z8AR$RESERVER;
      135     3250
      136     3251        %EOD ;

PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:19   
--  Include file information  --

   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8AR$RESERVER.
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:20   

 **** Variables and constants ****

  ****  Section 000  Data  Z8AR$RESERVER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w PTR         r     1 @TABLE$                    3-0-0/w PTR         r     1 FREE$
     5-0-0/w SBIN        r     1 I                          4-0-0/w PTR         r     1 NEXT$
     2-0-0/w PTR         r     1 PTR$                      *0-0-0/w PTR         r     1 TABLE$

  ****  Section 001 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/d STRC(36864) r     1 CLEAR
     0-0-0/w STRC(72)    r     1 CONT                       0-0-0/w STRC(36864) r     1 PAGE
     0-0-0/w STRC(180)   r     1 TABLE


   Procedure Z8AR$RESERVER requires 107 words for executable code.
PL6.E3A0      #001=Z8AR$RESERVER File=Z8AR.:Z8A6TSI                              SAT 08/09/97 09:38 Page:21   
   Procedure Z8AR$RESERVER is declared NOAUTO and requires 6 words of local(STATIC) storage.

PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:22   
      137        1        /*T***********************************************************/
      138        2        /*T*                                                         */
      139        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      140        4        /*T*                                                         */
      141        5        /*T***********************************************************/
      142        6
      143        7        /*D*   NAME: Z8AR$FREE_SPACE
      144        8               CALL: CALL Z8AR$FREE_SPACE (ptr_to_memory_to_free) ;
      145        9              INPUT: PTR$ -- One chunk of memory to free (size = %PAGE_SIZE).
      146       10             OUTPUT: FREE$ -- The chain of freed blocks is updated.
      147       11        DESCRIPTION: COMCOM.FREE$ is the head link of a list of freed
      148       12                     blocks of memory linked together by the PAGE.NEXT
      149       13                     field.  This routine is used to free a block of
      150       14                     memory that is not part of the compilers tables.
      151       15                     Tables are freed via Z8AR$FREER.
      152       16        */
      153       17
      154       18        %EJECT;
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:23   
      155       19        Z8AR$FREE_SPACE: PROC (PTR$) ;
      156       20
      157       21        %SET PHASE = 0 ;
      158       22        %INCLUDE Z8A_DEFC ;
      159       90        %INCLUDE Z8A_SUPP_MAC ;
      160     2490        %INCLUDE Z8A_COMCOM ;
      161     3140
      162     3141    1   DCL   PTR$                     PTR ; /* PARAMETER */
      163     3142    1   DCL   Z9AR$GET_DYNAMIC_SEGMENT ENTRY (1) ALTRET;
      164     3143    1   DCL   I                        SBIN WORD ;
      165     3144    1   DCL   FREE$                    PTR ;
      166     3145    1   DCL   NEXT$                    PTR ;
      167     3146
      168     3147    1          PTR$->PAGE.NEXT = COMCOM.FREE$ ;
      169     3148    1          COMCOM.FREE$ = PTR$ ;
      170     3149    1          RETURN ;
      171     3150
      172     3151        %EJECT;
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:24   
      173     3152        /*D*   NAME: Z8AR$GET_SPACE
      174     3153               CALL: CALL Z8AR$GET_SPACE (returned_ptr_to_space) ;
      175     3154          INTERFACE: Calls Z9AR if there is no free space available.
      176     3155        DESCRIPTION: Gets a chunk of memory (size = %PAGE_SIZE)
      177     3156                     from freed space or from Z9AR.  This routine is
      178     3157                     used to get a block of memory that is not to be
      179     3158                     used for compiler tables.  Tables are reserved
      180     3159                     through Z8AR$RESERVER.
      181     3160
      182     3161        */
      183     3162
      184     3163        %EJECT;
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:25   
      185     3164    1   Z8AR$GET_SPACE: ENTRY (PTR$) ;
      186     3165
      187     3166    2          IF COMCOM.FREE$ = ADDR(NIL) THEN DO ;
      188     3167    2            CALL Z9AR$GET_DYNAMIC_SEGMENT (PTR$)
      189     3168    2              WHENRETURN
      190     3169    3                DO;
      191     3170    3                  COMCOM.IL_SPACE(0) = COMCOM.IL_SPACE(0) + %BLOCK_SIZE ;
      192     3171
      193     3172                       /* Use the first page and put the remaining in the free pool */
      194     3173
      195     3174    3                  FREE$ = PINCRW (PTR$, %PAGE_SIZE) ;
      196     3175    3                  COMCOM.FREE$ = FREE$ ;
      197     3176
      198     3177    4                  DO I = 1 TO %(PAGES_PER_BLOCK - 2) ;
      199     3178    4                    NEXT$ = PINCRW (FREE$, %PAGE_SIZE) ;
      200     3179    4                    FREE$ -> PAGE.NEXT = NEXT$ ;
      201     3180    4                    FREE$ = NEXT$ ;
      202     3181    4                  END ; /* Perform %Blocks_Per_Page - 2 Times */
      203     3182
      204     3183    3                  FREE$ -> PAGE.NEXT = ADDR(NIL) ;
      205     3184    3              END;
      206     3185
      207     3186    2              WHENALTRETURN
      208     3187    3                DO;
      209     3188                       /* We were able to get only one page */
      210     3189    3                END;
      211     3190
      212     3191    2          END ; /* No Free Space Available */
      213     3192
      214     3193    2          ELSE DO ; /* Freed space is available. */
      215     3194    2            PTR$ = COMCOM.FREE$ ;
      216     3195    2            COMCOM.FREE$ = COMCOM.FREE$ -> PAGE.NEXT ;
      217     3196    2          END ;
      218     3197
      219     3198    1          RETURN ;
      220     3199
      221     3200    1   END Z8AR$FREE_SPACE ;
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:26   

PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:27   
--  Include file information  --

   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8AR$FREE_SPACE.

   Procedure Z8AR$FREE_SPACE requires 48 words for executable code.
   Procedure Z8AR$FREE_SPACE requires 8 words of local(AUTO) storage.

    No errors detected in file Z8AR.:Z8A6TSI    .

PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:28   

 Object Unit name= Z8AR$FREE_SPACE                            File name= Z8AR.:Z8A6TOU
 UTS= AUG 09 '97 09:38:38.12 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1   Proc  even  none    48     60  Z8AR$FREE_SPACE
    2  RoData even  none     2      2  Z8AR$FREE_SPACE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  Z8AR$FREE_SPACE
     1     11                  yes      Std        1  Z8AR$GET_SPACE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 Z9AR$GET_DYNAMIC_SEGMENT
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:29   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:30   


      137        1        /*T***********************************************************/
      138        2        /*T*                                                         */
      139        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      140        4        /*T*                                                         */
      141        5        /*T***********************************************************/
      142        6
      143        7        /*D*   NAME: Z8AR$FREE_SPACE
      144        8               CALL: CALL Z8AR$FREE_SPACE (ptr_to_memory_to_free) ;
      145        9              INPUT: PTR$ -- One chunk of memory to free (size = %PAGE_SIZE).
      146       10             OUTPUT: FREE$ -- The chain of freed blocks is updated.
      147       11        DESCRIPTION: COMCOM.FREE$ is the head link of a list of freed
      148       12                     blocks of memory linked together by the PAGE.NEXT
      149       13                     field.  This routine is used to free a block of
      150       14                     memory that is not part of the compilers tables.
      151       15                     Tables are freed via Z8AR$FREER.
      152       16        */
      153       17
      154       18        %EJECT;
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:31   
      155       19        Z8AR$FREE_SPACE: PROC (PTR$) ;

     19  1 000000   000000 700200 xent  Z8AR$FREE_S* TSX0  ! X66_AUTO_1
         1 000001   000010 000001                    ZERO    8,1

      156       20
      157       21        %SET PHASE = 0 ;
      158       22        %INCLUDE Z8A_DEFC ;
      159       90        %INCLUDE Z8A_SUPP_MAC ;
      160     2490        %INCLUDE Z8A_COMCOM ;
      161     3140
      162     3141    1   DCL   PTR$                     PTR ; /* PARAMETER */
      163     3142    1   DCL   Z9AR$GET_DYNAMIC_SEGMENT ENTRY (1) ALTRET;
      164     3143    1   DCL   I                        SBIN WORD ;
      165     3144    1   DCL   FREE$                    PTR ;
      166     3145    1   DCL   NEXT$                    PTR ;
      167     3146
      168     3147    1          PTR$->PAGE.NEXT = COMCOM.FREE$ ;

   3147  1 000002   200003 470500                    LDP0    @PTR$,,AUTO
         1 000003   000000 471500                    LDP1    0,,PR0
         1 000004   000425 236000 xsym               LDQ     COMCOM+277
         1 000005   101777 756100                    STQ     1023,,PR1

      169     3148    1          COMCOM.FREE$ = PTR$ ;

   3148  1 000006   000000 236100                    LDQ     0,,PR0
         1 000007   000425 756000 xsym               STQ     COMCOM+277

      170     3149    1          RETURN ;

   3149  1 000010   000000 702200 xent               TSX2  ! X66_ARET

      171     3150
      172     3151        %EJECT;
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:32   
      173     3152        /*D*   NAME: Z8AR$GET_SPACE
      174     3153               CALL: CALL Z8AR$GET_SPACE (returned_ptr_to_space) ;
      175     3154          INTERFACE: Calls Z9AR if there is no free space available.
      176     3155        DESCRIPTION: Gets a chunk of memory (size = %PAGE_SIZE)
      177     3156                     from freed space or from Z9AR.  This routine is
      178     3157                     used to get a block of memory that is not to be
      179     3158                     used for compiler tables.  Tables are reserved
      180     3159                     through Z8AR$RESERVER.
      181     3160
      182     3161        */
      183     3162
      184     3163        %EJECT;
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:33   
      185     3164    1   Z8AR$GET_SPACE: ENTRY (PTR$) ;

   3164  1 000011   000000 700200 xent  Z8AR$GET_SP* TSX0  ! X66_AUTO_1
         1 000012   000010 000001                    ZERO    8,1

      186     3165
      187     3166    2          IF COMCOM.FREE$ = ADDR(NIL) THEN DO ;

   3166  1 000013   000425 236000 xsym               LDQ     COMCOM+277
         1 000014   000000 116000 2                  CMPQ    0
         1 000015   000052 601000 1                  TNZ     s:3194

      188     3167    2            CALL Z9AR$GET_DYNAMIC_SEGMENT (PTR$)

   3167  1 000016   200003 630500                    EPPR0   @PTR$,,AUTO
         1 000017   000001 631400 2                  EPPR1   1
         1 000020   000000 701000 xent               TSX1    Z9AR$GET_DYNAMIC_SEGMENT
         1 000021   000051 702000 1                  TSX2    s:3191

      189     3168    2              WHENRETURN
      190     3169    3                DO;

      191     3170    3                  COMCOM.IL_SPACE(0) = COMCOM.IL_SPACE(0) + %BLOCK_SIZE ;

   3170  1 000022   020000 236007                    LDQ     8192,DL
         1 000023   000324 056000 xsym               ASQ     COMCOM+212

      192     3171
      193     3172                       /* Use the first page and put the remaining in the free pool */
      194     3173
      195     3174    3                  FREE$ = PINCRW (PTR$, %PAGE_SIZE) ;

   3174  1 000024   200003 470500                    LDP0    @PTR$,,AUTO
         1 000025   000000 236100                    LDQ     0,,PR0
         1 000026   002000 036003                    ADLQ    1024,DU
         1 000027   200005 756100                    STQ     FREE$,,AUTO

PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:34   
      196     3175    3                  COMCOM.FREE$ = FREE$ ;

   3175  1 000030   000425 756000 xsym               STQ     COMCOM+277

      197     3176
      198     3177    4                  DO I = 1 TO %(PAGES_PER_BLOCK - 2) ;

   3177  1 000031   000001 235007                    LDA     1,DL
         1 000032   200004 755100                    STA     I,,AUTO

      199     3178    4                    NEXT$ = PINCRW (FREE$, %PAGE_SIZE) ;

   3178  1 000033   200005 236100                    LDQ     FREE$,,AUTO
         1 000034   002000 036003                    ADLQ    1024,DU
         1 000035   200006 756100                    STQ     NEXT$,,AUTO

      200     3179    4                    FREE$ -> PAGE.NEXT = NEXT$ ;

   3179  1 000036   200005 470500                    LDP0    FREE$,,AUTO
         1 000037   001777 756100                    STQ     1023,,PR0

      201     3180    4                    FREE$ = NEXT$ ;

   3180  1 000040   200005 756100                    STQ     FREE$,,AUTO

      202     3181    4                  END ; /* Perform %Blocks_Per_Page - 2 Times */

   3181  1 000041   200004 054100                    AOS     I,,AUTO
         1 000042   200004 235100                    LDA     I,,AUTO
         1 000043   000006 115007                    CMPA    6,DL
         1 000044   000033 604400 1                  TMOZ    s:3178

      203     3182
      204     3183    3                  FREE$ -> PAGE.NEXT = ADDR(NIL) ;

   3183  1 000045   000000 236000 2                  LDQ     0
         1 000046   200005 470500                    LDP0    FREE$,,AUTO
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:35   
         1 000047   001777 756100                    STQ     1023,,PR0

      205     3184    3              END;

   3184  1 000050   000051 710000 1                  TRA     s:3191

      206     3185
      207     3186    2              WHENALTRETURN
      208     3187    3                DO;

      209     3188                       /* We were able to get only one page */
      210     3189    3                END;

      211     3190
      212     3191    2          END ; /* No Free Space Available */

   3191  1 000051   000057 710000 1                  TRA     s:3198

      213     3192
      214     3193    2          ELSE DO ; /* Freed space is available. */

      215     3194    2            PTR$ = COMCOM.FREE$ ;

   3194  1 000052   200003 470500                    LDP0    @PTR$,,AUTO
         1 000053   000000 756100                    STQ     0,,PR0

      216     3195    2            COMCOM.FREE$ = COMCOM.FREE$ -> PAGE.NEXT ;

   3195  1 000054   000425 471400 xsym               LDP1    COMCOM+277
         1 000055   101777 236100                    LDQ     1023,,PR1
         1 000056   000425 756000 xsym               STQ     COMCOM+277

      217     3196    2          END ;

      218     3197
      219     3198    1          RETURN ;

PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:36   
   3198  1 000057   000000 702200 xent               TSX2  ! X66_ARET
      220     3199
      221     3200    1   END Z8AR$FREE_SPACE ;

PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:37   
--  Include file information  --

   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8AR$FREE_SPACE.
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:38   

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PTR$                      5-0-0/w PTR         r     1 FREE$
     4-0-0/w SBIN        r     1 I                          6-0-0/w PTR         r     1 NEXT$
    *0-0-0/w PTR         r     1 PTR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(72)          1 CONT
     0-0-0/w STRC(36864) r     1 PAGE


   Procedure Z8AR$FREE_SPACE requires 48 words for executable code.
   Procedure Z8AR$FREE_SPACE requires 8 words of local(AUTO) storage.
PL6.E3A0      #002=Z8AR$FREE_SPACE File=Z8AR.:Z8A6TSI                            SAT 08/09/97 09:38 Page:39   

    No errors detected in file Z8AR.:Z8A6TSI    .
