

10:57 AUG 20 '97 zbm$idf$idf_pkg:spec.:ZBC3TSI                             1    
    1      /* $Header: idf_pkg.spec,v 1.1 87/01/05 17:16:28 ceriel Exp $ */
    2      /* IDENTIFIER DESCRIPTOR */
    3
    4      /* This a generic package for maintaining a name list */
    5
    6      /* Instantiation parameters, supplied by #define, are :
    7       IDF_TYPE: the type of the user-defined part of the idf-structure,
    8       IDF_NAME: the selector name for this field in the idf_structure, and
    9       IDF_HSIZE: the number of significant characters for hashing
   10      */
   11
   12      #ifndef IDF_NAME
   13      #define IDF_NAME id_user
   14      #endif
   15
   16      struct idf   {
   17       struct idf *next; /* links idf-structures together */
   18       char *id_text;    /* string representing the name */
   19      #ifdef IDF_TYPE
   20       IDF_TYPE IDF_NAME;   /* user defined type and selector */
   21      #endif
   22      };
   23
   24      /*  init_idf()
   25
   26       Initializes the namelist
   27      */
   28      extern       init_idf();
   29
   30      /*  struct idf * str2idf(tg, cp)
   31          char *tg;
   32          int cp;
   33
   34       Adds the string indicated by "tg" to the namelist, and returns a
   35       pointer to the entry.
   36       If cp > 0, a copy of tg is made for id_text, otherwise tg itself
   37       is used.
10:57 AUG 20 '97 zbm$idf$idf_pkg:spec.:ZBC3TSI                             2    
   38       If cp < 0, the string is not entered, but only looked for.
   39      */
   40      extern struct idf *   str2idf();
   41
   42      #define   findidf(tg) str2idf(tg, -1)
   43

