VERSION E05

CALF.D00   OU Name=QCC$CDB                 File=QCC$CDB.:E05TSI                 WED JUL 30 '97 05:03 Page:2
                                     1  *M*  QCC$CDB:  Convert decimal to binary.
                                     2  *T***********************************************************
                                     3  *T*                                                         *
                                     4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5  *T*                                                         *
                                     6  *T***********************************************************
                                     7  *
                                     8  *********************************************************************
                                     9  *                                                                   *
                                    10  *     C O N V E R T     D E C I M A L     T O     B I N A R Y       *
                                    11  *                                                                   *
                                    12  *********************************************************************
                                    13  *
                                    14  *P*  NAME:         QCC$CDB
                                    15  *P*  PURPOSE:      Decimal to binary conversion
                                    16  *P*  DESCRIPTION:  This routine performs decimal to binary conversion
                                      ::.
                                    17  *P*                The result can be verified by specifying SIZE_ERRO
                                      ::R
                                    18  *P*                in the parameter.  This specification causes this
                                    19  *P*                routine to do a test operation checking for over-
                                    20  *P*                flow.  If overflow is dected this routine altrets
                                    21  *P*                without modifying the result.
                                    22        LISTINC
                                    23        INCLUDE   QCC_ASMEQU_E
                                     1+ *M*  QCC_ASMEQU_E:  Common EQUates for assembly routines.
                                     2+ *T***********************************************************
                                     3+ *T*                                                         *
                                     4+ *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5+ *T*                                                         *
                                     6+ *T***********************************************************
         00000000                    7+ ZERO              EQU 0
         00000001                    8+ ONE               EQU 1
         00000002                    9+ TWO               EQU 2
         00000000                   10+ CIP_DESC_STRUC    EQU 0
         00000000                   11+ SOURCE_DESC       EQU 0
CALF.D00   OU Name=QCC$CDB                 File=QCC$CDB.:E05TSI                 WED JUL 30 '97 05:03 Page:3
         00000006                   12+ SOURCE_PTR        EQU 6
         00000002                   13+ TARGET_DESC       EQU 2
         00000008                   14+ TARGET_PTR        EQU 8
         00000004                   15+ AUX_DESC          EQU 4
         0000000A                   16+ AUX_PTR           EQU 10
         0000000C                   17+ SOURCE_LEN        EQU 12
         0000000D                   18+ TARGET_LEN        EQU 13
         0000000E                   19+ AUX_LEN           EQU 14
         0000000C                   20+ ARG_LEN           EQU SOURCE_LEN
         0000000D                   21+ ARG_LIST_LEN      EQU TARGET_LEN
         0000000C                   22+ SOURCE_SHIFT_CNT  EQU SOURCE_LEN
         0000000D                   23+ TARGET_SHIFT_CNT  EQU TARGET_LEN
         0000000E                   24+ AUX_SHIFT_CNT     EQU AUX_LEN
         0000000E                   25+ MOP_LEN           EQU AUX_LEN
         0000000F                   26+ SOURCE_DEC        EQU 15
         00000010                   27+ TARGET_DEC        EQU 16
         00000011                   28+ AUX_DEC           EQU 17
         0000000F                   29+ SOURCE_INX        EQU SOURCE_DEC
         00000010                   30+ TARGET_INX        EQU TARGET_DEC
         00000011                   31+ AUX_INX           EQU AUX_DEC
         00000011                   32+ RESULT_DEC        EQU AUX_DEC
         00000012                   33+ ELEM_LEN          EQU 18
         00000013                   34+ ELEM_LIST_LEN     EQU 19
         00000014                   35+ INT_RESULT_LEN    EQU 20
         00000015                   36+ PIC_STRING_DEC    EQU 21
         00000014                   37+ SRCH_RESULT_NUM   EQU INT_RESULT_LEN
         00000015                   38+ SRCH_RESULT_DISP  EQU PIC_STRING_DEC
         00000014                   39+ VRFY_RESULT_DISP  EQU INT_RESULT_LEN
         00000016                   40+ SIZE_ERROR        EQU 22
         00000016                   41+ FILL              EQU SIZE_ERROR
         00000017                   42+ ROUND             EQU 23
         00000017                   43+ COMP_RESULT       EQU ROUND
         00000017                   44+ TARGET_SIZE       EQU ROUND
                                    24        OUNAME    QCC$CDB
                                    25        ENTDEF    QCC$CDB
                                    26        SYMREF    QI_SWORK
CALF.D00   OU Name=QCC$CDB                 File=QCC$CDB.:E05TSI                 WED JUL 30 '97 05:03 Page:4
                                    27        SYMREF    QI_SWORK_2
                                    28  *D*  NAME:         QCC$CDB
                                    29  *D*  CALL:         CALL QCC$CDB ( cip-desc-struc ) ALTRET ( label )
                                    30  *D*  PARAMETERS:   cip-desc-struc contains:
                                    31  *D*                 1. source descriptor
                                    32  *D*                 2. target descriptor
                                    33  *D*                 3. source decimal place
                                    34  *D*                 4. size error (optional)
                                    35  *D*  INTERFACE:
                                    36  *D*  ENVIRONMENT:  Called by the interpreter on behalf of an FPL
                                    37  *D*                routine;  may be called by any language which
                                    38  *D*                adheres to the standard calling sequence
                                    39  *D*  INPUT:        cip-desc-struc
                                    40  *D*  OUTPUT:       Converted result referred to by the second data
                                    41  *D*                descriptor in cip-desc-struc.
                                    42  *D*  SCRATCH:
                                    43  *D*  DESCRIPTION:  This routine converts decimal fields into binary
                                    44  *D*                values.  If the decimal places are not equal, the
                                    45  *D*                source is aligned to the target.  If SIZE_ERROR
                                    46  *D*                is specified, the pointer to the target is
                                    47  *D*                replaced with a pointer to a temp area, the CIP
                                    48  *D*                is fired, and we check to see is overflow is
                                    49  *D*                imminent.  If no overflow is detected, we restore
                                    50  *D*                the pointer to the target and execute the
                                    51  *D*                instruction.  If there is an overflow condition,
                                    52  *D*                altreturn.  Note that when this routine altrets
                                    53  *D*                the target remains unchanged.
                                    54  *
                                    55  *
         000000(0)                  56             SECT      PROC,ZERO
         000000(0)                  57  QCC$CDB    ALIGN     WORD
                                    58  *
 00000   BCC3 0000                  59             LDB,B3    CIP_DESC_STRUC,B3    /* B3 <- ADDR(cip_struc) */
 00002   F843 0016                  60             LDR,R7    SIZE_ERROR,B3
 00004   5C00                       61             LDV,R5    0           /* Binary target dec is always 0 */
 00005   D243 000F                  62             SUB,R5    SOURCE_DEC,B3
CALF.D00   OU Name=QCC$CDB                 File=QCC$CDB.:E05TSI                 WED JUL 30 '97 05:03 Page:5
 00007   000C                       63             LRDB                      /* Load Remote Desciptor Base */
 00008   5981 0017                  64             BNEZ,R5   NEEDS_ALIGN,PREL  /* Go if CIP 1 dec pos ~= 0 */
                                    65  *
                                    66  * HERE -> NO ALIGNMENT NEEDED
                                    67  *
 0000A   7901 000F                  68             BEZ,R7    DO_REMOTE_OP,PREL  /* Go if no SIZE_ERR check */
 0000C   9CC3 0008                  69             LDB,B1    TARGET_PTR,B3 /* Save original target address */
 0000E   AB80 000000(0)s            70             LAB,B2    QI_SWORK        /* Get addr of ovfl temp area */
 00011   AFC3 0008                  71             STB,B2    TARGET_PTR,B3 /* Target ptr <- ADDR(temparea) */
 00013   002A 0000 0010             72             CDB       REMOTE(ZERO),REMOTE(ONE)   /* Issue ovfl test */
 00016   9FC3 0008                  73             STB,B1    TARGET_PTR,B3 /* Target ptr <- old target ptr */
 00018   1301 003E                  74             CBOV      SIZE_ERROR_OCCUR,PREL     /* Go if SIZE_ERROR */
                                    75  *
         00001A(0)                  76  DO_REMOTE_OP    ALIGN     WORD
 0001A   002A 0000 0010             77             CDB       REMOTE(ZERO),REMOTE(ONE)
                                    78             INCLUDE   QCC_ASMRET_C
                                     1+ *M*  QCC_ASMRET_C:  Common normal RETURN code for assembly routines.
                                     2+ *T***********************************************************
                                     3+ *T*                                                         *
                                     4+ *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5+ *T*                                                         *
                                     6+ *T***********************************************************
 0001D   437F                        7+            CSYNC
 0001E   C3C6 0001                   8+            LNJ,B4    1,B6                     /* RETURN(NORMAL) */
                                    79  *
                                    80  * HERE -> ALIGNMENT IS NEEDED
                                    81  *
         000020(0)                  82  NEEDS_ALIGN     ALIGN     WORD
 00020   DB80 000000(1)s            83             LAB,B5    QI_SWORK_2          /* Get addr of align temp */
 00023   2C00                       84             LDV,R2    0                   /* Clear overflow flag    */
 00024   0025 0000 3F850000         85             DMC       REMOTE(ZERO),PACKED(0,B5,0,31,TRAILING)
 00028   437F                       86             CSYNC
 00029   5A01 000B                  87             BGZ,R5    SHIFT_LEFT,PREL  /* determine shift direction */
                                    88  *
                                    89  * HERE -> SHIFT RIGHT
                                    90  *
CALF.D00   OU Name=QCC$CDB                 File=QCC$CDB.:E05TSI                 WED JUL 30 '97 05:03 Page:6
 0002B   8255                       91             NEG       R5                             /* R5 <- (-R5) */
 0002C   D470 0080                  92             OR,R5     ='80'X                 /* Set shift direction */
 0002E   002E 3F850000              93             DSH       PACKED(0,B5,0,31,TRAILING)     /* Shift right */
 00031   00780000
 00033   4381 0009                  94             CSNCB     CHECK_SIZE_ERROR,PREL
                                    95  *
         000035(0)                  96  SHIFT_LEFT      ALIGN     WORD
 00035   002E 3F850000              97             DSH       PACKED(0,B5,0,31,TRAILING)      /* Shift left */
 00038   00780000
 0003A   1381 0002                  98             CBNOV     CHECK_SIZE_ERROR,PREL        /* Go if NO ovfl */
 0003C   2C01                       99             LDV,R2    1                   /* Set overflow flag      */
                                   100  *
         00003D(0)                 101  CHECK_SIZE_ERROR ALIGN    WORD
 0003D   7901 0012                 102             BEZ,R7    DO_INLINE_OP,PREL  /* Go if NO SIZE_ERR check */
 0003F   2981 0017                 103             BNEZ,R2   SIZE_ERROR_OCCUR,PREL /* Branch if overflow   */
 00041   9CC3 0008                 104             LDB,B1    TARGET_PTR,B3     /* Save original target ptr */
 00043   AB80 000000(0)s           105             LAB,B2    QI_SWORK        /* Get addr of temp test area */
 00046   AFC3 0008                 106             STB,B2    TARGET_PTR,B3 /* Target ptr <- ADDR(testarea) */
 00048   002A 3F850000 0010        107             CDB       PACKED(0,B5,0,31,TRAILING),REMOTE(ONE) /*test */
 0004C   9FC3 0008                 108             STB,B1    TARGET_PTR,B3 /* target ptr <- old target ptr */
 0004E   1301 0008                 109             CBOV      SIZE_ERROR_OCCUR,PREL           /* Go if ovfl */
                                   110  *
         000050(0)                 111  DO_INLINE_OP    ALIGN     WORD
 00050   002A 3F850000 0010        112             CDB       PACKED(0,B5,0,31,TRAILING),REMOTE(ONE)
                                   113             INCLUDE   QCC_ASMRET_C
                                     1+ *M*  QCC_ASMRET_C:  Common normal RETURN code for assembly routines.
                                     2+ *T***********************************************************
                                     3+ *T*                                                         *
                                     4+ *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5+ *T*                                                         *
                                     6+ *T***********************************************************
 00054   437F                        7+            CSYNC
 00055   C3C6 0001                   8+            LNJ,B4    1,B6                     /* RETURN(NORMAL) */
                                   114  *
         000057(0)                 115  SIZE_ERROR_OCCUR ALIGN    WORD
                                   116             INCLUDE   QCC_ASMALTRET_C
CALF.D00   OU Name=QCC$CDB                 File=QCC$CDB.:E05TSI                 WED JUL 30 '97 05:03 Page:7
                                     1+ *M*  QCC_ASMALTRET_C:  Common ALTRETURN code for assembly routines.
                                     2+ *T***********************************************************
                                     3+ *T*                                                         *
                                     4+ *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                     5+ *T*                                                         *
                                     6+ *T***********************************************************
 00057   437F                        7+            CSYNC
 00058   9846 0000                   8+            LDR,R1    0,B6
 0005A   C396                        9+            LNJ,B4    ,B6,R1                     /* ALTRETURN */
                                   117  *
                                   118             END
      No Errors in this assembly.
